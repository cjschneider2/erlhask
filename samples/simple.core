module 'simple' ['call_lambda'/0,
		 'do'/1,
		 'lambda'/1,
		 'main'/0,
		 'module_info'/0,
		 'module_info'/1]
    attributes []
'main'/0 =
    %% Line 8
    fun () ->
	let <X> =
	    %% Line 9
	    call 'random':'uniform'
		()
	in  let <Y> =
		%% Line 10
		call 'erlang':'+'
		    (X, 2)
	    in  %% Line 11
		call 'erlang':'display'
		    (Y)
'lambda'/1 =
    %% Line 13
    fun (_cor0) ->
	let <X> =
	    %% Line 14
	    call 'random':'uniform'
		()
	in  %% Line 15
	    ( fun (_cor3) ->
		  let <_cor2> =
		      %% Line 16
		      call 'erlang':'+'
			  (_cor0, X)
		  in  %% Line 16
		      call 'erlang':'+'
			  (_cor2, _cor3)
	      -| [{'id',{0,0,'-lambda/1-fun-0-'}}] )
'call_lambda'/0 =
    %% Line 19
    fun () ->
	let <L> =
	    %% Line 20
	    apply 'lambda'/1
		(1)
	in  %% Line 21
	    apply L
		(5)
'do'/1 =
    %% Line 23
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 24
	    call 'random':'uniform'
		()
	in  %% Line 24
	    call 'erlang':'+'
		(_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('simple')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('simple', _cor0)
end