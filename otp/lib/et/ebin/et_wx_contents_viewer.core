module 'et_wx_contents_viewer' ['code_change'/3,
				'handle_call'/3,
				'handle_cast'/2,
				'handle_event'/2,
				'handle_info'/2,
				'init'/1,
				'module_info'/0,
				'module_info'/1,
				'start_link'/1,
				'stop'/1,
				'terminate'/2]
    attributes [%% Line 25
		'behaviour' =
		    %% Line 25
		    ['wx_object'],
		%% Line 23
		'type' =
		    %% Line 23
		    [{{'record','event'},[{'record_field',24,{'atom',24,'detail_level'}}|[{'record_field',25,{'atom',25,'trace_ts'}}|[{'record_field',27,{'atom',27,'event_ts'}}|[{'record_field',28,{'atom',28,'from'}}|[{'record_field',29,{'atom',29,'to'}}|[{'record_field',30,{'atom',30,'label'}}|[{'record_field',31,{'atom',31,'contents'}}]]]]]]],[]}],
		%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','filter'},[{'record_field',26,{'atom',26,'name'}}|[{'record_field',26,{'atom',26,'function'}}]],[]}],
		%% Line 25
		'type' =
		    %% Line 25
		    [{{'record','wx'},[{'typed_record_field',{'record_field',25,{'atom',25,'id'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'obj'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'remote_type',26,[{'atom',26,'wx'}|[{'atom',26,'wx_object'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'userData'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'type',27,'term',[]}]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'event'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'type',28,'event',[]}]]}}]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{'wx',{'type',31,'record',[{'atom',31,'wx'}]},[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','wxNavigationKey'},[{'typed_record_field',{'record_field',35,{'atom',35,'type'}},{'type',35,'union',[{'atom',35,'undefined'}|[{'type',35,'wxNavigationKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'flags'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'integer',[]}]]}}|[{'typed_record_field',{'record_field',37,{'atom',37,'focus'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'remote_type',37,[{'atom',37,'wxWindow'}|[{'atom',37,'wxWindow'}|[[]]]]}]]}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{'wxNavigationKeyEventType',{'atom',38,'navigation_key'},[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{'wxNavigationKey',{'type',39,'record',[{'atom',39,'wxNavigationKey'}]},[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','wxSash'},[{'typed_record_field',{'record_field',41,{'atom',41,'type'}},{'type',41,'union',[{'atom',41,'undefined'}|[{'type',41,'wxSashEventType',[]}]]}}|[{'typed_record_field',{'record_field',42,{'atom',42,'edge'}},{'type',42,'union',[{'atom',42,'undefined'}|[{'remote_type',42,[{'atom',42,'wx'}|[{'atom',42,'wx_enum'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'dragRect'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'tuple',[{'ann_type',43,[{'var',43,'X'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'Y'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'W'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'H'}|[{'type',43,'integer',[]}]]}]]]]}]]}}|[{'typed_record_field',{'record_field',44,{'atom',44,'dragStatus'}},{'type',44,'union',[{'atom',44,'undefined'}|[{'remote_type',44,[{'atom',44,'wx'}|[{'atom',44,'wx_enum'}|[[]]]]}]]}}]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'wxSashEventType',{'atom',45,'sash_dragged'},[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{'wxSash',{'type',46,'record',[{'atom',46,'wxSash'}]},[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','wxList'},[{'typed_record_field',{'record_field',48,{'atom',48,'type'}},{'type',48,'union',[{'atom',48,'undefined'}|[{'type',48,'wxListEventType',[]}]]}}|[{'typed_record_field',{'record_field',49,{'atom',49,'code'}},{'type',49,'union',[{'atom',49,'undefined'}|[{'type',49,'integer',[]}]]}}|[{'typed_record_field',{'record_field',50,{'atom',50,'oldItemIndex'}},{'type',50,'union',[{'atom',50,'undefined'}|[{'type',50,'integer',[]}]]}}|[{'typed_record_field',{'record_field',51,{'atom',51,'itemIndex'}},{'type',51,'union',[{'atom',51,'undefined'}|[{'type',51,'integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'col'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'pointDrag'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'tuple',[{'ann_type',53,[{'var',53,'X'}|[{'type',53,'integer',[]}]]}|[{'ann_type',53,[{'var',53,'Y'}|[{'type',53,'integer',[]}]]}]]}]]}}]]]]]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{'wxListEventType',{'type',54,'union',[{'atom',54,'command_list_begin_drag'}|[{'atom',54,'command_list_begin_rdrag'}|[{'atom',54,'command_list_begin_label_edit'}|[{'atom',54,'command_list_end_label_edit'}|[{'atom',54,'command_list_delete_item'}|[{'atom',54,'command_list_delete_all_items'}|[{'atom',54,'command_list_key_down'}|[{'atom',54,'command_list_insert_item'}|[{'atom',54,'command_list_col_click'}|[{'atom',54,'command_list_col_right_click'}|[{'atom',54,'command_list_col_begin_drag'}|[{'atom',54,'command_list_col_dragging'}|[{'atom',54,'command_list_col_end_drag'}|[{'atom',54,'command_list_item_selected'}|[{'atom',54,'command_list_item_deselected'}|[{'atom',54,'command_list_item_right_click'}|[{'atom',54,'command_list_item_middle_click'}|[{'atom',54,'command_list_item_activated'}|[{'atom',54,'command_list_item_focused'}|[{'atom',54,'command_list_cache_hint'}]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{'wxList',{'type',55,'record',[{'atom',55,'wxList'}]},[]}],
		%% Line 57
		'type' =
		    %% Line 57
		    [{{'record','wxNotebook'},[{'typed_record_field',{'record_field',57,{'atom',57,'type'}},{'type',57,'union',[{'atom',57,'undefined'}|[{'type',57,'wxNotebookEventType',[]}]]}}],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{'wxNotebookEventType',{'type',58,'union',[{'atom',58,'command_notebook_page_changed'}|[{'atom',58,'command_notebook_page_changing'}]]},[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{'wxNotebook',{'type',59,'record',[{'atom',59,'wxNotebook'}]},[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','wxDisplayChanged'},[{'typed_record_field',{'record_field',61,{'atom',61,'type'}},{'type',61,'union',[{'atom',61,'undefined'}|[{'type',61,'wxDisplayChangedEventType',[]}]]}}],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{'wxDisplayChangedEventType',{'atom',62,'display_changed'},[]}],
		%% Line 63
		'type' =
		    %% Line 63
		    [{'wxDisplayChanged',{'type',63,'record',[{'atom',63,'wxDisplayChanged'}]},[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','wxErase'},[{'typed_record_field',{'record_field',65,{'atom',65,'type'}},{'type',65,'union',[{'atom',65,'undefined'}|[{'type',65,'wxEraseEventType',[]}]]}}|[{'typed_record_field',{'record_field',66,{'atom',66,'dc'}},{'type',66,'union',[{'atom',66,'undefined'}|[{'remote_type',66,[{'atom',66,'wxDC'}|[{'atom',66,'wxDC'}|[[]]]]}]]}}]],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{'wxEraseEventType',{'atom',67,'erase_background'},[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{'wxErase',{'type',68,'record',[{'atom',68,'wxErase'}]},[]}],
		%% Line 70
		'type' =
		    %% Line 70
		    [{{'record','wxKey'},[{'typed_record_field',{'record_field',70,{'atom',70,'type'}},{'type',70,'union',[{'atom',70,'undefined'}|[{'type',70,'wxKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',71,{'atom',71,'x'}},{'type',71,'union',[{'atom',71,'undefined'}|[{'type',71,'integer',[]}]]}}|[{'typed_record_field',{'record_field',72,{'atom',72,'y'}},{'type',72,'union',[{'atom',72,'undefined'}|[{'type',72,'integer',[]}]]}}|[{'typed_record_field',{'record_field',73,{'atom',73,'keyCode'}},{'type',73,'union',[{'atom',73,'undefined'}|[{'type',73,'integer',[]}]]}}|[{'typed_record_field',{'record_field',74,{'atom',74,'controlDown'}},{'type',74,'union',[{'atom',74,'undefined'}|[{'type',74,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'shiftDown'}},{'type',75,'union',[{'atom',75,'undefined'}|[{'type',75,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',76,{'atom',76,'altDown'}},{'type',76,'union',[{'atom',76,'undefined'}|[{'type',76,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',77,{'atom',77,'metaDown'}},{'type',77,'union',[{'atom',77,'undefined'}|[{'type',77,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',78,{'atom',78,'scanCode'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',79,{'atom',79,'uniChar'}},{'type',79,'union',[{'atom',79,'undefined'}|[{'type',79,'integer',[]}]]}}|[{'typed_record_field',{'record_field',80,{'atom',80,'rawCode'}},{'type',80,'union',[{'atom',80,'undefined'}|[{'type',80,'integer',[]}]]}}|[{'typed_record_field',{'record_field',81,{'atom',81,'rawFlags'}},{'type',81,'union',[{'atom',81,'undefined'}|[{'type',81,'integer',[]}]]}}]]]]]]]]]]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{'wxKeyEventType',{'type',82,'union',[{'atom',82,'char'}|[{'atom',82,'char_hook'}|[{'atom',82,'key_down'}|[{'atom',82,'key_up'}]]]]},[]}],
		%% Line 83
		'type' =
		    %% Line 83
		    [{'wxKey',{'type',83,'record',[{'atom',83,'wxKey'}]},[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{{'record','wxWindowDestroy'},[{'typed_record_field',{'record_field',85,{'atom',85,'type'}},{'type',85,'union',[{'atom',85,'undefined'}|[{'type',85,'wxWindowDestroyEventType',[]}]]}}],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{'wxWindowDestroyEventType',{'atom',86,'destroy'},[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{'wxWindowDestroy',{'type',87,'record',[{'atom',87,'wxWindowDestroy'}]},[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','wxCalendar'},[{'typed_record_field',{'record_field',89,{'atom',89,'type'}},{'type',89,'union',[{'atom',89,'undefined'}|[{'type',89,'wxCalendarEventType',[]}]]}}],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{'wxCalendarEventType',{'type',90,'union',[{'atom',90,'calendar_sel_changed'}|[{'atom',90,'calendar_day_changed'}|[{'atom',90,'calendar_month_changed'}|[{'atom',90,'calendar_year_changed'}|[{'atom',90,'calendar_doubleclicked'}|[{'atom',90,'calendar_weekday_clicked'}]]]]]]},[]}],
		%% Line 91
		'type' =
		    %% Line 91
		    [{'wxCalendar',{'type',91,'record',[{'atom',91,'wxCalendar'}]},[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','wxSplitter'},[{'typed_record_field',{'record_field',93,{'atom',93,'type'}},{'type',93,'union',[{'atom',93,'undefined'}|[{'type',93,'wxSplitterEventType',[]}]]}}],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{'wxSplitterEventType',{'type',94,'union',[{'atom',94,'command_splitter_sash_pos_changed'}|[{'atom',94,'command_splitter_sash_pos_changing'}|[{'atom',94,'command_splitter_doubleclicked'}|[{'atom',94,'command_splitter_unsplit'}]]]]},[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{'wxSplitter',{'type',95,'record',[{'atom',95,'wxSplitter'}]},[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','wxScroll'},[{'typed_record_field',{'record_field',97,{'atom',97,'type'}},{'type',97,'union',[{'atom',97,'undefined'}|[{'type',97,'wxScrollEventType',[]}]]}}|[{'typed_record_field',{'record_field',98,{'atom',98,'commandInt'}},{'type',98,'union',[{'atom',98,'undefined'}|[{'type',98,'integer',[]}]]}}|[{'typed_record_field',{'record_field',99,{'atom',99,'extraLong'}},{'type',99,'union',[{'atom',99,'undefined'}|[{'type',99,'integer',[]}]]}}]]],[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{'wxScrollEventType',{'type',100,'union',[{'atom',100,'scroll_top'}|[{'atom',100,'scroll_bottom'}|[{'atom',100,'scroll_lineup'}|[{'atom',100,'scroll_linedown'}|[{'atom',100,'scroll_pageup'}|[{'atom',100,'scroll_pagedown'}|[{'atom',100,'scroll_thumbtrack'}|[{'atom',100,'scroll_thumbrelease'}|[{'atom',100,'scroll_changed'}]]]]]]]]]},[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{'wxScroll',{'type',101,'record',[{'atom',101,'wxScroll'}]},[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','wxMenu'},[{'typed_record_field',{'record_field',103,{'atom',103,'type'}},{'type',103,'union',[{'atom',103,'undefined'}|[{'type',103,'wxMenuEventType',[]}]]}}],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{'wxMenuEventType',{'type',104,'union',[{'atom',104,'menu_open'}|[{'atom',104,'menu_close'}|[{'atom',104,'menu_highlight'}]]]},[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{'wxMenu',{'type',105,'record',[{'atom',105,'wxMenu'}]},[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','wxContextMenu'},[{'typed_record_field',{'record_field',107,{'atom',107,'type'}},{'type',107,'union',[{'atom',107,'undefined'}|[{'type',107,'wxContextMenuEventType',[]}]]}}],[]}],
		%% Line 108
		'type' =
		    %% Line 108
		    [{'wxContextMenuEventType',{'atom',108,'context_menu'},[]}],
		%% Line 109
		'type' =
		    %% Line 109
		    [{'wxContextMenu',{'type',109,'record',[{'atom',109,'wxContextMenu'}]},[]}],
		%% Line 111
		'type' =
		    %% Line 111
		    [{{'record','wxShow'},[{'typed_record_field',{'record_field',111,{'atom',111,'type'}},{'type',111,'union',[{'atom',111,'undefined'}|[{'type',111,'wxShowEventType',[]}]]}}],[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{'wxShowEventType',{'atom',112,'show'},[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{'wxShow',{'type',113,'record',[{'atom',113,'wxShow'}]},[]}],
		%% Line 115
		'type' =
		    %% Line 115
		    [{{'record','wxSpin'},[{'typed_record_field',{'record_field',115,{'atom',115,'type'}},{'type',115,'union',[{'atom',115,'undefined'}|[{'type',115,'wxSpinEventType',[]}]]}}|[{'typed_record_field',{'record_field',116,{'atom',116,'commandInt'}},{'type',116,'union',[{'atom',116,'undefined'}|[{'type',116,'integer',[]}]]}}]],[]}],
		%% Line 117
		'type' =
		    %% Line 117
		    [{'wxSpinEventType',{'type',117,'union',[{'atom',117,'command_spinctrl_updated'}|[{'atom',117,'spin_up'}|[{'atom',117,'spin_down'}|[{'atom',117,'spin'}]]]]},[]}],
		%% Line 118
		'type' =
		    %% Line 118
		    [{'wxSpin',{'type',118,'record',[{'atom',118,'wxSpin'}]},[]}],
		%% Line 120
		'type' =
		    %% Line 120
		    [{{'record','wxSetCursor'},[{'typed_record_field',{'record_field',120,{'atom',120,'type'}},{'type',120,'union',[{'atom',120,'undefined'}|[{'type',120,'wxSetCursorEventType',[]}]]}}],[]}],
		%% Line 121
		'type' =
		    %% Line 121
		    [{'wxSetCursorEventType',{'atom',121,'set_cursor'},[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{'wxSetCursor',{'type',122,'record',[{'atom',122,'wxSetCursor'}]},[]}],
		%% Line 124
		'type' =
		    %% Line 124
		    [{{'record','wxFontPicker'},[{'typed_record_field',{'record_field',124,{'atom',124,'type'}},{'type',124,'union',[{'atom',124,'undefined'}|[{'type',124,'wxFontPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',125,{'atom',125,'font'}},{'type',125,'union',[{'atom',125,'undefined'}|[{'remote_type',125,[{'atom',125,'wxFont'}|[{'atom',125,'wxFont'}|[[]]]]}]]}}]],[]}],
		%% Line 126
		'type' =
		    %% Line 126
		    [{'wxFontPickerEventType',{'atom',126,'command_fontpicker_changed'},[]}],
		%% Line 127
		'type' =
		    %% Line 127
		    [{'wxFontPicker',{'type',127,'record',[{'atom',127,'wxFontPicker'}]},[]}],
		%% Line 129
		'type' =
		    %% Line 129
		    [{{'record','wxScrollWin'},[{'typed_record_field',{'record_field',129,{'atom',129,'type'}},{'type',129,'union',[{'atom',129,'undefined'}|[{'type',129,'wxScrollWinEventType',[]}]]}}],[]}],
		%% Line 130
		'type' =
		    %% Line 130
		    [{'wxScrollWinEventType',{'type',130,'union',[{'atom',130,'scrollwin_top'}|[{'atom',130,'scrollwin_bottom'}|[{'atom',130,'scrollwin_lineup'}|[{'atom',130,'scrollwin_linedown'}|[{'atom',130,'scrollwin_pageup'}|[{'atom',130,'scrollwin_pagedown'}|[{'atom',130,'scrollwin_thumbtrack'}|[{'atom',130,'scrollwin_thumbrelease'}]]]]]]]]},[]}],
		%% Line 131
		'type' =
		    %% Line 131
		    [{'wxScrollWin',{'type',131,'record',[{'atom',131,'wxScrollWin'}]},[]}],
		%% Line 133
		'type' =
		    %% Line 133
		    [{{'record','wxPaint'},[{'typed_record_field',{'record_field',133,{'atom',133,'type'}},{'type',133,'union',[{'atom',133,'undefined'}|[{'type',133,'wxPaintEventType',[]}]]}}],[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{'wxPaintEventType',{'atom',134,'paint'},[]}],
		%% Line 135
		'type' =
		    %% Line 135
		    [{'wxPaint',{'type',135,'record',[{'atom',135,'wxPaint'}]},[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','wxChildFocus'},[{'typed_record_field',{'record_field',137,{'atom',137,'type'}},{'type',137,'union',[{'atom',137,'undefined'}|[{'type',137,'wxChildFocusEventType',[]}]]}}],[]}],
		%% Line 138
		'type' =
		    %% Line 138
		    [{'wxChildFocusEventType',{'atom',138,'child_focus'},[]}],
		%% Line 139
		'type' =
		    %% Line 139
		    [{'wxChildFocus',{'type',139,'record',[{'atom',139,'wxChildFocus'}]},[]}],
		%% Line 141
		'type' =
		    %% Line 141
		    [{{'record','wxMaximize'},[{'typed_record_field',{'record_field',141,{'atom',141,'type'}},{'type',141,'union',[{'atom',141,'undefined'}|[{'type',141,'wxMaximizeEventType',[]}]]}}],[]}],
		%% Line 142
		'type' =
		    %% Line 142
		    [{'wxMaximizeEventType',{'atom',142,'maximize'},[]}],
		%% Line 143
		'type' =
		    %% Line 143
		    [{'wxMaximize',{'type',143,'record',[{'atom',143,'wxMaximize'}]},[]}],
		%% Line 145
		'type' =
		    %% Line 145
		    [{{'record','wxFileDirPicker'},[{'typed_record_field',{'record_field',145,{'atom',145,'type'}},{'type',145,'union',[{'atom',145,'undefined'}|[{'type',145,'wxFileDirPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',146,{'atom',146,'path'}},{'type',146,'union',[{'atom',146,'undefined'}|[{'remote_type',146,[{'atom',146,'unicode'}|[{'atom',146,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 147
		'type' =
		    %% Line 147
		    [{'wxFileDirPickerEventType',{'type',147,'union',[{'atom',147,'command_filepicker_changed'}|[{'atom',147,'command_dirpicker_changed'}]]},[]}],
		%% Line 148
		'type' =
		    %% Line 148
		    [{'wxFileDirPicker',{'type',148,'record',[{'atom',148,'wxFileDirPicker'}]},[]}],
		%% Line 150
		'type' =
		    %% Line 150
		    [{{'record','wxFocus'},[{'typed_record_field',{'record_field',150,{'atom',150,'type'}},{'type',150,'union',[{'atom',150,'undefined'}|[{'type',150,'wxFocusEventType',[]}]]}}],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{'wxFocusEventType',{'type',151,'union',[{'atom',151,'set_focus'}|[{'atom',151,'kill_focus'}]]},[]}],
		%% Line 152
		'type' =
		    %% Line 152
		    [{'wxFocus',{'type',152,'record',[{'atom',152,'wxFocus'}]},[]}],
		%% Line 154
		'type' =
		    %% Line 154
		    [{{'record','wxDate'},[{'typed_record_field',{'record_field',154,{'atom',154,'type'}},{'type',154,'union',[{'atom',154,'undefined'}|[{'type',154,'wxDateEventType',[]}]]}}|[{'typed_record_field',{'record_field',155,{'atom',155,'date'}},{'type',155,'union',[{'atom',155,'undefined'}|[{'remote_type',155,[{'atom',155,'wx'}|[{'atom',155,'wx_datetime'}|[[]]]]}]]}}]],[]}],
		%% Line 156
		'type' =
		    %% Line 156
		    [{'wxDateEventType',{'atom',156,'date_changed'},[]}],
		%% Line 157
		'type' =
		    %% Line 157
		    [{'wxDate',{'type',157,'record',[{'atom',157,'wxDate'}]},[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','wxHtmlLink'},[{'typed_record_field',{'record_field',159,{'atom',159,'type'}},{'type',159,'union',[{'atom',159,'undefined'}|[{'type',159,'wxHtmlLinkEventType',[]}]]}}|[{'typed_record_field',{'record_field',160,{'atom',160,'linkInfo'}},{'type',160,'union',[{'atom',160,'undefined'}|[{'remote_type',160,[{'atom',160,'wx'}|[{'atom',160,'wx_wxHtmlLinkInfo'}|[[]]]]}]]}}]],[]}],
		%% Line 161
		'type' =
		    %% Line 161
		    [{'wxHtmlLinkEventType',{'atom',161,'command_html_link_clicked'},[]}],
		%% Line 162
		'type' =
		    %% Line 162
		    [{'wxHtmlLink',{'type',162,'record',[{'atom',162,'wxHtmlLink'}]},[]}],
		%% Line 164
		'type' =
		    %% Line 164
		    [{{'record','wxHelp'},[{'typed_record_field',{'record_field',164,{'atom',164,'type'}},{'type',164,'union',[{'atom',164,'undefined'}|[{'type',164,'wxHelpEventType',[]}]]}}],[]}],
		%% Line 165
		'type' =
		    %% Line 165
		    [{'wxHelpEventType',{'type',165,'union',[{'atom',165,'help'}|[{'atom',165,'detailed_help'}]]},[]}],
		%% Line 166
		'type' =
		    %% Line 166
		    [{'wxHelp',{'type',166,'record',[{'atom',166,'wxHelp'}]},[]}],
		%% Line 168
		'type' =
		    %% Line 168
		    [{{'record','wxActivate'},[{'typed_record_field',{'record_field',168,{'atom',168,'type'}},{'type',168,'union',[{'atom',168,'undefined'}|[{'type',168,'wxActivateEventType',[]}]]}}|[{'typed_record_field',{'record_field',169,{'atom',169,'active'}},{'type',169,'union',[{'atom',169,'undefined'}|[{'type',169,'boolean',[]}]]}}]],[]}],
		%% Line 170
		'type' =
		    %% Line 170
		    [{'wxActivateEventType',{'type',170,'union',[{'atom',170,'activate'}|[{'atom',170,'activate_app'}|[{'atom',170,'hibernate'}]]]},[]}],
		%% Line 171
		'type' =
		    %% Line 171
		    [{'wxActivate',{'type',171,'record',[{'atom',171,'wxActivate'}]},[]}],
		%% Line 173
		'type' =
		    %% Line 173
		    [{{'record','wxStyledText'},[{'typed_record_field',{'record_field',173,{'atom',173,'type'}},{'type',173,'union',[{'atom',173,'undefined'}|[{'type',173,'wxStyledTextEventType',[]}]]}}|[{'typed_record_field',{'record_field',174,{'atom',174,'position'}},{'type',174,'union',[{'atom',174,'undefined'}|[{'type',174,'integer',[]}]]}}|[{'typed_record_field',{'record_field',175,{'atom',175,'key'}},{'type',175,'union',[{'atom',175,'undefined'}|[{'type',175,'integer',[]}]]}}|[{'typed_record_field',{'record_field',176,{'atom',176,'modifiers'}},{'type',176,'union',[{'atom',176,'undefined'}|[{'type',176,'integer',[]}]]}}|[{'typed_record_field',{'record_field',177,{'atom',177,'modificationType'}},{'type',177,'union',[{'atom',177,'undefined'}|[{'type',177,'integer',[]}]]}}|[{'typed_record_field',{'record_field',178,{'atom',178,'text'}},{'type',178,'union',[{'atom',178,'undefined'}|[{'remote_type',178,[{'atom',178,'unicode'}|[{'atom',178,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',179,{'atom',179,'length'}},{'type',179,'union',[{'atom',179,'undefined'}|[{'type',179,'integer',[]}]]}}|[{'typed_record_field',{'record_field',180,{'atom',180,'linesAdded'}},{'type',180,'union',[{'atom',180,'undefined'}|[{'type',180,'integer',[]}]]}}|[{'typed_record_field',{'record_field',181,{'atom',181,'line'}},{'type',181,'union',[{'atom',181,'undefined'}|[{'type',181,'integer',[]}]]}}|[{'typed_record_field',{'record_field',182,{'atom',182,'foldLevelNow'}},{'type',182,'union',[{'atom',182,'undefined'}|[{'type',182,'integer',[]}]]}}|[{'typed_record_field',{'record_field',183,{'atom',183,'foldLevelPrev'}},{'type',183,'union',[{'atom',183,'undefined'}|[{'type',183,'integer',[]}]]}}|[{'typed_record_field',{'record_field',184,{'atom',184,'margin'}},{'type',184,'union',[{'atom',184,'undefined'}|[{'type',184,'integer',[]}]]}}|[{'typed_record_field',{'record_field',185,{'atom',185,'message'}},{'type',185,'union',[{'atom',185,'undefined'}|[{'type',185,'integer',[]}]]}}|[{'typed_record_field',{'record_field',186,{'atom',186,'wParam'}},{'type',186,'union',[{'atom',186,'undefined'}|[{'type',186,'integer',[]}]]}}|[{'typed_record_field',{'record_field',187,{'atom',187,'lParam'}},{'type',187,'union',[{'atom',187,'undefined'}|[{'type',187,'integer',[]}]]}}|[{'typed_record_field',{'record_field',188,{'atom',188,'listType'}},{'type',188,'union',[{'atom',188,'undefined'}|[{'type',188,'integer',[]}]]}}|[{'typed_record_field',{'record_field',189,{'atom',189,'x'}},{'type',189,'union',[{'atom',189,'undefined'}|[{'type',189,'integer',[]}]]}}|[{'typed_record_field',{'record_field',190,{'atom',190,'y'}},{'type',190,'union',[{'atom',190,'undefined'}|[{'type',190,'integer',[]}]]}}|[{'typed_record_field',{'record_field',191,{'atom',191,'dragText'}},{'type',191,'union',[{'atom',191,'undefined'}|[{'remote_type',191,[{'atom',191,'unicode'}|[{'atom',191,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',192,{'atom',192,'dragAllowMove'}},{'type',192,'union',[{'atom',192,'undefined'}|[{'type',192,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',193,{'atom',193,'dragResult'}},{'type',193,'union',[{'atom',193,'undefined'}|[{'remote_type',193,[{'atom',193,'wx'}|[{'atom',193,'wx_enum'}|[[]]]]}]]}}]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 194
		'type' =
		    %% Line 194
		    [{'wxStyledTextEventType',{'type',194,'union',[{'atom',194,'stc_change'}|[{'atom',194,'stc_styleneeded'}|[{'atom',194,'stc_charadded'}|[{'atom',194,'stc_savepointreached'}|[{'atom',194,'stc_savepointleft'}|[{'atom',194,'stc_romodifyattempt'}|[{'atom',194,'stc_key'}|[{'atom',194,'stc_doubleclick'}|[{'atom',194,'stc_updateui'}|[{'atom',194,'stc_modified'}|[{'atom',194,'stc_macrorecord'}|[{'atom',194,'stc_marginclick'}|[{'atom',194,'stc_needshown'}|[{'atom',194,'stc_painted'}|[{'atom',194,'stc_userlistselection'}|[{'atom',194,'stc_uridropped'}|[{'atom',194,'stc_dwellstart'}|[{'atom',194,'stc_dwellend'}|[{'atom',194,'stc_start_drag'}|[{'atom',194,'stc_drag_over'}|[{'atom',194,'stc_do_drop'}|[{'atom',194,'stc_zoom'}|[{'atom',194,'stc_hotspot_click'}|[{'atom',194,'stc_hotspot_dclick'}|[{'atom',194,'stc_calltip_click'}|[{'atom',194,'stc_autocomp_selection'}]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 195
		'type' =
		    %% Line 195
		    [{'wxStyledText',{'type',195,'record',[{'atom',195,'wxStyledText'}]},[]}],
		%% Line 197
		'type' =
		    %% Line 197
		    [{{'record','wxSysColourChanged'},[{'typed_record_field',{'record_field',197,{'atom',197,'type'}},{'type',197,'union',[{'atom',197,'undefined'}|[{'type',197,'wxSysColourChangedEventType',[]}]]}}],[]}],
		%% Line 198
		'type' =
		    %% Line 198
		    [{'wxSysColourChangedEventType',{'atom',198,'sys_colour_changed'},[]}],
		%% Line 199
		'type' =
		    %% Line 199
		    [{'wxSysColourChanged',{'type',199,'record',[{'atom',199,'wxSysColourChanged'}]},[]}],
		%% Line 201
		'type' =
		    %% Line 201
		    [{{'record','wxGrid'},[{'typed_record_field',{'record_field',201,{'atom',201,'type'}},{'type',201,'union',[{'atom',201,'undefined'}|[{'type',201,'wxGridEventType',[]}]]}}|[{'typed_record_field',{'record_field',202,{'atom',202,'row'}},{'type',202,'union',[{'atom',202,'undefined'}|[{'type',202,'integer',[]}]]}}|[{'typed_record_field',{'record_field',203,{'atom',203,'col'}},{'type',203,'union',[{'atom',203,'undefined'}|[{'type',203,'integer',[]}]]}}|[{'typed_record_field',{'record_field',204,{'atom',204,'x'}},{'type',204,'union',[{'atom',204,'undefined'}|[{'type',204,'integer',[]}]]}}|[{'typed_record_field',{'record_field',205,{'atom',205,'y'}},{'type',205,'union',[{'atom',205,'undefined'}|[{'type',205,'integer',[]}]]}}|[{'typed_record_field',{'record_field',206,{'atom',206,'selecting'}},{'type',206,'union',[{'atom',206,'undefined'}|[{'type',206,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',207,{'atom',207,'control'}},{'type',207,'union',[{'atom',207,'undefined'}|[{'type',207,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',208,{'atom',208,'meta'}},{'type',208,'union',[{'atom',208,'undefined'}|[{'type',208,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',209,{'atom',209,'shift'}},{'type',209,'union',[{'atom',209,'undefined'}|[{'type',209,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',210,{'atom',210,'alt'}},{'type',210,'union',[{'atom',210,'undefined'}|[{'type',210,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 211
		'type' =
		    %% Line 211
		    [{'wxGridEventType',{'type',211,'union',[{'atom',211,'grid_cell_left_click'}|[{'atom',211,'grid_cell_right_click'}|[{'atom',211,'grid_cell_left_dclick'}|[{'atom',211,'grid_cell_right_dclick'}|[{'atom',211,'grid_label_left_click'}|[{'atom',211,'grid_label_right_click'}|[{'atom',211,'grid_label_left_dclick'}|[{'atom',211,'grid_label_right_dclick'}|[{'atom',211,'grid_row_size'}|[{'atom',211,'grid_col_size'}|[{'atom',211,'grid_range_select'}|[{'atom',211,'grid_cell_change'}|[{'atom',211,'grid_select_cell'}|[{'atom',211,'grid_editor_shown'}|[{'atom',211,'grid_editor_hidden'}|[{'atom',211,'grid_editor_created'}|[{'atom',211,'grid_cell_begin_drag'}]]]]]]]]]]]]]]]]]},[]}],
		%% Line 212
		'type' =
		    %% Line 212
		    [{'wxGrid',{'type',212,'record',[{'atom',212,'wxGrid'}]},[]}],
		%% Line 214
		'type' =
		    %% Line 214
		    [{{'record','wxPaletteChanged'},[{'typed_record_field',{'record_field',214,{'atom',214,'type'}},{'type',214,'union',[{'atom',214,'undefined'}|[{'type',214,'wxPaletteChangedEventType',[]}]]}}],[]}],
		%% Line 215
		'type' =
		    %% Line 215
		    [{'wxPaletteChangedEventType',{'atom',215,'palette_changed'},[]}],
		%% Line 216
		'type' =
		    %% Line 216
		    [{'wxPaletteChanged',{'type',216,'record',[{'atom',216,'wxPaletteChanged'}]},[]}],
		%% Line 218
		'type' =
		    %% Line 218
		    [{{'record','wxUpdateUI'},[{'typed_record_field',{'record_field',218,{'atom',218,'type'}},{'type',218,'union',[{'atom',218,'undefined'}|[{'type',218,'wxUpdateUIEventType',[]}]]}}],[]}],
		%% Line 219
		'type' =
		    %% Line 219
		    [{'wxUpdateUIEventType',{'atom',219,'update_ui'},[]}],
		%% Line 220
		'type' =
		    %% Line 220
		    [{'wxUpdateUI',{'type',220,'record',[{'atom',220,'wxUpdateUI'}]},[]}],
		%% Line 222
		'type' =
		    %% Line 222
		    [{{'record','wxSize'},[{'typed_record_field',{'record_field',222,{'atom',222,'type'}},{'type',222,'union',[{'atom',222,'undefined'}|[{'type',222,'wxSizeEventType',[]}]]}}|[{'typed_record_field',{'record_field',223,{'atom',223,'size'}},{'type',223,'union',[{'atom',223,'undefined'}|[{'type',223,'tuple',[{'ann_type',223,[{'var',223,'W'}|[{'type',223,'integer',[]}]]}|[{'ann_type',223,[{'var',223,'H'}|[{'type',223,'integer',[]}]]}]]}]]}}|[{'typed_record_field',{'record_field',224,{'atom',224,'rect'}},{'type',224,'union',[{'atom',224,'undefined'}|[{'type',224,'tuple',[{'ann_type',224,[{'var',224,'X'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'Y'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'W'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'H'}|[{'type',224,'integer',[]}]]}]]]]}]]}}]]],[]}],
		%% Line 225
		'type' =
		    %% Line 225
		    [{'wxSizeEventType',{'atom',225,'size'},[]}],
		%% Line 226
		'type' =
		    %% Line 226
		    [{'wxSize',{'type',226,'record',[{'atom',226,'wxSize'}]},[]}],
		%% Line 228
		'type' =
		    %% Line 228
		    [{{'record','wxIconize'},[{'typed_record_field',{'record_field',228,{'atom',228,'type'}},{'type',228,'union',[{'atom',228,'undefined'}|[{'type',228,'wxIconizeEventType',[]}]]}}],[]}],
		%% Line 229
		'type' =
		    %% Line 229
		    [{'wxIconizeEventType',{'atom',229,'iconize'},[]}],
		%% Line 230
		'type' =
		    %% Line 230
		    [{'wxIconize',{'type',230,'record',[{'atom',230,'wxIconize'}]},[]}],
		%% Line 232
		'type' =
		    %% Line 232
		    [{{'record','wxAuiNotebook'},[{'typed_record_field',{'record_field',232,{'atom',232,'type'}},{'type',232,'union',[{'atom',232,'undefined'}|[{'type',232,'wxAuiNotebookEventType',[]}]]}}|[{'typed_record_field',{'record_field',233,{'atom',233,'old_selection'}},{'type',233,'union',[{'atom',233,'undefined'}|[{'type',233,'integer',[]}]]}}|[{'typed_record_field',{'record_field',234,{'atom',234,'selection'}},{'type',234,'union',[{'atom',234,'undefined'}|[{'type',234,'integer',[]}]]}}|[{'typed_record_field',{'record_field',235,{'atom',235,'drag_source'}},{'type',235,'union',[{'atom',235,'undefined'}|[{'remote_type',235,[{'atom',235,'wxAuiNotebook'}|[{'atom',235,'wxAuiNotebook'}|[[]]]]}]]}}]]]],[]}],
		%% Line 236
		'type' =
		    %% Line 236
		    [{'wxAuiNotebookEventType',{'type',236,'union',[{'atom',236,'command_auinotebook_page_close'}|[{'atom',236,'command_auinotebook_page_changed'}|[{'atom',236,'command_auinotebook_page_changing'}|[{'atom',236,'command_auinotebook_button'}|[{'atom',236,'command_auinotebook_begin_drag'}|[{'atom',236,'command_auinotebook_end_drag'}|[{'atom',236,'command_auinotebook_drag_motion'}|[{'atom',236,'command_auinotebook_allow_dnd'}|[{'atom',236,'command_auinotebook_tab_middle_down'}|[{'atom',236,'command_auinotebook_tab_middle_up'}|[{'atom',236,'command_auinotebook_tab_right_down'}|[{'atom',236,'command_auinotebook_tab_right_up'}|[{'atom',236,'command_auinotebook_page_closed'}|[{'atom',236,'command_auinotebook_drag_done'}|[{'atom',236,'command_auinotebook_bg_dclick'}]]]]]]]]]]]]]]]},[]}],
		%% Line 237
		'type' =
		    %% Line 237
		    [{'wxAuiNotebook',{'type',237,'record',[{'atom',237,'wxAuiNotebook'}]},[]}],
		%% Line 239
		'type' =
		    %% Line 239
		    [{{'record','wxClose'},[{'typed_record_field',{'record_field',239,{'atom',239,'type'}},{'type',239,'union',[{'atom',239,'undefined'}|[{'type',239,'wxCloseEventType',[]}]]}}],[]}],
		%% Line 240
		'type' =
		    %% Line 240
		    [{'wxCloseEventType',{'type',240,'union',[{'atom',240,'close_window'}|[{'atom',240,'end_session'}|[{'atom',240,'query_end_session'}]]]},[]}],
		%% Line 241
		'type' =
		    %% Line 241
		    [{'wxClose',{'type',241,'record',[{'atom',241,'wxClose'}]},[]}],
		%% Line 243
		'type' =
		    %% Line 243
		    [{{'record','wxMouseCaptureChanged'},[{'typed_record_field',{'record_field',243,{'atom',243,'type'}},{'type',243,'union',[{'atom',243,'undefined'}|[{'type',243,'wxMouseCaptureChangedEventType',[]}]]}}],[]}],
		%% Line 244
		'type' =
		    %% Line 244
		    [{'wxMouseCaptureChangedEventType',{'atom',244,'mouse_capture_changed'},[]}],
		%% Line 245
		'type' =
		    %% Line 245
		    [{'wxMouseCaptureChanged',{'type',245,'record',[{'atom',245,'wxMouseCaptureChanged'}]},[]}],
		%% Line 247
		'type' =
		    %% Line 247
		    [{{'record','wxMouse'},[{'typed_record_field',{'record_field',247,{'atom',247,'type'}},{'type',247,'union',[{'atom',247,'undefined'}|[{'type',247,'wxMouseEventType',[]}]]}}|[{'typed_record_field',{'record_field',248,{'atom',248,'x'}},{'type',248,'union',[{'atom',248,'undefined'}|[{'type',248,'integer',[]}]]}}|[{'typed_record_field',{'record_field',249,{'atom',249,'y'}},{'type',249,'union',[{'atom',249,'undefined'}|[{'type',249,'integer',[]}]]}}|[{'typed_record_field',{'record_field',250,{'atom',250,'leftDown'}},{'type',250,'union',[{'atom',250,'undefined'}|[{'type',250,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',251,{'atom',251,'middleDown'}},{'type',251,'union',[{'atom',251,'undefined'}|[{'type',251,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',252,{'atom',252,'rightDown'}},{'type',252,'union',[{'atom',252,'undefined'}|[{'type',252,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',253,{'atom',253,'controlDown'}},{'type',253,'union',[{'atom',253,'undefined'}|[{'type',253,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',254,{'atom',254,'shiftDown'}},{'type',254,'union',[{'atom',254,'undefined'}|[{'type',254,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',255,{'atom',255,'altDown'}},{'type',255,'union',[{'atom',255,'undefined'}|[{'type',255,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',256,{'atom',256,'metaDown'}},{'type',256,'union',[{'atom',256,'undefined'}|[{'type',256,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',257,{'atom',257,'wheelRotation'}},{'type',257,'union',[{'atom',257,'undefined'}|[{'type',257,'integer',[]}]]}}|[{'typed_record_field',{'record_field',258,{'atom',258,'wheelDelta'}},{'type',258,'union',[{'atom',258,'undefined'}|[{'type',258,'integer',[]}]]}}|[{'typed_record_field',{'record_field',259,{'atom',259,'linesPerAction'}},{'type',259,'union',[{'atom',259,'undefined'}|[{'type',259,'integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 260
		'type' =
		    %% Line 260
		    [{'wxMouseEventType',{'type',260,'union',[{'atom',260,'left_down'}|[{'atom',260,'left_up'}|[{'atom',260,'middle_down'}|[{'atom',260,'middle_up'}|[{'atom',260,'right_down'}|[{'atom',260,'right_up'}|[{'atom',260,'motion'}|[{'atom',260,'enter_window'}|[{'atom',260,'leave_window'}|[{'atom',260,'left_dclick'}|[{'atom',260,'middle_dclick'}|[{'atom',260,'right_dclick'}|[{'atom',260,'mousewheel'}]]]]]]]]]]]]]},[]}],
		%% Line 261
		'type' =
		    %% Line 261
		    [{'wxMouse',{'type',261,'record',[{'atom',261,'wxMouse'}]},[]}],
		%% Line 263
		'type' =
		    %% Line 263
		    [{{'record','wxClipboardText'},[{'typed_record_field',{'record_field',263,{'atom',263,'type'}},{'type',263,'union',[{'atom',263,'undefined'}|[{'type',263,'wxClipboardTextEventType',[]}]]}}],[]}],
		%% Line 264
		'type' =
		    %% Line 264
		    [{'wxClipboardTextEventType',{'type',264,'union',[{'atom',264,'command_text_copy'}|[{'atom',264,'command_text_cut'}|[{'atom',264,'command_text_paste'}]]]},[]}],
		%% Line 265
		'type' =
		    %% Line 265
		    [{'wxClipboardText',{'type',265,'record',[{'atom',265,'wxClipboardText'}]},[]}],
		%% Line 267
		'type' =
		    %% Line 267
		    [{{'record','wxWindowCreate'},[{'typed_record_field',{'record_field',267,{'atom',267,'type'}},{'type',267,'union',[{'atom',267,'undefined'}|[{'type',267,'wxWindowCreateEventType',[]}]]}}],[]}],
		%% Line 268
		'type' =
		    %% Line 268
		    [{'wxWindowCreateEventType',{'atom',268,'create'},[]}],
		%% Line 269
		'type' =
		    %% Line 269
		    [{'wxWindowCreate',{'type',269,'record',[{'atom',269,'wxWindowCreate'}]},[]}],
		%% Line 271
		'type' =
		    %% Line 271
		    [{{'record','wxAuiManager'},[{'typed_record_field',{'record_field',271,{'atom',271,'type'}},{'type',271,'union',[{'atom',271,'undefined'}|[{'type',271,'wxAuiManagerEventType',[]}]]}}|[{'typed_record_field',{'record_field',272,{'atom',272,'manager'}},{'type',272,'union',[{'atom',272,'undefined'}|[{'remote_type',272,[{'atom',272,'wxAuiManager'}|[{'atom',272,'wxAuiManager'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',273,{'atom',273,'pane'}},{'type',273,'union',[{'atom',273,'undefined'}|[{'remote_type',273,[{'atom',273,'wxAuiPaneInfo'}|[{'atom',273,'wxAuiPaneInfo'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',274,{'atom',274,'button'}},{'type',274,'union',[{'atom',274,'undefined'}|[{'type',274,'integer',[]}]]}}|[{'typed_record_field',{'record_field',275,{'atom',275,'veto_flag'}},{'type',275,'union',[{'atom',275,'undefined'}|[{'type',275,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',276,{'atom',276,'canveto_flag'}},{'type',276,'union',[{'atom',276,'undefined'}|[{'type',276,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',277,{'atom',277,'dc'}},{'type',277,'union',[{'atom',277,'undefined'}|[{'remote_type',277,[{'atom',277,'wxDC'}|[{'atom',277,'wxDC'}|[[]]]]}]]}}]]]]]]],[]}],
		%% Line 278
		'type' =
		    %% Line 278
		    [{'wxAuiManagerEventType',{'type',278,'union',[{'atom',278,'aui_pane_button'}|[{'atom',278,'aui_pane_close'}|[{'atom',278,'aui_pane_maximize'}|[{'atom',278,'aui_pane_restore'}|[{'atom',278,'aui_render'}|[{'atom',278,'aui_find_manager'}]]]]]]},[]}],
		%% Line 279
		'type' =
		    %% Line 279
		    [{'wxAuiManager',{'type',279,'record',[{'atom',279,'wxAuiManager'}]},[]}],
		%% Line 281
		'type' =
		    %% Line 281
		    [{{'record','wxInitDialog'},[{'typed_record_field',{'record_field',281,{'atom',281,'type'}},{'type',281,'union',[{'atom',281,'undefined'}|[{'type',281,'wxInitDialogEventType',[]}]]}}],[]}],
		%% Line 282
		'type' =
		    %% Line 282
		    [{'wxInitDialogEventType',{'atom',282,'init_dialog'},[]}],
		%% Line 283
		'type' =
		    %% Line 283
		    [{'wxInitDialog',{'type',283,'record',[{'atom',283,'wxInitDialog'}]},[]}],
		%% Line 285
		'type' =
		    %% Line 285
		    [{{'record','wxCommand'},[{'typed_record_field',{'record_field',285,{'atom',285,'type'}},{'type',285,'union',[{'atom',285,'undefined'}|[{'type',285,'wxCommandEventType',[]}]]}}|[{'typed_record_field',{'record_field',286,{'atom',286,'cmdString'}},{'type',286,'union',[{'atom',286,'undefined'}|[{'remote_type',286,[{'atom',286,'unicode'}|[{'atom',286,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',287,{'atom',287,'commandInt'}},{'type',287,'union',[{'atom',287,'undefined'}|[{'type',287,'integer',[]}]]}}|[{'typed_record_field',{'record_field',288,{'atom',288,'extraLong'}},{'type',288,'union',[{'atom',288,'undefined'}|[{'type',288,'integer',[]}]]}}]]]],[]}],
		%% Line 289
		'type' =
		    %% Line 289
		    [{'wxCommandEventType',{'type',289,'union',[{'atom',289,'command_button_clicked'}|[{'atom',289,'command_checkbox_clicked'}|[{'atom',289,'command_choice_selected'}|[{'atom',289,'command_listbox_selected'}|[{'atom',289,'command_listbox_doubleclicked'}|[{'atom',289,'command_text_updated'}|[{'atom',289,'command_text_enter'}|[{'atom',289,'command_menu_selected'}|[{'atom',289,'command_slider_updated'}|[{'atom',289,'command_radiobox_selected'}|[{'atom',289,'command_radiobutton_selected'}|[{'atom',289,'command_scrollbar_updated'}|[{'atom',289,'command_vlbox_selected'}|[{'atom',289,'command_combobox_selected'}|[{'atom',289,'command_tool_rclicked'}|[{'atom',289,'command_tool_enter'}|[{'atom',289,'command_checklistbox_toggled'}|[{'atom',289,'command_togglebutton_clicked'}|[{'atom',289,'command_left_click'}|[{'atom',289,'command_left_dclick'}|[{'atom',289,'command_right_click'}|[{'atom',289,'command_set_focus'}|[{'atom',289,'command_kill_focus'}|[{'atom',289,'command_enter'}]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 290
		'type' =
		    %% Line 290
		    [{'wxCommand',{'type',290,'record',[{'atom',290,'wxCommand'}]},[]}],
		%% Line 292
		'type' =
		    %% Line 292
		    [{{'record','wxJoystick'},[{'typed_record_field',{'record_field',292,{'atom',292,'type'}},{'type',292,'union',[{'atom',292,'undefined'}|[{'type',292,'wxJoystickEventType',[]}]]}}],[]}],
		%% Line 293
		'type' =
		    %% Line 293
		    [{'wxJoystickEventType',{'type',293,'union',[{'atom',293,'joy_button_down'}|[{'atom',293,'joy_button_up'}|[{'atom',293,'joy_move'}|[{'atom',293,'joy_zmove'}]]]]},[]}],
		%% Line 294
		'type' =
		    %% Line 294
		    [{'wxJoystick',{'type',294,'record',[{'atom',294,'wxJoystick'}]},[]}],
		%% Line 296
		'type' =
		    %% Line 296
		    [{{'record','wxQueryNewPalette'},[{'typed_record_field',{'record_field',296,{'atom',296,'type'}},{'type',296,'union',[{'atom',296,'undefined'}|[{'type',296,'wxQueryNewPaletteEventType',[]}]]}}],[]}],
		%% Line 297
		'type' =
		    %% Line 297
		    [{'wxQueryNewPaletteEventType',{'atom',297,'query_new_palette'},[]}],
		%% Line 298
		'type' =
		    %% Line 298
		    [{'wxQueryNewPalette',{'type',298,'record',[{'atom',298,'wxQueryNewPalette'}]},[]}],
		%% Line 300
		'type' =
		    %% Line 300
		    [{{'record','wxMove'},[{'typed_record_field',{'record_field',300,{'atom',300,'type'}},{'type',300,'union',[{'atom',300,'undefined'}|[{'type',300,'wxMoveEventType',[]}]]}}],[]}],
		%% Line 301
		'type' =
		    %% Line 301
		    [{'wxMoveEventType',{'atom',301,'move'},[]}],
		%% Line 302
		'type' =
		    %% Line 302
		    [{'wxMove',{'type',302,'record',[{'atom',302,'wxMove'}]},[]}],
		%% Line 304
		'type' =
		    %% Line 304
		    [{{'record','wxIdle'},[{'typed_record_field',{'record_field',304,{'atom',304,'type'}},{'type',304,'union',[{'atom',304,'undefined'}|[{'type',304,'wxIdleEventType',[]}]]}}],[]}],
		%% Line 305
		'type' =
		    %% Line 305
		    [{'wxIdleEventType',{'atom',305,'idle'},[]}],
		%% Line 306
		'type' =
		    %% Line 306
		    [{'wxIdle',{'type',306,'record',[{'atom',306,'wxIdle'}]},[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{{'record','wxColourPicker'},[{'typed_record_field',{'record_field',308,{'atom',308,'type'}},{'type',308,'union',[{'atom',308,'undefined'}|[{'type',308,'wxColourPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',309,{'atom',309,'colour'}},{'type',309,'union',[{'atom',309,'undefined'}|[{'remote_type',309,[{'atom',309,'wx'}|[{'atom',309,'wx_colour'}|[[]]]]}]]}}]],[]}],
		%% Line 310
		'type' =
		    %% Line 310
		    [{'wxColourPickerEventType',{'atom',310,'command_colourpicker_changed'},[]}],
		%% Line 311
		'type' =
		    %% Line 311
		    [{'wxColourPicker',{'type',311,'record',[{'atom',311,'wxColourPicker'}]},[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{{'record','wxTaskBarIcon'},[{'typed_record_field',{'record_field',313,{'atom',313,'type'}},{'type',313,'union',[{'atom',313,'undefined'}|[{'type',313,'wxTaskBarIconEventType',[]}]]}}],[]}],
		%% Line 314
		'type' =
		    %% Line 314
		    [{'wxTaskBarIconEventType',{'type',314,'union',[{'atom',314,'taskbar_move'}|[{'atom',314,'taskbar_left_down'}|[{'atom',314,'taskbar_left_up'}|[{'atom',314,'taskbar_right_down'}|[{'atom',314,'taskbar_right_up'}|[{'atom',314,'taskbar_left_dclick'}|[{'atom',314,'taskbar_right_dclick'}]]]]]]]},[]}],
		%% Line 315
		'type' =
		    %% Line 315
		    [{'wxTaskBarIcon',{'type',315,'record',[{'atom',315,'wxTaskBarIcon'}]},[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{{'record','wxTree'},[{'typed_record_field',{'record_field',317,{'atom',317,'type'}},{'type',317,'union',[{'atom',317,'undefined'}|[{'type',317,'wxTreeEventType',[]}]]}}|[{'typed_record_field',{'record_field',318,{'atom',318,'item'}},{'type',318,'union',[{'atom',318,'undefined'}|[{'type',318,'integer',[]}]]}}|[{'typed_record_field',{'record_field',319,{'atom',319,'itemOld'}},{'type',319,'union',[{'atom',319,'undefined'}|[{'type',319,'integer',[]}]]}}|[{'typed_record_field',{'record_field',320,{'atom',320,'pointDrag'}},{'type',320,'union',[{'atom',320,'undefined'}|[{'type',320,'tuple',[{'ann_type',320,[{'var',320,'X'}|[{'type',320,'integer',[]}]]}|[{'ann_type',320,[{'var',320,'Y'}|[{'type',320,'integer',[]}]]}]]}]]}}]]]],[]}],
		%% Line 321
		'type' =
		    %% Line 321
		    [{'wxTreeEventType',{'type',321,'union',[{'atom',321,'command_tree_begin_drag'}|[{'atom',321,'command_tree_begin_rdrag'}|[{'atom',321,'command_tree_begin_label_edit'}|[{'atom',321,'command_tree_end_label_edit'}|[{'atom',321,'command_tree_delete_item'}|[{'atom',321,'command_tree_get_info'}|[{'atom',321,'command_tree_set_info'}|[{'atom',321,'command_tree_item_expanded'}|[{'atom',321,'command_tree_item_expanding'}|[{'atom',321,'command_tree_item_collapsed'}|[{'atom',321,'command_tree_item_collapsing'}|[{'atom',321,'command_tree_sel_changed'}|[{'atom',321,'command_tree_sel_changing'}|[{'atom',321,'command_tree_key_down'}|[{'atom',321,'command_tree_item_activated'}|[{'atom',321,'command_tree_item_right_click'}|[{'atom',321,'command_tree_item_middle_click'}|[{'atom',321,'command_tree_end_drag'}|[{'atom',321,'command_tree_state_image_click'}|[{'atom',321,'command_tree_item_gettooltip'}|[{'atom',321,'command_tree_item_menu'}]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 322
		'type' =
		    %% Line 322
		    [{'wxTree',{'type',322,'record',[{'atom',322,'wxTree'}]},[]}],
		%% Line 324
		'type' =
		    %% Line 324
		    [{'event',{'type',324,'union',[{'type',324,'wxActivate',[]}|[{'type',324,'wxAuiManager',[]}|[{'type',324,'wxAuiNotebook',[]}|[{'type',324,'wxCalendar',[]}|[{'type',324,'wxChildFocus',[]}|[{'type',324,'wxClipboardText',[]}|[{'type',324,'wxClose',[]}|[{'type',324,'wxColourPicker',[]}|[{'type',324,'wxCommand',[]}|[{'type',324,'wxContextMenu',[]}|[{'type',324,'wxDate',[]}|[{'type',324,'wxDisplayChanged',[]}|[{'type',324,'wxErase',[]}|[{'type',324,'wxFileDirPicker',[]}|[{'type',324,'wxFocus',[]}|[{'type',324,'wxFontPicker',[]}|[{'type',324,'wxGrid',[]}|[{'type',324,'wxHelp',[]}|[{'type',324,'wxHtmlLink',[]}|[{'type',324,'wxIconize',[]}|[{'type',324,'wxIdle',[]}|[{'type',324,'wxInitDialog',[]}|[{'type',324,'wxJoystick',[]}|[{'type',324,'wxKey',[]}|[{'type',324,'wxList',[]}|[{'type',324,'wxMaximize',[]}|[{'type',324,'wxMenu',[]}|[{'type',324,'wxMouse',[]}|[{'type',324,'wxMouseCaptureChanged',[]}|[{'type',324,'wxMove',[]}|[{'type',324,'wxNavigationKey',[]}|[{'type',324,'wxNotebook',[]}|[{'type',324,'wxPaint',[]}|[{'type',324,'wxPaletteChanged',[]}|[{'type',324,'wxQueryNewPalette',[]}|[{'type',324,'wxSash',[]}|[{'type',324,'wxScroll',[]}|[{'type',324,'wxScrollWin',[]}|[{'type',324,'wxSetCursor',[]}|[{'type',324,'wxShow',[]}|[{'type',324,'wxSize',[]}|[{'type',324,'wxSpin',[]}|[{'type',324,'wxSplitter',[]}|[{'type',324,'wxStyledText',[]}|[{'type',324,'wxSysColourChanged',[]}|[{'type',324,'wxTaskBarIcon',[]}|[{'type',324,'wxTree',[]}|[{'type',324,'wxUpdateUI',[]}|[{'type',324,'wxWindowCreate',[]}|[{'type',324,'wxWindowDestroy',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 325
		'type' =
		    %% Line 325
		    [{'wxEventType',{'type',325,'union',[{'type',325,'wxActivateEventType',[]}|[{'type',325,'wxAuiManagerEventType',[]}|[{'type',325,'wxAuiNotebookEventType',[]}|[{'type',325,'wxCalendarEventType',[]}|[{'type',325,'wxChildFocusEventType',[]}|[{'type',325,'wxClipboardTextEventType',[]}|[{'type',325,'wxCloseEventType',[]}|[{'type',325,'wxColourPickerEventType',[]}|[{'type',325,'wxCommandEventType',[]}|[{'type',325,'wxContextMenuEventType',[]}|[{'type',325,'wxDateEventType',[]}|[{'type',325,'wxDisplayChangedEventType',[]}|[{'type',325,'wxEraseEventType',[]}|[{'type',325,'wxFileDirPickerEventType',[]}|[{'type',325,'wxFocusEventType',[]}|[{'type',325,'wxFontPickerEventType',[]}|[{'type',325,'wxGridEventType',[]}|[{'type',325,'wxHelpEventType',[]}|[{'type',325,'wxHtmlLinkEventType',[]}|[{'type',325,'wxIconizeEventType',[]}|[{'type',325,'wxIdleEventType',[]}|[{'type',325,'wxInitDialogEventType',[]}|[{'type',325,'wxJoystickEventType',[]}|[{'type',325,'wxKeyEventType',[]}|[{'type',325,'wxListEventType',[]}|[{'type',325,'wxMaximizeEventType',[]}|[{'type',325,'wxMenuEventType',[]}|[{'type',325,'wxMouseCaptureChangedEventType',[]}|[{'type',325,'wxMouseEventType',[]}|[{'type',325,'wxMoveEventType',[]}|[{'type',325,'wxNavigationKeyEventType',[]}|[{'type',325,'wxNotebookEventType',[]}|[{'type',325,'wxPaintEventType',[]}|[{'type',325,'wxPaletteChangedEventType',[]}|[{'type',325,'wxQueryNewPaletteEventType',[]}|[{'type',325,'wxSashEventType',[]}|[{'type',325,'wxScrollEventType',[]}|[{'type',325,'wxScrollWinEventType',[]}|[{'type',325,'wxSetCursorEventType',[]}|[{'type',325,'wxShowEventType',[]}|[{'type',325,'wxSizeEventType',[]}|[{'type',325,'wxSpinEventType',[]}|[{'type',325,'wxSplitterEventType',[]}|[{'type',325,'wxStyledTextEventType',[]}|[{'type',325,'wxSysColourChangedEventType',[]}|[{'type',325,'wxTaskBarIconEventType',[]}|[{'type',325,'wxTreeEventType',[]}|[{'type',325,'wxUpdateUIEventType',[]}|[{'type',325,'wxWindowCreateEventType',[]}|[{'type',325,'wxWindowDestroyEventType',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 328
		'type' =
		    %% Line 328
		    [{{'record','wxMouseState'},[{'typed_record_field',{'record_field',328,{'atom',328,'x'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',328,{'atom',328,'y'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'leftDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'type',329,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'middleDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'rightDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'controlDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'shiftDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'altDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'metaDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'cmdDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 333
		'type' =
		    %% Line 333
		    [{{'record','wxHtmlLinkInfo'},[{'typed_record_field',{'record_field',334,{'atom',334,'href'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',334,{'atom',334,'target'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{{'record','state'},[{'record_field',40,{'atom',40,'parent_pid'}}|[{'record_field',41,{'atom',41,'viewer_pid'}}|[{'record_field',42,{'atom',42,'event_order'}}|[{'record_field',43,{'atom',43,'event'}}|[{'record_field',44,{'atom',44,'filtered_event'}}|[{'record_field',45,{'atom',45,'active_filter'}}|[{'record_field',46,{'atom',46,'filters'}}|[{'record_field',47,{'atom',47,'win'}}|[{'record_field',48,{'atom',48,'frame'}}|[{'record_field',49,{'atom',49,'panel'}}|[{'record_field',50,{'atom',50,'width'}}|[{'record_field',51,{'atom',51,'height'}}|[{'record_field',52,{'atom',52,'editor'}}|[{'record_field',53,{'atom',53,'menu_data'}}|[{'record_field',54,{'atom',54,'wx_debug'}}|[{'record_field',55,{'atom',55,'trap_exit'}}]]]]]]]]]]]]]]]],[]}]]
'start_link'/1 =
    %% Line 81
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 82
	    apply 'default_state'/0
		()
	in  %% Line 82
	    case apply 'parse_opt'/2
		     (_cor0, _cor1) of
	      %% Line 83
	      <{'ok',S}> when 'true' ->
		  %% Line 84
		  try
		      let <WxRef> =
			  %% Line 85
			  call 'wx_object':'start_link'
			      ('et_wx_contents_viewer', [S|[]], [])
		      in  let <Pid> =
			      %% Line 86
			      call 'wx_object':'get_pid'
				  (WxRef)
			  in  do  %% Line 87
				  case <> of
				    %% Line 88
				    <>
					when ( try
						( case <> of
						    ( <>
							  when ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'is_record'
												   -| ['compiler_generated'] )
								  (S,
								   ( 'state'
								     -| ['compiler_generated'] ),
								   ( 17
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] ) ->
							  let <_cor9> =
							      ( call 'erlang':'element'
								    (2, S)
								-| ['compiler_generated'] )
							  in  let <_cor8> =
								  ( call 'erlang':'self'
									()
								    -| ['compiler_generated'] )
							      in  ( call 'erlang':'=/='
									(_cor9, _cor8)
								    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						    ( <> when 'true' ->
							  'false'
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    of <Try> ->
						Try
					    catch <T,R> ->
						'false'
					    -| ['compiler_generated'] ) ->
					%% Line 89
					call 'erlang':'unlink'
					    (Pid)
				    %% Line 90
				    <> when 'true' ->
					'ok'
				  end
				  %% Line 93
				  {'ok',Pid}
		  of <_cor11> ->
		      _cor11
		  catch <_cor14,_cor13,_cor12> ->
		      case <_cor14,_cor13,_cor12> of
			%% Line 95
			<'error',Reason,_cor18> when 'true' ->
			    let <_cor15> =
				%% Line 96
				call 'erlang':'get_stacktrace'
				    ()
			    in  %% Line 96
				{'error',{'EXIT',Reason,_cor15}}
			( <_cor14,_cor13,_cor12> when 'true' ->
			      primop 'raise'
				  (_cor12, _cor13)
			  -| ['compiler_generated'] )
		      end
	      %% Line 98
	      <{'error',Reason}> when 'true' ->
		  %% Line 99
		  {'error',Reason}
	      ( <_cor16> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor16})
		-| ['compiler_generated'] )
	    end
'default_state'/0 =
    %% Line 102
    fun () ->
	let <_cor3> =
	    %% Line 103
	    call 'erlang':'self'
		()
	in  let <_cor2> =
		%% Line 106
		( fun (_cor0) ->
		      _cor0
		  -| [{'id',{0,0,'-default_state/0-fun-0-'}}] )
	    in  %% Line 103
		{'state',_cor3,%% Line 104
			       'undefined','undefined','undefined','undefined',%% Line 105
									       'all',%% Line 106
										     [{'filter','all',_cor2}|[]],'undefined','undefined','undefined',%% Line 107
																		     600,%% Line 108
																			 300,'undefined','undefined',%% Line 109
																						     0,%% Line 110
																						       'true'}
'parse_opt'/2 =
    %% Line 112
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],S> when 'true' ->
	      %% Line 113
	      ( case S of
		  ( <( {'state',_cor78,_cor79,_cor80,_cor81,_cor82,_rec0,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 115
			case <> of
			  %% Line 116
			  <>
			      when ( call 'erlang':'=:='
				      (_cor81,
				       'undefined')
				  -| ['compiler_generated'] ) ->
			      %% Line 117
			      {'error',{'badarg','no_event'}}
			  %% Line 118
			  <>
			      when call 'erlang':'is_atom'
				    (_rec0) ->
			      %% Line 119
			      case call 'lists':'keysearch'
				       (_rec0, 2, _cor83) of
				%% Line 120
				<{'value',F = {'filter',_cor110,_cor111}}> when ( 'true'
										  -| ['compiler_generated'] ) ->
				    let <_cor16> =
					%% Line 121
					call 'erlang':'setelement'
					    (7, S, _rec0)
				    in  %% Line 121
					{'ok',_cor16}
				%% Line 122
				<'false'> when 'true' ->
				    %% Line 123
				    {'error',{'badarg',{'no_such_filter',_rec0,_cor83}}}
				( <_cor17> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor17})
				  -| ['compiler_generated'] )
			      end
			  ( <> when 'true' ->
				primop 'match_fail'
				    ('if_clause')
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor93> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 126
	  <[H|T],S> when 'true' ->
	      %% Line 127
	      case H of
		%% Line 128
		<{'parent_pid',ParentPid}>
		    when let <_cor18> =
			  call 'erlang':'is_pid'
			      (ParentPid)
		      in  let <_cor19> =
			      call 'erlang':'=:='
				  (ParentPid, 'undefined')
			  in  call 'erlang':'or'
				  (_cor18, _cor19) ->
		    %% Line 129
		    case S of
		      <{'state',_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144}> when 'true' ->
			  let <_cor22> =
			      call 'erlang':'setelement'
				  (2, S, ParentPid)
			  in  apply 'parse_opt'/2
				  (T, _cor22)
		      ( <_cor145> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 130
		<{'viewer_pid',ViewerPid}>
		    when call 'erlang':'is_pid'
			  (ViewerPid) ->
		    %% Line 131
		    case S of
		      <{'state',_cor146,_cor147,_cor148,_cor149,_cor150,_cor151,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161}> when 'true' ->
			  let <_cor25> =
			      call 'erlang':'setelement'
				  (3, S, ViewerPid)
			  in  apply 'parse_opt'/2
				  (T, _cor25)
		      ( <_cor162> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 132
		<{'wx_debug',Level}> when 'true' ->
		    %% Line 133
		    case S of
		      <{'state',_cor163,_cor164,_cor165,_cor166,_cor167,_cor168,_cor169,_cor170,_cor171,_cor172,_cor173,_cor174,_cor175,_cor176,_cor177,_cor178}> when 'true' ->
			  let <_cor28> =
			      call 'erlang':'setelement'
				  (16, S, Level)
			  in  apply 'parse_opt'/2
				  (T, _cor28)
		      ( <_cor179> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 134
		<{'trap_exit',Bool}>
		    when let <_cor29> =
			  call 'erlang':'=:='
			      (Bool, 'true')
		      in  let <_cor30> =
			      call 'erlang':'=:='
				  (Bool, 'false')
			  in  call 'erlang':'or'
				  (_cor29, _cor30) ->
		    %% Line 135
		    case S of
		      <{'state',_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191,_cor192,_cor193,_cor194,_cor195}> when 'true' ->
			  let <_cor33> =
			      call 'erlang':'setelement'
				  (17, S, Bool)
			  in  apply 'parse_opt'/2
				  (T, _cor33)
		      ( <_cor196> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 136
		<{'event_order','trace_ts'}> when 'true' ->
		    %% Line 137
		    case S of
		      <{'state',_cor197,_cor198,_cor199,_cor200,_cor201,_cor202,_cor203,_cor204,_cor205,_cor206,_cor207,_cor208,_cor209,_cor210,_cor211,_cor212}> when 'true' ->
			  let <_cor36> =
			      call 'erlang':'setelement'
				  (4, S, 'trace_ts')
			  in  apply 'parse_opt'/2
				  (T, _cor36)
		      ( <_cor213> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 138
		<{'event_order','event_ts'}> when 'true' ->
		    %% Line 139
		    case S of
		      <{'state',_cor214,_cor215,_cor216,_cor217,_cor218,_cor219,_cor220,_cor221,_cor222,_cor223,_cor224,_cor225,_cor226,_cor227,_cor228,_cor229}> when 'true' ->
			  let <_cor39> =
			      call 'erlang':'setelement'
				  (4, S, 'event_ts')
			  in  apply 'parse_opt'/2
				  (T, _cor39)
		      ( <_cor230> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 140
		<{'event',Event = {'event',_cor231,_cor232,_cor233,_cor234,_cor235,_cor236,_cor237}}> when ( 'true'
													     -| ['compiler_generated'] ) ->
		    %% Line 141
		    case S of
		      <{'state',_cor238,_cor239,_cor240,_cor241,_cor242,_cor243,_cor244,_cor245,_cor246,_cor247,_cor248,_cor249,_cor250,_cor251,_cor252,_cor253}> when 'true' ->
			  let <_cor42> =
			      call 'erlang':'setelement'
				  (5, S, Event)
			  in  apply 'parse_opt'/2
				  (T, _cor42)
		      ( <_cor254> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 142
		<{'active_filter',Name}>
		    when call 'erlang':'is_atom'
			  (Name) ->
		    %% Line 143
		    case S of
		      <{'state',_cor255,_cor256,_cor257,_cor258,_cor259,_cor260,_cor261,_cor262,_cor263,_cor264,_cor265,_cor266,_cor267,_cor268,_cor269,_cor270}> when 'true' ->
			  let <_cor45> =
			      call 'erlang':'setelement'
				  (7, S, Name)
			  in  apply 'parse_opt'/2
				  (T, _cor45)
		      ( <_cor271> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 144
		<F = {'filter',_cor272,_cor273}>
		    when ( try
			    let <_cor51> =
				%% Line 145
				call 'erlang':'is_atom'
				    (_cor272)
			    in  let <_cor54> =
				    %% Line 146
				    call 'erlang':'is_function'
					(_cor273)
				in  ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'and'
									   -| ['compiler_generated'] )
					  (_cor51, _cor54)
				      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    %% Line 147
		    ( case S of
			( <( {'state',_cor276,_cor277,_cor278,_cor279,_cor280,_cor281,_rec12,_cor282,_cor283,_cor284,_cor285,_cor286,_cor287,_cor288,_cor289,_cor290}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <Filters> =
				  call 'lists':'keydelete'
				      (_cor272, 2, _rec12)
			      in  let <Filters2> =
				      %% Line 148
				      call 'lists':'keysort'
					  (2, [F|Filters])
				  in  let <_cor64> =
					  %% Line 149
					  call 'erlang':'setelement'
					      (8, S, Filters2)
				      in  %% Line 149
					  apply 'parse_opt'/2
					      (T, _cor64)
			  -| ['compiler_generated'] )
			( <_cor291> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 150
		<{'width',Width}>
		    when let <_cor65> =
			  call 'erlang':'is_integer'
			      (Width)
		      in  let <_cor66> =
			      call 'erlang':'>'
				  (Width, 0)
			  in  call 'erlang':'and'
				  (_cor65, _cor66) ->
		    %% Line 151
		    case S of
		      <{'state',_cor309,_cor310,_cor311,_cor312,_cor313,_cor314,_cor315,_cor316,_cor317,_cor318,_cor319,_cor320,_cor321,_cor322,_cor323,_cor324}> when 'true' ->
			  let <_cor69> =
			      call 'erlang':'setelement'
				  (12, S, Width)
			  in  apply 'parse_opt'/2
				  (T, _cor69)
		      ( <_cor325> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 152
		<{'height',Height}>
		    when let <_cor70> =
			  call 'erlang':'is_integer'
			      (Height)
		      in  let <_cor71> =
			      call 'erlang':'>'
				  (Height, 0)
			  in  call 'erlang':'and'
				  (_cor70, _cor71) ->
		    %% Line 153
		    case S of
		      <{'state',_cor326,_cor327,_cor328,_cor329,_cor330,_cor331,_cor332,_cor333,_cor334,_cor335,_cor336,_cor337,_cor338,_cor339,_cor340,_cor341}> when 'true' ->
			  let <_cor74> =
			      call 'erlang':'setelement'
				  (13, S, Height)
			  in  apply 'parse_opt'/2
				  (T, _cor74)
		      ( <_cor342> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 154
		<Bad> when 'true' ->
		    %% Line 155
		    {'error',{'bad_option',Bad}}
	      end
	  %% Line 157
	  <BadList,_X_S> when 'true' ->
	      %% Line 158
	      {'error',{'bad_option_list',BadList}}
	end
'stop'/1 =
    %% Line 168
    fun (_cor0) ->
	case _cor0 of
	  <ContentsPid>
	      when call 'erlang':'is_pid'
		    (_cor0) ->
	      let <MonitorRef> =
		  %% Line 170
		  call 'erlang':'monitor'
		      ('process', ContentsPid)
	      in  let <_cor3> =
		      %% Line 171
		      call 'erlang':'self'
			  ()
		  in  do  %% Line 171
			  call 'erlang':'!'
			      (ContentsPid, {'stop',_cor3})
			  %% Line 172
			  receive
			    %% Line 173
			    <{'DOWN',_cor5,_cor6,_cor7,'shutdown'}>
				when let <_cor10> =
				      call 'erlang':'=:='
					  (_cor5, MonitorRef)
				  in  let <_cor8> =
					  call 'erlang':'=:='
					      (_cor6, 'process')
				      in  let <_cor9> =
					      call 'erlang':'=:='
						  (_cor7, ContentsPid)
					  in  let <_cor11> =
						  call 'erlang':'and'
						      (_cor8, _cor9)
					      in  call 'erlang':'and'
						      (_cor10, _cor11) ->
				%% Line 174
				'ok'
			    %% Line 175
			    <{'DOWN',_cor12,_cor13,_cor14,Reason}>
				when let <_cor17> =
				      call 'erlang':'=:='
					  (_cor12, MonitorRef)
				  in  let <_cor15> =
					  call 'erlang':'=:='
					      (_cor13, 'process')
				      in  let <_cor16> =
					      call 'erlang':'=:='
						  (_cor14, ContentsPid)
					  in  let <_cor18> =
						  call 'erlang':'and'
						      (_cor15, _cor16)
					      in  call 'erlang':'and'
						      (_cor17, _cor18) ->
				%% Line 176
				{'error',Reason}
			  after 'infinity' ->
			    'true'
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'stop',1}}] )
	    -| ['compiler_generated'] )
	end
'init'/1 =
    %% Line 194
    fun (_cor0) ->
	case _cor0 of
	  <[S = {'state',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27}|[]]> when ( 'true'
																		      -| ['compiler_generated'] ) ->
	      do  %% Line 195
		  call 'erlang':'process_flag'
		      ('trap_exit', _cor27)
		  do  %% Line 196
		      case _cor12 of
			%% Line 197
			<'undefined'> when 'true' ->
			    'ok'
			%% Line 198
			<ParentPid> when 'true' ->
			    call 'erlang':'link'
				(ParentPid)
		      end
		      do  %% Line 200
			  call 'wx':'debug'
			      (_cor26)
			  let <S2> =
			      %% Line 201
			      apply 'create_window'/1
				  (S)
			  in  %% Line 202
			      ( case S2 of
				  ( <( {'state',_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_rec19,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90}
				       -| ['compiler_generated'] )> when 'true' ->
					{_rec19,S2}
				    -| ['compiler_generated'] )
				  ( <_cor91> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','state'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
	  ( <_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11})
		  -| [{'function_name',{'init',1}}] )
	    -| ['compiler_generated'] )
	end
'handle_call'/3 =
    %% Line 214
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 216
	    call 'erlang':'self'
		()
	in  %% Line 215
	    case call 'error_logger':'format'
		     ([126|[112|[40|[126|[112|[41|[58|[32|[104|[97|[110|[100|[108|[101|[95|[99|[97|[108|[108|[40|[126|[112|[44|[32|[126|[112|[44|[32|[126|[112|[41|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 216
																									       ['et_wx_contents_viewer'|[_cor3|[_cor2|[_cor1|[_cor0|[]]]]]]) of
	      <'ok'> when 'true' ->
		  let <Reply> = {%% Line 217
		       'error',%% Line 217
			       {'bad_request',_cor2}}
		  in  %% Line 218
		      {'reply',Reply,_cor0}
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor4})
		-| ['compiler_generated'] )
	    end
'handle_cast'/2 =
    %% Line 227
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 229
	    call 'erlang':'self'
		()
	in  %% Line 228
	    case call 'error_logger':'format'
		     ([126|[112|[40|[126|[112|[41|[58|[32|[104|[97|[110|[100|[108|[101|[95|[99|[97|[115|[116|[40|[126|[112|[44|[32|[126|[112|[41|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 229
																							 ['et_wx_contents_viewer'|[_cor2|[_cor1|[_cor0|[]]]]]) of
	      <'ok'> when 'true' ->
		  %% Line 230
		  {'noreply',_cor0}
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor3})
		-| ['compiler_generated'] )
	    end
'handle_event'/2 =
    %% Line 239
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx',Id,_cor158,_cor159,%% Line 240
				    {'wxCommand','command_menu_selected',_cor160,_cor161,_cor162}},%% Line 241
												   S> when 'true' ->
	      %% Line 242
	      ( case S of
		  ( <( {'state',_cor163,_cor164,_cor165,_cor166,_cor167,_cor168,_cor169,_cor170,_cor171,_cor172,_cor173,_cor174,_cor175,_rec20,_cor176,_cor177}
		       -| ['compiler_generated'] )> when 'true' ->
			do  case call 'proplists':'get_value'
				     (Id, _rec20) of
			      %% Line 243
			      <'undefined'> when 'true' ->
				  'ok'
			      %% Line 245
			      <Data = {'filter',_cor179,_cor180}> when ( 'true'
									 -| ['compiler_generated'] ) ->
				  let <_cor10> =
				      %% Line 247
				      call 'erlang':'setelement'
					  (7, S, _cor179)
				  in  %% Line 248
				      call 'wx_object':'start_link'
					  ('et_wx_contents_viewer', [_cor10|[]], [])
			      %% Line 249
			      <{'hide',Actors}> when 'true' ->
				  %% Line 250
				  apply 'send_viewer_event'/2
				      (S, {'delete_actors',Actors})
			      %% Line 251
			      <{'show',Actors}> when 'true' ->
				  %% Line 252
				  apply 'send_viewer_event'/2
				      (S, {'insert_actors',Actors})
			      %% Line 253
			      <{'mode',Mode}> when 'true' ->
				  %% Line 254
				  apply 'send_viewer_event'/2
				      (S, {'mode',Mode})
			      %% Line 255
			      <Nyi> when 'true' ->
				  %% Line 256
				  case call 'error_logger':'format'
					   ([126|[112|[58|[32|[99|[108|[105|[99|[107|[32|[126|[112|[32|[105|[103|[110|[111|[114|[101|[100|[32|[40|[110|[121|[105|[41|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 257
																									    ['et_wx_contents_viewer'|[Nyi|[]]]) of
				    <'ok'> when 'true' ->
					'ok'
				    ( <_cor12> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor12})
				      -| ['compiler_generated'] )
				  end
			    end
			    %% Line 259
			    case Id of
			      %% Line 260
			      <5006> when 'true' ->
				  do  %% Line 261
				      call 'wxFrame':'destroy'
					  (_cor171)
				      do  %% Line 262
					  apply 'opt_unlink'/1
					      (_cor163)
					  %% Line 263
					  {'stop','shutdown',S}
			      %% Line 264
			      <5003> when 'true' ->
				  let <_cor26> =
				      %% Line 267
				      case _cor165 of
					%% Line 268
					<'trace_ts'> when 'true' ->
					    ( case _cor166 of
						( <( {'event',_cor265,_rec28,_cor266,_cor267,_cor268,_cor269,_cor270}
						     -| ['compiler_generated'] )> when 'true' ->
						      _rec28
						  -| ['compiler_generated'] )
						( <_cor271> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','event'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					%% Line 269
					<'event_ts'> when 'true' ->
					    ( case _cor166 of
						( <( {'event',_cor272,_cor273,_rec29,_cor274,_cor275,_cor276,_cor277}
						     -| ['compiler_generated'] )> when 'true' ->
						      _rec29
						  -| ['compiler_generated'] )
						( <_cor278> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','event'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					( <_cor25> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_cor25})
					  -| ['compiler_generated'] )
				      end
				  in  let <_cor28> =
					  %% Line 271
					  apply 'now_to_string'/1
					      (_cor26)
				      in  let <FileName> =
					      %% Line 271
					      call 'lists':'flatten'
						  ([[101|[116|[95|[99|[111|[110|[116|[101|[110|[116|[115|[95|[118|[105|[101|[119|[101|[114|[95]]]]]]]]]]]]]]]]]]]|[_cor28|[[46|[116|[120|[116]]]]]]])
					  in  let <_cor32> =
						  %% Line 274
						  call 'filename':'absname'
						      (FileName)
					      in  do  %% Line 274
						      case apply 'select_file'/4
							       (_cor171, [83|[101|[108|[101|[99|[116|[32|[97|[32|[102|[105|[108|[101|[32|[116|[111|[32|[116|[104|[101|[32|[101|[118|[101|[110|[116|[115|[32|[116|[111]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor32, 6) of
							%% Line 275
							<{'ok',FileName2}> when 'true' ->
							    let <_cor37> =
								%% Line 276
								apply 'event_to_string'/2
								    (_cor166, _cor165)
							    in  let <Bin> =
								    %% Line 276
								    call 'erlang':'list_to_binary'
									(_cor37)
								in  %% Line 277
								    call 'file':'write_file'
									(FileName2, Bin)
							%% Line 278
							<'cancel'> when 'true' ->
							    'ok'
							( <_cor39> when 'true' ->
							      primop 'match_fail'
								  ({'case_clause',_cor39})
							  -| ['compiler_generated'] )
						      end
						      %% Line 281
						      {'noreply',S}
			      %% Line 282
			      <5010> when 'true' ->
				  let <Html> =
				      %% Line 283
				      call 'wxHtmlEasyPrinting':'new'
					  ([{'parentWindow',_cor170}|[]])
				  in  let <_cor45> =
					  %% Line 284
					  call 'wxTextCtrl':'getValue'
					      (_cor175)
				      in  let <_cor46> =
					      %% Line 284
					      call 'erlang':'++'
						  (_cor45, [60|[47|[112|[114|[101|[62]]]]]])
					  in  let <Text> =
						  %% Line 284
						  call 'erlang':'++'
						      ([60|[112|[114|[101|[62]]]]], _cor46)
					      in  do  %% Line 285
						      call 'wxHtmlEasyPrinting':'previewText'
							  (Html, Text)
						      %% Line 286
						      {'noreply',S}
			      %% Line 287
			      <_cor343> when 'true' ->
				  %% Line 288
				  {'noreply',S}
			    end
		    -| ['compiler_generated'] )
		  ( <_cor178> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 290
	  <{'wx',_cor344,_cor345,_cor346,{'wxKey',_cor347,_cor348,_cor349,_cor350,_cor351,_cor352,_cor353,_cor354,_cor355,_cor356,KeyCode,_cor357}},S> when 'true' ->
	      %% Line 291
	      case KeyCode of
		%% Line 292
		<99> when 'true' ->
		    %% Line 293
		    ( case S of
			( <( {'state',_cor358,_cor359,_cor360,_cor361,_cor362,_cor363,_cor364,_cor365,_rec34,_cor366,_cor367,_cor368,_cor369,_cor370,_cor371,_cor372}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  call 'wxFrame':'destroy'
				      (_rec34)
				  do  %% Line 294
				      apply 'opt_unlink'/1
					  (_cor358)
				      %% Line 295
				      {'stop','normal',S}
			  -| ['compiler_generated'] )
			( <_cor373> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 296
		<102> when 'true' ->
		    %% Line 297
		    ( case S of
			( <( {'state',_cor390,_cor391,_cor392,_cor393,_rec36,_cor394,_cor395,_cor396,_cor397,_cor398,_cor399,_cor400,_cor401,_cor402,_cor403,_cor404}
			     -| ['compiler_generated'] )> when 'true' ->
			      %% Line 298
			      ( case _rec36 of
				  ( <( {'event',_cor406,_cor407,_cor408,_rec37,_cor409,_cor410,_cor411}
				       -| ['compiler_generated'] )> when 'true' ->
					do  %% Line 299
					    apply 'send_viewer_event'/2
						(S, {'delete_actors',[_rec37|[]]})
					    %% Line 300
					    {'noreply',S}
				    -| ['compiler_generated'] )
				  ( <_cor412> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','event'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_cor405> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 301
		<116> when 'true' ->
		    %% Line 302
		    ( case S of
			( <( {'state',_cor413,_cor414,_cor415,_cor416,_rec38,_cor417,_cor418,_cor419,_cor420,_cor421,_cor422,_cor423,_cor424,_cor425,_cor426,_cor427}
			     -| ['compiler_generated'] )> when 'true' ->
			      %% Line 303
			      ( case _rec38 of
				  ( <( {'event',_cor429,_cor430,_cor431,_cor432,_rec39,_cor433,_cor434}
				       -| ['compiler_generated'] )> when 'true' ->
					do  %% Line 304
					    apply 'send_viewer_event'/2
						(S, {'delete_actors',[_rec39|[]]})
					    %% Line 305
					    {'noreply',S}
				    -| ['compiler_generated'] )
				  ( <_cor435> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','event'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_cor428> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 306
		<98> when 'true' ->
		    %% Line 307
		    ( case S of
			( <( {'state',_cor436,_cor437,_cor438,_cor439,_rec40,_cor440,_cor441,_cor442,_cor443,_cor444,_cor445,_cor446,_cor447,_cor448,_cor449,_cor450}
			     -| ['compiler_generated'] )> when 'true' ->
			      %% Line 308
			      ( case _rec40 of
				  ( <( {'event',_cor452,_cor453,_cor454,_rec41,_cor455,_cor456,_cor457}
				       -| ['compiler_generated'] )> when 'true' ->
					do  %% Line 310
					    apply 'send_viewer_event'/2
						(S, {'delete_actors',[_rec41|[_cor455|[]]]})
					    %% Line 311
					    {'noreply',S}
				    -| ['compiler_generated'] )
				  ( <_cor458> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','event'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_cor451> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 313
		<70> when 'true' ->
		    %% Line 314
		    ( case S of
			( <( {'state',_cor466,_cor467,_cor468,_cor469,_rec43,_cor470,_cor471,_cor472,_cor473,_cor474,_cor475,_cor476,_cor477,_cor478,_cor479,_cor480}
			     -| ['compiler_generated'] )> when 'true' ->
			      %% Line 315
			      ( case _rec43 of
				  ( <( {'event',_cor482,_cor483,_cor484,_rec44,_cor485,_cor486,_cor487}
				       -| ['compiler_generated'] )> when 'true' ->
					do  %% Line 316
					    apply 'send_viewer_event'/2
						(S, {'insert_actors',[_rec44|[]]})
					    %% Line 317
					    {'noreply',S}
				    -| ['compiler_generated'] )
				  ( <_cor488> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','event'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_cor481> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 318
		<84> when 'true' ->
		    %% Line 319
		    ( case S of
			( <( {'state',_cor489,_cor490,_cor491,_cor492,_rec45,_cor493,_cor494,_cor495,_cor496,_cor497,_cor498,_cor499,_cor500,_cor501,_cor502,_cor503}
			     -| ['compiler_generated'] )> when 'true' ->
			      %% Line 320
			      ( case _rec45 of
				  ( <( {'event',_cor505,_cor506,_cor507,_cor508,_rec46,_cor509,_cor510}
				       -| ['compiler_generated'] )> when 'true' ->
					do  %% Line 321
					    apply 'send_viewer_event'/2
						(S, {'insert_actors',[_rec46|[]]})
					    %% Line 322
					    {'noreply',S}
				    -| ['compiler_generated'] )
				  ( <_cor511> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','event'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_cor504> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 323
		<66> when 'true' ->
		    %% Line 324
		    ( case S of
			( <( {'state',_cor512,_cor513,_cor514,_cor515,_rec47,_cor516,_cor517,_cor518,_cor519,_cor520,_cor521,_cor522,_cor523,_cor524,_cor525,_cor526}
			     -| ['compiler_generated'] )> when 'true' ->
			      %% Line 325
			      ( case _rec47 of
				  ( <( {'event',_cor528,_cor529,_cor530,_rec48,_cor531,_cor532,_cor533}
				       -| ['compiler_generated'] )> when 'true' ->
					do  %% Line 327
					    apply 'send_viewer_event'/2
						(S, {'insert_actors',[_rec48|[_cor531|[]]]})
					    %% Line 328
					    {'noreply',S}
				    -| ['compiler_generated'] )
				  ( <_cor534> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','event'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_cor527> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 330
		<115> when 'true' ->
		    %% Line 331
		    ( case S of
			( <( {'state',_cor542,_cor543,_cor544,_cor545,_rec50,_cor546,_cor547,_cor548,_cor549,_cor550,_cor551,_cor552,_cor553,_cor554,_cor555,_cor556}
			     -| ['compiler_generated'] )> when 'true' ->
			      %% Line 332
			      ( case _rec50 of
				  ( <( {'event',_cor558,_cor559,_cor560,_rec51,_cor561,_cor562,_cor563}
				       -| ['compiler_generated'] )> when 'true' ->
					let <First> =
					    %% Line 334
					    call 'et_collector':'make_key'
						(_cor544, _rec50)
					in  let <Mode> =
						%% Line 335
						{'search_actors','forward',First,[_rec51|[_cor561|[]]]}
					    in  do  %% Line 336
						    apply 'send_viewer_event'/2
							(S, {'mode',Mode})
						    %% Line 337
						    {'noreply',S}
				    -| ['compiler_generated'] )
				  ( <_cor564> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','event'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_cor557> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 338
		<114> when 'true' ->
		    %% Line 339
		    ( case S of
			( <( {'state',_cor588,_cor589,_cor590,_cor591,_rec54,_cor592,_cor593,_cor594,_cor595,_cor596,_cor597,_cor598,_cor599,_cor600,_cor601,_cor602}
			     -| ['compiler_generated'] )> when 'true' ->
			      %% Line 340
			      ( case _rec54 of
				  ( <( {'event',_cor604,_cor605,_cor606,_rec55,_cor607,_cor608,_cor609}
				       -| ['compiler_generated'] )> when 'true' ->
					let <First> =
					    %% Line 342
					    call 'et_collector':'make_key'
						(_cor590, _rec54)
					in  let <Mode> =
						%% Line 343
						{'search_actors','reverse',First,[_rec55|[_cor607|[]]]}
					    in  do  %% Line 344
						    apply 'send_viewer_event'/2
							(S, {'mode',Mode})
						    %% Line 345
						    {'noreply',S}
				    -| ['compiler_generated'] )
				  ( <_cor610> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','event'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_cor603> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 346
		<97> when 'true' ->
		    do  %% Line 347
			apply 'send_viewer_event'/2
			    (S, {'mode','all'})
			%% Line 348
			{'noreply',S}
		%% Line 350
		<48> when 'true' ->
		    %% Line 351
		    ( case S of
			( <( {'state',_cor634,_cor635,_cor636,_cor637,_cor638,_cor639,_rec58,_cor640,_cor641,_cor642,_cor643,_cor644,_cor645,_cor646,_cor647,_cor648}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  case call 'lists':'keysearch'
					   ('all', 2, _rec58) of
				    %% Line 352
				    <{'value',F = {'filter',_cor650,_cor651}}> when ( 'true'
										      -| ['compiler_generated'] ) ->
					let <_cor128> =
					    %% Line 353
					    call 'erlang':'setelement'
						(7, S, _cor650)
					in  %% Line 354
					    call 'wx_object':'start_link'
						('et_wx_contents_viewer', [_cor128|[]], [])
				    %% Line 355
				    <'false'> when 'true' ->
					'ok'
				    ( <_cor130> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor130})
				      -| ['compiler_generated'] )
				  end
				  %% Line 358
				  {'noreply',S}
			  -| ['compiler_generated'] )
			( <_cor649> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 359
		<Int>
		    when try
			  let <_cor131> =
			      call 'erlang':'is_integer'
				  (KeyCode)
			  in  let <_cor132> =
				  call 'erlang':'>'
				      (KeyCode, 48)
			      in  let <_cor133> =
				      call 'erlang':'=<'
					  (KeyCode, 57)
				  in  let <_cor134> =
					  call 'erlang':'and'
					      (_cor132, _cor133)
				      in  call 'erlang':'and'
					      (_cor131, _cor134)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    let <_cor138> =
			catch
			    let <_cor137> =
				%% Line 360
				call 'erlang':'-'
				    (Int, 48)
			    in  %% Line 360
				( case S of
				    ( <( {'state',_cor671,_cor672,_cor673,_cor674,_cor675,_cor676,_rec62,_cor677,_cor678,_cor679,_cor680,_cor681,_cor682,_cor683,_cor684,_cor685}
					 -| ['compiler_generated'] )> when 'true' ->
					  call 'lists':'nth'
					      (_cor137, _rec62)
				      -| ['compiler_generated'] )
				    ( <_cor686> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','state'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
		    in  do  %% Line 360
			    case _cor138 of
			      %% Line 361
			      <F = {'filter',_cor687,_cor688}> when ( 'true'
								      -| ['compiler_generated'] ) ->
				  %% Line 362
				  case S of
				    <{'state',_cor691,_cor692,_cor693,_cor694,_cor695,_cor696,_cor697,_cor698,_cor699,_cor700,_cor701,_cor702,_cor703,_cor704,_cor705,_cor706}> when 'true' ->
					let <_cor144> =
					    call 'erlang':'setelement'
						(7, S, _cor687)
					in  %% Line 363
					    call 'wx_object':'start_link'
						('et_wx_contents_viewer', [_cor144|[]], [])
				    ( <_cor707> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','state'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
			      %% Line 364
			      <{'EXIT',_cor708}> when 'true' ->
				  'ok'
			      ( <_cor146> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor146})
				-| ['compiler_generated'] )
			    end
			    %% Line 367
			    {'noreply',S}
		%% Line 369
		<_cor709> when 'true' ->
		    do  %% Line 370
			call 'io':'format'
			    ([126|[112|[58|[32|[105|[103|[110|[111|[114|[101|[100|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]], ['et_wx_contents_viewer'|[KeyCode|[]]])
			%% Line 371
			{'noreply',S}
	      end
	  %% Line 373
	  <{'wx',_cor710,_cor711,_cor712,{'wxClose',_cor713}},S> when 'true' ->
	      %% Line 374
	      ( case S of
		  ( <( {'state',_rec66,_cor714,_cor715,_cor716,_cor717,_cor718,_cor719,_cor720,_cor721,_cor722,_cor723,_cor724,_cor725,_cor726,_cor727,_cor728}
		       -| ['compiler_generated'] )> when 'true' ->
			do  apply 'opt_unlink'/1
				(_rec66)
			    %% Line 375
			    {'stop','shutdown',S}
		    -| ['compiler_generated'] )
		  ( <_cor729> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 376
	  <{'wx',_cor730,_cor731,_cor732,{'wxSize',_cor733,{W,H},_cor734}},S> when 'true' ->
	      %% Line 377
	      case S of
		<{'state',_cor735,_cor736,_cor737,_cor738,_cor739,_cor740,_cor741,_cor742,_cor743,_cor744,_cor745,_cor746,_cor747,_cor748,_cor749,_cor750}> when 'true' ->
		    let <_cor151> =
			call 'erlang':'setelement'
			    (13, S, H)
		    in  let <_cor153> =
			    call 'erlang':'setelement'
				(12, _cor151, W)
			in  %% Line 378
			    {'noreply',_cor153}
		( <_cor751> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 379
	  <Wx = {'wx',_cor752,_cor753,_cor754,_cor755},S> when 'true' ->
	      let <_cor155> =
		  %% Line 380
		  call 'erlang':'self'
		      ()
	      in  do  %% Line 380
		      call 'io':'format'
			  ([126|[112|[32|[103|[111|[116|[32|[97|[110|[32|[117|[110|[101|[120|[112|[101|[99|[116|[101|[100|[32|[101|[118|[101|[110|[116|[58|[32|[126|[112|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor155|[Wx|[]]])
		      %% Line 381
		      {'noreply',S}
	  ( <_cor157,_cor156> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor157,_cor156})
		  -| [{'function_name',{'handle_event',2}}] )
	    -| ['compiler_generated'] )
	end
'handle_info'/2 =
    %% Line 390
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'stop',_X_From},S> when 'true' ->
	      %% Line 391
	      ( case S of
		  ( <( {'state',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_rec68,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34}
		       -| ['compiler_generated'] )> when 'true' ->
			do  call 'wxFrame':'destroy'
				(_rec68)
			    do  %% Line 392
				apply 'opt_unlink'/1
				    (_cor20)
				%% Line 393
				{'stop','shutdown',S}
		    -| ['compiler_generated'] )
		  ( <_cor35> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 394
	  <{'EXIT',Pid,Reason},S> when 'true' ->
	      %% Line 395
	      case <> of
		%% Line 396
		<>
		    when ( try
			    ( case <> of
				( <>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_record'
									       -| ['compiler_generated'] )
					      (S,
					       ( 'state'
						 -| ['compiler_generated'] ),
					       ( 17
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] ) ->
				      let <_cor10> =
					  ( call 'erlang':'element'
						(2, S)
					    -| ['compiler_generated'] )
				      in  ( call 'erlang':'=:='
						(Pid, _cor10)
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    %% Line 397
		    ( case S of
			( <( {'state',_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_rec70,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  call 'wxFrame':'destroy'
				      (_rec70)
				  do  %% Line 398
				      apply 'opt_unlink'/1
					  (_cor52)
				      %% Line 399
				      {'stop',Reason,S}
			  -| ['compiler_generated'] )
			( <_cor67> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 400
		<> when 'true' ->
		    %% Line 401
		    {'noreply',S}
	      end
	  %% Line 403
	  <Info,S> when 'true' ->
	      let <_cor16> =
		  %% Line 405
		  call 'erlang':'self'
		      ()
	      in  %% Line 404
		  case call 'error_logger':'format'
			   ([126|[112|[40|[126|[112|[41|[58|[32|[104|[97|[110|[100|[108|[101|[95|[105|[110|[102|[111|[40|[126|[112|[44|[32|[126|[112|[41|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 405
																								 ['et_wx_contents_viewer'|[_cor16|[Info|[S|[]]]]]) of
		    <'ok'> when 'true' ->
			%% Line 406
			{'noreply',S}
		    ( <_cor17> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor17})
		      -| ['compiler_generated'] )
		  end
	end
'terminate'/2 =
    %% Line 414
    fun (_cor1,_cor0) ->
	%% Line 415
	'ignore'
'code_change'/3 =
    %% Line 423
    fun (_cor2,_cor1,_cor0) ->
	%% Line 424
	{'ok',_cor1}
'opt_unlink'/1 =
    %% Line 430
    fun (_cor0) ->
	%% Line 431
	case <> of
	  %% Line 432
	  <>
	      when call 'erlang':'=:='
		    (_cor0,
		     'undefined') ->
	      %% Line 433
	      'ignore'
	  %% Line 434
	  <> when 'true' ->
	      %% Line 435
	      call 'erlang':'unlink'
		  (_cor0)
	end
'create_window'/1 =
    %% Line 438
    fun (_cor0) ->
	%% Line 439
	( case _cor0 of
	    ( <( {'state',_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_rec72,_cor58,_cor59,_cor60,_cor61}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Title> =
		      %% Line 442
		      call 'lists':'concat'
			  (['et_wx_contents_viewer'|[[32|[40|[102|[105|[108|[116|[101|[114|[58|[32]]]]]]]]]]|[_cor52|[[41]]]]])
		  in  let <WinOpt> =
			  %% Line 443
			  [{'size',{_cor57,_rec72}}|[]]
		      in  let <_cor13> =
			      %% Line 444
			      call 'wx':'null'
				  ()
			  in  let <Frame> =
				  %% Line 444
				  call 'wxFrame':'new'
				      (_cor13, -1, Title, WinOpt)
			      in  do  %% Line 445
				      call 'wxFrame':'createStatusBar'
					  (Frame)
				      let <Panel> =
					  %% Line 447
					  call 'wxPanel':'new'
					      (Frame, [])
				      in  let <Bar> =
					      %% Line 448
					      call 'wxMenuBar':'new'
						  ()
					  in  do  %% Line 449
						  call 'wxFrame':'setMenuBar'
						      (Frame, Bar)
						  do  %% Line 450
						      apply 'create_file_menu'/1
							  (Bar)
						      let <Editor> =
							  %% Line 451
							  call 'wxTextCtrl':'new'
							      (Panel, -1, [{'style',1073774710}])
						      in  let <Font> =
							      %% Line 457
							      call 'wxFont':'new'
								  (10, 76, 90, 90, [])
							  in  let <_cor25> =
								  %% Line 458
								  call 'wxe_util':'get_const'
								      ('wxBLACK')
							      in  let <TextAttr> =
								      %% Line 458
								      call 'wxTextAttr':'new'
									  (_cor25, [{'font',Font}|[]])
								  in  do  %% Line 459
									  call 'wxTextCtrl':'setDefaultStyle'
									      (Editor, TextAttr)
									  let <Sizer> =
									      %% Line 460
									      call 'wxBoxSizer':'new'
										  (4)
									  in  do  %% Line 461
										  call 'wxSizer':'add'
										      (Sizer, Editor, [{'flag',8192}|[{'proportion',1}]])
										  let <FilteredEvent> =
										      %% Line 462
										      apply 'config_editor'/2
											  (Editor, _cor0)
										  in  let <_cor30> =
											  %% Line 463
											  call 'erlang':'setelement'
											      (11, _cor0, Panel)
										      in  let <_cor31> =
											      %% Line 463
											      call 'erlang':'setelement'
												  (9, _cor30, Frame)
											  in  let <_cor33> =
												  %% Line 463
												  call 'erlang':'setelement'
												      (6, _cor31, FilteredEvent)
											      in  let <HideData> =
												      %% Line 464
												      apply 'create_hide_menu'/2
													  (Bar, _cor33)
												  in  let <SearchData> =
													  %% Line 465
													  apply 'create_search_menu'/2
													      (Bar, _cor33)
												      in  let <FilterData> =
													      %% Line 466
													      apply 'create_filter_menu'/2
														  (Bar, _cor53)
													  in  do  %% Line 467
														  call 'wxFrame':'connect'
														      (Frame, 'command_menu_selected', [])
														  do  %% Line 468
														      call 'wxFrame':'connect'
															  (Frame, 'key_up')
														      do  %% Line 469
															  call 'wxFrame':'connect'
															      (Frame, 'close_window', [{'skip','true'}])
															  do  %% Line 470
															      call 'wxFrame':'setFocus'
																  (Frame)
															      do  %% Line 471
																  call 'wxPanel':'setSizer'
																      (Panel, Sizer)
																  do  %% Line 472
																      call 'wxSizer':'fit'
																	  (Sizer, Panel)
																      do  %% Line 473
																	  call 'wxFrame':'show'
																	      (Frame)
																	  let <_cor40> =
																	      %% Line 474
																	      call 'erlang':'++'
																		  (SearchData, FilterData)
																	  in  let <_rec77> =
																		  %% Line 474
																		  call 'erlang':'++'
																		      (HideData, _cor40)
																	      in  %% Line 474
																		  case _cor33 of
																		    <{'state',_cor128,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143}> when 'true' ->
																			let <_cor43> =
																			    call 'erlang':'setelement'
																				(15, _cor33, _rec77)
																			in  let <_cor44> =
																				call 'erlang':'setelement'
																				    (14, _cor43, Editor)
																			    in  call 'erlang':'setelement'
																				    (10, _cor44, Frame)
																		    ( <_cor144> when 'true' ->
																			  ( call ( 'erlang'
																				   -| ['compiler_generated'] ):( 'error'
																								 -| ['compiler_generated'] )
																				(( {'badrecord','state'}
																				   -| ['compiler_generated'] ))
																			    -| ['compiler_generated'] )
																		      -| ['compiler_generated'] )
																		  end
	      -| ['compiler_generated'] )
	    ( <_cor62> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'menuitem'/4 =
    %% Line 476
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Item> =
	    %% Line 477
	    call 'wxMenu':'append'
		(_cor3, _cor2, _cor1)
	in  let <_cor5> =
		%% Line 478
		call 'wxMenuItem':'getId'
		    (Item)
	    in  %% Line 478
		{_cor5,_cor0}
'create_file_menu'/1 =
    %% Line 480
    fun (_cor0) ->
	let <Menu> =
	    %% Line 481
	    call 'wxMenu':'new'
		([])
	in  do  %% Line 482
		call 'wxMenu':'append'
		    (Menu, 5003, [83|[97|[118|[101]]]])
		do  %% Line 483
		    call 'wxMenu':'append'
			(Menu, 5010, [80|[114|[105|[110|[116]]]]])
		    do  %% Line 484
			call 'wxMenu':'appendSeparator'
			    (Menu)
			do  %% Line 485
			    call 'wxMenu':'append'
				(Menu, 5006, [67|[108|[111|[115|[101]]]]])
			    %% Line 486
			    call 'wxMenuBar':'append'
				(_cor0, Menu, [70|[105|[108|[101]]]])
'create_filter_menu'/2 =
    %% Line 488
    fun (_cor1,_cor0) ->
	let <Menu> =
	    %% Line 489
	    call 'wxMenu':'new'
		([])
	in  let <_cor4> =
		%% Line 490
		call 'wxMenu':'append'
		    (Menu, -1, [83|[101|[108|[101|[99|[116|[32|[70|[105|[108|[116|[101|[114]]]]]]]]]]]]])
	    in  do  %% Line 490
		    call 'wxMenuItem':'enable'
			(_cor4, [{'enable','false'}])
		    do  %% Line 491
			call 'wxMenu':'appendSeparator'
			    (Menu)
			let <Item> =
			    %% Line 492
			    ( fun (_cor27,_cor26) ->
				  case <_cor27,_cor26> of
				    <F = {'filter',_cor35,_cor36},{N,Acc}>
					when call 'erlang':'=:='
					      (_cor35,
					       'all') ->
					let <_cor13> =
					    %% Line 493
					    apply 'pad_string'/4
						(_cor35, 20, 32, 'right')
					in  let <Label> =
						%% Line 493
						call 'lists':'concat'
						    ([_cor13|[[40|[48|[41]]]]])
					    in  let <MenuItem> =
						    %% Line 494
						    apply 'menuitem'/4
							(Menu, -1, Label, F)
						in  let <_cor17> =
							%% Line 495
							call 'erlang':'+'
							    (N, 1)
						    in  %% Line 495
							{_cor17,[MenuItem|Acc]}
				    %% Line 496
				    <F,{N,Acc}> when 'true' ->
					%% Line 497
					( case F of
					    ( <( {'filter',_rec80,_cor39}
						 -| ['compiler_generated'] )> when 'true' ->
						  let <_cor21> =
						      %% Line 498
						      apply 'pad_string'/4
							  (_rec80, 20, 32, 'right')
						  in  let <Label> =
							  %% Line 498
							  call 'lists':'concat'
							      ([_cor21|[[40]|[N|[[41]]]]])
						      in  let <MenuItem> =
							      %% Line 499
							      apply 'menuitem'/4
								  (Menu, -1, Label, F)
							  in  let <_cor25> =
								  %% Line 500
								  call 'erlang':'+'
								      (N, 1)
							      in  %% Line 500
								  {_cor25,[MenuItem|Acc]}
					      -| ['compiler_generated'] )
					    ( <_cor40> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','filter'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    ( <_cor29,_cor28> when 'true' ->
					  ( primop 'match_fail'
						({'function_clause',_cor29,_cor28})
					    -| [{'function_name',{'-create_filter_menu/2-fun-0-',2}}] )
				      -| ['compiler_generated'] )
				  end
			      -| [{'id',{0,0,'-create_filter_menu/2-fun-0-'}}] )
			in  let <Filters2> =
				%% Line 502
				call 'lists':'keysort'
				    (2, _cor0)
			    in  %% Line 503
				case call 'lists':'foldl'
					 (Item, {1,[]}, Filters2) of
				  <{_cor41,MenuData}> when 'true' ->
				      do  %% Line 504
					  call 'wxMenuBar':'append'
					      (_cor1, Menu, [70|[105|[108|[116|[101|[114|[115]]]]]]])
					  %% Line 505
					  MenuData
				  ( <_cor32> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor32})
				    -| ['compiler_generated'] )
				end
'create_hide_menu'/2 =
    %% Line 507
    fun (_cor1,_cor0) ->
	let <Menu> =
	    %% Line 508
	    call 'wxMenu':'new'
		([])
	in  %% Line 509
	    ( case _cor0 of
		( <( {'state',_cor48,_cor49,_cor50,_cor51,_rec81,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62}
		     -| ['compiler_generated'] )> when 'true' ->
		      %% Line 510
		      ( case _rec81 of
			  ( <( {'event',_cor64,_cor65,_cor66,_rec82,_cor67,_cor68,_cor69}
			       -| ['compiler_generated'] )> when 'true' ->
				let <_cor44> =
				    %% Line 513
				    case <> of
				      %% Line 514
				      <>
					  when ( call 'erlang':'=:='
						  (_cor49,
						   'undefined')
					      -| ['compiler_generated'] ) ->
					  %% Line 515
					  'ignore'
				      %% Line 516
				      <>
					  when call 'erlang':'=:='
						(_rec82,
						 _cor67) ->
					  let <_cor19> =
					      %% Line 517
					      call 'wxMenu':'append'
						  (Menu, -1, [72|[105|[100|[101|[32|[97|[99|[116|[111|[114|[32|[105|[110|[32|[86|[105|[101|[119|[101|[114|[32]]]]]]]]]]]]]]]]]]]]])
					  in  do  %% Line 517
						  call 'wxMenuItem':'enable'
						      (_cor19, %% Line 518
							       [{'enable','false'}])
						  do  %% Line 519
						      call 'wxMenu':'appendSeparator'
							  (Menu)
						      let <Hide> =
							  %% Line 520
							  apply 'menuitem'/4
							      (Menu, -1, [70|[114|[111|[109|[61|[84|[111|[32|[40|[102|[124|[116|[124|[98|[41]]]]]]]]]]]]]]], {'hide',[_rec82|[]]})
						      in  do  %% Line 521
							      call 'wxMenu':'appendSeparator'
								  (Menu)
							      let <_cor23> =
								  %% Line 522
								  call 'wxMenu':'append'
								      (Menu, -1, [83|[104|[111|[119|[32|[97|[99|[116|[111|[114|[32|[105|[110|[32|[86|[105|[101|[119|[101|[114|[32]]]]]]]]]]]]]]]]]]]]])
							      in  do  %% Line 522
								      call 'wxMenuItem':'enable'
									  (_cor23, %% Line 523
										   [{'enable','false'}])
								      do  %% Line 524
									  call 'wxMenu':'appendSeparator'
									      (Menu)
									  let <Show> =
									      %% Line 525
									      apply 'menuitem'/4
										  (Menu, -1, [70|[114|[111|[109|[61|[84|[111|[32|[40|[70|[124|[84|[124|[66|[41]]]]]]]]]]]]]]], {'show',[_rec82|[]]})
									  in  %% Line 526
									      [Show|[Hide|[]]]
				      %% Line 527
				      <> when 'true' ->
					  let <_cor27> =
					      %% Line 528
					      call 'wxMenu':'append'
						  (Menu, -1, [72|[105|[100|[101|[32|[97|[99|[116|[111|[114|[32|[105|[110|[32|[86|[105|[101|[119|[101|[114|[32]]]]]]]]]]]]]]]]]]]]])
					  in  do  %% Line 528
						  call 'wxMenuItem':'enable'
						      (_cor27, %% Line 529
							       [{'enable','false'}])
						  do  %% Line 530
						      call 'wxMenu':'appendSeparator'
							  (Menu)
						      let <_cor29> =
							  %% Line 531
							  apply 'menuitem'/4
							      (Menu, -1, [70|[114|[111|[109|[32|[40|[102|[41]]]]]]]], {'hide',[_rec82|[]]})
						      in  let <_cor31> =
							      %% Line 532
							      apply 'menuitem'/4
								  (Menu, -1, [84|[111|[32|[32|[32|[40|[116|[41]]]]]]]], {'hide',[_cor67|[]]})
							  in  let <_cor33> =
								  %% Line 533
								  apply 'menuitem'/4
								      (Menu, -1, [66|[111|[116|[104|[32|[40|[98|[41]]]]]]]], {'hide',[_rec82|[_cor67|[]]]})
							      in  let <Hide> =
								      %% Line 531
								      [_cor29|%% Line 532
									      [_cor31|%% Line 533
										      [_cor33|[]]]]
								  in  do  %% Line 534
									  call 'wxMenu':'appendSeparator'
									      (Menu)
									  let <_cor36> =
									      %% Line 535
									      call 'wxMenu':'append'
										  (Menu, -1, [83|[104|[111|[119|[32|[97|[99|[116|[111|[114|[32|[105|[110|[32|[86|[105|[101|[119|[101|[114|[32]]]]]]]]]]]]]]]]]]]]])
									  in  do  %% Line 535
										  call 'wxMenuItem':'enable'
										      (_cor36, %% Line 536
											       [{'enable','false'}])
										  do  %% Line 537
										      call 'wxMenu':'appendSeparator'
											  (Menu)
										      let <_cor38> =
											  %% Line 538
											  apply 'menuitem'/4
											      (Menu, -1, [70|[114|[111|[109|[32|[40|[70|[41]]]]]]]], {'show',[_rec82|[]]})
										      in  let <_cor40> =
											      %% Line 539
											      apply 'menuitem'/4
												  (Menu, -1, [84|[111|[32|[32|[32|[40|[84|[41]]]]]]]], {'show',[_cor67|[]]})
											  in  let <_cor42> =
												  %% Line 540
												  apply 'menuitem'/4
												      (Menu, -1, [66|[111|[116|[104|[32|[40|[66|[41]]]]]]]], {'show',[_rec82|[_cor67|[]]]})
											      in  let <Show> =
												      %% Line 538
												      [_cor38|%% Line 539
													      [_cor40|%% Line 540
														      [_cor42|[]]]]
												  in  %% Line 541
												      call 'erlang':'++'
													  (Show, Hide)
				    end
				in  do  %% Line 543
					call 'wxMenuBar':'append'
					    (_cor1, Menu, [72|[105|[100|[101]]]])
					_cor44
			    -| ['compiler_generated'] )
			  ( <_cor70> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','event'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
		( <_cor63> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'create_search_menu'/2 =
    %% Line 546
    fun (_cor1,_cor0) ->
	let <Menu> =
	    %% Line 547
	    call 'wxMenu':'new'
		([])
	in  %% Line 548
	    ( case _cor0 of
		( <( {'state',_cor48,_cor49,_cor50,_cor51,_rec84,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62}
		     -| ['compiler_generated'] )> when 'true' ->
		      %% Line 549
		      ( case _rec84 of
			  ( <( {'event',_cor64,_cor65,_cor66,_rec85,_cor67,_cor68,_cor69}
			       -| ['compiler_generated'] )> when 'true' ->
				let <_cor13> =
				    %% Line 551
				    call 'wxMenu':'append'
					(Menu, -1, [83|[101|[97|[114|[99|[104|[32|[105|[110|[32|[86|[105|[101|[119|[101|[114|[32]]]]]]]]]]]]]]]]])
				in  do  %% Line 551
					call 'wxMenuItem':'enable'
					    (_cor13, %% Line 552
						     [{'enable','false'}])
					do  %% Line 553
					    call 'wxMenu':'appendSeparator'
						(Menu)
					    let <_cor44> =
						%% Line 555
						case <> of
						  %% Line 556
						  <>
						      when ( call 'erlang':'=:='
							      (_cor49,
							       'undefined')
							  -| ['compiler_generated'] ) ->
						      let <_cor21> =
							  %% Line 557
							  apply 'menuitem'/4
							      (Menu, -1, [65|[98|[111|[114|[116|[32|[115|[101|[97|[114|[99|[104|[46|[32|[68|[105|[115|[112|[108|[97|[121|[32|[97|[108|[108|[32|[40|[97|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]], {'mode','all'})
						      in  %% Line 557
							  [_cor21|[]]
						  %% Line 558
						  <>
						      when call 'erlang':'=:='
							    (_rec85,
							     _cor67) ->
						      let <Key> =
							  %% Line 559
							  call 'et_collector':'make_key'
							      (_cor50, _rec84)
						      in  let <ModeS> =
							      %% Line 560
							      {'search_actors','forward',Key,[_rec85|[]]}
							  in  let <ModeR> =
								  %% Line 561
								  {'search_actors','reverse',Key,[_rec85|[]]}
							      in  let <_cor28> =
								      %% Line 562
								      apply 'menuitem'/4
									  (Menu, -1, [70|[111|[114|[119|[97|[114|[100|[32|[102|[114|[111|[109|[32|[116|[104|[105|[115|[32|[101|[118|[101|[110|[116|[32|[32|[32|[40|[115|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]], {'mode',ModeS})
								  in  let <_cor30> =
									  %% Line 563
									  apply 'menuitem'/4
									      (Menu, -1, [82|[101|[118|[101|[114|[115|[101|[32|[102|[114|[111|[109|[32|[116|[104|[105|[115|[32|[101|[118|[101|[110|[116|[32|[32|[32|[40|[114|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]], {'mode',ModeR})
								      in  let <_cor32> =
									      %% Line 564
									      apply 'menuitem'/4
										  (Menu, -1, [65|[98|[111|[114|[116|[32|[115|[101|[97|[114|[99|[104|[46|[32|[68|[105|[115|[112|[108|[97|[121|[32|[97|[108|[108|[32|[40|[97|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]], {'mode','all'})
									  in  %% Line 562
									      [_cor28|%% Line 563
										      [_cor30|%% Line 564
											      [_cor32|[]]]]
						  %% Line 565
						  <> when 'true' ->
						      let <Key> =
							  %% Line 566
							  call 'et_collector':'make_key'
							      (_cor50, _rec84)
						      in  let <ModeS> =
							      %% Line 567
							      {'search_actors','forward',Key,[_rec85|[_cor67|[]]]}
							  in  let <ModeR> =
								  %% Line 568
								  {'search_actors','reverse',Key,[_rec85|[_cor67|[]]]}
							      in  let <_cor39> =
								      %% Line 569
								      apply 'menuitem'/4
									  (Menu, -1, [70|[111|[114|[119|[97|[114|[100|[32|[102|[114|[111|[109|[32|[116|[104|[105|[115|[32|[101|[118|[101|[110|[116|[32|[32|[32|[40|[115|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]], {'mode',ModeS})
								  in  let <_cor41> =
									  %% Line 570
									  apply 'menuitem'/4
									      (Menu, -1, [82|[101|[118|[101|[114|[115|[101|[32|[102|[114|[111|[109|[32|[116|[104|[105|[115|[32|[101|[118|[101|[110|[116|[32|[32|[32|[40|[114|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]], {'mode',ModeR})
								      in  let <_cor43> =
									      %% Line 571
									      apply 'menuitem'/4
										  (Menu, -1, [65|[98|[111|[114|[116|[32|[115|[101|[97|[114|[99|[104|[46|[32|[68|[105|[115|[112|[108|[97|[121|[32|[97|[108|[108|[32|[40|[97|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]], {'mode','all'})
									  in  %% Line 569
									      [_cor39|%% Line 570
										      [_cor41|%% Line 571
											      [_cor43|[]]]]
						end
					    in  do  %% Line 573
						    call 'wxMenuBar':'append'
							(_cor1, Menu, [83|[101|[97|[114|[99|[104]]]]]])
						    _cor44
			    -| ['compiler_generated'] )
			  ( <_cor70> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','event'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
		( <_cor63> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'config_editor'/2 =
    %% Line 576
    fun (_cor1,_cor0) ->
	%% Line 577
	( case _cor0 of
	    ( <( {'state',_cor31,_cor32,_cor33,_rec89,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 579
		  case call 'lists':'keysearch'
			   (_cor35, 2, _cor36) of
		    <{'value',F}> when 'true' ->
			%% Line 580
			( case F of
			    ( <( {'filter',_cor79,_rec92}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_cor14> =
				      catch
					  %% Line 581
					  apply _rec92
					      (_rec89)
				  in  %% Line 581
				      case _cor14 of
					%% Line 582
					<'true'> when 'true' ->
					    %% Line 583
					    apply 'do_config_editor'/4
						(_cor1, _rec89, 'lightblue', _cor33)
					%% Line 584
					<{'true',Event2 = {'event',_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103}}> when ( 'true'
																  -| ['compiler_generated'] ) ->
					    %% Line 585
					    apply 'do_config_editor'/4
						(_cor1, Event2, 'lightblue', _cor33)
					%% Line 586
					<'false'> when 'true' ->
					    %% Line 587
					    apply 'do_config_editor'/4
						(_cor1, _rec89, 'red', _cor33)
					%% Line 588
					<Bad> when 'true' ->
					    let <Contents> = {%% Line 589
						 'bad_filter',_cor35,%% Line 589
								     Bad}
					    in  %% Line 590
						case _rec89 of
						  <{'event',_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142}> when 'true' ->
						      let <_cor24> =
							  call 'erlang':'setelement'
							      (8, _rec89, Contents)
						      in  %% Line 591
							  apply 'do_config_editor'/4
							      (_cor1, _cor24, 'red', _cor33)
						  ( <_cor143> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','event'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				      end
			      -| ['compiler_generated'] )
			    ( <_cor80> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','filter'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    ( <_cor10> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor10})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor46> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'do_config_editor'/4 =
    %% Line 594
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <String> =
	    %% Line 595
	    apply 'event_to_string'/2
		(_cor2, _cor0)
	in  do  %% Line 596
		call 'wxTextCtrl':'appendText'
		    (_cor3, String)
		_cor2
'term_to_string'/1 =
    %% Line 603
    fun (_cor0) ->
	let <_cor1> =
	    catch
		%% Line 604
		call 'io_lib':'format'
		    ([126|[115]], [_cor0|[]])
	in  %% Line 604
	    case _cor1 of
	      %% Line 605
	      <{'EXIT',_cor4}> when 'true' ->
		  call 'io_lib':'format'
		      ([126|[112]], [_cor0|[]])
	      %% Line 606
	      <GoodString> when 'true' ->
		  GoodString
	    end
'now_to_string'/1 =
    %% Line 609
    fun (_cor0) ->
	case _cor0 of
	  <Now = {Mega,Sec,Micro}>
	      when %% Line 610
		try
		    let <_cor1> =
			call 'erlang':'is_integer'
			    (Mega)
		    in  let <_cor2> =
			    call 'erlang':'is_integer'
				(Sec)
			in  let <_cor3> =
				call 'erlang':'is_integer'
				    (Micro)
			    in  let <_cor4> =
				    call 'erlang':'and'
					(_cor2, _cor3)
				in  call 'erlang':'and'
					(_cor1, _cor4)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 611
	      case call 'calendar':'now_to_universal_time'
		       (Now) of
		<{{Y,Mo,D},{H,Mi,S}}> when 'true' ->
		    let <_cor6> =
			%% Line 613
			apply 'pad_string'/4
			    (Mo, 2, 48, 'left')
		    in  let <_cor7> =
			    %% Line 614
			    apply 'pad_string'/4
				(D, 2, 48, 'left')
			in  let <_cor8> =
				%% Line 616
				apply 'pad_string'/4
				    (H, 2, 48, 'left')
			    in  let <_cor9> =
				    %% Line 617
				    apply 'pad_string'/4
					(Mi, 2, 48, 'left')
				in  let <_cor10> =
					%% Line 618
					apply 'pad_string'/4
					    (S, 2, 48, 'left')
				    in  %% Line 612
					call 'lists':'concat'
					    ([Y|[[45]|%% Line 613
						      [_cor6|[[45]|%% Line 614
								   [_cor7|%% Line 615
									  [[84]|%% Line 616
										[_cor8|[[58]|%% Line 617
											     [_cor9|[[58]|%% Line 618
													  [_cor10|[[46]|%% Line 619
															[Micro|[]]]]]]]]]]]]]])
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 620
	  <Other> when 'true' ->
	      %% Line 621
	      apply 'term_to_string'/1
		  (Other)
	end
'event_to_string'/2 =
    %% Line 623
    fun (_cor1,_cor0) ->
	%% Line 624
	( case _cor1 of
	    ( <( {'event',_cor43,_rec98,_cor44,_cor45,_cor46,_cor47,_cor48}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor10> =
		      %% Line 627
		      apply 'term_to_string'/1
			  (_cor43)
		  in  let <_cor13> =
			  %% Line 628
			  apply 'term_to_string'/1
			      (_cor47)
		      in  let <_cor28> =
			      %% Line 629
			      case <> of
				%% Line 630
				<>
				    when call 'erlang':'=:='
					  (_cor45,
					   _cor46) ->
				    let <_cor20> =
					%% Line 631
					apply 'term_to_string'/1
					    (_cor45)
				    in  %% Line 631
					[[10|[65|[67|[84|[79|[82|[58|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]|[_cor20|[]]]
				%% Line 632
				<> when 'true' ->
				    let <_cor23> =
					%% Line 633
					apply 'term_to_string'/1
					    (_cor45)
				    in  let <_cor26> =
					    %% Line 634
					    apply 'term_to_string'/1
						(_cor46)
					in  %% Line 633
					    [[10|[70|[82|[79|[77|[58|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]|[_cor23|%% Line 634
																[[10|[84|[79|[58|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]|[_cor26|[]]]]]
			      end
			  in  let <_cor36> =
				  %% Line 636
				  case <> of
				    %% Line 637
				    <>
					when call 'erlang':'=:='
					      (_rec98,
					       _cor44) ->
					let <_cor29> =
					    %% Line 638
					    apply 'now_to_string'/1
						(_cor44)
					in  %% Line 638
					    [[10|[80|[65|[82|[83|[69|[68|[58|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]|[_cor29|[]]]
				    %% Line 639
				    <> when 'true' ->
					%% Line 640
					case _cor0 of
					  %% Line 641
					  <'trace_ts'> when 'true' ->
					      let <_cor30> =
						  %% Line 642
						  apply 'now_to_string'/1
						      (_rec98)
					      in  let <_cor31> =
						      %% Line 643
						      apply 'now_to_string'/1
							  (_cor44)
						  in  %% Line 642
						      [[10|[84|[82|[65|[67|[69|[95|[84|[83|[58|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]|[_cor30|%% Line 643
																	  [[10|[69|[86|[69|[78|[84|[95|[84|[83|[58|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]|[_cor31|[]]]]]
					  %% Line 644
					  <'event_ts'> when 'true' ->
					      let <_cor32> =
						  %% Line 645
						  apply 'now_to_string'/1
						      (_cor44)
					      in  let <_cor33> =
						      %% Line 646
						      apply 'now_to_string'/1
							  (_rec98)
						  in  %% Line 645
						      [[10|[69|[86|[69|[78|[84|[95|[84|[83|[58|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]|[_cor32|%% Line 646
																	  [[10|[84|[82|[65|[67|[69|[95|[84|[83|[58|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]|[_cor33|[]]]]]
					  ( <_cor34> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_cor34})
					    -| ['compiler_generated'] )
					end
				  end
			      in  let <_cor39> =
				      %% Line 649
				      apply 'term_to_string'/1
					  (_cor48)
				  in  let <Deep> =
					  %% Line 627
					  [[68|[69|[84|[65|[73|[76|[32|[76|[69|[86|[69|[76|[58|[32]]]]]]]]]]]]]]|[_cor10|%% Line 628
															 [[10|[76|[65|[66|[69|[76|[58|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]|[_cor13|%% Line 629
																									     [_cor28|%% Line 636
																										     [_cor36|%% Line 649
																											     [[10|[67|[79|[78|[84|[69|[78|[84|[83|[58|[10|[10]]]]]]]]]]]]|[_cor39|[]]]]]]]]]
				      in  %% Line 650
					  call 'lists':'flatten'
					      (Deep)
	      -| ['compiler_generated'] )
	    ( <_cor49> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','event'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'pad_string'/4 =
    %% Line 652
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Int,MinLen,Char,Dir>
	      when call 'erlang':'is_integer'
		    (Int) ->
	      let <_cor4> =
		  %% Line 653
		  call 'erlang':'integer_to_list'
		      (Int)
	      in  %% Line 653
		  apply 'pad_string'/4
		      (_cor4, MinLen, Char, Dir)
	  %% Line 654
	  <Atom,MinLen,Char,Dir>
	      when call 'erlang':'is_atom'
		    (Atom) ->
	      let <_cor5> =
		  %% Line 655
		  call 'erlang':'atom_to_list'
		      (Atom)
	      in  %% Line 655
		  apply 'pad_string'/4
		      (_cor5, MinLen, Char, Dir)
	  %% Line 656
	  <String,MinLen,Char,Dir>
	      when let <_cor6> =
		    call 'erlang':'is_integer'
			(MinLen)
		in  let <_cor7> =
			call 'erlang':'>='
			    (MinLen, 0)
		    in  call 'erlang':'and'
			    (_cor6, _cor7) ->
	      let <Len> =
		  %% Line 657
		  call 'erlang':'length'
		      (String)
	      in  let <_cor9> =
		      %% Line 658
		      call 'erlang':'>='
			  (Len, MinLen)
		  in  %% Line 658
		      case <_cor9,Dir> of
			%% Line 659
			<'true',_cor19> when 'true' ->
			    %% Line 660
			    String
			%% Line 661
			<'false','right'> when 'true' ->
			    let <_cor10> =
				%% Line 662
				call 'erlang':'-'
				    (MinLen, Len)
			    in  let <_cor11> =
				    %% Line 662
				    call 'lists':'duplicate'
					(_cor10, Char)
				in  %% Line 662
				    call 'erlang':'++'
					(String, _cor11)
			%% Line 663
			<'false','left'> when 'true' ->
			    let <_cor12> =
				%% Line 664
				call 'erlang':'-'
				    (MinLen, Len)
			    in  let <_cor13> =
				    %% Line 664
				    call 'lists':'duplicate'
					(_cor12, Char)
				in  %% Line 664
				    call 'erlang':'++'
					(_cor13, String)
			( <_fol1461,_fol1462> when 'true' ->
			      let <_cor14> = {_fol1461,_fol1462}
			      in  primop 'match_fail'
				      ({'case_clause',_cor14})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17,_cor16,_cor15})
		  -| [{'function_name',{'pad_string',4}}] )
	    -| ['compiler_generated'] )
	end
'send_viewer_event'/2 =
    %% Line 667
    fun (_cor1,_cor0) ->
	%% Line 668
	( case _cor1 of
	    ( <( {'state',_cor7,_rec108,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21}
		 -| ['compiler_generated'] )> when 'true' ->
		  case _rec108 of
		    %% Line 669
		    <ViewerPid>
			when call 'erlang':'is_pid'
			      (_rec108) ->
			%% Line 670
			call 'erlang':'!'
			    (ViewerPid, {'et',_cor0})
		    %% Line 671
		    <'undefined'> when 'true' ->
			%% Line 672
			'ignore'
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor4})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor22> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'select_file'/4 =
    %% Line 675
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 678
	    call 'filename':'dirname'
		(_cor1)
	in  let <_cor5> =
		%% Line 679
		call 'filename':'basename'
		    (_cor1)
	    in  let <Dialog> =
		    %% Line 676
		    call 'wxFileDialog':'new'
			(_cor3, %% Line 677
				[{'message',_cor2}|%% Line 678
						   [{'defaultDir',_cor4}|%% Line 679
									 [{'defaultFile',_cor5}|%% Line 680
												[{'style',_cor0}|[]]]]])
		in  let <_cor9> =
			%% Line 682
			case call 'wxMessageDialog':'showModal'
				 (Dialog) of
			  %% Line 683
			  <5101> when 'true' ->
			      'cancel'
			  %% Line 684
			  <5100> when 'true' ->
			      let <_cor7> =
				  call 'wxFileDialog':'getPath'
				      (Dialog)
			      in  {'ok',_cor7}
			  ( <_cor8> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor8})
			    -| ['compiler_generated'] )
			end
		    in  do  %% Line 686
			    call 'wxFileDialog':'destroy'
				(Dialog)
			    _cor9
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('et_wx_contents_viewer')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('et_wx_contents_viewer', _cor0)
end