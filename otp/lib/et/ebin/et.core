module 'et' ['module_info'/0,
	     'module_info'/1,
	     'phone_home'/4,
	     'phone_home'/5,
	     'report_event'/4,
	     'report_event'/5,
	     'trace_me'/4,
	     'trace_me'/5]
    attributes []
'trace_me'/4 =
    %% Line 128
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <DetailLevel,FromTo,Label,Contents>
	      when %% Line 129
		call 'erlang':'is_integer'
		    (DetailLevel) ->
	      %% Line 130
	      call 'et':'trace_me'
		  (DetailLevel, FromTo, FromTo, Label, Contents)
	  ( <_cor7,_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5,_cor4})
		  -| [{'function_name',{'trace_me',4}}] )
	    -| ['compiler_generated'] )
	end
'trace_me'/5 =
    %% Line 132
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <DetailLevel,_X_From,_X_To,_X_Label,_X_Contents>
	      when %% Line 133
		call 'erlang':'is_integer'
		    (DetailLevel) ->
	      %% Line 134
	      'hopefully_traced'
	  ( <_cor9,_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6,_cor5})
		  -| [{'function_name',{'trace_me',5}}] )
	    -| ['compiler_generated'] )
	end
'phone_home'/4 =
    %% Line 136
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 138
	call 'et':'trace_me'
	    (_cor3, _cor2, _cor2, _cor1, _cor0)
'phone_home'/5 =
    %% Line 140
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 142
	call 'et':'trace_me'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'report_event'/4 =
    %% Line 144
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 146
	call 'et':'trace_me'
	    (_cor3, _cor2, _cor2, _cor1, _cor0)
'report_event'/5 =
    %% Line 148
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <DetailLevel,From,To,Label,Contents>
	      when %% Line 149
		call 'erlang':'is_integer'
		    (DetailLevel) ->
	      %% Line 151
	      call 'et':'trace_me'
		  (DetailLevel, From, To, Label, Contents)
	  ( <_cor9,_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6,_cor5})
		  -| [{'function_name',{'report_event',5}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('et')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('et', _cor0)
end