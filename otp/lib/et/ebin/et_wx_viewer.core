module 'et_wx_viewer' ['code_change'/3,
		       'handle_call'/3,
		       'handle_cast'/2,
		       'handle_info'/2,
		       'init'/1,
		       'module_info'/0,
		       'module_info'/1,
		       'start_link'/1,
		       'terminate'/2]
    attributes [%% Line 25
		'behaviour' =
		    %% Line 25
		    ['gen_server'],
		%% Line 23
		'type' =
		    %% Line 23
		    [{{'record','event'},[{'record_field',24,{'atom',24,'detail_level'}}|[{'record_field',25,{'atom',25,'trace_ts'}}|[{'record_field',27,{'atom',27,'event_ts'}}|[{'record_field',28,{'atom',28,'from'}}|[{'record_field',29,{'atom',29,'to'}}|[{'record_field',30,{'atom',30,'label'}}|[{'record_field',31,{'atom',31,'contents'}}]]]]]]],[]}],
		%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','filter'},[{'record_field',26,{'atom',26,'name'}}|[{'record_field',26,{'atom',26,'function'}}]],[]}],
		%% Line 25
		'type' =
		    %% Line 25
		    [{{'record','wx'},[{'typed_record_field',{'record_field',25,{'atom',25,'id'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'obj'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'remote_type',26,[{'atom',26,'wx'}|[{'atom',26,'wx_object'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'userData'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'type',27,'term',[]}]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'event'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'type',28,'event',[]}]]}}]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{'wx',{'type',31,'record',[{'atom',31,'wx'}]},[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','wxNavigationKey'},[{'typed_record_field',{'record_field',35,{'atom',35,'type'}},{'type',35,'union',[{'atom',35,'undefined'}|[{'type',35,'wxNavigationKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'flags'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'integer',[]}]]}}|[{'typed_record_field',{'record_field',37,{'atom',37,'focus'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'remote_type',37,[{'atom',37,'wxWindow'}|[{'atom',37,'wxWindow'}|[[]]]]}]]}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{'wxNavigationKeyEventType',{'atom',38,'navigation_key'},[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{'wxNavigationKey',{'type',39,'record',[{'atom',39,'wxNavigationKey'}]},[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','wxSash'},[{'typed_record_field',{'record_field',41,{'atom',41,'type'}},{'type',41,'union',[{'atom',41,'undefined'}|[{'type',41,'wxSashEventType',[]}]]}}|[{'typed_record_field',{'record_field',42,{'atom',42,'edge'}},{'type',42,'union',[{'atom',42,'undefined'}|[{'remote_type',42,[{'atom',42,'wx'}|[{'atom',42,'wx_enum'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'dragRect'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'tuple',[{'ann_type',43,[{'var',43,'X'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'Y'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'W'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'H'}|[{'type',43,'integer',[]}]]}]]]]}]]}}|[{'typed_record_field',{'record_field',44,{'atom',44,'dragStatus'}},{'type',44,'union',[{'atom',44,'undefined'}|[{'remote_type',44,[{'atom',44,'wx'}|[{'atom',44,'wx_enum'}|[[]]]]}]]}}]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'wxSashEventType',{'atom',45,'sash_dragged'},[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{'wxSash',{'type',46,'record',[{'atom',46,'wxSash'}]},[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','wxList'},[{'typed_record_field',{'record_field',48,{'atom',48,'type'}},{'type',48,'union',[{'atom',48,'undefined'}|[{'type',48,'wxListEventType',[]}]]}}|[{'typed_record_field',{'record_field',49,{'atom',49,'code'}},{'type',49,'union',[{'atom',49,'undefined'}|[{'type',49,'integer',[]}]]}}|[{'typed_record_field',{'record_field',50,{'atom',50,'oldItemIndex'}},{'type',50,'union',[{'atom',50,'undefined'}|[{'type',50,'integer',[]}]]}}|[{'typed_record_field',{'record_field',51,{'atom',51,'itemIndex'}},{'type',51,'union',[{'atom',51,'undefined'}|[{'type',51,'integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'col'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'pointDrag'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'tuple',[{'ann_type',53,[{'var',53,'X'}|[{'type',53,'integer',[]}]]}|[{'ann_type',53,[{'var',53,'Y'}|[{'type',53,'integer',[]}]]}]]}]]}}]]]]]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{'wxListEventType',{'type',54,'union',[{'atom',54,'command_list_begin_drag'}|[{'atom',54,'command_list_begin_rdrag'}|[{'atom',54,'command_list_begin_label_edit'}|[{'atom',54,'command_list_end_label_edit'}|[{'atom',54,'command_list_delete_item'}|[{'atom',54,'command_list_delete_all_items'}|[{'atom',54,'command_list_key_down'}|[{'atom',54,'command_list_insert_item'}|[{'atom',54,'command_list_col_click'}|[{'atom',54,'command_list_col_right_click'}|[{'atom',54,'command_list_col_begin_drag'}|[{'atom',54,'command_list_col_dragging'}|[{'atom',54,'command_list_col_end_drag'}|[{'atom',54,'command_list_item_selected'}|[{'atom',54,'command_list_item_deselected'}|[{'atom',54,'command_list_item_right_click'}|[{'atom',54,'command_list_item_middle_click'}|[{'atom',54,'command_list_item_activated'}|[{'atom',54,'command_list_item_focused'}|[{'atom',54,'command_list_cache_hint'}]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{'wxList',{'type',55,'record',[{'atom',55,'wxList'}]},[]}],
		%% Line 57
		'type' =
		    %% Line 57
		    [{{'record','wxNotebook'},[{'typed_record_field',{'record_field',57,{'atom',57,'type'}},{'type',57,'union',[{'atom',57,'undefined'}|[{'type',57,'wxNotebookEventType',[]}]]}}],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{'wxNotebookEventType',{'type',58,'union',[{'atom',58,'command_notebook_page_changed'}|[{'atom',58,'command_notebook_page_changing'}]]},[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{'wxNotebook',{'type',59,'record',[{'atom',59,'wxNotebook'}]},[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','wxDisplayChanged'},[{'typed_record_field',{'record_field',61,{'atom',61,'type'}},{'type',61,'union',[{'atom',61,'undefined'}|[{'type',61,'wxDisplayChangedEventType',[]}]]}}],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{'wxDisplayChangedEventType',{'atom',62,'display_changed'},[]}],
		%% Line 63
		'type' =
		    %% Line 63
		    [{'wxDisplayChanged',{'type',63,'record',[{'atom',63,'wxDisplayChanged'}]},[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','wxErase'},[{'typed_record_field',{'record_field',65,{'atom',65,'type'}},{'type',65,'union',[{'atom',65,'undefined'}|[{'type',65,'wxEraseEventType',[]}]]}}|[{'typed_record_field',{'record_field',66,{'atom',66,'dc'}},{'type',66,'union',[{'atom',66,'undefined'}|[{'remote_type',66,[{'atom',66,'wxDC'}|[{'atom',66,'wxDC'}|[[]]]]}]]}}]],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{'wxEraseEventType',{'atom',67,'erase_background'},[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{'wxErase',{'type',68,'record',[{'atom',68,'wxErase'}]},[]}],
		%% Line 70
		'type' =
		    %% Line 70
		    [{{'record','wxKey'},[{'typed_record_field',{'record_field',70,{'atom',70,'type'}},{'type',70,'union',[{'atom',70,'undefined'}|[{'type',70,'wxKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',71,{'atom',71,'x'}},{'type',71,'union',[{'atom',71,'undefined'}|[{'type',71,'integer',[]}]]}}|[{'typed_record_field',{'record_field',72,{'atom',72,'y'}},{'type',72,'union',[{'atom',72,'undefined'}|[{'type',72,'integer',[]}]]}}|[{'typed_record_field',{'record_field',73,{'atom',73,'keyCode'}},{'type',73,'union',[{'atom',73,'undefined'}|[{'type',73,'integer',[]}]]}}|[{'typed_record_field',{'record_field',74,{'atom',74,'controlDown'}},{'type',74,'union',[{'atom',74,'undefined'}|[{'type',74,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'shiftDown'}},{'type',75,'union',[{'atom',75,'undefined'}|[{'type',75,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',76,{'atom',76,'altDown'}},{'type',76,'union',[{'atom',76,'undefined'}|[{'type',76,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',77,{'atom',77,'metaDown'}},{'type',77,'union',[{'atom',77,'undefined'}|[{'type',77,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',78,{'atom',78,'scanCode'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',79,{'atom',79,'uniChar'}},{'type',79,'union',[{'atom',79,'undefined'}|[{'type',79,'integer',[]}]]}}|[{'typed_record_field',{'record_field',80,{'atom',80,'rawCode'}},{'type',80,'union',[{'atom',80,'undefined'}|[{'type',80,'integer',[]}]]}}|[{'typed_record_field',{'record_field',81,{'atom',81,'rawFlags'}},{'type',81,'union',[{'atom',81,'undefined'}|[{'type',81,'integer',[]}]]}}]]]]]]]]]]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{'wxKeyEventType',{'type',82,'union',[{'atom',82,'char'}|[{'atom',82,'char_hook'}|[{'atom',82,'key_down'}|[{'atom',82,'key_up'}]]]]},[]}],
		%% Line 83
		'type' =
		    %% Line 83
		    [{'wxKey',{'type',83,'record',[{'atom',83,'wxKey'}]},[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{{'record','wxWindowDestroy'},[{'typed_record_field',{'record_field',85,{'atom',85,'type'}},{'type',85,'union',[{'atom',85,'undefined'}|[{'type',85,'wxWindowDestroyEventType',[]}]]}}],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{'wxWindowDestroyEventType',{'atom',86,'destroy'},[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{'wxWindowDestroy',{'type',87,'record',[{'atom',87,'wxWindowDestroy'}]},[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','wxCalendar'},[{'typed_record_field',{'record_field',89,{'atom',89,'type'}},{'type',89,'union',[{'atom',89,'undefined'}|[{'type',89,'wxCalendarEventType',[]}]]}}],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{'wxCalendarEventType',{'type',90,'union',[{'atom',90,'calendar_sel_changed'}|[{'atom',90,'calendar_day_changed'}|[{'atom',90,'calendar_month_changed'}|[{'atom',90,'calendar_year_changed'}|[{'atom',90,'calendar_doubleclicked'}|[{'atom',90,'calendar_weekday_clicked'}]]]]]]},[]}],
		%% Line 91
		'type' =
		    %% Line 91
		    [{'wxCalendar',{'type',91,'record',[{'atom',91,'wxCalendar'}]},[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','wxSplitter'},[{'typed_record_field',{'record_field',93,{'atom',93,'type'}},{'type',93,'union',[{'atom',93,'undefined'}|[{'type',93,'wxSplitterEventType',[]}]]}}],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{'wxSplitterEventType',{'type',94,'union',[{'atom',94,'command_splitter_sash_pos_changed'}|[{'atom',94,'command_splitter_sash_pos_changing'}|[{'atom',94,'command_splitter_doubleclicked'}|[{'atom',94,'command_splitter_unsplit'}]]]]},[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{'wxSplitter',{'type',95,'record',[{'atom',95,'wxSplitter'}]},[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','wxScroll'},[{'typed_record_field',{'record_field',97,{'atom',97,'type'}},{'type',97,'union',[{'atom',97,'undefined'}|[{'type',97,'wxScrollEventType',[]}]]}}|[{'typed_record_field',{'record_field',98,{'atom',98,'commandInt'}},{'type',98,'union',[{'atom',98,'undefined'}|[{'type',98,'integer',[]}]]}}|[{'typed_record_field',{'record_field',99,{'atom',99,'extraLong'}},{'type',99,'union',[{'atom',99,'undefined'}|[{'type',99,'integer',[]}]]}}]]],[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{'wxScrollEventType',{'type',100,'union',[{'atom',100,'scroll_top'}|[{'atom',100,'scroll_bottom'}|[{'atom',100,'scroll_lineup'}|[{'atom',100,'scroll_linedown'}|[{'atom',100,'scroll_pageup'}|[{'atom',100,'scroll_pagedown'}|[{'atom',100,'scroll_thumbtrack'}|[{'atom',100,'scroll_thumbrelease'}|[{'atom',100,'scroll_changed'}]]]]]]]]]},[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{'wxScroll',{'type',101,'record',[{'atom',101,'wxScroll'}]},[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','wxMenu'},[{'typed_record_field',{'record_field',103,{'atom',103,'type'}},{'type',103,'union',[{'atom',103,'undefined'}|[{'type',103,'wxMenuEventType',[]}]]}}],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{'wxMenuEventType',{'type',104,'union',[{'atom',104,'menu_open'}|[{'atom',104,'menu_close'}|[{'atom',104,'menu_highlight'}]]]},[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{'wxMenu',{'type',105,'record',[{'atom',105,'wxMenu'}]},[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','wxContextMenu'},[{'typed_record_field',{'record_field',107,{'atom',107,'type'}},{'type',107,'union',[{'atom',107,'undefined'}|[{'type',107,'wxContextMenuEventType',[]}]]}}],[]}],
		%% Line 108
		'type' =
		    %% Line 108
		    [{'wxContextMenuEventType',{'atom',108,'context_menu'},[]}],
		%% Line 109
		'type' =
		    %% Line 109
		    [{'wxContextMenu',{'type',109,'record',[{'atom',109,'wxContextMenu'}]},[]}],
		%% Line 111
		'type' =
		    %% Line 111
		    [{{'record','wxShow'},[{'typed_record_field',{'record_field',111,{'atom',111,'type'}},{'type',111,'union',[{'atom',111,'undefined'}|[{'type',111,'wxShowEventType',[]}]]}}],[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{'wxShowEventType',{'atom',112,'show'},[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{'wxShow',{'type',113,'record',[{'atom',113,'wxShow'}]},[]}],
		%% Line 115
		'type' =
		    %% Line 115
		    [{{'record','wxSpin'},[{'typed_record_field',{'record_field',115,{'atom',115,'type'}},{'type',115,'union',[{'atom',115,'undefined'}|[{'type',115,'wxSpinEventType',[]}]]}}|[{'typed_record_field',{'record_field',116,{'atom',116,'commandInt'}},{'type',116,'union',[{'atom',116,'undefined'}|[{'type',116,'integer',[]}]]}}]],[]}],
		%% Line 117
		'type' =
		    %% Line 117
		    [{'wxSpinEventType',{'type',117,'union',[{'atom',117,'command_spinctrl_updated'}|[{'atom',117,'spin_up'}|[{'atom',117,'spin_down'}|[{'atom',117,'spin'}]]]]},[]}],
		%% Line 118
		'type' =
		    %% Line 118
		    [{'wxSpin',{'type',118,'record',[{'atom',118,'wxSpin'}]},[]}],
		%% Line 120
		'type' =
		    %% Line 120
		    [{{'record','wxSetCursor'},[{'typed_record_field',{'record_field',120,{'atom',120,'type'}},{'type',120,'union',[{'atom',120,'undefined'}|[{'type',120,'wxSetCursorEventType',[]}]]}}],[]}],
		%% Line 121
		'type' =
		    %% Line 121
		    [{'wxSetCursorEventType',{'atom',121,'set_cursor'},[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{'wxSetCursor',{'type',122,'record',[{'atom',122,'wxSetCursor'}]},[]}],
		%% Line 124
		'type' =
		    %% Line 124
		    [{{'record','wxFontPicker'},[{'typed_record_field',{'record_field',124,{'atom',124,'type'}},{'type',124,'union',[{'atom',124,'undefined'}|[{'type',124,'wxFontPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',125,{'atom',125,'font'}},{'type',125,'union',[{'atom',125,'undefined'}|[{'remote_type',125,[{'atom',125,'wxFont'}|[{'atom',125,'wxFont'}|[[]]]]}]]}}]],[]}],
		%% Line 126
		'type' =
		    %% Line 126
		    [{'wxFontPickerEventType',{'atom',126,'command_fontpicker_changed'},[]}],
		%% Line 127
		'type' =
		    %% Line 127
		    [{'wxFontPicker',{'type',127,'record',[{'atom',127,'wxFontPicker'}]},[]}],
		%% Line 129
		'type' =
		    %% Line 129
		    [{{'record','wxScrollWin'},[{'typed_record_field',{'record_field',129,{'atom',129,'type'}},{'type',129,'union',[{'atom',129,'undefined'}|[{'type',129,'wxScrollWinEventType',[]}]]}}],[]}],
		%% Line 130
		'type' =
		    %% Line 130
		    [{'wxScrollWinEventType',{'type',130,'union',[{'atom',130,'scrollwin_top'}|[{'atom',130,'scrollwin_bottom'}|[{'atom',130,'scrollwin_lineup'}|[{'atom',130,'scrollwin_linedown'}|[{'atom',130,'scrollwin_pageup'}|[{'atom',130,'scrollwin_pagedown'}|[{'atom',130,'scrollwin_thumbtrack'}|[{'atom',130,'scrollwin_thumbrelease'}]]]]]]]]},[]}],
		%% Line 131
		'type' =
		    %% Line 131
		    [{'wxScrollWin',{'type',131,'record',[{'atom',131,'wxScrollWin'}]},[]}],
		%% Line 133
		'type' =
		    %% Line 133
		    [{{'record','wxPaint'},[{'typed_record_field',{'record_field',133,{'atom',133,'type'}},{'type',133,'union',[{'atom',133,'undefined'}|[{'type',133,'wxPaintEventType',[]}]]}}],[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{'wxPaintEventType',{'atom',134,'paint'},[]}],
		%% Line 135
		'type' =
		    %% Line 135
		    [{'wxPaint',{'type',135,'record',[{'atom',135,'wxPaint'}]},[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','wxChildFocus'},[{'typed_record_field',{'record_field',137,{'atom',137,'type'}},{'type',137,'union',[{'atom',137,'undefined'}|[{'type',137,'wxChildFocusEventType',[]}]]}}],[]}],
		%% Line 138
		'type' =
		    %% Line 138
		    [{'wxChildFocusEventType',{'atom',138,'child_focus'},[]}],
		%% Line 139
		'type' =
		    %% Line 139
		    [{'wxChildFocus',{'type',139,'record',[{'atom',139,'wxChildFocus'}]},[]}],
		%% Line 141
		'type' =
		    %% Line 141
		    [{{'record','wxMaximize'},[{'typed_record_field',{'record_field',141,{'atom',141,'type'}},{'type',141,'union',[{'atom',141,'undefined'}|[{'type',141,'wxMaximizeEventType',[]}]]}}],[]}],
		%% Line 142
		'type' =
		    %% Line 142
		    [{'wxMaximizeEventType',{'atom',142,'maximize'},[]}],
		%% Line 143
		'type' =
		    %% Line 143
		    [{'wxMaximize',{'type',143,'record',[{'atom',143,'wxMaximize'}]},[]}],
		%% Line 145
		'type' =
		    %% Line 145
		    [{{'record','wxFileDirPicker'},[{'typed_record_field',{'record_field',145,{'atom',145,'type'}},{'type',145,'union',[{'atom',145,'undefined'}|[{'type',145,'wxFileDirPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',146,{'atom',146,'path'}},{'type',146,'union',[{'atom',146,'undefined'}|[{'remote_type',146,[{'atom',146,'unicode'}|[{'atom',146,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 147
		'type' =
		    %% Line 147
		    [{'wxFileDirPickerEventType',{'type',147,'union',[{'atom',147,'command_filepicker_changed'}|[{'atom',147,'command_dirpicker_changed'}]]},[]}],
		%% Line 148
		'type' =
		    %% Line 148
		    [{'wxFileDirPicker',{'type',148,'record',[{'atom',148,'wxFileDirPicker'}]},[]}],
		%% Line 150
		'type' =
		    %% Line 150
		    [{{'record','wxFocus'},[{'typed_record_field',{'record_field',150,{'atom',150,'type'}},{'type',150,'union',[{'atom',150,'undefined'}|[{'type',150,'wxFocusEventType',[]}]]}}],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{'wxFocusEventType',{'type',151,'union',[{'atom',151,'set_focus'}|[{'atom',151,'kill_focus'}]]},[]}],
		%% Line 152
		'type' =
		    %% Line 152
		    [{'wxFocus',{'type',152,'record',[{'atom',152,'wxFocus'}]},[]}],
		%% Line 154
		'type' =
		    %% Line 154
		    [{{'record','wxDate'},[{'typed_record_field',{'record_field',154,{'atom',154,'type'}},{'type',154,'union',[{'atom',154,'undefined'}|[{'type',154,'wxDateEventType',[]}]]}}|[{'typed_record_field',{'record_field',155,{'atom',155,'date'}},{'type',155,'union',[{'atom',155,'undefined'}|[{'remote_type',155,[{'atom',155,'wx'}|[{'atom',155,'wx_datetime'}|[[]]]]}]]}}]],[]}],
		%% Line 156
		'type' =
		    %% Line 156
		    [{'wxDateEventType',{'atom',156,'date_changed'},[]}],
		%% Line 157
		'type' =
		    %% Line 157
		    [{'wxDate',{'type',157,'record',[{'atom',157,'wxDate'}]},[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','wxHtmlLink'},[{'typed_record_field',{'record_field',159,{'atom',159,'type'}},{'type',159,'union',[{'atom',159,'undefined'}|[{'type',159,'wxHtmlLinkEventType',[]}]]}}|[{'typed_record_field',{'record_field',160,{'atom',160,'linkInfo'}},{'type',160,'union',[{'atom',160,'undefined'}|[{'remote_type',160,[{'atom',160,'wx'}|[{'atom',160,'wx_wxHtmlLinkInfo'}|[[]]]]}]]}}]],[]}],
		%% Line 161
		'type' =
		    %% Line 161
		    [{'wxHtmlLinkEventType',{'atom',161,'command_html_link_clicked'},[]}],
		%% Line 162
		'type' =
		    %% Line 162
		    [{'wxHtmlLink',{'type',162,'record',[{'atom',162,'wxHtmlLink'}]},[]}],
		%% Line 164
		'type' =
		    %% Line 164
		    [{{'record','wxHelp'},[{'typed_record_field',{'record_field',164,{'atom',164,'type'}},{'type',164,'union',[{'atom',164,'undefined'}|[{'type',164,'wxHelpEventType',[]}]]}}],[]}],
		%% Line 165
		'type' =
		    %% Line 165
		    [{'wxHelpEventType',{'type',165,'union',[{'atom',165,'help'}|[{'atom',165,'detailed_help'}]]},[]}],
		%% Line 166
		'type' =
		    %% Line 166
		    [{'wxHelp',{'type',166,'record',[{'atom',166,'wxHelp'}]},[]}],
		%% Line 168
		'type' =
		    %% Line 168
		    [{{'record','wxActivate'},[{'typed_record_field',{'record_field',168,{'atom',168,'type'}},{'type',168,'union',[{'atom',168,'undefined'}|[{'type',168,'wxActivateEventType',[]}]]}}|[{'typed_record_field',{'record_field',169,{'atom',169,'active'}},{'type',169,'union',[{'atom',169,'undefined'}|[{'type',169,'boolean',[]}]]}}]],[]}],
		%% Line 170
		'type' =
		    %% Line 170
		    [{'wxActivateEventType',{'type',170,'union',[{'atom',170,'activate'}|[{'atom',170,'activate_app'}|[{'atom',170,'hibernate'}]]]},[]}],
		%% Line 171
		'type' =
		    %% Line 171
		    [{'wxActivate',{'type',171,'record',[{'atom',171,'wxActivate'}]},[]}],
		%% Line 173
		'type' =
		    %% Line 173
		    [{{'record','wxStyledText'},[{'typed_record_field',{'record_field',173,{'atom',173,'type'}},{'type',173,'union',[{'atom',173,'undefined'}|[{'type',173,'wxStyledTextEventType',[]}]]}}|[{'typed_record_field',{'record_field',174,{'atom',174,'position'}},{'type',174,'union',[{'atom',174,'undefined'}|[{'type',174,'integer',[]}]]}}|[{'typed_record_field',{'record_field',175,{'atom',175,'key'}},{'type',175,'union',[{'atom',175,'undefined'}|[{'type',175,'integer',[]}]]}}|[{'typed_record_field',{'record_field',176,{'atom',176,'modifiers'}},{'type',176,'union',[{'atom',176,'undefined'}|[{'type',176,'integer',[]}]]}}|[{'typed_record_field',{'record_field',177,{'atom',177,'modificationType'}},{'type',177,'union',[{'atom',177,'undefined'}|[{'type',177,'integer',[]}]]}}|[{'typed_record_field',{'record_field',178,{'atom',178,'text'}},{'type',178,'union',[{'atom',178,'undefined'}|[{'remote_type',178,[{'atom',178,'unicode'}|[{'atom',178,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',179,{'atom',179,'length'}},{'type',179,'union',[{'atom',179,'undefined'}|[{'type',179,'integer',[]}]]}}|[{'typed_record_field',{'record_field',180,{'atom',180,'linesAdded'}},{'type',180,'union',[{'atom',180,'undefined'}|[{'type',180,'integer',[]}]]}}|[{'typed_record_field',{'record_field',181,{'atom',181,'line'}},{'type',181,'union',[{'atom',181,'undefined'}|[{'type',181,'integer',[]}]]}}|[{'typed_record_field',{'record_field',182,{'atom',182,'foldLevelNow'}},{'type',182,'union',[{'atom',182,'undefined'}|[{'type',182,'integer',[]}]]}}|[{'typed_record_field',{'record_field',183,{'atom',183,'foldLevelPrev'}},{'type',183,'union',[{'atom',183,'undefined'}|[{'type',183,'integer',[]}]]}}|[{'typed_record_field',{'record_field',184,{'atom',184,'margin'}},{'type',184,'union',[{'atom',184,'undefined'}|[{'type',184,'integer',[]}]]}}|[{'typed_record_field',{'record_field',185,{'atom',185,'message'}},{'type',185,'union',[{'atom',185,'undefined'}|[{'type',185,'integer',[]}]]}}|[{'typed_record_field',{'record_field',186,{'atom',186,'wParam'}},{'type',186,'union',[{'atom',186,'undefined'}|[{'type',186,'integer',[]}]]}}|[{'typed_record_field',{'record_field',187,{'atom',187,'lParam'}},{'type',187,'union',[{'atom',187,'undefined'}|[{'type',187,'integer',[]}]]}}|[{'typed_record_field',{'record_field',188,{'atom',188,'listType'}},{'type',188,'union',[{'atom',188,'undefined'}|[{'type',188,'integer',[]}]]}}|[{'typed_record_field',{'record_field',189,{'atom',189,'x'}},{'type',189,'union',[{'atom',189,'undefined'}|[{'type',189,'integer',[]}]]}}|[{'typed_record_field',{'record_field',190,{'atom',190,'y'}},{'type',190,'union',[{'atom',190,'undefined'}|[{'type',190,'integer',[]}]]}}|[{'typed_record_field',{'record_field',191,{'atom',191,'dragText'}},{'type',191,'union',[{'atom',191,'undefined'}|[{'remote_type',191,[{'atom',191,'unicode'}|[{'atom',191,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',192,{'atom',192,'dragAllowMove'}},{'type',192,'union',[{'atom',192,'undefined'}|[{'type',192,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',193,{'atom',193,'dragResult'}},{'type',193,'union',[{'atom',193,'undefined'}|[{'remote_type',193,[{'atom',193,'wx'}|[{'atom',193,'wx_enum'}|[[]]]]}]]}}]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 194
		'type' =
		    %% Line 194
		    [{'wxStyledTextEventType',{'type',194,'union',[{'atom',194,'stc_change'}|[{'atom',194,'stc_styleneeded'}|[{'atom',194,'stc_charadded'}|[{'atom',194,'stc_savepointreached'}|[{'atom',194,'stc_savepointleft'}|[{'atom',194,'stc_romodifyattempt'}|[{'atom',194,'stc_key'}|[{'atom',194,'stc_doubleclick'}|[{'atom',194,'stc_updateui'}|[{'atom',194,'stc_modified'}|[{'atom',194,'stc_macrorecord'}|[{'atom',194,'stc_marginclick'}|[{'atom',194,'stc_needshown'}|[{'atom',194,'stc_painted'}|[{'atom',194,'stc_userlistselection'}|[{'atom',194,'stc_uridropped'}|[{'atom',194,'stc_dwellstart'}|[{'atom',194,'stc_dwellend'}|[{'atom',194,'stc_start_drag'}|[{'atom',194,'stc_drag_over'}|[{'atom',194,'stc_do_drop'}|[{'atom',194,'stc_zoom'}|[{'atom',194,'stc_hotspot_click'}|[{'atom',194,'stc_hotspot_dclick'}|[{'atom',194,'stc_calltip_click'}|[{'atom',194,'stc_autocomp_selection'}]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 195
		'type' =
		    %% Line 195
		    [{'wxStyledText',{'type',195,'record',[{'atom',195,'wxStyledText'}]},[]}],
		%% Line 197
		'type' =
		    %% Line 197
		    [{{'record','wxSysColourChanged'},[{'typed_record_field',{'record_field',197,{'atom',197,'type'}},{'type',197,'union',[{'atom',197,'undefined'}|[{'type',197,'wxSysColourChangedEventType',[]}]]}}],[]}],
		%% Line 198
		'type' =
		    %% Line 198
		    [{'wxSysColourChangedEventType',{'atom',198,'sys_colour_changed'},[]}],
		%% Line 199
		'type' =
		    %% Line 199
		    [{'wxSysColourChanged',{'type',199,'record',[{'atom',199,'wxSysColourChanged'}]},[]}],
		%% Line 201
		'type' =
		    %% Line 201
		    [{{'record','wxGrid'},[{'typed_record_field',{'record_field',201,{'atom',201,'type'}},{'type',201,'union',[{'atom',201,'undefined'}|[{'type',201,'wxGridEventType',[]}]]}}|[{'typed_record_field',{'record_field',202,{'atom',202,'row'}},{'type',202,'union',[{'atom',202,'undefined'}|[{'type',202,'integer',[]}]]}}|[{'typed_record_field',{'record_field',203,{'atom',203,'col'}},{'type',203,'union',[{'atom',203,'undefined'}|[{'type',203,'integer',[]}]]}}|[{'typed_record_field',{'record_field',204,{'atom',204,'x'}},{'type',204,'union',[{'atom',204,'undefined'}|[{'type',204,'integer',[]}]]}}|[{'typed_record_field',{'record_field',205,{'atom',205,'y'}},{'type',205,'union',[{'atom',205,'undefined'}|[{'type',205,'integer',[]}]]}}|[{'typed_record_field',{'record_field',206,{'atom',206,'selecting'}},{'type',206,'union',[{'atom',206,'undefined'}|[{'type',206,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',207,{'atom',207,'control'}},{'type',207,'union',[{'atom',207,'undefined'}|[{'type',207,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',208,{'atom',208,'meta'}},{'type',208,'union',[{'atom',208,'undefined'}|[{'type',208,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',209,{'atom',209,'shift'}},{'type',209,'union',[{'atom',209,'undefined'}|[{'type',209,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',210,{'atom',210,'alt'}},{'type',210,'union',[{'atom',210,'undefined'}|[{'type',210,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 211
		'type' =
		    %% Line 211
		    [{'wxGridEventType',{'type',211,'union',[{'atom',211,'grid_cell_left_click'}|[{'atom',211,'grid_cell_right_click'}|[{'atom',211,'grid_cell_left_dclick'}|[{'atom',211,'grid_cell_right_dclick'}|[{'atom',211,'grid_label_left_click'}|[{'atom',211,'grid_label_right_click'}|[{'atom',211,'grid_label_left_dclick'}|[{'atom',211,'grid_label_right_dclick'}|[{'atom',211,'grid_row_size'}|[{'atom',211,'grid_col_size'}|[{'atom',211,'grid_range_select'}|[{'atom',211,'grid_cell_change'}|[{'atom',211,'grid_select_cell'}|[{'atom',211,'grid_editor_shown'}|[{'atom',211,'grid_editor_hidden'}|[{'atom',211,'grid_editor_created'}|[{'atom',211,'grid_cell_begin_drag'}]]]]]]]]]]]]]]]]]},[]}],
		%% Line 212
		'type' =
		    %% Line 212
		    [{'wxGrid',{'type',212,'record',[{'atom',212,'wxGrid'}]},[]}],
		%% Line 214
		'type' =
		    %% Line 214
		    [{{'record','wxPaletteChanged'},[{'typed_record_field',{'record_field',214,{'atom',214,'type'}},{'type',214,'union',[{'atom',214,'undefined'}|[{'type',214,'wxPaletteChangedEventType',[]}]]}}],[]}],
		%% Line 215
		'type' =
		    %% Line 215
		    [{'wxPaletteChangedEventType',{'atom',215,'palette_changed'},[]}],
		%% Line 216
		'type' =
		    %% Line 216
		    [{'wxPaletteChanged',{'type',216,'record',[{'atom',216,'wxPaletteChanged'}]},[]}],
		%% Line 218
		'type' =
		    %% Line 218
		    [{{'record','wxUpdateUI'},[{'typed_record_field',{'record_field',218,{'atom',218,'type'}},{'type',218,'union',[{'atom',218,'undefined'}|[{'type',218,'wxUpdateUIEventType',[]}]]}}],[]}],
		%% Line 219
		'type' =
		    %% Line 219
		    [{'wxUpdateUIEventType',{'atom',219,'update_ui'},[]}],
		%% Line 220
		'type' =
		    %% Line 220
		    [{'wxUpdateUI',{'type',220,'record',[{'atom',220,'wxUpdateUI'}]},[]}],
		%% Line 222
		'type' =
		    %% Line 222
		    [{{'record','wxSize'},[{'typed_record_field',{'record_field',222,{'atom',222,'type'}},{'type',222,'union',[{'atom',222,'undefined'}|[{'type',222,'wxSizeEventType',[]}]]}}|[{'typed_record_field',{'record_field',223,{'atom',223,'size'}},{'type',223,'union',[{'atom',223,'undefined'}|[{'type',223,'tuple',[{'ann_type',223,[{'var',223,'W'}|[{'type',223,'integer',[]}]]}|[{'ann_type',223,[{'var',223,'H'}|[{'type',223,'integer',[]}]]}]]}]]}}|[{'typed_record_field',{'record_field',224,{'atom',224,'rect'}},{'type',224,'union',[{'atom',224,'undefined'}|[{'type',224,'tuple',[{'ann_type',224,[{'var',224,'X'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'Y'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'W'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'H'}|[{'type',224,'integer',[]}]]}]]]]}]]}}]]],[]}],
		%% Line 225
		'type' =
		    %% Line 225
		    [{'wxSizeEventType',{'atom',225,'size'},[]}],
		%% Line 226
		'type' =
		    %% Line 226
		    [{'wxSize',{'type',226,'record',[{'atom',226,'wxSize'}]},[]}],
		%% Line 228
		'type' =
		    %% Line 228
		    [{{'record','wxIconize'},[{'typed_record_field',{'record_field',228,{'atom',228,'type'}},{'type',228,'union',[{'atom',228,'undefined'}|[{'type',228,'wxIconizeEventType',[]}]]}}],[]}],
		%% Line 229
		'type' =
		    %% Line 229
		    [{'wxIconizeEventType',{'atom',229,'iconize'},[]}],
		%% Line 230
		'type' =
		    %% Line 230
		    [{'wxIconize',{'type',230,'record',[{'atom',230,'wxIconize'}]},[]}],
		%% Line 232
		'type' =
		    %% Line 232
		    [{{'record','wxAuiNotebook'},[{'typed_record_field',{'record_field',232,{'atom',232,'type'}},{'type',232,'union',[{'atom',232,'undefined'}|[{'type',232,'wxAuiNotebookEventType',[]}]]}}|[{'typed_record_field',{'record_field',233,{'atom',233,'old_selection'}},{'type',233,'union',[{'atom',233,'undefined'}|[{'type',233,'integer',[]}]]}}|[{'typed_record_field',{'record_field',234,{'atom',234,'selection'}},{'type',234,'union',[{'atom',234,'undefined'}|[{'type',234,'integer',[]}]]}}|[{'typed_record_field',{'record_field',235,{'atom',235,'drag_source'}},{'type',235,'union',[{'atom',235,'undefined'}|[{'remote_type',235,[{'atom',235,'wxAuiNotebook'}|[{'atom',235,'wxAuiNotebook'}|[[]]]]}]]}}]]]],[]}],
		%% Line 236
		'type' =
		    %% Line 236
		    [{'wxAuiNotebookEventType',{'type',236,'union',[{'atom',236,'command_auinotebook_page_close'}|[{'atom',236,'command_auinotebook_page_changed'}|[{'atom',236,'command_auinotebook_page_changing'}|[{'atom',236,'command_auinotebook_button'}|[{'atom',236,'command_auinotebook_begin_drag'}|[{'atom',236,'command_auinotebook_end_drag'}|[{'atom',236,'command_auinotebook_drag_motion'}|[{'atom',236,'command_auinotebook_allow_dnd'}|[{'atom',236,'command_auinotebook_tab_middle_down'}|[{'atom',236,'command_auinotebook_tab_middle_up'}|[{'atom',236,'command_auinotebook_tab_right_down'}|[{'atom',236,'command_auinotebook_tab_right_up'}|[{'atom',236,'command_auinotebook_page_closed'}|[{'atom',236,'command_auinotebook_drag_done'}|[{'atom',236,'command_auinotebook_bg_dclick'}]]]]]]]]]]]]]]]},[]}],
		%% Line 237
		'type' =
		    %% Line 237
		    [{'wxAuiNotebook',{'type',237,'record',[{'atom',237,'wxAuiNotebook'}]},[]}],
		%% Line 239
		'type' =
		    %% Line 239
		    [{{'record','wxClose'},[{'typed_record_field',{'record_field',239,{'atom',239,'type'}},{'type',239,'union',[{'atom',239,'undefined'}|[{'type',239,'wxCloseEventType',[]}]]}}],[]}],
		%% Line 240
		'type' =
		    %% Line 240
		    [{'wxCloseEventType',{'type',240,'union',[{'atom',240,'close_window'}|[{'atom',240,'end_session'}|[{'atom',240,'query_end_session'}]]]},[]}],
		%% Line 241
		'type' =
		    %% Line 241
		    [{'wxClose',{'type',241,'record',[{'atom',241,'wxClose'}]},[]}],
		%% Line 243
		'type' =
		    %% Line 243
		    [{{'record','wxMouseCaptureChanged'},[{'typed_record_field',{'record_field',243,{'atom',243,'type'}},{'type',243,'union',[{'atom',243,'undefined'}|[{'type',243,'wxMouseCaptureChangedEventType',[]}]]}}],[]}],
		%% Line 244
		'type' =
		    %% Line 244
		    [{'wxMouseCaptureChangedEventType',{'atom',244,'mouse_capture_changed'},[]}],
		%% Line 245
		'type' =
		    %% Line 245
		    [{'wxMouseCaptureChanged',{'type',245,'record',[{'atom',245,'wxMouseCaptureChanged'}]},[]}],
		%% Line 247
		'type' =
		    %% Line 247
		    [{{'record','wxMouse'},[{'typed_record_field',{'record_field',247,{'atom',247,'type'}},{'type',247,'union',[{'atom',247,'undefined'}|[{'type',247,'wxMouseEventType',[]}]]}}|[{'typed_record_field',{'record_field',248,{'atom',248,'x'}},{'type',248,'union',[{'atom',248,'undefined'}|[{'type',248,'integer',[]}]]}}|[{'typed_record_field',{'record_field',249,{'atom',249,'y'}},{'type',249,'union',[{'atom',249,'undefined'}|[{'type',249,'integer',[]}]]}}|[{'typed_record_field',{'record_field',250,{'atom',250,'leftDown'}},{'type',250,'union',[{'atom',250,'undefined'}|[{'type',250,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',251,{'atom',251,'middleDown'}},{'type',251,'union',[{'atom',251,'undefined'}|[{'type',251,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',252,{'atom',252,'rightDown'}},{'type',252,'union',[{'atom',252,'undefined'}|[{'type',252,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',253,{'atom',253,'controlDown'}},{'type',253,'union',[{'atom',253,'undefined'}|[{'type',253,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',254,{'atom',254,'shiftDown'}},{'type',254,'union',[{'atom',254,'undefined'}|[{'type',254,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',255,{'atom',255,'altDown'}},{'type',255,'union',[{'atom',255,'undefined'}|[{'type',255,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',256,{'atom',256,'metaDown'}},{'type',256,'union',[{'atom',256,'undefined'}|[{'type',256,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',257,{'atom',257,'wheelRotation'}},{'type',257,'union',[{'atom',257,'undefined'}|[{'type',257,'integer',[]}]]}}|[{'typed_record_field',{'record_field',258,{'atom',258,'wheelDelta'}},{'type',258,'union',[{'atom',258,'undefined'}|[{'type',258,'integer',[]}]]}}|[{'typed_record_field',{'record_field',259,{'atom',259,'linesPerAction'}},{'type',259,'union',[{'atom',259,'undefined'}|[{'type',259,'integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 260
		'type' =
		    %% Line 260
		    [{'wxMouseEventType',{'type',260,'union',[{'atom',260,'left_down'}|[{'atom',260,'left_up'}|[{'atom',260,'middle_down'}|[{'atom',260,'middle_up'}|[{'atom',260,'right_down'}|[{'atom',260,'right_up'}|[{'atom',260,'motion'}|[{'atom',260,'enter_window'}|[{'atom',260,'leave_window'}|[{'atom',260,'left_dclick'}|[{'atom',260,'middle_dclick'}|[{'atom',260,'right_dclick'}|[{'atom',260,'mousewheel'}]]]]]]]]]]]]]},[]}],
		%% Line 261
		'type' =
		    %% Line 261
		    [{'wxMouse',{'type',261,'record',[{'atom',261,'wxMouse'}]},[]}],
		%% Line 263
		'type' =
		    %% Line 263
		    [{{'record','wxClipboardText'},[{'typed_record_field',{'record_field',263,{'atom',263,'type'}},{'type',263,'union',[{'atom',263,'undefined'}|[{'type',263,'wxClipboardTextEventType',[]}]]}}],[]}],
		%% Line 264
		'type' =
		    %% Line 264
		    [{'wxClipboardTextEventType',{'type',264,'union',[{'atom',264,'command_text_copy'}|[{'atom',264,'command_text_cut'}|[{'atom',264,'command_text_paste'}]]]},[]}],
		%% Line 265
		'type' =
		    %% Line 265
		    [{'wxClipboardText',{'type',265,'record',[{'atom',265,'wxClipboardText'}]},[]}],
		%% Line 267
		'type' =
		    %% Line 267
		    [{{'record','wxWindowCreate'},[{'typed_record_field',{'record_field',267,{'atom',267,'type'}},{'type',267,'union',[{'atom',267,'undefined'}|[{'type',267,'wxWindowCreateEventType',[]}]]}}],[]}],
		%% Line 268
		'type' =
		    %% Line 268
		    [{'wxWindowCreateEventType',{'atom',268,'create'},[]}],
		%% Line 269
		'type' =
		    %% Line 269
		    [{'wxWindowCreate',{'type',269,'record',[{'atom',269,'wxWindowCreate'}]},[]}],
		%% Line 271
		'type' =
		    %% Line 271
		    [{{'record','wxAuiManager'},[{'typed_record_field',{'record_field',271,{'atom',271,'type'}},{'type',271,'union',[{'atom',271,'undefined'}|[{'type',271,'wxAuiManagerEventType',[]}]]}}|[{'typed_record_field',{'record_field',272,{'atom',272,'manager'}},{'type',272,'union',[{'atom',272,'undefined'}|[{'remote_type',272,[{'atom',272,'wxAuiManager'}|[{'atom',272,'wxAuiManager'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',273,{'atom',273,'pane'}},{'type',273,'union',[{'atom',273,'undefined'}|[{'remote_type',273,[{'atom',273,'wxAuiPaneInfo'}|[{'atom',273,'wxAuiPaneInfo'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',274,{'atom',274,'button'}},{'type',274,'union',[{'atom',274,'undefined'}|[{'type',274,'integer',[]}]]}}|[{'typed_record_field',{'record_field',275,{'atom',275,'veto_flag'}},{'type',275,'union',[{'atom',275,'undefined'}|[{'type',275,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',276,{'atom',276,'canveto_flag'}},{'type',276,'union',[{'atom',276,'undefined'}|[{'type',276,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',277,{'atom',277,'dc'}},{'type',277,'union',[{'atom',277,'undefined'}|[{'remote_type',277,[{'atom',277,'wxDC'}|[{'atom',277,'wxDC'}|[[]]]]}]]}}]]]]]]],[]}],
		%% Line 278
		'type' =
		    %% Line 278
		    [{'wxAuiManagerEventType',{'type',278,'union',[{'atom',278,'aui_pane_button'}|[{'atom',278,'aui_pane_close'}|[{'atom',278,'aui_pane_maximize'}|[{'atom',278,'aui_pane_restore'}|[{'atom',278,'aui_render'}|[{'atom',278,'aui_find_manager'}]]]]]]},[]}],
		%% Line 279
		'type' =
		    %% Line 279
		    [{'wxAuiManager',{'type',279,'record',[{'atom',279,'wxAuiManager'}]},[]}],
		%% Line 281
		'type' =
		    %% Line 281
		    [{{'record','wxInitDialog'},[{'typed_record_field',{'record_field',281,{'atom',281,'type'}},{'type',281,'union',[{'atom',281,'undefined'}|[{'type',281,'wxInitDialogEventType',[]}]]}}],[]}],
		%% Line 282
		'type' =
		    %% Line 282
		    [{'wxInitDialogEventType',{'atom',282,'init_dialog'},[]}],
		%% Line 283
		'type' =
		    %% Line 283
		    [{'wxInitDialog',{'type',283,'record',[{'atom',283,'wxInitDialog'}]},[]}],
		%% Line 285
		'type' =
		    %% Line 285
		    [{{'record','wxCommand'},[{'typed_record_field',{'record_field',285,{'atom',285,'type'}},{'type',285,'union',[{'atom',285,'undefined'}|[{'type',285,'wxCommandEventType',[]}]]}}|[{'typed_record_field',{'record_field',286,{'atom',286,'cmdString'}},{'type',286,'union',[{'atom',286,'undefined'}|[{'remote_type',286,[{'atom',286,'unicode'}|[{'atom',286,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',287,{'atom',287,'commandInt'}},{'type',287,'union',[{'atom',287,'undefined'}|[{'type',287,'integer',[]}]]}}|[{'typed_record_field',{'record_field',288,{'atom',288,'extraLong'}},{'type',288,'union',[{'atom',288,'undefined'}|[{'type',288,'integer',[]}]]}}]]]],[]}],
		%% Line 289
		'type' =
		    %% Line 289
		    [{'wxCommandEventType',{'type',289,'union',[{'atom',289,'command_button_clicked'}|[{'atom',289,'command_checkbox_clicked'}|[{'atom',289,'command_choice_selected'}|[{'atom',289,'command_listbox_selected'}|[{'atom',289,'command_listbox_doubleclicked'}|[{'atom',289,'command_text_updated'}|[{'atom',289,'command_text_enter'}|[{'atom',289,'command_menu_selected'}|[{'atom',289,'command_slider_updated'}|[{'atom',289,'command_radiobox_selected'}|[{'atom',289,'command_radiobutton_selected'}|[{'atom',289,'command_scrollbar_updated'}|[{'atom',289,'command_vlbox_selected'}|[{'atom',289,'command_combobox_selected'}|[{'atom',289,'command_tool_rclicked'}|[{'atom',289,'command_tool_enter'}|[{'atom',289,'command_checklistbox_toggled'}|[{'atom',289,'command_togglebutton_clicked'}|[{'atom',289,'command_left_click'}|[{'atom',289,'command_left_dclick'}|[{'atom',289,'command_right_click'}|[{'atom',289,'command_set_focus'}|[{'atom',289,'command_kill_focus'}|[{'atom',289,'command_enter'}]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 290
		'type' =
		    %% Line 290
		    [{'wxCommand',{'type',290,'record',[{'atom',290,'wxCommand'}]},[]}],
		%% Line 292
		'type' =
		    %% Line 292
		    [{{'record','wxJoystick'},[{'typed_record_field',{'record_field',292,{'atom',292,'type'}},{'type',292,'union',[{'atom',292,'undefined'}|[{'type',292,'wxJoystickEventType',[]}]]}}],[]}],
		%% Line 293
		'type' =
		    %% Line 293
		    [{'wxJoystickEventType',{'type',293,'union',[{'atom',293,'joy_button_down'}|[{'atom',293,'joy_button_up'}|[{'atom',293,'joy_move'}|[{'atom',293,'joy_zmove'}]]]]},[]}],
		%% Line 294
		'type' =
		    %% Line 294
		    [{'wxJoystick',{'type',294,'record',[{'atom',294,'wxJoystick'}]},[]}],
		%% Line 296
		'type' =
		    %% Line 296
		    [{{'record','wxQueryNewPalette'},[{'typed_record_field',{'record_field',296,{'atom',296,'type'}},{'type',296,'union',[{'atom',296,'undefined'}|[{'type',296,'wxQueryNewPaletteEventType',[]}]]}}],[]}],
		%% Line 297
		'type' =
		    %% Line 297
		    [{'wxQueryNewPaletteEventType',{'atom',297,'query_new_palette'},[]}],
		%% Line 298
		'type' =
		    %% Line 298
		    [{'wxQueryNewPalette',{'type',298,'record',[{'atom',298,'wxQueryNewPalette'}]},[]}],
		%% Line 300
		'type' =
		    %% Line 300
		    [{{'record','wxMove'},[{'typed_record_field',{'record_field',300,{'atom',300,'type'}},{'type',300,'union',[{'atom',300,'undefined'}|[{'type',300,'wxMoveEventType',[]}]]}}],[]}],
		%% Line 301
		'type' =
		    %% Line 301
		    [{'wxMoveEventType',{'atom',301,'move'},[]}],
		%% Line 302
		'type' =
		    %% Line 302
		    [{'wxMove',{'type',302,'record',[{'atom',302,'wxMove'}]},[]}],
		%% Line 304
		'type' =
		    %% Line 304
		    [{{'record','wxIdle'},[{'typed_record_field',{'record_field',304,{'atom',304,'type'}},{'type',304,'union',[{'atom',304,'undefined'}|[{'type',304,'wxIdleEventType',[]}]]}}],[]}],
		%% Line 305
		'type' =
		    %% Line 305
		    [{'wxIdleEventType',{'atom',305,'idle'},[]}],
		%% Line 306
		'type' =
		    %% Line 306
		    [{'wxIdle',{'type',306,'record',[{'atom',306,'wxIdle'}]},[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{{'record','wxColourPicker'},[{'typed_record_field',{'record_field',308,{'atom',308,'type'}},{'type',308,'union',[{'atom',308,'undefined'}|[{'type',308,'wxColourPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',309,{'atom',309,'colour'}},{'type',309,'union',[{'atom',309,'undefined'}|[{'remote_type',309,[{'atom',309,'wx'}|[{'atom',309,'wx_colour'}|[[]]]]}]]}}]],[]}],
		%% Line 310
		'type' =
		    %% Line 310
		    [{'wxColourPickerEventType',{'atom',310,'command_colourpicker_changed'},[]}],
		%% Line 311
		'type' =
		    %% Line 311
		    [{'wxColourPicker',{'type',311,'record',[{'atom',311,'wxColourPicker'}]},[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{{'record','wxTaskBarIcon'},[{'typed_record_field',{'record_field',313,{'atom',313,'type'}},{'type',313,'union',[{'atom',313,'undefined'}|[{'type',313,'wxTaskBarIconEventType',[]}]]}}],[]}],
		%% Line 314
		'type' =
		    %% Line 314
		    [{'wxTaskBarIconEventType',{'type',314,'union',[{'atom',314,'taskbar_move'}|[{'atom',314,'taskbar_left_down'}|[{'atom',314,'taskbar_left_up'}|[{'atom',314,'taskbar_right_down'}|[{'atom',314,'taskbar_right_up'}|[{'atom',314,'taskbar_left_dclick'}|[{'atom',314,'taskbar_right_dclick'}]]]]]]]},[]}],
		%% Line 315
		'type' =
		    %% Line 315
		    [{'wxTaskBarIcon',{'type',315,'record',[{'atom',315,'wxTaskBarIcon'}]},[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{{'record','wxTree'},[{'typed_record_field',{'record_field',317,{'atom',317,'type'}},{'type',317,'union',[{'atom',317,'undefined'}|[{'type',317,'wxTreeEventType',[]}]]}}|[{'typed_record_field',{'record_field',318,{'atom',318,'item'}},{'type',318,'union',[{'atom',318,'undefined'}|[{'type',318,'integer',[]}]]}}|[{'typed_record_field',{'record_field',319,{'atom',319,'itemOld'}},{'type',319,'union',[{'atom',319,'undefined'}|[{'type',319,'integer',[]}]]}}|[{'typed_record_field',{'record_field',320,{'atom',320,'pointDrag'}},{'type',320,'union',[{'atom',320,'undefined'}|[{'type',320,'tuple',[{'ann_type',320,[{'var',320,'X'}|[{'type',320,'integer',[]}]]}|[{'ann_type',320,[{'var',320,'Y'}|[{'type',320,'integer',[]}]]}]]}]]}}]]]],[]}],
		%% Line 321
		'type' =
		    %% Line 321
		    [{'wxTreeEventType',{'type',321,'union',[{'atom',321,'command_tree_begin_drag'}|[{'atom',321,'command_tree_begin_rdrag'}|[{'atom',321,'command_tree_begin_label_edit'}|[{'atom',321,'command_tree_end_label_edit'}|[{'atom',321,'command_tree_delete_item'}|[{'atom',321,'command_tree_get_info'}|[{'atom',321,'command_tree_set_info'}|[{'atom',321,'command_tree_item_expanded'}|[{'atom',321,'command_tree_item_expanding'}|[{'atom',321,'command_tree_item_collapsed'}|[{'atom',321,'command_tree_item_collapsing'}|[{'atom',321,'command_tree_sel_changed'}|[{'atom',321,'command_tree_sel_changing'}|[{'atom',321,'command_tree_key_down'}|[{'atom',321,'command_tree_item_activated'}|[{'atom',321,'command_tree_item_right_click'}|[{'atom',321,'command_tree_item_middle_click'}|[{'atom',321,'command_tree_end_drag'}|[{'atom',321,'command_tree_state_image_click'}|[{'atom',321,'command_tree_item_gettooltip'}|[{'atom',321,'command_tree_item_menu'}]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 322
		'type' =
		    %% Line 322
		    [{'wxTree',{'type',322,'record',[{'atom',322,'wxTree'}]},[]}],
		%% Line 324
		'type' =
		    %% Line 324
		    [{'event',{'type',324,'union',[{'type',324,'wxActivate',[]}|[{'type',324,'wxAuiManager',[]}|[{'type',324,'wxAuiNotebook',[]}|[{'type',324,'wxCalendar',[]}|[{'type',324,'wxChildFocus',[]}|[{'type',324,'wxClipboardText',[]}|[{'type',324,'wxClose',[]}|[{'type',324,'wxColourPicker',[]}|[{'type',324,'wxCommand',[]}|[{'type',324,'wxContextMenu',[]}|[{'type',324,'wxDate',[]}|[{'type',324,'wxDisplayChanged',[]}|[{'type',324,'wxErase',[]}|[{'type',324,'wxFileDirPicker',[]}|[{'type',324,'wxFocus',[]}|[{'type',324,'wxFontPicker',[]}|[{'type',324,'wxGrid',[]}|[{'type',324,'wxHelp',[]}|[{'type',324,'wxHtmlLink',[]}|[{'type',324,'wxIconize',[]}|[{'type',324,'wxIdle',[]}|[{'type',324,'wxInitDialog',[]}|[{'type',324,'wxJoystick',[]}|[{'type',324,'wxKey',[]}|[{'type',324,'wxList',[]}|[{'type',324,'wxMaximize',[]}|[{'type',324,'wxMenu',[]}|[{'type',324,'wxMouse',[]}|[{'type',324,'wxMouseCaptureChanged',[]}|[{'type',324,'wxMove',[]}|[{'type',324,'wxNavigationKey',[]}|[{'type',324,'wxNotebook',[]}|[{'type',324,'wxPaint',[]}|[{'type',324,'wxPaletteChanged',[]}|[{'type',324,'wxQueryNewPalette',[]}|[{'type',324,'wxSash',[]}|[{'type',324,'wxScroll',[]}|[{'type',324,'wxScrollWin',[]}|[{'type',324,'wxSetCursor',[]}|[{'type',324,'wxShow',[]}|[{'type',324,'wxSize',[]}|[{'type',324,'wxSpin',[]}|[{'type',324,'wxSplitter',[]}|[{'type',324,'wxStyledText',[]}|[{'type',324,'wxSysColourChanged',[]}|[{'type',324,'wxTaskBarIcon',[]}|[{'type',324,'wxTree',[]}|[{'type',324,'wxUpdateUI',[]}|[{'type',324,'wxWindowCreate',[]}|[{'type',324,'wxWindowDestroy',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 325
		'type' =
		    %% Line 325
		    [{'wxEventType',{'type',325,'union',[{'type',325,'wxActivateEventType',[]}|[{'type',325,'wxAuiManagerEventType',[]}|[{'type',325,'wxAuiNotebookEventType',[]}|[{'type',325,'wxCalendarEventType',[]}|[{'type',325,'wxChildFocusEventType',[]}|[{'type',325,'wxClipboardTextEventType',[]}|[{'type',325,'wxCloseEventType',[]}|[{'type',325,'wxColourPickerEventType',[]}|[{'type',325,'wxCommandEventType',[]}|[{'type',325,'wxContextMenuEventType',[]}|[{'type',325,'wxDateEventType',[]}|[{'type',325,'wxDisplayChangedEventType',[]}|[{'type',325,'wxEraseEventType',[]}|[{'type',325,'wxFileDirPickerEventType',[]}|[{'type',325,'wxFocusEventType',[]}|[{'type',325,'wxFontPickerEventType',[]}|[{'type',325,'wxGridEventType',[]}|[{'type',325,'wxHelpEventType',[]}|[{'type',325,'wxHtmlLinkEventType',[]}|[{'type',325,'wxIconizeEventType',[]}|[{'type',325,'wxIdleEventType',[]}|[{'type',325,'wxInitDialogEventType',[]}|[{'type',325,'wxJoystickEventType',[]}|[{'type',325,'wxKeyEventType',[]}|[{'type',325,'wxListEventType',[]}|[{'type',325,'wxMaximizeEventType',[]}|[{'type',325,'wxMenuEventType',[]}|[{'type',325,'wxMouseCaptureChangedEventType',[]}|[{'type',325,'wxMouseEventType',[]}|[{'type',325,'wxMoveEventType',[]}|[{'type',325,'wxNavigationKeyEventType',[]}|[{'type',325,'wxNotebookEventType',[]}|[{'type',325,'wxPaintEventType',[]}|[{'type',325,'wxPaletteChangedEventType',[]}|[{'type',325,'wxQueryNewPaletteEventType',[]}|[{'type',325,'wxSashEventType',[]}|[{'type',325,'wxScrollEventType',[]}|[{'type',325,'wxScrollWinEventType',[]}|[{'type',325,'wxSetCursorEventType',[]}|[{'type',325,'wxShowEventType',[]}|[{'type',325,'wxSizeEventType',[]}|[{'type',325,'wxSpinEventType',[]}|[{'type',325,'wxSplitterEventType',[]}|[{'type',325,'wxStyledTextEventType',[]}|[{'type',325,'wxSysColourChangedEventType',[]}|[{'type',325,'wxTaskBarIconEventType',[]}|[{'type',325,'wxTreeEventType',[]}|[{'type',325,'wxUpdateUIEventType',[]}|[{'type',325,'wxWindowCreateEventType',[]}|[{'type',325,'wxWindowDestroyEventType',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 328
		'type' =
		    %% Line 328
		    [{{'record','wxMouseState'},[{'typed_record_field',{'record_field',328,{'atom',328,'x'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',328,{'atom',328,'y'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'leftDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'type',329,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'middleDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'rightDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'controlDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'shiftDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'altDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'metaDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'cmdDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 333
		'type' =
		    %% Line 333
		    [{{'record','wxHtmlLinkInfo'},[{'typed_record_field',{'record_field',334,{'atom',334,'href'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',334,{'atom',334,'target'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','state'},[{'record_field',45,{'atom',45,'parent_pid'}}|[{'record_field',46,{'atom',46,'auto_shutdown'}}|[{'record_field',47,{'atom',47,'collector_pid'}}|[{'record_field',48,{'atom',48,'event_order'}}|[{'record_field',49,{'atom',49,'trace_pattern'}}|[{'record_field',50,{'atom',50,'active_filter'}}|[{'record_field',51,{'atom',51,'filters'}}|[{'record_field',52,{'atom',52,'filter_menu'}}|[{'record_field',53,{'atom',53,'pending_actor'}}|[{'record_field',54,{'atom',54,'first_event'}}|[{'record_field',55,{'atom',55,'last_event'}}|[{'record_field',56,{'atom',56,'events_per_page'}}|[{'record_field',57,{'atom',57,'events'}}|[{'record_field',58,{'atom',58,'n_events'}}|[{'record_field',59,{'atom',59,'max_actors'}}|[{'record_field',60,{'atom',60,'actors'}}|[{'record_field',61,{'atom',61,'refresh_needed'}}|[{'record_field',62,{'atom',62,'detail_level'}}|[{'record_field',63,{'atom',63,'hide_actions'}}|[{'record_field',64,{'atom',64,'hide_actors'}}|[{'record_field',65,{'atom',65,'display_all'}}|[{'record_field',66,{'atom',66,'context'}}|[{'record_field',67,{'atom',67,'title'}}|[{'record_field',68,{'atom',68,'frame'}}|[{'record_field',69,{'atom',69,'menubar'}}|[{'record_field',70,{'atom',70,'packer'}}|[{'record_field',71,{'atom',71,'width'}}|[{'record_field',72,{'atom',72,'height'}}|[{'record_field',73,{'atom',73,'scale'}}|[{'record_field',74,{'atom',74,'normal_font'}}|[{'record_field',75,{'atom',75,'bold_font'}}|[{'record_field',76,{'atom',76,'pen'}}|[{'record_field',77,{'atom',77,'brush'}}|[{'record_field',78,{'atom',78,'print_psdd'}}|[{'record_field',79,{'atom',79,'print_d'}}|[{'record_field',80,{'atom',80,'canvas_width'}}|[{'record_field',81,{'atom',81,'canvas_height'}}|[{'record_field',82,{'atom',82,'canvas'}}|[{'record_field',83,{'atom',83,'canvas_sizer'}}|[{'record_field',84,{'atom',84,'scroll_bar'}}|[{'record_field',85,{'atom',85,'y_pos'}}|[{'record_field',86,{'atom',86,'menu_data'}}|[{'record_field',87,{'atom',87,'checkbox_data'}}|[{'record_field',88,{'atom',88,'hide_actions_box'}}|[{'record_field',89,{'atom',89,'hide_actors_box'}}|[{'record_field',90,{'atom',90,'status_bar'}}|[{'record_field',91,{'atom',91,'event_file'}}|[{'record_field',92,{'atom',92,'wx_debug'}}|[{'record_field',93,{'atom',93,'trap_exit'}}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 96
		'type' =
		    %% Line 96
		    [{{'record','actor'},[{'record_field',96,{'atom',96,'name'}}|[{'record_field',96,{'atom',96,'string'}}|[{'record_field',96,{'atom',96,'include'}}|[{'record_field',96,{'atom',96,'exclude'}}]]]],[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','e'},[{'record_field',97,{'atom',97,'pos'}}|[{'record_field',97,{'atom',97,'key'}}|[{'record_field',97,{'atom',97,'event'}}]]],[]}]]
'start_link'/1 =
    %% Line 103
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 104
	    apply 'default_state'/0
		()
	in  %% Line 104
	    case apply 'parse_opt'/3
		     (_cor0, _cor1, []) of
	      %% Line 105
	      <{'ok',S,CollectorOpt}> when 'true' ->
		  %% Line 106
		  ( case S of
		      ( <( {'state',_cor28,_cor29,_rec0,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75}
			   -| ['compiler_generated'] )> when 'true' ->
			    case _rec0 of
			      %% Line 107
			      <CollectorPid>
				  when call 'erlang':'is_pid'
					(_rec0) ->
				  %% Line 108
				  case call 'gen_server':'start_link'
					   ('et_wx_viewer', [S|[]], []) of
				    %% Line 109
				    <{'ok',Pid}>
					when ( try
						let <_cor8> =
						    ( call 'erlang':'self'
							  ()
						      -| ['compiler_generated'] )
						in  ( call 'erlang':'=/='
							  (_cor28, _cor8)
						      -| ['compiler_generated'] )
					    of <Try> ->
						Try
					    catch <T,R> ->
						'false'
					    -| ['compiler_generated'] ) ->
					do  %% Line 110
					    call 'erlang':'unlink'
						(Pid)
					    %% Line 111
					    {'ok',Pid}
				    %% Line 112
				    <Other> when 'true' ->
					%% Line 113
					Other
				  end
			      %% Line 115
			      <'undefined'> when 'true' ->
				  %% Line 116
				  case call 'et_collector':'start_link'
					   ([{'auto_shutdown','true'}|CollectorOpt]) of
				    %% Line 117
				    <{'ok',CollectorPid}> when 'true' ->
					let <_cor14> =
					    %% Line 118
					    call 'erlang':'setelement'
						(4, S, CollectorPid)
					in  %% Line 119
					    case call 'gen_server':'start_link'
						     ('et_wx_viewer', [_cor14|[]], []) of
					      %% Line 120
					      <{'ok',Pid}>
						  when ( try
							  let <_cor20> =
							      ( call 'erlang':'self'
								    ()
								-| ['compiler_generated'] )
							  in  ( call 'erlang':'=/='
								    (_cor28, _cor20)
								-| ['compiler_generated'] )
						      of <Try> ->
							  Try
						      catch <T,R> ->
							  'false'
						      -| ['compiler_generated'] ) ->
						  do  %% Line 121
						      call 'erlang':'unlink'
							  (Pid)
						      %% Line 122
						      {'ok',Pid}
					      %% Line 123
					      <Other> when 'true' ->
						  %% Line 124
						  Other
					    end
				    %% Line 126
				    <{'error',Reason}> when 'true' ->
					%% Line 127
					{'error',{'et_collector',Reason}}
				    ( <_cor24> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor24})
				      -| ['compiler_generated'] )
				  end
			      ( <_cor25> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor25})
				-| ['compiler_generated'] )
			    end
			-| ['compiler_generated'] )
		      ( <_cor76> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      %% Line 130
	      <{'error',Reason}> when 'true' ->
		  %% Line 131
		  {'error',Reason}
	      ( <_cor26> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor26})
		-| ['compiler_generated'] )
	    end
'default_state'/0 =
    %% Line 134
    fun () ->
	let <_cor6> =
	    %% Line 135
	    call 'erlang':'self'
		()
	in  let <_cor5> =
		%% Line 140
		( fun (_cor3) ->
		      _cor3
		  -| [{'id',{0,0,'-default_state/0-fun-0-'}}] )
	    in  let <_cor2> =
		    %% Line 145
		    apply 'queue_new'/0
			()
		in  let <_cor1> =
			%% Line 147
			apply 'create_actor'/1
			    ([85|[78|[75|[78|[79|[87|[78]]]]]]])
		    in  let <_cor0> =
			    %% Line 159
			    call 'filename':'absname'
				([101|[116|[95|[118|[105|[101|[119|[101|[114|[46|[101|[116|[114|[97|[99|[101]]]]]]]]]]]]]]]])
			in  %% Line 135
			    {'state',_cor6,'undefined',%% Line 136
						       'undefined',%% Line 141
								   'trace_ts','undefined',%% Line 139
											  'all',%% Line 140
												[{'filter','all',_cor5}|[]],'undefined',%% Line 148
																	[85|[78|[75|[78|[79|[87|[78]]]]]]],%% Line 143
																					   'first',%% Line 144
																						   'first',%% Line 142
																							   100,_cor2,%% Line 137
																								     0,%% Line 146
																								       5,%% Line 147
																									 [_cor1|[]],%% Line 153
																										    'false',%% Line 138
																											    100,%% Line 149
																												'false',%% Line 150
																													'false',%% Line 151
																														'true',%% Line 152
																														       'display','undefined','undefined','undefined','undefined',%% Line 157
																																						 800,%% Line 158
																																						     600,%% Line 154
																																							 2,'undefined','undefined','undefined','undefined','undefined','undefined',%% Line 156
																																																   0,%% Line 155
																																																     0,'undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined',_cor0,%% Line 160
																																																															 0,%% Line 161
																																																															   'true'}
'parse_opt'/3 =
    %% Line 163
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],S,CollectorOpt> when 'true' ->
	      %% Line 164
	      ( case S of
		  ( <( {'state',_rec2,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162,_cor163,_cor164,_cor165,_cor166,_cor167,_cor168,_cor169,_cor170,_cor171,_cor172,_cor173,_cor174,_cor175,_cor176,_cor177,_cor178,_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191,_cor192,_cor193,_cor194,_cor195,_cor196,_cor197,_cor198,_cor199}
		       -| ['compiler_generated'] )> when 'true' ->
			{'ok',S,[{'parent_pid',_rec2}|CollectorOpt]}
		    -| ['compiler_generated'] )
		  ( <_cor200> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 165
	  <[H|T],S,CollectorOpt> when 'true' ->
	      %% Line 166
	      case H of
		%% Line 167
		<{'parent_pid',Parent}>
		    when let <_cor5> =
			  call 'erlang':'is_pid'
			      (Parent)
		      in  let <_cor6> =
			      call 'erlang':'=:='
				  (Parent, 'undefined')
			  in  call 'erlang':'or'
				  (_cor5, _cor6) ->
		    %% Line 168
		    case S of
		      <{'state',_cor201,_cor202,_cor203,_cor204,_cor205,_cor206,_cor207,_cor208,_cor209,_cor210,_cor211,_cor212,_cor213,_cor214,_cor215,_cor216,_cor217,_cor218,_cor219,_cor220,_cor221,_cor222,_cor223,_cor224,_cor225,_cor226,_cor227,_cor228,_cor229,_cor230,_cor231,_cor232,_cor233,_cor234,_cor235,_cor236,_cor237,_cor238,_cor239,_cor240,_cor241,_cor242,_cor243,_cor244,_cor245,_cor246,_cor247,_cor248,_cor249}> when 'true' ->
			  let <_cor9> =
			      call 'erlang':'setelement'
				  (2, S, Parent)
			  in  apply 'parse_opt'/3
				  (T, _cor9, CollectorOpt)
		      ( <_cor250> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 169
		<{'wx_debug',Level}> when 'true' ->
		    %% Line 170
		    case S of
		      <{'state',_cor251,_cor252,_cor253,_cor254,_cor255,_cor256,_cor257,_cor258,_cor259,_cor260,_cor261,_cor262,_cor263,_cor264,_cor265,_cor266,_cor267,_cor268,_cor269,_cor270,_cor271,_cor272,_cor273,_cor274,_cor275,_cor276,_cor277,_cor278,_cor279,_cor280,_cor281,_cor282,_cor283,_cor284,_cor285,_cor286,_cor287,_cor288,_cor289,_cor290,_cor291,_cor292,_cor293,_cor294,_cor295,_cor296,_cor297,_cor298,_cor299}> when 'true' ->
			  let <_cor12> =
			      call 'erlang':'setelement'
				  (49, S, Level)
			  in  apply 'parse_opt'/3
				  (T, _cor12, CollectorOpt)
		      ( <_cor300> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 171
		<{'trap_exit',Bool}>
		    when let <_cor13> =
			  call 'erlang':'=:='
			      (Bool, 'true')
		      in  let <_cor14> =
			      call 'erlang':'=:='
				  (Bool, 'false')
			  in  call 'erlang':'or'
				  (_cor13, _cor14) ->
		    %% Line 172
		    case S of
		      <{'state',_cor301,_cor302,_cor303,_cor304,_cor305,_cor306,_cor307,_cor308,_cor309,_cor310,_cor311,_cor312,_cor313,_cor314,_cor315,_cor316,_cor317,_cor318,_cor319,_cor320,_cor321,_cor322,_cor323,_cor324,_cor325,_cor326,_cor327,_cor328,_cor329,_cor330,_cor331,_cor332,_cor333,_cor334,_cor335,_cor336,_cor337,_cor338,_cor339,_cor340,_cor341,_cor342,_cor343,_cor344,_cor345,_cor346,_cor347,_cor348,_cor349}> when 'true' ->
			  let <_cor17> =
			      call 'erlang':'setelement'
				  (50, S, Bool)
			  in  apply 'parse_opt'/3
				  (T, _cor17, CollectorOpt)
		      ( <_cor350> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 173
		<{'title',Title}> when 'true' ->
		    let <_rec6> =
			%% Line 174
			apply 'name_to_string'/1
			    (Title)
		    in  %% Line 174
			case S of
			  <{'state',_cor351,_cor352,_cor353,_cor354,_cor355,_cor356,_cor357,_cor358,_cor359,_cor360,_cor361,_cor362,_cor363,_cor364,_cor365,_cor366,_cor367,_cor368,_cor369,_cor370,_cor371,_cor372,_cor373,_cor374,_cor375,_cor376,_cor377,_cor378,_cor379,_cor380,_cor381,_cor382,_cor383,_cor384,_cor385,_cor386,_cor387,_cor388,_cor389,_cor390,_cor391,_cor392,_cor393,_cor394,_cor395,_cor396,_cor397,_cor398,_cor399}> when 'true' ->
			      let <_cor21> =
				  call 'erlang':'setelement'
				      (24, S, _rec6)
			      in  apply 'parse_opt'/3
				      (T, _cor21, CollectorOpt)
			  ( <_cor400> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','state'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
		%% Line 175
		<{'detail_level',Level}>
		    when try
			  let <_cor22> =
			      call 'erlang':'is_integer'
				  (Level)
			  in  let <_cor23> =
				  %% Line 176
				  call 'erlang':'>='
				      (Level, 0)
			      in  let <_cor24> =
				      %% Line 177
				      call 'erlang':'=<'
					  (Level, 100)
				  in  let <_cor25> =
					  call 'erlang':'and'
					      (_cor23, _cor24)
				      in  call 'erlang':'and'
					      (_cor22, _cor25)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    %% Line 178
		    case S of
		      <{'state',_cor401,_cor402,_cor403,_cor404,_cor405,_cor406,_cor407,_cor408,_cor409,_cor410,_cor411,_cor412,_cor413,_cor414,_cor415,_cor416,_cor417,_cor418,_cor419,_cor420,_cor421,_cor422,_cor423,_cor424,_cor425,_cor426,_cor427,_cor428,_cor429,_cor430,_cor431,_cor432,_cor433,_cor434,_cor435,_cor436,_cor437,_cor438,_cor439,_cor440,_cor441,_cor442,_cor443,_cor444,_cor445,_cor446,_cor447,_cor448,_cor449}> when 'true' ->
			  let <_cor28> =
			      call 'erlang':'setelement'
				  (19, S, Level)
			  in  apply 'parse_opt'/3
				  (T, _cor28, CollectorOpt)
		      ( <_cor450> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 179
		<{'detail_level','max'}> when 'true' ->
		    %% Line 180
		    case S of
		      <{'state',_cor451,_cor452,_cor453,_cor454,_cor455,_cor456,_cor457,_cor458,_cor459,_cor460,_cor461,_cor462,_cor463,_cor464,_cor465,_cor466,_cor467,_cor468,_cor469,_cor470,_cor471,_cor472,_cor473,_cor474,_cor475,_cor476,_cor477,_cor478,_cor479,_cor480,_cor481,_cor482,_cor483,_cor484,_cor485,_cor486,_cor487,_cor488,_cor489,_cor490,_cor491,_cor492,_cor493,_cor494,_cor495,_cor496,_cor497,_cor498,_cor499}> when 'true' ->
			  let <_cor31> =
			      call 'erlang':'setelement'
				  (19, S, 100)
			  in  apply 'parse_opt'/3
				  (T, _cor31, CollectorOpt)
		      ( <_cor500> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 181
		<{'detail_level','min'}> when 'true' ->
		    %% Line 182
		    case S of
		      <{'state',_cor501,_cor502,_cor503,_cor504,_cor505,_cor506,_cor507,_cor508,_cor509,_cor510,_cor511,_cor512,_cor513,_cor514,_cor515,_cor516,_cor517,_cor518,_cor519,_cor520,_cor521,_cor522,_cor523,_cor524,_cor525,_cor526,_cor527,_cor528,_cor529,_cor530,_cor531,_cor532,_cor533,_cor534,_cor535,_cor536,_cor537,_cor538,_cor539,_cor540,_cor541,_cor542,_cor543,_cor544,_cor545,_cor546,_cor547,_cor548,_cor549}> when 'true' ->
			  let <_cor34> =
			      call 'erlang':'setelement'
				  (19, S, 0)
			  in  apply 'parse_opt'/3
				  (T, _cor34, CollectorOpt)
		      ( <_cor550> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 183
		<{'scale',Scale}>
		    when let <_cor35> =
			  call 'erlang':'is_integer'
			      (Scale)
		      in  let <_cor36> =
			      call 'erlang':'>'
				  (Scale, 0)
			  in  call 'erlang':'and'
				  (_cor35, _cor36) ->
		    %% Line 184
		    case S of
		      <{'state',_cor551,_cor552,_cor553,_cor554,_cor555,_cor556,_cor557,_cor558,_cor559,_cor560,_cor561,_cor562,_cor563,_cor564,_cor565,_cor566,_cor567,_cor568,_cor569,_cor570,_cor571,_cor572,_cor573,_cor574,_cor575,_cor576,_cor577,_cor578,_cor579,_cor580,_cor581,_cor582,_cor583,_cor584,_cor585,_cor586,_cor587,_cor588,_cor589,_cor590,_cor591,_cor592,_cor593,_cor594,_cor595,_cor596,_cor597,_cor598,_cor599}> when 'true' ->
			  let <_cor39> =
			      call 'erlang':'setelement'
				  (30, S, Scale)
			  in  apply 'parse_opt'/3
				  (T, _cor39, CollectorOpt)
		      ( <_cor600> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 185
		<{'width',W}>
		    when let <_cor40> =
			  call 'erlang':'is_integer'
			      (W)
		      in  let <_cor41> =
			      call 'erlang':'>'
				  (W, 0)
			  in  call 'erlang':'and'
				  (_cor40, _cor41) ->
		    %% Line 186
		    case S of
		      <{'state',_cor601,_cor602,_cor603,_cor604,_cor605,_cor606,_cor607,_cor608,_cor609,_cor610,_cor611,_cor612,_cor613,_cor614,_cor615,_cor616,_cor617,_cor618,_cor619,_cor620,_cor621,_cor622,_cor623,_cor624,_cor625,_cor626,_cor627,_cor628,_cor629,_cor630,_cor631,_cor632,_cor633,_cor634,_cor635,_cor636,_cor637,_cor638,_cor639,_cor640,_cor641,_cor642,_cor643,_cor644,_cor645,_cor646,_cor647,_cor648,_cor649}> when 'true' ->
			  let <_cor43> =
			      call 'erlang':'setelement'
				  (37, S, W)
			  in  let <_cor45> =
				  call 'erlang':'setelement'
				      (28, _cor43, W)
			      in  apply 'parse_opt'/3
				      (T, _cor45, CollectorOpt)
		      ( <_cor650> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 187
		<{'height',WH}>
		    when let <_cor46> =
			  call 'erlang':'is_integer'
			      (WH)
		      in  let <_cor47> =
			      call 'erlang':'>'
				  (WH, 0)
			  in  call 'erlang':'and'
				  (_cor46, _cor47) ->
		    %% Line 188
		    case S of
		      <{'state',_cor651,_cor652,_cor653,_cor654,_cor655,_cor656,_cor657,_cor658,_cor659,_cor660,_cor661,_cor662,_cor663,_cor664,_cor665,_cor666,_cor667,_cor668,_cor669,_cor670,_cor671,_cor672,_cor673,_cor674,_cor675,_cor676,_cor677,_cor678,_cor679,_cor680,_cor681,_cor682,_cor683,_cor684,_cor685,_cor686,_cor687,_cor688,_cor689,_cor690,_cor691,_cor692,_cor693,_cor694,_cor695,_cor696,_cor697,_cor698,_cor699}> when 'true' ->
			  let <_cor49> =
			      call 'erlang':'setelement'
				  (38, S, WH)
			  in  let <_cor51> =
				  call 'erlang':'setelement'
				      (29, _cor49, WH)
			      in  apply 'parse_opt'/3
				      (T, _cor51, CollectorOpt)
		      ( <_cor700> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 189
		<{'collector_pid',Pid}>
		    when call 'erlang':'is_pid'
			  (Pid) ->
		    %% Line 190
		    case S of
		      <{'state',_cor701,_cor702,_cor703,_cor704,_cor705,_cor706,_cor707,_cor708,_cor709,_cor710,_cor711,_cor712,_cor713,_cor714,_cor715,_cor716,_cor717,_cor718,_cor719,_cor720,_cor721,_cor722,_cor723,_cor724,_cor725,_cor726,_cor727,_cor728,_cor729,_cor730,_cor731,_cor732,_cor733,_cor734,_cor735,_cor736,_cor737,_cor738,_cor739,_cor740,_cor741,_cor742,_cor743,_cor744,_cor745,_cor746,_cor747,_cor748,_cor749}> when 'true' ->
			  let <_cor54> =
			      call 'erlang':'setelement'
				  (4, S, Pid)
			  in  apply 'parse_opt'/3
				  (T, _cor54, CollectorOpt)
		      ( <_cor750> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 191
		<{'collector_pid','undefined'}> when 'true' ->
		    %% Line 192
		    case S of
		      <{'state',_cor751,_cor752,_cor753,_cor754,_cor755,_cor756,_cor757,_cor758,_cor759,_cor760,_cor761,_cor762,_cor763,_cor764,_cor765,_cor766,_cor767,_cor768,_cor769,_cor770,_cor771,_cor772,_cor773,_cor774,_cor775,_cor776,_cor777,_cor778,_cor779,_cor780,_cor781,_cor782,_cor783,_cor784,_cor785,_cor786,_cor787,_cor788,_cor789,_cor790,_cor791,_cor792,_cor793,_cor794,_cor795,_cor796,_cor797,_cor798,_cor799}> when 'true' ->
			  let <_cor57> =
			      call 'erlang':'setelement'
				  (4, S, 'undefined')
			  in  apply 'parse_opt'/3
				  (T, _cor57, CollectorOpt)
		      ( <_cor800> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 193
		<{'active_filter',Name}>
		    when call 'erlang':'is_atom'
			  (Name) ->
		    %% Line 194
		    case S of
		      <{'state',_cor801,_cor802,_cor803,_cor804,_cor805,_cor806,_cor807,_cor808,_cor809,_cor810,_cor811,_cor812,_cor813,_cor814,_cor815,_cor816,_cor817,_cor818,_cor819,_cor820,_cor821,_cor822,_cor823,_cor824,_cor825,_cor826,_cor827,_cor828,_cor829,_cor830,_cor831,_cor832,_cor833,_cor834,_cor835,_cor836,_cor837,_cor838,_cor839,_cor840,_cor841,_cor842,_cor843,_cor844,_cor845,_cor846,_cor847,_cor848,_cor849}> when 'true' ->
			  let <_cor60> =
			      call 'erlang':'setelement'
				  (7, S, Name)
			  in  apply 'parse_opt'/3
				  (T, _cor60, CollectorOpt)
		      ( <_cor850> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 195
		<{'event_order','trace_ts'}> when 'true' ->
		    let <CollectorOpt2> =
			%% Line 196
			[H|CollectorOpt]
		    in  %% Line 197
			case S of
			  <{'state',_cor851,_cor852,_cor853,_cor854,_cor855,_cor856,_cor857,_cor858,_cor859,_cor860,_cor861,_cor862,_cor863,_cor864,_cor865,_cor866,_cor867,_cor868,_cor869,_cor870,_cor871,_cor872,_cor873,_cor874,_cor875,_cor876,_cor877,_cor878,_cor879,_cor880,_cor881,_cor882,_cor883,_cor884,_cor885,_cor886,_cor887,_cor888,_cor889,_cor890,_cor891,_cor892,_cor893,_cor894,_cor895,_cor896,_cor897,_cor898,_cor899}> when 'true' ->
			      let <_cor64> =
				  call 'erlang':'setelement'
				      (5, S, 'trace_ts')
			      in  apply 'parse_opt'/3
				      (T, _cor64, CollectorOpt2)
			  ( <_cor900> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','state'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
		%% Line 198
		<{'event_order','event_ts'}> when 'true' ->
		    let <CollectorOpt2> =
			%% Line 199
			[H|CollectorOpt]
		    in  %% Line 200
			case S of
			  <{'state',_cor901,_cor902,_cor903,_cor904,_cor905,_cor906,_cor907,_cor908,_cor909,_cor910,_cor911,_cor912,_cor913,_cor914,_cor915,_cor916,_cor917,_cor918,_cor919,_cor920,_cor921,_cor922,_cor923,_cor924,_cor925,_cor926,_cor927,_cor928,_cor929,_cor930,_cor931,_cor932,_cor933,_cor934,_cor935,_cor936,_cor937,_cor938,_cor939,_cor940,_cor941,_cor942,_cor943,_cor944,_cor945,_cor946,_cor947,_cor948,_cor949}> when 'true' ->
			      let <_cor68> =
				  call 'erlang':'setelement'
				      (5, S, 'event_ts')
			      in  apply 'parse_opt'/3
				      (T, _cor68, CollectorOpt2)
			  ( <_cor950> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','state'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
		%% Line 201
		<{'trace_port',_X_Port}> when 'true' ->
		    let <CollectorOpt2> =
			%% Line 202
			[H|CollectorOpt]
		    in  %% Line 203
			apply 'parse_opt'/3
			    (T, S, CollectorOpt2)
		%% Line 204
		<{'trace_max_queue',_X_Queue}> when 'true' ->
		    let <CollectorOpt2> =
			%% Line 205
			[H|CollectorOpt]
		    in  %% Line 206
			apply 'parse_opt'/3
			    (T, S, CollectorOpt2)
		%% Line 207
		<{'trace_pattern',_X_Pattern}> when 'true' ->
		    let <CollectorOpt2> =
			%% Line 208
			[H|CollectorOpt]
		    in  %% Line 209
			apply 'parse_opt'/3
			    (T, S, CollectorOpt2)
		%% Line 210
		<{'trace_global',_X_Boolean}> when 'true' ->
		    let <CollectorOpt2> =
			%% Line 211
			[H|CollectorOpt]
		    in  %% Line 212
			apply 'parse_opt'/3
			    (T, S, CollectorOpt2)
		%% Line 213
		<{'trace_client',_X_Client}> when 'true' ->
		    let <CollectorOpt2> =
			%% Line 214
			[H|CollectorOpt]
		    in  %% Line 215
			apply 'parse_opt'/3
			    (T, S, CollectorOpt2)
		%% Line 216
		<{'dict_insert',{'filter',Name},Fun}> when 'true' ->
		    %% Line 217
		    case <> of
		      %% Line 218
		      <>
			  when try
				let <_cor74> =
				    call 'erlang':'is_atom'
					(Name)
				in  let <_cor75> =
					call 'erlang':'is_function'
					    (Fun)
				    in  call 'erlang':'and'
					    (_cor74, _cor75)
			    of <Try> ->
				Try
			    catch <T,R> ->
				'false' ->
			  let <F> = {%% Line 219
			       'filter',%% Line 219
					Name,%% Line 219
					     Fun}
			  in  %% Line 220
			      ( case S of
				  ( <( {'state',_cor951,_cor952,_cor953,_cor954,_cor955,_cor956,_rec19,_cor957,_cor958,_cor959,_cor960,_cor961,_cor962,_cor963,_cor964,_cor965,_cor966,_cor967,_cor968,_cor969,_cor970,_cor971,_cor972,_cor973,_cor974,_cor975,_cor976,_cor977,_cor978,_cor979,_cor980,_cor981,_cor982,_cor983,_cor984,_cor985,_cor986,_cor987,_cor988,_cor989,_cor990,_cor991,_cor992,_cor993,_cor994,_cor995,_cor996,_cor997,_cor998}
				       -| ['compiler_generated'] )> when 'true' ->
					let <Filters> =
					    call 'lists':'keydelete'
						(Name, 2, _rec19)
					in  let <CollectorOpt2> =
						%% Line 221
						[H|CollectorOpt]
					    in  let <_rec20> =
						    %% Line 222
						    call 'erlang':'++'
							(Filters, [F|[]])
						in  let <_cor84> =
							%% Line 222
							call 'erlang':'setelement'
							    (8, S, _rec20)
						    in  %% Line 222
							apply 'parse_opt'/3
							    (T, _cor84, CollectorOpt2)
				    -| ['compiler_generated'] )
				  ( <_cor999> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','state'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
		      %% Line 223
		      <> when 'true' ->
			  %% Line 224
			  {'error',{'bad_option',H}}
		    end
		%% Line 226
		<{'dict_insert',{'subscriber',Pid},_X_Val}> when 'true' ->
		    %% Line 227
		    case <> of
		      %% Line 228
		      <>
			  when call 'erlang':'is_pid'
				(Pid) ->
			  let <CollectorOpt2> =
			      %% Line 229
			      [H|CollectorOpt]
			  in  %% Line 230
			      apply 'parse_opt'/3
				  (T, S, CollectorOpt2)
		      %% Line 231
		      <> when 'true' ->
			  %% Line 232
			  {'error',{'bad_option',H}}
		    end
		%% Line 234
		<{'dict_insert',_X_Key,_X_Val}> when 'true' ->
		    let <CollectorOpt2> =
			%% Line 235
			[H|CollectorOpt]
		    in  %% Line 236
			apply 'parse_opt'/3
			    (T, S, CollectorOpt2)
		%% Line 237
		<{'dict_delete',{'filter',Name}}> when 'true' ->
		    %% Line 238
		    ( case S of
			( <( {'state',_cor1050,_cor1051,_cor1052,_cor1053,_cor1054,_cor1055,_rec22,_cor1056,_cor1057,_cor1058,_cor1059,_cor1060,_cor1061,_cor1062,_cor1063,_cor1064,_cor1065,_cor1066,_cor1067,_cor1068,_cor1069,_cor1070,_cor1071,_cor1072,_cor1073,_cor1074,_cor1075,_cor1076,_cor1077,_cor1078,_cor1079,_cor1080,_cor1081,_cor1082,_cor1083,_cor1084,_cor1085,_cor1086,_cor1087,_cor1088,_cor1089,_cor1090,_cor1091,_cor1092,_cor1093,_cor1094,_cor1095,_cor1096,_cor1097}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <Filters> =
				  call 'lists':'keydelete'
				      (Name, 2, _rec22)
			      in  let <CollectorOpt2> =
				      %% Line 239
				      [H|CollectorOpt]
				  in  let <_cor93> =
					  %% Line 240
					  call 'erlang':'setelement'
					      (8, S, Filters)
				      in  %% Line 240
					  apply 'parse_opt'/3
					      (T, _cor93, CollectorOpt2)
			  -| ['compiler_generated'] )
			( <_cor1098> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 241
		<{'dict_delete',_X_Key}> when 'true' ->
		    let <CollectorOpt2> =
			%% Line 242
			[H|CollectorOpt]
		    in  %% Line 243
			apply 'parse_opt'/3
			    (T, S, CollectorOpt2)
		%% Line 244
		<{'max_events',_X_Max}> when 'true' ->
		    %% Line 246
		    apply 'parse_opt'/3
			(T, S, CollectorOpt)
		%% Line 247
		<{'max_actors',Max}>
		    when let <_cor95> =
			  call 'erlang':'is_integer'
			      (Max)
		      in  let <_cor96> =
			      call 'erlang':'>='
				  (Max, 0)
			  in  call 'erlang':'and'
				  (_cor95, _cor96) ->
		    %% Line 248
		    case S of
		      <{'state',_cor1149,_cor1150,_cor1151,_cor1152,_cor1153,_cor1154,_cor1155,_cor1156,_cor1157,_cor1158,_cor1159,_cor1160,_cor1161,_cor1162,_cor1163,_cor1164,_cor1165,_cor1166,_cor1167,_cor1168,_cor1169,_cor1170,_cor1171,_cor1172,_cor1173,_cor1174,_cor1175,_cor1176,_cor1177,_cor1178,_cor1179,_cor1180,_cor1181,_cor1182,_cor1183,_cor1184,_cor1185,_cor1186,_cor1187,_cor1188,_cor1189,_cor1190,_cor1191,_cor1192,_cor1193,_cor1194,_cor1195,_cor1196,_cor1197}> when 'true' ->
			  let <_cor99> =
			      call 'erlang':'setelement'
				  (16, S, Max)
			  in  apply 'parse_opt'/3
				  (T, _cor99, CollectorOpt)
		      ( <_cor1198> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 249
		<{'max_actors',Max}>
		    when call 'erlang':'=:='
			  (Max,
			   'infinity') ->
		    %% Line 250
		    case S of
		      <{'state',_cor1199,_cor1200,_cor1201,_cor1202,_cor1203,_cor1204,_cor1205,_cor1206,_cor1207,_cor1208,_cor1209,_cor1210,_cor1211,_cor1212,_cor1213,_cor1214,_cor1215,_cor1216,_cor1217,_cor1218,_cor1219,_cor1220,_cor1221,_cor1222,_cor1223,_cor1224,_cor1225,_cor1226,_cor1227,_cor1228,_cor1229,_cor1230,_cor1231,_cor1232,_cor1233,_cor1234,_cor1235,_cor1236,_cor1237,_cor1238,_cor1239,_cor1240,_cor1241,_cor1242,_cor1243,_cor1244,_cor1245,_cor1246,_cor1247}> when 'true' ->
			  let <_cor102> =
			      call 'erlang':'setelement'
				  (16, S, Max)
			  in  apply 'parse_opt'/3
				  (T, _cor102, CollectorOpt)
		      ( <_cor1248> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 251
		<{'actors',ActorNames}>
		    when call 'erlang':'is_list'
			  (ActorNames) ->
		    let <_cor104> =
			%% Line 253
			case call 'lists':'member'
				 ([85|[78|[75|[78|[79|[87|[78]]]]]]], ActorNames) of
			  %% Line 254
			  <'false'> when 'true' ->
			      [[85|[78|[75|[78|[79|[87|[78]]]]]]]|ActorNames]
			  %% Line 255
			  <'true'> when 'true' ->
			      ActorNames
			  ( <_cor103> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor103})
			    -| ['compiler_generated'] )
			end
		    in  let <_cor111> =
			    %% Line 257
			    ( letrec
				  'lc$^0'/1 =
				      fun (_cor108) ->
					  case _cor108 of
					    <[Name|_cor107]> when 'true' ->
						let <_cor109> =
						    apply 'create_actor'/1
							(Name)
						in  let <_cor110> =
							apply 'lc$^0'/1
							    (_cor107)
						    in  ( [_cor109|_cor110]
							  -| ['compiler_generated'] )
					    <[]> when 'true' ->
						[]
					    ( <_cor108> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor108})
						    -| [{'function_name',{'lc$^0',1}}] )
					      -| ['compiler_generated'] )
					  end
			      in  apply 'lc$^0'/1
				      (_cor104)
			      -| ['list_comprehension'] )
			in  %% Line 258
			    case S of
			      <{'state',_cor1249,_cor1250,_cor1251,_cor1252,_cor1253,_cor1254,_cor1255,_cor1256,_cor1257,_cor1258,_cor1259,_cor1260,_cor1261,_cor1262,_cor1263,_cor1264,_cor1265,_cor1266,_cor1267,_cor1268,_cor1269,_cor1270,_cor1271,_cor1272,_cor1273,_cor1274,_cor1275,_cor1276,_cor1277,_cor1278,_cor1279,_cor1280,_cor1281,_cor1282,_cor1283,_cor1284,_cor1285,_cor1286,_cor1287,_cor1288,_cor1289,_cor1290,_cor1291,_cor1292,_cor1293,_cor1294,_cor1295,_cor1296,_cor1297}> when 'true' ->
				  let <_cor115> =
				      call 'erlang':'setelement'
					  (17, S, _cor111)
				  in  apply 'parse_opt'/3
					  (T, _cor115, CollectorOpt)
			      ( <_cor1298> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','state'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
		%% Line 259
		<{'include',ActorNames}>
		    when call 'erlang':'is_list'
			  (ActorNames) ->
		    let <_cor121> =
			%% Line 260
			( letrec
			      'lc$^1'/1 =
				  fun (_cor118) ->
				      case _cor118 of
					<[Name|_cor117]> when 'true' ->
					    let <_cor119> =
						apply 'opt_create_actor'/3
						    (Name, 'include', S)
					    in  let <_cor120> =
						    apply 'lc$^1'/1
							(_cor117)
						in  ( [_cor119|_cor120]
						      -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor118> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor118})
						-| [{'function_name',{'lc$^1',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lc$^1'/1
				  (ActorNames)
			  -| ['list_comprehension'] )
		    in  %% Line 261
			case S of
			  <{'state',_cor1299,_cor1300,_cor1301,_cor1302,_cor1303,_cor1304,_cor1305,_cor1306,_cor1307,_cor1308,_cor1309,_cor1310,_cor1311,_cor1312,_cor1313,_cor1314,_cor1315,_cor1316,_cor1317,_cor1318,_cor1319,_cor1320,_cor1321,_cor1322,_cor1323,_cor1324,_cor1325,_cor1326,_cor1327,_cor1328,_cor1329,_cor1330,_cor1331,_cor1332,_cor1333,_cor1334,_cor1335,_cor1336,_cor1337,_cor1338,_cor1339,_cor1340,_cor1341,_cor1342,_cor1343,_cor1344,_cor1345,_cor1346,_cor1347}> when 'true' ->
			      let <_cor125> =
				  call 'erlang':'setelement'
				      (17, S, _cor121)
			      in  apply 'parse_opt'/3
				      (T, _cor125, CollectorOpt)
			  ( <_cor1348> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','state'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
		%% Line 262
		<{'exclude',ActorNames}>
		    when call 'erlang':'is_list'
			  (ActorNames) ->
		    let <_cor131> =
			%% Line 263
			( letrec
			      'lc$^2'/1 =
				  fun (_cor128) ->
				      case _cor128 of
					<[Name|_cor127]> when 'true' ->
					    let <_cor129> =
						apply 'opt_create_actor'/3
						    (Name, 'exclude', S)
					    in  let <_cor130> =
						    apply 'lc$^2'/1
							(_cor127)
						in  ( [_cor129|_cor130]
						      -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor128> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor128})
						-| [{'function_name',{'lc$^2',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lc$^2'/1
				  (ActorNames)
			  -| ['list_comprehension'] )
		    in  %% Line 264
			case S of
			  <{'state',_cor1349,_cor1350,_cor1351,_cor1352,_cor1353,_cor1354,_cor1355,_cor1356,_cor1357,_cor1358,_cor1359,_cor1360,_cor1361,_cor1362,_cor1363,_cor1364,_cor1365,_cor1366,_cor1367,_cor1368,_cor1369,_cor1370,_cor1371,_cor1372,_cor1373,_cor1374,_cor1375,_cor1376,_cor1377,_cor1378,_cor1379,_cor1380,_cor1381,_cor1382,_cor1383,_cor1384,_cor1385,_cor1386,_cor1387,_cor1388,_cor1389,_cor1390,_cor1391,_cor1392,_cor1393,_cor1394,_cor1395,_cor1396,_cor1397}> when 'true' ->
			      let <_cor135> =
				  call 'erlang':'setelement'
				      (17, S, _cor131)
			      in  apply 'parse_opt'/3
				      (T, _cor135, CollectorOpt)
			  ( <_cor1398> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','state'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
		%% Line 265
		<{'first_event',_X_FirstKey}> when 'true' ->
		    %% Line 267
		    apply 'parse_opt'/3
			(T, S, CollectorOpt)
		%% Line 268
		<{'hide_actors',Bool}>
		    when let <_cor136> =
			  call 'erlang':'=:='
			      (Bool, 'true')
		      in  let <_cor137> =
			      call 'erlang':'=:='
				  (Bool, 'false')
			  in  call 'erlang':'or'
				  (_cor136, _cor137) ->
		    %% Line 269
		    case S of
		      <{'state',_cor1399,_cor1400,_cor1401,_cor1402,_cor1403,_cor1404,_cor1405,_cor1406,_cor1407,_cor1408,_cor1409,_cor1410,_cor1411,_cor1412,_cor1413,_cor1414,_cor1415,_cor1416,_cor1417,_cor1418,_cor1419,_cor1420,_cor1421,_cor1422,_cor1423,_cor1424,_cor1425,_cor1426,_cor1427,_cor1428,_cor1429,_cor1430,_cor1431,_cor1432,_cor1433,_cor1434,_cor1435,_cor1436,_cor1437,_cor1438,_cor1439,_cor1440,_cor1441,_cor1442,_cor1443,_cor1444,_cor1445,_cor1446,_cor1447}> when 'true' ->
			  let <_cor140> =
			      call 'erlang':'setelement'
				  (21, S, Bool)
			  in  apply 'parse_opt'/3
				  (T, _cor140, CollectorOpt)
		      ( <_cor1448> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 270
		<{'hide_actions',Bool}>
		    when let <_cor141> =
			  call 'erlang':'=:='
			      (Bool, 'true')
		      in  let <_cor142> =
			      call 'erlang':'=:='
				  (Bool, 'false')
			  in  call 'erlang':'or'
				  (_cor141, _cor142) ->
		    %% Line 271
		    case S of
		      <{'state',_cor1449,_cor1450,_cor1451,_cor1452,_cor1453,_cor1454,_cor1455,_cor1456,_cor1457,_cor1458,_cor1459,_cor1460,_cor1461,_cor1462,_cor1463,_cor1464,_cor1465,_cor1466,_cor1467,_cor1468,_cor1469,_cor1470,_cor1471,_cor1472,_cor1473,_cor1474,_cor1475,_cor1476,_cor1477,_cor1478,_cor1479,_cor1480,_cor1481,_cor1482,_cor1483,_cor1484,_cor1485,_cor1486,_cor1487,_cor1488,_cor1489,_cor1490,_cor1491,_cor1492,_cor1493,_cor1494,_cor1495,_cor1496,_cor1497}> when 'true' ->
			  let <_cor145> =
			      call 'erlang':'setelement'
				  (20, S, Bool)
			  in  apply 'parse_opt'/3
				  (T, _cor145, CollectorOpt)
		      ( <_cor1498> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 272
		<{'hide_unknown',Bool}>
		    when let <_cor146> =
			  call 'erlang':'=:='
			      (Bool, 'true')
		      in  let <_cor147> =
			      call 'erlang':'=:='
				  (Bool, 'false')
			  in  call 'erlang':'or'
				  (_cor146, _cor147) ->
		    %% Line 274
		    apply 'parse_opt'/3
			(T, S, CollectorOpt)
		%% Line 275
		<{'display_mode',_X_Mode}> when 'true' ->
		    %% Line 277
		    apply 'parse_opt'/3
			(T, S, CollectorOpt)
		%% Line 278
		<Bad> when 'true' ->
		    %% Line 279
		    {'error',{'bad_option',Bad}}
	      end
	  %% Line 281
	  <BadList,_X_S,_X_CollectorOpt> when 'true' ->
	      %% Line 282
	      {'error',{'bad_option_list',BadList}}
	end
'do_dict_insert'/3 =
    %% Line 284
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'filter',Name},Fun,S>
	      when try
		    let <_cor3> =
			call 'erlang':'is_atom'
			    (Name)
		    in  let <_cor4> =
			    call 'erlang':'is_function'
				(Fun)
			in  call 'erlang':'and'
				(_cor3, _cor4)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <F> = {%% Line 285
		   'filter',%% Line 285
			    Name,%% Line 285
				 Fun}
	      in  %% Line 286
		  ( case S of
		      ( <( {'state',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_rec31,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <Filters> =
				call 'lists':'keydelete'
				    (Name, 2, _rec31)
			    in  let <Filters2> =
				    %% Line 287
				    call 'lists':'keysort'
					(2, [F|Filters])
				in  let <S2> =
					%% Line 288
					apply 'create_filter_menu'/3
					    (S, _cor23, Filters2)
				    in  %% Line 289
					case S2 of
					  <{'state',_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150,_cor151,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162,_cor163,_cor164}> when 'true' ->
					      call 'erlang':'setelement'
						  (8, S2, Filters2)
					  ( <_cor165> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','state'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
			-| ['compiler_generated'] )
		      ( <_cor66> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 290
	  <_X_Key,_X_Val,S> when 'true' ->
	      %% Line 293
	      S
	end
'do_dict_delete'/2 =
    %% Line 295
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'filter',Name},S = {'state',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68}>
	      when let <_cor2> =
		    call 'erlang':'is_atom'
			(Name)
		in  let <_cor8> =
			call 'erlang':'=/='
			    (Name, _cor25)
		    in  call 'erlang':'and'
			    (_cor2, _cor8) ->
	      let <Filters> =
		  %% Line 296
		  call 'lists':'keydelete'
		      (Name, 2, _cor26)
	      in  let <S2> =
		      %% Line 297
		      apply 'create_filter_menu'/3
			  (S, _cor25, Filters)
		  in  %% Line 298
		      case S2 of
			<{'state',_cor167,_cor168,_cor169,_cor170,_cor171,_cor172,_cor173,_cor174,_cor175,_cor176,_cor177,_cor178,_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191,_cor192,_cor193,_cor194,_cor195,_cor196,_cor197,_cor198,_cor199,_cor200,_cor201,_cor202,_cor203,_cor204,_cor205,_cor206,_cor207,_cor208,_cor209,_cor210,_cor211,_cor212,_cor213,_cor214,_cor215}> when 'true' ->
			    call 'erlang':'setelement'
				(8, S2, Filters)
			( <_cor216> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
	  %% Line 299
	  <_X_Key,S> when 'true' ->
	      %% Line 302
	      S
	end
'init'/1 =
    %% Line 316
    fun (_cor0) ->
	case _cor0 of
	  <[S = {'state',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69}|[]]> when ( 'true'
																																															     -| ['compiler_generated'] ) ->
	      do  %% Line 317
		  call 'erlang':'process_flag'
		      ('trap_exit', _cor69)
		  do  %% Line 318
		      case _cor21 of
			%% Line 319
			<'undefined'> when 'true' ->
			    'ok'
			%% Line 320
			<ParentPid> when 'true' ->
			    call 'erlang':'link'
				(ParentPid)
		      end
		      do  %% Line 322
			  call 'wx':'new'
			      ()
			  do  %% Line 323
			      call 'wx':'debug'
				  (_cor68)
			      let <_cor8> =
				  %% Line 325
				  call 'erlang':'self'
				      ()
			      in  do  %% Line 324
				      call 'et_collector':'dict_insert'
					  (_cor23, %% Line 325
						   {'subscriber',_cor8}, %% Line 326
									 'et_wx_viewer')
				      let <S2> =
					  %% Line 327
					  apply 'create_main_window'/1
					      (S)
				      in  %% Line 328
					  ( case S2 of
					      ( <( {'state',_cor266,_cor267,_cor268,_cor269,_cor270,_cor271,_cor272,_cor273,_cor274,_cor275,_cor276,_cor277,_cor278,_cor279,_cor280,_cor281,_cor282,_cor283,_cor284,_cor285,_cor286,_cor287,_cor288,_cor289,_cor290,_cor291,_cor292,_rec41,_cor293,_cor294,_cor295,_cor296,_cor297,_cor298,_cor299,_cor300,_cor301,_cor302,_cor303,_cor304,_cor305,_cor306,_cor307,_cor308,_cor309,_cor310,_cor311,_cor312,_cor313}
						   -| ['compiler_generated'] )> when 'true' ->
						    let <EventsPerPage> =
							apply 'events_per_page'/2
							    (S2, _rec41)
						    in  let <_cor17> =
							    %% Line 329
							    call 'erlang':'setelement'
								(13, S2, EventsPerPage)
							in  let <S3> =
								%% Line 329
								apply 'revert_main_window'/1
								    (_cor17)
							    in  let <Timeout> =
								    %% Line 330
								    apply 'timeout'/1
									(S3)
								in  %% Line 331
								    {'ok',S3,Timeout}
						-| ['compiler_generated'] )
					      ( <_cor314> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','state'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
	  ( <_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20})
		  -| [{'function_name',{'init',1}}] )
	    -| ['compiler_generated'] )
	end
'handle_call'/3 =
    %% Line 343
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'get_collector_pid',_X_From,S> when 'true' ->
	      %% Line 344
	      ( case S of
		  ( <( {'state',_cor19,_cor20,_rec43,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 345
			apply 'reply'/2
			    (_rec43, S)
		    -| ['compiler_generated'] )
		  ( <_cor67> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 346
	  <'stop',_X_From,S> when 'true' ->
	      %% Line 347
	      ( case S of
		  ( <( {'state',_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_rec44,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115}
		       -| ['compiler_generated'] )> when 'true' ->
			do  call 'wxFrame':'destroy'
				(_rec44)
			    do  %% Line 348
				apply 'opt_unlink'/1
				    (_cor68)
				%% Line 349
				{'stop','shutdown','ok',S}
		    -| ['compiler_generated'] )
		  ( <_cor116> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 350
	  <{'open_event',N},_X_From,S>
	      when let <_cor10> =
		    call 'erlang':'is_integer'
			(N)
		in  let <_cor11> =
			call 'erlang':'>'
			    (N, 0)
		    in  call 'erlang':'and'
			    (_cor10, _cor11) ->
	      let <Reply> =
		  %% Line 351
		  apply 'do_open_event'/2
		      (S, N)
	      in  %% Line 352
		  apply 'reply'/2
		      (Reply, S)
	  %% Line 353
	  <Request,From,S> when 'true' ->
	      let <_cor13> =
		  %% Line 355
		  call 'erlang':'self'
		      ()
	      in  %% Line 354
		  case call 'error_logger':'format'
			   ([126|[112|[40|[126|[112|[41|[58|[32|[104|[97|[110|[100|[108|[101|[95|[99|[97|[108|[108|[40|[126|[112|[44|[32|[126|[112|[44|[32|[126|[112|[41|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 355
																										     ['et_wx_viewer'|[_cor13|[Request|[From|[S|[]]]]]]) of
		    <'ok'> when 'true' ->
			let <Reply> = {%% Line 356
			     'error',%% Line 356
				     {'bad_request',Request}}
			in  %% Line 357
			    apply 'reply'/2
				(Reply, S)
		    ( <_cor14> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor14})
		      -| ['compiler_generated'] )
		  end
	end
'handle_cast'/2 =
    %% Line 366
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 368
	    call 'erlang':'self'
		()
	in  %% Line 367
	    case call 'error_logger':'format'
		     ([126|[112|[40|[126|[112|[41|[58|[32|[104|[97|[110|[100|[108|[101|[95|[99|[97|[115|[116|[40|[126|[112|[44|[32|[126|[112|[41|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 368
																							 ['et_wx_viewer'|[_cor2|[_cor1|[_cor0|[]]]]]) of
	      <'ok'> when 'true' ->
		  %% Line 369
		  apply 'noreply'/1
		      (_cor0)
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor3})
		-| ['compiler_generated'] )
	    end
'handle_info'/2 =
    %% Line 379
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'et',{'more_events',N}},S> when 'true' ->
	      let <_cor28> =
		  %% Line 382
		  case <> of
		    %% Line 383
		    <>
			when ( try
				( case <> of
				    ( <>
					  when ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'is_record'
										   -| ['compiler_generated'] )
						  (S,
						   ( 'state'
						     -| ['compiler_generated'] ),
						   ( 50
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] ) ->
					  let <_cor6> =
					      ( call 'erlang':'element'
						    (15, S)
						-| ['compiler_generated'] )
					  in  ( call 'erlang':'=:='
						    (N, _cor6)
						-| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    ( <> when 'true' ->
					  'false'
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    of <Try> ->
				Try
			    catch <T,R> ->
				'false'
			    -| ['compiler_generated'] ) ->
			%% Line 384
			S
		    %% Line 385
		    <> when 'true' ->
			%% Line 386
			( case S of
			    ( <( {'state',_cor439,_cor440,_cor441,_cor442,_cor443,_cor444,_cor445,_cor446,_cor447,_cor448,_cor449,_rec46,_cor450,_cor451,_cor452,_cor453,_cor454,_cor455,_cor456,_cor457,_cor458,_cor459,_cor460,_cor461,_cor462,_cor463,_cor464,_cor465,_cor466,_cor467,_cor468,_cor469,_cor470,_cor471,_cor472,_cor473,_cor474,_cor475,_cor476,_cor477,_cor478,_cor479,_cor480,_cor481,_cor482,_cor483,_cor484,_cor485,_cor486}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_cor10> =
				      apply 'queue_length'/1
					  (_cor450)
				  in  let <Missing> =
					  call 'erlang':'-'
					      (_rec46, _cor10)
				      in  %% Line 387
					  case <> of
					    %% Line 388
					    <>
						when call 'erlang':'=:='
						      (Missing,
						       0) ->
						let <_cor16> =
						    %% Line 389
						    call 'erlang':'setelement'
							(15, S, N)
						in  %% Line 389
						    apply 'update_scroll_bar'/1
							(_cor16)
					    %% Line 390
					    <>
						when call 'erlang':'>'
						      (Missing,
						       0) ->
						let <OldEvents> =
						    %% Line 391
						    apply 'queue_to_list'/1
							(_cor450)
						in  let <_cor24> =
							%% Line 393
							call 'erlang':'setelement'
							    (15, S, N)
						    in  %% Line 392
							case %% Line 393
							     apply 'collect_more_events'/3
								 (_cor24, _cor449, %% Line 395
										   Missing) of
							  <{S2,NewEvents}> when 'true' ->
							      let <_cor26> =
								  %% Line 396
								  call 'erlang':'++'
								      (OldEvents, NewEvents)
							      in  let <S3> =
								      %% Line 396
								      apply 'replace_events'/2
									  (S2, _cor26)
								  in  %% Line 397
								      apply 'refresh_main_window'/1
									  (S3)
							  ( <_cor25> when 'true' ->
								primop 'match_fail'
								    ({'badmatch',_cor25})
							    -| ['compiler_generated'] )
							end
					    ( <> when 'true' ->
						  primop 'match_fail'
						      ('if_clause')
					      -| ['compiler_generated'] )
					  end
			      -| ['compiler_generated'] )
			    ( <_cor487> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','state'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		  end
	      in  %% Line 400
		  apply 'noreply'/1
		      (_cor28)
	  %% Line 401
	  <{'et',{'insert_actors',ActorNames}},S>
	      when call 'erlang':'is_list'
		    (ActorNames) ->
	      let <Fun> =
		  %% Line 402
		  ( fun (_cor33,_cor32) ->
			%% Line 403
			case call 'lists':'keymember'
				 (_cor33, 2, _cor32) of
			  %% Line 404
			  <'true'> when 'true' ->
			      _cor32
			  %% Line 405
			  <'false'> when 'true' ->
			      let <_cor30> =
				  apply 'create_actor'/1
				      (_cor33)
			      in  call 'erlang':'++'
				      (_cor32, [_cor30|[]])
			  ( <_cor31> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor31})
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-handle_info/2-fun-0-'}}] )
	      in  %% Line 408
		  ( case S of
		      ( <( {'state',_cor735,_cor736,_cor737,_cor738,_cor739,_cor740,_cor741,_cor742,_cor743,_cor744,_cor745,_cor746,_cor747,_cor748,_cor749,_rec52,_cor750,_cor751,_cor752,_cor753,_cor754,_cor755,_cor756,_cor757,_cor758,_cor759,_cor760,_cor761,_cor762,_cor763,_cor764,_cor765,_cor766,_cor767,_cor768,_cor769,_cor770,_cor771,_cor772,_cor773,_cor774,_cor775,_cor776,_cor777,_cor778,_cor779,_cor780,_cor781,_cor782}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <Actors> =
				call 'lists':'foldl'
				    (Fun, _rec52, ActorNames)
			    in  let <_cor42> =
				    %% Line 409
				    call 'erlang':'setelement'
					(17, S, Actors)
				in  let <S2> =
					%% Line 409
					apply 'refresh_main_window'/1
					    (_cor42)
				    in  %% Line 410
					apply 'noreply'/1
					    (S2)
			-| ['compiler_generated'] )
		      ( <_cor783> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 411
	  <{'et',{'delete_actors',ActorNames}},S>
	      when call 'erlang':'is_list'
		    (ActorNames) ->
	      let <Fun> =
		  %% Line 412
		  ( fun (_cor45,_cor44) ->
			case <_cor45,_cor44> of
			  <N,Actors>
			      when call 'erlang':'=:='
				    (N,
				     [85|[78|[75|[78|[79|[87|[78]]]]]]]) ->
			      %% Line 413
			      Actors
			  %% Line 414
			  <N,Actors> when 'true' ->
			      %% Line 415
			      call 'lists':'keydelete'
				  (N, 2, Actors)
			end
		    -| [{'id',{0,0,'-handle_info/2-fun-1-'}}] )
	      in  %% Line 417
		  ( case S of
		      ( <( {'state',_cor834,_cor835,_cor836,_cor837,_cor838,_cor839,_cor840,_cor841,_cor842,_cor843,_cor844,_cor845,_cor846,_cor847,_cor848,_rec54,_cor849,_cor850,_cor851,_cor852,_cor853,_cor854,_cor855,_cor856,_cor857,_cor858,_cor859,_cor860,_cor861,_cor862,_cor863,_cor864,_cor865,_cor866,_cor867,_cor868,_cor869,_cor870,_cor871,_cor872,_cor873,_cor874,_cor875,_cor876,_cor877,_cor878,_cor879,_cor880,_cor881}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <Actors> =
				call 'lists':'foldl'
				    (Fun, _rec54, ActorNames)
			    in  let <_cor54> =
				    %% Line 418
				    call 'erlang':'setelement'
					(17, S, Actors)
				in  let <S2> =
					%% Line 418
					apply 'refresh_main_window'/1
					    (_cor54)
				    in  %% Line 419
					apply 'noreply'/1
					    (S2)
			-| ['compiler_generated'] )
		      ( <_cor882> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 420
	  <{'et',{'dict_insert',Key,Val}},S> when 'true' ->
	      let <S2> =
		  %% Line 421
		  apply 'do_dict_insert'/3
		      (Key, Val, S)
	      in  %% Line 422
		  apply 'noreply'/1
		      (S2)
	  %% Line 423
	  <{'et',{'dict_delete',Key}},S> when 'true' ->
	      let <S2> =
		  %% Line 424
		  apply 'do_dict_delete'/2
		      (Key, S)
	      in  %% Line 425
		  apply 'noreply'/1
		      (S2)
	  %% Line 426
	  <{'et','first'},S> when 'true' ->
	      let <S2> =
		  %% Line 427
		  apply 'scroll_first'/1
		      (S)
	      in  %% Line 428
		  apply 'noreply'/1
		      (S2)
	  %% Line 429
	  <{'et','prev'},S> when 'true' ->
	      let <S2> =
		  %% Line 430
		  apply 'scroll_prev'/1
		      (S)
	      in  %% Line 431
		  apply 'noreply'/1
		      (S2)
	  %% Line 432
	  <{'et','next'},S> when 'true' ->
	      let <S2> =
		  %% Line 433
		  apply 'scroll_next'/1
		      (S)
	      in  %% Line 434
		  apply 'noreply'/1
		      (S2)
	  %% Line 435
	  <{'et','last'},S> when 'true' ->
	      let <S2> =
		  %% Line 436
		  apply 'scroll_last'/1
		      (S)
	      in  %% Line 437
		  apply 'noreply'/1
		      (S2)
	  %% Line 438
	  <{'et','refresh'},S> when 'true' ->
	      let <S2> =
		  %% Line 439
		  apply 'revert_main_window'/1
		      (S)
	      in  %% Line 440
		  apply 'noreply'/1
		      (S2)
	  %% Line 441
	  <{'et',{'display_mode',_X_Mode}},S> when 'true' ->
	      %% Line 443
	      apply 'noreply'/1
		  (S)
	  %% Line 444
	  <{'et','close'},S> when 'true' ->
	      %% Line 445
	      ( case S of
		  ( <( {'state',_cor933,_cor934,_cor935,_cor936,_cor937,_cor938,_cor939,_cor940,_cor941,_cor942,_cor943,_cor944,_cor945,_cor946,_cor947,_cor948,_cor949,_cor950,_cor951,_cor952,_cor953,_cor954,_cor955,_rec56,_cor956,_cor957,_cor958,_cor959,_cor960,_cor961,_cor962,_cor963,_cor964,_cor965,_cor966,_cor967,_cor968,_cor969,_cor970,_cor971,_cor972,_cor973,_cor974,_cor975,_cor976,_cor977,_cor978,_cor979,_cor980}
		       -| ['compiler_generated'] )> when 'true' ->
			do  call 'wxFrame':'destroy'
				(_rec56)
			    do  %% Line 446
				apply 'opt_unlink'/1
				    (_cor933)
				%% Line 447
				{'stop','shutdown',S}
		    -| ['compiler_generated'] )
		  ( <_cor981> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 448
	  <{'wx',5009,_cor1031,_cor1032,_cor1033},S> when 'true' ->
	      %% Line 466
	      ( case S of
		  ( <( {'state',_cor1034,_cor1035,_cor1036,_cor1037,_cor1038,_cor1039,_cor1040,_cor1041,_cor1042,_cor1043,_cor1044,_cor1045,_cor1046,_cor1047,_cor1048,_cor1049,_cor1050,_cor1051,_cor1052,_cor1053,_cor1054,_cor1055,_cor1056,_rec58,_cor1057,_cor1058,_cor1059,_cor1060,_cor1061,_cor1062,_cor1063,_cor1064,_cor1065,_cor1066,_cor1067,_cor1068,_cor1069,_cor1070,_cor1071,_cor1072,_cor1073,_cor1074,_cor1075,_cor1076,_cor1077,_cor1078,_cor1079,_cor1080,_cor1081}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Dialog> =
			    call 'wxMessageDialog':'new'
				(_rec58, [86|[101|[114|[116|[105|[99|[97|[108|[32|[115|[99|[114|[111|[108|[108|[58|[10|[9|[85|[115|[101|[32|[109|[111|[117|[115|[101|[32|[119|[104|[101|[101|[108|[32|[97|[110|[100|[32|[117|[112|[47|[100|[111|[119|[110|[32|[97|[114|[114|[111|[119|[115|[32|[116|[111|[32|[115|[99|[114|[111|[108|[108|[32|[108|[105|[116|[116|[108|[101|[46|[10|[9|[85|[115|[101|[32|[112|[97|[103|[101|[32|[117|[112|[47|[100|[111|[119|[110|[32|[97|[110|[100|[32|[104|[111|[109|[101|[47|[101|[110|[100|[32|[98|[117|[116|[116|[111|[110|[115|[32|[116|[111|[32|[115|[99|[114|[111|[108|[108|[32|[109|[111|[114|[101|[46|[10|[10|[68|[105|[115|[112|[108|[97|[121|[32|[100|[101|[116|[97|[105|[108|[115|[32|[111|[102|[32|[97|[110|[32|[101|[118|[101|[110|[116|[58|[10|[9|[76|[101|[102|[116|[32|[109|[111|[117|[115|[101|[32|[99|[108|[105|[99|[107|[32|[111|[110|[32|[116|[104|[101|[32|[101|[118|[101|[110|[116|[32|[108|[97|[98|[101|[108|[32|[111|[114|[32|[116|[104|[101|[32|[97|[114|[114|[111|[119|[46|[10|[10|[72|[105|[103|[104|[108|[105|[103|[104|[116|[32|[97|[99|[116|[111|[114|[32|[40|[116|[111|[103|[103|[108|[101|[41|[58|[10|[9|[76|[101|[102|[116|[32|[109|[111|[117|[115|[101|[32|[99|[108|[105|[99|[107|[32|[111|[110|[32|[116|[104|[101|[32|[97|[99|[116|[111|[114|[32|[110|[97|[109|[101|[32|[116|[97|[103|[46|[10|[9|[84|[104|[101|[32|[97|[99|[116|[111|[114|[32|[110|[97|[109|[101|[32|[119|[105|[108|[108|[32|[98|[101|[32|[101|[110|[99|[108|[111|[115|[101|[100|[32|[105|[110|[32|[115|[113|[117|[97|[114|[101|[32|[98|[114|[97|[99|[107|[101|[116|[115|[32|[91|[93|[46|[10|[10|[69|[120|[99|[108|[117|[100|[101|[32|[97|[99|[116|[111|[114|[32|[40|[116|[111|[103|[103|[108|[101|[41|[58|[10|[9|[82|[105|[103|[104|[116|[32|[109|[111|[117|[115|[101|[32|[99|[108|[105|[99|[107|[32|[111|[110|[32|[116|[104|[101|[32|[97|[99|[116|[111|[114|[32|[110|[97|[109|[101|[32|[116|[97|[103|[46|[10|[9|[84|[104|[101|[32|[97|[99|[116|[111|[114|[32|[110|[97|[109|[101|[32|[119|[105|[108|[108|[32|[98|[101|[32|[101|[110|[99|[108|[111|[115|[101|[100|[32|[105|[110|[32|[114|[111|[117|[110|[100|[32|[98|[114|[97|[99|[107|[101|[116|[115|[32|[40|[41|[46|[10|[10|[77|[111|[118|[101|[32|[97|[99|[116|[111|[114|[58|[10|[9|[76|[101|[102|[116|[32|[109|[111|[117|[115|[101|[32|[98|[117|[116|[116|[111|[110|[32|[100|[114|[97|[103|[32|[97|[110|[100|[32|[100|[114|[111|[112|[32|[111|[110|[32|[97|[99|[116|[111|[114|[32|[110|[97|[109|[101|[32|[116|[97|[103|[46|[10|[10|[68|[105|[115|[112|[108|[97|[121|[32|[97|[108|[108|[32|[40|[114|[101|[115|[101|[116|[32|[115|[101|[116|[116|[105|[110|[103|[115|[32|[102|[111|[114|[32|[104|[105|[100|[100|[101|[110|[32|[97|[110|[100|[47|[111|[114|[32|[104|[105|[103|[104|[108|[105|[103|[104|[116|[101|[100|[32|[97|[99|[116|[111|[114|[115|[41|[58|[10|[9|[80|[114|[101|[115|[115|[32|[116|[104|[101|[32|[39|[97|[39|[32|[98|[117|[116|[116|[111|[110|ine 467
																																																																																																																																																																																																																																																																																																																																																																																																																																															    [{'style',34820}|[{'caption',[72|[101|[108|[112]]]]}]])
			in  do  %% Line 472
				call 'wxMessageDialog':'showModal'
				    (Dialog)
				%% Line 473
				apply 'noreply'/1
				    (S)
		    -| ['compiler_generated'] )
		  ( <_cor1082> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 474
	  <{'wx',Id,_cor1083,_cor1084,{'wxCommand','command_menu_selected',_cor1085,_cor1086,_cor1087}},S = {'state',_cor1088,_cor1089,_cor1090,_cor1091,_cor1092,_cor1093,_cor1094,{_cor1095,Data},_cor1096,_cor1097,_cor1098,_cor1099,_cor1100,_cor1101,_cor1102,_cor1103,_cor1104,_cor1105,_cor1106,_cor1107,_cor1108,_cor1109,_cor1110,_cor1111,_cor1112,_cor1113,_cor1114,_cor1115,_cor1116,_cor1117,_cor1118,_cor1119,_cor1120,_cor1121,_cor1122,_cor1123,_cor1124,_cor1125,_cor1126,_cor1127,_cor1128,_cor1129,_cor1130,_cor1131,_cor1132,_cor1133,_cor1134,_cor1135,_cor1136}> when 'true' ->
	      %% Line 476
	      case apply 'get_value'/3
		       (Id, 3, _cor1129) of
		%% Line 477
		<'close'> when 'true' ->
		    do  %% Line 478
			call 'wxFrame':'destroy'
			    (_cor1111)
			do  %% Line 479
			    apply 'opt_unlink'/1
				(_cor1088)
			    %% Line 480
			    {'stop','shutdown',S}
		%% Line 481
		<'up'> when 'true' ->
		    let <S2> =
			%% Line 482
			apply 'scroll_up'/1
			    (S)
		    in  %% Line 483
			apply 'noreply'/1
			    (S2)
		%% Line 484
		<'down'> when 'true' ->
		    let <S2> =
			%% Line 485
			apply 'scroll_down'/1
			    (S)
		    in  %% Line 486
			apply 'noreply'/1
			    (S2)
		%% Line 487
		<'first'> when 'true' ->
		    let <S2> =
			%% Line 488
			apply 'scroll_first'/1
			    (S)
		    in  %% Line 489
			apply 'noreply'/1
			    (S2)
		%% Line 490
		<'prev'> when 'true' ->
		    let <S2> =
			%% Line 491
			apply 'scroll_prev'/1
			    (S)
		    in  %% Line 492
			apply 'noreply'/1
			    (S2)
		%% Line 493
		<'next'> when 'true' ->
		    let <S2> =
			%% Line 494
			apply 'scroll_next'/1
			    (S)
		    in  %% Line 495
			apply 'noreply'/1
			    (S2)
		%% Line 496
		<'last'> when 'true' ->
		    let <S2> =
			%% Line 497
			apply 'scroll_last'/1
			    (S)
		    in  %% Line 498
			apply 'noreply'/1
			    (S2)
		%% Line 499
		<'refresh'> when 'true' ->
		    let <S2> =
			%% Line 500
			apply 'revert_main_window'/1
			    (S)
		    in  %% Line 501
			apply 'noreply'/1
			    (S2)
		%% Line 502
		<{'display_mode',_X_Mode}> when 'true' ->
		    %% Line 504
		    apply 'noreply'/1
			(S)
		%% Line 505
		<'display_all'> when 'true' ->
		    let <S2> =
			%% Line 506
			apply 'display_all'/1
			    (S)
		    in  %% Line 507
			apply 'noreply'/1
			    (S2)
		%% Line 508
		<'close_all'> when 'true' ->
		    %% Line 509
		    apply 'close_all'/1
			(S)
		%% Line 510
		<'close_all_others'> when 'true' ->
		    %% Line 511
		    apply 'close_all_others'/1
			(S)
		%% Line 512
		<'first_all'> when 'true' ->
		    do  %% Line 513
			call 'et_collector':'multicast'
			    (_cor1090, 'first')
			%% Line 514
			apply 'noreply'/1
			    (S)
		%% Line 515
		<'prev_all'> when 'true' ->
		    do  %% Line 516
			call 'et_collector':'multicast'
			    (_cor1090, 'prev')
			%% Line 517
			apply 'noreply'/1
			    (S)
		%% Line 518
		<'next_all'> when 'true' ->
		    do  %% Line 519
			call 'et_collector':'multicast'
			    (_cor1090, 'next')
			%% Line 520
			apply 'noreply'/1
			    (S)
		%% Line 521
		<'last_all'> when 'true' ->
		    do  %% Line 522
			call 'et_collector':'multicast'
			    (_cor1090, 'last')
			%% Line 523
			apply 'noreply'/1
			    (S)
		%% Line 524
		<'refresh_all'> when 'true' ->
		    do  %% Line 525
			call 'et_collector':'multicast'
			    (_cor1090, 'refresh')
			%% Line 526
			apply 'noreply'/1
			    (S)
		%% Line 527
		<'clear_all'> when 'true' ->
		    do  %% Line 528
			call 'et_collector':'clear_table'
			    (_cor1090)
			do  %% Line 529
			    call 'et_collector':'multicast'
				(_cor1090, 'refresh')
			    %% Line 530
			    apply 'noreply'/1
				(S)
		%% Line 531
		<'load_all'> when 'true' ->
		    let <_cor100> =
			%% Line 535
			case apply 'select_file'/4
				 (_cor1111, [83|[101|[108|[101|[99|[116|[32|[97|[32|[102|[105|[108|[101|[32|[116|[111|[32|[108|[111|[97|[100|[32|[101|[118|[101|[110|[116|[115|[32|[102|[114|[111|[109]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor1134, 5) of
			  %% Line 536
			  <{'ok',NewFile}> when 'true' ->
			      do  %% Line 537
				  call 'et_collector':'start_trace_client'
				      (_cor1090, 'event_file', NewFile)
				  %% Line 538
				  call 'erlang':'setelement'
				      (48, S, NewFile)
			  %% Line 539
			  <'cancel'> when 'true' ->
			      %% Line 540
			      S
			  ( <_cor99> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor99})
			    -| ['compiler_generated'] )
			end
		    in  %% Line 542
			apply 'noreply'/1
			    (_cor100)
		%% Line 543
		<'save_all'> when 'true' ->
		    let <_cor111> =
			%% Line 547
			case apply 'select_file'/4
				 (_cor1111, [83|[101|[108|[101|[99|[116|[32|[97|[32|[102|[105|[108|[101|[32|[116|[111|[32|[115|[97|[118|[101|[32|[101|[118|[101|[110|[116|[115|[32|[116|[111]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor1134, 6) of
			  %% Line 548
			  <{'ok',NewFile}> when 'true' ->
			      do  %% Line 549
				  call 'et_collector':'save_event_file'
				      (_cor1090, NewFile, ['existing'|['write'|['keep']]])
				  %% Line 550
				  call 'erlang':'setelement'
				      (48, S, NewFile)
			  %% Line 551
			  <'cancel'> when 'true' ->
			      %% Line 552
			      S
			  ( <_cor110> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor110})
			    -| ['compiler_generated'] )
			end
		    in  %% Line 554
			apply 'noreply'/1
			    (_cor111)
		%% Line 555
		<'print_setup'> when 'true' ->
		    let <S2> =
			%% Line 556
			apply 'print_setup'/1
			    (S)
		    in  %% Line 557
			apply 'noreply'/1
			    (S2)
		%% Line 558
		<Scope = 'print_one_page'> when 'true' ->
		    let <S2> =
			%% Line 559
			apply 'print'/2
			    (S, Scope)
		    in  %% Line 560
			apply 'noreply'/1
			    (S2)
		%% Line 561
		<Scope = 'print_all_pages'> when 'true' ->
		    let <S2> =
			%% Line 562
			apply 'print'/2
			    (S, Scope)
		    in  %% Line 563
			apply 'noreply'/1
			    (S2)
		%% Line 564
		<{'open_viewer',Scale}> when 'true' ->
		    let <_cor124> =
			%% Line 565
			( letrec
			      'lc$^0'/1 =
				  fun (_cor120) ->
				      case _cor120 of
					<[A|_cor117]> when 'true' ->
					    ( case A of
						( <( {'actor',_rec70,_cor1629,_cor1630,_cor1631}
						     -| ['compiler_generated'] )> when 'true' ->
						      let <_cor123> =
							  apply 'lc$^0'/1
							      (_cor117)
						      in  ( [_rec70|_cor123]
							    -| ['compiler_generated'] )
						  -| ['compiler_generated'] )
						( <_cor1632> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','actor'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor120> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor120})
						-| [{'function_name',{'lc$^0',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lc$^0'/1
				  (_cor1103)
			  -| ['list_comprehension'] )
		    in  do  %% Line 566
			    apply 'open_viewer'/4
				(Scale, _cor1093, _cor124, S)
			    %% Line 567
			    apply 'noreply'/1
				(S)
		%% Line 569
		<_cor1731> when 'true' ->
		    do  %% Line 570
			case apply 'get_value'/3
				 (Id, 3, Data) of
			  %% Line 571
			  <{'data',F = {'filter',_cor1732,_cor1733},Scale}> when 'true' ->
			      let <_cor132> =
				  %% Line 572
				  call 'erlang':'+'
				      (_cor1116, Scale)
			      in  %% Line 572
				  apply 'open_viewer'/4
				      (_cor132, _cor1732, [[85|[78|[75|[78|[79|[87|[78]]]]]]]], S)
			  %% Line 573
			  <{'data',F = {'filter',_cor1785,_cor1786}}> when 'true' ->
			      %% Line 574
			      apply 'open_viewer'/4
				  (_cor1116, _cor1785, [[85|[78|[75|[78|[79|[87|[78]]]]]]]], S)
			  %% Line 575
			  <'false'> when 'true' ->
			      'ok'
			  ( <_cor137> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor137})
			    -| ['compiler_generated'] )
			end
			%% Line 578
			apply 'noreply'/1
			    (S)
	      end
	  %% Line 580
	  <{'wx',_cor1838,_cor1839,_cor1840,{'wxCommand','command_slider_updated',_cor1841,Level,_cor1842}},S> when 'true' ->
	      %% Line 581
	      case <> of
		%% Line 582
		<>
		    when let <_cor139> =
			  call 'erlang':'>='
			      (Level, 0)
		      in  let <_cor140> =
			      %% Line 583
			      call 'erlang':'=<'
				  (Level, 100)
			  in  call 'erlang':'and'
				  (_cor139, _cor140) ->
		    %% Line 584
		    case S of
		      <{'state',_cor1843,_cor1844,_cor1845,_cor1846,_cor1847,_cor1848,_cor1849,_cor1850,_cor1851,_cor1852,_cor1853,_cor1854,_cor1855,_cor1856,_cor1857,_cor1858,_cor1859,_cor1860,_cor1861,_cor1862,_cor1863,_cor1864,_cor1865,_cor1866,_cor1867,_cor1868,_cor1869,_cor1870,_cor1871,_cor1872,_cor1873,_cor1874,_cor1875,_cor1876,_cor1877,_cor1878,_cor1879,_cor1880,_cor1881,_cor1882,_cor1883,_cor1884,_cor1885,_cor1886,_cor1887,_cor1888,_cor1889,_cor1890,_cor1891}> when 'true' ->
			  let <_cor143> =
			      call 'erlang':'setelement'
				  (19, S, Level)
			  in  let <S3> =
				  %% Line 585
				  apply 'revert_main_window'/1
				      (_cor143)
			      in  %% Line 586
				  apply 'noreply'/1
				      (S3)
		      ( <_cor1892> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 588
		<> when 'true' ->
		    %% Line 589
		    apply 'noreply'/1
			(S)
	      end
	  %% Line 591
	  <{'wx',Id,_cor1893,_cor1894,{'wxCommand','command_checkbox_clicked',_cor1895,Int,_cor1896}},S> when 'true' ->
	      %% Line 592
	      ( case S of
		  ( <( {'state',_cor1897,_cor1898,_cor1899,_cor1900,_cor1901,_cor1902,_cor1903,_cor1904,_cor1905,_cor1906,_cor1907,_cor1908,_cor1909,_cor1910,_cor1911,_cor1912,_cor1913,_cor1914,_cor1915,_cor1916,_cor1917,_cor1918,_cor1919,_cor1920,_cor1921,_cor1922,_cor1923,_cor1924,_cor1925,_cor1926,_cor1927,_cor1928,_cor1929,_cor1930,_cor1931,_cor1932,_cor1933,_cor1934,_cor1935,_cor1936,_cor1937,_cor1938,_rec77,_cor1939,_cor1940,_cor1941,_cor1942,_cor1943,_cor1944}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'get_value'/3
				 (Id, 2, _rec77) of
			  %% Line 593
			  <'hide_actions'> when 'true' ->
			      %% Line 594
			      case Int of
				%% Line 595
				<1> when 'true' ->
				    let <_cor150> =
					%% Line 596
					call 'erlang':'setelement'
					    (20, S, 'true')
				    in  let <S3> =
					    %% Line 597
					    apply 'revert_main_window'/1
						(_cor150)
					in  %% Line 598
					    apply 'noreply'/1
						(S3)
				%% Line 599
				<0> when 'true' ->
				    let <_cor155> =
					%% Line 600
					call 'erlang':'setelement'
					    (20, S, 'false')
				    in  let <S3> =
					    %% Line 601
					    apply 'revert_main_window'/1
						(_cor155)
					in  %% Line 602
					    apply 'noreply'/1
						(S3)
				( <_cor158> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor158})
				  -| ['compiler_generated'] )
			      end
			  %% Line 604
			  <'hide_actors'> when 'true' ->
			      %% Line 605
			      case Int of
				%% Line 606
				<1> when 'true' ->
				    let <_cor161> =
					%% Line 607
					call 'erlang':'setelement'
					    (21, S, 'true')
				    in  let <S3> =
					    %% Line 608
					    apply 'revert_main_window'/1
						(_cor161)
					in  %% Line 609
					    apply 'noreply'/1
						(S3)
				%% Line 610
				<0> when 'true' ->
				    let <_cor166> =
					%% Line 611
					call 'erlang':'setelement'
					    (21, S, 'false')
				    in  let <S3> =
					    %% Line 612
					    apply 'revert_main_window'/1
						(_cor166)
					in  %% Line 613
					    apply 'noreply'/1
						(S3)
				( <_cor169> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor169})
				  -| ['compiler_generated'] )
			      end
			  %% Line 615
			  <'false'> when 'true' ->
			      %% Line 616
			      apply 'noreply'/1
				  (S)
			  ( <_cor170> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor170})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor1945> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 618
	  <{'wx',_cor2146,_cor2147,_cor2148,{'wxMouse','left_down',X,Y,_cor2149,_cor2150,_cor2151,_cor2152,_cor2153,_cor2154,_cor2155,_cor2156,_cor2157,_cor2158}},S> when 'true' ->
	      let <_cor179> =
		  %% Line 620
		  case apply 'y_to_n'/2
			   (Y, S) of
		    %% Line 621
		    <'actor'> when 'true' ->
			%% Line 623
			( case S of
			    ( <( {'state',_cor2159,_cor2160,_cor2161,_cor2162,_cor2163,_cor2164,_cor2165,_cor2166,_cor2167,_cor2168,_cor2169,_cor2170,_cor2171,_cor2172,_cor2173,_rec82,_cor2174,_cor2175,_cor2176,_cor2177,_cor2178,_cor2179,_cor2180,_cor2181,_cor2182,_cor2183,_cor2184,_cor2185,_cor2186,_cor2187,_cor2188,_cor2189,_cor2190,_cor2191,_cor2192,_cor2193,_cor2194,_cor2195,_cor2196,_cor2197,_cor2198,_cor2199,_cor2200,_cor2201,_cor2202,_cor2203,_cor2204,_cor2205,_cor2206}
				 -| ['compiler_generated'] )> when 'true' ->
				  case _rec82 of
				    %% Line 624
				    <[]> when 'true' ->
					%% Line 625
					S
				    %% Line 626
				    <Actors> when 'true' ->
					let <N> =
					    %% Line 627
					    apply 'x_to_n'/2
						(X, S)
					in  let <A> =
						%% Line 628
						call 'lists':'nth'
						    (N, Actors)
					    in  %% Line 629
						call 'erlang':'setelement'
						    (10, S, A)
				  end
			      -| ['compiler_generated'] )
			    ( <_cor2207> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','state'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    %% Line 631
		    <{'event',N}> when 'true' ->
			do  %% Line 633
			    apply 'do_open_event'/2
				(S, N)
			    %% Line 634
			    S
		    ( <_cor178> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor178})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 636
		  apply 'noreply'/1
		      (_cor179)
	  %% Line 637
	  <{'wx',_cor2258,_cor2259,_cor2260,{'wxMouse','left_up',_cor2261,_cor2262,_cor2263,_cor2264,_cor2265,_cor2266,_cor2267,_cor2268,_cor2269,_cor2270,_cor2271,_cor2272}},S = {'state',_cor2273,_cor2274,_cor2275,_cor2276,_cor2277,_cor2278,_cor2279,_cor2280,_cor2281,_cor2282,_cor2283,_cor2284,_cor2285,_cor2286,_cor2287,_cor2288,_cor2289,_cor2290,_cor2291,_cor2292,_cor2293,_cor2294,_cor2295,_cor2296,_cor2297,_cor2298,_cor2299,_cor2300,_cor2301,_cor2302,_cor2303,_cor2304,_cor2305,_cor2306,_cor2307,_cor2308,_cor2309,_cor2310,_cor2311,_cor2312,_cor2313,_cor2314,_cor2315,_cor2316,_cor2317,_cor2318,_cor2319,_cor2320,_cor2321}>
	      when call 'erlang':'=:='
		    (_cor2281,
		     'undefined') ->
	      %% Line 638
	      apply 'noreply'/1
		  (S)
	  %% Line 639
	  <{'wx',_cor2322,_cor2323,_cor2324,{'wxMouse','left_up',X,Y,_cor2325,_cor2326,_cor2327,_cor2328,_cor2329,_cor2330,_cor2331,_cor2332,_cor2333,_cor2334}},S> when 'true' ->
	      let <_cor226> =
		  %% Line 641
		  case apply 'y_to_n'/2
			   (Y, S) of
		    %% Line 642
		    <'actor'> when 'true' ->
			%% Line 644
			( case S of
			    ( <( {'state',_cor2335,_cor2336,_cor2337,_cor2338,_cor2339,_cor2340,_cor2341,_cor2342,_cor2343,_cor2344,_cor2345,_cor2346,_cor2347,_cor2348,_cor2349,_rec84,_cor2350,_cor2351,_cor2352,_cor2353,_cor2354,_cor2355,_cor2356,_cor2357,_cor2358,_cor2359,_cor2360,_cor2361,_cor2362,_cor2363,_cor2364,_cor2365,_cor2366,_cor2367,_cor2368,_cor2369,_cor2370,_cor2371,_cor2372,_cor2373,_cor2374,_cor2375,_cor2376,_cor2377,_cor2378,_cor2379,_cor2380,_cor2381,_cor2382}
				 -| ['compiler_generated'] )> when 'true' ->
				  case _rec84 of
				    %% Line 645
				    <[]> when 'true' ->
					%% Line 646
					S
				    %% Line 647
				    <Actors> when 'true' ->
					let <N> =
					    %% Line 648
					    apply 'x_to_n'/2
						(X, S)
					in  let <A> =
						%% Line 649
						call 'lists':'nth'
						    (N, Actors)
					    in  %% Line 651
						case <> of
						  %% Line 652
						  <>
						      when ( try
							      ( case <> of
								  ( <>
									when ( call ( 'erlang'
										   -| ['compiler_generated'] ):( 'is_record'
														 -| ['compiler_generated'] )
										(_cor2343,
										 ( 'actor'
										   -| ['compiler_generated'] ),
										 ( 5
										   -| ['compiler_generated'] ))
									    -| ['compiler_generated'] ) ->
									( case <> of
									    ( <>
										  when ( call ( 'erlang'
											     -| ['compiler_generated'] ):( 'is_record'
															   -| ['compiler_generated'] )
											  (A,
											   ( 'actor'
											     -| ['compiler_generated'] ),
											   ( 5
											     -| ['compiler_generated'] ))
										      -| ['compiler_generated'] ) ->
										  let <_cor205> =
										      ( call 'erlang':'element'
											    (2, A)
											-| ['compiler_generated'] )
										  in  let <_cor204> =
											  ( call 'erlang':'element'
												(2, _cor2343)
											    -| ['compiler_generated'] )
										      in  ( call 'erlang':'=:='
												(_cor205, _cor204)
											    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									    ( <> when 'true' ->
										  'false'
									      -| ['compiler_generated'] )
									  end
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								  ( <> when 'true' ->
									( case <> of
									    ( <>
										  when ( call ( 'erlang'
											     -| ['compiler_generated'] ):( 'is_record'
															   -| ['compiler_generated'] )
											  (A,
											   ( 'actor'
											     -| ['compiler_generated'] ),
											   ( 5
											     -| ['compiler_generated'] ))
										      -| ['compiler_generated'] ) ->
										  'false'
									      -| ['compiler_generated'] )
									    ( <> when 'true' ->
										  'false'
									      -| ['compiler_generated'] )
									  end
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
							  of <Try> ->
							      Try
							  catch <T,R> ->
							      'false'
							  -| ['compiler_generated'] ) ->
						      %% Line 654
						      ( case A of
							  ( <( {'actor',_cor2433,_cor2434,_rec88,_cor2435}
							       -| ['compiler_generated'] )> when 'true' ->
								let <_rec86> =
								    call 'erlang':'not'
									(_rec88)
								in  let <_cor212> =
									call 'erlang':'setelement'
									    (4, A, _rec86)
								    in  let <Actors2> =
									    %% Line 657
									    call 'lists':'keyreplace'
										(_cor2433, 2, Actors, _cor212)
									in  let <_cor217> =
										%% Line 658
										call 'lists':'keymember'
										    ('true', 4, Actors2)
									    in  let <DisplayAll> =
										    %% Line 658
										    call 'erlang':'not'
											(_cor217)
										in  let <_cor220> =
											%% Line 659
											call 'erlang':'setelement'
											    (22, S, DisplayAll)
										    in  let <_cor222> =
											    %% Line 659
											    call 'erlang':'setelement'
												(17, _cor220, Actors2)
											in  %% Line 660
											    apply 'revert_main_window'/1
												(_cor222)
							    -| ['compiler_generated'] )
							  ( <_cor2436> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','actor'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  %% Line 661
						  <> when 'true' ->
						      %% Line 662
						      apply 'move_actor'/4
							  (_cor2343, A, Actors, S)
						end
				  end
			      -| ['compiler_generated'] )
			    ( <_cor2383> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','state'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    %% Line 665
		    <{'event',_X_N}> when 'true' ->
			%% Line 667
			S
		    ( <_cor225> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor225})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 669
		  case _cor226 of
		    <{'state',_cor2496,_cor2497,_cor2498,_cor2499,_cor2500,_cor2501,_cor2502,_cor2503,_cor2504,_cor2505,_cor2506,_cor2507,_cor2508,_cor2509,_cor2510,_cor2511,_cor2512,_cor2513,_cor2514,_cor2515,_cor2516,_cor2517,_cor2518,_cor2519,_cor2520,_cor2521,_cor2522,_cor2523,_cor2524,_cor2525,_cor2526,_cor2527,_cor2528,_cor2529,_cor2530,_cor2531,_cor2532,_cor2533,_cor2534,_cor2535,_cor2536,_cor2537,_cor2538,_cor2539,_cor2540,_cor2541,_cor2542,_cor2543,_cor2544}> when 'true' ->
			let <_cor230> =
			    call 'erlang':'setelement'
				(10, _cor226, 'undefined')
			in  apply 'noreply'/1
				(_cor230)
		    ( <_cor2545> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 670
	  <{'wx',_cor2546,_cor2547,_cor2548,{'wxMouse','right_up',X,Y,_cor2549,_cor2550,_cor2551,_cor2552,_cor2553,_cor2554,_cor2555,_cor2556,_cor2557,_cor2558}},S> when 'true' ->
	      let <_cor251> =
		  %% Line 672
		  case apply 'y_to_n'/2
			   (Y, S) of
		    %% Line 673
		    <'actor'> when 'true' ->
			%% Line 675
			( case S of
			    ( <( {'state',_cor2559,_cor2560,_cor2561,_cor2562,_cor2563,_cor2564,_cor2565,_cor2566,_cor2567,_cor2568,_cor2569,_cor2570,_cor2571,_cor2572,_cor2573,_rec92,_cor2574,_cor2575,_cor2576,_cor2577,_cor2578,_cor2579,_cor2580,_cor2581,_cor2582,_cor2583,_cor2584,_cor2585,_cor2586,_cor2587,_cor2588,_cor2589,_cor2590,_cor2591,_cor2592,_cor2593,_cor2594,_cor2595,_cor2596,_cor2597,_cor2598,_cor2599,_cor2600,_cor2601,_cor2602,_cor2603,_cor2604,_cor2605,_cor2606}
				 -| ['compiler_generated'] )> when 'true' ->
				  case _rec92 of
				    %% Line 676
				    <[]> when 'true' ->
					%% Line 677
					S
				    %% Line 678
				    <Actors> when 'true' ->
					let <N> =
					    %% Line 680
					    apply 'x_to_n'/2
						(X, S)
					in  let <A> =
						%% Line 681
						call 'lists':'nth'
						    (N, Actors)
					    in  %% Line 682
						( case A of
						    ( <( {'actor',_cor2608,_cor2609,_cor2610,_rec95}
							 -| ['compiler_generated'] )> when 'true' ->
							  let <_rec93> =
							      call 'erlang':'not'
								  (_rec95)
							  in  let <_cor240> =
								  call 'erlang':'setelement'
								      (5, A, _rec93)
							      in  let <Actors2> =
								      %% Line 683
								      call 'lists':'keyreplace'
									  (_cor2608, 2, Actors, _cor240)
								  in  let <_cor247> =
									  %% Line 684
									  call 'erlang':'setelement'
									      (17, S, Actors2)
								      in  %% Line 685
									  apply 'revert_main_window'/1
									      (_cor247)
						      -| ['compiler_generated'] )
						    ( <_cor2611> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','actor'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
				  end
			      -| ['compiler_generated'] )
			    ( <_cor2607> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','state'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    %% Line 687
		    <{'event',_X_N}> when 'true' ->
			%% Line 689
			S
		    ( <_cor250> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor250})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 691
		  case _cor251 of
		    <{'state',_cor2671,_cor2672,_cor2673,_cor2674,_cor2675,_cor2676,_cor2677,_cor2678,_cor2679,_cor2680,_cor2681,_cor2682,_cor2683,_cor2684,_cor2685,_cor2686,_cor2687,_cor2688,_cor2689,_cor2690,_cor2691,_cor2692,_cor2693,_cor2694,_cor2695,_cor2696,_cor2697,_cor2698,_cor2699,_cor2700,_cor2701,_cor2702,_cor2703,_cor2704,_cor2705,_cor2706,_cor2707,_cor2708,_cor2709,_cor2710,_cor2711,_cor2712,_cor2713,_cor2714,_cor2715,_cor2716,_cor2717,_cor2718,_cor2719}> when 'true' ->
			let <_cor255> =
			    call 'erlang':'setelement'
				(10, _cor251, 'undefined')
			in  apply 'noreply'/1
				(_cor255)
		    ( <_cor2720> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 692
	  <{'wx',_cor2721,_cor2722,_cor2723,{'wxKey',_cor2724,_cor2725,_cor2726,KeyCode,_cor2727,SD,_cor2728,_cor2729,_cor2730,_cor2731,_cor2732,_cor2733}},S> when 'true' ->
	      %% Line 693
	      case KeyCode of
		%% Line 694
		<67>
		    when call 'erlang':'=:='
			  (SD,
			   'true') ->
		    %% Line 695
		    apply 'close_all'/1
			(S)
		%% Line 696
		<99> when 'true' ->
		    %% Line 697
		    apply 'close_all_others'/1
			(S)
		%% Line 698
		<313> when 'true' ->
		    let <S2> =
			%% Line 699
			apply 'scroll_first'/1
			    (S)
		    in  %% Line 700
			apply 'noreply'/1
			    (S2)
		%% Line 701
		<312> when 'true' ->
		    let <S2> =
			%% Line 702
			apply 'scroll_last'/1
			    (S)
		    in  %% Line 703
			apply 'noreply'/1
			    (S2)
		%% Line 704
		<315> when 'true' ->
		    let <S2> =
			%% Line 705
			apply 'scroll_up'/1
			    (S)
		    in  %% Line 706
			apply 'noreply'/1
			    (S2)
		%% Line 707
		<317> when 'true' ->
		    let <S2> =
			%% Line 708
			apply 'scroll_down'/1
			    (S)
		    in  %% Line 709
			apply 'noreply'/1
			    (S2)
		%% Line 710
		<366> when 'true' ->
		    let <S2> =
			%% Line 711
			apply 'scroll_prev'/1
			    (S)
		    in  %% Line 712
			apply 'noreply'/1
			    (S2)
		%% Line 713
		<367> when 'true' ->
		    let <S2> =
			%% Line 714
			apply 'scroll_next'/1
			    (S)
		    in  %% Line 715
			apply 'noreply'/1
			    (S2)
		%% Line 716
		<70>
		    when call 'erlang':'=:='
			  (SD,
			   'true') ->
		    %% Line 717
		    ( case S of
			( <( {'state',_cor2734,_cor2735,_rec99,_cor2736,_cor2737,_cor2738,_cor2739,_cor2740,_cor2741,_cor2742,_cor2743,_cor2744,_cor2745,_cor2746,_cor2747,_cor2748,_cor2749,_cor2750,_cor2751,_cor2752,_cor2753,_cor2754,_cor2755,_cor2756,_cor2757,_cor2758,_cor2759,_cor2760,_cor2761,_cor2762,_cor2763,_cor2764,_cor2765,_cor2766,_cor2767,_cor2768,_cor2769,_cor2770,_cor2771,_cor2772,_cor2773,_cor2774,_cor2775,_cor2776,_cor2777,_cor2778,_cor2779,_cor2780,_cor2781}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  call 'et_collector':'multicast'
				      (_rec99, 'first')
				  %% Line 718
				  apply 'noreply'/1
				      (S)
			  -| ['compiler_generated'] )
			( <_cor2782> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 719
		<70> when 'true' ->
		    let <S2> =
			%% Line 720
			apply 'scroll_first'/1
			    (S)
		    in  %% Line 721
			apply 'noreply'/1
			    (S2)
		%% Line 722
		<80>
		    when call 'erlang':'=:='
			  (SD,
			   'true') ->
		    %% Line 723
		    ( case S of
			( <( {'state',_cor2783,_cor2784,_rec100,_cor2785,_cor2786,_cor2787,_cor2788,_cor2789,_cor2790,_cor2791,_cor2792,_cor2793,_cor2794,_cor2795,_cor2796,_cor2797,_cor2798,_cor2799,_cor2800,_cor2801,_cor2802,_cor2803,_cor2804,_cor2805,_cor2806,_cor2807,_cor2808,_cor2809,_cor2810,_cor2811,_cor2812,_cor2813,_cor2814,_cor2815,_cor2816,_cor2817,_cor2818,_cor2819,_cor2820,_cor2821,_cor2822,_cor2823,_cor2824,_cor2825,_cor2826,_cor2827,_cor2828,_cor2829,_cor2830}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  call 'et_collector':'multicast'
				      (_rec100, 'prev')
				  %% Line 724
				  apply 'noreply'/1
				      (S)
			  -| ['compiler_generated'] )
			( <_cor2831> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 725
		<80> when 'true' ->
		    let <S2> =
			%% Line 726
			apply 'scroll_prev'/1
			    (S)
		    in  %% Line 727
			apply 'noreply'/1
			    (S2)
		%% Line 728
		<78>
		    when call 'erlang':'=:='
			  (SD,
			   'true') ->
		    %% Line 729
		    ( case S of
			( <( {'state',_cor2832,_cor2833,_rec101,_cor2834,_cor2835,_cor2836,_cor2837,_cor2838,_cor2839,_cor2840,_cor2841,_cor2842,_cor2843,_cor2844,_cor2845,_cor2846,_cor2847,_cor2848,_cor2849,_cor2850,_cor2851,_cor2852,_cor2853,_cor2854,_cor2855,_cor2856,_cor2857,_cor2858,_cor2859,_cor2860,_cor2861,_cor2862,_cor2863,_cor2864,_cor2865,_cor2866,_cor2867,_cor2868,_cor2869,_cor2870,_cor2871,_cor2872,_cor2873,_cor2874,_cor2875,_cor2876,_cor2877,_cor2878,_cor2879}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  call 'et_collector':'multicast'
				      (_rec101, 'next')
				  %% Line 730
				  apply 'noreply'/1
				      (S)
			  -| ['compiler_generated'] )
			( <_cor2880> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 731
		<78> when 'true' ->
		    let <S2> =
			%% Line 732
			apply 'scroll_next'/1
			    (S)
		    in  %% Line 733
			apply 'noreply'/1
			    (S2)
		%% Line 734
		<76>
		    when call 'erlang':'=:='
			  (SD,
			   'true') ->
		    %% Line 735
		    ( case S of
			( <( {'state',_cor2881,_cor2882,_rec102,_cor2883,_cor2884,_cor2885,_cor2886,_cor2887,_cor2888,_cor2889,_cor2890,_cor2891,_cor2892,_cor2893,_cor2894,_cor2895,_cor2896,_cor2897,_cor2898,_cor2899,_cor2900,_cor2901,_cor2902,_cor2903,_cor2904,_cor2905,_cor2906,_cor2907,_cor2908,_cor2909,_cor2910,_cor2911,_cor2912,_cor2913,_cor2914,_cor2915,_cor2916,_cor2917,_cor2918,_cor2919,_cor2920,_cor2921,_cor2922,_cor2923,_cor2924,_cor2925,_cor2926,_cor2927,_cor2928}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  call 'et_collector':'multicast'
				      (_rec102, 'last')
				  %% Line 736
				  apply 'noreply'/1
				      (S)
			  -| ['compiler_generated'] )
			( <_cor2929> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 737
		<76> when 'true' ->
		    let <S2> =
			%% Line 738
			apply 'scroll_last'/1
			    (S)
		    in  %% Line 739
			apply 'noreply'/1
			    (S2)
		%% Line 740
		<82>
		    when call 'erlang':'=:='
			  (SD,
			   'true') ->
		    %% Line 741
		    ( case S of
			( <( {'state',_cor2930,_cor2931,_rec103,_cor2932,_cor2933,_cor2934,_cor2935,_cor2936,_cor2937,_cor2938,_cor2939,_cor2940,_cor2941,_cor2942,_cor2943,_cor2944,_cor2945,_cor2946,_cor2947,_cor2948,_cor2949,_cor2950,_cor2951,_cor2952,_cor2953,_cor2954,_cor2955,_cor2956,_cor2957,_cor2958,_cor2959,_cor2960,_cor2961,_cor2962,_cor2963,_cor2964,_cor2965,_cor2966,_cor2967,_cor2968,_cor2969,_cor2970,_cor2971,_cor2972,_cor2973,_cor2974,_cor2975,_cor2976,_cor2977}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  call 'et_collector':'multicast'
				      (_rec103, 'refresh')
				  %% Line 742
				  apply 'noreply'/1
				      (S)
			  -| ['compiler_generated'] )
			( <_cor2978> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 743
		<82> when 'true' ->
		    let <S2> =
			%% Line 744
			apply 'revert_main_window'/1
			    (S)
		    in  %% Line 745
			apply 'noreply'/1
			    (S2)
		%% Line 746
		<65> when 'true' ->
		    let <S2> =
			%% Line 747
			apply 'display_all'/1
			    (S)
		    in  %% Line 748
			apply 'noreply'/1
			    (S2)
		%% Line 749
		<61> when 'true' ->
		    %% Line 750
		    ( case S of
			( <( {'state',_cor2979,_cor2980,_cor2981,_cor2982,_cor2983,_cor2984,_cor2985,_cor2986,_cor2987,_cor2988,_cor2989,_cor2990,_cor2991,_cor2992,_cor2993,_cor2994,_cor2995,_cor2996,_cor2997,_cor2998,_cor2999,_cor3000,_cor3001,_cor3002,_cor3003,_cor3004,_cor3005,_cor3006,_rec104,_cor3007,_cor3008,_cor3009,_cor3010,_cor3011,_cor3012,_cor3013,_cor3014,_cor3015,_cor3016,_cor3017,_cor3018,_cor3019,_cor3020,_cor3021,_cor3022,_cor3023,_cor3024,_cor3025,_cor3026}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <_cor289> =
				  %% Line 751
				  ( letrec
					'lc$^1'/1 =
					    fun (_cor285) ->
						case _cor285 of
						  <[A|_cor282]> when 'true' ->
						      ( case A of
							  ( <( {'actor',_rec106,_cor3028,_cor3029,_cor3030}
							       -| ['compiler_generated'] )> when 'true' ->
								let <_cor288> =
								    apply 'lc$^1'/1
									(_cor282)
								in  ( [_rec106|_cor288]
								      -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							  ( <_cor3031> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','actor'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  <[]> when 'true' ->
						      []
						  ( <_cor285> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor285})
							  -| [{'function_name',{'lc$^1',1}}] )
						    -| ['compiler_generated'] )
						end
				    in  apply 'lc$^1'/1
					    (_cor2994)
				    -| ['list_comprehension'] )
			      in  do  %% Line 752
				      apply 'open_viewer'/4
					  (_rec104, _cor2984, _cor289, S)
				      %% Line 753
				      apply 'noreply'/1
					  (S)
			  -| ['compiler_generated'] )
			( <_cor3027> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 754
		<Int>
		    when let <_cor293> =
			  call 'erlang':'=:='
			      (KeyCode, 43)
		      in  let <_cor294> =
			      call 'erlang':'=:='
				  (KeyCode, 388)
			  in  call 'erlang':'or'
				  (_cor293, _cor294) ->
		    %% Line 755
		    ( case S of
			( <( {'state',_cor3130,_cor3131,_cor3132,_cor3133,_cor3134,_cor3135,_cor3136,_cor3137,_cor3138,_cor3139,_cor3140,_cor3141,_cor3142,_cor3143,_cor3144,_cor3145,_cor3146,_cor3147,_cor3148,_cor3149,_cor3150,_cor3151,_cor3152,_cor3153,_cor3154,_cor3155,_cor3156,_cor3157,_rec108,_cor3158,_cor3159,_cor3160,_cor3161,_cor3162,_cor3163,_cor3164,_cor3165,_cor3166,_cor3167,_cor3168,_cor3169,_cor3170,_cor3171,_cor3172,_cor3173,_cor3174,_cor3175,_cor3176,_cor3177}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <Scale> =
				  call 'erlang':'+'
				      (_rec108, 1)
			      in  let <_cor306> =
				      %% Line 756
				      ( letrec
					    'lc$^2'/1 =
						fun (_cor302) ->
						    case _cor302 of
						      <[A|_cor299]> when 'true' ->
							  ( case A of
							      ( <( {'actor',_rec110,_cor3179,_cor3180,_cor3181}
								   -| ['compiler_generated'] )> when 'true' ->
								    let <_cor305> =
									apply 'lc$^2'/1
									    (_cor299)
								    in  ( [_rec110|_cor305]
									  -| ['compiler_generated'] )
								-| ['compiler_generated'] )
							      ( <_cor3182> when 'true' ->
								    ( call ( 'erlang'
									     -| ['compiler_generated'] ):( 'error'
													   -| ['compiler_generated'] )
									  (( {'badrecord','actor'}
									     -| ['compiler_generated'] ))
								      -| ['compiler_generated'] )
								-| ['compiler_generated'] )
							    end
							    -| ['compiler_generated'] )
						      <[]> when 'true' ->
							  []
						      ( <_cor302> when 'true' ->
							    ( primop 'match_fail'
								  ({'function_clause',_cor302})
							      -| [{'function_name',{'lc$^2',1}}] )
							-| ['compiler_generated'] )
						    end
					in  apply 'lc$^2'/1
						(_cor3145)
					-| ['list_comprehension'] )
				  in  do  %% Line 757
					  apply 'open_viewer'/4
					      (Scale, _cor3135, _cor306, S)
					  %% Line 758
					  apply 'noreply'/1
					      (S)
			  -| ['compiler_generated'] )
			( <_cor3178> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 759
		<Int>
		    when let <_cor310> =
			  call 'erlang':'=:='
			      (KeyCode, 45)
		      in  let <_cor311> =
			      call 'erlang':'=:='
				  (KeyCode, 390)
			  in  call 'erlang':'or'
				  (_cor310, _cor311) ->
		    %% Line 760
		    ( case S of
			( <( {'state',_cor3281,_cor3282,_cor3283,_cor3284,_cor3285,_cor3286,_cor3287,_cor3288,_cor3289,_cor3290,_cor3291,_cor3292,_cor3293,_cor3294,_cor3295,_cor3296,_cor3297,_cor3298,_cor3299,_cor3300,_cor3301,_cor3302,_cor3303,_cor3304,_cor3305,_cor3306,_cor3307,_cor3308,_rec112,_cor3309,_cor3310,_cor3311,_cor3312,_cor3313,_cor3314,_cor3315,_cor3316,_cor3317,_cor3318,_cor3319,_cor3320,_cor3321,_cor3322,_cor3323,_cor3324,_cor3325,_cor3326,_cor3327,_cor3328}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  case _rec112 of
				    %% Line 761
				    <1> when 'true' ->
					'ok'
				    %% Line 763
				    <Scale> when 'true' ->
					let <_cor322> =
					    %% Line 764
					    ( letrec
						  'lc$^3'/1 =
						      fun (_cor318) ->
							  case _cor318 of
							    <[A|_cor315]> when 'true' ->
								( case A of
								    ( <( {'actor',_rec114,_cor3330,_cor3331,_cor3332}
									 -| ['compiler_generated'] )> when 'true' ->
									  let <_cor321> =
									      apply 'lc$^3'/1
										  (_cor315)
									  in  ( [_rec114|_cor321]
										-| ['compiler_generated'] )
								      -| ['compiler_generated'] )
								    ( <_cor3333> when 'true' ->
									  ( call ( 'erlang'
										   -| ['compiler_generated'] ):( 'error'
														 -| ['compiler_generated'] )
										(( {'badrecord','actor'}
										   -| ['compiler_generated'] ))
									    -| ['compiler_generated'] )
								      -| ['compiler_generated'] )
								  end
								  -| ['compiler_generated'] )
							    <[]> when 'true' ->
								[]
							    ( <_cor318> when 'true' ->
								  ( primop 'match_fail'
									({'function_clause',_cor318})
								    -| [{'function_name',{'lc$^3',1}}] )
							      -| ['compiler_generated'] )
							  end
					      in  apply 'lc$^3'/1
						      (_cor3296)
					      -| ['list_comprehension'] )
					in  let <_cor326> =
						%% Line 765
						call 'erlang':'-'
						    (Scale, 1)
					    in  %% Line 765
						apply 'open_viewer'/4
						    (_cor326, _cor3286, _cor322, S)
				  end
				  %% Line 767
				  apply 'noreply'/1
				      (S)
			  -| ['compiler_generated'] )
			( <_cor3329> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 768
		<48> when 'true' ->
		    %% Line 769
		    ( case S of
			( <( {'state',_cor3432,_cor3433,_cor3434,_cor3435,_cor3436,_cor3437,_rec116,_cor3438,_cor3439,_cor3440,_cor3441,_cor3442,_cor3443,_cor3444,_cor3445,_cor3446,_cor3447,_cor3448,_cor3449,_cor3450,_cor3451,_cor3452,_cor3453,_cor3454,_cor3455,_cor3456,_cor3457,_cor3458,_cor3459,_cor3460,_cor3461,_cor3462,_cor3463,_cor3464,_cor3465,_cor3466,_cor3467,_cor3468,_cor3469,_cor3470,_cor3471,_cor3472,_cor3473,_cor3474,_cor3475,_cor3476,_cor3477,_cor3478,_cor3479}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  case call 'lists':'keysearch'
					   ('all', 2, _rec116) of
				    %% Line 770
				    <{'value',F = {'filter',_cor3481,_cor3482}}> when ( 'true'
											-| ['compiler_generated'] ) ->
					%% Line 771
					apply 'open_viewer'/4
					    (_cor3459, _cor3481, [[85|[78|[75|[78|[79|[87|[78]]]]]]]], S)
				    %% Line 772
				    <'false'> when 'true' ->
					'ok'
				    ( <_cor334> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor334})
				      -| ['compiler_generated'] )
				  end
				  %% Line 775
				  apply 'noreply'/1
				      (S)
			  -| ['compiler_generated'] )
			( <_cor3480> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 776
		<Int>
		    when try
			  let <_cor335> =
			      call 'erlang':'is_integer'
				  (KeyCode)
			  in  let <_cor336> =
				  call 'erlang':'>'
				      (KeyCode, 48)
			      in  let <_cor337> =
				      call 'erlang':'=<'
					  (KeyCode, 57)
				  in  let <_cor338> =
					  call 'erlang':'and'
					      (_cor336, _cor337)
				      in  call 'erlang':'and'
					      (_cor335, _cor338)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    let <_cor342> =
			catch
			    let <_cor341> =
				%% Line 777
				call 'erlang':'-'
				    (Int, 48)
			    in  %% Line 777
				( case S of
				    ( <( {'state',_cor3534,_cor3535,_cor3536,_cor3537,_cor3538,_cor3539,_rec119,_cor3540,_cor3541,_cor3542,_cor3543,_cor3544,_cor3545,_cor3546,_cor3547,_cor3548,_cor3549,_cor3550,_cor3551,_cor3552,_cor3553,_cor3554,_cor3555,_cor3556,_cor3557,_cor3558,_cor3559,_cor3560,_cor3561,_cor3562,_cor3563,_cor3564,_cor3565,_cor3566,_cor3567,_cor3568,_cor3569,_cor3570,_cor3571,_cor3572,_cor3573,_cor3574,_cor3575,_cor3576,_cor3577,_cor3578,_cor3579,_cor3580,_cor3581}
					 -| ['compiler_generated'] )> when 'true' ->
					  call 'lists':'nth'
					      (_cor341, _rec119)
				      -| ['compiler_generated'] )
				    ( <_cor3582> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','state'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
		    in  do  %% Line 777
			    case _cor342 of
			      %% Line 778
			      <F = {'filter',_cor3583,_cor3584}> when ( 'true'
									-| ['compiler_generated'] ) ->
				  %% Line 779
				  ( case S of
				      ( <( {'state',_cor3585,_cor3586,_cor3587,_cor3588,_cor3589,_cor3590,_cor3591,_cor3592,_cor3593,_cor3594,_cor3595,_cor3596,_cor3597,_cor3598,_cor3599,_cor3600,_cor3601,_cor3602,_cor3603,_cor3604,_cor3605,_cor3606,_cor3607,_cor3608,_cor3609,_cor3610,_cor3611,_cor3612,_rec120,_cor3613,_cor3614,_cor3615,_cor3616,_cor3617,_cor3618,_cor3619,_cor3620,_cor3621,_cor3622,_cor3623,_cor3624,_cor3625,_cor3626,_cor3627,_cor3628,_cor3629,_cor3630,_cor3631,_cor3632}
					   -| ['compiler_generated'] )> when 'true' ->
					    apply 'open_viewer'/4
						(_rec120, _cor3583, [[85|[78|[75|[78|[79|[87|[78]]]]]]]], S)
					-| ['compiler_generated'] )
				      ( <_cor3633> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','state'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      %% Line 780
			      <{'EXIT',_cor3636}> when 'true' ->
				  'ok'
			      ( <_cor347> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor347})
				-| ['compiler_generated'] )
			    end
			    %% Line 783
			    apply 'noreply'/1
				(S)
		%% Line 785
		<_cor3637> when 'true' ->
		    %% Line 786
		    apply 'noreply'/1
			(S)
	      end
	  %% Line 788
	  <Wx = {'wx',_cor3638,_cor3639,_cor3640,{'wxScroll','scroll_changed',_cor3641,_cor3642}},S> when 'true' ->
	      do  %% Line 789
		  apply 'get_latest_scroll'/1
		      (Wx)
		  %% Line 790
		  ( case S of
		      ( <( {'state',_cor3643,_cor3644,_cor3645,_cor3646,_cor3647,_cor3648,_cor3649,_cor3650,_cor3651,_cor3652,_cor3653,_cor3654,_cor3655,_cor3656,_cor3657,_cor3658,_cor3659,_cor3660,_cor3661,_cor3662,_cor3663,_cor3664,_cor3665,_cor3666,_cor3667,_cor3668,_cor3669,_cor3670,_cor3671,_cor3672,_cor3673,_cor3674,_cor3675,_cor3676,_cor3677,_cor3678,_cor3679,_cor3680,_cor3681,_rec122,_cor3682,_cor3683,_cor3684,_cor3685,_cor3686,_cor3687,_cor3688,_cor3689,_cor3690}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <Pos> =
				call 'wxScrollBar':'getThumbPosition'
				    (_rec122)
			    in  %% Line 791
				case apply 'calc_y'/1
					 (S) of
				  <{_cor3692,LineTopY,LineBotY}> when 'true' ->
				      let <Range> =
					  %% Line 792
					  call 'erlang':'-'
					      (LineBotY, LineTopY)
				      in  let <_cor356> =
					      %% Line 793
					      call 'erlang':'*'
						  (_cor3656, Pos)
					  in  let <_cor357> =
						  %% Line 793
						  call 'erlang':'/'
						      (_cor356, Range)
					      in  let <N> =
						      %% Line 793
						      call 'erlang':'round'
							  (_cor357)
						  in  let <_cor359> =
							  %% Line 795
							  apply 'event_pos'/1
							      (S)
						      in  let <_cor361> =
							      %% Line 795
							      case call 'erlang':'-'
								       (N, _cor359) of
								%% Line 796
								<D>
								    when call 'erlang':'<'
									  (D,
									   0) ->
								    call 'erlang':'-'
									(D, 1)
								%% Line 797
								<D> when 'true' ->
								    call 'erlang':'+'
									(D, 1)
							      end
							  in  let <S2> =
								  %% Line 799
								  apply 'scroll_changed'/2
								      (S, _cor361)
							      in  %% Line 800
								  apply 'noreply'/1
								      (S2)
				  ( <_cor352> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor352})
				    -| ['compiler_generated'] )
				end
			-| ['compiler_generated'] )
		      ( <_cor3691> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 801
	  <'timeout',S> when 'true' ->
	      %% Line 802
	      apply 'noreply'/1
		  (S)
	  %% Line 803
	  <{'EXIT',Pid,Reason},S> when 'true' ->
	      %% Line 804
	      case <> of
		%% Line 805
		<>
		    when ( try
			    ( case <> of
				( <>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_record'
									       -| ['compiler_generated'] )
					      (S,
					       ( 'state'
						 -| ['compiler_generated'] ),
					       ( 50
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] ) ->
				      let <_cor368> =
					  ( call 'erlang':'element'
						(4, S)
					    -| ['compiler_generated'] )
				      in  ( call 'erlang':'=:='
						(Pid, _cor368)
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    do  %% Line 806
			call 'io':'format'
			    ([99|[111|[108|[108|[101|[99|[116|[111|[114|[32|[100|[105|[101|[100|[58|[32|[126|[112|[10|[10]]]]]]]]]]]]]]]]]]]], [Reason|[]])
			%% Line 807
			( case S of
			    ( <( {'state',_cor3742,_cor3743,_cor3744,_cor3745,_cor3746,_cor3747,_cor3748,_cor3749,_cor3750,_cor3751,_cor3752,_cor3753,_cor3754,_cor3755,_cor3756,_cor3757,_cor3758,_cor3759,_cor3760,_cor3761,_cor3762,_cor3763,_cor3764,_rec124,_cor3765,_cor3766,_cor3767,_cor3768,_cor3769,_cor3770,_cor3771,_cor3772,_cor3773,_cor3774,_cor3775,_cor3776,_cor3777,_cor3778,_cor3779,_cor3780,_cor3781,_cor3782,_cor3783,_cor3784,_cor3785,_cor3786,_cor3787,_cor3788,_cor3789}
				 -| ['compiler_generated'] )> when 'true' ->
				  do  call 'wxFrame':'destroy'
					  (_rec124)
				      %% Line 808
				      {'stop',Reason,S}
			      -| ['compiler_generated'] )
			    ( <_cor3790> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','state'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		%% Line 809
		<>
		    when ( try
			    ( case <> of
				( <>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_record'
									       -| ['compiler_generated'] )
					      (S,
					       ( 'state'
						 -| ['compiler_generated'] ),
					       ( 50
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] ) ->
				      let <_cor376> =
					  ( call 'erlang':'element'
						(2, S)
					    -| ['compiler_generated'] )
				      in  ( call 'erlang':'=:='
						(Pid, _cor376)
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    %% Line 810
		    ( case S of
			( <( {'state',_cor3791,_cor3792,_cor3793,_cor3794,_cor3795,_cor3796,_cor3797,_cor3798,_cor3799,_cor3800,_cor3801,_cor3802,_cor3803,_cor3804,_cor3805,_cor3806,_cor3807,_cor3808,_cor3809,_cor3810,_cor3811,_cor3812,_cor3813,_rec125,_cor3814,_cor3815,_cor3816,_cor3817,_cor3818,_cor3819,_cor3820,_cor3821,_cor3822,_cor3823,_cor3824,_cor3825,_cor3826,_cor3827,_cor3828,_cor3829,_cor3830,_cor3831,_cor3832,_cor3833,_cor3834,_cor3835,_cor3836,_cor3837,_cor3838}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  call 'wxFrame':'destroy'
				      (_rec125)
				  %% Line 811
				  {'stop',Reason,S}
			  -| ['compiler_generated'] )
			( <_cor3839> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 812
		<> when 'true' ->
		    %% Line 813
		    apply 'noreply'/1
			(S)
	      end
	  %% Line 815
	  <{'wx',_cor3840,_cor3841,_cor3842,{'wxClose',_cor3843}},S> when 'true' ->
	      %% Line 816
	      ( case S of
		  ( <( {'state',_rec126,_cor3844,_cor3845,_cor3846,_cor3847,_cor3848,_cor3849,_cor3850,_cor3851,_cor3852,_cor3853,_cor3854,_cor3855,_cor3856,_cor3857,_cor3858,_cor3859,_cor3860,_cor3861,_cor3862,_cor3863,_cor3864,_cor3865,_cor3866,_cor3867,_cor3868,_cor3869,_cor3870,_cor3871,_cor3872,_cor3873,_cor3874,_cor3875,_cor3876,_cor3877,_cor3878,_cor3879,_cor3880,_cor3881,_cor3882,_cor3883,_cor3884,_cor3885,_cor3886,_cor3887,_cor3888,_cor3889,_cor3890,_cor3891}
		       -| ['compiler_generated'] )> when 'true' ->
			do  apply 'opt_unlink'/1
				(_rec126)
			    %% Line 817
			    {'stop','shutdown',S}
		    -| ['compiler_generated'] )
		  ( <_cor3892> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 818
	  <{'wx',_cor3893,_cor3894,_cor3895,{'wxMouse','mousewheel',_cor3896,_cor3897,_cor3898,_cor3899,_cor3900,_cor3901,_cor3902,_cor3903,_cor3904,Rot,_cor3905,_cor3906}},S>
	      when call 'erlang':'>'
		    (Rot,
		     0) ->
	      let <S2> =
		  %% Line 819
		  apply 'scroll_up'/1
		      (S)
	      in  %% Line 820
		  apply 'noreply'/1
		      (S2)
	  %% Line 821
	  <{'wx',_cor3907,_cor3908,_cor3909,{'wxMouse','mousewheel',_cor3910,_cor3911,_cor3912,_cor3913,_cor3914,_cor3915,_cor3916,_cor3917,_cor3918,Rot,_cor3919,_cor3920}},S>
	      when call 'erlang':'<'
		    (Rot,
		     0) ->
	      let <S2> =
		  %% Line 822
		  apply 'scroll_down'/1
		      (S)
	      in  %% Line 823
		  apply 'noreply'/1
		      (S2)
	  %% Line 824
	  <Wx = {'wx',_cor3921,_cor3922,_cor3923,{'wxSize',_cor3924,{OldW,OldH},_cor3925}},S> when 'true' ->
	      %% Line 825
	      case apply 'get_latest_resize'/1
		       (Wx) of
		<{'wx',_cor3926,_cor3927,_cor3928,{'wxSize','size',{W,H},_cor3929}}> when 'true' ->
		    %% Line 826
		    case S of
		      <{'state',_cor3930,_cor3931,_cor3932,_cor3933,_cor3934,_cor3935,_cor3936,_cor3937,_cor3938,_cor3939,_cor3940,_cor3941,_cor3942,_cor3943,_cor3944,_cor3945,_cor3946,_cor3947,_cor3948,_cor3949,_cor3950,_cor3951,_cor3952,_cor3953,_cor3954,_cor3955,_cor3956,_cor3957,_cor3958,_cor3959,_cor3960,_cor3961,_cor3962,_cor3963,_cor3964,_cor3965,_cor3966,_cor3967,_cor3968,_cor3969,_cor3970,_cor3971,_cor3972,_cor3973,_cor3974,_cor3975,_cor3976,_cor3977,_cor3978}> when 'true' ->
			  let <_cor386> =
			      call 'erlang':'setelement'
				  (38, S, H)
			  in  let <_cor387> =
				  call 'erlang':'setelement'
				      (37, _cor386, W)
			      in  let <_cor388> =
				      call 'erlang':'setelement'
					  (29, _cor387, H)
				  in  let <_cor390> =
					  call 'erlang':'setelement'
					      (28, _cor388, W)
				      in  let <EventsPerPage> =
					      %% Line 827
					      apply 'events_per_page'/2
						  (S, H)
					  in  let <Diff> =
						  %% Line 828
						  call 'erlang':'-'
						      (EventsPerPage, _cor3941)
					      in  let <_cor430> =
						      %% Line 830
						      case <> of
							%% Line 831
							<>
							    when try
								  let <_cor396> =
								      call 'erlang':'=:='
									  (OldW, W)
								  in  let <_cor397> =
									  call 'erlang':'=:='
									      (OldH, H)
								      in  ( case <> of
									      ( <>
										    when ( call ( 'erlang'
											       -| ['compiler_generated'] ):( 'is_record'
															     -| ['compiler_generated'] )
											    (_cor390,
											     ( 'state'
											       -| ['compiler_generated'] ),
											     ( 50
											       -| ['compiler_generated'] ))
											-| ['compiler_generated'] ) ->
										    let <_cor402> =
											( call 'erlang':'element'
											      (13, _cor390)
											  -| ['compiler_generated'] )
										    in  let <_cor403> =
											    ( call 'erlang':'=:='
												  (_cor402, EventsPerPage)
											      -| ['compiler_generated'] )
											in  let <_cor405> =
												( call 'erlang':'and'
												      (_cor397, _cor403)
												  -| ['compiler_generated'] )
											    in  ( call 'erlang':'and'
												      (_cor396, _cor405)
												  -| ['compiler_generated'] )
										-| ['compiler_generated'] )
									      ( <> when 'true' ->
										    'false'
										-| ['compiler_generated'] )
									    end
									    -| ['compiler_generated'] )
							      of <Try> ->
								  Try
							      catch <T,R> ->
								  'false' ->
							    _cor390
							%% Line 833
							<>
							    when call 'erlang':'=:='
								  (Diff,
								   0) ->
							    %% Line 834
							    apply 'refresh_main_window'/1
								(_cor390)
							%% Line 835
							<>
							    when call 'erlang':'>'
								  (Diff,
								   0) ->
							    %% Line 836
							    ( case _cor390 of
								( <( {'state',_cor4029,_cor4030,_cor4031,_cor4032,_cor4033,_cor4034,_cor4035,_cor4036,_cor4037,_cor4038,_cor4039,_cor4040,_rec129,_cor4041,_cor4042,_cor4043,_cor4044,_cor4045,_cor4046,_cor4047,_cor4048,_cor4049,_cor4050,_cor4051,_cor4052,_cor4053,_cor4054,_cor4055,_cor4056,_cor4057,_cor4058,_cor4059,_cor4060,_cor4061,_cor4062,_cor4063,_cor4064,_cor4065,_cor4066,_cor4067,_cor4068,_cor4069,_cor4070,_cor4071,_cor4072,_cor4073,_cor4074,_cor4075,_cor4076}
								     -| ['compiler_generated'] )> when 'true' ->
								      let <OldEvents> =
									  apply 'queue_to_list'/1
									      (_rec129)
								      in  %% Line 837
									  case apply 'collect_more_events'/3
										   (_cor390, _cor4039, Diff) of
									    <{S3,NewEvents}> when 'true' ->
										%% Line 838
										case S3 of
										  <{'state',_cor4127,_cor4128,_cor4129,_cor4130,_cor4131,_cor4132,_cor4133,_cor4134,_cor4135,_cor4136,_cor4137,_cor4138,_cor4139,_cor4140,_cor4141,_cor4142,_cor4143,_cor4144,_cor4145,_cor4146,_cor4147,_cor4148,_cor4149,_cor4150,_cor4151,_cor4152,_cor4153,_cor4154,_cor4155,_cor4156,_cor4157,_cor4158,_cor4159,_cor4160,_cor4161,_cor4162,_cor4163,_cor4164,_cor4165,_cor4166,_cor4167,_cor4168,_cor4169,_cor4170,_cor4171,_cor4172,_cor4173,_cor4174,_cor4175}> when 'true' ->
										      let <_cor414> =
											  call 'erlang':'setelement'
											      (13, S3, EventsPerPage)
										      in  let <_cor416> =
											      %% Line 839
											      call 'erlang':'++'
												  (OldEvents, NewEvents)
											  in  let <S5> =
												  %% Line 839
												  apply 'replace_events'/2
												      (_cor414, _cor416)
											      in  %% Line 840
												  apply 'refresh_main_window'/1
												      (S5)
										  ( <_cor4176> when 'true' ->
											( call ( 'erlang'
												 -| ['compiler_generated'] ):( 'error'
															       -| ['compiler_generated'] )
											      (( {'badrecord','state'}
												 -| ['compiler_generated'] ))
											  -| ['compiler_generated'] )
										    -| ['compiler_generated'] )
										end
									    ( <_cor411> when 'true' ->
										  primop 'match_fail'
										      ({'badmatch',_cor411})
									      -| ['compiler_generated'] )
									  end
								  -| ['compiler_generated'] )
								( <_cor4077> when 'true' ->
								      ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'error'
													     -| ['compiler_generated'] )
									    (( {'badrecord','state'}
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
							      end
							      -| ['compiler_generated'] )
							%% Line 841
							<>
							    when call 'erlang':'<'
								  (Diff,
								   0) ->
							    %% Line 842
							    ( case _cor390 of
								( <( {'state',_cor4177,_cor4178,_cor4179,_cor4180,_cor4181,_cor4182,_cor4183,_cor4184,_cor4185,_cor4186,_cor4187,_cor4188,_rec132,_cor4189,_cor4190,_cor4191,_cor4192,_cor4193,_cor4194,_cor4195,_cor4196,_cor4197,_cor4198,_cor4199,_cor4200,_cor4201,_cor4202,_cor4203,_cor4204,_cor4205,_cor4206,_cor4207,_cor4208,_cor4209,_cor4210,_cor4211,_cor4212,_cor4213,_cor4214,_cor4215,_cor4216,_cor4217,_cor4218,_cor4219,_cor4220,_cor4221,_cor4222,_cor4223,_cor4224}
								     -| ['compiler_generated'] )> when 'true' ->
								      let <OldEvents> =
									  apply 'queue_to_list'/1
									      (_rec132)
								      in  let <_cor422> =
									      %% Line 843
									      call 'lists':'reverse'
										  (OldEvents)
									  in  let <_cor421> =
										  %% Line 843
										  call 'erlang':'abs'
										      (Diff)
									      in  let <RevEvents> =
										      %% Line 843
										      apply 'delete_n'/2
											  (_cor422, _cor421)
										  in  let <_cor426> =
											  %% Line 844
											  call 'erlang':'setelement'
											      (13, _cor390, EventsPerPage)
										      in  let <_cor428> =
											      %% Line 845
											      call 'lists':'reverse'
												  (RevEvents)
											  in  let <S4> =
												  %% Line 845
												  apply 'replace_events'/2
												      (_cor426, _cor428)
											      in  %% Line 846
												  apply 'refresh_main_window'/1
												      (S4)
								  -| ['compiler_generated'] )
								( <_cor4225> when 'true' ->
								      ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'error'
													     -| ['compiler_generated'] )
									    (( {'badrecord','state'}
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
							      end
							      -| ['compiler_generated'] )
							( <> when 'true' ->
							      primop 'match_fail'
								  ('if_clause')
							  -| ['compiler_generated'] )
						      end
						  in  %% Line 848
						      apply 'noreply'/1
							  (_cor430)
		      ( <_cor3979> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		( <_cor384> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor384})
		  -| ['compiler_generated'] )
	      end
	  %% Line 849
	  <{'wx',_cor4276,_cor4277,_cor4278,{'wxMouse','enter_window',_cor4279,_cor4280,_cor4281,_cor4282,_cor4283,_cor4284,_cor4285,_cor4286,_cor4287,_cor4288,_cor4289,_cor4290}},S> when 'true' ->
	      %% Line 850
	      ( case S of
		  ( <( {'state',_cor4291,_cor4292,_cor4293,_cor4294,_cor4295,_cor4296,_cor4297,_cor4298,_cor4299,_cor4300,_cor4301,_cor4302,_cor4303,_cor4304,_cor4305,_cor4306,_cor4307,_cor4308,_cor4309,_cor4310,_cor4311,_cor4312,_cor4313,_cor4314,_cor4315,_cor4316,_cor4317,_cor4318,_cor4319,_cor4320,_cor4321,_cor4322,_cor4323,_cor4324,_cor4325,_cor4326,_cor4327,_rec134,_cor4328,_cor4329,_cor4330,_cor4331,_cor4332,_cor4333,_cor4334,_cor4335,_cor4336,_cor4337,_cor4338}
		       -| ['compiler_generated'] )> when 'true' ->
			do  call 'wxWindow':'setFocus'
				(_rec134)
			    %% Line 851
			    apply 'noreply'/1
				(S)
		    -| ['compiler_generated'] )
		  ( <_cor4339> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 852
	  <{'wx',_cor4340,_cor4341,_cor4342,{'wxPaint',_cor4343}},S> when 'true' ->
	      let <S2> =
		  %% Line 853
		  apply 'refresh_main_window'/1
		      (S)
	      in  %% Line 854
		  apply 'noreply'/1
		      (S2)
	  %% Line 855
	  <{'wx',_cor4344,_cor4345,_cor4346,{'wxMouse',T,X,Y,_cor4347,_cor4348,_cor4349,_cor4350,_cor4351,_cor4352,_cor4353,_cor4354,_cor4355,_cor4356}},S> when 'true' ->
	      do  %% Line 856
		  call 'io':'format'
		      ([126|[112|[32|[126|[112|[10]]]]]], [T|[{X,Y}|[]]])
		  %% Line 857
		  apply 'noreply'/1
		      (S)
	  %% Line 858
	  <Info,S> when 'true' ->
	      let <_cor435> =
		  %% Line 860
		  call 'erlang':'self'
		      ()
	      in  %% Line 859
		  case call 'error_logger':'format'
			   ([126|[112|[40|[126|[112|[41|[58|[32|[104|[97|[110|[100|[108|[101|[95|[105|[110|[102|[111|[40|[126|[112|[44|[32|[126|[112|[41|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 860
																								 ['et_wx_viewer'|[_cor435|[Info|[S|[]]]]]) of
		    <'ok'> when 'true' ->
			%% Line 861
			apply 'noreply'/1
			    (S)
		    ( <_cor436> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor436})
		      -| ['compiler_generated'] )
		  end
	end
'terminate'/2 =
    %% Line 869
    fun (_cor1,_cor0) ->
	%% Line 870
	'ignore'
'code_change'/3 =
    %% Line 878
    fun (_cor2,_cor1,_cor0) ->
	%% Line 879
	{'ok',_cor1}
'reply'/2 =
    %% Line 885
    fun (_cor1,_cor0) ->
	let <Timeout> =
	    %% Line 886
	    apply 'timeout'/1
		(_cor0)
	in  %% Line 887
	    {'reply',_cor1,_cor0,Timeout}
'noreply'/1 =
    %% Line 889
    fun (_cor0) ->
	let <Timeout> =
	    %% Line 890
	    apply 'timeout'/1
		(_cor0)
	in  %% Line 891
	    {'noreply',_cor0,Timeout}
'timeout'/1 =
    %% Line 893
    fun (_cor0) ->
	%% Line 894
	'infinity'
'scroll_first'/1 =
    %% Line 896
    fun (_cor0) ->
	%% Line 897
	( case _cor0 of
	    ( <( {'state',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_rec135,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 898
		  case %% Line 899
		       apply 'collect_more_events'/3
			   (_cor0, 'first', _rec135) of
		    <{S2,NewEvents}> when 'true' ->
			let <_cor8> =
			    %% Line 901
			    case NewEvents of
			      %% Line 902
			      <[]> when 'true' ->
				  %% Line 903
				  S2
			      %% Line 904
			      <[FirstE|_cor61]> when 'true' ->
				  %% Line 905
				  case S2 of
				    <{'state',_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110}> when 'true' ->
					call 'erlang':'setelement'
					    (11, S2, FirstE)
				    ( <_cor111> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','state'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
			      ( <_cor7> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor7})
				-| ['compiler_generated'] )
			    end
			in  let <S4> =
				%% Line 907
				apply 'replace_events'/2
				    (_cor8, NewEvents)
			    in  %% Line 908
				apply 'refresh_main_window'/1
				    (S4)
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor4})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor60> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'scroll_last'/1 =
    %% Line 910
    fun (_cor0) ->
	%% Line 911
	case apply 'collect_more_events'/3
		 (_cor0, 'last', -1) of
	  %% Line 912
	  <{_cor9,[]}> when 'true' ->
	      %% Line 913
	      apply 'scroll_first'/1
		  (_cor0)
	  %% Line 914
	  <{S2,NewEvents}> when 'true' ->
	      %% Line 915
	      case NewEvents of
		<[FirstE|_cor10]> when 'true' ->
		    %% Line 916
		    case S2 of
		      <{'state',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59}> when 'true' ->
			  let <_cor5> =
			      call 'erlang':'setelement'
				  (11, S2, FirstE)
			  in  let <S3> =
				  apply 'replace_events'/2
				      (_cor5, NewEvents)
			      in  %% Line 917
				  apply 'refresh_main_window'/1
				      (S3)
		      ( <_cor60> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor7> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor7})
	    -| ['compiler_generated'] )
	end
'scroll_prev'/1 =
    %% Line 920
    fun (_cor0) ->
	%% Line 921
	( case _cor0 of
	    ( <( {'state',_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_rec138,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51}
		 -| ['compiler_generated'] )> when 'true' ->
		  apply 'scroll_up'/2
		      (_cor0, _rec138)
	      -| ['compiler_generated'] )
	    ( <_cor52> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'scroll_next'/1 =
    %% Line 923
    fun (_cor0) ->
	%% Line 924
	( case _cor0 of
	    ( <( {'state',_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_rec139,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51}
		 -| ['compiler_generated'] )> when 'true' ->
		  apply 'scroll_down'/2
		      (_cor0, _rec139)
	      -| ['compiler_generated'] )
	    ( <_cor52> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'scroll_up'/1 =
    %% Line 926
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 927
	    apply 'calc_scroll'/1
		(_cor0)
	in  %% Line 927
	    apply 'scroll_up'/2
		(_cor0, _cor1)
'scroll_up'/2 =
    %% Line 929
    fun (_cor1,_cor0) ->
	%% Line 930
	( case _cor1 of
	    ( <( {'state',_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_rec140,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <N> =
		      apply 'queue_length'/1
			  (_rec140)
		  in  let <Expected2> =
			  %% Line 932
			  apply 'adjust_expected'/3
			      (_cor0, N, _cor47)
		      in  let <OldEvents> =
			      %% Line 933
			      apply 'queue_to_list'/1
				  (_rec140)
			  in  let <_cor12> =
				  %% Line 934
				  call 'erlang':'-'
				      (Expected2)
			      in  %% Line 934
				  case apply 'collect_more_events'/3
					   (_cor1, _cor45, _cor12) of
				    %% Line 935
				    <{_cor232,[]}> when 'true' ->
					_cor1
				    %% Line 937
				    <{S2,NewEvents}> when 'true' ->
					let <NewN> =
					    %% Line 938
					    call 'erlang':'length'
						(NewEvents)
					in  %% Line 939
					    case <> of
					      %% Line 940
					      <>
						  when try
							let <_cor16> =
							    call 'erlang':'+'
								(N, NewN)
							in  call 'erlang':'>'
								(_cor16, _cor47)
						    of <Try> ->
							Try
						    catch <T,R> ->
							'false' ->
						  let <_cor17> =
						      %% Line 941
						      call 'lists':'reverse'
							  (NewEvents)
						  in  let <RevAllEvents> =
							  %% Line 941
							  call 'lists':'reverse'
							      (OldEvents, _cor17)
						      in  let <_cor19> =
							      %% Line 942
							      call 'erlang':'+'
								  (N, NewN)
							  in  let <TooMany> =
								  %% Line 942
								  call 'erlang':'-'
								      (_cor19, _cor47)
							      in  %% Line 943
								  case apply 'delete_n'/2
									   (RevAllEvents, TooMany) of
								    %% Line 944
								    <[]> when 'true' ->
									_cor1
								    %% Line 946
								    <RevEvents = [LastE|_cor233]> when 'true' ->
									let <Events> =
									    %% Line 947
									    call 'lists':'reverse'
										(RevEvents)
									in  %% Line 948
									    case S2 of
									      <{'state',_cor234,_cor235,_cor236,_cor237,_cor238,_cor239,_cor240,_cor241,_cor242,_cor243,_cor244,_cor245,_cor246,_cor247,_cor248,_cor249,_cor250,_cor251,_cor252,_cor253,_cor254,_cor255,_cor256,_cor257,_cor258,_cor259,_cor260,_cor261,_cor262,_cor263,_cor264,_cor265,_cor266,_cor267,_cor268,_cor269,_cor270,_cor271,_cor272,_cor273,_cor274,_cor275,_cor276,_cor277,_cor278,_cor279,_cor280,_cor281,_cor282}> when 'true' ->
										  let <_cor24> =
										      call 'erlang':'setelement'
											  (12, S2, LastE)
										  in  let <S3> =
											  apply 'replace_events'/2
											      (_cor24, Events)
										      in  %% Line 949
											  apply 'refresh_main_window'/1
											      (S3)
									      ( <_cor283> when 'true' ->
										    ( call ( 'erlang'
											     -| ['compiler_generated'] ):( 'error'
															   -| ['compiler_generated'] )
											  (( {'badrecord','state'}
											     -| ['compiler_generated'] ))
										      -| ['compiler_generated'] )
										-| ['compiler_generated'] )
									    end
								    ( <_cor26> when 'true' ->
									  primop 'match_fail'
									      ({'case_clause',_cor26})
								      -| ['compiler_generated'] )
								  end
					      %% Line 951
					      <> when 'true' ->
						  let <Events> =
						      %% Line 952
						      call 'erlang':'++'
							  (NewEvents, OldEvents)
						  in  let <LastE> =
							  %% Line 953
							  call 'lists':'last'
							      (Events)
						      in  %% Line 954
							  case S2 of
							    <{'state',_cor284,_cor285,_cor286,_cor287,_cor288,_cor289,_cor290,_cor291,_cor292,_cor293,_cor294,_cor295,_cor296,_cor297,_cor298,_cor299,_cor300,_cor301,_cor302,_cor303,_cor304,_cor305,_cor306,_cor307,_cor308,_cor309,_cor310,_cor311,_cor312,_cor313,_cor314,_cor315,_cor316,_cor317,_cor318,_cor319,_cor320,_cor321,_cor322,_cor323,_cor324,_cor325,_cor326,_cor327,_cor328,_cor329,_cor330,_cor331,_cor332}> when 'true' ->
								let <_cor31> =
								    call 'erlang':'setelement'
									(12, S2, LastE)
								in  let <S3> =
									apply 'replace_events'/2
									    (_cor31, Events)
								    in  %% Line 955
									apply 'refresh_main_window'/1
									    (S3)
							    ( <_cor333> when 'true' ->
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( 'error'
													 -| ['compiler_generated'] )
									(( {'badrecord','state'}
									   -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							  end
					    end
				    ( <_cor33> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor33})
				      -| ['compiler_generated'] )
				  end
	      -| ['compiler_generated'] )
	    ( <_cor84> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'scroll_down'/1 =
    %% Line 959
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 960
	    apply 'calc_scroll'/1
		(_cor0)
	in  %% Line 960
	    apply 'scroll_down'/2
		(_cor0, _cor1)
'scroll_down'/2 =
    %% Line 962
    fun (_cor1,_cor0) ->
	%% Line 963
	( case _cor1 of
	    ( <( {'state',_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_rec146,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <N> =
		      apply 'queue_length'/1
			  (_rec146)
		  in  let <Expected2> =
			  %% Line 965
			  apply 'adjust_expected'/3
			      (_cor0, N, _cor46)
		      in  let <OldEvents> =
			      %% Line 966
			      apply 'queue_to_list'/1
				  (_rec146)
			  in  %% Line 967
			      case apply 'collect_more_events'/3
				       (_cor1, _cor45, Expected2) of
				%% Line 968
				<{_cor231,[]}> when 'true' ->
				    let <_cor14> =
					%% Line 969
					call 'erlang':'-'
					    (N, _cor46)
				    in  %% Line 969
					case apply 'collect_more_events'/3
						 (_cor1, _cor44, _cor14) of
					  %% Line 970
					  <{_cor281,[]}> when 'true' ->
					      _cor1
					  %% Line 972
					  <{S2,NewEvents}> when 'true' ->
					      let <Events> =
						  %% Line 973
						  call 'erlang':'++'
						      (NewEvents, OldEvents)
					      in  %% Line 974
						  case Events of
						    <[FirstE|_cor282]> when 'true' ->
							%% Line 975
							case S2 of
							  <{'state',_cor283,_cor284,_cor285,_cor286,_cor287,_cor288,_cor289,_cor290,_cor291,_cor292,_cor293,_cor294,_cor295,_cor296,_cor297,_cor298,_cor299,_cor300,_cor301,_cor302,_cor303,_cor304,_cor305,_cor306,_cor307,_cor308,_cor309,_cor310,_cor311,_cor312,_cor313,_cor314,_cor315,_cor316,_cor317,_cor318,_cor319,_cor320,_cor321,_cor322,_cor323,_cor324,_cor325,_cor326,_cor327,_cor328,_cor329,_cor330,_cor331}> when 'true' ->
							      let <_cor21> =
								  call 'erlang':'setelement'
								      (11, S2, FirstE)
							      in  let <S3> =
								      apply 'replace_events'/2
									  (_cor21, Events)
								  in  %% Line 976
								      apply 'refresh_main_window'/1
									  (S3)
							  ( <_cor332> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','state'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
						    ( <_cor18> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor18})
						      -| ['compiler_generated'] )
						  end
					  ( <_cor23> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_cor23})
					    -| ['compiler_generated'] )
					end
				%% Line 978
				<{S2,NewEvents}> when 'true' ->
				    let <AllEvents> =
					%% Line 979
					call 'erlang':'++'
					    (OldEvents, NewEvents)
				    in  let <_cor25> =
					    %% Line 980
					    call 'erlang':'length'
						(NewEvents)
					in  %% Line 980
					    case apply 'delete_n'/2
						     (AllEvents, _cor25) of
					      %% Line 981
					      <[]> when 'true' ->
						  %% Line 982
						  apply 'scroll_first'/1
						      (_cor1)
					      %% Line 983
					      <Events> when 'true' ->
						  %% Line 984
						  case Events of
						    <[FirstE|_cor333]> when 'true' ->
							%% Line 985
							case S2 of
							  <{'state',_cor334,_cor335,_cor336,_cor337,_cor338,_cor339,_cor340,_cor341,_cor342,_cor343,_cor344,_cor345,_cor346,_cor347,_cor348,_cor349,_cor350,_cor351,_cor352,_cor353,_cor354,_cor355,_cor356,_cor357,_cor358,_cor359,_cor360,_cor361,_cor362,_cor363,_cor364,_cor365,_cor366,_cor367,_cor368,_cor369,_cor370,_cor371,_cor372,_cor373,_cor374,_cor375,_cor376,_cor377,_cor378,_cor379,_cor380,_cor381,_cor382}> when 'true' ->
							      let <_cor29> =
								  call 'erlang':'setelement'
								      (11, S2, FirstE)
							      in  let <S3> =
								      apply 'replace_events'/2
									  (_cor29, Events)
								  in  %% Line 986
								      apply 'refresh_main_window'/1
									  (S3)
							  ( <_cor383> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','state'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
						    ( <_cor26> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor26})
						      -| ['compiler_generated'] )
						  end
					    end
				( <_cor32> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor32})
				  -| ['compiler_generated'] )
			      end
	      -| ['compiler_generated'] )
	    ( <_cor83> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'scroll_changed'/2 =
    %% Line 990
    fun (_cor1,_cor0) ->
	%% Line 991
	case <> of
	  %% Line 992
	  <>
	      when call 'erlang':'=:='
		    (_cor0,
		     0) ->
	      %% Line 993
	      apply 'refresh_main_window'/1
		  (_cor1)
	  %% Line 994
	  <>
	      when call 'erlang':'<'
		    (_cor0,
		     0) ->
	      let <OldPos> =
		  %% Line 996
		  apply 'event_pos'/1
		      (_cor1)
	      in  let <_cor3> =
		      %% Line 997
		      call 'erlang':'+'
			  (OldPos, _cor0)
		  in  let <NewPos> =
			  %% Line 997
			  call 'lists':'max'
			      ([_cor3|[0]])
		      in  %% Line 998
			  ( case _cor1 of
			      ( <( {'state',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_rec153,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65}
				   -| ['compiler_generated'] )> when 'true' ->
				    case _rec153 of
				      %% Line 999
				      <{'e',_cor67,Key,_cor68}>
					  when call 'erlang':'=:='
						(_cor67,
						 OldPos) ->
					  %% Line 1000
					  apply 'jump_up'/4
					      (_cor1, Key, OldPos, NewPos)
				      %% Line 1001
				      <'first'> when 'true' ->
					  %% Line 1002
					  apply 'scroll_first'/1
					      (_cor1)
				      %% Line 1003
				      <'last'> when 'true' ->
					  %% Line 1004
					  apply 'scroll_last'/1
					      (_cor1)
				      ( <_cor7> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor7})
					-| ['compiler_generated'] )
				    end
				-| ['compiler_generated'] )
			      ( <_cor66> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','state'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
	  %% Line 1006
	  <> when 'true' ->
	      let <OldPos> =
		  %% Line 1008
		  apply 'event_pos'/1
		      (_cor1)
	      in  let <_cor9> =
		      %% Line 1009
		      call 'erlang':'+'
			  (OldPos, _cor0)
		  in  %% Line 1009
		      ( case _cor1 of
			  ( <( {'state',_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_rec154,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116}
			       -| ['compiler_generated'] )> when 'true' ->
				let <NewPos> =
				    call 'lists':'min'
					([_cor9|[_rec154|[]]])
				in  %% Line 1010
				    case _cor78 of
				      %% Line 1011
				      <{'e',_cor167,Key,_cor168}>
					  when call 'erlang':'=:='
						(_cor167,
						 OldPos) ->
					  %% Line 1012
					  apply 'jump_down'/4
					      (_cor1, Key, OldPos, NewPos)
				      %% Line 1013
				      <Key = 'first'> when 'true' ->
					  %% Line 1014
					  apply 'jump_down'/4
					      (_cor1, Key, 0, NewPos)
				      %% Line 1015
				      <'last'> when 'true' ->
					  %% Line 1016
					  apply 'scroll_last'/1
					      (_cor1)
				      ( <_cor15> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor15})
					-| ['compiler_generated'] )
				    end
			    -| ['compiler_generated'] )
			  ( <_cor117> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','state'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	end
'jump_up'/4 =
    %% Line 1020
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Try> =
	    %% Line 1021
	    call 'erlang':'-'
		(_cor0, _cor1)
	in  %% Line 1022
	    ( case _cor3 of
		( <( {'state',_cor30,_cor31,_cor32,_rec156,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <Fun> =
			  %% Line 1023
			  ( fun (_cor11,_cor10) ->
				case <_cor11,_cor10> of
				  <Event,{'e',P,_cor79,_cor80}>
				      when call 'erlang':'>='
					    (P,
					     _cor0) ->
				      let <Key> =
					  %% Line 1024
					  call 'et_collector':'make_key'
					      (_rec156, Event)
				      in  let <_cor9> =
					      %% Line 1025
					      call 'erlang':'-'
						  (P, 1)
					  in  %% Line 1025
					      {'e',_cor9,Key,Event}
				  %% Line 1026
				  <_cor81,Acc> when 'true' ->
				      %% Line 1027
				      Acc
				end
			    -| [{'id',{0,0,'-jump_up/4-fun-0-'}}] )
		      in  let <PrevE> =
			      %% Line 1029
			      call 'et_collector':'iterate'
				  (_cor32, _cor2, %% Line 1031
						  Try, %% Line 1032
						       Fun, %% Line 1033
							    {'e',_cor1,_cor2,'undefined'})
			  in  %% Line 1034
			      case apply 'collect_more_events'/3
				       (_cor3, PrevE, _cor40) of
				%% Line 1035
				<{_cor180,[]}> when 'true' ->
				    _cor3
				%% Line 1037
				<{S2,Events}> when 'true' ->
				    %% Line 1038
				    case Events of
				      <[FirstE|_cor181]> when 'true' ->
					  %% Line 1039
					  case S2 of
					    <{'state',_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191,_cor192,_cor193,_cor194,_cor195,_cor196,_cor197,_cor198,_cor199,_cor200,_cor201,_cor202,_cor203,_cor204,_cor205,_cor206,_cor207,_cor208,_cor209,_cor210,_cor211,_cor212,_cor213,_cor214,_cor215,_cor216,_cor217,_cor218,_cor219,_cor220,_cor221,_cor222,_cor223,_cor224,_cor225,_cor226,_cor227,_cor228,_cor229,_cor230}> when 'true' ->
						let <_cor23> =
						    call 'erlang':'setelement'
							(11, S2, FirstE)
						in  let <S3> =
							apply 'replace_events'/2
							    (_cor23, Events)
						    in  %% Line 1040
							apply 'refresh_main_window'/1
							    (S3)
					    ( <_cor231> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','state'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
				      ( <_cor20> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor20})
					-| ['compiler_generated'] )
				    end
				( <_cor25> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor25})
				  -| ['compiler_generated'] )
			      end
		  -| ['compiler_generated'] )
		( <_cor78> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'jump_down'/4 =
    %% Line 1043
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Try> =
	    %% Line 1044
	    call 'erlang':'-'
		(_cor0, _cor1)
	in  %% Line 1045
	    ( case _cor3 of
		( <( {'state',_cor30,_cor31,_cor32,_rec160,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <Fun> =
			  %% Line 1046
			  ( fun (_cor11,_cor10) ->
				case <_cor11,_cor10> of
				  <Event,{'e',P,_cor79,_cor80}>
				      when call 'erlang':'<'
					    (P,
					     _cor0) ->
				      let <Key> =
					  %% Line 1047
					  call 'et_collector':'make_key'
					      (_rec160, Event)
				      in  let <_cor9> =
					      %% Line 1048
					      call 'erlang':'+'
						  (P, 1)
					  in  %% Line 1048
					      {'e',_cor9,Key,Event}
				  %% Line 1049
				  <_cor81,Acc> when 'true' ->
				      %% Line 1050
				      Acc
				end
			    -| [{'id',{0,0,'-jump_down/4-fun-0-'}}] )
		      in  let <PrevE> =
			      %% Line 1052
			      call 'et_collector':'iterate'
				  (_cor32, _cor2, %% Line 1054
						  Try, %% Line 1055
						       Fun, %% Line 1056
							    {'e',_cor1,_cor2,'undefined'})
			  in  %% Line 1057
			      case apply 'collect_more_events'/3
				       (_cor3, PrevE, _cor40) of
				%% Line 1058
				<{_cor180,[]}> when 'true' ->
				    _cor3
				%% Line 1060
				<{S2,Events}> when 'true' ->
				    %% Line 1061
				    case Events of
				      <[FirstE|_cor181]> when 'true' ->
					  %% Line 1062
					  case S2 of
					    <{'state',_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191,_cor192,_cor193,_cor194,_cor195,_cor196,_cor197,_cor198,_cor199,_cor200,_cor201,_cor202,_cor203,_cor204,_cor205,_cor206,_cor207,_cor208,_cor209,_cor210,_cor211,_cor212,_cor213,_cor214,_cor215,_cor216,_cor217,_cor218,_cor219,_cor220,_cor221,_cor222,_cor223,_cor224,_cor225,_cor226,_cor227,_cor228,_cor229,_cor230}> when 'true' ->
						let <_cor23> =
						    call 'erlang':'setelement'
							(11, S2, FirstE)
						in  let <S3> =
							apply 'replace_events'/2
							    (_cor23, Events)
						    in  %% Line 1063
							apply 'refresh_main_window'/1
							    (S3)
					    ( <_cor231> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','state'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
				      ( <_cor20> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor20})
					-| ['compiler_generated'] )
				    end
				( <_cor25> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor25})
				  -| ['compiler_generated'] )
			      end
		  -| ['compiler_generated'] )
		( <_cor78> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'adjust_expected'/3 =
    %% Line 1066
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1067
	case <> of
	  %% Line 1068
	  <>
	      when call 'erlang':'<'
		    (_cor1,
		     _cor0) ->
	      %% Line 1069
	      call 'erlang':'-'
		  (_cor0, _cor1)
	  %% Line 1070
	  <>
	      when call 'erlang':'<'
		    (_cor2,
		     _cor0) ->
	      _cor2
	  %% Line 1072
	  <> when 'true' ->
	      _cor0
	end
'calc_scroll'/1 =
    %% Line 1076
    fun (_cor0) ->
	%% Line 1077
	( case _cor0 of
	    ( <( {'state',_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_rec164,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor3> =
		      call 'erlang':'div'
			  (_rec164, 3)
		  in  call 'lists':'max'
			  ([_cor3|[1]])
	      -| ['compiler_generated'] )
	    ( <_cor53> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'revert_main_window'/1 =
    %% Line 1079
    fun (_cor0) ->
	%% Line 1080
	case apply 'revert'/1
		 (_cor0) of
	  <{S2,Events}> when 'true' ->
	      let <S3> =
		  %% Line 1081
		  apply 'replace_events'/2
		      (S2, Events)
	      in  %% Line 1082
		  apply 'refresh_main_window'/1
		      (S3)
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'revert'/1 =
    %% Line 1084
    fun (_cor0) ->
	%% Line 1085
	( case _cor0 of
	    ( <( {'state',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_rec165,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 1087
		  case apply 'collect_more_events'/3
			   (_cor0, _cor20, -1) of
		    %% Line 1088
		    <{_cor109,[]}> when 'true' ->
			%% Line 1089
			apply 'collect_more_events'/3
			    (_cor0, 'first', _rec165)
		    %% Line 1090
		    <{S2,[_X_PrevEvent|[]]}> when 'true' ->
			%% Line 1091
			( case S2 of
			    ( <( {'state',_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_rec167,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150,_cor151,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157}
				 -| ['compiler_generated'] )> when 'true' ->
				  apply 'collect_more_events'/3
				      (_cor0, _rec167, _rec165)
			      -| ['compiler_generated'] )
			    ( <_cor158> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','state'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    ( <_cor9> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor9})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor59> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'delete_n'/2 =
    %% Line 1094
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <List,0> when 'true' ->
	      %% Line 1095
	      List
	  %% Line 1096
	  <[],_cor5> when 'true' ->
	      %% Line 1097
	      []
	  %% Line 1098
	  <[_cor6|Tail],N>
	      when call 'erlang':'>'
		    (N,
		     0) ->
	      let <_cor2> =
		  %% Line 1099
		  call 'erlang':'-'
		      (N, 1)
	      in  %% Line 1099
		  apply 'delete_n'/2
		      (Tail, _cor2)
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'delete_n',2}}] )
	    -| ['compiler_generated'] )
	end
'pick_n'/3 =
    %% Line 1101
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Rest,0,Acc> when 'true' ->
	      let <_cor3> =
		  %% Line 1102
		  call 'lists':'reverse'
		      (Acc)
	      in  %% Line 1102
		  {_cor3,Rest}
	  %% Line 1103
	  <[],_X_N,Acc> when 'true' ->
	      let <_cor4> =
		  %% Line 1104
		  call 'lists':'reverse'
		      (Acc)
	      in  %% Line 1104
		  {_cor4,[]}
	  %% Line 1105
	  <[Head|Tail],N,Acc>
	      when call 'erlang':'>'
		    (N,
		     0) ->
	      let <_cor5> =
		  %% Line 1106
		  call 'erlang':'-'
		      (N, 1)
	      in  %% Line 1106
		  apply 'pick_n'/3
		      (Tail, _cor5, [Head|Acc])
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'pick_n',3}}] )
	    -| ['compiler_generated'] )
	end
'close_all'/1 =
    %% Line 1108
    fun (_cor0) ->
	do  %% Line 1109
	    apply 'close_all_others'/1
		(_cor0)
	    %% Line 1110
	    ( case _cor0 of
		( <( {'state',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_rec168,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53}
		     -| ['compiler_generated'] )> when 'true' ->
		      do  call 'wxFrame':'destroy'
			      (_rec168)
			  do  %% Line 1111
			      apply 'opt_unlink'/1
				  (_cor6)
			      %% Line 1112
			      {'stop','shutdown',_cor0}
		  -| ['compiler_generated'] )
		( <_cor54> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'close_all_others'/1 =
    %% Line 1114
    fun (_cor0) ->
	let <Fun> =
	    %% Line 1116
	    ( fun (_cor2) ->
		  case _cor2 of
		    <{{'subscriber',Pid},_cor9}> when 'true' ->
			%% Line 1117
			case <> of
			  %% Line 1118
			  <>
			      when try
				    let <_cor1> =
					call 'erlang':'self'
					    ()
				    in  call 'erlang':'=:='
					    (Pid, _cor1)
				of <Try> ->
				    Try
				catch <T,R> ->
				    'false' ->
			      %% Line 1119
			      'ignore'
			  %% Line 1120
			  <> when 'true' ->
			      do  %% Line 1121
				  call 'erlang':'unlink'
				      (Pid)
				  %% Line 1122
				  call 'erlang':'!'
				      (Pid, {'et','close'})
			end
		    ( <_cor3> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor3})
			    -| [{'function_name',{'-close_all_others/1-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-close_all_others/1-fun-0-'}}] )
	in  %% Line 1125
	    ( case _cor0 of
		( <( {'state',_cor10,_cor11,_rec170,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <All> =
			  call 'et_collector':'dict_match'
			      (_rec170, %% Line 1126
					{{'subscriber','_'},'_'})
		      in  do  %% Line 1127
			      call 'lists':'foreach'
				  (Fun, All)
			      %% Line 1128
			      apply 'noreply'/1
				  (_cor0)
		  -| ['compiler_generated'] )
		( <_cor58> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'opt_unlink'/1 =
    %% Line 1130
    fun (_cor0) ->
	%% Line 1131
	case <> of
	  %% Line 1132
	  <>
	      when call 'erlang':'=:='
		    (_cor0,
		     'undefined') ->
	      %% Line 1133
	      'ignore'
	  %% Line 1134
	  <> when 'true' ->
	      %% Line 1135
	      call 'erlang':'unlink'
		  (_cor0)
	end
'open_viewer'/4 =
    %% Line 1142
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor14> =
	    %% Line 1143
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor8) ->
			  case _cor8 of
			    <[%% Line 1144
			      F|_cor5]> when 'true' ->
				( case F of
				    ( <( {'filter',_rec172,_cor45}
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_cor13> =
					      %% Line 1144
					      apply 'lc$^0'/1
						  (_cor5)
					  in  ( [{'dict_insert',{'filter',_rec172},_cor45}|_cor13]
						-| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    ( <_cor46> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','filter'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor8> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor8})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  %% Line 1144
		  ( case _cor0 of
		      ( <( {'state',_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_rec171,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96}
			   -| ['compiler_generated'] )> when 'true' ->
			    apply 'lc$^0'/1
				(_rec171)
			-| ['compiler_generated'] )
		      ( <_cor97> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['list_comprehension'] )
	in  %% Line 1146
	    ( case _cor0 of
		( <( {'state',_rec174,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <Options> =
			  [{'parent_pid',_rec174}|%% Line 1147
						  [{'title',_cor119}|%% Line 1148
								     [{'collector_pid',_cor99}|%% Line 1149
											       [{'detail_level',_cor114}|%% Line 1150
															 [{'active_filter',_cor2}|%% Line 1151
																		  [{'event_order',_cor100}|%% Line 1152
																					   [{'first_event',_cor106}|%% Line 1153
																								    [{'max_actors',_cor111}|%% Line 1154
																											    [{'hide_actions',_cor115}|%% Line 1155
																														      [{'hide_actors',_cor116}|%% Line 1156
																																	       [{'actors',_cor1}|%% Line 1157
																																				 [{'scale',_cor3}|%% Line 1158
																																						  [{'width',_cor123}|%% Line 1159
																																								     [{'height',_cor124}|_cor14]]]]]]]]]]]]]]
		      in  %% Line 1160
			  case apply 'start_link'/1
				   (Options) of
			    %% Line 1161
			    <{'ok',_X_ViewerPid}> when 'true' ->
				%% Line 1163
				'ok'
			    %% Line 1164
			    <{'error',Reason}> when 'true' ->
				let <_cor637> =
				    %% Line 1165
				    call 'error_logger':'format'
					([126|[112|[58|[32|[70|[97|[105|[108|[101|[100|[32|[116|[111|[32|[115|[116|[97|[114|[116|[32|[97|[32|[110|[101|[119|[32|[119|[105|[110|[100|[111|[119|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 1166
																																 ['et_wx_viewer'|[Reason|[]]])
				in  %% Line 1165
				    case _cor637 of
				      <'ok'> when 'true' ->
					  ( _cor637
					    -| ['compiler_generated'] )
				      ( <_cor39> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor39})
					-| ['compiler_generated'] )
				    end
			    ( <_cor40> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor40})
			      -| ['compiler_generated'] )
			  end
		  -| ['compiler_generated'] )
		( <_cor146> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'create_main_window'/1 =
    %% Line 1173
    fun (_cor0) ->
	%% Line 1174
	( case _cor0 of
	    ( <( {'state',_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_rec185,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150,_cor151,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162}
		 -| ['compiler_generated'] )> when 'true' ->
		  case apply 'select_fonts'/1
			   (_rec185) of
		    <{NormalFont,BoldFont}> when 'true' ->
			let <Name> =
			    %% Line 1175
			    apply 'name_to_string'/1
				(_cor120)
			in  let <_cor10> =
				%% Line 1176
				case _cor137 of
				  %% Line 1177
				  <'undefined'> when 'true' ->
				      [101|[116|[95|[119|[120|[95|[118|[105|[101|[119|[101|[114]]]]]]]]]]]]
				  %% Line 1178
				  <Explicit> when 'true' ->
				      apply 'name_to_string'/1
					  (Explicit)
				end
			    in  let <_cor20> =
				    %% Line 1180
				    call 'wx':'null'
					()
				in  let <_cor16> =
					%% Line 1182
					call 'erlang':'++'
					    (Name, [41])
				    in  let <_cor17> =
					    %% Line 1182
					    call 'erlang':'++'
						([32|[40|[102|[105|[108|[116|[101|[114|[58|[32]]]]]]]]]], _cor16)
					in  let <_cor18> =
						%% Line 1182
						call 'erlang':'++'
						    (_cor10, _cor17)
					    in  let <Frame> =
						    %% Line 1180
						    call 'wxFrame':'new'
							(_cor20, -1, _cor18, %% Line 1183
									     [{'size',{_cor141,_cor142}}|[]])
						in  let <StatusBar> =
							%% Line 1184
							call 'wxFrame':'createStatusBar'
							    (Frame)
						    in  let <Panel> =
							    %% Line 1186
							    call 'wxPanel':'new'
								(Frame, [])
							in  let <Bar> =
								%% Line 1187
								call 'wxMenuBar':'new'
								    ()
							    in  do  %% Line 1188
								    call 'wxFrame':'setMenuBar'
									(Frame, Bar)
								    let <MainSizer> =
									%% Line 1189
									call 'wxBoxSizer':'new'
									    (8)
								    in  let <_cor26> =
									    %% Line 1191
									    apply 'create_file_menu'/1
										(Bar)
									in  let <_cor27> =
										%% Line 1192
										apply 'create_viewer_menu'/1
										    (Bar)
									    in  let <_cor28> =
										    %% Line 1193
										    apply 'create_collector_menu'/1
											(Bar)
										in  let <MenuData> =
											%% Line 1191
											call 'lists':'flatten'
											    ([_cor26|%% Line 1192
												     [_cor27|%% Line 1193
													     [_cor28|[]]]])
										    in  let <FilterMenu> =
											    %% Line 1194
											    call 'wxMenu':'new'
												([])
											in  let <_rec190> = {%% Line 1195
												 FilterMenu,%% Line 1195
													    []}
											    in  let <_cor38> =
												    %% Line 1195
												    call 'erlang':'setelement'
													(9, _cor0, _rec190)
												in  let <S2> =
													%% Line 1195
													apply 'create_filter_menu'/3
													    (_cor38, _cor120, _cor121)
												    in  do  %% Line 1198
													    call 'wxMenuBar':'append'
														(Bar, FilterMenu, [70|[105|[108|[116|[101|[114|[115|[32|[97|[110|[100|[32|[115|[99|[97|[108|[105|[110|[103]]]]]]]]]]]]]]]]]]])
													    do  %% Line 1199
														apply 'create_help_menu'/1
														    (Bar)
														let <OptSizer> =
														    %% Line 1201
														    call 'wxBoxSizer':'new'
															(4)
														in  let <CheckSizer> =
															%% Line 1202
															call 'wxBoxSizer':'new'
															    (8)
														    in  let <HideActions> =
															    %% Line 1203
															    call 'wxCheckBox':'new'
																(Panel, -1, [72|[105|[100|[101|[32|[70|[114|[111|[109|[61|[84|[111]]]]]]]]]]]])
															in  do  %% Line 1204
																call 'wxCheckBox':'setValue'
																    (HideActions, _cor133)
																let <HideActors> =
																    %% Line 1205
																    call 'wxCheckBox':'new'
																	(Panel, -1, [72|[105|[100|[101|[32|[40|[101|[120|[99|[108|[117|[100|[101|[100|[32|[97|[99|[116|[111|[114|[115|[41]]]]]]]]]]]]]]]]]]]]]])
																in  do  %% Line 1206
																	call 'wxCheckBox':'setValue'
																	    (HideActors, _cor134)
																	let <_cor50> =
																	    %% Line 1207
																	    call 'wxCheckBox':'getId'
																		(HideActions)
																	in  let <_cor51> =
																		%% Line 1208
																		call 'wxCheckBox':'getId'
																		    (HideActors)
																	    in  let <CheckBoxData> =
																		    %% Line 1207
																		    [{_cor50,'hide_actions'}|%% Line 1208
																					     [{_cor51,'hide_actors'}|[]]]
																		in  do  %% Line 1209
																			call 'wxPanel':'connect'
																			    (Panel, 'command_checkbox_clicked')
																			do  %% Line 1210
																			    call 'wxSizer':'add'
																				(CheckSizer, HideActions)
																			    do  %% Line 1211
																				call 'wxSizer':'add'
																				    (CheckSizer, HideActors)
																				do  %% Line 1212
																				    call 'wxSizer':'add'
																					(OptSizer, CheckSizer, [{'border',10}|[{'flag',240}]])
																				    let <DetailLevelBox> =
																					%% Line 1213
																					call 'wxStaticBoxSizer':'new'
																					    (4, %% Line 1214
																						Panel, %% Line 1215
																						       [{'label',[68|[101|[116|[97|[105|[108|[32|[108|[101|[118|[101|[108]]]]]]]]]]]]}])
																				    in  let <_cor57> =
																					    %% Line 1220
																					    call 'wxe_util':'get_const'
																						('wxSL_LABELS')
																					in  let <DetailLevel> =
																						%% Line 1216
																						call 'wxSlider':'new'
																						    (Panel, -1, _cor132, %% Line 1218
																									 0, %% Line 1219
																									    100, %% Line 1220
																										 [{'style',_cor57}|%% Line 1221
																												   [{'size',{200,-1}}]])
																					    in  let <_cor63> =
																						    %% Line 1222
																						    apply 'where_text'/1
																							(_cor0)
																						in  do  %% Line 1222
																							call 'wxStatusBar':'setStatusText'
																							    (StatusBar, _cor63)
																							do  %% Line 1223
																							    call 'wxFrame':'connect'
																								(Frame, 'command_slider_updated')
																							    do  %% Line 1224
																								call 'wxSizer':'add'
																								    (DetailLevelBox, DetailLevel)
																								do  %% Line 1225
																								    call 'wxSizer':'add'
																									(OptSizer, DetailLevelBox, [{'border',10}|[{'flag',240}]])
																								    do  %% Line 1226
																									call 'wxSizer':'addStretchSpacer'
																									    (OptSizer)
																									do  %% Line 1227
																									    call 'wxSizer':'add'
																										(MainSizer, OptSizer)
																									    let <_cor67> =
																										%% Line 1229
																										call 'wxStaticLine':'new'
																										    (Panel, [{'style',4}])
																									    in  do  %% Line 1228
																										    call 'wxSizer':'add'
																											(MainSizer, _cor67, %% Line 1230
																													    [{'flag',8192}])
																										    let <CanvasSizer> =
																											%% Line 1232
																											call 'wxBoxSizer':'new'
																											    (4)
																										    in  let <Canvas> =
																											    %% Line 1233
																											    call 'wxPanel':'new'
																												(Panel, [{'style',65536}])
																											in  %% Line 1234
																											    case call 'wxPanel':'getSize'
																												     (Canvas) of
																											      <{CanvasW,CanvasH}> when 'true' ->
																												  let <ScrollBar> =
																												      %% Line 1235
																												      call 'wxScrollBar':'new'
																													  (Panel, -1, [{'style',8}])
																												  in  do  %% Line 1237
																													  call 'wxSizer':'add'
																													      (CanvasSizer, Canvas, [{'flag',8192}|[{'proportion',1}]])
																													  do  %% Line 1238
																													      call 'wxSizer':'add'
																														  (CanvasSizer, ScrollBar, [{'flag',8192}])
																													      do  %% Line 1239
																														  call 'wxSizer':'add'
																														      (MainSizer, CanvasSizer, [{'flag',8192}|[{'proportion',1}]])
																														  do  %% Line 1240
																														      call 'wxPanel':'connect'
																															  (Canvas, 'left_down')
																														      do  %% Line 1241
																															  call 'wxPanel':'connect'
																															      (Canvas, 'left_up')
																															  do  %% Line 1242
																															      call 'wxPanel':'connect'
																																  (Canvas, 'right_up')
																															      do  %% Line 1243
																																  call 'wxPanel':'connect'
																																      (Canvas, 'size')
																																  let <Self> =
																																      %% Line 1244
																																      call 'erlang':'self'
																																	  ()
																																  in  let <_cor79> =
																																	  %% Line 1246
																																	  ( fun (_cor76,_cor75) ->
																																		let <DC> =
																																		    %% Line 1247
																																		    call 'wxPaintDC':'new'
																																			(Canvas)
																																		in  do  %% Line 1248
																																			call 'wxPaintDC':'destroy'
																																			    (DC)
																																			%% Line 1249
																																			call 'erlang':'!'
																																			    (Self, _cor76)
																																	    -| [{'id',{0,0,'-create_main_window/1-fun-0-'}}] )
																																      in  do  %% Line 1245
																																	      call 'wxPanel':'connect'
																																		  (Canvas, 'paint', [{'callback',_cor79}|%% Line 1250
																																							 []])
																																	      do  %% Line 1251
																																		  call 'wxPanel':'connect'
																																		      (Canvas, 'key_down')
																																		  do  %% Line 1252
																																		      call 'wxPanel':'connect'
																																			  (Canvas, 'enter_window', [{'skip','true'}])
																																		      do  %% Line 1253
																																			  call 'wxFrame':'connect'
																																			      (Frame, 'command_menu_selected')
																																			  do  %% Line 1254
																																			      call 'wxFrame':'connect'
																																				  (Frame, 'close_window')
																																			      do  %% Line 1255
																																				  call 'wxFrame':'connect'
																																				      (ScrollBar, 'scroll_changed')
																																				  do  %% Line 1256
																																				      call 'wxPanel':'setSize'
																																					  (Panel, {_cor141,_cor142})
																																				      do  %% Line 1257
																																					  call 'wxPanel':'setSizer'
																																					      (Panel, MainSizer)
																																					  do  %% Line 1258
																																					      call 'wxFrame':'show'
																																						  (Frame)
																																					      do  %% Line 1259
																																						  call 'wxPanel':'setFocus'
																																						      (Canvas)
																																						  do  %% Line 1260
																																						      call 'wxPanel':'connect'
																																							  (Canvas, 'mousewheel')
																																						      let <_rec199> =
																																							  %% Line 1269
																																							  call 'erlang':'*'
																																							      (15, _rec185)
																																						      in  let <_rec200> =
																																							      %% Line 1270
																																							      call 'wxPen':'new'
																																								  ()
																																							  in  let <_rec201> =
																																								  %% Line 1271
																																								  call 'wxBrush':'new'
																																								      ()
																																							      in  %% Line 1262
																																								  case S2 of
																																								    <{'state',_cor803,_cor804,_cor805,_cor806,_cor807,_cor808,_cor809,_cor810,_cor811,_cor812,_cor813,_cor814,_cor815,_cor816,_cor817,_cor818,_cor819,_cor820,_cor821,_cor822,_cor823,_cor824,_cor825,_cor826,_cor827,_cor828,_cor829,_cor830,_cor831,_cor832,_cor833,_cor834,_cor835,_cor836,_cor837,_cor838,_cor839,_cor840,_cor841,_cor842,_cor843,_cor844,_cor845,_cor846,_cor847,_cor848,_cor849,_cor850,_cor851}> when 'true' ->
																																									let <_cor90> =
																																									    %% Line 1278
																																									    call 'erlang':'setelement'
																																										(47, S2, StatusBar)
																																									in  let <_cor91> =
																																										%% Line 1277
																																										call 'erlang':'setelement'
																																										    (46, _cor90, HideActors)
																																									    in  let <_cor92> =
																																										    %% Line 1276
																																										    call 'erlang':'setelement'
																																											(45, _cor91, HideActions)
																																										in  let <_cor93> =
																																											%% Line 1275
																																											call 'erlang':'setelement'
																																											    (44, _cor92, CheckBoxData)
																																										    in  let <_cor94> =
																																											    %% Line 1274
																																											    call 'erlang':'setelement'
																																												(43, _cor93, MenuData)
																																											in  let <_cor95> =
																																												%% Line 1269
																																												call 'erlang':'setelement'
																																												    (42, _cor94, _rec199)
																																											    in  let <_cor96> =
																																												    %% Line 1268
																																												    call 'erlang':'setelement'
																																													(41, _cor95, ScrollBar)
																																												in  let <_cor97> =
																																													%% Line 1267
																																													call 'erlang':'setelement'
																																													    (40, _cor96, CanvasSizer)
																																												    in  let <_cor98> =
																																													    %% Line 1266
																																													    call 'erlang':'setelement'
																																														(39, _cor97, Canvas)
																																													in  let <_cor99> =
																																														%% Line 1265
																																														call 'erlang':'setelement'
																																														    (38, _cor98, CanvasH)
																																													    in  let <_cor100> =
																																														    %% Line 1265
																																														    call 'erlang':'setelement'
																																															(37, _cor99, CanvasW)
																																														in  let <_cor101> =
																																															%% Line 1272
																																															call 'erlang':'setelement'
																																															    (36, _cor100, 'undefined')
																																														    in  let <_cor102> =
																																															    %% Line 1273
																																															    call 'erlang':'setelement'
																																																(35, _cor101, 'undefined')
																																															in  let <_cor103> =
																																																%% Line 1271
																																																call 'erlang':'setelement'
																																																    (34, _cor102, _rec201)
																																															    in  let <_cor104> =
																																																    %% Line 1270
																																																    call 'erlang':'setelement'
																																																	(33, _cor103, _rec200)
																																																in  let <_cor105> =
																																																	%% Line 1264
																																																	call 'erlang':'setelement'
																																																	    (32, _cor104, BoldFont)
																																																    in  let <_cor106> =
																																																	    %% Line 1264
																																																	    call 'erlang':'setelement'
																																																		(31, _cor105, NormalFont)
																																																	in  let <_cor107> =
																																																		%% Line 1263
																																																		call 'erlang':'setelement'
																																																		    (27, _cor106, Panel)
																																																	    in  let <_cor108> =
																																																		    %% Line 1263
																																																		    call 'erlang':'setelement'
																																																			(25, _cor107, Frame)
																																																		in  let <_cor110> =
																																																			call 'erlang':'setelement'
																																																			    (24, _cor108, _cor10)
																																																		    in  let <DC> =
																																																			    %% Line 1279
																																																			    call 'wxClientDC':'new'
																																																				(Canvas)
																																																			in  let <S4> =
																																																				%% Line 1280
																																																				apply 'draw_all_actors'/2
																																																				    (_cor110, DC)
																																																			    in  do  %% Line 1281
																																																				    call 'wxClientDC':'destroy'
																																																					(DC)
																																																				    %% Line 1282
																																																				    S4
																																								    ( <_cor852> when 'true' ->
																																									  ( call ( 'erlang'
																																										   -| ['compiler_generated'] ):( 'error'
																																														 -| ['compiler_generated'] )
																																										(( {'badrecord','state'}
																																										   -| ['compiler_generated'] ))
																																									    -| ['compiler_generated'] )
																																								      -| ['compiler_generated'] )
																																								  end
																											      ( <_cor70> when 'true' ->
																												    primop 'match_fail'
																													({'badmatch',_cor70})
																												-| ['compiler_generated'] )
																											    end
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor3})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor163> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'where_text'/1 =
    %% Line 1284
    fun (_cor0) ->
	case _cor0 of
	  <S = {'state',_cor3,_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,N,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50}> when 'true' ->
	      let <Pos> =
		  %% Line 1285
		  apply 'event_pos'/1
		      (S)
	      in  %% Line 1286
		  call 'lists':'concat'
		      ([Pos|[[32|[40]]|[N|[[41]]]]])
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'where_text',1}}] )
	    -| ['compiler_generated'] )
	end
'event_pos'/1 =
    %% Line 1288
    fun (_cor0) ->
	case _cor0 of
	  <{'state',_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,E,_cor13,_cor14,Events,Last,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49}> when 'true' ->
	      %% Line 1289
	      case E of
		%% Line 1290
		<{'e',Pos,_cor50,_cor51}> when 'true' ->
		    %% Line 1291
		    Pos
		%% Line 1292
		<'first'> when 'true' ->
		    %% Line 1293
		    case apply 'queue_length'/1
			     (Events) of
		      %% Line 1294
		      <0> when 'true' ->
			  %% Line 1295
			  0
		      %% Line 1296
		      <_cor52> when 'true' ->
			  %% Line 1297
			  1
		    end
		%% Line 1299
		<'last'> when 'true' ->
		    %% Line 1300
		    Last
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'event_pos',1}}] )
	    -| ['compiler_generated'] )
	end
'init_printers'/1 =
    %% Line 1303
    fun (_cor0) ->
	case _cor0 of
	  <S = {'state',_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,'undefined','undefined',_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53}> when 'true' ->
	      let <PD> =
		  %% Line 1304
		  call 'wxPrintData':'new'
		      ()
	      in  let <PSDD> =
		      %% Line 1305
		      call 'wxPageSetupDialogData':'new'
			  (PD)
		  in  do  %% Line 1306
			  call 'wxPrintData':'setPaperId'
			      (PD, 3)
			  do  %% Line 1307
			      call 'wxPageSetupDialogData':'setMarginTopLeft'
				  (PSDD, {15,15})
			      do  %% Line 1308
				  call 'wxPageSetupDialogData':'setMarginBottomRight'
				      (PSDD, {15,15})
				  let <_cor4> =
				      %% Line 1309
				      call 'erlang':'setelement'
					  (36, S, PD)
				  in  %% Line 1309
				      call 'erlang':'setelement'
					  (35, _cor4, PSDD)
	  %% Line 1310
	  <S = {'state',_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150,_cor151,_cor152}> when 'true' ->
	      %% Line 1311
	      S
	  ( <_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6})
		  -| [{'function_name',{'init_printers',1}}] )
	    -| ['compiler_generated'] )
	end
'select_fonts'/1 =
    %% Line 1313
    fun (_cor0) ->
	case _cor0 of
	  <Scale>
	      when call 'erlang':'is_integer'
		    (_cor0) ->
	      let <_cor2> =
		  %% Line 1315
		  case Scale of
		    %% Line 1316
		    <1> when 'true' ->
			5
		    %% Line 1317
		    <2> when 'true' ->
			10
		    %% Line 1318
		    <3> when 'true' ->
			14
		    %% Line 1319
		    <4> when 'true' ->
			20
		    %% Line 1320
		    <S> when 'true' ->
			call 'erlang':'*'
			    (S, 6)
		  end
	      in  let <_cor5> =
		      %% Line 1322
		      call 'wxFont':'new'
			  (_cor2, 76, 90, 90, [])
		  in  let <_cor4> =
			  %% Line 1323
			  call 'wxFont':'new'
			      (_cor2, 76, 90, 92, [])
		      in  %% Line 1322
			  {_cor5,_cor4}
	  ( <_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6})
		  -| [{'function_name',{'select_fonts',1}}] )
	    -| ['compiler_generated'] )
	end
'get_value'/3 =
    %% Line 1325
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Key,Pos,TupleList>
	      when call 'erlang':'is_list'
		    (TupleList) ->
	      %% Line 1326
	      case call 'lists':'keysearch'
		       (Key, 1, TupleList) of
		%% Line 1327
		<{'value',Tuple}>
		    when call 'erlang':'is_tuple'
			  (Tuple) ->
		    %% Line 1328
		    call 'erlang':'element'
			(Pos, Tuple)
		%% Line 1329
		<'false'> when 'true' ->
		    %% Line 1330
		    'false'
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'get_value',3}}] )
	    -| ['compiler_generated'] )
	end
'menuitem'/4 =
    %% Line 1333
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Item> =
	    %% Line 1334
	    call 'wxMenu':'append'
		(_cor3, _cor2, _cor1)
	in  let <_cor5> =
		%% Line 1335
		call 'wxMenuItem':'getId'
		    (Item)
	    in  %% Line 1335
		{_cor5,Item,_cor0}
'create_file_menu'/1 =
    %% Line 1337
    fun (_cor0) ->
	let <Menu> =
	    %% Line 1338
	    call 'wxMenu':'new'
		([])
	in  let <_cor3> =
		%% Line 1340
		apply 'menuitem'/4
		    (Menu, -1, [67|[108|[101|[97|[114|[32|[97|[108|[108|[32|[101|[118|[101|[110|[116|[115|[32|[105|[110|[32|[116|[104|[101|[32|[67|[111|[108|[108|[101|[99|[116|[111|[114]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], 'clear_all')
	    in  let <_cor5> =
		    %% Line 1341
		    apply 'menuitem'/4
			(Menu, -1, [76|[111|[97|[100|[32|[101|[118|[101|[110|[116|[115|[32|[116|[111|[32|[116|[104|[101|[32|[67|[111|[108|[108|[101|[99|[116|[111|[114|[32|[102|[114|[111|[109|[32|[102|[105|[108|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], 'load_all')
		in  let <_cor7> =
			%% Line 1342
			apply 'menuitem'/4
			    (Menu, -1, [83|[97|[118|[101|[32|[97|[108|[108|[32|[101|[118|[101|[110|[116|[115|[32|[105|[110|[32|[116|[104|[101|[32|[67|[111|[108|[108|[101|[99|[116|[111|[114|[32|[116|[111|[32|[102|[105|[108|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], 'save_all')
		    in  let <_cor8> =
			    %% Line 1344
			    apply 'menuitem'/4
				(Menu, 5011, [80|[114|[105|[110|[116|[32|[115|[101|[116|[117|[112]]]]]]]]]]], 'print_setup')
			in  let <_cor10> =
				%% Line 1345
				apply 'menuitem'/4
				    (Menu, -1, [80|[114|[105|[110|[116|[32|[99|[117|[114|[114|[101|[110|[116|[32|[112|[97|[103|[101]]]]]]]]]]]]]]]]]], 'print_one_page')
			    in  let <_cor11> =
				    %% Line 1346
				    apply 'menuitem'/4
					(Menu, 5010, [80|[114|[105|[110|[116|[32|[97|[108|[108|[32|[112|[97|[103|[101|[115]]]]]]]]]]]]]]], 'print_all_pages')
				in  let <_cor13> =
					%% Line 1348
					apply 'menuitem'/4
					    (Menu, -1, [67|[108|[111|[115|[101|[32|[116|[104|[105|[115|[32|[86|[105|[101|[119|[101|[114]]]]]]]]]]]]]]]]], 'close')
				    in  let <_cor15> =
					    %% Line 1349
					    apply 'menuitem'/4
						(Menu, -1, [67|[108|[111|[115|[101|[32|[97|[108|[108|[32|[111|[116|[104|[101|[114|[32|[86|[105|[101|[119|[101|[114|[115|[44|[32|[98|[117|[116|[32|[116|[104|[105|[115|[32|[40|[99|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], 'close_all_others')
					in  let <_cor17> =
						%% Line 1350
						apply 'menuitem'/4
						    (Menu, -1, [67|[108|[111|[115|[101|[32|[97|[108|[108|[32|[86|[105|[101|[119|[101|[114|[115|[32|[97|[110|[100|[32|[116|[104|[101|[32|[67|[111|[108|[108|[101|[99|[116|[111|[114|[41|[32|[32|[32|[40|[67|[41|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], 'close_all')
					    in  let <Data> =
						    %% Line 1339
						    [_cor3|%% Line 1341
							   [_cor5|%% Line 1342
								  [_cor7|%% Line 1344
									 [_cor8|%% Line 1345
										[_cor10|%% Line 1346
											[_cor11|%% Line 1348
												[_cor13|%% Line 1349
													[_cor15|%% Line 1350
														[_cor17|%% Line 1351
															[]]]]]]]]]]
						in  do  %% Line 1352
							call 'wxMenu':'insertSeparator'
							    (Menu, 3)
							do  %% Line 1353
							    call 'wxMenu':'insertSeparator'
								(Menu, 7)
							    do  %% Line 1354
								call 'wxMenuBar':'append'
								    (_cor0, Menu, [70|[105|[108|[101]]]])
								%% Line 1355
								Data
'create_viewer_menu'/1 =
    %% Line 1357
    fun (_cor0) ->
	let <Menu> =
	    %% Line 1358
	    call 'wxMenu':'new'
		([])
	in  let <_cor3> =
		%% Line 1359
		call 'wxMenu':'append'
		    (Menu, -1, [83|[99|[114|[111|[108|[108|[32|[116|[104|[105|[115|[32|[86|[105|[101|[119|[101|[114]]]]]]]]]]]]]]]]]])
	    in  do  %% Line 1359
		    call 'wxMenuItem':'enable'
			(_cor3, %% Line 1360
				[{'enable','false'}])
		    do  %% Line 1361
			call 'wxMenu':'appendSeparator'
			    (Menu)
			let <_cor5> =
			    %% Line 1363
			    apply 'menuitem'/4
				(Menu, -1, [70|[105|[114|[115|[116|[32|[32|[32|[32|[40|[102|[41]]]]]]]]]]]], 'first')
			in  let <_cor7> =
				%% Line 1364
				apply 'menuitem'/4
				    (Menu, -1, [76|[97|[115|[116|[32|[32|[32|[32|[32|[40|[108|[41]]]]]]]]]]]], 'last')
			    in  let <_cor9> =
				    %% Line 1365
				    apply 'menuitem'/4
					(Menu, -1, [80|[114|[101|[118|[32|[32|[32|[32|[32|[40|[112|[41]]]]]]]]]]]], 'prev')
				in  let <_cor11> =
					%% Line 1366
					apply 'menuitem'/4
					    (Menu, -1, [78|[101|[120|[116|[32|[32|[32|[32|[32|[40|[110|[41]]]]]]]]]]]], 'next')
				    in  let <_cor13> =
					    %% Line 1367
					    apply 'menuitem'/4
						(Menu, -1, [82|[101|[102|[114|[101|[115|[104|[32|[32|[40|[114|[41]]]]]]]]]]]], 'refresh')
					in  let <D1> =
						%% Line 1362
						[_cor5|%% Line 1364
						       [_cor7|%% Line 1365
							      [_cor9|%% Line 1366
								     [_cor11|%% Line 1367
									     [_cor13|%% Line 1368
										     []]]]]]
					    in  do  %% Line 1369
						    call 'wxMenu':'appendSeparator'
							(Menu)
						    let <_cor16> =
							%% Line 1371
							apply 'menuitem'/4
							    (Menu, -1, [85|[112|[32|[32|[32|[53|[32|[32|[32|[40|[85|[112|[41]]]]]]]]]]]]], 'up')
						    in  let <_cor18> =
							    %% Line 1372
							    apply 'menuitem'/4
								(Menu, -1, [68|[111|[119|[110|[32|[53|[32|[32|[32|[40|[68|[111|[119|[110|[41]]]]]]]]]]]]]]], 'down')
							in  let <D2> =
								%% Line 1370
								[_cor16|%% Line 1372
									[_cor18|%% Line 1373
										[]]]
							    in  do  %% Line 1374
								    call 'wxMenu':'appendSeparator'
									(Menu)
								    let <_cor21> =
									%% Line 1375
									call 'wxMenu':'append'
									    (Menu, -1, [65|[99|[116|[111|[114|[32|[118|[105|[115|[105|[98|[105|[108|[105|[116|[121|[32|[105|[110|[32|[116|[104|[105|[115|[32|[86|[105|[101|[119|[101|[114]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
								    in  do  %% Line 1375
									    call 'wxMenuItem':'enable'
										(_cor21, %% Line 1376
											 [{'enable','false'}])
									    do  %% Line 1377
										call 'wxMenu':'appendSeparator'
										    (Menu)
										let <_cor23> =
										    %% Line 1378
										    apply 'menuitem'/4
											(Menu, -1, [68|[105|[115|[112|[108|[97|[121|[32|[97|[108|[108|[32|[97|[99|[116|[111|[114|[115|[32|[40|[97|[41]]]]]]]]]]]]]]]]]]]]]], 'display_all')
										in  let <D3> =
											%% Line 1378
											[_cor23|[]]
										    in  do  %% Line 1379
											    call 'wxMenuBar':'append'
												(_cor0, Menu, [86|[105|[101|[119|[101|[114]]]]]])
											    %% Line 1380
											    [D1|[D2|[D3|[]]]]
'create_collector_menu'/1 =
    %% Line 1382
    fun (_cor0) ->
	let <Menu> =
	    %% Line 1383
	    call 'wxMenu':'new'
		([])
	in  let <_cor3> =
		%% Line 1384
		call 'wxMenu':'append'
		    (Menu, -1, [83|[99|[114|[111|[108|[108|[32|[97|[108|[108|[32|[86|[105|[101|[119|[101|[114|[115]]]]]]]]]]]]]]]]]])
	    in  do  %% Line 1384
		    call 'wxMenuItem':'enable'
			(_cor3, %% Line 1385
				[{'enable','false'}])
		    do  %% Line 1386
			call 'wxMenu':'appendSeparator'
			    (Menu)
			let <_cor5> =
			    %% Line 1388
			    apply 'menuitem'/4
				(Menu, -1, [70|[105|[114|[115|[116|[32|[32|[32|[40|[70|[41]]]]]]]]]]], 'first_all')
			in  let <_cor7> =
				%% Line 1389
				apply 'menuitem'/4
				    (Menu, -1, [76|[97|[115|[116|[32|[32|[32|[32|[40|[76|[41]]]]]]]]]]], 'last_all')
			    in  let <_cor9> =
				    %% Line 1390
				    apply 'menuitem'/4
					(Menu, -1, [80|[114|[101|[118|[32|[32|[32|[32|[40|[80|[41]]]]]]]]]]], 'prev_all')
				in  let <_cor11> =
					%% Line 1391
					apply 'menuitem'/4
					    (Menu, -1, [78|[101|[120|[116|[32|[32|[32|[32|[40|[78|[41]]]]]]]]]]], 'next_all')
				    in  let <_cor13> =
					    %% Line 1392
					    apply 'menuitem'/4
						(Menu, -1, [82|[101|[102|[114|[101|[115|[104|[32|[40|[82|[41]]]]]]]]]]], 'refresh_all')
					in  let <Data> =
						%% Line 1387
						[_cor5|%% Line 1389
						       [_cor7|%% Line 1390
							      [_cor9|%% Line 1391
								     [_cor11|%% Line 1392
									     [_cor13|%% Line 1393
										     []]]]]]
					    in  do  %% Line 1394
						    call 'wxMenuBar':'append'
							(_cor0, Menu, [67|[111|[108|[108|[101|[99|[116|[111|[114]]]]]]]]])
						    %% Line 1395
						    Data
'create_filter_menu'/3 =
    %% Line 1397
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S = {'state',_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,{Menu,Data},_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115},ActiveFilterName,Filters> when 'true' ->
	      let <_cor9> =
		  %% Line 1398
		  ( fun (_cor7) ->
			case _cor7 of
			  <{_cor116,I,_cor117}> when 'true' ->
			      %% Line 1399
			      call 'wxMenu':'delete'
				  (Menu, I)
			  %% Line 1400
			  <I> when 'true' ->
			      %% Line 1401
			      try
				  %% Line 1402
				  call 'wxMenu':'delete'
				      (Menu, I)
			      of <_cor3> ->
				  _cor3
			      catch <_cor6,_cor5,_cor4> ->
				  %% Line 1405
				  call 'io':'format'
				      ([67|[111|[117|[108|[100|[32|[110|[111|[116|[32|[100|[101|[108|[101|[116|[101|[32|[105|[116|[101|[109|[58|[32|[126|[112|[44|[32|[98|[101|[99|[97|[117|[115|[101|[32|[126|[112|[46|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [I|[_cor5|[]]])
			end
		    -| [{'id',{0,0,'-create_filter_menu/3-fun-0-'}}] )
	      in  do  %% Line 1398
		      call 'wx':'foreach'
			  (_cor9, %% Line 1408
				  Data)
		      let <Item> =
			  %% Line 1409
			  ( fun (_cor31,_cor30) ->
				case <_cor31,_cor30> of
				  <F = {'filter',_cor120,_cor121},{N,Acc}>
				      when call 'erlang':'=:='
					    (_cor120,
					     'all') ->
				      let <_cor18> =
					  %% Line 1410
					  apply 'pad_string'/2
					      (_cor120, 20)
				      in  let <Label> =
					      %% Line 1410
					      call 'lists':'concat'
						  ([_cor18|[[40|[48|[41]]]]])
					  in  let <_cor22> =
						  %% Line 1411
						  call 'erlang':'+'
						      (N, 1)
					      in  let <_cor21> =
						      %% Line 1411
						      apply 'menuitem'/4
							  (Menu, -1, Label, {'data',F})
						  in  %% Line 1411
						      {_cor22,[_cor21|Acc]}
				  %% Line 1412
				  <F,{N,Acc}> when 'true' ->
				      %% Line 1413
				      ( case F of
					  ( <( {'filter',_rec206,_cor124}
					       -| ['compiler_generated'] )> when 'true' ->
						let <_cor25> =
						    apply 'pad_string'/2
							(_rec206, 20)
						in  let <Label> =
							call 'lists':'concat'
							    ([_cor25|[[40]|[N|[[41]]]]])
						    in  let <_cor29> =
							    %% Line 1414
							    call 'erlang':'+'
								(N, 1)
							in  let <_cor28> =
								%% Line 1414
								apply 'menuitem'/4
								    (Menu, -1, Label, {'data',F})
							    in  %% Line 1414
								{_cor29,[_cor28|Acc]}
					    -| ['compiler_generated'] )
					  ( <_cor125> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','filter'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				  ( <_cor33,_cor32> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor33,_cor32})
					  -| [{'function_name',{'-create_filter_menu/3-fun-1-',2}}] )
				    -| ['compiler_generated'] )
				end
			    -| [{'id',{0,0,'-create_filter_menu/3-fun-1-'}}] )
		      in  let <_cor37> =
			      %% Line 1416
			      call 'wxMenu':'append'
				  (Menu, -1, [83|[97|[109|[101|[32|[70|[105|[108|[116|[101|[114|[32|[78|[101|[119|[32|[83|[99|[97|[108|[101]]]]]]]]]]]]]]]]]]]]])
			  in  let <_cor38> =
				  %% Line 1417
				  call 'wxMenu':'appendSeparator'
				      (Menu)
			      in  let <D1> =
				      %% Line 1416
				      [_cor37|%% Line 1417
					      [_cor38|[]]]
				  in  do  %% Line 1418
					  call 'wxMenuItem':'enable'
					      (_cor37, [{'enable','false'}])
					  %% Line 1419
					  case call 'lists':'keysearch'
						   (ActiveFilterName, 2, Filters) of
					    <{'value',Filter}> when 'true' ->
						let <_cor41> =
						    %% Line 1420
						    apply 'pad_string'/2
							(ActiveFilterName, 20)
						in  let <Same> =
							%% Line 1420
							call 'lists':'concat'
							    ([_cor41|[[40|[61|[41|[32|[115|[97|[109|[101|[32|[32|[32|[32|[115|[99|[97|[108|[101]]]]]]]]]]]]]]]]]]])
						    in  let <_cor43> =
							    %% Line 1421
							    apply 'pad_string'/2
								(ActiveFilterName, 20)
							in  let <Larger> =
								%% Line 1421
								call 'lists':'concat'
								    ([_cor43|[[40|[43|[41|[32|[98|[105|[103|[103|[101|[114|[32|[32|[115|[99|[97|[108|[101]]]]]]]]]]]]]]]]]]])
							    in  let <_cor45> =
								    %% Line 1422
								    apply 'pad_string'/2
									(ActiveFilterName, 20)
								in  let <Smaller> =
									%% Line 1422
									call 'lists':'concat'
									    ([_cor45|[[40|[45|[41|[32|[115|[109|[97|[108|[108|[101|[114|[32|[115|[99|[97|[108|[101]]]]]]]]]]]]]]]]]]])
								    in  let <_cor48> =
									    %% Line 1424
									    apply 'menuitem'/4
										(Menu, -1, Same, {'data',Filter,0})
									in  let <_cor51> =
										%% Line 1425
										apply 'menuitem'/4
										    (Menu, -1, Smaller, {'data',Filter,-1})
									    in  let <_cor53> =
										    %% Line 1426
										    apply 'menuitem'/4
											(Menu, -1, Larger, {'data',Filter,1})
										in  let <_cor54> =
											%% Line 1427
											call 'wxMenu':'appendSeparator'
											    (Menu)
										    in  let <_cor57> =
											    %% Line 1428
											    call 'wxMenu':'append'
												(Menu, -1, [78|[101|[119|[32|[70|[105|[108|[116|[101|[114|[32|[83|[97|[109|[101|[32|[83|[99|[97|[108|[101]]]]]]]]]]]]]]]]]]]]])
											in  let <_cor58> =
												%% Line 1429
												call 'wxMenu':'appendSeparator'
												    (Menu)
											    in  let <D2> =
												    %% Line 1423
												    [_cor48|%% Line 1425
													    [_cor51|%% Line 1426
														    [_cor53|%% Line 1427
															    [_cor54|%% Line 1428
																    [_cor57|%% Line 1429
																	    [_cor58|%% Line 1430
																		    []]]]]]]
												in  do  %% Line 1431
													call 'wxMenuItem':'enable'
													    (_cor57, [{'enable','false'}])
													%% Line 1432
													case call 'lists':'foldl'
														 (Item, {1,[]}, Filters) of
													  <{_cor126,D3}> when 'true' ->
													      let <_cor61> =
														  %% Line 1433
														  call 'lists':'flatten'
														      ([D1|[D2|[D3|[]]]])
													      in  let <_rec207> = {%% Line 1433
														       Menu,_cor61}
														  in  %% Line 1433
														      call 'erlang':'setelement'
															  (9, S, _rec207)
													  ( <_cor60> when 'true' ->
														primop 'match_fail'
														    ({'badmatch',_cor60})
													    -| ['compiler_generated'] )
													end
					    ( <_cor40> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_cor40})
					      -| ['compiler_generated'] )
					  end
	  ( <_cor67,_cor66,_cor65> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor67,_cor66,_cor65})
		  -| [{'function_name',{'create_filter_menu',3}}] )
	    -| ['compiler_generated'] )
	end
'create_help_menu'/1 =
    %% Line 1435
    fun (_cor0) ->
	let <Menu> =
	    %% Line 1436
	    call 'wxMenu':'new'
		([])
	in  do  %% Line 1437
		apply 'menuitem'/4
		    (Menu, 5009, [73|[110|[102|[111]]]], 'help')
		%% Line 1438
		call 'wxMenuBar':'append'
		    (_cor0, Menu, [72|[101|[108|[112]]]])
'clear_canvas'/1 =
    %% Line 1440
    fun (_cor0) ->
	%% Line 1441
	( case _cor0 of
	    ( <( {'state',_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_rec209,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <DC> =
		      call 'wxClientDC':'new'
			  (_rec209)
		  in  let <_cor4> =
			  %% Line 1442
			  call 'wxe_util':'get_const'
			      ('wxWHITE_BRUSH')
		      in  do  %% Line 1442
			      call 'wxDC':'setBackground'
				  (DC, _cor4)
			      do  %% Line 1443
				  call 'wxDC':'clear'
				      (DC)
				  %% Line 1444
				  case call 'wxPanel':'getSize'
					   (_rec209) of
				    <{CanvasW,CanvasH}> when 'true' ->
					do  %% Line 1445
					    call 'wxSizer':'recalcSizes'
						(_cor61)
					    let <_rec212> =
						%% Line 1447
						call 'erlang':'*'
						    (15, _cor52)
					    in  let <_rec213> =
						    %% Line 1450
						    apply 'queue_new'/0
							()
						in  let <_cor15> =
							%% Line 1447
							call 'erlang':'setelement'
							    (42, _cor0, _rec212)
						    in  let <_cor16> =
							    %% Line 1449
							    call 'erlang':'setelement'
								(38, _cor15, CanvasH)
							in  let <_cor17> =
								%% Line 1448
								call 'erlang':'setelement'
								    (37, _cor16, CanvasW)
							    in  let <_cor18> =
								    %% Line 1446
								    call 'erlang':'setelement'
									(18, _cor17, 'false')
								in  let <_cor20> =
									%% Line 1450
									call 'erlang':'setelement'
									    (14, _cor18, _rec213)
								    in  let <S3> =
									    %% Line 1451
									    apply 'draw_all_actors'/2
										(_cor20, DC)
									in  do  %% Line 1452
										call 'wxClientDC':'destroy'
										    (DC)
										%% Line 1453
										S3
				    ( <_cor7> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor7})
				      -| ['compiler_generated'] )
				  end
	      -| ['compiler_generated'] )
	    ( <_cor72> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'replace_events'/2 =
    %% Line 1455
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,[]> when 'true' ->
	      let <_rec216> =
		  %% Line 1458
		  apply 'queue_new'/0
		      ()
	      in  %% Line 1456
		  case S of
		    <{'state',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66}> when 'true' ->
			let <_cor4> =
			    %% Line 1458
			    call 'erlang':'setelement'
				(14, S, _rec216)
			in  let <_cor5> =
				%% Line 1457
				call 'erlang':'setelement'
				    (12, _cor4, 'first')
			    in  call 'erlang':'setelement'
				    (11, _cor5, 'first')
		    ( <_cor67> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 1459
	  <S,Events> when 'true' ->
	      let <_cor12> =
		  %% Line 1460
		  ( fun (_cor9,_cor8) ->
			apply 'queue_in'/2
			    (_cor9, _cor8)
		    -| [{'id',{0,0,'-replace_events/2-fun-0-'}}] )
	      in  let <_cor7> =
		      %% Line 1460
		      apply 'queue_new'/0
			  ()
		  in  let <Queue> =
			  %% Line 1460
			  call 'lists':'foldl'
			      (_cor12, _cor7, Events)
		      in  %% Line 1461
			  case S of
			    <{'state',_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116}> when 'true' ->
				call 'erlang':'setelement'
				    (14, S, Queue)
			    ( <_cor117> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','state'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
	end
'refresh_main_window'/1 =
    %% Line 1463
    fun (_cor0) ->
	let <_cor6> =
	    %% Line 1464
	    ( fun () ->
		  let <S2> =
		      %% Line 1465
		      apply 'clear_canvas'/1
			  (_cor0)
		  in  let <S3> =
			  %% Line 1466
			  apply 'update_scroll_bar'/1
			      (S2)
		      in  %% Line 1467
			  ( case _cor0 of
			      ( <( {'state',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_rec219,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55}
				   -| ['compiler_generated'] )> when 'true' ->
				    let <_cor5> =
					apply 'queue_to_list'/1
					    (_rec219)
				    in  apply 'display_events'/2
					    (S3, _cor5)
				-| ['compiler_generated'] )
			      ( <_cor56> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','state'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
	      -| [{'id',{0,0,'-refresh_main_window/1-fun-0-'}}] )
	in  %% Line 1464
	    call 'wx':'batch'
		(_cor6)
'display_events'/2 =
    %% Line 1470
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,[]> when 'true' ->
	      %% Line 1471
	      S
	  %% Line 1472
	  <S,Events> when 'true' ->
	      %% Line 1473
	      ( case S of
		  ( <( {'state',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_rec220,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60}
		       -| ['compiler_generated'] )> when 'true' ->
			let <DC> =
			    call 'wxClientDC':'new'
				(_rec220)
			in  let <_cor9> =
				%% Line 1474
				( fun (_cor6,_cor5) ->
				      apply 'display_event'/3
					  (_cor6, _cor5, DC)
				  -| [{'id',{0,0,'-display_events/2-fun-0-'}}] )
			    in  let <S2> =
				    %% Line 1474
				    call 'lists':'foldl'
					(_cor9, S, Events)
				in  do  %% Line 1475
					call 'wxClientDC':'destroy'
					    (DC)
					%% Line 1476
					S2
		    -| ['compiler_generated'] )
		  ( <_cor61> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'collect_more_events'/3 =
    %% Line 1478
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,PrevKey = 'first',Try> when 'true' ->
	      let <PrevE> =
		  %% Line 1479
		  {'e',0,PrevKey,'undefined'}
	      in  %% Line 1480
		  case S of
		    <{'state',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68}> when 'true' ->
			let <_cor5> =
			    call 'erlang':'setelement'
				(12, S, PrevE)
			in  let <_cor7> =
				call 'erlang':'setelement'
				    (11, _cor5, PrevE)
			    in  %% Line 1481
				apply 'do_collect_more_events'/4
				    (_cor7, Try, PrevE, [])
		    ( <_cor69> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 1482
	  <S,PrevKey = 'last',Try> when 'true' ->
	      %% Line 1483
	      ( case S of
		  ( <( {'state',_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_rec222,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117}
		       -| ['compiler_generated'] )> when 'true' ->
			let <PrevE> =
			    {'e',_rec222,PrevKey,'undefined'}
			in  let <_cor13> =
				%% Line 1484
				call 'erlang':'setelement'
				    (12, S, PrevE)
			    in  let <_cor15> =
				    %% Line 1484
				    call 'erlang':'setelement'
					(11, _cor13, PrevE)
				in  %% Line 1485
				    apply 'do_collect_more_events'/4
					(_cor15, Try, PrevE, [])
		    -| ['compiler_generated'] )
		  ( <_cor118> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1486
	  <S,PrevE = {'e',_cor169,_cor170,_cor171},Try> when 'true' ->
	      %% Line 1487
	      apply 'do_collect_more_events'/4
		  (S, Try, PrevE, [])
	  ( <_cor19,_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17})
		  -| [{'function_name',{'collect_more_events',3}}] )
	    -| ['compiler_generated'] )
	end
'do_collect_more_events'/4 =
    %% Line 1489
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S = {'state',_cor38,_cor39,Collector,%% Line 1490
						Order,_cor40,%% Line 1491
							     Active,%% Line 1492
								    Filters,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82},%% Line 1493
																																														   Try,%% Line 1494
																																														       PrevE,%% Line 1495
																																															     Acc> when 'true' ->
	      let <_cor4> =
		  %% Line 1497
		  case <> of
		    %% Line 1498
		    <>
			when call 'erlang':'<'
			      (Try,
			       0) ->
			-1
		    %% Line 1499
		    <> when 'true' ->
			1
		  end
	      in  %% Line 1501
		  ( case PrevE of
		      ( <( {'e',_cor83,_rec224,_cor84}
			   -| ['compiler_generated'] )> when 'true' ->
			    %% Line 1502
			    case %% Line 1503
				 call 'lists':'keysearch'
				     (Active, 2, Filters) of
			      <{'value',{'filter',_cor86,FilterFun}}> when 'true' ->
				  %% Line 1504
				  case %% Line 1505
				       call 'et_collector':'iterate'
					   (Collector, _rec224, %% Line 1507
								Try, %% Line 1508
								     ( 'collect_event'/2
								       -| [{'id',{0,0,'-do_collect_more_events/4-fun-0-'}}] ), %% Line 1509
															       {S,_cor4,Order,Active,FilterFun,PrevE,[]}) of
				    <{_X_S,_X_Incr,_X_Order,_X_Active,_X_FilterFun,LastE,NewEvents}> when 'true' ->
					let <Expected> =
					    %% Line 1510
					    call 'erlang':'abs'
						(Try)
					in  let <Actual> =
						%% Line 1511
						call 'erlang':'length'
						    (NewEvents)
					    in  let <Missing> =
						    %% Line 1512
						    call 'erlang':'-'
							(Expected, Actual)
						in  let <S2,Acc2,Try2> =
							%% Line 1514
							case <> of
							  %% Line 1515
							  <>
							      when call 'erlang':'<'
								    (Try,
								     0) ->
							      let <_cor18> =
								  %% Line 1516
								  call 'erlang':'setelement'
								      (11, S, LastE)
							      in  let <_cor15> =
								      %% Line 1516
								      call 'erlang':'++'
									  (NewEvents, Acc)
								  in  let <_cor14> =
									  %% Line 1516
									  call 'erlang':'-'
									      (Missing)
								      in  <_cor18,_cor15,_cor14>
							  %% Line 1517
							  <> when 'true' ->
							      let <TmpEvents> =
								  %% Line 1518
								  call 'lists':'reverse'
								      (NewEvents)
							      in  let <_cor23> =
								      %% Line 1519
								      call 'erlang':'setelement'
									  (12, S, LastE)
								  in  let <_cor20> =
									  %% Line 1519
									  call 'erlang':'++'
									      (Acc, TmpEvents)
								      in  <_cor23,_cor20,%% Line 1519
											 Missing>
							end
						    in  %% Line 1521
							case <> of
							  %% Line 1522
							  <>
							      when try
								    let <_cor26> =
									call 'erlang':'=/='
									    (Missing, 0)
								    in  ( case <> of
									    ( <>
										  when ( call ( 'erlang'
											     -| ['compiler_generated'] ):( 'is_record'
															   -| ['compiler_generated'] )
											  (LastE,
											   ( 'e'
											     -| ['compiler_generated'] ),
											   ( 4
											     -| ['compiler_generated'] ))
										      -| ['compiler_generated'] ) ->
										  let <_cor31> =
										      ( call 'erlang':'element'
											    (3, LastE)
											-| ['compiler_generated'] )
										  in  let <_cor32> =
											  ( call 'erlang':'=/='
												(_rec224, _cor31)
											    -| ['compiler_generated'] )
										      in  ( call 'erlang':'and'
												(_cor26, _cor32)
											    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									    ( <> when 'true' ->
										  'false'
									      -| ['compiler_generated'] )
									  end
									  -| ['compiler_generated'] )
								of <Try> ->
								    Try
								catch <T,R> ->
								    'false' ->
							      %% Line 1523
							      apply 'do_collect_more_events'/4
								  (S2, Try2, LastE, Acc2)
							  %% Line 1524
							  <> when 'true' ->
							      %% Line 1525
							      {S2,Acc2}
							end
				    ( <_cor10> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor10})
				      -| ['compiler_generated'] )
				  end
			      ( <_cor9> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor9})
				-| ['compiler_generated'] )
			    end
			-| ['compiler_generated'] )
		      ( <_cor85> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','e'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor37,_cor36,_cor35,_cor34> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor37,_cor36,_cor35,_cor34})
		  -| [{'function_name',{'do_collect_more_events',4}}] )
	    -| ['compiler_generated'] )
	end
'collect_event'/2 =
    %% Line 1528
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Event,{S,Incr,Order,Active,FilterFun,{'e',PrevPos,_cor39,_cor40},Events}> when 'true' ->
	      let <Key> =
		  %% Line 1529
		  call 'et_collector':'make_key'
		      (Order, Event)
	      in  let <_cor3> =
		      %% Line 1530
		      call 'erlang':'+'
			  (PrevPos, Incr)
		  in  let <E> =
			  %% Line 1530
			  {'e',_cor3,Key,Event}
		      in  let <_cor5> =
			      catch
				  %% Line 1532
				  apply FilterFun
				      (Event)
			  in  let <LastE,Events2> =
				  %% Line 1532
				  case _cor5 of
				    %% Line 1533
				    <'true'> when 'true' ->
					%% Line 1534
					( case Event of
					    ( <( {'event',_cor41,_cor42,_cor43,_rec227,_cor44,_cor45,_cor46}
						 -| ['compiler_generated'] )> when 'true' ->
						  case apply 'is_hidden'/3
							   (_rec227, _cor44, S) of
						    %% Line 1535
						    <'true'> when 'true' ->
							%% Line 1536
							<E,Events>
						    %% Line 1537
						    <'false'> when 'true' ->
							%% Line 1538
							<E,[E|Events]>
						    ( <_cor10> when 'true' ->
							  primop 'match_fail'
							      ({'case_clause',_cor10})
						      -| ['compiler_generated'] )
						  end
					      -| ['compiler_generated'] )
					    ( <_cor47> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','event'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    %% Line 1540
				    <{'true',Event2}> when 'true' ->
					let <Key2> =
					    %% Line 1541
					    call 'et_collector':'make_key'
						(Order, Event2)
					in  %% Line 1542
					    case E of
					      <{'e',_rec230,_rec231,_rec232}> when 'true' ->
						  let <_cor14> =
						      {'e',_rec230,Key2,Event2}
						  in  %% Line 1543
						      ( case Event2 of
							  ( <( {'event',_cor56,_cor57,_cor58,_rec233,_cor59,_cor60,_cor61}
							       -| ['compiler_generated'] )> when 'true' ->
								case apply 'is_hidden'/3
									 (_rec233, _cor59, S) of
								  %% Line 1544
								  <'true'> when 'true' ->
								      <_cor14,%% Line 1545
									      Events>
								  %% Line 1546
								  <'false'> when 'true' ->
								      <_cor14,%% Line 1547
									      [_cor14|Events]>
								  ( <_cor20> when 'true' ->
									primop 'match_fail'
									    ({'case_clause',_cor20})
								    -| ['compiler_generated'] )
								end
							    -| ['compiler_generated'] )
							  ( <_cor62> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','event'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
					      ( <_cor55> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','e'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
				    %% Line 1549
				    <'false'> when 'true' ->
					%% Line 1550
					<E,Events>
				    %% Line 1551
				    <Bad> when 'true' ->
					%% Line 1552
					( case S of
					    ( <( {'state',_cor70,_cor71,_cor72,_cor73,_cor74,_rec235,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117}
						 -| ['compiler_generated'] )> when 'true' ->
						  let <Contents> =
						      {'bad_filter',_rec235,Bad,Event}
						  in  %% Line 1554
						      case Event of
							<{'event',_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125}> when 'true' ->
							    let <_cor25> =
								call 'erlang':'setelement'
								    (8, Event, Contents)
							    in  let <_cor26> =
								    %% Line 1555
								    call 'erlang':'setelement'
									(6, _cor25, 'bad_filter')
								in  let <_cor28> =
									call 'erlang':'setelement'
									    (5, _cor26, 'bad_filter')
								    in  %% Line 1556
									case E of
									  <{'e',_cor127,_cor128,_cor129}> when 'true' ->
									      let <_cor32> =
										  call 'erlang':'setelement'
										      (4, E, _cor28)
									      in  <_cor32,%% Line 1557
											  [_cor32|Events]>
									  ( <_cor130> when 'true' ->
										( call ( 'erlang'
											 -| ['compiler_generated'] ):( 'error'
														       -| ['compiler_generated'] )
										      (( {'badrecord','e'}
											 -| ['compiler_generated'] ))
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									end
							( <_cor126> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','event'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
					      -| ['compiler_generated'] )
					    ( <_cor118> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','state'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				  end
			      in  %% Line 1559
				  {S,Incr,Order,Active,FilterFun,LastE,Events2}
	  ( <_cor38,_cor37> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor38,_cor37})
		  -| [{'function_name',{'collect_event',2}}] )
	    -| ['compiler_generated'] )
	end
'display_event'/3 =
    %% Line 1561
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <E = {'e',_cor46,_cor47,Event = {'event',_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54}},S = {'state',_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103},DC>
	      when %% Line 1562
		call 'erlang':'=<'
		    (_cor48,
		     _cor72) ->
	      %% Line 1563
	      case apply 'ensure_actor'/3
		       (_cor51, S, DC) of
		<{FromRefresh,From}> when 'true' ->
		    %% Line 1564
		    case From of
		      <{FromName,FromPos,S2}> when 'true' ->
			  %% Line 1565
			  case apply 'ensure_actor'/3
				   (_cor52, S2, DC) of
			    <{ToRefresh,To}> when 'true' ->
				%% Line 1566
				case To of
				  <{ToName,ToPos,S3}> when 'true' ->
				      %% Line 1568
				      case <> of
					%% Line 1569
					<>
					    when let <_cor24> =
						  call 'erlang':'=/='
						      (FromRefresh, 'false')
					      in  let <_cor25> =
						      call 'erlang':'=/='
							  (ToRefresh, 'false')
						  in  call 'erlang':'and'
							  (_cor24, _cor25) ->
					    %% Line 1571
					    ( case S3 of
						( <( {'state',_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_cor129,_rec242,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150,_cor151,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162,_cor163,_cor164,_cor165}
						     -| ['compiler_generated'] )> when 'true' ->
						      let <_rec240> =
							  apply 'queue_in'/2
							      (E, _rec242)
						      in  let <_cor30> =
							      call 'erlang':'setelement'
								  (18, S3, 'true')
							  in  call 'erlang':'setelement'
								  (14, _cor30, _rec240)
						  -| ['compiler_generated'] )
						( <_cor166> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','state'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					%% Line 1572
					<>
					    when call 'erlang':'=:='
						  (FromName,
						   ToName) ->
					    %% Line 1573
					    case _cor73 of
					      %% Line 1574
					      <'true'> when 'true' ->
						  %% Line 1575
						  S3
					      %% Line 1576
					      <'false'> when 'true' ->
						  let <Label> =
						      %% Line 1577
						      apply 'name_to_string'/1
							  (_cor53)
						  in  %% Line 1578
						      apply 'draw_named_arrow'/8
							  (Label, FromName, ToName, FromPos, ToPos, E, S3, DC)
					      ( <_cor37> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_cor37})
						-| ['compiler_generated'] )
					    end
					%% Line 1580
					<> when 'true' ->
					    let <Label> =
						%% Line 1581
						apply 'name_to_string'/1
						    (_cor53)
					    in  %% Line 1582
						apply 'draw_named_arrow'/8
						    (Label, FromName, ToName, FromPos, ToPos, E, S3, DC)
				      end
				  ( <_cor23> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor23})
				    -| ['compiler_generated'] )
				end
			    ( <_cor22> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor22})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor19> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor19})
			-| ['compiler_generated'] )
		    end
		( <_cor18> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor18})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1585
	  <{'e',_cor280,_cor281,_cor282},S,_X_DC> when 'true' ->
	      %% Line 1586
	      S
	  ( <_cor45,_cor44,_cor43> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor45,_cor44,_cor43})
		  -| [{'function_name',{'display_event',3}}] )
	    -| ['compiler_generated'] )
	end
'draw_named_arrow'/8 =
    %% Line 1588
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1589
	( case _cor1 of
	    ( <( {'state',_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_rec246,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor10> =
		      call 'erlang':'*'
			  (15, _cor87)
		  in  case call 'erlang':'+'
			       (_rec246, _cor10) of
			%% Line 1590
			<_cor157>
			    when let <_cor18> =
				  ( call 'erlang':'=:='
					(_cor78, 'true')
				    -| ['compiler_generated'] )
			      in  let <_cor20> =
				      ( call 'erlang':'=:='
					    (_cor6, [85|[78|[75|[78|[79|[87|[78]]]]]]])
					-| ['compiler_generated'] )
				  in  ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'and'
									     -| ['compiler_generated'] )
					    (_cor18, _cor20)
					-| ['compiler_generated'] ) ->
			    _cor1
			%% Line 1592
			<_cor158>
			    when let <_cor26> =
				  ( call 'erlang':'=:='
					(_cor78, 'true')
				    -| ['compiler_generated'] )
			      in  let <_cor28> =
				      ( call 'erlang':'=:='
					    (_cor5, [85|[78|[75|[78|[79|[87|[78]]]]]]])
					-| ['compiler_generated'] )
				  in  ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'and'
									     -| ['compiler_generated'] )
					    (_cor26, _cor28)
					-| ['compiler_generated'] ) ->
			    _cor1
			%% Line 1594
			<Y>
			    when ( call 'erlang':'>'
				    (Y,
				     _cor95)
				-| ['compiler_generated'] ) ->
			    let <_rec248> =
				%% Line 1596
				apply 'queue_in'/2
				    (_cor2, _cor71)
			    in  let <_cor39> =
				    %% Line 1595
				    call 'erlang':'setelement'
					(18, _cor1, 'true')
				in  %% Line 1596
				    call 'erlang':'setelement'
					(14, _cor39, _rec248)
			%% Line 1597
			<Y> when 'true' ->
			    let <_rec251> =
				%% Line 1598
				apply 'queue_in'/2
				    (_cor2, _cor71)
			    in  let <_cor45> =
				    %% Line 1598
				    call 'erlang':'setelement'
					(42, _cor1, Y)
				in  let <_cor47> =
					%% Line 1598
					call 'erlang':'setelement'
					    (14, _cor45, _rec251)
				    in  let <S3> =
					    %% Line 1599
					    apply 'draw_arrow'/4
						(_cor4, _cor3, _cor47, _cor0)
					in  %% Line 1600
					    apply 'draw_label'/7
						(_cor7, _cor6, _cor5, _cor4, _cor3, S3, _cor0)
		      end
	      -| ['compiler_generated'] )
	    ( <_cor107> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'draw_arrow'/4 =
    %% Line 1603
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Pos,_cor34,S,_X_DC>
	      when call 'erlang':'=:='
		    (_cor34,
		     Pos) ->
	      %% Line 1604
	      S
	  %% Line 1605
	  <FromPos,ToPos,S,DC> when 'true' ->
	      %% Line 1606
	      ( case S of
		  ( <( {'state',_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_rec254,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor7> =
			    %% Line 1607
			    call 'wxe_util':'get_const'
				('wxBLACK')
			in  do  %% Line 1607
				call 'wxPen':'setColour'
				    (_cor66, _cor7)
				do  %% Line 1608
				    call 'wxDC':'setPen'
					(DC, _cor66)
				    do  %% Line 1609
					call 'wxDC':'drawLine'
					    (DC, {FromPos,_rec254}, {ToPos,_rec254})
					let <Radians> =
					    %% Line 1612
					    apply 'calc_angle'/2
						({FromPos,_rec254}, {ToPos,_rec254})
					in  let <Radians2> =
						%% Line 1614
						call 'erlang':'+'
						    (Radians, 3.66519142918809182063e+00)
					    in  let <Radians3> =
						    %% Line 1615
						    call 'erlang':'+'
							(Radians, 2.61799387799149396727e+00)
						in  %% Line 1616
						    case apply 'calc_point'/3
							     ({ToPos,_rec254}, 5, Radians2) of
						      <{X3,Y3}> when 'true' ->
							  %% Line 1617
							  case apply 'calc_point'/3
								   ({ToPos,_rec254}, 5, Radians3) of
							    <{X4,Y4}> when 'true' ->
								let <_cor19> =
								    %% Line 1618
								    call 'erlang':'round'
									(ToPos)
								in  let <_cor18> =
									%% Line 1618
									call 'erlang':'round'
									    (_rec254)
								    in  let <_cor21> =
									    %% Line 1619
									    call 'erlang':'round'
										(X3)
									in  let <_cor20> =
										%% Line 1619
										call 'erlang':'round'
										    (Y3)
									    in  let <_cor23> =
										    %% Line 1620
										    call 'erlang':'round'
											(X4)
										in  let <_cor22> =
											%% Line 1620
											call 'erlang':'round'
											    (Y4)
										    in  let <Points> =
											    %% Line 1618
											    [{_cor19,_cor18}|%% Line 1619
													     [{_cor21,_cor20}|%% Line 1620
															      [{_cor23,_cor22}|[]]]]
											in  let <_cor25> =
												%% Line 1621
												call 'wxe_util':'get_const'
												    ('wxBLACK')
											    in  do  %% Line 1621
												    call 'wxBrush':'setColour'
													(_cor67, _cor25)
												    do  %% Line 1622
													call 'wxDC':'setBrush'
													    (DC, _cor67)
													do  %% Line 1623
													    call 'wxDC':'drawPolygon'
														(DC, Points, [])
													    %% Line 1624
													    S
							    ( <_cor17> when 'true' ->
								  primop 'match_fail'
								      ({'badmatch',_cor17})
							      -| ['compiler_generated'] )
							  end
						      ( <_cor16> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_cor16})
							-| ['compiler_generated'] )
						    end
		    -| ['compiler_generated'] )
		  ( <_cor83> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'calc_angle'/2 =
    %% Line 1627
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{X1,Y1},{X2,Y2}> when 'true' ->
	      let <_cor3> =
		  %% Line 1628
		  call 'erlang':'-'
		      (Y2, Y1)
	      in  let <_cor2> =
		      %% Line 1628
		      call 'erlang':'-'
			  (X2, X1)
		  in  %% Line 1628
		      call 'math':'atan2'
			  (_cor3, _cor2)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'calc_angle',2}}] )
	    -| ['compiler_generated'] )
	end
'calc_point'/3 =
    %% Line 1631
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{X,Y},Length,Radians> when 'true' ->
	      let <_cor3> =
		  %% Line 1632
		  call 'math':'cos'
		      (Radians)
	      in  let <_cor4> =
		      %% Line 1632
		      call 'erlang':'*'
			  (Length, _cor3)
		  in  let <_cor5> =
			  %% Line 1632
			  call 'erlang':'+'
			      (X, _cor4)
		      in  let <X2> =
			      %% Line 1632
			      call 'erlang':'round'
				  (_cor5)
			  in  let <_cor7> =
				  %% Line 1633
				  call 'math':'sin'
				      (Radians)
			      in  let <_cor8> =
				      %% Line 1633
				      call 'erlang':'*'
					  (Length, _cor7)
				  in  let <_cor9> =
					  %% Line 1633
					  call 'erlang':'+'
					      (Y, _cor8)
				      in  let <Y2> =
					      %% Line 1633
					      call 'erlang':'round'
						  (_cor9)
					  in  %% Line 1634
					      {X2,Y2}
	  ( <_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11})
		  -| [{'function_name',{'calc_point',3}}] )
	    -| ['compiler_generated'] )
	end
'draw_label'/7 =
    %% Line 1636
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor9> =
	    %% Line 1638
	    case <> of
	      %% Line 1639
	      <>
		  when let <_cor7> =
			call 'erlang':'=:='
			    (_cor5, [85|[78|[75|[78|[79|[87|[78]]]]]]])
		    in  let <_cor8> =
			    %% Line 1640
			    call 'erlang':'=:='
				(_cor4, [85|[78|[75|[78|[79|[87|[78]]]]]]])
			in  call 'erlang':'and'
				(_cor7, _cor8) ->
		  %% Line 1640
		  {2,71,254}
	      %% Line 1641
	      <>
		  when call 'erlang':'=:='
			(_cor5,
			 [85|[78|[75|[78|[79|[87|[78]]]]]]]) ->
		  {255,126,0}
	      %% Line 1642
	      <>
		  when call 'erlang':'=:='
			(_cor4,
			 [85|[78|[75|[78|[79|[87|[78]]]]]]]) ->
		  {255,126,0}
	      %% Line 1643
	      <>
		  when call 'erlang':'=:='
			(_cor3,
			 _cor2) ->
		  {2,71,254}
	      %% Line 1644
	      <> when 'true' ->
		  {227,38,54}
	    end
	in  %% Line 1646
	    ( case _cor1 of
		( <( {'state',_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_rec259,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <_cor15> =
			  %% Line 1647
			  call 'lists':'min'
			      ([_cor3|[_cor2|[]]])
		      in  let <_cor14> =
			      %% Line 1647
			      call 'erlang':'*'
				  (6, _rec259)
			  in  let <X> =
				  %% Line 1647
				  call 'erlang':'+'
				      (_cor15, _cor14)
			      in  do  %% Line 1649
				      apply 'write_text'/7
					  (_cor6, X, _cor68, _cor9, _cor57, _cor1, _cor0)
				      _cor1
		  -| ['compiler_generated'] )
		( <_cor77> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'draw_all_actors'/2 =
    %% Line 1652
    fun (_cor1,_cor0) ->
	%% Line 1653
	( case _cor1 of
	    ( <( {'state',_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_rec262,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Fun> =
		      %% Line 1654
		      ( fun (_cor8,_cor7) ->
			    %% Line 1655
			    case apply 'draw_actor'/4
				     (_cor8, _cor7, _cor1, _cor0) of
			      %% Line 1656
			      <'true'> when 'true' ->
				  let <_cor5> =
				      %% Line 1657
				      call 'erlang':'*'
					  (60, _rec262)
				  in  %% Line 1657
				      call 'erlang':'+'
					  (_cor7, _cor5)
			      %% Line 1658
			      <'false'> when 'true' ->
				  _cor7
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor6})
				-| ['compiler_generated'] )
			    end
			-| [{'id',{0,0,'-draw_all_actors/2-fun-0-'}}] )
		  in  let <_cor14> =
			  %% Line 1662
			  call 'erlang':'*'
			      (10, _rec262)
		      in  do  %% Line 1662
			      call 'lists':'foldl'
				  (Fun, _cor14, _cor32)
			      _cor1
	      -| ['compiler_generated'] )
	    ( <_cor65> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'ensure_actor'/3 =
    %% Line 1666
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1667
	( case _cor1 of
	    ( <( {'state',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_rec264,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55}
		 -| ['compiler_generated'] )> when 'true' ->
		  apply 'do_ensure_actor'/5
		      (_cor2, _cor1, _rec264, 0, _cor0)
	      -| ['compiler_generated'] )
	    ( <_cor56> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'do_ensure_actor'/5 =
    %% Line 1669
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Name,S,[H = {'actor',_cor70,_cor71,_cor72,_cor73}|_cor74],N,_X_DC>
	      when call 'erlang':'=:='
		    (_cor70,
		     Name) ->
	      let <_cor13> =
		  %% Line 1670
		  call 'erlang':'*'
		      (N, 60)
	      in  let <_cor14> =
		      %% Line 1670
		      call 'erlang':'+'
			  (10, _cor13)
		  in  %% Line 1670
		      ( case S of
			  ( <( {'state',_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_rec265,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122}
			       -| ['compiler_generated'] )> when 'true' ->
				let <Pos> =
				    call 'erlang':'*'
					(_cor14, _rec265)
				in  %% Line 1671
				    {'false',{Name,Pos,S}}
			    -| ['compiler_generated'] )
			  ( <_cor123> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','state'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 1672
	  <Name,S,[H|T],N,DC> when 'true' ->
	      %% Line 1673
	      case <> of
		%% Line 1674
		<>
		    when ( try
			    ( case <> of
				( <>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_record'
									       -| ['compiler_generated'] )
					      (S,
					       ( 'state'
						 -| ['compiler_generated'] ),
					       ( 50
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] ) ->
				      let <_cor20> =
					  ( call 'erlang':'element'
						(21, S)
					    -| ['compiler_generated'] )
				      in  let <_cor21> =
					      ( call 'erlang':'=:='
						    (_cor20, 'true')
						-| ['compiler_generated'] )
					  in  ( case <> of
						  ( <>
							when ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'is_record'
												 -| ['compiler_generated'] )
								(H,
								 ( 'actor'
								   -| ['compiler_generated'] ),
								 ( 5
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] ) ->
							let <_cor27> =
							    ( call 'erlang':'element'
								  (5, H)
							      -| ['compiler_generated'] )
							in  let <_cor28> =
								( call 'erlang':'=:='
								      (_cor27, 'true')
								  -| ['compiler_generated'] )
							    in  ( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'and'
												       -| ['compiler_generated'] )
								      (_cor21, _cor28)
								  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						  ( <> when 'true' ->
							'false'
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <> when 'true' ->
				      let <_cor20> =
					  ( call 'erlang':'element'
						(21, S)
					    -| ['compiler_generated'] )
				      in  let <_cor21> =
					      ( call 'erlang':'=:='
						    (_cor20, 'true')
						-| ['compiler_generated'] )
					  in  ( case <> of
						  ( <>
							when ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'is_record'
												 -| ['compiler_generated'] )
								(H,
								 ( 'actor'
								   -| ['compiler_generated'] ),
								 ( 5
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] ) ->
							'false'
						    -| ['compiler_generated'] )
						  ( <> when 'true' ->
							'false'
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    %% Line 1675
		    apply 'do_ensure_actor'/5
			(Name, S, T, N, DC)
		%% Line 1676
		<> when 'true' ->
		    let <_cor30> =
			%% Line 1677
			call 'erlang':'+'
			    (N, 1)
		    in  %% Line 1677
			apply 'do_ensure_actor'/5
			    (Name, S, T, _cor30, DC)
	      end
	  %% Line 1679
	  <Name,S,[],N,DC> when 'true' ->
	      let <_cor33> =
		  %% Line 1681
		  call 'erlang':'*'
		      (N, 60)
	      in  let <_cor34> =
		      %% Line 1681
		      call 'erlang':'+'
			  (10, _cor33)
		  in  %% Line 1681
		      ( case S of
			  ( <( {'state',_cor124,_cor125,_cor126,_cor127,_cor128,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150,_cor151,_rec266,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162,_cor163,_cor164,_cor165,_cor166,_cor167,_cor168,_cor169,_cor170,_cor171}
			       -| ['compiler_generated'] )> when 'true' ->
				let <Pos> =
				    call 'erlang':'*'
					(_cor34, _rec266)
				in  %% Line 1683
				    case <> of
				      %% Line 1684
				      <>
					  when let <_cor39> =
						call 'erlang':'is_integer'
						    (_cor138)
					    in  let <_cor40> =
						    call 'erlang':'>'
							(N, _cor138)
						in  call 'erlang':'and'
							(_cor39, _cor40) ->
					  %% Line 1687
					  apply 'ensure_actor'/3
					      ([85|[78|[75|[78|[79|[87|[78]]]]]]], S, DC)
				      %% Line 1688
				      <>
					  when ( try
						  let <_cor47> =
						      ( call 'erlang':'*'
							    (-5, _rec266)
							-| ['compiler_generated'] )
						  in  let <_cor49> =
							  ( call 'erlang':'-'
								(_cor158, _cor47)
							    -| ['compiler_generated'] )
						      in  ( call 'erlang':'>'
								(Pos, _cor49)
							    -| ['compiler_generated'] )
					      of <Try> ->
						  Try
					      catch <T,R> ->
						  'false'
					      -| ['compiler_generated'] ) ->
					  let <A> =
					      %% Line 1690
					      apply 'create_actor'/1
						  (Name)
					  in  do  %% Line 1691
						  apply 'draw_actor'/4
						      (A, Pos, S, DC)
						  let <_rec268> =
						      %% Line 1692
						      call 'erlang':'++'
							  (_cor139, [A|[]])
						  in  let <_cor57> =
							  %% Line 1692
							  call 'erlang':'setelement'
							      (17, S, _rec268)
						      in  %% Line 1692
							  {'true',{Name,Pos,_cor57}}
				      %% Line 1693
				      <> when 'true' ->
					  let <A> =
					      %% Line 1695
					      apply 'create_actor'/1
						  (Name)
					  in  do  %% Line 1696
						  apply 'draw_actor'/4
						      (A, Pos, S, DC)
						  let <_rec271> =
						      %% Line 1697
						      call 'erlang':'++'
							  (_cor139, [A|[]])
						  in  let <_cor64> =
							  %% Line 1697
							  call 'erlang':'setelement'
							      (17, S, _rec271)
						      in  %% Line 1697
							  {'false',{Name,Pos,_cor64}}
				    end
			    -| ['compiler_generated'] )
			  ( <_cor172> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','state'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  ( <_cor69,_cor68,_cor67,_cor66,_cor65> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor69,_cor68,_cor67,_cor66,_cor65})
		  -| [{'function_name',{'do_ensure_actor',5}}] )
	    -| ['compiler_generated'] )
	end
'draw_actor'/4 =
    %% Line 1700
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1701
	case <> of
	  %% Line 1702
	  <>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'state'
					   -| ['compiler_generated'] ),
					 ( 50
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor8> =
				    ( call 'erlang':'element'
					  (21, _cor1)
				      -| ['compiler_generated'] )
				in  let <_cor9> =
					( call 'erlang':'=:='
					      (_cor8, 'true')
					  -| ['compiler_generated'] )
				    in  ( case <> of
					    ( <>
						  when ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'is_record'
											   -| ['compiler_generated'] )
							  (_cor3,
							   ( 'actor'
							     -| ['compiler_generated'] ),
							   ( 5
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] ) ->
						  let <_cor15> =
						      ( call 'erlang':'element'
							    (5, _cor3)
							-| ['compiler_generated'] )
						  in  let <_cor16> =
							  ( call 'erlang':'=:='
								(_cor15, 'true')
							    -| ['compiler_generated'] )
						      in  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'and'
												 -| ['compiler_generated'] )
								(_cor9, _cor16)
							    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					    ( <> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				let <_cor8> =
				    ( call 'erlang':'element'
					  (21, _cor1)
				      -| ['compiler_generated'] )
				in  let <_cor9> =
					( call 'erlang':'=:='
					      (_cor8, 'true')
					  -| ['compiler_generated'] )
				    in  ( case <> of
					    ( <>
						  when ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'is_record'
											   -| ['compiler_generated'] )
							  (_cor3,
							   ( 'actor'
							     -| ['compiler_generated'] ),
							   ( 5
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] ) ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 1703
	      'false'
	  %% Line 1704
	  <> when 'true' ->
	      %% Line 1705
	      ( case _cor1 of
		  ( <( {'state',_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_rec274,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_cor129,_cor130}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor21> =
			    %% Line 1706
			    call 'erlang':'*'
				(5, _rec274)
			in  let <TextX> =
				%% Line 1706
				call 'erlang':'-'
				    (_cor2, _cor21)
			    in  %% Line 1707
				case apply 'calc_y'/1
					 (_cor1) of
				  <{TextY,LineTopY,LineBotY}> when 'true' ->
				      %% Line 1709
				      ( case _cor3 of
					  ( <( {'actor',_rec275,_cor132,_cor133,_cor134}
					       -| ['compiler_generated'] )> when 'true' ->
						let <_cor27> =
						    case _rec275 of
						      %% Line 1710
						      <[85|[78|[75|[78|[79|[87|[78]]]]]]]> when 'true' ->
							  {255,126,0}
						      %% Line 1711
						      <_cor136> when 'true' ->
							  {227,38,54}
						    end
						in  let <String,Font> =
							%% Line 1714
							case <> of
							  %% Line 1715
							  <>
							      when let <_cor34> =
								    ( call 'erlang':'=:='
									  (_cor104, 'display')
								      -| ['compiler_generated'] )
								in  let <_cor41> =
									( call 'erlang':'=:='
									      (_cor134, 'true')
									  -| ['compiler_generated'] )
								    in  ( call ( 'erlang'
										 -| ['compiler_generated'] ):( 'and'
													       -| ['compiler_generated'] )
									      (_cor34, _cor41)
									  -| ['compiler_generated'] ) ->
							      let <_cor47> =
								  %% Line 1716
								  call 'erlang':'++'
								      (_cor132, [41])
							      in  let <_cor48> =
								      %% Line 1716
								      [40|_cor47]
								  in  <_cor48,_cor111>
							  %% Line 1717
							  <>
							      when let <_cor54> =
								    ( call 'erlang':'=:='
									  (_cor104, 'display')
								      -| ['compiler_generated'] )
								in  let <_cor61> =
									( call 'erlang':'=:='
									      (_cor133, 'true')
									  -| ['compiler_generated'] )
								    in  ( call ( 'erlang'
										 -| ['compiler_generated'] ):( 'and'
													       -| ['compiler_generated'] )
									      (_cor54, _cor61)
									  -| ['compiler_generated'] ) ->
							      let <_cor67> =
								  %% Line 1718
								  call 'erlang':'++'
								      (_cor132, [93])
							      in  let <_cor68> =
								      %% Line 1718
								      [91|_cor67]
								  in  <_cor68,_cor112>
							  %% Line 1719
							  <> when 'true' ->
							      %% Line 1720
							      <_cor132,_cor111>
							end
						    in  do  %% Line 1722
							    apply 'write_text'/7
								(String, TextX, TextY, _cor27, Font, _cor1, _cor0)
							    do  %% Line 1723
								call 'wxPen':'setColour'
								    (_cor113, _cor27)
								do  %% Line 1724
								    call 'wxDC':'setPen'
									(_cor0, _cor113)
								    do  %% Line 1725
									call 'wxDC':'drawLines'
									    (_cor0, [{_cor2,LineTopY}|[{_cor2,LineBotY}|[]]])
									%% Line 1726
									'true'
					    -| ['compiler_generated'] )
					  ( <_cor135> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','actor'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				  ( <_cor23> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor23})
				    -| ['compiler_generated'] )
				end
		    -| ['compiler_generated'] )
		  ( <_cor131> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'calc_y'/1 =
    %% Line 1729
    fun (_cor0) ->
	case _cor0 of
	  <{'state',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,Scale,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,Height,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54}> when 'true' ->
	      let <TextY> =
		  %% Line 1730
		  call 'erlang':'*'
		      (15, Scale)
	      in  let <_cor3> =
		      %% Line 1731
		      call 'erlang':'*'
			  (7.50000000000000000000e+00, Scale)
		  in  let <_cor4> =
			  %% Line 1731
			  call 'erlang':'+'
			      (TextY, _cor3)
		      in  let <LineTopY> =
			      %% Line 1731
			      call 'erlang':'round'
				  (_cor4)
			  in  %% Line 1734
			      {TextY,LineTopY,Height}
	  ( <_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7})
		  -| [{'function_name',{'calc_y',1}}] )
	    -| ['compiler_generated'] )
	end
'display_all'/1 =
    %% Line 1736
    fun (_cor0) ->
	%% Line 1737
	( case _cor0 of
	    ( <( {'state',_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_rec284,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor12> =
		      %% Line 1738
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor6) ->
				    case _cor6 of
				      <[A|_cor5]> when 'true' ->
					  case A of
					    <{'actor',_cor79,_cor80,_cor81,_cor82}> when 'true' ->
						let <_cor8> =
						    call 'erlang':'setelement'
							(5, A, 'false')
						in  let <_cor10> =
							call 'erlang':'setelement'
							    (4, _cor8, 'false')
						    in  let <_cor11> =
							    apply 'lc$^0'/1
								(_cor5)
							in  ( [_cor10|_cor11]
							      -| ['compiler_generated'] )
					    ( <_cor83> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','actor'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
				      <[]> when 'true' ->
					  []
				      ( <_cor6> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor6})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(_rec284)
			-| ['list_comprehension'] )
		  in  let <_cor15> =
			  %% Line 1740
			  call 'erlang':'setelement'
			      (22, _cor0, 'true')
		      in  let <_cor16> =
			      %% Line 1742
			      call 'erlang':'setelement'
				  (21, _cor15, 'false')
			  in  let <_cor17> =
				  %% Line 1741
				  call 'erlang':'setelement'
				      (20, _cor16, 'false')
			      in  let <_cor19> =
				      %% Line 1739
				      call 'erlang':'setelement'
					  (17, _cor17, _cor12)
				  in  %% Line 1743
				      ( case _cor19 of
					  ( <( {'state',_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150,_cor151,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162,_cor163,_cor164,_cor165,_cor166,_cor167,_cor168,_cor169,_cor170,_cor171,_cor172,_cor173,_cor174,_cor175,_cor176,_rec287,_cor177,_cor178,_cor179,_cor180,_cor181}
					       -| ['compiler_generated'] )> when 'true' ->
						do  call 'wxCheckBox':'setValue'
							(_rec287, _cor152)
						    do  %% Line 1744
							call 'wxCheckBox':'setValue'
							    (_cor177, _cor153)
							%% Line 1745
							apply 'revert_main_window'/1
							    (_cor19)
					    -| ['compiler_generated'] )
					  ( <_cor182> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','state'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor78> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'is_hidden'/2 =
    %% Line 1747
    fun (_cor1,_cor0) ->
	%% Line 1748
	( case _cor0 of
	    ( <( {'state',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_rec291,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61}
		 -| ['compiler_generated'] )> when 'true' ->
		  case _rec291 of
		    %% Line 1749
		    <'true'> when 'true' ->
			%% Line 1750
			( case _cor1 of
			    ( <( {'actor',_cor63,_cor64,_cor65,_rec292}
				 -| ['compiler_generated'] )> when 'true' ->
				  _rec292
			      -| ['compiler_generated'] )
			    ( <_cor66> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','actor'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    %% Line 1751
		    <'false'> when 'true' ->
			%% Line 1752
			( case _cor1 of
			    ( <( {'actor',_cor67,_cor68,_cor69,_rec293}
				 -| ['compiler_generated'] )> when 'true' ->
				  ( case _rec293 of
				      ( <( 'true'
					   -| ['compiler_generated'] )> when 'true' ->
					    'true'
					-| ['compiler_generated'] )
				      ( <( 'false'
					   -| ['compiler_generated'] )> when 'true' ->
					    call 'erlang':'not'
						(_cor69)
					-| ['compiler_generated'] )
				      ( <_cor5> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {( 'badarg'
							-| ['compiler_generated'] ),_cor5}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <_cor70> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','actor'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    ( <_cor11> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor11})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor62> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'is_hidden'/3 =
    %% Line 1755
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1756
	( case _cor0 of
	    ( <( {'state',_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_rec295,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <FromMatch> =
		      %% Line 1758
		      call 'lists':'keysearch'
			  (_cor2, 2, _rec295)
		  in  let <ToMatch> =
			  %% Line 1759
			  call 'lists':'keysearch'
			      (_cor1, 2, _rec295)
		      in  %% Line 1760
			  case <FromMatch,ToMatch> of
			    %% Line 1761
			    <'false','false'> when 'true' ->
				%% Line 1762
				call 'erlang':'not'
				    (_cor55)
			    %% Line 1763
			    <'false',{'value',T}> when 'true' ->
				%% Line 1764
				apply 'is_hidden'/2
				    (T, _cor0)
			    %% Line 1765
			    <{'value',F},'false'> when 'true' ->
				%% Line 1766
				apply 'is_hidden'/2
				    (F, _cor0)
			    %% Line 1767
			    <{'value',F},{'value',T}>
				when call 'erlang':'=:='
				      (_cor55,
				       'true') ->
				%% Line 1768
				( case apply 'is_hidden'/2
					   (F, _cor0) of
				    ( <( 'true'
					 -| ['compiler_generated'] )> when 'true' ->
					  'true'
				      -| ['compiler_generated'] )
				    ( <( 'false'
					 -| ['compiler_generated'] )> when 'true' ->
					  apply 'is_hidden'/2
					      (T, _cor0)
				      -| ['compiler_generated'] )
				    ( <_cor11> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {( 'badarg'
						      -| ['compiler_generated'] ),_cor11}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    %% Line 1769
			    <{'value',F},{'value',T}>
				when let <_cor19> =
				      ( try
					    ( case <> of
						( <>
						      when ( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'is_record'
											       -| ['compiler_generated'] )
							      (F,
							       ( 'actor'
								 -| ['compiler_generated'] ),
							       ( 5
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] ) ->
						      let <_cor17> =
							  ( call 'erlang':'element'
								(4, F)
							    -| ['compiler_generated'] )
						      in  ( call 'erlang':'=:='
								(_cor17, 'true')
							    -| ['compiler_generated'] )
						  -| ['compiler_generated'] )
						( <> when 'true' ->
						      'false'
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					of <Try> ->
					    Try
					catch <T,R> ->
					    'false'
					-| ['compiler_generated'] )
				  in  let <_cor26> =
					  ( try
						( case <> of
						    ( <>
							  when ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'is_record'
												   -| ['compiler_generated'] )
								  (T,
								   ( 'actor'
								     -| ['compiler_generated'] ),
								   ( 5
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] ) ->
							  let <_cor24> =
							      ( call 'erlang':'element'
								    (4, T)
								-| ['compiler_generated'] )
							  in  ( call 'erlang':'=:='
								    (_cor24, 'true')
								-| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						    ( <> when 'true' ->
							  'false'
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    of <Try> ->
						Try
					    catch <T,R> ->
						'false'
					    -| ['compiler_generated'] )
				      in  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'or'
										 -| ['compiler_generated'] )
						(_cor19, _cor26)
					    -| ['compiler_generated'] ) ->
				%% Line 1770
				( case F of
				    ( <( {'actor',_cor134,_cor135,_cor136,_rec297}
					 -| ['compiler_generated'] )> when 'true' ->
					  ( case _rec297 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    ( case T of
							( <( {'actor',_cor138,_cor139,_cor140,_rec298}
							     -| ['compiler_generated'] )> when 'true' ->
							      _rec298
							  -| ['compiler_generated'] )
							( <_cor141> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','actor'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_cor27> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {( 'badarg'
								-| ['compiler_generated'] ),_cor27}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    ( <_cor137> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','actor'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    %% Line 1771
			    <{'value',_X_F},{'value',_X_T}> when 'true' ->
				%% Line 1772
				'true'
			    ( <_fol13141,_fol13142> when 'true' ->
				  let <_cor32> = {_fol13141,_fol13142}
				  in  primop 'match_fail'
					  ({'case_clause',_cor32})
			      -| ['compiler_generated'] )
			  end
	      -| ['compiler_generated'] )
	    ( <_cor84> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'move_actor'/4 =
    %% Line 1775
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1777
	( case _cor2 of
	    ( <( {'actor',_rec299,_cor35,_cor36,_cor37}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 1778
		  ( case _cor3 of
		      ( <( {'actor',_rec300,_cor39,_cor40,_cor41}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <ToIx> =
				%% Line 1779
				apply 'actor_index'/3
				    (_rec299, 2, _cor1)
			    in  let <FromIx> =
				    %% Line 1780
				    apply 'actor_index'/3
					(_rec300, 2, _cor1)
				in  %% Line 1781
				    case <> of
				      %% Line 1782
				      <>
					  when try
						let <_cor13> =
						    call 'erlang':'=/='
							(FromIx, 0)
						in  let <_cor14> =
							call 'erlang':'=/='
							    (ToIx, 0)
						    in  let <_cor15> =
							    call 'erlang':'>'
								(ToIx, FromIx)
							in  let <_cor16> =
								call 'erlang':'and'
								    (_cor14, _cor15)
							    in  call 'erlang':'and'
								    (_cor13, _cor16)
					    of <Try> ->
						Try
					    catch <T,R> ->
						'false' ->
					  let <Actors2> =
					      %% Line 1783
					      call 'lists':'keydelete'
						  (_rec300, 2, _cor1)
					  in  let <Actors3> =
						  %% Line 1784
						  apply 'insert_actor_after'/3
						      (_cor3, _cor2, Actors2)
					      in  %% Line 1785
						  case _cor0 of
						    <{'state',_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91}> when 'true' ->
							let <_cor21> =
							    call 'erlang':'setelement'
								(17, _cor0, Actors3)
							in  %% Line 1786
							    apply 'refresh_main_window'/1
								(_cor21)
						    ( <_cor92> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','state'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
				      %% Line 1787
				      <>
					  when let <_cor23> =
						call 'erlang':'=/='
						    (FromIx, 0)
					    in  let <_cor24> =
						    call 'erlang':'=/='
							(ToIx, 0)
						in  call 'erlang':'and'
							(_cor23, _cor24) ->
					  let <Actors2> =
					      %% Line 1788
					      call 'lists':'keydelete'
						  (_rec300, 2, _cor1)
					  in  let <Actors3> =
						  %% Line 1789
						  apply 'insert_actor_before'/3
						      (_cor3, _cor2, Actors2)
					      in  %% Line 1790
						  case _cor0 of
						    <{'state',_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141}> when 'true' ->
							let <_cor29> =
							    call 'erlang':'setelement'
								(17, _cor0, Actors3)
							in  %% Line 1791
							    apply 'refresh_main_window'/1
								(_cor29)
						    ( <_cor142> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','state'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
				      %% Line 1792
				      <> when 'true' ->
					  _cor0
				    end
			-| ['compiler_generated'] )
		      ( <_cor42> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','actor'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor38> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','actor'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'insert_actor_after'/3 =
    %% Line 1797
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <From,To,[H|T]> when 'true' ->
	      %% Line 1798
	      ( case To of
		  ( <( {'actor',_rec303,_cor12,_cor13,_cor14}
		       -| ['compiler_generated'] )> when 'true' ->
			( case H of
			    ( <( {'actor',_rec304,_cor16,_cor17,_cor18}
				 -| ['compiler_generated'] )> when 'true' ->
				  case <> of
				    %% Line 1799
				    <>
					when call 'erlang':'=:='
					      (_rec303,
					       _rec304) ->
					[H|[From|T]]
				    %% Line 1800
				    <> when 'true' ->
					let <_cor7> =
					    apply 'insert_actor_after'/3
						(From, To, T)
					in  [H|_cor7]
				  end
			      -| ['compiler_generated'] )
			    ( <_cor19> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','actor'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor15> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','actor'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1802
	  <_X_From,_X_To,[]> when 'true' ->
	      %% Line 1803
	      []
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'insert_actor_after',3}}] )
	    -| ['compiler_generated'] )
	end
'insert_actor_before'/3 =
    %% Line 1805
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <From,To,[H|T]> when 'true' ->
	      %% Line 1806
	      ( case To of
		  ( <( {'actor',_rec305,_cor12,_cor13,_cor14}
		       -| ['compiler_generated'] )> when 'true' ->
			( case H of
			    ( <( {'actor',_rec306,_cor16,_cor17,_cor18}
				 -| ['compiler_generated'] )> when 'true' ->
				  case <> of
				    %% Line 1807
				    <>
					when call 'erlang':'=:='
					      (_rec305,
					       _rec306) ->
					[From|[H|T]]
				    %% Line 1808
				    <> when 'true' ->
					let <_cor7> =
					    apply 'insert_actor_before'/3
						(From, To, T)
					in  [H|_cor7]
				  end
			      -| ['compiler_generated'] )
			    ( <_cor19> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','actor'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor15> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','actor'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1810
	  <_X_From,_X_To,[]> when 'true' ->
	      %% Line 1811
	      []
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'insert_actor_before',3}}] )
	    -| ['compiler_generated'] )
	end
'actor_index'/3 =
    %% Line 1813
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_Key,_X_Pos,[]> when 'true' ->
	      %% Line 1814
	      0
	  %% Line 1815
	  <Key,Pos,[H|T]> when 'true' ->
	      let <_cor3> =
		  %% Line 1816
		  call 'erlang':'element'
		      (Pos, H)
	      in  %% Line 1816
		  case <> of
		    %% Line 1818
		    <>
			when call 'erlang':'=:='
			      (Key,
			       _cor3) ->
			1
		    %% Line 1817
		    <> when 'true' ->
			let <_cor4> =
			    apply 'actor_index'/3
				(Key, Pos, T)
			in  call 'erlang':'+'
				(_cor4, 1)
		  end
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'actor_index',3}}] )
	    -| ['compiler_generated'] )
	end
'y_to_n'/2 =
    %% Line 1821
    fun (_cor1,_cor0) ->
	%% Line 1822
	( case _cor0 of
	    ( <( {'state',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_rec307,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor5> =
		      call 'erlang':'/'
			  (_cor1, _rec307)
		  in  let <_cor6> =
			  call 'erlang':'-'
			      (_cor5, 15)
		      in  let <Y2> =
			      call 'erlang':'+'
				  (_cor6, 7.50000000000000000000e+00)
			  in  let <_cor8> =
				  %% Line 1823
				  call 'erlang':'/'
				      (Y2, 15)
			      in  let <_cor9> =
				      %% Line 1823
				      call 'erlang':'-'
					  (_cor8, 2.00000000000000011102e-01)
				  in  let <N> =
					  %% Line 1823
					  call 'erlang':'round'
					      (_cor9)
				      in  let <MaxN> =
					      %% Line 1824
					      apply 'queue_length'/1
						  (_cor28)
					  in  %% Line 1825
					      case <> of
						%% Line 1826
						<>
						    when call 'erlang':'=<'
							  (N,
							   0) ->
						    'actor'
						%% Line 1827
						<>
						    when call 'erlang':'>'
							  (N,
							   MaxN) ->
						    'actor'
						%% Line 1828
						<> when 'true' ->
						    {'event',N}
					      end
	      -| ['compiler_generated'] )
	    ( <_cor64> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'x_to_n'/2 =
    %% Line 1831
    fun (_cor1,_cor0) ->
	%% Line 1832
	( case _cor0 of
	    ( <( {'state',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_rec309,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Len> =
		      %% Line 1833
		      call 'erlang':'length'
			  (_cor31)
		  in  let <_cor8> =
			  %% Line 1834
			  call 'erlang':'*'
			      (10, _rec309)
		      in  let <X2> =
			      %% Line 1834
			      call 'erlang':'-'
				  (_cor1, _cor8)
			  in  let <_cor10> =
				  %% Line 1835
				  call 'erlang':'*'
				      (60, _rec309)
			      in  let <N> =
				      %% Line 1835
				      call 'erlang':'/'
					  (X2, _cor10)
				  in  let <_cor12> =
					  %% Line 1836
					  call 'erlang':'+'
					      (N, 1.50000000000000000000e+00)
				      in  let <N2> =
					      %% Line 1836
					      call 'erlang':'trunc'
						  (_cor12)
					  in  %% Line 1837
					      case <> of
						%% Line 1838
						<>
						    when call 'erlang':'>'
							  (N2,
							   Len) ->
						    Len
						%% Line 1839
						<>
						    when call 'erlang':'<'
							  (N2,
							   1) ->
						    1
						%% Line 1840
						<> when 'true' ->
						    N2
					      end
	      -| ['compiler_generated'] )
	    ( <_cor64> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'write_text'/7 =
    %% Line 1843
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 1844
	    call 'wxDC':'setFont'
		(_cor0, _cor2)
	    do  %% Line 1845
		call 'wxDC':'setTextForeground'
		    (_cor0, _cor3)
		%% Line 1846
		( case _cor1 of
		    ( <( {'state',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_rec311,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68}
			 -| ['compiler_generated'] )> when 'true' ->
			  let <_cor9> =
			      call 'erlang':'*'
				  (15, _rec311)
			  in  let <_cor10> =
				  call 'erlang':'/'
				      (_cor9, 2)
			      in  let <_cor11> =
				      call 'erlang':'-'
					  (_cor4, _cor10)
				  in  let <_cor12> =
					  call 'erlang':'round'
					      (_cor11)
				      in  let <_cor13> =
					      call 'erlang':'-'
						  (_cor12, 3)
					  in  call 'wxDC':'drawText'
						  (_cor0, _cor6, {_cor5,_cor13})
		      -| ['compiler_generated'] )
		    ( <_cor69> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'do_open_event'/2 =
    %% Line 1848
    fun (_cor1,_cor0) ->
	%% Line 1849
	( case _cor1 of
	    ( <( {'state',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_rec312,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Events> =
		      apply 'queue_to_list'/1
			  (_rec312)
		  in  let <_rec313> =
			  %% Line 1850
			  apply 'list_to_queue'/1
			      (Events)
		      in  let <_cor8> =
			      %% Line 1850
			      call 'erlang':'setelement'
				  (14, _cor1, _rec313)
			  in  let <_cor10> =
				  catch
				      %% Line 1851
				      call 'lists':'nth'
					  (_cor0, Events)
			      in  %% Line 1851
				  case _cor10 of
				    %% Line 1852
				    <{'EXIT',_cor122}> when 'true' ->
					%% Line 1853
					{'error',{'no_such_event',_cor0}}
				    %% Line 1854
				    <{'e',_cor123,Key,_cor124}> when 'true' ->
					let <Fun> = 'create_contents_window'/2
					in  let <Prev> =
						%% Line 1857
						call 'et_collector':'iterate'
						    (_cor25, Key, -1)
					    in  let <_cor17> =
						    %% Line 1859
						    case <> of
						      %% Line 1860
						      <>
							  when call 'erlang':'=:='
								(Prev,
								 Key) ->
							  %% Line 1861
							  call 'et_collector':'iterate'
							      (_cor25, 'first', 1, Fun, {_cor8,[]})
						      %% Line 1862
						      <> when 'true' ->
							  %% Line 1863
							  call 'et_collector':'iterate'
							      (_cor25, Prev, 1, Fun, {_cor8,[]})
						    end
						in  %% Line 1858
						    case _cor17 of
						      <{_cor174,Res}>
							  when call 'erlang':'=:='
								(_cor174,
								 _cor8) ->
							  %% Line 1865
							  case Res of
							    %% Line 1866
							    <[]> when 'true' ->
								%% Line 1867
								{'error','no_contents_viewer_started'}
							    %% Line 1868
							    <[Single|[]]> when 'true' ->
								%% Line 1869
								Single
							    %% Line 1870
							    <Multi> when 'true' ->
								%% Line 1871
								{'error',{'too_many',Multi}}
							  end
						      ( <_cor18> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_cor18})
							-| ['compiler_generated'] )
						    end
				    ( <_cor20> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor20})
				      -| ['compiler_generated'] )
				  end
	      -| ['compiler_generated'] )
	    ( <_cor71> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'create_contents_window'/2 =
    %% Line 1875
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Event,{S,Res}> when 'true' ->
	      let <_cor2> =
		  %% Line 1876
		  call 'erlang':'self'
		      ()
	      in  %% Line 1878
		  ( case S of
		      ( <( {'state',_cor18,_cor19,_cor20,_rec316,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <Options> =
				[{'viewer_pid',_cor2}|[{'event',Event}|[{'event_order',_rec316}|%% Line 1879
												[{'active_filter',_cor22}|%% Line 1880
															  [{'wx_debug',_cor64}|_cor23]]]]]
			    in  let <_cor12> =
				    catch
					%% Line 1882
					call 'et_wx_contents_viewer':'start_link'
					    (Options)
				in  %% Line 1882
				    case _cor12 of
				      %% Line 1883
				      <{'ok',Pid}> when 'true' ->
					  %% Line 1884
					  {S,[{'ok',Pid}|Res]}
				      %% Line 1885
				      <{'error',Reason}> when 'true' ->
					  let <_cor13> =
					      %% Line 1887
					      call 'erlang':'self'
						  ()
					  in  %% Line 1886
					      case call 'error_logger':'format'
						       ([126|[112|[40|[126|[112|[41|[58|[32|[99|[114|[101|[97|[116|[101|[95|[99|[111|[110|[116|[101|[110|[116|[115|[95|[119|[105|[110|[100|[111|[119|[40|[126|[112|[41|[32|[45|[62|[126|[110|[32|[32|[32|[32|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 1887
																																								      ['et_wx_viewer'|[_cor13|[Options|[Reason|[]]]]]) of
						<'ok'> when 'true' ->
						    %% Line 1888
						    {S,[{'error',Reason}|Res]}
						( <_cor14> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_cor14})
						  -| ['compiler_generated'] )
					      end
				      %% Line 1889
				      <Stuff> when 'true' ->
					  %% Line 1890
					  {S,[{'error',{'stuff',Stuff}}|Res]}
				    end
			-| ['compiler_generated'] )
		      ( <_cor66> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16})
		  -| [{'function_name',{'create_contents_window',2}}] )
	    -| ['compiler_generated'] )
	end
'print_setup'/1 =
    %% Line 1893
    fun (_cor0) ->
	%% Line 1894
	case apply 'init_printers'/1
		 (_cor0) of
	  <S2 = {'state',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,PSDD0,PD0,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59}> when 'true' ->
	      do  %% Line 1896
		  call 'wxPageSetupDialogData':'setPrintData'
		      (PSDD0, PD0)
		  %% Line 1897
		  ( case _cor0 of
		      ( <( {'state',_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_rec320,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <PSD> =
				call 'wxPageSetupDialog':'new'
				    (_rec320, [{'data',PSDD0}|[]])
			    in  do  %% Line 1898
				    call 'wxPageSetupDialog':'showModal'
					(PSD)
				    let <PSDD1> =
					%% Line 1900
					call 'wxPageSetupDialog':'getPageSetupData'
					    (PSD)
				    in  let <PD1> =
					    %% Line 1901
					    call 'wxPageSetupDialogData':'getPrintData'
						(PSDD1)
					in  let <PD> =
						%% Line 1904
						call 'wxPrintData':'new'
						    (PD1)
					    in  let <PsDD> =
						    %% Line 1905
						    call 'wxPageSetupDialogData':'new'
							(PSDD1)
						in  do  %% Line 1906
							call 'wxPageSetupDialog':'destroy'
							    (PSD)
							do  %% Line 1907
							    call 'wxPageSetupDialogData':'destroy'
								(PSDD0)
							    do  %% Line 1908
								call 'wxPrintData':'destroy'
								    (PD0)
								let <_cor10> =
								    %% Line 1909
								    call 'erlang':'setelement'
									(36, S2, PD)
								in  %% Line 1909
								    call 'erlang':'setelement'
									(35, _cor10, PsDD)
			-| ['compiler_generated'] )
		      ( <_cor108> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'print'/2 =
    %% Line 1911
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S = {'state',_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,'undefined','undefined',_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114},Scope> when 'true' ->
	      let <S2> =
		  %% Line 1912
		  apply 'print_setup'/1
		      (S)
	      in  %% Line 1913
		  apply 'print'/2
		      (S2, Scope)
	  %% Line 1914
	  <S = {'state',_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,PSDD,PD,_cor148,_cor149,_cor150,_cor151,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161},Scope> when 'true' ->
	      let <PDD> =
		  %% Line 1915
		  call 'wxPrintDialogData':'new'
		      (PD)
	      in  do  %% Line 1916
		      call 'wxPrintDialogData':'enablePrintToFile'
			  (PDD, 'true')
		      do  %% Line 1917
			  call 'wxPrintDialogData':'enablePageNumbers'
			      (PDD, 'true')
			  do  %% Line 1918
			      call 'wxPrintDialogData':'enableSelection'
				  (PDD, 'true')
			      let <Tab> =
				  %% Line 1919
				  call 'ets':'new'
				      ('et_wx_viewer', ['public'])
			      in  let <GetPageInfo> =
				      %% Line 1921
				      ( fun (_cor20) ->
					    %% Line 1922
					    case call 'wxPrintout':'getPaperRectPixels'
						     (_cor20) of
					      <{_cor162,_cor163,PW,PH}> when 'true' ->
						  let <_cor7> =
						      %% Line 1925
						      call 'erlang':'setelement'
							  (38, S, PH)
						  in  let <_cor8> =
							  %% Line 1924
							  call 'erlang':'setelement'
							      (37, _cor7, PW)
						      in  let <_cor10> =
							      %% Line 1923
							      call 'erlang':'setelement'
								  (23, _cor8, 'printer')
							  in  let <EventsPerPage> =
								  %% Line 1926
								  apply 'events_per_page'/2
								      (_cor10, PH)
							      in  let <PagedEvents> =
								      %% Line 1927
								      apply 'paged_events'/3
									  (_cor10, Scope, EventsPerPage)
								  in  do  %% Line 1928
									  ( letrec
										'lc$^0'/1 =
										    fun (_cor16) ->
											case _cor16 of
											  <[PE|_cor15]> when 'true' ->
											      do  call 'ets':'insert'
												      (Tab, PE)
												  apply 'lc$^0'/1
												      (_cor15)
											  <[]> when 'true' ->
											      []
											  ( <_cor16> when 'true' ->
												( primop 'match_fail'
												      ({'function_clause',_cor16})
												  -| [{'function_name',{'lc$^0',1}}] )
											    -| ['compiler_generated'] )
											end
									    in  apply 'lc$^0'/1
										    (PagedEvents)
									    -| ['list_comprehension'] )
									  do  %% Line 1929
									      call 'ets':'insert'
										  (Tab, _cor10)
									      let <NumPages> =
										  %% Line 1930
										  call 'erlang':'length'
										      (PagedEvents)
									      in  %% Line 1931
										  {1,NumPages,1,NumPages}
					      ( <_cor5> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_cor5})
						-| ['compiler_generated'] )
					    end
					-| [{'id',{0,0,'-print/2-fun-0-'}}] )
				  in  let <HasPage> =
					  %% Line 1934
					  ( fun (_cor28,_cor27) ->
						let <Size> =
						    %% Line 1935
						    call 'ets':'info'
							(Tab, 'size')
						in  let <NumPages> =
							%% Line 1936
							call 'erlang':'-'
							    (Size, 1)
						    in  %% Line 1937
							( case <> of
							    ( <>
								  when call 'erlang':'>='
									(_cor27,
									 1) ->
								  call 'erlang':'=<'
								      (_cor27, NumPages)
							      -| ['compiler_generated'] )
							    ( <> when 'true' ->
								  'false'
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
					    -| [{'id',{0,0,'-print/2-fun-1-'}}] )
				      in  let <OnPrintPage> =
					      %% Line 1940
					      ( fun (_cor49,_cor48) ->
						    do  %% Line 1941
							call 'wxPrintout':'mapScreenSizeToPageMargins'
							    (_cor49, PSDD)
							%% Line 1942
							case call 'ets':'lookup'
								 (Tab, 'state') of
							  <[PrinterS|[]]> when 'true' ->
							      let <Events> =
								  %% Line 1943
								  call 'ets':'lookup_element'
								      (Tab, _cor48, 2)
							      in  let <DC> =
								      %% Line 1944
								      call 'wxPrintout':'getDC'
									  (_cor49)
								  in  let <PrinterS2> =
									  %% Line 1945
									  apply 'draw_all_actors'/2
									      (PrinterS, DC)
								      in  %% Line 1946
									  ( case PrinterS2 of
									      ( <( {'state',_cor214,_cor215,_cor216,_cor217,_cor218,_cor219,_cor220,_cor221,_cor222,_cor223,_cor224,_cor225,_cor226,_cor227,_cor228,_cor229,_cor230,_cor231,_cor232,_cor233,_cor234,_cor235,_cor236,_cor237,_cor238,_cor239,_cor240,_cor241,_rec325,_cor242,_cor243,_cor244,_cor245,_cor246,_cor247,_cor248,_cor249,_cor250,_cor251,_cor252,_cor253,_cor254,_cor255,_cor256,_cor257,_cor258,_cor259,_cor260,_cor261}
										   -| ['compiler_generated'] )> when 'true' ->
										    let <_rec323> =
											call 'erlang':'*'
											    (15, _rec325)
										    in  let <_cor41> =
											    call 'erlang':'setelement'
												(42, PrinterS2, _rec323)
											in  let <_cor47> =
												%% Line 1947
												( fun (_cor44,_cor43) ->
												      apply 'display_event'/3
													  (_cor44, _cor43, DC)
												  -| [{'id',{0,0,'-print/2-fun-2-'}}] )
											    in  do  %% Line 1947
												    call 'lists':'foldl'
													(_cor47, _cor41, %% Line 1949
															 Events)
												    %% Line 1950
												    'true'
										-| ['compiler_generated'] )
									      ( <_cor262> when 'true' ->
										    ( call ( 'erlang'
											     -| ['compiler_generated'] ):( 'error'
															   -| ['compiler_generated'] )
											  (( {'badrecord','state'}
											     -| ['compiler_generated'] ))
										      -| ['compiler_generated'] )
										-| ['compiler_generated'] )
									    end
									    -| ['compiler_generated'] )
							  ( <_cor32> when 'true' ->
								primop 'match_fail'
								    ({'badmatch',_cor32})
							    -| ['compiler_generated'] )
							end
						-| [{'id',{0,0,'-print/2-fun-3-'}}] )
					  in  let <Printout1> =
						  %% Line 1952
						  call 'wxPrintout':'new'
						      ([80|[114|[105|[110|[116]]]]], OnPrintPage, %% Line 1953
												  [{'getPageInfo',GetPageInfo}|[{'hasPage',HasPage}|[]]])
					      in  let <Printout2> =
						      %% Line 1954
						      call 'wxPrintout':'new'
							  ([80|[114|[105|[110|[116]]]]], OnPrintPage, %% Line 1955
												      [{'getPageInfo',GetPageInfo}|[{'hasPage',HasPage}|[]]])
						  in  let <Preview> =
							  %% Line 1956
							  call 'wxPrintPreview':'new'
							      (Printout1, [{'printoutForPrinting',Printout2}|[{'data',PDD}|[]]])
						      in  do  %% Line 1957
							      case call 'wxPrintPreview':'isOk'
								       (Preview) of
								%% Line 1958
								<'true'> when 'true' ->
								    let <PF> =
									%% Line 1959
									call 'wxPreviewFrame':'new'
									    (Preview, _cor138, [])
								    in  do  %% Line 1960
									    call 'wxPreviewFrame':'centre'
										(PF, [{'dir',12}])
									    do  %% Line 1961
										call 'wxPreviewFrame':'initialize'
										    (PF)
										do  %% Line 1962
										    call 'wxPreviewFrame':'centre'
											(PF)
										    do  %% Line 1963
											call 'wxPreviewFrame':'show'
											    (PF)
											let <OnClose> =
											    %% Line 1964
											    ( fun (_cor61,_cor60) ->
												  do  call 'ets':'delete'
													  (Tab)
												      call 'wxEvent':'skip'
													  (_cor60)
											      -| [{'id',{0,0,'-print/2-fun-4-'}}] )
											in  %% Line 1965
											    call 'wxPreviewFrame':'connect'
												(PF, 'close_window', [{'callback',OnClose}|[]])
								%% Line 1966
								<'false'> when 'true' ->
								    do  %% Line 1967
									call 'io':'format'
									    ([67|[111|[117|[108|[100|[32|[110|[111|[116|[32|[99|[114|[101|[97|[116|[101|[32|[112|[114|[101|[118|[105|[101|[119|[32|[119|[105|[110|[100|[111|[119|[46|[10|[80|[101|[114|[104|[97|[112|[115|[32|[121|[111|[117|[114|[32|[99|[117|[114|[114|[101|[110|[116|[32|[112|[114|[105|[110|[116|[101|[114|[32|[105|[115|[32|[110|[111|[116|[32|[115|[101|[116|[32|[99|[111|[114|[114|[101|[99|[116|[108|[121|[63|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 1968
																																																																						      [])
									do  %% Line 1969
									    call 'wxPrintPreview':'destroy'
										(Preview)
									    %% Line 1970
									    call 'ets':'delete'
										(Tab)
								( <_cor65> when 'true' ->
								      primop 'match_fail'
									  ({'case_clause',_cor65})
								  -| ['compiler_generated'] )
							      end
							      %% Line 1972
							      S
	  ( <_cor67,_cor66> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor67,_cor66})
		  -| [{'function_name',{'print',2}}] )
	    -| ['compiler_generated'] )
	end
'paged_events'/3 =
    %% Line 1974
    fun (_cor2,_cor1,_cor0) ->
	let <_cor9> =
	    %% Line 1976
	    case _cor1 of
	      %% Line 1977
	      <'print_one_page'> when 'true' ->
		  %% Line 1978
		  case _cor2 of
		    <{'state',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62}> when 'true' ->
			let <_cor5> =
			    call 'erlang':'setelement'
				(13, _cor2, _cor0)
			in  apply 'revert'/1
				(_cor5)
		    ( <_cor63> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      %% Line 1979
	      <'print_all_pages'> when 'true' ->
		  %% Line 1980
		  ( case _cor2 of
		      ( <( {'state',_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_rec328,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111}
			   -| ['compiler_generated'] )> when 'true' ->
			    apply 'collect_more_events'/3
				(_cor2, 'first', _rec328)
			-| ['compiler_generated'] )
		      ( <_cor112> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      ( <_cor8> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor8})
		-| ['compiler_generated'] )
	    end
	in  %% Line 1975
	    case _cor9 of
	      <{_cor113,Events}> when 'true' ->
		  %% Line 1982
		  apply 'split_list'/2
		      (Events, _cor0)
	      ( <_cor10> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor10})
		-| ['compiler_generated'] )
	    end
'split_list'/2 =
    %% Line 1984
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <List,N>
	      when let <_cor2> =
		    call 'erlang':'is_integer'
			(N)
		in  let <_cor3> =
			call 'erlang':'>'
			    (N, 0)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      %% Line 1985
	      apply 'do_split_list'/4
		  (List, N, 1, [])
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'split_list',2}}] )
	    -| ['compiler_generated'] )
	end
'do_split_list'/4 =
    %% Line 1987
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[],_X_N,_X_Page,Acc> when 'true' ->
	      %% Line 1988
	      call 'lists':'reverse'
		  (Acc)
	  %% Line 1989
	  <List,N,Page,Acc> when 'true' ->
	      %% Line 1990
	      case apply 'pick_n'/3
		       (List, N, []) of
		<{Items,Rest}> when 'true' ->
		    let <_cor5> =
			%% Line 1991
			call 'erlang':'+'
			    (Page, 1)
		    in  %% Line 1991
			apply 'do_split_list'/4
			    (Rest, N, _cor5, [{Page,Items}|Acc])
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	end
'get_latest_resize'/1 =
    %% Line 1993
    fun (_cor0) ->
	case _cor0 of
	  <Wx = {'wx',_cor2,ObjRef,_cor3,{'wxSize',_cor4,_cor5,_cor6}}> when 'true' ->
	      %% Line 1994
	      receive
		%% Line 1995
		<Wx2 = {'wx',_cor7,_cor8,_cor9,{'wxSize',_cor10,_cor11,_cor12}}>
		    when call 'erlang':'=:='
			  (_cor8,
			   ObjRef) ->
		    %% Line 1996
		    apply 'get_latest_resize'/1
			(Wx2)
	      after %% Line 1997
		    100 ->
		%% Line 1998
		Wx
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'get_latest_resize',1}}] )
	    -| ['compiler_generated'] )
	end
'get_latest_scroll'/1 =
    %% Line 2001
    fun (_cor0) ->
	case _cor0 of
	  <Wx = {'wx',_cor2,ObjRef,_cor3,{'wxScroll','scroll_changed',_cor4,_cor5}}> when 'true' ->
	      %% Line 2002
	      receive
		%% Line 2003
		<Wx2 = {'wx',_cor6,_cor7,_cor8,{'wxScroll','scroll_changed',_cor9,_cor10}}>
		    when call 'erlang':'=:='
			  (_cor7,
			   ObjRef) ->
		    %% Line 2004
		    apply 'get_latest_scroll'/1
			(Wx2)
	      after %% Line 2005
		    100 ->
		%% Line 2006
		Wx
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'get_latest_scroll',1}}] )
	    -| ['compiler_generated'] )
	end
'update_scroll_bar'/1 =
    %% Line 2009
    fun (_cor0) ->
	case _cor0 of
	  <S = {'state',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,%% Line 2011
												     EventsPerPage,_cor31,%% Line 2012
															  N,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,ScrollBar,_cor57,_cor58,_cor59,_cor60,_cor61,%% Line 2010
																																											StatusBar,_cor62,_cor63,_cor64}> when 'true' ->
	      %% Line 2014
	      case apply 'calc_y'/1
		       (S) of
		<{_cor65,LineTopY,LineBotY}> when 'true' ->
		    let <Range> =
			%% Line 2015
			call 'erlang':'-'
			    (LineBotY, LineTopY)
		    in  let <_cor5> =
			    %% Line 2017
			    case apply 'event_pos'/1
				     (S) of
			      %% Line 2018
			      <1> when 'true' ->
				  0
			      %% Line 2019
			      <P> when 'true' ->
				  P
			    end
			in  do  %% Line 2021
				case <> of
				  %% Line 2022
				  <>
				      when let <_cor7> =
					    call 'erlang':'=/='
						(N, 0)
					in  let <_cor8> =
						%% Line 2023
						call 'erlang':'=/='
						    (EventsPerPage, 0)
					    in  call 'erlang':'and'
						    (_cor7, _cor8) ->
				      let <PixelsPerEvent> =
					  %% Line 2024
					  call 'erlang':'/'
					      (Range, EventsPerPage)
				      in  let <Share> =
					      %% Line 2025
					      call 'erlang':'/'
						  (EventsPerPage, N)
					  in  let <_cor15> =
						  %% Line 2027
						  call 'erlang':'*'
						      (_cor5, Share)
					      in  let <_cor16> =
						      %% Line 2027
						      call 'erlang':'*'
							  (_cor15, PixelsPerEvent)
						  in  let <_cor17> =
							  %% Line 2027
							  call 'erlang':'trunc'
							      (_cor16)
						      in  let <_cor13> =
							      %% Line 2028
							      call 'erlang':'*'
								  (Share, Range)
							  in  let <_cor14> =
								  %% Line 2028
								  call 'erlang':'round'
								      (_cor13)
							      in  let <_cor11> =
								      %% Line 2030
								      call 'erlang':'*'
									  (Share, Range)
								  in  let <_cor12> =
									  %% Line 2030
									  call 'erlang':'round'
									      (_cor11)
								      in  %% Line 2026
									  call 'wxScrollBar':'setScrollbar'
									      (ScrollBar, _cor17, _cor14, %% Line 2029
													  Range, _cor12, [{'refresh','true'}])
				  %% Line 2032
				  <> when 'true' ->
				      %% Line 2033
				      call 'wxScrollBar':'setScrollbar'
					  (ScrollBar, %% Line 2034
						      0, %% Line 2035
							 Range, %% Line 2036
								Range, %% Line 2037
								       Range, [{'refresh','true'}])
				end
				let <_cor18> =
				    %% Line 2040
				    apply 'where_text'/1
					(S)
				in  do  %% Line 2040
					call 'wxStatusBar':'setStatusText'
					    (StatusBar, _cor18)
					%% Line 2041
					S
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19})
		  -| [{'function_name',{'update_scroll_bar',1}}] )
	    -| ['compiler_generated'] )
	end
'events_per_page'/2 =
    %% Line 2043
    fun (_cor1,_cor0) ->
	%% Line 2044
	( case _cor1 of
	    ( <( {'state',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_rec329,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor7> =
		      call 'erlang':'*'
			  (15, _rec329)
		  in  let <_cor8> =
			  call 'erlang':'-'
			      (_cor0, _cor7)
		      in  let <_cor4> =
			      call 'erlang':'*'
				  (15, _rec329)
			  in  let <EventsPerPage> =
				  call 'erlang':'div'
				      (_cor8, _cor4)
			      in  %% Line 2045
				  call 'lists':'max'
				      ([1|[EventsPerPage|[]]])
	      -| ['compiler_generated'] )
	    ( <_cor60> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'select_file'/4 =
    %% Line 2047
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 2050
	    call 'filename':'dirname'
		(_cor1)
	in  let <_cor5> =
		%% Line 2051
		call 'filename':'basename'
		    (_cor1)
	    in  let <Dialog> =
		    %% Line 2048
		    call 'wxFileDialog':'new'
			(_cor3, %% Line 2049
				[{'message',_cor2}|%% Line 2050
						   [{'defaultDir',_cor4}|%% Line 2051
									 [{'defaultFile',_cor5}|%% Line 2052
												[{'style',_cor0}|[]]]]])
		in  let <_cor9> =
			%% Line 2054
			case call 'wxMessageDialog':'showModal'
				 (Dialog) of
			  %% Line 2055
			  <5101> when 'true' ->
			      'cancel'
			  %% Line 2056
			  <5100> when 'true' ->
			      let <_cor7> =
				  call 'wxFileDialog':'getPath'
				      (Dialog)
			      in  {'ok',_cor7}
			  ( <_cor8> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor8})
			    -| ['compiler_generated'] )
			end
		    in  do  %% Line 2058
			    call 'wxFileDialog':'destroy'
				(Dialog)
			    _cor9
'opt_create_actor'/3 =
    %% Line 2065
    fun (_cor2,_cor1,_cor0) ->
	%% Line 2066
	( case _cor0 of
	    ( <( {'state',_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_rec331,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor7> =
		      %% Line 2068
		      case call 'lists':'keysearch'
			       (_cor2, 2, _rec331) of
			%% Line 2069
			<{'value',Old}> when 'true' ->
			    Old
			%% Line 2070
			<'false'> when 'true' ->
			    apply 'create_actor'/1
				(_cor2)
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor6})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 2072
		      case _cor1 of
			%% Line 2073
			<'include'> when 'true' ->
			    case _cor7 of
			      <{'actor',_cor66,_cor67,_cor68,_cor69}> when 'true' ->
				  call 'erlang':'setelement'
				      (4, _cor7, 'true')
			      ( <_cor70> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','actor'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			%% Line 2074
			<'exclude'> when 'true' ->
			    case _cor7 of
			      <{'actor',_cor71,_cor72,_cor73,_cor74}> when 'true' ->
				  call 'erlang':'setelement'
				      (5, _cor7, 'true')
			      ( <_cor75> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','actor'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			( <_cor13> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor13})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor65> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'create_actor'/1 =
    %% Line 2077
    fun (_cor0) ->
	let <String> =
	    %% Line 2078
	    apply 'name_to_string'/1
		(_cor0)
	in  %% Line 2080
	    {'actor',_cor0,String,'false','false'}
'name_to_string'/1 =
    %% Line 2082
    fun (_cor0) ->
	let <_cor1> =
	    catch
		%% Line 2083
		call 'io_lib':'format'
		    ([126|[115]], [_cor0|[]])
	in  %% Line 2083
	    case _cor1 of
	      %% Line 2084
	      <{'EXIT',_cor5}> when 'true' ->
		  let <_cor2> =
		      call 'io_lib':'format'
			  ([126|[119]], [_cor0|[]])
		  in  call 'lists':'flatten'
			  (_cor2)
	      %% Line 2085
	      <GoodString> when 'true' ->
		  call 'lists':'flatten'
		      (GoodString)
	    end
'pad_string'/2 =
    %% Line 2088
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Atom,MinLen>
	      when call 'erlang':'is_atom'
		    (Atom) ->
	      let <_cor2> =
		  %% Line 2089
		  call 'erlang':'atom_to_list'
		      (Atom)
	      in  %% Line 2089
		  apply 'pad_string'/2
		      (_cor2, MinLen)
	  %% Line 2090
	  <String,MinLen>
	      when let <_cor3> =
		    call 'erlang':'is_integer'
			(MinLen)
		in  let <_cor4> =
			call 'erlang':'>='
			    (MinLen, 0)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      let <Len> =
		  %% Line 2091
		  call 'erlang':'length'
		      (String)
	      in  %% Line 2092
		  case <> of
		    %% Line 2093
		    <>
			when call 'erlang':'>='
			      (Len,
			       MinLen) ->
			%% Line 2094
			String
		    %% Line 2095
		    <> when 'true' ->
			let <_cor6> =
			    %% Line 2096
			    call 'erlang':'-'
				(MinLen, Len)
			in  let <_cor7> =
				%% Line 2096
				call 'lists':'duplicate'
				    (_cor6, 32)
			    in  %% Line 2096
				call 'erlang':'++'
				    (String, _cor7)
		  end
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9})
		  -| [{'function_name',{'pad_string',2}}] )
	    -| ['compiler_generated'] )
	end
'queue_new'/0 =
    %% Line 2103
    fun () ->
	%% Line 2104
	{0,[],[]}
'queue_in'/2 =
    %% Line 2106
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <X,{Size,In,Out}> when 'true' ->
	      let <_cor2> =
		  %% Line 2107
		  call 'erlang':'+'
		      (Size, 1)
	      in  %% Line 2107
		  {_cor2,[X|In],Out}
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'queue_in',2}}] )
	    -| ['compiler_generated'] )
	end
'queue_to_list'/1 =
    %% Line 2116
    fun (_cor0) ->
	case _cor0 of
	  <{_X_Size,[],Out}> when 'true' ->
	      %% Line 2117
	      Out
	  %% Line 2118
	  <{_X_Size,In,Out}> when 'true' ->
	      let <_cor1> =
		  %% Line 2119
		  call 'lists':'reverse'
		      (In)
	      in  %% Line 2119
		  call 'erlang':'++'
		      (Out, _cor1)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'queue_to_list',1}}] )
	    -| ['compiler_generated'] )
	end
'queue_length'/1 =
    %% Line 2121
    fun (_cor0) ->
	case _cor0 of
	  <{Size,_X_In,_X_Out}> when 'true' ->
	      %% Line 2122
	      Size
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'queue_length',1}}] )
	    -| ['compiler_generated'] )
	end
'list_to_queue'/1 =
    %% Line 2124
    fun (_cor0) ->
	case _cor0 of
	  <List>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 2125
		  call 'erlang':'length'
		      (List)
	      in  %% Line 2125
		  {_cor1,[],List}
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'list_to_queue',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('et_wx_viewer')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('et_wx_viewer', _cor0)
end