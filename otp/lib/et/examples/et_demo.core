module 'et_demo' ['filters'/0,
		  'gen'/3,
		  'init'/0,
		  'live_trans'/0,
		  'live_trans'/1,
		  'mgr_actors'/1,
		  'module_info'/0,
		  'module_info'/1,
		  's'/0,
		  'sim_trans'/0,
		  'sim_trans'/1,
		  'start'/0,
		  'start'/1,
		  't'/0,
		  't'/1,
		  'trace_mnesia'/0]
    attributes []
'sim_trans'/0 =
    %% Line 42
    fun () ->
	%% Line 43
	apply 'sim_trans'/1
	    ([])
'sim_trans'/1 =
    %% Line 45
    fun (_cor0) ->
	let <Options> =
	    %% Line 46
	    [{'dict_insert',{'filter','mgr_actors'},( 'mgr_actors'/1
						      -| [{'id',{0,0,'-sim_trans/1-fun-0-'}}] )}|[]]
	in  let <_cor2> =
		%% Line 47
		call 'erlang':'++'
		    (Options, _cor0)
	    in  %% Line 47
		case call 'et_viewer':'start_link'
			 (_cor2) of
		  <{'ok',Viewer}> when 'true' ->
		      let <Collector> =
			  %% Line 48
			  call 'et_viewer':'get_collector_pid'
			      (Viewer)
		      in  do  %% Line 49
			      call 'et_collector':'report_event'
				  (Collector, 60, 'my_shell', 'mnesia_tm', 'start_outer', %% Line 50
											  [83|[116|[97|[114|[116|[32|[111|[117|[116|[101|[114|[32|[116|[114|[97|[110|[115|[97|[99|[116|[105|[111|[110]]]]]]]]]]]]]]]]]]]]]]])
			      do  %% Line 51
				  call 'et_collector':'report_event'
				      (Collector, 40, 'mnesia_tm', 'my_shell', 'new_tid', %% Line 52
											  [78|[101|[119|[32|[116|[114|[97|[110|[115|[97|[99|[116|[105|[111|[110|[32|[105|[100|[32|[105|[115|[32|[52|[55|[49|[49]]]]]]]]]]]]]]]]]]]]]]]]]])
				  do  %% Line 53
				      call 'et_collector':'report_event'
					  (Collector, 20, 'my_shell', 'mnesia_locker', 'try_write_lock', %% Line 54
													 [65|[99|[113|[117|[105|[114|[101|[32|[119|[114|[105|[116|[101|[32|[108|[111|[99|[107|[32|[102|[111|[114|[32|[123|[109|[121|[95|[116|[97|[98|[44|[32|[107|[101|[121|[125]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				      do  %% Line 55
					  call 'et_collector':'report_event'
					      (Collector, 10, 'mnesia_locker', 'my_shell', 'granted', %% Line 56
												      [89|[111|[117|[32|[103|[111|[116|[32|[116|[104|[101|[32|[119|[114|[105|[116|[101|[32|[108|[111|[99|[107|[32|[102|[111|[114|[32|[123|[109|[121|[95|[116|[97|[98|[44|[32|[107|[101|[121|[125]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
					  do  %% Line 57
					      call 'et_collector':'report_event'
						  (Collector, 60, 'my_shell', 'do_commit', %% Line 58
											   [80|[101|[114|[102|[111|[114|[109|[32|[32|[116|[114|[97|[110|[115|[97|[99|[116|[105|[111|[110|[32|[99|[111|[109|[109|[105|[116]]]]]]]]]]]]]]]]]]]]]]]]]]])
					      do  %% Line 59
						  call 'et_collector':'report_event'
						      (Collector, 40, 'my_shell', 'mnesia_locker', 'release_tid', %% Line 60
														  [82|[101|[108|[101|[97|[115|[101|[32|[97|[108|[108|[32|[108|[111|[99|[107|[115|[32|[102|[111|[114|[32|[116|[114|[97|[110|[115|[97|[99|[116|[105|[111|[110|[32|[52|[55|[49|[49]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
						  do  %% Line 61
						      call 'et_collector':'report_event'
							  (Collector, 60, 'my_shell', 'mnesia_tm', 'delete_transaction', %% Line 62
															 [69|[110|[100|[32|[111|[102|[32|[111|[117|[116|[101|[114|[32|[116|[114|[97|[110|[115|[97|[99|[116|[105|[111|[110]]]]]]]]]]]]]]]]]]]]]]]])
						      do  %% Line 63
							  call 'et_collector':'report_event'
							      (Collector, 20, 'my_shell', 'end_outer', %% Line 64
												       [84|[114|[97|[110|[115|[97|[99|[116|[105|[111|[110|[32|[114|[101|[116|[117|[114|[110|[101|[100|[32|[123|[97|[116|[111|[109|[105|[99|[44|[32|[111|[107|[125]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
							  %% Line 65
							  {'collector',Collector}
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor3})
		    -| ['compiler_generated'] )
		end
'mgr_actors'/1 =
    %% Line 70
    fun (_cor0) ->
	case _cor0 of
	  <E = {'event',_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30}> when ( 'true'
										  -| ['compiler_generated'] ) ->
	      let <Actor> =
		  %% Line 71
		  ( fun (_cor2) ->
			%% Line 72
			case _cor2 of
			  %% Line 73
			  <'mnesia_tm'> when 'true' ->
			      'trans_mgr'
			  %% Line 74
			  <'mnesia_locker'> when 'true' ->
			      'lock_mgr'
			  %% Line 75
			  <_cor31> when 'true' ->
			      _cor2
			end
		    -| [{'id',{0,0,'-mgr_actors/1-fun-0-'}}] )
	      in  let <_rec0> =
		      %% Line 78
		      apply Actor
			  (_cor27)
		  in  let <_rec1> =
			  %% Line 79
			  apply Actor
			      (_cor28)
		      in  let <_rec2> =
			      %% Line 80
			      [{'orig_from',_cor27}|%% Line 81
						    [{'orig_to',_cor28}|%% Line 82
									[{'orig_contents',_cor30}|[]]]]
			  in  let <_cor19> =
				  %% Line 80
				  call 'erlang':'setelement'
				      (8, E, _rec2)
			      in  let <_cor20> =
				      %% Line 79
				      call 'erlang':'setelement'
					  (6, _cor19, _rec1)
				  in  let <_cor22> =
					  %% Line 78
					  call 'erlang':'setelement'
					      (5, _cor20, _rec0)
				      in  %% Line 78
					  {'true',_cor22}
	  ( <_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor23})
		  -| [{'function_name',{'mgr_actors',1}}] )
	    -| ['compiler_generated'] )
	end
'start'/0 =
    %% Line 88
    fun () ->
	%% Line 89
	apply 'start'/1
	    ([])
'start'/1 =
    %% Line 91
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 97
	    apply 'filters'/0
		()
	in  let <_cor2> =
		%% Line 97
		call 'erlang':'++'
		    ([{'trace_global','true'}|[{'parent_pid','undefined'}|[{'max_actors','infinity'}|[{'max_events',1000}|[{'active_filter','module_as_actor'}]]]]], _cor0)
	    in  let <_cor4> =
		    %% Line 97
		    call 'erlang':'++'
			(_cor3, _cor2)
		in  %% Line 97
		    call 'et_viewer':'start_link'
			(_cor4)
'live_trans'/0 =
    %% Line 103
    fun () ->
	%% Line 104
	apply 'live_trans'/1
	    ([])
'live_trans'/1 =
    %% Line 106
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 110
	    [{'title',[77|[110|[101|[115|[105|[97|[32|[116|[114|[97|[99|[101|[114]]]]]]]]]]]]]}|[{'hide_actions','true'}|[{'active_filter','named_process_info_nolink'}|_cor0]]]
	in  do  %% Line 110
		call 'et_demo':'start'
		    (_cor2)
		do  %% Line 111
		    call 'mnesia':'start'
			()
		    let <_cor3> =
			%% Line 112
			call 'erlang':'node'
			    ()
		    in  do  %% Line 112
			    call 'mnesia':'create_table'
				('my_tab', [{'ram_copies',[_cor3|[]]}|[]])
			    do  %% Line 113
				call 'et_demo':'trace_mnesia'
				    ()
				let <_cor4> =
				    %% Line 114
				    call 'erlang':'self'
					()
				in  do  %% Line 114
					call 'erlang':'register'
					    ('my_shell', _cor4)
					let <_cor5> =
					    %% Line 116
					    ( fun () ->
						  call 'mnesia':'write'
						      ({'my_tab','key','val'})
					      -| [{'id',{0,0,'-live_trans/1-fun-0-'}}] )
					in  %% Line 116
					    call 'mnesia':'transaction'
						(_cor5)
'trace_mnesia'/0 =
    %% Line 122
    fun () ->
	let <Modules> =
	    %% Line 123
	    call 'mnesia':'ms'
		()
	in  do  %% Line 126
		call 'dbg':'p'
		    ('all', ['call'|['timestamp']])
		do  %% Line 127
		    ( letrec
			  'lc$^0'/1 =
			      fun (_cor5) ->
				  case _cor5 of
				    <[M|_cor4]> when 'true' ->
					do  call 'dbg':'tpl'
						(M, [{'_',[],[{'message',{'caller'}}|[{'return_trace'}]]}])
					    apply 'lc$^0'/1
						(_cor4)
				    <[]> when 'true' ->
					[]
				    ( <_cor5> when 'true' ->
					  ( primop 'match_fail'
						({'function_clause',_cor5})
					    -| [{'function_name',{'lc$^0',1}}] )
				      -| ['compiler_generated'] )
				  end
		      in  apply 'lc$^0'/1
			      (Modules)
		      -| ['list_comprehension'] )
		    let <_cor14> =
			%% Line 128
			( letrec
			      'lc$^1'/1 =
				  fun (_cor11) ->
				      case _cor11 of
					<[M|_cor9]> when 'true' ->
					    let <_cor10> =
						call 'erlang':'whereis'
						    (M)
					    in  ( case <> of
						    <>
							when call 'erlang':'=/='
							      (_cor10,
							       'undefined') ->
							let <_cor12> =
							    apply 'lc$^1'/1
								(_cor9)
							in  ( [M|_cor12]
							      -| ['compiler_generated'] )
						    ( <> when 'true' ->
							  apply 'lc$^1'/1
							      (_cor9)
						      -| ['compiler_generated'] )
						  end
						  -| ['list_comprehension'] )
					<[]> when 'true' ->
					    []
					( <_cor11> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor11})
						-| [{'function_name',{'lc$^1',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lc$^1'/1
				  (Modules)
			  -| ['list_comprehension'] )
		    in  do  %% Line 129
			    ( letrec
				  'lc$^2'/1 =
				      fun (_cor18) ->
					  case _cor18 of
					    <[RS|_cor17]> when 'true' ->
						let <_cor19> =
						    call 'erlang':'whereis'
							(RS)
						in  do  call 'dbg':'p'
							    (_cor19, ['send'|['receive'|['procs'|['timestamp']]]])
							apply 'lc$^2'/1
							    (_cor17)
					    <[]> when 'true' ->
						[]
					    ( <_cor18> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor18})
						    -| [{'function_name',{'lc$^2',1}}] )
					      -| ['compiler_generated'] )
					  end
			      in  apply 'lc$^2'/1
				      (_cor14)
			      -| ['list_comprehension'] )
			    let <_cor22> =
				%% Line 130
				call 'erlang':'self'
				    ()
			    in  do  %% Line 130
				    call 'dbg':'p'
					(_cor22, ['send'|['receive'|['procs'|['timestamp']]]])
				    _cor14
'filters'/0 =
    %% Line 139
    fun () ->
	%% Line 140
	[{'dict_insert',{'filter','module_as_actor'},%% Line 141
						     ( 'module_as_actor'/1
						       -| [{'id',{0,0,'-filters/0-fun-0-'}}] )}|%% Line 142
												[{'dict_insert',{'filter','plain_process_info'},%% Line 143
																		( 'plain_process_info'/1
																		  -| [{'id',{0,0,'-filters/0-fun-1-'}}] )}|%% Line 144
																							   [{'dict_insert',{'filter','plain_process_info_nolink'},%% Line 145
																														  ( 'plain_process_info_nolink'/1
																														    -| [{'id',{0,0,'-filters/0-fun-2-'}}] )}|%% Line 146
																																			     [{'dict_insert',{'filter','named_process_info'},%% Line 147
																																									     ( 'named_process_info'/1
																																									       -| [{'id',{0,0,'-filters/0-fun-3-'}}] )}|%% Line 148
																																															[{'dict_insert',{'filter','named_process_info_nolink'},%% Line 149
																																																					       ( 'named_process_info_nolink'/1
																																																						 -| [{'id',{0,0,'-filters/0-fun-4-'}}] )}|%% Line 150
																																																											  [{'dict_insert',{'filter','node_process_info'},%% Line 151
																																																																	 ( 'node_process_info'/1
																																																																	   -| [{'id',{0,0,'-filters/0-fun-5-'}}] )}|%% Line 152
																																																																						    [{'dict_insert',{'filter','node_process_info_nolink'},%% Line 153
																																																																													  ( 'node_process_info_nolink'/1
																																																																													    -| [{'id',{0,0,'-filters/0-fun-6-'}}] )}|%% Line 154
																																																																																		     [{'dict_insert',{'filter','application_as_actor'},%% Line 155
																																																																																								       ( 'application_as_actor'/1
																																																																																									 -| [{'id',{0,0,'-filters/0-fun-7-'}}] )}|%% Line 156
																																																																																														  []]]]]]]]]
'module_as_actor'/1 =
    %% Line 160
    fun (_cor0) ->
	case _cor0 of
	  <E = {'event',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24}> when ( 'true'
										  -| ['compiler_generated'] ) ->
	      %% Line 161
	      case call 'lists':'keysearch'
		       ('mfa', 1, _cor24) of
		%% Line 162
		<{'value',{'mfa',{M,F,_X_A}}}> when 'true' ->
		    %% Line 163
		    case call 'lists':'keysearch'
			     ('pam_result', 1, _cor24) of
		      %% Line 164
		      <{'value',{'pam_result',{M2,_X_F2,_X_A2}}}> when 'true' ->
			  let <_cor6> =
			      %% Line 165
			      call 'erlang':'setelement'
				  (7, E, F)
			  in  let <_cor7> =
				  %% Line 165
				  call 'erlang':'setelement'
				      (6, _cor6, M)
			      in  let <_cor9> =
				      %% Line 165
				      call 'erlang':'setelement'
					  (5, _cor7, M2)
				  in  %% Line 165
				      {'true',_cor9}
		      %% Line 166
		      <_cor47> when 'true' ->
			  let <_cor11> =
			      %% Line 167
			      call 'erlang':'setelement'
				  (7, E, F)
			  in  let <_cor12> =
				  %% Line 167
				  call 'erlang':'setelement'
				      (6, _cor11, M)
			      in  let <_cor14> =
				      %% Line 167
				      call 'erlang':'setelement'
					  (5, _cor12, M)
				  in  %% Line 167
				      {'true',_cor14}
		    end
		%% Line 169
		<_cor56> when 'true' ->
		    %% Line 170
		    'false'
	      end
	  ( <_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17})
		  -| [{'function_name',{'module_as_actor',1}}] )
	    -| ['compiler_generated'] )
	end
'plain_process_info'/1 =
    %% Line 177
    fun (_cor0) ->
	case _cor0 of
	  <E = {'event',_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11}> when ( 'true'
									     -| ['compiler_generated'] ) ->
	      %% Line 178
	      case _cor10 of
		%% Line 179
		<'send'> when 'true' ->
		    'true'
		%% Line 180
		<'send_to_non_existing_process'> when 'true' ->
		    'true'
		%% Line 181
		<'receive'> when 'true' ->
		    'true'
		%% Line 182
		<'spawn'> when 'true' ->
		    'true'
		%% Line 183
		<'exit'> when 'true' ->
		    'true'
		%% Line 184
		<'link'> when 'true' ->
		    'true'
		%% Line 185
		<'unlink'> when 'true' ->
		    'true'
		%% Line 186
		<'getting_linked'> when 'true' ->
		    'true'
		%% Line 187
		<{'seq_send',_X_Label}> when 'true' ->
		    'true'
		%% Line 188
		<{'seq_receive',_X_Label}> when 'true' ->
		    'true'
		%% Line 189
		<{'seq_print',_X_Label}> when 'true' ->
		    'true'
		%% Line 190
		<{'drop',_X_N}> when 'true' ->
		    'true'
		%% Line 191
		<_cor19> when 'true' ->
		    'false'
	      end
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'plain_process_info',1}}] )
	    -| ['compiler_generated'] )
	end
'plain_process_info_nolink'/1 =
    %% Line 196
    fun (_cor0) ->
	case _cor0 of
	  <E = {'event',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20}> when ( 'true'
										  -| ['compiler_generated'] ) ->
	      let <_cor10> =
		  %% Line 197
		  call 'erlang':'=/='
		      (_cor19, 'link')
	      in  let <_cor7> =
		      %% Line 198
		      call 'erlang':'=/='
			  (_cor19, 'unlink')
		  in  let <_cor11> =
			  %% Line 197
			  call 'erlang':'and'
			      (_cor10, _cor7)
		      in  let <_cor4> =
			      %% Line 199
			      call 'erlang':'=/='
				  (_cor19, 'getting_linked')
			  in  let <_cor12> =
				  %% Line 198
				  call 'erlang':'and'
				      (_cor11, _cor4)
			      in  let <_cor1> =
				      %% Line 200
				      apply 'plain_process_info'/1
					  (E)
				  in  %% Line 199
				      call 'erlang':'and'
					  (_cor12, _cor1)
	  ( <_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13})
		  -| [{'function_name',{'plain_process_info_nolink',1}}] )
	    -| ['compiler_generated'] )
	end
'named_process_info'/1 =
    %% Line 205
    fun (_cor0) ->
	case _cor0 of
	  <E = {'event',_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21}> when ( 'true'
										  -| ['compiler_generated'] ) ->
	      %% Line 206
	      case apply 'plain_process_info'/1
		       (E) of
		%% Line 207
		<'true'> when 'true' ->
		    let <_rec17> =
			%% Line 208
			apply 'pid_to_name'/1
			    (_cor19)
		    in  let <_rec18> =
			    %% Line 209
			    apply 'pid_to_name'/1
				(_cor18)
			in  let <_rec19> =
				%% Line 210
				apply 'msg_to_label'/1
				    (E)
			    in  let <_cor9> =
				    %% Line 210
				    call 'erlang':'setelement'
					(7, E, _rec19)
				in  let <_cor10> =
					%% Line 208
					call 'erlang':'setelement'
					    (6, _cor9, _rec17)
				    in  let <_cor12> =
					    %% Line 209
					    call 'erlang':'setelement'
						(5, _cor10, _rec18)
					in  %% Line 208
					    {'true',_cor12}
		%% Line 211
		<'false'> when 'true' ->
		    %% Line 212
		    'false'
		( <_cor13> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor13})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14})
		  -| [{'function_name',{'named_process_info',1}}] )
	    -| ['compiler_generated'] )
	end
'named_process_info_nolink'/1 =
    %% Line 215
    fun (_cor0) ->
	case _cor0 of
	  <E = {'event',_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21}> when ( 'true'
										  -| ['compiler_generated'] ) ->
	      %% Line 216
	      case apply 'plain_process_info_nolink'/1
		       (E) of
		%% Line 217
		<'true'> when 'true' ->
		    let <_rec23> =
			%% Line 218
			apply 'pid_to_name'/1
			    (_cor19)
		    in  let <_rec24> =
			    %% Line 219
			    apply 'pid_to_name'/1
				(_cor18)
			in  let <_rec25> =
				%% Line 220
				apply 'msg_to_label'/1
				    (E)
			    in  let <_cor9> =
				    %% Line 220
				    call 'erlang':'setelement'
					(7, E, _rec25)
				in  let <_cor10> =
					%% Line 218
					call 'erlang':'setelement'
					    (6, _cor9, _rec23)
				    in  let <_cor12> =
					    %% Line 219
					    call 'erlang':'setelement'
						(5, _cor10, _rec24)
					in  %% Line 218
					    {'true',_cor12}
		%% Line 221
		<'false'> when 'true' ->
		    %% Line 222
		    'false'
		( <_cor13> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor13})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14})
		  -| [{'function_name',{'named_process_info_nolink',1}}] )
	    -| ['compiler_generated'] )
	end
'pid_to_name'/1 =
    %% Line 225
    fun (_cor0) ->
	case _cor0 of
	  <Pid>
	      when call 'erlang':'is_pid'
		    (_cor0) ->
	      %% Line 226
	      case call 'erlang':'process_info'
		       (Pid, 'registered_name') of
		%% Line 227
		<{'registered_name',Name}> when 'true' ->
		    %% Line 228
		    Name
		%% Line 229
		<_cor4> when 'true' ->
		    %% Line 230
		    Pid
	      end
	  %% Line 232
	  <{Name,Node}>
	      when try
		    let <_cor2> =
			call 'erlang':'node'
			    ()
		    in  call 'erlang':'=='
			    (Node, _cor2)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 233
	      Name
	  %% Line 234
	  <Other> when 'true' ->
	      %% Line 235
	      Other
	end
'node_process_info'/1 =
    %% Line 239
    fun (_cor0) ->
	case _cor0 of
	  <E = {'event',_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21}> when ( 'true'
										  -| ['compiler_generated'] ) ->
	      %% Line 240
	      case apply 'plain_process_info'/1
		       (E) of
		%% Line 241
		<'true'> when 'true' ->
		    let <_rec29> =
			%% Line 242
			apply 'pid_to_node'/1
			    (_cor19)
		    in  let <_rec30> =
			    %% Line 243
			    apply 'pid_to_node'/1
				(_cor18)
			in  let <_rec31> =
				%% Line 244
				apply 'msg_to_label'/1
				    (E)
			    in  let <_cor9> =
				    %% Line 244
				    call 'erlang':'setelement'
					(7, E, _rec31)
				in  let <_cor10> =
					%% Line 242
					call 'erlang':'setelement'
					    (6, _cor9, _rec29)
				    in  let <_cor12> =
					    %% Line 243
					    call 'erlang':'setelement'
						(5, _cor10, _rec30)
					in  %% Line 242
					    {'true',_cor12}
		%% Line 245
		<'false'> when 'true' ->
		    %% Line 246
		    'false'
		( <_cor13> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor13})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14})
		  -| [{'function_name',{'node_process_info',1}}] )
	    -| ['compiler_generated'] )
	end
'node_process_info_nolink'/1 =
    %% Line 248
    fun (_cor0) ->
	case _cor0 of
	  <E = {'event',_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21}> when ( 'true'
										  -| ['compiler_generated'] ) ->
	      %% Line 249
	      case apply 'plain_process_info_nolink'/1
		       (E) of
		%% Line 250
		<'true'> when 'true' ->
		    let <_rec35> =
			%% Line 251
			apply 'pid_to_node'/1
			    (_cor19)
		    in  let <_rec36> =
			    %% Line 252
			    apply 'pid_to_node'/1
				(_cor18)
			in  let <_rec37> =
				%% Line 253
				apply 'msg_to_label'/1
				    (E)
			    in  let <_cor9> =
				    %% Line 253
				    call 'erlang':'setelement'
					(7, E, _rec37)
				in  let <_cor10> =
					%% Line 251
					call 'erlang':'setelement'
					    (6, _cor9, _rec35)
				    in  let <_cor12> =
					    %% Line 252
					    call 'erlang':'setelement'
						(5, _cor10, _rec36)
					in  %% Line 251
					    {'true',_cor12}
		%% Line 254
		<'false'> when 'true' ->
		    %% Line 255
		    'false'
		( <_cor13> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor13})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14})
		  -| [{'function_name',{'node_process_info_nolink',1}}] )
	    -| ['compiler_generated'] )
	end
'pid_to_node'/1 =
    %% Line 258
    fun (_cor0) ->
	case _cor0 of
	  <Pid>
	      when call 'erlang':'is_pid'
		    (_cor0) ->
	      %% Line 259
	      call 'erlang':'node'
		  (Pid)
	  %% Line 260
	  <Name>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      %% Line 261
	      call 'erlang':'node'
		  ()
	  %% Line 262
	  <{_X_Name,Node}>
	      when call 'erlang':'is_atom'
		    (Node) ->
	      %% Line 263
	      Node
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'pid_to_node',1}}] )
	    -| ['compiler_generated'] )
	end
'application_as_actor'/1 =
    %% Line 267
    fun (_cor0) ->
	case _cor0 of
	  <E = {'event',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20}> when ( 'true'
										  -| ['compiler_generated'] ) ->
	      let <_rec41> =
		  %% Line 268
		  apply 'pid_to_application'/1
		      (_cor18)
	      in  let <_rec42> =
		      %% Line 269
		      apply 'pid_to_application'/1
			  (_cor17)
		  in  let <_rec43> =
			  %% Line 270
			  apply 'msg_to_label'/1
			      (E)
		      in  let <_cor9> =
			      %% Line 270
			      call 'erlang':'setelement'
				  (7, E, _rec43)
			  in  let <_cor10> =
				  %% Line 268
				  call 'erlang':'setelement'
				      (6, _cor9, _rec41)
			      in  let <_cor12> =
				      %% Line 269
				      call 'erlang':'setelement'
					  (5, _cor10, _rec42)
				  in  %% Line 268
				      {'true',_cor12}
	  ( <_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13})
		  -| [{'function_name',{'application_as_actor',1}}] )
	    -| ['compiler_generated'] )
	end
'pid_to_application'/1 =
    %% Line 272
    fun (_cor0) ->
	case _cor0 of
	  <Pid>
	      when call 'erlang':'is_pid'
		    (_cor0) ->
	      %% Line 273
	      case call 'application':'get_application'
		       (Pid) of
		%% Line 274
		<{'ok',Name}> when 'true' ->
		    %% Line 275
		    Name
		%% Line 276
		<_cor3> when 'true' ->
		    %% Line 277
		    [85|[78|[75|[78|[79|[87|[78]]]]]]]
	      end
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'pid_to_application',1}}] )
	    -| ['compiler_generated'] )
	end
'msg_to_label'/1 =
    %% Line 282
    fun (_cor0) ->
	case _cor0 of
	  <E = {'event',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14}> when ( 'true'
										-| ['compiler_generated'] ) ->
	      %% Line 283
	      case call 'lists':'keysearch'
		       ('msg', 1, _cor14) of
		%% Line 284
		<{'value',{'msg',Msg}}> when 'true' ->
		    %% Line 285
		    apply 'mnesia_msg_to_label'/2
			(Msg, _cor13)
		%% Line 286
		<'false'> when 'true' ->
		    _cor13
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor6})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7})
		  -| [{'function_name',{'msg_to_label',1}}] )
	    -| ['compiler_generated'] )
	end
'mnesia_msg_to_label'/2 =
    %% Line 290
    fun (_cor1,_cor0) ->
	%% Line 291
	case _cor1 of
	  %% Line 292
	  <{'mnesia_tm',_X_Node,Reply}> when 'true' ->
	      %% Line 293
	      case Reply of
		%% Line 294
		<'ok'> when 'true' ->
		    'ok'
		%% Line 295
		<'store_erased'> when 'true' ->
		    'store_erased'
		%% Line 296
		<'unblocked'> when 'true' ->
		    'unblocked'
		%% Line 297
		<{_X_From,_X_Ref,'start_outer'}> when 'true' ->
		    'start_outer'
		%% Line 298
		<{'aborted',_X_Tid}> when 'true' ->
		    'aborted'
		%% Line 299
		<{'committed',_X_Tid}> when 'true' ->
		    'committed'
		%% Line 300
		<{'dirty_res',_X_Res}> when 'true' ->
		    'dirty_res'
		%% Line 301
		<{'error',_X_Reason}> when 'true' ->
		    'error'
		%% Line 302
		<{'info',_X_Part,_X_Coord}> when 'true' ->
		    'info'
		%% Line 303
		<{'mnesia_tm',_cor6,{'EXIT',_X_Reason}}>
		    when call 'erlang':'=:='
			  (_cor6,
			   _X_Node) ->
		    'EXIT'
		%% Line 304
		<{'mnesia_tm',_cor7,{'dirty_res',_X_Reply}}>
		    when call 'erlang':'=:='
			  (_cor7,
			   _X_Node) ->
		    'dirty_res'
		%% Line 305
		<{'new_store',_X_Etab}> when 'true' ->
		    'new_store'
		%% Line 306
		<{'new_tid',_X_Tid,_X_Etab}> when 'true' ->
		    'new_tid'
		%% Line 307
		<{'ok',_X_Name,_X_IgnoreNew,_cor8}>
		    when call 'erlang':'=:='
			  (_cor8,
			   _X_Node) ->
		    'ok'
		%% Line 308
		<{'restarted',_X_Tid}> when 'true' ->
		    'restarted'
		%% Line 309
		<{'vote_yes',_X_Tid,_X_Self}> when 'true' ->
		    'vote_yes'
		%% Line 310
		<{'vote_yes',_X_Tid}> when 'true' ->
		    'vote_yes'
		%% Line 311
		<{'acc_pre_commit',_X_Tid,_X_Self,_X_Expect}> when 'true' ->
		    'acc_pre_commit'
		%% Line 312
		<{'schema_commit',_X_Tid,_X_Self}> when 'true' ->
		    'schema_commit'
		%% Line 313
		<{'vote_no',_X_Tid,_X_Reason}> when 'true' ->
		    'vote_no'
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 315
	  <{'$gen_cast','allow_garb'}> when 'true' ->
	      'allow_garb'
	  %% Line 316
	  <{'$gen_cast',{'release_schema_commit_lock',_X_Pid}}> when 'true' ->
	      'release_schema_commit_lock'
	  %% Line 317
	  <{'$gen_call',_X_Ref,{'mktab',_X_Name,_X_Args}}> when 'true' ->
	      'mktab'
	  %% Line 318
	  <{'$gen_call',_X_Ref,'wait_for_schema_commit_lock'}> when 'true' ->
	      'wait_for_schema_commit_lock'
	  %% Line 319
	  <{'$gen_call',_X_Ref,{'set_lock',_X_Key}}> when 'true' ->
	      'set_global_lock'
	  %% Line 320
	  <{'$gen_call',_X_Ref,{'del_lock',_X_Key}}> when 'true' ->
	      'del_global_lock'
	  %% Line 321
	  <{'$gen_call',_X_Ref,{'what_happened',_X_Decision,_X_Tid}}> when 'true' ->
	      'what_happened'
	  %% Line 322
	  <{'async_dump_log',_X_Reason}> when 'true' ->
	      'async_dump_log'
	  %% Line 323
	  <'check_overload'> when 'true' ->
	      'check_overload'
	  %% Line 324
	  <{'dumper_done',_X_Pid,'dumped'}> when 'true' ->
	      'dumper_done'
	  %% Line 325
	  <'garb_decisions'> when 'true' ->
	      'garb_decisions'
	  %% Line 326
	  <'timeout'> when 'true' ->
	      'timeout'
	  %% Line 327
	  <{'mnesia_locker',_X_Node,'granted'}> when 'true' ->
	      'granted'
	  %% Line 328
	  <{'mnesia_locker',_X_Node,{'granted',_X_Lookup}}> when 'true' ->
	      'granted'
	  %% Line 329
	  <{'EXIT',_X_Pid,_X_Reason}> when 'true' ->
	      'EXIT'
	  %% Line 330
	  <{_X_From,'info'}> when 'true' ->
	      'info'
	  %% Line 331
	  <{_X_From,'start_outer'}> when 'true' ->
	      'start_outer'
	  %% Line 332
	  <{_X_From,{'add_store',_X_Tid}}> when 'true' ->
	      'add_store'
	  %% Line 333
	  <{_X_From,{'ask_commit',_X_Prot,_X_Tid,_X_Commit,_X_DiscNs,_X_RamNs}}> when 'true' ->
	      'ask_commit'
	  %% Line 334
	  <{_X_From,{'async_dirty',_X_Tid,_X_Commit,_X_Tab}}> when 'true' ->
	      'async_dirty'
	  %% Line 335
	  <{_X_From,{'block_tab',_X_Tab}}> when 'true' ->
	      'block_tab'
	  %% Line 336
	  <{_X_From,{'del_store',_X_Tid,_X_Current,_X_Obsolete,_X_Prop}}> when 'true' ->
	      'del_store'
	  %% Line 337
	  <{_X_From,{'prepare_checkpoint',_X_Cp}}> when 'true' ->
	      'prepare_checkpoint'
	  %% Line 338
	  <{_X_From,{'read',_X_Tid,_X_Oid}}> when 'true' ->
	      'try_read_lock'
	  %% Line 339
	  <{_X_From,{'read_write',_X_Tid,_X_Oid}}> when 'true' ->
	      'try_read_write_lock'
	  %% Line 340
	  <{_X_From,{'restart',_X_Tid,_X_Store}}> when 'true' ->
	      'restart'
	  %% Line 341
	  <{_X_From,{'sync_dirty',_X_Tid,_X_Commit,_X_Tab}}> when 'true' ->
	      'sync_dirty'
	  %% Line 342
	  <{_X_From,{'unblock_me',_X_Tab}}> when 'true' ->
	      'unblock_me'
	  %% Line 343
	  <{_X_From,{'unblock_tab',_X_Tab}}> when 'true' ->
	      'unblock_tab'
	  %% Line 344
	  <{_X_From,{'write',_X_Tid,_X_Oid}}> when 'true' ->
	      'try_write_lock'
	  %% Line 345
	  <{_X_Tid,'committed'}> when 'true' ->
	      'committed'
	  %% Line 346
	  <{_X_Tid,'do_commit'}> when 'true' ->
	      'do_commit'
	  %% Line 347
	  <{_X_Tid,'pre_commit'}> when 'true' ->
	      'pre_commit'
	  %% Line 348
	  <{_X_Tid,'simple_commit'}> when 'true' ->
	      'simple_commit'
	  %% Line 349
	  <{_X_Tid,{'do_abort',_X_Reason}}> when 'true' ->
	      'do_abort'
	  %% Line 350
	  <{'activity_ended',_cor9,_X_Pid}> when 'true' ->
	      'activity_ended'
	  %% Line 351
	  <{'ask_commit',_X_Protocol,_X_Tid,_X_Bin,_X_DiscNs,_X_RamNs}> when 'true' ->
	      'ask_commit'
	  %% Line 352
	  <{'delete_transaction',_X_Tid}> when 'true' ->
	      'delete_transaction'
	  %% Line 353
	  <{'mnesia_down',_X_Node}> when 'true' ->
	      'mnesia_down'
	  %% Line 354
	  <{'release_tid',_X_Tid}> when 'true' ->
	      'release_tid'
	  %% Line 355
	  <{'sync_trans_serial',_X_Tid}> when 'true' ->
	      'sync_trans_serial'
	  %% Line 356
	  <{'system',_X_From,_X_Msg}> when 'true' ->
	      'system'
	  %% Line 357
	  <{'transaction_done',_X_Res,_X_Pid}> when 'true' ->
	      'transaction_done'
	  %% Line 358
	  <{_X_Tid,{'do_abort',_X_Reason}}> when 'true' ->
	      'do_abort'
	  %% Line 359
	  <{_X_Ref,'granted'}> when 'true' ->
	      'granted'
	  %% Line 360
	  <_cor10> when 'true' ->
	      _cor0
	end
's'/0 =
    %% Line 365
    fun () ->
	let <_cor0> =
	    %% Line 366
	    ( fun () ->
		  do  apply 't'/0
			  ()
		      call 'timer':'sleep'
			  ('infinity')
	      -| [{'id',{0,0,'-s/0-fun-0-'}}] )
	in  %% Line 366
	    call 'erlang':'spawn'
		(_cor0)
't'/0 =
    %% Line 368
    fun () ->
	%% Line 369
	apply 't'/1
	    (500)
't'/1 =
    %% Line 371
    fun (_cor0) ->
	let <Collector> =
	    %% Line 372
	    apply 'init'/0
		()
	in  do  %% Line 373
		apply 'gen'/3
		    (Collector, 1, _cor0)
		%% Line 374
		Collector
'init'/0 =
    %% Line 376
    fun () ->
	let <EvenFilter> =
	    %% Line 378
	    ( fun (_cor4) ->
		  case _cor4 of
		    <{'event',_cor12,_cor13,_cor14,_cor15,_cor16,Label,_cor17}> when 'true' ->
			let <_cor2> =
			    catch
				let <_cor0> =
				    %% Line 379
				    call 'erlang':'list_to_integer'
					(Label)
				in  let <_cor1> =
					%% Line 379
					call 'erlang':'div'
					    (_cor0, 10)
				    in  %% Line 379
					call 'erlang':'rem'
					    (_cor1, 2)
			in  %% Line 379
			    case _cor2 of
			      %% Line 380
			      <0> when 'true' ->
				  %% Line 381
				  'false'
			      %% Line 382
			      <_cor18> when 'true' ->
				  %% Line 383
				  'true'
			    end
		    ( <_cor5> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor5})
			    -| [{'function_name',{'-init/0-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-init/0-fun-0-'}}] )
	in  let <OddFilter> =
		%% Line 386
		( fun (_cor8) ->
		      let <_cor7> =
			  apply EvenFilter
			      (_cor8)
		      in  call 'erlang':'not'
			      (_cor7)
		  -| [{'id',{0,0,'-init/0-fun-1-'}}] )
	    in  %% Line 387
		case call 'et_viewer':'start_link'
			 ([{'dict_insert',{'filter','odd_tens'},EvenFilter}|%% Line 388
									    [{'dict_insert',{'filter','even_tens'},OddFilter}|%% Line 389
															      [{'active_filter','odd_tens'}]]]) of
		  <{'ok',Viewer}> when 'true' ->
		      %% Line 390
		      call 'et_viewer':'get_collector_pid'
			  (Viewer)
		  ( <_cor11> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor11})
		    -| ['compiler_generated'] )
		end
'gen'/3 =
    %% Line 392
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 393
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor6) ->
			  case _cor6 of
			    <[I|_cor4]> when 'true' ->
				let <_cor7> =
				    call 'erlang':'integer_to_list'
					(I)
				in  do  call 'et_collector':'report_event'
					    (_cor2, 20, 'from', 'to', _cor7, [I|[]])
					apply 'lc$^0'/1
					    (_cor4)
			    <[]> when 'true' ->
				[]
			    ( <_cor6> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor6})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  let <_cor5> =
		      call 'lists':'seq'
			  (_cor1, _cor0)
		  in  apply 'lc$^0'/1
			  (_cor5)
	      -| ['list_comprehension'] )
	    %% Line 394
	    'ok'
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('et_demo')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('et_demo', _cor0)
end