module 'ELDAPv3' ['bit_string_format'/0,
		  'dec_AbandonRequest'/2,
		  'dec_AddRequest'/2,
		  'dec_AddResponse'/2,
		  'dec_AssertionValue'/2,
		  'dec_Attribute'/2,
		  'dec_AttributeDescription'/2,
		  'dec_AttributeList'/2,
		  'dec_AttributeSelection'/2,
		  'dec_AttributeValue'/2,
		  'dec_AttributeValueAssertion'/2,
		  'dec_AuthenticationChoice'/2,
		  'dec_BindRequest'/2,
		  'dec_BindResponse'/2,
		  'dec_CompareRequest'/2,
		  'dec_CompareResponse'/2,
		  'dec_Control'/2,
		  'dec_Controls'/2,
		  'dec_DelRequest'/2,
		  'dec_DelResponse'/2,
		  'dec_ExtendedRequest'/2,
		  'dec_ExtendedResponse'/2,
		  'dec_Filter'/2,
		  'dec_IntermediateResponse'/2,
		  'dec_LDAPDN'/2,
		  'dec_LDAPMessage'/2,
		  'dec_LDAPOID'/2,
		  'dec_LDAPResult'/2,
		  'dec_LDAPString'/2,
		  'dec_MatchingRuleAssertion'/2,
		  'dec_MatchingRuleId'/2,
		  'dec_MessageID'/2,
		  'dec_ModifyDNRequest'/2,
		  'dec_ModifyDNResponse'/2,
		  'dec_ModifyRequest'/2,
		  'dec_ModifyResponse'/2,
		  'dec_PartialAttribute'/2,
		  'dec_PartialAttributeList'/2,
		  'dec_Referral'/2,
		  'dec_RelativeLDAPDN'/2,
		  'dec_SaslCredentials'/2,
		  'dec_SearchRequest'/2,
		  'dec_SearchResultDone'/2,
		  'dec_SearchResultEntry'/2,
		  'dec_SearchResultReference'/2,
		  'dec_SubstringFilter'/2,
		  'dec_URI'/2,
		  'dec_UnbindRequest'/2,
		  'decode'/2,
		  'dialyzer-suppressions'/1,
		  'enc_AbandonRequest'/2,
		  'enc_AddRequest'/2,
		  'enc_AddResponse'/2,
		  'enc_AssertionValue'/2,
		  'enc_Attribute'/2,
		  'enc_AttributeDescription'/2,
		  'enc_AttributeList'/2,
		  'enc_AttributeSelection'/2,
		  'enc_AttributeValue'/2,
		  'enc_AttributeValueAssertion'/2,
		  'enc_AuthenticationChoice'/2,
		  'enc_BindRequest'/2,
		  'enc_BindResponse'/2,
		  'enc_CompareRequest'/2,
		  'enc_CompareResponse'/2,
		  'enc_Control'/2,
		  'enc_Controls'/2,
		  'enc_DelRequest'/2,
		  'enc_DelResponse'/2,
		  'enc_ExtendedRequest'/2,
		  'enc_ExtendedResponse'/2,
		  'enc_Filter'/2,
		  'enc_IntermediateResponse'/2,
		  'enc_LDAPDN'/2,
		  'enc_LDAPMessage'/2,
		  'enc_LDAPOID'/2,
		  'enc_LDAPResult'/2,
		  'enc_LDAPString'/2,
		  'enc_MatchingRuleAssertion'/2,
		  'enc_MatchingRuleId'/2,
		  'enc_MessageID'/2,
		  'enc_ModifyDNRequest'/2,
		  'enc_ModifyDNResponse'/2,
		  'enc_ModifyRequest'/2,
		  'enc_ModifyResponse'/2,
		  'enc_PartialAttribute'/2,
		  'enc_PartialAttributeList'/2,
		  'enc_Referral'/2,
		  'enc_RelativeLDAPDN'/2,
		  'enc_SaslCredentials'/2,
		  'enc_SearchRequest'/2,
		  'enc_SearchResultDone'/2,
		  'enc_SearchResultEntry'/2,
		  'enc_SearchResultReference'/2,
		  'enc_SubstringFilter'/2,
		  'enc_URI'/2,
		  'enc_UnbindRequest'/2,
		  'encode'/2,
		  'encoding_rule'/0,
		  'info'/0,
		  'legacy_erlang_types'/0,
		  'maxInt'/0,
		  'module_info'/0,
		  'module_info'/1]
    attributes [%% Line 7
		'asn1_info' =
		    %% Line 7
		    [{'vsn','3.0.1'}|[{'module','ELDAPv3'}|[{'options',['warnings'|['ber'|['errors'|[{'cwd',[47|[104|[111|[109|[101|[47|[103|[108|[101|[98|[101|[114|[47|[99|[111|[100|[101|[47|[111|[116|[112|[47|[108|[105|[98|[47|[101|[108|[100|[97|[112|[47|[115|[114|[99]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}|[{'outdir',[47|[104|[111|[109|[101|[47|[103|[108|[101|[98|[101|[114|[47|[99|[111|[100|[101|[47|[111|[116|[112|[47|[108|[105|[98|[47|[101|[108|[100|[97|[112|[47|[115|[114|[99|[47|[46|[46|[47|[101|[98|[105|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}|[{'i',[47|[104|[111|[109|[101|[47|[103|[108|[101|[98|[101|[114|[47|[99|[111|[100|[101|[47|[111|[116|[112|[47|[108|[105|[98|[47|[101|[108|[100|[97|[112|[47|[115|[114|[99|[47|[46|[46|[47|[105|[110|[99|[108|[117|[100|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}|[{'i',[47|[104|[111|[109|[101|[47|[103|[108|[101|[98|[101|[114|[47|[99|[111|[100|[101|[47|[111|[116|[112|[47|[108|[105|[98|[47|[101|[108|[100|[97|[112|[47|[115|[114|[99|[47|[46|[46|[47|[101|[98|[105|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}|['warnings_as_errors'|['debug_info'|['legacy_erlang_types'|['to_core'|[{'i',[46]}|[{'i',[47|[104|[111|[109|[101|[47|[103|[108|[101|[98|[101|[114|[47|[99|[111|[100|[101|[47|[111|[116|[112|[47|[108|[105|[98|[47|[101|[108|[100|[97|[112|[47|[115|[114|[99|[47|[46|[46|[47|[97|[115|[110|[49]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}]]]]]]]]]]]]]}]]]]
'encoding_rule'/0 =
    %% Line 130
    fun () ->
	'ber'
'bit_string_format'/0 =
    %% Line 132
    fun () ->
	'bitstring'
'legacy_erlang_types'/0 =
    %% Line 134
    fun () ->
	'true'
'encode'/2 =
    %% Line 136
    fun (_cor1,_cor0) ->
	%% Line 137
	try
	    let <_cor2> =
		apply 'encode_disp'/2
		    (_cor1, _cor0)
	    in  let <_cor3> =
		    call 'erlang':'element'
			(1, _cor2)
		in  call 'erlang':'iolist_to_binary'
			(_cor3)
	of <_cor4> ->
	    %% Line 139
	    {'ok',_cor4}
	catch <_cor8,_cor7,_cor6> ->
	    case <_cor8,_cor7,_cor6> of
	      %% Line 141
	      <Class,Exception,_cor14>
		  when let <_cor9> =
			call 'erlang':'=:='
			    (Class, 'error')
		    in  let <_cor10> =
			    call 'erlang':'=:='
				(Class, 'exit')
			in  call 'erlang':'or'
				(_cor9, _cor10) ->
		  %% Line 142
		  case Exception of
		    %% Line 143
		    <Error = {'error',Reason}> when 'true' ->
			%% Line 144
			Error
		    %% Line 145
		    <Reason> when 'true' ->
			%% Line 146
			{'error',{'asn1',Reason}}
		  end
	      ( <_cor8,_cor7,_cor6> when 'true' ->
		    primop 'raise'
			(_cor6, _cor7)
		-| ['compiler_generated'] )
	    end
'decode'/2 =
    %% Line 150
    fun (_cor1,_cor0) ->
	%% Line 151
	try
	    let <_cor2> =
		apply 'ber_decode_nif'/1
		    (_cor0)
	    in  let <_cor3> =
		    call 'erlang':'element'
			(1, _cor2)
		in  apply 'decode_disp'/2
			(_cor1, _cor3)
	of <_cor4> ->
	    %% Line 153
	    {'ok',_cor4}
	catch <_cor8,_cor7,_cor6> ->
	    case <_cor8,_cor7,_cor6> of
	      %% Line 155
	      <Class,Exception,_cor14>
		  when let <_cor9> =
			call 'erlang':'=:='
			    (Class, 'error')
		    in  let <_cor10> =
			    call 'erlang':'=:='
				(Class, 'exit')
			in  call 'erlang':'or'
				(_cor9, _cor10) ->
		  %% Line 156
		  case Exception of
		    %% Line 157
		    <Error = {'error',Reason}> when 'true' ->
			%% Line 158
			Error
		    %% Line 159
		    <Reason> when 'true' ->
			%% Line 160
			{'error',{'asn1',Reason}}
		  end
	      ( <_cor8,_cor7,_cor6> when 'true' ->
		    primop 'raise'
			(_cor6, _cor7)
		-| ['compiler_generated'] )
	    end
'encode_disp'/2 =
    %% Line 164
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'LDAPMessage',Data> when 'true' ->
	      apply 'enc_LDAPMessage'/1
		  (Data)
	  %% Line 165
	  <'MessageID',Data> when 'true' ->
	      apply 'enc_MessageID'/1
		  (Data)
	  %% Line 166
	  <'LDAPString',Data> when 'true' ->
	      apply 'enc_LDAPString'/1
		  (Data)
	  %% Line 167
	  <'LDAPOID',Data> when 'true' ->
	      apply 'enc_LDAPOID'/1
		  (Data)
	  %% Line 168
	  <'LDAPDN',Data> when 'true' ->
	      apply 'enc_LDAPDN'/1
		  (Data)
	  %% Line 169
	  <'RelativeLDAPDN',Data> when 'true' ->
	      apply 'enc_RelativeLDAPDN'/1
		  (Data)
	  %% Line 170
	  <'AttributeDescription',Data> when 'true' ->
	      apply 'enc_AttributeDescription'/1
		  (Data)
	  %% Line 171
	  <'AttributeValue',Data> when 'true' ->
	      apply 'enc_AttributeValue'/1
		  (Data)
	  %% Line 172
	  <'AttributeValueAssertion',Data> when 'true' ->
	      apply 'enc_AttributeValueAssertion'/1
		  (Data)
	  %% Line 173
	  <'AssertionValue',Data> when 'true' ->
	      apply 'enc_AssertionValue'/1
		  (Data)
	  %% Line 174
	  <'PartialAttribute',Data> when 'true' ->
	      apply 'enc_PartialAttribute'/1
		  (Data)
	  %% Line 175
	  <'Attribute',Data> when 'true' ->
	      apply 'enc_Attribute'/1
		  (Data)
	  %% Line 176
	  <'MatchingRuleId',Data> when 'true' ->
	      apply 'enc_MatchingRuleId'/1
		  (Data)
	  %% Line 177
	  <'LDAPResult',Data> when 'true' ->
	      apply 'enc_LDAPResult'/1
		  (Data)
	  %% Line 178
	  <'Referral',Data> when 'true' ->
	      apply 'enc_Referral'/1
		  (Data)
	  %% Line 179
	  <'URI',Data> when 'true' ->
	      apply 'enc_URI'/1
		  (Data)
	  %% Line 180
	  <'Controls',Data> when 'true' ->
	      apply 'enc_Controls'/1
		  (Data)
	  %% Line 181
	  <'Control',Data> when 'true' ->
	      apply 'enc_Control'/1
		  (Data)
	  %% Line 182
	  <'BindRequest',Data> when 'true' ->
	      apply 'enc_BindRequest'/1
		  (Data)
	  %% Line 183
	  <'AuthenticationChoice',Data> when 'true' ->
	      apply 'enc_AuthenticationChoice'/1
		  (Data)
	  %% Line 184
	  <'SaslCredentials',Data> when 'true' ->
	      apply 'enc_SaslCredentials'/1
		  (Data)
	  %% Line 185
	  <'BindResponse',Data> when 'true' ->
	      apply 'enc_BindResponse'/1
		  (Data)
	  %% Line 186
	  <'UnbindRequest',Data> when 'true' ->
	      apply 'enc_UnbindRequest'/1
		  (Data)
	  %% Line 187
	  <'SearchRequest',Data> when 'true' ->
	      apply 'enc_SearchRequest'/1
		  (Data)
	  %% Line 188
	  <'AttributeSelection',Data> when 'true' ->
	      apply 'enc_AttributeSelection'/1
		  (Data)
	  %% Line 189
	  <'Filter',Data> when 'true' ->
	      apply 'enc_Filter'/1
		  (Data)
	  %% Line 190
	  <'SubstringFilter',Data> when 'true' ->
	      apply 'enc_SubstringFilter'/1
		  (Data)
	  %% Line 191
	  <'MatchingRuleAssertion',Data> when 'true' ->
	      apply 'enc_MatchingRuleAssertion'/1
		  (Data)
	  %% Line 192
	  <'SearchResultEntry',Data> when 'true' ->
	      apply 'enc_SearchResultEntry'/1
		  (Data)
	  %% Line 193
	  <'PartialAttributeList',Data> when 'true' ->
	      apply 'enc_PartialAttributeList'/1
		  (Data)
	  %% Line 194
	  <'SearchResultReference',Data> when 'true' ->
	      apply 'enc_SearchResultReference'/1
		  (Data)
	  %% Line 195
	  <'SearchResultDone',Data> when 'true' ->
	      apply 'enc_SearchResultDone'/1
		  (Data)
	  %% Line 196
	  <'ModifyRequest',Data> when 'true' ->
	      apply 'enc_ModifyRequest'/1
		  (Data)
	  %% Line 197
	  <'ModifyResponse',Data> when 'true' ->
	      apply 'enc_ModifyResponse'/1
		  (Data)
	  %% Line 198
	  <'AddRequest',Data> when 'true' ->
	      apply 'enc_AddRequest'/1
		  (Data)
	  %% Line 199
	  <'AttributeList',Data> when 'true' ->
	      apply 'enc_AttributeList'/1
		  (Data)
	  %% Line 200
	  <'AddResponse',Data> when 'true' ->
	      apply 'enc_AddResponse'/1
		  (Data)
	  %% Line 201
	  <'DelRequest',Data> when 'true' ->
	      apply 'enc_DelRequest'/1
		  (Data)
	  %% Line 202
	  <'DelResponse',Data> when 'true' ->
	      apply 'enc_DelResponse'/1
		  (Data)
	  %% Line 203
	  <'ModifyDNRequest',Data> when 'true' ->
	      apply 'enc_ModifyDNRequest'/1
		  (Data)
	  %% Line 204
	  <'ModifyDNResponse',Data> when 'true' ->
	      apply 'enc_ModifyDNResponse'/1
		  (Data)
	  %% Line 205
	  <'CompareRequest',Data> when 'true' ->
	      apply 'enc_CompareRequest'/1
		  (Data)
	  %% Line 206
	  <'CompareResponse',Data> when 'true' ->
	      apply 'enc_CompareResponse'/1
		  (Data)
	  %% Line 207
	  <'AbandonRequest',Data> when 'true' ->
	      apply 'enc_AbandonRequest'/1
		  (Data)
	  %% Line 208
	  <'ExtendedRequest',Data> when 'true' ->
	      apply 'enc_ExtendedRequest'/1
		  (Data)
	  %% Line 209
	  <'ExtendedResponse',Data> when 'true' ->
	      apply 'enc_ExtendedResponse'/1
		  (Data)
	  %% Line 210
	  <'IntermediateResponse',Data> when 'true' ->
	      apply 'enc_IntermediateResponse'/1
		  (Data)
	  %% Line 211
	  <Type,_X_Data> when 'true' ->
	      call 'erlang':'exit'
		  ({'error',{'asn1',{'undefined_type',Type}}})
	end
'decode_disp'/2 =
    %% Line 214
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'LDAPMessage',Data> when 'true' ->
	      apply 'dec_LDAPMessage'/1
		  (Data)
	  %% Line 215
	  <'MessageID',Data> when 'true' ->
	      apply 'dec_MessageID'/1
		  (Data)
	  %% Line 216
	  <'LDAPString',Data> when 'true' ->
	      apply 'dec_LDAPString'/1
		  (Data)
	  %% Line 217
	  <'LDAPOID',Data> when 'true' ->
	      apply 'dec_LDAPOID'/1
		  (Data)
	  %% Line 218
	  <'LDAPDN',Data> when 'true' ->
	      apply 'dec_LDAPDN'/1
		  (Data)
	  %% Line 219
	  <'RelativeLDAPDN',Data> when 'true' ->
	      apply 'dec_RelativeLDAPDN'/1
		  (Data)
	  %% Line 220
	  <'AttributeDescription',Data> when 'true' ->
	      apply 'dec_AttributeDescription'/1
		  (Data)
	  %% Line 221
	  <'AttributeValue',Data> when 'true' ->
	      apply 'dec_AttributeValue'/1
		  (Data)
	  %% Line 222
	  <'AttributeValueAssertion',Data> when 'true' ->
	      apply 'dec_AttributeValueAssertion'/1
		  (Data)
	  %% Line 223
	  <'AssertionValue',Data> when 'true' ->
	      apply 'dec_AssertionValue'/1
		  (Data)
	  %% Line 224
	  <'PartialAttribute',Data> when 'true' ->
	      apply 'dec_PartialAttribute'/1
		  (Data)
	  %% Line 225
	  <'Attribute',Data> when 'true' ->
	      apply 'dec_Attribute'/1
		  (Data)
	  %% Line 226
	  <'MatchingRuleId',Data> when 'true' ->
	      apply 'dec_MatchingRuleId'/1
		  (Data)
	  %% Line 227
	  <'LDAPResult',Data> when 'true' ->
	      apply 'dec_LDAPResult'/1
		  (Data)
	  %% Line 228
	  <'Referral',Data> when 'true' ->
	      apply 'dec_Referral'/1
		  (Data)
	  %% Line 229
	  <'URI',Data> when 'true' ->
	      apply 'dec_URI'/1
		  (Data)
	  %% Line 230
	  <'Controls',Data> when 'true' ->
	      apply 'dec_Controls'/1
		  (Data)
	  %% Line 231
	  <'Control',Data> when 'true' ->
	      apply 'dec_Control'/1
		  (Data)
	  %% Line 232
	  <'BindRequest',Data> when 'true' ->
	      apply 'dec_BindRequest'/1
		  (Data)
	  %% Line 233
	  <'AuthenticationChoice',Data> when 'true' ->
	      apply 'dec_AuthenticationChoice'/1
		  (Data)
	  %% Line 234
	  <'SaslCredentials',Data> when 'true' ->
	      apply 'dec_SaslCredentials'/1
		  (Data)
	  %% Line 235
	  <'BindResponse',Data> when 'true' ->
	      apply 'dec_BindResponse'/1
		  (Data)
	  %% Line 236
	  <'UnbindRequest',Data> when 'true' ->
	      apply 'dec_UnbindRequest'/1
		  (Data)
	  %% Line 237
	  <'SearchRequest',Data> when 'true' ->
	      apply 'dec_SearchRequest'/1
		  (Data)
	  %% Line 238
	  <'AttributeSelection',Data> when 'true' ->
	      apply 'dec_AttributeSelection'/1
		  (Data)
	  %% Line 239
	  <'Filter',Data> when 'true' ->
	      apply 'dec_Filter'/1
		  (Data)
	  %% Line 240
	  <'SubstringFilter',Data> when 'true' ->
	      apply 'dec_SubstringFilter'/1
		  (Data)
	  %% Line 241
	  <'MatchingRuleAssertion',Data> when 'true' ->
	      apply 'dec_MatchingRuleAssertion'/1
		  (Data)
	  %% Line 242
	  <'SearchResultEntry',Data> when 'true' ->
	      apply 'dec_SearchResultEntry'/1
		  (Data)
	  %% Line 243
	  <'PartialAttributeList',Data> when 'true' ->
	      apply 'dec_PartialAttributeList'/1
		  (Data)
	  %% Line 244
	  <'SearchResultReference',Data> when 'true' ->
	      apply 'dec_SearchResultReference'/1
		  (Data)
	  %% Line 245
	  <'SearchResultDone',Data> when 'true' ->
	      apply 'dec_SearchResultDone'/1
		  (Data)
	  %% Line 246
	  <'ModifyRequest',Data> when 'true' ->
	      apply 'dec_ModifyRequest'/1
		  (Data)
	  %% Line 247
	  <'ModifyResponse',Data> when 'true' ->
	      apply 'dec_ModifyResponse'/1
		  (Data)
	  %% Line 248
	  <'AddRequest',Data> when 'true' ->
	      apply 'dec_AddRequest'/1
		  (Data)
	  %% Line 249
	  <'AttributeList',Data> when 'true' ->
	      apply 'dec_AttributeList'/1
		  (Data)
	  %% Line 250
	  <'AddResponse',Data> when 'true' ->
	      apply 'dec_AddResponse'/1
		  (Data)
	  %% Line 251
	  <'DelRequest',Data> when 'true' ->
	      apply 'dec_DelRequest'/1
		  (Data)
	  %% Line 252
	  <'DelResponse',Data> when 'true' ->
	      apply 'dec_DelResponse'/1
		  (Data)
	  %% Line 253
	  <'ModifyDNRequest',Data> when 'true' ->
	      apply 'dec_ModifyDNRequest'/1
		  (Data)
	  %% Line 254
	  <'ModifyDNResponse',Data> when 'true' ->
	      apply 'dec_ModifyDNResponse'/1
		  (Data)
	  %% Line 255
	  <'CompareRequest',Data> when 'true' ->
	      apply 'dec_CompareRequest'/1
		  (Data)
	  %% Line 256
	  <'CompareResponse',Data> when 'true' ->
	      apply 'dec_CompareResponse'/1
		  (Data)
	  %% Line 257
	  <'AbandonRequest',Data> when 'true' ->
	      apply 'dec_AbandonRequest'/1
		  (Data)
	  %% Line 258
	  <'ExtendedRequest',Data> when 'true' ->
	      apply 'dec_ExtendedRequest'/1
		  (Data)
	  %% Line 259
	  <'ExtendedResponse',Data> when 'true' ->
	      apply 'dec_ExtendedResponse'/1
		  (Data)
	  %% Line 260
	  <'IntermediateResponse',Data> when 'true' ->
	      apply 'dec_IntermediateResponse'/1
		  (Data)
	  %% Line 261
	  <Type,_X_Data> when 'true' ->
	      call 'erlang':'exit'
		  ({'error',{'asn1',{'undefined_type',Type}}})
	end
'info'/0 =
    %% Line 266
    fun () ->
	%% Line 267
	case call 'ELDAPv3':'module_info'
		 ('attributes') of
	  %% Line 268
	  <Attributes>
	      when call 'erlang':'is_list'
		    (Attributes) ->
	      %% Line 269
	      case call 'lists':'keyfind'
		       ('asn1_info', 1, Attributes) of
		%% Line 270
		<{_cor2,Info}>
		    when call 'erlang':'is_list'
			  (Info) ->
		    %% Line 271
		    Info
		%% Line 272
		<_cor3> when 'true' ->
		    %% Line 273
		    []
	      end
	  %% Line 275
	  <_cor4> when 'true' ->
	      %% Line 276
	      []
	end
'enc_LDAPMessage'/1 =
    %% Line 283
    fun (_cor0) ->
	%% Line 284
	apply 'enc_LDAPMessage'/2
	    (_cor0, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#])
'enc_LDAPMessage'/2 =
    %% Line 286
    fun (_cor1,_cor0) ->
	%% Line 287
	case _cor1 of
	  <{_cor13,Cindex1,Cindex2,Cindex3}> when 'true' ->
	      %% Line 292
	      case apply 'encode_integer'/2
		       (Cindex1, [#{#<2>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes1,EncLen1}> when 'true' ->
		    %% Line 297
		    case apply 'enc_LDAPMessage_protocolOp'/2
			     (Cindex2, []) of
		      <{EncBytes2,EncLen2}> when 'true' ->
			  let <_cor6> =
			      %% Line 302
			      case Cindex3 of
				%% Line 303
				<'asn1_NOVALUE'> when 'true' ->
				    {#{}#,0}
				%% Line 304
				<_cor14> when 'true' ->
				    %% Line 305
				    apply 'enc_Controls'/2
					(Cindex3, [#{#<160>(8,1,'integer',['unsigned'|['big']])}#])
			      end
			  in  %% Line 302
			      case _cor6 of
				<{EncBytes3,EncLen3}> when 'true' ->
				    let <BytesSoFar> =
					%% Line 308
					[EncBytes1|[EncBytes2|[EncBytes3|[]]]]
				    in  let <_cor9> =
					    %% Line 309
					    call 'erlang':'+'
						(EncLen1, EncLen2)
					in  let <LenSoFar> =
						%% Line 309
						call 'erlang':'+'
						    (_cor9, EncLen3)
					    in  %% Line 310
						apply 'encode_tags'/3
						    (_cor0, BytesSoFar, LenSoFar)
				( <_cor7> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor7})
				  -| ['compiler_generated'] )
			      end
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_LDAPMessage_protocolOp'/2 =
    %% Line 317
    fun (_cor1,_cor0) ->
	let <_cor24> =
	    %% Line 318
	    case call 'erlang':'element'
		     (1, _cor1) of
	      %% Line 319
	      <'bindRequest'> when 'true' ->
		  let <_cor2> =
		      %% Line 320
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 320
		      apply 'enc_BindRequest'/2
			  (_cor2, [#{#<96>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 321
	      <'bindResponse'> when 'true' ->
		  let <_cor3> =
		      %% Line 322
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 322
		      apply 'enc_BindResponse'/2
			  (_cor3, [#{#<97>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 323
	      <'unbindRequest'> when 'true' ->
		  let <_cor4> =
		      %% Line 324
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 324
		      apply 'encode_null'/2
			  (_cor4, [#{#<66>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 325
	      <'searchRequest'> when 'true' ->
		  let <_cor5> =
		      %% Line 326
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 326
		      apply 'enc_SearchRequest'/2
			  (_cor5, [#{#<99>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 327
	      <'searchResEntry'> when 'true' ->
		  let <_cor6> =
		      %% Line 328
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 328
		      apply 'enc_SearchResultEntry'/2
			  (_cor6, [#{#<100>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 329
	      <'searchResDone'> when 'true' ->
		  let <_cor7> =
		      %% Line 330
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 330
		      apply 'enc_SearchResultDone'/2
			  (_cor7, [#{#<101>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 331
	      <'searchResRef'> when 'true' ->
		  let <_cor8> =
		      %% Line 332
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 332
		      apply 'enc_SearchResultReference'/2
			  (_cor8, [#{#<115>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 333
	      <'modifyRequest'> when 'true' ->
		  let <_cor9> =
		      %% Line 334
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 334
		      apply 'enc_ModifyRequest'/2
			  (_cor9, [#{#<102>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 335
	      <'modifyResponse'> when 'true' ->
		  let <_cor10> =
		      %% Line 336
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 336
		      apply 'enc_ModifyResponse'/2
			  (_cor10, [#{#<103>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 337
	      <'addRequest'> when 'true' ->
		  let <_cor11> =
		      %% Line 338
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 338
		      apply 'enc_AddRequest'/2
			  (_cor11, [#{#<104>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 339
	      <'addResponse'> when 'true' ->
		  let <_cor12> =
		      %% Line 340
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 340
		      apply 'enc_AddResponse'/2
			  (_cor12, [#{#<105>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 341
	      <'delRequest'> when 'true' ->
		  let <_cor13> =
		      %% Line 342
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 342
		      apply 'encode_restricted_string'/2
			  (_cor13, [#{#<74>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 343
	      <'delResponse'> when 'true' ->
		  let <_cor14> =
		      %% Line 344
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 344
		      apply 'enc_DelResponse'/2
			  (_cor14, [#{#<107>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 345
	      <'modDNRequest'> when 'true' ->
		  let <_cor15> =
		      %% Line 346
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 346
		      apply 'enc_ModifyDNRequest'/2
			  (_cor15, [#{#<108>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 347
	      <'modDNResponse'> when 'true' ->
		  let <_cor16> =
		      %% Line 348
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 348
		      apply 'enc_ModifyDNResponse'/2
			  (_cor16, [#{#<109>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 349
	      <'compareRequest'> when 'true' ->
		  let <_cor17> =
		      %% Line 350
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 350
		      apply 'enc_CompareRequest'/2
			  (_cor17, [#{#<110>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 351
	      <'compareResponse'> when 'true' ->
		  let <_cor18> =
		      %% Line 352
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 352
		      apply 'enc_CompareResponse'/2
			  (_cor18, [#{#<111>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 353
	      <'abandonRequest'> when 'true' ->
		  let <_cor19> =
		      %% Line 354
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 354
		      apply 'encode_integer'/2
			  (_cor19, [#{#<80>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 355
	      <'extendedReq'> when 'true' ->
		  let <_cor20> =
		      %% Line 356
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 356
		      apply 'enc_ExtendedRequest'/2
			  (_cor20, [#{#<119>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 357
	      <'extendedResp'> when 'true' ->
		  let <_cor21> =
		      %% Line 358
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 358
		      apply 'enc_ExtendedResponse'/2
			  (_cor21, [#{#<120>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 359
	      <'intermediateResponse'> when 'true' ->
		  let <_cor22> =
		      %% Line 360
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 360
		      apply 'enc_IntermediateResponse'/2
			  (_cor22, [#{#<121>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 361
	      <Else> when 'true' ->
		  %% Line 362
		  call 'erlang':'exit'
		      ({'error',{'asn1',{'invalid_choice_type',Else}}})
	    end
	in  %% Line 318
	    case _cor24 of
	      <{EncBytes,EncLen}> when 'true' ->
		  %% Line 365
		  apply 'encode_tags'/3
		      (_cor0, EncBytes, EncLen)
	      ( <_cor25> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor25})
		-| ['compiler_generated'] )
	    end
'dec_LDAPMessage_protocolOp'/2 =
    %% Line 368
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 369
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  let <_cor4> =
		%% Line 370
		case Tlv1 of
		  <[CtempTlv1|[]]> when 'true' ->
		      CtempTlv1
		  <_cor34> when 'true' ->
		      Tlv1
		end
	    in  %% Line 370
		case _cor4 of
		  %% Line 373
		  <{65536,V1}> when 'true' ->
		      let <_cor5> =
			  %% Line 374
			  apply 'dec_BindRequest'/2
			      (V1, [])
		      in  %% Line 374
			  {'bindRequest',_cor5}
		  %% Line 378
		  <{65537,V1}> when 'true' ->
		      let <_cor6> =
			  %% Line 379
			  apply 'dec_BindResponse'/2
			      (V1, [])
		      in  %% Line 379
			  {'bindResponse',_cor6}
		  %% Line 383
		  <{65538,V1}> when 'true' ->
		      let <_cor7> =
			  %% Line 384
			  apply 'decode_null'/2
			      (V1, [])
		      in  %% Line 384
			  {'unbindRequest',_cor7}
		  %% Line 388
		  <{65539,V1}> when 'true' ->
		      let <_cor8> =
			  %% Line 389
			  apply 'dec_SearchRequest'/2
			      (V1, [])
		      in  %% Line 389
			  {'searchRequest',_cor8}
		  %% Line 393
		  <{65540,V1}> when 'true' ->
		      let <_cor9> =
			  %% Line 394
			  apply 'dec_SearchResultEntry'/2
			      (V1, [])
		      in  %% Line 394
			  {'searchResEntry',_cor9}
		  %% Line 398
		  <{65541,V1}> when 'true' ->
		      let <_cor10> =
			  %% Line 399
			  apply 'dec_SearchResultDone'/2
			      (V1, [])
		      in  %% Line 399
			  {'searchResDone',_cor10}
		  %% Line 403
		  <{65555,V1}> when 'true' ->
		      let <_cor11> =
			  %% Line 404
			  apply 'dec_SearchResultReference'/2
			      (V1, [])
		      in  %% Line 404
			  {'searchResRef',_cor11}
		  %% Line 408
		  <{65542,V1}> when 'true' ->
		      let <_cor12> =
			  %% Line 409
			  apply 'dec_ModifyRequest'/2
			      (V1, [])
		      in  %% Line 409
			  {'modifyRequest',_cor12}
		  %% Line 413
		  <{65543,V1}> when 'true' ->
		      let <_cor13> =
			  %% Line 414
			  apply 'dec_ModifyResponse'/2
			      (V1, [])
		      in  %% Line 414
			  {'modifyResponse',_cor13}
		  %% Line 418
		  <{65544,V1}> when 'true' ->
		      let <_cor14> =
			  %% Line 419
			  apply 'dec_AddRequest'/2
			      (V1, [])
		      in  %% Line 419
			  {'addRequest',_cor14}
		  %% Line 423
		  <{65545,V1}> when 'true' ->
		      let <_cor15> =
			  %% Line 424
			  apply 'dec_AddResponse'/2
			      (V1, [])
		      in  %% Line 424
			  {'addResponse',_cor15}
		  %% Line 428
		  <{65546,V1}> when 'true' ->
		      let <_cor16> =
			  %% Line 430
			  apply 'decode_restricted_string'/2
			      (V1, [])
		      in  let <_cor17> =
			      %% Line 430
			      call 'erlang':'binary_to_list'
				  (_cor16)
			  in  %% Line 429
			      {'delRequest',_cor17}
		  %% Line 436
		  <{65547,V1}> when 'true' ->
		      let <_cor18> =
			  %% Line 437
			  apply 'dec_DelResponse'/2
			      (V1, [])
		      in  %% Line 437
			  {'delResponse',_cor18}
		  %% Line 441
		  <{65548,V1}> when 'true' ->
		      let <_cor19> =
			  %% Line 442
			  apply 'dec_ModifyDNRequest'/2
			      (V1, [])
		      in  %% Line 442
			  {'modDNRequest',_cor19}
		  %% Line 446
		  <{65549,V1}> when 'true' ->
		      let <_cor20> =
			  %% Line 447
			  apply 'dec_ModifyDNResponse'/2
			      (V1, [])
		      in  %% Line 447
			  {'modDNResponse',_cor20}
		  %% Line 451
		  <{65550,V1}> when 'true' ->
		      let <_cor21> =
			  %% Line 452
			  apply 'dec_CompareRequest'/2
			      (V1, [])
		      in  %% Line 452
			  {'compareRequest',_cor21}
		  %% Line 456
		  <{65551,V1}> when 'true' ->
		      let <_cor22> =
			  %% Line 457
			  apply 'dec_CompareResponse'/2
			      (V1, [])
		      in  %% Line 457
			  {'compareResponse',_cor22}
		  %% Line 461
		  <{65552,V1}> when 'true' ->
		      let <Val1> =
			  %% Line 463
			  apply 'decode_integer'/2
			      (V1, [])
		      in  %% Line 464
			  case <> of
			    <>
				when let <_cor24> =
				      call 'erlang':'=<'
					  (0, Val1)
				  in  let <_cor25> =
					  call 'erlang':'=<'
					      (Val1, 2147483647)
				      in  call 'erlang':'and'
					      (_cor24, _cor25) ->
				{'abandonRequest',%% Line 465
						  Val1}
			    %% Line 466
			    <> when 'true' ->
				%% Line 467
				call 'erlang':'exit'
				    ({'error',{'asn1','bad_range'}})
			  end
		  %% Line 473
		  <{65559,V1}> when 'true' ->
		      let <_cor27> =
			  %% Line 474
			  apply 'dec_ExtendedRequest'/2
			      (V1, [])
		      in  %% Line 474
			  {'extendedReq',_cor27}
		  %% Line 478
		  <{65560,V1}> when 'true' ->
		      let <_cor28> =
			  %% Line 479
			  apply 'dec_ExtendedResponse'/2
			      (V1, [])
		      in  %% Line 479
			  {'extendedResp',_cor28}
		  %% Line 483
		  <{65561,V1}> when 'true' ->
		      let <_cor29> =
			  %% Line 484
			  apply 'dec_IntermediateResponse'/2
			      (V1, [])
		      in  %% Line 484
			  {'intermediateResponse',_cor29}
		  %% Line 486
		  <Else> when 'true' ->
		      let <_cor30> =
			  %% Line 487
			  apply 'ber_encode'/1
			      (Else)
		      in  %% Line 487
			  {'asn1_ExtAlt',_cor30}
		end
'dec_LDAPMessage'/1 =
    %% Line 492
    fun (_cor0) ->
	%% Line 493
	apply 'dec_LDAPMessage'/2
	    (_cor0, [16])
'dec_LDAPMessage'/2 =
    %% Line 495
    fun (_cor1,_cor0) ->
	%% Line 504
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <Val1> =
		  %% Line 506
		  apply 'decode_integer'/2
		      (V1, [2])
	      in  %% Line 507
		  case <> of
		    <>
			when let <_cor5> =
			      call 'erlang':'=<'
				  (0, Val1)
			  in  let <_cor6> =
				  call 'erlang':'=<'
				      (Val1, 2147483647)
			      in  call 'erlang':'and'
				      (_cor5, _cor6) ->
			%% Line 517
			case Tlv2 of
			  <[V2|Tlv3]> when 'true' ->
			      let <Term2> =
				  %% Line 518
				  apply 'dec_LDAPMessage_protocolOp'/2
				      (V2, [])
			      in  let <Term3,Tlv4> =
				      %% Line 523
				      case Tlv3 of
					%% Line 524
					<[{131072,V3}|TempTlv4]> when 'true' ->
					    let <_cor11> =
						%% Line 525
						apply 'dec_Controls'/2
						    (V3, [])
					    in  <_cor11,%% Line 525
							TempTlv4>
					%% Line 526
					<_cor18> when 'true' ->
					    %% Line 527
					    <'asn1_NOVALUE',Tlv3>
				      end
				  in  do  %% Line 530
					  case Tlv4 of
					    <[]> when 'true' ->
						'ok'
					    <_cor19> when 'true' ->
						'ok'
					  end
					  %% Line 531
					  {'LDAPMessage',Val1,Term2,Term3}
			  ( <_cor9> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor9})
			    -| ['compiler_generated'] )
			end
		    %% Line 509
		    <> when 'true' ->
			%% Line 510
			call 'erlang':'exit'
			    ({'error',{'asn1','bad_range'}})
		  end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_MessageID'/1 =
    %% Line 538
    fun (_cor0) ->
	%% Line 539
	apply 'enc_MessageID'/2
	    (_cor0, [#{#<2>(8,1,'integer',['unsigned'|['big']])}#])
'enc_MessageID'/2 =
    %% Line 541
    fun (_cor1,_cor0) ->
	%% Line 542
	apply 'encode_integer'/2
	    (_cor1, _cor0)
'dec_MessageID'/1 =
    %% Line 545
    fun (_cor0) ->
	%% Line 546
	apply 'dec_MessageID'/2
	    (_cor0, [2])
'dec_MessageID'/2 =
    %% Line 548
    fun (_cor1,_cor0) ->
	let <Val1> =
	    %% Line 550
	    apply 'decode_integer'/2
		(_cor1, _cor0)
	in  %% Line 551
	    case <> of
	      <>
		  when let <_cor3> =
			call 'erlang':'=<'
			    (0, Val1)
		    in  let <_cor4> =
			    call 'erlang':'=<'
				(Val1, 2147483647)
			in  call 'erlang':'and'
				(_cor3, _cor4) ->
		  %% Line 552
		  Val1
	      %% Line 553
	      <> when 'true' ->
		  %% Line 554
		  call 'erlang':'exit'
		      ({'error',{'asn1','bad_range'}})
	    end
'enc_LDAPString'/1 =
    %% Line 563
    fun (_cor0) ->
	%% Line 564
	apply 'enc_LDAPString'/2
	    (_cor0, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#])
'enc_LDAPString'/2 =
    %% Line 566
    fun (_cor1,_cor0) ->
	%% Line 567
	apply 'encode_restricted_string'/2
	    (_cor1, _cor0)
'dec_LDAPString'/1 =
    %% Line 570
    fun (_cor0) ->
	%% Line 571
	apply 'dec_LDAPString'/2
	    (_cor0, [4])
'dec_LDAPString'/2 =
    %% Line 573
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 575
	    apply 'decode_restricted_string'/2
		(_cor1, _cor0)
	in  %% Line 575
	    call 'erlang':'binary_to_list'
		(_cor2)
'enc_LDAPOID'/1 =
    %% Line 584
    fun (_cor0) ->
	%% Line 585
	apply 'enc_LDAPOID'/2
	    (_cor0, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#])
'enc_LDAPOID'/2 =
    %% Line 587
    fun (_cor1,_cor0) ->
	%% Line 588
	apply 'encode_restricted_string'/2
	    (_cor1, _cor0)
'dec_LDAPOID'/1 =
    %% Line 591
    fun (_cor0) ->
	%% Line 592
	apply 'dec_LDAPOID'/2
	    (_cor0, [4])
'dec_LDAPOID'/2 =
    %% Line 594
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 596
	    apply 'decode_restricted_string'/2
		(_cor1, _cor0)
	in  %% Line 596
	    call 'erlang':'binary_to_list'
		(_cor2)
'enc_LDAPDN'/1 =
    %% Line 605
    fun (_cor0) ->
	%% Line 606
	apply 'enc_LDAPDN'/2
	    (_cor0, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#])
'enc_LDAPDN'/2 =
    %% Line 608
    fun (_cor1,_cor0) ->
	%% Line 609
	apply 'encode_restricted_string'/2
	    (_cor1, _cor0)
'dec_LDAPDN'/1 =
    %% Line 612
    fun (_cor0) ->
	%% Line 613
	apply 'dec_LDAPDN'/2
	    (_cor0, [4])
'dec_LDAPDN'/2 =
    %% Line 615
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 617
	    apply 'decode_restricted_string'/2
		(_cor1, _cor0)
	in  %% Line 617
	    call 'erlang':'binary_to_list'
		(_cor2)
'enc_RelativeLDAPDN'/1 =
    %% Line 626
    fun (_cor0) ->
	%% Line 627
	apply 'enc_RelativeLDAPDN'/2
	    (_cor0, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#])
'enc_RelativeLDAPDN'/2 =
    %% Line 629
    fun (_cor1,_cor0) ->
	%% Line 630
	apply 'encode_restricted_string'/2
	    (_cor1, _cor0)
'dec_RelativeLDAPDN'/1 =
    %% Line 633
    fun (_cor0) ->
	%% Line 634
	apply 'dec_RelativeLDAPDN'/2
	    (_cor0, [4])
'dec_RelativeLDAPDN'/2 =
    %% Line 636
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 638
	    apply 'decode_restricted_string'/2
		(_cor1, _cor0)
	in  %% Line 638
	    call 'erlang':'binary_to_list'
		(_cor2)
'enc_AttributeDescription'/1 =
    %% Line 647
    fun (_cor0) ->
	%% Line 648
	apply 'enc_AttributeDescription'/2
	    (_cor0, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#])
'enc_AttributeDescription'/2 =
    %% Line 650
    fun (_cor1,_cor0) ->
	%% Line 651
	apply 'encode_restricted_string'/2
	    (_cor1, _cor0)
'dec_AttributeDescription'/1 =
    %% Line 654
    fun (_cor0) ->
	%% Line 655
	apply 'dec_AttributeDescription'/2
	    (_cor0, [4])
'dec_AttributeDescription'/2 =
    %% Line 657
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 659
	    apply 'decode_restricted_string'/2
		(_cor1, _cor0)
	in  %% Line 659
	    call 'erlang':'binary_to_list'
		(_cor2)
'enc_AttributeValue'/1 =
    %% Line 668
    fun (_cor0) ->
	%% Line 669
	apply 'enc_AttributeValue'/2
	    (_cor0, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#])
'enc_AttributeValue'/2 =
    %% Line 671
    fun (_cor1,_cor0) ->
	%% Line 672
	apply 'encode_restricted_string'/2
	    (_cor1, _cor0)
'dec_AttributeValue'/1 =
    %% Line 675
    fun (_cor0) ->
	%% Line 676
	apply 'dec_AttributeValue'/2
	    (_cor0, [4])
'dec_AttributeValue'/2 =
    %% Line 678
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 680
	    apply 'decode_restricted_string'/2
		(_cor1, _cor0)
	in  %% Line 680
	    call 'erlang':'binary_to_list'
		(_cor2)
'enc_AttributeValueAssertion'/1 =
    %% Line 689
    fun (_cor0) ->
	%% Line 690
	apply 'enc_AttributeValueAssertion'/2
	    (_cor0, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#])
'enc_AttributeValueAssertion'/2 =
    %% Line 692
    fun (_cor1,_cor0) ->
	%% Line 693
	case _cor1 of
	  <{_cor9,Cindex1,Cindex2}> when 'true' ->
	      %% Line 698
	      case apply 'encode_restricted_string'/2
		       (Cindex1, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes1,EncLen1}> when 'true' ->
		    %% Line 703
		    case apply 'encode_restricted_string'/2
			     (Cindex2, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		      <{EncBytes2,EncLen2}> when 'true' ->
			  let <BytesSoFar> =
			      %% Line 705
			      [EncBytes1|[EncBytes2|[]]]
			  in  let <LenSoFar> =
				  %% Line 706
				  call 'erlang':'+'
				      (EncLen1, EncLen2)
			      in  %% Line 707
				  apply 'encode_tags'/3
				      (_cor0, BytesSoFar, LenSoFar)
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_AttributeValueAssertion'/1 =
    %% Line 710
    fun (_cor0) ->
	%% Line 711
	apply 'dec_AttributeValueAssertion'/2
	    (_cor0, [16])
'dec_AttributeValueAssertion'/2 =
    %% Line 713
    fun (_cor1,_cor0) ->
	%% Line 722
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor4> =
		  %% Line 724
		  apply 'decode_restricted_string'/2
		      (V1, [4])
	      in  let <Term1> =
		      %% Line 724
		      call 'erlang':'binary_to_list'
			  (_cor4)
		  in  %% Line 731
		      case Tlv2 of
			<[V2|Tlv3]> when 'true' ->
			    let <_cor7> =
				%% Line 733
				apply 'decode_restricted_string'/2
				    (V2, [4])
			    in  let <Term2> =
				    %% Line 733
				    call 'erlang':'binary_to_list'
					(_cor7)
				in  do  %% Line 737
					case Tlv3 of
					  <[]> when 'true' ->
					      'ok'
					  <_cor12> when 'true' ->
					      'ok'
					end
					%% Line 738
					{'AttributeValueAssertion',Term1,Term2}
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor6})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_AssertionValue'/1 =
    %% Line 745
    fun (_cor0) ->
	%% Line 746
	apply 'enc_AssertionValue'/2
	    (_cor0, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#])
'enc_AssertionValue'/2 =
    %% Line 748
    fun (_cor1,_cor0) ->
	%% Line 749
	apply 'encode_restricted_string'/2
	    (_cor1, _cor0)
'dec_AssertionValue'/1 =
    %% Line 752
    fun (_cor0) ->
	%% Line 753
	apply 'dec_AssertionValue'/2
	    (_cor0, [4])
'dec_AssertionValue'/2 =
    %% Line 755
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 757
	    apply 'decode_restricted_string'/2
		(_cor1, _cor0)
	in  %% Line 757
	    call 'erlang':'binary_to_list'
		(_cor2)
'enc_PartialAttribute'/1 =
    %% Line 766
    fun (_cor0) ->
	%% Line 767
	apply 'enc_PartialAttribute'/2
	    (_cor0, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#])
'enc_PartialAttribute'/2 =
    %% Line 769
    fun (_cor1,_cor0) ->
	%% Line 770
	case _cor1 of
	  <{_cor9,Cindex1,Cindex2}> when 'true' ->
	      %% Line 775
	      case apply 'encode_restricted_string'/2
		       (Cindex1, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes1,EncLen1}> when 'true' ->
		    %% Line 780
		    case apply 'enc_PartialAttribute_vals'/2
			     (Cindex2, [#{#<49>(8,1,'integer',['unsigned'|['big']])}#]) of
		      <{EncBytes2,EncLen2}> when 'true' ->
			  let <BytesSoFar> =
			      %% Line 782
			      [EncBytes1|[EncBytes2|[]]]
			  in  let <LenSoFar> =
				  %% Line 783
				  call 'erlang':'+'
				      (EncLen1, EncLen2)
			      in  %% Line 784
				  apply 'encode_tags'/3
				      (_cor0, BytesSoFar, LenSoFar)
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_PartialAttribute_vals'/2 =
    %% Line 791
    fun (_cor1,_cor0) ->
	%% Line 792
	case apply 'enc_PartialAttribute_vals_components'/3
		 (_cor1, [], 0) of
	  <{EncBytes,EncLen}> when 'true' ->
	      %% Line 793
	      apply 'encode_tags'/3
		  (_cor0, EncBytes, EncLen)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_PartialAttribute_vals_components'/3 =
    %% Line 795
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],AccBytes,AccLen> when 'true' ->
	      let <_cor3> =
		  %% Line 796
		  call 'lists':'reverse'
		      (AccBytes)
	      in  %% Line 796
		  {_cor3,AccLen}
	  %% Line 798
	  <[H|T],AccBytes,AccLen> when 'true' ->
	      %% Line 799
	      case apply 'encode_restricted_string'/2
		       (H, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes,EncLen}> when 'true' ->
		    let <_cor5> =
			%% Line 800
			call 'erlang':'+'
			    (AccLen, EncLen)
		    in  %% Line 800
			apply 'enc_PartialAttribute_vals_components'/3
			    (T, [EncBytes|AccBytes], _cor5)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'enc_PartialAttribute_vals_components',3}}] )
	    -| ['compiler_generated'] )
	end
'dec_PartialAttribute_vals'/2 =
    %% Line 802
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 806
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  %% Line 807
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[%% Line 810
			      V1|_cor4]> when 'true' ->
				let <_cor6> =
				    %% Line 808
				    apply 'decode_restricted_string'/2
					(V1, [4])
				in  let <_cor7> =
					%% Line 808
					call 'erlang':'binary_to_list'
					    (_cor6)
				    in  let <_cor8> =
					    %% Line 810
					    apply 'lc$^0'/1
						(_cor4)
					in  ( [_cor7|_cor8]
					      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor5> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (%% Line 810
		       Tlv1)
	      -| ['list_comprehension'] )
'dec_PartialAttribute'/1 =
    %% Line 815
    fun (_cor0) ->
	%% Line 816
	apply 'dec_PartialAttribute'/2
	    (_cor0, [16])
'dec_PartialAttribute'/2 =
    %% Line 818
    fun (_cor1,_cor0) ->
	%% Line 827
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor4> =
		  %% Line 829
		  apply 'decode_restricted_string'/2
		      (V1, [4])
	      in  let <Term1> =
		      %% Line 829
		      call 'erlang':'binary_to_list'
			  (_cor4)
		  in  %% Line 836
		      case Tlv2 of
			<[V2|Tlv3]> when 'true' ->
			    let <Term2> =
				%% Line 837
				apply 'dec_PartialAttribute_vals'/2
				    (V2, [17])
			    in  do  %% Line 839
				    case Tlv3 of
				      <[]> when 'true' ->
					  'ok'
				      <_cor11> when 'true' ->
					  'ok'
				    end
				    %% Line 840
				    {'PartialAttribute',Term1,Term2}
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor6})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_Attribute'/1 =
    %% Line 847
    fun (_cor0) ->
	%% Line 848
	apply 'enc_Attribute'/2
	    (_cor0, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#])
'enc_Attribute'/2 =
    %% Line 850
    fun (_cor1,_cor0) ->
	%% Line 851
	apply 'enc_PartialAttribute'/2
	    (_cor1, _cor0)
'dec_Attribute'/1 =
    %% Line 854
    fun (_cor0) ->
	%% Line 855
	apply 'dec_Attribute'/2
	    (_cor0, [16])
'dec_Attribute'/2 =
    %% Line 857
    fun (_cor1,_cor0) ->
	%% Line 858
	apply 'dec_PartialAttribute'/2
	    (_cor1, _cor0)
'enc_MatchingRuleId'/1 =
    %% Line 865
    fun (_cor0) ->
	%% Line 866
	apply 'enc_MatchingRuleId'/2
	    (_cor0, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#])
'enc_MatchingRuleId'/2 =
    %% Line 868
    fun (_cor1,_cor0) ->
	%% Line 869
	apply 'encode_restricted_string'/2
	    (_cor1, _cor0)
'dec_MatchingRuleId'/1 =
    %% Line 872
    fun (_cor0) ->
	%% Line 873
	apply 'dec_MatchingRuleId'/2
	    (_cor0, [4])
'dec_MatchingRuleId'/2 =
    %% Line 875
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 877
	    apply 'decode_restricted_string'/2
		(_cor1, _cor0)
	in  %% Line 877
	    call 'erlang':'binary_to_list'
		(_cor2)
'enc_LDAPResult'/1 =
    %% Line 886
    fun (_cor0) ->
	%% Line 887
	apply 'enc_LDAPResult'/2
	    (_cor0, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#])
'enc_LDAPResult'/2 =
    %% Line 889
    fun (_cor1,_cor0) ->
	%% Line 890
	case _cor1 of
	  <{_cor17,Cindex1,Cindex2,Cindex3,Cindex4}> when 'true' ->
	      let <_cor4> =
		  %% Line 895
		  case Cindex1 of
		    %% Line 896
		    <'success'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [0], 1)
		    %% Line 897
		    <'operationsError'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [1], 1)
		    %% Line 898
		    <'protocolError'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [2], 1)
		    %% Line 899
		    <'timeLimitExceeded'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [3], 1)
		    %% Line 900
		    <'sizeLimitExceeded'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [4], 1)
		    %% Line 901
		    <'compareFalse'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [5], 1)
		    %% Line 902
		    <'compareTrue'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [6], 1)
		    %% Line 903
		    <'authMethodNotSupported'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [7], 1)
		    %% Line 904
		    <'strongerAuthRequired'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [8], 1)
		    %% Line 905
		    <'referral'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [10], 1)
		    %% Line 906
		    <'adminLimitExceeded'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [11], 1)
		    %% Line 907
		    <'unavailableCriticalExtension'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [12], 1)
		    %% Line 908
		    <'confidentialityRequired'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [13], 1)
		    %% Line 909
		    <'saslBindInProgress'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [14], 1)
		    %% Line 910
		    <'noSuchAttribute'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [16], 1)
		    %% Line 911
		    <'undefinedAttributeType'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [17], 1)
		    %% Line 912
		    <'inappropriateMatching'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [18], 1)
		    %% Line 913
		    <'constraintViolation'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [19], 1)
		    %% Line 914
		    <'attributeOrValueExists'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [20], 1)
		    %% Line 915
		    <'invalidAttributeSyntax'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [21], 1)
		    %% Line 916
		    <'noSuchObject'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [32], 1)
		    %% Line 917
		    <'aliasProblem'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [33], 1)
		    %% Line 918
		    <'invalidDNSyntax'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [34], 1)
		    %% Line 919
		    <'aliasDereferencingProblem'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [36], 1)
		    %% Line 920
		    <'inappropriateAuthentication'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [48], 1)
		    %% Line 921
		    <'invalidCredentials'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [49], 1)
		    %% Line 922
		    <'insufficientAccessRights'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [50], 1)
		    %% Line 923
		    <'busy'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [51], 1)
		    %% Line 924
		    <'unavailable'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [52], 1)
		    %% Line 925
		    <'unwillingToPerform'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [53], 1)
		    %% Line 926
		    <'loopDetect'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [54], 1)
		    %% Line 927
		    <'namingViolation'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [64], 1)
		    %% Line 928
		    <'objectClassViolation'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [65], 1)
		    %% Line 929
		    <'notAllowedOnNonLeaf'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [66], 1)
		    %% Line 930
		    <'notAllowedOnRDN'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [67], 1)
		    %% Line 931
		    <'entryAlreadyExists'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [68], 1)
		    %% Line 932
		    <'objectClassModsProhibited'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [69], 1)
		    %% Line 933
		    <'affectsMultipleDSAs'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [71], 1)
		    %% Line 934
		    <'other'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [80], 1)
		    %% Line 935
		    <Enumval1> when 'true' ->
			call 'erlang':'exit'
			    ({'error',{'asn1',{'enumerated_not_in_range',Enumval1}}})
		  end
	      in  %% Line 895
		  case _cor4 of
		    <{EncBytes1,EncLen1}> when 'true' ->
			%% Line 941
			case apply 'encode_restricted_string'/2
				 (Cindex2, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
			  <{EncBytes2,EncLen2}> when 'true' ->
			      %% Line 946
			      case apply 'encode_restricted_string'/2
				       (Cindex3, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
				<{EncBytes3,EncLen3}> when 'true' ->
				    let <_cor9> =
					%% Line 951
					case Cindex4 of
					  %% Line 952
					  <'asn1_NOVALUE'> when 'true' ->
					      {#{}#,0}
					  %% Line 953
					  <_cor18> when 'true' ->
					      %% Line 954
					      apply 'enc_Referral'/2
						  (Cindex4, [#{#<163>(8,1,'integer',['unsigned'|['big']])}#])
					end
				    in  %% Line 951
					case _cor9 of
					  <{EncBytes4,EncLen4}> when 'true' ->
					      let <BytesSoFar> =
						  %% Line 957
						  [EncBytes1|[EncBytes2|[EncBytes3|[EncBytes4|[]]]]]
					      in  let <_cor12> =
						      %% Line 958
						      call 'erlang':'+'
							  (EncLen1, EncLen2)
						  in  let <_cor13> =
							  %% Line 958
							  call 'erlang':'+'
							      (_cor12, EncLen3)
						      in  let <LenSoFar> =
							      %% Line 958
							      call 'erlang':'+'
								  (_cor13, EncLen4)
							  in  %% Line 959
							      apply 'encode_tags'/3
								  (_cor0, BytesSoFar, LenSoFar)
					  ( <_cor10> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_cor10})
					    -| ['compiler_generated'] )
					end
				( <_cor7> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor7})
				  -| ['compiler_generated'] )
			      end
			  ( <_cor6> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor6})
			    -| ['compiler_generated'] )
			end
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_LDAPResult'/1 =
    %% Line 962
    fun (_cor0) ->
	%% Line 963
	apply 'dec_LDAPResult'/2
	    (_cor0, [16])
'dec_LDAPResult'/2 =
    %% Line 965
    fun (_cor1,_cor0) ->
	%% Line 974
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor5> =
		  %% Line 975
		  case apply 'decode_integer'/2
			   (V1, [10]) of
		    %% Line 976
		    <0> when 'true' ->
			'success'
		    %% Line 977
		    <1> when 'true' ->
			'operationsError'
		    %% Line 978
		    <2> when 'true' ->
			'protocolError'
		    %% Line 979
		    <3> when 'true' ->
			'timeLimitExceeded'
		    %% Line 980
		    <4> when 'true' ->
			'sizeLimitExceeded'
		    %% Line 981
		    <5> when 'true' ->
			'compareFalse'
		    %% Line 982
		    <6> when 'true' ->
			'compareTrue'
		    %% Line 983
		    <7> when 'true' ->
			'authMethodNotSupported'
		    %% Line 984
		    <8> when 'true' ->
			'strongerAuthRequired'
		    %% Line 985
		    <10> when 'true' ->
			'referral'
		    %% Line 986
		    <11> when 'true' ->
			'adminLimitExceeded'
		    %% Line 987
		    <12> when 'true' ->
			'unavailableCriticalExtension'
		    %% Line 988
		    <13> when 'true' ->
			'confidentialityRequired'
		    %% Line 989
		    <14> when 'true' ->
			'saslBindInProgress'
		    %% Line 990
		    <16> when 'true' ->
			'noSuchAttribute'
		    %% Line 991
		    <17> when 'true' ->
			'undefinedAttributeType'
		    %% Line 992
		    <18> when 'true' ->
			'inappropriateMatching'
		    %% Line 993
		    <19> when 'true' ->
			'constraintViolation'
		    %% Line 994
		    <20> when 'true' ->
			'attributeOrValueExists'
		    %% Line 995
		    <21> when 'true' ->
			'invalidAttributeSyntax'
		    %% Line 996
		    <32> when 'true' ->
			'noSuchObject'
		    %% Line 997
		    <33> when 'true' ->
			'aliasProblem'
		    %% Line 998
		    <34> when 'true' ->
			'invalidDNSyntax'
		    %% Line 999
		    <36> when 'true' ->
			'aliasDereferencingProblem'
		    %% Line 1000
		    <48> when 'true' ->
			'inappropriateAuthentication'
		    %% Line 1001
		    <49> when 'true' ->
			'invalidCredentials'
		    %% Line 1002
		    <50> when 'true' ->
			'insufficientAccessRights'
		    %% Line 1003
		    <51> when 'true' ->
			'busy'
		    %% Line 1004
		    <52> when 'true' ->
			'unavailable'
		    %% Line 1005
		    <53> when 'true' ->
			'unwillingToPerform'
		    %% Line 1006
		    <54> when 'true' ->
			'loopDetect'
		    %% Line 1007
		    <64> when 'true' ->
			'namingViolation'
		    %% Line 1008
		    <65> when 'true' ->
			'objectClassViolation'
		    %% Line 1009
		    <66> when 'true' ->
			'notAllowedOnNonLeaf'
		    %% Line 1010
		    <67> when 'true' ->
			'notAllowedOnRDN'
		    %% Line 1011
		    <68> when 'true' ->
			'entryAlreadyExists'
		    %% Line 1012
		    <69> when 'true' ->
			'objectClassModsProhibited'
		    %% Line 1013
		    <71> when 'true' ->
			'affectsMultipleDSAs'
		    %% Line 1014
		    <80> when 'true' ->
			'other'
		    %% Line 1015
		    <Default1> when 'true' ->
			{'asn1_enum',Default1}
		  end
	      in  %% Line 1021
		  case Tlv2 of
		    <[V2|Tlv3]> when 'true' ->
			let <_cor8> =
			    %% Line 1023
			    apply 'decode_restricted_string'/2
				(V2, [4])
			in  let <Term2> =
				%% Line 1023
				call 'erlang':'binary_to_list'
				    (_cor8)
			    in  %% Line 1030
				case Tlv3 of
				  <[V3|Tlv4]> when 'true' ->
				      let <_cor11> =
					  %% Line 1032
					  apply 'decode_restricted_string'/2
					      (V3, [4])
				      in  let <Term3> =
					      %% Line 1032
					      call 'erlang':'binary_to_list'
						  (_cor11)
					  in  let <Term4,Tlv5> =
						  %% Line 1039
						  case Tlv4 of
						    %% Line 1040
						    <[{131075,V4}|TempTlv5]> when 'true' ->
							let <_cor13> =
							    %% Line 1041
							    apply 'dec_Referral'/2
								(V4, [])
							in  <_cor13,%% Line 1041
								    TempTlv5>
						    %% Line 1042
						    <_cor20> when 'true' ->
							%% Line 1043
							<'asn1_NOVALUE',Tlv4>
						  end
					      in  do  %% Line 1046
						      case Tlv5 of
							<[]> when 'true' ->
							    'ok'
							<_cor21> when 'true' ->
							    'ok'
						      end
						      %% Line 1047
						      {'LDAPResult',_cor5,Term2,Term3,Term4}
				  ( <_cor10> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor10})
				    -| ['compiler_generated'] )
				end
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor7})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_Referral'/1 =
    %% Line 1054
    fun (_cor0) ->
	%% Line 1055
	apply 'enc_Referral'/2
	    (_cor0, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#])
'enc_Referral'/2 =
    %% Line 1057
    fun (_cor1,_cor0) ->
	%% Line 1058
	case apply 'enc_Referral_components'/3
		 (_cor1, [], 0) of
	  <{EncBytes,EncLen}> when 'true' ->
	      %% Line 1059
	      apply 'encode_tags'/3
		  (_cor0, EncBytes, EncLen)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_Referral_components'/3 =
    %% Line 1061
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],AccBytes,AccLen> when 'true' ->
	      let <_cor3> =
		  %% Line 1062
		  call 'lists':'reverse'
		      (AccBytes)
	      in  %% Line 1062
		  {_cor3,AccLen}
	  %% Line 1064
	  <[H|T],AccBytes,AccLen> when 'true' ->
	      %% Line 1065
	      case apply 'encode_restricted_string'/2
		       (H, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes,EncLen}> when 'true' ->
		    let <_cor5> =
			%% Line 1066
			call 'erlang':'+'
			    (AccLen, EncLen)
		    in  %% Line 1066
			apply 'enc_Referral_components'/3
			    (T, [EncBytes|AccBytes], _cor5)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'enc_Referral_components',3}}] )
	    -| ['compiler_generated'] )
	end
'dec_Referral'/1 =
    %% Line 1070
    fun (_cor0) ->
	%% Line 1071
	apply 'dec_Referral'/2
	    (_cor0, [16])
'dec_Referral'/2 =
    %% Line 1073
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 1077
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  %% Line 1078
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[%% Line 1081
			      V1|_cor4]> when 'true' ->
				let <_cor6> =
				    %% Line 1079
				    apply 'decode_restricted_string'/2
					(V1, [4])
				in  let <_cor7> =
					%% Line 1079
					call 'erlang':'binary_to_list'
					    (_cor6)
				    in  let <_cor8> =
					    %% Line 1081
					    apply 'lc$^0'/1
						(_cor4)
					in  ( [_cor7|_cor8]
					      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor5> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (%% Line 1081
		       Tlv1)
	      -| ['list_comprehension'] )
'enc_URI'/1 =
    %% Line 1089
    fun (_cor0) ->
	%% Line 1090
	apply 'enc_URI'/2
	    (_cor0, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#])
'enc_URI'/2 =
    %% Line 1092
    fun (_cor1,_cor0) ->
	%% Line 1093
	apply 'encode_restricted_string'/2
	    (_cor1, _cor0)
'dec_URI'/1 =
    %% Line 1096
    fun (_cor0) ->
	%% Line 1097
	apply 'dec_URI'/2
	    (_cor0, [4])
'dec_URI'/2 =
    %% Line 1099
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 1101
	    apply 'decode_restricted_string'/2
		(_cor1, _cor0)
	in  %% Line 1101
	    call 'erlang':'binary_to_list'
		(_cor2)
'enc_Controls'/1 =
    %% Line 1110
    fun (_cor0) ->
	%% Line 1111
	apply 'enc_Controls'/2
	    (_cor0, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#])
'enc_Controls'/2 =
    %% Line 1113
    fun (_cor1,_cor0) ->
	%% Line 1114
	case apply 'enc_Controls_components'/3
		 (_cor1, [], 0) of
	  <{EncBytes,EncLen}> when 'true' ->
	      %% Line 1115
	      apply 'encode_tags'/3
		  (_cor0, EncBytes, EncLen)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_Controls_components'/3 =
    %% Line 1117
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],AccBytes,AccLen> when 'true' ->
	      let <_cor3> =
		  %% Line 1118
		  call 'lists':'reverse'
		      (AccBytes)
	      in  %% Line 1118
		  {_cor3,AccLen}
	  %% Line 1120
	  <[H|T],AccBytes,AccLen> when 'true' ->
	      %% Line 1121
	      case apply 'enc_Control'/2
		       (H, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes,EncLen}> when 'true' ->
		    let <_cor5> =
			%% Line 1122
			call 'erlang':'+'
			    (AccLen, EncLen)
		    in  %% Line 1122
			apply 'enc_Controls_components'/3
			    (T, [EncBytes|AccBytes], _cor5)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'enc_Controls_components',3}}] )
	    -| ['compiler_generated'] )
	end
'dec_Controls'/1 =
    %% Line 1126
    fun (_cor0) ->
	%% Line 1127
	apply 'dec_Controls'/2
	    (_cor0, [16])
'dec_Controls'/2 =
    %% Line 1129
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 1133
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  %% Line 1134
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[V1|_cor4]> when 'true' ->
				let <_cor6> =
				    apply 'dec_Control'/2
					(V1, [16])
				in  let <_cor7> =
					apply 'lc$^0'/1
					    (_cor4)
				    in  ( [_cor6|_cor7]
					  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor5> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (Tlv1)
	      -| ['list_comprehension'] )
'enc_Control'/1 =
    %% Line 1142
    fun (_cor0) ->
	%% Line 1143
	apply 'enc_Control'/2
	    (_cor0, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#])
'enc_Control'/2 =
    %% Line 1145
    fun (_cor1,_cor0) ->
	%% Line 1146
	case _cor1 of
	  <{_cor15,Cindex1,Cindex2,Cindex3}> when 'true' ->
	      %% Line 1151
	      case apply 'encode_restricted_string'/2
		       (Cindex1, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes1,EncLen1}> when 'true' ->
		    let <_cor5> =
			%% Line 1156
			case Cindex2 of
			  %% Line 1157
			  <'asn1_DEFAULT'> when 'true' ->
			      {#{}#,0}
			  %% Line 1158
			  <'false'> when 'true' ->
			      {#{}#,0}
			  %% Line 1159
			  <_cor16> when 'true' ->
			      %% Line 1160
			      apply 'encode_boolean'/2
				  (Cindex2, [#{#<1>(8,1,'integer',['unsigned'|['big']])}#])
			end
		    in  %% Line 1156
			case _cor5 of
			  <{EncBytes2,EncLen2}> when 'true' ->
			      let <_cor8> =
				  %% Line 1166
				  case Cindex3 of
				    %% Line 1167
				    <'asn1_NOVALUE'> when 'true' ->
					{#{}#,0}
				    %% Line 1168
				    <_cor17> when 'true' ->
					%% Line 1169
					apply 'encode_restricted_string'/2
					    (Cindex3, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#])
				  end
			      in  %% Line 1166
				  case _cor8 of
				    <{EncBytes3,EncLen3}> when 'true' ->
					let <BytesSoFar> =
					    %% Line 1172
					    [EncBytes1|[EncBytes2|[EncBytes3|[]]]]
					in  let <_cor11> =
						%% Line 1173
						call 'erlang':'+'
						    (EncLen1, EncLen2)
					    in  let <LenSoFar> =
						    %% Line 1173
						    call 'erlang':'+'
							(_cor11, EncLen3)
						in  %% Line 1174
						    apply 'encode_tags'/3
							(_cor0, BytesSoFar, LenSoFar)
				    ( <_cor9> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor9})
				      -| ['compiler_generated'] )
				  end
			  ( <_cor6> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor6})
			    -| ['compiler_generated'] )
			end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_Control'/1 =
    %% Line 1177
    fun (_cor0) ->
	%% Line 1178
	apply 'dec_Control'/2
	    (_cor0, [16])
'dec_Control'/2 =
    %% Line 1180
    fun (_cor1,_cor0) ->
	%% Line 1189
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor4> =
		  %% Line 1191
		  apply 'decode_restricted_string'/2
		      (V1, [4])
	      in  let <Term1> =
		      %% Line 1191
		      call 'erlang':'binary_to_list'
			  (_cor4)
		  in  let <Term2,Tlv3> =
			  %% Line 1198
			  case Tlv2 of
			    %% Line 1199
			    <[{1,V2}|TempTlv3]> when 'true' ->
				let <_cor6> =
				    %% Line 1200
				    apply 'decode_boolean'/2
					(V2, [])
				in  <_cor6,%% Line 1200
					   TempTlv3>
			    %% Line 1201
			    <_cor18> when 'true' ->
				%% Line 1202
				<'false',Tlv2>
			  end
		      in  let <Term3,Tlv4> =
			      %% Line 1208
			      case Tlv3 of
				%% Line 1209
				<[{4,V3}|TempTlv4]> when 'true' ->
				    let <_cor10> =
					%% Line 1211
					apply 'decode_restricted_string'/2
					    (V3, [])
				    in  let <_cor11> =
					    %% Line 1211
					    call 'erlang':'binary_to_list'
						(_cor10)
					in  <_cor11,%% Line 1213
						    TempTlv4>
				%% Line 1214
				<_cor19> when 'true' ->
				    %% Line 1215
				    <'asn1_NOVALUE',Tlv3>
			      end
			  in  do  %% Line 1218
				  case Tlv4 of
				    <[]> when 'true' ->
					'ok'
				    <_cor20> when 'true' ->
					'ok'
				  end
				  %% Line 1219
				  {'Control',Term1,Term2,Term3}
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_BindRequest'/1 =
    %% Line 1226
    fun (_cor0) ->
	%% Line 1227
	apply 'enc_BindRequest'/2
	    (_cor0, [#{#<96>(8,1,'integer',['unsigned'|['big']])}#])
'enc_BindRequest'/2 =
    %% Line 1229
    fun (_cor1,_cor0) ->
	%% Line 1230
	case _cor1 of
	  <{_cor11,Cindex1,Cindex2,Cindex3}> when 'true' ->
	      %% Line 1235
	      case apply 'encode_integer'/2
		       (Cindex1, [#{#<2>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes1,EncLen1}> when 'true' ->
		    %% Line 1240
		    case apply 'encode_restricted_string'/2
			     (Cindex2, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		      <{EncBytes2,EncLen2}> when 'true' ->
			  %% Line 1245
			  case apply 'enc_AuthenticationChoice'/2
				   (Cindex3, []) of
			    <{EncBytes3,EncLen3}> when 'true' ->
				let <BytesSoFar> =
				    %% Line 1247
				    [EncBytes1|[EncBytes2|[EncBytes3|[]]]]
				in  let <_cor7> =
					%% Line 1248
					call 'erlang':'+'
					    (EncLen1, EncLen2)
				    in  let <LenSoFar> =
					    %% Line 1248
					    call 'erlang':'+'
						(_cor7, EncLen3)
					in  %% Line 1249
					    apply 'encode_tags'/3
						(_cor0, BytesSoFar, LenSoFar)
			    ( <_cor5> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor5})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_BindRequest'/1 =
    %% Line 1252
    fun (_cor0) ->
	%% Line 1253
	apply 'dec_BindRequest'/2
	    (_cor0, [65536])
'dec_BindRequest'/2 =
    %% Line 1255
    fun (_cor1,_cor0) ->
	%% Line 1264
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <Val1> =
		  %% Line 1266
		  apply 'decode_integer'/2
		      (V1, [2])
	      in  %% Line 1267
		  case <> of
		    <>
			when let <_cor5> =
			      call 'erlang':'=<'
				  (1, Val1)
			  in  let <_cor6> =
				  call 'erlang':'=<'
				      (Val1, 127)
			      in  call 'erlang':'and'
				      (_cor5, _cor6) ->
			%% Line 1277
			case Tlv2 of
			  <[V2|Tlv3]> when 'true' ->
			      let <_cor10> =
				  %% Line 1279
				  apply 'decode_restricted_string'/2
				      (V2, [4])
			      in  let <Term2> =
				      %% Line 1279
				      call 'erlang':'binary_to_list'
					  (_cor10)
				  in  %% Line 1286
				      case Tlv3 of
					<[V3|Tlv4]> when 'true' ->
					    let <Term3> =
						%% Line 1287
						apply 'dec_AuthenticationChoice'/2
						    (V3, [])
					    in  do  %% Line 1289
						    case Tlv4 of
						      <[]> when 'true' ->
							  'ok'
						      <_cor17> when 'true' ->
							  'ok'
						    end
						    %% Line 1290
						    {'BindRequest',Val1,Term2,Term3}
					( <_cor12> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor12})
					  -| ['compiler_generated'] )
				      end
			  ( <_cor9> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor9})
			    -| ['compiler_generated'] )
			end
		    %% Line 1269
		    <> when 'true' ->
			%% Line 1270
			call 'erlang':'exit'
			    ({'error',{'asn1','bad_range'}})
		  end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_AuthenticationChoice'/1 =
    %% Line 1297
    fun (_cor0) ->
	%% Line 1298
	apply 'enc_AuthenticationChoice'/2
	    (_cor0, [])
'enc_AuthenticationChoice'/2 =
    %% Line 1300
    fun (_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 1301
	    case call 'erlang':'element'
		     (1, _cor1) of
	      %% Line 1302
	      <'simple'> when 'true' ->
		  let <_cor2> =
		      %% Line 1303
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 1303
		      apply 'encode_restricted_string'/2
			  (_cor2, [#{#<128>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 1304
	      <'sasl'> when 'true' ->
		  let <_cor3> =
		      %% Line 1305
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 1305
		      apply 'enc_SaslCredentials'/2
			  (_cor3, [#{#<163>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 1306
	      <Else> when 'true' ->
		  %% Line 1307
		  call 'erlang':'exit'
		      ({'error',{'asn1',{'invalid_choice_type',Else}}})
	    end
	in  %% Line 1301
	    case _cor5 of
	      <{EncBytes,EncLen}> when 'true' ->
		  %% Line 1310
		  apply 'encode_tags'/3
		      (_cor0, EncBytes, EncLen)
	      ( <_cor6> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor6})
		-| ['compiler_generated'] )
	    end
'dec_AuthenticationChoice'/1 =
    %% Line 1315
    fun (_cor0) ->
	%% Line 1316
	apply 'dec_AuthenticationChoice'/2
	    (_cor0, [])
'dec_AuthenticationChoice'/2 =
    %% Line 1318
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 1319
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  let <_cor4> =
		%% Line 1320
		case Tlv1 of
		  <[CtempTlv1|[]]> when 'true' ->
		      CtempTlv1
		  <_cor12> when 'true' ->
		      Tlv1
		end
	    in  %% Line 1320
		case _cor4 of
		  %% Line 1323
		  <{131072,V1}> when 'true' ->
		      let <_cor5> =
			  %% Line 1325
			  apply 'decode_restricted_string'/2
			      (V1, [])
		      in  let <_cor6> =
			      %% Line 1325
			      call 'erlang':'binary_to_list'
				  (_cor5)
			  in  %% Line 1324
			      {'simple',_cor6}
		  %% Line 1331
		  <{131075,V1}> when 'true' ->
		      let <_cor7> =
			  %% Line 1332
			  apply 'dec_SaslCredentials'/2
			      (V1, [])
		      in  %% Line 1332
			  {'sasl',_cor7}
		  %% Line 1334
		  <Else> when 'true' ->
		      let <_cor8> =
			  %% Line 1335
			  apply 'ber_encode'/1
			      (Else)
		      in  %% Line 1335
			  {'asn1_ExtAlt',_cor8}
		end
'enc_SaslCredentials'/1 =
    %% Line 1343
    fun (_cor0) ->
	%% Line 1344
	apply 'enc_SaslCredentials'/2
	    (_cor0, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#])
'enc_SaslCredentials'/2 =
    %% Line 1346
    fun (_cor1,_cor0) ->
	%% Line 1347
	case _cor1 of
	  <{_cor11,Cindex1,Cindex2}> when 'true' ->
	      %% Line 1352
	      case apply 'encode_restricted_string'/2
		       (Cindex1, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes1,EncLen1}> when 'true' ->
		    let <_cor5> =
			%% Line 1357
			case Cindex2 of
			  %% Line 1358
			  <'asn1_NOVALUE'> when 'true' ->
			      {#{}#,0}
			  %% Line 1359
			  <_cor12> when 'true' ->
			      %% Line 1360
			      apply 'encode_restricted_string'/2
				  (Cindex2, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#])
			end
		    in  %% Line 1357
			case _cor5 of
			  <{EncBytes2,EncLen2}> when 'true' ->
			      let <BytesSoFar> =
				  %% Line 1363
				  [EncBytes1|[EncBytes2|[]]]
			      in  let <LenSoFar> =
				      %% Line 1364
				      call 'erlang':'+'
					  (EncLen1, EncLen2)
				  in  %% Line 1365
				      apply 'encode_tags'/3
					  (_cor0, BytesSoFar, LenSoFar)
			  ( <_cor6> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor6})
			    -| ['compiler_generated'] )
			end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_SaslCredentials'/1 =
    %% Line 1368
    fun (_cor0) ->
	%% Line 1369
	apply 'dec_SaslCredentials'/2
	    (_cor0, [16])
'dec_SaslCredentials'/2 =
    %% Line 1371
    fun (_cor1,_cor0) ->
	%% Line 1380
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor4> =
		  %% Line 1382
		  apply 'decode_restricted_string'/2
		      (V1, [4])
	      in  let <Term1> =
		      %% Line 1382
		      call 'erlang':'binary_to_list'
			  (_cor4)
		  in  let <Term2,Tlv3> =
			  %% Line 1389
			  case Tlv2 of
			    %% Line 1390
			    <[{4,V2}|TempTlv3]> when 'true' ->
				let <_cor6> =
				    %% Line 1392
				    apply 'decode_restricted_string'/2
					(V2, [])
				in  let <_cor7> =
					%% Line 1392
					call 'erlang':'binary_to_list'
					    (_cor6)
				    in  <_cor7,%% Line 1394
					       TempTlv3>
			    %% Line 1395
			    <_cor14> when 'true' ->
				%% Line 1396
				<'asn1_NOVALUE',Tlv2>
			  end
		      in  do  %% Line 1399
			      case Tlv3 of
				<[]> when 'true' ->
				    'ok'
				<_cor15> when 'true' ->
				    'ok'
			      end
			      %% Line 1400
			      {'SaslCredentials',Term1,Term2}
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_BindResponse'/1 =
    %% Line 1407
    fun (_cor0) ->
	%% Line 1408
	apply 'enc_BindResponse'/2
	    (_cor0, [#{#<97>(8,1,'integer',['unsigned'|['big']])}#])
'enc_BindResponse'/2 =
    %% Line 1410
    fun (_cor1,_cor0) ->
	%% Line 1411
	case _cor1 of
	  <{_cor21,Cindex1,Cindex2,Cindex3,Cindex4,Cindex5}> when 'true' ->
	      let <_cor4> =
		  %% Line 1416
		  case Cindex1 of
		    %% Line 1417
		    <'success'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [0], 1)
		    %% Line 1418
		    <'operationsError'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [1], 1)
		    %% Line 1419
		    <'protocolError'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [2], 1)
		    %% Line 1420
		    <'timeLimitExceeded'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [3], 1)
		    %% Line 1421
		    <'sizeLimitExceeded'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [4], 1)
		    %% Line 1422
		    <'compareFalse'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [5], 1)
		    %% Line 1423
		    <'compareTrue'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [6], 1)
		    %% Line 1424
		    <'authMethodNotSupported'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [7], 1)
		    %% Line 1425
		    <'strongerAuthRequired'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [8], 1)
		    %% Line 1426
		    <'referral'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [10], 1)
		    %% Line 1427
		    <'adminLimitExceeded'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [11], 1)
		    %% Line 1428
		    <'unavailableCriticalExtension'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [12], 1)
		    %% Line 1429
		    <'confidentialityRequired'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [13], 1)
		    %% Line 1430
		    <'saslBindInProgress'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [14], 1)
		    %% Line 1431
		    <'noSuchAttribute'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [16], 1)
		    %% Line 1432
		    <'undefinedAttributeType'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [17], 1)
		    %% Line 1433
		    <'inappropriateMatching'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [18], 1)
		    %% Line 1434
		    <'constraintViolation'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [19], 1)
		    %% Line 1435
		    <'attributeOrValueExists'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [20], 1)
		    %% Line 1436
		    <'invalidAttributeSyntax'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [21], 1)
		    %% Line 1437
		    <'noSuchObject'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [32], 1)
		    %% Line 1438
		    <'aliasProblem'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [33], 1)
		    %% Line 1439
		    <'invalidDNSyntax'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [34], 1)
		    %% Line 1440
		    <'aliasDereferencingProblem'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [36], 1)
		    %% Line 1441
		    <'inappropriateAuthentication'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [48], 1)
		    %% Line 1442
		    <'invalidCredentials'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [49], 1)
		    %% Line 1443
		    <'insufficientAccessRights'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [50], 1)
		    %% Line 1444
		    <'busy'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [51], 1)
		    %% Line 1445
		    <'unavailable'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [52], 1)
		    %% Line 1446
		    <'unwillingToPerform'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [53], 1)
		    %% Line 1447
		    <'loopDetect'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [54], 1)
		    %% Line 1448
		    <'namingViolation'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [64], 1)
		    %% Line 1449
		    <'objectClassViolation'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [65], 1)
		    %% Line 1450
		    <'notAllowedOnNonLeaf'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [66], 1)
		    %% Line 1451
		    <'notAllowedOnRDN'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [67], 1)
		    %% Line 1452
		    <'entryAlreadyExists'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [68], 1)
		    %% Line 1453
		    <'objectClassModsProhibited'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [69], 1)
		    %% Line 1454
		    <'affectsMultipleDSAs'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [71], 1)
		    %% Line 1455
		    <'other'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [80], 1)
		    %% Line 1456
		    <Enumval1> when 'true' ->
			call 'erlang':'exit'
			    ({'error',{'asn1',{'enumerated_not_in_range',Enumval1}}})
		  end
	      in  %% Line 1416
		  case _cor4 of
		    <{EncBytes1,EncLen1}> when 'true' ->
			%% Line 1462
			case apply 'encode_restricted_string'/2
				 (Cindex2, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
			  <{EncBytes2,EncLen2}> when 'true' ->
			      %% Line 1467
			      case apply 'encode_restricted_string'/2
				       (Cindex3, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
				<{EncBytes3,EncLen3}> when 'true' ->
				    let <_cor9> =
					%% Line 1472
					case Cindex4 of
					  %% Line 1473
					  <'asn1_NOVALUE'> when 'true' ->
					      {#{}#,0}
					  %% Line 1474
					  <_cor22> when 'true' ->
					      %% Line 1475
					      apply 'enc_Referral'/2
						  (Cindex4, [#{#<163>(8,1,'integer',['unsigned'|['big']])}#])
					end
				    in  %% Line 1472
					case _cor9 of
					  <{EncBytes4,EncLen4}> when 'true' ->
					      let <_cor12> =
						  %% Line 1481
						  case Cindex5 of
						    %% Line 1482
						    <'asn1_NOVALUE'> when 'true' ->
							{#{}#,0}
						    %% Line 1483
						    <_cor23> when 'true' ->
							%% Line 1484
							apply 'encode_restricted_string'/2
							    (Cindex5, [#{#<135>(8,1,'integer',['unsigned'|['big']])}#])
						  end
					      in  %% Line 1481
						  case _cor12 of
						    <{EncBytes5,EncLen5}> when 'true' ->
							let <BytesSoFar> =
							    %% Line 1487
							    [EncBytes1|[EncBytes2|[EncBytes3|[EncBytes4|[EncBytes5|[]]]]]]
							in  let <_cor15> =
								%% Line 1488
								call 'erlang':'+'
								    (EncLen1, EncLen2)
							    in  let <_cor16> =
								    %% Line 1488
								    call 'erlang':'+'
									(_cor15, EncLen3)
								in  let <_cor17> =
									%% Line 1488
									call 'erlang':'+'
									    (_cor16, EncLen4)
								    in  let <LenSoFar> =
									    %% Line 1488
									    call 'erlang':'+'
										(_cor17, EncLen5)
									in  %% Line 1489
									    apply 'encode_tags'/3
										(_cor0, BytesSoFar, LenSoFar)
						    ( <_cor13> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor13})
						      -| ['compiler_generated'] )
						  end
					  ( <_cor10> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_cor10})
					    -| ['compiler_generated'] )
					end
				( <_cor7> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor7})
				  -| ['compiler_generated'] )
			      end
			  ( <_cor6> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor6})
			    -| ['compiler_generated'] )
			end
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_BindResponse'/1 =
    %% Line 1492
    fun (_cor0) ->
	%% Line 1493
	apply 'dec_BindResponse'/2
	    (_cor0, [65537])
'dec_BindResponse'/2 =
    %% Line 1495
    fun (_cor1,_cor0) ->
	%% Line 1504
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor5> =
		  %% Line 1505
		  case apply 'decode_integer'/2
			   (V1, [10]) of
		    %% Line 1506
		    <0> when 'true' ->
			'success'
		    %% Line 1507
		    <1> when 'true' ->
			'operationsError'
		    %% Line 1508
		    <2> when 'true' ->
			'protocolError'
		    %% Line 1509
		    <3> when 'true' ->
			'timeLimitExceeded'
		    %% Line 1510
		    <4> when 'true' ->
			'sizeLimitExceeded'
		    %% Line 1511
		    <5> when 'true' ->
			'compareFalse'
		    %% Line 1512
		    <6> when 'true' ->
			'compareTrue'
		    %% Line 1513
		    <7> when 'true' ->
			'authMethodNotSupported'
		    %% Line 1514
		    <8> when 'true' ->
			'strongerAuthRequired'
		    %% Line 1515
		    <10> when 'true' ->
			'referral'
		    %% Line 1516
		    <11> when 'true' ->
			'adminLimitExceeded'
		    %% Line 1517
		    <12> when 'true' ->
			'unavailableCriticalExtension'
		    %% Line 1518
		    <13> when 'true' ->
			'confidentialityRequired'
		    %% Line 1519
		    <14> when 'true' ->
			'saslBindInProgress'
		    %% Line 1520
		    <16> when 'true' ->
			'noSuchAttribute'
		    %% Line 1521
		    <17> when 'true' ->
			'undefinedAttributeType'
		    %% Line 1522
		    <18> when 'true' ->
			'inappropriateMatching'
		    %% Line 1523
		    <19> when 'true' ->
			'constraintViolation'
		    %% Line 1524
		    <20> when 'true' ->
			'attributeOrValueExists'
		    %% Line 1525
		    <21> when 'true' ->
			'invalidAttributeSyntax'
		    %% Line 1526
		    <32> when 'true' ->
			'noSuchObject'
		    %% Line 1527
		    <33> when 'true' ->
			'aliasProblem'
		    %% Line 1528
		    <34> when 'true' ->
			'invalidDNSyntax'
		    %% Line 1529
		    <36> when 'true' ->
			'aliasDereferencingProblem'
		    %% Line 1530
		    <48> when 'true' ->
			'inappropriateAuthentication'
		    %% Line 1531
		    <49> when 'true' ->
			'invalidCredentials'
		    %% Line 1532
		    <50> when 'true' ->
			'insufficientAccessRights'
		    %% Line 1533
		    <51> when 'true' ->
			'busy'
		    %% Line 1534
		    <52> when 'true' ->
			'unavailable'
		    %% Line 1535
		    <53> when 'true' ->
			'unwillingToPerform'
		    %% Line 1536
		    <54> when 'true' ->
			'loopDetect'
		    %% Line 1537
		    <64> when 'true' ->
			'namingViolation'
		    %% Line 1538
		    <65> when 'true' ->
			'objectClassViolation'
		    %% Line 1539
		    <66> when 'true' ->
			'notAllowedOnNonLeaf'
		    %% Line 1540
		    <67> when 'true' ->
			'notAllowedOnRDN'
		    %% Line 1541
		    <68> when 'true' ->
			'entryAlreadyExists'
		    %% Line 1542
		    <69> when 'true' ->
			'objectClassModsProhibited'
		    %% Line 1543
		    <71> when 'true' ->
			'affectsMultipleDSAs'
		    %% Line 1544
		    <80> when 'true' ->
			'other'
		    %% Line 1545
		    <Default1> when 'true' ->
			{'asn1_enum',Default1}
		  end
	      in  %% Line 1551
		  case Tlv2 of
		    <[V2|Tlv3]> when 'true' ->
			let <_cor8> =
			    %% Line 1553
			    apply 'decode_restricted_string'/2
				(V2, [4])
			in  let <Term2> =
				%% Line 1553
				call 'erlang':'binary_to_list'
				    (_cor8)
			    in  %% Line 1560
				case Tlv3 of
				  <[V3|Tlv4]> when 'true' ->
				      let <_cor11> =
					  %% Line 1562
					  apply 'decode_restricted_string'/2
					      (V3, [4])
				      in  let <Term3> =
					      %% Line 1562
					      call 'erlang':'binary_to_list'
						  (_cor11)
					  in  let <Term4,Tlv5> =
						  %% Line 1569
						  case Tlv4 of
						    %% Line 1570
						    <[{131075,V4}|TempTlv5]> when 'true' ->
							let <_cor13> =
							    %% Line 1571
							    apply 'dec_Referral'/2
								(V4, [])
							in  <_cor13,%% Line 1571
								    TempTlv5>
						    %% Line 1572
						    <_cor25> when 'true' ->
							%% Line 1573
							<'asn1_NOVALUE',Tlv4>
						  end
					      in  let <Term5,Tlv6> =
						      %% Line 1579
						      case Tlv5 of
							%% Line 1580
							<[{131079,V5}|TempTlv6]> when 'true' ->
							    let <_cor17> =
								%% Line 1582
								apply 'decode_restricted_string'/2
								    (V5, [])
							    in  let <_cor18> =
								    %% Line 1582
								    call 'erlang':'binary_to_list'
									(_cor17)
								in  <_cor18,%% Line 1584
									    TempTlv6>
							%% Line 1585
							<_cor26> when 'true' ->
							    %% Line 1586
							    <'asn1_NOVALUE',Tlv5>
						      end
						  in  do  %% Line 1589
							  case Tlv6 of
							    <[]> when 'true' ->
								'ok'
							    <_cor27> when 'true' ->
								'ok'
							  end
							  %% Line 1590
							  {'BindResponse',_cor5,Term2,Term3,Term4,Term5}
				  ( <_cor10> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor10})
				    -| ['compiler_generated'] )
				end
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor7})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_UnbindRequest'/1 =
    %% Line 1597
    fun (_cor0) ->
	%% Line 1598
	apply 'enc_UnbindRequest'/2
	    (_cor0, [#{#<66>(8,1,'integer',['unsigned'|['big']])}#])
'enc_UnbindRequest'/2 =
    %% Line 1600
    fun (_cor1,_cor0) ->
	%% Line 1601
	apply 'encode_null'/2
	    (_cor1, _cor0)
'dec_UnbindRequest'/1 =
    %% Line 1604
    fun (_cor0) ->
	%% Line 1605
	apply 'dec_UnbindRequest'/2
	    (_cor0, [65538])
'dec_UnbindRequest'/2 =
    %% Line 1607
    fun (_cor1,_cor0) ->
	%% Line 1608
	apply 'decode_null'/2
	    (_cor1, _cor0)
'enc_SearchRequest'/1 =
    %% Line 1615
    fun (_cor0) ->
	%% Line 1616
	apply 'enc_SearchRequest'/2
	    (_cor0, [#{#<99>(8,1,'integer',['unsigned'|['big']])}#])
'enc_SearchRequest'/2 =
    %% Line 1618
    fun (_cor1,_cor0) ->
	%% Line 1619
	case _cor1 of
	  <{_cor25,Cindex1,Cindex2,Cindex3,Cindex4,Cindex5,Cindex6,Cindex7,Cindex8}> when 'true' ->
	      %% Line 1624
	      case apply 'encode_restricted_string'/2
		       (Cindex1, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes1,EncLen1}> when 'true' ->
		    let <_cor5> =
			%% Line 1629
			case Cindex2 of
			  %% Line 1630
			  <'baseObject'> when 'true' ->
			      apply 'encode_tags'/3
				  ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [0], 1)
			  %% Line 1631
			  <'singleLevel'> when 'true' ->
			      apply 'encode_tags'/3
				  ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [1], 1)
			  %% Line 1632
			  <'wholeSubtree'> when 'true' ->
			      apply 'encode_tags'/3
				  ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [2], 1)
			  %% Line 1633
			  <Enumval2> when 'true' ->
			      call 'erlang':'exit'
				  ({'error',{'asn1',{'enumerated_not_in_range',Enumval2}}})
			end
		    in  %% Line 1629
			case _cor5 of
			  <{EncBytes2,EncLen2}> when 'true' ->
			      let <_cor8> =
				  %% Line 1639
				  case Cindex3 of
				    %% Line 1640
				    <'neverDerefAliases'> when 'true' ->
					apply 'encode_tags'/3
					    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [0], 1)
				    %% Line 1641
				    <'derefInSearching'> when 'true' ->
					apply 'encode_tags'/3
					    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [1], 1)
				    %% Line 1642
				    <'derefFindingBaseObj'> when 'true' ->
					apply 'encode_tags'/3
					    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [2], 1)
				    %% Line 1643
				    <'derefAlways'> when 'true' ->
					apply 'encode_tags'/3
					    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [3], 1)
				    %% Line 1644
				    <Enumval3> when 'true' ->
					call 'erlang':'exit'
					    ({'error',{'asn1',{'enumerated_not_in_range',Enumval3}}})
				  end
			      in  %% Line 1639
				  case _cor8 of
				    <{EncBytes3,EncLen3}> when 'true' ->
					%% Line 1650
					case apply 'encode_integer'/2
						 (Cindex4, [#{#<2>(8,1,'integer',['unsigned'|['big']])}#]) of
					  <{EncBytes4,EncLen4}> when 'true' ->
					      %% Line 1655
					      case apply 'encode_integer'/2
						       (Cindex5, [#{#<2>(8,1,'integer',['unsigned'|['big']])}#]) of
						<{EncBytes5,EncLen5}> when 'true' ->
						    %% Line 1660
						    case apply 'encode_boolean'/2
							     (Cindex6, [#{#<1>(8,1,'integer',['unsigned'|['big']])}#]) of
						      <{EncBytes6,EncLen6}> when 'true' ->
							  %% Line 1665
							  case apply 'enc_Filter'/2
								   (Cindex7, []) of
							    <{EncBytes7,EncLen7}> when 'true' ->
								%% Line 1670
								case apply 'enc_AttributeSelection'/2
									 (Cindex8, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#]) of
								  <{EncBytes8,EncLen8}> when 'true' ->
								      let <BytesSoFar> =
									  %% Line 1672
									  [EncBytes1|[EncBytes2|[EncBytes3|[EncBytes4|[EncBytes5|[EncBytes6|[EncBytes7|[EncBytes8|[]]]]]]]]]
								      in  let <_cor16> =
									      %% Line 1673
									      call 'erlang':'+'
										  (EncLen1, EncLen2)
									  in  let <_cor17> =
										  %% Line 1673
										  call 'erlang':'+'
										      (_cor16, EncLen3)
									      in  let <_cor18> =
										      %% Line 1673
										      call 'erlang':'+'
											  (_cor17, EncLen4)
										  in  let <_cor19> =
											  %% Line 1673
											  call 'erlang':'+'
											      (_cor18, EncLen5)
										      in  let <_cor20> =
											      %% Line 1673
											      call 'erlang':'+'
												  (_cor19, EncLen6)
											  in  let <_cor21> =
												  %% Line 1673
												  call 'erlang':'+'
												      (_cor20, EncLen7)
											      in  let <LenSoFar> =
												      %% Line 1673
												      call 'erlang':'+'
													  (_cor21, EncLen8)
												  in  %% Line 1674
												      apply 'encode_tags'/3
													  (_cor0, BytesSoFar, LenSoFar)
								  ( <_cor14> when 'true' ->
									primop 'match_fail'
									    ({'badmatch',_cor14})
								    -| ['compiler_generated'] )
								end
							    ( <_cor13> when 'true' ->
								  primop 'match_fail'
								      ({'badmatch',_cor13})
							      -| ['compiler_generated'] )
							  end
						      ( <_cor12> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_cor12})
							-| ['compiler_generated'] )
						    end
						( <_cor11> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_cor11})
						  -| ['compiler_generated'] )
					      end
					  ( <_cor10> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_cor10})
					    -| ['compiler_generated'] )
					end
				    ( <_cor9> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor9})
				      -| ['compiler_generated'] )
				  end
			  ( <_cor6> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor6})
			    -| ['compiler_generated'] )
			end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_SearchRequest'/1 =
    %% Line 1677
    fun (_cor0) ->
	%% Line 1678
	apply 'dec_SearchRequest'/2
	    (_cor0, [65539])
'dec_SearchRequest'/2 =
    %% Line 1680
    fun (_cor1,_cor0) ->
	%% Line 1689
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor4> =
		  %% Line 1691
		  apply 'decode_restricted_string'/2
		      (V1, [4])
	      in  let <Term1> =
		      %% Line 1691
		      call 'erlang':'binary_to_list'
			  (_cor4)
		  in  %% Line 1698
		      case Tlv2 of
			<[V2|Tlv3]> when 'true' ->
			    let <_cor8> =
				%% Line 1699
				case apply 'decode_integer'/2
					 (V2, [10]) of
				  %% Line 1700
				  <0> when 'true' ->
				      'baseObject'
				  %% Line 1701
				  <1> when 'true' ->
				      'singleLevel'
				  %% Line 1702
				  <2> when 'true' ->
				      'wholeSubtree'
				  %% Line 1703
				  <Default1> when 'true' ->
				      {'asn1_enum',Default1}
				end
			    in  %% Line 1709
				case Tlv3 of
				  <[V3|Tlv4]> when 'true' ->
				      let <_cor12> =
					  %% Line 1710
					  case apply 'decode_integer'/2
						   (V3, [10]) of
					    %% Line 1711
					    <0> when 'true' ->
						'neverDerefAliases'
					    %% Line 1712
					    <1> when 'true' ->
						'derefInSearching'
					    %% Line 1713
					    <2> when 'true' ->
						'derefFindingBaseObj'
					    %% Line 1714
					    <3> when 'true' ->
						'derefAlways'
					    %% Line 1715
					    <Default2> when 'true' ->
						{'asn1_enum',Default2}
					  end
				      in  %% Line 1721
					  case Tlv4 of
					    <[V4|Tlv5]> when 'true' ->
						let <Val1> =
						    %% Line 1723
						    apply 'decode_integer'/2
							(V4, [2])
						in  %% Line 1724
						    case <> of
						      <>
							  when let <_cor16> =
								call 'erlang':'=<'
								    (0, Val1)
							    in  let <_cor17> =
								    call 'erlang':'=<'
									(Val1, 2147483647)
								in  call 'erlang':'and'
									(_cor16, _cor17) ->
							  %% Line 1734
							  case Tlv5 of
							    <[V5|Tlv6]> when 'true' ->
								let <Val2> =
								    %% Line 1736
								    apply 'decode_integer'/2
									(V5, [2])
								in  %% Line 1737
								    case <> of
								      <>
									  when let <_cor22> =
										call 'erlang':'=<'
										    (0, Val2)
									    in  let <_cor23> =
										    call 'erlang':'=<'
											(Val2, 2147483647)
										in  call 'erlang':'and'
											(_cor22, _cor23) ->
									  %% Line 1747
									  case Tlv6 of
									    <[V6|Tlv7]> when 'true' ->
										let <Term6> =
										    %% Line 1748
										    apply 'decode_boolean'/2
											(V6, [1])
										in  %% Line 1753
										    case Tlv7 of
										      <[V7|Tlv8]> when 'true' ->
											  let <Term7> =
											      %% Line 1754
											      apply 'dec_Filter'/2
												  (V7, [])
											  in  %% Line 1759
											      case Tlv8 of
												<[V8|Tlv9]> when 'true' ->
												    let <Term8> =
													%% Line 1760
													apply 'dec_AttributeSelection'/2
													    (V8, [16])
												    in  do  %% Line 1762
													    case Tlv9 of
													      <[]> when 'true' ->
														  'ok'
													      <_cor35> when 'true' ->
														  'ok'
													    end
													    %% Line 1763
													    {'SearchRequest',Term1,_cor8,_cor12,Val1,Val2,Term6,Term7,Term8}
												( <_cor30> when 'true' ->
												      primop 'match_fail'
													  ({'badmatch',_cor30})
												  -| ['compiler_generated'] )
											      end
										      ( <_cor28> when 'true' ->
											    primop 'match_fail'
												({'badmatch',_cor28})
											-| ['compiler_generated'] )
										    end
									    ( <_cor26> when 'true' ->
										  primop 'match_fail'
										      ({'badmatch',_cor26})
									      -| ['compiler_generated'] )
									  end
								      %% Line 1739
								      <> when 'true' ->
									  %% Line 1740
									  call 'erlang':'exit'
									      ({'error',{'asn1','bad_range'}})
								    end
							    ( <_cor20> when 'true' ->
								  primop 'match_fail'
								      ({'badmatch',_cor20})
							      -| ['compiler_generated'] )
							  end
						      %% Line 1726
						      <> when 'true' ->
							  %% Line 1727
							  call 'erlang':'exit'
							      ({'error',{'asn1','bad_range'}})
						    end
					    ( <_cor14> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_cor14})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor10> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor10})
				    -| ['compiler_generated'] )
				end
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor6})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_AttributeSelection'/1 =
    %% Line 1770
    fun (_cor0) ->
	%% Line 1771
	apply 'enc_AttributeSelection'/2
	    (_cor0, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#])
'enc_AttributeSelection'/2 =
    %% Line 1773
    fun (_cor1,_cor0) ->
	%% Line 1774
	case apply 'enc_AttributeSelection_components'/3
		 (_cor1, [], 0) of
	  <{EncBytes,EncLen}> when 'true' ->
	      %% Line 1775
	      apply 'encode_tags'/3
		  (_cor0, EncBytes, EncLen)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_AttributeSelection_components'/3 =
    %% Line 1777
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],AccBytes,AccLen> when 'true' ->
	      let <_cor3> =
		  %% Line 1778
		  call 'lists':'reverse'
		      (AccBytes)
	      in  %% Line 1778
		  {_cor3,AccLen}
	  %% Line 1780
	  <[H|T],AccBytes,AccLen> when 'true' ->
	      %% Line 1781
	      case apply 'encode_restricted_string'/2
		       (H, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes,EncLen}> when 'true' ->
		    let <_cor5> =
			%% Line 1782
			call 'erlang':'+'
			    (AccLen, EncLen)
		    in  %% Line 1782
			apply 'enc_AttributeSelection_components'/3
			    (T, [EncBytes|AccBytes], _cor5)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'enc_AttributeSelection_components',3}}] )
	    -| ['compiler_generated'] )
	end
'dec_AttributeSelection'/1 =
    %% Line 1786
    fun (_cor0) ->
	%% Line 1787
	apply 'dec_AttributeSelection'/2
	    (_cor0, [16])
'dec_AttributeSelection'/2 =
    %% Line 1789
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 1793
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  %% Line 1794
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[%% Line 1797
			      V1|_cor4]> when 'true' ->
				let <_cor6> =
				    %% Line 1795
				    apply 'decode_restricted_string'/2
					(V1, [4])
				in  let <_cor7> =
					%% Line 1795
					call 'erlang':'binary_to_list'
					    (_cor6)
				    in  let <_cor8> =
					    %% Line 1797
					    apply 'lc$^0'/1
						(_cor4)
					in  ( [_cor7|_cor8]
					      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor5> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (%% Line 1797
		       Tlv1)
	      -| ['list_comprehension'] )
'enc_Filter'/1 =
    %% Line 1805
    fun (_cor0) ->
	%% Line 1806
	apply 'enc_Filter'/2
	    (_cor0, [])
'enc_Filter'/2 =
    %% Line 1808
    fun (_cor1,_cor0) ->
	let <_cor13> =
	    %% Line 1809
	    case call 'erlang':'element'
		     (1, _cor1) of
	      %% Line 1810
	      <'and'> when 'true' ->
		  let <_cor2> =
		      %% Line 1811
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 1811
		      apply 'enc_Filter_and'/2
			  (_cor2, [#{#<160>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 1812
	      <'or'> when 'true' ->
		  let <_cor3> =
		      %% Line 1813
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 1813
		      apply 'enc_Filter_or'/2
			  (_cor3, [#{#<161>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 1814
	      <'not'> when 'true' ->
		  let <_cor4> =
		      %% Line 1815
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 1815
		      apply 'enc_Filter'/2
			  (_cor4, [#{#<162>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 1816
	      <'equalityMatch'> when 'true' ->
		  let <_cor5> =
		      %% Line 1817
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 1817
		      apply 'enc_AttributeValueAssertion'/2
			  (_cor5, [#{#<163>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 1818
	      <'substrings'> when 'true' ->
		  let <_cor6> =
		      %% Line 1819
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 1819
		      apply 'enc_SubstringFilter'/2
			  (_cor6, [#{#<164>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 1820
	      <'greaterOrEqual'> when 'true' ->
		  let <_cor7> =
		      %% Line 1821
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 1821
		      apply 'enc_AttributeValueAssertion'/2
			  (_cor7, [#{#<165>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 1822
	      <'lessOrEqual'> when 'true' ->
		  let <_cor8> =
		      %% Line 1823
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 1823
		      apply 'enc_AttributeValueAssertion'/2
			  (_cor8, [#{#<166>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 1824
	      <'present'> when 'true' ->
		  let <_cor9> =
		      %% Line 1825
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 1825
		      apply 'encode_restricted_string'/2
			  (_cor9, [#{#<135>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 1826
	      <'approxMatch'> when 'true' ->
		  let <_cor10> =
		      %% Line 1827
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 1827
		      apply 'enc_AttributeValueAssertion'/2
			  (_cor10, [#{#<168>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 1828
	      <'extensibleMatch'> when 'true' ->
		  let <_cor11> =
		      %% Line 1829
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 1829
		      apply 'enc_MatchingRuleAssertion'/2
			  (_cor11, [#{#<169>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 1830
	      <Else> when 'true' ->
		  %% Line 1831
		  call 'erlang':'exit'
		      ({'error',{'asn1',{'invalid_choice_type',Else}}})
	    end
	in  %% Line 1809
	    case _cor13 of
	      <{EncBytes,EncLen}> when 'true' ->
		  %% Line 1834
		  apply 'encode_tags'/3
		      (_cor0, EncBytes, EncLen)
	      ( <_cor14> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor14})
		-| ['compiler_generated'] )
	    end
'enc_Filter_and'/2 =
    %% Line 1843
    fun (_cor1,_cor0) ->
	%% Line 1844
	case apply 'enc_Filter_and_components'/3
		 (_cor1, [], 0) of
	  <{EncBytes,EncLen}> when 'true' ->
	      %% Line 1845
	      apply 'encode_tags'/3
		  (_cor0, EncBytes, EncLen)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_Filter_and_components'/3 =
    %% Line 1847
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],AccBytes,AccLen> when 'true' ->
	      let <_cor3> =
		  %% Line 1848
		  call 'lists':'reverse'
		      (AccBytes)
	      in  %% Line 1848
		  {_cor3,AccLen}
	  %% Line 1850
	  <[H|T],AccBytes,AccLen> when 'true' ->
	      %% Line 1851
	      case apply 'enc_Filter'/2
		       (H, []) of
		<{EncBytes,EncLen}> when 'true' ->
		    let <_cor5> =
			%% Line 1852
			call 'erlang':'+'
			    (AccLen, EncLen)
		    in  %% Line 1852
			apply 'enc_Filter_and_components'/3
			    (T, [EncBytes|AccBytes], _cor5)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'enc_Filter_and_components',3}}] )
	    -| ['compiler_generated'] )
	end
'dec_Filter_and'/2 =
    %% Line 1854
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 1858
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  %% Line 1859
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[V1|_cor4]> when 'true' ->
				let <_cor6> =
				    apply 'dec_Filter'/2
					(V1, [])
				in  let <_cor7> =
					apply 'lc$^0'/1
					    (_cor4)
				    in  ( [_cor6|_cor7]
					  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor5> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (Tlv1)
	      -| ['list_comprehension'] )
'enc_Filter_or'/2 =
    %% Line 1868
    fun (_cor1,_cor0) ->
	%% Line 1869
	case apply 'enc_Filter_or_components'/3
		 (_cor1, [], 0) of
	  <{EncBytes,EncLen}> when 'true' ->
	      %% Line 1870
	      apply 'encode_tags'/3
		  (_cor0, EncBytes, EncLen)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_Filter_or_components'/3 =
    %% Line 1872
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],AccBytes,AccLen> when 'true' ->
	      let <_cor3> =
		  %% Line 1873
		  call 'lists':'reverse'
		      (AccBytes)
	      in  %% Line 1873
		  {_cor3,AccLen}
	  %% Line 1875
	  <[H|T],AccBytes,AccLen> when 'true' ->
	      %% Line 1876
	      case apply 'enc_Filter'/2
		       (H, []) of
		<{EncBytes,EncLen}> when 'true' ->
		    let <_cor5> =
			%% Line 1877
			call 'erlang':'+'
			    (AccLen, EncLen)
		    in  %% Line 1877
			apply 'enc_Filter_or_components'/3
			    (T, [EncBytes|AccBytes], _cor5)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'enc_Filter_or_components',3}}] )
	    -| ['compiler_generated'] )
	end
'dec_Filter_or'/2 =
    %% Line 1879
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 1883
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  %% Line 1884
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[V1|_cor4]> when 'true' ->
				let <_cor6> =
				    apply 'dec_Filter'/2
					(V1, [])
				in  let <_cor7> =
					apply 'lc$^0'/1
					    (_cor4)
				    in  ( [_cor6|_cor7]
					  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor5> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (Tlv1)
	      -| ['list_comprehension'] )
'dec_Filter'/1 =
    %% Line 1889
    fun (_cor0) ->
	%% Line 1890
	apply 'dec_Filter'/2
	    (_cor0, [])
'dec_Filter'/2 =
    %% Line 1892
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 1893
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  let <_cor4> =
		%% Line 1894
		case Tlv1 of
		  <[CtempTlv1|[]]> when 'true' ->
		      CtempTlv1
		  <_cor20> when 'true' ->
		      Tlv1
		end
	    in  %% Line 1894
		case _cor4 of
		  %% Line 1897
		  <{131072,V1}> when 'true' ->
		      let <_cor5> =
			  %% Line 1898
			  apply 'dec_Filter_and'/2
			      (V1, [])
		      in  %% Line 1898
			  {'and',_cor5}
		  %% Line 1902
		  <{131073,V1}> when 'true' ->
		      let <_cor6> =
			  %% Line 1903
			  apply 'dec_Filter_or'/2
			      (V1, [])
		      in  %% Line 1903
			  {'or',_cor6}
		  %% Line 1907
		  <{131074,V1}> when 'true' ->
		      let <_cor7> =
			  %% Line 1908
			  apply 'dec_Filter'/2
			      (V1, [])
		      in  %% Line 1908
			  {'not',_cor7}
		  %% Line 1912
		  <{131075,V1}> when 'true' ->
		      let <_cor8> =
			  %% Line 1913
			  apply 'dec_AttributeValueAssertion'/2
			      (V1, [])
		      in  %% Line 1913
			  {'equalityMatch',_cor8}
		  %% Line 1917
		  <{131076,V1}> when 'true' ->
		      let <_cor9> =
			  %% Line 1918
			  apply 'dec_SubstringFilter'/2
			      (V1, [])
		      in  %% Line 1918
			  {'substrings',_cor9}
		  %% Line 1922
		  <{131077,V1}> when 'true' ->
		      let <_cor10> =
			  %% Line 1923
			  apply 'dec_AttributeValueAssertion'/2
			      (V1, [])
		      in  %% Line 1923
			  {'greaterOrEqual',_cor10}
		  %% Line 1927
		  <{131078,V1}> when 'true' ->
		      let <_cor11> =
			  %% Line 1928
			  apply 'dec_AttributeValueAssertion'/2
			      (V1, [])
		      in  %% Line 1928
			  {'lessOrEqual',_cor11}
		  %% Line 1932
		  <{131079,V1}> when 'true' ->
		      let <_cor12> =
			  %% Line 1934
			  apply 'decode_restricted_string'/2
			      (V1, [])
		      in  let <_cor13> =
			      %% Line 1934
			      call 'erlang':'binary_to_list'
				  (_cor12)
			  in  %% Line 1933
			      {'present',_cor13}
		  %% Line 1940
		  <{131080,V1}> when 'true' ->
		      let <_cor14> =
			  %% Line 1941
			  apply 'dec_AttributeValueAssertion'/2
			      (V1, [])
		      in  %% Line 1941
			  {'approxMatch',_cor14}
		  %% Line 1945
		  <{131081,V1}> when 'true' ->
		      let <_cor15> =
			  %% Line 1946
			  apply 'dec_MatchingRuleAssertion'/2
			      (V1, [])
		      in  %% Line 1946
			  {'extensibleMatch',_cor15}
		  %% Line 1948
		  <Else> when 'true' ->
		      let <_cor16> =
			  %% Line 1949
			  apply 'ber_encode'/1
			      (Else)
		      in  %% Line 1949
			  {'asn1_ExtAlt',_cor16}
		end
'enc_SubstringFilter'/1 =
    %% Line 1957
    fun (_cor0) ->
	%% Line 1958
	apply 'enc_SubstringFilter'/2
	    (_cor0, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#])
'enc_SubstringFilter'/2 =
    %% Line 1960
    fun (_cor1,_cor0) ->
	%% Line 1961
	case _cor1 of
	  <{_cor9,Cindex1,Cindex2}> when 'true' ->
	      %% Line 1966
	      case apply 'encode_restricted_string'/2
		       (Cindex1, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes1,EncLen1}> when 'true' ->
		    %% Line 1971
		    case apply 'enc_SubstringFilter_substrings'/2
			     (Cindex2, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#]) of
		      <{EncBytes2,EncLen2}> when 'true' ->
			  let <BytesSoFar> =
			      %% Line 1973
			      [EncBytes1|[EncBytes2|[]]]
			  in  let <LenSoFar> =
				  %% Line 1974
				  call 'erlang':'+'
				      (EncLen1, EncLen2)
			      in  %% Line 1975
				  apply 'encode_tags'/3
				      (_cor0, BytesSoFar, LenSoFar)
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_SubstringFilter_substrings'/2 =
    %% Line 1982
    fun (_cor1,_cor0) ->
	%% Line 1983
	case apply 'enc_SubstringFilter_substrings_components'/3
		 (_cor1, [], 0) of
	  <{EncBytes,EncLen}> when 'true' ->
	      %% Line 1984
	      apply 'encode_tags'/3
		  (_cor0, EncBytes, EncLen)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_SubstringFilter_substrings_components'/3 =
    %% Line 1986
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],AccBytes,AccLen> when 'true' ->
	      let <_cor3> =
		  %% Line 1987
		  call 'lists':'reverse'
		      (AccBytes)
	      in  %% Line 1987
		  {_cor3,AccLen}
	  %% Line 1989
	  <[H|T],AccBytes,AccLen> when 'true' ->
	      %% Line 1990
	      case apply 'enc_SubstringFilter_substrings_SEQOF'/2
		       (H, []) of
		<{EncBytes,EncLen}> when 'true' ->
		    let <_cor5> =
			%% Line 1991
			call 'erlang':'+'
			    (AccLen, EncLen)
		    in  %% Line 1991
			apply 'enc_SubstringFilter_substrings_components'/3
			    (T, [EncBytes|AccBytes], _cor5)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'enc_SubstringFilter_substrings_components',3}}] )
	    -| ['compiler_generated'] )
	end
'enc_SubstringFilter_substrings_SEQOF'/2 =
    %% Line 1999
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 2000
	    case call 'erlang':'element'
		     (1, _cor1) of
	      %% Line 2001
	      <'initial'> when 'true' ->
		  let <_cor2> =
		      %% Line 2002
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 2002
		      apply 'encode_restricted_string'/2
			  (_cor2, [#{#<128>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 2003
	      <'any'> when 'true' ->
		  let <_cor3> =
		      %% Line 2004
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 2004
		      apply 'encode_restricted_string'/2
			  (_cor3, [#{#<129>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 2005
	      <'final'> when 'true' ->
		  let <_cor4> =
		      %% Line 2006
		      call 'erlang':'element'
			  (2, _cor1)
		  in  %% Line 2006
		      apply 'encode_restricted_string'/2
			  (_cor4, [#{#<130>(8,1,'integer',['unsigned'|['big']])}#])
	      %% Line 2007
	      <Else> when 'true' ->
		  %% Line 2008
		  call 'erlang':'exit'
		      ({'error',{'asn1',{'invalid_choice_type',Else}}})
	    end
	in  %% Line 2000
	    case _cor6 of
	      <{EncBytes,EncLen}> when 'true' ->
		  %% Line 2011
		  apply 'encode_tags'/3
		      (_cor0, EncBytes, EncLen)
	      ( <_cor7> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor7})
		-| ['compiler_generated'] )
	    end
'dec_SubstringFilter_substrings_SEQOF'/2 =
    %% Line 2014
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 2015
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  let <_cor4> =
		%% Line 2016
		case Tlv1 of
		  <[CtempTlv1|[]]> when 'true' ->
		      CtempTlv1
		  <_cor15> when 'true' ->
		      Tlv1
		end
	    in  %% Line 2016
		case _cor4 of
		  %% Line 2019
		  <{131072,V1}> when 'true' ->
		      let <_cor5> =
			  %% Line 2021
			  apply 'decode_restricted_string'/2
			      (V1, [])
		      in  let <_cor6> =
			      %% Line 2021
			      call 'erlang':'binary_to_list'
				  (_cor5)
			  in  %% Line 2020
			      {'initial',_cor6}
		  %% Line 2027
		  <{131073,V1}> when 'true' ->
		      let <_cor7> =
			  %% Line 2029
			  apply 'decode_restricted_string'/2
			      (V1, [])
		      in  let <_cor8> =
			      %% Line 2029
			      call 'erlang':'binary_to_list'
				  (_cor7)
			  in  %% Line 2028
			      {'any',_cor8}
		  %% Line 2035
		  <{131074,V1}> when 'true' ->
		      let <_cor9> =
			  %% Line 2037
			  apply 'decode_restricted_string'/2
			      (V1, [])
		      in  let <_cor10> =
			      %% Line 2037
			      call 'erlang':'binary_to_list'
				  (_cor9)
			  in  %% Line 2036
			      {'final',_cor10}
		  %% Line 2041
		  <Else> when 'true' ->
		      let <_cor11> =
			  %% Line 2042
			  apply 'ber_encode'/1
			      (Else)
		      in  %% Line 2042
			  {'asn1_ExtAlt',_cor11}
		end
'dec_SubstringFilter_substrings'/2 =
    %% Line 2045
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 2049
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  %% Line 2050
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[V1|_cor4]> when 'true' ->
				let <_cor6> =
				    apply 'dec_SubstringFilter_substrings_SEQOF'/2
					(V1, [])
				in  let <_cor7> =
					apply 'lc$^0'/1
					    (_cor4)
				    in  ( [_cor6|_cor7]
					  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor5> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (Tlv1)
	      -| ['list_comprehension'] )
'dec_SubstringFilter'/1 =
    %% Line 2055
    fun (_cor0) ->
	%% Line 2056
	apply 'dec_SubstringFilter'/2
	    (_cor0, [16])
'dec_SubstringFilter'/2 =
    %% Line 2058
    fun (_cor1,_cor0) ->
	%% Line 2067
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor4> =
		  %% Line 2069
		  apply 'decode_restricted_string'/2
		      (V1, [4])
	      in  let <Term1> =
		      %% Line 2069
		      call 'erlang':'binary_to_list'
			  (_cor4)
		  in  %% Line 2076
		      case Tlv2 of
			<[V2|Tlv3]> when 'true' ->
			    let <Term2> =
				%% Line 2077
				apply 'dec_SubstringFilter_substrings'/2
				    (V2, [16])
			    in  do  %% Line 2079
				    case Tlv3 of
				      <[]> when 'true' ->
					  'ok'
				      <_cor11> when 'true' ->
					  'ok'
				    end
				    %% Line 2080
				    {'SubstringFilter',Term1,Term2}
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor6})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_MatchingRuleAssertion'/1 =
    %% Line 2087
    fun (_cor0) ->
	%% Line 2088
	apply 'enc_MatchingRuleAssertion'/2
	    (_cor0, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#])
'enc_MatchingRuleAssertion'/2 =
    %% Line 2090
    fun (_cor1,_cor0) ->
	%% Line 2091
	case _cor1 of
	  <{_cor19,Cindex1,Cindex2,Cindex3,Cindex4}> when 'true' ->
	      let <_cor4> =
		  %% Line 2096
		  case Cindex1 of
		    %% Line 2097
		    <'asn1_NOVALUE'> when 'true' ->
			{#{}#,0}
		    %% Line 2098
		    <_cor20> when 'true' ->
			%% Line 2099
			apply 'encode_restricted_string'/2
			    (Cindex1, [#{#<129>(8,1,'integer',['unsigned'|['big']])}#])
		  end
	      in  %% Line 2096
		  case _cor4 of
		    <{EncBytes1,EncLen1}> when 'true' ->
			let <_cor7> =
			    %% Line 2105
			    case Cindex2 of
			      %% Line 2106
			      <'asn1_NOVALUE'> when 'true' ->
				  {#{}#,0}
			      %% Line 2107
			      <_cor21> when 'true' ->
				  %% Line 2108
				  apply 'encode_restricted_string'/2
				      (Cindex2, [#{#<130>(8,1,'integer',['unsigned'|['big']])}#])
			    end
			in  %% Line 2105
			    case _cor7 of
			      <{EncBytes2,EncLen2}> when 'true' ->
				  %% Line 2114
				  case apply 'encode_restricted_string'/2
					   (Cindex3, [#{#<131>(8,1,'integer',['unsigned'|['big']])}#]) of
				    <{EncBytes3,EncLen3}> when 'true' ->
					let <_cor11> =
					    %% Line 2119
					    case Cindex4 of
					      %% Line 2120
					      <'asn1_DEFAULT'> when 'true' ->
						  {#{}#,0}
					      %% Line 2121
					      <'false'> when 'true' ->
						  {#{}#,0}
					      %% Line 2122
					      <_cor22> when 'true' ->
						  %% Line 2123
						  apply 'encode_boolean'/2
						      (Cindex4, [#{#<132>(8,1,'integer',['unsigned'|['big']])}#])
					    end
					in  %% Line 2119
					    case _cor11 of
					      <{EncBytes4,EncLen4}> when 'true' ->
						  let <BytesSoFar> =
						      %% Line 2126
						      [EncBytes1|[EncBytes2|[EncBytes3|[EncBytes4|[]]]]]
						  in  let <_cor14> =
							  %% Line 2127
							  call 'erlang':'+'
							      (EncLen1, EncLen2)
						      in  let <_cor15> =
							      %% Line 2127
							      call 'erlang':'+'
								  (_cor14, EncLen3)
							  in  let <LenSoFar> =
								  %% Line 2127
								  call 'erlang':'+'
								      (_cor15, EncLen4)
							      in  %% Line 2128
								  apply 'encode_tags'/3
								      (_cor0, BytesSoFar, LenSoFar)
					      ( <_cor12> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_cor12})
						-| ['compiler_generated'] )
					    end
				    ( <_cor9> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor9})
				      -| ['compiler_generated'] )
				  end
			      ( <_cor8> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor8})
				-| ['compiler_generated'] )
			    end
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_MatchingRuleAssertion'/1 =
    %% Line 2131
    fun (_cor0) ->
	%% Line 2132
	apply 'dec_MatchingRuleAssertion'/2
	    (_cor0, [16])
'dec_MatchingRuleAssertion'/2 =
    %% Line 2134
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 2138
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  let <Term1,Tlv2> =
		%% Line 2143
		case Tlv1 of
		  %% Line 2144
		  <[{131073,V1}|TempTlv2]> when 'true' ->
		      let <_cor3> =
			  %% Line 2146
			  apply 'decode_restricted_string'/2
			      (V1, [])
		      in  let <_cor4> =
			      %% Line 2146
			      call 'erlang':'binary_to_list'
				  (_cor3)
			  in  <_cor4,%% Line 2148
				     TempTlv2>
		  %% Line 2149
		  <_cor23> when 'true' ->
		      %% Line 2150
		      <'asn1_NOVALUE',Tlv1>
		end
	    in  let <Term2,Tlv3> =
		    %% Line 2156
		    case Tlv2 of
		      %% Line 2157
		      <[{131074,V2}|TempTlv3]> when 'true' ->
			  let <_cor8> =
			      %% Line 2159
			      apply 'decode_restricted_string'/2
				  (V2, [])
			  in  let <_cor9> =
				  %% Line 2159
				  call 'erlang':'binary_to_list'
				      (_cor8)
			      in  <_cor9,%% Line 2161
					 TempTlv3>
		      %% Line 2162
		      <_cor24> when 'true' ->
			  %% Line 2163
			  <'asn1_NOVALUE',Tlv2>
		    end
		in  %% Line 2169
		    case Tlv3 of
		      <[V3|Tlv4]> when 'true' ->
			  let <_cor14> =
			      %% Line 2171
			      apply 'decode_restricted_string'/2
				  (V3, [131075])
			  in  let <Term3> =
				  %% Line 2171
				  call 'erlang':'binary_to_list'
				      (_cor14)
			      in  let <Term4,Tlv5> =
				      %% Line 2178
				      case Tlv4 of
					%% Line 2179
					<[{131076,V4}|TempTlv5]> when 'true' ->
					    let <_cor16> =
						%% Line 2180
						apply 'decode_boolean'/2
						    (V4, [])
					    in  <_cor16,%% Line 2180
							TempTlv5>
					%% Line 2181
					<_cor25> when 'true' ->
					    %% Line 2182
					    <'false',Tlv4>
				      end
				  in  do  %% Line 2185
					  case Tlv5 of
					    <[]> when 'true' ->
						'ok'
					    <_cor26> when 'true' ->
						'ok'
					  end
					  %% Line 2186
					  {'MatchingRuleAssertion',Term1,Term2,Term3,Term4}
		      ( <_cor13> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor13})
			-| ['compiler_generated'] )
		    end
'enc_SearchResultEntry'/1 =
    %% Line 2193
    fun (_cor0) ->
	%% Line 2194
	apply 'enc_SearchResultEntry'/2
	    (_cor0, [#{#<100>(8,1,'integer',['unsigned'|['big']])}#])
'enc_SearchResultEntry'/2 =
    %% Line 2196
    fun (_cor1,_cor0) ->
	%% Line 2197
	case _cor1 of
	  <{_cor9,Cindex1,Cindex2}> when 'true' ->
	      %% Line 2202
	      case apply 'encode_restricted_string'/2
		       (Cindex1, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes1,EncLen1}> when 'true' ->
		    %% Line 2207
		    case apply 'enc_PartialAttributeList'/2
			     (Cindex2, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#]) of
		      <{EncBytes2,EncLen2}> when 'true' ->
			  let <BytesSoFar> =
			      %% Line 2209
			      [EncBytes1|[EncBytes2|[]]]
			  in  let <LenSoFar> =
				  %% Line 2210
				  call 'erlang':'+'
				      (EncLen1, EncLen2)
			      in  %% Line 2211
				  apply 'encode_tags'/3
				      (_cor0, BytesSoFar, LenSoFar)
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_SearchResultEntry'/1 =
    %% Line 2214
    fun (_cor0) ->
	%% Line 2215
	apply 'dec_SearchResultEntry'/2
	    (_cor0, [65540])
'dec_SearchResultEntry'/2 =
    %% Line 2217
    fun (_cor1,_cor0) ->
	%% Line 2226
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor4> =
		  %% Line 2228
		  apply 'decode_restricted_string'/2
		      (V1, [4])
	      in  let <Term1> =
		      %% Line 2228
		      call 'erlang':'binary_to_list'
			  (_cor4)
		  in  %% Line 2235
		      case Tlv2 of
			<[V2|Tlv3]> when 'true' ->
			    let <Term2> =
				%% Line 2236
				apply 'dec_PartialAttributeList'/2
				    (V2, [16])
			    in  do  %% Line 2238
				    case Tlv3 of
				      <[]> when 'true' ->
					  'ok'
				      <_cor11> when 'true' ->
					  'ok'
				    end
				    %% Line 2239
				    {'SearchResultEntry',Term1,Term2}
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor6})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_PartialAttributeList'/1 =
    %% Line 2246
    fun (_cor0) ->
	%% Line 2247
	apply 'enc_PartialAttributeList'/2
	    (_cor0, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#])
'enc_PartialAttributeList'/2 =
    %% Line 2249
    fun (_cor1,_cor0) ->
	%% Line 2250
	case apply 'enc_PartialAttributeList_components'/3
		 (_cor1, [], 0) of
	  <{EncBytes,EncLen}> when 'true' ->
	      %% Line 2251
	      apply 'encode_tags'/3
		  (_cor0, EncBytes, EncLen)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_PartialAttributeList_components'/3 =
    %% Line 2253
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],AccBytes,AccLen> when 'true' ->
	      let <_cor3> =
		  %% Line 2254
		  call 'lists':'reverse'
		      (AccBytes)
	      in  %% Line 2254
		  {_cor3,AccLen}
	  %% Line 2256
	  <[H|T],AccBytes,AccLen> when 'true' ->
	      %% Line 2257
	      case apply 'enc_PartialAttribute'/2
		       (H, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes,EncLen}> when 'true' ->
		    let <_cor5> =
			%% Line 2258
			call 'erlang':'+'
			    (AccLen, EncLen)
		    in  %% Line 2258
			apply 'enc_PartialAttributeList_components'/3
			    (T, [EncBytes|AccBytes], _cor5)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'enc_PartialAttributeList_components',3}}] )
	    -| ['compiler_generated'] )
	end
'dec_PartialAttributeList'/1 =
    %% Line 2262
    fun (_cor0) ->
	%% Line 2263
	apply 'dec_PartialAttributeList'/2
	    (_cor0, [16])
'dec_PartialAttributeList'/2 =
    %% Line 2265
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 2269
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  %% Line 2270
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[V1|_cor4]> when 'true' ->
				let <_cor6> =
				    apply 'dec_PartialAttribute'/2
					(V1, [16])
				in  let <_cor7> =
					apply 'lc$^0'/1
					    (_cor4)
				    in  ( [_cor6|_cor7]
					  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor5> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (Tlv1)
	      -| ['list_comprehension'] )
'enc_SearchResultReference'/1 =
    %% Line 2278
    fun (_cor0) ->
	%% Line 2279
	apply 'enc_SearchResultReference'/2
	    (_cor0, [#{#<115>(8,1,'integer',['unsigned'|['big']])}#])
'enc_SearchResultReference'/2 =
    %% Line 2281
    fun (_cor1,_cor0) ->
	%% Line 2282
	case apply 'enc_SearchResultReference_components'/3
		 (_cor1, [], 0) of
	  <{EncBytes,EncLen}> when 'true' ->
	      %% Line 2283
	      apply 'encode_tags'/3
		  (_cor0, EncBytes, EncLen)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_SearchResultReference_components'/3 =
    %% Line 2285
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],AccBytes,AccLen> when 'true' ->
	      let <_cor3> =
		  %% Line 2286
		  call 'lists':'reverse'
		      (AccBytes)
	      in  %% Line 2286
		  {_cor3,AccLen}
	  %% Line 2288
	  <[H|T],AccBytes,AccLen> when 'true' ->
	      %% Line 2289
	      case apply 'encode_restricted_string'/2
		       (H, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes,EncLen}> when 'true' ->
		    let <_cor5> =
			%% Line 2290
			call 'erlang':'+'
			    (AccLen, EncLen)
		    in  %% Line 2290
			apply 'enc_SearchResultReference_components'/3
			    (T, [EncBytes|AccBytes], _cor5)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'enc_SearchResultReference_components',3}}] )
	    -| ['compiler_generated'] )
	end
'dec_SearchResultReference'/1 =
    %% Line 2294
    fun (_cor0) ->
	%% Line 2295
	apply 'dec_SearchResultReference'/2
	    (_cor0, [65555])
'dec_SearchResultReference'/2 =
    %% Line 2297
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 2301
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  %% Line 2302
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[%% Line 2305
			      V1|_cor4]> when 'true' ->
				let <_cor6> =
				    %% Line 2303
				    apply 'decode_restricted_string'/2
					(V1, [4])
				in  let <_cor7> =
					%% Line 2303
					call 'erlang':'binary_to_list'
					    (_cor6)
				    in  let <_cor8> =
					    %% Line 2305
					    apply 'lc$^0'/1
						(_cor4)
					in  ( [_cor7|_cor8]
					      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor5> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (%% Line 2305
		       Tlv1)
	      -| ['list_comprehension'] )
'enc_SearchResultDone'/1 =
    %% Line 2313
    fun (_cor0) ->
	%% Line 2314
	apply 'enc_SearchResultDone'/2
	    (_cor0, [#{#<101>(8,1,'integer',['unsigned'|['big']])}#])
'enc_SearchResultDone'/2 =
    %% Line 2316
    fun (_cor1,_cor0) ->
	%% Line 2317
	apply 'enc_LDAPResult'/2
	    (_cor1, _cor0)
'dec_SearchResultDone'/1 =
    %% Line 2320
    fun (_cor0) ->
	%% Line 2321
	apply 'dec_SearchResultDone'/2
	    (_cor0, [65541])
'dec_SearchResultDone'/2 =
    %% Line 2323
    fun (_cor1,_cor0) ->
	%% Line 2324
	apply 'dec_LDAPResult'/2
	    (_cor1, _cor0)
'enc_ModifyRequest'/1 =
    %% Line 2331
    fun (_cor0) ->
	%% Line 2332
	apply 'enc_ModifyRequest'/2
	    (_cor0, [#{#<102>(8,1,'integer',['unsigned'|['big']])}#])
'enc_ModifyRequest'/2 =
    %% Line 2334
    fun (_cor1,_cor0) ->
	%% Line 2335
	case _cor1 of
	  <{_cor9,Cindex1,Cindex2}> when 'true' ->
	      %% Line 2340
	      case apply 'encode_restricted_string'/2
		       (Cindex1, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes1,EncLen1}> when 'true' ->
		    %% Line 2345
		    case apply 'enc_ModifyRequest_changes'/2
			     (Cindex2, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#]) of
		      <{EncBytes2,EncLen2}> when 'true' ->
			  let <BytesSoFar> =
			      %% Line 2347
			      [EncBytes1|[EncBytes2|[]]]
			  in  let <LenSoFar> =
				  %% Line 2348
				  call 'erlang':'+'
				      (EncLen1, EncLen2)
			      in  %% Line 2349
				  apply 'encode_tags'/3
				      (_cor0, BytesSoFar, LenSoFar)
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_ModifyRequest_changes'/2 =
    %% Line 2356
    fun (_cor1,_cor0) ->
	%% Line 2357
	case apply 'enc_ModifyRequest_changes_components'/3
		 (_cor1, [], 0) of
	  <{EncBytes,EncLen}> when 'true' ->
	      %% Line 2358
	      apply 'encode_tags'/3
		  (_cor0, EncBytes, EncLen)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_ModifyRequest_changes_components'/3 =
    %% Line 2360
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],AccBytes,AccLen> when 'true' ->
	      let <_cor3> =
		  %% Line 2361
		  call 'lists':'reverse'
		      (AccBytes)
	      in  %% Line 2361
		  {_cor3,AccLen}
	  %% Line 2363
	  <[H|T],AccBytes,AccLen> when 'true' ->
	      %% Line 2364
	      case apply 'enc_ModifyRequest_changes_SEQOF'/2
		       (H, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes,EncLen}> when 'true' ->
		    let <_cor5> =
			%% Line 2365
			call 'erlang':'+'
			    (AccLen, EncLen)
		    in  %% Line 2365
			apply 'enc_ModifyRequest_changes_components'/3
			    (T, [EncBytes|AccBytes], _cor5)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'enc_ModifyRequest_changes_components',3}}] )
	    -| ['compiler_generated'] )
	end
'enc_ModifyRequest_changes_SEQOF'/2 =
    %% Line 2373
    fun (_cor1,_cor0) ->
	%% Line 2374
	case _cor1 of
	  <{_cor11,Cindex1,Cindex2}> when 'true' ->
	      let <_cor4> =
		  %% Line 2379
		  case Cindex1 of
		    %% Line 2380
		    <'add'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [0], 1)
		    %% Line 2381
		    <'delete'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [1], 1)
		    %% Line 2382
		    <'replace'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [2], 1)
		    %% Line 2383
		    <Enumval1> when 'true' ->
			call 'erlang':'exit'
			    ({'error',{'asn1',{'enumerated_not_in_range',Enumval1}}})
		  end
	      in  %% Line 2379
		  case _cor4 of
		    <{EncBytes1,EncLen1}> when 'true' ->
			%% Line 2389
			case apply 'enc_PartialAttribute'/2
				 (Cindex2, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#]) of
			  <{EncBytes2,EncLen2}> when 'true' ->
			      let <BytesSoFar> =
				  %% Line 2391
				  [EncBytes1|[EncBytes2|[]]]
			      in  let <LenSoFar> =
				      %% Line 2392
				      call 'erlang':'+'
					  (EncLen1, EncLen2)
				  in  %% Line 2393
				      apply 'encode_tags'/3
					  (_cor0, BytesSoFar, LenSoFar)
			  ( <_cor6> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor6})
			    -| ['compiler_generated'] )
			end
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_ModifyRequest_changes_SEQOF'/2 =
    %% Line 2394
    fun (_cor1,_cor0) ->
	%% Line 2403
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor5> =
		  %% Line 2404
		  case apply 'decode_integer'/2
			   (V1, [10]) of
		    %% Line 2405
		    <0> when 'true' ->
			'add'
		    %% Line 2406
		    <1> when 'true' ->
			'delete'
		    %% Line 2407
		    <2> when 'true' ->
			'replace'
		    %% Line 2408
		    <Default1> when 'true' ->
			{'asn1_enum',Default1}
		  end
	      in  %% Line 2414
		  case Tlv2 of
		    <[V2|Tlv3]> when 'true' ->
			let <Term2> =
			    %% Line 2415
			    apply 'dec_PartialAttribute'/2
				(V2, [16])
			in  do  %% Line 2417
				case Tlv3 of
				  <[]> when 'true' ->
				      'ok'
				  <_cor12> when 'true' ->
				      'ok'
				end
				%% Line 2418
				{'ModifyRequest_changes_SEQOF',_cor5,Term2}
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor7})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'dec_ModifyRequest_changes'/2 =
    %% Line 2420
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 2424
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  %% Line 2425
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[V1|_cor4]> when 'true' ->
				let <_cor6> =
				    apply 'dec_ModifyRequest_changes_SEQOF'/2
					(V1, [16])
				in  let <_cor7> =
					apply 'lc$^0'/1
					    (_cor4)
				    in  ( [_cor6|_cor7]
					  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor5> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (Tlv1)
	      -| ['list_comprehension'] )
'dec_ModifyRequest'/1 =
    %% Line 2430
    fun (_cor0) ->
	%% Line 2431
	apply 'dec_ModifyRequest'/2
	    (_cor0, [65542])
'dec_ModifyRequest'/2 =
    %% Line 2433
    fun (_cor1,_cor0) ->
	%% Line 2442
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor4> =
		  %% Line 2444
		  apply 'decode_restricted_string'/2
		      (V1, [4])
	      in  let <Term1> =
		      %% Line 2444
		      call 'erlang':'binary_to_list'
			  (_cor4)
		  in  %% Line 2451
		      case Tlv2 of
			<[V2|Tlv3]> when 'true' ->
			    let <Term2> =
				%% Line 2452
				apply 'dec_ModifyRequest_changes'/2
				    (V2, [16])
			    in  do  %% Line 2454
				    case Tlv3 of
				      <[]> when 'true' ->
					  'ok'
				      <_cor11> when 'true' ->
					  'ok'
				    end
				    %% Line 2455
				    {'ModifyRequest',Term1,Term2}
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor6})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_ModifyResponse'/1 =
    %% Line 2462
    fun (_cor0) ->
	%% Line 2463
	apply 'enc_ModifyResponse'/2
	    (_cor0, [#{#<103>(8,1,'integer',['unsigned'|['big']])}#])
'enc_ModifyResponse'/2 =
    %% Line 2465
    fun (_cor1,_cor0) ->
	%% Line 2466
	apply 'enc_LDAPResult'/2
	    (_cor1, _cor0)
'dec_ModifyResponse'/1 =
    %% Line 2469
    fun (_cor0) ->
	%% Line 2470
	apply 'dec_ModifyResponse'/2
	    (_cor0, [65543])
'dec_ModifyResponse'/2 =
    %% Line 2472
    fun (_cor1,_cor0) ->
	%% Line 2473
	apply 'dec_LDAPResult'/2
	    (_cor1, _cor0)
'enc_AddRequest'/1 =
    %% Line 2480
    fun (_cor0) ->
	%% Line 2481
	apply 'enc_AddRequest'/2
	    (_cor0, [#{#<104>(8,1,'integer',['unsigned'|['big']])}#])
'enc_AddRequest'/2 =
    %% Line 2483
    fun (_cor1,_cor0) ->
	%% Line 2484
	case _cor1 of
	  <{_cor9,Cindex1,Cindex2}> when 'true' ->
	      %% Line 2489
	      case apply 'encode_restricted_string'/2
		       (Cindex1, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes1,EncLen1}> when 'true' ->
		    %% Line 2494
		    case apply 'enc_AttributeList'/2
			     (Cindex2, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#]) of
		      <{EncBytes2,EncLen2}> when 'true' ->
			  let <BytesSoFar> =
			      %% Line 2496
			      [EncBytes1|[EncBytes2|[]]]
			  in  let <LenSoFar> =
				  %% Line 2497
				  call 'erlang':'+'
				      (EncLen1, EncLen2)
			      in  %% Line 2498
				  apply 'encode_tags'/3
				      (_cor0, BytesSoFar, LenSoFar)
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_AddRequest'/1 =
    %% Line 2501
    fun (_cor0) ->
	%% Line 2502
	apply 'dec_AddRequest'/2
	    (_cor0, [65544])
'dec_AddRequest'/2 =
    %% Line 2504
    fun (_cor1,_cor0) ->
	%% Line 2513
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor4> =
		  %% Line 2515
		  apply 'decode_restricted_string'/2
		      (V1, [4])
	      in  let <Term1> =
		      %% Line 2515
		      call 'erlang':'binary_to_list'
			  (_cor4)
		  in  %% Line 2522
		      case Tlv2 of
			<[V2|Tlv3]> when 'true' ->
			    let <Term2> =
				%% Line 2523
				apply 'dec_AttributeList'/2
				    (V2, [16])
			    in  do  %% Line 2525
				    case Tlv3 of
				      <[]> when 'true' ->
					  'ok'
				      <_cor11> when 'true' ->
					  'ok'
				    end
				    %% Line 2526
				    {'AddRequest',Term1,Term2}
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor6})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_AttributeList'/1 =
    %% Line 2533
    fun (_cor0) ->
	%% Line 2534
	apply 'enc_AttributeList'/2
	    (_cor0, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#])
'enc_AttributeList'/2 =
    %% Line 2536
    fun (_cor1,_cor0) ->
	%% Line 2537
	case apply 'enc_AttributeList_components'/3
		 (_cor1, [], 0) of
	  <{EncBytes,EncLen}> when 'true' ->
	      %% Line 2538
	      apply 'encode_tags'/3
		  (_cor0, EncBytes, EncLen)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'enc_AttributeList_components'/3 =
    %% Line 2540
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],AccBytes,AccLen> when 'true' ->
	      let <_cor3> =
		  %% Line 2541
		  call 'lists':'reverse'
		      (AccBytes)
	      in  %% Line 2541
		  {_cor3,AccLen}
	  %% Line 2543
	  <[H|T],AccBytes,AccLen> when 'true' ->
	      %% Line 2544
	      case apply 'enc_Attribute'/2
		       (H, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes,EncLen}> when 'true' ->
		    let <_cor5> =
			%% Line 2545
			call 'erlang':'+'
			    (AccLen, EncLen)
		    in  %% Line 2545
			apply 'enc_AttributeList_components'/3
			    (T, [EncBytes|AccBytes], _cor5)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'enc_AttributeList_components',3}}] )
	    -| ['compiler_generated'] )
	end
'dec_AttributeList'/1 =
    %% Line 2549
    fun (_cor0) ->
	%% Line 2550
	apply 'dec_AttributeList'/2
	    (_cor0, [16])
'dec_AttributeList'/2 =
    %% Line 2552
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 2556
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  %% Line 2557
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[V1|_cor4]> when 'true' ->
				let <_cor6> =
				    apply 'dec_Attribute'/2
					(V1, [16])
				in  let <_cor7> =
					apply 'lc$^0'/1
					    (_cor4)
				    in  ( [_cor6|_cor7]
					  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor5> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (Tlv1)
	      -| ['list_comprehension'] )
'enc_AddResponse'/1 =
    %% Line 2565
    fun (_cor0) ->
	%% Line 2566
	apply 'enc_AddResponse'/2
	    (_cor0, [#{#<105>(8,1,'integer',['unsigned'|['big']])}#])
'enc_AddResponse'/2 =
    %% Line 2568
    fun (_cor1,_cor0) ->
	%% Line 2569
	apply 'enc_LDAPResult'/2
	    (_cor1, _cor0)
'dec_AddResponse'/1 =
    %% Line 2572
    fun (_cor0) ->
	%% Line 2573
	apply 'dec_AddResponse'/2
	    (_cor0, [65545])
'dec_AddResponse'/2 =
    %% Line 2575
    fun (_cor1,_cor0) ->
	%% Line 2576
	apply 'dec_LDAPResult'/2
	    (_cor1, _cor0)
'enc_DelRequest'/1 =
    %% Line 2583
    fun (_cor0) ->
	%% Line 2584
	apply 'enc_DelRequest'/2
	    (_cor0, [#{#<74>(8,1,'integer',['unsigned'|['big']])}#])
'enc_DelRequest'/2 =
    %% Line 2586
    fun (_cor1,_cor0) ->
	%% Line 2587
	apply 'encode_restricted_string'/2
	    (_cor1, _cor0)
'dec_DelRequest'/1 =
    %% Line 2590
    fun (_cor0) ->
	%% Line 2591
	apply 'dec_DelRequest'/2
	    (_cor0, [65546])
'dec_DelRequest'/2 =
    %% Line 2593
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 2595
	    apply 'decode_restricted_string'/2
		(_cor1, _cor0)
	in  %% Line 2595
	    call 'erlang':'binary_to_list'
		(_cor2)
'enc_DelResponse'/1 =
    %% Line 2604
    fun (_cor0) ->
	%% Line 2605
	apply 'enc_DelResponse'/2
	    (_cor0, [#{#<107>(8,1,'integer',['unsigned'|['big']])}#])
'enc_DelResponse'/2 =
    %% Line 2607
    fun (_cor1,_cor0) ->
	%% Line 2608
	apply 'enc_LDAPResult'/2
	    (_cor1, _cor0)
'dec_DelResponse'/1 =
    %% Line 2611
    fun (_cor0) ->
	%% Line 2612
	apply 'dec_DelResponse'/2
	    (_cor0, [65547])
'dec_DelResponse'/2 =
    %% Line 2614
    fun (_cor1,_cor0) ->
	%% Line 2615
	apply 'dec_LDAPResult'/2
	    (_cor1, _cor0)
'enc_ModifyDNRequest'/1 =
    %% Line 2622
    fun (_cor0) ->
	%% Line 2623
	apply 'enc_ModifyDNRequest'/2
	    (_cor0, [#{#<108>(8,1,'integer',['unsigned'|['big']])}#])
'enc_ModifyDNRequest'/2 =
    %% Line 2625
    fun (_cor1,_cor0) ->
	%% Line 2626
	case _cor1 of
	  <{_cor15,Cindex1,Cindex2,Cindex3,Cindex4}> when 'true' ->
	      %% Line 2631
	      case apply 'encode_restricted_string'/2
		       (Cindex1, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes1,EncLen1}> when 'true' ->
		    %% Line 2636
		    case apply 'encode_restricted_string'/2
			     (Cindex2, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		      <{EncBytes2,EncLen2}> when 'true' ->
			  %% Line 2641
			  case apply 'encode_boolean'/2
				   (Cindex3, [#{#<1>(8,1,'integer',['unsigned'|['big']])}#]) of
			    <{EncBytes3,EncLen3}> when 'true' ->
				let <_cor7> =
				    %% Line 2646
				    case Cindex4 of
				      %% Line 2647
				      <'asn1_NOVALUE'> when 'true' ->
					  {#{}#,0}
				      %% Line 2648
				      <_cor16> when 'true' ->
					  %% Line 2649
					  apply 'encode_restricted_string'/2
					      (Cindex4, [#{#<128>(8,1,'integer',['unsigned'|['big']])}#])
				    end
				in  %% Line 2646
				    case _cor7 of
				      <{EncBytes4,EncLen4}> when 'true' ->
					  let <BytesSoFar> =
					      %% Line 2652
					      [EncBytes1|[EncBytes2|[EncBytes3|[EncBytes4|[]]]]]
					  in  let <_cor10> =
						  %% Line 2653
						  call 'erlang':'+'
						      (EncLen1, EncLen2)
					      in  let <_cor11> =
						      %% Line 2653
						      call 'erlang':'+'
							  (_cor10, EncLen3)
						  in  let <LenSoFar> =
							  %% Line 2653
							  call 'erlang':'+'
							      (_cor11, EncLen4)
						      in  %% Line 2654
							  apply 'encode_tags'/3
							      (_cor0, BytesSoFar, LenSoFar)
				      ( <_cor8> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor8})
					-| ['compiler_generated'] )
				    end
			    ( <_cor5> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor5})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_ModifyDNRequest'/1 =
    %% Line 2657
    fun (_cor0) ->
	%% Line 2658
	apply 'dec_ModifyDNRequest'/2
	    (_cor0, [65548])
'dec_ModifyDNRequest'/2 =
    %% Line 2660
    fun (_cor1,_cor0) ->
	%% Line 2669
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor4> =
		  %% Line 2671
		  apply 'decode_restricted_string'/2
		      (V1, [4])
	      in  let <Term1> =
		      %% Line 2671
		      call 'erlang':'binary_to_list'
			  (_cor4)
		  in  %% Line 2678
		      case Tlv2 of
			<[V2|Tlv3]> when 'true' ->
			    let <_cor7> =
				%% Line 2680
				apply 'decode_restricted_string'/2
				    (V2, [4])
			    in  let <Term2> =
				    %% Line 2680
				    call 'erlang':'binary_to_list'
					(_cor7)
				in  %% Line 2687
				    case Tlv3 of
				      <[V3|Tlv4]> when 'true' ->
					  let <Term3> =
					      %% Line 2688
					      apply 'decode_boolean'/2
						  (V3, [1])
					  in  let <Term4,Tlv5> =
						  %% Line 2693
						  case Tlv4 of
						    %% Line 2694
						    <[{131072,V4}|TempTlv5]> when 'true' ->
							let <_cor11> =
							    %% Line 2696
							    apply 'decode_restricted_string'/2
								(V4, [])
							in  let <_cor12> =
								%% Line 2696
								call 'erlang':'binary_to_list'
								    (_cor11)
							    in  <_cor12,%% Line 2698
									TempTlv5>
						    %% Line 2699
						    <_cor19> when 'true' ->
							%% Line 2700
							<'asn1_NOVALUE',Tlv4>
						  end
					      in  do  %% Line 2703
						      case Tlv5 of
							<[]> when 'true' ->
							    'ok'
							<_cor20> when 'true' ->
							    'ok'
						      end
						      %% Line 2704
						      {'ModifyDNRequest',Term1,Term2,Term3,Term4}
				      ( <_cor9> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor9})
					-| ['compiler_generated'] )
				    end
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor6})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_ModifyDNResponse'/1 =
    %% Line 2711
    fun (_cor0) ->
	%% Line 2712
	apply 'enc_ModifyDNResponse'/2
	    (_cor0, [#{#<109>(8,1,'integer',['unsigned'|['big']])}#])
'enc_ModifyDNResponse'/2 =
    %% Line 2714
    fun (_cor1,_cor0) ->
	%% Line 2715
	apply 'enc_LDAPResult'/2
	    (_cor1, _cor0)
'dec_ModifyDNResponse'/1 =
    %% Line 2718
    fun (_cor0) ->
	%% Line 2719
	apply 'dec_ModifyDNResponse'/2
	    (_cor0, [65549])
'dec_ModifyDNResponse'/2 =
    %% Line 2721
    fun (_cor1,_cor0) ->
	%% Line 2722
	apply 'dec_LDAPResult'/2
	    (_cor1, _cor0)
'enc_CompareRequest'/1 =
    %% Line 2729
    fun (_cor0) ->
	%% Line 2730
	apply 'enc_CompareRequest'/2
	    (_cor0, [#{#<110>(8,1,'integer',['unsigned'|['big']])}#])
'enc_CompareRequest'/2 =
    %% Line 2732
    fun (_cor1,_cor0) ->
	%% Line 2733
	case _cor1 of
	  <{_cor9,Cindex1,Cindex2}> when 'true' ->
	      %% Line 2738
	      case apply 'encode_restricted_string'/2
		       (Cindex1, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes1,EncLen1}> when 'true' ->
		    %% Line 2743
		    case apply 'enc_AttributeValueAssertion'/2
			     (Cindex2, [#{#<48>(8,1,'integer',['unsigned'|['big']])}#]) of
		      <{EncBytes2,EncLen2}> when 'true' ->
			  let <BytesSoFar> =
			      %% Line 2745
			      [EncBytes1|[EncBytes2|[]]]
			  in  let <LenSoFar> =
				  %% Line 2746
				  call 'erlang':'+'
				      (EncLen1, EncLen2)
			      in  %% Line 2747
				  apply 'encode_tags'/3
				      (_cor0, BytesSoFar, LenSoFar)
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_CompareRequest'/1 =
    %% Line 2750
    fun (_cor0) ->
	%% Line 2751
	apply 'dec_CompareRequest'/2
	    (_cor0, [65550])
'dec_CompareRequest'/2 =
    %% Line 2753
    fun (_cor1,_cor0) ->
	%% Line 2762
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor4> =
		  %% Line 2764
		  apply 'decode_restricted_string'/2
		      (V1, [4])
	      in  let <Term1> =
		      %% Line 2764
		      call 'erlang':'binary_to_list'
			  (_cor4)
		  in  %% Line 2771
		      case Tlv2 of
			<[V2|Tlv3]> when 'true' ->
			    let <Term2> =
				%% Line 2772
				apply 'dec_AttributeValueAssertion'/2
				    (V2, [16])
			    in  do  %% Line 2774
				    case Tlv3 of
				      <[]> when 'true' ->
					  'ok'
				      <_cor11> when 'true' ->
					  'ok'
				    end
				    %% Line 2775
				    {'CompareRequest',Term1,Term2}
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor6})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_CompareResponse'/1 =
    %% Line 2782
    fun (_cor0) ->
	%% Line 2783
	apply 'enc_CompareResponse'/2
	    (_cor0, [#{#<111>(8,1,'integer',['unsigned'|['big']])}#])
'enc_CompareResponse'/2 =
    %% Line 2785
    fun (_cor1,_cor0) ->
	%% Line 2786
	apply 'enc_LDAPResult'/2
	    (_cor1, _cor0)
'dec_CompareResponse'/1 =
    %% Line 2789
    fun (_cor0) ->
	%% Line 2790
	apply 'dec_CompareResponse'/2
	    (_cor0, [65551])
'dec_CompareResponse'/2 =
    %% Line 2792
    fun (_cor1,_cor0) ->
	%% Line 2793
	apply 'dec_LDAPResult'/2
	    (_cor1, _cor0)
'enc_AbandonRequest'/1 =
    %% Line 2800
    fun (_cor0) ->
	%% Line 2801
	apply 'enc_AbandonRequest'/2
	    (_cor0, [#{#<80>(8,1,'integer',['unsigned'|['big']])}#])
'enc_AbandonRequest'/2 =
    %% Line 2803
    fun (_cor1,_cor0) ->
	%% Line 2804
	apply 'encode_integer'/2
	    (_cor1, _cor0)
'dec_AbandonRequest'/1 =
    %% Line 2807
    fun (_cor0) ->
	%% Line 2808
	apply 'dec_AbandonRequest'/2
	    (_cor0, [65552])
'dec_AbandonRequest'/2 =
    %% Line 2810
    fun (_cor1,_cor0) ->
	let <Val1> =
	    %% Line 2812
	    apply 'decode_integer'/2
		(_cor1, _cor0)
	in  %% Line 2813
	    case <> of
	      <>
		  when let <_cor3> =
			call 'erlang':'=<'
			    (0, Val1)
		    in  let <_cor4> =
			    call 'erlang':'=<'
				(Val1, 2147483647)
			in  call 'erlang':'and'
				(_cor3, _cor4) ->
		  %% Line 2814
		  Val1
	      %% Line 2815
	      <> when 'true' ->
		  %% Line 2816
		  call 'erlang':'exit'
		      ({'error',{'asn1','bad_range'}})
	    end
'enc_ExtendedRequest'/1 =
    %% Line 2825
    fun (_cor0) ->
	%% Line 2826
	apply 'enc_ExtendedRequest'/2
	    (_cor0, [#{#<119>(8,1,'integer',['unsigned'|['big']])}#])
'enc_ExtendedRequest'/2 =
    %% Line 2828
    fun (_cor1,_cor0) ->
	%% Line 2829
	case _cor1 of
	  <{_cor11,Cindex1,Cindex2}> when 'true' ->
	      %% Line 2834
	      case apply 'encode_restricted_string'/2
		       (Cindex1, [#{#<128>(8,1,'integer',['unsigned'|['big']])}#]) of
		<{EncBytes1,EncLen1}> when 'true' ->
		    let <_cor5> =
			%% Line 2839
			case Cindex2 of
			  %% Line 2840
			  <'asn1_NOVALUE'> when 'true' ->
			      {#{}#,0}
			  %% Line 2841
			  <_cor12> when 'true' ->
			      %% Line 2842
			      apply 'encode_restricted_string'/2
				  (Cindex2, [#{#<129>(8,1,'integer',['unsigned'|['big']])}#])
			end
		    in  %% Line 2839
			case _cor5 of
			  <{EncBytes2,EncLen2}> when 'true' ->
			      let <BytesSoFar> =
				  %% Line 2845
				  [EncBytes1|[EncBytes2|[]]]
			      in  let <LenSoFar> =
				      %% Line 2846
				      call 'erlang':'+'
					  (EncLen1, EncLen2)
				  in  %% Line 2847
				      apply 'encode_tags'/3
					  (_cor0, BytesSoFar, LenSoFar)
			  ( <_cor6> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor6})
			    -| ['compiler_generated'] )
			end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_ExtendedRequest'/1 =
    %% Line 2850
    fun (_cor0) ->
	%% Line 2851
	apply 'dec_ExtendedRequest'/2
	    (_cor0, [65559])
'dec_ExtendedRequest'/2 =
    %% Line 2853
    fun (_cor1,_cor0) ->
	%% Line 2862
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor4> =
		  %% Line 2864
		  apply 'decode_restricted_string'/2
		      (V1, [131072])
	      in  let <Term1> =
		      %% Line 2864
		      call 'erlang':'binary_to_list'
			  (_cor4)
		  in  let <Term2,Tlv3> =
			  %% Line 2871
			  case Tlv2 of
			    %% Line 2872
			    <[{131073,V2}|TempTlv3]> when 'true' ->
				let <_cor6> =
				    %% Line 2874
				    apply 'decode_restricted_string'/2
					(V2, [])
				in  let <_cor7> =
					%% Line 2874
					call 'erlang':'binary_to_list'
					    (_cor6)
				    in  <_cor7,%% Line 2876
					       TempTlv3>
			    %% Line 2877
			    <_cor14> when 'true' ->
				%% Line 2878
				<'asn1_NOVALUE',Tlv2>
			  end
		      in  do  %% Line 2881
			      case Tlv3 of
				<[]> when 'true' ->
				    'ok'
				<_cor15> when 'true' ->
				    'ok'
			      end
			      %% Line 2882
			      {'ExtendedRequest',Term1,Term2}
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_ExtendedResponse'/1 =
    %% Line 2889
    fun (_cor0) ->
	%% Line 2890
	apply 'enc_ExtendedResponse'/2
	    (_cor0, [#{#<120>(8,1,'integer',['unsigned'|['big']])}#])
'enc_ExtendedResponse'/2 =
    %% Line 2892
    fun (_cor1,_cor0) ->
	%% Line 2893
	case _cor1 of
	  <{_cor25,Cindex1,Cindex2,Cindex3,Cindex4,Cindex5,Cindex6}> when 'true' ->
	      let <_cor4> =
		  %% Line 2898
		  case Cindex1 of
		    %% Line 2899
		    <'success'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [0], 1)
		    %% Line 2900
		    <'operationsError'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [1], 1)
		    %% Line 2901
		    <'protocolError'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [2], 1)
		    %% Line 2902
		    <'timeLimitExceeded'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [3], 1)
		    %% Line 2903
		    <'sizeLimitExceeded'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [4], 1)
		    %% Line 2904
		    <'compareFalse'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [5], 1)
		    %% Line 2905
		    <'compareTrue'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [6], 1)
		    %% Line 2906
		    <'authMethodNotSupported'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [7], 1)
		    %% Line 2907
		    <'strongerAuthRequired'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [8], 1)
		    %% Line 2908
		    <'referral'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [10], 1)
		    %% Line 2909
		    <'adminLimitExceeded'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [11], 1)
		    %% Line 2910
		    <'unavailableCriticalExtension'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [12], 1)
		    %% Line 2911
		    <'confidentialityRequired'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [13], 1)
		    %% Line 2912
		    <'saslBindInProgress'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [14], 1)
		    %% Line 2913
		    <'noSuchAttribute'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [16], 1)
		    %% Line 2914
		    <'undefinedAttributeType'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [17], 1)
		    %% Line 2915
		    <'inappropriateMatching'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [18], 1)
		    %% Line 2916
		    <'constraintViolation'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [19], 1)
		    %% Line 2917
		    <'attributeOrValueExists'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [20], 1)
		    %% Line 2918
		    <'invalidAttributeSyntax'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [21], 1)
		    %% Line 2919
		    <'noSuchObject'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [32], 1)
		    %% Line 2920
		    <'aliasProblem'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [33], 1)
		    %% Line 2921
		    <'invalidDNSyntax'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [34], 1)
		    %% Line 2922
		    <'aliasDereferencingProblem'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [36], 1)
		    %% Line 2923
		    <'inappropriateAuthentication'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [48], 1)
		    %% Line 2924
		    <'invalidCredentials'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [49], 1)
		    %% Line 2925
		    <'insufficientAccessRights'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [50], 1)
		    %% Line 2926
		    <'busy'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [51], 1)
		    %% Line 2927
		    <'unavailable'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [52], 1)
		    %% Line 2928
		    <'unwillingToPerform'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [53], 1)
		    %% Line 2929
		    <'loopDetect'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [54], 1)
		    %% Line 2930
		    <'namingViolation'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [64], 1)
		    %% Line 2931
		    <'objectClassViolation'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [65], 1)
		    %% Line 2932
		    <'notAllowedOnNonLeaf'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [66], 1)
		    %% Line 2933
		    <'notAllowedOnRDN'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [67], 1)
		    %% Line 2934
		    <'entryAlreadyExists'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [68], 1)
		    %% Line 2935
		    <'objectClassModsProhibited'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [69], 1)
		    %% Line 2936
		    <'affectsMultipleDSAs'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [71], 1)
		    %% Line 2937
		    <'other'> when 'true' ->
			apply 'encode_tags'/3
			    ([#{#<10>(8,1,'integer',['unsigned'|['big']])}#], [80], 1)
		    %% Line 2938
		    <Enumval1> when 'true' ->
			call 'erlang':'exit'
			    ({'error',{'asn1',{'enumerated_not_in_range',Enumval1}}})
		  end
	      in  %% Line 2898
		  case _cor4 of
		    <{EncBytes1,EncLen1}> when 'true' ->
			%% Line 2944
			case apply 'encode_restricted_string'/2
				 (Cindex2, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
			  <{EncBytes2,EncLen2}> when 'true' ->
			      %% Line 2949
			      case apply 'encode_restricted_string'/2
				       (Cindex3, [#{#<4>(8,1,'integer',['unsigned'|['big']])}#]) of
				<{EncBytes3,EncLen3}> when 'true' ->
				    let <_cor9> =
					%% Line 2954
					case Cindex4 of
					  %% Line 2955
					  <'asn1_NOVALUE'> when 'true' ->
					      {#{}#,0}
					  %% Line 2956
					  <_cor26> when 'true' ->
					      %% Line 2957
					      apply 'enc_Referral'/2
						  (Cindex4, [#{#<163>(8,1,'integer',['unsigned'|['big']])}#])
					end
				    in  %% Line 2954
					case _cor9 of
					  <{EncBytes4,EncLen4}> when 'true' ->
					      let <_cor12> =
						  %% Line 2963
						  case Cindex5 of
						    %% Line 2964
						    <'asn1_NOVALUE'> when 'true' ->
							{#{}#,0}
						    %% Line 2965
						    <_cor27> when 'true' ->
							%% Line 2966
							apply 'encode_restricted_string'/2
							    (Cindex5, [#{#<138>(8,1,'integer',['unsigned'|['big']])}#])
						  end
					      in  %% Line 2963
						  case _cor12 of
						    <{EncBytes5,EncLen5}> when 'true' ->
							let <_cor15> =
							    %% Line 2972
							    case Cindex6 of
							      %% Line 2973
							      <'asn1_NOVALUE'> when 'true' ->
								  {#{}#,0}
							      %% Line 2974
							      <_cor28> when 'true' ->
								  %% Line 2975
								  apply 'encode_restricted_string'/2
								      (Cindex6, [#{#<139>(8,1,'integer',['unsigned'|['big']])}#])
							    end
							in  %% Line 2972
							    case _cor15 of
							      <{EncBytes6,EncLen6}> when 'true' ->
								  let <BytesSoFar> =
								      %% Line 2978
								      [EncBytes1|[EncBytes2|[EncBytes3|[EncBytes4|[EncBytes5|[EncBytes6|[]]]]]]]
								  in  let <_cor18> =
									  %% Line 2979
									  call 'erlang':'+'
									      (EncLen1, EncLen2)
								      in  let <_cor19> =
									      %% Line 2979
									      call 'erlang':'+'
										  (_cor18, EncLen3)
									  in  let <_cor20> =
										  %% Line 2979
										  call 'erlang':'+'
										      (_cor19, EncLen4)
									      in  let <_cor21> =
										      %% Line 2979
										      call 'erlang':'+'
											  (_cor20, EncLen5)
										  in  let <LenSoFar> =
											  %% Line 2979
											  call 'erlang':'+'
											      (_cor21, EncLen6)
										      in  %% Line 2980
											  apply 'encode_tags'/3
											      (_cor0, BytesSoFar, LenSoFar)
							      ( <_cor16> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_cor16})
								-| ['compiler_generated'] )
							    end
						    ( <_cor13> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor13})
						      -| ['compiler_generated'] )
						  end
					  ( <_cor10> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_cor10})
					    -| ['compiler_generated'] )
					end
				( <_cor7> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor7})
				  -| ['compiler_generated'] )
			      end
			  ( <_cor6> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor6})
			    -| ['compiler_generated'] )
			end
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_ExtendedResponse'/1 =
    %% Line 2983
    fun (_cor0) ->
	%% Line 2984
	apply 'dec_ExtendedResponse'/2
	    (_cor0, [65560])
'dec_ExtendedResponse'/2 =
    %% Line 2986
    fun (_cor1,_cor0) ->
	%% Line 2995
	case apply 'match_tags'/2
		 (_cor1, _cor0) of
	  <[V1|Tlv2]> when 'true' ->
	      let <_cor5> =
		  %% Line 2996
		  case apply 'decode_integer'/2
			   (V1, [10]) of
		    %% Line 2997
		    <0> when 'true' ->
			'success'
		    %% Line 2998
		    <1> when 'true' ->
			'operationsError'
		    %% Line 2999
		    <2> when 'true' ->
			'protocolError'
		    %% Line 3000
		    <3> when 'true' ->
			'timeLimitExceeded'
		    %% Line 3001
		    <4> when 'true' ->
			'sizeLimitExceeded'
		    %% Line 3002
		    <5> when 'true' ->
			'compareFalse'
		    %% Line 3003
		    <6> when 'true' ->
			'compareTrue'
		    %% Line 3004
		    <7> when 'true' ->
			'authMethodNotSupported'
		    %% Line 3005
		    <8> when 'true' ->
			'strongerAuthRequired'
		    %% Line 3006
		    <10> when 'true' ->
			'referral'
		    %% Line 3007
		    <11> when 'true' ->
			'adminLimitExceeded'
		    %% Line 3008
		    <12> when 'true' ->
			'unavailableCriticalExtension'
		    %% Line 3009
		    <13> when 'true' ->
			'confidentialityRequired'
		    %% Line 3010
		    <14> when 'true' ->
			'saslBindInProgress'
		    %% Line 3011
		    <16> when 'true' ->
			'noSuchAttribute'
		    %% Line 3012
		    <17> when 'true' ->
			'undefinedAttributeType'
		    %% Line 3013
		    <18> when 'true' ->
			'inappropriateMatching'
		    %% Line 3014
		    <19> when 'true' ->
			'constraintViolation'
		    %% Line 3015
		    <20> when 'true' ->
			'attributeOrValueExists'
		    %% Line 3016
		    <21> when 'true' ->
			'invalidAttributeSyntax'
		    %% Line 3017
		    <32> when 'true' ->
			'noSuchObject'
		    %% Line 3018
		    <33> when 'true' ->
			'aliasProblem'
		    %% Line 3019
		    <34> when 'true' ->
			'invalidDNSyntax'
		    %% Line 3020
		    <36> when 'true' ->
			'aliasDereferencingProblem'
		    %% Line 3021
		    <48> when 'true' ->
			'inappropriateAuthentication'
		    %% Line 3022
		    <49> when 'true' ->
			'invalidCredentials'
		    %% Line 3023
		    <50> when 'true' ->
			'insufficientAccessRights'
		    %% Line 3024
		    <51> when 'true' ->
			'busy'
		    %% Line 3025
		    <52> when 'true' ->
			'unavailable'
		    %% Line 3026
		    <53> when 'true' ->
			'unwillingToPerform'
		    %% Line 3027
		    <54> when 'true' ->
			'loopDetect'
		    %% Line 3028
		    <64> when 'true' ->
			'namingViolation'
		    %% Line 3029
		    <65> when 'true' ->
			'objectClassViolation'
		    %% Line 3030
		    <66> when 'true' ->
			'notAllowedOnNonLeaf'
		    %% Line 3031
		    <67> when 'true' ->
			'notAllowedOnRDN'
		    %% Line 3032
		    <68> when 'true' ->
			'entryAlreadyExists'
		    %% Line 3033
		    <69> when 'true' ->
			'objectClassModsProhibited'
		    %% Line 3034
		    <71> when 'true' ->
			'affectsMultipleDSAs'
		    %% Line 3035
		    <80> when 'true' ->
			'other'
		    %% Line 3036
		    <Default1> when 'true' ->
			{'asn1_enum',Default1}
		  end
	      in  %% Line 3042
		  case Tlv2 of
		    <[V2|Tlv3]> when 'true' ->
			let <_cor8> =
			    %% Line 3044
			    apply 'decode_restricted_string'/2
				(V2, [4])
			in  let <Term2> =
				%% Line 3044
				call 'erlang':'binary_to_list'
				    (_cor8)
			    in  %% Line 3051
				case Tlv3 of
				  <[V3|Tlv4]> when 'true' ->
				      let <_cor11> =
					  %% Line 3053
					  apply 'decode_restricted_string'/2
					      (V3, [4])
				      in  let <Term3> =
					      %% Line 3053
					      call 'erlang':'binary_to_list'
						  (_cor11)
					  in  let <Term4,Tlv5> =
						  %% Line 3060
						  case Tlv4 of
						    %% Line 3061
						    <[{131075,V4}|TempTlv5]> when 'true' ->
							let <_cor13> =
							    %% Line 3062
							    apply 'dec_Referral'/2
								(V4, [])
							in  <_cor13,%% Line 3062
								    TempTlv5>
						    %% Line 3063
						    <_cor30> when 'true' ->
							%% Line 3064
							<'asn1_NOVALUE',Tlv4>
						  end
					      in  let <Term5,Tlv6> =
						      %% Line 3070
						      case Tlv5 of
							%% Line 3071
							<[{131082,V5}|TempTlv6]> when 'true' ->
							    let <_cor17> =
								%% Line 3073
								apply 'decode_restricted_string'/2
								    (V5, [])
							    in  let <_cor18> =
								    %% Line 3073
								    call 'erlang':'binary_to_list'
									(_cor17)
								in  <_cor18,%% Line 3075
									    TempTlv6>
							%% Line 3076
							<_cor31> when 'true' ->
							    %% Line 3077
							    <'asn1_NOVALUE',Tlv5>
						      end
						  in  let <Term6,Tlv7> =
							  %% Line 3083
							  case Tlv6 of
							    %% Line 3084
							    <[{131083,V6}|TempTlv7]> when 'true' ->
								let <_cor22> =
								    %% Line 3086
								    apply 'decode_restricted_string'/2
									(V6, [])
								in  let <_cor23> =
									%% Line 3086
									call 'erlang':'binary_to_list'
									    (_cor22)
								    in  <_cor23,%% Line 3088
										TempTlv7>
							    %% Line 3089
							    <_cor32> when 'true' ->
								%% Line 3090
								<'asn1_NOVALUE',Tlv6>
							  end
						      in  do  %% Line 3093
							      case Tlv7 of
								<[]> when 'true' ->
								    'ok'
								<_cor33> when 'true' ->
								    'ok'
							      end
							      %% Line 3094
							      {'ExtendedResponse',_cor5,Term2,Term3,Term4,Term5,Term6}
				  ( <_cor10> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor10})
				    -| ['compiler_generated'] )
				end
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor7})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'enc_IntermediateResponse'/1 =
    %% Line 3101
    fun (_cor0) ->
	%% Line 3102
	apply 'enc_IntermediateResponse'/2
	    (_cor0, [#{#<121>(8,1,'integer',['unsigned'|['big']])}#])
'enc_IntermediateResponse'/2 =
    %% Line 3104
    fun (_cor1,_cor0) ->
	%% Line 3105
	case _cor1 of
	  <{_cor13,Cindex1,Cindex2}> when 'true' ->
	      let <_cor4> =
		  %% Line 3110
		  case Cindex1 of
		    %% Line 3111
		    <'asn1_NOVALUE'> when 'true' ->
			{#{}#,0}
		    %% Line 3112
		    <_cor14> when 'true' ->
			%% Line 3113
			apply 'encode_restricted_string'/2
			    (Cindex1, [#{#<128>(8,1,'integer',['unsigned'|['big']])}#])
		  end
	      in  %% Line 3110
		  case _cor4 of
		    <{EncBytes1,EncLen1}> when 'true' ->
			let <_cor7> =
			    %% Line 3119
			    case Cindex2 of
			      %% Line 3120
			      <'asn1_NOVALUE'> when 'true' ->
				  {#{}#,0}
			      %% Line 3121
			      <_cor15> when 'true' ->
				  %% Line 3122
				  apply 'encode_restricted_string'/2
				      (Cindex2, [#{#<129>(8,1,'integer',['unsigned'|['big']])}#])
			    end
			in  %% Line 3119
			    case _cor7 of
			      <{EncBytes2,EncLen2}> when 'true' ->
				  let <BytesSoFar> =
				      %% Line 3125
				      [EncBytes1|[EncBytes2|[]]]
				  in  let <LenSoFar> =
					  %% Line 3126
					  call 'erlang':'+'
					      (EncLen1, EncLen2)
				      in  %% Line 3127
					  apply 'encode_tags'/3
					      (_cor0, BytesSoFar, LenSoFar)
			      ( <_cor8> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor8})
				-| ['compiler_generated'] )
			    end
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dec_IntermediateResponse'/1 =
    %% Line 3130
    fun (_cor0) ->
	%% Line 3131
	apply 'dec_IntermediateResponse'/2
	    (_cor0, [65561])
'dec_IntermediateResponse'/2 =
    %% Line 3133
    fun (_cor1,_cor0) ->
	let <Tlv1> =
	    %% Line 3137
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  let <Term1,Tlv2> =
		%% Line 3142
		case Tlv1 of
		  %% Line 3143
		  <[{131072,V1}|TempTlv2]> when 'true' ->
		      let <_cor3> =
			  %% Line 3145
			  apply 'decode_restricted_string'/2
			      (V1, [])
		      in  let <_cor4> =
			      %% Line 3145
			      call 'erlang':'binary_to_list'
				  (_cor3)
			  in  <_cor4,%% Line 3147
				     TempTlv2>
		  %% Line 3148
		  <_cor16> when 'true' ->
		      %% Line 3149
		      <'asn1_NOVALUE',Tlv1>
		end
	    in  let <Term2,Tlv3> =
		    %% Line 3155
		    case Tlv2 of
		      %% Line 3156
		      <[{131073,V2}|TempTlv3]> when 'true' ->
			  let <_cor8> =
			      %% Line 3158
			      apply 'decode_restricted_string'/2
				  (V2, [])
			  in  let <_cor9> =
				  %% Line 3158
				  call 'erlang':'binary_to_list'
				      (_cor8)
			      in  <_cor9,%% Line 3160
					 TempTlv3>
		      %% Line 3161
		      <_cor17> when 'true' ->
			  %% Line 3162
			  <'asn1_NOVALUE',Tlv2>
		    end
		in  do  %% Line 3165
			case Tlv3 of
			  <[]> when 'true' ->
			      'ok'
			  <_cor18> when 'true' ->
			      'ok'
			end
			%% Line 3166
			{'IntermediateResponse',Term1,Term2}
'maxInt'/0 =
    %% Line 3168
    fun () ->
	%% Line 3169
	2147483647
'dialyzer-suppressions'/1 =
    %% Line 3176
    fun (_cor0) ->
	%% Line 3177
	'ok'
'ber_decode_nif'/1 =
    %% Line 3179
    fun (_cor0) ->
	%% Line 3180
	call 'asn1rt_nif':'decode_ber_tlv'
	    (_cor0)
'ber_encode'/1 =
    %% Line 3182
    fun (_cor0) ->
	case _cor0 of
	  <[Tlv|[]]> when 'true' ->
	      %% Line 3183
	      apply 'ber_encode'/1
		  (Tlv)
	  %% Line 3184
	  <Tlv>
	      when call 'erlang':'is_binary'
		    (_cor0) ->
	      %% Line 3185
	      Tlv
	  %% Line 3186
	  <Tlv> when 'true' ->
	      %% Line 3187
	      call 'asn1rt_nif':'encode_ber_tlv'
		  (Tlv)
	end
'collect_parts'/1 =
    %% Line 3189
    fun (_cor0) ->
	%% Line 3190
	apply 'collect_parts'/2
	    (_cor0, [])
'collect_parts'/2 =
    %% Line 3192
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{_cor6,L}|Rest],Acc>
	      when call 'erlang':'is_list'
		    (L) ->
	      let <_cor2> =
		  %% Line 3193
		  apply 'collect_parts'/1
		      (L)
	      in  %% Line 3193
		  apply 'collect_parts'/2
		      (Rest, [_cor2|Acc])
	  %% Line 3194
	  <[{3,#{#<Unused>(8,1,'integer',['unsigned'|['big']]),
		 #<Bits>('all',8,'binary',['unsigned'|['big']])}#}|Rest],_X_Acc> when 'true' ->
	      %% Line 3195
	      apply 'collect_parts_bit'/3
		  (Rest, [Bits|[]], Unused)
	  %% Line 3196
	  <[{_X_T,V}|Rest],Acc> when 'true' ->
	      %% Line 3197
	      apply 'collect_parts'/2
		  (Rest, [V|Acc])
	  %% Line 3198
	  <[],Acc> when 'true' ->
	      let <_cor3> =
		  %% Line 3199
		  call 'lists':'reverse'
		      (Acc)
	      in  %% Line 3199
		  call 'erlang':'list_to_binary'
		      (_cor3)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'collect_parts',2}}] )
	    -| ['compiler_generated'] )
	end
'collect_parts_bit'/3 =
    %% Line 3201
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{3,#{#<Unused>(8,1,'integer',['unsigned'|['big']]),
		 #<Bits>('all',8,'binary',['unsigned'|['big']])}#}|Rest],Acc,Uacc> when 'true' ->
	      let <_cor3> =
		  %% Line 3202
		  call 'erlang':'+'
		      (Unused, Uacc)
	      in  %% Line 3202
		  apply 'collect_parts_bit'/3
		      (Rest, [Bits|Acc], _cor3)
	  %% Line 3203
	  <[],Acc,Uacc> when 'true' ->
	      let <_cor4> =
		  %% Line 3204
		  call 'lists':'reverse'
		      (Acc)
	      in  %% Line 3204
		  call 'erlang':'list_to_binary'
		      ([Uacc|_cor4])
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'collect_parts_bit',3}}] )
	    -| ['compiler_generated'] )
	end
'decode_boolean'/2 =
    %% Line 3206
    fun (_cor1,_cor0) ->
	let <Val> =
	    %% Line 3207
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  %% Line 3208
	    case ( Val
		   -| ['reuse_for_context'] ) of
	      %% Line 3209
	      <#{#<0>(8,1,'integer',['unsigned'|['big']])}#> when 'true' ->
		  %% Line 3210
		  'false'
	      %% Line 3211
	      <#{#<_cor6>(8,1,'integer',['unsigned'|['big']])}#> when 'true' ->
		  %% Line 3212
		  'true'
	      %% Line 3213
	      <_cor7> when 'true' ->
		  do  primop 'bs_context_to_binary'
			  (Val)
		      %% Line 3214
		      call 'erlang':'exit'
			  ({'error',{'asn1',{'decode_boolean',Val}}})
	    end
'decode_integer'/2 =
    %% Line 3217
    fun (_cor1,_cor0) ->
	let <Bin> =
	    %% Line 3218
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  let <Len> =
		%% Line 3219
		call 'erlang':'byte_size'
		    (Bin)
	    in  %% Line 3220
		case ( Bin
		       -| ['reuse_for_context'] ) of
		  <#{#<Int>(Len,8,'integer',['signed'|['big']])}#> when 'true' ->
		      %% Line 3221
		      Int
		  ( <_cor4> when 'true' ->
			do  primop 'bs_context_to_binary'
				(_cor4)
			    primop 'match_fail'
				({'badmatch',_cor4})
		    -| ['compiler_generated'] )
		end
'decode_null'/2 =
    %% Line 3223
    fun (_cor1,_cor0) ->
	let <Val> =
	    %% Line 3224
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  %% Line 3225
	    case Val of
	      %% Line 3226
	      <#{}#> when 'true' ->
		  %% Line 3227
		  'NULL'
	      %% Line 3228
	      <_cor6> when 'true' ->
		  %% Line 3229
		  call 'erlang':'exit'
		      ({'error',{'asn1',{'decode_null',Val}}})
	    end
'decode_restricted_string'/2 =
    %% Line 3232
    fun (_cor1,_cor0) ->
	%% Line 3233
	apply 'match_and_collect'/2
	    (_cor1, _cor0)
'encode_boolean'/2 =
    %% Line 3235
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'true',TagIn> when 'true' ->
	      %% Line 3236
	      apply 'encode_tags'/3
		  (TagIn, [255], 1)
	  %% Line 3237
	  <'false',TagIn> when 'true' ->
	      %% Line 3238
	      apply 'encode_tags'/3
		  (TagIn, [0], 1)
	  %% Line 3239
	  <X,_cor4> when 'true' ->
	      %% Line 3240
	      call 'erlang':'exit'
		  ({'error',{'asn1',{'encode_boolean',X}}})
	end
'encode_integer'/1 =
    %% Line 3242
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 3244
	    case <> of
	      %% Line 3245
	      <>
		  when call 'erlang':'>='
			(_cor0,
			 0) ->
		  %% Line 3246
		  apply 'encode_integer_pos'/2
		      (_cor0, [])
	      %% Line 3247
	      <> when 'true' ->
		  %% Line 3248
		  apply 'encode_integer_neg'/2
		      (_cor0, [])
	    end
	in  let <_cor3> =
		%% Line 3250
		call 'erlang':'length'
		    (_cor1)
	    in  %% Line 3250
		{_cor1,_cor3}
'encode_integer'/2 =
    %% Line 3252
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Val,Tag>
	      when call 'erlang':'is_integer'
		    (Val) ->
	      let <_cor2> =
		  %% Line 3253
		  apply 'encode_integer'/1
		      (Val)
	      in  %% Line 3253
		  apply 'encode_tags'/2
		      (Tag, _cor2)
	  %% Line 3254
	  <Val,_X_Tag> when 'true' ->
	      %% Line 3255
	      call 'erlang':'exit'
		  ({'error',{'asn1',{'encode_integer',Val}}})
	end
'encode_integer_neg'/2 =
    %% Line 3257
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <-1,L = [B1|_X_T]>
	      when call 'erlang':'>'
		    (B1,
		     127) ->
	      %% Line 3258
	      L
	  %% Line 3259
	  <N,Acc> when 'true' ->
	      let <_cor3> =
		  %% Line 3260
		  call 'erlang':'bsr'
		      (N, 8)
	      in  let <_cor2> =
		      %% Line 3260
		      call 'erlang':'band'
			  (N, 255)
		  in  %% Line 3260
		      apply 'encode_integer_neg'/2
			  (_cor3, [_cor2|Acc])
	end
'encode_integer_pos'/2 =
    %% Line 3262
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <0,L = [B|_X_Acc]>
	      when call 'erlang':'<'
		    (B,
		     128) ->
	      %% Line 3263
	      L
	  %% Line 3264
	  <N,Acc> when 'true' ->
	      let <_cor3> =
		  %% Line 3265
		  call 'erlang':'bsr'
		      (N, 8)
	      in  let <_cor2> =
		      %% Line 3265
		      call 'erlang':'band'
			  (N, 255)
		  in  %% Line 3265
		      apply 'encode_integer_pos'/2
			  (_cor3, [_cor2|Acc])
	end
'encode_length'/1 =
    %% Line 3267
    fun (_cor0) ->
	case _cor0 of
	  <L>
	      when call 'erlang':'=<'
		    (_cor0,
		     127) ->
	      %% Line 3268
	      {[L|[]],1}
	  %% Line 3269
	  <L> when 'true' ->
	      let <Oct> =
		  %% Line 3270
		  apply 'minimum_octets'/1
		      (L)
	      in  let <Len> =
		      %% Line 3271
		      call 'erlang':'length'
			  (Oct)
		  in  %% Line 3272
		      case <> of
			%% Line 3273
			<>
			    when call 'erlang':'=<'
				  (Len,
				   126) ->
			    let <_cor4> =
				%% Line 3274
				call 'erlang':'bor'
				    (128, Len)
			    in  let <_cor3> =
				    %% Line 3274
				    call 'erlang':'+'
					(Len, 1)
				in  %% Line 3274
				    {[_cor4|Oct],_cor3}
			%% Line 3275
			<> when 'true' ->
			    %% Line 3276
			    call 'erlang':'exit'
				({'error',{'asn1','too_long_length_oct',Len}})
		      end
	end
'encode_null'/2 =
    %% Line 3279
    fun (_cor1,_cor0) ->
	%% Line 3280
	apply 'encode_tags'/3
	    (_cor0, [], 0)
'encode_restricted_string'/2 =
    %% Line 3282
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <OctetList,TagIn>
	      when call 'erlang':'is_binary'
		    (OctetList) ->
	      let <_cor2> =
		  %% Line 3283
		  call 'erlang':'byte_size'
		      (OctetList)
	      in  %% Line 3283
		  apply 'encode_tags'/3
		      (TagIn, OctetList, _cor2)
	  %% Line 3284
	  <OctetList,TagIn>
	      when call 'erlang':'is_list'
		    (OctetList) ->
	      let <_cor3> =
		  %% Line 3285
		  call 'erlang':'length'
		      (OctetList)
	      in  %% Line 3285
		  apply 'encode_tags'/3
		      (TagIn, OctetList, _cor3)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'encode_restricted_string',2}}] )
	    -| ['compiler_generated'] )
	end
'encode_tags'/2 =
    %% Line 3287
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <TagIn,{BytesSoFar,LenSoFar}> when 'true' ->
	      %% Line 3288
	      apply 'encode_tags'/3
		  (TagIn, BytesSoFar, LenSoFar)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'encode_tags',2}}] )
	    -| ['compiler_generated'] )
	end
'encode_tags'/3 =
    %% Line 3290
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[Tag|Trest],BytesSoFar,LenSoFar> when 'true' ->
	      %% Line 3291
	      case apply 'encode_length'/1
		       (LenSoFar) of
		<{Bytes2,L2}> when 'true' ->
		    let <_cor4> =
			%% Line 3294
			call 'erlang':'byte_size'
			    (Tag)
		    in  let <_cor5> =
			    %% Line 3294
			    call 'erlang':'+'
				(LenSoFar, _cor4)
			in  let <_cor6> =
				%% Line 3294
				call 'erlang':'+'
				    (_cor5, L2)
			    in  %% Line 3292
				apply 'encode_tags'/3
				    (Trest, %% Line 3293
					    [Tag|[Bytes2|BytesSoFar]], _cor6)
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 3295
	  <[],BytesSoFar,LenSoFar> when 'true' ->
	      %% Line 3296
	      {BytesSoFar,LenSoFar}
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7})
		  -| [{'function_name',{'encode_tags',3}}] )
	    -| ['compiler_generated'] )
	end
'match_and_collect'/2 =
    %% Line 3298
    fun (_cor1,_cor0) ->
	let <Val> =
	    %% Line 3299
	    apply 'match_tags'/2
		(_cor1, _cor0)
	in  %% Line 3300
	    case Val of
	      %% Line 3301
	      <PartList = [_cor6|_cor7]> when 'true' ->
		  %% Line 3302
		  apply 'collect_parts'/1
		      (PartList)
	      %% Line 3303
	      <Bin>
		  when call 'erlang':'is_binary'
			(Val) ->
		  %% Line 3304
		  Bin
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor3})
		-| ['compiler_generated'] )
	    end
'match_tags'/2 =
    %% Line 3307
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{T,V},[_cor4|[]]>
	      when call 'erlang':'=:='
		    (_cor4,
		     T) ->
	      %% Line 3308
	      V
	  %% Line 3309
	  <{T,V},[_cor5|Tt]>
	      when call 'erlang':'=:='
		    (_cor5,
		     T) ->
	      %% Line 3310
	      apply 'match_tags'/2
		  (V, Tt)
	  %% Line 3311
	  <[{T,V}|[]],[_cor6|Tt]>
	      when call 'erlang':'=:='
		    (_cor6,
		     T) ->
	      %% Line 3312
	      apply 'match_tags'/2
		  (V, Tt)
	  %% Line 3313
	  <Vlist = [{T,_X_V}|_cor7],[_cor8|[]]>
	      when call 'erlang':'=:='
		    (_cor8,
		     T) ->
	      %% Line 3314
	      Vlist
	  %% Line 3315
	  <Tlv,[]> when 'true' ->
	      %% Line 3316
	      Tlv
	  %% Line 3317
	  <Tlv = {Tag,_X_V},[T|_X_Tt]> when 'true' ->
	      %% Line 3318
	      call 'erlang':'exit'
		  ({'error',{'asn1',{'wrong_tag',{{'expected',T},{'got',Tag,Tlv}}}}})
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'match_tags',2}}] )
	    -| ['compiler_generated'] )
	end
'minimum_octets'/2 =
    %% Line 3320
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <0,Acc> when 'true' ->
	      %% Line 3321
	      Acc
	  %% Line 3322
	  <Val,Acc> when 'true' ->
	      let <_cor3> =
		  %% Line 3323
		  call 'erlang':'bsr'
		      (Val, 8)
	      in  let <_cor2> =
		      %% Line 3323
		      call 'erlang':'band'
			  (Val, 255)
		  in  %% Line 3323
		      apply 'minimum_octets'/2
			  (_cor3, [_cor2|Acc])
	end
'minimum_octets'/1 =
    %% Line 3325
    fun (_cor0) ->
	%% Line 3326
	apply 'minimum_octets'/2
	    (_cor0, [])
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ELDAPv3')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ELDAPv3', _cor0)
end