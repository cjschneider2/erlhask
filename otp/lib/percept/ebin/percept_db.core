module 'percept_db' ['consolidate'/0,
		     'insert'/1,
		     'module_info'/0,
		     'module_info'/1,
		     'select'/1,
		     'select'/2,
		     'start'/0,
		     'stop'/0]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{'timestamp',{'type',26,'tuple',[{'type',26,'non_neg_integer',[]}|[{'type',26,'non_neg_integer',[]}|[{'type',26,'non_neg_integer',[]}]]]},[]}],
		%% Line 27
		'type' =
		    %% Line 27
		    [{'true_mfa',{'type',27,'tuple',[{'type',27,'atom',[]}|[{'type',27,'atom',[]}|[{'type',27,'union',[{'type',27,'byte',[]}|[{'type',27,'list',[]}]]}]]]},[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{'state',{'type',28,'union',[{'atom',28,'active'}|[{'atom',28,'inactive'}]]},[]}],
		%% Line 29
		'type' =
		    %% Line 29
		    [{'scheduler_id',{'type',29,'tuple',[{'atom',29,'scheduler_id'}|[{'type',29,'non_neg_integer',[]}]]},[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','activity'},[{'record_field',36,{'atom',36,'timestamp'}}|[{'record_field',37,{'atom',37,'id'}}|[{'record_field',38,{'atom',38,'state'},{'atom',38,'undefined'}}|[{'record_field',39,{'atom',39,'where'},{'atom',39,'undefined'}}|[{'record_field',40,{'atom',40,'runnable_count'},{'integer',40,0}}]]]]],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','information'},[{'record_field',44,{'atom',44,'id'}}|[{'record_field',45,{'atom',45,'name'},{'atom',45,'undefined'}}|[{'record_field',46,{'atom',46,'entry'},{'atom',46,'undefined'}}|[{'record_field',47,{'atom',47,'start'},{'atom',47,'undefined'}}|[{'record_field',48,{'atom',48,'stop'},{'atom',48,'undefined'}}|[{'record_field',49,{'atom',49,'parent'},{'atom',49,'undefined'}}|[{'record_field',50,{'atom',50,'children'},{'nil',50}}]]]]]]],[]}],
		%% Line 75
		'spec' =
		    %% Line 75
		    [{{'start',0},[{'type',75,'fun',[{'type',75,'product',[]}|[{'type',75,'union',[{'type',75,'tuple',[{'atom',75,'started'}|[{'type',75,'pid',[]}]]}|[{'type',75,'tuple',[{'atom',75,'restarted'}|[{'type',75,'pid',[]}]]}]]}]]}]}],
		%% Line 89
		'spec' =
		    %% Line 89
		    [{{'restart',1},[{'type',89,'fun',[{'type',89,'product',[{'type',89,'pid',[]}]}|[{'type',89,'pid',[]}]]}]}],
		%% Line 99
		'spec' =
		    %% Line 99
		    [{{'do_start',0},[{'type',99,'fun',[{'type',99,'product',[]}|[{'type',99,'pid',[]}]]}]}],
		%% Line 110
		'spec' =
		    %% Line 110
		    [{{'stop',0},[{'type',110,'fun',[{'type',110,'product',[]}|[{'type',110,'union',[{'atom',110,'not_started'}|[{'type',110,'tuple',[{'atom',110,'stopped'}|[{'type',110,'pid',[]}]]}]]}]]}]}],
		%% Line 125
		'spec' =
		    %% Line 125
		    [{{'stop_sync',1},[{'type',125,'fun',[{'type',125,'product',[{'type',125,'pid',[]}]}|[{'atom',125,'true'}]]}]}]]
'start'/0 =
    %% Line 77
    fun () ->
	%% Line 78
	case call 'erlang':'whereis'
		 ('percept_db') of
	  %% Line 79
	  <'undefined'> when 'true' ->
	      let <_cor0> =
		  %% Line 80
		  apply 'do_start'/0
		      ()
	      in  %% Line 80
		  {'started',_cor0}
	  %% Line 81
	  <PerceptDB> when 'true' ->
	      let <_cor1> =
		  %% Line 82
		  apply 'restart'/1
		      (PerceptDB)
	      in  %% Line 82
		  {'restarted',_cor1}
	end
'restart'/1 =
    %% Line 91
    fun (_cor0) ->
	do  %% Line 92
	    apply 'stop_sync'/1
		(_cor0)
	    %% Line 93
	    apply 'do_start'/0
		()
'do_start'/0 =
    %% Line 101
    fun () ->
	let <_cor0> =
	    %% Line 102
	    ( fun () ->
		  apply 'init_percept_db'/0
		      ()
	      -| [{'id',{0,0,'-do_start/0-fun-0-'}}] )
	in  let <Pid> =
		%% Line 102
		call 'erlang':'spawn'
		    (_cor0)
	    in  do  %% Line 103
		    call 'erlang':'register'
			('percept_db', Pid)
		    %% Line 104
		    Pid
'stop'/0 =
    %% Line 112
    fun () ->
	%% Line 113
	case call 'erlang':'whereis'
		 ('percept_db') of
	  %% Line 114
	  <'undefined'> when 'true' ->
	      %% Line 115
	      'not_started'
	  %% Line 116
	  <Pid> when 'true' ->
	      do  %% Line 117
		  call 'erlang':'!'
		      (Pid, {'action','stop'})
		  %% Line 118
		  {'stopped',Pid}
	end
'stop_sync'/1 =
    %% Line 127
    fun (_cor0) ->
	let <MonitorRef> =
	    %% Line 128
	    call 'erlang':'monitor'
		('process', _cor0)
	in  do  %% Line 129
		apply 'stop'/0
		    ()
		%% Line 130
		receive
		  %% Line 131
		  <{'DOWN',_cor3,_X_Type,_cor4,_X_Info}>
		      when let <_cor5> =
			    call 'erlang':'=:='
				(_cor3, MonitorRef)
			in  let <_cor6> =
				call 'erlang':'=:='
				    (_cor4, _cor0)
			    in  call 'erlang':'and'
				    (_cor5, _cor6) ->
		      %% Line 132
		      'true'
		after %% Line 133
		      1000 ->
		  do  %% Line 134
		      call 'erlang':'demonitor'
			  (MonitorRef, ['flush'])
		      %% Line 135
		      call 'erlang':'exit'
			  (_cor0, 'kill')
'insert'/1 =
    %% Line 141
    fun (_cor0) ->
	do  %% Line 142
	    call 'erlang':'!'
		('percept_db', {'insert',_cor0})
	    %% Line 143
	    'ok'
'select'/1 =
    %% Line 168
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 169
	    call 'erlang':'self'
		()
	in  do  %% Line 169
		call 'erlang':'!'
		    ('percept_db', {'select',_cor1,_cor0})
		%% Line 170
		receive
		  <{'result',Match}> when 'true' ->
		      Match
		after 'infinity' ->
		  'true'
'select'/2 =
    %% Line 175
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 176
	    call 'erlang':'self'
		()
	in  do  %% Line 176
		call 'erlang':'!'
		    ('percept_db', {'select',_cor2,{_cor1,_cor0}})
		%% Line 177
		receive
		  <{'result',Match}> when 'true' ->
		      Match
		after 'infinity' ->
		  'true'
'consolidate'/0 =
    %% Line 183
    fun () ->
	do  %% Line 184
	    call 'erlang':'!'
		('percept_db', {'action','consolidate'})
	    %% Line 185
	    'ok'
'init_percept_db'/0 =
    %% Line 193
    fun () ->
	do  %% Line 195
	    call 'ets':'new'
		('pdb_info', ['named_table'|['private'|[{'keypos',2}|['set']]]])
	    do  %% Line 198
		call 'ets':'new'
		    ('pdb_scheduler', ['named_table'|['private'|[{'keypos',2}|['ordered_set']]]])
		do  %% Line 201
		    call 'ets':'new'
			('pdb_activity', ['named_table'|['private'|[{'keypos',2}|['ordered_set']]]])
		    do  %% Line 204
			call 'ets':'new'
			    ('pdb_system', ['named_table'|['private'|[{'keypos',1}|['set']]]])
			do  %% Line 207
			    call 'ets':'new'
				('pdb_warnings', ['named_table'|['private'|[{'keypos',1}|['ordered_set']]]])
			    do  %% Line 208
				call 'erlang':'put'
				    ('debug', 0)
				%% Line 209
				apply 'loop_percept_db'/0
				    ()
'loop_percept_db'/0 =
    %% Line 211
    fun () ->
	%% Line 212
	receive
	  %% Line 213
	  <{'insert',Trace}> when 'true' ->
	      let <_cor0> =
		  %% Line 214
		  apply 'clean_trace'/1
		      (Trace)
	      in  do  %% Line 214
		      apply 'insert_trace'/1
			  (_cor0)
		      %% Line 215
		      apply 'loop_percept_db'/0
			  ()
	  %% Line 216
	  <{'select',Pid,Query}> when 'true' ->
	      let <_cor1> =
		  %% Line 217
		  apply 'select_query'/1
		      (Query)
	      in  do  %% Line 217
		      call 'erlang':'!'
			  (Pid, {'result',_cor1})
		      %% Line 218
		      apply 'loop_percept_db'/0
			  ()
	  %% Line 219
	  <{'action','stop'}> when 'true' ->
	      %% Line 220
	      'stopped'
	  %% Line 221
	  <{'action','consolidate'}> when 'true' ->
	      do  %% Line 222
		  apply 'consolidate_db'/0
		      ()
		  %% Line 223
		  apply 'loop_percept_db'/0
		      ()
	  %% Line 224
	  <{'operate',Pid,{Table,{Fun,Start}}}> when 'true' ->
	      let <Result> =
		  %% Line 225
		  call 'ets':'foldl'
		      (Fun, Start, Table)
	      in  do  %% Line 226
		      call 'erlang':'!'
			  (Pid, {'result',Result})
		      %% Line 227
		      apply 'loop_percept_db'/0
			  ()
	  %% Line 228
	  <Unhandled> when 'true' ->
	      do  %% Line 229
		  call 'io':'format'
		      ([108|[111|[111|[112|[95|[112|[101|[114|[99|[101|[112|[116|[95|[100|[98|[44|[32|[117|[110|[104|[97|[110|[100|[108|[101|[100|[32|[113|[117|[101|[114|[121|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Unhandled|[]])
		  %% Line 230
		  apply 'loop_percept_db'/0
		      ()
	after 'infinity' ->
	  'true'
'clean_trace'/1 =
    %% Line 241
    fun (_cor0) ->
	case _cor0 of
	  <Trace>
	      when call 'erlang':'is_tuple'
		    (_cor0) ->
	      let <_cor1> =
		  call 'erlang':'tuple_to_list'
		      (Trace)
	      in  let <_cor2> =
		      apply 'clean_trace'/1
			  (_cor1)
		  in  call 'erlang':'list_to_tuple'
			  (_cor2)
	  %% Line 242
	  <Trace>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      apply 'clean_list'/2
		  (Trace, [])
	  %% Line 243
	  <Trace>
	      when call 'erlang':'is_pid'
		    (_cor0) ->
	      let <PidStr> =
		  %% Line 244
		  call 'erlang':'pid_to_list'
		      (Trace)
	      in  %% Line 245
		  case call 'string':'tokens'
			   (PidStr, [46]) of
		    <[_cor13|[P2|[P3p|[]]]]> when 'true' ->
			let <_cor5> =
			    %% Line 246
			    call 'erlang':'length'
				(P3p)
			in  let <_cor6> =
				%% Line 246
				call 'erlang':'-'
				    (_cor5, 1)
			    in  let <P3> =
				    %% Line 246
				    call 'lists':'sublist'
					(P3p, 1, _cor6)
				in  let <_cor8> =
					%% Line 247
					call 'erlang':'++'
					    (P3, [62])
				    in  let <_cor9> =
					    %% Line 247
					    [46|_cor8]
					in  let <_cor10> =
						%% Line 247
						call 'erlang':'++'
						    (P2, _cor9)
					    in  let <_cor11> =
						    %% Line 247
						    [60|[48|[46|_cor10]]]
						in  %% Line 247
						    call 'erlang':'list_to_pid'
							(_cor11)
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor4})
		      -| ['compiler_generated'] )
		  end
	  %% Line 248
	  <Trace> when 'true' ->
	      Trace
	end
'clean_list'/2 =
    %% Line 250
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],Out> when 'true' ->
	      call 'lists':'reverse'
		  (Out)
	  %% Line 251
	  <[Element|Trace],Out> when 'true' ->
	      let <_cor2> =
		  %% Line 252
		  apply 'clean_trace'/1
		      (Element)
	      in  %% Line 252
		  apply 'clean_list'/2
		      (Trace, [_cor2|Out])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'clean_list',2}}] )
	    -| ['compiler_generated'] )
	end
'insert_trace'/1 =
    %% Line 255
    fun (_cor0) ->
	%% Line 256
	case _cor0 of
	  %% Line 257
	  <{'profile_start',Ts}> when 'true' ->
	      do  %% Line 258
		  apply 'update_system_start_ts'/1
		      (Ts)
		  %% Line 259
		  'ok'
	  %% Line 260
	  <{'profile_stop',Ts}> when 'true' ->
	      do  %% Line 261
		  apply 'update_system_stop_ts'/1
		      (Ts)
		  %% Line 262
		  'ok'
	  %% Line 265
	  <{'profile',Id,State,Mfa,TS}>
	      when call 'erlang':'is_pid'
		    (Id) ->
	      %% Line 268
	      case apply 'check_activity_consistency'/2
		       (Id, State) of
		%% Line 269
		<'invalid_state'> when 'true' ->
		    %% Line 270
		    'ignored'
		%% Line 271
		<'ok'> when 'true' ->
		    let <Rc> =
			%% Line 272
			apply 'get_runnable_count'/2
			    ('procs', State)
		    in  do  %% Line 275
			    apply 'update_activity'/1
				({'activity',%% Line 278
					     TS,%% Line 276
						Id,%% Line 277
						   State,%% Line 280
							 Mfa,%% Line 279
							     Rc})
			    %% Line 281
			    'ok'
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 285
	  <{'profile',Id,State,Mfa,TS}>
	      when call 'erlang':'is_port'
		    (Id) ->
	      %% Line 286
	      case apply 'check_activity_consistency'/2
		       (Id, State) of
		%% Line 287
		<'invalid_state'> when 'true' ->
		    %% Line 288
		    'ignored'
		%% Line 289
		<'ok'> when 'true' ->
		    let <Rc> =
			%% Line 291
			apply 'get_runnable_count'/2
			    ('ports', State)
		    in  do  %% Line 295
			    apply 'update_activity'/1
				({'activity',%% Line 298
					     TS,%% Line 296
						Id,%% Line 297
						   State,%% Line 300
							 Mfa,%% Line 299
							     Rc})
			    %% Line 302
			    'ok'
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 305
	  <{'profile','scheduler',Id,State,Scheds,Ts}> when 'true' ->
	      do  %% Line 307
		  apply 'update_scheduler'/1
		      ({'activity',%% Line 310
				   Ts,%% Line 308
				      {'scheduler',Id},%% Line 309
						       State,%% Line 311
							     Scheds,0})
		  %% Line 312
		  'ok'
	  %% Line 316
	  <{'trace_ts',Parent,'spawn',Pid,Mfa,TS}> when 'true' ->
	      let <InformativeMfa> =
		  %% Line 317
		  apply 'mfa2informative'/1
		      (Mfa)
	      in  do  %% Line 319
		      apply 'update_information'/1
			  ({'information',Pid,'undefined',InformativeMfa,TS,'undefined',Parent,[]})
		      do  %% Line 320
			  apply 'update_information_child'/2
			      (Parent, Pid)
			  %% Line 321
			  'ok'
	  %% Line 322
	  <{'trace_ts',Pid,'exit',_X_Reason,TS}> when 'true' ->
	      do  %% Line 326
		  apply 'update_information'/1
		      ({'information',Pid,'undefined','undefined','undefined',TS,'undefined',[]})
		  %% Line 328
		  'ok'
	  %% Line 329
	  <{'trace_ts',Pid,'register',Name,_X_Ts}>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      do  %% Line 331
		  apply 'update_information'/1
		      ({'information',Pid,Name,'undefined','undefined','undefined','undefined',[]})
		  %% Line 332
		  'ok'
	  %% Line 333
	  <{'trace_ts',Pid,'register',Name,_X_Ts}>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      do  %% Line 335
		  apply 'update_information'/1
		      ({'information',Pid,Name,'undefined','undefined','undefined','undefined',[]})
		  %% Line 336
		  'ok'
	  %% Line 337
	  <{'trace_ts',_X_Pid,'unregister',_X_Name,_X_Ts}> when 'true' ->
	      %% Line 339
	      'ok'
	  %% Line 340
	  <{'trace_ts',Pid,'getting_unlinked',_X_Id,_X_Ts}>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      %% Line 342
	      'ok'
	  %% Line 343
	  <{'trace_ts',Pid,'getting_linked',_X_Id,_X_Ts}>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      %% Line 345
	      'ok'
	  %% Line 346
	  <{'trace_ts',Pid,'link',_X_Id,_X_Ts}>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      %% Line 348
	      'ok'
	  %% Line 349
	  <{'trace_ts',Pid,'unlink',_X_Id,_X_Ts}>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      %% Line 351
	      'ok'
	  %% Line 355
	  <{'trace_ts',Caller,'open',Port,Driver,TS}> when 'true' ->
	      do  %% Line 357
		  apply 'update_information'/1
		      ({'information',%% Line 358
				      Port,'undefined',%% Line 358
						       Driver,%% Line 358
							      TS,'undefined',%% Line 358
									     Caller,[]})
		  %% Line 359
		  'ok'
	  %% Line 360
	  <{'trace_ts',Port,'closed',_X_Reason,Ts}> when 'true' ->
	      do  %% Line 362
		  apply 'update_information'/1
		      ({'information',Port,'undefined','undefined','undefined',Ts,'undefined',[]})
		  %% Line 363
		  'ok'
	  %% Line 365
	  <Unhandled> when 'true' ->
	      %% Line 366
	      call 'io':'format'
		  ([105|[110|[115|[101|[114|[116|[95|[116|[114|[97|[99|[101|[44|[32|[117|[110|[104|[97|[110|[100|[108|[101|[100|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Unhandled|[]])
	end
'mfa2informative'/1 =
    %% Line 369
    fun (_cor0) ->
	case _cor0 of
	  <{'erlang','apply',[M|[F|[Args|[]]]]}> when 'true' ->
	      apply 'mfa2informative'/1
		  ({M,F,Args})
	  %% Line 370
	  <{'erlang','apply',[Fun|[Args|[]]]}> when 'true' ->
	      let <FunInfo> =
		  %% Line 371
		  call 'erlang':'fun_info'
		      (Fun)
	      in  let <_cor3> =
		      %% Line 372
		      case call 'proplists':'get_value'
			       ('module', FunInfo, 'undefined') of
			%% Line 373
			<[]> when 'true' ->
			    'undefined_fun_module'
			%% Line 374
			<'undefined'> when 'true' ->
			    'undefined_fun_module'
			%% Line 375
			<Module> when 'true' ->
			    Module
		      end
		  in  let <_cor6> =
			  %% Line 377
			  case call 'proplists':'get_value'
				   ('name', FunInfo, 'undefined') of
			    %% Line 378
			    <[]> when 'true' ->
				'undefined_fun_function'
			    %% Line 379
			    <'undefined'> when 'true' ->
				'undefined_fun_function'
			    %% Line 380
			    <Function> when 'true' ->
				Function
			  end
		      in  %% Line 382
			  apply 'mfa2informative'/1
			      ({_cor3,_cor6,Args})
	  %% Line 383
	  <Mfa> when 'true' ->
	      Mfa
	end
'consolidate_db'/0 =
    %% Line 390
    fun () ->
	do  %% Line 391
	    call 'io':'format'
		([67|[111|[110|[115|[111|[108|[105|[100|[97|[116|[105|[110|[103|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]])
	    do  %% Line 393
		case apply 'select_query'/1
			 ({'system','start_ts'}) of
		  %% Line 394
		  <'undefined'> when 'true' ->
		      let <_cor0> =
			  %% Line 395
			  apply 'list_all_ts'/0
			      ()
		      in  let <Min> =
			      %% Line 395
			      call 'lists':'min'
				  (_cor0)
			  in  %% Line 396
			      apply 'update_system_start_ts'/1
				  (Min)
		  %% Line 397
		  <_cor6> when 'true' ->
		      'ok'
		end
		do  %% Line 399
		    case apply 'select_query'/1
			     ({'system','stop_ts'}) of
		      %% Line 400
		      <'undefined'> when 'true' ->
			  let <_cor3> =
			      %% Line 401
			      apply 'list_all_ts'/0
				  ()
			  in  let <Max> =
				  %% Line 401
				  call 'lists':'max'
				      (_cor3)
			      in  %% Line 402
				  apply 'update_system_stop_ts'/1
				      (Max)
		      %% Line 403
		      <_cor7> when 'true' ->
			  'ok'
		    end
		    do  %% Line 405
			apply 'consolidate_runnability'/0
			    ()
			%% Line 406
			'ok'
'consolidate_runnability'/0 =
    %% Line 408
    fun () ->
	do  %% Line 409
	    call 'erlang':'put'
		({'runnable','procs'}, 'undefined')
	    do  %% Line 410
		call 'erlang':'put'
		    ({'runnable','ports'}, 'undefined')
		let <_cor0> =
		    %% Line 411
		    call 'ets':'first'
			('pdb_activity')
		in  %% Line 411
		    apply 'consolidate_runnability_loop'/1
			(_cor0)
'consolidate_runnability_loop'/1 =
    %% Line 413
    fun (_cor0) ->
	case _cor0 of
	  <'$end_of_table'> when 'true' ->
	      'ok'
	  %% Line 414
	  <Key> when 'true' ->
	      do  %% Line 415
		  case call 'ets':'lookup'
			   ('pdb_activity', Key) of
		    %% Line 416
		    <[A = {'activity',_cor12,Id,State,_cor13,_cor14}|[]]>
			when call 'erlang':'is_pid'
			      (Id) ->
			let <Rc> =
			    %% Line 417
			    apply 'get_runnable_count'/2
				('procs', State)
			in  let <_cor4> =
				%% Line 418
				call 'erlang':'setelement'
				    (6, A, Rc)
			    in  %% Line 418
				call 'ets':'insert'
				    ('pdb_activity', _cor4)
		    %% Line 419
		    <[A = {'activity',_cor21,Id,State,_cor22,_cor23}|[]]>
			when call 'erlang':'is_port'
			      (Id) ->
			let <Rc> =
			    %% Line 420
			    apply 'get_runnable_count'/2
				('ports', State)
			in  let <_cor8> =
				%% Line 421
				call 'erlang':'setelement'
				    (6, A, Rc)
			    in  %% Line 421
				call 'ets':'insert'
				    ('pdb_activity', _cor8)
		    %% Line 422
		    <_cor30> when 'true' ->
			call 'erlang':'throw'
			    ('consolidate')
		  end
		  let <_cor10> =
		      %% Line 424
		      call 'ets':'next'
			  ('pdb_activity', Key)
		  in  %% Line 424
		      apply 'consolidate_runnability_loop'/1
			  (_cor10)
	end
'list_all_ts'/0 =
    %% Line 426
    fun () ->
	let <_cor7> =
	    %% Line 427
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor3) ->
			  case _cor3 of
			    <[Act|_cor1]> when 'true' ->
				( case Act of
				    ( <( {'activity',_rec2,_cor35,_cor36,_cor37,_cor38}
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_cor6> =
					      apply 'lc$^0'/1
						  (_cor1)
					  in  ( [_rec2|_cor6]
						-| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    ( <_cor39> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','activity'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor3> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor3})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  let <_cor2> =
		      apply 'select_query'/1
			  ({'activity',[]})
		  in  apply 'lc$^0'/1
			  (_cor2)
	      -| ['list_comprehension'] )
	in  let <_cor16> =
		%% Line 428
		( letrec
		      'lc$^1'/1 =
			  fun (_cor12) ->
			      case _cor12 of
				<[Act|_cor10]> when 'true' ->
				    ( case Act of
					( <( {'activity',_rec3,_cor40,_cor41,_cor42,_cor43}
					     -| ['compiler_generated'] )> when 'true' ->
					      let <_cor15> =
						  apply 'lc$^1'/1
						      (_cor10)
					      in  ( [_rec3|_cor15]
						    -| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <_cor44> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','activity'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				<[]> when 'true' ->
				    []
				( <_cor12> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor12})
					-| [{'function_name',{'lc$^1',1}}] )
				  -| ['compiler_generated'] )
			      end
		  in  let <_cor11> =
			  apply 'select_query'/1
			      ({'scheduler',[]})
		      in  apply 'lc$^1'/1
			      (_cor11)
		  -| ['list_comprehension'] )
	    in  let <_cor27> =
		    %% Line 429
		    ( letrec
			  'lc$^2'/1 =
			      fun (_cor21) ->
				  case _cor21 of
				    <[%% Line 432
				      I|_cor19]> when 'true' ->
					%% Line 430
					( case I of
					    ( <( {'information',_cor45,_cor46,_cor47,_rec4,_cor48,_cor49,_cor50}
						 -| ['compiler_generated'] )> when 'true' ->
						  let <_cor26> =
						      %% Line 432
						      apply 'lc$^2'/1
							  (_cor19)
						  in  ( [[_rec4|%% Line 431
								[_cor48|[]]]|_cor26]
							-| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					    ( <_cor51> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','information'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    <[]> when 'true' ->
					[]
				    ( <_cor21> when 'true' ->
					  ( primop 'match_fail'
						({'function_clause',_cor21})
					    -| [{'function_name',{'lc$^2',1}}] )
				      -| ['compiler_generated'] )
				  end
		      in  let <_cor20> =
			      %% Line 432
			      apply 'select_query'/1
				  ({'information','all'})
			  in  apply 'lc$^2'/1
				  (_cor20)
		      -| ['list_comprehension'] )
		in  let <ITs> =
			%% Line 429
			call 'lists':'flatten'
			    (_cor27)
		    in  %% Line 434
			( letrec
			      'lc$^3'/1 =
				  fun (_cor33) ->
				      case _cor33 of
					<[Elem = {_cor59,_cor60,_cor61}|_cor30]> when 'true' ->
					    let <_cor34> =
						apply 'lc$^3'/1
						    (_cor30)
					    in  ( [Elem|_cor34]
						  -| ['compiler_generated'] )
					( <[_cor29|_cor30]> when 'true' ->
					      apply 'lc$^3'/1
						  (_cor30)
					  -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor33> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor33})
						-| [{'function_name',{'lc$^3',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  let <_cor31> =
				  call 'erlang':'++'
				      (_cor16, ITs)
			      in  let <_cor32> =
				      call 'erlang':'++'
					  (_cor7, _cor31)
				  in  apply 'lc$^3'/1
					  (_cor32)
			  -| ['list_comprehension'] )
'get_runnable_count'/2 =
    %% Line 446
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 447
	    call 'erlang':'get'
		({'runnable',_cor1})
	in  %% Line 447
	    case <_cor2,_cor0> of
	      %% Line 448
	      <'undefined','active'> when 'true' ->
		  do  %% Line 449
		      call 'erlang':'put'
			  ({'runnable',_cor1}, 1)
		      %% Line 450
		      1
	      %% Line 451
	      <N,'active'> when 'true' ->
		  let <_cor3> =
		      %% Line 452
		      call 'erlang':'+'
			  (N, 1)
		  in  do  %% Line 452
			  call 'erlang':'put'
			      ({'runnable',_cor1}, _cor3)
			  %% Line 453
			  call 'erlang':'+'
			      (N, 1)
	      %% Line 454
	      <N,'inactive'> when 'true' ->
		  let <_cor4> =
		      %% Line 455
		      call 'erlang':'-'
			  (N, 1)
		  in  do  %% Line 455
			  call 'erlang':'put'
			      ({'runnable',_cor1}, _cor4)
			  %% Line 456
			  call 'erlang':'-'
			      (N, 1)
	      %% Line 457
	      <_fol44,_fol45> when 'true' ->
		  let <Unhandled> = {_fol44,_fol45}
		  in  do  %% Line 458
			  call 'io':'format'
			      ([103|[101|[116|[95|[114|[117|[110|[110|[97|[98|[108|[101|[95|[99|[111|[117|[110|[116|[44|[32|[117|[110|[104|[97|[110|[100|[108|[101|[100|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Unhandled|[]])
			  %% Line 459
			  Unhandled
	    end
'check_activity_consistency'/2 =
    %% Line 462
    fun (_cor1,_cor0) ->
	%% Line 463
	case call 'erlang':'get'
		 ({'previous_state',_cor1}) of
	  %% Line 464
	  <_cor5>
	      when call 'erlang':'=:='
		    (_cor5,
		     _cor0) ->
	      do  %% Line 465
		  call 'io':'format'
		      ([99|[104|[101|[99|[107|[95|[97|[99|[116|[105|[118|[105|[116|[121|[95|[99|[111|[110|[115|[105|[115|[116|[101|[110|[99|[121|[44|[32|[115|[116|[97|[116|[101|[32|[102|[108|[111|[119|[32|[105|[110|[118|[97|[108|[105|[100|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		  %% Line 466
		  'invalid_state'
	  %% Line 467
	  <'undefined'>
	      when call 'erlang':'=:='
		    (_cor0,
		     'inactive') ->
	      %% Line 468
	      'invalid_state'
	  %% Line 469
	  <_cor6> when 'true' ->
	      do  %% Line 470
		  call 'erlang':'put'
		      ({'previous_state',_cor1}, _cor0)
		  %% Line 471
		  'ok'
	end
'select_query'/1 =
    %% Line 480
    fun (_cor0) ->
	%% Line 481
	case _cor0 of
	  %% Line 482
	  <{'system',_cor3}> when 'true' ->
	      %% Line 483
	      apply 'select_query_system'/1
		  (_cor0)
	  %% Line 484
	  <{'activity',_cor4}> when 'true' ->
	      %% Line 485
	      apply 'select_query_activity'/1
		  (_cor0)
	  %% Line 486
	  <{'scheduler',_cor5}> when 'true' ->
	      %% Line 487
	      apply 'select_query_scheduler'/1
		  (_cor0)
	  %% Line 488
	  <{'information',_cor6}> when 'true' ->
	      %% Line 489
	      apply 'select_query_information'/1
		  (_cor0)
	  %% Line 490
	  <Unhandled> when 'true' ->
	      do  %% Line 491
		  call 'io':'format'
		      ([115|[101|[108|[101|[99|[116|[95|[113|[117|[101|[114|[121|[44|[32|[117|[110|[104|[97|[110|[100|[108|[101|[100|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Unhandled|[]])
		  %% Line 492
		  []
	end
'select_query_information'/1 =
    %% Line 497
    fun (_cor0) ->
	%% Line 498
	case _cor0 of
	  %% Line 499
	  <{'information','all'}> when 'true' ->
	      %% Line 500
	      call 'ets':'select'
		  ('pdb_info', [{{'information','_','_','_','_','_','_','_'},[],['$_']}])
	  %% Line 505
	  <{'information','procs'}> when 'true' ->
	      %% Line 506
	      call 'ets':'select'
		  ('pdb_info', [{{'information','$1','_','_','_','_','_','_'},[{'is_pid','$1'}],['$_']}])
	  %% Line 511
	  <{'information','ports'}> when 'true' ->
	      %% Line 512
	      call 'ets':'select'
		  ('pdb_info', [{{'information','$1','_','_','_','_','_','_'},[{'is_port','$1'}],['$_']}])
	  %% Line 517
	  <{'information',Id}>
	      when let <_cor1> =
		    call 'erlang':'is_port'
			(Id)
		in  let <_cor2> =
			call 'erlang':'is_pid'
			    (Id)
		    in  call 'erlang':'or'
			    (_cor1, _cor2) ->
	      %% Line 518
	      call 'ets':'select'
		  ('pdb_info', [{%% Line 519
				 {'information',Id,'_','_','_','_','_','_'},%% Line 520
									    [],%% Line 521
									       ['$_']}|%% Line 522
										       []])
	  %% Line 523
	  <Unhandled> when 'true' ->
	      do  %% Line 524
		  call 'io':'format'
		      ([115|[101|[108|[101|[99|[116|[95|[113|[117|[101|[114|[121|[95|[105|[110|[102|[111|[114|[109|[97|[116|[105|[111|[110|[44|[32|[117|[110|[104|[97|[110|[100|[108|[101|[100|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Unhandled|[]])
		  %% Line 525
		  []
	end
'select_query_scheduler'/1 =
    %% Line 530
    fun (_cor0) ->
	%% Line 531
	case _cor0 of
	  %% Line 532
	  <{'scheduler',Options}>
	      when call 'erlang':'is_list'
		    (Options) ->
	      %% Line 541
	      case apply 'activity_ms_and'/4
		       ({'activity','$1','$2','$3','$4','_'}, Options, [], []) of
		<{Constraints,_cor6}> when 'true' ->
		    %% Line 542
		    call 'ets':'select'
			('pdb_scheduler', [{{'activity','$1','$2','$3','$4','_'},Constraints,['$_']}|[]])
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 543
	  <Unhandled> when 'true' ->
	      do  %% Line 544
		  call 'io':'format'
		      ([115|[101|[108|[101|[99|[116|[95|[113|[117|[101|[114|[121|[95|[115|[99|[104|[101|[100|[117|[108|[101|[114|[44|[32|[117|[110|[104|[97|[110|[100|[108|[101|[100|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Unhandled|[]])
		  %% Line 545
		  []
	end
'select_query_system'/1 =
    %% Line 550
    fun (_cor0) ->
	%% Line 551
	case _cor0 of
	  %% Line 552
	  <{'system','start_ts'}> when 'true' ->
	      %% Line 553
	      case call 'ets':'lookup'
		       ('pdb_system', {'system','start_ts'}) of
		%% Line 554
		<[]> when 'true' ->
		    'undefined'
		%% Line 555
		<[{{'system','start_ts'},StartTS}|[]]> when 'true' ->
		    StartTS
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor1})
		  -| ['compiler_generated'] )
	      end
	  %% Line 557
	  <{'system','stop_ts'}> when 'true' ->
	      %% Line 558
	      case call 'ets':'lookup'
		       ('pdb_system', {'system','stop_ts'}) of
		%% Line 559
		<[]> when 'true' ->
		    'undefined'
		%% Line 560
		<[{{'system','stop_ts'},StopTS}|[]]> when 'true' ->
		    StopTS
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 562
	  <Unhandled> when 'true' ->
	      do  %% Line 563
		  call 'io':'format'
		      ([115|[101|[108|[101|[99|[116|[95|[113|[117|[101|[114|[121|[95|[115|[121|[115|[116|[101|[109|[44|[32|[117|[110|[104|[97|[110|[100|[108|[101|[100|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Unhandled|[]])
		  %% Line 564
		  []
	end
'select_query_activity'/1 =
    %% Line 569
    fun (_cor0) ->
	%% Line 570
	case _cor0 of
	  %% Line 571
	  <{'activity',Options}>
	      when call 'erlang':'is_list'
		    (Options) ->
	      %% Line 572
	      case call 'lists':'member'
		       ({'ts_exact','true'}, Options) of
		%% Line 573
		<'true'> when 'true' ->
		    let <_cor1> =
			catch
			    %% Line 574
			    apply 'select_query_activity_exact_ts'/1
				(Options)
		    in  %% Line 574
			case _cor1 of
			  %% Line 575
			  <{'EXIT',Reason}> when 'true' ->
			      do  %% Line 576
				  call 'io':'format'
				      ([32|[45|[32|[115|[101|[108|[101|[99|[116|[95|[113|[117|[101|[114|[121|[95|[97|[99|[116|[105|[118|[105|[116|[121|[32|[91|[32|[99|[97|[116|[99|[104|[33|[32|[93|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Reason|[]])
				  %% Line 577
				  []
			  %% Line 578
			  <Match> when 'true' ->
			      %% Line 579
			      Match
			end
		%% Line 581
		<'false'> when 'true' ->
		    let <MS> =
			%% Line 582
			apply 'activity_ms'/1
			    (Options)
		    in  let <_cor4> =
			    catch
				%% Line 583
				call 'ets':'select'
				    ('pdb_activity', MS)
			in  %% Line 583
			    case _cor4 of
			      %% Line 584
			      <{'EXIT',Reason}> when 'true' ->
				  do  %% Line 585
				      call 'io':'format'
					  ([32|[45|[32|[115|[101|[108|[101|[99|[116|[95|[113|[117|[101|[114|[121|[95|[97|[99|[116|[105|[118|[105|[116|[121|[32|[91|[32|[99|[97|[116|[99|[104|[33|[32|[93|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Reason|[]])
				      %% Line 586
				      []
			      %% Line 587
			      <Match> when 'true' ->
				  %% Line 588
				  Match
			    end
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor6})
		  -| ['compiler_generated'] )
	      end
	  %% Line 591
	  <Unhandled> when 'true' ->
	      do  %% Line 592
		  call 'io':'format'
		      ([115|[101|[108|[101|[99|[116|[95|[113|[117|[101|[114|[121|[95|[97|[99|[116|[105|[118|[105|[116|[121|[44|[32|[117|[110|[104|[97|[110|[100|[108|[101|[100|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Unhandled|[]])
		  %% Line 593
		  []
	end
'select_query_activity_exact_ts'/1 =
    %% Line 596
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 597
	    call 'proplists':'get_value'
		('ts_min', _cor0, 'undefined')
	in  let <_cor1> =
		%% Line 597
		call 'proplists':'get_value'
		    ('ts_max', _cor0, 'undefined')
	    in  %% Line 597
		case <_cor2,_cor1> of
		  %% Line 598
		  <'undefined','undefined'> when 'true' ->
		      []
		  %% Line 599
		  <'undefined',_cor33> when 'true' ->
		      []
		  %% Line 600
		  <_cor34,'undefined'> when 'true' ->
		      []
		  %% Line 601
		  <TsMin,TsMax> when 'true' ->
		      let <Opts> =
			  %% Line 603
			  apply 'lists_filter'/2
			      (['ts_exact'], _cor0)
		      in  let <Ms> =
			      %% Line 604
			      apply 'activity_ms'/1
				  (Opts)
			  in  %% Line 605
			      case call 'ets':'select'
				       ('pdb_activity', Ms) of
				%% Line 607
				<[]> when 'true' ->
				    let <_cor5> =
					%% Line 608
					apply 'lists_filter'/2
					    (['ts_max'|['ts_min']], Opts)
				    in  let <Opts2> =
					    %% Line 608
					    call 'erlang':'++'
						(_cor5, [{'ts_min',TsMax}|[]])
					in  let <Ms2> =
						%% Line 609
						apply 'activity_ms'/1
						    (Opts2)
					    in  %% Line 610
						case call 'ets':'select'
							 ('pdb_activity', Ms2, 1) of
						  %% Line 611
						  <'$end_of_table'> when 'true' ->
						      []
						  %% Line 612
						  <{[E|[]],_cor35}> when 'true' ->
						      %% Line 613
						      ( case E of
							  ( <( {'activity',_rec6,_cor36,_cor37,_cor38,_cor39}
							       -| ['compiler_generated'] )> when 'true' ->
								let <_cor10> =
								    call 'ets':'prev'
									('pdb_activity', _rec6)
								in  case call 'ets':'lookup'
									     ('pdb_activity', _cor10) of
								      <[PrevAct|[]]> when 'true' ->
									  %% Line 614
									  case PrevAct of
									    <{'activity',_cor41,_cor42,_cor43,_cor44,_cor45}> when 'true' ->
										let <_cor14> =
										    call 'erlang':'setelement'
											(2, PrevAct, TsMin)
										in  [_cor14|[E|[]]]
									    ( <_cor46> when 'true' ->
										  ( call ( 'erlang'
											   -| ['compiler_generated'] ):( 'error'
															 -| ['compiler_generated'] )
											(( {'badrecord','activity'}
											   -| ['compiler_generated'] ))
										    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									  end
								      ( <_cor11> when 'true' ->
									    primop 'match_fail'
										({'badmatch',_cor11})
									-| ['compiler_generated'] )
								    end
							    -| ['compiler_generated'] )
							  ( <_cor40> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','activity'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  ( <_cor15> when 'true' ->
							primop 'match_fail'
							    ({'case_clause',_cor15})
						    -| ['compiler_generated'] )
						end
				%% Line 616
				<Acts> when 'true' ->
				    %% Line 617
				    case Acts of
				      <[Head|_cor47]> when 'true' ->
					  %% Line 618
					  case <> of
					    %% Line 619
					    <>
						when ( try
							( case <> of
							    ( <>
								  when ( call ( 'erlang'
									     -| ['compiler_generated'] ):( 'is_record'
													   -| ['compiler_generated'] )
									  (Head,
									   ( 'activity'
									     -| ['compiler_generated'] ),
									   ( 6
									     -| ['compiler_generated'] ))
								      -| ['compiler_generated'] ) ->
								  let <_cor21> =
								      ( call 'erlang':'element'
									    (2, Head)
									-| ['compiler_generated'] )
								  in  ( call 'erlang':'=='
									    (_cor21, TsMin)
									-| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							    ( <> when 'true' ->
								  'false'
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
						    of <Try> ->
							Try
						    catch <T,R> ->
							'false'
						    -| ['compiler_generated'] ) ->
						Acts
					    %% Line 620
					    <> when 'true' ->
						%% Line 621
						( case Head of
						    ( <( {'activity',_rec8,_cor48,_cor49,_cor50,_cor51}
							 -| ['compiler_generated'] )> when 'true' ->
							  let <PrevTs> =
							      call 'ets':'prev'
								  ('pdb_activity', _rec8)
							  in  %% Line 622
							      case call 'ets':'lookup'
								       ('pdb_activity', PrevTs) of
								%% Line 623
								<[]> when 'true' ->
								    Acts
								%% Line 624
								<[PrevAct|[]]> when 'true' ->
								    case PrevAct of
								      <{'activity',_cor53,_cor54,_cor55,_cor56,_cor57}> when 'true' ->
									  let <_cor28> =
									      call 'erlang':'setelement'
										  (2, PrevAct, TsMin)
									  in  [_cor28|Acts]
								      ( <_cor58> when 'true' ->
									    ( call ( 'erlang'
										     -| ['compiler_generated'] ):( 'error'
														   -| ['compiler_generated'] )
										  (( {'badrecord','activity'}
										     -| ['compiler_generated'] ))
									      -| ['compiler_generated'] )
									-| ['compiler_generated'] )
								    end
								( <_cor29> when 'true' ->
								      primop 'match_fail'
									  ({'case_clause',_cor29})
								  -| ['compiler_generated'] )
							      end
						      -| ['compiler_generated'] )
						    ( <_cor52> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','activity'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					  end
				      ( <_cor16> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor16})
					-| ['compiler_generated'] )
				    end
			      end
		end
'lists_filter'/2 =
    %% Line 630
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],Options> when 'true' ->
	      Options
	  %% Line 631
	  <[D|Ds],Options> when 'true' ->
	      let <_cor4> =
		  %% Line 633
		  ( fun (_cor2) ->
			case _cor2 of
			  <{Pred,_cor8}> when 'true' ->
			      %% Line 634
			      case <> of
				%% Line 635
				<>
				    when call 'erlang':'=='
					  (Pred,
					   D) ->
				    'false'
				%% Line 636
				<> when 'true' ->
				    'true'
			      end
			  ( <_cor3> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor3})
				  -| [{'function_name',{'-lists_filter/2-fun-0-',1}}] )
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-lists_filter/2-fun-0-'}}] )
	      in  let <_cor5> =
		      %% Line 632
		      call 'lists':'filter'
			  (_cor4, %% Line 638
				  Options)
		  in  %% Line 632
		      apply 'lists_filter'/2
			  (Ds, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'lists_filter',2}}] )
	    -| ['compiler_generated'] )
	end
'activity_ms'/1 =
    %% Line 652
    fun (_cor0) ->
	%% Line 661
	case apply 'activity_ms_and'/4
		 ({'activity','$1','$2','$3','$4','_'}, _cor0, [], []) of
	  <{Conditions,IDs}> when 'true' ->
	      let <_cor17> =
		  %% Line 665
		  ( fun (_cor14,_cor13) ->
			%% Line 666
			case _cor14 of
			  %% Line 667
			  <{'id','ports'}> when 'true' ->
			      %% Line 668
			      [{{'activity','$1','$2','$3','$4','_'},[{'is_port','$2'}|Conditions],['$_']}|_cor13]
			  %% Line 669
			  <{'id','procs'}> when 'true' ->
			      %% Line 670
			      [{{'activity','$1','$2','$3','$4','_'},[{'is_pid','$2'}|Conditions],['$_']}|_cor13]
			  %% Line 671
			  <{'id',ID}>
			      when let <_cor8> =
				    call 'erlang':'is_pid'
					(ID)
				in  let <_cor9> =
					call 'erlang':'is_port'
					    (ID)
				    in  call 'erlang':'or'
					    (_cor8, _cor9) ->
			      %% Line 672
			      [{{'activity','$1','$2','$3','$4','_'},[{'==','$2',ID}|Conditions],['$_']}|_cor13]
			  %% Line 673
			  <{'id','all'}> when 'true' ->
			      %% Line 674
			      [{{'activity','$1','$2','$3','$4','_'},Conditions,['$_']}|_cor13]
			  %% Line 675
			  <_cor34> when 'true' ->
			      do  %% Line 676
				  call 'io':'format'
				      ([97|[99|[116|[105|[118|[105|[116|[121|[95|[109|[115|[32|[105|[100|[32|[100|[114|[111|[112|[112|[101|[100|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor14|[]])
				  _cor13
			end
		    -| [{'id',{0,0,'-activity_ms/1-fun-0-'}}] )
	      in  %% Line 664
		  call 'lists':'foldl'
		      (_cor17, %% Line 679
			       [], %% Line 679
				   IDs)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'activity_ms_and'/4 =
    %% Line 681
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_cor17,[],Constraints,[]> when 'true' ->
	      %% Line 682
	      {Constraints,[{'id','all'}]}
	  %% Line 683
	  <_cor18,[],Constraints,IDs> when 'true' ->
	      %% Line 684
	      {Constraints,IDs}
	  %% Line 685
	  <Head,[Opt|Opts],Constraints,IDs> when 'true' ->
	      %% Line 686
	      case Opt of
		%% Line 687
		<{'ts_min',Min}> when 'true' ->
		    %% Line 689
		    ( case Head of
			( <( {'activity',_rec13,_cor19,_cor20,_cor21,_cor22}
			     -| ['compiler_generated'] )> when 'true' ->
			      apply 'activity_ms_and'/4
				  (Head, Opts, [{'>=',_rec13,{Min}}|Constraints], IDs)
			  -| ['compiler_generated'] )
			( <_cor23> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','activity'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 690
		<{'ts_max',Max}> when 'true' ->
		    %% Line 692
		    ( case Head of
			( <( {'activity',_rec14,_cor24,_cor25,_cor26,_cor27}
			     -| ['compiler_generated'] )> when 'true' ->
			      apply 'activity_ms_and'/4
				  (Head, Opts, [{'=<',_rec14,{Max}}|Constraints], IDs)
			  -| ['compiler_generated'] )
			( <_cor28> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','activity'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 693
		<{'id',ID}> when 'true' ->
		    %% Line 694
		    apply 'activity_ms_and'/4
			(Head, Opts, %% Line 695
				     Constraints, %% Line 695
						  [{'id',ID}|IDs])
		%% Line 696
		<{'state',State}> when 'true' ->
		    %% Line 698
		    ( case Head of
			( <( {'activity',_cor29,_cor30,_rec15,_cor31,_cor32}
			     -| ['compiler_generated'] )> when 'true' ->
			      apply 'activity_ms_and'/4
				  (Head, Opts, [{'==',_rec15,State}|Constraints], IDs)
			  -| ['compiler_generated'] )
			( <_cor33> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','activity'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 699
		<{'mfa',Mfa}> when 'true' ->
		    %% Line 701
		    ( case Head of
			( <( {'activity',_cor34,_cor35,_cor36,_rec16,_cor37}
			     -| ['compiler_generated'] )> when 'true' ->
			      apply 'activity_ms_and'/4
				  (Head, Opts, [{'==',_rec16,{Mfa}}|Constraints], IDs)
			  -| ['compiler_generated'] )
			( <_cor38> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','activity'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 702
		<_cor39> when 'true' ->
		    do  %% Line 703
			call 'io':'format'
			    ([97|[99|[116|[105|[118|[105|[116|[121|[95|[109|[115|[95|[97|[110|[100|[32|[111|[112|[116|[105|[111|[110|[32|[100|[114|[111|[112|[112|[101|[100|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Opt|[]])
			%% Line 704
			apply 'activity_ms_and'/4
			    (Head, Opts, Constraints, IDs)
	      end
	  ( <_cor16,_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14,_cor13})
		  -| [{'function_name',{'activity_ms_and',4}}] )
	    -| ['compiler_generated'] )
	end
'update_information'/1 =
    %% Line 714
    fun (_cor0) ->
	case _cor0 of
	  <NewInfo = {'information',Id,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19}> when 'true' ->
	      %% Line 715
	      case call 'ets':'lookup'
		       ('pdb_info', Id) of
		%% Line 716
		<[]> when 'true' ->
		    do  %% Line 717
			call 'ets':'insert'
			    ('pdb_info', NewInfo)
			%% Line 718
			'ok'
		%% Line 719
		<[Info|[]]> when 'true' ->
		    let <_cor8> =
			%% Line 724
			( fun (_cor5,_cor4) ->
			      case <_cor5,_cor4> of
				<InfoElem,{[NewInfoElem|Tail],Out}> when 'true' ->
				    %% Line 725
				    case NewInfoElem of
				      %% Line 726
				      <'undefined'> when 'true' ->
					  %% Line 727
					  {Tail,[InfoElem|Out]}
				      %% Line 728
				      <[]> when 'true' ->
					  %% Line 729
					  {Tail,[InfoElem|Out]}
				      %% Line 730
				      <_cor20> when 'true' ->
					  %% Line 731
					  {Tail,[NewInfoElem|Out]}
				    end
				( <_cor7,_cor6> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor7,_cor6})
					-| [{'function_name',{'-update_information/1-fun-0-',2}}] )
				  -| ['compiler_generated'] )
			      end
			  -| [{'id',{0,0,'-update_information/1-fun-0-'}}] )
		    in  let <_cor2> =
			    %% Line 733
			    call 'erlang':'tuple_to_list'
				(NewInfo)
			in  let <_cor1> =
				%% Line 733
				call 'erlang':'tuple_to_list'
				    (Info)
			    in  %% Line 723
				case call 'lists':'foldl'
					 (_cor8, %% Line 733
						 {_cor2,[]}, _cor1) of
				  <{_cor21,Result}> when 'true' ->
				      let <_cor10> =
					  %% Line 734
					  call 'lists':'reverse'
					      (Result)
				      in  let <_cor11> =
					      %% Line 734
					      call 'erlang':'list_to_tuple'
						  (_cor10)
					  in  do  %% Line 734
						  call 'ets':'insert'
						      ('pdb_info', _cor11)
						  %% Line 735
						  'ok'
				  ( <_cor9> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor9})
				    -| ['compiler_generated'] )
				end
		( <_cor12> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor12})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13})
		  -| [{'function_name',{'update_information',1}}] )
	    -| ['compiler_generated'] )
	end
'update_information_child'/2 =
    %% Line 738
    fun (_cor1,_cor0) ->
	%% Line 739
	case call 'ets':'lookup'
		 ('pdb_info', _cor1) of
	  %% Line 740
	  <[]> when 'true' ->
	      do  %% Line 741
		  call 'ets':'insert'
		      ('pdb_info', {'information',_cor1,'undefined','undefined','undefined','undefined','undefined',%% Line 743
														    [_cor0|[]]})
		  %% Line 744
		  'ok'
	  %% Line 745
	  <[I|[]]> when 'true' ->
	      %% Line 746
	      ( case I of
		  ( <( {'information',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_rec19}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_rec17> =
			    [_cor0|_rec19]
			in  let <_cor7> =
				call 'erlang':'setelement'
				    (8, I, _rec17)
			    in  do  call 'ets':'insert'
					('pdb_info', _cor7)
				    %% Line 747
				    'ok'
		    -| ['compiler_generated'] )
		  ( <_cor17> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','information'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor8> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor8})
	    -| ['compiler_generated'] )
	end
'update_scheduler'/1 =
    %% Line 753
    fun (_cor0) ->
	%% Line 754
	call 'ets':'insert'
	    ('pdb_scheduler', _cor0)
'update_activity'/1 =
    %% Line 756
    fun (_cor0) ->
	%% Line 757
	call 'ets':'insert'
	    ('pdb_activity', _cor0)
'update_system_start_ts'/1 =
    %% Line 763
    fun (_cor0) ->
	%% Line 764
	case call 'ets':'lookup'
		 ('pdb_system', {'system','start_ts'}) of
	  %% Line 765
	  <[]> when 'true' ->
	      %% Line 766
	      call 'ets':'insert'
		  ('pdb_system', {{'system','start_ts'},_cor0})
	  %% Line 767
	  <[{{'system','start_ts'},StartTS}|[]]> when 'true' ->
	      let <_cor1> =
		  %% Line 768
		  call 'timer':'now_diff'
		      (StartTS, _cor0)
	      in  let <DT> =
		      %% Line 768
		      call 'erlang':'/'
			  (_cor1, 1000000)
		  in  %% Line 769
		      case <> of
			%% Line 770
			<>
			    when call 'erlang':'>'
				  (DT,
				   0.00000000000000000000e+00) ->
			    call 'ets':'insert'
				('pdb_system', {{'system','start_ts'},_cor0})
			%% Line 771
			<> when 'true' ->
			    'ok'
		      end
	  %% Line 773
	  <Unhandled> when 'true' ->
	      %% Line 774
	      call 'io':'format'
		  ([117|[112|[100|[97|[116|[101|[95|[115|[121|[115|[116|[101|[109|[95|[115|[116|[97|[114|[116|[95|[116|[115|[44|[32|[117|[110|[104|[97|[110|[100|[108|[101|[100|[32|[126|[112|[32|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Unhandled|[]])
	end
'update_system_stop_ts'/1 =
    %% Line 777
    fun (_cor0) ->
	%% Line 778
	case call 'ets':'lookup'
		 ('pdb_system', {'system','stop_ts'}) of
	  %% Line 779
	  <[]> when 'true' ->
	      %% Line 780
	      call 'ets':'insert'
		  ('pdb_system', {{'system','stop_ts'},_cor0})
	  %% Line 781
	  <[{{'system','stop_ts'},StopTS}|[]]> when 'true' ->
	      let <_cor1> =
		  %% Line 782
		  call 'timer':'now_diff'
		      (StopTS, _cor0)
	      in  let <DT> =
		      %% Line 782
		      call 'erlang':'/'
			  (_cor1, 1000000)
		  in  %% Line 783
		      case <> of
			%% Line 784
			<>
			    when call 'erlang':'<'
				  (DT,
				   0.00000000000000000000e+00) ->
			    call 'ets':'insert'
				('pdb_system', {{'system','stop_ts'},_cor0})
			%% Line 785
			<> when 'true' ->
			    'ok'
		      end
	  %% Line 787
	  <Unhandled> when 'true' ->
	      %% Line 788
	      call 'io':'format'
		  ([117|[112|[100|[97|[116|[101|[95|[115|[121|[115|[116|[101|[109|[95|[115|[116|[111|[112|[95|[116|[115|[44|[32|[117|[110|[104|[97|[110|[100|[108|[101|[100|[32|[126|[112|[32|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Unhandled|[]])
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('percept_db')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('percept_db', _cor0)
end