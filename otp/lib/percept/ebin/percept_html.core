module 'percept_html' ['codelocation_page'/3,
		       'concurrency_page'/3,
		       'databases_page'/3,
		       'get_option_value'/2,
		       'join_strings_with'/2,
		       'load_database_page'/3,
		       'module_info'/0,
		       'module_info'/1,
		       'page'/3,
		       'pid2value'/1,
		       'process_info_page'/3,
		       'processes_page'/3,
		       'value2pid'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{'timestamp',{'type',26,'tuple',[{'type',26,'non_neg_integer',[]}|[{'type',26,'non_neg_integer',[]}|[{'type',26,'non_neg_integer',[]}]]]},[]}],
		%% Line 27
		'type' =
		    %% Line 27
		    [{'true_mfa',{'type',27,'tuple',[{'type',27,'atom',[]}|[{'type',27,'atom',[]}|[{'type',27,'union',[{'type',27,'byte',[]}|[{'type',27,'list',[]}]]}]]]},[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{'state',{'type',28,'union',[{'atom',28,'active'}|[{'atom',28,'inactive'}]]},[]}],
		%% Line 29
		'type' =
		    %% Line 29
		    [{'scheduler_id',{'type',29,'tuple',[{'atom',29,'scheduler_id'}|[{'type',29,'non_neg_integer',[]}]]},[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','activity'},[{'record_field',36,{'atom',36,'timestamp'}}|[{'record_field',37,{'atom',37,'id'}}|[{'record_field',38,{'atom',38,'state'},{'atom',38,'undefined'}}|[{'record_field',39,{'atom',39,'where'},{'atom',39,'undefined'}}|[{'record_field',40,{'atom',40,'runnable_count'},{'integer',40,0}}]]]]],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','information'},[{'record_field',44,{'atom',44,'id'}}|[{'record_field',45,{'atom',45,'name'},{'atom',45,'undefined'}}|[{'record_field',46,{'atom',46,'entry'},{'atom',46,'undefined'}}|[{'record_field',47,{'atom',47,'start'},{'atom',47,'undefined'}}|[{'record_field',48,{'atom',48,'stop'},{'atom',48,'undefined'}}|[{'record_field',49,{'atom',49,'parent'},{'atom',49,'undefined'}}|[{'record_field',50,{'atom',50,'children'},{'nil',50}}]]]]]]],[]}],
		%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','file_info'},[{'typed_record_field',{'record_field',25,{'atom',25,'size'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'type'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'device'}|[{'atom',26,'directory'}|[{'atom',26,'other'}|[{'atom',26,'regular'}|[{'atom',26,'symlink'}]]]]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'access'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'atom',27,'read'}|[{'atom',27,'write'}|[{'atom',27,'read_write'}|[{'atom',27,'none'}]]]]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'atime'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'remote_type',28,[{'atom',28,'file'}|[{'atom',28,'date_time'}|[[]]]]}|[{'type',28,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'mtime'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'remote_type',32,[{'atom',32,'file'}|[{'atom',32,'date_time'}|[[]]]]}|[{'type',32,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',34,{'atom',34,'ctime'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'remote_type',34,[{'atom',34,'file'}|[{'atom',34,'date_time'}|[[]]]]}|[{'type',34,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',40,{'atom',40,'mode'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'links'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',46,{'atom',46,'major_device'}},{'type',46,'union',[{'atom',46,'undefined'}|[{'type',46,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'minor_device'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'inode'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',54,{'atom',54,'uid'}},{'type',54,'union',[{'atom',54,'undefined'}|[{'type',54,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',55,{'atom',55,'gid'}},{'type',55,'union',[{'atom',55,'undefined'}|[{'type',55,'non_neg_integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','file_descriptor'},[{'typed_record_field',{'record_field',59,{'atom',59,'module'}},{'type',59,'union',[{'atom',59,'undefined'}|[{'type',59,'module',[]}]]}}|[{'typed_record_field',{'record_field',60,{'atom',60,'data'}},{'type',60,'union',[{'atom',60,'undefined'}|[{'type',60,'term',[]}]]}}]],[]}],
		%% Line 175
		'spec' =
		    %% Line 175
		    [{{'url_graph',5},[{'type',175,'fun',[{'type',175,'product',[{'ann_type',176,[{'var',176,'Widht'}|[{'type',176,'non_neg_integer',[]}]]}|[{'ann_type',177,[{'var',177,'Height'}|[{'type',177,'non_neg_integer',[]}]]}|[{'ann_type',178,[{'var',178,'Min'}|[{'type',178,'float',[]}]]}|[{'ann_type',179,[{'var',179,'Max'}|[{'type',179,'float',[]}]]}|[{'ann_type',180,[{'var',180,'Pids'}|[{'type',180,'list',[{'type',180,'pid',[]}]}]]}]]]]]}|[{'type',180,'string',[]}]]}]}],
		%% Line 511
		'spec' =
		    %% Line 511
		    [{{'join_strings_with',2},[{'type',511,'fun',[{'type',511,'product',[{'ann_type',511,[{'var',511,'Strings'}|[{'type',511,'list',[{'type',511,'string',[]}]}]]}|[{'ann_type',511,[{'var',511,'Separator'}|[{'type',511,'string',[]}]]}]]}|[{'type',511,'string',[]}]]}]}],
		%% Line 522
		'spec' =
		    %% Line 522
		    [{{'html_table',1},[{'type',522,'fun',[{'type',522,'product',[{'ann_type',522,[{'var',522,'Rows'}|[{'type',522,'list',[{'type',522,'list',[{'type',522,'union',[{'type',522,'string',[]}|[{'type',522,'tuple',[{'type',522,'union',[{'atom',522,'td'}|[{'atom',522,'th'}]]}|[{'type',522,'string',[]}]]}]]}]}]}]]}]}|[{'type',522,'string',[]}]]}]}],
		%% Line 539
		'spec' =
		    %% Line 539
		    [{{'table_line',1},[{'type',539,'fun',[{'type',539,'product',[{'ann_type',539,[{'var',539,'Table'}|[{'type',539,'list',[{'type',539,'any',[]}]}]]}]}|[{'type',539,'string',[]}]]}]}],
		%% Line 548
		'spec' =
		    %% Line 548
		    [{{'term2html',1},[{'type',548,'fun',[{'type',548,'product',[{'type',548,'any',[]}]}|[{'type',548,'string',[]}]]}]}],
		%% Line 553
		'spec' =
		    %% Line 553
		    [{{'mfa2html',1},[{'type',553,'fun',[{'type',553,'product',[{'ann_type',553,[{'var',553,'MFA'}|[{'type',553,'tuple',[{'type',553,'atom',[]}|[{'type',553,'atom',[]}|[{'type',553,'union',[{'type',553,'list',[]}|[{'type',553,'integer',[]}]]}]]]}]]}]}|[{'type',553,'string',[]}]]}]}],
		%% Line 562
		'spec' =
		    %% Line 562
		    [{{'pid2html',1},[{'type',562,'fun',[{'type',562,'product',[{'ann_type',562,[{'var',562,'Pid'}|[{'type',562,'union',[{'type',562,'pid',[]}|[{'type',562,'port',[]}]]}]]}]}|[{'type',562,'string',[]}]]}]}],
		%% Line 573
		'spec' =
		    %% Line 573
		    [{{'image_string',1},[{'type',573,'fun',[{'type',573,'product',[{'ann_type',573,[{'var',573,'Request'}|[{'type',573,'string',[]}]]}]}|[{'type',573,'string',[]}]]}]}],
		%% Line 580
		'spec' =
		    %% Line 580
		    [{{'image_string',2},[{'type',580,'fun',[{'type',580,'product',[{'type',580,'union',[{'type',580,'atom',[]}|[{'type',580,'string',[]}]]}|[{'type',580,'list',[]}]]}|[{'type',580,'string',[]}]]}]}],
		%% Line 606
		'spec' =
		    %% Line 606
		    [{{'pid2value',1},[{'type',606,'fun',[{'type',606,'product',[{'ann_type',606,[{'var',606,'Pid'}|[{'type',606,'pid',[]}]]}]}|[{'type',606,'string',[]}]]}]}],
		%% Line 612
		'spec' =
		    %% Line 612
		    [{{'value2pid',1},[{'type',612,'fun',[{'type',612,'product',[{'ann_type',612,[{'var',612,'Value'}|[{'type',612,'string',[]}]]}]}|[{'type',612,'pid',[]}]]}]}],
		%% Line 621
		'spec' =
		    %% Line 621
		    [{{'get_option_value',2},[{'type',621,'fun',[{'type',621,'product',[{'ann_type',621,[{'var',621,'Option'}|[{'type',621,'string',[]}]]}|[{'ann_type',621,[{'var',621,'Options'}|[{'type',621,'list',[{'type',621,'tuple',[{'type',621,'string',[]}|[{'type',621,'any',[]}]]}]}]]}]]}|[{'type',622,'union',[{'type',622,'tuple',[{'atom',622,'error'}|[{'type',622,'any',[]}]]}|[{'type',622,'boolean',[]}|[{'type',622,'pid',[]}|[{'type',622,'list',[{'type',622,'pid',[]}]}|[{'type',622,'number',[]}]]]]]}]]}]}],
		%% Line 656
		'spec' =
		    %% Line 656
		    [{{'get_number_value',1},[{'type',656,'fun',[{'type',656,'product',[{'type',656,'string',[]}]}|[{'type',656,'union',[{'type',656,'number',[]}|[{'type',656,'tuple',[{'atom',656,'error'}|[{'atom',656,'illegal_number'}]]}]]}]]}]}],
		%% Line 703
		'spec' =
		    %% Line 703
		    [{{'error_msg',1},[{'type',703,'fun',[{'type',703,'product',[{'ann_type',703,[{'var',703,'Error'}|[{'type',703,'string',[]}]]}]}|[{'type',703,'string',[]}]]}]}]]
'page'/3 =
    %% Line 43
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 44
	    apply 'header'/0
		()
	in  do  %% Line 44
		call 'mod_esi':'deliver'
		    (_cor2, _cor3)
		let <_cor4> =
		    %% Line 45
		    apply 'menu'/0
			()
		in  do  %% Line 45
			call 'mod_esi':'deliver'
			    (_cor2, _cor4)
			let <_cor5> =
			    %% Line 46
			    apply 'overview_content'/2
				(_cor1, _cor0)
			in  do  %% Line 46
				call 'mod_esi':'deliver'
				    (_cor2, _cor5)
				let <_cor6> =
				    %% Line 47
				    apply 'footer'/0
					()
				in  %% Line 47
				    call 'mod_esi':'deliver'
					(_cor2, _cor6)
'processes_page'/3 =
    %% Line 49
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 50
	    apply 'header'/0
		()
	in  do  %% Line 50
		call 'mod_esi':'deliver'
		    (_cor2, _cor3)
		let <_cor4> =
		    %% Line 51
		    apply 'menu'/0
			()
		in  do  %% Line 51
			call 'mod_esi':'deliver'
			    (_cor2, _cor4)
			let <_cor5> =
			    %% Line 52
			    apply 'processes_content'/0
				()
			in  do  %% Line 52
				call 'mod_esi':'deliver'
				    (_cor2, _cor5)
				let <_cor6> =
				    %% Line 53
				    apply 'footer'/0
					()
				in  %% Line 53
				    call 'mod_esi':'deliver'
					(_cor2, _cor6)
'concurrency_page'/3 =
    %% Line 55
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 56
	    apply 'header'/0
		()
	in  do  %% Line 56
		call 'mod_esi':'deliver'
		    (_cor2, _cor3)
		let <_cor4> =
		    %% Line 57
		    apply 'menu'/0
			()
		in  do  %% Line 57
			call 'mod_esi':'deliver'
			    (_cor2, _cor4)
			let <_cor5> =
			    %% Line 58
			    apply 'concurrency_content'/2
				(_cor1, _cor0)
			in  do  %% Line 58
				call 'mod_esi':'deliver'
				    (_cor2, _cor5)
				let <_cor6> =
				    %% Line 59
				    apply 'footer'/0
					()
				in  %% Line 59
				    call 'mod_esi':'deliver'
					(_cor2, _cor6)
'databases_page'/3 =
    %% Line 61
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 62
	    apply 'header'/0
		()
	in  do  %% Line 62
		call 'mod_esi':'deliver'
		    (_cor2, _cor3)
		let <_cor4> =
		    %% Line 63
		    apply 'menu'/0
			()
		in  do  %% Line 63
			call 'mod_esi':'deliver'
			    (_cor2, _cor4)
			let <_cor5> =
			    %% Line 64
			    apply 'databases_content'/0
				()
			in  do  %% Line 64
				call 'mod_esi':'deliver'
				    (_cor2, _cor5)
				let <_cor6> =
				    %% Line 65
				    apply 'footer'/0
					()
				in  %% Line 65
				    call 'mod_esi':'deliver'
					(_cor2, _cor6)
'codelocation_page'/3 =
    %% Line 67
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 68
	    apply 'header'/0
		()
	in  do  %% Line 68
		call 'mod_esi':'deliver'
		    (_cor2, _cor3)
		let <_cor4> =
		    %% Line 69
		    apply 'menu'/0
			()
		in  do  %% Line 69
			call 'mod_esi':'deliver'
			    (_cor2, _cor4)
			let <_cor5> =
			    %% Line 70
			    apply 'codelocation_content'/2
				(_cor1, _cor0)
			in  do  %% Line 70
				call 'mod_esi':'deliver'
				    (_cor2, _cor5)
				let <_cor6> =
				    %% Line 71
				    apply 'footer'/0
					()
				in  %% Line 71
				    call 'mod_esi':'deliver'
					(_cor2, _cor6)
'process_info_page'/3 =
    %% Line 73
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 74
	    apply 'header'/0
		()
	in  do  %% Line 74
		call 'mod_esi':'deliver'
		    (_cor2, _cor3)
		let <_cor4> =
		    %% Line 75
		    apply 'menu'/0
			()
		in  do  %% Line 75
			call 'mod_esi':'deliver'
			    (_cor2, _cor4)
			let <_cor5> =
			    %% Line 76
			    apply 'process_info_content'/2
				(_cor1, _cor0)
			in  do  %% Line 76
				call 'mod_esi':'deliver'
				    (_cor2, _cor5)
				let <_cor6> =
				    %% Line 77
				    apply 'footer'/0
					()
				in  %% Line 77
				    call 'mod_esi':'deliver'
					(_cor2, _cor6)
'load_database_page'/3 =
    %% Line 79
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 80
	    apply 'header'/0
		()
	in  do  %% Line 80
		call 'mod_esi':'deliver'
		    (_cor2, _cor3)
		do  %% Line 83
		    apply 'load_database_content'/3
			(_cor2, _cor1, _cor0)
		    let <_cor4> =
			%% Line 84
			apply 'footer'/0
			    ()
		    in  %% Line 84
			call 'mod_esi':'deliver'
			    (_cor2, _cor4)
'overview_content'/2 =
    %% Line 91
    fun (_cor1,_cor0) ->
	let <Query> =
	    %% Line 92
	    call 'httpd':'parse_query'
		(_cor0)
	in  let <Min> =
		%% Line 93
		apply 'get_option_value'/2
		    ([114|[97|[110|[103|[101|[95|[109|[105|[110]]]]]]]]], Query)
	    in  let <Max> =
		    %% Line 94
		    apply 'get_option_value'/2
			([114|[97|[110|[103|[101|[95|[109|[97|[120]]]]]]]]], Query)
		in  let <_cor8> =
			%% Line 97
			call 'percept_db':'select'
			    ({'system','stop_ts'})
		    in  let <_cor7> =
			    %% Line 98
			    call 'percept_db':'select'
				({'system','start_ts'})
			in  let <_cor9> =
				%% Line 97
				call 'timer':'now_diff'
				    (_cor8, _cor7)
			    in  let <TotalProfileTime> =
				    %% Line 98
				    call 'erlang':'/'
					(_cor9, 1000000)
				in  let <_cor11> =
					%% Line 99
					call 'percept_db':'select'
					    ({'information','procs'})
				    in  let <RegisteredProcs> =
					    %% Line 99
					    call 'erlang':'length'
						(_cor11)
					in  let <_cor13> =
						%% Line 100
						call 'percept_db':'select'
						    ({'information','ports'})
					    in  let <RegisteredPorts> =
						    %% Line 100
						    call 'erlang':'length'
							(_cor13)
						in  let <_cor23> =
							%% Line 104
							apply 'table_line'/1
							    ([[80|[114|[111|[102|[105|[108|[101|[32|[116|[105|[109|[101|[58]]]]]]]]]]]]]|[TotalProfileTime|[]]])
						    in  let <_cor21> =
							    %% Line 105
							    apply 'table_line'/1
								([[80|[114|[111|[99|[101|[115|[115|[101|[115|[58]]]]]]]]]]|[RegisteredProcs|[]]])
							in  let <_cor19> =
								%% Line 106
								apply 'table_line'/1
								    ([[80|[111|[114|[116|[115|[58]]]]]]|[RegisteredPorts|[]]])
							    in  let <_cor17> =
								    %% Line 107
								    apply 'table_line'/1
									([[77|[105|[110|[46|[32|[114|[97|[110|[103|[101|[58]]]]]]]]]]]|[Min|[]]])
								in  let <_cor15> =
									%% Line 108
									apply 'table_line'/1
									    ([[77|[97|[120|[46|[32|[114|[97|[110|[103|[101|[58]]]]]]]]]]]|[Max|[]]])
								    in  let <_cor16> =
									    %% Line 108
									    call 'erlang':'++'
										(_cor15, %% Line 109
											 [60|[47|[116|[97|[98|[108|[101|[62]]]]]]]])
									in  let <_cor18> =
										%% Line 107
										call 'erlang':'++'
										    (_cor17, _cor16)
									    in  let <_cor20> =
										    %% Line 106
										    call 'erlang':'++'
											(_cor19, _cor18)
										in  let <_cor22> =
											%% Line 105
											call 'erlang':'++'
											    (_cor21, _cor20)
										    in  let <_cor24> =
											    %% Line 104
											    call 'erlang':'++'
												(_cor23, _cor22)
											in  let <InformationTable> =
												%% Line 103
												call 'erlang':'++'
												    ([60|[116|[97|[98|[108|[101|[62]]]]]]], _cor24)
											    in  let <_cor30> =
												    %% Line 115
												    call 'erlang':'float'
													(Min)
												in  let <_cor31> =
													%% Line 115
													apply 'term2html'/1
													    (_cor30)
												    in  let <_cor26> =
													    %% Line 116
													    call 'erlang':'float'
														(Max)
													in  let <_cor27> =
														%% Line 116
														apply 'term2html'/1
														    (_cor26)
													    in  let <_cor28> =
														    %% Line 116
														    call 'erlang':'++'
															(_cor27, [62|[10]])
														in  let <_cor29> =
															%% Line 116
															call 'erlang':'++'
															    ([62|[10|[32|[32|[32|[32|[60|[105|[110|[112|[117|[116|[32|[110|[97|[109|[101|[61|[100|[97|[116|[97|[95|[109|[97|[120|[32|[116|[121|[112|[101|[61|[104|[105|[100|[100|[101|[110|[32|[118|[97|[108|[117|[101|[61]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor28)
														    in  let <_cor32> =
															    %% Line 115
															    call 'erlang':'++'
																(_cor31, _cor29)
															in  let <_cor33> =
																%% Line 115
																call 'erlang':'++'
																    ([60|[47|[100|[105|[118|[62|[10|[10|[32|[32|[32|[32|[60|[102|[111|[114|[109|[32|[110|[97|[109|[101|[61|[102|[111|[114|[109|[95|[97|[114|[101|[97|[32|[109|[101|[116|[104|[111|[100|[61|[80|[79|[83|[84|[32|[97|[99|[116|[105|[111|[110|[61|[47|[99|[103|[105|[45|[98|[105|[110|[47|[112|[101|[114|[99|[101|[112|[116|[95|[104|[116|[109|[108|[47|[112|[97|[103|[101|[62|[10|[32|[32|[32|[32|[60|[105|[110|[112|[117|[116|[32|[110|[97|[109|[101|[61|[100|[97|[116|[97|[95|[109|[105|[110|[32|[116|[121|[112|[101|[61|[104|[105|[100|[100|[101|[110|[32|[118|[97|[108|[117|[101|[61]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor32)
															    in  let <_cor34> =
																    %% Line 113
																    call 'erlang':'++'
																	(InformationTable, _cor33)
																in  let <Header> =
																	%% Line 113
																	call 'erlang':'++'
																	    ([10|[32|[32|[32|[32|[60|[100|[105|[118|[32|[105|[100|[61|[34|[99|[111|[110|[116|[101|[110|[116|[34|[62|[10|[32|[32|[32|[32|[60|[100|[105|[118|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor34)
																    in  let <_cor48> =
																	    %% Line 123
																	    call 'erlang':'float'
																		(Min)
																	in  let <_cor49> =
																		%% Line 123
																		apply 'term2html'/1
																		    (_cor48)
																	    in  let <_cor50> =
																		    %% Line 123
																		    call 'erlang':'++'
																			(_cor49, [62])
																		in  let <_cor51> =
																			%% Line 123
																			call 'erlang':'++'
																			    ([60|[105|[110|[112|[117|[116|[32|[110|[97|[109|[101|[61|[114|[97|[110|[103|[101|[95|[109|[105|[110|[32|[118|[97|[108|[117|[101|[61]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor50)
																		    in  let <_cor58> =
																			    %% Line 125
																			    apply 'url_graph'/5
																				(1200, 600, Min, Max, [])
																			in  let <_cor55> =
																				%% Line 126
																				apply 'url_graph'/5
																				    (1200, 600, Min, Max, [])
																			    in  let <_cor52> =
																				    %% Line 127
																				    apply 'url_graph'/5
																					(1200, 600, Min, Max, [])
																				in  let <_cor53> =
																					%% Line 127
																					call 'erlang':'++'
																					    (_cor52, [34|[32|[47|[62|[80|[111|[114|[116|[115|[32|[38|[32|[80|[114|[111|[99|[101|[115|[115|[101|[115|[10|[9|[32|[32|[32|[32|[60|[47|[115|[101|[108|[101|[99|[116|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
																				    in  let <_cor54> =
																					    %% Line 127
																					    call 'erlang':'++'
																						([34|[32|[47|[62|[80|[114|[111|[99|[101|[115|[115|[101|[115|[10|[9|[32|[32|[32|[32|[9|[60|[111|[112|[116|[105|[111|[110|[32|[118|[97|[108|[117|[101|[61|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor53)
																					in  let <_cor56> =
																						%% Line 126
																						call 'erlang':'++'
																						    (_cor55, _cor54)
																					    in  let <_cor57> =
																						    %% Line 126
																						    call 'erlang':'++'
																							([34|[32|[47|[62|[80|[111|[114|[116|[115|[10|[9|[32|[32|[32|[32|[9|[60|[111|[112|[116|[105|[111|[110|[32|[100|[105|[115|[97|[98|[108|[101|[100|[61|[116|[114|[117|[101|[32|[118|[97|[108|[117|[101|[61|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor56)
																						in  let <_cor59> =
																							%% Line 125
																							call 'erlang':'++'
																							    (_cor58, _cor57)
																						    in  let <_cor60> =
																							    %% Line 125
																							    call 'erlang':'++'
																								([60|[115|[101|[108|[101|[99|[116|[32|[110|[97|[109|[101|[61|[34|[103|[114|[97|[112|[104|[95|[115|[101|[108|[101|[99|[116|[34|[32|[111|[110|[67|[104|[97|[110|[103|[101|[61|[34|[115|[101|[108|[101|[99|[116|[95|[105|[109|[97|[103|[101|[40|[41|[34|[62|[10|[9|[32|[32|[32|[32|[9|[60|[111|[112|[116|[105|[111|[110|[32|[100|[105|[115|[97|[98|[108|[101|[100|[61|[116|[114|[117|[101|[32|[118|[97|[108|[117|[101|[61|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor59)
																							in  let <_cor61> =
																								%% Line 121
																								apply 'table_line'/1
																								    ([%% Line 122
																								      [77|[105|[110|[58]]]]|%% Line 123
																											    [_cor51|%% Line 125
																												    [_cor60|%% Line 129
																													    [[60|[105|[110|[112|[117|[116|[32|[116|[121|[112|[101|[61|[115|[117|[98|[109|[105|[116|[32|[118|[97|[108|[117|[101|[61|[85|[112|[100|[97|[116|[101|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
																							    in  let <_cor36> =
																								    %% Line 133
																								    call 'erlang':'float'
																									(Max)
																								in  let <_cor37> =
																									%% Line 133
																									apply 'term2html'/1
																									    (_cor36)
																								    in  let <_cor38> =
																									    %% Line 133
																									    call 'erlang':'++'
																										(_cor37, [62])
																									in  let <_cor39> =
																										%% Line 133
																										call 'erlang':'++'
																										    ([60|[105|[110|[112|[117|[116|[32|[110|[97|[109|[101|[61|[114|[97|[110|[103|[101|[95|[109|[97|[120|[32|[118|[97|[108|[117|[101|[61]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor38)
																									    in  let <_cor43> =
																										    %% Line 136
																										    apply 'term2html'/1
																											(Min)
																										in  let <_cor40> =
																											%% Line 136
																											apply 'term2html'/1
																											    (Max)
																										    in  let <_cor41> =
																											    %% Line 136
																											    call 'erlang':'++'
																												(_cor40, [62|[67|[111|[100|[101|[32|[108|[111|[99|[97|[116|[105|[111|[110|[60|[47|[97|[62]]]]]]]]]]]]]]]]]])
																											in  let <_cor42> =
																												%% Line 136
																												call 'erlang':'++'
																												    ([38|[114|[97|[110|[103|[101|[95|[109|[97|[120|[61]]]]]]]]]]], _cor41)
																											    in  let <_cor44> =
																												    %% Line 136
																												    call 'erlang':'++'
																													(_cor43, _cor42)
																												in  let <_cor45> =
																													%% Line 135
																													call 'erlang':'++'
																													    ([60|[97|[32|[104|[114|[101|[102|[61|[47|[99|[103|[105|[45|[98|[105|[110|[47|[112|[101|[114|[99|[101|[112|[116|[95|[104|[116|[109|[108|[47|[99|[111|[100|[101|[108|[111|[99|[97|[116|[105|[111|[110|[95|[112|[97|[103|[101|[63|[114|[97|[110|[103|[101|[95|[109|[105|[110|[61]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor44)
																												    in  let <_cor46> =
																													    %% Line 131
																													    apply 'table_line'/1
																														([%% Line 132
																														  [77|[97|[120|[58]]]]|%% Line 133
																																       [_cor39|%% Line 134
																																	       [[]|%% Line 135
																																		   [_cor45|%% Line 137
																																			   []]]]])
																													in  let <_cor47> =
																														%% Line 137
																														call 'erlang':'++'
																														    (_cor46, %% Line 138
																															     [60|[47|[116|[97|[98|[108|[101|[62]]]]]]]])
																													    in  let <_cor62> =
																														    %% Line 130
																														    call 'erlang':'++'
																															(_cor61, _cor47)
																														in  let <RangeTable> =
																															%% Line 120
																															call 'erlang':'++'
																															    ([60|[116|[97|[98|[108|[101|[62]]]]]]], _cor62)
																														    in  let <_cor66> =
																															    %% Line 143
																															    apply 'div_tag_graph'/0
																																()
																															in  let <_cor67> =
																																%% Line 143
																																apply 'table_line'/1
																																    ([_cor66|[]])
																															    in  let <_cor64> =
																																    %% Line 144
																																    apply 'table_line'/1
																																	([RangeTable|[]])
																																in  let <_cor65> =
																																	%% Line 144
																																	call 'erlang':'++'
																																	    (_cor64, %% Line 145
																																		     [60|[47|[116|[97|[98|[108|[101|[62]]]]]]]])
																																    in  let <_cor68> =
																																	    %% Line 143
																																	    call 'erlang':'++'
																																		(_cor67, _cor65)
																																	in  let <MainTable> =
																																		%% Line 142
																																		call 'erlang':'++'
																																		    ([60|[116|[97|[98|[108|[101|[62]]]]]]], _cor68)
																																	    in  let <_cor71> =
																																		    %% Line 149
																																		    call 'erlang':'++'
																																			(MainTable, [60|[47|[100|[105|[118|[62|[60|[47|[102|[111|[114|[109|[62]]]]]]]]]]]]])
																																		in  %% Line 149
																																		    call 'erlang':'++'
																																			(Header, _cor71)
'div_tag_graph'/0 =
    %% Line 151
    fun () ->
	%% Line 153
	[60|[100|[105|[118|[32|[105|[100|[61|[34|[112|[101|[114|[99|[101|[112|[116|[95|[103|[114|[97|[112|[104|[34|[32|[10|[9|[111|[110|[77|[111|[117|[115|[101|[68|[111|[119|[110|[61|[34|[115|[101|[108|[101|[99|[116|[95|[100|[111|[119|[110|[40|[101|[118|[101|[110|[116|[41|[34|[32|[10|[9|[111|[110|[77|[111|[117|[115|[101|[77|[111|[118|[101|[61|[34|[115|[101|[108|[101|[99|[116|[95|[109|[111|[118|[101|[40|[101|[118|[101|[110|[116|[41|[34|[32|[10|[9|[111|[110|[77|[111|[117|[115|[101|[85|[112|[61|[34|[115|[101|[108|[101|[99|[116|[95|[117|[112|[40|[101|[118|[101|[110|[116|[41|[34|[10|[10|[9|[115|[116|[121|[108|[101|[61|[34|[10|[9|[98|[97|[99|[107|[103|[114|[111|[117|[110|[100|[45|[115|[105|[122|[101|[58|[32|[49|[48|[48|[37|[59|[10|[9|[98|[97|[99|[107|[103|[114|[111|[117|[110|[100|[45|[111|[114|[105|[103|[105|[110|[58|[32|[99|[111|[110|[116|[101|[110|[116|[59|[10|[9|[119|[105|[100|[116|[104|[58|[32|[49|[48|[48|[37|[59|[10|[9|[112|[111|[115|[105|[116|[105|[111|[110|[58|[114|[101|[108|[97|[116|[105|[118|[101|[59|[10|[9|[34|[62|[10|[9|[10|[9|[60|[100|[105|[118|[32|[105|[100|[61|[34|[112|[101|[114|[99|[101|[112|[116|[95|[97|[114|[101|[97|[115|[101|[108|[101|[99|[116|[34|[10|[9|[115|[116|[121|[108|[101|[61|[34|[98|[97|[99|[107|[103|[114|[111|[117|[110|[100|[45|[99|[111|[108|[111|[114|[58|[35|[101|[102|[48|[57|[48|[57|[59|[10|[9|[112|[111|[115|[105|[116|[105|[111|[110|[58|[114|[101|[108|[97|[116|[105|[118|[101|[59|[10|[9|[118|[105|[115|[105|[98|[105|[108|[105|[116|[121|[58|[104|[105|[100|[100|[101|[110|[59|[10|[32|[32|[32|[32|[32|[32|[9|[98|[111|[114|[100|[101|[114|[45|[108|[101|[102|[116|[58|[32|[49|[112|[120|[32|[115|[111|[108|[105|[100|[32|[35|[49|[48|[49|[48|[49|[48|[59|[10|[9|[98|[111|[114|[100|[101|[114|[45|[114|[105|[103|[104|[116|[58|[32|[49|[112|[120|[32|[115|[111|[108|[105|[100|[32|[35|[49|[48|[49|[48|[49|[48|[59|[10|[9|[122|[45|[105|[110|[100|[101|[120|[58|[50|[59|[10|[9|[119|[105|[100|[116|[104|[58|[52|[48|[112|[120|[59|[10|[9|[104|[101|[105|[103|[104|[116|[58|[52|[48|[112|[120|[59|[34|[62|[60|[47|[100|[105|[118|[62|[60|[47|[100|[105|[118|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
'url_graph'/5 =
    %% Line 182
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <W,H,Min,Max,[]> when 'true' ->
	      let <_cor16> =
		  %% Line 183
		  call 'erlang':'float'
		      (Min)
	      in  let <_cor17> =
		      %% Line 183
		      apply 'term2html'/1
			  (_cor16)
		  in  let <_cor12> =
			  %% Line 184
			  call 'erlang':'float'
			      (Max)
		      in  let <_cor13> =
			      %% Line 184
			      apply 'term2html'/1
				  (_cor12)
			  in  let <_cor8> =
				  %% Line 185
				  call 'erlang':'float'
				      (W)
			      in  let <_cor9> =
				      %% Line 185
				      apply 'term2html'/1
					  (_cor8)
				  in  let <_cor5> =
					  %% Line 186
					  call 'erlang':'float'
					      (H)
				      in  let <_cor6> =
					      %% Line 186
					      apply 'term2html'/1
						  (_cor5)
					  in  let <_cor7> =
						  %% Line 186
						  call 'erlang':'++'
						      ([38|[104|[101|[105|[103|[104|[116|[61]]]]]]]], _cor6)
					      in  let <_cor10> =
						      %% Line 186
						      call 'erlang':'++'
							  (_cor9, _cor7)
						  in  let <_cor11> =
							  %% Line 185
							  call 'erlang':'++'
							      ([38|[119|[105|[100|[116|[104|[61]]]]]]], _cor10)
						      in  let <_cor14> =
							      %% Line 185
							      call 'erlang':'++'
								  (_cor13, _cor11)
							  in  let <_cor15> =
								  %% Line 184
								  call 'erlang':'++'
								      ([38|[114|[97|[110|[103|[101|[95|[109|[97|[120|[61]]]]]]]]]]], _cor14)
							      in  let <_cor18> =
								      %% Line 184
								      call 'erlang':'++'
									  (_cor17, _cor15)
								  in  %% Line 183
								      call 'erlang':'++'
									  ([47|[99|[103|[105|[45|[98|[105|[110|[47|[112|[101|[114|[99|[101|[112|[116|[95|[103|[114|[97|[112|[104|[47|[103|[114|[97|[112|[104|[63|[114|[97|[110|[103|[101|[95|[109|[105|[110|[61]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor18)
	  ( <_cor23,_cor22,_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor23,_cor22,_cor21,_cor20,_cor19})
		  -| [{'function_name',{'url_graph',5}}] )
	    -| ['compiler_generated'] )
	end
'process_info_content'/2 =
    %% Line 190
    fun (_cor1,_cor0) ->
	let <Query> =
	    %% Line 191
	    call 'httpd':'parse_query'
		(_cor0)
	in  let <Pid> =
		%% Line 192
		apply 'get_option_value'/2
		    ([112|[105|[100]]], Query)
	    in  %% Line 195
		case call 'percept_db':'select'
			 ({'information',Pid}) of
		  <[I|[]]> when 'true' ->
		      %% Line 196
		      ( case I of
			  ( <( {'information',_cor80,_cor81,_rec0,_cor82,_cor83,_cor84,_cor85}
			       -| ['compiler_generated'] )> when 'true' ->
				let <_cor15> =
				    case _rec0 of
				      %% Line 197
				      <{_cor87,_cor88,Arguments}> when 'true' ->
					  let <_cor13> =
					      ( letrec
						    'lc$^0'/1 =
							fun (_cor9) ->
							    case _cor9 of
							      <[Arg|_cor8]> when 'true' ->
								  let <_cor10> =
								      apply 'term2html'/1
									  (Arg)
								  in  let <_cor11> =
									  call 'erlang':'++'
									      (_cor10, [60|[98|[114|[62]]]])
								      in  let <_cor12> =
									      apply 'lc$^0'/1
										  (_cor8)
									  in  ( [_cor11|_cor12]
										-| ['compiler_generated'] )
							      <[]> when 'true' ->
								  []
							      ( <_cor9> when 'true' ->
								    ( primop 'match_fail'
									  ({'function_clause',_cor9})
								      -| [{'function_name',{'lc$^0',1}}] )
								-| ['compiler_generated'] )
							    end
						in  apply 'lc$^0'/1
							(Arguments)
						-| ['list_comprehension'] )
					  in  call 'lists':'flatten'
						  (_cor13)
				      %% Line 198
				      <_cor89> when 'true' ->
					  []
				    end
				in  let <_cor19> =
					%% Line 206
					apply 'term2html'/1
					    (_cor82)
				    in  let <_cor22> =
					    %% Line 207
					    apply 'procstarttime'/1
						(_cor82)
					in  let <_cor23> =
						%% Line 207
						apply 'term2html'/1
						    (_cor22)
					    in  let <_cor26> =
						    %% Line 209
						    apply 'term2html'/1
							(_cor83)
						in  let <_cor29> =
							%% Line 210
							apply 'procstoptime'/1
							    (_cor83)
						    in  let <_cor30> =
							    %% Line 210
							    apply 'term2html'/1
								(_cor29)
							in  let <TimeTable> =
								%% Line 201
								apply 'html_table'/1
								    ([%% Line 202
								      [{'th',[]}|[{'th',[84|[105|[109|[101|[115|[116|[97|[109|[112]]]]]]]]]}|[{'th',[80|[114|[111|[102|[105|[108|[101|[32|[84|[105|[109|[101]]]]]]]]]]]]}]]]|%% Line 205
																											     [[{'td',[83|[116|[97|[114|[116]]]]]}|%% Line 206
																																  [_cor19|%% Line 207
																																	  [_cor23|[]]]]|%% Line 208
																																			[[{'td',[83|[116|[111|[112]]]]}|%% Line 209
																																							[_cor26|%% Line 210
																																								[_cor30|[]]]]|%% Line 211
																																									      []]]])
							    in  let <_cor34> =
								    %% Line 214
								    apply 'term2html'/1
									(_cor80)
								in  let <_cor37> =
									%% Line 215
									apply 'term2html'/1
									    (_cor81)
								    in  let <_cor40> =
									    %% Line 216
									    apply 'mfa2html'/1
										(_rec0)
									in  let <_cor43> =
										%% Line 219
										apply 'pid2html'/1
										    (_cor84)
									    in  let <_cor49> =
										    %% Line 220
										    ( fun (_cor47) ->
											  let <_cor46> =
											      apply 'pid2html'/1
												  (_cor47)
											  in  call 'erlang':'++'
												  (_cor46, [32])
										      -| [{'id',{0,0,'-process_info_content/2-fun-0-'}}] )
										in  let <_cor50> =
											%% Line 220
											call 'lists':'map'
											    (_cor49, _cor85)
										    in  let <_cor51> =
											    %% Line 220
											    call 'lists':'flatten'
												(_cor50)
											in  let <InfoTable> =
												%% Line 213
												apply 'html_table'/1
												    ([%% Line 214
												      [{'th',[80|[105|[100]]]}|[_cor34|[]]]|%% Line 215
																	    [[{'th',[78|[97|[109|[101]]]]}|[_cor37|[]]]|%% Line 216
																							[[{'th',[69|[110|[116|[114|[121|[112|[111|[105|[110|[116]]]]]]]]]]}|[_cor40|[]]]|%% Line 217
																																	 [[{'th',[65|[114|[103|[117|[109|[101|[110|[116|[115]]]]]]]]]}|[_cor15|[]]]|%% Line 218
																																										    [[{'th',[84|[105|[109|[101|[116|[97|[98|[108|[101]]]]]]]]]}|[TimeTable|[]]]|%% Line 219
																																																				[[{'th',[80|[97|[114|[101|[110|[116]]]]]]}|[_cor43|[]]]|%% Line 220
																																																											[[{'th',[67|[104|[105|[108|[100|[114|[101|[110]]]]]]]]}|[_cor51|[]]]|%% Line 221
																																																																			     []]]]]]]])
											    in  let <PidActivities> =
												    %% Line 223
												    call 'percept_db':'select'
													({'activity',[{'id',Pid}|[]]})
												in  let <WaitingMfas> =
													%% Line 224
													call 'percept_analyzer':'waiting_activities'
													    (PidActivities)
												    in  let <_cor59> =
													    %% Line 226
													    ( letrec
														  'lc$^1'/1 =
														      fun (_cor57) ->
															  case _cor57 of
															    <[{T,_cor153,_cor154}|_cor56]> when 'true' ->
																let <_cor58> =
																    apply 'lc$^1'/1
																	(_cor56)
																in  ( [T|_cor58]
																      -| ['compiler_generated'] )
															    ( <[_cor55|_cor56]> when 'true' ->
																  apply 'lc$^1'/1
																      (_cor56)
															      -| ['compiler_generated'] )
															    <[]> when 'true' ->
																[]
															    ( <_cor57> when 'true' ->
																  ( primop 'match_fail'
																	({'function_clause',_cor57})
																    -| [{'function_name',{'lc$^1',1}}] )
															      -| ['compiler_generated'] )
															  end
													      in  apply 'lc$^1'/1
														      (WaitingMfas)
													      -| ['list_comprehension'] )
													in  let <TotalWaitTime> =
														%% Line 226
														call 'lists':'sum'
														    (_cor59)
													    in  let <_cor72> =
														    %% Line 234
														    ( letrec
															  'lc$^2'/1 =
															      fun (_cor63) ->
																  case _cor63 of
																    <[%% Line 240
																      {Time,MFA,{Mean,StdDev,N}}|_cor62]> when 'true' ->
																	let <_cor64> =
																	    %% Line 235
																	    call 'erlang':'/'
																		(Time, TotalWaitTime)
																	in  let <_cor65> =
																		%% Line 235
																		apply 'image_string'/2
																		    ('percentage', [{'width',100}|[{'height',10}|[{'percentage',_cor64}|[]]]])
																	    in  let <_cor66> =
																		    %% Line 236
																		    apply 'term2html'/1
																			(Time)
																		in  let <_cor67> =
																			%% Line 237
																			apply 'term2html'/1
																			    (Mean)
																		    in  let <_cor68> =
																			    %% Line 238
																			    apply 'term2html'/1
																				(StdDev)
																			in  let <_cor69> =
																				%% Line 239
																				apply 'term2html'/1
																				    (N)
																			    in  let <_cor70> =
																				    %% Line 240
																				    apply 'mfa2html'/1
																					(MFA)
																				in  let <_cor71> =
																					%% Line 240
																					apply 'lc$^2'/1
																					    (_cor62)
																				    in  ( [%% Line 235
																					   [{'td',_cor65}|%% Line 236
																							  [{'td',_cor66}|%% Line 237
																									 [{'td',_cor67}|%% Line 238
																											[{'td',_cor68}|%% Line 239
																												       [{'td',_cor69}|%% Line 240
																														      [{'td',_cor70}|[]]]]]]]|_cor71]
																					  -| ['compiler_generated'] )
																    ( <[_cor61|_cor62]> when 'true' ->
																	  %% Line 240
																	  apply 'lc$^2'/1
																	      (_cor62)
																      -| ['compiler_generated'] )
																    <[]> when 'true' ->
																	[]
																    ( <_cor63> when 'true' ->
																	  ( primop 'match_fail'
																		({'function_clause',_cor63})
																	    -| [{'function_name',{'lc$^2',1}}] )
																      -| ['compiler_generated'] )
																  end
														      in  apply 'lc$^2'/1
															      (%% Line 240
															       WaitingMfas)
														      -| ['list_comprehension'] )
														in  let <_cor73> =
															%% Line 234
															[[{'th',[112|[101|[114|[99|[101|[110|[116|[97|[103|[101]]]]]]]]]]}|[{'th',[116|[111|[116|[97|[108]]]]]}|[{'th',[109|[101|[97|[110]]]]}|[{'th',[115|[116|[100|[100|[101|[118]]]]]]}|[{'th',[35|[114|[101|[99|[118]]]]]}|[{'th',[109|[111|[100|[117|[108|[101|[58|[102|[117|[110|[99|[116|[105|[111|[110|[47|[97|[114|[105|[116|[121]]]]]]]]]]]]]]]]]]]]]}]]]]]]|_cor72]
														    in  let <MfaTable> =
															    %% Line 228
															    apply 'html_table'/1
																(_cor73)
															in  let <_cor75> =
																%% Line 244
																call 'erlang':'++'
																    (MfaTable, %% Line 245
																	       [60|[47|[100|[105|[118|[62]]]]]])
															    in  let <_cor76> =
																    %% Line 243
																    [60|[98|[114|[62|_cor75]]]]
																in  let <_cor77> =
																	%% Line 243
																	call 'erlang':'++'
																	    (InfoTable, _cor76)
																    in  %% Line 242
																	call 'erlang':'++'
																	    ([60|[100|[105|[118|[32|[105|[100|[61|[34|[99|[111|[110|[116|[101|[110|[116|[34|[62]]]]]]]]]]]]]]]]]], _cor77)
			    -| ['compiler_generated'] )
			  ( <_cor86> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','information'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  ( <_cor4> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor4})
		    -| ['compiler_generated'] )
		end
'concurrency_content'/2 =
    %% Line 248
    fun (_cor1,_cor0) ->
	let <Query> =
	    %% Line 250
	    call 'httpd':'parse_query'
		(_cor0)
	in  let <_cor10> =
		%% Line 253
		( letrec
		      'lc$^0'/1 =
			  fun (_cor7) ->
			      case _cor7 of
				<[{PidValue,Case}|_cor4]>
				    when let <_cor5> =
					  call 'erlang':'=='
					      (Case, [111|[110]])
				      in  let <_cor6> =
					      call 'erlang':'/='
						  (PidValue, [115|[101|[108|[101|[99|[116|[95|[97|[108|[108]]]]]]]]]])
					  in  call 'erlang':'and'
						  (_cor5, _cor6) ->
				    let <_cor8> =
					apply 'value2pid'/1
					    (PidValue)
				    in  let <_cor9> =
					    apply 'lc$^0'/1
						(_cor4)
					in  ( [_cor8|_cor9]
					      -| ['compiler_generated'] )
				( <[_cor3|_cor4]> when 'true' ->
				      apply 'lc$^0'/1
					  (_cor4)
				  -| ['compiler_generated'] )
				<[]> when 'true' ->
				    []
				( <_cor7> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor7})
					-| [{'function_name',{'lc$^0',1}}] )
				  -| ['compiler_generated'] )
			      end
		  in  apply 'lc$^0'/1
			  (Query)
		  -| ['list_comprehension'] )
	    in  let <_cor16> =
		    %% Line 254
		    ( letrec
			  'lc$^1'/1 =
			      fun (_cor14) ->
				  case _cor14 of
				    <[Pid|_cor13]> when 'true' ->
					let <_cor15> =
					    apply 'lc$^1'/1
						(_cor13)
					in  ( [{'id',Pid}|_cor15]
					      -| ['compiler_generated'] )
				    <[]> when 'true' ->
					[]
				    ( <_cor14> when 'true' ->
					  ( primop 'match_fail'
						({'function_clause',_cor14})
					    -| [{'function_name',{'lc$^1',1}}] )
				      -| ['compiler_generated'] )
				  end
		      in  apply 'lc$^1'/1
			      (_cor10)
		      -| ['list_comprehension'] )
		in  let <Activities> =
			%% Line 259
			call 'percept_db':'select'
			    ({'activity',_cor16})
		    in  let <StartTs> =
			    %% Line 260
			    call 'percept_db':'select'
				({'system','start_ts'})
			in  let <_cor26> =
				%% Line 261
				( letrec
				      'lc$^2'/1 =
					  fun (_cor23) ->
					      case _cor23 of
						<[{Time,Y1,Y2}|_cor21]> when 'true' ->
						    let <_cor24> =
							call 'erlang':'+'
							    (Y1, Y2)
						    in  let <_cor25> =
							    apply 'lc$^2'/1
								(_cor21)
							in  ( [{Time,_cor24}|_cor25]
							      -| ['compiler_generated'] )
						( <[_cor20|_cor21]> when 'true' ->
						      apply 'lc$^2'/1
							  (_cor21)
						  -| ['compiler_generated'] )
						<[]> when 'true' ->
						    []
						( <_cor23> when 'true' ->
						      ( primop 'match_fail'
							    ({'function_clause',_cor23})
							-| [{'function_name',{'lc$^2',1}}] )
						  -| ['compiler_generated'] )
					      end
				  in  let <_cor22> =
					  call 'percept_analyzer':'activities2count2'
					      (Activities, StartTs)
				      in  apply 'lc$^2'/1
					      (_cor22)
				  -| ['list_comprehension'] )
			    in  %% Line 262
				case call 'percept_analyzer':'minmax'
					 (_cor26) of
				  <{T0,_cor57,T1,_cor58}> when 'true' ->
				      let <_cor34> =
					  %% Line 266
					  ( letrec
						'lc$^3'/1 =
						    fun (_cor31) ->
							case _cor31 of
							  <[Pid|_cor30]> when 'true' ->
							      let <_cor32> =
								  apply 'pid2value'/1
								      (Pid)
							      in  let <_cor33> =
								      apply 'lc$^3'/1
									  (_cor30)
								  in  ( [_cor32|_cor33]
									-| ['compiler_generated'] )
							  <[]> when 'true' ->
							      []
							  ( <_cor31> when 'true' ->
								( primop 'match_fail'
								      ({'function_clause',_cor31})
								  -| [{'function_name',{'lc$^3',1}}] )
							    -| ['compiler_generated'] )
							end
					    in  apply 'lc$^3'/1
						    (_cor10)
					    -| ['list_comprehension'] )
				      in  let <_cor46> =
					      %% Line 270
					      ( fun (_cor43,_cor42) ->
						    let <ValueString> =
							%% Line 271
							apply 'pid2value'/1
							    (_cor43)
						    in  let <_cor37> =
							    %% Line 274
							    apply 'pid2html'/1
								(_cor43)
							in  let <_cor38> =
								%% Line 276
								apply 'image_string_head'/3
								    ([97|[99|[116|[105|[118|[105|[116|[121]]]]]]]], [{[112|[105|[100]]],ValueString}|[{'range_min',T0}|[{'range_max',T1}|[{'height',10}]]]], [])
							    in  let <_cor39> =
								    %% Line 276
								    call 'erlang':'++'
									(_cor38, %% Line 277
										 [39|[41|[34|[32|[115|[114|[99|[61|[47|[105|[109|[97|[103|[101|[115|[47|[119|[104|[105|[116|[101|[46|[112|[110|[103|[32|[98|[111|[114|[100|[101|[114|[61|[48|[32|[47|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
								in  let <_cor40> =
									%% Line 275
									call 'erlang':'++'
									    ([60|[105|[109|[103|[32|[111|[110|[108|[111|[97|[100|[61|[34|[115|[105|[122|[101|[95|[105|[109|[97|[103|[101|[40|[116|[104|[105|[115|[44|[32|[39]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor39)
								    in  let <_cor41> =
									    %% Line 273
									    apply 'table_line'/1
										([_cor37|%% Line 275
											 [_cor40|%% Line 278
												 []]])
									in  %% Line 272
									    call 'erlang':'++'
										(_cor42, _cor41)
						-| [{'id',{0,0,'-concurrency_content/2-fun-0-'}}] )
					  in  let <ActivityBarTable> =
						  %% Line 269
						  call 'lists':'foldl'
						      (_cor46, %% Line 279
							       [], _cor10)
					      in  let <PidsRequest> =
						      %% Line 282
						      apply 'join_strings_with'/2
							  (_cor34, [58])
						  in  let <_cor50> =
							  %% Line 289
							  apply 'image_string_head'/3
							      ([103|[114|[97|[112|[104]]]]], [{[112|[105|[100|[115]]]],PidsRequest}|[{'range_min',T0}|[{'range_max',T1}|[{'height',400}]]]], [])
						      in  let <_cor51> =
							      %% Line 289
							      call 'erlang':'++'
								  (_cor50, %% Line 290
									   [39|[41|[34|[32|[115|[114|[99|[61|[47|[105|[109|[97|[103|[101|[115|[47|[119|[104|[105|[116|[101|[46|[112|[110|[103|[32|[98|[111|[114|[100|[101|[114|[61|[48|[32|[47|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
							  in  let <_cor52> =
								  %% Line 288
								  call 'erlang':'++'
								      ([60|[105|[109|[103|[32|[111|[110|[108|[111|[97|[100|[61|[34|[115|[105|[122|[101|[95|[105|[109|[97|[103|[101|[40|[116|[104|[105|[115|[44|[32|[39]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor51)
							      in  let <_cor53> =
								      %% Line 286
								      apply 'table_line'/1
									  ([%% Line 287
									    []|%% Line 288
									       [_cor52|%% Line 291
										       []]])
								  in  let <_cor49> =
									  %% Line 292
									  call 'erlang':'++'
									      (ActivityBarTable, %% Line 293
												 [60|[47|[116|[97|[98|[108|[101|[62|[60|[47|[100|[105|[118|[62|[10]]]]]]]]]]]]]]])
								      in  let <_cor54> =
									      %% Line 291
									      call 'erlang':'++'
										  (_cor53, _cor49)
									  in  %% Line 285
									      call 'erlang':'++'
										  ([60|[100|[105|[118|[32|[105|[100|[61|[34|[99|[111|[110|[116|[101|[110|[116|[34|[62|[10|[32|[32|[32|[32|[60|[116|[97|[98|[108|[101|[32|[99|[101|[108|[108|[115|[112|[97|[99|[105|[110|[103|[61|[48|[32|[99|[101|[108|[108|[112|[97|[100|[100|[105|[110|[103|[61|[48|[32|[98|[111|[114|[100|[101|[114|[61|[48|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor54)
				  ( <_cor28> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor28})
				    -| ['compiler_generated'] )
				end
'processes_content'/0 =
    %% Line 295
    fun () ->
	let <Ports> =
	    %% Line 296
	    call 'percept_db':'select'
		({'information','ports'})
	in  let <UnsortedProcesses> =
		%% Line 297
		call 'percept_db':'select'
		    ({'information','procs'})
	    in  let <SystemStartTS> =
		    %% Line 298
		    call 'percept_db':'select'
			({'system','start_ts'})
		in  let <SystemStopTS> =
			%% Line 299
			call 'percept_db':'select'
			    ({'system','stop_ts'})
		    in  let <_cor4> =
			    %% Line 300
			    call 'timer':'now_diff'
				(SystemStopTS, %% Line 301
					       SystemStartTS)
			in  let <ProfileTime> =
				%% Line 301
				call 'erlang':'/'
				    (_cor4, 1000000)
			    in  let <_cor23> =
				    %% Line 303
				    ( fun (_cor20,_cor19) ->
					  %% Line 304
					  case <> of
					    %% Line 305
					    <>
						when ( try
							( case <> of
							    ( <>
								  when ( call ( 'erlang'
									     -| ['compiler_generated'] ):( 'is_record'
													   -| ['compiler_generated'] )
									  (_cor19,
									   ( 'information'
									     -| ['compiler_generated'] ),
									   ( 8
									     -| ['compiler_generated'] ))
								      -| ['compiler_generated'] ) ->
								  ( case <> of
								      ( <>
									    when ( call ( 'erlang'
										       -| ['compiler_generated'] ):( 'is_record'
														     -| ['compiler_generated'] )
										    (_cor20,
										     ( 'information'
										       -| ['compiler_generated'] ),
										     ( 8
										       -| ['compiler_generated'] ))
										-| ['compiler_generated'] ) ->
									    let <_cor17> =
										( call 'erlang':'element'
										      (2, _cor20)
										  -| ['compiler_generated'] )
									    in  let <_cor16> =
										    ( call 'erlang':'element'
											  (2, _cor19)
										      -| ['compiler_generated'] )
										in  ( call 'erlang':'>'
											  (_cor17, _cor16)
										      -| ['compiler_generated'] )
									-| ['compiler_generated'] )
								      ( <> when 'true' ->
									    'false'
									-| ['compiler_generated'] )
								    end
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							    ( <> when 'true' ->
								  ( case <> of
								      ( <>
									    when ( call ( 'erlang'
										       -| ['compiler_generated'] ):( 'is_record'
														     -| ['compiler_generated'] )
										    (_cor20,
										     ( 'information'
										       -| ['compiler_generated'] ),
										     ( 8
										       -| ['compiler_generated'] ))
										-| ['compiler_generated'] ) ->
									    'false'
									-| ['compiler_generated'] )
								      ( <> when 'true' ->
									    'false'
									-| ['compiler_generated'] )
								    end
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
						    of <Try> ->
							Try
						    catch <T,R> ->
							'false'
						    -| ['compiler_generated'] ) ->
						'true'
					    %% Line 306
					    <> when 'true' ->
						'false'
					  end
				      -| [{'id',{0,0,'-processes_content/0-fun-0-'}}] )
				in  let <Processes> =
					%% Line 302
					call 'lists':'sort'
					    (_cor23, %% Line 308
						     UnsortedProcesses)
				    in  let <_cor56> =
					    %% Line 311
					    ( fun (_cor53,_cor52) ->
						  %% Line 312
						  ( case _cor53 of
						      ( <( {'information',_cor109,_cor110,_cor111,_rec10,_cor112,_cor113,_cor114}
							   -| ['compiler_generated'] )> when 'true' ->
							    let <StartTime> =
								apply 'procstarttime'/1
								    (_rec10)
							    in  let <EndTime> =
								    %% Line 313
								    apply 'procstoptime'/1
									(_cor112)
								in  let <_cor33> =
									%% Line 316
									apply 'pid2value'/1
									    (_cor109)
								    in  let <_cor34> =
									    %% Line 316
									    call 'erlang':'++'
										(_cor33, [62])
									in  let <_cor35> =
										%% Line 316
										call 'erlang':'++'
										    ([60|[105|[110|[112|[117|[116|[32|[116|[121|[112|[101|[61|[99|[104|[101|[99|[107|[98|[111|[120|[32|[110|[97|[109|[101|[61]]]]]]]]]]]]]]]]]]]]]]]]]], _cor34)
									    in  let <_cor38> =
										    %% Line 317
										    apply 'pid2html'/1
											(_cor109)
										in  let <_cor39> =
											%% Line 321
											call 'erlang':'float'
											    (EndTime)
										    in  let <_cor40> =
											    %% Line 321
											    apply 'term2html'/1
												(_cor39)
											in  let <_cor41> =
												%% Line 318
												apply 'image_string'/2
												    ('proc_lifetime', [%% Line 319
														       {'profiletime',ProfileTime}|%% Line 320
																		   [{'start',StartTime}|%% Line 321
																					[{[101|[110|[100]]],_cor40}|%% Line 322
																								    [{'width',100}|[{'height',10}]]]]])
											    in  let <_cor44> =
												    %% Line 324
												    apply 'mfa2html'/1
													(_cor111)
												in  let <_cor47> =
													%% Line 325
													apply 'term2html'/1
													    (_cor110)
												    in  let <_cor50> =
													    %% Line 326
													    apply 'pid2html'/1
														(_cor113)
													in  let <Prepare> =
														%% Line 315
														apply 'table_line'/1
														    ([_cor35|%% Line 317
															     [_cor38|%% Line 318
																     [_cor41|%% Line 324
																	     [_cor44|%% Line 325
																		     [_cor47|%% Line 326
																			     [_cor50|%% Line 327
																				     []]]]]]])
													    in  %% Line 328
														[Prepare|_cor52]
							-| ['compiler_generated'] )
						      ( <_cor115> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','information'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
						    -| ['compiler_generated'] )
					      -| [{'id',{0,0,'-processes_content/0-fun-1-'}}] )
					in  let <ProcsHtml> =
						%% Line 310
						call 'lists':'foldl'
						    (_cor56, %% Line 329
							     [], %% Line 329
								 Processes)
					    in  let <_cor84> =
						    %% Line 332
						    ( fun (_cor81,_cor80) ->
							  %% Line 333
							  ( case _cor81 of
							      ( <( {'information',_cor158,_cor159,_cor160,_rec17,_cor161,_cor162,_cor163}
								   -| ['compiler_generated'] )> when 'true' ->
								    let <StartTime> =
									apply 'procstarttime'/1
									    (_rec17)
								    in  let <EndTime> =
									    %% Line 334
									    apply 'procstoptime'/1
										(_cor161)
									in  let <_cor66> =
										%% Line 338
										apply 'pid2html'/1
										    (_cor158)
									    in  let <_cor67> =
										    %% Line 342
										    call 'erlang':'float'
											(EndTime)
										in  let <_cor68> =
											%% Line 342
											apply 'term2html'/1
											    (_cor67)
										    in  let <_cor69> =
											    %% Line 339
											    apply 'image_string'/2
												('proc_lifetime', [%% Line 340
														   {'profiletime',ProfileTime}|%% Line 341
																	       [{'start',StartTime}|%% Line 342
																				    [{[101|[110|[100]]],_cor68}|%% Line 343
																								[{'width',100}|[{'height',10}]]]]])
											in  let <_cor72> =
												%% Line 345
												apply 'mfa2html'/1
												    (_cor160)
											    in  let <_cor75> =
												    %% Line 346
												    apply 'term2html'/1
													(_cor159)
												in  let <_cor78> =
													%% Line 347
													apply 'pid2html'/1
													    (_cor162)
												    in  let <Prepare> =
													    %% Line 336
													    apply 'table_line'/1
														([%% Line 337
														  []|%% Line 338
														     [_cor66|%% Line 339
															     [_cor69|%% Line 345
																     [_cor72|%% Line 346
																	     [_cor75|%% Line 347
																		     [_cor78|%% Line 348
																			     []]]]]]])
													in  %% Line 349
													    [Prepare|_cor80]
								-| ['compiler_generated'] )
							      ( <_cor164> when 'true' ->
								    ( call ( 'erlang'
									     -| ['compiler_generated'] ):( 'error'
													   -| ['compiler_generated'] )
									  (( {'badrecord','information'}
									     -| ['compiler_generated'] ))
								      -| ['compiler_generated'] )
								-| ['compiler_generated'] )
							    end
							    -| ['compiler_generated'] )
						      -| [{'id',{0,0,'-processes_content/0-fun-2-'}}] )
						in  let <PortsHtml> =
							%% Line 331
							call 'lists':'foldl'
							    (_cor84, %% Line 350
								     [], %% Line 350
									 Ports)
						    in  let <_cor88> =
							    %% Line 353
							    apply 'table_line'/1
								([[60|[105|[110|[112|[117|[116|[32|[111|[110|[67|[108|[105|[99|[107|[61|[39|[115|[101|[108|[101|[99|[116|[97|[108|[108|[40|[41|[39|[32|[116|[121|[112|[101|[61|[99|[104|[101|[99|[107|[98|[111|[120|[32|[110|[97|[109|[101|[61|[115|[101|[108|[101|[99|[116|[95|[97|[108|[108|[62|[83|[101|[108|[101|[99|[116|[32|[97|[108|[108]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
							in  let <_cor86> =
								%% Line 355
								apply 'table_line'/1
								    ([[60|[105|[110|[112|[117|[116|[32|[116|[121|[112|[101|[61|[115|[117|[98|[109|[105|[116|[32|[118|[97|[108|[117|[101|[61|[67|[111|[109|[112|[97|[114|[101|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
							    in  let <_cor87> =
								    %% Line 356
								    call 'erlang':'++'
									(_cor86, %% Line 357
										 [60|[47|[116|[97|[98|[108|[101|[62]]]]]]]])
								in  let <_cor89> =
									%% Line 354
									call 'erlang':'++'
									    (_cor88, _cor87)
								    in  let <Selector> =
									    %% Line 352
									    call 'erlang':'++'
										([60|[116|[97|[98|[108|[101|[62]]]]]]], _cor89)
									in  let <_cor201,ProcsHtmlResult> =
										%% Line 359
										case <> of
										  %% Line 360
										  <>
										      when try
											    let <_cor91> =
												call 'erlang':'length'
												    (ProcsHtml)
											    in  call 'erlang':'>'
												    (_cor91, 0)
											of <Try> ->
											    Try
											catch <T,R> ->
											    'false' ->
										      let <_cor92> =
											  %% Line 373
											  call 'lists':'flatten'
											      (ProcsHtml)
										      in  let <_cor93> =
											      %% Line 373
											      call 'erlang':'++'
												  (_cor92, %% Line 374
													   [60|[47|[116|[97|[98|[108|[101|[62|[10|[9|[32|[32|[32|[32|[60|[47|[116|[100|[62|[60|[47|[116|[114|[62]]]]]]]]]]]]]]]]]]]]]]]])
											  in  let <ProcsHtmlResult> =
												  %% Line 372
												  call 'erlang':'++'
												      ([60|[116|[114|[62|[60|[116|[100|[62|[60|[98|[62|[80|[114|[111|[99|[101|[115|[115|[101|[115|[60|[47|[98|[62|[60|[47|[116|[100|[62|[60|[47|[116|[114|[62|[10|[9|[32|[32|[32|[32|[60|[116|[114|[62|[60|[116|[100|[62|[10|[32|[9|[32|[32|[32|[60|[116|[97|[98|[108|[101|[32|[119|[105|[100|[116|[104|[61|[55|[48|[48|[32|[99|[101|[108|[108|[115|[112|[97|[99|[105|[110|[103|[61|[48|[32|[98|[111|[114|[100|[101|[114|[61|[48|[62|[10|[9|[9|[60|[116|[114|[62|[10|[9|[9|[60|[116|[100|[32|[97|[108|[105|[103|[110|[61|[109|[105|[100|[100|[108|[101|[32|[119|[105|[100|[116|[104|[61|[52|[48|[62|[60|[98|[62|[83|[101|[108|[101|[99|[116|[60|[47|[98|[62|[60|[47|[116|[100|[62|[10|[9|[9|[60|[116|[100|[32|[97|[108|[105|[103|[110|[61|[109|[105|[100|[100|[108|[101|[32|[119|[105|[100|[116|[104|[61|[52|[48|[62|[60|[98|[62|[80|[105|[100|[60|[47|[98|[62|[60|[47|[116|[100|[62|[10|[9|[9|[60|[116|[100|[62|[60|[98|[62|[76|[105|[102|[101|[116|[105|[109|[101|[60|[47|[98|[62|[60|[47|[116|[100|[62|[10|[9|[9|[60|[116|[100|[62|[60|[98|[62|[69|[110|[116|[114|[121|[112|[111|[105|[110|[116|[60|[47|[98|[62|[60|[47|[116|[100|[62|[10|[9|[9|[60|[116|[100|[62|[60|[98|[62|[78|[97|[109|[101|[60|[47|[98|[62|[60|[47|[116|[100|[62|[10|[9|[9|[60|[116|[100|[62|[60|[98|[62|[80|[97|[114|[101|[110|[116|[60|[47|[98|[62|[60|[47|[116|[100|[62|[10|[9|[9|[60|[47|[116|[114|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor93)
											      in  <ProcsHtmlResult,ProcsHtmlResult>
										  %% Line 376
										  <> when 'true' ->
										      <%% Line 377
										       [],%% Line 377
											  []>
										end
									    in  let <_cor200,PortsHtmlResult> =
										    %% Line 379
										    case <> of
										      %% Line 380
										      <>
											  when try
												let <_cor96> =
												    call 'erlang':'length'
													(PortsHtml)
												in  call 'erlang':'>'
													(_cor96, 0)
											    of <Try> ->
												Try
											    catch <T,R> ->
												'false' ->
											  let <_cor97> =
											      %% Line 393
											      call 'lists':'flatten'
												  (PortsHtml)
											  in  let <_cor98> =
												  %% Line 393
												  call 'erlang':'++'
												      (_cor97, %% Line 394
													       [60|[47|[116|[97|[98|[108|[101|[62|[10|[9|[32|[32|[32|[32|[60|[47|[116|[100|[62|[60|[47|[116|[114|[62]]]]]]]]]]]]]]]]]]]]]]]])
											      in  let <PortsHtmlResult> =
												      %% Line 392
												      call 'erlang':'++'
													  ([32|[10|[9|[32|[32|[32|[32|[60|[116|[114|[62|[60|[116|[100|[62|[60|[98|[62|[80|[111|[114|[116|[115|[60|[47|[98|[62|[60|[47|[116|[100|[62|[60|[47|[116|[114|[62|[10|[9|[32|[32|[32|[32|[60|[116|[114|[62|[60|[116|[100|[62|[10|[9|[32|[32|[32|[32|[9|[60|[116|[97|[98|[108|[101|[32|[119|[105|[100|[116|[104|[61|[55|[48|[48|[32|[99|[101|[108|[108|[115|[112|[97|[99|[105|[110|[103|[61|[48|[32|[98|[111|[114|[100|[101|[114|[61|[48|[62|[10|[9|[9|[60|[116|[114|[62|[10|[9|[9|[60|[116|[100|[32|[97|[108|[105|[103|[110|[61|[109|[105|[100|[100|[108|[101|[32|[119|[105|[100|[116|[104|[61|[52|[48|[62|[60|[98|[62|[83|[101|[108|[101|[99|[116|[60|[47|[98|[62|[60|[47|[116|[100|[62|[10|[9|[9|[60|[116|[100|[32|[97|[108|[105|[103|[110|[61|[108|[101|[102|[116|[32|[119|[105|[100|[116|[104|[61|[52|[48|[62|[60|[98|[62|[80|[105|[100|[60|[47|[98|[62|[60|[47|[116|[100|[62|[10|[9|[9|[60|[116|[100|[62|[60|[98|[62|[76|[105|[102|[101|[116|[105|[109|[101|[60|[47|[98|[62|[60|[47|[116|[100|[62|[10|[9|[9|[60|[116|[100|[62|[60|[98|[62|[69|[110|[116|[114|[121|[112|[111|[105|[110|[116|[60|[47|[98|[62|[60|[47|[116|[100|[62|[10|[9|[9|[60|[116|[100|[62|[60|[98|[62|[78|[97|[109|[101|[60|[47|[98|[62|[60|[47|[116|[100|[62|[10|[9|[9|[60|[116|[100|[62|[60|[98|[62|[80|[97|[114|[101|[110|[116|[60|[47|[98|[62|[60|[47|[116|[100|[62|[10|[9|[9|[60|[47|[116|[114|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor98)
												  in  <PortsHtmlResult,PortsHtmlResult>
										      %% Line 396
										      <> when 'true' ->
											  <%% Line 397
											   [],%% Line 397
											      []>
										    end
										in  let <_cor101> =
											%% Line 401
											call 'erlang':'++'
											    (Selector, %% Line 402
												       [60|[47|[100|[105|[118|[62|[10]]]]]]])
										    in  let <Right> =
											    %% Line 401
											    call 'erlang':'++'
												([60|[100|[105|[118|[62]]]]], _cor101)
											in  let <_cor103> =
												%% Line 409
												call 'erlang':'++'
												    (Right, %% Line 410
													    [60|[47|[100|[105|[118|[62|[10]]]]]]])
											    in  let <_cor104> =
												    %% Line 408
												    call 'erlang':'++'
													([60|[47|[116|[97|[98|[108|[101|[62]]]]]]]], _cor103)
												in  let <_cor105> =
													%% Line 407
													call 'erlang':'++'
													    (PortsHtmlResult, _cor104)
												    in  let <_cor106> =
													    %% Line 406
													    call 'erlang':'++'
														(ProcsHtmlResult, _cor105)
													in  let <Middle> =
														%% Line 405
														call 'erlang':'++'
														    ([60|[100|[105|[118|[32|[105|[100|[61|[34|[99|[111|[110|[116|[101|[110|[116|[34|[62|[10|[32|[32|[32|[32|[60|[116|[97|[98|[108|[101|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor106)
													    in  let <_cor108> =
														    %% Line 413
														    call 'erlang':'++'
															(Middle, %% Line 414
																 [60|[47|[102|[111|[114|[109|[62]]]]]]])
														in  %% Line 412
														    call 'erlang':'++'
															([60|[102|[111|[114|[109|[32|[110|[97|[109|[101|[61|[112|[114|[111|[99|[101|[115|[115|[95|[115|[101|[108|[101|[99|[116|[32|[109|[101|[116|[104|[111|[100|[61|[80|[79|[83|[84|[32|[97|[99|[116|[105|[111|[110|[61|[47|[99|[103|[105|[45|[98|[105|[110|[47|[112|[101|[114|[99|[101|[112|[116|[95|[104|[116|[109|[108|[47|[99|[111|[110|[99|[117|[114|[114|[101|[110|[99|[121|[95|[112|[97|[103|[101|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor108)
'procstarttime'/1 =
    %% Line 416
    fun (_cor0) ->
	%% Line 417
	case _cor0 of
	  %% Line 418
	  <'undefined'> when 'true' ->
	      0.00000000000000000000e+00
	  %% Line 419
	  <_cor5> when 'true' ->
	      let <_cor1> =
		  call 'percept_db':'select'
		      ({'system','start_ts'})
	      in  let <_cor2> =
		      call 'timer':'now_diff'
			  (_cor0, _cor1)
		  in  call 'erlang':'/'
			  (_cor2, 1000000)
	end
'procstoptime'/1 =
    %% Line 422
    fun (_cor0) ->
	%% Line 423
	case _cor0 of
	  %% Line 424
	  <'undefined'> when 'true' ->
	      let <_cor2> =
		  call 'percept_db':'select'
		      ({'system','stop_ts'})
	      in  let <_cor1> =
		      %% Line 425
		      call 'percept_db':'select'
			  ({'system','start_ts'})
		  in  let <_cor3> =
			  call 'timer':'now_diff'
			      (_cor2, _cor1)
		      in  %% Line 425
			  call 'erlang':'/'
			      (_cor3, 1000000)
	  %% Line 426
	  <_cor8> when 'true' ->
	      let <_cor4> =
		  call 'percept_db':'select'
		      ({'system','start_ts'})
	      in  let <_cor5> =
		      call 'timer':'now_diff'
			  (_cor0, _cor4)
		  in  call 'erlang':'/'
			  (_cor5, 1000000)
	end
'databases_content'/0 =
    %% Line 429
    fun () ->
	%% Line 430
	[60|[100|[105|[118|[32|[105|[100|[61|[34|[99|[111|[110|[116|[101|[110|[116|[34|[62|[10|[9|[60|[102|[111|[114|[109|[32|[110|[97|[109|[101|[61|[108|[111|[97|[100|[95|[112|[101|[114|[99|[101|[112|[116|[95|[102|[105|[108|[101|[32|[109|[101|[116|[104|[111|[100|[61|[112|[111|[115|[116|[32|[97|[99|[116|[105|[111|[110|[61|[47|[99|[103|[105|[45|[98|[105|[110|[47|[112|[101|[114|[99|[101|[112|[116|[95|[104|[116|[109|[108|[47|[108|[111|[97|[100|[95|[100|[97|[116|[97|[98|[97|[115|[101|[95|[112|[97|[103|[101|[62|[10|[9|[60|[99|[101|[110|[116|[101|[114|[62|[10|[9|[60|[116|[97|[98|[108|[101|[62|[10|[9|[32|[32|[32|[32|[60|[116|[114|[62|[60|[116|[100|[62|[69|[110|[116|[101|[114|[32|[102|[105|[108|[101|[32|[116|[111|[32|[97|[110|[97|[108|[121|[115|[101|[58|[60|[47|[116|[100|[62|[60|[116|[100|[62|[60|[105|[110|[112|[117|[116|[32|[116|[121|[112|[101|[61|[104|[105|[100|[100|[101|[110|[32|[110|[97|[109|[101|[61|[112|[97|[116|[104|[32|[47|[62|[60|[47|[116|[100|[62|[60|[47|[116|[114|[62|[10|[9|[32|[32|[32|[32|[60|[116|[114|[62|[60|[116|[100|[62|[60|[105|[110|[112|[117|[116|[32|[116|[121|[112|[101|[61|[102|[105|[108|[101|[32|[110|[97|[109|[101|[61|[102|[105|[108|[101|[32|[115|[105|[122|[101|[61|[52|[48|[32|[47|[62|[60|[47|[116|[100|[62|[60|[116|[100|[62|[60|[105|[110|[112|[117|[116|[32|[116|[121|[112|[101|[61|[115|[117|[98|[109|[105|[116|[32|[118|[97|[108|[117|[101|[61|[76|[111|[97|[100|[32|[111|[110|[67|[108|[105|[99|[107|[61|[34|[112|[97|[116|[104|[46|[118|[97|[108|[117|[101|[32|[61|[32|[102|[105|[108|[101|[46|[118|[97|[108|[117|[101|[59|[34|[32|[47|[62|[60|[47|[116|[100|[62|[60|[47|[116|[114|[62|[10|[9|[60|[47|[116|[97|[98|[108|[101|[62|[10|[9|[60|[47|[99|[101|[110|[116|[101|[114|[62|[10|[9|[60|[47|[102|[111|[114|[109|[62|[10|[9|[60|[47|[100|[105|[118|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
'load_database_content'/3 =
    %% Line 441
    fun (_cor2,_cor1,_cor0) ->
	let <Query> =
	    %% Line 442
	    call 'httpd':'parse_query'
		(_cor0)
	in  %% Line 443
	    case call 'lists':'keysearch'
		     ([102|[105|[108|[101]]]], 1, Query) of
	      <{_cor21,{_cor22,Path}}> when 'true' ->
		  %% Line 444
		  case call 'lists':'keysearch'
			   ([112|[97|[116|[104]]]], 1, Query) of
		    <{_cor23,{_cor24,File}}> when 'true' ->
			let <Filename> =
			    %% Line 445
			    call 'filename':'join'
				(Path, File)
			in  do  %% Line 448
				call 'mod_esi':'deliver'
				    (_cor2, [60|[100|[105|[118|[32|[105|[100|[61|[34|[99|[111|[110|[116|[101|[110|[116|[34|[62]]]]]]]]]]]]]]]]]])
				do  %% Line 449
				    case call 'file':'read_file_info'
					     (Filename) of
				      %% Line 450
				      <{'ok',_cor25}> when 'true' ->
					  let <_cor7> =
					      %% Line 452
					      call 'erlang':'++'
						  (Filename, [60|[98|[114|[62|[10|[32|[32|[32|[32|[9|[32|[32|[32|[32|[60|[47|[99|[101|[110|[116|[101|[114|[62]]]]]]]]]]]]]]]]]]]]]]])
					  in  let <Content> =
						  %% Line 452
						  call 'erlang':'++'
						      ([60|[99|[101|[110|[116|[101|[114|[62|[10|[32|[32|[32|[32|[9|[32|[32|[32|[32|[80|[97|[114|[115|[105|[110|[103|[58|[32]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor7)
					      in  do  %% Line 454
						      call 'mod_esi':'deliver'
							  (_cor2, Content)
						      %% Line 455
						      case call 'percept':'analyze'
							       (Filename) of
							%% Line 456
							<{'error',Reason}> when 'true' ->
							    let <_cor9> =
								%% Line 457
								apply 'term2html'/1
								    (Reason)
							    in  let <_cor10> =
								    %% Line 457
								    call 'erlang':'++'
									([65|[110|[97|[108|[121|[122|[101]]]]]]], _cor9)
								in  let <_cor11> =
									%% Line 457
									apply 'error_msg'/1
									    (_cor10)
								    in  %% Line 457
									call 'mod_esi':'deliver'
									    (_cor2, _cor11)
							%% Line 458
							<_cor26> when 'true' ->
							    %% Line 460
							    call 'mod_esi':'deliver'
								(_cor2, [60|[99|[101|[110|[116|[101|[114|[62|[60|[97|[32|[104|[114|[101|[102|[61|[34|[47|[99|[103|[105|[45|[98|[105|[110|[47|[112|[101|[114|[99|[101|[112|[116|[95|[104|[116|[109|[108|[47|[112|[97|[103|[101|[34|[62|[86|[105|[101|[119|[60|[47|[97|[62|[60|[47|[99|[101|[110|[116|[101|[114|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
						      end
				      %% Line 462
				      <{'error',Reason}> when 'true' ->
					  let <_cor14> =
					      %% Line 463
					      apply 'term2html'/1
						  (Reason)
					  in  let <_cor15> =
						  %% Line 463
						  [70|[105|[108|[101|_cor14]]]]
					      in  let <_cor16> =
						      %% Line 463
						      apply 'error_msg'/1
							  (_cor15)
						  in  %% Line 463
						      call 'mod_esi':'deliver'
							  (_cor2, _cor16)
				      ( <_cor17> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor17})
					-| ['compiler_generated'] )
				    end
				    %% Line 465
				    call 'mod_esi':'deliver'
					(_cor2, [60|[47|[100|[105|[118|[62]]]]]])
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		      -| ['compiler_generated'] )
		  end
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor4})
		-| ['compiler_generated'] )
	    end
'codelocation_content'/2 =
    %% Line 467
    fun (_cor1,_cor0) ->
	let <Query> =
	    %% Line 468
	    call 'httpd':'parse_query'
		(_cor0)
	in  let <Min> =
		%% Line 469
		apply 'get_option_value'/2
		    ([114|[97|[110|[103|[101|[95|[109|[105|[110]]]]]]]]], Query)
	    in  let <Max> =
		    %% Line 470
		    apply 'get_option_value'/2
			([114|[97|[110|[103|[101|[95|[109|[97|[120]]]]]]]]], Query)
		in  let <StartTs> =
			%% Line 471
			call 'percept_db':'select'
			    ({'system','start_ts'})
		    in  let <TsMin> =
			    %% Line 472
			    call 'percept_analyzer':'seconds2ts'
				(Min, StartTs)
			in  let <TsMax> =
				%% Line 473
				call 'percept_analyzer':'seconds2ts'
				    (Max, StartTs)
			    in  let <Acts> =
				    %% Line 474
				    call 'percept_db':'select'
					({'activity',[{'ts_min',TsMin}|[{'ts_max',TsMax}|[]]]})
				in  let <_cor17> =
					%% Line 476
					( letrec
					      'lc$^0'/1 =
						  fun (_cor11) ->
						      case _cor11 of
							<[A|_cor10]> when 'true' ->
							    ( case A of
								( <( {'activity',_rec23,_cor49,_cor50,_cor51,_cor52}
								     -| ['compiler_generated'] )> when 'true' ->
								      let <_cor14> =
									  call 'timer':'now_diff'
									      (_rec23, StartTs)
								      in  let <_cor15> =
									      call 'erlang':'/'
										  (_cor14, 1000)
									  in  let <_cor16> =
										  apply 'lc$^0'/1
										      (_cor10)
									      in  ( [_cor15|_cor16]
										    -| ['compiler_generated'] )
								  -| ['compiler_generated'] )
								( <_cor53> when 'true' ->
								      ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'error'
													     -| ['compiler_generated'] )
									    (( {'badrecord','activity'}
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
							      end
							      -| ['compiler_generated'] )
							<[]> when 'true' ->
							    []
							( <_cor11> when 'true' ->
							      ( primop 'match_fail'
								    ({'function_clause',_cor11})
								-| [{'function_name',{'lc$^0',1}}] )
							  -| ['compiler_generated'] )
						      end
					  in  apply 'lc$^0'/1
						  (Acts)
					  -| ['list_comprehension'] )
				    in  let <Delta> =
					    %% Line 477
					    apply 'cl_deltas'/1
						(_cor17)
					in  let <Zip> =
						%% Line 478
						call 'lists':'zip'
						    (Acts, Delta)
					    in  let <_cor43> =
						    %% Line 485
						    ( letrec
							  'lc$^1'/1 =
							      fun (_cor23) ->
								  case _cor23 of
								    <[%% Line 491
								      {A,D}|_cor22]> when 'true' ->
									let <_cor24> =
									    %% Line 486
									    apply 'term2html'/1
										(D)
									in  %% Line 487
									    ( case A of
										( <( {'activity',_rec24,_cor54,_cor55,_cor56,_cor57}
										     -| ['compiler_generated'] )> when 'true' ->
										      let <_cor27> =
											  call 'timer':'now_diff'
											      (_rec24, StartTs)
										      in  let <_cor28> =
											      call 'erlang':'/'
												  (_cor27, 1000)
											  in  let <_cor29> =
												  apply 'term2html'/1
												      (_cor28)
											      in  let <_cor32> =
												      %% Line 488
												      apply 'pid2html'/1
													  (_cor54)
												  in  let <_cor35> =
													  %% Line 489
													  apply 'term2html'/1
													      (_cor55)
												      in  let <_cor38> =
													      %% Line 490
													      apply 'mfa2html'/1
														  (_cor56)
													  in  let <_cor41> =
														  %% Line 491
														  apply 'term2html'/1
														      (_cor57)
													      in  let <_cor42> =
														      %% Line 491
														      apply 'lc$^1'/1
															  (_cor22)
														  in  ( [[{'td',_cor24}|[{'td',_cor29}|%% Line 488
																		       [{'td',_cor32}|%% Line 489
																				      [{'td',_cor35}|%% Line 490
																						     [{'td',_cor38}|%% Line 491
																								    [{'td',_cor41}|[]]]]]]]|_cor42]
															-| ['compiler_generated'] )
										  -| ['compiler_generated'] )
										( <_cor58> when 'true' ->
										      ( call ( 'erlang'
											       -| ['compiler_generated'] ):( 'error'
															     -| ['compiler_generated'] )
											    (( {'badrecord','activity'}
											       -| ['compiler_generated'] ))
											-| ['compiler_generated'] )
										  -| ['compiler_generated'] )
									      end
									      -| ['compiler_generated'] )
								    ( <[_cor21|_cor22]> when 'true' ->
									  %% Line 491
									  apply 'lc$^1'/1
									      (_cor22)
								      -| ['compiler_generated'] )
								    <[]> when 'true' ->
									[]
								    ( <_cor23> when 'true' ->
									  ( primop 'match_fail'
										({'function_clause',_cor23})
									    -| [{'function_name',{'lc$^1',1}}] )
								      -| ['compiler_generated'] )
								  end
						      in  apply 'lc$^1'/1
							      (%% Line 491
							       Zip)
						      -| ['list_comprehension'] )
						in  let <_cor44> =
							%% Line 485
							[[{'th',[100|[101|[108|[116|[97|[32|[91|[109|[115|[93]]]]]]]]]]}|[{'th',[116|[105|[109|[101|[32|[91|[109|[115|[93]]]]]]]]]}|[{'th',[32|[112|[105|[100|[32]]]]]}|[{'th',[97|[99|[116|[105|[118|[105|[116|[121]]]]]]]]}|[{'th',[109|[111|[100|[117|[108|[101|[58|[102|[117|[110|[99|[116|[105|[111|[110|[47|[97|[114|[105|[116|[121]]]]]]]]]]]]]]]]]]]]]}|[{'th',[35|[114|[117|[110|[110|[97|[98|[108|[101|[115]]]]]]]]]]}]]]]]]|_cor43]
						    in  let <Table> =
							    %% Line 479
							    apply 'html_table'/1
								(_cor44)
							in  let <_cor46> =
								%% Line 494
								call 'erlang':'++'
								    (Table, %% Line 495
									    [60|[47|[100|[105|[118|[62]]]]]])
							    in  %% Line 493
								call 'erlang':'++'
								    ([60|[100|[105|[118|[32|[105|[100|[61|[34|[99|[111|[110|[116|[101|[110|[116|[34|[62]]]]]]]]]]]]]]]]]], _cor46)
'cl_deltas'/1 =
    %% Line 497
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      []
	  %% Line 498
	  <List> when 'true' ->
	      apply 'cl_deltas'/2
		  (List, [0.00000000000000000000e+00])
	end
'cl_deltas'/2 =
    %% Line 499
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[_cor5|[]],Out> when 'true' ->
	      call 'lists':'reverse'
		  (Out)
	  %% Line 500
	  <[A|[B|Ls]],Out> when 'true' ->
	      let <_cor2> =
		  call 'erlang':'-'
		      (B, A)
	      in  apply 'cl_deltas'/2
		      ([B|Ls], [_cor2|Out])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'cl_deltas',2}}] )
	    -| ['compiler_generated'] )
	end
'join_strings'/1 =
    %% Line 508
    fun (_cor0) ->
	%% Line 509
	call 'lists':'flatten'
	    (_cor0)
'join_strings_with'/2 =
    %% Line 513
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[S1|[S2|R]],S> when 'true' ->
	      let <_cor2> =
		  %% Line 514
		  apply 'join_strings_with'/3
		      (S1, S2, S)
	      in  %% Line 514
		  apply 'join_strings_with'/2
		      ([_cor2|R], S)
	  %% Line 515
	  <[S|[]],_cor5> when 'true' ->
	      %% Line 516
	      S
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'join_strings_with',2}}] )
	    -| ['compiler_generated'] )
	end
'join_strings_with'/3 =
    %% Line 517
    fun (_cor2,_cor1,_cor0) ->
	%% Line 518
	apply 'join_strings'/1
	    ([_cor2|[_cor0|[_cor1|[]]]])
'html_table'/1 =
    %% Line 524
    fun (_cor0) ->
	let <_cor1> =
	    apply 'html_table_row'/1
		(_cor0)
	in  let <_cor2> =
		call 'erlang':'++'
		    (_cor1, [60|[47|[116|[97|[98|[108|[101|[62]]]]]]]])
	    in  call 'erlang':'++'
		    ([60|[116|[97|[98|[108|[101|[62]]]]]]], _cor2)
'html_table_row'/1 =
    %% Line 526
    fun (_cor0) ->
	apply 'html_table_row'/2
	    (_cor0, 'odd')
'html_table_row'/2 =
    %% Line 527
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],_cor12> when 'true' ->
	      []
	  %% Line 528
	  <[Row|Rows],'odd'> when 'true' ->
	      let <_cor4> =
		  apply 'html_table_data'/1
		      (Row)
	      in  let <_cor2> =
		      apply 'html_table_row'/2
			  (Rows, 'even')
		  in  let <_cor3> =
			  call 'erlang':'++'
			      ([60|[47|[116|[114|[62]]]]], _cor2)
		      in  let <_cor5> =
			      call 'erlang':'++'
				  (_cor4, _cor3)
			  in  call 'erlang':'++'
				  ([60|[116|[114|[32|[99|[108|[97|[115|[115|[61|[34|[111|[100|[100|[34|[62]]]]]]]]]]]]]]]], _cor5)
	  %% Line 529
	  <[Row|Rows],'even'> when 'true' ->
	      let <_cor8> =
		  apply 'html_table_data'/1
		      (Row)
	      in  let <_cor6> =
		      apply 'html_table_row'/2
			  (Rows, 'odd')
		  in  let <_cor7> =
			  call 'erlang':'++'
			      ([60|[47|[116|[114|[62]]]]], _cor6)
		      in  let <_cor9> =
			      call 'erlang':'++'
				  (_cor8, _cor7)
			  in  call 'erlang':'++'
				  ([60|[116|[114|[32|[99|[108|[97|[115|[115|[61|[34|[101|[118|[101|[110|[34|[62]]]]]]]]]]]]]]]]], _cor9)
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'html_table_row',2}}] )
	    -| ['compiler_generated'] )
	end
'html_table_data'/1 =
    %% Line 531
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      []
	  %% Line 532
	  <[{'td',Data}|Row]> when 'true' ->
	      let <_cor1> =
		  apply 'html_table_data'/1
		      (Row)
	      in  let <_cor2> =
		      call 'erlang':'++'
			  ([60|[47|[116|[100|[62]]]]], _cor1)
		  in  let <_cor3> =
			  call 'erlang':'++'
			      (Data, _cor2)
		      in  [60|[116|[100|[62|_cor3]]]]
	  %% Line 533
	  <[{'th',Data}|Row]> when 'true' ->
	      let <_cor4> =
		  apply 'html_table_data'/1
		      (Row)
	      in  let <_cor5> =
		      call 'erlang':'++'
			  ([60|[47|[116|[104|[62]]]]], _cor4)
		  in  let <_cor6> =
			  call 'erlang':'++'
			      (Data, _cor5)
		      in  [60|[116|[104|[62|_cor6]]]]
	  %% Line 534
	  <[Data|Row]> when 'true' ->
	      let <_cor7> =
		  apply 'html_table_data'/1
		      (Row)
	      in  let <_cor8> =
		      call 'erlang':'++'
			  ([60|[47|[116|[100|[62]]]]], _cor7)
		  in  let <_cor9> =
			  call 'erlang':'++'
			      (Data, _cor8)
		      in  [60|[116|[100|[62|_cor9]]]]
	  ( <_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10})
		  -| [{'function_name',{'html_table_data',1}}] )
	    -| ['compiler_generated'] )
	end
'table_line'/1 =
    %% Line 541
    fun (_cor0) ->
	apply 'table_line'/2
	    (_cor0, [[60|[116|[114|[62]]]]])
'table_line'/2 =
    %% Line 542
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],Out> when 'true' ->
	      let <_cor2> =
		  call 'lists':'reverse'
		      ([[60|[47|[116|[114|[62|[10]]]]]]|Out])
	      in  call 'lists':'flatten'
		      (_cor2)
	  %% Line 543
	  <[Element|Elements],Out>
	      when call 'erlang':'is_list'
		    (Element) ->
	      let <_cor3> =
		  %% Line 544
		  call 'erlang':'++'
		      (Element, [60|[47|[116|[100|[62]]]]])
	      in  let <_cor4> =
		      %% Line 544
		      [60|[116|[100|[62|_cor3]]]]
		  in  %% Line 544
		      apply 'table_line'/2
			  (Elements, [_cor4|Out])
	  %% Line 545
	  <[Element|Elements],Out> when 'true' ->
	      let <_cor5> =
		  %% Line 546
		  apply 'term2html'/1
		      (Element)
	      in  let <_cor6> =
		      %% Line 546
		      call 'erlang':'++'
			  (_cor5, [60|[47|[116|[100|[62]]]]])
		  in  let <_cor7> =
			  %% Line 546
			  [60|[116|[100|[62|_cor6]]]]
		      in  %% Line 546
			  apply 'table_line'/2
			      (Elements, [_cor7|Out])
	  ( <_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8})
		  -| [{'function_name',{'table_line',2}}] )
	    -| ['compiler_generated'] )
	end
'term2html'/1 =
    %% Line 550
    fun (_cor0) ->
	case _cor0 of
	  <Term>
	      when call 'erlang':'is_float'
		    (_cor0) ->
	      let <_cor1> =
		  call 'io_lib':'format'
		      ([126|[46|[52|[102]]]], [Term|[]])
	      in  call 'lists':'flatten'
		      (_cor1)
	  %% Line 551
	  <Term> when 'true' ->
	      let <_cor2> =
		  call 'io_lib':'format'
		      ([126|[112]], [Term|[]])
	      in  call 'lists':'flatten'
		      (_cor2)
	end
'mfa2html'/1 =
    %% Line 555
    fun (_cor0) ->
	case _cor0 of
	  <{Module,Function,Arguments}>
	      when call 'erlang':'is_list'
		    (Arguments) ->
	      let <_cor1> =
		  %% Line 556
		  call 'erlang':'length'
		      (Arguments)
	      in  let <_cor2> =
		      %% Line 556
		      call 'io_lib':'format'
			  ([126|[112|[58|[126|[112|[47|[126|[112]]]]]]]], [Module|[Function|[_cor1|[]]]])
		  in  %% Line 556
		      call 'lists':'flatten'
			  (_cor2)
	  %% Line 557
	  <{Module,Function,Arity}>
	      when call 'erlang':'is_integer'
		    (Arity) ->
	      let <_cor3> =
		  %% Line 558
		  call 'io_lib':'format'
		      ([126|[112|[58|[126|[112|[47|[126|[112]]]]]]]], [Module|[Function|[Arity|[]]]])
	      in  %% Line 558
		  call 'lists':'flatten'
		      (_cor3)
	  %% Line 559
	  <_cor5> when 'true' ->
	      %% Line 560
	      [117|[110|[100|[101|[102|[105|[110|[101|[100]]]]]]]]]
	end
'pid2html'/1 =
    %% Line 564
    fun (_cor0) ->
	case _cor0 of
	  <Pid>
	      when call 'erlang':'is_pid'
		    (_cor0) ->
	      let <PidString> =
		  %% Line 565
		  apply 'term2html'/1
		      (Pid)
	      in  let <PidValue> =
		      %% Line 566
		      apply 'pid2value'/1
			  (Pid)
		  in  let <_cor3> =
			  %% Line 567
			  call 'erlang':'++'
			      (PidString, [60|[47|[97|[62]]]])
		      in  let <_cor4> =
			      %% Line 567
			      [34|[62|_cor3]]
			  in  let <_cor5> =
				  %% Line 567
				  call 'erlang':'++'
				      (PidValue, _cor4)
			      in  %% Line 567
				  call 'erlang':'++'
				      ([60|[97|[32|[104|[114|[101|[102|[61|[34|[47|[99|[103|[105|[45|[98|[105|[110|[47|[112|[101|[114|[99|[101|[112|[116|[95|[104|[116|[109|[108|[47|[112|[114|[111|[99|[101|[115|[115|[95|[105|[110|[102|[111|[95|[112|[97|[103|[101|[63|[112|[105|[100|[61]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor5)
	  %% Line 568
	  <Pid>
	      when call 'erlang':'is_port'
		    (_cor0) ->
	      %% Line 569
	      apply 'term2html'/1
		  (Pid)
	  %% Line 570
	  <_cor7> when 'true' ->
	      %% Line 571
	      [117|[110|[100|[101|[102|[105|[110|[101|[100]]]]]]]]]
	end
'image_string'/1 =
    %% Line 575
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 577
	    call 'erlang':'++'
		(_cor0, %% Line 578
			[32|[34|[62]]])
	in  %% Line 576
	    call 'erlang':'++'
		([60|[105|[109|[103|[32|[98|[111|[114|[100|[101|[114|[61|[48|[32|[115|[114|[99|[61|[34|[47|[99|[103|[105|[45|[98|[105|[110|[47|[112|[101|[114|[99|[101|[112|[116|[95|[103|[114|[97|[112|[104|[47]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor1)
'image_string'/2 =
    %% Line 582
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Request,Options>
	      when let <_cor2> =
		    call 'erlang':'is_atom'
			(Request)
		in  let <_cor3> =
			call 'erlang':'is_list'
			    (Options)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      let <_cor4> =
		  %% Line 583
		  call 'erlang':'atom_to_list'
		      (Request)
	      in  let <_cor5> =
		      %% Line 583
		      apply 'image_string_head'/3
			  (_cor4, Options, [])
		  in  %% Line 583
		      apply 'image_string'/1
			  (_cor5)
	  %% Line 584
	  <Request,Options>
	      when call 'erlang':'is_list'
		    (Options) ->
	      let <_cor6> =
		  %% Line 585
		  apply 'image_string_head'/3
		      (Request, Options, [])
	      in  %% Line 585
		  apply 'image_string'/1
		      (_cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'image_string',2}}] )
	    -| ['compiler_generated'] )
	end
'image_string_head'/3 =
    %% Line 587
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Request,[{Type,Value}|Opts],Out>
	      when let <_cor3> =
		    call 'erlang':'is_atom'
			(Type)
		in  let <_cor4> =
			call 'erlang':'is_number'
			    (Value)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      let <_cor5> =
		  %% Line 588
		  apply 'term2html'/1
		      (Type)
	      in  let <_cor6> =
		      %% Line 588
		      apply 'term2html'/1
			  (Value)
		  in  let <Opt> =
			  %% Line 588
			  apply 'join_strings'/1
			      ([[63]|[_cor5|[[61]|[_cor6|[]]]]])
		      in  %% Line 589
			  apply 'image_string_tail'/3
			      (Request, Opts, [Opt|Out])
	  %% Line 590
	  <Request,[{Type,Value}|Opts],Out> when 'true' ->
	      let <Opt> =
		  %% Line 591
		  apply 'join_strings'/1
		      ([[63]|[Type|[[61]|[Value|[]]]]])
	      in  %% Line 592
		  apply 'image_string_tail'/3
		      (Request, Opts, [Opt|Out])
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'image_string_head',3}}] )
	    -| ['compiler_generated'] )
	end
'image_string_tail'/3 =
    %% Line 594
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Request,[],Out> when 'true' ->
	      let <_cor3> =
		  %% Line 595
		  call 'lists':'reverse'
		      (Out)
	      in  %% Line 595
		  apply 'join_strings'/1
		      ([Request|_cor3])
	  %% Line 596
	  <Request,[{Type,Value}|Opts],Out>
	      when let <_cor4> =
		    call 'erlang':'is_atom'
			(Type)
		in  let <_cor5> =
			call 'erlang':'is_number'
			    (Value)
		    in  call 'erlang':'and'
			    (_cor4, _cor5) ->
	      let <_cor6> =
		  %% Line 597
		  apply 'term2html'/1
		      (Type)
	      in  let <_cor7> =
		      %% Line 597
		      apply 'term2html'/1
			  (Value)
		  in  let <Opt> =
			  %% Line 597
			  apply 'join_strings'/1
			      ([[38]|[_cor6|[[61]|[_cor7|[]]]]])
		      in  %% Line 598
			  apply 'image_string_tail'/3
			      (Request, Opts, [Opt|Out])
	  %% Line 599
	  <Request,[{Type,Value}|Opts],Out> when 'true' ->
	      let <Opt> =
		  %% Line 600
		  apply 'join_strings'/1
		      ([[38]|[Type|[[61]|[Value|[]]]]])
	      in  %% Line 601
		  apply 'image_string_tail'/3
		      (Request, Opts, [Opt|Out])
	  ( <_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10})
		  -| [{'function_name',{'image_string_tail',3}}] )
	    -| ['compiler_generated'] )
	end
'pid2value'/1 =
    %% Line 608
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 609
	    call 'io_lib':'format'
		([126|[112]], [_cor0|[]])
	in  let <String> =
		%% Line 609
		call 'lists':'flatten'
		    (_cor1)
	    in  let <_cor3> =
		    %% Line 610
		    call 'erlang':'length'
			(String)
		in  let <_cor4> =
			%% Line 610
			call 'erlang':'-'
			    (_cor3, 2)
		    in  %% Line 610
			call 'lists':'sublist'
			    (String, 2, _cor4)
'value2pid'/1 =
    %% Line 614
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 615
	    call 'erlang':'++'
		(_cor0, [62])
	in  let <_cor2> =
		%% Line 615
		[60|_cor1]
	    in  let <String> =
		    %% Line 615
		    call 'lists':'flatten'
			(_cor2)
		in  %% Line 616
		    call 'erlang':'list_to_pid'
			(String)
'get_option_value'/2 =
    %% Line 624
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    catch
		%% Line 625
		apply 'get_option_value0'/2
		    (_cor1, _cor0)
	in  %% Line 625
	    case _cor2 of
	      %% Line 626
	      <{'EXIT',Reason}> when 'true' ->
		  {'error',Reason}
	      %% Line 627
	      <Value> when 'true' ->
		  Value
	    end
'get_option_value0'/2 =
    %% Line 630
    fun (_cor1,_cor0) ->
	%% Line 631
	case call 'lists':'keysearch'
		 (_cor1, 1, _cor0) of
	  %% Line 632
	  <'false'> when 'true' ->
	      apply 'get_default_option_value'/1
		  (_cor1)
	  %% Line 633
	  <{'value',{_cor11,_X_Value}}>
	      when let <_cor12> =
		    call 'erlang':'=:='
			(_cor11, _cor1)
		in  let <_cor13> =
			call 'erlang':'=='
			    (_cor1, [102|[105|[108|[108|[99|[111|[108|[111|[114]]]]]]]]])
		    in  call 'erlang':'and'
			    (_cor12, _cor13) ->
	      'true'
	  %% Line 634
	  <{'value',{_cor14,Value}}>
	      when let <_cor15> =
		    call 'erlang':'=:='
			(_cor14, _cor1)
		in  let <_cor16> =
			call 'erlang':'=='
			    (_cor1, [112|[105|[100]]])
		    in  call 'erlang':'and'
			    (_cor15, _cor16) ->
	      apply 'value2pid'/1
		  (Value)
	  %% Line 635
	  <{'value',{_cor17,Value}}>
	      when let <_cor18> =
		    call 'erlang':'=:='
			(_cor17, _cor1)
		in  let <_cor19> =
			call 'erlang':'=='
			    (_cor1, [112|[105|[100|[115]]]])
		    in  call 'erlang':'and'
			    (_cor18, _cor19) ->
	      %% Line 636
	      ( letrec
		    'lc$^0'/1 =
			fun (_cor5) ->
			    case _cor5 of
			      <[PidValue|_cor3]> when 'true' ->
				  let <_cor6> =
				      apply 'value2pid'/1
					  (PidValue)
				  in  let <_cor7> =
					  apply 'lc$^0'/1
					      (_cor3)
				      in  ( [_cor6|_cor7]
					    -| ['compiler_generated'] )
			      <[]> when 'true' ->
				  []
			      ( <_cor5> when 'true' ->
				    ( primop 'match_fail'
					  ({'function_clause',_cor5})
				      -| [{'function_name',{'lc$^0',1}}] )
				-| ['compiler_generated'] )
			    end
		in  let <_cor4> =
			call 'string':'tokens'
			    (Value, [58])
		    in  apply 'lc$^0'/1
			    (_cor4)
		-| ['list_comprehension'] )
	  %% Line 637
	  <{'value',{_cor20,Value}}>
	      when call 'erlang':'=:='
		    (_cor20,
		     _cor1) ->
	      apply 'get_number_value'/1
		  (Value)
	  %% Line 638
	  <_cor21> when 'true' ->
	      {'error','undefined'}
	end
'get_default_option_value'/1 =
    %% Line 641
    fun (_cor0) ->
	%% Line 642
	case _cor0 of
	  %% Line 643
	  <[102|[105|[108|[108|[99|[111|[108|[111|[114]]]]]]]]]> when 'true' ->
	      'false'
	  %% Line 644
	  <[114|[97|[110|[103|[101|[95|[109|[105|[110]]]]]]]]]> when 'true' ->
	      0.00000000000000000000e+00
	  %% Line 645
	  <[112|[105|[100|[115]]]]> when 'true' ->
	      []
	  %% Line 646
	  <[114|[97|[110|[103|[101|[95|[109|[97|[120]]]]]]]]]> when 'true' ->
	      let <Acts> =
		  %% Line 647
		  call 'percept_db':'select'
		      ({'activity',[]})
	      in  %% Line 648
		  case call 'erlang':'hd'
			   (Acts) of
		    <{'activity',Start,_cor8,_cor9,_cor10,_cor11}> when 'true' ->
			let <_cor3> =
			    %% Line 649
			    call 'lists':'reverse'
				(Acts)
			in  %% Line 649
			    case call 'erlang':'hd'
				     (_cor3) of
			      <{'activity',Stop,_cor12,_cor13,_cor14,_cor15}> when 'true' ->
				  let <_cor5> =
				      %% Line 650
				      call 'timer':'now_diff'
					  (Stop, Start)
				  in  %% Line 650
				      call 'erlang':'/'
					  (_cor5, 1000000)
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor4})
				-| ['compiler_generated'] )
			    end
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor2})
		      -| ['compiler_generated'] )
		  end
	  %% Line 651
	  <[119|[105|[100|[116|[104]]]]]> when 'true' ->
	      700
	  %% Line 652
	  <[104|[101|[105|[103|[104|[116]]]]]]> when 'true' ->
	      400
	  %% Line 653
	  <_cor16> when 'true' ->
	      {'error',{'undefined_default_option',_cor0}}
	end
'get_number_value'/1 =
    %% Line 658
    fun (_cor0) ->
	%% Line 660
	case call 'string':'to_float'
		 (_cor0) of
	  %% Line 661
	  <{'error','no_float'}> when 'true' ->
	      %% Line 663
	      case call 'string':'to_integer'
		       (_cor0) of
		%% Line 664
		<{'error',_cor4}> when 'true' ->
		    {'error','illegal_number'}
		%% Line 665
		<{Integer,_cor5}> when 'true' ->
		    Integer
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor1})
		  -| ['compiler_generated'] )
	      end
	  %% Line 667
	  <{'error',_cor6}> when 'true' ->
	      {'error','illegal_number'}
	  %% Line 668
	  <{Float,_cor7}> when 'true' ->
	      Float
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor2})
	    -| ['compiler_generated'] )
	end
'header'/0 =
    %% Line 675
    fun () ->
	apply 'header'/1
	    ([])
'header'/1 =
    %% Line 676
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 686
	    call 'erlang':'++'
		(_cor0, [10|[32|[32|[32|[32|[60|[47|[104|[101|[97|[100|[62|[10|[32|[32|[32|[32|[60|[98|[111|[100|[121|[32|[111|[110|[76|[111|[97|[100|[61|[34|[108|[111|[97|[100|[95|[105|[109|[97|[103|[101|[40|[41|[34|[62|[10|[32|[32|[32|[32|[60|[100|[105|[118|[32|[105|[100|[61|[34|[104|[101|[97|[100|[101|[114|[34|[62|[60|[97|[32|[104|[114|[101|[102|[61|[47|[105|[110|[100|[101|[120|[46|[104|[116|[109|[108|[62|[112|[101|[114|[99|[101|[112|[116|[60|[47|[97|[62|[60|[47|[100|[105|[118|[62|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	in  let <_cor2> =
		%% Line 686
		call 'erlang':'++'
		    ([60|[104|[116|[109|[108|[62|[10|[32|[32|[32|[32|[60|[104|[101|[97|[100|[62|[10|[32|[32|[32|[32|[60|[109|[101|[116|[97|[32|[104|[116|[116|[112|[45|[101|[113|[117|[105|[118|[61|[34|[67|[111|[110|[116|[101|[110|[116|[45|[84|[121|[112|[101|[34|[32|[99|[111|[110|[116|[101|[110|[116|[61|[34|[116|[101|[120|[116|[47|[104|[116|[109|[108|[59|[32|[99|[104|[97|[114|[115|[101|[116|[61|[105|[115|[111|[45|[56|[56|[53|[57|[45|[49|[34|[62|[10|[32|[32|[32|[32|[60|[116|[105|[116|[108|[101|[62|[112|[101|[114|[99|[101|[112|[116|[60|[47|[116|[105|[116|[108|[101|[62|[10|[32|[32|[32|[32|[60|[108|[105|[110|[107|[32|[104|[114|[101|[102|[61|[34|[47|[99|[115|[115|[47|[112|[101|[114|[99|[101|[112|[116|[46|[99|[115|[115|[34|[32|[114|[101|[108|[61|[34|[115|[116|[121|[108|[101|[115|[104|[101|[101|[116|[34|[32|[116|[121|[112|[101|[61|[34|[116|[101|[120|[116|[47|[99|[115|[115|[34|[62|[10|[32|[32|[32|[32|[60|[115|[99|[114|[105|[112|[116|[32|[116|[121|[112|[101|[61|[34|[116|[101|[120|[116|[47|[106|[97|[118|[97|[115|[99|[114|[105|[112|[116|[34|[32|[115|[114|[99|[61|[34|[47|[106|[97|[118|[97|[115|[99|[114|[105|[112|[116|[47|[112|[101|[114|[99|[101|[112|[116|[95|[101|[114|[114|[111|[114|[95|[104|[97|[110|[100|[108|[101|[114|[46|[106|[115|[34|[62|[60|[47|[115|[99|[114|[105|[112|[116|[62|[10|[32|[32|[32|[32|[60|[115|[99|[114|[105|[112|[116|[32|[116|[121|[112|[101|[61|[34|[116|[101|[120|[116|[47|[106|[97|[118|[97|[115|[99|[114|[105|[112|[116|[34|[32|[115|[114|[99|[61|[34|[47|[106|[97|[118|[97|[115|[99|[114|[105|[112|[116|[47|[112|[101|[114|[99|[101|[112|[116|[95|[115|[101|[108|[101|[99|[116|[95|[97|[108|[108|[46|[106|[115|[34|[62|[60|[47|[115|[99|[114|[105|[112|[116|[62|[10|[32|[32|[32|[32|[60|[115|[99|[114|[105|[112|[116|[32|[116|[121|[112|[101|[61|[34|[116|[101|[120|[116|[47|[106|[97|[118|[97|[115|[99|[114|[105|[112|[116|[34|[32|[115|[114|[99|[61|[34|[47|[106|[97|[118|[97|[115|[99|[114|[105|[112|[116|[47|[112|[101|[114|[99|[101|[112|[116|[95|[97|[114|[101|[97|[95|[115|[101|[108|[101|[99|[116|[46|[106|[115|[34|[62|[60|[47|[115|[99|[114|[105|[112|[116|[62|[10|[32|[32|[32|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor1)
	    in  %% Line 677
		call 'erlang':'++'
		    ([67|[111|[110|[116|[101|[110|[116|[45|[84|[121|[112|[101|[58|[32|[116|[101|[120|[116|[47|[104|[116|[109|[108|[13|[10|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor2)
'footer'/0 =
    %% Line 691
    fun () ->
	%% Line 692
	[60|[47|[98|[111|[100|[121|[62|[10|[32|[32|[32|[32|[32|[60|[47|[104|[116|[109|[108|[62|[10]]]]]]]]]]]]]]]]]]]]]
'menu'/0 =
    %% Line 695
    fun () ->
	%% Line 696
	[60|[100|[105|[118|[32|[105|[100|[61|[34|[109|[101|[110|[117|[34|[32|[99|[108|[97|[115|[115|[61|[34|[109|[101|[110|[117|[95|[116|[97|[98|[115|[34|[62|[10|[9|[60|[117|[108|[62|[10|[32|[32|[32|[32|[32|[9|[60|[108|[105|[62|[60|[97|[32|[104|[114|[101|[102|[61|[47|[99|[103|[105|[45|[98|[105|[110|[47|[112|[101|[114|[99|[101|[112|[116|[95|[104|[116|[109|[108|[47|[100|[97|[116|[97|[98|[97|[115|[101|[115|[95|[112|[97|[103|[101|[62|[100|[97|[116|[97|[98|[97|[115|[101|[115|[60|[47|[97|[62|[60|[47|[108|[105|[62|[10|[32|[32|[32|[32|[32|[9|[60|[108|[105|[62|[60|[97|[32|[104|[114|[101|[102|[61|[47|[99|[103|[105|[45|[98|[105|[110|[47|[112|[101|[114|[99|[101|[112|[116|[95|[104|[116|[109|[108|[47|[112|[114|[111|[99|[101|[115|[115|[101|[115|[95|[112|[97|[103|[101|[62|[112|[114|[111|[99|[101|[115|[115|[101|[115|[60|[47|[97|[62|[60|[47|[108|[105|[62|[10|[32|[32|[32|[32|[32|[9|[60|[108|[105|[62|[60|[97|[32|[104|[114|[101|[102|[61|[47|[99|[103|[105|[45|[98|[105|[110|[47|[112|[101|[114|[99|[101|[112|[116|[95|[104|[116|[109|[108|[47|[112|[97|[103|[101|[62|[111|[118|[101|[114|[118|[105|[101|[119|[60|[47|[97|[62|[60|[47|[108|[105|[62|[10|[32|[32|[32|[32|[32|[60|[47|[117|[108|[62|[60|[47|[100|[105|[118|[62|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
'error_msg'/1 =
    %% Line 705
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 708
	    call 'erlang':'++'
		(_cor0, [60|[47|[116|[100|[62|[60|[47|[116|[114|[62|[10|[9|[60|[116|[114|[32|[104|[101|[105|[103|[104|[116|[61|[53|[62|[60|[116|[100|[62|[60|[47|[116|[100|[62|[32|[60|[116|[100|[62|[60|[47|[116|[100|[62|[60|[47|[116|[114|[62|[10|[32|[32|[32|[32|[32|[60|[47|[116|[97|[98|[108|[101|[62|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	in  %% Line 708
	    call 'erlang':'++'
		([60|[116|[97|[98|[108|[101|[32|[119|[105|[100|[116|[104|[61|[51|[48|[48|[62|[10|[9|[60|[116|[114|[32|[104|[101|[105|[103|[104|[116|[61|[53|[62|[60|[116|[100|[62|[60|[47|[116|[100|[62|[32|[60|[116|[100|[62|[60|[47|[116|[100|[62|[60|[47|[116|[114|[62|[10|[9|[60|[116|[114|[62|[60|[116|[100|[32|[119|[105|[100|[116|[104|[61|[49|[53|[48|[32|[97|[108|[105|[103|[110|[61|[114|[105|[103|[104|[116|[62|[60|[98|[62|[69|[114|[114|[111|[114|[58|[32|[60|[47|[98|[62|[60|[47|[116|[100|[62|[32|[60|[116|[100|[32|[97|[108|[105|[103|[110|[61|[108|[101|[102|[116|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor1)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('percept_html')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('percept_html', _cor0)
end