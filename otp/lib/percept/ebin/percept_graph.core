module 'percept_graph' ['activity'/3,
			'graph'/3,
			'module_info'/0,
			'module_info'/1,
			'percentage'/3,
			'proc_lifetime'/3,
			'scheduler_graph'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{'timestamp',{'type',26,'tuple',[{'type',26,'non_neg_integer',[]}|[{'type',26,'non_neg_integer',[]}|[{'type',26,'non_neg_integer',[]}]]]},[]}],
		%% Line 27
		'type' =
		    %% Line 27
		    [{'true_mfa',{'type',27,'tuple',[{'type',27,'atom',[]}|[{'type',27,'atom',[]}|[{'type',27,'union',[{'type',27,'byte',[]}|[{'type',27,'list',[]}]]}]]]},[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{'state',{'type',28,'union',[{'atom',28,'active'}|[{'atom',28,'inactive'}]]},[]}],
		%% Line 29
		'type' =
		    %% Line 29
		    [{'scheduler_id',{'type',29,'tuple',[{'atom',29,'scheduler_id'}|[{'type',29,'non_neg_integer',[]}]]},[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','activity'},[{'record_field',36,{'atom',36,'timestamp'}}|[{'record_field',37,{'atom',37,'id'}}|[{'record_field',38,{'atom',38,'state'},{'atom',38,'undefined'}}|[{'record_field',39,{'atom',39,'where'},{'atom',39,'undefined'}}|[{'record_field',40,{'atom',40,'runnable_count'},{'integer',40,0}}]]]]],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','information'},[{'record_field',44,{'atom',44,'id'}}|[{'record_field',45,{'atom',45,'name'},{'atom',45,'undefined'}}|[{'record_field',46,{'atom',46,'entry'},{'atom',46,'undefined'}}|[{'record_field',47,{'atom',47,'start'},{'atom',47,'undefined'}}|[{'record_field',48,{'atom',48,'stop'},{'atom',48,'undefined'}}|[{'record_field',49,{'atom',49,'parent'},{'atom',49,'undefined'}}|[{'record_field',50,{'atom',50,'children'},{'nil',50}}]]]]]]],[]}],
		%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','file_info'},[{'typed_record_field',{'record_field',25,{'atom',25,'size'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'type'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'device'}|[{'atom',26,'directory'}|[{'atom',26,'other'}|[{'atom',26,'regular'}|[{'atom',26,'symlink'}]]]]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'access'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'atom',27,'read'}|[{'atom',27,'write'}|[{'atom',27,'read_write'}|[{'atom',27,'none'}]]]]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'atime'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'remote_type',28,[{'atom',28,'file'}|[{'atom',28,'date_time'}|[[]]]]}|[{'type',28,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'mtime'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'remote_type',32,[{'atom',32,'file'}|[{'atom',32,'date_time'}|[[]]]]}|[{'type',32,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',34,{'atom',34,'ctime'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'remote_type',34,[{'atom',34,'file'}|[{'atom',34,'date_time'}|[[]]]]}|[{'type',34,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',40,{'atom',40,'mode'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'links'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',46,{'atom',46,'major_device'}},{'type',46,'union',[{'atom',46,'undefined'}|[{'type',46,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'minor_device'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'inode'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',54,{'atom',54,'uid'}},{'type',54,'union',[{'atom',54,'undefined'}|[{'type',54,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',55,{'atom',55,'gid'}},{'type',55,'union',[{'atom',55,'undefined'}|[{'type',55,'non_neg_integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','file_descriptor'},[{'typed_record_field',{'record_field',59,{'atom',59,'module'}},{'type',59,'union',[{'atom',59,'undefined'}|[{'type',59,'module',[]}]]}}|[{'typed_record_field',{'record_field',60,{'atom',60,'data'}},{'type',60,'union',[{'atom',60,'undefined'}|[{'type',60,'term',[]}]]}}]],[]}]]
'graph'/3 =
    %% Line 34
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 35
	    apply 'header'/0
		()
	in  do  %% Line 35
		call 'mod_esi':'deliver'
		    (_cor2, _cor3)
		let <_cor4> =
		    %% Line 36
		    apply 'graph'/2
			(_cor1, _cor0)
		in  let <_cor5> =
			%% Line 36
			call 'erlang':'binary_to_list'
			    (_cor4)
		    in  %% Line 36
			call 'mod_esi':'deliver'
			    (_cor2, _cor5)
'activity'/3 =
    %% Line 42
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 43
	    apply 'header'/0
		()
	in  do  %% Line 43
		call 'mod_esi':'deliver'
		    (_cor2, _cor3)
		let <_cor4> =
		    %% Line 44
		    apply 'activity_bar'/2
			(_cor1, _cor0)
		in  let <_cor5> =
			%% Line 44
			call 'erlang':'binary_to_list'
			    (_cor4)
		    in  %% Line 44
			call 'mod_esi':'deliver'
			    (_cor2, _cor5)
'proc_lifetime'/3 =
    %% Line 46
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 47
	    apply 'header'/0
		()
	in  do  %% Line 47
		call 'mod_esi':'deliver'
		    (_cor2, _cor3)
		let <_cor4> =
		    %% Line 48
		    apply 'proc_lifetime'/2
			(_cor1, _cor0)
		in  let <_cor5> =
			%% Line 48
			call 'erlang':'binary_to_list'
			    (_cor4)
		    in  %% Line 48
			call 'mod_esi':'deliver'
			    (_cor2, _cor5)
'percentage'/3 =
    %% Line 50
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 51
	    apply 'header'/0
		()
	in  do  %% Line 51
		call 'mod_esi':'deliver'
		    (_cor2, _cor3)
		let <_cor4> =
		    %% Line 52
		    apply 'percentage'/2
			(_cor1, _cor0)
		in  let <_cor5> =
			%% Line 52
			call 'erlang':'binary_to_list'
			    (_cor4)
		    in  %% Line 52
			call 'mod_esi':'deliver'
			    (_cor2, _cor5)
'scheduler_graph'/3 =
    %% Line 54
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 55
	    apply 'header'/0
		()
	in  do  %% Line 55
		call 'mod_esi':'deliver'
		    (_cor2, _cor3)
		let <_cor4> =
		    %% Line 56
		    apply 'scheduler_graph'/2
			(_cor1, _cor0)
		in  let <_cor5> =
			%% Line 56
			call 'erlang':'binary_to_list'
			    (_cor4)
		    in  %% Line 56
			call 'mod_esi':'deliver'
			    (_cor2, _cor5)
'graph'/2 =
    %% Line 58
    fun (_cor1,_cor0) ->
	let <Query> =
	    %% Line 59
	    call 'httpd':'parse_query'
		(_cor0)
	in  let <RangeMin> =
		%% Line 60
		call 'percept_html':'get_option_value'
		    ([114|[97|[110|[103|[101|[95|[109|[105|[110]]]]]]]]], Query)
	    in  let <RangeMax> =
		    %% Line 61
		    call 'percept_html':'get_option_value'
			([114|[97|[110|[103|[101|[95|[109|[97|[120]]]]]]]]], Query)
		in  let <Pids> =
			%% Line 62
			call 'percept_html':'get_option_value'
			    ([112|[105|[100|[115]]]], Query)
		    in  let <Width> =
			    %% Line 63
			    call 'percept_html':'get_option_value'
				([119|[105|[100|[116|[104]]]]], Query)
			in  let <Height> =
				%% Line 64
				call 'percept_html':'get_option_value'
				    ([104|[101|[105|[103|[104|[116]]]]]], Query)
			    in  let <_cor12> =
				    %% Line 67
				    ( letrec
					  'lc$^0'/1 =
					      fun (_cor10) ->
						  case _cor10 of
						    <[ID|_cor9]> when 'true' ->
							let <_cor11> =
							    apply 'lc$^0'/1
								(_cor9)
							in  ( [{'id',ID}|_cor11]
							      -| ['compiler_generated'] )
						    <[]> when 'true' ->
							[]
						    ( <_cor10> when 'true' ->
							  ( primop 'match_fail'
								({'function_clause',_cor10})
							    -| [{'function_name',{'lc$^0',1}}] )
						      -| ['compiler_generated'] )
						  end
				      in  apply 'lc$^0'/1
					      (Pids)
				      -| ['list_comprehension'] )
				in  let <StartTs> =
					%% Line 70
					call 'percept_db':'select'
					    ({'system','start_ts'})
				    in  let <TsMin> =
					    %% Line 71
					    call 'percept_analyzer':'seconds2ts'
						(RangeMin, StartTs)
					in  let <TsMax> =
						%% Line 72
						call 'percept_analyzer':'seconds2ts'
						    (RangeMax, StartTs)
					    in  let <Options> =
						    %% Line 74
						    [{'ts_min',TsMin}|[{'ts_max',TsMax}|_cor12]]
						in  let <Acts> =
							%% Line 76
							call 'percept_db':'select'
							    ({'activity',Options})
						    in  let <_cor20> =
							    %% Line 77
							    case _cor12 of
							      %% Line 78
							      <[]> when 'true' ->
								  call 'percept_analyzer':'activities2count'
								      (Acts, StartTs)
							      %% Line 79
							      <_cor24> when 'true' ->
								  call 'percept_analyzer':'activities2count2'
								      (Acts, StartTs)
							    end
							in  %% Line 82
							    call 'percept_image':'graph'
								(Width, Height, _cor20)
'scheduler_graph'/2 =
    %% Line 84
    fun (_cor1,_cor0) ->
	let <Query> =
	    %% Line 85
	    call 'httpd':'parse_query'
		(_cor0)
	in  let <RangeMin> =
		%% Line 86
		call 'percept_html':'get_option_value'
		    ([114|[97|[110|[103|[101|[95|[109|[105|[110]]]]]]]]], Query)
	    in  let <RangeMax> =
		    %% Line 87
		    call 'percept_html':'get_option_value'
			([114|[97|[110|[103|[101|[95|[109|[97|[120]]]]]]]]], Query)
		in  let <Width> =
			%% Line 88
			call 'percept_html':'get_option_value'
			    ([119|[105|[100|[116|[104]]]]], Query)
		    in  let <Height> =
			    %% Line 89
			    call 'percept_html':'get_option_value'
				([104|[101|[105|[103|[104|[116]]]]]], Query)
			in  let <StartTs> =
				%% Line 91
				call 'percept_db':'select'
				    ({'system','start_ts'})
			    in  let <TsMin> =
				    %% Line 92
				    call 'percept_analyzer':'seconds2ts'
					(RangeMin, StartTs)
				in  let <TsMax> =
					%% Line 93
					call 'percept_analyzer':'seconds2ts'
					    (RangeMax, StartTs)
				    in  let <Acts> =
					    %% Line 96
					    call 'percept_db':'select'
						({'scheduler',[{'ts_min',TsMin}|[{'ts_max',TsMax}|[]]]})
					in  let <_cor17> =
						%% Line 98
						( letrec
						      'lc$^0'/1 =
							  fun (_cor13) ->
							      case _cor13 of
								<[{'activity',Ts,_cor21,_cor22,Scheds,_cor23}|_cor12]> when 'true' ->
								    let <_cor14> =
									call 'timer':'now_diff'
									    (Ts, StartTs)
								    in  let <_cor15> =
									    call 'erlang':'/'
										(_cor14, 1000000)
									in  let <_cor16> =
										apply 'lc$^0'/1
										    (_cor12)
									    in  ( [{_cor15,Scheds,0}|_cor16]
										  -| ['compiler_generated'] )
								( <[_cor11|_cor12]> when 'true' ->
								      apply 'lc$^0'/1
									  (_cor12)
								  -| ['compiler_generated'] )
								<[]> when 'true' ->
								    []
								( <_cor13> when 'true' ->
								      ( primop 'match_fail'
									    ({'function_clause',_cor13})
									-| [{'function_name',{'lc$^0',1}}] )
								  -| ['compiler_generated'] )
							      end
						  in  apply 'lc$^0'/1
							  (Acts)
						  -| ['list_comprehension'] )
					    in  %% Line 100
						call 'percept_image':'graph'
						    (Width, Height, _cor17)
'activity_bar'/2 =
    %% Line 102
    fun (_cor1,_cor0) ->
	let <Query> =
	    %% Line 103
	    call 'httpd':'parse_query'
		(_cor0)
	in  let <Pid> =
		%% Line 104
		call 'percept_html':'get_option_value'
		    ([112|[105|[100]]], Query)
	    in  let <Min> =
		    %% Line 105
		    call 'percept_html':'get_option_value'
			([114|[97|[110|[103|[101|[95|[109|[105|[110]]]]]]]]], Query)
		in  let <Max> =
			%% Line 106
			call 'percept_html':'get_option_value'
			    ([114|[97|[110|[103|[101|[95|[109|[97|[120]]]]]]]]], Query)
		    in  let <Width> =
			    %% Line 107
			    call 'percept_html':'get_option_value'
				([119|[105|[100|[116|[104]]]]], Query)
			in  let <Height> =
				%% Line 108
				call 'percept_html':'get_option_value'
				    ([104|[101|[105|[103|[104|[116]]]]]], Query)
			    in  let <Data> =
				    %% Line 110
				    call 'percept_db':'select'
					({'activity',[{'id',Pid}|[]]})
				in  let <StartTs> =
					%% Line 111
					call 'percept_db':'select'
					    ({'system','start_ts'})
				    in  let <_cor16> =
					    %% Line 112
					    ( letrec
						  'lc$^0'/1 =
						      fun (_cor12) ->
							  case _cor12 of
							    <[{'activity',Ts,_cor20,State,_cor21,_cor22}|_cor11]> when 'true' ->
								let <_cor13> =
								    call 'timer':'now_diff'
									(Ts, StartTs)
								in  let <_cor14> =
									call 'erlang':'/'
									    (_cor13, 1000000)
								    in  let <_cor15> =
									    apply 'lc$^0'/1
										(_cor11)
									in  ( [{_cor14,State}|_cor15]
									      -| ['compiler_generated'] )
							    ( <[_cor10|_cor11]> when 'true' ->
								  apply 'lc$^0'/1
								      (_cor11)
							      -| ['compiler_generated'] )
							    <[]> when 'true' ->
								[]
							    ( <_cor12> when 'true' ->
								  ( primop 'match_fail'
									({'function_clause',_cor12})
								    -| [{'function_name',{'lc$^0',1}}] )
							      -| ['compiler_generated'] )
							  end
					      in  apply 'lc$^0'/1
						      (Data)
					      -| ['list_comprehension'] )
					in  %% Line 114
					    call 'percept_image':'activities'
						(Width, Height, {Min,Max}, _cor16)
'proc_lifetime'/2 =
    %% Line 116
    fun (_cor1,_cor0) ->
	let <Query> =
	    %% Line 117
	    call 'httpd':'parse_query'
		(_cor0)
	in  let <ProfileTime> =
		%% Line 118
		call 'percept_html':'get_option_value'
		    ([112|[114|[111|[102|[105|[108|[101|[116|[105|[109|[101]]]]]]]]]]], Query)
	    in  let <Start> =
		    %% Line 119
		    call 'percept_html':'get_option_value'
			([115|[116|[97|[114|[116]]]]], Query)
		in  let <End> =
			%% Line 120
			call 'percept_html':'get_option_value'
			    ([101|[110|[100]]], Query)
		    in  let <Width> =
			    %% Line 121
			    call 'percept_html':'get_option_value'
				([119|[105|[100|[116|[104]]]]], Query)
			in  let <Height> =
				%% Line 122
				call 'percept_html':'get_option_value'
				    ([104|[101|[105|[103|[104|[116]]]]]], Query)
			    in  let <_cor12> =
				    %% Line 123
				    call 'erlang':'round'
					(Width)
				in  let <_cor11> =
					%% Line 123
					call 'erlang':'round'
					    (Height)
				    in  let <_cor10> =
					    %% Line 123
					    call 'erlang':'float'
						(Start)
					in  let <_cor9> =
						%% Line 123
						call 'erlang':'float'
						    (End)
					    in  let <_cor8> =
						    %% Line 123
						    call 'erlang':'float'
							(ProfileTime)
						in  %% Line 123
						    call 'percept_image':'proc_lifetime'
							(_cor12, _cor11, _cor10, _cor9, _cor8)
'percentage'/2 =
    %% Line 125
    fun (_cor1,_cor0) ->
	let <Query> =
	    %% Line 126
	    call 'httpd':'parse_query'
		(_cor0)
	in  let <Width> =
		%% Line 127
		call 'percept_html':'get_option_value'
		    ([119|[105|[100|[116|[104]]]]], Query)
	    in  let <Height> =
		    %% Line 128
		    call 'percept_html':'get_option_value'
			([104|[101|[105|[103|[104|[116]]]]]], Query)
		in  let <Percentage> =
			%% Line 129
			call 'percept_html':'get_option_value'
			    ([112|[101|[114|[99|[101|[110|[116|[97|[103|[101]]]]]]]]]], Query)
		    in  let <_cor8> =
			    %% Line 130
			    call 'erlang':'round'
				(Width)
			in  let <_cor7> =
				%% Line 130
				call 'erlang':'round'
				    (Height)
			    in  let <_cor6> =
				    %% Line 130
				    call 'erlang':'float'
					(Percentage)
				in  %% Line 130
				    call 'percept_image':'percentage'
					(_cor8, _cor7, _cor6)
'header'/0 =
    %% Line 132
    fun () ->
	%% Line 133
	[67|[111|[110|[116|[101|[110|[116|[45|[84|[121|[112|[101|[58|[32|[105|[109|[97|[103|[101|[47|[112|[110|[103|[13|[10|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('percept_graph')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('percept_graph', _cor0)
end