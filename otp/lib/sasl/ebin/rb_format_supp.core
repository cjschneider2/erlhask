module 'rb_format_supp' ['module_info'/0,
			 'module_info'/1,
			 'print'/3]
    attributes []
'print'/3 =
    %% Line 28
    fun (_cor2,_cor1,_cor0) ->
	%% Line 34
	case _cor1 of
	  <{_X_Time,Rep}> when 'true' ->
	      %% Line 35
	      case Rep of
		%% Line 36
		<{'error_report',_X_GL,{Pid,'crash_report',CrashReport}}> when 'true' ->
		    let <Header> =
			%% Line 37
			apply 'format_h'/4
			    (79, [67|[82|[65|[83|[72|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]], Pid, _cor2)
		    in  let <_cor6> =
			    %% Line 41
			    apply 'format_c'/1
				(CrashReport)
			in  do  %% Line 38
				call 'format_lib_supp':'print_info'
				    (_cor0, 79, %% Line 40
						[{'header',Header}|_cor6])
				%% Line 42
				'true'
		%% Line 43
		<{'error_report',_X_GL,{Pid,'supervisor_report',SupReport}}> when 'true' ->
		    let <Header> =
			%% Line 44
			apply 'format_h'/4
			    (79, [83|[85|[80|[69|[82|[86|[73|[83|[79|[82|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]]]]]]], Pid, _cor2)
		    in  let <_cor8> =
			    %% Line 48
			    apply 'format_s'/1
				(SupReport)
			in  do  %% Line 45
				call 'format_lib_supp':'print_info'
				    (_cor0, 79, %% Line 47
						[{'header',Header}|_cor8])
				%% Line 49
				'true'
		%% Line 50
		<{'error_report',_X_GL,{Pid,_X_Type,Report1}}> when 'true' ->
		    let <Header> =
			%% Line 51
			apply 'format_h'/4
			    (79, [69|[82|[82|[79|[82|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]], Pid, _cor2)
		    in  do  %% Line 52
			    call 'format_lib_supp':'print_info'
				(_cor0, 79, %% Line 54
					    [{'header',Header}|%% Line 55
							       [{'data',Report1}|[]]])
			    %% Line 56
			    'true'
		%% Line 57
		<{'info_report',_X_GL,{Pid,'progress',SupProgress}}> when 'true' ->
		    let <Header> =
			%% Line 58
			apply 'format_h'/4
			    (79, [80|[82|[79|[71|[82|[69|[83|[83|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]]]]], Pid, _cor2)
		    in  let <_cor11> =
			    %% Line 62
			    apply 'format_p'/1
				(SupProgress)
			in  %% Line 59
			    call 'format_lib_supp':'print_info'
				(_cor0, 79, %% Line 61
					    [{'header',Header}|_cor11])
		%% Line 63
		<{'info_report',_X_GL,{Pid,_X_Type,Report1}}> when 'true' ->
		    let <Header> =
			%% Line 64
			apply 'format_h'/4
			    (79, [73|[78|[70|[79|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]], Pid, _cor2)
		    in  do  %% Line 65
			    call 'format_lib_supp':'print_info'
				(_cor0, 79, %% Line 67
					    [{'header',Header}|%% Line 68
							       [{'data',Report1}|[]]])
			    %% Line 69
			    'true'
		%% Line 70
		<{'warning_report',_X_GL,{Pid,_X_Type,Report1}}> when 'true' ->
		    let <Header> =
			%% Line 71
			apply 'format_h'/4
			    (79, [87|[65|[82|[78|[73|[78|[71|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]]]], Pid, _cor2)
		    in  do  %% Line 72
			    call 'format_lib_supp':'print_info'
				(_cor0, 79, %% Line 74
					    [{'header',Header}|%% Line 75
							       [{'data',Report1}|[]]])
			    %% Line 76
			    'true'
		%% Line 77
		<{'error',_X_GL,{Pid,Format,Args}}> when 'true' ->
		    let <Header> =
			%% Line 78
			apply 'format_h'/4
			    (79, [69|[82|[82|[79|[82|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]], Pid, _cor2)
		    in  do  %% Line 79
			    call 'format_lib_supp':'print_info'
				(_cor0, 79, %% Line 81
					    [{'header',Header}|[]])
			    %% Line 82
			    call 'io':'format'
				(_cor0, Format, Args)
		%% Line 83
		<{'info_msg',_X_GL,{Pid,Format,Args}}> when 'true' ->
		    let <Header> =
			%% Line 84
			apply 'format_h'/4
			    (79, [73|[78|[70|[79|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]], Pid, _cor2)
		    in  do  %% Line 85
			    call 'format_lib_supp':'print_info'
				(_cor0, 79, %% Line 87
					    [{'header',Header}|[]])
			    %% Line 88
			    call 'io':'format'
				(_cor0, Format, Args)
		%% Line 89
		<{'warning_msg',_X_GL,{Pid,Format,Args}}> when 'true' ->
		    let <Header> =
			%% Line 90
			apply 'format_h'/4
			    (79, [87|[65|[82|[78|[73|[78|[71|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]]]], Pid, _cor2)
		    in  do  %% Line 91
			    call 'format_lib_supp':'print_info'
				(_cor0, 79, %% Line 93
					    [{'header',Header}|[]])
			    %% Line 94
			    call 'io':'format'
				(_cor0, Format, Args)
		%% Line 95
		<{Type,_X_GL,TypeReport}> when 'true' ->
		    do  %% Line 96
			call 'io':'format'
			    (_cor0, [126|[110|[73|[110|[102|[111|[32|[116|[121|[112|[101|[32|[60|[126|[119|[62|[32|[126|[115|[126|[110]]]]]]]]]]]]]]]]]]]]], %% Line 97
																			     [Type|[_cor2|[]]])
			%% Line 98
			call 'io':'format'
			    (_cor0, [126|[112]], [TypeReport|[]])
		%% Line 99
		<_cor21> when 'true' ->
		    do  %% Line 100
			call 'io':'format'
			    ([126|[110|[80|[114|[105|[110|[116|[105|[110|[103|[32|[105|[110|[102|[111|[32|[111|[102|[32|[117|[110|[107|[110|[111|[119|[110|[32|[116|[121|[112|[101|[46|[46|[46|[32|[126|[115|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 101
																															       [_cor2|[]])
			%% Line 102
			call 'io':'format'
			    (_cor0, [126|[112]], [_cor1|[]])
	      end
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor4})
	    -| ['compiler_generated'] )
	end
'format_h'/4 =
    %% Line 106
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 107
	    call 'io_lib':'format'
		([126|[115|[32|[32|[126|[119]]]]]], [_cor2|[_cor1|[]]])
	in  let <NHeader> =
		%% Line 107
		call 'lists':'flatten'
		    (_cor4)
	    in  let <DateLen> =
		    %% Line 108
		    call 'erlang':'length'
			(_cor0)
		in  let <HeaderLen> =
			%% Line 109
			call 'erlang':'-'
			    (_cor3, DateLen)
		    in  let <Format> =
			    %% Line 110
			    call 'lists':'concat'
				([[126|[45]]|[HeaderLen|[[115|[126]]|[DateLen|[[115]]]]]])
			in  %% Line 111
			    call 'io_lib':'format'
				(Format, [NHeader|[_cor0|[]]])
'format_c'/1 =
    %% Line 117
    fun (_cor0) ->
	case _cor0 of
	  <[OwnReport|[LinkReport|[]]]> when 'true' ->
	      let <_cor1> =
		  %% Line 119
		  apply 'format_neighbours'/1
		      (LinkReport)
	      in  %% Line 118
		  [{'items',{[67|[114|[97|[115|[104|[105|[110|[103|[32|[112|[114|[111|[99|[101|[115|[115]]]]]]]]]]]]]]]],OwnReport}}|%% Line 119
																     [_cor1|[]]]
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'format_c',1}}] )
	    -| ['compiler_generated'] )
	end
'format_neighbours'/1 =
    %% Line 121
    fun (_cor0) ->
	case _cor0 of
	  <[Data|Rest]> when 'true' ->
	      let <_cor1> =
		  %% Line 124
		  apply 'format_neighbours'/1
		      (Rest)
	      in  %% Line 122
		  [{'newline',1}|%% Line 123
				 [{'items',{[78|[101|[105|[103|[104|[98|[111|[117|[114|[32|[112|[114|[111|[99|[101|[115|[115]]]]]]]]]]]]]]]]],Data}}|_cor1]]
	  %% Line 125
	  <[]> when 'true' ->
	      []
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'format_neighbours',1}}] )
	    -| ['compiler_generated'] )
	end
'format_s'/1 =
    %% Line 130
    fun (_cor0) ->
	let <SuperName> =
	    %% Line 131
	    apply 'get_opt'/2
		('supervisor', _cor0)
	in  let <ErrorContext> =
		%% Line 132
		apply 'get_opt'/2
		    ('errorContext', _cor0)
	    in  let <Reason> =
		    %% Line 133
		    apply 'get_opt'/2
			('reason', _cor0)
		in  let <ChildInfo> =
			%% Line 134
			apply 'get_opt'/2
			    ('offender', _cor0)
		    in  let <_cor7> =
			    %% Line 140
			    ( fun (_cor5) ->
				  apply 'transform_mfa'/1
				      (_cor5)
			      -| [{'id',{0,0,'-format_s/1-fun-0-'}}] )
			in  let <_cor8> =
				%% Line 140
				call 'lists':'map'
				    (_cor7, ChildInfo)
			    in  %% Line 135
				[{'data',[{[82|[101|[112|[111|[114|[116|[105|[110|[103|[32|[115|[117|[112|[101|[114|[118|[105|[115|[111|[114]]]]]]]]]]]]]]]]]]]],SuperName}|[]]}|%% Line 136
																						 [{'newline',1}|%% Line 137
																								[{'items',{[67|[104|[105|[108|[100|[32|[112|[114|[111|[99|[101|[115|[115]]]]]]]]]]]]],%% Line 138
																																		      [{'errorContext',ErrorContext}|%% Line 139
																																						     [{'reason',Reason}|_cor8]]}}|%% Line 140
																																										  []]]]
'transform_mfa'/1 =
    %% Line 142
    fun (_cor0) ->
	case _cor0 of
	  <{'mfa',Value}> when 'true' ->
	      {'start_function',Value}
	  %% Line 143
	  <X> when 'true' ->
	      X
	end
'format_p'/1 =
    %% Line 148
    fun (_cor0) ->
	%% Line 149
	[{'data',_cor0}|[]]
'get_opt'/2 =
    %% Line 151
    fun (_cor1,_cor0) ->
	%% Line 152
	case call 'lists':'keysearch'
		 (_cor1, 1, _cor0) of
	  %% Line 153
	  <{'value',{_X_Key,Val}}> when 'true' ->
	      Val
	  %% Line 154
	  <_cor5> when 'true' ->
	      'undefined'
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('rb_format_supp')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('rb_format_supp', _cor0)
end