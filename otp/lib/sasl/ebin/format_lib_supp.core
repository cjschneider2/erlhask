module 'format_lib_supp' ['maxcol'/2,
			  'module_info'/0,
			  'module_info'/1,
			  'print_info'/2,
			  'print_info'/3]
    attributes []
'print_info'/2 =
    %% Line 58
    fun (_cor1,_cor0) ->
	%% Line 59
	apply 'print_info'/3
	    (_cor1, 79, _cor0)
'print_info'/3 =
    %% Line 60
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 61
	    apply 'print_header'/3
		(_cor2, _cor1, _cor0)
	    %% Line 62
	    apply 'print_format'/3
		(_cor2, _cor1, _cor0)
'print_header'/3 =
    %% Line 64
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Device,Line,[{'header',Header}|_cor6]> when 'true' ->
	      %% Line 65
	      apply 'print_header2'/3
		  (Device, Line, Header)
	  %% Line 66
	  <Device,Line,_cor7> when 'true' ->
	      %% Line 67
	      apply 'print_header2'/3
		  (Device, Line, [])
	end
'print_header2'/3 =
    %% Line 68
    fun (_cor2,_cor1,_cor0) ->
	let <Format1> =
	    %% Line 69
	    call 'lists':'concat'
		([[126|[110|[126]]]|[_cor1|[[46]|[_cor1|[[115|[126|[110]]]]]]]])
	in  let <Format2> =
		%% Line 70
		call 'lists':'concat'
		    ([[126]|[_cor1|[[99|[126|[110]]]]]])
	    in  do  %% Line 71
		    call 'io':'format'
			(_cor2, Format1, [_cor0|[]])
		    %% Line 72
		    call 'io':'format'
			(_cor2, Format2, [61])
'print_format'/3 =
    %% Line 74
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Device,_X_Line,[]> when 'true' ->
	      %% Line 75
	      call 'io':'format'
		  (Device, '~n', [])
	  %% Line 76
	  <Device,Line,[{'data',Data}|T]> when 'true' ->
	      do  %% Line 77
		  apply 'print_data'/3
		      (Device, Line, Data)
		  %% Line 78
		  apply 'print_format'/3
		      (Device, Line, T)
	  %% Line 79
	  <Device,Line,[{'table',Table}|T]> when 'true' ->
	      let <_X_> =
		  %% Line 80
		  apply 'print_table'/3
		      (Device, Line, Table)
	      in  %% Line 81
		  apply 'print_format'/3
		      (Device, Line, T)
	  %% Line 82
	  <Device,Line,[{'items',Items}|T]> when 'true' ->
	      do  %% Line 83
		  apply 'print_items'/3
		      (Device, Line, Items)
		  %% Line 84
		  apply 'print_format'/3
		      (Device, Line, T)
	  %% Line 85
	  <Device,Line,[{'newline',N}|T]> when 'true' ->
	      do  %% Line 86
		  apply 'print_newlines'/2
		      (Device, N)
		  %% Line 87
		  apply 'print_format'/3
		      (Device, Line, T)
	  %% Line 88
	  <Device,Line,[_cor7|T]> when 'true' ->
	      %% Line 89
	      apply 'print_format'/3
		  (Device, Line, T)
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'print_format',3}}] )
	    -| ['compiler_generated'] )
	end
'print_data'/3 =
    %% Line 91
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_Device,_X_Line,[]> when 'true' ->
	      'ok'
	  %% Line 92
	  <Device,Line,[{Key,Value}|T]> when 'true' ->
	      do  %% Line 93
		  apply 'print_one_line'/4
		      (Device, Line, Key, Value)
		  %% Line 94
		  apply 'print_data'/3
		      (Device, Line, T)
	  %% Line 95
	  <Device,Line,[Value|T]> when 'true' ->
	      do  %% Line 96
		  call 'io':'format'
		      (Device, [126|[112|[126|[110]]]], [Value|[]])
		  %% Line 97
		  apply 'print_data'/3
		      (Device, Line, T)
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'print_data',3}}] )
	    -| ['compiler_generated'] )
	end
'print_items'/3 =
    %% Line 99
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Device,Line,{Name,Items}> when 'true' ->
	      %% Line 100
	      apply 'print_items'/4
		  (Device, Line, Name, Items)
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'print_items',3}}] )
	    -| ['compiler_generated'] )
	end
'print_table'/3 =
    %% Line 102
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Device,Line,{TableName,ColumnNames,Columns}> when 'true' ->
	      %% Line 103
	      apply 'print_table'/5
		  (Device, Line, TableName, ColumnNames, Columns)
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'print_table',3}}] )
	    -| ['compiler_generated'] )
	end
'print_newlines'/2 =
    %% Line 105
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Device,0> when 'true' ->
	      'ok'
	  %% Line 106
	  <Device,N>
	      when call 'erlang':'>'
		    (N,
		     0) ->
	      do  %% Line 107
		  call 'io':'format'
		      (Device, '~n', [])
		  let <_cor2> =
		      %% Line 108
		      call 'erlang':'-'
			  (N, 1)
		  in  %% Line 108
		      apply 'print_newlines'/2
			  (Device, _cor2)
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'print_newlines',2}}] )
	    -| ['compiler_generated'] )
	end
'print_one_line'/4 =
    %% Line 110
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <StrKey> =
	    %% Line 111
	    apply 'term_to_string'/1
		(_cor1)
	in  let <_cor5> =
		%% Line 112
		call 'erlang':'length'
		    (StrKey)
	    in  let <KeyLen> =
		    %% Line 112
		    call 'lists':'min'
			([_cor5|[_cor2|[]]])
		in  let <ValueLen> =
			%% Line 113
			call 'erlang':'-'
			    (_cor2, KeyLen)
		    in  let <Format1> =
			    %% Line 114
			    call 'lists':'concat'
				([[126|[45]]|[KeyLen|['s']]])
			in  let <Format2> =
				%% Line 115
				call 'lists':'concat'
				    ([[126]|[ValueLen|[[115|[126|[110]]]]]])
			    in  do  %% Line 116
				    call 'io':'format'
					(_cor3, Format1, [StrKey|[]])
				    let <Try> =
					%% Line 117
					apply 'term_to_string'/1
					    (_cor0)
				    in  let <Length> =
					    %% Line 118
					    call 'erlang':'length'
						(Try)
					in  %% Line 119
					    case <> of
					      %% Line 120
					      <>
						  when call 'erlang':'<'
							(Length,
							 ValueLen) ->
						  %% Line 121
						  call 'io':'format'
						      (_cor3, Format2, [Try|[]])
					      %% Line 122
					      <> when 'true' ->
						  do  %% Line 123
						      call 'io':'format'
							  (_cor3, [126|[110|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]], [])
						      let <Format3> =
							  %% Line 124
							  call 'lists':'concat'
							      ([[126]|[_cor2|[[46|[57|[112|[126|[110]]]]]]]])
						      in  %% Line 125
							  call 'io':'format'
							      (_cor3, Format3, [_cor0|[]])
					    end
'term_to_string'/1 =
    %% Line 128
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 129
	    apply 'get_format'/1
		(_cor0)
	in  let <_cor2> =
		%% Line 129
		call 'io_lib':'format'
		    (_cor1, [_cor0|[]])
	    in  %% Line 129
		call 'lists':'flatten'
		    (_cor2)
'get_format'/1 =
    %% Line 131
    fun (_cor0) ->
	%% Line 132
	case call 'misc_supp':'is_string'
		 (_cor0) of
	  %% Line 133
	  <'true'> when 'true' ->
	      [126|[115]]
	  %% Line 134
	  <'false'> when 'true' ->
	      [126|[112]]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor1})
	    -| ['compiler_generated'] )
	end
'make_list'/2 =
    %% Line 137
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <0,_X_Elem> when 'true' ->
	      []
	  %% Line 138
	  <N,Elem> when 'true' ->
	      let <_cor2> =
		  call 'erlang':'-'
		      (N, 1)
	      in  let <_cor3> =
		      apply 'make_list'/2
			  (_cor2, Elem)
		  in  [Elem|_cor3]
	end
'print_items'/4 =
    %% Line 144
    fun (_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 145
	    apply 'print_one_line'/4
		(_cor3, _cor2, _cor1, [32])
	    %% Line 146
	    apply 'print_item_elements'/3
		(_cor3, _cor2, _cor0)
'print_item_elements'/3 =
    %% Line 148
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_Device,_X_Line,[]> when 'true' ->
	      'ok'
	  %% Line 149
	  <Device,Line,[{Key,Value}|T]> when 'true' ->
	      let <_cor3> =
		  %% Line 150
		  call 'lists':'concat'
		      ([[32|[32|[32]]]|[Key|[]]])
	      in  do  %% Line 150
		      apply 'print_one_line'/4
			  (Device, Line, _cor3, Value)
		      %% Line 151
		      apply 'print_item_elements'/3
			  (Device, Line, T)
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'print_item_elements',3}}] )
	    -| ['compiler_generated'] )
	end
'extra_space_between_columns'/0 =
    %% Line 156
    fun () ->
	3
'find_max_col'/2 =
    %% Line 158
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Row|T],ColumnSizes> when 'true' ->
	      let <_cor2> =
		  %% Line 159
		  call 'misc_supp':'multi_map'
		      ({'format_lib_supp','maxcol'}, %% Line 160
						     [Row|[ColumnSizes|[]]])
	      in  %% Line 159
		  apply 'find_max_col'/2
		      (T, _cor2)
	  %% Line 162
	  <[],ColumnSizes> when 'true' ->
	      ColumnSizes
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'find_max_col',2}}] )
	    -| ['compiler_generated'] )
	end
'maxcol'/2 =
    %% Line 164
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 165
	    apply 'term_to_string'/1
		(_cor1)
	in  let <_cor3> =
		%% Line 165
		call 'erlang':'length'
		    (_cor2)
	    in  %% Line 165
		call 'lists':'max'
		    ([_cor3|[_cor0|[]]])
'make_column_format'/1 =
    %% Line 167
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 168
	    apply 'extra_space_between_columns'/0
		()
	in  let <_cor2> =
		%% Line 168
		call 'erlang':'+'
		    (_cor0, _cor1)
	    in  %% Line 168
		call 'lists':'concat'
		    ([[126]|[_cor2|['s']]])
'is_correct_column_length'/2 =
    %% Line 170
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Length,[]> when 'true' ->
	      'true'
	  %% Line 171
	  <Length,[Tuple|T]> when 'true' ->
	      %% Line 172
	      case call 'erlang':'size'
		       (Tuple) of
		%% Line 173
		<_cor5>
		    when call 'erlang':'=:='
			  (_cor5,
			   Length) ->
		    apply 'is_correct_column_length'/2
			(Length, T)
		%% Line 174
		<_cor6> when 'true' ->
		    'false'
	      end
	  %% Line 176
	  <_cor7,_cor8> when 'true' ->
	      'false'
	end
'print_table'/5 =
    %% Line 178
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Device,Line,TableName,_X_TupleOfColumnNames,[]> when 'true' ->
	      do  %% Line 179
		  apply 'print_one_line'/4
		      (Device, Line, TableName, [60|[101|[109|[112|[116|[121|[32|[116|[97|[98|[108|[101|[62]]]]]]]]]]]]])
		  %% Line 180
		  call 'io':'format'
		      (Device, [126|[110]], [])
	  %% Line 182
	  <Device,Line,TableName,TupleOfColumnNames,ListOfTuples>
	      when let <_cor5> =
		    %% Line 183
		    call 'erlang':'is_list'
			(ListOfTuples)
		in  let <_cor6> =
			%% Line 183
			call 'erlang':'is_tuple'
			    (TupleOfColumnNames)
		    in  %% Line 183
			call 'erlang':'and'
			    (_cor5, _cor6) ->
	      let <_cor7> =
		  %% Line 184
		  call 'erlang':'size'
		      (TupleOfColumnNames)
	      in  %% Line 184
		  case apply 'is_correct_column_length'/2
			   (_cor7, %% Line 185
				   ListOfTuples) of
		    %% Line 186
		    <'true'> when 'true' ->
			do  %% Line 187
			    apply 'print_one_line'/4
				(Device, Line, TableName, [32])
			    let <ListOfColumnNames> =
				%% Line 188
				call 'erlang':'tuple_to_list'
				    (TupleOfColumnNames)
			    in  let <_cor11> =
				    %% Line 189
				    ( fun (_cor9) ->
					  %% Line 190
					  call 'erlang':'tuple_to_list'
					      (_cor9)
				      -| [{'id',{0,0,'-print_table/5-fun-0-'}}] )
				in  let <ListOfLists> =
					%% Line 189
					call 'lists':'map'
					    (_cor11, %% Line 192
						     ListOfTuples)
				    in  let <_cor13> =
					    %% Line 195
					    call 'erlang':'length'
						(ListOfColumnNames)
					in  let <_cor14> =
						%% Line 195
						apply 'make_list'/2
						    (_cor13, 0)
					    in  let <ColWidths> =
						    %% Line 193
						    apply 'find_max_col'/2
							([ListOfColumnNames|%% Line 194
									    ListOfLists], _cor14)
						in  let <_cor18> =
							%% Line 196
							( fun (_cor16) ->
							      %% Line 197
							      apply 'make_column_format'/1
								  (_cor16)
							  -| [{'id',{0,0,'-print_table/5-fun-1-'}}] )
						    in  let <_cor19> =
							    %% Line 196
							    call 'lists':'map'
								(_cor18, %% Line 199
									 ColWidths)
							in  let <Format> =
								%% Line 196
								call 'lists':'flatten'
								    ([_cor19|%% Line 199
									     [[126|[110]]]])
							    in  do  %% Line 200
								    call 'io':'format'
									(Device, Format, ListOfColumnNames)
								    let <_cor21> =
									%% Line 202
									apply 'extra_space_between_columns'/0
									    ()
								    in  let <_cor26> =
									    %% Line 203
									    call 'lists':'sum'
										(ColWidths)
									in  let <_cor23> =
										%% Line 204
										call 'erlang':'length'
										    (ColWidths)
									    in  let <_cor24> =
										    %% Line 204
										    call 'erlang':'-'
											(_cor23, 1)
										in  let <_cor22> =
											%% Line 205
											apply 'extra_space_between_columns'/0
											    ()
										    in  let <_cor25> =
											    %% Line 205
											    call 'erlang':'*'
												(_cor24, _cor22)
											in  let <_cor27> =
												%% Line 204
												call 'erlang':'+'
												    (_cor26, _cor25)
											    in  let <_cor28> =
												    %% Line 202
												    call 'lists':'concat'
													(['~'|[_cor21|%% Line 203
														      ['c'|['~'|%% Line 204
																[_cor27|%% Line 206
																	['c~n']]]]]])
												in  do  %% Line 201
													call 'io':'format'
													    (Device, _cor28, %% Line 206
															     [32|[45]])
													let <_cor31> =
													    %% Line 207
													    ( fun (_cor29) ->
														  %% Line 208
														  apply 'print_row'/3
														      (_cor29, Device, Format)
													      -| [{'id',{0,0,'-print_table/5-fun-2-'}}] )
													in  do  %% Line 207
														call 'lists':'foreach'
														    (_cor31, %% Line 210
															     ListOfLists)
														do  %% Line 211
														    call 'io':'format'
															(Device, '~n', [])
														    %% Line 212
														    'true'
		    %% Line 213
		    <'false'> when 'true' ->
			%% Line 214
			{'error',{'a tuple has wrong size',%% Line 215
							   {TableName,TupleOfColumnNames,ListOfTuples}}}
		    ( <_cor32> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor32})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor37,_cor36,_cor35,_cor34,_cor33> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor37,_cor36,_cor35,_cor34,_cor33})
		  -| [{'function_name',{'print_table',5}}] )
	    -| ['compiler_generated'] )
	end
'print_row'/3 =
    %% Line 221
    fun (_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 223
	    ( fun (_cor3) ->
		  apply 'term_to_string'/1
		      (_cor3)
	      -| [{'id',{0,0,'-print_row/3-fun-0-'}}] )
	in  let <_cor6> =
		%% Line 223
		call 'lists':'map'
		    (_cor5, _cor2)
	    in  %% Line 222
		call 'io':'format'
		    (_cor1, _cor0, _cor6)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('format_lib_supp')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('format_lib_supp', _cor0)
end