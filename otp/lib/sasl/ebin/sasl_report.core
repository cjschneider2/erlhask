module 'sasl_report' ['format_report'/3,
		      'module_info'/0,
		      'module_info'/1,
		      'write_report'/3]
    attributes []
'format_report'/3 =
    %% Line 23
    fun (_cor2,_cor1,_cor0) ->
	%% Line 24
	apply 'io_report'/4
	    ('io_lib', _cor2, _cor1, _cor0)
'write_report'/3 =
    %% Line 26
    fun (_cor2,_cor1,_cor0) ->
	%% Line 27
	apply 'io_report'/4
	    ('io', _cor2, _cor1, _cor0)
'io_report'/4 =
    %% Line 29
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <IO,Fd,What,{Time,{'error_report',_X_GL,{Pid,Type,Report}}}> when 'true' ->
	      %% Line 30
	      case apply 'is_my_error_report'/2
		       (What, Type) of
		%% Line 31
		<'true'> when 'true' ->
		    let <Head> =
			%% Line 32
			apply 'write_head'/3
			    (Type, Time, Pid)
		    in  %% Line 33
			apply 'write_report2'/5
			    (IO, Fd, Head, Type, Report)
		%% Line 34
		<_cor12> when 'true' ->
		    'true'
	      end
	  %% Line 36
	  <IO,Fd,What,{Time,{'info_report',_X_GL,{Pid,Type,Report}}}> when 'true' ->
	      %% Line 37
	      case apply 'is_my_info_report'/2
		       (What, Type) of
		%% Line 38
		<'true'> when 'true' ->
		    let <Head> =
			%% Line 39
			apply 'write_head'/3
			    (Type, Time, Pid)
		    in  %% Line 40
			apply 'write_report2'/5
			    (IO, Fd, Head, Type, Report)
		%% Line 41
		<_cor13> when 'true' ->
		    'true'
	      end
	  %% Line 43
	  <_X_IO,_X_Fd,_cor14,_cor15> when 'true' ->
	      %% Line 44
	      'false'
	end
'is_my_error_report'/2 =
    %% Line 46
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'all',Type> when 'true' ->
	      apply 'is_my_error_report'/1
		  (Type)
	  %% Line 47
	  <'error',Type> when 'true' ->
	      apply 'is_my_error_report'/1
		  (Type)
	  %% Line 48
	  <_cor4,_X_Type> when 'true' ->
	      'false'
	end
'is_my_error_report'/1 =
    %% Line 49
    fun (_cor0) ->
	case _cor0 of
	  <'supervisor_report'> when 'true' ->
	      'true'
	  %% Line 50
	  <'crash_report'> when 'true' ->
	      'true'
	  %% Line 51
	  <_cor2> when 'true' ->
	      'false'
	end
'is_my_info_report'/2 =
    %% Line 53
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'all',Type> when 'true' ->
	      apply 'is_my_info_report'/1
		  (Type)
	  %% Line 54
	  <'progress',Type> when 'true' ->
	      apply 'is_my_info_report'/1
		  (Type)
	  %% Line 55
	  <_cor4,_X_Type> when 'true' ->
	      'false'
	end
'is_my_info_report'/1 =
    %% Line 56
    fun (_cor0) ->
	case _cor0 of
	  <'progress'> when 'true' ->
	      'true'
	  %% Line 57
	  <_cor2> when 'true' ->
	      'false'
	end
'write_report2'/5 =
    %% Line 59
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <IO,Fd,Head,'supervisor_report',Report> when 'true' ->
	      let <Name> =
		  %% Line 60
		  apply 'sup_get'/2
		      ('supervisor', Report)
	      in  let <Context> =
		      %% Line 61
		      apply 'sup_get'/2
			  ('errorContext', Report)
		  in  let <Reason> =
			  %% Line 62
			  apply 'sup_get'/2
			      ('reason', Report)
		      in  let <Offender> =
			      %% Line 63
			      apply 'sup_get'/2
				  ('offender', Report)
			  in  let <_cor10> =
				  %% Line 66
				  call 'erlang':'++'
				      (Head, [32|[32|[32|[32|[32|[83|[117|[112|[101|[114|[118|[105|[115|[111|[114|[58|[32|[126|[112|[126|[110|[32|[32|[32|[32|[32|[67|[111|[110|[116|[101|[120|[116|[58|[32|[32|[32|[32|[126|[112|[126|[110|[32|[32|[32|[32|[32|[82|[101|[97|[115|[111|[110|[58|[32|[32|[32|[32|[32|[126|[56|[48|[46|[49|[56|[112|[126|[110|[32|[32|[32|[32|[32|[79|[102|[102|[101|[110|[100|[101|[114|[58|[32|[32|[32|[126|[56|[48|[46|[49|[56|[112|[126|[110|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
			      in  %% Line 66
				  apply 'write_report_action'/4
				      (IO, Fd, _cor10, %% Line 67
						       [Name|[Context|[Reason|[Offender|[]]]]])
	  %% Line 68
	  <IO,Fd,Head,'progress',Report> when 'true' ->
	      let <Format> =
		  %% Line 69
		  apply 'format_key_val'/1
		      (Report)
	      in  let <_cor12> =
		      %% Line 70
		      call 'erlang':'++'
			  (Head, [126|[115]])
		  in  %% Line 70
		      apply 'write_report_action'/4
			  (IO, Fd, _cor12, [Format|[]])
	  %% Line 71
	  <IO,Fd,Head,'crash_report',Report> when 'true' ->
	      let <Format> =
		  %% Line 72
		  call 'proc_lib':'format'
		      (Report)
	      in  let <_cor14> =
		      %% Line 73
		      call 'erlang':'++'
			  (Head, [126|[115]])
		  in  %% Line 73
		      apply 'write_report_action'/4
			  (IO, Fd, _cor14, [Format|[]])
	  ( <_cor19,_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17,_cor16,_cor15})
		  -| [{'function_name',{'write_report2',5}}] )
	    -| ['compiler_generated'] )
	end
'write_report_action'/4 =
    %% Line 75
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <'io',Fd,Format,Args> when 'true' ->
	      %% Line 76
	      call 'io':'format'
		  (Fd, Format, Args)
	  %% Line 77
	  <'io_lib',_X_Fd,Format,Args> when 'true' ->
	      %% Line 78
	      call 'io_lib':'format'
		  (Format, Args)
	  ( <_cor7,_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5,_cor4})
		  -| [{'function_name',{'write_report_action',4}}] )
	    -| ['compiler_generated'] )
	end
'format_key_val'/1 =
    %% Line 80
    fun (_cor0) ->
	case _cor0 of
	  <[{Tag,Data}|Rep]> when 'true' ->
	      let <_cor2> =
		  %% Line 81
		  call 'io_lib':'format'
		      ([32|[32|[32|[32|[126|[49|[54|[119|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]], [Tag|[Data|[]]])
	      in  let <_cor1> =
		      %% Line 81
		      apply 'format_key_val'/1
			  (Rep)
		  in  %% Line 81
		      call 'erlang':'++'
			  (_cor2, _cor1)
	  %% Line 82
	  <_cor4> when 'true' ->
	      %% Line 83
	      []
	end
'sup_get'/2 =
    %% Line 86
    fun (_cor1,_cor0) ->
	%% Line 87
	case call 'lists':'keysearch'
		 (_cor1, 1, _cor0) of
	  %% Line 88
	  <{'value',{_cor5,Value}}> when 'true' ->
	      %% Line 89
	      Value
	  %% Line 90
	  <_cor6> when 'true' ->
	      %% Line 91
	      []
	end
'maybe_utc'/1 =
    %% Line 94
    fun (_cor0) ->
	%% Line 95
	case call 'application':'get_env'
		 ('sasl', 'utc_log') of
	  %% Line 96
	  <{'ok','true'}> when 'true' ->
	      %% Line 97
	      case call 'calendar':'local_time_to_universal_time_dst'
		       (_cor0) of
		%% Line 98
		<[UTC|[]]> when 'true' ->
		    %% Line 99
		    {'utc',UTC}
		%% Line 100
		<[UTC1|[_X_UTC2|[]]]> when 'true' ->
		    %% Line 101
		    {'utc',UTC1}
		%% Line 102
		<[]> when 'true' ->
		    _cor0
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor1})
		  -| ['compiler_generated'] )
	      end
	  %% Line 105
	  <_cor4> when 'true' ->
	      _cor0
	end
'write_head'/3 =
    %% Line 109
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'supervisor_report',Time,Pid> when 'true' ->
	      let <_cor3> =
		  %% Line 110
		  apply 'maybe_utc'/1
		      (Time)
	      in  %% Line 110
		  apply 'write_head1'/3
		      ([83|[85|[80|[69|[82|[86|[73|[83|[79|[82|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]]]]]]], _cor3, Pid)
	  %% Line 111
	  <'crash_report',Time,Pid> when 'true' ->
	      let <_cor4> =
		  %% Line 112
		  apply 'maybe_utc'/1
		      (Time)
	      in  %% Line 112
		  apply 'write_head1'/3
		      ([67|[82|[65|[83|[72|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]], _cor4, Pid)
	  %% Line 113
	  <'progress',Time,Pid> when 'true' ->
	      let <_cor5> =
		  %% Line 114
		  apply 'maybe_utc'/1
		      (Time)
	      in  %% Line 114
		  apply 'write_head1'/3
		      ([80|[82|[79|[71|[82|[69|[83|[83|[32|[82|[69|[80|[79|[82|[84]]]]]]]]]]]]]]], _cor5, Pid)
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'write_head',3}}] )
	    -| ['compiler_generated'] )
	end
'write_head1'/3 =
    %% Line 116
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Type,{'utc',{{Y,Mo,D},{H,Mi,S}}},Pid>
	      when try
		    let <_cor4> =
			call 'erlang':'node'
			    (Pid)
		    in  let <_cor3> =
			    call 'erlang':'node'
				()
			in  call 'erlang':'/='
				(_cor4, _cor3)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor5> =
		  %% Line 118
		  apply 'month'/1
		      (Mo)
	      in  let <_cor6> =
		      %% Line 118
		      apply 't'/1
			  (H)
		  in  let <_cor7> =
			  %% Line 118
			  apply 't'/1
			      (Mi)
		      in  let <_cor8> =
			      %% Line 118
			      apply 't'/1
				  (S)
			  in  let <_cor9> =
				  %% Line 118
				  call 'erlang':'node'
				      (Pid)
			      in  %% Line 117
				  call 'io_lib':'format'
				      ([126|[110|[61|[126|[115|[61|[61|[61|[61|[32|[126|[112|[45|[126|[115|[45|[126|[112|[58|[58|[126|[115|[58|[126|[115|[58|[126|[115|[32|[85|[84|[67|[32|[40|[126|[112|[41|[32|[61|[61|[61|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 118
																																		   [Type|[D|[_cor5|[Y|[_cor6|[_cor7|[_cor8|[_cor9|[]]]]]]]]])
	  %% Line 119
	  <Type,{'utc',{{Y,Mo,D},{H,Mi,S}}},_cor28> when 'true' ->
	      let <_cor10> =
		  %% Line 121
		  apply 'month'/1
		      (Mo)
	      in  let <_cor11> =
		      %% Line 121
		      apply 't'/1
			  (H)
		  in  let <_cor12> =
			  %% Line 121
			  apply 't'/1
			      (Mi)
		      in  let <_cor13> =
			      %% Line 121
			      apply 't'/1
				  (S)
			  in  %% Line 120
			      call 'io_lib':'format'
				  ([126|[110|[61|[126|[115|[61|[61|[61|[61|[32|[126|[112|[45|[126|[115|[45|[126|[112|[58|[58|[126|[115|[58|[126|[115|[58|[126|[115|[32|[85|[84|[67|[32|[61|[61|[61|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 121
																														    [Type|[D|[_cor10|[Y|[_cor11|[_cor12|[_cor13|[]]]]]]]])
	  %% Line 122
	  <Type,{{Y,Mo,D},{H,Mi,S}},Pid>
	      when try
		    let <_cor15> =
			call 'erlang':'node'
			    (Pid)
		    in  let <_cor14> =
			    call 'erlang':'node'
				()
			in  call 'erlang':'/='
				(_cor15, _cor14)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor16> =
		  %% Line 124
		  apply 'month'/1
		      (Mo)
	      in  let <_cor17> =
		      %% Line 124
		      apply 't'/1
			  (H)
		  in  let <_cor18> =
			  %% Line 124
			  apply 't'/1
			      (Mi)
		      in  let <_cor19> =
			      %% Line 124
			      apply 't'/1
				  (S)
			  in  let <_cor20> =
				  %% Line 124
				  call 'erlang':'node'
				      (Pid)
			      in  %% Line 123
				  call 'io_lib':'format'
				      ([126|[110|[61|[126|[115|[61|[61|[61|[61|[32|[126|[112|[45|[126|[115|[45|[126|[112|[58|[58|[126|[115|[58|[126|[115|[58|[126|[115|[32|[40|[126|[112|[41|[32|[61|[61|[61|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 124
																															       [Type|[D|[_cor16|[Y|[_cor17|[_cor18|[_cor19|[_cor20|[]]]]]]]]])
	  %% Line 125
	  <Type,{{Y,Mo,D},{H,Mi,S}},_cor29> when 'true' ->
	      let <_cor21> =
		  %% Line 127
		  apply 'month'/1
		      (Mo)
	      in  let <_cor22> =
		      %% Line 127
		      apply 't'/1
			  (H)
		  in  let <_cor23> =
			  %% Line 127
			  apply 't'/1
			      (Mi)
		      in  let <_cor24> =
			      %% Line 127
			      apply 't'/1
				  (S)
			  in  %% Line 126
			      call 'io_lib':'format'
				  ([126|[110|[61|[126|[115|[61|[61|[61|[61|[32|[126|[112|[45|[126|[115|[45|[126|[112|[58|[58|[126|[115|[58|[126|[115|[58|[126|[115|[32|[61|[61|[61|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 127
																												[Type|[D|[_cor21|[Y|[_cor22|[_cor23|[_cor24|[]]]]]]]])
	  ( <_cor27,_cor26,_cor25> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor27,_cor26,_cor25})
		  -| [{'function_name',{'write_head1',3}}] )
	    -| ['compiler_generated'] )
	end
't'/1 =
    %% Line 129
    fun (_cor0) ->
	case _cor0 of
	  <X>
	      when call 'erlang':'is_integer'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 130
		  call 'erlang':'integer_to_list'
		      (X)
	      in  %% Line 130
		  apply 't1'/1
		      (_cor1)
	  %% Line 131
	  <_cor3> when 'true' ->
	      %% Line 132
	      []
	end
't1'/1 =
    %% Line 133
    fun (_cor0) ->
	case _cor0 of
	  <[X|[]]> when 'true' ->
	      [48|[X|[]]]
	  %% Line 134
	  <X> when 'true' ->
	      X
	end
'month'/1 =
    %% Line 136
    fun (_cor0) ->
	case _cor0 of
	  <1> when 'true' ->
	      [74|[97|[110]]]
	  %% Line 137
	  <2> when 'true' ->
	      [70|[101|[98]]]
	  %% Line 138
	  <3> when 'true' ->
	      [77|[97|[114]]]
	  %% Line 139
	  <4> when 'true' ->
	      [65|[112|[114]]]
	  %% Line 140
	  <5> when 'true' ->
	      [77|[97|[121]]]
	  %% Line 141
	  <6> when 'true' ->
	      [74|[117|[110]]]
	  %% Line 142
	  <7> when 'true' ->
	      [74|[117|[108]]]
	  %% Line 143
	  <8> when 'true' ->
	      [65|[117|[103]]]
	  %% Line 144
	  <9> when 'true' ->
	      [83|[101|[112]]]
	  %% Line 145
	  <10> when 'true' ->
	      [79|[99|[116]]]
	  %% Line 146
	  <11> when 'true' ->
	      [78|[111|[118]]]
	  %% Line 147
	  <12> when 'true' ->
	      [68|[101|[99]]]
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'month',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('sasl_report')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('sasl_report', _cor0)
end