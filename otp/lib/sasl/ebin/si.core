module 'si' ['abbrevs'/0,
	     'h'/0,
	     'help'/0,
	     'module_info'/0,
	     'module_info'/1,
	     'pi'/1,
	     'pi'/2,
	     'pi'/3,
	     'pi'/4,
	     'pi_impl'/2,
	     'ppi'/1,
	     'ppi'/3,
	     'start'/0,
	     'start'/1,
	     'start_log'/1,
	     'stop'/0,
	     'stop_log'/0,
	     'test'/0]
    attributes []
'h'/0 =
    %% Line 53
    fun () ->
	apply 'print_help'/0
	    ()
'help'/0 =
    %% Line 54
    fun () ->
	apply 'print_help'/0
	    ()
'start'/0 =
    %% Line 56
    fun () ->
	call 'si_sasl_supp':'start'
	    ()
'start'/1 =
    %% Line 57
    fun (_cor0) ->
	call 'si_sasl_supp':'start'
	    (_cor0)
'stop'/0 =
    %% Line 59
    fun () ->
	call 'si_sasl_supp':'stop'
	    ()
'start_log'/1 =
    %% Line 61
    fun (_cor0) ->
	%% Line 62
	call 'si_sasl_supp':'start_log'
	    (_cor0)
'stop_log'/0 =
    %% Line 64
    fun () ->
	%% Line 65
	call 'si_sasl_supp':'stop_log'
	    ()
'abbrevs'/0 =
    %% Line 72
    fun () ->
	let <_cor1> =
	    %% Line 73
	    call 'si_sasl_supp':'process_abbrevs'
		()
	in  let <_cor0> =
		%% Line 74
		apply 'process_abbrevs'/0
		    ()
	    in  let <_cor2> =
		    %% Line 73
		    call 'lists':'append'
			(_cor1, _cor0)
		in  %% Line 73
		    call 'io':'format'
			([126|[112]], [_cor2|%% Line 74
					     []])
'pi'/1 =
    %% Line 80
    fun (_cor0) ->
	%% Line 81
	call 'si_sasl_supp':'si_exec'
	    ({'si','pi_impl'}, ['normal'|[_cor0|[]]])
'pi'/2 =
    %% Line 83
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 84
	    call 'si_sasl_supp':'valid_opt'
		(_cor1)
	in  %% Line 84
	    call 'si_sasl_supp':'si_exec'
		({'si','pi_impl'}, [_cor2|[_cor0|[]]])
'pi'/3 =
    %% Line 86
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <A,B,C>
	      when try
		    let <_cor3> =
			call 'erlang':'is_integer'
			    (A)
		    in  let <_cor4> =
			    call 'erlang':'is_integer'
				(B)
			in  let <_cor5> =
				call 'erlang':'is_integer'
				    (C)
			    in  let <_cor6> =
				    call 'erlang':'and'
					(_cor4, _cor5)
				in  call 'erlang':'and'
					(_cor3, _cor6)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 87
	      call 'si_sasl_supp':'si_exec'
		  ({'si','pi_impl'}, ['normal'|[{A,B,C}|[]]])
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7})
		  -| [{'function_name',{'pi',3}}] )
	    -| ['compiler_generated'] )
	end
'pi'/4 =
    %% Line 89
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Opt,A,B,C>
	      when try
		    let <_cor4> =
			call 'erlang':'is_integer'
			    (A)
		    in  let <_cor5> =
			    call 'erlang':'is_integer'
				(B)
			in  let <_cor6> =
				call 'erlang':'is_integer'
				    (C)
			    in  let <_cor7> =
				    call 'erlang':'and'
					(_cor5, _cor6)
				in  call 'erlang':'and'
					(_cor4, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor8> =
		  %% Line 90
		  call 'si_sasl_supp':'valid_opt'
		      (Opt)
	      in  %% Line 90
		  call 'si_sasl_supp':'si_exec'
		      ({'si','pi_impl'}, [_cor8|[{A,B,C}|[]]])
	  ( <_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'pi',4}}] )
	    -| ['compiler_generated'] )
	end
'ppi'/1 =
    %% Line 95
    fun (_cor0) ->
	%% Line 96
	call 'si_sasl_supp':'ppi'
	    (_cor0)
'ppi'/3 =
    %% Line 97
    fun (_cor2,_cor1,_cor0) ->
	%% Line 98
	call 'si_sasl_supp':'ppi'
	    (_cor2, _cor1, _cor0)
'print_help'/0 =
    %% Line 106
    fun () ->
	do  %% Line 107
	    call 'si_sasl_supp':'p'
		([126|[110|[83|[116|[97|[116|[117|[115|[32|[73|[110|[115|[112|[101|[99|[116|[105|[111|[110|[32|[116|[111|[111|[108|[32|[45|[32|[117|[115|[97|[103|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	    do  %% Line 108
		call 'si_sasl_supp':'p'
		    ([61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61|[61]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		do  %% Line 109
		    call 'si_sasl_supp':'p'
			([32|[32|[32|[32|[70|[111|[114|[32|[97|[108|[108|[32|[116|[104|[101|[115|[101|[32|[102|[117|[110|[99|[116|[105|[111|[110|[115|[44|[32|[79|[112|[116|[32|[105|[115|[32|[97|[110|[32|[111|[112|[116|[105|[111|[110|[97|[108|[32|[97|[114|[103|[117|[109|[101|[110|[116]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		    do  %% Line 110
			call 'si_sasl_supp':'p'
			    ([32|[32|[32|[32|[119|[104|[105|[99|[104|[32|[99|[97|[110|[32|[98|[101|[32|[39|[110|[111|[114|[109|[97|[108|[39|[32|[111|[114|[32|[39|[97|[108|[108|[39|[59|[32|[100|[101|[102|[97|[117|[108|[116|[32|[105|[115|[32|[39|[110|[111|[114|[109|[97|[108|[39|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
			do  %% Line 111
			    call 'si_sasl_supp':'p'
				([32|[32|[32|[32|[73|[102|[32|[39|[97|[108|[108|[39|[44|[32|[97|[108|[108|[32|[105|[110|[102|[111|[114|[109|[97|[116|[105|[111|[110|[32|[119|[105|[108|[108|[32|[98|[101|[32|[112|[114|[105|[110|[116|[101|[100|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
			    do  %% Line 112
				call 'si_sasl_supp':'p'
				    ([32|[32|[32|[32|[65|[32|[80|[105|[100|[32|[99|[97|[110|[32|[98|[101|[58|[32|[34|[60|[65|[46|[66|[46|[67|[62|[34|[44|[32|[123|[65|[44|[32|[66|[44|[32|[67|[125|[44|[32|[66|[44|[32|[97|[32|[114|[101|[103|[105|[115|[116|[101|[114|[101|[100|[95|[110|[97|[109|[101|[32|[111|[114|[32|[97|[110|[32|[97|[98|[98|[114|[101|[118|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				do  %% Line 113
				    call 'si_sasl_supp':'p'
					([65|[78|[89|[32|[80|[82|[79|[67|[69|[83|[83]]]]]]]]]]])
				    do  %% Line 114
					call 'si_sasl_supp':'p'
					    ([115|[105|[58|[112|[105|[40|[91|[79|[112|[116|[44|[93|[32|[80|[105|[100|[41|[32|[32|[32|[45|[32|[70|[111|[114|[109|[97|[116|[116|[101|[100|[32|[105|[110|[102|[111|[114|[109|[97|[116|[105|[111|[110|[32|[97|[98|[111|[117|[116|[32|[97|[110|[121|[32|[112|[114|[111|[99|[101|[115|[115|[32|[116|[104|[97|[116]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
					do  %% Line 115
					    call 'si_sasl_supp':'p'
						([32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[83|[73|[32|[114|[101|[99|[111|[103|[110|[105|[115|[101|[115|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
					    do  %% Line 116
						call 'si_sasl_supp':'p'
						    ([115|[105|[58|[112|[105|[40|[91|[79|[112|[116|[44|[93|[32|[65|[44|[66|[44|[67|[41|[32|[45|[32|[83|[97|[109|[101|[32|[97|[115|[32|[115|[105|[58|[112|[105|[40|[123|[65|[44|[32|[66|[44|[32|[67|[125|[41|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
						do  %% Line 117
						    call 'si_sasl_supp':'p'
							([115|[105|[58|[112|[112|[105|[40|[80|[105|[100|[41|[32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[80|[114|[101|[116|[116|[121|[32|[102|[111|[114|[109|[97|[116|[105|[110|[103|[32|[111|[102|[32|[112|[114|[111|[99|[101|[115|[115|[95|[105|[110|[102|[111|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
						    do  %% Line 118
							call 'si_sasl_supp':'p'
							    ([32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[87|[111|[114|[107|[115|[32|[102|[111|[114|[32|[97|[110|[121|[32|[112|[114|[111|[99|[101|[115|[115|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
							do  %% Line 119
							    call 'si_sasl_supp':'p'
								([77|[73|[83|[67]]]])
							    do  %% Line 120
								call 'si_sasl_supp':'p'
								    ([115|[105|[58|[97|[98|[98|[114|[101|[118|[115|[40|[41|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[76|[105|[115|[116|[115|[32|[118|[97|[108|[105|[100|[32|[97|[98|[98|[114|[101|[118|[105|[97|[116|[105|[111|[110|[115|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
								do  %% Line 121
								    call 'si_sasl_supp':'p'
									([115|[105|[58|[115|[116|[97|[114|[116|[95|[108|[111|[103|[40|[70|[105|[108|[101|[110|[97|[109|[101|[41|[32|[45|[32|[76|[111|[103|[103|[105|[110|[103|[32|[116|[111|[32|[102|[105|[108|[101|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
								    do  %% Line 122
									call 'si_sasl_supp':'p'
									    ([115|[105|[58|[115|[116|[111|[112|[95|[108|[111|[103|[40|[41]]]]]]]]]]]]])
									do  %% Line 123
									    call 'si_sasl_supp':'p'
										([115|[105|[58|[115|[116|[97|[114|[116|[40|[41|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[83|[116|[97|[114|[116|[115|[32|[83|[116|[97|[116|[117|[115|[32|[73|[110|[115|[112|[101|[99|[116|[105|[111|[110|[32|[40|[116|[104|[101|[32|[115|[105|[95|[115|[101|[114|[118|[101|[114|[41|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
									    do  %% Line 124
										call 'si_sasl_supp':'p'
										    ([115|[105|[58|[115|[116|[97|[114|[116|[40|[91|[123|[115|[116|[97|[114|[116|[95|[108|[111|[103|[44|[32|[70|[105|[108|[101|[78|[97|[109|[101|[125|[93|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
										%% Line 125
										call 'si_sasl_supp':'p'
										    ([115|[105|[58|[115|[116|[111|[112|[40|[41|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[45|[32|[83|[104|[117|[116|[32|[100|[111|[119|[110|[32|[83|[73|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
'pi_impl'/2 =
    %% Line 131
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 132
	    apply 'try_local_expand_abbrev'/1
		(_cor0)
	in  %% Line 132
	    case call 'si_sasl_supp':'make_pid'
		     (_cor2) of
	      %% Line 133
	      <Pid>
		  when call 'erlang':'is_pid'
			(Pid) ->
		  %% Line 134
		  case call 'si_sasl_supp':'status_info'
			   (Pid) of
		    %% Line 135
		    <{'status_info',_cor8,{'module',Module},Data}>
			when call 'erlang':'=:='
			      (_cor8,
			       Pid) ->
			%% Line 136
			call 'si_sasl_supp':'do_best_printout'
			    (_cor1, Pid, Module, Data)
		    %% Line 137
		    <{'error',Reason}> when 'true' ->
			let <_X_> =
			    %% Line 138
			    ( call 'si_sasl_supp':'ppi_impl'
				  (Pid)
			      -| ['result_not_wanted'] )
			in  %% Line 139
			    {'error',{[99|[97|[110|[32|[110|[111|[116|[32|[103|[101|[116|[32|[115|[116|[97|[116|[117|[115|[32|[105|[110|[102|[111|[32|[102|[114|[111|[109|[32|[112|[114|[111|[99|[101|[115|[115|[58]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],_cor0,%% Line 141
																															       Reason}}
		    %% Line 142
		    <Else> when 'true' ->
			%% Line 143
			{'error',{[117|[110|[107|[110|[111|[119|[110|[32|[115|[116|[97|[116|[117|[115|[32|[105|[110|[102|[111]]]]]]]]]]]]]]]]]]],Else}}
		  end
	      %% Line 145
	      <{'error',Reason}> when 'true' ->
		  %% Line 146
		  {'error',Reason}
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor5})
		-| ['compiler_generated'] )
	    end
'try_local_expand_abbrev'/1 =
    %% Line 152
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 153
	    apply 'process_abbrevs'/0
		()
	in  %% Line 153
	    case call 'si_sasl_supp':'expand_abbrev'
		     (_cor0, _cor1) of
	      %% Line 154
	      <{'value',{_cor4,RealName}}> when 'true' ->
		  RealName
	      %% Line 155
	      <_cor5> when 'true' ->
		  _cor0
	    end
'process_abbrevs'/0 =
    %% Line 158
    fun () ->
	%% Line 159
	[]
'test'/0 =
    %% Line 162
    fun () ->
	let <_cor1> =
	    %% Line 164
	    call 'si_sasl_supp':'process_abbrevs'
		()
	in  let <_cor0> =
		%% Line 165
		apply 'process_abbrevs'/0
		    ()
	    in  let <_cor2> =
		    %% Line 164
		    call 'lists':'append'
			(_cor1, _cor0)
		in  %% Line 163
		    call 'lists':'foreach'
			(( 'test_all_registered'/1
			   -| [{'id',{0,0,'-test/0-fun-0-'}}] ), _cor2)
'test_all_registered'/1 =
    %% Line 167
    fun (_cor0) ->
	case _cor0 of
	  <{Al,_X_Ful}> when 'true' ->
	      %% Line 168
	      call 'si':'pi'
		  ('all', Al)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'test_all_registered',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('si')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('si', _cor0)
end