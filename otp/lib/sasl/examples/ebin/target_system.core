module 'target_system' ['create'/1,
			'create'/2,
			'install'/2,
			'module_info'/0,
			'module_info'/1]
    attributes []
'create'/1 =
    %% Line 29
    fun (_cor0) ->
	%% Line 30
	apply 'create'/2
	    (_cor0, [])
'create'/2 =
    %% Line 32
    fun (_cor1,_cor0) ->
	let <RelFile> =
	    %% Line 33
	    call 'erlang':'++'
		(_cor1, [46|[114|[101|[108]]]])
	in  let <Dir> =
		%% Line 34
		call 'filename':'dirname'
		    (_cor1)
	    in  let <PlainRelFileName> =
		    %% Line 35
		    call 'filename':'join'
			(Dir, [112|[108|[97|[105|[110]]]]])
		in  let <PlainRelFile> =
			%% Line 36
			call 'erlang':'++'
			    (PlainRelFileName, [46|[114|[101|[108]]]])
		    in  do  %% Line 37
			    call 'io':'fwrite'
				([82|[101|[97|[100|[105|[110|[103|[32|[102|[105|[108|[101|[58|[32|[126|[116|[112|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]], [RelFile|[]])
			    %% Line 38
			    case call 'file':'consult'
				     (RelFile) of
			      <{'ok',[RelSpec|[]]}> when 'true' ->
				  do  %% Line 39
				      call 'io':'fwrite'
					  ([67|[114|[101|[97|[116|[105|[110|[103|[32|[102|[105|[108|[101|[58|[32|[126|[116|[112|[32|[102|[114|[111|[109|[32|[126|[116|[112|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 40
																												       [PlainRelFile|[RelFile|[]]])
				      %% Line 44
				      case RelSpec of
					<{'release',{RelName,RelVsn},{'erts',ErtsVsn},AppVsns}> when 'true' ->
					    let <_cor10> =
						%% Line 48
						( fun (_cor8) ->
						      case _cor8 of
							<{'kernel',_cor43}> when 'true' ->
							    %% Line 49
							    'true'
							%% Line 50
							<{'stdlib',_cor44}> when 'true' ->
							    %% Line 51
							    'true'
							%% Line 52
							<_cor45> when 'true' ->
							    %% Line 53
							    'false'
						      end
						  -| [{'id',{0,0,'-create/2-fun-0-'}}] )
					    in  let <_cor11> =
						    %% Line 48
						    call 'lists':'filter'
							(_cor10, %% Line 54
								 AppVsns)
						in  let <PlainRelSpec> =
							%% Line 45
							{'release',%% Line 46
								   {RelName,RelVsn},%% Line 47
										    {'erts',ErtsVsn},_cor11}
						    in  %% Line 56
							case call 'file':'open'
								 (PlainRelFile, ['write']) of
							  <{'ok',Fd}> when 'true' ->
							      do  %% Line 57
								  call 'io':'fwrite'
								      (Fd, [126|[112|[46|[126|[110]]]]], [PlainRelSpec|[]])
								  do  %% Line 58
								      call 'file':'close'
									  (Fd)
								      do  %% Line 60
									  call 'io':'fwrite'
									      ([77|[97|[107|[105|[110|[103|[32|[34|[126|[116|[115|[46|[115|[99|[114|[105|[112|[116|[34|[32|[97|[110|[100|[32|[34|[126|[116|[115|[46|[98|[111|[111|[116|[34|[32|[102|[105|[108|[101|[115|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 61
																																										 [PlainRelFileName|[PlainRelFileName|[]]])
									  do  %% Line 62
									      apply 'make_script'/2
										  (PlainRelFileName, _cor0)
									      do  %% Line 64
										  call 'io':'fwrite'
										      ([77|[97|[107|[105|[110|[103|[32|[34|[126|[116|[115|[46|[115|[99|[114|[105|[112|[116|[34|[32|[97|[110|[100|[32|[34|[126|[116|[115|[46|[98|[111|[111|[116|[34|[32|[102|[105|[108|[101|[115|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 65
																																											 [_cor1|[_cor1|[]]])
										  do  %% Line 66
										      apply 'make_script'/2
											  (_cor1, _cor0)
										      let <TarFileName> =
											  %% Line 68
											  call 'erlang':'++'
											      (_cor1, [46|[116|[97|[114|[46|[103|[122]]]]]]])
										      in  do  %% Line 69
											      call 'io':'fwrite'
												  ([67|[114|[101|[97|[116|[105|[110|[103|[32|[116|[97|[114|[32|[102|[105|[108|[101|[32|[126|[116|[112|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]], [TarFileName|[]])
											      do  %% Line 70
												  apply 'make_tar'/2
												      (_cor1, _cor0)
												  let <TmpDir> =
												      %% Line 72
												      call 'filename':'join'
													  (Dir, [116|[109|[112]]])
												  in  do  %% Line 73
													  call 'io':'fwrite'
													      ([67|[114|[101|[97|[116|[105|[110|[103|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121|[32|[126|[116|[112|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]], [TmpDir|[]])
													  do  %% Line 74
													      call 'file':'make_dir'
														  (TmpDir)
													      do  %% Line 76
														  call 'io':'fwrite'
														      ([69|[120|[116|[114|[97|[99|[116|[105|[110|[103|[32|[126|[116|[112|[32|[105|[110|[116|[111|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121|[32|[126|[116|[112|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [TarFileName|[TmpDir|[]]])
														  do  %% Line 77
														      apply 'extract_tar'/2
															  (TarFileName, TmpDir)
														      let <TmpBinDir> =
															  %% Line 79
															  call 'filename':'join'
															      ([TmpDir|[[98|[105|[110]]]]])
														      in  let <_cor17> =
															      %% Line 80
															      call 'erlang':'++'
																  ([101|[114|[116|[115|[45]]]]], ErtsVsn)
															  in  let <ErtsBinDir> =
																  %% Line 80
																  call 'filename':'join'
																      ([TmpDir|[_cor17|[[98|[105|[110]]]]]])
															      in  do  %% Line 81
																      call 'io':'fwrite'
																	  ([68|[101|[108|[101|[116|[105|[110|[103|[32|[34|[101|[114|[108|[34|[32|[97|[110|[100|[32|[34|[115|[116|[97|[114|[116|[34|[32|[105|[110|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121|[32|[126|[116|[112|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 82
																																																				[ErtsBinDir|[]])
																      let <_cor19> =
																	  %% Line 83
																	  call 'filename':'join'
																	      ([ErtsBinDir|[[101|[114|[108]]]]])
																      in  do  %% Line 83
																	      call 'file':'delete'
																		  (_cor19)
																	      let <_cor20> =
																		  %% Line 84
																		  call 'filename':'join'
																		      ([ErtsBinDir|[[115|[116|[97|[114|[116]]]]]]])
																	      in  do  %% Line 84
																		      call 'file':'delete'
																			  (_cor20)
																		      do  %% Line 86
																			  call 'io':'fwrite'
																			      ([67|[114|[101|[97|[116|[105|[110|[103|[32|[116|[101|[109|[112|[111|[114|[97|[114|[121|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121|[32|[126|[116|[112|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [TmpBinDir|[]])
																			  do  %% Line 87
																			      call 'file':'make_dir'
																				  (TmpBinDir)
																			      let <_cor21> =
																				  %% Line 90
																				  call 'filename':'join'
																				      ([TmpBinDir|[[115|[116|[97|[114|[116|[46|[98|[111|[111|[116]]]]]]]]]]]])
																			      in  do  %% Line 89
																				      call 'io':'fwrite'
																					  ([67|[111|[112|[121|[105|[110|[103|[32|[102|[105|[108|[101|[32|[34|[126|[116|[115|[46|[98|[111|[111|[116|[34|[32|[116|[111|[32|[126|[116|[112|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 90
																																														       [PlainRelFileName|[_cor21|[]]])
																				      let <_cor23> =
																					  %% Line 91
																					  call 'erlang':'++'
																					      (PlainRelFileName, [46|[98|[111|[111|[116]]]]])
																				      in  let <_cor22> =
																					      %% Line 91
																					      call 'filename':'join'
																						  ([TmpBinDir|[[115|[116|[97|[114|[116|[46|[98|[111|[111|[116]]]]]]]]]]]])
																					  in  do  %% Line 91
																						  apply 'copy_file'/2
																						      (_cor23, _cor22)
																						  do  %% Line 93
																						      call 'io':'fwrite'
																							  ([67|[111|[112|[121|[105|[110|[103|[32|[102|[105|[108|[101|[115|[32|[34|[101|[112|[109|[100|[34|[44|[32|[34|[114|[117|[110|[95|[101|[114|[108|[34|[32|[97|[110|[100|[32|[34|[116|[111|[95|[101|[114|[108|[34|[32|[102|[114|[111|[109|[32|[10|[126|[116|[112|[32|[116|[111|[32|[126|[116|[112|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 95
																																																																						     [ErtsBinDir|[TmpBinDir|[]]])
																						      let <_cor25> =
																							  %% Line 96
																							  call 'filename':'join'
																							      ([ErtsBinDir|[[101|[112|[109|[100]]]]]])
																						      in  let <_cor24> =
																							      %% Line 97
																							      call 'filename':'join'
																								  ([TmpBinDir|[[101|[112|[109|[100]]]]]])
																							  in  do  %% Line 96
																								  apply 'copy_file'/3
																								      (_cor25, _cor24, %% Line 97
																										       ['preserve'])
																								  let <_cor27> =
																								      %% Line 98
																								      call 'filename':'join'
																									  ([ErtsBinDir|[[114|[117|[110|[95|[101|[114|[108]]]]]]]]])
																								  in  let <_cor26> =
																									  %% Line 99
																									  call 'filename':'join'
																									      ([TmpBinDir|[[114|[117|[110|[95|[101|[114|[108]]]]]]]]])
																								      in  do  %% Line 98
																									      apply 'copy_file'/3
																										  (_cor27, _cor26, %% Line 99
																												   ['preserve'])
																									      let <_cor29> =
																										  %% Line 100
																										  call 'filename':'join'
																										      ([ErtsBinDir|[[116|[111|[95|[101|[114|[108]]]]]]]])
																									      in  let <_cor28> =
																										      %% Line 101
																										      call 'filename':'join'
																											  ([TmpBinDir|[[116|[111|[95|[101|[114|[108]]]]]]]])
																										  in  do  %% Line 100
																											  apply 'copy_file'/3
																											      (_cor29, _cor28, %% Line 101
																													       ['preserve'])
																											  let <TmpLogDir> =
																											      %% Line 105
																											      call 'filename':'join'
																												  ([TmpDir|[[108|[111|[103]]]]])
																											  in  do  %% Line 106
																												  call 'io':'fwrite'
																												      ([67|[114|[101|[97|[116|[105|[110|[103|[32|[116|[101|[109|[112|[111|[114|[97|[114|[121|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121|[32|[126|[116|[112|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [TmpLogDir|[]])
																												  %% Line 107
																												  case call 'file':'make_dir'
																													   (TmpLogDir) of
																												    <'ok'> when 'true' ->
																													let <StartErlDataFile> =
																													    %% Line 109
																													    call 'filename':'join'
																														([TmpDir|[[114|[101|[108|[101|[97|[115|[101|[115]]]]]]]]|[[115|[116|[97|[114|[116|[95|[101|[114|[108|[46|[100|[97|[116|[97]]]]]]]]]]]]]]]]])
																													in  do  %% Line 110
																														call 'io':'fwrite'
																														    ([67|[114|[101|[97|[116|[105|[110|[103|[32|[126|[116|[112|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]], [StartErlDataFile|[]])
																														let <StartErlData> =
																														    %% Line 111
																														    call 'io_lib':'fwrite'
																															([126|[115|[32|[126|[115|[126|[110]]]]]]], [ErtsVsn|[RelVsn|[]]])
																														in  do  %% Line 112
																															apply 'write_file'/2
																															    (StartErlDataFile, StartErlData)
																															do  %% Line 114
																															    call 'io':'fwrite'
																																([82|[101|[99|[114|[101|[97|[116|[105|[110|[103|[32|[116|[97|[114|[32|[102|[105|[108|[101|[32|[126|[116|[112|[32|[102|[114|[111|[109|[32|[99|[111|[110|[116|[101|[110|[116|[115|[32|[105|[110|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121|[32|[126|[116|[112|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 115
																																																																											[TarFileName|[TmpDir|[]]])
																															    %% Line 116
																															    case call 'erl_tar':'open'
																																     (TarFileName, ['write'|['compressed']]) of
																															      <{'ok',Tar}> when 'true' ->
																																  let <ErtsDir> =
																																      %% Line 119
																																      call 'erlang':'++'
																																	  ([101|[114|[116|[115|[45]]]]], ErtsVsn)
																																  in  let <_cor36> =
																																	  %% Line 120
																																	  call 'filename':'join'
																																	      (TmpDir, [98|[105|[110]]])
																																      in  do  %% Line 120
																																	      call 'erl_tar':'add'
																																		  (Tar, _cor36, [98|[105|[110]]], [])
																																	      let <_cor37> =
																																		  %% Line 121
																																		  call 'filename':'join'
																																		      (TmpDir, ErtsDir)
																																	      in  do  %% Line 121
																																		      call 'erl_tar':'add'
																																			  (Tar, _cor37, ErtsDir, [])
																																		      let <_cor38> =
																																			  %% Line 122
																																			  call 'filename':'join'
																																			      (TmpDir, [114|[101|[108|[101|[97|[115|[101|[115]]]]]]]])
																																		      in  do  %% Line 122
																																			      call 'erl_tar':'add'
																																				  (Tar, _cor38, [114|[101|[108|[101|[97|[115|[101|[115]]]]]]]], [])
																																			      let <_cor39> =
																																				  %% Line 123
																																				  call 'filename':'join'
																																				      (TmpDir, [108|[105|[98]]])
																																			      in  do  %% Line 123
																																				      call 'erl_tar':'add'
																																					  (Tar, _cor39, [108|[105|[98]]], [])
																																				      let <_cor40> =
																																					  %% Line 124
																																					  call 'filename':'join'
																																					      (TmpDir, [108|[111|[103]]])
																																				      in  do  %% Line 124
																																					      call 'erl_tar':'add'
																																						  (Tar, _cor40, [108|[111|[103]]], [])
																																					      do  %% Line 125
																																						  call 'erl_tar':'close'
																																						      (Tar)
																																						  do  %% Line 127
																																						      call 'io':'fwrite'
																																							  ([82|[101|[109|[111|[118|[105|[110|[103|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121|[32|[126|[116|[112|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]], [TmpDir|[]])
																																						      do  %% Line 128
																																							  apply 'remove_dir_tree'/1
																																							      (TmpDir)
																																							  %% Line 129
																																							  'ok'
																															      ( <_cor34> when 'true' ->
																																    primop 'match_fail'
																																	({'badmatch',_cor34})
																																-| ['compiler_generated'] )
																															    end
																												    ( <_cor31> when 'true' ->
																													  primop 'match_fail'
																													      ({'badmatch',_cor31})
																												      -| ['compiler_generated'] )
																												  end
							  ( <_cor13> when 'true' ->
								primop 'match_fail'
								    ({'badmatch',_cor13})
							    -| ['compiler_generated'] )
							end
					( <_cor7> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor7})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor6})
				-| ['compiler_generated'] )
			    end
'install'/2 =
    %% Line 132
    fun (_cor1,_cor0) ->
	let <TarFile> =
	    %% Line 133
	    call 'erlang':'++'
		(_cor1, [46|[116|[97|[114|[46|[103|[122]]]]]]])
	in  do  %% Line 134
		call 'io':'fwrite'
		    ([69|[120|[116|[114|[97|[99|[116|[105|[110|[103|[32|[126|[116|[112|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]], [TarFile|[]])
		do  %% Line 135
		    apply 'extract_tar'/2
			(TarFile, _cor0)
		    let <StartErlDataFile> =
			%% Line 136
			call 'filename':'join'
			    ([_cor0|[[114|[101|[108|[101|[97|[115|[101|[115]]]]]]]]|[[115|[116|[97|[114|[116|[95|[101|[114|[108|[46|[100|[97|[116|[97]]]]]]]]]]]]]]]]])
		    in  %% Line 137
			case apply 'read_txt_file'/1
				 (StartErlDataFile) of
			  <{'ok',StartErlData}> when 'true' ->
			      %% Line 138
			      case call 'string':'tokens'
				       (StartErlData, [32|[10]]) of
				<[ErlVsn|[_X_RelVsn|_cor17]]> when 'true' ->
				    let <_cor6> =
					%% Line 139
					call 'erlang':'++'
					    ([101|[114|[116|[115|[45]]]]], ErlVsn)
				    in  let <ErtsBinDir> =
					    %% Line 139
					    call 'filename':'join'
						([_cor0|[_cor6|[[98|[105|[110]]]]]])
					in  let <BinDir> =
						%% Line 140
						call 'filename':'join'
						    ([_cor0|[[98|[105|[110]]]]])
					    in  do  %% Line 141
						    call 'io':'fwrite'
							([83|[117|[98|[115|[116|[105|[116|[117|[116|[105|[110|[103|[32|[105|[110|[32|[101|[114|[108|[46|[115|[114|[99|[44|[32|[115|[116|[97|[114|[116|[46|[115|[114|[99|[32|[97|[110|[100|[32|[115|[116|[97|[114|[116|[95|[101|[114|[108|[46|[115|[114|[99|[32|[116|[111|[32|[102|[111|[114|[109|[32|[101|[114|[108|[44|[32|[115|[116|[97|[114|[116|[32|[97|[110|[100|[32|[115|[116|[97|[114|[116|[95|[101|[114|[108|[32|[46|[46|[46|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
						    do  %% Line 143
							apply 'subst_src_scripts'/5
							    ([[101|[114|[108]]]|[[115|[116|[97|[114|[116]]]]]|[[115|[116|[97|[114|[116|[95|[101|[114|[108]]]]]]]]]]]], ErtsBinDir, BinDir, %% Line 144
																							   [{[70|[73|[78|[65|[76|[95|[82|[79|[79|[84|[68|[73|[82]]]]]]]]]]]]],_cor0}|[{[69|[77|[85]]],[98|[101|[97|[109]]]]}]], %% Line 145
																																						['preserve'])
							let <_cor9> =
							    %% Line 148
							    call 'filename':'join'
								(BinDir, [115|[116|[97|[114|[116]]]]])
							in  %% Line 148
							    case call 'file':'change_mode'
								     (_cor9, 493) of
							      <'ok'> when 'true' ->
								  let <_cor11> =
								      %% Line 149
								      call 'filename':'join'
									  (BinDir, [115|[116|[97|[114|[116|[95|[101|[114|[108]]]]]]]]])
								  in  %% Line 149
								      case call 'file':'change_mode'
									       (_cor11, 493) of
									<'ok'> when 'true' ->
									    do  %% Line 151
										call 'io':'fwrite'
										    ([67|[114|[101|[97|[116|[105|[110|[103|[32|[116|[104|[101|[32|[82|[69|[76|[69|[65|[83|[69|[83|[32|[102|[105|[108|[101|[32|[46|[46|[46|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
										let <_cor13> =
										    %% Line 153
										    call 'filename':'basename'
											(_cor1)
										in  let <_cor14> =
											%% Line 152
											call 'filename':'join'
											    ([_cor0|[[114|[101|[108|[101|[97|[115|[101|[115]]]]]]]]|%% Line 153
																		    [_cor13|[]]]])
										    in  %% Line 152
											apply 'create_RELEASES'/2
											    (_cor0, _cor14)
									( <_cor12> when 'true' ->
									      primop 'match_fail'
										  ({'badmatch',_cor12})
									  -| ['compiler_generated'] )
								      end
							      ( <_cor10> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_cor10})
								-| ['compiler_generated'] )
							    end
				( <_cor5> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor5})
				  -| ['compiler_generated'] )
			      end
			  ( <_cor4> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor4})
			    -| ['compiler_generated'] )
			end
'make_script'/2 =
    %% Line 159
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 161
	    call 'filename':'dirname'
		(_cor1)
	in  %% Line 160
	    call 'systools':'make_script'
		(_cor1, ['no_module_tests'|%% Line 161
					   [{'outdir',_cor2}|_cor0]])
'make_tar'/2 =
    %% Line 166
    fun (_cor1,_cor0) ->
	let <RootDir> =
	    %% Line 167
	    call 'code':'root_dir'
		()
	in  let <_cor3> =
		%% Line 169
		call 'filename':'dirname'
		    (_cor1)
	    in  %% Line 168
		call 'systools':'make_tar'
		    (_cor1, [{'erts',RootDir}|%% Line 169
					      [{'outdir',_cor3}|_cor0]])
'extract_tar'/2 =
    %% Line 174
    fun (_cor1,_cor0) ->
	%% Line 175
	call 'erl_tar':'extract'
	    (_cor1, [{'cwd',_cor0}|['compressed']])
'create_RELEASES'/2 =
    %% Line 177
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 178
	    call 'erlang':'++'
		(_cor0, [46|[114|[101|[108]]]])
	in  %% Line 178
	    call 'release_handler':'create_RELEASES'
		(_cor1, _cor2)
'subst_src_scripts'/5 =
    %% Line 180
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 181
	    ( fun (_cor5) ->
		  %% Line 182
		  apply 'subst_src_script'/5
		      (_cor5, _cor3, _cor2, _cor1, _cor0)
	      -| [{'id',{0,0,'-subst_src_scripts/5-fun-0-'}}] )
	in  %% Line 181
	    call 'lists':'foreach'
		(_cor7, _cor4)
'subst_src_script'/5 =
    %% Line 186
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 187
	    call 'erlang':'++'
		(_cor4, [46|[115|[114|[99]]]])
	in  let <_cor7> =
		%% Line 187
		call 'filename':'join'
		    ([_cor3|[_cor6|[]]])
	    in  let <_cor5> =
		    %% Line 188
		    call 'filename':'join'
			([_cor2|[_cor4|[]]])
		in  %% Line 187
		    apply 'subst_file'/4
			(_cor7, _cor5, _cor1, _cor0)
'subst_file'/4 =
    %% Line 191
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 192
	case apply 'read_txt_file'/1
		 (_cor3) of
	  <{'ok',Conts}> when 'true' ->
	      let <NConts> =
		  %% Line 193
		  apply 'subst'/2
		      (Conts, _cor1)
	      in  do  %% Line 194
		      apply 'write_file'/2
			  (_cor2, NConts)
		      %% Line 195
		      case call 'lists':'member'
			       ('preserve', _cor0) of
			%% Line 196
			<'true'> when 'true' ->
			    %% Line 197
			    case call 'file':'read_file_info'
				     (_cor3) of
			      <{'ok',FileInfo}> when 'true' ->
				  %% Line 198
				  call 'file':'write_file_info'
				      (_cor2, FileInfo)
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor6})
				-| ['compiler_generated'] )
			    end
			%% Line 199
			<'false'> when 'true' ->
			    %% Line 200
			    'ok'
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor7})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor4})
	    -| ['compiler_generated'] )
	end
'subst'/2 =
    %% Line 209
    fun (_cor1,_cor0) ->
	%% Line 210
	apply 'subst'/3
	    (_cor1, _cor0, [])
'subst'/3 =
    %% Line 212
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[37|[C|Rest]],Vars,Result>
	      when let <_cor3> =
		    call 'erlang':'=<'
			(65, C)
		in  let <_cor4> =
			call 'erlang':'=<'
			    (C, 90)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      %% Line 213
	      apply 'subst_var'/4
		  ([C|Rest], Vars, Result, [])
	  %% Line 214
	  <[37|[C|Rest]],Vars,Result>
	      when let <_cor5> =
		    call 'erlang':'=<'
			(97, C)
		in  let <_cor6> =
			call 'erlang':'=<'
			    (C, 122)
		    in  call 'erlang':'and'
			    (_cor5, _cor6) ->
	      %% Line 215
	      apply 'subst_var'/4
		  ([C|Rest], Vars, Result, [])
	  %% Line 216
	  <[37|[C|Rest]],Vars,Result>
	      when call 'erlang':'=='
		    (C,
		     95) ->
	      %% Line 217
	      apply 'subst_var'/4
		  ([C|Rest], Vars, Result, [])
	  %% Line 218
	  <[C|Rest],Vars,Result> when 'true' ->
	      %% Line 219
	      apply 'subst'/3
		  (Rest, Vars, [C|Result])
	  %% Line 220
	  <[],_X_Vars,Result> when 'true' ->
	      %% Line 221
	      call 'lists':'reverse'
		  (Result)
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7})
		  -| [{'function_name',{'subst',3}}] )
	    -| ['compiler_generated'] )
	end
'subst_var'/4 =
    %% Line 223
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[37|Rest],Vars,Result,VarAcc> when 'true' ->
	      let <Key> =
		  %% Line 224
		  call 'lists':'reverse'
		      (VarAcc)
	      in  %% Line 225
		  case call 'lists':'keysearch'
			   (Key, 1, Vars) of
		    %% Line 226
		    <{'value',{_cor13,Value}}>
			when call 'erlang':'=:='
			      (_cor13,
			       Key) ->
			let <_cor5> =
			    %% Line 227
			    call 'lists':'reverse'
				(Value, Result)
			in  %% Line 227
			    apply 'subst'/3
				(Rest, Vars, _cor5)
		    %% Line 228
		    <'false'> when 'true' ->
			let <_cor6> =
			    %% Line 229
			    call 'erlang':'++'
				(VarAcc, [37|Result])
			in  %% Line 229
			    apply 'subst'/3
				(Rest, Vars, [37|_cor6])
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor7})
		      -| ['compiler_generated'] )
		  end
	  %% Line 231
	  <[C|Rest],Vars,Result,VarAcc> when 'true' ->
	      %% Line 232
	      apply 'subst_var'/4
		  (Rest, Vars, Result, [C|VarAcc])
	  %% Line 233
	  <[],Vars,Result,VarAcc> when 'true' ->
	      let <_cor8> =
		  %% Line 234
		  call 'erlang':'++'
		      (VarAcc, [37|Result])
	      in  %% Line 234
		  apply 'subst'/3
		      ([], Vars, [_cor8|[]])
	  ( <_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'subst_var',4}}] )
	    -| ['compiler_generated'] )
	end
'copy_file'/2 =
    %% Line 236
    fun (_cor1,_cor0) ->
	%% Line 237
	apply 'copy_file'/3
	    (_cor1, _cor0, [])
'copy_file'/3 =
    %% Line 239
    fun (_cor2,_cor1,_cor0) ->
	%% Line 240
	case call 'file':'copy'
		 (_cor2, _cor1) of
	  <{'ok',_cor9}> when 'true' ->
	      %% Line 241
	      case call 'lists':'member'
		       ('preserve', _cor0) of
		%% Line 242
		<'true'> when 'true' ->
		    %% Line 243
		    case call 'file':'read_file_info'
			     (_cor2) of
		      <{'ok',FileInfo}> when 'true' ->
			  %% Line 244
			  call 'file':'write_file_info'
			      (_cor1, FileInfo)
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		%% Line 245
		<'false'> when 'true' ->
		    %% Line 246
		    'ok'
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor5})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'write_file'/2 =
    %% Line 249
    fun (_cor1,_cor0) ->
	let <Enc> =
	    %% Line 250
	    call 'file':'native_name_encoding'
		()
	in  %% Line 251
	    case call 'file':'open'
		     (_cor1, ['write']) of
	      <{'ok',Fd}> when 'true' ->
		  let <_cor4> =
		      %% Line 252
		      call 'unicode':'characters_to_binary'
			  (_cor0, Enc, Enc)
		  in  do  %% Line 252
			  call 'file':'write'
			      (Fd, _cor4)
			  %% Line 253
			  call 'file':'close'
			      (Fd)
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor3})
		-| ['compiler_generated'] )
	    end
'read_txt_file'/1 =
    %% Line 255
    fun (_cor0) ->
	%% Line 256
	case call 'file':'read_file'
		 (_cor0) of
	  <{'ok',Bin}> when 'true' ->
	      let <_cor2> =
		  %% Line 257
		  call 'erlang':'binary_to_list'
		      (Bin)
	      in  %% Line 257
		  {'ok',_cor2}
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'remove_dir_tree'/1 =
    %% Line 259
    fun (_cor0) ->
	%% Line 260
	apply 'remove_all_files'/2
	    ([46], [_cor0|[]])
'remove_all_files'/2 =
    %% Line 262
    fun (_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 263
	    ( fun (_cor5) ->
		  let <FilePath> =
		      %% Line 264
		      call 'filename':'join'
			  ([_cor1|[_cor5|[]]])
		  in  %% Line 265
		      case call 'filelib':'is_dir'
			       (FilePath) of
			%% Line 266
			<'true'> when 'true' ->
			    %% Line 267
			    case call 'file':'list_dir'
				     (FilePath) of
			      <{'ok',DirFiles}> when 'true' ->
				  do  %% Line 268
				      apply 'remove_all_files'/2
					  (FilePath, DirFiles)
				      %% Line 269
				      call 'file':'del_dir'
					  (FilePath)
			      ( <_cor3> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor3})
				-| ['compiler_generated'] )
			    end
			%% Line 270
			<_cor10> when 'true' ->
			    %% Line 271
			    call 'file':'delete'
				(FilePath)
		      end
	      -| [{'id',{0,0,'-remove_all_files/2-fun-0-'}}] )
	in  %% Line 263
	    call 'lists':'foreach'
		(_cor7, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('target_system')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('target_system', _cor0)
end