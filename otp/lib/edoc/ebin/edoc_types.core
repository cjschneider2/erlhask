module 'edoc_types' ['arg_descs'/1,
		     'arg_names'/1,
		     'is_new_predefined'/2,
		     'is_predefined'/2,
		     'is_predefined_otp_type'/2,
		     'module_info'/0,
		     'module_info'/1,
		     'range_desc'/1,
		     'set_arg_names'/2,
		     'to_label'/1,
		     'to_ref'/1,
		     'to_xml'/2]
    attributes []
'is_predefined'/2 =
    %% Line 38
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'any',0> when 'true' ->
	      'true'
	  %% Line 39
	  <'atom',0> when 'true' ->
	      'true'
	  %% Line 40
	  <'binary',0> when 'true' ->
	      'true'
	  %% Line 41
	  <'bool',0> when 'true' ->
	      'true'
	  %% Line 42
	  <'char',0> when 'true' ->
	      'true'
	  %% Line 43
	  <'cons',2> when 'true' ->
	      'true'
	  %% Line 44
	  <'deep_string',0> when 'true' ->
	      'true'
	  %% Line 45
	  <'float',0> when 'true' ->
	      'true'
	  %% Line 46
	  <'function',0> when 'true' ->
	      'true'
	  %% Line 47
	  <'integer',0> when 'true' ->
	      'true'
	  %% Line 48
	  <'list',0> when 'true' ->
	      'true'
	  %% Line 49
	  <'list',1> when 'true' ->
	      'true'
	  %% Line 50
	  <'nil',0> when 'true' ->
	      'true'
	  %% Line 51
	  <'none',0> when 'true' ->
	      'true'
	  %% Line 52
	  <'no_return',0> when 'true' ->
	      'true'
	  %% Line 53
	  <'number',0> when 'true' ->
	      'true'
	  %% Line 54
	  <'pid',0> when 'true' ->
	      'true'
	  %% Line 55
	  <'port',0> when 'true' ->
	      'true'
	  %% Line 56
	  <'reference',0> when 'true' ->
	      'true'
	  %% Line 57
	  <'string',0> when 'true' ->
	      'true'
	  %% Line 58
	  <'term',0> when 'true' ->
	      'true'
	  %% Line 59
	  <'tuple',0> when 'true' ->
	      'true'
	  %% Line 60
	  <F,A> when 'true' ->
	      apply 'is_new_predefined'/2
		  (F, A)
	end
'is_new_predefined'/2 =
    %% Line 63
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'arity',0> when 'true' ->
	      'true'
	  %% Line 64
	  <'bitstring',0> when 'true' ->
	      'true'
	  %% Line 65
	  <'boolean',0> when 'true' ->
	      'true'
	  %% Line 66
	  <'byte',0> when 'true' ->
	      'true'
	  %% Line 67
	  <'iodata',0> when 'true' ->
	      'true'
	  %% Line 68
	  <'iolist',0> when 'true' ->
	      'true'
	  %% Line 69
	  <'map',0> when 'true' ->
	      'true'
	  %% Line 70
	  <'maybe_improper_list',0> when 'true' ->
	      'true'
	  %% Line 71
	  <'maybe_improper_list',2> when 'true' ->
	      'true'
	  %% Line 72
	  <'mfa',0> when 'true' ->
	      'true'
	  %% Line 73
	  <'module',0> when 'true' ->
	      'true'
	  %% Line 74
	  <'neg_integer',0> when 'true' ->
	      'true'
	  %% Line 75
	  <'node',0> when 'true' ->
	      'true'
	  %% Line 76
	  <'non_neg_integer',0> when 'true' ->
	      'true'
	  %% Line 77
	  <'nonempty_improper_list',2> when 'true' ->
	      'true'
	  %% Line 78
	  <'nonempty_list',0> when 'true' ->
	      'true'
	  %% Line 79
	  <'nonempty_list',1> when 'true' ->
	      'true'
	  %% Line 80
	  <'nonempty_maybe_improper_list',0> when 'true' ->
	      'true'
	  %% Line 81
	  <'nonempty_maybe_improper_list',2> when 'true' ->
	      'true'
	  %% Line 82
	  <'nonempty_string',0> when 'true' ->
	      'true'
	  %% Line 83
	  <'pos_integer',0> when 'true' ->
	      'true'
	  %% Line 84
	  <'timeout',0> when 'true' ->
	      'true'
	  %% Line 85
	  <_cor4,_cor5> when 'true' ->
	      'false'
	end
'is_predefined_otp_type'/2 =
    %% Line 89
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'array',0> when 'true' ->
	      'true'
	  %% Line 90
	  <'dict',0> when 'true' ->
	      'true'
	  %% Line 91
	  <'digraph',0> when 'true' ->
	      'true'
	  %% Line 92
	  <'gb_set',0> when 'true' ->
	      'true'
	  %% Line 93
	  <'gb_tree',0> when 'true' ->
	      'true'
	  %% Line 94
	  <'queue',0> when 'true' ->
	      'true'
	  %% Line 95
	  <'set',0> when 'true' ->
	      'true'
	  %% Line 96
	  <_cor4,_cor5> when 'true' ->
	      'false'
	end
'to_ref'/1 =
    %% Line 98
    fun (_cor0) ->
	case _cor0 of
	  <{'t_typedef',N,_cor2,_cor3,_cor4}> when 'true' ->
	      %% Line 99
	      apply 'to_ref'/1
		  (N)
	  %% Line 100
	  <{'t_def',N,_cor5}> when 'true' ->
	      %% Line 101
	      apply 'to_ref'/1
		  (N)
	  %% Line 102
	  <{'t_type',_cor6,N,_cor7}> when 'true' ->
	      %% Line 103
	      apply 'to_ref'/1
		  (N)
	  %% Line 104
	  <{'t_name',_cor8,[],N}> when 'true' ->
	      %% Line 105
	      call 'edoc_refs':'type'
		  (N)
	  %% Line 106
	  <{'t_name',[],M,N}> when 'true' ->
	      %% Line 107
	      call 'edoc_refs':'type'
		  (M, N)
	  %% Line 108
	  <{'t_name',A,M,N}> when 'true' ->
	      %% Line 109
	      call 'edoc_refs':'type'
		  (A, M, N)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'to_ref',1}}] )
	    -| ['compiler_generated'] )
	end
'to_label'/1 =
    %% Line 111
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 112
	    apply 'to_ref'/1
		(_cor0)
	in  %% Line 112
	    call 'edoc_refs':'to_label'
		(_cor1)
'get_uri'/2 =
    %% Line 114
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 115
	    apply 'to_ref'/1
		(_cor1)
	in  %% Line 115
	    call 'edoc_refs':'get_uri'
		(_cor2, _cor0)
'to_xml'/2 =
    %% Line 117
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'t_var',_cor64,N},_X_Env> when 'true' ->
	      let <_cor2> =
		  %% Line 118
		  call 'erlang':'atom_to_list'
		      (N)
	      in  %% Line 118
		  {'typevar',[{'name',_cor2}|[]],[]}
	  %% Line 119
	  <{'t_name',_cor65,[],N},_X_Env> when 'true' ->
	      let <_cor3> =
		  %% Line 120
		  call 'erlang':'atom_to_list'
		      (N)
	      in  %% Line 120
		  {'erlangName',[{'name',_cor3}|[]],[]}
	  %% Line 121
	  <{'t_name',[],M,N},_X_Env> when 'true' ->
	      let <_cor4> =
		  %% Line 122
		  call 'erlang':'atom_to_list'
		      (M)
	      in  let <_cor5> =
		      %% Line 123
		      call 'erlang':'atom_to_list'
			  (N)
		  in  %% Line 122
		      {'erlangName',[{'module',_cor4}|%% Line 123
						      [{'name',_cor5}|[]]],%% Line 123
									   []}
	  %% Line 124
	  <{'t_name',A,M,N},_X_Env> when 'true' ->
	      let <_cor6> =
		  %% Line 125
		  call 'erlang':'atom_to_list'
		      (A)
	      in  let <_cor7> =
		      %% Line 126
		      call 'erlang':'atom_to_list'
			  (M)
		  in  let <_cor8> =
			  %% Line 127
			  call 'erlang':'atom_to_list'
			      (N)
		      in  %% Line 125
			  {'erlangName',[{'app',_cor6}|%% Line 126
						       [{'module',_cor7}|%% Line 127
									 [{'name',_cor8}|[]]]],%% Line 127
											       []}
	  %% Line 128
	  <{'t_type',_cor66,N,As},Env> when 'true' ->
	      let <_cor13> =
		  %% Line 129
		  case N of
		    %% Line 130
		    <{'t_name',_cor67,[],T}> when 'true' ->
			let <NArgs> =
			    %% Line 131
			    call 'erlang':'length'
				(As)
			in  %% Line 133
			    ( case apply 'is_predefined'/2
				       (T, NArgs) of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      'true'
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      apply 'is_predefined_otp_type'/2
					  (T, NArgs)
				  -| ['compiler_generated'] )
				( <_cor10> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {( 'badarg'
						  -| ['compiler_generated'] ),_cor10}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
		    %% Line 134
		    <_cor68> when 'true' ->
			%% Line 135
			'false'
		  end
	      in  let <_cor17> =
		      %% Line 137
		      case _cor13 of
			%% Line 138
			<'true'> when 'true' ->
			    []
			%% Line 139
			<'false'> when 'true' ->
			    let <_cor15> =
				apply 'get_uri'/2
				    (N, Env)
			    in  [{'href',_cor15}|[]]
			( <_cor16> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor16})
			  -| ['compiler_generated'] )
		      end
		  in  let <_cor19> =
			  %% Line 141
			  apply 'to_xml'/2
			      (N, Env)
		      in  let <_cor20> =
			      %% Line 141
			      apply 'map'/3
				  (( 'wrap_utype'/2
				     -| [{'id',{0,0,'-to_xml/2-fun-0-'}}] ), As, Env)
			  in  %% Line 141
			      {'abstype',_cor17,[_cor19|_cor20]}
	  %% Line 142
	  <{'t_fun',_cor69,As,T},Env> when 'true' ->
	      let <_cor21> =
		  %% Line 143
		  apply 'map'/3
		      (( 'wrap_utype'/2
			 -| [{'id',{0,0,'-to_xml/2-fun-1-'}}] ), As, Env)
	      in  let <_cor22> =
		      %% Line 144
		      apply 'wrap_utype'/2
			  (T, Env)
		  in  %% Line 143
		      {'fun',[{'argtypes',_cor21}|%% Line 144
						  [_cor22|[]]]}
	  %% Line 145
	  <{'t_map',_cor70,Ts},Env> when 'true' ->
	      let <_cor23> =
		  %% Line 146
		  apply 'map'/3
		      (( 'wrap_utype'/2
			 -| [{'id',{0,0,'-to_xml/2-fun-2-'}}] ), Ts, Env)
	      in  %% Line 146
		  {'map',_cor23}
	  %% Line 147
	  <{'t_map_field',_cor71,K,V},Env> when 'true' ->
	      let <_cor24> =
		  %% Line 148
		  apply 'wrap_utype'/2
		      (K, Env)
	      in  let <_cor25> =
		      %% Line 148
		      apply 'wrap_utype'/2
			  (V, Env)
		  in  %% Line 148
		      {'map_field',[_cor24|[_cor25|[]]]}
	  %% Line 149
	  <{'t_tuple',_cor72,Ts},Env> when 'true' ->
	      let <_cor26> =
		  %% Line 150
		  apply 'map'/3
		      (( 'wrap_utype'/2
			 -| [{'id',{0,0,'-to_xml/2-fun-3-'}}] ), Ts, Env)
	      in  %% Line 150
		  {'tuple',_cor26}
	  %% Line 151
	  <{'t_list',_cor73,T},Env> when 'true' ->
	      let <_cor27> =
		  %% Line 152
		  apply 'wrap_utype'/2
		      (T, Env)
	      in  %% Line 152
		  {'list',[_cor27|[]]}
	  %% Line 153
	  <{'t_nil',_cor74},_X_Env> when 'true' ->
	      %% Line 154
	      'nil'
	  %% Line 155
	  <{'t_paren',_cor75,T},Env> when 'true' ->
	      let <_cor28> =
		  %% Line 156
		  apply 'wrap_utype'/2
		      (T, Env)
	      in  %% Line 156
		  {'paren',[_cor28|[]]}
	  %% Line 157
	  <{'t_nonempty_list',_cor76,T},Env> when 'true' ->
	      let <_cor29> =
		  %% Line 158
		  apply 'wrap_utype'/2
		      (T, Env)
	      in  %% Line 158
		  {'nonempty_list',[_cor29|[]]}
	  %% Line 159
	  <{'t_atom',_cor77,V},_X_Env> when 'true' ->
	      let <_cor30> =
		  %% Line 160
		  call 'io_lib':'write'
		      (V)
	      in  %% Line 160
		  {'atom',[{'value',_cor30}|[]],[]}
	  %% Line 161
	  <{'t_integer',_cor78,V},_X_Env> when 'true' ->
	      let <_cor31> =
		  %% Line 162
		  call 'erlang':'integer_to_list'
		      (V)
	      in  %% Line 162
		  {'integer',[{'value',_cor31}|[]],[]}
	  %% Line 163
	  <{'t_integer_range',_cor79,From,To},_X_Env> when 'true' ->
	      let <_cor34> =
		  %% Line 164
		  call 'erlang':'integer_to_list'
		      (From)
	      in  let <_cor32> =
		      %% Line 164
		      call 'erlang':'integer_to_list'
			  (To)
		  in  let <_cor33> =
			  %% Line 164
			  [46|[46|_cor32]]
		      in  let <_cor35> =
			      %% Line 164
			      call 'erlang':'++'
				  (_cor34, _cor33)
			  in  %% Line 164
			      {'range',[{'value',_cor35}|[]],[]}
	  %% Line 165
	  <{'t_binary',_cor80,0,0},_X_Ens> when 'true' ->
	      %% Line 166
	      {'binary',[{'value',[60|[60|[62|[62]]]]}],[]}
	  %% Line 167
	  <{'t_binary',_cor81,B,0},_X_Ens> when 'true' ->
	      let <_cor36> =
		  %% Line 168
		  call 'io_lib':'fwrite'
		      ([60|[60|[95|[58|[126|[119|[62|[62]]]]]]]], [B|[]])
	      in  %% Line 168
		  {'binary',[{'value',_cor36}|[]],[]}
	  %% Line 171
	  <{'t_binary',_cor82,0,U},_X_Ens> when 'true' ->
	      let <_cor37> =
		  %% Line 172
		  call 'io_lib':'fwrite'
		      ([60|[60|[95|[58|[95|[42|[126|[119|[62|[62]]]]]]]]]], [U|[]])
	      in  %% Line 172
		  {'binary',[{'value',_cor37}|[]],[]}
	  %% Line 173
	  <{'t_binary',_cor83,B,U},_X_Ens> when 'true' ->
	      let <_cor38> =
		  %% Line 174
		  call 'io_lib':'fwrite'
		      ([60|[60|[95|[58|[126|[119|[44|[32|[95|[58|[95|[42|[126|[119|[62|[62]]]]]]]]]]]]]]]], [B|[U|[]]])
	      in  %% Line 174
		  {'binary',[{'value',_cor38}|[]],[]}
	  %% Line 175
	  <{'t_float',_cor84,V},_X_Env> when 'true' ->
	      let <_cor39> =
		  %% Line 176
		  call 'io_lib':'write'
		      (V)
	      in  %% Line 176
		  {'float',[{'value',_cor39}|[]],[]}
	  %% Line 177
	  <{'t_union',_cor85,Ts},Env> when 'true' ->
	      let <_cor40> =
		  %% Line 178
		  apply 'map'/3
		      (( 'wrap_utype'/2
			 -| [{'id',{0,0,'-to_xml/2-fun-4-'}}] ), Ts, Env)
	      in  %% Line 178
		  {'union',_cor40}
	  %% Line 179
	  <{'t_record',_cor86,N = {'t_atom',_cor87,_cor88},Fs},Env> when 'true' ->
	      let <_cor41> =
		  %% Line 180
		  apply 'to_xml'/2
		      (N, Env)
	      in  let <_cor42> =
		      %% Line 180
		      apply 'map'/3
			  (( 'to_xml'/2
			     -| [{'id',{0,0,'-to_xml/2-fun-5-'}}] ), Fs, Env)
		  in  %% Line 180
		      {'record',[_cor41|_cor42]}
	  %% Line 181
	  <{'t_field',_cor89,N = {'t_atom',_cor90,_cor91},T},Env> when 'true' ->
	      let <_cor43> =
		  %% Line 182
		  apply 'to_xml'/2
		      (N, Env)
	      in  let <_cor44> =
		      %% Line 182
		      apply 'wrap_type'/2
			  (T, Env)
		  in  %% Line 182
		      {'field',[_cor43|[_cor44|[]]]}
	  %% Line 183
	  <{'t_def',N = {'t_var',_cor92,_cor93},T},Env> when 'true' ->
	      let <_cor45> =
		  %% Line 184
		  apply 'to_xml'/2
		      (N, Env)
	      in  let <_cor46> =
		      %% Line 184
		      apply 'wrap_type'/2
			  (T, Env)
		  in  %% Line 184
		      {'localdef',[_cor45|[_cor46|[]]]}
	  %% Line 185
	  <{'t_def',N,T},Env> when 'true' ->
	      let <_cor49> =
		  %% Line 186
		  apply 'to_label'/1
		      (N)
	      in  let <_cor47> =
		      %% Line 187
		      apply 'to_xml'/2
			  (N, Env)
		  in  let <_cor48> =
			  %% Line 187
			  apply 'wrap_type'/2
			      (T, Env)
		      in  %% Line 186
			  {'localdef',[{'label',_cor49}|[]],%% Line 187
							    [_cor47|[_cor48|[]]]}
	  %% Line 188
	  <{'t_spec',N,T,Ds},Env> when 'true' ->
	      let <_cor50> =
		  %% Line 189
		  apply 'to_xml'/2
		      (N, Env)
	      in  let <_cor51> =
		      %% Line 189
		      apply 'wrap_utype'/2
			  (T, Env)
		  in  let <_cor52> =
			  %% Line 190
			  apply 'map'/3
			      (( 'to_xml'/2
				 -| [{'id',{0,0,'-to_xml/2-fun-6-'}}] ), Ds, Env)
		      in  %% Line 189
			  {'typespec',[_cor50|[_cor51|_cor52]]}
	  %% Line 191
	  <{'t_typedef',N,As,'undefined',Ds},%% Line 192
					     Env> when 'true' ->
	      let <_cor53> =
		  %% Line 193
		  apply 'to_xml'/2
		      (N, Env)
	      in  let <_cor54> =
		      %% Line 194
		      apply 'map'/3
			  (( 'wrap_utype'/2
			     -| [{'id',{0,0,'-to_xml/2-fun-7-'}}] ), As, Env)
		  in  let <_cor55> =
			  %% Line 195
			  apply 'map'/3
			      (( 'to_xml'/2
				 -| [{'id',{0,0,'-to_xml/2-fun-8-'}}] ), Ds, Env)
		      in  %% Line 193
			  {'typedef',[_cor53|%% Line 194
					     [{'argtypes',_cor54}|_cor55]]}
	  %% Line 196
	  <{'t_typedef',N,As,T,Ds},Env> when 'true' ->
	      let <_cor56> =
		  %% Line 197
		  apply 'to_xml'/2
		      (N, Env)
	      in  let <_cor57> =
		      %% Line 198
		      apply 'map'/3
			  (( 'wrap_utype'/2
			     -| [{'id',{0,0,'-to_xml/2-fun-9-'}}] ), As, Env)
		  in  let <_cor58> =
			  %% Line 199
			  apply 'wrap_type'/2
			      (T, Env)
		      in  let <_cor59> =
			      %% Line 200
			      apply 'map'/3
				  (( 'to_xml'/2
				     -| [{'id',{0,0,'-to_xml/2-fun-10-'}}] ), Ds, Env)
			  in  %% Line 197
			      {'typedef',[_cor56|%% Line 198
						 [{'argtypes',_cor57}|%% Line 199
								      [_cor58|_cor59]]]}
	  %% Line 201
	  <{'t_throws',T,Ds},Env> when 'true' ->
	      let <_cor60> =
		  %% Line 202
		  apply 'wrap_type'/2
		      (T, Env)
	      in  let <_cor61> =
		      %% Line 203
		      apply 'map'/3
			  (( 'to_xml'/2
			     -| [{'id',{0,0,'-to_xml/2-fun-11-'}}] ), Ds, Env)
		  in  %% Line 202
		      {'throws',[_cor60|_cor61]}
	  ( <_cor63,_cor62> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor63,_cor62})
		  -| [{'function_name',{'to_xml',2}}] )
	    -| ['compiler_generated'] )
	end
'wrap_type'/2 =
    %% Line 205
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 206
	    apply 'to_xml'/2
		(_cor1, _cor0)
	in  %% Line 206
	    {'type',[_cor2|[]]}
'wrap_utype'/2 =
    %% Line 208
    fun (_cor1,_cor0) ->
	let <E> =
	    %% Line 209
	    apply 'to_xml'/2
		(_cor1, _cor0)
	in  %% Line 210
	    case apply 'arg_name'/1
		     (_cor1) of
	      %% Line 211
	      <'_'> when 'true' ->
		  {'type',[E|[]]}
	      %% Line 212
	      <A> when 'true' ->
		  let <_cor3> =
		      call 'erlang':'atom_to_list'
			  (A)
		  in  {'type',[{'name',_cor3}|[]],[E|[]]}
	    end
'map'/3 =
    %% Line 215
    fun (_cor2,_cor1,_cor0) ->
	%% Line 216
	( letrec
	      'lc$^0'/1 =
		  fun (_cor5) ->
		      case _cor5 of
			<[X|_cor4]> when 'true' ->
			    let <_cor6> =
				apply _cor2
				    (X, _cor0)
			    in  let <_cor7> =
				    apply 'lc$^0'/1
					(_cor4)
				in  ( [_cor6|_cor7]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor5> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor5})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  apply 'lc$^0'/1
		  (_cor1)
	  -| ['list_comprehension'] )
'is_name'/1 =
    %% Line 218
    fun (_cor0) ->
	case _cor0 of
	  <A>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      'true'
	  %% Line 219
	  <_cor2> when 'true' ->
	      'false'
	end
'is_desc'/1 =
    %% Line 221
    fun (_cor0) ->
	case _cor0 of
	  <A>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      'true'
	  %% Line 222
	  <_cor2> when 'true' ->
	      'false'
	end
'arg_name'/1 =
    %% Line 224
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 225
	    call 'erlang':'element'
		(2, _cor0)
	in  %% Line 225
	    apply 'find'/3
		(_cor1, ( 'is_name'/1
			  -| [{'id',{0,0,'-arg_name/1-fun-0-'}}] ), '_')
'arg_names'/1 =
    %% Line 227
    fun (_cor0) ->
	%% Line 228
	apply 'arg_anns'/3
	    (_cor0, ( 'is_name'/1
		      -| [{'id',{0,0,'-arg_names/1-fun-0-'}}] ), '_')
'arg_descs'/1 =
    %% Line 230
    fun (_cor0) ->
	%% Line 231
	apply 'arg_anns'/3
	    (_cor0, ( 'is_desc'/1
		      -| [{'id',{0,0,'-arg_descs/1-fun-0-'}}] ), [])
'range_desc'/1 =
    %% Line 233
    fun (_cor0) ->
	case _cor0 of
	  <{'t_spec',_cor3,{'t_fun',_cor4,_cor5,T},_cor6}> when 'true' ->
	      let <_cor1> =
		  %% Line 234
		  call 'erlang':'element'
		      (2, T)
	      in  %% Line 234
		  apply 'find'/3
		      (_cor1, ( 'is_desc'/1
				-| [{'id',{0,0,'-range_desc/1-fun-0-'}}] ), [])
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'range_desc',1}}] )
	    -| ['compiler_generated'] )
	end
'arg_anns'/3 =
    %% Line 236
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'t_spec',_cor12,{'t_fun',_cor13,As,_cor14},_cor15},F,Def> when 'true' ->
	      %% Line 237
	      ( letrec
		    'lc$^0'/1 =
			fun (_cor5) ->
			    case _cor5 of
			      <[A|_cor4]> when 'true' ->
				  let <_cor6> =
				      call 'erlang':'element'
					  (2, A)
				  in  let <_cor7> =
					  apply 'find'/3
					      (_cor6, F, Def)
				      in  let <_cor8> =
					      apply 'lc$^0'/1
						  (_cor4)
					  in  ( [_cor7|_cor8]
						-| ['compiler_generated'] )
			      <[]> when 'true' ->
				  []
			      ( <_cor5> when 'true' ->
				    ( primop 'match_fail'
					  ({'function_clause',_cor5})
				      -| [{'function_name',{'lc$^0',1}}] )
				-| ['compiler_generated'] )
			    end
		in  apply 'lc$^0'/1
			(As)
		-| ['list_comprehension'] )
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'arg_anns',3}}] )
	    -| ['compiler_generated'] )
	end
'find'/3 =
    %% Line 239
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[A|As],F,Def> when 'true' ->
	      %% Line 240
	      case apply F
		       (A) of
		%% Line 241
		<'true'> when 'true' ->
		    A
		%% Line 242
		<'false'> when 'true' ->
		    apply 'find'/3
			(As, F, Def)
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 244
	  <[],_cor7,Def> when 'true' ->
	      Def
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'find',3}}] )
	    -| ['compiler_generated'] )
	end
'set_arg_names'/2 =
    %% Line 246
    fun (_cor1,_cor0) ->
	%% Line 247
	apply 'set_arg_anns'/3
	    (_cor1, _cor0, ( 'is_name'/1
			     -| [{'id',{0,0,'-set_arg_names/2-fun-0-'}}] ))
'set_arg_anns'/3 =
    %% Line 252
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S = {'t_spec',_cor20,T = {'t_fun',_cor21,As,_cor22},_cor23},Ns,F> when 'true' ->
	      let <Zip> =
		  %% Line 253
		  ( fun (_cor6,_cor5) ->
			let <_cor3> =
			    %% Line 254
			    call 'erlang':'element'
				(2, _cor6)
			in  let <_cor4> =
				%% Line 254
				apply 'update'/3
				    (_cor3, _cor5, F)
			    in  %% Line 254
				call 'erlang':'setelement'
				    (2, _cor6, _cor4)
		    -| [{'id',{0,0,'-set_arg_anns/3-fun-0-'}}] )
	      in  let <_rec2> =
		      %% Line 256
		      call 'lists':'zipwith'
			  (Zip, As, Ns)
		  in  let <_cor13> =
			  %% Line 256
			  call 'erlang':'setelement'
			      (3, T, _rec2)
		      in  %% Line 256
			  call 'erlang':'setelement'
			      (3, S, _cor13)
	  ( <_cor19,_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17})
		  -| [{'function_name',{'set_arg_anns',3}}] )
	    -| ['compiler_generated'] )
	end
'update'/3 =
    %% Line 258
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[A|As],N,F> when 'true' ->
	      %% Line 259
	      case apply F
		       (A) of
		%% Line 260
		<'true'> when 'true' ->
		    [N|As]
		%% Line 261
		<'false'> when 'true' ->
		    let <_cor3> =
			apply 'update'/3
			    (As, N, F)
		    in  [A|_cor3]
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 263
	  <[],N,_cor8> when 'true' ->
	      [N|[]]
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'update',3}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('edoc_types')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('edoc_types', _cor0)
end