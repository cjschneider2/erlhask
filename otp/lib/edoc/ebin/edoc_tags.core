module 'edoc_tags' ['check_tags'/4,
		    'check_types'/3,
		    'filter_tags'/2,
		    'filter_tags'/3,
		    'module_info'/0,
		    'module_info'/1,
		    'parse_tags'/4,
		    'scan_lines'/2,
		    'tag_names'/0,
		    'tag_parsers'/0,
		    'tags'/0,
		    'tags'/1]
    attributes [%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','context'},[{'record_field',32,{'atom',32,'dir'},{'string',32,[]}}|[{'record_field',33,{'atom',33,'env'}}|[{'record_field',34,{'atom',34,'opts'},{'nil',34}}]]],[]}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{{'record','doclet_gen'},[{'record_field',51,{'atom',51,'sources'},{'nil',51}}|[{'record_field',52,{'atom',52,'app'},{'nil',52}}|[{'record_field',53,{'atom',53,'packages'},{'nil',53}}|[{'record_field',54,{'atom',54,'modules'},{'nil',54}}|[{'record_field',55,{'atom',55,'filemap'}}]]]]],[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','doclet_toc'},[{'record_field',61,{'atom',61,'paths'}}|[{'record_field',62,{'atom',62,'indir'}}]],[]}],
		%% Line 56
		'type' =
		    %% Line 56
		    [{{'record','module'},[{'record_field',56,{'atom',56,'name'},{'nil',56}}|[{'record_field',57,{'atom',57,'parameters'},{'atom',57,'none'}}|[{'record_field',58,{'atom',58,'functions'},{'nil',58}}|[{'record_field',59,{'atom',59,'exports'},{'nil',59}}|[{'record_field',60,{'atom',60,'attributes'},{'nil',60}}|[{'record_field',61,{'atom',61,'records'},{'nil',61}}|[{'record_field',62,{'atom',62,'encoding'},{'atom',62,'latin1'}}]]]]]]],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{{'record','env'},[{'record_field',67,{'atom',67,'module'},{'nil',67}}|[{'record_field',68,{'atom',68,'package'},{'nil',68}}|[{'record_field',69,{'atom',69,'root'},{'string',69,[]}}|[{'record_field',70,{'atom',70,'file_suffix'}}|[{'record_field',71,{'atom',71,'package_summary'}}|[{'record_field',72,{'atom',72,'apps'}}|[{'record_field',73,{'atom',73,'modules'}}|[{'record_field',74,{'atom',74,'packages'}}|[{'record_field',75,{'atom',75,'app_default'}}|[{'record_field',76,{'atom',76,'macros'},{'nil',76}}|[{'record_field',77,{'atom',77,'includes'},{'nil',77}}]]]]]]]]]]],[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{{'record','comment'},[{'record_field',85,{'atom',85,'line'},{'integer',85,0}}|[{'record_field',85,{'atom',85,'text'}}]],[]}],
		%% Line 96
		'type' =
		    %% Line 96
		    [{{'record','entry'},[{'record_field',96,{'atom',96,'name'}}|[{'record_field',96,{'atom',96,'args'},{'nil',96}}|[{'record_field',96,{'atom',96,'line'},{'integer',96,0}}|[{'record_field',96,{'atom',96,'export'}}|[{'record_field',96,{'atom',96,'data'}}]]]]],[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{{'record','tag'},[{'record_field',105,{'atom',105,'name'}}|[{'record_field',105,{'atom',105,'line'},{'integer',105,0}}|[{'record_field',105,{'atom',105,'origin'},{'atom',105,'comment'}}|[{'record_field',105,{'atom',105,'data'}}]]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','t_spec'},[{'record_field',30,{'atom',30,'name'}}|[{'record_field',30,{'atom',30,'type'}}|[{'record_field',30,{'atom',30,'defs'},{'nil',30}}]]],[]}],
		%% Line 42
		'type' =
		    %% Line 42
		    [{{'record','t_typedef'},[{'record_field',42,{'atom',42,'name'}}|[{'record_field',42,{'atom',42,'args'}}|[{'record_field',42,{'atom',42,'type'}}|[{'record_field',43,{'atom',43,'defs'},{'nil',43}}]]]],[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','t_throws'},[{'record_field',48,{'atom',48,'type'}}|[{'record_field',48,{'atom',48,'defs'},{'nil',48}}]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{{'record','t_def'},[{'record_field',53,{'atom',53,'name'}}|[{'record_field',53,{'atom',53,'type'}}]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','t_name'},[{'record_field',58,{'atom',58,'app'},{'nil',58}}|[{'record_field',59,{'atom',59,'module'},{'nil',59}}|[{'record_field',60,{'atom',60,'name'},{'nil',60}}]]],[]}],
		%% Line 74
		'type' =
		    %% Line 74
		    [{{'record','t_var'},[{'record_field',74,{'atom',74,'a'},{'nil',74}}|[{'record_field',74,{'atom',74,'name'},{'nil',74}}]],[]}],
		%% Line 80
		'type' =
		    %% Line 80
		    [{{'record','t_type'},[{'record_field',80,{'atom',80,'a'},{'nil',80}}|[{'record_field',81,{'atom',81,'name'}}|[{'record_field',82,{'atom',82,'args'},{'nil',82}}]]],[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{{'record','t_union'},[{'record_field',87,{'atom',87,'a'},{'nil',87}}|[{'record_field',87,{'atom',87,'types'},{'nil',87}}]],[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','t_fun'},[{'record_field',93,{'atom',93,'a'},{'nil',93}}|[{'record_field',93,{'atom',93,'args'}}|[{'record_field',93,{'atom',93,'range'}}]]],[]}],
		%% Line 98
		'type' =
		    %% Line 98
		    [{{'record','t_tuple'},[{'record_field',98,{'atom',98,'a'},{'nil',98}}|[{'record_field',98,{'atom',98,'types'},{'nil',98}}]],[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','t_list'},[{'record_field',103,{'atom',103,'a'},{'nil',103}}|[{'record_field',103,{'atom',103,'type'}}]],[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','t_nil'},[{'record_field',107,{'atom',107,'a'},{'nil',107}}],[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{{'record','t_nonempty_list'},[{'record_field',112,{'atom',112,'a'},{'nil',112}}|[{'record_field',112,{'atom',112,'type'}}]],[]}],
		%% Line 117
		'type' =
		    %% Line 117
		    [{{'record','t_atom'},[{'record_field',117,{'atom',117,'a'},{'nil',117}}|[{'record_field',117,{'atom',117,'val'}}]],[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{{'record','t_integer'},[{'record_field',122,{'atom',122,'a'},{'nil',122}}|[{'record_field',122,{'atom',122,'val'}}]],[]}],
		%% Line 128
		'type' =
		    %% Line 128
		    [{{'record','t_integer_range'},[{'record_field',128,{'atom',128,'a'},{'nil',128}}|[{'record_field',128,{'atom',128,'from'}}|[{'record_field',128,{'atom',128,'to'}}]]],[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{{'record','t_binary'},[{'record_field',134,{'atom',134,'a'},{'nil',134}}|[{'record_field',134,{'atom',134,'base_size'},{'integer',134,0}}|[{'record_field',134,{'atom',134,'unit_size'},{'integer',134,0}}]]],[]}],
		%% Line 139
		'type' =
		    %% Line 139
		    [{{'record','t_float'},[{'record_field',139,{'atom',139,'a'},{'nil',139}}|[{'record_field',139,{'atom',139,'val'}}]],[]}],
		%% Line 145
		'type' =
		    %% Line 145
		    [{{'record','t_record'},[{'record_field',145,{'atom',145,'a'},{'nil',145}}|[{'record_field',146,{'atom',146,'name'}}|[{'record_field',147,{'atom',147,'fields'},{'nil',147}}]]],[]}],
		%% Line 153
		'type' =
		    %% Line 153
		    [{{'record','t_field'},[{'record_field',153,{'atom',153,'a'},{'nil',153}}|[{'record_field',153,{'atom',153,'name'}}|[{'record_field',153,{'atom',153,'type'}}]]],[]}],
		%% Line 157
		'type' =
		    %% Line 157
		    [{{'record','t_paren'},[{'record_field',157,{'atom',157,'a'},{'nil',157}}|[{'record_field',157,{'atom',157,'type'}}]],[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','t_map'},[{'record_field',159,{'atom',159,'a'},{'nil',159}}|[{'record_field',159,{'atom',159,'types'},{'nil',159}}]],[]}],
		%% Line 160
		'type' =
		    %% Line 160
		    [{{'record','t_map_field'},[{'record_field',160,{'atom',160,'a'},{'nil',160}}|[{'record_field',160,{'atom',160,'k_type'}}|[{'record_field',160,{'atom',160,'v_type'}}]]],[]}],
		%% Line 348
		'type' =
		    %% Line 348
		    [{'line',{'remote_type',348,[{'atom',348,'erl_scan'}|[{'atom',348,'line'}|[[]]]]},[]}],
		%% Line 350
		'spec' =
		    %% Line 350
		    [{{'parse_file',4},[{'type',350,'fun',[{'type',350,'product',[{'var',350,'_'}|[{'type',350,'line',[]}|[{'var',350,'_'}|[{'var',350,'_'}]]]]}|[{'type',350,'no_return',[]}]]}]}],
		%% Line 366
		'spec' =
		    %% Line 366
		    [{{'parse_header',4},[{'type',366,'fun',[{'type',366,'product',[{'var',366,'_'}|[{'type',366,'line',[]}|[{'var',366,'_'}|[{'var',366,'_'}]]]]}|[{'type',366,'no_return',[]}]]}]}],
		%% Line 386
		'type' =
		    %% Line 386
		    [{'err',{'type',386,'union',[{'atom',386,'file_not_string'}|[{'type',387,'tuple',[{'atom',387,'file_not_found'}|[{'remote_type',387,[{'atom',387,'file'}|[{'atom',387,'filename'}|[[]]]]}]]}|[{'type',388,'tuple',[{'atom',388,'read_file'}|[{'remote_type',388,[{'atom',388,'file'}|[{'atom',388,'filename'}|[[]]]]}|[{'type',388,'term',[]}]]]}|[{'type',389,'string',[]}]]]]},[]}],
		%% Line 391
		'spec' =
		    %% Line 391
		    [{{'throw_error',2},[{'type',391,'fun',[{'type',391,'product',[{'type',391,'line',[]}|[{'type',391,'err',[]}]]}|[{'type',391,'no_return',[]}]]}]}],
		%% Line 405
		'type' =
		    %% Line 405
		    [{{'record','parms'},[{'record_field',405,{'atom',405,'tab'}}|[{'record_field',405,{'atom',405,'warn'}}|[{'record_field',405,{'atom',405,'file'}}|[{'record_field',405,{'atom',405,'line'}}]]]],[]}]]
'tags'/0 =
    %% Line 59
    fun () ->
	%% Line 61
	[{'author',( 'parse_contact'/4
		     -| [{'id',{0,0,'-tags/0-fun-0-'}}] ),['module'|['package'|['overview']]]}|%% Line 62
											       [{'copyright','text',['module'|['package'|['overview'|['single']]]]}|%% Line 63
																				    [{'deprecated','xml',['module'|['function'|['package'|['single']]]]}|%% Line 64
																													 [{'doc','xml',['module'|['function'|['package'|['overview'|['single']]]]]}|%% Line 65
																																						    [{'docfile',( 'parse_file'/4
																																								  -| [{'id',{0,0,'-tags/0-fun-1-'}}] ),['module'|['footer'|['function'|['package'|['overview']]]]]}|%% Line 66
																																																				    [{'end','text',['module'|['footer'|['function'|['package'|['overview']]]]]}|%% Line 67
																																																														[{'equiv',( 'parse_expr'/4
																																																															    -| [{'id',{0,0,'-tags/0-fun-2-'}}] ),['function'|['single']]}|%% Line 68
																																																																							  [{'headerfile',( 'parse_header'/4
																																																																									   -| [{'id',{0,0,'-tags/0-fun-3-'}}] ),['module'|['footer'|['function'|['package'|['overview']]]]]}|%% Line 69
																																																																																					     [{'hidden','text',['module'|['function'|['single']]]}|%% Line 70
																																																																																												   [{'param',( 'parse_param'/4
																																																																																													       -| [{'id',{0,0,'-tags/0-fun-4-'}}] ),['function']}|%% Line 71
																																																																																																				  [{'private','text',['module'|['function'|['single']]]}|%% Line 72
																																																																																																											 [{'reference','xml',['module'|['footer'|['package'|['overview']]]]}|%% Line 73
																																																																																																																			     [{'returns','xml',['function'|['single']]}|%% Line 74
																																																																																																																									[{'see',( 'parse_see'/4
																																																																																																																										  -| [{'id',{0,0,'-tags/0-fun-5-'}}] ),['module'|['function'|['package'|['overview']]]]}|%% Line 75
																																																																																																																																					 [{'since','text',['module'|['function'|['package'|['overview'|['single']]]]]}|%% Line 76
																																																																																																																																														       [{'spec',( 'parse_spec'/4
																																																																																																																																																  -| [{'id',{0,0,'-tags/0-fun-6-'}}] ),['function'|['single']]}|%% Line 77
																																																																																																																																																								[{'throws',( 'parse_throws'/4
																																																																																																																																																									     -| [{'id',{0,0,'-tags/0-fun-7-'}}] ),['function'|['single']]}|%% Line 78
																																																																																																																																																																	   [{'title','text',['overview'|['single']]}|%% Line 79
																																																																																																																																																																						     [{'TODO','xml',['module'|['footer'|['function'|['package'|['overview']]]]]}|%% Line 80
																																																																																																																																																																																 [{'todo','xml',['module'|['footer'|['function'|['package'|['overview']]]]]}|%% Line 81
																																																																																																																																																																																									     [{'type',( 'parse_typedef'/4
																																																																																																																																																																																											-| [{'id',{0,0,'-tags/0-fun-8-'}}] ),['module'|['footer'|['function']]]}|%% Line 82
																																																																																																																																																																																																				 [{'version','text',['module'|['package'|['overview'|['single']]]]}]]]]]]]]]]]]]]]]]]]]]]
'aliases'/1 =
    %% Line 84
    fun (_cor0) ->
	case _cor0 of
	  <'TODO'> when 'true' ->
	      'todo'
	  %% Line 85
	  <'return'> when 'true' ->
	      'returns'
	  %% Line 86
	  <T> when 'true' ->
	      T
	end
'tags'/1 =
    %% Line 89
    fun (_cor0) ->
	%% Line 90
	( letrec
	      'lc$^0'/1 =
		  fun (_cor4) ->
		      case _cor4 of
			<[{T,_cor8,Fs}|_cor2]> when 'true' ->
			    ( case call 'lists':'member'
				       (_cor0, Fs) of
				<'true'> when 'true' ->
				    let <_cor5> =
					apply 'lc$^0'/1
					    (_cor2)
				    in  ( [T|_cor5]
					  -| ['compiler_generated'] )
				( <'false'> when 'true' ->
				      apply 'lc$^0'/1
					  (_cor2)
				  -| ['compiler_generated'] )
				( <_cor6> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor6})
				  -| ['compiler_generated'] )
			      end
			      -| ['list_comprehension'] )
			( <[_cor1|_cor2]> when 'true' ->
			      apply 'lc$^0'/1
				  (_cor2)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor4> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor4})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor3> =
		  apply 'tags'/0
		      ()
	      in  apply 'lc$^0'/1
		      (_cor3)
	  -| ['list_comprehension'] )
'tag_names'/0 =
    %% Line 93
    fun () ->
	%% Line 94
	( letrec
	      'lc$^0'/1 =
		  fun (_cor3) ->
		      case _cor3 of
			<[{T,_cor5,_cor6}|_cor1]> when 'true' ->
			    let <_cor4> =
				apply 'lc$^0'/1
				    (_cor1)
			    in  ( [T|_cor4]
				  -| ['compiler_generated'] )
			( <[_cor0|_cor1]> when 'true' ->
			      apply 'lc$^0'/1
				  (_cor1)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor3> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor3})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor2> =
		  apply 'tags'/0
		      ()
	      in  apply 'lc$^0'/1
		      (_cor2)
	  -| ['list_comprehension'] )
'tag_parsers'/0 =
    %% Line 97
    fun () ->
	%% Line 98
	( letrec
	      'lc$^0'/1 =
		  fun (_cor3) ->
		      case _cor3 of
			<[{T,F,_cor5}|_cor1]> when 'true' ->
			    let <_cor4> =
				apply 'lc$^0'/1
				    (_cor1)
			    in  ( [{T,F}|_cor4]
				  -| ['compiler_generated'] )
			( <[_cor0|_cor1]> when 'true' ->
			      apply 'lc$^0'/1
				  (_cor1)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor3> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor3})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor2> =
		  apply 'tags'/0
		      ()
	      in  apply 'lc$^0'/1
		      (_cor2)
	  -| ['list_comprehension'] )
'scan_lines'/2 =
    %% Line 103
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 104
	    apply 'scan_lines'/3
		(_cor1, _cor0, [])
	in  %% Line 104
	    call 'lists':'reverse'
		(_cor2)
'scan_lines'/3 =
    %% Line 106
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[S|Ss],L,As> when 'true' ->
	      %% Line 107
	      apply 'scan_lines'/4
		  (S, Ss, L, As)
	  %% Line 108
	  <[],_X_L,As> when 'true' ->
	      %% Line 109
	      As
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'scan_lines',3}}] )
	    -| ['compiler_generated'] )
	end
'scan_lines'/4 =
    %% Line 114
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[32|Cs],Ss,L,As> when 'true' ->
	      apply 'scan_lines'/4
		  (Cs, Ss, L, As)
	  %% Line 115
	  <[9|Cs],Ss,L,As> when 'true' ->
	      apply 'scan_lines'/4
		  (Cs, Ss, L, As)
	  %% Line 116
	  <[64|Cs],Ss,L,As> when 'true' ->
	      apply 'scan_tag'/5
		  (Cs, Ss, L, As, [])
	  %% Line 117
	  <Cs = [84|[79|[68|[79|[58|_cor9]]]]],Ss,L,As> when 'true' ->
	      apply 'scan_tag'/5
		  (Cs, Ss, L, As, [])
	  %% Line 118
	  <_cor10,Ss,L,As> when 'true' ->
	      let <_cor4> =
		  call 'erlang':'+'
		      (L, 1)
	      in  apply 'scan_lines'/3
		      (Ss, _cor4, As)
	end
'scan_tag'/5 =
    %% Line 124
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[C|Cs],Ss,L,As,Ts>
	      when let <_cor5> =
		    call 'erlang':'>='
			(C, 97)
		in  let <_cor6> =
			call 'erlang':'=<'
			    (C, 122)
		    in  call 'erlang':'and'
			    (_cor5, _cor6) ->
	      %% Line 125
	      apply 'scan_tag_1'/5
		  (Cs, Ss, L, As, [C|Ts])
	  %% Line 126
	  <[C|Cs],Ss,L,As,Ts>
	      when let <_cor7> =
		    call 'erlang':'>='
			(C, 65)
		in  let <_cor8> =
			call 'erlang':'=<'
			    (C, 90)
		    in  call 'erlang':'and'
			    (_cor7, _cor8) ->
	      %% Line 127
	      apply 'scan_tag_1'/5
		  (Cs, Ss, L, As, [C|Ts])
	  %% Line 128
	  <[C|Cs],Ss,L,As,Ts>
	      when try
		    let <_cor9> =
			call 'erlang':'>='
			    (C, 192)
		    in  let <_cor10> =
			    call 'erlang':'=<'
				(C, 255)
			in  let <_cor11> =
				%% Line 129
				call 'erlang':'=/='
				    (C, 215)
			    in  let <_cor12> =
				    %% Line 129
				    call 'erlang':'=/='
					(C, 247)
				in  let <_cor13> =
					call 'erlang':'and'
					    (_cor11, _cor12)
				    in  let <_cor14> =
					    call 'erlang':'and'
						(_cor10, _cor13)
					in  call 'erlang':'and'
						(_cor9, _cor14)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 130
	      apply 'scan_tag_1'/5
		  (Cs, Ss, L, As, [C|Ts])
	  %% Line 131
	  <[95|Cs],Ss,L,As,Ts> when 'true' ->
	      %% Line 132
	      apply 'scan_tag_1'/5
		  (Cs, Ss, L, As, [95|Ts])
	  %% Line 133
	  <_X_Cs,Ss,L,As,_X_Ts> when 'true' ->
	      let <_cor15> =
		  %% Line 134
		  call 'erlang':'+'
		      (L, 1)
	      in  %% Line 134
		  apply 'scan_lines'/3
		      (Ss, _cor15, As)
	end
'scan_tag_1'/5 =
    %% Line 136
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[C|Cs],Ss,L,As,Ts>
	      when let <_cor5> =
		    call 'erlang':'>='
			(C, 97)
		in  let <_cor6> =
			call 'erlang':'=<'
			    (C, 122)
		    in  call 'erlang':'and'
			    (_cor5, _cor6) ->
	      %% Line 137
	      apply 'scan_tag_1'/5
		  (Cs, Ss, L, As, [C|Ts])
	  %% Line 138
	  <[C|Cs],Ss,L,As,Ts>
	      when let <_cor7> =
		    call 'erlang':'>='
			(C, 65)
		in  let <_cor8> =
			call 'erlang':'=<'
			    (C, 90)
		    in  call 'erlang':'and'
			    (_cor7, _cor8) ->
	      %% Line 139
	      apply 'scan_tag_1'/5
		  (Cs, Ss, L, As, [C|Ts])
	  %% Line 140
	  <[C|Cs],Ss,L,As,Ts>
	      when let <_cor9> =
		    call 'erlang':'>='
			(C, 48)
		in  let <_cor10> =
			call 'erlang':'=<'
			    (C, 57)
		    in  call 'erlang':'and'
			    (_cor9, _cor10) ->
	      %% Line 141
	      apply 'scan_tag_1'/5
		  (Cs, Ss, L, As, [C|Ts])
	  %% Line 142
	  <[C|Cs],Ss,L,As,Ts>
	      when try
		    let <_cor11> =
			call 'erlang':'>='
			    (C, 192)
		    in  let <_cor12> =
			    call 'erlang':'=<'
				(C, 255)
			in  let <_cor13> =
				%% Line 143
				call 'erlang':'=/='
				    (C, 215)
			    in  let <_cor14> =
				    %% Line 143
				    call 'erlang':'=/='
					(C, 247)
				in  let <_cor15> =
					call 'erlang':'and'
					    (_cor13, _cor14)
				    in  let <_cor16> =
					    call 'erlang':'and'
						(_cor12, _cor15)
					in  call 'erlang':'and'
						(_cor11, _cor16)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 144
	      apply 'scan_tag_1'/5
		  (Cs, Ss, L, As, [C|Ts])
	  %% Line 145
	  <[95|Cs],Ss,L,As,Ts> when 'true' ->
	      %% Line 146
	      apply 'scan_tag_1'/5
		  (Cs, Ss, L, As, [95|Ts])
	  %% Line 147
	  <Cs,Ss,L,As,Ts> when 'true' ->
	      %% Line 148
	      apply 'scan_tag_2'/5
		  (Cs, Ss, L, As, {Ts,L})
	end
'scan_tag_2'/5 =
    %% Line 152
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[32|Cs],Ss,L,As,T> when 'true' ->
	      let <_cor5> =
		  %% Line 153
		  call 'erlang':'+'
		      (L, 1)
	      in  %% Line 153
		  apply 'scan_tag_lines'/5
		      (Ss, T, [Cs|[]], _cor5, As)
	  %% Line 154
	  <[9|Cs],Ss,L,As,T> when 'true' ->
	      let <_cor6> =
		  %% Line 155
		  call 'erlang':'+'
		      (L, 1)
	      in  %% Line 155
		  apply 'scan_tag_lines'/5
		      (Ss, T, [Cs|[]], _cor6, As)
	  %% Line 156
	  <[58|Cs],Ss,L,As,T> when 'true' ->
	      let <_cor7> =
		  %% Line 157
		  call 'erlang':'+'
		      (L, 1)
	      in  %% Line 157
		  apply 'scan_tag_lines'/5
		      (Ss, T, [Cs|[]], _cor7, As)
	  %% Line 158
	  <[],Ss,L,As,T> when 'true' ->
	      let <_cor8> =
		  %% Line 159
		  call 'erlang':'+'
		      (L, 1)
	      in  %% Line 159
		  apply 'scan_tag_lines'/5
		      (Ss, T, [[]], _cor8, As)
	  %% Line 160
	  <_cor15,Ss,L,As,_X_T> when 'true' ->
	      let <_cor9> =
		  %% Line 161
		  call 'erlang':'+'
		      (L, 1)
	      in  %% Line 161
		  apply 'scan_lines'/3
		      (Ss, _cor9, As)
	end
'scan_tag_lines'/5 =
    %% Line 165
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[S|Ss],T,Ss1,L,As> when 'true' ->
	      %% Line 166
	      apply 'scan_tag_lines'/7
		  (S, S, Ss, T, Ss1, L, As)
	  %% Line 167
	  <[],{Ts,L1},Ss1,_X_L,As> when 'true' ->
	      let <_cor5> =
		  %% Line 168
		  apply 'make_tag'/3
		      (Ts, L1, Ss1)
	      in  %% Line 168
		  [_cor5|As]
	  ( <_cor10,_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'scan_tag_lines',5}}] )
	    -| ['compiler_generated'] )
	end
'scan_tag_lines'/7 =
    %% Line 172
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[32|Cs],S,Ss,T,Ss1,L,As> when 'true' ->
	      %% Line 173
	      apply 'scan_tag_lines'/7
		  (Cs, S, Ss, T, Ss1, L, As)
	  %% Line 174
	  <[9|Cs],S,Ss,T,Ss1,L,As> when 'true' ->
	      %% Line 175
	      apply 'scan_tag_lines'/7
		  (Cs, S, Ss, T, Ss1, L, As)
	  %% Line 176
	  <[64|[C|_X_Cs]],S,Ss,{Ts,L1},Ss1,L,As>
	      when let <_cor7> =
		    %% Line 177
		    call 'erlang':'>='
			(C, 97)
		in  let <_cor8> =
			%% Line 177
			call 'erlang':'=<'
			    (C, 122)
		    in  %% Line 177
			call 'erlang':'and'
			    (_cor7, _cor8) ->
	      let <_cor9> =
		  %% Line 178
		  apply 'make_tag'/3
		      (Ts, L1, Ss1)
	      in  %% Line 178
		  apply 'scan_lines'/4
		      (S, Ss, L, [_cor9|As])
	  %% Line 179
	  <[64|[C|_X_Cs]],S,Ss,{Ts,L1},Ss1,L,As>
	      when let <_cor10> =
		    %% Line 180
		    call 'erlang':'>='
			(C, 65)
		in  let <_cor11> =
			%% Line 180
			call 'erlang':'=<'
			    (C, 90)
		    in  %% Line 180
			call 'erlang':'and'
			    (_cor10, _cor11) ->
	      let <_cor12> =
		  %% Line 181
		  apply 'make_tag'/3
		      (Ts, L1, Ss1)
	      in  %% Line 181
		  apply 'scan_lines'/4
		      (S, Ss, L, [_cor12|As])
	  %% Line 182
	  <[64|[C|_X_Cs]],S,Ss,{Ts,L1},Ss1,L,As>
	      when %% Line 183
		try
		    let <_cor13> =
			call 'erlang':'>='
			    (C, 192)
		    in  let <_cor14> =
			    call 'erlang':'=<'
				(C, 255)
			in  let <_cor15> =
				call 'erlang':'=/='
				    (C, 215)
			    in  let <_cor16> =
				    call 'erlang':'=/='
					(C, 247)
				in  let <_cor17> =
					call 'erlang':'and'
					    (_cor15, _cor16)
				    in  let <_cor18> =
					    call 'erlang':'and'
						(_cor14, _cor17)
					in  call 'erlang':'and'
						(_cor13, _cor18)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor19> =
		  %% Line 184
		  apply 'make_tag'/3
		      (Ts, L1, Ss1)
	      in  %% Line 184
		  apply 'scan_lines'/4
		      (S, Ss, L, [_cor19|As])
	  %% Line 185
	  <[84|[79|[68|[79|[58|_cor29]]]]],S,Ss,{Ts,L1},Ss1,L,As> when 'true' ->
	      let <_cor20> =
		  %% Line 186
		  apply 'make_tag'/3
		      (Ts, L1, Ss1)
	      in  %% Line 186
		  apply 'scan_lines'/4
		      (S, Ss, L, [_cor20|As])
	  %% Line 187
	  <_X_Cs,S,Ss,T,Ss1,L,As> when 'true' ->
	      let <_cor21> =
		  %% Line 188
		  call 'erlang':'+'
		      (L, 1)
	      in  %% Line 188
		  apply 'scan_tag_lines'/5
		      (Ss, T, [S|Ss1], _cor21, As)
	end
'make_tag'/3 =
    %% Line 190
    fun (_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 191
	    call 'lists':'reverse'
		(_cor2)
	in  let <_cor6> =
		%% Line 191
		call 'erlang':'list_to_atom'
		    (_cor5)
	    in  let <_cor7> =
		    %% Line 191
		    apply 'aliases'/1
			(_cor6)
		in  let <_cor3> =
			%% Line 193
			call 'lists':'reverse'
			    (_cor0)
		    in  let <_cor4> =
			    %% Line 193
			    apply 'append_lines'/1
				(_cor3)
			in  %% Line 191
			    {'tag',_cor7,_cor1,'comment',_cor4}
'append_lines'/1 =
    %% Line 197
    fun (_cor0) ->
	case _cor0 of
	  <[L|[]]> when 'true' ->
	      L
	  %% Line 198
	  <[L|Ls]> when 'true' ->
	      let <_cor1> =
		  apply 'append_lines'/1
		      (Ls)
	      in  call 'erlang':'++'
		      (L, [10|_cor1])
	  %% Line 199
	  <[]> when 'true' ->
	      []
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'append_lines',1}}] )
	    -| ['compiler_generated'] )
	end
'filter_tags'/2 =
    %% Line 203
    fun (_cor1,_cor0) ->
	%% Line 204
	apply 'filter_tags'/3
	    (_cor1, _cor0, 'no')
'filter_tags'/3 =
    %% Line 206
    fun (_cor2,_cor1,_cor0) ->
	%% Line 207
	apply 'filter_tags'/4
	    (_cor2, _cor1, _cor0, [])
'filter_tags'/4 =
    %% Line 209
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{'tag','clear',_cor10,_cor11,_cor12}|Ts],Tags,Where,_X_Ts1> when 'true' ->
	      %% Line 210
	      apply 'filter_tags'/3
		  (Ts, Tags, Where)
	  %% Line 211
	  <[T = {'tag',N,L,_cor13,_cor14}|Ts],Tags,Where,Ts1> when 'true' ->
	      %% Line 212
	      case call 'sets':'is_element'
		       (N, Tags) of
		%% Line 213
		<'true'> when 'true' ->
		    %% Line 214
		    apply 'filter_tags'/4
			(Ts, Tags, Where, [T|Ts1])
		%% Line 215
		<'false'> when 'true' ->
		    do  %% Line 217
			( case <> of
			    <>
				when call 'erlang':'=/='
				      (Where,
				       'no') ->
				call 'edoc_report':'warning'
				    (L, Where, [116|[97|[103|[32|[64|[126|[115|[32|[110|[111|[116|[32|[114|[101|[99|[111|[103|[110|[105|[122|[101|[100|[46]]]]]]]]]]]]]]]]]]]]]]], [N|[]])
			    ( <> when 'true' ->
				  []
			      -| ['compiler_generated'] )
			  end
			  -| ['list_comprehension'] )
			%% Line 218
			apply 'filter_tags'/4
			    (Ts, Tags, Where, Ts1)
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 220
	  <[],_cor15,_cor16,Ts> when 'true' ->
	      %% Line 221
	      call 'lists':'reverse'
		  (Ts)
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'filter_tags',4}}] )
	    -| ['compiler_generated'] )
	end
'check_tags'/4 =
    %% Line 225
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 226
	    call 'sets':'new'
		()
	in  %% Line 226
	    apply 'check_tags'/6
		(_cor3, _cor2, _cor1, _cor0, 'false', _cor4)
'check_tags'/6 =
    %% Line 228
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[{'tag',T,L,_cor16,_cor17}|Ts],Allow,Single,Where,Error,Seen> when 'true' ->
	      %% Line 229
	      case call 'sets':'is_element'
		       (T, Seen) of
		%% Line 230
		<'true'> when 'true' ->
		    %% Line 231
		    case call 'sets':'is_element'
			     (T, Single) of
		      %% Line 232
		      <'false'> when 'true' ->
			  %% Line 233
			  apply 'check_tags'/6
			      (Ts, Allow, Single, Where, Error, Seen)
		      %% Line 234
		      <'true'> when 'true' ->
			  do  %% Line 235
			      call 'edoc_report':'report'
				  (L, Where, [109|[117|[108|[116|[105|[112|[108|[101|[32|[64|[126|[115|[32|[116|[97|[103|[46]]]]]]]]]]]]]]]]], [T|[]])
			      %% Line 236
			      apply 'check_tags'/6
				  (Ts, Allow, Single, Where, 'true', Seen)
		      ( <_cor6> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor6})
			-| ['compiler_generated'] )
		    end
		%% Line 238
		<'false'> when 'true' ->
		    let <Seen1> =
			%% Line 239
			call 'sets':'add_element'
			    (T, Seen)
		    in  %% Line 240
			case call 'sets':'is_element'
				 (T, Allow) of
			  %% Line 241
			  <'true'> when 'true' ->
			      %% Line 242
			      apply 'check_tags'/6
				  (Ts, Allow, Single, Where, Error, Seen1)
			  %% Line 243
			  <'false'> when 'true' ->
			      do  %% Line 244
				  call 'edoc_report':'report'
				      (L, Where, [116|[97|[103|[32|[64|[126|[115|[32|[110|[111|[116|[32|[97|[108|[108|[111|[119|[101|[100|[32|[104|[101|[114|[101|[46]]]]]]]]]]]]]]]]]]]]]]]]], [T|[]])
				  %% Line 245
				  apply 'check_tags'/6
				      (Ts, Allow, Single, Where, 'true', Seen1)
			  ( <_cor8> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor8})
			    -| ['compiler_generated'] )
			end
		( <_cor9> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor9})
		  -| ['compiler_generated'] )
	      end
	  %% Line 248
	  <[],_cor18,_cor19,_cor20,Error,_cor21> when 'true' ->
	      %% Line 249
	      Error
	  ( <_cor15,_cor14,_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13,_cor12,_cor11,_cor10})
		  -| [{'function_name',{'check_tags',6}}] )
	    -| ['compiler_generated'] )
	end
'parse_tags'/4 =
    %% Line 254
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 255
	apply 'parse_tags'/5
	    (_cor3, _cor2, _cor1, _cor0, [])
'parse_tags'/5 =
    %% Line 257
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[T = {'tag',Name,_cor14,_cor15,_cor16}|Ts],How,Env,Where,Ts1> when 'true' ->
	      %% Line 258
	      case call 'dict':'fetch'
		       (Name, How) of
		%% Line 259
		<'text'> when 'true' ->
		    %% Line 260
		    apply 'parse_tags'/5
			(Ts, How, Env, Where, [T|Ts1])
		%% Line 261
		<'xml'> when 'true' ->
		    %% Line 262
		    case apply 'parse_tag'/4
			     (T, ( 'parse_xml'/4
				   -| [{'id',{0,0,'-parse_tags/5-fun-0-'}}] ), Env, Where) of
		      <[T1|[]]> when 'true' ->
			  %% Line 263
			  apply 'parse_tags'/5
			      (Ts, How, Env, Where, [T1|Ts1])
		      ( <_cor5> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor5})
			-| ['compiler_generated'] )
		    end
		%% Line 264
		<F>
		    when call 'erlang':'is_function'
			  (F) ->
		    let <Ts2> =
			%% Line 265
			apply 'parse_tag'/4
			    (T, F, Env, Where)
		    in  let <_cor7> =
			    %% Line 266
			    call 'lists':'reverse'
				(Ts2, Ts1)
			in  %% Line 266
			    apply 'parse_tags'/5
				(Ts, How, Env, Where, _cor7)
		( <_cor8> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor8})
		  -| ['compiler_generated'] )
	      end
	  %% Line 268
	  <[],_X_How,_X_Env,_X_Where,Ts> when 'true' ->
	      %% Line 269
	      call 'lists':'reverse'
		  (Ts)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'parse_tags',5}}] )
	    -| ['compiler_generated'] )
	end
'parse_tag'/4 =
    %% Line 271
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor9> =
	    catch
		%% Line 272
		( case _cor3 of
		    ( <( {'tag',_cor18,_cor19,_cor20,_rec0}
			 -| ['compiler_generated'] )> when 'true' ->
			  let <_cor8> =
			      apply _cor2
				  (_rec0, _cor19, _cor1, _cor0)
			  in  {'ok',_cor8}
		      -| ['compiler_generated'] )
		    ( <_cor21> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','tag'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
	in  %% Line 272
	    case _cor9 of
	      %% Line 273
	      <{'ok',Data}> when 'true' ->
		  %% Line 274
		  case _cor3 of
		    <{'tag',_cor26,_cor27,_cor28,_cor29}> when 'true' ->
			let <_cor12> =
			    call 'erlang':'setelement'
				(5, _cor3, Data)
			in  [_cor12|[]]
		    ( <_cor30> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','tag'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      %% Line 275
	      <{'expand',Ts}> when 'true' ->
		  %% Line 276
		  Ts
	      %% Line 277
	      <{'error',L,Error}> when 'true' ->
		  do  %% Line 278
		      call 'edoc_report':'error'
			  (L, _cor0, Error)
		      %% Line 279
		      call 'erlang':'exit'
			  ('error')
	      %% Line 280
	      <{'EXIT',R}> when 'true' ->
		  call 'erlang':'exit'
		      (R)
	      %% Line 281
	      <Other> when 'true' ->
		  call 'erlang':'throw'
		      (Other)
	    end
'parse_xml'/4 =
    %% Line 287
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 288
	call 'edoc_wiki':'parse_xml'
	    (_cor3, _cor2)
'parse_see'/4 =
    %% Line 290
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 291
	call 'edoc_parser':'parse_see'
	    (_cor3, _cor2)
'parse_expr'/4 =
    %% Line 293
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 294
	call 'edoc_lib':'parse_expr'
	    (_cor3, _cor2)
'parse_spec'/4 =
    %% Line 296
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Data,Line,_X_Env,_X_Where = {_cor15,{F,A}}> when 'true' ->
	      let <Spec> =
		  %% Line 297
		  call 'edoc_parser':'parse_spec'
		      (Data, Line)
	      in  %% Line 298
		  case Spec of
		    <{'t_spec',N,{'t_fun',_cor16,As,_cor17},_cor18}> when 'true' ->
			%% Line 299
			case <> of
			  <>
			      when try
				    let <_cor6> =
					call 'erlang':'length'
					    (As)
				    in  call 'erlang':'/='
					    (_cor6, A)
				of <Try> ->
				    Try
				catch <T,R> ->
				    'false' ->
			      %% Line 300
			      apply 'throw_error'/2
				  (Line, [64|[115|[112|[101|[99|[32|[97|[114|[105|[116|[121|[32|[100|[111|[101|[115|[32|[110|[111|[116|[32|[109|[97|[116|[99|[104|[46]]]]]]]]]]]]]]]]]]]]]]]]]]])
			  %% Line 301
			  <> when 'true' ->
			      %% Line 302
			      case N of
				%% Line 303
				<'undefined'> when 'true' ->
				    let <_rec3> =
					%% Line 304
					{'t_name',[],[],F}
				    in  %% Line 304
					call 'erlang':'setelement'
					    (2, Spec, _rec3)
				%% Line 305
				<{'t_name',_cor23,[],_cor24}>
				    when call 'erlang':'=:='
					  (_cor24,
					   F) ->
				    %% Line 306
				    Spec
				%% Line 307
				<_cor25> when 'true' ->
				    %% Line 308
				    apply 'throw_error'/2
					(Line, [64|[115|[112|[101|[99|[32|[110|[97|[109|[101|[32|[100|[111|[101|[115|[32|[110|[111|[116|[32|[109|[97|[116|[99|[104|[46]]]]]]]]]]]]]]]]]]]]]]]]]])
			      end
			end
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'parse_spec',4}}] )
	    -| ['compiler_generated'] )
	end
'parse_param'/4 =
    %% Line 312
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Data,Line,_X_Env,_X_Where = {_cor8,{_X_F,_X_A}}> when 'true' ->
	      %% Line 313
	      call 'edoc_parser':'parse_param'
		  (Data, Line)
	  ( <_cor7,_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5,_cor4})
		  -| [{'function_name',{'parse_param',4}}] )
	    -| ['compiler_generated'] )
	end
'parse_throws'/4 =
    %% Line 315
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Data,Line,_X_Env,_X_Where = {_cor8,{_X_F,_X_A}}> when 'true' ->
	      %% Line 316
	      call 'edoc_parser':'parse_throws'
		  (Data, Line)
	  ( <_cor7,_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5,_cor4})
		  -| [{'function_name',{'parse_throws',4}}] )
	    -| ['compiler_generated'] )
	end
'parse_contact'/4 =
    %% Line 318
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 319
	case call 'edoc_lib':'parse_contact'
		 (_cor3, _cor2) of
	  %% Line 320
	  <{[],[],_X_URI}> when 'true' ->
	      %% Line 321
	      apply 'throw_error'/2
		  (_cor2, [109|[117|[115|[116|[32|[115|[112|[101|[99|[105|[102|[121|[32|[110|[97|[109|[101|[32|[111|[114|[32|[101|[45|[109|[97|[105|[108|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	  %% Line 322
	  <Info> when 'true' ->
	      %% Line 323
	      Info
	end
'parse_typedef'/4 =
    %% Line 326
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Def> =
	    %% Line 327
	    call 'edoc_parser':'parse_typedef'
		(_cor3, _cor2)
	in  %% Line 328
	    case Def of
	      <{{'t_typedef',{'t_name',_cor16,_cor17,T},As,_cor18,_cor19},_cor20}> when 'true' ->
		  let <NAs> =
		      %% Line 329
		      call 'erlang':'length'
			  (As)
		  in  %% Line 330
		      case call 'edoc_types':'is_predefined'
			       (T, NAs) of
			%% Line 331
			<'true'> when 'true' ->
			    let <_cor9> =
				%% Line 334
				( case call 'edoc_types':'is_new_predefined'
					   (T, NAs) of
				    ( <( 'true'
					 -| ['compiler_generated'] )> when 'true' ->
					  'true'
				      -| ['compiler_generated'] )
				    ( <( 'false'
					 -| ['compiler_generated'] )> when 'true' ->
					  call 'edoc_types':'is_predefined_otp_type'
					      (T, NAs)
				      -| ['compiler_generated'] )
				    ( <_cor7> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {( 'badarg'
						      -| ['compiler_generated'] ),_cor7}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    in  %% Line 332
				case _cor9 of
				  %% Line 336
				  <'false'> when 'true' ->
				      %% Line 337
				      apply 'throw_error'/2
					  (_cor2, {[114|[101|[100|[101|[102|[105|[110|[105|[110|[103|[32|[98|[117|[105|[108|[116|[45|[105|[110|[32|[116|[121|[112|[101|[32|[39|[126|[119|[39|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],%% Line 338
																											       [T|[]]})
				  %% Line 339
				  <'true'> when 'true' ->
				      do  %% Line 340
					  call 'edoc_report':'warning'
					      (_cor2, _cor0, [114|[101|[100|[101|[102|[105|[110|[105|[110|[103|[32|[98|[117|[105|[108|[116|[45|[105|[110|[32|[116|[121|[112|[101|[32|[39|[126|[119|[39|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 341
																													  [T|[]])
					  %% Line 342
					  Def
				  ( <_cor10> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor10})
				    -| ['compiler_generated'] )
				end
			%% Line 344
			<'false'> when 'true' ->
			    %% Line 345
			    Def
			( <_cor11> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor11})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor5})
		-| ['compiler_generated'] )
	    end
'parse_file'/4 =
    %% Line 352
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 353
	case call 'edoc_lib':'parse_expr'
		 (_cor3, _cor2) of
	  %% Line 354
	  <{'string',_cor11,File0}> when 'true' ->
	      let <File> =
		  %% Line 355
		  call 'edoc_lib':'strip_space'
		      (File0)
	      in  %% Line 356
		  case call 'edoc_extract':'file'
			   (File, 'module', _cor1, []) of
		    %% Line 357
		    <{'ok',Ts}> when 'true' ->
			%% Line 358
			call 'erlang':'throw'
			    ({'expand',Ts})
		    %% Line 359
		    <{'error',R}> when 'true' ->
			%% Line 360
			apply 'throw_error'/2
			    (_cor2, {'read_file',File,R})
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor5})
		      -| ['compiler_generated'] )
		  end
	  %% Line 362
	  <_cor12> when 'true' ->
	      %% Line 363
	      apply 'throw_error'/2
		  (_cor2, 'file_not_string')
	end
'parse_header'/4 =
    %% Line 368
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Data,Line,Env,{Where,_cor15}> when 'true' ->
	      %% Line 369
	      apply 'parse_header'/4
		  (Data, Line, Env, Where)
	  %% Line 370
	  <Data,Line,Env,Where>
	      when call 'erlang':'is_list'
		    (Where) ->
	      %% Line 371
	      case call 'edoc_lib':'parse_expr'
		       (Data, Line) of
		%% Line 372
		<{'string',_cor16,File}> when 'true' ->
		    let <Dir> =
			%% Line 373
			call 'filename':'dirname'
			    (Where)
		    in  %% Line 374
			( case Env of
			    ( <( {'env',_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_rec5}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <Path> =
				      call 'erlang':'++'
					  (_rec5, [Dir|[]])
				  in  %% Line 375
				      case call 'edoc_lib':'find_file'
					       (Path, [], File) of
					%% Line 376
					<[]> when 'true' ->
					    %% Line 377
					    apply 'throw_error'/2
						(Line, {'file_not_found',File})
					%% Line 378
					<File1> when 'true' ->
					    let <Ts> =
						%% Line 379
						call 'edoc_extract':'header'
						    (File1, Env, [])
					    in  %% Line 380
						call 'erlang':'throw'
						    ({'expand',Ts})
				      end
			      -| ['compiler_generated'] )
			    ( <_cor27> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','env'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		%% Line 382
		<_cor28> when 'true' ->
		    %% Line 383
		    apply 'throw_error'/2
			(Line, 'file_not_string')
	      end
	  ( <_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'parse_header',4}}] )
	    -| ['compiler_generated'] )
	end
'throw_error'/2 =
    %% Line 393
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <L,{'read_file',File,R}> when 'true' ->
	      let <_cor2> =
		  %% Line 395
		  call 'edoc_lib':'filename'
		      (File)
	      in  %% Line 394
		  apply 'throw_error'/2
		      (L, {[101|[114|[114|[111|[114|[32|[114|[101|[97|[100|[105|[110|[103|[32|[102|[105|[108|[101|[32|[39|[126|[116|[115|[39|[58|[32|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]],%% Line 395
																							   [_cor2|[R|[]]]})
	  %% Line 396
	  <L,{'file_not_found',F}> when 'true' ->
	      %% Line 397
	      apply 'throw_error'/2
		  (L, {[102|[105|[108|[101|[32|[110|[111|[116|[32|[102|[111|[117|[110|[100|[58|[32|[126|[116|[115]]]]]]]]]]]]]]]]]]],[F|[]]})
	  %% Line 398
	  <L,'file_not_string'> when 'true' ->
	      %% Line 399
	      apply 'throw_error'/2
		  (L, [101|[120|[112|[101|[99|[116|[101|[100|[32|[102|[105|[108|[101|[32|[110|[97|[109|[101|[32|[97|[115|[32|[97|[32|[115|[116|[114|[105|[110|[103]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	  %% Line 400
	  <L,D> when 'true' ->
	      %% Line 401
	      call 'erlang':'throw'
		  ({'error',L,D})
	end
'check_types'/3 =
    %% Line 407
    fun (_cor2,_cor1,_cor0) ->
	let <Tags> =
	    %% Line 408
	    call 'edoc_data':'get_all_tags'
		(_cor2)
	in  let <_cor8> =
		%% Line 409
		( letrec
		      'lc$^0'/1 =
			  fun (_cor6) ->
			      case _cor6 of
				<[Tag = {'tag',_cor38,_cor39,_cor40,{{'t_typedef',_cor41,_cor42,_cor43,_cor44},_cor45}}|_cor5]> when 'true' ->
				    let <_cor7> =
					apply 'lc$^0'/1
					    (_cor5)
				    in  ( [Tag|_cor7]
					  -| ['compiler_generated'] )
				( <[_cor4|_cor5]> when 'true' ->
				      apply 'lc$^0'/1
					  (_cor5)
				  -| ['compiler_generated'] )
				<[]> when 'true' ->
				    []
				( <_cor6> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor6})
					-| [{'function_name',{'lc$^0',1}}] )
				  -| ['compiler_generated'] )
			      end
		  in  apply 'lc$^0'/1
			  (Tags)
		  -| ['list_comprehension'] )
	    in  let <Entries2> =
		    %% Line 410
		    call 'edoc_data':'hidden_filter'
			(_cor2, _cor1)
		in  let <Tags2> =
			%% Line 411
			call 'edoc_data':'get_all_tags'
			    (Entries2)
		    in  let <_cor16> =
			    %% Line 412
			    ( letrec
				  'lc$^1'/1 =
				      fun (_cor14) ->
					  case _cor14 of
					    <[Tag = {'tag',_cor46,_cor47,_cor48,{'t_spec',_cor49,_cor50,_cor51}}|_cor13]> when 'true' ->
						let <_cor15> =
						    apply 'lc$^1'/1
							(_cor13)
						in  ( [Tag|_cor15]
						      -| ['compiler_generated'] )
					    ( <[_cor12|_cor13]> when 'true' ->
						  apply 'lc$^1'/1
						      (_cor13)
					      -| ['compiler_generated'] )
					    <[]> when 'true' ->
						[]
					    ( <_cor14> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor14})
						    -| [{'function_name',{'lc$^1',1}}] )
					      -| ['compiler_generated'] )
					  end
			      in  apply 'lc$^1'/1
				      (Tags2)
			      -| ['list_comprehension'] )
			in  let <DT> =
				%% Line 413
				call 'ets':'new'
				    ('types', ['bag'])
			    in  let <_cor24> =
				    %% Line 414
				    ( letrec
					  'lc$^2'/1 =
					      fun (_cor21) ->
						  case _cor21 of
						    <[%% Line 415
						      {'tag',_cor52,Line,_cor53,%% Line 416
										{{'t_typedef',Name,As,_cor54,_cor55},_cor56}}|_cor20]> when 'true' ->
							let <_cor22> =
							    apply 'add_type'/5
								(DT, Name, As, _cor0, Line)
							in  let <_cor23> =
								%% Line 416
								apply 'lc$^2'/1
								    (_cor20)
							    in  ( [_cor22|_cor23]
								  -| ['compiler_generated'] )
						    ( <[_cor19|_cor20]> when 'true' ->
							  %% Line 416
							  apply 'lc$^2'/1
							      (_cor20)
						      -| ['compiler_generated'] )
						    <[]> when 'true' ->
							[]
						    ( <_cor21> when 'true' ->
							  ( primop 'match_fail'
								({'function_clause',_cor21})
							    -| [{'function_name',{'lc$^2',1}}] )
						      -| ['compiler_generated'] )
						  end
				      in  apply 'lc$^2'/1
					      (_cor8)
				      -| ['list_comprehension'] )
				in  let <_cor26> =
					%% Line 417
					call 'proplists':'get_value'
					    ('report_missing_types', _cor1, %% Line 418
									    'false')
				    in  let <Warn> =
					    %% Line 418
					    call 'erlang':'=:='
						(_cor26, 'true')
					in  let <P> =
						%% Line 419
						{'parms',DT,Warn,_cor0,0}
					    in  %% Line 420
						letrec
						    'after$^3'/0 =
							fun () ->
							    let <_cor57> =
								%% Line 421
								call 'ets':'delete'
								    (DT)
							    in  %% Line 421
								case _cor57 of
								  <'true'> when 'true' ->
								      ( _cor57
									-| ['compiler_generated'] )
								  ( <_cor30> when 'true' ->
									primop 'match_fail'
									    ({'badmatch',_cor30})
								    -| ['compiler_generated'] )
								end
						in  try
							let <_cor29> =
							    call 'erlang':'++'
								(_cor8, _cor16)
							in  apply 'check_types3'/3
								(_cor29, P, [])
						    of <_cor31> ->
							do  ( apply 'after$^3'/0
								  ()
							      -| ['compiler_generated'] )
							    _cor31
						    catch <_cor34,_cor33,_cor32> ->
							do  ( apply 'after$^3'/0
								  ()
							      -| ['compiler_generated'] )
							    primop 'raise'
								(_cor32, _cor33)
'add_type'/5 =
    %% Line 424
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <NArgs> =
	    %% Line 425
	    call 'erlang':'length'
		(_cor2)
	in  let <TypeName> = {_cor3,%% Line 426
		       NArgs}
	    in  let <_cor7> =
		    %% Line 427
		    call 'ets':'lookup'
			(_cor4, _cor3)
		in  %% Line 427
		    case call 'lists':'member'
			     (TypeName, _cor7) of
		      %% Line 428
		      <'true'> when 'true' ->
			  %% Line 429
			  case _cor3 of
			    <{'t_name',_cor15,_cor16,N}> when 'true' ->
				%% Line 430
				apply 'type_warning'/5
				    (_cor0, _cor1, [100|[117|[112|[108|[105|[99|[97|[116|[101|[100|[32|[116|[121|[112|[101]]]]]]]]]]]]]]], N, NArgs)
			    ( <_cor8> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor8})
			      -| ['compiler_generated'] )
			  end
		      %% Line 431
		      <'false'> when 'true' ->
			  %% Line 432
			  call 'ets':'insert'
			      (_cor4, {_cor3,NArgs})
		      ( <_cor9> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor9})
			-| ['compiler_generated'] )
		    end
'check_types3'/3 =
    %% Line 435
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],_X_P,_X_Ls> when 'true' ->
	      %% Line 436
	      'ok'
	  %% Line 437
	  <[Tag|Tags],P,Ls> when 'true' ->
	      %% Line 438
	      apply 'check_type'/4
		  (Tag, P, Ls, Tags)
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'check_types3',3}}] )
	    -| ['compiler_generated'] )
	end
'check_type'/4 =
    %% Line 440
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'tag',_cor27,L,_cor28,Data},P0,Ls,Ts> when 'true' ->
	      %% Line 441
	      case P0 of
		<{'parms',_cor29,_cor30,_cor31,_cor32}> when 'true' ->
		    let <_cor6> =
			call 'erlang':'setelement'
			    (5, P0, L)
		    in  %% Line 442
			case Data of
			  %% Line 443
			  <{{'t_typedef',_cor34,_cor35,Type,Defs},_cor36}> when 'true' ->
			      let <_cor8> =
				  %% Line 444
				  call 'erlang':'++'
				      (Defs, Ts)
			      in  %% Line 444
				  apply 'check_type'/4
				      (Type, _cor6, Ls, _cor8)
			  %% Line 445
			  <{'t_spec',_cor37,Type,Defs}> when 'true' ->
			      let <_cor14> =
				  %% Line 447
				  ( letrec
					'lc$^0'/1 =
					    fun (_cor11) ->
						case _cor11 of
						  <[%% Line 448
						    {'t_def',{'t_type',_cor38,N,Args},_cor39}|_cor10]> when 'true' ->
						      let <_cor12> =
							  call 'erlang':'length'
							      (Args)
						      in  let <_cor13> =
							      %% Line 448
							      apply 'lc$^0'/1
								  (_cor10)
							  in  ( [{N,_cor12}|_cor13]
								-| ['compiler_generated'] )
						  ( <[_cor9|_cor10]> when 'true' ->
							%% Line 448
							apply 'lc$^0'/1
							    (_cor10)
						    -| ['compiler_generated'] )
						  <[]> when 'true' ->
						      []
						  ( <_cor11> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor11})
							  -| [{'function_name',{'lc$^0',1}}] )
						    -| ['compiler_generated'] )
						end
				    in  apply 'lc$^0'/1
					    (%% Line 448
					     Defs)
				    -| ['list_comprehension'] )
			      in  do  %% Line 449
				      apply 'check_type'/4
					  (Type, _cor6, _cor14, Defs)
				      %% Line 450
				      apply 'check_types3'/3
					  (Ts, _cor6, Ls)
			  %% Line 451
			  <_cor40> when 'true' ->
			      %% Line 452
			      apply 'check_types3'/3
				  (Ts, P0, Ls)
			end
		( <_cor33> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','parms'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 454
	  <{'t_def',_cor41,Type},P,Ls,Ts> when 'true' ->
	      %% Line 455
	      apply 'check_type'/4
		  (Type, P, Ls, Ts)
	  %% Line 456
	  <{'t_type',_cor42,Name,Args},P,Ls,Ts> when 'true' ->
	      let <_X_> =
		  %% Line 457
		  apply 'check_used_type'/4
		      (Name, Args, P, Ls)
	      in  let <_cor18> =
		      %% Line 458
		      call 'erlang':'++'
			  (Args, Ts)
		  in  %% Line 458
		      apply 'check_types3'/3
			  (_cor18, P, Ls)
	  %% Line 459
	  <{'t_var',_cor43,_cor44},P,Ls,Ts> when 'true' ->
	      %% Line 460
	      apply 'check_types3'/3
		  (Ts, P, Ls)
	  %% Line 461
	  <{'t_fun',_cor45,Args,Range},P,Ls,Ts> when 'true' ->
	      let <_cor19> =
		  %% Line 462
		  call 'erlang':'++'
		      (Args, Ts)
	      in  %% Line 462
		  apply 'check_type'/4
		      (Range, P, Ls, _cor19)
	  %% Line 463
	  <{'t_map',_cor46,_cor47},P,Ls,Ts> when 'true' ->
	      %% Line 464
	      apply 'check_types3'/3
		  (Ts, P, Ls)
	  %% Line 465
	  <{'t_tuple',_cor48,Types},P,Ls,Ts> when 'true' ->
	      let <_cor20> =
		  %% Line 466
		  call 'erlang':'++'
		      (Types, Ts)
	      in  %% Line 466
		  apply 'check_types3'/3
		      (_cor20, P, Ls)
	  %% Line 467
	  <{'t_list',_cor49,Type},P,Ls,Ts> when 'true' ->
	      %% Line 468
	      apply 'check_type'/4
		  (Type, P, Ls, Ts)
	  %% Line 469
	  <{'t_nil',_cor50},P,Ls,Ts> when 'true' ->
	      %% Line 470
	      apply 'check_types3'/3
		  (Ts, P, Ls)
	  %% Line 471
	  <{'t_paren',_cor51,Type},P,Ls,Ts> when 'true' ->
	      %% Line 472
	      apply 'check_type'/4
		  (Type, P, Ls, Ts)
	  %% Line 473
	  <{'t_nonempty_list',_cor52,Type},P,Ls,Ts> when 'true' ->
	      %% Line 474
	      apply 'check_type'/4
		  (Type, P, Ls, Ts)
	  %% Line 475
	  <{'t_atom',_cor53,_cor54},P,Ls,Ts> when 'true' ->
	      %% Line 476
	      apply 'check_types3'/3
		  (Ts, P, Ls)
	  %% Line 477
	  <{'t_integer',_cor55,_cor56},P,Ls,Ts> when 'true' ->
	      %% Line 478
	      apply 'check_types3'/3
		  (Ts, P, Ls)
	  %% Line 479
	  <{'t_integer_range',_cor57,_cor58,_cor59},P,Ls,Ts> when 'true' ->
	      %% Line 480
	      apply 'check_types3'/3
		  (Ts, P, Ls)
	  %% Line 481
	  <{'t_binary',_cor60,_cor61,_cor62},P,Ls,Ts> when 'true' ->
	      %% Line 482
	      apply 'check_types3'/3
		  (Ts, P, Ls)
	  %% Line 483
	  <{'t_float',_cor63,_cor64},P,Ls,Ts> when 'true' ->
	      %% Line 484
	      apply 'check_types3'/3
		  (Ts, P, Ls)
	  %% Line 485
	  <{'t_union',_cor65,Types},P,Ls,Ts> when 'true' ->
	      let <_cor21> =
		  %% Line 486
		  call 'erlang':'++'
		      (Types, Ts)
	      in  %% Line 486
		  apply 'check_types3'/3
		      (_cor21, P, Ls)
	  %% Line 487
	  <{'t_record',_cor66,_cor67,Fields},P,Ls,Ts> when 'true' ->
	      let <_cor22> =
		  %% Line 488
		  call 'erlang':'++'
		      (Fields, Ts)
	      in  %% Line 488
		  apply 'check_types3'/3
		      (_cor22, P, Ls)
	  %% Line 489
	  <{'t_field',_cor68,_cor69,Type},P,Ls,Ts> when 'true' ->
	      %% Line 490
	      apply 'check_type'/4
		  (Type, P, Ls, Ts)
	  %% Line 491
	  <'undefined',P,Ls,Ts> when 'true' ->
	      %% Line 492
	      apply 'check_types3'/3
		  (Ts, P, Ls)
	  ( <_cor26,_cor25,_cor24,_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor26,_cor25,_cor24,_cor23})
		  -| [{'function_name',{'check_type',4}}] )
	    -| ['compiler_generated'] )
	end
'check_used_type'/4 =
    %% Line 494
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Name = {'t_name',_cor26,Mod,N},Args,P,LocalTypes> when 'true' ->
	      let <NArgs> =
		  %% Line 495
		  call 'erlang':'length'
		      (Args)
	      in  let <TypeName> = {%% Line 496
		       Name,%% Line 496
			    NArgs}
		  in  %% Line 497
		      ( case P of
			  ( <( {'parms',_rec7,_cor27,_cor28,_cor29}
			       -| ['compiler_generated'] )> when 'true' ->
				let <_cor18> =
				    %% Line 500
				    ( case <> of
					( <>
					      when call 'erlang':'=/='
						    (Mod,
						     []) ->
					      'true'
					  -| ['compiler_generated'] )
					( <> when 'true' ->
					      let <_cor11> =
						  call 'ets':'lookup'
						      (_rec7, Name)
					      in  %% Line 501
						  ( case call 'lists':'member'
							     (TypeName, _cor11) of
						      ( <( 'true'
							   -| ['compiler_generated'] )> when 'true' ->
							    'true'
							-| ['compiler_generated'] )
						      ( <( 'false'
							   -| ['compiler_generated'] )> when 'true' ->
							    %% Line 502
							    ( case call 'edoc_types':'is_predefined'
								       (N, NArgs) of
								( <( 'true'
								     -| ['compiler_generated'] )> when 'true' ->
								      'true'
								  -| ['compiler_generated'] )
								( <( 'false'
								     -| ['compiler_generated'] )> when 'true' ->
								      %% Line 503
								      ( case call 'edoc_types':'is_predefined_otp_type'
										 (N, NArgs) of
									  ( <( 'true'
									       -| ['compiler_generated'] )> when 'true' ->
										'true'
									    -| ['compiler_generated'] )
									  ( <( 'false'
									       -| ['compiler_generated'] )> when 'true' ->
										call 'lists':'member'
										    (TypeName, LocalTypes)
									    -| ['compiler_generated'] )
									  ( <_cor13> when 'true' ->
										( call ( 'erlang'
											 -| ['compiler_generated'] ):( 'error'
														       -| ['compiler_generated'] )
										      (( {( 'badarg'
											    -| ['compiler_generated'] ),_cor13}
											 -| ['compiler_generated'] ))
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									end
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
								( <_cor12> when 'true' ->
								      ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'error'
													     -| ['compiler_generated'] )
									    (( {( 'badarg'
										  -| ['compiler_generated'] ),_cor12}
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
							      end
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						      ( <_cor10> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {( 'badarg'
									-| ['compiler_generated'] ),_cor10}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
						    -| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				in  %% Line 498
				    case _cor18 of
				      %% Line 505
				      <'true'> when 'true' ->
					  %% Line 506
					  'ok'
				      %% Line 507
				      <'false'> when 'true' ->
					  %% Line 510
					  ( case <> of
					      <>
						  when call 'erlang':'=:='
							(_cor27,
							 'true') ->
						  let <_cor20> =
						      apply 'type_warning'/5
							  (_cor29, _cor28, [109|[105|[115|[115|[105|[110|[103|[32|[116|[121|[112|[101]]]]]]]]]]]], N, NArgs)
						  in  ( [_cor20|[]]
							-| ['compiler_generated'] )
					      ( <> when 'true' ->
						    []
						-| ['compiler_generated'] )
					    end
					    -| ['list_comprehension'] )
				      ( <_cor21> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor21})
					-| ['compiler_generated'] )
				    end
			    -| ['compiler_generated'] )
			  ( <_cor30> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','parms'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  ( <_cor25,_cor24,_cor23,_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor25,_cor24,_cor23,_cor22})
		  -| [{'function_name',{'check_used_type',4}}] )
	    -| ['compiler_generated'] )
	end
'type_warning'/5 =
    %% Line 513
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 514
	    ( case <> of
		<>
		    when call 'erlang':'>'
			  (_cor0,
			   0) ->
		    let <_cor5> =
			call 'erlang':'integer_to_list'
			    (_cor0)
		    in  let <_cor6> =
			    [47|_cor5]
			in  ( [_cor6|[]]
			      -| ['compiler_generated'] )
		( <> when 'true' ->
		      []
		  -| ['compiler_generated'] )
	      end
	      -| ['list_comprehension'] )
	in  let <_cor9> =
		%% Line 515
		call 'erlang':'++'
		    (_cor2, [32|[126|[119|[126|[115]]]]])
	    in  %% Line 515
		call 'edoc_report':'warning'
		    (_cor4, _cor3, _cor9, [_cor1|[_cor7|[]]])
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('edoc_tags')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('edoc_tags', _cor0)
end