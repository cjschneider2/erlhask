module 'edoc_report' ['error'/1,
		      'error'/2,
		      'error'/3,
		      'module_info'/0,
		      'module_info'/1,
		      'report'/2,
		      'report'/3,
		      'report'/4,
		      'warning'/1,
		      'warning'/2,
		      'warning'/3,
		      'warning'/4]
    attributes []
'error'/1 =
    %% Line 44
    fun (_cor0) ->
	%% Line 45
	apply 'error'/2
	    ([], _cor0)
'error'/2 =
    %% Line 47
    fun (_cor1,_cor0) ->
	%% Line 48
	apply 'error'/3
	    (0, _cor1, _cor0)
'error'/3 =
    %% Line 50
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Line,Where,S>
	      when call 'erlang':'is_list'
		    (S) ->
	      %% Line 51
	      apply 'report'/4
		  (Line, Where, S, [])
	  %% Line 52
	  <Line,Where,{S,D}>
	      when call 'erlang':'is_list'
		    (S) ->
	      %% Line 53
	      apply 'report'/4
		  (Line, Where, S, D)
	  %% Line 54
	  <Line,Where,{'format_error',M,D}> when 'true' ->
	      let <_cor3> =
		  %% Line 55
		  call M:'format_error'
		      (D)
	      in  %% Line 55
		  apply 'report'/4
		      (Line, Where, _cor3, [])
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'error',3}}] )
	    -| ['compiler_generated'] )
	end
'warning'/1 =
    %% Line 57
    fun (_cor0) ->
	%% Line 58
	apply 'warning'/2
	    (_cor0, [])
'warning'/2 =
    %% Line 60
    fun (_cor1,_cor0) ->
	%% Line 61
	apply 'warning'/3
	    ([], _cor1, _cor0)
'warning'/3 =
    %% Line 63
    fun (_cor2,_cor1,_cor0) ->
	%% Line 64
	apply 'warning'/4
	    (0, _cor2, _cor1, _cor0)
'warning'/4 =
    %% Line 66
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 67
	    call 'erlang':'++'
		([119|[97|[114|[110|[105|[110|[103|[58|[32]]]]]]]]], _cor1)
	in  %% Line 67
	    apply 'report'/4
		(_cor3, _cor2, _cor4, _cor0)
'report'/2 =
    %% Line 69
    fun (_cor1,_cor0) ->
	%% Line 70
	apply 'report'/3
	    ([], _cor1, _cor0)
'report'/3 =
    %% Line 72
    fun (_cor2,_cor1,_cor0) ->
	%% Line 73
	apply 'report'/4
	    (0, _cor2, _cor1, _cor0)
'report'/4 =
    %% Line 75
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 76
	    apply 'where'/1
		(_cor2)
	in  do  %% Line 76
		call 'io':'put_chars'
		    (_cor4)
		do  %% Line 77
		    case <> of
		      <>
			  when let <_cor5> =
				call 'erlang':'is_integer'
				    (_cor3)
			    in  let <_cor6> =
				    call 'erlang':'>'
					(_cor3, 0)
				in  call 'erlang':'and'
					(_cor5, _cor6) ->
			  %% Line 78
			  call 'io':'fwrite'
			      ([97|[116|[32|[108|[105|[110|[101|[32|[126|[119|[58|[32]]]]]]]]]]]], [_cor3|[]])
		      %% Line 79
		      <> when 'true' ->
			  'ok'
		    end
		    do  %% Line 82
			call 'io':'fwrite'
			    (_cor1, _cor0)
			%% Line 83
			call 'io':'nl'
			    ()
'where'/1 =
    %% Line 85
    fun (_cor0) ->
	case _cor0 of
	  <{File,'module'}> when 'true' ->
	      %% Line 86
	      call 'io_lib':'fwrite'
		  ([126|[116|[115|[44|[32|[105|[110|[32|[109|[111|[100|[117|[108|[101|[32|[104|[101|[97|[100|[101|[114|[58|[32]]]]]]]]]]]]]]]]]]]]]]], [File|[]])
	  %% Line 87
	  <{File,'footer'}> when 'true' ->
	      %% Line 88
	      call 'io_lib':'fwrite'
		  ([126|[116|[115|[44|[32|[105|[110|[32|[109|[111|[100|[117|[108|[101|[32|[102|[111|[111|[116|[101|[114|[58|[32]]]]]]]]]]]]]]]]]]]]]]], [File|[]])
	  %% Line 89
	  <{File,'header'}> when 'true' ->
	      %% Line 90
	      call 'io_lib':'fwrite'
		  ([126|[116|[115|[44|[32|[105|[110|[32|[104|[101|[97|[100|[101|[114|[32|[102|[105|[108|[101|[58|[32]]]]]]]]]]]]]]]]]]]]], [File|[]])
	  %% Line 91
	  <{File,{F,A}}> when 'true' ->
	      %% Line 92
	      call 'io_lib':'fwrite'
		  ([126|[116|[115|[44|[32|[102|[117|[110|[99|[116|[105|[111|[110|[32|[126|[115|[47|[126|[119|[58|[32]]]]]]]]]]]]]]]]]]]]], [File|[F|[A|[]]]])
	  %% Line 93
	  <[]> when 'true' ->
	      %% Line 94
	      call 'io_lib':'fwrite'
		  ([126|[115|[58|[32]]]], ['edoc'])
	  %% Line 95
	  <File>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 96
	      call 'erlang':'++'
		  (File, [58|[32]])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'where',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('edoc_report')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('edoc_report', _cor0)
end