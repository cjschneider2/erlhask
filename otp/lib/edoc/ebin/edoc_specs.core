module 'edoc_specs' ['add_data'/4,
		     'docs'/2,
		     'dummy_spec'/1,
		     'is_tag'/1,
		     'module_info'/0,
		     'module_info'/1,
		     'spec'/2,
		     'tag'/1,
		     'type'/2]
    attributes [%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','context'},[{'record_field',32,{'atom',32,'dir'},{'string',32,[]}}|[{'record_field',33,{'atom',33,'env'}}|[{'record_field',34,{'atom',34,'opts'},{'nil',34}}]]],[]}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{{'record','doclet_gen'},[{'record_field',51,{'atom',51,'sources'},{'nil',51}}|[{'record_field',52,{'atom',52,'app'},{'nil',52}}|[{'record_field',53,{'atom',53,'packages'},{'nil',53}}|[{'record_field',54,{'atom',54,'modules'},{'nil',54}}|[{'record_field',55,{'atom',55,'filemap'}}]]]]],[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','doclet_toc'},[{'record_field',61,{'atom',61,'paths'}}|[{'record_field',62,{'atom',62,'indir'}}]],[]}],
		%% Line 56
		'type' =
		    %% Line 56
		    [{{'record','module'},[{'record_field',56,{'atom',56,'name'},{'nil',56}}|[{'record_field',57,{'atom',57,'parameters'},{'atom',57,'none'}}|[{'record_field',58,{'atom',58,'functions'},{'nil',58}}|[{'record_field',59,{'atom',59,'exports'},{'nil',59}}|[{'record_field',60,{'atom',60,'attributes'},{'nil',60}}|[{'record_field',61,{'atom',61,'records'},{'nil',61}}|[{'record_field',62,{'atom',62,'encoding'},{'atom',62,'latin1'}}]]]]]]],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{{'record','env'},[{'record_field',67,{'atom',67,'module'},{'nil',67}}|[{'record_field',68,{'atom',68,'package'},{'nil',68}}|[{'record_field',69,{'atom',69,'root'},{'string',69,[]}}|[{'record_field',70,{'atom',70,'file_suffix'}}|[{'record_field',71,{'atom',71,'package_summary'}}|[{'record_field',72,{'atom',72,'apps'}}|[{'record_field',73,{'atom',73,'modules'}}|[{'record_field',74,{'atom',74,'packages'}}|[{'record_field',75,{'atom',75,'app_default'}}|[{'record_field',76,{'atom',76,'macros'},{'nil',76}}|[{'record_field',77,{'atom',77,'includes'},{'nil',77}}]]]]]]]]]]],[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{{'record','comment'},[{'record_field',85,{'atom',85,'line'},{'integer',85,0}}|[{'record_field',85,{'atom',85,'text'}}]],[]}],
		%% Line 96
		'type' =
		    %% Line 96
		    [{{'record','entry'},[{'record_field',96,{'atom',96,'name'}}|[{'record_field',96,{'atom',96,'args'},{'nil',96}}|[{'record_field',96,{'atom',96,'line'},{'integer',96,0}}|[{'record_field',96,{'atom',96,'export'}}|[{'record_field',96,{'atom',96,'data'}}]]]]],[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{{'record','tag'},[{'record_field',105,{'atom',105,'name'}}|[{'record_field',105,{'atom',105,'line'},{'integer',105,0}}|[{'record_field',105,{'atom',105,'origin'},{'atom',105,'comment'}}|[{'record_field',105,{'atom',105,'data'}}]]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','t_spec'},[{'record_field',30,{'atom',30,'name'}}|[{'record_field',30,{'atom',30,'type'}}|[{'record_field',30,{'atom',30,'defs'},{'nil',30}}]]],[]}],
		%% Line 42
		'type' =
		    %% Line 42
		    [{{'record','t_typedef'},[{'record_field',42,{'atom',42,'name'}}|[{'record_field',42,{'atom',42,'args'}}|[{'record_field',42,{'atom',42,'type'}}|[{'record_field',43,{'atom',43,'defs'},{'nil',43}}]]]],[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','t_throws'},[{'record_field',48,{'atom',48,'type'}}|[{'record_field',48,{'atom',48,'defs'},{'nil',48}}]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{{'record','t_def'},[{'record_field',53,{'atom',53,'name'}}|[{'record_field',53,{'atom',53,'type'}}]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','t_name'},[{'record_field',58,{'atom',58,'app'},{'nil',58}}|[{'record_field',59,{'atom',59,'module'},{'nil',59}}|[{'record_field',60,{'atom',60,'name'},{'nil',60}}]]],[]}],
		%% Line 74
		'type' =
		    %% Line 74
		    [{{'record','t_var'},[{'record_field',74,{'atom',74,'a'},{'nil',74}}|[{'record_field',74,{'atom',74,'name'},{'nil',74}}]],[]}],
		%% Line 80
		'type' =
		    %% Line 80
		    [{{'record','t_type'},[{'record_field',80,{'atom',80,'a'},{'nil',80}}|[{'record_field',81,{'atom',81,'name'}}|[{'record_field',82,{'atom',82,'args'},{'nil',82}}]]],[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{{'record','t_union'},[{'record_field',87,{'atom',87,'a'},{'nil',87}}|[{'record_field',87,{'atom',87,'types'},{'nil',87}}]],[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','t_fun'},[{'record_field',93,{'atom',93,'a'},{'nil',93}}|[{'record_field',93,{'atom',93,'args'}}|[{'record_field',93,{'atom',93,'range'}}]]],[]}],
		%% Line 98
		'type' =
		    %% Line 98
		    [{{'record','t_tuple'},[{'record_field',98,{'atom',98,'a'},{'nil',98}}|[{'record_field',98,{'atom',98,'types'},{'nil',98}}]],[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','t_list'},[{'record_field',103,{'atom',103,'a'},{'nil',103}}|[{'record_field',103,{'atom',103,'type'}}]],[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','t_nil'},[{'record_field',107,{'atom',107,'a'},{'nil',107}}],[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{{'record','t_nonempty_list'},[{'record_field',112,{'atom',112,'a'},{'nil',112}}|[{'record_field',112,{'atom',112,'type'}}]],[]}],
		%% Line 117
		'type' =
		    %% Line 117
		    [{{'record','t_atom'},[{'record_field',117,{'atom',117,'a'},{'nil',117}}|[{'record_field',117,{'atom',117,'val'}}]],[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{{'record','t_integer'},[{'record_field',122,{'atom',122,'a'},{'nil',122}}|[{'record_field',122,{'atom',122,'val'}}]],[]}],
		%% Line 128
		'type' =
		    %% Line 128
		    [{{'record','t_integer_range'},[{'record_field',128,{'atom',128,'a'},{'nil',128}}|[{'record_field',128,{'atom',128,'from'}}|[{'record_field',128,{'atom',128,'to'}}]]],[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{{'record','t_binary'},[{'record_field',134,{'atom',134,'a'},{'nil',134}}|[{'record_field',134,{'atom',134,'base_size'},{'integer',134,0}}|[{'record_field',134,{'atom',134,'unit_size'},{'integer',134,0}}]]],[]}],
		%% Line 139
		'type' =
		    %% Line 139
		    [{{'record','t_float'},[{'record_field',139,{'atom',139,'a'},{'nil',139}}|[{'record_field',139,{'atom',139,'val'}}]],[]}],
		%% Line 145
		'type' =
		    %% Line 145
		    [{{'record','t_record'},[{'record_field',145,{'atom',145,'a'},{'nil',145}}|[{'record_field',146,{'atom',146,'name'}}|[{'record_field',147,{'atom',147,'fields'},{'nil',147}}]]],[]}],
		%% Line 153
		'type' =
		    %% Line 153
		    [{{'record','t_field'},[{'record_field',153,{'atom',153,'a'},{'nil',153}}|[{'record_field',153,{'atom',153,'name'}}|[{'record_field',153,{'atom',153,'type'}}]]],[]}],
		%% Line 157
		'type' =
		    %% Line 157
		    [{{'record','t_paren'},[{'record_field',157,{'atom',157,'a'},{'nil',157}}|[{'record_field',157,{'atom',157,'type'}}]],[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','t_map'},[{'record_field',159,{'atom',159,'a'},{'nil',159}}|[{'record_field',159,{'atom',159,'types'},{'nil',159}}]],[]}],
		%% Line 160
		'type' =
		    %% Line 160
		    [{{'record','t_map_field'},[{'record_field',160,{'atom',160,'a'},{'nil',160}}|[{'record_field',160,{'atom',160,'k_type'}}|[{'record_field',160,{'atom',160,'v_type'}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{'syntaxTree',{'remote_type',30,[{'atom',30,'erl_syntax'}|[{'atom',30,'syntaxTree'}|[[]]]]},[]}],
		%% Line 38
		'spec' =
		    %% Line 38
		    [{{'type',2},[{'type',38,'fun',[{'type',38,'product',[{'ann_type',38,[{'var',38,'Form'}|[{'type',38,'syntaxTree',[]}]]}|[{'ann_type',38,[{'var',38,'TypeDocs'}|[{'remote_type',38,[{'atom',38,'dict'}|[{'atom',38,'dict'}|[[]]]]}]]}]]}|[{'type',38,'record',[{'atom',38,'tag'}]}]]}]}],
		%% Line 68
		'spec' =
		    %% Line 68
		    [{{'spec',2},[{'type',68,'fun',[{'type',68,'product',[{'ann_type',68,[{'var',68,'Form'}|[{'type',68,'syntaxTree',[]}]]}|[{'ann_type',68,[{'var',68,'ClauseN'}|[{'type',68,'pos_integer',[]}]]}]]}|[{'type',68,'record',[{'atom',68,'tag'}]}]]}]}],
		%% Line 78
		'spec' =
		    %% Line 78
		    [{{'dummy_spec',1},[{'type',78,'fun',[{'type',78,'product',[{'ann_type',78,[{'var',78,'Form'}|[{'type',78,'syntaxTree',[]}]]}]}|[{'type',78,'record',[{'atom',78,'tag'}]}]]}]}],
		%% Line 89
		'spec' =
		    %% Line 89
		    [{{'docs',2},[{'type',89,'fun',[{'type',89,'product',[{'ann_type',89,[{'var',89,'Forms'}|[{'type',89,'list',[{'type',89,'syntaxTree',[]}]}]]}|[{'ann_type',90,[{'var',90,'CommentFun'}|[{'type',90,'fun',[{'type',90,'product',[{'type',90,'list',[{'type',90,'syntaxTree',[]}]}|[{'ann_type',90,[{'var',90,'Line'}|[{'type',90,'term',[]}]]}]]}|[{'type',90,'record',[{'atom',90,'tag'}]}]]}]]}]]}|[{'remote_type',91,[{'atom',91,'dict'}|[{'atom',91,'dict'}|[[]]]]}]]}]}],
		%% Line 98
		'type' =
		    %% Line 98
		    [{'entry',{'type',98,'record',[{'atom',98,'entry'}]},[]}],
		%% Line 99
		'type' =
		    %% Line 99
		    [{'module_info',{'type',99,'record',[{'atom',99,'module'}]},[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{'entries',{'type',100,'list',[{'type',100,'entry',[]}]},[]}],
		%% Line 101
		'spec' =
		    %% Line 101
		    [{{'add_data',4},[{'type',101,'fun',[{'type',101,'product',[{'ann_type',101,[{'var',101,'Entries'}|[{'type',101,'entries',[]}]]}|[{'ann_type',101,[{'var',101,'Options'}|[{'remote_type',101,[{'atom',101,'proplists'}|[{'atom',101,'proplist'}|[[]]]]}]]}|[{'ann_type',102,[{'var',102,'File'}|[{'remote_type',102,[{'atom',102,'file'}|[{'atom',102,'filename'}|[[]]]]}]]}|[{'ann_type',102,[{'var',102,'Module'}|[{'type',102,'module_info',[]}]]}]]]]}|[{'type',102,'entries',[]}]]}]}],
		%% Line 425
		'type' =
		    %% Line 425
		    [{{'record','parms'},[{'record_field',425,{'atom',425,'tab'}}|[{'record_field',425,{'atom',425,'warn'}}|[{'record_field',425,{'atom',425,'file'}}|[{'record_field',425,{'atom',425,'line'}}]]]],[]}],
		%% Line 595
		'spec' =
		    %% Line 595
		    [{{'is_tag',1},[{'type',595,'fun',[{'type',595,'product',[{'ann_type',595,[{'var',595,'Tag'}|[{'type',595,'atom',[]}]]}]}|[{'type',595,'boolean',[]}]]}]}],
		%% Line 604
		'type' =
		    %% Line 604
		    [{'tag_kind',{'type',604,'union',[{'atom',604,'type'}|[{'atom',604,'spec'}|[{'atom',604,'unknown'}]]]},[]}],
		%% Line 605
		'spec' =
		    %% Line 605
		    [{{'tag',1},[{'type',605,'fun',[{'type',605,'product',[{'ann_type',605,[{'var',605,'Tag'}|[{'type',605,'atom',[]}]]}]}|[{'type',605,'tag_kind',[]}]]}]}]]
'type'/2 =
    %% Line 43
    fun (_cor1,_cor0) ->
	%% Line 44
	case call 'erl_syntax_lib':'analyze_wild_attribute'
		 (_cor1) of
	  <{Name,Data0}> when 'true' ->
	      %% Line 45
	      case apply 'tag'/1
		       (Name) of
		<'type'> when 'true' ->
		    let <TypeName,Type,Args,Doc> =
			%% Line 47
			case Data0 of
			  %% Line 48
			  <{{'record',R},Fs,[]}> when 'true' ->
			      let <L> =
				  %% Line 49
				  call 'erl_syntax':'get_pos'
				      (_cor1)
			      in  %% Line 50
				  <{'record',R},{'type',L,'record',[{'atom',L,R}|Fs]},[],[]>
			  %% Line 51
			  <{N,T,As}> when 'true' ->
			      let <_cor5> =
				  %% Line 53
				  call 'erlang':'length'
				      (As)
			      in  let <_cor7> =
				      %% Line 53
				      case call 'dict':'find'
					       ({N,_cor5}, _cor0) of
					%% Line 54
					<{'ok',Doc1}> when 'true' ->
					    %% Line 55
					    Doc1
					%% Line 56
					<'error'> when 'true' ->
					    %% Line 57
					    []
					( <_cor6> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_cor6})
					  -| ['compiler_generated'] )
				      end
				  in  %% Line 59
				      <{'t_name',[],[],N},T,As,_cor7>
			  ( <_cor9> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor9})
			    -| ['compiler_generated'] )
			end
		    in  let <_cor15> =
			    %% Line 61
			    call 'erlang':'element'
				(2, Type)
			in  let <_cor14> =
				%% Line 64
				apply 'd2e'/1
				    (Args)
			    in  let <_cor12> =
				    %% Line 65
				    apply 'opaque2abstr'/2
					(Name, Type)
				in  let <_cor13> =
					%% Line 65
					apply 'd2e'/1
					    (_cor12)
				    in  %% Line 61
					{'tag','type',_cor15,%% Line 62
							     'code',%% Line 63
								    {{'t_typedef',TypeName,_cor14,_cor13,[]},%% Line 66
													     Doc}}
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'spec'/2 =
    %% Line 71
    fun (_cor1,_cor0) ->
	%% Line 72
	case apply 'get_spec'/1
		 (_cor1) of
	  <{Name,_X_Arity,TypeSpecs}> when 'true' ->
	      let <TypeSpec> =
		  %% Line 73
		  call 'lists':'nth'
		      (_cor0, TypeSpecs)
	      in  let <_cor6> =
		      %% Line 74
		      call 'erlang':'element'
			  (2, TypeSpec)
		  in  let <_cor4> =
			  %% Line 76
			  apply 'd2e'/1
			      (TypeSpec)
		      in  let <_cor5> =
			      %% Line 76
			      apply 'aspec'/2
				  (_cor4, Name)
			  in  %% Line 74
			      {'tag','spec',_cor6,%% Line 75
						  'code',_cor5}
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'dummy_spec'/1 =
    %% Line 82
    fun (_cor0) ->
	%% Line 83
	case apply 'get_spec'/1
		 (_cor0) of
	  <{{'t_name',_cor9,_cor10,Name},Arity,TypeSpecs}> when 'true' ->
	      let <_cor2> =
		  %% Line 84
		  call 'lists':'duplicate'
		      (Arity, [95|[88]])
	      in  let <As> =
		      %% Line 84
		      call 'string':'join'
			  (_cor2, [44])
		  in  let <_cor4> =
			  %% Line 85
			  call 'io_lib':'format'
			      ([126|[112|[40|[126|[115|[41|[32|[45|[62|[32|[116|[114|[117|[101|[10]]]]]]]]]]]]]]], [Name|[As|[]]])
		      in  let <S> =
			      %% Line 85
			      call 'lists':'flatten'
				  (_cor4)
			  in  let <_cor6> =
				  %% Line 86
				  call 'erlang':'hd'
				      (TypeSpecs)
			      in  let <_cor7> =
				      %% Line 86
				      call 'erlang':'element'
					  (2, _cor6)
				  in  %% Line 86
				      {'tag','spec',_cor7,%% Line 87
							  'code',%% Line 87
								 S}
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'docs'/2 =
    %% Line 95
    fun (_cor1,_cor0) ->
	%% Line 96
	apply 'find_type_docs'/3
	    (_cor1, [], _cor0)
'add_data'/4 =
    %% Line 107
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <TypeDefs0> =
	    %% Line 108
	    apply 'espec_types'/1
		(_cor3)
	in  let <TypeTable> =
		%% Line 109
		call 'ets':'new'
		    ('etypes', ['ordered_set'])
	    in  let <Es1> =
		    %% Line 110
		    apply 'expand_records'/6
			(_cor3, TypeDefs0, TypeTable, _cor2, _cor1, _cor0)
		in  let <_cor12> =
			%% Line 111
			( letrec
			      'lc$^0'/1 =
				  fun (_cor9) ->
				      case _cor9 of
					<[E|_cor8]> when 'true' ->
					    let <_cor10> =
						apply 'use_tags'/2
						    (E, TypeTable)
					    in  let <_cor11> =
						    apply 'lc$^0'/1
							(_cor8)
						in  ( [_cor10|_cor11]
						      -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor9> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor9})
						-| [{'function_name',{'lc$^0',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lc$^0'/1
				  (Es1)
			  -| ['list_comprehension'] )
		    in  %% Line 112
			case call 'ets':'delete'
				 (TypeTable) of
			  <'true'> when 'true' ->
			      _cor12
			  ( <_cor14> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor14})
			    -| ['compiler_generated'] )
			end
'aspec'/2 =
    %% Line 119
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Spec = {'t_spec',_cor6,_cor7,_cor8},Name> when 'true' ->
	      %% Line 120
	      call 'erlang':'setelement'
		  (2, Spec, Name)
	  %% Line 121
	  <Type,Name> when 'true' ->
	      %% Line 122
	      {'t_spec',Name,Type,[]}
	end
'get_spec'/1 =
    %% Line 124
    fun (_cor0) ->
	%% Line 125
	case call 'erl_syntax_lib':'analyze_wild_attribute'
		 (_cor0) of
	  <{'spec',Data0}> when 'true' ->
	      %% Line 126
	      case Data0 of
		%% Line 127
		<{{F,A},D}> when 'true' ->
		    %% Line 128
		    {{'t_name',[],[],F},A,D}
		%% Line 129
		<{{M,F,A},D}> when 'true' ->
		    %% Line 130
		    {{'t_name',[],M,F},A,D}
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'find_type_docs'/3 =
    %% Line 133
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],Cs,_X_Fun> when 'true' ->
	      %% Line 134
	      call 'dict':'from_list'
		  (Cs)
	  %% Line 135
	  <[F|Fs],Cs,Fun> when 'true' ->
	      %% Line 136
	      try
		  apply 'get_name_and_last_line'/1
		      (F)
	      of <_cor3> ->
		  case _cor3 of
		    %% Line 137
		    <{Name,LastTypeLine}> when 'true' ->
			let <C0> =
			    %% Line 138
			    call 'erl_syntax':'comment'
				([[37|[32|[64|[116|[121|[112|[101|[32|[102|[40|[41|[46|[32]]]]]]]]]]]]]])
			in  let <C1> =
				%% Line 139
				call 'erl_syntax':'set_pos'
				    (C0, LastTypeLine)
			    in  let <_cor14> =
				    %% Line 141
				    ( letrec
					  'lc$^0'/1 =
					      fun (_cor11) ->
						  case _cor11 of
						    <[%% Line 142
						      C|_cor7]> when 'true' ->
							let <_cor9> =
							    %% Line 143
							    call 'erl_syntax':'get_pos'
								(C)
							in  let <_cor10> =
								%% Line 143
								apply 'get_line'/1
								    (_cor9)
							    in  %% Line 143
								( case <> of
								    <>
									when call 'erlang':'>='
									      (_cor10,
									       LastTypeLine) ->
									let <_cor12> =
									    apply 'lc$^0'/1
										(_cor7)
									in  ( [C|_cor12]
									      -| ['compiler_generated'] )
								    ( <> when 'true' ->
									  apply 'lc$^0'/1
									      (_cor7)
								      -| ['compiler_generated'] )
								  end
								  -| ['list_comprehension'] )
						    <[]> when 'true' ->
							[]
						    ( <_cor11> when 'true' ->
							  ( primop 'match_fail'
								({'function_clause',_cor11})
							    -| [{'function_name',{'lc$^0',1}}] )
						      -| ['compiler_generated'] )
						  end
				      in  let <_cor8> =
					      %% Line 142
					      call 'erl_syntax':'get_postcomments'
						  (F)
					  in  apply 'lc$^0'/1
						  (_cor8)
				      -| ['list_comprehension'] )
				in  let <C2> =
					%% Line 141
					[C1|_cor14]
				    in  let <C3> =
					    %% Line 144
					    apply 'collect_comments'/2
						(Fs, LastTypeLine)
					in  let <_cor17> =
						%% Line 145
						call 'erlang':'++'
						    (C2, C3)
					    in  let <_cor18> =
						    %% Line 145
						    call 'lists':'reverse'
							(_cor17)
						in  %% Line 145
						    case apply Fun
							     (_cor18, LastTypeLine) of
						      <{'tag',_cor29,_cor30,_cor31,Doc0}> when 'true' ->
							  %% Line 146
							  case apply 'strip'/1
								   (Doc0) of
							    %% Line 147
							    <[]> when 'true' ->
								%% Line 148
								apply 'find_type_docs'/3
								    (Fs, Cs, Fun)
							    %% Line 149
							    <Doc> when 'true' ->
								let <W> =
								    %% Line 150
								    call 'edoc_wiki':'parse_xml'
									(Doc, LastTypeLine)
								in  %% Line 151
								    apply 'find_type_docs'/3
									(Fs, [{Name,W}|Cs], Fun)
							  end
						      ( <_cor19> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_cor19})
							-| ['compiler_generated'] )
						    end
		    ( <_cor22> when 'true' ->
			  primop 'match_fail'
			      ({'try_clause',_cor22})
		      -| ['compiler_generated'] )
		  end
	      catch <_cor25,_cor24,_cor23> ->
		  %% Line 154
		  apply 'find_type_docs'/3
		      (Fs, Cs, Fun)
	  ( <_cor28,_cor27,_cor26> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor28,_cor27,_cor26})
		  -| [{'function_name',{'find_type_docs',3}}] )
	    -| ['compiler_generated'] )
	end
'collect_comments'/2 =
    %% Line 157
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],_X_Line> when 'true' ->
	      %% Line 158
	      []
	  %% Line 159
	  <[F|Fs],Line> when 'true' ->
	      let <_cor2> =
		  %% Line 160
		  call 'erl_syntax':'get_pos'
		      (F)
	      in  let <L1> =
		      %% Line 160
		      apply 'get_line'/1
			  (_cor2)
		  in  %% Line 161
		      case <> of
			%% Line 162
			<>
			    when let <_cor5> =
				  try
				      let <_cor4> =
					  call 'erlang':'+'
					      (Line, 1)
				      in  call 'erlang':'=:='
					      (L1, _cor4)
				  of <Try> ->
				      Try
				  catch <T,R> ->
				      'false'
			      in  let <_cor6> =
				      %% Line 163
				      call 'erlang':'=:='
					  (L1, Line)
				  in  call 'erlang':'or'
					  (_cor5, _cor6) ->
			    %% Line 164
			    case apply 'is_comment'/1
				     (F) of
			      %% Line 165
			      <'true'> when 'true' ->
				  let <_cor7> =
				      %% Line 166
				      apply 'collect_comments'/2
					  (Fs, L1)
				  in  %% Line 166
				      [F|_cor7]
			      %% Line 167
			      <'false'> when 'true' ->
				  %% Line 168
				  []
			      ( <_cor8> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor8})
				-| ['compiler_generated'] )
			    end
			%% Line 170
			<> when 'true' ->
			    %% Line 171
			    []
		      end
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9})
		  -| [{'function_name',{'collect_comments',2}}] )
	    -| ['compiler_generated'] )
	end
'is_comment'/1 =
    %% Line 177
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 178
	    call 'erl_syntax_lib':'analyze_form'
		(_cor0)
	in  %% Line 178
	    call 'erlang':'=:='
		(_cor1, 'comment')
'strip'/1 =
    %% Line 180
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 181
	      []
	  %% Line 182
	  <[10|S]> when 'true' ->
	      %% Line 183
	      S
	  %% Line 184
	  <[_cor2|S]> when 'true' ->
	      %% Line 185
	      apply 'strip'/1
		  (S)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'strip',1}}] )
	    -| ['compiler_generated'] )
	end
'get_name_and_last_line'/1 =
    %% Line 189
    fun (_cor0) ->
	%% Line 190
	case call 'erl_syntax_lib':'analyze_wild_attribute'
		 (_cor0) of
	  <{Name,Data}> when 'true' ->
	      %% Line 191
	      case call 'edoc_specs':'tag'
		       (Name) of
		<'type'> when 'true' ->
		    let <_cor3> =
			%% Line 192
			call 'erl_syntax':'get_pos'
			    (_cor0)
		    in  let <Attr> =
			    %% Line 192
			    {'attribute',_cor3,Name,Data}
			in  let <Ref> =
				%% Line 193
				call 'erlang':'make_ref'
				    ()
			    in  let <Fun> =
				    %% Line 194
				    ( fun (_cor7) ->
					  let <_cor6> =
					      apply 'get_line'/1
						  (_cor7)
					  in  {Ref,_cor6}
				      -| [{'id',{0,0,'-get_name_and_last_line/1-fun-0-'}}] )
				in  %% Line 195
				    case Data of
				      %% Line 196
				      <{N,_X_T,As}>
					  when call 'erlang':'is_atom'
						(N) ->
					  let <_cor10> =
					      %% Line 197
					      call 'erlang':'length'
						  (As)
					  in  let <_cor12> = {%% Line 197
						   N,_cor10}
					      in  let <_cor14> =
						      %% Line 199
						      call 'erl_lint':'modify_line'
							  (Attr, Fun)
						  in  let <Line> =
							  %% Line 199
							  apply 'gll'/2
							      (_cor14, Ref)
						      in  %% Line 200
							  {_cor12,Line}
				      ( <_cor11> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor11})
					-| ['compiler_generated'] )
				    end
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'gll'/2 =
    %% Line 202
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{Ref,Line},_cor11>
	      when call 'erlang':'=:='
		    (_cor11,
		     Ref) ->
	      %% Line 203
	      Line
	  %% Line 204
	  <[],_X_Ref> when 'true' ->
	      %% Line 205
	      0
	  %% Line 206
	  <List,Ref>
	      when call 'erlang':'is_list'
		    (List) ->
	      let <_cor7> =
		  %% Line 207
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor4) ->
				case _cor4 of
				  <[E|_cor3]> when 'true' ->
				      let <_cor5> =
					  apply 'gll'/2
					      (E, Ref)
				      in  let <_cor6> =
					      apply 'lc$^0'/1
						  (_cor3)
					  in  ( [_cor5|_cor6]
						-| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_cor4> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor4})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (List)
		    -| ['list_comprehension'] )
	      in  %% Line 207
		  call 'lists':'max'
		      (_cor7)
	  %% Line 208
	  <Tuple,Ref>
	      when call 'erlang':'is_tuple'
		    (Tuple) ->
	      let <_cor8> =
		  %% Line 209
		  call 'erlang':'tuple_to_list'
		      (Tuple)
	      in  %% Line 209
		  apply 'gll'/2
		      (_cor8, Ref)
	  %% Line 210
	  <_cor12,_cor13> when 'true' ->
	      %% Line 211
	      0
	end
'get_line'/1 =
    %% Line 213
    fun (_cor0) ->
	%% Line 214
	case call 'erl_scan':'attributes_info'
		 (_cor0, 'line') of
	  <{'line',Line}> when 'true' ->
	      %% Line 215
	      Line
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'espec_types'/1 =
    %% Line 219
    fun (_cor0) ->
	let <Tags> =
	    %% Line 220
	    apply 'get_all_tags'/1
		(_cor0)
	in  let <_cor7> =
		%% Line 221
		( letrec
		      'lc$^0'/1 =
			  fun (_cor4) ->
			      case _cor4 of
				<[T = %% Line 222
				      {'tag','type',_cor20,'comment',_cor21}|_cor3]> when 'true' ->
				    let <_cor5> =
					apply 'type_name'/1
					    (T)
				    in  let <_cor6> =
					    %% Line 222
					    apply 'lc$^0'/1
						(_cor3)
					in  ( [_cor5|_cor6]
					      -| ['compiler_generated'] )
				( <[_cor2|_cor3]> when 'true' ->
				      %% Line 222
				      apply 'lc$^0'/1
					  (_cor3)
				  -| ['compiler_generated'] )
				<[]> when 'true' ->
				    []
				( <_cor4> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor4})
					-| [{'function_name',{'lc$^0',1}}] )
				  -| ['compiler_generated'] )
			      end
		  in  apply 'lc$^0'/1
			  (%% Line 222
			   Tags)
		  -| ['list_comprehension'] )
	    in  let <CT> =
		    %% Line 223
		    call 'sets':'from_list'
			(_cor7)
		in  %% Line 224
		    ( letrec
			  'lc$^1'/1 =
			      fun (_cor15) ->
				  case _cor15 of
				    <[T = {'tag',Name,_cor22,'code',_cor23}|_cor11]> when 'true' ->
					let <_cor12> =
					    %% Line 225
					    apply 'tag'/1
						(Name)
					in  %% Line 225
					    ( case <> of
						<>
						    when call 'erlang':'=:='
							  (_cor12,
							   'type') ->
						    let <_cor13> =
							%% Line 226
							apply 'type_name'/1
							    (T)
						    in  %% Line 226
							( case call 'sets':'is_element'
								   (_cor13, CT) of
							    <'false'> when 'true' ->
								let <_cor16> =
								    apply 'lc$^1'/1
									(_cor11)
								in  ( [T|_cor16]
								      -| ['compiler_generated'] )
							    ( <'true'> when 'true' ->
								  apply 'lc$^1'/1
								      (_cor11)
							      -| ['compiler_generated'] )
							    ( <_cor_variable> when 'true' ->
								  call 'erlang':'error'
								      ('badarg')
							      -| ['compiler_generated'] )
							  end
							  -| ['list_comprehension'] )
						( <> when 'true' ->
						      apply 'lc$^1'/1
							  (_cor11)
						  -| ['compiler_generated'] )
					      end
					      -| ['list_comprehension'] )
				    ( <[_cor10|_cor11]> when 'true' ->
					  apply 'lc$^1'/1
					      (_cor11)
				      -| ['compiler_generated'] )
				    <[]> when 'true' ->
					[]
				    ( <_cor15> when 'true' ->
					  ( primop 'match_fail'
						({'function_clause',_cor15})
					    -| [{'function_name',{'lc$^1',1}}] )
				      -| ['compiler_generated'] )
				  end
		      in  apply 'lc$^1'/1
			      (Tags)
		      -| ['list_comprehension'] )
'get_all_tags'/1 =
    %% Line 228
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 229
	    ( fun (_cor1) ->
		  case _cor1 of
		    <{'entry',_cor5,_cor6,_cor7,_cor8,Ts}> when 'true' ->
			Ts
		    ( <_cor2> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor2})
			    -| [{'function_name',{'-get_all_tags/1-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-get_all_tags/1-fun-0-'}}] )
	in  %% Line 229
	    call 'lists':'flatmap'
		(_cor3, _cor0)
'opaque2abstr'/2 =
    %% Line 233
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'opaque',_X_T> when 'true' ->
	      'undefined'
	  %% Line 234
	  <'type',T> when 'true' ->
	      T
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'opaque2abstr',2}}] )
	    -| ['compiler_generated'] )
	end
'use_tags'/2 =
    %% Line 241
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <E = {'entry',_cor4,_cor5,_cor6,_cor7,Ts},TypeTable> when 'true' ->
	      %% Line 242
	      apply 'use_tags'/4
		  (Ts, E, TypeTable, [])
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'use_tags',2}}] )
	    -| ['compiler_generated'] )
	end
'use_tags'/4 =
    %% Line 244
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[],E,_X_TypeTable,NTs> when 'true' ->
	      let <_rec1> =
		  %% Line 245
		  call 'lists':'reverse'
		      (NTs)
	      in  %% Line 245
		  case E of
		    <{'entry',_cor22,_cor23,_cor24,_cor25,_cor26}> when 'true' ->
			call 'erlang':'setelement'
			    (6, E, _rec1)
		    ( <_cor27> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','entry'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 246
	  <[T = {'tag',_cor28,_cor29,'code',_cor30}|Ts],E,TypeTable,NTs> when 'true' ->
	      %% Line 247
	      case apply 'tag'/1
		       (_cor28) of
		%% Line 248
		<'spec'> when 'true' ->
		    %% Line 249
		    ( case E of
			( <( {'entry',_cor35,_rec4,_cor36,_cor37,_cor38}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <Args> =
				  apply 'params'/2
				      (T, _rec4)
			      in  let <_cor14> =
				      %% Line 250
				      call 'erlang':'setelement'
					  (3, E, Args)
				  in  %% Line 250
				      apply 'use_tags'/4
					  (Ts, _cor14, TypeTable, [T|NTs])
			  -| ['compiler_generated'] )
			( <_cor39> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','entry'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 251
		<'type'> when 'true' ->
		    let <TypeName> =
			%% Line 252
			apply 'type_name'/1
			    (T)
		    in  %% Line 253
			case call 'ets':'lookup'
				 (TypeTable, TypeName) of
			  %% Line 254
			  <[{{{'record',_cor46},_cor47},_cor48,_cor49}|[]]> when 'true' ->
			      %% Line 255
			      apply 'use_tags'/4
				  (Ts, E, TypeTable, NTs)
			  %% Line 256
			  <[{_cor50,_cor51,'not_seen'}|[]]> when 'true' ->
			      %% Line 257
			      apply 'use_tags'/4
				  (Ts, E, TypeTable, NTs)
			  %% Line 258
			  <[]> when 'true' ->
			      %% Line 259
			      apply 'use_tags'/4
				  (Ts, E, TypeTable, NTs)
			  %% Line 260
			  <[{_cor52,Tag,'seen'}|[]]>
			      when call 'erlang':'=:='
				    (_cor52,
				     TypeName) ->
			      %% Line 261
			      apply 'use_tags'/4
				  (Ts, E, TypeTable, [Tag|NTs])
			  ( <_cor16> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor16})
			    -| ['compiler_generated'] )
			end
		( <_cor17> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor17})
		  -| ['compiler_generated'] )
	      end
	  %% Line 264
	  <[T|Ts],E,TypeTable,NTs> when 'true' ->
	      %% Line 265
	      apply 'use_tags'/4
		  (Ts, E, TypeTable, [T|NTs])
	  ( <_cor21,_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor21,_cor20,_cor19,_cor18})
		  -| [{'function_name',{'use_tags',4}}] )
	    -| ['compiler_generated'] )
	end
'params'/2 =
    %% Line 267
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'tag','spec',_cor4,_cor5,{'t_spec',_cor6,{'t_fun',_cor7,As,_cor8},_cor9}},Default> when 'true' ->
	      %% Line 268
	      apply 'parms'/2
		  (As, Default)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'params',2}}] )
	    -| ['compiler_generated'] )
	end
'parms'/2 =
    %% Line 270
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],[]> when 'true' ->
	      %% Line 271
	      []
	  %% Line 272
	  <[A|As],[D|Ds]> when 'true' ->
	      let <_cor2> =
		  %% Line 273
		  apply 'param'/2
		      (A, D)
	      in  let <_cor3> =
		      %% Line 273
		      apply 'parms'/2
			  (As, Ds)
		  in  %% Line 273
		      [_cor2|_cor3]
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'parms',2}}] )
	    -| ['compiler_generated'] )
	end
'param'/2 =
    %% Line 275
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'t_list',_cor7,Type},Default> when 'true' ->
	      %% Line 276
	      apply 'param'/2
		  (Type, Default)
	  %% Line 277
	  <{'t_paren',_cor8,Type},Default> when 'true' ->
	      %% Line 278
	      apply 'param'/2
		  (Type, Default)
	  %% Line 279
	  <{'t_nonempty_list',_cor9,Type},Default> when 'true' ->
	      %% Line 280
	      apply 'param'/2
		  (Type, Default)
	  %% Line 281
	  <{'t_record',_cor10,{'t_atom',_cor11,Name},_cor12},_X_Default> when 'true' ->
	      let <_cor2> =
		  %% Line 282
		  call 'erlang':'atom_to_list'
		      (Name)
	      in  let <_cor3> =
		      %% Line 282
		      apply 'capitalize'/1
			  (_cor2)
		  in  %% Line 282
		      call 'erlang':'list_to_atom'
			  (_cor3)
	  %% Line 283
	  <T,Default> when 'true' ->
	      let <_cor4> =
		  %% Line 284
		  call 'erlang':'element'
		      (2, T)
	      in  %% Line 284
		  apply 'arg_name'/2
		      (_cor4, Default)
	end
'capitalize'/1 =
    %% Line 286
    fun (_cor0) ->
	case _cor0 of
	  <[C|Cs]>
	      when let <_cor1> =
		    call 'erlang':'>='
			(C, 97)
		in  let <_cor2> =
			call 'erlang':'=<'
			    (C, 122)
		    in  call 'erlang':'and'
			    (_cor1, _cor2) ->
	      let <_cor3> =
		  call 'erlang':'-'
		      (C, 32)
	      in  [_cor3|Cs]
	  %% Line 287
	  <Cs> when 'true' ->
	      Cs
	end
'arg_name'/2 =
    %% Line 290
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],Default> when 'true' ->
	      %% Line 291
	      Default
	  %% Line 292
	  <[A|As],Default> when 'true' ->
	      %% Line 293
	      case apply 'is_name'/1
		       (A) of
		%% Line 294
		<'true'> when 'true' ->
		    A
		%% Line 295
		<'false'> when 'true' ->
		    apply 'arg_name'/2
			(As, Default)
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'arg_name',2}}] )
	    -| ['compiler_generated'] )
	end
'is_name'/1 =
    %% Line 298
    fun (_cor0) ->
	%% Line 299
	call 'erlang':'is_atom'
	    (_cor0)
'd2e'/1 =
    %% Line 301
    fun (_cor0) ->
	case _cor0 of
	  <{'ann_type',_cor50,[V|[T0|[]]]}> when 'true' ->
	      let <T> =
		  %% Line 306
		  apply 'd2e'/1
		      (T0)
	      in  let <_cor2> =
		      %% Line 307
		      call 'erlang':'element'
			  (3, V)
		  in  let <_cor3> =
			  %% Line 307
			  call 'erlang':'element'
			      (2, T)
		      in  %% Line 307
			  call 'erlang':'setelement'
			      (2, T, [_cor2|_cor3])
	  %% Line 308
	  <{'remote_type',_cor51,[{'atom',_cor52,M}|[{'atom',_cor53,F}|[Ts0|[]]]]}> when 'true' ->
	      let <Ts> =
		  %% Line 309
		  apply 'd2e'/1
		      (Ts0)
	      in  %% Line 310
		  apply 'typevar_anno'/2
		      ({'t_type',[],{'t_name',[],M,F},Ts}, Ts)
	  %% Line 311
	  <{'type',_cor54,'fun',[{'type',_cor55,'product',As0}|[Ran0|[]]]}> when 'true' ->
	      %% Line 312
	      case apply 'd2e'/1
		       ([Ran0|As0]) of
		<Ts = [Ran|As]> when 'true' ->
		    %% Line 314
		    apply 'typevar_anno'/2
			({'t_fun',[],As,Ran}, Ts)
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 315
	  <{'type',_cor56,'fun',[A0 = {'type',_cor57,'any'}|[Ran0|[]]]}> when 'true' ->
	      %% Line 316
	      case apply 'd2e'/1
		       ([A0|[Ran0|[]]]) of
		<Ts = [A|[Ran|[]]]> when 'true' ->
		    %% Line 317
		    apply 'typevar_anno'/2
			({'t_fun',[],[A|[]],Ran}, Ts)
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor6})
		  -| ['compiler_generated'] )
	      end
	  %% Line 318
	  <{'type',_cor58,'fun',[]}> when 'true' ->
	      %% Line 319
	      {'t_type',[],{'t_name',[],[],'function'},[]}
	  %% Line 320
	  <{'type',_cor59,'any'}> when 'true' ->
	      %% Line 321
	      {'t_var',[],'...'}
	  %% Line 322
	  <{'type',_cor60,'nil',[]}> when 'true' ->
	      %% Line 323
	      {'t_nil',[]}
	  %% Line 324
	  <{'paren_type',_cor61,[T|[]]}> when 'true' ->
	      let <_cor7> =
		  %% Line 325
		  apply 'd2e'/1
		      (T)
	      in  %% Line 325
		  {'t_paren',[],_cor7}
	  %% Line 326
	  <{'type',_cor62,'list',[T0|[]]}> when 'true' ->
	      let <T> =
		  %% Line 327
		  apply 'd2e'/1
		      (T0)
	      in  %% Line 328
		  apply 'typevar_anno'/2
		      ({'t_list',[],T}, [T|[]])
	  %% Line 329
	  <{'type',_cor63,'nonempty_list',[T0|[]]}> when 'true' ->
	      let <T> =
		  %% Line 330
		  apply 'd2e'/1
		      (T0)
	      in  %% Line 331
		  apply 'typevar_anno'/2
		      ({'t_nonempty_list',[],T}, [T|[]])
	  %% Line 332
	  <{'type',_cor64,'bounded_fun',[T|[Gs|[]]]}> when 'true' ->
	      %% Line 333
	      case apply 'd2e'/1
		       ([T|Gs]) of
		<[F0|Defs]> when 'true' ->
		    let <_cor11> =
			%% Line 334
			call 'erlang':'element'
			    (2, F0)
		    in  let <_cor12> =
			    %% Line 334
			    call 'lists':'keydelete'
				('type_variables', 1, _cor11)
			in  let <F> =
				%% Line 334
				call 'erlang':'setelement'
				    (2, F0, _cor12)
			    in  let <_cor14> =
				    %% Line 336
				    apply 'typevar_anno'/2
					(F, [F0|[]])
				in  %% Line 336
				    {'t_spec','undefined',_cor14,Defs}
		( <_cor10> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor10})
		  -| ['compiler_generated'] )
	      end
	  %% Line 337
	  <{'type',_cor65,'range',[V1|[V2|[]]]}> when 'true' ->
	      %% Line 338
	      case call 'erl_eval':'partial_eval'
		       (V1) of
		<{'integer',_cor66,I1}> when 'true' ->
		    %% Line 339
		    case call 'erl_eval':'partial_eval'
			     (V2) of
		      <{'integer',_cor67,I2}> when 'true' ->
			  %% Line 340
			  {'t_integer_range',[],I1,I2}
		      ( <_cor16> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor16})
			-| ['compiler_generated'] )
		    end
		( <_cor15> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor15})
		  -| ['compiler_generated'] )
	      end
	  %% Line 341
	  <{'type',_cor68,'constraint',[Sub|[Ts0|[]]]}> when 'true' ->
	      %% Line 342
	      case <Sub,Ts0> of
		%% Line 343
		<{'atom',_cor69,'is_subtype'},[{'var',_cor70,N}|[T0|[]]]> when 'true' ->
		    %% Line 344
		    case apply 'd2e'/1
			     ([T0|[]]) of
		      <Ts = [T|[]]> when 'true' ->
			  let <_cor18> =
			      %% Line 345
			      apply 'typevar_anno'/2
				  (T, Ts)
			  in  %% Line 345
			      {'t_def',{'t_var',[],N},_cor18}
		      ( <_cor17> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor17})
			-| ['compiler_generated'] )
		    end
		%% Line 346
		<{'atom',_cor71,'is_subtype'},[ST0|[T0|[]]]> when 'true' ->
		    %% Line 348
		    case apply 'd2e'/1
			     ([ST0|[T0|[]]]) of
		      <Ts = [ST|[T|[]]]> when 'true' ->
			  let <_cor20> =
			      %% Line 349
			      apply 'typevar_anno'/2
				  (T, Ts)
			  in  %% Line 349
			      {'t_def',ST,_cor20}
		      ( <_cor19> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor19})
			-| ['compiler_generated'] )
		    end
		%% Line 350
		<_fol52,_fol53> when 'true' ->
		    let <_cor21> =
			%% Line 351
			call 'erlang':'element'
			    (2, Sub)
		    in  %% Line 351
			apply 'throw_error'/3
			    (_cor21, [99|[97|[110|[110|[111|[116|[32|[104|[97|[110|[100|[108|[101|[32|[103|[117|[97|[114|[100]]]]]]]]]]]]]]]]]]], [])
	      end
	  %% Line 353
	  <{'type',_cor73,'union',Ts0}> when 'true' ->
	      let <Ts> =
		  %% Line 354
		  apply 'd2e'/1
		      (Ts0)
	      in  %% Line 355
		  apply 'typevar_anno'/2
		      ({'t_union',[],Ts}, Ts)
	  %% Line 356
	  <{'type',_cor74,'tuple','any'}> when 'true' ->
	      %% Line 357
	      {'t_type',[],{'t_name',[],[],'tuple'},[]}
	  %% Line 358
	  <{'type',_cor75,'binary',[Base|[Unit|[]]]}> when 'true' ->
	      let <_cor25> =
		  %% Line 359
		  call 'erlang':'element'
		      (3, Base)
	      in  let <_cor24> =
		      %% Line 360
		      call 'erlang':'element'
			  (3, Unit)
		  in  %% Line 359
		      {'t_binary',[],_cor25,_cor24}
	  %% Line 361
	  <{'type',_cor76,'map','any'}> when 'true' ->
	      %% Line 362
	      {'t_map',[],[]}
	  %% Line 363
	  <{'type',_cor77,'map',Es}> when 'true' ->
	      let <_cor26> =
		  %% Line 364
		  apply 'd2e'/1
		      (Es)
	      in  %% Line 364
		  {'t_map',[],_cor26}
	  %% Line 365
	  <{'type',_cor78,'map_field_assoc',K,V}> when 'true' ->
	      let <_cor28> =
		  %% Line 366
		  apply 'd2e'/1
		      (K)
	      in  let <_cor27> =
		      %% Line 366
		      apply 'd2e'/1
			  (V)
		  in  %% Line 366
		      {'t_map_field',[],_cor28,_cor27}
	  %% Line 367
	  <{'type',_cor79,'map_field_exact',K,V}> when 'true' ->
	      let <_cor30> =
		  %% Line 368
		  apply 'd2e'/1
		      (K)
	      in  let <_cor29> =
		      %% Line 368
		      apply 'd2e'/1
			  (V)
		  in  %% Line 368
		      {'t_map_field',[],_cor30,_cor29}
	  %% Line 369
	  <{'type',_cor80,'tuple',Ts0}> when 'true' ->
	      let <Ts> =
		  %% Line 370
		  apply 'd2e'/1
		      (Ts0)
	      in  %% Line 371
		  apply 'typevar_anno'/2
		      ({'t_tuple',[],Ts}, Ts)
	  %% Line 372
	  <{'type',_cor81,'record',[Name|Fs0]}> when 'true' ->
	      let <_cor32> =
		  %% Line 373
		  call 'erlang':'element'
		      (3, Name)
	      in  let <Atom> = {%% Line 373
		       't_atom',[],_cor32}
		  in  let <Fs> =
			  %% Line 374
			  apply 'd2e'/1
			      (Fs0)
		      in  %% Line 375
			  apply 'typevar_anno'/2
			      ({'t_record',[],Atom,Fs}, Fs)
	  %% Line 376
	  <{'type',_cor82,'field_type',[Name|[Type0|[]]]}> when 'true' ->
	      let <Type> =
		  %% Line 377
		  apply 'd2e'/1
		      (Type0)
	      in  let <_cor36> =
		      %% Line 378
		      call 'erlang':'element'
			  (3, Name)
		  in  %% Line 378
		      apply 'typevar_anno'/2
			  ({'t_field',[],{'t_atom',[],_cor36},Type}, %% Line 379
								     [Type|[]])
	  %% Line 380
	  <{'typed_record_field',{'record_field',L,Name},Type}> when 'true' ->
	      %% Line 381
	      apply 'd2e'/1
		  ({'type',L,'field_type',[Name|[Type|[]]]})
	  %% Line 382
	  <{'typed_record_field',{'record_field',L,Name,_X_E},Type}> when 'true' ->
	      %% Line 383
	      apply 'd2e'/1
		  ({'type',L,'field_type',[Name|[Type|[]]]})
	  %% Line 384
	  <F = {'record_field',L,_X_Name,_X_E}> when 'true' ->
	      %% Line 385
	      apply 'd2e'/1
		  ({'typed_record_field',F,{'type',L,'any',[]}})
	  %% Line 386
	  <F = {'record_field',L,_X_Name}> when 'true' ->
	      %% Line 387
	      apply 'd2e'/1
		  ({'typed_record_field',F,{'type',L,'any',[]}})
	  %% Line 388
	  <{'type',_cor83,Name,Types0}> when 'true' ->
	      let <Types> =
		  %% Line 389
		  apply 'd2e'/1
		      (Types0)
	      in  %% Line 390
		  apply 'typevar_anno'/2
		      ({'t_type',[],{'t_name',[],[],Name},Types}, Types)
	  %% Line 391
	  <{'var',_cor84,'_'}> when 'true' ->
	      %% Line 392
	      {'t_type',[],{'t_name',[],[],'term'},[]}
	  %% Line 393
	  <{'var',_cor85,TypeName}> when 'true' ->
	      let <TypeVar> =
		  %% Line 394
		  call 'ordsets':'from_list'
		      ([TypeName|[]])
	      in  let <T> = {%% Line 395
		       't_var',[],%% Line 395
				  TypeName}
		  in  let <_cor40> =
			  %% Line 399
			  call 'erlang':'element'
			      (2, T)
		      in  let <T1> =
			      %% Line 399
			      call 'erlang':'setelement'
				  (2, T, [{'type_variables',TypeVar}|_cor40])
			  in  let <_cor42> =
				  %% Line 400
				  call 'erlang':'element'
				      (2, T1)
			      in  %% Line 400
				  call 'erlang':'setelement'
				      (2, T1, [TypeName|_cor42])
	  %% Line 401
	  <L>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 402
	      ( letrec
		    'lc$^0'/1 =
			fun (_cor45) ->
			    case _cor45 of
			      <[T|_cor44]> when 'true' ->
				  let <_cor46> =
				      apply 'd2e'/1
					  (T)
				  in  let <_cor47> =
					  apply 'lc$^0'/1
					      (_cor44)
				      in  ( [_cor46|_cor47]
					    -| ['compiler_generated'] )
			      <[]> when 'true' ->
				  []
			      ( <_cor45> when 'true' ->
				    ( primop 'match_fail'
					  ({'function_clause',_cor45})
				      -| [{'function_name',{'lc$^0',1}}] )
				-| ['compiler_generated'] )
			    end
		in  apply 'lc$^0'/1
			(L)
		-| ['list_comprehension'] )
	  %% Line 403
	  <{'atom',_cor86,A}> when 'true' ->
	      %% Line 404
	      {'t_atom',[],A}
	  %% Line 405
	  <U = 'undefined'> when 'true' ->
	      %% Line 406
	      U
	  %% Line 407
	  <Expr> when 'true' ->
	      %% Line 408
	      case call 'erl_eval':'partial_eval'
		       (Expr) of
		<{'integer',_cor87,I}> when 'true' ->
		    %% Line 409
		    {'t_integer',[],I}
		( <_cor48> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor48})
		  -| ['compiler_generated'] )
	      end
	end
'typevar_anno'/2 =
    %% Line 412
    fun (_cor1,_cor0) ->
	let <Vs> =
	    %% Line 413
	    apply 'typevars'/1
		(_cor0)
	in  %% Line 414
	    case call 'ordsets':'to_list'
		     (Vs) of
	      %% Line 415
	      <[]> when 'true' ->
		  _cor1
	      %% Line 416
	      <_cor7> when 'true' ->
		  let <_cor3> =
		      call 'erlang':'element'
			  (2, _cor1)
		  in  call 'erlang':'setelement'
			  (2, _cor1, [{'type_variables',Vs}|_cor3])
	    end
'typevars'/1 =
    %% Line 419
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 420
	    apply 'get_typevars'/1
		(_cor0)
	in  %% Line 420
	    call 'ordsets':'union'
		(_cor1)
'get_typevars'/1 =
    %% Line 422
    fun (_cor0) ->
	%% Line 423
	( letrec
	      'lc$^0'/1 =
		  fun (_cor6) ->
		      case _cor6 of
			<[T|_cor2]>
			    when call 'erlang':'=/='
				  (T,
				   'undefined') ->
			    ( letrec
				  'lc$^1'/1 =
				      fun (_cor7) ->
					  case _cor7 of
					    <[{'type_variables',Vs}|_cor4]> when 'true' ->
						let <_cor8> =
						    apply 'lc$^1'/1
							(_cor4)
						in  ( [Vs|_cor8]
						      -| ['compiler_generated'] )
					    ( <[_cor3|_cor4]> when 'true' ->
						  apply 'lc$^1'/1
						      (_cor4)
					      -| ['compiler_generated'] )
					    <[]> when 'true' ->
						apply 'lc$^0'/1
						    (_cor2)
					    ( <_cor7> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor7})
						    -| [{'function_name',{'lc$^1',1}}] )
					      -| ['compiler_generated'] )
					  end
			      in  let <_cor5> =
				      call 'erlang':'element'
					  (2, T)
				  in  apply 'lc$^1'/1
					  (_cor5)
			      -| ['list_comprehension'] )
			( <[T|_cor2]> when 'true' ->
			      apply 'lc$^0'/1
				  (_cor2)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor6> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor6})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  apply 'lc$^0'/1
		  (_cor0)
	  -| ['list_comprehension'] )
'expand_records'/6 =
    %% Line 434
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor11> =
	    %% Line 435
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor8) ->
			  case _cor8 of
			    <[T|_cor7]> when 'true' ->
				let <_cor9> =
				    apply 'type_name'/1
					(T)
				in  let <_cor10> =
					apply 'lc$^0'/1
					    (_cor7)
				    in  ( [{_cor9,T,'not_seen'}|_cor10]
					  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor8> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor8})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (_cor4)
	      -| ['list_comprehension'] )
	in  %% Line 436
	    case call 'ets':'insert'
		     (_cor3, _cor11) of
	      <'true'> when 'true' ->
		  let <_cor14> =
		      %% Line 437
		      call 'proplists':'get_value'
			  ('report_missing_types', _cor2, %% Line 438
							  'false')
		  in  let <Warn> =
			  %% Line 438
			  call 'erlang':'=:='
			      (_cor14, 'true')
		      in  let <P> =
			      %% Line 439
			      {'parms',_cor3,Warn,_cor1,0}
			  in  let <_cor29> =
				  %% Line 440
				  ( letrec
					'lc$^1'/1 =
					    fun (_cor25) ->
						case _cor25 of
						  <[%% Line 441
						    {'export_type',Ts}|_cor18]>
						      when %% Line 442
							call 'erlang':'is_list'
							    (Ts) ->
						      ( letrec
							    'lc$^2'/1 =
								fun (_cor26) ->
								    case _cor26 of
								      <[%% Line 443
									{N,I}|_cor22]> when 'true' ->
									  %% Line 444
									  ( let <_fol60> =
										( {'t_name',[],[],N}
										  -| ['compiler_generated'] )
									    in  ( let <_cor24> = {_fol60,I}
										  in  ( let <Name> = {_fol60,I}
											in  ( case call 'ets':'member'
												       (_cor3, _cor24) of
												<'true'> when 'true' ->
												    let <_cor27> =
													apply 'lc$^2'/1
													    (_cor22)
												    in  ( [Name|_cor27]
													  -| ['compiler_generated'] )
												( <'false'> when 'true' ->
												      apply 'lc$^2'/1
													  (_cor22)
												  -| ['compiler_generated'] )
												( <_cor28> when 'true' ->
												      primop 'match_fail'
													  ({'case_clause',_cor28})
												  -| ['compiler_generated'] )
											      end
											      -| ['list_comprehension'] )
											-| ['list_comprehension'] )
										  -| ['list_comprehension'] )
									    -| ['list_comprehension'] )
								      ( <[_cor21|_cor22]> when 'true' ->
									    %% Line 443
									    apply 'lc$^2'/1
										(_cor22)
									-| ['compiler_generated'] )
								      <[]> when 'true' ->
									  %% Line 441
									  apply 'lc$^1'/1
									      (_cor18)
								      ( <_cor26> when 'true' ->
									    ( primop 'match_fail'
										  ({'function_clause',_cor26})
									      -| [{'function_name',{'lc$^2',1}}] )
									-| ['compiler_generated'] )
								    end
							in  apply 'lc$^2'/1
								(%% Line 443
								 Ts)
							-| ['list_comprehension'] )
						  ( <[_cor17|_cor18]> when 'true' ->
							%% Line 441
							apply 'lc$^1'/1
							    (_cor18)
						    -| ['compiler_generated'] )
						  <[]> when 'true' ->
						      []
						  ( <_cor25> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor25})
							  -| [{'function_name',{'lc$^1',1}}] )
						    -| ['compiler_generated'] )
						end
				    in  %% Line 441
					( case _cor0 of
					    ( <( {'module',_cor42,_cor43,_cor44,_cor45,_rec6,_cor46,_cor47}
						 -| ['compiler_generated'] )> when 'true' ->
						  apply 'lc$^1'/1
						      (_rec6)
					      -| ['compiler_generated'] )
					    ( <_cor48> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','module'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    -| ['list_comprehension'] )
			      in  let <_cor34> =
				      %% Line 445
				      ( fun (_cor32) ->
					    case _cor32 of
					      <{N,A}> when 'true' ->
						  let <_cor49> =
						      apply 'seen_type'/3
							  (N, A, P)
						  in  case _cor49 of
							<'true'> when 'true' ->
							    ( _cor49
							      -| ['compiler_generated'] )
							( <_cor31> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_cor31})
							  -| ['compiler_generated'] )
						      end
					      ( <_cor33> when 'true' ->
						    ( primop 'match_fail'
							  ({'function_clause',_cor33})
						      -| [{'function_name',{'-expand_records/6-fun-0-',1}}] )
						-| ['compiler_generated'] )
					    end
					-| [{'id',{0,0,'-expand_records/6-fun-0-'}}] )
				  in  let <_X_> =
					  %% Line 445
					  ( call 'lists':'foreach'
						(_cor34, _cor29)
					    -| ['result_not_wanted'] )
				      in  %% Line 447
					  apply 'entries'/3
					      (_cor5, P, _cor2)
	      ( <_cor13> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor13})
		-| ['compiler_generated'] )
	    end
'entries'/3 =
    %% Line 449
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[E0|Es],P,Opts> when 'true' ->
	      let <_cor9> =
		  %% Line 450
		  case call 'edoc_data':'hidden_filter'
			   ([E0|[]], Opts) of
		    %% Line 451
		    <[]> when 'true' ->
			%% Line 452
			E0
		    %% Line 453
		    <[_cor15|[]]> when 'true' ->
			%% Line 454
			( case E0 of
			    ( <( {'entry',_cor16,_cor17,_cor18,_cor19,_rec9}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_rec7> =
				      apply 'specs'/2
					  (_rec9, P)
				  in  call 'erlang':'setelement'
					  (6, E0, _rec7)
			      -| ['compiler_generated'] )
			    ( <_cor20> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','entry'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    ( <_cor8> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor8})
		      -| ['compiler_generated'] )
		  end
	      in  let <_cor11> =
		      %% Line 456
		      apply 'entries'/3
			  (Es, P, Opts)
		  in  %% Line 456
		      [_cor9|_cor11]
	  %% Line 457
	  <[],_X_P,_X_Opts> when 'true' ->
	      %% Line 458
	      []
	  ( <_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12})
		  -| [{'function_name',{'entries',3}}] )
	    -| ['compiler_generated'] )
	end
'specs'/2 =
    %% Line 460
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Tag0 = {'tag','spec',L,'code',Spec}|Tags],%% Line 461
						      P0> when 'true' ->
	      %% Line 462
	      case Spec of
		<{'t_spec',_cor21,Type0,Defs0}> when 'true' ->
		    %% Line 463
		    case P0 of
		      <{'parms',_cor22,_cor23,_cor24,_cor25}> when 'true' ->
			  let <_cor5> =
			      call 'erlang':'setelement'
				  (5, P0, L)
			  in  let <Type> =
				  %% Line 464
				  apply 'xrecs'/2
				      (Type0, _cor5)
			      in  let <Defs> =
				      %% Line 465
				      apply 'xrecs'/2
					  (Defs0, _cor5)
				  in  let <_cor11> =
					  %% Line 466
					  {'t_spec',_cor21,Type,Defs}
				      in  let <_cor15> =
					      %% Line 466
					      call 'erlang':'setelement'
						  (5, Tag0, _cor11)
					  in  let <_cor17> =
						  %% Line 467
						  apply 'specs'/2
						      (Tags, _cor5)
					      in  %% Line 467
						  [_cor15|_cor17]
		      ( <_cor26> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','parms'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 468
	  <[Tag|Tags],P> when 'true' ->
	      let <_cor18> =
		  %% Line 469
		  apply 'specs'/2
		      (Tags, P)
	      in  %% Line 469
		  [Tag|_cor18]
	  %% Line 470
	  <[],_X_P> when 'true' ->
	      %% Line 471
	      []
	  ( <_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19})
		  -| [{'function_name',{'specs',2}}] )
	    -| ['compiler_generated'] )
	end
'xrecs'/2 =
    %% Line 473
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <T = {'t_def',_cor52,Type0},P> when 'true' ->
	      let <Type> =
		  %% Line 474
		  apply 'xrecs'/2
		      (Type0, P)
	      in  %% Line 475
		  call 'erlang':'setelement'
		      (3, T, Type)
	  %% Line 476
	  <T = {'t_type',_cor56,Name,Args0},P> when 'true' ->
	      let <Args> =
		  %% Line 477
		  apply 'xrecs'/2
		      (Args0, P)
	      in  let <NArgs> =
		      %% Line 478
		      call 'erlang':'length'
			  (Args)
		  in  %% Line 479
		      case apply 'seen_type'/3
			       (Name, NArgs, P) of
			<'true'> when 'true' ->
			    %% Line 480
			    call 'erlang':'setelement'
				(4, T, Args)
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor7})
			  -| ['compiler_generated'] )
		      end
	  %% Line 481
	  <T = {'t_var',_cor61,_cor62},_X_P> when 'true' ->
	      %% Line 482
	      T
	  %% Line 483
	  <T = {'t_fun',_cor63,Args0,Range0},P> when 'true' ->
	      let <Args> =
		  %% Line 484
		  apply 'xrecs'/2
		      (Args0, P)
	      in  let <Range> =
		      %% Line 485
		      apply 'xrecs'/2
			  (Range0, P)
		  in  %% Line 486
		      {'t_fun',_cor63,Args,Range}
	  %% Line 487
	  <T = {'t_map',_cor65,Ts0},P> when 'true' ->
	      let <Ts> =
		  %% Line 488
		  apply 'xrecs'/2
		      (Ts0, P)
	      in  %% Line 489
		  call 'erlang':'setelement'
		      (3, T, Ts)
	  %% Line 490
	  <T = {'t_map_field',_cor69,Kt,Vt},P> when 'true' ->
	      let <_rec24> =
		  %% Line 491
		  apply 'xrecs'/2
		      (Kt, P)
	      in  let <_rec25> =
		      %% Line 491
		      apply 'xrecs'/2
			  (Vt, P)
		  in  %% Line 491
		      {'t_map_field',_cor69,_rec24,_rec25}
	  %% Line 492
	  <T = {'t_tuple',_cor71,Types0},P> when 'true' ->
	      let <Types> =
		  %% Line 493
		  apply 'xrecs'/2
		      (Types0, P)
	      in  %% Line 494
		  call 'erlang':'setelement'
		      (3, T, Types)
	  %% Line 495
	  <T = {'t_list',_cor75,Type0},P> when 'true' ->
	      let <Type> =
		  %% Line 496
		  apply 'xrecs'/2
		      (Type0, P)
	      in  %% Line 497
		  call 'erlang':'setelement'
		      (3, T, Type)
	  %% Line 498
	  <T = {'t_nil',_cor79},_X_P> when 'true' ->
	      %% Line 499
	      T
	  %% Line 500
	  <T = {'t_paren',_cor80,Type0},P> when 'true' ->
	      let <Type> =
		  %% Line 501
		  apply 'xrecs'/2
		      (Type0, P)
	      in  %% Line 502
		  call 'erlang':'setelement'
		      (3, T, Type)
	  %% Line 503
	  <T = {'t_nonempty_list',_cor84,Type0},P> when 'true' ->
	      let <Type> =
		  %% Line 504
		  apply 'xrecs'/2
		      (Type0, P)
	      in  %% Line 505
		  call 'erlang':'setelement'
		      (3, T, Type)
	  %% Line 506
	  <T = {'t_atom',_cor88,_cor89},_X_P> when 'true' ->
	      %% Line 507
	      T
	  %% Line 508
	  <T = {'t_integer',_cor90,_cor91},_X_P> when 'true' ->
	      %% Line 509
	      T
	  %% Line 510
	  <T = {'t_integer_range',_cor92,_cor93,_cor94},_X_P> when 'true' ->
	      %% Line 511
	      T
	  %% Line 512
	  <T = {'t_binary',_cor95,_cor96,_cor97},_X_P> when 'true' ->
	      %% Line 513
	      T
	  %% Line 514
	  <T = {'t_float',_cor98,_cor99},_X_P> when 'true' ->
	      %% Line 515
	      T
	  %% Line 516
	  <T = {'t_union',_cor100,Types0},P> when 'true' ->
	      let <Types> =
		  %% Line 517
		  apply 'xrecs'/2
		      (Types0, P)
	      in  %% Line 518
		  call 'erlang':'setelement'
		      (3, T, Types)
	  %% Line 519
	  <T = {'t_record',_cor104,_cor105,Fields0},P> when 'true' ->
	      let <Fields1> =
		  %% Line 520
		  apply 'xrecs'/2
		      (Fields0, P)
	      in  %% Line 521
		  case <_cor104,_cor105,Fields0> of
		    <_cor106,{'t_atom',_cor107,Name},_cor108> when 'true' ->
			let <RName> = {%% Line 522
			     'record',%% Line 522
				      Name}
			in  %% Line 523
			    case apply 'seen_type'/3
				     (RName, 0, P) of
			      <'true'> when 'true' ->
				  %% Line 524
				  ( case P of
				      ( <( {'parms',_rec35,_cor109,_cor110,_cor111}
					   -| ['compiler_generated'] )> when 'true' ->
					    let <Fields> =
						apply 'select_fields'/3
						    (Fields1, RName, _rec35)
					    in  %% Line 525
						call 'erlang':'setelement'
						    (4, T, Fields)
					-| ['compiler_generated'] )
				      ( <_cor112> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','parms'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      ( <_cor39> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor39})
				-| ['compiler_generated'] )
			    end
		    ( <_fol205,_fol206,_fol207> when 'true' ->
			  let <_cor37> =
			      ( {'t_record',_fol205,_fol206,_fol207}
				-| ['compiler_generated'] )
			  in  primop 'match_fail'
				  ({'badmatch',_cor37})
		      -| ['compiler_generated'] )
		  end
	  %% Line 526
	  <T = {'t_field',_cor117,_cor118,Type0},P> when 'true' ->
	      let <Type> =
		  %% Line 527
		  apply 'xrecs'/2
		      (Type0, P)
	      in  %% Line 528
		  call 'erlang':'setelement'
		      (4, T, Type)
	  %% Line 529
	  <T = 'undefined',_X_P> when 'true' ->
	      %% Line 530
	      T
	  %% Line 531
	  <T = [],_X_P> when 'true' ->
	      %% Line 532
	      T
	  %% Line 533
	  <[E0|Es0],P> when 'true' ->
	      let <_cor48> =
		  %% Line 534
		  apply 'xrecs'/2
		      (E0, P)
	      in  let <_cor49> =
		      %% Line 534
		      apply 'xrecs'/2
			  (Es0, P)
		  in  %% Line 534
		      [_cor48|_cor49]
	  ( <_cor51,_cor50> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor51,_cor50})
		  -| [{'function_name',{'xrecs',2}}] )
	    -| ['compiler_generated'] )
	end
'seen_type'/3 =
    %% Line 536
    fun (_cor2,_cor1,_cor0) ->
	let <TypeName> = {_cor2,_cor1}
	in  %% Line 538
	    case _cor0 of
	      <{'parms',DT,_cor18,_cor19,_cor20}> when 'true' ->
		  let <_cor5> =
		      %% Line 539
		      call 'ets':'lookup'
			  (DT, TypeName)
		  in  %% Line 539
		      case <_cor5,_cor2> of
			%% Line 540
			<[{_cor21,_cor22,'seen'}|[]],_cor23>
			    when call 'erlang':'=:='
				  (_cor21,
				   TypeName) ->
			    %% Line 541
			    'true'
			%% Line 542
			<[{_cor24,TagType,'not_seen'}|[]],_cor25>
			    when let <_cor26> =
				  call 'erlang':'=:='
				      (_cor24, TypeName)
			      in  let <_cor27> =
				      ( try
					    ( case <> of
						( <>
						      when ( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'is_record'
											       -| ['compiler_generated'] )
							      (_cor2,
							       ( 't_name'
								 -| ['compiler_generated'] ),
							       ( 4
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] ) ->
						      let <_cor10> =
							  ( call 'erlang':'element'
								(3, _cor2)
							    -| ['compiler_generated'] )
						      in  ( call 'erlang':'=:='
								(_cor10, [])
							    -| ['compiler_generated'] )
						  -| ['compiler_generated'] )
						( <> when 'true' ->
						      'false'
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					of <Try> ->
					    Try
					catch <T,R> ->
					    'false'
					-| ['compiler_generated'] )
				  in  call 'erlang':'and'
					  (_cor26, _cor27) ->
			    %% Line 543
			    apply 'expand_datatype'/4
				(TagType, 'proper_type', DT, _cor0)
			%% Line 544
			<[{_cor28,TagType,'not_seen'}|[]],{'record',_cor29}>
			    when call 'erlang':'=:='
				  (_cor28,
				   TypeName) ->
			    %% Line 545
			    apply 'expand_datatype'/4
				(TagType, 'record_type', DT, _cor0)
			%% Line 546
			<[],{'record',R}> when 'true' ->
			    do  %% Line 549
				( case <> of
				    <>
					when call 'erlang':'=:='
					      (_cor18,
					       'true') ->
					call 'edoc_report':'warning'
					    (_cor20, _cor19, [114|[101|[102|[101|[114|[101|[110|[99|[101|[32|[116|[111|[32|[117|[110|[116|[121|[112|[101|[100|[32|[114|[101|[99|[111|[114|[100|[32|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [R|[]])
				    ( <> when 'true' ->
					  []
				      -| ['compiler_generated'] )
				  end
				  -| ['list_comprehension'] )
				%% Line 550
				call 'ets':'insert'
				    (DT, {TypeName,'fake','seen'})
			%% Line 551
			<[],_cor31> when 'true' ->
			    %% Line 552
			    'true'
			( <_fol230,_fol231> when 'true' ->
			      let <_cor14> = {_fol230,_fol231}
			      in  primop 'match_fail'
				      ({'case_clause',_cor14})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor4})
		-| ['compiler_generated'] )
	    end
'expand_datatype'/4 =
    %% Line 555
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 556
	case _cor3 of
	  <{'tag',_cor31,L,_cor32,{T0,Doc}}> when 'true' ->
	      %% Line 557
	      case T0 of
		<{'t_typedef',_cor33,_cor34,Type0,[]}> when 'true' ->
		    let <TypeName> =
			%% Line 558
			apply 'type_name'/1
			    (_cor3)
		    in  %% Line 559
			case call 'ets':'update_element'
				 (_cor1, TypeName, {3,'seen'}) of
			  <'true'> when 'true' ->
			      %% Line 560
			      case _cor0 of
				<{'parms',_cor35,_cor36,_cor37,_cor38}> when 'true' ->
				    let <_cor10> =
					call 'erlang':'setelement'
					    (5, _cor0, L)
				    in  let <_cor17> =
					    %% Line 561
					    case _cor2 of
					      %% Line 562
					      <'record_type'> when 'true' ->
						  %% Line 563
						  case Type0 of
						    <{'t_record',_cor40,_cor41,Fields0}> when 'true' ->
							let <Fields> =
							    %% Line 564
							    apply 'xrecs'/2
								(Fields0, _cor10)
							in  %% Line 565
							    call 'erlang':'setelement'
								(4, Type0, Fields)
						    ( <_cor12> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor12})
						      -| ['compiler_generated'] )
						  end
					      %% Line 566
					      <'proper_type'> when 'true' ->
						  %% Line 567
						  apply 'xrecs'/2
						      (Type0, _cor10)
					      ( <_cor16> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_cor16})
						-| ['compiler_generated'] )
					    end
					in  let <_cor21> =
						%% Line 569
						call 'erlang':'setelement'
						    (4, T0, _cor17)
					    in  let <_rec40> = {_cor21,%% Line 569
							    Doc}
						in  let <_cor25> =
							%% Line 569
							call 'erlang':'setelement'
							    (5, _cor3, _rec40)
						    in  %% Line 570
							call 'ets':'insert'
							    (_cor1, {TypeName,_cor25,'seen'})
				( <_cor39> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','parms'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			  ( <_cor7> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor7})
			    -| ['compiler_generated'] )
			end
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor4})
	    -| ['compiler_generated'] )
	end
'select_fields'/3 =
    %% Line 572
    fun (_cor2,_cor1,_cor0) ->
	let <RecordName> = {_cor1,%% Line 573
		   0}
	in  %% Line 574
	    case call 'ets':'lookup'
		     (_cor0, RecordName) of
	      %% Line 575
	      <[{_cor14,'fake','seen'}|[]]>
		  when call 'erlang':'=:='
			(_cor14,
			 RecordName) ->
		  _cor2
	      %% Line 577
	      <[{_cor15,{'tag',_cor16,_cor17,_cor18,{T,_X_Doc}},'seen'}|[]]>
		  when call 'erlang':'=:='
			(_cor15,
			 RecordName) ->
		  %% Line 578
		  case T of
		    <{'t_typedef',_cor19,[],{'t_record',_cor20,_cor21,Fs},[]}> when 'true' ->
			%% Line 579
			( letrec
			      'lc$^0'/1 =
				  fun (_cor7) ->
				      case _cor7 of
					<[F|_cor6]> when 'true' ->
					    let <_cor8> =
						apply 'find_field'/2
						    (F, _cor2)
					    in  let <_cor9> =
						    apply 'lc$^0'/1
							(_cor6)
						in  ( [_cor8|_cor9]
						      -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor7> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor7})
						-| [{'function_name',{'lc$^0',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lc$^0'/1
				  (Fs)
			  -| ['list_comprehension'] )
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor4})
		      -| ['compiler_generated'] )
		  end
	      ( <_cor10> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor10})
		-| ['compiler_generated'] )
	    end
'find_field'/2 =
    %% Line 582
    fun (_cor1,_cor0) ->
	%% Line 583
	( case _cor1 of
	    ( <( {'t_field',_cor7,_rec43,_cor8}
		 -| ['compiler_generated'] )> when 'true' ->
		  case call 'lists':'keyfind'
			   (_rec43, 3, _cor0) of
		    %% Line 584
		    <'false'> when 'true' ->
			_cor1
		    %% Line 585
		    <NF> when 'true' ->
			NF
		  end
	      -| ['compiler_generated'] )
	    ( <_cor9> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','t_field'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'type_name'/1 =
    %% Line 588
    fun (_cor0) ->
	case _cor0 of
	  <{'tag','type',_cor3,_cor4,%% Line 589
				     {{'t_typedef',Name,As,_cor5,_cor6},_cor7}}> when 'true' ->
	      let <_cor1> =
		  %% Line 590
		  call 'erlang':'length'
		      (As)
	      in  %% Line 590
		  {Name,_cor1}
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'type_name',1}}] )
	    -| ['compiler_generated'] )
	end
'is_tag'/1 =
    %% Line 597
    fun (_cor0) ->
	case _cor0 of
	  <'opaque'> when 'true' ->
	      'true'
	  %% Line 598
	  <'spec'> when 'true' ->
	      'true'
	  %% Line 599
	  <'type'> when 'true' ->
	      'true'
	  %% Line 600
	  <_cor2> when 'true' ->
	      'false'
	end
'tag'/1 =
    %% Line 607
    fun (_cor0) ->
	case _cor0 of
	  <'opaque'> when 'true' ->
	      'type'
	  %% Line 608
	  <'spec'> when 'true' ->
	      'spec'
	  %% Line 609
	  <'type'> when 'true' ->
	      'type'
	  %% Line 610
	  <_cor2> when 'true' ->
	      'unknown'
	end
'throw_error'/3 =
    %% Line 612
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 613
	    call 'io_lib':'format'
		(_cor1, _cor0)
	in  do  %% Line 613
		call 'edoc_report':'error'
		    (_cor2, [], _cor3)
		%% Line 614
		call 'erlang':'throw'
		    ('error')
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('edoc_specs')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('edoc_specs', _cor0)
end