module 'cerl_cconv' ['core_transform'/2,
		     'module_info'/0,
		     'module_info'/1,
		     'transform'/2]
    attributes [%% Line 63
		'type' =
		    %% Line 63
		    [{{'record','function'},[{'typed_record_field',{'record_field',63,{'atom',63,'name'}},{'type',63,'union',[{'atom',63,'undefined'}|[{'type',63,'tuple',[{'type',63,'atom',[]}|[{'type',63,'arity',[]}]]}]]}}|[{'record_field',63,{'atom',63,'free'}}]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','fun_info'},[{'typed_record_field',{'record_field',68,{'atom',68,'name'}},{'type',68,'union',[{'atom',68,'undefined'}|[{'type',68,'atom',[]}]]}}|[{'typed_record_field',{'record_field',69,{'atom',69,'id'},{'integer',69,0}},{'type',69,'integer',[]}}|[{'typed_record_field',{'record_field',70,{'atom',70,'hash'},{'integer',70,0}},{'type',70,'integer',[]}}]]],[]}],
		%% Line 83
		'spec' =
		    %% Line 83
		    [{{'core_transform',2},[{'type',83,'fun',[{'type',83,'product',[{'remote_type',83,[{'atom',83,'cerl'}|[{'atom',83,'cerl'}|[[]]]]}|[{'type',83,'list',[{'type',83,'term',[]}]}]]}|[{'remote_type',83,[{'atom',83,'cerl'}|[{'atom',83,'cerl'}|[[]]]]}]]}]}],
		%% Line 102
		'spec' =
		    %% Line 102
		    [{{'transform',2},[{'type',102,'fun',[{'type',102,'product',[{'remote_type',102,[{'atom',102,'cerl'}|[{'atom',102,'c_module'}|[[]]]]}|[{'type',102,'list',[{'type',102,'term',[]}]}]]}|[{'remote_type',102,[{'atom',102,'cerl'}|[{'atom',102,'c_module'}|[[]]]]}]]}]}],
		%% Line 724
		'type' =
		    %% Line 724
		    [{{'record','state'},[{'typed_record_field',{'record_field',724,{'atom',724,'module'}},{'type',724,'union',[{'atom',724,'undefined'}|[{'type',724,'module',[]}]]}}|[{'typed_record_field',{'record_field',724,{'atom',724,'function'}},{'type',724,'union',[{'atom',724,'undefined'}|[{'type',724,'tuple',[{'type',724,'atom',[]}|[{'type',724,'arity',[]}]]}]]}}|[{'record_field',725,{'atom',725,'names'}}|[{'record_field',725,{'atom',725,'refs'}}|[{'record_field',725,{'atom',725,'defs'},{'nil',725}}]]]]],[]}]]
'core_transform'/2 =
    %% Line 85
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 86
	    call 'cerl':'from_records'
		(_cor1)
	in  let <_cor3> =
		%% Line 86
		apply 'transform'/2
		    (_cor2, _cor0)
	    in  %% Line 86
		call 'cerl':'to_records'
		    (_cor3)
'transform'/2 =
    %% Line 104
    fun (_cor1,_cor0) ->
	let <M> =
	    %% Line 105
	    call 'cerl':'module_name'
		(_cor1)
	in  let <_cor3> =
		%% Line 106
		call 'cerl':'atom_val'
		    (M)
	    in  let <_cor2> =
		    %% Line 728
		    call 'sets':'new'
			()
		in  let <_4182> =
			%% Line 728
			call 'dict':'new'
			    ()
		    in  let <S0> =
			    %% Line 728
			    {'state',_cor3,'undefined',_cor2,_4182,[]}
			in  let <_cor7> =
				%% Line 107
				call 'cerl':'module_defs'
				    (_cor1)
			    in  let <_cor6> =
				    %% Line 682
				    call 'rec_env':'empty'
					()
				in  let <_cor5> =
					%% Line 707
					call 'dict':'new'
					    ()
				    in  let <_1549> =
					    %% Line 107
					    apply 'module_defs'/4
						(_cor7, _cor6, _cor5, S0)
					in  %% Line 107
					    case _1549 of
					      <{Defs1,S1}> when 'true' ->
						  %% Line 749
						  ( case S1 of
						      ( <( {'state',_1255,_cor4,_430,_4283,_rec13}
							   -| ['compiler_generated'] )> when 'true' ->
							    let <_cor10> =
								call 'erlang':'++'
								    (_rec13, Defs1)
							    in  let <Defs2> =
								    call 'lists':'reverse'
									(_cor10)
								in  let <_cor13> =
									call 'cerl':'module_exports'
									    (_cor1)
								    in  let <_cor12> =
									    call 'cerl':'module_attrs'
										(_cor1)
									in  call 'cerl':'update_c_module'
										(_cor1, M, _cor13, _cor12, Defs2)
							-| ['compiler_generated'] )
						      ( <_5545> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','state'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
						    -| ['compiler_generated'] )
					      ( <_cor8> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_1549})
						-| ['compiler_generated'] )
					    end
'expr'/4 =
    %% Line 115
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_914> =
	    %% Line 116
	    call 'cerl':'type'
		(_cor3)
	in  %% Line 116
	    case _914 of
	      %% Line 117
	      <'literal'> when 'true' ->
		  %% Line 118
		  {_cor3,_cor0}
	      %% Line 119
	      <'var'> when 'true' ->
		  %% Line 120
		  apply 'var'/4
		      (_cor3, _cor2, _cor1, _cor0)
	      %% Line 121
	      <'values'> when 'true' ->
		  let <_cor4> =
		      %% Line 122
		      call 'cerl':'values_es'
			  (_cor3)
		  in  let <_2488> =
			  %% Line 122
			  apply 'expr_list'/4
			      (_cor4, _cor2, _cor1, _cor0)
		      in  %% Line 122
			  case _2488 of
			    <{Es,S1}> when 'true' ->
				let <_cor6> =
				    %% Line 123
				    call 'cerl':'update_c_values'
					(_cor3, Es)
				in  %% Line 123
				    {_cor6,S1}
			    ( <_cor5> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_2488})
			      -| ['compiler_generated'] )
			  end
	      %% Line 124
	      <'cons'> when 'true' ->
		  let <_cor7> =
		      %% Line 125
		      call 'cerl':'cons_hd'
			  (_cor3)
		  in  let <_5760> =
			  %% Line 125
			  apply 'expr'/4
			      (_cor7, _cor2, _cor1, _cor0)
		      in  %% Line 125
			  case _5760 of
			    <{E1,S1}> when 'true' ->
				let <_cor9> =
				    %% Line 126
				    call 'cerl':'cons_tl'
					(_cor3)
				in  let <_4404> =
					%% Line 126
					apply 'expr'/4
					    (_cor9, _cor2, _cor1, S1)
				    in  %% Line 126
					case _4404 of
					  <{E2,S2}> when 'true' ->
					      let <_cor11> =
						  %% Line 127
						  call 'cerl':'update_c_cons'
						      (_cor3, E1, E2)
					      in  %% Line 127
						  {_cor11,S2}
					  ( <_cor10> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_4404})
					    -| ['compiler_generated'] )
					end
			    ( <_cor8> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_5760})
			      -| ['compiler_generated'] )
			  end
	      %% Line 128
	      <'tuple'> when 'true' ->
		  let <_cor12> =
		      %% Line 129
		      call 'cerl':'tuple_es'
			  (_cor3)
		  in  let <_4574> =
			  %% Line 129
			  apply 'expr_list'/4
			      (_cor12, _cor2, _cor1, _cor0)
		      in  %% Line 129
			  case _4574 of
			    <{Es,S1}> when 'true' ->
				let <_cor14> =
				    %% Line 130
				    call 'cerl':'update_c_tuple'
					(_cor3, Es)
				in  %% Line 130
				    {_cor14,S1}
			    ( <_cor13> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_4574})
			      -| ['compiler_generated'] )
			  end
	      %% Line 131
	      <'let'> when 'true' ->
		  let <_cor15> =
		      %% Line 132
		      call 'cerl':'let_arg'
			  (_cor3)
		  in  let <_4326> =
			  %% Line 132
			  apply 'expr'/4
			      (_cor15, _cor2, _cor1, _cor0)
		      in  %% Line 132
			  case _4326 of
			    <{A,S1}> when 'true' ->
				let <Vs> =
				    %% Line 133
				    call 'cerl':'let_vars'
					(_cor3)
				in  let <_639> =
					%% Line 459
					apply 'bind_vars'/4
					    (Vs, [], _cor2, _cor1)
				    in  %% Line 134
					case _639 of
					  <{Vs1,Env1,Ren1}> when 'true' ->
					      let <_cor19> =
						  %% Line 135
						  call 'cerl':'let_body'
						      (_cor3)
					      in  let <_4080> =
						      %% Line 135
						      apply 'expr'/4
							  (_cor19, Env1, Ren1, S1)
						  in  %% Line 135
						      case _4080 of
							<{B,S2}> when 'true' ->
							    let <_cor21> =
								%% Line 136
								call 'cerl':'update_c_let'
								    (_cor3, Vs1, A, B)
							    in  %% Line 136
								{_cor21,S2}
							( <_cor20> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_4080})
							  -| ['compiler_generated'] )
						      end
					  ( <_cor18> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_639})
					    -| ['compiler_generated'] )
					end
			    ( <_cor16> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_4326})
			      -| ['compiler_generated'] )
			  end
	      %% Line 137
	      <'seq'> when 'true' ->
		  let <_cor22> =
		      %% Line 138
		      call 'cerl':'seq_arg'
			  (_cor3)
		  in  let <_2016> =
			  %% Line 138
			  apply 'expr'/4
			      (_cor22, _cor2, _cor1, _cor0)
		      in  %% Line 138
			  case _2016 of
			    <{A,S1}> when 'true' ->
				let <_cor24> =
				    %% Line 139
				    call 'cerl':'seq_body'
					(_cor3)
				in  let <_2813> =
					%% Line 139
					apply 'expr'/4
					    (_cor24, _cor2, _cor1, S1)
				    in  %% Line 139
					case _2813 of
					  <{B,S2}> when 'true' ->
					      let <_cor26> =
						  %% Line 140
						  call 'cerl':'update_c_seq'
						      (_cor3, A, B)
					      in  %% Line 140
						  {_cor26,S2}
					  ( <_cor25> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_2813})
					    -| ['compiler_generated'] )
					end
			    ( <_cor23> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_2016})
			      -| ['compiler_generated'] )
			  end
	      %% Line 141
	      <'apply'> when 'true' ->
		  %% Line 142
		  apply 'apply_expr'/4
		      (_cor3, _cor2, _cor1, _cor0)
	      %% Line 143
	      <'call'> when 'true' ->
		  let <_cor27> =
		      %% Line 144
		      call 'cerl':'call_module'
			  (_cor3)
		  in  let <_6593> =
			  %% Line 144
			  apply 'expr'/4
			      (_cor27, _cor2, _cor1, _cor0)
		      in  %% Line 144
			  case _6593 of
			    <{M,S1}> when 'true' ->
				let <_cor29> =
				    %% Line 145
				    call 'cerl':'call_name'
					(_cor3)
				in  let <_482> =
					%% Line 145
					apply 'expr'/4
					    (_cor29, _cor2, _cor1, S1)
				    in  %% Line 145
					case _482 of
					  <{N,S2}> when 'true' ->
					      let <_cor31> =
						  %% Line 146
						  call 'cerl':'call_args'
						      (_cor3)
					      in  let <_3849> =
						      %% Line 146
						      apply 'expr_list'/4
							  (_cor31, _cor2, _cor1, S2)
						  in  %% Line 146
						      case _3849 of
							<{As,S3}> when 'true' ->
							    let <_cor33> =
								%% Line 147
								call 'cerl':'update_c_call'
								    (_cor3, M, N, As)
							    in  %% Line 147
								{_cor33,S3}
							( <_cor32> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_3849})
							  -| ['compiler_generated'] )
						      end
					  ( <_cor30> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_482})
					    -| ['compiler_generated'] )
					end
			    ( <_cor28> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_6593})
			      -| ['compiler_generated'] )
			  end
	      %% Line 148
	      <'primop'> when 'true' ->
		  let <_cor34> =
		      %% Line 149
		      call 'cerl':'primop_args'
			  (_cor3)
		  in  let <_749> =
			  %% Line 149
			  apply 'expr_list'/4
			      (_cor34, _cor2, _cor1, _cor0)
		      in  %% Line 149
			  case _749 of
			    <{As,S1}> when 'true' ->
				let <N> =
				    %% Line 150
				    call 'cerl':'primop_name'
					(_cor3)
				in  let <_cor37> =
					%% Line 151
					call 'cerl':'update_c_primop'
					    (_cor3, N, As)
				    in  %% Line 151
					{_cor37,S1}
			    ( <_cor35> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_749})
			      -| ['compiler_generated'] )
			  end
	      %% Line 152
	      <'case'> when 'true' ->
		  let <_cor38> =
		      %% Line 153
		      call 'cerl':'case_arg'
			  (_cor3)
		  in  let <_6111> =
			  %% Line 153
			  apply 'expr'/4
			      (_cor38, _cor2, _cor1, _cor0)
		      in  %% Line 153
			  case _6111 of
			    <{A,S1}> when 'true' ->
				let <_cor40> =
				    %% Line 154
				    call 'cerl':'case_clauses'
					(_cor3)
				in  let <_1870> =
					%% Line 154
					apply 'expr_list'/4
					    (_cor40, _cor2, _cor1, S1)
				    in  %% Line 154
					case _1870 of
					  <{Cs,S2}> when 'true' ->
					      let <_cor42> =
						  %% Line 155
						  call 'cerl':'update_c_case'
						      (_cor3, A, Cs)
					      in  %% Line 155
						  {_cor42,S2}
					  ( <_cor41> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_1870})
					    -| ['compiler_generated'] )
					end
			    ( <_cor39> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_6111})
			      -| ['compiler_generated'] )
			  end
	      %% Line 156
	      <'clause'> when 'true' ->
		  let <Vs> =
		      %% Line 157
		      call 'cerl':'clause_vars'
			  (_cor3)
		  in  let <_4946> =
			  %% Line 459
			  apply 'bind_vars'/4
			      (Vs, [], _cor2, _cor1)
		      in  %% Line 158
			  case _4946 of
			    <{_cor92,Env1,Ren1}> when 'true' ->
				let <_cor45> =
				    %% Line 160
				    call 'cerl':'clause_pats'
					(_cor3)
				in  let <Ps> =
					%% Line 160
					apply 'pattern_list'/3
					    (_cor45, Env1, Ren1)
				    in  let <_cor47> =
					    %% Line 161
					    call 'cerl':'clause_guard'
						(_cor3)
					in  let <_3070> =
						%% Line 161
						apply 'expr'/4
						    (_cor47, Env1, Ren1, _cor0)
					    in  %% Line 161
						case _3070 of
						  <{G,S1}> when 'true' ->
						      let <_cor49> =
							  %% Line 162
							  call 'cerl':'clause_body'
							      (_cor3)
						      in  let <_4213> =
							      %% Line 162
							      apply 'expr'/4
								  (_cor49, Env1, Ren1, S1)
							  in  %% Line 162
							      case _4213 of
								<{B,S2}> when 'true' ->
								    let <_cor51> =
									%% Line 163
									call 'cerl':'update_c_clause'
									    (_cor3, Ps, G, B)
								    in  %% Line 163
									{_cor51,S2}
								( <_cor50> when 'true' ->
								      primop 'match_fail'
									  ({'badmatch',_4213})
								  -| ['compiler_generated'] )
							      end
						  ( <_cor48> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_3070})
						    -| ['compiler_generated'] )
						end
			    ( <_cor44> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_4946})
			      -| ['compiler_generated'] )
			  end
	      %% Line 164
	      <'fun'> when 'true' ->
		  %% Line 165
		  apply 'fun_expr'/4
		      (_cor3, _cor2, _cor1, _cor0)
	      %% Line 166
	      <'receive'> when 'true' ->
		  let <_cor52> =
		      %% Line 167
		      call 'cerl':'receive_clauses'
			  (_cor3)
		  in  let <_2822> =
			  %% Line 167
			  apply 'expr_list'/4
			      (_cor52, _cor2, _cor1, _cor0)
		      in  %% Line 167
			  case _2822 of
			    <{Cs,S1}> when 'true' ->
				let <_cor54> =
				    %% Line 168
				    call 'cerl':'receive_timeout'
					(_cor3)
				in  let <_109> =
					%% Line 168
					apply 'expr'/4
					    (_cor54, _cor2, _cor1, S1)
				    in  %% Line 168
					case _109 of
					  <{T,S2}> when 'true' ->
					      let <_cor56> =
						  %% Line 169
						  call 'cerl':'receive_action'
						      (_cor3)
					      in  let <_5577> =
						      %% Line 169
						      apply 'expr'/4
							  (_cor56, _cor2, _cor1, S2)
						  in  %% Line 169
						      case _5577 of
							<{A,S3}> when 'true' ->
							    let <_cor58> =
								%% Line 170
								call 'cerl':'update_c_receive'
								    (_cor3, Cs, T, A)
							    in  %% Line 170
								{_cor58,S3}
							( <_cor57> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_5577})
							  -| ['compiler_generated'] )
						      end
					  ( <_cor55> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_109})
					    -| ['compiler_generated'] )
					end
			    ( <_cor53> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_2822})
			      -| ['compiler_generated'] )
			  end
	      %% Line 171
	      <'try'> when 'true' ->
		  let <_cor59> =
		      %% Line 172
		      call 'cerl':'try_arg'
			  (_cor3)
		  in  let <_2338> =
			  %% Line 172
			  apply 'expr'/4
			      (_cor59, _cor2, _cor1, _cor0)
		      in  %% Line 172
			  case _2338 of
			    <{A,S1}> when 'true' ->
				let <Vs> =
				    %% Line 173
				    call 'cerl':'try_vars'
					(_cor3)
				in  let <_3279> =
					%% Line 459
					apply 'bind_vars'/4
					    (Vs, [], _cor2, _cor1)
				    in  %% Line 174
					case _3279 of
					  <{Vs1,Env1,Ren1}> when 'true' ->
					      let <_cor63> =
						  %% Line 175
						  call 'cerl':'try_body'
						      (_cor3)
					      in  let <_6491> =
						      %% Line 175
						      apply 'expr'/4
							  (_cor63, Env1, Ren1, S1)
						  in  %% Line 175
						      case _6491 of
							<{B,S2}> when 'true' ->
							    let <Evs> =
								%% Line 176
								call 'cerl':'try_evars'
								    (_cor3)
							    in  let <_7015> =
								    %% Line 459
								    apply 'bind_vars'/4
									(Evs, [], _cor2, _cor1)
								in  %% Line 177
								    case _7015 of
								      <{Evs1,Env2,Ren2}> when 'true' ->
									  let <_cor67> =
									      %% Line 178
									      call 'cerl':'try_handler'
										  (_cor3)
									  in  let <_5801> =
										  %% Line 178
										  apply 'expr'/4
										      (_cor67, Env2, Ren2, S2)
									      in  %% Line 178
										  case _5801 of
										    <{H,S3}> when 'true' ->
											let <_cor69> =
											    %% Line 179
											    call 'cerl':'update_c_try'
												(_cor3, A, Vs1, B, Evs1, H)
											in  %% Line 179
											    {_cor69,S3}
										    ( <_cor68> when 'true' ->
											  primop 'match_fail'
											      ({'badmatch',_5801})
										      -| ['compiler_generated'] )
										  end
								      ( <_cor66> when 'true' ->
									    primop 'match_fail'
										({'badmatch',_7015})
									-| ['compiler_generated'] )
								    end
							( <_cor64> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_6491})
							  -| ['compiler_generated'] )
						      end
					  ( <_cor62> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_3279})
					    -| ['compiler_generated'] )
					end
			    ( <_cor60> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_2338})
			      -| ['compiler_generated'] )
			  end
	      %% Line 180
	      <'catch'> when 'true' ->
		  let <_cor70> =
		      %% Line 181
		      call 'cerl':'catch_body'
			  (_cor3)
		  in  let <_3270> =
			  %% Line 181
			  apply 'expr'/4
			      (_cor70, _cor2, _cor1, _cor0)
		      in  %% Line 181
			  case _3270 of
			    <{B,S1}> when 'true' ->
				let <_cor72> =
				    %% Line 182
				    call 'cerl':'update_c_catch'
					(_cor3, B)
				in  %% Line 182
				    {_cor72,S1}
			    ( <_cor71> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_3270})
			      -| ['compiler_generated'] )
			  end
	      %% Line 183
	      <'letrec'> when 'true' ->
		  let <_cor73> =
		      %% Line 184
		      call 'cerl':'letrec_defs'
			  (_cor3)
		  in  let <_5927> =
			  %% Line 184
			  apply 'letrec_defs'/4
			      (_cor73, _cor2, _cor1, _cor0)
		      in  %% Line 184
			  case _5927 of
			    <{Env1,Ren1,S1}> when 'true' ->
				let <_cor75> =
				    %% Line 186
				    call 'cerl':'letrec_body'
					(_cor3)
				in  %% Line 186
				    apply 'expr'/4
					(_cor75, Env1, Ren1, S1)
			    ( <_cor74> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_5927})
			      -| ['compiler_generated'] )
			  end
	      %% Line 187
	      <'binary'> when 'true' ->
		  let <_cor76> =
		      %% Line 188
		      call 'cerl':'binary_segments'
			  (_cor3)
		  in  let <_6023> =
			  %% Line 188
			  apply 'expr_list'/4
			      (_cor76, _cor2, _cor1, _cor0)
		      in  %% Line 188
			  case _6023 of
			    <{Segs,S1}> when 'true' ->
				let <_cor78> =
				    %% Line 189
				    call 'cerl':'update_c_binary'
					(_cor3, Segs)
				in  %% Line 189
				    {_cor78,S1}
			    ( <_cor77> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_6023})
			      -| ['compiler_generated'] )
			  end
	      %% Line 190
	      <'bitstr'> when 'true' ->
		  let <_cor79> =
		      %% Line 191
		      call 'cerl':'bitstr_val'
			  (_cor3)
		  in  let <_1046> =
			  %% Line 191
			  apply 'expr'/4
			      (_cor79, _cor2, _cor1, _cor0)
		      in  %% Line 191
			  case _1046 of
			    <{E1,S1}> when 'true' ->
				let <_cor81> =
				    %% Line 192
				    call 'cerl':'bitstr_size'
					(_cor3)
				in  let <_1856> =
					%% Line 192
					apply 'expr'/4
					    (_cor81, _cor2, _cor1, S1)
				    in  %% Line 192
					case _1856 of
					  <{E2,S2}> when 'true' ->
					      let <E3> =
						  %% Line 193
						  call 'cerl':'bitstr_unit'
						      (_cor3)
					      in  let <E4> =
						      %% Line 194
						      call 'cerl':'bitstr_type'
							  (_cor3)
						  in  let <E5> =
							  %% Line 195
							  call 'cerl':'bitstr_flags'
							      (_cor3)
						      in  let <_cor86> =
							      %% Line 196
							      call 'cerl':'update_c_bitstr'
								  (_cor3, E1, E2, E3, E4, E5)
							  in  %% Line 196
							      {_cor86,S2}
					  ( <_cor82> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_1856})
					    -| ['compiler_generated'] )
					end
			    ( <_cor80> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_1046})
			      -| ['compiler_generated'] )
			  end
	      ( <_cor87> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_914})
		-| ['compiler_generated'] )
	    end
'expr_list'/4 =
    %% Line 199
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[E|Es],Env,Ren,S0> when 'true' ->
	      let <_3742> =
		  %% Line 200
		  apply 'expr'/4
		      (E, _cor2, _cor1, _cor0)
	      in  %% Line 200
		  case _3742 of
		    <{E1,S1}> when 'true' ->
			let <_374> =
			    %% Line 201
			    apply 'expr_list'/4
				(Es, _cor2, _cor1, S1)
			in  %% Line 201
			    case _374 of
			      <{Es1,S2}> when 'true' ->
				  %% Line 202
				  {[E1|Es1],S2}
			      ( <_cor5> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_374})
				-| ['compiler_generated'] )
			    end
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3742})
		      -| ['compiler_generated'] )
		  end
	  %% Line 203
	  <[],_cor10,_cor11,S> when 'true' ->
	      %% Line 204
	      {[],_cor0}
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'expr_list',4}}] )
	    -| ['compiler_generated'] )
	end
'pattern'/3 =
    %% Line 206
    fun (_cor2,_cor1,_cor0) ->
	let <_1913> =
	    %% Line 207
	    call 'cerl':'type'
		(_cor2)
	in  %% Line 207
	    case _1913 of
	      %% Line 208
	      <'literal'> when 'true' ->
		  _cor2
	      %% Line 210
	      <'var'> when 'true' ->
		  let <_cor3> =
		      %% Line 211
		      call 'cerl':'var_name'
			  (_cor2)
		  in  let <_3745> =
			  %% Line 713
			  call 'dict':'find'
			      (_cor3, _cor0)
		      in  let <_cor4> =
			      %% Line 713
			      case _3745 of
				%% Line 714
				<{'ok',Value}> when 'true' ->
				    Value
				%% Line 716
				<'error'> when 'true' ->
				    _cor3
				( <_2687> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_3745})
				  -| ['compiler_generated'] )
			      end
			  in  %% Line 211
			      call 'cerl':'update_c_var'
				  (_cor2, _cor4)
	      %% Line 212
	      <'values'> when 'true' ->
		  let <_cor5> =
		      %% Line 213
		      call 'cerl':'values_es'
			  (_cor2)
		  in  let <Es> =
			  %% Line 213
			  apply 'pattern_list'/3
			      (_cor5, _cor1, _cor0)
		      in  %% Line 214
			  call 'cerl':'update_c_values'
			      (_cor2, Es)
	      %% Line 215
	      <'cons'> when 'true' ->
		  let <_cor7> =
		      %% Line 216
		      call 'cerl':'cons_hd'
			  (_cor2)
		  in  let <E1> =
			  %% Line 216
			  apply 'pattern'/3
			      (_cor7, _cor1, _cor0)
		      in  let <_cor9> =
			      %% Line 217
			      call 'cerl':'cons_tl'
				  (_cor2)
			  in  let <E2> =
				  %% Line 217
				  apply 'pattern'/3
				      (_cor9, _cor1, _cor0)
			      in  %% Line 218
				  call 'cerl':'update_c_cons'
				      (_cor2, E1, E2)
	      %% Line 219
	      <'tuple'> when 'true' ->
		  let <_cor11> =
		      %% Line 220
		      call 'cerl':'tuple_es'
			  (_cor2)
		  in  let <Es> =
			  %% Line 220
			  apply 'pattern_list'/3
			      (_cor11, _cor1, _cor0)
		      in  %% Line 221
			  call 'cerl':'update_c_tuple'
			      (_cor2, Es)
	      %% Line 222
	      <'binary'> when 'true' ->
		  let <_cor13> =
		      %% Line 223
		      call 'cerl':'binary_segments'
			  (_cor2)
		  in  let <Es> =
			  %% Line 223
			  apply 'pattern_list'/3
			      (_cor13, _cor1, _cor0)
		      in  %% Line 224
			  call 'cerl':'update_c_binary'
			      (_cor2, Es)
	      %% Line 225
	      <'bitstr'> when 'true' ->
		  let <_cor15> =
		      %% Line 226
		      call 'cerl':'bitstr_val'
			  (_cor2)
		  in  let <E1> =
			  %% Line 226
			  apply 'pattern'/3
			      (_cor15, _cor1, _cor0)
		      in  let <_cor17> =
			      %% Line 227
			      call 'cerl':'bitstr_size'
				  (_cor2)
			  in  let <E2> =
				  %% Line 227
				  apply 'pattern'/3
				      (_cor17, _cor1, _cor0)
			      in  let <E3> =
				      %% Line 228
				      call 'cerl':'bitstr_unit'
					  (_cor2)
				  in  let <E4> =
					  %% Line 229
					  call 'cerl':'bitstr_type'
					      (_cor2)
				      in  let <E5> =
					      %% Line 230
					      call 'cerl':'bitstr_flags'
						  (_cor2)
					  in  %% Line 231
					      call 'cerl':'update_c_bitstr'
						  (_cor2, E1, E2, E3, E4, E5)
	      %% Line 232
	      <'alias'> when 'true' ->
		  let <_cor22> =
		      %% Line 233
		      call 'cerl':'alias_var'
			  (_cor2)
		  in  let <V> =
			  %% Line 233
			  apply 'pattern'/3
			      (_cor22, _cor1, _cor0)
		      in  let <_cor24> =
			      %% Line 234
			      call 'cerl':'alias_pat'
				  (_cor2)
			  in  let <P> =
				  %% Line 234
				  apply 'pattern'/3
				      (_cor24, _cor1, _cor0)
			      in  %% Line 235
				  call 'cerl':'update_c_alias'
				      (_cor2, V, P)
	      ( <_cor26> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_1913})
		-| ['compiler_generated'] )
	    end
'pattern_list'/3 =
    %% Line 238
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[E|Es],Env,Ren> when 'true' ->
	      let <_cor3> =
		  %% Line 239
		  apply 'pattern'/3
		      (E, _cor1, _cor0)
	      in  let <_cor4> =
		      %% Line 239
		      apply 'pattern_list'/3
			  (Es, _cor1, _cor0)
		  in  %% Line 239
		      [_cor3|_cor4]
	  %% Line 240
	  <[],_cor8,_cor9> when 'true' ->
	      %% Line 241
	      []
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'pattern_list',3}}] )
	    -| ['compiler_generated'] )
	end
'module_defs'/4 =
    %% Line 248
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_1751> =
	    %% Line 249
	    apply 'bind_module_defs'/3
		(_cor3, _cor2, _cor0)
	in  %% Line 249
	    case _1751 of
	      <{Env1,S1}> when 'true' ->
		  %% Line 250
		  apply 'module_defs_1'/5
		      (_cor3, [], Env1, _cor1, S1)
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_1751})
		-| ['compiler_generated'] )
	    end
'bind_module_defs'/3 =
    %% Line 252
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{V,_X_F}|Ds],Env,S> when 'true' ->
	      let <Name> =
		  %% Line 253
		  call 'cerl':'var_name'
		      (V)
	      in  do  %% Line 254
		      apply 'check_function_name'/2
			  (Name, _cor0)
		      let <S1> =
			  %% Line 255
			  apply 's__add_function_name'/2
			      (Name, _cor0)
		      in  let <Info> = {%% Line 256
			       'function',Name,%% Line 256
					       []}
			  in  let <Env1> =
				  %% Line 685
				  call 'rec_env':'bind'
				      (Name, Info, _cor1)
			      in  %% Line 258
				  apply 'bind_module_defs'/3
				      (Ds, Env1, S1)
	  %% Line 259
	  <[],Env,S> when 'true' ->
	      %% Line 260
	      {_cor1,_cor0}
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'bind_module_defs',3}}] )
	    -| ['compiler_generated'] )
	end
'check_function_name'/2 =
    %% Line 264
    fun (_cor1,_cor0) ->
	%% Line 734
	( case _cor0 of
	    ( <( {'state',_cor6,_cor7,_rec6,_cor8,_cor9}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_1341> =
		      call 'sets':'is_element'
			  (_cor1, _rec6)
		  in  case _1341 of
			<'true'> when 'true' ->
			    do  let <_1039> =
				    [_cor1|[]]
				in  let <_cor2> =
					%% Line 765
					call 'lists':'concat'
					    (['cerl_cconv'|[[58|[32]]|[[109|[117|[108|[116|[105|[112|[108|[101|[32|[100|[101|[102|[105|[110|[105|[116|[105|[111|[110|[115|[32|[111|[102|[32|[102|[117|[110|[99|[116|[105|[111|[110|[32|[96|[126|[119|[39|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[[10]]]]])
				    in  %% Line 765
					call 'error_logger':'error_msg'
					    (_cor2, _1039)
				call 'erlang':'exit'
				    ('error')
			<'false'> when 'true' ->
			    'ok'
			( <_cor2> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_1341})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor10> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'module_defs_1'/5 =
    %% Line 276
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[{V,F}|Ds],Ds1,Env,Ren,S> when 'true' ->
	      let <_cor5> =
		  %% Line 277
		  call 'cerl':'var_name'
		      (V)
	      in  %% Line 740
		  case _cor0 of
		    <{'state',_cor6,_cor7,_cor8,_cor9,_cor10}> when 'true' ->
			let <S1> =
			    call 'erlang':'setelement'
				(3, _cor0, _cor5)
			in  let <_cor7> =
				call 'cerl':'fun_vars'
				    (F)
			    in  let <_730> =
				    apply 'bind_vars'/4
					(_cor7, [], _cor2, _cor1)
				in  case _730 of
				      <{Vs,Env1,Ren1}> when 'true' ->
					  let <_cor9> =
					      call 'cerl':'fun_body'
						  (F)
					  in  let <_7547> =
						  apply 'expr'/4
						      (_cor9, Env1, Ren1, S1)
					      in  case _7547 of
						    <{B,S2}> when 'true' ->
							let <F1> =
							    call 'cerl':'update_c_fun'
								(F, Vs, B)
							in  apply 'module_defs_1'/5
								(Ds, [{V,F1}|_cor3], _cor2, _cor1, S2)
						    ( <_cor10> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_7547})
						      -| ['compiler_generated'] )
						  end
				      ( <_cor8> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_730})
					-| ['compiler_generated'] )
				    end
		    ( <_cor11> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 283
	  <[],Ds,_cor17,_cor18,S> when 'true' ->
	      %% Line 284
	      {_cor3,_cor0}
	  ( <_cor16,_cor15,_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'module_defs_1',5}}] )
	    -| ['compiler_generated'] )
	end
'letrec_defs'/4 =
    %% Line 346
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_3125> =
	    %% Line 347
	    apply 'bind_letrec_defs'/4
		(_cor3, _cor2, _cor1, _cor0)
	in  %% Line 347
	    case _3125 of
	      <{Env1,Ren1,S1}> when 'true' ->
		  let <_cor5> =
		      %% Line 348
		      apply 'lift_letrec_defs'/4
			  (_cor3, Env1, Ren1, S1)
		  in  %% Line 348
		      {Env1,Ren1,_cor5}
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_3125})
		-| ['compiler_generated'] )
	    end
'bind_letrec_defs'/4 =
    %% Line 353
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 354
	    apply 'free_in_defs'/3
		(_cor3, _cor2, _cor1)
	in  %% Line 354
	    apply 'bind_letrec_defs'/5
		(_cor3, _cor4, _cor2, _cor1, _cor0)
'bind_letrec_defs'/5 =
    %% Line 356
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[{V,_X_F}|Ds],Free,Env,Ren,S> when 'true' ->
	      let <Name> =
		  %% Line 357
		  call 'cerl':'var_name'
		      (V)
	      in  let <_6512> =
		      %% Line 358
		      apply 'bind_letrec_fun'/5
			  (Name, _cor3, _cor2, _cor1, _cor0)
		  in  %% Line 358
		      case _6512 of
			<{Env1,Ren1,S1}> when 'true' ->
			    %% Line 359
			    apply 'bind_letrec_defs'/5
				(Ds, _cor3, Env1, Ren1, S1)
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_6512})
			  -| ['compiler_generated'] )
		      end
	  %% Line 360
	  <[],_X_Free,Env,Ren,S> when 'true' ->
	      %% Line 361
	      {_cor2,_cor1,_cor0}
	  ( <_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'bind_letrec_defs',5}}] )
	    -| ['compiler_generated'] )
	end
'bind_letrec_fun'/5 =
    %% Line 363
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Name = {_cor15,A},Free,Env,Ren,S> when 'true' ->
	      let <_cor5> =
		  %% Line 364
		  call 'erlang':'length'
		      (_cor3)
	      in  let <A1> =
		      %% Line 364
		      call 'erlang':'+'
			  (A, _cor5)
		  in  let <_3332> =
			  %% Line 365
			  apply 'rename_letrec_fun'/5
			      (_cor4, A1, _cor2, _cor1, _cor0)
		      in  %% Line 365
			  case _3332 of
			    <{Name1,Ren1,S1}> when 'true' ->
				let <Info> = {%% Line 366
				     'function',Name1,_cor3}
				in  let <_cor9> =
					%% Line 685
					call 'rec_env':'bind'
					    (Name1, Info, _cor2)
				    in  %% Line 367
					{_cor9,Ren1,S1}
			    ( <_cor7> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_3332})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor14,_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'bind_letrec_fun',5}}] )
	    -| ['compiler_generated'] )
	end
'rename_letrec_fun'/5 =
    %% Line 373
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_5486> =
	    %% Line 374
	    apply 'new_letrec_fun_name'/4
		(_cor4, _cor3, _cor2, _cor0)
	in  %% Line 374
	    case _5486 of
	      <{New,S1}> when 'true' ->
		  let <_cor7> =
		      %% Line 710
		      call 'dict':'store'
			  (_cor4, New, _cor1)
		  in  let <_cor6> =
			  %% Line 375
			  apply 's__add_function_name'/2
			      (New, S1)
		      in  %% Line 375
			  {New,_cor7,_cor6}
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_5486})
		-| ['compiler_generated'] )
	    end
'new_letrec_fun_name'/4 =
    %% Line 377
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{N,_cor18},Arity,Env,S> when 'true' ->
	      %% Line 743
	      ( case _cor0 of
		  ( <( {'state',_349,_rec9,_cor4,_cor5,_cor6}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec9 of
			  <{FName,FArity}> when 'true' ->
			      let <_fol159> =
				  call 'erlang':'atom_to_list'
				      (FName)
			      in  let <_123> =
				      call 'erlang':'integer_to_list'
					  (FArity)
				  in  let <_3344> =
					  [47|_123]
				      in  let <_fol160> =
					      call 'erlang':'++'
						  (_fol159, _3344)
					  in  let <_cor8> =
						  [45|_fol160]
					      in  let <_cor5> =
						      call 'erlang':'atom_to_list'
							  (N)
						  in  let <_cor6> =
							  call 'erlang':'++'
							      (_cor5, [45])
						      in  let <_cor7> =
							      call 'erlang':'++'
								  ([45|[108|[101|[116|[114|[101|[99|[45]]]]]]]], _cor6)
							  in  let <Base> =
								  call 'erlang':'++'
								      (_cor8, _cor7)
							      in  let <_cor10> =
								      call 'erlang':'list_to_atom'
									  (Base)
								  in  let <Name> = {_cor10,_cor2}
								      in  let <_1610> =
									      call 'rec_env':'is_defined'
										  (Name, _cor1)
									  in  case _1610 of
										<'true'> when 'true' ->
										    let <F> =
											fun (_6763) ->
											    let <_cor4> =
												call 'erlang':'integer_to_list'
												    (_6763)
											    in  let <_4050> =
												    call 'erlang':'++'
													(Base, _cor4)
												in  let <_4283> =
													call 'erlang':'list_to_atom'
													    (_4050)
												    in  {_4283,_cor2}
										    in  apply 'new_fun_name'/5
											    (Base, _cor2, _cor1, _cor0, F)
										<'false'> when 'true' ->
										    ( case _cor0 of
											( <( {'state',_3672,_1197,_rec6,_3474,_cor9}
											     -| ['compiler_generated'] )> when 'true' ->
											      let <_5392> =
												  call 'sets':'is_element'
												      (Name, _rec6)
											      in  case _5392 of
												    <'true'> when 'true' ->
													let <F> =
													    fun (_1414) ->
														let <_cor4> =
														    call 'erlang':'integer_to_list'
															(_1414)
														in  let <_6674> =
															call 'erlang':'++'
															    (Base, _cor4)
														    in  let <_1239> =
															    call 'erlang':'list_to_atom'
																(_6674)
															in  {_1239,_cor2}
													in  apply 'new_fun_name'/5
														(Base, _cor2, _cor1, _cor0, F)
												    <'false'> when 'true' ->
													{Name,_cor0}
												    ( <_cor12> when 'true' ->
													  primop 'match_fail'
													      ({'case_clause',_5392})
												      -| ['compiler_generated'] )
												  end
											  -| ['compiler_generated'] )
											( <_4695> when 'true' ->
											      ( call ( 'erlang'
												       -| ['compiler_generated'] ):( 'error'
																     -| ['compiler_generated'] )
												    (( {'badrecord','state'}
												       -| ['compiler_generated'] ))
												-| ['compiler_generated'] )
											  -| ['compiler_generated'] )
										      end
										      -| ['compiler_generated'] )
										( <_cor13> when 'true' ->
										      primop 'match_fail'
											  ({'case_clause',_1610})
										  -| ['compiler_generated'] )
									      end
			  ( <_cor4> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_rec9})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor7> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor17,_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'new_letrec_fun_name',4}}] )
	    -| ['compiler_generated'] )
	end
'lift_letrec_defs'/4 =
    %% Line 397
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{V,F}|Ds],Env,Ren,S> when 'true' ->
	      let <_cor4> =
		  %% Line 398
		  call 'cerl':'var_name'
		      (V)
	      in  let <_3745> =
		      %% Line 713
		      call 'dict':'find'
			  (_cor4, _cor1)
		  in  let <_cor5> =
			  %% Line 713
			  case _3745 of
			    %% Line 714
			    <{'ok',Value}> when 'true' ->
				Value
			    %% Line 716
			    <'error'> when 'true' ->
				_cor4
			    ( <_4714> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_3745})
			      -| ['compiler_generated'] )
			  end
		      in  let <Info> =
			      %% Line 691
			      call 'rec_env':'get'
				  (_cor5, _cor2)
			  in  let <S1> =
				  %% Line 399
				  apply 'lift_letrec_fun'/5
				      (F, Info, _cor2, _cor1, _cor0)
			      in  %% Line 400
				  apply 'lift_letrec_defs'/4
				      (Ds, _cor2, _cor1, S1)
	  %% Line 401
	  <[],_cor12,_cor13,S> when 'true' ->
	      _cor0
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'lift_letrec_defs',4}}] )
	    -| ['compiler_generated'] )
	end
'lift_letrec_fun'/5 =
    %% Line 414
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 415
	    call 'cerl':'fun_vars'
		(_cor4)
	in  let <_4322> =
		%% Line 459
		apply 'bind_vars'/4
		    (_cor5, [], _cor2, _cor1)
	    in  %% Line 415
		case _4322 of
		  <{Vs,Env1,Ren1}> when 'true' ->
		      let <_cor7> =
			  %% Line 416
			  call 'cerl':'fun_body'
			      (_cor4)
		      in  let <_1036> =
			      %% Line 416
			      apply 'expr'/4
				  (_cor7, Env1, Ren1, _cor0)
			  in  %% Line 416
			      case _1036 of
				<{B,S1}> when 'true' ->
				    let <_cor16> =
					%% Line 417
					( letrec
					      'lc$^0'/1 =
						  fun (_cor13) ->
						      case _cor13 of
							<[V|_cor10]> when 'true' ->
							    let <_cor14> =
								call 'cerl':'c_var'
								    (V)
							    in  let <_cor15> =
								    apply 'lc$^0'/1
									(_cor10)
								in  ( [_cor14|_cor15]
								      -| ['compiler_generated'] )
							<[]> when 'true' ->
							    []
							( <_7123> when 'true' ->
							      ( primop 'match_fail'
								    ({'function_clause',_cor13})
								-| [{'function_name',{'lc$^0',1}}] )
							  -| ['compiler_generated'] )
						      end
					  in  ( case _cor3 of
						  ( <( {'function',_cor28,_rec0}
						       -| ['compiler_generated'] )> when 'true' ->
							case _rec0 of
							  <[V|_cor10]> when 'true' ->
							      let <_cor14> =
								  call 'cerl':'c_var'
								      (V)
							      in  let <_cor15> =
								      apply 'lc$^0'/1
									  (_cor10)
								  in  ( [_cor14|_cor15]
									-| ['compiler_generated'] )
							  <[]> when 'true' ->
							      []
							  ( <_7123> when 'true' ->
								primop 'match_fail'
								    ({'function_clause',_rec0})
							    -| ['compiler_generated'] )
							end
						    -| ['compiler_generated'] )
						  ( <_cor29> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','function'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
					  -| ['list_comprehension'] )
				    in  let <_cor18> =
					    %% Line 418
					    call 'erlang':'++'
						(Vs, _cor16)
					in  let <F1> =
						%% Line 418
						call 'cerl':'c_fun'
						    (_cor18, B)
					    in  %% Line 419
						( case _cor3 of
						    ( <( {'function',_rec1,_cor30}
							 -| ['compiler_generated'] )> when 'true' ->
							  let <_cor22> =
							      call 'cerl':'c_var'
								  (_rec1)
							  in  apply 's__add_def'/3
								  (_cor22, F1, S1)
						      -| ['compiler_generated'] )
						    ( <_cor31> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','function'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
				( <_cor8> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_1036})
				  -| ['compiler_generated'] )
			      end
		  ( <_cor6> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_4322})
		    -| ['compiler_generated'] )
		end
'free_in_defs'/3 =
    %% Line 426
    fun (_cor2,_cor1,_cor0) ->
	let <_6341> =
	    %% Line 427
	    apply 'free_in_defs'/4
		(_cor2, [], [], _cor0)
	in  %% Line 427
	    case _6341 of
	      <{Vs,Fs}> when 'true' ->
		  let <_cor4> =
		      %% Line 428
		      call 'ordsets':'subtract'
			  (Fs, Vs)
		  in  %% Line 440
		      apply 'closure_vars'/4
			  (_cor4, [], _cor1, _cor0)
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_6341})
		-| ['compiler_generated'] )
	    end
'free_in_defs'/4 =
    %% Line 430
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{V,F}|Ds],Vs,Free,Ren> when 'true' ->
	      let <Fs> =
		  %% Line 431
		  call 'cerl_trees':'free_variables'
		      (F)
	      in  let <_cor6> =
		      %% Line 432
		      call 'cerl':'var_name'
			  (V)
		  in  let <_3745> =
			  %% Line 713
			  call 'dict':'find'
			      (_cor6, _cor0)
		      in  let <_cor7> =
			      %% Line 713
			      case _3745 of
				%% Line 714
				<{'ok',Value}> when 'true' ->
				    Value
				%% Line 716
				<'error'> when 'true' ->
				    _cor6
				( <_4309> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_3745})
				  -| ['compiler_generated'] )
			      end
			  in  let <_cor5> =
				  %% Line 432
				  call 'erlang':'++'
				      (Fs, _cor1)
			      in  %% Line 432
				  apply 'free_in_defs'/4
				      (Ds, [_cor7|_cor2], _cor5, _cor0)
	  %% Line 434
	  <[],Vs,Free,_X_Ren> when 'true' ->
	      let <_cor9> =
		  %% Line 435
		  call 'ordsets':'from_list'
		      (_cor2)
	      in  let <_cor8> =
		      %% Line 435
		      call 'ordsets':'from_list'
			  (_cor1)
		  in  %% Line 435
		      {_cor9,_cor8}
	  ( <_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'free_in_defs',4}}] )
	    -| ['compiler_generated'] )
	end
'closure_vars'/4 =
    %% Line 442
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[V = {_cor11,_cor12}|Vs],As,Env,Ren> when 'true' ->
	      let <_3745> =
		  %% Line 713
		  call 'dict':'find'
		      (V, _cor0)
	      in  let <V1> =
		      %% Line 713
		      case _3745 of
			%% Line 714
			<{'ok',Value}> when 'true' ->
			    Value
			%% Line 716
			<'error'> when 'true' ->
			    V
			( <_6150> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_3745})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 444
		      case %% Line 688
			   call 'rec_env':'lookup'
			       (V1, _cor1) of
			%% Line 445
			<{'ok',{'function',_cor13,Vs1}}> when 'true' ->
			    let <_cor5> =
				%% Line 446
				call 'erlang':'++'
				    (Vs1, _cor2)
			    in  %% Line 446
				apply 'closure_vars'/4
				    (Vs, _cor5, _cor1, _cor0)
			%% Line 447
			<_cor14> when 'true' ->
			    %% Line 448
			    apply 'closure_vars'/4
				(Vs, _cor2, _cor1, _cor0)
		      end
	  %% Line 450
	  <[V|Vs],As,Env,Ren> when 'true' ->
	      %% Line 451
	      apply 'closure_vars'/4
		  (Vs, [V|_cor2], _cor1, _cor0)
	  %% Line 452
	  <[],As,_X_Env,_X_Ren> when 'true' ->
	      %% Line 453
	      call 'ordsets':'from_list'
		  (_cor2)
	  ( <_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'closure_vars',4}}] )
	    -| ['compiler_generated'] )
	end
'bind_vars'/4 =
    %% Line 461
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[V|Vs],Vs1,Env,Ren> when 'true' ->
	      let <Name> =
		  %% Line 462
		  call 'cerl':'var_name'
		      (V)
	      in  let <_4180> =
		      %% Line 463
		      apply 'rename_var'/3
			  (Name, _cor1, _cor0)
		  in  %% Line 463
		      case _4180 of
			<{Name1,Ren1}> when 'true' ->
			    let <_cor7> =
				%% Line 464
				call 'cerl':'update_c_var'
				    (V, Name1)
			    in  let <_cor6> =
				    %% Line 685
				    call 'rec_env':'bind'
					(Name1, 'variable', _cor1)
				in  %% Line 464
				    apply 'bind_vars'/4
					(Vs, [_cor7|_cor2], _cor6, Ren1)
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_4180})
			  -| ['compiler_generated'] )
		      end
	  %% Line 466
	  <[],Vs,Env,Ren> when 'true' ->
	      let <_cor8> =
		  %% Line 467
		  call 'lists':'reverse'
		      (_cor2)
	      in  %% Line 467
		  {_cor8,_cor1,_cor0}
	  ( <_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'bind_vars',4}}] )
	    -| ['compiler_generated'] )
	end
'rename_var'/3 =
    %% Line 469
    fun (_cor2,_cor1,_cor0) ->
	let <_1338> =
	    %% Line 694
	    call 'rec_env':'is_defined'
		(_cor2, _cor1)
	in  %% Line 470
	    case _1338 of
	      %% Line 471
	      <'false'> when 'true' ->
		  %% Line 472
		  {_cor2,_cor0}
	      %% Line 473
	      <'true'> when 'true' ->
		  let <New> =
		      %% Line 697
		      call 'rec_env':'new_key'
			  (_cor1)
		  in  let <_cor4> =
			  %% Line 710
			  call 'dict':'store'
			      (_cor2, New, _cor0)
		      in  %% Line 475
			  {New,_cor4}
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_1338})
		-| ['compiler_generated'] )
	    end
'var'/4 =
    %% Line 487
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 488
	    call 'cerl':'var_name'
		(_cor3)
	in  let <_3745> =
		%% Line 713
		call 'dict':'find'
		    (_cor4, _cor1)
	    in  let <Name> =
		    %% Line 713
		    case _3745 of
		      %% Line 714
		      <{'ok',Value}> when 'true' ->
			  Value
		      %% Line 716
		      <'error'> when 'true' ->
			  _cor4
		      ( <_2548> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_3745})
			-| ['compiler_generated'] )
		    end
		in  let <_5803> =
			%% Line 489
			apply 'lookup_var'/2
			    (Name, _cor2)
		    in  %% Line 489
			case _5803 of
			  %% Line 490
			  <{'function',F,Vs}> when 'true' ->
			      %% Line 491
			      case F of
				<{_cor18,Arity}> when 'true' ->
				    let <Vs1> =
					%% Line 492
					apply 'make_vars'/1
					    (Arity)
				    in  let <_cor8> =
					    %% Line 493
					    call 'cerl':'c_var'
						(F)
					in  let <C> =
						%% Line 493
						call 'cerl':'c_apply'
						    (_cor8, Vs1)
					    in  let <_cor10> =
						    %% Line 494
						    call 'cerl':'get_ann'
							(_cor3)
						in  let <E> =
							%% Line 494
							call 'cerl':'ann_c_fun'
							    (_cor10, Vs1, C)
						    in  %% Line 495
							apply 'fun_expr_1'/5
							    (E, Vs, _cor2, _cor1, _cor0)
				( <_cor6> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',F})
				  -| ['compiler_generated'] )
			      end
			  %% Line 496
			  <'variable'> when 'true' ->
			      let <_cor12> =
				  %% Line 497
				  call 'cerl':'update_c_var'
				      (_cor3, Name)
			      in  %% Line 497
				  {_cor12,_cor0}
			  ( <_cor13> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_5803})
			    -| ['compiler_generated'] )
			end
'lookup_var'/2 =
    %% Line 500
    fun (_cor1,_cor0) ->
	let <_4085> =
	    %% Line 688
	    call 'rec_env':'lookup'
		(_cor1, _cor0)
	in  %% Line 501
	    case _4085 of
	      %% Line 502
	      <{'ok',X}> when 'true' ->
		  X
	      %% Line 504
	      <'error'> when 'true' ->
		  do  let <_3772> =
			  %% Line 505
			  [_cor1|[5]]
		      in  let <_cor2> =
			      %% Line 765
			      call 'lists':'concat'
				  (['cerl_cconv'|[[58|[32]]|[[117|[110|[98|[111|[117|[110|[100|[32|[118|[97|[114|[105|[97|[98|[108|[101|[32|[96|[126|[80|[39|[46]]]]]]]]]]]]]]]]]]]]]]|[[10]]]]])
			  in  %% Line 765
			      call 'error_logger':'error_msg'
				  (_cor2, _3772)
		      %% Line 506
		      call 'erlang':'exit'
			  ('error')
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_4085})
		-| ['compiler_generated'] )
	    end
'make_vars'/1 =
    %% Line 509
    fun (_cor0) ->
	case _cor0 of
	  <N>
	      when call 'erlang':'>'
		    (_cor0,
		     0) ->
	      let <_cor1> =
		  %% Line 510
		  call 'erlang':'integer_to_list'
		      (_cor0)
	      in  let <_cor2> =
		      %% Line 510
		      [88|_cor1]
		  in  let <_cor3> =
			  %% Line 510
			  call 'erlang':'list_to_atom'
			      (_cor2)
		      in  let <_cor4> =
			      %% Line 510
			      call 'cerl':'c_var'
				  (_cor3)
			  in  let <_cor5> =
				  %% Line 511
				  call 'erlang':'-'
				      (_cor0, 1)
			      in  let <_cor6> =
				      %% Line 511
				      apply 'make_vars'/1
					  (_cor5)
				  in  %% Line 510
				      [_cor4|_cor6]
	  %% Line 512
	  <0> when 'true' ->
	      %% Line 513
	      []
	  ( <_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'make_vars',1}}] )
	    -| ['compiler_generated'] )
	end
'fun_expr'/4 =
    %% Line 524
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 525
	    call 'cerl_trees':'free_variables'
		(_cor3)
	in  let <Free> =
		apply 'closure_vars'/4
		    (_cor4, [], _cor2, _cor1)
	    in  let <_cor11> =
		    %% Line 526
		    ( letrec
			  'lc$^0'/1 =
			      fun (_cor8) ->
				  case _cor8 of
				    <[V|_cor7]> when 'true' ->
					let <_cor9> =
					    call 'cerl':'c_var'
						(V)
					in  let <_cor10> =
						apply 'lc$^0'/1
						    (_cor7)
					    in  ( [_cor9|_cor10]
						  -| ['compiler_generated'] )
				    <[]> when 'true' ->
					[]
				    ( <_4794> when 'true' ->
					  ( primop 'match_fail'
						({'function_clause',_cor8})
					    -| [{'function_name',{'lc$^0',1}}] )
				      -| ['compiler_generated'] )
				  end
		      in  apply 'lc$^0'/1
			      (Free)
		      -| ['list_comprehension'] )
		in  %% Line 527
		    apply 'fun_expr_1'/5
			(_cor3, _cor11, _cor2, _cor1, _cor0)
'fun_expr_1'/5 =
    %% Line 529
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 530
	    call 'cerl':'fun_arity'
		(_cor4)
	in  let <_cor5> =
		%% Line 530
		call 'erlang':'length'
		    (_cor3)
	    in  let <Arity> =
		    %% Line 530
		    call 'erlang':'+'
			(_cor6, _cor5)
		in  let <_662> =
			%% Line 531
			apply 'fun_info'/3
			    (_cor4, _cor2, _cor0)
		    in  %% Line 531
			case _662 of
			  <{Info,S1}> when 'true' ->
			      %% Line 532
			      ( case Info of
				  ( <( {'fun_info',_rec2,_cor19,_cor20}
				       -| ['compiler_generated'] )> when 'true' ->
					let <Name> = {_rec2,Arity}
					in  let <S2> =
						%% Line 533
						apply 'lift_fun'/6
						    (Name, _cor4, _cor3, _cor2, _cor1, S1)
					    in  let <_cor13> =
						    %% Line 534
						    apply 'make_fun_primop'/5
							(Name, _cor3, Info, _cor4, S2)
						in  %% Line 534
						    {_cor13,S2}
				    -| ['compiler_generated'] )
				  ( <_cor21> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','fun_info'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  ( <_cor8> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_662})
			    -| ['compiler_generated'] )
			end
'make_fun_primop'/5 =
    %% Line 536
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{Name,Arity},Free,{'fun_info',_cor18,Id,Hash},F,S> when 'true' ->
	      %% Line 737
	      ( case _cor0 of
		  ( <( {'state',_rec7,_4743,_5529,_cor5,_cor6}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor12> =
			    call 'cerl':'c_atom'
				('make_fun')
			in  let <_cor6> =
				call 'cerl':'c_atom'
				    (_rec7)
			    in  let <_cor7> =
				    call 'cerl':'c_atom'
					(Name)
				in  let <_cor8> =
					call 'cerl':'c_int'
					    (Arity)
				    in  let <_cor9> =
					    call 'cerl':'c_int'
						(Hash)
					in  let <_cor10> =
						call 'cerl':'c_int'
						    (Id)
					    in  let <_cor11> =
						    call 'cerl':'make_list'
							(_cor3)
						in  call 'cerl':'update_c_primop'
							(_cor1, _cor12, [_cor6|[_cor7|[_cor8|[_cor9|[_cor10|[_cor11|[]]]]]]])
		    -| ['compiler_generated'] )
		  ( <_cor7> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor17,_cor16,_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'make_fun_primop',5}}] )
	    -| ['compiler_generated'] )
	end
'fun_info'/3 =
    %% Line 549
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 550
	    call 'cerl':'get_ann'
		(_cor2)
	in  %% Line 550
	    case call 'lists':'keyfind'
		     ('id', 1, _cor3) of
	      %% Line 551
	      <{'id',{Id,H,Name}}> when 'true' ->
		  %% Line 553
		  {{'fun_info',Name,Id,H},_cor0}
	      %% Line 554
	      <_cor9> when 'true' ->
		  do  %% Line 555
		      call 'io':'fwrite'
			  ([87|[97|[114|[110|[105|[110|[103|[32|[45|[32|[102|[117|[110|[32|[110|[111|[116|[32|[97|[110|[110|[111|[116|[97|[116|[101|[100|[58|[32|[109|[97|[107|[105|[110|[103|[32|[117|[112|[32|[110|[101|[119|[32|[110|[97|[109|[101|[46|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		      let <_1829> =
			  %% Line 557
			  apply 'new_fun_name'/3
			      (_cor2, _cor1, _cor0)
		      in  %% Line 557
			  case _1829 of
			    <{{Name,_X_Arity},S1}> when 'true' ->
				%% Line 558
				{{'fun_info',Name,0,0},S1}
			    ( <_cor4> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_1829})
			      -| ['compiler_generated'] )
			  end
	    end
'new_fun_name'/3 =
    %% Line 566
    fun (_cor2,_cor1,_cor0) ->
	%% Line 743
	( case _cor0 of
	    ( <( {'state',_cor3,_rec9,_cor4,_cor5,_cor6}
		 -| ['compiler_generated'] )> when 'true' ->
		  case _rec9 of
		    <{FName,FArity}> when 'true' ->
			let <_fol161> =
			    call 'erlang':'atom_to_list'
				(FName)
			in  let <_2785> =
				call 'erlang':'integer_to_list'
				    (FArity)
			    in  let <_fol162> =
				    [47|_2785]
				in  let <_fol163> =
					call 'erlang':'++'
					    (_fol161, _fol162)
				    in  let <_cor4> =
					    [45|_fol163]
					in  let <Base> =
						call 'erlang':'++'
						    (_cor4, [45|[102|[117|[110|[45]]]]])
					    in  let <Arity> =
						    call 'cerl':'fun_arity'
							(_cor2)
						in  let <F> =
							fun (_cor7) ->
							    let <_3232> =
								call 'erlang':'integer_to_list'
								    (_cor7)
							    in  let <_cor5> =
								    call 'erlang':'++'
									(Base, _3232)
								in  let <_cor6> =
									call 'erlang':'list_to_atom'
									    (_cor5)
								    in  {_cor6,Arity}
						    in  apply 'new_fun_name'/5
							    (Base, Arity, _cor1, _cor0, F)
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_rec9})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor7> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'new_fun_name'/5 =
    %% Line 581
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Name> =
	    %% Line 700
	    call 'rec_env':'new_key'
		(_cor0, _cor2)
	in  %% Line 734
	    ( case _cor1 of
		( <( {'state',_cor6,_cor7,_rec6,_cor8,_cor9}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <_3824> =
			  call 'sets':'is_element'
			      (Name, _rec6)
		      in  case _3824 of
			    <'true'> when 'true' ->
				apply 'new_fun_name'/5
				    (_cor4, _cor3, _cor2, _cor1, _cor0)
			    <'false'> when 'true' ->
				{Name,_cor1}
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_3824})
			      -| ['compiler_generated'] )
			  end
		  -| ['compiler_generated'] )
		( <_cor10> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'lift_fun'/6 =
    %% Line 601
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 734
	( case _cor0 of
	    ( <( {'state',_cor6,_cor7,_rec6,_cor8,_cor9}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_2187> =
		      call 'sets':'is_element'
			  (_cor5, _rec6)
		  in  case _2187 of
			<'true'> when 'true' ->
			    _cor0
			<'false'> when 'true' ->
			    let <_rec3> =
				call 'sets':'add_element'
				    (_cor5, _rec6)
			    in  let <S1> =
				    call 'erlang':'setelement'
					(4, _cor0, _rec3)
				in  apply 'lift_fun_1'/6
					(_cor5, _cor4, _cor3, _cor2, _cor1, S1)
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_2187})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor10> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'lift_fun_1'/6 =
    %% Line 616
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 619
	    call 'cerl':'fun_vars'
		(_cor4)
	in  let <_4114> =
		apply 'bind_vars'/4
		    (_cor6, [], _cor2, _cor1)
	    in  %% Line 619
		case _4114 of
		  <{Vs,Env1,Ren1}> when 'true' ->
		      let <V> =
			  %% Line 697
			  call 'rec_env':'new_key'
			      (Env1)
		      in  let <Env2> =
			      %% Line 685
			      call 'rec_env':'bind'
				  (V, 'variable', Env1)
			  in  let <_cor10> =
				  %% Line 622
				  call 'cerl':'fun_body'
				      (_cor4)
			      in  let <_4906> =
				      %% Line 622
				      apply 'expr'/4
					  (_cor10, Env2, Ren1, _cor0)
				  in  %% Line 622
				      case _4906 of
					<{B,S1}> when 'true' ->
					    let <_cor13> =
						%% Line 626
						call 'erlang':'length'
						    (_cor3)
					    in  let <_cor12> =
						    %% Line 626
						    call 'cerl':'c_var'
							(V)
						in  let <_2525> =
							%% Line 634
							call 'erlang':'+'
							    (_cor13, 1)
						    in  let <Es> =
							    %% Line 634
							    apply 'closure_elements'/3
								(_cor13, _2525, _cor12)
							in  let <_cor15> =
								%% Line 627
								call 'cerl':'c_values'
								    (Es)
							    in  let <B1> =
								    %% Line 627
								    call 'cerl':'c_let'
									(_cor3, _cor15, B)
								in  let <_cor19> =
									%% Line 630
									call 'cerl':'fun_arity'
									    (_cor4)
								    in  let <_cor17> =
									    %% Line 630
									    call 'cerl':'c_var'
										(V)
									in  let <_cor18> =
										%% Line 630
										call 'erlang':'++'
										    (Vs, [_cor17|[]])
									    in  let <E> =
										    %% Line 630
										    call 'cerl':'ann_c_fun'
											(['closure'|[{'closure_orig_arity',_cor19}|[]]], _cor18, B1)
										in  let <_cor21> =
											%% Line 631
											call 'cerl':'c_var'
											    (_cor5)
										    in  %% Line 746
											( case S1 of
											    ( <( {'state',_cor11,_5200,_1733,_cor14,_rec12}
												 -| ['compiler_generated'] )> when 'true' ->
												  let <_rec10> =
												      [{_cor21,E}|_rec12]
												  in  call 'erlang':'setelement'
													  (6, S1, _rec10)
											      -| ['compiler_generated'] )
											    ( <_45> when 'true' ->
												  ( call ( 'erlang'
													   -| ['compiler_generated'] ):( 'error'
																	 -| ['compiler_generated'] )
													(( {'badrecord','state'}
													   -| ['compiler_generated'] ))
												    -| ['compiler_generated'] )
											      -| ['compiler_generated'] )
											  end
											  -| ['compiler_generated'] )
					( <_cor11> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_4906})
					  -| ['compiler_generated'] )
				      end
		  ( <_cor7> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_4114})
		    -| ['compiler_generated'] )
		end
'closure_elements'/3 =
    %% Line 636
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <0,_cor12,_cor13> when 'true' ->
	      []
	  %% Line 637
	  <N,M,V> when 'true' ->
	      let <_cor5> =
		  %% Line 638
		  call 'cerl':'c_atom'
		      ('closure_element')
	      in  let <_cor3> =
		      %% Line 639
		      call 'erlang':'-'
			  (_cor1, _cor2)
		  in  let <_cor4> =
			  %% Line 639
			  call 'cerl':'c_int'
			      (_cor3)
		      in  let <_cor6> =
			      %% Line 638
			      call 'cerl':'c_primop'
				  (_cor5, %% Line 639
					  [_cor4|[_cor0|[]]])
			  in  let <_cor7> =
				  %% Line 640
				  call 'erlang':'-'
				      (_cor2, 1)
			      in  let <_cor8> =
				      %% Line 640
				      apply 'closure_elements'/3
					  (_cor7, _cor1, _cor0)
				  in  %% Line 638
				      [_cor6|_cor8]
	end
'apply_expr'/4 =
    %% Line 650
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 651
	    call 'cerl':'apply_args'
		(_cor3)
	in  let <_1429> =
		%% Line 651
		apply 'expr_list'/4
		    (_cor4, _cor2, _cor1, _cor0)
	    in  %% Line 651
		case _1429 of
		  <{As,S1}> when 'true' ->
		      let <Op> =
			  %% Line 652
			  call 'cerl':'apply_op'
			      (_cor3)
		      in  %% Line 653
			  case call 'cerl':'is_c_var'
				   (Op) of
			    %% Line 654
			    <'true'> when 'true' ->
				let <_cor7> =
				    %% Line 655
				    call 'cerl':'var_name'
					(Op)
				in  let <_3745> =
					%% Line 713
					call 'dict':'find'
					    (_cor7, _cor1)
				    in  let <Name> =
					    %% Line 713
					    case _3745 of
					      %% Line 714
					      <{'ok',Value}> when 'true' ->
						  Value
					      %% Line 716
					      <'error'> when 'true' ->
						  _cor7
					      ( <_6203> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_3745})
						-| ['compiler_generated'] )
					    end
					in  let <_1553> =
						%% Line 656
						apply 'lookup_var'/2
						    (Name, _cor2)
					    in  %% Line 656
						case _1553 of
						  %% Line 657
						  <{'function',F,Vs}> when 'true' ->
						      let <_cor14> =
							  %% Line 658
							  ( letrec
								'lc$^0'/1 =
								    fun (_cor11) ->
									case _cor11 of
									  <[V|_cor10]> when 'true' ->
									      let <_cor12> =
										  call 'cerl':'c_var'
										      (V)
									      in  let <_cor13> =
										      apply 'lc$^0'/1
											  (_cor10)
										  in  ( [_cor12|_cor13]
											-| ['compiler_generated'] )
									  <[]> when 'true' ->
									      []
									  ( <_4748> when 'true' ->
										( primop 'match_fail'
										      ({'function_clause',_cor11})
										  -| [{'function_name',{'lc$^0',1}}] )
									    -| ['compiler_generated'] )
									end
							    in  apply 'lc$^0'/1
								    (Vs)
							    -| ['list_comprehension'] )
						      in  let <Vs1> =
							      %% Line 658
							      call 'erlang':'++'
								  (As, _cor14)
							  in  let <_cor16> =
								  %% Line 659
								  call 'cerl':'c_var'
								      (F)
							      in  let <_cor17> =
								      %% Line 659
								      call 'cerl':'update_c_apply'
									  (_cor3, _cor16, Vs1)
								  in  %% Line 659
								      {_cor17,S1}
						  %% Line 660
						  <'variable'> when 'true' ->
						      %% Line 661
						      apply 'apply_expr_1'/6
							  (_cor3, Op, As, _cor2, _cor1, S1)
						  ( <_cor18> when 'true' ->
							primop 'match_fail'
							    ({'case_clause',_1553})
						    -| ['compiler_generated'] )
						end
			    %% Line 663
			    <_cor24> when 'true' ->
				%% Line 664
				apply 'apply_expr_1'/6
				    (_cor3, Op, As, _cor2, _cor1, S1)
			  end
		  ( <_cor5> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_1429})
		    -| ['compiler_generated'] )
		end
'apply_expr_1'/6 =
    %% Line 671
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_6043> =
	    %% Line 672
	    apply 'expr'/4
		(_cor4, _cor2, _cor1, _cor0)
	in  %% Line 672
	    case _6043 of
	      <{Op1,S1}> when 'true' ->
		  let <_cor8> =
		      %% Line 673
		      call 'cerl':'c_atom'
			  ('apply_fun')
		  in  let <_cor7> =
			  %% Line 674
			  call 'cerl':'make_list'
			      (_cor3)
		      in  let <Call> =
			      %% Line 673
			      call 'cerl':'update_c_primop'
				  (_cor5, _cor8, %% Line 674
						 [Op1|[_cor7|[]]])
			  in  %% Line 675
			      {Call,S1}
	      ( <_cor6> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_6043})
		-| ['compiler_generated'] )
	    end
's__add_function_name'/2 =
    %% Line 730
    fun (_cor1,_cor0) ->
	%% Line 731
	( case _cor0 of
	    ( <( {'state',_cor9,_cor10,_rec5,_cor11,_cor12}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_rec3> =
		      call 'sets':'add_element'
			  (_cor1, _rec5)
		  in  call 'erlang':'setelement'
			  (4, _cor0, _rec3)
	      -| ['compiler_generated'] )
	    ( <_cor13> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
's__add_def'/3 =
    %% Line 745
    fun (_cor2,_cor1,_cor0) ->
	%% Line 746
	( case _cor0 of
	    ( <( {'state',_cor11,_cor12,_cor13,_cor14,_rec12}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_rec10> =
		      [{_cor2,_cor1}|_rec12]
		  in  call 'erlang':'setelement'
			  (6, _cor0, _rec10)
	      -| ['compiler_generated'] )
	    ( <_cor15> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('cerl_cconv')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('cerl_cconv', _cor0)
end