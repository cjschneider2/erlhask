module 'hipe_ppc_specific_fp' ['all_precoloured'/0,
			       'allocatable'/0,
			       'analyze'/1,
			       'bb'/2,
			       'check_and_rewrite'/2,
			       'def_use'/1,
			       'defines'/1,
			       'defun_to_cfg'/1,
			       'is_fixed'/1,
			       'is_move'/1,
			       'is_precoloured'/1,
			       'labels'/1,
			       'livein'/2,
			       'liveout'/2,
			       'module_info'/0,
			       'module_info'/1,
			       'non_alloc'/1,
			       'number_of_temporaries'/1,
			       'physical_name'/1,
			       'reg_nr'/1,
			       'reverse_postorder'/1,
			       'uses'/1,
			       'var_range'/1]
    attributes []
'defun_to_cfg'/1 =
    %% Line 55
    fun (_cor0) ->
	%% Line 56
	call 'hipe_ppc_cfg':'init'
	    (_cor0)
'check_and_rewrite'/2 =
    %% Line 58
    fun (_cor1,_cor0) ->
	%% Line 59
	call 'hipe_ppc_ra_postconditions_fp':'check_and_rewrite'
	    (_cor1, _cor0)
'reverse_postorder'/1 =
    %% Line 61
    fun (_cor0) ->
	%% Line 62
	call 'hipe_ppc_cfg':'reverse_postorder'
	    (_cor0)
'non_alloc'/1 =
    %% Line 64
    fun (_cor0) ->
	%% Line 65
	[]
'analyze'/1 =
    %% Line 69
    fun (_cor0) ->
	%% Line 70
	call 'hipe_ppc_liveness_fpr':'analyse'
	    (_cor0)
'livein'/2 =
    %% Line 72
    fun (_cor1,_cor0) ->
	%% Line 73
	call 'hipe_ppc_liveness_fpr':'livein'
	    (_cor1, _cor0)
'liveout'/2 =
    %% Line 75
    fun (_cor1,_cor0) ->
	%% Line 76
	call 'hipe_ppc_liveness_fpr':'liveout'
	    (_cor1, _cor0)
'allocatable'/0 =
    %% Line 80
    fun () ->
	%% Line 81
	call 'hipe_ppc_registers':'allocatable_fpr'
	    ()
'all_precoloured'/0 =
    %% Line 83
    fun () ->
	%% Line 84
	apply 'allocatable'/0
	    ()
'is_precoloured'/1 =
    %% Line 86
    fun (_cor0) ->
	%% Line 87
	call 'hipe_ppc_registers':'is_precoloured_fpr'
	    (_cor0)
'is_fixed'/1 =
    %% Line 89
    fun (_cor0) ->
	%% Line 90
	'false'
'physical_name'/1 =
    %% Line 92
    fun (_cor0) ->
	_cor0
'labels'/1 =
    %% Line 97
    fun (_cor0) ->
	%% Line 98
	call 'hipe_ppc_cfg':'labels'
	    (_cor0)
'var_range'/1 =
    %% Line 100
    fun (_cor0) ->
	%% Line 101
	call 'hipe_gensym':'var_range'
	    ('ppc')
'number_of_temporaries'/1 =
    %% Line 103
    fun (_cor0) ->
	let <Highest_temporary> =
	    %% Line 104
	    call 'hipe_gensym':'get_var'
		('ppc')
	in  %% Line 106
	    call 'erlang':'+'
		(Highest_temporary, 1)
'bb'/2 =
    %% Line 108
    fun (_cor1,_cor0) ->
	%% Line 109
	call 'hipe_ppc_cfg':'bb'
	    (_cor1, _cor0)
'def_use'/1 =
    %% Line 113
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 114
	    apply 'defines'/1
		(_cor0)
	in  let <_cor1> =
		%% Line 114
		apply 'uses'/1
		    (_cor0)
	    in  %% Line 114
		{_cor2,_cor1}
'uses'/1 =
    %% Line 116
    fun (_cor0) ->
	%% Line 117
	call 'hipe_ppc_defuse':'insn_use_fpr'
	    (_cor0)
'defines'/1 =
    %% Line 119
    fun (_cor0) ->
	%% Line 120
	call 'hipe_ppc_defuse':'insn_def_fpr'
	    (_cor0)
'is_move'/1 =
    %% Line 122
    fun (_cor0) ->
	%% Line 123
	call 'hipe_ppc':'is_pseudo_fmove'
	    (_cor0)
'reg_nr'/1 =
    %% Line 125
    fun (_cor0) ->
	%% Line 126
	call 'hipe_ppc':'temp_reg'
	    (_cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_ppc_specific_fp')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_ppc_specific_fp', _cor0)
end