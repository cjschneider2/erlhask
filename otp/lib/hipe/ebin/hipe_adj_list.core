module 'hipe_adj_list' ['add_edge'/3,
			'edges'/2,
			'module_info'/0,
			'module_info'/1,
			'new'/1,
			'remove_edge'/3]
    attributes [%% Line 28
		'author' =
		    %% Line 28
		    [65|[110|[100|[114|[101|[97|[115|[32|[87|[97|[108|[108|[105|[110]]]]]]]]]]]]]]]
'new'/1 =
    %% Line 49
    fun (_cor0) ->
	%% Line 50
	call 'hipe_vectors':'new'
	    (_cor0, [])
'add_edge'/3 =
    %% Line 86
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 88
	    call 'hipe_vectors':'get'
		(_cor0, _cor2)
	in  %% Line 87
	    call 'hipe_vectors':'set'
		(_cor0, _cor2, %% Line 88
			       [_cor1|_cor3])
'remove_edges'/3 =
    %% Line 106
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <U,Vs,Adj_list>
	      when let <_cor3> =
		    call 'erlang':'is_list'
			(Vs)
		in  let <_cor4> =
			call 'erlang':'is_integer'
			    (U)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      let <_cor5> =
		  %% Line 107
		  call 'hipe_vectors':'get'
		      (Adj_list, U)
	      in  let <_cor6> =
		      %% Line 107
		      call 'erlang':'--'
			  (_cor5, Vs)
		  in  %% Line 107
		      call 'hipe_vectors':'set'
			  (Adj_list, U, _cor6)
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7})
		  -| [{'function_name',{'remove_edges',3}}] )
	    -| ['compiler_generated'] )
	end
'remove_edge'/3 =
    %% Line 124
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <U,_cor8,Adj_list>
	      when call 'erlang':'=:='
		    (_cor8,
		     U) ->
	      Adj_list
	  %% Line 125
	  <U,V,Adj_list>
	      when let <_cor3> =
		    call 'erlang':'is_integer'
			(U)
		in  let <_cor4> =
			call 'erlang':'is_integer'
			    (V)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      %% Line 126
	      apply 'remove_edges'/3
		  (U, [V|[]], Adj_list)
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'remove_edge',3}}] )
	    -| ['compiler_generated'] )
	end
'edges'/2 =
    %% Line 142
    fun (_cor1,_cor0) ->
	%% Line 143
	call 'hipe_vectors':'get'
	    (_cor0, _cor1)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_adj_list')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_adj_list', _cor0)
end