module 'hipe_sparc_registers' ['all_precoloured'/0,
			       'allocatable_fpr'/0,
			       'allocatable_gpr'/0,
			       'arg'/1,
			       'args'/1,
			       'call_clobbered'/0,
			       'first_virtual'/0,
			       'g0'/0,
			       'heap_pointer'/0,
			       'is_arg'/1,
			       'is_fixed'/1,
			       'is_precoloured_fpr'/1,
			       'is_precoloured_gpr'/1,
			       'live_at_return'/0,
			       'module_info'/0,
			       'module_info'/1,
			       'nr_args'/0,
			       'proc_pointer'/0,
			       'reg_name_fpr'/1,
			       'reg_name_gpr'/1,
			       'return_address'/0,
			       'return_value'/0,
			       'stack_pointer'/0,
			       'tailcall_clobbered'/0,
			       'temp1'/0,
			       'temp2'/0,
			       'temp3'/0]
    attributes []
'reg_name_gpr'/1 =
    %% Line 104
    fun (_cor0) ->
	%% Line 105
	case _cor0 of
	  %% Line 106
	  <0> when 'true' ->
	      [37|[103|[48]]]
	  %% Line 107
	  <1> when 'true' ->
	      [37|[103|[49]]]
	  %% Line 108
	  <2> when 'true' ->
	      [37|[103|[50]]]
	  %% Line 109
	  <3> when 'true' ->
	      [37|[103|[51]]]
	  %% Line 110
	  <4> when 'true' ->
	      [37|[103|[52]]]
	  %% Line 111
	  <5> when 'true' ->
	      [37|[103|[53]]]
	  %% Line 112
	  <6> when 'true' ->
	      [37|[103|[54]]]
	  %% Line 113
	  <7> when 'true' ->
	      [37|[103|[55]]]
	  %% Line 114
	  <8> when 'true' ->
	      [37|[111|[48]]]
	  %% Line 115
	  <9> when 'true' ->
	      [37|[111|[49]]]
	  %% Line 116
	  <10> when 'true' ->
	      [37|[111|[50]]]
	  %% Line 117
	  <11> when 'true' ->
	      [37|[111|[51]]]
	  %% Line 118
	  <12> when 'true' ->
	      [37|[111|[52]]]
	  %% Line 119
	  <13> when 'true' ->
	      [37|[111|[53]]]
	  %% Line 120
	  <14> when 'true' ->
	      [37|[115|[112]]]
	  %% Line 121
	  <15> when 'true' ->
	      [37|[111|[55]]]
	  %% Line 122
	  <16> when 'true' ->
	      [37|[108|[48]]]
	  %% Line 123
	  <17> when 'true' ->
	      [37|[108|[49]]]
	  %% Line 124
	  <18> when 'true' ->
	      [37|[108|[50]]]
	  %% Line 125
	  <19> when 'true' ->
	      [37|[108|[51]]]
	  %% Line 126
	  <20> when 'true' ->
	      [37|[108|[52]]]
	  %% Line 127
	  <21> when 'true' ->
	      [37|[108|[53]]]
	  %% Line 128
	  <22> when 'true' ->
	      [37|[108|[54]]]
	  %% Line 129
	  <23> when 'true' ->
	      [37|[108|[55]]]
	  %% Line 130
	  <24> when 'true' ->
	      [37|[105|[48]]]
	  %% Line 131
	  <25> when 'true' ->
	      [37|[105|[49]]]
	  %% Line 132
	  <26> when 'true' ->
	      [37|[105|[50]]]
	  %% Line 133
	  <27> when 'true' ->
	      [37|[105|[51]]]
	  %% Line 134
	  <28> when 'true' ->
	      [37|[105|[52]]]
	  %% Line 135
	  <29> when 'true' ->
	      [37|[105|[53]]]
	  %% Line 136
	  <30> when 'true' ->
	      [37|[102|[112]]]
	  %% Line 137
	  <31> when 'true' ->
	      [37|[105|[55]]]
	  %% Line 139
	  <_cor4> when 'true' ->
	      let <_cor1> =
		  call 'erlang':'integer_to_list'
		      (_cor0)
	      in  [37|[114|_cor1]]
	end
'reg_name_fpr'/1 =
    %% Line 142
    fun (_cor0) ->
	let <_cor1> =
	    call 'erlang':'*'
		(2, _cor0)
	in  let <_cor2> =
		call 'erlang':'integer_to_list'
		    (_cor1)
	    in  [102|_cor2]
'first_virtual'/0 =
    %% Line 145
    fun () ->
	32
'is_precoloured_gpr'/1 =
    %% Line 149
    fun (_cor0) ->
	call 'erlang':'=<'
	    (_cor0, 31)
'is_precoloured_fpr'/1 =
    %% Line 150
    fun (_cor0) ->
	call 'erlang':'=<'
	    (_cor0, 31)
'all_precoloured'/0 =
    %% Line 152
    fun () ->
	%% Line 159
	[0|[1|[2|[3|[4|[5|[6|[7|[8|[9|[10|[11|[12|[13|[14|[15|[16|[17|[18|[19|[20|[21|[22|[23|[24|[25|[26|[27|[28|[29|[30|[31]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
'return_value'/0 =
    %% Line 164
    fun () ->
	8
'temp1'/0 =
    %% Line 166
    fun () ->
	27
'temp2'/0 =
    %% Line 167
    fun () ->
	28
'temp3'/0 =
    %% Line 168
    fun () ->
	29
'heap_pointer'/0 =
    %% Line 170
    fun () ->
	26
'stack_pointer'/0 =
    %% Line 172
    fun () ->
	25
'proc_pointer'/0 =
    %% Line 174
    fun () ->
	24
'return_address'/0 =
    %% Line 176
    fun () ->
	15
'g0'/0 =
    %% Line 178
    fun () ->
	0
'allocatable_gpr'/0 =
    %% Line 180
    fun () ->
	%% Line 185
	[1|[2|[3|[4|[5|[8|[9|[10|[11|[12|[13|[15|[16|[17|[18|[19|[20|[21|[22|[23|[27|[29|[31]]]]]]]]]]]]]]]]]]]]]]]
'allocatable_fpr'/0 =
    %% Line 190
    fun () ->
	%% Line 196
	[0|[1|[2|[3|[4|[5|[6|[7|[8|[9|[10|[11|[12|[13|[14|[15]]]]]]]]]]]]]]]]
'is_fixed'/1 =
    %% Line 200
    fun (_cor0) ->
	%% Line 201
	case _cor0 of
	  %% Line 202
	  <26> when 'true' ->
	      'true'
	  %% Line 203
	  <25> when 'true' ->
	      'true'
	  %% Line 204
	  <24> when 'true' ->
	      'true'
	  %% Line 209
	  <0> when 'true' ->
	      'true'
	  %% Line 210
	  <6> when 'true' ->
	      'true'
	  %% Line 211
	  <7> when 'true' ->
	      'true'
	  %% Line 212
	  <14> when 'true' ->
	      'true'
	  %% Line 213
	  <30> when 'true' ->
	      'true'
	  %% Line 214
	  <_cor3> when 'true' ->
	      'false'
	end
'nr_args'/0 =
    %% Line 217
    fun () ->
	4
'args'/1 =
    %% Line 219
    fun (_cor0) ->
	case _cor0 of
	  <Arity>
	      when call 'erlang':'is_integer'
		    (_cor0) ->
	      let <N> =
		  %% Line 220
		  call 'erlang':'min'
		      (Arity, 4)
	      in  let <_cor2> =
		      %% Line 221
		      call 'erlang':'-'
			  (N, 1)
		  in  %% Line 221
		      apply 'args'/2
			  (_cor2, [])
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'args',1}}] )
	    -| ['compiler_generated'] )
	end
'args'/2 =
    %% Line 223
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <I,Rest>
	      when let <_cor2> =
		    call 'erlang':'is_integer'
			(I)
		in  let <_cor3> =
			call 'erlang':'<'
			    (I, 0)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      Rest
	  %% Line 224
	  <I,Rest> when 'true' ->
	      let <_cor5> =
		  call 'erlang':'-'
		      (I, 1)
	      in  let <_cor4> =
		      apply 'arg'/1
			  (I)
		  in  apply 'args'/2
			  (_cor5, [_cor4|Rest])
	end
'arg'/1 =
    %% Line 226
    fun (_cor0) ->
	%% Line 227
	case <> of
	  <>
	      when call 'erlang':'<'
		    (_cor0,
		     4) ->
	      %% Line 228
	      case _cor0 of
		%% Line 229
		<0> when 'true' ->
		    9
		%% Line 230
		<1> when 'true' ->
		    10
		%% Line 231
		<2> when 'true' ->
		    11
		%% Line 232
		<3> when 'true' ->
		    12
		%% Line 233
		<4> when 'true' ->
		    13
		%% Line 234
		<5> when 'true' ->
		    8
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor1})
		  -| ['compiler_generated'] )
	      end
	  ( <> when 'true' ->
		primop 'match_fail'
		    ('if_clause')
	    -| ['compiler_generated'] )
	end
'is_arg'/1 =
    %% Line 238
    fun (_cor0) ->
	%% Line 239
	case _cor0 of
	  %% Line 240
	  <9> when 'true' ->
	      'true'
	  %% Line 241
	  <10> when 'true' ->
	      'true'
	  %% Line 242
	  <11> when 'true' ->
	      'true'
	  %% Line 243
	  <12> when 'true' ->
	      'true'
	  %% Line 244
	  <13> when 'true' ->
	      'false'
	  %% Line 245
	  <8> when 'true' ->
	      'false'
	  %% Line 246
	  <_cor3> when 'true' ->
	      'false'
	end
'call_clobbered'/0 =
    %% Line 249
    fun () ->
	%% Line 250
	[{1,'tagged'}|[{1,'untagged'}|[{2,'tagged'}|[{2,'untagged'}|[{3,'tagged'}|[{3,'untagged'}|[{4,'tagged'}|[{4,'untagged'}|[{5,'tagged'}|[{5,'untagged'}|[{8,'tagged'}|[{8,'untagged'}|[{9,'tagged'}|[{9,'untagged'}|[{10,'tagged'}|[{10,'untagged'}|[{11,'tagged'}|[{11,'untagged'}|[{12,'tagged'}|[{12,'untagged'}|[{13,'tagged'}|[{13,'untagged'}|[{15,'tagged'}|[{15,'untagged'}|[{16,'tagged'}|[{16,'untagged'}|[{17,'tagged'}|[{17,'untagged'}|[{18,'tagged'}|[{18,'untagged'}|[{19,'tagged'}|[{19,'untagged'}|[{20,'tagged'}|[{20,'untagged'}|[{21,'tagged'}|[{21,'untagged'}|[{22,'tagged'}|[{22,'untagged'}|[{23,'tagged'}|[{23,'untagged'}|[{27,'tagged'}|[{27,'untagged'}|[{28,'tagged'}|[{28,'untagged'}|[{29,'tagged'}|[{29,'untagged'}|[{31,'tagged'}|[{31,'untagged'}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
'tailcall_clobbered'/0 =
    %% Line 284
    fun () ->
	%% Line 285
	[{27,'tagged'}|[{27,'untagged'}]]
'live_at_return'/0 =
    %% Line 287
    fun () ->
	%% Line 288
	[{26,'untagged'}|[{25,'untagged'}|[{24,'untagged'}]]]
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_sparc_registers')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_sparc_registers', _cor0)
end