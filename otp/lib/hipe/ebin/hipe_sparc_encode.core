module 'hipe_sparc_encode' ['insn_encode'/2,
			    'module_info'/0,
			    'module_info'/1]
    attributes []
'bf'/3 =
    %% Line 37
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 38
	    case <> of
	      <>
		  when call 'erlang':'>'
			(32,
			 _cor2) ->
		  []
	      <> when 'true' ->
		  call 'erlang':'exit'
		      ({'assertion_failed','hipe_sparc_encode',38,[51|[50|[32|[62|[32|[76|[101|[102|[116|[66|[105|[116]]]]]]]]]]]]})
	    end
	    do  %% Line 39
		case <> of
		  <>
		      when call 'erlang':'>='
			    (_cor2,
			     _cor1) ->
		      []
		  <> when 'true' ->
		      call 'erlang':'exit'
			  ({'assertion_failed','hipe_sparc_encode',39,[76|[101|[102|[116|[66|[105|[116|[32|[62|[61|[32|[82|[105|[103|[104|[116|[66|[105|[116]]]]]]]]]]]]]]]]]]]})
		end
		do  %% Line 40
		    case <> of
		      <>
			  when call 'erlang':'>='
				(_cor1,
				 0) ->
			  []
		      <> when 'true' ->
			  call 'erlang':'exit'
			      ({'assertion_failed','hipe_sparc_encode',40,[82|[105|[103|[104|[116|[66|[105|[116|[32|[62|[61|[32|[48]]]]]]]]]]]]]})
		    end
		    do  %% Line 41
			case <> of
			  <>
			      when call 'erlang':'>='
				    (_cor0,
				     0) ->
			      []
			  <> when 'true' ->
			      call 'erlang':'exit'
				  ({'assertion_failed','hipe_sparc_encode',41,[86|[97|[108|[117|[101|[32|[62|[61|[32|[48]]]]]]]]]]})
			end
			do  %% Line 42
			    case <> of
			      <>
				  when try
					let <_cor3> =
					    call 'erlang':'-'
						(_cor2, _cor1)
					in  let <_cor4> =
						call 'erlang':'+'
						    (_cor3, 1)
					    in  let <_cor5> =
						    call 'erlang':'bsl'
							(1, _cor4)
						in  call 'erlang':'<'
							(_cor0, _cor5)
				    of <Try> ->
					Try
				    catch <T,R> ->
					'false' ->
				  []
			      <> when 'true' ->
				  call 'erlang':'exit'
				      ({'assertion_failed','hipe_sparc_encode',42,[86|[97|[108|[117|[101|[32|[60|[32|[40|[32|[49|[32|[98|[115|[108|[32|[40|[32|[40|[32|[76|[101|[102|[116|[66|[105|[116|[32|[45|[32|[82|[105|[103|[104|[116|[66|[105|[116|[32|[41|[32|[43|[32|[49|[32|[41|[32|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]})
			    end
			    %% Line 43
			    call 'erlang':'bsl'
				(_cor0, _cor1)
'format1'/1 =
    %% Line 53
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 54
	    apply 'bf'/3
		(30, 30, 1)
	in  let <_cor1> =
		%% Line 54
		apply 'bf'/3
		    (29, 0, _cor0)
	    in  %% Line 54
		call 'erlang':'bor'
		    (_cor2, _cor1)
'format2a'/3 =
    %% Line 56
    fun (_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 57
	    apply 'bf'/3
		(29, 25, _cor2)
	in  let <_cor4> =
		%% Line 57
		apply 'bf'/3
		    (24, 22, _cor1)
	    in  let <_cor6> =
		    %% Line 57
		    call 'erlang':'bor'
			(_cor5, _cor4)
		in  let <_cor3> =
			%% Line 57
			apply 'bf'/3
			    (21, 0, _cor0)
		    in  %% Line 57
			call 'erlang':'bor'
			    (_cor6, _cor3)
'format2b'/4 =
    %% Line 59
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 60
	    apply 'bf'/3
		(29, 29, _cor3)
	in  let <_cor6> =
		%% Line 60
		apply 'bf'/3
		    (28, 25, _cor2)
	    in  let <_cor8> =
		    %% Line 60
		    call 'erlang':'bor'
			(_cor7, _cor6)
		in  let <_cor5> =
			%% Line 60
			apply 'bf'/3
			    (24, 22, _cor1)
		    in  let <_cor9> =
			    %% Line 60
			    call 'erlang':'bor'
				(_cor8, _cor5)
			in  let <_cor4> =
				%% Line 60
				apply 'bf'/3
				    (21, 0, _cor0)
			    in  %% Line 60
				call 'erlang':'bor'
				    (_cor9, _cor4)
'format2c'/7 =
    %% Line 62
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor13> =
	    %% Line 63
	    apply 'bf'/3
		(29, 29, _cor6)
	in  let <_cor12> =
		%% Line 63
		apply 'bf'/3
		    (28, 25, _cor5)
	    in  let <_cor14> =
		    %% Line 63
		    call 'erlang':'bor'
			(_cor13, _cor12)
		in  let <_cor11> =
			%% Line 63
			apply 'bf'/3
			    (24, 22, _cor4)
		    in  let <_cor15> =
			    %% Line 63
			    call 'erlang':'bor'
				(_cor14, _cor11)
			in  let <_cor10> =
				%% Line 63
				apply 'bf'/3
				    (21, 21, _cor3)
			    in  let <_cor16> =
				    %% Line 63
				    call 'erlang':'bor'
					(_cor15, _cor10)
				in  let <_cor9> =
					%% Line 64
					apply 'bf'/3
					    (20, 20, _cor2)
				    in  let <_cor17> =
					    %% Line 64
					    call 'erlang':'bor'
						(_cor16, _cor9)
					in  let <_cor8> =
						%% Line 64
						apply 'bf'/3
						    (19, 19, _cor1)
					    in  let <_cor18> =
						    %% Line 64
						    call 'erlang':'bor'
							(_cor17, _cor8)
						in  let <_cor7> =
							%% Line 64
							apply 'bf'/3
							    (18, 0, _cor0)
						    in  %% Line 64
							call 'erlang':'bor'
							    (_cor18, _cor7)
'format2d'/6 =
    %% Line 66
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <D16Hi> =
	    %% Line 67
	    call 'erlang':'bsr'
		(_cor0, 14)
	in  let <D16Lo> =
		%% Line 68
		call 'erlang':'band'
		    (_cor0, 16383)
	    in  let <_cor14> =
		    %% Line 69
		    apply 'bf'/3
			(29, 29, _cor5)
		in  let <_cor13> =
			%% Line 69
			apply 'bf'/3
			    (27, 25, _cor4)
		    in  let <_cor15> =
			    %% Line 69
			    call 'erlang':'bor'
				(_cor14, _cor13)
			in  let <_cor12> =
				%% Line 69
				apply 'bf'/3
				    (24, 22, _cor3)
			    in  let <_cor16> =
				    %% Line 69
				    call 'erlang':'bor'
					(_cor15, _cor12)
				in  let <_cor11> =
					%% Line 69
					apply 'bf'/3
					    (21, 20, D16Hi)
				    in  let <_cor17> =
					    %% Line 69
					    call 'erlang':'bor'
						(_cor16, _cor11)
					in  let <_cor10> =
						%% Line 70
						apply 'bf'/3
						    (19, 19, _cor2)
					    in  let <_cor18> =
						    %% Line 70
						    call 'erlang':'bor'
							(_cor17, _cor10)
						in  let <_cor9> =
							%% Line 70
							apply 'bf'/3
							    (18, 14, _cor1)
						    in  let <_cor19> =
							    %% Line 70
							    call 'erlang':'bor'
								(_cor18, _cor9)
							in  let <_cor8> =
								%% Line 70
								apply 'bf'/3
								    (13, 0, D16Lo)
							    in  %% Line 70
								call 'erlang':'bor'
								    (_cor19, _cor8)
'format3common'/4 =
    %% Line 72
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 73
	    apply 'bf'/3
		(31, 30, _cor3)
	in  let <_cor6> =
		%% Line 73
		apply 'bf'/3
		    (29, 25, _cor2)
	    in  let <_cor8> =
		    %% Line 73
		    call 'erlang':'bor'
			(_cor7, _cor6)
		in  let <_cor5> =
			%% Line 73
			apply 'bf'/3
			    (24, 19, _cor1)
		    in  let <_cor9> =
			    %% Line 73
			    call 'erlang':'bor'
				(_cor8, _cor5)
			in  let <_cor4> =
				%% Line 73
				apply 'bf'/3
				    (18, 14, _cor0)
			    in  %% Line 73
				call 'erlang':'bor'
				    (_cor9, _cor4)
'format3a'/5 =
    %% Line 75
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 76
	    apply 'format3common'/4
		(_cor4, _cor3, _cor2, _cor1)
	in  let <_cor5> =
		%% Line 76
		apply 'bf'/3
		    (4, 0, _cor0)
	    in  %% Line 76
		call 'erlang':'bor'
		    (_cor6, _cor5)
'format3ax'/5 =
    %% Line 78
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 79
	    apply 'format3a'/5
		(_cor4, _cor3, _cor2, _cor1, _cor0)
	in  let <_cor5> =
		%% Line 79
		apply 'bf'/3
		    (12, 12, 1)
	    in  %% Line 79
		call 'erlang':'bor'
		    (_cor6, _cor5)
'format3b'/5 =
    %% Line 81
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 82
	    apply 'format3common'/4
		(_cor4, _cor3, _cor2, _cor1)
	in  let <_cor6> =
		%% Line 82
		apply 'bf'/3
		    (13, 13, 1)
	    in  let <_cor8> =
		    %% Line 82
		    call 'erlang':'bor'
			(_cor7, _cor6)
		in  let <_cor5> =
			%% Line 82
			apply 'bf'/3
			    (12, 0, _cor0)
		    in  %% Line 82
			call 'erlang':'bor'
			    (_cor8, _cor5)
'format3b32'/5 =
    %% Line 84
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 85
	    apply 'format3a'/5
		(_cor4, _cor3, _cor2, _cor1, _cor0)
	in  let <_cor5> =
		%% Line 85
		apply 'bf'/3
		    (13, 13, 1)
	    in  %% Line 85
		call 'erlang':'bor'
		    (_cor6, _cor5)
'format3b64'/5 =
    %% Line 87
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 88
	    apply 'format3common'/4
		(_cor4, _cor3, _cor2, _cor1)
	in  let <_cor6> =
		%% Line 88
		apply 'bf'/3
		    (13, 13, 1)
	    in  let <_cor8> =
		    %% Line 88
		    call 'erlang':'bor'
			(_cor7, _cor6)
		in  let <_cor5> =
			%% Line 88
			apply 'bf'/3
			    (5, 0, _cor0)
		    in  %% Line 88
			call 'erlang':'bor'
			    (_cor8, _cor5)
'format3ab'/5 =
    %% Line 90
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Op,{'r',Rd},Op3,{'r',Rs1},Src2> when 'true' ->
	      %% Line 91
	      case Src2 of
		%% Line 92
		<{'r',Rs2}> when 'true' ->
		    %% Line 93
		    apply 'format3a'/5
			(Op, Rd, Op3, Rs1, Rs2)
		%% Line 94
		<{'simm13',Simm13}> when 'true' ->
		    %% Line 95
		    apply 'format3b'/5
			(Op, Rd, Op3, Rs1, Simm13)
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor5})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor10,_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'format3ab',5}}] )
	    -| ['compiler_generated'] )
	end
'format3ab'/3 =
    %% Line 98
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{Rs1,Src2,Rd},Op3,Op> when 'true' ->
	      apply 'format3ab'/5
		  (Op, Rd, Op3, Rs1, Src2)
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'format3ab',3}}] )
	    -| ['compiler_generated'] )
	end
'cond'/1 =
    %% Line 112
    fun (_cor0) ->
	%% Line 113
	case _cor0 of
	  %% Line 114
	  <'n'> when 'true' ->
	      0
	  %% Line 115
	  <'e'> when 'true' ->
	      1
	  %% Line 116
	  <'le'> when 'true' ->
	      2
	  %% Line 117
	  <'l'> when 'true' ->
	      3
	  %% Line 118
	  <'leu'> when 'true' ->
	      4
	  %% Line 119
	  <'lu'> when 'true' ->
	      5
	  %% Line 120
	  <'neg'> when 'true' ->
	      6
	  %% Line 121
	  <'vs'> when 'true' ->
	      7
	  %% Line 122
	  <'a'> when 'true' ->
	      8
	  %% Line 123
	  <'ne'> when 'true' ->
	      9
	  %% Line 124
	  <'g'> when 'true' ->
	      10
	  %% Line 125
	  <'ge'> when 'true' ->
	      11
	  %% Line 126
	  <'gu'> when 'true' ->
	      12
	  %% Line 127
	  <'geu'> when 'true' ->
	      13
	  %% Line 128
	  <'pos'> when 'true' ->
	      14
	  %% Line 129
	  <'vc'> when 'true' ->
	      15
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor1})
	    -| ['compiler_generated'] )
	end
'rcond'/1 =
    %% Line 132
    fun (_cor0) ->
	%% Line 133
	case _cor0 of
	  %% Line 134
	  <'z'> when 'true' ->
	      1
	  %% Line 135
	  <'lez'> when 'true' ->
	      2
	  %% Line 136
	  <'lz'> when 'true' ->
	      3
	  %% Line 137
	  <'nz'> when 'true' ->
	      5
	  %% Line 138
	  <'gz'> when 'true' ->
	      6
	  %% Line 139
	  <'gez'> when 'true' ->
	      7
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor1})
	    -| ['compiler_generated'] )
	end
'pred'/1 =
    %% Line 142
    fun (_cor0) ->
	%% Line 143
	case _cor0 of
	  %% Line 144
	  <'pt'> when 'true' ->
	      1
	  %% Line 145
	  <'pn'> when 'true' ->
	      0
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor1})
	    -| ['compiler_generated'] )
	end
'call'/1 =
    %% Line 152
    fun (_cor0) ->
	case _cor0 of
	  <{'disp30',Disp30}> when 'true' ->
	      %% Line 153
	      apply 'format1'/1
		  (Disp30)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'call',1}}] )
	    -| ['compiler_generated'] )
	end
'ba'/1 =
    %% Line 155
    fun (_cor0) ->
	case _cor0 of
	  <{'disp22',Disp22}> when 'true' ->
	      let <_cor1> =
		  %% Line 156
		  apply 'cond'/1
		      ('a')
	      in  %% Line 156
		  apply 'format2b'/4
		      (0, _cor1, 2, Disp22)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'ba',1}}] )
	    -| ['compiler_generated'] )
	end
'bp'/1 =
    %% Line 158
    fun (_cor0) ->
	case _cor0 of
	  <{{'cond',Cond},{'pred',Pred},{'disp19',Disp19}}> when 'true' ->
	      let <_cor2> =
		  %% Line 160
		  apply 'cond'/1
		      (Cond)
	      in  let <_cor1> =
		      %% Line 160
		      apply 'pred'/1
			  (Pred)
		  in  %% Line 160
		      apply 'format2c'/7
			  (0, _cor2, 1, 0, 0, _cor1, Disp19)
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'bp',1}}] )
	    -| ['compiler_generated'] )
	end
'br'/1 =
    %% Line 162
    fun (_cor0) ->
	case _cor0 of
	  <{{'rcond',RCond},{'pred',Pred},{'r',Rs1},{'disp16',Disp16}}> when 'true' ->
	      let <_cor2> =
		  %% Line 163
		  apply 'rcond'/1
		      (RCond)
	      in  let <_cor1> =
		      %% Line 163
		      apply 'pred'/1
			  (Pred)
		  in  %% Line 163
		      apply 'format2d'/6
			  (0, _cor2, 3, _cor1, Rs1, Disp16)
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'br',1}}] )
	    -| ['compiler_generated'] )
	end
'alu'/2 =
    %% Line 169
    fun (_cor1,_cor0) ->
	apply 'format3ab'/3
	    (_cor1, _cor0, 2)
'add'/1 =
    %% Line 171
    fun (_cor0) ->
	apply 'alu'/2
	    (_cor0, 0)
'addcc'/1 =
    %% Line 172
    fun (_cor0) ->
	apply 'alu'/2
	    (_cor0, 16)
'sub'/1 =
    %% Line 176
    fun (_cor0) ->
	apply 'alu'/2
	    (_cor0, 4)
'subcc'/1 =
    %% Line 177
    fun (_cor0) ->
	apply 'alu'/2
	    (_cor0, 20)
'mulx'/1 =
    %% Line 187
    fun (_cor0) ->
	apply 'alu'/2
	    (_cor0, 9)
'smul'/1 =
    %% Line 192
    fun (_cor0) ->
	apply 'alu'/2
	    (_cor0, 11)
'and'/1 =
    %% Line 196
    fun (_cor0) ->
	apply 'alu'/2
	    (_cor0, 1)
'andcc'/1 =
    %% Line 197
    fun (_cor0) ->
	apply 'alu'/2
	    (_cor0, 17)
'or'/1 =
    %% Line 201
    fun (_cor0) ->
	apply 'alu'/2
	    (_cor0, 2)
'orcc'/1 =
    %% Line 202
    fun (_cor0) ->
	apply 'alu'/2
	    (_cor0, 18)
'xor'/1 =
    %% Line 206
    fun (_cor0) ->
	apply 'alu'/2
	    (_cor0, 3)
'xorcc'/1 =
    %% Line 207
    fun (_cor0) ->
	apply 'alu'/2
	    (_cor0, 19)
'shift32'/2 =
    %% Line 211
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{{'r',Rs1},Src2,{'r',Rd}},Op3> when 'true' ->
	      %% Line 212
	      case Src2 of
		%% Line 213
		<{'r',Rs2}> when 'true' ->
		    %% Line 214
		    apply 'format3a'/5
			(2, Rd, Op3, Rs1, Rs2)
		%% Line 215
		<{'uimm5',Shcnt32}> when 'true' ->
		    %% Line 216
		    apply 'format3b32'/5
			(2, Rd, Op3, Rs1, Shcnt32)
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'shift32',2}}] )
	    -| ['compiler_generated'] )
	end
'shift64'/2 =
    %% Line 219
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{{'r',Rs1},Src2,{'r',Rd}},Op3> when 'true' ->
	      %% Line 220
	      case Src2 of
		%% Line 221
		<{'r',Rs2}> when 'true' ->
		    %% Line 222
		    apply 'format3ax'/5
			(2, Rd, Op3, Rs1, Rs2)
		%% Line 223
		<{'uimm6',Shcnt64}> when 'true' ->
		    %% Line 224
		    apply 'format3b64'/5
			(2, Rd, Op3, Rs1, Shcnt64)
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'shift64',2}}] )
	    -| ['compiler_generated'] )
	end
'sll'/1 =
    %% Line 227
    fun (_cor0) ->
	apply 'shift32'/2
	    (_cor0, 37)
'sllx'/1 =
    %% Line 228
    fun (_cor0) ->
	apply 'shift64'/2
	    (_cor0, 37)
'srl'/1 =
    %% Line 229
    fun (_cor0) ->
	apply 'shift32'/2
	    (_cor0, 38)
'srlx'/1 =
    %% Line 230
    fun (_cor0) ->
	apply 'shift64'/2
	    (_cor0, 38)
'sra'/1 =
    %% Line 231
    fun (_cor0) ->
	apply 'shift32'/2
	    (_cor0, 39)
'srax'/1 =
    %% Line 232
    fun (_cor0) ->
	apply 'shift64'/2
	    (_cor0, 39)
'jmpl'/1 =
    %% Line 234
    fun (_cor0) ->
	apply 'alu'/2
	    (_cor0, 56)
'rd'/1 =
    %% Line 236
    fun (_cor0) ->
	case _cor0 of
	  <{'y',{'r',Rd}}> when 'true' ->
	      apply 'format3a'/5
		  (2, Rd, 40, 0, 0)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'rd',1}}] )
	    -| ['compiler_generated'] )
	end
'sethi'/1 =
    %% Line 238
    fun (_cor0) ->
	case _cor0 of
	  <{{'uimm22',UImm22},{'r',Rd}}> when 'true' ->
	      apply 'format2a'/3
		  (Rd, 4, UImm22)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'sethi',1}}] )
	    -| ['compiler_generated'] )
	end
'ld'/2 =
    %% Line 240
    fun (_cor1,_cor0) ->
	apply 'format3ab'/3
	    (_cor1, _cor0, 3)
'ldsb'/1 =
    %% Line 242
    fun (_cor0) ->
	apply 'ld'/2
	    (_cor0, 9)
'ldsh'/1 =
    %% Line 243
    fun (_cor0) ->
	apply 'ld'/2
	    (_cor0, 10)
'ldsw'/1 =
    %% Line 244
    fun (_cor0) ->
	apply 'ld'/2
	    (_cor0, 8)
'ldub'/1 =
    %% Line 245
    fun (_cor0) ->
	apply 'ld'/2
	    (_cor0, 1)
'lduh'/1 =
    %% Line 246
    fun (_cor0) ->
	apply 'ld'/2
	    (_cor0, 2)
'lduw'/1 =
    %% Line 247
    fun (_cor0) ->
	apply 'ld'/2
	    (_cor0, 0)
'ldx'/1 =
    %% Line 248
    fun (_cor0) ->
	apply 'ld'/2
	    (_cor0, 11)
'st'/2 =
    %% Line 251
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{Rd,Rs1,Src2},Op3> when 'true' ->
	      apply 'format3ab'/5
		  (3, Rd, Op3, Rs1, Src2)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'st',2}}] )
	    -| ['compiler_generated'] )
	end
'stb'/1 =
    %% Line 253
    fun (_cor0) ->
	apply 'st'/2
	    (_cor0, 5)
'stw'/1 =
    %% Line 255
    fun (_cor0) ->
	apply 'st'/2
	    (_cor0, 4)
'stx'/1 =
    %% Line 256
    fun (_cor0) ->
	apply 'st'/2
	    (_cor0, 14)
'format3f'/4 =
    %% Line 263
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 264
	    apply 'format3a'/5
		(2, _cor3, 52, _cor2, _cor0)
	in  let <_cor4> =
		%% Line 264
		apply 'bf'/3
		    (13, 5, _cor1)
	    in  %% Line 264
		call 'erlang':'bor'
		    (_cor5, _cor4)
'fpop1binary'/2 =
    %% Line 266
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Opf,{{'fr',Rs1},{'fr',Rs2},{'fr',Rd}}> when 'true' ->
	      %% Line 267
	      apply 'format3f'/4
		  (Rd, Rs1, Opf, Rs2)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'fpop1binary',2}}] )
	    -| ['compiler_generated'] )
	end
'faddd'/1 =
    %% Line 269
    fun (_cor0) ->
	apply 'fpop1binary'/2
	    (66, _cor0)
'fdivd'/1 =
    %% Line 270
    fun (_cor0) ->
	apply 'fpop1binary'/2
	    (78, _cor0)
'fmuld'/1 =
    %% Line 271
    fun (_cor0) ->
	apply 'fpop1binary'/2
	    (74, _cor0)
'fsubd'/1 =
    %% Line 272
    fun (_cor0) ->
	apply 'fpop1binary'/2
	    (70, _cor0)
'fpop1unary'/2 =
    %% Line 274
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Opf,{{'fr',Rs2},{'fr',Rd}}> when 'true' ->
	      %% Line 275
	      apply 'format3f'/4
		  (Rd, 0, Opf, Rs2)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'fpop1unary',2}}] )
	    -| ['compiler_generated'] )
	end
'fitod'/1 =
    %% Line 277
    fun (_cor0) ->
	apply 'fpop1unary'/2
	    (200, _cor0)
'fmovd'/1 =
    %% Line 278
    fun (_cor0) ->
	apply 'fpop1unary'/2
	    (2, _cor0)
'fnegd'/1 =
    %% Line 279
    fun (_cor0) ->
	apply 'fpop1unary'/2
	    (6, _cor0)
'ldf'/1 =
    %% Line 281
    fun (_cor0) ->
	case _cor0 of
	  <{{'r',Rs1},{'simm13',Simm13},{'fr',Rd}}> when 'true' ->
	      %% Line 282
	      apply 'format3b'/5
		  (3, Rd, 32, Rs1, Simm13)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'ldf',1}}] )
	    -| ['compiler_generated'] )
	end
'stf'/1 =
    %% Line 284
    fun (_cor0) ->
	case _cor0 of
	  <{{'fr',Rd},{'r',Rs1},{'simm13',Simm13}}> when 'true' ->
	      %% Line 285
	      apply 'format3b'/5
		  (3, Rd, 36, Rs1, Simm13)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'stf',1}}] )
	    -| ['compiler_generated'] )
	end
'insn_encode'/2 =
    %% Line 384
    fun (_cor1,_cor0) ->
	%% Line 385
	case _cor1 of
	  %% Line 386
	  <'add'> when 'true' ->
	      apply 'add'/1
		  (_cor0)
	  %% Line 387
	  <'addcc'> when 'true' ->
	      apply 'addcc'/1
		  (_cor0)
	  %% Line 388
	  <'and'> when 'true' ->
	      apply 'and'/1
		  (_cor0)
	  %% Line 389
	  <'andcc'> when 'true' ->
	      apply 'andcc'/1
		  (_cor0)
	  %% Line 390
	  <'ba'> when 'true' ->
	      apply 'ba'/1
		  (_cor0)
	  %% Line 391
	  <'bp'> when 'true' ->
	      apply 'bp'/1
		  (_cor0)
	  %% Line 392
	  <'br'> when 'true' ->
	      apply 'br'/1
		  (_cor0)
	  %% Line 393
	  <'call'> when 'true' ->
	      apply 'call'/1
		  (_cor0)
	  %% Line 394
	  <'jmpl'> when 'true' ->
	      apply 'jmpl'/1
		  (_cor0)
	  %% Line 395
	  <'ldsb'> when 'true' ->
	      apply 'ldsb'/1
		  (_cor0)
	  %% Line 396
	  <'ldsh'> when 'true' ->
	      apply 'ldsh'/1
		  (_cor0)
	  %% Line 397
	  <'ldsw'> when 'true' ->
	      apply 'ldsw'/1
		  (_cor0)
	  %% Line 398
	  <'ldub'> when 'true' ->
	      apply 'ldub'/1
		  (_cor0)
	  %% Line 399
	  <'lduh'> when 'true' ->
	      apply 'lduh'/1
		  (_cor0)
	  %% Line 400
	  <'lduw'> when 'true' ->
	      apply 'lduw'/1
		  (_cor0)
	  %% Line 401
	  <'ldx'> when 'true' ->
	      apply 'ldx'/1
		  (_cor0)
	  %% Line 402
	  <'mulx'> when 'true' ->
	      apply 'mulx'/1
		  (_cor0)
	  %% Line 403
	  <'or'> when 'true' ->
	      apply 'or'/1
		  (_cor0)
	  %% Line 404
	  <'orcc'> when 'true' ->
	      apply 'orcc'/1
		  (_cor0)
	  %% Line 405
	  <'rd'> when 'true' ->
	      apply 'rd'/1
		  (_cor0)
	  %% Line 406
	  <'sethi'> when 'true' ->
	      apply 'sethi'/1
		  (_cor0)
	  %% Line 407
	  <'sll'> when 'true' ->
	      apply 'sll'/1
		  (_cor0)
	  %% Line 408
	  <'sllx'> when 'true' ->
	      apply 'sllx'/1
		  (_cor0)
	  %% Line 409
	  <'smul'> when 'true' ->
	      apply 'smul'/1
		  (_cor0)
	  %% Line 410
	  <'sra'> when 'true' ->
	      apply 'sra'/1
		  (_cor0)
	  %% Line 411
	  <'srax'> when 'true' ->
	      apply 'srax'/1
		  (_cor0)
	  %% Line 412
	  <'srl'> when 'true' ->
	      apply 'srl'/1
		  (_cor0)
	  %% Line 413
	  <'srlx'> when 'true' ->
	      apply 'srlx'/1
		  (_cor0)
	  %% Line 414
	  <'stb'> when 'true' ->
	      apply 'stb'/1
		  (_cor0)
	  %% Line 415
	  <'stw'> when 'true' ->
	      apply 'stw'/1
		  (_cor0)
	  %% Line 416
	  <'stx'> when 'true' ->
	      apply 'stx'/1
		  (_cor0)
	  %% Line 417
	  <'sub'> when 'true' ->
	      apply 'sub'/1
		  (_cor0)
	  %% Line 418
	  <'subcc'> when 'true' ->
	      apply 'subcc'/1
		  (_cor0)
	  %% Line 419
	  <'xor'> when 'true' ->
	      apply 'xor'/1
		  (_cor0)
	  %% Line 420
	  <'xorcc'> when 'true' ->
	      apply 'xorcc'/1
		  (_cor0)
	  %% Line 421
	  <'faddd'> when 'true' ->
	      apply 'faddd'/1
		  (_cor0)
	  %% Line 422
	  <'fdivd'> when 'true' ->
	      apply 'fdivd'/1
		  (_cor0)
	  %% Line 423
	  <'fmuld'> when 'true' ->
	      apply 'fmuld'/1
		  (_cor0)
	  %% Line 424
	  <'fsubd'> when 'true' ->
	      apply 'fsubd'/1
		  (_cor0)
	  %% Line 425
	  <'fitod'> when 'true' ->
	      apply 'fitod'/1
		  (_cor0)
	  %% Line 426
	  <'fmovd'> when 'true' ->
	      apply 'fmovd'/1
		  (_cor0)
	  %% Line 427
	  <'fnegd'> when 'true' ->
	      apply 'fnegd'/1
		  (_cor0)
	  %% Line 428
	  <'ldf'> when 'true' ->
	      apply 'ldf'/1
		  (_cor0)
	  %% Line 429
	  <'stf'> when 'true' ->
	      apply 'stf'/1
		  (_cor0)
	  %% Line 430
	  <_cor5> when 'true' ->
	      call 'erlang':'exit'
		  ({'hipe_sparc_encode','insn_encode',_cor1})
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_sparc_encode')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_sparc_encode', _cor0)
end