module 'hipe_node_sets' ['add_colored'/2,
			 'add_spilled'/2,
			 'colored'/1,
			 'module_info'/0,
			 'module_info'/1,
			 'new'/0,
			 'spilled'/1]
    attributes []
'spilled'/1 =
    %% Line 35
    fun (_cor0) ->
	( case _cor0 of
	    ( <( {'node_sets',_rec0,_cor3}
		 -| ['compiler_generated'] )> when 'true' ->
		  _rec0
	      -| ['compiler_generated'] )
	    ( <_cor4> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','node_sets'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'colored'/1 =
    %% Line 36
    fun (_cor0) ->
	( case _cor0 of
	    ( <( {'node_sets',_cor3,_rec1}
		 -| ['compiler_generated'] )> when 'true' ->
		  _rec1
	      -| ['compiler_generated'] )
	    ( <_cor4> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','node_sets'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'set_spilled'/2 =
    %% Line 38
    fun (_cor1,_cor0) ->
	case _cor0 of
	  <{'node_sets',_cor6,_cor7}> when 'true' ->
	      call 'erlang':'setelement'
		  (2, _cor0, _cor1)
	  ( <_cor8> when 'true' ->
		( call ( 'erlang'
			 -| ['compiler_generated'] ):( 'error'
						       -| ['compiler_generated'] )
		      (( {'badrecord','node_sets'}
			 -| ['compiler_generated'] ))
		  -| ['compiler_generated'] )
	    -| ['compiler_generated'] )
	end
'set_colored'/2 =
    %% Line 39
    fun (_cor1,_cor0) ->
	case _cor0 of
	  <{'node_sets',_cor6,_cor7}> when 'true' ->
	      call 'erlang':'setelement'
		  (3, _cor0, _cor1)
	  ( <_cor8> when 'true' ->
		( call ( 'erlang'
			 -| ['compiler_generated'] ):( 'error'
						       -| ['compiler_generated'] )
		      (( {'badrecord','node_sets'}
			 -| ['compiler_generated'] ))
		  -| ['compiler_generated'] )
	    -| ['compiler_generated'] )
	end
'new'/0 =
    %% Line 41
    fun () ->
	%% Line 42
	{'node_sets',[],[]}
'add_spilled'/2 =
    %% Line 44
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 45
	    apply 'spilled'/1
		(_cor0)
	in  %% Line 45
	    apply 'set_spilled'/2
		([_cor1|_cor2], _cor0)
'add_colored'/2 =
    %% Line 47
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 48
	    apply 'colored'/1
		(_cor0)
	in  %% Line 48
	    apply 'set_colored'/2
		([_cor1|_cor2], _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_node_sets')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_node_sets', _cor0)
end