module 'hipe_arm_defuse' ['insn_def_all'/1,
			  'insn_def_gpr'/1,
			  'insn_use_all'/1,
			  'insn_use_gpr'/1,
			  'module_info'/0,
			  'module_info'/1]
    attributes [%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','arm_mfa'},[{'typed_record_field',{'record_field',38,{'atom',38,'m'}},{'type',38,'union',[{'atom',38,'undefined'}|[{'type',38,'atom',[]}]]}}|[{'typed_record_field',{'record_field',38,{'atom',38,'f'}},{'type',38,'union',[{'atom',38,'undefined'}|[{'type',38,'atom',[]}]]}}|[{'typed_record_field',{'record_field',38,{'atom',38,'a'}},{'type',38,'union',[{'atom',38,'undefined'}|[{'type',38,'arity',[]}]]}}]]],[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{{'record','arm_prim'},[{'record_field',39,{'atom',39,'prim'}}],[]}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{{'record','arm_sdesc'},[{'record_field',40,{'atom',40,'exnlab'}}|[{'record_field',40,{'atom',40,'fsize'}}|[{'typed_record_field',{'record_field',40,{'atom',40,'arity'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'arity',[]}]]}}|[{'record_field',40,{'atom',40,'live'}}]]]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','arm_temp'},[{'record_field',41,{'atom',41,'reg'}}|[{'record_field',41,{'atom',41,'type'}}|[{'record_field',41,{'atom',41,'allocatable'}}]]],[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{{'record','am2'},[{'record_field',87,{'atom',87,'src'}}|[{'record_field',87,{'atom',87,'sign'}}|[{'record_field',87,{'atom',87,'offset'}}]]],[]}],
		%% Line 88
		'type' =
		    %% Line 88
		    [{{'record','am3'},[{'record_field',88,{'atom',88,'src'}}|[{'record_field',88,{'atom',88,'sign'}}|[{'record_field',88,{'atom',88,'offset'}}]]],[]}],
		%% Line 92
		'type' =
		    %% Line 92
		    [{{'record','alu'},[{'record_field',92,{'atom',92,'aluop'}}|[{'record_field',92,{'atom',92,'s'}}|[{'record_field',92,{'atom',92,'dst'}}|[{'record_field',92,{'atom',92,'src'}}|[{'record_field',92,{'atom',92,'am1'}}]]]]],[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','b_fun'},[{'record_field',93,{'atom',93,'fun'}}|[{'record_field',93,{'atom',93,'linkage'}}]],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{{'record','b_label'},[{'record_field',94,{'atom',94,'cond'}}|[{'record_field',94,{'atom',94,'label'}}]],[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{{'record','bl'},[{'record_field',95,{'atom',95,'fun'}}|[{'record_field',95,{'atom',95,'sdesc'}}|[{'record_field',95,{'atom',95,'linkage'}}]]],[]}],
		%% Line 96
		'type' =
		    %% Line 96
		    [{{'record','blx'},[{'record_field',96,{'atom',96,'src'}}|[{'record_field',96,{'atom',96,'sdesc'}}]],[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','cmp'},[{'record_field',97,{'atom',97,'cmpop'}}|[{'record_field',97,{'atom',97,'src'}}|[{'record_field',97,{'atom',97,'am1'}}]]],[]}],
		%% Line 98
		'type' =
		    %% Line 98
		    [{{'record','comment'},[{'record_field',98,{'atom',98,'term'}}],[]}],
		%% Line 99
		'type' =
		    %% Line 99
		    [{{'record','label'},[{'record_field',99,{'atom',99,'label'}}],[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{{'record','load'},[{'record_field',100,{'atom',100,'ldop'}}|[{'record_field',100,{'atom',100,'dst'}}|[{'record_field',100,{'atom',100,'am2'}}]]],[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{{'record','ldrsb'},[{'record_field',101,{'atom',101,'dst'}}|[{'record_field',101,{'atom',101,'am3'}}]],[]}],
		%% Line 102
		'type' =
		    %% Line 102
		    [{{'record','move'},[{'record_field',102,{'atom',102,'movop'}}|[{'record_field',102,{'atom',102,'s'}}|[{'record_field',102,{'atom',102,'dst'}}|[{'record_field',102,{'atom',102,'am1'}}]]]],[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','pseudo_bc'},[{'record_field',103,{'atom',103,'cond'}}|[{'record_field',103,{'atom',103,'true_label'}}|[{'record_field',103,{'atom',103,'false_label'}}|[{'record_field',103,{'atom',103,'pred'}}]]]],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{{'record','pseudo_blr'},[],[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{{'record','pseudo_bx'},[{'record_field',105,{'atom',105,'src'}}],[]}],
		%% Line 106
		'type' =
		    %% Line 106
		    [{{'record','pseudo_call'},[{'record_field',106,{'atom',106,'funv'}}|[{'record_field',106,{'atom',106,'sdesc'}}|[{'record_field',106,{'atom',106,'contlab'}}|[{'record_field',106,{'atom',106,'linkage'}}]]]],[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','pseudo_call_prepare'},[{'record_field',107,{'atom',107,'nrstkargs'}}],[]}],
		%% Line 108
		'type' =
		    %% Line 108
		    [{{'record','pseudo_li'},[{'record_field',108,{'atom',108,'dst'}}|[{'record_field',108,{'atom',108,'imm'}}|[{'record_field',108,{'atom',108,'label'}}]]],[]}],
		%% Line 109
		'type' =
		    %% Line 109
		    [{{'record','pseudo_move'},[{'record_field',109,{'atom',109,'dst'}}|[{'record_field',109,{'atom',109,'src'}}]],[]}],
		%% Line 110
		'type' =
		    %% Line 110
		    [{{'record','pseudo_switch'},[{'record_field',110,{'atom',110,'jtab'}}|[{'record_field',110,{'atom',110,'index'}}|[{'record_field',110,{'atom',110,'labels'}}]]],[]}],
		%% Line 111
		'type' =
		    %% Line 111
		    [{{'record','pseudo_tailcall'},[{'record_field',111,{'atom',111,'funv'}}|[{'record_field',111,{'atom',111,'arity'}}|[{'record_field',111,{'atom',111,'stkargs'}}|[{'record_field',111,{'atom',111,'linkage'}}]]]],[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{{'record','pseudo_tailcall_prepare'},[],[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{{'record','smull'},[{'record_field',113,{'atom',113,'dstlo'}}|[{'record_field',113,{'atom',113,'dsthi'}}|[{'record_field',113,{'atom',113,'src1'}}|[{'record_field',113,{'atom',113,'src2'}}]]]],[]}],
		%% Line 114
		'type' =
		    %% Line 114
		    [{{'record','store'},[{'record_field',114,{'atom',114,'stop'}}|[{'record_field',114,{'atom',114,'src'}}|[{'record_field',114,{'atom',114,'am2'}}]]],[]}],
		%% Line 22
		'type' =
		    %% Line 22
		    [{'ct_alignment',{'type',22,'union',[{'integer',22,4}|[{'integer',22,8}]]},[]}],
		%% Line 24
		'type' =
		    %% Line 24
		    [{'hipe_constlbl',{'type',24,'non_neg_integer',[]},[]}],
		%% Line 25
		'type' =
		    %% Line 25
		    [{'hipe_consttab',{'type',25,'tuple',[{'remote_type',25,[{'atom',25,'dict'}|[{'atom',25,'dict'}|[[]]]]}|[{'type',25,'list',[{'type',25,'hipe_constlbl',[]}]}|[{'type',25,'hipe_constlbl',[]}]]]},[]}],
		%% Line 120
		'type' =
		    %% Line 120
		    [{{'record','defun'},[{'typed_record_field',{'record_field',120,{'atom',120,'mfa'}},{'type',120,'union',[{'atom',120,'undefined'}|[{'type',120,'mfa',[]}]]}}|[{'record_field',120,{'atom',120,'formals'}}|[{'record_field',120,{'atom',120,'code'}}|[{'typed_record_field',{'record_field',121,{'atom',121,'data'}},{'type',121,'union',[{'atom',121,'undefined'}|[{'type',121,'hipe_consttab',[]}]]}}|[{'typed_record_field',{'record_field',122,{'atom',122,'isclosure'}},{'type',122,'union',[{'atom',122,'undefined'}|[{'type',122,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',123,{'atom',123,'isleaf'}},{'type',123,'union',[{'atom',123,'undefined'}|[{'type',123,'boolean',[]}]]}}|[{'record_field',124,{'atom',124,'var_range'}}|[{'record_field',124,{'atom',124,'label_range'}}]]]]]]]],[]}]]
'insn_def_all'/1 =
    %% Line 30
    fun (_cor0) ->
	%% Line 31
	apply 'insn_def_gpr'/1
	    (_cor0)
'insn_use_all'/1 =
    %% Line 33
    fun (_cor0) ->
	%% Line 34
	apply 'insn_use_gpr'/1
	    (_cor0)
'insn_def_gpr'/1 =
    %% Line 39
    fun (_cor0) ->
	%% Line 40
	case _cor0 of
	  %% Line 41
	  <{'alu',_cor3,_cor4,Dst,_cor5,_cor6}> when 'true' ->
	      [Dst|[]]
	  %% Line 42
	  <{'load',_cor7,Dst,_cor8}> when 'true' ->
	      [Dst|[]]
	  %% Line 43
	  <{'ldrsb',Dst,_cor9}> when 'true' ->
	      [Dst|[]]
	  %% Line 44
	  <{'move',_cor10,_cor11,Dst,_cor12}> when 'true' ->
	      [Dst|[]]
	  %% Line 45
	  <{'pseudo_call',_cor13,_cor14,_cor15,_cor16}> when 'true' ->
	      apply 'call_clobbered_gpr'/0
		  ()
	  %% Line 46
	  <{'pseudo_li',Dst,_cor17,_cor18}> when 'true' ->
	      [Dst|[]]
	  %% Line 47
	  <{'pseudo_move',Dst,_cor19}> when 'true' ->
	      [Dst|[]]
	  %% Line 48
	  <{'pseudo_tailcall_prepare'}> when 'true' ->
	      apply 'tailcall_clobbered_gpr'/0
		  ()
	  %% Line 49
	  <{'smull',DstLo,DstHi,Src1,_cor20}> when 'true' ->
	      %% Line 53
	      [DstLo|[DstHi|[Src1|[]]]]
	  %% Line 54
	  <_cor21> when 'true' ->
	      []
	end
'call_clobbered_gpr'/0 =
    %% Line 57
    fun () ->
	%% Line 58
	( letrec
	      'lc$^0'/1 =
		  fun (_cor5) ->
		      case _cor5 of
			<[%% Line 59
			  {R,T}|_cor1]> when 'true' ->
			    let <_cor6> =
				call 'hipe_arm':'mk_temp'
				    (R, T)
			    in  let <_cor7> =
				    %% Line 59
				    apply 'lc$^0'/1
					(_cor1)
				in  ( [_cor6|_cor7]
				      -| ['compiler_generated'] )
			( <[_cor0|_cor1]> when 'true' ->
			      %% Line 59
			      apply 'lc$^0'/1
				  (_cor1)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor5> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor5})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor3> =
		  %% Line 59
		  call 'hipe_arm_registers':'call_clobbered'
		      ()
	      in  let <_cor2> =
		      %% Line 59
		      apply 'all_fp_pseudos'/0
			  ()
		  in  let <_cor4> =
			  %% Line 59
			  call 'erlang':'++'
			      (_cor3, _cor2)
		      in  apply 'lc$^0'/1
			      (_cor4)
	  -| ['list_comprehension'] )
'all_fp_pseudos'/0 =
    %% Line 61
    fun () ->
	[]
'tailcall_clobbered_gpr'/0 =
    %% Line 63
    fun () ->
	%% Line 64
	( letrec
	      'lc$^0'/1 =
		  fun (_cor5) ->
		      case _cor5 of
			<[%% Line 65
			  {R,T}|_cor1]> when 'true' ->
			    let <_cor6> =
				call 'hipe_arm':'mk_temp'
				    (R, T)
			    in  let <_cor7> =
				    %% Line 65
				    apply 'lc$^0'/1
					(_cor1)
				in  ( [_cor6|_cor7]
				      -| ['compiler_generated'] )
			( <[_cor0|_cor1]> when 'true' ->
			      %% Line 65
			      apply 'lc$^0'/1
				  (_cor1)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor5> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor5})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor3> =
		  %% Line 65
		  call 'hipe_arm_registers':'tailcall_clobbered'
		      ()
	      in  let <_cor2> =
		      %% Line 65
		      apply 'all_fp_pseudos'/0
			  ()
		  in  let <_cor4> =
			  %% Line 65
			  call 'erlang':'++'
			      (_cor3, _cor2)
		      in  apply 'lc$^0'/1
			      (_cor4)
	  -| ['list_comprehension'] )
'insn_use_gpr'/1 =
    %% Line 67
    fun (_cor0) ->
	%% Line 68
	case _cor0 of
	  %% Line 69
	  <{'alu',_cor12,_cor13,_cor14,Src,Am1}> when 'true' ->
	      apply 'am1_use'/2
		  (Am1, [Src|[]])
	  %% Line 70
	  <{'blx',Src,_cor15}> when 'true' ->
	      [Src|[]]
	  %% Line 71
	  <{'cmp',_cor16,Src,Am1}> when 'true' ->
	      apply 'am1_use'/2
		  (Am1, [Src|[]])
	  %% Line 72
	  <{'load',_cor17,_cor18,Am2}> when 'true' ->
	      apply 'am2_use'/2
		  (Am2, [])
	  %% Line 73
	  <{'ldrsb',_cor19,Am3}> when 'true' ->
	      apply 'am3_use'/2
		  (Am3, [])
	  %% Line 74
	  <{'move',_cor20,_cor21,_cor22,Am1}> when 'true' ->
	      apply 'am1_use'/2
		  (Am1, [])
	  %% Line 75
	  <{'pseudo_blr'}> when 'true' ->
	      let <_cor1> =
		  %% Line 76
		  call 'hipe_arm_registers':'lr'
		      ()
	      in  let <LR> =
		      %% Line 76
		      call 'hipe_arm':'mk_temp'
			  (_cor1, 'untagged')
		  in  let <_cor3> =
			  %% Line 77
			  call 'hipe_arm_registers':'return_value'
			      ()
		      in  let <RV> =
			      %% Line 77
			      call 'hipe_arm':'mk_temp'
				  (_cor3, 'tagged')
			  in  %% Line 78
			      [RV|[LR|[]]]
	  %% Line 79
	  <{'pseudo_bx',Src}> when 'true' ->
	      do  %% Line 80
		  call 'io':'format'
		      ([126|[119|[58|[32|[119|[104|[111|[97|[32|[116|[104|[101|[114|[101|[33|[32|[105|[110|[115|[110|[95|[117|[115|[101|[32|[111|[102|[32|[126|[119|[32|[111|[99|[99|[117|[114|[114|[101|[100|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['hipe_arm_defuse'|[_cor0|[]]])
		  %% Line 81
		  [Src|[]]
	  %% Line 82
	  <{'pseudo_call',FunV,{'arm_sdesc',_cor23,_cor24,Arity,_cor25},_cor26,_cor27}> when 'true' ->
	      let <_cor5> =
		  %% Line 83
		  apply 'arity_use_gpr'/1
		      (Arity)
	      in  %% Line 83
		  apply 'funv_use'/2
		      (FunV, _cor5)
	  %% Line 84
	  <{'pseudo_move',_cor28,Src}> when 'true' ->
	      [Src|[]]
	  %% Line 85
	  <{'pseudo_switch',JTabR,IndexR,_cor29}> when 'true' ->
	      apply 'addtemp'/2
		  (JTabR, [IndexR|[]])
	  %% Line 86
	  <{'pseudo_tailcall',FunV,Arity,StkArgs,_cor30}> when 'true' ->
	      let <_cor8> =
		  %% Line 87
		  apply 'tailcall_clobbered_gpr'/0
		      ()
	      in  let <_cor6> =
		      %% Line 87
		      apply 'arity_use_gpr'/1
			  (Arity)
		  in  let <_cor7> =
			  %% Line 87
			  apply 'funv_use'/2
			      (FunV, _cor6)
		      in  let <_cor9> =
			      %% Line 87
			      apply 'addtemps'/2
				  (_cor8, _cor7)
			  in  %% Line 87
			      apply 'addargs'/2
				  (StkArgs, _cor9)
	  %% Line 88
	  <{'smull',_cor31,_cor32,Src1,Src2}> when 'true' ->
	      apply 'addtemp'/2
		  (Src1, [Src2|[]])
	  %% Line 89
	  <{'store',_cor33,Src,Am2}> when 'true' ->
	      apply 'am2_use'/2
		  (Am2, [Src|[]])
	  %% Line 90
	  <_cor34> when 'true' ->
	      []
	end
'addargs'/2 =
    %% Line 93
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Arg|Args],Set> when 'true' ->
	      let <_cor2> =
		  %% Line 94
		  apply 'addarg'/2
		      (Arg, Set)
	      in  %% Line 94
		  apply 'addargs'/2
		      (Args, _cor2)
	  %% Line 95
	  <[],Set> when 'true' ->
	      %% Line 96
	      Set
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'addargs',2}}] )
	    -| ['compiler_generated'] )
	end
'addarg'/2 =
    %% Line 98
    fun (_cor1,_cor0) ->
	%% Line 99
	case _cor1 of
	  %% Line 100
	  <{'arm_temp',_cor5,_cor6,_cor7}> when 'true' ->
	      apply 'addtemp'/2
		  (_cor1, _cor0)
	  %% Line 101
	  <_cor8> when 'true' ->
	      _cor0
	end
'arity_use_gpr'/1 =
    %% Line 104
    fun (_cor0) ->
	%% Line 105
	( letrec
	      'lc$^0'/1 =
		  fun (_cor4) ->
		      case _cor4 of
			<[%% Line 106
			  R|_cor2]> when 'true' ->
			    let <_cor5> =
				call 'hipe_arm':'mk_temp'
				    (R, 'tagged')
			    in  let <_cor6> =
				    %% Line 106
				    apply 'lc$^0'/1
					(_cor2)
				in  ( [_cor5|_cor6]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor4> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor4})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor3> =
		  %% Line 106
		  call 'hipe_arm_registers':'args'
		      (_cor0)
	      in  apply 'lc$^0'/1
		      (_cor3)
	  -| ['list_comprehension'] )
'funv_use'/2 =
    %% Line 108
    fun (_cor1,_cor0) ->
	%% Line 109
	case _cor1 of
	  %% Line 110
	  <{'arm_temp',_cor5,_cor6,_cor7}> when 'true' ->
	      apply 'addtemp'/2
		  (_cor1, _cor0)
	  %% Line 111
	  <_cor8> when 'true' ->
	      _cor0
	end
'am1_use'/2 =
    %% Line 114
    fun (_cor1,_cor0) ->
	%% Line 115
	case _cor1 of
	  %% Line 116
	  <{'arm_temp',_cor7,_cor8,_cor9}> when 'true' ->
	      apply 'addtemp'/2
		  (_cor1, _cor0)
	  %% Line 117
	  <{Src,'rrx'}> when 'true' ->
	      apply 'addtemp'/2
		  (Src, _cor0)
	  %% Line 118
	  <{Src,_cor10,ShiftArg}> when 'true' ->
	      let <Set1> =
		  %% Line 119
		  apply 'addtemp'/2
		      (Src, _cor0)
	      in  %% Line 120
		  case ShiftArg of
		    %% Line 121
		    <{'arm_temp',_cor11,_cor12,_cor13}> when 'true' ->
			apply 'addtemp'/2
			    (ShiftArg, Set1)
		    %% Line 122
		    <_cor14> when 'true' ->
			Set1
		  end
	  %% Line 124
	  <_cor15> when 'true' ->
	      _cor0
	end
'am2_use'/2 =
    %% Line 127
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'am2',Src,_cor6,Am2Offset},Set> when 'true' ->
	      let <Set1> =
		  %% Line 128
		  apply 'addtemp'/2
		      (Src, Set)
	      in  %% Line 129
		  case Am2Offset of
		    %% Line 130
		    <{'arm_temp',_cor7,_cor8,_cor9}> when 'true' ->
			apply 'addtemp'/2
			    (Am2Offset, Set1)
		    %% Line 131
		    <{Src2,_cor10}> when 'true' ->
			apply 'addtemp'/2
			    (Src2, Set1)
		    %% Line 132
		    <{Src2,_cor11,_cor12}> when 'true' ->
			apply 'addtemp'/2
			    (Src2, Set1)
		    %% Line 133
		    <_cor13> when 'true' ->
			Set1
		  end
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'am2_use',2}}] )
	    -| ['compiler_generated'] )
	end
'am3_use'/2 =
    %% Line 136
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'am3',Src,_cor6,Am3Offset},Set> when 'true' ->
	      let <Set1> =
		  %% Line 137
		  apply 'addtemp'/2
		      (Src, Set)
	      in  %% Line 138
		  case Am3Offset of
		    %% Line 139
		    <{'arm_temp',_cor7,_cor8,_cor9}> when 'true' ->
			apply 'addtemp'/2
			    (Am3Offset, Set1)
		    %% Line 140
		    <_cor10> when 'true' ->
			Set1
		  end
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'am3_use',2}}] )
	    -| ['compiler_generated'] )
	end
'addtemps'/2 =
    %% Line 148
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Arg|Args],Set> when 'true' ->
	      let <_cor2> =
		  %% Line 149
		  apply 'addtemp'/2
		      (Arg, Set)
	      in  %% Line 149
		  apply 'addtemps'/2
		      (Args, _cor2)
	  %% Line 150
	  <[],Set> when 'true' ->
	      %% Line 151
	      Set
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'addtemps',2}}] )
	    -| ['compiler_generated'] )
	end
'addtemp'/2 =
    %% Line 153
    fun (_cor1,_cor0) ->
	%% Line 154
	case call 'lists':'member'
		 (_cor1, _cor0) of
	  %% Line 155
	  <'false'> when 'true' ->
	      [_cor1|_cor0]
	  %% Line 156
	  <_cor5> when 'true' ->
	      _cor0
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_arm_defuse')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_arm_defuse', _cor0)
end