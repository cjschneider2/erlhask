module 'hipe_tagscheme' ['bignum_sizeneed'/1,
			 'bignum_sizeneed_code'/2,
			 'compare_matchstate'/4,
			 'convert_matchstate'/1,
			 'create_heap_binary'/3,
			 'create_matchstate'/6,
			 'create_refc_binary'/3,
			 'create_refc_binary'/4,
			 'element'/6,
			 'extract_binary_bytes'/2,
			 'extract_matchbuffer'/2,
			 'fixnum_addsub'/5,
			 'fixnum_andorxor'/4,
			 'fixnum_bsl'/3,
			 'fixnum_bsr'/3,
			 'fixnum_ge'/5,
			 'fixnum_gt'/5,
			 'fixnum_le'/5,
			 'fixnum_lt'/5,
			 'fixnum_mul'/4,
			 'fixnum_not'/2,
			 'fixnum_val'/1,
			 'get_field_from_pointer'/3,
			 'get_field_from_term'/3,
			 'get_header'/2,
			 'get_one_word_pos_bignum'/3,
			 'if_fun_get_arity_and_address'/5,
			 'is_fixnum'/1,
			 'mk_arityval'/1,
			 'mk_fixnum'/1,
			 'mk_fun_header'/0,
			 'mk_nil'/0,
			 'mk_non_value'/0,
			 'mk_sub_binary'/6,
			 'mk_sub_binary'/7,
			 'module_info'/0,
			 'module_info'/1,
			 'realtag_fixnum'/2,
			 'realuntag_fixnum'/2,
			 'set_field_from_pointer'/3,
			 'set_field_from_term'/3,
			 'tag_cons'/2,
			 'tag_fixnum'/2,
			 'tag_fun'/2,
			 'tag_tuple'/2,
			 'test_any_pid'/4,
			 'test_any_port'/4,
			 'test_atom'/4,
			 'test_bignum'/4,
			 'test_binary'/4,
			 'test_bitstr'/4,
			 'test_cons'/4,
			 'test_fixnum'/4,
			 'test_fixnums'/4,
			 'test_flonum'/4,
			 'test_fun'/4,
			 'test_fun2'/5,
			 'test_heap_binary'/3,
			 'test_integer'/4,
			 'test_is_boxed'/4,
			 'test_list'/4,
			 'test_map'/4,
			 'test_matchstate'/4,
			 'test_nil'/4,
			 'test_number'/4,
			 'test_pos_bignum'/4,
			 'test_ref'/4,
			 'test_subbinary'/3,
			 'test_tuple'/4,
			 'test_tuple_N'/5,
			 'test_two_fixnums'/3,
			 'unsafe_car'/2,
			 'unsafe_cdr'/2,
			 'unsafe_closure_element'/3,
			 'unsafe_constant_element'/3,
			 'unsafe_fixnum_add'/3,
			 'unsafe_fixnum_sub'/3,
			 'unsafe_load_float'/3,
			 'unsafe_mk_big'/3,
			 'unsafe_tag_float'/2,
			 'unsafe_untag_float'/2,
			 'unsafe_update_element'/3,
			 'untag_fixnum'/2]
    attributes [%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','alu'},[{'record_field',28,{'atom',28,'dst'}}|[{'record_field',28,{'atom',28,'src1'}}|[{'record_field',28,{'atom',28,'op'}}|[{'record_field',28,{'atom',28,'src2'}}]]]],[]}],
		%% Line 29
		'type' =
		    %% Line 29
		    [{{'record','alub'},[{'record_field',29,{'atom',29,'dst'}}|[{'record_field',29,{'atom',29,'src1'}}|[{'record_field',29,{'atom',29,'op'}}|[{'record_field',29,{'atom',29,'src2'}}|[{'record_field',29,{'atom',29,'cond'}}|[{'record_field',29,{'atom',29,'true_label'}}|[{'record_field',29,{'atom',29,'false_label'}}|[{'record_field',29,{'atom',29,'p'}}]]]]]]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','branch'},[{'record_field',30,{'atom',30,'src1'}}|[{'record_field',30,{'atom',30,'src2'}}|[{'record_field',30,{'atom',30,'cond'}}|[{'record_field',30,{'atom',30,'true_label'}}|[{'record_field',30,{'atom',30,'false_label'}}|[{'record_field',30,{'atom',30,'p'}}]]]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{{'record','call'},[{'record_field',31,{'atom',31,'dstlist'}}|[{'record_field',31,{'atom',31,'fun'}}|[{'record_field',31,{'atom',31,'arglist'}}|[{'record_field',31,{'atom',31,'type'}}|[{'record_field',31,{'atom',31,'continuation'}}|[{'record_field',32,{'atom',32,'failcontinuation'}}|[{'record_field',32,{'atom',32,'normalcontinuation'},{'nil',32}}]]]]]]],[]}],
		%% Line 33
		'type' =
		    %% Line 33
		    [{{'record','comment'},[{'record_field',33,{'atom',33,'text'}}],[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','enter'},[{'record_field',34,{'atom',34,'fun'}}|[{'record_field',34,{'atom',34,'arglist'}}|[{'record_field',34,{'atom',34,'type'}}]]],[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','fconv'},[{'record_field',35,{'atom',35,'dst'}}|[{'record_field',35,{'atom',35,'src'}}]],[]}],
		%% Line 36
		'type' =
		    %% Line 36
		    [{{'record','fixnumop'},[{'record_field',36,{'atom',36,'dst'}}|[{'record_field',36,{'atom',36,'src'}}|[{'record_field',36,{'atom',36,'type'}}]]],[]}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{{'record','fload'},[{'record_field',37,{'atom',37,'dst'}}|[{'record_field',37,{'atom',37,'src'}}|[{'record_field',37,{'atom',37,'offset'}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','fmove'},[{'record_field',38,{'atom',38,'dst'}}|[{'record_field',38,{'atom',38,'src'}}]],[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{{'record','fp'},[{'record_field',39,{'atom',39,'dst'}}|[{'record_field',39,{'atom',39,'src1'}}|[{'record_field',39,{'atom',39,'op'}}|[{'record_field',39,{'atom',39,'src2'}}]]]],[]}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{{'record','fp_unop'},[{'record_field',40,{'atom',40,'dst'}}|[{'record_field',40,{'atom',40,'src'}}|[{'record_field',40,{'atom',40,'op'}}]]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','fstore'},[{'record_field',41,{'atom',41,'base'}}|[{'record_field',41,{'atom',41,'offset'}}|[{'record_field',41,{'atom',41,'src'}}]]],[]}],
		%% Line 42
		'type' =
		    %% Line 42
		    [{{'record','gctest'},[{'record_field',42,{'atom',42,'words'}}],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','goto'},[{'record_field',43,{'atom',43,'label'}}],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','goto_index'},[{'record_field',44,{'atom',44,'block'}}|[{'record_field',44,{'atom',44,'index'}}|[{'record_field',44,{'atom',44,'labels'}}]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','label'},[{'record_field',45,{'atom',45,'name'}}],[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{{'record','load'},[{'record_field',46,{'atom',46,'dst'}}|[{'record_field',46,{'atom',46,'src'}}|[{'record_field',46,{'atom',46,'offset'}}|[{'record_field',46,{'atom',46,'size'}}|[{'record_field',46,{'atom',46,'sign'}}]]]]],[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{{'record','load_address'},[{'record_field',47,{'atom',47,'dst'}}|[{'record_field',47,{'atom',47,'addr'}}|[{'record_field',47,{'atom',47,'type'}}]]],[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','load_atom'},[{'record_field',48,{'atom',48,'dst'}}|[{'record_field',48,{'atom',48,'atom'}}]],[]}],
		%% Line 49
		'type' =
		    %% Line 49
		    [{{'record','load_word_index'},[{'record_field',49,{'atom',49,'dst'}}|[{'record_field',49,{'atom',49,'block'}}|[{'record_field',49,{'atom',49,'index'}}]]],[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','move'},[{'record_field',50,{'atom',50,'dst'}}|[{'record_field',50,{'atom',50,'src'}}]],[]}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{{'record','multimove'},[{'record_field',51,{'atom',51,'dstlist'}}|[{'record_field',51,{'atom',51,'srclist'}}]],[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{{'record','phi'},[{'record_field',52,{'atom',52,'dst'}}|[{'record_field',52,{'atom',52,'id'}}|[{'record_field',52,{'atom',52,'arglist'}}]]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{{'record','return'},[{'record_field',53,{'atom',53,'varlist'}}],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{{'record','store'},[{'record_field',54,{'atom',54,'base'}}|[{'record_field',54,{'atom',54,'offset'}}|[{'record_field',54,{'atom',54,'src'}}|[{'record_field',54,{'atom',54,'size'}}]]]],[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{{'record','switch'},[{'record_field',55,{'atom',55,'src'}}|[{'record_field',55,{'atom',55,'labels'}}|[{'record_field',55,{'atom',55,'sorted_by'},{'nil',55}}]]],[]}],
		%% Line 141
		'spec' =
		    %% Line 141
		    [{{'is_fixnum',1},[{'type',141,'fun',[{'type',141,'product',[{'type',141,'integer',[]}]}|[{'type',141,'boolean',[]}]]}]}],
		%% Line 973
		'spec' =
		    %% Line 973
		    [{{'bignum_sizeneed',1},[{'type',973,'fun',[{'type',973,'product',[{'type',973,'non_neg_integer',[]}]}|[{'type',973,'non_neg_integer',[]}]]}]}]]
'mk_arityval'/1 =
    %% Line 124
    fun (_cor0) ->
	let <_cor2> =
	    call 'erlang':'bsl'
		(_cor0, 6)
	in  call 'erlang':'+'
		(_cor2, 0)
'mk_var_header'/3 =
    %% Line 129
    fun (_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 130
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_cor4> =
		%% Line 131
		call 'hipe_rtl':'mk_imm'
		    (6)
	    in  let <_cor5> =
		    %% Line 131
		    call 'hipe_rtl':'mk_alu'
			(Tmp, _cor1, 'sll', _cor4)
		in  let <_cor6> =
			%% Line 132
			call 'hipe_rtl':'mk_imm'
			    (_cor0)
		    in  let <_cor7> =
			    %% Line 132
			    call 'hipe_rtl':'mk_alu'
				(_cor2, Tmp, 'add', _cor6)
			in  %% Line 131
			    [_cor5|%% Line 132
				   [_cor7|[]]]
'mk_fixnum'/1 =
    %% Line 134
    fun (_cor0) ->
	let <_cor3> =
	    call 'erlang':'bsl'
		(_cor0, 4)
	in  call 'erlang':'+'
		(_cor3, 15)
'mk_nil'/0 =
    %% Line 137
    fun () ->
	-5
'mk_non_value'/0 =
    %% Line 139
    fun () ->
	0
'is_fixnum'/1 =
    %% Line 142
    fun (_cor0) ->
	case _cor0 of
	  <N>
	      when call 'erlang':'is_integer'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 143
		  call 'hipe_rtl_arch':'word_size'
		      ()
	      in  let <_cor2> =
		      %% Line 143
		      call 'erlang':'bsl'
			  (_cor1, 3)
		  in  let <Bits> =
			  %% Line 143
			  call 'erlang':'-'
			      (_cor2, 4)
		      in  let <_cor8> =
			      %% Line 144
			      call 'erlang':'-'
				  (Bits, 1)
			  in  let <_cor9> =
				  %% Line 144
				  call 'erlang':'bsl'
				      (1, _cor8)
			      in  let <_cor10> =
				      %% Line 144
				      call 'erlang':'-'
					  (_cor9, 1)
				  in  let <_cor11> =
					  %% Line 144
					  call 'erlang':'=<'
					      (_cor0, _cor10)
				      in  let <_cor4> =
					      %% Line 144
					      call 'erlang':'-'
						  (Bits, 1)
					  in  let <_cor5> =
						  %% Line 144
						  call 'erlang':'bsl'
						      (1, _cor4)
					      in  let <_cor6> =
						      %% Line 144
						      call 'erlang':'-'
							  (_cor5)
						  in  let <_cor7> =
							  %% Line 144
							  call 'erlang':'>='
							      (_cor0, _cor6)
						      in  %% Line 144
							  call 'erlang':'and'
							      (_cor11, _cor7)
	  ( <_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'is_fixnum',1}}] )
	    -| ['compiler_generated'] )
	end
'tag_tuple'/2 =
    %% Line 160
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    call 'hipe_rtl':'mk_imm'
		(2)
	in  call 'hipe_rtl':'mk_alu'
		(_cor1, _cor0, 'add', _cor2)
'tag_cons'/2 =
    %% Line 162
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 163
	    call 'hipe_rtl':'mk_imm'
		(1)
	in  %% Line 163
	    call 'hipe_rtl':'mk_alu'
		(_cor1, _cor0, 'add', _cor2)
'test_nil'/4 =
    %% Line 169
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor11> =
	    %% Line 170
	    call 'hipe_rtl':'mk_imm'
		(-5)
	in  %% Line 170
	    call 'hipe_rtl':'mk_branch'
		(_cor3, 'eq', _cor11, _cor2, _cor1, _cor0)
'test_cons'/4 =
    %% Line 172
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 173
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <Mask> =
		%% Line 174
		call 'hipe_rtl':'mk_imm'
		    (2)
	    in  %% Line 175
		call 'hipe_rtl':'mk_alub'
		    (Tmp, _cor3, 'and', Mask, 'eq', _cor2, _cor1, _cor0)
'test_is_boxed'/4 =
    %% Line 177
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 178
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <Mask> =
		%% Line 179
		call 'hipe_rtl':'mk_imm'
		    (1)
	    in  %% Line 180
		call 'hipe_rtl':'mk_alub'
		    (Tmp, _cor3, 'and', Mask, 'eq', _cor2, _cor1, _cor0)
'get_header'/2 =
    %% Line 182
    fun (_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 183
	    call 'hipe_rtl':'mk_imm'
		(-2)
	in  %% Line 183
	    call 'hipe_rtl':'mk_load'
		(_cor1, _cor0, _cor3)
'mask_and_compare'/6 =
    %% Line 185
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 186
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_cor7> =
		%% Line 187
		call 'hipe_rtl':'mk_imm'
		    (_cor4)
	    in  let <_cor8> =
		    %% Line 187
		    call 'hipe_rtl':'mk_alu'
			(Tmp, _cor5, 'and', _cor7)
		in  let <_cor9> =
			%% Line 188
			call 'hipe_rtl':'mk_imm'
			    (_cor3)
		    in  let <_cor10> =
			    %% Line 188
			    call 'hipe_rtl':'mk_branch'
				(Tmp, 'eq', _cor9, _cor2, _cor1, _cor0)
			in  %% Line 187
			    [_cor8|%% Line 188
				   [_cor10|[]]]
'test_internal_pid'/4 =
    %% Line 193
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_cor7> =
		call 'hipe_rtl':'mk_imm'
		    (15)
	    in  let <_cor8> =
		    call 'hipe_rtl':'mk_alu'
			(Tmp, _cor3, 'and', _cor7)
		in  let <_cor9> =
			call 'hipe_rtl':'mk_imm'
			    (3)
		    in  let <_cor10> =
			    call 'hipe_rtl':'mk_branch'
				(Tmp, 'eq', _cor9, _cor2, _cor1, _cor0)
			in  [_cor8|[_cor10|[]]]
'test_any_pid'/4 =
    %% Line 196
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <NotInternalPidLab> =
	    %% Line 197
	    call 'hipe_rtl':'mk_new_label'
		()
	in  let <_cor5> =
		%% Line 198
		call 'hipe_rtl':'label_name'
		    (NotInternalPidLab)
	    in  let <_cor6> =
		    %% Line 198
		    apply 'test_internal_pid'/4
			(_cor3, _cor2, _cor5, _cor0)
		in  let <_cor7> =
			%% Line 200
			apply 'test_external_pid'/4
			    (_cor3, _cor2, _cor1, _cor0)
		    in  %% Line 198
			[_cor6|%% Line 199
			       [NotInternalPidLab|%% Line 200
						  [_cor7|[]]]]
'test_external_pid'/4 =
    %% Line 202
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 203
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <HalfTrueLab> =
		%% Line 204
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <_cor7> =
		    %% Line 206
		    call 'hipe_rtl':'label_name'
			(HalfTrueLab)
		in  let <_467> =
			call 'hipe_rtl':'mk_new_reg_gcsafe'
			    ()
		    in  let <Mask> =
			    call 'hipe_rtl':'mk_imm'
				(1)
			in  let <_cor8> =
				call 'hipe_rtl':'mk_alub'
				    (_467, _cor3, 'and', Mask, 'eq', _cor7, _cor1, _cor0)
			    in  let <_2573> =
				    call 'hipe_rtl':'mk_imm'
					(-2)
				in  let <_cor9> =
					call 'hipe_rtl':'mk_load'
					    (Tmp, _cor3, _2573)
				    in  let <_cor12> =
					    %% Line 209
					    apply 'mask_and_compare'/6
						(Tmp, 63, 48, _cor2, _cor1, _cor0)
					in  %% Line 206
					    [_cor8|%% Line 207
						   [HalfTrueLab|%% Line 208
								[_cor9|%% Line 209
								       [_cor12|%% Line 210
									       []]]]]
'test_internal_port'/4 =
    %% Line 212
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_cor7> =
		call 'hipe_rtl':'mk_imm'
		    (15)
	    in  let <_cor8> =
		    call 'hipe_rtl':'mk_alu'
			(Tmp, _cor3, 'and', _cor7)
		in  let <_cor9> =
			call 'hipe_rtl':'mk_imm'
			    (7)
		    in  let <_cor10> =
			    call 'hipe_rtl':'mk_branch'
				(Tmp, 'eq', _cor9, _cor2, _cor1, _cor0)
			in  [_cor8|[_cor10|[]]]
'test_any_port'/4 =
    %% Line 215
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <NotInternalPortLab> =
	    %% Line 216
	    call 'hipe_rtl':'mk_new_label'
		()
	in  let <_cor5> =
		%% Line 217
		call 'hipe_rtl':'label_name'
		    (NotInternalPortLab)
	    in  let <_cor6> =
		    %% Line 217
		    apply 'test_internal_port'/4
			(_cor3, _cor2, _cor5, _cor0)
		in  let <_cor7> =
			%% Line 219
			apply 'test_external_port'/4
			    (_cor3, _cor2, _cor1, _cor0)
		    in  %% Line 217
			[_cor6|%% Line 218
			       [NotInternalPortLab|%% Line 219
						   [_cor7|[]]]]
'test_external_port'/4 =
    %% Line 221
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 222
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <HalfTrueLab> =
		%% Line 223
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <_cor7> =
		    %% Line 225
		    call 'hipe_rtl':'label_name'
			(HalfTrueLab)
		in  let <_839> =
			call 'hipe_rtl':'mk_new_reg_gcsafe'
			    ()
		    in  let <Mask> =
			    call 'hipe_rtl':'mk_imm'
				(1)
			in  let <_cor8> =
				call 'hipe_rtl':'mk_alub'
				    (_839, _cor3, 'and', Mask, 'eq', _cor7, _cor1, _cor0)
			    in  let <_8135> =
				    call 'hipe_rtl':'mk_imm'
					(-2)
				in  let <_cor9> =
					call 'hipe_rtl':'mk_load'
					    (Tmp, _cor3, _8135)
				    in  let <_cor12> =
					    %% Line 228
					    apply 'mask_and_compare'/6
						(Tmp, 63, 52, _cor2, _cor1, _cor0)
					in  %% Line 225
					    [_cor8|%% Line 226
						   [HalfTrueLab|%% Line 227
								[_cor9|%% Line 228
								       [_cor12|%% Line 229
									       []]]]]
'test_fixnum'/4 =
    %% Line 231
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_cor7> =
		call 'hipe_rtl':'mk_imm'
		    (15)
	    in  let <_cor8> =
		    call 'hipe_rtl':'mk_alu'
			(Tmp, _cor3, 'and', _cor7)
		in  let <_cor9> =
			call 'hipe_rtl':'mk_imm'
			    (15)
		    in  let <_cor10> =
			    call 'hipe_rtl':'mk_branch'
				(Tmp, 'eq', _cor9, _cor2, _cor1, _cor0)
			in  [_cor8|[_cor10|[]]]
'test_atom'/4 =
    %% Line 234
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 235
	apply 'mask_and_compare'/6
	    (_cor3, 63, 11, _cor2, _cor1, _cor0)
'test_tuple'/4 =
    %% Line 238
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 239
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <Tmp2> =
		%% Line 240
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <HalfTrueLab> =
		    %% Line 241
		    call 'hipe_rtl':'mk_new_label'
			()
		in  let <_cor7> =
			%% Line 242
			call 'hipe_rtl':'label_name'
			    (HalfTrueLab)
		    in  let <_2337> =
			    call 'hipe_rtl':'mk_new_reg_gcsafe'
				()
			in  let <Mask> =
				call 'hipe_rtl':'mk_imm'
				    (1)
			    in  let <_cor8> =
				    call 'hipe_rtl':'mk_alub'
					(_2337, _cor3, 'and', Mask, 'eq', _cor7, _cor1, _cor0)
				in  let <_5060> =
					call 'hipe_rtl':'mk_imm'
					    (-2)
				    in  let <_cor9> =
					    call 'hipe_rtl':'mk_load'
						(Tmp, _cor3, _5060)
					in  let <_cor10> =
						%% Line 245
						call 'hipe_rtl':'mk_imm'
						    (63)
					    in  let <_cor11> =
						    %% Line 245
						    call 'hipe_rtl':'mk_alub'
							(Tmp2, Tmp, 'and', _cor10, 'eq', _cor2, _cor1, _cor0)
						in  %% Line 242
						    [_cor8|%% Line 243
							   [HalfTrueLab|%% Line 244
									[_cor9|%% Line 245
									       [_cor11|%% Line 246
										       []]]]]
'test_tuple_N'/5 =
    %% Line 248
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 249
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <HalfTrueLab> =
		%% Line 250
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <_cor7> =
		    %% Line 251
		    call 'hipe_rtl':'label_name'
			(HalfTrueLab)
		in  let <_7118> =
			call 'hipe_rtl':'mk_new_reg_gcsafe'
			    ()
		    in  let <Mask> =
			    call 'hipe_rtl':'mk_imm'
				(1)
			in  let <_cor8> =
				call 'hipe_rtl':'mk_alub'
				    (_7118, _cor4, 'and', Mask, 'eq', _cor7, _cor1, _cor0)
			    in  let <_2576> =
				    call 'hipe_rtl':'mk_imm'
					(-2)
				in  let <_cor9> =
					call 'hipe_rtl':'mk_load'
					    (Tmp, _cor4, _2576)
				    in  let <_1289> =
					    call 'erlang':'bsl'
						(_cor3, 6)
					in  let <_cor10> =
						call 'erlang':'+'
						    (_1289, 0)
					    in  let <_cor11> =
						    %% Line 254
						    call 'hipe_rtl':'mk_imm'
							(_cor10)
						in  let <_cor12> =
							%% Line 254
							call 'hipe_rtl':'mk_branch'
							    (Tmp, 'eq', _cor11, _cor2, _cor1, _cor0)
						    in  %% Line 251
							[_cor8|%% Line 252
							       [HalfTrueLab|%% Line 253
									    [_cor9|%% Line 254
										   [_cor12|%% Line 255
											   []]]]]
'test_map'/4 =
    %% Line 257
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 258
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <HalfTrueLab> =
		%% Line 259
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <_cor7> =
		    %% Line 261
		    call 'hipe_rtl':'label_name'
			(HalfTrueLab)
		in  let <_7056> =
			call 'hipe_rtl':'mk_new_reg_gcsafe'
			    ()
		    in  let <Mask> =
			    call 'hipe_rtl':'mk_imm'
				(1)
			in  let <_cor8> =
				call 'hipe_rtl':'mk_alub'
				    (_7056, _cor3, 'and', Mask, 'eq', _cor7, _cor1, _cor0)
			    in  let <_5464> =
				    call 'hipe_rtl':'mk_imm'
					(-2)
				in  let <_cor9> =
					call 'hipe_rtl':'mk_load'
					    (Tmp, _cor3, _5464)
				    in  let <_cor12> =
					    %% Line 264
					    apply 'mask_and_compare'/6
						(Tmp, 63, 60, _cor2, _cor1, _cor0)
					in  %% Line 261
					    [_cor8|%% Line 262
						   [HalfTrueLab|%% Line 263
								[_cor9|%% Line 264
								       [_cor12|[]]]]]
'test_ref'/4 =
    %% Line 266
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Hdr> =
	    %% Line 267
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <Tag> =
		%% Line 268
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <HalfTrueLab> =
		    %% Line 269
		    call 'hipe_rtl':'mk_new_label'
			()
		in  let <TwoThirdsTrueLab> =
			%% Line 270
			call 'hipe_rtl':'mk_new_label'
			    ()
		    in  let <_cor8> =
			    %% Line 271
			    call 'hipe_rtl':'label_name'
				(HalfTrueLab)
			in  let <Tmp> =
				call 'hipe_rtl':'mk_new_reg_gcsafe'
				    ()
			    in  let <Mask> =
				    call 'hipe_rtl':'mk_imm'
					(1)
				in  let <_cor9> =
					call 'hipe_rtl':'mk_alub'
					    (Tmp, _cor3, 'and', Mask, 'eq', _cor8, _cor1, _cor0)
				    in  let <_8907> =
					    call 'hipe_rtl':'mk_imm'
						(-2)
					in  let <_cor10> =
						call 'hipe_rtl':'mk_load'
						    (Hdr, _cor3, _8907)
					    in  let <_cor11> =
						    %% Line 274
						    call 'hipe_rtl':'mk_imm'
							(63)
						in  let <_cor12> =
							%% Line 274
							call 'hipe_rtl':'mk_alu'
							    (Tag, Hdr, 'and', _cor11)
						    in  let <_cor16> =
							    %% Line 275
							    call 'hipe_rtl':'mk_imm'
								(16)
							in  let <_cor13> =
								%% Line 276
								call 'hipe_rtl':'label_name'
								    (TwoThirdsTrueLab)
							    in  let <_cor17> =
								    %% Line 275
								    call 'hipe_rtl':'mk_branch'
									(Tag, 'eq', _cor16, _cor2, _cor13, _cor0)
								in  let <_cor20> =
									%% Line 278
									call 'hipe_rtl':'mk_imm'
									    (56)
								    in  let <_cor21> =
									    %% Line 278
									    call 'hipe_rtl':'mk_branch'
										(Tag, 'eq', _cor20, _cor2, _cor1, _cor0)
									in  %% Line 271
									    [_cor9|%% Line 272
										   [HalfTrueLab|%% Line 273
												[_cor10|%% Line 274
													[_cor12|%% Line 275
														[_cor17|%% Line 277
															[TwoThirdsTrueLab|%% Line 278
																	  [_cor21|%% Line 280
																		  []]]]]]]]
'test_closure'/4 =
    %% Line 283
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 284
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <HalfTrueLab> =
		%% Line 285
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <_cor6> =
		    %% Line 286
		    call 'hipe_rtl':'label_name'
			(HalfTrueLab)
		in  let <_799> =
			call 'hipe_rtl':'mk_new_reg_gcsafe'
			    ()
		    in  let <Mask> =
			    call 'hipe_rtl':'mk_imm'
				(1)
			in  let <_cor7> =
				call 'hipe_rtl':'mk_alub'
				    (_799, _cor3, 'and', Mask, 'eq', _cor6, _cor1, _cor0)
			    in  let <_6122> =
				    call 'hipe_rtl':'mk_imm'
					(-2)
				in  let <_cor8> =
					call 'hipe_rtl':'mk_load'
					    (Tmp, _cor3, _6122)
				    in  let <_cor11> =
					    %% Line 289
					    apply 'mask_and_compare'/6
						(Tmp, 63, 20, _cor2, _cor1, _cor0)
					in  %% Line 286
					    [_cor7|%% Line 287
						   [HalfTrueLab|%% Line 288
								[_cor8|%% Line 289
								       [_cor11|%% Line 290
									       []]]]]
'test_fun'/4 =
    %% Line 293
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Hdr> =
	    %% Line 294
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <Tag> =
		%% Line 295
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <HalfTrueLab> =
		    %% Line 296
		    call 'hipe_rtl':'mk_new_label'
			()
		in  let <TwoThirdsTrueLab> =
			%% Line 297
			call 'hipe_rtl':'mk_new_label'
			    ()
		    in  let <_cor8> =
			    %% Line 298
			    call 'hipe_rtl':'label_name'
				(HalfTrueLab)
			in  let <Tmp> =
				call 'hipe_rtl':'mk_new_reg_gcsafe'
				    ()
			    in  let <Mask> =
				    call 'hipe_rtl':'mk_imm'
					(1)
				in  let <_cor9> =
					call 'hipe_rtl':'mk_alub'
					    (Tmp, _cor3, 'and', Mask, 'eq', _cor8, _cor1, _cor0)
				    in  let <_925> =
					    call 'hipe_rtl':'mk_imm'
						(-2)
					in  let <_cor10> =
						call 'hipe_rtl':'mk_load'
						    (Hdr, _cor3, _925)
					    in  let <_cor11> =
						    %% Line 301
						    call 'hipe_rtl':'mk_imm'
							(63)
						in  let <_cor12> =
							%% Line 301
							call 'hipe_rtl':'mk_alu'
							    (Tag, Hdr, 'and', _cor11)
						    in  let <_cor16> =
							    %% Line 302
							    call 'hipe_rtl':'mk_imm'
								(20)
							in  let <_cor13> =
								%% Line 303
								call 'hipe_rtl':'label_name'
								    (TwoThirdsTrueLab)
							    in  let <_cor17> =
								    %% Line 302
								    call 'hipe_rtl':'mk_branch'
									(Tag, 'eq', _cor16, _cor2, _cor13, _cor0)
								in  let <_cor20> =
									%% Line 305
									call 'hipe_rtl':'mk_imm'
									    (28)
								    in  let <_cor21> =
									    %% Line 305
									    call 'hipe_rtl':'mk_branch'
										(Tag, 'eq', _cor20, _cor2, _cor1, _cor0)
									in  %% Line 298
									    [_cor9|%% Line 299
										   [HalfTrueLab|%% Line 300
												[_cor10|%% Line 301
													[_cor12|%% Line 302
														[_cor17|%% Line 304
															[TwoThirdsTrueLab|%% Line 305
																	  [_cor21|%% Line 306
																		  []]]]]]]]
'test_fun2'/5 =
    %% Line 308
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 309
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <TFalse> =
		%% Line 310
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <HalfTrueLab> =
		    %% Line 311
		    call 'hipe_rtl':'mk_new_label'
			()
		in  let <_cor8> =
			%% Line 313
			call 'hipe_rtl':'label_name'
			    (HalfTrueLab)
		    in  let <_cor9> =
			    %% Line 312
			    call 'hipe_rtl':'mk_call'
				([Tmp|[]], {'erlang','is_function',2}, [_cor4|[_cor3|[]]], _cor8, _cor1, %% Line 313
													 'not_remote')
			in  let <_cor10> =
				%% Line 315
				call 'hipe_rtl':'mk_load_atom'
				    (TFalse, 'false')
			    in  let <_cor11> =
				    %% Line 316
				    call 'hipe_rtl':'mk_branch'
					(Tmp, 'ne', TFalse, _cor2, _cor1, _cor0)
				in  %% Line 312
				    [_cor9|%% Line 314
					   [HalfTrueLab|%% Line 315
							[_cor10|%% Line 316
								[_cor11|[]]]]]
'test_flonum'/4 =
    %% Line 321
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_766> =
	    call 'hipe_rtl_arch':'word_size'
		()
	in  let <_4079> =
		call 'erlang':'div'
		    (8, _766)
	    in  let <_917> =
		    call 'erlang':'bsl'
			(_4079, 6)
		in  let <HeaderFlonum> =
			call 'erlang':'+'
			    (_917, 24)
		    in  let <Tmp> =
			    %% Line 323
			    call 'hipe_rtl':'mk_new_reg_gcsafe'
				()
			in  let <HalfTrueLab> =
				%% Line 324
				call 'hipe_rtl':'mk_new_label'
				    ()
			    in  let <_cor7> =
				    %% Line 325
				    call 'hipe_rtl':'label_name'
					(HalfTrueLab)
				in  let <_8125> =
					call 'hipe_rtl':'mk_new_reg_gcsafe'
					    ()
				    in  let <Mask> =
					    call 'hipe_rtl':'mk_imm'
						(1)
					in  let <_cor8> =
						call 'hipe_rtl':'mk_alub'
						    (_8125, _cor3, 'and', Mask, 'eq', _cor7, _cor1, _cor0)
					    in  let <_1142> =
						    call 'hipe_rtl':'mk_imm'
							(-2)
						in  let <_cor9> =
							call 'hipe_rtl':'mk_load'
							    (Tmp, _cor3, _1142)
						    in  let <_cor10> =
							    %% Line 328
							    call 'hipe_rtl':'mk_imm'
								(HeaderFlonum)
							in  let <_cor11> =
								%% Line 328
								call 'hipe_rtl':'mk_branch'
								    (Tmp, 'eq', _cor10, _cor2, _cor1, _cor0)
							    in  %% Line 325
								[_cor8|%% Line 326
								       [HalfTrueLab|%% Line 327
										    [_cor9|%% Line 328
											   [_cor11|%% Line 329
												   []]]]]
'test_bignum'/4 =
    %% Line 331
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 332
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <HalfTrueLab> =
		%% Line 333
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <_cor8> =
		    %% Line 335
		    call 'hipe_rtl':'label_name'
			(HalfTrueLab)
		in  let <_6582> =
			call 'hipe_rtl':'mk_new_reg_gcsafe'
			    ()
		    in  let <Mask> =
			    call 'hipe_rtl':'mk_imm'
				(1)
			in  let <_cor9> =
				call 'hipe_rtl':'mk_alub'
				    (_6582, _cor3, 'and', Mask, 'eq', _cor8, _cor1, _cor0)
			    in  let <_5603> =
				    call 'hipe_rtl':'mk_imm'
					(-2)
				in  let <_cor10> =
					call 'hipe_rtl':'mk_load'
					    (Tmp, _cor3, _5603)
				    in  let <_cor13> =
					    %% Line 338
					    apply 'mask_and_compare'/6
						(Tmp, 59, 8, _cor2, _cor1, _cor0)
					in  %% Line 335
					    [_cor9|%% Line 336
						   [HalfTrueLab|%% Line 337
								[_cor10|%% Line 338
									[_cor13|%% Line 339
										[]]]]]
'test_pos_bignum'/4 =
    %% Line 341
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 342
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <HalfTrueLab> =
		%% Line 343
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <_cor7> =
		    %% Line 345
		    call 'hipe_rtl':'label_name'
			(HalfTrueLab)
		in  let <_1570> =
			call 'hipe_rtl':'mk_new_reg_gcsafe'
			    ()
		    in  let <Mask> =
			    call 'hipe_rtl':'mk_imm'
				(1)
			in  let <_cor8> =
				call 'hipe_rtl':'mk_alub'
				    (_1570, _cor3, 'and', Mask, 'eq', _cor7, _cor1, _cor0)
			    in  let <_6096> =
				    call 'hipe_rtl':'mk_imm'
					(-2)
				in  let <_cor9> =
					call 'hipe_rtl':'mk_load'
					    (Tmp, _cor3, _6096)
				    in  let <_cor12> =
					    %% Line 348
					    apply 'mask_and_compare'/6
						(Tmp, 63, 8, _cor2, _cor1, _cor0)
					in  %% Line 345
					    [_cor8|%% Line 346
						   [HalfTrueLab|%% Line 347
								[_cor9|%% Line 348
								       [_cor12|%% Line 349
									       []]]]]
'test_matchstate'/4 =
    %% Line 351
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 352
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <HalfTrueLab> =
		%% Line 353
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <_cor6> =
		    %% Line 354
		    call 'hipe_rtl':'label_name'
			(HalfTrueLab)
		in  let <_6338> =
			call 'hipe_rtl':'mk_new_reg_gcsafe'
			    ()
		    in  let <Mask> =
			    call 'hipe_rtl':'mk_imm'
				(1)
			in  let <_cor7> =
				call 'hipe_rtl':'mk_alub'
				    (_6338, _cor3, 'and', Mask, 'eq', _cor6, _cor1, _cor0)
			    in  let <_10475> =
				    call 'hipe_rtl':'mk_imm'
					(-2)
				in  let <_cor8> =
					call 'hipe_rtl':'mk_load'
					    (Tmp, _cor3, _10475)
				    in  let <_cor11> =
					    %% Line 357
					    apply 'mask_and_compare'/6
						(Tmp, 63, 4, _cor2, _cor1, _cor0)
					in  %% Line 354
					    [_cor7|%% Line 355
						   [HalfTrueLab|%% Line 356
								[_cor8|%% Line 357
								       [_cor11|%% Line 358
									       []]]]]
'test_bitstr'/4 =
    %% Line 360
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 361
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <HalfTrueLab> =
		%% Line 362
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <_cor8> =
		    %% Line 364
		    call 'hipe_rtl':'label_name'
			(HalfTrueLab)
		in  let <_4699> =
			call 'hipe_rtl':'mk_new_reg_gcsafe'
			    ()
		    in  let <Mask> =
			    call 'hipe_rtl':'mk_imm'
				(1)
			in  let <_cor9> =
				call 'hipe_rtl':'mk_alub'
				    (_4699, _cor3, 'and', Mask, 'eq', _cor8, _cor1, _cor0)
			    in  let <_8234> =
				    call 'hipe_rtl':'mk_imm'
					(-2)
				in  let <_cor10> =
					call 'hipe_rtl':'mk_load'
					    (Tmp, _cor3, _8234)
				    in  let <_cor13> =
					    %% Line 367
					    apply 'mask_and_compare'/6
						(Tmp, 51, 32, _cor2, _cor1, _cor0)
					in  %% Line 364
					    [_cor9|%% Line 365
						   [HalfTrueLab|%% Line 366
								[_cor10|%% Line 367
									[_cor13|[]]]]]
'test_binary'/4 =
    %% Line 369
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp1> =
	    %% Line 370
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <Tmp2> =
		%% Line 371
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <IsBoxedLab> =
		    %% Line 372
		    call 'hipe_rtl':'mk_new_label'
			()
		in  let <IsBitStrLab> =
			%% Line 373
			call 'hipe_rtl':'mk_new_label'
			    ()
		    in  let <IsSubBinLab> =
			    %% Line 374
			    call 'hipe_rtl':'mk_new_label'
				()
			in  let <_cor11> =
				%% Line 376
				call 'hipe_rtl':'label_name'
				    (IsBoxedLab)
			    in  let <Tmp> =
				    call 'hipe_rtl':'mk_new_reg_gcsafe'
					()
				in  let <Mask> =
					call 'hipe_rtl':'mk_imm'
					    (1)
				    in  let <_cor12> =
					    call 'hipe_rtl':'mk_alub'
						(Tmp, _cor3, 'and', Mask, 'eq', _cor11, _cor1, _cor0)
					in  let <_9180> =
						call 'hipe_rtl':'mk_imm'
						    (-2)
					    in  let <_cor13> =
						    call 'hipe_rtl':'mk_load'
							(Tmp1, _cor3, _9180)
						in  let <_cor14> =
							%% Line 380
							call 'hipe_rtl':'label_name'
							    (IsBitStrLab)
						    in  let <_cor17> =
							    %% Line 379
							    apply 'mask_and_compare'/6
								(Tmp1, 51, 32, _cor14, _cor1, _cor0)
							in  let <_cor18> =
								%% Line 383
								call 'hipe_rtl':'label_name'
								    (IsSubBinLab)
							    in  let <_cor21> =
								    %% Line 382
								    apply 'mask_and_compare'/6
									(Tmp1, 63, 40, _cor18, _cor2, %% Line 383
												      5.00000000000000000000e-01)
								in  let <_cor22> =
									%% Line 385
									apply 'get_field_from_term'/3
									    ({'sub_binary','bitsize'}, _cor3, Tmp2)
								    in  let <_cor23> =
									    %% Line 386
									    call 'hipe_rtl':'mk_imm'
										(0)
									in  let <_cor24> =
										%% Line 386
										call 'hipe_rtl':'mk_branch'
										    (Tmp2, 'eq', _cor23, _cor2, _cor1, _cor0)
									    in  %% Line 376
										[_cor12|%% Line 377
											[IsBoxedLab|%% Line 378
												    [_cor13|%% Line 379
													    [_cor17|%% Line 381
														    [IsBitStrLab|%% Line 382
																 [_cor21|%% Line 384
																	 [IsSubBinLab|%% Line 385
																		      [_cor22|%% Line 386
																			      [_cor24|[]]]]]]]]]]
'test_list'/4 =
    %% Line 388
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Lab> =
	    %% Line 389
	    call 'hipe_rtl':'mk_new_label'
		()
	in  let <_cor5> =
		%% Line 390
		call 'hipe_rtl':'label_name'
		    (Lab)
	    in  let <Tmp> =
		    call 'hipe_rtl':'mk_new_reg_gcsafe'
			()
		in  let <Mask> =
			call 'hipe_rtl':'mk_imm'
			    (2)
		    in  let <_cor6> =
			    call 'hipe_rtl':'mk_alub'
				(Tmp, _cor3, 'and', Mask, 'eq', _cor2, _cor5, %% Line 390
									      5.00000000000000000000e-01)
			in  let <_cor11> =
				call 'hipe_rtl':'mk_imm'
				    (-5)
			    in  let <_cor7> =
				    call 'hipe_rtl':'mk_branch'
					(_cor3, 'eq', _cor11, _cor2, _cor1, _cor0)
				in  %% Line 390
				    [_cor6|%% Line 391
					   [Lab|%% Line 392
						[_cor7|[]]]]
'test_integer'/4 =
    %% Line 394
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Lab> =
	    %% Line 395
	    call 'hipe_rtl':'mk_new_label'
		()
	in  let <_cor5> =
		%% Line 396
		call 'hipe_rtl':'label_name'
		    (Lab)
	    in  let <_cor6> =
		    %% Line 396
		    apply 'test_fixnum'/4
			(_cor3, _cor2, _cor5, 5.00000000000000000000e-01)
		in  let <_cor7> =
			%% Line 398
			apply 'test_bignum'/4
			    (_cor3, _cor2, _cor1, _cor0)
		    in  %% Line 396
			[_cor6|%% Line 397
			       [Lab|%% Line 398
				    [_cor7|[]]]]
'test_number'/4 =
    %% Line 400
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Lab1> =
	    %% Line 401
	    call 'hipe_rtl':'mk_new_label'
		()
	in  let <Lab2> =
		%% Line 402
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <Lab3> =
		    %% Line 403
		    call 'hipe_rtl':'mk_new_label'
			()
		in  let <Tmp> =
			%% Line 404
			call 'hipe_rtl':'mk_new_reg_gcsafe'
			    ()
		    in  let <_7541> =
			    call 'hipe_rtl_arch':'word_size'
				()
			in  let <_9149> =
				call 'erlang':'div'
				    (8, _7541)
			    in  let <_917> =
				    call 'erlang':'bsl'
					(_9149, 6)
				in  let <HeaderFlonum> =
					call 'erlang':'+'
					    (_917, 24)
				    in  let <_cor11> =
					    %% Line 407
					    call 'hipe_rtl':'label_name'
						(Lab1)
					in  let <_cor12> =
						%% Line 407
						apply 'test_fixnum'/4
						    (_cor3, _cor2, _cor11, 5.00000000000000000000e-01)
					    in  let <_cor13> =
						    %% Line 409
						    call 'hipe_rtl':'label_name'
							(Lab2)
						in  let <_4263> =
							call 'hipe_rtl':'mk_new_reg_gcsafe'
							    ()
						    in  let <Mask> =
							    call 'hipe_rtl':'mk_imm'
								(1)
							in  let <_cor14> =
								call 'hipe_rtl':'mk_alub'
								    (_4263, _cor3, 'and', Mask, 'eq', _cor13, _cor1, %% Line 409
														     5.00000000000000000000e-01)
							    in  let <_4962> =
								    call 'hipe_rtl':'mk_imm'
									(-2)
								in  let <_cor15> =
									call 'hipe_rtl':'mk_load'
									    (Tmp, _cor3, _4962)
								    in  let <_cor16> =
									    %% Line 413
									    call 'hipe_rtl':'label_name'
										(Lab3)
									in  let <_cor19> =
										%% Line 412
										apply 'mask_and_compare'/6
										    (Tmp, 59, 8, _cor2, _cor16, %% Line 413
														5.00000000000000000000e-01)
									    in  let <_cor20> =
										    %% Line 415
										    call 'hipe_rtl':'mk_imm'
											(HeaderFlonum)
										in  let <_cor21> =
											%% Line 415
											call 'hipe_rtl':'mk_branch'
											    (Tmp, 'eq', _cor20, _cor2, _cor1, _cor0)
										    in  %% Line 407
											[_cor12|%% Line 408
												[Lab1|%% Line 409
												      [_cor14|%% Line 410
													      [Lab2|%% Line 411
														    [_cor15|%% Line 412
															    [_cor19|%% Line 414
																    [Lab3|%% Line 415
																	  [_cor21|%% Line 416
																		  []]]]]]]]]
'tag_fixnum'/2 =
    %% Line 420
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 421
	    call 'hipe_rtl':'mk_fixnumop'
		(_cor1, _cor0, 'tag')
	in  %% Line 421
	    [_cor2|[]]
'realtag_fixnum'/2 =
    %% Line 425
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 426
	    call 'hipe_rtl':'mk_imm'
		(4)
	in  let <_cor3> =
		%% Line 426
		call 'hipe_rtl':'mk_alu'
		    (_cor1, _cor0, 'sll', _cor2)
	    in  let <_cor6> =
		    %% Line 427
		    call 'hipe_rtl':'mk_imm'
			(15)
		in  let <_cor7> =
			%% Line 427
			call 'hipe_rtl':'mk_alu'
			    (_cor1, _cor1, 'add', _cor6)
		    in  %% Line 426
			[_cor3|%% Line 427
			       [_cor7|[]]]
'untag_fixnum'/2 =
    %% Line 429
    fun (_cor1,_cor0) ->
	%% Line 430
	call 'hipe_rtl':'mk_fixnumop'
	    (_cor1, _cor0, 'untag')
'realuntag_fixnum'/2 =
    %% Line 433
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 434
	    call 'hipe_rtl':'mk_imm'
		(4)
	in  %% Line 434
	    call 'hipe_rtl':'mk_alu'
		(_cor1, _cor0, 'sra', _cor2)
'fixnum_val'/1 =
    %% Line 436
    fun (_cor0) ->
	%% Line 437
	call 'erlang':'bsr'
	    (_cor0, 4)
'test_fixnums'/4 =
    %% Line 439
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_1538> =
	    %% Line 440
	    apply 'test_fixnums_1'/2
		(_cor3, [])
	in  %% Line 440
	    case _1538 of
	      <{Reg,Ands}> when 'true' ->
		  let <_cor5> =
		      %% Line 441
		      apply 'test_fixnum'/4
			  (Reg, _cor2, _cor1, _cor0)
		  in  %% Line 441
		      call 'erlang':'++'
			  (Ands, [_cor5|[]])
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_1538})
		-| ['compiler_generated'] )
	    end
'test_fixnums_1'/2 =
    %% Line 443
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Arg1|[Arg2|[]]],Acc> when 'true' ->
	      let <Tmp> =
		  %% Line 444
		  call 'hipe_rtl':'mk_new_reg_gcsafe'
		      ()
	      in  let <_cor3> =
		      %% Line 445
		      call 'hipe_rtl':'mk_alu'
			  (Tmp, Arg1, 'and', Arg2)
		  in  let <_cor4> =
			  %% Line 445
			  call 'lists':'reverse'
			      ([_cor3|_cor0])
		      in  %% Line 445
			  {Tmp,_cor4}
	  %% Line 446
	  <[Arg1|[Arg2|Args]],Acc> when 'true' ->
	      let <Tmp> =
		  %% Line 447
		  call 'hipe_rtl':'mk_new_reg_gcsafe'
		      ()
	      in  let <_cor6> =
		      %% Line 448
		      call 'hipe_rtl':'mk_alu'
			  (Tmp, Arg1, 'and', Arg2)
		  in  %% Line 448
		      apply 'test_fixnums_1'/2
			  ([Tmp|Args], [_cor6|_cor0])
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'test_fixnums_1',2}}] )
	    -| ['compiler_generated'] )
	end
'test_two_fixnums'/3 =
    %% Line 450
    fun (_cor2,_cor1,_cor0) ->
	let <TrueLab> =
	    %% Line 451
	    call 'hipe_rtl':'mk_new_label'
		()
	in  let <_58> =
		%% Line 452
		call 'hipe_rtl':'is_imm'
		    (_cor1)
	    in  %% Line 452
		case _58 of
		  %% Line 453
		  <'true'> when 'true' ->
		      let <Value> =
			  %% Line 454
			  call 'hipe_rtl':'imm_value'
			      (_cor1)
		      in  %% Line 455
			  case call 'erlang':'band'
				   (Value, 15) of
			    %% Line 456
			    <15> when 'true' ->
				let <_cor5> =
				    %% Line 457
				    call 'hipe_rtl':'label_name'
					(TrueLab)
				in  let <_cor6> =
					%% Line 457
					apply 'test_fixnum'/4
					    (_cor2, _cor5, _cor0, 9.89999999999999991118e-01)
				    in  %% Line 457
					[_cor6|%% Line 458
					       [TrueLab|[]]]
			    %% Line 459
			    <_cor17> when 'true' ->
				let <_cor7> =
				    %% Line 460
				    call 'hipe_rtl':'mk_goto'
					(_cor0)
				in  %% Line 460
				    [_cor7|[]]
			  end
		  %% Line 462
		  <'false'> when 'true' ->
		      let <Tmp> =
			  %% Line 463
			  call 'hipe_rtl':'mk_new_reg_gcsafe'
			      ()
		      in  let <_cor10> =
			      %% Line 464
			      call 'hipe_rtl':'mk_alu'
				  (Tmp, _cor2, 'and', _cor1)
			  in  let <_cor11> =
				  %% Line 465
				  call 'hipe_rtl':'label_name'
				      (TrueLab)
			      in  let <_cor12> =
				      %% Line 465
				      apply 'test_fixnum'/4
					  (Tmp, _cor11, _cor0, 9.89999999999999991118e-01)
				  in  %% Line 464
				      [_cor10|%% Line 465
					      [_cor12|%% Line 466
						      [TrueLab|[]]]]
		  ( <_cor13> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_58})
		    -| ['compiler_generated'] )
		end
'fixnum_gt'/5 =
    %% Line 472
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'hipe_rtl':'mk_branch'
	    (_cor4, %% Line 473
		    'gt', _cor3, _cor2, _cor1, _cor0)
'fixnum_lt'/5 =
    %% Line 475
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'hipe_rtl':'mk_branch'
	    (_cor4, %% Line 476
		    'lt', _cor3, _cor2, _cor1, _cor0)
'fixnum_ge'/5 =
    %% Line 478
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'hipe_rtl':'mk_branch'
	    (_cor4, %% Line 479
		    'ge', _cor3, _cor2, _cor1, _cor0)
'fixnum_le'/5 =
    %% Line 481
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'hipe_rtl':'mk_branch'
	    (_cor4, %% Line 482
		    'le', _cor3, _cor2, _cor1, _cor0)
'unsafe_fixnum_add'/3 =
    %% Line 485
    fun (_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 486
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_cor6> =
		%% Line 487
		call 'hipe_rtl':'mk_imm'
		    (15)
	    in  let <_cor7> =
		    %% Line 487
		    call 'hipe_rtl':'mk_alu'
			(Tmp, _cor1, 'sub', _cor6)
		in  let <_cor8> =
			%% Line 488
			call 'hipe_rtl':'mk_alu'
			    (_cor0, _cor2, 'add', Tmp)
		    in  %% Line 487
			[_cor7|%% Line 488
			       [_cor8|[]]]
'unsafe_fixnum_sub'/3 =
    %% Line 491
    fun (_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 492
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_cor6> =
		%% Line 493
		call 'hipe_rtl':'mk_imm'
		    (15)
	    in  let <_cor7> =
		    %% Line 493
		    call 'hipe_rtl':'mk_alu'
			(Tmp, _cor1, 'sub', _cor6)
		in  let <_cor8> =
			%% Line 494
			call 'hipe_rtl':'mk_alu'
			    (_cor0, _cor2, 'sub', Tmp)
		    in  %% Line 493
			[_cor7|%% Line 494
			       [_cor8|[]]]
'fixnum_addsub'/5 =
    %% Line 498
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 499
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_cor8> =
		%% Line 501
		( case <> of
		    ( <>
			  when call 'erlang':'=/='
				(_cor3,
				 _cor1) ->
			  call 'erlang':'=/='
			      (_cor2, _cor1)
		      -| ['compiler_generated'] )
		    ( <> when 'true' ->
			  'false'
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
	    in  %% Line 501
		case _cor8 of
		  %% Line 502
		  <'true'> when 'true' ->
		      let <NoOverflowLab> =
			  %% Line 504
			  call 'hipe_rtl':'mk_new_label'
			      ()
		      in  let <_cor12> =
			      %% Line 505
			      call 'hipe_rtl':'mk_imm'
				  (15)
			  in  let <_cor13> =
				  %% Line 505
				  call 'hipe_rtl':'mk_alu'
				      (Tmp, _cor2, 'sub', _cor12)
			      in  let <_cor15> =
				      %% Line 507
				      call 'hipe_rtl':'label_name'
					  (NoOverflowLab)
				  in  let <_cor14> =
					  %% Line 508
					  call 'hipe_rtl':'label_name'
					      (_cor0)
				      in  let <_cor16> =
					      %% Line 506
					      call 'hipe_rtl':'mk_alub'
						  (_cor1, _cor3, _cor4, Tmp, 'not_overflow', _cor15, _cor14, %% Line 508
													     9.89999999999999991118e-01)
					  in  %% Line 505
					      [_cor13|%% Line 506
						      [_cor16|%% Line 509
							      [NoOverflowLab|[]]]]
		  %% Line 510
		  <'false'> when 'true' ->
		      let <Tmp2> =
			  %% Line 512
			  call 'hipe_rtl':'mk_new_var'
			      ()
		      in  let <NoOverflowLab> =
			      %% Line 513
			      call 'hipe_rtl':'mk_new_label'
				  ()
			  in  let <_cor21> =
				  %% Line 514
				  call 'hipe_rtl':'mk_imm'
				      (15)
			      in  let <_cor22> =
				      %% Line 514
				      call 'hipe_rtl':'mk_alu'
					  (Tmp, _cor2, 'sub', _cor21)
				  in  let <_cor24> =
					  %% Line 516
					  call 'hipe_rtl':'label_name'
					      (NoOverflowLab)
				      in  let <_cor23> =
					      %% Line 517
					      call 'hipe_rtl':'label_name'
						  (_cor0)
					  in  let <_cor25> =
						  %% Line 515
						  call 'hipe_rtl':'mk_alub'
						      (Tmp2, _cor3, _cor4, Tmp, 'not_overflow', _cor24, _cor23, %% Line 517
														9.89999999999999991118e-01)
					      in  let <_cor26> =
						      %% Line 519
						      call 'hipe_rtl':'mk_move'
							  (_cor1, Tmp2)
						  in  %% Line 514
						      [_cor22|%% Line 515
							      [_cor25|%% Line 518
								      [NoOverflowLab|%% Line 519
										     [_cor26|[]]]]]
		  ( <_cor27> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor8})
		    -| ['compiler_generated'] )
		end
'fixnum_mul'/4 =
    %% Line 523
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 524
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <U1> =
		%% Line 525
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <U2> =
		    %% Line 526
		    call 'hipe_rtl':'mk_new_reg_gcsafe'
			()
		in  let <NoOverflowLab> =
			%% Line 527
			call 'hipe_rtl':'mk_new_label'
			    ()
		    in  let <_cor8> =
			    call 'hipe_rtl':'mk_fixnumop'
				(U1, _cor3, 'untag')
			in  let <_cor11> =
				%% Line 529
				call 'hipe_rtl':'mk_imm'
				    (15)
			    in  let <_cor12> =
				    %% Line 529
				    call 'hipe_rtl':'mk_alu'
					(U2, _cor2, 'sub', _cor11)
				in  let <_cor14> =
					%% Line 530
					call 'hipe_rtl':'label_name'
					    (_cor0)
				    in  let <_cor13> =
					    %% Line 531
					    call 'hipe_rtl':'label_name'
						(NoOverflowLab)
					in  let <_cor15> =
						%% Line 530
						call 'hipe_rtl':'mk_alub'
						    (Tmp, U1, 'mul', U2, 'overflow', _cor14, _cor13, %% Line 531
												     1.00000000000000002082e-02)
					    in  let <_cor18> =
						    %% Line 533
						    call 'hipe_rtl':'mk_imm'
							(15)
						in  let <_cor19> =
							%% Line 533
							call 'hipe_rtl':'mk_alu'
							    (_cor1, Tmp, 'add', _cor18)
						    in  %% Line 528
							[_cor8|%% Line 529
							       [_cor12|%% Line 530
								       [_cor15|%% Line 532
									       [NoOverflowLab|%% Line 533
											      [_cor19|[]]]]]]
'fixnum_andorxor'/4 =
    %% Line 535
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 536
	case _cor3 of
	  %% Line 537
	  <'xor'> when 'true' ->
	      let <Tmp> =
		  %% Line 538
		  call 'hipe_rtl':'mk_new_reg_gcsafe'
		      ()
	      in  let <_cor5> =
		      %% Line 539
		      call 'hipe_rtl':'mk_alu'
			  (Tmp, _cor2, 'xor', _cor1)
		  in  let <_cor8> =
			  %% Line 540
			  call 'hipe_rtl':'mk_imm'
			      (15)
		      in  let <_cor9> =
			      %% Line 540
			      call 'hipe_rtl':'mk_alu'
				  (_cor0, Tmp, 'or', _cor8)
			  in  %% Line 539
			      [_cor5|%% Line 540
				     [_cor9|[]]]
	  %% Line 541
	  <_cor15> when 'true' ->
	      call 'hipe_rtl':'mk_alu'
		  (_cor0, _cor2, _cor3, _cor1)
	end
'fixnum_not'/2 =
    %% Line 544
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 546
	    call 'hipe_rtl':'mk_imm'
		(-16)
	in  %% Line 546
	    call 'hipe_rtl':'mk_alu'
		(_cor0, _cor1, 'xor', _cor4)
'fixnum_bsr'/3 =
    %% Line 548
    fun (_cor2,_cor1,_cor0) ->
	let <Tmp1> =
	    %% Line 549
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <Tmp2> =
		%% Line 550
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <_cor5> =
		    call 'hipe_rtl':'mk_fixnumop'
			(Tmp1, _cor1, 'untag')
		in  let <_cor6> =
			%% Line 552
			call 'hipe_rtl':'mk_alu'
			    (Tmp2, _cor2, 'sra', Tmp1)
		    in  let <_cor9> =
			    %% Line 553
			    call 'hipe_rtl':'mk_imm'
				(15)
			in  let <_cor10> =
				%% Line 553
				call 'hipe_rtl':'mk_alu'
				    (_cor0, Tmp2, 'or', _cor9)
			    in  %% Line 551
				[_cor5|%% Line 552
				       [_cor6|%% Line 553
					      [_cor10|[]]]]
'fixnum_bsl'/3 =
    %% Line 556
    fun (_cor2,_cor1,_cor0) ->
	let <Tmp1> =
	    %% Line 557
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <Tmp2> =
		%% Line 558
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <Tmp3> =
		    %% Line 559
		    call 'hipe_rtl':'mk_new_reg_gcsafe'
			()
		in  let <_cor6> =
			call 'hipe_rtl':'mk_fixnumop'
			    (Tmp2, _cor1, 'untag')
		    in  let <_cor9> =
			    %% Line 561
			    call 'hipe_rtl':'mk_imm'
				(15)
			in  let <_cor10> =
				%% Line 561
				call 'hipe_rtl':'mk_alu'
				    (Tmp1, _cor2, 'sub', _cor9)
			    in  let <_cor11> =
				    %% Line 562
				    call 'hipe_rtl':'mk_alu'
					(Tmp3, Tmp1, 'sll', Tmp2)
				in  let <_cor14> =
					%% Line 563
					call 'hipe_rtl':'mk_imm'
					    (15)
				    in  let <_cor15> =
					    %% Line 563
					    call 'hipe_rtl':'mk_alu'
						(_cor0, Tmp3, 'or', _cor14)
					in  %% Line 560
					    [_cor6|%% Line 561
						   [_cor10|%% Line 562
							   [_cor11|%% Line 563
								   [_cor15|[]]]]]
'unsafe_car'/2 =
    %% Line 567
    fun (_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 568
	    call 'hipe_rtl':'mk_imm'
		(-1)
	in  %% Line 568
	    call 'hipe_rtl':'mk_load'
		(_cor1, _cor0, _cor3)
'unsafe_cdr'/2 =
    %% Line 570
    fun (_cor1,_cor0) ->
	let <WordSize> =
	    %% Line 571
	    call 'hipe_rtl_arch':'word_size'
		()
	in  let <_cor4> =
		%% Line 572
		call 'erlang':'+'
		    (-1, WordSize)
	    in  let <_cor5> =
		    %% Line 572
		    call 'hipe_rtl':'mk_imm'
			(_cor4)
		in  %% Line 572
		    call 'hipe_rtl':'mk_load'
			(_cor1, _cor0, _cor5)
'unsafe_constant_element'/3 =
    %% Line 574
    fun (_cor2,_cor1,_cor0) ->
	let <WordSize> =
	    %% Line 575
	    call 'hipe_rtl_arch':'word_size'
		()
	in  let <_cor4> =
		%% Line 576
		call 'hipe_rtl':'imm_value'
		    (_cor1)
	    in  let <_cor5> =
		    %% Line 576
		    call 'erlang':'*'
			(WordSize, _cor4)
		in  let <Offset> =
			%% Line 576
			call 'erlang':'+'
			    (-2, _cor5)
		    in  let <_cor8> =
			    %% Line 577
			    call 'hipe_rtl':'mk_imm'
				(Offset)
			in  %% Line 577
			    call 'hipe_rtl':'mk_load'
				(_cor2, _cor0, _cor8)
'unsafe_update_element'/3 =
    %% Line 579
    fun (_cor2,_cor1,_cor0) ->
	let <WordSize> =
	    %% Line 580
	    call 'hipe_rtl_arch':'word_size'
		()
	in  let <_cor4> =
		%% Line 581
		call 'hipe_rtl':'imm_value'
		    (_cor1)
	    in  let <_cor5> =
		    %% Line 581
		    call 'erlang':'*'
			(WordSize, _cor4)
		in  let <Offset> =
			%% Line 581
			call 'erlang':'+'
			    (-2, _cor5)
		    in  let <_cor8> =
			    %% Line 582
			    call 'hipe_rtl':'mk_imm'
				(Offset)
			in  %% Line 582
			    call 'hipe_rtl':'mk_store'
				(_cor2, _cor8, _cor0)
'element'/6 =
    %% Line 600
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Dst,Index,Tuple,FailLabName,{'tuple',A},IndexInfo> when 'true' ->
	      let <FixnumOkLab> =
		  %% Line 601
		  call 'hipe_rtl':'mk_new_label'
		      ()
	      in  let <IndexOkLab> =
		      %% Line 602
		      call 'hipe_rtl':'mk_new_label'
			  ()
		  in  let <Ptr> =
			  %% Line 603
			  call 'hipe_rtl':'mk_new_reg'
			      ()
		      in  let <UIndex> =
			      %% Line 604
			      call 'hipe_rtl':'mk_new_reg_gcsafe'
				  ()
			  in  let <Arity> =
				  %% Line 605
				  call 'hipe_rtl':'mk_imm'
				      (A)
			      in  let <InvIndex> =
				      %% Line 606
				      call 'hipe_rtl':'mk_new_reg_gcsafe'
					  ()
				  in  let <Offset> =
					  %% Line 607
					  call 'hipe_rtl':'mk_new_reg_gcsafe'
					      ()
				      in  %% Line 608
					  case _cor0 of
					    %% Line 609
					    <'valid'> when 'true' ->
						let <_cor13> =
						    call 'hipe_rtl':'mk_fixnumop'
							(UIndex, _cor4, 'untag')
						in  let <_cor14> =
							%% Line 612
							call 'hipe_rtl':'mk_imm'
							    (2)
						    in  let <_cor15> =
							    %% Line 612
							    call 'hipe_rtl':'mk_alu'
								(Ptr, _cor3, 'sub', _cor14)
							in  let <_cor16> =
								%% Line 614
								call 'hipe_rtl_arch':'log2_word_size'
								    ()
							    in  let <_cor17> =
								    %% Line 614
								    call 'hipe_rtl':'mk_imm'
									(_cor16)
								in  let <_cor18> =
									%% Line 613
									call 'hipe_rtl':'mk_alu'
									    (Offset, UIndex, 'sll', _cor17)
								    in  let <_cor19> =
									    %% Line 615
									    call 'hipe_rtl':'mk_load'
										(_cor5, Ptr, Offset)
									in  %% Line 611
									    [_cor13|%% Line 612
										    [_cor15|%% Line 613
											    [_cor18|%% Line 615
												    [_cor19|[]]]]]
					    %% Line 616
					    <'fixnums'> when 'true' ->
						let <_cor20> =
						    call 'hipe_rtl':'mk_fixnumop'
							(UIndex, _cor4, 'untag')
						in  let <_cor21> =
							%% Line 619
							call 'hipe_rtl':'mk_imm'
							    (2)
						    in  let <_cor22> =
							    %% Line 619
							    call 'hipe_rtl':'mk_alu'
								(Ptr, _cor3, 'sub', _cor21)
							in  let <_cor23> =
								%% Line 620
								apply 'gen_element_tail'/8
								    (_cor5, Ptr, InvIndex, Arity, Offset, UIndex, _cor2, IndexOkLab)
							    in  %% Line 618
								[_cor20|%% Line 619
									[_cor22|_cor23]]
					    %% Line 622
					    <_cor121> when 'true' ->
						let <_cor24> =
						    %% Line 624
						    call 'hipe_rtl':'label_name'
							(FixnumOkLab)
						in  let <_cor25> =
							%% Line 624
							apply 'test_fixnum'/4
							    (_cor4, _cor24, _cor2, %% Line 625
										   9.89999999999999991118e-01)
						    in  let <_cor26> =
							    call 'hipe_rtl':'mk_fixnumop'
								(UIndex, _cor4, 'untag')
							in  let <_cor27> =
								%% Line 628
								call 'hipe_rtl':'mk_imm'
								    (2)
							    in  let <_cor28> =
								    %% Line 628
								    call 'hipe_rtl':'mk_alu'
									(Ptr, _cor3, 'sub', _cor27)
								in  let <_cor29> =
									%% Line 629
									apply 'gen_element_tail'/8
									    (_cor5, Ptr, InvIndex, Arity, Offset, UIndex, _cor2, IndexOkLab)
								    in  %% Line 624
									[_cor25|%% Line 626
										[FixnumOkLab|%% Line 627
											     [_cor26|%% Line 628
												     [_cor28|_cor29]]]]
					  end
	  %% Line 632
	  <Dst,Index,Tuple,FailLabName,'tuple',IndexInfo> when 'true' ->
	      let <FixnumOkLab> =
		  %% Line 633
		  call 'hipe_rtl':'mk_new_label'
		      ()
	      in  let <IndexOkLab> =
		      %% Line 634
		      call 'hipe_rtl':'mk_new_label'
			  ()
		  in  let <Ptr> =
			  %% Line 635
			  call 'hipe_rtl':'mk_new_reg'
			      ()
		      in  let <Header> =
			      %% Line 636
			      call 'hipe_rtl':'mk_new_reg_gcsafe'
				  ()
			  in  let <UIndex> =
				  %% Line 637
				  call 'hipe_rtl':'mk_new_reg_gcsafe'
				      ()
			      in  let <Arity> =
				      %% Line 638
				      call 'hipe_rtl':'mk_new_reg_gcsafe'
					  ()
				  in  let <InvIndex> =
					  %% Line 639
					  call 'hipe_rtl':'mk_new_reg_gcsafe'
					      ()
				      in  let <Offset> =
					      %% Line 640
					      call 'hipe_rtl':'mk_new_reg_gcsafe'
						  ()
					  in  %% Line 641
					      case _cor0 of
						%% Line 642
						<'fixnums'> when 'true' ->
						    let <_cor39> =
							%% Line 644
							call 'hipe_rtl':'mk_imm'
							    (2)
						    in  let <_cor40> =
							    %% Line 644
							    call 'hipe_rtl':'mk_alu'
								(Ptr, _cor3, 'sub', _cor39)
							in  let <_cor41> =
								%% Line 645
								call 'hipe_rtl':'mk_imm'
								    (0)
							    in  let <_cor42> =
								    %% Line 645
								    call 'hipe_rtl':'mk_load'
									(Header, Ptr, _cor41)
								in  let <_cor43> =
									call 'hipe_rtl':'mk_fixnumop'
									    (UIndex, _cor4, 'untag')
								    in  let <_cor44> =
									    %% Line 647
									    call 'hipe_rtl':'mk_imm'
										(6)
									in  let <_cor45> =
										%% Line 647
										call 'hipe_rtl':'mk_alu'
										    (Arity, Header, 'srl', _cor44)
									    in  let <_cor46> =
										    %% Line 648
										    apply 'gen_element_tail'/8
											(_cor5, Ptr, InvIndex, Arity, Offset, UIndex, _cor2, IndexOkLab)
										in  %% Line 644
										    [_cor40|%% Line 645
											    [_cor42|%% Line 646
												    [_cor43|%% Line 647
													    [_cor45|_cor46]]]]
						%% Line 650
						<Num>
						    when call 'erlang':'is_integer'
							  (_cor0) ->
						    let <_cor47> =
							%% Line 652
							call 'hipe_rtl':'mk_imm'
							    (2)
						    in  let <_cor48> =
							    %% Line 652
							    call 'hipe_rtl':'mk_alu'
								(Ptr, _cor3, 'sub', _cor47)
							in  let <_cor49> =
								%% Line 653
								call 'hipe_rtl':'mk_imm'
								    (_cor0)
							    in  let <_cor50> =
								    %% Line 653
								    apply 'gen_element_tail'/8
									(_cor5, Ptr, InvIndex, _cor49, Offset, UIndex, _cor2, IndexOkLab)
								in  %% Line 652
								    [_cor48|_cor50]
						%% Line 655
						<_cor122> when 'true' ->
						    let <_cor51> =
							%% Line 657
							call 'hipe_rtl':'label_name'
							    (FixnumOkLab)
						    in  let <_cor52> =
							    %% Line 657
							    apply 'test_fixnum'/4
								(_cor4, _cor51, _cor2, 9.89999999999999991118e-01)
							in  let <_cor53> =
								%% Line 659
								call 'hipe_rtl':'mk_imm'
								    (2)
							    in  let <_cor54> =
								    %% Line 659
								    call 'hipe_rtl':'mk_alu'
									(Ptr, _cor3, 'sub', _cor53)
								in  let <_cor55> =
									%% Line 660
									call 'hipe_rtl':'mk_imm'
									    (0)
								    in  let <_cor56> =
									    %% Line 660
									    call 'hipe_rtl':'mk_load'
										(Header, Ptr, _cor55)
									in  let <_cor57> =
										call 'hipe_rtl':'mk_fixnumop'
										    (UIndex, _cor4, 'untag')
									    in  let <_cor58> =
										    %% Line 662
										    call 'hipe_rtl':'mk_imm'
											(6)
										in  let <_cor59> =
											%% Line 662
											call 'hipe_rtl':'mk_alu'
											    (Arity, Header, 'srl', _cor58)
										    in  let <_cor60> =
											    %% Line 663
											    apply 'gen_element_tail'/8
												(_cor5, Ptr, InvIndex, Arity, Offset, UIndex, _cor2, IndexOkLab)
											in  %% Line 657
											    [_cor52|%% Line 658
												    [FixnumOkLab|%% Line 659
														 [_cor54|%% Line 660
															 [_cor56|%% Line 661
																 [_cor57|%% Line 662
																	 [_cor59|_cor60]]]]]]
					      end
	  %% Line 666
	  <Dst,Index,Tuple,FailLabName,'unknown',IndexInfo> when 'true' ->
	      let <FixnumOkLab> =
		  %% Line 667
		  call 'hipe_rtl':'mk_new_label'
		      ()
	      in  let <BoxedOkLab> =
		      %% Line 668
		      call 'hipe_rtl':'mk_new_label'
			  ()
		  in  let <TupleOkLab> =
			  %% Line 669
			  call 'hipe_rtl':'mk_new_label'
			      ()
		      in  let <IndexOkLab> =
			      %% Line 670
			      call 'hipe_rtl':'mk_new_label'
				  ()
			  in  let <Ptr> =
				  %% Line 671
				  call 'hipe_rtl':'mk_new_reg'
				      ()
			      in  let <Header> =
				      %% Line 672
				      call 'hipe_rtl':'mk_new_reg_gcsafe'
					  ()
				  in  let <Tmp> =
					  %% Line 673
					  call 'hipe_rtl':'mk_new_reg_gcsafe'
					      ()
				      in  let <UIndex> =
					      %% Line 674
					      call 'hipe_rtl':'mk_new_reg_gcsafe'
						  ()
					  in  let <Arity> =
						  %% Line 675
						  call 'hipe_rtl':'mk_new_reg_gcsafe'
						      ()
					      in  let <InvIndex> =
						      %% Line 676
						      call 'hipe_rtl':'mk_new_reg_gcsafe'
							  ()
						  in  let <Offset> =
							  %% Line 677
							  call 'hipe_rtl':'mk_new_reg_gcsafe'
							      ()
						      in  %% Line 678
							  case _cor0 of
							    %% Line 679
							    <'fixnums'> when 'true' ->
								let <_cor73> =
								    %% Line 681
								    call 'hipe_rtl':'label_name'
									(BoxedOkLab)
								in  let <_8953> =
									call 'hipe_rtl':'mk_new_reg_gcsafe'
									    ()
								    in  let <Mask> =
									    call 'hipe_rtl':'mk_imm'
										(1)
									in  let <_cor74> =
										call 'hipe_rtl':'mk_alub'
										    (_8953, _cor3, 'and', Mask, 'eq', _cor73, _cor2, %% Line 682
																     9.89999999999999991118e-01)
									    in  let <_cor75> =
										    %% Line 684
										    call 'hipe_rtl':'mk_imm'
											(2)
										in  let <_cor76> =
											%% Line 684
											call 'hipe_rtl':'mk_alu'
											    (Ptr, _cor3, 'sub', _cor75)
										    in  let <_cor77> =
											    %% Line 685
											    call 'hipe_rtl':'mk_imm'
												(0)
											in  let <_cor78> =
												%% Line 685
												call 'hipe_rtl':'mk_load'
												    (Header, Ptr, _cor77)
											    in  let <_cor80> =
												    %% Line 687
												    call 'hipe_rtl':'mk_imm'
													(63)
												in  let <_cor79> =
													%% Line 688
													call 'hipe_rtl':'label_name'
													    (TupleOkLab)
												    in  let <_cor81> =
													    %% Line 686
													    call 'hipe_rtl':'mk_alub'
														(Tmp, Header, 'and', _cor80, %% Line 687
																	     'eq', _cor79, _cor2, %% Line 688
																				  9.89999999999999991118e-01)
													in  let <_cor82> =
														call 'hipe_rtl':'mk_fixnumop'
														    (UIndex, _cor4, 'untag')
													    in  let <_cor83> =
														    %% Line 692
														    call 'hipe_rtl':'mk_imm'
															(6)
														in  let <_cor84> =
															%% Line 691
															call 'hipe_rtl':'mk_alu'
															    (Arity, Header, 'srl', _cor83)
														    in  let <_cor85> =
															    %% Line 693
															    apply 'gen_element_tail'/8
																(_cor5, Ptr, InvIndex, Arity, Offset, UIndex, _cor2, IndexOkLab)
															in  %% Line 681
															    [_cor74|%% Line 683
																    [BoxedOkLab|%% Line 684
																		[_cor76|%% Line 685
																			[_cor78|%% Line 686
																				[_cor81|%% Line 689
																					[TupleOkLab|%% Line 690
																						    [_cor82|%% Line 691
																							    [_cor84|_cor85]]]]]]]]
							    %% Line 695
							    <Num>
								when call 'erlang':'is_integer'
								      (_cor0) ->
								let <_cor86> =
								    %% Line 697
								    call 'hipe_rtl':'label_name'
									(BoxedOkLab)
								in  let <_6385> =
									call 'hipe_rtl':'mk_new_reg_gcsafe'
									    ()
								    in  let <Mask> =
									    call 'hipe_rtl':'mk_imm'
										(1)
									in  let <_cor87> =
										call 'hipe_rtl':'mk_alub'
										    (_6385, _cor3, 'and', Mask, 'eq', _cor86, _cor2, %% Line 698
																     9.89999999999999991118e-01)
									    in  let <_cor88> =
										    %% Line 700
										    call 'hipe_rtl':'mk_imm'
											(2)
										in  let <_cor89> =
											%% Line 700
											call 'hipe_rtl':'mk_alu'
											    (Ptr, _cor3, 'sub', _cor88)
										    in  let <_cor90> =
											    %% Line 701
											    call 'hipe_rtl':'mk_imm'
												(0)
											in  let <_cor91> =
												%% Line 701
												call 'hipe_rtl':'mk_load'
												    (Header, Ptr, _cor90)
											    in  let <_cor93> =
												    %% Line 703
												    call 'hipe_rtl':'mk_imm'
													(63)
												in  let <_cor92> =
													%% Line 704
													call 'hipe_rtl':'label_name'
													    (TupleOkLab)
												    in  let <_cor94> =
													    %% Line 702
													    call 'hipe_rtl':'mk_alub'
														(Tmp, Header, 'and', _cor93, %% Line 703
																	     'eq', _cor92, _cor2, %% Line 704
																				  9.89999999999999991118e-01)
													in  let <_cor95> =
														%% Line 707
														call 'hipe_rtl':'mk_imm'
														    (6)
													    in  let <_cor96> =
														    %% Line 706
														    call 'hipe_rtl':'mk_alu'
															(Arity, Header, 'srl', _cor95)
														in  let <_cor97> =
															%% Line 709
															call 'hipe_rtl':'mk_imm'
															    (_cor0)
														    in  let <_cor98> =
															    %% Line 708
															    apply 'gen_element_tail'/8
																(_cor5, Ptr, InvIndex, Arity, Offset, _cor97, _cor2, IndexOkLab)
															in  %% Line 697
															    [_cor87|%% Line 699
																    [BoxedOkLab|%% Line 700
																		[_cor89|%% Line 701
																			[_cor91|%% Line 702
																				[_cor94|%% Line 705
																					[TupleOkLab|%% Line 706
																						    [_cor96|_cor98]]]]]]]
							    %% Line 710
							    <_cor123> when 'true' ->
								let <_cor99> =
								    %% Line 712
								    call 'hipe_rtl':'label_name'
									(FixnumOkLab)
								in  let <_cor100> =
									%% Line 712
									apply 'test_fixnum'/4
									    (_cor4, _cor99, _cor2, %% Line 713
												   9.89999999999999991118e-01)
								    in  let <_cor101> =
									    %% Line 715
									    call 'hipe_rtl':'label_name'
										(BoxedOkLab)
									in  let <_7688> =
										call 'hipe_rtl':'mk_new_reg_gcsafe'
										    ()
									    in  let <Mask> =
										    call 'hipe_rtl':'mk_imm'
											(1)
										in  let <_cor102> =
											call 'hipe_rtl':'mk_alub'
											    (_7688, _cor3, 'and', Mask, 'eq', _cor101, _cor2, %% Line 716
																	      9.89999999999999991118e-01)
										    in  let <_cor103> =
											    %% Line 718
											    call 'hipe_rtl':'mk_imm'
												(2)
											in  let <_cor104> =
												%% Line 718
												call 'hipe_rtl':'mk_alu'
												    (Ptr, _cor3, 'sub', _cor103)
											    in  let <_cor105> =
												    %% Line 719
												    call 'hipe_rtl':'mk_imm'
													(0)
												in  let <_cor106> =
													%% Line 719
													call 'hipe_rtl':'mk_load'
													    (Header, Ptr, _cor105)
												    in  let <_cor108> =
													    %% Line 721
													    call 'hipe_rtl':'mk_imm'
														(63)
													in  let <_cor107> =
														%% Line 722
														call 'hipe_rtl':'label_name'
														    (TupleOkLab)
													    in  let <_cor109> =
														    %% Line 720
														    call 'hipe_rtl':'mk_alub'
															(Tmp, Header, 'and', _cor108, %% Line 721
																		      'eq', _cor107, _cor2, %% Line 722
																					    9.89999999999999991118e-01)
														in  let <_cor110> =
															call 'hipe_rtl':'mk_fixnumop'
															    (UIndex, _cor4, 'untag')
														    in  let <_cor111> =
															    %% Line 726
															    call 'hipe_rtl':'mk_imm'
																(6)
															in  let <_cor112> =
																%% Line 725
																call 'hipe_rtl':'mk_alu'
																    (Arity, Header, 'srl', _cor111)
															    in  let <_cor113> =
																    %% Line 727
																    apply 'gen_element_tail'/8
																	(_cor5, Ptr, InvIndex, Arity, Offset, UIndex, _cor2, IndexOkLab)
																in  %% Line 712
																    [_cor100|%% Line 714
																	     [FixnumOkLab|%% Line 715
																			  [_cor102|%% Line 717
																				   [BoxedOkLab|%% Line 718
																					       [_cor104|%% Line 719
																							[_cor106|%% Line 720
																								 [_cor109|%% Line 723
																									  [TupleOkLab|%% Line 724
																										      [_cor110|%% Line 725
																											       [_cor112|_cor113]]]]]]]]]]
							  end
	  ( <_cor120,_cor119,_cor118,_cor117,_cor116,_cor115> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'element',6}}] )
	    -| ['compiler_generated'] )
	end
'gen_element_tail'/8 =
    %% Line 731
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor8> =
	    %% Line 737
	    call 'hipe_rtl':'mk_alu'
		(_cor5, _cor4, 'sub', _cor2)
	in  let <_cor9> =
		%% Line 739
		call 'hipe_rtl':'label_name'
		    (_cor0)
	    in  let <_cor10> =
		    %% Line 738
		    call 'hipe_rtl':'mk_branch'
			(_cor5, 'geu', _cor4, _cor1, _cor9, %% Line 739
							    1.00000000000000002082e-02)
		in  let <_cor11> =
			%% Line 742
			call 'hipe_rtl_arch':'log2_word_size'
			    ()
		    in  let <_cor12> =
			    %% Line 742
			    call 'hipe_rtl':'mk_imm'
				(_cor11)
			in  let <_cor13> =
				%% Line 741
				call 'hipe_rtl':'mk_alu'
				    (_cor3, _cor2, 'sll', _cor12)
			    in  let <_cor14> =
				    %% Line 743
				    call 'hipe_rtl':'mk_load'
					(_cor7, _cor6, _cor3)
				in  %% Line 737
				    [_cor8|%% Line 738
					   [_cor10|%% Line 740
						   [_cor0|%% Line 741
							  [_cor13|%% Line 743
								  [_cor14|[]]]]]]
'unsafe_closure_element'/3 =
    %% Line 747
    fun (_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 749
	    call 'hipe_bifs':'get_rts_param'
		(10)
	in  let <_cor9> =
		%% Line 749
		call 'erlang':'+'
		    (-2, _cor7)
	    in  let <_cor5> =
		    %% Line 751
		    call 'hipe_rtl_arch':'word_size'
			()
		in  let <_cor3> =
			%% Line 751
			call 'hipe_rtl':'imm_value'
			    (_cor1)
		    in  let <_cor4> =
			    %% Line 751
			    call 'erlang':'-'
				(_cor3, 1)
			in  let <_cor6> =
				%% Line 751
				call 'erlang':'*'
				    (_cor5, _cor4)
			    in  let <Offset> =
				    %% Line 751
				    call 'erlang':'+'
					(_cor9, _cor6)
				in  let <_cor11> =
					%% Line 752
					call 'hipe_rtl':'mk_imm'
					    (Offset)
				    in  %% Line 752
					call 'hipe_rtl':'mk_load'
					    (_cor2, _cor0, _cor11)
'mk_fun_header'/0 =
    %% Line 754
    fun () ->
	let <_cor2> =
	    %% Line 755
	    call 'hipe_bifs':'get_rts_param'
		(11)
	in  let <_cor3> =
		%% Line 755
		call 'erlang':'-'
		    (_cor2, 2)
	    in  let <_8524> =
		    call 'erlang':'bsl'
			(_cor3, 6)
		in  let <_cor4> =
			call 'erlang':'+'
			    (_8524, 20)
		    in  %% Line 755
			call 'hipe_rtl':'mk_imm'
			    (_cor4)
'tag_fun'/2 =
    %% Line 757
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    call 'hipe_rtl':'mk_imm'
		(2)
	in  call 'hipe_rtl':'mk_alu'
		(_cor1, _cor0, 'add', _cor2)
'if_fun_get_arity_and_address'/5 =
    %% Line 764
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <TrueLab0> =
	    %% Line 770
	    call 'hipe_rtl':'mk_new_label'
		()
	in  let <_cor6> =
		%% Line 772
		call 'hipe_rtl':'label_name'
		    (TrueLab0)
	    in  let <IsFunCode> =
		    %% Line 772
		    apply 'test_closure'/4
			(_cor2, _cor6, _cor1, _cor0)
		in  let <_cor8> =
			%% Line 778
			call 'hipe_bifs':'get_rts_param'
			    (8)
		    in  let <_cor10> =
			    %% Line 777
			    call 'erlang':'+'
				(-2, _cor8)
			in  let <_cor11> =
				%% Line 777
				call 'hipe_rtl':'mk_imm'
				    (_cor10)
			    in  let <_cor12> =
				    %% Line 776
				    call 'hipe_rtl':'mk_load'
					(_cor4, _cor2, _cor11)
				in  let <_cor13> =
					%% Line 781
					call 'hipe_bifs':'get_rts_param'
					    (7)
				    in  let <_cor15> =
					    %% Line 780
					    call 'erlang':'+'
						(-2, _cor13)
					in  let <_cor16> =
						%% Line 780
						call 'hipe_rtl':'mk_imm'
						    (_cor15)
					    in  let <_cor17> =
						    %% Line 779
						    call 'hipe_rtl':'mk_load'
							(_cor3, _cor2, _cor16)
						in  let <GetArityCode> =
							%% Line 774
							[TrueLab0|%% Line 776
								  [_cor12|%% Line 779
									  [_cor17|%% Line 781
										  []]]]
						    in  %% Line 782
							call 'erlang':'++'
							    (IsFunCode, GetArityCode)
'create_heap_binary'/3 =
    %% Line 790
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Base,Size,Dst>
	      when call 'erlang':'is_integer'
		    (_cor1) ->
	      let <_1990> =
		  %% Line 791
		  call 'hipe_rtl_arch':'heap_pointer'
		      ()
	      in  %% Line 791
		  case _1990 of
		    <{GetHPInsn,HP,PutHPInsn}> when 'true' ->
			let <WordSize> =
			    %% Line 792
			    call 'hipe_rtl_arch':'word_size'
				()
			in  let <_cor5> =
				%% Line 793
				call 'erlang':'*'
				    (3, WordSize)
			    in  let <_cor6> =
				    %% Line 793
				    call 'erlang':'+'
					(_cor1, _cor5)
				in  let <_cor7> =
					%% Line 793
					call 'erlang':'-'
					    (_cor6, 1)
				    in  let <NoWords> =
					    %% Line 793
					    call 'erlang':'div'
						(_cor7, WordSize)
					in  let <NoBytes> =
						%% Line 794
						call 'erlang':'*'
						    (NoWords, WordSize)
					    in  let <_cor12> =
						    %% Line 795
						    call 'erlang':'-'
							(NoWords, 1)
						in  let <_4551> =
							call 'erlang':'bsl'
							    (_cor12, 6)
						    in  let <_cor13> =
							    call 'erlang':'+'
								(_4551, 36)
							in  let <HeapBinHeader> =
								%% Line 795
								call 'hipe_rtl':'mk_imm'
								    (_cor13)
							    in  let <_9982> =
								    call 'hipe_rtl':'mk_imm'
									(2)
								in  let <_cor15> =
									call 'hipe_rtl':'mk_alu'
									    (_cor0, HP, 'add', _9982)
								    in  let <_cor16> =
									    %% Line 799
									    apply 'set_field_from_pointer'/3
										({'heap_bin','thing_word'}, HP, HeapBinHeader)
									in  let <_cor17> =
										%% Line 800
										call 'hipe_rtl':'mk_imm'
										    (_cor1)
									    in  let <_cor18> =
										    %% Line 800
										    apply 'set_field_from_pointer'/3
											({'heap_bin','binsize'}, HP, _cor17)
										in  let <_cor19> =
											%% Line 801
											call 'hipe_rtl':'mk_imm'
											    (16)
										    in  let <_cor20> =
											    %% Line 801
											    call 'hipe_rtl':'mk_alu'
												(_cor2, HP, 'add', _cor19)
											in  let <_cor21> =
												%% Line 802
												call 'hipe_rtl':'mk_imm'
												    (NoBytes)
											    in  let <_cor22> =
												    %% Line 802
												    call 'hipe_rtl':'mk_alu'
													(HP, HP, 'add', _cor21)
												in  %% Line 797
												    [GetHPInsn|%% Line 798
													       [_cor15|%% Line 799
														       [_cor16|%% Line 800
															       [_cor18|%% Line 801
																       [_cor20|%% Line 802
																	       [_cor22|%% Line 803
																		       [PutHPInsn|[]]]]]]]]
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1990})
		      -| ['compiler_generated'] )
		  end
	  %% Line 805
	  <Base,Size,Dst> when 'true' ->
	      let <_371> =
		  %% Line 806
		  call 'hipe_rtl_arch':'heap_pointer'
		      ()
	      in  %% Line 806
		  case _371 of
		    <{GetHPInsn,HP,PutHPInsn}> when 'true' ->
			let <WordSize> =
			    %% Line 807
			    call 'hipe_rtl_arch':'word_size'
				()
			in  let <Log2WordSize> =
				%% Line 808
				call 'hipe_rtl_arch':'log2_word_size'
				    ()
			    in  let <EvenWordSize> =
				    %% Line 809
				    call 'hipe_rtl':'mk_new_reg_gcsafe'
					()
				in  let <Tmp1> =
					%% Line 810
					call 'hipe_rtl':'mk_new_reg_gcsafe'
					    ()
				    in  let <Tmp2> =
					    %% Line 811
					    call 'hipe_rtl':'mk_new_reg_gcsafe'
						()
					in  let <Header> =
						%% Line 812
						call 'hipe_rtl':'mk_new_reg_gcsafe'
						    ()
					    in  let <Tmp3> =
						    %% Line 813
						    call 'hipe_rtl':'mk_new_reg'
							()
						in  let <Tmp4> =
							%% Line 814
							call 'hipe_rtl':'mk_new_reg'
							    ()
						    in  let <_cor32> =
							    %% Line 816
							    call 'erlang':'-'
								(WordSize, 1)
							in  let <_cor33> =
								%% Line 816
								call 'hipe_rtl':'mk_imm'
								    (_cor32)
							    in  let <_cor34> =
								    %% Line 816
								    call 'hipe_rtl':'mk_alu'
									(Tmp1, _cor1, 'add', _cor33)
								in  let <_cor35> =
									%% Line 817
									call 'hipe_rtl':'mk_imm'
									    (Log2WordSize)
								    in  let <_cor36> =
									    %% Line 817
									    call 'hipe_rtl':'mk_alu'
										(EvenWordSize, Tmp1, 'sra', _cor35)
									in  let <_cor37> =
										%% Line 818
										call 'hipe_rtl':'mk_imm'
										    (1)
									    in  let <_cor38> =
										    %% Line 818
										    call 'hipe_rtl':'mk_alu'
											(Tmp2, EvenWordSize, 'add', _cor37)
										in  let <_cor39> =
											%% Line 819
											call 'hipe_rtl':'mk_imm'
											    (16)
										    in  let <_cor40> =
											    %% Line 819
											    call 'hipe_rtl':'mk_alu'
												(_cor2, HP, 'add', _cor39)
											in  let <_cor43> =
												%% Line 820
												apply 'mk_var_header'/3
												    (Header, Tmp2, 36)
											    in  let <_cor44> =
												    %% Line 821
												    apply 'set_field_from_pointer'/3
													({'heap_bin','thing_word'}, HP, Header)
												in  let <_cor45> =
													%% Line 822
													apply 'set_field_from_pointer'/3
													    ({'heap_bin','binsize'}, HP, _cor1)
												    in  let <_4484> =
													    call 'hipe_rtl':'mk_imm'
														(2)
													in  let <_cor46> =
														call 'hipe_rtl':'mk_alu'
														    (_cor0, HP, 'add', _4484)
													    in  let <_cor47> =
														    %% Line 824
														    call 'hipe_rtl':'mk_alu'
															(Tmp3, HP, 'add', _cor1)
														in  let <_cor48> =
															%% Line 825
															call 'erlang':'*'
															    (3, WordSize)
														    in  let <_cor49> =
															    %% Line 825
															    call 'erlang':'-'
																(_cor48, 1)
															in  let <_cor50> =
																%% Line 825
																call 'hipe_rtl':'mk_imm'
																    (_cor49)
															    in  let <_cor51> =
																    %% Line 825
																    call 'hipe_rtl':'mk_alu'
																	(Tmp4, Tmp3, 'add', _cor50)
																in  let <_cor52> =
																	%% Line 826
																	call 'erlang':'-'
																	    (WordSize)
																    in  let <_cor53> =
																	    %% Line 826
																	    call 'hipe_rtl':'mk_imm'
																		(_cor52)
																	in  let <_cor54> =
																		%% Line 826
																		call 'hipe_rtl':'mk_alu'
																		    (HP, Tmp4, 'and', _cor53)
																	    in  %% Line 815
																		[GetHPInsn|%% Line 816
																			   [_cor34|%% Line 817
																				   [_cor36|%% Line 818
																					   [_cor38|%% Line 819
																						   [_cor40|%% Line 820
																							   [_cor43|%% Line 821
																								   [_cor44|%% Line 822
																									   [_cor45|%% Line 823
																										   [_cor46|%% Line 824
																											   [_cor47|%% Line 825
																												   [_cor51|%% Line 826
																													   [_cor54|%% Line 827
																														   [PutHPInsn|[]]]]]]]]]]]]]]
		    ( <_cor23> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_371})
		      -| ['compiler_generated'] )
		  end
	end
'create_refc_binary'/3 =
    %% Line 829
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 830
	    call 'hipe_rtl':'mk_imm'
		(0)
	in  %% Line 830
	    apply 'create_refc_binary'/4
		(_cor2, _cor1, _cor3, _cor0)
'create_refc_binary'/4 =
    %% Line 832
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_7817> =
	    %% Line 833
	    call 'hipe_rtl_arch':'heap_pointer'
		()
	in  %% Line 833
	    case _7817 of
	      <{GetHPInsn,HP,PutHPInsn}> when 'true' ->
		  let <ProcBinHeader> =
		      %% Line 834
		      call 'hipe_rtl':'mk_imm'
			  (352)
		  in  let <WordSize> =
			  %% Line 835
			  call 'hipe_rtl_arch':'word_size'
			      ()
		      in  let <Val> =
			      %% Line 836
			      call 'hipe_rtl':'mk_new_reg'
				  ()
			  in  let <_8818> =
				  call 'hipe_rtl':'mk_imm'
				      (2)
			      in  let <_cor12> =
				      call 'hipe_rtl':'mk_alu'
					  (_cor0, HP, 'add', _8818)
				  in  let <_cor13> =
					  %% Line 839
					  apply 'set_field_from_pointer'/3
					      ({'proc_bin','thing_word'}, HP, ProcBinHeader)
				      in  let <_cor14> =
					      %% Line 840
					      apply 'set_field_from_pointer'/3
						  ({'proc_bin','binsize'}, HP, _cor2)
					  in  let <_cor15> =
						  %% Line 841
						  apply 'heap_arch_spec'/1
						      (HP)
					      in  let <_cor16> =
						      %% Line 842
						      call 'hipe_rtl':'mk_imm'
							  (24)
						  in  let <_cor17> =
							  %% Line 842
							  call 'hipe_rtl':'mk_alu'
							      (Val, _cor3, 'sub', _cor16)
						      in  let <_cor18> =
							      %% Line 843
							      apply 'set_field_from_pointer'/3
								  ({'proc_bin','val'}, HP, Val)
							  in  let <_cor19> =
								  %% Line 844
								  apply 'set_field_from_pointer'/3
								      ({'proc_bin','bytes'}, HP, _cor3)
							      in  let <_cor20> =
								      %% Line 845
								      apply 'set_field_from_pointer'/3
									  ({'proc_bin','flags'}, HP, _cor1)
								  in  let <_cor21> =
									  %% Line 846
									  call 'erlang':'*'
									      (6, WordSize)
								      in  let <_cor22> =
									      %% Line 846
									      call 'hipe_rtl':'mk_imm'
										  (_cor21)
									  in  let <_cor23> =
										  %% Line 846
										  call 'hipe_rtl':'mk_alu'
										      (HP, HP, 'add', _cor22)
									      in  %% Line 837
										  [GetHPInsn|%% Line 838
											     [_cor12|%% Line 839
												     [_cor13|%% Line 840
													     [_cor14|%% Line 841
														     [_cor15|%% Line 842
															     [_cor17|%% Line 843
																     [_cor18|%% Line 844
																	     [_cor19|%% Line 845
																		     [_cor20|%% Line 846
																			     [_cor23|%% Line 847
																				     [PutHPInsn|[]]]]]]]]]]]]
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_7817})
		-| ['compiler_generated'] )
	    end
'heap_arch_spec'/1 =
    %% Line 849
    fun (_cor0) ->
	let <Tmp1> =
	    %% Line 850
	    call 'hipe_rtl':'mk_new_reg'
		()
	in  let <_cor2> =
		%% Line 851
		call 'hipe_bifs':'get_rts_param'
		    (24)
	    in  let <_cor3> =
		    %% Line 851
		    call 'hipe_rtl_arch':'pcb_load'
			(Tmp1, _cor2)
		in  let <_cor4> =
			%% Line 852
			apply 'set_field_from_pointer'/3
			    ({'proc_bin','next'}, _cor0, Tmp1)
		    in  let <_cor5> =
			    %% Line 853
			    call 'hipe_bifs':'get_rts_param'
				(24)
			in  let <_cor6> =
				%% Line 853
				call 'hipe_rtl_arch':'pcb_store'
				    (_cor5, _cor0)
			    in  %% Line 851
				[_cor3|%% Line 852
				       [_cor4|%% Line 853
					      [_cor6|[]]]]
'test_heap_binary'/3 =
    %% Line 855
    fun (_cor2,_cor1,_cor0) ->
	let <Tmp1> =
	    %% Line 856
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <Tmp2> =
		%% Line 857
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <_cor3> =
		    call 'hipe_rtl':'mk_imm'
			(-2)
		in  let <_cor5> =
			call 'hipe_rtl':'mk_load'
			    (Tmp1, _cor2, _cor3)
		    in  let <_cor6> =
			    %% Line 859
			    call 'hipe_rtl':'mk_imm'
				(63)
			in  let <_cor7> =
				%% Line 859
				call 'hipe_rtl':'mk_alu'
				    (Tmp2, Tmp1, 'and', _cor6)
			    in  let <_cor10> =
				    %% Line 860
				    call 'hipe_rtl':'mk_imm'
					(36)
				in  let <_cor11> =
					%% Line 860
					call 'hipe_rtl':'mk_branch'
					    (Tmp2, 'eq', _cor10, _cor1, _cor0)
				    in  %% Line 858
					[_cor5|%% Line 859
					       [_cor7|%% Line 860
						      [_cor11|%% Line 861
							      []]]]
'mk_sub_binary'/6 =
    %% Line 863
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 865
	    call 'hipe_rtl':'mk_imm'
		(0)
	in  %% Line 864
	    apply 'mk_sub_binary'/7
		(_cor5, _cor4, _cor3, _cor2, _cor1, _cor6, _cor0)
'mk_sub_binary'/7 =
    %% Line 867
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_8692> =
	    %% Line 869
	    call 'hipe_rtl_arch':'heap_pointer'
		()
	in  %% Line 869
	    case _8692 of
	      <{GetHPInsn,HP,PutHPInsn}> when 'true' ->
		  let <WordSize> =
		      %% Line 870
		      call 'hipe_rtl_arch':'word_size'
			  ()
		  in  let <_5744> =
			  call 'hipe_rtl':'mk_imm'
			      (2)
		      in  let <_cor9> =
			      call 'hipe_rtl':'mk_alu'
				  (_cor6, HP, 'add', _5744)
			  in  let <_cor10> =
				  %% Line 873
				  apply 'build_sub_binary'/7
				      (_cor6, _cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
			      in  let <_cor11> =
				      %% Line 874
				      call 'erlang':'*'
					  (5, WordSize)
				  in  let <_cor12> =
					  %% Line 874
					  call 'hipe_rtl':'mk_imm'
					      (_cor11)
				      in  let <_cor13> =
					      %% Line 874
					      call 'hipe_rtl':'mk_alu'
						  (HP, HP, 'add', _cor12)
					  in  %% Line 871
					      [GetHPInsn|%% Line 872
							 [_cor9|%% Line 873
								[_cor10|%% Line 874
									[_cor13|%% Line 875
										[PutHPInsn|[]]]]]]
	      ( <_cor7> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_8692})
		-| ['compiler_generated'] )
	    end
'build_sub_binary'/7 =
    %% Line 877
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Head> =
	    %% Line 879
	    call 'hipe_rtl':'mk_imm'
		(232)
	in  let <_cor12> =
		%% Line 880
		apply 'set_field_from_term'/3
		    ({'sub_binary','thing_word'}, _cor6, Head)
	    in  let <_cor13> =
		    %% Line 881
		    apply 'set_field_from_term'/3
			({'sub_binary','binsize'}, _cor6, _cor5)
		in  let <_cor14> =
			%% Line 882
			apply 'set_field_from_term'/3
			    ({'sub_binary','offset'}, _cor6, _cor4)
		    in  let <_cor15> =
			    %% Line 883
			    apply 'set_field_from_term'/3
				({'sub_binary','bitsize'}, _cor6, _cor3)
			in  let <_cor16> =
				%% Line 884
				apply 'set_field_from_term'/3
				    ({'sub_binary','bitoffset'}, _cor6, _cor2)
			    in  let <_cor17> =
				    %% Line 885
				    apply 'set_field_from_term'/3
					({'sub_binary','is_writable'}, _cor6, _cor1)
				in  let <_cor18> =
					%% Line 886
					apply 'set_field_from_term'/3
					    ({'sub_binary','orig'}, _cor6, _cor0)
				    in  %% Line 880
					[_cor12|%% Line 881
						[_cor13|%% Line 882
							[_cor14|%% Line 883
								[_cor15|%% Line 884
									[_cor16|%% Line 885
										[_cor17|%% Line 886
											[_cor18|[]]]]]]]]
'test_subbinary'/3 =
    %% Line 888
    fun (_cor2,_cor1,_cor0) ->
	let <Tmp1> =
	    %% Line 889
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <Tmp2> =
		%% Line 890
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <_cor3> =
		    call 'hipe_rtl':'mk_imm'
			(-2)
		in  let <_cor5> =
			call 'hipe_rtl':'mk_load'
			    (Tmp1, _cor2, _cor3)
		    in  let <_cor6> =
			    %% Line 892
			    call 'hipe_rtl':'mk_imm'
				(63)
			in  let <_cor7> =
				%% Line 892
				call 'hipe_rtl':'mk_alu'
				    (Tmp2, Tmp1, 'and', _cor6)
			    in  let <_cor10> =
				    %% Line 893
				    call 'hipe_rtl':'mk_imm'
					(40)
				in  let <_cor11> =
					%% Line 893
					call 'hipe_rtl':'mk_branch'
					    (Tmp2, 'eq', _cor10, _cor1, _cor0)
				    in  %% Line 891
					[_cor5|%% Line 892
					       [_cor7|%% Line 893
						      [_cor11|[]]]]
'unsafe_load_float'/3 =
    %% Line 899
    fun (_cor2,_cor1,_cor0) ->
	let <WordSize> =
	    %% Line 900
	    call 'hipe_rtl_arch':'word_size'
		()
	in  let <Offset1> =
		%% Line 901
		call 'erlang':'+'
		    (-2, WordSize)
	    in  let <Offset2> =
		    %% Line 902
		    call 'erlang':'+'
			(Offset1, 4)
		in  let <_3055> =
			%% Line 903
			call 'hipe_rtl_arch':'endianess'
			    ()
		    in  %% Line 903
			case _3055 of
			  %% Line 904
			  <'little'> when 'true' ->
			      let <_cor7> =
				  %% Line 905
				  call 'hipe_rtl':'mk_imm'
				      (Offset1)
			      in  let <_cor8> =
				      %% Line 905
				      call 'hipe_rtl':'mk_load'
					  (_cor2, _cor0, _cor7, 'int32', 'unsigned')
				  in  let <_cor9> =
					  %% Line 906
					  call 'hipe_rtl':'mk_imm'
					      (Offset2)
				      in  let <_cor10> =
					      %% Line 906
					      call 'hipe_rtl':'mk_load'
						  (_cor1, _cor0, _cor9, 'int32', 'unsigned')
					  in  %% Line 905
					      [_cor8|%% Line 906
						     [_cor10|[]]]
			  %% Line 907
			  <'big'> when 'true' ->
			      let <_cor11> =
				  %% Line 908
				  call 'hipe_rtl':'mk_imm'
				      (Offset1)
			      in  let <_cor12> =
				      %% Line 908
				      call 'hipe_rtl':'mk_load'
					  (_cor1, _cor0, _cor11, 'int32', 'unsigned')
				  in  let <_cor13> =
					  %% Line 909
					  call 'hipe_rtl':'mk_imm'
					      (Offset2)
				      in  let <_cor14> =
					      %% Line 909
					      call 'hipe_rtl':'mk_load'
						  (_cor2, _cor0, _cor13, 'int32', 'unsigned')
					  in  %% Line 908
					      [_cor12|%% Line 909
						      [_cor14|[]]]
			  ( <_cor15> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_3055})
			    -| ['compiler_generated'] )
			end
'unsafe_untag_float'/2 =
    %% Line 912
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 913
	    call 'hipe_rtl_arch':'word_size'
		()
	in  let <Offset> =
		%% Line 913
		call 'erlang':'+'
		    (-2, _cor2)
	    in  let <_cor5> =
		    %% Line 914
		    call 'hipe_rtl':'mk_imm'
			(Offset)
		in  let <_cor6> =
			%% Line 914
			call 'hipe_rtl':'mk_fload'
			    (_cor1, _cor0, _cor5)
		    in  %% Line 914
			[_cor6|[]]
'unsafe_tag_float'/2 =
    %% Line 916
    fun (_cor1,_cor0) ->
	let <_5061> =
	    %% Line 917
	    call 'hipe_rtl_arch':'heap_pointer'
		()
	in  %% Line 917
	    case _5061 of
	      <{GetHPInsn,HP,PutHPInsn}> when 'true' ->
		  let <_cor2> =
		      call 'hipe_rtl_arch':'word_size'
			  ()
		  in  let <_cor3> =
			  call 'erlang':'div'
			      (8, _cor2)
		      in  let <_917> =
			      call 'erlang':'bsl'
				  (_cor3, 6)
			  in  let <_cor3> =
				  call 'erlang':'+'
				      (_917, 24)
			      in  let <Head> =
				      %% Line 918
				      call 'hipe_rtl':'mk_imm'
					  (_cor3)
				  in  let <WordSize> =
					  %% Line 919
					  call 'hipe_rtl_arch':'word_size'
					      ()
				      in  let <_cor6> =
					      %% Line 921
					      call 'hipe_rtl':'mk_imm'
						  (0)
					  in  let <_cor7> =
						  %% Line 921
						  call 'hipe_rtl':'mk_store'
						      (HP, _cor6, Head)
					      in  let <_cor8> =
						      %% Line 922
						      call 'hipe_rtl':'mk_imm'
							  (WordSize)
						  in  let <_cor9> =
							  %% Line 922
							  call 'hipe_rtl':'mk_fstore'
							      (HP, _cor8, _cor0)
						      in  let <_cor2> =
							      call 'hipe_rtl':'mk_imm'
								  (2)
							  in  let <_cor10> =
								  call 'hipe_rtl':'mk_alu'
								      (_cor1, HP, 'add', _cor2)
							      in  let <_cor11> =
								      %% Line 924
								      call 'erlang':'+'
									  (WordSize, 8)
								  in  let <_cor12> =
									  %% Line 924
									  call 'hipe_rtl':'mk_imm'
									      (_cor11)
								      in  let <_cor13> =
									      %% Line 924
									      call 'hipe_rtl':'mk_alu'
										  (HP, HP, 'add', _cor12)
									  in  %% Line 920
									      [GetHPInsn|%% Line 921
											 [_cor7|%% Line 922
												[_cor9|%% Line 923
												       [_cor10|%% Line 924
													       [_cor13|%% Line 925
														       [PutHPInsn|[]]]]]]]
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_5061})
		-| ['compiler_generated'] )
	    end
'unsafe_mk_big'/3 =
    %% Line 931
    fun (_cor2,_cor1,_cor0) ->
	let <WordSize> =
	    %% Line 932
	    call 'hipe_rtl_arch':'word_size'
		()
	in  let <_8124> =
		%% Line 933
		call 'hipe_rtl_arch':'heap_pointer'
		    ()
	    in  %% Line 933
		case _8124 of
		  <{GetHPInsn,HP,PutHPInsn}> when 'true' ->
		      let <PosHead> =
			  %% Line 934
			  call 'hipe_rtl':'mk_imm'
			      (72)
		      in  let <NegHead> =
			      %% Line 935
			      call 'hipe_rtl':'mk_imm'
				  (76)
			  in  let <PosLabel> =
				  %% Line 936
				  call 'hipe_rtl':'mk_new_label'
				      ()
			      in  let <NegLabel> =
				      %% Line 937
				      call 'hipe_rtl':'mk_new_label'
					  ()
				  in  let <JoinLabel> =
					  %% Line 938
					  call 'hipe_rtl':'mk_new_label'
					      ()
				      in  let <_cor32> =
					      %% Line 940
					      case _cor0 of
						%% Line 941
						<'unsigned'> when 'true' ->
						    let <_cor16> =
							%% Line 942
							call 'erlang':'*'
							    (0, WordSize)
						    in  let <_cor17> =
							    %% Line 942
							    call 'hipe_rtl':'mk_imm'
								(_cor16)
							in  let <_cor18> =
								%% Line 942
								call 'hipe_rtl':'mk_store'
								    (HP, _cor17, PosHead)
							    in  %% Line 942
								[_cor18|[]]
						%% Line 943
						<'signed'> when 'true' ->
						    let <_cor21> =
							%% Line 944
							call 'hipe_rtl':'mk_imm'
							    (0)
						    in  let <_cor20> =
							    %% Line 945
							    call 'hipe_rtl':'label_name'
								(PosLabel)
							in  let <_cor19> =
								%% Line 946
								call 'hipe_rtl':'label_name'
								    (NegLabel)
							    in  let <_cor22> =
								    %% Line 944
								    call 'hipe_rtl':'mk_branch'
									(_cor1, 'ge', _cor21, _cor20, _cor19)
								in  let <_cor23> =
									%% Line 948
									call 'erlang':'*'
									    (0, WordSize)
								    in  let <_cor24> =
									    %% Line 948
									    call 'hipe_rtl':'mk_imm'
										(_cor23)
									in  let <_cor25> =
										%% Line 948
										call 'hipe_rtl':'mk_store'
										    (HP, _cor24, PosHead)
									    in  let <_cor26> =
										    %% Line 949
										    call 'hipe_rtl':'label_name'
											(JoinLabel)
										in  let <_cor27> =
											%% Line 949
											call 'hipe_rtl':'mk_goto'
											    (_cor26)
										    in  let <_cor28> =
											    %% Line 951
											    call 'erlang':'*'
												(0, WordSize)
											in  let <_cor29> =
												%% Line 951
												call 'hipe_rtl':'mk_imm'
												    (_cor28)
											    in  let <_cor30> =
												    %% Line 951
												    call 'hipe_rtl':'mk_store'
													(HP, _cor29, NegHead)
												in  %% Line 944
												    [_cor22|%% Line 947
													    [PosLabel|%% Line 948
														      [_cor25|%% Line 949
															      [_cor27|%% Line 950
																      [NegLabel|%% Line 951
																		[_cor30|%% Line 952
																			[JoinLabel|[]]]]]]]]
						( <_cor31> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_cor0})
						  -| ['compiler_generated'] )
					      end
					  in  let <_cor34> =
						  %% Line 955
						  call 'erlang':'*'
						      (1, WordSize)
					      in  let <_cor35> =
						      %% Line 955
						      call 'hipe_rtl':'mk_imm'
							  (_cor34)
						  in  let <_cor36> =
							  %% Line 955
							  call 'hipe_rtl':'mk_store'
							      (HP, _cor35, _cor1)
						      in  let <_7373> =
							      call 'hipe_rtl':'mk_imm'
								  (2)
							  in  let <_cor37> =
								  call 'hipe_rtl':'mk_alu'
								      (_cor2, HP, 'add', _7373)
							      in  let <_cor38> =
								      %% Line 957
								      call 'erlang':'*'
									  (2, WordSize)
								  in  let <_cor39> =
									  %% Line 957
									  call 'hipe_rtl':'mk_imm'
									      (_cor38)
								      in  let <_cor40> =
									      %% Line 957
									      call 'hipe_rtl':'mk_alu'
										  (HP, HP, 'add', _cor39)
									  in  let <RestCode> =
										  %% Line 955
										  [_cor36|%% Line 956
											  [_cor37|%% Line 957
												  [_cor40|%% Line 958
													  [PutHPInsn|[]]]]]
									      in  let <_cor42> =
										      %% Line 959
										      call 'erlang':'++'
											  (_cor32, RestCode)
										  in  %% Line 959
										      [GetHPInsn|_cor42]
		  ( <_cor4> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_8124})
		    -| ['compiler_generated'] )
		end
'get_one_word_pos_bignum'/3 =
    %% Line 961
    fun (_cor2,_cor1,_cor0) ->
	let <Header> =
	    %% Line 962
	    call 'hipe_rtl':'mk_new_reg'
		()
	in  let <HalfLbl> =
		%% Line 963
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <HalfLblName> =
		    %% Line 964
		    call 'hipe_rtl':'label_name'
			(HalfLbl)
		in  let <WordSize> =
			%% Line 965
			call 'hipe_rtl_arch':'word_size'
			    ()
		    in  let <PosHead> =
			    %% Line 966
			    call 'hipe_rtl':'mk_imm'
				(72)
			in  let <_cor3> =
				call 'hipe_rtl':'mk_imm'
				    (-2)
			    in  let <_cor11> =
				    call 'hipe_rtl':'mk_load'
					(Header, _cor1, _cor3)
				in  let <_cor12> =
					%% Line 968
					call 'hipe_rtl':'mk_branch'
					    (Header, 'eq', PosHead, HalfLblName, _cor0)
				    in  let <_cor13> =
					    %% Line 970
					    call 'erlang':'*'
						(1, WordSize)
					in  let <_cor14> =
						%% Line 971
						call 'erlang':'-'
						    (_cor13, 2)
					    in  let <_cor15> =
						    %% Line 970
						    call 'hipe_rtl':'mk_imm'
							(_cor14)
						in  let <_cor16> =
							%% Line 970
							call 'hipe_rtl':'mk_load'
							    (_cor2, _cor1, _cor15)
						    in  %% Line 967
							[_cor11|%% Line 968
								[_cor12|%% Line 969
									[HalfLbl|%% Line 970
										 [_cor16|%% Line 971
											 []]]]]
'bignum_sizeneed'/1 =
    %% Line 975
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 976
	    call 'hipe_rtl_arch':'word_size'
		()
	in  let <WordSizeBits> =
		%% Line 976
		call 'erlang':'*'
		    (_cor1, 8)
	    in  let <_cor3> =
		    %% Line 977
		    call 'erlang':'bsl'
			(1, _cor0)
		in  let <_6383> =
			%% Line 977
			apply 'is_fixnum'/1
			    (_cor3)
		    in  %% Line 977
			case _6383 of
			  %% Line 978
			  <'true'> when 'true' ->
			      %% Line 979
			      0
			  %% Line 980
			  <'false'> when 'true' ->
			      let <_cor4> =
				  %% Line 981
				  call 'erlang':'-'
				      (WordSizeBits, 1)
			      in  let <_cor5> =
				      %% Line 981
				      call 'erlang':'+'
					  (_cor0, _cor4)
				  in  let <_cor6> =
					  %% Line 981
					  call 'erlang':'div'
					      (_cor5, WordSizeBits)
				      in  %% Line 981
					  call 'erlang':'+'
					      (_cor6, 1)
			  ( <_cor7> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_6383})
			    -| ['compiler_generated'] )
			end
'bignum_sizeneed_code'/2 =
    %% Line 984
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 985
	    call 'hipe_rtl_arch':'word_size'
		()
	in  let <WordSizeBits> =
		%% Line 985
		call 'erlang':'*'
		    (_cor2, 8)
	    in  let <_cor4> =
		    %% Line 986
		    call 'hipe_rtl_arch':'log2_word_size'
			()
		in  let <WordShifts> =
			%% Line 986
			call 'erlang':'+'
			    (_cor4, 3)
		    in  let <_cor6> =
			    %% Line 987
			    call 'erlang':'-'
				(WordSizeBits, 4)
			in  let <MaxFixNum> =
				%% Line 987
				call 'erlang':'-'
				    (_cor6, 1)
			    in  let <ResReg> =
				    %% Line 988
				    call 'hipe_rtl':'mk_new_reg_gcsafe'
					()
				in  let <Tmp1> =
					%% Line 989
					call 'hipe_rtl':'mk_new_reg_gcsafe'
					    ()
				    in  let <BigLbl> =
					    %% Line 990
					    call 'hipe_rtl':'mk_new_label'
						()
					in  let <_cor12> =
						%% Line 992
						call 'hipe_rtl':'mk_imm'
						    (MaxFixNum)
					    in  let <_cor11> =
						    %% Line 993
						    call 'hipe_rtl':'label_name'
							(BigLbl)
						in  let <_cor13> =
							%% Line 992
							call 'hipe_rtl':'mk_branch'
							    (_cor1, 'le', _cor12, _cor0, _cor11)
						    in  let <_cor14> =
							    %% Line 995
							    call 'erlang':'-'
								(WordSizeBits, 1)
							in  let <_cor15> =
								%% Line 995
								call 'hipe_rtl':'mk_imm'
								    (_cor14)
							    in  let <_cor16> =
								    %% Line 995
								    call 'hipe_rtl':'mk_alu'
									(Tmp1, _cor1, 'add', _cor15)
								in  let <_cor17> =
									%% Line 996
									call 'hipe_rtl':'mk_imm'
									    (WordShifts)
								    in  let <_cor18> =
									    %% Line 996
									    call 'hipe_rtl':'mk_alu'
										(ResReg, Tmp1, 'srl', _cor17)
									in  let <_cor19> =
										%% Line 997
										call 'hipe_rtl':'mk_imm'
										    (1)
									    in  let <_cor20> =
										    %% Line 997
										    call 'hipe_rtl':'mk_alu'
											(ResReg, ResReg, 'add', _cor19)
										in  let <Code> =
											%% Line 992
											[_cor13|%% Line 994
												[BigLbl|%% Line 995
													[_cor16|%% Line 996
														[_cor18|%% Line 997
															[_cor20|[]]]]]]
										    in  %% Line 998
											{ResReg,Code}
'create_matchstate'/6 =
    %% Line 1004
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <WordSize> =
	    %% Line 1005
	    call 'hipe_rtl_arch':'word_size'
		()
	in  let <_8211> =
		%% Line 1006
		call 'hipe_rtl_arch':'heap_pointer'
		    ()
	    in  %% Line 1006
		case _8211 of
		  <{GetHPInsn,HP,PutHPInsn}> when 'true' ->
		      let <_cor8> =
			  %% Line 1007
			  call 'erlang':'+'
			      (_cor5, 1)
		      in  let <_cor9> =
			      %% Line 1007
			      call 'erlang':'*'
				  (_cor8, WordSize)
			  in  let <ByteSize> =
				  %% Line 1007
				  call 'erlang':'+'
				      (_cor9, 40)
			      in  let <_cor11> =
				      %% Line 1008
				      call 'erlang':'div'
					  (ByteSize, WordSize)
				  in  let <SizeInWords> =
					  %% Line 1008
					  call 'erlang':'-'
					      (_cor11, 1)
				      in  let <_9848> =
					      call 'erlang':'bsl'
						  (SizeInWords, 6)
					  in  let <_cor15> =
						  call 'erlang':'+'
						      (_9848, 4)
					      in  let <Header> =
						      %% Line 1009
						      call 'hipe_rtl':'mk_imm'
							  (_cor15)
						  in  let <_cor17> =
							  %% Line 1011
							  call 'hipe_rtl':'mk_imm'
							      (2)
						      in  let <_cor18> =
							      %% Line 1011
							      call 'hipe_rtl':'mk_alu'
								  (_cor0, HP, 'add', _cor17)
							  in  let <_cor19> =
								  %% Line 1012
								  apply 'set_field_from_term'/3
								      ({'matchstate','thing_word'}, _cor0, Header)
							      in  let <_cor20> =
								      %% Line 1013
								      apply 'set_field_from_term'/3
									  ({'matchstate',{'matchbuffer','orig'}}, _cor0, _cor1)
								  in  let <_cor21> =
									  %% Line 1014
									  apply 'set_field_from_term'/3
									      ({'matchstate',{'matchbuffer','base'}}, _cor0, _cor3)
								      in  let <_cor22> =
									      %% Line 1015
									      apply 'set_field_from_term'/3
										  ({'matchstate',{'matchbuffer','binsize'}}, _cor0, _cor4)
									  in  let <_cor23> =
										  %% Line 1016
										  apply 'set_field_from_term'/3
										      ({'matchstate',{'matchbuffer','offset'}}, _cor0, _cor2)
									      in  let <_cor24> =
										      %% Line 1017
										      apply 'set_field_from_term'/3
											  ({'matchstate',{'saveoffset',0}}, _cor0, _cor2)
										  in  let <_cor25> =
											  %% Line 1018
											  call 'hipe_rtl':'mk_imm'
											      (ByteSize)
										      in  let <_cor26> =
											      %% Line 1018
											      call 'hipe_rtl':'mk_alu'
												  (HP, HP, 'add', _cor25)
											  in  %% Line 1010
											      [GetHPInsn|%% Line 1011
													 [_cor18|%% Line 1012
														 [_cor19|%% Line 1013
															 [_cor20|%% Line 1014
																 [_cor21|%% Line 1015
																	 [_cor22|%% Line 1016
																		 [_cor23|%% Line 1017
																			 [_cor24|%% Line 1018
																				 [_cor26|%% Line 1019
																					 [PutHPInsn|[]]]]]]]]]]]
		  ( <_cor7> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_8211})
		    -| ['compiler_generated'] )
		end
'convert_matchstate'/1 =
    %% Line 1021
    fun (_cor0) ->
	let <WordSize> =
	    %% Line 1022
	    call 'hipe_rtl_arch':'word_size'
		()
	in  let <Header> =
		%% Line 1023
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <TmpSize> =
		    %% Line 1024
		    call 'hipe_rtl':'mk_new_reg_gcsafe'
			()
		in  let <SavedOffset> =
			%% Line 1025
			call 'hipe_rtl':'mk_new_reg_gcsafe'
			    ()
		    in  let <Orig> =
			    %% Line 1026
			    call 'hipe_rtl':'mk_new_reg_gcsafe'
				()
			in  let <BinSize> =
				%% Line 1027
				call 'hipe_rtl':'mk_new_reg_gcsafe'
				    ()
			    in  let <ByteSize> =
				    %% Line 1028
				    call 'hipe_rtl':'mk_new_reg_gcsafe'
					()
				in  let <BitSize> =
					%% Line 1029
					call 'hipe_rtl':'mk_new_reg_gcsafe'
					    ()
				    in  let <ByteOffset> =
					    %% Line 1030
					    call 'hipe_rtl':'mk_new_reg_gcsafe'
						()
					in  let <BitOffset> =
						%% Line 1031
						call 'hipe_rtl':'mk_new_reg_gcsafe'
						    ()
					    in  let <SizeInWords> =
						    %% Line 1032
						    call 'hipe_rtl':'mk_new_reg_gcsafe'
							()
						in  let <Hole> =
							%% Line 1033
							call 'hipe_rtl':'mk_new_reg_gcsafe'
							    ()
						    in  let <BigIntHeader> =
							    %% Line 1034
							    call 'hipe_rtl':'mk_new_reg_gcsafe'
								()
							in  let <_cor14> =
								%% Line 1035
								apply 'get_field_from_term'/3
								    ({'matchstate',{'matchbuffer','orig'}}, _cor0, Orig)
							    in  let <_cor15> =
								    %% Line 1036
								    apply 'get_field_from_term'/3
									({'matchstate',{'matchbuffer','binsize'}}, _cor0, BinSize)
								in  let <_cor16> =
									%% Line 1037
									apply 'get_field_from_term'/3
									    ({'matchstate',{'saveoffset',0}}, _cor0, SavedOffset)
								    in  let <_cor17> =
									    %% Line 1038
									    apply 'get_field_from_term'/3
										({'matchstate','thing_word'}, _cor0, Header)
									in  let <_cor18> =
										%% Line 1039
										call 'hipe_rtl':'mk_alu'
										    (TmpSize, BinSize, 'sub', SavedOffset)
									    in  let <_cor19> =
										    %% Line 1040
										    call 'hipe_rtl':'mk_imm'
											(7)
										in  let <_cor20> =
											%% Line 1040
											call 'hipe_rtl':'mk_alu'
											    (BitSize, TmpSize, 'and', _cor19)
										    in  let <_cor21> =
											    %% Line 1041
											    call 'hipe_rtl':'mk_imm'
												(7)
											in  let <_cor22> =
												%% Line 1041
												call 'hipe_rtl':'mk_alu'
												    (BitOffset, SavedOffset, 'and', _cor21)
											    in  let <_cor23> =
												    %% Line 1042
												    call 'hipe_rtl':'mk_imm'
													(3)
												in  let <_cor24> =
													%% Line 1042
													call 'hipe_rtl':'mk_alu'
													    (ByteSize, TmpSize, 'srl', _cor23)
												    in  let <_cor25> =
													    %% Line 1043
													    call 'hipe_rtl':'mk_imm'
														(3)
													in  let <_cor26> =
														%% Line 1043
														call 'hipe_rtl':'mk_alu'
														    (ByteOffset, SavedOffset, 'srl', _cor25)
													    in  let <_cor27> =
														    %% Line 1045
														    call 'hipe_rtl':'mk_imm'
															(0)
														in  let <_cor28> =
															%% Line 1044
															apply 'build_sub_binary'/7
															    (_cor0, ByteSize, ByteOffset, BitSize, BitOffset, _cor27, Orig)
														    in  let <_cor2> =
															    call 'hipe_rtl':'mk_imm'
																(6)
															in  let <_cor3> =
																call 'hipe_rtl':'mk_alu'
																    (SizeInWords, Header, 'srl', _cor2)
															    in  let <_cor29> =
																    [_cor3|[]]
																in  let <_cor30> =
																	%% Line 1047
																	call 'hipe_rtl':'mk_imm'
																	    (5)
																    in  let <_cor31> =
																	    %% Line 1047
																	    call 'hipe_rtl':'mk_alu'
																		(Hole, SizeInWords, 'sub', _cor30)
																	in  let <_cor34> =
																		%% Line 1048
																		apply 'mk_var_header'/3
																		    (BigIntHeader, Hole, 8)
																	    in  let <_cor35> =
																		    %% Line 1049
																		    call 'erlang':'*'
																			(5, WordSize)
																		in  let <_cor36> =
																			%% Line 1049
																			call 'erlang':'-'
																			    (_cor35, 2)
																		    in  let <_cor37> =
																			    %% Line 1049
																			    call 'hipe_rtl':'mk_imm'
																				(_cor36)
																			in  let <_cor38> =
																				%% Line 1049
																				call 'hipe_rtl':'mk_store'
																				    (_cor0, _cor37, BigIntHeader)
																			    in  %% Line 1035
																				[_cor14|%% Line 1036
																					[_cor15|%% Line 1037
																						[_cor16|%% Line 1038
																							[_cor17|%% Line 1039
																								[_cor18|%% Line 1040
																									[_cor20|%% Line 1041
																										[_cor22|%% Line 1042
																											[_cor24|%% Line 1043
																												[_cor26|%% Line 1044
																													[_cor28|%% Line 1046
																														[_cor29|%% Line 1047
																															[_cor31|%% Line 1048
																																[_cor34|%% Line 1049
																																	[_cor38|%% Line 1050
																																		[]]]]]]]]]]]]]]]
'compare_matchstate'/4 =
    %% Line 1052
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <WordSize> =
	    %% Line 1053
	    call 'hipe_rtl_arch':'word_size'
		()
	in  let <_cor5> =
		%% Line 1054
		call 'erlang':'+'
		    (_cor3, 1)
	    in  let <_cor6> =
		    %% Line 1054
		    call 'erlang':'*'
			(_cor5, WordSize)
		in  let <ByteSize> =
			%% Line 1054
			call 'erlang':'+'
			    (_cor6, 40)
		    in  let <_cor8> =
			    %% Line 1055
			    call 'erlang':'div'
				(ByteSize, WordSize)
			in  let <SizeInWords> =
				%% Line 1055
				call 'erlang':'-'
				    (_cor8, 1)
			    in  let <_66> =
				    call 'erlang':'bsl'
					(SizeInWords, 6)
				in  let <_cor12> =
					call 'erlang':'+'
					    (_66, 4)
				    in  let <Header> =
					    %% Line 1056
					    call 'hipe_rtl':'mk_imm'
						(_cor12)
					in  let <RealHeader> =
						%% Line 1057
						call 'hipe_rtl':'mk_new_reg_gcsafe'
						    ()
					    in  let <_cor16> =
						    %% Line 1058
						    call 'hipe_rtl':'mk_imm'
							(-2)
						in  let <_cor17> =
							%% Line 1058
							call 'hipe_rtl':'mk_load'
							    (RealHeader, _cor2, _cor16)
						    in  let <_cor18> =
							    %% Line 1059
							    call 'hipe_rtl':'mk_branch'
								(RealHeader, 'ge', Header, _cor1, _cor0)
							in  %% Line 1058
							    [_cor17|%% Line 1059
								    [_cor18|[]]]
'get_field_offset'/1 =
    %% Line 1065
    fun (_cor0) ->
	case _cor0 of
	  <{'matchstate','thing_word'}> when 'true' ->
	      %% Line 1066
	      0
	  %% Line 1067
	  <{'matchstate','matchbuffer'}> when 'true' ->
	      %% Line 1068
	      8
	  %% Line 1069
	  <{'matchstate',Field = {'matchbuffer',_cor7}}> when 'true' ->
	      let <_cor1> =
		  %% Line 1070
		  apply 'get_field_offset'/1
		      (Field)
	      in  %% Line 1070
		  call 'erlang':'+'
		      (8, _cor1)
	  %% Line 1071
	  <Field = {'matchstate',{'saveoffset',N}}> when 'true' ->
	      let <_cor2> =
		  %% Line 1072
		  apply 'get_field_size1'/1
		      (_cor0)
	      in  let <_cor3> =
		      %% Line 1072
		      call 'erlang':'*'
			  (N, _cor2)
		  in  %% Line 1072
		      call 'erlang':'+'
			  (40, _cor3)
	  %% Line 1073
	  <{'sub_binary','thing_word'}> when 'true' ->
	      %% Line 1074
	      0
	  %% Line 1075
	  <{'sub_binary','binsize'}> when 'true' ->
	      %% Line 1076
	      8
	  %% Line 1077
	  <{'sub_binary','bitsize'}> when 'true' ->
	      %% Line 1078
	      24
	  %% Line 1079
	  <{'sub_binary','offset'}> when 'true' ->
	      %% Line 1080
	      16
	  %% Line 1081
	  <{'sub_binary','bitoffset'}> when 'true' ->
	      %% Line 1082
	      25
	  %% Line 1083
	  <{'sub_binary','is_writable'}> when 'true' ->
	      %% Line 1084
	      26
	  %% Line 1085
	  <{'sub_binary','orig'}> when 'true' ->
	      %% Line 1086
	      32
	  %% Line 1087
	  <{'proc_bin','thing_word'}> when 'true' ->
	      %% Line 1088
	      0
	  %% Line 1089
	  <{'proc_bin','binsize'}> when 'true' ->
	      %% Line 1090
	      8
	  %% Line 1091
	  <{'proc_bin','next'}> when 'true' ->
	      %% Line 1092
	      16
	  %% Line 1093
	  <{'proc_bin','val'}> when 'true' ->
	      %% Line 1094
	      24
	  %% Line 1095
	  <{'proc_bin','bytes'}> when 'true' ->
	      %% Line 1096
	      32
	  %% Line 1097
	  <{'proc_bin','flags'}> when 'true' ->
	      %% Line 1098
	      40
	  %% Line 1099
	  <{'binary','orig_bytes'}> when 'true' ->
	      %% Line 1100
	      24
	  %% Line 1101
	  <{'binary','orig_size'}> when 'true' ->
	      %% Line 1102
	      16
	  %% Line 1103
	  <{'heap_bin','thing_word'}> when 'true' ->
	      %% Line 1104
	      0
	  %% Line 1105
	  <{'heap_bin','binsize'}> when 'true' ->
	      %% Line 1106
	      8
	  %% Line 1107
	  <Field = {'heap_bin',{'data',N}}> when 'true' ->
	      let <_cor4> =
		  %% Line 1108
		  apply 'get_field_size1'/1
		      (_cor0)
	      in  let <_cor5> =
		      %% Line 1108
		      call 'erlang':'*'
			  (N, _cor4)
		  in  %% Line 1108
		      call 'erlang':'+'
			  (16, _cor5)
	  %% Line 1109
	  <{'matchbuffer','offset'}> when 'true' ->
	      %% Line 1110
	      16
	  %% Line 1111
	  <{'matchbuffer','orig'}> when 'true' ->
	      %% Line 1112
	      0
	  %% Line 1113
	  <{'matchbuffer','base'}> when 'true' ->
	      %% Line 1114
	      8
	  %% Line 1115
	  <{'matchbuffer','binsize'}> when 'true' ->
	      %% Line 1116
	      24
	  ( <_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'get_field_offset',1}}] )
	    -| ['compiler_generated'] )
	end
'get_field_size'/1 =
    %% Line 1118
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 1119
	    apply 'get_field_size1'/1
		(_cor0)
	in  let <WordSize> =
		%% Line 1122
		call 'hipe_rtl_arch':'word_size'
		    ()
	    in  %% Line 1123
		case _cor1 of
		  %% Line 1124
		  <_cor4>
		      when call 'erlang':'=:='
			    (_cor1,
			     WordSize) ->
		      'word'
		  %% Line 1125
		  <4> when 'true' ->
		      'int32'
		  %% Line 1127
		  <1> when 'true' ->
		      'byte'
		  ( <_cor2> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor1})
		    -| ['compiler_generated'] )
		end
'get_field_size1'/1 =
    %% Line 1130
    fun (_cor0) ->
	case _cor0 of
	  <{'matchstate','thing_word'}> when 'true' ->
	      %% Line 1131
	      8
	  %% Line 1132
	  <{'matchstate',Field = {'matchbuffer',_cor2}}> when 'true' ->
	      %% Line 1133
	      apply 'get_field_size1'/1
		  (Field)
	  %% Line 1134
	  <{'matchstate',{'saveoffset',_X_N}}> when 'true' ->
	      %% Line 1135
	      8
	  %% Line 1136
	  <{'sub_binary','thing_word'}> when 'true' ->
	      %% Line 1137
	      8
	  %% Line 1138
	  <{'sub_binary','binsize'}> when 'true' ->
	      %% Line 1139
	      8
	  %% Line 1140
	  <{'sub_binary','bitsize'}> when 'true' ->
	      %% Line 1141
	      1
	  %% Line 1142
	  <{'sub_binary','offset'}> when 'true' ->
	      %% Line 1143
	      8
	  %% Line 1144
	  <{'sub_binary','bitoffset'}> when 'true' ->
	      %% Line 1145
	      1
	  %% Line 1146
	  <{'sub_binary','is_writable'}> when 'true' ->
	      %% Line 1147
	      1
	  %% Line 1148
	  <{'sub_binary','orig'}> when 'true' ->
	      %% Line 1149
	      8
	  %% Line 1150
	  <{'proc_bin','thing_word'}> when 'true' ->
	      %% Line 1151
	      8
	  %% Line 1152
	  <{'proc_bin','binsize'}> when 'true' ->
	      %% Line 1153
	      8
	  %% Line 1154
	  <{'proc_bin','next'}> when 'true' ->
	      %% Line 1155
	      8
	  %% Line 1156
	  <{'proc_bin','val'}> when 'true' ->
	      %% Line 1157
	      8
	  %% Line 1158
	  <{'proc_bin','bytes'}> when 'true' ->
	      %% Line 1159
	      8
	  %% Line 1160
	  <{'proc_bin','flags'}> when 'true' ->
	      %% Line 1161
	      8
	  %% Line 1162
	  <{'binary','orig_bytes'}> when 'true' ->
	      %% Line 1163
	      1
	  %% Line 1164
	  <{'binary','orig_size'}> when 'true' ->
	      %% Line 1165
	      8
	  %% Line 1166
	  <{'heap_bin','thing_word'}> when 'true' ->
	      %% Line 1167
	      8
	  %% Line 1168
	  <{'heap_bin','binsize'}> when 'true' ->
	      %% Line 1169
	      8
	  %% Line 1170
	  <{'heap_bin',{'data',_cor3}}> when 'true' ->
	      %% Line 1171
	      8
	  %% Line 1172
	  <{'matchbuffer','offset'}> when 'true' ->
	      %% Line 1173
	      8
	  %% Line 1174
	  <{'matchbuffer','orig'}> when 'true' ->
	      %% Line 1175
	      8
	  %% Line 1176
	  <{'matchbuffer','base'}> when 'true' ->
	      %% Line 1177
	      8
	  %% Line 1178
	  <{'matchbuffer','binsize'}> when 'true' ->
	      %% Line 1179
	      8
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'get_field_size1',1}}] )
	    -| ['compiler_generated'] )
	end
'get_field_from_term'/3 =
    %% Line 1181
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 1182
	    apply 'get_field_offset'/1
		(_cor2)
	in  let <_cor4> =
		%% Line 1182
		call 'erlang':'-'
		    (_cor3, 2)
	    in  let <Offset> =
		    %% Line 1182
		    call 'hipe_rtl':'mk_imm'
			(_cor4)
		in  let <Size> =
			%% Line 1183
			apply 'get_field_size'/1
			    (_cor2)
		    in  %% Line 1184
			call 'hipe_rtl':'mk_load'
			    (_cor0, _cor1, Offset, Size, 'unsigned')
'set_field_from_term'/3 =
    %% Line 1186
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 1187
	    apply 'get_field_offset'/1
		(_cor2)
	in  let <_cor4> =
		%% Line 1187
		call 'erlang':'-'
		    (_cor3, 2)
	    in  let <Offset> =
		    %% Line 1187
		    call 'hipe_rtl':'mk_imm'
			(_cor4)
		in  let <Size> =
			%% Line 1188
			apply 'get_field_size'/1
			    (_cor2)
		    in  %% Line 1189
			call 'hipe_rtl':'mk_store'
			    (_cor1, Offset, _cor0, Size)
'get_field_from_pointer'/3 =
    %% Line 1191
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 1192
	    apply 'get_field_offset'/1
		(_cor2)
	in  let <Offset> =
		%% Line 1192
		call 'hipe_rtl':'mk_imm'
		    (_cor3)
	    in  let <Size> =
		    %% Line 1193
		    apply 'get_field_size'/1
			(_cor2)
		in  %% Line 1194
		    call 'hipe_rtl':'mk_load'
			(_cor0, _cor1, Offset, Size, 'unsigned')
'set_field_from_pointer'/3 =
    %% Line 1196
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 1197
	    apply 'get_field_offset'/1
		(_cor2)
	in  let <Offset> =
		%% Line 1197
		call 'hipe_rtl':'mk_imm'
		    (_cor3)
	    in  let <Size> =
		    %% Line 1198
		    apply 'get_field_size'/1
			(_cor2)
		in  %% Line 1199
		    call 'hipe_rtl':'mk_store'
			(_cor1, Offset, _cor0, Size)
'extract_matchbuffer'/2 =
    %% Line 1201
    fun (_cor1,_cor0) ->
	let <Offset> =
	    %% Line 1203
	    call 'hipe_rtl':'mk_imm'
		(6)
	in  %% Line 1204
	    call 'hipe_rtl':'mk_alu'
		(_cor1, _cor0, 'add', Offset)
'extract_binary_bytes'/2 =
    %% Line 1206
    fun (_cor1,_cor0) ->
	let <Offset> =
	    %% Line 1207
	    call 'hipe_rtl':'mk_imm'
		(24)
	in  %% Line 1208
	    call 'hipe_rtl':'mk_alu'
		(_cor0, _cor1, 'add', Offset)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_tagscheme')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_tagscheme', _cor0)
end