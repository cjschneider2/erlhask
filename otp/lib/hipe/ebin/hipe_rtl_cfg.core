module 'hipe_rtl_cfg' ['bb'/2,
		       'bb_add'/3,
		       'bb_insert_between'/5,
		       'init'/1,
		       'labels'/1,
		       'linearize'/1,
		       'module_info'/0,
		       'module_info'/1,
		       'params'/1,
		       'params_update'/2,
		       'postorder'/1,
		       'pp'/1,
		       'pp'/2,
		       'pred'/2,
		       'preorder'/1,
		       'redirect'/4,
		       'remove_trivial_bbs'/1,
		       'remove_unreachable_code'/1,
		       'reverse_postorder'/1,
		       'start_label'/1,
		       'start_label_update'/2,
		       'succ'/2]
    attributes [%% Line 301
		'type' =
		    %% Line 301
		    [{{'record','comp_servers'},[{'typed_record_field',{'record_field',301,{'atom',301,'pp_server'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}|[{'typed_record_field',{'record_field',301,{'atom',301,'range'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}|[{'typed_record_field',{'record_field',301,{'atom',301,'type'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}]]],[]}],
		%% Line 307
		'type' =
		    %% Line 307
		    [{'comp_option',{'type',307,'union',[{'type',307,'atom',[]}|[{'type',307,'tuple',[{'type',307,'atom',[]}|[{'type',307,'atom',[]}]]}]]},[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{'comp_options',{'type',308,'list',[{'type',308,'comp_option',[]}]},[]}],
		%% Line 310
		'type' =
		    %% Line 310
		    [{'hipe_architecture',{'type',311,'union',[{'atom',311,'amd64'}|[{'atom',311,'arm'}|[{'atom',311,'powerpc'}|[{'atom',311,'ppc64'}|[{'atom',311,'ultrasparc'}|[{'atom',311,'x86'}]]]]]]},[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{'hipe_map',{'type',313,'list',[{'type',313,'tuple',[{'type',313,'non_neg_integer',[]}|[{'type',314,'union',[{'atom',314,'unknown'}|[{'type',314,'tuple',[{'type',314,'union',[{'atom',314,'reg'}|[{'atom',314,'fp_reg'}|[{'atom',314,'spill'}]]]}|[{'type',315,'non_neg_integer',[]}]]}]]}]]}]},[]}],
		%% Line 316
		'type' =
		    %% Line 316
		    [{'hipe_temp_map',{'type',316,'tuple','any'},[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{'hipe_spill_map',{'type',317,'list',[{'type',317,'tuple',[{'type',317,'non_neg_integer',[]}|[{'type',317,'tuple',[{'atom',317,'spill'}|[{'type',317,'non_neg_integer',[]}]]}]]}]},[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','alu'},[{'record_field',28,{'atom',28,'dst'}}|[{'record_field',28,{'atom',28,'src1'}}|[{'record_field',28,{'atom',28,'op'}}|[{'record_field',28,{'atom',28,'src2'}}]]]],[]}],
		%% Line 29
		'type' =
		    %% Line 29
		    [{{'record','alub'},[{'record_field',29,{'atom',29,'dst'}}|[{'record_field',29,{'atom',29,'src1'}}|[{'record_field',29,{'atom',29,'op'}}|[{'record_field',29,{'atom',29,'src2'}}|[{'record_field',29,{'atom',29,'cond'}}|[{'record_field',29,{'atom',29,'true_label'}}|[{'record_field',29,{'atom',29,'false_label'}}|[{'record_field',29,{'atom',29,'p'}}]]]]]]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','branch'},[{'record_field',30,{'atom',30,'src1'}}|[{'record_field',30,{'atom',30,'src2'}}|[{'record_field',30,{'atom',30,'cond'}}|[{'record_field',30,{'atom',30,'true_label'}}|[{'record_field',30,{'atom',30,'false_label'}}|[{'record_field',30,{'atom',30,'p'}}]]]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{{'record','call'},[{'record_field',31,{'atom',31,'dstlist'}}|[{'record_field',31,{'atom',31,'fun'}}|[{'record_field',31,{'atom',31,'arglist'}}|[{'record_field',31,{'atom',31,'type'}}|[{'record_field',31,{'atom',31,'continuation'}}|[{'record_field',32,{'atom',32,'failcontinuation'}}|[{'record_field',32,{'atom',32,'normalcontinuation'},{'nil',32}}]]]]]]],[]}],
		%% Line 33
		'type' =
		    %% Line 33
		    [{{'record','comment'},[{'record_field',33,{'atom',33,'text'}}],[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','enter'},[{'record_field',34,{'atom',34,'fun'}}|[{'record_field',34,{'atom',34,'arglist'}}|[{'record_field',34,{'atom',34,'type'}}]]],[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','fconv'},[{'record_field',35,{'atom',35,'dst'}}|[{'record_field',35,{'atom',35,'src'}}]],[]}],
		%% Line 36
		'type' =
		    %% Line 36
		    [{{'record','fixnumop'},[{'record_field',36,{'atom',36,'dst'}}|[{'record_field',36,{'atom',36,'src'}}|[{'record_field',36,{'atom',36,'type'}}]]],[]}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{{'record','fload'},[{'record_field',37,{'atom',37,'dst'}}|[{'record_field',37,{'atom',37,'src'}}|[{'record_field',37,{'atom',37,'offset'}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','fmove'},[{'record_field',38,{'atom',38,'dst'}}|[{'record_field',38,{'atom',38,'src'}}]],[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{{'record','fp'},[{'record_field',39,{'atom',39,'dst'}}|[{'record_field',39,{'atom',39,'src1'}}|[{'record_field',39,{'atom',39,'op'}}|[{'record_field',39,{'atom',39,'src2'}}]]]],[]}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{{'record','fp_unop'},[{'record_field',40,{'atom',40,'dst'}}|[{'record_field',40,{'atom',40,'src'}}|[{'record_field',40,{'atom',40,'op'}}]]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','fstore'},[{'record_field',41,{'atom',41,'base'}}|[{'record_field',41,{'atom',41,'offset'}}|[{'record_field',41,{'atom',41,'src'}}]]],[]}],
		%% Line 42
		'type' =
		    %% Line 42
		    [{{'record','gctest'},[{'record_field',42,{'atom',42,'words'}}],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','goto'},[{'record_field',43,{'atom',43,'label'}}],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','goto_index'},[{'record_field',44,{'atom',44,'block'}}|[{'record_field',44,{'atom',44,'index'}}|[{'record_field',44,{'atom',44,'labels'}}]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','label'},[{'record_field',45,{'atom',45,'name'}}],[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{{'record','load'},[{'record_field',46,{'atom',46,'dst'}}|[{'record_field',46,{'atom',46,'src'}}|[{'record_field',46,{'atom',46,'offset'}}|[{'record_field',46,{'atom',46,'size'}}|[{'record_field',46,{'atom',46,'sign'}}]]]]],[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{{'record','load_address'},[{'record_field',47,{'atom',47,'dst'}}|[{'record_field',47,{'atom',47,'addr'}}|[{'record_field',47,{'atom',47,'type'}}]]],[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','load_atom'},[{'record_field',48,{'atom',48,'dst'}}|[{'record_field',48,{'atom',48,'atom'}}]],[]}],
		%% Line 49
		'type' =
		    %% Line 49
		    [{{'record','load_word_index'},[{'record_field',49,{'atom',49,'dst'}}|[{'record_field',49,{'atom',49,'block'}}|[{'record_field',49,{'atom',49,'index'}}]]],[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','move'},[{'record_field',50,{'atom',50,'dst'}}|[{'record_field',50,{'atom',50,'src'}}]],[]}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{{'record','multimove'},[{'record_field',51,{'atom',51,'dstlist'}}|[{'record_field',51,{'atom',51,'srclist'}}]],[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{{'record','phi'},[{'record_field',52,{'atom',52,'dst'}}|[{'record_field',52,{'atom',52,'id'}}|[{'record_field',52,{'atom',52,'arglist'}}]]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{{'record','return'},[{'record_field',53,{'atom',53,'varlist'}}],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{{'record','store'},[{'record_field',54,{'atom',54,'base'}}|[{'record_field',54,{'atom',54,'offset'}}|[{'record_field',54,{'atom',54,'src'}}|[{'record_field',54,{'atom',54,'size'}}]]]],[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{{'record','switch'},[{'record_field',55,{'atom',55,'src'}}|[{'record_field',55,{'atom',55,'labels'}}|[{'record_field',55,{'atom',55,'sorted_by'},{'nil',55}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{'cfg_lbl',{'type',28,'non_neg_integer',[]},[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','cfg_info'},[{'typed_record_field',{'record_field',34,{'atom',34,'fun'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'type',34,'mfa',[]}]]}}|[{'typed_record_field',{'record_field',35,{'atom',35,'start_label'}},{'type',35,'union',[{'atom',35,'undefined'}|[{'type',35,'cfg_lbl',[]}]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'is_closure'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',37,{'atom',37,'closure_arity'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'type',37,'arity',[]}]]}}|[{'typed_record_field',{'record_field',38,{'atom',38,'is_leaf'}},{'type',38,'union',[{'atom',38,'undefined'}|[{'type',38,'boolean',[]}]]}}|[{'record_field',39,{'atom',39,'params'}}|[{'record_field',40,{'atom',40,'info'},{'nil',40}}]]]]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'cfg_data',{'type',45,'tuple',[{'remote_type',45,[{'atom',45,'dict'}|[{'atom',45,'dict'}|[[]]]]}|[{'type',45,'list',[{'type',45,'cfg_lbl',[]}]}|[{'type',45,'non_neg_integer',[]}]]]},[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','cfg'},[{'typed_record_field',{'record_field',50,{'atom',50,'table'},{'call',50,{'remote',50,{'atom',50,'gb_trees'},{'atom',50,'empty'}},[]}},{'remote_type',50,[{'atom',50,'gb_trees'}|[{'atom',50,'tree'}|[[]]]]}}|[{'typed_record_field',{'record_field',51,{'atom',51,'info'}},{'type',51,'union',[{'atom',51,'undefined'}|[{'type',51,'record',[{'atom',51,'cfg_info'}]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'data'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'cfg_data',[]}]]}}]]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{'cfg',{'type',53,'record',[{'atom',53,'cfg'}]},[]}],
		%% Line 141
		'spec' =
		    %% Line 141
		    [{{'start_label',1},[{'type',141,'fun',[{'type',141,'product',[{'type',141,'cfg',[]}]}|[{'type',141,'cfg_lbl',[]}]]}]}],
		%% Line 145
		'spec' =
		    %% Line 145
		    [{{'start_label_update',2},[{'type',145,'fun',[{'type',145,'product',[{'type',145,'cfg',[]}|[{'type',145,'cfg_lbl',[]}]]}|[{'type',145,'cfg',[]}]]}]}],
		%% Line 150
		'spec' =
		    %% Line 150
		    [{{'function',1},[{'type',150,'fun',[{'type',150,'product',[{'type',150,'cfg',[]}]}|[{'type',150,'mfa',[]}]]}]}],
		%% Line 153
		'spec' =
		    %% Line 153
		    [{{'is_closure',1},[{'type',153,'fun',[{'type',153,'product',[{'type',153,'cfg',[]}]}|[{'type',153,'boolean',[]}]]}]}],
		%% Line 156
		'spec' =
		    %% Line 156
		    [{{'is_leaf',1},[{'type',156,'fun',[{'type',156,'product',[{'type',156,'cfg',[]}]}|[{'type',156,'boolean',[]}]]}]}],
		%% Line 171
		'spec' =
		    %% Line 171
		    [{{'update_data',2},[{'type',171,'fun',[{'type',171,'product',[{'type',171,'cfg',[]}|[{'type',171,'cfg_data',[]}]]}|[{'type',171,'cfg',[]}]]}]}],
		%% Line 216
		'spec' =
		    %% Line 216
		    [{{'other_entrypoints',1},[{'type',216,'fun',[{'type',216,'product',[{'type',216,'cfg',[]}]}|[{'type',216,'list',[{'type',216,'cfg_lbl',[]}]}]]}]}],
		%% Line 239
		'spec' =
		    %% Line 239
		    [{{'remove_duplicates',1},[{'type',239,'fun',[{'type',239,'product',[{'type',239,'list',[{'type',239,'cfg_lbl',[]}]}]}|[{'type',239,'list',[{'type',239,'cfg_lbl',[]}]}]]}]}],
		%% Line 243
		'spec' =
		    %% Line 243
		    [{{'remove_duplicates',2},[{'type',243,'fun',[{'type',243,'product',[{'type',243,'list',[{'type',243,'cfg_lbl',[]}]}|[{'type',243,'list',[{'type',243,'cfg_lbl',[]}]}]]}|[{'type',243,'list',[{'type',243,'cfg_lbl',[]}]}]]}]}],
		%% Line 537
		'spec' =
		    %% Line 537
		    [{{'none_visited',0},[{'type',537,'fun',[{'type',537,'product',[]}|[{'remote_type',537,[{'atom',537,'gb_sets'}|[{'atom',537,'set'}|[[]]]]}]]}]}],
		%% Line 661
		'spec' =
		    %% Line 661
		    [{{'remove_trivial_bbs',1},[{'type',661,'fun',[{'type',661,'product',[{'type',661,'cfg',[]}]}|[{'type',661,'cfg',[]}]]}]}],
		%% Line 818
		'spec' =
		    %% Line 818
		    [{{'rewrite_trivial_branches',1},[{'type',818,'fun',[{'type',818,'product',[{'type',818,'cfg',[]}]}|[{'type',818,'cfg',[]}]]}]}],
		%% Line 925
		'spec' =
		    %% Line 925
		    [{{'remove_unreachable_code',1},[{'type',925,'fun',[{'type',925,'product',[{'type',925,'cfg',[]}]}|[{'type',925,'cfg',[]}]]}]}]]
'start_label'/1 =
    %% Line 142
    fun (_cor0) ->
	( case _cor0 of
	    ( <( {'cfg',_cor5,_rec1,_cor6}
		 -| ['compiler_generated'] )> when 'true' ->
		  ( case _rec1 of
		      ( <( {'cfg_info',_cor8,_rec0,_cor9,_cor10,_cor11,_cor12,_cor13}
			   -| ['compiler_generated'] )> when 'true' ->
			    _rec0
			-| ['compiler_generated'] )
		      ( <_cor14> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','cfg_info'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor7> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'start_label_update'/2 =
    %% Line 146
    fun (_cor1,_cor0) ->
	%% Line 147
	( case _cor1 of
	    ( <( {'cfg',_cor13,_rec2,_cor14}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 148
		  case _rec2 of
		    <{'cfg_info',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22}> when 'true' ->
			let <_cor7> =
			    call 'erlang':'setelement'
				(3, _rec2, _cor0)
			in  call 'erlang':'setelement'
				(3, _cor1, _cor7)
		    ( <_cor23> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','cfg_info'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor15> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'function'/1 =
    %% Line 151
    fun (_cor0) ->
	( case _cor0 of
	    ( <( {'cfg',_cor5,_rec7,_cor6}
		 -| ['compiler_generated'] )> when 'true' ->
		  ( case _rec7 of
		      ( <( {'cfg_info',_rec6,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13}
			   -| ['compiler_generated'] )> when 'true' ->
			    _rec6
			-| ['compiler_generated'] )
		      ( <_cor14> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','cfg_info'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor7> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'is_closure'/1 =
    %% Line 154
    fun (_cor0) ->
	( case _cor0 of
	    ( <( {'cfg',_cor5,_rec9,_cor6}
		 -| ['compiler_generated'] )> when 'true' ->
		  ( case _rec9 of
		      ( <( {'cfg_info',_cor8,_cor9,_rec8,_cor10,_cor11,_cor12,_cor13}
			   -| ['compiler_generated'] )> when 'true' ->
			    _rec8
			-| ['compiler_generated'] )
		      ( <_cor14> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','cfg_info'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor7> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'is_leaf'/1 =
    %% Line 157
    fun (_cor0) ->
	( case _cor0 of
	    ( <( {'cfg',_cor5,_rec11,_cor6}
		 -| ['compiler_generated'] )> when 'true' ->
		  ( case _rec11 of
		      ( <( {'cfg_info',_cor8,_cor9,_cor10,_cor11,_rec10,_cor12,_cor13}
			   -| ['compiler_generated'] )> when 'true' ->
			    _rec10
			-| ['compiler_generated'] )
		      ( <_cor14> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','cfg_info'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor7> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'params'/1 =
    %% Line 177
    fun (_cor0) ->
	( case _cor0 of
	    ( <( {'cfg',_cor5,_rec15,_cor6}
		 -| ['compiler_generated'] )> when 'true' ->
		  ( case _rec15 of
		      ( <( {'cfg_info',_cor8,_cor9,_cor10,_cor11,_cor12,_rec14,_cor13}
			   -| ['compiler_generated'] )> when 'true' ->
			    _rec14
			-| ['compiler_generated'] )
		      ( <_cor14> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','cfg_info'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor7> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'params_update'/2 =
    %% Line 181
    fun (_cor1,_cor0) ->
	%% Line 182
	( case _cor1 of
	    ( <( {'cfg',_cor13,_rec16,_cor14}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 183
		  case _rec16 of
		    <{'cfg_info',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22}> when 'true' ->
			let <_cor7> =
			    call 'erlang':'setelement'
				(7, _rec16, _cor0)
			in  call 'erlang':'setelement'
				(3, _cor1, _cor7)
		    ( <_cor23> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','cfg_info'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor15> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'info'/1 =
    %% Line 203
    fun (_cor0) ->
	( case _cor0 of
	    ( <( {'cfg',_cor5,_rec21,_cor6}
		 -| ['compiler_generated'] )> when 'true' ->
		  ( case _rec21 of
		      ( <( {'cfg_info',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_rec20}
			   -| ['compiler_generated'] )> when 'true' ->
			    _rec20
			-| ['compiler_generated'] )
		      ( <_cor14> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','cfg_info'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor7> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'info_update'/2 =
    %% Line 208
    fun (_cor1,_cor0) ->
	%% Line 209
	( case _cor1 of
	    ( <( {'cfg',_cor13,_rec22,_cor14}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 210
		  case _rec22 of
		    <{'cfg_info',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22}> when 'true' ->
			let <_cor7> =
			    call 'erlang':'setelement'
				(8, _rec22, _cor0)
			in  call 'erlang':'setelement'
				(3, _cor1, _cor7)
		    ( <_cor23> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','cfg_info'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor15> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'bb'/2 =
    %% Line 228
    fun (_cor1,_cor0) ->
	%% Line 229
	( case _cor1 of
	    ( <( {'cfg',_rec26,_cor8,_cor9}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_6363> =
		      %% Line 230
		      call 'gb_trees':'lookup'
			  (_cor0, _rec26)
		  in  %% Line 230
		      case _6363 of
			%% Line 231
			<{'value',{Block,_X_Succ,_X_Pred}}> when 'true' ->
			    Block
			%% Line 233
			<'none'> when 'true' ->
			    %% Line 234
			    'not_found'
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_6363})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor10> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'remove_duplicates'/2 =
    %% Line 244
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[H|T],Acc> when 'true' ->
	      let <_8566> =
		  %% Line 246
		  call 'lists':'member'
		      (H, _cor0)
	      in  let <_cor3> =
		      %% Line 246
		      case _8566 of
			%% Line 247
			<'false'> when 'true' ->
			    [H|_cor0]
			%% Line 248
			<'true'> when 'true' ->
			    _cor0
			( <_cor2> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_8566})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 250
		      apply 'remove_duplicates'/2
			  (T, _cor3)
	  %% Line 251
	  <[],Acc> when 'true' ->
	      %% Line 252
	      call 'lists':'reverse'
		  (_cor0)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'remove_duplicates',2}}] )
	    -| ['compiler_generated'] )
	end
'bb_insert_between'/5 =
    %% Line 265
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Last> =
	    %% Line 266
	    call 'hipe_bb':'last'
		(_cor2)
	in  let <_7563> =
		%% Line 268
		apply 'is_branch'/1
		    (Last)
	    in  %% Line 268
		case _7563 of
		  <'true'> when 'true' ->
		      let <_cor7> =
			  %% Line 270
			  apply 'branch_successors'/1
			      (Last)
		      in  let <_5508> =
			      apply 'remove_duplicates'/2
				  (_cor7, [])
			  in  %% Line 270
			      case _5508 of
				<[_cor37|[]]>
				    when call 'erlang':'=:='
					  (_cor37,
					   _cor0) ->
				    %% Line 271
				    ( case _cor4 of
					( <( {'cfg',_rec27,_cor38,_cor39}
					     -| ['compiler_generated'] )> when 'true' ->
					      let <_5082> =
						  %% Line 273
						  call 'gb_trees':'lookup'
						      (_cor3, _rec27)
					      in  %% Line 273
						  case _5082 of
						    <'none'> when 'true' ->
							let <_585> =
							    %% Line 275
							    call 'gb_trees':'lookup'
								(_cor1, _rec27)
							in  %% Line 275
							    case _585 of
							      <{'value',{PBB,PSucc,PPred}}> when 'true' ->
								  let <_cor14> =
								      %% Line 276
								      call 'lists':'delete'
									  (_cor0, PSucc)
								  in  let <NewPSucc> =
									  %% Line 276
									  [_cor3|_cor14]
								      in  let <PLast> =
									      %% Line 277
									      call 'hipe_bb':'last'
										  (PBB)
									  in  let <PButLast> =
										  %% Line 278
										  call 'hipe_bb':'butlast'
										      (PBB)
									      in  let <_cor18> =
										      call 'hipe_rtl':'redirect_jmp'
											  (PLast, _cor0, _cor3)
										  in  let <_cor19> =
											  %% Line 279
											  call 'erlang':'++'
											      (PButLast, [_cor18|[]])
										      in  let <NewPBB> =
											      %% Line 279
											      call 'hipe_bb':'code_update'
												  (PBB, _cor19)
											  in  let <HT1> =
												  %% Line 280
												  call 'gb_trees':'update'
												      (_cor1, {NewPBB,NewPSucc,PPred}, _rec27)
											      in  let <_3109> =
												      %% Line 282
												      call 'gb_trees':'lookup'
													  (_cor0, HT1)
												  in  %% Line 282
												      case _3109 of
													<{'value',{SBB,SSucc,SPred}}> when 'true' ->
													    let <_cor23> =
														%% Line 283
														call 'lists':'delete'
														    (_cor1, SPred)
													    in  let <NewSPred> =
														    %% Line 283
														    [_cor3|_cor23]
														in  let <SCode> =
															%% Line 284
															call 'hipe_bb':'code'
															    (SBB)
														    in  let <NewSCode> =
															    %% Line 285
															    apply 'redirect_phis'/4
																(SCode, _cor1, _cor3, [])
															in  let <NewSBB> =
																%% Line 286
																call 'hipe_bb':'code_update'
																    (SBB, NewSCode)
															    in  let <HT2> =
																    %% Line 287
																    call 'gb_trees':'update'
																	(_cor0, {NewSBB,SSucc,NewSPred}, HT1)
																in  let <HT3> =
																	%% Line 289
																	call 'gb_trees':'insert'
																	    (_cor3, {_cor2,[_cor0|[]],[_cor1|[]]}, HT2)
																    in  %% Line 290
																	call 'erlang':'setelement'
																	    (2, _cor4, HT3)
													( <_cor22> when 'true' ->
													      primop 'match_fail'
														  ({'badmatch',_3109})
													  -| ['compiler_generated'] )
												      end
							      ( <_cor13> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_585})
								-| ['compiler_generated'] )
							    end
						    ( <_cor12> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_5082})
						      -| ['compiler_generated'] )
						  end
					  -| ['compiler_generated'] )
					( <_cor40> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','cfg'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				( <_cor8> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_5508})
				  -| ['compiler_generated'] )
			      end
		  ( <_cor6> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_7563})
		    -| ['compiler_generated'] )
		end
'redirect_phis'/4 =
    %% Line 292
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[],_X_OldPred,_X_NewPred,Acc> when 'true' ->
	      %% Line 293
	      call 'lists':'reverse'
		  (_cor0)
	  %% Line 294
	  <[I|Rest],OldPred,NewPred,Acc> when 'true' ->
	      let <_8142> =
		  call 'hipe_rtl':'is_phi'
		      (I)
	      in  %% Line 295
		  case _8142 of
		    %% Line 296
		    <'true'> when 'true' ->
			let <Phi> =
			    call 'hipe_rtl':'phi_redirect_pred'
				(I, _cor2, _cor1)
			in  %% Line 298
			    apply 'redirect_phis'/4
				(Rest, _cor2, _cor1, [Phi|_cor0])
		    %% Line 299
		    <'false'> when 'true' ->
			%% Line 300
			apply 'redirect_phis'/4
			    (Rest, _cor2, _cor1, [I|_cor0])
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_8142})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'redirect_phis',4}}] )
	    -| ['compiler_generated'] )
	end
'bb_add'/3 =
    %% Line 307
    fun (_cor2,_cor1,_cor0) ->
	let <Last> =
	    %% Line 309
	    call 'hipe_bb':'last'
		(_cor0)
	in  do  let <_5190> =
		    %% Line 310
		    apply 'is_branch'/1
			(Last)
		in  %% Line 310
		    case _5190 of
		      %% Line 311
		      <'true'> when 'true' ->
			  'ok'
		      %% Line 312
		      <'false'> when 'true' ->
			  call 'erlang':'throw'
			      ({'hipe_rtl_cfg',{[66|[97|[115|[105|[99|[32|[98|[108|[111|[99|[107|[32|[101|[110|[100|[115|[32|[119|[105|[116|[104|[111|[117|[116|[32|[98|[114|[97|[110|[99|[104]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],Last}})
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_5190})
			-| ['compiler_generated'] )
		    end
		let <_cor5> =
		    %% Line 318
		    apply 'branch_successors'/1
			(Last)
		in  let <Succ> =
			apply 'remove_duplicates'/2
			    (_cor5, [])
		    in  %% Line 319
			( case _cor2 of
			    ( <( {'cfg',_rec29,_cor33,_cor34}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_5025> =
				      %% Line 320
				      call 'gb_trees':'lookup'
					  (_cor1, _rec29)
				  in  let <OldSucc,OldPred> =
					  %% Line 320
					  case _5025 of
					    %% Line 321
					    <{'value',{_X_Block,OSucc,OPred}}> when 'true' ->
						%% Line 322
						<OSucc,OPred>
					    %% Line 323
					    <'none'> when 'true' ->
						%% Line 324
						<[],[]>
					    ( <_cor10> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_5025})
					      -| ['compiler_generated'] )
					  end
				      in  let <HT1> =
					      %% Line 328
					      call 'gb_trees':'enter'
						  (_cor1, {_cor0,Succ,OldPred}, _rec29)
					  in  let <_cor19> =
						  %% Line 330
						  fun (_cor16,_cor15) ->
						      %% Line 331
						      apply 'add_pred'/3
							  (_cor15, _cor16, _cor1)
					      in  let <_cor14> =
						      %% Line 333
						      call 'erlang':'--'
							  (Succ, OldSucc)
						  in  let <HT2> =
							  %% Line 330
							  call 'lists':'foldl'
							      (_cor19, HT1, _cor14)
						      in  let <_cor26> =
							      %% Line 335
							      fun (_cor23,_cor22) ->
								  %% Line 336
								  apply 'remove_pred'/3
								      (_cor22, _cor23, _cor1)
							  in  let <_cor21> =
								  %% Line 338
								  call 'erlang':'--'
								      (OldSucc, Succ)
							      in  let <HT3> =
								      %% Line 335
								      call 'lists':'foldl'
									  (_cor26, HT2, _cor21)
								  in  %% Line 339
								      call 'erlang':'setelement'
									  (2, _cor2, HT3)
			      -| ['compiler_generated'] )
			    ( <_cor35> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','cfg'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
'remove_pred'/3 =
    %% Line 341
    fun (_cor2,_cor1,_cor0) ->
	let <_3962> =
	    %% Line 342
	    call 'gb_trees':'lookup'
		(_cor1, _cor2)
	in  %% Line 342
	    case _3962 of
	      %% Line 343
	      <{'value',{Block,Succ,Preds}}> when 'true' ->
		  let <Code> =
		      %% Line 344
		      call 'hipe_bb':'code'
			  (Block)
		  in  let <NewCode> =
			  %% Line 345
			  apply 'remove_pred_from_phis'/3
			      (Code, _cor0, [])
		      in  let <NewBlock> =
			      %% Line 346
			      call 'hipe_bb':'code_update'
				  (Block, NewCode)
			  in  let <_cor6> =
				  %% Line 347
				  call 'lists':'delete'
				      (_cor0, Preds)
			      in  %% Line 347
				  call 'gb_trees':'update'
				      (_cor1, {NewBlock,Succ,_cor6}, _cor2)
	      %% Line 348
	      <'none'> when 'true' ->
		  _cor2
	      ( <_cor7> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_3962})
		-| ['compiler_generated'] )
	    end
'add_pred'/3 =
    %% Line 352
    fun (_cor2,_cor1,_cor0) ->
	let <_16> =
	    %% Line 353
	    call 'gb_trees':'lookup'
		(_cor1, _cor2)
	in  %% Line 353
	    case _16 of
	      %% Line 354
	      <{'value',{Block,Succ,Preds}}> when 'true' ->
		  let <_cor3> =
		      %% Line 355
		      call 'lists':'delete'
			  (_cor0, Preds)
		  in  %% Line 355
		      call 'gb_trees':'update'
			  (_cor1, {Block,Succ,[_cor0|_cor3]}, _cor2)
	      %% Line 356
	      <'none'> when 'true' ->
		  %% Line 357
		  call 'gb_trees':'insert'
		      (_cor1, {[],[],[_cor0|[]]}, _cor2)
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_16})
		-| ['compiler_generated'] )
	    end
'remove_pred_from_phis'/3 =
    %% Line 376
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <List = [I|Left],Label,Acc> when 'true' ->
	      let <_5326> =
		  call 'hipe_rtl':'is_phi'
		      (I)
	      in  %% Line 377
		  case _5326 of
		    %% Line 378
		    <'true'> when 'true' ->
			let <_cor3> =
			    call 'hipe_rtl':'phi_remove_pred'
				(I, _cor1)
			in  let <NewAcc> =
				%% Line 379
				[_cor3|_cor0]
			    in  %% Line 380
				apply 'remove_pred_from_phis'/3
				    (Left, _cor1, NewAcc)
		    %% Line 381
		    <'false'> when 'true' ->
			let <_cor5> =
			    %% Line 382
			    call 'lists':'reverse'
				(_cor0)
			in  %% Line 382
			    call 'erlang':'++'
				(_cor5, _cor2)
		    ( <_cor6> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_5326})
		      -| ['compiler_generated'] )
		  end
	  %% Line 384
	  <[],_X_Label,Acc> when 'true' ->
	      %% Line 385
	      call 'lists':'reverse'
		  (_cor0)
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'remove_pred_from_phis',3}}] )
	    -| ['compiler_generated'] )
	end
'take_bbs'/2 =
    %% Line 399
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],CFG> when 'true' ->
	      _cor0
	  %% Line 401
	  <Xs,CFG> when 'true' ->
	      let <Lbl> =
		  %% Line 402
		  call 'erlang':'hd'
		      (_cor1)
	      in  let <_6982> =
		      call 'hipe_rtl':'is_label'
			  (Lbl)
		  in  %% Line 403
		      case _6982 of
			%% Line 404
			<'true'> when 'true' ->
			    let <_cor3> =
				%% Line 405
				call 'erlang':'tl'
				    (_cor1)
			    in  let <_7667> =
				    %% Line 405
				    apply 'take_bb'/2
					(_cor3, [])
				in  %% Line 405
				    case _7667 of
				      %% Line 406
				      <{Code,Rest}> when 'true' ->
					  let <_cor5> =
					      call 'hipe_rtl':'label_name'
						  (Lbl)
					  in  let <_cor4> =
						  %% Line 407
						  call 'hipe_bb':'mk_bb'
						      (Code)
					      in  let <NewCFG> =
						      %% Line 407
						      apply 'bb_add'/3
							  (_cor0, _cor5, _cor4)
						  in  %% Line 408
						      apply 'take_bbs'/2
							  (Rest, NewCFG)
				      ( <_cor7> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_7667})
					-| ['compiler_generated'] )
				    end
			%% Line 410
			<'false'> when 'true' ->
			    %% Line 411
			    call 'erlang':'error'
				({'hipe_rtl_cfg',[98|[97|[115|[105|[99|[32|[98|[108|[111|[99|[107|[32|[100|[111|[101|[115|[110|[39|[116|[32|[115|[116|[97|[114|[116|[32|[119|[105|[116|[104|[32|[97|[32|[108|[97|[98|[101|[108]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],_cor1})
			( <_cor8> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_6982})
			  -| ['compiler_generated'] )
		      end
	end
'take_bb'/2 =
    %% Line 421
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],Code> when 'true' ->
	      let <_cor2> =
		  %% Line 422
		  call 'lists':'reverse'
		      (_cor0)
	      in  %% Line 422
		  {_cor2,[]}
	  %% Line 423
	  <[X|[Y|Xs]],Code> when 'true' ->
	      let <_841> =
		  call 'hipe_rtl':'is_label'
		      (X)
	      in  %% Line 424
		  case _841 of
		    %% Line 425
		    <'true'> when 'true' ->
			let <_cor3> =
			    call 'hipe_rtl':'label_name'
				(X)
			in  let <_cor4> =
				call 'hipe_rtl':'mk_goto'
				    (_cor3)
			    in  %% Line 426
				{[_cor4|[]],[X|[Y|Xs]]}
		    %% Line 427
		    <'false'> when 'true' ->
			let <_5408> =
			    %% Line 428
			    apply 'is_branch'/1
				(X)
			in  %% Line 428
			    case _5408 of
			      %% Line 429
			      <'true'> when 'true' ->
				  let <_7458> =
				      call 'hipe_rtl':'is_label'
					  (Y)
				  in  %% Line 430
				      case _7458 of
					%% Line 431
					<'true'> when 'true' ->
					    let <_cor5> =
						%% Line 432
						call 'lists':'reverse'
						    ([X|_cor0])
					    in  %% Line 432
						{_cor5,[Y|Xs]}
					%% Line 433
					<'false'> when 'true' ->
					    let <_cor6> =
						%% Line 436
						call 'lists':'reverse'
						    ([X|_cor0])
					    in  %% Line 436
						{_cor6,[Y|Xs]}
					( <_cor7> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_7458})
					  -| ['compiler_generated'] )
				      end
			      %% Line 438
			      <'false'> when 'true' ->
				  let <_5186> =
				      call 'hipe_rtl':'is_label'
					  (Y)
				  in  %% Line 439
				      case _5186 of
					%% Line 440
					<'true'> when 'true' ->
					    let <_cor8> =
						call 'hipe_rtl':'label_name'
						    (Y)
					    in  let <_cor9> =
						    call 'hipe_rtl':'mk_goto'
							(_cor8)
						in  let <_cor10> =
							%% Line 441
							call 'lists':'reverse'
							    ([_cor9|[X|_cor0]])
						    in  %% Line 441
							{_cor10,[Y|Xs]}
					%% Line 442
					<'false'> when 'true' ->
					    %% Line 443
					    apply 'take_bb'/2
						([Y|Xs], [X|_cor0])
					( <_cor11> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_5186})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor12> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_5408})
				-| ['compiler_generated'] )
			    end
		    ( <_cor13> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_841})
		      -| ['compiler_generated'] )
		  end
	  %% Line 447
	  <[X|[]],[]> when 'true' ->
	      let <_233> =
		  call 'hipe_rtl':'is_label'
		      (X)
	      in  %% Line 448
		  case _233 of
		    %% Line 449
		    <'true'> when 'true' ->
			let <_cor14> =
			    call 'hipe_rtl':'label_name'
				(X)
			in  let <_cor15> =
				call 'hipe_rtl':'mk_goto'
				    (_cor14)
			    in  %% Line 452
				{[X|[_cor15|[]]],[]}
		    %% Line 453
		    <'false'> when 'true' ->
			%% Line 454
			{[X|[]],[]}
		    ( <_cor16> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_233})
		      -| ['compiler_generated'] )
		  end
	  %% Line 456
	  <[X|[]],Code> when 'true' ->
	      let <_5545> =
		  call 'hipe_rtl':'is_label'
		      (X)
	      in  %% Line 457
		  case _5545 of
		    %% Line 458
		    <'true'> when 'true' ->
			let <_cor19> =
			    %% Line 461
			    call 'lists':'reverse'
				(_cor0)
			in  let <_cor17> =
				call 'hipe_rtl':'label_name'
				    (X)
			    in  let <_cor18> =
				    call 'hipe_rtl':'mk_goto'
					(_cor17)
				in  %% Line 461
				    {_cor19,[X|[_cor18|[]]]}
		    %% Line 462
		    <'false'> when 'true' ->
			let <_cor20> =
			    %% Line 463
			    call 'lists':'reverse'
				([X|_cor0])
			in  %% Line 463
			    {_cor20,[]}
		    ( <_cor21> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_5545})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor23,_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'take_bb',2}}] )
	    -| ['compiler_generated'] )
	end
'labels'/1 =
    %% Line 472
    fun (_cor0) ->
	%% Line 473
	( case _cor0 of
	    ( <( {'cfg',_rec31,_cor5,_cor6}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 474
		  call 'gb_trees':'keys'
		      (_rec31)
	      -| ['compiler_generated'] )
	    ( <_cor7> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'postorder'/1 =
    %% Line 476
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 477
	    apply 'reverse_postorder'/1
		(_cor0)
	in  %% Line 477
	    call 'lists':'reverse'
		(_cor1)
'reverse_postorder'/1 =
    %% Line 479
    fun (_cor0) ->
	( case _cor0 of
	    ( <( {'cfg',_cor5,_rec1,_cor6}
		 -| ['compiler_generated'] )> when 'true' ->
		  ( case _rec1 of
		      ( <( {'cfg_info',_cor8,_rec0,_cor9,_cor10,_cor11,_cor12,_cor13}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_cor3> =
				call 'hipe_consttab':'referred_labels'
				    (_cor6)
			    in  let <_cor2> =
				    %% Line 539
				    call 'gb_sets':'empty'
					()
				in  let <_3170> =
					%% Line 482
					apply 'depth_search'/4
					    ([_rec0|_cor3], _cor2, _cor0, [])
				    in  %% Line 481
					case _3170 of
					  <{Ordering,_X_Visited}> when 'true' ->
					      Ordering
					  ( <_cor4> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_3170})
					    -| ['compiler_generated'] )
					end
			-| ['compiler_generated'] )
		      ( <_cor14> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','cfg_info'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor7> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'depth_search'/4 =
    %% Line 485
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[N|Ns],Visited,CFG,Acc> when 'true' ->
	      let <_3078> =
		  %% Line 545
		  call 'gb_sets':'is_member'
		      (N, _cor2)
	      in  %% Line 486
		  case _3078 of
		    %% Line 487
		    <'true'> when 'true' ->
			%% Line 488
			apply 'depth_search'/4
			    (Ns, _cor2, _cor1, _cor0)
		    %% Line 489
		    <'false'> when 'true' ->
			let <_cor5> =
			    %% Line 490
			    apply 'succ'/2
				(_cor1, N)
			in  let <_cor4> =
				%% Line 542
				call 'gb_sets':'add'
				    (N, _cor2)
			    in  let <_2417> =
				    %% Line 490
				    apply 'depth_search'/4
					(_cor5, _cor4, _cor1, _cor0)
				in  %% Line 490
				    case _2417 of
				      <{Order,Vis}> when 'true' ->
					  %% Line 491
					  apply 'depth_search'/4
					      (Ns, Vis, _cor1, [N|Order])
				      ( <_cor6> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_2417})
					-| ['compiler_generated'] )
				    end
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_3078})
		      -| ['compiler_generated'] )
		  end
	  %% Line 493
	  <[],Visited,_cor12,Ordering> when 'true' ->
	      %% Line 494
	      {_cor0,_cor2}
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'depth_search',4}}] )
	    -| ['compiler_generated'] )
	end
'preorder'/1 =
    %% Line 497
    fun (_cor0) ->
	( case _cor0 of
	    ( <( {'cfg',_cor5,_rec1,_cor6}
		 -| ['compiler_generated'] )> when 'true' ->
		  ( case _rec1 of
		      ( <( {'cfg_info',_cor8,_rec0,_cor9,_cor10,_cor11,_cor12,_cor13}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_cor3> =
				call 'hipe_consttab':'referred_labels'
				    (_cor6)
			    in  let <_cor2> =
				    %% Line 539
				    call 'gb_sets':'empty'
					()
				in  let <_4272> =
					%% Line 500
					apply 'preorder_search'/4
					    ([_rec0|_cor3], _cor2, _cor0, [])
				    in  %% Line 499
					case _4272 of
					  <{Ordering,_X_Visited}> when 'true' ->
					      %% Line 501
					      call 'lists':'reverse'
						  (Ordering)
					  ( <_cor4> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_4272})
					    -| ['compiler_generated'] )
					end
			-| ['compiler_generated'] )
		      ( <_cor14> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','cfg_info'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor7> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'preorder_search'/4 =
    %% Line 503
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[N|Ns],Visited,CFG,Acc> when 'true' ->
	      let <_5031> =
		  %% Line 545
		  call 'gb_sets':'is_member'
		      (N, _cor2)
	      in  %% Line 504
		  case _5031 of
		    %% Line 505
		    <'true'> when 'true' ->
			%% Line 506
			apply 'preorder_search'/4
			    (Ns, _cor2, _cor1, _cor0)
		    %% Line 507
		    <'false'> when 'true' ->
			let <_cor5> =
			    %% Line 509
			    apply 'succ'/2
				(_cor1, N)
			in  let <_cor4> =
				%% Line 542
				call 'gb_sets':'add'
				    (N, _cor2)
			    in  let <_3909> =
				    %% Line 509
				    apply 'preorder_search'/4
					(_cor5, _cor4, _cor1, [N|_cor0])
				in  %% Line 508
				    case _3909 of
				      <{Order,Vis}> when 'true' ->
					  %% Line 510
					  apply 'preorder_search'/4
					      (Ns, Vis, _cor1, Order)
				      ( <_cor6> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_3909})
					-| ['compiler_generated'] )
				    end
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_5031})
		      -| ['compiler_generated'] )
		  end
	  %% Line 512
	  <[],Visited,_cor12,Ordering> when 'true' ->
	      %% Line 513
	      {_cor0,_cor2}
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'preorder_search',4}}] )
	    -| ['compiler_generated'] )
	end
'succ'/2 =
    %% Line 551
    fun (_cor1,_cor0) ->
	%% Line 552
	( case _cor1 of
	    ( <( {'cfg',_rec32,_cor8,_cor9}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_5384> =
		      %% Line 553
		      call 'gb_trees':'lookup'
			  (_cor0, _rec32)
		  in  %% Line 553
		      case _5384 of
			%% Line 554
			<{'value',{_X_Block,Succ,_X_Pred}}> when 'true' ->
			    Succ
			%% Line 556
			<'none'> when 'true' ->
			    %% Line 557
			    call 'erlang':'error'
				({[115|[117|[99|[99|[101|[115|[115|[111|[114|[32|[110|[111|[116|[32|[102|[111|[117|[110|[100]]]]]]]]]]]]]]]]]]],_cor0,_cor1})
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_5384})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor10> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'pred'/2 =
    %% Line 561
    fun (_cor1,_cor0) ->
	%% Line 562
	( case _cor1 of
	    ( <( {'cfg',_rec33,_cor8,_cor9}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_7790> =
		      %% Line 563
		      call 'gb_trees':'lookup'
			  (_cor0, _rec33)
		  in  %% Line 563
		      case _7790 of
			%% Line 564
			<{'value',{_X_Block,_X_Succ,Pred}}> when 'true' ->
			    Pred
			%% Line 566
			<'none'> when 'true' ->
			    %% Line 567
			    call 'erlang':'error'
				({[112|[114|[101|[100|[101|[99|[101|[115|[115|[111|[114|[32|[110|[111|[116|[32|[102|[111|[117|[110|[100]]]]]]]]]]]]]]]]]]]]],_cor0,_cor1})
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_7790})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor10> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'fallthrough'/2 =
    %% Line 572
    fun (_cor1,_cor0) ->
	%% Line 573
	( case _cor1 of
	    ( <( {'cfg',_rec34,_cor9,_cor10}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_1769> =
		      %% Line 574
		      call 'gb_trees':'lookup'
			  (_cor0, _rec34)
		  in  %% Line 574
		      case _1769 of
			%% Line 575
			<{'value',{_X_Block,Succ,_cor12}}> when 'true' ->
			    %% Line 576
			    case Succ of
			      %% Line 577
			      <[X|_cor13]> when 'true' ->
				  X
			      %% Line 578
			      <_cor14> when 'true' ->
				  'none'
			    end
			%% Line 580
			<'none'> when 'true' ->
			    %% Line 581
			    call 'erlang':'error'
				({[102|[97|[108|[108|[116|[104|[114|[111|[117|[103|[104|[32|[108|[97|[98|[101|[108|[32|[110|[111|[116|[32|[102|[111|[117|[110|[100]]]]]]]]]]]]]]]]]]]]]]]]]]],_cor0})
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_1769})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor11> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'conditional'/2 =
    %% Line 584
    fun (_cor1,_cor0) ->
	%% Line 585
	( case _cor1 of
	    ( <( {'cfg',_rec35,_cor9,_cor10}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_98> =
		      %% Line 586
		      call 'gb_trees':'lookup'
			  (_cor0, _rec35)
		  in  %% Line 586
		      case _98 of
			<{'value',{_X_Block,Succ,_cor12}}> when 'true' ->
			    %% Line 587
			    case Succ of
			      %% Line 588
			      <[]> when 'true' ->
				  'none'
			      %% Line 589
			      <[_cor13|[]]> when 'true' ->
				  'none'
			      %% Line 590
			      <[_cor14|Labels]> when 'true' ->
				  Labels
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'case_clause',Succ})
				-| ['compiler_generated'] )
			    end
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_98})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor11> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'linearize_cfg'/1 =
    %% Line 601
    fun (_cor0) ->
	let <Start> =
	    %% Line 602
	    apply 'start_label'/1
		(_cor0)
	in  let <Vis> =
		call 'gb_sets':'empty'
		    ()
	    in  let <_3064> =
		    %% Line 604
		    apply 'lin_succ'/3
			(Start, _cor0, Vis)
		in  %% Line 604
		    case _3064 of
		      <{Vis0,NestedCode}> when 'true' ->
			  ( case _cor0 of
			      ( <( {'cfg',_cor3,_cor4,_rec12}
				   -| ['compiler_generated'] )> when 'true' ->
				    let <BlocksInData> =
					%% Line 605
					call 'hipe_consttab':'referred_labels'
					    (_rec12)
				    in  let <AllCode> =
					    %% Line 606
					    apply 'lin_other_entries'/4
						(NestedCode, _cor0, BlocksInData, Vis0)
					in  %% Line 607
					    call 'lists':'flatten'
						(AllCode)
				-| ['compiler_generated'] )
			      ( <_cor5> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','cfg'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_3064})
			-| ['compiler_generated'] )
		    end
'lin_succ'/3 =
    %% Line 609
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'none',_X_CFG,Vis> when 'true' ->
	      %% Line 610
	      {_cor0,[]}
	  %% Line 611
	  <[Label|Labels],CFG,Vis> when 'true' ->
	      let <_408> =
		  %% Line 612
		  apply 'lin_succ'/3
		      (Label, _cor1, _cor0)
	      in  %% Line 612
		  case _408 of
		    <{Vis1,Code1}> when 'true' ->
			let <_1715> =
			    %% Line 613
			    apply 'lin_succ'/3
				(Labels, _cor1, Vis1)
			in  %% Line 613
			    case _1715 of
			      <{Vis2,Code2}> when 'true' ->
				  %% Line 614
				  {Vis2,[Code1|[Code2|[]]]}
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_1715})
				-| ['compiler_generated'] )
			    end
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_408})
		      -| ['compiler_generated'] )
		  end
	  %% Line 615
	  <[],_X_CFG,Vis> when 'true' ->
	      %% Line 616
	      {_cor0,[]}
	  %% Line 617
	  <Label,CFG,Vis> when 'true' ->
	      let <_6079> =
		  call 'gb_sets':'is_member'
		      (_cor2, _cor0)
	      in  %% Line 618
		  case _6079 of
		    %% Line 619
		    <'true'> when 'true' ->
			%% Line 620
			{_cor0,[]}
		    %% Line 621
		    <'false'> when 'true' ->
			let <Vis0> =
			    call 'gb_sets':'add'
				(_cor2, _cor0)
			in  let <_3692> =
				%% Line 623
				apply 'bb'/2
				    (_cor1, _cor2)
			    in  %% Line 623
				case _3692 of
				  %% Line 624
				  <'not_found'> when 'true' ->
				      %% Line 625
				      call 'erlang':'error'
					  ({'hipe_rtl_cfg',[78|[111|[32|[98|[97|[115|[105|[99|[32|[98|[108|[111|[99|[107|[32|[119|[105|[116|[104|[32|[108|[97|[98|[101|[108]]]]]]]]]]]]]]]]]]]]]]]]],_cor2})
				  %% Line 626
				  <BB> when 'true' ->
				      let <Fallthrough> =
					  %% Line 627
					  apply 'fallthrough'/2
					      (_cor1, _cor2)
				      in  let <Cond> =
					      %% Line 628
					      apply 'conditional'/2
						  (_cor1, _cor2)
					  in  let <LblInstr> =
						  call 'hipe_rtl':'mk_label'
						      (_cor2)
					      in  let <_6874> =
						      %% Line 630
						      apply 'lin_succ'/3
							  (Fallthrough, _cor1, Vis0)
						  in  %% Line 630
						      case _6874 of
							<{Vis1,Code1}> when 'true' ->
							    let <_7164> =
								%% Line 631
								apply 'lin_succ'/3
								    (Cond, _cor1, Vis1)
							    in  %% Line 631
								case _7164 of
								  <{Vis2,Code2}> when 'true' ->
								      let <_cor11> =
									  %% Line 632
									  call 'hipe_bb':'code'
									      (_3692)
								      in  %% Line 632
									  {Vis2,[[LblInstr|_cor11]|[Code1|[Code2|[]]]]}
								  ( <_cor10> when 'true' ->
									primop 'match_fail'
									    ({'badmatch',_7164})
								    -| ['compiler_generated'] )
								end
							( <_cor9> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_6874})
							  -| ['compiler_generated'] )
						      end
				end
		    ( <_cor13> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_6079})
		      -| ['compiler_generated'] )
		  end
	end
'lin_other_entries'/4 =
    %% Line 636
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Code,_X_CFG,[],_X_Vis> when 'true' ->
	      _cor3
	  %% Line 638
	  <Code,CFG,[E|Es],Vis> when 'true' ->
	      let <_6706> =
		  %% Line 639
		  apply 'lin_succ'/3
		      (E, _cor2, _cor0)
	      in  %% Line 639
		  case _6706 of
		    <{Vis0,MoreCode}> when 'true' ->
			%% Line 640
			apply 'lin_other_entries'/4
			    ([_cor3|[MoreCode|[]]], _cor2, Es, Vis0)
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_6706})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'lin_other_entries',4}}] )
	    -| ['compiler_generated'] )
	end
'remove_trivial_bbs'/1 =
    %% Line 662
    fun (_cor0) ->
	do  %% Line 663
	    call 'hipe_timing':'start_optional_timer'
		([77|[101|[114|[103|[101|[32|[66|[66|[115]]]]]]]]], 'hipe_rtl_cfg')
	    let <_cor1> =
		%% Line 664
		apply 'rewrite_trivial_branches'/1
		    (_cor0)
	    in  let <CFG0> =
		    %% Line 664
		    apply 'merge_bbs'/1
			(_cor1)
		in  do  do  %% Line 665
			    call 'hipe_timing':'stop_optional_timer'
				([77|[101|[114|[103|[101|[32|[66|[66|[115]]]]]]]]], 'hipe_rtl_cfg')
			    %% Line 667
			    call 'hipe_timing':'start_optional_timer'
				([70|[105|[110|[100|[68|[101|[97|[100]]]]]]]], 'hipe_rtl_cfg')
			( case CFG0 of
			    ( <( {'cfg',_rec31,_cor5,_cor6}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_cor4> =
				      call 'gb_trees':'keys'
					  (_rec31)
				  in  let <_cor3> =
					  %% Line 774
					  call 'gb_trees':'empty'
					      ()
				      in  let <_2830> =
					      %% Line 668
					      apply 'remap'/3
						  (_cor4, _cor3, CFG0)
					  in  %% Line 668
					      case _2830 of
						<{NewMap,CFG1}> when 'true' ->
						    do  do  %% Line 669
							    call 'hipe_timing':'stop_optional_timer'
								([70|[105|[110|[100|[68|[101|[97|[100]]]]]]]], 'hipe_rtl_cfg')
							    %% Line 670
							    call 'hipe_timing':'start_optional_timer'
								([76|[97|[98|[101|[108|[115]]]]]], 'hipe_rtl_cfg')
							( case CFG1 of
							    ( <( {'cfg',_fol258,_fol259,_fol260}
								 -| ['compiler_generated'] )> when 'true' ->
								  let <Labels> =
								      call 'gb_trees':'keys'
									  (_fol258)
								  in  do  do  %% Line 672
									      call 'hipe_timing':'stop_optional_timer'
										  ([76|[97|[98|[101|[108|[115]]]]]], 'hipe_rtl_cfg')
									      %% Line 673
									      call 'hipe_timing':'start_optional_timer'
										  ([82|[101|[100|[105|[114|[101|[99|[116|[66|[114|[97|[110|[99|[104|[101|[115]]]]]]]]]]]]]]]], 'hipe_rtl_cfg')
									  let <CFG2> =
									      %% Line 674
									      apply 'redirect_branches'/2
										  (NewMap, CFG1)
									  in  do  do  %% Line 675
										      call 'hipe_timing':'stop_optional_timer'
											  ([82|[101|[100|[105|[114|[101|[99|[116|[66|[114|[97|[110|[99|[104|[101|[115]]]]]]]]]]]]]]]], 'hipe_rtl_cfg')
										      %% Line 676
										      call 'hipe_timing':'start_optional_timer'
											  ([82|[101|[100|[105|[114|[101|[99|[116|[79|[112|[115]]]]]]]]]]], 'hipe_rtl_cfg')
										  let <CFG3> =
										      %% Line 677
										      apply 'redirect_ops'/3
											  (Labels, CFG2, NewMap)
										  in  do  do  %% Line 678
											      call 'hipe_timing':'stop_optional_timer'
												  ([82|[101|[100|[105|[114|[101|[99|[116|[79|[112|[115]]]]]]]]]]], 'hipe_rtl_cfg')
											      %% Line 679
											      call 'hipe_timing':'start_optional_timer'
												  ([82|[101|[100|[105|[114|[101|[99|[116|[68|[97|[116|[97]]]]]]]]]]]], 'hipe_rtl_cfg')
											  let <CFG4> =
											      %% Line 680
											      apply 'redirect_data'/2
												  (CFG3, NewMap)
											  in  do  do  %% Line 681
												      call 'hipe_timing':'stop_optional_timer'
													  ([82|[101|[100|[105|[114|[101|[99|[116|[68|[97|[116|[97]]]]]]]]]]]], 'hipe_rtl_cfg')
												      %% Line 682
												      call 'hipe_timing':'start_optional_timer'
													  ([82|[101|[100|[105|[114|[101|[99|[116|[83|[116|[97|[114|[116]]]]]]]]]]]]], 'hipe_rtl_cfg')
												  let <CFG5> =
												      %% Line 683
												      apply 'redirect_start'/2
													  (CFG4, NewMap)
												  in  do  %% Line 684
													  call 'hipe_timing':'stop_optional_timer'
													      ([82|[101|[100|[105|[114|[101|[99|[116|[83|[116|[97|[114|[116]]]]]]]]]]]]], 'hipe_rtl_cfg')
													  CFG5
							      -| ['compiler_generated'] )
							    ( <_cor7> when 'true' ->
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( 'error'
													 -| ['compiler_generated'] )
									(( {'badrecord','cfg'}
									   -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
						( <_cor5> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_2830})
						  -| ['compiler_generated'] )
					      end
			      -| ['compiler_generated'] )
			    ( <_cor7> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','cfg'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
'redirect_start'/2 =
    %% Line 688
    fun (_cor1,_cor0) ->
	let <Start> =
	    %% Line 689
	    apply 'start_label'/1
		(_cor1)
	in  let <_7146> =
		%% Line 763
		call 'gb_trees':'lookup'
		    (Start, _cor0)
	    in  let <_5588> =
		    %% Line 763
		    case _7146 of
		      %% Line 764
		      <{'value',{'dead',To}}> when 'true' ->
			  case call 'gb_trees':'lookup'
				   (To, _cor0) of
			    <{'value',{'dead',_6224}}> when 'true' ->
				%% Line 765
				apply 'forward'/2
				    (_6224, _cor0)
			    %% Line 766
			    <_cor5> when 'true' ->
				To
			  end
		      %% Line 766
		      <_cor5> when 'true' ->
			  Start
		    end
		in  %% Line 690
		    case _5588 of
		      %% Line 691
		      <_cor6>
			  when call 'erlang':'=:='
				(_5588,
				 Start) ->
			  _cor1
		      %% Line 692
		      <NewStart> when 'true' ->
			  %% Line 693
			  apply 'start_label_update'/2
			      (_cor1, _5588)
		    end
'redirect_data'/2 =
    %% Line 696
    fun (_cor1,_cor0) ->
	( case _cor1 of
	    ( <( {'cfg',_cor3,_cor4,_rec12}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor3> =
		      %% Line 698
		      apply 'rd_succs'/1
			  (_cor0)
		  in  let <NewData> =
			  %% Line 698
			  call 'hipe_consttab':'update_referred_labels'
			      (_rec12, _cor3)
		      in  case _cor1 of
			    <{'cfg',_cor6,_cor7,_cor8}> when 'true' ->
				call 'erlang':'setelement'
				    (4, _cor1, NewData)
			    ( <_cor9> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','cfg'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
	      -| ['compiler_generated'] )
	    ( <_cor5> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'redirect_branches'/2 =
    %% Line 701
    fun (_cor1,_cor0) ->
	let <_cor14> =
	    %% Line 702
	    fun (_cor11,_cor10) ->
		case <_cor11,_cor10> of
		  <{From,{'newsuccs',Redirects}},CFGAcc> when 'true' ->
		      let <_cor9> =
			  %% Line 704
			  fun (_cor6,_cor5) ->
			      case <_cor6,_cor5> of
				<{ToOld,ToNew},CFG1> when 'true' ->
				    %% Line 705
				    case apply 'bb'/2
					     (_cor5, From) of
				      %% Line 706
				      <'not_found'> when 'true' ->
					  _cor5
				      %% Line 708
				      <_cor17> when 'true' ->
					  let <_7146> =
					      %% Line 763
					      call 'gb_trees':'lookup'
						  (ToNew, _cor1)
					  in  let <To> =
						  %% Line 763
						  case _7146 of
						    %% Line 764
						    <{'value',{'dead',To}}> when 'true' ->
							%% Line 765
							apply 'forward'/2
							    (To, _cor1)
						    %% Line 766
						    <_1818> when 'true' ->
							ToNew
						  end
					      in  %% Line 710
						  apply 'redirect'/4
						      (_cor5, From, ToOld, To)
				    end
				( <_cor8,_cor7> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor6,_cor5})
					-| [{'function_name',{'-redirect_branches/2-fun-0-',2}}] )
				  -| ['compiler_generated'] )
			      end
		      in  %% Line 703
			  call 'lists':'foldl'
			      (_cor9, _cor10, Redirects)
		  %% Line 715
		  <_cor18,CFGAcc> when 'true' ->
		      _cor10
		end
	in  let <_cor2> =
		%% Line 718
		call 'gb_trees':'to_list'
		    (_cor1)
	    in  %% Line 702
		call 'lists':'foldl'
		    (_cor14, _cor0, _cor2)
'redirect'/4 =
    %% Line 720
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <BB> =
	    %% Line 721
	    apply 'bb'/2
		(_cor3, _cor2)
	in  let <LastInstr> =
		%% Line 722
		call 'hipe_bb':'last'
		    (BB)
	    in  let <NewLastInstr> =
		    call 'hipe_rtl':'redirect_jmp'
			(LastInstr, _cor1, _cor0)
		in  let <_cor7> =
			%% Line 724
			call 'hipe_bb':'butlast'
			    (BB)
		    in  let <_cor8> =
			    %% Line 724
			    call 'erlang':'++'
				(_cor7, [NewLastInstr|[]])
			in  let <NewBB> =
				%% Line 724
				call 'hipe_bb':'mk_bb'
				    (_cor8)
			    in  %% Line 725
				apply 'bb_add'/3
				    (_cor3, _cor2, NewBB)
'bb_remove'/2 =
    %% Line 727
    fun (_cor1,_cor0) ->
	%% Line 728
	( case _cor1 of
	    ( <( {'cfg',_rec36,_cor17,_cor18}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_4690> =
		      %% Line 729
		      call 'gb_trees':'lookup'
			  (_cor0, _rec36)
		  in  %% Line 729
		      case _4690 of
			%% Line 730
			<{'value',{_X_Block,Succ,_X_Preds}}> when 'true' ->
			    let <_cor9> =
				%% Line 732
				fun (_cor6,_cor5) ->
				    %% Line 733
				    apply 'remove_pred'/3
					(_cor5, _cor6, _cor0)
			    in  let <HT1> =
				    %% Line 732
				    call 'lists':'foldl'
					(_cor9, _rec36, Succ)
				in  let <_rec37> =
					%% Line 736
					call 'gb_trees':'delete'
					    (_cor0, HT1)
				    in  %% Line 736
					call 'erlang':'setelement'
					    (2, _cor1, _rec37)
			%% Line 737
			<'none'> when 'true' ->
			    _cor1
			( <_cor14> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_4690})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor19> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','cfg'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'remap'/3 =
    %% Line 741
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[L|Rest],Map,CFG> when 'true' ->
	      let <_cor3> =
		  %% Line 742
		  apply 'bb'/2
		      (_cor0, L)
	      in  let <_2917> =
		      %% Line 801
		      call 'hipe_bb':'code'
			  (_cor3)
		  in  let <_5038> =
			  %% Line 801
			  apply 'is_empty_bb'/1
			      (_2917)
		      in  %% Line 742
			  case _5038 of
			    %% Line 743
			    <'true'> when 'true' ->
				let <_651> =
				    %% Line 744
				    apply 'succ'/2
					(_cor0, L)
				in  %% Line 744
				    case _651 of
				      %% Line 745
				      <[_cor11|[]]>
					  when call 'erlang':'=:='
						(_cor11,
						 L) ->
					  %% Line 746
					  apply 'remap'/3
					      (Rest, _cor1, _cor0)
				      %% Line 747
				      <[SuccL|[]]> when 'true' ->
					  let <CFG1> =
					      %% Line 748
					      apply 'bb_remove'/2
						  (_cor0, L)
					  in  let <NewMap> =
						  %% Line 749
						  apply 'remap_to_succ'/4
						      (L, SuccL, _cor1, _cor0)
					      in  %% Line 750
						  apply 'remap'/3
						      (Rest, NewMap, CFG1)
				      ( <_cor6> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_651})
					-| ['compiler_generated'] )
				    end
			    %% Line 752
			    <'false'> when 'true' ->
				%% Line 753
				apply 'remap'/3
				    (Rest, _cor1, _cor0)
			    ( <_cor7> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_5038})
			      -| ['compiler_generated'] )
			  end
	  %% Line 755
	  <[],Map,CFG> when 'true' ->
	      %% Line 756
	      {_cor1,_cor0}
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'remap',3}}] )
	    -| ['compiler_generated'] )
	end
'remap_to_succ'/4 =
    %% Line 758
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_7146> =
	    %% Line 763
	    call 'gb_trees':'lookup'
		(_cor2, _cor1)
	in  let <_cor5> =
		%% Line 763
		case _7146 of
		  %% Line 764
		  <{'value',{'dead',To}}> when 'true' ->
		      %% Line 765
		      apply 'forward'/2
			  (To, _cor1)
		  %% Line 766
		  <_cor5> when 'true' ->
		      _cor2
		end
	    in  let <_cor4> =
		    %% Line 759
		    apply 'pred'/2
			(_cor0, _cor3)
		in  let <Map2> =
			%% Line 793
			call 'gb_trees':'enter'
			    (_cor3, {'dead',_cor5}, _cor1)
		    in  let <_cor9> =
			    %% Line 794
			    fun (_cor6,_7502) ->
				%% Line 795
				apply 'add_redirectedto'/4
				    (_cor6, _cor3, _cor5, _7502)
			in  %% Line 794
			    call 'lists':'foldl'
				(_cor9, Map2, _cor4)
'forward'/2 =
    %% Line 762
    fun (_cor1,_cor0) ->
	%% Line 763
	case call 'gb_trees':'lookup'
		 (_cor1, _cor0) of
	  %% Line 764
	  <{'value',{'dead',To}}> when 'true' ->
	      %% Line 765
	      apply 'forward'/2
		  (To, _cor0)
	  %% Line 766
	  <_cor5> when 'true' ->
	      _cor1
	end
'rd_succs'/1 =
    %% Line 776
    fun (_cor0) ->
	let <_cor7> =
	    %% Line 777
	    fun (_cor4,_cor3) ->
		case <_cor4,_cor3> of
		  <{From,{'dead',To}},Acc> when 'true' ->
		      let <_7146> =
			  call 'gb_trees':'lookup'
			      (To, _cor0)
		      in  let <_cor2> =
			      case _7146 of
				<{'value',{'dead',_8313}}> when 'true' ->
				    apply 'forward'/2
					(_8313, _cor0)
				<_cor5> when 'true' ->
				    To
			      end
			  in  [{From,_cor2}|_cor3]
		  %% Line 778
		  <_cor9,Acc> when 'true' ->
		      _cor3
		end
	in  let <_cor1> =
		%% Line 781
		call 'gb_trees':'to_list'
		    (_cor0)
	    in  %% Line 777
		call 'lists':'foldl'
		    (_cor7, %% Line 780
			    [], _cor1)
'add_redirectedto'/4 =
    %% Line 783
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_1520> =
	    %% Line 784
	    call 'gb_trees':'lookup'
		(_cor3, _cor0)
	in  %% Line 784
	    case _1520 of
	      %% Line 785
	      <{'value',{'newsuccs',NS}}> when 'true' ->
		  let <_cor4> =
		      %% Line 786
		      call 'lists':'keydelete'
			  (_cor2, 1, NS)
		  in  %% Line 786
		      call 'gb_trees':'update'
			  (_cor3, {'newsuccs',[{_cor2,_cor1}|_cor4]}, _cor0)
	      %% Line 787
	      <{'value',{'dead',_cor10}}> when 'true' ->
		  _cor0
	      %% Line 788
	      <'none'> when 'true' ->
		  %% Line 789
		  call 'gb_trees':'insert'
		      (_cor3, {'newsuccs',[{_cor2,_cor1}|[]]}, _cor0)
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_1520})
		-| ['compiler_generated'] )
	    end
'is_empty_bb'/1 =
    %% Line 803
    fun (_cor0) ->
	case _cor0 of
	  <[I|[]]> when 'true' ->
	      call 'hipe_rtl':'is_goto'
		  (I)
	  %% Line 805
	  <[I|Is]> when 'true' ->
	      let <_8624> =
		  call 'hipe_rtl':'is_comment'
		      (I)
	      in  %% Line 806
		  case _8624 of
		    %% Line 807
		    <'true'> when 'true' ->
			%% Line 808
			apply 'is_empty_bb'/1
			    (Is)
		    %% Line 809
		    <'false'> when 'true' ->
			%% Line 810
			'false'
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_8624})
		      -| ['compiler_generated'] )
		  end
	  %% Line 812
	  <[]> when 'true' ->
	      %% Line 813
	      'true'
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'is_empty_bb',1}}] )
	    -| ['compiler_generated'] )
	end
'rewrite_trivial_branches'/1 =
    %% Line 819
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 820
	    apply 'postorder'/1
		(_cor0)
	in  %% Line 820
	    apply 'rewrite_trivial_branches'/2
		(_cor1, _cor0)
'rewrite_trivial_branches'/2 =
    %% Line 822
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[L|Left],CFG> when 'true' ->
	      let <BB> =
		  %% Line 823
		  apply 'bb'/2
		      (_cor0, L)
	      in  let <Last> =
		      %% Line 824
		      call 'hipe_bb':'last'
			  (BB)
		  in  let <_1759> =
			  call 'hipe_rtl':'is_goto'
			      (Last)
		      in  %% Line 825
			  case _1759 of
			    %% Line 826
			    <'true'> when 'true' ->
				%% Line 827
				apply 'rewrite_trivial_branches'/2
				    (Left, _cor0)
			    %% Line 828
			    <'false'> when 'true' ->
				let <_1744> =
				    case Last of
				      <{'branch',_cor3,_cor4,_cor5,_cor6,_cor7,_cor8}> when 'true' ->
					  'true'
				      <{'switch',_cor9,_cor10,_cor11}> when 'true' ->
					  'true'
				      <{'goto',_cor12}> when 'true' ->
					  'true'
				      <_cor13> when 'true' ->
					  'false'
				    end
				in  %% Line 829
				    case _1744 of
				      %% Line 830
				      <'false'> when 'true' ->
					  %% Line 831
					  apply 'rewrite_trivial_branches'/2
					      (Left, _cor0)
				      %% Line 832
				      <'true'> when 'true' ->
					  %% Line 833
					  case apply 'succ'/2
						   (_cor0, L) of
					    %% Line 834
					    <[Successor|[]]> when 'true' ->
						let <Head> =
						    %% Line 835
						    call 'hipe_bb':'butlast'
							(BB)
						in  let <_cor5> =
							call 'hipe_rtl':'mk_goto'
							    (Successor)
						    in  let <_cor6> =
							    %% Line 836
							    call 'erlang':'++'
								(Head, [_cor5|[]])
							in  let <NewBB> =
								%% Line 836
								call 'hipe_bb':'mk_bb'
								    (_cor6)
							    in  let <NewCFG> =
								    %% Line 837
								    apply 'bb_add'/3
									(_cor0, L, NewBB)
								in  %% Line 838
								    apply 'rewrite_trivial_branches'/2
									(Left, NewCFG)
					    %% Line 839
					    <_cor14> when 'true' ->
						%% Line 840
						apply 'rewrite_trivial_branches'/2
						    (Left, _cor0)
					  end
				      ( <_cor10> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_1744})
					-| ['compiler_generated'] )
				    end
			    ( <_cor11> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_1759})
			      -| ['compiler_generated'] )
			  end
	  %% Line 844
	  <[],CFG> when 'true' ->
	      _cor0
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'rewrite_trivial_branches',2}}] )
	    -| ['compiler_generated'] )
	end
'merge_bbs'/1 =
    %% Line 860
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 861
	    apply 'postorder'/1
		(_cor0)
	in  %% Line 861
	    call 'lists':'foldl'
		('merge_successor'/2, _cor0, _cor1)
'merge_successor'/2 =
    %% Line 864
    fun (_cor1,_cor0) ->
	let <_7111> =
	    %% Line 866
	    apply 'bb'/2
		(_cor0, _cor1)
	in  %% Line 866
	    case _7111 of
	      %% Line 867
	      <'not_found'> when 'true' ->
		  _cor0
	      %% Line 868
	      <BB> when 'true' ->
		  let <StartLabel> =
		      %% Line 869
		      apply 'start_label'/1
			  (_cor0)
		  in  let <Last> =
			  %% Line 870
			  call 'hipe_bb':'last'
			      (_7111)
		      in  let <_cor5> =
			      %% Line 873
			      apply 'branch_successors'/1
				  (Last)
			  in  let <_cor4> =
				  case Last of
				    <{'call',_cor4,_887,_cor6,_cor7,_cor8,_cor9,_cor10}> when 'true' ->
					let <_2617> =
					    call 'hipe_rtl':'call_fail'
						(Last)
					in  [_2617|[]]
				    <_cor11> when 'true' ->
					[]
				  end
			      in  %% Line 873
				  case <_cor5,_cor4> of
				    %% Line 874
				    <[Successor|[]],[_cor16|[]]>
					when call 'erlang':'=:='
					      (_cor16,
					       Successor) ->
					_cor0
				    %% Line 877
				    <[Successor|[]],_cor17>
					when call 'erlang':'=/='
					      (Successor,
					       StartLabel) ->
					let <_cor6> =
					    %% Line 879
					    apply 'pred'/2
						(_cor0, Successor)
					in  %% Line 879
					    case <> of
					      %% Line 880
					      <>
						  when call 'erlang':'=:='
							([_cor1|[]],
							 _cor6) ->
						  ( case _cor0 of
						      ( <( {'cfg',_rec26,_cor8,_cor9}
							   -| ['compiler_generated'] )> when 'true' ->
							    let <_6363> =
								call 'gb_trees':'lookup'
								    (Successor, _rec26)
							    in  let <_cor7> =
								    case _6363 of
								      <{'value',{Block,_X_Succ,_X_Pred}}> when 'true' ->
									  Block
								      <'none'> when 'true' ->
									  'not_found'
								      ( <_7689> when 'true' ->
									    primop 'match_fail'
										({'case_clause',_6363})
									-| ['compiler_generated'] )
								    end
								in  let <NewCode> =
									%% Line 882
									apply 'merge'/3
									    (_7111, _cor7, Successor)
								    in  let <NewBB> =
									    %% Line 883
									    call 'hipe_bb':'mk_bb'
										(NewCode)
									in  let <_cor10> =
										%% Line 884
										apply 'bb_remove'/2
										    (_cor0, Successor)
									    in  %% Line 884
										apply 'bb_add'/3
										    (_cor10, _cor1, NewBB)
							-| ['compiler_generated'] )
						      ( <_cor10> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','cfg'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
						    -| ['compiler_generated'] )
					      %% Line 885
					      <> when 'true' ->
						  _cor0
					    end
				    %% Line 888
				    <_fol205,_fol206> when 'true' ->
					_cor0
				  end
	    end
'merge'/3 =
    %% Line 896
    fun (_cor2,_cor1,_cor0) ->
	let <Head> =
	    %% Line 897
	    call 'hipe_bb':'butlast'
		(_cor2)
	in  let <Last> =
		%% Line 898
		call 'hipe_bb':'last'
		    (_cor2)
	    in  let <Tail> =
		    %% Line 899
		    call 'hipe_bb':'code'
			(_cor1)
		in  let <_643> =
			call 'hipe_rtl':'is_goto'
			    (Last)
		    in  %% Line 900
			case _643 of
			  %% Line 901
			  <'true'> when 'true' ->
			      %% Line 903
			      call 'erlang':'++'
				  (Head, Tail)
			  %% Line 904
			  <'false'> when 'true' ->
			      let <_cor6> =
				  call 'hipe_rtl':'redirect_jmp'
				      (Last, _cor0, %% Line 908
						    [])
			      in  %% Line 908
				  call 'erlang':'++'
				      (Head, [_cor6|Tail])
			  ( <_cor7> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_643})
			    -| ['compiler_generated'] )
			end
'remove_unreachable_code'/1 =
    %% Line 927
    fun (_cor0) ->
	let <Start> =
	    %% Line 928
	    apply 'start_label'/1
		(_cor0)
	in  let <_cor2> =
		%% Line 929
		call 'gb_sets':'from_list'
		    ([Start|[]])
	    in  let <Reachable> =
		    %% Line 929
		    apply 'find_reachable'/3
			([Start|[]], _cor0, _cor2)
		in  ( case _cor0 of
			( <( {'cfg',_rec31,_cor5,_cor6}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <_cor4> =
				  call 'gb_trees':'keys'
				      (_rec31)
			      in  let <Labels> =
				      %% Line 932
				      call 'ordsets':'from_list'
					  (_cor4)
				  in  let <_8725> =
					  %% Line 933
					  call 'ordsets':'subtract'
					      (Labels, Reachable)
				      in  %% Line 933
					  case _8725 of
					    %% Line 934
					    <[]> when 'true' ->
						_cor0
					    %% Line 936
					    <Remove> when 'true' ->
						let <_cor10> =
						    %% Line 937
						    fun (_cor7,_cor6) ->
							apply 'bb_remove'/2
							    (_cor6, _cor7)
						in  let <NewCFG> =
							%% Line 937
							call 'lists':'foldl'
							    (_cor10, _cor0, _8725)
						    in  %% Line 938
							apply 'remove_unreachable_code'/1
							    (NewCFG)
					  end
			  -| ['compiler_generated'] )
			( <_cor7> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','cfg'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
'find_reachable'/3 =
    %% Line 941
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[Label|Left],CFG,Acc> when 'true' ->
	      let <NewAcc> =
		  %% Line 942
		  call 'gb_sets':'add'
		      (Label, _cor0)
	      in  let <Succ> =
		      %% Line 943
		      apply 'succ'/2
			  (_cor1, Label)
		  in  let <_cor11> =
			  %% Line 944
			  ( letrec
				'lc$^0'/1 =
				    fun (_cor8) ->
					case _cor8 of
					  <[X|_cor6]> when 'true' ->
					      ( case call 'gb_sets':'is_member'
							 (X, _cor0) of
						  <'false'> when 'true' ->
						      let <_cor9> =
							  apply 'lc$^0'/1
							      (_cor6)
						      in  ( [X|_cor9]
							    -| ['compiler_generated'] )
						  ( <'true'> when 'true' ->
							apply 'lc$^0'/1
							    (_cor6)
						    -| ['compiler_generated'] )
						  ( <_cor_variable> when 'true' ->
							call 'erlang':'error'
							    ('badarg')
						    -| ['compiler_generated'] )
						end
						-| ['list_comprehension'] )
					  <[]> when 'true' ->
					      Left
					  ( <_4342> when 'true' ->
						( primop 'match_fail'
						      ({'function_clause',_cor8})
						  -| [{'function_name',{'lc$^0',1}}] )
					    -| ['compiler_generated'] )
					end
			    in  apply 'lc$^0'/1
				    (Succ)
			    -| ['list_comprehension'] )
		      in  %% Line 944
			  apply 'find_reachable'/3
			      (_cor11, _cor1, NewAcc)
	  %% Line 946
	  <[],_X_CFG,Acc> when 'true' ->
	      %% Line 947
	      call 'gb_sets':'to_list'
		  (_cor0)
	  ( <_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'find_reachable',3}}] )
	    -| ['compiler_generated'] )
	end
'init'/1 =
    %% Line 48
    fun (_cor0) ->
	let <Code> =
	    %% Line 50
	    call 'hipe_rtl':'rtl_code'
		(_cor0)
	in  let <_cor2> =
		%% Line 51
		call 'erlang':'hd'
		    (Code)
	    in  let <StartLabel> =
		    %% Line 51
		    call 'hipe_rtl':'label_name'
			(_cor2)
		in  let <_cor8> =
			%% Line 52
			call 'hipe_rtl':'rtl_fun'
			    (_cor0)
		    in  let <_cor7> =
			    %% Line 54
			    call 'hipe_rtl':'rtl_data'
				(_cor0)
			in  let <_cor6> =
				%% Line 55
				call 'hipe_rtl':'rtl_is_closure'
				    (_cor0)
			    in  let <_cor5> =
				    %% Line 56
				    call 'hipe_rtl':'rtl_is_leaf'
					(_cor0)
				in  let <_cor4> =
					%% Line 57
					call 'hipe_rtl':'rtl_params'
					    (_cor0)
				    in  let <Info> =
					    %% Line 160
					    {'cfg_info',_cor8,StartLabel,_cor6,'undefined',_cor5,_cor4,[]}
					in  let <_3862> =
						%% Line 165
						call 'gb_trees':'empty'
						    ()
					    in  let <CFG0> =
						    %% Line 165
						    {'cfg',_3862,Info,_cor7}
						in  let <_cor10> =
							%% Line 58
							call 'hipe_rtl':'rtl_info'
							    (_cor0)
						    in  let <CFG> =
							    %% Line 58
							    apply 'info_update'/2
								(CFG0, _cor10)
							in  %% Line 59
							    apply 'take_bbs'/2
								(Code, CFG)
'branch_successors'/1 =
    %% Line 83
    fun (_cor0) ->
	%% Line 84
	case _cor0 of
	  %% Line 85
	  <{'branch',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16}> when 'true' ->
	      let <_cor1> =
		  call 'hipe_rtl':'branch_true_label'
		      (_cor0)
	      in  let <_cor2> =
		      %% Line 86
		      call 'hipe_rtl':'branch_false_label'
			  (_cor0)
		  in  [_cor1|%% Line 86
			     [_cor2|[]]]
	  %% Line 87
	  <{'alub',_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24}> when 'true' ->
	      let <_cor3> =
		  call 'hipe_rtl':'alub_true_label'
		      (_cor0)
	      in  let <_cor4> =
		      %% Line 88
		      call 'hipe_rtl':'alub_false_label'
			  (_cor0)
		  in  [_cor3|%% Line 88
			     [_cor4|[]]]
	  %% Line 89
	  <{'switch',_cor25,_cor26,_cor27}> when 'true' ->
	      call 'hipe_rtl':'switch_labels'
		  (_cor0)
	  %% Line 90
	  <{'call',_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34}> when 'true' ->
	      let <_2431> =
		  %% Line 91
		  call 'hipe_rtl':'call_fail'
		      (_cor0)
	      in  %% Line 91
		  case _2431 of
		    %% Line 92
		    <[]> when 'true' ->
			let <_cor5> =
			    call 'hipe_rtl':'call_continuation'
				(_cor0)
			in  [_cor5|[]]
		    %% Line 93
		    <Fail> when 'true' ->
			let <_cor6> =
			    call 'hipe_rtl':'call_continuation'
				(_cor0)
			in  [_cor6|[_2431|[]]]
		  end
	  %% Line 95
	  <{'goto',_cor35}> when 'true' ->
	      let <_cor8> =
		  call 'hipe_rtl':'goto_label'
		      (_cor0)
	      in  [_cor8|[]]
	  %% Line 96
	  <{'goto_index',_cor36,_cor37,_cor38}> when 'true' ->
	      call 'hipe_rtl':'goto_index_labels'
		  (_cor0)
	  %% Line 97
	  <_cor39> when 'true' ->
	      []
	end
'is_branch'/1 =
    %% Line 106
    fun (_cor0) ->
	%% Line 107
	case _cor0 of
	  %% Line 108
	  <{'branch',_cor5,_cor6,_cor7,_cor8,_cor9,_cor10}> when 'true' ->
	      'true'
	  %% Line 109
	  <{'alub',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18}> when 'true' ->
	      'true'
	  %% Line 110
	  <{'switch',_cor19,_cor20,_cor21}> when 'true' ->
	      'true'
	  %% Line 111
	  <{'goto',_cor22}> when 'true' ->
	      'true'
	  %% Line 112
	  <{'goto_index',_cor23,_cor24,_cor25}> when 'true' ->
	      'true'
	  %% Line 113
	  <{'enter',_cor26,_cor27,_cor28}> when 'true' ->
	      'true'
	  %% Line 114
	  <{'return',_cor29}> when 'true' ->
	      'true'
	  %% Line 115
	  <{'call',_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36}> when 'true' ->
	      %% Line 116
	      case call 'hipe_rtl':'call_fail'
		       (_cor0) of
		%% Line 117
		<[]> when 'true' ->
		    %% Line 118
		    case call 'hipe_rtl':'call_continuation'
			     (_cor0) of
		      %% Line 119
		      <[]> when 'true' ->
			  'false'
		      %% Line 120
		      <_cor37> when 'true' ->
			  'true'
		    end
		%% Line 122
		<_cor38> when 'true' ->
		    'true'
	      end
	  %% Line 124
	  <_cor39> when 'true' ->
	      'false'
	end
'redirect_ops'/3 =
    %% Line 138
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[Label|Labels],CFG,Map> when 'true' ->
	      %% Line 229
	      ( case _cor1 of
		  ( <( {'cfg',_rec26,_cor8,_cor9}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_6363> =
			    %% Line 230
			    call 'gb_trees':'lookup'
				(Label, _rec26)
			in  let <BB> =
				%% Line 230
				case _6363 of
				  %% Line 231
				  <{'value',{Block,_X_Succ,_X_Pred}}> when 'true' ->
				      Block
				  %% Line 233
				  <'none'> when 'true' ->
				      %% Line 234
				      'not_found'
				  ( <_cor5> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_6363})
				    -| ['compiler_generated'] )
				end
			    in  let <Code> =
				    call 'hipe_bb':'code'
					(BB)
				in  let <_cor10> =
					( letrec
					      'lc$^0'/1 =
						  fun (_cor7) ->
						      case _cor7 of
							<[I|_cor6]> when 'true' ->
							    let <_cor8> =
								apply 'rewrite'/2
								    (I, _cor0)
							    in  let <_cor9> =
								    apply 'lc$^0'/1
									(_cor6)
								in  ( [_cor8|_cor9]
								      -| ['compiler_generated'] )
							<[]> when 'true' ->
							    []
							( <_7283> when 'true' ->
							      ( primop 'match_fail'
								    ({'function_clause',_cor7})
								-| [{'function_name',{'lc$^0',1}}] )
							  -| ['compiler_generated'] )
						      end
					  in  case Code of
						<[I|_cor6]> when 'true' ->
						    let <_cor8> =
							apply 'rewrite'/2
							    (I, _cor0)
						    in  let <_cor9> =
							    apply 'lc$^0'/1
								(_cor6)
							in  ( [_cor8|_cor9]
							      -| ['compiler_generated'] )
						<[]> when 'true' ->
						    []
						( <_7283> when 'true' ->
						      primop 'match_fail'
							  ({'function_clause',Code})
						  -| ['compiler_generated'] )
					      end
					  -| ['list_comprehension'] )
				    in  let <_cor12> =
					    call 'hipe_bb':'code_update'
						(BB, _cor10)
					in  let <NewCFG> =
						apply 'bb_add'/3
						    (_cor1, Label, _cor12)
					    in  apply 'redirect_ops'/3
						    (Labels, NewCFG, _cor0)
		    -| ['compiler_generated'] )
		  ( <_cor10> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','cfg'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 144
	  <[],CFG,_cor17> when 'true' ->
	      _cor1
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'redirect_ops',3}}] )
	    -| ['compiler_generated'] )
	end
'rewrite'/2 =
    %% Line 146
    fun (_cor1,_cor0) ->
	%% Line 147
	case _cor1 of
	  %% Line 148
	  <{'load_address',_cor8,_cor9,_cor10}> when 'true' ->
	      %% Line 149
	      case call 'hipe_rtl':'load_address_type'
		       (_cor1) of
		%% Line 150
		<'constant'> when 'true' ->
		    _cor1
		%% Line 151
		<_cor11> when 'true' ->
		    let <_cor2> =
			%% Line 153
			call 'hipe_rtl':'load_address_addr'
			    (_cor1)
		    in  let <_7146> =
			    %% Line 763
			    call 'gb_trees':'lookup'
				(_cor2, _cor0)
			in  let <NewL> =
				%% Line 763
				case _7146 of
				  %% Line 764
				  <{'value',{'dead',To}}> when 'true' ->
				      case call 'gb_trees':'lookup'
					       (To, _cor0) of
					<{'value',{'dead',_8683}}> when 'true' ->
					    %% Line 765
					    apply 'forward'/2
						(_8683, _cor0)
					%% Line 766
					<_cor5> when 'true' ->
					    To
				      end
				  %% Line 766
				  <_cor5> when 'true' ->
				      _cor2
				end
			    in  %% Line 154
				call 'hipe_rtl':'load_address_addr_update'
				    (_cor1, NewL)
	      end
	  %% Line 156
	  <_cor12> when 'true' ->
	      _cor1
	end
'pp'/1 =
    %% Line 160
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 161
	    apply 'linearize'/1
		(_cor0)
	in  %% Line 161
	    call 'hipe_rtl':'pp'
		(_cor1)
'pp'/2 =
    %% Line 163
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 164
	    apply 'linearize'/1
		(_cor0)
	in  %% Line 164
	    call 'hipe_rtl':'pp'
		(_cor1, _cor2)
'linearize'/1 =
    %% Line 166
    fun (_cor0) ->
	let <Code> =
	    %% Line 167
	    apply 'linearize_cfg'/1
		(_cor0)
	in  let <_cor8> =
		%% Line 168
		apply 'function'/1
		    (_cor0)
	    in  let <_cor7> =
		    %% Line 169
		    apply 'params'/1
			(_cor0)
		in  let <_cor6> =
			%% Line 170
			apply 'is_closure'/1
			    (_cor0)
		    in  let <_cor5> =
			    %% Line 171
			    apply 'is_leaf'/1
				(_cor0)
			in  %% Line 167
			    ( case _cor0 of
				( <( {'cfg',_cor3,_cor4,_rec12}
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_cor3> =
					  %% Line 174
					  call 'hipe_gensym':'var_range'
					      ('rtl')
				      in  let <_cor2> =
					      %% Line 175
					      call 'hipe_gensym':'label_range'
						  ('rtl')
					  in  let <Rtl> =
						  %% Line 168
						  call 'hipe_rtl':'mk_rtl'
						      (_cor8, _cor7, _cor6, _cor5, Code, _rec12, _cor3, _cor2)
					      in  let <_cor10> =
						      %% Line 176
						      apply 'info'/1
							  (_cor0)
						  in  %% Line 176
						      call 'hipe_rtl':'rtl_info_update'
							  (Rtl, _cor10)
				  -| ['compiler_generated'] )
				( <_7542> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','cfg'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_rtl_cfg')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_rtl_cfg', _cor0)
end