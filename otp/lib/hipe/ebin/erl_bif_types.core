module 'erl_bif_types' ['arg_types'/3,
			'infinity_add'/2,
			'is_known'/3,
			'module_info'/0,
			'module_info'/1,
			'opaque_args'/5,
			'type'/3,
			'type'/4,
			'type'/5]
    attributes [%% Line 128
		'spec' =
		    %% Line 128
		    [{{'type',3},[{'type',128,'fun',[{'type',128,'product',[{'type',128,'atom',[]}|[{'type',128,'atom',[]}|[{'type',128,'arity',[]}]]]}|[{'remote_type',128,[{'atom',128,'erl_types'}|[{'atom',128,'erl_type'}|[[]]]]}]]}]}],
		%% Line 136
		'spec' =
		    %% Line 136
		    [{{'type',4},[{'type',136,'fun',[{'type',136,'product',[{'type',136,'atom',[]}|[{'type',136,'atom',[]}|[{'type',136,'arity',[]}|[{'type',136,'list',[{'remote_type',136,[{'atom',136,'erl_types'}|[{'atom',136,'erl_type'}|[[]]]]}]}]]]]}|[{'remote_type',136,[{'atom',136,'erl_types'}|[{'atom',136,'erl_type'}|[[]]]]}]]}]}],
		%% Line 141
		'type' =
		    %% Line 141
		    [{'opaques',{'type',141,'union',[{'atom',141,'universe'}|[{'type',141,'list',[{'remote_type',141,[{'atom',141,'erl_types'}|[{'atom',141,'erl_type'}|[[]]]]}]}]]},[]}],
		%% Line 143
		'type' =
		    %% Line 143
		    [{'arg_types',{'type',143,'list',[{'remote_type',143,[{'atom',143,'erl_types'}|[{'atom',143,'erl_type'}|[[]]]]}]},[]}],
		%% Line 145
		'spec' =
		    %% Line 145
		    [{{'type',5},[{'type',145,'fun',[{'type',145,'product',[{'type',145,'atom',[]}|[{'type',145,'atom',[]}|[{'type',145,'arity',[]}|[{'type',145,'arg_types',[]}|[{'type',145,'opaques',[]}]]]]]}|[{'remote_type',146,[{'atom',146,'erl_types'}|[{'atom',146,'erl_type'}|[[]]]]}]]}]}],
		%% Line 1823
		'type' =
		    %% Line 1823
		    [{'inf_integer',{'type',1823,'union',[{'atom',1823,'neg_inf'}|[{'atom',1823,'pos_inf'}|[{'type',1823,'integer',[]}]]]},[]}],
		%% Line 1825
		'spec' =
		    %% Line 1825
		    [{{'infinity_abs',1},[{'type',1825,'fun',[{'type',1825,'product',[{'type',1825,'union',[{'atom',1825,'pos_inf'}|[{'atom',1825,'neg_inf'}]]}]}|[{'atom',1825,'pos_inf'}]]}|[{'type',1826,'fun',[{'type',1826,'product',[{'type',1826,'integer',[]}]}|[{'type',1826,'non_neg_integer',[]}]]}]]}],
		%% Line 1887
		'spec' =
		    %% Line 1887
		    [{{'infinity_add',2},[{'type',1887,'fun',[{'type',1887,'product',[{'type',1887,'inf_integer',[]}|[{'type',1887,'inf_integer',[]}]]}|[{'type',1887,'inf_integer',[]}]]}]}],
		%% Line 2177
		'spec' =
		    %% Line 2177
		    [{{'arg_types',3},[{'type',2177,'fun',[{'type',2177,'product',[{'type',2177,'atom',[]}|[{'type',2177,'atom',[]}|[{'type',2177,'arity',[]}]]]}|[{'type',2177,'union',[{'type',2177,'arg_types',[]}|[{'atom',2177,'unknown'}]]}]]}]}],
		%% Line 2616
		'spec' =
		    %% Line 2616
		    [{{'is_known',3},[{'type',2616,'fun',[{'type',2616,'product',[{'type',2616,'module',[]}|[{'type',2616,'atom',[]}|[{'type',2616,'arity',[]}]]]}|[{'type',2616,'boolean',[]}]]}]}],
		%% Line 2621
		'spec' =
		    %% Line 2621
		    [{{'opaque_args',5},[{'type',2621,'fun',[{'type',2621,'product',[{'type',2621,'module',[]}|[{'type',2621,'atom',[]}|[{'type',2621,'arity',[]}|[{'type',2622,'arg_types',[]}|[{'type',2622,'opaques',[]}]]]]]}|[{'type',2622,'list',[{'type',2622,'pos_integer',[]}]}]]}]}]]
'type'/3 =
    %% Line 130
    fun (_cor2,_cor1,_cor0) ->
	let <_4603> =
	    %% Line 1729
	    call 'erl_types':'t_any'
		()
	in  let <_cor3> =
		%% Line 1729
		apply 'any_list'/2
		    (_cor0, _4603)
	    in  %% Line 131
		apply 'type'/5
		    (_cor2, _cor1, _cor0, _cor3, [])
'type'/4 =
    %% Line 138
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 139
	apply 'type'/5
	    (_cor3, _cor2, _cor1, _cor0, 'universe')
'type'/5 =
    %% Line 149
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <'erlang','halt',0,_cor1208,_cor1209> when 'true' ->
	      call 'erl_types':'t_none'
		  ()
	  %% Line 150
	  <'erlang','halt',1,_cor1210,_cor1211> when 'true' ->
	      call 'erl_types':'t_none'
		  ()
	  %% Line 151
	  <'erlang','halt',2,_cor1212,_cor1213> when 'true' ->
	      call 'erl_types':'t_none'
		  ()
	  %% Line 152
	  <'erlang','exit',1,_cor1214,_cor1215> when 'true' ->
	      call 'erl_types':'t_none'
		  ()
	  %% Line 153
	  <'erlang','error',1,_cor1216,_cor1217> when 'true' ->
	      call 'erl_types':'t_none'
		  ()
	  %% Line 154
	  <'erlang','error',2,_cor1218,_cor1219> when 'true' ->
	      call 'erl_types':'t_none'
		  ()
	  %% Line 155
	  <'erlang','throw',1,_cor1220,_cor1221> when 'true' ->
	      call 'erl_types':'t_none'
		  ()
	  %% Line 156
	  <'erlang','==',2,Xs = [X1|[X2|[]]],Opaques> when 'true' ->
	      let <_2578> =
		  %% Line 158
		  call 'erl_types':'t_is_atom'
		      (X1, _cor0)
	      in  let <_cor7> =
		      %% Line 158
		      ( case _2578 of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erl_types':'t_is_atom'
				    (X2, _cor0)
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_cor5> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {( 'badarg'
					    -| ['compiler_generated'] ),_2578}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  in  %% Line 157
		      case _cor7 of
			%% Line 160
			<'true'> when 'true' ->
			    apply 'type'/5
				('erlang', '=:=', 2, _cor1, _cor0)
			%% Line 161
			<'false'> when 'true' ->
			    let <_3171> =
				%% Line 162
				call 'erl_types':'t_is_integer'
				    (X1, _cor0)
			    in  let <_cor10> =
				    %% Line 162
				    ( case _3171 of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erl_types':'t_is_integer'
						  (X2, _cor0)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_cor8> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {( 'badarg'
							  -| ['compiler_generated'] ),_3171}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				in  %% Line 162
				    case _cor10 of
				      %% Line 163
				      <'true'> when 'true' ->
					  apply 'type'/5
					      ('erlang', '=:=', 2, _cor1, _cor0)
				      %% Line 164
				      <'false'> when 'true' ->
					  let <_cor11> =
					      call 'erl_types':'t_boolean'
						  ()
					  in  apply 'strict2'/2
						  (_cor1, _cor11)
				      ( <_cor12> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor10})
					-| ['compiler_generated'] )
				    end
			( <_cor13> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor7})
			  -| ['compiler_generated'] )
		      end
	  %% Line 167
	  <'erlang','/=',2,Xs = [X1|[X2|[]]],Opaques> when 'true' ->
	      let <_6385> =
		  %% Line 169
		  call 'erl_types':'t_is_atom'
		      (X1, _cor0)
	      in  let <_cor16> =
		      %% Line 169
		      ( case _6385 of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erl_types':'t_is_atom'
				    (X2, _cor0)
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_cor14> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {( 'badarg'
					    -| ['compiler_generated'] ),_6385}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  in  %% Line 168
		      case _cor16 of
			%% Line 171
			<'true'> when 'true' ->
			    apply 'type'/5
				('erlang', '=/=', 2, _cor1, _cor0)
			%% Line 172
			<'false'> when 'true' ->
			    let <_6840> =
				%% Line 173
				call 'erl_types':'t_is_integer'
				    (X1, _cor0)
			    in  let <_cor19> =
				    %% Line 173
				    ( case _6840 of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erl_types':'t_is_integer'
						  (X2, _cor0)
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
					( <_cor17> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {( 'badarg'
							  -| ['compiler_generated'] ),_6840}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				in  %% Line 173
				    case _cor19 of
				      %% Line 174
				      <'true'> when 'true' ->
					  apply 'type'/5
					      ('erlang', '=/=', 2, _cor1, _cor0)
				      %% Line 175
				      <'false'> when 'true' ->
					  let <_cor20> =
					      call 'erl_types':'t_boolean'
						  ()
					  in  apply 'strict2'/2
						  (_cor1, _cor20)
				      ( <_cor21> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor19})
					-| ['compiler_generated'] )
				    end
			( <_cor22> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor16})
			  -| ['compiler_generated'] )
		      end
	  %% Line 178
	  <'erlang','=:=',2,Xs = [Lhs|[Rhs|[]]],Opaques> when 'true' ->
	      let <_cor23> =
		  %% Line 180
		  call 'erl_types':'t_inf'
		      (Lhs, Rhs, _cor0)
	      in  let <_1304> =
		      %% Line 180
		      call 'erl_types':'t_is_none'
			  (_cor23)
		  in  let <_cor71> =
			  %% Line 180
			  case _1304 of
			    %% Line 181
			    <'true'> when 'true' ->
				call 'erl_types':'t_atom'
				    ('false')
			    %% Line 182
			    <'false'> when 'true' ->
				let <_3655> =
				    %% Line 183
				    call 'erl_types':'t_is_atom'
					(Lhs, _cor0)
				in  let <_cor26> =
					%% Line 183
					( case _3655 of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'erl_types':'t_is_atom'
						      (Rhs, _cor0)
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <_cor24> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {( 'badarg'
							      -| ['compiler_generated'] ),_3655}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    in  %% Line 183
					case _cor26 of
					  %% Line 184
					  <'true'> when 'true' ->
					      let <_cor28> =
						  %% Line 185
						  call 'erl_types':'t_atom_vals'
						      (Lhs, _cor0)
					      in  let <_cor27> =
						      %% Line 185
						      call 'erl_types':'t_atom_vals'
							  (Rhs, _cor0)
						  in  %% Line 185
						      case <_cor28,_cor27> of
							%% Line 186
							<'unknown',_cor1222> when 'true' ->
							    call 'erl_types':'t_boolean'
								()
							%% Line 187
							<_cor1223,'unknown'> when 'true' ->
							    call 'erl_types':'t_boolean'
								()
							%% Line 188
							<[X|[]],[_cor1224|[]]>
							    when call 'erlang':'=:='
								  (_cor1224,
								   X) ->
							    call 'erl_types':'t_atom'
								('true')
							%% Line 189
							<LhsVals,RhsVals> when 'true' ->
							    let <_cor39> =
								%% Line 190
								fun (_cor37) ->
								    case _cor37 of
								      <{X,Y}> when 'true' ->
									  call 'erlang':'=/='
									      (X, Y)
								      ( <_cor38> when 'true' ->
									    ( primop 'match_fail'
										  ({'function_clause',_cor37})
									      -| [{'function_name',{'-type/5-fun-0-',1}}] )
									-| ['compiler_generated'] )
								    end
							    in  let <_cor36> =
								    %% Line 191
								    ( letrec
									  'lc$^0'/1 =
									      fun (_cor33) ->
										  case _cor33 of
										    <[X|_cor30]> when 'true' ->
											( letrec
											      'lc$^1'/1 =
												  fun (_cor34) ->
												      case _cor34 of
													<[Y|_cor32]> when 'true' ->
													    let <_cor35> =
														apply 'lc$^1'/1
														    (_cor32)
													    in  ( [{X,Y}|_cor35]
														  -| ['compiler_generated'] )
													<[]> when 'true' ->
													    apply 'lc$^0'/1
														(_cor30)
													( <_8581> when 'true' ->
													      ( primop 'match_fail'
														    ({'function_clause',_cor34})
														-| [{'function_name',{'lc$^1',1}}] )
													  -| ['compiler_generated'] )
												      end
											  in  case _cor27 of
												<[Y|_cor32]> when 'true' ->
												    let <_cor35> =
													apply 'lc$^1'/1
													    (_cor32)
												    in  ( [{X,Y}|_cor35]
													  -| ['compiler_generated'] )
												<[]> when 'true' ->
												    apply 'lc$^0'/1
													(_cor30)
												( <_8581> when 'true' ->
												      primop 'match_fail'
													  ({'function_clause',_cor27})
												  -| ['compiler_generated'] )
											      end
											  -| ['list_comprehension'] )
										    <[]> when 'true' ->
											[]
										    ( <_2035> when 'true' ->
											  ( primop 'match_fail'
												({'function_clause',_cor33})
											    -| [{'function_name',{'lc$^0',1}}] )
										      -| ['compiler_generated'] )
										  end
								      in  apply 'lc$^0'/1
									      (_cor28)
								      -| ['list_comprehension'] )
								in  let <_1216> =
									%% Line 190
									call 'lists':'all'
									    (_cor39, _cor36)
								    in  %% Line 190
									case _1216 of
									  %% Line 192
									  <'true'> when 'true' ->
									      call 'erl_types':'t_atom'
										  ('false')
									  %% Line 193
									  <'false'> when 'true' ->
									      call 'erl_types':'t_boolean'
										  ()
									  ( <_cor40> when 'true' ->
										primop 'match_fail'
										    ({'case_clause',_1216})
									    -| ['compiler_generated'] )
									end
						      end
					  %% Line 196
					  <'false'> when 'true' ->
					      let <_228> =
						  %% Line 198
						  call 'erl_types':'t_is_integer'
						      (Lhs, _cor0)
					      in  let <_cor44> =
						      %% Line 198
						      ( case _228 of
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								call 'erl_types':'t_is_integer'
								    (Rhs, _cor0)
							    -| ['compiler_generated'] )
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								'false'
							    -| ['compiler_generated'] )
							  ( <_cor42> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {( 'badarg'
									    -| ['compiler_generated'] ),_228}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  in  %% Line 197
						      case _cor44 of
							%% Line 200
							<'false'> when 'true' ->
							    call 'erl_types':'t_boolean'
								()
							%% Line 201
							<'true'> when 'true' ->
							    let <_cor46> =
								%% Line 203
								call 'erl_types':'t_number_vals'
								    (Lhs, _cor0)
							    in  let <_cor45> =
								    %% Line 203
								    call 'erl_types':'t_number_vals'
									(Rhs, _cor0)
								in  %% Line 202
								    case <_cor46,_cor45> of
								      %% Line 205
								      <[X|[]],[_cor1225|[]]>
									  when let <_cor1226> =
										call 'erlang':'=:='
										    (_cor1225, X)
									    in  let <_cor1227> =
										    call 'erlang':'is_integer'
											(X)
										in  call 'erlang':'and'
											(_cor1226, _cor1227) ->
									  call 'erl_types':'t_atom'
									      ('true')
								      %% Line 206
								      <_fol9,_fol10> when 'true' ->
									  let <LhsMax> =
									      %% Line 207
									      call 'erl_types':'number_max'
										  (Lhs, _cor0)
									  in  let <LhsMin> =
										  %% Line 208
										  call 'erl_types':'number_min'
										      (Lhs, _cor0)
									      in  let <RhsMax> =
										      %% Line 209
										      call 'erl_types':'number_max'
											  (Rhs, _cor0)
										  in  let <RhsMin> =
											  %% Line 210
											  call 'erl_types':'number_min'
											      (Rhs, _cor0)
										      in  let <_cor55> =
											      %% Line 212
											      ( case <> of
												  ( <>
													when call 'erlang':'is_integer'
													      (LhsMin) ->
													%% Line 213
													( case <> of
													    ( <>
														  when call 'erlang':'is_integer'
															(RhsMax) ->
														  call 'erlang':'>'
														      (LhsMin, RhsMax)
													      -| ['compiler_generated'] )
													    ( <> when 'true' ->
														  'false'
													      -| ['compiler_generated'] )
													  end
													  -| ['compiler_generated'] )
												    -| ['compiler_generated'] )
												  ( <> when 'true' ->
													'false'
												    -| ['compiler_generated'] )
												end
												-| ['compiler_generated'] )
											  in  let <_cor61> =
												  %% Line 215
												  ( case <> of
												      ( <>
													    when call 'erlang':'is_integer'
														  (LhsMax) ->
													    %% Line 216
													    ( case <> of
														( <>
														      when call 'erlang':'is_integer'
															    (RhsMin) ->
														      call 'erlang':'>'
															  (RhsMin, LhsMax)
														  -| ['compiler_generated'] )
														( <> when 'true' ->
														      'false'
														  -| ['compiler_generated'] )
													      end
													      -| ['compiler_generated'] )
													-| ['compiler_generated'] )
												      ( <> when 'true' ->
													    'false'
													-| ['compiler_generated'] )
												    end
												    -| ['compiler_generated'] )
											      in  let <_cor65> =
												      %% Line 217
												      ( case _cor55 of
													  ( <( 'true'
													       -| ['compiler_generated'] )> when 'true' ->
														'true'
													    -| ['compiler_generated'] )
													  ( <( 'false'
													       -| ['compiler_generated'] )> when 'true' ->
														_cor61
													    -| ['compiler_generated'] )
													  ( <_cor63> when 'true' ->
														( call ( 'erlang'
															 -| ['compiler_generated'] ):( 'error'
																		       -| ['compiler_generated'] )
														      (( {( 'badarg'
															    -| ['compiler_generated'] ),_cor55}
															 -| ['compiler_generated'] ))
														  -| ['compiler_generated'] )
													    -| ['compiler_generated'] )
													end
													-| ['compiler_generated'] )
												  in  %% Line 217
												      case _cor65 of
													%% Line 218
													<'true'> when 'true' ->
													    call 'erl_types':'t_atom'
														('false')
													%% Line 219
													<'false'> when 'true' ->
													    call 'erl_types':'t_boolean'
														()
													( <_cor66> when 'true' ->
													      primop 'match_fail'
														  ({'case_clause',_cor65})
													  -| ['compiler_generated'] )
												      end
								    end
							( <_cor68> when 'true' ->
							      primop 'match_fail'
								  ({'case_clause',_cor44})
							  -| ['compiler_generated'] )
						      end
					  ( <_cor69> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_cor26})
					    -| ['compiler_generated'] )
					end
			    ( <_cor70> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_1304})
			      -| ['compiler_generated'] )
			  end
		      in  %% Line 225
			  apply 'strict2'/2
			      (_cor1, _cor71)
	  %% Line 226
	  <'erlang','=/=',2,Xs = [Lhs|[Rhs|[]]],Opaques> when 'true' ->
	      let <_cor73> =
		  %% Line 228
		  call 'erl_types':'t_inf'
		      (Lhs, Rhs, _cor0)
	      in  let <_1587> =
		      %% Line 228
		      call 'erl_types':'t_is_none'
			  (_cor73)
		  in  let <_cor120> =
			  %% Line 228
			  case _1587 of
			    %% Line 229
			    <'true'> when 'true' ->
				call 'erl_types':'t_atom'
				    ('true')
			    %% Line 230
			    <'false'> when 'true' ->
				let <_1852> =
				    %% Line 231
				    call 'erl_types':'t_is_atom'
					(Lhs, _cor0)
				in  let <_cor76> =
					%% Line 231
					( case _1852 of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'erl_types':'t_is_atom'
						      (Rhs, _cor0)
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <_cor74> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {( 'badarg'
							      -| ['compiler_generated'] ),_1852}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    in  %% Line 231
					case _cor76 of
					  %% Line 232
					  <'true'> when 'true' ->
					      let <_cor78> =
						  %% Line 233
						  call 'erl_types':'t_atom_vals'
						      (Lhs, _cor0)
					      in  let <_cor77> =
						      %% Line 233
						      call 'erl_types':'t_atom_vals'
							  (Rhs, _cor0)
						  in  %% Line 233
						      case <_cor78,_cor77> of
							%% Line 234
							<'unknown',_cor1229> when 'true' ->
							    call 'erl_types':'t_boolean'
								()
							%% Line 235
							<_cor1230,'unknown'> when 'true' ->
							    call 'erl_types':'t_boolean'
								()
							%% Line 236
							<[Val|[]],[_cor1231|[]]>
							    when call 'erlang':'=:='
								  (_cor1231,
								   Val) ->
							    call 'erl_types':'t_atom'
								('false')
							%% Line 237
							<LhsVals,RhsVals> when 'true' ->
							    let <_cor88> =
								%% Line 238
								( letrec
								      'lc$^2'/1 =
									  fun (_cor83) ->
									      case _cor83 of
										<[X|_cor80]> when 'true' ->
										    ( letrec
											  'lc$^3'/1 =
											      fun (_cor84) ->
												  case _cor84 of
												    <[Y|_cor82]> when 'true' ->
													let <_cor85> =
													    call 'erlang':'=/='
														(X, Y)
													in  let <_cor86> =
														call 'erl_types':'t_from_term'
														    (_cor85)
													    in  let <_cor87> =
														    apply 'lc$^3'/1
															(_cor82)
														in  ( [_cor86|_cor87]
														      -| ['compiler_generated'] )
												    <[]> when 'true' ->
													apply 'lc$^2'/1
													    (_cor80)
												    ( <_387> when 'true' ->
													  ( primop 'match_fail'
														({'function_clause',_cor84})
													    -| [{'function_name',{'lc$^3',1}}] )
												      -| ['compiler_generated'] )
												  end
										      in  apply 'lc$^3'/1
											      (_cor77)
										      -| ['list_comprehension'] )
										<[]> when 'true' ->
										    []
										( <_7580> when 'true' ->
										      ( primop 'match_fail'
											    ({'function_clause',_cor83})
											-| [{'function_name',{'lc$^2',1}}] )
										  -| ['compiler_generated'] )
									      end
								  in  case _cor78 of
									<[X|_cor80]> when 'true' ->
									    ( letrec
										  'lc$^3'/1 =
										      fun (_cor84) ->
											  case _cor84 of
											    <[Y|_cor82]> when 'true' ->
												let <_cor85> =
												    call 'erlang':'=/='
													(X, Y)
												in  let <_cor86> =
													call 'erl_types':'t_from_term'
													    (_cor85)
												    in  let <_cor87> =
													    apply 'lc$^3'/1
														(_cor82)
													in  ( [_cor86|_cor87]
													      -| ['compiler_generated'] )
											    <[]> when 'true' ->
												apply 'lc$^2'/1
												    (_cor80)
											    ( <_387> when 'true' ->
												  primop 'match_fail'
												      ({'function_clause',_cor84})
											      -| ['compiler_generated'] )
											  end
									      in  apply 'lc$^3'/1
										      (_cor77)
									      -| ['list_comprehension'] )
									<[]> when 'true' ->
									    []
									( <_7580> when 'true' ->
									      primop 'match_fail'
										  ({'function_clause',_cor78})
									  -| ['compiler_generated'] )
								      end
								  -| ['list_comprehension'] )
							    in  %% Line 238
								call 'erl_types':'t_sup'
								    (_cor88)
						      end
					  %% Line 240
					  <'false'> when 'true' ->
					      let <_7478> =
						  %% Line 242
						  call 'erl_types':'t_is_integer'
						      (Lhs, _cor0)
					      in  let <_cor92> =
						      %% Line 242
						      ( case _7478 of
							  ( <( 'true'
							       -| ['compiler_generated'] )> when 'true' ->
								call 'erl_types':'t_is_integer'
								    (Rhs, _cor0)
							    -| ['compiler_generated'] )
							  ( <( 'false'
							       -| ['compiler_generated'] )> when 'true' ->
								'false'
							    -| ['compiler_generated'] )
							  ( <_cor90> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {( 'badarg'
									    -| ['compiler_generated'] ),_7478}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  in  %% Line 241
						      case _cor92 of
							%% Line 244
							<'false'> when 'true' ->
							    call 'erl_types':'t_boolean'
								()
							%% Line 245
							<'true'> when 'true' ->
							    let <LhsMax> =
								%% Line 246
								call 'erl_types':'number_max'
								    (Lhs, _cor0)
							    in  let <LhsMin> =
								    %% Line 247
								    call 'erl_types':'number_min'
									(Lhs, _cor0)
								in  let <RhsMax> =
									%% Line 248
									call 'erl_types':'number_max'
									    (Rhs, _cor0)
								    in  let <RhsMin> =
									    %% Line 249
									    call 'erl_types':'number_min'
										(Rhs, _cor0)
									in  let <_cor101> =
										%% Line 250
										( case <> of
										    ( <>
											  when call 'erlang':'is_integer'
												(LhsMin) ->
											  %% Line 251
											  ( case <> of
											      ( <>
												    when call 'erlang':'is_integer'
													  (RhsMax) ->
												    call 'erlang':'>'
													(LhsMin, RhsMax)
												-| ['compiler_generated'] )
											      ( <> when 'true' ->
												    'false'
												-| ['compiler_generated'] )
											    end
											    -| ['compiler_generated'] )
										      -| ['compiler_generated'] )
										    ( <> when 'true' ->
											  'false'
										      -| ['compiler_generated'] )
										  end
										  -| ['compiler_generated'] )
									    in  let <_cor107> =
										    %% Line 252
										    ( case <> of
											( <>
											      when call 'erlang':'is_integer'
												    (LhsMax) ->
											      %% Line 253
											      ( case <> of
												  ( <>
													when call 'erlang':'is_integer'
													      (RhsMin) ->
													call 'erlang':'>'
													    (RhsMin, LhsMax)
												    -| ['compiler_generated'] )
												  ( <> when 'true' ->
													'false'
												    -| ['compiler_generated'] )
												end
												-| ['compiler_generated'] )
											  -| ['compiler_generated'] )
											( <> when 'true' ->
											      'false'
											  -| ['compiler_generated'] )
										      end
										      -| ['compiler_generated'] )
										in  let <_cor111> =
											%% Line 254
											( case _cor101 of
											    ( <( 'true'
												 -| ['compiler_generated'] )> when 'true' ->
												  'true'
											      -| ['compiler_generated'] )
											    ( <( 'false'
												 -| ['compiler_generated'] )> when 'true' ->
												  _cor107
											      -| ['compiler_generated'] )
											    ( <_cor109> when 'true' ->
												  ( call ( 'erlang'
													   -| ['compiler_generated'] ):( 'error'
																	 -| ['compiler_generated'] )
													(( {( 'badarg'
													      -| ['compiler_generated'] ),_cor101}
													   -| ['compiler_generated'] ))
												    -| ['compiler_generated'] )
											      -| ['compiler_generated'] )
											  end
											  -| ['compiler_generated'] )
										    in  %% Line 254
											case _cor111 of
											  %% Line 255
											  <'true'> when 'true' ->
											      call 'erl_types':'t_atom'
												  ('true')
											  %% Line 256
											  <'false'> when 'true' ->
											      %% Line 257
											      case <> of
												<>
												    when try
													  let <_cor112> =
													      call 'erlang':'=:='
														  (LhsMax, LhsMin)
													  in  let <_cor113> =
														  %% Line 258
														  call 'erlang':'=:='
														      (RhsMin, RhsMax)
													      in  let <_cor114> =
														      %% Line 259
														      call 'erlang':'=:='
															  (RhsMax, LhsMax)
														  in  let <_cor115> =
															  call 'erlang':'and'
															      (_cor113, _cor114)
														      in  call 'erlang':'and'
															      (_cor112, _cor115)
												      of <Try> ->
													  Try
												      catch <T,R> ->
													  'false' ->
												    %% Line 259
												    call 'erl_types':'t_atom'
													('false')
												%% Line 260
												<> when 'true' ->
												    call 'erl_types':'t_boolean'
													()
											      end
											  ( <_cor116> when 'true' ->
												primop 'match_fail'
												    ({'case_clause',_cor111})
											    -| ['compiler_generated'] )
											end
							( <_cor117> when 'true' ->
							      primop 'match_fail'
								  ({'case_clause',_cor92})
							  -| ['compiler_generated'] )
						      end
					  ( <_cor118> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_cor76})
					    -| ['compiler_generated'] )
					end
			    ( <_cor119> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_1587})
			      -| ['compiler_generated'] )
			  end
		      in  %% Line 266
			  apply 'strict2'/2
			      (_cor1, _cor120)
	  %% Line 267
	  <'erlang','>',2,Xs = [Lhs|[Rhs|[]]],Opaques> when 'true' ->
	      let <_6779> =
		  %% Line 269
		  call 'erl_types':'t_is_integer'
		      (Lhs, _cor0)
	      in  let <_cor124> =
		      %% Line 269
		      ( case _6779 of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erl_types':'t_is_integer'
				    (Rhs, _cor0)
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_cor122> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {( 'badarg'
					    -| ['compiler_generated'] ),_6779}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  in  let <_cor140> =
			  %% Line 269
			  case _cor124 of
			    %% Line 270
			    <'true'> when 'true' ->
				let <LhsMax> =
				    %% Line 271
				    call 'erl_types':'number_max'
					(Lhs, _cor0)
				in  let <LhsMin> =
					%% Line 272
					call 'erl_types':'number_min'
					    (Lhs, _cor0)
				    in  let <RhsMax> =
					    %% Line 273
					    call 'erl_types':'number_max'
						(Rhs, _cor0)
					in  let <RhsMin> =
						%% Line 274
						call 'erl_types':'number_min'
						    (Rhs, _cor0)
					    in  let <T> =
						    %% Line 275
						    call 'erl_types':'t_atom'
							('true')
						in  let <F> =
							%% Line 276
							call 'erl_types':'t_atom'
							    ('false')
						    in  %% Line 277
							case <> of
							  %% Line 278
							  <>
							      when try
								    let <_cor131> =
									call 'erlang':'is_integer'
									    (LhsMin)
								    in  let <_cor132> =
									    call 'erlang':'is_integer'
										(RhsMax)
									in  let <_cor133> =
										call 'erlang':'>'
										    (LhsMin, RhsMax)
									    in  let <_cor134> =
										    call 'erlang':'and'
											(_cor132, _cor133)
										in  call 'erlang':'and'
											(_cor131, _cor134)
								of <Try> ->
								    Try
								catch <_4148,R> ->
								    'false' ->
							      T
							  %% Line 279
							  <>
							      when try
								    let <_cor135> =
									call 'erlang':'is_integer'
									    (LhsMax)
								    in  let <_cor136> =
									    call 'erlang':'is_integer'
										(RhsMin)
									in  let <_cor137> =
										call 'erlang':'>='
										    (RhsMin, LhsMax)
									    in  let <_cor138> =
										    call 'erlang':'and'
											(_cor136, _cor137)
										in  call 'erlang':'and'
											(_cor135, _cor138)
								of <Try> ->
								    Try
								catch <_3966,R> ->
								    'false' ->
							      F
							  %% Line 280
							  <> when 'true' ->
							      call 'erl_types':'t_boolean'
								  ()
							end
			    %% Line 282
			    <'false'> when 'true' ->
				apply 'compare'/4
				    ('>', Lhs, Rhs, _cor0)
			    ( <_cor139> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor124})
			      -| ['compiler_generated'] )
			  end
		      in  %% Line 284
			  apply 'strict2'/2
			      (_cor1, _cor140)
	  %% Line 285
	  <'erlang','>=',2,Xs = [Lhs|[Rhs|[]]],Opaques> when 'true' ->
	      let <_2726> =
		  %% Line 287
		  call 'erl_types':'t_is_integer'
		      (Lhs, _cor0)
	      in  let <_cor144> =
		      %% Line 287
		      ( case _2726 of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erl_types':'t_is_integer'
				    (Rhs, _cor0)
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_cor142> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {( 'badarg'
					    -| ['compiler_generated'] ),_2726}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  in  let <_cor160> =
			  %% Line 287
			  case _cor144 of
			    %% Line 288
			    <'true'> when 'true' ->
				let <LhsMax> =
				    %% Line 289
				    call 'erl_types':'number_max'
					(Lhs, _cor0)
				in  let <LhsMin> =
					%% Line 290
					call 'erl_types':'number_min'
					    (Lhs, _cor0)
				    in  let <RhsMax> =
					    %% Line 291
					    call 'erl_types':'number_max'
						(Rhs, _cor0)
					in  let <RhsMin> =
						%% Line 292
						call 'erl_types':'number_min'
						    (Rhs, _cor0)
					    in  let <T> =
						    %% Line 293
						    call 'erl_types':'t_atom'
							('true')
						in  let <F> =
							%% Line 294
							call 'erl_types':'t_atom'
							    ('false')
						    in  %% Line 295
							case <> of
							  %% Line 296
							  <>
							      when try
								    let <_cor151> =
									call 'erlang':'is_integer'
									    (LhsMin)
								    in  let <_cor152> =
									    call 'erlang':'is_integer'
										(RhsMax)
									in  let <_cor153> =
										call 'erlang':'>='
										    (LhsMin, RhsMax)
									    in  let <_cor154> =
										    call 'erlang':'and'
											(_cor152, _cor153)
										in  call 'erlang':'and'
											(_cor151, _cor154)
								of <Try> ->
								    Try
								catch <_2772,R> ->
								    'false' ->
							      T
							  %% Line 297
							  <>
							      when try
								    let <_cor155> =
									call 'erlang':'is_integer'
									    (LhsMax)
								    in  let <_cor156> =
									    call 'erlang':'is_integer'
										(RhsMin)
									in  let <_cor157> =
										call 'erlang':'>'
										    (RhsMin, LhsMax)
									    in  let <_cor158> =
										    call 'erlang':'and'
											(_cor156, _cor157)
										in  call 'erlang':'and'
											(_cor155, _cor158)
								of <Try> ->
								    Try
								catch <_5097,R> ->
								    'false' ->
							      F
							  %% Line 298
							  <> when 'true' ->
							      call 'erl_types':'t_boolean'
								  ()
							end
			    %% Line 300
			    <'false'> when 'true' ->
				apply 'compare'/4
				    ('>=', Lhs, Rhs, _cor0)
			    ( <_cor159> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor144})
			      -| ['compiler_generated'] )
			  end
		      in  %% Line 302
			  apply 'strict2'/2
			      (_cor1, _cor160)
	  %% Line 303
	  <'erlang','<',2,Xs = [Lhs|[Rhs|[]]],Opaques> when 'true' ->
	      let <_2755> =
		  %% Line 305
		  call 'erl_types':'t_is_integer'
		      (Lhs, _cor0)
	      in  let <_cor164> =
		      %% Line 305
		      ( case _2755 of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erl_types':'t_is_integer'
				    (Rhs, _cor0)
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_cor162> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {( 'badarg'
					    -| ['compiler_generated'] ),_2755}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  in  let <_cor180> =
			  %% Line 305
			  case _cor164 of
			    %% Line 306
			    <'true'> when 'true' ->
				let <LhsMax> =
				    %% Line 307
				    call 'erl_types':'number_max'
					(Lhs, _cor0)
				in  let <LhsMin> =
					%% Line 308
					call 'erl_types':'number_min'
					    (Lhs, _cor0)
				    in  let <RhsMax> =
					    %% Line 309
					    call 'erl_types':'number_max'
						(Rhs, _cor0)
					in  let <RhsMin> =
						%% Line 310
						call 'erl_types':'number_min'
						    (Rhs, _cor0)
					    in  let <T> =
						    %% Line 311
						    call 'erl_types':'t_atom'
							('true')
						in  let <F> =
							%% Line 312
							call 'erl_types':'t_atom'
							    ('false')
						    in  %% Line 313
							case <> of
							  %% Line 314
							  <>
							      when try
								    let <_cor171> =
									call 'erlang':'is_integer'
									    (LhsMax)
								    in  let <_cor172> =
									    call 'erlang':'is_integer'
										(RhsMin)
									in  let <_cor173> =
										call 'erlang':'<'
										    (LhsMax, RhsMin)
									    in  let <_cor174> =
										    call 'erlang':'and'
											(_cor172, _cor173)
										in  call 'erlang':'and'
											(_cor171, _cor174)
								of <Try> ->
								    Try
								catch <_7567,R> ->
								    'false' ->
							      T
							  %% Line 315
							  <>
							      when try
								    let <_cor175> =
									call 'erlang':'is_integer'
									    (LhsMin)
								    in  let <_cor176> =
									    call 'erlang':'is_integer'
										(RhsMax)
									in  let <_cor177> =
										call 'erlang':'=<'
										    (RhsMax, LhsMin)
									    in  let <_cor178> =
										    call 'erlang':'and'
											(_cor176, _cor177)
										in  call 'erlang':'and'
											(_cor175, _cor178)
								of <Try> ->
								    Try
								catch <_2131,R> ->
								    'false' ->
							      F
							  %% Line 316
							  <> when 'true' ->
							      call 'erl_types':'t_boolean'
								  ()
							end
			    %% Line 318
			    <'false'> when 'true' ->
				apply 'compare'/4
				    ('<', Lhs, Rhs, _cor0)
			    ( <_cor179> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor164})
			      -| ['compiler_generated'] )
			  end
		      in  %% Line 320
			  apply 'strict2'/2
			      (_cor1, _cor180)
	  %% Line 321
	  <'erlang','=<',2,Xs = [Lhs|[Rhs|[]]],Opaques> when 'true' ->
	      let <_5370> =
		  %% Line 323
		  call 'erl_types':'t_is_integer'
		      (Lhs, _cor0)
	      in  let <_cor184> =
		      %% Line 323
		      ( case _5370 of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erl_types':'t_is_integer'
				    (Rhs, _cor0)
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_cor182> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {( 'badarg'
					    -| ['compiler_generated'] ),_5370}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  in  let <_cor200> =
			  %% Line 323
			  case _cor184 of
			    %% Line 324
			    <'true'> when 'true' ->
				let <LhsMax> =
				    %% Line 325
				    call 'erl_types':'number_max'
					(Lhs, _cor0)
				in  let <LhsMin> =
					%% Line 326
					call 'erl_types':'number_min'
					    (Lhs, _cor0)
				    in  let <RhsMax> =
					    %% Line 327
					    call 'erl_types':'number_max'
						(Rhs, _cor0)
					in  let <RhsMin> =
						%% Line 328
						call 'erl_types':'number_min'
						    (Rhs, _cor0)
					    in  let <T> =
						    %% Line 329
						    call 'erl_types':'t_atom'
							('true')
						in  let <F> =
							%% Line 330
							call 'erl_types':'t_atom'
							    ('false')
						    in  %% Line 331
							case <> of
							  %% Line 332
							  <>
							      when try
								    let <_cor191> =
									call 'erlang':'is_integer'
									    (LhsMax)
								    in  let <_cor192> =
									    call 'erlang':'is_integer'
										(RhsMin)
									in  let <_cor193> =
										call 'erlang':'=<'
										    (LhsMax, RhsMin)
									    in  let <_cor194> =
										    call 'erlang':'and'
											(_cor192, _cor193)
										in  call 'erlang':'and'
											(_cor191, _cor194)
								of <Try> ->
								    Try
								catch <_4223,R> ->
								    'false' ->
							      T
							  %% Line 333
							  <>
							      when try
								    let <_cor195> =
									call 'erlang':'is_integer'
									    (LhsMin)
								    in  let <_cor196> =
									    call 'erlang':'is_integer'
										(RhsMax)
									in  let <_cor197> =
										call 'erlang':'<'
										    (RhsMax, LhsMin)
									    in  let <_cor198> =
										    call 'erlang':'and'
											(_cor196, _cor197)
										in  call 'erlang':'and'
											(_cor195, _cor198)
								of <Try> ->
								    Try
								catch <_7874,R> ->
								    'false' ->
							      F
							  %% Line 334
							  <> when 'true' ->
							      call 'erl_types':'t_boolean'
								  ()
							end
			    %% Line 336
			    <'false'> when 'true' ->
				apply 'compare'/4
				    ('=<', Lhs, Rhs, _cor0)
			    ( <_cor199> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor184})
			      -| ['compiler_generated'] )
			  end
		      in  %% Line 338
			  apply 'strict2'/2
			      (_cor1, _cor200)
	  %% Line 339
	  <'erlang','+',1,Xs,Opaques> when 'true' ->
	      let <_cor204> =
		  %% Line 340
		  fun (_cor202) ->
		      case _cor202 of
			<[X|[]]> when 'true' ->
			    X
			( <_cor203> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor202})
				-| [{'function_name',{'-type/5-fun-1-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 340
		  apply 'strict'/6
		      ('erlang', '+', 1, _cor1, _cor204, _cor0)
	  %% Line 341
	  <'erlang','-',1,Xs,Opaques> when 'true' ->
	      let <_cor209> =
		  %% Line 343
		  fun (_cor207) ->
		      case _cor207 of
			<[X|[]]> when 'true' ->
			    let <_6008> =
				%% Line 344
				call 'erl_types':'t_is_integer'
				    (X, _cor0)
			    in  %% Line 344
				case _6008 of
				  %% Line 345
				  <'true'> when 'true' ->
				      let <_cor205> =
					  call 'erl_types':'t_integer'
					      (0)
				      in  let <_1604> =
					      [_cor205|[X|[]]]
					  in  apply 'type'/5
						  ('erlang', '-', 2, _1604, 'universe')
				  %% Line 346
				  <'false'> when 'true' ->
				      X
				  ( <_cor206> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_6008})
				    -| ['compiler_generated'] )
				end
			( <_cor208> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor207})
				-| [{'function_name',{'-type/5-fun-2-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 342
		  apply 'strict'/6
		      ('erlang', '-', 1, _cor1, _cor209, _cor0)
	  %% Line 349
	  <'erlang','!',2,Xs,Opaques> when 'true' ->
	      let <_cor212> =
		  %% Line 350
		  fun (_cor210) ->
		      case _cor210 of
			<[_cor1232|[X2|[]]]> when 'true' ->
			    X2
			( <_cor211> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor210})
				-| [{'function_name',{'-type/5-fun-3-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 350
		  apply 'strict'/6
		      ('erlang', '!', 2, _cor1, _cor212, _cor0)
	  %% Line 351
	  <'erlang','+',2,Xs,Opaques> when 'true' ->
	      let <_cor220> =
		  %% Line 353
		  fun (_cor218) ->
		      case _cor218 of
			<[X1|[X2|[]]]> when 'true' ->
			    let <_8295> =
				%% Line 354
				apply 'arith'/4
				    ('+', X1, X2, _cor0)
			    in  %% Line 354
				case _8295 of
				  %% Line 355
				  <{'ok',T}> when 'true' ->
				      T
				  %% Line 356
				  <'error'> when 'true' ->
				      let <_1832> =
					  %% Line 358
					  call 'erl_types':'t_is_float'
					      (X1, _cor0)
				      in  let <_cor215> =
					      %% Line 358
					      ( case _1832 of
						  ( <( 'true'
						       -| ['compiler_generated'] )> when 'true' ->
							'true'
						    -| ['compiler_generated'] )
						  ( <( 'false'
						       -| ['compiler_generated'] )> when 'true' ->
							call 'erl_types':'t_is_float'
							    (X2, _cor0)
						    -| ['compiler_generated'] )
						  ( <_cor213> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {( 'badarg'
								    -| ['compiler_generated'] ),_1832}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
					  in  %% Line 357
					      case _cor215 of
						%% Line 360
						<'true'> when 'true' ->
						    call 'erl_types':'t_float'
							()
						%% Line 361
						<'false'> when 'true' ->
						    call 'erl_types':'t_number'
							()
						( <_cor216> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_cor215})
						  -| ['compiler_generated'] )
					      end
				  ( <_cor217> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_8295})
				    -| ['compiler_generated'] )
				end
			( <_cor219> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor218})
				-| [{'function_name',{'-type/5-fun-4-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 352
		  apply 'strict'/6
		      ('erlang', '+', 2, _cor1, _cor220, _cor0)
	  %% Line 365
	  <'erlang','-',2,Xs,Opaques> when 'true' ->
	      let <_cor228> =
		  %% Line 367
		  fun (_cor226) ->
		      case _cor226 of
			<[X1|[X2|[]]]> when 'true' ->
			    let <_3563> =
				%% Line 368
				apply 'arith'/4
				    ('-', X1, X2, _cor0)
			    in  %% Line 368
				case _3563 of
				  %% Line 369
				  <{'ok',T}> when 'true' ->
				      T
				  %% Line 370
				  <'error'> when 'true' ->
				      let <_7788> =
					  %% Line 372
					  call 'erl_types':'t_is_float'
					      (X1, _cor0)
				      in  let <_cor223> =
					      %% Line 372
					      ( case _7788 of
						  ( <( 'true'
						       -| ['compiler_generated'] )> when 'true' ->
							'true'
						    -| ['compiler_generated'] )
						  ( <( 'false'
						       -| ['compiler_generated'] )> when 'true' ->
							call 'erl_types':'t_is_float'
							    (X2, _cor0)
						    -| ['compiler_generated'] )
						  ( <_cor221> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {( 'badarg'
								    -| ['compiler_generated'] ),_7788}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
					  in  %% Line 371
					      case _cor223 of
						%% Line 374
						<'true'> when 'true' ->
						    call 'erl_types':'t_float'
							()
						%% Line 375
						<'false'> when 'true' ->
						    call 'erl_types':'t_number'
							()
						( <_cor224> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_cor223})
						  -| ['compiler_generated'] )
					      end
				  ( <_cor225> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_3563})
				    -| ['compiler_generated'] )
				end
			( <_cor227> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor226})
				-| [{'function_name',{'-type/5-fun-5-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 366
		  apply 'strict'/6
		      ('erlang', '-', 2, _cor1, _cor228, _cor0)
	  %% Line 379
	  <'erlang','*',2,Xs,Opaques> when 'true' ->
	      let <_cor236> =
		  %% Line 381
		  fun (_cor234) ->
		      case _cor234 of
			<[X1|[X2|[]]]> when 'true' ->
			    let <_4971> =
				%% Line 382
				apply 'arith'/4
				    ('*', X1, X2, _cor0)
			    in  %% Line 382
				case _4971 of
				  %% Line 383
				  <{'ok',T}> when 'true' ->
				      T
				  %% Line 384
				  <'error'> when 'true' ->
				      let <_7144> =
					  %% Line 386
					  call 'erl_types':'t_is_float'
					      (X1, _cor0)
				      in  let <_cor231> =
					      %% Line 386
					      ( case _7144 of
						  ( <( 'true'
						       -| ['compiler_generated'] )> when 'true' ->
							'true'
						    -| ['compiler_generated'] )
						  ( <( 'false'
						       -| ['compiler_generated'] )> when 'true' ->
							call 'erl_types':'t_is_float'
							    (X2, _cor0)
						    -| ['compiler_generated'] )
						  ( <_cor229> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {( 'badarg'
								    -| ['compiler_generated'] ),_7144}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
					  in  %% Line 385
					      case _cor231 of
						%% Line 388
						<'true'> when 'true' ->
						    call 'erl_types':'t_float'
							()
						%% Line 389
						<'false'> when 'true' ->
						    call 'erl_types':'t_number'
							()
						( <_cor232> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_cor231})
						  -| ['compiler_generated'] )
					      end
				  ( <_cor233> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_4971})
				    -| ['compiler_generated'] )
				end
			( <_cor235> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor234})
				-| [{'function_name',{'-type/5-fun-6-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 380
		  apply 'strict'/6
		      ('erlang', '*', 2, _cor1, _cor236, _cor0)
	  %% Line 393
	  <'erlang','/',2,Xs,Opaques> when 'true' ->
	      let <_cor239> =
		  %% Line 394
		  fun (_cor237) ->
		      call 'erl_types':'t_float'
			  ()
	      in  %% Line 394
		  apply 'strict'/6
		      ('erlang', '/', 2, _cor1, _cor239, _cor0)
	  %% Line 395
	  <'erlang','div',2,Xs,Opaques> when 'true' ->
	      let <_cor243> =
		  %% Line 397
		  fun (_cor241) ->
		      case _cor241 of
			<[X1|[X2|[]]]> when 'true' ->
			    let <_3624> =
				%% Line 398
				apply 'arith'/4
				    ('div', X1, X2, _cor0)
			    in  %% Line 398
				case _3624 of
				  %% Line 399
				  <'error'> when 'true' ->
				      call 'erl_types':'t_integer'
					  ()
				  %% Line 400
				  <{'ok',T}> when 'true' ->
				      T
				  ( <_cor240> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_3624})
				    -| ['compiler_generated'] )
				end
			( <_cor242> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor241})
				-| [{'function_name',{'-type/5-fun-8-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 396
		  apply 'strict'/6
		      ('erlang', 'div', 2, _cor1, _cor243, _cor0)
	  %% Line 403
	  <'erlang','rem',2,Xs,Opaques> when 'true' ->
	      let <_cor247> =
		  %% Line 405
		  fun (_cor245) ->
		      case _cor245 of
			<[X1|[X2|[]]]> when 'true' ->
			    let <_3543> =
				%% Line 406
				apply 'arith'/4
				    ('rem', X1, X2, _cor0)
			    in  %% Line 406
				case _3543 of
				  %% Line 407
				  <'error'> when 'true' ->
				      call 'erl_types':'t_non_neg_integer'
					  ()
				  %% Line 408
				  <{'ok',T}> when 'true' ->
				      T
				  ( <_cor244> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_3543})
				    -| ['compiler_generated'] )
				end
			( <_cor246> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor245})
				-| [{'function_name',{'-type/5-fun-9-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 404
		  apply 'strict'/6
		      ('erlang', 'rem', 2, _cor1, _cor247, _cor0)
	  %% Line 411
	  <'erlang','++',2,Xs,Opaques> when 'true' ->
	      let <_cor255> =
		  %% Line 413
		  fun (_cor253) ->
		      case _cor253 of
			<[X1|[X2|[]]]> when 'true' ->
			    let <_7158> =
				%% Line 414
				call 'erl_types':'t_is_nil'
				    (X1, _cor0)
			    in  %% Line 414
				case _7158 of
				  %% Line 415
				  <'true'> when 'true' ->
				      X2
				  %% Line 416
				  <'false'> when 'true' ->
				      let <_627> =
					  %% Line 417
					  call 'erl_types':'t_is_nil'
					      (X2, _cor0)
				      in  %% Line 417
					  case _627 of
					    %% Line 418
					    <'true'> when 'true' ->
						X1
					    %% Line 419
					    <'false'> when 'true' ->
						let <E1> =
						    %% Line 420
						    call 'erl_types':'t_list_elements'
							(X1, _cor0)
						in  let <_7480> =
							%% Line 421
							call 'erl_types':'t_is_cons'
							    (X1, _cor0)
						    in  %% Line 421
							case _7480 of
							  %% Line 422
							  <'true'> when 'true' ->
							      call 'erl_types':'t_cons'
								  (E1, X2)
							  %% Line 423
							  <'false'> when 'true' ->
							      let <_cor249> =
								  %% Line 424
								  call 'erl_types':'t_cons'
								      (E1, X2)
							      in  %% Line 424
								  call 'erl_types':'t_sup'
								      (X2, _cor249)
							  ( <_cor250> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_7480})
							    -| ['compiler_generated'] )
							end
					    ( <_cor251> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_627})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor252> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_7158})
				    -| ['compiler_generated'] )
				end
			( <_cor254> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor253})
				-| [{'function_name',{'-type/5-fun-10-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 412
		  apply 'strict'/6
		      ('erlang', '++', 2, _cor1, _cor255, _cor0)
	  %% Line 429
	  <'erlang','--',2,Xs,Opaques> when 'true' ->
	      let <_cor261> =
		  %% Line 436
		  fun (_cor259) ->
		      case _cor259 of
			<[X1|[X2|[]]]> when 'true' ->
			    let <_7801> =
				%% Line 437
				call 'erl_types':'t_is_nil'
				    (X1, _cor0)
			    in  %% Line 437
				case _7801 of
				  %% Line 438
				  <'true'> when 'true' ->
				      call 'erl_types':'t_nil'
					  ()
				  %% Line 439
				  <'false'> when 'true' ->
				      let <_6123> =
					  %% Line 440
					  call 'erl_types':'t_is_nil'
					      (X2, _cor0)
				      in  %% Line 440
					  case _6123 of
					    %% Line 441
					    <'true'> when 'true' ->
						X1
					    %% Line 442
					    <'false'> when 'true' ->
						let <_cor256> =
						    call 'erl_types':'t_list_elements'
							(X1, _cor0)
						in  call 'erl_types':'t_list'
							(_cor256)
					    ( <_cor257> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_6123})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor258> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_7801})
				    -| ['compiler_generated'] )
				end
			( <_cor260> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor259})
				-| [{'function_name',{'-type/5-fun-11-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 435
		  apply 'strict'/6
		      ('erlang', '--', 2, _cor1, _cor261, _cor0)
	  %% Line 446
	  <'erlang','and',2,Xs,Opaques> when 'true' ->
	      let <_cor264> =
		  %% Line 447
		  fun (_cor262) ->
		      call 'erl_types':'t_boolean'
			  ()
	      in  %% Line 447
		  apply 'strict'/6
		      ('erlang', 'and', 2, _cor1, _cor264, _cor0)
	  %% Line 448
	  <'erlang','or',2,Xs,Opaques> when 'true' ->
	      let <_cor267> =
		  %% Line 449
		  fun (_cor265) ->
		      call 'erl_types':'t_boolean'
			  ()
	      in  %% Line 449
		  apply 'strict'/6
		      ('erlang', 'or', 2, _cor1, _cor267, _cor0)
	  %% Line 450
	  <'erlang','xor',2,Xs,Opaques> when 'true' ->
	      let <_cor270> =
		  %% Line 451
		  fun (_cor268) ->
		      call 'erl_types':'t_boolean'
			  ()
	      in  %% Line 451
		  apply 'strict'/6
		      ('erlang', 'xor', 2, _cor1, _cor270, _cor0)
	  %% Line 452
	  <'erlang','not',1,Xs,Opaques> when 'true' ->
	      let <_cor273> =
		  %% Line 453
		  fun (_cor271) ->
		      call 'erl_types':'t_boolean'
			  ()
	      in  %% Line 453
		  apply 'strict'/6
		      ('erlang', 'not', 1, _cor1, _cor273, _cor0)
	  %% Line 454
	  <'erlang','band',2,Xs,Opaques> when 'true' ->
	      let <_cor277> =
		  %% Line 456
		  fun (_cor275) ->
		      case _cor275 of
			<[X1|[X2|[]]]> when 'true' ->
			    let <_7968> =
				%% Line 457
				apply 'arith'/4
				    ('band', X1, X2, _cor0)
			    in  %% Line 457
				case _7968 of
				  %% Line 458
				  <'error'> when 'true' ->
				      call 'erl_types':'t_integer'
					  ()
				  %% Line 459
				  <{'ok',T}> when 'true' ->
				      T
				  ( <_cor274> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_7968})
				    -| ['compiler_generated'] )
				end
			( <_cor276> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor275})
				-| [{'function_name',{'-type/5-fun-16-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 455
		  apply 'strict'/6
		      ('erlang', 'band', 2, _cor1, _cor277, _cor0)
	  %% Line 466
	  <'erlang','bor',2,Xs,Opaques> when 'true' ->
	      let <_cor281> =
		  %% Line 468
		  fun (_cor279) ->
		      case _cor279 of
			<[X1|[X2|[]]]> when 'true' ->
			    let <_1066> =
				%% Line 469
				apply 'arith'/4
				    ('bor', X1, X2, _cor0)
			    in  %% Line 469
				case _1066 of
				  %% Line 470
				  <'error'> when 'true' ->
				      call 'erl_types':'t_integer'
					  ()
				  %% Line 471
				  <{'ok',T}> when 'true' ->
				      T
				  ( <_cor278> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_1066})
				    -| ['compiler_generated'] )
				end
			( <_cor280> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor279})
				-| [{'function_name',{'-type/5-fun-17-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 467
		  apply 'strict'/6
		      ('erlang', 'bor', 2, _cor1, _cor281, _cor0)
	  %% Line 478
	  <'erlang','bxor',2,Xs,Opaques> when 'true' ->
	      let <_cor285> =
		  %% Line 480
		  fun (_cor283) ->
		      case _cor283 of
			<[X1|[X2|[]]]> when 'true' ->
			    let <_7493> =
				%% Line 481
				apply 'arith'/4
				    ('bxor', X1, X2, _cor0)
			    in  %% Line 481
				case _7493 of
				  %% Line 482
				  <'error'> when 'true' ->
				      call 'erl_types':'t_integer'
					  ()
				  %% Line 483
				  <{'ok',T}> when 'true' ->
				      T
				  ( <_cor282> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_7493})
				    -| ['compiler_generated'] )
				end
			( <_cor284> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor283})
				-| [{'function_name',{'-type/5-fun-18-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 479
		  apply 'strict'/6
		      ('erlang', 'bxor', 2, _cor1, _cor285, _cor0)
	  %% Line 490
	  <'erlang','bsr',2,Xs,Opaques> when 'true' ->
	      let <_cor289> =
		  %% Line 492
		  fun (_cor287) ->
		      case _cor287 of
			<[X1|[X2|[]]]> when 'true' ->
			    let <_627> =
				%% Line 493
				apply 'arith'/4
				    ('bsr', X1, X2, _cor0)
			    in  %% Line 493
				case _627 of
				  %% Line 494
				  <'error'> when 'true' ->
				      call 'erl_types':'t_integer'
					  ()
				  %% Line 495
				  <{'ok',T}> when 'true' ->
				      T
				  ( <_cor286> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_627})
				    -| ['compiler_generated'] )
				end
			( <_cor288> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor287})
				-| [{'function_name',{'-type/5-fun-19-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 491
		  apply 'strict'/6
		      ('erlang', 'bsr', 2, _cor1, _cor289, _cor0)
	  %% Line 503
	  <'erlang','bsl',2,Xs,Opaques> when 'true' ->
	      let <_cor293> =
		  %% Line 505
		  fun (_cor291) ->
		      case _cor291 of
			<[X1|[X2|[]]]> when 'true' ->
			    let <_1737> =
				%% Line 506
				apply 'arith'/4
				    ('bsl', X1, X2, _cor0)
			    in  %% Line 506
				case _1737 of
				  %% Line 507
				  <'error'> when 'true' ->
				      call 'erl_types':'t_integer'
					  ()
				  %% Line 508
				  <{'ok',T}> when 'true' ->
				      T
				  ( <_cor290> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_1737})
				    -| ['compiler_generated'] )
				end
			( <_cor292> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor291})
				-| [{'function_name',{'-type/5-fun-20-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 504
		  apply 'strict'/6
		      ('erlang', 'bsl', 2, _cor1, _cor293, _cor0)
	  %% Line 513
	  <'erlang','bnot',1,Xs,Opaques> when 'true' ->
	      let <_cor297> =
		  %% Line 515
		  fun (_cor295) ->
		      case _cor295 of
			<[X1|[]]> when 'true' ->
			    let <_7926> =
				%% Line 516
				apply 'arith'/3
				    ('bnot', X1, _cor0)
			    in  %% Line 516
				case _7926 of
				  %% Line 517
				  <'error'> when 'true' ->
				      call 'erl_types':'t_integer'
					  ()
				  %% Line 518
				  <{'ok',T}> when 'true' ->
				      T
				  ( <_cor294> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_7926})
				    -| ['compiler_generated'] )
				end
			( <_cor296> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor295})
				-| [{'function_name',{'-type/5-fun-21-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 514
		  apply 'strict'/6
		      ('erlang', 'bnot', 1, _cor1, _cor297, _cor0)
	  %% Line 522
	  <'erlang','abs',1,Xs,Opaques> when 'true' ->
	      let <_cor300> =
		  %% Line 523
		  fun (_cor298) ->
		      case _cor298 of
			<[X|[]]> when 'true' ->
			    X
			( <_cor299> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor298})
				-| [{'function_name',{'-type/5-fun-22-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 523
		  apply 'strict'/6
		      ('erlang', 'abs', 1, _cor1, _cor300, _cor0)
	  %% Line 526
	  <'erlang','append',2,Xs,_X_Opaques> when 'true' ->
	      apply 'type'/5
		  ('erlang', '++', 2, _cor1, 'universe')
	  %% Line 527
	  <'erlang','apply',2,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 528
		  fun (_cor302) ->
		      case _cor302 of
			<[X|[_X_Y|[]]]> when 'true' ->
			    let <_7336> =
				%% Line 529
				call 'erl_types':'t_is_fun'
				    (X, _cor0)
			    in  %% Line 529
				case _7336 of
				  %% Line 530
				  <'true'> when 'true' ->
				      %% Line 531
				      call 'erl_types':'t_fun_range'
					  (X, _cor0)
				  %% Line 532
				  <'false'> when 'true' ->
				      %% Line 533
				      call 'erl_types':'t_any'
					  ()
				  ( <_cor301> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_7336})
				    -| ['compiler_generated'] )
				end
			( <_cor303> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor302})
				-| [{'function_name',{'-type/5-fun-23-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 536
		  apply 'strict'/6
		      ('erlang', 'apply', 2, _cor1, Fun, _cor0)
	  %% Line 537
	  <'erlang','apply',3,Xs,Opaques> when 'true' ->
	      let <_cor307> =
		  %% Line 538
		  fun (_cor305) ->
		      call 'erl_types':'t_any'
			  ()
	      in  %% Line 538
		  apply 'strict'/6
		      ('erlang', 'apply', 3, _cor1, _cor307, _cor0)
	  %% Line 540
	  <'erlang','binary_part',2,Xs,Opaques> when 'true' ->
	      let <_cor310> =
		  %% Line 541
		  fun (_cor308) ->
		      call 'erl_types':'t_binary'
			  ()
	      in  %% Line 541
		  apply 'strict'/6
		      ('erlang', 'binary_part', 2, _cor1, _cor310, _cor0)
	  %% Line 543
	  <'erlang','binary_part',3,Xs,Opaques> when 'true' ->
	      let <_cor313> =
		  %% Line 544
		  fun (_cor311) ->
		      call 'erl_types':'t_binary'
			  ()
	      in  %% Line 544
		  apply 'strict'/6
		      ('erlang', 'binary_part', 3, _cor1, _cor313, _cor0)
	  %% Line 546
	  <'erlang','bit_size',1,Xs,Opaques> when 'true' ->
	      let <_cor316> =
		  %% Line 548
		  fun (_cor314) ->
		      call 'erl_types':'t_non_neg_integer'
			  ()
	      in  %% Line 547
		  apply 'strict'/6
		      ('erlang', 'bit_size', 1, _cor1, _cor316, _cor0)
	  %% Line 550
	  <'erlang','byte_size',1,Xs,Opaques> when 'true' ->
	      let <_cor319> =
		  %% Line 552
		  fun (_cor317) ->
		      call 'erl_types':'t_non_neg_integer'
			  ()
	      in  %% Line 551
		  apply 'strict'/6
		      ('erlang', 'byte_size', 1, _cor1, _cor319, _cor0)
	  %% Line 553
	  <'erlang','disconnect_node',1,Xs,Opaques> when 'true' ->
	      let <_cor324> =
		  %% Line 555
		  fun (_cor322) ->
		      let <_cor320> =
			  call 'erl_types':'t_boolean'
			      ()
		      in  let <_cor321> =
			      call 'erl_types':'t_atom'
				  ('ignored')
			  in  call 'erl_types':'t_sup'
				  ([_cor320|[_cor321|[]]])
	      in  %% Line 554
		  apply 'strict'/6
		      ('erlang', 'disconnect_node', 1, _cor1, _cor324, _cor0)
	  %% Line 558
	  <'erlang','element',2,Xs,Opaques> when 'true' ->
	      let <_cor348> =
		  %% Line 560
		  fun (_cor346) ->
		      case _cor346 of
			<[X1|[X2|[]]]> when 'true' ->
			    let <_1663> =
				%% Line 561
				call 'erl_types':'t_tuple_subtypes'
				    (X2, _cor0)
			    in  %% Line 561
				case _1663 of
				  %% Line 562
				  <'unknown'> when 'true' ->
				      call 'erl_types':'t_any'
					  ()
				  %% Line 563
				  <[_cor1244|[]]> when 'true' ->
				      let <Sz> =
					  %% Line 564
					  call 'erl_types':'t_tuple_size'
					      (X2, _cor0)
				      in  let <As> =
					      %% Line 565
					      call 'erl_types':'t_tuple_args'
						  (X2, _cor0)
					  in  let <_8004> =
						  %% Line 566
						  call 'erl_types':'t_number_vals'
						      (X1, _cor0)
					      in  %% Line 566
						  case _8004 of
						    %% Line 567
						    <'unknown'> when 'true' ->
							call 'erl_types':'t_sup'
							    (As)
						    %% Line 568
						    <Ns>
							when call 'erlang':'is_list'
							      (_8004) ->
							let <Fun> =
							    %% Line 569
							    fun (_cor333,_cor332) ->
								case <_cor333,_cor332> of
								  %% Line 570
								  <N,X>
								      when try
									    let <_cor327> =
										call 'erlang':'is_integer'
										    (_cor333)
									    in  let <_cor328> =
										    call 'erlang':'=<'
											(1, _cor333)
										in  let <_cor329> =
											call 'erlang':'=<'
											    (_cor333, Sz)
										    in  let <_cor330> =
											    call 'erlang':'and'
												(_cor328, _cor329)
											in  call 'erlang':'and'
												(_cor327, _cor330)
									of <Try> ->
									    Try
									catch <T,R> ->
									    'false' ->
								      let <_cor331> =
									  %% Line 571
									  call 'lists':'nth'
									      (_cor333, As)
								      in  %% Line 571
									  call 'erl_types':'t_sup'
									      (_cor332, _cor331)
								  %% Line 572
								  <_cor1245,X> when 'true' ->
								      _cor332
								end
							in  let <_cor337> =
								%% Line 575
								call 'erl_types':'t_none'
								    ()
							    in  %% Line 575
								call 'lists':'foldl'
								    (Fun, _cor337, _8004)
						    ( <_cor338> when 'true' ->
							  primop 'match_fail'
							      ({'case_clause',_8004})
						      -| ['compiler_generated'] )
						  end
				  %% Line 577
				  <Ts>
				      when call 'erlang':'is_list'
					    (_1663) ->
				      let <_cor344> =
					  %% Line 578
					  ( letrec
						'lc$^4'/1 =
						    fun (_cor341) ->
							case _cor341 of
							  <[Y|_cor340]> when 'true' ->
							      let <_2259> =
								  [X1|[Y|[]]]
							      in  let <_cor342> =
								      apply 'type'/5
									  ('erlang', 'element', 2, _2259, 'universe')
								  in  let <_cor343> =
									  apply 'lc$^4'/1
									      (_cor340)
								      in  ( [_cor342|_cor343]
									    -| ['compiler_generated'] )
							  <[]> when 'true' ->
							      []
							  ( <_6038> when 'true' ->
								( primop 'match_fail'
								      ({'function_clause',_cor341})
								  -| [{'function_name',{'lc$^4',1}}] )
							    -| ['compiler_generated'] )
							end
					    in  apply 'lc$^4'/1
						    (_1663)
					    -| ['list_comprehension'] )
				      in  %% Line 578
					  call 'erl_types':'t_sup'
					      (_cor344)
				  ( <_cor345> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_1663})
				    -| ['compiler_generated'] )
				end
			( <_cor347> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor346})
				-| [{'function_name',{'-type/5-fun-31-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 559
		  apply 'strict'/6
		      ('erlang', 'element', 2, _cor1, _cor348, _cor0)
	  %% Line 582
	  <'erlang','float',1,Xs,Opaques> when 'true' ->
	      let <_cor351> =
		  %% Line 583
		  fun (_cor349) ->
		      call 'erl_types':'t_float'
			  ()
	      in  %% Line 583
		  apply 'strict'/6
		      ('erlang', 'float', 1, _cor1, _cor351, _cor0)
	  %% Line 584
	  <'erlang','fun_info',1,Xs,Opaques> when 'true' ->
	      let <_cor357> =
		  %% Line 586
		  fun (_cor355) ->
		      let <_cor352> =
			  call 'erl_types':'t_atom'
			      ()
		      in  let <_cor353> =
			      call 'erl_types':'t_any'
				  ()
			  in  let <_cor354> =
				  call 'erl_types':'t_tuple'
				      ([_cor352|[_cor353|[]]])
			      in  call 'erl_types':'t_list'
				      (_cor354)
	      in  %% Line 585
		  apply 'strict'/6
		      ('erlang', 'fun_info', 1, _cor1, _cor357, _cor0)
	  %% Line 587
	  <'erlang','get_cookie',0,_cor1248,_X_Opaques> when 'true' ->
	      call 'erl_types':'t_atom'
		  ()
	  %% Line 589
	  <'erlang','hd',1,Xs,Opaques> when 'true' ->
	      let <_cor360> =
		  %% Line 590
		  fun (_cor358) ->
		      case _cor358 of
			<[X|[]]> when 'true' ->
			    call 'erl_types':'t_cons_hd'
				(X)
			( <_cor359> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor358})
				-| [{'function_name',{'-type/5-fun-34-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 590
		  apply 'strict'/6
		      ('erlang', 'hd', 1, _cor1, _cor360, _cor0)
	  %% Line 591
	  <'erlang','integer_to_list',2,Xs,Opaques> when 'true' ->
	      let <_cor363> =
		  %% Line 593
		  fun (_cor361) ->
		      call 'erl_types':'t_string'
			  ()
	      in  %% Line 592
		  apply 'strict'/6
		      ('erlang', 'integer_to_list', 2, _cor1, _cor363, _cor0)
	  %% Line 594
	  <'erlang','info',1,Xs,_cor1250> when 'true' ->
	      apply 'type'/5
		  ('erlang', 'system_info', 1, _cor1, 'universe')
	  %% Line 597
	  <'erlang','is_atom',1,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 598
		  fun (_cor368) ->
		      let <_cor367> =
			  %% Line 599
			  fun (_cor365) ->
			      call 'erl_types':'t_is_atom'
				  (_cor365, _cor0)
		      in  let <_cor364> =
			      %% Line 600
			      call 'erl_types':'t_atom'
				  ()
			  in  %% Line 599
			      apply 'check_guard'/4
				  (_cor368, _cor367, _cor364, _cor0)
	      in  %% Line 602
		  apply 'strict'/6
		      ('erlang', 'is_atom', 1, _cor1, Fun, _cor0)
	  %% Line 603
	  <'erlang','is_binary',1,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 604
		  fun (_cor375) ->
		      let <_cor374> =
			  %% Line 605
			  fun (_cor372) ->
			      call 'erl_types':'t_is_binary'
				  (_cor372, _cor0)
		      in  let <_cor371> =
			      %% Line 606
			      call 'erl_types':'t_binary'
				  ()
			  in  %% Line 605
			      apply 'check_guard'/4
				  (_cor375, _cor374, _cor371, _cor0)
	      in  %% Line 608
		  apply 'strict'/6
		      ('erlang', 'is_binary', 1, _cor1, Fun, _cor0)
	  %% Line 609
	  <'erlang','is_bitstring',1,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 610
		  fun (_cor382) ->
		      let <_cor381> =
			  %% Line 611
			  fun (_cor379) ->
			      call 'erl_types':'t_is_bitstr'
				  (_cor379, _cor0)
		      in  let <_cor378> =
			      %% Line 612
			      call 'erl_types':'t_bitstr'
				  ()
			  in  %% Line 611
			      apply 'check_guard'/4
				  (_cor382, _cor381, _cor378, _cor0)
	      in  %% Line 614
		  apply 'strict'/6
		      ('erlang', 'is_bitstring', 1, _cor1, Fun, _cor0)
	  %% Line 615
	  <'erlang','is_boolean',1,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 616
		  fun (_cor389) ->
		      let <_cor388> =
			  %% Line 617
			  fun (_cor386) ->
			      call 'erl_types':'t_is_boolean'
				  (_cor386, _cor0)
		      in  let <_cor385> =
			      %% Line 618
			      call 'erl_types':'t_boolean'
				  ()
			  in  %% Line 617
			      apply 'check_guard'/4
				  (_cor389, _cor388, _cor385, _cor0)
	      in  %% Line 620
		  apply 'strict'/6
		      ('erlang', 'is_boolean', 1, _cor1, Fun, _cor0)
	  %% Line 621
	  <'erlang','is_float',1,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 622
		  fun (_cor396) ->
		      let <_cor395> =
			  %% Line 623
			  fun (_cor393) ->
			      call 'erl_types':'t_is_float'
				  (_cor393, _cor0)
		      in  let <_cor392> =
			      %% Line 624
			      call 'erl_types':'t_float'
				  ()
			  in  %% Line 623
			      apply 'check_guard'/4
				  (_cor396, _cor395, _cor392, _cor0)
	      in  %% Line 626
		  apply 'strict'/6
		      ('erlang', 'is_float', 1, _cor1, Fun, _cor0)
	  %% Line 627
	  <'erlang','is_function',1,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 628
		  fun (_cor403) ->
		      let <_cor402> =
			  %% Line 629
			  fun (_cor400) ->
			      call 'erl_types':'t_is_fun'
				  (_cor400, _cor0)
		      in  let <_cor399> =
			      %% Line 630
			      call 'erl_types':'t_fun'
				  ()
			  in  %% Line 629
			      apply 'check_guard'/4
				  (_cor403, _cor402, _cor399, _cor0)
	      in  %% Line 632
		  apply 'strict'/6
		      ('erlang', 'is_function', 1, _cor1, Fun, _cor0)
	  %% Line 633
	  <'erlang','is_function',2,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 634
		  fun (_cor416) ->
		      case _cor416 of
			<[FunType|[ArityType|[]]]> when 'true' ->
			    let <_6261> =
				%% Line 635
				call 'erl_types':'t_number_vals'
				    (ArityType, _cor0)
			    in  %% Line 635
				case _6261 of
				  %% Line 636
				  <'unknown'> when 'true' ->
				      call 'erl_types':'t_boolean'
					  ()
				  %% Line 637
				  <[Val|[]]> when 'true' ->
				      let <_1530> =
					  %% Line 1729
					  call 'erl_types':'t_any'
					      ()
				      in  let <_cor407> =
					      %% Line 1729
					      apply 'any_list'/2
						  (Val, _1530)
					  in  let <_cor406> =
						  %% Line 638
						  call 'erl_types':'t_any'
						      ()
					      in  let <FunConstr> =
						      %% Line 638
						      call 'erl_types':'t_fun'
							  (_cor407, _cor406)
						  in  let <Fun2> =
							  %% Line 639
							  fun (_cor412) ->
							      let <_3043> =
								  %% Line 640
								  call 'erl_types':'t_is_subtype'
								      (_cor412, FunConstr)
							      in  %% Line 640
								  ( case _3043 of
								      ( <( 'true'
									   -| ['compiler_generated'] )> when 'true' ->
									    let <_cor410> =
										call 'erl_types':'t_is_none'
										    (_cor412)
									    in  call 'erlang':'not'
										    (_cor410)
									-| ['compiler_generated'] )
								      ( <( 'false'
									   -| ['compiler_generated'] )> when 'true' ->
									    'false'
									-| ['compiler_generated'] )
								      ( <_cor409> when 'true' ->
									    ( call ( 'erlang'
										     -| ['compiler_generated'] ):( 'error'
														   -| ['compiler_generated'] )
										  (( {( 'badarg'
											-| ['compiler_generated'] ),_3043}
										     -| ['compiler_generated'] ))
									      -| ['compiler_generated'] )
									-| ['compiler_generated'] )
								    end
								    -| ['compiler_generated'] )
						      in  %% Line 642
							  apply 'check_guard_single'/4
							      (FunType, Fun2, FunConstr, _cor0)
				  %% Line 643
				  <IntList>
				      when call 'erlang':'is_list'
					    (_6261) ->
				      call 'erl_types':'t_boolean'
					  ()
				  ( <_cor415> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_6261})
				    -| ['compiler_generated'] )
				end
			( <_cor417> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor416})
				-| [{'function_name',{'-type/5-fun-49-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 646
		  apply 'strict'/6
		      ('erlang', 'is_function', 2, _cor1, Fun, _cor0)
	  %% Line 647
	  <'erlang','is_integer',1,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 648
		  fun (_cor423) ->
		      let <_cor422> =
			  %% Line 649
			  fun (_cor420) ->
			      call 'erl_types':'t_is_integer'
				  (_cor420, _cor0)
		      in  let <_cor419> =
			      %% Line 650
			      call 'erl_types':'t_integer'
				  ()
			  in  %% Line 649
			      apply 'check_guard'/4
				  (_cor423, _cor422, _cor419, _cor0)
	      in  %% Line 652
		  apply 'strict'/6
		      ('erlang', 'is_integer', 1, _cor1, Fun, _cor0)
	  %% Line 653
	  <'erlang','is_list',1,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 654
		  fun (_cor430) ->
		      let <Fun2> =
			  %% Line 655
			  fun (_cor426) ->
			      call 'erl_types':'t_is_maybe_improper_list'
				  (_cor426, _cor0)
		      in  let <_cor429> =
			      %% Line 656
			      call 'erl_types':'t_maybe_improper_list'
				  ()
			  in  %% Line 656
			      apply 'check_guard'/4
				  (_cor430, Fun2, _cor429, _cor0)
	      in  %% Line 658
		  apply 'strict'/6
		      ('erlang', 'is_list', 1, _cor1, Fun, _cor0)
	  %% Line 659
	  <'erlang','is_map',1,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 660
		  fun (_cor437) ->
		      let <_cor436> =
			  %% Line 661
			  fun (_cor434) ->
			      call 'erl_types':'t_is_map'
				  (_cor434, _cor0)
		      in  let <_cor433> =
			      %% Line 662
			      call 'erl_types':'t_map'
				  ()
			  in  %% Line 661
			      apply 'check_guard'/4
				  (_cor437, _cor436, _cor433, _cor0)
	      in  %% Line 663
		  apply 'strict'/6
		      ('erlang', 'is_map', 1, _cor1, Fun, _cor0)
	  %% Line 664
	  <'erlang','is_number',1,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 665
		  fun (_cor444) ->
		      let <_cor443> =
			  %% Line 666
			  fun (_cor441) ->
			      call 'erl_types':'t_is_number'
				  (_cor441, _cor0)
		      in  let <_cor440> =
			      %% Line 667
			      call 'erl_types':'t_number'
				  ()
			  in  %% Line 666
			      apply 'check_guard'/4
				  (_cor444, _cor443, _cor440, _cor0)
	      in  %% Line 669
		  apply 'strict'/6
		      ('erlang', 'is_number', 1, _cor1, Fun, _cor0)
	  %% Line 670
	  <'erlang','is_pid',1,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 671
		  fun (_cor451) ->
		      let <_cor450> =
			  %% Line 672
			  fun (_cor448) ->
			      call 'erl_types':'t_is_pid'
				  (_cor448, _cor0)
		      in  let <_cor447> =
			      %% Line 673
			      call 'erl_types':'t_pid'
				  ()
			  in  %% Line 672
			      apply 'check_guard'/4
				  (_cor451, _cor450, _cor447, _cor0)
	      in  %% Line 675
		  apply 'strict'/6
		      ('erlang', 'is_pid', 1, _cor1, Fun, _cor0)
	  %% Line 676
	  <'erlang','is_port',1,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 677
		  fun (_cor458) ->
		      let <_cor457> =
			  %% Line 678
			  fun (_cor455) ->
			      call 'erl_types':'t_is_port'
				  (_cor455, _cor0)
		      in  let <_cor454> =
			      %% Line 679
			      call 'erl_types':'t_port'
				  ()
			  in  %% Line 678
			      apply 'check_guard'/4
				  (_cor458, _cor457, _cor454, _cor0)
	      in  %% Line 681
		  apply 'strict'/6
		      ('erlang', 'is_port', 1, _cor1, Fun, _cor0)
	  %% Line 682
	  <'erlang','is_record',2,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 683
		  fun (_cor475) ->
		      case _cor475 of
			<[X|[Y|[]]]> when 'true' ->
			    let <_2726> =
				%% Line 684
				call 'erl_types':'t_is_tuple'
				    (X, _cor0)
			    in  %% Line 684
				case _2726 of
				  %% Line 685
				  <'false'> when 'true' ->
				      let <_cor461> =
					  %% Line 686
					  call 'erl_types':'t_tuple'
					      ()
				      in  let <_cor462> =
					      %% Line 686
					      call 'erl_types':'t_inf'
						  (_cor461, X, _cor0)
					  in  let <_790> =
						  %% Line 686
						  call 'erl_types':'t_is_none'
						      (_cor462)
					      in  %% Line 686
						  case _790 of
						    %% Line 687
						    <'true'> when 'true' ->
							let <_2000> =
							    %% Line 688
							    call 'erl_types':'t_has_opaque_subtype'
								(X, _cor0)
							in  %% Line 688
							    case _2000 of
							      %% Line 689
							      <'true'> when 'true' ->
								  call 'erl_types':'t_none'
								      ()
							      %% Line 690
							      <'false'> when 'true' ->
								  call 'erl_types':'t_atom'
								      ('false')
							      ( <_cor463> when 'true' ->
								    primop 'match_fail'
									({'case_clause',_2000})
								-| ['compiler_generated'] )
							    end
						    %% Line 692
						    <'false'> when 'true' ->
							call 'erl_types':'t_boolean'
							    ()
						    ( <_cor464> when 'true' ->
							  primop 'match_fail'
							      ({'case_clause',_790})
						      -| ['compiler_generated'] )
						  end
				  %% Line 694
				  <'true'> when 'true' ->
				      let <_6176> =
					  %% Line 695
					  call 'erl_types':'t_tuple_subtypes'
					      (X, _cor0)
				      in  %% Line 695
					  case _6176 of
					    %% Line 696
					    <'unknown'> when 'true' ->
						call 'erl_types':'t_boolean'
						    ()
					    %% Line 697
					    <[Tuple|[]]> when 'true' ->
						let <_3313> =
						    %% Line 698
						    call 'erl_types':'t_tuple_args'
							(Tuple, _cor0)
						in  %% Line 698
						    case _3313 of
						      %% Line 700
						      <[Tag|_cor1251]> when 'true' ->
							  apply 'check_record_tag'/3
							      (Tag, Y, _cor0)
						      ( <_cor465> when 'true' ->
							    primop 'match_fail'
								({'case_clause',_3313})
							-| ['compiler_generated'] )
						    end
					    %% Line 702
					    <List>
						when try
						      let <_cor466> =
							  call 'erlang':'length'
							      (_6176)
						      in  call 'erlang':'>='
							      (_cor466, 2)
						  of <Try> ->
						      Try
						  catch <T,R> ->
						      'false' ->
						let <_cor472> =
						    %% Line 703
						    ( letrec
							  'lc$^5'/1 =
							      fun (_cor469) ->
								  case _cor469 of
								    <[T|_cor468]> when 'true' ->
									let <_373> =
									    [T|[Y|[]]]
									in  let <_cor470> =
										apply 'type'/5
										    ('erlang', 'is_record', 2, _373, 'universe')
									    in  let <_cor471> =
										    apply 'lc$^5'/1
											(_cor468)
										in  ( [_cor470|_cor471]
										      -| ['compiler_generated'] )
								    <[]> when 'true' ->
									[]
								    ( <_5262> when 'true' ->
									  ( primop 'match_fail'
										({'function_clause',_cor469})
									    -| [{'function_name',{'lc$^5',1}}] )
								      -| ['compiler_generated'] )
								  end
						      in  apply 'lc$^5'/1
							      (_6176)
						      -| ['list_comprehension'] )
						in  %% Line 703
						    call 'erl_types':'t_sup'
							(_cor472)
					    ( <_cor473> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_6176})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor474> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_2726})
				    -| ['compiler_generated'] )
				end
			( <_cor476> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor475})
				-| [{'function_name',{'-type/5-fun-62-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 707
		  apply 'strict'/6
		      ('erlang', 'is_record', 2, _cor1, Fun, _cor0)
	  %% Line 708
	  <'erlang','is_record',3,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 709
		  fun (_cor497) ->
		      case _cor497 of
			<[X|[Y|[Z|[]]]]> when 'true' ->
			    let <Arity> =
				%% Line 710
				call 'erl_types':'t_number_vals'
				    (Z, _cor0)
			    in  let <_164> =
				    %% Line 711
				    call 'erl_types':'t_is_tuple'
					(X, _cor0)
				in  %% Line 711
				    case _164 of
				      %% Line 712
				      <'false'>
					  when try
						let <_cor479> =
						    call 'erlang':'length'
							(Arity)
						in  call 'erlang':'=:='
							(_cor479, 1)
					    of <Try> ->
						Try
					    catch <T,R> ->
						'false' ->
					  %% Line 713
					  case Arity of
					    <[RealArity|[]]> when 'true' ->
						let <_cor481> =
						    %% Line 714
						    call 'erl_types':'t_tuple'
							(RealArity)
						in  let <_cor482> =
							%% Line 714
							call 'erl_types':'t_inf'
							    (_cor481, X, _cor0)
						    in  let <_3880> =
							    %% Line 714
							    call 'erl_types':'t_is_none'
								(_cor482)
							in  %% Line 714
							    case _3880 of
							      %% Line 715
							      <'true'> when 'true' ->
								  let <_5184> =
								      %% Line 716
								      call 'erl_types':'t_has_opaque_subtype'
									  (X, _cor0)
								  in  %% Line 716
								      case _5184 of
									%% Line 717
									<'true'> when 'true' ->
									    call 'erl_types':'t_none'
										()
									%% Line 718
									<'false'> when 'true' ->
									    call 'erl_types':'t_atom'
										('false')
									( <_cor483> when 'true' ->
									      primop 'match_fail'
										  ({'case_clause',_5184})
									  -| ['compiler_generated'] )
								      end
							      %% Line 720
							      <'false'> when 'true' ->
								  call 'erl_types':'t_boolean'
								      ()
							      ( <_cor484> when 'true' ->
								    primop 'match_fail'
									({'case_clause',_3880})
								-| ['compiler_generated'] )
							    end
					    ( <_cor480> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',Arity})
					      -| ['compiler_generated'] )
					  end
				      %% Line 722
				      <'false'> when 'true' ->
					  let <_cor485> =
					      %% Line 723
					      call 'erl_types':'t_tuple'
						  ()
					  in  let <_cor486> =
						  %% Line 723
						  call 'erl_types':'t_inf'
						      (_cor485, X, _cor0)
					      in  let <_6473> =
						      %% Line 723
						      call 'erl_types':'t_is_none'
							  (_cor486)
						  in  %% Line 723
						      case _6473 of
							%% Line 724
							<'true'> when 'true' ->
							    let <_1857> =
								%% Line 725
								call 'erl_types':'t_has_opaque_subtype'
								    (X, _cor0)
							    in  %% Line 725
								case _1857 of
								  %% Line 726
								  <'true'> when 'true' ->
								      call 'erl_types':'t_none'
									  ()
								  %% Line 727
								  <'false'> when 'true' ->
								      call 'erl_types':'t_atom'
									  ('false')
								  ( <_cor487> when 'true' ->
									primop 'match_fail'
									    ({'case_clause',_1857})
								    -| ['compiler_generated'] )
								end
							%% Line 729
							<'false'> when 'true' ->
							    call 'erl_types':'t_boolean'
								()
							( <_cor488> when 'true' ->
							      primop 'match_fail'
								  ({'case_clause',_6473})
							  -| ['compiler_generated'] )
						      end
				      %% Line 731
				      <'true'>
					  when try
						let <_cor489> =
						    call 'erlang':'length'
							(Arity)
						in  call 'erlang':'=:='
							(_cor489, 1)
					    of <Try> ->
						Try
					    catch <T,R> ->
						'false' ->
					  %% Line 732
					  case Arity of
					    <[RealArity|[]]> when 'true' ->
						let <_7244> =
						    %% Line 733
						    call 'erl_types':'t_tuple_subtypes'
							(X, _cor0)
						in  %% Line 733
						    case _7244 of
						      %% Line 734
						      <'unknown'> when 'true' ->
							  call 'erl_types':'t_boolean'
							      ()
						      %% Line 735
						      <[Tuple|[]]> when 'true' ->
							  let <_4260> =
							      %% Line 736
							      call 'erl_types':'t_tuple_args'
								  (Tuple, _cor0)
							  in  %% Line 736
							      case _4260 of
								%% Line 738
								<Args>
								    when try
									  let <_cor491> =
									      call 'erlang':'length'
										  (_4260)
									  in  call 'erlang':'=:='
										  (_cor491, RealArity)
								      of <Try> ->
									  Try
								      catch <T,R> ->
									  'false' ->
								    let <_cor492> =
									%% Line 739
									call 'erlang':'hd'
									    (_4260)
								    in  %% Line 739
									apply 'check_record_tag'/3
									    (_cor492, Y, _cor0)
								%% Line 740
								<Args>
								    when try
									  let <_cor493> =
									      call 'erlang':'length'
										  (_4260)
									  in  call 'erlang':'=/='
										  (_cor493, RealArity)
								      of <Try> ->
									  Try
								      catch <T,R> ->
									  'false' ->
								    %% Line 741
								    call 'erl_types':'t_atom'
									('false')
								( <_cor494> when 'true' ->
								      primop 'match_fail'
									  ({'case_clause',_4260})
								  -| ['compiler_generated'] )
							      end
						      %% Line 743
						      <[_cor1252|[_cor1253|_cor1254]]> when 'true' ->
							  %% Line 744
							  call 'erl_types':'t_boolean'
							      ()
						      ( <_cor495> when 'true' ->
							    primop 'match_fail'
								({'case_clause',_7244})
							-| ['compiler_generated'] )
						    end
					    ( <_cor490> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',Arity})
					      -| ['compiler_generated'] )
					  end
				      %% Line 746
				      <'true'> when 'true' ->
					  %% Line 747
					  call 'erl_types':'t_boolean'
					      ()
				      ( <_cor496> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_164})
					-| ['compiler_generated'] )
				    end
			( <_cor498> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor497})
				-| [{'function_name',{'-type/5-fun-63-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 750
		  apply 'strict'/6
		      ('erlang', 'is_record', 3, _cor1, Fun, _cor0)
	  %% Line 751
	  <'erlang','is_reference',1,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 752
		  fun (_cor504) ->
		      let <_cor503> =
			  %% Line 753
			  fun (_cor501) ->
			      call 'erl_types':'t_is_reference'
				  (_cor501, _cor0)
		      in  let <_cor500> =
			      %% Line 754
			      call 'erl_types':'t_reference'
				  ()
			  in  %% Line 753
			      apply 'check_guard'/4
				  (_cor504, _cor503, _cor500, _cor0)
	      in  %% Line 756
		  apply 'strict'/6
		      ('erlang', 'is_reference', 1, _cor1, Fun, _cor0)
	  %% Line 757
	  <'erlang','is_tuple',1,Xs,Opaques> when 'true' ->
	      let <Fun> =
		  %% Line 758
		  fun (_cor511) ->
		      let <_cor510> =
			  %% Line 759
			  fun (_cor508) ->
			      call 'erl_types':'t_is_tuple'
				  (_cor508, _cor0)
		      in  let <_cor507> =
			      %% Line 760
			      call 'erl_types':'t_tuple'
				  ()
			  in  %% Line 759
			      apply 'check_guard'/4
				  (_cor511, _cor510, _cor507, _cor0)
	      in  %% Line 762
		  apply 'strict'/6
		      ('erlang', 'is_tuple', 1, _cor1, Fun, _cor0)
	  %% Line 764
	  <'erlang','length',1,Xs,Opaques> when 'true' ->
	      let <_cor516> =
		  %% Line 765
		  fun (_cor514) ->
		      call 'erl_types':'t_non_neg_fixnum'
			  ()
	      in  %% Line 765
		  apply 'strict'/6
		      ('erlang', 'length', 1, _cor1, _cor516, _cor0)
	  %% Line 767
	  <'erlang','map_size',1,Xs,Opaques> when 'true' ->
	      let <_cor519> =
		  %% Line 768
		  fun (_cor517) ->
		      call 'erl_types':'t_non_neg_integer'
			  ()
	      in  %% Line 768
		  apply 'strict'/6
		      ('erlang', 'map_size', 1, _cor1, _cor519, _cor0)
	  %% Line 769
	  <'erlang','make_tuple',2,Xs,Opaques> when 'true' ->
	      let <_cor525> =
		  %% Line 771
		  fun (_cor523) ->
		      case _cor523 of
			<[Int|[_cor1257|[]]]> when 'true' ->
			    %% Line 772
			    case call 'erl_types':'t_number_vals'
				     (Int, _cor0) of
			      %% Line 773
			      <[N|[]]>
				  when let <_cor520> =
					call 'erlang':'is_integer'
					    (N)
				    in  let <_cor521> =
					    call 'erlang':'>='
						(N, 0)
					in  call 'erlang':'and'
						(_cor520, _cor521) ->
				  call 'erl_types':'t_tuple'
				      (N)
			      %% Line 774
			      <_X_Other> when 'true' ->
				  call 'erl_types':'t_tuple'
				      ()
			    end
			( <_cor524> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor523})
				-| [{'function_name',{'-type/5-fun-70-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 770
		  apply 'strict'/6
		      ('erlang', 'make_tuple', 2, _cor1, _cor525, _cor0)
	  %% Line 777
	  <'erlang','make_tuple',3,Xs,Opaques> when 'true' ->
	      let <_cor531> =
		  %% Line 779
		  fun (_cor529) ->
		      case _cor529 of
			<[Int|[_cor1258|[_cor1259|[]]]]> when 'true' ->
			    %% Line 780
			    case call 'erl_types':'t_number_vals'
				     (Int, _cor0) of
			      %% Line 781
			      <[N|[]]>
				  when let <_cor526> =
					call 'erlang':'is_integer'
					    (N)
				    in  let <_cor527> =
					    call 'erlang':'>='
						(N, 0)
					in  call 'erlang':'and'
						(_cor526, _cor527) ->
				  call 'erl_types':'t_tuple'
				      (N)
			      %% Line 782
			      <_X_Other> when 'true' ->
				  call 'erl_types':'t_tuple'
				      ()
			    end
			( <_cor530> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor529})
				-| [{'function_name',{'-type/5-fun-71-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 778
		  apply 'strict'/6
		      ('erlang', 'make_tuple', 3, _cor1, _cor531, _cor0)
	  %% Line 785
	  <'erlang','memory',0,_cor1260,_X_Opaques> when 'true' ->
	      let <_cor532> =
		  %% Line 786
		  call 'erl_types':'t_atom'
		      ()
	      in  let <_cor533> =
		      %% Line 786
		      call 'erl_types':'t_non_neg_fixnum'
			  ()
		  in  let <_cor534> =
			  %% Line 786
			  call 'erl_types':'t_tuple'
			      ([_cor532|[_cor533|[]]])
		      in  %% Line 786
			  call 'erl_types':'t_list'
			      (_cor534)
	  %% Line 787
	  <'erlang','nif_error',1,Xs,Opaques> when 'true' ->
	      let <_cor537> =
		  %% Line 789
		  fun (_cor535) ->
		      call 'erl_types':'t_any'
			  ()
	      in  %% Line 789
		  apply 'strict'/6
		      ('erlang', 'nif_error', 1, _cor1, _cor537, _cor0)
	  %% Line 790
	  <'erlang','nif_error',2,Xs,Opaques> when 'true' ->
	      let <_cor540> =
		  %% Line 791
		  fun (_cor538) ->
		      call 'erl_types':'t_any'
			  ()
	      in  %% Line 791
		  apply 'strict'/6
		      ('erlang', 'nif_error', 2, _cor1, _cor540, _cor0)
	  %% Line 793
	  <'erlang','node',0,_cor1263,_X_Opaques> when 'true' ->
	      call 'erl_types':'t_node'
		  ()
	  %% Line 795
	  <'erlang','node',1,Xs,Opaques> when 'true' ->
	      let <_cor543> =
		  %% Line 796
		  fun (_cor541) ->
		      call 'erl_types':'t_node'
			  ()
	      in  %% Line 796
		  apply 'strict'/6
		      ('erlang', 'node', 1, _cor1, _cor543, _cor0)
	  %% Line 798
	  <'erlang','round',1,Xs,Opaques> when 'true' ->
	      let <_cor546> =
		  %% Line 799
		  fun (_cor544) ->
		      call 'erl_types':'t_integer'
			  ()
	      in  %% Line 799
		  apply 'strict'/6
		      ('erlang', 'round', 1, _cor1, _cor546, _cor0)
	  %% Line 801
	  <'erlang','self',0,_cor1266,_X_Opaques> when 'true' ->
	      call 'erl_types':'t_pid'
		  ()
	  %% Line 802
	  <'erlang','set_cookie',2,Xs,Opaques> when 'true' ->
	      let <_cor549> =
		  %% Line 803
		  fun (_cor547) ->
		      call 'erl_types':'t_atom'
			  ('true')
	      in  %% Line 803
		  apply 'strict'/6
		      ('erlang', 'set_cookie', 2, _cor1, _cor549, _cor0)
	  %% Line 804
	  <'erlang','setelement',3,Xs,Opaques> when 'true' ->
	      let <_cor589> =
		  %% Line 806
		  fun (_cor587) ->
		      case _cor587 of
			<[X1|[X2|[X3|[]]]]> when 'true' ->
			    let <_924> =
				%% Line 807
				call 'erl_types':'t_tuple_subtypes'
				    (X2, _cor0)
			    in  %% Line 807
				case _924 of
				  %% Line 808
				  <'unknown'> when 'true' ->
				      call 'erl_types':'t_tuple'
					  ()
				  %% Line 809
				  <[_cor1268|[]]> when 'true' ->
				      let <Sz> =
					  %% Line 810
					  call 'erl_types':'t_tuple_size'
					      (X2, _cor0)
				      in  let <As> =
					      %% Line 811
					      call 'erl_types':'t_tuple_args'
						  (X2, _cor0)
					  in  let <_4483> =
						  %% Line 812
						  call 'erl_types':'t_number_vals'
						      (X1, _cor0)
					      in  %% Line 812
						  case _4483 of
						    %% Line 813
						    <'unknown'> when 'true' ->
							let <_cor557> =
							    %% Line 814
							    ( letrec
								  'lc$^6'/1 =
								      fun (_cor554) ->
									  case _cor554 of
									    <[X|_cor553]> when 'true' ->
										let <_cor555> =
										    call 'erl_types':'t_sup'
											(X, X3)
										in  let <_cor556> =
											apply 'lc$^6'/1
											    (_cor553)
										    in  ( [_cor555|_cor556]
											  -| ['compiler_generated'] )
									    <[]> when 'true' ->
										[]
									    ( <_408> when 'true' ->
										  ( primop 'match_fail'
											({'function_clause',_cor554})
										    -| [{'function_name',{'lc$^6',1}}] )
									      -| ['compiler_generated'] )
									  end
							      in  apply 'lc$^6'/1
								      (As)
							      -| ['list_comprehension'] )
							in  %% Line 814
							    call 'erl_types':'t_tuple'
								(_cor557)
						    %% Line 815
						    <[N|[]]>
							when try
							      let <_cor558> =
								  call 'erlang':'is_integer'
								      (N)
							      in  let <_cor559> =
								      call 'erlang':'=<'
									  (1, N)
								  in  let <_cor560> =
									  call 'erlang':'=<'
									      (N, Sz)
								      in  let <_cor561> =
									      call 'erlang':'and'
										  (_cor559, _cor560)
									  in  call 'erlang':'and'
										  (_cor558, _cor561)
							  of <Try> ->
							      Try
							  catch <T,R> ->
							      'false' ->
							let <_cor562> =
							    %% Line 816
							    apply 'list_replace'/3
								(N, X3, As)
							in  %% Line 816
							    call 'erl_types':'t_tuple'
								(_cor562)
						    %% Line 817
						    <[N|[]]>
							when let <_cor563> =
							      call 'erlang':'is_integer'
								  (N)
							  in  let <_cor564> =
								  call 'erlang':'<'
								      (N, 1)
							      in  call 'erlang':'and'
								      (_cor563, _cor564) ->
							%% Line 818
							call 'erl_types':'t_none'
							    ()
						    %% Line 819
						    <[N|[]]>
							when let <_cor565> =
							      call 'erlang':'is_integer'
								  (N)
							  in  let <_cor566> =
								  call 'erlang':'>'
								      (N, Sz)
							      in  call 'erlang':'and'
								      (_cor565, _cor566) ->
							%% Line 820
							call 'erl_types':'t_none'
							    ()
						    %% Line 821
						    <Ns> when 'true' ->
							let <Fun> =
							    %% Line 822
							    fun (_cor574,_cor573) ->
								case <_cor574,_cor573> of
								  <N,XL>
								      when try
									    let <_cor567> =
										call 'erlang':'is_integer'
										    (_cor574)
									    in  let <_cor568> =
										    call 'erlang':'=<'
											(1, _cor574)
										in  let <_cor569> =
											call 'erlang':'=<'
											    (_cor574, Sz)
										    in  let <_cor570> =
											    call 'erlang':'and'
												(_cor568, _cor569)
											in  call 'erlang':'and'
												(_cor567, _cor570)
									of <Try> ->
									    Try
									catch <T,R> ->
									    'false' ->
								      let <X> =
									  %% Line 823
									  call 'lists':'nth'
									      (_cor574, _cor573)
								      in  let <Y> =
									      %% Line 824
									      call 'erl_types':'t_sup'
										  (X, X3)
									  in  %% Line 825
									      apply 'list_replace'/3
										  (_cor574, Y, _cor573)
								  %% Line 826
								  <_cor1269,XL> when 'true' ->
								      _cor573
								end
							in  let <_cor578> =
								%% Line 829
								call 'lists':'foldl'
								    (Fun, As, _4483)
							    in  %% Line 829
								call 'erl_types':'t_tuple'
								    (_cor578)
						  end
				  %% Line 831
				  <Ts>
				      when call 'erlang':'is_list'
					    (_924) ->
				      let <_cor585> =
					  %% Line 832
					  ( letrec
						'lc$^7'/1 =
						    fun (_cor582) ->
							case _cor582 of
							  <[Y|_cor581]> when 'true' ->
							      let <_8638> =
								  [X1|[Y|[X3|[]]]]
							      in  let <_cor583> =
								      apply 'type'/5
									  ('erlang', 'setelement', 3, _8638, 'universe')
								  in  let <_cor584> =
									  apply 'lc$^7'/1
									      (_cor581)
								      in  ( [_cor583|_cor584]
									    -| ['compiler_generated'] )
							  <[]> when 'true' ->
							      []
							  ( <_2898> when 'true' ->
								( primop 'match_fail'
								      ({'function_clause',_cor582})
								  -| [{'function_name',{'lc$^7',1}}] )
							    -| ['compiler_generated'] )
							end
					    in  apply 'lc$^7'/1
						    (_924)
					    -| ['list_comprehension'] )
				      in  %% Line 832
					  call 'erl_types':'t_sup'
					      (_cor585)
				  ( <_cor586> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_924})
				    -| ['compiler_generated'] )
				end
			( <_cor588> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor587})
				-| [{'function_name',{'-type/5-fun-78-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 805
		  apply 'strict'/6
		      ('erlang', 'setelement', 3, _cor1, _cor589, _cor0)
	  %% Line 836
	  <'erlang','size',1,Xs,Opaques> when 'true' ->
	      let <_cor592> =
		  %% Line 837
		  fun (_cor590) ->
		      call 'erl_types':'t_non_neg_integer'
			  ()
	      in  %% Line 837
		  apply 'strict'/6
		      ('erlang', 'size', 1, _cor1, _cor592, _cor0)
	  %% Line 838
	  <'erlang','spawn',1,Xs,Opaques> when 'true' ->
	      let <_cor595> =
		  %% Line 839
		  fun (_cor593) ->
		      call 'erl_types':'t_pid'
			  ()
	      in  %% Line 839
		  apply 'strict'/6
		      ('erlang', 'spawn', 1, _cor1, _cor595, _cor0)
	  %% Line 840
	  <'erlang','spawn',2,Xs,Opaques> when 'true' ->
	      let <_cor598> =
		  %% Line 841
		  fun (_cor596) ->
		      call 'erl_types':'t_pid'
			  ()
	      in  %% Line 841
		  apply 'strict'/6
		      ('erlang', 'spawn', 2, _cor1, _cor598, _cor0)
	  %% Line 842
	  <'erlang','spawn',4,Xs,Opaques> when 'true' ->
	      let <_cor601> =
		  %% Line 843
		  fun (_cor599) ->
		      call 'erl_types':'t_pid'
			  ()
	      in  %% Line 843
		  apply 'strict'/6
		      ('erlang', 'spawn', 4, _cor1, _cor601, _cor0)
	  %% Line 844
	  <'erlang','spawn_link',1,Xs,_cor1274> when 'true' ->
	      apply 'type'/5
		  ('erlang', 'spawn', 1, _cor1, 'universe')
	  %% Line 845
	  <'erlang','spawn_link',2,Xs,_cor1275> when 'true' ->
	      apply 'type'/5
		  ('erlang', 'spawn', 2, _cor1, 'universe')
	  %% Line 846
	  <'erlang','spawn_link',4,Xs,_cor1276> when 'true' ->
	      apply 'type'/5
		  ('erlang', 'spawn', 4, _cor1, 'universe')
	  %% Line 847
	  <'erlang','subtract',2,Xs,_X_Opaques> when 'true' ->
	      apply 'type'/5
		  ('erlang', '--', 2, _cor1, 'universe')
	  %% Line 848
	  <'erlang','suspend_process',1,Xs,Opaques> when 'true' ->
	      let <_cor604> =
		  %% Line 850
		  fun (_cor602) ->
		      call 'erl_types':'t_atom'
			  ('true')
	      in  %% Line 849
		  apply 'strict'/6
		      ('erlang', 'suspend_process', 1, _cor1, _cor604, _cor0)
	  %% Line 851
	  <'erlang','system_info',1,Xs,Opaques> when 'true' ->
	      let <_cor652> =
		  %% Line 853
		  fun (_cor650) ->
		      case _cor650 of
			<[Type|[]]> when 'true' ->
			    let <_4003> =
				%% Line 854
				call 'erl_types':'t_is_atom'
				    (Type, _cor0)
			    in  %% Line 854
				case _4003 of
				  %% Line 855
				  <'true'> when 'true' ->
				      let <_3947> =
					  %% Line 856
					  call 'erl_types':'t_atom_vals'
					      (Type, _cor0)
				      in  %% Line 856
					  case _3947 of
					    %% Line 857
					    <['allocated_areas']> when 'true' ->
						let <_cor605> =
						    %% Line 858
						    call 'erl_types':'t_atom'
							()
						in  let <_cor606> =
							%% Line 858
							call 'erl_types':'t_non_neg_integer'
							    ()
						    in  let <_cor607> =
							    %% Line 858
							    call 'erl_types':'t_tuple'
								([_cor605|[_cor606|[]]])
							in  let <_cor608> =
								%% Line 859
								call 'erl_types':'t_atom'
								    ()
							    in  let <_cor609> =
								    %% Line 860
								    call 'erl_types':'t_non_neg_integer'
									()
								in  let <_cor610> =
									%% Line 861
									call 'erl_types':'t_non_neg_integer'
									    ()
								    in  let <_cor611> =
									    %% Line 859
									    call 'erl_types':'t_tuple'
										([_cor608|%% Line 860
											  [_cor609|%% Line 861
												   [_cor610|[]]]])
									in  let <_cor612> =
										%% Line 858
										call 'erl_types':'t_sup'
										    ([_cor607|%% Line 859
											      [_cor611|%% Line 861
												       []]])
									    in  %% Line 858
										call 'erl_types':'t_list'
										    (_cor612)
					    %% Line 862
					    <['allocator']> when 'true' ->
						let <_cor613> =
						    %% Line 863
						    call 'erl_types':'t_atom'
							('undefined')
						in  let <_cor614> =
							%% Line 864
							call 'erl_types':'t_atom'
							    ('glibc')
						    in  let <_cor615> =
							    %% Line 863
							    call 'erl_types':'t_sup'
								([_cor613|%% Line 864
									  [_cor614|[]]])
							in  let <_cor616> =
								%% Line 865
								call 'erl_types':'t_integer'
								    ()
							    in  let <_cor617> =
								    %% Line 865
								    call 'erl_types':'t_list'
									(_cor616)
								in  let <_cor618> =
									%% Line 866
									call 'erl_types':'t_atom'
									    ()
								    in  let <_cor619> =
									    %% Line 866
									    call 'erl_types':'t_list'
										(_cor618)
									in  let <_cor620> =
										%% Line 867
										call 'erl_types':'t_atom'
										    ()
									    in  let <_cor621> =
										    %% Line 868
										    call 'erl_types':'t_atom'
											()
										in  let <_cor622> =
											%% Line 869
											call 'erl_types':'t_any'
											    ()
										    in  let <_cor623> =
											    %% Line 868
											    call 'erl_types':'t_tuple'
												([_cor621|%% Line 869
													  [_cor622|[]]])
											in  let <_cor624> =
												%% Line 868
												call 'erl_types':'t_list'
												    (_cor623)
											    in  let <_cor625> =
												    %% Line 867
												    call 'erl_types':'t_tuple'
													([_cor620|%% Line 868
														  [_cor624|%% Line 869
															   []]])
												in  let <_cor626> =
													%% Line 867
													call 'erl_types':'t_list'
													    (_cor625)
												    in  %% Line 863
													call 'erl_types':'t_tuple'
													    ([_cor615|%% Line 865
														      [_cor617|%% Line 866
															       [_cor619|%% Line 867
																	[_cor626|%% Line 869
																		 []]]]])
					    %% Line 870
					    <['break_ignored']> when 'true' ->
						%% Line 871
						call 'erl_types':'t_boolean'
						    ()
					    %% Line 872
					    <['cpu_topology']> when 'true' ->
						let <_2659> =
						    %% Line 2717
						    call 'erl_types':'t_atom'
							('undefined')
						in  let <_1938> =
							%% Line 2720
							apply 't_system_cpu_topology_level_entry'/0
							    ()
						    in  let <_8141> =
							    %% Line 2720
							    call 'erl_types':'t_list'
								(_1938)
							in  %% Line 2717
							    call 'erl_types':'t_sup'
								(_2659, _8141)
					    %% Line 874
					    <['compat_rel']> when 'true' ->
						%% Line 875
						call 'erl_types':'t_non_neg_fixnum'
						    ()
					    %% Line 876
					    <['creation']> when 'true' ->
						%% Line 877
						call 'erl_types':'t_fixnum'
						    ()
					    %% Line 878
					    <['debug_compiled']> when 'true' ->
						%% Line 879
						call 'erl_types':'t_boolean'
						    ()
					    %% Line 880
					    <['dist']> when 'true' ->
						%% Line 881
						call 'erl_types':'t_binary'
						    ()
					    %% Line 882
					    <['dist_ctrl']> when 'true' ->
						let <_cor627> =
						    %% Line 883
						    call 'erl_types':'t_atom'
							()
						in  let <_cor628> =
							%% Line 883
							call 'erl_types':'t_pid'
							    ()
						    in  let <_cor629> =
							    %% Line 883
							    call 'erl_types':'t_port'
								()
							in  let <_cor630> =
								%% Line 883
								call 'erl_types':'t_sup'
								    ([_cor628|[_cor629|[]]])
							    in  let <_cor631> =
								    %% Line 883
								    call 'erl_types':'t_tuple'
									([_cor627|[_cor630|[]]])
								in  %% Line 883
								    call 'erl_types':'t_list'
									(_cor631)
					    %% Line 886
					    <['endian']> when 'true' ->
						let <_6609> =
						    %% Line 2704
						    call 'erl_types':'t_atom'
							('big')
						in  let <_8206> =
							%% Line 2704
							call 'erl_types':'t_atom'
							    ('little')
						    in  %% Line 2704
							call 'erl_types':'t_sup'
							    (_6609, _8206)
					    %% Line 888
					    <['fullsweep_after']> when 'true' ->
						let <_cor632> =
						    %% Line 889
						    call 'erl_types':'t_atom'
							('fullsweep_after')
						in  let <_cor633> =
							%% Line 889
							call 'erl_types':'t_non_neg_integer'
							    ()
						    in  %% Line 889
							call 'erl_types':'t_tuple'
							    ([_cor632|[_cor633|[]]])
					    %% Line 890
					    <['garbage_collection']> when 'true' ->
						%% Line 891
						call 'erl_types':'t_list'
						    ()
					    %% Line 892
					    <['heap_sizes']> when 'true' ->
						let <_cor634> =
						    %% Line 893
						    call 'erl_types':'t_integer'
							()
						in  %% Line 893
						    call 'erl_types':'t_list'
							(_cor634)
					    %% Line 894
					    <['heap_type']> when 'true' ->
						%% Line 895
						call 'erl_types':'t_atom'
						    ('private')
					    %% Line 896
					    <['hipe_architecture']> when 'true' ->
						%% Line 897
						call 'erl_types':'t_atoms'
						    (['amd64'|['arm'|['powerpc'|['ppc64'|['undefined'|['ultrasparc'|['x86']]]]]]])
					    %% Line 899
					    <['info']> when 'true' ->
						%% Line 900
						call 'erl_types':'t_binary'
						    ()
					    %% Line 901
					    <['internal_cpu_topology']> when 'true' ->
						%% Line 902
						apply 't_internal_cpu_topology'/0
						    ()
					    %% Line 903
					    <['loaded']> when 'true' ->
						%% Line 904
						call 'erl_types':'t_binary'
						    ()
					    %% Line 905
					    <['logical_processors']> when 'true' ->
						%% Line 906
						call 'erl_types':'t_non_neg_fixnum'
						    ()
					    %% Line 907
					    <['machine']> when 'true' ->
						%% Line 908
						call 'erl_types':'t_string'
						    ()
					    %% Line 909
					    <['multi_scheduling']> when 'true' ->
						%% Line 910
						apply 't_system_multi_scheduling'/0
						    ()
					    %% Line 911
					    <['multi_scheduling_blockers']> when 'true' ->
						let <_cor635> =
						    %% Line 912
						    call 'erl_types':'t_pid'
							()
						in  %% Line 912
						    call 'erl_types':'t_list'
							(_cor635)
					    %% Line 913
					    <['os_type']> when 'true' ->
						let <_cor636> =
						    %% Line 914
						    call 'erl_types':'t_atom'
							('unix')
						in  let <_cor637> =
							%% Line 915
							call 'erl_types':'t_atom'
							    ('win32')
						    in  let <_cor638> =
							    %% Line 916
							    call 'erl_types':'t_atom'
								('ose')
							in  let <_cor639> =
								%% Line 914
								call 'erl_types':'t_sup'
								    ([_cor636|%% Line 915
									      [_cor637|%% Line 916
										       [_cor638|[]]]])
							    in  let <_cor640> =
								    %% Line 917
								    call 'erl_types':'t_atom'
									()
								in  %% Line 914
								    call 'erl_types':'t_tuple'
									([_cor639|%% Line 917
										  [_cor640|[]]])
					    %% Line 918
					    <['os_version']> when 'true' ->
						let <_cor642> =
						    %% Line 919
						    call 'erl_types':'t_non_neg_fixnum'
							()
						in  let <_cor643> =
							%% Line 920
							call 'erl_types':'t_non_neg_fixnum'
							    ()
						    in  let <_cor644> =
							    %% Line 921
							    call 'erl_types':'t_non_neg_fixnum'
								()
							in  let <_cor645> =
								%% Line 919
								call 'erl_types':'t_tuple'
								    ([_cor642|%% Line 920
									      [_cor643|%% Line 921
										       [_cor644|[]]]])
							    in  let <_cor641> =
								    %% Line 922
								    call 'erl_types':'t_string'
									()
								in  %% Line 919
								    call 'erl_types':'t_sup'
									(_cor645, _cor641)
					    %% Line 923
					    <['otp_release']> when 'true' ->
						%% Line 924
						call 'erl_types':'t_string'
						    ()
					    %% Line 925
					    <['port_parallelism']> when 'true' ->
						%% Line 926
						call 'erl_types':'t_boolean'
						    ()
					    %% Line 927
					    <['port_count']> when 'true' ->
						%% Line 928
						call 'erl_types':'t_non_neg_fixnum'
						    ()
					    %% Line 929
					    <['port_limit']> when 'true' ->
						%% Line 930
						call 'erl_types':'t_non_neg_fixnum'
						    ()
					    %% Line 931
					    <['process_count']> when 'true' ->
						%% Line 932
						call 'erl_types':'t_non_neg_fixnum'
						    ()
					    %% Line 933
					    <['process_limit']> when 'true' ->
						%% Line 934
						call 'erl_types':'t_non_neg_fixnum'
						    ()
					    %% Line 935
					    <['procs']> when 'true' ->
						%% Line 936
						call 'erl_types':'t_binary'
						    ()
					    %% Line 937
					    <['scheduler_bindings']> when 'true' ->
						%% Line 938
						call 'erl_types':'t_tuple'
						    ()
					    %% Line 939
					    <['scheduler_bind_type']> when 'true' ->
						%% Line 940
						apply 't_scheduler_bind_type_results'/0
						    ()
					    %% Line 941
					    <['schedulers']> when 'true' ->
						%% Line 942
						call 'erl_types':'t_pos_fixnum'
						    ()
					    %% Line 943
					    <['schedulers_online']> when 'true' ->
						%% Line 944
						call 'erl_types':'t_pos_fixnum'
						    ()
					    %% Line 945
					    <['sequential_tracer']> when 'true' ->
						let <_cor646> =
						    %% Line 946
						    call 'erl_types':'t_atom'
							('sequential_tracer')
						in  let <_877> =
							%% Line 2714
							call 'erl_types':'t_atom'
							    ('false')
						    in  let <_3580> =
							    %% Line 2714
							    call 'erl_types':'t_pid'
								()
							in  let <_547> =
								%% Line 2714
								call 'erl_types':'t_port'
								    ()
							    in  let <_cor647> =
								    %% Line 2714
								    call 'erl_types':'t_sup'
									([_877|[_3580|[_547|[]]]])
								in  %% Line 946
								    call 'erl_types':'t_tuple'
									([_cor646|%% Line 947
										  [_cor647|[]]])
					    %% Line 948
					    <['smp_support']> when 'true' ->
						%% Line 949
						call 'erl_types':'t_boolean'
						    ()
					    %% Line 950
					    <['system_architecture']> when 'true' ->
						%% Line 951
						call 'erl_types':'t_string'
						    ()
					    %% Line 952
					    <['system_version']> when 'true' ->
						%% Line 953
						call 'erl_types':'t_string'
						    ()
					    %% Line 954
					    <['threads']> when 'true' ->
						%% Line 955
						call 'erl_types':'t_boolean'
						    ()
					    %% Line 956
					    <['thread_pool_size']> when 'true' ->
						%% Line 957
						call 'erl_types':'t_non_neg_fixnum'
						    ()
					    %% Line 958
					    <['trace_control_word']> when 'true' ->
						%% Line 959
						call 'erl_types':'t_integer'
						    ()
					    %% Line 960
					    <['version']> when 'true' ->
						%% Line 961
						call 'erl_types':'t_string'
						    ()
					    %% Line 962
					    <['wordsize']> when 'true' ->
						%% Line 963
						call 'erl_types':'t_integers'
						    ([4|[8]])
					    %% Line 964
					    <List>
						when call 'erlang':'is_list'
						      (_3947) ->
						%% Line 965
						call 'erl_types':'t_any'
						    ()
					    %% Line 966
					    <'unknown'> when 'true' ->
						%% Line 967
						call 'erl_types':'t_any'
						    ()
					    ( <_cor648> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_3947})
					      -| ['compiler_generated'] )
					  end
				  %% Line 969
				  <'false'> when 'true' ->
				      %% Line 970
				      call 'erl_types':'t_any'
					  ()
				  ( <_cor649> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_4003})
				    -| ['compiler_generated'] )
				end
			( <_cor651> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor650})
				-| [{'function_name',{'-type/5-fun-84-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 852
		  apply 'strict'/6
		      ('erlang', 'system_info', 1, _cor1, _cor652, _cor0)
	  %% Line 974
	  <'erlang','tl',1,Xs,Opaques> when 'true' ->
	      let <_cor655> =
		  %% Line 975
		  fun (_cor653) ->
		      case _cor653 of
			<[X|[]]> when 'true' ->
			    call 'erl_types':'t_cons_tl'
				(X)
			( <_cor654> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor653})
				-| [{'function_name',{'-type/5-fun-85-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 975
		  apply 'strict'/6
		      ('erlang', 'tl', 1, _cor1, _cor655, _cor0)
	  %% Line 977
	  <'erlang','trunc',1,Xs,Opaques> when 'true' ->
	      let <_cor658> =
		  %% Line 978
		  fun (_cor656) ->
		      call 'erl_types':'t_integer'
			  ()
	      in  %% Line 978
		  apply 'strict'/6
		      ('erlang', 'trunc', 1, _cor1, _cor658, _cor0)
	  %% Line 980
	  <'erlang','tuple_size',1,Xs,Opaques> when 'true' ->
	      let <_cor661> =
		  %% Line 982
		  fun (_cor659) ->
		      call 'erl_types':'t_non_neg_integer'
			  ()
	      in  %% Line 981
		  apply 'strict'/6
		      ('erlang', 'tuple_size', 1, _cor1, _cor661, _cor0)
	  %% Line 983
	  <'erlang','tuple_to_list',1,Xs,Opaques> when 'true' ->
	      let <_cor681> =
		  %% Line 985
		  fun (_cor679) ->
		      case _cor679 of
			<[X|[]]> when 'true' ->
			    let <_4473> =
				%% Line 986
				call 'erl_types':'t_tuple_subtypes'
				    (X, _cor0)
			    in  %% Line 986
				case _4473 of
				  %% Line 987
				  <'unknown'> when 'true' ->
				      call 'erl_types':'t_list'
					  ()
				  %% Line 988
				  <SubTypes> when 'true' ->
				      let <_cor667> =
					  %% Line 989
					  ( letrec
						'lc$^8'/1 =
						    fun (_cor664) ->
							case _cor664 of
							  <[ST|_cor663]> when 'true' ->
							      let <_cor665> =
								  call 'erl_types':'t_tuple_args'
								      (ST, _cor0)
							      in  let <_cor666> =
								      %% Line 990
								      apply 'lc$^8'/1
									  (_cor663)
								  in  ( [_cor665|_cor666]
									-| ['compiler_generated'] )
							  <[]> when 'true' ->
							      []
							  ( <_5937> when 'true' ->
								( primop 'match_fail'
								      ({'function_clause',_cor664})
								  -| [{'function_name',{'lc$^8',1}}] )
							    -| ['compiler_generated'] )
							end
					    in  apply 'lc$^8'/1
						    (_4473)
					    -| ['list_comprehension'] )
				      in  let <Args> =
					      %% Line 989
					      call 'lists':'append'
						  (_cor667)
					  in  let <_cor672> =
						  %% Line 992
						  fun (_cor670) ->
						      let <_cor669> =
							  %% Line 993
							  call 'erl_types':'t_tuple_size'
							      (_cor670, _cor0)
						      in  %% Line 993
							  call 'erlang':'=:='
							      (_cor669, 0)
					      in  let <_5044> =
						      %% Line 992
						      call 'lists':'any'
							  (_cor672, _4473)
						  in  %% Line 992
						      case _5044 of
							%% Line 995
							<'true'> when 'true' ->
							    let <_cor674> =
								%% Line 998
								call 'erl_types':'t_sup'
								    (Args)
							    in  let <_cor675> =
								    %% Line 998
								    call 'erl_types':'t_nonempty_list'
									(_cor674)
								in  let <_cor673> =
									%% Line 998
									call 'erl_types':'t_nil'
									    ()
								    in  %% Line 998
									call 'erl_types':'t_sup'
									    (_cor675, _cor673)
							%% Line 999
							<'false'> when 'true' ->
							    let <_cor676> =
								%% Line 1000
								call 'erl_types':'t_sup'
								    (Args)
							    in  %% Line 1000
								call 'erl_types':'t_nonempty_list'
								    (_cor676)
							( <_cor677> when 'true' ->
							      primop 'match_fail'
								  ({'case_clause',_5044})
							  -| ['compiler_generated'] )
						      end
				end
			( <_cor680> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor679})
				-| [{'function_name',{'-type/5-fun-89-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 984
		  apply 'strict'/6
		      ('erlang', 'tuple_to_list', 1, _cor1, _cor681, _cor0)
	  %% Line 1004
	  <'erlang','yield',0,_cor1280,_X_Opaques> when 'true' ->
	      call 'erl_types':'t_atom'
		  ('true')
	  %% Line 1006
	  <'ets','rename',2,Xs,Opaques> when 'true' ->
	      let <_cor684> =
		  %% Line 1007
		  fun (_cor682) ->
		      case _cor682 of
			<[_cor1281|[Name|[]]]> when 'true' ->
			    Name
			( <_cor683> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor682})
				-| [{'function_name',{'-type/5-fun-90-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1007
		  apply 'strict'/6
		      ('ets', 'rename', 2, _cor1, _cor684, _cor0)
	  %% Line 1009
	  <'hipe_bifs','add_ref',2,Xs,Opaques> when 'true' ->
	      let <_cor687> =
		  %% Line 1010
		  fun (_cor685) ->
		      call 'erl_types':'t_nil'
			  ()
	      in  %% Line 1010
		  apply 'strict'/6
		      ('hipe_bifs', 'add_ref', 2, _cor1, _cor687, _cor0)
	  %% Line 1011
	  <'hipe_bifs','alloc_data',2,Xs,Opaques> when 'true' ->
	      let <_cor690> =
		  %% Line 1013
		  fun (_cor688) ->
		      call 'erl_types':'t_integer'
			  ()
	      in  %% Line 1012
		  apply 'strict'/6
		      ('hipe_bifs', 'alloc_data', 2, _cor1, _cor690, _cor0)
	  %% Line 1014
	  <'hipe_bifs','array',2,Xs,Opaques> when 'true' ->
	      let <_cor693> =
		  %% Line 1015
		  fun (_cor691) ->
		      %% Line 2776
		      call 'erl_types':'t_integer'
			  ()
	      in  %% Line 1015
		  apply 'strict'/6
		      ('hipe_bifs', 'array', 2, _cor1, _cor693, _cor0)
	  %% Line 1016
	  <'hipe_bifs','array_length',1,Xs,Opaques> when 'true' ->
	      let <_cor696> =
		  %% Line 1018
		  fun (_cor694) ->
		      call 'erl_types':'t_non_neg_fixnum'
			  ()
	      in  %% Line 1017
		  apply 'strict'/6
		      ('hipe_bifs', 'array_length', 1, _cor1, _cor696, _cor0)
	  %% Line 1019
	  <'hipe_bifs','array_sub',2,Xs,Opaques> when 'true' ->
	      let <_cor699> =
		  %% Line 1020
		  fun (_cor697) ->
		      let <_1604> =
			  %% Line 2773
			  call 'erl_types':'t_nil'
			      ()
		      in  let <_4212> =
			      %% Line 2773
			      call 'erl_types':'t_atom'
				  ()
			  in  let <_5908> =
				  %% Line 2773
				  call 'erl_types':'t_fixnum'
				      ()
			      in  %% Line 2773
				  call 'erl_types':'t_sup'
				      ([_1604|[_4212|[_5908|[]]]])
	      in  %% Line 1020
		  apply 'strict'/6
		      ('hipe_bifs', 'array_sub', 2, _cor1, _cor699, _cor0)
	  %% Line 1021
	  <'hipe_bifs','array_update',3,Xs,Opaques> when 'true' ->
	      let <_cor702> =
		  %% Line 1023
		  fun (_cor700) ->
		      %% Line 2776
		      call 'erl_types':'t_integer'
			  ()
	      in  %% Line 1022
		  apply 'strict'/6
		      ('hipe_bifs', 'array_update', 3, _cor1, _cor702, _cor0)
	  %% Line 1024
	  <'hipe_bifs','atom_to_word',1,Xs,Opaques> when 'true' ->
	      let <_cor705> =
		  %% Line 1026
		  fun (_cor703) ->
		      call 'erl_types':'t_integer'
			  ()
	      in  %% Line 1025
		  apply 'strict'/6
		      ('hipe_bifs', 'atom_to_word', 1, _cor1, _cor705, _cor0)
	  %% Line 1027
	  <'hipe_bifs','bif_address',3,Xs,Opaques> when 'true' ->
	      let <_cor710> =
		  %% Line 1029
		  fun (_cor708) ->
		      let <_cor707> =
			  call 'erl_types':'t_integer'
			      ()
		      in  let <_cor706> =
			      call 'erl_types':'t_atom'
				  ('false')
			  in  call 'erl_types':'t_sup'
				  (_cor707, _cor706)
	      in  %% Line 1028
		  apply 'strict'/6
		      ('hipe_bifs', 'bif_address', 3, _cor1, _cor710, _cor0)
	  %% Line 1030
	  <'hipe_bifs','bitarray',2,Xs,Opaques> when 'true' ->
	      let <_cor713> =
		  %% Line 1031
		  fun (_cor711) ->
		      %% Line 2782
		      call 'erl_types':'t_bitstr'
			  ()
	      in  %% Line 1031
		  apply 'strict'/6
		      ('hipe_bifs', 'bitarray', 2, _cor1, _cor713, _cor0)
	  %% Line 1032
	  <'hipe_bifs','bitarray_sub',2,Xs,Opaques> when 'true' ->
	      let <_cor716> =
		  %% Line 1034
		  fun (_cor714) ->
		      call 'erl_types':'t_boolean'
			  ()
	      in  %% Line 1033
		  apply 'strict'/6
		      ('hipe_bifs', 'bitarray_sub', 2, _cor1, _cor716, _cor0)
	  %% Line 1035
	  <'hipe_bifs','bitarray_update',3,Xs,Opaques> when 'true' ->
	      let <_cor719> =
		  %% Line 1037
		  fun (_cor717) ->
		      %% Line 2782
		      call 'erl_types':'t_bitstr'
			  ()
	      in  %% Line 1036
		  apply 'strict'/6
		      ('hipe_bifs', 'bitarray_update', 3, _cor1, _cor719, _cor0)
	  %% Line 1038
	  <'hipe_bifs','bytearray',2,Xs,Opaques> when 'true' ->
	      let <_cor722> =
		  %% Line 1039
		  fun (_cor720) ->
		      %% Line 2785
		      call 'erl_types':'t_binary'
			  ()
	      in  %% Line 1039
		  apply 'strict'/6
		      ('hipe_bifs', 'bytearray', 2, _cor1, _cor722, _cor0)
	  %% Line 1040
	  <'hipe_bifs','bytearray_sub',2,Xs,Opaques> when 'true' ->
	      let <_cor725> =
		  %% Line 1041
		  fun (_cor723) ->
		      call 'erl_types':'t_byte'
			  ()
	      in  %% Line 1041
		  apply 'strict'/6
		      ('hipe_bifs', 'bytearray_sub', 2, _cor1, _cor725, _cor0)
	  %% Line 1042
	  <'hipe_bifs','bytearray_update',3,Xs,Opaques> when 'true' ->
	      let <_cor728> =
		  %% Line 1044
		  fun (_cor726) ->
		      %% Line 2785
		      call 'erl_types':'t_binary'
			  ()
	      in  %% Line 1043
		  apply 'strict'/6
		      ('hipe_bifs', 'bytearray_update', 3, _cor1, _cor728, _cor0)
	  %% Line 1045
	  <'hipe_bifs','call_count_clear',1,Xs,Opaques> when 'true' ->
	      let <_cor733> =
		  %% Line 1047
		  fun (_cor731) ->
		      let <_cor730> =
			  call 'erl_types':'t_non_neg_integer'
			      ()
		      in  let <_cor729> =
			      call 'erl_types':'t_atom'
				  ('false')
			  in  call 'erl_types':'t_sup'
				  (_cor730, _cor729)
	      in  %% Line 1046
		  apply 'strict'/6
		      ('hipe_bifs', 'call_count_clear', 1, _cor1, _cor733, _cor0)
	  %% Line 1048
	  <'hipe_bifs','call_count_get',1,Xs,Opaques> when 'true' ->
	      let <_cor738> =
		  %% Line 1050
		  fun (_cor736) ->
		      let <_cor735> =
			  call 'erl_types':'t_non_neg_integer'
			      ()
		      in  let <_cor734> =
			      call 'erl_types':'t_atom'
				  ('false')
			  in  call 'erl_types':'t_sup'
				  (_cor735, _cor734)
	      in  %% Line 1049
		  apply 'strict'/6
		      ('hipe_bifs', 'call_count_get', 1, _cor1, _cor738, _cor0)
	  %% Line 1051
	  <'hipe_bifs','call_count_off',1,Xs,Opaques> when 'true' ->
	      let <_cor743> =
		  %% Line 1053
		  fun (_cor741) ->
		      let <_cor740> =
			  call 'erl_types':'t_non_neg_integer'
			      ()
		      in  let <_cor739> =
			      call 'erl_types':'t_atom'
				  ('false')
			  in  call 'erl_types':'t_sup'
				  (_cor740, _cor739)
	      in  %% Line 1052
		  apply 'strict'/6
		      ('hipe_bifs', 'call_count_off', 1, _cor1, _cor743, _cor0)
	  %% Line 1054
	  <'hipe_bifs','call_count_on',1,Xs,Opaques> when 'true' ->
	      let <_cor748> =
		  %% Line 1056
		  fun (_cor746) ->
		      let <_cor745> =
			  call 'erl_types':'t_atom'
			      ('true')
		      in  let <_cor744> =
			      call 'erl_types':'t_nil'
				  ()
			  in  call 'erl_types':'t_sup'
				  (_cor745, _cor744)
	      in  %% Line 1055
		  apply 'strict'/6
		      ('hipe_bifs', 'call_count_on', 1, _cor1, _cor748, _cor0)
	  %% Line 1057
	  <'hipe_bifs','check_crc',1,Xs,Opaques> when 'true' ->
	      let <_cor751> =
		  %% Line 1058
		  fun (_cor749) ->
		      call 'erl_types':'t_boolean'
			  ()
	      in  %% Line 1058
		  apply 'strict'/6
		      ('hipe_bifs', 'check_crc', 1, _cor1, _cor751, _cor0)
	  %% Line 1059
	  <'hipe_bifs','enter_code',2,Xs,Opaques> when 'true' ->
	      let <_cor758> =
		  %% Line 1061
		  fun (_cor756) ->
		      let <_cor752> =
			  call 'erl_types':'t_integer'
			      ()
		      in  let <_cor754> =
			      %% Line 1064
			      call 'erl_types':'t_nil'
				  ()
			  in  let <_cor753> =
				  %% Line 1064
				  call 'erl_types':'t_binary'
				      ()
			      in  let <_cor755> =
				      %% Line 1064
				      call 'erl_types':'t_sup'
					  (_cor754, _cor753)
				  in  call 'erl_types':'t_tuple'
					  ([_cor752|%% Line 1064
						    [_cor755|[]]])
	      in  %% Line 1060
		  apply 'strict'/6
		      ('hipe_bifs', 'enter_code', 2, _cor1, _cor758, _cor0)
	  %% Line 1065
	  <'hipe_bifs','enter_sdesc',1,Xs,Opaques> when 'true' ->
	      let <_cor761> =
		  %% Line 1066
		  fun (_cor759) ->
		      call 'erl_types':'t_nil'
			  ()
	      in  %% Line 1066
		  apply 'strict'/6
		      ('hipe_bifs', 'enter_sdesc', 1, _cor1, _cor761, _cor0)
	  %% Line 1067
	  <'hipe_bifs','find_na_or_make_stub',2,Xs,Opaques> when 'true' ->
	      let <_cor764> =
		  %% Line 1069
		  fun (_cor762) ->
		      call 'erl_types':'t_integer'
			  ()
	      in  %% Line 1068
		  apply 'strict'/6
		      ('hipe_bifs', 'find_na_or_make_stub', 2, _cor1, _cor764, _cor0)
	  %% Line 1070
	  <'hipe_bifs','fun_to_address',1,Xs,Opaques> when 'true' ->
	      let <_cor767> =
		  %% Line 1072
		  fun (_cor765) ->
		      call 'erl_types':'t_integer'
			  ()
	      in  %% Line 1071
		  apply 'strict'/6
		      ('hipe_bifs', 'fun_to_address', 1, _cor1, _cor767, _cor0)
	  %% Line 1076
	  <'hipe_bifs','get_fe',2,Xs,Opaques> when 'true' ->
	      let <_cor770> =
		  %% Line 1077
		  fun (_cor768) ->
		      call 'erl_types':'t_integer'
			  ()
	      in  %% Line 1077
		  apply 'strict'/6
		      ('hipe_bifs', 'get_fe', 2, _cor1, _cor770, _cor0)
	  %% Line 1078
	  <'hipe_bifs','get_rts_param',1,Xs,Opaques> when 'true' ->
	      let <_cor775> =
		  %% Line 1080
		  fun (_cor773) ->
		      let <_cor772> =
			  call 'erl_types':'t_integer'
			      ()
		      in  let <_cor771> =
			      call 'erl_types':'t_nil'
				  ()
			  in  call 'erl_types':'t_sup'
				  (_cor772, _cor771)
	      in  %% Line 1079
		  apply 'strict'/6
		      ('hipe_bifs', 'get_rts_param', 1, _cor1, _cor775, _cor0)
	  %% Line 1081
	  <'hipe_bifs','invalidate_funinfo_native_addresses',1,Xs,Opaques> when 'true' ->
	      let <_cor778> =
		  %% Line 1083
		  fun (_cor776) ->
		      call 'erl_types':'t_nil'
			  ()
	      in  %% Line 1082
		  apply 'strict'/6
		      ('hipe_bifs', 'invalidate_funinfo_native_addresses', 1, _cor1, _cor778, _cor0)
	  %% Line 1087
	  <'hipe_bifs','mark_referred_from',1,Xs,Opaques> when 'true' ->
	      let <_cor781> =
		  %% Line 1089
		  fun (_cor779) ->
		      call 'erl_types':'t_nil'
			  ()
	      in  %% Line 1088
		  apply 'strict'/6
		      ('hipe_bifs', 'mark_referred_from', 1, _cor1, _cor781, _cor0)
	  %% Line 1090
	  <'hipe_bifs','merge_term',1,Xs,Opaques> when 'true' ->
	      let <_cor784> =
		  %% Line 1091
		  fun (_cor782) ->
		      case _cor782 of
			<[X|[]]> when 'true' ->
			    X
			( <_cor783> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor782})
				-| [{'function_name',{'-type/5-fun-118-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1091
		  apply 'strict'/6
		      ('hipe_bifs', 'merge_term', 1, _cor1, _cor784, _cor0)
	  %% Line 1092
	  <'hipe_bifs','nstack_used_size',0,_cor1309,_X_Opaques> when 'true' ->
	      %% Line 1093
	      call 'erl_types':'t_non_neg_fixnum'
		  ()
	  %% Line 1094
	  <'hipe_bifs','patch_call',3,Xs,Opaques> when 'true' ->
	      let <_cor787> =
		  %% Line 1095
		  fun (_cor785) ->
		      call 'erl_types':'t_nil'
			  ()
	      in  %% Line 1095
		  apply 'strict'/6
		      ('hipe_bifs', 'patch_call', 3, _cor1, _cor787, _cor0)
	  %% Line 1096
	  <'hipe_bifs','patch_insn',3,Xs,Opaques> when 'true' ->
	      let <_cor790> =
		  %% Line 1097
		  fun (_cor788) ->
		      call 'erl_types':'t_nil'
			  ()
	      in  %% Line 1097
		  apply 'strict'/6
		      ('hipe_bifs', 'patch_insn', 3, _cor1, _cor790, _cor0)
	  %% Line 1098
	  <'hipe_bifs','primop_address',1,Xs,Opaques> when 'true' ->
	      let <_cor795> =
		  %% Line 1100
		  fun (_cor793) ->
		      let <_cor792> =
			  call 'erl_types':'t_integer'
			      ()
		      in  let <_cor791> =
			      call 'erl_types':'t_atom'
				  ('false')
			  in  call 'erl_types':'t_sup'
				  (_cor792, _cor791)
	      in  %% Line 1099
		  apply 'strict'/6
		      ('hipe_bifs', 'primop_address', 1, _cor1, _cor795, _cor0)
	  %% Line 1101
	  <'hipe_bifs','redirect_referred_from',1,Xs,Opaques> when 'true' ->
	      let <_cor798> =
		  %% Line 1103
		  fun (_cor796) ->
		      call 'erl_types':'t_nil'
			  ()
	      in  %% Line 1102
		  apply 'strict'/6
		      ('hipe_bifs', 'redirect_referred_from', 1, _cor1, _cor798, _cor0)
	  %% Line 1104
	  <'hipe_bifs','ref',1,Xs,Opaques> when 'true' ->
	      let <_cor801> =
		  %% Line 1105
		  fun (_cor799) ->
		      %% Line 2776
		      call 'erl_types':'t_integer'
			  ()
	      in  %% Line 1105
		  apply 'strict'/6
		      ('hipe_bifs', 'ref', 1, _cor1, _cor801, _cor0)
	  %% Line 1106
	  <'hipe_bifs','ref_get',1,Xs,Opaques> when 'true' ->
	      let <_cor804> =
		  %% Line 1107
		  fun (_cor802) ->
		      let <_4814> =
			  %% Line 2773
			  call 'erl_types':'t_nil'
			      ()
		      in  let <_3951> =
			      %% Line 2773
			      call 'erl_types':'t_atom'
				  ()
			  in  let <_7213> =
				  %% Line 2773
				  call 'erl_types':'t_fixnum'
				      ()
			      in  %% Line 2773
				  call 'erl_types':'t_sup'
				      ([_4814|[_3951|[_7213|[]]]])
	      in  %% Line 1107
		  apply 'strict'/6
		      ('hipe_bifs', 'ref_get', 1, _cor1, _cor804, _cor0)
	  %% Line 1108
	  <'hipe_bifs','ref_set',2,Xs,Opaques> when 'true' ->
	      let <_cor807> =
		  %% Line 1109
		  fun (_cor805) ->
		      call 'erl_types':'t_nil'
			  ()
	      in  %% Line 1109
		  apply 'strict'/6
		      ('hipe_bifs', 'ref_set', 2, _cor1, _cor807, _cor0)
	  %% Line 1110
	  <'hipe_bifs','remove_refs_from',1,Xs,Opaques> when 'true' ->
	      let <_cor810> =
		  %% Line 1112
		  fun (_cor808) ->
		      call 'erl_types':'t_atom'
			  ('ok')
	      in  %% Line 1111
		  apply 'strict'/6
		      ('hipe_bifs', 'remove_refs_from', 1, _cor1, _cor810, _cor0)
	  %% Line 1113
	  <'hipe_bifs','set_funinfo_native_address',3,Xs,Opaques> when 'true' ->
	      let <_cor813> =
		  %% Line 1115
		  fun (_cor811) ->
		      call 'erl_types':'t_nil'
			  ()
	      in  %% Line 1114
		  apply 'strict'/6
		      ('hipe_bifs', 'set_funinfo_native_address', 3, _cor1, _cor813, _cor0)
	  %% Line 1116
	  <'hipe_bifs','set_native_address',3,Xs,Opaques> when 'true' ->
	      let <_cor816> =
		  %% Line 1118
		  fun (_cor814) ->
		      call 'erl_types':'t_nil'
			  ()
	      in  %% Line 1117
		  apply 'strict'/6
		      ('hipe_bifs', 'set_native_address', 3, _cor1, _cor816, _cor0)
	  %% Line 1119
	  <'hipe_bifs','set_native_address_in_fe',2,Xs,Opaques> when 'true' ->
	      let <_cor819> =
		  %% Line 1121
		  fun (_cor817) ->
		      call 'erl_types':'t_atom'
			  ('true')
	      in  %% Line 1120
		  apply 'strict'/6
		      ('hipe_bifs', 'set_native_address_in_fe', 2, _cor1, _cor819, _cor0)
	  %% Line 1122
	  <'hipe_bifs','system_crc',1,Xs,Opaques> when 'true' ->
	      let <_cor822> =
		  %% Line 1123
		  fun (_cor820) ->
		      %% Line 2711
		      call 'erl_types':'t_non_neg_integer'
			  ()
	      in  %% Line 1123
		  apply 'strict'/6
		      ('hipe_bifs', 'system_crc', 1, _cor1, _cor822, _cor0)
	  %% Line 1124
	  <'hipe_bifs','term_to_word',1,Xs,Opaques> when 'true' ->
	      let <_cor825> =
		  %% Line 1126
		  fun (_cor823) ->
		      call 'erl_types':'t_integer'
			  ()
	      in  %% Line 1125
		  apply 'strict'/6
		      ('hipe_bifs', 'term_to_word', 1, _cor1, _cor825, _cor0)
	  %% Line 1127
	  <'hipe_bifs','update_code_size',3,Xs,Opaques> when 'true' ->
	      let <_cor828> =
		  %% Line 1129
		  fun (_cor826) ->
		      call 'erl_types':'t_nil'
			  ()
	      in  %% Line 1128
		  apply 'strict'/6
		      ('hipe_bifs', 'update_code_size', 3, _cor1, _cor828, _cor0)
	  %% Line 1130
	  <'hipe_bifs','write_u8',2,Xs,Opaques> when 'true' ->
	      let <_cor831> =
		  %% Line 1131
		  fun (_cor829) ->
		      call 'erl_types':'t_nil'
			  ()
	      in  %% Line 1131
		  apply 'strict'/6
		      ('hipe_bifs', 'write_u8', 2, _cor1, _cor831, _cor0)
	  %% Line 1132
	  <'hipe_bifs','write_u32',2,Xs,Opaques> when 'true' ->
	      let <_cor834> =
		  %% Line 1133
		  fun (_cor832) ->
		      call 'erl_types':'t_nil'
			  ()
	      in  %% Line 1133
		  apply 'strict'/6
		      ('hipe_bifs', 'write_u32', 2, _cor1, _cor834, _cor0)
	  %% Line 1134
	  <'hipe_bifs','write_u64',2,Xs,Opaques> when 'true' ->
	      let <_cor837> =
		  %% Line 1135
		  fun (_cor835) ->
		      call 'erl_types':'t_nil'
			  ()
	      in  %% Line 1135
		  apply 'strict'/6
		      ('hipe_bifs', 'write_u64', 2, _cor1, _cor837, _cor0)
	  %% Line 1137
	  <'lists','all',2,Xs,Opaques> when 'true' ->
	      let <_cor847> =
		  %% Line 1139
		  fun (_cor845) ->
		      case _cor845 of
			<[F|[L|[]]]> when 'true' ->
			    let <_4088> =
				%% Line 1140
				call 'erl_types':'t_is_nil'
				    (L, _cor0)
			    in  %% Line 1140
				case _4088 of
				  %% Line 1141
				  <'true'> when 'true' ->
				      call 'erl_types':'t_atom'
					  ('true')
				  %% Line 1142
				  <'false'> when 'true' ->
				      let <El> =
					  %% Line 1143
					  call 'erl_types':'t_list_elements'
					      (L, _cor0)
				      in  let <_1222> =
					      %% Line 1144
					      apply 'check_fun_application'/3
						  (F, [El|[]], _cor0)
					  in  %% Line 1144
					      case _1222 of
						%% Line 1145
						<'ok'> when 'true' ->
						    let <_5235> =
							%% Line 1146
							call 'erl_types':'t_is_cons'
							    (L, _cor0)
						    in  %% Line 1146
							case _5235 of
							  %% Line 1147
							  <'true'> when 'true' ->
							      call 'erl_types':'t_fun_range'
								  (F, _cor0)
							  %% Line 1148
							  <'false'> when 'true' ->
							      let <_cor840> =
								  %% Line 1150
								  call 'erl_types':'t_atom'
								      ('true')
							      in  let <_cor839> =
								      %% Line 1150
								      call 'erl_types':'t_fun_range'
									  (F, _cor0)
								  in  %% Line 1150
								      call 'erl_types':'t_sup'
									  (_cor840, _cor839)
							  ( <_cor841> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_5235})
							    -| ['compiler_generated'] )
							end
						%% Line 1152
						<'error'> when 'true' ->
						    let <_2224> =
							%% Line 1153
							call 'erl_types':'t_is_cons'
							    (L, _cor0)
						    in  %% Line 1153
							case _2224 of
							  %% Line 1154
							  <'true'> when 'true' ->
							      call 'erl_types':'t_none'
								  ()
							  %% Line 1155
							  <'false'> when 'true' ->
							      call 'erl_types':'t_fun_range'
								  (F, _cor0)
							  ( <_cor842> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_2224})
							    -| ['compiler_generated'] )
							end
						( <_cor843> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_1222})
						  -| ['compiler_generated'] )
					      end
				  ( <_cor844> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_4088})
				    -| ['compiler_generated'] )
				end
			( <_cor846> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor845})
				-| [{'function_name',{'-type/5-fun-136-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1138
		  apply 'strict'/6
		      ('lists', 'all', 2, _cor1, _cor847, _cor0)
	  %% Line 1160
	  <'lists','any',2,Xs,Opaques> when 'true' ->
	      let <_cor857> =
		  %% Line 1162
		  fun (_cor855) ->
		      case _cor855 of
			<[F|[L|[]]]> when 'true' ->
			    let <_7871> =
				%% Line 1163
				call 'erl_types':'t_is_nil'
				    (L, _cor0)
			    in  %% Line 1163
				case _7871 of
				  %% Line 1164
				  <'true'> when 'true' ->
				      call 'erl_types':'t_atom'
					  ('false')
				  %% Line 1165
				  <'false'> when 'true' ->
				      let <El> =
					  %% Line 1166
					  call 'erl_types':'t_list_elements'
					      (L, _cor0)
				      in  let <_6004> =
					      %% Line 1167
					      apply 'check_fun_application'/3
						  (F, [El|[]], _cor0)
					  in  %% Line 1167
					      case _6004 of
						%% Line 1168
						<'ok'> when 'true' ->
						    let <_5386> =
							%% Line 1169
							call 'erl_types':'t_is_cons'
							    (L, _cor0)
						    in  %% Line 1169
							case _5386 of
							  %% Line 1170
							  <'true'> when 'true' ->
							      call 'erl_types':'t_fun_range'
								  (F, _cor0)
							  %% Line 1171
							  <'false'> when 'true' ->
							      let <_cor850> =
								  %% Line 1173
								  call 'erl_types':'t_atom'
								      ('false')
							      in  let <_cor849> =
								      %% Line 1173
								      call 'erl_types':'t_fun_range'
									  (F, _cor0)
								  in  %% Line 1173
								      call 'erl_types':'t_sup'
									  (_cor850, _cor849)
							  ( <_cor851> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_5386})
							    -| ['compiler_generated'] )
							end
						%% Line 1175
						<'error'> when 'true' ->
						    let <_6314> =
							%% Line 1176
							call 'erl_types':'t_is_cons'
							    (L, _cor0)
						    in  %% Line 1176
							case _6314 of
							  %% Line 1177
							  <'true'> when 'true' ->
							      call 'erl_types':'t_none'
								  ()
							  %% Line 1178
							  <'false'> when 'true' ->
							      call 'erl_types':'t_fun_range'
								  (F, _cor0)
							  ( <_cor852> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_6314})
							    -| ['compiler_generated'] )
							end
						( <_cor853> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_6004})
						  -| ['compiler_generated'] )
					      end
				  ( <_cor854> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_7871})
				    -| ['compiler_generated'] )
				end
			( <_cor856> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor855})
				-| [{'function_name',{'-type/5-fun-137-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1161
		  apply 'strict'/6
		      ('lists', 'any', 2, _cor1, _cor857, _cor0)
	  %% Line 1183
	  <'lists','append',2,Xs,_X_Opaques> when 'true' ->
	      apply 'type'/5
		  ('erlang', '++', 2, _cor1, 'universe')
	  %% Line 1184
	  <'lists','delete',2,Xs,Opaques> when 'true' ->
	      let <_cor861> =
		  %% Line 1186
		  fun (_cor859) ->
		      case _cor859 of
			<[_cor1327|[List|[]]]> when 'true' ->
			    let <_7100> =
				%% Line 1187
				call 'erl_types':'t_is_cons'
				    (List, _cor0)
			    in  %% Line 1187
				case _7100 of
				  %% Line 1188
				  <'true'> when 'true' ->
				      call 'erl_types':'t_cons_tl'
					  (List)
				  %% Line 1189
				  <'false'> when 'true' ->
				      List
				  ( <_cor858> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_7100})
				    -| ['compiler_generated'] )
				end
			( <_cor860> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor859})
				-| [{'function_name',{'-type/5-fun-138-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1185
		  apply 'strict'/6
		      ('lists', 'delete', 2, _cor1, _cor861, _cor0)
	  %% Line 1192
	  <'lists','dropwhile',2,Xs,Opaques> when 'true' ->
	      let <_cor880> =
		  %% Line 1194
		  fun (_cor878) ->
		      case _cor878 of
			<[F|[X|[]]]> when 'true' ->
			    let <_7944> =
				%% Line 1195
				call 'erl_types':'t_is_nil'
				    (X, _cor0)
			    in  %% Line 1195
				case _7944 of
				  %% Line 1196
				  <'true'> when 'true' ->
				      call 'erl_types':'t_nil'
					  ()
				  %% Line 1197
				  <'false'> when 'true' ->
				      let <X1> =
					  %% Line 1198
					  call 'erl_types':'t_list_elements'
					      (X, _cor0)
				      in  let <_7873> =
					      %% Line 1199
					      apply 'check_fun_application'/3
						  (F, [X1|[]], _cor0)
					  in  %% Line 1199
					      case _7873 of
						%% Line 1200
						<'ok'> when 'true' ->
						    let <_cor863> =
							%% Line 1201
							call 'erl_types':'t_fun_range'
							    (F, _cor0)
						    in  %% Line 1201
							case call 'erl_types':'t_atom_vals'
								 (_cor863, _cor0) of
							  %% Line 1202
							  <['true']> when 'true' ->
							      let <_cor864> =
								  %% Line 1203
								  call 'erl_types':'t_list'
								      ()
							      in  let <_cor865> =
								      %% Line 1203
								      call 'erl_types':'t_inf'
									  (_cor864, X, _cor0)
								  in  let <_488> =
									  %% Line 1203
									  call 'erl_types':'t_is_none'
									      (_cor865)
								      in  %% Line 1203
									  case _488 of
									    %% Line 1204
									    <'true'> when 'true' ->
										call 'erl_types':'t_none'
										    ()
									    %% Line 1205
									    <'false'> when 'true' ->
										call 'erl_types':'t_nil'
										    ()
									    ( <_cor866> when 'true' ->
										  primop 'match_fail'
										      ({'case_clause',_488})
									      -| ['compiler_generated'] )
									  end
							  %% Line 1207
							  <['false']> when 'true' ->
							      let <_cor867> =
								  %% Line 1208
								  call 'erl_types':'t_list'
								      ()
							      in  let <_cor868> =
								      %% Line 1208
								      call 'erl_types':'t_inf'
									  (_cor867, X, _cor0)
								  in  let <_4695> =
									  %% Line 1208
									  call 'erl_types':'t_is_none'
									      (_cor868)
								      in  %% Line 1208
									  case _4695 of
									    %% Line 1209
									    <'true'> when 'true' ->
										call 'erl_types':'t_none'
										    ()
									    %% Line 1210
									    <'false'> when 'true' ->
										X
									    ( <_cor869> when 'true' ->
										  primop 'match_fail'
										      ({'case_clause',_4695})
									      -| ['compiler_generated'] )
									  end
							  %% Line 1212
							  <_cor1328> when 'true' ->
							      let <_cor871> =
								  %% Line 1213
								  call 'erl_types':'t_cons'
								      ()
							      in  let <_cor872> =
								      %% Line 1213
								      call 'erl_types':'t_inf'
									  (X, _cor871, _cor0)
								  in  let <_cor873> =
									  %% Line 1213
									  call 'erl_types':'t_cons_tl'
									      (_cor872)
								      in  let <_cor870> =
									      %% Line 1214
									      call 'erl_types':'t_maybe_improper_list'
										  ()
									  in  %% Line 1213
									      call 'erl_types':'t_inf'
										  (_cor873, _cor870, _cor0)
							end
						%% Line 1216
						<'error'> when 'true' ->
						    let <_1576> =
							%% Line 1217
							call 'erl_types':'t_is_cons'
							    (X, _cor0)
						    in  %% Line 1217
							case _1576 of
							  %% Line 1218
							  <'true'> when 'true' ->
							      call 'erl_types':'t_none'
								  ()
							  %% Line 1219
							  <'false'> when 'true' ->
							      call 'erl_types':'t_nil'
								  ()
							  ( <_cor875> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_1576})
							    -| ['compiler_generated'] )
							end
						( <_cor876> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_7873})
						  -| ['compiler_generated'] )
					      end
				  ( <_cor877> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_7944})
				    -| ['compiler_generated'] )
				end
			( <_cor879> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor878})
				-| [{'function_name',{'-type/5-fun-139-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1193
		  apply 'strict'/6
		      ('lists', 'dropwhile', 2, _cor1, _cor880, _cor0)
	  %% Line 1224
	  <'lists','filter',2,Xs,Opaques> when 'true' ->
	      let <_cor891> =
		  %% Line 1226
		  fun (_cor889) ->
		      case _cor889 of
			<[F|[L|[]]]> when 'true' ->
			    let <_6666> =
				%% Line 1227
				call 'erl_types':'t_is_nil'
				    (L, _cor0)
			    in  %% Line 1227
				case _6666 of
				  %% Line 1228
				  <'true'> when 'true' ->
				      call 'erl_types':'t_nil'
					  ()
				  %% Line 1229
				  <'false'> when 'true' ->
				      let <T> =
					  %% Line 1230
					  call 'erl_types':'t_list_elements'
					      (L, _cor0)
				      in  let <_3569> =
					      %% Line 1231
					      apply 'check_fun_application'/3
						  (F, [T|[]], _cor0)
					  in  %% Line 1231
					      case _3569 of
						%% Line 1232
						<'ok'> when 'true' ->
						    let <_cor882> =
							%% Line 1233
							call 'erl_types':'t_fun_range'
							    (F, _cor0)
						    in  let <RangeVals> =
							    %% Line 1233
							    call 'erl_types':'t_atom_vals'
								(_cor882, _cor0)
							in  %% Line 1234
							    case <> of
							      %% Line 1235
							      <>
								  when call 'erlang':'=:='
									(RangeVals,
									 ['false']) ->
								  call 'erl_types':'t_nil'
								      ()
							      %% Line 1236
							      <> when 'true' ->
								  %% Line 1237
								  case <> of
								    %% Line 1238
								    <>
									when call 'erlang':'=:='
									      (RangeVals,
									       ['true']) ->
									L
								    %% Line 1239
								    <> when 'true' ->
									call 'erl_types':'t_list'
									    (T)
								  end
							    end
						%% Line 1242
						<'error'> when 'true' ->
						    let <_8015> =
							%% Line 1243
							call 'erl_types':'t_is_cons'
							    (L, _cor0)
						    in  %% Line 1243
							case _8015 of
							  %% Line 1244
							  <'true'> when 'true' ->
							      call 'erl_types':'t_none'
								  ()
							  %% Line 1245
							  <'false'> when 'true' ->
							      call 'erl_types':'t_nil'
								  ()
							  ( <_cor886> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_8015})
							    -| ['compiler_generated'] )
							end
						( <_cor887> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_3569})
						  -| ['compiler_generated'] )
					      end
				  ( <_cor888> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_6666})
				    -| ['compiler_generated'] )
				end
			( <_cor890> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor889})
				-| [{'function_name',{'-type/5-fun-140-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1225
		  apply 'strict'/6
		      ('lists', 'filter', 2, _cor1, _cor891, _cor0)
	  %% Line 1250
	  <'lists','flatten',1,Xs,Opaques> when 'true' ->
	      let <_cor903> =
		  %% Line 1252
		  fun (_cor901) ->
		      case _cor901 of
			<[L|[]]> when 'true' ->
			    let <_2560> =
				%% Line 1253
				call 'erl_types':'t_is_nil'
				    (L, _cor0)
			    in  %% Line 1253
				case _2560 of
				  %% Line 1254
				  <'true'> when 'true' ->
				      L
				  %% Line 1255
				  <'false'> when 'true' ->
				      let <X1> =
					  %% Line 1257
					  call 'erl_types':'t_list_elements'
					      (L, _cor0)
				      in  let <_5253> =
					      %% Line 1258
					      call 'erl_types':'t_is_any'
						  (X1)
					  in  %% Line 1258
					      case _5253 of
						%% Line 1259
						<'true'> when 'true' ->
						    %% Line 1260
						    call 'erl_types':'t_list'
							()
						%% Line 1261
						<'false'> when 'true' ->
						    let <_cor893> =
							%% Line 1262
							call 'erl_types':'t_list'
							    ()
						    in  let <_cor894> =
							    %% Line 1262
							    call 'erl_types':'t_inf'
								(X1, _cor893, _cor0)
							in  let <_7867> =
								%% Line 1262
								[_cor894|[]]
							    in  let <X2> =
								    apply 'type'/5
									(%% Line 1262
									 'lists', %% Line 1262
										  'flatten', %% Line 1262
											     1, _7867, 'universe')
								in  let <_cor896> =
									%% Line 1263
									call 'erl_types':'t_list'
									    ()
								    in  let <_cor897> =
									    %% Line 1263
									    call 'erl_types':'t_subtract'
										(X1, _cor896)
									in  let <_cor898> =
										%% Line 1263
										call 'erl_types':'t_list'
										    (_cor897)
									    in  %% Line 1263
										call 'erl_types':'t_sup'
										    (_cor898, X2)
						( <_cor899> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_5253})
						  -| ['compiler_generated'] )
					      end
				  ( <_cor900> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_2560})
				    -| ['compiler_generated'] )
				end
			( <_cor902> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor901})
				-| [{'function_name',{'-type/5-fun-141-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1251
		  apply 'strict'/6
		      ('lists', 'flatten', 1, _cor1, _cor903, _cor0)
	  %% Line 1267
	  <'lists','flatmap',2,Xs,Opaques> when 'true' ->
	      let <_cor916> =
		  %% Line 1269
		  fun (_cor914) ->
		      case _cor914 of
			<[F|[List|[]]]> when 'true' ->
			    let <_1841> =
				%% Line 1270
				call 'erl_types':'t_is_nil'
				    (List, _cor0)
			    in  %% Line 1270
				case _1841 of
				  %% Line 1271
				  <'true'> when 'true' ->
				      call 'erl_types':'t_nil'
					  ()
				  %% Line 1272
				  <'false'> when 'true' ->
				      let <_cor904> =
					  %% Line 1274
					  call 'erl_types':'t_list_elements'
					      (List, _cor0)
				      in  let <_1103> =
					      %% Line 1274
					      apply 'check_fun_application'/3
						  (F, [_cor904|[]], _cor0)
					  in  %% Line 1273
					      case _1103 of
						%% Line 1277
						<'ok'> when 'true' ->
						    let <R> =
							%% Line 1278
							call 'erl_types':'t_fun_range'
							    (F, _cor0)
						    in  let <_837> =
							    %% Line 1279
							    call 'erl_types':'t_is_nil'
								(R)
							in  %% Line 1279
							    case _837 of
							      %% Line 1280
							      <'true'> when 'true' ->
								  call 'erl_types':'t_nil'
								      ()
							      %% Line 1281
							      <'false'> when 'true' ->
								  let <Elems> =
								      %% Line 1282
								      call 'erl_types':'t_list_elements'
									  (R, _cor0)
								  in  let <_4345> =
									  %% Line 1283
									  call 'erl_types':'t_is_cons'
									      (List, _cor0)
								      in  %% Line 1283
									  case _4345 of
									    %% Line 1284
									    <'true'> when 'true' ->
										let <_cor907> =
										    %% Line 1285
										    call 'erl_types':'t_nil'
											()
										in  let <_1923> =
											%% Line 1285
											call 'erl_types':'t_is_subtype'
											    (_cor907, R)
										    in  %% Line 1285
											case _1923 of
											  %% Line 1286
											  <'true'> when 'true' ->
											      call 'erl_types':'t_list'
												  (Elems)
											  %% Line 1287
											  <'false'> when 'true' ->
											      call 'erl_types':'t_nonempty_list'
												  (Elems)
											  ( <_cor908> when 'true' ->
												primop 'match_fail'
												    ({'case_clause',_1923})
											    -| ['compiler_generated'] )
											end
									    %% Line 1289
									    <'false'> when 'true' ->
										call 'erl_types':'t_list'
										    (Elems)
									    ( <_cor909> when 'true' ->
										  primop 'match_fail'
										      ({'case_clause',_4345})
									      -| ['compiler_generated'] )
									  end
							      ( <_cor910> when 'true' ->
								    primop 'match_fail'
									({'case_clause',_837})
								-| ['compiler_generated'] )
							    end
						%% Line 1292
						<'error'> when 'true' ->
						    let <_2583> =
							%% Line 1293
							call 'erl_types':'t_is_cons'
							    (List, _cor0)
						    in  %% Line 1293
							case _2583 of
							  %% Line 1294
							  <'true'> when 'true' ->
							      call 'erl_types':'t_none'
								  ()
							  %% Line 1295
							  <'false'> when 'true' ->
							      call 'erl_types':'t_nil'
								  ()
							  ( <_cor911> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_2583})
							    -| ['compiler_generated'] )
							end
						( <_cor912> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_1103})
						  -| ['compiler_generated'] )
					      end
				  ( <_cor913> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_1841})
				    -| ['compiler_generated'] )
				end
			( <_cor915> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor914})
				-| [{'function_name',{'-type/5-fun-142-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1268
		  apply 'strict'/6
		      ('lists', 'flatmap', 2, _cor1, _cor916, _cor0)
	  %% Line 1300
	  <'lists','foreach',2,Xs,Opaques> when 'true' ->
	      let <_cor922> =
		  %% Line 1302
		  fun (_cor920) ->
		      case _cor920 of
			<[F|[List|[]]]> when 'true' ->
			    let <_6496> =
				%% Line 1303
				call 'erl_types':'t_is_cons'
				    (List, _cor0)
			    in  %% Line 1303
				case _6496 of
				  %% Line 1304
				  <'true'> when 'true' ->
				      let <_cor917> =
					  %% Line 1306
					  call 'erl_types':'t_list_elements'
					      (List, _cor0)
				      in  let <_902> =
					      %% Line 1306
					      apply 'check_fun_application'/3
						  (F, [_cor917|[]], _cor0)
					  in  %% Line 1305
					      case _902 of
						%% Line 1309
						<'ok'> when 'true' ->
						    call 'erl_types':'t_atom'
							('ok')
						%% Line 1310
						<'error'> when 'true' ->
						    call 'erl_types':'t_none'
							()
						( <_cor918> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_902})
						  -| ['compiler_generated'] )
					      end
				  %% Line 1312
				  <'false'> when 'true' ->
				      %% Line 1313
				      call 'erl_types':'t_atom'
					  ('ok')
				  ( <_cor919> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_6496})
				    -| ['compiler_generated'] )
				end
			( <_cor921> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor920})
				-| [{'function_name',{'-type/5-fun-143-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1301
		  apply 'strict'/6
		      ('lists', 'foreach', 2, _cor1, _cor922, _cor0)
	  %% Line 1316
	  <'lists','foldl',3,Xs,Opaques> when 'true' ->
	      let <_cor931> =
		  %% Line 1318
		  fun (_cor929) ->
		      case _cor929 of
			<[F|[Acc|[List|[]]]]> when 'true' ->
			    let <_5448> =
				%% Line 1319
				call 'erl_types':'t_is_nil'
				    (List, _cor0)
			    in  %% Line 1319
				case _5448 of
				  %% Line 1320
				  <'true'> when 'true' ->
				      Acc
				  %% Line 1321
				  <'false'> when 'true' ->
				      let <_cor923> =
					  %% Line 1324
					  call 'erl_types':'t_list_elements'
					      (List, _cor0)
				      in  let <_7253> =
					      %% Line 1323
					      apply 'check_fun_application'/3
						  (F, %% Line 1324
						      [_cor923|[Acc|[]]], _cor0)
					  in  %% Line 1322
					      case _7253 of
						%% Line 1327
						<'ok'> when 'true' ->
						    let <_5271> =
							%% Line 1328
							call 'erl_types':'t_is_cons'
							    (List, _cor0)
						    in  %% Line 1328
							case _5271 of
							  %% Line 1329
							  <'true'> when 'true' ->
							      call 'erl_types':'t_fun_range'
								  (F, _cor0)
							  %% Line 1330
							  <'false'> when 'true' ->
							      let <_cor924> =
								  call 'erl_types':'t_fun_range'
								      (F, _cor0)
							      in  call 'erl_types':'t_sup'
								      (_cor924, Acc)
							  ( <_cor925> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_5271})
							    -| ['compiler_generated'] )
							end
						%% Line 1332
						<'error'> when 'true' ->
						    let <_5534> =
							%% Line 1333
							call 'erl_types':'t_is_cons'
							    (List, _cor0)
						    in  %% Line 1333
							case _5534 of
							  %% Line 1334
							  <'true'> when 'true' ->
							      call 'erl_types':'t_none'
								  ()
							  %% Line 1335
							  <'false'> when 'true' ->
							      Acc
							  ( <_cor926> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_5534})
							    -| ['compiler_generated'] )
							end
						( <_cor927> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_7253})
						  -| ['compiler_generated'] )
					      end
				  ( <_cor928> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_5448})
				    -| ['compiler_generated'] )
				end
			( <_cor930> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor929})
				-| [{'function_name',{'-type/5-fun-144-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1317
		  apply 'strict'/6
		      ('lists', 'foldl', 3, _cor1, _cor931, _cor0)
	  %% Line 1340
	  <'lists','foldr',3,Xs,_X_Opaques> when 'true' ->
	      apply 'type'/5
		  ('lists', 'foldl', 3, _cor1, 'universe')
	  %% Line 1341
	  <'lists','keydelete',3,Xs,Opaques> when 'true' ->
	      let <_cor936> =
		  %% Line 1343
		  fun (_cor934) ->
		      case _cor934 of
			<[_cor1329|[_cor1330|[L|[]]]]> when 'true' ->
			    let <Term> =
				%% Line 1344
				call 'erl_types':'t_list_termination'
				    (L)
			    in  let <_cor933> =
				    %% Line 1345
				    call 'erl_types':'lift_list_to_pos_empty'
					(L)
				in  %% Line 1345
				    call 'erl_types':'t_sup'
					(Term, _cor933)
			( <_cor935> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor934})
				-| [{'function_name',{'-type/5-fun-145-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1342
		  apply 'strict'/6
		      ('lists', 'keydelete', 3, _cor1, _cor936, _cor0)
	  %% Line 1347
	  <'lists','keyfind',3,Xs,Opaques> when 'true' ->
	      let <_cor948> =
		  %% Line 1349
		  fun (_cor946) ->
		      case _cor946 of
			<[X|[Y|[Z|[]]]]> when 'true' ->
			    let <ListEs> =
				%% Line 1350
				call 'erl_types':'t_list_elements'
				    (Z, _cor0)
			    in  let <_cor938> =
				    %% Line 1351
				    call 'erl_types':'t_tuple'
					()
				in  let <Tuple> =
					%% Line 1351
					call 'erl_types':'t_inf'
					    (_cor938, ListEs, _cor0)
				    in  let <_4742> =
					    %% Line 1352
					    call 'erl_types':'t_is_none'
						(Tuple)
					in  %% Line 1352
					    case _4742 of
					      %% Line 1353
					      <'true'> when 'true' ->
						  call 'erl_types':'t_atom'
						      ('false')
					      %% Line 1354
					      <'false'> when 'true' ->
						  let <_cor940> =
						      %% Line 1357
						      call 'erl_types':'t_atom'
							  ('false')
						  in  let <Ret> =
							  %% Line 1357
							  call 'erl_types':'t_sup'
							      (Tuple, _cor940)
						      in  let <_604> =
							      %% Line 1358
							      call 'erl_types':'t_is_any'
								  (X)
							  in  %% Line 1358
							      case _604 of
								%% Line 1359
								<'true'> when 'true' ->
								    Ret
								%% Line 1360
								<'false'> when 'true' ->
								    let <_6495> =
									%% Line 1361
									call 'erl_types':'t_tuple_subtypes'
									    (Tuple, _cor0)
								    in  %% Line 1361
									case _6495 of
									  %% Line 1362
									  <'unknown'> when 'true' ->
									      Ret
									  %% Line 1363
									  <List> when 'true' ->
									      let <_6449> =
										  %% Line 1364
										  apply 'key_comparisons_fail'/4
										      (X, Y, _6495, _cor0)
									      in  %% Line 1364
										  case _6449 of
										    %% Line 1365
										    <'true'> when 'true' ->
											call 'erl_types':'t_atom'
											    ('false')
										    %% Line 1366
										    <'false'> when 'true' ->
											Ret
										    ( <_cor942> when 'true' ->
											  primop 'match_fail'
											      ({'case_clause',_6449})
										      -| ['compiler_generated'] )
										  end
									end
								( <_cor944> when 'true' ->
								      primop 'match_fail'
									  ({'case_clause',_604})
								  -| ['compiler_generated'] )
							      end
					      ( <_cor945> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_4742})
						-| ['compiler_generated'] )
					    end
			( <_cor947> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor946})
				-| [{'function_name',{'-type/5-fun-146-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1348
		  apply 'strict'/6
		      ('lists', 'keyfind', 3, _cor1, _cor948, _cor0)
	  %% Line 1372
	  <'lists','keymap',3,Xs,Opaques> when 'true' ->
	      let <_cor955> =
		  %% Line 1374
		  fun (_cor953) ->
		      case _cor953 of
			<[F|[_X_I|[L|[]]]]> when 'true' ->
			    let <_3458> =
				%% Line 1375
				call 'erl_types':'t_is_nil'
				    (L, _cor0)
			    in  %% Line 1375
				case _3458 of
				  %% Line 1376
				  <'true'> when 'true' ->
				      L
				  %% Line 1377
				  <'false'> when 'true' ->
				      let <_cor950> =
					  call 'erl_types':'t_fun_range'
					      (F, _cor0)
				      in  let <_cor949> =
					      %% Line 1378
					      call 'erl_types':'t_list_elements'
						  (L, _cor0)
					  in  let <_cor951> =
						  call 'erl_types':'t_sup'
						      (_cor950, _cor949)
					      in  call 'erl_types':'t_list'
						      (_cor951)
				  ( <_cor952> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_3458})
				    -| ['compiler_generated'] )
				end
			( <_cor954> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor953})
				-| [{'function_name',{'-type/5-fun-147-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1373
		  apply 'strict'/6
		      ('lists', 'keymap', 3, _cor1, _cor955, _cor0)
	  %% Line 1381
	  <'lists','keymember',3,Xs,Opaques> when 'true' ->
	      let <_cor965> =
		  %% Line 1383
		  fun (_cor963) ->
		      case _cor963 of
			<[X|[Y|[Z|[]]]]> when 'true' ->
			    let <ListEs> =
				%% Line 1384
				call 'erl_types':'t_list_elements'
				    (Z, _cor0)
			    in  let <_cor957> =
				    %% Line 1385
				    call 'erl_types':'t_tuple'
					()
				in  let <Tuple> =
					%% Line 1385
					call 'erl_types':'t_inf'
					    (_cor957, ListEs, _cor0)
				    in  let <_7357> =
					    %% Line 1386
					    call 'erl_types':'t_is_none'
						(Tuple)
					in  %% Line 1386
					    case _7357 of
					      %% Line 1387
					      <'true'> when 'true' ->
						  call 'erl_types':'t_atom'
						      ('false')
					      %% Line 1388
					      <'false'> when 'true' ->
						  let <_7254> =
						      %% Line 1389
						      call 'erl_types':'t_is_any'
							  (X)
						  in  %% Line 1389
						      case _7254 of
							%% Line 1390
							<'true'> when 'true' ->
							    call 'erl_types':'t_boolean'
								()
							%% Line 1391
							<'false'> when 'true' ->
							    let <_6013> =
								%% Line 1392
								call 'erl_types':'t_tuple_subtypes'
								    (Tuple, _cor0)
							    in  %% Line 1392
								case _6013 of
								  %% Line 1393
								  <'unknown'> when 'true' ->
								      call 'erl_types':'t_boolean'
									  ()
								  %% Line 1394
								  <List> when 'true' ->
								      let <_7007> =
									  %% Line 1395
									  apply 'key_comparisons_fail'/4
									      (X, Y, _6013, _cor0)
								      in  %% Line 1395
									  case _7007 of
									    %% Line 1396
									    <'true'> when 'true' ->
										call 'erl_types':'t_atom'
										    ('false')
									    %% Line 1397
									    <'false'> when 'true' ->
										call 'erl_types':'t_boolean'
										    ()
									    ( <_cor959> when 'true' ->
										  primop 'match_fail'
										      ({'case_clause',_7007})
									      -| ['compiler_generated'] )
									  end
								end
							( <_cor961> when 'true' ->
							      primop 'match_fail'
								  ({'case_clause',_7254})
							  -| ['compiler_generated'] )
						      end
					      ( <_cor962> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_7357})
						-| ['compiler_generated'] )
					    end
			( <_cor964> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor963})
				-| [{'function_name',{'-type/5-fun-148-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1382
		  apply 'strict'/6
		      ('lists', 'keymember', 3, _cor1, _cor965, _cor0)
	  %% Line 1403
	  <'lists','keymerge',3,Xs,Opaques> when 'true' ->
	      let <_cor968> =
		  %% Line 1405
		  fun (_cor966) ->
		      case _cor966 of
			<[_X_I|[L1|[L2|[]]]]> when 'true' ->
			    let <_2025> =
				[L1|[L2|[]]]
			    in  apply 'type'/5
				    ('lists', 'merge', 2, _2025, 'universe')
			( <_cor967> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor966})
				-| [{'function_name',{'-type/5-fun-149-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1404
		  apply 'strict'/6
		      ('lists', 'keymerge', 3, _cor1, _cor968, _cor0)
	  %% Line 1406
	  <'lists','keyreplace',4,Xs,Opaques> when 'true' ->
	      let <_cor973> =
		  %% Line 1408
		  fun (_cor971) ->
		      case _cor971 of
			<[_X_K|[_X_I|[L|[T|[]]]]]> when 'true' ->
			    let <_cor969> =
				%% Line 1409
				call 'erl_types':'t_list_elements'
				    (L, _cor0)
			    in  let <_cor970> =
				    %% Line 1409
				    call 'erl_types':'t_sup'
					(_cor969, T)
				in  %% Line 1409
				    call 'erl_types':'t_list'
					(_cor970)
			( <_cor972> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor971})
				-| [{'function_name',{'-type/5-fun-150-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1407
		  apply 'strict'/6
		      ('lists', 'keyreplace', 4, _cor1, _cor973, _cor0)
	  %% Line 1411
	  <'lists','keysearch',3,Xs,Opaques> when 'true' ->
	      let <_cor987> =
		  %% Line 1413
		  fun (_cor985) ->
		      case _cor985 of
			<[X|[Y|[Z|[]]]]> when 'true' ->
			    let <ListEs> =
				%% Line 1414
				call 'erl_types':'t_list_elements'
				    (Z, _cor0)
			    in  let <_cor975> =
				    %% Line 1415
				    call 'erl_types':'t_tuple'
					()
				in  let <Tuple> =
					%% Line 1415
					call 'erl_types':'t_inf'
					    (_cor975, ListEs, _cor0)
				    in  let <_5068> =
					    %% Line 1416
					    call 'erl_types':'t_is_none'
						(Tuple)
					in  %% Line 1416
					    case _5068 of
					      %% Line 1417
					      <'true'> when 'true' ->
						  call 'erl_types':'t_atom'
						      ('false')
					      %% Line 1418
					      <'false'> when 'true' ->
						  let <_cor978> =
						      %% Line 1419
						      call 'erl_types':'t_atom'
							  ('value')
						  in  let <_cor979> =
							  %% Line 1419
							  call 'erl_types':'t_tuple'
							      ([_cor978|[Tuple|[]]])
						      in  let <_cor977> =
							      %% Line 1420
							      call 'erl_types':'t_atom'
								  ('false')
							  in  let <Ret> =
								  %% Line 1419
								  call 'erl_types':'t_sup'
								      (_cor979, _cor977)
							      in  let <_7607> =
								      %% Line 1421
								      call 'erl_types':'t_is_any'
									  (X)
								  in  %% Line 1421
								      case _7607 of
									%% Line 1422
									<'true'> when 'true' ->
									    Ret
									%% Line 1423
									<'false'> when 'true' ->
									    let <_4382> =
										%% Line 1424
										call 'erl_types':'t_tuple_subtypes'
										    (Tuple, _cor0)
									    in  %% Line 1424
										case _4382 of
										  %% Line 1425
										  <'unknown'> when 'true' ->
										      Ret
										  %% Line 1426
										  <List> when 'true' ->
										      let <_5718> =
											  %% Line 1427
											  apply 'key_comparisons_fail'/4
											      (X, Y, _4382, _cor0)
										      in  %% Line 1427
											  case _5718 of
											    %% Line 1428
											    <'true'> when 'true' ->
												call 'erl_types':'t_atom'
												    ('false')
											    %% Line 1429
											    <'false'> when 'true' ->
												Ret
											    ( <_cor981> when 'true' ->
												  primop 'match_fail'
												      ({'case_clause',_5718})
											      -| ['compiler_generated'] )
											  end
										end
									( <_cor983> when 'true' ->
									      primop 'match_fail'
										  ({'case_clause',_7607})
									  -| ['compiler_generated'] )
								      end
					      ( <_cor984> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_5068})
						-| ['compiler_generated'] )
					    end
			( <_cor986> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor985})
				-| [{'function_name',{'-type/5-fun-151-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1412
		  apply 'strict'/6
		      ('lists', 'keysearch', 3, _cor1, _cor987, _cor0)
	  %% Line 1435
	  <'lists','keysort',2,Xs,Opaques> when 'true' ->
	      let <_cor990> =
		  %% Line 1436
		  fun (_cor988) ->
		      case _cor988 of
			<[_cor1331|[L|[]]]> when 'true' ->
			    L
			( <_cor989> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor988})
				-| [{'function_name',{'-type/5-fun-152-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1436
		  apply 'strict'/6
		      ('lists', 'keysort', 2, _cor1, _cor990, _cor0)
	  %% Line 1437
	  <'lists','last',1,Xs,Opaques> when 'true' ->
	      let <_cor993> =
		  %% Line 1439
		  fun (_cor991) ->
		      case _cor991 of
			<[L|[]]> when 'true' ->
			    call 'erl_types':'t_list_elements'
				(L, _cor0)
			( <_cor992> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor991})
				-| [{'function_name',{'-type/5-fun-153-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1438
		  apply 'strict'/6
		      ('lists', 'last', 1, _cor1, _cor993, _cor0)
	  %% Line 1440
	  <'lists','map',2,Xs,Opaques> when 'true' ->
	      let <_cor1003> =
		  %% Line 1442
		  fun (_cor1001) ->
		      case _cor1001 of
			<[F|[L|[]]]> when 'true' ->
			    let <_1267> =
				%% Line 1443
				call 'erl_types':'t_is_nil'
				    (L, _cor0)
			    in  %% Line 1443
				case _1267 of
				  %% Line 1444
				  <'true'> when 'true' ->
				      L
				  %% Line 1445
				  <'false'> when 'true' ->
				      let <El> =
					  %% Line 1446
					  call 'erl_types':'t_list_elements'
					      (L, _cor0)
				      in  let <_4863> =
					      %% Line 1447
					      call 'erl_types':'t_is_cons'
						  (L, _cor0)
					  in  %% Line 1447
					      case _4863 of
						%% Line 1448
						<'true'> when 'true' ->
						    let <_2929> =
							%% Line 1449
							apply 'check_fun_application'/3
							    (F, [El|[]], _cor0)
						    in  %% Line 1449
							case _2929 of
							  %% Line 1450
							  <'ok'> when 'true' ->
							      let <_cor995> =
								  call 'erl_types':'t_fun_range'
								      (F, _cor0)
							      in  call 'erl_types':'t_nonempty_list'
								      (_cor995)
							  %% Line 1451
							  <'error'> when 'true' ->
							      call 'erl_types':'t_none'
								  ()
							  ( <_cor996> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_2929})
							    -| ['compiler_generated'] )
							end
						%% Line 1453
						<'false'> when 'true' ->
						    let <_3657> =
							%% Line 1454
							apply 'check_fun_application'/3
							    (F, [El|[]], _cor0)
						    in  %% Line 1454
							case _3657 of
							  %% Line 1455
							  <'ok'> when 'true' ->
							      let <_cor997> =
								  call 'erl_types':'t_fun_range'
								      (F, _cor0)
							      in  call 'erl_types':'t_list'
								      (_cor997)
							  %% Line 1456
							  <'error'> when 'true' ->
							      call 'erl_types':'t_nil'
								  ()
							  ( <_cor998> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_3657})
							    -| ['compiler_generated'] )
							end
						( <_cor999> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_4863})
						  -| ['compiler_generated'] )
					      end
				  ( <_cor1000> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_1267})
				    -| ['compiler_generated'] )
				end
			( <_cor1002> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1001})
				-| [{'function_name',{'-type/5-fun-154-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1441
		  apply 'strict'/6
		      ('lists', 'map', 2, _cor1, _cor1003, _cor0)
	  %% Line 1461
	  <'lists','mapfoldl',3,Xs,Opaques> when 'true' ->
	      let <_cor1038> =
		  %% Line 1463
		  fun (_cor1036) ->
		      case _cor1036 of
			<[F|[Acc|[List|[]]]]> when 'true' ->
			    let <_4109> =
				%% Line 1464
				call 'erl_types':'t_is_nil'
				    (List, _cor0)
			    in  %% Line 1464
				case _4109 of
				  %% Line 1465
				  <'true'> when 'true' ->
				      call 'erl_types':'t_tuple'
					  ([List|[Acc|[]]])
				  %% Line 1466
				  <'false'> when 'true' ->
				      let <El> =
					  %% Line 1467
					  call 'erl_types':'t_list_elements'
					      (List, _cor0)
				      in  let <R> =
					      %% Line 1468
					      call 'erl_types':'t_fun_range'
						  (F, _cor0)
					  in  let <_7212> =
						  %% Line 1469
						  call 'erl_types':'t_is_cons'
						      (List, _cor0)
					      in  %% Line 1469
						  case _7212 of
						    %% Line 1470
						    <'true'> when 'true' ->
							let <_1184> =
							    %% Line 1471
							    apply 'check_fun_application'/3
								(F, [El|[Acc|[]]], _cor0)
							in  %% Line 1471
							    case _1184 of
							      %% Line 1472
							      <'ok'> when 'true' ->
								  let <Fun> =
								      %% Line 1473
								      fun (_cor1008) ->
									  let <_6808> =
									      %% Line 1474
									      call 'erl_types':'t_tuple_args'
										  (_cor1008, _cor0)
									  in  %% Line 1474
									      case _6808 of
										<[T1|[T2|[]]]> when 'true' ->
										    let <_cor1007> =
											%% Line 1475
											call 'erl_types':'t_nonempty_list'
											    (T1)
										    in  %% Line 1475
											call 'erl_types':'t_tuple'
											    ([_cor1007|[T2|[]]])
										( <_cor1006> when 'true' ->
										      primop 'match_fail'
											  ({'badmatch',_6808})
										  -| ['compiler_generated'] )
									      end
								  in  let <_cor1017> =
									  %% Line 1477
									  ( letrec
										'lc$^9'/1 =
										    fun (_cor1014) ->
											case _cor1014 of
											  <[ST|_cor1012]> when 'true' ->
											      let <_cor1015> =
												  apply Fun
												      (ST)
											      in  let <_cor1016> =
												      apply 'lc$^9'/1
													  (_cor1012)
												  in  ( [_cor1015|_cor1016]
													-| ['compiler_generated'] )
											  <[]> when 'true' ->
											      []
											  ( <_207> when 'true' ->
												( primop 'match_fail'
												      ({'function_clause',_cor1014})
												  -| [{'function_name',{'lc$^9',1}}] )
											    -| ['compiler_generated'] )
											end
									    in  let <_cor1013> =
										    call 'erl_types':'t_tuple_subtypes'
											(R, _cor0)
										in  apply 'lc$^9'/1
											(_cor1013)
									    -| ['list_comprehension'] )
								      in  %% Line 1477
									  call 'erl_types':'t_sup'
									      (_cor1017)
							      %% Line 1478
							      <'error'> when 'true' ->
								  %% Line 1479
								  call 'erl_types':'t_none'
								      ()
							      ( <_cor1018> when 'true' ->
								    primop 'match_fail'
									({'case_clause',_1184})
								-| ['compiler_generated'] )
							    end
						    %% Line 1481
						    <'false'> when 'true' ->
							let <_7282> =
							    %% Line 1482
							    apply 'check_fun_application'/3
								(F, [El|[Acc|[]]], _cor0)
							in  %% Line 1482
							    case _7282 of
							      %% Line 1483
							      <'ok'> when 'true' ->
								  let <Fun> =
								      %% Line 1484
								      fun (_cor1022) ->
									  let <_5921> =
									      %% Line 1485
									      call 'erl_types':'t_tuple_args'
										  (_cor1022, _cor0)
									  in  %% Line 1485
									      case _5921 of
										<[T1|[T2|[]]]> when 'true' ->
										    let <_cor1020> =
											%% Line 1486
											call 'erl_types':'t_list'
											    (T1)
										    in  let <_cor1021> =
											    %% Line 1486
											    call 'erl_types':'t_sup'
												(Acc, T2)
											in  %% Line 1486
											    call 'erl_types':'t_tuple'
												([_cor1020|[_cor1021|[]]])
										( <_cor1019> when 'true' ->
										      primop 'match_fail'
											  ({'badmatch',_5921})
										  -| ['compiler_generated'] )
									      end
								  in  let <_cor1031> =
									  %% Line 1488
									  ( letrec
										'lc$^10'/1 =
										    fun (_cor1028) ->
											case _cor1028 of
											  <[ST|_cor1026]> when 'true' ->
											      let <_cor1029> =
												  apply Fun
												      (ST)
											      in  let <_cor1030> =
												      apply 'lc$^10'/1
													  (_cor1026)
												  in  ( [_cor1029|_cor1030]
													-| ['compiler_generated'] )
											  <[]> when 'true' ->
											      []
											  ( <_6851> when 'true' ->
												( primop 'match_fail'
												      ({'function_clause',_cor1028})
												  -| [{'function_name',{'lc$^10',1}}] )
											    -| ['compiler_generated'] )
											end
									    in  let <_cor1027> =
										    call 'erl_types':'t_tuple_subtypes'
											(R, _cor0)
										in  apply 'lc$^10'/1
											(_cor1027)
									    -| ['list_comprehension'] )
								      in  %% Line 1488
									  call 'erl_types':'t_sup'
									      (_cor1031)
							      %% Line 1489
							      <'error'> when 'true' ->
								  let <_cor1032> =
								      %% Line 1490
								      call 'erl_types':'t_nil'
									  ()
								  in  %% Line 1490
								      call 'erl_types':'t_tuple'
									  ([_cor1032|[Acc|[]]])
							      ( <_cor1033> when 'true' ->
								    primop 'match_fail'
									({'case_clause',_7282})
								-| ['compiler_generated'] )
							    end
						    ( <_cor1034> when 'true' ->
							  primop 'match_fail'
							      ({'case_clause',_7212})
						      -| ['compiler_generated'] )
						  end
				  ( <_cor1035> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_4109})
				    -| ['compiler_generated'] )
				end
			( <_cor1037> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1036})
				-| [{'function_name',{'-type/5-fun-157-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1462
		  apply 'strict'/6
		      ('lists', 'mapfoldl', 3, _cor1, _cor1038, _cor0)
	  %% Line 1495
	  <'lists','mapfoldr',3,Xs,_X_Opaques> when 'true' ->
	      apply 'type'/5
		  ('lists', 'mapfoldl', 3, _cor1, 'universe')
	  %% Line 1496
	  <'lists','max',1,Xs,Opaques> when 'true' ->
	      let <_cor1041> =
		  %% Line 1498
		  fun (_cor1039) ->
		      case _cor1039 of
			<[L|[]]> when 'true' ->
			    call 'erl_types':'t_list_elements'
				(L, _cor0)
			( <_cor1040> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1039})
				-| [{'function_name',{'-type/5-fun-158-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1497
		  apply 'strict'/6
		      ('lists', 'max', 1, _cor1, _cor1041, _cor0)
	  %% Line 1499
	  <'lists','member',2,Xs,Opaques> when 'true' ->
	      let <_cor1047> =
		  %% Line 1501
		  fun (_cor1045) ->
		      case _cor1045 of
			<[X|[Y|[]]]> when 'true' ->
			    let <Y1> =
				%% Line 1502
				call 'erl_types':'t_list_elements'
				    (Y, _cor0)
			    in  let <_cor1043> =
				    %% Line 1503
				    call 'erl_types':'t_inf'
					(Y1, X, _cor0)
				in  let <_7334> =
					%% Line 1503
					call 'erl_types':'t_is_none'
					    (_cor1043)
				    in  %% Line 1503
					case _7334 of
					  %% Line 1504
					  <'true'> when 'true' ->
					      call 'erl_types':'t_atom'
						  ('false')
					  %% Line 1505
					  <'false'> when 'true' ->
					      call 'erl_types':'t_boolean'
						  ()
					  ( <_cor1044> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_7334})
					    -| ['compiler_generated'] )
					end
			( <_cor1046> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1045})
				-| [{'function_name',{'-type/5-fun-159-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1500
		  apply 'strict'/6
		      ('lists', 'member', 2, _cor1, _cor1047, _cor0)
	  %% Line 1509
	  <'lists','merge',2,Xs,Opaques> when 'true' ->
	      let <_cor1052> =
		  %% Line 1511
		  fun (_cor1050) ->
		      case _cor1050 of
			<[L1|[L2|[]]]> when 'true' ->
			    let <_4995> =
				%% Line 1512
				call 'erl_types':'t_is_none'
				    (L1)
			    in  %% Line 1512
				case _4995 of
				  %% Line 1513
				  <'true'> when 'true' ->
				      L2
				  %% Line 1514
				  <'false'> when 'true' ->
				      let <_5031> =
					  %% Line 1515
					  call 'erl_types':'t_is_none'
					      (L2)
				      in  %% Line 1515
					  case _5031 of
					    %% Line 1516
					    <'true'> when 'true' ->
						L1
					    %% Line 1517
					    <'false'> when 'true' ->
						call 'erl_types':'t_sup'
						    (L1, L2)
					    ( <_cor1048> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_5031})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor1049> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_4995})
				    -| ['compiler_generated'] )
				end
			( <_cor1051> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1050})
				-| [{'function_name',{'-type/5-fun-160-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1510
		  apply 'strict'/6
		      ('lists', 'merge', 2, _cor1, _cor1052, _cor0)
	  %% Line 1521
	  <'lists','min',1,Xs,Opaques> when 'true' ->
	      let <_cor1055> =
		  %% Line 1523
		  fun (_cor1053) ->
		      case _cor1053 of
			<[L|[]]> when 'true' ->
			    call 'erl_types':'t_list_elements'
				(L, _cor0)
			( <_cor1054> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1053})
				-| [{'function_name',{'-type/5-fun-161-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1522
		  apply 'strict'/6
		      ('lists', 'min', 1, _cor1, _cor1055, _cor0)
	  %% Line 1524
	  <'lists','nth',2,Xs,Opaques> when 'true' ->
	      let <_cor1058> =
		  %% Line 1526
		  fun (_cor1056) ->
		      case _cor1056 of
			<[_cor1332|[Y|[]]]> when 'true' ->
			    call 'erl_types':'t_list_elements'
				(Y, _cor0)
			( <_cor1057> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1056})
				-| [{'function_name',{'-type/5-fun-162-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1525
		  apply 'strict'/6
		      ('lists', 'nth', 2, _cor1, _cor1058, _cor0)
	  %% Line 1527
	  <'lists','nthtail',2,Xs,Opaques> when 'true' ->
	      let <_cor1062> =
		  %% Line 1529
		  fun (_cor1060) ->
		      case _cor1060 of
			<[_cor1333|[Y|[]]]> when 'true' ->
			    let <_cor1059> =
				call 'erl_types':'t_list'
				    ()
			    in  call 'erl_types':'t_sup'
				    (Y, _cor1059)
			( <_cor1061> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1060})
				-| [{'function_name',{'-type/5-fun-163-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1528
		  apply 'strict'/6
		      ('lists', 'nthtail', 2, _cor1, _cor1062, _cor0)
	  %% Line 1530
	  <'lists','partition',2,Xs,Opaques> when 'true' ->
	      let <_cor1076> =
		  %% Line 1532
		  fun (_cor1074) ->
		      case _cor1074 of
			<[F|[L|[]]]> when 'true' ->
			    let <_6681> =
				%% Line 1533
				call 'erl_types':'t_is_nil'
				    (L, _cor0)
			    in  %% Line 1533
				case _6681 of
				  %% Line 1534
				  <'true'> when 'true' ->
				      call 'erl_types':'t_tuple'
					  ([L|[L|[]]])
				  %% Line 1535
				  <'false'> when 'true' ->
				      let <El> =
					  %% Line 1536
					  call 'erl_types':'t_list_elements'
					      (L, _cor0)
				      in  let <_8379> =
					      %% Line 1537
					      apply 'check_fun_application'/3
						  (F, [El|[]], _cor0)
					  in  %% Line 1537
					      case _8379 of
						%% Line 1538
						<'error'> when 'true' ->
						    let <_1695> =
							%% Line 1539
							call 'erl_types':'t_is_cons'
							    (L, _cor0)
						    in  %% Line 1539
							case _1695 of
							  %% Line 1540
							  <'true'> when 'true' ->
							      call 'erl_types':'t_none'
								  ()
							  %% Line 1541
							  <'false'> when 'true' ->
							      let <_cor1064> =
								  call 'erl_types':'t_nil'
								      ()
							      in  let <_cor1065> =
								      call 'erl_types':'t_nil'
									  ()
								  in  call 'erl_types':'t_tuple'
									  ([_cor1064|[_cor1065|[]]])
							  ( <_cor1066> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_1695})
							    -| ['compiler_generated'] )
							end
						%% Line 1543
						<'ok'> when 'true' ->
						    let <_cor1067> =
							%% Line 1544
							call 'erl_types':'t_fun_range'
							    (F, _cor0)
						    in  let <_223> =
							    %% Line 1544
							    call 'erl_types':'t_atom_vals'
								(_cor1067, _cor0)
							in  %% Line 1544
							    case _223 of
							      %% Line 1545
							      <['true']> when 'true' ->
								  let <_cor1068> =
								      call 'erl_types':'t_nil'
									  ()
								  in  call 'erl_types':'t_tuple'
									  ([L|[_cor1068|[]]])
							      %% Line 1546
							      <['false']> when 'true' ->
								  let <_cor1069> =
								      call 'erl_types':'t_nil'
									  ()
								  in  call 'erl_types':'t_tuple'
									  ([_cor1069|[L|[]]])
							      %% Line 1547
							      <[_cor1334|[_cor1335|[]]]> when 'true' ->
								  let <L2> =
								      %% Line 1548
								      call 'erl_types':'t_list'
									  (El)
								  in  %% Line 1549
								      call 'erl_types':'t_tuple'
									  ([L2|[L2|[]]])
							      ( <_cor1071> when 'true' ->
								    primop 'match_fail'
									({'case_clause',_223})
								-| ['compiler_generated'] )
							    end
						( <_cor1072> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_8379})
						  -| ['compiler_generated'] )
					      end
				  ( <_cor1073> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_6681})
				    -| ['compiler_generated'] )
				end
			( <_cor1075> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1074})
				-| [{'function_name',{'-type/5-fun-164-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1531
		  apply 'strict'/6
		      ('lists', 'partition', 2, _cor1, _cor1076, _cor0)
	  %% Line 1554
	  <'lists','reverse',1,Xs,Opaques> when 'true' ->
	      let <_cor1079> =
		  %% Line 1555
		  fun (_cor1077) ->
		      case _cor1077 of
			<[X|[]]> when 'true' ->
			    X
			( <_cor1078> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1077})
				-| [{'function_name',{'-type/5-fun-165-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1555
		  apply 'strict'/6
		      ('lists', 'reverse', 1, _cor1, _cor1079, _cor0)
	  %% Line 1556
	  <'lists','reverse',2,Xs,_X_Opaques> when 'true' ->
	      apply 'type'/5
		  (%% Line 1557
		   'erlang', %% Line 1557
			     '++', %% Line 1557
				   2, _cor1, 'universe')
	  %% Line 1558
	  <'lists','sort',1,Xs,Opaques> when 'true' ->
	      let <_cor1082> =
		  %% Line 1559
		  fun (_cor1080) ->
		      case _cor1080 of
			<[X|[]]> when 'true' ->
			    X
			( <_cor1081> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1080})
				-| [{'function_name',{'-type/5-fun-166-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1559
		  apply 'strict'/6
		      ('lists', 'sort', 1, _cor1, _cor1082, _cor0)
	  %% Line 1560
	  <'lists','sort',2,Xs,Opaques> when 'true' ->
	      let <_cor1088> =
		  %% Line 1562
		  fun (_cor1086) ->
		      case _cor1086 of
			<[F|[L|[]]]> when 'true' ->
			    let <R> =
				%% Line 1563
				call 'erl_types':'t_fun_range'
				    (F, _cor0)
			    in  let <_7996> =
				    %% Line 1564
				    call 'erl_types':'t_is_boolean'
					(R, _cor0)
				in  %% Line 1564
				    case _7996 of
				      %% Line 1565
				      <'true'> when 'true' ->
					  L
				      %% Line 1566
				      <'false'> when 'true' ->
					  let <_3971> =
					      %% Line 1567
					      call 'erl_types':'t_is_nil'
						  (L, _cor0)
					  in  %% Line 1567
					      case _3971 of
						%% Line 1568
						<'true'> when 'true' ->
						    call 'erl_types':'t_nil'
							()
						%% Line 1569
						<'false'> when 'true' ->
						    call 'erl_types':'t_none'
							()
						( <_cor1084> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_3971})
						  -| ['compiler_generated'] )
					      end
				      ( <_cor1085> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_7996})
					-| ['compiler_generated'] )
				    end
			( <_cor1087> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1086})
				-| [{'function_name',{'-type/5-fun-167-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1561
		  apply 'strict'/6
		      ('lists', 'sort', 2, _cor1, _cor1088, _cor0)
	  %% Line 1573
	  <'lists','split',2,Xs,Opaques> when 'true' ->
	      let <_cor1095> =
		  %% Line 1575
		  fun (_cor1093) ->
		      case _cor1093 of
			<[_cor1336|[L|[]]]> when 'true' ->
			    let <_6662> =
				%% Line 1576
				call 'erl_types':'t_is_nil'
				    (L, _cor0)
			    in  %% Line 1576
				case _6662 of
				  %% Line 1577
				  <'true'> when 'true' ->
				      call 'erl_types':'t_tuple'
					  ([L|[L|[]]])
				  %% Line 1578
				  <'false'> when 'true' ->
				      let <T> =
					  %% Line 1579
					  call 'erl_types':'t_list_elements'
					      (L, _cor0)
				      in  let <_cor1090> =
					      %% Line 1580
					      call 'erl_types':'t_list'
						  (T)
					  in  let <_cor1091> =
						  %% Line 1580
						  call 'erl_types':'t_list'
						      (T)
					      in  %% Line 1580
						  call 'erl_types':'t_tuple'
						      ([_cor1090|[_cor1091|[]]])
				  ( <_cor1092> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_6662})
				    -| ['compiler_generated'] )
				end
			( <_cor1094> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1093})
				-| [{'function_name',{'-type/5-fun-168-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1574
		  apply 'strict'/6
		      ('lists', 'split', 2, _cor1, _cor1095, _cor0)
	  %% Line 1583
	  <'lists','splitwith',2,Xs,_X_Opaques> when 'true' ->
	      let <T1> =
		  apply 'type'/5
		      (%% Line 1584
		       'lists', %% Line 1584
				'takewhile', %% Line 1584
					     2, _cor1, 'universe')
	      in  let <T2> =
		      apply 'type'/5
			  (%% Line 1585
			   'lists', %% Line 1585
				    'dropwhile', %% Line 1585
						 2, _cor1, 'universe')
		  in  let <_6030> =
			  %% Line 1586
			  call 'erl_types':'t_is_none'
			      (T1)
		      in  let <_cor1100> =
			      %% Line 1586
			      ( case _6030 of
				  ( <( 'true'
				       -| ['compiler_generated'] )> when 'true' ->
					'true'
				    -| ['compiler_generated'] )
				  ( <( 'false'
				       -| ['compiler_generated'] )> when 'true' ->
					call 'erl_types':'t_is_none'
					    (T2)
				    -| ['compiler_generated'] )
				  ( <_cor1098> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {( 'badarg'
						    -| ['compiler_generated'] ),_6030}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  in  %% Line 1586
			      case _cor1100 of
				%% Line 1587
				<'true'> when 'true' ->
				    call 'erl_types':'t_none'
					()
				%% Line 1588
				<'false'> when 'true' ->
				    call 'erl_types':'t_tuple'
					([T1|[T2|[]]])
				( <_cor1101> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor1100})
				  -| ['compiler_generated'] )
			      end
	  %% Line 1590
	  <'lists','subtract',2,Xs,_X_Opaques> when 'true' ->
	      apply 'type'/5
		  ('erlang', '--', 2, _cor1, 'universe')
	  %% Line 1591
	  <'lists','takewhile',2,Xs,Opaques> when 'true' ->
	      let <_cor1109> =
		  %% Line 1593
		  fun (_cor1107) ->
		      case _cor1107 of
			<[F|[L|[]]]> when 'true' ->
			    let <_cor1102> =
				%% Line 1594
				call 'erl_types':'t_list'
				    ()
			    in  let <_cor1103> =
				    %% Line 1594
				    call 'erl_types':'t_inf'
					(_cor1102, L, _cor0)
				in  let <_6359> =
					%% Line 1594
					call 'erl_types':'t_is_none'
					    (_cor1103)
				    in  %% Line 1594
					case _6359 of
					  %% Line 1595
					  <'false'> when 'true' ->
					      apply 'type'/5
						  ('lists', 'filter', 2, _cor1, 'universe')
					  %% Line 1596
					  <'true'> when 'true' ->
					      let <El> =
						  %% Line 1598
						  call 'erl_types':'t_list_elements'
						      (L, _cor0)
					      in  let <_cor1105> =
						      %% Line 1599
						      call 'erl_types':'t_list'
							  (El)
						  in  let <_4138> =
							  %% Line 1599
							  [F|[_cor1105|[]]]
						      in  apply 'type'/5
							      (%% Line 1599
							       'lists', %% Line 1599
									'filter', %% Line 1599
										  2, _4138, 'universe')
					  ( <_cor1106> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_6359})
					    -| ['compiler_generated'] )
					end
			( <_cor1108> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1107})
				-| [{'function_name',{'-type/5-fun-169-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1592
		  apply 'strict'/6
		      ('lists', 'takewhile', 2, _cor1, _cor1109, _cor0)
	  %% Line 1602
	  <'lists','usort',1,Xs,_X_Opaques> when 'true' ->
	      apply 'type'/5
		  ('lists', 'sort', 1, _cor1, 'universe')
	  %% Line 1603
	  <'lists','usort',2,Xs,_X_Opaques> when 'true' ->
	      apply 'type'/5
		  ('lists', 'sort', 2, _cor1, 'universe')
	  %% Line 1604
	  <'lists','unzip',1,Xs,Opaques> when 'true' ->
	      let <_cor1127> =
		  %% Line 1606
		  fun (_cor1125) ->
		      case _cor1125 of
			<[Ps|[]]> when 'true' ->
			    let <_6331> =
				%% Line 1607
				call 'erl_types':'t_is_nil'
				    (Ps, _cor0)
			    in  %% Line 1607
				case _6331 of
				  %% Line 1608
				  <'true'> when 'true' ->
				      let <_cor1110> =
					  %% Line 1609
					  call 'erl_types':'t_nil'
					      ()
				      in  let <_cor1111> =
					      %% Line 1609
					      call 'erl_types':'t_nil'
						  ()
					  in  %% Line 1609
					      call 'erl_types':'t_tuple'
						  ([_cor1110|[_cor1111|[]]])
				  %% Line 1610
				  <'false'> when 'true' ->
				      let <_cor1112> =
					  %% Line 1611
					  call 'erl_types':'t_list_elements'
					      (Ps, _cor0)
				      in  let <TupleTypes> =
					      %% Line 1611
					      call 'erl_types':'t_tuple_subtypes'
						  (_cor1112, _cor0)
					  in  let <_cor1123> =
						  %% Line 1613
						  fun (_cor1120,_cor1119) ->
						      let <_637> =
							  %% Line 1614
							  call 'erl_types':'t_tuple_args'
							      (_cor1120, _cor0)
						      in  %% Line 1614
							  case _637 of
							    <[A|[B|[]]]> when 'true' ->
								let <_cor1116> =
								    %% Line 1615
								    call 'erl_types':'t_list'
									(A)
								in  let <_cor1117> =
									%% Line 1615
									call 'erl_types':'t_list'
									    (B)
								    in  let <_cor1118> =
									    %% Line 1615
									    call 'erl_types':'t_tuple'
										([_cor1116|[_cor1117|[]]])
									in  %% Line 1615
									    call 'erl_types':'t_sup'
										(_cor1118, _cor1119)
							    ( <_cor1115> when 'true' ->
								  primop 'match_fail'
								      ({'badmatch',_637})
							      -| ['compiler_generated'] )
							  end
					      in  let <_cor1114> =
						      %% Line 1616
						      call 'erl_types':'t_none'
							  ()
						  in  %% Line 1613
						      call 'lists':'foldl'
							  (_cor1123, _cor1114, TupleTypes)
				  ( <_cor1124> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_6331})
				    -| ['compiler_generated'] )
				end
			( <_cor1126> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1125})
				-| [{'function_name',{'-type/5-fun-171-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1605
		  apply 'strict'/6
		      ('lists', 'unzip', 1, _cor1, _cor1127, _cor0)
	  %% Line 1619
	  <'lists','unzip3',1,Xs,Opaques> when 'true' ->
	      let <_cor1147> =
		  %% Line 1621
		  fun (_cor1145) ->
		      case _cor1145 of
			<[Ts|[]]> when 'true' ->
			    let <_3433> =
				%% Line 1622
				call 'erl_types':'t_is_nil'
				    (Ts, _cor0)
			    in  %% Line 1622
				case _3433 of
				  %% Line 1623
				  <'true'> when 'true' ->
				      let <_cor1128> =
					  %% Line 1624
					  call 'erl_types':'t_nil'
					      ()
				      in  let <_cor1129> =
					      %% Line 1624
					      call 'erl_types':'t_nil'
						  ()
					  in  let <_cor1130> =
						  %% Line 1624
						  call 'erl_types':'t_nil'
						      ()
					      in  %% Line 1624
						  call 'erl_types':'t_tuple'
						      ([_cor1128|[_cor1129|[_cor1130|[]]]])
				  %% Line 1625
				  <'false'> when 'true' ->
				      let <_cor1131> =
					  %% Line 1626
					  call 'erl_types':'t_list_elements'
					      (Ts, _cor0)
				      in  let <TupleTypes> =
					      %% Line 1626
					      call 'erl_types':'t_tuple_subtypes'
						  (_cor1131, _cor0)
					  in  let <_cor1143> =
						  %% Line 1628
						  fun (_cor1140,_cor1139) ->
						      let <_2775> =
							  %% Line 1629
							  call 'erl_types':'t_tuple_args'
							      (_cor1140, _cor0)
						      in  %% Line 1629
							  case _2775 of
							    <[A|[B|[C|[]]]]> when 'true' ->
								let <_cor1135> =
								    %% Line 1630
								    call 'erl_types':'t_list'
									(A)
								in  let <_cor1136> =
									%% Line 1631
									call 'erl_types':'t_list'
									    (B)
								    in  let <_cor1137> =
									    %% Line 1632
									    call 'erl_types':'t_list'
										(C)
									in  let <_cor1138> =
										%% Line 1630
										call 'erl_types':'t_tuple'
										    ([_cor1135|%% Line 1631
											       [_cor1136|%% Line 1632
													 [_cor1137|[]]]])
									    in  %% Line 1630
										call 'erl_types':'t_sup'
										    (_cor1138, _cor1139)
							    ( <_cor1134> when 'true' ->
								  primop 'match_fail'
								      ({'badmatch',_2775})
							      -| ['compiler_generated'] )
							  end
					      in  let <_cor1133> =
						      %% Line 1634
						      call 'erl_types':'t_none'
							  ()
						  in  %% Line 1628
						      call 'lists':'foldl'
							  (_cor1143, _cor1133, TupleTypes)
				  ( <_cor1144> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_3433})
				    -| ['compiler_generated'] )
				end
			( <_cor1146> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1145})
				-| [{'function_name',{'-type/5-fun-173-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1620
		  apply 'strict'/6
		      ('lists', 'unzip3', 1, _cor1, _cor1147, _cor0)
	  %% Line 1637
	  <'lists','zip',2,Xs,Opaques> when 'true' ->
	      let <_cor1157> =
		  %% Line 1639
		  fun (_cor1155) ->
		      case _cor1155 of
			<[As|[Bs|[]]]> when 'true' ->
			    let <_2014> =
				%% Line 1640
				call 'erl_types':'t_is_nil'
				    (As, _cor0)
			    in  let <_cor1150> =
				    %% Line 1640
				    ( case _2014 of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      'true'
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      call 'erl_types':'t_is_nil'
						  (Bs, _cor0)
					  -| ['compiler_generated'] )
					( <_cor1148> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {( 'badarg'
							  -| ['compiler_generated'] ),_2014}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				in  %% Line 1640
				    case _cor1150 of
				      %% Line 1641
				      <'true'> when 'true' ->
					  call 'erl_types':'t_nil'
					      ()
				      %% Line 1642
				      <'false'> when 'true' ->
					  let <A> =
					      %% Line 1643
					      call 'erl_types':'t_list_elements'
						  (As, _cor0)
					  in  let <B> =
						  %% Line 1644
						  call 'erl_types':'t_list_elements'
						      (Bs, _cor0)
					      in  let <_cor1153> =
						      %% Line 1645
						      call 'erl_types':'t_tuple'
							  ([A|[B|[]]])
						  in  %% Line 1645
						      call 'erl_types':'t_list'
							  (_cor1153)
				      ( <_cor1154> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor1150})
					-| ['compiler_generated'] )
				    end
			( <_cor1156> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1155})
				-| [{'function_name',{'-type/5-fun-174-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1638
		  apply 'strict'/6
		      ('lists', 'zip', 2, _cor1, _cor1157, _cor0)
	  %% Line 1648
	  <'lists','zip3',3,Xs,Opaques> when 'true' ->
	      let <_cor1170> =
		  %% Line 1650
		  fun (_cor1168) ->
		      case _cor1168 of
			<[As|[Bs|[Cs|[]]]]> when 'true' ->
			    let <_2871> =
				%% Line 1652
				call 'erl_types':'t_is_nil'
				    (As, _cor0)
			    in  let <_cor1162> =
				    %% Line 1653
				    ( case _2871 of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      'true'
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      let <_5695> =
						  call 'erl_types':'t_is_nil'
						      (Bs, _cor0)
					      in  %% Line 1654
						  ( case _5695 of
						      ( <( 'true'
							   -| ['compiler_generated'] )> when 'true' ->
							    'true'
							-| ['compiler_generated'] )
						      ( <( 'false'
							   -| ['compiler_generated'] )> when 'true' ->
							    call 'erl_types':'t_is_nil'
								(Cs, _cor0)
							-| ['compiler_generated'] )
						      ( <_cor1159> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {( 'badarg'
									-| ['compiler_generated'] ),_5695}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
						    -| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <_cor1158> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {( 'badarg'
							  -| ['compiler_generated'] ),_2871}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				in  %% Line 1651
				    case _cor1162 of
				      %% Line 1656
				      <'true'> when 'true' ->
					  call 'erl_types':'t_nil'
					      ()
				      %% Line 1657
				      <'false'> when 'true' ->
					  let <A> =
					      %% Line 1658
					      call 'erl_types':'t_list_elements'
						  (As, _cor0)
					  in  let <B> =
						  %% Line 1659
						  call 'erl_types':'t_list_elements'
						      (Bs, _cor0)
					      in  let <C> =
						      %% Line 1660
						      call 'erl_types':'t_list_elements'
							  (Cs, _cor0)
						  in  let <_cor1166> =
							  %% Line 1661
							  call 'erl_types':'t_tuple'
							      ([A|[B|[C|[]]]])
						      in  %% Line 1661
							  call 'erl_types':'t_list'
							      (_cor1166)
				      ( <_cor1167> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor1162})
					-| ['compiler_generated'] )
				    end
			( <_cor1169> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1168})
				-| [{'function_name',{'-type/5-fun-175-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1649
		  apply 'strict'/6
		      ('lists', 'zip3', 3, _cor1, _cor1170, _cor0)
	  %% Line 1664
	  <'lists','zipwith',3,Xs,Opaques> when 'true' ->
	      let <_cor1176> =
		  %% Line 1666
		  fun (_cor1174) ->
		      case _cor1174 of
			<[F|[_X_As|[_X_Bs|[]]]]> when 'true' ->
			    let <_cor1172> =
				call 'erl_types':'t_fun_range'
				    (F, _cor0)
			    in  let <_cor1173> =
				    call 'erl_types':'t_list'
					(_cor1172)
				in  let <_cor1171> =
					%% Line 1667
					call 'erl_types':'t_nil'
					    ()
				    in  call 'erl_types':'t_sup'
					    (_cor1173, _cor1171)
			( <_cor1175> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1174})
				-| [{'function_name',{'-type/5-fun-176-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1665
		  apply 'strict'/6
		      ('lists', 'zipwith', 3, _cor1, _cor1176, _cor0)
	  %% Line 1668
	  <'lists','zipwith3',4,Xs,Opaques> when 'true' ->
	      let <_cor1182> =
		  %% Line 1670
		  fun (_cor1180) ->
		      case _cor1180 of
			<[F|[_X_As|[_X_Bs|[_X_Cs|[]]]]]> when 'true' ->
			    let <_cor1178> =
				call 'erl_types':'t_fun_range'
				    (F, _cor0)
			    in  let <_cor1179> =
				    call 'erl_types':'t_list'
					(_cor1178)
				in  let <_cor1177> =
					%% Line 1671
					call 'erl_types':'t_nil'
					    ()
				    in  call 'erl_types':'t_sup'
					    (_cor1179, _cor1177)
			( <_cor1181> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1180})
				-| [{'function_name',{'-type/5-fun-177-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1669
		  apply 'strict'/6
		      ('lists', 'zipwith3', 4, _cor1, _cor1182, _cor0)
	  %% Line 1674
	  <'string','chars',2,Xs,Opaques> when 'true' ->
	      let <_cor1185> =
		  %% Line 1675
		  fun (_cor1183) ->
		      call 'erl_types':'t_string'
			  ()
	      in  %% Line 1675
		  apply 'strict'/6
		      ('string', 'chars', 2, _cor1, _cor1185, _cor0)
	  %% Line 1676
	  <'string','chars',3,Xs,Opaques> when 'true' ->
	      let <_cor1193> =
		  %% Line 1678
		  fun (_cor1191) ->
		      case _cor1191 of
			<[Char|[N|[Tail|[]]]]> when 'true' ->
			    let <_8335> =
				%% Line 1679
				call 'erl_types':'t_is_nil'
				    (Tail)
			    in  %% Line 1679
				case _8335 of
				  %% Line 1680
				  <'true'> when 'true' ->
				      let <_2158> =
					  %% Line 1681
					  [Char|[N|[]]]
				      in  apply 'type'/5
					      (%% Line 1681
					       'string', %% Line 1681
							 'chars', %% Line 1681
								  2, _2158, 'universe')
				  %% Line 1682
				  <'false'> when 'true' ->
				      let <_4322> =
					  %% Line 1683
					  call 'erl_types':'t_is_string'
					      (Tail)
				      in  %% Line 1683
					  case _4322 of
					    %% Line 1684
					    <'true'> when 'true' ->
						%% Line 1685
						call 'erl_types':'t_string'
						    ()
					    %% Line 1686
					    <'false'> when 'true' ->
						let <_cor1187> =
						    %% Line 1687
						    call 'erl_types':'t_string'
							()
						in  let <_cor1188> =
							%% Line 1687
							call 'erl_types':'t_sup'
							    (_cor1187, Tail)
						    in  let <_cor1186> =
							    %% Line 1687
							    call 'erl_types':'t_cons'
								(Char, Tail)
							in  %% Line 1687
							    call 'erl_types':'t_sup'
								(_cor1188, _cor1186)
					    ( <_cor1189> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_4322})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor1190> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_8335})
				    -| ['compiler_generated'] )
				end
			( <_cor1192> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor1191})
				-| [{'function_name',{'-type/5-fun-179-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1677
		  apply 'strict'/6
		      ('string', 'chars', 3, _cor1, _cor1193, _cor0)
	  %% Line 1693
	  <M,F,A,Xs,_X_O>
	      when try
		    let <_cor1194> =
			call 'erlang':'is_atom'
			    (_cor4)
		    in  let <_cor1195> =
			    call 'erlang':'is_atom'
				(_cor3)
			in  let <_cor1196> =
				%% Line 1694
				call 'erlang':'is_integer'
				    (_cor2)
			    in  let <_cor1197> =
				    %% Line 1694
				    call 'erlang':'=<'
					(0, _cor2)
				in  let <_cor1198> =
					%% Line 1694
					call 'erlang':'=<'
					    (_cor2, 255)
				    in  let <_cor1199> =
					    call 'erlang':'and'
						(_cor1197, _cor1198)
					in  let <_cor1200> =
						call 'erlang':'and'
						    (_cor1196, _cor1199)
					    in  let <_cor1201> =
						    call 'erlang':'and'
							(_cor1195, _cor1200)
						in  call 'erlang':'and'
							(_cor1194, _cor1201)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor1202> =
		  %% Line 1695
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 1695
		  apply 'strict'/2
		      (_cor1, _cor1202)
	  ( <_cor1207,_cor1206,_cor1205,_cor1204,_cor1203> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'type',5}}] )
	    -| ['compiler_generated'] )
	end
'strict'/6 =
    %% Line 1702
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Ts> =
	    %% Line 1703
	    apply 'arg_types'/3
		(_cor5, _cor4, _cor3)
	in  let <Xs1> =
		%% Line 1705
		apply 'inf_lists'/3
		    (_cor2, Ts, _cor0)
	    in  let <_7782> =
		    %% Line 1742
		    call 'erlang':'make_fun'
			('erl_types', 't_is_none_or_unit', 1)
		in  let <_552> =
			%% Line 1742
			call 'lists':'any'
			    (_7782, Xs1)
		    in  %% Line 1707
			case _552 of
			  %% Line 1708
			  <'true'> when 'true' ->
			      call 'erl_types':'t_none'
				  ()
			  %% Line 1709
			  <'false'> when 'true' ->
			      apply _cor1
				  (Xs1)
			  ( <_cor8> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_552})
			    -| ['compiler_generated'] )
			end
'strict2'/2 =
    %% Line 1712
    fun (_cor1,_cor0) ->
	let <_6830> =
	    %% Line 1742
	    call 'erlang':'make_fun'
		('erl_types', 't_is_none_or_unit', 1)
	in  let <_3073> =
		%% Line 1742
		call 'lists':'any'
		    (_6830, _cor1)
	    in  %% Line 1713
		case _3073 of
		  %% Line 1714
		  <'true'> when 'true' ->
		      call 'erl_types':'t_none'
			  ()
		  %% Line 1715
		  <'false'> when 'true' ->
		      _cor0
		  ( <_cor2> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_3073})
		    -| ['compiler_generated'] )
		end
'strict'/2 =
    %% Line 1718
    fun (_cor1,_cor0) ->
	let <_253> =
	    %% Line 1742
	    call 'erlang':'make_fun'
		('erl_types', 't_is_none_or_unit', 1)
	in  let <_6333> =
		%% Line 1742
		call 'lists':'any'
		    (_253, _cor1)
	    in  %% Line 1719
		case _6333 of
		  %% Line 1720
		  <'true'> when 'true' ->
		      call 'erl_types':'t_none'
			  ()
		  %% Line 1721
		  <'false'> when 'true' ->
		      _cor0
		  ( <_cor2> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_6333})
		    -| ['compiler_generated'] )
		end
'inf_lists'/3 =
    %% Line 1724
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[X|Xs],[T|Ts],Opaques> when 'true' ->
	      let <_cor3> =
		  %% Line 1725
		  call 'erl_types':'t_inf'
		      (X, T, _cor0)
	      in  let <_cor4> =
		      %% Line 1725
		      apply 'inf_lists'/3
			  (Xs, Ts, _cor0)
		  in  %% Line 1725
		      [_cor3|_cor4]
	  %% Line 1726
	  <[],[],_X_Opaques> when 'true' ->
	      %% Line 1727
	      []
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'inf_lists',3}}] )
	    -| ['compiler_generated'] )
	end
'any_list'/2 =
    %% Line 1731
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <N,A>
	      when call 'erlang':'>'
		    (_cor1,
		     0) ->
	      let <_cor2> =
		  %% Line 1732
		  call 'erlang':'-'
		      (_cor1, 1)
	      in  let <_cor3> =
		      %% Line 1732
		      apply 'any_list'/2
			  (_cor2, _cor0)
		  in  %% Line 1732
		      [_cor0|_cor3]
	  %% Line 1733
	  <0,_cor6> when 'true' ->
	      %% Line 1734
	      []
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'any_list',2}}] )
	    -| ['compiler_generated'] )
	end
'list_replace'/3 =
    %% Line 1736
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <N,E,[X|Xs]>
	      when call 'erlang':'>'
		    (_cor2,
		     1) ->
	      let <_cor3> =
		  %% Line 1737
		  call 'erlang':'-'
		      (_cor2, 1)
	      in  let <_cor4> =
		      %% Line 1737
		      apply 'list_replace'/3
			  (_cor3, _cor1, Xs)
		  in  %% Line 1737
		      [X|_cor4]
	  %% Line 1738
	  <1,E,[_X_X|Xs]> when 'true' ->
	      %% Line 1739
	      [_cor1|Xs]
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'list_replace',3}}] )
	    -| ['compiler_generated'] )
	end
'check_guard'/4 =
    %% Line 1744
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[X|[]],Test,Type,Opaques> when 'true' ->
	      %% Line 1745
	      apply 'check_guard_single'/4
		  (X, _cor2, _cor1, _cor0)
	  ( <_cor7,_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'check_guard',4}}] )
	    -| ['compiler_generated'] )
	end
'check_guard_single'/4 =
    %% Line 1747
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_829> =
	    %% Line 1748
	    apply _cor2
		(_cor3)
	in  %% Line 1748
	    case _829 of
	      %% Line 1749
	      <'true'> when 'true' ->
		  call 'erl_types':'t_atom'
		      ('true')
	      %% Line 1750
	      <'false'> when 'true' ->
		  let <_cor4> =
		      %% Line 1751
		      call 'erl_types':'t_inf'
			  (_cor1, _cor3, _cor0)
		  in  let <_266> =
			  %% Line 1751
			  call 'erl_types':'t_is_none'
			      (_cor4)
		      in  %% Line 1751
			  case _266 of
			    %% Line 1752
			    <'true'> when 'true' ->
				let <_2218> =
				    %% Line 1753
				    call 'erl_types':'t_has_opaque_subtype'
					(_cor3, _cor0)
				in  %% Line 1753
				    case _2218 of
				      %% Line 1754
				      <'true'> when 'true' ->
					  call 'erl_types':'t_none'
					      ()
				      %% Line 1755
				      <'false'> when 'true' ->
					  call 'erl_types':'t_atom'
					      ('false')
				      ( <_cor5> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_2218})
					-| ['compiler_generated'] )
				    end
			    %% Line 1757
			    <'false'> when 'true' ->
				call 'erl_types':'t_boolean'
				    ()
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_266})
			      -| ['compiler_generated'] )
			  end
	      ( <_cor7> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_829})
		-| ['compiler_generated'] )
	    end
'check_record_tag'/3 =
    %% Line 1761
    fun (_cor2,_cor1,_cor0) ->
	let <_2051> =
	    %% Line 1762
	    call 'erl_types':'t_is_atom'
		(_cor2, _cor0)
	in  %% Line 1762
	    case _2051 of
	      %% Line 1763
	      <'false'> when 'true' ->
		  let <_cor3> =
		      %% Line 1764
		      call 'erl_types':'t_atom'
			  ()
		  in  let <TagAtom> =
			  %% Line 1764
			  call 'erl_types':'t_inf'
			      (_cor2, _cor3, _cor0)
		      in  let <_3490> =
			      %% Line 1765
			      call 'erl_types':'t_is_none'
				  (TagAtom)
			  in  %% Line 1765
			      case _3490 of
				%% Line 1766
				<'true'> when 'true' ->
				    let <_168> =
					%% Line 1767
					call 'erl_types':'t_has_opaque_subtype'
					    (_cor2, _cor0)
				    in  %% Line 1767
					case _168 of
					  %% Line 1768
					  <'true'> when 'true' ->
					      call 'erl_types':'t_none'
						  ()
					  %% Line 1769
					  <'false'> when 'true' ->
					      call 'erl_types':'t_atom'
						  ('false')
					  ( <_cor5> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_168})
					    -| ['compiler_generated'] )
					end
				%% Line 1771
				<'false'> when 'true' ->
				    call 'erl_types':'t_boolean'
					()
				( <_cor6> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_3490})
				  -| ['compiler_generated'] )
			      end
	      %% Line 1773
	      <'true'> when 'true' ->
		  %% Line 1774
		  case call 'erl_types':'t_atom_vals'
			   (_cor2, _cor0) of
		    %% Line 1775
		    <[RealTag|[]]> when 'true' ->
			%% Line 1776
			case call 'erl_types':'t_atom_vals'
				 (_cor1, _cor0) of
			  %% Line 1777
			  <[_cor13|[]]>
			      when call 'erlang':'=:='
				    (_cor13,
				     RealTag) ->
			      call 'erl_types':'t_atom'
				  ('true')
			  %% Line 1778
			  <_cor14> when 'true' ->
			      call 'erl_types':'t_boolean'
				  ()
			end
		    %% Line 1780
		    <_cor15> when 'true' ->
			call 'erl_types':'t_boolean'
			    ()
		  end
	      ( <_cor9> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_2051})
		-| ['compiler_generated'] )
	    end
'infinity_max'/1 =
    %% Line 1788
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      'empty'
	  %% Line 1789
	  <[H|T]> when 'true' ->
	      %% Line 1790
	      case <> of
		<>
		    when call 'erlang':'=:='
			  (H,
			   'empty') ->
		    %% Line 1791
		    apply 'infinity_max'/1
			(T)
		%% Line 1792
		<> when 'true' ->
		    let <_cor9> =
			%% Line 1794
			fun (_cor6,_cor5) ->
			    let <Geq> =
				%% Line 1795
				apply 'infinity_geq'/2
				    (_cor6, _cor5)
			    in  %% Line 1796
				case <> of
				  <>
				      when try
					    ( case Geq of
						( <'false'> when 'true' ->
						      'true'
						  -| ['compiler_generated'] )
						( <'true'> when 'true' ->
						      call 'erlang':'=:='
							  (_cor6, 'empty')
						  -| ['compiler_generated'] )
						( <_cor_variable> when 'true' ->
						      call 'erlang':'error'
							  ('badarg')
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					of <Try> ->
					    Try
					catch <_1418,R> ->
					    'false' ->
				      _cor5
				  %% Line 1798
				  <> when 'true' ->
				      _cor6
				end
		    in  %% Line 1793
			call 'lists':'foldl'
			    (_cor9, H, T)
	      end
	  ( <_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'infinity_max',1}}] )
	    -| ['compiler_generated'] )
	end
'infinity_min'/1 =
    %% Line 1806
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      'empty'
	  %% Line 1807
	  <[H|T]> when 'true' ->
	      %% Line 1808
	      case <> of
		<>
		    when call 'erlang':'=:='
			  (H,
			   'empty') ->
		    %% Line 1809
		    apply 'infinity_min'/1
			(T)
		%% Line 1810
		<> when 'true' ->
		    let <_cor9> =
			%% Line 1811
			fun (_cor6,_cor5) ->
			    let <Geq> =
				%% Line 1812
				apply 'infinity_geq'/2
				    (_cor6, _cor5)
			    in  %% Line 1813
				case <> of
				  <>
				      when try
					    let <_cor4> =
						( case Geq of
						    ( <( 'true'
							 -| ['compiler_generated'] )> when 'true' ->
							  'true'
						      -| ['compiler_generated'] )
						    ( <( 'false'
							 -| ['compiler_generated'] )> when 'true' ->
							  call 'erlang':'=:='
							      (_cor6, 'empty')
						      -| ['compiler_generated'] )
						    ( <_cor2> when 'true' ->
							  Geq
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    in  ( call ( 'erlang'
							 -| ['compiler_generated'] ):( '=:='
										       -| ['compiler_generated'] )
						      (_cor4, ( 'true'
								-| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					of <Try> ->
					    Try
					catch <_5941,R> ->
					    'false' ->
				      _cor5
				  %% Line 1815
				  <> when 'true' ->
				      _cor6
				end
		    in  %% Line 1811
			call 'lists':'foldl'
			    (_cor9, H, T)
	      end
	  ( <_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'infinity_min',1}}] )
	    -| ['compiler_generated'] )
	end
'infinity_band'/2 =
    %% Line 1839
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'neg_inf',Type2> when 'true' ->
	      _cor0
	  %% Line 1841
	  <'pos_inf',Type2> when 'true' ->
	      _cor0
	  %% Line 1843
	  <Type1,Type2>
	      when let <_cor2> =
		    call 'erlang':'is_integer'
			(_cor1)
		in  let <_cor3> =
			call 'erlang':'is_integer'
			    (_cor0)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      %% Line 1844
	      call 'erlang':'band'
		  (_cor1, _cor0)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'infinity_band',2}}] )
	    -| ['compiler_generated'] )
	end
'infinity_bor'/2 =
    %% Line 1846
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'neg_inf',_X_Type2> when 'true' ->
	      'neg_inf'
	  %% Line 1848
	  <'pos_inf',_X_Type2> when 'true' ->
	      'pos_inf'
	  %% Line 1850
	  <Type1,Type2>
	      when let <_cor2> =
		    call 'erlang':'is_integer'
			(_cor1)
		in  let <_cor3> =
			call 'erlang':'is_integer'
			    (_cor0)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      %% Line 1851
	      call 'erlang':'bor'
		  (_cor1, _cor0)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'infinity_bor',2}}] )
	    -| ['compiler_generated'] )
	end
'infinity_div'/2 =
    %% Line 1853
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'pos_inf','pos_inf'> when 'true' ->
	      [0|['pos_inf']]
	  %% Line 1854
	  <'pos_inf','neg_inf'> when 'true' ->
	      ['neg_inf'|[0]]
	  %% Line 1855
	  <'neg_inf','neg_inf'> when 'true' ->
	      [0|['pos_inf']]
	  %% Line 1856
	  <'neg_inf','pos_inf'> when 'true' ->
	      ['neg_inf'|[0]]
	  %% Line 1857
	  <'pos_inf',Number>
	      when let <_cor2> =
		    call 'erlang':'is_integer'
			(_cor0)
		in  let <_cor3> =
			call 'erlang':'>'
			    (_cor0, 0)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      'pos_inf'
	  %% Line 1858
	  <'pos_inf',Number>
	      when let <_cor4> =
		    call 'erlang':'is_integer'
			(_cor0)
		in  let <_cor5> =
			call 'erlang':'<'
			    (_cor0, 0)
		    in  call 'erlang':'and'
			    (_cor4, _cor5) ->
	      'neg_inf'
	  %% Line 1859
	  <'neg_inf',Number>
	      when let <_cor6> =
		    call 'erlang':'is_integer'
			(_cor0)
		in  let <_cor7> =
			call 'erlang':'>'
			    (_cor0, 0)
		    in  call 'erlang':'and'
			    (_cor6, _cor7) ->
	      'neg_inf'
	  %% Line 1860
	  <'neg_inf',Number>
	      when let <_cor8> =
		    call 'erlang':'is_integer'
			(_cor0)
		in  let <_cor9> =
			call 'erlang':'<'
			    (_cor0, 0)
		    in  call 'erlang':'and'
			    (_cor8, _cor9) ->
	      'pos_inf'
	  %% Line 1861
	  <Number,'pos_inf'>
	      when let <_cor10> =
		    call 'erlang':'is_integer'
			(_cor1)
		in  let <_cor11> =
			call 'erlang':'>='
			    (_cor1, 0)
		    in  call 'erlang':'and'
			    (_cor10, _cor11) ->
	      'pos_inf'
	  %% Line 1862
	  <Number,'pos_inf'>
	      when let <_cor12> =
		    call 'erlang':'is_integer'
			(_cor1)
		in  let <_cor13> =
			call 'erlang':'<'
			    (_cor1, 0)
		    in  call 'erlang':'and'
			    (_cor12, _cor13) ->
	      'neg_inf'
	  %% Line 1863
	  <Number,'neg_inf'>
	      when let <_cor14> =
		    call 'erlang':'is_integer'
			(_cor1)
		in  let <_cor15> =
			call 'erlang':'>='
			    (_cor1, 0)
		    in  call 'erlang':'and'
			    (_cor14, _cor15) ->
	      'neg_inf'
	  %% Line 1864
	  <Number,'neg_inf'>
	      when let <_cor16> =
		    call 'erlang':'is_integer'
			(_cor1)
		in  let <_cor17> =
			call 'erlang':'<'
			    (_cor1, 0)
		    in  call 'erlang':'and'
			    (_cor16, _cor17) ->
	      'pos_inf'
	  %% Line 1865
	  <Number1,Number2>
	      when let <_cor18> =
		    call 'erlang':'is_integer'
			(_cor1)
		in  let <_cor19> =
			call 'erlang':'is_integer'
			    (_cor0)
		    in  call 'erlang':'and'
			    (_cor18, _cor19) ->
	      %% Line 1866
	      call 'erlang':'div'
		  (_cor1, _cor0)
	  ( <_cor21,_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'infinity_div',2}}] )
	    -| ['compiler_generated'] )
	end
'infinity_bsl'/2 =
    %% Line 1868
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'pos_inf',_cor14> when 'true' ->
	      'pos_inf'
	  %% Line 1869
	  <'neg_inf',_cor15> when 'true' ->
	      'neg_inf'
	  %% Line 1870
	  <Number,'pos_inf'>
	      when let <_cor2> =
		    call 'erlang':'is_integer'
			(_cor1)
		in  let <_cor3> =
			call 'erlang':'>='
			    (_cor1, 0)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      'pos_inf'
	  %% Line 1871
	  <Number,'pos_inf'>
	      when call 'erlang':'is_integer'
		    (_cor1) ->
	      'neg_inf'
	  %% Line 1872
	  <Number,'neg_inf'>
	      when let <_cor4> =
		    call 'erlang':'is_integer'
			(_cor1)
		in  let <_cor5> =
			call 'erlang':'>='
			    (_cor1, 0)
		    in  call 'erlang':'and'
			    (_cor4, _cor5) ->
	      0
	  %% Line 1873
	  <Number,'neg_inf'>
	      when call 'erlang':'is_integer'
		    (_cor1) ->
	      -1
	  %% Line 1874
	  <Number1,Number2>
	      when let <_cor6> =
		    call 'erlang':'is_integer'
			(_cor1)
		in  let <_cor7> =
			call 'erlang':'is_integer'
			    (_cor0)
		    in  call 'erlang':'and'
			    (_cor6, _cor7) ->
	      %% Line 1876
	      case <> of
		<>
		    when call 'erlang':'>'
			  (_cor0,
			   256) ->
		    apply 'infinity_bsl'/2
			(_cor1, 'pos_inf')
		%% Line 1877
		<>
		    when call 'erlang':'<'
			  (_cor0,
			   -256) ->
		    apply 'infinity_bsl'/2
			(_cor1, 'neg_inf')
		%% Line 1878
		<> when 'true' ->
		    call 'erlang':'bsl'
			(_cor1, _cor0)
	      end
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'infinity_bsl',2}}] )
	    -| ['compiler_generated'] )
	end
'infinity_geq'/2 =
    %% Line 1881
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'pos_inf',_cor6> when 'true' ->
	      'true'
	  %% Line 1882
	  <_cor7,'pos_inf'> when 'true' ->
	      'false'
	  %% Line 1883
	  <_cor8,'neg_inf'> when 'true' ->
	      'true'
	  %% Line 1884
	  <'neg_inf',_cor9> when 'true' ->
	      'false'
	  %% Line 1885
	  <A,B>
	      when let <_cor2> =
		    call 'erlang':'is_integer'
			(_cor1)
		in  let <_cor3> =
			call 'erlang':'is_integer'
			    (_cor0)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      call 'erlang':'>='
		  (_cor1, _cor0)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'infinity_geq',2}}] )
	    -| ['compiler_generated'] )
	end
'infinity_add'/2 =
    %% Line 1889
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'pos_inf',_X_Number> when 'true' ->
	      'pos_inf'
	  %% Line 1890
	  <'neg_inf',_X_Number> when 'true' ->
	      'neg_inf'
	  %% Line 1891
	  <_X_Number,'pos_inf'> when 'true' ->
	      'pos_inf'
	  %% Line 1892
	  <_X_Number,'neg_inf'> when 'true' ->
	      'neg_inf'
	  %% Line 1893
	  <Number1,Number2>
	      when let <_cor2> =
		    call 'erlang':'is_integer'
			(_cor1)
		in  let <_cor3> =
			call 'erlang':'is_integer'
			    (_cor0)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      %% Line 1894
	      call 'erlang':'+'
		  (_cor1, _cor0)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'infinity_add',2}}] )
	    -| ['compiler_generated'] )
	end
'infinity_mult'/2 =
    %% Line 1896
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'neg_inf',Number> when 'true' ->
	      let <Greater> =
		  %% Line 1897
		  apply 'infinity_geq'/2
		      (_cor0, 0)
	      in  %% Line 1898
		  case <> of
		    <>
			when call 'erlang':'=:='
			      (Greater,
			       'true') ->
			'neg_inf'
		    %% Line 1899
		    <> when 'true' ->
			'pos_inf'
		  end
	  %% Line 1901
	  <'pos_inf',Number> when 'true' ->
	      let <_cor3> =
		  apply 'infinity_mult'/2
		      ('neg_inf', _cor0)
	      in  case _cor3 of
		    <'pos_inf'> when 'true' ->
			'neg_inf'
		    <'neg_inf'> when 'true' ->
			'pos_inf'
		    <_2058>
			when call 'erlang':'is_integer'
			      (_cor3) ->
			call 'erlang':'-'
			    (_cor3)
		    ( <_4327> when 'true' ->
			  primop 'match_fail'
			      ({'function_clause',_cor3})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1902
	  <Number,'pos_inf'> when 'true' ->
	      let <_cor4> =
		  apply 'infinity_mult'/2
		      ('neg_inf', _cor1)
	      in  case _cor4 of
		    <'pos_inf'> when 'true' ->
			'neg_inf'
		    <'neg_inf'> when 'true' ->
			'pos_inf'
		    <_7505>
			when call 'erlang':'is_integer'
			      (_cor4) ->
			call 'erlang':'-'
			    (_cor4)
		    ( <_1697> when 'true' ->
			  primop 'match_fail'
			      ({'function_clause',_cor4})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1903
	  <Number,'neg_inf'> when 'true' ->
	      apply 'infinity_mult'/2
		  ('neg_inf', _cor1)
	  %% Line 1904
	  <Number1,Number2>
	      when let <_cor5> =
		    call 'erlang':'is_integer'
			(_cor1)
		in  let <_cor6> =
			call 'erlang':'is_integer'
			    (_cor0)
		    in  call 'erlang':'and'
			    (_cor5, _cor6) ->
	      %% Line 1905
	      call 'erlang':'*'
		  (_cor1, _cor0)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'infinity_mult',2}}] )
	    -| ['compiler_generated'] )
	end
'width'/1 =
    %% Line 1907
    fun (_cor0) ->
	case _cor0 of
	  <{Min,Max}> when 'true' ->
	      let <_cor1> =
		  apply 'width'/1
		      (Min)
	      in  let <_cor2> =
		      apply 'width'/1
			  (Max)
		  in  apply 'infinity_max'/1
			  ([_cor1|[_cor2|[]]])
	  %% Line 1908
	  <'pos_inf'> when 'true' ->
	      'pos_inf'
	  %% Line 1909
	  <'neg_inf'> when 'true' ->
	      'pos_inf'
	  %% Line 1910
	  <X>
	      when let <_cor3> =
		    call 'erlang':'is_integer'
			(_cor0)
		in  let <_cor4> =
			call 'erlang':'>='
			    (_cor0, 0)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      %% Line 1914
	      case <> of
		%% Line 1915
		<>
		    when call 'erlang':'<'
			  (_cor0,
			   1) ->
		    0
		%% Line 1916
		<> when 'true' ->
		    apply 'poswidth'/2
			(_cor0, 1)
	      end
	  %% Line 1911
	  <X>
	      when let <_cor5> =
		    call 'erlang':'is_integer'
			(_cor0)
		in  let <_cor6> =
			call 'erlang':'<'
			    (_cor0, 0)
		    in  call 'erlang':'and'
			    (_cor5, _cor6) ->
	      %% Line 1920
	      case <> of
		%% Line 1921
		<>
		    when call 'erlang':'>='
			  (_cor0,
			   -1) ->
		    0
		%% Line 1922
		<> when 'true' ->
		    apply 'negwidth'/2
			(_cor0, 1)
	      end
	  ( <_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'width',1}}] )
	    -| ['compiler_generated'] )
	end
'poswidth'/2 =
    %% Line 1913
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 1914
	    call 'erlang':'bsl'
		(1, _cor0)
	in  %% Line 1914
	    case <> of
	      %% Line 1915
	      <>
		  when call 'erlang':'<'
			(_cor1,
			 _cor2) ->
		  _cor0
	      %% Line 1916
	      <> when 'true' ->
		  let <_cor3> =
		      call 'erlang':'+'
			  (_cor0, 1)
		  in  apply 'poswidth'/2
			  (_cor1, _cor3)
	    end
'negwidth'/2 =
    %% Line 1919
    fun (_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 1920
	    call 'erlang':'bsl'
		(-1, _cor0)
	in  %% Line 1920
	    case <> of
	      %% Line 1921
	      <>
		  when call 'erlang':'>='
			(_cor1,
			 _cor3) ->
		  _cor0
	      %% Line 1922
	      <> when 'true' ->
		  let <_cor4> =
		      call 'erlang':'+'
			  (_cor0, 1)
		  in  apply 'negwidth'/2
			  (_cor1, _cor4)
	    end
'arith'/3 =
    %% Line 1925
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'bnot',X1,Opaques> when 'true' ->
	      let <_5557> =
		  %% Line 1926
		  call 'erl_types':'t_is_integer'
		      (_cor1, _cor0)
	      in  %% Line 1926
		  case _5557 of
		    %% Line 1927
		    <'false'> when 'true' ->
			'error'
		    %% Line 1928
		    <'true'> when 'true' ->
			let <Min1> =
			    %% Line 1929
			    call 'erl_types':'number_min'
				(_cor1, _cor0)
			in  let <Max1> =
				%% Line 1930
				call 'erl_types':'number_max'
				    (_cor1, _cor0)
			    in  let <_cor9> =
				    case Max1 of
				      <'pos_inf'> when 'true' ->
					  'neg_inf'
				      <'neg_inf'> when 'true' ->
					  'pos_inf'
				      <Number>
					  when call 'erlang':'is_integer'
						(Max1) ->
					  call 'erlang':'-'
					      (Max1)
				      ( <_616> when 'true' ->
					    primop 'match_fail'
						({'function_clause',Max1})
					-| ['compiler_generated'] )
				    end
				in  let <_cor10> =
					%% Line 1931
					apply 'infinity_add'/2
					    (_cor9, -1)
				    in  let <_cor6> =
					    case Min1 of
					      <'pos_inf'> when 'true' ->
						  'neg_inf'
					      <'neg_inf'> when 'true' ->
						  'pos_inf'
					      <Number>
						  when call 'erlang':'is_integer'
							(Min1) ->
						  call 'erlang':'-'
						      (Min1)
					      ( <_4695> when 'true' ->
						    primop 'match_fail'
							({'function_clause',Min1})
						-| ['compiler_generated'] )
					    end
					in  let <_cor7> =
						%% Line 1932
						apply 'infinity_add'/2
						    (_cor6, -1)
					    in  let <_cor11> =
						    %% Line 1931
						    call 'erl_types':'t_from_range'
							(_cor10, _cor7)
						in  %% Line 1931
						    {'ok',_cor11}
		    ( <_cor12> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_5557})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'arith',3}}] )
	    -| ['compiler_generated'] )
	end
'arith_mult'/4 =
    %% Line 1935
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 1936
	    apply 'infinity_mult'/2
		(_cor3, _cor1)
	in  let <_cor5> =
		%% Line 1936
		apply 'infinity_mult'/2
		    (_cor3, _cor0)
	    in  let <_cor6> =
		    %% Line 1937
		    apply 'infinity_mult'/2
			(_cor2, _cor1)
		in  let <_cor7> =
			%% Line 1937
			apply 'infinity_mult'/2
			    (_cor2, _cor0)
		    in  let <Tmp_list> =
			    %% Line 1936
			    [_cor4|[_cor5|%% Line 1937
					  [_cor6|[_cor7|[]]]]]
			in  let <_cor10> =
				%% Line 1938
				apply 'infinity_min'/1
				    (Tmp_list)
			    in  let <_cor9> =
				    %% Line 1938
				    apply 'infinity_max'/1
					(Tmp_list)
				in  %% Line 1938
				    {_cor10,_cor9}
'arith_div'/4 =
    %% Line 1940
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_Min1,_X_Max1,0,0> when 'true' ->
	      %% Line 1942
	      {'pos_inf','neg_inf'}
	  %% Line 1943
	  <Min1,Max1,Min2,Max2> when 'true' ->
	      let <_cor4> =
		  %% Line 1945
		  case <> of
		    <>
			when call 'erlang':'=:='
			      (_cor1,
			       0) ->
			1
		    %% Line 1946
		    <> when 'true' ->
			_cor1
		  end
	      in  let <_cor6> =
		      %% Line 1948
		      case <> of
			<>
			    when call 'erlang':'=:='
				  (_cor0,
				   0) ->
			    -1
			%% Line 1949
			<> when 'true' ->
			    _cor0
		      end
		  in  let <_cor8> =
			  %% Line 1951
			  apply 'infinity_div'/2
			      (_cor3, _cor4)
		      in  let <_cor9> =
			      %% Line 1952
			      apply 'infinity_div'/2
				  (_cor3, _cor6)
			  in  let <_cor10> =
				  %% Line 1953
				  apply 'infinity_div'/2
				      (_cor2, _cor4)
			      in  let <_cor11> =
				      %% Line 1954
				      apply 'infinity_div'/2
					  (_cor2, _cor6)
				  in  let <Tmp_list> =
					  %% Line 1951
					  call 'lists':'flatten'
					      ([_cor8|%% Line 1952
						      [_cor9|%% Line 1953
							     [_cor10|%% Line 1954
								     [_cor11|[]]]]])
				      in  let <_cor14> =
					      %% Line 1955
					      apply 'infinity_min'/1
						  (Tmp_list)
					  in  let <_cor13> =
						  %% Line 1955
						  apply 'infinity_max'/1
						      (Tmp_list)
					      in  %% Line 1955
						  {_cor14,_cor13}
	end
'arith_rem'/4 =
    %% Line 1957
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Min1_geq_zero> =
	    %% Line 1958
	    apply 'infinity_geq'/2
		(_cor3, 0)
	in  let <Max1_leq_zero> =
		%% Line 1959
		apply 'infinity_geq'/2
		    (0, _cor2)
	    in  let <_cor6> =
		    case _cor1 of
		      <'pos_inf'> when 'true' ->
			  'pos_inf'
		      <'neg_inf'> when 'true' ->
			  'pos_inf'
		      <Number>
			  when call 'erlang':'is_integer'
				(_cor1) ->
			  call 'erlang':'abs'
			      (_cor1)
		      ( <_2179> when 'true' ->
			    primop 'match_fail'
				({'function_clause',_cor1})
			-| ['compiler_generated'] )
		    end
		in  let <_cor7> =
			case _cor0 of
			  <'pos_inf'> when 'true' ->
			      'pos_inf'
			  <'neg_inf'> when 'true' ->
			      'pos_inf'
			  <Number>
			      when call 'erlang':'is_integer'
				    (_cor0) ->
			      call 'erlang':'abs'
				  (_cor0)
			  ( <_753> when 'true' ->
				primop 'match_fail'
				    ({'function_clause',_cor0})
			    -| ['compiler_generated'] )
			end
		    in  let <Max_range2> =
			    %% Line 1960
			    apply 'infinity_max'/1
				([_cor6|[_cor7|[]]])
			in  let <Max_range2_leq_zero> =
				%% Line 1961
				apply 'infinity_geq'/2
				    (0, Max_range2)
			    in  let <_cor11> =
				    %% Line 1963
				    case <> of
				      <>
					  when call 'erlang':'=:='
						(Min1_geq_zero,
						 'true') ->
					  0
				      %% Line 1964
				      <>
					  when call 'erlang':'=:='
						(Max_range2,
						 0) ->
					  0
				      %% Line 1965
				      <>
					  when call 'erlang':'=:='
						(Max_range2_leq_zero,
						 'true') ->
					  apply 'infinity_add'/2
					      (Max_range2, 1)
				      %% Line 1966
				      <> when 'true' ->
					  let <_cor10> =
					      case Max_range2 of
						<'pos_inf'> when 'true' ->
						    'neg_inf'
						<'neg_inf'> when 'true' ->
						    'pos_inf'
						<Number>
						    when call 'erlang':'is_integer'
							  (Max_range2) ->
						    call 'erlang':'-'
							(Max_range2)
						( <_1087> when 'true' ->
						      primop 'match_fail'
							  ({'function_clause',Max_range2})
						  -| ['compiler_generated'] )
					      end
					  in  apply 'infinity_add'/2
						  (_cor10, 1)
				    end
				in  let <_cor16> =
					%% Line 1969
					case <> of
					  <>
					      when call 'erlang':'=:='
						    (Max1_leq_zero,
						     'true') ->
					      0
					  %% Line 1970
					  <>
					      when call 'erlang':'=:='
						    (Max_range2,
						     0) ->
					      0
					  %% Line 1971
					  <>
					      when call 'erlang':'=:='
						    (Max_range2_leq_zero,
						     'true') ->
					      let <_cor14> =
						  case Max_range2 of
						    <'pos_inf'> when 'true' ->
							'neg_inf'
						    <'neg_inf'> when 'true' ->
							'pos_inf'
						    <Number>
							when call 'erlang':'is_integer'
							      (Max_range2) ->
							call 'erlang':'-'
							    (Max_range2)
						    ( <_4144> when 'true' ->
							  primop 'match_fail'
							      ({'function_clause',Max_range2})
						      -| ['compiler_generated'] )
						  end
					      in  apply 'infinity_add'/2
						      (_cor14, -1)
					  %% Line 1972
					  <> when 'true' ->
					      apply 'infinity_add'/2
						  (Max_range2, -1)
					end
				    in  %% Line 1974
					{_cor11,_cor16}
'arith_bsl'/4 =
    %% Line 1976
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_6098> =
	    %% Line 1977
	    apply 'infinity_geq'/2
		(_cor3, 0)
	in  %% Line 1977
	    case _6098 of
	      %% Line 1978
	      <'true'> when 'true' ->
		  let <_cor5> =
		      apply 'infinity_bsl'/2
			  (_cor3, _cor1)
		  in  let <_cor4> =
			  apply 'infinity_bsl'/2
			      (_cor2, _cor0)
		      in  {_cor5,_cor4}
	      %% Line 1979
	      <'false'> when 'true' ->
		  let <_5963> =
		      %% Line 1980
		      apply 'infinity_geq'/2
			  (_cor2, 0)
		  in  %% Line 1980
		      case _5963 of
			%% Line 1981
			<'true'> when 'true' ->
			    let <_cor7> =
				apply 'infinity_bsl'/2
				    (_cor3, _cor0)
			    in  let <_cor6> =
				    apply 'infinity_bsl'/2
					(_cor2, _cor0)
				in  {_cor7,_cor6}
			%% Line 1982
			<'false'> when 'true' ->
			    let <_cor9> =
				apply 'infinity_bsl'/2
				    (_cor3, _cor0)
			    in  let <_cor8> =
				    apply 'infinity_bsl'/2
					(_cor0, _cor1)
				in  {_cor9,_cor8}
			( <_cor10> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_5963})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor11> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_6098})
		-| ['compiler_generated'] )
	    end
'arith_band_range_set'/2 =
    %% Line 1986
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{Min,Max},[Int|IntList]> when 'true' ->
	      let <_cor6> =
		  %% Line 1988
		  fun (_cor3,_cor2) ->
		      %% Line 1989
		      call 'erlang':'bor'
			  (_cor3, _cor2)
	      in  let <SafeAnd> =
		      %% Line 1987
		      call 'lists':'foldl'
			  (_cor6, Int, IntList)
		  in  let <_cor9> =
			  %% Line 1993
			  apply 'infinity_band'/2
			      (Min, SafeAnd)
		      in  let <_cor8> =
			      %% Line 1993
			      apply 'infinity_band'/2
				  (Max, SafeAnd)
			  in  %% Line 1993
			      {_cor9,_cor8}
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'arith_band_range_set',2}}] )
	    -| ['compiler_generated'] )
	end
'arith_bor_range_set'/2 =
    %% Line 1995
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{Min,Max},[Int|IntList]> when 'true' ->
	      let <_cor6> =
		  %% Line 1997
		  fun (_cor3,_cor2) ->
		      %% Line 1998
		      call 'erlang':'band'
			  (_cor3, _cor2)
	      in  let <SafeAnd> =
		      %% Line 1996
		      call 'lists':'foldl'
			  (_cor6, Int, IntList)
		  in  let <_cor9> =
			  %% Line 2002
			  apply 'infinity_bor'/2
			      (Min, SafeAnd)
		      in  let <_cor8> =
			      %% Line 2002
			      apply 'infinity_bor'/2
				  (Max, SafeAnd)
			  in  %% Line 2002
			      {_cor9,_cor8}
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'arith_bor_range_set',2}}] )
	    -| ['compiler_generated'] )
	end
'arith_band'/3 =
    %% Line 2004
    fun (_cor2,_cor1,_cor0) ->
	let <L1> =
	    %% Line 2005
	    call 'erl_types':'t_number_vals'
		(_cor2, _cor0)
	in  let <L2> =
		%% Line 2006
		call 'erl_types':'t_number_vals'
		    (_cor1, _cor0)
	    in  let <Min1> =
		    %% Line 2007
		    call 'erl_types':'number_min'
			(_cor2, _cor0)
		in  let <Max1> =
			%% Line 2008
			call 'erl_types':'number_max'
			    (_cor2, _cor0)
		    in  let <Min2> =
			    %% Line 2009
			    call 'erl_types':'number_min'
				(_cor1, _cor0)
			in  let <Max2> =
				%% Line 2010
				call 'erl_types':'number_max'
				    (_cor1, _cor0)
			    in  let <_cor10> =
				    %% Line 2011
				    call 'erlang':'=:='
					(L1, 'unknown')
				in  let <_cor9> =
					%% Line 2011
					call 'erlang':'=:='
					    (L2, 'unknown')
				    in  %% Line 2011
					case <_cor10,_cor9> of
					  %% Line 2012
					  <'true','false'> when 'true' ->
					      let <_cor11> =
						  %% Line 2013
						  apply 'arith_band_ranges'/4
						      (Min1, Max1, Min2, Max2)
					      in  %% Line 2013
						  apply 'arith_band_range_set'/2
						      (_cor11, L2)
					  %% Line 2014
					  <'false','true'> when 'true' ->
					      let <_cor12> =
						  %% Line 2015
						  apply 'arith_band_ranges'/4
						      (Min1, Max1, Min2, Max2)
					      in  %% Line 2015
						  apply 'arith_band_range_set'/2
						      (_cor12, L1)
					  %% Line 2016
					  <'true','true'> when 'true' ->
					      %% Line 2017
					      apply 'arith_band_ranges'/4
						  (Min1, Max1, Min2, Max2)
					  ( <_fol167,_fol168> when 'true' ->
						let <_cor13> = {_cor10,_cor9}
						in  primop 'match_fail'
							({'case_clause',_cor13})
					    -| ['compiler_generated'] )
					end
'arith_bor'/3 =
    %% Line 2020
    fun (_cor2,_cor1,_cor0) ->
	let <L1> =
	    %% Line 2021
	    call 'erl_types':'t_number_vals'
		(_cor2, _cor0)
	in  let <L2> =
		%% Line 2022
		call 'erl_types':'t_number_vals'
		    (_cor1, _cor0)
	    in  let <Min1> =
		    %% Line 2023
		    call 'erl_types':'number_min'
			(_cor2, _cor0)
		in  let <Max1> =
			%% Line 2024
			call 'erl_types':'number_max'
			    (_cor2, _cor0)
		    in  let <Min2> =
			    %% Line 2025
			    call 'erl_types':'number_min'
				(_cor1, _cor0)
			in  let <Max2> =
				%% Line 2026
				call 'erl_types':'number_max'
				    (_cor1, _cor0)
			    in  let <_cor10> =
				    %% Line 2027
				    call 'erlang':'=:='
					(L1, 'unknown')
				in  let <_cor9> =
					%% Line 2027
					call 'erlang':'=:='
					    (L2, 'unknown')
				    in  %% Line 2027
					case <_cor10,_cor9> of
					  %% Line 2028
					  <'true','false'> when 'true' ->
					      let <_cor11> =
						  %% Line 2029
						  apply 'arith_bor_ranges'/4
						      (Min1, Max1, Min2, Max2)
					      in  %% Line 2029
						  apply 'arith_bor_range_set'/2
						      (_cor11, L2)
					  %% Line 2030
					  <'false','true'> when 'true' ->
					      let <_cor12> =
						  %% Line 2031
						  apply 'arith_bor_ranges'/4
						      (Min1, Max1, Min2, Max2)
					      in  %% Line 2031
						  apply 'arith_bor_range_set'/2
						      (_cor12, L1)
					  %% Line 2032
					  <'true','true'> when 'true' ->
					      %% Line 2033
					      apply 'arith_bor_ranges'/4
						  (Min1, Max1, Min2, Max2)
					  ( <_fol172,_fol173> when 'true' ->
						let <_cor13> = {_cor10,_cor9}
						in  primop 'match_fail'
							({'case_clause',_cor13})
					    -| ['compiler_generated'] )
					end
'arith_band_ranges'/4 =
    %% Line 2036
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 2037
	    apply 'width'/1
		({_cor3,_cor2})
	in  let <_cor5> =
		%% Line 2037
		apply 'width'/1
		    ({_cor1,_cor0})
	    in  let <Width> =
		    %% Line 2037
		    apply 'infinity_min'/1
			([_cor4|[_cor5|[]]])
		in  let <_1776> =
			%% Line 2039
			apply 'infinity_geq'/2
			    (_cor3, 0)
		    in  let <_cor9> =
			    %% Line 2039
			    ( case _1776 of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      'true'
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      apply 'infinity_geq'/2
					  (_cor1, 0)
				  -| ['compiler_generated'] )
				( <_cor7> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {( 'badarg'
						  -| ['compiler_generated'] ),_1776}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			in  let <_cor12> =
				%% Line 2039
				case _cor9 of
				  %% Line 2040
				  <'true'> when 'true' ->
				      0
				  %% Line 2041
				  <'false'> when 'true' ->
				      apply 'infinity_bsl'/2
					  (-1, Width)
				  ( <_cor11> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor9})
				    -| ['compiler_generated'] )
				end
			    in  let <_7498> =
				    %% Line 2044
				    apply 'infinity_geq'/2
					(_cor2, 0)
				in  let <_cor16> =
					%% Line 2044
					( case _7498 of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  'true'
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  apply 'infinity_geq'/2
						      (_cor0, 0)
					      -| ['compiler_generated'] )
					    ( <_cor14> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {( 'badarg'
							      -| ['compiler_generated'] ),_7498}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    in  let <_cor20> =
					    %% Line 2044
					    case _cor16 of
					      %% Line 2045
					      <'true'> when 'true' ->
						  let <_cor18> =
						      apply 'infinity_bsl'/2
							  (1, Width)
						  in  apply 'infinity_add'/2
							  (_cor18, -1)
					      %% Line 2046
					      <'false'> when 'true' ->
						  0
					      ( <_cor19> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_cor16})
						-| ['compiler_generated'] )
					    end
					in  %% Line 2048
					    {_cor12,_cor20}
'arith_bor_ranges'/4 =
    %% Line 2050
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 2051
	    apply 'width'/1
		({_cor3,_cor2})
	in  let <_cor5> =
		%% Line 2051
		apply 'width'/1
		    ({_cor1,_cor0})
	    in  let <Width> =
		    %% Line 2051
		    apply 'infinity_max'/1
			([_cor4|[_cor5|[]]])
		in  let <_4921> =
			%% Line 2053
			apply 'infinity_geq'/2
			    (_cor3, 0)
		    in  let <_cor9> =
			    %% Line 2053
			    ( case _4921 of
				( <( 'true'
				     -| ['compiler_generated'] )> when 'true' ->
				      apply 'infinity_geq'/2
					  (_cor1, 0)
				  -| ['compiler_generated'] )
				( <( 'false'
				     -| ['compiler_generated'] )> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
				( <_cor7> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {( 'badarg'
						  -| ['compiler_generated'] ),_4921}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			in  let <_cor12> =
				%% Line 2053
				case _cor9 of
				  %% Line 2054
				  <'true'> when 'true' ->
				      0
				  %% Line 2055
				  <'false'> when 'true' ->
				      apply 'infinity_bsl'/2
					  (-1, Width)
				  ( <_cor11> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor9})
				    -| ['compiler_generated'] )
				end
			    in  let <_1720> =
				    %% Line 2058
				    apply 'infinity_geq'/2
					(_cor2, 0)
				in  let <_cor16> =
					%% Line 2058
					( case _1720 of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  apply 'infinity_geq'/2
						      (_cor0, 0)
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  'false'
					      -| ['compiler_generated'] )
					    ( <_cor14> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {( 'badarg'
							      -| ['compiler_generated'] ),_1720}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    in  let <_cor20> =
					    %% Line 2058
					    case _cor16 of
					      %% Line 2059
					      <'true'> when 'true' ->
						  let <_cor18> =
						      apply 'infinity_bsl'/2
							  (1, Width)
						  in  apply 'infinity_add'/2
							  (_cor18, -1)
					      %% Line 2060
					      <'false'> when 'true' ->
						  -1
					      ( <_cor19> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_cor16})
						-| ['compiler_generated'] )
					    end
					in  %% Line 2062
					    {_cor12,_cor20}
'arith'/4 =
    %% Line 2064
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_80> =
	    %% Line 2066
	    call 'erl_types':'t_is_integer'
		(_cor2, _cor0)
	in  let <_cor6> =
		%% Line 2066
		( case _80 of
		    ( <( 'true'
			 -| ['compiler_generated'] )> when 'true' ->
			  call 'erl_types':'t_is_integer'
			      (_cor1, _cor0)
		      -| ['compiler_generated'] )
		    ( <( 'false'
			 -| ['compiler_generated'] )> when 'true' ->
			  'false'
		      -| ['compiler_generated'] )
		    ( <_cor4> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {( 'badarg'
				      -| ['compiler_generated'] ),_80}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
	    in  %% Line 2066
		case _cor6 of
		  %% Line 2067
		  <'false'> when 'true' ->
		      'error'
		  %% Line 2068
		  <'true'> when 'true' ->
		      let <L1> =
			  %% Line 2069
			  call 'erl_types':'t_number_vals'
			      (_cor2, _cor0)
		      in  let <L2> =
			      %% Line 2070
			      call 'erl_types':'t_number_vals'
				  (_cor1, _cor0)
			  in  let <_cor11> =
				  %% Line 2071
				  ( case <> of
				      ( <>
					    when call 'erlang':'=:='
						  (L1,
						   'unknown') ->
					    'true'
					-| ['compiler_generated'] )
				      ( <> when 'true' ->
					    call 'erlang':'=:='
						(L2, 'unknown')
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      in  %% Line 2071
				  case _cor11 of
				    %% Line 2072
				    <'true'> when 'true' ->
					let <Min1> =
					    %% Line 2073
					    call 'erl_types':'number_min'
						(_cor2, _cor0)
					in  let <Max1> =
						%% Line 2074
						call 'erl_types':'number_max'
						    (_cor2, _cor0)
					    in  let <Min2> =
						    %% Line 2075
						    call 'erl_types':'number_min'
							(_cor1, _cor0)
						in  let <Max2> =
							%% Line 2076
							call 'erl_types':'number_max'
							    (_cor1, _cor0)
						    in  let <_cor25> =
							    %% Line 2078
							    case _cor3 of
							      %% Line 2079
							      <'+'> when 'true' ->
								  let <_cor17> =
								      apply 'infinity_add'/2
									  (Min1, Min2)
								  in  let <_cor16> =
									  apply 'infinity_add'/2
									      (Max1, Max2)
								      in  {_cor17,_cor16}
							      %% Line 2080
							      <'-'> when 'true' ->
								  let <_cor20> =
								      case Max2 of
									<'pos_inf'> when 'true' ->
									    'neg_inf'
									<'neg_inf'> when 'true' ->
									    'pos_inf'
									<Number>
									    when call 'erlang':'is_integer'
										  (Max2) ->
									    call 'erlang':'-'
										(Max2)
									( <_4146> when 'true' ->
									      primop 'match_fail'
										  ({'function_clause',Max2})
									  -| ['compiler_generated'] )
								      end
								  in  let <_cor21> =
									  apply 'infinity_add'/2
									      (Min1, _cor20)
								      in  let <_cor18> =
									      case Min2 of
										<'pos_inf'> when 'true' ->
										    'neg_inf'
										<'neg_inf'> when 'true' ->
										    'pos_inf'
										<Number>
										    when call 'erlang':'is_integer'
											  (Min2) ->
										    call 'erlang':'-'
											(Min2)
										( <_1052> when 'true' ->
										      primop 'match_fail'
											  ({'function_clause',Min2})
										  -| ['compiler_generated'] )
									      end
									  in  let <_cor19> =
										  %% Line 2081
										  apply 'infinity_add'/2
										      (Max1, _cor18)
									      in  {_cor21,_cor19}
							      %% Line 2082
							      <'*'> when 'true' ->
								  apply 'arith_mult'/4
								      (Min1, Max1, Min2, Max2)
							      %% Line 2083
							      <'div'> when 'true' ->
								  apply 'arith_div'/4
								      (Min1, Max1, Min2, Max2)
							      %% Line 2084
							      <'rem'> when 'true' ->
								  apply 'arith_rem'/4
								      (Min1, Max1, Min2, Max2)
							      %% Line 2085
							      <'bsl'> when 'true' ->
								  apply 'arith_bsl'/4
								      (Min1, Max1, Min2, Max2)
							      %% Line 2086
							      <'bsr'> when 'true' ->
								  let <NewMin2> =
								      case Max2 of
									<'pos_inf'> when 'true' ->
									    'neg_inf'
									<'neg_inf'> when 'true' ->
									    'pos_inf'
									<Number>
									    when call 'erlang':'is_integer'
										  (Max2) ->
									    call 'erlang':'-'
										(Max2)
									( <_3353> when 'true' ->
									      primop 'match_fail'
										  ({'function_clause',Max2})
									  -| ['compiler_generated'] )
								      end
								  in  let <NewMax2> =
									  case Min2 of
									    <'pos_inf'> when 'true' ->
										'neg_inf'
									    <'neg_inf'> when 'true' ->
										'pos_inf'
									    <Number>
										when call 'erlang':'is_integer'
										      (Min2) ->
										call 'erlang':'-'
										    (Min2)
									    ( <_6478> when 'true' ->
										  primop 'match_fail'
										      ({'function_clause',Min2})
									      -| ['compiler_generated'] )
									  end
								      in  %% Line 2088
									  apply 'arith_bsl'/4
									      (Min1, Max1, NewMin2, NewMax2)
							      %% Line 2089
							      <'band'> when 'true' ->
								  apply 'arith_band'/3
								      (_cor2, _cor1, _cor0)
							      %% Line 2090
							      <'bor'> when 'true' ->
								  apply 'arith_bor'/3
								      (_cor2, _cor1, _cor0)
							      %% Line 2091
							      <'bxor'> when 'true' ->
								  apply 'arith_bor_ranges'/4
								      (Min1, Max1, Min2, Max2)
							      ( <_cor24> when 'true' ->
								    primop 'match_fail'
									({'case_clause',_cor3})
								-| ['compiler_generated'] )
							    end
							in  %% Line 2077
							    case _cor25 of
							      <{NewMin,NewMax}> when 'true' ->
								  let <_cor27> =
								      %% Line 2094
								      call 'erl_types':'t_from_range'
									  (NewMin, NewMax)
								  in  %% Line 2094
								      {'ok',_cor27}
							      ( <_cor26> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_cor25})
								-| ['compiler_generated'] )
							    end
				    %% Line 2095
				    <'false'> when 'true' ->
					%% Line 2098
					try
					    case _cor3 of
					      %% Line 2099
					      <'+'> when 'true' ->
						  ( letrec
							'lc$^0'/1 =
							    fun (_cor32) ->
								case _cor32 of
								  <[X|_cor29]> when 'true' ->
								      ( letrec
									    'lc$^1'/1 =
										fun (_cor33) ->
										    case _cor33 of
										      <[Y|_cor31]> when 'true' ->
											  let <_cor34> =
											      call 'erlang':'+'
												  (X, Y)
											  in  let <_cor35> =
												  apply 'lc$^1'/1
												      (_cor31)
											      in  ( [_cor34|_cor35]
												    -| ['compiler_generated'] )
										      <[]> when 'true' ->
											  apply 'lc$^0'/1
											      (_cor29)
										      ( <_1134> when 'true' ->
											    ( primop 'match_fail'
												  ({'function_clause',_cor33})
											      -| [{'function_name',{'lc$^1',1}}] )
											-| ['compiler_generated'] )
										    end
									in  apply 'lc$^1'/1
										(L2)
									-| ['list_comprehension'] )
								  <[]> when 'true' ->
								      []
								  ( <_4804> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor32})
									  -| [{'function_name',{'lc$^0',1}}] )
								    -| ['compiler_generated'] )
								end
						    in  case L1 of
							  <[X|_cor29]> when 'true' ->
							      ( letrec
								    'lc$^1'/1 =
									fun (_cor33) ->
									    case _cor33 of
									      <[Y|_cor31]> when 'true' ->
										  let <_cor34> =
										      call 'erlang':'+'
											  (X, Y)
										  in  let <_cor35> =
											  apply 'lc$^1'/1
											      (_cor31)
										      in  ( [_cor34|_cor35]
											    -| ['compiler_generated'] )
									      <[]> when 'true' ->
										  apply 'lc$^0'/1
										      (_cor29)
									      ( <_1134> when 'true' ->
										    primop 'match_fail'
											({'function_clause',_cor33})
										-| ['compiler_generated'] )
									    end
								in  apply 'lc$^1'/1
									(L2)
								-| ['list_comprehension'] )
							  <[]> when 'true' ->
							      []
							  ( <_4804> when 'true' ->
								primop 'match_fail'
								    ({'function_clause',L1})
							    -| ['compiler_generated'] )
							end
						    -| ['list_comprehension'] )
					      %% Line 2100
					      <'-'> when 'true' ->
						  ( letrec
							'lc$^2'/1 =
							    fun (_cor40) ->
								case _cor40 of
								  <[X|_cor37]> when 'true' ->
								      ( letrec
									    'lc$^3'/1 =
										fun (_cor41) ->
										    case _cor41 of
										      <[Y|_cor39]> when 'true' ->
											  let <_cor42> =
											      call 'erlang':'-'
												  (X, Y)
											  in  let <_cor43> =
												  apply 'lc$^3'/1
												      (_cor39)
											      in  ( [_cor42|_cor43]
												    -| ['compiler_generated'] )
										      <[]> when 'true' ->
											  apply 'lc$^2'/1
											      (_cor37)
										      ( <_4586> when 'true' ->
											    ( primop 'match_fail'
												  ({'function_clause',_cor41})
											      -| [{'function_name',{'lc$^3',1}}] )
											-| ['compiler_generated'] )
										    end
									in  apply 'lc$^3'/1
										(L2)
									-| ['list_comprehension'] )
								  <[]> when 'true' ->
								      []
								  ( <_1519> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor40})
									  -| [{'function_name',{'lc$^2',1}}] )
								    -| ['compiler_generated'] )
								end
						    in  case L1 of
							  <[X|_cor37]> when 'true' ->
							      ( letrec
								    'lc$^3'/1 =
									fun (_cor41) ->
									    case _cor41 of
									      <[Y|_cor39]> when 'true' ->
										  let <_cor42> =
										      call 'erlang':'-'
											  (X, Y)
										  in  let <_cor43> =
											  apply 'lc$^3'/1
											      (_cor39)
										      in  ( [_cor42|_cor43]
											    -| ['compiler_generated'] )
									      <[]> when 'true' ->
										  apply 'lc$^2'/1
										      (_cor37)
									      ( <_4586> when 'true' ->
										    primop 'match_fail'
											({'function_clause',_cor41})
										-| ['compiler_generated'] )
									    end
								in  apply 'lc$^3'/1
									(L2)
								-| ['list_comprehension'] )
							  <[]> when 'true' ->
							      []
							  ( <_1519> when 'true' ->
								primop 'match_fail'
								    ({'function_clause',L1})
							    -| ['compiler_generated'] )
							end
						    -| ['list_comprehension'] )
					      %% Line 2101
					      <'*'> when 'true' ->
						  ( letrec
							'lc$^4'/1 =
							    fun (_cor48) ->
								case _cor48 of
								  <[X|_cor45]> when 'true' ->
								      ( letrec
									    'lc$^5'/1 =
										fun (_cor49) ->
										    case _cor49 of
										      <[Y|_cor47]> when 'true' ->
											  let <_cor50> =
											      call 'erlang':'*'
												  (X, Y)
											  in  let <_cor51> =
												  apply 'lc$^5'/1
												      (_cor47)
											      in  ( [_cor50|_cor51]
												    -| ['compiler_generated'] )
										      <[]> when 'true' ->
											  apply 'lc$^4'/1
											      (_cor45)
										      ( <_3970> when 'true' ->
											    ( primop 'match_fail'
												  ({'function_clause',_cor49})
											      -| [{'function_name',{'lc$^5',1}}] )
											-| ['compiler_generated'] )
										    end
									in  apply 'lc$^5'/1
										(L2)
									-| ['list_comprehension'] )
								  <[]> when 'true' ->
								      []
								  ( <_3062> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor48})
									  -| [{'function_name',{'lc$^4',1}}] )
								    -| ['compiler_generated'] )
								end
						    in  case L1 of
							  <[X|_cor45]> when 'true' ->
							      ( letrec
								    'lc$^5'/1 =
									fun (_cor49) ->
									    case _cor49 of
									      <[Y|_cor47]> when 'true' ->
										  let <_cor50> =
										      call 'erlang':'*'
											  (X, Y)
										  in  let <_cor51> =
											  apply 'lc$^5'/1
											      (_cor47)
										      in  ( [_cor50|_cor51]
											    -| ['compiler_generated'] )
									      <[]> when 'true' ->
										  apply 'lc$^4'/1
										      (_cor45)
									      ( <_3970> when 'true' ->
										    primop 'match_fail'
											({'function_clause',_cor49})
										-| ['compiler_generated'] )
									    end
								in  apply 'lc$^5'/1
									(L2)
								-| ['list_comprehension'] )
							  <[]> when 'true' ->
							      []
							  ( <_3062> when 'true' ->
								primop 'match_fail'
								    ({'function_clause',L1})
							    -| ['compiler_generated'] )
							end
						    -| ['list_comprehension'] )
					      %% Line 2102
					      <'div'> when 'true' ->
						  ( letrec
							'lc$^6'/1 =
							    fun (_cor56) ->
								case _cor56 of
								  <[X|_cor53]> when 'true' ->
								      ( letrec
									    'lc$^7'/1 =
										fun (_cor57) ->
										    case _cor57 of
										      <[Y|_cor55]>
											  when call 'erlang':'=/='
												(Y,
												 0) ->
											  let <_cor58> =
											      call 'erlang':'div'
												  (X, Y)
											  in  let <_cor59> =
												  apply 'lc$^7'/1
												      (_cor55)
											      in  ( [_cor58|_cor59]
												    -| ['compiler_generated'] )
										      ( <[Y|_cor55]> when 'true' ->
											    apply 'lc$^7'/1
												(_cor55)
											-| ['compiler_generated'] )
										      <[]> when 'true' ->
											  apply 'lc$^6'/1
											      (_cor53)
										      ( <_3710> when 'true' ->
											    ( primop 'match_fail'
												  ({'function_clause',_cor57})
											      -| [{'function_name',{'lc$^7',1}}] )
											-| ['compiler_generated'] )
										    end
									in  apply 'lc$^7'/1
										(L2)
									-| ['list_comprehension'] )
								  <[]> when 'true' ->
								      []
								  ( <_8123> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor56})
									  -| [{'function_name',{'lc$^6',1}}] )
								    -| ['compiler_generated'] )
								end
						    in  case L1 of
							  <[X|_cor53]> when 'true' ->
							      ( letrec
								    'lc$^7'/1 =
									fun (_cor57) ->
									    case _cor57 of
									      <[Y|_cor55]>
										  when call 'erlang':'=/='
											(Y,
											 0) ->
										  let <_cor58> =
										      call 'erlang':'div'
											  (X, Y)
										  in  let <_cor59> =
											  apply 'lc$^7'/1
											      (_cor55)
										      in  ( [_cor58|_cor59]
											    -| ['compiler_generated'] )
									      ( <[Y|_cor55]> when 'true' ->
										    apply 'lc$^7'/1
											(_cor55)
										-| ['compiler_generated'] )
									      <[]> when 'true' ->
										  apply 'lc$^6'/1
										      (_cor53)
									      ( <_3710> when 'true' ->
										    primop 'match_fail'
											({'function_clause',_cor57})
										-| ['compiler_generated'] )
									    end
								in  apply 'lc$^7'/1
									(L2)
								-| ['list_comprehension'] )
							  <[]> when 'true' ->
							      []
							  ( <_8123> when 'true' ->
								primop 'match_fail'
								    ({'function_clause',L1})
							    -| ['compiler_generated'] )
							end
						    -| ['list_comprehension'] )
					      %% Line 2103
					      <'rem'> when 'true' ->
						  ( letrec
							'lc$^8'/1 =
							    fun (_cor64) ->
								case _cor64 of
								  <[X|_cor61]> when 'true' ->
								      ( letrec
									    'lc$^9'/1 =
										fun (_cor65) ->
										    case _cor65 of
										      <[Y|_cor63]>
											  when call 'erlang':'=/='
												(Y,
												 0) ->
											  let <_cor66> =
											      call 'erlang':'rem'
												  (X, Y)
											  in  let <_cor67> =
												  apply 'lc$^9'/1
												      (_cor63)
											      in  ( [_cor66|_cor67]
												    -| ['compiler_generated'] )
										      ( <[Y|_cor63]> when 'true' ->
											    apply 'lc$^9'/1
												(_cor63)
											-| ['compiler_generated'] )
										      <[]> when 'true' ->
											  apply 'lc$^8'/1
											      (_cor61)
										      ( <_3865> when 'true' ->
											    ( primop 'match_fail'
												  ({'function_clause',_cor65})
											      -| [{'function_name',{'lc$^9',1}}] )
											-| ['compiler_generated'] )
										    end
									in  apply 'lc$^9'/1
										(L2)
									-| ['list_comprehension'] )
								  <[]> when 'true' ->
								      []
								  ( <_147> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor64})
									  -| [{'function_name',{'lc$^8',1}}] )
								    -| ['compiler_generated'] )
								end
						    in  case L1 of
							  <[X|_cor61]> when 'true' ->
							      ( letrec
								    'lc$^9'/1 =
									fun (_cor65) ->
									    case _cor65 of
									      <[Y|_cor63]>
										  when call 'erlang':'=/='
											(Y,
											 0) ->
										  let <_cor66> =
										      call 'erlang':'rem'
											  (X, Y)
										  in  let <_cor67> =
											  apply 'lc$^9'/1
											      (_cor63)
										      in  ( [_cor66|_cor67]
											    -| ['compiler_generated'] )
									      ( <[Y|_cor63]> when 'true' ->
										    apply 'lc$^9'/1
											(_cor63)
										-| ['compiler_generated'] )
									      <[]> when 'true' ->
										  apply 'lc$^8'/1
										      (_cor61)
									      ( <_3865> when 'true' ->
										    primop 'match_fail'
											({'function_clause',_cor65})
										-| ['compiler_generated'] )
									    end
								in  apply 'lc$^9'/1
									(L2)
								-| ['list_comprehension'] )
							  <[]> when 'true' ->
							      []
							  ( <_147> when 'true' ->
								primop 'match_fail'
								    ({'function_clause',L1})
							    -| ['compiler_generated'] )
							end
						    -| ['list_comprehension'] )
					      %% Line 2104
					      <'bsl'> when 'true' ->
						  ( letrec
							'lc$^10'/1 =
							    fun (_cor72) ->
								case _cor72 of
								  <[X|_cor69]> when 'true' ->
								      ( letrec
									    'lc$^11'/1 =
										fun (_cor73) ->
										    case _cor73 of
										      <[Y|_cor71]> when 'true' ->
											  let <_cor74> =
											      call 'erlang':'bsl'
												  (X, Y)
											  in  let <_cor75> =
												  apply 'lc$^11'/1
												      (_cor71)
											      in  ( [_cor74|_cor75]
												    -| ['compiler_generated'] )
										      <[]> when 'true' ->
											  apply 'lc$^10'/1
											      (_cor69)
										      ( <_1311> when 'true' ->
											    ( primop 'match_fail'
												  ({'function_clause',_cor73})
											      -| [{'function_name',{'lc$^11',1}}] )
											-| ['compiler_generated'] )
										    end
									in  apply 'lc$^11'/1
										(L2)
									-| ['list_comprehension'] )
								  <[]> when 'true' ->
								      []
								  ( <_969> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor72})
									  -| [{'function_name',{'lc$^10',1}}] )
								    -| ['compiler_generated'] )
								end
						    in  case L1 of
							  <[X|_cor69]> when 'true' ->
							      ( letrec
								    'lc$^11'/1 =
									fun (_cor73) ->
									    case _cor73 of
									      <[Y|_cor71]> when 'true' ->
										  let <_cor74> =
										      call 'erlang':'bsl'
											  (X, Y)
										  in  let <_cor75> =
											  apply 'lc$^11'/1
											      (_cor71)
										      in  ( [_cor74|_cor75]
											    -| ['compiler_generated'] )
									      <[]> when 'true' ->
										  apply 'lc$^10'/1
										      (_cor69)
									      ( <_1311> when 'true' ->
										    primop 'match_fail'
											({'function_clause',_cor73})
										-| ['compiler_generated'] )
									    end
								in  apply 'lc$^11'/1
									(L2)
								-| ['list_comprehension'] )
							  <[]> when 'true' ->
							      []
							  ( <_969> when 'true' ->
								primop 'match_fail'
								    ({'function_clause',L1})
							    -| ['compiler_generated'] )
							end
						    -| ['list_comprehension'] )
					      %% Line 2105
					      <'bsr'> when 'true' ->
						  ( letrec
							'lc$^12'/1 =
							    fun (_cor80) ->
								case _cor80 of
								  <[X|_cor77]> when 'true' ->
								      ( letrec
									    'lc$^13'/1 =
										fun (_cor81) ->
										    case _cor81 of
										      <[Y|_cor79]> when 'true' ->
											  let <_cor82> =
											      call 'erlang':'bsr'
												  (X, Y)
											  in  let <_cor83> =
												  apply 'lc$^13'/1
												      (_cor79)
											      in  ( [_cor82|_cor83]
												    -| ['compiler_generated'] )
										      <[]> when 'true' ->
											  apply 'lc$^12'/1
											      (_cor77)
										      ( <_2618> when 'true' ->
											    ( primop 'match_fail'
												  ({'function_clause',_cor81})
											      -| [{'function_name',{'lc$^13',1}}] )
											-| ['compiler_generated'] )
										    end
									in  apply 'lc$^13'/1
										(L2)
									-| ['list_comprehension'] )
								  <[]> when 'true' ->
								      []
								  ( <_3997> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor80})
									  -| [{'function_name',{'lc$^12',1}}] )
								    -| ['compiler_generated'] )
								end
						    in  case L1 of
							  <[X|_cor77]> when 'true' ->
							      ( letrec
								    'lc$^13'/1 =
									fun (_cor81) ->
									    case _cor81 of
									      <[Y|_cor79]> when 'true' ->
										  let <_cor82> =
										      call 'erlang':'bsr'
											  (X, Y)
										  in  let <_cor83> =
											  apply 'lc$^13'/1
											      (_cor79)
										      in  ( [_cor82|_cor83]
											    -| ['compiler_generated'] )
									      <[]> when 'true' ->
										  apply 'lc$^12'/1
										      (_cor77)
									      ( <_2618> when 'true' ->
										    primop 'match_fail'
											({'function_clause',_cor81})
										-| ['compiler_generated'] )
									    end
								in  apply 'lc$^13'/1
									(L2)
								-| ['list_comprehension'] )
							  <[]> when 'true' ->
							      []
							  ( <_3997> when 'true' ->
								primop 'match_fail'
								    ({'function_clause',L1})
							    -| ['compiler_generated'] )
							end
						    -| ['list_comprehension'] )
					      %% Line 2106
					      <'band'> when 'true' ->
						  ( letrec
							'lc$^14'/1 =
							    fun (_cor88) ->
								case _cor88 of
								  <[X|_cor85]> when 'true' ->
								      ( letrec
									    'lc$^15'/1 =
										fun (_cor89) ->
										    case _cor89 of
										      <[Y|_cor87]> when 'true' ->
											  let <_cor90> =
											      call 'erlang':'band'
												  (X, Y)
											  in  let <_cor91> =
												  apply 'lc$^15'/1
												      (_cor87)
											      in  ( [_cor90|_cor91]
												    -| ['compiler_generated'] )
										      <[]> when 'true' ->
											  apply 'lc$^14'/1
											      (_cor85)
										      ( <_6988> when 'true' ->
											    ( primop 'match_fail'
												  ({'function_clause',_cor89})
											      -| [{'function_name',{'lc$^15',1}}] )
											-| ['compiler_generated'] )
										    end
									in  apply 'lc$^15'/1
										(L2)
									-| ['list_comprehension'] )
								  <[]> when 'true' ->
								      []
								  ( <_7140> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor88})
									  -| [{'function_name',{'lc$^14',1}}] )
								    -| ['compiler_generated'] )
								end
						    in  case L1 of
							  <[X|_cor85]> when 'true' ->
							      ( letrec
								    'lc$^15'/1 =
									fun (_cor89) ->
									    case _cor89 of
									      <[Y|_cor87]> when 'true' ->
										  let <_cor90> =
										      call 'erlang':'band'
											  (X, Y)
										  in  let <_cor91> =
											  apply 'lc$^15'/1
											      (_cor87)
										      in  ( [_cor90|_cor91]
											    -| ['compiler_generated'] )
									      <[]> when 'true' ->
										  apply 'lc$^14'/1
										      (_cor85)
									      ( <_6988> when 'true' ->
										    primop 'match_fail'
											({'function_clause',_cor89})
										-| ['compiler_generated'] )
									    end
								in  apply 'lc$^15'/1
									(L2)
								-| ['list_comprehension'] )
							  <[]> when 'true' ->
							      []
							  ( <_7140> when 'true' ->
								primop 'match_fail'
								    ({'function_clause',L1})
							    -| ['compiler_generated'] )
							end
						    -| ['list_comprehension'] )
					      %% Line 2107
					      <'bor'> when 'true' ->
						  ( letrec
							'lc$^16'/1 =
							    fun (_cor96) ->
								case _cor96 of
								  <[X|_cor93]> when 'true' ->
								      ( letrec
									    'lc$^17'/1 =
										fun (_cor97) ->
										    case _cor97 of
										      <[Y|_cor95]> when 'true' ->
											  let <_cor98> =
											      call 'erlang':'bor'
												  (X, Y)
											  in  let <_cor99> =
												  apply 'lc$^17'/1
												      (_cor95)
											      in  ( [_cor98|_cor99]
												    -| ['compiler_generated'] )
										      <[]> when 'true' ->
											  apply 'lc$^16'/1
											      (_cor93)
										      ( <_1937> when 'true' ->
											    ( primop 'match_fail'
												  ({'function_clause',_cor97})
											      -| [{'function_name',{'lc$^17',1}}] )
											-| ['compiler_generated'] )
										    end
									in  apply 'lc$^17'/1
										(L2)
									-| ['list_comprehension'] )
								  <[]> when 'true' ->
								      []
								  ( <_1272> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor96})
									  -| [{'function_name',{'lc$^16',1}}] )
								    -| ['compiler_generated'] )
								end
						    in  case L1 of
							  <[X|_cor93]> when 'true' ->
							      ( letrec
								    'lc$^17'/1 =
									fun (_cor97) ->
									    case _cor97 of
									      <[Y|_cor95]> when 'true' ->
										  let <_cor98> =
										      call 'erlang':'bor'
											  (X, Y)
										  in  let <_cor99> =
											  apply 'lc$^17'/1
											      (_cor95)
										      in  ( [_cor98|_cor99]
											    -| ['compiler_generated'] )
									      <[]> when 'true' ->
										  apply 'lc$^16'/1
										      (_cor93)
									      ( <_1937> when 'true' ->
										    primop 'match_fail'
											({'function_clause',_cor97})
										-| ['compiler_generated'] )
									    end
								in  apply 'lc$^17'/1
									(L2)
								-| ['list_comprehension'] )
							  <[]> when 'true' ->
							      []
							  ( <_1272> when 'true' ->
								primop 'match_fail'
								    ({'function_clause',L1})
							    -| ['compiler_generated'] )
							end
						    -| ['list_comprehension'] )
					      %% Line 2108
					      <'bxor'> when 'true' ->
						  ( letrec
							'lc$^18'/1 =
							    fun (_cor104) ->
								case _cor104 of
								  <[X|_cor101]> when 'true' ->
								      ( letrec
									    'lc$^19'/1 =
										fun (_cor105) ->
										    case _cor105 of
										      <[Y|_cor103]> when 'true' ->
											  let <_cor106> =
											      call 'erlang':'bxor'
												  (X, Y)
											  in  let <_cor107> =
												  apply 'lc$^19'/1
												      (_cor103)
											      in  ( [_cor106|_cor107]
												    -| ['compiler_generated'] )
										      <[]> when 'true' ->
											  apply 'lc$^18'/1
											      (_cor101)
										      ( <_5714> when 'true' ->
											    ( primop 'match_fail'
												  ({'function_clause',_cor105})
											      -| [{'function_name',{'lc$^19',1}}] )
											-| ['compiler_generated'] )
										    end
									in  apply 'lc$^19'/1
										(L2)
									-| ['list_comprehension'] )
								  <[]> when 'true' ->
								      []
								  ( <_3146> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor104})
									  -| [{'function_name',{'lc$^18',1}}] )
								    -| ['compiler_generated'] )
								end
						    in  case L1 of
							  <[X|_cor101]> when 'true' ->
							      ( letrec
								    'lc$^19'/1 =
									fun (_cor105) ->
									    case _cor105 of
									      <[Y|_cor103]> when 'true' ->
										  let <_cor106> =
										      call 'erlang':'bxor'
											  (X, Y)
										  in  let <_cor107> =
											  apply 'lc$^19'/1
											      (_cor103)
										      in  ( [_cor106|_cor107]
											    -| ['compiler_generated'] )
									      <[]> when 'true' ->
										  apply 'lc$^18'/1
										      (_cor101)
									      ( <_5714> when 'true' ->
										    primop 'match_fail'
											({'function_clause',_cor105})
										-| ['compiler_generated'] )
									    end
								in  apply 'lc$^19'/1
									(L2)
								-| ['list_comprehension'] )
							  <[]> when 'true' ->
							      []
							  ( <_3146> when 'true' ->
								primop 'match_fail'
								    ({'function_clause',L1})
							    -| ['compiler_generated'] )
							end
						    -| ['list_comprehension'] )
					      ( <_cor108> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_cor3})
						-| ['compiler_generated'] )
					    end
					of <_cor109> ->
					    let <_cor110> =
						%% Line 2111
						call 'ordsets':'from_list'
						    (_cor109)
					    in  let <_cor111> =
						    %% Line 2111
						    call 'erl_types':'t_integers'
							(_cor110)
						in  %% Line 2111
						    {'ok',_cor111}
					catch <_cor115,_cor114,_cor113> ->
					    case <_cor115,_cor114,_cor113> of
					      %% Line 2113
					      <'error','system_limit',_cor122> when 'true' ->
						  'error'
					      ( <_5432,_5859,_5862> when 'true' ->
						    primop 'raise'
							(_cor113, _cor114)
						-| ['compiler_generated'] )
					    end
				    ( <_cor116> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor11})
				      -| ['compiler_generated'] )
				  end
		  ( <_cor117> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor6})
		    -| ['compiler_generated'] )
		end
'compare'/4 =
    %% Line 2122
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 2123
	    call 'erl_types':'t_inf'
		(_cor2, _cor1, _cor0)
	in  let <_3486> =
		%% Line 2123
		call 'erl_types':'t_is_none'
		    (_cor4)
	    in  %% Line 2123
		case _3486 of
		  %% Line 2124
		  <'false'> when 'true' ->
		      call 'erl_types':'t_boolean'
			  ()
		  %% Line 2125
		  <'true'> when 'true' ->
		      let <_cor5> =
			  %% Line 2126
			  apply 'opaque_args'/5
			      ('erlang', _cor3, 2, [_cor2|[_cor1|[]]], _cor0)
		      in  %% Line 2126
			  case <> of
			    %% Line 2127
			    <>
				when call 'erlang':'=:='
				      (_cor5,
				       []) ->
				%% Line 2128
				case _cor3 of
				  %% Line 2129
				  <'<'> when 'true' ->
				      apply 'always_smaller'/3
					  (_cor2, _cor1, _cor0)
				  %% Line 2130
				  <'>'> when 'true' ->
				      apply 'always_smaller'/3
					  (_cor1, _cor2, _cor0)
				  %% Line 2131
				  <'=<'> when 'true' ->
				      apply 'always_smaller'/3
					  (_cor2, _cor1, _cor0)
				  %% Line 2132
				  <'>='> when 'true' ->
				      apply 'always_smaller'/3
					  (_cor1, _cor2, _cor0)
				  ( <_cor6> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor3})
				    -| ['compiler_generated'] )
				end
			    %% Line 2134
			    <> when 'true' ->
				call 'erl_types':'t_none'
				    ()
			  end
		  ( <_cor8> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_3486})
		    -| ['compiler_generated'] )
		end
'always_smaller'/3 =
    %% Line 2138
    fun (_cor2,_cor1,_cor0) ->
	let <_1271> =
	    %% Line 2139
	    apply 'type_ranks'/2
		(_cor2, _cor0)
	in  %% Line 2139
	    case _1271 of
	      <{Min1,Max1}> when 'true' ->
		  let <_1996> =
		      %% Line 2140
		      apply 'type_ranks'/2
			  (_cor1, _cor0)
		  in  %% Line 2140
		      case _1996 of
			<{Min2,Max2}> when 'true' ->
			    %% Line 2141
			    case <> of
			      <>
				  when call 'erlang':'<'
					(Max1,
					 Min2) ->
				  call 'erl_types':'t_atom'
				      ('true')
			      %% Line 2142
			      <>
				  when call 'erlang':'>'
					(Min1,
					 Max2) ->
				  call 'erl_types':'t_atom'
				      ('false')
			      %% Line 2143
			      <> when 'true' ->
				  call 'erl_types':'t_boolean'
				      ()
			    end
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_1996})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_1271})
		-| ['compiler_generated'] )
	    end
'type_ranks'/2 =
    %% Line 2146
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 2147
	    apply 'type_order'/0
		()
	in  %% Line 2147
	    apply 'type_ranks'/6
		(_cor1, 1, 0, 0, _cor2, _cor0)
'type_ranks'/6 =
    %% Line 2149
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_Type,_X_I,Min,Max,[],_X_Opaques> when 'true' ->
	      {_cor3,_cor2}
	  %% Line 2150
	  <Type,I,Min,Max,[TypeClass|Rest],Opaques> when 'true' ->
	      let <_cor6> =
		  %% Line 2152
		  call 'erl_types':'t_inf'
		      (_cor5, TypeClass, _cor0)
	      in  let <_5048> =
		      %% Line 2152
		      call 'erl_types':'t_is_none'
			  (_cor6)
		  in  let <NewMin,NewMax> =
			  %% Line 2152
			  case _5048 of
			    %% Line 2153
			    <'true'> when 'true' ->
				<_cor3,_cor2>
			    %% Line 2154
			    <'false'> when 'true' ->
				case _cor3 of
				  %% Line 2155
				  <0> when 'true' ->
				      <_cor4,_cor4>
				  %% Line 2156
				  <_cor18> when 'true' ->
				      <_cor3,_cor4>
				end
			    ( <_cor8> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_5048})
			      -| ['compiler_generated'] )
			  end
		      in  let <_cor11> =
			      %% Line 2159
			      call 'erlang':'+'
				  (_cor4, 1)
			  in  %% Line 2159
			      apply 'type_ranks'/6
				  (_cor5, _cor11, NewMin, NewMax, Rest, _cor0)
	  ( <_cor17,_cor16,_cor15,_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'type_ranks',6}}] )
	    -| ['compiler_generated'] )
	end
'type_order'/0 =
    %% Line 2161
    fun () ->
	let <_cor0> =
	    %% Line 2162
	    call 'erl_types':'t_number'
		()
	in  let <_cor1> =
		%% Line 2162
		call 'erl_types':'t_atom'
		    ()
	    in  let <_cor2> =
		    %% Line 2162
		    call 'erl_types':'t_reference'
			()
		in  let <_cor3> =
			%% Line 2162
			call 'erl_types':'t_fun'
			    ()
		    in  let <_cor4> =
			    %% Line 2162
			    call 'erl_types':'t_port'
				()
			in  let <_cor5> =
				%% Line 2162
				call 'erl_types':'t_pid'
				    ()
			    in  let <_cor6> =
				    %% Line 2162
				    call 'erl_types':'t_tuple'
					()
				in  let <_cor7> =
					%% Line 2163
					call 'erl_types':'t_list'
					    ()
				    in  let <_cor8> =
					    %% Line 2163
					    call 'erl_types':'t_binary'
						()
					in  %% Line 2162
					    [_cor0|[_cor1|[_cor2|[_cor3|[_cor4|[_cor5|[_cor6|%% Line 2163
											     [_cor7|[_cor8|[]]]]]]]]]]
'key_comparisons_fail'/4 =
    %% Line 2165
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 2166
	    call 'erl_types':'t_number'
		()
	in  let <_cor5> =
		%% Line 2166
		call 'erl_types':'t_inf'
		    (_cor3, _cor4, _cor0)
	    in  let <_4095> =
		    %% Line 2166
		    call 'erl_types':'t_is_number'
			(_cor5, _cor0)
		in  let <_cor7> =
			%% Line 2166
			case _4095 of
			  %% Line 2167
			  <'false'> when 'true' ->
			      _cor3
			  %% Line 2168
			  <'true'> when 'true' ->
			      call 'erl_types':'t_number'
				  ()
			  ( <_cor6> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_4095})
			    -| ['compiler_generated'] )
			end
		    in  let <_cor13> =
			    %% Line 2170
			    fun (_cor11) ->
				let <_6052> =
				    %% Line 2171
				    [_cor2|[_cor11|[]]]
				in  let <Key> =
					apply 'type'/5
					    (%% Line 2171
					     'erlang', %% Line 2171
						       'element', %% Line 2171
								  2, _6052, 'universe')
				    in  let <_cor10> =
					    %% Line 2172
					    call 'erl_types':'t_inf'
						(Key, _cor7, _cor0)
					in  %% Line 2172
					    call 'erl_types':'t_is_none'
						(_cor10)
			in  %% Line 2170
			    call 'lists':'all'
				(_cor13, _cor1)
'arg_types'/3 =
    %% Line 2180
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'erlang','!',2> when 'true' ->
	      let <_cor3> =
		  %% Line 2181
		  call 'erl_types':'t_pid'
		      ()
	      in  let <_cor4> =
		      %% Line 2181
		      call 'erl_types':'t_port'
			  ()
		  in  let <_cor5> =
			  %% Line 2181
			  call 'erl_types':'t_atom'
			      ()
		      in  let <_cor6> =
			      %% Line 2182
			      call 'erl_types':'t_atom'
				  ()
			  in  let <_cor7> =
				  %% Line 2182
				  call 'erl_types':'t_node'
				      ()
			      in  let <_cor8> =
				      %% Line 2182
				      call 'erl_types':'t_tuple'
					  ([_cor6|[_cor7|[]]])
				  in  let <Pid> =
					  %% Line 2181
					  call 'erl_types':'t_sup'
					      ([_cor3|[_cor4|[_cor5|%% Line 2182
								    [_cor8|[]]]]])
				      in  let <_cor10> =
					      %% Line 2183
					      call 'erl_types':'t_any'
						  ()
					  in  %% Line 2183
					      [Pid|[_cor10|[]]]
	  %% Line 2184
	  <'erlang','==',2> when 'true' ->
	      let <_cor11> =
		  %% Line 2185
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor12> =
		      %% Line 2185
		      call 'erl_types':'t_any'
			  ()
		  in  %% Line 2185
		      [_cor11|[_cor12|[]]]
	  %% Line 2186
	  <'erlang','/=',2> when 'true' ->
	      let <_cor13> =
		  %% Line 2187
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor14> =
		      %% Line 2187
		      call 'erl_types':'t_any'
			  ()
		  in  %% Line 2187
		      [_cor13|[_cor14|[]]]
	  %% Line 2188
	  <'erlang','=:=',2> when 'true' ->
	      let <_cor15> =
		  %% Line 2189
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor16> =
		      %% Line 2189
		      call 'erl_types':'t_any'
			  ()
		  in  %% Line 2189
		      [_cor15|[_cor16|[]]]
	  %% Line 2190
	  <'erlang','=/=',2> when 'true' ->
	      let <_cor17> =
		  %% Line 2191
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor18> =
		      %% Line 2191
		      call 'erl_types':'t_any'
			  ()
		  in  %% Line 2191
		      [_cor17|[_cor18|[]]]
	  %% Line 2192
	  <'erlang','>',2> when 'true' ->
	      let <_cor19> =
		  %% Line 2193
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor20> =
		      %% Line 2193
		      call 'erl_types':'t_any'
			  ()
		  in  %% Line 2193
		      [_cor19|[_cor20|[]]]
	  %% Line 2194
	  <'erlang','>=',2> when 'true' ->
	      let <_cor21> =
		  %% Line 2195
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor22> =
		      %% Line 2195
		      call 'erl_types':'t_any'
			  ()
		  in  %% Line 2195
		      [_cor21|[_cor22|[]]]
	  %% Line 2196
	  <'erlang','<',2> when 'true' ->
	      let <_cor23> =
		  %% Line 2197
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor24> =
		      %% Line 2197
		      call 'erl_types':'t_any'
			  ()
		  in  %% Line 2197
		      [_cor23|[_cor24|[]]]
	  %% Line 2198
	  <'erlang','=<',2> when 'true' ->
	      let <_cor25> =
		  %% Line 2199
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor26> =
		      %% Line 2199
		      call 'erl_types':'t_any'
			  ()
		  in  %% Line 2199
		      [_cor25|[_cor26|[]]]
	  %% Line 2200
	  <'erlang','+',1> when 'true' ->
	      let <_cor27> =
		  %% Line 2201
		  call 'erl_types':'t_number'
		      ()
	      in  %% Line 2201
		  [_cor27|[]]
	  %% Line 2202
	  <'erlang','+',2> when 'true' ->
	      let <_cor28> =
		  %% Line 2203
		  call 'erl_types':'t_number'
		      ()
	      in  let <_cor29> =
		      %% Line 2203
		      call 'erl_types':'t_number'
			  ()
		  in  %% Line 2203
		      [_cor28|[_cor29|[]]]
	  %% Line 2204
	  <'erlang','++',2> when 'true' ->
	      let <_cor30> =
		  %% Line 2205
		  call 'erl_types':'t_list'
		      ()
	      in  let <_cor31> =
		      %% Line 2205
		      call 'erl_types':'t_any'
			  ()
		  in  %% Line 2205
		      [_cor30|[_cor31|[]]]
	  %% Line 2206
	  <'erlang','-',1> when 'true' ->
	      let <_cor32> =
		  %% Line 2207
		  call 'erl_types':'t_number'
		      ()
	      in  %% Line 2207
		  [_cor32|[]]
	  %% Line 2208
	  <'erlang','-',2> when 'true' ->
	      let <_cor33> =
		  %% Line 2209
		  call 'erl_types':'t_number'
		      ()
	      in  let <_cor34> =
		      %% Line 2209
		      call 'erl_types':'t_number'
			  ()
		  in  %% Line 2209
		      [_cor33|[_cor34|[]]]
	  %% Line 2210
	  <'erlang','--',2> when 'true' ->
	      let <_cor35> =
		  %% Line 2211
		  call 'erl_types':'t_list'
		      ()
	      in  let <_cor36> =
		      %% Line 2211
		      call 'erl_types':'t_list'
			  ()
		  in  %% Line 2211
		      [_cor35|[_cor36|[]]]
	  %% Line 2212
	  <'erlang','*',2> when 'true' ->
	      let <_cor37> =
		  %% Line 2213
		  call 'erl_types':'t_number'
		      ()
	      in  let <_cor38> =
		      %% Line 2213
		      call 'erl_types':'t_number'
			  ()
		  in  %% Line 2213
		      [_cor37|[_cor38|[]]]
	  %% Line 2214
	  <'erlang','/',2> when 'true' ->
	      let <_cor39> =
		  %% Line 2215
		  call 'erl_types':'t_number'
		      ()
	      in  let <_cor40> =
		      %% Line 2215
		      call 'erl_types':'t_number'
			  ()
		  in  %% Line 2215
		      [_cor39|[_cor40|[]]]
	  %% Line 2216
	  <'erlang','div',2> when 'true' ->
	      let <_cor41> =
		  %% Line 2217
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor42> =
		      %% Line 2217
		      call 'erl_types':'t_integer'
			  ()
		  in  %% Line 2217
		      [_cor41|[_cor42|[]]]
	  %% Line 2218
	  <'erlang','rem',2> when 'true' ->
	      let <_cor43> =
		  %% Line 2219
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor44> =
		      %% Line 2219
		      call 'erl_types':'t_integer'
			  ()
		  in  %% Line 2219
		      [_cor43|[_cor44|[]]]
	  %% Line 2220
	  <'erlang','and',2> when 'true' ->
	      let <_cor45> =
		  %% Line 2221
		  call 'erl_types':'t_boolean'
		      ()
	      in  let <_cor46> =
		      %% Line 2221
		      call 'erl_types':'t_boolean'
			  ()
		  in  %% Line 2221
		      [_cor45|[_cor46|[]]]
	  %% Line 2222
	  <'erlang','or',2> when 'true' ->
	      let <_cor47> =
		  %% Line 2223
		  call 'erl_types':'t_boolean'
		      ()
	      in  let <_cor48> =
		      %% Line 2223
		      call 'erl_types':'t_boolean'
			  ()
		  in  %% Line 2223
		      [_cor47|[_cor48|[]]]
	  %% Line 2224
	  <'erlang','xor',2> when 'true' ->
	      let <_cor49> =
		  %% Line 2225
		  call 'erl_types':'t_boolean'
		      ()
	      in  let <_cor50> =
		      %% Line 2225
		      call 'erl_types':'t_boolean'
			  ()
		  in  %% Line 2225
		      [_cor49|[_cor50|[]]]
	  %% Line 2226
	  <'erlang','not',1> when 'true' ->
	      let <_cor51> =
		  %% Line 2227
		  call 'erl_types':'t_boolean'
		      ()
	      in  %% Line 2227
		  [_cor51|[]]
	  %% Line 2228
	  <'erlang','band',2> when 'true' ->
	      let <_cor52> =
		  %% Line 2229
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor53> =
		      %% Line 2229
		      call 'erl_types':'t_integer'
			  ()
		  in  %% Line 2229
		      [_cor52|[_cor53|[]]]
	  %% Line 2230
	  <'erlang','bor',2> when 'true' ->
	      let <_cor54> =
		  %% Line 2231
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor55> =
		      %% Line 2231
		      call 'erl_types':'t_integer'
			  ()
		  in  %% Line 2231
		      [_cor54|[_cor55|[]]]
	  %% Line 2232
	  <'erlang','bxor',2> when 'true' ->
	      let <_cor56> =
		  %% Line 2233
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor57> =
		      %% Line 2233
		      call 'erl_types':'t_integer'
			  ()
		  in  %% Line 2233
		      [_cor56|[_cor57|[]]]
	  %% Line 2234
	  <'erlang','bsr',2> when 'true' ->
	      let <_cor58> =
		  %% Line 2235
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor59> =
		      %% Line 2235
		      call 'erl_types':'t_integer'
			  ()
		  in  %% Line 2235
		      [_cor58|[_cor59|[]]]
	  %% Line 2236
	  <'erlang','bsl',2> when 'true' ->
	      let <_cor60> =
		  %% Line 2237
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor61> =
		      %% Line 2237
		      call 'erl_types':'t_integer'
			  ()
		  in  %% Line 2237
		      [_cor60|[_cor61|[]]]
	  %% Line 2238
	  <'erlang','bnot',1> when 'true' ->
	      let <_cor62> =
		  %% Line 2239
		  call 'erl_types':'t_integer'
		      ()
	      in  %% Line 2239
		  [_cor62|[]]
	  %% Line 2241
	  <'erlang','abs',1> when 'true' ->
	      let <_cor63> =
		  %% Line 2242
		  call 'erl_types':'t_number'
		      ()
	      in  %% Line 2242
		  [_cor63|[]]
	  %% Line 2243
	  <'erlang','append',2> when 'true' ->
	      %% Line 2244
	      apply 'arg_types'/3
		  ('erlang', '++', 2)
	  %% Line 2245
	  <'erlang','apply',2> when 'true' ->
	      let <_cor65> =
		  %% Line 2246
		  call 'erl_types':'t_module'
		      ()
	      in  let <_cor66> =
		      %% Line 2247
		      call 'erl_types':'t_atom'
			  ()
		  in  let <_cor67> =
			  %% Line 2246
			  call 'erl_types':'t_tuple'
			      ([_cor65|%% Line 2247
				       [_cor66|[]]])
		      in  let <_cor64> =
			      %% Line 2248
			      call 'erl_types':'t_fun'
				  ()
			  in  let <_cor68> =
				  %% Line 2246
				  call 'erl_types':'t_sup'
				      (_cor67, _cor64)
			      in  let <_cor69> =
				      %% Line 2249
				      call 'erl_types':'t_list'
					  ()
				  in  %% Line 2246
				      [_cor68|%% Line 2249
					      [_cor69|[]]]
	  %% Line 2250
	  <'erlang','apply',3> when 'true' ->
	      let <_cor71> =
		  %% Line 2251
		  call 'erl_types':'t_atom'
		      ()
	      in  let <_cor70> =
		      %% Line 2251
		      call 'erl_types':'t_tuple'
			  ()
		  in  let <_cor72> =
			  %% Line 2251
			  call 'erl_types':'t_sup'
			      (_cor71, _cor70)
		      in  let <_cor73> =
			      %% Line 2251
			      call 'erl_types':'t_atom'
				  ()
			  in  let <_cor74> =
				  %% Line 2251
				  call 'erl_types':'t_list'
				      ()
			      in  %% Line 2251
				  [_cor72|[_cor73|[_cor74|[]]]]
	  %% Line 2253
	  <'erlang','binary_part',2> when 'true' ->
	      let <_cor75> =
		  %% Line 2254
		  call 'erl_types':'t_binary'
		      ()
	      in  let <_cor76> =
		      %% Line 2254
		      call 'erl_types':'t_non_neg_integer'
			  ()
		  in  let <_cor77> =
			  %% Line 2254
			  call 'erl_types':'t_integer'
			      ()
		      in  let <_cor78> =
			      %% Line 2254
			      call 'erl_types':'t_tuple'
				  ([_cor76|[_cor77|[]]])
			  in  %% Line 2254
			      [_cor75|[_cor78|[]]]
	  %% Line 2256
	  <'erlang','binary_part',3> when 'true' ->
	      let <_cor79> =
		  %% Line 2257
		  call 'erl_types':'t_binary'
		      ()
	      in  let <_cor80> =
		      %% Line 2257
		      call 'erl_types':'t_non_neg_integer'
			  ()
		  in  let <_cor81> =
			  %% Line 2257
			  call 'erl_types':'t_integer'
			      ()
		      in  %% Line 2257
			  [_cor79|[_cor80|[_cor81|[]]]]
	  %% Line 2259
	  <'erlang','bit_size',1> when 'true' ->
	      let <_cor82> =
		  %% Line 2260
		  call 'erl_types':'t_bitstr'
		      ()
	      in  %% Line 2260
		  [_cor82|[]]
	  %% Line 2262
	  <'erlang','byte_size',1> when 'true' ->
	      let <_cor83> =
		  %% Line 2263
		  call 'erl_types':'t_binary'
		      ()
	      in  %% Line 2263
		  [_cor83|[]]
	  %% Line 2264
	  <'erlang','disconnect_node',1> when 'true' ->
	      let <_cor84> =
		  %% Line 2265
		  call 'erl_types':'t_node'
		      ()
	      in  %% Line 2265
		  [_cor84|[]]
	  %% Line 2266
	  <'erlang','halt',0> when 'true' ->
	      %% Line 2267
	      []
	  %% Line 2268
	  <'erlang','halt',1> when 'true' ->
	      let <_cor85> =
		  %% Line 2269
		  call 'erl_types':'t_non_neg_fixnum'
		      ()
	      in  let <_cor86> =
		      %% Line 2269
		      call 'erl_types':'t_atom'
			  ('abort')
		  in  let <_cor87> =
			  %% Line 2269
			  call 'erl_types':'t_string'
			      ()
		      in  let <_cor88> =
			      %% Line 2269
			      call 'erl_types':'t_sup'
				  ([_cor85|[_cor86|[_cor87|[]]]])
			  in  %% Line 2269
			      [_cor88|[]]
	  %% Line 2270
	  <'erlang','halt',2> when 'true' ->
	      let <_cor89> =
		  %% Line 2271
		  call 'erl_types':'t_non_neg_fixnum'
		      ()
	      in  let <_cor90> =
		      %% Line 2271
		      call 'erl_types':'t_atom'
			  ('abort')
		  in  let <_cor91> =
			  %% Line 2271
			  call 'erl_types':'t_string'
			      ()
		      in  let <_cor92> =
			      %% Line 2271
			      call 'erl_types':'t_sup'
				  ([_cor89|[_cor90|[_cor91|[]]]])
			  in  let <_cor93> =
				  %% Line 2272
				  call 'erl_types':'t_atom'
				      ('flush')
			      in  let <_cor94> =
				      %% Line 2272
				      call 'erl_types':'t_boolean'
					  ()
				  in  let <_cor95> =
					  %% Line 2272
					  call 'erl_types':'t_tuple'
					      ([_cor93|[_cor94|[]]])
				      in  let <_cor96> =
					      %% Line 2272
					      call 'erl_types':'t_list'
						  (_cor95)
					  in  %% Line 2271
					      [_cor92|%% Line 2272
						      [_cor96|[]]]
	  %% Line 2273
	  <'erlang','error',1> when 'true' ->
	      let <_cor97> =
		  %% Line 2274
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2274
		  [_cor97|[]]
	  %% Line 2275
	  <'erlang','error',2> when 'true' ->
	      let <_cor98> =
		  %% Line 2276
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor99> =
		      %% Line 2276
		      call 'erl_types':'t_list'
			  ()
		  in  %% Line 2276
		      [_cor98|[_cor99|[]]]
	  %% Line 2277
	  <'erlang','exit',1> when 'true' ->
	      let <_cor100> =
		  %% Line 2278
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2278
		  [_cor100|[]]
	  %% Line 2280
	  <'erlang','element',2> when 'true' ->
	      let <_cor101> =
		  %% Line 2281
		  call 'erl_types':'t_pos_fixnum'
		      ()
	      in  let <_cor102> =
		      %% Line 2281
		      call 'erl_types':'t_tuple'
			  ()
		  in  %% Line 2281
		      [_cor101|[_cor102|[]]]
	  %% Line 2283
	  <'erlang','float',1> when 'true' ->
	      let <_cor103> =
		  %% Line 2284
		  call 'erl_types':'t_number'
		      ()
	      in  %% Line 2284
		  [_cor103|[]]
	  %% Line 2285
	  <'erlang','fun_info',1> when 'true' ->
	      let <_cor104> =
		  %% Line 2286
		  call 'erl_types':'t_fun'
		      ()
	      in  %% Line 2286
		  [_cor104|[]]
	  %% Line 2287
	  <'erlang','get_cookie',0> when 'true' ->
	      %% Line 2288
	      []
	  %% Line 2290
	  <'erlang','hd',1> when 'true' ->
	      let <_cor105> =
		  %% Line 2291
		  call 'erl_types':'t_cons'
		      ()
	      in  %% Line 2291
		  [_cor105|[]]
	  %% Line 2292
	  <'erlang','info',1> when 'true' ->
	      %% Line 2293
	      apply 'arg_types'/3
		  ('erlang', 'system_info', 1)
	  %% Line 2294
	  <'erlang','integer_to_list',2> when 'true' ->
	      let <_cor106> =
		  %% Line 2295
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor107> =
		      %% Line 2295
		      call 'erl_types':'t_from_range'
			  (2, 36)
		  in  %% Line 2295
		      [_cor106|[_cor107|[]]]
	  %% Line 2296
	  <'erlang','is_atom',1> when 'true' ->
	      let <_cor108> =
		  %% Line 2297
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2297
		  [_cor108|[]]
	  %% Line 2298
	  <'erlang','is_binary',1> when 'true' ->
	      let <_cor109> =
		  %% Line 2299
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2299
		  [_cor109|[]]
	  %% Line 2300
	  <'erlang','is_bitstring',1> when 'true' ->
	      let <_cor110> =
		  %% Line 2301
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2301
		  [_cor110|[]]
	  %% Line 2302
	  <'erlang','is_boolean',1> when 'true' ->
	      let <_cor111> =
		  %% Line 2303
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2303
		  [_cor111|[]]
	  %% Line 2304
	  <'erlang','is_float',1> when 'true' ->
	      let <_cor112> =
		  %% Line 2305
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2305
		  [_cor112|[]]
	  %% Line 2306
	  <'erlang','is_function',1> when 'true' ->
	      let <_cor113> =
		  %% Line 2307
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2307
		  [_cor113|[]]
	  %% Line 2308
	  <'erlang','is_function',2> when 'true' ->
	      let <_cor114> =
		  %% Line 2309
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor115> =
		      %% Line 2309
		      call 'erl_types':'t_arity'
			  ()
		  in  %% Line 2309
		      [_cor114|[_cor115|[]]]
	  %% Line 2310
	  <'erlang','is_integer',1> when 'true' ->
	      let <_cor116> =
		  %% Line 2311
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2311
		  [_cor116|[]]
	  %% Line 2312
	  <'erlang','is_list',1> when 'true' ->
	      let <_cor117> =
		  %% Line 2313
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2313
		  [_cor117|[]]
	  %% Line 2314
	  <'erlang','is_map',1> when 'true' ->
	      let <_cor118> =
		  %% Line 2315
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2315
		  [_cor118|[]]
	  %% Line 2316
	  <'erlang','is_number',1> when 'true' ->
	      let <_cor119> =
		  %% Line 2317
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2317
		  [_cor119|[]]
	  %% Line 2318
	  <'erlang','is_pid',1> when 'true' ->
	      let <_cor120> =
		  %% Line 2319
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2319
		  [_cor120|[]]
	  %% Line 2320
	  <'erlang','is_port',1> when 'true' ->
	      let <_cor121> =
		  %% Line 2321
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2321
		  [_cor121|[]]
	  %% Line 2322
	  <'erlang','is_record',2> when 'true' ->
	      let <_cor122> =
		  %% Line 2323
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor123> =
		      %% Line 2323
		      call 'erl_types':'t_atom'
			  ()
		  in  %% Line 2323
		      [_cor122|[_cor123|[]]]
	  %% Line 2324
	  <'erlang','is_record',3> when 'true' ->
	      let <_cor124> =
		  %% Line 2325
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor125> =
		      %% Line 2325
		      call 'erl_types':'t_atom'
			  ()
		  in  let <_cor126> =
			  %% Line 2325
			  call 'erl_types':'t_pos_fixnum'
			      ()
		      in  %% Line 2325
			  [_cor124|[_cor125|[_cor126|[]]]]
	  %% Line 2326
	  <'erlang','is_reference',1> when 'true' ->
	      let <_cor127> =
		  %% Line 2327
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2327
		  [_cor127|[]]
	  %% Line 2328
	  <'erlang','is_tuple',1> when 'true' ->
	      let <_cor128> =
		  %% Line 2329
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2329
		  [_cor128|[]]
	  %% Line 2331
	  <'erlang','length',1> when 'true' ->
	      let <_cor129> =
		  %% Line 2332
		  call 'erl_types':'t_list'
		      ()
	      in  %% Line 2332
		  [_cor129|[]]
	  %% Line 2334
	  <'erlang','map_size',1> when 'true' ->
	      let <_cor130> =
		  %% Line 2335
		  call 'erl_types':'t_map'
		      ()
	      in  %% Line 2335
		  [_cor130|[]]
	  %% Line 2336
	  <'erlang','make_tuple',2> when 'true' ->
	      let <_cor131> =
		  %% Line 2337
		  call 'erl_types':'t_non_neg_fixnum'
		      ()
	      in  let <_cor132> =
		      %% Line 2337
		      call 'erl_types':'t_any'
			  ()
		  in  %% Line 2337
		      [_cor131|[_cor132|[]]]
	  %% Line 2338
	  <'erlang','make_tuple',3> when 'true' ->
	      let <_cor133> =
		  %% Line 2339
		  call 'erl_types':'t_non_neg_fixnum'
		      ()
	      in  let <_cor134> =
		      %% Line 2339
		      call 'erl_types':'t_any'
			  ()
		  in  let <_cor135> =
			  %% Line 2339
			  call 'erl_types':'t_pos_integer'
			      ()
		      in  let <_cor136> =
			      %% Line 2339
			      call 'erl_types':'t_any'
				  ()
			  in  let <_cor137> =
				  %% Line 2339
				  call 'erl_types':'t_tuple'
				      ([_cor135|[_cor136|[]]])
			      in  let <_cor138> =
				      %% Line 2339
				      call 'erl_types':'t_list'
					  (_cor137)
				  in  %% Line 2339
				      [_cor133|[_cor134|[_cor138|[]]]]
	  %% Line 2340
	  <'erlang','memory',0> when 'true' ->
	      %% Line 2341
	      []
	  %% Line 2342
	  <'erlang','nif_error',1> when 'true' ->
	      let <_cor139> =
		  %% Line 2343
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2343
		  [_cor139|[]]
	  %% Line 2344
	  <'erlang','nif_error',2> when 'true' ->
	      let <_cor140> =
		  %% Line 2345
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor141> =
		      %% Line 2345
		      call 'erl_types':'t_list'
			  ()
		  in  %% Line 2345
		      [_cor140|[_cor141|[]]]
	  %% Line 2347
	  <'erlang','node',0> when 'true' ->
	      %% Line 2348
	      []
	  %% Line 2350
	  <'erlang','node',1> when 'true' ->
	      let <_cor142> =
		  %% Line 2351
		  call 'erl_types':'t_identifier'
		      ()
	      in  %% Line 2351
		  [_cor142|[]]
	  %% Line 2353
	  <'erlang','round',1> when 'true' ->
	      let <_cor143> =
		  %% Line 2354
		  call 'erl_types':'t_number'
		      ()
	      in  %% Line 2354
		  [_cor143|[]]
	  %% Line 2356
	  <'erlang','self',0> when 'true' ->
	      %% Line 2357
	      []
	  %% Line 2358
	  <'erlang','set_cookie',2> when 'true' ->
	      let <_cor144> =
		  %% Line 2359
		  call 'erl_types':'t_node'
		      ()
	      in  let <_cor145> =
		      %% Line 2359
		      call 'erl_types':'t_atom'
			  ()
		  in  %% Line 2359
		      [_cor144|[_cor145|[]]]
	  %% Line 2360
	  <'erlang','setelement',3> when 'true' ->
	      let <_cor146> =
		  %% Line 2361
		  call 'erl_types':'t_pos_integer'
		      ()
	      in  let <_cor147> =
		      %% Line 2361
		      call 'erl_types':'t_tuple'
			  ()
		  in  let <_cor148> =
			  %% Line 2361
			  call 'erl_types':'t_any'
			      ()
		      in  %% Line 2361
			  [_cor146|[_cor147|[_cor148|[]]]]
	  %% Line 2363
	  <'erlang','size',1> when 'true' ->
	      let <_cor150> =
		  %% Line 2364
		  call 'erl_types':'t_tuple'
		      ()
	      in  let <_cor149> =
		      %% Line 2364
		      call 'erl_types':'t_binary'
			  ()
		  in  let <_cor151> =
			  %% Line 2364
			  call 'erl_types':'t_sup'
			      (_cor150, _cor149)
		      in  %% Line 2364
			  [_cor151|[]]
	  %% Line 2365
	  <'erlang','spawn',1> when 'true' ->
	      let <_cor152> =
		  %% Line 2366
		  call 'erl_types':'t_fun'
		      ()
	      in  %% Line 2366
		  [_cor152|[]]
	  %% Line 2367
	  <'erlang','spawn',2> when 'true' ->
	      let <_cor153> =
		  %% Line 2368
		  call 'erl_types':'t_node'
		      ()
	      in  let <_cor154> =
		      %% Line 2368
		      call 'erl_types':'t_fun'
			  ()
		  in  %% Line 2368
		      [_cor153|[_cor154|[]]]
	  %% Line 2369
	  <'erlang','spawn',4> when 'true' ->
	      let <_cor155> =
		  %% Line 2370
		  call 'erl_types':'t_node'
		      ()
	      in  let <_cor156> =
		      %% Line 2370
		      call 'erl_types':'t_atom'
			  ()
		  in  let <_cor157> =
			  %% Line 2370
			  call 'erl_types':'t_atom'
			      ()
		      in  let <_cor158> =
			      %% Line 2370
			      call 'erl_types':'t_list'
				  ()
			  in  %% Line 2370
			      [_cor155|[_cor156|[_cor157|[_cor158|[]]]]]
	  %% Line 2371
	  <'erlang','spawn_link',1> when 'true' ->
	      %% Line 2372
	      apply 'arg_types'/3
		  ('erlang', 'spawn', 1)
	  %% Line 2373
	  <'erlang','spawn_link',2> when 'true' ->
	      %% Line 2374
	      apply 'arg_types'/3
		  ('erlang', 'spawn', 2)
	  %% Line 2375
	  <'erlang','spawn_link',4> when 'true' ->
	      %% Line 2376
	      apply 'arg_types'/3
		  ('erlang', 'spawn', 4)
	  %% Line 2377
	  <'erlang','subtract',2> when 'true' ->
	      %% Line 2378
	      apply 'arg_types'/3
		  ('erlang', '--', 2)
	  %% Line 2379
	  <'erlang','suspend_process',1> when 'true' ->
	      let <_cor159> =
		  %% Line 2380
		  call 'erl_types':'t_pid'
		      ()
	      in  %% Line 2380
		  [_cor159|[]]
	  %% Line 2381
	  <'erlang','system_info',1> when 'true' ->
	      let <_cor160> =
		  %% Line 2382
		  call 'erl_types':'t_atom'
		      ()
	      in  let <_cor161> =
		      %% Line 2383
		      call 'erl_types':'t_atom'
			  ()
		  in  let <_cor162> =
			  %% Line 2383
			  call 'erl_types':'t_any'
			      ()
		      in  let <_cor163> =
			      %% Line 2383
			      call 'erl_types':'t_tuple'
				  ([_cor161|[_cor162|[]]])
			  in  let <_cor164> =
				  %% Line 2384
				  call 'erl_types':'t_atom'
				      ()
			      in  let <_cor165> =
				      %% Line 2384
				      call 'erl_types':'t_atom'
					  ()
				  in  let <_cor166> =
					  %% Line 2384
					  call 'erl_types':'t_any'
					      ()
				      in  let <_cor167> =
					      %% Line 2384
					      call 'erl_types':'t_tuple'
						  ([_cor164|[_cor165|[_cor166|[]]]])
					  in  let <_cor168> =
						  %% Line 2385
						  call 'erl_types':'t_atom'
						      ('allocator_sizes')
					      in  let <_cor169> =
						      %% Line 2385
						      call 'erl_types':'t_reference'
							  ()
						  in  let <_cor170> =
							  %% Line 2385
							  call 'erl_types':'t_any'
							      ()
						      in  let <_cor171> =
							      %% Line 2385
							      call 'erl_types':'t_tuple'
								  ([_cor168|[_cor169|[_cor170|[]]]])
							  in  let <_cor172> =
								  %% Line 2382
								  call 'erl_types':'t_sup'
								      ([_cor160|%% Line 2383
										[_cor163|%% Line 2384
											 [_cor167|%% Line 2385
												  [_cor171|[]]]]])
							      in  %% Line 2382
								  [_cor172|%% Line 2385
									   []]
	  %% Line 2386
	  <'erlang','throw',1> when 'true' ->
	      let <_cor173> =
		  %% Line 2387
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2387
		  [_cor173|[]]
	  %% Line 2389
	  <'erlang','tl',1> when 'true' ->
	      let <_cor174> =
		  %% Line 2390
		  call 'erl_types':'t_cons'
		      ()
	      in  %% Line 2390
		  [_cor174|[]]
	  %% Line 2392
	  <'erlang','trunc',1> when 'true' ->
	      let <_cor175> =
		  %% Line 2393
		  call 'erl_types':'t_number'
		      ()
	      in  %% Line 2393
		  [_cor175|[]]
	  %% Line 2395
	  <'erlang','tuple_size',1> when 'true' ->
	      let <_cor176> =
		  %% Line 2396
		  call 'erl_types':'t_tuple'
		      ()
	      in  %% Line 2396
		  [_cor176|[]]
	  %% Line 2397
	  <'erlang','tuple_to_list',1> when 'true' ->
	      let <_cor177> =
		  %% Line 2398
		  call 'erl_types':'t_tuple'
		      ()
	      in  %% Line 2398
		  [_cor177|[]]
	  %% Line 2399
	  <'erlang','yield',0> when 'true' ->
	      %% Line 2400
	      []
	  %% Line 2402
	  <'ets','rename',2> when 'true' ->
	      let <_cor178> =
		  %% Line 2403
		  call 'erl_types':'t_atom'
		      ()
	      in  let <_cor179> =
		      %% Line 2403
		      call 'erl_types':'t_atom'
			  ()
		  in  %% Line 2403
		      [_cor178|[_cor179|[]]]
	  %% Line 2405
	  <'hipe_bifs','add_ref',2> when 'true' ->
	      let <_cor180> =
		  %% Line 2406
		  call 'erl_types':'t_mfa'
		      ()
	      in  let <_cor181> =
		      %% Line 2406
		      call 'erl_types':'t_mfa'
			  ()
		  in  let <_cor182> =
			  %% Line 2407
			  call 'erl_types':'t_integer'
			      ()
		      in  let <_cor184> =
			      %% Line 2408
			      call 'erl_types':'t_atom'
				  ('call')
			  in  let <_cor183> =
				  %% Line 2408
				  call 'erl_types':'t_atom'
				      ('load_mfa')
			      in  let <_cor185> =
				      %% Line 2408
				      call 'erl_types':'t_sup'
					  (_cor184, _cor183)
				  in  let <_7326> =
					  %% Line 2770
					  call 'erl_types':'t_nil'
					      ()
				      in  let <_5370> =
					      %% Line 2770
					      call 'erl_types':'t_integer'
						  ()
					  in  let <_cor186> =
						  %% Line 2770
						  call 'erl_types':'t_sup'
						      (_7326, _5370)
					      in  let <_cor188> =
						      %% Line 2410
						      call 'erl_types':'t_atom'
							  ('remote')
						  in  let <_cor187> =
							  %% Line 2410
							  call 'erl_types':'t_atom'
							      ('local')
						      in  let <_cor189> =
							      %% Line 2410
							      call 'erl_types':'t_sup'
								  (_cor188, _cor187)
							  in  let <_cor190> =
								  %% Line 2406
								  call 'erl_types':'t_tuple'
								      ([_cor181|%% Line 2407
										[_cor182|%% Line 2408
											 [_cor185|%% Line 2409
												  [_cor186|%% Line 2410
													   [_cor189|[]]]]]])
							      in  %% Line 2406
								  [_cor180|[_cor190|%% Line 2410
										    []]]
	  %% Line 2411
	  <'hipe_bifs','alloc_data',2> when 'true' ->
	      let <_cor191> =
		  %% Line 2412
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor192> =
		      %% Line 2412
		      call 'erl_types':'t_integer'
			  ()
		  in  %% Line 2412
		      [_cor191|[_cor192|[]]]
	  %% Line 2413
	  <'hipe_bifs','array',2> when 'true' ->
	      let <_cor193> =
		  %% Line 2414
		  call 'erl_types':'t_non_neg_fixnum'
		      ()
	      in  let <_3698> =
		      %% Line 2773
		      call 'erl_types':'t_nil'
			  ()
		  in  let <_4653> =
			  %% Line 2773
			  call 'erl_types':'t_atom'
			      ()
		      in  let <_1116> =
			      %% Line 2773
			      call 'erl_types':'t_fixnum'
				  ()
			  in  let <_cor194> =
				  %% Line 2773
				  call 'erl_types':'t_sup'
				      ([_3698|[_4653|[_1116|[]]]])
			      in  %% Line 2414
				  [_cor193|[_cor194|[]]]
	  %% Line 2415
	  <'hipe_bifs','array_length',1> when 'true' ->
	      let <_cor195> =
		  %% Line 2776
		  call 'erl_types':'t_integer'
		      ()
	      in  %% Line 2416
		  [_cor195|[]]
	  %% Line 2417
	  <'hipe_bifs','array_sub',2> when 'true' ->
	      let <_cor196> =
		  %% Line 2776
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor197> =
		      %% Line 2418
		      call 'erl_types':'t_non_neg_fixnum'
			  ()
		  in  %% Line 2418
		      [_cor196|[_cor197|[]]]
	  %% Line 2419
	  <'hipe_bifs','array_update',3> when 'true' ->
	      let <_cor198> =
		  %% Line 2776
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor199> =
		      %% Line 2420
		      call 'erl_types':'t_non_neg_fixnum'
			  ()
		  in  let <_1634> =
			  %% Line 2773
			  call 'erl_types':'t_nil'
			      ()
		      in  let <_5473> =
			      %% Line 2773
			      call 'erl_types':'t_atom'
				  ()
			  in  let <_1263> =
				  %% Line 2773
				  call 'erl_types':'t_fixnum'
				      ()
			      in  let <_cor200> =
				      %% Line 2773
				      call 'erl_types':'t_sup'
					  ([_1634|[_5473|[_1263|[]]]])
				  in  %% Line 2420
				      [_cor198|[_cor199|[_cor200|[]]]]
	  %% Line 2421
	  <'hipe_bifs','atom_to_word',1> when 'true' ->
	      let <_cor201> =
		  %% Line 2422
		  call 'erl_types':'t_atom'
		      ()
	      in  %% Line 2422
		  [_cor201|[]]
	  %% Line 2423
	  <'hipe_bifs','bif_address',3> when 'true' ->
	      let <_cor202> =
		  %% Line 2424
		  call 'erl_types':'t_atom'
		      ()
	      in  let <_cor203> =
		      %% Line 2424
		      call 'erl_types':'t_atom'
			  ()
		  in  let <_cor204> =
			  %% Line 2424
			  call 'erl_types':'t_arity'
			      ()
		      in  %% Line 2424
			  [_cor202|[_cor203|[_cor204|[]]]]
	  %% Line 2425
	  <'hipe_bifs','bitarray',2> when 'true' ->
	      let <_cor205> =
		  %% Line 2426
		  call 'erl_types':'t_non_neg_fixnum'
		      ()
	      in  let <_cor206> =
		      %% Line 2426
		      call 'erl_types':'t_boolean'
			  ()
		  in  %% Line 2426
		      [_cor205|[_cor206|[]]]
	  %% Line 2427
	  <'hipe_bifs','bitarray_sub',2> when 'true' ->
	      let <_cor207> =
		  %% Line 2782
		  call 'erl_types':'t_bitstr'
		      ()
	      in  let <_cor208> =
		      %% Line 2428
		      call 'erl_types':'t_non_neg_fixnum'
			  ()
		  in  %% Line 2428
		      [_cor207|[_cor208|[]]]
	  %% Line 2429
	  <'hipe_bifs','bitarray_update',3> when 'true' ->
	      let <_cor209> =
		  %% Line 2785
		  call 'erl_types':'t_binary'
		      ()
	      in  let <_cor210> =
		      %% Line 2430
		      call 'erl_types':'t_non_neg_fixnum'
			  ()
		  in  let <_cor211> =
			  %% Line 2430
			  call 'erl_types':'t_boolean'
			      ()
		      in  %% Line 2430
			  [_cor209|[_cor210|[_cor211|[]]]]
	  %% Line 2431
	  <'hipe_bifs','bytearray',2> when 'true' ->
	      let <_cor212> =
		  %% Line 2432
		  call 'erl_types':'t_non_neg_fixnum'
		      ()
	      in  let <_cor213> =
		      %% Line 2432
		      call 'erl_types':'t_byte'
			  ()
		  in  %% Line 2432
		      [_cor212|[_cor213|[]]]
	  %% Line 2433
	  <'hipe_bifs','bytearray_sub',2> when 'true' ->
	      let <_cor214> =
		  %% Line 2785
		  call 'erl_types':'t_binary'
		      ()
	      in  let <_cor215> =
		      %% Line 2434
		      call 'erl_types':'t_non_neg_fixnum'
			  ()
		  in  %% Line 2434
		      [_cor214|[_cor215|[]]]
	  %% Line 2435
	  <'hipe_bifs','bytearray_update',3> when 'true' ->
	      let <_cor216> =
		  %% Line 2785
		  call 'erl_types':'t_binary'
		      ()
	      in  let <_cor217> =
		      %% Line 2436
		      call 'erl_types':'t_non_neg_fixnum'
			  ()
		  in  let <_cor218> =
			  %% Line 2436
			  call 'erl_types':'t_byte'
			      ()
		      in  %% Line 2436
			  [_cor216|[_cor217|[_cor218|[]]]]
	  %% Line 2437
	  <'hipe_bifs','call_count_clear',1> when 'true' ->
	      let <_cor219> =
		  %% Line 2438
		  call 'erl_types':'t_mfa'
		      ()
	      in  %% Line 2438
		  [_cor219|[]]
	  %% Line 2439
	  <'hipe_bifs','call_count_get',1> when 'true' ->
	      let <_cor220> =
		  %% Line 2440
		  call 'erl_types':'t_mfa'
		      ()
	      in  %% Line 2440
		  [_cor220|[]]
	  %% Line 2441
	  <'hipe_bifs','call_count_off',1> when 'true' ->
	      let <_cor221> =
		  %% Line 2442
		  call 'erl_types':'t_mfa'
		      ()
	      in  %% Line 2442
		  [_cor221|[]]
	  %% Line 2443
	  <'hipe_bifs','call_count_on',1> when 'true' ->
	      let <_cor222> =
		  %% Line 2444
		  call 'erl_types':'t_mfa'
		      ()
	      in  %% Line 2444
		  [_cor222|[]]
	  %% Line 2445
	  <'hipe_bifs','check_crc',1> when 'true' ->
	      let <_cor223> =
		  %% Line 2711
		  call 'erl_types':'t_non_neg_integer'
		      ()
	      in  %% Line 2446
		  [_cor223|[]]
	  %% Line 2447
	  <'hipe_bifs','enter_code',2> when 'true' ->
	      let <_cor224> =
		  %% Line 2448
		  call 'erl_types':'t_binary'
		      ()
	      in  let <_cor226> =
		      %% Line 2448
		      call 'erl_types':'t_nil'
			  ()
		  in  let <_cor225> =
			  %% Line 2448
			  call 'erl_types':'t_tuple'
			      ()
		      in  let <_cor227> =
			      %% Line 2448
			      call 'erl_types':'t_sup'
				  (_cor226, _cor225)
			  in  %% Line 2448
			      [_cor224|[_cor227|[]]]
	  %% Line 2449
	  <'hipe_bifs','enter_sdesc',1> when 'true' ->
	      let <_cor228> =
		  %% Line 2450
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor229> =
		      %% Line 2450
		      call 'erl_types':'t_integer'
			  ()
		  in  let <_cor230> =
			  %% Line 2450
			  call 'erl_types':'t_integer'
			      ()
		      in  let <_cor231> =
			      %% Line 2450
			      call 'erl_types':'t_integer'
				  ()
			  in  let <_cor232> =
				  %% Line 2450
				  call 'erl_types':'t_integer'
				      ()
			      in  let <_cor233> =
				      %% Line 2450
				      call 'erl_types':'t_mfa'
					  ()
				  in  let <_cor234> =
					  %% Line 2450
					  call 'erl_types':'t_tuple'
					      ([_cor228|[_cor229|[_cor230|[_cor231|[_cor232|[_cor233|[]]]]]]])
				      in  %% Line 2450
					  [_cor234|[]]
	  %% Line 2451
	  <'hipe_bifs','find_na_or_make_stub',2> when 'true' ->
	      let <_cor235> =
		  %% Line 2452
		  call 'erl_types':'t_mfa'
		      ()
	      in  let <_cor236> =
		      %% Line 2452
		      call 'erl_types':'t_boolean'
			  ()
		  in  %% Line 2452
		      [_cor235|[_cor236|[]]]
	  %% Line 2453
	  <'hipe_bifs','fun_to_address',1> when 'true' ->
	      let <_cor237> =
		  %% Line 2454
		  call 'erl_types':'t_mfa'
		      ()
	      in  %% Line 2454
		  [_cor237|[]]
	  %% Line 2457
	  <'hipe_bifs','get_fe',2> when 'true' ->
	      let <_cor238> =
		  %% Line 2458
		  call 'erl_types':'t_atom'
		      ()
	      in  let <_cor239> =
		      %% Line 2458
		      call 'erl_types':'t_integer'
			  ()
		  in  let <_cor240> =
			  %% Line 2458
			  call 'erl_types':'t_integer'
			      ()
		      in  let <_cor241> =
			      %% Line 2458
			      call 'erl_types':'t_integer'
				  ()
			  in  let <_cor242> =
				  %% Line 2458
				  call 'erl_types':'t_tuple'
				      ([_cor239|[_cor240|[_cor241|[]]]])
			      in  %% Line 2458
				  [_cor238|[_cor242|[]]]
	  %% Line 2459
	  <'hipe_bifs','get_rts_param',1> when 'true' ->
	      let <_cor243> =
		  %% Line 2460
		  call 'erl_types':'t_fixnum'
		      ()
	      in  %% Line 2460
		  [_cor243|[]]
	  %% Line 2461
	  <'hipe_bifs','invalidate_funinfo_native_addresses',1> when 'true' ->
	      let <_cor244> =
		  %% Line 2462
		  call 'erl_types':'t_mfa'
		      ()
	      in  let <_cor245> =
		      %% Line 2462
		      call 'erl_types':'t_list'
			  (_cor244)
		  in  %% Line 2462
		      [_cor245|[]]
	  %% Line 2465
	  <'hipe_bifs','mark_referred_from',1> when 'true' ->
	      let <_cor246> =
		  %% Line 2466
		  call 'erl_types':'t_mfa'
		      ()
	      in  %% Line 2466
		  [_cor246|[]]
	  %% Line 2467
	  <'hipe_bifs','merge_term',1> when 'true' ->
	      let <_cor247> =
		  %% Line 2468
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2468
		  [_cor247|[]]
	  %% Line 2469
	  <'hipe_bifs','nstack_used_size',0> when 'true' ->
	      %% Line 2470
	      []
	  %% Line 2471
	  <'hipe_bifs','patch_call',3> when 'true' ->
	      let <_cor248> =
		  %% Line 2472
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor249> =
		      %% Line 2472
		      call 'erl_types':'t_integer'
			  ()
		  in  let <_4355> =
			  %% Line 2770
			  call 'erl_types':'t_nil'
			      ()
		      in  let <_1688> =
			      %% Line 2770
			      call 'erl_types':'t_integer'
				  ()
			  in  let <_cor250> =
				  %% Line 2770
				  call 'erl_types':'t_sup'
				      (_4355, _1688)
			      in  %% Line 2472
				  [_cor248|[_cor249|[_cor250|[]]]]
	  %% Line 2473
	  <'hipe_bifs','patch_insn',3> when 'true' ->
	      let <_cor251> =
		  %% Line 2474
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor252> =
		      %% Line 2474
		      call 'erl_types':'t_integer'
			  ()
		  in  let <_cor253> =
			  %% Line 2474
			  apply 't_insn_type'/0
			      ()
		      in  %% Line 2474
			  [_cor251|[_cor252|[_cor253|[]]]]
	  %% Line 2475
	  <'hipe_bifs','primop_address',1> when 'true' ->
	      let <_cor254> =
		  %% Line 2476
		  call 'erl_types':'t_atom'
		      ()
	      in  %% Line 2476
		  [_cor254|[]]
	  %% Line 2477
	  <'hipe_bifs','redirect_referred_from',1> when 'true' ->
	      let <_cor255> =
		  %% Line 2478
		  call 'erl_types':'t_mfa'
		      ()
	      in  %% Line 2478
		  [_cor255|[]]
	  %% Line 2479
	  <'hipe_bifs','ref',1> when 'true' ->
	      let <_4329> =
		  %% Line 2773
		  call 'erl_types':'t_nil'
		      ()
	      in  let <_3688> =
		      %% Line 2773
		      call 'erl_types':'t_atom'
			  ()
		  in  let <_3128> =
			  %% Line 2773
			  call 'erl_types':'t_fixnum'
			      ()
		      in  let <_cor256> =
			      %% Line 2773
			      call 'erl_types':'t_sup'
				  ([_4329|[_3688|[_3128|[]]]])
			  in  %% Line 2480
			      [_cor256|[]]
	  %% Line 2481
	  <'hipe_bifs','ref_get',1> when 'true' ->
	      let <_cor257> =
		  %% Line 2776
		  call 'erl_types':'t_integer'
		      ()
	      in  %% Line 2482
		  [_cor257|[]]
	  %% Line 2483
	  <'hipe_bifs','ref_set',2> when 'true' ->
	      let <_cor258> =
		  %% Line 2776
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_2401> =
		      %% Line 2773
		      call 'erl_types':'t_nil'
			  ()
		  in  let <_458> =
			  %% Line 2773
			  call 'erl_types':'t_atom'
			      ()
		      in  let <_4544> =
			      %% Line 2773
			      call 'erl_types':'t_fixnum'
				  ()
			  in  let <_cor259> =
				  %% Line 2773
				  call 'erl_types':'t_sup'
				      ([_2401|[_458|[_4544|[]]]])
			      in  %% Line 2484
				  [_cor258|[_cor259|[]]]
	  %% Line 2485
	  <'hipe_bifs','remove_refs_from',1> when 'true' ->
	      let <_cor260> =
		  %% Line 2486
		  call 'erl_types':'t_mfa'
		      ()
	      in  let <_cor261> =
		      %% Line 2486
		      call 'erl_types':'t_atom'
			  ('all')
		  in  let <_cor262> =
			  %% Line 2486
			  call 'erl_types':'t_sup'
			      ([_cor260|[_cor261|[]]])
		      in  %% Line 2486
			  [_cor262|[]]
	  %% Line 2487
	  <'hipe_bifs','set_funinfo_native_address',3> when 'true' ->
	      %% Line 2488
	      apply 'arg_types'/3
		  ('hipe_bifs', 'set_native_address', 3)
	  %% Line 2489
	  <'hipe_bifs','set_native_address',3> when 'true' ->
	      let <_cor263> =
		  %% Line 2490
		  call 'erl_types':'t_mfa'
		      ()
	      in  let <_cor264> =
		      %% Line 2490
		      call 'erl_types':'t_integer'
			  ()
		  in  let <_cor265> =
			  %% Line 2490
			  call 'erl_types':'t_boolean'
			      ()
		      in  %% Line 2490
			  [_cor263|[_cor264|[_cor265|[]]]]
	  %% Line 2491
	  <'hipe_bifs','set_native_address_in_fe',2> when 'true' ->
	      let <_cor266> =
		  %% Line 2492
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor267> =
		      %% Line 2492
		      call 'erl_types':'t_integer'
			  ()
		  in  %% Line 2492
		      [_cor266|[_cor267|[]]]
	  %% Line 2493
	  <'hipe_bifs','system_crc',1> when 'true' ->
	      let <_cor268> =
		  %% Line 2711
		  call 'erl_types':'t_non_neg_integer'
		      ()
	      in  %% Line 2494
		  [_cor268|[]]
	  %% Line 2495
	  <'hipe_bifs','term_to_word',1> when 'true' ->
	      let <_cor269> =
		  %% Line 2496
		  call 'erl_types':'t_any'
		      ()
	      in  %% Line 2496
		  [_cor269|[]]
	  %% Line 2497
	  <'hipe_bifs','update_code_size',3> when 'true' ->
	      let <_cor270> =
		  %% Line 2498
		  call 'erl_types':'t_atom'
		      ()
	      in  let <_cor272> =
		      %% Line 2498
		      call 'erl_types':'t_nil'
			  ()
		  in  let <_cor271> =
			  %% Line 2498
			  call 'erl_types':'t_binary'
			      ()
		      in  let <_cor273> =
			      %% Line 2498
			      call 'erl_types':'t_sup'
				  (_cor272, _cor271)
			  in  let <_cor274> =
				  %% Line 2498
				  call 'erl_types':'t_integer'
				      ()
			      in  %% Line 2498
				  [_cor270|[_cor273|[_cor274|[]]]]
	  %% Line 2499
	  <'hipe_bifs','write_u8',2> when 'true' ->
	      let <_cor275> =
		  %% Line 2500
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor276> =
		      %% Line 2500
		      call 'erl_types':'t_byte'
			  ()
		  in  %% Line 2500
		      [_cor275|[_cor276|[]]]
	  %% Line 2501
	  <'hipe_bifs','write_u32',2> when 'true' ->
	      let <_cor277> =
		  %% Line 2502
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor278> =
		      %% Line 2502
		      call 'erl_types':'t_integer'
			  ()
		  in  %% Line 2502
		      [_cor277|[_cor278|[]]]
	  %% Line 2503
	  <'hipe_bifs','write_u64',2> when 'true' ->
	      let <_cor279> =
		  %% Line 2504
		  call 'erl_types':'t_integer'
		      ()
	      in  let <_cor280> =
		      %% Line 2504
		      call 'erl_types':'t_integer'
			  ()
		  in  %% Line 2504
		      [_cor279|[_cor280|[]]]
	  %% Line 2506
	  <'lists','all',2> when 'true' ->
	      let <_cor282> =
		  %% Line 2507
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor281> =
		      %% Line 2507
		      call 'erl_types':'t_boolean'
			  ()
		  in  let <_cor283> =
			  %% Line 2507
			  call 'erl_types':'t_fun'
			      ([_cor282|[]], _cor281)
		      in  let <_cor284> =
			      %% Line 2507
			      call 'erl_types':'t_list'
				  ()
			  in  %% Line 2507
			      [_cor283|[_cor284|[]]]
	  %% Line 2508
	  <'lists','any',2> when 'true' ->
	      let <_cor286> =
		  %% Line 2509
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor285> =
		      %% Line 2509
		      call 'erl_types':'t_boolean'
			  ()
		  in  let <_cor287> =
			  %% Line 2509
			  call 'erl_types':'t_fun'
			      ([_cor286|[]], _cor285)
		      in  let <_cor288> =
			      %% Line 2509
			      call 'erl_types':'t_list'
				  ()
			  in  %% Line 2509
			      [_cor287|[_cor288|[]]]
	  %% Line 2510
	  <'lists','append',2> when 'true' ->
	      %% Line 2511
	      apply 'arg_types'/3
		  ('erlang', '++', 2)
	  %% Line 2512
	  <'lists','delete',2> when 'true' ->
	      let <_cor289> =
		  %% Line 2513
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor290> =
		      %% Line 2513
		      call 'erl_types':'t_maybe_improper_list'
			  ()
		  in  %% Line 2513
		      [_cor289|[_cor290|[]]]
	  %% Line 2514
	  <'lists','dropwhile',2> when 'true' ->
	      let <_cor292> =
		  %% Line 2515
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor291> =
		      %% Line 2515
		      call 'erl_types':'t_boolean'
			  ()
		  in  let <_cor293> =
			  %% Line 2515
			  call 'erl_types':'t_fun'
			      ([_cor292|[]], _cor291)
		      in  let <_cor294> =
			      %% Line 2515
			      call 'erl_types':'t_maybe_improper_list'
				  ()
			  in  %% Line 2515
			      [_cor293|[_cor294|[]]]
	  %% Line 2516
	  <'lists','filter',2> when 'true' ->
	      let <_cor296> =
		  %% Line 2517
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor295> =
		      %% Line 2517
		      call 'erl_types':'t_boolean'
			  ()
		  in  let <_cor297> =
			  %% Line 2517
			  call 'erl_types':'t_fun'
			      ([_cor296|[]], _cor295)
		      in  let <_cor298> =
			      %% Line 2517
			      call 'erl_types':'t_list'
				  ()
			  in  %% Line 2517
			      [_cor297|[_cor298|[]]]
	  %% Line 2518
	  <'lists','flatten',1> when 'true' ->
	      let <_cor299> =
		  %% Line 2519
		  call 'erl_types':'t_list'
		      ()
	      in  %% Line 2519
		  [_cor299|[]]
	  %% Line 2520
	  <'lists','flatmap',2> when 'true' ->
	      let <_cor301> =
		  %% Line 2521
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor300> =
		      %% Line 2521
		      call 'erl_types':'t_list'
			  ()
		  in  let <_cor302> =
			  %% Line 2521
			  call 'erl_types':'t_fun'
			      ([_cor301|[]], _cor300)
		      in  let <_cor303> =
			      %% Line 2521
			      call 'erl_types':'t_list'
				  ()
			  in  %% Line 2521
			      [_cor302|[_cor303|[]]]
	  %% Line 2522
	  <'lists','foreach',2> when 'true' ->
	      let <_cor305> =
		  %% Line 2523
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor304> =
		      %% Line 2523
		      call 'erl_types':'t_any'
			  ()
		  in  let <_cor306> =
			  %% Line 2523
			  call 'erl_types':'t_fun'
			      ([_cor305|[]], _cor304)
		      in  let <_cor307> =
			      %% Line 2523
			      call 'erl_types':'t_list'
				  ()
			  in  %% Line 2523
			      [_cor306|[_cor307|[]]]
	  %% Line 2524
	  <'lists','foldl',3> when 'true' ->
	      let <_cor309> =
		  %% Line 2525
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor310> =
		      %% Line 2525
		      call 'erl_types':'t_any'
			  ()
		  in  let <_cor308> =
			  %% Line 2525
			  call 'erl_types':'t_any'
			      ()
		      in  let <_cor311> =
			      %% Line 2525
			      call 'erl_types':'t_fun'
				  ([_cor309|[_cor310|[]]], _cor308)
			  in  let <_cor312> =
				  %% Line 2525
				  call 'erl_types':'t_any'
				      ()
			      in  let <_cor313> =
				      %% Line 2525
				      call 'erl_types':'t_list'
					  ()
				  in  %% Line 2525
				      [_cor311|[_cor312|[_cor313|[]]]]
	  %% Line 2526
	  <'lists','foldr',3> when 'true' ->
	      %% Line 2527
	      apply 'arg_types'/3
		  ('lists', 'foldl', 3)
	  %% Line 2528
	  <'lists','keydelete',3> when 'true' ->
	      let <_cor314> =
		  %% Line 2529
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor315> =
		      %% Line 2529
		      call 'erl_types':'t_pos_fixnum'
			  ()
		  in  let <_cor316> =
			  %% Line 2529
			  call 'erl_types':'t_maybe_improper_list'
			      ()
		      in  %% Line 2529
			  [_cor314|[_cor315|[_cor316|[]]]]
	  %% Line 2530
	  <'lists','keyfind',3> when 'true' ->
	      %% Line 2531
	      apply 'arg_types'/3
		  ('lists', 'keysearch', 3)
	  %% Line 2532
	  <'lists','keymap',3> when 'true' ->
	      let <_cor318> =
		  %% Line 2533
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor317> =
		      %% Line 2533
		      call 'erl_types':'t_any'
			  ()
		  in  let <_cor319> =
			  %% Line 2533
			  call 'erl_types':'t_fun'
			      ([_cor318|[]], _cor317)
		      in  let <_cor320> =
			      %% Line 2533
			      call 'erl_types':'t_pos_fixnum'
				  ()
			  in  let <_cor321> =
				  %% Line 2533
				  call 'erl_types':'t_tuple'
				      ()
			      in  let <_cor322> =
				      %% Line 2533
				      call 'erl_types':'t_list'
					  (_cor321)
				  in  %% Line 2533
				      [_cor319|[_cor320|[_cor322|[]]]]
	  %% Line 2534
	  <'lists','keymember',3> when 'true' ->
	      let <_cor323> =
		  %% Line 2535
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor324> =
		      %% Line 2535
		      call 'erl_types':'t_pos_fixnum'
			  ()
		  in  let <_cor325> =
			  %% Line 2535
			  call 'erl_types':'t_maybe_improper_list'
			      ()
		      in  %% Line 2535
			  [_cor323|[_cor324|[_cor325|[]]]]
	  %% Line 2536
	  <'lists','keymerge',3> when 'true' ->
	      let <_cor326> =
		  %% Line 2537
		  call 'erl_types':'t_pos_fixnum'
		      ()
	      in  let <_cor327> =
		      %% Line 2537
		      call 'erl_types':'t_tuple'
			  ()
		  in  let <_cor328> =
			  %% Line 2537
			  call 'erl_types':'t_list'
			      (_cor327)
		      in  let <_cor329> =
			      %% Line 2537
			      call 'erl_types':'t_tuple'
				  ()
			  in  let <_cor330> =
				  %% Line 2537
				  call 'erl_types':'t_list'
				      (_cor329)
			      in  %% Line 2537
				  [_cor326|[_cor328|[_cor330|[]]]]
	  %% Line 2538
	  <'lists','keyreplace',4> when 'true' ->
	      let <_cor331> =
		  %% Line 2539
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor332> =
		      %% Line 2539
		      call 'erl_types':'t_pos_fixnum'
			  ()
		  in  let <_cor333> =
			  %% Line 2539
			  call 'erl_types':'t_maybe_improper_list'
			      ()
		      in  let <_cor334> =
			      %% Line 2539
			      call 'erl_types':'t_tuple'
				  ()
			  in  %% Line 2539
			      [_cor331|[_cor332|[_cor333|[_cor334|[]]]]]
	  %% Line 2540
	  <'lists','keysearch',3> when 'true' ->
	      let <_cor335> =
		  %% Line 2541
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor336> =
		      %% Line 2541
		      call 'erl_types':'t_pos_fixnum'
			  ()
		  in  let <_cor337> =
			  %% Line 2541
			  call 'erl_types':'t_maybe_improper_list'
			      ()
		      in  %% Line 2541
			  [_cor335|[_cor336|[_cor337|[]]]]
	  %% Line 2542
	  <'lists','keysort',2> when 'true' ->
	      let <_cor338> =
		  %% Line 2543
		  call 'erl_types':'t_pos_fixnum'
		      ()
	      in  let <_cor339> =
		      %% Line 2543
		      call 'erl_types':'t_tuple'
			  ()
		  in  let <_cor340> =
			  %% Line 2543
			  call 'erl_types':'t_list'
			      (_cor339)
		      in  %% Line 2543
			  [_cor338|[_cor340|[]]]
	  %% Line 2544
	  <'lists','last',1> when 'true' ->
	      let <_cor341> =
		  %% Line 2545
		  call 'erl_types':'t_nonempty_list'
		      ()
	      in  %% Line 2545
		  [_cor341|[]]
	  %% Line 2546
	  <'lists','map',2> when 'true' ->
	      let <_cor343> =
		  %% Line 2547
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor342> =
		      %% Line 2547
		      call 'erl_types':'t_any'
			  ()
		  in  let <_cor344> =
			  %% Line 2547
			  call 'erl_types':'t_fun'
			      ([_cor343|[]], _cor342)
		      in  let <_cor345> =
			      %% Line 2547
			      call 'erl_types':'t_list'
				  ()
			  in  %% Line 2547
			      [_cor344|[_cor345|[]]]
	  %% Line 2548
	  <'lists','mapfoldl',3> when 'true' ->
	      let <_cor349> =
		  %% Line 2549
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor350> =
		      %% Line 2549
		      call 'erl_types':'t_any'
			  ()
		  in  let <_cor346> =
			  %% Line 2549
			  call 'erl_types':'t_any'
			      ()
		      in  let <_cor347> =
			      %% Line 2549
			      call 'erl_types':'t_any'
				  ()
			  in  let <_cor348> =
				  %% Line 2549
				  call 'erl_types':'t_tuple'
				      ([_cor346|[_cor347|[]]])
			      in  let <_cor351> =
				      %% Line 2549
				      call 'erl_types':'t_fun'
					  ([_cor349|[_cor350|[]]], _cor348)
				  in  let <_cor352> =
					  %% Line 2549
					  call 'erl_types':'t_any'
					      ()
				      in  let <_cor353> =
					      %% Line 2549
					      call 'erl_types':'t_list'
						  ()
					  in  %% Line 2549
					      [_cor351|[_cor352|[_cor353|[]]]]
	  %% Line 2550
	  <'lists','mapfoldr',3> when 'true' ->
	      %% Line 2551
	      apply 'arg_types'/3
		  ('lists', 'mapfoldl', 3)
	  %% Line 2552
	  <'lists','max',1> when 'true' ->
	      let <_cor354> =
		  %% Line 2553
		  call 'erl_types':'t_nonempty_list'
		      ()
	      in  %% Line 2553
		  [_cor354|[]]
	  %% Line 2554
	  <'lists','member',2> when 'true' ->
	      let <_cor355> =
		  %% Line 2555
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor356> =
		      %% Line 2555
		      call 'erl_types':'t_list'
			  ()
		  in  %% Line 2555
		      [_cor355|[_cor356|[]]]
	  %% Line 2558
	  <'lists','merge',2> when 'true' ->
	      let <_cor357> =
		  %% Line 2559
		  call 'erl_types':'t_list'
		      ()
	      in  let <_cor358> =
		      %% Line 2559
		      call 'erl_types':'t_list'
			  ()
		  in  %% Line 2559
		      [_cor357|[_cor358|[]]]
	  %% Line 2564
	  <'lists','min',1> when 'true' ->
	      let <_cor359> =
		  %% Line 2565
		  call 'erl_types':'t_nonempty_list'
		      ()
	      in  %% Line 2565
		  [_cor359|[]]
	  %% Line 2566
	  <'lists','nth',2> when 'true' ->
	      let <_cor360> =
		  %% Line 2567
		  call 'erl_types':'t_pos_fixnum'
		      ()
	      in  let <_cor361> =
		      %% Line 2567
		      call 'erl_types':'t_nonempty_list'
			  ()
		  in  %% Line 2567
		      [_cor360|[_cor361|[]]]
	  %% Line 2568
	  <'lists','nthtail',2> when 'true' ->
	      let <_cor362> =
		  %% Line 2569
		  call 'erl_types':'t_non_neg_fixnum'
		      ()
	      in  let <_cor363> =
		      %% Line 2569
		      call 'erl_types':'t_nonempty_list'
			  ()
		  in  %% Line 2569
		      [_cor362|[_cor363|[]]]
	  %% Line 2570
	  <'lists','partition',2> when 'true' ->
	      %% Line 2571
	      apply 'arg_types'/3
		  ('lists', 'filter', 2)
	  %% Line 2572
	  <'lists','reverse',1> when 'true' ->
	      let <_cor364> =
		  %% Line 2573
		  call 'erl_types':'t_list'
		      ()
	      in  %% Line 2573
		  [_cor364|[]]
	  %% Line 2574
	  <'lists','reverse',2> when 'true' ->
	      let <_cor365> =
		  %% Line 2575
		  call 'erl_types':'t_list'
		      ()
	      in  let <_cor366> =
		      %% Line 2575
		      call 'erl_types':'t_any'
			  ()
		  in  %% Line 2575
		      [_cor365|[_cor366|[]]]
	  %% Line 2576
	  <'lists','sort',1> when 'true' ->
	      let <_cor367> =
		  %% Line 2577
		  call 'erl_types':'t_list'
		      ()
	      in  %% Line 2577
		  [_cor367|[]]
	  %% Line 2578
	  <'lists','sort',2> when 'true' ->
	      let <_cor369> =
		  %% Line 2579
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor370> =
		      %% Line 2579
		      call 'erl_types':'t_any'
			  ()
		  in  let <_cor368> =
			  %% Line 2579
			  call 'erl_types':'t_boolean'
			      ()
		      in  let <_cor371> =
			      %% Line 2579
			      call 'erl_types':'t_fun'
				  ([_cor369|[_cor370|[]]], _cor368)
			  in  let <_cor372> =
				  %% Line 2579
				  call 'erl_types':'t_list'
				      ()
			      in  %% Line 2579
				  [_cor371|[_cor372|[]]]
	  %% Line 2580
	  <'lists','split',2> when 'true' ->
	      let <_cor373> =
		  %% Line 2581
		  call 'erl_types':'t_non_neg_fixnum'
		      ()
	      in  let <_cor374> =
		      %% Line 2581
		      call 'erl_types':'t_maybe_improper_list'
			  ()
		  in  %% Line 2581
		      [_cor373|[_cor374|[]]]
	  %% Line 2582
	  <'lists','splitwith',2> when 'true' ->
	      let <_cor376> =
		  %% Line 2583
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor375> =
		      %% Line 2583
		      call 'erl_types':'t_boolean'
			  ()
		  in  let <_cor377> =
			  %% Line 2583
			  call 'erl_types':'t_fun'
			      ([_cor376|[]], _cor375)
		      in  let <_cor378> =
			      %% Line 2583
			      call 'erl_types':'t_maybe_improper_list'
				  ()
			  in  %% Line 2583
			      [_cor377|[_cor378|[]]]
	  %% Line 2584
	  <'lists','subtract',2> when 'true' ->
	      %% Line 2585
	      apply 'arg_types'/3
		  ('erlang', '--', 2)
	  %% Line 2586
	  <'lists','takewhile',2> when 'true' ->
	      let <_cor380> =
		  %% Line 2587
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor379> =
		      %% Line 2587
		      call 'erl_types':'t_boolean'
			  ()
		  in  let <_cor381> =
			  %% Line 2587
			  call 'erl_types':'t_fun'
			      ([_cor380|[]], _cor379)
		      in  let <_cor382> =
			      %% Line 2587
			      call 'erl_types':'t_maybe_improper_list'
				  ()
			  in  %% Line 2587
			      [_cor381|[_cor382|[]]]
	  %% Line 2588
	  <'lists','usort',1> when 'true' ->
	      %% Line 2589
	      apply 'arg_types'/3
		  ('lists', 'sort', 1)
	  %% Line 2590
	  <'lists','usort',2> when 'true' ->
	      %% Line 2591
	      apply 'arg_types'/3
		  ('lists', 'sort', 2)
	  %% Line 2592
	  <'lists','unzip',1> when 'true' ->
	      let <_cor383> =
		  %% Line 2593
		  call 'erl_types':'t_tuple'
		      (2)
	      in  let <_cor384> =
		      %% Line 2593
		      call 'erl_types':'t_list'
			  (_cor383)
		  in  %% Line 2593
		      [_cor384|[]]
	  %% Line 2594
	  <'lists','unzip3',1> when 'true' ->
	      let <_cor385> =
		  %% Line 2595
		  call 'erl_types':'t_tuple'
		      (3)
	      in  let <_cor386> =
		      %% Line 2595
		      call 'erl_types':'t_list'
			  (_cor385)
		  in  %% Line 2595
		      [_cor386|[]]
	  %% Line 2596
	  <'lists','zip',2> when 'true' ->
	      let <_cor387> =
		  %% Line 2597
		  call 'erl_types':'t_list'
		      ()
	      in  let <_cor388> =
		      %% Line 2597
		      call 'erl_types':'t_list'
			  ()
		  in  %% Line 2597
		      [_cor387|[_cor388|[]]]
	  %% Line 2598
	  <'lists','zip3',3> when 'true' ->
	      let <_cor389> =
		  %% Line 2599
		  call 'erl_types':'t_list'
		      ()
	      in  let <_cor390> =
		      %% Line 2599
		      call 'erl_types':'t_list'
			  ()
		  in  let <_cor391> =
			  %% Line 2599
			  call 'erl_types':'t_list'
			      ()
		      in  %% Line 2599
			  [_cor389|[_cor390|[_cor391|[]]]]
	  %% Line 2600
	  <'lists','zipwith',3> when 'true' ->
	      let <_cor393> =
		  %% Line 2601
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor394> =
		      %% Line 2601
		      call 'erl_types':'t_any'
			  ()
		  in  let <_cor392> =
			  %% Line 2601
			  call 'erl_types':'t_any'
			      ()
		      in  let <_cor395> =
			      %% Line 2601
			      call 'erl_types':'t_fun'
				  ([_cor393|[_cor394|[]]], _cor392)
			  in  let <_cor396> =
				  %% Line 2601
				  call 'erl_types':'t_list'
				      ()
			      in  let <_cor397> =
				      %% Line 2601
				      call 'erl_types':'t_list'
					  ()
				  in  %% Line 2601
				      [_cor395|[_cor396|[_cor397|[]]]]
	  %% Line 2602
	  <'lists','zipwith3',4> when 'true' ->
	      let <_cor399> =
		  %% Line 2603
		  call 'erl_types':'t_any'
		      ()
	      in  let <_cor400> =
		      %% Line 2603
		      call 'erl_types':'t_any'
			  ()
		  in  let <_cor401> =
			  %% Line 2603
			  call 'erl_types':'t_any'
			      ()
		      in  let <_cor398> =
			      %% Line 2603
			      call 'erl_types':'t_any'
				  ()
			  in  let <_cor402> =
				  %% Line 2603
				  call 'erl_types':'t_fun'
				      ([_cor399|[_cor400|[_cor401|[]]]], _cor398)
			      in  let <_cor403> =
				      %% Line 2603
				      call 'erl_types':'t_list'
					  ()
				  in  let <_cor404> =
					  %% Line 2603
					  call 'erl_types':'t_list'
					      ()
				      in  let <_cor405> =
					      %% Line 2603
					      call 'erl_types':'t_list'
						  ()
					  in  %% Line 2603
					      [_cor402|[_cor403|[_cor404|[_cor405|[]]]]]
	  %% Line 2606
	  <'string','chars',2> when 'true' ->
	      let <_cor406> =
		  %% Line 2607
		  call 'erl_types':'t_char'
		      ()
	      in  let <_cor407> =
		      %% Line 2607
		      call 'erl_types':'t_non_neg_integer'
			  ()
		  in  %% Line 2607
		      [_cor406|[_cor407|[]]]
	  %% Line 2608
	  <'string','chars',3> when 'true' ->
	      let <_cor408> =
		  %% Line 2609
		  call 'erl_types':'t_char'
		      ()
	      in  let <_cor409> =
		      %% Line 2609
		      call 'erl_types':'t_non_neg_integer'
			  ()
		  in  let <_cor410> =
			  %% Line 2609
			  call 'erl_types':'t_any'
			      ()
		      in  %% Line 2609
			  [_cor408|[_cor409|[_cor410|[]]]]
	  %% Line 2611
	  <M,F,A>
	      when try
		    let <_cor411> =
			call 'erlang':'is_atom'
			    (_cor2)
		    in  let <_cor412> =
			    call 'erlang':'is_atom'
				(_cor1)
			in  let <_cor413> =
				%% Line 2612
				call 'erlang':'is_integer'
				    (_cor0)
			    in  let <_cor414> =
				    %% Line 2612
				    call 'erlang':'=<'
					(0, _cor0)
				in  let <_cor415> =
					%% Line 2612
					call 'erlang':'=<'
					    (_cor0, 255)
				    in  let <_cor416> =
					    call 'erlang':'and'
						(_cor414, _cor415)
					in  let <_cor417> =
						call 'erlang':'and'
						    (_cor413, _cor416)
					    in  let <_cor418> =
						    call 'erlang':'and'
							(_cor412, _cor417)
						in  call 'erlang':'and'
							(_cor411, _cor418)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 2613
	      'unknown'
	  ( <_cor421,_cor420,_cor419> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'arg_types',3}}] )
	    -| ['compiler_generated'] )
	end
'is_known'/3 =
    %% Line 2618
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 2619
	    apply 'arg_types'/3
		(_cor2, _cor1, _cor0)
	in  %% Line 2619
	    call 'erlang':'=/='
		(_cor3, 'unknown')
'opaque_args'/5 =
    %% Line 2626
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_M,_X_F,_X_A,_X_Xs,'universe'> when 'true' ->
	      []
	  %% Line 2627
	  <M,F,A,Xs,Opaques> when 'true' ->
	      let <_809> =
		  %% Line 2628
		  apply 'kind_of_check'/3
		      (_cor4, _cor3, _cor2)
	      in  %% Line 2628
		  case _809 of
		    %% Line 2629
		    <'record'> when 'true' ->
			%% Line 2630
			case _cor1 of
			  <[X|[Y|_cor26]]> when 'true' ->
			      let <_1435> =
				  %% Line 2632
				  call 'erl_types':'t_is_tuple'
				      (X, _cor0)
			      in  let <_cor9> =
				      %% Line 2632
				      case _1435 of
					%% Line 2633
					<'true'> when 'true' ->
					    let <_2054> =
						%% Line 2634
						call 'erl_types':'t_tuple_subtypes'
						    (X, _cor0)
					    in  %% Line 2634
						case _2054 of
						  %% Line 2635
						  <'unknown'> when 'true' ->
						      'false'
						  %% Line 2636
						  <List>
						      when try
							    let <_cor6> =
								call 'erlang':'length'
								    (_2054)
							    in  call 'erlang':'>='
								    (_cor6, 1)
							of <Try> ->
							    Try
							catch <T,R> ->
							    'false' ->
						      apply 'opaque_recargs'/3
							  (_2054, Y, _cor0)
						  ( <_cor7> when 'true' ->
							primop 'match_fail'
							    ({'case_clause',_2054})
						    -| ['compiler_generated'] )
						end
					%% Line 2638
					<'false'> when 'true' ->
					    call 'erl_types':'t_has_opaque_subtype'
						(X, _cor0)
					( <_cor8> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_1435})
					  -| ['compiler_generated'] )
				      end
				  in  %% Line 2632
				      ( case _cor9 of
					  <'true'> when 'true' ->
					      ( [1]
						-| ['compiler_generated'] )
					  ( <'false'> when 'true' ->
						[]
					    -| ['compiler_generated'] )
					  ( <_cor10> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_cor9})
					    -| ['compiler_generated'] )
					end
					-| ['list_comprehension'] )
			  ( <_cor5> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor1})
			    -| ['compiler_generated'] )
			end
		    %% Line 2640
		    <'subtype'> when 'true' ->
			%% Line 2641
			( letrec
			      'lc$^0'/1 =
				  fun (_cor16) ->
				      case _cor16 of
					<[%% Line 2642
					  {N,X}|_cor12]> when 'true' ->
					    let <_2777> =
						%% Line 2643
						call 'erl_types':'t_has_opaque_subtype'
						    (X, _cor0)
					    in  %% Line 2643
						( case _2777 of
						    <'true'> when 'true' ->
							let <_cor17> =
							    apply 'lc$^0'/1
								(_cor12)
							in  ( [N|_cor17]
							      -| ['compiler_generated'] )
						    ( <'false'> when 'true' ->
							  apply 'lc$^0'/1
							      (_cor12)
						      -| ['compiler_generated'] )
						    ( <_cor18> when 'true' ->
							  primop 'match_fail'
							      ({'case_clause',_2777})
						      -| ['compiler_generated'] )
						  end
						  -| ['list_comprehension'] )
					( <[_cor11|_cor12]> when 'true' ->
					      %% Line 2642
					      apply 'lc$^0'/1
						  (_cor12)
					  -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_7495> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor16})
						-| [{'function_name',{'lc$^0',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  let <_cor13> =
				  %% Line 2642
				  call 'erlang':'length'
				      (_cor1)
			      in  let <_cor14> =
				      %% Line 2642
				      call 'lists':'seq'
					  (1, _cor13)
				  in  let <_cor15> =
					  %% Line 2642
					  call 'lists':'zip'
					      (_cor14, _cor1)
				      in  apply 'lc$^0'/1
					      (_cor15)
			  -| ['list_comprehension'] )
		    %% Line 2644
		    <'find_unknown'> when 'true' ->
			%% Line 2645
			case _cor1 of
			  <[L|[R|[]]]> when 'true' ->
			      %% Line 2646
			      call 'erl_types':'t_find_unknown_opaque'
				  (L, R, _cor0)
			  ( <_cor19> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor1})
			    -| ['compiler_generated'] )
			end
		    %% Line 2647
		    <'no_check'> when 'true' ->
			[]
		    ( <_cor20> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_809})
		      -| ['compiler_generated'] )
		  end
	end
'kind_of_check'/3 =
    %% Line 2650
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'erlang','is_record',3> when 'true' ->
	      %% Line 2651
	      'record'
	  %% Line 2652
	  <'erlang','is_record',2> when 'true' ->
	      %% Line 2653
	      'record'
	  %% Line 2654
	  <'erlang',F,A> when 'true' ->
	      let <_5090> =
		  %% Line 2655
		  call 'erl_internal':'guard_bif'
		      (_cor1, _cor0)
	      in  let <_cor5> =
		      %% Line 2655
		      ( case _5090 of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				'true'
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erl_internal':'bool_op'
				    (_cor1, _cor0)
			    -| ['compiler_generated'] )
			  ( <_cor3> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {( 'badarg'
					    -| ['compiler_generated'] ),_5090}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  in  %% Line 2655
		      case _cor5 of
			%% Line 2656
			<'true'> when 'true' ->
			    'subtype'
			%% Line 2657
			<'false'> when 'true' ->
			    let <_4810> =
				%% Line 2658
				call 'erl_internal':'comp_op'
				    (_cor1, _cor0)
			    in  %% Line 2658
				case _4810 of
				  %% Line 2659
				  <'true'> when 'true' ->
				      'find_unknown'
				  %% Line 2660
				  <'false'> when 'true' ->
				      'no_check'
				  ( <_cor6> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_4810})
				    -| ['compiler_generated'] )
				end
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor5})
			  -| ['compiler_generated'] )
		      end
	  %% Line 2663
	  <_X_M,_X_F,_X_A> when 'true' ->
	      'no_check'
	end
'opaque_recargs'/3 =
    %% Line 2665
    fun (_cor2,_cor1,_cor0) ->
	let <Fun> =
	    %% Line 2666
	    fun (_cor5) ->
		%% Line 2667
		case call 'erl_types':'t_tuple_args'
			 (_cor5, _cor0) of
		  %% Line 2668
		  <[Tag|_cor11]> when 'true' ->
		      let <_cor3> =
			  apply 'check_record_tag'/3
			      (Tag, _cor1, _cor0)
		      in  call 'erl_types':'t_is_none'
			      (_cor3)
		  %% Line 2669
		  <_cor12> when 'true' ->
		      'false'
		end
	in  %% Line 2672
	    call 'lists':'all'
		(Fun, _cor2)
'check_fun_application'/3 =
    %% Line 2674
    fun (_cor2,_cor1,_cor0) ->
	let <_7336> =
	    %% Line 2675
	    call 'erl_types':'t_is_fun'
		(_cor2, _cor0)
	in  %% Line 2675
	    case _7336 of
	      %% Line 2676
	      <'true'> when 'true' ->
		  let <_2354> =
		      %% Line 2677
		      call 'erl_types':'t_fun_args'
			  (_cor2, _cor0)
		  in  %% Line 2677
		      case _2354 of
			%% Line 2678
			<'unknown'> when 'true' ->
			    let <_cor3> =
				%% Line 2679
				call 'erl_types':'t_fun_range'
				    (_cor2, _cor0)
			    in  let <_599> =
				    %% Line 2679
				    call 'erl_types':'t_is_none_or_unit'
					(_cor3)
				in  %% Line 2679
				    case _599 of
				      %% Line 2680
				      <'true'> when 'true' ->
					  'error'
				      %% Line 2681
				      <'false'> when 'true' ->
					  'ok'
				      ( <_cor4> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_599})
					-| ['compiler_generated'] )
				    end
			%% Line 2683
			<FunDom>
			    when try
				  let <_cor6> =
				      call 'erlang':'length'
					  (_2354)
				  in  let <_cor5> =
					  call 'erlang':'length'
					      (_cor1)
				      in  call 'erlang':'=:='
					      (_cor6, _cor5)
			      of <Try> ->
				  Try
			      catch <T,R> ->
				  'false' ->
			    let <_cor7> =
				%% Line 2684
				apply 'inf_lists'/3
				    (_2354, _cor1, _cor0)
			    in  let <_4857> =
				    call 'erlang':'make_fun'
					('erl_types', 't_is_none_or_unit', 1)
				in  let <_2022> =
					call 'lists':'any'
					    (_4857, _cor7)
				    in  %% Line 2684
					case _2022 of
					  %% Line 2685
					  <'true'> when 'true' ->
					      'error'
					  %% Line 2686
					  <'false'> when 'true' ->
					      let <_cor8> =
						  %% Line 2687
						  call 'erl_types':'t_fun_range'
						      (_cor2, _cor0)
					      in  let <_5266> =
						      %% Line 2687
						      call 'erl_types':'t_is_none_or_unit'
							  (_cor8)
						  in  %% Line 2687
						      case _5266 of
							%% Line 2688
							<'true'> when 'true' ->
							    'error'
							%% Line 2689
							<'false'> when 'true' ->
							    'ok'
							( <_cor9> when 'true' ->
							      primop 'match_fail'
								  ({'case_clause',_5266})
							  -| ['compiler_generated'] )
						      end
					  ( <_cor10> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_2022})
					    -| ['compiler_generated'] )
					end
			%% Line 2692
			<_cor16> when 'true' ->
			    'error'
		      end
	      %% Line 2694
	      <'false'> when 'true' ->
		  %% Line 2695
		  'error'
	      ( <_cor12> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_7336})
		-| ['compiler_generated'] )
	    end
't_system_cpu_topology_level_entry'/0 =
    %% Line 2722
    fun () ->
	let <_cor4> =
	    %% Line 2734
	    call 'erl_types':'t_atoms'
		(['core'|['node'|['processor'|['thread']]]])
	in  let <_cor5> =
		%% Line 2724
		apply 't_system_cpu_topology_sublevel_entry'/0
		    ()
	    in  let <_cor6> =
		    %% Line 2723
		    call 'erl_types':'t_tuple'
			([_cor4|%% Line 2724
				[_cor5|[]]])
		in  let <_cor0> =
			%% Line 2734
			call 'erl_types':'t_atoms'
			    (['core'|['node'|['processor'|['thread']]]])
		    in  let <_cor1> =
			    %% Line 2740
			    call 'erl_types':'t_nil'
				()
			in  let <_cor2> =
				%% Line 2727
				apply 't_system_cpu_topology_sublevel_entry'/0
				    ()
			    in  let <_cor3> =
				    %% Line 2725
				    call 'erl_types':'t_tuple'
					([_cor0|%% Line 2726
						[_cor1|%% Line 2727
						       [_cor2|[]]]])
				in  %% Line 2723
				    call 'erl_types':'t_sup'
					(_cor6, _cor3)
't_system_cpu_topology_sublevel_entry'/0 =
    %% Line 2729
    fun () ->
	let <_cor0> =
	    %% Line 2737
	    call 'erl_types':'t_atom'
		('logical')
	in  let <_cor1> =
		%% Line 2737
		call 'erl_types':'t_non_neg_fixnum'
		    ()
	    in  let <_cor2> =
		    %% Line 2737
		    call 'erl_types':'t_tuple'
			([_cor0|[_cor1|[]]])
		in  let <_cor0> =
			%% Line 2731
			call 'erl_types':'t_tuple'
			    ()
		    in  let <_cor1> =
			    %% Line 2731
			    call 'erl_types':'t_list'
				(_cor0)
			in  %% Line 2730
			    call 'erl_types':'t_sup'
				(_cor2, _cor1)
't_internal_cpu_topology'/0 =
    %% Line 2742
    fun () ->
	let <_cor1> =
	    %% Line 2743
	    call 'erl_types':'t_atom'
		('cpu')
	in  let <_cor2> =
		%% Line 2744
		call 'erl_types':'t_non_neg_fixnum'
		    ()
	    in  let <_cor3> =
		    %% Line 2745
		    call 'erl_types':'t_non_neg_fixnum'
			()
		in  let <_cor4> =
			%% Line 2746
			call 'erl_types':'t_non_neg_fixnum'
			    ()
		    in  let <_cor5> =
			    %% Line 2747
			    call 'erl_types':'t_non_neg_fixnum'
				()
			in  let <_cor6> =
				%% Line 2748
				call 'erl_types':'t_non_neg_fixnum'
				    ()
			    in  let <_cor7> =
				    %% Line 2749
				    call 'erl_types':'t_non_neg_fixnum'
					()
				in  let <_cor8> =
					%% Line 2743
					call 'erl_types':'t_tuple'
					    ([_cor1|%% Line 2744
						    [_cor2|%% Line 2745
							   [_cor3|%% Line 2746
								  [_cor4|%% Line 2747
									 [_cor5|%% Line 2748
										[_cor6|%% Line 2749
										       [_cor7|[]]]]]]]])
				    in  let <_cor9> =
					    %% Line 2743
					    call 'erl_types':'t_list'
						(_cor8)
					in  let <_cor0> =
						%% Line 2750
						call 'erl_types':'t_atom'
						    ('undefined')
					    in  %% Line 2743
						call 'erl_types':'t_sup'
						    (_cor9, _cor0)
't_scheduler_bind_type_results'/0 =
    %% Line 2752
    fun () ->
	let <_cor0> =
	    %% Line 2753
	    call 'erl_types':'t_atom'
		('no_node_processor_spread')
	in  let <_cor1> =
		%% Line 2754
		call 'erl_types':'t_atom'
		    ('no_node_thread_spread')
	    in  let <_cor2> =
		    %% Line 2755
		    call 'erl_types':'t_atom'
			('no_spread')
		in  let <_cor3> =
			%% Line 2756
			call 'erl_types':'t_atom'
			    ('processor_spread')
		    in  let <_cor4> =
			    %% Line 2757
			    call 'erl_types':'t_atom'
				('spread')
			in  let <_cor5> =
				%% Line 2758
				call 'erl_types':'t_atom'
				    ('thread_spread')
			    in  let <_cor6> =
				    %% Line 2759
				    call 'erl_types':'t_atom'
					('thread_no_node_processor_spread')
				in  let <_cor7> =
					%% Line 2760
					call 'erl_types':'t_atom'
					    ('unbound')
				    in  %% Line 2753
					call 'erl_types':'t_sup'
					    ([_cor0|%% Line 2754
						    [_cor1|%% Line 2755
							   [_cor2|%% Line 2756
								  [_cor3|%% Line 2757
									 [_cor4|%% Line 2758
										[_cor5|%% Line 2759
										       [_cor6|%% Line 2760
											      [_cor7|[]]]]]]]]])
't_system_multi_scheduling'/0 =
    %% Line 2762
    fun () ->
	let <_cor0> =
	    %% Line 2763
	    call 'erl_types':'t_atom'
		('blocked')
	in  let <_cor1> =
		%% Line 2763
		call 'erl_types':'t_atom'
		    ('disabled')
	    in  let <_cor2> =
		    %% Line 2763
		    call 'erl_types':'t_atom'
			('enabled')
		in  %% Line 2763
		    call 'erl_types':'t_sup'
			([_cor0|[_cor1|[_cor2|[]]]])
't_insn_type'/0 =
    %% Line 2787
    fun () ->
	let <_cor0> =
	    %% Line 2789
	    call 'erl_types':'t_atom'
		('load_mfa')
	in  let <_cor1> =
		%% Line 2790
		call 'erl_types':'t_atom'
		    ('x86_abs_pcrel')
	    in  let <_cor2> =
		    %% Line 2791
		    call 'erl_types':'t_atom'
			('atom')
		in  let <_cor3> =
			%% Line 2792
			call 'erl_types':'t_atom'
			    ('constant')
		    in  let <_cor4> =
			    %% Line 2793
			    call 'erl_types':'t_atom'
				('c_const')
			in  let <_cor5> =
				%% Line 2794
				call 'erl_types':'t_atom'
				    ('closure')
			    in  %% Line 2788
				call 'erl_types':'t_sup'
				    ([_cor0|%% Line 2790
					    [_cor1|%% Line 2791
						   [_cor2|%% Line 2792
							  [_cor3|%% Line 2793
								 [_cor4|%% Line 2794
									[_cor5|[]]]]]]])
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('erl_bif_types')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('erl_bif_types', _cor0)
end