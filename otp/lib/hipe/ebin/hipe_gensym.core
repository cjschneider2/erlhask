module 'hipe_gensym' ['get_label'/0,
		      'get_label'/1,
		      'get_next_label'/0,
		      'get_next_label'/1,
		      'get_next_var'/0,
		      'get_next_var'/1,
		      'get_var'/0,
		      'get_var'/1,
		      'init'/1,
		      'label_range'/1,
		      'module_info'/0,
		      'module_info'/1,
		      'new_label'/1,
		      'new_var'/1,
		      'set_label'/1,
		      'set_label'/2,
		      'set_label_range'/3,
		      'set_var'/1,
		      'set_var'/2,
		      'set_var_range'/3,
		      'update_lblrange'/2,
		      'update_vrange'/2,
		      'var_range'/1]
    attributes [%% Line 47
		'type' =
		    %% Line 47
		    [{'gvarname',{'type',47,'union',[{'atom',47,'icode'}|[{'atom',47,'rtl'}|[{'atom',47,'arm'}|[{'atom',47,'ppc'}|[{'atom',47,'sparc'}|[{'atom',47,'x86'}|[{'atom',47,'llvm'}]]]]]]]},[]}],
		%% Line 60
		'spec' =
		    %% Line 60
		    [{{'init',1},[{'type',60,'fun',[{'type',60,'product',[{'type',60,'gvarname',[]}]}|[{'atom',60,'ok'}]]}]}],
		%% Line 76
		'spec' =
		    %% Line 76
		    [{{'new_var',1},[{'type',76,'fun',[{'type',76,'product',[{'type',76,'gvarname',[]}]}|[{'type',76,'non_neg_integer',[]}]]}]}],
		%% Line 89
		'spec' =
		    %% Line 89
		    [{{'new_label',1},[{'type',89,'fun',[{'type',89,'product',[{'type',89,'gvarname',[]}]}|[{'type',89,'non_neg_integer',[]}]]}]}],
		%% Line 104
		'spec' =
		    %% Line 104
		    [{{'update_vrange',2},[{'type',104,'fun',[{'type',104,'product',[{'type',104,'gvarname',[]}|[{'type',104,'non_neg_integer',[]}]]}|[{'atom',104,'ok'}]]}]}],
		%% Line 121
		'spec' =
		    %% Line 121
		    [{{'update_lblrange',2},[{'type',121,'fun',[{'type',121,'product',[{'type',121,'gvarname',[]}|[{'type',121,'non_neg_integer',[]}]]}|[{'atom',121,'ok'}]]}]}],
		%% Line 135
		'spec' =
		    %% Line 135
		    [{{'var_range',1},[{'type',135,'fun',[{'type',135,'product',[{'type',135,'gvarname',[]}]}|[{'type',135,'tuple',[{'type',135,'non_neg_integer',[]}|[{'type',135,'non_neg_integer',[]}]]}]]}]}],
		%% Line 140
		'spec' =
		    %% Line 140
		    [{{'set_var_range',3},[{'type',140,'fun',[{'type',140,'product',[{'type',140,'gvarname',[]}|[{'type',140,'non_neg_integer',[]}|[{'type',140,'non_neg_integer',[]}]]]}|[{'atom',140,'ok'}]]}]}],
		%% Line 150
		'spec' =
		    %% Line 150
		    [{{'label_range',1},[{'type',150,'fun',[{'type',150,'product',[{'type',150,'gvarname',[]}]}|[{'type',150,'tuple',[{'type',150,'non_neg_integer',[]}|[{'type',150,'non_neg_integer',[]}]]}]]}]}],
		%% Line 155
		'spec' =
		    %% Line 155
		    [{{'set_label_range',3},[{'type',155,'fun',[{'type',155,'product',[{'type',155,'gvarname',[]}|[{'type',155,'non_neg_integer',[]}|[{'type',155,'non_neg_integer',[]}]]]}|[{'atom',155,'ok'}]]}]}],
		%% Line 166
		'spec' =
		    %% Line 166
		    [{{'set_var',1},[{'type',166,'fun',[{'type',166,'product',[{'type',166,'non_neg_integer',[]}]}|[{'atom',166,'ok'}]]}]}],
		%% Line 172
		'spec' =
		    %% Line 172
		    [{{'set_var',2},[{'type',172,'fun',[{'type',172,'product',[{'type',172,'gvarname',[]}|[{'type',172,'non_neg_integer',[]}]]}|[{'atom',172,'ok'}]]}]}],
		%% Line 178
		'spec' =
		    %% Line 178
		    [{{'get_var',0},[{'type',178,'fun',[{'type',178,'product',[]}|[{'type',178,'non_neg_integer',[]}]]}]}],
		%% Line 183
		'spec' =
		    %% Line 183
		    [{{'get_var',1},[{'type',183,'fun',[{'type',183,'product',[{'type',183,'gvarname',[]}]}|[{'type',183,'non_neg_integer',[]}]]}]}],
		%% Line 188
		'spec' =
		    %% Line 188
		    [{{'get_next_var',0},[{'type',188,'fun',[{'type',188,'product',[]}|[{'type',188,'non_neg_integer',[]}]]}]}],
		%% Line 195
		'spec' =
		    %% Line 195
		    [{{'get_next_var',1},[{'type',195,'fun',[{'type',195,'product',[{'type',195,'gvarname',[]}]}|[{'type',195,'non_neg_integer',[]}]]}]}],
		%% Line 207
		'spec' =
		    %% Line 207
		    [{{'set_label',1},[{'type',207,'fun',[{'type',207,'product',[{'type',207,'non_neg_integer',[]}]}|[{'atom',207,'ok'}]]}]}],
		%% Line 213
		'spec' =
		    %% Line 213
		    [{{'set_label',2},[{'type',213,'fun',[{'type',213,'product',[{'type',213,'gvarname',[]}|[{'type',213,'non_neg_integer',[]}]]}|[{'atom',213,'ok'}]]}]}],
		%% Line 219
		'spec' =
		    %% Line 219
		    [{{'get_label',0},[{'type',219,'fun',[{'type',219,'product',[]}|[{'type',219,'non_neg_integer',[]}]]}]}],
		%% Line 224
		'spec' =
		    %% Line 224
		    [{{'get_label',1},[{'type',224,'fun',[{'type',224,'product',[{'type',224,'gvarname',[]}]}|[{'type',224,'non_neg_integer',[]}]]}]}],
		%% Line 229
		'spec' =
		    %% Line 229
		    [{{'get_next_label',0},[{'type',229,'fun',[{'type',229,'product',[]}|[{'type',229,'non_neg_integer',[]}]]}]}],
		%% Line 236
		'spec' =
		    %% Line 236
		    [{{'get_next_label',1},[{'type',236,'fun',[{'type',236,'product',[{'type',236,'gvarname',[]}]}|[{'type',236,'non_neg_integer',[]}]]}]}]]
'init'/1 =
    %% Line 62
    fun (_cor0) ->
	do  %% Line 63
	    call 'erlang':'put'
		({_cor0,'var_count'}, 0)
	    do  %% Line 64
		call 'erlang':'put'
		    ({_cor0,'label_count'}, 0)
		do  %% Line 65
		    call 'erlang':'put'
			({_cor0,'var_min'}, 0)
		    do  %% Line 66
			call 'erlang':'put'
			    ({_cor0,'var_max'}, 0)
			do  %% Line 67
			    call 'erlang':'put'
				({_cor0,'lbl_min'}, 1)
			    do  %% Line 68
				call 'erlang':'put'
				    ({_cor0,'lbl_max'}, 1)
				%% Line 69
				'ok'
'new_var'/1 =
    %% Line 78
    fun (_cor0) ->
	let <T> = {_cor0,%% Line 79
		   'var_count'}
	in  let <V> =
		%% Line 80
		call 'erlang':'get'
		    (T)
	    in  let <_cor3> =
		    %% Line 81
		    call 'erlang':'+'
			(V, 1)
		in  do  %% Line 81
			call 'erlang':'put'
			    (T, _cor3)
			%% Line 82
			V
'new_label'/1 =
    %% Line 91
    fun (_cor0) ->
	let <T> = {_cor0,%% Line 92
		   'label_count'}
	in  let <L> =
		%% Line 93
		call 'erlang':'get'
		    (T)
	    in  let <_cor3> =
		    %% Line 94
		    call 'erlang':'+'
			(L, 1)
		in  do  %% Line 94
			call 'erlang':'put'
			    (T, _cor3)
			%% Line 95
			L
'update_vrange'/2 =
    %% Line 105
    fun (_cor1,_cor0) ->
	let <Tmin> = {_cor1,%% Line 106
		   'var_min'}
	in  let <Tmax> = {_cor1,%% Line 107
		       'var_max'}
	    in  let <Vmax> =
		    %% Line 108
		    call 'erlang':'get'
			(Tmax)
		in  let <Vmin> =
			%% Line 109
			call 'erlang':'get'
			    (Tmin)
		    in  let <_cor6> =
			    %% Line 110
			    call 'erlang':'min'
				(_cor0, Vmin)
			in  do  %% Line 110
				call 'erlang':'put'
				    (Tmin, _cor6)
				let <_cor7> =
				    %% Line 111
				    call 'erlang':'max'
					(_cor0, Vmax)
				in  do  %% Line 111
					call 'erlang':'put'
					    (Tmax, _cor7)
					%% Line 112
					'ok'
'update_lblrange'/2 =
    %% Line 123
    fun (_cor1,_cor0) ->
	let <Tmin> = {_cor1,%% Line 124
		   'lbl_min'}
	in  let <Tmax> = {_cor1,%% Line 125
		       'lbl_max'}
	    in  let <Lmax> =
		    %% Line 126
		    call 'erlang':'get'
			(Tmax)
		in  let <Lmin> =
			%% Line 127
			call 'erlang':'get'
			    (Tmin)
		    in  let <_cor6> =
			    %% Line 128
			    call 'erlang':'min'
				(_cor0, Lmin)
			in  do  %% Line 128
				call 'erlang':'put'
				    (Tmin, _cor6)
				let <_cor7> =
				    %% Line 129
				    call 'erlang':'max'
					(_cor0, Lmax)
				in  do  %% Line 129
					call 'erlang':'put'
					    (Tmax, _cor7)
					%% Line 130
					'ok'
'var_range'/1 =
    %% Line 137
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 138
	    call 'erlang':'get'
		({_cor0,'var_min'})
	in  let <_cor1> =
		%% Line 138
		call 'erlang':'get'
		    ({_cor0,'var_max'})
	    in  %% Line 138
		{_cor2,_cor1}
'set_var_range'/3 =
    %% Line 142
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 143
	    call 'erlang':'put'
		({_cor2,'var_min'}, _cor1)
	    do  %% Line 144
		call 'erlang':'put'
		    ({_cor2,'var_max'}, _cor0)
		%% Line 145
		'ok'
'label_range'/1 =
    %% Line 152
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 153
	    call 'erlang':'get'
		({_cor0,'lbl_min'})
	in  let <_cor1> =
		%% Line 153
		call 'erlang':'get'
		    ({_cor0,'lbl_max'})
	    in  %% Line 153
		{_cor2,_cor1}
'set_label_range'/3 =
    %% Line 157
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 158
	    call 'erlang':'put'
		({_cor2,'lbl_min'}, _cor1)
	    do  %% Line 159
		call 'erlang':'put'
		    ({_cor2,'lbl_max'}, _cor0)
		%% Line 160
		'ok'
'set_var'/1 =
    %% Line 168
    fun (_cor0) ->
	do  %% Line 169
	    call 'erlang':'put'
		('var_max', _cor0)
	    %% Line 170
	    'ok'
'set_var'/2 =
    %% Line 174
    fun (_cor1,_cor0) ->
	do  %% Line 175
	    call 'erlang':'put'
		({_cor1,'var_max'}, _cor0)
	    %% Line 176
	    'ok'
'get_var'/0 =
    %% Line 180
    fun () ->
	%% Line 181
	call 'erlang':'get'
	    ('var_max')
'get_var'/1 =
    %% Line 185
    fun (_cor0) ->
	%% Line 186
	call 'erlang':'get'
	    ({_cor0,'var_max'})
'get_next_var'/0 =
    %% Line 190
    fun () ->
	let <C> =
	    %% Line 191
	    call 'erlang':'get'
		('var_max')
	in  let <_cor1> =
		%% Line 192
		call 'erlang':'+'
		    (C, 1)
	    in  do  %% Line 192
		    call 'erlang':'put'
			('var_max', _cor1)
		    %% Line 193
		    call 'erlang':'+'
			(C, 1)
'get_next_var'/1 =
    %% Line 197
    fun (_cor0) ->
	let <T> = {_cor0,%% Line 198
		   'var_max'}
	in  let <C> =
		%% Line 199
		call 'erlang':'get'
		    (T)
	    in  let <_cor3> =
		    %% Line 200
		    call 'erlang':'+'
			(C, 1)
		in  do  %% Line 200
			call 'erlang':'put'
			    (T, _cor3)
			%% Line 201
			call 'erlang':'+'
			    (C, 1)
'set_label'/1 =
    %% Line 209
    fun (_cor0) ->
	do  %% Line 210
	    call 'erlang':'put'
		('lbl_max', _cor0)
	    %% Line 211
	    'ok'
'set_label'/2 =
    %% Line 215
    fun (_cor1,_cor0) ->
	do  %% Line 216
	    call 'erlang':'put'
		({_cor1,'lbl_max'}, _cor0)
	    %% Line 217
	    'ok'
'get_label'/0 =
    %% Line 221
    fun () ->
	%% Line 222
	call 'erlang':'get'
	    ('lbl_max')
'get_label'/1 =
    %% Line 226
    fun (_cor0) ->
	%% Line 227
	call 'erlang':'get'
	    ({_cor0,'lbl_max'})
'get_next_label'/0 =
    %% Line 231
    fun () ->
	let <C> =
	    %% Line 232
	    call 'erlang':'get'
		('lbl_max')
	in  let <_cor1> =
		%% Line 233
		call 'erlang':'+'
		    (C, 1)
	    in  do  %% Line 233
		    call 'erlang':'put'
			('lbl_max', _cor1)
		    %% Line 234
		    call 'erlang':'+'
			(C, 1)
'get_next_label'/1 =
    %% Line 238
    fun (_cor0) ->
	let <T> = {_cor0,%% Line 239
		   'lbl_max'}
	in  let <C> =
		%% Line 240
		call 'erlang':'get'
		    (T)
	    in  let <_cor3> =
		    %% Line 241
		    call 'erlang':'+'
			(C, 1)
		in  do  %% Line 241
			call 'erlang':'put'
			    (T, _cor3)
			%% Line 242
			call 'erlang':'+'
			    (C, 1)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_gensym')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_gensym', _cor0)
end