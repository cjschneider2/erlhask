module 'hipe_ppc_registers' ['all_precoloured'/0,
			     'allocatable_fpr'/0,
			     'allocatable_gpr'/0,
			     'arg'/1,
			     'args'/1,
			     'call_clobbered'/0,
			     'first_virtual'/0,
			     'heap_pointer'/0,
			     'is_arg'/1,
			     'is_fixed'/1,
			     'is_precoloured_fpr'/1,
			     'is_precoloured_gpr'/1,
			     'live_at_return'/0,
			     'module_info'/0,
			     'module_info'/1,
			     'nr_args'/0,
			     'proc_pointer'/0,
			     'reg_name_fpr'/1,
			     'reg_name_gpr'/1,
			     'return_value'/0,
			     'stack_pointer'/0,
			     'tailcall_clobbered'/0,
			     'temp1'/0,
			     'temp2'/0,
			     'temp3'/0]
    attributes []
'reg_name_gpr'/1 =
    %% Line 103
    fun (_cor0) ->
	let <_cor1> =
	    call 'erlang':'integer_to_list'
		(_cor0)
	in  [114|_cor1]
'reg_name_fpr'/1 =
    %% Line 104
    fun (_cor0) ->
	let <_cor1> =
	    call 'erlang':'integer_to_list'
		(_cor0)
	in  [102|_cor1]
'first_virtual'/0 =
    %% Line 107
    fun () ->
	32
'is_precoloured_gpr'/1 =
    %% Line 111
    fun (_cor0) ->
	call 'erlang':'=<'
	    (_cor0, 31)
'is_precoloured_fpr'/1 =
    %% Line 112
    fun (_cor0) ->
	call 'erlang':'=<'
	    (_cor0, 31)
'all_precoloured'/0 =
    %% Line 114
    fun () ->
	%% Line 116
	[0|[1|[2|[3|[4|[5|[6|[7|[8|[9|[10|[11|[12|[13|[14|[15|[16|[17|[18|[19|[20|[21|[22|[23|[24|[25|[26|[27|[28|[29|[30|[31]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
'return_value'/0 =
    %% Line 121
    fun () ->
	3
'temp1'/0 =
    %% Line 123
    fun () ->
	28
'temp2'/0 =
    %% Line 124
    fun () ->
	27
'temp3'/0 =
    %% Line 125
    fun () ->
	26
'heap_pointer'/0 =
    %% Line 127
    fun () ->
	29
'stack_pointer'/0 =
    %% Line 129
    fun () ->
	30
'proc_pointer'/0 =
    %% Line 131
    fun () ->
	31
'allocatable_gpr'/0 =
    %% Line 133
    fun () ->
	%% Line 137
	[3|[4|[5|[6|[7|[8|[9|[10|[11|[12|[14|[15|[16|[17|[18|[19|[20|[21|[22|[23|[24|[25|[26|[27|[28]]]]]]]]]]]]]]]]]]]]]]]]]
'allocatable_fpr'/0 =
    %% Line 142
    fun () ->
	%% Line 143
	[0|[1|[2|[3|[4|[5|[6|[7|[8|[9|[10|[11|[12|[13|[14|[15|[16|[17|[18|[19|[20|[21|[22|[23|[24|[25|[26|[27|[28|[29|[30|[31]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
'is_fixed'/1 =
    %% Line 150
    fun (_cor0) ->
	%% Line 151
	case _cor0 of
	  %% Line 152
	  <29> when 'true' ->
	      'true'
	  %% Line 153
	  <30> when 'true' ->
	      'true'
	  %% Line 154
	  <31> when 'true' ->
	      'true'
	  %% Line 159
	  <0> when 'true' ->
	      'true'
	  %% Line 160
	  <1> when 'true' ->
	      'true'
	  %% Line 161
	  <2> when 'true' ->
	      'true'
	  %% Line 162
	  <13> when 'true' ->
	      'true'
	  %% Line 163
	  <_cor3> when 'true' ->
	      'false'
	end
'nr_args'/0 =
    %% Line 166
    fun () ->
	4
'args'/1 =
    %% Line 168
    fun (_cor0) ->
	case _cor0 of
	  <Arity>
	      when call 'erlang':'is_integer'
		    (_cor0) ->
	      let <N> =
		  %% Line 169
		  call 'erlang':'min'
		      (Arity, 4)
	      in  let <_cor2> =
		      %% Line 170
		      call 'erlang':'-'
			  (N, 1)
		  in  %% Line 170
		      apply 'args'/2
			  (_cor2, [])
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'args',1}}] )
	    -| ['compiler_generated'] )
	end
'args'/2 =
    %% Line 172
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <I,Rest>
	      when let <_cor2> =
		    call 'erlang':'is_integer'
			(I)
		in  let <_cor3> =
			call 'erlang':'<'
			    (I, 0)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      Rest
	  %% Line 173
	  <I,Rest> when 'true' ->
	      let <_cor5> =
		  call 'erlang':'-'
		      (I, 1)
	      in  let <_cor4> =
		      apply 'arg'/1
			  (I)
		  in  apply 'args'/2
			  (_cor5, [_cor4|Rest])
	end
'arg'/1 =
    %% Line 175
    fun (_cor0) ->
	%% Line 176
	case <> of
	  <>
	      when call 'erlang':'<'
		    (_cor0,
		     4) ->
	      %% Line 177
	      case _cor0 of
		%% Line 178
		<0> when 'true' ->
		    4
		%% Line 179
		<1> when 'true' ->
		    5
		%% Line 180
		<2> when 'true' ->
		    6
		%% Line 181
		<3> when 'true' ->
		    7
		%% Line 182
		<4> when 'true' ->
		    8
		%% Line 183
		<5> when 'true' ->
		    9
		%% Line 184
		<6> when 'true' ->
		    10
		%% Line 185
		<_cor3> when 'true' ->
		    call 'erlang':'exit'
			({'hipe_ppc_registers','arg',_cor0})
	      end
	  %% Line 187
	  <> when 'true' ->
	      %% Line 188
	      call 'erlang':'exit'
		  ({'hipe_ppc_registers','arg',_cor0})
	end
'is_arg'/1 =
    %% Line 191
    fun (_cor0) ->
	%% Line 192
	case _cor0 of
	  %% Line 193
	  <4> when 'true' ->
	      'true'
	  %% Line 194
	  <5> when 'true' ->
	      'true'
	  %% Line 195
	  <6> when 'true' ->
	      'true'
	  %% Line 196
	  <7> when 'true' ->
	      'true'
	  %% Line 197
	  <8> when 'true' ->
	      'false'
	  %% Line 198
	  <9> when 'true' ->
	      'false'
	  %% Line 199
	  <10> when 'true' ->
	      'false'
	  %% Line 200
	  <_cor3> when 'true' ->
	      'false'
	end
'call_clobbered'/0 =
    %% Line 203
    fun () ->
	%% Line 204
	[{0,'tagged'}|[{0,'untagged'}|[{3,'tagged'}|[{3,'untagged'}|[{4,'tagged'}|[{4,'untagged'}|[{5,'tagged'}|[{5,'untagged'}|[{6,'tagged'}|[{6,'untagged'}|[{7,'tagged'}|[{7,'untagged'}|[{8,'tagged'}|[{8,'untagged'}|[{9,'tagged'}|[{9,'untagged'}|[{10,'tagged'}|[{10,'untagged'}|[{11,'tagged'}|[{11,'untagged'}|[{12,'tagged'}|[{12,'untagged'}|[{14,'tagged'}|[{14,'untagged'}|[{15,'tagged'}|[{15,'untagged'}|[{16,'tagged'}|[{16,'untagged'}|[{17,'tagged'}|[{17,'untagged'}|[{18,'tagged'}|[{18,'untagged'}|[{19,'tagged'}|[{19,'untagged'}|[{20,'tagged'}|[{20,'untagged'}|[{21,'tagged'}|[{21,'untagged'}|[{22,'tagged'}|[{22,'untagged'}|[{23,'tagged'}|[{23,'untagged'}|[{24,'tagged'}|[{24,'untagged'}|[{25,'tagged'}|[{25,'untagged'}|[{26,'tagged'}|[{26,'untagged'}|[{27,'tagged'}|[{27,'untagged'}|[{28,'tagged'}|[{28,'untagged'}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
'tailcall_clobbered'/0 =
    %% Line 238
    fun () ->
	%% Line 239
	[{28,'tagged'}|[{28,'untagged'}]]
'live_at_return'/0 =
    %% Line 241
    fun () ->
	%% Line 242
	[{29,'untagged'}|[{30,'untagged'}|[{31,'untagged'}]]]
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_ppc_registers')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_ppc_registers', _cor0)
end