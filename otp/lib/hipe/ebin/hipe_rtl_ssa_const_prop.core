module 'hipe_rtl_ssa_const_prop' ['module_info'/0,
				  'module_info'/1,
				  'propagate'/1]
    attributes [%% Line 301
		'type' =
		    %% Line 301
		    [{{'record','comp_servers'},[{'typed_record_field',{'record_field',301,{'atom',301,'pp_server'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}|[{'typed_record_field',{'record_field',301,{'atom',301,'range'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}|[{'typed_record_field',{'record_field',301,{'atom',301,'type'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}]]],[]}],
		%% Line 307
		'type' =
		    %% Line 307
		    [{'comp_option',{'type',307,'union',[{'type',307,'atom',[]}|[{'type',307,'tuple',[{'type',307,'atom',[]}|[{'type',307,'atom',[]}]]}]]},[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{'comp_options',{'type',308,'list',[{'type',308,'comp_option',[]}]},[]}],
		%% Line 310
		'type' =
		    %% Line 310
		    [{'hipe_architecture',{'type',311,'union',[{'atom',311,'amd64'}|[{'atom',311,'arm'}|[{'atom',311,'powerpc'}|[{'atom',311,'ppc64'}|[{'atom',311,'ultrasparc'}|[{'atom',311,'x86'}]]]]]]},[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{'hipe_map',{'type',313,'list',[{'type',313,'tuple',[{'type',313,'non_neg_integer',[]}|[{'type',314,'union',[{'atom',314,'unknown'}|[{'type',314,'tuple',[{'type',314,'union',[{'atom',314,'reg'}|[{'atom',314,'fp_reg'}|[{'atom',314,'spill'}]]]}|[{'type',315,'non_neg_integer',[]}]]}]]}]]}]},[]}],
		%% Line 316
		'type' =
		    %% Line 316
		    [{'hipe_temp_map',{'type',316,'tuple','any'},[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{'hipe_spill_map',{'type',317,'list',[{'type',317,'tuple',[{'type',317,'non_neg_integer',[]}|[{'type',317,'tuple',[{'atom',317,'spill'}|[{'type',317,'non_neg_integer',[]}]]}]]}]},[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','alu'},[{'record_field',28,{'atom',28,'dst'}}|[{'record_field',28,{'atom',28,'src1'}}|[{'record_field',28,{'atom',28,'op'}}|[{'record_field',28,{'atom',28,'src2'}}]]]],[]}],
		%% Line 29
		'type' =
		    %% Line 29
		    [{{'record','alub'},[{'record_field',29,{'atom',29,'dst'}}|[{'record_field',29,{'atom',29,'src1'}}|[{'record_field',29,{'atom',29,'op'}}|[{'record_field',29,{'atom',29,'src2'}}|[{'record_field',29,{'atom',29,'cond'}}|[{'record_field',29,{'atom',29,'true_label'}}|[{'record_field',29,{'atom',29,'false_label'}}|[{'record_field',29,{'atom',29,'p'}}]]]]]]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','branch'},[{'record_field',30,{'atom',30,'src1'}}|[{'record_field',30,{'atom',30,'src2'}}|[{'record_field',30,{'atom',30,'cond'}}|[{'record_field',30,{'atom',30,'true_label'}}|[{'record_field',30,{'atom',30,'false_label'}}|[{'record_field',30,{'atom',30,'p'}}]]]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{{'record','call'},[{'record_field',31,{'atom',31,'dstlist'}}|[{'record_field',31,{'atom',31,'fun'}}|[{'record_field',31,{'atom',31,'arglist'}}|[{'record_field',31,{'atom',31,'type'}}|[{'record_field',31,{'atom',31,'continuation'}}|[{'record_field',32,{'atom',32,'failcontinuation'}}|[{'record_field',32,{'atom',32,'normalcontinuation'},{'nil',32}}]]]]]]],[]}],
		%% Line 33
		'type' =
		    %% Line 33
		    [{{'record','comment'},[{'record_field',33,{'atom',33,'text'}}],[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','enter'},[{'record_field',34,{'atom',34,'fun'}}|[{'record_field',34,{'atom',34,'arglist'}}|[{'record_field',34,{'atom',34,'type'}}]]],[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','fconv'},[{'record_field',35,{'atom',35,'dst'}}|[{'record_field',35,{'atom',35,'src'}}]],[]}],
		%% Line 36
		'type' =
		    %% Line 36
		    [{{'record','fixnumop'},[{'record_field',36,{'atom',36,'dst'}}|[{'record_field',36,{'atom',36,'src'}}|[{'record_field',36,{'atom',36,'type'}}]]],[]}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{{'record','fload'},[{'record_field',37,{'atom',37,'dst'}}|[{'record_field',37,{'atom',37,'src'}}|[{'record_field',37,{'atom',37,'offset'}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','fmove'},[{'record_field',38,{'atom',38,'dst'}}|[{'record_field',38,{'atom',38,'src'}}]],[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{{'record','fp'},[{'record_field',39,{'atom',39,'dst'}}|[{'record_field',39,{'atom',39,'src1'}}|[{'record_field',39,{'atom',39,'op'}}|[{'record_field',39,{'atom',39,'src2'}}]]]],[]}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{{'record','fp_unop'},[{'record_field',40,{'atom',40,'dst'}}|[{'record_field',40,{'atom',40,'src'}}|[{'record_field',40,{'atom',40,'op'}}]]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','fstore'},[{'record_field',41,{'atom',41,'base'}}|[{'record_field',41,{'atom',41,'offset'}}|[{'record_field',41,{'atom',41,'src'}}]]],[]}],
		%% Line 42
		'type' =
		    %% Line 42
		    [{{'record','gctest'},[{'record_field',42,{'atom',42,'words'}}],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','goto'},[{'record_field',43,{'atom',43,'label'}}],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','goto_index'},[{'record_field',44,{'atom',44,'block'}}|[{'record_field',44,{'atom',44,'index'}}|[{'record_field',44,{'atom',44,'labels'}}]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','label'},[{'record_field',45,{'atom',45,'name'}}],[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{{'record','load'},[{'record_field',46,{'atom',46,'dst'}}|[{'record_field',46,{'atom',46,'src'}}|[{'record_field',46,{'atom',46,'offset'}}|[{'record_field',46,{'atom',46,'size'}}|[{'record_field',46,{'atom',46,'sign'}}]]]]],[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{{'record','load_address'},[{'record_field',47,{'atom',47,'dst'}}|[{'record_field',47,{'atom',47,'addr'}}|[{'record_field',47,{'atom',47,'type'}}]]],[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','load_atom'},[{'record_field',48,{'atom',48,'dst'}}|[{'record_field',48,{'atom',48,'atom'}}]],[]}],
		%% Line 49
		'type' =
		    %% Line 49
		    [{{'record','load_word_index'},[{'record_field',49,{'atom',49,'dst'}}|[{'record_field',49,{'atom',49,'block'}}|[{'record_field',49,{'atom',49,'index'}}]]],[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','move'},[{'record_field',50,{'atom',50,'dst'}}|[{'record_field',50,{'atom',50,'src'}}]],[]}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{{'record','multimove'},[{'record_field',51,{'atom',51,'dstlist'}}|[{'record_field',51,{'atom',51,'srclist'}}]],[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{{'record','phi'},[{'record_field',52,{'atom',52,'dst'}}|[{'record_field',52,{'atom',52,'id'}}|[{'record_field',52,{'atom',52,'arglist'}}]]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{{'record','return'},[{'record_field',53,{'atom',53,'varlist'}}],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{{'record','store'},[{'record_field',54,{'atom',54,'base'}}|[{'record_field',54,{'atom',54,'offset'}}|[{'record_field',54,{'atom',54,'src'}}|[{'record_field',54,{'atom',54,'size'}}]]]],[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{{'record','switch'},[{'record_field',55,{'atom',55,'src'}}|[{'record_field',55,{'atom',55,'labels'}}|[{'record_field',55,{'atom',55,'sorted_by'},{'nil',55}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{'cfg_lbl',{'type',28,'non_neg_integer',[]},[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','cfg_info'},[{'typed_record_field',{'record_field',34,{'atom',34,'fun'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'type',34,'mfa',[]}]]}}|[{'typed_record_field',{'record_field',35,{'atom',35,'start_label'}},{'type',35,'union',[{'atom',35,'undefined'}|[{'type',35,'cfg_lbl',[]}]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'is_closure'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',37,{'atom',37,'closure_arity'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'type',37,'arity',[]}]]}}|[{'typed_record_field',{'record_field',38,{'atom',38,'is_leaf'}},{'type',38,'union',[{'atom',38,'undefined'}|[{'type',38,'boolean',[]}]]}}|[{'record_field',39,{'atom',39,'params'}}|[{'record_field',40,{'atom',40,'info'},{'nil',40}}]]]]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'cfg_data',{'type',45,'tuple',[{'remote_type',45,[{'atom',45,'dict'}|[{'atom',45,'dict'}|[[]]]]}|[{'type',45,'list',[{'type',45,'cfg_lbl',[]}]}|[{'type',45,'non_neg_integer',[]}]]]},[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','cfg'},[{'typed_record_field',{'record_field',50,{'atom',50,'table'},{'call',50,{'remote',50,{'atom',50,'gb_trees'},{'atom',50,'empty'}},[]}},{'remote_type',50,[{'atom',50,'gb_trees'}|[{'atom',50,'tree'}|[[]]]]}}|[{'typed_record_field',{'record_field',51,{'atom',51,'info'}},{'type',51,'union',[{'atom',51,'undefined'}|[{'type',51,'record',[{'atom',51,'cfg_info'}]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'data'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'cfg_data',[]}]]}}]]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{'cfg',{'type',53,'record',[{'atom',53,'cfg'}]},[]}],
		%% Line 38
		'spec' =
		    %% Line 38
		    [{{'propagate',1},[{'type',38,'fun',[{'type',38,'product',[{'type',38,'record',[{'atom',38,'cfg'}]}]}|[{'type',38,'record',[{'atom',38,'cfg'}]}]]}]}],
		%% Line 74
		'type' =
		    %% Line 74
		    [{{'record','env'},[{'typed_record_field',{'record_field',74,{'atom',74,'cfg'}},{'type',74,'union',[{'atom',74,'undefined'}|[{'type',74,'record',[{'atom',74,'cfg'}]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'executable_flags'},{'call',75,{'remote',75,{'atom',75,'gb_sets'},{'atom',75,'empty'}},[]}},{'remote_type',75,[{'atom',75,'gb_sets'}|[{'atom',75,'set'}|[[]]]]}}|[{'typed_record_field',{'record_field',76,{'atom',76,'handled_blocks'},{'call',76,{'remote',76,{'atom',76,'gb_sets'},{'atom',76,'empty'}},[]}},{'remote_type',76,[{'atom',76,'gb_sets'}|[{'atom',76,'set'}|[[]]]]}}|[{'typed_record_field',{'record_field',77,{'atom',77,'lattice_values'},{'call',77,{'remote',77,{'atom',77,'gb_trees'},{'atom',77,'empty'}},[]}},{'remote_type',77,[{'atom',77,'gb_trees'}|[{'atom',77,'tree'}|[[]]]]}}|[{'typed_record_field',{'record_field',78,{'atom',78,'ssa_edges'},{'call',78,{'remote',78,{'atom',78,'gb_trees'},{'atom',78,'empty'}},[]}},{'remote_type',78,[{'atom',78,'gb_trees'}|[{'atom',78,'tree'}|[[]]]]}}]]]]],[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{'bool_lattice',{'type',95,'union',[{'atom',95,'true'}|[{'atom',95,'false'}|[{'atom',95,'top'}|[{'atom',95,'bottom'}]]]]},[]}],
		%% Line 401
		'spec' =
		    %% Line 401
		    [{{'partial_eval_branch',5},[{'type',401,'fun',[{'type',401,'product',[{'remote_type',401,[{'atom',401,'hipe_rtl'}|[{'atom',401,'alub_cond'}|[[]]]]}|[{'type',401,'bool_lattice',[]}|[{'type',401,'bool_lattice',[]}|[{'type',402,'union',[{'type',402,'bool_lattice',[]}|[{'integer',402,0}]]}|[{'type',402,'union',[{'type',402,'bool_lattice',[]}|[{'integer',402,0}]]}]]]]]}|[{'type',403,'bool_lattice',[]}]]}]}]]
'propagate'/1 =
    %% Line 40
    fun (_cor0) ->
	let <Environment> =
	    %% Line 41
	    apply 'create_env'/1
		(_cor0)
	in  let <_cor3> =
		%% Line 42
		call 'hipe_rtl_cfg':'start_label'
		    (_cor0)
	    in  let <_cor2> =
		    %% Line 42
		    call 'hipe_rtl_cfg':'start_label'
			(_cor0)
		in  let <StartEdge> = {_cor3,_cor2}
		    in  let <NewEnvironment> =
			    %% Line 43
			    apply 'scc'/3
				([StartEdge|[]], [], Environment)
			in  %% Line 44
			    apply 'update_cfg'/1
				(NewEnvironment)
'visit_expressions'/2 =
    %% Line 58
    fun (_cor1,_cor0) ->
	%% Line 59
	apply 'visit_expressions'/4
	    (_cor1, _cor0, [], [])
'visit_expressions'/4 =
    %% Line 61
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[],Environment,FlowWork,SSAWork> when 'true' ->
	      %% Line 62
	      {_cor1,_cor0,_cor2}
	  %% Line 63
	  <[Inst|Insts],Environment,FlowWork,SSAWork> when 'true' ->
	      let <_3522> =
		  %% Line 65
		  apply 'visit_expression'/2
		      (Inst, _cor2)
	      in  %% Line 65
		  case _3522 of
		    <{MoreFlowWork,MoreSSAWork,Environment1}> when 'true' ->
			let <FlowWork1> =
			    %% Line 66
			    call 'erlang':'++'
				(MoreFlowWork, _cor1)
			in  let <SSAWork1> =
				%% Line 67
				call 'erlang':'++'
				    (MoreSSAWork, _cor0)
			    in  %% Line 68
				apply 'visit_expressions'/4
				    (Insts, Environment1, FlowWork1, SSAWork1)
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3522})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'visit_expressions',4}}] )
	    -| ['compiler_generated'] )
	end
'create_env'/1 =
    %% Line 81
    fun (_cor0) ->
	let <_cor4> =
	    %% Line 83
	    call 'gb_sets':'empty'
		()
	in  let <_cor3> =
		%% Line 84
		call 'gb_sets':'empty'
		    ()
	    in  let <Lattice> =
		    %% Line 102
		    call 'gb_trees':'empty'
			()
		in  let <Parameters> =
			%% Line 103
			call 'hipe_rtl_cfg':'params'
			    (_cor0)
		    in  let <Inserter> =
			    %% Line 104
			    fun (_7232,_6789) ->
				%% Line 105
				call 'gb_trees':'insert'
				    (_7232, 'bottom', _6789)
			in  let <_cor2> =
				%% Line 107
				call 'lists':'foldl'
				    (Inserter, Lattice, Parameters)
			    in  let <_cor1> =
				    %% Line 86
				    apply 'initialize_ssa_edges'/1
					(_cor0)
				in  %% Line 82
				    {'env',_cor0,_cor4,_cor3,_cor2,_cor1}
'initialize_ssa_edges'/1 =
    %% Line 118
    fun (_cor0) ->
	let <IterateNodes> =
	    %% Line 120
	    fun (_cor18,_cor17) ->
		let <IterateInstructions> =
		    %% Line 122
		    fun (_cor11,_cor10) ->
			let <IterateArguments> =
			    %% Line 124
			    fun (_cor5,_cor4) ->
				let <Data> =
				    %% Line 125
				    call 'gb_trees':'lookup'
					(_cor5, _cor4)
				in  let <NewEdge> = {_cor18,_cor11}
				    in  %% Line 127
					case Data of
					  %% Line 128
					  <'none'> when 'true' ->
					      %% Line 130
					      call 'gb_trees':'insert'
						  (_cor5, [NewEdge|[]], _cor4)
					  %% Line 131
					  <{'value',EdgeList}> when 'true' ->
					      %% Line 133
					      call 'gb_trees':'update'
						  (_cor5, [NewEdge|EdgeList], _cor4)
					  ( <_cor3> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',Data})
					    -| ['compiler_generated'] )
					end
			in  let <Arguments> =
				%% Line 136
				call 'hipe_rtl':'uses'
				    (_cor11)
			    in  %% Line 137
				call 'lists':'foldl'
				    (IterateArguments, _cor10, Arguments)
		in  let <_cor15> =
			%% Line 139
			call 'hipe_rtl_cfg':'bb'
			    (_cor0, _cor18)
		    in  let <Instructions> =
			    %% Line 139
			    call 'hipe_bb':'code'
				(_cor15)
			in  %% Line 140
			    call 'lists':'foldl'
				(IterateInstructions, _cor17, Instructions)
	in  let <NodeList> =
		%% Line 142
		call 'hipe_rtl_cfg':'labels'
		    (_cor0)
	    in  let <_cor23> =
		    %% Line 143
		    call 'gb_trees':'empty'
			()
		in  %% Line 143
		    call 'lists':'foldl'
			(IterateNodes, _cor23, NodeList)
'scc'/3 =
    %% Line 157
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],[],Environment> when 'true' ->
	      _cor0
	  %% Line 160
	  <[{Source,Destination}|FlowWorkList],SSAWorkList,Environment> when 'true' ->
	      let <_5166> = {Source,Destination}
	      in  case _cor0 of
		    <{'env',_1829,Flags,_cor3,_cor4,_cor5}> when 'true' ->
			let <_328> =
			    %% Line 416
			    call 'gb_sets':'is_member'
				(_5166, Flags)
			in  %% Line 161
			    case _328 of
			      %% Line 162
			      <'true'> when 'true' ->
				  %% Line 163
				  apply 'scc'/3
				      (FlowWorkList, _cor1, _cor0)
			      %% Line 164
			      <'false'> when 'true' ->
				  let <Environment1> =
				      %% Line 165
				      apply 'mark_as_executable'/2
					  ({Source,Destination}, _cor0)
				  in  let <Code> =
					  %% Line 166
					  apply 'extract_code'/2
					      (Destination, _cor0)
				      in  let <_5819> =
					      %% Line 168
					      apply 'visit_phi_nodes'/4
						  (Code, Destination, Environment1, [])
					  in  %% Line 167
					      case _5819 of
						<{Environment2,Code1,ExtraSSA}> when 'true' ->
						    %% Line 393
						    case <Destination,Environment2> of
						      <Node,{'env',_cor4,_cor5,Handled,_cor6,_cor7}> when 'true' ->
							  let <_4231> =
							      %% Line 394
							      call 'gb_sets':'is_element'
								  (Destination, Handled)
							  in  case _4231 of
								<'true'> when 'true' ->
								    let <_cor6> =
									call 'erlang':'++'
									    (ExtraSSA, _cor1)
								    in  apply 'scc'/3
									    (FlowWorkList, _cor6, Environment2)
								<'false'> when 'true' ->
								    let <_2366> =
									apply 'visit_expressions'/2
									    (Code1, Environment2)
								    in  case _2366 of
									  <{MoreFlowDests,MoreSSAWork,Environment3}> when 'true' ->
									      let <_cor12> =
										  ( letrec
											'lc$^0'/1 =
											    fun (_cor10) ->
												case _cor10 of
												  <[Node|_cor9]> when 'true' ->
												      let <_cor11> =
													  apply 'lc$^0'/1
													      (_cor9)
												      in  ( [{Destination,Node}|_cor11]
													    -| ['compiler_generated'] )
												  <[]> when 'true' ->
												      []
												  ( <_8600> when 'true' ->
													( primop 'match_fail'
													      ({'function_clause',_cor10})
													  -| [{'function_name',{'lc$^0',1}}] )
												    -| ['compiler_generated'] )
												end
										    in  case MoreFlowDests of
											  <[Node|_cor9]> when 'true' ->
											      let <_cor11> =
												  apply 'lc$^0'/1
												      (_cor9)
											      in  ( [{Destination,Node}|_cor11]
												    -| ['compiler_generated'] )
											  <[]> when 'true' ->
											      []
											  ( <_8600> when 'true' ->
												primop 'match_fail'
												    ({'function_clause',MoreFlowDests})
											    -| ['compiler_generated'] )
											end
										    -| ['list_comprehension'] )
									      in  let <FlowWorkList1> =
										      call 'erlang':'++'
											  (_cor12, FlowWorkList)
										  in  let <_cor15> =
											  call 'erlang':'++'
											      (MoreSSAWork, _cor1)
										      in  let <SSAWorkList1> =
											      call 'erlang':'++'
												  (ExtraSSA, _cor15)
											  in  let <Environment4> =
												  apply 'mark_as_handled'/2
												      (Destination, Environment3)
											      in  apply 'scc'/3
												      (FlowWorkList1, SSAWorkList1, Environment4)
									  ( <_cor7> when 'true' ->
										primop 'match_fail'
										    ({'badmatch',_2366})
									    -| ['compiler_generated'] )
									end
								( <_cor18> when 'true' ->
								      primop 'match_fail'
									  ({'case_clause',_4231})
								  -| ['compiler_generated'] )
							      end
						      ( <_cor3,_7960> when 'true' ->
							    primop 'match_fail'
								({'function_clause',Destination,Environment2})
							-| ['compiler_generated'] )
						    end
						( <_cor5> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_5819})
						  -| ['compiler_generated'] )
					      end
			      ( <_cor19> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_328})
				-| ['compiler_generated'] )
			    end
		    ( <_4578> when 'true' ->
			  primop 'match_fail'
			      ({'function_clause',_cor0})
		      -| ['compiler_generated'] )
		  end
	  %% Line 183
	  <[],[{Node,Instruction}|SSAWorkList],Environment> when 'true' ->
	      let <_5148> =
		  %% Line 184
		  apply 'reachable'/2
		      (Node, _cor0)
	      in  %% Line 184
		  case _5148 of
		    %% Line 185
		    <'true'> when 'true' ->
			let <_5654> =
			    %% Line 186
			    call 'hipe_rtl':'is_phi'
				(Instruction)
			in  %% Line 186
			    case _5654 of
			      %% Line 187
			      <'true'> when 'true' ->
				  let <_1354> =
				      %% Line 188
				      apply 'visit_phi'/3
					  (Instruction, Node, _cor0)
				  in  %% Line 188
				      case _1354 of
					<{Environment1,MoreSSA}> when 'true' ->
					    let <_cor21> =
						%% Line 189
						call 'erlang':'++'
						    (MoreSSA, SSAWorkList)
					    in  %% Line 189
						apply 'scc'/3
						    ([], _cor21, Environment1)
					( <_cor20> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_1354})
					  -| ['compiler_generated'] )
				      end
			      %% Line 190
			      <'false'> when 'true' ->
				  let <_5441> =
				      %% Line 192
				      apply 'visit_expression'/2
					  (Instruction, _cor0)
				  in  %% Line 191
				      case _5441 of
					<{MoreFlowDests,MoreSSAWork,Environment1}> when 'true' ->
					    let <SSAWorkList1> =
						%% Line 193
						call 'erlang':'++'
						    (MoreSSAWork, SSAWorkList)
					    in  let <_cor28> =
						    %% Line 194
						    ( letrec
							  'lc$^1'/1 =
							      fun (_cor26) ->
								  case _cor26 of
								    <[Destination|_cor25]> when 'true' ->
									let <_cor27> =
									    apply 'lc$^1'/1
										(_cor25)
									in  ( [{Node,Destination}|_cor27]
									      -| ['compiler_generated'] )
								    <[]> when 'true' ->
									[]
								    ( <_3422> when 'true' ->
									  ( primop 'match_fail'
										({'function_clause',_cor26})
									    -| [{'function_name',{'lc$^1',1}}] )
								      -| ['compiler_generated'] )
								  end
						      in  case MoreFlowDests of
							    <[Destination|_cor25]> when 'true' ->
								let <_cor27> =
								    apply 'lc$^1'/1
									(_cor25)
								in  ( [{Node,Destination}|_cor27]
								      -| ['compiler_generated'] )
							    <[]> when 'true' ->
								[]
							    ( <_3422> when 'true' ->
								  primop 'match_fail'
								      ({'function_clause',MoreFlowDests})
							      -| ['compiler_generated'] )
							  end
						      -| ['list_comprehension'] )
						in  %% Line 195
						    apply 'scc'/3
							(_cor28, SSAWorkList1, Environment1)
					( <_cor22> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_5441})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor30> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_5654})
				-| ['compiler_generated'] )
			    end
		    %% Line 197
		    <'false'> when 'true' ->
			%% Line 198
			apply 'scc'/3
			    ([], SSAWorkList, _cor0)
		    ( <_cor31> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_5148})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor34,_cor33,_cor32> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'scc',3}}] )
	    -| ['compiler_generated'] )
	end
'update_cfg'/1 =
    %% Line 210
    fun (_cor0) ->
	case _cor0 of
	  <{'env',CFG,_cor2,_cor3,_cor4,_cor5}> when 'true' ->
	      let <NodeList> =
		  %% Line 462
		  call 'hipe_rtl_cfg':'labels'
		      (CFG)
	      in  let <CFG1> =
		      %% Line 212
		      apply 'update_nodes'/2
			  (NodeList, _cor0)
		  in  %% Line 214
		      call 'hipe_rtl_cfg':'remove_unreachable_code'
			  (CFG1)
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'function_clause',_cor0})
	    -| ['compiler_generated'] )
	end
'update_nodes'/2 =
    %% Line 226
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],Environment> when 'true' ->
	      case _cor0 of
		<{'env',CFG,_cor2,_cor3,_cor4,_cor5}> when 'true' ->
		    CFG
		( <_5603> when 'true' ->
		      primop 'match_fail'
			  ({'function_clause',_cor0})
		  -| ['compiler_generated'] )
	      end
	  %% Line 228
	  <[Node|NodeList],Environment> when 'true' ->
	      let <_6801> =
		  %% Line 230
		  apply 'reachable'/2
		      (Node, _cor0)
	      in  let <_cor8> =
		      %% Line 230
		      case _6801 of
			%% Line 231
			<'true'> when 'true' ->
			    let <Instructions> =
				%% Line 232
				apply 'extract_code'/2
				    (Node, _cor0)
			    in  let <Updater> =
				    %% Line 233
				    fun (_cor3) ->
					%% Line 234
					apply 'update_instruction'/2
					    (_cor3, _cor0)
				in  let <NewInstructions> =
					%% Line 236
					call 'lists':'flatmap'
					    (Updater, Instructions)
				    in  %% Line 237
					apply 'update_code'/3
					    (Node, NewInstructions, _cor0)
			%% Line 238
			<'false'> when 'true' ->
			    _cor0
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_6801})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 241
		      apply 'update_nodes'/2
			  (NodeList, _cor8)
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'update_nodes',2}}] )
	    -| ['compiler_generated'] )
	end
'update_code'/3 =
    %% Line 253
    fun (_cor2,_cor1,_cor0) ->
	case _cor0 of
	  <{'env',CFG,_457,_cor3,_cor4,_cor5}> when 'true' ->
	      let <BB> =
		  %% Line 255
		  call 'hipe_rtl_cfg':'bb'
		      (CFG, _cor2)
	      in  let <OrderedInstructions> =
		      %% Line 256
		      apply 'put_phi_nodes_first'/1
			  (_cor1)
		  in  let <NewBB> =
			  %% Line 257
			  call 'hipe_bb':'code_update'
			      (BB, OrderedInstructions)
		      in  let <NewCFG> =
			      %% Line 258
			      call 'hipe_rtl_cfg':'bb_add'
				  (CFG, _cor2, NewBB)
			  in  %% Line 259
			      call 'erlang':'setelement'
				  (2, _cor0, NewCFG)
	  ( <_8151> when 'true' ->
		primop 'match_fail'
		    ({'function_clause',_cor0})
	    -| ['compiler_generated'] )
	end
'put_phi_nodes_first'/1 =
    %% Line 268
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 270
	    fun (_cor1) ->
		call 'hipe_rtl':'is_phi'
		    (_cor1)
	in  let <_3672> =
		%% Line 276
		apply 'partition'/4
		    (_cor3, _cor0, [], [])
	    in  %% Line 269
		case _3672 of
		  <{PhiInstructions,OtherInstructions}> when 'true' ->
		      %% Line 271
		      call 'erlang':'++'
			  (PhiInstructions, OtherInstructions)
		  ( <_cor4> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_3672})
		    -| ['compiler_generated'] )
		end
'partition'/4 =
    %% Line 278
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_Function,[],True,False> when 'true' ->
	      let <_cor5> =
		  %% Line 279
		  call 'lists':'reverse'
		      (_cor1)
	      in  let <_cor4> =
		      %% Line 279
		      call 'lists':'reverse'
			  (_cor0)
		  in  %% Line 279
		      {_cor5,_cor4}
	  %% Line 281
	  <Function,[Hd|Tail],True,False> when 'true' ->
	      let <_6986> =
		  %% Line 282
		  apply _cor3
		      (Hd)
	      in  %% Line 282
		  case _6986 of
		    %% Line 283
		    <'true'> when 'true' ->
			%% Line 284
			apply 'partition'/4
			    (_cor3, Tail, [Hd|_cor1], _cor0)
		    %% Line 285
		    <'false'> when 'true' ->
			%% Line 286
			apply 'partition'/4
			    (_cor3, Tail, _cor1, [Hd|_cor0])
		    ( <_cor6> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_6986})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'partition',4}}] )
	    -| ['compiler_generated'] )
	end
'visit_phi_nodes'/4 =
    %% Line 300
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[],CurrentNode,_X_Environment,_X_SSAWork> when 'true' ->
	      do  %% Line 301
		  call 'io':'format'
		      ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[88|[73|[84|[69|[68|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[32|[126|[119|[32|[64|[126|[119|[58|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [{[126|[119|[58|[32|[118|[105|[115|[105|[116|[95|[112|[104|[105|[95|[110|[111|[100|[101|[115|[47|[52|[32|[66|[97|[115|[105|[99|[32|[98|[108|[111|[99|[107|[32|[99|[111|[110|[116|[97|[105|[110|[115|[32|[110|[111|[32|[99|[111|[100|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],%% Line 302
																																																																				     'hipe_rtl_ssa_const_prop',_cor2}|%% Line 302
																																																																								      ['hipe_rtl_ssa_const_prop'|[302]]])
		  %% Line 302
		  call 'erlang':'error'
		      ({'hipe_rtl_ssa_const_prop',302,{[126|[119|[58|[32|[118|[105|[115|[105|[116|[95|[112|[104|[105|[95|[110|[111|[100|[101|[115|[47|[52|[32|[66|[97|[115|[105|[99|[32|[98|[108|[111|[99|[107|[32|[99|[111|[110|[116|[97|[105|[110|[115|[32|[110|[111|[32|[99|[111|[100|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],'hipe_rtl_ssa_const_prop',_cor2}})
	  %% Line 303
	  <Is = [Inst|Insts],Node,Environment,SSAWork> when 'true' ->
	      let <_7622> =
		  %% Line 304
		  call 'hipe_rtl':'is_phi'
		      (Inst)
	      in  %% Line 304
		  case _7622 of
		    %% Line 305
		    <'true'> when 'true' ->
			let <_6205> =
			    %% Line 306
			    apply 'visit_phi'/3
				(Inst, _cor2, _cor1)
			in  %% Line 306
			    case _6205 of
			      <{Environment1,NewSSA}> when 'true' ->
				  let <_cor8> =
				      %% Line 307
				      call 'erlang':'++'
					  (NewSSA, _cor0)
				  in  %% Line 307
				      apply 'visit_phi_nodes'/4
					  (Insts, _cor2, Environment1, _cor8)
			      ( <_cor7> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_6205})
				-| ['compiler_generated'] )
			    end
		    %% Line 308
		    <'false'> when 'true' ->
			%% Line 309
			{_cor1,_cor3,_cor0}
		    ( <_cor9> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_7622})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'visit_phi_nodes',4}}] )
	    -| ['compiler_generated'] )
	end
'visit_phi'/3 =
    %% Line 321
    fun (_cor2,_cor1,_cor0) ->
	let <ArgumentList> =
	    %% Line 322
	    call 'hipe_rtl':'phi_arglist'
		(_cor2)
	in  let <Value> =
		%% Line 323
		apply 'get_phi_value'/4
		    (ArgumentList, _cor1, _cor0, 'top')
	    in  let <Name> =
		    %% Line 324
		    call 'hipe_rtl':'phi_dst'
			(_cor2)
		in  let <_5611> =
			%% Line 325
			apply 'update_lattice_value'/2
			    ({Name,Value}, _cor0)
		    in  %% Line 325
			case _5611 of
			  <{Environment1,SSAWork}> when 'true' ->
			      %% Line 326
			      {Environment1,SSAWork}
			  ( <_cor6> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_5611})
			    -| ['compiler_generated'] )
			end
'get_phi_value'/4 =
    %% Line 342
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[],_X_CurrentNode,_X_Environment,CurrentValue> when 'true' ->
	      _cor0
	  %% Line 344
	  <[{PredecessorNode,Variable}|ArgList],CurrentNode,Environment,CurrentValue> when 'true' ->
	      let <_1760> = {PredecessorNode,_cor2}
	      in  case _cor1 of
		    <{'env',_1567,Flags,_4234,_cor4,_cor5}> when 'true' ->
			let <_251> =
			    %% Line 416
			    call 'gb_sets':'is_member'
				(_1760, Flags)
			in  %% Line 348
			    case _251 of
			      %% Line 349
			      <'true'> when 'true' ->
				  let <_1499> =
				      %% Line 1054
				      call 'hipe_rtl_arch':'is_precoloured'
					  (Variable)
				  in  let <_4644> =
					  %% Line 1054
					  call 'hipe_rtl':'is_const_label'
					      (Variable)
				      in  let <NewValue> =
					      %% Line 1054
					      case call 'erlang':'or'
						       (_1499, _4644) of
						%% Line 1055
						<'true'> when 'true' ->
						    %% Line 1056
						    'bottom'
						%% Line 1057
						<'false'> when 'true' ->
						    %% Line 1058
						    apply 'lookup_lattice_value2'/2
							(Variable, _cor1)
					      end
					  in  %% Line 351
					      case NewValue of
						%% Line 352
						<'bottom'> when 'true' ->
						    %% Line 353
						    'bottom'
						%% Line 354
						<'top'> when 'true' ->
						    %% Line 355
						    apply 'get_phi_value'/4
							(ArgList, _cor2, _cor1, _cor0)
						%% Line 356
						<_cor13> when 'true' ->
						    %% Line 357
						    case _cor0 of
						      %% Line 358
						      <'top'> when 'true' ->
							  %% Line 359
							  apply 'get_phi_value'/4
							      (ArgList, _cor2, _cor1, NewValue)
						      %% Line 360
						      <_cor14> when 'true' ->
							  %% Line 361
							  case <> of
							    %% Line 362
							    <>
								when call 'erlang':'=:='
								      (NewValue,
								       _cor0) ->
								%% Line 363
								apply 'get_phi_value'/4
								    (ArgList, _cor2, _cor1, NewValue)
							    %% Line 364
							    <> when 'true' ->
								%% Line 365
								'bottom'
							  end
						    end
					      end
			      %% Line 369
			      <'false'> when 'true' ->
				  %% Line 370
				  apply 'get_phi_value'/4
				      (ArgList, _cor2, _cor1, _cor0)
			      ( <_cor8> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_251})
				-| ['compiler_generated'] )
			    end
		    ( <_4578> when 'true' ->
			  primop 'match_fail'
			      ({'function_clause',_cor1})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'get_phi_value',4}}] )
	    -| ['compiler_generated'] )
	end
'reachable'/2 =
    %% Line 375
    fun (_cor1,_cor0) ->
	case _cor0 of
	  <{'env',CFG,_cor2,_cor3,_cor4,_cor5}> when 'true' ->
	      let <Predecessors> =
		  %% Line 410
		  call 'hipe_rtl_cfg':'pred'
		      (CFG, _cor1)
	      in  let <Executable> =
		      %% Line 377
		      fun (_cor3) ->
			  let <_3755> = {_cor3,_cor1}
			  in  case _cor0 of
				<{'env',_cor2,Flags,_4750,_cor4,_cor5}> when 'true' ->
				    %% Line 416
				    call 'gb_sets':'is_member'
					(_3755, Flags)
				( <_4578> when 'true' ->
				      primop 'match_fail'
					  ({'function_clause',_cor0})
				  -| ['compiler_generated'] )
			      end
		  in  %% Line 378
		      call 'lists':'any'
			  (Executable, Predecessors)
	  ( <_481> when 'true' ->
		primop 'match_fail'
		    ({'function_clause',_cor0})
	    -| ['compiler_generated'] )
	end
'mark_as_executable'/2 =
    %% Line 382
    fun (_cor1,_cor0) ->
	case _cor0 of
	  <{'env',_cor2,Flags,_cor3,_cor4,_cor5}> when 'true' ->
	      let <ExecutableFlags1> =
		  %% Line 384
		  call 'gb_sets':'add'
		      (_cor1, Flags)
	      in  %% Line 385
		  call 'erlang':'setelement'
		      (3, _cor0, ExecutableFlags1)
	  ( <_2457> when 'true' ->
		primop 'match_fail'
		    ({'function_clause',_cor0})
	    -| ['compiler_generated'] )
	end
'mark_as_handled'/2 =
    %% Line 389
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Node,Environment = {'env',_cor7,_cor8,Handled,_cor9,_cor10}> when 'true' ->
	      let <NewHandled> =
		  %% Line 390
		  call 'gb_sets':'add_element'
		      (_cor1, Handled)
	      in  %% Line 391
		  call 'erlang':'setelement'
		      (4, _cor0, NewHandled)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'mark_as_handled',2}}] )
	    -| ['compiler_generated'] )
	end
'extract_code'/2 =
    %% Line 398
    fun (_cor1,_cor0) ->
	case _cor0 of
	  <{'env',CFG,_cor2,_cor3,_cor4,_cor5}> when 'true' ->
	      let <_4751> =
		  %% Line 400
		  call 'hipe_rtl_cfg':'bb'
		      (CFG, _cor1)
	      in  %% Line 400
		  case _4751 of
		    %% Line 401
		    <'not_found'> when 'true' ->
			do  call 'io':'format'
				([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[87|[97|[114|[110|[105|[110|[103|[58|[32|[91|[126|[115|[58|[126|[119|[93|[58|[32|[67|[111|[117|[108|[100|[32|[110|[111|[116|[32|[102|[105|[110|[100|[32|[108|[97|[98|[101|[108|[32|[126|[119|[46|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['hipe_rtl_ssa_const_prop'|[401|[_cor1|[]]]])
			    %% Line 402
			    []
		    %% Line 403
		    <BB> when 'true' ->
			call 'hipe_bb':'code'
			    (_4751)
		  end
	  ( <_7081> when 'true' ->
		primop 'match_fail'
		    ({'function_clause',_cor0})
	    -| ['compiler_generated'] )
	end
'update_lattice_value'/2 =
    %% Line 420
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{[],_X_NewValue},Environment> when 'true' ->
	      %% Line 421
	      {_cor0,[]}
	  %% Line 422
	  <{Names,NewValue},Environment>
	      when call 'erlang':'is_list'
		    (Names) ->
	      let <Update> =
		  %% Line 424
		  fun (_cor5,_cor4) ->
		      case <_cor5,_cor4> of
			<Dst,{Env,SSA}> when 'true' ->
			    let <_6698> =
				%% Line 426
				apply 'update_lattice_value'/2
				    ({_cor5,NewValue}, Env)
			    in  %% Line 425
				case _6698 of
				  <{NewEnv,NewSSA}> when 'true' ->
				      let <_cor3> =
					  %% Line 427
					  call 'erlang':'++'
					      (SSA, NewSSA)
				      in  %% Line 427
					  {NewEnv,_cor3}
				  ( <_cor2> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_6698})
				    -| ['compiler_generated'] )
				end
			( <_cor7,_cor6> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor5,_cor4})
				-| [{'function_name',{'-update_lattice_value/2-fun-0-',2}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 429
		  call 'lists':'foldl'
		      (Update, {_cor0,[]}, Names)
	  %% Line 432
	  <{Name,NewValue},Environment> when 'true' ->
	      case _cor0 of
		<{'env',_cor2,_cor3,_cor4,Values,_cor5}> when 'true' ->
		    let <_6885> =
			%% Line 435
			call 'gb_trees':'lookup'
			    (Name, Values)
		    in  let <LatticeValues1,SSAWork> =
			    %% Line 435
			    case _6885 of
			      %% Line 436
			      <'none'> when 'true' ->
				  let <_cor11> =
				      %% Line 437
				      call 'gb_trees':'insert'
					  (Name, NewValue, Values)
				  in  let <_cor10> =
					  %% Line 438
					  apply 'lookup_ssa_edges'/2
					      (Name, _cor0)
				      in  <_cor11,_cor10>
			      %% Line 439
			      <{'value',_cor22}>
				  when call 'erlang':'=:='
					(_cor22,
					 NewValue) ->
				  %% Line 440
				  <Values,[]>
			      %% Line 441
			      <{'value',_cor23}> when 'true' ->
				  let <_cor13> =
				      %% Line 442
				      call 'gb_trees':'update'
					  (Name, NewValue, Values)
				  in  let <_cor12> =
					  %% Line 443
					  apply 'lookup_ssa_edges'/2
					      (Name, _cor0)
				      in  <_cor13,_cor12>
			      ( <_cor14> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_6885})
				-| ['compiler_generated'] )
			    end
			in  let <_cor19> =
				%% Line 445
				call 'erlang':'setelement'
				    (5, _cor0, LatticeValues1)
			    in  %% Line 445
				{_cor19,SSAWork}
		( <_1908> when 'true' ->
		      primop 'match_fail'
			  ({'function_clause',_cor0})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor21,_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'update_lattice_value',2}}] )
	    -| ['compiler_generated'] )
	end
'lookup_ssa_edges'/2 =
    %% Line 449
    fun (_cor1,_cor0) ->
	case _cor0 of
	  <{'env',_cor2,_cor3,_cor4,_cor5,Edges}> when 'true' ->
	      %% Line 451
	      case call 'gb_trees':'lookup'
		       (_cor1, Edges) of
		%% Line 452
		<{'value',X}> when 'true' ->
		    X
		%% Line 454
		<_cor6> when 'true' ->
		    %% Line 455
		    []
	      end
	  ( <_8033> when 'true' ->
		primop 'match_fail'
		    ({'function_clause',_cor0})
	    -| ['compiler_generated'] )
	end
'visit_expression'/2 =
    %% Line 106
    fun (_cor1,_cor0) ->
	%% Line 107
	case _cor1 of
	  %% Line 108
	  <{'alu',_cor5,_cor6,_cor7,_cor8}> when 'true' ->
	      %% Line 109
	      apply 'visit_alu'/2
		  (_cor1, _cor0)
	  %% Line 110
	  <{'alub',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16}> when 'true' ->
	      %% Line 111
	      apply 'visit_alub'/2
		  (_cor1, _cor0)
	  %% Line 112
	  <{'branch',_cor17,_cor18,_cor19,_cor20,_cor21,_cor22}> when 'true' ->
	      %% Line 113
	      apply 'visit_branch'/2
		  (_cor1, _cor0)
	  %% Line 114
	  <{'call',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29}> when 'true' ->
	      %% Line 115
	      apply 'visit_call'/2
		  (_cor1, _cor0)
	  %% Line 120
	  <{'fconv',_cor30,_cor31}> when 'true' ->
	      %% Line 121
	      apply 'visit_fconv'/2
		  (_cor1, _cor0)
	  %% Line 122
	  <{'fixnumop',_cor32,_cor33,_cor34}> when 'true' ->
	      %% Line 123
	      apply 'visit_fixnumop'/2
		  (_cor1, _cor0)
	  %% Line 124
	  <{'fload',_cor35,_cor36,_cor37}> when 'true' ->
	      %% Line 125
	      apply 'visit_fload'/2
		  (_cor1, _cor0)
	  %% Line 126
	  <{'fmove',_cor38,_cor39}> when 'true' ->
	      %% Line 127
	      apply 'visit_fmove'/2
		  (_cor1, _cor0)
	  %% Line 128
	  <{'fp',_cor40,_cor41,_cor42,_cor43}> when 'true' ->
	      %% Line 129
	      apply 'visit_fp'/2
		  (_cor1, _cor0)
	  %% Line 130
	  <{'fp_unop',_cor44,_cor45,_cor46}> when 'true' ->
	      %% Line 131
	      apply 'visit_fp_unop'/2
		  (_cor1, _cor0)
	  %% Line 136
	  <{'goto',_cor47}> when 'true' ->
	      let <GotoLabel> =
		  %% Line 517
		  call 'hipe_rtl':'goto_label'
		      (_cor1)
	      in  %% Line 518
		  {[GotoLabel|[]],[],_cor0}
	  %% Line 138
	  <{'goto_index',_cor48,_cor49,_cor50}> when 'true' ->
	      %% Line 139
	      apply 'visit_goto_index'/2
		  (_cor1, _cor0)
	  %% Line 142
	  <{'load',_cor51,_cor52,_cor53,_cor54,_cor55}> when 'true' ->
	      %% Line 143
	      apply 'visit_load'/2
		  (_cor1, _cor0)
	  %% Line 144
	  <{'load_address',_cor56,_cor57,_cor58}> when 'true' ->
	      %% Line 145
	      apply 'visit_load_address'/2
		  (_cor1, _cor0)
	  %% Line 146
	  <{'load_atom',_cor59,_cor60}> when 'true' ->
	      %% Line 147
	      apply 'visit_load_atom'/2
		  (_cor1, _cor0)
	  %% Line 148
	  <{'load_word_index',_cor61,_cor62,_cor63}> when 'true' ->
	      %% Line 149
	      apply 'visit_load_word_index'/2
		  (_cor1, _cor0)
	  %% Line 150
	  <{'move',_cor64,_cor65}> when 'true' ->
	      %% Line 151
	      apply 'visit_move'/2
		  (_cor1, _cor0)
	  %% Line 152
	  <{'multimove',_cor66,_cor67}> when 'true' ->
	      %% Line 153
	      apply 'visit_multimove'/2
		  (_cor1, _cor0)
	  %% Line 161
	  <{'switch',_cor68,_cor69,_cor70}> when 'true' ->
	      %% Line 162
	      apply 'visit_switch'/2
		  (_cor1, _cor0)
	  %% Line 163
	  <_cor71> when 'true' ->
	      %% Line 165
	      {[],[],_cor0}
	end
'visit_branch'/2 =
    %% Line 193
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 194
	    call 'hipe_rtl':'branch_src1'
		(_cor1)
	in  let <_cor3> =
		%% Line 1054
		call 'hipe_rtl_arch':'is_precoloured'
		    (_cor2)
	    in  let <_6117> =
		    %% Line 1054
		    call 'hipe_rtl':'is_const_label'
			(_cor2)
		in  let <Val1> =
			%% Line 1054
			case call 'erlang':'or'
				 (_cor3, _6117) of
			  %% Line 1055
			  <'true'> when 'true' ->
			      %% Line 1056
			      'bottom'
			  %% Line 1057
			  <'false'> when 'true' ->
			      %% Line 1058
			      apply 'lookup_lattice_value2'/2
				  (_cor2, _cor0)
			end
		    in  let <_cor4> =
			    %% Line 195
			    call 'hipe_rtl':'branch_src2'
				(_cor1)
			in  let <_cor3> =
				%% Line 1054
				call 'hipe_rtl_arch':'is_precoloured'
				    (_cor4)
			    in  let <_5862> =
				    %% Line 1054
				    call 'hipe_rtl':'is_const_label'
					(_cor4)
				in  let <Val2> =
					%% Line 1054
					case call 'erlang':'or'
						 (_cor3, _5862) of
					  %% Line 1055
					  <'true'> when 'true' ->
					      %% Line 1056
					      'bottom'
					  %% Line 1057
					  <'false'> when 'true' ->
					      %% Line 1058
					      apply 'lookup_lattice_value2'/2
						  (_cor4, _cor0)
					end
				    in  let <_cor6> =
					    %% Line 196
					    call 'hipe_rtl':'branch_cond'
						(_cor1)
					in  let <_3269> =
						%% Line 196
						apply 'evaluate_relop'/3
						    (Val1, _cor6, Val2)
					    in  let <_cor12> =
						    %% Line 196
						    case _3269 of
						      %% Line 197
						      <'true'> when 'true' ->
							  let <_cor7> =
							      call 'hipe_rtl':'branch_true_label'
								  (_cor1)
							  in  [_cor7|[]]
						      %% Line 198
						      <'false'> when 'true' ->
							  let <_cor8> =
							      call 'hipe_rtl':'branch_false_label'
								  (_cor1)
							  in  [_cor8|[]]
						      %% Line 199
						      <'bottom'> when 'true' ->
							  let <_cor9> =
							      call 'hipe_rtl':'branch_true_label'
								  (_cor1)
							  in  let <_cor10> =
								  %% Line 200
								  call 'hipe_rtl':'branch_false_label'
								      (_cor1)
							      in  [_cor9|%% Line 200
									 [_cor10|[]]]
						      %% Line 201
						      <'top'> when 'true' ->
							  []
						      ( <_cor11> when 'true' ->
							    primop 'match_fail'
								({'case_clause',_3269})
							-| ['compiler_generated'] )
						    end
						in  %% Line 203
						    {_cor12,[],_cor0}
'evaluate_relop'/3 =
    %% Line 214
    fun (_cor2,_cor1,_cor0) ->
	%% Line 215
	case <> of
	  %% Line 216
	  <>
	      when let <_cor3> =
		    call 'erlang':'=:='
			(_cor2, 'bottom')
		in  let <_cor4> =
			call 'erlang':'=:='
			    (_cor0, 'bottom')
		    in  call 'erlang':'or'
			    (_cor3, _cor4) ->
	      'bottom'
	  %% Line 217
	  <>
	      when let <_cor5> =
		    call 'erlang':'=:='
			(_cor2, 'top')
		in  let <_cor6> =
			call 'erlang':'=:='
			    (_cor0, 'top')
		    in  call 'erlang':'or'
			    (_cor5, _cor6) ->
	      'top'
	  %% Line 218
	  <> when 'true' ->
	      call 'hipe_rtl_arch':'eval_cond'
		  (_cor1, _cor2, _cor0)
	end
'evaluate_fixnumop'/2 =
    %% Line 230
    fun (_cor1,_cor0) ->
	%% Line 231
	case <> of
	  <>
	      when call 'erlang':'=:='
		    (_cor1,
		     'top') ->
	      %% Line 232
	      'top'
	  %% Line 233
	  <>
	      when call 'erlang':'=:='
		    (_cor1,
		     'bottom') ->
	      %% Line 234
	      'bottom'
	  %% Line 235
	  <>
	      when call 'erlang':'is_integer'
		    (_cor1) ->
	      %% Line 236
	      case _cor0 of
		%% Line 237
		<'tag'> when 'true' ->
		    %% Line 238
		    call 'hipe_tagscheme':'mk_fixnum'
			(_cor1)
		%% Line 239
		<'untag'> when 'true' ->
		    %% Line 240
		    call 'hipe_tagscheme':'fixnum_val'
			(_cor1)
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor0})
		  -| ['compiler_generated'] )
	      end
	  ( <> when 'true' ->
		primop 'match_fail'
		    ('if_clause')
	    -| ['compiler_generated'] )
	end
'visit_alu'/2 =
    %% Line 252
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 253
	    call 'hipe_rtl':'alu_src1'
		(_cor1)
	in  let <_cor3> =
		%% Line 1054
		call 'hipe_rtl_arch':'is_precoloured'
		    (_cor2)
	    in  let <_5993> =
		    %% Line 1054
		    call 'hipe_rtl':'is_const_label'
			(_cor2)
		in  let <Val1> =
			%% Line 1054
			case call 'erlang':'or'
				 (_cor3, _5993) of
			  %% Line 1055
			  <'true'> when 'true' ->
			      %% Line 1056
			      'bottom'
			  %% Line 1057
			  <'false'> when 'true' ->
			      %% Line 1058
			      apply 'lookup_lattice_value2'/2
				  (_cor2, _cor0)
			end
		    in  let <_cor4> =
			    %% Line 254
			    call 'hipe_rtl':'alu_src2'
				(_cor1)
			in  let <_cor3> =
				%% Line 1054
				call 'hipe_rtl_arch':'is_precoloured'
				    (_cor4)
			    in  let <_4930> =
				    %% Line 1054
				    call 'hipe_rtl':'is_const_label'
					(_cor4)
				in  let <Val2> =
					%% Line 1054
					case call 'erlang':'or'
						 (_cor3, _4930) of
					  %% Line 1055
					  <'true'> when 'true' ->
					      %% Line 1056
					      'bottom'
					  %% Line 1057
					  <'false'> when 'true' ->
					      %% Line 1058
					      apply 'lookup_lattice_value2'/2
						  (_cor4, _cor0)
					end
				    in  let <_cor6> =
					    %% Line 255
					    call 'hipe_rtl':'alu_op'
						(_cor1)
					in  let <_3055> =
						%% Line 255
						apply 'evaluate_alu'/3
						    (Val1, _cor6, Val2)
					    in  %% Line 255
						case _3055 of
						  <{NewVal,_cor11,_cor12,_cor13,_cor14}> when 'true' ->
						      let <_cor8> =
							  %% Line 256
							  call 'hipe_rtl':'alu_dst'
							      (_cor1)
						      in  let <_1395> =
							      apply 'update_lattice_value'/2
								  ({_cor8,NewVal}, _cor0)
							  in  case _1395 of
								<{Env1,SSAWork}> when 'true' ->
								    {[],SSAWork,Env1}
								( <_cor3> when 'true' ->
								      primop 'match_fail'
									  ({'badmatch',_1395})
								  -| ['compiler_generated'] )
							      end
						  ( <_cor7> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_3055})
						    -| ['compiler_generated'] )
						end
'lattice_meet'/2 =
    %% Line 270
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 271
	    case <> of
	      <>
		  when let <_cor2> =
			call 'erlang':'=:='
			    (_cor1, 'top')
		    in  let <_cor3> =
			    call 'erlang':'=:='
				(_cor0, 'top')
			in  call 'erlang':'or'
				(_cor2, _cor3) ->
		  'top'
	      %% Line 272
	      <>
		  when let <_cor4> =
			call 'erlang':'=:='
			    (_cor1, 'bottom')
		    in  let <_cor5> =
			    call 'erlang':'=:='
				(_cor0, 'bottom')
			in  call 'erlang':'or'
				(_cor4, _cor5) ->
		  'bottom'
	      ( <> when 'true' ->
		    primop 'match_fail'
			('if_clause')
		-| ['compiler_generated'] )
	    end
	in  %% Line 275
	    {_cor6,_cor6,_cor6,_cor6,_cor6}
'partial_eval_shift'/3 =
    %% Line 286
    fun (_cor2,_cor1,_cor0) ->
	%% Line 287
	case <> of
	  %% Line 288
	  <>
	      when call 'erlang':'=:='
		    (_cor0,
		     0) ->
	      {_cor1,_cor1,_cor1,_cor1,_cor1}
	  %% Line 289
	  <>
	      when call 'erlang':'=:='
		    (_cor1,
		     0) ->
	      {0,'false','true','false','false'}
	  %% Line 290
	  <>
	      when let <_cor3> =
		    call 'erlang':'is_integer'
			(_cor0)
		in  let <_cor4> =
			call 'erlang':'>='
			    (_cor0, _cor2)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      %% Line 291
	      {0,'false','true',_cor1,_cor1}
	  %% Line 292
	  <> when 'true' ->
	      apply 'lattice_meet'/2
		  (_cor1, _cor0)
	end
'partial_eval_alu'/3 =
    %% Line 306
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Val1,'add',Val2> when 'true' ->
	      %% Line 307
	      case <> of
		%% Line 308
		<>
		    when call 'erlang':'=='
			  (_cor2,
			   0) ->
		    {_cor0,_cor0,_cor0,'false','false'}
		%% Line 309
		<>
		    when call 'erlang':'=='
			  (_cor0,
			   0) ->
		    {_cor2,_cor2,_cor2,'false','false'}
		%% Line 310
		<> when 'true' ->
		    apply 'lattice_meet'/2
			(_cor2, _cor0)
	      end
	  %% Line 312
	  <Val1,'sub',Val2> when 'true' ->
	      %% Line 313
	      case <> of
		%% Line 314
		<>
		    when call 'erlang':'=='
			  (_cor0,
			   0) ->
		    {_cor2,_cor2,_cor2,'false','false'}
		%% Line 315
		<> when 'true' ->
		    apply 'lattice_meet'/2
			(_cor2, _cor0)
	      end
	  %% Line 317
	  <Val1,'or',Val2> when 'true' ->
	      let <_6665> =
		  call 'hipe_rtl_arch':'word_size'
		      ()
	      in  let <_7277> =
		      call 'erlang':'bsl'
			  (_6665, 3)
		  in  let <_3839> =
			  call 'erlang':'bsl'
			      (1, _7277)
		      in  let <All_ones> =
			      call 'erlang':'-'
				  (_3839, 1)
			  in  %% Line 319
			      case <> of
				%% Line 320
				<>
				    when call 'erlang':'=='
					  (_cor2,
					   0) ->
				    {_cor0,_cor0,_cor0,'false','false'}
				%% Line 321
				<>
				    when call 'erlang':'=='
					  (_cor0,
					   0) ->
				    {_cor2,_cor2,_cor2,'false','false'}
				%% Line 322
				<>
				    when let <_cor4> =
					  call 'erlang':'=='
					      (_cor2, All_ones)
				      in  let <_cor5> =
					      call 'erlang':'=='
						  (_cor0, All_ones)
					  in  call 'erlang':'or'
						  (_cor4, _cor5) ->
				    %% Line 323
				    {All_ones,'true','false','false','false'}
				%% Line 324
				<> when 'true' ->
				    apply 'lattice_meet'/2
					(_cor2, _cor0)
			      end
	  %% Line 326
	  <Val1,'and',Val2> when 'true' ->
	      let <_5698> =
		  call 'hipe_rtl_arch':'word_size'
		      ()
	      in  let <_669> =
		      call 'erlang':'bsl'
			  (_5698, 3)
		  in  let <_5315> =
			  call 'erlang':'bsl'
			      (1, _669)
		      in  let <All_ones> =
			      call 'erlang':'-'
				  (_5315, 1)
			  in  %% Line 328
			      case <> of
				%% Line 329
				<>
				    when call 'erlang':'=='
					  (_cor2,
					   All_ones) ->
				    {_cor0,_cor0,_cor0,'false','false'}
				%% Line 330
				<>
				    when call 'erlang':'=='
					  (_cor0,
					   All_ones) ->
				    {_cor2,_cor2,_cor2,'false','false'}
				%% Line 331
				<>
				    when let <_cor7> =
					  call 'erlang':'=='
					      (_cor2, 0)
				      in  let <_cor8> =
					      call 'erlang':'=='
						  (_cor0, 0)
					  in  call 'erlang':'or'
						  (_cor7, _cor8) ->
				    {0,'false','true','false','false'}
				%% Line 332
				<> when 'true' ->
				    apply 'lattice_meet'/2
					(_cor2, _cor0)
			      end
	  %% Line 334
	  <Val1,'xor',Val2> when 'true' ->
	      %% Line 335
	      case <> of
		%% Line 336
		<>
		    when call 'erlang':'=='
			  (_cor2,
			   0) ->
		    {_cor0,_cor0,_cor0,'false','false'}
		%% Line 337
		<>
		    when call 'erlang':'=='
			  (_cor0,
			   0) ->
		    {_cor2,_cor2,_cor2,'false','false'}
		%% Line 338
		<> when 'true' ->
		    apply 'lattice_meet'/2
			(_cor2, _cor0)
	      end
	  %% Line 340
	  <Val1,'xornot',Val2> when 'true' ->
	      let <_203> =
		  call 'hipe_rtl_arch':'word_size'
		      ()
	      in  let <_7694> =
		      call 'erlang':'bsl'
			  (_203, 3)
		  in  let <_7111> =
			  call 'erlang':'bsl'
			      (1, _7694)
		      in  let <All_ones> =
			      call 'erlang':'-'
				  (_7111, 1)
			  in  %% Line 342
			      case <> of
				%% Line 343
				<>
				    when call 'erlang':'=='
					  (_cor2,
					   All_ones) ->
				    {_cor0,_cor0,_cor0,'false','false'}
				%% Line 344
				<>
				    when call 'erlang':'=='
					  (_cor0,
					   All_ones) ->
				    {_cor2,_cor2,_cor2,'false','false'}
				%% Line 345
				<> when 'true' ->
				    apply 'lattice_meet'/2
					(_cor2, _cor0)
			      end
	  %% Line 347
	  <Val1,'andnot',Val2> when 'true' ->
	      let <_1499> =
		  call 'hipe_rtl_arch':'word_size'
		      ()
	      in  let <_1385> =
		      call 'erlang':'bsl'
			  (_1499, 3)
		  in  let <_2402> =
			  call 'erlang':'bsl'
			      (1, _1385)
		      in  let <All_ones> =
			      call 'erlang':'-'
				  (_2402, 1)
			  in  %% Line 349
			      case <> of
				%% Line 350
				<>
				    when call 'erlang':'=='
					  (_cor0,
					   0) ->
				    {_cor2,_cor2,_cor2,'false','false'}
				%% Line 351
				<>
				    when let <_cor11> =
					  call 'erlang':'=='
					      (_cor2, 0)
				      in  let <_cor12> =
					      call 'erlang':'=='
						  (_cor0, All_ones)
					  in  call 'erlang':'or'
						  (_cor11, _cor12) ->
				    {0,'false','true','false','false'}
				%% Line 352
				<> when 'true' ->
				    apply 'lattice_meet'/2
					(_cor2, _cor0)
			      end
	  %% Line 354
	  <Val1,Op,Val2>
	      when let <_cor13> =
		    call 'erlang':'=:='
			(_cor1, 'sll')
		in  let <_cor14> =
			call 'erlang':'=:='
			    (_cor1, 'srl')
		    in  call 'erlang':'or'
			    (_cor13, _cor14) ->
	      let <_cor15> =
		  %% Line 355
		  call 'hipe_rtl_arch':'word_size'
		      ()
	      in  let <BitSize> =
		      %% Line 355
		      call 'erlang':'bsl'
			  (_cor15, 3)
		  in  %% Line 356
		      apply 'partial_eval_shift'/3
			  (BitSize, _cor2, _cor0)
	  %% Line 357
	  <Val1,Op,Val2>
	      when let <_cor17> =
		    call 'erlang':'=:='
			(_cor1, 'sllx')
		in  let <_cor18> =
			call 'erlang':'=:='
			    (_cor1, 'srlx')
		    in  call 'erlang':'or'
			    (_cor17, _cor18) ->
	      %% Line 358
	      apply 'partial_eval_shift'/3
		  (64, _cor2, _cor0)
	  %% Line 359
	  <Val1,'mul',Val2> when 'true' ->
	      apply 'lattice_meet'/2
		  (_cor2, _cor0)
	  %% Line 363
	  <Val1,Op,Val2>
	      when let <_cor19> =
		    call 'erlang':'=:='
			(_cor1, 'sra')
		in  let <_cor20> =
			call 'erlang':'=:='
			    (_cor1, 'srax')
		    in  call 'erlang':'or'
			    (_cor19, _cor20) ->
	      %% Line 364
	      case <> of
		%% Line 365
		<>
		    when call 'erlang':'=='
			  (_cor0,
			   0) ->
		    {_cor2,_cor2,_cor2,'false','false'}
		%% Line 366
		<>
		    when call 'erlang':'=='
			  (_cor2,
			   0) ->
		    {0,'false','true','false','false'}
		%% Line 367
		<> when 'true' ->
		    apply 'lattice_meet'/2
			(_cor2, _cor0)
	      end
	  ( <_cor23,_cor22,_cor21> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'partial_eval_alu',3}}] )
	    -| ['compiler_generated'] )
	end
'evaluate_alu'/3 =
    %% Line 380
    fun (_cor2,_cor1,_cor0) ->
	%% Line 381
	case <> of
	  %% Line 383
	  <>
	      when try
		    let <_cor3> =
			call 'erlang':'=:='
			    (_cor2, 'top')
		    in  let <_cor4> =
			    call 'erlang':'=:='
				(_cor0, 'top')
			in  let <_cor5> =
				call 'erlang':'or'
				    (_cor3, _cor4)
			    in  let <_cor6> =
				    call 'erlang':'=:='
					(_cor2, 'bottom')
				in  let <_cor7> =
					call 'erlang':'or'
					    (_cor5, _cor6)
				    in  let <_cor8> =
					    call 'erlang':'=:='
						(_cor0, 'bottom')
					in  call 'erlang':'or'
						(_cor7, _cor8)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      apply 'partial_eval_alu'/3
		  (_cor2, _cor1, _cor0)
	  %% Line 384
	  <> when 'true' ->
	      %% Line 385
	      case _cor1 of
		%% Line 386
		<'sllx'> when 'true' ->
		    call 'hipe_rtl_arith_64':'eval_alu'
			('sll', _cor2, _cor0)
		%% Line 387
		<'srlx'> when 'true' ->
		    call 'hipe_rtl_arith_64':'eval_alu'
			('srl', _cor2, _cor0)
		%% Line 388
		<'srax'> when 'true' ->
		    call 'hipe_rtl_arith_64':'eval_alu'
			('sra', _cor2, _cor0)
		%% Line 389
		<_cor13> when 'true' ->
		    call 'hipe_rtl_arch':'eval_alu'
			(_cor1, _cor2, _cor0)
	      end
	end
'maybe_top_or_bottom'/2 =
    %% Line 396
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],TB> when 'true' ->
	      _cor0
	  %% Line 397
	  <['top'|Rest],_cor4> when 'true' ->
	      apply 'maybe_top_or_bottom'/2
		  (Rest, 'top')
	  %% Line 398
	  <['bottom'|_cor5],_cor6> when 'true' ->
	      'bottom'
	  %% Line 399
	  <[_cor7|Rest],TB> when 'true' ->
	      apply 'maybe_top_or_bottom'/2
		  (Rest, _cor0)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'maybe_top_or_bottom',2}}] )
	    -| ['compiler_generated'] )
	end
'partial_eval_branch'/5 =
    %% Line 404
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <N,Z,V,C> =
	    %% Line 406
	    case <> of
	      <>
		  when let <_cor5> =
			call 'erlang':'=:='
			    (_cor4, 'eq')
		    in  let <_cor6> =
			    %% Line 407
			    call 'erlang':'=:='
				(_cor4, 'ne')
			in  call 'erlang':'or'
				(_cor5, _cor6) ->
		  %% Line 407
		  <'true',_cor2,'true','true'>
	      %% Line 408
	      <>
		  when let <_cor7> =
			call 'erlang':'=:='
			    (_cor4, 'gt')
		    in  let <_cor8> =
			    %% Line 409
			    call 'erlang':'=:='
				(_cor4, 'le')
			in  call 'erlang':'or'
				(_cor7, _cor8) ->
		  %% Line 409
		  <_cor3,_cor2,_cor1,'true'>
	      %% Line 410
	      <>
		  when call 'erlang':'=:='
			(_cor4,
			 'gtu') ->
		  <'true',_cor2,'true',_cor0>
	      %% Line 411
	      <>
		  when let <_cor9> =
			call 'erlang':'=:='
			    (_cor4, 'lt')
		    in  let <_cor10> =
			    %% Line 412
			    call 'erlang':'=:='
				(_cor4, 'ge')
			in  call 'erlang':'or'
				(_cor9, _cor10) ->
		  %% Line 412
		  <_cor3,'true',_cor1,'true'>
	      %% Line 413
	      <>
		  when let <_cor11> =
			call 'erlang':'=:='
			    (_cor4, 'geu')
		    in  let <_cor12> =
			    %% Line 414
			    call 'erlang':'=:='
				(_cor4, 'ltu')
			in  call 'erlang':'or'
				(_cor11, _cor12) ->
		  %% Line 414
		  <'true','true','true',_cor0>
	      %% Line 415
	      <>
		  when let <_cor13> =
			call 'erlang':'=:='
			    (_cor4, 'overflow')
		    in  let <_cor14> =
			    %% Line 416
			    call 'erlang':'=:='
				(_cor4, 'not_overflow')
			in  call 'erlang':'or'
				(_cor13, _cor14) ->
		  %% Line 416
		  <'true','true',_cor1,'true'>
	      ( <> when 'true' ->
		    primop 'match_fail'
			('if_clause')
		-| ['compiler_generated'] )
	    end
	in  let <_1076> =
		%% Line 418
		[N|[Z|[V|[C|[]]]]]
	    in  let <_1324> =
		    apply 'maybe_top_or_bottom'/2
			(_1076, 'false')
		in  %% Line 418
		    case _1324 of
		      %% Line 419
		      <'false'> when 'true' ->
			  call 'hipe_rtl_arch':'eval_cond_bits'
			      (_cor4, N, Z, V, C)
		      %% Line 420
		      <'top'> when 'true' ->
			  'top'
		      %% Line 421
		      <'bottom'> when 'true' ->
			  'bottom'
		      ( <_cor17> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_1324})
			-| ['compiler_generated'] )
		    end
'visit_alub'/2 =
    %% Line 432
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 433
	    call 'hipe_rtl':'alub_src1'
		(_cor1)
	in  let <_cor3> =
		%% Line 1054
		call 'hipe_rtl_arch':'is_precoloured'
		    (_cor2)
	    in  let <_6809> =
		    %% Line 1054
		    call 'hipe_rtl':'is_const_label'
			(_cor2)
		in  let <Val1> =
			%% Line 1054
			case call 'erlang':'or'
				 (_cor3, _6809) of
			  %% Line 1055
			  <'true'> when 'true' ->
			      %% Line 1056
			      'bottom'
			  %% Line 1057
			  <'false'> when 'true' ->
			      %% Line 1058
			      apply 'lookup_lattice_value2'/2
				  (_cor2, _cor0)
			end
		    in  let <_cor4> =
			    %% Line 434
			    call 'hipe_rtl':'alub_src2'
				(_cor1)
			in  let <_cor3> =
				%% Line 1054
				call 'hipe_rtl_arch':'is_precoloured'
				    (_cor4)
			    in  let <_1636> =
				    %% Line 1054
				    call 'hipe_rtl':'is_const_label'
					(_cor4)
				in  let <Val2> =
					%% Line 1054
					case call 'erlang':'or'
						 (_cor3, _1636) of
					  %% Line 1055
					  <'true'> when 'true' ->
					      %% Line 1056
					      'bottom'
					  %% Line 1057
					  <'false'> when 'true' ->
					      %% Line 1058
					      apply 'lookup_lattice_value2'/2
						  (_cor4, _cor0)
					end
				    in  let <_cor6> =
					    %% Line 435
					    call 'hipe_rtl':'alub_op'
						(_cor1)
					in  let <_7253> =
						%% Line 435
						apply 'evaluate_alu'/3
						    (Val1, _cor6, Val2)
					    in  %% Line 435
						case _7253 of
						  <{NewVal,N,Z,C,V}> when 'true' ->
						      let <_cor17> =
							  %% Line 437
							  case NewVal of
							    %% Line 438
							    <'bottom'> when 'true' ->
								let <_cor8> =
								    call 'hipe_rtl':'alub_true_label'
									(_cor1)
								in  let <_cor9> =
									%% Line 439
									call 'hipe_rtl':'alub_false_label'
									    (_cor1)
								    in  [_cor8|%% Line 439
									       [_cor9|[]]]
							    %% Line 440
							    <'top'> when 'true' ->
								[]
							    %% Line 441
							    <_cor23> when 'true' ->
								let <_cor10> =
								    %% Line 444
								    call 'hipe_rtl':'alub_cond'
									(_cor1)
								in  let <_733> =
									%% Line 444
									apply 'partial_eval_branch'/5
									    (_cor10, N, Z, C, V)
								    in  %% Line 444
									case _733 of
									  %% Line 445
									  <'bottom'> when 'true' ->
									      let <_cor11> =
										  call 'hipe_rtl':'alub_true_label'
										      (_cor1)
									      in  let <_cor12> =
										      %% Line 446
										      call 'hipe_rtl':'alub_false_label'
											  (_cor1)
										  in  [_cor11|%% Line 446
											      [_cor12|[]]]
									  %% Line 447
									  <'top'> when 'true' ->
									      []
									  %% Line 448
									  <'true'> when 'true' ->
									      let <_cor13> =
										  call 'hipe_rtl':'alub_true_label'
										      (_cor1)
									      in  [_cor13|[]]
									  %% Line 449
									  <'false'> when 'true' ->
									      let <_cor14> =
										  call 'hipe_rtl':'alub_false_label'
										      (_cor1)
									      in  [_cor14|[]]
									  ( <_cor15> when 'true' ->
										primop 'match_fail'
										    ({'case_clause',_733})
									    -| ['compiler_generated'] )
									end
							  end
						      in  let <_cor19> =
							      %% Line 452
							      call 'hipe_rtl':'alub_dst'
								  (_cor1)
							  in  let <_1395> =
								  apply 'update_lattice_value'/2
								      ({_cor19,NewVal}, _cor0)
							      in  case _1395 of
								    <{Env1,SSAWork}> when 'true' ->
									let <_2220> = {[],SSAWork,Env1}
									in  %% Line 452
									    case _2220 of
									      <{[],NewSSA,NewEnv}> when 'true' ->
										  %% Line 453
										  {_cor17,NewSSA,NewEnv}
									      ( <_cor20> when 'true' ->
										    primop 'match_fail'
											({'badmatch',_2220})
										-| ['compiler_generated'] )
									    end
								    ( <_cor3> when 'true' ->
									  primop 'match_fail'
									      ({'badmatch',_1395})
								      -| ['compiler_generated'] )
								  end
						  ( <_cor7> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_7253})
						    -| ['compiler_generated'] )
						end
'visit_fixnumop'/2 =
    %% Line 464
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 465
	    call 'hipe_rtl':'fixnumop_src'
		(_cor1)
	in  let <_cor3> =
		%% Line 1054
		call 'hipe_rtl_arch':'is_precoloured'
		    (_cor2)
	    in  let <_361> =
		    %% Line 1054
		    call 'hipe_rtl':'is_const_label'
			(_cor2)
		in  let <Val> =
			%% Line 1054
			case call 'erlang':'or'
				 (_cor3, _361) of
			  %% Line 1055
			  <'true'> when 'true' ->
			      %% Line 1056
			      'bottom'
			  %% Line 1057
			  <'false'> when 'true' ->
			      %% Line 1058
			      apply 'lookup_lattice_value2'/2
				  (_cor2, _cor0)
			end
		    in  let <_cor4> =
			    %% Line 466
			    call 'hipe_rtl':'fixnumop_type'
				(_cor1)
			in  let <Res> =
				%% Line 466
				apply 'evaluate_fixnumop'/2
				    (Val, _cor4)
			    in  let <_cor6> =
				    %% Line 467
				    call 'hipe_rtl':'fixnumop_dst'
					(_cor1)
				in  let <_1395> =
					apply 'update_lattice_value'/2
					    ({_cor6,Res}, _cor0)
				    in  case _1395 of
					  <{Env1,SSAWork}> when 'true' ->
					      {[],SSAWork,Env1}
					  ( <_cor3> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_1395})
					    -| ['compiler_generated'] )
					end
'visit_fconv'/2 =
    %% Line 480
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 481
	    call 'hipe_rtl':'fconv_dst'
		(_cor1)
	in  let <_1395> =
		apply 'update_lattice_value'/2
		    ({_cor2,%% Line 481
			    'bottom'}, _cor0)
	    in  case _1395 of
		  <{Env1,SSAWork}> when 'true' ->
		      {[],SSAWork,Env1}
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_1395})
		    -| ['compiler_generated'] )
		end
'visit_fp'/2 =
    %% Line 483
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 484
	    call 'hipe_rtl':'fp_dst'
		(_cor1)
	in  let <_1395> =
		apply 'update_lattice_value'/2
		    ({_cor2,%% Line 484
			    'bottom'}, _cor0)
	    in  case _1395 of
		  <{Env1,SSAWork}> when 'true' ->
		      {[],SSAWork,Env1}
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_1395})
		    -| ['compiler_generated'] )
		end
'visit_fp_unop'/2 =
    %% Line 486
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 487
	    call 'hipe_rtl':'fp_unop_dst'
		(_cor1)
	in  let <_1395> =
		apply 'update_lattice_value'/2
		    ({_cor2,%% Line 487
			    'bottom'}, _cor0)
	    in  case _1395 of
		  <{Env1,SSAWork}> when 'true' ->
		      {[],SSAWork,Env1}
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_1395})
		    -| ['compiler_generated'] )
		end
'visit_fload'/2 =
    %% Line 489
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 490
	    call 'hipe_rtl':'fload_dst'
		(_cor1)
	in  let <_1395> =
		apply 'update_lattice_value'/2
		    ({_cor2,%% Line 490
			    'bottom'}, _cor0)
	    in  case _1395 of
		  <{Env1,SSAWork}> when 'true' ->
		      {[],SSAWork,Env1}
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_1395})
		    -| ['compiler_generated'] )
		end
'visit_fmove'/2 =
    %% Line 492
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 493
	    call 'hipe_rtl':'fmove_dst'
		(_cor1)
	in  let <_1395> =
		apply 'update_lattice_value'/2
		    ({_cor2,%% Line 493
			    'bottom'}, _cor0)
	    in  case _1395 of
		  <{Env1,SSAWork}> when 'true' ->
		      {[],SSAWork,Env1}
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_1395})
		    -| ['compiler_generated'] )
		end
'visit_move'/2 =
    %% Line 503
    fun (_cor1,_cor0) ->
	let <Src> =
	    %% Line 504
	    call 'hipe_rtl':'move_src'
		(_cor1)
	in  let <Dst> =
		%% Line 505
		call 'hipe_rtl':'move_dst'
		    (_cor1)
	    in  let <_cor3> =
		    %% Line 1054
		    call 'hipe_rtl_arch':'is_precoloured'
			(Src)
		in  let <_cor2> =
			%% Line 1054
			call 'hipe_rtl':'is_const_label'
			    (Src)
		    in  let <_cor4> =
			    %% Line 1054
			    case call 'erlang':'or'
				     (_cor3, _cor2) of
			      %% Line 1055
			      <'true'> when 'true' ->
				  %% Line 1056
				  'bottom'
			      %% Line 1057
			      <'false'> when 'true' ->
				  %% Line 1058
				  apply 'lookup_lattice_value2'/2
				      (Src, _cor0)
			    end
			in  let <_1395> =
				apply 'update_lattice_value'/2
				    ({Dst,_cor4}, _cor0)
			    in  case _1395 of
				  <{Env1,SSAWork}> when 'true' ->
				      {[],SSAWork,Env1}
				  ( <_cor3> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_1395})
				    -| ['compiler_generated'] )
				end
'visit_goto_index'/2 =
    %% Line 528
    fun (_cor1,_cor0) ->
	let <Index> =
	    %% Line 529
	    call 'hipe_rtl':'goto_index_index'
		(_cor1)
	in  let <_cor3> =
		%% Line 1054
		call 'hipe_rtl_arch':'is_precoloured'
		    (Index)
	    in  let <_cor2> =
		    %% Line 1054
		    call 'hipe_rtl':'is_const_label'
			(Index)
		in  let <_7119> =
			%% Line 1054
			case call 'erlang':'or'
				 (_cor3, _cor2) of
			  %% Line 1055
			  <'true'> when 'true' ->
			      %% Line 1056
			      'bottom'
			  %% Line 1057
			  <'false'> when 'true' ->
			      %% Line 1058
			      apply 'lookup_lattice_value2'/2
				  (Index, _cor0)
			end
		    in  %% Line 530
			case _7119 of
			  %% Line 531
			  <'top'> when 'true' ->
			      {[],[],_cor0}
			  %% Line 532
			  <'bottom'> when 'true' ->
			      let <_cor3> =
				  %% Line 533
				  call 'hipe_rtl':'goto_index_labels'
				      (_cor1)
			      in  %% Line 533
				  {_cor3,[],_cor0}
			  %% Line 534
			  <I> when 'true' ->
			      do  %% Line 535
				  call 'io':'format'
				      ([104|[105|[112|[101|[95|[114|[116|[108|[95|[115|[115|[97|[95|[99|[111|[110|[115|[116|[95|[112|[114|[111|[112|[32|[102|[111|[117|[100|[32|[103|[111|[116|[111|[45|[105|[110|[100|[101|[120|[32|[119|[105|[116|[104|[32|[99|[111|[110|[115|[116|[97|[110|[116|[32|[105|[110|[100|[101|[120|[32|[126|[119|[32|[105|[110|[32|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 536
																																																						    [_7119|[_cor1|[]]])
				  let <_cor4> =
				      %% Line 537
				      call 'hipe_rtl':'goto_index_labels'
					  (_cor1)
				  in  let <_cor5> =
					  %% Line 537
					  call 'lists':'nth'
					      (_cor4, _7119)
				      in  %% Line 537
					  {[_cor5|[]],[],_cor0}
			end
'visit_load'/2 =
    %% Line 549
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 550
	    call 'hipe_rtl':'load_dst'
		(_cor1)
	in  let <_1395> =
		apply 'update_lattice_value'/2
		    ({_cor2,%% Line 550
			    'bottom'}, _cor0)
	    in  case _1395 of
		  <{Env1,SSAWork}> when 'true' ->
		      {[],SSAWork,Env1}
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_1395})
		    -| ['compiler_generated'] )
		end
'visit_load_address'/2 =
    %% Line 562
    fun (_cor1,_cor0) ->
	let <Dst> =
	    %% Line 563
	    call 'hipe_rtl':'load_address_dst'
		(_cor1)
	in  let <_1395> =
		apply 'update_lattice_value'/2
		    ({Dst,%% Line 564
			  'bottom'}, _cor0)
	    in  case _1395 of
		  <{Env1,SSAWork}> when 'true' ->
		      {[],SSAWork,Env1}
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_1395})
		    -| ['compiler_generated'] )
		end
'visit_load_atom'/2 =
    %% Line 577
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 578
	    call 'hipe_rtl':'load_atom_dst'
		(_cor1)
	in  let <_1395> =
		apply 'update_lattice_value'/2
		    ({_cor2,%% Line 578
			    'bottom'}, _cor0)
	    in  case _1395 of
		  <{Env1,SSAWork}> when 'true' ->
		      {[],SSAWork,Env1}
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_1395})
		    -| ['compiler_generated'] )
		end
'visit_load_word_index'/2 =
    %% Line 591
    fun (_cor1,_cor0) ->
	do  %% Line 592
	    call 'io':'format'
		([32|[116|[104|[105|[115|[32|[105|[115|[32|[108|[111|[97|[100|[32|[119|[111|[114|[100|[32|[105|[110|[100|[101|[120|[58|[32|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor1|[]])
	    let <_cor2> =
		%% Line 593
		call 'hipe_rtl':'load_word_index_dst'
		    (_cor1)
	    in  let <_1395> =
		    apply 'update_lattice_value'/2
			({_cor2,%% Line 593
				'bottom'}, _cor0)
		in  case _1395 of
		      <{Env1,SSAWork}> when 'true' ->
			  {[],SSAWork,Env1}
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_1395})
			-| ['compiler_generated'] )
		    end
'visit_multimove'/4 =
    %% Line 603
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Dst|Dsts],[Val|Vals],MyEnv,MySSA> when 'true' ->
	      let <_8585> =
		  %% Line 604
		  apply 'update_lattice_value'/2
		      ({Dst,Val}, _cor1)
	      in  %% Line 604
		  case _8585 of
		    <{NewEnv,NewSSA}> when 'true' ->
			let <_cor5> =
			    %% Line 605
			    call 'erlang':'++'
				(_cor0, NewSSA)
			in  %% Line 605
			    apply 'visit_multimove'/4
				(Dsts, Vals, NewEnv, _cor5)
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_8585})
		      -| ['compiler_generated'] )
		  end
	  %% Line 606
	  <[],[],MyEnv,MySSA> when 'true' ->
	      %% Line 607
	      {_cor1,_cor0}
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'visit_multimove',4}}] )
	    -| ['compiler_generated'] )
	end
'visit_multimove'/2 =
    %% Line 609
    fun (_cor1,_cor0) ->
	let <_cor8> =
	    %% Line 610
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[S|_cor3]> when 'true' ->
				let <_1815> =
				    %% Line 1054
				    call 'hipe_rtl_arch':'is_precoloured'
					(S)
				in  let <_cor2> =
					%% Line 1054
					call 'hipe_rtl':'is_const_label'
					    (S)
				    in  let <_cor6> =
					    %% Line 1054
					    case call 'erlang':'or'
						     (_1815, _cor2) of
					      %% Line 1055
					      <'true'> when 'true' ->
						  %% Line 1056
						  'bottom'
					      %% Line 1057
					      <'false'> when 'true' ->
						  %% Line 1058
						  apply 'lookup_lattice_value2'/2
						      (S, _cor0)
					    end
					in  let <_cor7> =
						%% Line 611
						apply 'lc$^0'/1
						    (_cor3)
					    in  ( [_cor6|_cor7]
						  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_6140> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  let <_cor4> =
		      %% Line 611
		      call 'hipe_rtl':'multimove_srclist'
			  (_cor1)
		  in  apply 'lc$^0'/1
			  (_cor4)
	      -| ['list_comprehension'] )
	in  let <_cor10> =
		%% Line 612
		call 'hipe_rtl':'multimove_dstlist'
		    (_cor1)
	    in  let <_6794> =
		    %% Line 612
		    apply 'visit_multimove'/4
			(_cor10, _cor8, _cor0, %% Line 613
					       [])
		in  %% Line 612
		    case _6794 of
		      <{NewEnv,NewSSA}> when 'true' ->
			  %% Line 614
			  {[],NewSSA,NewEnv}
		      ( <_cor11> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_6794})
			-| ['compiler_generated'] )
		    end
'visit_call'/2 =
    %% Line 627
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 629
	    call 'hipe_rtl':'call_dstlist'
		(_cor1)
	in  let <_62> =
		%% Line 629
		apply 'update_lattice_value'/2
		    ({_cor2,'bottom'}, _cor0)
	    in  %% Line 628
		case _62 of
		  <{Env1,SSAWork}> when 'true' ->
		      let <_7778> =
			  %% Line 631
			  call 'hipe_rtl':'call_continuation'
			      (_cor1)
		      in  let <_cor5> =
			      %% Line 631
			      case _7778 of
				%% Line 632
				<[]> when 'true' ->
				    []
				%% Line 633
				<C> when 'true' ->
				    [_7778|[]]
			      end
			  in  let <_6957> =
				  %% Line 635
				  call 'hipe_rtl':'call_fail'
				      (_cor1)
			      in  let <_cor8> =
				      %% Line 635
				      case _6957 of
					%% Line 636
					<[]> when 'true' ->
					    _cor5
					%% Line 637
					<Fail> when 'true' ->
					    [_6957|_cor5]
				      end
				  in  %% Line 639
				      {_cor8,SSAWork,Env1}
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_62})
		    -| ['compiler_generated'] )
		end
'visit_switch'/2 =
    %% Line 661
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 662
	    call 'hipe_rtl':'switch_src'
		(_cor1)
	in  let <_cor3> =
		%% Line 1054
		call 'hipe_rtl_arch':'is_precoloured'
		    (_cor2)
	    in  let <_1103> =
		    %% Line 1054
		    call 'hipe_rtl':'is_const_label'
			(_cor2)
		in  let <_514> =
			%% Line 1054
			case call 'erlang':'or'
				 (_cor3, _1103) of
			  %% Line 1055
			  <'true'> when 'true' ->
			      %% Line 1056
			      'bottom'
			  %% Line 1057
			  <'false'> when 'true' ->
			      %% Line 1058
			      apply 'lookup_lattice_value2'/2
				  (_cor2, _cor0)
			end
		    in  %% Line 662
			case _514 of
			  %% Line 663
			  <'top'> when 'true' ->
			      %% Line 664
			      {[],[],_cor0}
			  %% Line 665
			  <'bottom'> when 'true' ->
			      let <_cor3> =
				  %% Line 666
				  call 'hipe_rtl':'switch_labels'
				      (_cor1)
			      in  %% Line 666
				  {_cor3,[],_cor0}
			  %% Line 667
			  <Val> when 'true' ->
			      let <Labels> =
				  call 'hipe_rtl':'switch_labels'
				      (_cor1)
			      in  let <_cor3> =
				      call 'erlang':'+'
					  (_514, 1)
				  in  let <_cor4> =
					  call 'lists':'nth'
					      (_cor3, Labels)
				      in  %% Line 668
					  {[_cor4|[]],[],_cor0}
			end
'update_instruction'/2 =
    %% Line 684
    fun (_cor1,_cor0) ->
	%% Line 685
	case _cor1 of
	  %% Line 686
	  <{'alu',_cor5,_cor6,_cor7,_cor8}> when 'true' ->
	      %% Line 687
	      apply 'update_alu'/2
		  (_cor1, _cor0)
	  %% Line 688
	  <{'alub',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16}> when 'true' ->
	      %% Line 689
	      apply 'update_alub'/2
		  (_cor1, _cor0)
	  %% Line 690
	  <{'branch',_cor17,_cor18,_cor19,_cor20,_cor21,_cor22}> when 'true' ->
	      %% Line 691
	      apply 'update_branch'/2
		  (_cor1, _cor0)
	  %% Line 692
	  <{'call',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29}> when 'true' ->
	      %% Line 693
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 696
	  <{'enter',_cor30,_cor31,_cor32}> when 'true' ->
	      %% Line 697
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 698
	  <{'fconv',_cor33,_cor34}> when 'true' ->
	      %% Line 699
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 700
	  <{'fload',_cor35,_cor36,_cor37}> when 'true' ->
	      %% Line 701
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 702
	  <{'fmove',_cor38,_cor39}> when 'true' ->
	      %% Line 703
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 704
	  <{'fp',_cor40,_cor41,_cor42,_cor43}> when 'true' ->
	      %% Line 705
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 706
	  <{'fp_unop',_cor44,_cor45,_cor46}> when 'true' ->
	      %% Line 707
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 708
	  <{'fstore',_cor47,_cor48,_cor49}> when 'true' ->
	      %% Line 709
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 710
	  <{'gctest',_cor50}> when 'true' ->
	      %% Line 711
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 714
	  <{'goto_index',_cor51,_cor52,_cor53}> when 'true' ->
	      %% Line 715
	      apply 'update_goto_index'/2
		  (_cor1, _cor0)
	  %% Line 718
	  <{'load',_cor54,_cor55,_cor56,_cor57,_cor58}> when 'true' ->
	      %% Line 719
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 720
	  <{'load_address',_cor59,_cor60,_cor61}> when 'true' ->
	      %% Line 721
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 722
	  <{'load_atom',_cor62,_cor63}> when 'true' ->
	      %% Line 723
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 724
	  <{'load_word_index',_cor64,_cor65,_cor66}> when 'true' ->
	      %% Line 725
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 726
	  <{'move',_cor67,_cor68}> when 'true' ->
	      %% Line 727
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 728
	  <{'multimove',_cor69,_cor70}> when 'true' ->
	      %% Line 729
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 730
	  <{'return',_cor71}> when 'true' ->
	      %% Line 731
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 732
	  <{'store',_cor72,_cor73,_cor74,_cor75}> when 'true' ->
	      %% Line 733
	      apply 'subst_all_uses'/2
		  (_cor1, _cor0)
	  %% Line 734
	  <{'switch',_cor76,_cor77,_cor78}> when 'true' ->
	      %% Line 735
	      apply 'update_switch'/2
		  (_cor1, _cor0)
	  %% Line 736
	  <{'phi',_cor79,_cor80,_cor81}> when 'true' ->
	      %% Line 737
	      apply 'update_phi'/2
		  (_cor1, _cor0)
	  %% Line 738
	  <_cor82> when 'true' ->
	      %% Line 739
	      [_cor1|[]]
	end
'subst_all_uses'/2 =
    %% Line 751
    fun (_cor1,_cor0) ->
	let <Uses> =
	    %% Line 752
	    call 'hipe_rtl_ssa':'uses_to_rename'
		(_cor1)
	in  let <_cor3> =
		%% Line 753
		apply 'update_srcs'/2
		    (Uses, _cor0)
	    in  let <_cor4> =
		    %% Line 753
		    call 'hipe_rtl':'subst_uses'
			(_cor3, _cor1)
		in  %% Line 753
		    [_cor4|[]]
'update_srcs'/2 =
    %% Line 764
    fun (_cor1,_cor0) ->
	let <Update> =
	    %% Line 766
	    fun (_cor8,_cor7) ->
		let <_cor3> =
		    %% Line 1054
		    call 'hipe_rtl_arch':'is_precoloured'
			(_cor8)
		in  let <_cor2> =
			%% Line 1054
			call 'hipe_rtl':'is_const_label'
			    (_cor8)
		    in  let <_5991> =
			    %% Line 1054
			    case call 'erlang':'or'
				     (_cor3, _cor2) of
			      %% Line 1055
			      <'true'> when 'true' ->
				  %% Line 1056
				  'bottom'
			      %% Line 1057
			      <'false'> when 'true' ->
				  %% Line 1058
				  apply 'lookup_lattice_value2'/2
				      (_cor8, _cor0)
			    end
			in  %% Line 767
			    case _5991 of
			      %% Line 768
			      <'bottom'> when 'true' ->
				  _cor7
			      %% Line 769
			      <'top'> when 'true' ->
				  do  %% Line 770
				      call 'io':'format'
					  ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[88|[73|[84|[69|[68|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[32|[126|[119|[32|[64|[126|[119|[58|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [{[117|[112|[100|[97|[116|[101|[95|[115|[114|[99|[44|[32|[116|[111|[112]]]]]]]]]]]]]]],_cor8}|['hipe_rtl_ssa_const_prop'|[770]]])
				      %% Line 770
				      call 'erlang':'error'
					  ({'hipe_rtl_ssa_const_prop',770,{[117|[112|[100|[97|[116|[101|[95|[115|[114|[99|[44|[32|[116|[111|[112]]]]]]]]]]]]]]],_cor8}})
			      %% Line 771
			      <Constant> when 'true' ->
				  let <_cor5> =
				      %% Line 772
				      call 'hipe_rtl':'mk_imm'
					  (_5991)
				  in  %% Line 772
				      [{_cor8,_cor5}|_cor7]
			    end
	in  %% Line 775
	    call 'lists':'foldl'
		(Update, [], _cor1)
'partial_update_shift'/3 =
    %% Line 792
    fun (_cor2,_cor1,_cor0) ->
	%% Line 793
	case <> of
	  %% Line 794
	  <>
	      when let <_cor3> =
		    call 'erlang':'=:='
			(_cor1, 'bottom')
		in  let <_cor4> =
			call 'erlang':'=:='
			    (_cor0, 0)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      'move_src1'
	  %% Line 795
	  <>
	      when try
		    let <_cor5> =
			call 'erlang':'=:='
			    (_cor1, 0)
		    in  let <_cor6> =
			    call 'erlang':'=/='
				(_cor0, 'bottom')
			in  let <_cor7> =
				call 'erlang':'>='
				    (_cor0, _cor2)
			    in  let <_cor8> =
				    call 'erlang':'and'
					(_cor6, _cor7)
				in  call 'erlang':'or'
					(_cor5, _cor8)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      0
	  %% Line 796
	  <> when 'true' ->
	      'keep_it'
	end
'partial_update_alu'/3 =
    %% Line 812
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Val1,'add',Val2> when 'true' ->
	      %% Line 813
	      case <> of
		%% Line 814
		<>
		    when call 'erlang':'=='
			  (_cor2,
			   0) ->
		    'move_src2'
		%% Line 815
		<>
		    when call 'erlang':'=='
			  (_cor0,
			   0) ->
		    'move_src1'
		%% Line 816
		<> when 'true' ->
		    'keep_it'
	      end
	  %% Line 818
	  <_X_Val1,'sub',Val2> when 'true' ->
	      %% Line 819
	      case <> of
		%% Line 820
		<>
		    when call 'erlang':'=='
			  (_cor0,
			   0) ->
		    'move_src1'
		%% Line 821
		<> when 'true' ->
		    'keep_it'
	      end
	  %% Line 823
	  <Val1,'or',Val2> when 'true' ->
	      let <_6199> =
		  call 'hipe_rtl_arch':'word_size'
		      ()
	      in  let <_5558> =
		      call 'erlang':'bsl'
			  (_6199, 3)
		  in  let <_7438> =
			  call 'erlang':'bsl'
			      (1, _5558)
		      in  let <All_ones> =
			      call 'erlang':'-'
				  (_7438, 1)
			  in  %% Line 825
			      case <> of
				%% Line 826
				<>
				    when call 'erlang':'=='
					  (_cor2,
					   0) ->
				    'move_src2'
				%% Line 827
				<>
				    when call 'erlang':'=='
					  (_cor0,
					   0) ->
				    'move_src1'
				%% Line 828
				<>
				    when let <_cor4> =
					  call 'erlang':'=='
					      (_cor2, All_ones)
				      in  let <_cor5> =
					      call 'erlang':'=='
						  (_cor0, All_ones)
					  in  call 'erlang':'or'
						  (_cor4, _cor5) ->
				    All_ones
				%% Line 829
				<> when 'true' ->
				    'keep_it'
			      end
	  %% Line 831
	  <Val1,'and',Val2> when 'true' ->
	      let <_7995> =
		  call 'hipe_rtl_arch':'word_size'
		      ()
	      in  let <_5365> =
		      call 'erlang':'bsl'
			  (_7995, 3)
		  in  let <_2654> =
			  call 'erlang':'bsl'
			      (1, _5365)
		      in  let <All_ones> =
			      call 'erlang':'-'
				  (_2654, 1)
			  in  %% Line 833
			      case <> of
				%% Line 834
				<>
				    when call 'erlang':'=='
					  (_cor2,
					   All_ones) ->
				    'move_src2'
				%% Line 835
				<>
				    when call 'erlang':'=='
					  (_cor0,
					   All_ones) ->
				    'move_src1'
				%% Line 836
				<>
				    when let <_cor7> =
					  call 'erlang':'=='
					      (_cor2, 0)
				      in  let <_cor8> =
					      call 'erlang':'=='
						  (_cor0, 0)
					  in  call 'erlang':'or'
						  (_cor7, _cor8) ->
				    0
				%% Line 837
				<> when 'true' ->
				    'keep_it'
			      end
	  %% Line 839
	  <Val1,'xor',Val2> when 'true' ->
	      %% Line 840
	      case <> of
		%% Line 841
		<>
		    when call 'erlang':'=='
			  (_cor2,
			   0) ->
		    'move_src2'
		%% Line 842
		<>
		    when call 'erlang':'=='
			  (_cor0,
			   0) ->
		    'move_src1'
		%% Line 843
		<> when 'true' ->
		    'keep_it'
	      end
	  %% Line 845
	  <Val1,'xornot',Val2> when 'true' ->
	      let <_7790> =
		  call 'hipe_rtl_arch':'word_size'
		      ()
	      in  let <_598> =
		      call 'erlang':'bsl'
			  (_7790, 3)
		  in  let <_6249> =
			  call 'erlang':'bsl'
			      (1, _598)
		      in  let <All_ones> =
			      call 'erlang':'-'
				  (_6249, 1)
			  in  %% Line 847
			      case <> of
				%% Line 848
				<>
				    when call 'erlang':'=='
					  (_cor2,
					   All_ones) ->
				    'move_src2'
				%% Line 849
				<>
				    when call 'erlang':'=='
					  (_cor0,
					   All_ones) ->
				    'move_src1'
				%% Line 850
				<> when 'true' ->
				    'keep_it'
			      end
	  %% Line 852
	  <Val1,'andnot',Val2> when 'true' ->
	      let <_1683> =
		  call 'hipe_rtl_arch':'word_size'
		      ()
	      in  let <_3079> =
		      call 'erlang':'bsl'
			  (_1683, 3)
		  in  let <_8570> =
			  call 'erlang':'bsl'
			      (1, _3079)
		      in  let <All_ones> =
			      call 'erlang':'-'
				  (_8570, 1)
			  in  %% Line 854
			      case <> of
				%% Line 855
				<>
				    when call 'erlang':'=='
					  (_cor0,
					   0) ->
				    'move_src1'
				%% Line 856
				<>
				    when let <_cor11> =
					  call 'erlang':'=='
					      (_cor2, 0)
				      in  let <_cor12> =
					      call 'erlang':'=='
						  (_cor0, All_ones)
					  in  call 'erlang':'or'
						  (_cor11, _cor12) ->
				    0
				%% Line 857
				<> when 'true' ->
				    'keep_it'
			      end
	  %% Line 859
	  <Val1,Op,Val2>
	      when let <_cor13> =
		    call 'erlang':'=:='
			(_cor1, 'sll')
		in  let <_cor14> =
			call 'erlang':'=:='
			    (_cor1, 'srl')
		    in  call 'erlang':'or'
			    (_cor13, _cor14) ->
	      let <_cor15> =
		  %% Line 860
		  call 'hipe_rtl_arch':'word_size'
		      ()
	      in  let <BitSize> =
		      %% Line 860
		      call 'erlang':'bsl'
			  (_cor15, 3)
		  in  %% Line 861
		      apply 'partial_update_shift'/3
			  (BitSize, _cor2, _cor0)
	  %% Line 862
	  <Val1,Op,Val2>
	      when let <_cor17> =
		    call 'erlang':'=:='
			(_cor1, 'sllx')
		in  let <_cor18> =
			call 'erlang':'=:='
			    (_cor1, 'srlx')
		    in  call 'erlang':'or'
			    (_cor17, _cor18) ->
	      %% Line 863
	      apply 'partial_update_shift'/3
		  (64, _cor2, _cor0)
	  %% Line 864
	  <Val1,Op,Val2>
	      when let <_cor19> =
		    call 'erlang':'=:='
			(_cor1, 'sra')
		in  let <_cor20> =
			call 'erlang':'=:='
			    (_cor1, 'srax')
		    in  call 'erlang':'or'
			    (_cor19, _cor20) ->
	      %% Line 865
	      case <> of
		%% Line 866
		<>
		    when call 'erlang':'=='
			  (_cor0,
			   0) ->
		    'move_src1'
		%% Line 867
		<>
		    when call 'erlang':'=='
			  (_cor2,
			   0) ->
		    0
		%% Line 868
		<> when 'true' ->
		    'keep_it'
	      end
	  ( <_cor23,_cor22,_cor21> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'partial_update_alu',3}}] )
	    -| ['compiler_generated'] )
	end
'update_alu'/2 =
    %% Line 879
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 880
	    call 'hipe_rtl':'alu_src1'
		(_cor1)
	in  let <_cor3> =
		%% Line 1054
		call 'hipe_rtl_arch':'is_precoloured'
		    (_cor2)
	    in  let <_1756> =
		    %% Line 1054
		    call 'hipe_rtl':'is_const_label'
			(_cor2)
		in  let <Val1> =
			%% Line 1054
			case call 'erlang':'or'
				 (_cor3, _1756) of
			  %% Line 1055
			  <'true'> when 'true' ->
			      %% Line 1056
			      'bottom'
			  %% Line 1057
			  <'false'> when 'true' ->
			      %% Line 1058
			      apply 'lookup_lattice_value2'/2
				  (_cor2, _cor0)
			end
		    in  let <_cor4> =
			    %% Line 881
			    call 'hipe_rtl':'alu_src2'
				(_cor1)
			in  let <_cor3> =
				%% Line 1054
				call 'hipe_rtl_arch':'is_precoloured'
				    (_cor4)
			    in  let <_1165> =
				    %% Line 1054
				    call 'hipe_rtl':'is_const_label'
					(_cor4)
				in  let <Val2> =
					%% Line 1054
					case call 'erlang':'or'
						 (_cor3, _1165) of
					  %% Line 1055
					  <'true'> when 'true' ->
					      %% Line 1056
					      'bottom'
					  %% Line 1057
					  <'false'> when 'true' ->
					      %% Line 1058
					      apply 'lookup_lattice_value2'/2
						  (_cor4, _cor0)
					end
				    in  %% Line 882
					case <> of
					  %% Line 883
					  <>
					      when let <_cor6> =
						    call 'erlang':'=:='
							(Val1, 'bottom')
						in  let <_cor7> =
							call 'erlang':'=:='
							    (Val2, 'bottom')
						    in  call 'erlang':'and'
							    (_cor6, _cor7) ->
					      %% Line 884
					      [_cor1|[]]
					  %% Line 885
					  <>
					      when let <_cor8> =
						    call 'erlang':'=:='
							(Val1, 'bottom')
						in  let <_cor9> =
							call 'erlang':'=:='
							    (Val2, 'bottom')
						    in  call 'erlang':'or'
							    (_cor8, _cor9) ->
					      let <_cor10> =
						  %% Line 887
						  call 'hipe_rtl':'alu_op'
						      (_cor1)
					      in  let <_5913> =
						      %% Line 887
						      apply 'partial_update_alu'/3
							  (Val1, _cor10, Val2)
						  in  let <_cor22> =
							  %% Line 887
							  case _5913 of
							    %% Line 888
							    <'move_src1'> when 'true' ->
								let <_cor12> =
								    %% Line 889
								    call 'hipe_rtl':'alu_dst'
									(_cor1)
								in  let <_cor11> =
									%% Line 889
									call 'hipe_rtl':'alu_src1'
									    (_cor1)
								    in  %% Line 889
									call 'hipe_rtl':'mk_move'
									    (_cor12, _cor11)
							    %% Line 890
							    <'move_src2'> when 'true' ->
								let <_cor14> =
								    %% Line 891
								    call 'hipe_rtl':'alu_dst'
									(_cor1)
								in  let <_cor13> =
									%% Line 891
									call 'hipe_rtl':'alu_src2'
									    (_cor1)
								    in  %% Line 891
									call 'hipe_rtl':'mk_move'
									    (_cor14, _cor13)
							    %% Line 892
							    <'keep_it'> when 'true' ->
								let <_cor15> =
								    %% Line 893
								    call 'hipe_rtl':'alu_src1'
									(_cor1)
								in  let <S1> =
									%% Line 893
									apply 'make_alub_subst_list'/3
									    (Val1, _cor15, [])
								    in  let <_cor17> =
									    %% Line 894
									    call 'hipe_rtl':'alu_src2'
										(_cor1)
									in  let <S2> =
										%% Line 894
										apply 'make_alub_subst_list'/3
										    (Val2, _cor17, S1)
									    in  %% Line 895
										call 'hipe_rtl':'subst_uses'
										    (S2, _cor1)
							    %% Line 896
							    <Constant> when 'true' ->
								let <_cor20> =
								    %% Line 897
								    call 'hipe_rtl':'alu_dst'
									(_cor1)
								in  let <_cor19> =
									%% Line 897
									call 'hipe_rtl':'mk_imm'
									    (_5913)
								    in  %% Line 897
									call 'hipe_rtl':'mk_move'
									    (_cor20, _cor19)
							  end
						      in  %% Line 899
							  [_cor22|[]]
					  %% Line 900
					  <> when 'true' ->
					      let <_cor24> =
						  %% Line 901
						  call 'hipe_rtl':'alu_op'
						      (_cor1)
					      in  let <_7674> =
						      %% Line 901
						      apply 'evaluate_alu'/3
							  (Val1, _cor24, Val2)
						  in  %% Line 901
						      case _7674 of
							<{Val,_cor31,_cor32,_cor33,_cor34}> when 'true' ->
							    let <_cor27> =
								%% Line 902
								call 'hipe_rtl':'alu_dst'
								    (_cor1)
							    in  let <_cor26> =
								    %% Line 902
								    call 'hipe_rtl':'mk_imm'
									(Val)
								in  let <_cor28> =
									%% Line 902
									call 'hipe_rtl':'mk_move'
									    (_cor27, _cor26)
								    in  %% Line 902
									[_cor28|[]]
							( <_cor25> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_7674})
							  -| ['compiler_generated'] )
						      end
					end
'update_branch'/2 =
    %% Line 913
    fun (_cor1,_cor0) ->
	let <Src1> =
	    %% Line 914
	    call 'hipe_rtl':'branch_src1'
		(_cor1)
	in  let <Src2> =
		%% Line 915
		call 'hipe_rtl':'branch_src2'
		    (_cor1)
	    in  let <_cor3> =
		    %% Line 1054
		    call 'hipe_rtl_arch':'is_precoloured'
			(Src1)
		in  let <_cor2> =
			%% Line 1054
			call 'hipe_rtl':'is_const_label'
			    (Src1)
		    in  let <Val1> =
			    %% Line 1054
			    case call 'erlang':'or'
				     (_cor3, _cor2) of
			      %% Line 1055
			      <'true'> when 'true' ->
				  %% Line 1056
				  'bottom'
			      %% Line 1057
			      <'false'> when 'true' ->
				  %% Line 1058
				  apply 'lookup_lattice_value2'/2
				      (Src1, _cor0)
			    end
			in  let <_cor3> =
				%% Line 1054
				call 'hipe_rtl_arch':'is_precoloured'
				    (Src2)
			    in  let <_cor2> =
				    %% Line 1054
				    call 'hipe_rtl':'is_const_label'
					(Src2)
				in  let <Val2> =
					%% Line 1054
					case call 'erlang':'or'
						 (_cor3, _cor2) of
					  %% Line 1055
					  <'true'> when 'true' ->
					      %% Line 1056
					      'bottom'
					  %% Line 1057
					  <'false'> when 'true' ->
					      %% Line 1058
					      apply 'lookup_lattice_value2'/2
						  (Src2, _cor0)
					end
				    in  %% Line 918
					case <> of
					  %% Line 919
					  <>
					      when let <_cor6> =
						    call 'erlang':'=:='
							(Val1, 'bottom')
						in  let <_cor7> =
							call 'erlang':'=:='
							    (Val2, 'bottom')
						    in  call 'erlang':'and'
							    (_cor6, _cor7) ->
					      %% Line 920
					      [_cor1|[]]
					  %% Line 921
					  <>
					      when call 'erlang':'=:='
						    (Val1,
						     'bottom') ->
					      let <_cor8> =
						  %% Line 922
						  call 'hipe_rtl':'mk_imm'
						      (Val2)
					      in  let <_cor9> =
						      %% Line 922
						      call 'hipe_rtl':'subst_uses'
							  ([{Src2,_cor8}|[]], _cor1)
						  in  %% Line 922
						      [_cor9|[]]
					  %% Line 923
					  <>
					      when call 'erlang':'=:='
						    (Val2,
						     'bottom') ->
					      let <_cor10> =
						  %% Line 924
						  call 'hipe_rtl':'mk_imm'
						      (Val1)
					      in  let <_cor11> =
						      %% Line 924
						      call 'hipe_rtl':'subst_uses'
							  ([{Src1,_cor10}|[]], _cor1)
						  in  %% Line 924
						      [_cor11|[]]
					  %% Line 925
					  <> when 'true' ->
					      let <_cor12> =
						  %% Line 926
						  call 'hipe_rtl':'branch_cond'
						      (_cor1)
					      in  let <_1127> =
						      %% Line 926
						      call 'hipe_rtl_arch':'eval_cond'
							  (_cor12, Val1, Val2)
						  in  %% Line 926
						      case _1127 of
							%% Line 927
							<'true'> when 'true' ->
							    let <_cor13> =
								call 'hipe_rtl':'branch_true_label'
								    (_cor1)
							    in  let <_cor14> =
								    call 'hipe_rtl':'mk_goto'
									(_cor13)
								in  [_cor14|[]]
							%% Line 928
							<'false'> when 'true' ->
							    let <_cor15> =
								call 'hipe_rtl':'branch_false_label'
								    (_cor1)
							    in  let <_cor16> =
								    call 'hipe_rtl':'mk_goto'
									(_cor15)
								in  [_cor16|[]]
							( <_cor17> when 'true' ->
							      primop 'match_fail'
								  ({'case_clause',_1127})
							  -| ['compiler_generated'] )
						      end
					end
'make_alub_subst_list'/3 =
    %% Line 948
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'bottom',_cor11,Tail> when 'true' ->
	      _cor0
	  %% Line 949
	  <'top',Src,_cor12> when 'true' ->
	      do  %% Line 950
		  call 'io':'format'
		      ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[88|[73|[84|[69|[68|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[32|[126|[119|[32|[64|[126|[119|[58|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [{[126|[119|[32|[105|[115|[32|[116|[111|[112|[32|[100|[117|[114|[105|[110|[103|[32|[117|[112|[100|[97|[116|[101]]]]]]]]]]]]]]]]]]]]]]],_cor1}|['hipe_rtl_ssa_const_prop'|[950]]])
		  %% Line 950
		  call 'erlang':'error'
		      ({'hipe_rtl_ssa_const_prop',950,{[126|[119|[32|[105|[115|[32|[116|[111|[112|[32|[100|[117|[114|[105|[110|[103|[32|[117|[112|[100|[97|[116|[101]]]]]]]]]]]]]]]]]]]]]]],_cor1}})
	  %% Line 951
	  <Val,Src,Tail> when 'true' ->
	      let <_3912> =
		  %% Line 952
		  call 'hipe_rtl':'is_imm'
		      (_cor1)
	      in  %% Line 952
		  case _3912 of
		    %% Line 953
		    <'true'> when 'true' ->
			_cor0
		    %% Line 954
		    <'false'> when 'true' ->
			let <_cor6> =
			    call 'hipe_rtl':'mk_imm'
				(_cor2)
			in  [{_cor1,_cor6}|_cor0]
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_3912})
		      -| ['compiler_generated'] )
		  end
	end
'update_alub'/2 =
    %% Line 957
    fun (_cor1,_cor0) ->
	let <Src1> =
	    %% Line 958
	    call 'hipe_rtl':'alub_src1'
		(_cor1)
	in  let <Src2> =
		%% Line 959
		call 'hipe_rtl':'alub_src2'
		    (_cor1)
	    in  let <_cor3> =
		    %% Line 1054
		    call 'hipe_rtl_arch':'is_precoloured'
			(Src1)
		in  let <_cor2> =
			%% Line 1054
			call 'hipe_rtl':'is_const_label'
			    (Src1)
		    in  let <Val1> =
			    %% Line 1054
			    case call 'erlang':'or'
				     (_cor3, _cor2) of
			      %% Line 1055
			      <'true'> when 'true' ->
				  %% Line 1056
				  'bottom'
			      %% Line 1057
			      <'false'> when 'true' ->
				  %% Line 1058
				  apply 'lookup_lattice_value2'/2
				      (Src1, _cor0)
			    end
			in  let <_cor3> =
				%% Line 1054
				call 'hipe_rtl_arch':'is_precoloured'
				    (Src2)
			    in  let <_cor2> =
				    %% Line 1054
				    call 'hipe_rtl':'is_const_label'
					(Src2)
				in  let <Val2> =
					%% Line 1054
					case call 'erlang':'or'
						 (_cor3, _cor2) of
					  %% Line 1055
					  <'true'> when 'true' ->
					      %% Line 1056
					      'bottom'
					  %% Line 1057
					  <'false'> when 'true' ->
					      %% Line 1058
					      apply 'lookup_lattice_value2'/2
						  (Src2, _cor0)
					end
				    in  let <_cor6> =
					    %% Line 962
					    call 'hipe_rtl':'alub_op'
						(_cor1)
					in  let <_6530> =
						%% Line 962
						apply 'evaluate_alu'/3
						    (Val1, _cor6, Val2)
					    in  %% Line 962
						case _6530 of
						  <{ResVal,N,Z,C,V}> when 'true' ->
						      let <_cor8> =
							  %% Line 963
							  call 'hipe_rtl':'alub_cond'
							      (_cor1)
						      in  let <CondRes> =
							      %% Line 963
							      apply 'partial_eval_branch'/5
								  (_cor8, N, Z, C, V)
							  in  %% Line 964
							      case CondRes of
								%% Line 965
								<'bottom'> when 'true' ->
								    let <S1> =
									%% Line 969
									apply 'make_alub_subst_list'/3
									    (Val1, Src1, [])
								    in  let <S2> =
									    %% Line 970
									    apply 'make_alub_subst_list'/3
										(Val2, Src2, S1)
									in  let <_cor12> =
										%% Line 971
										call 'hipe_rtl':'subst_uses'
										    (S2, _cor1)
									    in  %% Line 971
										[_cor12|[]]
								%% Line 972
								<_cor22> when 'true' ->
								    let <_cor14> =
									%% Line 978
									case ResVal of
									  %% Line 979
									  <'bottom'> when 'true' ->
									      %% Line 980
									      case <> of
										<>
										    when call 'erlang':'=:='
											  (Val1,
											   'bottom') ->
										    Src1
										%% Line 981
										<>
										    when call 'erlang':'=:='
											  (Val2,
											   'bottom') ->
										    Src2
										( <> when 'true' ->
										      primop 'match_fail'
											  ('if_clause')
										  -| ['compiler_generated'] )
									      end
									  %% Line 983
									  <_cor23> when 'true' ->
									      call 'hipe_rtl':'mk_imm'
										  (ResVal)
									end
								    in  %% Line 985
									case CondRes of
									  %% Line 986
									  <'top'> when 'true' ->
									      do  %% Line 987
										  call 'io':'format'
										      ([111|[111|[112|[115|[46|[32|[115|[111|[109|[101|[116|[104|[105|[110|[103|[32|[86|[69|[82|[89|[32|[98|[97|[100|[58|[32|[126|[119|[32|[126|[119|[32|[86|[49|[32|[38|[32|[50|[32|[126|[119|[32|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 988
																																									       [_cor1|[{ResVal,N,Z,C,V}|[Val1|[Val2|[]]]]])
										  %% Line 989
										  [_cor1|[]]
									  %% Line 990
									  <'true'> when 'true' ->
									      let <_cor16> =
										  call 'hipe_rtl':'alub_true_label'
										      (_cor1)
									      in  let <_cor3> =
										      call 'hipe_rtl':'alub_dst'
											  (_cor1)
										  in  let <_cor4> =
											  call 'hipe_rtl':'mk_move'
											      (_cor3, _cor14)
										      in  let <_cor5> =
											      call 'hipe_rtl':'mk_goto'
												  (_cor16)
											  in  [_cor4|[_cor5|[]]]
									  %% Line 991
									  <'false'> when 'true' ->
									      let <_cor17> =
										  call 'hipe_rtl':'alub_false_label'
										      (_cor1)
									      in  let <_cor3> =
										      call 'hipe_rtl':'alub_dst'
											  (_cor1)
										  in  let <_cor4> =
											  call 'hipe_rtl':'mk_move'
											      (_cor3, _cor14)
										      in  let <_cor5> =
											      call 'hipe_rtl':'mk_goto'
												  (_cor17)
											  in  [_cor4|[_cor5|[]]]
									  ( <_cor18> when 'true' ->
										primop 'match_fail'
										    ({'case_clause',CondRes})
									    -| ['compiler_generated'] )
									end
							      end
						  ( <_cor7> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_6530})
						    -| ['compiler_generated'] )
						end
'update_goto_index'/2 =
    %% Line 1003
    fun (_cor1,_cor0) ->
	let <Index> =
	    %% Line 1004
	    call 'hipe_rtl':'goto_index_index'
		(_cor1)
	in  let <_cor3> =
		%% Line 1054
		call 'hipe_rtl_arch':'is_precoloured'
		    (Index)
	    in  let <_cor2> =
		    %% Line 1054
		    call 'hipe_rtl':'is_const_label'
			(Index)
		in  let <_4490> =
			%% Line 1054
			case call 'erlang':'or'
				 (_cor3, _cor2) of
			  %% Line 1055
			  <'true'> when 'true' ->
			      %% Line 1056
			      'bottom'
			  %% Line 1057
			  <'false'> when 'true' ->
			      %% Line 1058
			      apply 'lookup_lattice_value2'/2
				  (Index, _cor0)
			end
		    in  %% Line 1005
			case _4490 of
			  %% Line 1006
			  <'bottom'> when 'true' ->
			      %% Line 1007
			      [_cor1|[]]
			  %% Line 1008
			  <I> when 'true' ->
			      let <_cor3> =
				  %% Line 1009
				  call 'hipe_rtl':'goto_index_labels'
				      (_cor1)
			      in  let <_cor4> =
				      %% Line 1009
				      call 'lists':'nth'
					  (_cor3, _4490)
				  in  let <_cor5> =
					  %% Line 1009
					  call 'hipe_rtl':'mk_goto'
					      (_cor4)
				      in  %% Line 1009
					  [_cor5|[]]
			end
'update_switch'/2 =
    %% Line 1020
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 1021
	    call 'hipe_rtl':'switch_src'
		(_cor1)
	in  let <_cor3> =
		%% Line 1054
		call 'hipe_rtl_arch':'is_precoloured'
		    (_cor2)
	    in  let <_7295> =
		    %% Line 1054
		    call 'hipe_rtl':'is_const_label'
			(_cor2)
		in  let <_5722> =
			%% Line 1054
			case call 'erlang':'or'
				 (_cor3, _7295) of
			  %% Line 1055
			  <'true'> when 'true' ->
			      %% Line 1056
			      'bottom'
			  %% Line 1057
			  <'false'> when 'true' ->
			      %% Line 1058
			      apply 'lookup_lattice_value2'/2
				  (_cor2, _cor0)
			end
		    in  %% Line 1021
			case _5722 of
			  %% Line 1022
			  <'bottom'> when 'true' ->
			      %% Line 1023
			      [_cor1|[]]
			  %% Line 1024
			  <Const> when 'true' ->
			      let <Labels> =
				  call 'hipe_rtl':'switch_labels'
				      (_cor1)
			      in  let <_cor3> =
				      call 'erlang':'+'
					  (_5722, 1)
				  in  let <Lab> =
					  call 'lists':'nth'
					      (_cor3, Labels)
				      in  let <_cor4> =
					      %% Line 1026
					      call 'hipe_rtl':'mk_goto'
						  (Lab)
					  in  %% Line 1026
					      [_cor4|[]]
			end
'update_phi'/2 =
    %% Line 1037
    fun (_cor1,_cor0) ->
	let <Destination> =
	    %% Line 1038
	    call 'hipe_rtl':'phi_dst'
		(_cor1)
	in  let <_cor3> =
		%% Line 1054
		call 'hipe_rtl_arch':'is_precoloured'
		    (Destination)
	    in  let <_cor2> =
		    %% Line 1054
		    call 'hipe_rtl':'is_const_label'
			(Destination)
		in  let <_389> =
			%% Line 1054
			case call 'erlang':'or'
				 (_cor3, _cor2) of
			  %% Line 1055
			  <'true'> when 'true' ->
			      %% Line 1056
			      'bottom'
			  %% Line 1057
			  <'false'> when 'true' ->
			      %% Line 1058
			      apply 'lookup_lattice_value2'/2
				  (Destination, _cor0)
			end
		    in  %% Line 1039
			case _389 of
			  %% Line 1040
			  <'bottom'> when 'true' ->
			      %% Line 1041
			      [_cor1|[]]
			  %% Line 1042
			  <'top'> when 'true' ->
			      do  do  %% Line 1043
				      call 'io':'format'
					  ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[87|[97|[114|[110|[105|[110|[103|[58|[32|[91|[126|[115|[58|[126|[119|[93|[58|[32|[84|[104|[101|[32|[100|[115|[116|[32|[111|[102|[32|[126|[119|[32|[105|[115|[32|[116|[111|[112|[32|[97|[102|[116|[101|[114|[32|[83|[67|[67|[80|[46|[32|[83|[116|[114|[97|[110|[103|[101|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['hipe_rtl_ssa_const_prop'|[1043|[_cor1|[]]]])
				      %% Line 1044
				      call 'io':'format'
					  ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[88|[73|[84|[69|[68|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[32|[126|[119|[32|[64|[126|[119|[58|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [{[98|[97|[110|[103|[32|[33]]]]]],_cor1}|['hipe_rtl_ssa_const_prop'|[1044]]])
				  %% Line 1044
				  call 'erlang':'error'
				      ({'hipe_rtl_ssa_const_prop',1044,{[98|[97|[110|[103|[32|[33]]]]]],_cor1}})
			  %% Line 1046
			  <Value> when 'true' ->
			      let <_cor10> =
				  %% Line 1047
				  call 'hipe_rtl':'mk_imm'
				      (_389)
			      in  let <_cor11> =
				      %% Line 1047
				      call 'hipe_rtl':'mk_move'
					  (Destination, _cor10)
				  in  %% Line 1047
				      [_cor11|[]]
			end
'lookup_lattice_value2'/2 =
    %% Line 1061
    fun (_cor1,_cor0) ->
	case _cor0 of
	  <{'env',_cor2,_cor3,_cor4,Values,_cor5}> when 'true' ->
	      let <_2058> =
		  %% Line 1063
		  call 'hipe_rtl':'is_imm'
		      (_cor1)
	      in  %% Line 1063
		  case _2058 of
		    %% Line 1064
		    <'true'> when 'true' ->
			%% Line 1065
			call 'hipe_rtl':'imm_value'
			    (_cor1)
		    %% Line 1066
		    <'false'> when 'true' ->
			let <_3886> =
			    %% Line 1067
			    call 'gb_trees':'lookup'
				(_cor1, Values)
			in  %% Line 1067
			    case _3886 of
			      %% Line 1068
			      <'none'> when 'true' ->
				  do  do  %% Line 1069
					  call 'io':'format'
					      ([126|[119|[126|[110]]]], [Values|[]])
					  %% Line 1070
					  call 'io':'format'
					      ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[87|[97|[114|[110|[105|[110|[103|[58|[32|[91|[126|[115|[58|[126|[119|[93|[58|[32|[69|[97|[114|[108|[105|[101|[114|[32|[99|[111|[109|[112|[105|[108|[101|[114|[32|[115|[116|[101|[112|[115|[32|[103|[101|[110|[101|[114|[97|[116|[101|[100|[32|[101|[114|[114|[111|[110|[101|[111|[117|[115|[32|[99|[111|[100|[101|[32|[102|[111|[114|[32|[88|[32|[61|[32|[126|[119|[46|[32|[87|[101|[32|[97|[114|[101|[32|[105|[103|[110|[111|[114|[105|[110|[103|[32|[116|[104|[105|[115|[46|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 1071
																																																																																							['hipe_rtl_ssa_const_prop'|[1071|[_cor1|[]]]])
				      %% Line 1072
				      'bottom'
			      %% Line 1073
			      <{'value','top'}> when 'true' ->
				  do  %% Line 1074
				      call 'io':'format'
					  ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[88|[73|[84|[69|[68|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[32|[126|[119|[32|[64|[126|[119|[58|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [{[108|[111|[111|[107|[117|[112|[95|[108|[97|[116|[116|[105|[99|[101|[95|[118|[97|[108|[117|[101|[44|[32|[116|[111|[112]]]]]]]]]]]]]]]]]]]]]]]]],_cor1}|['hipe_rtl_ssa_const_prop'|[1074]]])
				      %% Line 1074
				      call 'erlang':'error'
					  ({'hipe_rtl_ssa_const_prop',1074,{[108|[111|[111|[107|[117|[112|[95|[108|[97|[116|[116|[105|[99|[101|[95|[118|[97|[108|[117|[101|[44|[32|[116|[111|[112]]]]]]]]]]]]]]]]]]]]]]]]],_cor1}})
			      %% Line 1076
			      <{'value',Y}> when 'true' ->
				  Y
			      ( <_cor10> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_3886})
				-| ['compiler_generated'] )
			    end
		    ( <_cor11> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_2058})
		      -| ['compiler_generated'] )
		  end
	  ( <_7718> when 'true' ->
		primop 'match_fail'
		    ({'function_clause',_cor0})
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_rtl_ssa_const_prop')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_rtl_ssa_const_prop', _cor0)
end