module 'cerl_prettypr' ['annotate'/3,
			'format'/1,
			'format'/2,
			'module_info'/0,
			'module_info'/1]
    attributes [%% Line 75
		'type' =
		    %% Line 75
		    [{'hook',{'type',75,'union',[{'atom',75,'none'}|[{'type',75,'fun',[{'type',75,'product',[{'remote_type',75,[{'atom',75,'cerl'}|[{'atom',75,'cerl'}|[[]]]]}|[{'var',75,'_'}|[{'var',75,'_'}]]]}|[{'remote_type',75,[{'atom',75,'prettypr'}|[{'atom',75,'document'}|[[]]]]}]]}]]},[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','ctxt'},[{'typed_record_field',{'record_field',77,{'atom',77,'line'},{'integer',77,0}},{'type',77,'integer',[]}}|[{'typed_record_field',{'record_field',78,{'atom',78,'body_indent'},{'integer',78,4}},{'type',78,'non_neg_integer',[]}}|[{'typed_record_field',{'record_field',79,{'atom',79,'sub_indent'},{'integer',79,2}},{'type',79,'non_neg_integer',[]}}|[{'typed_record_field',{'record_field',80,{'atom',80,'hook'},{'atom',80,'none'}},{'type',80,'hook',[]}}|[{'typed_record_field',{'record_field',81,{'atom',81,'noann'},{'atom',81,'false'}},{'type',81,'boolean',[]}}|[{'typed_record_field',{'record_field',82,{'atom',82,'paper'},{'integer',82,76}},{'type',82,'integer',[]}}|[{'typed_record_field',{'record_field',83,{'atom',83,'ribbon'},{'integer',83,45}},{'type',83,'integer',[]}}|[{'typed_record_field',{'record_field',84,{'atom',84,'user'},{'atom',84,'undefined'}},{'type',84,'term',[]}}]]]]]]]],[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{'context',{'type',85,'record',[{'atom',85,'ctxt'}]},[]}],
		%% Line 187
		'spec' =
		    %% Line 187
		    [{{'format',1},[{'type',187,'fun',[{'type',187,'product',[{'remote_type',187,[{'atom',187,'cerl'}|[{'atom',187,'cerl'}|[[]]]]}]}|[{'type',187,'string',[]}]]}]}],
		%% Line 267
		'spec' =
		    %% Line 267
		    [{{'format',2},[{'type',267,'fun',[{'type',267,'product',[{'remote_type',267,[{'atom',267,'cerl'}|[{'atom',267,'cerl'}|[[]]]]}|[{'type',267,'list',[{'type',267,'term',[]}]}]]}|[{'type',267,'string',[]}]]}]}],
		%% Line 331
		'spec' =
		    %% Line 331
		    [{{'annotate',3},[{'type',331,'fun',[{'type',331,'product',[{'remote_type',331,[{'atom',331,'prettypr'}|[{'atom',331,'document'}|[[]]]]}|[{'type',331,'list',[{'type',331,'term',[]}]}|[{'type',331,'context',[]}]]]}|[{'remote_type',331,[{'atom',331,'prettypr'}|[{'atom',331,'document'}|[[]]]]}]]}]}],
		%% Line 374
		'spec' =
		    %% Line 374
		    [{{'layout',2},[{'type',374,'fun',[{'type',374,'product',[{'remote_type',374,[{'atom',374,'cerl'}|[{'atom',374,'cerl'}|[[]]]]}|[{'type',374,'list',[{'type',374,'term',[]}]}]]}|[{'remote_type',374,[{'atom',374,'prettypr'}|[{'atom',374,'document'}|[[]]]]}]]}]}]]
'format'/1 =
    %% Line 189
    fun (_cor0) ->
	%% Line 190
	apply 'format'/2
	    (_cor0, [])
'format'/2 =
    %% Line 269
    fun (_cor1,_cor0) ->
	let <W> =
	    %% Line 270
	    call 'proplists':'get_value'
		('paper', _cor0, 76)
	in  let <L> =
		%% Line 271
		call 'proplists':'get_value'
		    ('ribbon', _cor0, 45)
	    in  let <_cor4> =
		    %% Line 272
		    apply 'layout'/2
			(_cor1, _cor0)
		in  %% Line 272
		    call 'prettypr':'format'
			(_cor4, W, L)
'annotate'/3 =
    %% Line 333
    fun (_cor2,_cor1,_cor0) ->
	let <_3569> =
	    %% Line 334
	    apply 'strip_line'/1
		(_cor1)
	in  %% Line 334
	    case _3569 of
	      %% Line 335
	      <[]> when 'true' ->
		  _cor2
	      %% Line 337
	      <As> when 'true' ->
		  %% Line 338
		  ( case _cor0 of
		      ( <( {'ctxt',_cor24,_cor25,_cor26,_cor27,_rec0,_cor28,_cor29,_cor30}
			   -| ['compiler_generated'] )> when 'true' ->
			    case _rec0 of
			      %% Line 339
			      <'false'> when 'true' ->
				  let <_cor5> =
				      %% Line 340
				      call 'prettypr':'text'
					  ([44])
				  in  let <_cor6> =
					  %% Line 340
					  call 'prettypr':'floating'
					      (_cor5)
				      in  let <Es> =
					      %% Line 340
					      apply 'seq'/4
						  (_3569, _cor6, _cor0, 'lay_concrete'/2)
					  in  let <_cor16> =
						  %% Line 342
						  call 'prettypr':'text'
						      ([40])
					      in  let <_cor17> =
						      %% Line 342
						      call 'prettypr':'floating'
							  (_cor16)
						  in  let <_cor18> =
							  %% Line 342
							  call 'prettypr':'beside'
							      (_cor17, _cor2)
						      in  let <_cor14> =
							      %% Line 343
							      call 'prettypr':'text'
								  ([45|[124|[32|[91]]]])
							  in  let <_cor12> =
								  %% Line 344
								  call 'prettypr':'par'
								      (Es)
							      in  let <_cor10> =
								      %% Line 344
								      call 'prettypr':'text'
									  ([93|[41]])
								  in  let <_cor11> =
									  %% Line 344
									  call 'prettypr':'floating'
									      (_cor10)
								      in  let <_cor13> =
									      %% Line 344
									      call 'prettypr':'beside'
										  (_cor12, _cor11)
									  in  let <_cor15> =
										  %% Line 343
										  call 'prettypr':'beside'
										      (_cor14, _cor13)
									      in  %% Line 342
										  call 'prettypr':'follow'
										      (_cor18, _cor15, _cor26)
			      %% Line 346
			      <'true'> when 'true' ->
				  _cor2
			      ( <_cor19> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_rec0})
				-| ['compiler_generated'] )
			    end
			-| ['compiler_generated'] )
		      ( <_cor31> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','ctxt'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	    end
'layout'/2 =
    %% Line 376
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 378
	    call 'proplists':'get_value'
		('hook', _cor0, 'none')
	in  let <_cor5> =
		%% Line 379
		call 'proplists':'get_bool'
		    ('noann', _cor0)
	    in  let <_cor4> =
		    %% Line 380
		    call 'proplists':'get_value'
			('paper', _cor0, 76)
		in  let <_cor3> =
			%% Line 381
			call 'proplists':'get_value'
			    ('ribbon', _cor0, 45)
		    in  let <_cor2> =
			    %% Line 382
			    call 'proplists':'get_value'
				('user', _cor0)
			in  %% Line 377
			    apply 'lay'/2
				(_cor1, %% Line 378
					{'ctxt',0,4,2,_cor6,_cor5,_cor4,_cor3,_cor2})
'lay'/2 =
    %% Line 384
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 385
	    call 'cerl':'get_ann'
		(_cor1)
	in  let <_1658> =
		%% Line 385
		apply 'get_line'/1
		    (_cor2)
	    in  %% Line 385
		case _1658 of
		  %% Line 386
		  <'none'> when 'true' ->
		      %% Line 387
		      apply 'lay_0'/2
			  (_cor1, _cor0)
		  %% Line 388
		  <Line> when 'true' ->
		      %% Line 389
		      case <> of
			<>
			    when ( try
				    ( case <> of
					( <>
					      when ( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'is_record'
										       -| ['compiler_generated'] )
						      (_cor0,
						       ( 'ctxt'
							 -| ['compiler_generated'] ),
						       ( 9
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] ) ->
					      let <_cor7> =
						  ( call 'erlang':'element'
							(2, _cor0)
						    -| ['compiler_generated'] )
					      in  ( call 'erlang':'>'
							(_1658, _cor7)
						    -| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				of <Try> ->
				    Try
				catch <T,R> ->
				    'false'
				-| ['compiler_generated'] ) ->
			    %% Line 390
			    case _cor0 of
			      <{'ctxt',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27}> when 'true' ->
				  let <_cor11> =
				      call 'erlang':'setelement'
					  (2, _cor0, _1658)
				  in  let <Txt> =
					  %% Line 391
					  call 'io_lib':'format'
					      ([37|[32|[76|[105|[110|[101|[32|[126|[119]]]]]]]]], [_1658|[]])
				      in  let <_cor15> =
					      %% Line 393
					      call 'prettypr':'text'
						  (Txt)
					  in  let <_cor16> =
						  %% Line 393
						  call 'prettypr':'floating'
						      (_cor15)
					      in  let <_cor14> =
						      %% Line 393
						      apply 'lay_0'/2
							  (_cor1, _cor11)
						  in  %% Line 393
						      call 'prettypr':'above'
							  (_cor16, _cor14)
			      ( <_cor28> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','ctxt'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			%% Line 394
			<> when 'true' ->
			    %% Line 395
			    apply 'lay_0'/2
				(_cor1, _cor0)
		      end
		end
'lay_0'/2 =
    %% Line 399
    fun (_cor1,_cor0) ->
	%% Line 400
	( case _cor0 of
	    ( <( {'ctxt',_cor7,_cor8,_cor9,_rec3,_cor10,_cor11,_cor12,_cor13}
		 -| ['compiler_generated'] )> when 'true' ->
		  case _rec3 of
		    %% Line 401
		    <'none'> when 'true' ->
			%% Line 402
			apply 'lay_ann'/2
			    (_cor1, _cor0)
		    %% Line 403
		    <Hook> when 'true' ->
			%% Line 405
			apply _rec3
			    (_cor1, _cor0, 'lay_ann'/2)
		  end
	      -| ['compiler_generated'] )
	    ( <_cor14> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','ctxt'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'lay_ann'/2 =
    %% Line 411
    fun (_cor1,_cor0) ->
	let <Doc> =
	    %% Line 412
	    apply 'lay_1'/2
		(_cor1, _cor0)
	in  let <As> =
		%% Line 413
		call 'cerl':'get_ann'
		    (_cor1)
	    in  %% Line 414
		apply 'annotate'/3
		    (Doc, As, _cor0)
'lay_1'/2 =
    %% Line 418
    fun (_cor1,_cor0) ->
	let <_3736> =
	    %% Line 419
	    call 'cerl':'type'
		(_cor1)
	in  %% Line 419
	    case _3736 of
	      %% Line 420
	      <'literal'> when 'true' ->
		  %% Line 421
		  apply 'lay_literal'/2
		      (_cor1, _cor0)
	      %% Line 422
	      <'var'> when 'true' ->
		  %% Line 423
		  apply 'lay_var'/2
		      (_cor1, _cor0)
	      %% Line 424
	      <'values'> when 'true' ->
		  %% Line 425
		  apply 'lay_values'/2
		      (_cor1, _cor0)
	      %% Line 426
	      <'cons'> when 'true' ->
		  %% Line 427
		  apply 'lay_cons'/2
		      (_cor1, _cor0)
	      %% Line 428
	      <'tuple'> when 'true' ->
		  %% Line 429
		  apply 'lay_tuple'/2
		      (_cor1, _cor0)
	      %% Line 430
	      <'map'> when 'true' ->
		  %% Line 431
		  apply 'lay_map'/2
		      (_cor1, _cor0)
	      %% Line 432
	      <'map_pair'> when 'true' ->
		  %% Line 433
		  apply 'lay_map_pair'/2
		      (_cor1, _cor0)
	      %% Line 434
	      <'let'> when 'true' ->
		  %% Line 435
		  apply 'lay_let'/2
		      (_cor1, _cor0)
	      %% Line 436
	      <'seq'> when 'true' ->
		  %% Line 437
		  apply 'lay_seq'/2
		      (_cor1, _cor0)
	      %% Line 438
	      <'apply'> when 'true' ->
		  %% Line 439
		  apply 'lay_apply'/2
		      (_cor1, _cor0)
	      %% Line 440
	      <'call'> when 'true' ->
		  %% Line 441
		  apply 'lay_call'/2
		      (_cor1, _cor0)
	      %% Line 442
	      <'primop'> when 'true' ->
		  %% Line 443
		  apply 'lay_primop'/2
		      (_cor1, _cor0)
	      %% Line 444
	      <'case'> when 'true' ->
		  %% Line 445
		  apply 'lay_case'/2
		      (_cor1, _cor0)
	      %% Line 446
	      <'clause'> when 'true' ->
		  %% Line 447
		  apply 'lay_clause'/2
		      (_cor1, _cor0)
	      %% Line 448
	      <'alias'> when 'true' ->
		  %% Line 449
		  apply 'lay_alias'/2
		      (_cor1, _cor0)
	      %% Line 450
	      <'fun'> when 'true' ->
		  %% Line 451
		  apply 'lay_fun'/2
		      (_cor1, _cor0)
	      %% Line 452
	      <'receive'> when 'true' ->
		  %% Line 453
		  apply 'lay_receive'/2
		      (_cor1, _cor0)
	      %% Line 454
	      <'try'> when 'true' ->
		  %% Line 455
		  apply 'lay_try'/2
		      (_cor1, _cor0)
	      %% Line 456
	      <'catch'> when 'true' ->
		  %% Line 457
		  apply 'lay_catch'/2
		      (_cor1, _cor0)
	      %% Line 458
	      <'letrec'> when 'true' ->
		  %% Line 459
		  apply 'lay_letrec'/2
		      (_cor1, _cor0)
	      %% Line 460
	      <'module'> when 'true' ->
		  %% Line 461
		  apply 'lay_module'/2
		      (_cor1, _cor0)
	      %% Line 462
	      <'binary'> when 'true' ->
		  %% Line 463
		  apply 'lay_binary'/2
		      (_cor1, _cor0)
	      %% Line 464
	      <'bitstr'> when 'true' ->
		  %% Line 465
		  apply 'lay_bitstr'/2
		      (_cor1, _cor0)
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_3736})
		-| ['compiler_generated'] )
	    end
'lay_literal'/2 =
    %% Line 468
    fun (_cor1,_cor0) ->
	let <_2893> =
	    %% Line 469
	    call 'cerl':'concrete'
		(_cor1)
	in  %% Line 469
	    case _2893 of
	      %% Line 470
	      <V>
		  when call 'erlang':'is_atom'
			(_2893) ->
		  let <_cor2> =
		      %% Line 471
		      call 'cerl':'atom_lit'
			  (_cor1)
		  in  %% Line 471
		      call 'prettypr':'text'
			  (_cor2)
	      %% Line 472
	      <V>
		  when call 'erlang':'is_float'
			(_2893) ->
		  let <_cor3> =
		      %% Line 473
		      call 'cerl':'float_lit'
			  (_cor1)
		  in  let <_cor4> =
			  %% Line 473
			  apply 'tidy_float'/1
			      (_cor3)
		      in  %% Line 473
			  call 'prettypr':'text'
			      (_cor4)
	      %% Line 474
	      <V>
		  when call 'erlang':'is_integer'
			(_2893) ->
		  let <_cor5> =
		      %% Line 478
		      call 'cerl':'int_lit'
			  (_cor1)
		  in  %% Line 478
		      call 'prettypr':'text'
			  (_cor5)
	      %% Line 479
	      <V>
		  when call 'erlang':'is_bitstring'
			(_2893) ->
		  let <Val> =
		      %% Line 480
		      fun (_cor8) ->
			  case _cor8 of
			    <I>
				when call 'erlang':'is_integer'
				      (_cor8) ->
				_cor8
			    %% Line 481
			    <B>
				when call 'erlang':'is_bitstring'
				      (_cor8) ->
				let <BZ> =
				    %% Line 482
				    call 'erlang':'bit_size'
					(_cor8)
				in  %% Line 482
				    case ( _cor8
					   -| ['reuse_for_context'] ) of
				      <#{#<BV>(BZ,1,'integer',['unsigned'|['big']])}#> when 'true' ->
					  BV
				      ( <_cor7> when 'true' ->
					    do  primop 'bs_context_to_binary'
						    (_cor8)
						primop 'match_fail'
						    ({'badmatch',_cor8})
					-| ['compiler_generated'] )
				    end
			    ( <_cor9> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor8})
				    -| [{'function_name',{'-lay_literal/2-fun-0-',1}}] )
			      -| ['compiler_generated'] )
			  end
		  in  let <Sz> =
			  %% Line 484
			  fun (_cor11) ->
			      case _cor11 of
				<I>
				    when call 'erlang':'is_integer'
					  (_cor11) ->
				    8
				%% Line 485
				<B>
				    when call 'erlang':'is_bitstring'
					  (_cor11) ->
				    call 'erlang':'bit_size'
					(_cor11)
				( <_cor12> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor11})
					-| [{'function_name',{'-lay_literal/2-fun-1-',1}}] )
				  -| ['compiler_generated'] )
			      end
		      in  let <_cor27> =
			      %% Line 487
			      ( letrec
				    'lc$^0'/1 =
					fun (_cor17) ->
					    case _cor17 of
					      <[B|_cor15]> when 'true' ->
						  let <_cor23> =
						      apply Val
							  (B)
						  in  let <_cor24> =
							  call 'cerl':'abstract'
							      (_cor23)
						      in  let <_cor21> =
							      %% Line 488
							      apply Sz
								  (B)
							  in  let <_cor22> =
								  %% Line 488
								  call 'cerl':'abstract'
								      (_cor21)
							      in  let <_cor20> =
								      %% Line 489
								      call 'cerl':'abstract'
									  (1)
								  in  let <_cor19> =
									  %% Line 490
									  call 'cerl':'abstract'
									      ('integer')
								      in  let <_cor18> =
									      %% Line 491
									      call 'cerl':'abstract'
										  (['unsigned'|['big']])
									  in  let <_cor25> =
										  call 'cerl':'c_bitstr'
										      (_cor24, _cor22, _cor20, _cor19, _cor18)
									      in  let <_cor26> =
										      %% Line 492
										      apply 'lc$^0'/1
											  (_cor15)
										  in  ( [_cor25|_cor26]
											-| ['compiler_generated'] )
					      <[]> when 'true' ->
						  []
					      ( <_3714> when 'true' ->
						    ( primop 'match_fail'
							  ({'function_clause',_cor17})
						      -| [{'function_name',{'lc$^0',1}}] )
						-| ['compiler_generated'] )
					    end
				in  let <_cor16> =
					%% Line 492
					call 'erlang':'bitstring_to_list'
					    (_2893)
				    in  apply 'lc$^0'/1
					    (_cor16)
				-| ['list_comprehension'] )
			  in  let <_cor28> =
				  %% Line 487
				  call 'cerl':'c_binary'
				      (_cor27)
			      in  %% Line 487
				  apply 'lay_binary'/2
				      (_cor28, _cor0)
	      %% Line 494
	      <[]> when 'true' ->
		  %% Line 495
		  call 'prettypr':'text'
		      ([91|[93]])
	      %% Line 496
	      <[_cor45|_cor46]> when 'true' ->
		  %% Line 498
		  apply 'lay_cons'/2
		      (_cor1, _cor0)
	      %% Line 499
	      <V>
		  when call 'erlang':'is_tuple'
			(_2893) ->
		  %% Line 500
		  apply 'lay_tuple'/2
		      (_cor1, _cor0)
	      %% Line 501
	      <M>
		  when try
			let <_cor29> =
			    call 'erlang':'is_map'
				(_2893)
			in  let <_cor30> =
				call 'erlang':'map_size'
				    (_2893)
			    in  let <_cor31> =
				    call 'erlang':'=:='
					(_cor30, 0)
				in  call 'erlang':'and'
					(_cor29, _cor31)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false' ->
		  %% Line 502
		  call 'prettypr':'text'
		      ([126|[123|[125|[126]]]])
	      %% Line 503
	      <M>
		  when call 'erlang':'is_map'
			(_2893) ->
		  let <_cor40> =
		      %% Line 504
		      ( letrec
			    'lc$^1'/1 =
				fun (_cor35) ->
				    case _cor35 of
				      <[%% Line 505
					{K,V}|_cor33]> when 'true' ->
					  let <_cor37> =
					      call 'cerl':'abstract'
						  (K)
					  in  let <_cor36> =
						  call 'cerl':'abstract'
						      (V)
					      in  let <_cor38> =
						      call 'cerl':'c_map_pair'
							  (_cor37, _cor36)
						  in  let <_cor39> =
							  %% Line 505
							  apply 'lc$^1'/1
							      (_cor33)
						      in  ( [_cor38|_cor39]
							    -| ['compiler_generated'] )
				      ( <[_cor32|_cor33]> when 'true' ->
					    %% Line 505
					    apply 'lc$^1'/1
						(_cor33)
					-| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_2995> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor35})
					      -| [{'function_name',{'lc$^1',1}}] )
					-| ['compiler_generated'] )
				    end
			in  let <_cor34> =
				%% Line 505
				call 'maps':'to_list'
				    (_2893)
			    in  apply 'lc$^1'/1
				    (_cor34)
			-| ['list_comprehension'] )
		  in  let <_cor41> =
			  %% Line 504
			  call 'cerl':'c_map'
			      (_cor40)
		      in  %% Line 504
			  apply 'lay_map'/2
			      (_cor41, _cor0)
	      ( <_cor42> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_2893})
		-| ['compiler_generated'] )
	    end
'lay_var'/2 =
    %% Line 509
    fun (_cor1,_cor0) ->
	let <_2828> =
	    %% Line 514
	    call 'cerl':'var_name'
		(_cor1)
	in  %% Line 514
	    case _2828 of
	      %% Line 515
	      <V>
		  when call 'erlang':'is_atom'
			(_2828) ->
		  let <S> =
		      %% Line 516
		      call 'erlang':'atom_to_list'
			  (_2828)
		  in  %% Line 517
		      case S of
			%% Line 518
			<[C|_cor23]>
			    when let <_cor3> =
				  call 'erlang':'>='
				      (C, 65)
			      in  let <_cor4> =
				      call 'erlang':'=<'
					  (C, 90)
				  in  call 'erlang':'and'
					  (_cor3, _cor4) ->
			    %% Line 521
			    call 'prettypr':'text'
				(S)
			%% Line 522
			<[C|_cor24]>
			    when try
				  let <_cor5> =
				      call 'erlang':'>='
					  (C, 192)
				  in  let <_cor6> =
					  call 'erlang':'=<'
					      (C, 222)
				      in  let <_cor7> =
					      call 'erlang':'/='
						  (C, 215)
					  in  let <_cor8> =
						  call 'erlang':'and'
						      (_cor6, _cor7)
					      in  call 'erlang':'and'
						      (_cor5, _cor8)
			      of <Try> ->
				  Try
			      catch <T,R> ->
				  'false' ->
			    %% Line 524
			    call 'prettypr':'text'
				(S)
			%% Line 525
			<[95|_cor25]> when 'true' ->
			    %% Line 527
			    call 'prettypr':'text'
				(S)
			%% Line 528
			<_cor26> when 'true' ->
			    %% Line 531
			    call 'prettypr':'text'
				([95|S])
		      end
	      %% Line 533
	      <V>
		  when call 'erlang':'is_integer'
			(_2828) ->
		  let <_cor10> =
		      %% Line 536
		      call 'erlang':'integer_to_list'
			  (_2828)
		  in  %% Line 536
		      call 'prettypr':'text'
			  ([95|_cor10])
	      %% Line 537
	      <{N,A}>
		  when let <_cor11> =
			call 'erlang':'is_atom'
			    (N)
		    in  let <_cor12> =
			    call 'erlang':'is_integer'
				(A)
			in  call 'erlang':'and'
				(_cor11, _cor12) ->
		  let <_cor17> =
		      %% Line 539
		      call 'erlang':'atom_to_list'
			  (N)
		  in  let <_cor18> =
			  %% Line 539
			  call 'cerl':'c_atom'
			      (_cor17)
		      in  let <_cor19> =
			      %% Line 539
			      apply 'lay_noann'/2
				  (_cor18, _cor0)
			  in  let <_cor15> =
				  %% Line 540
				  call 'prettypr':'text'
				      ([47])
			      in  let <_cor13> =
				      %% Line 540
				      call 'cerl':'c_int'
					  (A)
				  in  let <_cor14> =
					  %% Line 540
					  apply 'lay_noann'/2
					      (_cor13, _cor0)
				      in  let <_cor16> =
					      %% Line 540
					      call 'prettypr':'beside'
						  (_cor15, _cor14)
					  in  %% Line 539
					      call 'prettypr':'beside'
						  (_cor19, _cor16)
	      ( <_cor20> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_2828})
		-| ['compiler_generated'] )
	    end
'lay_values'/2 =
    %% Line 543
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 544
	    call 'cerl':'values_es'
		(_cor1)
	in  %% Line 544
	    apply 'lay_value_list'/2
		(_cor2, _cor0)
'lay_cons'/2 =
    %% Line 546
    fun (_cor1,_cor0) ->
	let <_1476> =
	    %% Line 547
	    call 'cerl':'is_print_string'
		(_cor1)
	in  %% Line 547
	    case _1476 of
	      %% Line 548
	      <'true'> when 'true' ->
		  let <_cor2> =
		      %% Line 549
		      call 'cerl':'string_lit'
			  (_cor1)
		  in  %% Line 549
		      apply 'lay_string'/2
			  (_cor2, _cor0)
	      %% Line 550
	      <'false'> when 'true' ->
		  let <_cor8> =
		      %% Line 551
		      call 'prettypr':'text'
			  ([91])
		  in  let <_cor9> =
			  %% Line 551
			  call 'prettypr':'floating'
			      (_cor8)
		      in  let <_cor5> =
			      %% Line 552
			      apply 'lay_list_elements'/2
				  (_cor1, _cor0)
			  in  let <_cor6> =
				  %% Line 552
				  call 'prettypr':'par'
				      (_cor5)
			      in  let <_cor3> =
				      %% Line 553
				      call 'prettypr':'text'
					  ([93])
				  in  let <_cor4> =
					  %% Line 553
					  call 'prettypr':'floating'
					      (_cor3)
				      in  let <_cor7> =
					      %% Line 552
					      call 'prettypr':'beside'
						  (_cor6, _cor4)
					  in  %% Line 551
					      call 'prettypr':'beside'
						  (_cor9, _cor7)
	      ( <_cor10> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_1476})
		-| ['compiler_generated'] )
	    end
'lay_string'/2 =
    %% Line 556
    fun (_cor1,_cor0) ->
	%% Line 559
	( case _cor0 of
	    ( <( {'ctxt',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_rec4,_cor15}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor4> =
		      call 'erlang':'*'
			  (_rec4, 2)
		  in  let <W> =
			  call 'erlang':'div'
			      (_cor4, 3)
		      in  let <_cor6> =
			      %% Line 560
			      call 'erlang':'length'
				  (_cor1)
			  in  %% Line 560
			      apply 'lay_string_1'/3
				  (_cor1, _cor6, W)
	      -| ['compiler_generated'] )
	    ( <_cor16> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','ctxt'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'lay_string_1'/3 =
    %% Line 562
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,L,W>
	      when let <_cor3> =
		    call 'erlang':'>'
			(_cor1, _cor0)
		in  let <_cor4> =
			call 'erlang':'>'
			    (_cor0, 0)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      let <_cor5> =
		  %% Line 564
		  call 'erlang':'-'
		      (_cor0, 1)
	      in  let <_4155> =
		      %% Line 575
		      apply 'split_string_1'/4
			  (_cor2, _cor5, _cor1, [])
		  in  %% Line 564
		      case _4155 of
			%% Line 565
			<{_cor15,[]}> when 'true' ->
			    %% Line 566
			    call 'prettypr':'text'
				(_cor2)
			%% Line 567
			<{S1,S2}> when 'true' ->
			    let <_cor9> =
				%% Line 568
				call 'erlang':'++'
				    (S1, [34])
			    in  let <_cor10> =
				    %% Line 568
				    call 'prettypr':'text'
					(_cor9)
				in  let <_cor6> =
					%% Line 569
					call 'erlang':'-'
					    (_cor1, _cor0)
				    in  let <_cor7> =
					    %% Line 569
					    call 'erlang':'+'
						(_cor6, 1)
					in  let <_cor8> =
						%% Line 569
						apply 'lay_string_1'/3
						    ([34|S2], _cor7, _cor0)
					    in  %% Line 568
						call 'prettypr':'above'
						    (_cor10, _cor8)
			( <_cor11> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_4155})
			  -| ['compiler_generated'] )
		      end
	  %% Line 571
	  <S,_X_L,_X_W> when 'true' ->
	      %% Line 572
	      call 'prettypr':'text'
		  (_cor2)
	end
'split_string_1'/4 =
    %% Line 580
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[32|Xs],N,L,As>
	      when let <_cor4> =
		    call 'erlang':'=<'
			(_cor2, 0)
		in  let <_cor5> =
			call 'erlang':'>='
			    (_cor1, 5)
		    in  call 'erlang':'and'
			    (_cor4, _cor5) ->
	      let <_cor6> =
		  %% Line 581
		  call 'lists':'reverse'
		      ([32|_cor0])
	      in  %% Line 581
		  {_cor6,Xs}
	  %% Line 582
	  <[9|Xs],N,L,As>
	      when let <_cor7> =
		    call 'erlang':'=<'
			(_cor2, 0)
		in  let <_cor8> =
			call 'erlang':'>='
			    (_cor1, 5)
		    in  call 'erlang':'and'
			    (_cor7, _cor8) ->
	      let <_cor9> =
		  %% Line 583
		  call 'lists':'reverse'
		      ([116|[92|_cor0]])
	      in  %% Line 583
		  {_cor9,Xs}
	  %% Line 584
	  <[10|Xs],N,L,As>
	      when let <_cor10> =
		    call 'erlang':'=<'
			(_cor2, 0)
		in  let <_cor11> =
			call 'erlang':'>='
			    (_cor1, 5)
		    in  call 'erlang':'and'
			    (_cor10, _cor11) ->
	      let <_cor12> =
		  %% Line 585
		  call 'lists':'reverse'
		      ([110|[92|_cor0]])
	      in  %% Line 585
		  {_cor12,Xs}
	  %% Line 586
	  <[92|Xs],N,L,As> when 'true' ->
	      let <_cor14> =
		  %% Line 587
		  call 'erlang':'-'
		      (_cor2, 1)
	      in  let <_cor13> =
		      %% Line 587
		      call 'erlang':'-'
			  (_cor1, 1)
		  in  %% Line 587
		      apply 'split_string_2'/4
			  (Xs, _cor14, _cor13, [92|_cor0])
	  %% Line 588
	  <Xs,N,L,As>
	      when let <_cor16> =
		    call 'erlang':'=<'
			(_cor2, -10)
		in  let <_cor17> =
			call 'erlang':'>='
			    (_cor1, 5)
		    in  call 'erlang':'and'
			    (_cor16, _cor17) ->
	      let <_cor18> =
		  %% Line 589
		  call 'lists':'reverse'
		      (_cor0)
	      in  %% Line 589
		  {_cor18,_cor3}
	  %% Line 590
	  <[X|Xs],N,L,As> when 'true' ->
	      let <_cor20> =
		  %% Line 591
		  call 'erlang':'-'
		      (_cor2, 1)
	      in  let <_cor19> =
		      %% Line 591
		      call 'erlang':'-'
			  (_cor1, 1)
		  in  %% Line 591
		      apply 'split_string_1'/4
			  (Xs, _cor20, _cor19, [X|_cor0])
	  %% Line 592
	  <[],_X_N,_X_L,As> when 'true' ->
	      let <_cor21> =
		  %% Line 593
		  call 'lists':'reverse'
		      (_cor0)
	      in  %% Line 593
		  {_cor21,[]}
	  ( <_cor25,_cor24,_cor23,_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'split_string_1',4}}] )
	    -| ['compiler_generated'] )
	end
'split_string_2'/4 =
    %% Line 595
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[94|[X|Xs]],N,L,As> when 'true' ->
	      let <_cor5> =
		  %% Line 596
		  call 'erlang':'-'
		      (_cor2, 2)
	      in  let <_cor4> =
		      %% Line 596
		      call 'erlang':'-'
			  (_cor1, 2)
		  in  %% Line 596
		      apply 'split_string_1'/4
			  (Xs, _cor5, _cor4, [X|[94|_cor0]])
	  %% Line 597
	  <[X1|[X2|[X3|Xs]]],N,L,As>
	      when %% Line 598
		try
		    let <_cor6> =
			call 'erlang':'>='
			    (X1, 48)
		    in  let <_cor7> =
			    call 'erlang':'=<'
				(X1, 55)
			in  let <_cor8> =
				call 'erlang':'>='
				    (X2, 48)
			    in  let <_cor9> =
				    call 'erlang':'=<'
					(X2, 55)
				in  let <_cor10> =
					call 'erlang':'>='
					    (X3, 48)
				    in  let <_cor11> =
					    call 'erlang':'=<'
						(X3, 55)
					in  let <_cor12> =
						call 'erlang':'and'
						    (_cor10, _cor11)
					    in  let <_cor13> =
						    call 'erlang':'and'
							(_cor9, _cor12)
						in  let <_cor14> =
							call 'erlang':'and'
							    (_cor8, _cor13)
						    in  let <_cor15> =
							    call 'erlang':'and'
								(_cor7, _cor14)
							in  call 'erlang':'and'
								(_cor6, _cor15)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor17> =
		  %% Line 599
		  call 'erlang':'-'
		      (_cor2, 3)
	      in  let <_cor16> =
		      %% Line 599
		      call 'erlang':'-'
			  (_cor1, 3)
		  in  %% Line 599
		      apply 'split_string_1'/4
			  (Xs, _cor17, _cor16, [X3|[X2|[X1|_cor0]]])
	  %% Line 600
	  <[X1|[X2|Xs]],N,L,As>
	      when %% Line 601
		try
		    let <_cor18> =
			call 'erlang':'>='
			    (X1, 48)
		    in  let <_cor19> =
			    call 'erlang':'=<'
				(X1, 55)
			in  let <_cor20> =
				call 'erlang':'>='
				    (X2, 48)
			    in  let <_cor21> =
				    call 'erlang':'=<'
					(X2, 55)
				in  let <_cor22> =
					call 'erlang':'and'
					    (_cor20, _cor21)
				    in  let <_cor23> =
					    call 'erlang':'and'
						(_cor19, _cor22)
					in  call 'erlang':'and'
						(_cor18, _cor23)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor25> =
		  %% Line 602
		  call 'erlang':'-'
		      (_cor2, 2)
	      in  let <_cor24> =
		      %% Line 602
		      call 'erlang':'-'
			  (_cor1, 2)
		  in  %% Line 602
		      apply 'split_string_1'/4
			  (Xs, _cor25, _cor24, [X2|[X1|_cor0]])
	  %% Line 603
	  <[X|Xs],N,L,As> when 'true' ->
	      let <_cor27> =
		  %% Line 604
		  call 'erlang':'-'
		      (_cor2, 1)
	      in  let <_cor26> =
		      %% Line 604
		      call 'erlang':'-'
			  (_cor1, 1)
		  in  %% Line 604
		      apply 'split_string_1'/4
			  (Xs, _cor27, _cor26, [X|_cor0])
	  ( <_cor31,_cor30,_cor29,_cor28> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'split_string_2',4}}] )
	    -| ['compiler_generated'] )
	end
'lay_tuple'/2 =
    %% Line 606
    fun (_cor1,_cor0) ->
	let <_cor10> =
	    %% Line 607
	    call 'prettypr':'text'
		([123])
	in  let <_cor11> =
		%% Line 607
		call 'prettypr':'floating'
		    (_cor10)
	    in  let <_cor6> =
		    %% Line 608
		    call 'cerl':'tuple_es'
			(_cor1)
		in  let <_cor4> =
			%% Line 608
			call 'prettypr':'text'
			    ([44])
		    in  let <_cor5> =
			    %% Line 608
			    call 'prettypr':'floating'
				(_cor4)
			in  let <_cor7> =
				%% Line 608
				apply 'seq'/4
				    (_cor6, _cor5, _cor0, 'lay'/2)
			    in  let <_cor8> =
				    %% Line 608
				    call 'prettypr':'par'
					(_cor7)
				in  let <_cor2> =
					%% Line 610
					call 'prettypr':'text'
					    ([125])
				    in  let <_cor3> =
					    %% Line 610
					    call 'prettypr':'floating'
						(_cor2)
					in  let <_cor9> =
						%% Line 608
						call 'prettypr':'beside'
						    (_cor8, _cor3)
					    in  %% Line 607
						call 'prettypr':'beside'
						    (_cor11, _cor9)
'lay_map'/2 =
    %% Line 612
    fun (_cor1,_cor0) ->
	let <Arg> =
	    %% Line 613
	    call 'cerl':'map_arg'
		(_cor1)
	in  let <_51> =
		%% Line 614
		call 'cerl':'is_c_map_empty'
		    (Arg)
	    in  let <_cor11> =
		    %% Line 614
		    case _51 of
		      %% Line 615
		      <'true'> when 'true' ->
			  let <_cor3> =
			      call 'prettypr':'text'
				  ([125|[126]])
			  in  call 'prettypr':'floating'
				  (_cor3)
		      %% Line 616
		      <'false'> when 'true' ->
			  let <_cor8> =
			      %% Line 617
			      call 'prettypr':'text'
				  ([32|[124|[32]]])
			  in  let <_cor9> =
				  %% Line 617
				  call 'prettypr':'floating'
				      (_cor8)
			      in  let <_cor6> =
				      %% Line 618
				      apply 'lay'/2
					  (Arg, _cor0)
				  in  let <_cor4> =
					  %% Line 619
					  call 'prettypr':'text'
					      ([125|[126]])
				      in  let <_cor5> =
					      %% Line 619
					      call 'prettypr':'floating'
						  (_cor4)
					  in  let <_cor7> =
						  %% Line 618
						  call 'prettypr':'beside'
						      (_cor6, _cor5)
					      in  %% Line 617
						  call 'prettypr':'beside'
						      (_cor9, _cor7)
		      ( <_cor10> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_51})
			-| ['compiler_generated'] )
		    end
		in  let <_cor19> =
			%% Line 621
			call 'prettypr':'text'
			    ([126|[123]])
		    in  let <_cor20> =
			    %% Line 621
			    call 'prettypr':'floating'
				(_cor19)
			in  let <_cor15> =
				%% Line 622
				call 'cerl':'map_es'
				    (_cor1)
			    in  let <_cor13> =
				    %% Line 622
				    call 'prettypr':'text'
					([44])
				in  let <_cor14> =
					%% Line 622
					call 'prettypr':'floating'
					    (_cor13)
				    in  let <_cor16> =
					    %% Line 622
					    apply 'seq'/4
						(_cor15, _cor14, _cor0, 'lay'/2)
					in  let <_cor17> =
						%% Line 622
						call 'prettypr':'par'
						    (_cor16)
					    in  let <_cor18> =
						    %% Line 622
						    call 'prettypr':'beside'
							(_cor17, _cor11)
						in  %% Line 621
						    call 'prettypr':'beside'
							(_cor20, _cor18)
'lay_map_pair'/2 =
    %% Line 625
    fun (_cor1,_cor0) ->
	let <K> =
	    %% Line 626
	    call 'cerl':'map_pair_key'
		(_cor1)
	in  let <V> =
		%% Line 627
		call 'cerl':'map_pair_val'
		    (_cor1)
	    in  let <_cor4> =
		    %% Line 628
		    call 'cerl':'map_pair_op'
			(_cor1)
		in  let <_2302> =
			%% Line 628
			call 'cerl':'concrete'
			    (_cor4)
		    in  let <_cor6> =
			    %% Line 628
			    case _2302 of
			      %% Line 629
			      <'assoc'> when 'true' ->
				  [58|[58|[60]]]
			      %% Line 630
			      <'exact'> when 'true' ->
				  [126|[60]]
			      ( <_cor5> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_2302})
				-| ['compiler_generated'] )
			    end
			in  let <_cor17> =
				%% Line 632
				call 'prettypr':'text'
				    (_cor6)
			    in  let <_cor18> =
				    %% Line 632
				    call 'prettypr':'floating'
					(_cor17)
				in  let <_cor15> =
					%% Line 633
					apply 'lay'/2
					    (K, _cor0)
				    in  let <_cor12> =
					    %% Line 633
					    call 'prettypr':'text'
						([44])
					in  let <_cor13> =
						%% Line 633
						call 'prettypr':'floating'
						    (_cor12)
					    in  let <_cor10> =
						    %% Line 633
						    apply 'lay'/2
							(V, _cor0)
						in  let <_cor8> =
							%% Line 634
							call 'prettypr':'text'
							    ([62])
						    in  let <_cor9> =
							    %% Line 634
							    call 'prettypr':'floating'
								(_cor8)
							in  let <_cor11> =
								%% Line 633
								call 'prettypr':'beside'
								    (_cor10, _cor9)
							    in  let <_cor14> =
								    %% Line 633
								    call 'prettypr':'beside'
									(_cor13, _cor11)
								in  let <_cor16> =
									%% Line 633
									call 'prettypr':'beside'
									    (_cor15, _cor14)
								    in  %% Line 632
									call 'prettypr':'beside'
									    (_cor18, _cor16)
'lay_let'/2 =
    %% Line 636
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 637
	    call 'cerl':'let_vars'
		(_cor1)
	in  let <V> =
		%% Line 637
		apply 'lay_value_list'/2
		    (_cor2, _cor0)
	    in  let <_cor11> =
		    %% Line 638
		    call 'prettypr':'text'
			([108|[101|[116]]])
		in  let <_cor8> =
			%% Line 639
			call 'prettypr':'text'
			    ([32|[61]])
		    in  let <_cor9> =
			    %% Line 639
			    call 'prettypr':'floating'
				(_cor8)
			in  let <_cor10> =
				%% Line 639
				call 'prettypr':'beside'
				    (V, _cor9)
			    in  %% Line 640
				( case _cor0 of
				    ( <( {'ctxt',_cor26,_cor27,_rec5,_cor28,_cor29,_cor30,_cor31,_cor32}
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_cor12> =
					      call 'prettypr':'follow'
						  (_cor11, _cor10, _rec5)
					  in  let <_cor13> =
						  %% Line 641
						  call 'cerl':'let_arg'
						      (_cor1)
					      in  let <_cor14> =
						      %% Line 641
						      apply 'lay'/2
							  (_cor13, _cor0)
						  in  let <D1> =
							  call 'prettypr':'par'
							      ([_cor12|%% Line 641
								       [_cor14|[]]], _cor27)
						      in  let <B> =
							      %% Line 643
							      call 'cerl':'let_body'
								  (_cor1)
							  in  let <D2> =
								  %% Line 644
								  apply 'lay'/2
								      (B, _cor0)
							      in  let <_4251> =
								      %% Line 645
								      call 'cerl':'is_c_let'
									  (B)
								  in  %% Line 645
								      case _4251 of
									%% Line 646
									<'true'> when 'true' ->
									    let <_cor18> =
										%% Line 647
										call 'prettypr':'text'
										    ([32|[105|[110]]])
									    in  let <_cor19> =
										    %% Line 647
										    call 'prettypr':'floating'
											(_cor18)
										in  let <_cor20> =
											%% Line 647
											call 'prettypr':'beside'
											    (D1, _cor19)
										    in  %% Line 647
											call 'prettypr':'sep'
											    ([_cor20|[D2|[]]])
									%% Line 648
									<'false'> when 'true' ->
									    let <_cor21> =
										%% Line 649
										call 'prettypr':'text'
										    ([105|[110|[32]]])
									    in  let <_cor22> =
										    %% Line 649
										    call 'prettypr':'beside'
											(_cor21, D2)
										in  %% Line 649
										    call 'prettypr':'sep'
											([D1|[_cor22|[]]])
									( <_cor23> when 'true' ->
									      primop 'match_fail'
										  ({'case_clause',_4251})
									  -| ['compiler_generated'] )
								      end
				      -| ['compiler_generated'] )
				    ( <_cor33> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','ctxt'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
'lay_seq'/2 =
    %% Line 652
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 653
	    call 'prettypr':'text'
		([100|[111|[32]]])
	in  let <_cor2> =
		%% Line 653
		call 'cerl':'seq_arg'
		    (_cor1)
	    in  let <_cor3> =
		    %% Line 653
		    apply 'lay'/2
			(_cor2, _cor0)
		in  let <D1> =
			%% Line 653
			call 'prettypr':'beside'
			    (_cor4, _cor3)
		    in  let <B> =
			    %% Line 654
			    call 'cerl':'seq_body'
				(_cor1)
			in  let <D2> =
				%% Line 655
				apply 'lay'/2
				    (B, _cor0)
			    in  let <_2626> =
				    %% Line 656
				    call 'cerl':'is_c_seq'
					(B)
				in  %% Line 656
				    case _2626 of
				      %% Line 657
				      <'true'> when 'true' ->
					  %% Line 658
					  call 'prettypr':'sep'
					      ([D1|[D2|[]]])
				      %% Line 659
				      <'false'> when 'true' ->
					  let <_cor8> =
					      %% Line 660
					      call 'prettypr':'nest'
						  (3, D2)
					  in  %% Line 660
					      call 'prettypr':'sep'
						  ([D1|[_cor8|[]]])
				      ( <_cor9> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_2626})
					-| ['compiler_generated'] )
				    end
'lay_apply'/2 =
    %% Line 663
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 664
	    call 'cerl':'apply_args'
		(_cor1)
	in  let <_cor2> =
		%% Line 664
		call 'prettypr':'text'
		    ([44])
	    in  let <_cor3> =
		    %% Line 664
		    call 'prettypr':'floating'
			(_cor2)
		in  let <As> =
			%% Line 664
			apply 'seq'/4
			    (_cor4, _cor3, _cor0, 'lay'/2)
		    in  let <_cor14> =
			    %% Line 666
			    call 'prettypr':'text'
				([97|[112|[112|[108|[121]]]]])
			in  let <_cor12> =
				%% Line 666
				call 'cerl':'apply_op'
				    (_cor1)
			    in  let <_cor13> =
				    %% Line 666
				    apply 'lay'/2
					(_cor12, _cor0)
				in  let <_cor15> =
					%% Line 666
					call 'prettypr':'follow'
					    (_cor14, _cor13)
				    in  let <_cor10> =
					    %% Line 667
					    call 'prettypr':'text'
						([40])
					in  let <_cor8> =
						%% Line 668
						call 'prettypr':'par'
						    (As)
					    in  let <_cor6> =
						    %% Line 668
						    call 'prettypr':'text'
							([41])
						in  let <_cor7> =
							%% Line 668
							call 'prettypr':'floating'
							    (_cor6)
						    in  let <_cor9> =
							    %% Line 668
							    call 'prettypr':'beside'
								(_cor8, _cor7)
							in  let <_cor11> =
								%% Line 667
								call 'prettypr':'beside'
								    (_cor10, _cor9)
							    in  %% Line 666
								call 'prettypr':'beside'
								    (_cor15, _cor11)
'lay_call'/2 =
    %% Line 670
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 671
	    call 'cerl':'call_args'
		(_cor1)
	in  let <_cor2> =
		%% Line 671
		call 'prettypr':'text'
		    ([44])
	    in  let <_cor3> =
		    %% Line 671
		    call 'prettypr':'floating'
			(_cor2)
		in  let <As> =
			%% Line 671
			apply 'seq'/4
			    (_cor4, _cor3, _cor0, 'lay'/2)
		    in  let <_cor22> =
			    %% Line 673
			    call 'prettypr':'text'
				([99|[97|[108|[108]]]])
			in  let <_cor18> =
				%% Line 674
				call 'cerl':'call_module'
				    (_cor1)
			    in  let <_cor19> =
				    %% Line 674
				    apply 'lay'/2
					(_cor18, _cor0)
				in  let <_cor16> =
					%% Line 675
					call 'prettypr':'text'
					    ([58])
				    in  let <_cor17> =
					    %% Line 675
					    call 'prettypr':'floating'
						(_cor16)
					in  let <_cor20> =
						%% Line 674
						call 'prettypr':'beside'
						    (_cor19, _cor17)
					    in  let <_cor14> =
						    %% Line 676
						    call 'cerl':'call_name'
							(_cor1)
						in  let <_cor15> =
							%% Line 676
							apply 'lay'/2
							    (_cor14, _cor0)
						    in  let <_cor21> =
							    %% Line 674
							    call 'prettypr':'beside'
								(_cor20, _cor15)
							in  %% Line 677
							    ( case _cor0 of
								( <( {'ctxt',_cor26,_cor27,_rec7,_cor28,_cor29,_cor30,_cor31,_cor32}
								     -| ['compiler_generated'] )> when 'true' ->
								      let <_cor23> =
									  call 'prettypr':'follow'
									      (_cor22, _cor21, _rec7)
								      in  let <_cor10> =
									      %% Line 678
									      call 'prettypr':'text'
										  ([40])
									  in  let <_cor8> =
										  %% Line 678
										  call 'prettypr':'par'
										      (As)
									      in  let <_cor6> =
										      %% Line 679
										      call 'prettypr':'text'
											  ([41])
										  in  let <_cor7> =
											  %% Line 679
											  call 'prettypr':'floating'
											      (_cor6)
										      in  let <_cor9> =
											      %% Line 678
											      call 'prettypr':'beside'
												  (_cor8, _cor7)
											  in  let <_cor11> =
												  %% Line 678
												  call 'prettypr':'beside'
												      (_cor10, _cor9)
											      in  call 'prettypr':'beside'
												      (_cor23, _cor11)
								  -| ['compiler_generated'] )
								( <_cor33> when 'true' ->
								      ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'error'
													     -| ['compiler_generated'] )
									    (( {'badrecord','ctxt'}
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
							      end
							      -| ['compiler_generated'] )
'lay_primop'/2 =
    %% Line 681
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 682
	    call 'cerl':'primop_args'
		(_cor1)
	in  let <_cor2> =
		%% Line 682
		call 'prettypr':'text'
		    ([44])
	    in  let <_cor3> =
		    %% Line 682
		    call 'prettypr':'floating'
			(_cor2)
		in  let <As> =
			%% Line 682
			apply 'seq'/4
			    (_cor4, _cor3, _cor0, 'lay'/2)
		    in  let <_cor16> =
			    %% Line 684
			    call 'prettypr':'text'
				([112|[114|[105|[109|[111|[112]]]]]])
			in  let <_cor14> =
				%% Line 685
				call 'cerl':'primop_name'
				    (_cor1)
			    in  let <_cor15> =
				    %% Line 685
				    apply 'lay'/2
					(_cor14, _cor0)
				in  %% Line 686
				    ( case _cor0 of
					( <( {'ctxt',_cor20,_cor21,_rec8,_cor22,_cor23,_cor24,_cor25,_cor26}
					     -| ['compiler_generated'] )> when 'true' ->
					      let <_cor17> =
						  call 'prettypr':'follow'
						      (_cor16, _cor15, _rec8)
					      in  let <_cor10> =
						      %% Line 687
						      call 'prettypr':'text'
							  ([40])
						  in  let <_cor8> =
							  %% Line 687
							  call 'prettypr':'par'
							      (As)
						      in  let <_cor6> =
							      %% Line 688
							      call 'prettypr':'text'
								  ([41])
							  in  let <_cor7> =
								  %% Line 688
								  call 'prettypr':'floating'
								      (_cor6)
							      in  let <_cor9> =
								      %% Line 687
								      call 'prettypr':'beside'
									  (_cor8, _cor7)
								  in  let <_cor11> =
									  %% Line 687
									  call 'prettypr':'beside'
									      (_cor10, _cor9)
								      in  call 'prettypr':'beside'
									      (_cor17, _cor11)
					  -| ['compiler_generated'] )
					( <_cor27> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','ctxt'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
'lay_case'/2 =
    %% Line 690
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 691
	    call 'cerl':'case_clauses'
		(_cor1)
	in  let <Cs> =
		%% Line 691
		apply 'seq'/4
		    (_cor2, 'none', _cor0, 'lay'/2)
	    in  let <_cor10> =
		    %% Line 692
		    call 'prettypr':'text'
			([99|[97|[115|[101]]]])
		in  let <_cor8> =
			%% Line 693
			call 'cerl':'case_arg'
			    (_cor1)
		    in  let <_cor9> =
			    %% Line 693
			    apply 'lay'/2
				(_cor8, _cor0)
			in  %% Line 694
			    ( case _cor0 of
				( <( {'ctxt',_cor21,_cor22,_rec9,_cor23,_cor24,_cor25,_cor26,_cor27}
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_cor11> =
					  call 'prettypr':'follow'
					      (_cor10, _cor9, _rec9)
				      in  let <_cor12> =
					      %% Line 695
					      call 'prettypr':'text'
						  ([111|[102]])
					  in  let <_cor13> =
						  call 'prettypr':'par'
						      ([_cor11|%% Line 695
							       [_cor12|[]]], _rec9)
					      in  let <_cor14> =
						      %% Line 698
						      apply 'vertical'/1
							  (Cs)
						  in  let <_cor17> =
							  %% Line 697
							  call 'prettypr':'nest'
							      (_rec9, _cor14)
						      in  let <_cor18> =
							      %% Line 699
							      call 'prettypr':'text'
								  ([101|[110|[100]]])
							  in  call 'prettypr':'sep'
								  ([_cor13|%% Line 697
									   [_cor17|%% Line 699
										   [_cor18|[]]]])
				  -| ['compiler_generated'] )
				( <_cor28> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','ctxt'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
'lay_clause'/2 =
    %% Line 701
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 702
	    call 'cerl':'clause_pats'
		(_cor1)
	in  let <P> =
		%% Line 702
		apply 'lay_value_list'/2
		    (_cor2, _cor0)
	    in  let <_cor4> =
		    %% Line 703
		    call 'cerl':'clause_guard'
			(_cor1)
		in  let <G> =
			%% Line 703
			apply 'lay'/2
			    (_cor4, _cor0)
		    in  let <_cor12> =
			    %% Line 704
			    call 'prettypr':'text'
				([119|[104|[101|[110]]]])
			in  %% Line 705
			    ( case _cor0 of
				( <( {'ctxt',_cor22,_cor23,_rec12,_cor24,_cor25,_cor26,_cor27,_cor28}
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_cor13> =
					  call 'prettypr':'follow'
					      (_cor12, G, _rec12)
				      in  let <_cor8> =
					      %% Line 706
					      call 'prettypr':'text'
						  ([45|[62]])
					  in  let <_cor9> =
						  %% Line 706
						  call 'prettypr':'floating'
						      (_cor8)
					      in  let <_cor14> =
						      call 'prettypr':'follow'
							  (_cor13, _cor9)
						  in  let <H> =
							  call 'prettypr':'par'
							      ([P|[_cor14|%% Line 706
									  []]], _rec12)
						      in  let <_cor18> =
							      %% Line 708
							      call 'cerl':'clause_body'
								  (_cor1)
							  in  let <_cor19> =
								  %% Line 708
								  apply 'lay'/2
								      (_cor18, _cor0)
							      in  %% Line 708
								  call 'prettypr':'par'
								      ([H|[_cor19|[]]], _cor23)
				  -| ['compiler_generated'] )
				( <_cor29> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','ctxt'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
'lay_alias'/2 =
    %% Line 711
    fun (_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 712
	    call 'cerl':'alias_var'
		(_cor1)
	in  let <_cor8> =
		%% Line 712
		apply 'lay'/2
		    (_cor7, _cor0)
	    in  let <_cor6> =
		    %% Line 713
		    call 'prettypr':'text'
			([32|[61]])
		in  let <_cor9> =
			%% Line 712
			call 'prettypr':'beside'
			    (_cor8, _cor6)
		    in  let <_cor4> =
			    %% Line 714
			    call 'cerl':'alias_pat'
				(_cor1)
			in  let <_cor5> =
				%% Line 714
				apply 'lay'/2
				    (_cor4, _cor0)
			    in  %% Line 715
				( case _cor0 of
				    ( <( {'ctxt',_cor12,_rec15,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18}
					 -| ['compiler_generated'] )> when 'true' ->
					  call 'prettypr':'follow'
					      (_cor9, _cor5, _rec15)
				      -| ['compiler_generated'] )
				    ( <_cor19> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','ctxt'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
'lay_fun'/2 =
    %% Line 717
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 718
	    call 'cerl':'fun_vars'
		(_cor1)
	in  let <_cor2> =
		%% Line 718
		call 'prettypr':'text'
		    ([44])
	    in  let <_cor3> =
		    %% Line 718
		    call 'prettypr':'floating'
			(_cor2)
		in  let <Vs> =
			%% Line 718
			apply 'seq'/4
			    (_cor4, _cor3, _cor0, 'lay'/2)
		    in  let <_cor16> =
			    %% Line 720
			    call 'prettypr':'text'
				([102|[117|[110]]])
			in  let <_cor14> =
				%% Line 721
				call 'prettypr':'text'
				    ([40])
			    in  let <_cor12> =
				    %% Line 722
				    call 'prettypr':'par'
					(Vs)
				in  let <_cor10> =
					%% Line 723
					call 'prettypr':'text'
					    ([41|[32|[45|[62]]]])
				    in  let <_cor11> =
					    %% Line 723
					    call 'prettypr':'floating'
						(_cor10)
					in  let <_cor13> =
						%% Line 722
						call 'prettypr':'beside'
						    (_cor12, _cor11)
					    in  let <_cor15> =
						    %% Line 721
						    call 'prettypr':'beside'
							(_cor14, _cor13)
						in  %% Line 724
						    ( case _cor0 of
							( <( {'ctxt',_cor22,_cor23,_rec16,_cor24,_cor25,_cor26,_cor27,_cor28}
							     -| ['compiler_generated'] )> when 'true' ->
							      let <_cor17> =
								  call 'prettypr':'follow'
								      (_cor16, _cor15, _rec16)
							      in  let <_cor18> =
								      %% Line 725
								      call 'cerl':'fun_body'
									  (_cor1)
								  in  let <_cor19> =
									  %% Line 725
									  apply 'lay'/2
									      (_cor18, _cor0)
								      in  call 'prettypr':'par'
									      ([_cor17|%% Line 725
										       [_cor19|[]]], _cor23)
							  -| ['compiler_generated'] )
							( <_cor29> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','ctxt'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
'lay_receive'/2 =
    %% Line 728
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 729
	    call 'cerl':'receive_clauses'
		(_cor1)
	in  let <Cs> =
		%% Line 729
		apply 'seq'/4
		    (_cor2, 'none', _cor0, 'lay'/2)
	    in  let <_cor4> =
		    %% Line 730
		    call 'prettypr':'text'
			([114|[101|[99|[101|[105|[118|[101]]]]]]])
		in  %% Line 731
		    ( case _cor0 of
			( <( {'ctxt',_cor26,_cor27,_rec18,_cor28,_cor29,_cor30,_cor31,_cor32}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <_cor5> =
				  apply 'vertical'/1
				      (Cs)
			      in  let <_cor8> =
				      call 'prettypr':'nest'
					  (_rec18, _cor5)
				  in  let <_cor16> =
					  %% Line 732
					  call 'prettypr':'text'
					      ([97|[102|[116|[101|[114]]]]])
				      in  let <_cor13> =
					      %% Line 733
					      call 'cerl':'receive_timeout'
						  (_cor1)
					  in  let <_cor14> =
						  %% Line 733
						  apply 'lay'/2
						      (_cor13, _cor0)
					      in  let <_cor11> =
						      %% Line 734
						      call 'prettypr':'text'
							  ([32|[45|[62]]])
						  in  let <_cor12> =
							  %% Line 734
							  call 'prettypr':'floating'
							      (_cor11)
						      in  let <_cor15> =
							      %% Line 733
							      call 'prettypr':'beside'
								  (_cor14, _cor12)
							  in  let <_cor17> =
								  %% Line 732
								  call 'prettypr':'follow'
								      (_cor16, _cor15, _rec18)
							      in  let <_cor18> =
								      %% Line 737
								      call 'cerl':'receive_action'
									  (_cor1)
								  in  let <_cor19> =
									  %% Line 737
									  apply 'lay'/2
									      (_cor18, _cor0)
								      in  let <_cor22> =
									      %% Line 736
									      call 'prettypr':'nest'
										  (_rec18, _cor19)
									  in  let <_cor23> =
										  %% Line 732
										  call 'prettypr':'sep'
										      ([_cor17|%% Line 736
											       [_cor22|%% Line 737
												       []]])
									      in  call 'prettypr':'sep'
										      ([_cor4|[_cor8|%% Line 732
												     [_cor23|%% Line 737
													     []]]])
			  -| ['compiler_generated'] )
			( <_cor33> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','ctxt'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
'lay_try'/2 =
    %% Line 739
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 740
	    call 'cerl':'try_vars'
		(_cor1)
	in  let <Vs> =
		%% Line 740
		apply 'lay_value_list'/2
		    (_cor2, _cor0)
	    in  let <_cor4> =
		    %% Line 741
		    call 'cerl':'try_evars'
			(_cor1)
		in  let <Evs> =
			%% Line 741
			apply 'lay_value_list'/2
			    (_cor4, _cor0)
		    in  let <_cor10> =
			    %% Line 742
			    call 'prettypr':'text'
				([116|[114|[121]]])
			in  let <_cor8> =
				%% Line 743
				call 'cerl':'try_arg'
				    (_cor1)
			    in  let <_cor9> =
				    %% Line 743
				    apply 'lay'/2
					(_cor8, _cor0)
				in  %% Line 744
				    ( case _cor0 of
					( <( {'ctxt',_cor34,_rec21,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40}
					     -| ['compiler_generated'] )> when 'true' ->
					      let <_cor11> =
						  call 'prettypr':'follow'
						      (_cor10, _cor9, _rec21)
					      in  let <_cor18> =
						      %% Line 745
						      call 'prettypr':'text'
							  ([111|[102|[32]]])
						  in  let <_cor19> =
							  %% Line 745
							  call 'prettypr':'beside'
							      (_cor18, Vs)
						      in  let <_cor16> =
							      %% Line 746
							      call 'prettypr':'text'
								  ([32|[45|[62]]])
							  in  let <_cor17> =
								  %% Line 746
								  call 'prettypr':'floating'
								      (_cor16)
							      in  let <_cor20> =
								      %% Line 745
								      call 'prettypr':'beside'
									  (_cor19, _cor17)
								  in  let <_cor14> =
									  %% Line 747
									  call 'cerl':'try_body'
									      (_cor1)
								      in  let <_cor15> =
									      %% Line 747
									      apply 'lay'/2
										  (_cor14, _cor0)
									  in  let <_cor21> =
										  %% Line 745
										  call 'prettypr':'follow'
										      (_cor20, _cor15, _rec21)
									      in  let <_cor28> =
										      %% Line 749
										      call 'prettypr':'text'
											  ([99|[97|[116|[99|[104|[32]]]]]])
										  in  let <_cor29> =
											  %% Line 749
											  call 'prettypr':'beside'
											      (_cor28, Evs)
										      in  let <_cor26> =
											      %% Line 750
											      call 'prettypr':'text'
												  ([32|[45|[62]]])
											  in  let <_cor27> =
												  %% Line 750
												  call 'prettypr':'floating'
												      (_cor26)
											      in  let <_cor30> =
												      %% Line 749
												      call 'prettypr':'beside'
													  (_cor29, _cor27)
												  in  let <_cor24> =
													  %% Line 751
													  call 'cerl':'try_handler'
													      (_cor1)
												      in  let <_cor25> =
													      %% Line 751
													      apply 'lay'/2
														  (_cor24, _cor0)
													  in  let <_cor31> =
														  %% Line 749
														  call 'prettypr':'follow'
														      (_cor30, _cor25, _rec21)
													      in  call 'prettypr':'sep'
														      ([_cor11|%% Line 745
															       [_cor21|%% Line 749
																       [_cor31|%% Line 752
																	       []]]])
					  -| ['compiler_generated'] )
					( <_cor41> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','ctxt'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
'lay_catch'/2 =
    %% Line 754
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 755
	    call 'prettypr':'text'
		([99|[97|[116|[99|[104]]]]])
	in  let <_cor4> =
		%% Line 756
		call 'cerl':'catch_body'
		    (_cor1)
	    in  let <_cor5> =
		    %% Line 756
		    apply 'lay'/2
			(_cor4, _cor0)
		in  %% Line 757
		    ( case _cor0 of
			( <( {'ctxt',_cor9,_cor10,_rec24,_cor11,_cor12,_cor13,_cor14,_cor15}
			     -| ['compiler_generated'] )> when 'true' ->
			      call 'prettypr':'follow'
				  (_cor6, _cor5, _rec24)
			  -| ['compiler_generated'] )
			( <_cor16> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','ctxt'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
'lay_letrec'/2 =
    %% Line 759
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 760
	    call 'cerl':'letrec_defs'
		(_cor1)
	in  let <Es> =
		%% Line 760
		apply 'seq'/4
		    (_cor2, 'none', _cor0, 'lay_fdef'/2)
	    in  let <_cor4> =
		    %% Line 761
		    call 'prettypr':'text'
			([108|[101|[116|[114|[101|[99]]]]]])
		in  %% Line 762
		    ( case _cor0 of
			( <( {'ctxt',_cor15,_cor16,_rec25,_cor17,_cor18,_cor19,_cor20,_cor21}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <_cor5> =
				  apply 'vertical'/1
				      (Es)
			      in  let <_cor8> =
				      call 'prettypr':'nest'
					  (_rec25, _cor5)
				  in  let <_cor11> =
					  %% Line 763
					  call 'prettypr':'text'
					      ([105|[110|[32]]])
				      in  let <_cor9> =
					      %% Line 763
					      call 'cerl':'letrec_body'
						  (_cor1)
					  in  let <_cor10> =
						  %% Line 763
						  apply 'lay'/2
						      (_cor9, _cor0)
					      in  let <_cor12> =
						      %% Line 763
						      call 'prettypr':'beside'
							  (_cor11, _cor10)
						  in  call 'prettypr':'sep'
							  ([_cor4|[_cor8|%% Line 763
									 [_cor12|[]]]])
			  -| ['compiler_generated'] )
			( <_cor22> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','ctxt'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
'lay_module'/2 =
    %% Line 765
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 768
	    call 'cerl':'module_exports'
		(_cor1)
	in  let <_cor2> =
		%% Line 768
		call 'prettypr':'text'
		    ([44])
	    in  let <_cor3> =
		    %% Line 768
		    call 'prettypr':'floating'
			(_cor2)
		in  let <Xs> =
			%% Line 768
			apply 'seq'/4
			    (_cor4, _cor3, _cor0, 'lay_noann'/2)
		    in  let <_cor8> =
			    %% Line 770
			    call 'cerl':'module_attrs'
				(_cor1)
			in  let <_cor6> =
				%% Line 770
				call 'prettypr':'text'
				    ([44])
			    in  let <_cor7> =
				    %% Line 770
				    call 'prettypr':'floating'
					(_cor6)
				in  let <As> =
					%% Line 770
					apply 'seq'/4
					    (_cor8, _cor7, _cor0, 'lay_attrdef'/2)
				    in  let <_cor10> =
					    %% Line 772
					    call 'cerl':'module_defs'
						(_cor1)
					in  let <Es> =
						%% Line 772
						apply 'seq'/4
						    (_cor10, 'none', _cor0, 'lay_fdef'/2)
					    in  let <_cor23> =
						    %% Line 773
						    call 'prettypr':'text'
							([109|[111|[100|[117|[108|[101]]]]]])
						in  let <_cor20> =
							%% Line 774
							call 'cerl':'module_name'
							    (_cor1)
						    in  let <_cor21> =
							    %% Line 774
							    apply 'lay_noann'/2
								(_cor20, _cor0)
							in  let <_cor17> =
								%% Line 775
								call 'prettypr':'text'
								    ([91])
							    in  let <_cor16> =
								    %% Line 775
								    call 'prettypr':'par'
									(Xs)
								in  let <_cor18> =
									%% Line 775
									call 'prettypr':'beside'
									    (_cor17, _cor16)
								    in  let <_cor14> =
									    %% Line 776
									    call 'prettypr':'text'
										([93])
									in  let <_cor15> =
										%% Line 776
										call 'prettypr':'floating'
										    (_cor14)
									    in  let <_cor19> =
										    %% Line 775
										    call 'prettypr':'beside'
											(_cor18, _cor15)
										in  let <_cor22> =
											%% Line 774
											call 'prettypr':'follow'
											    (_cor21, _cor19)
										    in  %% Line 777
											( case _cor0 of
											    ( <( {'ctxt',_cor45,_cor46,_rec26,_cor47,_cor48,_cor49,_cor50,_cor51}
												 -| ['compiler_generated'] )> when 'true' ->
												  let <_cor24> =
												      call 'prettypr':'follow'
													  (_cor23, _cor22, _rec26)
												  in  let <_cor33> =
													  %% Line 779
													  call 'prettypr':'text'
													      ([97|[116|[116|[114|[105|[98|[117|[116|[101|[115]]]]]]]]]])
												      in  let <_cor30> =
													      %% Line 780
													      call 'prettypr':'text'
														  ([91])
													  in  let <_cor29> =
														  %% Line 780
														  call 'prettypr':'par'
														      (As)
													      in  let <_cor31> =
														      %% Line 780
														      call 'prettypr':'beside'
															  (_cor30, _cor29)
														  in  let <_cor27> =
															  %% Line 781
															  call 'prettypr':'text'
															      ([93])
														      in  let <_cor28> =
															      %% Line 781
															      call 'prettypr':'floating'
																  (_cor27)
															  in  let <_cor32> =
																  %% Line 780
																  call 'prettypr':'beside'
																      (_cor31, _cor28)
															      in  let <_cor34> =
																      %% Line 779
																      call 'prettypr':'follow'
																	  (_cor33, _cor32, _rec26)
																  in  let <_cor37> =
																	  %% Line 778
																	  call 'prettypr':'nest'
																	      (_rec26, _cor34)
																      in  let <_cor38> =
																	      %% Line 783
																	      apply 'vertical'/1
																		  (Es)
																	  in  let <_cor41> =
																		  %% Line 783
																		  call 'prettypr':'nest'
																		      (_rec26, _cor38)
																	      in  let <_cor42> =
																		      %% Line 784
																		      call 'prettypr':'text'
																			  ([101|[110|[100]]])
																		  in  call 'prettypr':'sep'
																			  ([_cor24|%% Line 778
																				   [_cor37|%% Line 783
																					   [_cor41|%% Line 784
																						   [_cor42|[]]]]])
											      -| ['compiler_generated'] )
											    ( <_cor52> when 'true' ->
												  ( call ( 'erlang'
													   -| ['compiler_generated'] ):( 'error'
																	 -| ['compiler_generated'] )
													(( {'badrecord','ctxt'}
													   -| ['compiler_generated'] ))
												    -| ['compiler_generated'] )
											      -| ['compiler_generated'] )
											  end
											  -| ['compiler_generated'] )
'lay_binary'/2 =
    %% Line 786
    fun (_cor1,_cor0) ->
	let <_cor10> =
	    %% Line 787
	    call 'prettypr':'text'
		([35|[123]])
	in  let <_cor11> =
		%% Line 787
		call 'prettypr':'floating'
		    (_cor10)
	    in  let <_cor6> =
		    %% Line 788
		    call 'cerl':'binary_segments'
			(_cor1)
		in  let <_cor4> =
			%% Line 788
			call 'prettypr':'text'
			    ([44])
		    in  let <_cor5> =
			    %% Line 788
			    call 'prettypr':'floating'
				(_cor4)
			in  let <_cor7> =
				%% Line 788
				apply 'seq'/4
				    (_cor6, _cor5, _cor0, 'lay_bitstr'/2)
			    in  let <_cor8> =
				    %% Line 788
				    call 'prettypr':'sep'
					(_cor7)
				in  let <_cor2> =
					%% Line 790
					call 'prettypr':'text'
					    ([125|[35]])
				    in  let <_cor3> =
					    %% Line 790
					    call 'prettypr':'floating'
						(_cor2)
					in  let <_cor9> =
						%% Line 788
						call 'prettypr':'beside'
						    (_cor8, _cor3)
					    in  %% Line 787
						call 'prettypr':'beside'
						    (_cor11, _cor9)
'lay_bitstr'/2 =
    %% Line 792
    fun (_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 793
	    call 'prettypr':'text'
		([35|[60]])
	in  let <_cor8> =
		%% Line 793
		call 'prettypr':'floating'
		    (_cor7)
	    in  let <_cor4> =
		    %% Line 794
		    call 'cerl':'bitstr_val'
			(_cor1)
		in  let <_cor5> =
			%% Line 794
			apply 'lay'/2
			    (_cor4, _cor0)
		    in  let <_cor2> =
			    %% Line 795
			    call 'prettypr':'text'
				([62])
			in  let <_cor3> =
				%% Line 795
				call 'prettypr':'floating'
				    (_cor2)
			    in  let <_cor6> =
				    %% Line 794
				    call 'prettypr':'beside'
					(_cor5, _cor3)
				in  let <Head> =
					%% Line 793
					call 'prettypr':'beside'
					    (_cor8, _cor6)
				    in  let <_cor10> =
					    %% Line 796
					    call 'cerl':'bitstr_size'
						(_cor1)
					in  let <_cor11> =
						%% Line 797
						call 'cerl':'bitstr_unit'
						    (_cor1)
					    in  let <_cor12> =
						    %% Line 798
						    call 'cerl':'bitstr_type'
							(_cor1)
						in  let <_cor13> =
							%% Line 799
							call 'cerl':'bitstr_flags'
							    (_cor1)
						    in  let <As> =
							    %% Line 796
							    [_cor10|%% Line 797
								    [_cor11|%% Line 798
									    [_cor12|%% Line 799
										    [_cor13|[]]]]]
							in  let <_cor22> =
								%% Line 800
								call 'prettypr':'text'
								    ([40])
							    in  let <_cor23> =
								    %% Line 800
								    call 'prettypr':'floating'
									(_cor22)
								in  let <_cor17> =
									%% Line 801
									call 'prettypr':'text'
									    ([44])
								    in  let <_cor18> =
									    %% Line 801
									    call 'prettypr':'floating'
										(_cor17)
									in  let <_cor19> =
										%% Line 801
										apply 'seq'/4
										    (As, _cor18, _cor0, 'lay'/2)
									    in  let <_cor20> =
										    %% Line 801
										    call 'prettypr':'sep'
											(_cor19)
										in  let <_cor15> =
											%% Line 803
											call 'prettypr':'text'
											    ([41])
										    in  let <_cor16> =
											    %% Line 803
											    call 'prettypr':'floating'
												(_cor15)
											in  let <_cor21> =
												%% Line 801
												call 'prettypr':'beside'
												    (_cor20, _cor16)
											    in  let <_cor24> =
												    %% Line 800
												    call 'prettypr':'beside'
													(_cor23, _cor21)
												in  %% Line 800
												    call 'prettypr':'beside'
													(Head, _cor24)
'lay_value_list'/2 =
    %% Line 808
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[E|[]],Ctxt> when 'true' ->
	      %% Line 809
	      apply 'lay'/2
		  (E, _cor0)
	  %% Line 810
	  <Es,Ctxt> when 'true' ->
	      let <_cor9> =
		  %% Line 811
		  call 'prettypr':'text'
		      ([60])
	      in  let <_cor10> =
		      %% Line 811
		      call 'prettypr':'floating'
			  (_cor9)
		  in  let <_cor4> =
			  %% Line 812
			  call 'prettypr':'text'
			      ([44])
		      in  let <_cor5> =
			      %% Line 812
			      call 'prettypr':'floating'
				  (_cor4)
			  in  let <_cor6> =
				  %% Line 812
				  apply 'seq'/4
				      (_cor1, _cor5, _cor0, 'lay'/2)
			      in  let <_cor7> =
				      %% Line 812
				      call 'prettypr':'par'
					  (_cor6)
				  in  let <_cor2> =
					  %% Line 814
					  call 'prettypr':'text'
					      ([62])
				      in  let <_cor3> =
					      %% Line 814
					      call 'prettypr':'floating'
						  (_cor2)
					  in  let <_cor8> =
						  %% Line 812
						  call 'prettypr':'beside'
						      (_cor7, _cor3)
					      in  %% Line 811
						  call 'prettypr':'beside'
						      (_cor10, _cor8)
	end
'lay_noann'/2 =
    %% Line 816
    fun (_cor1,_cor0) ->
	%% Line 817
	case _cor0 of
	  <{'ctxt',_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14}> when 'true' ->
	      let <_cor4> =
		  call 'erlang':'setelement'
		      (6, _cor0, 'true')
	      in  apply 'lay'/2
		      (_cor1, _cor4)
	  ( <_cor15> when 'true' ->
		( call ( 'erlang'
			 -| ['compiler_generated'] ):( 'error'
						       -| ['compiler_generated'] )
		      (( {'badrecord','ctxt'}
			 -| ['compiler_generated'] ))
		  -| ['compiler_generated'] )
	    -| ['compiler_generated'] )
	end
'lay_concrete'/2 =
    %% Line 819
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 820
	    call 'cerl':'abstract'
		(_cor1)
	in  %% Line 820
	    apply 'lay'/2
		(_cor2, _cor0)
'lay_attrdef'/2 =
    %% Line 822
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{K,V},Ctxt> when 'true' ->
	      let <_cor7> =
		  %% Line 823
		  apply 'lay_noann'/2
		      (K, _cor0)
	      in  let <_cor5> =
		      %% Line 823
		      call 'prettypr':'text'
			  ([32|[61]])
		  in  let <_cor6> =
			  %% Line 823
			  call 'prettypr':'floating'
			      (_cor5)
		      in  let <_cor8> =
			      %% Line 823
			      call 'prettypr':'beside'
				  (_cor7, _cor6)
			  in  let <_cor4> =
				  %% Line 824
				  apply 'lay_noann'/2
				      (V, _cor0)
			      in  %% Line 825
				  ( case _cor0 of
				      ( <( {'ctxt',_cor11,_rec31,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17}
					   -| ['compiler_generated'] )> when 'true' ->
					    call 'prettypr':'follow'
						(_cor8, _cor4, _rec31)
					-| ['compiler_generated'] )
				      ( <_cor18> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','ctxt'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'lay_attrdef',2}}] )
	    -| ['compiler_generated'] )
	end
'lay_fdef'/2 =
    %% Line 827
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{N,F},Ctxt> when 'true' ->
	      let <_cor6> =
		  %% Line 828
		  apply 'lay'/2
		      (N, _cor0)
	      in  let <_cor4> =
		      %% Line 828
		      call 'prettypr':'text'
			  ([32|[61]])
		  in  let <_cor5> =
			  %% Line 828
			  call 'prettypr':'floating'
			      (_cor4)
		      in  let <_cor7> =
			      %% Line 828
			      call 'prettypr':'beside'
				  (_cor6, _cor5)
			  in  let <_cor8> =
				  %% Line 829
				  apply 'lay'/2
				      (F, _cor0)
			      in  %% Line 830
				  ( case _cor0 of
				      ( <( {'ctxt',_cor11,_rec32,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17}
					   -| ['compiler_generated'] )> when 'true' ->
					    call 'prettypr':'par'
						([_cor7|[_cor8|[]]], _rec32)
					-| ['compiler_generated'] )
				      ( <_cor18> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','ctxt'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'lay_fdef',2}}] )
	    -| ['compiler_generated'] )
	end
'lay_list_elements'/2 =
    %% Line 832
    fun (_cor1,_cor0) ->
	let <T> =
	    %% Line 833
	    call 'cerl':'cons_tl'
		(_cor1)
	in  %% Line 834
	    ( case _cor0 of
		( <( {'ctxt',_cor22,_cor23,_cor24,_cor25,_rec33,_cor26,_cor27,_cor28}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <_cor6> =
			  case _rec33 of
			    %% Line 835
			    <'false'> when 'true' ->
				%% Line 836
				call 'cerl':'get_ann'
				    (T)
			    %% Line 837
			    <'true'> when 'true' ->
				%% Line 838
				[]
			    ( <_cor5> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_rec33})
			      -| ['compiler_generated'] )
			  end
		      in  let <_cor8> =
			      %% Line 840
			      call 'cerl':'cons_hd'
				  (_cor1)
			  in  let <H> =
				  %% Line 840
				  apply 'lay'/2
				      (_cor8, _cor0)
			      in  %% Line 841
				  case call 'cerl':'is_c_cons'
					   (T) of
				    %% Line 842
				    <'true'>
					when call 'erlang':'=:='
					      (_cor6,
					       []) ->
					let <_cor10> =
					    %% Line 843
					    call 'prettypr':'text'
						([44])
					in  let <_cor11> =
						%% Line 843
						call 'prettypr':'floating'
						    (_cor10)
					    in  let <_cor12> =
						    %% Line 843
						    call 'prettypr':'beside'
							(H, _cor11)
						in  let <_cor13> =
							%% Line 844
							apply 'lay_list_elements'/2
							    (T, _cor0)
						    in  %% Line 843
							[_cor12|_cor13]
				    %% Line 845
				    <_cor30> when 'true' ->
					%% Line 846
					case call 'cerl':'is_c_nil'
						 (T) of
					  %% Line 847
					  <'true'>
					      when call 'erlang':'=:='
						    (_cor6,
						     []) ->
					      %% Line 848
					      [H|[]]
					  %% Line 849
					  <_cor31> when 'true' ->
					      let <_cor15> =
						  %% Line 850
						  call 'prettypr':'text'
						      ([124|[32]])
					      in  let <_cor16> =
						      %% Line 850
						      call 'prettypr':'floating'
							  (_cor15)
						  in  let <_cor14> =
							  %% Line 851
							  apply 'lay'/2
							      (T, _cor0)
						      in  let <_cor17> =
							      %% Line 850
							      call 'prettypr':'beside'
								  (_cor16, _cor14)
							  in  %% Line 850
							      [H|[_cor17|%% Line 851
									 []]]
					end
				  end
		  -| ['compiler_generated'] )
		( <_cor29> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','ctxt'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'seq'/4 =
    %% Line 855
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[H|T],Separator,Ctxt,Fun> when 'true' ->
	      %% Line 856
	      case T of
		%% Line 857
		<[]> when 'true' ->
		    let <_cor4> =
			%% Line 858
			apply _cor0
			    (H, _cor1)
		    in  %% Line 858
			[_cor4|[]]
		%% Line 859
		<_cor14> when 'true' ->
		    let <_cor5> =
			%% Line 860
			apply _cor0
			    (H, _cor1)
		    in  let <_cor6> =
			    %% Line 866
			    case <_cor2,_cor5> of
			      <'none',D> when 'true' ->
				  _cor5
			      %% Line 868
			      <Suffix,D> when 'true' ->
				  %% Line 869
				  call 'prettypr':'beside'
				      (_cor5, _cor2)
			    end
			in  let <_cor7> =
				%% Line 861
				apply 'seq'/4
				    (T, _cor2, _cor1, _cor0)
			    in  %% Line 860
				[_cor6|_cor7]
	      end
	  %% Line 863
	  <[],_cor15,_cor16,_cor17> when 'true' ->
	      let <_cor9> =
		  %% Line 864
		  call 'prettypr':'empty'
		      ()
	      in  %% Line 864
		  [_cor9|[]]
	  ( <_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'seq',4}}] )
	    -| ['compiler_generated'] )
	end
'vertical'/1 =
    %% Line 871
    fun (_cor0) ->
	case _cor0 of
	  <[D|[]]> when 'true' ->
	      D
	  %% Line 873
	  <[D|Ds]> when 'true' ->
	      let <_cor1> =
		  %% Line 874
		  apply 'vertical'/1
		      (Ds)
	      in  %% Line 874
		  call 'prettypr':'above'
		      (D, _cor1)
	  %% Line 875
	  <[]> when 'true' ->
	      %% Line 876
	      []
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'vertical',1}}] )
	    -| ['compiler_generated'] )
	end
'tidy_float'/1 =
    %% Line 885
    fun (_cor0) ->
	case _cor0 of
	  <[46|[C|Cs]]> when 'true' ->
	      let <_cor1> =
		  %% Line 886
		  apply 'tidy_float_1'/1
		      (Cs)
	      in  %% Line 886
		  [46|[C|_cor1]]
	  %% Line 887
	  <Cs = [101|_cor4]> when 'true' ->
	      %% Line 888
	      apply 'tidy_float_2'/1
		  (_cor0)
	  %% Line 889
	  <[C|Cs]> when 'true' ->
	      let <_cor2> =
		  %% Line 890
		  apply 'tidy_float'/1
		      (Cs)
	      in  %% Line 890
		  [C|_cor2]
	  %% Line 891
	  <[]> when 'true' ->
	      %% Line 892
	      []
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'tidy_float',1}}] )
	    -| ['compiler_generated'] )
	end
'tidy_float_1'/1 =
    %% Line 894
    fun (_cor0) ->
	case _cor0 of
	  <[48|[48|[48|Cs]]]> when 'true' ->
	      %% Line 895
	      apply 'tidy_float_2'/1
		  (Cs)
	  %% Line 896
	  <Cs = [101|_cor3]> when 'true' ->
	      %% Line 897
	      apply 'tidy_float_2'/1
		  (_cor0)
	  %% Line 898
	  <[C|Cs]> when 'true' ->
	      let <_cor1> =
		  %% Line 899
		  apply 'tidy_float_1'/1
		      (Cs)
	      in  %% Line 899
		  [C|_cor1]
	  %% Line 900
	  <[]> when 'true' ->
	      %% Line 901
	      []
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'tidy_float_1',1}}] )
	    -| ['compiler_generated'] )
	end
'tidy_float_2'/1 =
    %% Line 903
    fun (_cor0) ->
	case _cor0 of
	  <[101|[43|[48]]]> when 'true' ->
	      []
	  %% Line 904
	  <[101|[43|[48|Cs]]]> when 'true' ->
	      apply 'tidy_float_2'/1
		  ([101|[43|Cs]])
	  %% Line 905
	  <Cs = [101|[43|_cor2]]> when 'true' ->
	      _cor0
	  %% Line 906
	  <[101|[45|[48]]]> when 'true' ->
	      []
	  %% Line 907
	  <[101|[45|[48|Cs]]]> when 'true' ->
	      apply 'tidy_float_2'/1
		  ([101|[45|Cs]])
	  %% Line 908
	  <Cs = [101|[45|_cor3]]> when 'true' ->
	      _cor0
	  %% Line 909
	  <[101|Cs]> when 'true' ->
	      apply 'tidy_float_2'/1
		  ([101|[43|Cs]])
	  %% Line 910
	  <[_cor4|Cs]> when 'true' ->
	      apply 'tidy_float_2'/1
		  (Cs)
	  %% Line 911
	  <[]> when 'true' ->
	      []
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'tidy_float_2',1}}] )
	    -| ['compiler_generated'] )
	end
'get_line'/1 =
    %% Line 913
    fun (_cor0) ->
	case _cor0 of
	  <[L|_X_As]>
	      when call 'erlang':'is_integer'
		    (L) ->
	      L
	  %% Line 915
	  <[_cor2|As]> when 'true' ->
	      %% Line 916
	      apply 'get_line'/1
		  (As)
	  %% Line 917
	  <[]> when 'true' ->
	      %% Line 918
	      'none'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'get_line',1}}] )
	    -| ['compiler_generated'] )
	end
'strip_line'/1 =
    %% Line 920
    fun (_cor0) ->
	case _cor0 of
	  <[A|As]>
	      when call 'erlang':'is_integer'
		    (A) ->
	      %% Line 921
	      apply 'strip_line'/1
		  (As)
	  %% Line 922
	  <[A|As]> when 'true' ->
	      let <_cor1> =
		  %% Line 923
		  apply 'strip_line'/1
		      (As)
	      in  %% Line 923
		  [A|_cor1]
	  %% Line 924
	  <[]> when 'true' ->
	      %% Line 925
	      []
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'strip_line',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('cerl_prettypr')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('cerl_prettypr', _cor0)
end