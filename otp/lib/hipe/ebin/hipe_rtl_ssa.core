module 'hipe_rtl_ssa' ['check'/1,
		       'convert'/1,
		       'module_info'/0,
		       'module_info'/1,
		       'remove_dead_code'/1,
		       'unconvert'/1,
		       'uses_to_rename'/1]
    attributes [%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','alu'},[{'record_field',28,{'atom',28,'dst'}}|[{'record_field',28,{'atom',28,'src1'}}|[{'record_field',28,{'atom',28,'op'}}|[{'record_field',28,{'atom',28,'src2'}}]]]],[]}],
		%% Line 29
		'type' =
		    %% Line 29
		    [{{'record','alub'},[{'record_field',29,{'atom',29,'dst'}}|[{'record_field',29,{'atom',29,'src1'}}|[{'record_field',29,{'atom',29,'op'}}|[{'record_field',29,{'atom',29,'src2'}}|[{'record_field',29,{'atom',29,'cond'}}|[{'record_field',29,{'atom',29,'true_label'}}|[{'record_field',29,{'atom',29,'false_label'}}|[{'record_field',29,{'atom',29,'p'}}]]]]]]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','branch'},[{'record_field',30,{'atom',30,'src1'}}|[{'record_field',30,{'atom',30,'src2'}}|[{'record_field',30,{'atom',30,'cond'}}|[{'record_field',30,{'atom',30,'true_label'}}|[{'record_field',30,{'atom',30,'false_label'}}|[{'record_field',30,{'atom',30,'p'}}]]]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{{'record','call'},[{'record_field',31,{'atom',31,'dstlist'}}|[{'record_field',31,{'atom',31,'fun'}}|[{'record_field',31,{'atom',31,'arglist'}}|[{'record_field',31,{'atom',31,'type'}}|[{'record_field',31,{'atom',31,'continuation'}}|[{'record_field',32,{'atom',32,'failcontinuation'}}|[{'record_field',32,{'atom',32,'normalcontinuation'},{'nil',32}}]]]]]]],[]}],
		%% Line 33
		'type' =
		    %% Line 33
		    [{{'record','comment'},[{'record_field',33,{'atom',33,'text'}}],[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','enter'},[{'record_field',34,{'atom',34,'fun'}}|[{'record_field',34,{'atom',34,'arglist'}}|[{'record_field',34,{'atom',34,'type'}}]]],[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','fconv'},[{'record_field',35,{'atom',35,'dst'}}|[{'record_field',35,{'atom',35,'src'}}]],[]}],
		%% Line 36
		'type' =
		    %% Line 36
		    [{{'record','fixnumop'},[{'record_field',36,{'atom',36,'dst'}}|[{'record_field',36,{'atom',36,'src'}}|[{'record_field',36,{'atom',36,'type'}}]]],[]}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{{'record','fload'},[{'record_field',37,{'atom',37,'dst'}}|[{'record_field',37,{'atom',37,'src'}}|[{'record_field',37,{'atom',37,'offset'}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','fmove'},[{'record_field',38,{'atom',38,'dst'}}|[{'record_field',38,{'atom',38,'src'}}]],[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{{'record','fp'},[{'record_field',39,{'atom',39,'dst'}}|[{'record_field',39,{'atom',39,'src1'}}|[{'record_field',39,{'atom',39,'op'}}|[{'record_field',39,{'atom',39,'src2'}}]]]],[]}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{{'record','fp_unop'},[{'record_field',40,{'atom',40,'dst'}}|[{'record_field',40,{'atom',40,'src'}}|[{'record_field',40,{'atom',40,'op'}}]]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','fstore'},[{'record_field',41,{'atom',41,'base'}}|[{'record_field',41,{'atom',41,'offset'}}|[{'record_field',41,{'atom',41,'src'}}]]],[]}],
		%% Line 42
		'type' =
		    %% Line 42
		    [{{'record','gctest'},[{'record_field',42,{'atom',42,'words'}}],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','goto'},[{'record_field',43,{'atom',43,'label'}}],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','goto_index'},[{'record_field',44,{'atom',44,'block'}}|[{'record_field',44,{'atom',44,'index'}}|[{'record_field',44,{'atom',44,'labels'}}]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','label'},[{'record_field',45,{'atom',45,'name'}}],[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{{'record','load'},[{'record_field',46,{'atom',46,'dst'}}|[{'record_field',46,{'atom',46,'src'}}|[{'record_field',46,{'atom',46,'offset'}}|[{'record_field',46,{'atom',46,'size'}}|[{'record_field',46,{'atom',46,'sign'}}]]]]],[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{{'record','load_address'},[{'record_field',47,{'atom',47,'dst'}}|[{'record_field',47,{'atom',47,'addr'}}|[{'record_field',47,{'atom',47,'type'}}]]],[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','load_atom'},[{'record_field',48,{'atom',48,'dst'}}|[{'record_field',48,{'atom',48,'atom'}}]],[]}],
		%% Line 49
		'type' =
		    %% Line 49
		    [{{'record','load_word_index'},[{'record_field',49,{'atom',49,'dst'}}|[{'record_field',49,{'atom',49,'block'}}|[{'record_field',49,{'atom',49,'index'}}]]],[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','move'},[{'record_field',50,{'atom',50,'dst'}}|[{'record_field',50,{'atom',50,'src'}}]],[]}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{{'record','multimove'},[{'record_field',51,{'atom',51,'dstlist'}}|[{'record_field',51,{'atom',51,'srclist'}}]],[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{{'record','phi'},[{'record_field',52,{'atom',52,'dst'}}|[{'record_field',52,{'atom',52,'id'}}|[{'record_field',52,{'atom',52,'arglist'}}]]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{{'record','return'},[{'record_field',53,{'atom',53,'varlist'}}],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{{'record','store'},[{'record_field',54,{'atom',54,'base'}}|[{'record_field',54,{'atom',54,'offset'}}|[{'record_field',54,{'atom',54,'src'}}|[{'record_field',54,{'atom',54,'size'}}]]]],[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{{'record','switch'},[{'record_field',55,{'atom',55,'src'}}|[{'record_field',55,{'atom',55,'labels'}}|[{'record_field',55,{'atom',55,'sorted_by'},{'nil',55}}]]],[]}],
		%% Line 301
		'type' =
		    %% Line 301
		    [{{'record','comp_servers'},[{'typed_record_field',{'record_field',301,{'atom',301,'pp_server'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}|[{'typed_record_field',{'record_field',301,{'atom',301,'range'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}|[{'typed_record_field',{'record_field',301,{'atom',301,'type'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}]]],[]}],
		%% Line 307
		'type' =
		    %% Line 307
		    [{'comp_option',{'type',307,'union',[{'type',307,'atom',[]}|[{'type',307,'tuple',[{'type',307,'atom',[]}|[{'type',307,'atom',[]}]]}]]},[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{'comp_options',{'type',308,'list',[{'type',308,'comp_option',[]}]},[]}],
		%% Line 310
		'type' =
		    %% Line 310
		    [{'hipe_architecture',{'type',311,'union',[{'atom',311,'amd64'}|[{'atom',311,'arm'}|[{'atom',311,'powerpc'}|[{'atom',311,'ppc64'}|[{'atom',311,'ultrasparc'}|[{'atom',311,'x86'}]]]]]]},[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{'hipe_map',{'type',313,'list',[{'type',313,'tuple',[{'type',313,'non_neg_integer',[]}|[{'type',314,'union',[{'atom',314,'unknown'}|[{'type',314,'tuple',[{'type',314,'union',[{'atom',314,'reg'}|[{'atom',314,'fp_reg'}|[{'atom',314,'spill'}]]]}|[{'type',315,'non_neg_integer',[]}]]}]]}]]}]},[]}],
		%% Line 316
		'type' =
		    %% Line 316
		    [{'hipe_temp_map',{'type',316,'tuple','any'},[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{'hipe_spill_map',{'type',317,'list',[{'type',317,'tuple',[{'type',317,'non_neg_integer',[]}|[{'type',317,'tuple',[{'atom',317,'spill'}|[{'type',317,'non_neg_integer',[]}]]}]]}]},[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{'cfg_lbl',{'type',28,'non_neg_integer',[]},[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','cfg_info'},[{'typed_record_field',{'record_field',34,{'atom',34,'fun'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'type',34,'mfa',[]}]]}}|[{'typed_record_field',{'record_field',35,{'atom',35,'start_label'}},{'type',35,'union',[{'atom',35,'undefined'}|[{'type',35,'cfg_lbl',[]}]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'is_closure'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',37,{'atom',37,'closure_arity'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'type',37,'arity',[]}]]}}|[{'typed_record_field',{'record_field',38,{'atom',38,'is_leaf'}},{'type',38,'union',[{'atom',38,'undefined'}|[{'type',38,'boolean',[]}]]}}|[{'record_field',39,{'atom',39,'params'}}|[{'record_field',40,{'atom',40,'info'},{'nil',40}}]]]]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'cfg_data',{'type',45,'tuple',[{'remote_type',45,[{'atom',45,'dict'}|[{'atom',45,'dict'}|[[]]]]}|[{'type',45,'list',[{'type',45,'cfg_lbl',[]}]}|[{'type',45,'non_neg_integer',[]}]]]},[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','cfg'},[{'typed_record_field',{'record_field',50,{'atom',50,'table'},{'call',50,{'remote',50,{'atom',50,'gb_trees'},{'atom',50,'empty'}},[]}},{'remote_type',50,[{'atom',50,'gb_trees'}|[{'atom',50,'tree'}|[[]]]]}}|[{'typed_record_field',{'record_field',51,{'atom',51,'info'}},{'type',51,'union',[{'atom',51,'undefined'}|[{'type',51,'record',[{'atom',51,'cfg_info'}]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'data'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'cfg_data',[]}]]}}]]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{'cfg',{'type',53,'record',[{'atom',53,'cfg'}]},[]}],
		%% Line 58
		'spec' =
		    %% Line 58
		    [{{'convert',1},[{'type',58,'fun',[{'type',58,'product',[{'type',58,'record',[{'atom',58,'cfg'}]}]}|[{'type',58,'record',[{'atom',58,'cfg'}]}]]}]}],
		%% Line 602
		'spec' =
		    %% Line 602
		    [{{'check',1},[{'type',602,'fun',[{'type',602,'product',[{'type',602,'record',[{'atom',602,'cfg'}]}]}|[{'atom',602,'ok'}]]}]}],
		%% Line 791
		'spec' =
		    %% Line 791
		    [{{'unconvert',1},[{'type',791,'fun',[{'type',791,'product',[{'type',791,'record',[{'atom',791,'cfg'}]}]}|[{'type',791,'record',[{'atom',791,'cfg'}]}]]}]}],
		%% Line 912
		'spec' =
		    %% Line 912
		    [{{'remove_dead_code',1},[{'type',912,'fun',[{'type',912,'product',[{'type',912,'record',[{'atom',912,'cfg'}]}]}|[{'type',912,'record',[{'atom',912,'cfg'}]}]]}]}]]
'ssa_liveness__analyze'/1 =
    %% Line 70
    fun (_cor0) ->
	let <PO> =
	    %% Line 71
	    call 'hipe_rtl_cfg':'postorder'
		(_cor0)
	in  let <_cor2> =
		%% Line 72
		apply 'init'/2
		    (PO, _cor0)
	    in  let <_cor1> =
		    %% Line 266
		    call 'gb_trees':'empty'
			()
		in  let <InitLiveness> =
			%% Line 266
			apply 'liveness_init1'/2
			    (_cor2, _cor1)
		    in  %% Line 73
			apply 'merry_go_around'/2
			    (PO, InitLiveness)
'merry_go_around'/2 =
    %% Line 79
    fun (_cor1,_cor0) ->
	let <_6527> =
	    %% Line 80
	    apply 'doit_once'/2
		(_cor1, _cor0)
	in  %% Line 80
	    case _6527 of
	      %% Line 81
	      <{'fixpoint',NewLiveness}> when 'true' ->
		  NewLiveness
	      %% Line 83
	      <{'value',NewLiveness}> when 'true' ->
		  %% Line 84
		  apply 'merry_go_around'/2
		      (_cor1, NewLiveness)
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_6527})
		-| ['compiler_generated'] )
	    end
'doit_once'/2 =
    %% Line 91
    fun (_cor1,_cor0) ->
	%% Line 92
	apply 'doit_once'/3
	    (_cor1, _cor0, 'true')
'doit_once'/3 =
    %% Line 94
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],Liveness,FixPoint> when 'true' ->
	      %% Line 95
	      case <> of
		<>
		    when call 'erlang':'=:='
			  (_cor0,
			   'true') ->
		    {'fixpoint',_cor1}
		%% Line 96
		<> when 'true' ->
		    {'value',_cor1}
	      end
	  %% Line 98
	  <[L|Ls],Liveness,FixPoint> when 'true' ->
	      let <LiveOut> =
		  %% Line 99
		  apply 'join_livein'/2
		      (_cor1, L)
	      in  let <NewLiveness> =
		      %% Line 100
		      apply 'update_liveout'/3
			  (L, LiveOut, _cor1)
		  in  let <_7789> =
			  %% Line 274
			  call 'gb_trees':'lookup'
			      (L, NewLiveness)
		      in  %% Line 274
			  case _7789 of
			    <{'value',Info}> when 'true' ->
				case Info of
				  <{{_X_Gen,Kill,_X_DirGen},_X_LiveIn,_X_LiveOut,_X_Successors}> when 'true' ->
				      let <_fol105> =
					  %% Line 293
					  call 'gb_sets':'subtract'
					      (LiveOut, Kill)
				      in  let <_cor7> =
					      apply 'gen'/2
						  (L, NewLiveness)
					  in  let <LiveIn> =
						  %% Line 290
						  call 'gb_sets':'union'
						      (_fol105, _cor7)
					      in  let <_5241> =
						      apply 'update_livein'/3
							  (L, LiveIn, NewLiveness)
						  in  case _5241 of
							<'fixpoint'> when 'true' ->
							    apply 'doit_once'/3
								(Ls, NewLiveness, _cor0)
							<{'value',NewLiveness1}> when 'true' ->
							    apply 'doit_once'/3
								(Ls, NewLiveness1, 'false')
							( <_cor9> when 'true' ->
							      primop 'match_fail'
								  ({'case_clause',_5241})
							  -| ['compiler_generated'] )
						      end
				  ( <_4484> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',Info})
				    -| ['compiler_generated'] )
				end
			    ( <_9187> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_7789})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'doit_once',3}}] )
	    -| ['compiler_generated'] )
	end
'update_livein'/3 =
    %% Line 112
    fun (_cor2,_cor1,_cor0) ->
	let <_7789> =
	    %% Line 274
	    call 'gb_trees':'lookup'
		(_cor2, _cor0)
	in  %% Line 274
	    case _7789 of
	      <{'value',Info}> when 'true' ->
		  case Info of
		    <{GKD,LiveIn,LiveOut,Succ}> when 'true' ->
			case LiveIn of
			  <_cor9>
			      when call 'erlang':'=:='
				    (LiveIn,
				     _cor1) ->
			      'fixpoint'
			  <_cor10> when 'true' ->
			      let <_2056> =
				  {GKD,_cor1,LiveOut,Succ}
			      in  let <_cor4> =
				      %% Line 278
				      call 'gb_trees':'update'
					  (_cor2, _2056, _cor0)
				  in  {'value',_cor4}
			end
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',Info})
		      -| ['compiler_generated'] )
		  end
	      ( <_3150> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_7789})
		-| ['compiler_generated'] )
	    end
'update_liveout'/3 =
    %% Line 121
    fun (_cor2,_cor1,_cor0) ->
	let <_7789> =
	    %% Line 274
	    call 'gb_trees':'lookup'
		(_cor2, _cor0)
	in  %% Line 274
	    case _7789 of
	      <{'value',Info}> when 'true' ->
		  case Info of
		    <{GKD,LiveIn,_X_LiveOut,Succ}> when 'true' ->
			let <_2846> =
			    {GKD,LiveIn,_cor1,Succ}
			in  %% Line 278
			    call 'gb_trees':'update'
				(_cor2, _2846, _cor0)
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',Info})
		      -| ['compiler_generated'] )
		  end
	      ( <_8126> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_7789})
		-| ['compiler_generated'] )
	    end
'join_livein'/2 =
    %% Line 129
    fun (_cor1,_cor0) ->
	let <_7789> =
	    %% Line 274
	    call 'gb_trees':'lookup'
		(_cor0, _cor1)
	in  %% Line 274
	    case _7789 of
	      <{'value',Info}> when 'true' ->
		  case Info of
		    <{_X_GKD,_X_LiveIn,_X_LiveOut,Successors}> when 'true' ->
			case Successors of
			  <[]> when 'true' ->
			      let <_cor3> =
				  call 'hipe_rtl_arch':'live_at_return'
				      ()
			      in  call 'gb_sets':'from_list'
				      (_cor3)
			  <_cor7> when 'true' ->
			      apply 'join_livein1'/3
				  (_cor0, Successors, _cor1)
			end
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',Info})
		      -| ['compiler_generated'] )
		  end
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_7789})
		-| ['compiler_generated'] )
	    end
'join_livein1'/3 =
    %% Line 138
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 287
	    call 'gb_sets':'empty'
		()
	in  %% Line 139
	    apply 'join_livein1'/4
		(_cor2, _cor1, _cor0, _cor3)
'join_livein1'/4 =
    %% Line 141
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_Pred,[],_X_Liveness,Live> when 'true' ->
	      _cor0
	  %% Line 143
	  <Pred,[L|Ls],Liveness,Live> when 'true' ->
	      let <OldLivein> =
		  %% Line 144
		  apply 'livein_set'/3
		      (_cor1, L, _cor3)
	      in  let <NewLive> =
		      %% Line 290
		      call 'gb_sets':'union'
			  (OldLivein, _cor0)
		  in  %% Line 146
		      apply 'join_livein1'/4
			  (_cor3, Ls, _cor1, NewLive)
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'join_livein1',4}}] )
	    -| ['compiler_generated'] )
	end
'ssa_liveness__liveout'/2 =
    %% Line 149
    fun (_cor1,_cor0) ->
	let <_7789> =
	    %% Line 274
	    call 'gb_trees':'lookup'
		(_cor0, _cor1)
	in  %% Line 274
	    case _7789 of
	      <{'value',Info}> when 'true' ->
		  case Info of
		    <{_X_GKD,_X_LiveIn,LiveOut,Successors}> when 'true' ->
			case Successors of
			  <[]> when 'true' ->
			      call 'hipe_rtl_arch':'live_at_return'
				  ()
			  <_cor6> when 'true' ->
			      %% Line 299
			      call 'gb_sets':'to_list'
				  (LiveOut)
			end
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',Info})
		      -| ['compiler_generated'] )
		  end
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_7789})
		-| ['compiler_generated'] )
	    end
'livein_set'/3 =
    %% Line 171
    fun (_cor2,_cor1,_cor0) ->
	let <_7789> =
	    %% Line 274
	    call 'gb_trees':'lookup'
		(_cor1, _cor2)
	in  %% Line 274
	    case _7789 of
	      <{'value',Info}> when 'true' ->
		  case Info of
		    <{{_X_Gen,_X_Kill,{_X_TotalDirGen,DirGen}},LiveIn,_X_LiveOut,_X_Successors}> when 'true' ->
			let <_7920> =
			    call 'gb_trees':'lookup'
				(_cor0, DirGen)
			in  case _7920 of
			      <'none'> when 'true' ->
				  LiveIn
			      <{'value',LiveInFromPred}> when 'true' ->
				  apply 'set_union'/2
				      (LiveInFromPred, LiveIn)
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_7920})
				-| ['compiler_generated'] )
			    end
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',Info})
		      -| ['compiler_generated'] )
		  end
	      ( <_370> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_7789})
		-| ['compiler_generated'] )
	    end
'gen'/2 =
    %% Line 190
    fun (_cor1,_cor0) ->
	let <_7789> =
	    %% Line 274
	    call 'gb_trees':'lookup'
		(_cor1, _cor0)
	in  %% Line 274
	    case _7789 of
	      <{'value',Info}> when 'true' ->
		  case Info of
		    <{{Gen,_X_Kill,_X_DirGen},_X_LiveIn,_X_LiveOut,_X_Successors}> when 'true' ->
			Gen
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',Info})
		      -| ['compiler_generated'] )
		  end
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_7789})
		-| ['compiler_generated'] )
	    end
'init'/2 =
    %% Line 205
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],_cor12> when 'true' ->
	      %% Line 206
	      []
	  %% Line 207
	  <[L|Ls],CFG> when 'true' ->
	      let <BB> =
		  %% Line 208
		  call 'hipe_rtl_cfg':'bb'
		      (_cor0, L)
	      in  let <Code> =
		      %% Line 209
		      call 'hipe_bb':'code'
			  (BB)
		  in  let <Succ> =
			  %% Line 210
			  call 'hipe_rtl_cfg':'succ'
			      (_cor0, L)
		      in  let <_4497> =
			      %% Line 211
			      apply 'make_bb_transfer'/2
				  (Code, Succ)
			  in  %% Line 211
			      case _4497 of
				<{Gen,Kill}> when 'true' ->
				    let <DirectedGen> =
					%% Line 212
					apply 'get_directed_gen'/1
					    (Code)
				    in  let <_cor8> =
					    %% Line 287
					    call 'gb_sets':'empty'
						()
					in  let <_cor7> =
						%% Line 287
						call 'gb_sets':'empty'
						    ()
					    in  let <_cor9> =
						    %% Line 214
						    apply 'init'/2
							(Ls, _cor0)
						in  %% Line 213
						    [{L,{{Gen,Kill,DirectedGen},_cor8,_cor7,Succ}}|_cor9]
				( <_cor5> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_4497})
				  -| ['compiler_generated'] )
			      end
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'init',2}}] )
	    -| ['compiler_generated'] )
	end
'make_bb_transfer'/2 =
    %% Line 216
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],_X_Succ> when 'true' ->
	      let <_cor3> =
		  %% Line 287
		  call 'gb_sets':'empty'
		      ()
	      in  let <_cor2> =
		      %% Line 287
		      call 'gb_sets':'empty'
			  ()
		  in  %% Line 217
		      {_cor3,_cor2}
	  %% Line 218
	  <[I|Is],Succ> when 'true' ->
	      let <_3292> =
		  %% Line 219
		  apply 'make_bb_transfer'/2
		      (Is, _cor0)
	      in  %% Line 219
		  case _3292 of
		    <{Gen,Kill}> when 'true' ->
			let <_824> =
			    %% Line 220
			    call 'hipe_rtl':'is_phi'
				(I)
			in  %% Line 220
			    case _824 of
			      %% Line 221
			      <'true'> when 'true' ->
				  let <_cor5> =
				      %% Line 222
				      call 'hipe_rtl':'defines'
					  (I)
				  in  let <InstrKill> =
					  %% Line 296
					  call 'gb_sets':'from_list'
					      (_cor5)
				      in  let <Gen1> =
					      %% Line 293
					      call 'gb_sets':'subtract'
						  (Gen, InstrKill)
					  in  let <Kill1> =
						  %% Line 290
						  call 'gb_sets':'union'
						      (Kill, InstrKill)
					      in  %% Line 225
						  {Gen1,Kill1}
			      %% Line 226
			      <'false'> when 'true' ->
				  let <_cor9> =
				      %% Line 227
				      call 'hipe_rtl':'uses'
					  (I)
				  in  let <InstrGen> =
					  %% Line 296
					  call 'gb_sets':'from_list'
					      (_cor9)
				      in  let <_cor11> =
					      %% Line 228
					      call 'hipe_rtl':'defines'
						  (I)
					  in  let <InstrKill> =
						  %% Line 296
						  call 'gb_sets':'from_list'
						      (_cor11)
					      in  let <Gen1> =
						      %% Line 293
						      call 'gb_sets':'subtract'
							  (Gen, InstrKill)
						  in  let <Gen2> =
							  %% Line 290
							  call 'gb_sets':'union'
							      (Gen1, InstrGen)
						      in  let <Kill1> =
							      %% Line 290
							      call 'gb_sets':'union'
								  (Kill, InstrKill)
							  in  let <Kill2> =
								  %% Line 293
								  call 'gb_sets':'subtract'
								      (Kill1, InstrGen)
							      in  %% Line 233
								  {Gen2,Kill2}
			      ( <_cor17> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_824})
				-| ['compiler_generated'] )
			    end
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3292})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'make_bb_transfer',2}}] )
	    -| ['compiler_generated'] )
	end
'get_directed_gen'/1 =
    %% Line 236
    fun (_cor0) ->
	let <Map> =
	    %% Line 237
	    apply 'get_directed_gen_1'/1
		(_cor0)
	in  let <_cor8> =
		%% Line 238
		fun (_cor5,_cor4) ->
		    case <_cor5,_cor4> of
		      <{_X_Pred,Gen},Acc> when 'true' ->
			  %% Line 290
			  call 'gb_sets':'union'
			      (Gen, _cor4)
		      ( <_cor7,_cor6> when 'true' ->
			    ( primop 'match_fail'
				  ({'function_clause',_cor5,_cor4})
			      -| [{'function_name',{'-get_directed_gen/1-fun-0-',2}}] )
			-| ['compiler_generated'] )
		    end
	    in  let <_cor3> =
		    %% Line 287
		    call 'gb_sets':'empty'
			()
		in  let <_cor2> =
			%% Line 240
			call 'gb_trees':'to_list'
			    (Map)
		    in  let <TotalGen> =
			    %% Line 238
			    call 'lists':'foldl'
				(_cor8, _cor3, _cor2)
			in  %% Line 241
			    {TotalGen,Map}
'get_directed_gen_1'/1 =
    %% Line 243
    fun (_cor0) ->
	case _cor0 of
	  <[I|Left]> when 'true' ->
	      let <_6509> =
		  %% Line 244
		  call 'hipe_rtl':'is_phi'
		      (I)
	      in  %% Line 244
		  case _6509 of
		    %% Line 245
		    <'false'> when 'true' ->
			%% Line 246
			call 'gb_trees':'empty'
			    ()
		    %% Line 247
		    <'true'> when 'true' ->
			let <Map> =
			    %% Line 248
			    apply 'get_directed_gen_1'/1
				(Left)
			in  let <ArgList> =
				%% Line 249
				call 'hipe_rtl':'phi_arglist'
				    (I)
			    in  %% Line 250
				call 'lists':'foldl'
				    ('update_directed_gen'/2, Map, ArgList)
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_6509})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'get_directed_gen_1',1}}] )
	    -| ['compiler_generated'] )
	end
'update_directed_gen'/2 =
    %% Line 253
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{Pred,Var},Map> when 'true' ->
	      let <_4621> =
		  %% Line 254
		  call 'gb_trees':'lookup'
		      (Pred, _cor0)
	      in  %% Line 254
		  case _4621 of
		    %% Line 255
		    <'none'> when 'true' ->
			let <_2382> =
			    [Var|[]]
			in  let <_cor2> =
				%% Line 296
				call 'gb_sets':'from_list'
				    (_2382)
			    in  call 'gb_trees':'insert'
				    (Pred, _cor2, _cor0)
		    %% Line 256
		    <{'value',Set}> when 'true' ->
			let <_cor3> =
			    %% Line 302
			    call 'gb_sets':'add'
				(Var, Set)
			in  call 'gb_trees':'update'
				(Pred, _cor3, _cor0)
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_4621})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'update_directed_gen',2}}] )
	    -| ['compiler_generated'] )
	end
'liveness_init'/1 =
    %% Line 265
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 266
	    call 'gb_trees':'empty'
		()
	in  %% Line 266
	    apply 'liveness_init1'/2
		(_cor0, _cor1)
'liveness_init1'/2 =
    %% Line 268
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{Label,Info}|Left],Map> when 'true' ->
	      let <_cor2> =
		  %% Line 269
		  call 'gb_trees':'insert'
		      (Label, Info, _cor0)
	      in  %% Line 269
		  apply 'liveness_init1'/2
		      (Left, _cor2)
	  %% Line 270
	  <[],Map> when 'true' ->
	      _cor0
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'liveness_init1',2}}] )
	    -| ['compiler_generated'] )
	end
'set_union'/2 =
    %% Line 289
    fun (_cor1,_cor0) ->
	%% Line 290
	call 'gb_sets':'union'
	    (_cor1, _cor0)
'convert'/1 =
    %% Line 60
    fun (_cor0) ->
	let <CFG1> =
	    %% Line 61
	    apply 'insertNewStartNode'/1
		(_cor0)
	in  do  %% Line 63
		call 'hipe_timing':'start_optional_timer'
		    ([68|[111|[109|[105|[110|[97|[116|[111|[114|[32|[84|[114|[101|[101|[32|[99|[111|[110|[115|[116|[114|[117|[99|[116|[105|[111|[110]]]]]]]]]]]]]]]]]]]]]]]]]]], 'hipe_rtl_ssa')
		let <DomTree> =
		    %% Line 64
		    call 'hipe_dominators':'domTree_create'
			(CFG1)
		in  do  do  %% Line 65
			    call 'hipe_timing':'stop_optional_timer'
				([68|[111|[109|[105|[110|[97|[116|[111|[114|[32|[84|[114|[101|[101|[32|[99|[111|[110|[115|[116|[114|[117|[99|[116|[105|[111|[110|[32|[100|[111|[110|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], 'hipe_rtl_ssa')
			    %% Line 67
			    call 'hipe_timing':'start_optional_timer'
				([68|[111|[109|[105|[110|[97|[110|[99|[101|[32|[70|[114|[111|[110|[116|[105|[101|[114]]]]]]]]]]]]]]]]]], 'hipe_rtl_ssa')
			let <DomFrontier> =
			    %% Line 68
			    call 'hipe_dominators':'domFrontier_create'
				(CFG1, DomTree)
			in  do  do  %% Line 69
				    call 'hipe_timing':'stop_optional_timer'
					([68|[111|[109|[105|[110|[97|[110|[99|[101|[32|[70|[114|[111|[110|[116|[105|[101|[114|[32|[100|[111|[110|[101]]]]]]]]]]]]]]]]]]]]]]], 'hipe_rtl_ssa')
				    %% Line 71
				    call 'hipe_timing':'start_optional_timer'
					([112|[108|[97|[99|[101|[109|[101|[110|[116|[32|[111|[102|[32|[80|[104|[105|[45|[110|[111|[100|[101|[115]]]]]]]]]]]]]]]]]]]]]], 'hipe_rtl_ssa')
				let <CFG2> =
				    %% Line 72
				    apply 'place_phi'/2
					(CFG1, DomFrontier)
				in  do  do  %% Line 73
					    call 'hipe_timing':'stop_optional_timer'
						([112|[108|[97|[99|[101|[109|[101|[110|[116|[32|[111|[102|[32|[80|[104|[105|[45|[110|[111|[100|[101|[115|[32|[100|[111|[110|[101]]]]]]]]]]]]]]]]]]]]]]]]]]], 'hipe_rtl_ssa')
					    %% Line 75
					    call 'hipe_timing':'start_optional_timer'
						([82|[101|[110|[97|[109|[101]]]]]], 'hipe_rtl_ssa')
					let <CFG3> =
					    %% Line 76
					    apply 'rename'/2
						(CFG2, DomTree)
					in  do  %% Line 77
						call 'hipe_timing':'stop_optional_timer'
						    ([82|[101|[110|[97|[109|[101|[32|[100|[111|[110|[101]]]]]]]]]]], 'hipe_rtl_ssa')
						CFG3
'insertNewStartNode'/1 =
    %% Line 83
    fun (_cor0) ->
	let <StartLabel> =
	    %% Line 84
	    call 'hipe_rtl_cfg':'start_label'
		(_cor0)
	in  let <_cor2> =
		%% Line 85
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <NewStartLabel> =
		    %% Line 85
		    call 'hipe_rtl':'label_name'
			(_cor2)
		in  let <_cor4> =
			%% Line 86
			call 'hipe_rtl':'mk_goto'
			    (StartLabel)
		    in  let <BB> =
			    %% Line 86
			    call 'hipe_bb':'mk_bb'
				([_cor4|[]])
			in  let <CFG2> =
				%% Line 87
				call 'hipe_rtl_cfg':'bb_add'
				    (_cor0, NewStartLabel, BB)
			    in  %% Line 88
				call 'hipe_rtl_cfg':'start_label_update'
				    (CFG2, NewStartLabel)
'place_phi'/2 =
    %% Line 103
    fun (_cor1,_cor0) ->
	let <StartLabel> =
	    %% Line 119
	    call 'hipe_rtl_cfg':'start_label'
		(_cor1)
	in  let <Params> =
		%% Line 120
		call 'hipe_rtl_cfg':'params'
		    (_cor1)
	    in  let <_cor3> =
		    %% Line 121
		    call 'gb_trees':'empty'
			()
		in  let <AssMap> =
			%% Line 121
			apply 'insertParams'/3
			    (Params, StartLabel, _cor3)
		    in  let <AssMap2> =
			    %% Line 105
			    apply 'preProcess'/2
				(_cor1, AssMap)
			in  let <VarList> =
				%% Line 106
				call 'gb_trees':'to_list'
				    (AssMap2)
			    in  let <Liveness> =
				    %% Line 107
				    call 'hipe_rtl_liveness':'analyze'
					(_cor1)
				in  let <_cor7> =
					%% Line 108
					call 'gb_trees':'empty'
					    ()
				    in  let <_cor6> =
					    %% Line 108
					    call 'gb_trees':'empty'
						()
					in  %% Line 108
					    apply 'variableTraverse'/8
						(_cor1, _cor0, _cor7, _cor6, %% Line 109
									     0, AssMap2, Liveness, VarList)
'insertParams'/1 =
    %% Line 118
    fun (_cor0) ->
	let <StartLabel> =
	    %% Line 119
	    call 'hipe_rtl_cfg':'start_label'
		(_cor0)
	in  let <Params> =
		%% Line 120
		call 'hipe_rtl_cfg':'params'
		    (_cor0)
	    in  let <_cor3> =
		    %% Line 121
		    call 'gb_trees':'empty'
			()
		in  %% Line 121
		    apply 'insertParams'/3
			(Params, StartLabel, _cor3)
'insertParams'/3 =
    %% Line 123
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[Param|T],StartLabel,AssMap> when 'true' ->
	      let <_cor3> =
		  %% Line 124
		  call 'gb_trees':'insert'
		      (Param, [_cor1|[]], _cor0)
	      in  %% Line 124
		  apply 'insertParams'/3
		      (T, _cor1, _cor3)
	  %% Line 125
	  <[],_cor7,AssMap> when 'true' ->
	      _cor0
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'insertParams',3}}] )
	    -| ['compiler_generated'] )
	end
'preProcess'/2 =
    %% Line 135
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 136
	    call 'hipe_rtl_cfg':'labels'
		(_cor1)
	in  %% Line 136
	    apply 'traverseLabels'/3
		(_cor1, _cor2, _cor0)
'traverseLabels'/3 =
    %% Line 148
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <CFG,[Label|T],AssMap> when 'true' ->
	      let <_5451> =
		  %% Line 717
		  call 'hipe_rtl_cfg':'bb'
		      (_cor2, Label)
	      in  let <Code> =
		      %% Line 717
		      case _5451 of
			%% Line 718
			<'not_found'> when 'true' ->
			    %% Line 719
			    call 'code_server':'error_msg'
				([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[114|[114|[111|[114|[58|[32|[91|[126|[115|[58|[126|[119|[93|[58|[32|[66|[97|[115|[105|[99|[32|[98|[108|[111|[99|[107|[32|[119|[105|[116|[104|[32|[108|[97|[98|[101|[108|[32|[126|[119|[32|[119|[97|[115|[32|[110|[111|[116|[32|[102|[111|[117|[110|[100|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['hipe_rtl_ssa'|[719|[Label|[]]]])
			%% Line 721
			<BB> when 'true' ->
			    %% Line 722
			    call 'hipe_bb':'code'
				(_5451)
		      end
		  in  let <NewVarList> =
			  %% Line 150
			  apply 'getAssignments'/1
			      (Code)
		      in  let <_cor5> =
			      %% Line 151
			      apply 'updateAssMap'/3
				  (NewVarList, Label, _cor0)
			  in  %% Line 151
			      apply 'traverseLabels'/3
				  (_cor2, T, _cor5)
	  %% Line 152
	  <_cor9,[],AssMap> when 'true' ->
	      _cor0
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'traverseLabels',3}}] )
	    -| ['compiler_generated'] )
	end
'getAssignments'/1 =
    %% Line 163
    fun (_cor0) ->
	apply 'getAssignments'/2
	    (_cor0, [])
'getAssignments'/2 =
    %% Line 165
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Instr|T],VarList> when 'true' ->
	      let <Defs> =
		  call 'hipe_rtl':'defines'
		      (Instr)
	      in  let <_cor2> =
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor5) ->
				    case _cor5 of
				      <[D|_cor3]> when 'true' ->
					  ( case call 'hipe_rtl_arch':'is_precoloured'
						     (D) of
					      <'false'> when 'true' ->
						  let <_cor6> =
						      apply 'lc$^0'/1
							  (_cor3)
						  in  ( [D|_cor6]
							-| ['compiler_generated'] )
					      ( <'true'> when 'true' ->
						    apply 'lc$^0'/1
							(_cor3)
						-| ['compiler_generated'] )
					      ( <_cor_variable> when 'true' ->
						    call 'erlang':'error'
							('badarg')
						-| ['compiler_generated'] )
					    end
					    -| ['list_comprehension'] )
				      <[]> when 'true' ->
					  []
				      ( <_180> when 'true' ->
					    primop 'match_fail'
						({'function_clause',_cor5})
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(Defs)
			-| ['list_comprehension'] )
		  in  let <_cor3> =
			  %% Line 166
			  call 'erlang':'++'
			      (_cor2, _cor0)
		      in  %% Line 166
			  apply 'getAssignments'/2
			      (T, _cor3)
	  %% Line 167
	  <[],VarList> when 'true' ->
	      _cor0
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'getAssignments',2}}] )
	    -| ['compiler_generated'] )
	end
'updateAssMap'/3 =
    %% Line 179
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[AssVar|T],Label,AssMap> when 'true' ->
	      let <_1712> =
		  %% Line 185
		  call 'gb_trees':'lookup'
		      (AssVar, _cor0)
	      in  let <Lst> =
		      %% Line 185
		      case _1712 of
			%% Line 186
			<{'value',L}> when 'true' ->
			    L
			%% Line 187
			<'none'> when 'true' ->
			    []
			( <_4992> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_1712})
			  -| ['compiler_generated'] )
		      end
		  in  let <_cor4> =
			  %% Line 181
			  call 'gb_trees':'enter'
			      (AssVar, [_cor1|Lst], _cor0)
		      in  %% Line 181
			  apply 'updateAssMap'/3
			      (T, _cor1, _cor4)
	  %% Line 182
	  <[],_cor8,AssMap> when 'true' ->
	      _cor0
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'updateAssMap',3}}] )
	    -| ['compiler_generated'] )
	end
'variableTraverse'/8 =
    %% Line 204
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <CFG,DFMap,HasAlready,Work,IterCount,AssMap,Liveness,%% Line 205
							       [{Var,_cor20}|VarLst]> when 'true' ->
	      let <IterCount2> =
		  %% Line 206
		  call 'erlang':'+'
		      (_cor3, 1)
	      in  let <_1712> =
		      call 'gb_trees':'lookup'
			  (Var, _cor2)
		  in  let <DefLst> =
			  case _1712 of
			    <{'value',L}> when 'true' ->
				L
			    <'none'> when 'true' ->
				[]
			    ( <_10889> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_1712})
			      -| ['compiler_generated'] )
			  end
		      in  let <_9653> =
			      %% Line 208
			      apply 'workListBuilder'/4
				  (DefLst, _cor4, [], IterCount2)
			  in  %% Line 208
			      case _9653 of
				<{Work2,WorkLst2}> when 'true' ->
				    let <_8888> =
					%% Line 209
					apply 'doWork'/8
					    (_cor7, _cor6, _cor5, Work2, IterCount2, WorkLst2, Var, _cor1)
				    in  %% Line 209
					case _8888 of
					  <{CFG2,HasAlready2,Work3}> when 'true' ->
					      %% Line 212
					      apply 'variableTraverse'/8
						  (CFG2, _cor6, HasAlready2, Work3, IterCount2, _cor2, _cor1, VarLst)
					  ( <_cor11> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_8888})
					    -| ['compiler_generated'] )
					end
				( <_cor10> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_9653})
				  -| ['compiler_generated'] )
			      end
	  %% Line 214
	  <CFG,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,[]> when 'true' ->
	      _cor7
	  ( <_cor19,_cor18,_cor17,_cor16,_cor15,_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'variableTraverse',8}}] )
	    -| ['compiler_generated'] )
	end
'workListBuilder'/4 =
    %% Line 226
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Node|T],Work,WorkLst,IterCount> when 'true' ->
	      let <_5660> =
		  %% Line 239
		  call 'gb_trees':'lookup'
		      (Node, _cor2)
	      in  let <_401> =
		      %% Line 239
		      case _5660 of
			%% Line 240
			<{'value',V}> when 'true' ->
			    V
			%% Line 241
			<'none'> when 'true' ->
			    0
			( <_6062> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_5660})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 227
		      case _401 of
			%% Line 228
			<0> when 'true' ->
			    let <Work2> =
				%% Line 229
				call 'gb_trees':'enter'
				    (Node, _cor0, _cor2)
			    in  %% Line 230
				apply 'workListBuilder'/4
				    (T, Work2, [Node|_cor1], _cor0)
			%% Line 231
			<_cor11> when 'true' ->
			    let <Work2> =
				%% Line 232
				call 'gb_trees':'enter'
				    (Node, _cor0, _cor2)
			    in  %% Line 233
				apply 'workListBuilder'/4
				    (T, Work2, [Node|_cor1], _cor0)
		      end
	  %% Line 235
	  <[],Work,WorkLst,_X_IterCount> when 'true' ->
	      %% Line 236
	      {_cor2,_cor1}
	  ( <_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'workListBuilder',4}}] )
	    -| ['compiler_generated'] )
	end
'doWork'/8 =
    %% Line 258
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <CFG,DFMap,HasAlready,Work,IterCount,%% Line 259
					       [Node|WorkLst],Var,Liveness> when 'true' ->
	      let <DFofX> =
		  %% Line 260
		  call 'hipe_dominators':'domFrontier_get'
		      (Node, _cor6)
	      in  let <_10134> =
		      %% Line 262
		      apply 'checkPhiNeeds'/8
			  (_cor7, DFofX, _cor5, _cor4, _cor3, WorkLst, _cor1, _cor0)
		  in  %% Line 261
		      case _10134 of
			<{CFG2,HasAlready2,Work2,WorkLst2}> when 'true' ->
			    %% Line 264
			    apply 'doWork'/8
				(CFG2, _cor6, HasAlready2, Work2, _cor3, WorkLst2, _cor1, _cor0)
			( <_cor9> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_10134})
			  -| ['compiler_generated'] )
		      end
	  %% Line 266
	  <CFG,_cor18,HasAlready,Work,_cor19,[],_cor20,_cor21> when 'true' ->
	      %% Line 267
	      {_cor7,_cor5,_cor4}
	  ( <_cor17,_cor16,_cor15,_cor14,_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'doWork',8}}] )
	    -| ['compiler_generated'] )
	end
'checkPhiNeeds'/8 =
    %% Line 283
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <CFG,[Node|DFofX],HasAlready,Work,IterCount,WorkLst,Var,Liveness> when 'true' ->
	      let <_5660> =
		  call 'gb_trees':'lookup'
		      (Node, _cor5)
	      in  let <_cor8> =
		      case _5660 of
			<{'value',V}> when 'true' ->
			    V
			<'none'> when 'true' ->
			    0
			( <_182> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_5660})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 285
		      case <> of
			%% Line 286
			<>
			    when call 'erlang':'<'
				  (_cor8,
				   _cor3) ->
			    let <LiveIn> =
				%% Line 287
				call 'hipe_rtl_liveness':'livein'
				    (_cor0, Node)
			    in  let <_4883> =
				    %% Line 288
				    call 'lists':'member'
					(_cor1, LiveIn)
				in  %% Line 288
				    case _4883 of
				      %% Line 289
				      <'true'> when 'true' ->
					  let <BB> =
					      %% Line 323
					      call 'hipe_rtl_cfg':'bb'
						  (_cor7, Node)
					  in  let <Phi> =
						  %% Line 324
						  call 'hipe_rtl':'mk_phi'
						      (_cor1)
					      in  let <_7296> =
						      %% Line 325
						      call 'hipe_bb':'code'
							  (BB)
						  in  let <Code> =
							  %% Line 325
							  [Phi|_7296]
						      in  let <_8119> =
							      %% Line 326
							      call 'hipe_bb':'code_update'
								  (BB, Code)
							  in  let <CFG2> =
								  %% Line 326
								  call 'hipe_rtl_cfg':'bb_add'
								      (_cor7, Node, _8119)
							      in  let <HasAlready2> =
								      %% Line 291
								      call 'gb_trees':'enter'
									  (Node, _cor3, _cor5)
								  in  let <_5660> =
									  call 'gb_trees':'lookup'
									      (Node, _cor4)
								      in  let <_cor12> =
									      case _5660 of
										<{'value',V}> when 'true' ->
										    V
										<'none'> when 'true' ->
										    0
										( <_2383> when 'true' ->
										      primop 'match_fail'
											  ({'case_clause',_5660})
										  -| ['compiler_generated'] )
									      end
									  in  %% Line 292
									      case <> of
										%% Line 293
										<>
										    when call 'erlang':'<'
											  (_cor12,
											   _cor3) ->
										    let <Work2> =
											%% Line 294
											call 'gb_trees':'enter'
											    (Node, _cor3, _cor4)
										    in  let <WorkLst2> =
											    %% Line 295
											    [Node|_cor2]
											in  %% Line 296
											    apply 'checkPhiNeeds'/8
												(CFG2, DFofX, HasAlready2, Work2, _cor3, WorkLst2, _cor1, _cor0)
										%% Line 298
										<> when 'true' ->
										    %% Line 299
										    apply 'checkPhiNeeds'/8
											(CFG2, DFofX, HasAlready2, _cor4, _cor3, _cor2, _cor1, _cor0)
									      end
				      %% Line 302
				      <'false'> when 'true' ->
					  %% Line 303
					  apply 'checkPhiNeeds'/8
					      (_cor7, DFofX, _cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
				      ( <_cor16> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_4883})
					-| ['compiler_generated'] )
				    end
			%% Line 306
			<> when 'true' ->
			    %% Line 307
			    apply 'checkPhiNeeds'/8
				(_cor7, DFofX, _cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
		      end
	  %% Line 310
	  <CFG,[],HasAlready,Work,_cor26,WorkLst,_cor27,_cor28> when 'true' ->
	      %% Line 311
	      {_cor7,_cor5,_cor4,_cor2}
	  ( <_cor25,_cor24,_cor23,_cor22,_cor21,_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'checkPhiNeeds',8}}] )
	    -| ['compiler_generated'] )
	end
'rename'/2 =
    %% Line 342
    fun (_cor1,_cor0) ->
	do  let <_2509> =
		call 'hipe_rtl_arch':'first_virtual_reg'
		    ()
	    in  call 'hipe_gensym':'set_var'
		    ('rtl', _2509)
	    let <_8883> =
		%% Line 346
		apply 'insertRenamedParams'/1
		    (_cor1)
	    in  %% Line 346
		case _8883 of
		  <{CFG2,Current}> when 'true' ->
		      let <_cor3> =
			  %% Line 347
			  call 'hipe_rtl_cfg':'start_label'
			      (CFG2)
		      in  %% Line 347
			  apply 'rename'/4
			      (CFG2, _cor3, _cor0, Current)
		  ( <_cor2> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_8883})
		    -| ['compiler_generated'] )
		end
'rename'/4 =
    %% Line 349
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <BB> =
	    %% Line 350
	    call 'hipe_rtl_cfg':'bb'
		(_cor3, _cor2)
	in  let <Statements> =
		%% Line 351
		call 'hipe_bb':'code'
		    (BB)
	    in  let <_1827> =
		    %% Line 352
		    apply 'renameVars'/2
			(Statements, _cor0)
		in  %% Line 352
		    case _1827 of
		      <{Statements2,Current2}> when 'true' ->
			  let <_cor7> =
			      %% Line 353
			      call 'hipe_bb':'code_update'
				  (BB, Statements2)
			  in  let <CFG1> =
				  %% Line 353
				  call 'hipe_rtl_cfg':'bb_add'
				      (_cor3, _cor2, _cor7)
			      in  let <Succ> =
				      %% Line 354
				      call 'hipe_rtl_cfg':'succ'
					  (CFG1, _cor2)
				  in  let <CFG2> =
					  %% Line 355
					  apply 'updateSuccPhi'/4
					      (Succ, _cor2, CFG1, Current2)
				      in  let <Children> =
					      %% Line 356
					      call 'hipe_dominators':'domTree_getChildren'
						  (_cor2, _cor1)
					  in  %% Line 357
					      apply 'childrenRename'/4
						  (Children, CFG2, _cor1, Current2)
		      ( <_cor6> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_1827})
			-| ['compiler_generated'] )
		    end
'childrenRename'/4 =
    %% Line 370
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Child|Children],CFG,DomTree,Current> when 'true' ->
	      let <CFG2> =
		  %% Line 371
		  apply 'rename'/4
		      (_cor2, Child, _cor1, _cor0)
	      in  %% Line 372
		  apply 'childrenRename'/4
		      (Children, CFG2, _cor1, _cor0)
	  %% Line 373
	  <[],CFG,_cor9,_cor10> when 'true' ->
	      _cor2
	  ( <_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'childrenRename',4}}] )
	    -| ['compiler_generated'] )
	end
'renameVars'/2 =
    %% Line 384
    fun (_cor1,_cor0) ->
	%% Line 385
	apply 'renameVars'/3
	    (_cor1, _cor0, [])
'renameVars'/3 =
    %% Line 387
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[Statement|Statements],Current,Result> when 'true' ->
	      let <Statement2> =
		  %% Line 388
		  apply 'renameUses'/2
		      (Statement, _cor1)
	      in  let <_1478> =
		      %% Line 389
		      apply 'renameDefs'/2
			  (Statement2, _cor1)
		  in  %% Line 389
		      case _1478 of
			<{Statement3,Current2}> when 'true' ->
			    %% Line 390
			    apply 'renameVars'/3
				(Statements, Current2, [Statement3|_cor0])
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_1478})
			  -| ['compiler_generated'] )
		      end
	  %% Line 391
	  <[],Current,Result> when 'true' ->
	      let <_cor5> =
		  %% Line 392
		  call 'lists':'reverse'
		      (_cor0)
	      in  %% Line 392
		  {_cor5,_cor1}
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'renameVars',3}}] )
	    -| ['compiler_generated'] )
	end
'renameUses'/2 =
    %% Line 402
    fun (_cor1,_cor0) ->
	let <_2273> =
	    %% Line 403
	    call 'hipe_rtl':'is_phi'
		(_cor1)
	in  %% Line 403
	    case _2273 of
	      %% Line 404
	      <'true'> when 'true' ->
		  _cor1
	      %% Line 405
	      <'false'> when 'true' ->
		  let <Uses> =
		      call 'hipe_rtl':'uses'
			  (_cor1)
		  in  let <VarList> =
			  ( letrec
				'lc$^0'/1 =
				    fun (_cor5) ->
					case _cor5 of
					  <[U|_cor3]> when 'true' ->
					      ( case call 'hipe_rtl_arch':'is_precoloured'
							 (U) of
						  <'false'> when 'true' ->
						      let <_cor6> =
							  apply 'lc$^0'/1
							      (_cor3)
						      in  ( [U|_cor6]
							    -| ['compiler_generated'] )
						  ( <'true'> when 'true' ->
							apply 'lc$^0'/1
							    (_cor3)
						    -| ['compiler_generated'] )
						  ( <_cor_variable> when 'true' ->
							call 'erlang':'error'
							    ('badarg')
						    -| ['compiler_generated'] )
						end
						-| ['list_comprehension'] )
					  <[]> when 'true' ->
					      []
					  ( <_6190> when 'true' ->
						primop 'match_fail'
						    ({'function_clause',_cor5})
					    -| ['compiler_generated'] )
					end
			    in  apply 'lc$^0'/1
				    (Uses)
			    -| ['list_comprehension'] )
		      in  let <_cor8> =
			      %% Line 420
			      ( letrec
				    'lc$^0'/1 =
					fun (_cor5) ->
					    case _cor5 of
					      <[Var|_cor4]> when 'true' ->
						  let <_cor6> =
						      call 'gb_trees':'get'
							  (Var, _cor0)
						  in  let <_cor7> =
							  apply 'lc$^0'/1
							      (_cor4)
						      in  ( [{Var,_cor6}|_cor7]
							    -| ['compiler_generated'] )
					      <[]> when 'true' ->
						  []
					      ( <_465> when 'true' ->
						    primop 'match_fail'
							({'function_clause',_cor5})
						-| ['compiler_generated'] )
					    end
				in  case VarList of
				      <[Var|_cor4]> when 'true' ->
					  let <_cor6> =
					      call 'gb_trees':'get'
						  (Var, _cor0)
					  in  let <_cor7> =
						  apply 'lc$^0'/1
						      (_cor4)
					      in  ( [{Var,_cor6}|_cor7]
						    -| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_465> when 'true' ->
					    primop 'match_fail'
						({'function_clause',VarList})
					-| ['compiler_generated'] )
				    end
				-| ['list_comprehension'] )
			  in  %% Line 421
			      call 'hipe_rtl':'subst_uses'
				  (_cor8, _cor1)
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_2273})
		-| ['compiler_generated'] )
	    end
'renameDefs'/2 =
    %% Line 432
    fun (_cor1,_cor0) ->
	let <Defs> =
	    call 'hipe_rtl':'defines'
		(_cor1)
	in  let <VarList> =
		( letrec
		      'lc$^0'/1 =
			  fun (_cor5) ->
			      case _cor5 of
				<[D|_cor3]> when 'true' ->
				    ( case call 'hipe_rtl_arch':'is_precoloured'
					       (D) of
					<'false'> when 'true' ->
					    let <_cor6> =
						apply 'lc$^0'/1
						    (_cor3)
					    in  ( [D|_cor6]
						  -| ['compiler_generated'] )
					( <'true'> when 'true' ->
					      apply 'lc$^0'/1
						  (_cor3)
					  -| ['compiler_generated'] )
					( <_cor_variable> when 'true' ->
					      call 'erlang':'error'
						  ('badarg')
					  -| ['compiler_generated'] )
				      end
				      -| ['list_comprehension'] )
				<[]> when 'true' ->
				    []
				( <_180> when 'true' ->
				      primop 'match_fail'
					  ({'function_clause',_cor5})
				  -| ['compiler_generated'] )
			      end
		  in  case Defs of
			<[D|_cor3]> when 'true' ->
			    ( case call 'hipe_rtl_arch':'is_precoloured'
				       (D) of
				<'false'> when 'true' ->
				    let <_cor6> =
					apply 'lc$^0'/1
					    (_cor3)
				    in  ( [D|_cor6]
					  -| ['compiler_generated'] )
				( <'true'> when 'true' ->
				      apply 'lc$^0'/1
					  (_cor3)
				  -| ['compiler_generated'] )
				( <_cor_variable> when 'true' ->
				      call 'erlang':'error'
					  ('badarg')
				  -| ['compiler_generated'] )
			      end
			      -| ['list_comprehension'] )
			<[]> when 'true' ->
			    []
			( <_180> when 'true' ->
			      primop 'match_fail'
				  ({'function_clause',Defs})
			  -| ['compiler_generated'] )
		      end
		  -| ['list_comprehension'] )
	    in  %% Line 451
		apply 'updateStatementDefs'/4
		    (VarList, _cor1, _cor0, [])
'updateStatementDefs'/4 =
    %% Line 453
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Var|Vars],Statement,Current,Acc> when 'true' ->
	      let <_3901> =
		  %% Line 454
		  apply 'updateIndices'/2
		      (_cor1, Var)
	      in  %% Line 454
		  case _3901 of
		    <{NewVar,Current2}> when 'true' ->
			%% Line 455
			apply 'updateStatementDefs'/4
			    (Vars, _cor2, Current2, [{Var,NewVar}|_cor0])
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3901})
		      -| ['compiler_generated'] )
		  end
	  %% Line 456
	  <[],Statement,Current,Acc> when 'true' ->
	      let <Statement2> =
		  %% Line 457
		  call 'hipe_rtl':'subst_defines'
		      (_cor0, _cor2)
	      in  %% Line 458
		  {Statement2,_cor1}
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'updateStatementDefs',4}}] )
	    -| ['compiler_generated'] )
	end
'updateIndices'/2 =
    %% Line 470
    fun (_cor1,_cor0) ->
	let <_9459> =
	    %% Line 471
	    call 'hipe_rtl':'is_var'
		(_cor0)
	in  %% Line 471
	    case _9459 of
	      %% Line 472
	      <'true'> when 'true' ->
		  let <NewVar> =
		      %% Line 473
		      call 'hipe_rtl':'mk_new_var'
			  ()
		  in  let <_cor3> =
			  %% Line 474
			  call 'gb_trees':'enter'
			      (_cor0, NewVar, _cor1)
		      in  %% Line 474
			  {NewVar,_cor3}
	      %% Line 475
	      <'false'> when 'true' ->
		  let <_6735> =
		      call 'hipe_rtl':'is_fpreg'
			  (_cor0)
		  in  %% Line 476
		      case _6735 of
			%% Line 477
			<'true'> when 'true' ->
			    let <NewFVar> =
				call 'hipe_rtl':'mk_new_fpreg'
				    ()
			    in  let <_cor5> =
				    %% Line 479
				    call 'gb_trees':'enter'
					(_cor0, NewFVar, _cor1)
				in  %% Line 479
				    {NewFVar,_cor5}
			%% Line 480
			<'false'> when 'true' ->
			    let <NewReg> =
				%% Line 481
				call 'hipe_rtl':'mk_new_reg'
				    ()
			    in  let <_cor7> =
				    %% Line 482
				    call 'gb_trees':'enter'
					(_cor0, NewReg, _cor1)
				in  %% Line 482
				    {NewReg,_cor7}
			( <_cor8> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_6735})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor9> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_9459})
		-| ['compiler_generated'] )
	    end
'updateSuccPhi'/4 =
    %% Line 501
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Succ|T],Parent,CFG,Current> when 'true' ->
	      let <CFG2> =
		  %% Line 502
		  apply 'updatePhi'/4
		      (Succ, _cor2, _cor1, _cor0)
	      in  %% Line 503
		  apply 'updateSuccPhi'/4
		      (T, _cor2, CFG2, _cor0)
	  %% Line 504
	  <[],_cor9,CFG,_cor10> when 'true' ->
	      _cor1
	  ( <_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'updateSuccPhi',4}}] )
	    -| ['compiler_generated'] )
	end
'updatePhi'/4 =
    %% Line 523
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <BB> =
	    %% Line 524
	    call 'hipe_rtl_cfg':'bb'
		(_cor1, _cor3)
	in  let <_7344> =
		%% Line 525
		call 'hipe_bb':'code'
		    (BB)
	    in  %% Line 525
		case _7344 of
		  %% Line 526
		  <Statements = [Code|_cor13]> when 'true' ->
		      %% Line 527
		      case call 'hipe_rtl':'is_phi'
			       (Code) of
			%% Line 528
			<'true'> when 'true' ->
			    let <Code2> =
				%% Line 552
				apply 'updateCode'/4
				    (_7344, _cor2, _cor0, [])
			    in  let <_cor6> =
				    %% Line 530
				    call 'hipe_bb':'code_update'
					(BB, Code2)
				in  %% Line 530
				    call 'hipe_rtl_cfg':'bb_add'
					(_cor1, _cor3, _cor6)
			%% Line 531
			<_cor14> when 'true' ->
			    _cor1
		      end
		  %% Line 534
		  <_cor15> when 'true' ->
		      _cor1
		end
'updateCode'/4 =
    %% Line 554
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Statements = [Stat|Stats],Pred,Current,Result> when 'true' ->
	      %% Line 555
	      case call 'hipe_rtl':'is_phi'
		       (Stat) of
		%% Line 556
		<'true'> when 'true' ->
		    let <Var> =
			%% Line 557
			call 'hipe_rtl':'phi_id'
			    (Stat)
		    in  let <_4535> =
			    %% Line 558
			    call 'gb_trees':'lookup'
				(Var, _cor1)
			in  let <_cor7> =
				%% Line 558
				case _4535 of
				  %% Line 559
				  <'none'> when 'true' ->
				      %% Line 560
				      [Stat|_cor0]
				  %% Line 561
				  <{'value',Var2}> when 'true' ->
				      let <Stat2> =
					  %% Line 562
					  call 'hipe_rtl':'phi_enter_pred'
					      (Stat, _cor2, Var2)
				      in  %% Line 563
					  [Stat2|_cor0]
				  ( <_cor6> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_4535})
				    -| ['compiler_generated'] )
				end
			    in  %% Line 565
				apply 'updateCode'/4
				    (Stats, _cor2, _cor1, _cor7)
		%% Line 566
		<_cor14> when 'true' ->
		    %% Line 567
		    call 'erlang':'++'
			(_cor0, _cor3)
	      end
	  ( <_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'updateCode',4}}] )
	    -| ['compiler_generated'] )
	end
'insertRenamedParams'/1 =
    %% Line 577
    fun (_cor0) ->
	let <Params> =
	    %% Line 578
	    call 'hipe_rtl_cfg':'params'
		(_cor0)
	in  let <_cor2> =
		%% Line 580
		call 'gb_trees':'empty'
		    ()
	    in  let <_320> =
		    %% Line 580
		    apply 'insertRenamedParams'/3
			(Params, _cor2, [])
		in  %% Line 580
		    case _320 of
		      <{Current,Params2}> when 'true' ->
			  let <CFG2> =
			      %% Line 581
			      call 'hipe_rtl_cfg':'params_update'
				  (_cor0, Params2)
			  in  %% Line 582
			      {CFG2,Current}
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_320})
			-| ['compiler_generated'] )
		    end
'insertRenamedParams'/3 =
    %% Line 584
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[Param|Params],Current,Result> when 'true' ->
	      let <_3184> =
		  %% Line 585
		  apply 'updateIndices'/2
		      (_cor1, Param)
	      in  %% Line 585
		  case _3184 of
		    <{Var,Current2}> when 'true' ->
			%% Line 586
			apply 'insertRenamedParams'/3
			    (Params, Current2, [Var|_cor0])
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3184})
		      -| ['compiler_generated'] )
		  end
	  %% Line 587
	  <[],Current,Result> when 'true' ->
	      let <_cor4> =
		  %% Line 588
		  call 'lists':'reverse'
		      (_cor0)
	      in  %% Line 588
		  {_cor1,_cor4}
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'insertRenamedParams',3}}] )
	    -| ['compiler_generated'] )
	end
'check'/1 =
    %% Line 604
    fun (_cor0) ->
	let <Labels> =
	    %% Line 605
	    call 'hipe_rtl_cfg':'labels'
		(_cor0)
	in  let <VarTree> =
		%% Line 606
		apply 'traverse_labels'/2
		    (Labels, _cor0)
	    in  let <DomTree> =
		    %% Line 607
		    call 'hipe_dominators':'domTree_create'
			(_cor0)
		in  %% Line 608
		    apply 'test_uses'/4
			(Labels, VarTree, DomTree, _cor0)
'traverse_labels'/2 =
    %% Line 613
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 614
	    call 'hipe_rtl_cfg':'params'
		(_cor0)
	in  let <_7188> =
		%% Line 665
		call 'gb_trees':'empty'
		    ()
	    in  let <VarTree> =
		    %% Line 667
		    case <_cor2,_7188> of
		      <[Arg|Rest],VarTree> when 'true' ->
			  let <_5800> =
			      %% Line 668
			      call 'gb_trees':'insert'
				  (Arg, {['argument_variable'],[0]}, _7188)
			  in  case <Rest,_5800> of
				<[_2069|_490],_376> when 'true' ->
				    let <_1222> =
					%% Line 668
					call 'gb_trees':'insert'
					    (_2069, {['argument_variable'],[0]}, _5800)
				    in  %% Line 668
					apply 'add_args'/2
					    (_490, _1222)
				%% Line 669
				<[],_2619> when 'true' ->
				    _5800
				( <_cor4,_cor3> when 'true' ->
				      primop 'match_fail'
					  ({'function_clause',Rest,_5800})
				  -| ['compiler_generated'] )
			      end
		      %% Line 669
		      <[],VarTree> when 'true' ->
			  _7188
		      ( <_cor4,_cor3> when 'true' ->
			    primop 'match_fail'
				({'function_clause',_cor2,_7188})
			-| ['compiler_generated'] )
		    end
		in  %% Line 615
		    apply 'traverse_labels'/3
			(_cor1, VarTree, _cor0)
'traverse_labels'/3 =
    %% Line 617
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[Label|Rest],VarTree,CFG> when 'true' ->
	      let <_5451> =
		  %% Line 717
		  call 'hipe_rtl_cfg':'bb'
		      (_cor0, Label)
	      in  let <Code> =
		      %% Line 717
		      case _5451 of
			%% Line 718
			<'not_found'> when 'true' ->
			    %% Line 719
			    call 'code_server':'error_msg'
				([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[114|[114|[111|[114|[58|[32|[91|[126|[115|[58|[126|[119|[93|[58|[32|[66|[97|[115|[105|[99|[32|[98|[108|[111|[99|[107|[32|[119|[105|[116|[104|[32|[108|[97|[98|[101|[108|[32|[126|[119|[32|[119|[97|[115|[32|[110|[111|[116|[32|[102|[111|[117|[110|[100|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['hipe_rtl_ssa'|[719|[Label|[]]]])
			%% Line 721
			<BB> when 'true' ->
			    %% Line 722
			    call 'hipe_bb':'code'
				(_5451)
		      end
		  in  let <NewVarTree> =
			  %% Line 619
			  apply 'traverse_code'/3
			      (Code, _cor1, Label)
		      in  %% Line 620
			  apply 'traverse_labels'/3
			      (Rest, NewVarTree, _cor0)
	  %% Line 621
	  <[],VarTree,_X_CFG> when 'true' ->
	      _cor1
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'traverse_labels',3}}] )
	    -| ['compiler_generated'] )
	end
'traverse_code'/3 =
    %% Line 627
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[Instr|Rest],VarTree,Label> when 'true' ->
	      let <Defs> =
		  call 'hipe_rtl':'defines'
		      (Instr)
	      in  let <Defined> =
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor5) ->
				    case _cor5 of
				      <[D|_cor3]> when 'true' ->
					  ( case call 'hipe_rtl_arch':'is_precoloured'
						     (D) of
					      <'false'> when 'true' ->
						  let <_cor6> =
						      apply 'lc$^0'/1
							  (_cor3)
						  in  ( [D|_cor6]
							-| ['compiler_generated'] )
					      ( <'true'> when 'true' ->
						    apply 'lc$^0'/1
							(_cor3)
						-| ['compiler_generated'] )
					      ( <_cor_variable> when 'true' ->
						    call 'erlang':'error'
							('badarg')
						-| ['compiler_generated'] )
					    end
					    -| ['list_comprehension'] )
				      <[]> when 'true' ->
					  []
				      ( <_180> when 'true' ->
					    primop 'match_fail'
						({'function_clause',_cor5})
					-| ['compiler_generated'] )
				    end
			in  case Defs of
			      <[D|_cor3]> when 'true' ->
				  ( case call 'hipe_rtl_arch':'is_precoloured'
					     (D) of
				      <'false'> when 'true' ->
					  let <_cor6> =
					      apply 'lc$^0'/1
						  (_cor3)
					  in  ( [D|_cor6]
						-| ['compiler_generated'] )
				      ( <'true'> when 'true' ->
					    apply 'lc$^0'/1
						(_cor3)
					-| ['compiler_generated'] )
				      ( <_cor_variable> when 'true' ->
					    call 'erlang':'error'
						('badarg')
					-| ['compiler_generated'] )
				    end
				    -| ['list_comprehension'] )
			      <[]> when 'true' ->
				  []
			      ( <_180> when 'true' ->
				    primop 'match_fail'
					({'function_clause',Defs})
				-| ['compiler_generated'] )
			    end
			-| ['list_comprehension'] )
		  in  let <NewVarTree> =
			  %% Line 629
			  apply 'add_to_var_tree'/4
			      (Defined, _cor1, Instr, _cor0)
		      in  %% Line 630
			  apply 'traverse_code'/3
			      (Rest, NewVarTree, _cor0)
	  %% Line 631
	  <[],VarTree,_cor8> when 'true' ->
	      _cor1
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'traverse_code',3}}] )
	    -| ['compiler_generated'] )
	end
'add_to_var_tree'/4 =
    %% Line 642
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Var|Rest],VarTree,Instr,Label> when 'true' ->
	      let <_7926> =
		  %% Line 644
		  call 'gb_trees':'lookup'
		      (Var, _cor2)
	      in  let <_cor13> =
		      %% Line 644
		      case _7926 of
			%% Line 645
			<{'value',{OldInstr,OldLabel}}> when 'true' ->
			    do  %% Line 646
				call 'io':'format'
				    ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[87|[97|[114|[110|[105|[110|[103|[58|[32|[91|[126|[115|[58|[126|[119|[93|[58|[32|[86|[97|[114|[105|[97|[98|[108|[101|[58|[32|[126|[119|[32|[100|[101|[102|[105|[110|[101|[100|[32|[97|[32|[115|[101|[99|[111|[110|[100|[32|[116|[105|[109|[101|[10|[105|[110|[32|[73|[110|[115|[116|[114|[58|[32|[126|[119|[10|[97|[116|[32|[76|[97|[98|[101|[108|[58|[32|[126|[119|[10|[118|[97|[114|[105|[97|[98|[108|[101|[32|[119|[97|[115|[32|[102|[105|[114|[115|[116|[32|[100|[101|[102|[105|[110|[101|[100|[32|[97|[116|[32|[76|[97|[98|[101|[108|[40|[115|[41|[32|[126|[119|[10|[105|[110|[32|[73|[110|[115|[116|[114|[40|[115|[41|[58|[32|[126|[119|[10|[32|[45|[62|[32|[110|[111|[110|[32|[83|[83|[65|[32|[102|[111|[114|[109|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 650
																																																																																																																									       ['hipe_rtl_ssa'|[650|%% Line 651
																																																																																																																												    [Var|[_cor1|[_cor0|[OldLabel|[OldInstr|[]]]]]]]])
				%% Line 652
				call 'gb_trees':'update'
				    (Var, {[_cor1|OldInstr],[_cor0|OldLabel]}, _cor2)
			%% Line 653
			<'none'> when 'true' ->
			    %% Line 654
			    call 'gb_trees':'insert'
				(Var, {[_cor1|[]],[_cor0|[]]}, _cor2)
			( <_cor12> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_7926})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 656
		      apply 'add_to_var_tree'/4
			  (Rest, _cor13, _cor1, _cor0)
	  %% Line 657
	  <[],VarTree,_cor19,_cor20> when 'true' ->
	      _cor2
	  ( <_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'add_to_var_tree',4}}] )
	    -| ['compiler_generated'] )
	end
'add_args'/2 =
    %% Line 667
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Arg|Rest],VarTree> when 'true' ->
	      let <_cor2> =
		  %% Line 668
		  call 'gb_trees':'insert'
		      (Arg, {['argument_variable'],[0]}, _cor0)
	      in  %% Line 668
		  apply 'add_args'/2
		      (Rest, _cor2)
	  %% Line 669
	  <[],VarTree> when 'true' ->
	      _cor0
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'add_args',2}}] )
	    -| ['compiler_generated'] )
	end
'test_uses'/4 =
    %% Line 679
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Label|Rest],VarTree,DomTree,CFG> when 'true' ->
	      let <_5451> =
		  %% Line 717
		  call 'hipe_rtl_cfg':'bb'
		      (_cor0, Label)
	      in  let <Code> =
		      %% Line 717
		      case _5451 of
			%% Line 718
			<'not_found'> when 'true' ->
			    %% Line 719
			    call 'code_server':'error_msg'
				([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[114|[114|[111|[114|[58|[32|[91|[126|[115|[58|[126|[119|[93|[58|[32|[66|[97|[115|[105|[99|[32|[98|[108|[111|[99|[107|[32|[119|[105|[116|[104|[32|[108|[97|[98|[101|[108|[32|[126|[119|[32|[119|[97|[115|[32|[110|[111|[116|[32|[102|[111|[117|[110|[100|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['hipe_rtl_ssa'|[719|[Label|[]]]])
			%% Line 721
			<BB> when 'true' ->
			    %% Line 722
			    call 'hipe_bb':'code'
				(_5451)
		      end
		  in  do  %% Line 681
			  apply 'test_code'/6
			      (Code, _cor2, Label, _cor1, _cor0, [])
			  %% Line 682
			  apply 'test_uses'/4
			      (Rest, _cor2, _cor1, _cor0)
	  %% Line 683
	  <[],_X_VarTree,_X_DomTree,_X_CFG> when 'true' ->
	      %% Line 684
	      'ok'
	  ( <_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'test_uses',4}}] )
	    -| ['compiler_generated'] )
	end
'test_code'/6 =
    %% Line 689
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[Instr|Instrs],VarTree,Label,DomTree,CFG,Old> when 'true' ->
	      do  let <_63> =
		      %% Line 690
		      call 'hipe_rtl':'is_phi'
			  (Instr)
		  in  %% Line 690
		      case _63 of
			%% Line 691
			<'true'> when 'true' ->
			    let <ArgList> =
				%% Line 692
				call 'hipe_rtl':'phi_arglist'
				    (Instr)
			    in  do  %% Line 693
				    case ArgList of
				      %% Line 694
				      <[_X_Arg|[]]> when 'true' ->
					  do  %% Line 695
					      call 'io':'format'
						  ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[87|[97|[114|[110|[105|[110|[103|[58|[32|[91|[126|[115|[58|[126|[119|[93|[58|[32|[80|[104|[105|[32|[119|[105|[116|[104|[32|[111|[110|[108|[121|[32|[111|[110|[101|[32|[115|[111|[117|[114|[99|[101|[32|[97|[116|[32|[66|[66|[32|[119|[105|[116|[104|[32|[108|[97|[98|[101|[108|[32|[126|[119|[58|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['hipe_rtl_ssa'|[695|%% Line 696
																																																																[_cor3|[]]]])
					      'ok'
				      %% Line 702
				      <[_cor24|_cor25]> when 'true' ->
					  'ok'
				      ( <_cor11> when 'true' ->
					    primop 'match_fail'
						({'case_clause',ArgList})
					-| ['compiler_generated'] )
				    end
				    let <_cor15> =
					%% Line 704
					fun (_cor13) ->
					    case _cor13 of
					      <{Pred,Var}> when 'true' ->
						  let <_cor12> =
						      %% Line 706
						      apply 'get_code_from_label'/2
							  (_cor1, Pred)
						  in  %% Line 705
						      apply 'def_doms_use'/5
							  ([Var|[]], _cor4, Pred, _cor2, _cor12)
					      ( <_cor14> when 'true' ->
						    ( primop 'match_fail'
							  ({'function_clause',_cor13})
						      -| [{'function_name',{'-test_code/6-fun-0-',1}}] )
						-| ['compiler_generated'] )
					    end
				    in  %% Line 704
					call 'lists':'foreach'
					    (_cor15, ArgList)
			%% Line 708
			<'false'> when 'true' ->
			    let <Uses> =
				call 'hipe_rtl':'uses'
				    (Instr)
			    in  let <Uses> =
				    ( letrec
					  'lc$^0'/1 =
					      fun (_7449) ->
						  case _7449 of
						    <[U|_6186]> when 'true' ->
							( case call 'hipe_rtl_arch':'is_precoloured'
								   (U) of
							    <'false'> when 'true' ->
								let <_cor6> =
								    apply 'lc$^0'/1
									(_6186)
								in  ( [U|_cor6]
								      -| ['compiler_generated'] )
							    ( <'true'> when 'true' ->
								  apply 'lc$^0'/1
								      (_6186)
							      -| ['compiler_generated'] )
							    ( <_cor_variable> when 'true' ->
								  call 'erlang':'error'
								      ('badarg')
							      -| ['compiler_generated'] )
							  end
							  -| ['list_comprehension'] )
						    <[]> when 'true' ->
							[]
						    ( <_6190> when 'true' ->
							  primop 'match_fail'
							      ({'function_clause',_7449})
						      -| ['compiler_generated'] )
						  end
				      in  apply 'lc$^0'/1
					      (Uses)
				      -| ['list_comprehension'] )
				in  %% Line 710
				    apply 'def_doms_use'/5
					(Uses, _cor4, _cor3, _cor2, _cor0)
			( <_cor17> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_63})
			  -| ['compiler_generated'] )
		      end
		  %% Line 712
		  apply 'test_code'/6
		      (Instrs, _cor4, _cor3, _cor2, _cor1, [Instr|_cor0])
	  %% Line 713
	  <[],_X_VarTree,_X_Label,_X_DomTree,_X_CFG,_X_Old> when 'true' ->
	      %% Line 714
	      'ok'
	  ( <_cor23,_cor22,_cor21,_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'test_code',6}}] )
	    -| ['compiler_generated'] )
	end
'get_code_from_label'/2 =
    %% Line 716
    fun (_cor1,_cor0) ->
	let <_5451> =
	    %% Line 717
	    call 'hipe_rtl_cfg':'bb'
		(_cor1, _cor0)
	in  %% Line 717
	    case _5451 of
	      %% Line 718
	      <'not_found'> when 'true' ->
		  %% Line 719
		  call 'code_server':'error_msg'
		      ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[114|[114|[111|[114|[58|[32|[91|[126|[115|[58|[126|[119|[93|[58|[32|[66|[97|[115|[105|[99|[32|[98|[108|[111|[99|[107|[32|[119|[105|[116|[104|[32|[108|[97|[98|[101|[108|[32|[126|[119|[32|[119|[97|[115|[32|[110|[111|[116|[32|[102|[111|[117|[110|[100|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['hipe_rtl_ssa'|[719|[_cor0|[]]]])
	      %% Line 721
	      <BB> when 'true' ->
		  %% Line 722
		  call 'hipe_bb':'code'
		      (_5451)
	    end
'def_doms_use'/5 =
    %% Line 738
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[Var|Vars],VarTree,Label,DomTree,Old> when 'true' ->
	      do  let <_8704> =
		      %% Line 739
		      call 'gb_trees':'lookup'
			  (Var, _cor3)
		  in  %% Line 739
		      case _8704 of
			%% Line 740
			<{'value',{_cor34,[DefLabel|_cor35]}}> when 'true' ->
			    %% Line 741
			    case DefLabel of
			      %% Line 742
			      <0> when 'true' ->
				  'ok'
			      %% Line 744
			      <_cor36>
				  when call 'erlang':'=:='
					(DefLabel,
					 _cor2) ->
				  let <Fun> =
				      %% Line 745
				      fun (_cor9) ->
					  let <Defs> =
					      call 'hipe_rtl':'defines'
						  (_cor9)
					  in  let <Defs> =
						  ( letrec
							'lc$^0'/1 =
							    fun (_cor5) ->
								case _cor5 of
								  <[D|_9769]> when 'true' ->
								      ( case call 'hipe_rtl_arch':'is_precoloured'
										 (D) of
									  <'false'> when 'true' ->
									      let <_cor6> =
										  apply 'lc$^0'/1
										      (_9769)
									      in  ( [D|_cor6]
										    -| ['compiler_generated'] )
									  ( <'true'> when 'true' ->
										apply 'lc$^0'/1
										    (_9769)
									    -| ['compiler_generated'] )
									  ( <_cor_variable> when 'true' ->
										call 'erlang':'error'
										    ('badarg')
									    -| ['compiler_generated'] )
									end
									-| ['list_comprehension'] )
								  <[]> when 'true' ->
								      []
								  ( <_180> when 'true' ->
									primop 'match_fail'
									    ({'function_clause',_cor5})
								    -| ['compiler_generated'] )
								end
						    in  apply 'lc$^0'/1
							    (Defs)
						    -| ['list_comprehension'] )
					      in  let <_cor8> =
						      %% Line 746
						      fun (_cor6) ->
							  call 'erlang':'=='
							      (Var, _cor6)
						  in  %% Line 746
						      call 'lists':'any'
							  (_cor8, Defs)
				  in  let <_8574> =
					  %% Line 748
					  call 'lists':'any'
					      (Fun, _cor0)
				      in  %% Line 748
					  case _8574 of
					    %% Line 749
					    <'true'> when 'true' ->
						'ok'
					    %% Line 751
					    <'false'> when 'true' ->
						%% Line 752
						call 'io':'format'
						    ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[87|[97|[114|[110|[105|[110|[103|[58|[32|[91|[126|[115|[58|[126|[119|[93|[58|[32|[86|[97|[114|[105|[97|[98|[108|[101|[32|[58|[32|[126|[119|[32|[117|[115|[101|[100|[32|[98|[101|[102|[111|[114|[101|[32|[100|[101|[102|[105|[110|[105|[116|[105|[111|[110|[32|[105|[110|[32|[98|[98|[58|[32|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['hipe_rtl_ssa'|[752|%% Line 753
																																																																	[Var|[_cor2|[]]]]])
					    ( <_cor16> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_8574})
					      -| ['compiler_generated'] )
					  end
			      %% Line 755
			      <_cor37> when 'true' ->
				  let <_6427> =
				      %% Line 756
				      call 'hipe_dominators':'domTree_dominates'
					  (DefLabel, _cor2, _cor1)
				  in  %% Line 756
				      case _6427 of
					%% Line 757
					<'true'> when 'true' ->
					    'ok'
					%% Line 759
					<'false'> when 'true' ->
					    %% Line 760
					    call 'io':'format'
						([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[87|[97|[114|[110|[105|[110|[103|[58|[32|[91|[126|[115|[58|[126|[119|[93|[58|[32|[68|[101|[102|[105|[110|[105|[116|[105|[111|[110|[32|[100|[111|[101|[115|[32|[110|[111|[116|[32|[100|[111|[109|[105|[110|[97|[116|[101|[32|[117|[115|[101|[32|[102|[111|[114|[32|[118|[97|[114|[105|[97|[98|[108|[101|[58|[32|[126|[119|[32|[97|[116|[32|[108|[97|[98|[101|[108|[58|[32|[126|[119|[32|[40|[100|[101|[102|[105|[110|[105|[116|[105|[111|[110|[32|[108|[97|[98|[101|[108|[58|[32|[126|[119|[41|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 761
																																																																																									      ['hipe_rtl_ssa'|[761|%% Line 762
																																																																																												   [Var|[_cor2|[DefLabel|[]]]]]])
					( <_cor22> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_6427})
					  -| ['compiler_generated'] )
				      end
			    end
			%% Line 765
			<'none'> when 'true' ->
			    %% Line 766
			    call 'io':'format'
				([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[87|[97|[114|[110|[105|[110|[103|[58|[32|[91|[126|[115|[58|[126|[119|[93|[58|[32|[85|[115|[101|[32|[119|[105|[116|[104|[32|[110|[111|[32|[100|[101|[102|[105|[110|[105|[116|[105|[111|[110|[32|[111|[102|[32|[118|[97|[114|[105|[97|[98|[108|[101|[58|[32|[126|[119|[32|[97|[116|[32|[108|[97|[98|[101|[108|[58|[32|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['hipe_rtl_ssa'|[766|%% Line 767
																																																																		 [Var|[_cor2|[]]]]])
			( <_cor28> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_8704})
			  -| ['compiler_generated'] )
		      end
		  %% Line 769
		  apply 'def_doms_use'/5
		      (Vars, _cor3, _cor2, _cor1, _cor0)
	  %% Line 770
	  <[],_X_VarTree,_X_Label,_X_DomTree,_X_Old> when 'true' ->
	      %% Line 771
	      'ok'
	  ( <_cor33,_cor32,_cor31,_cor30,_cor29> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'def_doms_use',5}}] )
	    -| ['compiler_generated'] )
	end
'unconvert'/1 =
    %% Line 793
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 794
	    call 'hipe_rtl_cfg':'reverse_postorder'
		(_cor0)
	in  let <_cor2> =
		%% Line 794
		apply 'unconvert'/2
		    (_cor1, _cor0)
	    in  %% Line 794
		call 'hipe_rtl_cfg':'remove_trivial_bbs'
		    (_cor2)
'unconvert'/2 =
    %% Line 796
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Node|Nodes],CFG> when 'true' ->
	      let <BB> =
		  %% Line 797
		  call 'hipe_rtl_cfg':'bb'
		      (_cor0, Node)
	      in  let <Code> =
		      %% Line 798
		      call 'hipe_bb':'code'
			  (BB)
		  in  let <_9891> =
			  %% Line 799
			  apply 'getPhiFuncts'/2
			      (Code, [])
		      in  %% Line 799
			  case _9891 of
			    <{Phis,Code2}> when 'true' ->
				%% Line 800
				case Phis of
				  %% Line 801
				  <[]> when 'true' ->
				      %% Line 802
				      apply 'unconvert'/2
					  (Nodes, _cor0)
				  %% Line 803
				  <_cor13> when 'true' ->
				      let <BB2> =
					  %% Line 804
					  call 'hipe_bb':'code_update'
					      (BB, Code2)
				      in  let <CFG2> =
					      %% Line 805
					      call 'hipe_rtl_cfg':'bb_add'
						  (_cor0, Node, BB2)
					  in  let <Pred> =
						  %% Line 806
						  call 'hipe_rtl_cfg':'pred'
						      (CFG2, Node)
					      in  let <_cor2> =
						      %% Line 825
						      call 'gb_trees':'empty'
							  ()
						  in  let <PredMoveMap> =
							  %% Line 825
							  apply 'get_moves'/3
							      (Pred, Phis, _cor2)
						      in  let <CFG3> =
							      %% Line 808
							      apply 'insert_move_bbs'/3
								  (PredMoveMap, Node, CFG2)
							  in  %% Line 809
							      apply 'unconvert'/2
								  (Nodes, CFG3)
				end
			    ( <_cor4> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_9891})
			      -| ['compiler_generated'] )
			  end
	  %% Line 811
	  <[],CFG> when 'true' ->
	      _cor0
	  ( <_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'unconvert',2}}] )
	    -| ['compiler_generated'] )
	end
'get_moves'/3 =
    %% Line 827
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[Pred|Left],Phis,Map> when 'true' ->
	      let <Moves> =
		  %% Line 828
		  apply 'get_moves_from_phis'/3
		      (Pred, _cor1, [])
	      in  let <_1116> =
		      %% Line 830
		      call 'gb_trees':'lookup'
			  (Moves, _cor0)
		  in  let <_cor5> =
			  %% Line 830
			  case _1116 of
			    %% Line 831
			    <'none'> when 'true' ->
				call 'gb_trees':'insert'
				    (Moves, [Pred|[]], _cor0)
			    %% Line 832
			    <{'value',List}> when 'true' ->
				call 'gb_trees':'update'
				    (Moves, [Pred|List], _cor0)
			    ( <_cor4> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_1116})
			      -| ['compiler_generated'] )
			  end
		      in  %% Line 834
			  apply 'get_moves'/3
			      (Left, _cor1, _cor5)
	  %% Line 835
	  <[],_X_Phis,Map> when 'true' ->
	      %% Line 836
	      call 'gb_trees':'to_list'
		  (_cor0)
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'get_moves',3}}] )
	    -| ['compiler_generated'] )
	end
'get_moves_from_phis'/3 =
    %% Line 848
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Pred,[Phi|Left],Acc> when 'true' ->
	      let <Dst> =
		  %% Line 849
		  call 'hipe_rtl':'phi_dst'
		      (Phi)
	      in  let <Src> =
		      %% Line 850
		      call 'hipe_rtl':'phi_arg'
			  (Phi, _cor2)
		  in  let <NewAcc> =
			  %% Line 851
			  [{Dst,Src}|_cor0]
		      in  %% Line 852
			  apply 'get_moves_from_phis'/3
			      (_cor2, Left, NewAcc)
	  %% Line 853
	  <_X_Pred,[],Acc> when 'true' ->
	      _cor0
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'get_moves_from_phis',3}}] )
	    -| ['compiler_generated'] )
	end
'insert_move_bbs'/3 =
    %% Line 866
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{Ordset,Preds}|Left],Label,Cfg> when 'true' ->
	      let <_cor4> =
		  %% Line 867
		  apply 'create_moves'/2
		      (Ordset, [])
	      in  let <_cor3> =
		      %% Line 867
		      call 'hipe_rtl':'mk_goto'
			  (_cor1)
		  in  let <Code> =
			  %% Line 867
			  call 'erlang':'++'
			      (_cor4, [_cor3|[]])
		      in  let <BB> =
			      %% Line 868
			      call 'hipe_bb':'mk_bb'
				  (Code)
			  in  let <_cor7> =
				  %% Line 869
				  call 'hipe_rtl':'mk_new_label'
				      ()
			      in  let <NewLabel> =
				      %% Line 869
				      call 'hipe_rtl':'label_name'
					  (_cor7)
				  in  let <NewCfg1> =
					  %% Line 870
					  call 'hipe_rtl_cfg':'bb_add'
					      (_cor0, NewLabel, BB)
				      in  let <_cor14> =
					      %% Line 871
					      fun (_cor11,_cor10) ->
						  %% Line 872
						  call 'hipe_rtl_cfg':'redirect'
						      (_cor10, _cor11, _cor1, NewLabel)
					  in  let <NewCfg2> =
						  %% Line 871
						  call 'lists':'foldl'
						      (_cor14, NewCfg1, Preds)
					      in  %% Line 875
						  apply 'insert_move_bbs'/3
						      (Left, _cor1, NewCfg2)
	  %% Line 876
	  <[],_X_Label,Cfg> when 'true' ->
	      _cor0
	  ( <_cor18,_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'insert_move_bbs',3}}] )
	    -| ['compiler_generated'] )
	end
'create_moves'/2 =
    %% Line 879
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{X,_cor5}|Left],Acc>
	      when call 'erlang':'=:='
		    (_cor5,
		     X) ->
	      %% Line 880
	      apply 'create_moves'/2
		  (Left, _cor0)
	  %% Line 881
	  <[{Dst,Src}|Left],Acc> when 'true' ->
	      let <_cor2> =
		  %% Line 882
		  apply 'makePhiMove'/2
		      (Dst, Src)
	      in  %% Line 882
		  apply 'create_moves'/2
		      (Left, [_cor2|_cor0])
	  %% Line 883
	  <[],Acc> when 'true' ->
	      %% Line 885
	      call 'lists':'reverse'
		  (_cor0)
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'create_moves',2}}] )
	    -| ['compiler_generated'] )
	end
'getPhiFuncts'/2 =
    %% Line 897
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <List = [I|T],Result> when 'true' ->
	      let <_6528> =
		  %% Line 898
		  call 'hipe_rtl':'is_phi'
		      (I)
	      in  %% Line 898
		  case _6528 of
		    %% Line 899
		    <'true'> when 'true' ->
			%% Line 900
			apply 'getPhiFuncts'/2
			    (T, [I|_cor0])
		    %% Line 901
		    <'false'> when 'true' ->
			%% Line 902
			{_cor0,_cor1}
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_6528})
		      -| ['compiler_generated'] )
		  end
	  %% Line 904
	  <[],Result> when 'true' ->
	      %% Line 905
	      {_cor0,[]}
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'getPhiFuncts',2}}] )
	    -| ['compiler_generated'] )
	end
'remove_dead_code'/1 =
    %% Line 914
    fun (_cor0) ->
	let <Lbls> =
	    %% Line 915
	    call 'hipe_rtl_cfg':'reverse_postorder'
		(_cor0)
	in  let <Liveness> =
		%% Line 916
		apply 'ssa_liveness__analyze'/1
		    (_cor0)
	    in  let <_7957> =
		    %% Line 917
		    apply 'do_lbls'/4
			(Lbls, _cor0, Liveness, 'false')
		in  %% Line 917
		    case _7957 of
		      %% Line 918
		      <{CFG1,'true'}> when 'true' ->
			  %% Line 919
			  apply 'remove_dead_code'/1
			      (CFG1)
		      %% Line 920
		      <{CFG1,'false'}> when 'true' ->
			  CFG1
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_7957})
			-| ['compiler_generated'] )
		    end
'do_lbls'/4 =
    %% Line 924
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Lbl|Rest],CFG,Liveness,Changed> when 'true' ->
	      let <_cor4> =
		  %% Line 925
		  apply 'ssa_liveness__liveout'/2
		      (_cor1, Lbl)
	      in  let <LiveOut> =
		      %% Line 925
		      call 'gb_sets':'from_list'
			  (_cor4)
		  in  let <BB> =
			  %% Line 926
			  call 'hipe_rtl_cfg':'bb'
			      (_cor2, Lbl)
		      in  let <Code> =
			      %% Line 927
			      call 'hipe_bb':'code'
				  (BB)
			  in  let <_cor8> =
				  %% Line 928
				  call 'lists':'reverse'
				      (Code)
			      in  let <_4779> =
				      %% Line 928
				      apply 'do_code'/4
					  (_cor8, LiveOut, _cor0, [])
				  in  %% Line 928
				      case _4779 of
					<{NewCode,NewChanged}> when 'true' ->
					    let <NewBB> =
						%% Line 929
						call 'hipe_bb':'code_update'
						    (BB, NewCode)
					    in  let <NewCFG> =
						    %% Line 930
						    call 'hipe_rtl_cfg':'bb_add'
							(_cor2, Lbl, NewBB)
						in  %% Line 931
						    apply 'do_lbls'/4
							(Rest, NewCFG, _cor1, NewChanged)
					( <_cor9> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_4779})
					  -| ['compiler_generated'] )
				      end
	  %% Line 932
	  <[],CFG,_X_Liveness,Changed> when 'true' ->
	      %% Line 933
	      {_cor2,_cor0}
	  ( <_cor15,_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'do_lbls',4}}] )
	    -| ['compiler_generated'] )
	end
'do_code'/4 =
    %% Line 935
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Instr|Instrs],LiveOut,Changed,Acc> when 'true' ->
	      let <Def> =
		  %% Line 936
		  call 'hipe_rtl':'defines'
		      (Instr)
	      in  let <Use> =
		      %% Line 937
		      call 'hipe_rtl':'uses'
			  (Instr)
		  in  let <DefSet> =
			  %% Line 938
			  call 'gb_sets':'from_list'
			      (Def)
		      in  let <UseSet> =
			      %% Line 939
			      call 'gb_sets':'from_list'
				  (Use)
			  in  let <_cor8> =
				  %% Line 940
				  call 'gb_sets':'difference'
				      (_cor2, DefSet)
			      in  let <LiveIn> =
				      %% Line 940
				      call 'gb_sets':'union'
					  (_cor8, UseSet)
				  in  let <_cor10> =
					  %% Line 941
					  call 'gb_sets':'intersection'
					      (DefSet, _cor2)
				      in  let <_5205> =
					      %% Line 941
					      call 'gb_sets':'is_empty'
						  (_cor10)
					  in  %% Line 941
					      case _5205 of
						%% Line 942
						<'false'> when 'true' ->
						    %% Line 943
						    apply 'do_code'/4
							(Instrs, LiveIn, _cor1, [Instr|_cor0])
						%% Line 944
						<'true'> when 'true' ->
						    let <_8847> =
							%% Line 945
							call 'hipe_rtl':'is_safe'
							    (Instr)
						    in  %% Line 945
							case _8847 of
							  %% Line 946
							  <'true'> when 'true' ->
							      let <_3001> =
								  %% Line 947
								  call 'hipe_rtl':'is_call'
								      (Instr)
							      in  %% Line 947
								  case _3001 of
								    %% Line 948
								    <'true'> when 'true' ->
									let <_10295> =
									    %% Line 949
									    call 'hipe_rtl':'call_continuation'
										(Instr)
									in  %% Line 949
									    case _10295 of
									      %% Line 950
									      <[]> when 'true' ->
										  %% Line 951
										  apply 'do_code'/4
										      (Instrs, _cor2, 'true', _cor0)
									      %% Line 952
									      <SuccLblName> when 'true' ->
										  let <NewInstr> =
										      %% Line 953
										      call 'hipe_rtl':'mk_goto'
											  (_10295)
										  in  %% Line 954
										      apply 'do_code'/4
											  (Instrs, _cor2, 'true', [NewInstr|_cor0])
									    end
								    %% Line 956
								    <'false'> when 'true' ->
									%% Line 957
									apply 'do_code'/4
									    (Instrs, _cor2, 'true', _cor0)
								    ( <_cor13> when 'true' ->
									  primop 'match_fail'
									      ({'case_clause',_3001})
								      -| ['compiler_generated'] )
								  end
							  %% Line 959
							  <'false'> when 'true' ->
							      let <_6277> =
								  %% Line 960
								  call 'hipe_rtl':'is_call'
								      (Instr)
							      in  %% Line 960
								  case _6277 of
								    %% Line 961
								    <'true'> when 'true' ->
									let <_6454> =
									    %% Line 962
									    call 'hipe_rtl':'call_dstlist'
										(Instr)
									in  %% Line 962
									    case _6454 of
									      %% Line 963
									      <[]> when 'true' ->
										  %% Line 964
										  apply 'do_code'/4
										      (Instrs, LiveIn, _cor1, [Instr|_cor0])
									      %% Line 965
									      <[_X_Dst|[]]> when 'true' ->
										  let <NewInstr> =
										      %% Line 966
										      call 'hipe_rtl':'call_dstlist_update'
											  (Instr, [])
										  in  %% Line 967
										      apply 'do_code'/4
											  (Instrs, LiveIn, 'true', [NewInstr|_cor0])
									      %% Line 968
									      <[_cor23|_cor24]> when 'true' ->
										  %% Line 969
										  apply 'do_code'/4
										      (Instrs, LiveIn, _cor1, [Instr|_cor0])
									      ( <_cor15> when 'true' ->
										    primop 'match_fail'
											({'case_clause',_6454})
										-| ['compiler_generated'] )
									    end
								    %% Line 971
								    <'false'> when 'true' ->
									%% Line 972
									apply 'do_code'/4
									    (Instrs, LiveIn, _cor1, [Instr|_cor0])
								    ( <_cor16> when 'true' ->
									  primop 'match_fail'
									      ({'case_clause',_6277})
								      -| ['compiler_generated'] )
								  end
							  ( <_cor17> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_8847})
							    -| ['compiler_generated'] )
							end
						( <_cor18> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_5205})
						  -| ['compiler_generated'] )
					      end
	  %% Line 976
	  <[],_X_LiveOut,Changed,Acc> when 'true' ->
	      %% Line 977
	      {_cor0,_cor1}
	  ( <_cor22,_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'do_code',4}}] )
	    -| ['compiler_generated'] )
	end
'uses_to_rename'/1 =
    %% Line 48
    fun (_cor0) ->
	let <Uses> =
	    %% Line 49
	    call 'hipe_rtl':'uses'
		(_cor0)
	in  %% Line 50
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[U|_cor3]> when 'true' ->
				( case call 'hipe_rtl_arch':'is_precoloured'
					   (U) of
				    <'false'> when 'true' ->
					let <_cor6> =
					    apply 'lc$^0'/1
						(_cor3)
					in  ( [U|_cor6]
					      -| ['compiler_generated'] )
				    ( <'true'> when 'true' ->
					  apply 'lc$^0'/1
					      (_cor3)
				      -| ['compiler_generated'] )
				    ( <_cor_variable> when 'true' ->
					  call 'erlang':'error'
					      ('badarg')
				      -| ['compiler_generated'] )
				  end
				  -| ['list_comprehension'] )
			    <[]> when 'true' ->
				[]
			    ( <_6190> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (Uses)
	      -| ['list_comprehension'] )
'makePhiMove'/2 =
    %% Line 79
    fun (_cor1,_cor0) ->
	let <_1459> =
	    %% Line 80
	    call 'hipe_rtl':'is_fpreg'
		(_cor1)
	in  %% Line 80
	    case _1459 of
	      %% Line 81
	      <'false'> when 'true' ->
		  let <_5596> =
		      %% Line 82
		      call 'hipe_rtl':'is_fpreg'
			  (_cor0)
		  in  %% Line 82
		      case _5596 of
			%% Line 83
			<'false'> when 'true' ->
			    %% Line 84
			    call 'hipe_rtl':'mk_move'
				(_cor1, _cor0)
			( <_cor2> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_5596})
			  -| ['compiler_generated'] )
		      end
	      %% Line 86
	      <'true'> when 'true' ->
		  let <_2774> =
		      %% Line 87
		      call 'hipe_rtl':'is_fpreg'
			  (_cor0)
		  in  %% Line 87
		      case _2774 of
			%% Line 88
			<'true'> when 'true' ->
			    %% Line 89
			    call 'hipe_rtl':'mk_fmove'
				(_cor1, _cor0)
			( <_cor3> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_2774})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_1459})
		-| ['compiler_generated'] )
	    end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_rtl_ssa')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_rtl_ssa', _cor0)
end