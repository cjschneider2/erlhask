module 'hipe_sparc_finalise' ['finalise'/1,
			      'module_info'/0,
			      'module_info'/1]
    attributes [%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','sparc_mfa'},[{'typed_record_field',{'record_field',38,{'atom',38,'m'}},{'type',38,'union',[{'atom',38,'undefined'}|[{'type',38,'atom',[]}]]}}|[{'typed_record_field',{'record_field',38,{'atom',38,'f'}},{'type',38,'union',[{'atom',38,'undefined'}|[{'type',38,'atom',[]}]]}}|[{'typed_record_field',{'record_field',38,{'atom',38,'a'}},{'type',38,'union',[{'atom',38,'undefined'}|[{'type',38,'arity',[]}]]}}]]],[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{{'record','sparc_prim'},[{'record_field',39,{'atom',39,'prim'}}],[]}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{{'record','sparc_sdesc'},[{'record_field',40,{'atom',40,'exnlab'}}|[{'record_field',40,{'atom',40,'fsize'}}|[{'typed_record_field',{'record_field',40,{'atom',40,'arity'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'arity',[]}]]}}|[{'record_field',40,{'atom',40,'live'}}]]]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','sparc_temp'},[{'record_field',41,{'atom',41,'reg'}}|[{'record_field',41,{'atom',41,'type'}}|[{'record_field',41,{'atom',41,'allocatable'}}]]],[]}],
		%% Line 42
		'type' =
		    %% Line 42
		    [{{'record','sparc_simm13'},[{'record_field',42,{'atom',42,'value'}}],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','sparc_uimm5'},[{'record_field',43,{'atom',43,'value'}}],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','sparc_uimm6'},[{'record_field',44,{'atom',44,'value'}}],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','sparc_uimm22'},[{'record_field',45,{'atom',45,'value'}}],[]}],
		%% Line 79
		'type' =
		    %% Line 79
		    [{{'record','alu'},[{'record_field',79,{'atom',79,'aluop'}}|[{'record_field',79,{'atom',79,'src1'}}|[{'record_field',79,{'atom',79,'src2'}}|[{'record_field',79,{'atom',79,'dst'}}]]]],[]}],
		%% Line 80
		'type' =
		    %% Line 80
		    [{{'record','bp'},[{'record_field',80,{'atom',80,'cond'}}|[{'record_field',80,{'atom',80,'label'}}|[{'record_field',80,{'atom',80,'pred'}}]]],[]}],
		%% Line 84
		'type' =
		    %% Line 84
		    [{{'record','call_rec'},[{'record_field',84,{'atom',84,'fun'}}|[{'record_field',84,{'atom',84,'sdesc'}}|[{'record_field',84,{'atom',84,'linkage'}}]]],[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{{'record','call_tail'},[{'record_field',85,{'atom',85,'fun'}}|[{'record_field',85,{'atom',85,'linkage'}}]],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{{'record','comment'},[{'record_field',86,{'atom',86,'term'}}],[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{{'record','jmp'},[{'record_field',87,{'atom',87,'src1'}}|[{'record_field',87,{'atom',87,'src2'}}|[{'record_field',87,{'atom',87,'labels'}}]]],[]}],
		%% Line 88
		'type' =
		    %% Line 88
		    [{{'record','jmpl'},[{'record_field',88,{'atom',88,'src'}}|[{'record_field',88,{'atom',88,'sdesc'}}]],[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','label'},[{'record_field',89,{'atom',89,'label'}}],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{{'record','pseudo_bp'},[{'record_field',90,{'atom',90,'cond'}}|[{'record_field',90,{'atom',90,'true_label'}}|[{'record_field',90,{'atom',90,'false_label'}}|[{'record_field',90,{'atom',90,'pred'}}]]]],[]}],
		%% Line 92
		'type' =
		    %% Line 92
		    [{{'record','pseudo_call'},[{'record_field',92,{'atom',92,'funv'}}|[{'record_field',92,{'atom',92,'sdesc'}}|[{'record_field',92,{'atom',92,'contlab'}}|[{'record_field',92,{'atom',92,'linkage'}}]]]],[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','pseudo_call_prepare'},[{'record_field',93,{'atom',93,'nrstkargs'}}],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{{'record','pseudo_move'},[{'record_field',94,{'atom',94,'src'}}|[{'record_field',94,{'atom',94,'dst'}}]],[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{{'record','pseudo_ret'},[],[]}],
		%% Line 96
		'type' =
		    %% Line 96
		    [{{'record','pseudo_set'},[{'record_field',96,{'atom',96,'imm'}}|[{'record_field',96,{'atom',96,'dst'}}]],[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','pseudo_tailcall'},[{'record_field',97,{'atom',97,'funv'}}|[{'record_field',97,{'atom',97,'arity'}}|[{'record_field',97,{'atom',97,'stkargs'}}|[{'record_field',97,{'atom',97,'linkage'}}]]]],[]}],
		%% Line 98
		'type' =
		    %% Line 98
		    [{{'record','pseudo_tailcall_prepare'},[],[]}],
		%% Line 99
		'type' =
		    %% Line 99
		    [{{'record','rdy'},[{'record_field',99,{'atom',99,'dst'}}],[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{{'record','sethi'},[{'record_field',100,{'atom',100,'uimm22'}}|[{'record_field',100,{'atom',100,'dst'}}]],[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{{'record','store'},[{'record_field',101,{'atom',101,'stop'}}|[{'record_field',101,{'atom',101,'src'}}|[{'record_field',101,{'atom',101,'base'}}|[{'record_field',101,{'atom',101,'disp'}}]]]],[]}],
		%% Line 102
		'type' =
		    %% Line 102
		    [{{'record','fp_binary'},[{'record_field',102,{'atom',102,'fp_binop'}}|[{'record_field',102,{'atom',102,'src1'}}|[{'record_field',102,{'atom',102,'src2'}}|[{'record_field',102,{'atom',102,'dst'}}]]]],[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','fp_unary'},[{'record_field',103,{'atom',103,'fp_unop'}}|[{'record_field',103,{'atom',103,'src'}}|[{'record_field',103,{'atom',103,'dst'}}]]],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{{'record','pseudo_fload'},[{'record_field',104,{'atom',104,'base'}}|[{'record_field',104,{'atom',104,'disp'}}|[{'record_field',104,{'atom',104,'dst'}}|[{'record_field',104,{'atom',104,'is_single'}}]]]],[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{{'record','pseudo_fmove'},[{'record_field',105,{'atom',105,'src'}}|[{'record_field',105,{'atom',105,'dst'}}]],[]}],
		%% Line 106
		'type' =
		    %% Line 106
		    [{{'record','pseudo_fstore'},[{'record_field',106,{'atom',106,'src'}}|[{'record_field',106,{'atom',106,'base'}}|[{'record_field',106,{'atom',106,'disp'}}]]],[]}],
		%% Line 22
		'type' =
		    %% Line 22
		    [{'ct_alignment',{'type',22,'union',[{'integer',22,4}|[{'integer',22,8}]]},[]}],
		%% Line 24
		'type' =
		    %% Line 24
		    [{'hipe_constlbl',{'type',24,'non_neg_integer',[]},[]}],
		%% Line 25
		'type' =
		    %% Line 25
		    [{'hipe_consttab',{'type',25,'tuple',[{'remote_type',25,[{'atom',25,'dict'}|[{'atom',25,'dict'}|[[]]]]}|[{'type',25,'list',[{'type',25,'hipe_constlbl',[]}]}|[{'type',25,'hipe_constlbl',[]}]]]},[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{{'record','defun'},[{'typed_record_field',{'record_field',112,{'atom',112,'mfa'}},{'type',112,'union',[{'atom',112,'undefined'}|[{'type',112,'mfa',[]}]]}}|[{'record_field',112,{'atom',112,'formals'}}|[{'record_field',112,{'atom',112,'code'}}|[{'typed_record_field',{'record_field',113,{'atom',113,'data'}},{'type',113,'union',[{'atom',113,'undefined'}|[{'type',113,'hipe_consttab',[]}]]}}|[{'typed_record_field',{'record_field',114,{'atom',114,'isclosure'}},{'type',114,'union',[{'atom',114,'undefined'}|[{'type',114,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',115,{'atom',115,'isleaf'}},{'type',115,'union',[{'atom',115,'undefined'}|[{'type',115,'boolean',[]}]]}}|[{'record_field',116,{'atom',116,'var_range'}}|[{'record_field',116,{'atom',116,'label_range'}}]]]]]]]],[]}]]
'finalise'/1 =
    %% Line 25
    fun (_cor0) ->
	%% Line 26
	case _cor0 of
	  <{'defun',_cor7,_cor8,Code0,_cor9,_cor10,_cor11,_cor12,_cor13}> when 'true' ->
	      let <_cor2> =
		  %% Line 27
		  apply 'expand'/1
		      (Code0)
	      in  let <Code1> =
		      %% Line 27
		      apply 'peep'/1
			  (_cor2)
		  in  %% Line 28
		      call 'erlang':'setelement'
			  (4, _cor0, Code1)
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'expand'/1 =
    %% Line 30
    fun (_cor0) ->
	%% Line 31
	apply 'expand_list'/2
	    (_cor0, [])
'expand_list'/2 =
    %% Line 33
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[I|Insns],Accum> when 'true' ->
	      let <_cor2> =
		  %% Line 34
		  apply 'expand_insn'/2
		      (I, Accum)
	      in  %% Line 34
		  apply 'expand_list'/2
		      (Insns, _cor2)
	  %% Line 35
	  <[],Accum> when 'true' ->
	      %% Line 36
	      call 'lists':'reverse'
		  (Accum)
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'expand_list',2}}] )
	    -| ['compiler_generated'] )
	end
'expand_insn'/2 =
    %% Line 38
    fun (_cor1,_cor0) ->
	%% Line 39
	case _cor1 of
	  %% Line 40
	  <{'bp','a',_cor29,_cor30}> when 'true' ->
	      let <_cor2> =
		  %% Line 41
		  call 'hipe_sparc':'mk_nop'
		      ()
	      in  %% Line 41
		  [_cor2|%% Line 42
			 [_cor1|_cor0]]
	  %% Line 44
	  <{'call_rec',_cor31,_cor32,_cor33}> when 'true' ->
	      let <_cor3> =
		  %% Line 45
		  call 'hipe_sparc':'mk_nop'
		      ()
	      in  %% Line 45
		  [_cor3|%% Line 46
			 [_cor1|_cor0]]
	  %% Line 48
	  <{'call_tail',_cor34,_cor35}> when 'true' ->
	      let <RA> =
		  %% Line 49
		  call 'hipe_sparc':'mk_ra'
		      ()
	      in  let <TempRA> =
		      %% Line 50
		      call 'hipe_sparc':'mk_temp1'
			  ()
		  in  let <_cor6> =
			  %% Line 51
			  call 'hipe_sparc':'mk_mov'
			      (TempRA, RA)
		      in  let <_cor7> =
			      %% Line 53
			      call 'hipe_sparc':'mk_mov'
				  (RA, TempRA)
			  in  %% Line 51
			      [_cor6|%% Line 52
				     [_cor1|%% Line 53
					    [_cor7|_cor0]]]
	  %% Line 55
	  <{'jmp',_cor36,_cor37,_cor38}> when 'true' ->
	      let <_cor8> =
		  %% Line 56
		  call 'hipe_sparc':'mk_nop'
		      ()
	      in  %% Line 56
		  [_cor8|%% Line 57
			 [_cor1|_cor0]]
	  %% Line 59
	  <{'pseudo_bp',Cond,TrueLab,FalseLab,Pred}> when 'true' ->
	      let <_cor9> =
		  %% Line 60
		  call 'hipe_sparc':'mk_nop'
		      ()
	      in  let <_cor10> =
		      %% Line 61
		      call 'hipe_sparc':'mk_b_label'
			  (FalseLab)
		  in  let <_cor11> =
			  %% Line 62
			  call 'hipe_sparc':'mk_nop'
			      ()
		      in  let <_cor12> =
			      %% Line 63
			      call 'hipe_sparc':'mk_bp'
				  (Cond, TrueLab, Pred)
			  in  %% Line 60
			      [_cor9|%% Line 61
				     [_cor10|%% Line 62
					     [_cor11|%% Line 63
						     [_cor12|_cor0]]]]
	  %% Line 66
	  <{'pseudo_call',FunV,SDesc,ContLab,Linkage}> when 'true' ->
	      let <_cor13> =
		  %% Line 67
		  call 'hipe_sparc':'mk_nop'
		      ()
	      in  let <_cor14> =
		      %% Line 68
		      call 'hipe_sparc':'mk_b_label'
			  (ContLab)
		  in  let <_cor15> =
			  %% Line 69
			  call 'hipe_sparc':'mk_nop'
			      ()
		      in  let <_cor17> =
			      %% Line 70
			      case FunV of
				%% Line 71
				<{'sparc_temp',_cor39,_cor40,_cor41}> when 'true' ->
				    %% Line 72
				    call 'hipe_sparc':'mk_jmpl'
					(FunV, SDesc)
				%% Line 73
				<_cor42> when 'true' ->
				    %% Line 74
				    call 'hipe_sparc':'mk_call_rec'
					(FunV, SDesc, Linkage)
			      end
			  in  %% Line 67
			      [_cor13|%% Line 68
				      [_cor14|%% Line 69
					      [_cor15|%% Line 70
						      [_cor17|_cor0]]]]
	  %% Line 77
	  <{'pseudo_ret'}> when 'true' ->
	      let <RA> =
		  %% Line 78
		  call 'hipe_sparc':'mk_ra'
		      ()
	      in  let <_cor19> =
		      %% Line 79
		      call 'hipe_sparc':'mk_nop'
			  ()
		  in  let <_cor20> =
			  %% Line 80
			  call 'hipe_sparc':'mk_simm13'
			      (8)
		      in  let <_cor21> =
			      %% Line 80
			      call 'hipe_sparc':'mk_jmp'
				  (RA, _cor20, [])
			  in  %% Line 79
			      [_cor19|%% Line 80
				      [_cor21|_cor0]]
	  %% Line 82
	  <{'pseudo_tailcall_prepare'}> when 'true' ->
	      _cor0
	  %% Line 84
	  <_cor43> when 'true' ->
	      let <_cor23> =
		  %% Line 86
		  case _cor1 of
		    %% Line 87
		    <{'alu',_cor44,_cor45,_cor46,_cor47}> when 'true' ->
			'true'
		    %% Line 88
		    <{'comment',_cor48}> when 'true' ->
			'true'
		    %% Line 89
		    <{'label',_cor49}> when 'true' ->
			'true'
		    %% Line 90
		    <{'pseudo_set',_cor50,_cor51}> when 'true' ->
			'true'
		    %% Line 91
		    <{'rdy',_cor52}> when 'true' ->
			'true'
		    %% Line 92
		    <{'sethi',_cor53,_cor54}> when 'true' ->
			'true'
		    %% Line 93
		    <{'store',_cor55,_cor56,_cor57,_cor58}> when 'true' ->
			'true'
		    %% Line 94
		    <{'bp',_cor59,_cor60,_cor61}> when 'true' ->
			'false'
		    %% Line 96
		    <{'call_rec',_cor62,_cor63,_cor64}> when 'true' ->
			'false'
		    %% Line 97
		    <{'call_tail',_cor65,_cor66}> when 'true' ->
			'false'
		    %% Line 98
		    <{'jmp',_cor67,_cor68,_cor69}> when 'true' ->
			'false'
		    %% Line 99
		    <{'jmpl',_cor70,_cor71}> when 'true' ->
			'false'
		    %% Line 100
		    <{'pseudo_bp',_cor72,_cor73,_cor74,_cor75}> when 'true' ->
			'false'
		    %% Line 102
		    <{'pseudo_call',_cor76,_cor77,_cor78,_cor79}> when 'true' ->
			'false'
		    %% Line 103
		    <{'pseudo_call_prepare',_cor80}> when 'true' ->
			'false'
		    %% Line 104
		    <{'pseudo_move',_cor81,_cor82}> when 'true' ->
			'false'
		    %% Line 105
		    <{'pseudo_ret'}> when 'true' ->
			'false'
		    %% Line 106
		    <{'pseudo_tailcall',_cor83,_cor84,_cor85,_cor86}> when 'true' ->
			'false'
		    %% Line 107
		    <{'pseudo_tailcall_prepare'}> when 'true' ->
			'false'
		    %% Line 108
		    <{'fp_binary',_cor87,_cor88,_cor89,_cor90}> when 'true' ->
			'true'
		    %% Line 109
		    <{'fp_unary',_cor91,_cor92,_cor93}> when 'true' ->
			'true'
		    %% Line 110
		    <{'pseudo_fload',_cor94,_cor95,_cor96,_cor97}> when 'true' ->
			'true'
		    %% Line 111
		    <{'pseudo_fstore',_cor98,_cor99,_cor100}> when 'true' ->
			'true'
		    ( <_cor22> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor22})
		      -| ['compiler_generated'] )
		  end
	      in  do  %% Line 113
		      case _cor23 of
			%% Line 114
			<'true'> when 'true' ->
			    []
			%% Line 115
			<'false'> when 'true' ->
			    call 'erlang':'exit'
				({'hipe_sparc_finalise','expand_insn',_cor1})
			( <_cor25> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor25})
			  -| ['compiler_generated'] )
		      end
		      %% Line 117
		      [_cor1|_cor0]
	end
'peep'/1 =
    %% Line 130
    fun (_cor0) ->
	%% Line 131
	apply 'peep_list'/2
	    (_cor0, [])
'peep_list'/2 =
    %% Line 133
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'bp','a',Label,_cor4}|[{'sethi',{'sparc_uimm22',0},{'sparc_temp',0,_cor5,_cor6}}|Insns = [{'label',_cor7}|_cor8]]],Accum>
	      when call 'erlang':'=:='
		    (_cor7,
		     Label) ->
	      %% Line 134
	      apply 'peep_list'/2
		  (Insns, Accum)
	  %% Line 135
	  <[I|Insns],Accum> when 'true' ->
	      %% Line 136
	      apply 'peep_list'/2
		  (Insns, [I|Accum])
	  %% Line 137
	  <[],Accum> when 'true' ->
	      %% Line 138
	      call 'lists':'reverse'
		  (Accum)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'peep_list',2}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_sparc_finalise')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_sparc_finalise', _cor0)
end