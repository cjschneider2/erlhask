module 'hipe_arm_registers' ['all_precoloured'/0,
			     'allocatable_gpr'/0,
			     'arg'/1,
			     'args'/1,
			     'call_clobbered'/0,
			     'first_virtual'/0,
			     'heap_pointer'/0,
			     'is_arg'/1,
			     'is_fixed'/1,
			     'is_precoloured_gpr'/1,
			     'live_at_return'/0,
			     'lr'/0,
			     'module_info'/0,
			     'module_info'/1,
			     'nr_args'/0,
			     'pc'/0,
			     'proc_pointer'/0,
			     'reg_name_gpr'/1,
			     'return_value'/0,
			     'stack_pointer'/0,
			     'tailcall_clobbered'/0,
			     'temp1'/0,
			     'temp2'/0,
			     'temp3'/0]
    attributes []
'reg_name_gpr'/1 =
    %% Line 85
    fun (_cor0) ->
	let <_cor1> =
	    call 'erlang':'integer_to_list'
		(_cor0)
	in  [114|_cor1]
'first_virtual'/0 =
    %% Line 88
    fun () ->
	16
'is_precoloured_gpr'/1 =
    %% Line 92
    fun (_cor0) ->
	call 'erlang':'=<'
	    (_cor0, 15)
'all_precoloured'/0 =
    %% Line 94
    fun () ->
	%% Line 101
	[0|[1|[2|[3|[4|[5|[6|[7|[8|[9|[10|[11|[12|[13|[14|[15]]]]]]]]]]]]]]]]
'return_value'/0 =
    %% Line 104
    fun () ->
	0
'temp1'/0 =
    %% Line 106
    fun () ->
	8
'temp2'/0 =
    %% Line 107
    fun () ->
	12
'temp3'/0 =
    %% Line 108
    fun () ->
	7
'heap_pointer'/0 =
    %% Line 110
    fun () ->
	9
'stack_pointer'/0 =
    %% Line 112
    fun () ->
	10
'proc_pointer'/0 =
    %% Line 114
    fun () ->
	11
'lr'/0 =
    %% Line 116
    fun () ->
	14
'pc'/0 =
    %% Line 118
    fun () ->
	15
'allocatable_gpr'/0 =
    %% Line 120
    fun () ->
	%% Line 125
	[0|[1|[2|[3|[4|[5|[6|[7|[8|[14]]]]]]]]]]
'is_fixed'/1 =
    %% Line 130
    fun (_cor0) ->
	%% Line 131
	case _cor0 of
	  %% Line 132
	  <9> when 'true' ->
	      'true'
	  %% Line 133
	  <10> when 'true' ->
	      'true'
	  %% Line 134
	  <11> when 'true' ->
	      'true'
	  %% Line 139
	  <15> when 'true' ->
	      'true'
	  %% Line 140
	  <13> when 'true' ->
	      'true'
	  %% Line 141
	  <12> when 'true' ->
	      'true'
	  %% Line 142
	  <_cor3> when 'true' ->
	      'false'
	end
'nr_args'/0 =
    %% Line 145
    fun () ->
	3
'args'/1 =
    %% Line 147
    fun (_cor0) ->
	case _cor0 of
	  <Arity>
	      when call 'erlang':'is_integer'
		    (_cor0) ->
	      let <N> =
		  %% Line 148
		  call 'erlang':'min'
		      (Arity, 3)
	      in  let <_cor2> =
		      %% Line 149
		      call 'erlang':'-'
			  (N, 1)
		  in  %% Line 149
		      apply 'args'/2
			  (_cor2, [])
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'args',1}}] )
	    -| ['compiler_generated'] )
	end
'args'/2 =
    %% Line 151
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <-1,Rest> when 'true' ->
	      Rest
	  %% Line 152
	  <I,Rest> when 'true' ->
	      let <_cor3> =
		  call 'erlang':'-'
		      (I, 1)
	      in  let <_cor2> =
		      apply 'arg'/1
			  (I)
		  in  apply 'args'/2
			  (_cor3, [_cor2|Rest])
	end
'arg'/1 =
    %% Line 154
    fun (_cor0) ->
	%% Line 155
	case <> of
	  <>
	      when call 'erlang':'<'
		    (_cor0,
		     3) ->
	      %% Line 156
	      case _cor0 of
		%% Line 157
		<0> when 'true' ->
		    1
		%% Line 158
		<1> when 'true' ->
		    2
		%% Line 159
		<2> when 'true' ->
		    3
		%% Line 160
		<3> when 'true' ->
		    4
		%% Line 161
		<4> when 'true' ->
		    5
		%% Line 162
		<5> when 'true' ->
		    6
		%% Line 163
		<_cor3> when 'true' ->
		    call 'erlang':'exit'
			({'hipe_arm_registers','arg',_cor0})
	      end
	  %% Line 165
	  <> when 'true' ->
	      %% Line 166
	      call 'erlang':'exit'
		  ({'hipe_arm_registers','arg',_cor0})
	end
'is_arg'/1 =
    %% Line 169
    fun (_cor0) ->
	%% Line 170
	case _cor0 of
	  %% Line 171
	  <1> when 'true' ->
	      'true'
	  %% Line 172
	  <2> when 'true' ->
	      'true'
	  %% Line 173
	  <3> when 'true' ->
	      'true'
	  %% Line 174
	  <4> when 'true' ->
	      'false'
	  %% Line 175
	  <5> when 'true' ->
	      'false'
	  %% Line 176
	  <6> when 'true' ->
	      'false'
	  %% Line 177
	  <_cor3> when 'true' ->
	      'false'
	end
'call_clobbered'/0 =
    %% Line 180
    fun () ->
	%% Line 181
	[{0,'tagged'}|[{0,'untagged'}|[{1,'tagged'}|[{1,'untagged'}|[{2,'tagged'}|[{2,'untagged'}|[{3,'tagged'}|[{3,'untagged'}|[{4,'tagged'}|[{4,'untagged'}|[{5,'tagged'}|[{5,'untagged'}|[{6,'tagged'}|[{6,'untagged'}|[{7,'tagged'}|[{7,'untagged'}|[{8,'tagged'}|[{8,'untagged'}|[{12,'tagged'}|[{12,'untagged'}|[{14,'tagged'}|[{14,'untagged'}]]]]]]]]]]]]]]]]]]]]]]
'tailcall_clobbered'/0 =
    %% Line 199
    fun () ->
	%% Line 200
	[{8,'tagged'}|[{8,'untagged'}]]
'live_at_return'/0 =
    %% Line 202
    fun () ->
	%% Line 203
	[{9,'untagged'}|[{10,'untagged'}|[{11,'untagged'}]]]
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_arm_registers')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_arm_registers', _cor0)
end