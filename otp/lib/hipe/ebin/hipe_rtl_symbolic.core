module 'hipe_rtl_symbolic' ['expand'/1,
			    'module_info'/0,
			    'module_info'/1]
    attributes [%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','alu'},[{'record_field',28,{'atom',28,'dst'}}|[{'record_field',28,{'atom',28,'src1'}}|[{'record_field',28,{'atom',28,'op'}}|[{'record_field',28,{'atom',28,'src2'}}]]]],[]}],
		%% Line 29
		'type' =
		    %% Line 29
		    [{{'record','alub'},[{'record_field',29,{'atom',29,'dst'}}|[{'record_field',29,{'atom',29,'src1'}}|[{'record_field',29,{'atom',29,'op'}}|[{'record_field',29,{'atom',29,'src2'}}|[{'record_field',29,{'atom',29,'cond'}}|[{'record_field',29,{'atom',29,'true_label'}}|[{'record_field',29,{'atom',29,'false_label'}}|[{'record_field',29,{'atom',29,'p'}}]]]]]]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','branch'},[{'record_field',30,{'atom',30,'src1'}}|[{'record_field',30,{'atom',30,'src2'}}|[{'record_field',30,{'atom',30,'cond'}}|[{'record_field',30,{'atom',30,'true_label'}}|[{'record_field',30,{'atom',30,'false_label'}}|[{'record_field',30,{'atom',30,'p'}}]]]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{{'record','call'},[{'record_field',31,{'atom',31,'dstlist'}}|[{'record_field',31,{'atom',31,'fun'}}|[{'record_field',31,{'atom',31,'arglist'}}|[{'record_field',31,{'atom',31,'type'}}|[{'record_field',31,{'atom',31,'continuation'}}|[{'record_field',32,{'atom',32,'failcontinuation'}}|[{'record_field',32,{'atom',32,'normalcontinuation'},{'nil',32}}]]]]]]],[]}],
		%% Line 33
		'type' =
		    %% Line 33
		    [{{'record','comment'},[{'record_field',33,{'atom',33,'text'}}],[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','enter'},[{'record_field',34,{'atom',34,'fun'}}|[{'record_field',34,{'atom',34,'arglist'}}|[{'record_field',34,{'atom',34,'type'}}]]],[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','fconv'},[{'record_field',35,{'atom',35,'dst'}}|[{'record_field',35,{'atom',35,'src'}}]],[]}],
		%% Line 36
		'type' =
		    %% Line 36
		    [{{'record','fixnumop'},[{'record_field',36,{'atom',36,'dst'}}|[{'record_field',36,{'atom',36,'src'}}|[{'record_field',36,{'atom',36,'type'}}]]],[]}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{{'record','fload'},[{'record_field',37,{'atom',37,'dst'}}|[{'record_field',37,{'atom',37,'src'}}|[{'record_field',37,{'atom',37,'offset'}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','fmove'},[{'record_field',38,{'atom',38,'dst'}}|[{'record_field',38,{'atom',38,'src'}}]],[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{{'record','fp'},[{'record_field',39,{'atom',39,'dst'}}|[{'record_field',39,{'atom',39,'src1'}}|[{'record_field',39,{'atom',39,'op'}}|[{'record_field',39,{'atom',39,'src2'}}]]]],[]}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{{'record','fp_unop'},[{'record_field',40,{'atom',40,'dst'}}|[{'record_field',40,{'atom',40,'src'}}|[{'record_field',40,{'atom',40,'op'}}]]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','fstore'},[{'record_field',41,{'atom',41,'base'}}|[{'record_field',41,{'atom',41,'offset'}}|[{'record_field',41,{'atom',41,'src'}}]]],[]}],
		%% Line 42
		'type' =
		    %% Line 42
		    [{{'record','gctest'},[{'record_field',42,{'atom',42,'words'}}],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','goto'},[{'record_field',43,{'atom',43,'label'}}],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','goto_index'},[{'record_field',44,{'atom',44,'block'}}|[{'record_field',44,{'atom',44,'index'}}|[{'record_field',44,{'atom',44,'labels'}}]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','label'},[{'record_field',45,{'atom',45,'name'}}],[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{{'record','load'},[{'record_field',46,{'atom',46,'dst'}}|[{'record_field',46,{'atom',46,'src'}}|[{'record_field',46,{'atom',46,'offset'}}|[{'record_field',46,{'atom',46,'size'}}|[{'record_field',46,{'atom',46,'sign'}}]]]]],[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{{'record','load_address'},[{'record_field',47,{'atom',47,'dst'}}|[{'record_field',47,{'atom',47,'addr'}}|[{'record_field',47,{'atom',47,'type'}}]]],[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','load_atom'},[{'record_field',48,{'atom',48,'dst'}}|[{'record_field',48,{'atom',48,'atom'}}]],[]}],
		%% Line 49
		'type' =
		    %% Line 49
		    [{{'record','load_word_index'},[{'record_field',49,{'atom',49,'dst'}}|[{'record_field',49,{'atom',49,'block'}}|[{'record_field',49,{'atom',49,'index'}}]]],[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','move'},[{'record_field',50,{'atom',50,'dst'}}|[{'record_field',50,{'atom',50,'src'}}]],[]}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{{'record','multimove'},[{'record_field',51,{'atom',51,'dstlist'}}|[{'record_field',51,{'atom',51,'srclist'}}]],[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{{'record','phi'},[{'record_field',52,{'atom',52,'dst'}}|[{'record_field',52,{'atom',52,'id'}}|[{'record_field',52,{'atom',52,'arglist'}}]]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{{'record','return'},[{'record_field',53,{'atom',53,'varlist'}}],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{{'record','store'},[{'record_field',54,{'atom',54,'base'}}|[{'record_field',54,{'atom',54,'offset'}}|[{'record_field',54,{'atom',54,'src'}}|[{'record_field',54,{'atom',54,'size'}}]]]],[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{{'record','switch'},[{'record_field',55,{'atom',55,'src'}}|[{'record_field',55,{'atom',55,'labels'}}|[{'record_field',55,{'atom',55,'sorted_by'},{'nil',55}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','apply_N'},[{'typed_record_field',{'record_field',28,{'atom',28,'arity'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'type',28,'arity',[]}]]}}],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','closure_element'},[{'typed_record_field',{'record_field',30,{'atom',30,'n'}},{'type',30,'union',[{'atom',30,'undefined'}|[{'type',30,'arity',[]}]]}}],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','element'},[{'typed_record_field',{'record_field',32,{'atom',32,'typeinfo'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'type',32,'list',[]}]]}}],[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','gc_test'},[{'typed_record_field',{'record_field',34,{'atom',34,'need'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'type',34,'non_neg_integer',[]}]]}}],[]}],
		%% Line 36
		'type' =
		    %% Line 36
		    [{{'record','mkfun'},[{'typed_record_field',{'record_field',36,{'atom',36,'mfa'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'mfa',[]}]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'magic_num'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'integer',[]}]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'index'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'integer',[]}]]}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','unsafe_element'},[{'typed_record_field',{'record_field',38,{'atom',38,'index'}},{'type',38,'union',[{'atom',38,'undefined'}|[{'type',38,'non_neg_integer',[]}]]}}],[]}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{{'record','unsafe_update_element'},[{'typed_record_field',{'record_field',40,{'atom',40,'index'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'non_neg_integer',[]}]]}}],[]}]]
'expand'/1 =
    %% Line 36
    fun (_cor0) ->
	let <Linear> =
	    %% Line 37
	    call 'hipe_rtl_cfg':'linearize'
		(_cor0)
	in  let <Code> =
		%% Line 38
		call 'hipe_rtl':'rtl_code'
		    (Linear)
	    in  let <_cor8> =
		    %% Line 39
		    ( letrec
			  'lc$^0'/1 =
			      fun (_cor5) ->
				  case _cor5 of
				    <[Instr|_cor4]> when 'true' ->
					let <_cor6> =
					    %% Line 45
					    case Instr of
					      %% Line 46
					      <{'fixnumop',_cor3,_372,_462}> when 'true' ->
						  %% Line 47
						  apply 'expand_fixnumop'/1
						      (Instr)
					      %% Line 48
					      <{'gctest',_cor6}> when 'true' ->
						  %% Line 49
						  apply 'expand_gctest'/1
						      (Instr)
					      %% Line 50
					      <_cor7> when 'true' ->
						  Instr
					    end
					in  let <_cor7> =
						apply 'lc$^0'/1
						    (_cor4)
					    in  ( [_cor6|_cor7]
						  -| ['compiler_generated'] )
				    <[]> when 'true' ->
					[]
				    ( <_724> when 'true' ->
					  ( primop 'match_fail'
						({'function_clause',_cor5})
					    -| [{'function_name',{'lc$^0',1}}] )
				      -| ['compiler_generated'] )
				  end
		      in  apply 'lc$^0'/1
			      (Code)
		      -| ['list_comprehension'] )
		in  let <NewCode> =
			%% Line 40
			call 'lists':'flatten'
			    (_cor8)
		    in  let <Linear1> =
			    %% Line 41
			    call 'hipe_rtl':'rtl_code_update'
				(Linear, NewCode)
			in  %% Line 42
			    call 'hipe_rtl_cfg':'init'
				(Linear1)
'expand_fixnumop'/1 =
    %% Line 54
    fun (_cor0) ->
	let <_502> =
	    %% Line 55
	    call 'hipe_rtl':'fixnumop_type'
		(_cor0)
	in  %% Line 55
	    case _502 of
	      %% Line 56
	      <'untag'> when 'true' ->
		  let <Dst> =
		      %% Line 57
		      call 'hipe_rtl':'fixnumop_dst'
			  (_cor0)
		  in  let <Src> =
			  %% Line 58
			  call 'hipe_rtl':'fixnumop_src'
			      (_cor0)
		      in  %% Line 59
			  call 'hipe_tagscheme':'realuntag_fixnum'
			      (Dst, Src)
	      %% Line 60
	      <'tag'> when 'true' ->
		  let <Dst> =
		      %% Line 61
		      call 'hipe_rtl':'fixnumop_dst'
			  (_cor0)
		  in  let <Src> =
			  %% Line 62
			  call 'hipe_rtl':'fixnumop_src'
			      (_cor0)
		      in  %% Line 63
			  call 'hipe_tagscheme':'realtag_fixnum'
			      (Dst, Src)
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_502})
		-| ['compiler_generated'] )
	    end
'expand_gctest'/1 =
    %% Line 66
    fun (_cor0) ->
	let <HeapNeed> =
	    %% Line 67
	    call 'hipe_rtl':'gctest_words'
		(_cor0)
	in  let <_478> =
		%% Line 68
		call 'hipe_rtl_arch':'heap_pointer'
		    ()
	    in  %% Line 68
		case _478 of
		  <{GetHPInsn,HP,_X_PutHPInsn}> when 'true' ->
		      let <_597> =
			  %% Line 69
			  call 'hipe_rtl_arch':'heap_limit'
			      ()
		      in  %% Line 69
			  case _597 of
			    <{GetHLIMITInsn,H_LIMIT}> when 'true' ->
				let <ContLabel> =
				    %% Line 70
				    call 'hipe_rtl':'mk_new_label'
					()
				in  let <GCLabel> =
					%% Line 71
					call 'hipe_rtl':'mk_new_label'
					    ()
				    in  let <ContLabelName> =
					    %% Line 72
					    call 'hipe_rtl':'label_name'
						(ContLabel)
					in  let <GCLabelName> =
						%% Line 73
						call 'hipe_rtl':'label_name'
						    (GCLabel)
					    in  let <Tmp> =
						    %% Line 74
						    call 'hipe_rtl':'mk_new_reg'
							()
						in  let <_cor9> =
							%% Line 78
							call 'hipe_rtl':'mk_alu'
							    (Tmp, H_LIMIT, 'sub', HP)
						    in  let <StartCode> =
							    %% Line 76
							    [GetHPInsn|%% Line 77
								       [GetHLIMITInsn|%% Line 78
										      [_cor9|[]]]]
							in  let <_199> =
								%% Line 80
								call 'hipe_rtl':'is_reg'
								    (HeapNeed)
							    in  let <SeparateCode,GCAmount,HPAmount> =
								    %% Line 80
								    case _199 of
								      %% Line 81
								      <'true'> when 'true' ->
									  let <GA> =
									      %% Line 82
									      call 'hipe_rtl':'mk_new_reg_gcsafe'
										  ()
									  in  let <HA> =
										  %% Line 83
										  call 'hipe_rtl':'mk_new_reg_gcsafe'
										      ()
									      in  let <_cor13> =
										      %% Line 85
										      call 'hipe_rtl_arch':'log2_word_size'
											  ()
										  in  let <_cor14> =
											  %% Line 85
											  call 'hipe_rtl':'mk_imm'
											      (_cor13)
										      in  let <_cor15> =
											      %% Line 84
											      call 'hipe_rtl':'mk_alu'
												  (HA, HeapNeed, 'sll', _cor14)
											  in  let <_cor16> =
												  %% Line 86
												  call 'hipe_tagscheme':'realtag_fixnum'
												      (GA, HeapNeed)
											      in  %% Line 84
												  <[_cor15|_cor16],GA,HA>
								      %% Line 87
								      <'false'> when 'true' ->
									  let <WordsNeeded> =
									      %% Line 88
									      call 'hipe_rtl':'imm_value'
										  (HeapNeed)
									  in  let <_cor18> =
										  %% Line 89
										  call 'hipe_tagscheme':'mk_fixnum'
										      (WordsNeeded)
									      in  let <GA> =
										      %% Line 89
										      call 'hipe_rtl':'mk_imm'
											  (_cor18)
										  in  let <_cor20> =
											  %% Line 90
											  call 'hipe_rtl_arch':'word_size'
											      ()
										      in  let <_cor21> =
											      %% Line 90
											      call 'erlang':'*'
												  (WordsNeeded, _cor20)
											  in  let <HA> =
												  %% Line 90
												  call 'hipe_rtl':'mk_imm'
												      (_cor21)
											      in  %% Line 91
												  <[],GA,HA>
								      ( <_cor23> when 'true' ->
									    primop 'match_fail'
										({'case_clause',_199})
									-| ['compiler_generated'] )
								    end
								in  let <_cor26> =
									%% Line 94
									call 'hipe_rtl':'mk_branch'
									    (Tmp, 'lt', HPAmount, GCLabelName, ContLabelName, 1.00000000000000002082e-02)
								    in  let <_cor27> =
									    %% Line 96
									    call 'hipe_rtl':'mk_call'
										([], 'gc_1', [GCAmount|[]], ContLabelName, [], 'not_remote')
									in  let <EndCode> =
										%% Line 94
										[_cor26|%% Line 95
											[GCLabel|%% Line 96
												 [_cor27|%% Line 97
													 [ContLabel|[]]]]]
									    in  let <_cor29> =
										    %% Line 98
										    call 'erlang':'++'
											(SeparateCode, EndCode)
										in  %% Line 98
										    call 'erlang':'++'
											(StartCode, _cor29)
			    ( <_cor3> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_597})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor2> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_478})
		    -| ['compiler_generated'] )
		end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_rtl_symbolic')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_rtl_symbolic', _cor0)
end