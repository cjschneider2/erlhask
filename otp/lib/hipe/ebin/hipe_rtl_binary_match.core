module 'hipe_rtl_binary_match' ['gen_rtl'/5,
				'module_info'/0,
				'module_info'/1]
    attributes []
'gen_rtl'/5 =
    %% Line 46
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'bs_start_match',0},[Ms|[]],[Binary|[]],TrueLblName,FalseLblName> when 'true' ->
	      let <ReInitLbl> =
		  %% Line 47
		  call 'hipe_rtl':'mk_new_label'
		      ()
	      in  let <BinaryLbl> =
		      %% Line 48
		      call 'hipe_rtl':'mk_new_label'
			  ()
		  in  let <_cor7> =
			  %% Line 50
			  call 'hipe_rtl':'mk_move'
			      (Ms, Binary)
		      in  let <_cor9> =
			      %% Line 52
			      call 'hipe_rtl':'label_name'
				  (ReInitLbl)
			  in  let <_cor8> =
				  %% Line 53
				  call 'hipe_rtl':'label_name'
				      (BinaryLbl)
			      in  let <_cor10> =
				      %% Line 51
				      call 'hipe_tagscheme':'test_matchstate'
					  (Binary, _cor9, _cor8, %% Line 54
								 9.89999999999999991118e-01)
				  in  let <TestCode> =
					  %% Line 50
					  [_cor7|%% Line 51
						 [_cor10|%% Line 54
							 []]]
				      in  let <ReInitCode> =
					      %% Line 55
					      apply 'reinit_matchstate'/2
						  (Ms, _cor1)
					  in  let <OrdinaryCode> =
						  %% Line 56
						  apply 'make_matchstate'/5
						      (Binary, 0, Ms, _cor1, _cor0)
					      in  %% Line 57
						  [TestCode|[[ReInitLbl|ReInitCode]|[[BinaryLbl|OrdinaryCode]|[]]]]
	  %% Line 58
	  <{'bs_start_match',Max},[Ms|[]],[Binary|[]],TrueLblName,FalseLblName> when 'true' ->
	      let <MatchStateLbl> =
		  %% Line 59
		  call 'hipe_rtl':'mk_new_label'
		      ()
	      in  let <BinaryLbl> =
		      %% Line 60
		      call 'hipe_rtl':'mk_new_label'
			  ()
		  in  let <ReSizeLbl> =
			  %% Line 61
			  call 'hipe_rtl':'mk_new_label'
			      ()
		      in  let <ReInitLbl> =
			      %% Line 62
			      call 'hipe_rtl':'mk_new_label'
				  ()
			  in  let <_cor18> =
				  %% Line 64
				  call 'hipe_rtl':'mk_move'
				      (Ms, Binary)
			      in  let <_cor20> =
				      %% Line 66
				      call 'hipe_rtl':'label_name'
					  (MatchStateLbl)
				  in  let <_cor19> =
					  %% Line 67
					  call 'hipe_rtl':'label_name'
					      (BinaryLbl)
				      in  let <_cor21> =
					      %% Line 65
					      call 'hipe_tagscheme':'test_matchstate'
						  (Binary, _cor20, _cor19, %% Line 68
									   9.89999999999999991118e-01)
					  in  let <TestCode> =
						  %% Line 64
						  [_cor18|%% Line 65
							  [_cor21|%% Line 68
								  []]]
					      in  let <_cor24> =
						      %% Line 71
						      call 'hipe_rtl':'label_name'
							  (ReInitLbl)
						  in  let <_cor23> =
							  %% Line 72
							  call 'hipe_rtl':'label_name'
							      (ReSizeLbl)
						      in  let <_cor25> =
							      %% Line 70
							      call 'hipe_tagscheme':'compare_matchstate'
								  (Max, Ms, _cor24, _cor23)
							  in  let <MatchStateTestCode> =
								  %% Line 70
								  [_cor25|%% Line 72
									  []]
							      in  let <ReSizeCode> =
								      %% Line 73
								      apply 'resize_matchstate'/3
									  (Ms, Max, _cor1)
								  in  let <ReInitCode> =
									  %% Line 74
									  apply 'reinit_matchstate'/2
									      (Ms, _cor1)
								      in  let <OrdinaryCode> =
									      %% Line 75
									      apply 'make_matchstate'/5
										  (Binary, Max, Ms, _cor1, _cor0)
									  in  %% Line 76
									      [TestCode|[[MatchStateLbl|MatchStateTestCode]|[[ReSizeLbl|ReSizeCode]|%% Line 77
																		    [[ReInitLbl|ReInitCode]|[[BinaryLbl|OrdinaryCode]|[]]]]]]
	  %% Line 78
	  <{'bs_start_match',_X_Max},[],[Binary|[]],TrueLblName,FalseLblName> when 'true' ->
	      let <MatchStateLbl> =
		  %% Line 79
		  call 'hipe_rtl':'mk_new_label'
		      ()
	      in  let <_cor31> =
		      %% Line 81
		      call 'hipe_rtl':'label_name'
			  (MatchStateLbl)
		  in  let <_cor32> =
			  %% Line 80
			  call 'hipe_tagscheme':'test_bitstr'
			      (Binary, _cor1, _cor31, %% Line 81
						      9.89999999999999991118e-01)
		      in  let <_cor33> =
			      %% Line 83
			      call 'hipe_tagscheme':'test_matchstate'
				  (Binary, _cor1, _cor0, 9.89999999999999991118e-01)
			  in  %% Line 80
			      [_cor32|%% Line 82
				      [MatchStateLbl|%% Line 83
						     [_cor33|[]]]]
	  %% Line 84
	  <{{'bs_start_match','bitstr'},Max},[Ms|[]],[Binary|[]],TrueLblName,FalseLblName> when 'true' ->
	      %% Line 86
	      apply 'make_matchstate'/5
		  (Binary, Max, Ms, _cor1, _cor0)
	  %% Line 87
	  <{{'bs_start_match','bitstr'},_X_Max},[],[_X_Binary|[]],TrueLblName,_X_FalseLblName> when 'true' ->
	      let <_cor34> =
		  %% Line 89
		  call 'hipe_rtl':'mk_goto'
		      (_cor1)
	      in  %% Line 89
		  [_cor34|[]]
	  %% Line 90
	  <{{'bs_start_match','ok_matchstate'},Max},[Ms|[]],[Binary|[]],TrueLblName,FalseLblName> when 'true' ->
	      let <MatchStateLbl> =
		  %% Line 92
		  call 'hipe_rtl':'mk_new_label'
		      ()
	      in  let <BinaryLbl> =
		      %% Line 93
		      call 'hipe_rtl':'mk_new_label'
			  ()
		  in  let <_cor37> =
			  %% Line 95
			  call 'hipe_rtl':'mk_move'
			      (Ms, Binary)
		      in  let <_cor39> =
			      %% Line 97
			      call 'hipe_rtl':'label_name'
				  (MatchStateLbl)
			  in  let <_cor38> =
				  %% Line 98
				  call 'hipe_rtl':'label_name'
				      (BinaryLbl)
			      in  let <_cor40> =
				      %% Line 96
				      call 'hipe_tagscheme':'test_matchstate'
					  (Binary, _cor39, _cor38, %% Line 99
								   9.89999999999999991118e-01)
				  in  let <TestCode> =
					  %% Line 95
					  [_cor37|%% Line 96
						  [_cor40|%% Line 99
							  []]]
				      in  let <MatchStateCode> =
					      %% Line 100
					      apply 'reinit_matchstate'/2
						  (Ms, _cor1)
					  in  let <OrdinaryCode> =
						  %% Line 101
						  apply 'make_matchstate'/5
						      (Binary, Max, Ms, _cor1, _cor0)
					      in  let <_cor44> =
						      %% Line 102
						      [MatchStateLbl|call 'erlang':'++'
									 (MatchStateCode, [BinaryLbl|OrdinaryCode])]
						  in  %% Line 102
						      call 'erlang':'++'
							  (TestCode, _cor44)
	  %% Line 103
	  <{{'bs_start_match','ok_matchstate'},_X_Max},[],[Binary|[]],TrueLblName,FalseLblName> when 'true' ->
	      let <MatchStateLbl> =
		  %% Line 105
		  call 'hipe_rtl':'mk_new_label'
		      ()
	      in  let <_cor46> =
		      %% Line 107
		      call 'hipe_rtl':'label_name'
			  (MatchStateLbl)
		  in  let <_cor47> =
			  %% Line 106
			  call 'hipe_tagscheme':'test_bitstr'
			      (Binary, _cor1, _cor46, %% Line 107
						      9.89999999999999991118e-01)
		      in  let <_cor48> =
			      %% Line 109
			      call 'hipe_tagscheme':'test_matchstate'
				  (Binary, _cor1, _cor0, 9.89999999999999991118e-01)
			  in  %% Line 106
			      [_cor47|%% Line 108
				      [MatchStateLbl|%% Line 109
						     [_cor48|[]]]]
	  %% Line 111
	  <{'bs_get_integer',0,_X_Flags},[Dst|[NewMs|[]]],[Ms|[]],TrueLblName,_X_FalseLblName> when 'true' ->
	      let <_228> =
		  %% Line 788
		  call 'hipe_rtl':'mk_move'
		      (NewMs, Ms)
	      in  let <_cor52> =
		      %% Line 788
		      [_228|[]]
		  in  let <_cor49> =
			  %% Line 114
			  call 'hipe_rtl':'mk_imm'
			      (15)
		      in  let <_cor50> =
			      %% Line 114
			      call 'hipe_rtl':'mk_move'
				  (Dst, _cor49)
			  in  let <_cor51> =
				  %% Line 115
				  call 'hipe_rtl':'mk_goto'
				      (_cor1)
			      in  %% Line 113
				  call 'erlang':'++'
				      (_cor52, %% Line 114
					       [_cor50|%% Line 115
						       [_cor51|[]]])
	  %% Line 116
	  <{'bs_get_integer',Size,Flags},[Dst|[NewMs|[]]],Args,TrueLblName,FalseLblName> when 'true' ->
	      let <_6683> =
		  %% Line 118
		  apply 'is_illegal_const'/1
		      (Size)
	      in  %% Line 118
		  case _6683 of
		    %% Line 119
		    <'true'> when 'true' ->
			let <_cor53> =
			    %% Line 120
			    call 'hipe_rtl':'mk_goto'
				(_cor0)
			in  %% Line 120
			    [_cor53|[]]
		    %% Line 121
		    <'false'> when 'true' ->
			let <_4439> =
			    %% Line 768
			    call 'erlang':'band'
				(Flags, 4)
			in  let <Signed> =
				%% Line 768
				case _4439 of
				  %% Line 769
				  <4> when 'true' ->
				      'true'
				  %% Line 770
				  <0> when 'true' ->
				      'false'
				  ( <_5492> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_4439})
				    -| ['compiler_generated'] )
				end
			    in  let <_4686> =
				    %% Line 762
				    call 'erlang':'band'
					(Flags, 2)
				in  let <LittleEndian> =
					%% Line 762
					case _4686 of
					  %% Line 763
					  <2> when 'true' ->
					      'true'
					  %% Line 764
					  <0> when 'true' ->
					      'false'
					  ( <_4678> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_4686})
					    -| ['compiler_generated'] )
					end
				    in  let <_1571> =
					    %% Line 756
					    call 'erlang':'band'
						(Flags, 1)
					in  let <Aligned> =
						%% Line 756
						case _1571 of
						  %% Line 757
						  <1> when 'true' ->
						      'true'
						  %% Line 758
						  <0> when 'true' ->
						      'false'
						  ( <_6646> when 'true' ->
							primop 'match_fail'
							    ({'case_clause',_1571})
						    -| ['compiler_generated'] )
						end
					    in  let <_4747> =
						    %% Line 774
						    call 'erlang':'band'
							(Flags, 16)
						in  let <UnSafe> =
							%% Line 774
							case _4747 of
							  %% Line 775
							  <16> when 'true' ->
							      'true'
							  %% Line 776
							  <0> when 'true' ->
							      'false'
							  ( <_3140> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_4747})
							    -| ['compiler_generated'] )
							end
						    in  %% Line 126
							case _cor2 of
							  %% Line 127
							  <[Ms|[]]> when 'true' ->
							      let <_cor58> =
								  %% Line 128
								  call 'hipe_rtl':'mk_imm'
								      (Size)
							      in  let <CCode> =
								      %% Line 128
								      apply 'int_get_c_code'/6
									  (Dst, Ms, _cor58, Flags, _cor1, _cor0)
								  in  let <_8516> =
									  %% Line 788
									  call 'hipe_rtl':'mk_move'
									      (NewMs, Ms)
								      in  let <_cor61> =
									      %% Line 788
									      [_8516|[]]
									  in  let <_cor60> =
										  %% Line 131
										  apply 'get_static_int'/10
										      (Dst, Ms, Size, CCode, Signed, LittleEndian, Aligned, UnSafe, _cor1, _cor0)
									      in  %% Line 130
										  call 'erlang':'++'
										      (_cor61, _cor60)
							  %% Line 134
							  <[Ms|[Arg|[]]]> when 'true' ->
							      let <_2139> =
								  %% Line 135
								  apply 'make_size'/3
								      (Size, Arg, _cor0)
							      in  %% Line 135
								  case _2139 of
								    <{SizeCode1,SizeReg1}> when 'true' ->
									let <CCode> =
									    %% Line 136
									    apply 'int_get_c_code'/6
										(Dst, Ms, SizeReg1, Flags, _cor1, _cor0)
									in  let <InCode> =
										%% Line 138
										apply 'get_dynamic_int'/9
										    (Dst, Ms, SizeReg1, CCode, Signed, LittleEndian, Aligned, _cor1, _cor0)
									    in  let <_2908> =
										    %% Line 788
										    call 'hipe_rtl':'mk_move'
											(NewMs, Ms)
										in  let <_cor66> =
											%% Line 788
											[_2908|[]]
										    in  let <_cor65> =
											    %% Line 141
											    call 'erlang':'++'
												(SizeCode1, InCode)
											in  %% Line 141
											    call 'erlang':'++'
												(_cor66, _cor65)
								    ( <_cor62> when 'true' ->
									  primop 'match_fail'
									      ({'badmatch',_2139})
								      -| ['compiler_generated'] )
								  end
							  ( <_cor67> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_cor2})
							    -| ['compiler_generated'] )
							end
		    ( <_cor68> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_6683})
		      -| ['compiler_generated'] )
		  end
	  %% Line 145
	  <{'bs_get_float',Size,Flags},[Dst1|[NewMs|[]]],Args,TrueLblName,FalseLblName> when 'true' ->
	      let <_6926> =
		  %% Line 147
		  apply 'is_illegal_const'/1
		      (Size)
	      in  %% Line 147
		  case _6926 of
		    %% Line 148
		    <'true'> when 'true' ->
			let <_cor69> =
			    %% Line 149
			    call 'hipe_rtl':'mk_goto'
				(_cor0)
			in  %% Line 149
			    [_cor69|[]]
		    %% Line 150
		    <'false'> when 'true' ->
			let <_cor79> =
			    %% Line 151
			    call 'hipe_rtl':'mk_gctest'
				(3)
			in  let <_cor78> =
				%% Line 152
				case _cor2 of
				  %% Line 153
				  <[Ms|[]]> when 'true' ->
				      let <_cor70> =
					  %% Line 154
					  call 'hipe_rtl':'mk_imm'
					      (Size)
				      in  let <CCode> =
					      %% Line 315
					      apply 'get_c_code'/7
						  ('bs_get_float_2', Dst1, Ms, _cor70, Flags, _cor1, _cor0)
					  in  let <_7896> =
						  %% Line 788
						  call 'hipe_rtl':'mk_move'
						      (NewMs, Ms)
					      in  let <_cor72> =
						      %% Line 788
						      [_7896|[]]
						  in  %% Line 156
						      call 'erlang':'++'
							  (_cor72, CCode)
				  %% Line 157
				  <[Ms|[Arg|[]]]> when 'true' ->
				      let <_6016> =
					  %% Line 158
					  apply 'make_size'/3
					      (Size, Arg, _cor0)
				      in  %% Line 158
					  case _6016 of
					    <{SizeCode,SizeReg}> when 'true' ->
						let <CCode> =
						    %% Line 315
						    apply 'get_c_code'/7
							('bs_get_float_2', Dst1, Ms, SizeReg, Flags, _cor1, _cor0)
						in  let <_2213> =
							%% Line 788
							call 'hipe_rtl':'mk_move'
							    (NewMs, Ms)
						    in  let <_cor76> =
							    %% Line 788
							    [_2213|[]]
							in  let <_cor75> =
								%% Line 161
								call 'erlang':'++'
								    (SizeCode, CCode)
							    in  %% Line 161
								call 'erlang':'++'
								    (_cor76, _cor75)
					    ( <_cor73> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_6016})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor77> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor2})
				    -| ['compiler_generated'] )
				end
			    in  %% Line 151
				[_cor79|_cor78]
		    ( <_cor80> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_6926})
		      -| ['compiler_generated'] )
		  end
	  %% Line 165
	  <{'bs_get_binary_all',Unit,_X_Flags},[Dst|[]],[Ms|[]],TrueLblName,FalseLblName> when 'true' ->
	      let <_cor82> =
		  %% Line 167
		  call 'hipe_rtl':'mk_gctest'
		      (5)
	      in  let <_cor81> =
		      %% Line 168
		      apply 'get_binary_all'/5
			  (Dst, Unit, Ms, _cor1, _cor0)
		  in  %% Line 167
		      [_cor82|_cor81]
	  %% Line 170
	  <{'bs_get_binary_all_2',Unit,_X_Flags},[Dst|[NewMs|[]]],[Ms|[]],TrueLblName,FalseLblName> when 'true' ->
	      let <_cor86> =
		  %% Line 172
		  call 'hipe_rtl':'mk_gctest'
		      (5)
	      in  let <_8178> =
		      %% Line 788
		      call 'hipe_rtl':'mk_move'
			  (NewMs, Ms)
		  in  let <_cor84> =
			  %% Line 788
			  [_8178|[]]
		      in  let <_cor83> =
			      %% Line 174
			      apply 'get_binary_all'/5
				  (Dst, Unit, Ms, _cor1, _cor0)
			  in  let <_cor85> =
				  %% Line 173
				  call 'erlang':'++'
				      (_cor84, _cor83)
			      in  %% Line 172
				  [_cor86|_cor85]
	  %% Line 176
	  <{'bs_get_binary',Size,Flags},[Dst|[NewMs|[]]],Args,TrueLblName,FalseLblName> when 'true' ->
	      let <_8329> =
		  %% Line 178
		  apply 'is_illegal_const'/1
		      (Size)
	      in  %% Line 178
		  case _8329 of
		    %% Line 179
		    <'true'> when 'true' ->
			let <_cor87> =
			    %% Line 180
			    call 'hipe_rtl':'mk_goto'
				(_cor0)
			in  %% Line 180
			    [_cor87|[]]
		    %% Line 181
		    <'false'> when 'true' ->
			let <_4747> =
			    %% Line 774
			    call 'erlang':'band'
				(Flags, 16)
			in  let <Unsafe> =
				%% Line 774
				case _4747 of
				  %% Line 775
				  <16> when 'true' ->
				      'true'
				  %% Line 776
				  <0> when 'true' ->
				      'false'
				  ( <_6056> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_4747})
				    -| ['compiler_generated'] )
				end
			    in  let <_cor185,Ms,SizeCode,SizeReg> =
				    %% Line 183
				    case _cor2 of
				      %% Line 184
				      <[Ms|[]]> when 'true' ->
					  let <SizeReg> =
					      %% Line 185
					      call 'hipe_rtl':'mk_new_reg'
						  ()
					  in  let <_cor90> =
						  %% Line 186
						  call 'hipe_rtl':'mk_imm'
						      (Size)
					      in  let <_cor91> =
						      %% Line 186
						      call 'hipe_rtl':'mk_move'
							  (SizeReg, _cor90)
						  in  let <SizeCode> =
							  %% Line 186
							  [_cor91|[]]
						      in  <SizeCode,Ms,SizeCode,SizeReg>
				      %% Line 187
				      <[Ms|[BitsVar|[]]]> when 'true' ->
					  let <_cor180> =
					      %% Line 188
					      apply 'make_size'/3
						  (Size, BitsVar, _cor0)
					  in  %% Line 188
					      case _cor180 of
						<{SizeCode,SizeReg}> when 'true' ->
						    <_cor180,Ms,SizeCode,SizeReg>
						( <_cor93> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_cor180})
						  -| ['compiler_generated'] )
					      end
				      ( <_cor94> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor2})
					-| ['compiler_generated'] )
				    end
				in  let <InCode> =
					%% Line 190
					apply 'get_binary'/6
					    (Dst, Ms, SizeReg, Unsafe, _cor1, _cor0)
				    in  let <_cor99> =
					    %% Line 192
					    call 'hipe_rtl':'mk_gctest'
						(5)
					in  let <_5694> =
						%% Line 788
						call 'hipe_rtl':'mk_move'
						    (NewMs, Ms)
					    in  let <_cor97> =
						    %% Line 788
						    [_5694|[]]
						in  let <_cor96> =
							%% Line 193
							call 'erlang':'++'
							    (SizeCode, InCode)
						    in  let <_cor98> =
							    %% Line 193
							    call 'erlang':'++'
								(_cor97, _cor96)
							in  %% Line 192
							    [_cor99|_cor98]
		    ( <_cor100> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_8329})
		      -| ['compiler_generated'] )
		  end
	  %% Line 196
	  <'bs_get_utf8',[Dst|[NewMs|[]]],[Ms|[]],TrueLblName,FalseLblName> when 'true' ->
	      let <_4295> =
		  %% Line 788
		  call 'hipe_rtl':'mk_move'
		      (NewMs, Ms)
	      in  let <_cor102> =
		      %% Line 788
		      [_4295|[]]
		  in  let <_cor101> =
			  %% Line 197
			  apply 'utf8_get_c_code'/4
			      (Dst, Ms, _cor1, _cor0)
		      in  %% Line 197
			  call 'erlang':'++'
			      (_cor102, _cor101)
	  %% Line 199
	  <{'bs_get_utf16',Flags},[Dst|[NewMs|[]]],[Ms|[]],TrueLblName,FalseLblName> when 'true' ->
	      let <_3668> =
		  %% Line 788
		  call 'hipe_rtl':'mk_move'
		      (NewMs, Ms)
	      in  let <_cor104> =
		      %% Line 788
		      [_3668|[]]
		  in  let <_cor103> =
			  %% Line 201
			  apply 'utf16_get_c_code'/5
			      (Flags, Dst, Ms, _cor1, _cor0)
		      in  %% Line 200
			  call 'erlang':'++'
			      (_cor104, _cor103)
	  %% Line 203
	  <'bs_validate_unicode_retract',[NewMs|[]],[Src|[Ms|[]]],TrueLblName,FalseLblName> when 'true' ->
	      let <_5364> =
		  %% Line 788
		  call 'hipe_rtl':'mk_move'
		      (NewMs, Ms)
	      in  let <_cor106> =
		      %% Line 788
		      [_5364|[]]
		  in  let <_cor105> =
			  %% Line 206
			  apply 'validate_unicode_retract_c_code'/4
			      (Src, Ms, _cor1, _cor0)
		      in  %% Line 205
			  call 'erlang':'++'
			      (_cor106, _cor105)
	  %% Line 208
	  <{'bs_test_tail',NumBits},[NewMs|[]],[Ms|[]],TrueLblName,FalseLblName> when 'true' ->
	      let <_3347> =
		  %% Line 209
		  apply 'extract_matchstate_vars'/2
		      (['offset'|['binsize']], Ms)
	      in  %% Line 209
		  case _3347 of
		    <{[Offset|[BinSize|[]]],ExCode}> when 'true' ->
			let <_8270> =
			    %% Line 788
			    call 'hipe_rtl':'mk_move'
				(NewMs, Ms)
			in  let <_cor112> =
				%% Line 788
				[_8270|[]]
			    in  let <_cor108> =
				    %% Line 211
				    call 'hipe_rtl':'mk_imm'
					(NumBits)
				in  let <TrueLbl> =
					%% Line 661
					call 'hipe_rtl':'mk_new_label'
					    ()
				    in  let <_cor5> =
					    %% Line 664
					    call 'hipe_rtl':'label_name'
						(TrueLbl)
					in  let <_cor6> =
						%% Line 663
						call 'hipe_rtl':'mk_alub'
						    (Offset, Offset, 'add', _cor108, 'ltu', _cor0, _cor5)
					    in  let <_cor109> =
						    %% Line 663
						    [_cor6|%% Line 665
							   [TrueLbl|[]]]
						in  let <_cor110> =
							%% Line 212
							call 'hipe_rtl':'mk_branch'
							    (Offset, 'eq', BinSize, _cor1, _cor0)
						    in  let <_cor111> =
							    %% Line 210
							    call 'erlang':'++'
								(ExCode, %% Line 211
									 [_cor109|%% Line 212
										  [_cor110|[]]])
							in  %% Line 210
							    call 'erlang':'++'
								(_cor112, _cor111)
		    ( <_cor107> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3347})
		      -| ['compiler_generated'] )
		  end
	  %% Line 214
	  <{'bs_test_unit',Unit},[],[Ms|[]],TrueLblName,FalseLblName> when 'true' ->
	      let <_767> =
		  %% Line 215
		  apply 'extract_matchstate_vars'/2
		      (['offset'|['binsize']], Ms)
	      in  %% Line 215
		  case _767 of
		    <{[Offset|[BinSize|[]]],ExCode}> when 'true' ->
			let <SizeReg> =
			    %% Line 216
			    call 'hipe_rtl':'mk_new_reg'
				()
			in  let <_cor115> =
				%% Line 218
				call 'hipe_rtl':'mk_alu'
				    (SizeReg, BinSize, 'sub', Offset)
			    in  let <_cor116> =
				    %% Line 219
				    apply 'test_alignment_code'/4
					(SizeReg, Unit, _cor1, _cor0)
				in  %% Line 217
				    call 'erlang':'++'
					(ExCode, %% Line 218
						 [_cor115|_cor116])
		    ( <_cor113> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_767})
		      -| ['compiler_generated'] )
		  end
	  %% Line 220
	  <{'bs_test_tail',NumBits},[],[Ms|[]],TrueLblName,FalseLblName> when 'true' ->
	      let <_2321> =
		  %% Line 221
		  apply 'extract_matchstate_vars'/2
		      (['offset'|['binsize']], Ms)
	      in  %% Line 221
		  case _2321 of
		    <{[Offset|[BinSize|[]]],ExCode}> when 'true' ->
			let <_cor118> =
			    %% Line 223
			    call 'hipe_rtl':'mk_imm'
				(NumBits)
			in  let <TrueLbl> =
				%% Line 661
				call 'hipe_rtl':'mk_new_label'
				    ()
			    in  let <_cor5> =
				    %% Line 664
				    call 'hipe_rtl':'label_name'
					(TrueLbl)
				in  let <_cor6> =
					%% Line 663
					call 'hipe_rtl':'mk_alub'
					    (Offset, Offset, 'add', _cor118, 'ltu', _cor0, _cor5)
				    in  let <_cor119> =
					    %% Line 663
					    [_cor6|%% Line 665
						   [TrueLbl|[]]]
					in  let <_cor120> =
						%% Line 224
						call 'hipe_rtl':'mk_branch'
						    (Offset, 'eq', BinSize, _cor1, _cor0)
					    in  %% Line 222
						call 'erlang':'++'
						    (ExCode, %% Line 223
							     [_cor119|%% Line 224
								      [_cor120|[]]])
		    ( <_cor117> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_2321})
		      -| ['compiler_generated'] )
		  end
	  %% Line 226
	  <{'bs_skip_bits_all',Unit,_X_Flags},Dst,[Ms|[]],TrueLblName,FalseLblName> when 'true' ->
	      let <_cor122> =
		  %% Line 228
		  apply 'opt_update_ms'/2
		      (_cor3, Ms)
	      in  let <_cor121> =
		      %% Line 229
		      apply 'skip_bits_all'/4
			  (Unit, Ms, _cor1, _cor0)
		  in  %% Line 228
		      call 'erlang':'++'
			  (_cor122, _cor121)
	  %% Line 231
	  <{'bs_skip_bits',Bits},Dst,[Ms|Args],TrueLblName,FalseLblName> when 'true' ->
	      let <_cor128> =
		  %% Line 232
		  apply 'opt_update_ms'/2
		      (_cor3, Ms)
	      in  let <_cor127> =
		      %% Line 233
		      case Args of
			%% Line 234
			<[]> when 'true' ->
			    let <_cor123> =
				%% Line 235
				call 'hipe_rtl':'mk_imm'
				    (Bits)
			    in  %% Line 235
				apply 'skip_bits2'/4
				    (Ms, _cor123, _cor1, _cor0)
			%% Line 236
			<[Arg|[]]> when 'true' ->
			    let <_5016> =
				%% Line 237
				apply 'make_size'/3
				    (Bits, Arg, _cor0)
			    in  %% Line 237
				case _5016 of
				  <{SizeCode,SizeReg}> when 'true' ->
				      let <InCode> =
					  %% Line 238
					  apply 'skip_bits2'/4
					      (Ms, SizeReg, _cor1, _cor0)
				      in  %% Line 239
					  call 'erlang':'++'
					      (SizeCode, InCode)
				  ( <_cor124> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_5016})
				    -| ['compiler_generated'] )
				end
			( <_cor126> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',Args})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 232
		      call 'erlang':'++'
			  (_cor128, _cor127)
	  %% Line 242
	  <{'bs_restore',Slot},[NewMs|[]],[Ms|[]],TrueLblName,_X_FalseLblName> when 'true' ->
	      let <Tmp1> =
		  %% Line 243
		  call 'hipe_rtl':'mk_new_reg_gcsafe'
		      ()
	      in  let <_1467> =
		      %% Line 788
		      call 'hipe_rtl':'mk_move'
			  (NewMs, Ms)
		  in  let <_cor133> =
			  %% Line 788
			  [_1467|[]]
		      in  let <_cor130> =
			      %% Line 245
			      call 'hipe_tagscheme':'get_field_from_term'
				  ({'matchstate',{'saveoffset',Slot}}, Ms, Tmp1)
			  in  let <_cor131> =
				  %% Line 246
				  call 'hipe_tagscheme':'set_field_from_term'
				      ({'matchstate',{'matchbuffer','offset'}}, Ms, Tmp1)
			      in  let <_cor132> =
				      %% Line 247
				      call 'hipe_rtl':'mk_goto'
					  (_cor1)
				  in  %% Line 244
				      call 'erlang':'++'
					  (_cor133, %% Line 245
						    [_cor130|%% Line 246
							     [_cor131|%% Line 247
								      [_cor132|[]]]])
	  %% Line 249
	  <{'bs_save',Slot},[NewMs|[]],[Ms|[]],TrueLblName,_X_FalseLblName> when 'true' ->
	      let <Offset> =
		  %% Line 715
		  call 'hipe_rtl':'mk_new_reg_gcsafe'
		      ()
	      in  let <_cor5> =
		      %% Line 717
		      call 'hipe_tagscheme':'get_field_from_term'
			  ({'matchstate',{'matchbuffer','offset'}}, Ms, Offset)
		  in  let <Offset,Instr> = <Offset,_cor5>
		      in  let <_4439> =
			      %% Line 788
			      call 'hipe_rtl':'mk_move'
				  (NewMs, Ms)
			  in  let <_cor137> =
				  %% Line 788
				  [_4439|[]]
			      in  let <_cor135> =
				      %% Line 253
				      call 'hipe_tagscheme':'set_field_from_term'
					  ({'matchstate',{'saveoffset',Slot}}, Ms, Offset)
				  in  let <_cor136> =
					  %% Line 254
					  call 'hipe_rtl':'mk_goto'
					      (_cor1)
				      in  %% Line 251
					  call 'erlang':'++'
					      (_cor137, %% Line 252
							[Instr|%% Line 253
							       [_cor135|%% Line 254
									[_cor136|[]]]])
	  %% Line 256
	  <{'bs_match_string',String,ByteSize},Dst,[Ms|[]],TrueLblName,FalseLblName> when 'true' ->
	      let <_7192> =
		  %% Line 259
		  apply 'extract_matchstate_vars'/2
		      (['offset'|['binsize'|['base']]], Ms)
	      in  %% Line 258
		  case _7192 of
		    <{[Offset|[BinSize|[Base|[]]]],Instrs}> when 'true' ->
			let <_2555> =
			    %% Line 793
			    call 'hipe_rtl':'mk_new_label'
				()
			in  let <_6363> =
				%% Line 793
				call 'hipe_rtl':'mk_new_label'
				    ()
			    in  let <_4408> =
				    %% Line 793
				    apply 'create_lbls'/1
					(1)
				in  let <_4749> =
					%% Line 793
					[_6363|_4408]
				    in  let <_2461> =
					    %% Line 793
					    [_2555|_4749]
					in  %% Line 260
					    case _2461 of
					      <[SuccessLbl|[ALbl|[ULbl|[]]]]> when 'true' ->
						  let <_5507> =
						      %% Line 1074
						      call 'hipe_rtl':'mk_new_reg_gcsafe'
							  ()
						  in  let <_4059> =
							  %% Line 1074
							  call 'hipe_rtl':'mk_new_reg_gcsafe'
							      ()
						      in  let <_8170> =
							      %% Line 1074
							      apply 'create_gcsafe_regs'/1
								  (0)
							  in  let <_6138> =
								  %% Line 1074
								  [_4059|_8170]
							      in  let <_6143> =
								      %% Line 1074
								      [_5507|_6138]
								  in  %% Line 261
								      case _6143 of
									<[NewOffset|[BitOffset|[]]]> when 'true' ->
									    let <_cor141> =
										%% Line 262
										call 'hipe_rtl_arch':'word_size'
										    ()
									    in  let <Unit> =
										    %% Line 262
										    call 'erlang':'-'
											(_cor141, 1)
										in  let <Loops> =
											%% Line 263
											call 'erlang':'div'
											    (ByteSize, Unit)
										    in  let <_cor144> =
											    %% Line 266
											    apply 'opt_update_ms'/2
												(_cor3, Ms)
											in  let <_cor146> =
												%% Line 267
												call 'erlang':'*'
												    (ByteSize, 8)
											    in  let <_cor147> =
												    %% Line 267
												    call 'hipe_rtl':'mk_imm'
													(_cor146)
												in  let <_cor145> =
													%% Line 268
													call 'hipe_rtl':'label_name'
													    (SuccessLbl)
												    in  let <_cor148> =
													    %% Line 267
													    apply 'check_size'/6
														(Offset, _cor147, BinSize, NewOffset, _cor145, _cor0)
													in  let <Init> =
														%% Line 265
														[Instrs|%% Line 266
															[_cor144|%% Line 267
																 [_cor148|%% Line 269
																	  [SuccessLbl|[]]]]]
													    in  let <_cor152> =
														    %% Line 271
														    call 'hipe_rtl':'mk_imm'
															(7)
														in  let <_cor151> =
															%% Line 272
															call 'hipe_rtl':'label_name'
															    (ALbl)
														    in  let <_cor150> =
															    %% Line 272
															    call 'hipe_rtl':'label_name'
																(ULbl)
															in  let <_cor153> =
																%% Line 271
																call 'hipe_rtl':'mk_alub'
																    (BitOffset, Offset, 'and', _cor152, 'eq', _cor151, _cor150)
															    in  let <SplitCode> =
																    %% Line 271
																    [_cor153|%% Line 272
																	     []]
																in  let <_3452> =
																	%% Line 273
																	call 'erlang':'div'
																	    (ByteSize, Unit)
																    in  %% Line 273
																	case _3452 of
																	  <_cor181>
																	      when call 'erlang':'=:='
																		    (_3452,
																		     Loops) ->
																	      let <SkipSize> =
																		  %% Line 274
																		  call 'erlang':'*'
																		      (Loops, Unit)
																	      in  let <_cor158> =
																		      %% Line 276
																		      case Loops of
																			%% Line 277
																			<0> when 'true' ->
																			    %% Line 278
																			    {[],[]}
																			%% Line 279
																			<_cor182> when 'true' ->
																			    %% Line 280
																			    apply 'create_loops'/7
																				(Loops, Unit, String, Base, Offset, BitOffset, _cor0)
																		      end
																		  in  %% Line 275
																		      case _cor158 of
																			<{ACode1,UCode1}> when 'true' ->
																			    %% Line 283
																			    case ( String
																				   -| ['reuse_for_context'] ) of
																			      <#{#<_cor183>(SkipSize,8,'binary',['unsigned'|['big']]),
																				 #<RestString>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
																				  let <_9455> =
																				      %% Line 285
																				      call 'erlang':'rem'
																					  (ByteSize, Unit)
																				  in  let <_cor162> =
																					  %% Line 285
																					  case _9455 of
																					    %% Line 286
																					    <0> when 'true' ->
																						%% Line 287
																						{[],[]}
																					    %% Line 288
																					    <Rem> when 'true' ->
																						%% Line 289
																						apply 'create_rests'/6
																						    (_9455, RestString, Base, Offset, BitOffset, _cor0)
																					  end
																				      in  %% Line 284
																					  case _cor162 of
																					    <{ACode2,UCode2}> when 'true' ->
																						let <GoTo> =
																						    %% Line 291
																						    call 'hipe_rtl':'mk_goto'
																							(_cor1)
																						in  let <_cor167> =
																							%% Line 292
																							case _cor3 of
																							  %% Line 293
																							  <[]> when 'true' ->
																							      [GoTo|[]]
																							  %% Line 294
																							  <[NewMs|[]]> when 'true' ->
																							      let <_cor165> =
																								  %% Line 780
																								  call 'hipe_tagscheme':'set_field_from_term'
																								      ({'matchstate',{'matchbuffer','offset'}}, NewMs, NewOffset)
																							      in  [_cor165|[GoTo|[]]]
																							  ( <_cor166> when 'true' ->
																								primop 'match_fail'
																								    ({'case_clause',_cor3})
																							    -| ['compiler_generated'] )
																							end
																						    in  %% Line 296
																							[Init|[SplitCode|[ALbl|[ACode1|[ACode2|[_cor167|[ULbl|[UCode1|[UCode2|[_cor167|[]]]]]]]]]]]
																					    ( <_cor163> when 'true' ->
																						  primop 'match_fail'
																						      ({'badmatch',_cor162})
																					      -| ['compiler_generated'] )
																					  end
																			      ( <_cor160> when 'true' ->
																				    do  primop 'bs_context_to_binary'
																					    (String)
																					primop 'match_fail'
																					    ({'badmatch',String})
																				-| ['compiler_generated'] )
																			    end
																			( <_cor159> when 'true' ->
																			      primop 'match_fail'
																				  ({'badmatch',_cor158})
																			  -| ['compiler_generated'] )
																		      end
																	  ( <_cor155> when 'true' ->
																		primop 'match_fail'
																		    ({'badmatch',_3452})
																	    -| ['compiler_generated'] )
																	end
									( <_cor140> when 'true' ->
									      primop 'match_fail'
										  ({'badmatch',_6143})
									  -| ['compiler_generated'] )
								      end
					      ( <_cor139> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_2461})
						-| ['compiler_generated'] )
					    end
		    ( <_cor138> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_7192})
		      -| ['compiler_generated'] )
		  end
	  %% Line 298
	  <'bs_context_to_binary',[Bin|[]],[Var|[]],TrueLblName,_X_FalseLblName> when 'true' ->
	      let <MSLabel> =
		  %% Line 299
		  call 'hipe_rtl':'mk_new_label'
		      ()
	      in  let <_cor170> =
		      %% Line 300
		      call 'hipe_rtl':'mk_move'
			  (Bin, Var)
		  in  let <_cor171> =
			  %% Line 301
			  call 'hipe_rtl':'label_name'
			      (MSLabel)
		      in  let <_cor172> =
			      %% Line 301
			      call 'hipe_tagscheme':'test_matchstate'
				  (Var, _cor171, _cor1, %% Line 302
							5.00000000000000000000e-01)
			  in  let <_cor173> =
				  %% Line 304
				  call 'hipe_tagscheme':'convert_matchstate'
				      (Bin)
			      in  let <_cor174> =
				      %% Line 305
				      call 'hipe_rtl':'mk_goto'
					  (_cor1)
				  in  %% Line 300
				      [_cor170|%% Line 301
					       [_cor172|%% Line 303
							[MSLabel|%% Line 304
								 [_cor173|%% Line 305
									  [_cor174|[]]]]]]
	  ( <_cor179,_cor178,_cor177,_cor176,_cor175> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'gen_rtl',5}}] )
	    -| ['compiler_generated'] )
	end
'int_get_c_code'/6 =
    %% Line 309
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 310
	    apply 'make_int_gc_code'/1
		(_cor3)
	in  let <_cor6> =
		%% Line 311
		apply 'get_c_code'/7
		    ('bs_get_integer_2', _cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
	    in  %% Line 310
		call 'erlang':'++'
		    (_cor7, _cor6)
'get_c_code'/7 =
    %% Line 317
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <SizeReg> =
	    %% Line 318
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <FlagsReg> =
		%% Line 319
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <MatchBuf> =
		    %% Line 320
		    call 'hipe_rtl':'mk_new_reg'
			()
		in  let <RetLabel> =
			%% Line 321
			call 'hipe_rtl':'mk_new_label'
			    ()
		    in  let <_cor11> =
			    %% Line 322
			    call 'hipe_tagscheme':'mk_non_value'
				()
			in  let <NonVal> =
				%% Line 322
				call 'hipe_rtl':'mk_imm'
				    (_cor11)
			    in  let <_cor13> =
				    %% Line 323
				    call 'hipe_rtl':'mk_move'
					(SizeReg, _cor3)
				in  let <_cor14> =
					%% Line 324
					call 'hipe_rtl':'mk_imm'
					    (_cor2)
				    in  let <_cor15> =
					    %% Line 324
					    call 'hipe_rtl':'mk_move'
						(FlagsReg, _cor14)
					in  let <_cor16> =
						%% Line 325
						call 'hipe_tagscheme':'extract_matchbuffer'
						    (MatchBuf, _cor4)
					    in  let <_cor17> =
						    %% Line 327
						    call 'hipe_rtl':'label_name'
							(RetLabel)
						in  let <_cor18> =
							%% Line 326
							call 'hipe_rtl_arch':'call_bif'
							    ([_cor5|[]], _cor6, [SizeReg|[FlagsReg|[MatchBuf|[]]]], _cor17, _cor0)
						    in  let <_cor19> =
							    %% Line 329
							    call 'hipe_rtl':'mk_branch'
								(_cor5, 'eq', NonVal, _cor0, _cor1, 1.00000000000000002082e-02)
							in  %% Line 323
							    [_cor13|%% Line 324
								    [_cor15|%% Line 325
									    [_cor16|%% Line 326
										    [_cor18|%% Line 328
											    [RetLabel|%% Line 329
												      [_cor19|[]]]]]]]
'utf8_get_c_code'/4 =
    %% Line 331
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <MatchBuf> =
	    %% Line 332
	    call 'hipe_rtl':'mk_new_reg'
		()
	in  let <_cor5> =
		%% Line 333
		call 'hipe_tagscheme':'mk_non_value'
		    ()
	    in  let <NonVal> =
		    %% Line 333
		    call 'hipe_rtl':'mk_imm'
			(_cor5)
		in  let <_cor7> =
			%% Line 334
			call 'hipe_tagscheme':'extract_matchbuffer'
			    (MatchBuf, _cor2)
		    in  let <_cor8> =
			    %% Line 335
			    call 'hipe_rtl_arch':'call_bif'
				([_cor3|[]], 'bs_get_utf8', [MatchBuf|[]], [], [])
			in  let <_cor9> =
				%% Line 336
				call 'hipe_rtl':'mk_branch'
				    (_cor3, 'eq', NonVal, _cor0, _cor1, 1.00000000000000002082e-02)
			    in  %% Line 334
				[_cor7|%% Line 335
				       [_cor8|%% Line 336
					      [_cor9|[]]]]
'utf16_get_c_code'/5 =
    %% Line 338
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <MatchBuf> =
	    %% Line 339
	    call 'hipe_rtl':'mk_new_reg'
		()
	in  let <_cor6> =
		%% Line 340
		call 'hipe_tagscheme':'mk_non_value'
		    ()
	    in  let <NonVal> =
		    %% Line 340
		    call 'hipe_rtl':'mk_imm'
			(_cor6)
		in  let <FlagsReg> =
			%% Line 341
			call 'hipe_rtl':'mk_new_reg_gcsafe'
			    ()
		    in  let <_cor9> =
			    %% Line 342
			    call 'hipe_tagscheme':'extract_matchbuffer'
				(MatchBuf, _cor2)
			in  let <_cor10> =
				%% Line 343
				call 'hipe_rtl':'mk_imm'
				    (_cor4)
			    in  let <_cor11> =
				    %% Line 343
				    call 'hipe_rtl':'mk_move'
					(FlagsReg, _cor10)
				in  let <_cor12> =
					%% Line 344
					call 'hipe_rtl_arch':'call_bif'
					    ([_cor3|[]], 'bs_get_utf16', [MatchBuf|[FlagsReg|[]]], [], [])
				    in  let <_cor13> =
					    %% Line 345
					    call 'hipe_rtl':'mk_branch'
						(_cor3, 'eq', NonVal, _cor0, _cor1, 1.00000000000000002082e-02)
					in  %% Line 342
					    [_cor9|%% Line 343
						   [_cor11|%% Line 344
							   [_cor12|%% Line 345
								   [_cor13|[]]]]]
'validate_unicode_retract_c_code'/4 =
    %% Line 347
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <MatchBuf> =
	    %% Line 348
	    call 'hipe_rtl':'mk_new_reg'
		()
	in  let <Zero> =
		%% Line 349
		call 'hipe_rtl':'mk_imm'
		    (0)
	    in  let <Tmp> =
		    %% Line 350
		    call 'hipe_rtl':'mk_new_reg'
			()
		in  let <_cor7> =
			%% Line 351
			call 'hipe_tagscheme':'extract_matchbuffer'
			    (MatchBuf, _cor2)
		    in  let <_cor8> =
			    %% Line 352
			    call 'hipe_rtl_arch':'call_bif'
				([Tmp|[]], 'bs_validate_unicode_retract', %% Line 353
									  [MatchBuf|[_cor3|[]]], %% Line 353
												 [], %% Line 353
												     [])
			in  let <_cor9> =
				%% Line 354
				call 'hipe_rtl':'mk_branch'
				    (Tmp, 'eq', Zero, _cor0, _cor1, 1.00000000000000002082e-02)
			    in  %% Line 351
				[_cor7|%% Line 352
				       [_cor8|%% Line 354
					      [_cor9|[]]]]
'create_loops'/7 =
    %% Line 358
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_7860> =
	    %% Line 1074
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_4649> =
		%% Line 1074
		[_7860|%% Line 1076
		       []]
	    in  %% Line 359
		case _4649 of
		  <[Reg|[]]> when 'true' ->
		      let <AlignedFun> =
			  %% Line 360
			  fun (_cor11) ->
			      let <_cor8> =
				  %% Line 361
				  call 'erlang':'*'
				      (_cor5, 8)
			      in  let <_cor9> =
				      %% Line 361
				      apply 'get_int_to_reg'/6
					  (Reg, _cor8, _cor3, _cor2, 'srl', %% Line 362
									    {'unsigned','big'})
				  in  let <_cor10> =
					  %% Line 363
					  apply 'update_and_test'/5
					      (Reg, _cor5, _cor2, _cor11, _cor0)
				      in  %% Line 361
					  [_cor9|%% Line 363
						 [_cor10|[]]]
		      in  let <UnAlignedFun> =
			      %% Line 365
			      fun (_cor17) ->
				  let <_cor14> =
				      %% Line 366
				      call 'erlang':'*'
					  (_cor5, 8)
				  in  let <_cor15> =
					  %% Line 366
					  apply 'get_unaligned_int_to_reg'/7
					      (Reg, _cor14, _cor3, _cor2, _cor1, %% Line 368
										 'srl', %% Line 368
											{'unsigned','big'})
				      in  let <_cor16> =
					      %% Line 369
					      apply 'update_and_test'/5
						  (Reg, _cor5, _cor2, _cor17, _cor0)
					  in  %% Line 366
					      [_cor15|_cor16]
			  in  let <_cor21> =
				  %% Line 371
				  apply 'create_loops'/4
				      (_cor6, _cor5, _cor4, AlignedFun)
			      in  let <_cor20> =
				      %% Line 372
				      apply 'create_loops'/4
					  (_cor6, _cor5, _cor4, UnAlignedFun)
				  in  %% Line 371
				      {_cor21,_cor20}
		  ( <_cor7> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_4649})
		    -| ['compiler_generated'] )
		end
'create_rests'/6 =
    %% Line 374
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_2366> =
	    %% Line 1074
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_6920> =
		%% Line 1074
		[_2366|%% Line 1076
		       []]
	    in  %% Line 375
		case _6920 of
		  <[Reg|[]]> when 'true' ->
		      let <AlignedFun> =
			  %% Line 376
			  fun (_cor10) ->
			      let <_cor7> =
				  %% Line 377
				  call 'erlang':'*'
				      (_cor5, 8)
			      in  let <_cor8> =
				      %% Line 377
				      apply 'get_int_to_reg'/6
					  (Reg, _cor7, _cor3, _cor2, 'srl', %% Line 378
									    {'unsigned','big'})
				  in  let <_cor9> =
					  %% Line 379
					  apply 'just_test'/3
					      (Reg, _cor10, _cor0)
				      in  %% Line 377
					  [_cor8|_cor9]
		      in  let <UnAlignedFun> =
			      %% Line 381
			      fun (_cor16) ->
				  let <_cor13> =
				      %% Line 382
				      call 'erlang':'*'
					  (_cor5, 8)
				  in  let <_cor14> =
					  %% Line 382
					  apply 'get_unaligned_int_to_reg'/7
					      (Reg, _cor13, _cor3, _cor2, _cor1, %% Line 384
										 'srl', %% Line 384
											{'unsigned','big'})
				      in  let <_cor15> =
					      %% Line 385
					      apply 'just_test'/3
						  (Reg, _cor16, _cor0)
					  in  %% Line 382
					      [_cor14|_cor15]
			  in  let <_cor20> =
				  %% Line 387
				  apply 'create_loops'/4
				      (1, _cor5, _cor4, AlignedFun)
			      in  let <_cor19> =
				      %% Line 388
				      apply 'create_loops'/4
					  (1, _cor5, _cor4, UnAlignedFun)
				  in  %% Line 387
				      {_cor20,_cor19}
		  ( <_cor6> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_6920})
		    -| ['compiler_generated'] )
		end
'create_loops'/4 =
    %% Line 390
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <0,_X_Unit,_X_String,_X_IntFun> when 'true' ->
	      %% Line 391
	      []
	  %% Line 392
	  <N,Unit,String,IntFun> when 'true' ->
	      let <Value,RestString> =
		  %% Line 408
		  case ( _cor1
			 -| ['reuse_for_context'] ) of
		    <#{#<I>(_cor2,8,'integer',['unsigned'|['big']]),
		       #<Rest>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
			<I,Rest>
		    ( <_4449> when 'true' ->
			  do  primop 'bs_context_to_binary'
				  (_cor1)
			      primop 'match_fail'
				  ({'badmatch',_cor1})
		      -| ['compiler_generated'] )
		  end
	      in  let <_cor5> =
		      %% Line 394
		      apply _cor0
			  (Value)
		  in  let <_cor6> =
			  %% Line 395
			  call 'erlang':'-'
			      (_cor3, 1)
		      in  let <_cor7> =
			      %% Line 395
			      apply 'create_loops'/4
				  (_cor6, _cor2, RestString, _cor0)
			  in  %% Line 394
			      [_cor5|%% Line 395
				     [_cor7|[]]]
	end
'update_and_test'/5 =
    %% Line 397
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 398
	    call 'erlang':'*'
		(_cor3, 8)
	in  let <_cor6> =
		%% Line 398
		call 'hipe_rtl':'mk_imm'
		    (_cor5)
	    in  let <TrueLbl> =
		    %% Line 661
		    call 'hipe_rtl':'mk_new_label'
			()
		in  let <_6816> =
			%% Line 664
			call 'hipe_rtl':'label_name'
			    (TrueLbl)
		    in  let <_3565> =
			    %% Line 663
			    call 'hipe_rtl':'mk_alub'
				(_cor2, _cor2, 'add', _cor6, 'ltu', _cor0, _6816)
			in  let <_cor7> =
				%% Line 663
				[_3565|%% Line 665
				       [TrueLbl|[]]]
			    in  let <_cor8> =
				    %% Line 399
				    apply 'just_test'/3
					(_cor4, _cor1, _cor0)
				in  %% Line 398
				    [_cor7|%% Line 399
					   [_cor8|[]]]
'just_test'/3 =
    %% Line 401
    fun (_cor2,_cor1,_cor0) ->
	let <_6154> =
	    %% Line 793
	    call 'hipe_rtl':'mk_new_label'
		()
	in  let <_2176> =
		%% Line 793
		[_6154|[]]
	    in  %% Line 402
		case _2176 of
		  <[ContLbl|[]]> when 'true' ->
		      let <_cor5> =
			  %% Line 403
			  call 'hipe_rtl':'mk_imm'
			      (_cor1)
		      in  let <_cor4> =
			      %% Line 404
			      call 'hipe_rtl':'label_name'
				  (ContLbl)
			  in  let <_cor6> =
				  %% Line 403
				  call 'hipe_rtl':'mk_branch'
				      (_cor2, 'eq', _cor5, _cor4, _cor0)
			      in  %% Line 403
				  [_cor6|%% Line 405
					 [ContLbl|[]]]
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_2176})
		    -| ['compiler_generated'] )
		end
'make_int_gc_code'/1 =
    %% Line 411
    fun (_cor0) ->
	case _cor0 of
	  <I>
	      when call 'erlang':'is_integer'
		    (_cor0) ->
	      let <_3625> =
		  %% Line 412
		  call 'hipe_tagscheme':'bignum_sizeneed'
		      (_cor0)
	      in  %% Line 412
		  case _3625 of
		    %% Line 413
		    <0> when 'true' ->
			[]
		    %% Line 414
		    <X>
			when call 'erlang':'is_integer'
			      (_3625) ->
			let <_cor1> =
			    call 'hipe_rtl':'mk_gctest'
				(_3625)
			in  [_cor1|[]]
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_3625})
		      -| ['compiler_generated'] )
		  end
	  %% Line 416
	  <SReg> when 'true' ->
	      let <FixNumLbl> =
		  %% Line 417
		  call 'hipe_rtl':'mk_new_label'
		      ()
	      in  let <FixNumLblName> =
		      %% Line 418
		      call 'hipe_rtl':'label_name'
			  (FixNumLbl)
		  in  let <_1763> =
			  %% Line 419
			  call 'hipe_tagscheme':'bignum_sizeneed_code'
			      (_cor0, FixNumLblName)
		      in  %% Line 419
			  case _1763 of
			    <{ResReg,Code}> when 'true' ->
				let <_cor6> =
				    %% Line 421
				    call 'hipe_rtl':'mk_gctest'
					(ResReg)
				in  let <_cor7> =
					%% Line 422
					call 'hipe_rtl':'mk_goto'
					    (FixNumLblName)
				    in  %% Line 420
					call 'erlang':'++'
					    (Code, %% Line 421
						   [_cor6|%% Line 422
							  [_cor7|%% Line 423
								 [FixNumLbl|[]]]])
			    ( <_cor5> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_1763})
			      -| ['compiler_generated'] )
			  end
	end
'get_static_int'/10 =
    %% Line 425
    fun (_cor9,_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <WordSize> =
	    %% Line 427
	    call 'hipe_rtl_arch':'word_size'
		()
	in  let <_cor11> =
		%% Line 428
		call 'erlang':'*'
		    (WordSize, 8)
	    in  %% Line 428
		case <> of
		  %% Line 429
		  <>
		      when call 'erlang':'=<'
			    (_cor7,
			     _cor11) ->
		      %% Line 430
		      case <_cor3,_cor4> of
			%% Line 431
			<'true','false'> when 'true' ->
			    %% Line 432
			    apply 'get_int_from_bin'/8
				(_cor8, _cor7, _cor9, _cor5, _cor4, _cor2, _cor0, _cor1)
			%% Line 434
			<'true','true'> when 'true' ->
			    %% Line 435
			    case call 'erlang':'rem'
				     (_cor7, 8) of
			      %% Line 436
			      <0> when 'true' ->
				  %% Line 437
				  apply 'get_int_from_bin'/8
				      (_cor8, _cor7, _cor9, _cor5, _cor4, _cor2, _cor0, _cor1)
			      %% Line 439
			      <_cor25> when 'true' ->
				  _cor6
			    end
			%% Line 442
			<'false','false'> when 'true' ->
			    %% Line 443
			    apply 'get_int_from_unaligned_bin'/7
				(_cor8, _cor7, _cor9, _cor5, _cor2, _cor0, _cor1)
			%% Line 445
			<'false','true'> when 'true' ->
			    _cor6
			( <_fol59,_fol60> when 'true' ->
			      let <_cor13> = {_cor3,_cor4}
			      in  primop 'match_fail'
				      ({'case_clause',_cor13})
			  -| ['compiler_generated'] )
		      end
		  %% Line 448
		  <> when 'true' ->
		      _cor6
		end
'get_dynamic_int'/9 =
    %% Line 452
    fun (_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Dst1,Ms,SizeReg,CCode,Signed,LittleEndian,'true',TrueLblName,FalseLblName> when 'true' ->
	      let <_1269> =
		  %% Line 454
		  apply 'make_dyn_prep'/2
		      (_cor6, _cor5)
	      in  %% Line 454
		  case _1269 of
		    <{Init,End}> when 'true' ->
			let <_cor10> =
			    %% Line 456
			    apply 'get_unknown_size_int'/7
				(_cor6, _cor7, _cor8, _cor4, _cor3, _cor0, _cor1)
			in  let <_cor11> =
				%% Line 457
				call 'erlang':'++'
				    (_cor10, End)
			    in  %% Line 455
				call 'erlang':'++'
				    (Init, _cor11)
		    ( <_cor9> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1269})
		      -| ['compiler_generated'] )
		  end
	  %% Line 459
	  <_X_Dst1,_X_Ms,_X_SizeReg,CCode,_X_Signed,_X_LittleEndian,'false',_X_TrueLblName,_X_FalseLblName> when 'true' ->
	      _cor5
	  ( <_cor20,_cor19,_cor18,_cor17,_cor16,_cor15,_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'get_dynamic_int',9}}] )
	    -| ['compiler_generated'] )
	end
'get_int_from_bin'/8 =
    %% Line 463
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Shiftr> =
	    %% Line 740
	    case _cor4 of
	      <'true'> when 'true' ->
		  %% Line 741
		  'sra'
	      %% Line 742
	      <'false'> when 'true' ->
		  %% Line 743
		  'srl'
	      ( <_4909> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_cor4})
		-| ['compiler_generated'] )
	    end
	in  let <Type> =
		%% Line 466
		apply 'get_type'/2
		    (_cor4, _cor3)
	    in  let <NewOffset> =
		    %% Line 467
		    call 'hipe_rtl':'mk_new_reg_gcsafe'
			()
		in  let <_6627> =
			%% Line 793
			call 'hipe_rtl':'mk_new_label'
			    ()
		    in  let <_1305> =
			    %% Line 793
			    [_6627|[]]
			in  %% Line 468
			    case _1305 of
			      <[SuccessLbl|[]]> when 'true' ->
				  let <_2313> =
				      %% Line 470
				      apply 'extract_matchstate_vars'/2
					  (['base'|['offset'|['binsize']]], _cor7)
				  in  %% Line 469
				      case _2313 of
					<{[Base|[Offset|[BinSize|[]]]],ExCode}> when 'true' ->
					    let <_cor17> =
						%% Line 472
						call 'hipe_rtl':'mk_imm'
						    (_cor6)
					    in  let <_cor16> =
						    %% Line 473
						    call 'hipe_rtl':'label_name'
							(SuccessLbl)
						in  let <_cor18> =
							%% Line 472
							apply 'check_size'/7
							    (Offset, _cor17, BinSize, NewOffset, _cor2, _cor16, _cor1)
						    in  let <_cor14> =
							    %% Line 780
							    call 'hipe_tagscheme':'set_field_from_term'
								({'matchstate',{'matchbuffer','offset'}}, _cor7, NewOffset)
							in  let <_cor13> =
								%% Line 476
								apply 'get_int'/7
								    (_cor5, _cor6, Base, Offset, Shiftr, Type, _cor0)
							    in  let <_cor15> =
								    %% Line 475
								    [_cor14|_cor13]
								in  let <_cor19> =
									%% Line 472
									[_cor18|%% Line 474
										[SuccessLbl|_cor15]]
								    in  %% Line 471
									call 'erlang':'++'
									    (ExCode, _cor19)
					( <_cor12> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_2313})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor11> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_1305})
				-| ['compiler_generated'] )
			    end
'get_int_from_unaligned_bin'/7 =
    %% Line 478
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Shiftr> =
	    %% Line 740
	    case _cor3 of
	      <'true'> when 'true' ->
		  %% Line 741
		  'sra'
	      %% Line 742
	      <'false'> when 'true' ->
		  %% Line 743
		  'srl'
	      ( <_3577> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_cor3})
		-| ['compiler_generated'] )
	    end
	in  let <Type> =
		%% Line 481
		apply 'get_type'/2
		    (_cor3, 'false')
	    in  let <NewOffset> =
		    %% Line 482
		    call 'hipe_rtl':'mk_new_reg_gcsafe'
			()
		in  let <_80> =
			%% Line 793
			call 'hipe_rtl':'mk_new_label'
			    ()
		    in  let <_7864> =
			    %% Line 793
			    [_80|[]]
			in  %% Line 483
			    case _7864 of
			      <[SuccessLbl|[]]> when 'true' ->
				  let <_5714> =
				      %% Line 485
				      apply 'extract_matchstate_vars'/2
					  (['base'|['offset'|['binsize']]], _cor6)
				  in  %% Line 484
				      case _5714 of
					<{[Base|[Offset|[BinSize|[]]]],ExCode}> when 'true' ->
					    let <_cor16> =
						%% Line 487
						call 'hipe_rtl':'mk_imm'
						    (_cor5)
					    in  let <_cor15> =
						    %% Line 488
						    call 'hipe_rtl':'label_name'
							(SuccessLbl)
						in  let <_cor17> =
							%% Line 487
							apply 'check_size'/7
							    (Offset, _cor16, BinSize, NewOffset, _cor2, _cor15, _cor1)
						    in  let <_cor13> =
							    %% Line 780
							    call 'hipe_tagscheme':'set_field_from_term'
								({'matchstate',{'matchbuffer','offset'}}, _cor6, NewOffset)
							in  let <_cor12> =
								%% Line 491
								apply 'get_unaligned_int'/7
								    (_cor4, _cor5, Base, Offset, Shiftr, Type, _cor0)
							    in  let <_cor14> =
								    %% Line 490
								    [_cor13|_cor12]
								in  let <_cor18> =
									%% Line 487
									[_cor17|%% Line 489
										[SuccessLbl|_cor14]]
								    in  %% Line 486
									call 'erlang':'++'
									    (ExCode, _cor18)
					( <_cor11> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_5714})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor10> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_7864})
				-| ['compiler_generated'] )
			    end
'get_unknown_size_int'/7 =
    %% Line 493
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Shiftr> =
	    %% Line 740
	    case _cor3 of
	      <'true'> when 'true' ->
		  %% Line 741
		  'sra'
	      %% Line 742
	      <'false'> when 'true' ->
		  %% Line 743
		  'srl'
	      ( <_5444> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_cor3})
		-| ['compiler_generated'] )
	    end
	in  let <Type> =
		%% Line 496
		apply 'get_type'/2
		    (_cor3, 'false')
	    in  let <_5199> =
		    %% Line 1074
		    call 'hipe_rtl':'mk_new_reg_gcsafe'
			()
		in  let <_3034> =
			%% Line 1074
			[_5199|%% Line 1076
			       []]
		    in  %% Line 497
			case _3034 of
			  <[NewOffset|[]]> when 'true' ->
			      let <_6794> =
				  %% Line 793
				  call 'hipe_rtl':'mk_new_label'
				      ()
			      in  let <_6497> =
				      %% Line 793
				      [_6794|[]]
				  in  %% Line 498
				      case _6497 of
					<[SuccessLbl|[]]> when 'true' ->
					    let <_4969> =
						%% Line 500
						apply 'extract_matchstate_vars'/2
						    (['base'|['offset'|['binsize']]], _cor5)
					    in  %% Line 499
						case _4969 of
						  <{[Base|[Offset|[BinSize|[]]]],ExCode}> when 'true' ->
						      let <_cor14> =
							  %% Line 503
							  call 'hipe_rtl':'label_name'
							      (SuccessLbl)
						      in  let <_cor15> =
							      %% Line 502
							      apply 'check_size'/6
								  (Offset, _cor6, BinSize, NewOffset, _cor14, _cor1)
							  in  let <_cor16> =
								  %% Line 780
								  call 'hipe_tagscheme':'set_field_from_term'
								      ({'matchstate',{'matchbuffer','offset'}}, _cor5, NewOffset)
							      in  let <_cor13> =
								      %% Line 506
								      case _cor2 of
									%% Line 507
									<'true'> when 'true' ->
									    %% Line 508
									    apply 'get_little_unknown_int'/7
										(_cor4, Base, Offset, NewOffset, Shiftr, Type, _cor0)
									%% Line 510
									<'false'> when 'true' ->
									    %% Line 511
									    apply 'get_big_unknown_int'/7
										(_cor4, Base, Offset, NewOffset, Shiftr, Type, _cor0)
									( <_cor12> when 'true' ->
									      primop 'match_fail'
										  ({'case_clause',_cor2})
									  -| ['compiler_generated'] )
								      end
								  in  let <_cor17> =
									  %% Line 502
									  [_cor15|%% Line 504
										  [SuccessLbl|%% Line 505
											      [_cor16|_cor13]]]
								      in  %% Line 501
									  call 'erlang':'++'
									      (ExCode, _cor17)
						  ( <_cor11> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_4969})
						    -| ['compiler_generated'] )
						end
					( <_cor10> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_6497})
					  -| ['compiler_generated'] )
				      end
			  ( <_cor9> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_3034})
			    -| ['compiler_generated'] )
			end
'make_matchstate'/5 =
    %% Line 515
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Base> =
	    %% Line 516
	    call 'hipe_rtl':'mk_new_reg'
		()
	in  let <Orig> =
		%% Line 517
		call 'hipe_rtl':'mk_new_var'
		    ()
	    in  let <BinSize> =
		    %% Line 518
		    call 'hipe_rtl':'mk_new_reg_gcsafe'
			()
		in  let <Offset> =
			%% Line 519
			call 'hipe_rtl':'mk_new_reg_gcsafe'
			    ()
		    in  let <Lbl> =
			    %% Line 520
			    call 'hipe_rtl':'mk_new_label'
				()
			in  let <_cor10> =
				%% Line 521
				call 'erlang':'+'
				    (6, _cor3)
			    in  let <_cor11> =
				    %% Line 521
				    call 'hipe_rtl':'mk_gctest'
					(_cor10)
				in  let <_cor12> =
					%% Line 523
					call 'hipe_rtl':'label_name'
					    (Lbl)
				    in  let <_cor13> =
					    %% Line 522
					    apply 'get_binary_bytes'/7
						(_cor4, BinSize, Base, Offset, Orig, _cor12, _cor0)
					in  let <_cor14> =
						%% Line 525
						call 'hipe_tagscheme':'create_matchstate'
						    (_cor3, BinSize, Base, Offset, Orig, _cor2)
					    in  let <_cor15> =
						    %% Line 526
						    call 'hipe_rtl':'mk_goto'
							(_cor1)
						in  %% Line 521
						    [_cor11|%% Line 522
							    [_cor13|%% Line 524
								    [Lbl|%% Line 525
									 [_cor14|%% Line 526
										 [_cor15|[]]]]]]
'resize_matchstate'/3 =
    %% Line 528
    fun (_cor2,_cor1,_cor0) ->
	let <Base> =
	    %% Line 529
	    call 'hipe_rtl':'mk_new_reg'
		()
	in  let <Orig> =
		%% Line 530
		call 'hipe_rtl':'mk_new_var'
		    ()
	    in  let <BinSize> =
		    %% Line 531
		    call 'hipe_rtl':'mk_new_reg_gcsafe'
			()
		in  let <Offset> =
			%% Line 532
			call 'hipe_rtl':'mk_new_reg_gcsafe'
			    ()
		    in  let <_cor7> =
			    %% Line 533
			    call 'erlang':'+'
				(6, _cor1)
			in  let <_cor8> =
				%% Line 533
				call 'hipe_rtl':'mk_gctest'
				    (_cor7)
			    in  let <_cor9> =
				    %% Line 534
				    call 'hipe_tagscheme':'get_field_from_term'
					({'matchstate',{'matchbuffer','binsize'}}, _cor2, BinSize)
				in  let <_cor10> =
					%% Line 535
					call 'hipe_tagscheme':'get_field_from_term'
					    ({'matchstate',{'matchbuffer','base'}}, _cor2, Base)
				    in  let <_cor11> =
					    %% Line 536
					    call 'hipe_tagscheme':'get_field_from_term'
						({'matchstate',{'matchbuffer','orig'}}, _cor2, Orig)
					in  let <_cor12> =
						%% Line 537
						call 'hipe_tagscheme':'get_field_from_term'
						    ({'matchstate',{'matchbuffer','offset'}}, _cor2, Offset)
					    in  let <_cor13> =
						    %% Line 538
						    call 'hipe_tagscheme':'create_matchstate'
							(_cor1, BinSize, Base, Offset, Orig, _cor2)
						in  let <_cor14> =
							%% Line 539
							call 'hipe_rtl':'mk_goto'
							    (_cor0)
						    in  %% Line 533
							[_cor8|%% Line 534
							       [_cor9|%% Line 535
								      [_cor10|%% Line 536
									      [_cor11|%% Line 537
										      [_cor12|%% Line 538
											      [_cor13|%% Line 539
												      [_cor14|[]]]]]]]]
'reinit_matchstate'/2 =
    %% Line 541
    fun (_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 542
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_cor3> =
		%% Line 543
		call 'hipe_tagscheme':'get_field_from_term'
		    ({'matchstate',{'matchbuffer','offset'}}, _cor1, Tmp)
	    in  let <_cor4> =
		    %% Line 544
		    call 'hipe_tagscheme':'set_field_from_term'
			({'matchstate',{'saveoffset',0}}, _cor1, Tmp)
		in  let <_cor5> =
			%% Line 545
			call 'hipe_rtl':'mk_goto'
			    (_cor0)
		    in  %% Line 543
			[_cor3|%% Line 544
			       [_cor4|%% Line 545
				      [_cor5|[]]]]
'get_binary_all'/5 =
    %% Line 549
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Dst1,1,Ms,TrueLblName,_X_FalseLblName> when 'true' ->
	      let <_5153> =
		  %% Line 1074
		  call 'hipe_rtl':'mk_new_reg_gcsafe'
		      ()
	      in  let <_6951> =
		      %% Line 1074
		      [_5153|%% Line 1076
			     []]
		  in  %% Line 550
		      case _6951 of
			<[SizeReg|[]]> when 'true' ->
			    let <_3733> =
				%% Line 552
				apply 'extract_matchstate_vars'/2
				    (['offset'|['binsize'|['orig']]], _cor2)
			    in  %% Line 551
				case _3733 of
				  <{[Offset|[BinSize|[Orig|[]]]],ExCode}> when 'true' ->
				      let <_cor9> =
					  %% Line 554
					  call 'hipe_rtl':'mk_alu'
					      (SizeReg, BinSize, 'sub', Offset)
				      in  let <_cor10> =
					      %% Line 555
					      apply 'construct_subbin'/4
						  (_cor4, SizeReg, Offset, Orig)
					  in  let <_cor7> =
						  %% Line 780
						  call 'hipe_tagscheme':'set_field_from_term'
						      ({'matchstate',{'matchbuffer','offset'}}, _cor2, BinSize)
					      in  let <_cor8> =
						      %% Line 557
						      call 'hipe_rtl':'mk_goto'
							  (_cor1)
						  in  let <MakeCode> =
							  %% Line 554
							  [_cor9|%% Line 555
								 call 'erlang':'++'
								     (_cor10, %% Line 556
									      [_cor7|%% Line 557
										     [_cor8|[]]])]
						      in  %% Line 558
							  call 'erlang':'++'
							      (ExCode, MakeCode)
				  ( <_cor6> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_3733})
				    -| ['compiler_generated'] )
				end
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_6951})
			  -| ['compiler_generated'] )
		      end
	  %% Line 559
	  <Dst1,Unit,Ms,TrueLblName,FalseLblName> when 'true' ->
	      let <_7541> =
		  %% Line 1074
		  call 'hipe_rtl':'mk_new_reg_gcsafe'
		      ()
	      in  let <_7583> =
		      %% Line 1074
		      [_7541|%% Line 1076
			     []]
		  in  %% Line 560
		      case _7583 of
			<[SizeReg|[]]> when 'true' ->
			    let <_8114> =
				%% Line 793
				call 'hipe_rtl':'mk_new_label'
				    ()
			    in  let <_7140> =
				    %% Line 793
				    [_8114|[]]
				in  %% Line 561
				    case _7140 of
				      <[SuccessLbl|[]]> when 'true' ->
					  let <SLblName> =
					      %% Line 562
					      call 'hipe_rtl':'label_name'
						  (SuccessLbl)
					  in  let <_3563> =
						  %% Line 564
						  apply 'extract_matchstate_vars'/2
						      (['offset'|['binsize'|['orig']]], _cor2)
					      in  %% Line 563
						  case _3563 of
						    <{[Offset|[BinSize|[Orig|[]]]],ExCode}> when 'true' ->
							let <_cor20> =
							    %% Line 566
							    call 'hipe_rtl':'mk_alu'
								(SizeReg, BinSize, 'sub', Offset)
							in  let <_cor21> =
								%% Line 567
								apply 'test_alignment_code'/4
								    (SizeReg, _cor3, SLblName, _cor0)
							    in  let <_cor18> =
								    %% Line 569
								    apply 'construct_subbin'/4
									(_cor4, SizeReg, Offset, Orig)
								in  let <_cor16> =
									%% Line 780
									call 'hipe_tagscheme':'set_field_from_term'
									    ({'matchstate',{'matchbuffer','offset'}}, _cor2, BinSize)
								    in  let <_cor17> =
									    %% Line 571
									    call 'hipe_rtl':'mk_goto'
										(_cor1)
									in  let <_cor19> =
										%% Line 568
										[SuccessLbl|%% Line 569
											    call 'erlang':'++'
												(_cor18, %% Line 570
													 [_cor16|%% Line 571
														 [_cor17|[]]])]
									    in  let <MakeCode> =
										    %% Line 566
										    [_cor20|%% Line 567
											    call 'erlang':'++'
												(_cor21, _cor19)]
										in  %% Line 572
										    call 'erlang':'++'
											(ExCode, MakeCode)
						    ( <_cor15> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_3563})
						      -| ['compiler_generated'] )
						  end
				      ( <_cor13> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_7140})
					-| ['compiler_generated'] )
				    end
			( <_cor12> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_7583})
			  -| ['compiler_generated'] )
		      end
	end
'get_binary'/6 =
    %% Line 574
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_2265> =
	    %% Line 793
	    call 'hipe_rtl':'mk_new_label'
		()
	in  let <_5837> =
		%% Line 793
		[_2265|[]]
	    in  %% Line 575
		case _5837 of
		  <[SuccessLbl|[]]> when 'true' ->
		      let <_2088> =
			  %% Line 1074
			  call 'hipe_rtl':'mk_new_reg_gcsafe'
			      ()
		      in  let <_1668> =
			      %% Line 1074
			      [_2088|%% Line 1076
				     []]
			  in  %% Line 576
			      case _1668 of
				<[EndOffset|[]]> when 'true' ->
				    let <_3149> =
					%% Line 578
					apply 'extract_matchstate_vars'/2
					    (['offset'|['binsize'|['orig']]], _cor4)
				    in  %% Line 577
					case _3149 of
					  <{[Offset|[BinSize|[Orig|[]]]],ExCode}> when 'true' ->
					      let <_cor9> =
						  %% Line 581
						  call 'hipe_rtl':'label_name'
						      (SuccessLbl)
					      in  let <_cor10> =
						      %% Line 580
						      apply 'check_size'/7
							  (Offset, _cor3, BinSize, EndOffset, _cor2, _cor9, _cor0)
						  in  let <CheckCode> =
							  %% Line 580
							  [_cor10|%% Line 582
								  [SuccessLbl|[]]]
						      in  let <_cor14> =
							      %% Line 584
							      apply 'construct_subbin'/4
								  (_cor5, _cor3, Offset, Orig)
							  in  let <_cor12> =
								  %% Line 780
								  call 'hipe_tagscheme':'set_field_from_term'
								      ({'matchstate',{'matchbuffer','offset'}}, _cor4, EndOffset)
							      in  let <_cor13> =
								      %% Line 586
								      call 'hipe_rtl':'mk_goto'
									  (_cor1)
								  in  let <MakeCode> =
									  %% Line 585
									  call 'erlang':'++'
									      (_cor14, [_cor12|%% Line 586
											       [_cor13|[]]])
								      in  let <_cor16> =
									      %% Line 587
									      call 'erlang':'++'
										  (CheckCode, MakeCode)
									  in  %% Line 587
									      call 'erlang':'++'
										  (ExCode, _cor16)
					  ( <_cor8> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_3149})
					    -| ['compiler_generated'] )
					end
				( <_cor7> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_1668})
				  -| ['compiler_generated'] )
			      end
		  ( <_cor6> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_5837})
		    -| ['compiler_generated'] )
		end
'construct_subbin'/4 =
    %% Line 589
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_1612> =
	    %% Line 1074
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_7621> =
		%% Line 1074
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <_5464> =
		    %% Line 1074
		    apply 'create_gcsafe_regs'/1
			(2)
		in  let <_4763> =
			%% Line 1074
			[_7621|_5464]
		    in  let <_6524> =
			    %% Line 1074
			    [_1612|_4763]
			in  %% Line 590
			    case _6524 of
			      <[BitOffset|[ByteOffset|[BitSize|[ByteSize|[]]]]]> when 'true' ->
				  let <_cor5> =
				      %% Line 591
				      call 'hipe_rtl':'mk_imm'
					  (3)
				  in  let <_cor6> =
					  %% Line 591
					  call 'hipe_rtl':'mk_alu'
					      (ByteSize, _cor2, 'srl', _cor5)
				      in  let <_cor7> =
					      %% Line 592
					      call 'hipe_rtl':'mk_imm'
						  (7)
					  in  let <_cor8> =
						  %% Line 592
						  call 'hipe_rtl':'mk_alu'
						      (BitSize, _cor2, 'and', _cor7)
					      in  let <_cor9> =
						      %% Line 593
						      call 'hipe_rtl':'mk_imm'
							  (3)
						  in  let <_cor10> =
							  %% Line 593
							  call 'hipe_rtl':'mk_alu'
							      (ByteOffset, _cor1, 'srl', _cor9)
						      in  let <_cor11> =
							      %% Line 594
							      call 'hipe_rtl':'mk_imm'
								  (7)
							  in  let <_cor12> =
								  %% Line 594
								  call 'hipe_rtl':'mk_alu'
								      (BitOffset, _cor1, 'and', _cor11)
							      in  let <_cor13> =
								      %% Line 595
								      call 'hipe_tagscheme':'mk_sub_binary'
									  (_cor3, ByteSize, ByteOffset, BitSize, BitOffset, _cor0)
								  in  %% Line 591
								      [_cor6|%% Line 592
									     [_cor8|%% Line 593
										    [_cor10|%% Line 594
											    [_cor12|%% Line 595
												    [_cor13|%% Line 596
													    []]]]]]
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_6524})
				-| ['compiler_generated'] )
			    end
'skip_bits_all'/4 =
    %% Line 600
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <1,Ms,TrueLblName,_X_FalseLblName> when 'true' ->
	      let <_1230> =
		  %% Line 601
		  apply 'extract_matchstate_vars'/2
		      (['binsize'], _cor2)
	      in  %% Line 601
		  case _1230 of
		    <{[BinSize|[]],ExCode}> when 'true' ->
			let <_cor5> =
			    %% Line 780
			    call 'hipe_tagscheme':'set_field_from_term'
				({'matchstate',{'matchbuffer','offset'}}, _cor2, BinSize)
			in  let <_cor6> =
				%% Line 602
				call 'hipe_rtl':'mk_goto'
				    (_cor1)
			    in  %% Line 602
				call 'erlang':'++'
				    (ExCode, [_cor5|[_cor6|[]]])
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1230})
		      -| ['compiler_generated'] )
		  end
	  %% Line 603
	  <Unit,Ms,TrueLblName,FalseLblName> when 'true' ->
	      let <_7996> =
		  %% Line 1074
		  call 'hipe_rtl':'mk_new_reg_gcsafe'
		      ()
	      in  let <_3580> =
		      %% Line 1074
		      [_7996|%% Line 1076
			     []]
		  in  %% Line 604
		      case _3580 of
			<[Size|[]]> when 'true' ->
			    let <_5662> =
				%% Line 793
				call 'hipe_rtl':'mk_new_label'
				    ()
			    in  let <_2859> =
				    %% Line 793
				    [_5662|[]]
				in  %% Line 605
				    case _2859 of
				      <[SuccessLbl|[]]> when 'true' ->
					  let <SLblName> =
					      %% Line 606
					      call 'hipe_rtl':'label_name'
						  (SuccessLbl)
					  in  let <_4575> =
						  %% Line 607
						  apply 'extract_matchstate_vars'/2
						      (['offset'|['binsize']], _cor2)
					      in  %% Line 607
						  case _4575 of
						    <{[Offset|[BinSize|[]]],ExCode}> when 'true' ->
							let <_cor15> =
							    %% Line 609
							    call 'hipe_rtl':'mk_alu'
								(Size, BinSize, 'sub', Offset)
							in  let <_cor13> =
								%% Line 611
								apply 'test_alignment_code'/4
								    (Size, _cor3, SLblName, _cor0)
							    in  let <_cor11> =
								    %% Line 780
								    call 'hipe_tagscheme':'set_field_from_term'
									({'matchstate',{'matchbuffer','offset'}}, _cor2, BinSize)
								in  let <_cor12> =
									%% Line 614
									call 'hipe_rtl':'mk_goto'
									    (_cor1)
								    in  let <_cor14> =
									    %% Line 611
									    call 'erlang':'++'
										(_cor13, %% Line 612
											 [SuccessLbl|%% Line 613
												     [_cor11|%% Line 614
													     [_cor12|[]]]])
									in  let <_cor16> =
										%% Line 609
										[_cor15|_cor14]
									    in  %% Line 608
										call 'erlang':'++'
										    (ExCode, _cor16)
						    ( <_cor10> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_4575})
						      -| ['compiler_generated'] )
						  end
				      ( <_cor8> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_2859})
					-| ['compiler_generated'] )
				    end
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_3580})
			  -| ['compiler_generated'] )
		      end
	end
'test_alignment_code'/4 =
    %% Line 616
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 617
	case _cor2 of
	  %% Line 618
	  <1> when 'true' ->
	      let <_cor4> =
		  call 'hipe_rtl':'mk_goto'
		      (_cor1)
	      in  [_cor4|[]]
	  %% Line 619
	  <2> when 'true' ->
	      apply 'get_fast_test_code'/4
		  (_cor3, 1, _cor1, _cor0)
	  %% Line 620
	  <4> when 'true' ->
	      apply 'get_fast_test_code'/4
		  (_cor3, 3, _cor1, _cor0)
	  %% Line 621
	  <8> when 'true' ->
	      apply 'get_fast_test_code'/4
		  (_cor3, 7, _cor1, _cor0)
	  %% Line 622
	  <16> when 'true' ->
	      apply 'get_fast_test_code'/4
		  (_cor3, 15, _cor1, _cor0)
	  %% Line 623
	  <32> when 'true' ->
	      apply 'get_fast_test_code'/4
		  (_cor3, 31, _cor1, _cor0)
	  %% Line 624
	  <_cor10> when 'true' ->
	      apply 'get_slow_test_code'/4
		  (_cor3, _cor2, _cor1, _cor0)
	end
'get_fast_test_code'/4 =
    %% Line 627
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_285> =
	    %% Line 1074
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_965> =
		%% Line 1074
		[_285|%% Line 1076
		      []]
	    in  %% Line 628
		case _965 of
		  <[Tmp|[]]> when 'true' ->
		      let <_cor5> =
			  %% Line 629
			  call 'hipe_rtl':'mk_imm'
			      (_cor2)
		      in  let <_cor6> =
			      %% Line 629
			      call 'hipe_rtl':'mk_alub'
				  (Tmp, _cor3, 'and', _cor5, %% Line 630
							     'eq', _cor1, _cor0)
			  in  %% Line 629
			      [_cor6|%% Line 630
				     []]
		  ( <_cor4> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_965})
		    -| ['compiler_generated'] )
		end
'get_slow_test_code'/4 =
    %% Line 633
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_3395> =
	    %% Line 1074
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_511> =
		%% Line 1074
		[_3395|%% Line 1076
		       []]
	    in  %% Line 634
		case _511 of
		  <[Tmp|[]]> when 'true' ->
		      let <_4148> =
			  %% Line 793
			  call 'hipe_rtl':'mk_new_label'
			      ()
		      in  let <_6354> =
			      %% Line 793
			      call 'hipe_rtl':'mk_new_label'
				  ()
			  in  let <_5221> =
				  %% Line 793
				  apply 'create_lbls'/1
				      (1)
			      in  let <_4551> =
				      %% Line 793
				      [_6354|_5221]
				  in  let <_5985> =
					  %% Line 793
					  [_4148|_4551]
				      in  %% Line 635
					  case _5985 of
					    <[LoopLbl|[Lbl1|[Lbl2|[]]]]> when 'true' ->
						let <LoopLblName> =
						    %% Line 636
						    call 'hipe_rtl':'label_name'
							(LoopLbl)
						in  let <Lbl1Name> =
							%% Line 637
							call 'hipe_rtl':'label_name'
							    (Lbl1)
						    in  let <Lbl2Name> =
							    %% Line 638
							    call 'hipe_rtl':'label_name'
								(Lbl2)
							in  let <_cor9> =
								%% Line 639
								call 'hipe_rtl':'mk_move'
								    (Tmp, _cor3)
							    in  let <_cor10> =
								    %% Line 641
								    call 'hipe_rtl':'mk_imm'
									(0)
								in  let <_cor11> =
									%% Line 641
									call 'hipe_rtl':'mk_branch'
									    (Tmp, 'eq', _cor10, _cor1, Lbl1Name)
								    in  let <_cor12> =
									    %% Line 643
									    call 'hipe_rtl':'mk_imm'
										(0)
									in  let <_cor13> =
										%% Line 643
										call 'hipe_rtl':'mk_branch'
										    (Tmp, 'lt', _cor12, _cor0, Lbl2Name)
									    in  let <_cor14> =
										    %% Line 645
										    call 'hipe_rtl':'mk_imm'
											(_cor2)
										in  let <_cor15> =
											%% Line 645
											call 'hipe_rtl':'mk_alu'
											    (Tmp, Tmp, 'sub', _cor14)
										    in  let <_cor16> =
											    %% Line 646
											    call 'hipe_rtl':'mk_goto'
												(LoopLblName)
											in  %% Line 639
											    [_cor9|%% Line 640
												   [LoopLbl|%% Line 641
													    [_cor11|%% Line 642
														    [Lbl1|%% Line 643
															  [_cor13|%% Line 644
																  [Lbl2|%% Line 645
																	[_cor15|%% Line 646
																		[_cor16|[]]]]]]]]]
					    ( <_cor5> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_5985})
					      -| ['compiler_generated'] )
					  end
		  ( <_cor4> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_511})
		    -| ['compiler_generated'] )
		end
'skip_bits2'/4 =
    %% Line 648
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_423> =
	    %% Line 1074
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_1295> =
		%% Line 1074
		[_423|%% Line 1076
		      []]
	    in  %% Line 649
		case _1295 of
		  <[NewOffset|[]]> when 'true' ->
		      let <_1316> =
			  %% Line 793
			  call 'hipe_rtl':'mk_new_label'
			      ()
		      in  let <_5617> =
			      %% Line 793
			      [_1316|[]]
			  in  %% Line 650
			      case _5617 of
				<[TempLbl|[]]> when 'true' ->
				    let <_5007> =
					%% Line 651
					apply 'extract_matchstate_vars'/2
					    (['offset'|['binsize']], _cor3)
				    in  %% Line 651
					case _5007 of
					  <{[Offset|[BinSize|[]]],ExCode}> when 'true' ->
					      let <TrueLbl> =
						  %% Line 661
						  call 'hipe_rtl':'mk_new_label'
						      ()
					      in  let <_cor5> =
						      %% Line 664
						      call 'hipe_rtl':'label_name'
							  (TrueLbl)
						  in  let <_cor6> =
							  %% Line 663
							  call 'hipe_rtl':'mk_alub'
							      (NewOffset, _cor2, 'add', Offset, 'ltu', _cor0, _cor5)
						      in  let <_cor11> =
							      %% Line 663
							      [_cor6|%% Line 665
								     [TrueLbl|[]]]
							  in  let <_cor7> =
								  %% Line 655
								  call 'hipe_rtl':'label_name'
								      (TempLbl)
							      in  let <_cor8> =
								      %% Line 654
								      call 'hipe_rtl':'mk_branch'
									  (BinSize, 'ltu', NewOffset, _cor0, _cor7, %% Line 655
														    1.00000000000000002082e-02)
								  in  let <_cor9> =
									  %% Line 780
									  call 'hipe_tagscheme':'set_field_from_term'
									      ({'matchstate',{'matchbuffer','offset'}}, _cor3, NewOffset)
								      in  let <_cor10> =
									      %% Line 658
									      call 'hipe_rtl':'mk_goto'
										  (_cor1)
									  in  let <_cor12> =
										  %% Line 653
										  call 'erlang':'++'
										      (_cor11, %% Line 654
											       [_cor8|%% Line 656
												      [TempLbl|%% Line 657
													       [_cor9|%% Line 658
														      [_cor10|[]]]]])
									      in  %% Line 652
										  call 'erlang':'++'
										      (ExCode, _cor12)
					  ( <_cor6> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_5007})
					    -| ['compiler_generated'] )
					end
				( <_cor5> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_5617})
				  -| ['compiler_generated'] )
			      end
		  ( <_cor4> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_1295})
		    -| ['compiler_generated'] )
		end
'get_binary_bytes'/7 =
    %% Line 669
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_3783> =
	    %% Line 1074
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_7363> =
		%% Line 1074
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <_2703> =
		    %% Line 1074
		    apply 'create_gcsafe_regs'/1
			(1)
		in  let <_2494> =
			%% Line 1074
			[_7363|_2703]
		    in  let <_455> =
			    %% Line 1074
			    [_3783|_2494]
			in  %% Line 671
			    case _455 of
			      <[OrigOffset|[BitSize|[BitOffset|[]]]]> when 'true' ->
				  let <_2674> =
				      %% Line 793
				      call 'hipe_rtl':'mk_new_label'
					  ()
				  in  let <_2175> =
					  %% Line 793
					  call 'hipe_rtl':'mk_new_label'
					      ()
				      in  let <_6305> =
					      %% Line 793
					      apply 'create_lbls'/1
						  (2)
					  in  let <_6680> =
						  %% Line 793
						  [_2175|_6305]
					      in  let <_148> =
						      %% Line 793
						      [_2674|_6680]
						  in  %% Line 672
						      case _148 of
							<[SuccessLbl|[SubLbl|[OtherLbl|[JoinLbl|[]]]]]> when 'true' ->
							    let <_cor12> =
								%% Line 673
								call 'hipe_rtl':'label_name'
								    (SuccessLbl)
							    in  let <_cor13> =
								    %% Line 673
								    call 'hipe_tagscheme':'test_bitstr'
									(_cor6, _cor12, _cor0, %% Line 674
											       9.89999999999999991118e-01)
								in  let <_cor14> =
									%% Line 676
									call 'hipe_tagscheme':'get_field_from_term'
									    ({'sub_binary','binsize'}, _cor6, _cor5)
								    in  let <_cor15> =
									    %% Line 677
									    call 'hipe_rtl':'mk_imm'
										(3)
									in  let <_cor16> =
										%% Line 677
										call 'hipe_rtl':'mk_alu'
										    (_cor5, _cor5, 'sll', _cor15)
									    in  let <_cor18> =
										    %% Line 678
										    call 'hipe_rtl':'label_name'
											(SubLbl)
										in  let <_cor17> =
											%% Line 679
											call 'hipe_rtl':'label_name'
											    (OtherLbl)
										    in  let <_cor19> =
											    %% Line 678
											    call 'hipe_tagscheme':'test_subbinary'
												(_cor6, _cor18, _cor17)
											in  let <_cor20> =
												%% Line 681
												call 'hipe_tagscheme':'get_field_from_term'
												    ({'sub_binary','offset'}, _cor6, OrigOffset)
											    in  let <_cor21> =
												    %% Line 682
												    call 'hipe_rtl':'mk_imm'
													(3)
												in  let <_cor22> =
													%% Line 682
													call 'hipe_rtl':'mk_alu'
													    (_cor3, OrigOffset, 'sll', _cor21)
												    in  let <_cor23> =
													    %% Line 683
													    call 'hipe_tagscheme':'get_field_from_term'
														({'sub_binary','bitoffset'}, _cor6, BitOffset)
													in  let <_cor24> =
														%% Line 684
														call 'hipe_rtl':'mk_alu'
														    (_cor3, _cor3, 'add', BitOffset)
													    in  let <_cor25> =
														    %% Line 685
														    call 'hipe_tagscheme':'get_field_from_term'
															({'sub_binary','bitsize'}, _cor6, BitSize)
														in  let <_cor26> =
															%% Line 686
															call 'hipe_rtl':'mk_alu'
															    (_cor5, _cor5, 'add', _cor3)
														    in  let <_cor27> =
															    %% Line 687
															    call 'hipe_rtl':'mk_alu'
																(_cor5, _cor5, 'add', BitSize)
															in  let <_cor28> =
																%% Line 688
																call 'hipe_tagscheme':'get_field_from_term'
																    ({'sub_binary','orig'}, _cor6, _cor2)
															    in  let <_cor29> =
																    %% Line 689
																    call 'hipe_rtl':'label_name'
																	(JoinLbl)
																in  let <_cor30> =
																	%% Line 689
																	call 'hipe_rtl':'mk_goto'
																	    (_cor29)
																    in  let <_cor31> =
																	    %% Line 691
																	    call 'hipe_rtl':'mk_imm'
																		(0)
																	in  let <_cor32> =
																		%% Line 691
																		call 'hipe_rtl':'mk_move'
																		    (_cor3, _cor31)
																	    in  let <_cor33> =
																		    %% Line 692
																		    call 'hipe_rtl':'mk_move'
																			(_cor2, _cor6)
																		in  let <_cor10> =
																			%% Line 694
																			apply 'get_base'/2
																			    (_cor2, _cor4)
																		    in  let <_cor9> =
																			    %% Line 695
																			    call 'hipe_rtl':'mk_goto'
																				(_cor1)
																			in  let <_cor11> =
																				%% Line 694
																				call 'erlang':'++'
																				    (_cor10, %% Line 695
																					     [_cor9|[]])
																			    in  %% Line 673
																				[_cor13|%% Line 675
																					[SuccessLbl|%% Line 676
																						    [_cor14|%% Line 677
																							    [_cor16|%% Line 678
																								    [_cor19|%% Line 680
																									    [SubLbl|%% Line 681
																										    [_cor20|%% Line 682
																											    [_cor22|%% Line 683
																												    [_cor23|%% Line 684
																													    [_cor24|%% Line 685
																														    [_cor25|%% Line 686
																															    [_cor26|%% Line 687
																																    [_cor27|%% Line 688
																																	    [_cor28|%% Line 689
																																		    [_cor30|%% Line 690
																																			    [OtherLbl|%% Line 691
																																				      [_cor32|%% Line 692
																																					      [_cor33|%% Line 693
																																						      [JoinLbl|_cor11]]]]]]]]]]]]]]]]]]]
							( <_cor8> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_148})
							  -| ['compiler_generated'] )
						      end
			      ( <_cor7> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_455})
				-| ['compiler_generated'] )
			    end
'get_base'/2 =
    %% Line 699
    fun (_cor1,_cor0) ->
	let <_4325> =
	    %% Line 793
	    call 'hipe_rtl':'mk_new_label'
		()
	in  let <_4516> =
		%% Line 793
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <_cor3> =
		    %% Line 793
		    apply 'create_lbls'/1
			(1)
		in  let <_fol224> =
			%% Line 793
			[_4516|_cor3]
		    in  let <_4570> =
			    %% Line 793
			    [_4325|_fol224]
			in  %% Line 700
			    case _4570 of
			      <[HeapLbl|[REFCLbl|[EndLbl|[]]]]> when 'true' ->
				  let <_cor4> =
				      %% Line 701
				      call 'hipe_rtl':'label_name'
					  (HeapLbl)
				  in  let <_cor3> =
					  %% Line 702
					  call 'hipe_rtl':'label_name'
					      (REFCLbl)
				      in  let <_cor5> =
					      %% Line 701
					      call 'hipe_tagscheme':'test_heap_binary'
						  (_cor1, _cor4, _cor3)
					  in  let <_cor7> =
						  %% Line 704
						  call 'hipe_rtl':'mk_imm'
						      (14)
					      in  let <_cor8> =
						      %% Line 704
						      call 'hipe_rtl':'mk_alu'
							  (_cor0, _cor1, 'add', _cor7)
						  in  let <_cor9> =
							  %% Line 705
							  call 'hipe_rtl':'label_name'
							      (EndLbl)
						      in  let <_cor10> =
							      %% Line 705
							      call 'hipe_rtl':'mk_goto'
								  (_cor9)
							  in  let <_cor12> =
								  %% Line 707
								  call 'hipe_rtl':'mk_imm'
								      (30)
							      in  let <_cor13> =
								      %% Line 707
								      call 'hipe_rtl':'mk_load'
									  (_cor0, _cor1, _cor12)
								  in  %% Line 701
								      [_cor5|%% Line 703
									     [HeapLbl|%% Line 704
										      [_cor8|%% Line 705
											     [_cor10|%% Line 706
												     [REFCLbl|%% Line 707
													      [_cor13|%% Line 708
														      [EndLbl|[]]]]]]]]
			      ( <_cor2> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_4570})
				-| ['compiler_generated'] )
			    end
'extract_matchstate_var'/2 =
    %% Line 710
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'binsize',Ms> when 'true' ->
	      let <BinSize> =
		  %% Line 711
		  call 'hipe_rtl':'mk_new_reg_gcsafe'
		      ()
	      in  let <_cor3> =
		      %% Line 713
		      call 'hipe_tagscheme':'get_field_from_term'
			  ({'matchstate',{'matchbuffer','binsize'}}, _cor0, BinSize)
		  in  %% Line 712
		      {BinSize,_cor3}
	  %% Line 714
	  <'offset',Ms> when 'true' ->
	      let <Offset> =
		  %% Line 715
		  call 'hipe_rtl':'mk_new_reg_gcsafe'
		      ()
	      in  let <_cor5> =
		      %% Line 717
		      call 'hipe_tagscheme':'get_field_from_term'
			  ({'matchstate',{'matchbuffer','offset'}}, _cor0, Offset)
		  in  %% Line 716
		      {Offset,_cor5}
	  %% Line 718
	  <'base',Ms> when 'true' ->
	      let <Base> =
		  %% Line 719
		  call 'hipe_rtl':'mk_new_reg'
		      ()
	      in  let <_cor7> =
		      %% Line 721
		      call 'hipe_tagscheme':'get_field_from_term'
			  ({'matchstate',{'matchbuffer','base'}}, _cor0, Base)
		  in  %% Line 720
		      {Base,_cor7}
	  %% Line 722
	  <'orig',Ms> when 'true' ->
	      let <Orig> =
		  %% Line 723
		  call 'hipe_rtl':'mk_new_var'
		      ()
	      in  let <_cor9> =
		      %% Line 725
		      call 'hipe_tagscheme':'get_field_from_term'
			  ({'matchstate',{'matchbuffer','orig'}}, _cor0, Orig)
		  in  %% Line 724
		      {Orig,_cor9}
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'extract_matchstate_var',2}}] )
	    -| ['compiler_generated'] )
	end
'extract_matchstate_vars'/2 =
    %% Line 727
    fun (_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 728
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor4) ->
			  case _cor4 of
			    <[Name|_cor3]> when 'true' ->
				let <_cor5> =
				    apply 'extract_matchstate_var'/2
					(Name, _cor0)
				in  let <_cor6> =
					apply 'lc$^0'/1
					    (_cor3)
				    in  ( [_cor5|_cor6]
					  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_4759> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor4})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (_cor1)
	      -| ['list_comprehension'] )
	in  %% Line 728
	    call 'lists':'unzip'
		(_cor7)
'check_size'/6 =
    %% Line 730
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <TrueLbl> =
	    call 'hipe_rtl':'mk_new_label'
		()
	in  let <_2124> =
		call 'hipe_rtl':'label_name'
		    (TrueLbl)
	    in  let <_cor6> =
		    call 'hipe_rtl':'mk_alub'
			(_cor2, _cor5, 'add', _cor4, 'ltu', _cor0, _2124)
		in  let <_cor6> =
			[_cor6|[TrueLbl|[]]]
		    in  let <_cor7> =
			    %% Line 732
			    call 'hipe_rtl':'mk_branch'
				(_cor2, 'leu', _cor3, _cor1, _cor0, 9.89999999999999991118e-01)
			in  %% Line 731
			    [_cor6|%% Line 732
				   [_cor7|[]]]
'check_size'/7 =
    %% Line 734
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Offset,Size,_X_BinSize,Tmp1,'true',ContLblName,_X_FalseLblName> when 'true' ->
	      let <_cor7> =
		  %% Line 735
		  call 'hipe_rtl':'mk_alu'
		      (_cor3, _cor6, 'add', _cor5)
	      in  let <_cor8> =
		      %% Line 736
		      call 'hipe_rtl':'mk_goto'
			  (_cor1)
		  in  %% Line 735
		      [_cor7|%% Line 736
			     [_cor8|[]]]
	  %% Line 737
	  <Offset,Size,BinSize,Tmp1,'false',ContLblName,FalseLblName> when 'true' ->
	      %% Line 738
	      apply 'check_size'/6
		  (_cor6, _cor5, _cor4, _cor3, _cor1, _cor0)
	  ( <_cor15,_cor14,_cor13,_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'check_size',7}}] )
	    -| ['compiler_generated'] )
	end
'get_type'/2 =
    %% Line 745
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'true',LittleEndian> when 'true' ->
	      let <_cor2> =
		  %% Line 750
		  case _cor0 of
		    <'true'> when 'true' ->
			%% Line 751
			'little'
		    %% Line 752
		    <'false'> when 'true' ->
			%% Line 753
			'big'
		    ( <_2230> when 'true' ->
			  primop 'match_fail'
			      ({'function_clause',_cor0})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 746
		  {'signed',_cor2}
	  %% Line 747
	  <'false',LittleEndian> when 'true' ->
	      let <_cor3> =
		  %% Line 750
		  case _cor0 of
		    <'true'> when 'true' ->
			%% Line 751
			'little'
		    %% Line 752
		    <'false'> when 'true' ->
			%% Line 753
			'big'
		    ( <_4595> when 'true' ->
			  primop 'match_fail'
			      ({'function_clause',_cor0})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 748
		  {'unsigned',_cor3}
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'get_type',2}}] )
	    -| ['compiler_generated'] )
	end
'opt_update_ms'/2 =
    %% Line 782
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[NewMs|[]],OldMs> when 'true' ->
	      let <_cor2> =
		  %% Line 783
		  call 'hipe_rtl':'mk_move'
		      (NewMs, _cor0)
	      in  %% Line 783
		  [_cor2|[]]
	  %% Line 784
	  <[],_X_OldMs> when 'true' ->
	      %% Line 785
	      []
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'opt_update_ms',2}}] )
	    -| ['compiler_generated'] )
	end
'create_lbls'/1 =
    %% Line 790
    fun (_cor0) ->
	case _cor0 of
	  <0> when 'true' ->
	      %% Line 791
	      []
	  %% Line 792
	  <X>
	      when call 'erlang':'>'
		    (_cor0,
		     0) ->
	      let <_cor1> =
		  %% Line 793
		  call 'hipe_rtl':'mk_new_label'
		      ()
	      in  let <_cor2> =
		      %% Line 793
		      call 'erlang':'-'
			  (_cor0, 1)
		  in  let <_cor3> =
			  %% Line 793
			  apply 'create_lbls'/1
			      (_cor2)
		      in  %% Line 793
			  [_cor1|_cor3]
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'create_lbls',1}}] )
	    -| ['compiler_generated'] )
	end
'make_dyn_prep'/2 =
    %% Line 795
    fun (_cor1,_cor0) ->
	let <_4107> =
	    call 'hipe_rtl':'mk_new_label'
		()
	in  let <_6882> =
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <_cor3> =
		    apply 'create_lbls'/1
			(0)
		in  let <_fol225> =
			[_6882|_cor3]
		    in  let <_1661> =
			    [_4107|_fol225]
			in  %% Line 796
			    case _1661 of
			      <[CLbl|[SuccessLbl|[]]]> when 'true' ->
				  let <_cor5> =
				      %% Line 797
				      call 'hipe_rtl_arch':'word_size'
					  ()
				  in  let <_cor6> =
					  %% Line 797
					  call 'erlang':'*'
					      (_cor5, 8)
				      in  let <_cor7> =
					      %% Line 797
					      call 'erlang':'-'
						  (_cor6, 5)
					  in  let <_cor8> =
						  %% Line 797
						  call 'hipe_rtl':'mk_imm'
						      (_cor7)
					      in  let <_cor4> =
						      %% Line 798
						      call 'hipe_rtl':'label_name'
							  (SuccessLbl)
						  in  let <_cor3> =
							  %% Line 799
							  call 'hipe_rtl':'label_name'
							      (CLbl)
						      in  let <_cor9> =
							      %% Line 797
							      call 'hipe_rtl':'mk_branch'
								  (_cor1, 'le', _cor8, _cor4, _cor3)
							  in  let <Init> =
								  %% Line 797
								  [_cor9|%% Line 800
									 [SuccessLbl|[]]]
							      in  let <End> =
								      %% Line 801
								      [CLbl|_cor0]
								  in  %% Line 802
								      {Init,End}
			      ( <_cor2> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_1661})
				-| ['compiler_generated'] )
			    end
'get_unaligned_int'/7 =
    %% Line 808
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_6724> =
	    %% Line 1069
	    call 'hipe_rtl':'mk_new_reg'
		()
	in  let <_4359> =
		%% Line 1069
		[_6724|%% Line 1071
		       []]
	    in  %% Line 809
		case _4359 of
		  <[Reg|[]]> when 'true' ->
		      let <_cor8> =
			  %% Line 810
			  apply 'get_maybe_unaligned_int_to_reg'/6
			      (Reg, _cor5, _cor4, _cor3, _cor2, _cor1)
		      in  let <_cor9> =
			      %% Line 811
			      apply 'do_bignum_code'/5
				  (_cor5, _cor1, Reg, _cor6, _cor0)
			  in  %% Line 810
			      [_cor8|%% Line 811
				     [_cor9|[]]]
		  ( <_cor7> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_4359})
		    -| ['compiler_generated'] )
		end
'get_maybe_unaligned_int_to_reg'/6 =
    %% Line 813
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_2584> =
	    %% Line 1069
	    call 'hipe_rtl':'mk_new_reg'
		()
	in  let <_3703> =
		%% Line 1069
		[_2584|%% Line 1071
		       []]
	    in  %% Line 814
		case _3703 of
		  <[LowBits|[]]> when 'true' ->
		      let <_5996> =
			  call 'hipe_rtl':'mk_new_label'
			      ()
		      in  let <_4129> =
			      call 'hipe_rtl':'mk_new_label'
				  ()
			  in  let <_2743> =
				  apply 'create_lbls'/1
				      (1)
			      in  let <_4773> =
				      [_4129|_2743]
				  in  let <_983> =
					  [_5996|_4773]
				      in  %% Line 815
					  case _983 of
					    <[AlignedLbl|[UnAlignedLbl|[EndLbl|[]]]]> when 'true' ->
						let <_cor10> =
						    %% Line 816
						    call 'hipe_rtl':'mk_imm'
							(7)
						in  let <_cor9> =
							%% Line 817
							call 'hipe_rtl':'label_name'
							    (AlignedLbl)
						    in  let <_cor8> =
							    %% Line 818
							    call 'hipe_rtl':'label_name'
								(UnAlignedLbl)
							in  let <_cor11> =
								%% Line 816
								call 'hipe_rtl':'mk_alub'
								    (LowBits, _cor2, 'and', _cor10, %% Line 817
												    'eq', _cor9, _cor8)
							    in  let <_cor12> =
								    %% Line 820
								    apply 'get_int_to_reg'/6
									(_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
								in  let <_cor13> =
									%% Line 821
									call 'hipe_rtl':'label_name'
									    (EndLbl)
								    in  let <_cor14> =
									    %% Line 821
									    call 'hipe_rtl':'mk_goto'
										(_cor13)
									in  let <_cor15> =
										%% Line 823
										apply 'get_unaligned_int_to_reg'/7
										    (_cor5, _cor4, _cor3, _cor2, LowBits, _cor1, _cor0)
									    in  %% Line 816
										[_cor11|%% Line 819
											[AlignedLbl|%% Line 820
												    [_cor12|%% Line 821
													    [_cor14|%% Line 822
														    [UnAlignedLbl|%% Line 823
																  [_cor15|%% Line 824
																	  [EndLbl|[]]]]]]]]
					    ( <_cor7> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_983})
					      -| ['compiler_generated'] )
					  end
		  ( <_cor6> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_3703})
		    -| ['compiler_generated'] )
		end
'get_unaligned_int_to_reg'/7 =
    %% Line 826
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_1315> =
	    %% Line 1074
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_965> =
		%% Line 1074
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <_2226> =
		    %% Line 1074
		    apply 'create_gcsafe_regs'/1
			(3)
		in  let <_4831> =
			%% Line 1074
			[_965|_2226]
		    in  let <_4624> =
			    %% Line 1074
			    [_1315|_4831]
			in  %% Line 827
			    case _4624 of
			      <[ByteOffset|[ShiftBits|[LoadDst|[Tmp|[TotBits|[]]]]]]> when 'true' ->
				  let <_208> =
				      call 'hipe_rtl':'mk_new_label'
					  ()
				  in  let <_6950> =
					  call 'hipe_rtl':'mk_new_label'
					      ()
				      in  let <_6736> =
					      apply 'create_lbls'/1
						  (1)
					  in  let <_3863> =
						  [_6950|_6736]
					      in  let <_4438> =
						      [_208|_3863]
						  in  %% Line 828
						      case _4438 of
							<[MoreLbl|[LessLbl|[JoinLbl|[]]]]> when 'true' ->
							    let <WordSize> =
								%% Line 829
								call 'hipe_rtl_arch':'word_size'
								    ()
							    in  let <_cor10> =
								    %% Line 830
								    call 'erlang':'-'
									(_cor5, 1)
								in  let <_cor11> =
									%% Line 830
									call 'erlang':'div'
									    (_cor10, 8)
								    in  let <MinLoad> =
									    %% Line 830
									    call 'erlang':'+'
										(_cor11, 1)
									in  let <MaxLoad> =
										%% Line 831
										call 'erlang':'+'
										    (MinLoad, 1)
									    in  let <_cor14> =
										    %% Line 833
										    call 'hipe_rtl':'mk_imm'
											(_cor5)
										in  let <_cor15> =
											%% Line 833
											call 'hipe_rtl':'mk_alu'
											    (TotBits, _cor2, 'add', _cor14)
										    in  let <_cor16> =
											    %% Line 834
											    call 'hipe_rtl':'mk_imm'
												(3)
											in  let <_cor17> =
												%% Line 834
												call 'hipe_rtl':'mk_alu'
												    (ByteOffset, _cor3, 'srl', _cor16)
											    in  let <Code1> =
												    %% Line 833
												    [_cor15|%% Line 834
													    [_cor17|[]]]
												in  let <_cor19> =
													%% Line 836
													call 'erlang':'rem'
													    (_cor5, 8)
												    in  let <_cor53> =
													    %% Line 836
													    case <_cor19,MinLoad> of
													      %% Line 837
													      <1,_cor69> when 'true' ->
														  let <_cor20> =
														      %% Line 838
														      apply 'load_bytes'/5
															  (LoadDst, _cor4, ByteOffset, _cor0, MinLoad)
														  in  let <_cor21> =
															  %% Line 840
															  call 'erlang':'-'
															      (WordSize, MinLoad)
														      in  let <_cor22> =
															      %% Line 840
															      call 'erlang':'*'
																  (_cor21, 8)
															  in  let <_cor23> =
																  %% Line 840
																  call 'hipe_rtl':'mk_imm'
																      (_cor22)
															      in  let <_cor24> =
																      %% Line 839
																      call 'hipe_rtl':'mk_alu'
																	  (ShiftBits, _cor2, 'add', _cor23)
																  in  %% Line 838
																      [_cor20|%% Line 839
																	      [_cor24|%% Line 840
																		      []]]
													      %% Line 841
													      <_cor70,_cor71>
														  when call 'erlang':'=:='
															(MinLoad,
															 WordSize) ->
														  let <_cor28> =
														      %% Line 843
														      call 'erlang':'*'
															  (MinLoad, 8)
														  in  let <_cor29> =
															  %% Line 843
															  call 'hipe_rtl':'mk_imm'
															      (_cor28)
														      in  let <_cor27> =
															      %% Line 844
															      call 'hipe_rtl':'label_name'
																  (LessLbl)
															  in  let <_cor26> =
																  %% Line 845
																  call 'hipe_rtl':'label_name'
																      (MoreLbl)
															      in  let <_cor30> =
																      %% Line 843
																      call 'hipe_rtl':'mk_branch'
																	  (TotBits, 'le', _cor29, _cor27, _cor26)
																  in  let <_cor31> =
																	  %% Line 847
																	  apply 'load_bytes'/5
																	      (LoadDst, _cor4, ByteOffset, _cor0, MinLoad)
																      in  let <_cor32> =
																	      %% Line 849
																	      call 'erlang':'-'
																		  (WordSize, MinLoad)
																	  in  let <_cor33> =
																		  %% Line 849
																		  call 'erlang':'*'
																		      (_cor32, 8)
																	      in  let <_cor34> =
																		      %% Line 849
																		      call 'hipe_rtl':'mk_imm'
																			  (_cor33)
																		  in  let <_cor35> =
																			  %% Line 848
																			  call 'hipe_rtl':'mk_alu'
																			      (ShiftBits, _cor2, 'add', _cor34)
																		      in  let <_cor36> =
																			      %% Line 850
																			      call 'hipe_rtl':'label_name'
																				  (JoinLbl)
																			  in  let <_cor37> =
																				  %% Line 850
																				  call 'hipe_rtl':'mk_goto'
																				      (_cor36)
																			      in  let <_cor38> =
																				      %% Line 852
																				      apply 'load_bytes'/5
																					  (LoadDst, _cor4, ByteOffset, {'unsigned','big'}, MinLoad)
																				  in  let <_cor39> =
																					  %% Line 853
																					  call 'hipe_rtl':'mk_alu'
																					      (LoadDst, LoadDst, 'sll', _cor2)
																				      in  let <_cor40> =
																					      %% Line 854
																					      apply 'load_bytes'/5
																						  (Tmp, _cor4, ByteOffset, {'unsigned','big'}, 1)
																					  in  let <_cor41> =
																						  %% Line 855
																						  call 'hipe_rtl':'mk_imm'
																						      (8)
																					      in  let <_cor42> =
																						      %% Line 855
																						      call 'hipe_rtl':'mk_alu'
																							  (_cor2, _cor41, 'sub', _cor2)
																						  in  let <_cor43> =
																							  %% Line 856
																							  call 'hipe_rtl':'mk_alu'
																							      (Tmp, Tmp, 'srl', _cor2)
																						      in  let <_cor44> =
																							      %% Line 857
																							      call 'hipe_rtl':'mk_alu'
																								  (LoadDst, LoadDst, 'or', Tmp)
																							  in  let <_cor45> =
																								  %% Line 858
																								  call 'hipe_rtl':'mk_imm'
																								      (0)
																							      in  let <_cor46> =
																								      %% Line 858
																								      call 'hipe_rtl':'mk_move'
																									  (ShiftBits, _cor45)
																								  in  %% Line 843
																								      [_cor30|%% Line 846
																									      [LessLbl|%% Line 847
																										       [_cor31|%% Line 848
																											       [_cor35|%% Line 850
																												       [_cor37|%% Line 851
																													       [MoreLbl|%% Line 852
																															[_cor38|%% Line 853
																																[_cor39|%% Line 854
																																	[_cor40|%% Line 855
																																		[_cor42|%% Line 856
																																			[_cor43|%% Line 857
																																				[_cor44|%% Line 858
																																					[_cor46|%% Line 859
																																						[JoinLbl|[]]]]]]]]]]]]]]]
													      %% Line 860
													      <_cor72,_cor73> when 'true' ->
														  let <_cor47> =
														      %% Line 861
														      apply 'load_bytes'/5
															  (LoadDst, _cor4, ByteOffset, _cor0, MaxLoad)
														  in  let <_cor48> =
															  %% Line 863
															  call 'erlang':'-'
															      (WordSize, MaxLoad)
														      in  let <_cor49> =
															      %% Line 863
															      call 'erlang':'*'
																  (_cor48, 8)
															  in  let <_cor50> =
																  %% Line 863
																  call 'hipe_rtl':'mk_imm'
																      (_cor49)
															      in  let <_cor51> =
																      %% Line 862
																      call 'hipe_rtl':'mk_alu'
																	  (ShiftBits, _cor2, 'add', _cor50)
																  in  %% Line 861
																      [_cor47|%% Line 862
																	      [_cor51|%% Line 863
																		      []]]
													    end
													in  let <_cor55> =
														%% Line 866
														call 'hipe_rtl':'mk_alu'
														    (Tmp, LoadDst, 'sll', ShiftBits)
													    in  let <_cor56> =
														    %% Line 868
														    call 'erlang':'*'
															(WordSize, 8)
														in  let <_cor57> =
															%% Line 868
															call 'erlang':'-'
															    (_cor56, _cor5)
														    in  let <_cor58> =
															    %% Line 868
															    call 'hipe_rtl':'mk_imm'
																(_cor57)
															in  let <_cor59> =
																%% Line 867
																call 'hipe_rtl':'mk_alu'
																    (_cor6, Tmp, _cor1, _cor58)
															    in  let <Code3> =
																    %% Line 866
																    [_cor55|%% Line 867
																	    [_cor59|%% Line 868
																		    []]]
																in  let <_cor61> =
																	%% Line 869
																	call 'erlang':'++'
																	    (_cor53, Code3)
																    in  %% Line 869
																	call 'erlang':'++'
																	    (Code1, _cor61)
							( <_cor8> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_4438})
							  -| ['compiler_generated'] )
						      end
			      ( <_cor7> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_4624})
				-| ['compiler_generated'] )
			    end
'get_int'/7 =
    %% Line 871
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_280> =
	    %% Line 1074
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_1374> =
		%% Line 1074
		[_280|%% Line 1076
		      []]
	    in  %% Line 872
		case _1374 of
		  <[Reg|[]]> when 'true' ->
		      let <_cor8> =
			  %% Line 873
			  apply 'get_int_to_reg'/6
			      (Reg, _cor5, _cor4, _cor3, _cor2, _cor1)
		      in  let <_cor9> =
			      %% Line 874
			      apply 'do_bignum_code'/5
				  (_cor5, _cor1, Reg, _cor6, _cor0)
			  in  %% Line 873
			      [_cor8|%% Line 874
				     [_cor9|[]]]
		  ( <_cor7> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_1374})
		    -| ['compiler_generated'] )
		end
'get_int_to_reg'/6 =
    %% Line 876
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_5337> =
	    %% Line 1074
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_4097> =
		%% Line 1074
		[_5337|%% Line 1076
		       []]
	    in  %% Line 877
		case _4097 of
		  <[ByteOffset|[]]> when 'true' ->
		      let <_cor7> =
			  %% Line 879
			  call 'hipe_rtl':'mk_imm'
			      (3)
		      in  let <_cor8> =
			      %% Line 879
			      call 'hipe_rtl':'mk_alu'
				  (ByteOffset, _cor2, 'srl', _cor7)
			  in  let <_cor9> =
				  %% Line 880
				  call 'erlang':'-'
				      (_cor4, 1)
			      in  let <_cor10> =
				      %% Line 880
				      call 'erlang':'div'
					  (_cor9, 8)
				  in  let <_cor11> =
					  %% Line 880
					  call 'erlang':'+'
					      (_cor10, 1)
				      in  let <_cor12> =
					      %% Line 880
					      apply 'load_bytes'/5
						  (_cor5, _cor3, ByteOffset, _cor0, _cor11)
					  in  let <Code1> =
						  %% Line 879
						  [_cor8|%% Line 880
							 [_cor12|[]]]
					      in  let <_913> =
						      %% Line 882
						      call 'erlang':'rem'
							  (_cor4, 8)
						  in  let <_cor19> =
							  %% Line 882
							  case _913 of
							    %% Line 883
							    <0> when 'true' ->
								%% Line 884
								[]
							    %% Line 885
							    <_cor27> when 'true' ->
								let <_cor14> =
								    %% Line 887
								    call 'erlang':'rem'
									(_cor4, 8)
								in  let <_cor15> =
									%% Line 887
									call 'erlang':'-'
									    (8, _cor14)
								    in  let <_cor16> =
									    %% Line 887
									    call 'hipe_rtl':'mk_imm'
										(_cor15)
									in  let <_cor17> =
										%% Line 886
										call 'hipe_rtl':'mk_alu'
										    (_cor5, _cor5, _cor1, _cor16)
									    in  %% Line 886
										[_cor17|%% Line 887
											[]]
							  end
						      in  %% Line 889
							  call 'erlang':'++'
							      (Code1, _cor19)
		  ( <_cor6> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_4097})
		    -| ['compiler_generated'] )
		end
'get_big_unknown_int'/7 =
    %% Line 891
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_4124> =
	    %% Line 1074
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_3992> =
		%% Line 1074
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <_2940> =
		    %% Line 1074
		    apply 'create_gcsafe_regs'/1
			(3)
		in  let <_3904> =
			%% Line 1074
			[_3992|_2940]
		    in  let <_3088> =
			    %% Line 1074
			    [_4124|_3904]
			in  %% Line 893
			    case _3088 of
			      <[LoadDst|[ByteOffset|[Limit|[Tmp|[LowBits|[]]]]]]> when 'true' ->
				  let <_3629> =
				      call 'hipe_rtl':'mk_new_label'
					  ()
				  in  let <_4725> =
					  call 'hipe_rtl':'mk_new_label'
					      ()
				      in  let <_2636> =
					      apply 'create_lbls'/1
						  (4)
					  in  let <_4731> =
						  [_4725|_2636]
					      in  let <_6774> =
						      [_3629|_4731]
						  in  %% Line 894
						      case _6774 of
							<[ContLbl|[BackLbl|[LoopLbl|[TagLbl|[LastLbl|[EndLbl|[]]]]]]]> when 'true' ->
							    let <_cor10> =
								%% Line 895
								call 'hipe_rtl':'mk_imm'
								    (0)
							    in  let <_cor11> =
								    %% Line 895
								    call 'hipe_rtl':'mk_move'
									(LoadDst, _cor10)
								in  let <_cor13> =
									%% Line 896
									call 'hipe_rtl':'label_name'
									    (ContLbl)
								    in  let <_cor12> =
									    %% Line 897
									    call 'hipe_rtl':'label_name'
										(TagLbl)
									in  let <_cor14> =
										%% Line 896
										call 'hipe_rtl':'mk_branch'
										    (_cor3, 'ne', _cor4, _cor13, _cor12, %% Line 897
															 9.89999999999999991118e-01)
									    in  let <_cor15> =
										    %% Line 899
										    call 'hipe_rtl':'mk_imm'
											(1)
										in  let <_cor16> =
											%% Line 899
											call 'hipe_rtl':'mk_alu'
											    (Limit, _cor3, 'sub', _cor15)
										    in  let <_cor17> =
											    %% Line 900
											    call 'hipe_rtl':'mk_imm'
												(3)
											in  let <_cor18> =
												%% Line 900
												call 'hipe_rtl':'mk_alu'
												    (Limit, Limit, 'srl', _cor17)
											    in  let <_cor19> =
												    %% Line 901
												    call 'hipe_rtl':'mk_imm'
													(3)
												in  let <_cor20> =
													%% Line 901
													call 'hipe_rtl':'mk_alu'
													    (ByteOffset, _cor4, 'srl', _cor19)
												    in  let <_cor21> =
													    %% Line 902
													    apply 'load_bytes'/5
														(LoadDst, _cor5, ByteOffset, _cor1, 1)
													in  let <_cor23> =
														%% Line 904
														call 'hipe_rtl':'label_name'
														    (LoopLbl)
													    in  let <_cor22> =
														    %% Line 905
														    call 'hipe_rtl':'label_name'
															(EndLbl)
														in  let <_cor24> =
															%% Line 904
															call 'hipe_rtl':'mk_branch'
															    (ByteOffset, 'le', Limit, _cor23, _cor22)
														    in  let <_cor25> =
															    %% Line 907
															    apply 'load_bytes'/5
																(Tmp, _cor5, ByteOffset, {'unsigned','big'}, 1)
															in  let <_cor26> =
																%% Line 908
																call 'hipe_rtl':'mk_imm'
																    (8)
															    in  let <_cor27> =
																    %% Line 908
																    call 'hipe_rtl':'mk_alu'
																	(LoadDst, LoadDst, 'sll', _cor26)
																in  let <_cor28> =
																	%% Line 909
																	call 'hipe_rtl':'mk_alu'
																	    (LoadDst, LoadDst, 'or', Tmp)
																    in  let <_cor29> =
																	    %% Line 910
																	    call 'hipe_rtl':'label_name'
																		(BackLbl)
																	in  let <_cor30> =
																		%% Line 910
																		call 'hipe_rtl':'mk_goto'
																		    (_cor29)
																	    in  let <_cor33> =
																		    %% Line 912
																		    call 'hipe_rtl':'mk_imm'
																			(7)
																		in  let <_cor32> =
																			%% Line 913
																			call 'hipe_rtl':'label_name'
																			    (TagLbl)
																		    in  let <_cor31> =
																			    %% Line 913
																			    call 'hipe_rtl':'label_name'
																				(LastLbl)
																			in  let <_cor34> =
																				%% Line 912
																				call 'hipe_rtl':'mk_alub'
																				    (LowBits, _cor3, 'and', _cor33, 'eq', _cor32, _cor31)
																			    in  let <_cor35> =
																				    %% Line 915
																				    call 'hipe_rtl':'mk_imm'
																					(8)
																				in  let <_cor36> =
																					%% Line 915
																					call 'hipe_rtl':'mk_alu'
																					    (LowBits, _cor35, 'sub', LowBits)
																				    in  let <_cor37> =
																					    %% Line 916
																					    call 'hipe_rtl':'mk_alu'
																						(LoadDst, LoadDst, _cor2, LowBits)
																					in  let <_cor9> =
																						%% Line 918
																						apply 'do_bignum_code'/5
																						    (64, _cor1, LoadDst, _cor6, _cor0)
																					    in  %% Line 895
																						[_cor11|%% Line 896
																							[_cor14|%% Line 898
																								[ContLbl|%% Line 899
																									 [_cor16|%% Line 900
																										 [_cor18|%% Line 901
																											 [_cor20|%% Line 902
																												 [_cor21|%% Line 903
																													 [BackLbl|%% Line 904
																														  [_cor24|%% Line 906
																															  [LoopLbl|%% Line 907
																																   [_cor25|%% Line 908
																																	   [_cor27|%% Line 909
																																		   [_cor28|%% Line 910
																																			   [_cor30|%% Line 911
																																				   [EndLbl|%% Line 912
																																					   [_cor34|%% Line 914
																																						   [LastLbl|%% Line 915
																																							    [_cor36|%% Line 916
																																								    [_cor37|%% Line 917
																																									    [TagLbl|_cor9]]]]]]]]]]]]]]]]]]]]
							( <_cor8> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_6774})
							  -| ['compiler_generated'] )
						      end
			      ( <_cor7> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_3088})
				-| ['compiler_generated'] )
			    end
'get_little_unknown_int'/7 =
    %% Line 920
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_7406> =
	    %% Line 1074
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <_4127> =
		%% Line 1074
		call 'hipe_rtl':'mk_new_reg_gcsafe'
		    ()
	    in  let <_2083> =
		    %% Line 1074
		    apply 'create_gcsafe_regs'/1
			(4)
		in  let <_6792> =
			%% Line 1074
			[_4127|_2083]
		    in  let <_22> =
			    %% Line 1074
			    [_7406|_6792]
			in  %% Line 922
			    case _22 of
			      <[LoadDst|[ByteOffset|[Limit|[ShiftReg|[LowBits|[Tmp|[]]]]]]]> when 'true' ->
				  let <_7345> =
				      call 'hipe_rtl':'mk_new_label'
					  ()
				  in  let <_4682> =
					  call 'hipe_rtl':'mk_new_label'
					      ()
				      in  let <_1599> =
					      apply 'create_lbls'/1
						  (3)
					  in  let <_8303> =
						  [_4682|_1599]
					      in  let <_7119> =
						      [_7345|_8303]
						  in  %% Line 923
						      case _7119 of
							<[ContLbl|[BackLbl|[LoopLbl|[DoneLbl|[TagLbl|[]]]]]]> when 'true' ->
							    let <_cor10> =
								%% Line 924
								call 'hipe_rtl':'mk_imm'
								    (0)
							    in  let <_cor11> =
								    %% Line 924
								    call 'hipe_rtl':'mk_move'
									(LoadDst, _cor10)
								in  let <_cor13> =
									%% Line 925
									call 'hipe_rtl':'label_name'
									    (ContLbl)
								    in  let <_cor12> =
									    %% Line 926
									    call 'hipe_rtl':'label_name'
										(TagLbl)
									in  let <_cor14> =
										%% Line 925
										call 'hipe_rtl':'mk_branch'
										    (_cor3, 'ne', _cor4, _cor13, _cor12, %% Line 926
															 9.89999999999999991118e-01)
									    in  let <_cor15> =
										    %% Line 928
										    call 'hipe_rtl':'mk_imm'
											(1)
										in  let <_cor16> =
											%% Line 928
											call 'hipe_rtl':'mk_alu'
											    (Tmp, _cor3, 'sub', _cor15)
										    in  let <_cor17> =
											    %% Line 929
											    call 'hipe_rtl':'mk_imm'
												(3)
											in  let <_cor18> =
												%% Line 929
												call 'hipe_rtl':'mk_alu'
												    (ByteOffset, _cor4, 'srl', _cor17)
											    in  let <_cor19> =
												    %% Line 930
												    call 'hipe_rtl':'mk_imm'
													(3)
												in  let <_cor20> =
													%% Line 930
													call 'hipe_rtl':'mk_alu'
													    (Limit, Tmp, 'srl', _cor19)
												    in  let <_cor21> =
													    %% Line 931
													    call 'hipe_rtl':'mk_imm'
														(0)
													in  let <_cor22> =
														%% Line 931
														call 'hipe_rtl':'mk_move'
														    (ShiftReg, _cor21)
													    in  let <_cor24> =
														    %% Line 934
														    call 'hipe_rtl':'label_name'
															(LoopLbl)
														in  let <_cor23> =
															%% Line 935
															call 'hipe_rtl':'label_name'
															    (DoneLbl)
														    in  let <_cor25> =
															    %% Line 933
															    call 'hipe_rtl':'mk_branch'
																(ByteOffset, 'lt', Limit, _cor24, _cor23)
															in  let <_cor26> =
																%% Line 937
																apply 'load_bytes'/5
																    (Tmp, _cor5, ByteOffset, {'unsigned','big'}, 1)
															    in  let <_cor27> =
																    %% Line 938
																    call 'hipe_rtl':'mk_alu'
																	(Tmp, Tmp, 'sll', ShiftReg)
																in  let <_cor28> =
																	%% Line 939
																	call 'hipe_rtl':'mk_imm'
																	    (8)
																    in  let <_cor29> =
																	    %% Line 939
																	    call 'hipe_rtl':'mk_alu'
																		(ShiftReg, ShiftReg, 'add', _cor28)
																	in  let <_cor30> =
																		%% Line 940
																		call 'hipe_rtl':'mk_alu'
																		    (LoadDst, LoadDst, 'or', Tmp)
																	    in  let <_cor31> =
																		    %% Line 941
																		    call 'hipe_rtl':'label_name'
																			(BackLbl)
																		in  let <_cor32> =
																			%% Line 941
																			call 'hipe_rtl':'mk_goto'
																			    (_cor31)
																		    in  let <_cor33> =
																			    %% Line 943
																			    call 'hipe_rtl':'mk_imm'
																				(7)
																			in  let <_cor34> =
																				%% Line 943
																				call 'hipe_rtl':'mk_alu'
																				    (LowBits, _cor3, 'and', _cor33)
																			    in  let <_cor35> =
																				    %% Line 944
																				    call 'hipe_rtl':'mk_imm'
																					(8)
																				in  let <_cor36> =
																					%% Line 944
																					call 'hipe_rtl':'mk_alu'
																					    (LowBits, _cor35, 'sub', LowBits)
																				    in  let <_cor37> =
																					    %% Line 945
																					    call 'hipe_rtl':'mk_imm'
																						(7)
																					in  let <_cor38> =
																						%% Line 945
																						call 'hipe_rtl':'mk_alu'
																						    (LowBits, LowBits, 'and', _cor37)
																					    in  let <_cor39> =
																						    %% Line 946
																						    apply 'load_bytes'/5
																							(Tmp, _cor5, ByteOffset, _cor1, 1)
																						in  let <_cor40> =
																							%% Line 947
																							call 'hipe_rtl':'mk_alu'
																							    (Tmp, Tmp, _cor2, LowBits)
																						    in  let <_cor41> =
																							    %% Line 948
																							    call 'hipe_rtl':'mk_alu'
																								(Tmp, Tmp, 'sll', ShiftReg)
																							in  let <_cor42> =
																								%% Line 949
																								call 'hipe_rtl':'mk_alu'
																								    (LoadDst, LoadDst, 'or', Tmp)
																							    in  let <_cor9> =
																								    %% Line 951
																								    apply 'do_bignum_code'/5
																									(64, _cor1, LoadDst, _cor6, _cor0)
																								in  %% Line 924
																								    [_cor11|%% Line 925
																									    [_cor14|%% Line 927
																										    [ContLbl|%% Line 928
																											     [_cor16|%% Line 929
																												     [_cor18|%% Line 930
																													     [_cor20|%% Line 931
																														     [_cor22|%% Line 932
																															     [BackLbl|%% Line 933
																																      [_cor25|%% Line 936
																																	      [LoopLbl|%% Line 937
																																		       [_cor26|%% Line 938
																																			       [_cor27|%% Line 939
																																				       [_cor29|%% Line 940
																																					       [_cor30|%% Line 941
																																						       [_cor32|%% Line 942
																																							       [DoneLbl|%% Line 943
																																									[_cor34|%% Line 944
																																										[_cor36|%% Line 945
																																											[_cor38|%% Line 946
																																												[_cor39|%% Line 947
																																													[_cor40|%% Line 948
																																														[_cor41|%% Line 949
																																															[_cor42|%% Line 950
																																																[TagLbl|_cor9]]]]]]]]]]]]]]]]]]]]]]]]
							( <_cor8> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_7119})
							  -| ['compiler_generated'] )
						      end
			      ( <_cor7> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_22})
				-| ['compiler_generated'] )
			    end
'do_bignum_code'/5 =
    %% Line 953
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Size,{Signedness,_cor21},Src,Dst1,TrueLblName>
	      when %% Line 954
		call 'erlang':'is_integer'
		    (_cor4) ->
	      let <_cor5> =
		  %% Line 955
		  call 'hipe_rtl_arch':'word_size'
		      ()
	      in  let <_cor6> =
		      %% Line 955
		      call 'erlang':'*'
			  (_cor5, 8)
		  in  let <_cor7> =
			  %% Line 955
			  call 'erlang':'-'
			      (_cor6, 5)
		      in  let <_cor8> =
			      %% Line 955
			      call 'erlang':'>'
				  (_cor4, _cor7)
			  in  %% Line 955
			      case <_cor8,Signedness> of
				%% Line 956
				<'false',_cor22> when 'true' ->
				    let <_cor9> =
					%% Line 957
					call 'hipe_tagscheme':'tag_fixnum'
					    (_cor1, _cor2)
				    in  let <_cor10> =
					    %% Line 958
					    call 'hipe_rtl':'mk_goto'
						(_cor0)
					in  %% Line 957
					    [_cor9|%% Line 958
						   [_cor10|[]]]
				%% Line 959
				<'true','signed'> when 'true' ->
				    let <_cor12> =
					%% Line 960
					apply 'make_int_gc_code'/1
					    (_cor4)
				    in  let <_cor11> =
					    %% Line 961
					    apply 'signed_bignum'/3
						(_cor1, _cor2, _cor0)
					in  %% Line 960
					    call 'erlang':'++'
						(_cor12, _cor11)
				%% Line 962
				<'true','unsigned'> when 'true' ->
				    let <_cor14> =
					%% Line 963
					apply 'make_int_gc_code'/1
					    (_cor4)
				    in  let <_cor13> =
					    %% Line 964
					    apply 'unsigned_bignum'/3
						(_cor1, _cor2, _cor0)
					in  %% Line 963
					    call 'erlang':'++'
						(_cor14, _cor13)
				( <_fol209,_fol210> when 'true' ->
				      let <_cor15> = {_cor8,Signedness}
				      in  primop 'match_fail'
					      ({'case_clause',_cor15})
				  -| ['compiler_generated'] )
			      end
	  ( <_cor20,_cor19,_cor18,_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'do_bignum_code',5}}] )
	    -| ['compiler_generated'] )
	end
'signed_bignum'/3 =
    %% Line 967
    fun (_cor2,_cor1,_cor0) ->
	let <Tmp1> =
	    %% Line 968
	    call 'hipe_rtl':'mk_new_reg'
		()
	in  let <BignumLabel> =
		%% Line 969
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <_cor5> =
		    %% Line 970
		    call 'hipe_tagscheme':'realtag_fixnum'
			(_cor2, _cor1)
		in  let <_cor6> =
			%% Line 971
			call 'hipe_tagscheme':'realuntag_fixnum'
			    (Tmp1, _cor2)
		    in  let <_cor7> =
			    %% Line 973
			    call 'hipe_rtl':'label_name'
				(BignumLabel)
			in  let <_cor8> =
				%% Line 972
				call 'hipe_rtl':'mk_branch'
				    (Tmp1, 'eq', _cor1, _cor0, _cor7)
			    in  let <_cor9> =
				    %% Line 975
				    call 'hipe_tagscheme':'unsafe_mk_big'
					(_cor2, _cor1, 'signed')
				in  let <_cor10> =
					%% Line 976
					call 'hipe_rtl':'mk_goto'
					    (_cor0)
				    in  %% Line 970
					[_cor5|%% Line 971
					       [_cor6|%% Line 972
						      [_cor8|%% Line 974
							     [BignumLabel|%% Line 975
									  [_cor9|%% Line 976
										 [_cor10|[]]]]]]]
'unsigned_bignum'/3 =
    %% Line 978
    fun (_cor2,_cor1,_cor0) ->
	let <Tmp1> =
	    %% Line 979
	    call 'hipe_rtl':'mk_new_reg_gcsafe'
		()
	in  let <BignumLbl> =
		%% Line 980
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <BignumLblName> =
		    %% Line 981
		    call 'hipe_rtl':'label_name'
			(BignumLbl)
		in  let <NxtLbl> =
			%% Line 982
			call 'hipe_rtl':'mk_new_label'
			    ()
		    in  let <NxtLblName> =
			    %% Line 983
			    call 'hipe_rtl':'label_name'
				(NxtLbl)
			in  let <_cor8> =
				%% Line 984
				call 'hipe_rtl':'mk_imm'
				    (0)
			    in  let <_cor9> =
				    %% Line 984
				    call 'hipe_rtl':'mk_branch'
					(_cor1, 'lt', _cor8, BignumLblName, NxtLblName)
				in  let <_cor10> =
					%% Line 986
					call 'hipe_tagscheme':'realtag_fixnum'
					    (_cor2, _cor1)
				    in  let <_cor11> =
					    %% Line 987
					    call 'hipe_tagscheme':'realuntag_fixnum'
						(Tmp1, _cor2)
					in  let <_cor12> =
						%% Line 988
						call 'hipe_rtl':'mk_branch'
						    (Tmp1, 'eq', _cor1, _cor0, BignumLblName)
					    in  let <_cor13> =
						    %% Line 990
						    call 'hipe_tagscheme':'unsafe_mk_big'
							(_cor2, _cor1, 'unsigned')
						in  let <_cor14> =
							%% Line 991
							call 'hipe_rtl':'mk_goto'
							    (_cor0)
						    in  %% Line 984
							[_cor9|%% Line 985
							       [NxtLbl|%% Line 986
								       [_cor10|%% Line 987
									       [_cor11|%% Line 988
										       [_cor12|%% Line 989
											       [BignumLbl|%% Line 990
													  [_cor13|%% Line 991
														  [_cor14|[]]]]]]]]]
'load_bytes'/5 =
    %% Line 993
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Dst,Base,Offset,{Signedness,_X_Endianess},1> when 'true' ->
	      let <_cor5> =
		  %% Line 994
		  call 'hipe_rtl':'mk_load'
		      (_cor4, _cor3, _cor2, 'byte', Signedness)
	      in  let <_cor6> =
		      %% Line 995
		      call 'hipe_rtl':'mk_imm'
			  (1)
		  in  let <_cor7> =
			  %% Line 995
			  call 'hipe_rtl':'mk_alu'
			      (_cor2, _cor2, 'add', _cor6)
		      in  %% Line 994
			  [_cor5|%% Line 995
				 [_cor7|[]]]
	  %% Line 996
	  <Dst,Base,Offset,{Signedness,Endianess},2> when 'true' ->
	      %% Line 997
	      case Endianess of
		%% Line 998
		<'big'> when 'true' ->
		    %% Line 999
		    call 'hipe_rtl_arch':'load_big_2'
			(_cor4, _cor3, _cor2, Signedness)
		%% Line 1000
		<'little'> when 'true' ->
		    %% Line 1001
		    call 'hipe_rtl_arch':'load_little_2'
			(_cor4, _cor3, _cor2, Signedness)
		( <_cor8> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',Endianess})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1003
	  <Dst,Base,Offset,{Signedness,Endianess},3> when 'true' ->
	      let <Tmp1> =
		  %% Line 1004
		  call 'hipe_rtl':'mk_new_reg'
		      ()
	      in  %% Line 1005
		  case Endianess of
		    %% Line 1006
		    <'big'> when 'true' ->
			let <_cor10> =
			    %% Line 1007
			    call 'hipe_rtl':'mk_load'
				(_cor4, _cor3, _cor2, 'byte', Signedness)
			in  let <_cor11> =
				%% Line 1008
				call 'hipe_rtl':'mk_imm'
				    (1)
			    in  let <_cor12> =
				    %% Line 1008
				    call 'hipe_rtl':'mk_alu'
					(_cor2, _cor2, 'add', _cor11)
				in  let <_cor13> =
					%% Line 1009
					call 'hipe_rtl':'mk_imm'
					    (8)
				    in  let <_cor14> =
					    %% Line 1009
					    call 'hipe_rtl':'mk_alu'
						(_cor4, _cor4, 'sll', _cor13)
					in  let <_cor15> =
						%% Line 1010
						call 'hipe_rtl':'mk_load'
						    (Tmp1, _cor3, _cor2, 'byte', 'unsigned')
					    in  let <_cor16> =
						    %% Line 1011
						    call 'hipe_rtl':'mk_alu'
							(_cor4, _cor4, 'or', Tmp1)
						in  let <_cor17> =
							%% Line 1012
							call 'hipe_rtl':'mk_imm'
							    (1)
						    in  let <_cor18> =
							    %% Line 1012
							    call 'hipe_rtl':'mk_alu'
								(_cor2, _cor2, 'add', _cor17)
							in  let <_cor19> =
								%% Line 1013
								call 'hipe_rtl':'mk_imm'
								    (8)
							    in  let <_cor20> =
								    %% Line 1013
								    call 'hipe_rtl':'mk_alu'
									(_cor4, _cor4, 'sll', _cor19)
								in  let <_cor21> =
									%% Line 1014
									call 'hipe_rtl':'mk_load'
									    (Tmp1, _cor3, _cor2, 'byte', 'unsigned')
								    in  let <_cor22> =
									    %% Line 1015
									    call 'hipe_rtl':'mk_alu'
										(_cor4, _cor4, 'or', Tmp1)
									in  let <_cor23> =
										%% Line 1016
										call 'hipe_rtl':'mk_imm'
										    (1)
									    in  let <_cor24> =
										    %% Line 1016
										    call 'hipe_rtl':'mk_alu'
											(_cor2, _cor2, 'add', _cor23)
										in  %% Line 1007
										    [_cor10|%% Line 1008
											    [_cor12|%% Line 1009
												    [_cor14|%% Line 1010
													    [_cor15|%% Line 1011
														    [_cor16|%% Line 1012
															    [_cor18|%% Line 1013
																    [_cor20|%% Line 1014
																	    [_cor21|%% Line 1015
																		    [_cor22|%% Line 1016
																			    [_cor24|[]]]]]]]]]]]
		    %% Line 1017
		    <'little'> when 'true' ->
			let <_cor25> =
			    %% Line 1018
			    call 'hipe_rtl':'mk_load'
				(_cor4, _cor3, _cor2, 'byte', 'unsigned')
			in  let <_cor26> =
				%% Line 1019
				call 'hipe_rtl':'mk_imm'
				    (1)
			    in  let <_cor27> =
				    %% Line 1019
				    call 'hipe_rtl':'mk_alu'
					(_cor2, _cor2, 'add', _cor26)
				in  let <_cor28> =
					%% Line 1020
					call 'hipe_rtl':'mk_load'
					    (Tmp1, _cor3, _cor2, 'byte', 'unsigned')
				    in  let <_cor29> =
					    %% Line 1021
					    call 'hipe_rtl':'mk_imm'
						(8)
					in  let <_cor30> =
						%% Line 1021
						call 'hipe_rtl':'mk_alu'
						    (Tmp1, Tmp1, 'sll', _cor29)
					    in  let <_cor31> =
						    %% Line 1022
						    call 'hipe_rtl':'mk_alu'
							(_cor4, _cor4, 'or', Tmp1)
						in  let <_cor32> =
							%% Line 1023
							call 'hipe_rtl':'mk_imm'
							    (1)
						    in  let <_cor33> =
							    %% Line 1023
							    call 'hipe_rtl':'mk_alu'
								(_cor2, _cor2, 'add', _cor32)
							in  let <_cor34> =
								%% Line 1024
								call 'hipe_rtl':'mk_load'
								    (Tmp1, _cor3, _cor2, 'byte', Signedness)
							    in  let <_cor35> =
								    %% Line 1025
								    call 'hipe_rtl':'mk_imm'
									(16)
								in  let <_cor36> =
									%% Line 1025
									call 'hipe_rtl':'mk_alu'
									    (Tmp1, Tmp1, 'sll', _cor35)
								    in  let <_cor37> =
									    %% Line 1026
									    call 'hipe_rtl':'mk_alu'
										(_cor4, _cor4, 'or', Tmp1)
									in  let <_cor38> =
										%% Line 1027
										call 'hipe_rtl':'mk_imm'
										    (1)
									    in  let <_cor39> =
										    %% Line 1027
										    call 'hipe_rtl':'mk_alu'
											(_cor2, _cor2, 'add', _cor38)
										in  %% Line 1018
										    [_cor25|%% Line 1019
											    [_cor27|%% Line 1020
												    [_cor28|%% Line 1021
													    [_cor30|%% Line 1022
														    [_cor31|%% Line 1023
															    [_cor33|%% Line 1024
																    [_cor34|%% Line 1025
																	    [_cor36|%% Line 1026
																		    [_cor37|%% Line 1027
																			    [_cor39|[]]]]]]]]]]]
		    ( <_cor40> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',Endianess})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1029
	  <Dst,Base,Offset,{Signedness,Endianess},4> when 'true' ->
	      %% Line 1030
	      case Endianess of
		%% Line 1031
		<'big'> when 'true' ->
		    %% Line 1032
		    call 'hipe_rtl_arch':'load_big_4'
			(_cor4, _cor3, _cor2, Signedness)
		%% Line 1033
		<'little'> when 'true' ->
		    %% Line 1034
		    call 'hipe_rtl_arch':'load_little_4'
			(_cor4, _cor3, _cor2, Signedness)
		( <_cor41> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',Endianess})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1037
	  <Dst,Base,Offset,{Signedness,Endianess},X>
	      when call 'erlang':'>'
		    (_cor0,
		     1) ->
	      let <_647> =
		  call 'hipe_rtl':'mk_new_label'
		      ()
	      in  let <_7119> =
		      call 'hipe_rtl':'mk_new_label'
			  ()
		  in  let <_1687> =
			  apply 'create_lbls'/1
			      (0)
		      in  let <_4539> =
			      [_7119|_1687]
			  in  let <_5813> =
				  [_647|_4539]
			      in  %% Line 1038
				  case _5813 of
				    <[LoopLbl|[EndLbl|[]]]> when 'true' ->
					let <_3389> =
					    %% Line 1069
					    call 'hipe_rtl':'mk_new_reg'
						()
					in  let <_4333> =
						%% Line 1069
						call 'hipe_rtl':'mk_new_reg'
						    ()
					    in  let <_1825> =
						    %% Line 1069
						    apply 'create_regs'/1
							(1)
						in  let <_6329> =
							%% Line 1069
							[_4333|_1825]
						    in  let <_6029> =
							    %% Line 1069
							    [_3389|_6329]
							in  %% Line 1039
							    case _6029 of
							      <[Tmp1|[Limit|[TmpOffset|[]]]]> when 'true' ->
								  %% Line 1040
								  case Endianess of
								    %% Line 1041
								    <'big'> when 'true' ->
									let <_cor44> =
									    %% Line 1042
									    call 'hipe_rtl':'mk_imm'
										(_cor0)
									in  let <_cor45> =
										%% Line 1042
										call 'hipe_rtl':'mk_alu'
										    (Limit, _cor2, 'add', _cor44)
									    in  let <_cor46> =
										    %% Line 1043
										    call 'hipe_rtl':'mk_load'
											(_cor4, _cor3, _cor2, 'byte', Signedness)
										in  let <_cor47> =
											%% Line 1044
											call 'hipe_rtl':'mk_imm'
											    (1)
										    in  let <_cor48> =
											    %% Line 1044
											    call 'hipe_rtl':'mk_alu'
												(_cor2, _cor2, 'add', _cor47)
											in  let <_cor49> =
												%% Line 1046
												call 'hipe_rtl':'mk_load'
												    (Tmp1, _cor3, _cor2, 'byte', 'unsigned')
											    in  let <_cor50> =
												    %% Line 1047
												    call 'hipe_rtl':'mk_imm'
													(1)
												in  let <_cor51> =
													%% Line 1047
													call 'hipe_rtl':'mk_alu'
													    (_cor2, _cor2, 'add', _cor50)
												    in  let <_cor52> =
													    %% Line 1048
													    call 'hipe_rtl':'mk_imm'
														(8)
													in  let <_cor53> =
														%% Line 1048
														call 'hipe_rtl':'mk_alu'
														    (_cor4, _cor4, 'sll', _cor52)
													    in  let <_cor54> =
														    %% Line 1049
														    call 'hipe_rtl':'mk_alu'
															(_cor4, _cor4, 'or', Tmp1)
														in  let <_cor56> =
															%% Line 1050
															call 'hipe_rtl':'label_name'
															    (LoopLbl)
														    in  let <_cor55> =
															    %% Line 1051
															    call 'hipe_rtl':'label_name'
																(EndLbl)
															in  let <_cor57> =
																%% Line 1050
																call 'hipe_rtl':'mk_branch'
																    (_cor2, 'lt', Limit, _cor56, _cor55)
															    in  %% Line 1042
																[_cor45|%% Line 1043
																	[_cor46|%% Line 1044
																		[_cor48|%% Line 1045
																			[LoopLbl|%% Line 1046
																				 [_cor49|%% Line 1047
																					 [_cor51|%% Line 1048
																						 [_cor53|%% Line 1049
																							 [_cor54|%% Line 1050
																								 [_cor57|%% Line 1052
																									 [EndLbl|[]]]]]]]]]]]
								    %% Line 1053
								    <'little'> when 'true' ->
									let <_cor58> =
									    %% Line 1054
									    call 'hipe_rtl':'mk_imm'
										(_cor0)
									in  let <_cor59> =
										%% Line 1054
										call 'hipe_rtl':'mk_alu'
										    (Limit, _cor2, 'add', _cor58)
									    in  let <_cor60> =
										    %% Line 1055
										    call 'hipe_rtl':'mk_imm'
											(1)
										in  let <_cor61> =
											%% Line 1055
											call 'hipe_rtl':'mk_alu'
											    (TmpOffset, Limit, 'sub', _cor60)
										    in  let <_cor62> =
											    %% Line 1056
											    call 'hipe_rtl':'mk_load'
												(_cor4, _cor3, TmpOffset, 'byte', Signedness)
											in  let <_cor63> =
												%% Line 1058
												call 'hipe_rtl':'mk_imm'
												    (1)
											    in  let <_cor64> =
												    %% Line 1058
												    call 'hipe_rtl':'mk_alu'
													(TmpOffset, TmpOffset, 'sub', _cor63)
												in  let <_cor65> =
													%% Line 1059
													call 'hipe_rtl':'mk_load'
													    (Tmp1, _cor3, TmpOffset, 'byte', Signedness)
												    in  let <_cor66> =
													    %% Line 1060
													    call 'hipe_rtl':'mk_imm'
														(8)
													in  let <_cor67> =
														%% Line 1060
														call 'hipe_rtl':'mk_alu'
														    (_cor4, _cor4, 'sll', _cor66)
													    in  let <_cor68> =
														    %% Line 1061
														    call 'hipe_rtl':'mk_alu'
															(_cor4, _cor4, 'or', Tmp1)
														in  let <_cor70> =
															%% Line 1062
															call 'hipe_rtl':'label_name'
															    (LoopLbl)
														    in  let <_cor69> =
															    %% Line 1063
															    call 'hipe_rtl':'label_name'
																(EndLbl)
															in  let <_cor71> =
																%% Line 1062
																call 'hipe_rtl':'mk_branch'
																    (_cor2, 'lt', TmpOffset, _cor70, _cor69)
															    in  let <_cor72> =
																    %% Line 1065
																    call 'hipe_rtl':'mk_move'
																	(_cor2, Limit)
																in  %% Line 1054
																    [_cor59|%% Line 1055
																	    [_cor61|%% Line 1056
																		    [_cor62|%% Line 1057
																			    [LoopLbl|%% Line 1058
																				     [_cor64|%% Line 1059
																					     [_cor65|%% Line 1060
																						     [_cor67|%% Line 1061
																							     [_cor68|%% Line 1062
																								     [_cor71|%% Line 1064
																									     [EndLbl|%% Line 1065
																										     [_cor72|[]]]]]]]]]]]]
								    ( <_cor73> when 'true' ->
									  primop 'match_fail'
									      ({'case_clause',Endianess})
								      -| ['compiler_generated'] )
								  end
							      ( <_cor43> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_6029})
								-| ['compiler_generated'] )
							    end
				    ( <_cor42> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_5813})
				      -| ['compiler_generated'] )
				  end
	  ( <_cor78,_cor77,_cor76,_cor75,_cor74> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'load_bytes',5}}] )
	    -| ['compiler_generated'] )
	end
'create_regs'/1 =
    %% Line 1068
    fun (_cor0) ->
	case _cor0 of
	  <X>
	      when call 'erlang':'>'
		    (_cor0,
		     0) ->
	      let <_cor1> =
		  %% Line 1069
		  call 'hipe_rtl':'mk_new_reg'
		      ()
	      in  let <_cor2> =
		      %% Line 1069
		      call 'erlang':'-'
			  (_cor0, 1)
		  in  let <_cor3> =
			  %% Line 1069
			  apply 'create_regs'/1
			      (_cor2)
		      in  %% Line 1069
			  [_cor1|_cor3]
	  %% Line 1070
	  <0> when 'true' ->
	      %% Line 1071
	      []
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'create_regs',1}}] )
	    -| ['compiler_generated'] )
	end
'create_gcsafe_regs'/1 =
    %% Line 1073
    fun (_cor0) ->
	case _cor0 of
	  <X>
	      when call 'erlang':'>'
		    (_cor0,
		     0) ->
	      let <_cor1> =
		  %% Line 1074
		  call 'hipe_rtl':'mk_new_reg_gcsafe'
		      ()
	      in  let <_cor2> =
		      %% Line 1074
		      call 'erlang':'-'
			  (_cor0, 1)
		  in  let <_cor3> =
			  %% Line 1074
			  apply 'create_gcsafe_regs'/1
			      (_cor2)
		      in  %% Line 1074
			  [_cor1|_cor3]
	  %% Line 1075
	  <0> when 'true' ->
	      %% Line 1076
	      []
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'create_gcsafe_regs',1}}] )
	    -| ['compiler_generated'] )
	end
'first_part'/3 =
    %% Line 1078
    fun (_cor2,_cor1,_cor0) ->
	let <_2924> =
	    call 'hipe_rtl':'mk_new_label'
		()
	in  let <_4625> =
		call 'hipe_rtl':'mk_new_label'
		    ()
	    in  let <_cor3> =
		    apply 'create_lbls'/1
			(0)
		in  let <_fol226> =
			[_4625|_cor3]
		    in  let <_2391> =
			    [_2924|_fol226]
			in  %% Line 1079
			    case _2391 of
			      <[SuccessLbl1|[SuccessLbl2|[]]]> when 'true' ->
				  let <_cor4> =
				      %% Line 1080
				      call 'hipe_rtl':'label_name'
					  (SuccessLbl1)
				  in  let <_cor5> =
					  %% Line 1080
					  call 'hipe_tagscheme':'test_fixnum'
					      (_cor2, _cor4, _cor0, %% Line 1081
								    9.89999999999999991118e-01)
				      in  let <_cor7> =
					      %% Line 1083
					      call 'hipe_tagscheme':'mk_fixnum'
						  (0)
					  in  let <_cor8> =
						  %% Line 1083
						  call 'hipe_rtl':'mk_imm'
						      (_cor7)
					      in  let <_cor6> =
						      %% Line 1084
						      call 'hipe_rtl':'label_name'
							  (SuccessLbl2)
						  in  let <_cor9> =
							  %% Line 1083
							  call 'hipe_tagscheme':'fixnum_ge'
							      (_cor2, _cor8, _cor6, _cor0, %% Line 1084
											   9.89999999999999991118e-01)
						      in  let <_cor10> =
							      %% Line 1086
							      call 'hipe_tagscheme':'untag_fixnum'
								  (_cor1, _cor2)
							  in  %% Line 1080
							      [_cor5|%% Line 1082
								     [SuccessLbl1|%% Line 1083
										  [_cor9|%% Line 1085
											 [SuccessLbl2|%% Line 1086
												      [_cor10|[]]]]]]
			      ( <_cor3> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_2391})
				-| ['compiler_generated'] )
			    end
'make_size'/3 =
    %% Line 1088
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <1,BitsVar,FalseLblName> when 'true' ->
	      let <_1098> =
		  call 'hipe_rtl':'mk_new_reg'
		      ()
	      in  let <_5764> =
		      [_1098|[]]
		  in  %% Line 1089
		      case _5764 of
			<[DstReg|[]]> when 'true' ->
			    let <_cor4> =
				%% Line 1090
				apply 'first_part'/3
				    (_cor1, DstReg, _cor0)
			    in  %% Line 1090
				{_cor4,DstReg}
			( <_cor3> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_5764})
			  -| ['compiler_generated'] )
		      end
	  %% Line 1091
	  <8,BitsVar,FalseLblName> when 'true' ->
	      let <_6500> =
		  call 'hipe_rtl':'mk_new_reg'
		      ()
	      in  let <_4747> =
		      [_6500|[]]
		  in  %% Line 1092
		      case _4747 of
			<[DstReg|[]]> when 'true' ->
			    let <_cor8> =
				%% Line 1094
				apply 'first_part'/3
				    (_cor1, DstReg, _cor0)
			    in  let <_cor6> =
				    %% Line 1095
				    call 'hipe_rtl':'mk_imm'
					(3)
				in  let <_cor7> =
					%% Line 1095
					call 'hipe_rtl':'mk_alu'
					    (DstReg, DstReg, 'sll', _cor6)
				    in  let <Code> =
					    %% Line 1094
					    call 'erlang':'++'
						(_cor8, %% Line 1095
							[_cor7|[]])
					in  %% Line 1096
					    {Code,DstReg}
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_4747})
			  -| ['compiler_generated'] )
		      end
	  %% Line 1097
	  <UnitImm,BitsVar,FalseLblName> when 'true' ->
	      let <_7853> =
		  call 'hipe_rtl':'mk_new_reg'
		      ()
	      in  let <_1770> =
		      [_7853|[]]
		  in  %% Line 1098
		      case _1770 of
			<[DstReg|[]]> when 'true' ->
			    let <UnitList> =
				%% Line 1099
				apply 'number2list'/1
				    (_cor2)
			    in  let <Code> =
				    %% Line 1100
				    apply 'multiply_code'/4
					(UnitList, _cor1, DstReg, _cor0)
				in  %% Line 1101
				    {Code,DstReg}
			( <_cor10> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_1770})
			  -| ['compiler_generated'] )
		      end
	end
'multiply_code'/4 =
    %% Line 1103
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <List = [Head|_X_Tail],Variable,Result,FalseLblName> when 'true' ->
	      let <Test> =
		  %% Line 1146
		  case Head of
		    <0> when 'true' ->
			0
		    %% Line 1148
		    <X> when 'true' ->
			let <_cor5> =
			    %% Line 1149
			    call 'erlang':'-'
				(Head, 1)
			in  let <_2076> =
				%% Line 1149
				call 'erlang':'-'
				    (27, Head)
			    in  let <_2650> =
				    %% Line 1149
				    call 'erlang':'bsl'
					(1, _2076)
				in  let <_cor4> =
					%% Line 1149
					call 'erlang':'+'
					    (0, _2650)
				    in  %% Line 1149
					apply 'set_high'/2
					    (_cor5, _cor4)
		  end
	      in  let <Tmp1> =
		      %% Line 1105
		      call 'hipe_rtl':'mk_new_reg'
			  ()
		  in  let <SuccessLbl> =
			  %% Line 1106
			  call 'hipe_rtl':'mk_new_label'
			      ()
		      in  let <Register> =
			      %% Line 1107
			      call 'hipe_rtl':'mk_new_reg'
				  ()
			  in  let <_cor11> =
				  %% Line 1108
				  call 'hipe_rtl':'mk_imm'
				      (0)
			      in  let <_cor12> =
				      %% Line 1108
				      call 'hipe_rtl':'mk_move'
					  (_cor1, _cor11)
				  in  let <_cor13> =
					  %% Line 1109
					  apply 'first_part'/3
					      (_cor2, Register, _cor0)
				      in  let <_cor9> =
					      %% Line 1111
					      call 'hipe_rtl':'mk_imm'
						  (Test)
					  in  let <_cor8> =
						  %% Line 1112
						  call 'hipe_rtl':'label_name'
						      (SuccessLbl)
					      in  let <_cor10> =
						      %% Line 1111
						      call 'hipe_rtl':'mk_alub'
							  (Tmp1, Register, 'and', _cor9, %% Line 1112
											 'eq', _cor8, _cor0, %% Line 1113
													     9.89999999999999991118e-01)
						  in  let <Code> =
							  %% Line 1108
							  [_cor12|%% Line 1110
								  call 'erlang':'++'
								      (_cor13, %% Line 1111
									       [_cor10|%% Line 1114
										       [SuccessLbl|[]]])]
						      in  %% Line 1115
							  apply 'multiply_code'/6
							      (_cor3, Register, _cor1, _cor0, Tmp1, Code)
	  ( <_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'multiply_code',4}}] )
	    -| ['compiler_generated'] )
	end
'multiply_code'/6 =
    %% Line 1117
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[ShiftSize|Rest],Register,Result,FalseLblName,Tmp1,OldCode> when 'true' ->
	      let <SuccessLbl> =
		  %% Line 1118
		  call 'hipe_rtl':'mk_new_label'
		      ()
	      in  let <_cor7> =
		      %% Line 1121
		      call 'hipe_rtl':'mk_imm'
			  (ShiftSize)
		  in  let <_cor8> =
			  %% Line 1121
			  call 'hipe_rtl':'mk_alu'
			      (_cor1, _cor4, 'sll', _cor7)
		      in  let <_cor9> =
			      %% Line 1123
			      call 'hipe_rtl':'label_name'
				  (SuccessLbl)
			  in  let <_cor10> =
				  %% Line 1122
				  call 'hipe_rtl':'mk_alub'
				      (_cor3, _cor1, 'add', _cor3, 'not_overflow', _cor9, _cor2, %% Line 1123
												 9.89999999999999991118e-01)
			      in  let <Code> =
				      %% Line 1120
				      call 'erlang':'++'
					  (_cor0, %% Line 1121
						  [_cor8|%% Line 1122
							 [_cor10|%% Line 1124
								 [SuccessLbl|[]]]])
				  in  %% Line 1125
				      apply 'multiply_code'/6
					  (Rest, _cor4, _cor3, _cor2, _cor1, Code)
	  %% Line 1126
	  <[],_X_Register,_X_Result,_X_FalseLblName,_X_Tmp1,Code> when 'true' ->
	      _cor0
	  ( <_cor17,_cor16,_cor15,_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'multiply_code',6}}] )
	    -| ['compiler_generated'] )
	end
'number2list'/1 =
    %% Line 1129
    fun (_cor0) ->
	case _cor0 of
	  <X>
	      when let <_cor1> =
		    call 'erlang':'is_integer'
			(_cor0)
		in  let <_cor2> =
			call 'erlang':'>='
			    (_cor0, 0)
		    in  call 'erlang':'and'
			    (_cor1, _cor2) ->
	      %% Line 1130
	      apply 'number2list'/2
		  (_cor0, [])
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'number2list',1}}] )
	    -| ['compiler_generated'] )
	end
'number2list'/2 =
    %% Line 1132
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <1,Acc> when 'true' ->
	      %% Line 1133
	      call 'lists':'reverse'
		  ([0|_cor0])
	  %% Line 1134
	  <0,Acc> when 'true' ->
	      %% Line 1135
	      call 'lists':'reverse'
		  (_cor0)
	  %% Line 1136
	  <X,Acc> when 'true' ->
	      let <_cor2> =
		  %% Line 1141
		  call 'math':'log'
		      (_cor1)
	      in  let <_cor3> =
		      %% Line 1141
		      call 'erlang':'/'
			  (_cor2, 6.93147180559945286227e-01)
		  in  let <_cor4> =
			  %% Line 1141
			  call 'erlang':'-'
			      (_cor3, 5.00000000000000000000e-01)
		      in  let <F> =
			      %% Line 1141
			      call 'erlang':'round'
				  (_cor4)
			  in  let <_cor3> =
				  %% Line 1138
				  call 'erlang':'bsl'
				      (1, F)
			      in  let <_cor4> =
				      %% Line 1138
				      call 'erlang':'-'
					  (_cor1, _cor3)
				  in  %% Line 1138
				      apply 'number2list'/2
					  (_cor4, [F|_cor0])
	end
'set_high'/2 =
    %% Line 1146
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <0,Y> when 'true' ->
	      _cor0
	  %% Line 1148
	  <X,Y> when 'true' ->
	      let <_cor5> =
		  %% Line 1149
		  call 'erlang':'-'
		      (_cor1, 1)
	      in  let <_cor2> =
		      %% Line 1149
		      call 'erlang':'-'
			  (27, _cor1)
		  in  let <_cor3> =
			  %% Line 1149
			  call 'erlang':'bsl'
			      (1, _cor2)
		      in  let <_cor4> =
			      %% Line 1149
			      call 'erlang':'+'
				  (_cor0, _cor3)
			  in  %% Line 1149
			      apply 'set_high'/2
				  (_cor5, _cor4)
	end
'is_illegal_const'/1 =
    %% Line 1151
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 1152
	    call 'hipe_rtl_arch':'word_size'
		()
	in  let <_cor3> =
		%% Line 1152
		call 'erlang':'*'
		    (_cor2, 8)
	    in  let <_cor4> =
		    %% Line 1152
		    call 'erlang':'bsl'
			(1, _cor3)
		in  %% Line 1152
		    ( case <> of
			( <>
			      when call 'erlang':'>='
				    (_cor0,
				     _cor4) ->
			      'true'
			  -| ['compiler_generated'] )
			( <> when 'true' ->
			      call 'erlang':'<'
				  (_cor0, 0)
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_rtl_binary_match')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_rtl_binary_match', _cor0)
end