module 'hipe_sparc_defuse' ['insn_def_all'/1,
			    'insn_def_fpr'/1,
			    'insn_def_gpr'/1,
			    'insn_use_all'/1,
			    'insn_use_fpr'/1,
			    'insn_use_gpr'/1,
			    'module_info'/0,
			    'module_info'/1]
    attributes [%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','sparc_mfa'},[{'typed_record_field',{'record_field',38,{'atom',38,'m'}},{'type',38,'union',[{'atom',38,'undefined'}|[{'type',38,'atom',[]}]]}}|[{'typed_record_field',{'record_field',38,{'atom',38,'f'}},{'type',38,'union',[{'atom',38,'undefined'}|[{'type',38,'atom',[]}]]}}|[{'typed_record_field',{'record_field',38,{'atom',38,'a'}},{'type',38,'union',[{'atom',38,'undefined'}|[{'type',38,'arity',[]}]]}}]]],[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{{'record','sparc_prim'},[{'record_field',39,{'atom',39,'prim'}}],[]}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{{'record','sparc_sdesc'},[{'record_field',40,{'atom',40,'exnlab'}}|[{'record_field',40,{'atom',40,'fsize'}}|[{'typed_record_field',{'record_field',40,{'atom',40,'arity'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'arity',[]}]]}}|[{'record_field',40,{'atom',40,'live'}}]]]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','sparc_temp'},[{'record_field',41,{'atom',41,'reg'}}|[{'record_field',41,{'atom',41,'type'}}|[{'record_field',41,{'atom',41,'allocatable'}}]]],[]}],
		%% Line 42
		'type' =
		    %% Line 42
		    [{{'record','sparc_simm13'},[{'record_field',42,{'atom',42,'value'}}],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','sparc_uimm5'},[{'record_field',43,{'atom',43,'value'}}],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','sparc_uimm6'},[{'record_field',44,{'atom',44,'value'}}],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','sparc_uimm22'},[{'record_field',45,{'atom',45,'value'}}],[]}],
		%% Line 79
		'type' =
		    %% Line 79
		    [{{'record','alu'},[{'record_field',79,{'atom',79,'aluop'}}|[{'record_field',79,{'atom',79,'src1'}}|[{'record_field',79,{'atom',79,'src2'}}|[{'record_field',79,{'atom',79,'dst'}}]]]],[]}],
		%% Line 80
		'type' =
		    %% Line 80
		    [{{'record','bp'},[{'record_field',80,{'atom',80,'cond'}}|[{'record_field',80,{'atom',80,'label'}}|[{'record_field',80,{'atom',80,'pred'}}]]],[]}],
		%% Line 84
		'type' =
		    %% Line 84
		    [{{'record','call_rec'},[{'record_field',84,{'atom',84,'fun'}}|[{'record_field',84,{'atom',84,'sdesc'}}|[{'record_field',84,{'atom',84,'linkage'}}]]],[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{{'record','call_tail'},[{'record_field',85,{'atom',85,'fun'}}|[{'record_field',85,{'atom',85,'linkage'}}]],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{{'record','comment'},[{'record_field',86,{'atom',86,'term'}}],[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{{'record','jmp'},[{'record_field',87,{'atom',87,'src1'}}|[{'record_field',87,{'atom',87,'src2'}}|[{'record_field',87,{'atom',87,'labels'}}]]],[]}],
		%% Line 88
		'type' =
		    %% Line 88
		    [{{'record','jmpl'},[{'record_field',88,{'atom',88,'src'}}|[{'record_field',88,{'atom',88,'sdesc'}}]],[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','label'},[{'record_field',89,{'atom',89,'label'}}],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{{'record','pseudo_bp'},[{'record_field',90,{'atom',90,'cond'}}|[{'record_field',90,{'atom',90,'true_label'}}|[{'record_field',90,{'atom',90,'false_label'}}|[{'record_field',90,{'atom',90,'pred'}}]]]],[]}],
		%% Line 92
		'type' =
		    %% Line 92
		    [{{'record','pseudo_call'},[{'record_field',92,{'atom',92,'funv'}}|[{'record_field',92,{'atom',92,'sdesc'}}|[{'record_field',92,{'atom',92,'contlab'}}|[{'record_field',92,{'atom',92,'linkage'}}]]]],[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','pseudo_call_prepare'},[{'record_field',93,{'atom',93,'nrstkargs'}}],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{{'record','pseudo_move'},[{'record_field',94,{'atom',94,'src'}}|[{'record_field',94,{'atom',94,'dst'}}]],[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{{'record','pseudo_ret'},[],[]}],
		%% Line 96
		'type' =
		    %% Line 96
		    [{{'record','pseudo_set'},[{'record_field',96,{'atom',96,'imm'}}|[{'record_field',96,{'atom',96,'dst'}}]],[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','pseudo_tailcall'},[{'record_field',97,{'atom',97,'funv'}}|[{'record_field',97,{'atom',97,'arity'}}|[{'record_field',97,{'atom',97,'stkargs'}}|[{'record_field',97,{'atom',97,'linkage'}}]]]],[]}],
		%% Line 98
		'type' =
		    %% Line 98
		    [{{'record','pseudo_tailcall_prepare'},[],[]}],
		%% Line 99
		'type' =
		    %% Line 99
		    [{{'record','rdy'},[{'record_field',99,{'atom',99,'dst'}}],[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{{'record','sethi'},[{'record_field',100,{'atom',100,'uimm22'}}|[{'record_field',100,{'atom',100,'dst'}}]],[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{{'record','store'},[{'record_field',101,{'atom',101,'stop'}}|[{'record_field',101,{'atom',101,'src'}}|[{'record_field',101,{'atom',101,'base'}}|[{'record_field',101,{'atom',101,'disp'}}]]]],[]}],
		%% Line 102
		'type' =
		    %% Line 102
		    [{{'record','fp_binary'},[{'record_field',102,{'atom',102,'fp_binop'}}|[{'record_field',102,{'atom',102,'src1'}}|[{'record_field',102,{'atom',102,'src2'}}|[{'record_field',102,{'atom',102,'dst'}}]]]],[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','fp_unary'},[{'record_field',103,{'atom',103,'fp_unop'}}|[{'record_field',103,{'atom',103,'src'}}|[{'record_field',103,{'atom',103,'dst'}}]]],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{{'record','pseudo_fload'},[{'record_field',104,{'atom',104,'base'}}|[{'record_field',104,{'atom',104,'disp'}}|[{'record_field',104,{'atom',104,'dst'}}|[{'record_field',104,{'atom',104,'is_single'}}]]]],[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{{'record','pseudo_fmove'},[{'record_field',105,{'atom',105,'src'}}|[{'record_field',105,{'atom',105,'dst'}}]],[]}],
		%% Line 106
		'type' =
		    %% Line 106
		    [{{'record','pseudo_fstore'},[{'record_field',106,{'atom',106,'src'}}|[{'record_field',106,{'atom',106,'base'}}|[{'record_field',106,{'atom',106,'disp'}}]]],[]}],
		%% Line 22
		'type' =
		    %% Line 22
		    [{'ct_alignment',{'type',22,'union',[{'integer',22,4}|[{'integer',22,8}]]},[]}],
		%% Line 24
		'type' =
		    %% Line 24
		    [{'hipe_constlbl',{'type',24,'non_neg_integer',[]},[]}],
		%% Line 25
		'type' =
		    %% Line 25
		    [{'hipe_consttab',{'type',25,'tuple',[{'remote_type',25,[{'atom',25,'dict'}|[{'atom',25,'dict'}|[[]]]]}|[{'type',25,'list',[{'type',25,'hipe_constlbl',[]}]}|[{'type',25,'hipe_constlbl',[]}]]]},[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{{'record','defun'},[{'typed_record_field',{'record_field',112,{'atom',112,'mfa'}},{'type',112,'union',[{'atom',112,'undefined'}|[{'type',112,'mfa',[]}]]}}|[{'record_field',112,{'atom',112,'formals'}}|[{'record_field',112,{'atom',112,'code'}}|[{'typed_record_field',{'record_field',113,{'atom',113,'data'}},{'type',113,'union',[{'atom',113,'undefined'}|[{'type',113,'hipe_consttab',[]}]]}}|[{'typed_record_field',{'record_field',114,{'atom',114,'isclosure'}},{'type',114,'union',[{'atom',114,'undefined'}|[{'type',114,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',115,{'atom',115,'isleaf'}},{'type',115,'union',[{'atom',115,'undefined'}|[{'type',115,'boolean',[]}]]}}|[{'record_field',116,{'atom',116,'var_range'}}|[{'record_field',116,{'atom',116,'label_range'}}]]]]]]]],[]}]]
'insn_def_all'/1 =
    %% Line 31
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 32
	    apply 'insn_def_fpr'/1
		(_cor0)
	in  let <_cor1> =
		%% Line 32
		apply 'insn_def_gpr'/1
		    (_cor0)
	    in  %% Line 32
		apply 'addtemps'/2
		    (_cor2, _cor1)
'insn_use_all'/1 =
    %% Line 34
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 35
	    apply 'insn_use_fpr'/1
		(_cor0)
	in  let <_cor1> =
		%% Line 35
		apply 'insn_use_gpr'/1
		    (_cor0)
	    in  %% Line 35
		apply 'addtemps'/2
		    (_cor2, _cor1)
'insn_def_gpr'/1 =
    %% Line 40
    fun (_cor0) ->
	%% Line 41
	case _cor0 of
	  %% Line 42
	  <{'alu',_cor3,_cor4,_cor5,Dst}> when 'true' ->
	      [Dst|[]]
	  %% Line 44
	  <{'pseudo_call',_cor6,_cor7,_cor8,_cor9}> when 'true' ->
	      apply 'call_clobbered_gpr'/0
		  ()
	  %% Line 45
	  <{'pseudo_move',_cor10,Dst}> when 'true' ->
	      [Dst|[]]
	  %% Line 46
	  <{'pseudo_set',_cor11,Dst}> when 'true' ->
	      [Dst|[]]
	  %% Line 47
	  <{'pseudo_tailcall_prepare'}> when 'true' ->
	      apply 'tailcall_clobbered_gpr'/0
		  ()
	  %% Line 48
	  <{'rdy',Dst}> when 'true' ->
	      [Dst|[]]
	  %% Line 49
	  <{'sethi',_cor12,Dst}> when 'true' ->
	      [Dst|[]]
	  %% Line 50
	  <_cor13> when 'true' ->
	      []
	end
'call_clobbered_gpr'/0 =
    %% Line 53
    fun () ->
	%% Line 54
	( letrec
	      'lc$^0'/1 =
		  fun (_cor5) ->
		      case _cor5 of
			<[%% Line 55
			  {R,T}|_cor1]> when 'true' ->
			    let <_cor6> =
				call 'hipe_sparc':'mk_temp'
				    (R, T)
			    in  let <_cor7> =
				    %% Line 55
				    apply 'lc$^0'/1
					(_cor1)
				in  ( [_cor6|_cor7]
				      -| ['compiler_generated'] )
			( <[_cor0|_cor1]> when 'true' ->
			      %% Line 55
			      apply 'lc$^0'/1
				  (_cor1)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor5> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor5})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor3> =
		  %% Line 55
		  call 'hipe_sparc_registers':'call_clobbered'
		      ()
	      in  let <_cor2> =
		      %% Line 55
		      apply 'all_fp_pseudos'/0
			  ()
		  in  let <_cor4> =
			  %% Line 55
			  call 'erlang':'++'
			      (_cor3, _cor2)
		      in  apply 'lc$^0'/1
			      (_cor4)
	  -| ['list_comprehension'] )
'all_fp_pseudos'/0 =
    %% Line 57
    fun () ->
	[]
'tailcall_clobbered_gpr'/0 =
    %% Line 59
    fun () ->
	%% Line 60
	( letrec
	      'lc$^0'/1 =
		  fun (_cor5) ->
		      case _cor5 of
			<[%% Line 61
			  {R,T}|_cor1]> when 'true' ->
			    let <_cor6> =
				call 'hipe_sparc':'mk_temp'
				    (R, T)
			    in  let <_cor7> =
				    %% Line 61
				    apply 'lc$^0'/1
					(_cor1)
				in  ( [_cor6|_cor7]
				      -| ['compiler_generated'] )
			( <[_cor0|_cor1]> when 'true' ->
			      %% Line 61
			      apply 'lc$^0'/1
				  (_cor1)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor5> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor5})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor3> =
		  %% Line 61
		  call 'hipe_sparc_registers':'tailcall_clobbered'
		      ()
	      in  let <_cor2> =
		      %% Line 61
		      apply 'all_fp_pseudos'/0
			  ()
		  in  let <_cor4> =
			  %% Line 61
			  call 'erlang':'++'
			      (_cor3, _cor2)
		      in  apply 'lc$^0'/1
			      (_cor4)
	  -| ['list_comprehension'] )
'insn_use_gpr'/1 =
    %% Line 63
    fun (_cor0) ->
	%% Line 64
	case _cor0 of
	  %% Line 65
	  <{'alu',_cor10,Src1,Src2,_cor11}> when 'true' ->
	      apply 'addsrc'/2
		  (Src2, [Src1|[]])
	  %% Line 67
	  <{'jmp',Src1,Src2,_cor12}> when 'true' ->
	      apply 'addsrc'/2
		  (Src2, [Src1|[]])
	  %% Line 70
	  <{'pseudo_call',FunV,{'sparc_sdesc',_cor13,_cor14,Arity,_cor15},_cor16,_cor17}> when 'true' ->
	      let <_cor1> =
		  %% Line 71
		  apply 'arity_use_gpr'/1
		      (Arity)
	      in  %% Line 71
		  apply 'funv_use'/2
		      (FunV, _cor1)
	  %% Line 72
	  <{'pseudo_move',Src,_cor18}> when 'true' ->
	      [Src|[]]
	  %% Line 73
	  <{'pseudo_ret'}> when 'true' ->
	      let <_cor2> =
		  call 'hipe_sparc':'mk_rv'
		      ()
	      in  [_cor2|[]]
	  %% Line 74
	  <{'pseudo_tailcall',FunV,Arity,StkArgs,_cor19}> when 'true' ->
	      let <_cor5> =
		  %% Line 75
		  apply 'tailcall_clobbered_gpr'/0
		      ()
	      in  let <_cor3> =
		      %% Line 75
		      apply 'arity_use_gpr'/1
			  (Arity)
		  in  let <_cor4> =
			  %% Line 75
			  apply 'funv_use'/2
			      (FunV, _cor3)
		      in  let <_cor6> =
			      %% Line 75
			      apply 'addtemps'/2
				  (_cor5, _cor4)
			  in  %% Line 75
			      apply 'addsrcs'/2
				  (StkArgs, _cor6)
	  %% Line 76
	  <{'store',_cor20,Src,Base,Disp}> when 'true' ->
	      let <_cor7> =
		  %% Line 77
		  apply 'addsrc'/2
		      (Disp, [Base|[]])
	      in  %% Line 77
		  apply 'addtemp'/2
		      (Src, _cor7)
	  %% Line 78
	  <{'pseudo_fload',Base,_cor21,_cor22,_cor23}> when 'true' ->
	      [Base|[]]
	  %% Line 79
	  <{'pseudo_fstore',_cor24,Base,_cor25}> when 'true' ->
	      [Base|[]]
	  %% Line 80
	  <_cor26> when 'true' ->
	      []
	end
'arity_use_gpr'/1 =
    %% Line 83
    fun (_cor0) ->
	%% Line 84
	( letrec
	      'lc$^0'/1 =
		  fun (_cor4) ->
		      case _cor4 of
			<[%% Line 85
			  R|_cor2]> when 'true' ->
			    let <_cor5> =
				call 'hipe_sparc':'mk_temp'
				    (R, 'tagged')
			    in  let <_cor6> =
				    %% Line 85
				    apply 'lc$^0'/1
					(_cor2)
				in  ( [_cor5|_cor6]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor4> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor4})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor3> =
		  %% Line 85
		  call 'hipe_sparc_registers':'args'
		      (_cor0)
	      in  apply 'lc$^0'/1
		      (_cor3)
	  -| ['list_comprehension'] )
'funv_use'/2 =
    %% Line 87
    fun (_cor1,_cor0) ->
	%% Line 88
	case _cor1 of
	  %% Line 89
	  <{'sparc_temp',_cor5,_cor6,_cor7}> when 'true' ->
	      apply 'addtemp'/2
		  (_cor1, _cor0)
	  %% Line 90
	  <_cor8> when 'true' ->
	      _cor0
	end
'addsrcs'/2 =
    %% Line 93
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Arg|Args],Set> when 'true' ->
	      let <_cor2> =
		  %% Line 94
		  apply 'addsrc'/2
		      (Arg, Set)
	      in  %% Line 94
		  apply 'addsrcs'/2
		      (Args, _cor2)
	  %% Line 95
	  <[],Set> when 'true' ->
	      %% Line 96
	      Set
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'addsrcs',2}}] )
	    -| ['compiler_generated'] )
	end
'addsrc'/2 =
    %% Line 98
    fun (_cor1,_cor0) ->
	%% Line 99
	case _cor1 of
	  %% Line 100
	  <{'sparc_temp',_cor5,_cor6,_cor7}> when 'true' ->
	      apply 'addtemp'/2
		  (_cor1, _cor0)
	  %% Line 101
	  <_cor8> when 'true' ->
	      _cor0
	end
'insn_def_fpr'/1 =
    %% Line 107
    fun (_cor0) ->
	%% Line 108
	case _cor0 of
	  %% Line 109
	  <{'pseudo_call',_cor3,_cor4,_cor5,_cor6}> when 'true' ->
	      apply 'call_clobbered_fpr'/0
		  ()
	  %% Line 110
	  <{'fp_binary',_cor7,_cor8,_cor9,Dst}> when 'true' ->
	      [Dst|[]]
	  %% Line 111
	  <{'fp_unary',_cor10,_cor11,Dst}> when 'true' ->
	      [Dst|[]]
	  %% Line 112
	  <{'pseudo_fload',_cor12,_cor13,Dst,_cor14}> when 'true' ->
	      [Dst|[]]
	  %% Line 113
	  <{'pseudo_fmove',_cor15,Dst}> when 'true' ->
	      [Dst|[]]
	  %% Line 114
	  <_cor16> when 'true' ->
	      []
	end
'call_clobbered_fpr'/0 =
    %% Line 117
    fun () ->
	%% Line 118
	( letrec
	      'lc$^0'/1 =
		  fun (_cor3) ->
		      case _cor3 of
			<[R|_cor1]> when 'true' ->
			    let <_cor4> =
				call 'hipe_sparc':'mk_temp'
				    (R, 'double')
			    in  let <_cor5> =
				    apply 'lc$^0'/1
					(_cor1)
				in  ( [_cor4|_cor5]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor3> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor3})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor2> =
		  call 'hipe_sparc_registers':'allocatable_fpr'
		      ()
	      in  apply 'lc$^0'/1
		      (_cor2)
	  -| ['list_comprehension'] )
'insn_use_fpr'/1 =
    %% Line 120
    fun (_cor0) ->
	%% Line 121
	case _cor0 of
	  %% Line 122
	  <{'fp_binary',_cor3,Src1,Src2,_cor4}> when 'true' ->
	      apply 'addtemp'/2
		  (Src1, [Src2|[]])
	  %% Line 123
	  <{'fp_unary',_cor5,Src,_cor6}> when 'true' ->
	      [Src|[]]
	  %% Line 124
	  <{'pseudo_fmove',Src,_cor7}> when 'true' ->
	      [Src|[]]
	  %% Line 125
	  <{'pseudo_fstore',Src,_cor8,_cor9}> when 'true' ->
	      [Src|[]]
	  %% Line 126
	  <_cor10> when 'true' ->
	      []
	end
'addtemps'/2 =
    %% Line 134
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Arg|Args],Set> when 'true' ->
	      let <_cor2> =
		  %% Line 135
		  apply 'addtemp'/2
		      (Arg, Set)
	      in  %% Line 135
		  apply 'addtemps'/2
		      (Args, _cor2)
	  %% Line 136
	  <[],Set> when 'true' ->
	      %% Line 137
	      Set
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'addtemps',2}}] )
	    -| ['compiler_generated'] )
	end
'addtemp'/2 =
    %% Line 139
    fun (_cor1,_cor0) ->
	%% Line 140
	case call 'lists':'member'
		 (_cor1, _cor0) of
	  %% Line 141
	  <'false'> when 'true' ->
	      [_cor1|_cor0]
	  %% Line 142
	  <_cor5> when 'true' ->
	      _cor0
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_sparc_defuse')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_sparc_defuse', _cor0)
end