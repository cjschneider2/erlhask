module 'hipe_ppc_defuse' ['insn_def_all'/1,
			  'insn_def_fpr'/1,
			  'insn_def_gpr'/1,
			  'insn_use_all'/1,
			  'insn_use_fpr'/1,
			  'insn_use_gpr'/1,
			  'module_info'/0,
			  'module_info'/1]
    attributes [%% Line 39
		'type' =
		    %% Line 39
		    [{{'record','ppc_mfa'},[{'typed_record_field',{'record_field',39,{'atom',39,'m'}},{'type',39,'union',[{'atom',39,'undefined'}|[{'type',39,'atom',[]}]]}}|[{'typed_record_field',{'record_field',39,{'atom',39,'f'}},{'type',39,'union',[{'atom',39,'undefined'}|[{'type',39,'atom',[]}]]}}|[{'typed_record_field',{'record_field',39,{'atom',39,'a'}},{'type',39,'union',[{'atom',39,'undefined'}|[{'type',39,'arity',[]}]]}}]]],[]}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{{'record','ppc_prim'},[{'record_field',40,{'atom',40,'prim'}}],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','ppc_sdesc'},[{'record_field',41,{'atom',41,'exnlab'}}|[{'record_field',41,{'atom',41,'fsize'}}|[{'typed_record_field',{'record_field',41,{'atom',41,'arity'}},{'type',41,'union',[{'atom',41,'undefined'}|[{'type',41,'arity',[]}]]}}|[{'record_field',41,{'atom',41,'live'}}]]]],[]}],
		%% Line 42
		'type' =
		    %% Line 42
		    [{{'record','ppc_simm16'},[{'record_field',42,{'atom',42,'value'}}],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','ppc_temp'},[{'record_field',43,{'atom',43,'reg'}}|[{'record_field',43,{'atom',43,'type'}}|[{'record_field',43,{'atom',43,'allocatable'}}]]],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','ppc_uimm16'},[{'record_field',44,{'atom',44,'value'}}],[]}],
		%% Line 76
		'type' =
		    %% Line 76
		    [{{'record','alu'},[{'record_field',76,{'atom',76,'aluop'}}|[{'record_field',76,{'atom',76,'dst'}}|[{'record_field',76,{'atom',76,'src1'}}|[{'record_field',76,{'atom',76,'src2'}}]]]],[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','b_fun'},[{'record_field',77,{'atom',77,'fun'}}|[{'record_field',77,{'atom',77,'linkage'}}]],[]}],
		%% Line 78
		'type' =
		    %% Line 78
		    [{{'record','b_label'},[{'record_field',78,{'atom',78,'label'}}],[]}],
		%% Line 79
		'type' =
		    %% Line 79
		    [{{'record','bc'},[{'record_field',79,{'atom',79,'bcond'}}|[{'record_field',79,{'atom',79,'label'}}|[{'record_field',79,{'atom',79,'pred'}}]]],[]}],
		%% Line 80
		'type' =
		    %% Line 80
		    [{{'record','bctr'},[{'record_field',80,{'atom',80,'labels'}}],[]}],
		%% Line 81
		'type' =
		    %% Line 81
		    [{{'record','bctrl'},[{'record_field',81,{'atom',81,'sdesc'}}],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{{'record','bl'},[{'record_field',82,{'atom',82,'fun'}}|[{'record_field',82,{'atom',82,'sdesc'}}|[{'record_field',82,{'atom',82,'linkage'}}]]],[]}],
		%% Line 83
		'type' =
		    %% Line 83
		    [{{'record','blr'},[],[]}],
		%% Line 84
		'type' =
		    %% Line 84
		    [{{'record','cmp'},[{'record_field',84,{'atom',84,'cmpop'}}|[{'record_field',84,{'atom',84,'src1'}}|[{'record_field',84,{'atom',84,'src2'}}]]],[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{{'record','comment'},[{'record_field',85,{'atom',85,'term'}}],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{{'record','label'},[{'record_field',86,{'atom',86,'label'}}],[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{{'record','load'},[{'record_field',87,{'atom',87,'ldop'}}|[{'record_field',87,{'atom',87,'dst'}}|[{'record_field',87,{'atom',87,'disp'}}|[{'record_field',87,{'atom',87,'base'}}]]]],[]}],
		%% Line 88
		'type' =
		    %% Line 88
		    [{{'record','loadx'},[{'record_field',88,{'atom',88,'ldxop'}}|[{'record_field',88,{'atom',88,'dst'}}|[{'record_field',88,{'atom',88,'base1'}}|[{'record_field',88,{'atom',88,'base2'}}]]]],[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','mfspr'},[{'record_field',89,{'atom',89,'dst'}}|[{'record_field',89,{'atom',89,'spr'}}]],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{{'record','mtcr'},[{'record_field',90,{'atom',90,'src'}}],[]}],
		%% Line 91
		'type' =
		    %% Line 91
		    [{{'record','mtspr'},[{'record_field',91,{'atom',91,'spr'}}|[{'record_field',91,{'atom',91,'src'}}]],[]}],
		%% Line 92
		'type' =
		    %% Line 92
		    [{{'record','pseudo_bc'},[{'record_field',92,{'atom',92,'bcond'}}|[{'record_field',92,{'atom',92,'true_label'}}|[{'record_field',92,{'atom',92,'false_label'}}|[{'record_field',92,{'atom',92,'pred'}}]]]],[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','pseudo_call'},[{'record_field',93,{'atom',93,'func'}}|[{'record_field',93,{'atom',93,'sdesc'}}|[{'record_field',93,{'atom',93,'contlab'}}|[{'record_field',93,{'atom',93,'linkage'}}]]]],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{{'record','pseudo_call_prepare'},[{'record_field',94,{'atom',94,'nrstkargs'}}],[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{{'record','pseudo_li'},[{'record_field',95,{'atom',95,'dst'}}|[{'record_field',95,{'atom',95,'imm'}}]],[]}],
		%% Line 96
		'type' =
		    %% Line 96
		    [{{'record','pseudo_move'},[{'record_field',96,{'atom',96,'dst'}}|[{'record_field',96,{'atom',96,'src'}}]],[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','pseudo_tailcall'},[{'record_field',97,{'atom',97,'func'}}|[{'record_field',97,{'atom',97,'arity'}}|[{'record_field',97,{'atom',97,'stkargs'}}|[{'record_field',97,{'atom',97,'linkage'}}]]]],[]}],
		%% Line 98
		'type' =
		    %% Line 98
		    [{{'record','pseudo_tailcall_prepare'},[],[]}],
		%% Line 99
		'type' =
		    %% Line 99
		    [{{'record','store'},[{'record_field',99,{'atom',99,'stop'}}|[{'record_field',99,{'atom',99,'src'}}|[{'record_field',99,{'atom',99,'disp'}}|[{'record_field',99,{'atom',99,'base'}}]]]],[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{{'record','storex'},[{'record_field',100,{'atom',100,'stxop'}}|[{'record_field',100,{'atom',100,'src'}}|[{'record_field',100,{'atom',100,'base1'}}|[{'record_field',100,{'atom',100,'base2'}}]]]],[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{{'record','unary'},[{'record_field',101,{'atom',101,'unop'}}|[{'record_field',101,{'atom',101,'dst'}}|[{'record_field',101,{'atom',101,'src'}}]]],[]}],
		%% Line 102
		'type' =
		    %% Line 102
		    [{{'record','lfd'},[{'record_field',102,{'atom',102,'dst'}}|[{'record_field',102,{'atom',102,'disp'}}|[{'record_field',102,{'atom',102,'base'}}]]],[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','lfdx'},[{'record_field',103,{'atom',103,'dst'}}|[{'record_field',103,{'atom',103,'base1'}}|[{'record_field',103,{'atom',103,'base2'}}]]],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{{'record','stfd'},[{'record_field',104,{'atom',104,'src'}}|[{'record_field',104,{'atom',104,'disp'}}|[{'record_field',104,{'atom',104,'base'}}]]],[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{{'record','stfdx'},[{'record_field',105,{'atom',105,'src'}}|[{'record_field',105,{'atom',105,'base1'}}|[{'record_field',105,{'atom',105,'base2'}}]]],[]}],
		%% Line 106
		'type' =
		    %% Line 106
		    [{{'record','fp_binary'},[{'record_field',106,{'atom',106,'fp_binop'}}|[{'record_field',106,{'atom',106,'dst'}}|[{'record_field',106,{'atom',106,'src1'}}|[{'record_field',106,{'atom',106,'src2'}}]]]],[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','fp_unary'},[{'record_field',107,{'atom',107,'fp_unop'}}|[{'record_field',107,{'atom',107,'dst'}}|[{'record_field',107,{'atom',107,'src'}}]]],[]}],
		%% Line 108
		'type' =
		    %% Line 108
		    [{{'record','pseudo_fmove'},[{'record_field',108,{'atom',108,'dst'}}|[{'record_field',108,{'atom',108,'src'}}]],[]}],
		%% Line 22
		'type' =
		    %% Line 22
		    [{'ct_alignment',{'type',22,'union',[{'integer',22,4}|[{'integer',22,8}]]},[]}],
		%% Line 24
		'type' =
		    %% Line 24
		    [{'hipe_constlbl',{'type',24,'non_neg_integer',[]},[]}],
		%% Line 25
		'type' =
		    %% Line 25
		    [{'hipe_consttab',{'type',25,'tuple',[{'remote_type',25,[{'atom',25,'dict'}|[{'atom',25,'dict'}|[[]]]]}|[{'type',25,'list',[{'type',25,'hipe_constlbl',[]}]}|[{'type',25,'hipe_constlbl',[]}]]]},[]}],
		%% Line 114
		'type' =
		    %% Line 114
		    [{{'record','defun'},[{'typed_record_field',{'record_field',114,{'atom',114,'mfa'}},{'type',114,'union',[{'atom',114,'undefined'}|[{'type',114,'mfa',[]}]]}}|[{'record_field',114,{'atom',114,'formals'}}|[{'record_field',114,{'atom',114,'code'}}|[{'typed_record_field',{'record_field',115,{'atom',115,'data'}},{'type',115,'union',[{'atom',115,'undefined'}|[{'type',115,'hipe_consttab',[]}]]}}|[{'typed_record_field',{'record_field',116,{'atom',116,'isclosure'}},{'type',116,'union',[{'atom',116,'undefined'}|[{'type',116,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',117,{'atom',117,'isleaf'}},{'type',117,'union',[{'atom',117,'undefined'}|[{'type',117,'boolean',[]}]]}}|[{'record_field',118,{'atom',118,'var_range'}}|[{'record_field',118,{'atom',118,'label_range'}}]]]]]]]],[]}]]
'insn_def_all'/1 =
    %% Line 31
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 32
	    apply 'insn_def_fpr'/1
		(_cor0)
	in  let <_cor1> =
		%% Line 32
		apply 'insn_def_gpr'/1
		    (_cor0)
	    in  %% Line 32
		apply 'addtemps'/2
		    (_cor2, _cor1)
'insn_use_all'/1 =
    %% Line 34
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 35
	    apply 'insn_use_fpr'/1
		(_cor0)
	in  let <_cor1> =
		%% Line 35
		apply 'insn_use_gpr'/1
		    (_cor0)
	    in  %% Line 35
		apply 'addtemps'/2
		    (_cor2, _cor1)
'insn_def_gpr'/1 =
    %% Line 40
    fun (_cor0) ->
	%% Line 41
	case _cor0 of
	  %% Line 42
	  <{'alu',_cor3,Dst,_cor4,_cor5}> when 'true' ->
	      [Dst|[]]
	  %% Line 43
	  <{'load',_cor6,Dst,_cor7,_cor8}> when 'true' ->
	      [Dst|[]]
	  %% Line 44
	  <{'loadx',_cor9,Dst,_cor10,_cor11}> when 'true' ->
	      [Dst|[]]
	  %% Line 45
	  <{'mfspr',Dst,_cor12}> when 'true' ->
	      [Dst|[]]
	  %% Line 46
	  <{'pseudo_call',_cor13,_cor14,_cor15,_cor16}> when 'true' ->
	      apply 'call_clobbered_gpr'/0
		  ()
	  %% Line 47
	  <{'pseudo_li',Dst,_cor17}> when 'true' ->
	      [Dst|[]]
	  %% Line 48
	  <{'pseudo_move',Dst,_cor18}> when 'true' ->
	      [Dst|[]]
	  %% Line 49
	  <{'pseudo_tailcall_prepare'}> when 'true' ->
	      apply 'tailcall_clobbered_gpr'/0
		  ()
	  %% Line 50
	  <{'unary',_cor19,Dst,_cor20}> when 'true' ->
	      [Dst|[]]
	  %% Line 51
	  <_cor21> when 'true' ->
	      []
	end
'call_clobbered_gpr'/0 =
    %% Line 54
    fun () ->
	%% Line 55
	( letrec
	      'lc$^0'/1 =
		  fun (_cor5) ->
		      case _cor5 of
			<[%% Line 56
			  {R,T}|_cor1]> when 'true' ->
			    let <_cor6> =
				call 'hipe_ppc':'mk_temp'
				    (R, T)
			    in  let <_cor7> =
				    %% Line 56
				    apply 'lc$^0'/1
					(_cor1)
				in  ( [_cor6|_cor7]
				      -| ['compiler_generated'] )
			( <[_cor0|_cor1]> when 'true' ->
			      %% Line 56
			      apply 'lc$^0'/1
				  (_cor1)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor5> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor5})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor3> =
		  %% Line 56
		  call 'hipe_ppc_registers':'call_clobbered'
		      ()
	      in  let <_cor2> =
		      %% Line 56
		      apply 'all_fp_pseudos'/0
			  ()
		  in  let <_cor4> =
			  %% Line 56
			  call 'erlang':'++'
			      (_cor3, _cor2)
		      in  apply 'lc$^0'/1
			      (_cor4)
	  -| ['list_comprehension'] )
'all_fp_pseudos'/0 =
    %% Line 58
    fun () ->
	[]
'tailcall_clobbered_gpr'/0 =
    %% Line 60
    fun () ->
	%% Line 61
	( letrec
	      'lc$^0'/1 =
		  fun (_cor5) ->
		      case _cor5 of
			<[%% Line 62
			  {R,T}|_cor1]> when 'true' ->
			    let <_cor6> =
				call 'hipe_ppc':'mk_temp'
				    (R, T)
			    in  let <_cor7> =
				    %% Line 62
				    apply 'lc$^0'/1
					(_cor1)
				in  ( [_cor6|_cor7]
				      -| ['compiler_generated'] )
			( <[_cor0|_cor1]> when 'true' ->
			      %% Line 62
			      apply 'lc$^0'/1
				  (_cor1)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor5> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor5})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor3> =
		  %% Line 62
		  call 'hipe_ppc_registers':'tailcall_clobbered'
		      ()
	      in  let <_cor2> =
		      %% Line 62
		      apply 'all_fp_pseudos'/0
			  ()
		  in  let <_cor4> =
			  %% Line 62
			  call 'erlang':'++'
			      (_cor3, _cor2)
		      in  apply 'lc$^0'/1
			      (_cor4)
	  -| ['list_comprehension'] )
'insn_use_gpr'/1 =
    %% Line 64
    fun (_cor0) ->
	%% Line 65
	case _cor0 of
	  %% Line 66
	  <{'alu',_cor9,_cor10,Src1,Src2}> when 'true' ->
	      apply 'addsrc'/2
		  (Src2, [Src1|[]])
	  %% Line 67
	  <{'blr'}> when 'true' ->
	      let <_cor1> =
		  %% Line 68
		  call 'hipe_ppc_registers':'return_value'
		      ()
	      in  let <_cor2> =
		      %% Line 68
		      call 'hipe_ppc':'mk_temp'
			  (_cor1, 'tagged')
		  in  %% Line 68
		      [_cor2|[]]
	  %% Line 69
	  <{'cmp',_cor11,Src1,Src2}> when 'true' ->
	      apply 'addsrc'/2
		  (Src2, [Src1|[]])
	  %% Line 70
	  <{'load',_cor12,_cor13,_cor14,Base}> when 'true' ->
	      [Base|[]]
	  %% Line 71
	  <{'loadx',_cor15,_cor16,Base1,Base2}> when 'true' ->
	      apply 'addtemp'/2
		  (Base1, [Base2|[]])
	  %% Line 72
	  <{'mtcr',Src}> when 'true' ->
	      [Src|[]]
	  %% Line 73
	  <{'mtspr',_cor17,Src}> when 'true' ->
	      [Src|[]]
	  %% Line 74
	  <{'pseudo_call',_cor18,{'ppc_sdesc',_cor19,_cor20,Arity,_cor21},_cor22,_cor23}> when 'true' ->
	      apply 'arity_use_gpr'/1
		  (Arity)
	  %% Line 75
	  <{'pseudo_move',_cor24,Src}> when 'true' ->
	      [Src|[]]
	  %% Line 76
	  <{'pseudo_tailcall',_cor25,Arity,StkArgs,_cor26}> when 'true' ->
	      let <_cor4> =
		  %% Line 77
		  apply 'tailcall_clobbered_gpr'/0
		      ()
	      in  let <_cor3> =
		      %% Line 77
		      apply 'arity_use_gpr'/1
			  (Arity)
		  in  let <_cor5> =
			  %% Line 77
			  apply 'addtemps'/2
			      (_cor4, _cor3)
		      in  %% Line 77
			  apply 'addsrcs'/2
			      (StkArgs, _cor5)
	  %% Line 78
	  <{'store',_cor27,Src,_cor28,Base}> when 'true' ->
	      apply 'addtemp'/2
		  (Src, [Base|[]])
	  %% Line 79
	  <{'storex',_cor29,Src,Base1,Base2}> when 'true' ->
	      let <_cor6> =
		  %% Line 80
		  apply 'addtemp'/2
		      (Base1, [Base2|[]])
	      in  %% Line 80
		  apply 'addtemp'/2
		      (Src, _cor6)
	  %% Line 81
	  <{'unary',_cor30,_cor31,Src}> when 'true' ->
	      [Src|[]]
	  %% Line 82
	  <{'lfd',_cor32,_cor33,Base}> when 'true' ->
	      [Base|[]]
	  %% Line 83
	  <{'lfdx',_cor34,Base1,Base2}> when 'true' ->
	      apply 'addtemp'/2
		  (Base1, [Base2|[]])
	  %% Line 84
	  <{'stfd',_cor35,_cor36,Base}> when 'true' ->
	      [Base|[]]
	  %% Line 85
	  <{'stfdx',_cor37,Base1,Base2}> when 'true' ->
	      apply 'addtemp'/2
		  (Base1, [Base2|[]])
	  %% Line 86
	  <_cor38> when 'true' ->
	      []
	end
'arity_use_gpr'/1 =
    %% Line 89
    fun (_cor0) ->
	%% Line 90
	( letrec
	      'lc$^0'/1 =
		  fun (_cor4) ->
		      case _cor4 of
			<[%% Line 91
			  R|_cor2]> when 'true' ->
			    let <_cor5> =
				call 'hipe_ppc':'mk_temp'
				    (R, 'tagged')
			    in  let <_cor6> =
				    %% Line 91
				    apply 'lc$^0'/1
					(_cor2)
				in  ( [_cor5|_cor6]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor4> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor4})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor3> =
		  %% Line 91
		  call 'hipe_ppc_registers':'args'
		      (_cor0)
	      in  apply 'lc$^0'/1
		      (_cor3)
	  -| ['list_comprehension'] )
'addsrcs'/2 =
    %% Line 93
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Arg|Args],Set> when 'true' ->
	      let <_cor2> =
		  %% Line 94
		  apply 'addsrc'/2
		      (Arg, Set)
	      in  %% Line 94
		  apply 'addsrcs'/2
		      (Args, _cor2)
	  %% Line 95
	  <[],Set> when 'true' ->
	      %% Line 96
	      Set
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'addsrcs',2}}] )
	    -| ['compiler_generated'] )
	end
'addsrc'/2 =
    %% Line 98
    fun (_cor1,_cor0) ->
	%% Line 99
	case _cor1 of
	  %% Line 100
	  <{'ppc_temp',_cor5,_cor6,_cor7}> when 'true' ->
	      apply 'addtemp'/2
		  (_cor1, _cor0)
	  %% Line 101
	  <_cor8> when 'true' ->
	      _cor0
	end
'insn_def_fpr'/1 =
    %% Line 107
    fun (_cor0) ->
	%% Line 108
	case _cor0 of
	  %% Line 109
	  <{'pseudo_call',_cor3,_cor4,_cor5,_cor6}> when 'true' ->
	      apply 'call_clobbered_fpr'/0
		  ()
	  %% Line 110
	  <{'lfd',Dst,_cor7,_cor8}> when 'true' ->
	      [Dst|[]]
	  %% Line 111
	  <{'lfdx',Dst,_cor9,_cor10}> when 'true' ->
	      [Dst|[]]
	  %% Line 112
	  <{'fp_binary',_cor11,Dst,_cor12,_cor13}> when 'true' ->
	      [Dst|[]]
	  %% Line 113
	  <{'fp_unary',_cor14,Dst,_cor15}> when 'true' ->
	      [Dst|[]]
	  %% Line 114
	  <{'pseudo_fmove',Dst,_cor16}> when 'true' ->
	      [Dst|[]]
	  %% Line 115
	  <_cor17> when 'true' ->
	      []
	end
'call_clobbered_fpr'/0 =
    %% Line 118
    fun () ->
	%% Line 119
	( letrec
	      'lc$^0'/1 =
		  fun (_cor3) ->
		      case _cor3 of
			<[R|_cor1]> when 'true' ->
			    let <_cor4> =
				call 'hipe_ppc':'mk_temp'
				    (R, 'double')
			    in  let <_cor5> =
				    apply 'lc$^0'/1
					(_cor1)
				in  ( [_cor4|_cor5]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor3> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor3})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor2> =
		  call 'hipe_ppc_registers':'allocatable_fpr'
		      ()
	      in  apply 'lc$^0'/1
		      (_cor2)
	  -| ['list_comprehension'] )
'insn_use_fpr'/1 =
    %% Line 121
    fun (_cor0) ->
	%% Line 122
	case _cor0 of
	  %% Line 123
	  <{'stfd',Src,_cor3,_cor4}> when 'true' ->
	      [Src|[]]
	  %% Line 124
	  <{'stfdx',Src,_cor5,_cor6}> when 'true' ->
	      [Src|[]]
	  %% Line 125
	  <{'fp_binary',_cor7,_cor8,Src1,Src2}> when 'true' ->
	      apply 'addtemp'/2
		  (Src1, [Src2|[]])
	  %% Line 126
	  <{'fp_unary',_cor9,_cor10,Src}> when 'true' ->
	      [Src|[]]
	  %% Line 127
	  <{'pseudo_fmove',_cor11,Src}> when 'true' ->
	      [Src|[]]
	  %% Line 128
	  <_cor12> when 'true' ->
	      []
	end
'addtemps'/2 =
    %% Line 136
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Arg|Args],Set> when 'true' ->
	      let <_cor2> =
		  %% Line 137
		  apply 'addtemp'/2
		      (Arg, Set)
	      in  %% Line 137
		  apply 'addtemps'/2
		      (Args, _cor2)
	  %% Line 138
	  <[],Set> when 'true' ->
	      %% Line 139
	      Set
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'addtemps',2}}] )
	    -| ['compiler_generated'] )
	end
'addtemp'/2 =
    %% Line 141
    fun (_cor1,_cor0) ->
	%% Line 142
	case call 'lists':'member'
		 (_cor1, _cor0) of
	  %% Line 143
	  <'false'> when 'true' ->
	      [_cor1|_cor0]
	  %% Line 144
	  <_cor5> when 'true' ->
	      _cor0
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_ppc_defuse')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_ppc_defuse', _cor0)
end