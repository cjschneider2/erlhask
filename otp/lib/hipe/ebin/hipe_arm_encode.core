module 'hipe_arm_encode' ['insn_encode'/2,
			  'module_info'/0,
			  'module_info'/1]
    attributes []
'bf'/3 =
    %% Line 98
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 99
	    case <> of
	      <>
		  when call 'erlang':'>'
			(32,
			 _cor2) ->
		  []
	      <> when 'true' ->
		  call 'erlang':'exit'
		      ({'assertion_failed','hipe_arm_encode',99,[51|[50|[32|[62|[32|[76|[101|[102|[116|[66|[105|[116]]]]]]]]]]]]})
	    end
	    do  %% Line 100
		case <> of
		  <>
		      when call 'erlang':'>='
			    (_cor2,
			     _cor1) ->
		      []
		  <> when 'true' ->
		      call 'erlang':'exit'
			  ({'assertion_failed','hipe_arm_encode',100,[76|[101|[102|[116|[66|[105|[116|[32|[62|[61|[32|[82|[105|[103|[104|[116|[66|[105|[116]]]]]]]]]]]]]]]]]]]})
		end
		do  %% Line 101
		    case <> of
		      <>
			  when call 'erlang':'>='
				(_cor1,
				 0) ->
			  []
		      <> when 'true' ->
			  call 'erlang':'exit'
			      ({'assertion_failed','hipe_arm_encode',101,[82|[105|[103|[104|[116|[66|[105|[116|[32|[62|[61|[32|[48]]]]]]]]]]]]]})
		    end
		    do  %% Line 102
			case <> of
			  <>
			      when call 'erlang':'>='
				    (_cor0,
				     0) ->
			      []
			  <> when 'true' ->
			      call 'erlang':'exit'
				  ({'assertion_failed','hipe_arm_encode',102,[86|[97|[108|[117|[101|[32|[62|[61|[32|[48]]]]]]]]]]})
			end
			do  %% Line 103
			    case <> of
			      <>
				  when try
					let <_cor3> =
					    call 'erlang':'-'
						(_cor2, _cor1)
					in  let <_cor4> =
						call 'erlang':'+'
						    (_cor3, 1)
					    in  let <_cor5> =
						    call 'erlang':'bsl'
							(1, _cor4)
						in  call 'erlang':'<'
							(_cor0, _cor5)
				    of <Try> ->
					Try
				    catch <T,R> ->
					'false' ->
				  []
			      <> when 'true' ->
				  call 'erlang':'exit'
				      ({'assertion_failed','hipe_arm_encode',103,[86|[97|[108|[117|[101|[32|[60|[32|[40|[32|[49|[32|[98|[115|[108|[32|[40|[32|[40|[32|[76|[101|[102|[116|[66|[105|[116|[32|[45|[32|[82|[105|[103|[104|[116|[66|[105|[116|[32|[41|[32|[43|[32|[49|[32|[41|[32|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]})
			    end
			    %% Line 104
			    call 'erlang':'bsl'
				(_cor0, _cor1)
'am1_shifter_operand'/3 =
    %% Line 114
    fun (_cor2,_cor1,_cor0) ->
	%% Line 115
	case _cor0 of
	  %% Line 116
	  <{{'imm8',Imm8},{'imm4',RotImm4}}> when 'true' ->
	      let <_cor5> =
		  %% Line 117
		  apply 'bf'/3
		      (25, 25, 1)
	      in  let <_cor4> =
		      %% Line 117
		      apply 'bf'/3
			  (11, 8, RotImm4)
		  in  let <_cor6> =
			  %% Line 117
			  call 'erlang':'bor'
			      (_cor5, _cor4)
		      in  let <_cor3> =
			      %% Line 117
			      apply 'bf'/3
				  (7, 0, Imm8)
			  in  %% Line 117
			      call 'erlang':'bor'
				  (_cor6, _cor3)
	  %% Line 118
	  <{'r',Rm}> when 'true' ->
	      %% Line 120
	      apply 'bf'/3
		  (3, 0, Rm)
	  %% Line 121
	  <{{'r',Rm},ShiftOp}> when 'true' ->
	      let <_cor8> =
		  %% Line 122
		  apply 'am1_shift_op'/4
		      (_cor2, _cor1, Rm, ShiftOp)
	      in  let <_cor7> =
		      %% Line 122
		      apply 'bf'/3
			  (3, 0, Rm)
		  in  %% Line 122
		      call 'erlang':'bor'
			  (_cor8, _cor7)
	  ( <_cor9> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor9})
	    -| ['compiler_generated'] )
	end
'am1_shift_op'/4 =
    %% Line 125
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_Rn,_X_Rd,_X_Rm,{ShiftOp,{'imm5',ShiftImm5}}> when 'true' ->
	      do  %% Line 126
		  case ShiftOp of
		    %% Line 127
		    <'ror'> when 'true' ->
			case <> of
			  <>
			      when call 'erlang':'=/='
				    (ShiftImm5,
				     0) ->
			      []
			  <> when 'true' ->
			      call 'erlang':'exit'
				  ({'assertion_failed','hipe_arm_encode',127,[83|[104|[105|[102|[116|[73|[109|[109|[53|[32|[61|[47|[61|[32|[48]]]]]]]]]]]]]]]})
			end
		    %% Line 128
		    <_cor15> when 'true' ->
			[]
		  end
		  let <_cor6> =
		      %% Line 130
		      apply 'bf'/3
			  (11, 7, ShiftImm5)
		  in  let <_cor5> =
			  %% Line 130
			  apply 'shift_op_bits65'/1
			      (ShiftOp)
		      in  %% Line 130
			  call 'erlang':'bor'
			      (_cor6, _cor5)
	  %% Line 131
	  <Rn,Rd,Rm,{ShiftOp,{'r',Rs}}> when 'true' ->
	      do  %% Line 132
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rn,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',132,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  do  %% Line 133
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rd,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',133,[82|[100|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      do  %% Line 134
			  case <> of
			    <>
				when call 'erlang':'=/='
				      (Rm,
				       15) ->
				[]
			    <> when 'true' ->
				call 'erlang':'exit'
				    ({'assertion_failed','hipe_arm_encode',134,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			  end
			  do  %% Line 135
			      case <> of
				<>
				    when call 'erlang':'=/='
					  (Rs,
					   15) ->
				    []
				<> when 'true' ->
				    call 'erlang':'exit'
					({'assertion_failed','hipe_arm_encode',135,[82|[115|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			      end
			      let <_cor9> =
				  %% Line 136
				  apply 'bf'/3
				      (11, 8, Rs)
			      in  let <_cor8> =
				      %% Line 136
				      apply 'shift_op_bits65'/1
					  (ShiftOp)
				  in  let <_cor10> =
					  %% Line 136
					  call 'erlang':'bor'
					      (_cor9, _cor8)
				      in  let <_cor7> =
					      %% Line 136
					      apply 'bf'/3
						  (4, 4, 1)
					  in  %% Line 136
					      call 'erlang':'bor'
						  (_cor10, _cor7)
	  %% Line 137
	  <_X_Rn,_X_Rd,_X_Rm,'rrx'> when 'true' ->
	      %% Line 138
	      apply 'bf'/3
		  (6, 5, 3)
	  ( <_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'am1_shift_op',4}}] )
	    -| ['compiler_generated'] )
	end
'shift_op_bits65'/1 =
    %% Line 140
    fun (_cor0) ->
	%% Line 141
	case _cor0 of
	  %% Line 142
	  <'lsl'> when 'true' ->
	      apply 'bf'/3
		  (6, 5, 0)
	  %% Line 143
	  <'lsr'> when 'true' ->
	      apply 'bf'/3
		  (6, 5, 1)
	  %% Line 144
	  <'asr'> when 'true' ->
	      apply 'bf'/3
		  (6, 5, 2)
	  %% Line 145
	  <'ror'> when 'true' ->
	      apply 'bf'/3
		  (6, 5, 3)
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor1})
	    -| ['compiler_generated'] )
	end
'sign'/1 =
    %% Line 148
    fun (_cor0) ->
	case _cor0 of
	  <'+'> when 'true' ->
	      apply 'bf'/3
		  (23, 23, 1)
	  %% Line 149
	  <'-'> when 'true' ->
	      0
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'sign',1}}] )
	    -| ['compiler_generated'] )
	end
'am2_lswub'/2 =
    %% Line 151
    fun (_cor1,_cor0) ->
	%% Line 152
	case _cor0 of
	  %% Line 153
	  <{'immediate_offset',{'r',Rn},Sign,{'imm12',Imm12}}> when 'true' ->
	      let <_cor5> =
		  %% Line 154
		  apply 'bf'/3
		      (24, 24, 1)
	      in  let <_cor4> =
		      %% Line 154
		      apply 'sign'/1
			  (Sign)
		  in  let <_cor6> =
			  %% Line 154
			  call 'erlang':'bor'
			      (_cor5, _cor4)
		      in  let <_cor3> =
			      %% Line 154
			      apply 'bf'/3
				  (19, 16, Rn)
			  in  let <_cor7> =
				  %% Line 154
				  call 'erlang':'bor'
				      (_cor6, _cor3)
			      in  let <_cor2> =
				      %% Line 154
				      apply 'bf'/3
					  (11, 0, Imm12)
				  in  %% Line 154
				      call 'erlang':'bor'
					  (_cor7, _cor2)
	  %% Line 155
	  <{'register_offset',{'r',Rn},Sign,{'r',Rm}}> when 'true' ->
	      do  %% Line 157
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rm,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',157,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  let <_cor12> =
		      %% Line 158
		      apply 'bf'/3
			  (25, 25, 1)
		  in  let <_cor11> =
			  %% Line 158
			  apply 'bf'/3
			      (24, 24, 1)
		      in  let <_cor13> =
			      %% Line 158
			      call 'erlang':'bor'
				  (_cor12, _cor11)
			  in  let <_cor10> =
				  %% Line 158
				  apply 'sign'/1
				      (Sign)
			      in  let <_cor14> =
				      %% Line 158
				      call 'erlang':'bor'
					  (_cor13, _cor10)
				  in  let <_cor9> =
					  %% Line 158
					  apply 'bf'/3
					      (19, 16, Rn)
				      in  let <_cor15> =
					      %% Line 158
					      call 'erlang':'bor'
						  (_cor14, _cor9)
					  in  let <_cor8> =
						  %% Line 158
						  apply 'bf'/3
						      (3, 0, Rm)
					      in  %% Line 158
						  call 'erlang':'bor'
						      (_cor15, _cor8)
	  %% Line 159
	  <{'scaled_register_offset',{'r',Rn},Sign,{'r',Rm},ShiftOp}> when 'true' ->
	      do  %% Line 160
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rm,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',160,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  let <_cor21> =
		      %% Line 161
		      apply 'bf'/3
			  (25, 25, 1)
		  in  let <_cor20> =
			  %% Line 161
			  apply 'bf'/3
			      (24, 24, 1)
		      in  let <_cor22> =
			      %% Line 161
			      call 'erlang':'bor'
				  (_cor21, _cor20)
			  in  let <_cor19> =
				  %% Line 161
				  apply 'sign'/1
				      (Sign)
			      in  let <_cor23> =
				      %% Line 161
				      call 'erlang':'bor'
					  (_cor22, _cor19)
				  in  let <_cor18> =
					  %% Line 161
					  apply 'bf'/3
					      (19, 16, Rn)
				      in  let <_cor24> =
					      %% Line 161
					      call 'erlang':'bor'
						  (_cor23, _cor18)
					  in  let <_cor17> =
						  %% Line 161
						  apply 'am2_shift_op'/1
						      (ShiftOp)
					      in  let <_cor25> =
						      %% Line 161
						      call 'erlang':'bor'
							  (_cor24, _cor17)
						  in  let <_cor16> =
							  %% Line 161
							  apply 'bf'/3
							      (3, 0, Rm)
						      in  %% Line 161
							  call 'erlang':'bor'
							      (_cor25, _cor16)
	  %% Line 162
	  <{'immediate_pre_indexed',{'r',Rn},Sign,{'imm12',Imm12}}> when 'true' ->
	      do  %% Line 163
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (_cor1,
			       Rn) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',163,[82|[100|[32|[61|[47|[61|[32|[82|[110]]]]]]]]]})
		  end
		  do  %% Line 164
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rn,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',164,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      let <_cor30> =
			  %% Line 165
			  apply 'bf'/3
			      (24, 24, 1)
		      in  let <_cor29> =
			      %% Line 165
			      apply 'sign'/1
				  (Sign)
			  in  let <_cor31> =
				  %% Line 165
				  call 'erlang':'bor'
				      (_cor30, _cor29)
			      in  let <_cor28> =
				      %% Line 165
				      apply 'bf'/3
					  (21, 21, 1)
				  in  let <_cor32> =
					  %% Line 165
					  call 'erlang':'bor'
					      (_cor31, _cor28)
				      in  let <_cor27> =
					      %% Line 165
					      apply 'bf'/3
						  (19, 16, Rn)
					  in  let <_cor33> =
						  %% Line 165
						  call 'erlang':'bor'
						      (_cor32, _cor27)
					      in  let <_cor26> =
						      %% Line 165
						      apply 'bf'/3
							  (11, 0, Imm12)
						  in  %% Line 165
						      call 'erlang':'bor'
							  (_cor33, _cor26)
	  %% Line 166
	  <{'register_pre_indexed',{'r',Rn},Sign,{'r',Rm}}> when 'true' ->
	      do  %% Line 168
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (_cor1,
			       Rn) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',168,[82|[100|[32|[61|[47|[61|[32|[82|[110]]]]]]]]]})
		  end
		  do  %% Line 169
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rn,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',169,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      do  %% Line 170
			  case <> of
			    <>
				when call 'erlang':'=/='
				      (Rm,
				       15) ->
				[]
			    <> when 'true' ->
				call 'erlang':'exit'
				    ({'assertion_failed','hipe_arm_encode',170,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			  end
			  do  %% Line 171
			      case <> of
				<>
				    when call 'erlang':'=/='
					  (Rn,
					   Rm) ->
				    []
				<> when 'true' ->
				    call 'erlang':'exit'
					({'assertion_failed','hipe_arm_encode',171,[82|[110|[32|[61|[47|[61|[32|[82|[109]]]]]]]]]})
			      end
			      let <_cor39> =
				  %% Line 172
				  apply 'bf'/3
				      (25, 25, 1)
			      in  let <_cor38> =
				      %% Line 172
				      apply 'bf'/3
					  (24, 24, 1)
				  in  let <_cor40> =
					  %% Line 172
					  call 'erlang':'bor'
					      (_cor39, _cor38)
				      in  let <_cor37> =
					      %% Line 172
					      apply 'sign'/1
						  (Sign)
					  in  let <_cor41> =
						  %% Line 172
						  call 'erlang':'bor'
						      (_cor40, _cor37)
					      in  let <_cor36> =
						      %% Line 172
						      apply 'bf'/3
							  (21, 21, 1)
						  in  let <_cor42> =
							  %% Line 172
							  call 'erlang':'bor'
							      (_cor41, _cor36)
						      in  let <_cor35> =
							      %% Line 172
							      apply 'bf'/3
								  (19, 16, Rn)
							  in  let <_cor43> =
								  %% Line 172
								  call 'erlang':'bor'
								      (_cor42, _cor35)
							      in  let <_cor34> =
								      %% Line 172
								      apply 'bf'/3
									  (3, 0, Rm)
								  in  %% Line 172
								      call 'erlang':'bor'
									  (_cor43, _cor34)
	  %% Line 173
	  <{'scaled_register_pre_indexed',{'r',Rn},Sign,{'r',Rm},ShiftOp}> when 'true' ->
	      do  %% Line 174
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (_cor1,
			       Rn) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',174,[82|[100|[32|[61|[47|[61|[32|[82|[110]]]]]]]]]})
		  end
		  do  %% Line 175
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rn,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',175,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      do  %% Line 176
			  case <> of
			    <>
				when call 'erlang':'=/='
				      (Rm,
				       15) ->
				[]
			    <> when 'true' ->
				call 'erlang':'exit'
				    ({'assertion_failed','hipe_arm_encode',176,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			  end
			  do  %% Line 177
			      case <> of
				<>
				    when call 'erlang':'=/='
					  (Rn,
					   Rm) ->
				    []
				<> when 'true' ->
				    call 'erlang':'exit'
					({'assertion_failed','hipe_arm_encode',177,[82|[110|[32|[61|[47|[61|[32|[82|[109]]]]]]]]]})
			      end
			      let <_cor50> =
				  %% Line 178
				  apply 'bf'/3
				      (25, 25, 1)
			      in  let <_cor49> =
				      %% Line 178
				      apply 'bf'/3
					  (24, 24, 1)
				  in  let <_cor51> =
					  %% Line 178
					  call 'erlang':'bor'
					      (_cor50, _cor49)
				      in  let <_cor48> =
					      %% Line 178
					      apply 'sign'/1
						  (Sign)
					  in  let <_cor52> =
						  %% Line 178
						  call 'erlang':'bor'
						      (_cor51, _cor48)
					      in  let <_cor47> =
						      %% Line 178
						      apply 'bf'/3
							  (21, 21, 1)
						  in  let <_cor53> =
							  %% Line 178
							  call 'erlang':'bor'
							      (_cor52, _cor47)
						      in  let <_cor46> =
							      %% Line 178
							      apply 'bf'/3
								  (19, 16, Rn)
							  in  let <_cor54> =
								  %% Line 178
								  call 'erlang':'bor'
								      (_cor53, _cor46)
							      in  let <_cor45> =
								      %% Line 178
								      apply 'am2_shift_op'/1
									  (ShiftOp)
								  in  let <_cor55> =
									  %% Line 178
									  call 'erlang':'bor'
									      (_cor54, _cor45)
								      in  let <_cor44> =
									      %% Line 178
									      apply 'bf'/3
										  (3, 0, Rm)
									  in  %% Line 178
									      call 'erlang':'bor'
										  (_cor55, _cor44)
	  %% Line 179
	  <{'immediate_post_indexed',{'r',Rn},Sign,{'imm12',Imm12}}> when 'true' ->
	      do  %% Line 180
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (_cor1,
			       Rn) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',180,[82|[100|[32|[61|[47|[61|[32|[82|[110]]]]]]]]]})
		  end
		  do  %% Line 181
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rn,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',181,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      let <_cor58> =
			  %% Line 182
			  apply 'sign'/1
			      (Sign)
		      in  let <_cor57> =
			      %% Line 182
			      apply 'bf'/3
				  (19, 16, Rn)
			  in  let <_cor59> =
				  %% Line 182
				  call 'erlang':'bor'
				      (_cor58, _cor57)
			      in  let <_cor56> =
				      %% Line 182
				      apply 'bf'/3
					  (11, 0, Imm12)
				  in  %% Line 182
				      call 'erlang':'bor'
					  (_cor59, _cor56)
	  %% Line 183
	  <{'register_post_indexed',{'r',Rn},Sign,{'r',Rm}}> when 'true' ->
	      do  %% Line 185
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (_cor1,
			       Rn) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',185,[82|[100|[32|[61|[47|[61|[32|[82|[110]]]]]]]]]})
		  end
		  let <_cor63> =
		      %% Line 186
		      apply 'bf'/3
			  (25, 25, 1)
		  in  let <_cor62> =
			  %% Line 186
			  apply 'sign'/1
			      (Sign)
		      in  let <_cor64> =
			      %% Line 186
			      call 'erlang':'bor'
				  (_cor63, _cor62)
			  in  let <_cor61> =
				  %% Line 186
				  apply 'bf'/3
				      (19, 6, Rn)
			      in  let <_cor65> =
				      %% Line 186
				      call 'erlang':'bor'
					  (_cor64, _cor61)
				  in  let <_cor60> =
					  %% Line 186
					  apply 'bf'/3
					      (3, 0, Rm)
				      in  %% Line 186
					  call 'erlang':'bor'
					      (_cor65, _cor60)
	  %% Line 187
	  <{'scaled_register_post_indexed',{'r',Rn},Sign,{'r',Rm},ShiftOp}> when 'true' ->
	      do  %% Line 188
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (_cor1,
			       Rn) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',188,[82|[100|[32|[61|[47|[61|[32|[82|[110]]]]]]]]]})
		  end
		  do  %% Line 189
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rn,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',189,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      do  %% Line 190
			  case <> of
			    <>
				when call 'erlang':'=/='
				      (Rm,
				       15) ->
				[]
			    <> when 'true' ->
				call 'erlang':'exit'
				    ({'assertion_failed','hipe_arm_encode',190,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			  end
			  do  %% Line 191
			      case <> of
				<>
				    when call 'erlang':'=/='
					  (Rn,
					   Rm) ->
				    []
				<> when 'true' ->
				    call 'erlang':'exit'
					({'assertion_failed','hipe_arm_encode',191,[82|[110|[32|[61|[47|[61|[32|[82|[109]]]]]]]]]})
			      end
			      let <_cor70> =
				  %% Line 192
				  apply 'bf'/3
				      (25, 25, 1)
			      in  let <_cor69> =
				      %% Line 192
				      apply 'sign'/1
					  (Sign)
				  in  let <_cor71> =
					  %% Line 192
					  call 'erlang':'bor'
					      (_cor70, _cor69)
				      in  let <_cor68> =
					      %% Line 192
					      apply 'bf'/3
						  (19, 16, Rn)
					  in  let <_cor72> =
						  %% Line 192
						  call 'erlang':'bor'
						      (_cor71, _cor68)
					      in  let <_cor67> =
						      %% Line 192
						      apply 'am2_shift_op'/1
							  (ShiftOp)
						  in  let <_cor73> =
							  %% Line 192
							  call 'erlang':'bor'
							      (_cor72, _cor67)
						      in  let <_cor66> =
							      %% Line 192
							      apply 'bf'/3
								  (3, 0, Rm)
							  in  %% Line 192
							      call 'erlang':'bor'
								  (_cor73, _cor66)
	  ( <_cor74> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor74})
	    -| ['compiler_generated'] )
	end
'am2_shift_op'/1 =
    %% Line 195
    fun (_cor0) ->
	case _cor0 of
	  <{ShiftOp,{'imm5',ShiftImm5}}> when 'true' ->
	      do  %% Line 196
		  case ShiftOp of
		    %% Line 197
		    <'ror'> when 'true' ->
			case <> of
			  <>
			      when call 'erlang':'=/='
				    (ShiftImm5,
				     0) ->
			      []
			  <> when 'true' ->
			      call 'erlang':'exit'
				  ({'assertion_failed','hipe_arm_encode',197,[83|[104|[105|[102|[116|[73|[109|[109|[53|[32|[61|[47|[61|[32|[48]]]]]]]]]]]]]]]})
			end
		    %% Line 198
		    <_cor5> when 'true' ->
			[]
		  end
		  let <_cor3> =
		      %% Line 200
		      apply 'bf'/3
			  (11, 7, ShiftImm5)
		  in  let <_cor2> =
			  %% Line 200
			  apply 'shift_op_bits65'/1
			      (ShiftOp)
		      in  %% Line 200
			  call 'erlang':'bor'
			      (_cor3, _cor2)
	  %% Line 201
	  <'rrx'> when 'true' ->
	      %% Line 202
	      apply 'bf'/3
		  (6, 5, 3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'am2_shift_op',1}}] )
	    -| ['compiler_generated'] )
	end
'am3_miscls'/2 =
    %% Line 204
    fun (_cor1,_cor0) ->
	%% Line 205
	case _cor0 of
	  %% Line 206
	  <{'immediate_offset',{'r',Rn},Sign,{'imm8',Imm8}}> when 'true' ->
	      let <_cor9> =
		  %% Line 207
		  apply 'bf'/3
		      (24, 24, 1)
	      in  let <_cor8> =
		      %% Line 207
		      apply 'sign'/1
			  (Sign)
		  in  let <_cor10> =
			  %% Line 207
			  call 'erlang':'bor'
			      (_cor9, _cor8)
		      in  let <_cor7> =
			      %% Line 207
			      apply 'bf'/3
				  (22, 21, 2)
			  in  let <_cor11> =
				  %% Line 207
				  call 'erlang':'bor'
				      (_cor10, _cor7)
			      in  let <_cor6> =
				      %% Line 207
				      apply 'bf'/3
					  (19, 16, Rn)
				  in  let <_cor12> =
					  %% Line 207
					  call 'erlang':'bor'
					      (_cor11, _cor6)
				      in  let <_cor4> =
					      %% Line 207
					      call 'erlang':'bsr'
						  (Imm8, 4)
					  in  let <_cor5> =
						  %% Line 207
						  apply 'bf'/3
						      (11, 8, _cor4)
					      in  let <_cor13> =
						      %% Line 207
						      call 'erlang':'bor'
							  (_cor12, _cor5)
						  in  let <_cor2> =
							  %% Line 207
							  call 'erlang':'band'
							      (Imm8, 15)
						      in  let <_cor3> =
							      %% Line 207
							      apply 'bf'/3
								  (3, 0, _cor2)
							  in  %% Line 207
							      call 'erlang':'bor'
								  (_cor13, _cor3)
	  %% Line 208
	  <{'register_offset',{'r',Rn},Sign,{'r',Rm}}> when 'true' ->
	      do  %% Line 209
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rm,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',209,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  let <_cor18> =
		      %% Line 210
		      apply 'bf'/3
			  (24, 24, 1)
		  in  let <_cor17> =
			  %% Line 210
			  apply 'sign'/1
			      (Sign)
		      in  let <_cor19> =
			      %% Line 210
			      call 'erlang':'bor'
				  (_cor18, _cor17)
			  in  let <_cor16> =
				  %% Line 210
				  apply 'bf'/3
				      (22, 21, 0)
			      in  let <_cor20> =
				      %% Line 210
				      call 'erlang':'bor'
					  (_cor19, _cor16)
				  in  let <_cor15> =
					  %% Line 210
					  apply 'bf'/3
					      (19, 16, Rn)
				      in  let <_cor21> =
					      %% Line 210
					      call 'erlang':'bor'
						  (_cor20, _cor15)
					  in  let <_cor14> =
						  %% Line 210
						  apply 'bf'/3
						      (3, 0, Rm)
					      in  %% Line 210
						  call 'erlang':'bor'
						      (_cor21, _cor14)
	  %% Line 211
	  <{'immediate_pre_indexed',{'r',Rn},Sign,{'imm8',Imm8}}> when 'true' ->
	      do  %% Line 212
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (_cor1,
			       Rn) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',212,[82|[100|[32|[61|[47|[61|[32|[82|[110]]]]]]]]]})
		  end
		  do  %% Line 213
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rn,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',213,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      let <_cor29> =
			  %% Line 214
			  apply 'bf'/3
			      (24, 24, 1)
		      in  let <_cor28> =
			      %% Line 214
			      apply 'sign'/1
				  (Sign)
			  in  let <_cor30> =
				  %% Line 214
				  call 'erlang':'bor'
				      (_cor29, _cor28)
			      in  let <_cor27> =
				      %% Line 214
				      apply 'bf'/3
					  (22, 21, 3)
				  in  let <_cor31> =
					  %% Line 214
					  call 'erlang':'bor'
					      (_cor30, _cor27)
				      in  let <_cor26> =
					      %% Line 214
					      apply 'bf'/3
						  (19, 16, Rn)
					  in  let <_cor32> =
						  %% Line 214
						  call 'erlang':'bor'
						      (_cor31, _cor26)
					      in  let <_cor24> =
						      %% Line 214
						      call 'erlang':'bsr'
							  (Imm8, 4)
						  in  let <_cor25> =
							  %% Line 214
							  apply 'bf'/3
							      (11, 8, _cor24)
						      in  let <_cor33> =
							      %% Line 214
							      call 'erlang':'bor'
								  (_cor32, _cor25)
							  in  let <_cor22> =
								  %% Line 214
								  call 'erlang':'band'
								      (Imm8, 15)
							      in  let <_cor23> =
								      %% Line 214
								      apply 'bf'/3
									  (3, 0, _cor22)
								  in  %% Line 214
								      call 'erlang':'bor'
									  (_cor33, _cor23)
	  %% Line 215
	  <{'register_pre_indexed',{'r',Rn},Sign,{'r',Rm}}> when 'true' ->
	      do  %% Line 216
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (_cor1,
			       Rn) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',216,[82|[100|[32|[61|[47|[61|[32|[82|[110]]]]]]]]]})
		  end
		  do  %% Line 217
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rm,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',217,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      do  %% Line 218
			  case <> of
			    <>
				when call 'erlang':'=/='
				      (Rn,
				       15) ->
				[]
			    <> when 'true' ->
				call 'erlang':'exit'
				    ({'assertion_failed','hipe_arm_encode',218,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			  end
			  do  %% Line 219
			      case <> of
				<>
				    when call 'erlang':'=/='
					  (Rm,
					   Rn) ->
				    []
				<> when 'true' ->
				    call 'erlang':'exit'
					({'assertion_failed','hipe_arm_encode',219,[82|[109|[32|[61|[47|[61|[32|[82|[110]]]]]]]]]})
			      end
			      let <_cor38> =
				  %% Line 220
				  apply 'bf'/3
				      (24, 24, 1)
			      in  let <_cor37> =
				      %% Line 220
				      apply 'sign'/1
					  (Sign)
				  in  let <_cor39> =
					  %% Line 220
					  call 'erlang':'bor'
					      (_cor38, _cor37)
				      in  let <_cor36> =
					      %% Line 220
					      apply 'bf'/3
						  (22, 21, 1)
					  in  let <_cor40> =
						  %% Line 220
						  call 'erlang':'bor'
						      (_cor39, _cor36)
					      in  let <_cor35> =
						      %% Line 220
						      apply 'bf'/3
							  (19, 16, Rn)
						  in  let <_cor41> =
							  %% Line 220
							  call 'erlang':'bor'
							      (_cor40, _cor35)
						      in  let <_cor34> =
							      %% Line 220
							      apply 'bf'/3
								  (3, 0, Rm)
							  in  %% Line 220
							      call 'erlang':'bor'
								  (_cor41, _cor34)
	  %% Line 221
	  <{'immediate_post_indexed',{'r',Rn},Sign,{'imm8',Imm8}}> when 'true' ->
	      do  %% Line 222
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (_cor1,
			       Rn) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',222,[82|[100|[32|[61|[47|[61|[32|[82|[110]]]]]]]]]})
		  end
		  do  %% Line 223
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rn,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',223,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      let <_cor49> =
			  %% Line 224
			  apply 'bf'/3
			      (24, 24, 0)
		      in  let <_cor48> =
			      %% Line 224
			      apply 'sign'/1
				  (Sign)
			  in  let <_cor50> =
				  %% Line 224
				  call 'erlang':'bor'
				      (_cor49, _cor48)
			      in  let <_cor47> =
				      %% Line 224
				      apply 'bf'/3
					  (22, 21, 2)
				  in  let <_cor51> =
					  %% Line 224
					  call 'erlang':'bor'
					      (_cor50, _cor47)
				      in  let <_cor46> =
					      %% Line 224
					      apply 'bf'/3
						  (19, 16, Rn)
					  in  let <_cor52> =
						  %% Line 224
						  call 'erlang':'bor'
						      (_cor51, _cor46)
					      in  let <_cor44> =
						      %% Line 224
						      call 'erlang':'bsr'
							  (Imm8, 4)
						  in  let <_cor45> =
							  %% Line 224
							  apply 'bf'/3
							      (11, 8, _cor44)
						      in  let <_cor53> =
							      %% Line 224
							      call 'erlang':'bor'
								  (_cor52, _cor45)
							  in  let <_cor42> =
								  %% Line 224
								  call 'erlang':'band'
								      (Imm8, 15)
							      in  let <_cor43> =
								      %% Line 224
								      apply 'bf'/3
									  (3, 0, _cor42)
								  in  %% Line 224
								      call 'erlang':'bor'
									  (_cor53, _cor43)
	  %% Line 225
	  <{'register_post_indexed',{'r',Rn},Sign,{'r',Rm}}> when 'true' ->
	      do  %% Line 226
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (_cor1,
			       Rn) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',226,[82|[100|[32|[61|[47|[61|[32|[82|[110]]]]]]]]]})
		  end
		  do  %% Line 227
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rm,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',227,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      do  %% Line 228
			  case <> of
			    <>
				when call 'erlang':'=/='
				      (Rn,
				       15) ->
				[]
			    <> when 'true' ->
				call 'erlang':'exit'
				    ({'assertion_failed','hipe_arm_encode',228,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			  end
			  do  %% Line 229
			      case <> of
				<>
				    when call 'erlang':'=/='
					  (Rm,
					   Rn) ->
				    []
				<> when 'true' ->
				    call 'erlang':'exit'
					({'assertion_failed','hipe_arm_encode',229,[82|[109|[32|[61|[47|[61|[32|[82|[110]]]]]]]]]})
			      end
			      let <_cor58> =
				  %% Line 230
				  apply 'bf'/3
				      (24, 24, 0)
			      in  let <_cor57> =
				      %% Line 230
				      apply 'sign'/1
					  (Sign)
				  in  let <_cor59> =
					  %% Line 230
					  call 'erlang':'bor'
					      (_cor58, _cor57)
				      in  let <_cor56> =
					      %% Line 230
					      apply 'bf'/3
						  (22, 21, 0)
					  in  let <_cor60> =
						  %% Line 230
						  call 'erlang':'bor'
						      (_cor59, _cor56)
					      in  let <_cor55> =
						      %% Line 230
						      apply 'bf'/3
							  (19, 16, Rn)
						  in  let <_cor61> =
							  %% Line 230
							  call 'erlang':'bor'
							      (_cor60, _cor55)
						      in  let <_cor54> =
							      %% Line 230
							      apply 'bf'/3
								  (3, 0, Rm)
							  in  %% Line 230
							      call 'erlang':'bor'
								  (_cor61, _cor54)
	  ( <_cor62> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor62})
	    -| ['compiler_generated'] )
	end
'am4_ls_multiple'/2 =
    %% Line 233
    fun (_cor1,_cor0) ->
	%% Line 234
	case _cor0 of
	  %% Line 235
	  <'ia'> when 'true' ->
	      apply 'bf'/3
		  (24, 23, 1)
	  %% Line 236
	  <'ib'> when 'true' ->
	      apply 'bf'/3
		  (24, 23, 3)
	  %% Line 237
	  <'da'> when 'true' ->
	      apply 'bf'/3
		  (24, 23, 0)
	  %% Line 238
	  <'db'> when 'true' ->
	      apply 'bf'/3
		  (24, 23, 2)
	  %% Line 239
	  <_cor6> when 'true' ->
	      %% Line 241
	      case <_cor1,_cor0> of
		%% Line 242
		<1,'fa'> when 'true' ->
		    apply 'bf'/3
			(24, 23, 0)
		%% Line 243
		<1,'fd'> when 'true' ->
		    apply 'bf'/3
			(24, 23, 1)
		%% Line 244
		<1,'ea'> when 'true' ->
		    apply 'bf'/3
			(24, 23, 2)
		%% Line 245
		<1,'ed'> when 'true' ->
		    apply 'bf'/3
			(24, 23, 3)
		%% Line 246
		<0,'ed'> when 'true' ->
		    apply 'bf'/3
			(24, 23, 0)
		%% Line 247
		<0,'ea'> when 'true' ->
		    apply 'bf'/3
			(24, 23, 1)
		%% Line 248
		<0,'fd'> when 'true' ->
		    apply 'bf'/3
			(24, 23, 2)
		%% Line 249
		<0,'fa'> when 'true' ->
		    apply 'bf'/3
			(24, 23, 3)
		( <_fol11,_fol12> when 'true' ->
		      let <_cor2> = {_fol11,_fol12}
		      in  primop 'match_fail'
			      ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	end
'am5_ls_coprocessor'/1 =
    %% Line 253
    fun (_cor0) ->
	%% Line 254
	case _cor0 of
	  %% Line 255
	  <{'offset',{'r',Rn},Sign,{'imm8',Imm8}}> when 'true' ->
	      let <_cor4> =
		  %% Line 256
		  apply 'bf'/3
		      (24, 24, 1)
	      in  let <_cor3> =
		      %% Line 256
		      apply 'sign'/1
			  (Sign)
		  in  let <_cor5> =
			  %% Line 256
			  call 'erlang':'bor'
			      (_cor4, _cor3)
		      in  let <_cor2> =
			      %% Line 256
			      apply 'bf'/3
				  (19, 16, Rn)
			  in  let <_cor6> =
				  %% Line 256
				  call 'erlang':'bor'
				      (_cor5, _cor2)
			      in  let <_cor1> =
				      %% Line 256
				      apply 'bf'/3
					  (7, 0, Imm8)
				  in  %% Line 256
				      call 'erlang':'bor'
					  (_cor6, _cor1)
	  %% Line 257
	  <{'pre_indexed',{'r',Rn},Sign,{'imm8',Imm8}}> when 'true' ->
	      do  %% Line 258
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rn,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',258,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  let <_cor11> =
		      %% Line 259
		      apply 'bf'/3
			  (24, 24, 1)
		  in  let <_cor10> =
			  %% Line 259
			  apply 'sign'/1
			      (Sign)
		      in  let <_cor12> =
			      %% Line 259
			      call 'erlang':'bor'
				  (_cor11, _cor10)
			  in  let <_cor9> =
				  %% Line 259
				  apply 'bf'/3
				      (21, 21, 1)
			      in  let <_cor13> =
				      %% Line 259
				      call 'erlang':'bor'
					  (_cor12, _cor9)
				  in  let <_cor8> =
					  %% Line 259
					  apply 'bf'/3
					      (19, 16, Rn)
				      in  let <_cor14> =
					      %% Line 259
					      call 'erlang':'bor'
						  (_cor13, _cor8)
					  in  let <_cor7> =
						  %% Line 259
						  apply 'bf'/3
						      (7, 0, Imm8)
					      in  %% Line 259
						  call 'erlang':'bor'
						      (_cor14, _cor7)
	  %% Line 260
	  <{'post_indexed',{'r',Rn},Sign,{'imm8',Imm8}}> when 'true' ->
	      do  %% Line 261
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rn,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',261,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  let <_cor18> =
		      %% Line 262
		      apply 'sign'/1
			  (Sign)
		  in  let <_cor17> =
			  %% Line 262
			  apply 'bf'/3
			      (21, 21, 1)
		      in  let <_cor19> =
			      %% Line 262
			      call 'erlang':'bor'
				  (_cor18, _cor17)
			  in  let <_cor16> =
				  %% Line 262
				  apply 'bf'/3
				      (19, 16, Rn)
			      in  let <_cor20> =
				      %% Line 262
				      call 'erlang':'bor'
					  (_cor19, _cor16)
				  in  let <_cor15> =
					  %% Line 262
					  apply 'bf'/3
					      (7, 0, Imm8)
				      in  %% Line 262
					  call 'erlang':'bor'
					      (_cor20, _cor15)
	  %% Line 263
	  <{'unindexed',{'r',Rn},{'imm8',Imm8}}> when 'true' ->
	      let <_cor23> =
		  %% Line 264
		  apply 'bf'/3
		      (23, 23, 1)
	      in  let <_cor22> =
		      %% Line 264
		      apply 'bf'/3
			  (19, 16, Rn)
		  in  let <_cor24> =
			  %% Line 264
			  call 'erlang':'bor'
			      (_cor23, _cor22)
		      in  let <_cor21> =
			      %% Line 264
			      apply 'bf'/3
				  (7, 0, Imm8)
			  in  %% Line 264
			      call 'erlang':'bor'
				  (_cor24, _cor21)
	  ( <_cor25> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor25})
	    -| ['compiler_generated'] )
	end
'cond'/1 =
    %% Line 269
    fun (_cor0) ->
	%% Line 270
	case _cor0 of
	  %% Line 271
	  <'eq'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 0)
	  %% Line 272
	  <'ne'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 1)
	  %% Line 273
	  <'cs'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 2)
	  %% Line 274
	  <'hs'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 2)
	  %% Line 275
	  <'cc'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 3)
	  %% Line 276
	  <'lo'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 3)
	  %% Line 277
	  <'mi'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 4)
	  %% Line 278
	  <'pl'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 5)
	  %% Line 279
	  <'vs'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 6)
	  %% Line 280
	  <'vc'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 7)
	  %% Line 281
	  <'hi'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 8)
	  %% Line 282
	  <'ls'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 9)
	  %% Line 283
	  <'ge'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 10)
	  %% Line 284
	  <'lt'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 11)
	  %% Line 285
	  <'gt'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 12)
	  %% Line 286
	  <'le'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 13)
	  %% Line 287
	  <'al'> when 'true' ->
	      apply 'bf'/3
		  (31, 28, 14)
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor1})
	    -| ['compiler_generated'] )
	end
'data_processing_form'/6 =
    %% Line 294
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 295
	    case _cor3 of
	      %% Line 296
	      <1> when 'true' ->
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (_cor1,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',296,[82|[100|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
	      %% Line 297
	      <_cor23> when 'true' ->
		  []
	    end
	    let <_cor12> =
		%% Line 299
		apply 'cond'/1
		    (_cor5)
	    in  let <_cor11> =
		    %% Line 299
		    apply 'bf'/3
			(24, 21, _cor4)
		in  let <_cor13> =
			%% Line 299
			call 'erlang':'bor'
			    (_cor12, _cor11)
		    in  let <_cor10> =
			    %% Line 299
			    apply 'bf'/3
				(20, 20, _cor3)
			in  let <_cor14> =
				%% Line 299
				call 'erlang':'bor'
				    (_cor13, _cor10)
			    in  let <_cor9> =
				    %% Line 299
				    apply 'bf'/3
					(19, 16, _cor2)
				in  let <_cor15> =
					%% Line 299
					call 'erlang':'bor'
					    (_cor14, _cor9)
				    in  let <_cor8> =
					    %% Line 299
					    apply 'bf'/3
						(15, 12, _cor1)
					in  let <_cor16> =
						%% Line 299
						call 'erlang':'bor'
						    (_cor15, _cor8)
					    in  let <_cor7> =
						    %% Line 299
						    apply 'am1_shifter_operand'/3
							(_cor2, _cor1, _cor0)
						in  %% Line 299
						    call 'erlang':'bor'
							(_cor16, _cor7)
'data_processing_form'/2 =
    %% Line 301
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <OpCode,{{'cond',Cond},{'s',S},{'r',Rd},{'r',Rn},ShifterOperand}> when 'true' ->
	      %% Line 302
	      apply 'data_processing_form'/6
		  (Cond, OpCode, S, Rn, Rd, ShifterOperand)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'data_processing_form',2}}] )
	    -| ['compiler_generated'] )
	end
'adc'/1 =
    %% Line 304
    fun (_cor0) ->
	apply 'data_processing_form'/2
	    (5, _cor0)
'add'/1 =
    %% Line 305
    fun (_cor0) ->
	apply 'data_processing_form'/2
	    (4, _cor0)
'and'/1 =
    %% Line 306
    fun (_cor0) ->
	apply 'data_processing_form'/2
	    (0, _cor0)
'bic'/1 =
    %% Line 307
    fun (_cor0) ->
	apply 'data_processing_form'/2
	    (14, _cor0)
'eor'/1 =
    %% Line 308
    fun (_cor0) ->
	apply 'data_processing_form'/2
	    (1, _cor0)
'orr'/1 =
    %% Line 309
    fun (_cor0) ->
	apply 'data_processing_form'/2
	    (12, _cor0)
'rsb'/1 =
    %% Line 310
    fun (_cor0) ->
	apply 'data_processing_form'/2
	    (3, _cor0)
'rsc'/1 =
    %% Line 311
    fun (_cor0) ->
	apply 'data_processing_form'/2
	    (7, _cor0)
'sbc'/1 =
    %% Line 312
    fun (_cor0) ->
	apply 'data_processing_form'/2
	    (6, _cor0)
'sub'/1 =
    %% Line 313
    fun (_cor0) ->
	apply 'data_processing_form'/2
	    (2, _cor0)
'cmp_form'/2 =
    %% Line 315
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <OpCode,{{'cond',Cond},{'r',Rn},ShifterOperand}> when 'true' ->
	      %% Line 316
	      apply 'data_processing_form'/6
		  (Cond, OpCode, 1, Rn, 0, ShifterOperand)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'cmp_form',2}}] )
	    -| ['compiler_generated'] )
	end
'cmn'/1 =
    %% Line 318
    fun (_cor0) ->
	apply 'cmp_form'/2
	    (11, _cor0)
'cmp'/1 =
    %% Line 319
    fun (_cor0) ->
	apply 'cmp_form'/2
	    (10, _cor0)
'teq'/1 =
    %% Line 320
    fun (_cor0) ->
	apply 'cmp_form'/2
	    (9, _cor0)
'tst'/1 =
    %% Line 321
    fun (_cor0) ->
	apply 'cmp_form'/2
	    (8, _cor0)
'mov_form'/2 =
    %% Line 323
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <OpCode,{{'cond',Cond},{'s',S},{'r',Rd},ShifterOperand}> when 'true' ->
	      %% Line 324
	      apply 'data_processing_form'/6
		  (Cond, OpCode, S, 0, Rd, ShifterOperand)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'mov_form',2}}] )
	    -| ['compiler_generated'] )
	end
'mov'/1 =
    %% Line 326
    fun (_cor0) ->
	apply 'mov_form'/2
	    (13, _cor0)
'mvn'/1 =
    %% Line 327
    fun (_cor0) ->
	apply 'mov_form'/2
	    (15, _cor0)
'b_form'/2 =
    %% Line 331
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <L,{{'cond',Cond},{'imm24',Imm24}}> when 'true' ->
	      let <_cor5> =
		  %% Line 332
		  apply 'cond'/1
		      (Cond)
	      in  let <_cor4> =
		      %% Line 332
		      apply 'bf'/3
			  (27, 25, 5)
		  in  let <_cor6> =
			  %% Line 332
			  call 'erlang':'bor'
			      (_cor5, _cor4)
		      in  let <_cor3> =
			      %% Line 332
			      apply 'bf'/3
				  (24, 24, L)
			  in  let <_cor7> =
				  %% Line 332
				  call 'erlang':'bor'
				      (_cor6, _cor3)
			      in  let <_cor2> =
				      %% Line 332
				      apply 'bf'/3
					  (23, 0, Imm24)
				  in  %% Line 332
				      call 'erlang':'bor'
					  (_cor7, _cor2)
	  ( <_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8})
		  -| [{'function_name',{'b_form',2}}] )
	    -| ['compiler_generated'] )
	end
'b'/1 =
    %% Line 334
    fun (_cor0) ->
	apply 'b_form'/2
	    (0, _cor0)
'bl'/1 =
    %% Line 335
    fun (_cor0) ->
	apply 'b_form'/2
	    (1, _cor0)
'bkpt'/1 =
    %% Line 337
    fun (_cor0) ->
	case _cor0 of
	  <{{'imm16',Imm16}}> when 'true' ->
	      let <_cor7> =
		  %% Line 338
		  apply 'bf'/3
		      (31, 28, 14)
	      in  let <_cor6> =
		      %% Line 338
		      apply 'bf'/3
			  (27, 20, 18)
		  in  let <_cor8> =
			  %% Line 338
			  call 'erlang':'bor'
			      (_cor7, _cor6)
		      in  let <_cor4> =
			      %% Line 338
			      call 'erlang':'bsr'
				  (Imm16, 4)
			  in  let <_cor5> =
				  %% Line 338
				  apply 'bf'/3
				      (19, 8, _cor4)
			      in  let <_cor9> =
				      %% Line 338
				      call 'erlang':'bor'
					  (_cor8, _cor5)
				  in  let <_cor3> =
					  %% Line 338
					  apply 'bf'/3
					      (7, 4, 7)
				      in  let <_cor10> =
					      %% Line 338
					      call 'erlang':'bor'
						  (_cor9, _cor3)
					  in  let <_cor1> =
						  %% Line 338
						  call 'erlang':'band'
						      (Imm16, 15)
					      in  let <_cor2> =
						      %% Line 338
						      apply 'bf'/3
							  (3, 0, _cor1)
						  in  %% Line 338
						      call 'erlang':'bor'
							  (_cor10, _cor2)
	  ( <_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11})
		  -| [{'function_name',{'bkpt',1}}] )
	    -| ['compiler_generated'] )
	end
'bx_form'/3 =
    %% Line 340
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <SubOpcode,{{'cond',Cond},{'r',Rm}},IsBlx> when 'true' ->
	      do  %% Line 341
		  case IsBlx of
		    %% Line 342
		    <'true'> when 'true' ->
			case <> of
			  <>
			      when call 'erlang':'=/='
				    (Rm,
				     15) ->
			      []
			  <> when 'true' ->
			      call 'erlang':'exit'
				  ({'assertion_failed','hipe_arm_encode',342,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			end
		    %% Line 343
		    <_cor19> when 'true' ->
			[]
		  end
		  let <_cor10> =
		      %% Line 345
		      apply 'cond'/1
			  (Cond)
		  in  let <_cor9> =
			  %% Line 345
			  apply 'bf'/3
			      (27, 20, 18)
		      in  let <_cor11> =
			      %% Line 345
			      call 'erlang':'bor'
				  (_cor10, _cor9)
			  in  let <_cor8> =
				  %% Line 345
				  apply 'bf'/3
				      (19, 16, 15)
			      in  let <_cor12> =
				      %% Line 345
				      call 'erlang':'bor'
					  (_cor11, _cor8)
				  in  let <_cor7> =
					  %% Line 345
					  apply 'bf'/3
					      (15, 12, 15)
				      in  let <_cor13> =
					      %% Line 345
					      call 'erlang':'bor'
						  (_cor12, _cor7)
					  in  let <_cor6> =
						  %% Line 345
						  apply 'bf'/3
						      (11, 8, 15)
					      in  let <_cor14> =
						      %% Line 345
						      call 'erlang':'bor'
							  (_cor13, _cor6)
						  in  let <_cor5> =
							  %% Line 345
							  apply 'bf'/3
							      (7, 4, SubOpcode)
						      in  let <_cor15> =
							      %% Line 345
							      call 'erlang':'bor'
								  (_cor14, _cor5)
							  in  let <_cor4> =
								  %% Line 345
								  apply 'bf'/3
								      (3, 0, Rm)
							      in  %% Line 345
								  call 'erlang':'bor'
								      (_cor15, _cor4)
	  ( <_cor18,_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17,_cor16})
		  -| [{'function_name',{'bx_form',3}}] )
	    -| ['compiler_generated'] )
	end
'blx'/1 =
    %% Line 347
    fun (_cor0) ->
	%% Line 348
	case _cor0 of
	  %% Line 349
	  <{{'imm25',Imm25}}> when 'true' ->
	      let <_cor6> =
		  %% Line 350
		  apply 'bf'/3
		      (31, 28, 15)
	      in  let <_cor5> =
		      %% Line 350
		      apply 'bf'/3
			  (27, 25, 5)
		  in  let <_cor7> =
			  %% Line 350
			  call 'erlang':'bor'
			      (_cor6, _cor5)
		      in  let <_cor3> =
			      %% Line 350
			      call 'erlang':'band'
				  (Imm25, 1)
			  in  let <_cor4> =
				  %% Line 350
				  apply 'bf'/3
				      (24, 24, _cor3)
			      in  let <_cor8> =
				      %% Line 350
				      call 'erlang':'bor'
					  (_cor7, _cor4)
				  in  let <_cor1> =
					  %% Line 350
					  call 'erlang':'bsr'
					      (Imm25, 1)
				      in  let <_cor2> =
					      %% Line 350
					      apply 'bf'/3
						  (23, 0, _cor1)
					  in  %% Line 350
					      call 'erlang':'bor'
						  (_cor8, _cor2)
	  %% Line 351
	  <_cor11> when 'true' ->
	      %% Line 352
	      apply 'bx_form'/3
		  (3, _cor0, 'true')
	end
'bx'/1 =
    %% Line 355
    fun (_cor0) ->
	apply 'bx_form'/3
	    (1, _cor0, 'false')
'cdp_form'/7 =
    %% Line 357
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor13> =
	    %% Line 358
	    apply 'bf'/3
		(27, 24, 14)
	in  let <_cor14> =
		%% Line 358
		call 'erlang':'bor'
		    (_cor6, _cor13)
	    in  let <_cor12> =
		    %% Line 358
		    apply 'bf'/3
			(23, 20, _cor5)
		in  let <_cor15> =
			%% Line 358
			call 'erlang':'bor'
			    (_cor14, _cor12)
		    in  let <_cor11> =
			    %% Line 358
			    apply 'bf'/3
				(19, 16, _cor4)
			in  let <_cor16> =
				%% Line 358
				call 'erlang':'bor'
				    (_cor15, _cor11)
			    in  let <_cor10> =
				    %% Line 358
				    apply 'bf'/3
					(15, 12, _cor3)
				in  let <_cor17> =
					%% Line 358
					call 'erlang':'bor'
					    (_cor16, _cor10)
				    in  let <_cor9> =
					    %% Line 358
					    apply 'bf'/3
						(11, 8, _cor2)
					in  let <_cor18> =
						%% Line 358
						call 'erlang':'bor'
						    (_cor17, _cor9)
					    in  let <_cor8> =
						    %% Line 358
						    apply 'bf'/3
							(7, 5, _cor1)
						in  let <_cor19> =
							%% Line 358
							call 'erlang':'bor'
							    (_cor18, _cor8)
						    in  let <_cor7> =
							    %% Line 358
							    apply 'bf'/3
								(3, 0, _cor0)
							in  %% Line 358
							    call 'erlang':'bor'
								(_cor19, _cor7)
'cdp'/1 =
    %% Line 360
    fun (_cor0) ->
	case _cor0 of
	  <{{'cond',Cond},{'cpnum',CpNum},{'cpop4',CpOp4},{'cr',CRd},{'cr',CRn},{'cr',CRm},{'cpop3',CpOp3}}> when 'true' ->
	      let <_cor1> =
		  %% Line 361
		  apply 'cond'/1
		      (Cond)
	      in  %% Line 361
		  apply 'cdp_form'/7
		      (_cor1, CpOp4, CRn, CRd, CpNum, CpOp3, CRm)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'cdp',1}}] )
	    -| ['compiler_generated'] )
	end
'cdp2'/1 =
    %% Line 363
    fun (_cor0) ->
	case _cor0 of
	  <{{'cpnum',CpNum},{'cpop4',CpOp4},{'cr',CRd},{'cr',CRn},{'cr',CRm},{'cpop3',CpOp3}}> when 'true' ->
	      let <_cor1> =
		  %% Line 364
		  apply 'bf'/3
		      (31, 28, 15)
	      in  %% Line 364
		  apply 'cdp_form'/7
		      (_cor1, CpOp4, CRn, CRd, CpNum, CpOp3, CRm)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'cdp2',1}}] )
	    -| ['compiler_generated'] )
	end
'clz'/1 =
    %% Line 366
    fun (_cor0) ->
	case _cor0 of
	  <{{'cond',Cond},{'r',Rd},{'r',Rm}}> when 'true' ->
	      do  %% Line 367
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rd,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',367,[82|[100|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  do  %% Line 368
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rm,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',368,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      let <_cor7> =
			  %% Line 369
			  apply 'cond'/1
			      (Cond)
		      in  let <_cor6> =
			      %% Line 369
			      apply 'bf'/3
				  (27, 20, 22)
			  in  let <_cor8> =
				  %% Line 369
				  call 'erlang':'bor'
				      (_cor7, _cor6)
			      in  let <_cor5> =
				      %% Line 369
				      apply 'bf'/3
					  (19, 16, 15)
				  in  let <_cor9> =
					  %% Line 369
					  call 'erlang':'bor'
					      (_cor8, _cor5)
				      in  let <_cor4> =
					      %% Line 369
					      apply 'bf'/3
						  (15, 12, Rd)
					  in  let <_cor10> =
						  %% Line 369
						  call 'erlang':'bor'
						      (_cor9, _cor4)
					      in  let <_cor3> =
						      %% Line 369
						      apply 'bf'/3
							  (11, 8, 15)
						  in  let <_cor11> =
							  %% Line 369
							  call 'erlang':'bor'
							      (_cor10, _cor3)
						      in  let <_cor2> =
							      %% Line 369
							      apply 'bf'/3
								  (7, 4, 1)
							  in  let <_cor12> =
								  %% Line 369
								  call 'erlang':'bor'
								      (_cor11, _cor2)
							      in  let <_cor1> =
								      %% Line 369
								      apply 'bf'/3
									  (3, 0, Rm)
								  in  %% Line 369
								      call 'erlang':'bor'
									  (_cor12, _cor1)
	  ( <_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13})
		  -| [{'function_name',{'clz',1}}] )
	    -| ['compiler_generated'] )
	end
'ldstc_form'/6 =
    %% Line 371
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor11> =
	    %% Line 372
	    apply 'bf'/3
		(27, 25, 6)
	in  let <_cor12> =
		%% Line 372
		call 'erlang':'bor'
		    (_cor5, _cor11)
	    in  let <_cor10> =
		    %% Line 372
		    apply 'bf'/3
			(22, 22, _cor4)
		in  let <_cor13> =
			%% Line 372
			call 'erlang':'bor'
			    (_cor12, _cor10)
		    in  let <_cor9> =
			    %% Line 372
			    apply 'bf'/3
				(20, 20, _cor3)
			in  let <_cor14> =
				%% Line 372
				call 'erlang':'bor'
				    (_cor13, _cor9)
			    in  let <_cor8> =
				    %% Line 372
				    apply 'bf'/3
					(15, 12, _cor2)
				in  let <_cor15> =
					%% Line 372
					call 'erlang':'bor'
					    (_cor14, _cor8)
				    in  let <_cor7> =
					    %% Line 372
					    apply 'bf'/3
						(11, 8, _cor1)
					in  let <_cor16> =
						%% Line 372
						call 'erlang':'bor'
						    (_cor15, _cor7)
					    in  let <_cor6> =
						    %% Line 372
						    apply 'am5_ls_coprocessor'/1
							(_cor0)
						in  %% Line 372
						    call 'erlang':'bor'
							(_cor16, _cor6)
'ldstc'/2 =
    %% Line 374
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <B20,{{'cond',Cond},{'l',L},{'cpnum',CpNum},{'cr',CRd},AddressingMode}> when 'true' ->
	      let <_cor2> =
		  %% Line 375
		  apply 'cond'/1
		      (Cond)
	      in  %% Line 375
		  apply 'ldstc_form'/6
		      (_cor2, L, B20, CRd, CpNum, AddressingMode)
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'ldstc',2}}] )
	    -| ['compiler_generated'] )
	end
'ldc'/1 =
    %% Line 377
    fun (_cor0) ->
	apply 'ldstc'/2
	    (1, _cor0)
'stc'/1 =
    %% Line 378
    fun (_cor0) ->
	apply 'ldstc'/2
	    (0, _cor0)
'ldstc2'/2 =
    %% Line 380
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <B20,{{'l',L},{'cpnum',CpNum},{'cr',CRd},AddressingMode}> when 'true' ->
	      let <_cor2> =
		  %% Line 381
		  apply 'bf'/3
		      (31, 28, 15)
	      in  %% Line 381
		  apply 'ldstc_form'/6
		      (_cor2, L, B20, CRd, CpNum, AddressingMode)
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'ldstc2',2}}] )
	    -| ['compiler_generated'] )
	end
'ldc2'/1 =
    %% Line 383
    fun (_cor0) ->
	apply 'ldstc2'/2
	    (1, _cor0)
'stc2'/1 =
    %% Line 384
    fun (_cor0) ->
	apply 'ldstc2'/2
	    (0, _cor0)
'ldstm_form'/6 =
    %% Line 386
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <RegisterList> =
	    %% Line 387
	    apply 'register_list'/1
		(_cor0)
	in  do  %% Line 388
		case <> of
		  <>
		      when call 'erlang':'=/='
			    (RegisterList,
			     0) ->
		      []
		  <> when 'true' ->
		      call 'erlang':'exit'
			  ({'assertion_failed','hipe_arm_encode',388,[82|[101|[103|[105|[115|[116|[101|[114|[76|[105|[115|[116|[32|[61|[47|[61|[32|[48]]]]]]]]]]]]]]]]]]})
		end
		do  %% Line 389
		    case <> of
		      <>
			  when call 'erlang':'=/='
				(_cor1,
				 15) ->
			  []
		      <> when 'true' ->
			  call 'erlang':'exit'
			      ({'assertion_failed','hipe_arm_encode',389,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		    end
		    do  %% Line 390
			case _cor3 of
			  %% Line 391
			  <1> when 'true' ->
			      let <BitRn> =
				  %% Line 392
				  call 'erlang':'bsl'
				      (1, _cor1)
			      in  %% Line 393
				  case _cor2 of
				    %% Line 394
				    <1> when 'true' ->
					%% Line 396
					case <> of
					  <>
					      when try
						    let <_cor8> =
							call 'erlang':'band'
							    (RegisterList, BitRn)
						    in  call 'erlang':'=:='
							    (_cor8, 0)
						of <Try> ->
						    Try
						catch <T,R> ->
						    'false' ->
					      []
					  <> when 'true' ->
					      call 'erlang':'exit'
						  ({'assertion_failed','hipe_arm_encode',396,[40|[32|[82|[101|[103|[105|[115|[116|[101|[114|[76|[105|[115|[116|[32|[98|[97|[110|[100|[32|[66|[105|[116|[82|[110|[32|[41|[32|[61|[58|[61|[32|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]})
					end
				    %% Line 397
				    <0> when 'true' ->
					%% Line 399
					case call 'erlang':'band'
						 (RegisterList, BitRn) of
					  %% Line 400
					  <0> when 'true' ->
					      []
					  %% Line 401
					  <_cor32> when 'true' ->
					      %% Line 402
					      case <> of
						<>
						    when try
							  let <_cor9> =
							      call 'erlang':'-'
								  (RegisterList)
							  in  let <_cor10> =
								  call 'erlang':'band'
								      (RegisterList, _cor9)
							      in  call 'erlang':'=:='
								      (_cor10, BitRn)
						      of <Try> ->
							  Try
						      catch <T,R> ->
							  'false' ->
						    []
						<> when 'true' ->
						    call 'erlang':'exit'
							({'assertion_failed','hipe_arm_encode',402,[40|[32|[82|[101|[103|[105|[115|[116|[101|[114|[76|[105|[115|[116|[32|[98|[97|[110|[100|[32|[40|[32|[45|[32|[82|[101|[103|[105|[115|[116|[101|[114|[76|[105|[115|[116|[32|[41|[32|[41|[32|[61|[58|[61|[32|[66|[105|[116|[82|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]})
					      end
					end
				    ( <_cor12> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor12})
				      -| ['compiler_generated'] )
				  end
			  %% Line 405
			  <_cor33> when 'true' ->
			      []
			end
			let <_cor20> =
			    %% Line 407
			    apply 'cond'/1
				(_cor5)
			in  let <_cor19> =
				%% Line 407
				apply 'bf'/3
				    (27, 25, 4)
			    in  let <_cor21> =
				    %% Line 407
				    call 'erlang':'bor'
					(_cor20, _cor19)
				in  let <_cor18> =
					%% Line 407
					apply 'am4_ls_multiple'/2
					    (_cor2, _cor4)
				    in  let <_cor22> =
					    %% Line 407
					    call 'erlang':'bor'
						(_cor21, _cor18)
					in  let <_cor17> =
						%% Line 407
						apply 'bf'/3
						    (21, 21, _cor3)
					    in  let <_cor23> =
						    %% Line 407
						    call 'erlang':'bor'
							(_cor22, _cor17)
						in  let <_cor16> =
							%% Line 407
							apply 'bf'/3
							    (20, 20, _cor2)
						    in  let <_cor24> =
							    %% Line 407
							    call 'erlang':'bor'
								(_cor23, _cor16)
							in  let <_cor15> =
								%% Line 407
								apply 'bf'/3
								    (19, 16, _cor1)
							    in  let <_cor25> =
								    %% Line 407
								    call 'erlang':'bor'
									(_cor24, _cor15)
								in  let <_cor14> =
									%% Line 407
									apply 'bf'/3
									    (15, 0, RegisterList)
								    in  %% Line 407
									call 'erlang':'bor'
									    (_cor25, _cor14)
'register_list'/1 =
    %% Line 409
    fun (_cor0) ->
	apply 'register_list'/2
	    (_cor0, 0)
'register_list'/2 =
    %% Line 411
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'r',R}|Rs],Mask> when 'true' ->
	      let <_cor2> =
		  call 'erlang':'bsl'
		      (1, R)
	      in  let <_cor3> =
		      call 'erlang':'bor'
			  (Mask, _cor2)
		  in  apply 'register_list'/2
			  (Rs, _cor3)
	  %% Line 412
	  <[],Mask> when 'true' ->
	      Mask
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'register_list',2}}] )
	    -| ['compiler_generated'] )
	end
'ldstm'/2 =
    %% Line 414
    fun (_cor1,_cor0) ->
	%% Line 415
	case _cor0 of
	  %% Line 416
	  <{{'cond',Cond},AddressingMode,{'r',Rn},'!',Registers}> when 'true' ->
	      %% Line 417
	      apply 'ldstm_form'/6
		  (Cond, AddressingMode, 1, _cor1, Rn, Registers)
	  %% Line 418
	  <{{'cond',Cond},AddressingMode,{'r',Rn},Registers}> when 'true' ->
	      %% Line 419
	      apply 'ldstm_form'/6
		  (Cond, AddressingMode, 0, _cor1, Rn, Registers)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor2})
	    -| ['compiler_generated'] )
	end
'ldm'/1 =
    %% Line 424
    fun (_cor0) ->
	apply 'ldstm'/2
	    (1, _cor0)
'stm'/1 =
    %% Line 425
    fun (_cor0) ->
	apply 'ldstm'/2
	    (0, _cor0)
'ldstr_form2'/3 =
    %% Line 427
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <B,L,{{'cond',Cond},{'r',Rd},AddressingMode}> when 'true' ->
	      let <_cor8> =
		  %% Line 428
		  apply 'cond'/1
		      (Cond)
	      in  let <_cor7> =
		      %% Line 428
		      apply 'bf'/3
			  (27, 26, 1)
		  in  let <_cor9> =
			  %% Line 428
			  call 'erlang':'bor'
			      (_cor8, _cor7)
		      in  let <_cor6> =
			      %% Line 428
			      apply 'am2_lswub'/2
				  (Rd, AddressingMode)
			  in  let <_cor10> =
				  %% Line 428
				  call 'erlang':'bor'
				      (_cor9, _cor6)
			      in  let <_cor5> =
				      %% Line 428
				      apply 'bf'/3
					  (22, 22, B)
				  in  let <_cor11> =
					  %% Line 428
					  call 'erlang':'bor'
					      (_cor10, _cor5)
				      in  let <_cor4> =
					      %% Line 428
					      apply 'bf'/3
						  (20, 20, L)
					  in  let <_cor12> =
						  %% Line 428
						  call 'erlang':'bor'
						      (_cor11, _cor4)
					      in  let <_cor3> =
						      %% Line 428
						      apply 'bf'/3
							  (15, 12, Rd)
						  in  %% Line 428
						      call 'erlang':'bor'
							  (_cor12, _cor3)
	  ( <_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13})
		  -| [{'function_name',{'ldstr_form2',3}}] )
	    -| ['compiler_generated'] )
	end
'ldr'/1 =
    %% Line 430
    fun (_cor0) ->
	apply 'ldstr_form2'/3
	    (0, 1, _cor0)
'ldrb'/1 =
    %% Line 431
    fun (_cor0) ->
	apply 'ldstr_form2'/3
	    (1, 1, _cor0)
'str'/1 =
    %% Line 432
    fun (_cor0) ->
	apply 'ldstr_form2'/3
	    (0, 0, _cor0)
'strb'/1 =
    %% Line 433
    fun (_cor0) ->
	apply 'ldstr_form2'/3
	    (1, 0, _cor0)
'ldstr_form3'/3 =
    %% Line 435
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <L,SubOpcode,{{'cond',Cond},{'r',Rd},AddressingMode}> when 'true' ->
	      do  %% Line 436
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rd,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',436,[82|[100|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  let <_cor7> =
		      %% Line 437
		      apply 'cond'/1
			  (Cond)
		  in  let <_cor6> =
			  %% Line 437
			  apply 'am3_miscls'/2
			      (Rd, AddressingMode)
		      in  let <_cor8> =
			      %% Line 437
			      call 'erlang':'bor'
				  (_cor7, _cor6)
			  in  let <_cor5> =
				  %% Line 437
				  apply 'bf'/3
				      (20, 20, L)
			      in  let <_cor9> =
				      %% Line 437
				      call 'erlang':'bor'
					  (_cor8, _cor5)
				  in  let <_cor4> =
					  %% Line 437
					  apply 'bf'/3
					      (15, 12, Rd)
				      in  let <_cor10> =
					      %% Line 437
					      call 'erlang':'bor'
						  (_cor9, _cor4)
					  in  let <_cor3> =
						  %% Line 437
						  apply 'bf'/3
						      (7, 4, SubOpcode)
					      in  %% Line 437
						  call 'erlang':'bor'
						      (_cor10, _cor3)
	  ( <_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11})
		  -| [{'function_name',{'ldstr_form3',3}}] )
	    -| ['compiler_generated'] )
	end
'ldrh'/1 =
    %% Line 439
    fun (_cor0) ->
	apply 'ldstr_form3'/3
	    (1, 11, _cor0)
'ldrsb'/1 =
    %% Line 440
    fun (_cor0) ->
	apply 'ldstr_form3'/3
	    (1, 13, _cor0)
'ldrsh'/1 =
    %% Line 441
    fun (_cor0) ->
	apply 'ldstr_form3'/3
	    (1, 15, _cor0)
'strh'/1 =
    %% Line 442
    fun (_cor0) ->
	apply 'ldstr_form3'/3
	    (0, 11, _cor0)
'mcr_form'/7 =
    %% Line 444
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 445
	    case <> of
	      <>
		  when call 'erlang':'=/='
			(_cor3,
			 15) ->
		  []
	      <> when 'true' ->
		  call 'erlang':'exit'
		      ({'assertion_failed','hipe_arm_encode',445,[82|[100|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
	    end
	    let <_cor14> =
		%% Line 446
		apply 'bf'/3
		    (27, 24, 14)
	    in  let <_cor15> =
		    %% Line 446
		    call 'erlang':'bor'
			(_cor6, _cor14)
		in  let <_cor13> =
			%% Line 446
			apply 'bf'/3
			    (23, 21, _cor5)
		    in  let <_cor16> =
			    %% Line 446
			    call 'erlang':'bor'
				(_cor15, _cor13)
			in  let <_cor12> =
				%% Line 446
				apply 'bf'/3
				    (19, 16, _cor4)
			    in  let <_cor17> =
				    %% Line 446
				    call 'erlang':'bor'
					(_cor16, _cor12)
				in  let <_cor11> =
					%% Line 446
					apply 'bf'/3
					    (15, 12, _cor3)
				    in  let <_cor18> =
					    %% Line 446
					    call 'erlang':'bor'
						(_cor17, _cor11)
					in  let <_cor10> =
						%% Line 446
						apply 'bf'/3
						    (11, 8, _cor2)
					    in  let <_cor19> =
						    %% Line 446
						    call 'erlang':'bor'
							(_cor18, _cor10)
						in  let <_cor9> =
							%% Line 446
							apply 'bf'/3
							    (7, 5, _cor1)
						    in  let <_cor20> =
							    %% Line 446
							    call 'erlang':'bor'
								(_cor19, _cor9)
							in  let <_cor8> =
								%% Line 446
								apply 'bf'/3
								    (4, 4, 1)
							    in  let <_cor21> =
								    %% Line 446
								    call 'erlang':'bor'
									(_cor20, _cor8)
								in  let <_cor7> =
									%% Line 446
									apply 'bf'/3
									    (3, 0, _cor0)
								    in  %% Line 446
									call 'erlang':'bor'
									    (_cor21, _cor7)
'mcr'/1 =
    %% Line 448
    fun (_cor0) ->
	case _cor0 of
	  <{{'cond',Cond},{'cpnum',CpNum},{'cpop3',OP1},{'r',Rd},{'cr',CRn},{'cr',CRm},{'cpop3',OP2}}> when 'true' ->
	      let <_cor1> =
		  %% Line 449
		  apply 'cond'/1
		      (Cond)
	      in  %% Line 449
		  apply 'mcr_form'/7
		      (_cor1, OP1, CRn, Rd, CpNum, OP2, CRm)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'mcr',1}}] )
	    -| ['compiler_generated'] )
	end
'mcr2'/1 =
    %% Line 451
    fun (_cor0) ->
	case _cor0 of
	  <{{'cpnum',CpNum},{'cpop3',OP1},{'r',Rd},{'cr',CRn},{'cr',CRm},{'cpop3',OP2}}> when 'true' ->
	      let <_cor1> =
		  %% Line 452
		  apply 'bf'/3
		      (31, 28, 15)
	      in  %% Line 452
		  apply 'mcr_form'/7
		      (_cor1, OP1, CRn, Rd, CpNum, OP2, CRm)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'mcr2',1}}] )
	    -| ['compiler_generated'] )
	end
'mla'/1 =
    %% Line 454
    fun (_cor0) ->
	case _cor0 of
	  <{{'cond',Cond},{'s',S},{'r',Rd},{'r',Rm},{'r',Rs},{'r',Rn}}> when 'true' ->
	      do  %% Line 455
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rd,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',455,[82|[100|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  do  %% Line 456
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rm,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',456,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      do  %% Line 457
			  case <> of
			    <>
				when call 'erlang':'=/='
				      (Rs,
				       15) ->
				[]
			    <> when 'true' ->
				call 'erlang':'exit'
				    ({'assertion_failed','hipe_arm_encode',457,[82|[115|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			  end
			  do  %% Line 458
			      case <> of
				<>
				    when call 'erlang':'=/='
					  (Rn,
					   15) ->
				    []
				<> when 'true' ->
				    call 'erlang':'exit'
					({'assertion_failed','hipe_arm_encode',458,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			      end
			      do  %% Line 459
				  case <> of
				    <>
					when call 'erlang':'=/='
					      (Rd,
					       Rm) ->
					[]
				    <> when 'true' ->
					call 'erlang':'exit'
					    ({'assertion_failed','hipe_arm_encode',459,[82|[100|[32|[61|[47|[61|[32|[82|[109]]]]]]]]]})
				  end
				  let <_cor8> =
				      %% Line 460
				      apply 'cond'/1
					  (Cond)
				  in  let <_cor7> =
					  %% Line 460
					  apply 'bf'/3
					      (21, 21, 1)
				      in  let <_cor9> =
					      %% Line 460
					      call 'erlang':'bor'
						  (_cor8, _cor7)
					  in  let <_cor6> =
						  %% Line 460
						  apply 'bf'/3
						      (20, 20, S)
					      in  let <_cor10> =
						      %% Line 460
						      call 'erlang':'bor'
							  (_cor9, _cor6)
						  in  let <_cor5> =
							  %% Line 460
							  apply 'bf'/3
							      (19, 16, Rd)
						      in  let <_cor11> =
							      %% Line 460
							      call 'erlang':'bor'
								  (_cor10, _cor5)
							  in  let <_cor4> =
								  %% Line 460
								  apply 'bf'/3
								      (15, 12, Rn)
							      in  let <_cor12> =
								      %% Line 460
								      call 'erlang':'bor'
									  (_cor11, _cor4)
								  in  let <_cor3> =
									  %% Line 460
									  apply 'bf'/3
									      (11, 8, Rs)
								      in  let <_cor13> =
									      %% Line 460
									      call 'erlang':'bor'
										  (_cor12, _cor3)
									  in  let <_cor2> =
										  %% Line 460
										  apply 'bf'/3
										      (7, 4, 9)
									      in  let <_cor14> =
										      %% Line 460
										      call 'erlang':'bor'
											  (_cor13, _cor2)
										  in  let <_cor1> =
											  %% Line 460
											  apply 'bf'/3
											      (3, 0, Rm)
										      in  %% Line 460
											  call 'erlang':'bor'
											      (_cor14, _cor1)
	  ( <_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15})
		  -| [{'function_name',{'mla',1}}] )
	    -| ['compiler_generated'] )
	end
'mrc_form'/7 =
    %% Line 462
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor15> =
	    %% Line 463
	    apply 'bf'/3
		(27, 24, 14)
	in  let <_cor16> =
		%% Line 463
		call 'erlang':'bor'
		    (_cor6, _cor15)
	    in  let <_cor14> =
		    %% Line 463
		    apply 'bf'/3
			(23, 21, _cor5)
		in  let <_cor17> =
			%% Line 463
			call 'erlang':'bor'
			    (_cor16, _cor14)
		    in  let <_cor13> =
			    %% Line 463
			    apply 'bf'/3
				(20, 20, 1)
			in  let <_cor18> =
				%% Line 463
				call 'erlang':'bor'
				    (_cor17, _cor13)
			    in  let <_cor12> =
				    %% Line 463
				    apply 'bf'/3
					(19, 16, _cor4)
				in  let <_cor19> =
					%% Line 463
					call 'erlang':'bor'
					    (_cor18, _cor12)
				    in  let <_cor11> =
					    %% Line 463
					    apply 'bf'/3
						(15, 12, _cor3)
					in  let <_cor20> =
						%% Line 463
						call 'erlang':'bor'
						    (_cor19, _cor11)
					    in  let <_cor10> =
						    %% Line 463
						    apply 'bf'/3
							(11, 8, _cor2)
						in  let <_cor21> =
							%% Line 463
							call 'erlang':'bor'
							    (_cor20, _cor10)
						    in  let <_cor9> =
							    %% Line 463
							    apply 'bf'/3
								(7, 5, _cor1)
							in  let <_cor22> =
								%% Line 463
								call 'erlang':'bor'
								    (_cor21, _cor9)
							    in  let <_cor8> =
								    %% Line 463
								    apply 'bf'/3
									(4, 4, 1)
								in  let <_cor23> =
									%% Line 463
									call 'erlang':'bor'
									    (_cor22, _cor8)
								    in  let <_cor7> =
									    %% Line 463
									    apply 'bf'/3
										(3, 0, _cor0)
									in  %% Line 463
									    call 'erlang':'bor'
										(_cor23, _cor7)
'mrc'/1 =
    %% Line 465
    fun (_cor0) ->
	case _cor0 of
	  <{{'cond',Cond},{'cpnum',CpNum},{'cpop3',OP1},{'r',Rd},{'cr',CRn},{'cr',CRm},{'cpop3',OP2}}> when 'true' ->
	      let <_cor1> =
		  %% Line 466
		  apply 'cond'/1
		      (Cond)
	      in  %% Line 466
		  apply 'mrc_form'/7
		      (_cor1, OP1, CRn, Rd, CpNum, OP2, CRm)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'mrc',1}}] )
	    -| ['compiler_generated'] )
	end
'mrc2'/1 =
    %% Line 468
    fun (_cor0) ->
	case _cor0 of
	  <{{'cpnum',CpNum},{'cpop3',OP1},{'r',Rd},{'cr',CRn},{'cr',CRm},{'cpop3',OP2}}> when 'true' ->
	      let <_cor1> =
		  %% Line 469
		  apply 'bf'/3
		      (31, 28, 15)
	      in  %% Line 469
		  apply 'mrc_form'/7
		      (_cor1, OP1, CRn, Rd, CpNum, OP2, CRm)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'mrc2',1}}] )
	    -| ['compiler_generated'] )
	end
'mrs'/1 =
    %% Line 471
    fun (_cor0) ->
	case _cor0 of
	  <{{'cond',Cond},{'r',Rd},'cpsr'}> when 'true' ->
	      do  %% Line 473
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rd,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',473,[82|[100|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  let <_cor4> =
		      %% Line 474
		      apply 'cond'/1
			  (Cond)
		  in  let <_cor3> =
			  %% Line 474
			  apply 'bf'/3
			      (24, 24, 1)
		      in  let <_cor5> =
			      %% Line 474
			      call 'erlang':'bor'
				  (_cor4, _cor3)
			  in  let <_cor2> =
				  %% Line 474
				  apply 'bf'/3
				      (19, 16, 15)
			      in  let <_cor6> =
				      %% Line 474
				      call 'erlang':'bor'
					  (_cor5, _cor2)
				  in  let <_cor1> =
					  %% Line 474
					  apply 'bf'/3
					      (15, 12, Rd)
				      in  %% Line 474
					  call 'erlang':'bor'
					      (_cor6, _cor1)
	  ( <_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7})
		  -| [{'function_name',{'mrs',1}}] )
	    -| ['compiler_generated'] )
	end
'msr_form'/3 =
    %% Line 476
    fun (_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 477
	    apply 'cond'/1
		(_cor2)
	in  let <_cor6> =
		%% Line 477
		apply 'bf'/3
		    (24, 24, 1)
	    in  let <_cor8> =
		    %% Line 477
		    call 'erlang':'bor'
			(_cor7, _cor6)
		in  let <_cor5> =
			%% Line 477
			apply 'bf'/3
			    (21, 21, 1)
		    in  let <_cor9> =
			    %% Line 477
			    call 'erlang':'bor'
				(_cor8, _cor5)
			in  let <_cor4> =
				%% Line 477
				apply 'bf'/3
				    (19, 16, _cor1)
			    in  let <_cor10> =
				    %% Line 477
				    call 'erlang':'bor'
					(_cor9, _cor4)
				in  let <_cor3> =
					%% Line 477
					apply 'bf'/3
					    (15, 12, 15)
				    in  let <_cor11> =
					    %% Line 477
					    call 'erlang':'bor'
						(_cor10, _cor3)
					in  %% Line 477
					    call 'erlang':'bor'
						(_cor11, _cor0)
'msr'/1 =
    %% Line 479
    fun (_cor0) ->
	%% Line 481
	case _cor0 of
	  %% Line 482
	  <{{'cond',Cond},'cpsr',{'field_mask',FieldMask4},{'imm8',Imm8},{'imm4',RotImm4}}> when 'true' ->
	      let <_cor3> =
		  %% Line 483
		  apply 'bf'/3
		      (25, 25, 1)
	      in  let <_cor2> =
		      %% Line 483
		      apply 'bf'/3
			  (11, 8, RotImm4)
		  in  let <_cor4> =
			  %% Line 483
			  call 'erlang':'bor'
			      (_cor3, _cor2)
		      in  let <_cor1> =
			      %% Line 483
			      apply 'bf'/3
				  (7, 0, Imm8)
			  in  let <_cor5> =
				  %% Line 483
				  call 'erlang':'bor'
				      (_cor4, _cor1)
			      in  %% Line 483
				  apply 'msr_form'/3
				      (Cond, FieldMask4, _cor5)
	  %% Line 484
	  <{{'cond',Cond},'cpsr',{'field_mask',FieldMask4},{'r',Rm}}> when 'true' ->
	      let <_cor6> =
		  %% Line 485
		  apply 'bf'/3
		      (3, 0, Rm)
	      in  %% Line 485
		  apply 'msr_form'/3
		      (Cond, FieldMask4, _cor6)
	  ( <_cor7> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor7})
	    -| ['compiler_generated'] )
	end
'mul'/1 =
    %% Line 488
    fun (_cor0) ->
	case _cor0 of
	  <{{'cond',Cond},{'s',S},{'r',Rd},{'r',Rm},{'r',Rs}}> when 'true' ->
	      do  %% Line 489
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rd,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',489,[82|[100|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  do  %% Line 490
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rm,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',490,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      do  %% Line 491
			  case <> of
			    <>
				when call 'erlang':'=/='
				      (Rs,
				       15) ->
				[]
			    <> when 'true' ->
				call 'erlang':'exit'
				    ({'assertion_failed','hipe_arm_encode',491,[82|[115|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			  end
			  do  %% Line 492
			      case <> of
				<>
				    when call 'erlang':'=/='
					  (Rd,
					   Rm) ->
				    []
				<> when 'true' ->
				    call 'erlang':'exit'
					({'assertion_failed','hipe_arm_encode',492,[82|[100|[32|[61|[47|[61|[32|[82|[109]]]]]]]]]})
			      end
			      let <_cor6> =
				  %% Line 493
				  apply 'cond'/1
				      (Cond)
			      in  let <_cor5> =
				      %% Line 493
				      apply 'bf'/3
					  (20, 20, S)
				  in  let <_cor7> =
					  %% Line 493
					  call 'erlang':'bor'
					      (_cor6, _cor5)
				      in  let <_cor4> =
					      %% Line 493
					      apply 'bf'/3
						  (19, 16, Rd)
					  in  let <_cor8> =
						  %% Line 493
						  call 'erlang':'bor'
						      (_cor7, _cor4)
					      in  let <_cor3> =
						      %% Line 493
						      apply 'bf'/3
							  (11, 8, Rs)
						  in  let <_cor9> =
							  %% Line 493
							  call 'erlang':'bor'
							      (_cor8, _cor3)
						      in  let <_cor2> =
							      %% Line 493
							      apply 'bf'/3
								  (7, 4, 9)
							  in  let <_cor10> =
								  %% Line 493
								  call 'erlang':'bor'
								      (_cor9, _cor2)
							      in  let <_cor1> =
								      %% Line 493
								      apply 'bf'/3
									  (3, 0, Rm)
								  in  %% Line 493
								      call 'erlang':'bor'
									  (_cor10, _cor1)
	  ( <_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11})
		  -| [{'function_name',{'mul',1}}] )
	    -| ['compiler_generated'] )
	end
'ml_form2'/7 =
    %% Line 495
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 496
	    case <> of
	      <>
		  when call 'erlang':'=/='
			(_cor2,
			 15) ->
		  []
	      <> when 'true' ->
		  call 'erlang':'exit'
		      ({'assertion_failed','hipe_arm_encode',496,[82|[100|[72|[105|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]]]})
	    end
	    do  %% Line 497
		case <> of
		  <>
		      when call 'erlang':'=/='
			    (_cor3,
			     15) ->
		      []
		  <> when 'true' ->
		      call 'erlang':'exit'
			  ({'assertion_failed','hipe_arm_encode',497,[82|[100|[76|[111|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]]]})
		end
		do  %% Line 498
		    case <> of
		      <>
			  when call 'erlang':'=/='
				(_cor1,
				 15) ->
			  []
		      <> when 'true' ->
			  call 'erlang':'exit'
			      ({'assertion_failed','hipe_arm_encode',498,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		    end
		    do  %% Line 499
			case <> of
			  <>
			      when call 'erlang':'=/='
				    (_cor0,
				     15) ->
			      []
			  <> when 'true' ->
			      call 'erlang':'exit'
				  ({'assertion_failed','hipe_arm_encode',499,[82|[115|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			end
			do  %% Line 500
			    case <> of
			      <>
				  when call 'erlang':'=/='
					(_cor2,
					 _cor3) ->
				  []
			      <> when 'true' ->
				  call 'erlang':'exit'
				      ({'assertion_failed','hipe_arm_encode',500,[82|[100|[72|[105|[32|[61|[47|[61|[32|[82|[100|[76|[111]]]]]]]]]]]]]})
			    end
			    do  %% Line 501
				case <> of
				  <>
				      when call 'erlang':'=/='
					    (_cor2,
					     _cor1) ->
				      []
				  <> when 'true' ->
				      call 'erlang':'exit'
					  ({'assertion_failed','hipe_arm_encode',501,[82|[100|[72|[105|[32|[61|[47|[61|[32|[82|[109]]]]]]]]]]]})
				end
				do  %% Line 502
				    case <> of
				      <>
					  when call 'erlang':'=/='
						(_cor3,
						 _cor1) ->
					  []
				      <> when 'true' ->
					  call 'erlang':'exit'
					      ({'assertion_failed','hipe_arm_encode',502,[82|[100|[76|[111|[32|[61|[47|[61|[32|[82|[109]]]]]]]]]]]})
				    end
				    let <_cor14> =
					%% Line 503
					apply 'cond'/1
					    (_cor5)
				    in  let <_cor13> =
					    %% Line 503
					    apply 'bf'/3
						(27, 21, _cor6)
					in  let <_cor15> =
						%% Line 503
						call 'erlang':'bor'
						    (_cor14, _cor13)
					    in  let <_cor12> =
						    %% Line 503
						    apply 'bf'/3
							(20, 20, _cor4)
						in  let <_cor16> =
							%% Line 503
							call 'erlang':'bor'
							    (_cor15, _cor12)
						    in  let <_cor11> =
							    %% Line 503
							    apply 'bf'/3
								(19, 16, _cor2)
							in  let <_cor17> =
								%% Line 503
								call 'erlang':'bor'
								    (_cor16, _cor11)
							    in  let <_cor10> =
								    %% Line 503
								    apply 'bf'/3
									(15, 12, _cor3)
								in  let <_cor18> =
									%% Line 503
									call 'erlang':'bor'
									    (_cor17, _cor10)
								    in  let <_cor9> =
									    %% Line 503
									    apply 'bf'/3
										(11, 8, _cor0)
									in  let <_cor19> =
										%% Line 503
										call 'erlang':'bor'
										    (_cor18, _cor9)
									    in  let <_cor8> =
										    %% Line 503
										    apply 'bf'/3
											(7, 4, 9)
										in  let <_cor20> =
											%% Line 503
											call 'erlang':'bor'
											    (_cor19, _cor8)
										    in  let <_cor7> =
											    %% Line 503
											    apply 'bf'/3
												(3, 0, _cor1)
											in  %% Line 503
											    call 'erlang':'bor'
												(_cor20, _cor7)
'ml_form'/2 =
    %% Line 505
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <OpCode,{{'cond',Cond},{'s',S},{'r',RdLo},{'r',RdHi},{'r',Rm},{'r',Rs}}> when 'true' ->
	      %% Line 506
	      apply 'ml_form2'/7
		  (OpCode, Cond, S, RdLo, RdHi, Rm, Rs)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'ml_form',2}}] )
	    -| ['compiler_generated'] )
	end
'smull'/1 =
    %% Line 509
    fun (_cor0) ->
	apply 'ml_form'/2
	    (6, _cor0)
'umlal'/1 =
    %% Line 510
    fun (_cor0) ->
	apply 'ml_form'/2
	    (5, _cor0)
'umull'/1 =
    %% Line 511
    fun (_cor0) ->
	apply 'ml_form'/2
	    (4, _cor0)
'swi'/1 =
    %% Line 513
    fun (_cor0) ->
	case _cor0 of
	  <{{'cond',Cond},{'imm24',Imm24}}> when 'true' ->
	      let <_cor3> =
		  %% Line 514
		  apply 'cond'/1
		      (Cond)
	      in  let <_cor2> =
		      %% Line 514
		      apply 'bf'/3
			  (27, 24, 15)
		  in  let <_cor4> =
			  %% Line 514
			  call 'erlang':'bor'
			      (_cor3, _cor2)
		      in  let <_cor1> =
			      %% Line 514
			      apply 'bf'/3
				  (23, 0, Imm24)
			  in  %% Line 514
			      call 'erlang':'bor'
				  (_cor4, _cor1)
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5})
		  -| [{'function_name',{'swi',1}}] )
	    -| ['compiler_generated'] )
	end
'swp_form'/2 =
    %% Line 516
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <B22,{{'cond',Cond},{'r',Rd},{'r',Rm},{'r',Rn}}> when 'true' ->
	      do  %% Line 517
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rd,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',517,[82|[100|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  do  %% Line 518
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rm,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',518,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      do  %% Line 519
			  case <> of
			    <>
				when call 'erlang':'=/='
				      (Rn,
				       15) ->
				[]
			    <> when 'true' ->
				call 'erlang':'exit'
				    ({'assertion_failed','hipe_arm_encode',519,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			  end
			  do  %% Line 520
			      case <> of
				<>
				    when call 'erlang':'=/='
					  (Rn,
					   Rm) ->
				    []
				<> when 'true' ->
				    call 'erlang':'exit'
					({'assertion_failed','hipe_arm_encode',520,[82|[110|[32|[61|[47|[61|[32|[82|[109]]]]]]]]]})
			      end
			      do  %% Line 521
				  case <> of
				    <>
					when call 'erlang':'=/='
					      (Rn,
					       Rd) ->
					[]
				    <> when 'true' ->
					call 'erlang':'exit'
					    ({'assertion_failed','hipe_arm_encode',521,[82|[110|[32|[61|[47|[61|[32|[82|[100]]]]]]]]]})
				  end
				  let <_cor8> =
				      %% Line 522
				      apply 'cond'/1
					  (Cond)
				  in  let <_cor7> =
					  %% Line 522
					  apply 'bf'/3
					      (24, 24, 1)
				      in  let <_cor9> =
					      %% Line 522
					      call 'erlang':'bor'
						  (_cor8, _cor7)
					  in  let <_cor6> =
						  %% Line 522
						  apply 'bf'/3
						      (22, 22, B22)
					      in  let <_cor10> =
						      %% Line 522
						      call 'erlang':'bor'
							  (_cor9, _cor6)
						  in  let <_cor5> =
							  %% Line 522
							  apply 'bf'/3
							      (19, 16, Rn)
						      in  let <_cor11> =
							      %% Line 522
							      call 'erlang':'bor'
								  (_cor10, _cor5)
							  in  let <_cor4> =
								  %% Line 522
								  apply 'bf'/3
								      (15, 12, Rd)
							      in  let <_cor12> =
								      %% Line 522
								      call 'erlang':'bor'
									  (_cor11, _cor4)
								  in  let <_cor3> =
									  %% Line 522
									  apply 'bf'/3
									      (7, 4, 9)
								      in  let <_cor13> =
									      %% Line 522
									      call 'erlang':'bor'
										  (_cor12, _cor3)
									  in  let <_cor2> =
										  %% Line 522
										  apply 'bf'/3
										      (3, 0, Rm)
									      in  %% Line 522
										  call 'erlang':'bor'
										      (_cor13, _cor2)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'swp_form',2}}] )
	    -| ['compiler_generated'] )
	end
'swp'/1 =
    %% Line 524
    fun (_cor0) ->
	apply 'swp_form'/2
	    (0, _cor0)
'swpb'/1 =
    %% Line 525
    fun (_cor0) ->
	apply 'swp_form'/2
	    (1, _cor0)
'ldstrd_form'/2 =
    %% Line 531
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <OpCode,{{'cond',Cond},{'r',Rd},AddressingMode}> when 'true' ->
	      do  %% Line 532
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rd,
			       14) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',532,[82|[100|[32|[61|[47|[61|[32|[49|[52]]]]]]]]]})
		  end
		  do  %% Line 533
		      case <> of
			<>
			    when try
				  let <_cor2> =
				      call 'erlang':'band'
					  (Rd, 1)
				  in  call 'erlang':'=:='
					  (_cor2, 0)
			      of <Try> ->
				  Try
			      catch <T,R> ->
				  'false' ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',533,[40|[32|[82|[100|[32|[98|[97|[110|[100|[32|[49|[32|[41|[32|[61|[58|[61|[32|[48]]]]]]]]]]]]]]]]]]]})
		      end
		      let <_cor6> =
			  %% Line 536
			  apply 'cond'/1
			      (Cond)
		      in  let <_cor5> =
			      %% Line 536
			      apply 'am3_miscls'/2
				  (Rd, AddressingMode)
			  in  let <_cor7> =
				  %% Line 536
				  call 'erlang':'bor'
				      (_cor6, _cor5)
			      in  let <_cor4> =
				      %% Line 536
				      apply 'bf'/3
					  (15, 12, Rd)
				  in  let <_cor8> =
					  %% Line 536
					  call 'erlang':'bor'
					      (_cor7, _cor4)
				      in  let <_cor3> =
					      %% Line 536
					      apply 'bf'/3
						  (7, 4, OpCode)
					  in  %% Line 536
					      call 'erlang':'bor'
						  (_cor8, _cor3)
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9})
		  -| [{'function_name',{'ldstrd_form',2}}] )
	    -| ['compiler_generated'] )
	end
'ldrd'/1 =
    %% Line 538
    fun (_cor0) ->
	apply 'ldstrd_form'/2
	    (13, _cor0)
'strd'/1 =
    %% Line 539
    fun (_cor0) ->
	apply 'ldstrd_form'/2
	    (15, _cor0)
'mcrr'/1 =
    %% Line 541
    fun (_cor0) ->
	case _cor0 of
	  <{{'cond',Cond},{'cpnum',CpNum},{'cpop4',OP},{'r',Rd},{'r',Rn},{'cr',CRm}}> when 'true' ->
	      do  %% Line 542
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rd,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',542,[82|[100|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  do  %% Line 543
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rn,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',543,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      let <_cor7> =
			  %% Line 544
			  apply 'cond'/1
			      (Cond)
		      in  let <_cor6> =
			      %% Line 544
			      apply 'bf'/3
				  (27, 20, 196)
			  in  let <_cor8> =
				  %% Line 544
				  call 'erlang':'bor'
				      (_cor7, _cor6)
			      in  let <_cor5> =
				      %% Line 544
				      apply 'bf'/3
					  (19, 16, Rn)
				  in  let <_cor9> =
					  %% Line 544
					  call 'erlang':'bor'
					      (_cor8, _cor5)
				      in  let <_cor4> =
					      %% Line 544
					      apply 'bf'/3
						  (15, 12, Rd)
					  in  let <_cor10> =
						  %% Line 544
						  call 'erlang':'bor'
						      (_cor9, _cor4)
					      in  let <_cor3> =
						      %% Line 544
						      apply 'bf'/3
							  (11, 8, CpNum)
						  in  let <_cor11> =
							  %% Line 544
							  call 'erlang':'bor'
							      (_cor10, _cor3)
						      in  let <_cor2> =
							      %% Line 544
							      apply 'bf'/3
								  (7, 4, OP)
							  in  let <_cor12> =
								  %% Line 544
								  call 'erlang':'bor'
								      (_cor11, _cor2)
							      in  let <_cor1> =
								      %% Line 544
								      apply 'bf'/3
									  (3, 0, CRm)
								  in  %% Line 544
								      call 'erlang':'bor'
									  (_cor12, _cor1)
	  ( <_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13})
		  -| [{'function_name',{'mcrr',1}}] )
	    -| ['compiler_generated'] )
	end
'mrrc'/1 =
    %% Line 546
    fun (_cor0) ->
	case _cor0 of
	  <{{'cond',Cond},{'cpnum',CpNum},{'cpop4',OP},{'r',Rd},{'r',Rn},{'cr',CRm}}> when 'true' ->
	      do  %% Line 547
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rd,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',547,[82|[100|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  do  %% Line 548
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rn,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',548,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      do  %% Line 549
			  case <> of
			    <>
				when call 'erlang':'=/='
				      (Rd,
				       Rn) ->
				[]
			    <> when 'true' ->
				call 'erlang':'exit'
				    ({'assertion_failed','hipe_arm_encode',549,[82|[100|[32|[61|[47|[61|[32|[82|[110]]]]]]]]]})
			  end
			  let <_cor7> =
			      %% Line 550
			      apply 'cond'/1
				  (Cond)
			  in  let <_cor6> =
				  %% Line 550
				  apply 'bf'/3
				      (27, 20, 197)
			      in  let <_cor8> =
				      %% Line 550
				      call 'erlang':'bor'
					  (_cor7, _cor6)
				  in  let <_cor5> =
					  %% Line 550
					  apply 'bf'/3
					      (19, 16, Rn)
				      in  let <_cor9> =
					      %% Line 550
					      call 'erlang':'bor'
						  (_cor8, _cor5)
					  in  let <_cor4> =
						  %% Line 550
						  apply 'bf'/3
						      (15, 12, Rd)
					      in  let <_cor10> =
						      %% Line 550
						      call 'erlang':'bor'
							  (_cor9, _cor4)
						  in  let <_cor3> =
							  %% Line 550
							  apply 'bf'/3
							      (11, 8, CpNum)
						      in  let <_cor11> =
							      %% Line 550
							      call 'erlang':'bor'
								  (_cor10, _cor3)
							  in  let <_cor2> =
								  %% Line 550
								  apply 'bf'/3
								      (7, 4, OP)
							      in  let <_cor12> =
								      %% Line 550
								      call 'erlang':'bor'
									  (_cor11, _cor2)
								  in  let <_cor1> =
									  %% Line 550
									  apply 'bf'/3
									      (3, 0, CRm)
								      in  %% Line 550
									  call 'erlang':'bor'
									      (_cor12, _cor1)
	  ( <_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13})
		  -| [{'function_name',{'mrrc',1}}] )
	    -| ['compiler_generated'] )
	end
'pld'/1 =
    %% Line 552
    fun (_cor0) ->
	case _cor0 of
	  <{AddressingMode}> when 'true' ->
	      let <AM> =
		  %% Line 553
		  apply 'am2_lswub'/2
		      (42, AddressingMode)
	      in  do  %% Line 556
		      case <> of
			<>
			    when try
				  let <_cor2> =
				      call 'erlang':'bsr'
					  (AM, 21)
				  in  let <_cor3> =
					  call 'erlang':'band'
					      (_cor2, 9)
				      in  call 'erlang':'=:='
					      (_cor3, 8)
			      of <Try> ->
				  Try
			      catch <T,R> ->
				  'false' ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',556,[40|[32|[40|[32|[65|[77|[32|[98|[115|[114|[32|[50|[49|[32|[41|[32|[98|[97|[110|[100|[32|[57|[32|[41|[32|[61|[58|[61|[32|[56]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]})
		      end
		      %% Line 557
		      call 'erlang':'bor'
			  (4115722240, AM)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'pld',1}}] )
	    -| ['compiler_generated'] )
	end
'q_form'/2 =
    %% Line 559
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <OpCode,{{'cond',Cond},{'r',Rd},{'r',Rm},{'r',Rn}}> when 'true' ->
	      do  %% Line 560
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (Rd,
			       15) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',560,[82|[100|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		  end
		  do  %% Line 561
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (Rm,
				   15) ->
			    []
			<> when 'true' ->
			    call 'erlang':'exit'
				({'assertion_failed','hipe_arm_encode',561,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		      end
		      do  %% Line 562
			  case <> of
			    <>
				when call 'erlang':'=/='
				      (Rn,
				       15) ->
				[]
			    <> when 'true' ->
				call 'erlang':'exit'
				    ({'assertion_failed','hipe_arm_encode',562,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			  end
			  let <_cor7> =
			      %% Line 563
			      apply 'cond'/1
				  (Cond)
			  in  let <_cor6> =
				  %% Line 563
				  apply 'bf'/3
				      (27, 20, OpCode)
			      in  let <_cor8> =
				      %% Line 563
				      call 'erlang':'bor'
					  (_cor7, _cor6)
				  in  let <_cor5> =
					  %% Line 563
					  apply 'bf'/3
					      (19, 16, Rn)
				      in  let <_cor9> =
					      %% Line 563
					      call 'erlang':'bor'
						  (_cor8, _cor5)
					  in  let <_cor4> =
						  %% Line 563
						  apply 'bf'/3
						      (15, 11, Rd)
					      in  let <_cor10> =
						      %% Line 563
						      call 'erlang':'bor'
							  (_cor9, _cor4)
						  in  let <_cor3> =
							  %% Line 563
							  apply 'bf'/3
							      (7, 4, 5)
						      in  let <_cor11> =
							      %% Line 563
							      call 'erlang':'bor'
								  (_cor10, _cor3)
							  in  let <_cor2> =
								  %% Line 563
								  apply 'bf'/3
								      (3, 0, Rm)
							      in  %% Line 563
								  call 'erlang':'bor'
								      (_cor11, _cor2)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'q_form',2}}] )
	    -| ['compiler_generated'] )
	end
'qadd'/1 =
    %% Line 565
    fun (_cor0) ->
	apply 'q_form'/2
	    (16, _cor0)
'qdadd'/1 =
    %% Line 566
    fun (_cor0) ->
	apply 'q_form'/2
	    (20, _cor0)
'qdsub'/1 =
    %% Line 567
    fun (_cor0) ->
	apply 'q_form'/2
	    (22, _cor0)
'qsub'/1 =
    %% Line 568
    fun (_cor0) ->
	apply 'q_form'/2
	    (18, _cor0)
'smlaxy_form'/8 =
    %% Line 570
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 571
	    case <> of
	      <>
		  when call 'erlang':'=/='
			(_cor5,
			 15) ->
		  []
	      <> when 'true' ->
		  call 'erlang':'exit'
		      ({'assertion_failed','hipe_arm_encode',571,[82|[100|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
	    end
	    do  %% Line 572
		case <> of
		  <>
		      when call 'erlang':'=/='
			    (_cor0,
			     15) ->
		      []
		  <> when 'true' ->
		      call 'erlang':'exit'
			  ({'assertion_failed','hipe_arm_encode',572,[82|[109|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		end
		do  %% Line 573
		    case <> of
		      <>
			  when call 'erlang':'=/='
				(_cor3,
				 15) ->
			  []
		      <> when 'true' ->
			  call 'erlang':'exit'
			      ({'assertion_failed','hipe_arm_encode',573,[82|[115|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
		    end
		    do  %% Line 574
			case <> of
			  <>
			      when call 'erlang':'=/='
				    (_cor4,
				     15) ->
			      []
			  <> when 'true' ->
			      call 'erlang':'exit'
				  ({'assertion_failed','hipe_arm_encode',574,[82|[110|[32|[61|[47|[61|[32|[49|[53]]]]]]]]]})
			end
			let <_cor16> =
			    %% Line 575
			    apply 'cond'/1
				(_cor7)
			in  let <_cor15> =
				%% Line 575
				apply 'bf'/3
				    (27, 20, _cor6)
			    in  let <_cor17> =
				    %% Line 575
				    call 'erlang':'bor'
					(_cor16, _cor15)
				in  let <_cor14> =
					%% Line 575
					apply 'bf'/3
					    (19, 16, _cor5)
				    in  let <_cor18> =
					    %% Line 575
					    call 'erlang':'bor'
						(_cor17, _cor14)
					in  let <_cor13> =
						%% Line 575
						apply 'bf'/3
						    (15, 12, _cor4)
					    in  let <_cor19> =
						    %% Line 575
						    call 'erlang':'bor'
							(_cor18, _cor13)
						in  let <_cor12> =
							%% Line 575
							apply 'bf'/3
							    (11, 8, _cor3)
						    in  let <_cor20> =
							    %% Line 575
							    call 'erlang':'bor'
								(_cor19, _cor12)
							in  let <_cor11> =
								%% Line 575
								apply 'bf'/3
								    (7, 7, 1)
							    in  let <_cor21> =
								    %% Line 575
								    call 'erlang':'bor'
									(_cor20, _cor11)
								in  let <_cor10> =
									%% Line 575
									apply 'bf'/3
									    (6, 6, _cor2)
								    in  let <_cor22> =
									    %% Line 575
									    call 'erlang':'bor'
										(_cor21, _cor10)
									in  let <_cor9> =
										%% Line 575
										apply 'bf'/3
										    (5, 5, _cor1)
									    in  let <_cor23> =
										    %% Line 575
										    call 'erlang':'bor'
											(_cor22, _cor9)
										in  let <_cor8> =
											%% Line 575
											apply 'bf'/3
											    (3, 0, _cor0)
										    in  %% Line 575
											call 'erlang':'bor'
											    (_cor23, _cor8)
'smla'/1 =
    %% Line 577
    fun (_cor0) ->
	case _cor0 of
	  <{{'bt',X},{'bt',Y},{'cond',Cond},{'r',Rd},{'r',Rm},{'r',Rs},{'r',Rn}}> when 'true' ->
	      %% Line 578
	      apply 'smlaxy_form'/8
		  (Cond, 16, Rd, Rn, Rs, Y, X, Rm)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'smla',1}}] )
	    -| ['compiler_generated'] )
	end
'smlal'/1 =
    %% Line 580
    fun (_cor0) ->
	%% Line 581
	case _cor0 of
	  %% Line 582
	  <{{'cond',Cond},{'s',S},{'r',RdLo},{'r',RdHi},{'r',Rm},{'r',Rs}}> when 'true' ->
	      %% Line 583
	      apply 'ml_form2'/7
		  (7, Cond, S, RdLo, RdHi, Rm, Rs)
	  %% Line 584
	  <{{'bt',X},{'bt',Y},{'cond',Cond},{'r',RdLo},{'r',RdHi},{'r',Rm},{'r',Rs}}> when 'true' ->
	      do  %% Line 585
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (RdLo,
			       RdHi) ->
			[]
		    <> when 'true' ->
			call 'erlang':'exit'
			    ({'assertion_failed','hipe_arm_encode',585,[82|[100|[76|[111|[32|[61|[47|[61|[32|[82|[100|[72|[105]]]]]]]]]]]]]})
		  end
		  %% Line 586
		  apply 'smlaxy_form'/8
		      (Cond, 20, RdHi, RdLo, Rs, Y, X, Rm)
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor1})
	    -| ['compiler_generated'] )
	end
'smlaw'/1 =
    %% Line 589
    fun (_cor0) ->
	case _cor0 of
	  <{{'bt',Y},{'cond',Cond},{'r',Rd},{'r',Rm},{'r',Rs},{'r',Rn}}> when 'true' ->
	      %% Line 590
	      apply 'smlaxy_form'/8
		  (Cond, 18, Rd, Rn, Rs, Y, 0, Rm)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'smlaw',1}}] )
	    -| ['compiler_generated'] )
	end
'smul'/1 =
    %% Line 592
    fun (_cor0) ->
	case _cor0 of
	  <{{'bt',X},{'bt',Y},{'cond',Cond},{'r',Rd},{'r',Rm},{'r',Rs}}> when 'true' ->
	      %% Line 593
	      apply 'smlaxy_form'/8
		  (Cond, 22, Rd, 0, Rs, Y, X, Rm)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'smul',1}}] )
	    -| ['compiler_generated'] )
	end
'smulw'/1 =
    %% Line 595
    fun (_cor0) ->
	case _cor0 of
	  <{{'bt',Y},{'cond',Cond},{'r',Rd},{'r',Rm},{'r',Rs}}> when 'true' ->
	      %% Line 596
	      apply 'smlaxy_form'/8
		  (Cond, 18, Rd, 0, Rs, Y, 1, Rm)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'smulw',1}}] )
	    -| ['compiler_generated'] )
	end
'insn_encode'/2 =
    %% Line 602
    fun (_cor1,_cor0) ->
	%% Line 603
	case _cor1 of
	  %% Line 604
	  <'adc'> when 'true' ->
	      apply 'adc'/1
		  (_cor0)
	  %% Line 605
	  <'add'> when 'true' ->
	      apply 'add'/1
		  (_cor0)
	  %% Line 606
	  <'and'> when 'true' ->
	      apply 'and'/1
		  (_cor0)
	  %% Line 607
	  <'b'> when 'true' ->
	      apply 'b'/1
		  (_cor0)
	  %% Line 608
	  <'bic'> when 'true' ->
	      apply 'bic'/1
		  (_cor0)
	  %% Line 609
	  <'bkpt'> when 'true' ->
	      apply 'bkpt'/1
		  (_cor0)
	  %% Line 610
	  <'bl'> when 'true' ->
	      apply 'bl'/1
		  (_cor0)
	  %% Line 611
	  <'blx'> when 'true' ->
	      apply 'blx'/1
		  (_cor0)
	  %% Line 612
	  <'bx'> when 'true' ->
	      apply 'bx'/1
		  (_cor0)
	  %% Line 613
	  <'cdp'> when 'true' ->
	      apply 'cdp'/1
		  (_cor0)
	  %% Line 614
	  <'cdp2'> when 'true' ->
	      apply 'cdp2'/1
		  (_cor0)
	  %% Line 615
	  <'clz'> when 'true' ->
	      apply 'clz'/1
		  (_cor0)
	  %% Line 616
	  <'cmn'> when 'true' ->
	      apply 'cmn'/1
		  (_cor0)
	  %% Line 617
	  <'cmp'> when 'true' ->
	      apply 'cmp'/1
		  (_cor0)
	  %% Line 618
	  <'eor'> when 'true' ->
	      apply 'eor'/1
		  (_cor0)
	  %% Line 619
	  <'ldc'> when 'true' ->
	      apply 'ldc'/1
		  (_cor0)
	  %% Line 620
	  <'ldc2'> when 'true' ->
	      apply 'ldc2'/1
		  (_cor0)
	  %% Line 621
	  <'ldm'> when 'true' ->
	      apply 'ldm'/1
		  (_cor0)
	  %% Line 622
	  <'ldr'> when 'true' ->
	      apply 'ldr'/1
		  (_cor0)
	  %% Line 623
	  <'ldrb'> when 'true' ->
	      apply 'ldrb'/1
		  (_cor0)
	  %% Line 624
	  <'ldrd'> when 'true' ->
	      apply 'ldrd'/1
		  (_cor0)
	  %% Line 626
	  <'ldrh'> when 'true' ->
	      apply 'ldrh'/1
		  (_cor0)
	  %% Line 627
	  <'ldrsb'> when 'true' ->
	      apply 'ldrsb'/1
		  (_cor0)
	  %% Line 628
	  <'ldrsh'> when 'true' ->
	      apply 'ldrsh'/1
		  (_cor0)
	  %% Line 630
	  <'mcr'> when 'true' ->
	      apply 'mcr'/1
		  (_cor0)
	  %% Line 631
	  <'mcr2'> when 'true' ->
	      apply 'mcr2'/1
		  (_cor0)
	  %% Line 632
	  <'mcrr'> when 'true' ->
	      apply 'mcrr'/1
		  (_cor0)
	  %% Line 633
	  <'mla'> when 'true' ->
	      apply 'mla'/1
		  (_cor0)
	  %% Line 634
	  <'mov'> when 'true' ->
	      apply 'mov'/1
		  (_cor0)
	  %% Line 635
	  <'mrc'> when 'true' ->
	      apply 'mrc'/1
		  (_cor0)
	  %% Line 636
	  <'mrc2'> when 'true' ->
	      apply 'mrc2'/1
		  (_cor0)
	  %% Line 637
	  <'mrrc'> when 'true' ->
	      apply 'mrrc'/1
		  (_cor0)
	  %% Line 638
	  <'mrs'> when 'true' ->
	      apply 'mrs'/1
		  (_cor0)
	  %% Line 639
	  <'msr'> when 'true' ->
	      apply 'msr'/1
		  (_cor0)
	  %% Line 640
	  <'mul'> when 'true' ->
	      apply 'mul'/1
		  (_cor0)
	  %% Line 641
	  <'mvn'> when 'true' ->
	      apply 'mvn'/1
		  (_cor0)
	  %% Line 642
	  <'orr'> when 'true' ->
	      apply 'orr'/1
		  (_cor0)
	  %% Line 643
	  <'pld'> when 'true' ->
	      apply 'pld'/1
		  (_cor0)
	  %% Line 644
	  <'qadd'> when 'true' ->
	      apply 'qadd'/1
		  (_cor0)
	  %% Line 645
	  <'qdadd'> when 'true' ->
	      apply 'qdadd'/1
		  (_cor0)
	  %% Line 646
	  <'qdsub'> when 'true' ->
	      apply 'qdsub'/1
		  (_cor0)
	  %% Line 647
	  <'qsub'> when 'true' ->
	      apply 'qsub'/1
		  (_cor0)
	  %% Line 648
	  <'rsb'> when 'true' ->
	      apply 'rsb'/1
		  (_cor0)
	  %% Line 649
	  <'rsc'> when 'true' ->
	      apply 'rsc'/1
		  (_cor0)
	  %% Line 650
	  <'sbc'> when 'true' ->
	      apply 'sbc'/1
		  (_cor0)
	  %% Line 651
	  <'smla'> when 'true' ->
	      apply 'smla'/1
		  (_cor0)
	  %% Line 652
	  <'smlal'> when 'true' ->
	      apply 'smlal'/1
		  (_cor0)
	  %% Line 653
	  <'smlaw'> when 'true' ->
	      apply 'smlaw'/1
		  (_cor0)
	  %% Line 654
	  <'smull'> when 'true' ->
	      apply 'smull'/1
		  (_cor0)
	  %% Line 655
	  <'smul'> when 'true' ->
	      apply 'smul'/1
		  (_cor0)
	  %% Line 656
	  <'smulw'> when 'true' ->
	      apply 'smulw'/1
		  (_cor0)
	  %% Line 657
	  <'stc'> when 'true' ->
	      apply 'stc'/1
		  (_cor0)
	  %% Line 658
	  <'stc2'> when 'true' ->
	      apply 'stc2'/1
		  (_cor0)
	  %% Line 659
	  <'stm'> when 'true' ->
	      apply 'stm'/1
		  (_cor0)
	  %% Line 660
	  <'str'> when 'true' ->
	      apply 'str'/1
		  (_cor0)
	  %% Line 661
	  <'strb'> when 'true' ->
	      apply 'strb'/1
		  (_cor0)
	  %% Line 663
	  <'strd'> when 'true' ->
	      apply 'strd'/1
		  (_cor0)
	  %% Line 664
	  <'strh'> when 'true' ->
	      apply 'strh'/1
		  (_cor0)
	  %% Line 666
	  <'sub'> when 'true' ->
	      apply 'sub'/1
		  (_cor0)
	  %% Line 667
	  <'swi'> when 'true' ->
	      apply 'swi'/1
		  (_cor0)
	  %% Line 668
	  <'swp'> when 'true' ->
	      apply 'swp'/1
		  (_cor0)
	  %% Line 669
	  <'swpb'> when 'true' ->
	      apply 'swpb'/1
		  (_cor0)
	  %% Line 670
	  <'teq'> when 'true' ->
	      apply 'teq'/1
		  (_cor0)
	  %% Line 671
	  <'tst'> when 'true' ->
	      apply 'tst'/1
		  (_cor0)
	  %% Line 672
	  <'umlal'> when 'true' ->
	      apply 'umlal'/1
		  (_cor0)
	  %% Line 673
	  <'umull'> when 'true' ->
	      apply 'umull'/1
		  (_cor0)
	  %% Line 674
	  <_cor5> when 'true' ->
	      call 'erlang':'exit'
		  ({'hipe_arm_encode','insn_encode',_cor1})
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_arm_encode')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_arm_encode', _cor0)
end