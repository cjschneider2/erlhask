module 'hipe_amd64_main' ['module_info'/0,
			  'module_info'/1,
			  'rtl_to_amd64'/3]
    attributes [%% Line 301
		'type' =
		    %% Line 301
		    [{{'record','comp_servers'},[{'typed_record_field',{'record_field',301,{'atom',301,'pp_server'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}|[{'typed_record_field',{'record_field',301,{'atom',301,'range'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}|[{'typed_record_field',{'record_field',301,{'atom',301,'type'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}]]],[]}],
		%% Line 307
		'type' =
		    %% Line 307
		    [{'comp_option',{'type',307,'union',[{'type',307,'atom',[]}|[{'type',307,'tuple',[{'type',307,'atom',[]}|[{'type',307,'atom',[]}]]}]]},[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{'comp_options',{'type',308,'list',[{'type',308,'comp_option',[]}]},[]}],
		%% Line 310
		'type' =
		    %% Line 310
		    [{'hipe_architecture',{'type',311,'union',[{'atom',311,'amd64'}|[{'atom',311,'arm'}|[{'atom',311,'powerpc'}|[{'atom',311,'ppc64'}|[{'atom',311,'ultrasparc'}|[{'atom',311,'x86'}]]]]]]},[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{'hipe_map',{'type',313,'list',[{'type',313,'tuple',[{'type',313,'non_neg_integer',[]}|[{'type',314,'union',[{'atom',314,'unknown'}|[{'type',314,'tuple',[{'type',314,'union',[{'atom',314,'reg'}|[{'atom',314,'fp_reg'}|[{'atom',314,'spill'}]]]}|[{'type',315,'non_neg_integer',[]}]]}]]}]]}]},[]}],
		%% Line 316
		'type' =
		    %% Line 316
		    [{'hipe_temp_map',{'type',316,'tuple','any'},[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{'hipe_spill_map',{'type',317,'list',[{'type',317,'tuple',[{'type',317,'non_neg_integer',[]}|[{'type',317,'tuple',[{'atom',317,'spill'}|[{'type',317,'non_neg_integer',[]}]]}]]}]},[]}]]
'rtl_to_amd64'/3 =
    %% Line 52
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 53
	    case call 'proplists':'get_bool'
		     ('time', _cor0) of
	      %% Line 54
	      <'true'> when 'true' ->
		  call 'hipe_timing':'start'
		      ([82|[84|[76|[45|[116|[111|[45|[97|[109|[100|[54|[52]]]]]]]]]]]], 'hipe_amd64_main')
	      %% Line 54
	      <'false'> when 'true' ->
		  'ok'
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor3})
		-| ['compiler_generated'] )
	    end
	    let <_cor7> =
		%% Line 54
		( fun (_cor5) ->
		      do  case call 'proplists':'get_bool'
				   ('time', _cor0) of
			    <'true'> when 'true' ->
				call 'hipe_timing':'stop'
				    ([82|[84|[76|[45|[116|[111|[45|[97|[109|[100|[54|[52]]]]]]]]]]]], 'hipe_amd64_main')
			    <'false'> when 'true' ->
				'ok'
			    ( <_cor4> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor4})
			      -| ['compiler_generated'] )
			  end
			  _cor5
		  -| [{'id',{0,0,'-rtl_to_amd64/3-fun-0-'}}] )
	    in  let <_cor8> =
		    %% Line 53
		    call 'hipe_rtl_to_amd64':'translate'
			(_cor1)
		in  let <_cor9> =
			%% Line 54
			apply _cor7
			    (_cor8)
		    in  let <_cor18> =
			    %% Line 56
			    case call 'proplists':'get_bool'
				     ('caller_save_spill_restore', _cor0) of
			      %% Line 57
			      <'true'> when 'true' ->
				  do  %% Line 58
				      case call 'proplists':'get_bool'
					       ('time', _cor0) of
					%% Line 59
					<'true'> when 'true' ->
					    call 'hipe_timing':'start'
						([97|[109|[100|[54|[52|[32|[115|[112|[105|[108|[108|[32|[114|[101|[115|[116|[111|[114|[101]]]]]]]]]]]]]]]]]]], 'hipe_amd64_main')
					%% Line 59
					<'false'> when 'true' ->
					    'ok'
					( <_cor11> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_cor11})
					  -| ['compiler_generated'] )
				      end
				      let <_cor15> =
					  %% Line 59
					  ( fun (_cor13) ->
						do  case call 'proplists':'get_bool'
							     ('time', _cor0) of
						      <'true'> when 'true' ->
							  call 'hipe_timing':'stop'
							      ([97|[109|[100|[54|[52|[32|[115|[112|[105|[108|[108|[32|[114|[101|[115|[116|[111|[114|[101]]]]]]]]]]]]]]]]]]], 'hipe_amd64_main')
						      <'false'> when 'true' ->
							  'ok'
						      ( <_cor12> when 'true' ->
							    primop 'match_fail'
								({'case_clause',_cor12})
							-| ['compiler_generated'] )
						    end
						    _cor13
					    -| [{'id',{0,0,'-rtl_to_amd64/3-fun-1-'}}] )
				      in  let <_cor16> =
					      %% Line 58
					      call 'hipe_amd64_spill_restore':'spill_restore'
						  (_cor9, _cor0)
					  in  %% Line 59
					      apply _cor15
						  (_cor16)
			      %% Line 60
			      <'false'> when 'true' ->
				  _cor9
			      ( <_cor17> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor17})
				-| ['compiler_generated'] )
			    end
			in  do  %% Line 63
				case call 'proplists':'get_bool'
					 ('time', _cor0) of
				  %% Line 64
				  <'true'> when 'true' ->
				      call 'hipe_timing':'start'
					  ([97|[109|[100|[54|[52|[32|[114|[101|[103|[105|[115|[116|[101|[114|[32|[97|[108|[108|[111|[99|[97|[116|[105|[111|[110]]]]]]]]]]]]]]]]]]]]]]]]], 'hipe_amd64_main')
				  %% Line 64
				  <'false'> when 'true' ->
				      'ok'
				  ( <_cor20> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor20})
				    -| ['compiler_generated'] )
				end
				let <_cor24> =
				    %% Line 64
				    ( fun (_cor22) ->
					  do  case call 'proplists':'get_bool'
						       ('time', _cor0) of
						<'true'> when 'true' ->
						    call 'hipe_timing':'stop'
							([97|[109|[100|[54|[52|[32|[114|[101|[103|[105|[115|[116|[101|[114|[32|[97|[108|[108|[111|[99|[97|[116|[105|[111|[110]]]]]]]]]]]]]]]]]]]]]]]]], 'hipe_amd64_main')
						<'false'> when 'true' ->
						    'ok'
						( <_cor21> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_cor21})
						  -| ['compiler_generated'] )
					      end
					      _cor22
				      -| [{'id',{0,0,'-rtl_to_amd64/3-fun-2-'}}] )
				in  let <_cor25> =
					%% Line 63
					call 'hipe_amd64_ra':'ra'
					    (_cor18, _cor0)
				    in  let <_cor26> =
					    %% Line 64
					    apply _cor24
						(_cor25)
					in  do  %% Line 65
						case call 'proplists':'get_bool'
							 ('time', _cor0) of
						  %% Line 66
						  <'true'> when 'true' ->
						      call 'hipe_timing':'start'
							  ([97|[109|[100|[54|[52|[32|[102|[114|[97|[109|[101]]]]]]]]]]], 'hipe_amd64_main')
						  %% Line 66
						  <'false'> when 'true' ->
						      'ok'
						  ( <_cor28> when 'true' ->
							primop 'match_fail'
							    ({'case_clause',_cor28})
						    -| ['compiler_generated'] )
						end
						let <_cor32> =
						    %% Line 66
						    ( fun (_cor30) ->
							  do  case call 'proplists':'get_bool'
								       ('time', _cor0) of
								<'true'> when 'true' ->
								    call 'hipe_timing':'stop'
									([97|[109|[100|[54|[52|[32|[102|[114|[97|[109|[101]]]]]]]]]]], 'hipe_amd64_main')
								<'false'> when 'true' ->
								    'ok'
								( <_cor29> when 'true' ->
								      primop 'match_fail'
									  ({'case_clause',_cor29})
								  -| ['compiler_generated'] )
							      end
							      _cor30
						      -| [{'id',{0,0,'-rtl_to_amd64/3-fun-3-'}}] )
						in  let <_cor33> =
							%% Line 65
							call 'hipe_amd64_frame':'frame'
							    (_cor26, _cor0)
						    in  let <_cor34> =
							    %% Line 66
							    apply _cor32
								(_cor33)
							in  do  %% Line 67
								case call 'proplists':'get_bool'
									 ('time', _cor0) of
								  %% Line 68
								  <'true'> when 'true' ->
								      call 'hipe_timing':'start'
									  ([97|[109|[100|[54|[52|[32|[102|[105|[110|[97|[108|[105|[115|[101]]]]]]]]]]]]]], 'hipe_amd64_main')
								  %% Line 68
								  <'false'> when 'true' ->
								      'ok'
								  ( <_cor36> when 'true' ->
									primop 'match_fail'
									    ({'case_clause',_cor36})
								    -| ['compiler_generated'] )
								end
								let <_cor40> =
								    %% Line 68
								    ( fun (_cor38) ->
									  do  case call 'proplists':'get_bool'
										       ('time', _cor0) of
										<'true'> when 'true' ->
										    call 'hipe_timing':'stop'
											([97|[109|[100|[54|[52|[32|[102|[105|[110|[97|[108|[105|[115|[101]]]]]]]]]]]]]], 'hipe_amd64_main')
										<'false'> when 'true' ->
										    'ok'
										( <_cor37> when 'true' ->
										      primop 'match_fail'
											  ({'case_clause',_cor37})
										  -| ['compiler_generated'] )
									      end
									      _cor38
								      -| [{'id',{0,0,'-rtl_to_amd64/3-fun-4-'}}] )
								in  let <_cor41> =
									%% Line 67
									call 'hipe_x86_postpass':'postpass'
									    (_cor34, _cor0)
								    in  let <_cor42> =
									    %% Line 68
									    apply _cor40
										(_cor41)
									in  do  %% Line 69
										call 'hipe_amd64_pp':'optional_pp'
										    (_cor42, _cor2, _cor0)
										%% Line 70
										{'native','amd64',{'unprofiled',_cor42}}
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_amd64_main')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_amd64_main', _cor0)
end