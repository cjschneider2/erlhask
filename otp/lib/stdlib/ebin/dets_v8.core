module 'dets_v8' ['bulk_input'/3,
		  'cache_segps'/3,
		  'check_file_header'/2,
		  'db_hash'/2,
		  'do_perform_save'/1,
		  'file_info'/1,
		  'find_object'/2,
		  'fsck_input'/4,
		  'init_freelist'/2,
		  'initiate_file'/11,
		  'mark_dirty'/1,
		  'may_grow'/3,
		  'module_info'/0,
		  'module_info'/1,
		  'no_slots'/1,
		  'output_objs'/4,
		  're_hash'/2,
		  'read_file_header'/2,
		  'scan_objs'/8,
		  'slot_objs'/2,
		  'sz2pos'/1,
		  'table_parameters'/1,
		  'v_segments'/1,
		  'write_cache'/1]
    attributes []
'mark_dirty'/1 =
    %% Line 200
    fun (_cor0) ->
	%% Line 202
	case call 'dets_utils':'pwrite'
		 (_cor0, [{8,#{#<0>(8,1,'integer',['unsigned'|['big']]),
			       #<0>(8,1,'integer',['unsigned'|['big']]),
			       #<0>(8,1,'integer',['unsigned'|['big']]),
			       #<0>(8,1,'integer',['unsigned'|['big']])}#}]) of
	  <{_X_NewHead,'ok'}> when 'true' ->
	      %% Line 203
	      case call 'dets_utils':'sync'
		       (_cor0) of
		<'ok'> when 'true' ->
		    %% Line 204
		    ( case _cor0 of
			( <( {'head',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_rec0,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38}
			     -| ['compiler_generated'] )> when 'true' ->
			      case call 'dets_utils':'position'
				       (_cor0, _rec0) of
				<{'ok',_X_Pos}> when 'true' ->
				    let <_cor40> =
					%% Line 205
					call 'dets_utils':'truncate'
					    (_cor0, 'cur')
				    in  %% Line 205
					case _cor40 of
					  <'ok'> when 'true' ->
					      ( _cor40
						-| ['compiler_generated'] )
					  ( <_cor7> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_cor7})
					    -| ['compiler_generated'] )
					end
				( <_cor6> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor6})
				  -| ['compiler_generated'] )
			      end
			  -| ['compiler_generated'] )
			( <_cor39> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','head'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'initiate_file'/11 =
    %% Line 208
    fun (_cor10,_cor9,_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Factor> =
	    %% Line 214
	    apply 'est_no_segments'/1
		(_cor5)
	in  let <_fol1> =
		%% Line 216
		call 'erlang':'*'
		    (256, Factor)
	    in  let <_cor21> =
		    %% Line 222
		    call 'dets_utils':'type_to_code'
			(_cor7)
		in  let <_cor22> =
			%% Line 219
			#{#<0>(32,1,'integer',['unsigned'|['big']]),
			  #<11259375>(%% Line 220
				      32,1,'integer',['unsigned'|['big']]),
			  #<0>(%% Line 221
			       32,1,'integer',['unsigned'|['big']]),
			  #<_cor21>(%% Line 222
				    32,1,'integer',['unsigned'|['big']]),
			  #<8>(%% Line 223
			       32,1,'integer',['unsigned'|['big']]),
			  #<_fol1>(%% Line 224
				   32,1,'integer',['unsigned'|['big']]),
			  #<_fol1>(%% Line 225
				   32,1,'integer',['unsigned'|['big']]),
			  #<_cor6>(%% Line 226
				   32,1,'integer',['unsigned'|['big']]),
			  #<0>(%% Line 227
			       32,1,'integer',['unsigned'|['big']]),
			  #<0>(%% Line 228
			       32,1,'integer',['unsigned'|['big']]),
			  #<%% Line 229
			    0>(32768,8,'integer',['unsigned'|['big']]),
			  #<%% Line 230
			    0>(1024,8,'integer',['unsigned'|['big']])}#
		    in  do  %% Line 218
			    call 'dets_utils':'pwrite'
				(_cor10, _cor8, 0, _cor22)
			    do  %% Line 235
				call 'dets_utils':'pwrite'
				    (_cor10, _cor8, 40, #{#<0>(8,1,'integer',['unsigned'|['big']]),
							  #<0>(8,1,'integer',['unsigned'|['big']]),
							  #<128>(8,1,'integer',['unsigned'|['big']]),
							  #<40>(8,1,'integer',['unsigned'|['big']])}#)
				do  %% Line 236
				    apply 'segp_cache'/2
					(40, 32808)
				    let <Ftab> =
					%% Line 238
					call 'dets_utils':'init_alloc'
					    (33832)
				    in  let <H0> =
					    %% Line 239
					    {'head','undefined','undefined','undefined',_cor10,'undefined','undefined','undefined','undefined','undefined','undefined',Ftab,'undefined','undefined','undefined','undefined','false','undefined','undefined','undefined','undefined','undefined','undefined','read_write','false','undefined','undefined','undefined','undefined','undefined','undefined',33832}
					in  %% Line 240
					    case apply 'init_more_segments'/5
						     (H0, 1, Factor, 'undefined', []) of
					      <{H1,Ws}> when 'true' ->
						  do  %% Line 243
						      call 'dets_utils':'pwrite'
							  (_cor10, _cor8, Ws)
						      let <_cor46> =
							  %% Line 248
							  call 'erlang':'*'
							      (_fol1, 2)
						      in  %% Line 255
							  ( case H1 of
							      ( <( {'head',_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_rec1,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88}
								   -| ['compiler_generated'] )> when 'true' ->
								    let <_cor43> =
									%% Line 259
									call 'erlang':'*'
									    (Factor, 256)
								    in  let <_cor41> =
									    %% Line 260
									    apply 'no_segs'/1
										(_cor4)
									in  let <_cor42> =
										%% Line 260
										call 'erlang':'*'
										    (_cor41, 256)
									    in  let <_cor40> =
										    %% Line 265
										    call 'dets_utils':'new_cache'
											(_cor2)
										in  let <Head> =
											{'head',_fol1,_cor46,_fol1,_cor10,0,'undefined','undefined',0,_cor7,_cor6,_rec1,'undefined','undefined',_cor1,'dirty','false',%% Line 257
																										      'phash','undefined',_cor43,_cor42,_cor40,_cor8,'read_write',_cor3,_cor9,'undefined','undefined',8,%% Line 269
																																							'dets_v8',%% Line 267
																																								  16,33832}
										    in  %% Line 271
											{'ok',Head}
								-| ['compiler_generated'] )
							      ( <_cor89> when 'true' ->
								    ( call ( 'erlang'
									     -| ['compiler_generated'] ):( 'error'
													   -| ['compiler_generated'] )
									  (( {'badrecord','head'}
									     -| ['compiler_generated'] ))
								      -| ['compiler_generated'] )
								-| ['compiler_generated'] )
							    end
							    -| ['compiler_generated'] )
					      ( <_cor36> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_cor36})
						-| ['compiler_generated'] )
					    end
'est_no_segments'/1 =
    %% Line 273
    fun (_cor0) ->
	case _cor0 of
	  <MinSlots>
	      when try
		    let <_cor1> =
			call 'erlang':'bsr'
			    (_cor0, 8)
		    in  let <_cor2> =
			    call 'erlang':'+'
				(1, _cor1)
			in  call 'erlang':'>'
				(_cor2, 8192)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 274
	      8192
	  %% Line 275
	  <MinSlots> when 'true' ->
	      let <_cor3> =
		  %% Line 276
		  call 'erlang':'bsr'
		      (MinSlots, 8)
	      in  %% Line 276
		  call 'erlang':'+'
		      (1, _cor3)
	end
'init_more_segments'/5 =
    %% Line 278
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Head,SegNo,Factor,'undefined',Ws>
	      when call 'erlang':'<'
		    (SegNo,
		     Factor) ->
	      let <_cor5> =
		  %% Line 279
		  apply 'seg_zero'/0
		      ()
	      in  %% Line 279
		  apply 'init_more_segments'/5
		      (Head, SegNo, Factor, _cor5, Ws)
	  %% Line 280
	  <Head,SegNo,Factor,SegZero,Ws>
	      when call 'erlang':'<'
		    (SegNo,
		     Factor) ->
	      %% Line 281
	      case apply 'allocate_segment'/3
		       (Head, SegZero, SegNo) of
		<{NewHead,W}> when 'true' ->
		    let <_cor8> =
			%% Line 282
			call 'erlang':'+'
			    (SegNo, 1)
		    in  let <_cor7> =
			    %% Line 282
			    call 'erlang':'++'
				(W, Ws)
			in  %% Line 282
			    apply 'init_more_segments'/5
				(NewHead, _cor8, Factor, SegZero, _cor7)
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor6})
		  -| ['compiler_generated'] )
	      end
	  %% Line 283
	  <Head,_X_SegNo,_X_Factor,_X_SegZero,Ws> when 'true' ->
	      %% Line 284
	      {Head,Ws}
	end
'allocate_segment'/3 =
    %% Line 286
    fun (_cor2,_cor1,_cor0) ->
	%% Line 288
	case call 'dets_utils':'alloc'
		 (_cor2, 1024) of
	  <{NewHead,Segment,_cor13}> when 'true' ->
	      let <InitSegment> = {%% Line 289
		   Segment,_cor1}
	      in  let <_cor6> =
		      %% Line 290
		      call 'erlang':'*'
			  (4, _cor0)
		  in  let <Pos> =
			  %% Line 290
			  call 'erlang':'+'
			      (40, _cor6)
		      in  do  %% Line 291
			      apply 'segp_cache'/2
				  (Pos, Segment)
			      let <_cor8> =
				  %% Line 292
				  #{#<Segment>(32,1,'integer',['unsigned'|['big']])}#
			      in  let <SegPointer> = {%% Line 292
				       Pos,_cor8}
				  in  %% Line 293
				      {NewHead,[InitSegment|[SegPointer|[]]]}
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor4})
	    -| ['compiler_generated'] )
	end
'init_freelist'/2 =
    %% Line 296
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Head,{'convert_freelist',_X_Version}> when 'true' ->
	      let <Ftab> =
		  %% Line 303
		  call 'dets_utils':'empty_free_lists'
		      ()
	      in  %% Line 304
		  ( case Head of
		      ( <( {'head',_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_rec2,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_cor6> =
				catch
				    %% Line 305
				    apply 'prterm'/3
					(Head, _rec2, 12)
			    in  %% Line 305
				case _cor6 of
				  %% Line 306
				  <{0,_X_Sz,Term}> when 'true' ->
				      let <FreeList1> =
					  %% Line 307
					  call 'lists':'reverse'
					      (Term)
				      in  let <FreeList> =
					      %% Line 308
					      call 'dets_utils':'init_slots_from_old_file'
						  (FreeList1, Ftab)
					  in  let <_cor13> =
						  %% Line 309
						  call 'erlang':'setelement'
						      (32, Head, 33832)
					      in  %% Line 309
						  call 'erlang':'setelement'
						      (12, _cor13, FreeList)
				  %% Line 310
				  <_cor96> when 'true' ->
				      %% Line 311
				      call 'erlang':'throw'
					  ({'error',{'bad_freelists',_cor53}})
				end
			-| ['compiler_generated'] )
		      ( <_cor63> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','head'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 313
	  <Head,_cor128> when 'true' ->
	      %% Line 315
	      ( case Head of
		  ( <( {'head',_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_rec6,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150,_cor151,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor21> =
			    catch
				%% Line 316
				apply 'prterm'/3
				    (Head, _rec6, 12)
			in  %% Line 316
			    case _cor21 of
			      %% Line 317
			      <{0,_X_Sz,Term}> when 'true' ->
				  let <_cor26> =
				      %% Line 318
				      call 'erlang':'setelement'
					  (32, Head, 33832)
				  in  %% Line 318
				      call 'erlang':'setelement'
					  (12, _cor26, Term)
			      %% Line 319
			      <_cor192> when 'true' ->
				  %% Line 320
				  call 'erlang':'throw'
				      ({'error',{'bad_freelists',_cor149}})
			    end
		    -| ['compiler_generated'] )
		  ( <_cor159> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'read_file_header'/2 =
    %% Line 324
    fun (_cor1,_cor0) ->
	%% Line 325
	case call 'dets_utils':'pread_close'
		 (_cor1, _cor0, 0, 40) of
	  <{'ok',Bin}> when 'true' ->
	      %% Line 326
	      case %% Line 327
		   apply 'bin2ints'/1
		       (Bin) of
		<[Freelist|[Cookie|[CP|[Type2|[Version|[M|[Next|[Kp|[NoObjects|[N|[]]]]]]]]]]]> when 'true' ->
		    %% Line 328
		    case call 'dets_utils':'position_close'
			     (_cor1, _cor0, 'eof') of
		      <{'ok',EOF}> when 'true' ->
			  let <_cor5> =
			      %% Line 329
			      call 'erlang':'-'
				  (EOF, 4)
			  in  %% Line 329
			      case call 'dets_utils':'pread_close'
				       (_cor1, _cor0, _cor5, 4) of
				<{'ok',#{#<FileSize>(32,1,'integer',['unsigned'|['big']])}#}> when 'true' ->
				    let <_cor9> =
					%% Line 334
					call 'dets_utils':'code_to_type'
					    (Type2)
				    in  let <FH> =
					    %% Line 330
					    {'fileheader',Freelist,33832,%% Line 332
									 Cookie,%% Line 333
										CP,_cor9,%% Line 335
											 Version,%% Line 336
												 M,%% Line 337
												   Next,%% Line 338
													Kp,%% Line 339
													   NoObjects,'undefined',%% Line 340
																 256,33554432,'undefined','undefined','undefined','undefined','undefined',%% Line 342
																									  FileSize,%% Line 343
																										   EOF,%% Line 344
																										       N,%% Line 345
																											 'dets_v8'}
					in  %% Line 346
					    {'ok',_cor1,FH}
				( <_cor6> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor6})
				  -| ['compiler_generated'] )
			      end
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'check_file_header'/2 =
    %% Line 350
    fun (_cor1,_cor0) ->
	let <_cor77> =
	    %% Line 352
	    case <> of
	      %% Line 353
	      <>
		  when ( try
			  ( case <> of
			      ( <>
				    when ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'is_record'
									     -| ['compiler_generated'] )
					    (_cor1,
					     ( 'fileheader'
					       -| ['compiler_generated'] ),
					     ( 23
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] ) ->
				    let <_cor6> =
					( call 'erlang':'element'
					      (4, _cor1)
					  -| ['compiler_generated'] )
				    in  ( call 'erlang':'=/='
					      (_cor6, 11259375)
					  -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    'false'
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false'
		      -| ['compiler_generated'] ) ->
		  %% Line 354
		  {'error','not_a_dets_file'}
	      %% Line 355
	      <>
		  when ( try
			  ( case <> of
			      ( <>
				    when ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'is_record'
									     -| ['compiler_generated'] )
					    (_cor1,
					     ( 'fileheader'
					       -| ['compiler_generated'] ),
					     ( 23
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] ) ->
				    let <_cor12> =
					( call 'erlang':'element'
					      (6, _cor1)
					  -| ['compiler_generated'] )
				    in  ( call 'erlang':'=:='
					      (_cor12, 'badtype')
					  -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    'false'
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false'
		      -| ['compiler_generated'] ) ->
		  %% Line 356
		  {'error','invalid_type_code'}
	      %% Line 357
	      <>
		  when ( try
			  ( case <> of
			      ( <>
				    when ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'is_record'
									     -| ['compiler_generated'] )
					    (_cor1,
					     ( 'fileheader'
					       -| ['compiler_generated'] ),
					     ( 23
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] ) ->
				    let <_cor18> =
					( call 'erlang':'element'
					      (7, _cor1)
					  -| ['compiler_generated'] )
				    in  ( call 'erlang':'=/='
					      (_cor18, 8)
					  -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    'false'
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false'
		      -| ['compiler_generated'] ) ->
		  %% Line 358
		  ( case _cor1 of
		      ( <( {'fileheader',_cor106,_cor107,_cor108,_cor109,_cor110,_rec10,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126}
			   -| ['compiler_generated'] )> when 'true' ->
			    case call 'lists':'member'
				     (_rec10, %% Line 359
					      [6|[7]]) of
			      %% Line 360
			      <'true'> when 'true' ->
				  %% Line 361
				  {'error','version_bump'}
			      %% Line 362
			      <'false'> when 'true' ->
				  %% Line 363
				  {'error','bad_version'}
			      ( <_cor22> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor22})
				-| ['compiler_generated'] )
			    end
			-| ['compiler_generated'] )
		      ( <_cor127> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','fileheader'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      %% Line 365
	      <>
		  when ( try
			  ( case <> of
			      ( <>
				    when ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'is_record'
									     -| ['compiler_generated'] )
					    (_cor1,
					     ( 'fileheader'
					       -| ['compiler_generated'] ),
					     ( 23
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] ) ->
				    let <_cor28> =
					( call 'erlang':'element'
					      (20, _cor1)
					  -| ['compiler_generated'] )
				    in  let <_cor27> =
					    ( call 'erlang':'element'
						  (21, _cor1)
					      -| ['compiler_generated'] )
					in  ( call 'erlang':'=/='
						  (_cor28, _cor27)
					      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    'false'
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false'
		      -| ['compiler_generated'] ) ->
		  %% Line 366
		  {'error','not_closed'}
	      %% Line 367
	      <>
		  when ( try
			  ( case <> of
			      ( <>
				    when ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'is_record'
									     -| ['compiler_generated'] )
					    (_cor1,
					     ( 'fileheader'
					       -| ['compiler_generated'] ),
					     ( 23
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] ) ->
				    let <_cor34> =
					( call 'erlang':'element'
					      (5, _cor1)
					  -| ['compiler_generated'] )
				    in  ( call 'erlang':'=:='
					      (_cor34, 1)
					  -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    'false'
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false'
		      -| ['compiler_generated'] ) ->
		  %% Line 368
		  ( case _cor1 of
		      ( <( {'fileheader',_cor128,_cor129,_cor130,_cor131,_cor132,_rec11,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148}
			   -| ['compiler_generated'] )> when 'true' ->
			    case call 'lists':'member'
				     (_rec11, %% Line 369
					      [8]) of
			      %% Line 370
			      <'true'> when 'true' ->
				  %% Line 371
				  {'ok',{'convert_freelist',_rec11},'hash'}
			      %% Line 372
			      <'false'> when 'true' ->
				  %% Line 373
				  {'error','not_closed'}
			      ( <_cor40> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor40})
				-| ['compiler_generated'] )
			    end
			-| ['compiler_generated'] )
		      ( <_cor149> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','fileheader'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      %% Line 375
	      <>
		  when ( try
			  ( case <> of
			      ( <>
				    when ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'is_record'
									     -| ['compiler_generated'] )
					    (_cor1,
					     ( 'fileheader'
					       -| ['compiler_generated'] ),
					     ( 23
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] ) ->
				    let <_cor45> =
					( call 'erlang':'element'
					      (5, _cor1)
					  -| ['compiler_generated'] )
				    in  ( call 'erlang':'=:='
					      (_cor45, 2)
					  -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    'false'
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false'
		      -| ['compiler_generated'] ) ->
		  %% Line 376
		  {'ok','true','hash'}
	      %% Line 377
	      <>
		  when ( try
			  ( case <> of
			      ( <>
				    when ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'is_record'
									     -| ['compiler_generated'] )
					    (_cor1,
					     ( 'fileheader'
					       -| ['compiler_generated'] ),
					     ( 23
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] ) ->
				    let <_cor51> =
					( call 'erlang':'element'
					      (5, _cor1)
					  -| ['compiler_generated'] )
				    in  ( call 'erlang':'=:='
					      (_cor51, %% Line 378
						       3)
					  -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    'false'
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false'
		      -| ['compiler_generated'] ) ->
		  %% Line 379
		  {'ok','need_compacting','hash'}
	      %% Line 380
	      <>
		  when ( try
			  ( case <> of
			      ( <>
				    when ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'is_record'
									     -| ['compiler_generated'] )
					    (_cor1,
					     ( 'fileheader'
					       -| ['compiler_generated'] ),
					     ( 23
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] ) ->
				    let <_cor57> =
					( call 'erlang':'element'
					      (5, _cor1)
					  -| ['compiler_generated'] )
				    in  ( call 'erlang':'=:='
					      (_cor57, 4)
					  -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    'false'
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false'
		      -| ['compiler_generated'] ) ->
		  %% Line 381
		  {'ok','true','phash'}
	      %% Line 382
	      <>
		  when ( try
			  ( case <> of
			      ( <>
				    when ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'is_record'
									     -| ['compiler_generated'] )
					    (_cor1,
					     ( 'fileheader'
					       -| ['compiler_generated'] ),
					     ( 23
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] ) ->
				    let <_cor63> =
					( call 'erlang':'element'
					      (5, _cor1)
					  -| ['compiler_generated'] )
				    in  ( call 'erlang':'=:='
					      (_cor63, %% Line 383
						       5)
					  -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    'false'
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false'
		      -| ['compiler_generated'] ) ->
		  %% Line 384
		  {'ok','need_compacting','phash'}
	      %% Line 385
	      <>
		  when ( try
			  ( case <> of
			      ( <>
				    when ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'is_record'
									     -| ['compiler_generated'] )
					    (_cor1,
					     ( 'fileheader'
					       -| ['compiler_generated'] ),
					     ( 23
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] ) ->
				    let <_cor69> =
					( call 'erlang':'element'
					      (5, _cor1)
					  -| ['compiler_generated'] )
				    in  ( call 'erlang':'=:='
					      (_cor69, 0)
					  -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    'false'
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false'
		      -| ['compiler_generated'] ) ->
		  %% Line 386
		  {'error','not_closed'}
	      %% Line 387
	      <>
		  when ( try
			  ( case <> of
			      ( <>
				    when ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'is_record'
									     -| ['compiler_generated'] )
					    (_cor1,
					     ( 'fileheader'
					       -| ['compiler_generated'] ),
					     ( 23
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] ) ->
				    let <_cor75> =
					( call 'erlang':'element'
					      (5, _cor1)
					  -| ['compiler_generated'] )
				    in  ( call 'erlang':'>'
					      (_cor75, %% Line 388
						       5)
					  -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    'false'
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false'
		      -| ['compiler_generated'] ) ->
		  %% Line 389
		  {'error','not_closed'}
	      %% Line 390
	      <> when 'true' ->
		  %% Line 391
		  {'error','not_a_dets_file'}
	    end
	in  %% Line 393
	    case _cor77 of
	      %% Line 394
	      <{'ok',ExtraInfo,HashAlg}> when 'true' ->
		  %% Line 396
		  ( case _cor1 of
		      ( <( {'fileheader',_cor172,_cor173,_cor174,_cor175,_cor176,_cor177,_rec13,_cor178,_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191,_cor192}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_cor99> =
				%% Line 397
				call 'erlang':'*'
				    (_rec13, 2)
			    in  let <H> =
				    {'head',_rec13,_cor99,_cor178,_cor0,_cor180,'undefined','undefined',_cor191,_cor176,_cor179,'undefined',_cor172,'undefined',%% Line 404
																				'infinity',%% Line 403
																					   'saved',%% Line 405
																						   'false',%% Line 407
																							   HashAlg,'undefined',_cor182,_cor183,'undefined','undefined','read_write','false','undefined','undefined','undefined',%% Line 411
																																						8,%% Line 412
																																						  'dets_v8',%% Line 413
																																							    16,_cor173}
				in  %% Line 415
				    {'ok',H,ExtraInfo}
			-| ['compiler_generated'] )
		      ( <_cor193> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','fileheader'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      %% Line 416
	      <Error> when 'true' ->
		  %% Line 417
		  Error
	    end
'cache_segps'/3 =
    %% Line 420
    fun (_cor2,_cor1,_cor0) ->
	let <NSegs> =
	    %% Line 421
	    apply 'no_segs'/1
		(_cor0)
	in  let <_cor4> =
		%% Line 422
		call 'erlang':'*'
		    (4, NSegs)
	    in  %% Line 422
		case call 'dets_utils':'pread_close'
			 (_cor2, _cor1, 40, _cor4) of
		  <{'ok',Bin}> when 'true' ->
		      let <Fun> =
			  %% Line 423
			  ( fun (_cor7,_cor6) ->
				do  apply 'segp_cache'/2
					(_cor6, _cor7)
				    call 'erlang':'+'
					(_cor6, 4)
			    -| [{'id',{0,0,'-cache_segps/3-fun-0-'}}] )
		      in  let <_cor11> =
			      %% Line 424
			      apply 'bin2ints'/1
				  (Bin)
			  in  %% Line 424
			      call 'lists':'foldl'
				  (Fun, 40, _cor11)
		  ( <_cor5> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor5})
		    -| ['compiler_generated'] )
		end
'no_segs'/1 =
    %% Line 426
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 427
	    call 'erlang':'-'
		(_cor0, 1)
	in  let <_cor2> =
		%% Line 427
		call 'erlang':'bsr'
		    (_cor1, 8)
	    in  %% Line 427
		call 'erlang':'+'
		    (_cor2, 1)
'bin2ints'/1 =
    %% Line 429
    fun (_cor0) ->
	case ( _cor0
	       -| ['reuse_for_context'] ) of
	  <#{#<Int>(32,1,'integer',['unsigned'|['big']]),
	     #<B>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor1> =
		  %% Line 430
		  apply 'bin2ints'/1
		      (B)
	      in  %% Line 430
		  [Int|_cor1]
	  %% Line 431
	  <#{}#> when 'true' ->
	      %% Line 432
	      []
	  ( <_cor2> when 'true' ->
		do  primop 'bs_context_to_binary'
			(_cor2)
		    ( primop 'match_fail'
			  ({'function_clause',_cor2})
		      -| [{'function_name',{'bin2ints',1}}] )
	    -| ['compiler_generated'] )
	end
'bulk_input'/3 =
    %% Line 438
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 439
	    call 'erlang':'make_ref'
		()
	in  %% Line 439
	    apply 'bulk_input'/4
		(_cor2, _cor1, _cor0, _cor3)
'bulk_input'/4 =
    %% Line 441
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 442
	( fun (_cor17) ->
	      case _cor17 of
		<'close'> when 'true' ->
		    %% Line 443
		    'ok'
		%% Line 444
		<'read'> when 'true' ->
		    let <_cor5> =
			catch
			    let <_cor4> =
				%% Line 445
				apply _cor2
				    ('read')
			    in  %% Line 445
				{_cor0,_cor4}
		    in  %% Line 445
			case _cor5 of
			  %% Line 446
			  <{_cor23,'end_of_input'}>
			      when call 'erlang':'=:='
				    (_cor23,
				     _cor0) ->
			      %% Line 447
			      'end_of_input'
			  %% Line 448
			  <{_cor24,{L0,NewInitFun}}>
			      when let <_cor25> =
				    call 'erlang':'=:='
					(_cor24, _cor0)
				in  let <_cor26> =
					try
					    let <_cor6> =
						call 'erlang':'is_list'
						    (L0)
					    in  let <_cor7> =
						    %% Line 449
						    call 'erlang':'is_function'
							(NewInitFun)
						in  call 'erlang':'and'
							(_cor6, _cor7)
					of <Try> ->
					    Try
					catch <T,R> ->
					    'false'
				    in  call 'erlang':'and'
					    (_cor25, _cor26) ->
			      %% Line 450
			      ( case _cor3 of
				  ( <( {'head',_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_rec24,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56}
				       -| ['compiler_generated'] )> when 'true' ->
					let <_cor11> =
					    catch
						%% Line 451
						apply 'bulk_objects'/5
						    (L0, _cor3, _cor1, _rec24, [])
					in  %% Line 451
					    case _cor11 of
					      %% Line 452
					      <{'EXIT',_X_Error}> when 'true' ->
						  do  catch
							  %% Line 453
							  apply NewInitFun
							      ('close')
						      %% Line 454
						      {'error','invalid_objects_list'}
					      %% Line 455
					      <L> when 'true' ->
						  let <_cor14> =
						      %% Line 456
						      apply 'bulk_input'/4
							  (_cor3, NewInitFun, _cor1, _cor0)
						  in  %% Line 456
						      {L,_cor14}
					    end
				    -| ['compiler_generated'] )
				  ( <_cor57> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','head'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  %% Line 458
			  <{_cor58,Value}>
			      when call 'erlang':'=:='
				    (_cor58,
				     _cor0) ->
			      %% Line 459
			      {'error',{'init_fun',Value}}
			  %% Line 460
			  <Error> when 'true' ->
			      %% Line 461
			      call 'erlang':'throw'
				  ({'thrown',Error})
			end
		( <_cor18> when 'true' ->
		      ( primop 'match_fail'
			    ({'function_clause',_cor18})
			-| [{'function_name',{'-bulk_input/4-fun-0-',1}}] )
		  -| ['compiler_generated'] )
	      end
	  -| [{'id',{0,0,'-bulk_input/4-fun-0-'}}] )
'bulk_objects'/5 =
    %% Line 465
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[T|Ts],Head,Cntrs,Kp,L> when 'true' ->
	      let <BT> =
		  %% Line 466
		  call 'erlang':'term_to_binary'
		      (T)
	      in  let <Sz> =
		      %% Line 467
		      call 'erlang':'byte_size'
			  (BT)
		  in  let <_cor7> =
			  %% Line 468
			  call 'erlang':'+'
			      (Sz, 12)
		      in  ( let <_fol781> =
				%% Line 1439
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( '+'
								       -| ['compiler_generated'] )
				      (_cor7, ( 1
						-| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    in  ( let <_fol782> =
				      %% Line 1439
				      ( call ( 'dets_utils'
					       -| ['compiler_generated'] ):( 'log2'
									     -| ['compiler_generated'] )
					    (_fol781)
					-| ['compiler_generated'] )
				  in  let <LogSz> =
					  %% Line 1439
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( '+'
										 -| ['compiler_generated'] )
						(( 1
						   -| ['compiler_generated'] ), _fol782)
					    -| ['compiler_generated'] )
				      in  do  %% Line 469
					      apply 'count_object'/2
						  (Cntrs, LogSz)
					      let <Key> =
						  %% Line 470
						  call 'erlang':'element'
						      (Kp, T)
					      in  let <_cor10> =
						      %% Line 471
						      apply 'make_object'/4
							  (Head, Key, LogSz, BT)
						  in  %% Line 471
						      apply 'bulk_objects'/5
							  (Ts, Head, Cntrs, Kp, [_cor10|L])
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
	  %% Line 472
	  <[],_X_Head,_X_Cntrs,_X_Kp,L> when 'true' ->
	      %% Line 473
	      L
	  ( <_cor15,_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'bulk_objects',5}}] )
	    -| ['compiler_generated'] )
	end
'output_objs'/4 =
    %% Line 484
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 485
	( fun (_cor35) ->
	      case _cor35 of
		<'close'> when 'true' ->
		    %% Line 486
		    {'ok',0,_cor2}
		%% Line 487
		<[]> when 'true' ->
		    %% Line 488
		    apply 'output_objs'/4
			(_cor3, _cor2, _cor1, _cor0)
		%% Line 489
		<L> when 'true' ->
		    let <_cor4> =
			%% Line 491
			call 'ets':'tab2list'
			    (_cor0)
		    in  let <Count> =
			    %% Line 491
			    call 'lists':'sort'
				(_cor4)
			in  let <RCount> =
				%% Line 492
				call 'lists':'reverse'
				    (Count)
			    in  let <_cor11> =
				    %% Line 493
				    ( fun (_cor8,_cor7) ->
					  case <_cor8,_cor7> of
					    <{_X_Sz,No},A> when 'true' ->
						call 'erlang':'+'
						    (A, No)
					    ( <_cor10,_cor9> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor10,_cor9})
						    -| [{'function_name',{'-output_objs/4-fun-0-',2}}] )
					      -| ['compiler_generated'] )
					  end
				      -| [{'id',{0,0,'-output_objs/4-fun-0-'}}] )
				in  let <NoObjects> =
					%% Line 493
					call 'lists':'foldl'
					    (_cor11, 0, Count)
				    in  %% Line 494
					case _cor1 of
					  <{_cor41,MinSlots,_cor42}> when 'true' ->
					      %% Line 495
					      case <> of
						%% Line 500
						<>
						    when try
							  let <_cor14> =
							      call 'erlang':'=/='
								  (MinSlots, 'bulk_init')
							  in  let <_cor16> =
								  %% Line 501
								  call 'erlang':'bsr'
								      (NoObjects, 8)
							      in  let <_cor15> =
								      %% Line 501
								      call 'erlang':'bsr'
									  (MinSlots, 8)
								  in  let <_cor17> =
									  %% Line 501
									  call 'erlang':'-'
									      (_cor16, _cor15)
								      in  let <_cor18> =
									      %% Line 501
									      call 'erlang':'abs'
										  (_cor17)
									  in  let <_cor19> =
										  %% Line 501
										  call 'erlang':'>'
										      (_cor18, 5)
									      in  let <_cor21> =
										      %% Line 502
										      call 'erlang':'<'
											  (NoObjects, 2097152)
										  in  let <_cor22> =
											  call 'erlang':'and'
											      (_cor19, _cor21)
										      in  call 'erlang':'and'
											      (_cor14, _cor22)
						      of <Try> ->
							  Try
						      catch <T,R> ->
							  'false' ->
						    %% Line 503
						    {'try_again',NoObjects}
						%% Line 504
						<> when 'true' ->
						    %% Line 505
						    case _cor2 of
						      <{'head',_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73}> when 'true' ->
							  let <_cor25> =
							      call 'erlang':'setelement'
								  (6, _cor2, NoObjects)
							  in  ( let <_fol787> =
								    %% Line 1439
								    ( call ( 'dets_utils'
									     -| ['compiler_generated'] ):( 'log2'
													   -| ['compiler_generated'] )
									  (1025)
								      -| ['compiler_generated'] )
								in  ( let <_fol789> =
									  %% Line 1439
									  ( call ( 'erlang'
										   -| ['compiler_generated'] ):( '+'
														 -| ['compiler_generated'] )
										(( 1
										   -| ['compiler_generated'] ), _fol787)
									    -| ['compiler_generated'] )
								      in  ( let <_fol790> =
										%% Line 1427
										( call ( 'erlang'
											 -| ['compiler_generated'] ):( '-'
														       -| ['compiler_generated'] )
										      (_fol789, ( 1
												  -| ['compiler_generated'] ))
										  -| ['compiler_generated'] )
									    in  let <SegSz> =
										    %% Line 1427
										    ( call ( 'erlang'
											     -| ['compiler_generated'] ):( 'bsl'
															   -| ['compiler_generated'] )
											  (( 1
											     -| ['compiler_generated'] ), _fol790)
										      -| ['compiler_generated'] )
										in  let <_cor28> =
											%% Line 507
											call 'erlang':'-'
											    (SegSz, 1)
										    in  %% Line 507
											case call 'dets_utils':'alloc'
												 (_cor2, _cor28) of
											  <{_cor75,End,_cor76}> when 'true' ->
											      %% Line 510
											      case apply 'allocate_all_objects'/3
												       (_cor25, RCount, _cor0) of
												<{Head2,CT}> when 'true' ->
												    %% Line 511
												    case apply 'bin2term'/2
													     (L, []) of
												      <[E|Es]> when 'true' ->
													  %% Line 512
													  case %% Line 513
													       apply 'output_slots'/5
														   (E, Es, [E|[]], Head2, [0|CT]) of
													    <{NE,Acc,DCT1}> when 'true' ->
														let <NDCT> =
														    %% Line 514
														    apply 'write_all_sizes'/2
															(DCT1, _cor0)
														in  let <Max> =
															%% Line 515
															call 'ets':'info'
															    (_cor0, 'size')
														    in  %% Line 516
															apply 'output_objs2'/8
															    (NE, Acc, Head2, _cor0, NDCT, End, Max, Max)
													    ( <_cor32> when 'true' ->
														  primop 'match_fail'
														      ({'badmatch',_cor32})
													      -| ['compiler_generated'] )
													  end
												      ( <_cor31> when 'true' ->
													    primop 'match_fail'
														({'badmatch',_cor31})
													-| ['compiler_generated'] )
												    end
												( <_cor30> when 'true' ->
												      primop 'match_fail'
													  ({'badmatch',_cor30})
												  -| ['compiler_generated'] )
											      end
											  ( <_cor29> when 'true' ->
												primop 'match_fail'
												    ({'badmatch',_cor29})
											    -| ['compiler_generated'] )
											end
									    -| ['compiler_generated'] )
								      -| ['compiler_generated'] )
								-| ['compiler_generated'] )
						      ( <_cor74> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','head'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
					      end
					  ( <_cor13> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_cor13})
					    -| ['compiler_generated'] )
					end
	      end
	  -| [{'id',{0,0,'-output_objs/4-fun-1-'}}] )
'output_objs2'/8 =
    %% Line 520
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <E,Acc,Head,Cntrs,DCT,End,0,MaxNoChunks> when 'true' ->
	      let <NDCT> =
		  %% Line 521
		  apply 'write_all_sizes'/2
		      (DCT, Cntrs)
	      in  %% Line 522
		  apply 'output_objs2'/8
		      (E, Acc, Head, Cntrs, NDCT, End, MaxNoChunks, MaxNoChunks)
	  %% Line 523
	  <E,Acc,Head,Cntrs,DCT,End,ChunkI,MaxNoChunks> when 'true' ->
	      %% Line 524
	      ( fun (_cor28) ->
		    case _cor28 of
		      <'close'> when 'true' ->
			  let <DCT1> =
			      %% Line 525
			      apply 'output_slot'/3
				  (Acc, Head, DCT)
			  in  %% Line 527
			      case apply 'write_all_sizes'/2
				       (DCT1, Cntrs) of
				<[NoDups|CT]> when 'true' ->
				    let <_cor12> =
					%% Line 528
					call 'erlang':'tuple_size'
					    (CT)
				    in  %% Line 528
					case call 'erlang':'element'
						 (_cor12, CT) of
					  <[SegAddr|[]]> when 'true' ->
					      let <FinalZ> =
						  %% Line 529
						  call 'erlang':'-'
						      (End, SegAddr)
					      in  %% Line 530
						  case %% Line 531
						       call 'ets':'lookup'
							   (Cntrs, 10000) of
						    <[{10000,_cor38,{FileName,Fd},_cor39}|[]]> when 'true' ->
							let <_cor16> =
							    %% Line 533
							    call 'dets_utils':'make_zeros'
								(FinalZ)
							in  %% Line 532
							    case call 'dets_utils':'fwrite'
								     (Fd, FileName, _cor16) of
							      <'ok'> when 'true' ->
								  %% Line 534
								  ( case Head of
								      ( <( {'head',_cor40,_cor41,_cor42,_cor43,_rec28,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69}
									   -| ['compiler_generated'] )> when 'true' ->
									    let <_rec26> =
										call 'erlang':'-'
										    (_rec28, NoDups)
									    in  let <_cor23> =
										    call 'erlang':'setelement'
											(6, Head, _rec26)
										in  %% Line 535
										    {'ok',NoDups,_cor23}
									-| ['compiler_generated'] )
								      ( <_cor70> when 'true' ->
									    ( call ( 'erlang'
										     -| ['compiler_generated'] ):( 'error'
														   -| ['compiler_generated'] )
										  (( {'badrecord','head'}
										     -| ['compiler_generated'] ))
									      -| ['compiler_generated'] )
									-| ['compiler_generated'] )
								    end
								    -| ['compiler_generated'] )
							      ( <_cor17> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_cor17})
								-| ['compiler_generated'] )
							    end
						    ( <_cor15> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor15})
						      -| ['compiler_generated'] )
						  end
					  ( <_cor13> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_cor13})
					    -| ['compiler_generated'] )
					end
				( <_cor11> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor11})
				  -| ['compiler_generated'] )
			      end
		      %% Line 536
		      <L> when 'true' ->
			  let <Es> =
			      %% Line 537
			      apply 'bin2term'/2
				  (L, [])
			  in  %% Line 538
			      case apply 'output_slots'/5
				       (E, Es, Acc, Head, DCT) of
				<{NE,NAcc,NDCT}> when 'true' ->
				    let <_cor27> =
					%% Line 540
					call 'erlang':'-'
					    (ChunkI, 1)
				    in  %% Line 539
					apply 'output_objs2'/8
					    (NE, NAcc, Head, Cntrs, NDCT, End, _cor27, %% Line 540
										       MaxNoChunks)
				( <_cor26> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor26})
				  -| ['compiler_generated'] )
			      end
		    end
		-| [{'id',{0,0,'-output_objs2/8-fun-0-'}}] )
	end
'allocate_all_objects'/3 =
    %% Line 548
    fun (_cor2,_cor1,_cor0) ->
	( let <_fol861> =
	      %% Line 1439
	      ( call ( 'dets_utils'
		       -| ['compiler_generated'] ):( 'log2'
						     -| ['compiler_generated'] )
		    (1025)
		-| ['compiler_generated'] )
	  in  ( let <_fol863> =
		    %% Line 1439
		    ( call ( 'erlang'
			     -| ['compiler_generated'] ):( '+'
							   -| ['compiler_generated'] )
			  (( 1
			     -| ['compiler_generated'] ), _fol861)
		      -| ['compiler_generated'] )
		in  ( let <_fol864> =
			  %% Line 1427
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( '-'
								 -| ['compiler_generated'] )
				(_fol863, ( 1
					    -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      in  let <SegSize> =
			      %% Line 1427
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'bsl'
								     -| ['compiler_generated'] )
				    (( 1
				       -| ['compiler_generated'] ), _fol864)
				-| ['compiler_generated'] )
			  in  %% Line 550
			      case apply 'alloc_hole'/3
				       (_cor1, _cor2, SegSize) of
				<{Head1,HSz,HN,HA}> when 'true' ->
				    %% Line 551
				    case call 'erlang':'hd'
					     (_cor1) of
				      <{Max,_cor13}> when 'true' ->
					  let <_cor6> =
					      %% Line 552
					      call 'erlang':'+'
						  (Max, 1)
					  in  let <CT> =
						  %% Line 552
						  call 'erlang':'make_tuple'
						      (_cor6, 'not_used')
					      in  %% Line 553
						  case apply 'allocate_all'/4
							   (Head1, _cor1, _cor0, CT) of
						    <{Head2,NCT}> when 'true' ->
							let <Head3> =
							    %% Line 554
							    apply 'free_hole'/4
								(Head2, HSz, HN, HA)
							in  %% Line 555
							    {Head3,NCT}
						    ( <_cor8> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor8})
						      -| ['compiler_generated'] )
						  end
				      ( <_cor5> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor5})
					-| ['compiler_generated'] )
				    end
				( <_cor4> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor4})
				  -| ['compiler_generated'] )
			      end
		      -| ['compiler_generated'] )
		-| ['compiler_generated'] )
	  -| ['compiler_generated'] )
'alloc_hole'/3 =
    %% Line 557
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{LSize,_cor18}|_cor19],Head,SegSz>
	      when try
		    let <_cor3> =
			call 'erlang':'-'
			    (LSize, 1)
		    in  let <_cor4> =
			    call 'erlang':'bsl'
				(1, _cor3)
			in  call 'erlang':'>'
				(_cor4, SegSz)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor5> =
		  %% Line 558
		  call 'erlang':'-'
		      (SegSz, 1)
	      in  %% Line 558
		  case call 'dets_utils':'alloc'
			   (Head, _cor5) of
		    <{_cor20,SegAddr,_cor21}> when 'true' ->
			let <_cor7> =
			    %% Line 559
			    call 'erlang':'-'
				(LSize, 1)
			in  let <_cor8> =
				%% Line 559
				call 'erlang':'bsl'
				    (1, _cor7)
			    in  let <Size> =
				    %% Line 559
				    call 'erlang':'-'
					(_cor8, 1)
				in  %% Line 560
				    case call 'dets_utils':'alloc'
					     (Head, Size) of
				      <{_cor22,Addr,_cor23}> when 'true' ->
					  let <_cor11> =
					      %% Line 561
					      call 'erlang':'-'
						  (Addr, SegAddr)
					  in  let <N> =
						  %% Line 561
						  call 'erlang':'div'
						      (_cor11, SegSz)
					      in  let <Head1> =
						      %% Line 562
						      call 'dets_utils':'alloc_many'
							  (Head, SegSz, N, SegAddr)
						  in  let <_cor14> =
							  %% Line 563
							  call 'erlang':'-'
							      (SegSz, 1)
						      in  %% Line 563
							  {Head1,_cor14,N,SegAddr}
				      ( <_cor10> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor10})
					-| ['compiler_generated'] )
				    end
		    ( <_cor6> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor6})
		      -| ['compiler_generated'] )
		  end
	  %% Line 564
	  <_X_Count,Head,_X_SegSz> when 'true' ->
	      %% Line 565
	      {Head,0,0,0}
	end
'free_hole'/4 =
    %% Line 567
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Head,_X_Size,0,_X_Addr> when 'true' ->
	      %% Line 568
	      Head
	  %% Line 569
	  <Head,Size,N,Addr> when 'true' ->
	      %% Line 570
	      case call 'dets_utils':'free'
		       (Head, Addr, Size) of
		<{Head1,_cor12}> when 'true' ->
		    let <_cor7> =
			%% Line 571
			call 'erlang':'-'
			    (N, 1)
		    in  let <_cor5> =
			    %% Line 571
			    call 'erlang':'+'
				(Addr, Size)
			in  let <_cor6> =
				%% Line 571
				call 'erlang':'+'
				    (_cor5, 1)
			    in  %% Line 571
				apply 'free_hole'/4
				    (Head1, Size, _cor7, _cor6)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	end
'allocate_all'/4 =
    %% Line 575
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Head,[{LSize,NoObjects}|Count],Cntrs,CT> when 'true' ->
	      let <_cor4> =
		  %% Line 576
		  call 'erlang':'-'
		      (LSize, 1)
	      in  let <_cor5> =
		      %% Line 576
		      call 'erlang':'bsl'
			  (1, _cor4)
		  in  let <Size> =
			  %% Line 576
			  call 'erlang':'-'
			      (_cor5, 1)
		      in  %% Line 577
			  case call 'dets_utils':'alloc'
				   (Head, Size) of
			    <{_X_Head,Addr,_cor23}> when 'true' ->
				let <_cor8> =
				    %% Line 578
				    call 'erlang':'+'
					(Size, 1)
				in  let <NewHead> =
					%% Line 578
					call 'dets_utils':'alloc_many'
					    (Head, _cor8, NoObjects, Addr)
				    in  %% Line 579
					case apply 'temp_file'/2
						 (Head, LSize) of
					  <{FileName,Fd}> when 'true' ->
					      %% Line 580
					      case call 'ets':'insert'
						       (Cntrs, {LSize,Addr,{FileName,Fd},NoObjects}) of
						<'true'> when 'true' ->
						    let <NCT> =
							%% Line 581
							call 'erlang':'setelement'
							    (LSize, CT, [Addr|[]])
						    in  %% Line 582
							apply 'allocate_all'/4
							    (NewHead, Count, Cntrs, NCT)
						( <_cor11> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_cor11})
						  -| ['compiler_generated'] )
					      end
					  ( <_cor10> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_cor10})
					    -| ['compiler_generated'] )
					end
			    ( <_cor7> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor7})
			      -| ['compiler_generated'] )
			  end
	  %% Line 583
	  <Head,[],Cntrs,CT> when 'true' ->
	      %% Line 586
	      case apply 'temp_file'/2
		       (Head, 10000) of
		<{FileName,Fd}> when 'true' ->
		    %% Line 588
		    case call 'ets':'insert'
			     (Cntrs, {10000,32808,{FileName,Fd},0}) of
		      <'true'> when 'true' ->
			  let <_cor17> =
			      %% Line 589
			      call 'erlang':'tuple_size'
				  (CT)
			  in  let <NCT> =
				  %% Line 589
				  call 'erlang':'setelement'
				      (_cor17, CT, [32808])
			      in  %% Line 590
				  {Head,NCT}
		      ( <_cor16> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor16})
			-| ['compiler_generated'] )
		    end
		( <_cor13> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor13})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor22,_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21,_cor20,_cor19})
		  -| [{'function_name',{'allocate_all',4}}] )
	    -| ['compiler_generated'] )
	end
'temp_file'/2 =
    %% Line 592
    fun (_cor1,_cor0) ->
	%% Line 593
	( case _cor1 of
	    ( <( {'head',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_rec29,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <TmpName> =
		      call 'lists':'concat'
			  ([_rec29|['.'|[_cor0|[]]]])
		  in  %% Line 594
		      case call 'dets_utils':'open'
			       (TmpName, ['raw'|['binary'|['write']]]) of
			<{'ok',Fd}> when 'true' ->
			    %% Line 595
			    {TmpName,Fd}
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor5})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor38> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'bin2term'/2 =
    %% Line 597
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[#{#<Slot>(32,1,'integer',['unsigned'|['big']]),
	      #<LogSize>(8,1,'integer',['unsigned'|['big']]),
	      #<BinTerm>('all',8,'binary',['unsigned'|['big']])}#|BTs],L> when 'true' ->
	      %% Line 598
	      apply 'bin2term'/2
		  (BTs, [{Slot,LogSize,BinTerm}|L])
	  %% Line 599
	  <[],L> when 'true' ->
	      %% Line 600
	      call 'lists':'reverse'
		  (L)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'bin2term',2}}] )
	    -| ['compiler_generated'] )
	end
'write_all_sizes'/2 =
    %% Line 602
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[D|CT],Cntrs> when 'true' ->
	      let <_cor2> =
		  %% Line 603
		  call 'erlang':'tuple_size'
		      (CT)
	      in  let <_cor3> =
		      %% Line 603
		      apply 'write_sizes'/4
			  (1, _cor2, CT, Cntrs)
		  in  %% Line 603
		      [D|_cor3]
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'write_all_sizes',2}}] )
	    -| ['compiler_generated'] )
	end
'write_sizes'/4 =
    %% Line 605
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Sz,_cor10,CT,Cntrs>
	      when call 'erlang':'=:='
		    (_cor10,
		     Sz) ->
	      %% Line 606
	      apply 'write_size'/4
		  (Sz, 10000, CT, Cntrs)
	  %% Line 607
	  <Sz,MaxSz,CT,Cntrs> when 'true' ->
	      let <NCT> =
		  %% Line 608
		  apply 'write_size'/4
		      (Sz, Sz, CT, Cntrs)
	      in  let <_cor5> =
		      %% Line 609
		      call 'erlang':'+'
			  (Sz, 1)
		  in  %% Line 609
		      apply 'write_sizes'/4
			  (_cor5, MaxSz, NCT, Cntrs)
	end
'write_size'/4 =
    %% Line 611
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 612
	case call 'erlang':'element'
		 (_cor3, _cor1) of
	  %% Line 613
	  <'not_used'> when 'true' ->
	      _cor1
	  %% Line 615
	  <[Addr|L]> when 'true' ->
	      %% Line 616
	      case call 'ets':'lookup_element'
		       (_cor0, _cor2, 3) of
		<{FileName,Fd}> when 'true' ->
		    let <_cor5> =
			%% Line 617
			call 'lists':'reverse'
			    (L)
		    in  %% Line 617
			case call 'file':'write'
				 (Fd, _cor5) of
			  %% Line 618
			  <'ok'> when 'true' ->
			      %% Line 619
			      call 'erlang':'setelement'
				  (_cor3, _cor1, [Addr|[]])
			  %% Line 620
			  <Error> when 'true' ->
			      %% Line 621
			      call 'dets_utils':'file_error'
				  (FileName, Error)
			end
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor7> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor7})
	    -| ['compiler_generated'] )
	end
'output_slots'/5 =
    %% Line 625
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <E,[E1|Es],Acc,Head,DCT>
	      when %% Line 626
		try
		    let <_cor6> =
			call 'erlang':'element'
			    (1, E)
		    in  let <_cor5> =
			    call 'erlang':'element'
				(1, E1)
			in  call 'erlang':'=:='
				(_cor6, _cor5)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 627
	      apply 'output_slots'/5
		  (E1, Es, [E1|Acc], Head, DCT)
	  %% Line 628
	  <_X_E,[E|L],Acc,Head,DCT> when 'true' ->
	      let <NDCT> =
		  %% Line 629
		  apply 'output_slot'/3
		      (Acc, Head, DCT)
	      in  %% Line 630
		  apply 'output_slots'/5
		      (E, L, [E|[]], Head, NDCT)
	  %% Line 631
	  <E,[],Acc,_X_Head,DCT> when 'true' ->
	      %% Line 632
	      {E,Acc,DCT}
	  ( <_cor12,_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'output_slots',5}}] )
	    -| ['compiler_generated'] )
	end
'output_slot'/3 =
    %% Line 634
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[E|[]],_X_Head,[D|CT]> when 'true' ->
	      let <_cor3> =
		  %% Line 635
		  apply 'output_slot'/4
		      ([{'foo',E}|[]], 0, 'foo', CT)
	      in  %% Line 635
		  [D|_cor3]
	  %% Line 636
	  <Es0,Head,[D|CT]> when 'true' ->
	      %% Line 637
	      ( case Head of
		  ( <( {'head',_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_rec30,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Fun> =
			    %% Line 638
			    ( fun (_cor9) ->
				  case _cor9 of
				    <E = {_X_Slot,_X_LSize,BinTerm}> when 'true' ->
					let <_cor7> =
					    %% Line 639
					    call 'erlang':'binary_to_term'
						(BinTerm)
					in  let <Key> =
						%% Line 639
						call 'erlang':'element'
						    (_rec30, _cor7)
					    in  %% Line 640
						{Key,E}
				    ( <_cor10> when 'true' ->
					  ( primop 'match_fail'
						({'function_clause',_cor10})
					    -| [{'function_name',{'-output_slot/3-fun-0-',1}}] )
				      -| ['compiler_generated'] )
				  end
			      -| [{'id',{0,0,'-output_slot/3-fun-0-'}}] )
			in  let <Es> =
				%% Line 642
				call 'lists':'map'
				    (Fun, Es0)
			    in  let <_cor18> =
				    %% Line 643
				    case _cor36 of
				      %% Line 644
				      <'set'> when 'true' ->
					  %% Line 645
					  case call 'lists':'sort'
						   (Es) of
					    <[E = {Key0,_cor90}|L0]> when 'true' ->
						let <_cor16> =
						    %% Line 646
						    call 'lists':'sort'
							(L0)
						in  %% Line 646
						    apply 'choose_one'/3
							(_cor16, Key0, [E|[]])
					    ( <_cor15> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_cor15})
					      -| ['compiler_generated'] )
					  end
				      %% Line 647
				      <'bag'> when 'true' ->
					  %% Line 648
					  call 'lists':'usort'
					      (Es)
				      %% Line 649
				      <'duplicate_bag'> when 'true' ->
					  %% Line 650
					  call 'lists':'sort'
					      (Es)
				      ( <_cor17> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor17})
					-| ['compiler_generated'] )
				    end
				in  let <_cor21> =
					%% Line 652
					call 'erlang':'length'
					    (Es)
				    in  let <_cor22> =
					    %% Line 652
					    call 'erlang':'+'
						(D, _cor21)
					in  let <_cor20> =
						%% Line 652
						call 'erlang':'length'
						    (_cor18)
					    in  let <Dups> =
						    %% Line 652
						    call 'erlang':'-'
							(_cor22, _cor20)
						in  let <_cor24> =
							%% Line 653
							apply 'output_slot'/4
							    (_cor18, 0, 'foo', CT)
						    in  %% Line 653
							[Dups|_cor24]
		    -| ['compiler_generated'] )
		  ( <_cor58> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor27,_cor26,_cor25> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor27,_cor26,_cor25})
		  -| [{'function_name',{'output_slot',3}}] )
	    -| ['compiler_generated'] )
	end
'choose_one'/3 =
    %% Line 655
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{Key,_cor6}|Es],_cor7,L>
	      when call 'erlang':'=:='
		    (_cor7,
		     Key) ->
	      %% Line 656
	      apply 'choose_one'/3
		  (Es, Key, L)
	  %% Line 657
	  <[E = {Key,_cor8}|Es],_X_Key,L> when 'true' ->
	      %% Line 658
	      apply 'choose_one'/3
		  (Es, Key, [E|L])
	  %% Line 659
	  <[],_X_Key,L> when 'true' ->
	      %% Line 660
	      L
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'choose_one',3}}] )
	    -| ['compiler_generated'] )
	end
'output_slot'/4 =
    %% Line 662
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[E|Es],Next,_X_Slot,CT> when 'true' ->
	      %% Line 663
	      case E of
		<{_X_Key,{Slot,LSize,BinTerm}}> when 'true' ->
		    let <Size> =
			%% Line 664
			call 'erlang':'byte_size'
			    (BinTerm)
		    in  let <_cor6> =
			    %% Line 665
			    call 'erlang':'-'
				(LSize, 1)
			in  let <Size2> =
				%% Line 665
				call 'erlang':'bsl'
				    (1, _cor6)
			    in  let <_cor8> =
				    %% Line 666
				    call 'erlang':'-'
					(Size2, Size)
				in  let <_cor9> =
					%% Line 666
					call 'erlang':'-'
					    (_cor8, 12)
				    in  let <Pad> =
					    %% Line 666
					    #{#<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					in  let <_cor11> =
						%% Line 667
						#{#<Next>(32,1,'integer',['unsigned'|['big']]),
						  #<Size>(32,1,'integer',['unsigned'|['big']]),
						  #<305419896>(32,1,'integer',['unsigned'|['big']])}#
					    in  let <BinObject> =
						    %% Line 667
						    [_cor11|[BinTerm|Pad]]
						in  %% Line 668
						    case call 'erlang':'element'
							     (LSize, CT) of
						      <[Addr|L]> when 'true' ->
							  let <_cor14> =
							      %% Line 669
							      call 'erlang':'+'
								  (Addr, Size2)
							  in  let <NCT> =
								  %% Line 669
								  call 'erlang':'setelement'
								      (LSize, CT, [_cor14|[BinObject|L]])
							      in  %% Line 670
								  apply 'output_slot'/4
								      (Es, Addr, Slot, NCT)
						      ( <_cor13> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_cor13})
							-| ['compiler_generated'] )
						    end
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 671
	  <[],Next,Slot,CT> when 'true' ->
	      let <I> =
		  %% Line 672
		  call 'erlang':'tuple_size'
		      (CT)
	      in  %% Line 673
		  case call 'erlang':'element'
			   (I, CT) of
		    <[Addr|L]> when 'true' ->
			%% Line 674
			case apply 'slot_position'/1
				 (Slot) of
			  <{Pos,_cor30}> when 'true' ->
			      let <NoZeros> =
				  %% Line 675
				  call 'erlang':'-'
				      (Pos, Addr)
			      in  let <_cor22> =
				      %% Line 676
				      case <> of
					%% Line 677
					<>
					    when call 'erlang':'>'
						  (NoZeros,
						   100) ->
					    let <_cor20> =
						%% Line 678
						call 'dets_utils':'make_zeros'
						    (NoZeros)
					    in  let <_cor21> =
						    %% Line 678
						    #{#<Next>(32,1,'integer',['unsigned'|['big']])}#
						in  %% Line 678
						    [_cor20|_cor21]
					%% Line 679
					<> when 'true' ->
					    %% Line 680
					    #{#<0>(NoZeros,8,'integer',['unsigned'|['big']]),
					      #<Next>(32,1,'integer',['unsigned'|['big']])}#
				      end
				  in  let <Size> =
					  %% Line 682
					  call 'erlang':'+'
					      (NoZeros, 4)
				      in  let <_cor25> =
					      %% Line 683
					      call 'erlang':'+'
						  (Addr, Size)
					  in  %% Line 683
					      call 'erlang':'setelement'
						  (I, CT, [_cor25|[_cor22|L]])
			  ( <_cor18> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor18})
			    -| ['compiler_generated'] )
			end
		    ( <_cor17> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor17})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor29,_cor28,_cor27,_cor26> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor29,_cor28,_cor27,_cor26})
		  -| [{'function_name',{'output_slot',4}}] )
	    -| ['compiler_generated'] )
	end
'fsck_input'/4 =
    %% Line 686
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 689
	    case call 'file':'position'
		     (_cor2, 'eof') of
	      %% Line 690
	      <{'ok',Pos}> when 'true' ->
		  %% Line 691
		  Pos
	      %% Line 692
	      <_cor16> when 'true' ->
		  4294967295
	    end
	in  let <State0> =
		%% Line 695
		apply 'fsck_read'/3
		    (33832, _cor2, [])
	    in  %% Line 696
		apply 'fsck_input1'/5
		    (_cor3, State0, _cor2, _cor6, _cor1)
'fsck_input1'/5 =
    %% Line 698
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 699
	( fun (_cor14) ->
	      case _cor14 of
		<'close'> when 'true' ->
		    %% Line 700
		    'ok'
		%% Line 701
		<'read'> when 'true' ->
		    %% Line 702
		    case _cor3 of
		      %% Line 703
		      <'done'> when 'true' ->
			  %% Line 704
			  'end_of_input'
		      %% Line 705
		      <{'done',L}> when 'true' ->
			  let <R> =
			      %% Line 706
			      apply 'count_input'/3
				  (_cor0, L, [])
			  in  let <_cor6> =
				  %% Line 707
				  apply 'fsck_input1'/5
				      (_cor4, 'done', _cor2, _cor1, _cor0)
			      in  %% Line 707
				  {R,_cor6}
		      %% Line 708
		      <{'cont',L,Bin,Pos}> when 'true' ->
			  let <R> =
			      %% Line 709
			      apply 'count_input'/3
				  (_cor0, L, [])
			  in  %% Line 710
			      ( case _cor4 of
				  ( <( {'head',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_rec32,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50}
				       -| ['compiler_generated'] )> when 'true' ->
					let <FR> =
					    apply 'fsck_objs'/4
						(Bin, _rec32, _cor4, [])
					in  let <NewState> =
						%% Line 711
						apply 'fsck_read'/5
						    (FR, Pos, _cor2, _cor1, _cor4)
					    in  let <_cor12> =
						    %% Line 712
						    apply 'fsck_input1'/5
							(_cor4, NewState, _cor2, _cor1, _cor0)
						in  %% Line 712
						    {R,_cor12}
				    -| ['compiler_generated'] )
				  ( <_cor51> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','head'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
		      ( <_cor13> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor13})
			-| ['compiler_generated'] )
		    end
		( <_cor15> when 'true' ->
		      ( primop 'match_fail'
			    ({'function_clause',_cor15})
			-| [{'function_name',{'-fsck_input1/5-fun-0-',1}}] )
		  -| ['compiler_generated'] )
	      end
	  -| [{'id',{0,0,'-fsck_input1/5-fun-0-'}}] )
'count_input'/3 =
    %% Line 717
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Cntrs,[[LogSz|B]|Ts],L> when 'true' ->
	      do  %% Line 718
		  apply 'count_object'/2
		      (Cntrs, LogSz)
		  %% Line 719
		  apply 'count_input'/3
		      (Cntrs, Ts, [B|L])
	  %% Line 720
	  <_X_Cntrs,[],L> when 'true' ->
	      %% Line 721
	      L
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'count_input',3}}] )
	    -| ['compiler_generated'] )
	end
'count_object'/2 =
    %% Line 723
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    catch
		%% Line 724
		call 'ets':'update_counter'
		    (_cor1, _cor0, 1)
	in  %% Line 724
	    case _cor2 of
	      %% Line 725
	      <N>
		  when call 'erlang':'is_integer'
			(_cor2) ->
		  'ok'
	      %% Line 726
	      <_X_Badarg> when 'true' ->
		  let <_cor7> =
		      call 'ets':'insert'
			  (_cor1, {_cor0,1})
		  in  case _cor7 of
			<'true'> when 'true' ->
			    ( _cor7
			      -| ['compiler_generated'] )
			( <_cor3> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor3})
			  -| ['compiler_generated'] )
		      end
	    end
'fsck_read'/3 =
    %% Line 729
    fun (_cor2,_cor1,_cor0) ->
	%% Line 730
	case call 'file':'position'
		 (_cor1, _cor2) of
	  %% Line 731
	  <{'ok',_cor7}> when 'true' ->
	      %% Line 732
	      apply 'read_more_bytes'/5
		  (#{}#, 0, _cor2, _cor1, _cor0)
	  %% Line 733
	  <_X_Error> when 'true' ->
	      %% Line 734
	      {'done',_cor0}
	end
'fsck_read'/5 =
    %% Line 737
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'more',Bin,Sz,L},Pos,F,MaxSz,Head>
	      when call 'erlang':'>'
		    (Sz,
		     MaxSz) ->
	      %% Line 738
	      ( case Head of
		  ( <( {'head',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_rec33,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43}
		       -| ['compiler_generated'] )> when 'true' ->
			let <FR> =
			    %% Line 793
			    ( case ( Bin
				     -| ['reuse_for_context'] ) of
				%% Line 794
				( <( #{#<( _cor13
					   -| ['compiler_generated'] )>(16,( 8
									     -| ['compiler_generated'] ),( 'binary'
													   -| ['compiler_generated'] ),( ['unsigned'|['big']]
																	 -| ['compiler_generated'] )),
				       #<( Tail
					   -| ['compiler_generated'] )>(( 'all'
									  -| ['compiler_generated'] ),( 8
													-| ['compiler_generated'] ),( 'binary'
																      -| ['compiler_generated'] ),( ['unsigned'|['big']]
																				    -| ['compiler_generated'] ))}#
				     -| ['compiler_generated'] )> when ( 'true'
									 -| ['compiler_generated'] ) ->
				      %% Line 795
				      ( apply ( 'fsck_objs'/4
						-| ['compiler_generated'] )
					    (( Tail
					       -| ['compiler_generated'] ), _rec33, Head, L)
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				%% Line 796
				( <_fol959> when ( 'true'
						   -| ['compiler_generated'] ) ->
				      do  primop 'bs_context_to_binary'
					      (Bin)
					  ( let <_cor5> =
						%% Line 797
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'byte_size'
										       -| ['compiler_generated'] )
						      (Bin)
						  -| ['compiler_generated'] )
					    in  ( let <_fol960> =
						      %% Line 797
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( '-'
											     -| ['compiler_generated'] )
							    (16, ( _cor5
								   -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  in  %% Line 797
						      ( {( 'new'
							   -| ['compiler_generated'] ),_fol960,L}
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			in  %% Line 739
			    apply 'fsck_read'/5
				(FR, Pos, F, MaxSz, Head)
		    -| ['compiler_generated'] )
		  ( <_cor44> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 740
	  <{'more',Bin,Sz,L},Pos,F,_X_MaxSz,_X_Head> when 'true' ->
	      %% Line 741
	      apply 'read_more_bytes'/5
		  (Bin, Sz, Pos, F, L)
	  %% Line 742
	  <{'new',Skip,L},Pos,F,_X_MaxSz,_X_Head> when 'true' ->
	      let <NewPos> =
		  %% Line 743
		  call 'erlang':'+'
		      (Pos, Skip)
	      in  %% Line 744
		  apply 'fsck_read'/3
		      (NewPos, F, L)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'fsck_read',5}}] )
	    -| ['compiler_generated'] )
	end
'read_more_bytes'/5 =
    %% Line 746
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 747
	    case <> of
	      %% Line 748
	      <>
		  when call 'erlang':'<'
			(_cor3,
			 8192) ->
		  8192
	      %% Line 749
	      <> when 'true' ->
		  _cor3
	    end
	in  %% Line 751
	    case call 'dets_utils':'read_n'
		     (_cor1, _cor5) of
	      %% Line 752
	      <'eof'> when 'true' ->
		  %% Line 753
		  {'done',_cor0}
	      %% Line 754
	      <Bin> when 'true' ->
		  let <_cor7> =
		      %% Line 755
		      call 'erlang':'byte_size'
			  (Bin)
		  in  let <NewPos> =
			  %% Line 755
			  call 'erlang':'+'
			      (_cor2, _cor7)
		      in  let <_cor9> =
			      %% Line 756
			      call 'erlang':'list_to_binary'
				  ([_cor4|[Bin|[]]])
			  in  %% Line 756
			      {'cont',_cor0,_cor9,NewPos}
	    end
'fsck_objs'/4 =
    %% Line 759
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Bin = #{#<_X_N>(32,1,'integer',['unsigned'|['big']]),
		   #<Sz>(32,1,'integer',['unsigned'|['big']]),
		   #<Status>(32,1,'integer',['unsigned'|['big']]),
		   #<Tail>('all',8,'binary',['unsigned'|['big']])}#,Kp,Head,L> when 'true' ->
	      %% Line 760
	      case <> of
		%% Line 761
		<>
		    when call 'erlang':'=:='
			  (Status,
			   305419896) ->
		    %% Line 762
		    case ( Tail
			   -| ['reuse_for_context'] ) of
		      %% Line 763
		      <#{#<BinTerm>(Sz,8,'binary',['unsigned'|['big']]),
			 #<Tail2>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
			  let <_cor5> =
			      catch
				  let <_cor4> =
				      %% Line 764
				      call 'erlang':'binary_to_term'
					  (BinTerm)
				  in  %% Line 764
				      call 'erlang':'element'
					  (Kp, _cor4)
			  in  %% Line 764
			      case _cor5 of
				%% Line 765
				<{'EXIT',_cor20}> when 'true' ->
				    %% Line 793
				    ( case ( Bin
					     -| ['reuse_for_context'] ) of
					%% Line 794
					( <( #{#<( _cor13
						   -| ['compiler_generated'] )>(16,( 8
										     -| ['compiler_generated'] ),( 'binary'
														   -| ['compiler_generated'] ),( ['unsigned'|['big']]
																		 -| ['compiler_generated'] )),
					       #<( Tail
						   -| ['compiler_generated'] )>(( 'all'
										  -| ['compiler_generated'] ),( 8
														-| ['compiler_generated'] ),( 'binary'
																	      -| ['compiler_generated'] ),( ['unsigned'|['big']]
																					    -| ['compiler_generated'] ))}#
					     -| ['compiler_generated'] )> when ( 'true'
										 -| ['compiler_generated'] ) ->
					      %% Line 795
					      ( apply ( 'fsck_objs'/4
							-| ['compiler_generated'] )
						    (( Tail
						       -| ['compiler_generated'] ), Kp, Head, L)
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					%% Line 796
					( <( _cor14
					     -| ['compiler_generated'] )> when ( 'true'
										 -| ['compiler_generated'] ) ->
					      do  primop 'bs_context_to_binary'
						      (Bin)
						  ( let <_cor5> =
							%% Line 797
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'byte_size'
											       -| ['compiler_generated'] )
							      (Bin)
							  -| ['compiler_generated'] )
						    in  ( let <_cor6> =
							      %% Line 797
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( '-'
												     -| ['compiler_generated'] )
								    (16, ( _cor5
									   -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  in  %% Line 797
							      ( {( 'new'
								   -| ['compiler_generated'] ),( _cor6
												 -| ['compiler_generated'] ),L}
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				%% Line 767
				<Key> when 'true' ->
				    let <_cor6> =
					%% Line 768
					call 'erlang':'+'
					    (Sz, 12)
				    in  ( let <_fol980> =
					      %% Line 1439
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( '+'
										     -| ['compiler_generated'] )
						    (_cor6, ( 1
							      -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  in  ( let <_fol981> =
						    %% Line 1439
						    ( call ( 'dets_utils'
							     -| ['compiler_generated'] ):( 'log2'
											   -| ['compiler_generated'] )
							  (_fol980)
						      -| ['compiler_generated'] )
						in  let <LogSz> =
							%% Line 1439
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( '+'
											       -| ['compiler_generated'] )
							      (( 1
								 -| ['compiler_generated'] ), _fol981)
							  -| ['compiler_generated'] )
						    in  let <Obj> =
							    %% Line 769
							    apply 'make_object'/4
								(Head, Key, LogSz, BinTerm)
							in  let <NL> =
								%% Line 770
								[[LogSz|Obj]|L]
							    in  let <_cor10> =
								    %% Line 771
								    call 'erlang':'-'
									(LogSz, 1)
								in  let <_cor11> =
									%% Line 771
									call 'erlang':'bsl'
									    (1, _cor10)
								    in  let <_cor12> =
									    %% Line 771
									    call 'erlang':'-'
										(_cor11, Sz)
									in  let <Skip> =
										%% Line 771
										call 'erlang':'-'
										    (_cor12, 12)
									    in  %% Line 793
										( case ( Tail2
											 -| ['reuse_for_context'] ) of
										    %% Line 794
										    ( <( #{#<( _cor13
											       -| ['compiler_generated'] )>(Skip,( 8
																   -| ['compiler_generated'] ),( 'binary'
																				 -| ['compiler_generated'] ),( ['unsigned'|['big']]
																							       -| ['compiler_generated'] )),
											   #<( Tail
											       -| ['compiler_generated'] )>(( 'all'
															      -| ['compiler_generated'] ),( 8
																			    -| ['compiler_generated'] ),( 'binary'
																							  -| ['compiler_generated'] ),( ['unsigned'|['big']]
																											-| ['compiler_generated'] ))}#
											 -| ['compiler_generated'] )> when ( 'true'
															     -| ['compiler_generated'] ) ->
											  %% Line 795
											  ( apply ( 'fsck_objs'/4
												    -| ['compiler_generated'] )
												(( Tail
												   -| ['compiler_generated'] ), Kp, Head, NL)
											    -| ['compiler_generated'] )
										      -| ['compiler_generated'] )
										    %% Line 796
										    ( <( _cor14
											 -| ['compiler_generated'] )> when ( 'true'
															     -| ['compiler_generated'] ) ->
											  do  primop 'bs_context_to_binary'
												  (Tail2)
											      ( let <_cor5> =
												    %% Line 797
												    ( call ( 'erlang'
													     -| ['compiler_generated'] ):( 'byte_size'
																	   -| ['compiler_generated'] )
													  (Tail2)
												      -| ['compiler_generated'] )
												in  ( let <_fol991> =
													  %% Line 797
													  ( call ( 'erlang'
														   -| ['compiler_generated'] ):( '-'
																		 -| ['compiler_generated'] )
														(Skip, ( _cor5
															 -| ['compiler_generated'] ))
													    -| ['compiler_generated'] )
												      in  %% Line 797
													  ( {( 'new'
													       -| ['compiler_generated'] ),_fol991,NL}
													    -| ['compiler_generated'] )
												      -| ['compiler_generated'] )
												-| ['compiler_generated'] )
										      -| ['compiler_generated'] )
										  end
										  -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
			      end
		      %% Line 774
		      <_cor21> when 'true' ->
			  %% Line 775
			  {'more',Bin,Sz,L}
		    end
		%% Line 777
		<> when 'true' ->
		    %% Line 793
		    ( case ( Bin
			     -| ['reuse_for_context'] ) of
			%% Line 794
			( <( #{#<( _cor13
				   -| ['compiler_generated'] )>(16,( 8
								     -| ['compiler_generated'] ),( 'binary'
												   -| ['compiler_generated'] ),( ['unsigned'|['big']]
																 -| ['compiler_generated'] )),
			       #<( Tail
				   -| ['compiler_generated'] )>(( 'all'
								  -| ['compiler_generated'] ),( 8
												-| ['compiler_generated'] ),( 'binary'
															      -| ['compiler_generated'] ),( ['unsigned'|['big']]
																			    -| ['compiler_generated'] ))}#
			     -| ['compiler_generated'] )> when ( 'true'
								 -| ['compiler_generated'] ) ->
			      %% Line 795
			      ( apply ( 'fsck_objs'/4
					-| ['compiler_generated'] )
				    (( Tail
				       -| ['compiler_generated'] ), Kp, Head, L)
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 796
			( <( _cor14
			     -| ['compiler_generated'] )> when ( 'true'
								 -| ['compiler_generated'] ) ->
			      do  primop 'bs_context_to_binary'
				      (Bin)
				  ( let <_cor5> =
					%% Line 797
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'byte_size'
									       -| ['compiler_generated'] )
					      (Bin)
					  -| ['compiler_generated'] )
				    in  ( let <_cor6> =
					      %% Line 797
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( '-'
										     -| ['compiler_generated'] )
						    (16, ( _cor5
							   -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  in  %% Line 797
					      ( {( 'new'
						   -| ['compiler_generated'] ),( _cor6
										 -| ['compiler_generated'] ),L}
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
	      end
	  %% Line 780
	  <Bin,_X_Kp,_X_Head,L> when 'true' ->
	      %% Line 781
	      {'more',Bin,0,L}
	end
'make_object'/4 =
    %% Line 784
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Head = {'head',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46},Key,_X_LogSz,BT>
	      when call 'erlang':'=:='
		    (_cor43,
		     9) ->
	      let <Slot> =
		  %% Line 785
		  call 'dets_v9':'db_hash'
		      (Key, Head)
	      in  %% Line 786
		  #{#<Slot>(32,1,'integer',['unsigned'|['big']]),
		    #<BT>('all',8,'binary',['unsigned'|['big']])}#
	  %% Line 787
	  <Head,Key,LogSz,BT> when 'true' ->
	      let <Slot> =
		  %% Line 788
		  apply 'db_hash'/2
		      (Key, Head)
	      in  %% Line 789
		  #{#<Slot>(32,1,'integer',['unsigned'|['big']]),
		    #<LogSz>(8,1,'integer',['unsigned'|['big']]),
		    #<BT>('all',8,'binary',['unsigned'|['big']])}#
	end
'skip_bytes'/5 =
    %% Line 792
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 793
	case ( _cor4
	       -| ['reuse_for_context'] ) of
	  %% Line 794
	  <#{#<_cor13>(_cor3,8,'binary',['unsigned'|['big']]),
	     #<Tail>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 795
	      apply 'fsck_objs'/4
		  (Tail, _cor2, _cor1, _cor0)
	  %% Line 796
	  <_cor14> when 'true' ->
	      do  primop 'bs_context_to_binary'
		      (_cor4)
		  let <_cor5> =
		      %% Line 797
		      call 'erlang':'byte_size'
			  (_cor4)
		  in  let <_cor6> =
			  %% Line 797
			  call 'erlang':'-'
			      (_cor3, _cor5)
		      in  %% Line 797
			  {'new',_cor6,_cor0}
	end
'do_perform_save'/1 =
    %% Line 801
    fun (_cor0) ->
	let <FL> =
	    %% Line 802
	    call 'dets_utils':'get_freelists'
		(_cor0)
	in  let <B> =
		%% Line 803
		call 'erlang':'term_to_binary'
		    (FL)
	    in  let <Size> =
		    %% Line 804
		    call 'erlang':'byte_size'
			(B)
		in  %% Line 809
		    case call 'dets_utils':'position'
			     (_cor0, 'eof') of
		      <{'ok',Pos}> when 'true' ->
			  %% Line 810
			  case _cor0 of
			    <{'head',_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78}> when 'true' ->
				let <_cor7> =
				    call 'erlang':'setelement'
					(13, _cor0, Pos)
				in  let <_cor9> =
					%% Line 811
					#{#<Pos>(32,1,'integer',['unsigned'|['big']])}#
				    in  let <W1> = {%% Line 811
					     0,_cor9}
					in  let <_cor11> =
						%% Line 812
						#{#<0>(32,1,'integer',['unsigned'|['big']]),
						  #<Size>(32,1,'integer',['unsigned'|['big']]),
						  #<61591023>(32,1,'integer',['unsigned'|['big']])}#
					    in  let <W2> =
						    %% Line 812
						    {Pos,[_cor11|[B|[]]]}
						in  %% Line 814
						    ( case _cor7 of
							( <( {'head',_rec39,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109}
							     -| ['compiler_generated'] )> when 'true' ->
							      let <_cor23> =
								  #{#<_rec39>(32,1,'integer',['unsigned'|['big']]),
								    #<_cor81>(%% Line 815
									      32,1,'integer',['unsigned'|['big']]),
								    #<_cor88>(%% Line 816
									      32,1,'integer',['unsigned'|['big']]),
								    #<_cor83>(%% Line 817
									      32,1,'integer',['unsigned'|['big']]),
								    #<_cor86>(%% Line 818
									      32,1,'integer',['unsigned'|['big']])}#
							      in  let <W3> = {20,_cor23}
								  in  let <ClosedProperly,ClosedProperlyNeedCompacitng> =
									  %% Line 820
									  case _cor95 of
									    %% Line 821
									    <'hash'> when 'true' ->
										%% Line 822
										<2,3>
									    %% Line 823
									    <'phash'> when 'true' ->
										%% Line 824
										<4,5>
									    ( <_cor27> when 'true' ->
										  primop 'match_fail'
										      ({'case_clause',_cor27})
									      -| ['compiler_generated'] )
									  end
								      in  let <_cor40> =
									      %% Line 828
									      case <> of
										%% Line 829
										<>
										    when let <_cor30> =
											  call 'erlang':'>'
											      (Size, 1000)
										      in  let <_cor36> =
											      ( call 'erlang':'>'
												    (Size, _cor83)
												-| ['compiler_generated'] )
											  in  ( call 'erlang':'and'
												    (_cor30, _cor36)
												-| ['compiler_generated'] ) ->
										    let <_cor38> =
											%% Line 831
											#{#<ClosedProperlyNeedCompacitng>(32,1,'integer',['unsigned'|['big']])}#
										    in  %% Line 830
											{8,_cor38}
										%% Line 832
										<> when 'true' ->
										    let <_cor39> =
											%% Line 833
											#{#<ClosedProperly>(32,1,'integer',['unsigned'|['big']])}#
										    in  %% Line 833
											{8,_cor39}
									      end
									  in  %% Line 836
									      case call 'dets_utils':'pwrite'
										       (_cor7, [W1|[W2|[W3|[_cor40|[{16,#{#<0>(8,1,'integer',['unsigned'|['big']]),
															  #<0>(8,1,'integer',['unsigned'|['big']]),
															  #<0>(8,1,'integer',['unsigned'|['big']]),
															  #<8>(8,1,'integer',['unsigned'|['big']])}#}]]]]]) of
										<{H2,'ok'}> when 'true' ->
										    %% Line 837
										    case call 'dets_utils':'position'
											     (H2, 'eof') of
										      <{'ok',Pos2}> when 'true' ->
											  let <_cor45> =
											      %% Line 839
											      call 'erlang':'+'
												  (Pos2, 4)
											  in  let <_cor46> =
												  %% Line 839
												  #{#<_cor45>(32,1,'integer',['unsigned'|['big']])}#
											      in  %% Line 839
												  call 'dets_utils':'pwrite'
												      (H2, [{Pos2,_cor46}|[]])
										      ( <_cor44> when 'true' ->
											    primop 'match_fail'
												({'badmatch',_cor44})
											-| ['compiler_generated'] )
										    end
										( <_cor43> when 'true' ->
										      primop 'match_fail'
											  ({'badmatch',_cor43})
										  -| ['compiler_generated'] )
									      end
							  -| ['compiler_generated'] )
							( <_cor110> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','head'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
			    ( <_cor79> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','head'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
'slot_objs'/2 =
    %% Line 842
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <H = {'head',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41},Slot>
	      when call 'erlang':'>='
		    (Slot,
		     _cor13) ->
	      %% Line 843
	      '$end_of_table'
	  %% Line 844
	  <H,Slot> when 'true' ->
	      %% Line 845
	      case apply 'chain'/2
		       (H, Slot) of
		<{_X_Pos,Chain}> when 'true' ->
		    %% Line 846
		    apply 'collect_chain'/2
			(H, Chain)
		( <_cor8> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor8})
		  -| ['compiler_generated'] )
	      end
	end
'collect_chain'/2 =
    %% Line 848
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_H,0> when 'true' ->
	      []
	  %% Line 849
	  <H,Pos> when 'true' ->
	      %% Line 850
	      case apply 'prterm'/3
		       (H, Pos, 512) of
		<{Next,_X_Sz,Term}> when 'true' ->
		    let <_cor3> =
			%% Line 851
			apply 'collect_chain'/2
			    (H, Next)
		    in  %% Line 851
			[Term|_cor3]
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	end
'db_hash'/2 =
    %% Line 853
    fun (_cor1,_cor0) ->
	%% Line 854
	( case _cor0 of
	    ( <( {'head',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_rec41,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <H> =
		      apply 'h'/2
			  (_cor1, _rec41)
		  in  let <Hash> =
			  %% Line 855
			  call 'erlang':'rem'
			      (H, _cor18)
		      in  %% Line 856
			  case <> of
			    %% Line 857
			    <>
				when ( call 'erlang':'<'
					(Hash,
					 _cor25)
				    -| ['compiler_generated'] ) ->
				%% Line 858
				call 'erlang':'rem'
				    (H, _cor19)
			    %% Line 859
			    <> when 'true' ->
				%% Line 860
				Hash
			  end
	      -| ['compiler_generated'] )
	    ( <_cor48> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'h'/2 =
    %% Line 863
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <I,'phash'> when 'true' ->
	      let <_cor2> =
		  call 'erlang':'phash'
		      (I, 16777215)
	      in  call 'erlang':'-'
		      (_cor2, 1)
	  %% Line 864
	  <I,HF> when 'true' ->
	      let <_cor3> =
		  call 'erlang':HF
		      (I, 16777215)
	      in  call 'erlang':'-'
		      (_cor3, 1)
	end
'no_slots'/1 =
    %% Line 866
    fun (_cor0) ->
	%% Line 867
	'undefined'
'table_parameters'/1 =
    %% Line 869
    fun (_cor0) ->
	%% Line 870
	'undefined'
're_hash'/2 =
    %% Line 883
    fun (_cor1,_cor0) ->
	%% Line 884
	case apply 'slot_position'/1
		 (_cor0) of
	  <{SlotPos,_X_4}> when 'true' ->
	      %% Line 885
	      case call 'dets_utils':'pread'
		       (_cor1, SlotPos, 1024, 0) of
		<{'ok',Bin}> when 'true' ->
		    %% Line 886
		    case apply 'split_bin'/4
			     (SlotPos, Bin, [], []) of
		      <{Read,Cs}> when 'true' ->
			  %% Line 887
			  apply 're_hash_read'/4
			      (_cor1, [], Read, Cs)
		      ( <_cor5> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor5})
			-| ['compiler_generated'] )
		    end
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'split_bin'/4 =
    %% Line 889
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,( _cor2
		      -| ['reuse_for_context'] ),_cor1,_cor0> of
	  <Pos,#{#<P>(32,1,'integer',['unsigned'|['big']]),
		 #<B>('all',8,'binary',['unsigned'|['big']])}#,R,Cs> when 'true' ->
	      %% Line 890
	      case <> of
		%% Line 891
		<>
		    when call 'erlang':'=:='
			  (P,
			   0) ->
		    let <_cor4> =
			%% Line 892
			call 'erlang':'+'
			    (Pos, 4)
		    in  %% Line 892
			apply 'split_bin'/4
			    (_cor4, B, R, Cs)
		%% Line 893
		<> when 'true' ->
		    let <_cor5> =
			%% Line 894
			call 'erlang':'+'
			    (Pos, 4)
		    in  %% Line 894
			apply 'split_bin'/4
			    (_cor5, B, [{P,512}|R], [[Pos|[]]|Cs])
	      end
	  %% Line 896
	  <_X_Pos,#{}#,R,Cs> when 'true' ->
	      %% Line 897
	      {R,Cs}
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		do  primop 'bs_context_to_binary'
			(_cor8)
		    ( primop 'match_fail'
			  ({'function_clause',_cor9,_cor8,_cor7,_cor6})
		      -| [{'function_name',{'split_bin',4}}] )
	    -| ['compiler_generated'] )
	end
're_hash_read'/4 =
    %% Line 899
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 900
	case call 'dets_utils':'pread'
		 (_cor1, _cor3) of
	  <{'ok',Bins}> when 'true' ->
	      %% Line 901
	      apply 're_hash_read'/7
		  (_cor3, _cor1, _cor0, Bins, _cor2, [], [])
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor4})
	    -| ['compiler_generated'] )
	end
're_hash_read'/7 =
    %% Line 903
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Head,[{Pos,Size}|Ps],[C|Cs],%% Line 904
				       [#{#<Next>(32,1,'integer',['unsigned'|['big']]),
					  #<Sz>(32,1,'integer',['unsigned'|['big']]),
					  #<_X_Status>(32,1,'integer',['unsigned'|['big']]),
					  #<Bin0>('all',8,'binary',['unsigned'|['big']])}#|Bins],%% Line 905
												 DoneCs,%% Line 905
													R,%% Line 905
													  RCs> when 'true' ->
	      %% Line 906
	      case call 'erlang':'byte_size'
		       (Bin0) of
		%% Line 907
		<BinSz>
		    when call 'erlang':'>='
			  (BinSz,
			   Sz) ->
		    let <_cor7> =
			catch
			    %% Line 908
			    call 'erlang':'binary_to_term'
				(Bin0)
		    in  %% Line 908
			case _cor7 of
			  %% Line 909
			  <{'EXIT',_X_Error}> when 'true' ->
			      let <_cor8> =
				  %% Line 910
				  call 'dets_utils':'corrupt_reason'
				      (Head, 'bad_object')
			      in  %% Line 910
				  call 'erlang':'throw'
				      (_cor8)
			  %% Line 911
			  <Term> when 'true' ->
			      %% Line 912
			      ( case Head of
				  ( <( {'head',_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_rec44,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69}
				       -| ['compiler_generated'] )> when 'true' ->
					let <Key> =
					    call 'erlang':'element'
						(_rec44, Term)
					in  let <_cor16> =
						%% Line 913
						apply 'h'/2
						    (Key, _cor55)
					    in  let <New> =
						    %% Line 913
						    call 'erlang':'rem'
							(_cor16, _cor41)
						in  let <_cor21> =
							%% Line 914
							case <> of
							  %% Line 915
							  <>
							      when call 'erlang':'>='
								    (New,
								     _cor40) ->
							      [{Pos,New}|C]
							  %% Line 916
							  <> when 'true' ->
							      [Pos|C]
							end
						    in  %% Line 918
							case <> of
							  %% Line 919
							  <>
							      when call 'erlang':'=:='
								    (Next,
								     0) ->
							      let <NDoneCs> =
								  %% Line 920
								  [_cor21|DoneCs]
							      in  %% Line 921
								  apply 're_hash_read'/7
								      (Head, Ps, Cs, Bins, NDoneCs, R, RCs)
							  %% Line 922
							  <> when 'true' ->
							      let <NR> =
								  %% Line 923
								  [{Next,512}|R]
							      in  let <NRCs> =
								      %% Line 924
								      [_cor21|RCs]
								  in  %% Line 925
								      apply 're_hash_read'/7
									  (Head, Ps, Cs, Bins, DoneCs, NR, NRCs)
							end
				    -| ['compiler_generated'] )
				  ( <_cor70> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','head'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			end
		%% Line 928
		<BinSz>
		    when try
			  let <_cor27> =
			      call 'erlang':'+'
				  (BinSz, 12)
			  in  call 'erlang':'=:='
				  (Size, _cor27)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    let <_cor28> =
			%% Line 929
			call 'erlang':'+'
			    (Sz, 12)
		    in  let <NR> =
			    %% Line 929
			    [{Pos,_cor28}|R]
			in  %% Line 930
			    apply 're_hash_read'/7
				(Head, Ps, Cs, Bins, DoneCs, NR, [C|RCs])
		%% Line 931
		<_X_BinSz> when 'true' ->
		    %% Line 932
		    ( case Head of
			( <( {'head',_cor164,_cor165,_cor166,_cor167,_cor168,_cor169,_cor170,_cor171,_cor172,_cor173,_cor174,_cor175,_cor176,_cor177,_cor178,_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,_rec48,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191,_cor192,_cor193}
			     -| ['compiler_generated'] )> when 'true' ->
			      call 'erlang':'throw'
				  ({Head,{'error',{'premature_eof',_rec48}}})
			  -| ['compiler_generated'] )
			( <_cor194> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','head'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
	      end
	  %% Line 934
	  <Head,[],[],[],Cs,[],[]> when 'true' ->
	      %% Line 935
	      apply 're_hash_traverse_chains'/5
		  (Cs, Head, [], [], [])
	  %% Line 936
	  <Head,[],[],[],Cs,R,RCs> when 'true' ->
	      %% Line 937
	      apply 're_hash_read'/4
		  (Head, Cs, R, RCs)
	  ( <_cor39,_cor38,_cor37,_cor36,_cor35,_cor34,_cor33> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor39,_cor38,_cor37,_cor36,_cor35,_cor34,_cor33})
		  -| [{'function_name',{'re_hash_read',7}}] )
	    -| ['compiler_generated'] )
	end
're_hash_traverse_chains'/5 =
    %% Line 939
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[C|Cs],Head,Rs,Ns,Ws> when 'true' ->
	      %% Line 940
	      case apply 're_hash_find_new'/4
		       (C, Rs, 'start', 'start') of
		%% Line 941
		<'false'> when 'true' ->
		    %% Line 942
		    apply 're_hash_traverse_chains'/5
			(Cs, Head, Rs, Ns, Ws)
		%% Line 943
		<{NRs,FirstNew,LastNew}> when 'true' ->
		    let <_cor6> =
			%% Line 944
			case C of
			  %% Line 945
			  <[{_cor18,_cor19}|_cor20]> when 'true' ->
			      'true'
			  %% Line 946
			  <_cor21> when 'true' ->
			      'false'
			end
		    in  let <N> = {%% Line 948
			     FirstNew,%% Line 948
				      LastNew,_cor6}
			in  let <NWs> =
				%% Line 949
				apply 're_hash_link'/5
				    (C, 'start', 'start', 'start', Ws)
			    in  %% Line 950
				apply 're_hash_traverse_chains'/5
				    (Cs, Head, NRs, [N|Ns], NWs)
		( <_cor10> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor10})
		  -| ['compiler_generated'] )
	      end
	  %% Line 952
	  <[],Head,Rs,Ns,Ws> when 'true' ->
	      %% Line 953
	      case call 'dets_utils':'pread'
		       (Rs, Head) of
		<{'ok',Bins}> when 'true' ->
		    let <_cor12> =
			%% Line 954
			apply 'insert_new'/4
			    (Rs, Bins, Ns, Ws)
		    in  %% Line 954
			{'ok',_cor12}
		( <_cor11> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor11})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor17,_cor16,_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15,_cor14,_cor13})
		  -| [{'function_name',{'re_hash_traverse_chains',5}}] )
	    -| ['compiler_generated'] )
	end
're_hash_find_new'/4 =
    %% Line 956
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{Pos,NewSlot}|C],R,'start','start'> when 'true' ->
	      %% Line 957
	      case apply 'slot_position'/1
		       (NewSlot) of
		<{SPos,_X_4}> when 'true' ->
		    %% Line 958
		    apply 're_hash_find_new'/4
			(C, [{SPos,4}|R], Pos, Pos)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 959
	  <[{Pos,_X_SPos}|C],R,_X_FirstNew,LastNew> when 'true' ->
	      %% Line 960
	      apply 're_hash_find_new'/4
		  (C, R, Pos, LastNew)
	  %% Line 961
	  <[_X_Pos|C],R,FirstNew,LastNew> when 'true' ->
	      %% Line 962
	      apply 're_hash_find_new'/4
		  (C, R, FirstNew, LastNew)
	  %% Line 963
	  <[],_X_R,'start','start'> when 'true' ->
	      %% Line 964
	      'false'
	  %% Line 965
	  <[],R,FirstNew,LastNew> when 'true' ->
	      %% Line 966
	      {R,FirstNew,LastNew}
	  ( <_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6,_cor5})
		  -| [{'function_name',{'re_hash_find_new',4}}] )
	    -| ['compiler_generated'] )
	end
're_hash_link'/5 =
    %% Line 968
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[{Pos,_X_SPos}|C],LastOld,'start',_X_LastInNew,Ws> when 'true' ->
	      %% Line 969
	      apply 're_hash_link'/5
		  (C, LastOld, Pos, 'true', Ws)
	  %% Line 970
	  <[{Pos,_X_SPos}|C],LastOld,LastNew,'false',Ws> when 'true' ->
	      let <_cor5> =
		  %% Line 971
		  #{#<LastNew>(32,1,'integer',['unsigned'|['big']])}#
	      in  %% Line 971
		  apply 're_hash_link'/5
		      (C, LastOld, Pos, 'true', [{Pos,_cor5}|Ws])
	  %% Line 972
	  <[{Pos,_X_SPos}|C],LastOld,_X_LastNew,LastInNew,Ws> when 'true' ->
	      %% Line 973
	      apply 're_hash_link'/5
		  (C, LastOld, Pos, LastInNew, Ws)
	  %% Line 974
	  <[Pos|C],'start',LastNew,'true',Ws> when 'true' ->
	      %% Line 975
	      apply 're_hash_link'/5
		  (C, Pos, LastNew, 'false', [{Pos,#{#<0>(8,1,'integer',['unsigned'|['big']]),
						     #<0>(8,1,'integer',['unsigned'|['big']]),
						     #<0>(8,1,'integer',['unsigned'|['big']]),
						     #<0>(8,1,'integer',['unsigned'|['big']])}#}|Ws])
	  %% Line 976
	  <[Pos|C],LastOld,LastNew,'true',Ws> when 'true' ->
	      let <_cor6> =
		  %% Line 977
		  #{#<LastOld>(32,1,'integer',['unsigned'|['big']])}#
	      in  %% Line 977
		  apply 're_hash_link'/5
		      (C, Pos, LastNew, 'false', [{Pos,_cor6}|Ws])
	  %% Line 978
	  <[Pos|C],_X_LastOld,LastNew,LastInNew,Ws> when 'true' ->
	      %% Line 979
	      apply 're_hash_link'/5
		  (C, Pos, LastNew, LastInNew, Ws)
	  %% Line 980
	  <[],_X_LastOld,_X_LastNew,_X_LastInNew,Ws> when 'true' ->
	      %% Line 981
	      Ws
	  ( <_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'re_hash_link',5}}] )
	    -| ['compiler_generated'] )
	end
'insert_new'/4 =
    %% Line 983
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{NewSlotPos,_X_4}|Rs],[PB = #{#<P>(32,1,'integer',['unsigned'|['big']])}#|Bins],[N|Ns],Ws> when 'true' ->
	      %% Line 984
	      case N of
		<{FirstNew,LastNew,LastInNew}> when 'true' ->
		    let <_cor6> =
			%% Line 985
			case P of
			  %% Line 986
			  <0>
			      when call 'erlang':'=:='
				    (LastInNew,
				     'true') ->
			      %% Line 987
			      Ws
			  %% Line 988
			  <0> when 'true' ->
			      %% Line 989
			      [{LastNew,#{#<0>(8,1,'integer',['unsigned'|['big']]),
					  #<0>(8,1,'integer',['unsigned'|['big']]),
					  #<0>(8,1,'integer',['unsigned'|['big']]),
					  #<0>(8,1,'integer',['unsigned'|['big']])}#}|Ws]
			  %% Line 990
			  <_cor14> when 'true' ->
			      %% Line 991
			      [{LastNew,PB}|Ws]
			end
		    in  let <_cor8> =
			    %% Line 993
			    #{#<FirstNew>(32,1,'integer',['unsigned'|['big']])}#
			in  let <NWs> =
				%% Line 993
				[{NewSlotPos,_cor8}|_cor6]
			    in  %% Line 994
				apply 'insert_new'/4
				    (Rs, Bins, Ns, NWs)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 995
	  <[],[],[],Ws> when 'true' ->
	      %% Line 996
	      Ws
	  ( <_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10})
		  -| [{'function_name',{'insert_new',4}}] )
	    -| ['compiler_generated'] )
	end
'write_cache'/1 =
    %% Line 1015
    fun (_cor0) ->
	%% Line 1016
	case _cor0 of
	  <{'head',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,Type,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,C,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39}> when 'true' ->
	      %% Line 1017
	      case call 'dets_utils':'is_empty_cache'
		       (C) of
		%% Line 1018
		<'true'> when 'true' ->
		    {_cor0,[],[]}
		%% Line 1019
		<'false'> when 'true' ->
		    %% Line 1020
		    case call 'dets_utils':'reset_cache'
			     (C) of
		      <{NewC,_X_MaxInserts,PerKey}> when 'true' ->
			  %% Line 1022
			  case apply 'make_wl'/2
				   (PerKey, Type) of
			    <{WL,NoInsertedKeys}> when 'true' ->
				let <_cor6> =
				    %% Line 1023
				    call 'erlang':'setelement'
					(22, _cor0, NewC)
				in  %% Line 1024
				    case apply 'may_grow'/3
					     (_cor6, NoInsertedKeys, 'once') of
				      %% Line 1025
				      <{Head2,'ok'}> when 'true' ->
					  %% Line 1026
					  apply 'eval_work_list'/2
					      (Head2, WL)
				      %% Line 1027
				      <HeadError> when 'true' ->
					  %% Line 1028
					  call 'erlang':'throw'
					      (HeadError)
				    end
			    ( <_cor3> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor3})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor2> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor2})
			-| ['compiler_generated'] )
		    end
		( <_cor9> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor9})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'make_wl'/2 =
    %% Line 1032
    fun (_cor1,_cor0) ->
	%% Line 1033
	apply 'make_wl'/4
	    (_cor1, _cor0, [], 0)
'make_wl'/4 =
    %% Line 1035
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{Key,L}|PerKey],Type,WL,Ins> when 'true' ->
	      %% Line 1036
	      case apply 'wl'/2
		       (L, Type) of
		<[Cs|I]> when 'true' ->
		    let <_cor5> =
			%% Line 1037
			call 'erlang':'+'
			    (Ins, I)
		    in  %% Line 1037
			apply 'make_wl'/4
			    (PerKey, Type, [{Key,Cs}|WL], _cor5)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1038
	  <[],_X_Type,WL,Ins> when 'true' ->
	      %% Line 1039
	      {WL,Ins}
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'make_wl',4}}] )
	    -| ['compiler_generated'] )
	end
'wl'/2 =
    %% Line 1041
    fun (_cor1,_cor0) ->
	%% Line 1042
	apply 'wl'/6
	    (_cor1, _cor0, 'keep', 'skip', 0, [])
'wl'/6 =
    %% Line 1044
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[{_X_Seq,'delete_key'}|Cs],Type,_X_Del,Lookup,_X_I,_X_Objs> when 'true' ->
	      %% Line 1045
	      apply 'wl'/6
		  (Cs, Type, 'delete', Lookup, 0, [])
	  %% Line 1046
	  <[{_X_Seq,{'delete_object',Object}}|Cs],Type,Del,Lookup,I,Objs> when 'true' ->
	      let <NObjs> =
		  %% Line 1047
		  call 'lists':'keydelete'
		      (Object, 1, Objs)
	      in  %% Line 1048
		  apply 'wl'/6
		      (Cs, Type, Del, Lookup, I, [{Object,0}|NObjs])
	  %% Line 1049
	  <[{_X_Seq,{'insert',Object}}|Cs],Type,_X_Del,Lookup,_X_I,_X_Objs>
	      when %% Line 1050
		call 'erlang':'=:='
		    (Type,
		     'set') ->
	      %% Line 1051
	      apply 'wl'/6
		  (Cs, Type, 'delete', Lookup, 1, [{Object,-1}|[]])
	  %% Line 1052
	  <[{_X_Seq,{'insert',Object}}|Cs],Type,Del,Lookup,_X_I,Objs> when 'true' ->
	      let <_cor13> =
		  %% Line 1054
		  case call 'lists':'keyfind'
			   (Object, 1, Objs) of
		    %% Line 1055
		    <{_cor21,0}> when 'true' ->
			%% Line 1056
			call 'lists':'keyreplace'
			    (Object, 1, Objs, {Object,-1})
		    %% Line 1057
		    <{_cor22,_X_C}>
			when call 'erlang':'=:='
			      (Type,
			       'bag') ->
			%% Line 1058
			Objs
		    %% Line 1059
		    <{_cor23,C}>
			when call 'erlang':'<'
			      (C,
			       0) ->
			let <_cor9> =
			    %% Line 1060
			    call 'erlang':'-'
				(C, 1)
			in  %% Line 1060
			    call 'lists':'keyreplace'
				(Object, 1, Objs, {Object,_cor9})
		    %% Line 1061
		    <{_cor24,C}> when 'true' ->
			let <_cor10> =
			    %% Line 1062
			    call 'erlang':'+'
				(C, 1)
			in  %% Line 1062
			    call 'lists':'keyreplace'
				(Object, 1, Objs, {Object,_cor10})
		    %% Line 1063
		    <'false'>
			when call 'erlang':'=:='
			      (Del,
			       'delete') ->
			%% Line 1064
			[{Object,-1}|Objs]
		    %% Line 1065
		    <'false'> when 'true' ->
			%% Line 1066
			[{Object,1}|Objs]
		    ( <_cor12> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor12})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 1068
		  apply 'wl'/6
		      (Cs, Type, Del, Lookup, 1, _cor13)
	  %% Line 1069
	  <[{_X_Seq,Lookup = {'lookup',_X_Pid}}|Cs],Type,Del,_X_Lookup,I,Objs> when 'true' ->
	      %% Line 1070
	      apply 'wl'/6
		  (Cs, Type, Del, Lookup, I, Objs)
	  %% Line 1071
	  <[],_X_Type,Del,Lookup,I,Objs> when 'true' ->
	      %% Line 1072
	      [{Del,Lookup,Objs}|I]
	  ( <_cor20,_cor19,_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19,_cor18,_cor17,_cor16,_cor15})
		  -| [{'function_name',{'wl',6}}] )
	    -| ['compiler_generated'] )
	end
'may_grow'/3 =
    %% Line 1075
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Head,0,'once'> when 'true' ->
	      %% Line 1076
	      {Head,'ok'}
	  %% Line 1077
	  <Head = {'head',_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59},_X_N,_X_How>
	      when call 'erlang':'=/='
		    (_cor44,
		     'false') ->
	      %% Line 1078
	      {Head,'ok'}
	  %% Line 1079
	  <Head = {'head',_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,'read',_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89},_X_N,_X_How> when 'true' ->
	      %% Line 1080
	      {Head,'ok'}
	  %% Line 1081
	  <Head = {'head',_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120},_X_N,_X_How>
	      when call 'erlang':'>='
		    (_cor92,
		     2097152) ->
	      %% Line 1082
	      {Head,'ok'}
	  %% Line 1083
	  <Head,N,How> when 'true' ->
	      %% Line 1084
	      ( case Head of
		  ( <( {'head',_cor121,_cor122,_cor123,_cor124,_rec50,_cor125,_cor126,_cor127,_cor128,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor20> =
			    call 'erlang':'+'
				(_rec50, N)
			in  let <_cor21> =
				call 'erlang':'-'
				    (_cor20, _cor123)
			    in  let <Extra> =
				    call 'erlang':'min'
					(512, _cor21)
				in  let <_cor24> =
					catch
					    %% Line 1085
					    apply 'may_grow1'/3
						(Head, Extra, How)
				    in  %% Line 1085
					case _cor24 of
					  %% Line 1086
					  <{'error',Reason}> when 'true' ->
					      %% Line 1087
					      {Head,{'error',Reason}}
					  %% Line 1088
					  <Reply> when 'true' ->
					      %% Line 1089
					      Reply
					end
		    -| ['compiler_generated'] )
		  ( <_cor151> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'may_grow1'/3 =
    %% Line 1092
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Head,Extra,'many_times'>
	      when call 'erlang':'>'
		    (Extra,
		     256) ->
	      let <Reply> =
		  %% Line 1093
		  apply 'grow'/3
		      (Head, 1, 'undefined')
	      in  let <_cor5> =
		      %% Line 1094
		      call 'erlang':'self'
			  ()
		  in  let <_cor4> =
			  %% Line 1094
			  call 'erlang':'self'
			      ()
		      in  do  %% Line 1094
			      call 'erlang':'!'
				  (_cor5, {'$dets_call',_cor4,'may_grow'})
			      %% Line 1095
			      Reply
	  %% Line 1096
	  <Head,Extra,_X_How> when 'true' ->
	      %% Line 1097
	      apply 'grow'/3
		  (Head, Extra, 'undefined')
	end
'grow'/3 =
    %% Line 1100
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Head,Extra,_X_SegZero>
	      when call 'erlang':'=<'
		    (Extra,
		     0) ->
	      %% Line 1101
	      {Head,'ok'}
	  %% Line 1102
	  <Head,Extra,'undefined'> when 'true' ->
	      let <_cor3> =
		  %% Line 1103
		  apply 'seg_zero'/0
		      ()
	      in  %% Line 1103
		  apply 'grow'/3
		      (Head, Extra, _cor3)
	  %% Line 1104
	  <Head,Extra,SegZero> when 'true' ->
	      %% Line 1105
	      case Head of
		<{'head',M,_cor30,Next,_cor31,_cor32,_cor33,_cor34,N,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57}> when 'true' ->
		    let <SegNum> =
			%% Line 1106
			call 'erlang':'bsr'
			    (Next, 8)
		    in  %% Line 1107
			case apply 'allocate_segment'/3
				 (Head, SegZero, SegNum) of
			  <{Head0,Ws1}> when 'true' ->
			      %% Line 1108
			      case call 'dets_utils':'pwrite'
				       (Head0, Ws1) of
				<{Head1,'ok'}> when 'true' ->
				    %% Line 1110
				    case apply 're_hash'/2
					     (Head1, N) of
				      <{'ok',Ws2}> when 'true' ->
					  %% Line 1111
					  case call 'dets_utils':'pwrite'
						   (Head1, Ws2) of
					    <{Head2,'ok'}> when 'true' ->
						let <_cor24> =
						    %% Line 1113
						    case <> of
						      %% Line 1114
						      <>
							  when try
								let <_cor10> =
								    call 'erlang':'+'
									(N, 256)
								in  call 'erlang':'=:='
									(_cor10, M)
							    of <Try> ->
								Try
							    catch <T,R> ->
								'false' ->
							  let <_rec52> =
							      %% Line 1115
							      call 'erlang':'+'
								  (Next, 256)
							  in  let <_rec53> =
								  %% Line 1115
								  call 'erlang':'*'
								      (2, M)
							      in  let <_rec54> =
								      %% Line 1115
								      call 'erlang':'*'
									  (4, M)
								  in  %% Line 1115
								      case Head2 of
									<{'head',_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88}> when 'true' ->
									    let <_cor15> =
										call 'erlang':'setelement'
										    (9, Head2, 0)
									    in  let <_cor16> =
										    call 'erlang':'setelement'
											(4, _cor15, _rec52)
										in  let <_cor17> =
											call 'erlang':'setelement'
											    (3, _cor16, _rec54)
										    in  call 'erlang':'setelement'
											    (2, _cor17, _rec53)
									( <_cor89> when 'true' ->
									      ( call ( 'erlang'
										       -| ['compiler_generated'] ):( 'error'
														     -| ['compiler_generated'] )
										    (( {'badrecord','head'}
										       -| ['compiler_generated'] ))
										-| ['compiler_generated'] )
									  -| ['compiler_generated'] )
								      end
						      %% Line 1116
						      <> when 'true' ->
							  let <_rec56> =
							      %% Line 1117
							      call 'erlang':'+'
								  (N, 256)
							  in  let <_rec57> =
								  %% Line 1117
								  call 'erlang':'+'
								      (Next, 256)
							      in  %% Line 1117
								  case Head2 of
								    <{'head',_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120}> when 'true' ->
									let <_cor22> =
									    call 'erlang':'setelement'
										(9, Head2, _rec56)
									in  call 'erlang':'setelement'
										(4, _cor22, _rec57)
								    ( <_cor121> when 'true' ->
									  ( call ( 'erlang'
										   -| ['compiler_generated'] ):( 'error'
														 -| ['compiler_generated'] )
										(( {'badrecord','head'}
										   -| ['compiler_generated'] ))
									    -| ['compiler_generated'] )
								      -| ['compiler_generated'] )
								  end
						    end
						in  let <_cor26> =
							%% Line 1119
							call 'erlang':'-'
							    (Extra, 256)
						    in  %% Line 1119
							apply 'grow'/3
							    (_cor24, _cor26, SegZero)
					    ( <_cor9> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_cor9})
					      -| ['compiler_generated'] )
					  end
				      ( <_cor8> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor8})
					-| ['compiler_generated'] )
				    end
				( <_cor7> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor7})
				  -| ['compiler_generated'] )
			      end
			  ( <_cor6> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor6})
			    -| ['compiler_generated'] )
			end
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	end
'seg_zero'/0 =
    %% Line 1121
    fun () ->
	%% Line 1122
	#{#<0>(1024,8,'integer',['unsigned'|['big']])}#
'find_object'/2 =
    %% Line 1124
    fun (_cor1,_cor0) ->
	%% Line 1125
	( case _cor1 of
	    ( <( {'head',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_rec59,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Key> =
		      call 'erlang':'element'
			  (_rec59, _cor0)
		  in  let <Slot> =
			  %% Line 1126
			  apply 'db_hash'/2
			      (Key, _cor1)
		      in  %% Line 1127
			  apply 'find_object'/3
			      (_cor1, _cor0, Slot)
	      -| ['compiler_generated'] )
	    ( <_cor38> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'find_object'/3 =
    %% Line 1129
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <H = {'head',_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45},_X_Obj,Slot>
	      when call 'erlang':'>='
		    (Slot,
		     _cor17) ->
	      %% Line 1130
	      'false'
	  %% Line 1131
	  <H,Obj,Slot> when 'true' ->
	      %% Line 1132
	      case apply 'chain'/2
		       (H, Slot) of
		<{_X_Pos,Chain}> when 'true' ->
		    let <_cor10> =
			catch
			    %% Line 1133
			    apply 'find_obj'/3
				(H, Obj, Chain)
		    in  %% Line 1133
			case _cor10 of
			  %% Line 1134
			  <{'ok',Pos}> when 'true' ->
			      %% Line 1135
			      {'ok',Pos}
			  %% Line 1136
			  <_X_Else> when 'true' ->
			      %% Line 1137
			      'false'
			end
		( <_cor9> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor9})
		  -| ['compiler_generated'] )
	      end
	end
'find_obj'/3 =
    %% Line 1140
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <H,Obj,Pos>
	      when call 'erlang':'>'
		    (Pos,
		     0) ->
	      %% Line 1141
	      case apply 'prterm'/3
		       (H, Pos, 512) of
		<{Next,_X_Sz,Term}> when 'true' ->
		    %% Line 1142
		    case <> of
		      %% Line 1143
		      <>
			  when call 'erlang':'=='
				(Term,
				 Obj) ->
			  %% Line 1144
			  {'ok',Pos}
		      %% Line 1145
		      <> when 'true' ->
			  %% Line 1146
			  apply 'find_obj'/3
			      (H, Obj, Next)
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'find_obj',3}}] )
	    -| ['compiler_generated'] )
	end
'chain'/2 =
    %% Line 1153
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 1154
	    call 'erlang':'bsr'
		(_cor0, 8)
	in  let <_cor3> =
		%% Line 1154
		call 'erlang':'*'
		    (4, _cor2)
	    in  let <Pos> =
		    %% Line 1154
		    call 'erlang':'+'
			(40, _cor3)
		in  let <Segment> =
			%% Line 1434
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'get'
							       -| ['compiler_generated'] )
			      (Pos)
			  -| ['compiler_generated'] )
		    in  let <_cor7> =
			    %% Line 1156
			    call 'erlang':'band'
				(_cor0, 255)
			in  let <_cor8> =
				%% Line 1156
				call 'erlang':'*'
				    (4, _cor7)
			    in  let <FinalPos> =
				    %% Line 1156
				    call 'erlang':'+'
					(Segment, _cor8)
				in  %% Line 1157
				    case call 'dets_utils':'pread'
					     (_cor1, FinalPos, 4, 0) of
				      <{'ok',#{#<Chain>(32,1,'integer',['unsigned'|['big']])}#}> when 'true' ->
					  %% Line 1158
					  {FinalPos,Chain}
				      ( <_cor10> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor10})
					-| ['compiler_generated'] )
				    end
'eval_work_list'/2 =
    %% Line 1165
    fun (_cor1,_cor0) ->
	let <SWLs> =
	    %% Line 1166
	    apply 'tag_with_slot'/3
		(_cor0, _cor1, [])
	in  let <P1> =
		%% Line 1167
		call 'dets_utils':'family'
		    (SWLs)
	    in  %% Line 1168
		case apply 'remove_slot_tag'/3
			 (P1, [], []) of
		  <{PerSlot,SlotPositions}> when 'true' ->
		      %% Line 1169
		      case call 'dets_utils':'pread'
			       (SlotPositions, _cor1) of
			<{'ok',Bins}> when 'true' ->
			    %% Line 1170
			    apply 'first_object'/8
				(PerSlot, SlotPositions, Bins, _cor1, [], [], [], [])
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor5})
			  -| ['compiler_generated'] )
		      end
		  ( <_cor4> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor4})
		    -| ['compiler_generated'] )
		end
'tag_with_slot'/3 =
    %% Line 1172
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[WL = {K,_cor7}|WLs],Head,L> when 'true' ->
	      let <_cor3> =
		  %% Line 1173
		  apply 'db_hash'/2
		      (K, Head)
	      in  %% Line 1173
		  apply 'tag_with_slot'/3
		      (WLs, Head, [{_cor3,WL}|L])
	  %% Line 1174
	  <[],_X_Head,L> when 'true' ->
	      %% Line 1175
	      L
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'tag_with_slot',3}}] )
	    -| ['compiler_generated'] )
	end
'remove_slot_tag'/3 =
    %% Line 1177
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{S,SWLs}|SSWLs],Ls,SPs> when 'true' ->
	      let <_cor3> =
		  %% Line 1178
		  apply 'slot_position'/1
		      (S)
	      in  %% Line 1178
		  apply 'remove_slot_tag'/3
		      (SSWLs, [SWLs|Ls], [_cor3|SPs])
	  %% Line 1179
	  <[],Ls,SPs> when 'true' ->
	      %% Line 1180
	      {Ls,SPs}
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'remove_slot_tag',3}}] )
	    -| ['compiler_generated'] )
	end
'first_object'/8 =
    %% Line 1190
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[WorkLists|SPs],[{P1,_X_4}|Ss],[#{#<P2>(32,1,'integer',['unsigned'|['big']])}#|Bs],Head,%% Line 1191
												   ObjsToRead,%% Line 1191
													      ToRead,%% Line 1191
														     Ls,%% Line 1191
															LU>
	      when %% Line 1191
		call 'erlang':'=:='
		    (P2,
		     0) ->
	      let <L0> =
		  %% Line 1192
		  [{'old',P1}|[]]
	      in  %% Line 1193
		  case apply 'eval_slot'/6
			   (Head, 512, P2, WorkLists, L0, LU) of
		    <{L,NLU}> when 'true' ->
			%% Line 1194
			apply 'first_object'/8
			    (SPs, Ss, Bs, Head, ObjsToRead, ToRead, [L|Ls], NLU)
		    ( <_cor9> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor9})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1195
	  <[WorkLists|SPs],[{P1,_X_4}|Ss],[#{#<P2>(32,1,'integer',['unsigned'|['big']])}#|Bs],Head,%% Line 1196
												   ObjsToRead,%% Line 1196
													      ToRead,%% Line 1196
														     Ls,%% Line 1196
															LU> when 'true' ->
	      let <E> = {%% Line 1197
		   P1,%% Line 1197
		      P2,%% Line 1197
			 WorkLists}
	      in  %% Line 1198
		  apply 'first_object'/8
		      (SPs, Ss, Bs, Head, %% Line 1199
					  [E|ObjsToRead], %% Line 1199
							  [{P2,512}|ToRead], %% Line 1199
									     Ls, %% Line 1199
										 LU)
	  %% Line 1200
	  <[],[],[],Head,ObjsToRead,ToRead,Ls,LU> when 'true' ->
	      %% Line 1201
	      case call 'dets_utils':'pread'
		       (ToRead, Head) of
		<{'ok',Bins}> when 'true' ->
		    let <_cor12> =
			catch
			    %% Line 1202
			    apply 'eval_first'/5
				(Bins, ObjsToRead, Head, Ls, LU)
		    in  %% Line 1202
			case _cor12 of
			  %% Line 1203
			  <{'ok',NLs,NLU}> when 'true' ->
			      %% Line 1204
			      case apply 'create_writes'/4
				       (NLs, Head, [], 0) of
				%% Line 1205
				<{Head1,[],0}> when 'true' ->
				    %% Line 1206
				    {Head1,NLU,[]}
				%% Line 1207
				<{Head1,Ws,No}> when 'true' ->
				    %% Line 1208
				    case apply 'update_no_objects'/3
					     (Head1, Ws, No) of
				      <{NewHead,Ws2}> when 'true' ->
					  %% Line 1209
					  {NewHead,NLU,Ws2}
				      ( <_cor13> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor13})
					-| ['compiler_generated'] )
				    end
				( <_cor14> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor14})
				  -| ['compiler_generated'] )
			      end
			  %% Line 1211
			  <_X_Error> when 'true' ->
			      let <_cor15> =
				  %% Line 1212
				  call 'dets_utils':'corrupt_reason'
				      (Head, 'bad_object')
			      in  %% Line 1212
				  call 'erlang':'throw'
				      (_cor15)
			end
		( <_cor11> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor11})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor24,_cor23,_cor22,_cor21,_cor20,_cor19,_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22,_cor21,_cor20,_cor19,_cor18,_cor17})
		  -| [{'function_name',{'first_object',8}}] )
	    -| ['compiler_generated'] )
	end
'update_no_objects'/3 =
    %% Line 1217
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Head,Ws,0> when 'true' ->
	      {Head,Ws}
	  %% Line 1218
	  <Head,Ws,Delta> when 'true' ->
	      %% Line 1219
	      ( case Head of
		  ( <( {'head',_cor20,_cor21,_cor22,_cor23,_rec60,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49}
		       -| ['compiler_generated'] )> when 'true' ->
			let <NewNo> =
			    %% Line 1220
			    call 'erlang':'+'
				(_rec60, Delta)
			in  let <_cor12> =
				%% Line 1222
				case <> of
				  %% Line 1223
				  <>
				      when call 'erlang':'>'
					    (NewNo,
					     2097152) ->
				      %% Line 1224
				      Ws
				  %% Line 1225
				  <>
				      when try
					    let <_cor9> =
						call 'erlang':'bsr'
						    (_rec60, 8)
					    in  let <_cor8> =
						    call 'erlang':'bsr'
							(NewNo, 8)
						in  call 'erlang':'=:='
							(_cor9, _cor8)
					of <Try> ->
					    Try
					catch <T,R> ->
					    'false' ->
				      %% Line 1226
				      Ws
				  %% Line 1227
				  <> when 'true' ->
				      let <_cor10> =
					  %% Line 1228
					  #{#<NewNo>(32,1,'integer',['unsigned'|['big']])}#
				      in  %% Line 1228
					  [{32,_cor10}|Ws]
				end
			    in  let <_cor16> =
				    %% Line 1230
				    call 'erlang':'setelement'
					(6, Head, NewNo)
				in  %% Line 1230
				    {_cor16,_cor12}
		    -| ['compiler_generated'] )
		  ( <_cor50> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'eval_first'/5 =
    %% Line 1232
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[#{#<Next>(32,1,'integer',['unsigned'|['big']]),
	      #<Sz>(32,1,'integer',['unsigned'|['big']]),
	      #<_X_Status>(32,1,'integer',['unsigned'|['big']]),
	      #<Bin>('all',8,'binary',['unsigned'|['big']])}#|Bins],%% Line 1233
								    [SP|SPs],%% Line 1233
									     Head,%% Line 1233
										  Ls,%% Line 1233
										     LU> when 'true' ->
	      %% Line 1234
	      case SP of
		<{P1,P2,WLs}> when 'true' ->
		    let <L0> =
			%% Line 1235
			[{'old',P1}|[]]
		    in  %% Line 1236
			case call 'erlang':'byte_size'
				 (Bin) of
			  %% Line 1237
			  <BinSz>
			      when call 'erlang':'>='
				    (BinSz,
				     Sz) ->
			      let <Term> =
				  %% Line 1238
				  call 'erlang':'binary_to_term'
				      (Bin)
			      in  %% Line 1239
				  ( case Head of
				      ( <( {'head',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_rec62,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49}
					   -| ['compiler_generated'] )> when 'true' ->
					    let <Key> =
						call 'erlang':'element'
						    (_rec62, Term)
					    in  %% Line 1240
						case apply 'find_key'/9
							 (Head, P2, Next, Sz, Term, Key, WLs, L0, LU) of
						  <{L,NLU}> when 'true' ->
						      %% Line 1241
						      apply 'eval_first'/5
							  (Bins, SPs, Head, [L|Ls], NLU)
						  ( <_cor11> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_cor11})
						    -| ['compiler_generated'] )
						end
					-| ['compiler_generated'] )
				      ( <_cor50> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','head'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			  %% Line 1242
			  <_X_BinSz> when 'true' ->
			      let <_cor12> =
				  %% Line 1243
				  call 'erlang':'+'
				      (Sz, 12)
			      in  %% Line 1243
				  case apply 'eval_slot'/6
					   (Head, _cor12, P2, WLs, L0, LU) of
				    <{L,NLU}> when 'true' ->
					%% Line 1244
					apply 'eval_first'/5
					    (Bins, SPs, Head, [L|Ls], NLU)
				    ( <_cor13> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor13})
				      -| ['compiler_generated'] )
				  end
			end
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1246
	  <[],[],_X_Head,Ls,LU> when 'true' ->
	      %% Line 1247
	      {'ok',Ls,LU}
	  ( <_cor19,_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17,_cor16,_cor15})
		  -| [{'function_name',{'eval_first',5}}] )
	    -| ['compiler_generated'] )
	end
'eval_slot'/6 =
    %% Line 1249
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_Head,_X_TrySize,_X_Pos = 0,[],L,LU> when 'true' ->
	      %% Line 1250
	      {L,LU}
	  %% Line 1251
	  <Head,_X_TrySize,Pos = 0,[WL|WLs],L,LU> when 'true' ->
	      %% Line 1252
	      case WL of
		<{_X_Key,{_X_Delete,LookUp,Objects}}> when 'true' ->
		    %% Line 1253
		    case apply 'end_of_key'/4
			     (Objects, LookUp, L, []) of
		      <{NL,NLU}> when 'true' ->
			  let <_cor8> =
			      %% Line 1254
			      call 'erlang':'++'
				  (NLU, LU)
			  in  %% Line 1254
			      apply 'eval_slot'/6
				  (Head, 512, Pos, WLs, NL, _cor8)
		      ( <_cor7> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor7})
			-| ['compiler_generated'] )
		    end
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor6})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1255
	  <Head,TrySize,Pos,WLs,L,LU> when 'true' ->
	      %% Line 1256
	      case apply 'prterm'/3
		       (Head, Pos, TrySize) of
		<{NextPos,Size,Term}> when 'true' ->
		    %% Line 1257
		    ( case Head of
			( <( {'head',_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_rec63,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <Key> =
				  call 'erlang':'element'
				      (_rec63, Term)
			      in  %% Line 1258
				  apply 'find_key'/9
				      (Head, Pos, NextPos, Size, Term, Key, WLs, L, LU)
			  -| ['compiler_generated'] )
			( <_cor49> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','head'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor9> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor9})
		  -| ['compiler_generated'] )
	      end
	end
'find_key'/9 =
    %% Line 1260
    fun (_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1261
	case call 'lists':'keyfind'
		 (_cor3, 1, _cor2) of
	  %% Line 1262
	  <WL = {_cor22,{Delete,LookUp,Objects}}> when 'true' ->
	      let <NWLs> =
		  %% Line 1263
		  call 'lists':'delete'
		      (WL, _cor2)
	      in  %% Line 1264
		  case apply 'eval_object'/9
			   (_cor5, _cor4, Delete, LookUp, %% Line 1265
							  Objects, _cor8, _cor7, _cor1, %% Line 1265
											[]) of
		    <{NewObjects,NL,LUK}> when 'true' ->
			%% Line 1266
			apply 'eval_key'/10
			    (_cor3, Delete, LookUp, NewObjects, _cor8, _cor6, %% Line 1267
									      NWLs, %% Line 1267
										    NL, _cor0, %% Line 1267
											       LUK)
		    ( <_cor10> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor10})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1268
	  <'false'> when 'true' ->
	      let <L0> =
		  %% Line 1269
		  [{'old',_cor7}|_cor1]
	      in  %% Line 1270
		  apply 'eval_slot'/6
		      (_cor8, 512, _cor6, _cor2, L0, _cor0)
	  ( <_cor12> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor12})
	    -| ['compiler_generated'] )
	end
'eval_key'/10 =
    %% Line 1273
    fun (_cor9,_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor9,_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_Key,_X_Delete,Lookup,_X_Objects,Head = {'head',_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68},Pos,WLs,L,LU,LUK>
	      when %% Line 1274
		call 'erlang':'=:='
		    (_cor46,
		     'set') ->
	      let <_cor17> =
		  %% Line 1275
		  case Lookup of
		    %% Line 1276
		    <{'lookup',Pid}> when 'true' ->
			[{Pid,LUK}|LU]
		    %% Line 1277
		    <'skip'> when 'true' ->
			LU
		    ( <_cor16> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor16})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 1279
		  apply 'eval_slot'/6
		      (Head, 512, Pos, WLs, L, _cor17)
	  %% Line 1280
	  <_X_Key,_X_Delete,LookUp,Objects,Head,Pos,WLs,L,LU,LUK>
	      when %% Line 1281
		call 'erlang':'=:='
		    (Pos,
		     0) ->
	      %% Line 1282
	      case apply 'end_of_key'/4
		       (Objects, LookUp, L, LUK) of
		<{NL,NLU}> when 'true' ->
		    let <_cor20> =
			%% Line 1283
			call 'erlang':'++'
			    (NLU, LU)
		    in  %% Line 1283
			apply 'eval_slot'/6
			    (Head, 512, Pos, WLs, NL, _cor20)
		( <_cor19> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor19})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1284
	  <Key,Delete,LookUp,Objects,Head,Pos,WLs,L,LU,LUK> when 'true' ->
	      %% Line 1285
	      case apply 'prterm'/3
		       (Head, Pos, 512) of
		<{NextPos,Size,Term}> when 'true' ->
		    %% Line 1286
		    ( case Head of
			( <( {'head',_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_rec64,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98}
			     -| ['compiler_generated'] )> when 'true' ->
			      case call 'erlang':'element'
				       (_rec64, Term) of
				%% Line 1287
				<_cor100>
				    when call 'erlang':'=:='
					  (_cor100,
					   Key) ->
				    %% Line 1288
				    case %% Line 1289
					 apply 'eval_object'/9
					     (Size, Term, Delete, LookUp, Objects, Head, Pos, L, LUK) of
				      <{NewObjects,NL,LUK1}> when 'true' ->
					  %% Line 1290
					  apply 'eval_key'/10
					      (Key, Delete, LookUp, NewObjects, Head, NextPos, WLs, %% Line 1291
												    NL, %% Line 1291
													LU, %% Line 1291
													    LUK1)
				      ( <_cor24> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor24})
					-| ['compiler_generated'] )
				    end
				%% Line 1292
				<Key2> when 'true' ->
				    %% Line 1293
				    case apply 'end_of_key'/4
					     (Objects, LookUp, L, LUK) of
				      <{L1,NLU}> when 'true' ->
					  let <_cor26> =
					      %% Line 1294
					      call 'erlang':'++'
						  (NLU, LU)
					  in  %% Line 1294
					      apply 'find_key'/9
						  (Head, Pos, NextPos, Size, Term, Key2, WLs, L1, _cor26)
				      ( <_cor25> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor25})
					-| ['compiler_generated'] )
				    end
			      end
			  -| ['compiler_generated'] )
			( <_cor99> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','head'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor21> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor21})
		  -| ['compiler_generated'] )
	      end
	end
'eval_object'/9 =
    %% Line 1298
    fun (_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1299
	( case _cor3 of
	    ( <( {'head',_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_rec65,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 1300
		  case call 'lists':'keyfind'
			   (_cor7, 1, _cor4) of
		    %% Line 1301
		    <{_X_Object,N}>
			when call 'erlang':'=:='
			      (N,
			       0) ->
			let <L1> =
			    %% Line 1302
			    [{'delete',_cor2,_cor8}|_cor1]
			in  %% Line 1303
			    {_cor4,L1,_cor0}
		    %% Line 1304
		    <{_X_Object,N}>
			when let <_cor13> =
			      call 'erlang':'<'
				  (N, 0)
			  in  let <_cor14> =
				  call 'erlang':'=:='
				      (_rec65, 'set')
			      in  call 'erlang':'and'
				      (_cor13, _cor14) ->
			let <L1> =
			    %% Line 1305
			    [{'old',_cor2}|_cor1]
			in  %% Line 1352
			    ( case <_cor5,_cor4,_cor7,L1,_cor0> of
				( <( {( 'lookup'
					-| ['compiler_generated'] ),( _cor10
								      -| ['compiler_generated'] )}
				     -| ['compiler_generated'] ),_fol1858,_fol1859,( L
										     -| ['compiler_generated'] ),_fol1860> when ( 'true'
																  -| ['compiler_generated'] ) ->
				      %% Line 1353
				      ( {_fol1858,( L
						    -| ['compiler_generated'] ),( [_fol1859|_fol1860]
										  -| ['compiler_generated'] )}
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				%% Line 1354
				( <( 'skip'
				     -| ['compiler_generated'] ),_fol1861,( _X_Term
									    -| ['compiler_generated'] ),( L
													  -| ['compiler_generated'] ),_fol1862> when ( 'true'
																		       -| ['compiler_generated'] ) ->
				      %% Line 1355
				      ( {_fol1861,( L
						    -| ['compiler_generated'] ),_fol1862}
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <( _cor9
				     -| ['compiler_generated'] ),_fol1898,_fol1899,_fol1900,_fol1901> when ( 'true'
													     -| ['compiler_generated'] ) ->
				      ( primop ( 'match_fail'
						 -| ['compiler_generated'] )
					    (( {( 'function_clause'
						  -| ['compiler_generated'] ),( _cor9
										-| ['compiler_generated'] ),_fol1898,_fol1899,_fol1900,_fol1901}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
		    %% Line 1307
		    <{Object,_X_N}>
			when call 'erlang':'=:='
			      (_rec65,
			       'bag') ->
			let <L1> =
			    %% Line 1308
			    [{'old',_cor2}|_cor1]
			in  let <Objects1> =
				%% Line 1309
				call 'lists':'keydelete'
				    (Object, 1, _cor4)
			    in  %% Line 1352
				( case <_cor5,Objects1,_cor7,L1,_cor0> of
				    ( <( {( 'lookup'
					    -| ['compiler_generated'] ),( _cor10
									  -| ['compiler_generated'] )}
					 -| ['compiler_generated'] ),( Objects
								       -| ['compiler_generated'] ),_fol1863,( L
													      -| ['compiler_generated'] ),_fol1864> when ( 'true'
																			   -| ['compiler_generated'] ) ->
					  %% Line 1353
					  ( {( Objects
					       -| ['compiler_generated'] ),( L
									     -| ['compiler_generated'] ),( [_fol1863|_fol1864]
													   -| ['compiler_generated'] )}
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    %% Line 1354
				    ( <( 'skip'
					 -| ['compiler_generated'] ),( Objects
								       -| ['compiler_generated'] ),( _X_Term
												     -| ['compiler_generated'] ),( L
																   -| ['compiler_generated'] ),_fol1865> when ( 'true'
																						-| ['compiler_generated'] ) ->
					  %% Line 1355
					  ( {( Objects
					       -| ['compiler_generated'] ),( L
									     -| ['compiler_generated'] ),_fol1865}
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    ( <( _cor9
					 -| ['compiler_generated'] ),_fol1902,_fol1903,_fol1904,_fol1905> when ( 'true'
														 -| ['compiler_generated'] ) ->
					  ( primop ( 'match_fail'
						     -| ['compiler_generated'] )
						(( {( 'function_clause'
						      -| ['compiler_generated'] ),( _cor9
										    -| ['compiler_generated'] ),_fol1902,_fol1903,_fol1904,_fol1905}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
		    %% Line 1311
		    <{Object,N}>
			when let <_cor18> =
			      call 'erlang':'<'
				  (N, 0)
			  in  let <_cor19> =
				  call 'erlang':'=:='
				      (_rec65, 'duplicate_bag')
			      in  call 'erlang':'and'
				      (_cor18, _cor19) ->
			let <L1> =
			    %% Line 1312
			    [{'old',_cor2}|_cor1]
			in  let <_cor21> =
				%% Line 1313
				call 'erlang':'+'
				    (N, 1)
			    in  let <Objects1> =
				    %% Line 1313
				    call 'lists':'keyreplace'
					(Object, 1, _cor4, {Object,_cor21})
				in  %% Line 1352
				    ( case <_cor5,Objects1,_cor7,L1,_cor0> of
					( <( {( 'lookup'
						-| ['compiler_generated'] ),( _cor10
									      -| ['compiler_generated'] )}
					     -| ['compiler_generated'] ),( Objects
									   -| ['compiler_generated'] ),_fol1866,( L
														  -| ['compiler_generated'] ),_fol1867> when ( 'true'
																			       -| ['compiler_generated'] ) ->
					      %% Line 1353
					      ( {( Objects
						   -| ['compiler_generated'] ),( L
										 -| ['compiler_generated'] ),( [_fol1866|_fol1867]
													       -| ['compiler_generated'] )}
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					%% Line 1354
					( <( 'skip'
					     -| ['compiler_generated'] ),( Objects
									   -| ['compiler_generated'] ),( _X_Term
													 -| ['compiler_generated'] ),( L
																       -| ['compiler_generated'] ),_fol1868> when ( 'true'
																						    -| ['compiler_generated'] ) ->
					      %% Line 1355
					      ( {( Objects
						   -| ['compiler_generated'] ),( L
										 -| ['compiler_generated'] ),_fol1868}
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <( _cor9
					     -| ['compiler_generated'] ),_fol1906,_fol1907,_fol1908,_fol1909> when ( 'true'
														     -| ['compiler_generated'] ) ->
					      ( primop ( 'match_fail'
							 -| ['compiler_generated'] )
						    (( {( 'function_clause'
							  -| ['compiler_generated'] ),( _cor9
											-| ['compiler_generated'] ),_fol1906,_fol1907,_fol1908,_fol1909}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
		    %% Line 1315
		    <{_X_Object,N}>
			when let <_cor23> =
			      call 'erlang':'>'
				  (N, 0)
			  in  let <_cor24> =
				  call 'erlang':'=:='
				      (_rec65, 'duplicate_bag')
			      in  call 'erlang':'and'
				      (_cor23, _cor24) ->
			let <L1> =
			    %% Line 1316
			    [{'old',_cor2}|_cor1]
			in  %% Line 1352
			    ( case <_cor5,_cor4,_cor7,L1,_cor0> of
				( <( {( 'lookup'
					-| ['compiler_generated'] ),( _cor10
								      -| ['compiler_generated'] )}
				     -| ['compiler_generated'] ),_fol1869,_fol1870,( L
										     -| ['compiler_generated'] ),_fol1871> when ( 'true'
																  -| ['compiler_generated'] ) ->
				      %% Line 1353
				      ( {_fol1869,( L
						    -| ['compiler_generated'] ),( [_fol1870|_fol1871]
										  -| ['compiler_generated'] )}
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				%% Line 1354
				( <( 'skip'
				     -| ['compiler_generated'] ),_fol1872,( _X_Term
									    -| ['compiler_generated'] ),( L
													  -| ['compiler_generated'] ),_fol1873> when ( 'true'
																		       -| ['compiler_generated'] ) ->
				      %% Line 1355
				      ( {_fol1872,( L
						    -| ['compiler_generated'] ),_fol1873}
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <( _cor9
				     -| ['compiler_generated'] ),_fol1910,_fol1911,_fol1912,_fol1913> when ( 'true'
													     -| ['compiler_generated'] ) ->
				      ( primop ( 'match_fail'
						 -| ['compiler_generated'] )
					    (( {( 'function_clause'
						  -| ['compiler_generated'] ),( _cor9
										-| ['compiler_generated'] ),_fol1910,_fol1911,_fol1912,_fol1913}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
		    %% Line 1318
		    <'false'>
			when let <_cor26> =
			      call 'erlang':'=:='
				  (_rec65, 'set')
			  in  let <_cor27> =
				  call 'erlang':'=:='
				      (_cor6, 'delete')
			      in  call 'erlang':'and'
				      (_cor26, _cor27) ->
			%% Line 1319
			case call 'lists':'keyfind'
				 (-1, 2, _cor4) of
			  %% Line 1320
			  <'false'> when 'true' ->
			      let <L1> =
				  %% Line 1321
				  [{'delete',_cor2,_cor8}|_cor1]
			      in  %% Line 1322
				  {[],L1,_cor0}
			  %% Line 1323
			  <{Term2,-1}> when 'true' ->
			      let <Bin2> =
				  %% Line 1324
				  call 'erlang':'term_to_binary'
				      (Term2)
			      in  let <NSize> =
				      %% Line 1325
				      call 'erlang':'byte_size'
					  (Bin2)
				  in  let <_cor36> =
					  %% Line 1327
					  case <> of
					    %% Line 1328
					    <>
						when call 'erlang':'=:='
						      (NSize,
						       _cor8) ->
						%% Line 1329
						'true'
					    %% Line 1330
					    <> when 'true' ->
						let <_cor32> =
						    %% Line 1331
						    call 'erlang':'+'
							(_cor8, 12)
						in  ( let <_fol1875> =
							  %% Line 1439
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( '+'
												 -| ['compiler_generated'] )
								(_cor32, ( 1
									   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      in  ( let <_fol1876> =
								%% Line 1439
								( call ( 'dets_utils'
									 -| ['compiler_generated'] ):( 'log2'
												       -| ['compiler_generated'] )
								      (_fol1875)
								  -| ['compiler_generated'] )
							    in  let <SizePos> =
								    %% Line 1439
								    ( call ( 'erlang'
									     -| ['compiler_generated'] ):( '+'
													   -| ['compiler_generated'] )
									  (( 1
									     -| ['compiler_generated'] ), _fol1876)
								      -| ['compiler_generated'] )
								in  let <_cor34> =
									%% Line 1332
									call 'erlang':'+'
									    (NSize, 12)
								    in  ( let <_fol1879> =
									      %% Line 1439
									      ( call ( 'erlang'
										       -| ['compiler_generated'] ):( '+'
														     -| ['compiler_generated'] )
										    (_cor34, ( 1
											       -| ['compiler_generated'] ))
										-| ['compiler_generated'] )
									  in  ( let <_fol1880> =
										    %% Line 1439
										    ( call ( 'dets_utils'
											     -| ['compiler_generated'] ):( 'log2'
															   -| ['compiler_generated'] )
											  (_fol1879)
										      -| ['compiler_generated'] )
										in  let <NSizePos> =
											%% Line 1439
											( call ( 'erlang'
												 -| ['compiler_generated'] ):( '+'
															       -| ['compiler_generated'] )
											      (( 1
												 -| ['compiler_generated'] ), _fol1880)
											  -| ['compiler_generated'] )
										    in  %% Line 1333
											call 'erlang':'=:='
											    (SizePos, NSizePos)
										-| ['compiler_generated'] )
									  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
					  end
				      in  let <_cor38> =
					      %% Line 1335
					      case <> of
						%% Line 1336
						<>
						    when _cor36 ->
						    %% Line 1337
						    {'overwrite',Bin2,_cor2}
						%% Line 1338
						<> when 'true' ->
						    %% Line 1339
						    {'replace',Bin2,_cor2,_cor8}
					      end
					  in  let <_fol1914> =
						  %% Line 1341
						  [_cor38|_cor1]
					      in  %% Line 1352
						  ( case <_cor5,Term2,_fol1914,_cor0> of
						      ( <( {( 'lookup'
							      -| ['compiler_generated'] ),( _cor10
											    -| ['compiler_generated'] )}
							   -| ['compiler_generated'] ),( Term
											 -| ['compiler_generated'] ),( L
														       -| ['compiler_generated'] ),_fol1882> when ( 'true'
																				    -| ['compiler_generated'] ) ->
							    %% Line 1353
							    ( {[],( L
								    -| ['compiler_generated'] ),( [( Term
												     -| ['compiler_generated'] )|_fol1882]
												  -| ['compiler_generated'] )}
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						      %% Line 1354
						      ( <( 'skip'
							   -| ['compiler_generated'] ),( _X_Term
											 -| ['compiler_generated'] ),( L
														       -| ['compiler_generated'] ),_fol1883> when ( 'true'
																				    -| ['compiler_generated'] ) ->
							    %% Line 1355
							    ( {[],( L
								    -| ['compiler_generated'] ),_fol1883}
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						      ( <( _cor9
							   -| ['compiler_generated'] ),_fol1915,_fol1916,_fol1917> when ( 'true'
															  -| ['compiler_generated'] ) ->
							    ( primop ( 'match_fail'
								       -| ['compiler_generated'] )
								  (( {( 'function_clause'
									-| ['compiler_generated'] ),( _cor9
												      -| ['compiler_generated'] ),[],_fol1915,_fol1916,_fol1917}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
						    -| ['compiler_generated'] )
			  ( <_cor40> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor40})
			    -| ['compiler_generated'] )
			end
		    %% Line 1343
		    <'false'>
			when call 'erlang':'=:='
			      (_cor6,
			       'delete') ->
			let <L1> =
			    %% Line 1344
			    [{'delete',_cor2,_cor8}|_cor1]
			in  %% Line 1345
			    {_cor4,L1,_cor0}
		    %% Line 1346
		    <'false'> when 'true' ->
			let <L1> =
			    %% Line 1347
			    [{'old',_cor2}|_cor1]
			in  %% Line 1352
			    ( case <_cor5,_cor4,_cor7,L1,_cor0> of
				( <( {( 'lookup'
					-| ['compiler_generated'] ),( _cor10
								      -| ['compiler_generated'] )}
				     -| ['compiler_generated'] ),_fol1884,_fol1885,( L
										     -| ['compiler_generated'] ),_fol1886> when ( 'true'
																  -| ['compiler_generated'] ) ->
				      %% Line 1353
				      ( {_fol1884,( L
						    -| ['compiler_generated'] ),( [_fol1885|_fol1886]
										  -| ['compiler_generated'] )}
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				%% Line 1354
				( <( 'skip'
				     -| ['compiler_generated'] ),_fol1887,( _X_Term
									    -| ['compiler_generated'] ),( L
													  -| ['compiler_generated'] ),_fol1888> when ( 'true'
																		       -| ['compiler_generated'] ) ->
				      %% Line 1355
				      ( {_fol1887,( L
						    -| ['compiler_generated'] ),_fol1888}
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <( _cor9
				     -| ['compiler_generated'] ),_fol1918,_fol1919,_fol1920,_fol1921> when ( 'true'
													     -| ['compiler_generated'] ) ->
				      ( primop ( 'match_fail'
						 -| ['compiler_generated'] )
					    (( {( 'function_clause'
						  -| ['compiler_generated'] ),( _cor9
										-| ['compiler_generated'] ),_fol1918,_fol1919,_fol1920,_fol1921}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
		    ( <_cor43> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor43})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor83> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'wl_lookup'/5 =
    %% Line 1352
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'lookup',_cor10},Objects,Term,L,LU> when 'true' ->
	      %% Line 1353
	      {Objects,L,[Term|LU]}
	  %% Line 1354
	  <'skip',Objects,_X_Term,L,LU> when 'true' ->
	      %% Line 1355
	      {Objects,L,LU}
	  ( <_cor9,_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6,_cor5})
		  -| [{'function_name',{'wl_lookup',5}}] )
	    -| ['compiler_generated'] )
	end
'end_of_key'/4 =
    %% Line 1357
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{Object,N0}|Objs],LookUp,L,LU>
	      when call 'erlang':'=/='
		    (N0,
		     0) ->
	      let <N> =
		  %% Line 1358
		  call 'erlang':'abs'
		      (N0)
	      in  let <_cor5> =
		      %% Line 1359
		      call 'erlang':'term_to_binary'
			  (Object)
		  in  let <NL> =
			  %% Line 1359
			  [{'insert',N,_cor5}|L]
		      in  let <_cor9> =
			      %% Line 1360
			      case LookUp of
				%% Line 1361
				<{'lookup',_cor15}> when 'true' ->
				    let <_cor7> =
					%% Line 1362
					call 'lists':'duplicate'
					    (N, Object)
				    in  %% Line 1362
					call 'erlang':'++'
					    (_cor7, LU)
				%% Line 1363
				<'skip'> when 'true' ->
				    %% Line 1364
				    LU
				( <_cor8> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor8})
				  -| ['compiler_generated'] )
			      end
			  in  %% Line 1366
			      apply 'end_of_key'/4
				  (Objs, LookUp, NL, _cor9)
	  %% Line 1367
	  <[_cor16|Objects],LookUp,L,LU> when 'true' ->
	      %% Line 1368
	      apply 'end_of_key'/4
		  (Objects, LookUp, L, LU)
	  %% Line 1369
	  <[],{'lookup',Pid},L,LU> when 'true' ->
	      %% Line 1370
	      {L,[{Pid,LU}|[]]}
	  %% Line 1371
	  <[],'skip',L,LU> when 'true' ->
	      %% Line 1372
	      {L,LU}
	  ( <_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'end_of_key',4}}] )
	    -| ['compiler_generated'] )
	end
'create_writes'/4 =
    %% Line 1374
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[L|Ls],H,Ws,No> when 'true' ->
	      %% Line 1375
	      case apply 'create_writes'/6
		       (L, H, Ws, No, 0, 'true') of
		<{NH,NWs,NNo}> when 'true' ->
		    %% Line 1376
		    apply 'create_writes'/4
			(Ls, NH, NWs, NNo)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1377
	  <[],H,Ws,No> when 'true' ->
	      let <_cor5> =
		  %% Line 1378
		  call 'lists':'reverse'
		      (Ws)
	      in  %% Line 1378
		  {H,_cor5,No}
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'create_writes',4}}] )
	    -| ['compiler_generated'] )
	end
'create_writes'/6 =
    %% Line 1380
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[{'old',Pos}|L],H,Ws,No,_X_Next,'true'> when 'true' ->
	      %% Line 1381
	      apply 'create_writes'/6
		  (L, H, Ws, No, Pos, 'true')
	  %% Line 1382
	  <[{'old',Pos}|L],H,Ws,No,Next,'false'> when 'true' ->
	      let <_cor6> =
		  %% Line 1383
		  #{#<Next>(32,1,'integer',['unsigned'|['big']])}#
	      in  let <W> = {%% Line 1383
		       Pos,_cor6}
		  in  %% Line 1384
		      apply 'create_writes'/6
			  (L, H, [W|Ws], No, Pos, 'true')
	  %% Line 1385
	  <[{'insert',N,Bin}|L],H,Ws,No,Next,_X_NextIsOld> when 'true' ->
	      let <_cor8> =
		  %% Line 1386
		  call 'erlang':'byte_size'
		      (Bin)
	      in  %% Line 1386
		  case apply 'create_inserts'/6
			   (N, H, Ws, Next, _cor8, Bin) of
		    <{NH,NWs,Pos}> when 'true' ->
			let <_cor10> =
			    %% Line 1387
			    call 'erlang':'+'
				(No, N)
			in  %% Line 1387
			    apply 'create_writes'/6
				(L, NH, NWs, _cor10, Pos, 'false')
		    ( <_cor9> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor9})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1388
	  <[{'overwrite',Bin,Pos}|L],H,Ws,No,Next,_cor36> when 'true' ->
	      let <Size> =
		  %% Line 1389
		  call 'erlang':'byte_size'
		      (Bin)
	      in  let <_cor12> =
		      %% Line 1390
		      #{#<Next>(32,1,'integer',['unsigned'|['big']]),
			#<Size>(32,1,'integer',['unsigned'|['big']]),
			#<305419896>(32,1,'integer',['unsigned'|['big']])}#
		  in  let <W> =
			  %% Line 1390
			  {Pos,[_cor12|[Bin|[]]]}
		      in  %% Line 1391
			  apply 'create_writes'/6
			      (L, H, [W|Ws], No, Pos, 'true')
	  %% Line 1392
	  <[{'replace',Bin,Pos,OSize}|L],H,Ws,No,Next,_cor37> when 'true' ->
	      let <Size> =
		  %% Line 1393
		  call 'erlang':'byte_size'
		      (Bin)
	      in  let <_cor15> =
		      %% Line 1394
		      call 'erlang':'+'
			  (OSize, 12)
		  in  %% Line 1394
		      case call 'dets_utils':'free'
			       (H, Pos, _cor15) of
			<{H1,_cor38}> when 'true' ->
			    let <_cor17> =
				%% Line 1395
				call 'erlang':'+'
				    (12, Size)
			    in  %% Line 1395
				case call 'dets_utils':'alloc'
					 (H1, _cor17) of
				  <{NH,NewPos,_cor39}> when 'true' ->
				      let <_cor19> =
					  %% Line 1396
					  #{#<Next>(32,1,'integer',['unsigned'|['big']]),
					    #<Size>(32,1,'integer',['unsigned'|['big']]),
					    #<305419896>(32,1,'integer',['unsigned'|['big']])}#
				      in  let <W1> =
					      %% Line 1396
					      {NewPos,[_cor19|[Bin|[]]]}
					  in  let <_cor23> =
						  %% Line 1397
						  case <> of
						    %% Line 1398
						    <>
							when call 'erlang':'=:='
							      (Pos,
							       NewPos) ->
							%% Line 1399
							[W1|Ws]
						    %% Line 1400
						    <> when 'true' ->
							let <_cor21> =
							    %% Line 1401
							    call 'erlang':'+'
								(Pos, 8)
							in  let <W2> = {_cor21,%% Line 1401
									#{#<3>(8,1,'integer',['unsigned'|['big']]),
									  #<171>(8,1,'integer',['unsigned'|['big']]),
									  #<205>(8,1,'integer',['unsigned'|['big']]),
									  #<239>(8,1,'integer',['unsigned'|['big']])}#}
							    in  %% Line 1402
								[W1|[W2|Ws]]
						  end
					      in  %% Line 1404
						  apply 'create_writes'/6
						      (L, NH, _cor23, No, NewPos, 'false')
				  ( <_cor18> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor18})
				    -| ['compiler_generated'] )
				end
			( <_cor16> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor16})
			  -| ['compiler_generated'] )
		      end
	  %% Line 1405
	  <[{'delete',Pos,Size}|L],H,Ws,No,Next,_cor40> when 'true' ->
	      let <_cor25> =
		  %% Line 1406
		  call 'erlang':'+'
		      (Size, 12)
	      in  %% Line 1406
		  case call 'dets_utils':'free'
			   (H, Pos, _cor25) of
		    <{NH,_cor41}> when 'true' ->
			let <_cor27> =
			    %% Line 1407
			    call 'erlang':'+'
				(Pos, 8)
			in  let <NWs> =
				%% Line 1407
				[{_cor27,#{#<3>(8,1,'integer',['unsigned'|['big']]),
					   #<171>(8,1,'integer',['unsigned'|['big']]),
					   #<205>(8,1,'integer',['unsigned'|['big']]),
					   #<239>(8,1,'integer',['unsigned'|['big']])}#}|Ws]
			    in  let <_cor29> =
				    %% Line 1408
				    call 'erlang':'-'
					(No, 1)
				in  %% Line 1408
				    apply 'create_writes'/6
					(L, NH, NWs, _cor29, Next, 'false')
		    ( <_cor26> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor26})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1409
	  <[],H,Ws,No,_X_Next,_X_NextIsOld> when 'true' ->
	      %% Line 1410
	      {H,Ws,No}
	  ( <_cor35,_cor34,_cor33,_cor32,_cor31,_cor30> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor35,_cor34,_cor33,_cor32,_cor31,_cor30})
		  -| [{'function_name',{'create_writes',6}}] )
	    -| ['compiler_generated'] )
	end
'create_inserts'/6 =
    %% Line 1412
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <0,H,Ws,Next,_X_Size,_X_Bin> when 'true' ->
	      %% Line 1413
	      {H,Ws,Next}
	  %% Line 1414
	  <N,H,Ws,Next,Size,Bin> when 'true' ->
	      let <_cor6> =
		  %% Line 1415
		  call 'erlang':'+'
		      (12, Size)
	      in  %% Line 1415
		  case call 'dets_utils':'alloc'
			   (H, _cor6) of
		    <{NH,Pos,_cor17}> when 'true' ->
			let <_cor8> =
			    %% Line 1416
			    #{#<Next>(32,1,'integer',['unsigned'|['big']]),
			      #<Size>(32,1,'integer',['unsigned'|['big']]),
			      #<305419896>(32,1,'integer',['unsigned'|['big']])}#
			in  let <W> =
				%% Line 1416
				{Pos,[_cor8|[Bin|[]]]}
			    in  let <_cor10> =
				    %% Line 1417
				    call 'erlang':'-'
					(N, 1)
				in  %% Line 1417
				    apply 'create_inserts'/6
					(_cor10, NH, [W|Ws], Pos, Size, Bin)
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor7})
		      -| ['compiler_generated'] )
		  end
	end
'slot_position'/1 =
    %% Line 1419
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 1420
	    call 'erlang':'bsr'
		(_cor0, 8)
	in  let <_cor2> =
		%% Line 1420
		call 'erlang':'*'
		    (4, _cor1)
	    in  let <Pos> =
		    %% Line 1420
		    call 'erlang':'+'
			(40, _cor2)
		in  let <Segment> =
			%% Line 1434
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'get'
							       -| ['compiler_generated'] )
			      (Pos)
			  -| ['compiler_generated'] )
		    in  let <_cor6> =
			    %% Line 1422
			    call 'erlang':'band'
				(_cor0, 255)
			in  let <_cor7> =
				%% Line 1422
				call 'erlang':'*'
				    (4, _cor6)
			    in  let <FinalPos> =
				    %% Line 1422
				    call 'erlang':'+'
					(Segment, _cor7)
				in  %% Line 1423
				    {FinalPos,4}
'actual_seg_size'/0 =
    %% Line 1426
    fun () ->
	( let <_cor2> =
	      %% Line 1439
	      ( call ( 'dets_utils'
		       -| ['compiler_generated'] ):( 'log2'
						     -| ['compiler_generated'] )
		    (1025)
		-| ['compiler_generated'] )
	  in  let <_cor1> =
		  %% Line 1439
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( '+'
							 -| ['compiler_generated'] )
			(( 1
			   -| ['compiler_generated'] ), ( _cor2
							  -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      in  let <_cor2> =
		      %% Line 1427
		      call 'erlang':'-'
			  (_cor1, 1)
		  in  %% Line 1427
		      call 'erlang':'bsl'
			  (1, _cor2)
	  -| ['compiler_generated'] )
'segp_cache'/2 =
    %% Line 1429
    fun (_cor1,_cor0) ->
	%% Line 1430
	call 'erlang':'put'
	    (_cor1, _cor0)
'get_segp'/1 =
    %% Line 1433
    fun (_cor0) ->
	%% Line 1434
	call 'erlang':'get'
	    (_cor0)
'sz2pos'/1 =
    %% Line 1438
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 1439
	    call 'erlang':'+'
		(_cor0, 1)
	in  let <_cor2> =
		%% Line 1439
		call 'dets_utils':'log2'
		    (_cor1)
	    in  %% Line 1439
		call 'erlang':'+'
		    (1, _cor2)
'scan_objs'/8 =
    %% Line 1441
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1442
	apply 'scan_objs'/6
	    (_cor6, _cor5, _cor4, _cor3, _cor2, _cor1)
'scan_objs'/6 =
    %% Line 1444
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Bin,From,To,L,Ts,-1> when 'true' ->
	      %% Line 1445
	      {'stop',Bin,From,To,L,Ts}
	  %% Line 1446
	  <B = #{#<_X_N>(32,1,'integer',['unsigned'|['big']]),
		 #<Sz>(32,1,'integer',['unsigned'|['big']]),
		 #<St>(32,1,'integer',['unsigned'|['big']]),
		 #<T>('all',8,'binary',['unsigned'|['big']])}#,From,To,L,Ts,R> when 'true' ->
	      %% Line 1447
	      case <> of
		%% Line 1448
		<>
		    when let <_cor6> =
			  call 'erlang':'=:='
			      (St, 305419896)
		      in  let <_cor7> =
			      %% Line 1449
			      call 'erlang':'=:='
				  (St, 61591023)
			  in  call 'erlang':'or'
				  (_cor6, _cor7) ->
		    %% Line 1450
		    case ( T
			   -| ['reuse_for_context'] ) of
		      %% Line 1451
		      <#{#<BinTerm>(Sz,8,'binary',['unsigned'|['big']]),
			 #<T2>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
			  let <NTs> =
			      %% Line 1452
			      [BinTerm|Ts]
			  in  let <OSz> =
				  %% Line 1453
				  call 'erlang':'+'
				      (Sz, 12)
			      in  ( let <_fol1941> =
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( '+'
									       -| ['compiler_generated'] )
					      (%% Line 1454
					       OSz, ( 1
						      -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    in  ( let <_fol1942> =
					      ( call ( 'dets_utils'
						       -| ['compiler_generated'] ):( 'log2'
										     -| ['compiler_generated'] )
						    (_fol1941)
						-| ['compiler_generated'] )
					  in  let <_cor10> =
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( '+'
											 -| ['compiler_generated'] )
							(( 1
							   -| ['compiler_generated'] ), _fol1942)
						    -| ['compiler_generated'] )
					      in  let <_cor11> =
						      %% Line 1454
						      call 'erlang':'-'
							  (_cor10, 1)
						  in  let <_cor12> =
							  %% Line 1454
							  call 'erlang':'bsl'
							      (1, _cor11)
						      in  let <Skip> =
							      %% Line 1454
							      call 'erlang':'-'
								  (_cor12, OSz)
							  in  let <F2> =
								  %% Line 1455
								  call 'erlang':'+'
								      (From, OSz)
							      in  let <_cor16> =
								      %% Line 1456
								      case <> of
									%% Line 1457
									<>
									    when call 'erlang':'<'
										  (R,
										   0) ->
									    %% Line 1458
									    call 'erlang':'+'
										(R, 1)
									%% Line 1459
									<> when 'true' ->
									    let <_cor15> =
										%% Line 1460
										call 'erlang':'+'
										    (R, OSz)
									    in  %% Line 1460
										call 'erlang':'+'
										    (_cor15, Skip)
								      end
								  in  %% Line 1472
								      ( case <T2,F2,To,Skip,L,NTs,_cor16> of
									  ( <( Bin
									       -| ['compiler_generated'] ),( From
													     -| ['compiler_generated'] ),_fol1944,_fol1945,_fol1946,( Ts
																				      -| ['compiler_generated'] ),( R
																								    -| ['compiler_generated'] )>
										when ( try
											( let <_cor7> =
											      ( call ( 'erlang'
												       -| ['compiler_generated'] ):( '+'
																     -| ['compiler_generated'] )
												    (( From
												       -| ['compiler_generated'] ), _fol1945)
												-| ['compiler_generated'] )
											  in  ( call ( 'erlang'
												       -| ['compiler_generated'] ):( '<'
																     -| ['compiler_generated'] )
												    (( _cor7
												       -| ['compiler_generated'] ), _fol1944)
												-| ['compiler_generated'] )
											  -| ['compiler_generated'] )
										    of <( Try
											  -| ['compiler_generated'] )> ->
											( Try
											  -| ['compiler_generated'] )
										    catch <( T
											     -| ['compiler_generated'] ),( R
															   -| ['compiler_generated'] )> ->
											( 'false'
											  -| ['compiler_generated'] )
										    -| ['compiler_generated'] ) ->
										( let <SkipPos> =
										      %% Line 1473
										      ( call ( 'erlang'
											       -| ['compiler_generated'] ):( '+'
															     -| ['compiler_generated'] )
											    (( From
											       -| ['compiler_generated'] ), _fol1945)
											-| ['compiler_generated'] )
										  in  %% Line 1474
										      ( case ( Bin
											       -| ['reuse_for_context','compiler_generated'] ) of
											  %% Line 1475
											  ( <( #{#<( _cor19
												     -| ['compiler_generated'] )>(_fol1945,( 8
																	     -| ['compiler_generated'] ),( 'binary'
																					   -| ['compiler_generated'] ),( ['unsigned'|['big']]
																									 -| ['compiler_generated'] )),
												 #<( Tail
												     -| ['compiler_generated'] )>(( 'all'
																    -| ['compiler_generated'] ),( 8
																				  -| ['compiler_generated'] ),( 'binary'
																								-| ['compiler_generated'] ),( ['unsigned'|['big']]
																											      -| ['compiler_generated'] ))}#
											       -| ['compiler_generated'] )> when ( 'true'
																   -| ['compiler_generated'] ) ->
												%% Line 1476
												( apply ( 'scan_objs'/6
													  -| ['compiler_generated'] )
												      (( Tail
													 -| ['compiler_generated'] ), ( SkipPos
																	-| ['compiler_generated'] ), _fol1944, _fol1946, ( Ts
																							   -| ['compiler_generated'] ), ( R
																											  -| ['compiler_generated'] ))
												  -| ['compiler_generated'] )
											    -| ['compiler_generated'] )
											  %% Line 1477
											  ( <( _cor20
											       -| ['compiler_generated'] )> when ( 'true'
																   -| ['compiler_generated'] ) ->
												%% Line 1478
												( {( 'more'
												     -| ['compiler_generated'] ),( SkipPos
																   -| ['compiler_generated'] ),_fol1944,_fol1946,( Ts
																						   -| ['compiler_generated'] ),( R
																										 -| ['compiler_generated'] ),( 0
																													       -| ['compiler_generated'] )}
												  -| ['compiler_generated'] )
											    -| ['compiler_generated'] )
											end
											-| ['compiler_generated'] )
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									  %% Line 1480
									  ( <( Bin
									       -| ['compiler_generated'] ),( From
													     -| ['compiler_generated'] ),_fol1947,_fol1948,_fol1949,( Ts
																				      -| ['compiler_generated'] ),( R
																								    -| ['compiler_generated'] )>
										when ( try
											( let <_cor10> =
											      ( call ( 'erlang'
												       -| ['compiler_generated'] ):( '+'
																     -| ['compiler_generated'] )
												    (( From
												       -| ['compiler_generated'] ), _fol1948)
												-| ['compiler_generated'] )
											  in  ( call ( 'erlang'
												       -| ['compiler_generated'] ):( '=:='
																     -| ['compiler_generated'] )
												    (( _cor10
												       -| ['compiler_generated'] ), _fol1947)
												-| ['compiler_generated'] )
											  -| ['compiler_generated'] )
										    of <( Try
											  -| ['compiler_generated'] )> ->
											( Try
											  -| ['compiler_generated'] )
										    catch <( T
											     -| ['compiler_generated'] ),( R
															   -| ['compiler_generated'] )> ->
											( 'false'
											  -| ['compiler_generated'] )
										    -| ['compiler_generated'] ) ->
										%% Line 1481
										( apply ( 'scan_next_allocated'/6
											  -| ['compiler_generated'] )
										      (( Bin
											 -| ['compiler_generated'] ), ( From
															-| ['compiler_generated'] ), _fol1947, _fol1949, ( Ts
																					   -| ['compiler_generated'] ), ( R
																									  -| ['compiler_generated'] ))
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									  %% Line 1482
									  ( <( _X_Bin
									       -| ['compiler_generated'] ),( From
													     -| ['compiler_generated'] ),( _X_To
																	   -| ['compiler_generated'] ),_fol1950,_fol1951,( Ts
																							   -| ['compiler_generated'] ),( R
																											 -| ['compiler_generated'] )> when ( 'true'
																															     -| ['compiler_generated'] ) ->
										( let <From1> =
										      %% Line 1483
										      ( call ( 'erlang'
											       -| ['compiler_generated'] ):( '+'
															     -| ['compiler_generated'] )
											    (( From
											       -| ['compiler_generated'] ), _fol1950)
											-| ['compiler_generated'] )
										  in  %% Line 1484
										      ( {( 'more'
											   -| ['compiler_generated'] ),( From1
															 -| ['compiler_generated'] ),( From1
																		       -| ['compiler_generated'] ),_fol1951,( Ts
																							      -| ['compiler_generated'] ),( R
																											    -| ['compiler_generated'] ),( 0
																															  -| ['compiler_generated'] )}
											-| ['compiler_generated'] )
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									end
									-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
		      %% Line 1463
		      <_cor27> when 'true' ->
			  let <_cor18> =
			      %% Line 1464
			      call 'erlang':'+'
				  (Sz, 12)
			  in  %% Line 1464
			      {'more',From,To,L,Ts,R,_cor18}
		    end
		%% Line 1466
		<> when 'true' ->
		    ( let <_fol1955> =
			  ( call ( 'dets_utils'
				   -| ['compiler_generated'] ):( 'log2'
								 -| ['compiler_generated'] )
				(1025)
			    -| ['compiler_generated'] )
		      in  ( let <_fol1957> =
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( '+'
								       -| ['compiler_generated'] )
				      (( 1
					 -| ['compiler_generated'] ), _fol1955)
				  -| ['compiler_generated'] )
			    in  ( let <_fol1958> =
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( '-'
									     -| ['compiler_generated'] )
					    (_fol1957, ( 1
							 -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  in  let <_cor20> =
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'bsl'
										 -| ['compiler_generated'] )
						(( 1
						   -| ['compiler_generated'] ), _fol1958)
					    -| ['compiler_generated'] )
				      in  %% Line 1472
					  ( case <B,From,To,_cor20,L,Ts,R> of
					      ( <( Bin
						   -| ['compiler_generated'] ),_fol1959,_fol1960,( Skip
												   -| ['compiler_generated'] ),_fol1961,_fol1962,_fol1963>
						    when ( try
							    ( let <_cor7> =
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( '+'
													 -| ['compiler_generated'] )
									(_fol1959, ( Skip
										     -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      in  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( '<'
													 -| ['compiler_generated'] )
									(( _cor7
									   -| ['compiler_generated'] ), _fol1960)
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							of <( Try
							      -| ['compiler_generated'] )> ->
							    ( Try
							      -| ['compiler_generated'] )
							catch <( T
								 -| ['compiler_generated'] ),( R
											       -| ['compiler_generated'] )> ->
							    ( 'false'
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] ) ->
						    ( let <SkipPos> =
							  %% Line 1473
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( '+'
												 -| ['compiler_generated'] )
								(_fol1959, ( Skip
									     -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      in  %% Line 1474
							  ( case ( Bin
								   -| ['reuse_for_context','compiler_generated'] ) of
							      %% Line 1475
							      ( <( #{#<( _cor19
									 -| ['compiler_generated'] )>(( Skip
													-| ['compiler_generated'] ),( 8
																      -| ['compiler_generated'] ),( 'binary'
																				    -| ['compiler_generated'] ),( ['unsigned'|['big']]
																								  -| ['compiler_generated'] )),
								     #<( Tail
									 -| ['compiler_generated'] )>(( 'all'
													-| ['compiler_generated'] ),( 8
																      -| ['compiler_generated'] ),( 'binary'
																				    -| ['compiler_generated'] ),( ['unsigned'|['big']]
																								  -| ['compiler_generated'] ))}#
								   -| ['compiler_generated'] )> when ( 'true'
												       -| ['compiler_generated'] ) ->
								    %% Line 1476
								    ( apply ( 'scan_objs'/6
									      -| ['compiler_generated'] )
									  (( Tail
									     -| ['compiler_generated'] ), ( SkipPos
													    -| ['compiler_generated'] ), _fol1960, _fol1961, _fol1962, _fol1963)
								      -| ['compiler_generated'] )
								-| ['compiler_generated'] )
							      %% Line 1477
							      ( <_fol1964> when ( 'true'
										  -| ['compiler_generated'] ) ->
								    %% Line 1478
								    ( {( 'more'
									 -| ['compiler_generated'] ),( SkipPos
												       -| ['compiler_generated'] ),_fol1960,_fol1961,_fol1962,_fol1963,( 0
																					 -| ['compiler_generated'] )}
								      -| ['compiler_generated'] )
								-| ['compiler_generated'] )
							    end
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      %% Line 1480
					      ( <( Bin
						   -| ['compiler_generated'] ),_fol1965,_fol1966,( Skip
												   -| ['compiler_generated'] ),_fol1967,_fol1968,_fol1969>
						    when ( try
							    ( let <_cor10> =
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( '+'
													 -| ['compiler_generated'] )
									(_fol1965, ( Skip
										     -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      in  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( '=:='
													 -| ['compiler_generated'] )
									(( _cor10
									   -| ['compiler_generated'] ), _fol1966)
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							of <( Try
							      -| ['compiler_generated'] )> ->
							    ( Try
							      -| ['compiler_generated'] )
							catch <( T
								 -| ['compiler_generated'] ),( R
											       -| ['compiler_generated'] )> ->
							    ( 'false'
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] ) ->
						    %% Line 1481
						    ( apply ( 'scan_next_allocated'/6
							      -| ['compiler_generated'] )
							  (( Bin
							     -| ['compiler_generated'] ), _fol1965, _fol1966, _fol1967, _fol1968, _fol1969)
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      %% Line 1482
					      ( <( _X_Bin
						   -| ['compiler_generated'] ),_fol1970,( _X_To
											  -| ['compiler_generated'] ),( Skip
															-| ['compiler_generated'] ),_fol1971,_fol1972,_fol1973> when ( 'true'
																						       -| ['compiler_generated'] ) ->
						    ( let <From1> =
							  %% Line 1483
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( '+'
												 -| ['compiler_generated'] )
								(_fol1970, ( Skip
									     -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      in  %% Line 1484
							  ( {( 'more'
							       -| ['compiler_generated'] ),( From1
											     -| ['compiler_generated'] ),( From1
															   -| ['compiler_generated'] ),_fol1971,_fol1972,_fol1973,( 0
																						    -| ['compiler_generated'] )}
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
	      end
	  %% Line 1469
	  <_X_B,From,To,L,Ts,R> when 'true' ->
	      %% Line 1470
	      {'more',From,To,L,Ts,R,0}
	end
'scan_skip'/7 =
    %% Line 1472
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Bin,From,To,Skip,L,Ts,R>
	      when try
		    let <_cor7> =
			call 'erlang':'+'
			    (From, Skip)
		    in  call 'erlang':'<'
			    (_cor7, To)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <SkipPos> =
		  %% Line 1473
		  call 'erlang':'+'
		      (From, Skip)
	      in  %% Line 1474
		  case ( Bin
			 -| ['reuse_for_context'] ) of
		    %% Line 1475
		    <#{#<_cor19>(Skip,8,'binary',['unsigned'|['big']]),
		       #<Tail>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
			%% Line 1476
			apply 'scan_objs'/6
			    (Tail, SkipPos, To, L, Ts, R)
		    %% Line 1477
		    <_cor20> when 'true' ->
			%% Line 1478
			{'more',SkipPos,To,L,Ts,R,0}
		  end
	  %% Line 1480
	  <Bin,From,To,Skip,L,Ts,R>
	      when try
		    let <_cor10> =
			call 'erlang':'+'
			    (From, Skip)
		    in  call 'erlang':'=:='
			    (_cor10, To)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1481
	      apply 'scan_next_allocated'/6
		  (Bin, From, To, L, Ts, R)
	  %% Line 1482
	  <_X_Bin,From,_X_To,Skip,L,Ts,R> when 'true' ->
	      let <From1> =
		  %% Line 1483
		  call 'erlang':'+'
		      (From, Skip)
	      in  %% Line 1484
		  {'more',From1,From1,L,Ts,R,0}
	end
'scan_next_allocated'/6 =
    %% Line 1486
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_Bin,_X_From,To,L = #{}#,Ts,R> when 'true' ->
	      %% Line 1487
	      {'more',To,To,L,Ts,R,0}
	  %% Line 1488
	  <Bin,From0,_X_To,#{#<From>(32,1,'integer',['unsigned'|['big']]),
			     #<To>(32,1,'integer',['unsigned'|['big']]),
			     #<L>('all',8,'binary',['unsigned'|['big']])}#,Ts,R> when 'true' ->
	      let <Skip> =
		  %% Line 1489
		  call 'erlang':'-'
		      (From, From0)
	      in  ( case %% Line 1490
			 <Bin,From0,To,Skip,L,Ts,R> of
		      ( <_fol1974,( From
				    -| ['compiler_generated'] ),_fol1975,_fol1976,_fol1977,_fol1978,_fol1979>
			    when ( try
				    ( let <_cor7> =
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( '+'
										 -| ['compiler_generated'] )
						(( From
						   -| ['compiler_generated'] ), _fol1976)
					    -| ['compiler_generated'] )
				      in  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( '<'
										 -| ['compiler_generated'] )
						(( _cor7
						   -| ['compiler_generated'] ), _fol1975)
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				of <( Try
				      -| ['compiler_generated'] )> ->
				    ( Try
				      -| ['compiler_generated'] )
				catch <( T
					 -| ['compiler_generated'] ),( R
								       -| ['compiler_generated'] )> ->
				    ( 'false'
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] ) ->
			    ( let <SkipPos> =
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( '+'
									 -| ['compiler_generated'] )
					(( From
					   -| ['compiler_generated'] ), _fol1976)
				    -| ['compiler_generated'] )
			      in  ( case ( _fol1974
					   -| ['reuse_for_context'] ) of
				      ( <( #{#<( _cor19
						 -| ['compiler_generated'] )>(_fol1976,( 8
											 -| ['compiler_generated'] ),( 'binary'
														       -| ['compiler_generated'] ),( ['unsigned'|['big']]
																		     -| ['compiler_generated'] )),
					     #<( Tail
						 -| ['compiler_generated'] )>(( 'all'
										-| ['compiler_generated'] ),( 8
													      -| ['compiler_generated'] ),( 'binary'
																	    -| ['compiler_generated'] ),( ['unsigned'|['big']]
																					  -| ['compiler_generated'] ))}#
					   -| ['compiler_generated'] )> when ( 'true'
									       -| ['compiler_generated'] ) ->
					    ( apply ( 'scan_objs'/6
						      -| ['compiler_generated'] )
						  (( Tail
						     -| ['compiler_generated'] ), ( SkipPos
										    -| ['compiler_generated'] ), _fol1975, _fol1977, _fol1978, _fol1979)
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      ( <( _cor20
					   -| ['compiler_generated'] )> when ( 'true'
									       -| ['compiler_generated'] ) ->
					    ( {( 'more'
						 -| ['compiler_generated'] ),( SkipPos
									       -| ['compiler_generated'] ),_fol1975,_fol1977,_fol1978,_fol1979,( 0
																		 -| ['compiler_generated'] )}
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		      ( <_fol1980,( From
				    -| ['compiler_generated'] ),_fol1981,_fol1982,_fol1983,_fol1984,_fol1985>
			    when ( try
				    ( let <_cor10> =
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( '+'
										 -| ['compiler_generated'] )
						(( From
						   -| ['compiler_generated'] ), _fol1982)
					    -| ['compiler_generated'] )
				      in  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( '=:='
										 -| ['compiler_generated'] )
						(( _cor10
						   -| ['compiler_generated'] ), _fol1981)
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				of <( Try
				      -| ['compiler_generated'] )> ->
				    ( Try
				      -| ['compiler_generated'] )
				catch <( T
					 -| ['compiler_generated'] ),( R
								       -| ['compiler_generated'] )> ->
				    ( 'false'
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] ) ->
			    ( apply ( 'scan_next_allocated'/6
				      -| ['compiler_generated'] )
				  (_fol1980, ( From
					       -| ['compiler_generated'] ), _fol1981, _fol1983, _fol1984, _fol1985)
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		      ( <( _X_Bin
			   -| ['compiler_generated'] ),( From
							 -| ['compiler_generated'] ),( _X_To
										       -| ['compiler_generated'] ),_fol1986,_fol1987,_fol1988,_fol1989> when ( 'true'
																			       -| ['compiler_generated'] ) ->
			    ( let <From1> =
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( '+'
									 -| ['compiler_generated'] )
					(( From
					   -| ['compiler_generated'] ), _fol1986)
				    -| ['compiler_generated'] )
			      in  ( {( 'more'
				       -| ['compiler_generated'] ),( From1
								     -| ['compiler_generated'] ),( From1
												   -| ['compiler_generated'] ),_fol1987,_fol1988,_fol1989,( 0
																			    -| ['compiler_generated'] )}
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor12,_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'scan_next_allocated',6}}] )
	    -| ['compiler_generated'] )
	end
'prterm'/3 =
    %% Line 1493
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1496
	case call 'dets_utils':'pread'
		 (_cor2, _cor1, 12, _cor0) of
	  <{'ok',#{#<Next>(32,1,'integer',['unsigned'|['big']]),
		   #<Sz>(32,1,'integer',['unsigned'|['big']]),
		   #<_X_Status>(32,1,'integer',['unsigned'|['big']]),
		   #<Bin0>('all',8,'binary',['unsigned'|['big']])}#}> when 'true' ->
	      let <_cor8> =
		  %% Line 1498
		  case call 'erlang':'byte_size'
			   (Bin0) of
		    %% Line 1499
		    <Actual>
			when call 'erlang':'>='
			      (Actual,
			       Sz) ->
			%% Line 1500
			Bin0
		    %% Line 1501
		    <_cor14> when 'true' ->
			let <_cor5> =
			    %% Line 1502
			    call 'erlang':'+'
				(_cor1, 12)
			in  %% Line 1502
			    case call 'dets_utils':'pread'
				     (_cor2, _cor5, Sz, 0) of
			      <{'ok',Bin1}> when 'true' ->
				  %% Line 1503
				  Bin1
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor6})
				-| ['compiler_generated'] )
			    end
		  end
	      in  let <Term> =
		      %% Line 1505
		      call 'erlang':'binary_to_term'
			  (_cor8)
		  in  %% Line 1506
		      {Next,Sz,Term}
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor4})
	    -| ['compiler_generated'] )
	end
'file_info'/1 =
    %% Line 1510
    fun (_cor0) ->
	%% Line 1514
	case _cor0 of
	  <{'fileheader',_cor15,_cor16,_cor17,CP,Type,Version,M,Next,Kp,NoObjects,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,N,_cor28}> when 'true' ->
	      %% Line 1515
	      case <> of
		%% Line 1516
		<>
		    when call 'erlang':'=:='
			  (CP,
			   0) ->
		    %% Line 1517
		    {'error','not_closed'}
		%% Line 1518
		<>
		    when call 'erlang':'=/='
			  (_cor17,
			   11259375) ->
		    %% Line 1519
		    {'error','not_a_dets_file'}
		%% Line 1520
		<>
		    when call 'erlang':'=/='
			  (Version,
			   8) ->
		    %% Line 1521
		    {'error','bad_version'}
		%% Line 1522
		<> when 'true' ->
		    %% Line 1523
		    {'ok',[{'closed_properly',CP}|[{'keypos',Kp}|[{'m',M}|%% Line 1524
									  [{'n',N}|[{'next',Next}|[{'no_objects',NoObjects}|%% Line 1525
															    [{'type',Type}|[{'version',Version}|[]]]]]]]]]}
	      end
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'v_segments'/1 =
    %% Line 1528
    fun (_cor0) ->
	%% Line 1529
	apply 'v_segments'/2
	    (_cor0, 0)
'v_segments'/2 =
    %% Line 1531
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_H,8192> when 'true' ->
	      %% Line 1532
	      'done'
	  %% Line 1533
	  <H,SegNo> when 'true' ->
	      %% Line 1534
	      ( case H of
		  ( <( {'head',_cor10,_cor11,_cor12,_rec66,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor2> =
			    call 'erlang':'*'
				(4, SegNo)
			in  let <_cor3> =
				call 'erlang':'+'
				    (40, _cor2)
			    in  let <Seg> =
				    call 'dets_utils':'read_4'
					(_rec66, _cor3)
				in  %% Line 1535
				    case <> of
				      %% Line 1536
				      <>
					  when call 'erlang':'=:='
						(Seg,
						 0) ->
					  %% Line 1537
					  'done'
				      %% Line 1538
				      <> when 'true' ->
					  do  %% Line 1539
					      call 'io':'format'
						  ([83|[69|[71|[77|[69|[78|[84|[32|[126|[119|[32]]]]]]]]]]], [SegNo|[]])
					      do  %% Line 1540
						  call 'io':'format'
						      ([65|[116|[32|[112|[111|[115|[105|[116|[105|[111|[110|[32|[126|[119|[126|[110]]]]]]]]]]]]]]]], [Seg|[]])
						  do  %% Line 1541
						      apply 'v_segment'/4
							  (H, SegNo, Seg, 0)
						      let <_cor7> =
							  %% Line 1542
							  call 'erlang':'+'
							      (SegNo, 1)
						      in  %% Line 1542
							  apply 'v_segments'/2
							      (H, _cor7)
				    end
		    -| ['compiler_generated'] )
		  ( <_cor40> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'v_segment'/4 =
    %% Line 1545
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_H,_cor18,_X_SegPos,256> when 'true' ->
	      %% Line 1546
	      'done'
	  %% Line 1547
	  <H,SegNo,SegPos,SegSlot> when 'true' ->
	      let <_cor4> =
		  %% Line 1548
		  call 'erlang':'*'
		      (SegNo, 256)
	      in  let <Slot> =
		      %% Line 1548
		      call 'erlang':'+'
			  (SegSlot, _cor4)
		  in  %% Line 1549
		      ( case H of
			  ( <( {'head',_cor19,_cor20,_cor21,_rec67,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48}
			       -| ['compiler_generated'] )> when 'true' ->
				let <_cor6> =
				    call 'erlang':'*'
					(4, SegSlot)
				in  let <_cor7> =
					call 'erlang':'+'
					    (SegPos, _cor6)
				    in  let <Chain> =
					    call 'dets_utils':'read_4'
						(_rec67, _cor7)
					in  do  %% Line 1550
						case <> of
						  %% Line 1551
						  <>
						      when call 'erlang':'=:='
							    (Chain,
							     0) ->
						      'ok'
						  %% Line 1553
						  <> when 'true' ->
						      let <_cor11> =
							  %% Line 1554
							  call 'erlang':'*'
							      (4, SegSlot)
						      in  let <_cor12> =
							      %% Line 1554
							      call 'erlang':'+'
								  (SegPos, _cor11)
							  in  do  %% Line 1554
								  call 'io':'format'
								      ([32|[32|[32|[60|[126|[112|[62|[126|[112|[58|[32|[91]]]]]]]]]]]], [_cor12|[Slot|[]]])
								  %% Line 1555
								  apply 'print_chain'/2
								      (H, Chain)
						end
						let <_cor13> =
						    %% Line 1557
						    call 'erlang':'+'
							(SegSlot, 1)
						in  %% Line 1557
						    apply 'v_segment'/4
							(H, SegNo, SegPos, _cor13)
			    -| ['compiler_generated'] )
			  ( <_cor49> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','head'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	end
'print_chain'/2 =
    %% Line 1559
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_H,0> when 'true' ->
	      %% Line 1560
	      call 'io':'format'
		  ([93|[32|[10]]], [])
	  %% Line 1561
	  <H,Pos> when 'true' ->
	      %% Line 1562
	      ( case H of
		  ( <( {'head',_cor10,_cor11,_cor12,_rec68,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'file':'position'
				 (_rec68, Pos) of
			  <{'ok',_cor41}> when 'true' ->
			      %% Line 1563
			      case apply 'rterm'/1
				       (_rec68) of
				%% Line 1564
				<{'ok',0,_X_Sz,Term}> when 'true' ->
				    %% Line 1565
				    call 'io':'format'
					([60|[126|[112|[62|[126|[112|[93|[32|[10]]]]]]]]], [Pos|[Term|[]]])
				%% Line 1566
				<{'ok',Next,_X_Sz,Term}> when 'true' ->
				    do  %% Line 1567
					call 'io':'format'
					    ([60|[126|[112|[62|[126|[112|[44|[32]]]]]]]], [Pos|[Term|[]]])
					%% Line 1568
					apply 'print_chain'/2
					    (H, Next)
				%% Line 1569
				<Other> when 'true' ->
				    %% Line 1570
				    call 'io':'format'
					([126|[110|[69|[82|[82|[79|[82|[32|[126|[112|[126|[110]]]]]]]]]]]], [Other|[]])
			      end
			  ( <_cor4> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor4})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor40> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'rterm'/1 =
    %% Line 1575
    fun (_cor0) ->
	let <_cor1> =
	    catch
		%% Line 1576
		apply 'rterm2'/1
		    (_cor0)
	in  %% Line 1576
	    case _cor1 of
	      %% Line 1577
	      <{'EXIT',Reason}> when 'true' ->
		  do  %% Line 1578
		      call 'dets_utils':'vformat'
			  ([42|[42|[32|[100|[101|[116|[115|[58|[32|[67|[111|[114|[114|[117|[112|[116|[32|[111|[114|[32|[116|[114|[117|[110|[99|[97|[116|[101|[100|[32|[100|[101|[116|[115|[32|[102|[105|[108|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 1579
																																      [])
		      %% Line 1580
		      {'error',Reason}
	      %% Line 1581
	      <Other> when 'true' ->
		  %% Line 1582
		  Other
	    end
'rterm2'/1 =
    %% Line 1585
    fun (_cor0) ->
	%% Line 1586
	case call 'file':'read'
		 (_cor0, 12) of
	  <{'ok',#{#<Next>(32,1,'integer',['unsigned'|['big']]),
		   #<Sz>(32,1,'integer',['unsigned'|['big']]),
		   #<_cor5>(32,1,'integer',['unsigned'|['big']])}#}> when 'true' ->
	      %% Line 1587
	      case call 'file':'read'
		       (_cor0, Sz) of
		<{'ok',Bin}> when 'true' ->
		    let <Term> =
			%% Line 1588
			call 'erlang':'binary_to_term'
			    (Bin)
		    in  %% Line 1589
			{'ok',Next,Sz,Term}
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('dets_v8')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('dets_v8', _cor0)
end