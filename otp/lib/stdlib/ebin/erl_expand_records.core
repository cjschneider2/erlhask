module 'erl_expand_records' ['module'/2,
			     'module_info'/0,
			     'module_info'/1]
    attributes [%% Line 31
		'type' =
		    %% Line 31
		    [{{'record','exprec'},[{'record_field',31,{'atom',31,'compile'},{'nil',31}}|[{'record_field',32,{'atom',32,'vcount'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'imports'},{'nil',33}}|[{'record_field',34,{'atom',34,'records'},{'call',34,{'remote',34,{'atom',34,'dict'},{'atom',34,'new'}},[]}}|[{'record_field',35,{'atom',35,'trecords'},{'call',35,{'remote',35,{'atom',35,'sets'},{'atom',35,'new'}},[]}}|[{'record_field',36,{'atom',36,'uses_types'},{'atom',36,'false'}}|[{'record_field',37,{'atom',37,'strict_ra'},{'nil',37}}|[{'record_field',38,{'atom',38,'checked_ra'},{'nil',38}}]]]]]]]],[]}],
		%% Line 43
		'spec' =
		    %% Line 43
		    [{{'module',2},[{'type',43,'bounded_fun',[{'type',43,'fun',[{'type',43,'product',[{'var',43,'AbsForms'}|[{'var',43,'CompileOptions'}]]}|[{'var',43,'AbsForms'}]]}|[[{'type',44,'constraint',[{'atom',44,'is_subtype'}|[[{'var',44,'AbsForms'}|[{'type',44,'list',[{'remote_type',44,[{'atom',44,'erl_parse'}|[{'atom',44,'abstract_form'}|[[]]]]}]}]]]]}|[{'type',45,'constraint',[{'atom',45,'is_subtype'}|[[{'var',45,'CompileOptions'}|[{'type',45,'list',[{'remote_type',45,[{'atom',45,'compile'}|[{'atom',45,'option'}|[[]]]]}]}]]]]}]]]]}]}]]
'module'/2 =
    %% Line 49
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 50
	    apply 'compiler_options'/1
		(_cor1)
	in  let <Opts> =
		%% Line 50
		call 'erlang':'++'
		    (_cor2, _cor0)
	    in  let <TRecs> =
		    %% Line 51
		    apply 'typed_records'/1
			(_cor1)
		in  let <UsesTypes> =
			%% Line 52
			apply 'uses_types'/1
			    (_cor1)
		    in  let <_cor6> =
			    call 'dict':'new'
				()
			in  let <St0> =
				%% Line 53
				{'exprec',Opts,0,[],_cor6,TRecs,UsesTypes,[],[]}
			    in  %% Line 54
				case apply 'forms'/2
					 (_cor1, St0) of
				  <{Fs,_X_St}> when 'true' ->
				      %% Line 55
				      Fs
				  ( <_cor8> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor8})
				    -| ['compiler_generated'] )
				end
'compiler_options'/1 =
    %% Line 57
    fun (_cor0) ->
	let <_cor5> =
	    %% Line 58
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor3) ->
			  case _cor3 of
			    <[{'attribute',_cor7,'compile',C}|_cor2]> when 'true' ->
				let <_cor4> =
				    apply 'lc$^0'/1
					(_cor2)
				in  ( [C|_cor4]
				      -| ['compiler_generated'] )
			    ( <[_cor1|_cor2]> when 'true' ->
				  apply 'lc$^0'/1
				      (_cor2)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor3> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor3})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (_cor0)
	      -| ['list_comprehension'] )
	in  %% Line 58
	    call 'lists':'flatten'
		(_cor5)
'typed_records'/1 =
    %% Line 60
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 61
	    call 'sets':'new'
		()
	in  %% Line 61
	    apply 'typed_records'/2
		(_cor0, _cor1)
'typed_records'/2 =
    %% Line 63
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'attribute',_X_L,'type',{{'record',Name},_X_Defs,[]}}|Fs],Trecs> when 'true' ->
	      let <_cor2> =
		  %% Line 64
		  call 'sets':'add_element'
		      (Name, Trecs)
	      in  %% Line 64
		  apply 'typed_records'/2
		      (Fs, _cor2)
	  %% Line 65
	  <[_cor5|Fs],Trecs> when 'true' ->
	      %% Line 66
	      apply 'typed_records'/2
		  (Fs, Trecs)
	  %% Line 67
	  <[],Trecs> when 'true' ->
	      %% Line 68
	      Trecs
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'typed_records',2}}] )
	    -| ['compiler_generated'] )
	end
'uses_types'/1 =
    %% Line 70
    fun (_cor0) ->
	case _cor0 of
	  <[{'attribute',_X_L,'spec',_cor2}|_cor3]> when 'true' ->
	      'true'
	  %% Line 71
	  <[{'attribute',_X_L,'type',_cor4}|_cor5]> when 'true' ->
	      'true'
	  %% Line 72
	  <[{'attribute',_X_L,'opaque',_cor6}|_cor7]> when 'true' ->
	      'true'
	  %% Line 73
	  <[_cor8|Fs]> when 'true' ->
	      apply 'uses_types'/1
		  (Fs)
	  %% Line 74
	  <[]> when 'true' ->
	      'false'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'uses_types',1}}] )
	    -| ['compiler_generated'] )
	end
'forms'/2 =
    %% Line 76
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'attribute',L,'record',{Name,Defs}}|Fs],St0> when 'true' ->
	      let <NDefs> =
		  %% Line 77
		  apply 'normalise_fields'/1
		      (Defs)
	      in  %% Line 78
		  ( case St0 of
		      ( <( {'exprec',_cor24,_cor25,_cor26,_rec2,_cor27,_cor28,_cor29,_cor30}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_rec0> =
				call 'dict':'store'
				    (Name, NDefs, _rec2)
			    in  let <_cor8> =
				    call 'erlang':'setelement'
					(5, St0, _rec0)
				in  %% Line 79
				    case apply 'forms'/2
					     (Fs, _cor8) of
				      <{Fs1,St1}> when 'true' ->
					  %% Line 81
					  ( case _cor8 of
					      ( <( {'exprec',_cor41,_cor42,_cor43,_cor44,_cor45,_rec3,_cor46,_cor47}
						   -| ['compiler_generated'] )> when 'true' ->
						    case _rec3 of
						      %% Line 82
						      <'true'> when 'true' ->
							  %% Line 83
							  case call 'sets':'is_element'
								   (Name, _cor45) of
							    %% Line 84
							    <'true'> when 'true' ->
								{Fs1,St1}
							    %% Line 85
							    <'false'> when 'true' ->
								{[{'attribute',L,'type',{{'record',Name},Defs,[]}}|Fs1],St1}
							    ( <_cor15> when 'true' ->
								  primop 'match_fail'
								      ({'case_clause',_cor15})
							      -| ['compiler_generated'] )
							  end
						      %% Line 87
						      <'false'> when 'true' ->
							  %% Line 88
							  {Fs1,St1}
						      ( <_cor16> when 'true' ->
							    primop 'match_fail'
								({'case_clause',_cor16})
							-| ['compiler_generated'] )
						    end
						-| ['compiler_generated'] )
					      ( <_cor48> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','exprec'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				      ( <_cor10> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor10})
					-| ['compiler_generated'] )
				    end
			-| ['compiler_generated'] )
		      ( <_cor31> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','exprec'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 90
	  <[{'attribute',L,'import',Is}|Fs0],St0> when 'true' ->
	      let <St1> =
		  %% Line 91
		  apply 'import'/2
		      (Is, St0)
	      in  %% Line 92
		  case apply 'forms'/2
			   (Fs0, St1) of
		    <{Fs,St2}> when 'true' ->
			%% Line 93
			{[{'attribute',L,'import',Is}|Fs],St2}
		    ( <_cor18> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor18})
		      -| ['compiler_generated'] )
		  end
	  %% Line 94
	  <[{'function',L,N,A,Cs0}|Fs0],St0> when 'true' ->
	      %% Line 95
	      case apply 'clauses'/2
		       (Cs0, St0) of
		<{Cs,St1}> when 'true' ->
		    %% Line 96
		    case apply 'forms'/2
			     (Fs0, St1) of
		      <{Fs,St2}> when 'true' ->
			  %% Line 97
			  {[{'function',L,N,A,Cs}|Fs],St2}
		      ( <_cor20> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor20})
			-| ['compiler_generated'] )
		    end
		( <_cor19> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor19})
		  -| ['compiler_generated'] )
	      end
	  %% Line 98
	  <[F|Fs0],St0> when 'true' ->
	      %% Line 99
	      case apply 'forms'/2
		       (Fs0, St0) of
		<{Fs,St}> when 'true' ->
		    %% Line 100
		    {[F|Fs],St}
		( <_cor21> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor21})
		  -| ['compiler_generated'] )
	      end
	  %% Line 101
	  <[],St> when 'true' ->
	      {[],St}
	  ( <_cor23,_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor23,_cor22})
		  -| [{'function_name',{'forms',2}}] )
	    -| ['compiler_generated'] )
	end
'clauses'/2 =
    %% Line 103
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'clause',Line,H0,G0,B0}|Cs0],St0> when 'true' ->
	      %% Line 104
	      case apply 'head'/2
		       (H0, St0) of
		<{H1,St1}> when 'true' ->
		    %% Line 105
		    case apply 'guard'/2
			     (G0, St1) of
		      <{G1,St2}> when 'true' ->
			  %% Line 106
			  case apply 'optimize_is_record'/3
				   (H1, G1, St2) of
			    <{H,G}> when 'true' ->
				%% Line 107
				case apply 'exprs'/2
					 (B0, St2) of
				  <{B,St3}> when 'true' ->
				      %% Line 108
				      case apply 'clauses'/2
					       (Cs0, St3) of
					<{Cs,St4}> when 'true' ->
					    %% Line 109
					    {[{'clause',Line,H,G,B}|Cs],St4}
					( <_cor6> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor6})
					  -| ['compiler_generated'] )
				      end
				  ( <_cor5> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor5})
				    -| ['compiler_generated'] )
				end
			    ( <_cor4> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor4})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor3})
			-| ['compiler_generated'] )
		    end
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 110
	  <[],St> when 'true' ->
	      {[],St}
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'clauses',2}}] )
	    -| ['compiler_generated'] )
	end
'head'/2 =
    %% Line 112
    fun (_cor1,_cor0) ->
	apply 'pattern_list'/2
	    (_cor1, _cor0)
'pattern'/2 =
    %% Line 114
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Var = {'var',_cor22,'_'},St> when 'true' ->
	      %% Line 115
	      {Var,St}
	  %% Line 116
	  <Var = {'var',_cor23,_cor24},St> when 'true' ->
	      %% Line 117
	      {Var,St}
	  %% Line 118
	  <Char = {'char',_cor25,_cor26},St> when 'true' ->
	      %% Line 119
	      {Char,St}
	  %% Line 120
	  <Int = {'integer',_cor27,_cor28},St> when 'true' ->
	      %% Line 121
	      {Int,St}
	  %% Line 122
	  <Float = {'float',_cor29,_cor30},St> when 'true' ->
	      %% Line 123
	      {Float,St}
	  %% Line 124
	  <Atom = {'atom',_cor31,_cor32},St> when 'true' ->
	      %% Line 125
	      {Atom,St}
	  %% Line 126
	  <String = {'string',_cor33,_cor34},St> when 'true' ->
	      %% Line 127
	      {String,St}
	  %% Line 128
	  <Nil = {'nil',_cor35},St> when 'true' ->
	      %% Line 129
	      {Nil,St}
	  %% Line 130
	  <{'cons',Line,H,T},St0> when 'true' ->
	      %% Line 131
	      case apply 'pattern'/2
		       (H, St0) of
		<{TH,St1}> when 'true' ->
		    %% Line 132
		    case apply 'pattern'/2
			     (T, St1) of
		      <{TT,St2}> when 'true' ->
			  %% Line 133
			  {{'cons',Line,TH,TT},St2}
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor3})
			-| ['compiler_generated'] )
		    end
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 134
	  <{'tuple',Line,Ps},St0> when 'true' ->
	      %% Line 135
	      case apply 'pattern_list'/2
		       (Ps, St0) of
		<{TPs,St1}> when 'true' ->
		    %% Line 136
		    {{'tuple',Line,TPs},St1}
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 137
	  <{'map',Line,Ps},St0> when 'true' ->
	      %% Line 138
	      case apply 'pattern_list'/2
		       (Ps, St0) of
		<{TPs,St1}> when 'true' ->
		    %% Line 139
		    {{'map',Line,TPs},St1}
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 140
	  <{'map_field_exact',Line,K0,V0},St0> when 'true' ->
	      %% Line 141
	      case apply 'expr'/2
		       (K0, St0) of
		<{K,St1}> when 'true' ->
		    %% Line 142
		    case apply 'pattern'/2
			     (V0, St1) of
		      <{V,St2}> when 'true' ->
			  %% Line 143
			  {{'map_field_exact',Line,K,V},St2}
		      ( <_cor7> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor7})
			-| ['compiler_generated'] )
		    end
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor6})
		  -| ['compiler_generated'] )
	      end
	  %% Line 147
	  <{'record_index',Line,Name,Field},St> when 'true' ->
	      let <_cor8> =
		  %% Line 148
		  apply 'record_fields'/2
		      (Name, St)
	      in  let <_cor9> =
		      %% Line 148
		      apply 'index_expr'/4
			  (Line, Field, Name, _cor8)
		  in  %% Line 148
		      {_cor9,St}
	  %% Line 149
	  <{'record',Line0,Name,Pfs},St0> when 'true' ->
	      let <Fs> =
		  %% Line 150
		  apply 'record_fields'/2
		      (Name, St0)
	      in  let <_cor11> =
		      %% Line 151
		      apply 'pattern_fields'/2
			  (Fs, Pfs)
		  in  %% Line 151
		      case apply 'pattern_list'/2
			       (_cor11, St0) of
			<{TMs,St1}> when 'true' ->
			    let <Line> =
				%% Line 152
				apply 'record_offset'/2
				    (Line0, St1)
			    in  %% Line 153
				{{'tuple',Line,[{'atom',Line0,Name}|TMs]},St1}
			( <_cor12> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor12})
			  -| ['compiler_generated'] )
		      end
	  %% Line 154
	  <{'bin',Line,Es0},St0> when 'true' ->
	      %% Line 155
	      case apply 'pattern_bin'/2
		       (Es0, St0) of
		<{Es1,St1}> when 'true' ->
		    %% Line 156
		    {{'bin',Line,Es1},St1}
		( <_cor14> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor14})
		  -| ['compiler_generated'] )
	      end
	  %% Line 157
	  <{'match',Line,Pat1,Pat2},St0> when 'true' ->
	      %% Line 158
	      case apply 'pattern'/2
		       (Pat2, St0) of
		<{TH,St1}> when 'true' ->
		    %% Line 159
		    case apply 'pattern'/2
			     (Pat1, St1) of
		      <{TT,St2}> when 'true' ->
			  %% Line 160
			  {{'match',Line,TT,TH},St2}
		      ( <_cor16> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor16})
			-| ['compiler_generated'] )
		    end
		( <_cor15> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor15})
		  -| ['compiler_generated'] )
	      end
	  %% Line 161
	  <{'op',Line,Op,A0},St0> when 'true' ->
	      %% Line 162
	      case apply 'pattern'/2
		       (A0, St0) of
		<{A,St1}> when 'true' ->
		    %% Line 163
		    {{'op',Line,Op,A},St1}
		( <_cor17> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor17})
		  -| ['compiler_generated'] )
	      end
	  %% Line 164
	  <{'op',Line,Op,L0,R0},St0> when 'true' ->
	      %% Line 165
	      case apply 'pattern'/2
		       (L0, St0) of
		<{L,St1}> when 'true' ->
		    %% Line 166
		    case apply 'pattern'/2
			     (R0, St1) of
		      <{R,St2}> when 'true' ->
			  %% Line 167
			  {{'op',Line,Op,L,R},St2}
		      ( <_cor19> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor19})
			-| ['compiler_generated'] )
		    end
		( <_cor18> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor18})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor21,_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor21,_cor20})
		  -| [{'function_name',{'pattern',2}}] )
	    -| ['compiler_generated'] )
	end
'pattern_list'/2 =
    %% Line 169
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[P0|Ps0],St0> when 'true' ->
	      %% Line 170
	      case apply 'pattern'/2
		       (P0, St0) of
		<{P,St1}> when 'true' ->
		    %% Line 171
		    case apply 'pattern_list'/2
			     (Ps0, St1) of
		      <{Ps,St2}> when 'true' ->
			  %% Line 172
			  {[P|Ps],St2}
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor3})
			-| ['compiler_generated'] )
		    end
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 173
	  <[],St> when 'true' ->
	      {[],St}
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'pattern_list',2}}] )
	    -| ['compiler_generated'] )
	end
'guard'/2 =
    %% Line 175
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[G0|Gs0],St0> when 'true' ->
	      %% Line 176
	      case apply 'guard_tests'/2
		       (G0, St0) of
		<{G,St1}> when 'true' ->
		    %% Line 177
		    case apply 'guard'/2
			     (Gs0, St1) of
		      <{Gs,St2}> when 'true' ->
			  %% Line 178
			  {[G|Gs],St2}
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor3})
			-| ['compiler_generated'] )
		    end
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 179
	  <[],St> when 'true' ->
	      {[],St}
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'guard',2}}] )
	    -| ['compiler_generated'] )
	end
'guard_tests'/2 =
    %% Line 181
    fun (_cor1,_cor0) ->
	%% Line 182
	case apply 'guard_tests1'/2
		 (_cor1, _cor0) of
	  <{Gts1,St1}> when 'true' ->
	      %% Line 183
	      case St1 of
		<{'exprec',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15}> when 'true' ->
		    let <_cor5> =
			call 'erlang':'setelement'
			    (9, St1, [])
		    in  {Gts1,_cor5}
		( <_cor16> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','exprec'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'guard_tests1'/2 =
    %% Line 185
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Gt0|Gts0],St0> when 'true' ->
	      %% Line 186
	      case apply 'guard_test'/2
		       (Gt0, St0) of
		<{Gt1,St1}> when 'true' ->
		    %% Line 187
		    case apply 'guard_tests1'/2
			     (Gts0, St1) of
		      <{Gts1,St2}> when 'true' ->
			  %% Line 188
			  {[Gt1|Gts1],St2}
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor3})
			-| ['compiler_generated'] )
		    end
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 189
	  <[],St> when 'true' ->
	      {[],St}
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'guard_tests1',2}}] )
	    -| ['compiler_generated'] )
	end
'guard_test'/2 =
    %% Line 191
    fun (_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 192
	    ( fun () ->
		  %% Line 193
		  case apply 'guard_test1'/2
			   (_cor1, _cor0) of
		    <{G1,St1}> when 'true' ->
			%% Line 194
			apply 'strict_record_access'/2
			    (G1, St1)
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor2})
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-guard_test/2-fun-0-'}}] )
	in  %% Line 192
	    apply 'in_guard'/1
		(_cor3)
'guard_test1'/2 =
    %% Line 199
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'call',Line,{'atom',Lt,Tname},As},St> when 'true' ->
	      let <_cor2> =
		  %% Line 200
		  call 'erlang':'length'
		      (As)
	      in  let <_cor3> =
		      %% Line 200
		      apply 'normalise_test'/2
			  (Tname, _cor2)
		  in  let <Test> = {%% Line 200
			   'atom',%% Line 200
				  Lt,_cor3}
		      in  %% Line 201
			  apply 'expr'/2
			      ({'call',Line,Test,As}, St)
	  %% Line 202
	  <Test,St> when 'true' ->
	      %% Line 203
	      apply 'expr'/2
		  (Test, St)
	end
'normalise_test'/2 =
    %% Line 205
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'atom',1> when 'true' ->
	      'is_atom'
	  %% Line 206
	  <'binary',1> when 'true' ->
	      'is_binary'
	  %% Line 207
	  <'float',1> when 'true' ->
	      'is_float'
	  %% Line 208
	  <'function',1> when 'true' ->
	      'is_function'
	  %% Line 209
	  <'integer',1> when 'true' ->
	      'is_integer'
	  %% Line 210
	  <'list',1> when 'true' ->
	      'is_list'
	  %% Line 211
	  <'number',1> when 'true' ->
	      'is_number'
	  %% Line 212
	  <'pid',1> when 'true' ->
	      'is_pid'
	  %% Line 213
	  <'port',1> when 'true' ->
	      'is_port'
	  %% Line 214
	  <'record',2> when 'true' ->
	      'is_record'
	  %% Line 215
	  <'reference',1> when 'true' ->
	      'is_reference'
	  %% Line 216
	  <'tuple',1> when 'true' ->
	      'is_tuple'
	  %% Line 217
	  <Name,_cor4> when 'true' ->
	      Name
	end
'is_in_guard'/0 =
    %% Line 219
    fun () ->
	let <_cor0> =
	    %% Line 220
	    call 'erlang':'get'
		('erl_expand_records_in_guard')
	in  %% Line 220
	    call 'erlang':'=/='
		(_cor0, 'undefined')
'in_guard'/1 =
    %% Line 222
    fun (_cor0) ->
	%% Line 223
	case call 'erlang':'put'
		 ('erl_expand_records_in_guard', 'true') of
	  <'undefined'> when 'true' ->
	      let <Res> =
		  %% Line 224
		  apply _cor0
		      ()
	      in  %% Line 225
		  case call 'erlang':'erase'
			   ('erl_expand_records_in_guard') of
		    <'true'> when 'true' ->
			%% Line 226
			Res
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor3})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'record_test'/4 =
    %% Line 231
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 232
	case apply 'is_in_guard'/0
		 () of
	  %% Line 233
	  <'false'> when 'true' ->
	      %% Line 234
	      apply 'record_test_in_body'/4
		  (_cor3, _cor2, _cor1, _cor0)
	  %% Line 235
	  <'true'> when 'true' ->
	      %% Line 236
	      apply 'record_test_in_guard'/4
		  (_cor3, _cor2, _cor1, _cor0)
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor4})
	    -| ['compiler_generated'] )
	end
'record_test_in_guard'/4 =
    %% Line 239
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 240
	case apply 'not_a_tuple'/1
		 (_cor2) of
	  %% Line 241
	  <'true'> when 'true' ->
	      %% Line 243
	      apply 'expr'/2
		  ({'atom',_cor3,'false'}, _cor0)
	  %% Line 244
	  <'false'> when 'true' ->
	      let <Fs> =
		  %% Line 245
		  apply 'record_fields'/2
		      (_cor1, _cor0)
	      in  let <NLine> =
		      %% Line 246
		      apply 'neg_line'/1
			  (_cor3)
		  in  let <_cor6> =
			  %% Line 248
			  call 'erlang':'length'
			      (Fs)
		      in  let <_cor7> =
			      %% Line 248
			      call 'erlang':'+'
				  (_cor6, 1)
			  in  %% Line 247
			      apply 'expr'/2
				  ({'call',NLine,{'remote',NLine,{'atom',NLine,'erlang'},{'atom',NLine,'is_record'}},%% Line 248
														     [_cor2|[{'atom',_cor3,_cor1}|[{'integer',_cor3,_cor7}|[]]]]}, _cor0)
	  ( <_cor8> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor8})
	    -| ['compiler_generated'] )
	end
'not_a_tuple'/1 =
    %% Line 252
    fun (_cor0) ->
	case _cor0 of
	  <{'atom',_cor2,_cor3}> when 'true' ->
	      'true'
	  %% Line 253
	  <{'integer',_cor4,_cor5}> when 'true' ->
	      'true'
	  %% Line 254
	  <{'float',_cor6,_cor7}> when 'true' ->
	      'true'
	  %% Line 255
	  <{'nil',_cor8}> when 'true' ->
	      'true'
	  %% Line 256
	  <{'cons',_cor9,_cor10,_cor11}> when 'true' ->
	      'true'
	  %% Line 257
	  <{'char',_cor12,_cor13}> when 'true' ->
	      'true'
	  %% Line 258
	  <{'string',_cor14,_cor15}> when 'true' ->
	      'true'
	  %% Line 259
	  <{'record_index',_cor16,_cor17,_cor18}> when 'true' ->
	      'true'
	  %% Line 260
	  <{'bin',_cor19,_cor20}> when 'true' ->
	      'true'
	  %% Line 261
	  <{'op',_cor21,_cor22,_cor23}> when 'true' ->
	      'true'
	  %% Line 262
	  <{'op',_cor24,_cor25,_cor26,_cor27}> when 'true' ->
	      'true'
	  %% Line 263
	  <_cor28> when 'true' ->
	      'false'
	end
'record_test_in_body'/4 =
    %% Line 265
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Fs> =
	    %% Line 270
	    apply 'record_fields'/2
		(_cor1, _cor0)
	in  %% Line 271
	    case apply 'new_var'/2
		     (_cor3, _cor0) of
	      <{Var,St}> when 'true' ->
		  let <NLine> =
		      %% Line 272
		      apply 'neg_line'/1
			  (_cor3)
		  in  let <_cor7> =
			  %% Line 277
			  call 'erlang':'length'
			      (Fs)
		      in  let <_cor8> =
			      %% Line 277
			      call 'erlang':'+'
				  (_cor7, 1)
			  in  %% Line 273
			      apply 'expr'/2
				  ({'block',_cor3,%% Line 274
						  [{'match',_cor3,Var,_cor2}|%% Line 275
									     [{'call',NLine,{'remote',NLine,{'atom',NLine,'erlang'},%% Line 276
																    {'atom',NLine,'is_record'}},%% Line 277
																				[Var|[{'atom',_cor3,_cor1}|[{'integer',_cor3,_cor8}|[]]]]}|%% Line 277
																											   []]]}, %% Line 277
																												  St)
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor5})
		-| ['compiler_generated'] )
	    end
'exprs'/2 =
    %% Line 279
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[E0|Es0],St0> when 'true' ->
	      %% Line 280
	      case apply 'expr'/2
		       (E0, St0) of
		<{E,St1}> when 'true' ->
		    %% Line 281
		    case apply 'exprs'/2
			     (Es0, St1) of
		      <{Es,St2}> when 'true' ->
			  %% Line 282
			  {[E|Es],St2}
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor3})
			-| ['compiler_generated'] )
		    end
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 283
	  <[],St> when 'true' ->
	      {[],St}
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'exprs',2}}] )
	    -| ['compiler_generated'] )
	end
'expr'/2 =
    %% Line 285
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Var = {'var',_cor68,_cor69},St> when 'true' ->
	      %% Line 286
	      {Var,St}
	  %% Line 287
	  <Char = {'char',_cor70,_cor71},St> when 'true' ->
	      %% Line 288
	      {Char,St}
	  %% Line 289
	  <Int = {'integer',_cor72,_cor73},St> when 'true' ->
	      %% Line 290
	      {Int,St}
	  %% Line 291
	  <Float = {'float',_cor74,_cor75},St> when 'true' ->
	      %% Line 292
	      {Float,St}
	  %% Line 293
	  <Atom = {'atom',_cor76,_cor77},St> when 'true' ->
	      %% Line 294
	      {Atom,St}
	  %% Line 295
	  <String = {'string',_cor78,_cor79},St> when 'true' ->
	      %% Line 296
	      {String,St}
	  %% Line 297
	  <Nil = {'nil',_cor80},St> when 'true' ->
	      %% Line 298
	      {Nil,St}
	  %% Line 299
	  <{'cons',Line,H0,T0},St0> when 'true' ->
	      %% Line 300
	      case apply 'expr'/2
		       (H0, St0) of
		<{H,St1}> when 'true' ->
		    %% Line 301
		    case apply 'expr'/2
			     (T0, St1) of
		      <{T,St2}> when 'true' ->
			  %% Line 302
			  {{'cons',Line,H,T},St2}
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor3})
			-| ['compiler_generated'] )
		    end
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 303
	  <{'lc',Line,E0,Qs0},St0> when 'true' ->
	      %% Line 304
	      case apply 'lc_tq'/3
		       (Line, Qs0, St0) of
		<{Qs1,St1}> when 'true' ->
		    %% Line 305
		    case apply 'expr'/2
			     (E0, St1) of
		      <{E1,St2}> when 'true' ->
			  %% Line 306
			  {{'lc',Line,E1,Qs1},St2}
		      ( <_cor5> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor5})
			-| ['compiler_generated'] )
		    end
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 307
	  <{'bc',Line,E0,Qs0},St0> when 'true' ->
	      %% Line 308
	      case apply 'lc_tq'/3
		       (Line, Qs0, St0) of
		<{Qs1,St1}> when 'true' ->
		    %% Line 309
		    case apply 'expr'/2
			     (E0, St1) of
		      <{E1,St2}> when 'true' ->
			  %% Line 310
			  {{'bc',Line,E1,Qs1},St2}
		      ( <_cor7> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor7})
			-| ['compiler_generated'] )
		    end
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor6})
		  -| ['compiler_generated'] )
	      end
	  %% Line 311
	  <{'tuple',Line,Es0},St0> when 'true' ->
	      %% Line 312
	      case apply 'expr_list'/2
		       (Es0, St0) of
		<{Es1,St1}> when 'true' ->
		    %% Line 313
		    {{'tuple',Line,Es1},St1}
		( <_cor8> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor8})
		  -| ['compiler_generated'] )
	      end
	  %% Line 314
	  <{'map',Line,Es0},St0> when 'true' ->
	      %% Line 315
	      case apply 'expr_list'/2
		       (Es0, St0) of
		<{Es1,St1}> when 'true' ->
		    %% Line 316
		    {{'map',Line,Es1},St1}
		( <_cor9> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor9})
		  -| ['compiler_generated'] )
	      end
	  %% Line 317
	  <{'map',Line,Arg0,Es0},St0> when 'true' ->
	      %% Line 318
	      case apply 'expr'/2
		       (Arg0, St0) of
		<{Arg1,St1}> when 'true' ->
		    %% Line 319
		    case apply 'expr_list'/2
			     (Es0, St1) of
		      <{Es1,St2}> when 'true' ->
			  %% Line 320
			  {{'map',Line,Arg1,Es1},St2}
		      ( <_cor11> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor11})
			-| ['compiler_generated'] )
		    end
		( <_cor10> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor10})
		  -| ['compiler_generated'] )
	      end
	  %% Line 321
	  <{'map_field_assoc',Line,K0,V0},St0> when 'true' ->
	      %% Line 322
	      case apply 'expr'/2
		       (K0, St0) of
		<{K,St1}> when 'true' ->
		    %% Line 323
		    case apply 'expr'/2
			     (V0, St1) of
		      <{V,St2}> when 'true' ->
			  %% Line 324
			  {{'map_field_assoc',Line,K,V},St2}
		      ( <_cor13> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor13})
			-| ['compiler_generated'] )
		    end
		( <_cor12> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor12})
		  -| ['compiler_generated'] )
	      end
	  %% Line 325
	  <{'map_field_exact',Line,K0,V0},St0> when 'true' ->
	      %% Line 326
	      case apply 'expr'/2
		       (K0, St0) of
		<{K,St1}> when 'true' ->
		    %% Line 327
		    case apply 'expr'/2
			     (V0, St1) of
		      <{V,St2}> when 'true' ->
			  %% Line 328
			  {{'map_field_exact',Line,K,V},St2}
		      ( <_cor15> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor15})
			-| ['compiler_generated'] )
		    end
		( <_cor14> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor14})
		  -| ['compiler_generated'] )
	      end
	  %% Line 332
	  <{'record_index',Line,Name,F},St> when 'true' ->
	      let <_cor16> =
		  %% Line 333
		  apply 'record_fields'/2
		      (Name, St)
	      in  let <I> =
		      %% Line 333
		      apply 'index_expr'/4
			  (Line, F, Name, _cor16)
		  in  %% Line 334
		      apply 'expr'/2
			  (I, St)
	  %% Line 335
	  <{'record',Line0,Name,Is},St> when 'true' ->
	      let <Line> =
		  %% Line 336
		  apply 'record_offset'/2
		      (Line0, St)
	      in  let <_cor19> =
		      %% Line 338
		      apply 'record_fields'/2
			  (Name, St)
		  in  let <_cor20> =
			  %% Line 338
			  apply 'record_inits'/2
			      (_cor19, Is)
		      in  %% Line 337
			  apply 'expr'/2
			      ({'tuple',Line,[{'atom',Line0,Name}|_cor20]}, %% Line 339
									    St)
	  %% Line 340
	  <{'record_field',Line,R,Name,F},St> when 'true' ->
	      %% Line 341
	      apply 'get_record_field'/5
		  (Line, R, F, Name, St)
	  %% Line 342
	  <{'record',_cor81,R,Name,Us},St0> when 'true' ->
	      let <_cor21> =
		  %% Line 343
		  apply 'record_fields'/2
		      (Name, St0)
	      in  %% Line 343
		  case apply 'record_update'/5
			   (R, Name, _cor21, Us, St0) of
		    <{Ue,St1}> when 'true' ->
			%% Line 344
			apply 'expr'/2
			    (Ue, St1)
		    ( <_cor22> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor22})
		      -| ['compiler_generated'] )
		  end
	  %% Line 345
	  <{'bin',Line,Es0},St0> when 'true' ->
	      %% Line 346
	      case apply 'expr_bin'/2
		       (Es0, St0) of
		<{Es1,St1}> when 'true' ->
		    %% Line 347
		    {{'bin',Line,Es1},St1}
		( <_cor23> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor23})
		  -| ['compiler_generated'] )
	      end
	  %% Line 348
	  <{'block',Line,Es0},St0> when 'true' ->
	      %% Line 349
	      case apply 'exprs'/2
		       (Es0, St0) of
		<{Es,St1}> when 'true' ->
		    %% Line 350
		    {{'block',Line,Es},St1}
		( <_cor24> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor24})
		  -| ['compiler_generated'] )
	      end
	  %% Line 351
	  <{'if',Line,Cs0},St0> when 'true' ->
	      %% Line 352
	      case apply 'clauses'/2
		       (Cs0, St0) of
		<{Cs,St1}> when 'true' ->
		    %% Line 353
		    {{'if',Line,Cs},St1}
		( <_cor25> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor25})
		  -| ['compiler_generated'] )
	      end
	  %% Line 354
	  <{'case',Line,E0,Cs0},St0> when 'true' ->
	      %% Line 355
	      case apply 'expr'/2
		       (E0, St0) of
		<{E,St1}> when 'true' ->
		    %% Line 356
		    case apply 'clauses'/2
			     (Cs0, St1) of
		      <{Cs,St2}> when 'true' ->
			  %% Line 357
			  {{'case',Line,E,Cs},St2}
		      ( <_cor27> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor27})
			-| ['compiler_generated'] )
		    end
		( <_cor26> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor26})
		  -| ['compiler_generated'] )
	      end
	  %% Line 358
	  <{'receive',Line,Cs0},St0> when 'true' ->
	      %% Line 359
	      case apply 'clauses'/2
		       (Cs0, St0) of
		<{Cs,St1}> when 'true' ->
		    %% Line 360
		    {{'receive',Line,Cs},St1}
		( <_cor28> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor28})
		  -| ['compiler_generated'] )
	      end
	  %% Line 361
	  <{'receive',Line,Cs0,To0,ToEs0},St0> when 'true' ->
	      %% Line 362
	      case apply 'expr'/2
		       (To0, St0) of
		<{To,St1}> when 'true' ->
		    %% Line 363
		    case apply 'exprs'/2
			     (ToEs0, St1) of
		      <{ToEs,St2}> when 'true' ->
			  %% Line 364
			  case apply 'clauses'/2
				   (Cs0, St2) of
			    <{Cs,St3}> when 'true' ->
				%% Line 365
				{{'receive',Line,Cs,To,ToEs},St3}
			    ( <_cor31> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor31})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor30> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor30})
			-| ['compiler_generated'] )
		    end
		( <_cor29> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor29})
		  -| ['compiler_generated'] )
	      end
	  %% Line 366
	  <Fun = {'fun',_cor82,{'function',_X_F,_X_A}},St> when 'true' ->
	      %% Line 367
	      {Fun,St}
	  %% Line 368
	  <Fun = {'fun',_cor83,{'function',_X_M,_X_F,_X_A}},St> when 'true' ->
	      %% Line 369
	      {Fun,St}
	  %% Line 370
	  <{'fun',Line,{'clauses',Cs0}},St0> when 'true' ->
	      %% Line 371
	      case apply 'clauses'/2
		       (Cs0, St0) of
		<{Cs,St1}> when 'true' ->
		    %% Line 372
		    {{'fun',Line,{'clauses',Cs}},St1}
		( <_cor32> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor32})
		  -| ['compiler_generated'] )
	      end
	  %% Line 373
	  <{'named_fun',Line,Name,Cs0},St0> when 'true' ->
	      %% Line 374
	      case apply 'clauses'/2
		       (Cs0, St0) of
		<{Cs,St1}> when 'true' ->
		    %% Line 375
		    {{'named_fun',Line,Name,Cs},St1}
		( <_cor33> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor33})
		  -| ['compiler_generated'] )
	      end
	  %% Line 376
	  <{'call',Line,{'atom',_cor84,'is_record'},[A|[{'atom',_cor85,Name}|[]]]},St> when 'true' ->
	      %% Line 377
	      apply 'record_test'/4
		  (Line, A, Name, St)
	  %% Line 378
	  <{'call',Line,{'remote',_cor86,{'atom',_cor87,'erlang'},{'atom',_cor88,'is_record'}},%% Line 379
											       [A|[{'atom',_cor89,Name}|[]]]},%% Line 379
															      St> when 'true' ->
	      %% Line 380
	      apply 'record_test'/4
		  (Line, A, Name, St)
	  %% Line 381
	  <{'call',Line,{'tuple',_cor90,[{'atom',_cor91,'erlang'}|[{'atom',_cor92,'is_record'}|[]]]},%% Line 382
												     [A|[{'atom',_cor93,Name}|[]]]},%% Line 382
																    St> when 'true' ->
	      %% Line 383
	      apply 'record_test'/4
		  (Line, A, Name, St)
	  %% Line 384
	  <{'call',Line,Atom = {'atom',_X_La,N},As0},St0> when 'true' ->
	      %% Line 385
	      case apply 'expr_list'/2
		       (As0, St0) of
		<{As,St1}> when 'true' ->
		    let <Ar> =
			%% Line 386
			call 'erlang':'length'
			    (As)
		    in  %% Line 387
			case call 'erl_internal':'bif'
				 (N, Ar) of
			  %% Line 388
			  <'true'> when 'true' ->
			      %% Line 389
			      {{'call',Line,Atom,As},St1}
			  %% Line 390
			  <'false'> when 'true' ->
			      %% Line 391
			      case apply 'imported'/3
				       (N, Ar, St1) of
				%% Line 392
				<{'yes',_X_Mod}> when 'true' ->
				    %% Line 393
				    {{'call',Line,Atom,As},St1}
				%% Line 394
				<'no'> when 'true' ->
				    %% Line 395
				    case <N,Ar> of
				      %% Line 396
				      <'record_info',2> when 'true' ->
					  %% Line 397
					  apply 'record_info_call'/3
					      (Line, As, St1)
				      %% Line 398
				      <_fol57,_fol58> when 'true' ->
					  %% Line 399
					  {{'call',Line,Atom,As},St1}
				    end
				( <_cor37> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor37})
				  -| ['compiler_generated'] )
			      end
			  ( <_cor38> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor38})
			    -| ['compiler_generated'] )
			end
		( <_cor34> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor34})
		  -| ['compiler_generated'] )
	      end
	  %% Line 403
	  <{'call',Line,{'remote',Lr,M,F},As0},St0> when 'true' ->
	      %% Line 404
	      case apply 'expr_list'/2
		       ([M|[F|As0]], St0) of
		<{[M1|[F1|As1]],St1}> when 'true' ->
		    %% Line 405
		    {{'call',Line,{'remote',Lr,M1,F1},As1},St1}
		( <_cor39> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor39})
		  -| ['compiler_generated'] )
	      end
	  %% Line 406
	  <{'call',Line,F,As0},St0> when 'true' ->
	      %% Line 407
	      case apply 'expr_list'/2
		       ([F|As0], St0) of
		<{[Fun1|As1],St1}> when 'true' ->
		    %% Line 408
		    {{'call',Line,Fun1,As1},St1}
		( <_cor40> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor40})
		  -| ['compiler_generated'] )
	      end
	  %% Line 409
	  <{'try',Line,Es0,Scs0,Ccs0,As0},St0> when 'true' ->
	      %% Line 410
	      case apply 'exprs'/2
		       (Es0, St0) of
		<{Es1,St1}> when 'true' ->
		    %% Line 411
		    case apply 'clauses'/2
			     (Scs0, St1) of
		      <{Scs1,St2}> when 'true' ->
			  %% Line 412
			  case apply 'clauses'/2
				   (Ccs0, St2) of
			    <{Ccs1,St3}> when 'true' ->
				%% Line 413
				case apply 'exprs'/2
					 (As0, St3) of
				  <{As1,St4}> when 'true' ->
				      %% Line 414
				      {{'try',Line,Es1,Scs1,Ccs1,As1},St4}
				  ( <_cor44> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor44})
				    -| ['compiler_generated'] )
				end
			    ( <_cor43> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor43})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor42> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor42})
			-| ['compiler_generated'] )
		    end
		( <_cor41> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor41})
		  -| ['compiler_generated'] )
	      end
	  %% Line 415
	  <{'catch',Line,E0},St0> when 'true' ->
	      %% Line 416
	      case apply 'expr'/2
		       (E0, St0) of
		<{E,St1}> when 'true' ->
		    %% Line 417
		    {{'catch',Line,E},St1}
		( <_cor45> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor45})
		  -| ['compiler_generated'] )
	      end
	  %% Line 418
	  <{'match',Line,P0,E0},St0> when 'true' ->
	      %% Line 419
	      case apply 'expr'/2
		       (E0, St0) of
		<{E,St1}> when 'true' ->
		    %% Line 420
		    case apply 'pattern'/2
			     (P0, St1) of
		      <{P,St2}> when 'true' ->
			  %% Line 421
			  {{'match',Line,P,E},St2}
		      ( <_cor47> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor47})
			-| ['compiler_generated'] )
		    end
		( <_cor46> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor46})
		  -| ['compiler_generated'] )
	      end
	  %% Line 422
	  <{'op',Line,'not',A0},St0> when 'true' ->
	      %% Line 423
	      case apply 'bool_operand'/2
		       (A0, St0) of
		<{A,St1}> when 'true' ->
		    %% Line 424
		    {{'op',Line,'not',A},St1}
		( <_cor48> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor48})
		  -| ['compiler_generated'] )
	      end
	  %% Line 425
	  <{'op',Line,Op,A0},St0> when 'true' ->
	      %% Line 426
	      case apply 'expr'/2
		       (A0, St0) of
		<{A,St1}> when 'true' ->
		    %% Line 427
		    {{'op',Line,Op,A},St1}
		( <_cor49> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor49})
		  -| ['compiler_generated'] )
	      end
	  %% Line 428
	  <{'op',Line,Op,L0,R0},St0>
	      when let <_cor50> =
		    call 'erlang':'=:='
			(Op, 'and')
		in  let <_cor51> =
			%% Line 429
			call 'erlang':'=:='
			    (Op, 'or')
		    in  call 'erlang':'or'
			    (_cor50, _cor51) ->
	      %% Line 430
	      case apply 'bool_operand'/2
		       (L0, St0) of
		<{L,St1}> when 'true' ->
		    %% Line 431
		    case apply 'bool_operand'/2
			     (R0, St1) of
		      <{R,St2}> when 'true' ->
			  %% Line 432
			  {{'op',Line,Op,L,R},St2}
		      ( <_cor53> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor53})
			-| ['compiler_generated'] )
		    end
		( <_cor52> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor52})
		  -| ['compiler_generated'] )
	      end
	  %% Line 433
	  <{'op',Line,Op,L0,R0},St0>
	      when let <_cor54> =
		    call 'erlang':'=:='
			(Op, 'andalso')
		in  let <_cor55> =
			%% Line 434
			call 'erlang':'=:='
			    (Op, 'orelse')
		    in  call 'erlang':'or'
			    (_cor54, _cor55) ->
	      %% Line 435
	      case apply 'bool_operand'/2
		       (L0, St0) of
		<{L,St1}> when 'true' ->
		    %% Line 436
		    case apply 'bool_operand'/2
			     (R0, St1) of
		      <{R,St2}> when 'true' ->
			  %% Line 437
			  ( case St1 of
			      ( <( {'exprec',_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_rec8}
				   -| ['compiler_generated'] )> when 'true' ->
				    case St2 of
				      <{'exprec',_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110}> when 'true' ->
					  let <_cor63> =
					      call 'erlang':'setelement'
						  (9, St2, _rec8)
					  in  {{'op',Line,Op,L,R},_cor63}
				      ( <_cor111> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','exprec'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				-| ['compiler_generated'] )
			      ( <_cor102> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','exprec'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      ( <_cor57> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor57})
			-| ['compiler_generated'] )
		    end
		( <_cor56> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor56})
		  -| ['compiler_generated'] )
	      end
	  %% Line 438
	  <{'op',Line,Op,L0,R0},St0> when 'true' ->
	      %% Line 439
	      case apply 'expr'/2
		       (L0, St0) of
		<{L,St1}> when 'true' ->
		    %% Line 440
		    case apply 'expr'/2
			     (R0, St1) of
		      <{R,St2}> when 'true' ->
			  %% Line 441
			  {{'op',Line,Op,L,R},St2}
		      ( <_cor65> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor65})
			-| ['compiler_generated'] )
		    end
		( <_cor64> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor64})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor67,_cor66> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor67,_cor66})
		  -| [{'function_name',{'expr',2}}] )
	    -| ['compiler_generated'] )
	end
'expr_list'/2 =
    %% Line 443
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[E0|Es0],St0> when 'true' ->
	      %% Line 444
	      case apply 'expr'/2
		       (E0, St0) of
		<{E,St1}> when 'true' ->
		    %% Line 445
		    case apply 'expr_list'/2
			     (Es0, St1) of
		      <{Es,St2}> when 'true' ->
			  %% Line 446
			  {[E|Es],St2}
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor3})
			-| ['compiler_generated'] )
		    end
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 447
	  <[],St> when 'true' ->
	      {[],St}
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'expr_list',2}}] )
	    -| ['compiler_generated'] )
	end
'bool_operand'/2 =
    %% Line 449
    fun (_cor1,_cor0) ->
	%% Line 450
	case apply 'expr'/2
		 (_cor1, _cor0) of
	  <{E1,St1}> when 'true' ->
	      %% Line 451
	      apply 'strict_record_access'/2
		  (E1, St1)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'strict_record_access'/2 =
    %% Line 453
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <E,St = {'exprec',_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,[],_cor25}> when 'true' ->
	      %% Line 454
	      {E,St}
	  %% Line 455
	  <E0,St0> when 'true' ->
	      %% Line 456
	      case St0 of
		<{'exprec',_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,StrictRA,CheckedRA}> when 'true' ->
		    let <_cor8> =
			%% Line 457
			( fun (_cor5,_cor4) ->
			      case <_cor5,_cor4> of
				<A = {Key,_X_L,_X_R,_X_Sz},{L,C}> when 'true' ->
				    %% Line 458
				    case call 'lists':'keymember'
					     (Key, 1, C) of
				      %% Line 459
				      <'true'> when 'true' ->
					  {L,C}
				      %% Line 460
				      <'false'> when 'true' ->
					  {[A|L],[A|C]}
				      ( <_cor3> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor3})
					-| ['compiler_generated'] )
				    end
				( <_cor7,_cor6> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor7,_cor6})
					-| [{'function_name',{'-strict_record_access/2-fun-0-',2}}] )
				  -| ['compiler_generated'] )
			      end
			  -| [{'id',{0,0,'-strict_record_access/2-fun-0-'}}] )
		    in  %% Line 457
			case call 'lists':'foldl'
				 (_cor8, %% Line 462
					 {[],CheckedRA}, %% Line 462
							 StrictRA) of
			  <{New,NC}> when 'true' ->
			      let <_cor10> =
				  %% Line 463
				  case <> of
				    <>
					when call 'erlang':'=:='
					      (New,
					       []) ->
					E0
				    <> when 'true' ->
					apply 'conj'/2
					    (New, E0)
				  end
			      in  let <_cor13> =
				      %% Line 464
				      call 'erlang':'setelement'
					  (9, St0, NC)
				  in  let <_cor15> =
					  %% Line 464
					  call 'erlang':'setelement'
					      (8, _cor13, [])
				      in  %% Line 465
					  apply 'expr'/2
					      (_cor10, _cor15)
			  ( <_cor9> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor9})
			    -| ['compiler_generated'] )
			end
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	end
'conj'/2 =
    %% Line 469
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],_X_E> when 'true' ->
	      %% Line 470
	      'empty'
	  %% Line 471
	  <[{{Name,_X_Rp},L,R,Sz}|AL],E> when 'true' ->
	      let <NL> =
		  %% Line 472
		  apply 'neg_line'/1
		      (L)
	      in  let <T1> =
		      %% Line 473
		      {'op',NL,'orelse',%% Line 474
					{'call',NL,%% Line 475
						   {'remote',NL,{'atom',NL,'erlang'},{'atom',NL,'is_record'}},%% Line 476
													      [R|[{'atom',NL,Name}|[{'integer',NL,Sz}|[]]]]},%% Line 477
																			     {'atom',NL,'fail'}}
		  in  let <_cor5> =
			  %% Line 478
			  case apply 'conj'/2
				   (AL, 'none') of
			    %% Line 479
			    <'empty'> when 'true' ->
				T1
			    %% Line 480
			    <C> when 'true' ->
				{'op',NL,'and',C,T1}
			  end
		      in  %% Line 482
			  case E of
			    %% Line 483
			    <'none'> when 'true' ->
				%% Line 484
				case _cor5 of
				  %% Line 485
				  <{'op',_cor11,'and',_cor12,_cor13}> when 'true' ->
				      _cor5
				  %% Line 487
				  <_cor14> when 'true' ->
				      %% Line 493
				      {'op',NL,'and',_cor5,{'atom',NL,'true'}}
				end
			    %% Line 495
			    <_cor15> when 'true' ->
				%% Line 496
				{'op',NL,'and',_cor5,E}
			  end
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9})
		  -| [{'function_name',{'conj',2}}] )
	    -| ['compiler_generated'] )
	end
'lc_tq'/3 =
    %% Line 502
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Line,[{'generate',Lg,P0,G0}|Qs0],St0> when 'true' ->
	      %% Line 503
	      case apply 'expr'/2
		       (G0, St0) of
		<{G1,St1}> when 'true' ->
		    %% Line 504
		    case apply 'pattern'/2
			     (P0, St1) of
		      <{P1,St2}> when 'true' ->
			  %% Line 505
			  case apply 'lc_tq'/3
				   (Line, Qs0, St2) of
			    <{Qs1,St3}> when 'true' ->
				%% Line 506
				{[{'generate',Lg,P1,G1}|Qs1],St3}
			    ( <_cor5> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor5})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 507
	  <Line,[{'b_generate',Lg,P0,G0}|Qs0],St0> when 'true' ->
	      %% Line 508
	      case apply 'expr'/2
		       (G0, St0) of
		<{G1,St1}> when 'true' ->
		    %% Line 509
		    case apply 'pattern'/2
			     (P0, St1) of
		      <{P1,St2}> when 'true' ->
			  %% Line 510
			  case apply 'lc_tq'/3
				   (Line, Qs0, St2) of
			    <{Qs1,St3}> when 'true' ->
				%% Line 511
				{[{'b_generate',Lg,P1,G1}|Qs1],St3}
			    ( <_cor8> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor8})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor7> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor7})
			-| ['compiler_generated'] )
		    end
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor6})
		  -| ['compiler_generated'] )
	      end
	  %% Line 512
	  <Line,[F0|Qs0],St0> when 'true' ->
	      %% Line 514
	      case call 'erl_lint':'is_guard_test'
		       (F0) of
		%% Line 515
		<'true'> when 'true' ->
		    %% Line 516
		    case apply 'guard_test'/2
			     (F0, St0) of
		      <{F1,St1}> when 'true' ->
			  %% Line 517
			  case apply 'lc_tq'/3
				   (Line, Qs0, St1) of
			    <{Qs1,St2}> when 'true' ->
				%% Line 518
				{[F1|Qs1],St2}
			    ( <_cor10> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor10})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor9> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor9})
			-| ['compiler_generated'] )
		    end
		%% Line 519
		<'false'> when 'true' ->
		    %% Line 520
		    case apply 'expr'/2
			     (F0, St0) of
		      <{F1,St1}> when 'true' ->
			  %% Line 521
			  case apply 'lc_tq'/3
				   (Line, Qs0, St1) of
			    <{Qs1,St2}> when 'true' ->
				%% Line 522
				{[F1|Qs1],St2}
			    ( <_cor12> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor12})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor11> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor11})
			-| ['compiler_generated'] )
		    end
		( <_cor13> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor13})
		  -| ['compiler_generated'] )
	      end
	  %% Line 524
	  <_X_Line,[],St0> when 'true' ->
	      %% Line 525
	      case St0 of
		<{'exprec',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27}> when 'true' ->
		    let <_cor16> =
			call 'erlang':'setelement'
			    (9, St0, [])
		    in  {[],_cor16}
		( <_cor28> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','exprec'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  ( <_cor19,_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17})
		  -| [{'function_name',{'lc_tq',3}}] )
	    -| ['compiler_generated'] )
	end
'normalise_fields'/1 =
    %% Line 532
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 533
	    ( fun (_cor1) ->
		  case _cor1 of
		    <{'record_field',Lf,Field}> when 'true' ->
			%% Line 534
			{'record_field',Lf,Field,{'atom',Lf,'undefined'}}
		    %% Line 535
		    <{'typed_record_field',{'record_field',Lf,Field},_X_Type}> when 'true' ->
			%% Line 536
			{'record_field',Lf,Field,{'atom',Lf,'undefined'}}
		    %% Line 537
		    <{'typed_record_field',Field,_X_Type}> when 'true' ->
			%% Line 538
			Field
		    %% Line 539
		    <F> when 'true' ->
			F
		  end
	      -| [{'id',{0,0,'-normalise_fields/1-fun-0-'}}] )
	in  %% Line 533
	    call 'lists':'map'
		(_cor3, _cor0)
'record_fields'/2 =
    %% Line 545
    fun (_cor1,_cor0) ->
	( case _cor0 of
	    ( <( {'exprec',_cor6,_cor7,_cor8,_rec11,_cor9,_cor10,_cor11,_cor12}
		 -| ['compiler_generated'] )> when 'true' ->
		  call 'dict':'fetch'
		      (_cor1, _rec11)
	      -| ['compiler_generated'] )
	    ( <_cor13> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','exprec'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'find_field'/2 =
    %% Line 547
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <F,[{'record_field',_cor4,{'atom',_cor5,_cor6},Val}|_cor7]>
	      when call 'erlang':'=:='
		    (_cor6,
		     F) ->
	      {'ok',Val}
	  %% Line 548
	  <F,[_cor8|Fs]> when 'true' ->
	      apply 'find_field'/2
		  (F, Fs)
	  %% Line 549
	  <_cor9,[]> when 'true' ->
	      'error'
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'find_field',2}}] )
	    -| ['compiler_generated'] )
	end
'field_names'/1 =
    %% Line 554
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 555
	    ( fun (_cor1) ->
		  case _cor1 of
		    <{'record_field',_cor5,Field,_X_Val}> when 'true' ->
			Field
		    ( <_cor2> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor2})
			    -| [{'function_name',{'-field_names/1-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-field_names/1-fun-0-'}}] )
	in  %% Line 555
	    call 'lists':'map'
		(_cor3, _cor0)
'index_expr'/4 =
    %% Line 562
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Line,{'atom',_cor9,F},_X_Name,Fs> when 'true' ->
	      let <_cor4> =
		  %% Line 563
		  apply 'index_expr'/3
		      (F, Fs, 2)
	      in  %% Line 563
		  {'integer',Line,_cor4}
	  ( <_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6,_cor5})
		  -| [{'function_name',{'index_expr',4}}] )
	    -| ['compiler_generated'] )
	end
'index_expr'/3 =
    %% Line 565
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <F,[{'record_field',_cor7,{'atom',_cor8,_cor9},_cor10}|_cor11],I>
	      when call 'erlang':'=:='
		    (_cor9,
		     F) ->
	      I
	  %% Line 566
	  <F,[_cor12|Fs],I> when 'true' ->
	      let <_cor3> =
		  call 'erlang':'+'
		      (I, 1)
	      in  apply 'index_expr'/3
		      (F, Fs, _cor3)
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'index_expr',3}}] )
	    -| ['compiler_generated'] )
	end
'get_record_field'/5 =
    %% Line 573
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 574
	( case _cor0 of
	    ( <( {'exprec',_rec12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19}
		 -| ['compiler_generated'] )> when 'true' ->
		  case apply 'strict_record_tests'/1
			   (_rec12) of
		    %% Line 575
		    <'false'> when 'true' ->
			%% Line 576
			apply 'sloppy_get_record_field'/5
			    (_cor4, _cor3, _cor2, _cor1, _cor0)
		    %% Line 577
		    <'true'> when 'true' ->
			%% Line 578
			apply 'strict_get_record_field'/5
			    (_cor4, _cor3, _cor2, _cor1, _cor0)
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor7})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor20> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','exprec'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'strict_get_record_field'/5 =
    %% Line 581
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Line,R,Index = {'atom',_cor37,F},Name,St0> when 'true' ->
	      %% Line 582
	      case apply 'is_in_guard'/0
		       () of
		%% Line 583
		<'false'> when 'true' ->
		    %% Line 584
		    case apply 'new_var'/2
			     (Line, St0) of
		      <{Var,St}> when 'true' ->
			  let <Fs> =
			      %% Line 585
			      apply 'record_fields'/2
				  (Name, St)
			  in  let <I> =
				  %% Line 586
				  apply 'index_expr'/3
				      (F, Fs, 2)
			      in  let <_cor8> =
				      %% Line 587
				      call 'erlang':'length'
					  (Fs)
				  in  let <_cor9> =
					  %% Line 587
					  call 'erlang':'+'
					      (_cor8, 1)
				      in  let <P> =
					      %% Line 587
					      apply 'record_pattern'/6
						  (2, I, Var, _cor9, Line, [{'atom',Line,Name}|[]])
					  in  let <NLine> =
						  %% Line 588
						  apply 'neg_line'/1
						      (Line)
					      in  let <RLine> =
						      %% Line 589
						      apply 'record_offset'/2
							  (NLine, St)
						  in  let <E> =
							  %% Line 590
							  {'case',NLine,R,%% Line 591
									  [{'clause',NLine,[{'tuple',RLine,P}|[]],[],[Var|[]]}|%% Line 592
															       [{'clause',NLine,[{'var',NLine,'_'}|[]],[],%% Line 593
																					  [{'call',NLine,{'remote',NLine,%% Line 594
																									 {'atom',NLine,'erlang'},%% Line 595
																												 {'atom',NLine,'error'}},%% Line 596
																															 [{'tuple',NLine,[{'atom',NLine,'badrecord'}|[{'atom',NLine,Name}|[]]]}|[]]}|%% Line 596
																																								     []]}|%% Line 596
																																									  []]]}
						      in  %% Line 597
							  apply 'expr'/2
							      (E, St)
		      ( <_cor5> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor5})
			-| ['compiler_generated'] )
		    end
		%% Line 598
		<'true'> when 'true' ->
		    let <Fs> =
			%% Line 599
			apply 'record_fields'/2
			    (Name, St0)
		    in  let <I> =
			    %% Line 600
			    apply 'index_expr'/4
				(Line, Index, Name, Fs)
			in  %% Line 601
			    case apply 'expr'/2
				     (R, St0) of
			      <{ExpR,St1}> when 'true' ->
				  let <_cor19> =
				      %% Line 603
				      ( fun (_cor17) ->
					    0
					-| [{'id',{0,0,'-strict_get_record_field/5-fun-0-'}}] )
				  in  let <ExpRp> =
					  %% Line 603
					  call 'erl_lint':'modify_line'
					      (ExpR, _cor19)
				      in  let <_cor21> =
					      %% Line 604
					      call 'erlang':'length'
						  (Fs)
					  in  let <_cor22> =
						  %% Line 604
						  call 'erlang':'+'
						      (_cor21, 1)
					      in  let <RA> =
						      %% Line 604
						      {{Name,ExpRp},Line,ExpR,_cor22}
						  in  %% Line 605
						      ( case St1 of
							  ( <( {'exprec',_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_rec15,_cor44}
							       -| ['compiler_generated'] )> when 'true' ->
								let <_rec13> =
								    [RA|_rec15]
								in  let <_cor29> =
									call 'erlang':'setelement'
									    (8, St1, _rec13)
								    in  %% Line 606
									{{'call',Line,%% Line 607
										      {'remote',Line,{'atom',Line,'erlang'},{'atom',Line,'element'}},%% Line 608
																		     [I|[ExpR|[]]]},_cor29}
							    -| ['compiler_generated'] )
							  ( <_cor45> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','exprec'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
			      ( <_cor16> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor16})
				-| ['compiler_generated'] )
			    end
		( <_cor31> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor31})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor36,_cor35,_cor34,_cor33,_cor32> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor36,_cor35,_cor34,_cor33,_cor32})
		  -| [{'function_name',{'strict_get_record_field',5}}] )
	    -| ['compiler_generated'] )
	end
'record_pattern'/6 =
    %% Line 611
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <I,_cor14,Var,Sz,Line,Acc>
	      when call 'erlang':'=:='
		    (_cor14,
		     I) ->
	      let <_cor6> =
		  %% Line 612
		  call 'erlang':'+'
		      (I, 1)
	      in  %% Line 612
		  apply 'record_pattern'/6
		      (_cor6, I, Var, Sz, Line, [Var|Acc])
	  %% Line 613
	  <Cur,I,Var,Sz,Line,Acc>
	      when call 'erlang':'=<'
		    (Cur,
		     Sz) ->
	      let <_cor7> =
		  %% Line 614
		  call 'erlang':'+'
		      (Cur, 1)
	      in  %% Line 614
		  apply 'record_pattern'/6
		      (_cor7, I, Var, Sz, Line, [{'var',Line,'_'}|Acc])
	  %% Line 615
	  <_cor15,_cor16,_cor17,_cor18,_cor19,Acc> when 'true' ->
	      call 'lists':'reverse'
		  (Acc)
	end
'sloppy_get_record_field'/5 =
    %% Line 617
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Fs> =
	    %% Line 618
	    apply 'record_fields'/2
		(_cor1, _cor0)
	in  let <I> =
		%% Line 619
		apply 'index_expr'/4
		    (_cor4, _cor2, _cor1, Fs)
	    in  %% Line 620
		apply 'expr'/2
		    ({'call',_cor4,%% Line 621
				   {'remote',_cor4,{'atom',_cor4,'erlang'},{'atom',_cor4,'element'}},%% Line 622
												     [I|[_cor3|[]]]}, _cor0)
'strict_record_tests'/1 =
    %% Line 624
    fun (_cor0) ->
	case _cor0 of
	  <['strict_record_tests'|_cor2]> when 'true' ->
	      'true'
	  %% Line 625
	  <['no_strict_record_tests'|_cor3]> when 'true' ->
	      'false'
	  %% Line 626
	  <[_cor4|Os]> when 'true' ->
	      apply 'strict_record_tests'/1
		  (Os)
	  %% Line 627
	  <[]> when 'true' ->
	      'true'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'strict_record_tests',1}}] )
	    -| ['compiler_generated'] )
	end
'strict_record_updates'/1 =
    %% Line 629
    fun (_cor0) ->
	case _cor0 of
	  <['strict_record_updates'|_cor2]> when 'true' ->
	      'true'
	  %% Line 630
	  <['no_strict_record_updates'|_cor3]> when 'true' ->
	      'false'
	  %% Line 631
	  <[_cor4|Os]> when 'true' ->
	      apply 'strict_record_updates'/1
		  (Os)
	  %% Line 632
	  <[]> when 'true' ->
	      'false'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'strict_record_updates',1}}] )
	    -| ['compiler_generated'] )
	end
'pattern_fields'/2 =
    %% Line 639
    fun (_cor1,_cor0) ->
	let <Wildcard> =
	    %% Line 640
	    apply 'record_wildcard_init'/1
		(_cor0)
	in  let <_cor6> =
		%% Line 641
		( fun (_cor4) ->
		      case _cor4 of
			<{'record_field',L,{'atom',_cor9,F},_cor10}> when 'true' ->
			    %% Line 642
			    case apply 'find_field'/2
				     (F, _cor0) of
			      %% Line 643
			      <{'ok',Match}> when 'true' ->
				  Match
			      %% Line 644
			      <'error'>
				  when call 'erlang':'=:='
					(Wildcard,
					 'none') ->
				  {'var',L,'_'}
			      %% Line 645
			      <'error'> when 'true' ->
				  Wildcard
			      ( <_cor3> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor3})
				-| ['compiler_generated'] )
			    end
			( <_cor5> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor5})
				-| [{'function_name',{'-pattern_fields/2-fun-0-',1}}] )
			  -| ['compiler_generated'] )
		      end
		  -| [{'id',{0,0,'-pattern_fields/2-fun-0-'}}] )
	    in  %% Line 641
		call 'lists':'map'
		    (_cor6, _cor1)
'record_inits'/2 =
    %% Line 654
    fun (_cor1,_cor0) ->
	let <WildcardInit> =
	    %% Line 655
	    apply 'record_wildcard_init'/1
		(_cor0)
	in  let <_cor6> =
		%% Line 656
		( fun (_cor4) ->
		      case _cor4 of
			<{'record_field',_cor9,{'atom',_cor10,F},D}> when 'true' ->
			    %% Line 657
			    case apply 'find_field'/2
				     (F, _cor0) of
			      %% Line 658
			      <{'ok',Init}> when 'true' ->
				  Init
			      %% Line 659
			      <'error'>
				  when call 'erlang':'=:='
					(WildcardInit,
					 'none') ->
				  D
			      %% Line 660
			      <'error'> when 'true' ->
				  WildcardInit
			      ( <_cor3> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor3})
				-| ['compiler_generated'] )
			    end
			( <_cor5> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor5})
				-| [{'function_name',{'-record_inits/2-fun-0-',1}}] )
			  -| ['compiler_generated'] )
		      end
		  -| [{'id',{0,0,'-record_inits/2-fun-0-'}}] )
	    in  %% Line 656
		call 'lists':'map'
		    (_cor6, _cor1)
'record_wildcard_init'/1 =
    %% Line 664
    fun (_cor0) ->
	case _cor0 of
	  <[{'record_field',_cor2,{'var',_cor3,'_'},D}|_cor4]> when 'true' ->
	      D
	  %% Line 665
	  <[_cor5|Is]> when 'true' ->
	      apply 'record_wildcard_init'/1
		  (Is)
	  %% Line 666
	  <[]> when 'true' ->
	      'none'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'record_wildcard_init',1}}] )
	    -| ['compiler_generated'] )
	end
'record_update'/5 =
    %% Line 674
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Line> =
	    %% Line 675
	    call 'erlang':'element'
		(2, _cor4)
	in  %% Line 676
	    case apply 'record_exprs'/2
		     (_cor1, _cor0) of
	      <{Pre,Us,St1}> when 'true' ->
		  let <Nf> =
		      %% Line 677
		      call 'erlang':'length'
			  (_cor2)
		  in  let <Nu> =
			  %% Line 678
			  call 'erlang':'length'
			      (Us)
		      in  let <Nc> =
			      %% Line 679
			      call 'erlang':'-'
				  (Nf, Nu)
			  in  %% Line 683
			      case apply 'new_var'/2
				       (Line, St1) of
				<{Var,St2}> when 'true' ->
				    %% Line 685
				    ( case St2 of
					( <( {'exprec',_rec16,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33}
					     -| ['compiler_generated'] )> when 'true' ->
					      let <StrictUpdates> =
						  apply 'strict_record_updates'/1
						      (_rec16)
					      in  let <_cor19> =
						      %% Line 689
						      case <> of
							%% Line 690
							<>
							    when call 'erlang':'=:='
								  (Nu,
								   0) ->
							    %% Line 691
							    apply 'record_match'/6
								(Var, _cor3, Line, _cor2, Us, St2)
							%% Line 692
							<>
							    when let <_cor14> =
								  call 'erlang':'=<'
								      (Nu, Nc)
							      in  let <_cor15> =
								      call 'erlang':'=:='
									  (StrictUpdates, 'false')
								  in  call 'erlang':'and'
									  (_cor14, _cor15) ->
							    let <_cor16> =
								%% Line 693
								apply 'record_setel'/4
								    (Var, _cor3, _cor2, Us)
							    in  %% Line 693
								{_cor16,St2}
							%% Line 694
							<> when 'true' ->
							    let <_cor17> =
								%% Line 695
								call 'erlang':'hd'
								    (Us)
							    in  let <_cor18> =
								    %% Line 695
								    call 'erlang':'element'
									(2, _cor17)
								in  %% Line 695
								    apply 'record_match'/6
									(Var, _cor3, _cor18, _cor2, Us, St2)
						      end
						  in  %% Line 688
						      case _cor19 of
							<{Update,St}> when 'true' ->
							    let <_cor21> =
								%% Line 697
								call 'erlang':'++'
								    (Pre, [{'match',Line,Var,_cor4}|[Update|[]]])
							    in  %% Line 697
								{{'block',Line,_cor21},St}
							( <_cor20> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_cor20})
							  -| ['compiler_generated'] )
						      end
					  -| ['compiler_generated'] )
					( <_cor34> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','exprec'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				( <_cor10> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor10})
				  -| ['compiler_generated'] )
			      end
	      ( <_cor6> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor6})
		-| ['compiler_generated'] )
	    end
'record_match'/6 =
    %% Line 702
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 703
	case apply 'record_upd_fs'/3
		 (_cor2, _cor1, _cor0) of
	  <{Ps,News,St1}> when 'true' ->
	      let <NLr> =
		  %% Line 704
		  apply 'neg_line'/1
		      (_cor3)
	      in  let <_cor8> =
		      %% Line 709
		      apply 'call_error'/2
			  (NLr, {'tuple',NLr,[{'atom',NLr,'badrecord'}|[{'atom',NLr,_cor4}|[]]]})
		  in  %% Line 705
		      {{'case',_cor3,_cor5,%% Line 706
					   [{'clause',_cor3,[{'tuple',_cor3,[{'atom',_cor3,_cor4}|Ps]}|[]],[],%% Line 707
													      [{'tuple',_cor3,[{'atom',_cor3,_cor4}|News]}|[]]}|%% Line 708
																				[{'clause',NLr,[{'var',NLr,'_'}|[]],[],%% Line 709
																								       [_cor8|[]]}|%% Line 710
																										   []]]},%% Line 711
																											 St1}
	  ( <_cor6> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor6})
	    -| ['compiler_generated'] )
	end
'record_upd_fs'/3 =
    %% Line 713
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{'record_field',Lf,{'atom',_X_La,F},_X_Val}|Fs],Us,St0> when 'true' ->
	      %% Line 714
	      case apply 'new_var'/2
		       (Lf, St0) of
		<{P,St1}> when 'true' ->
		    %% Line 715
		    case apply 'record_upd_fs'/3
			     (Fs, Us, St1) of
		      <{Ps,News,St2}> when 'true' ->
			  %% Line 716
			  case apply 'find_field'/2
				   (F, Us) of
			    %% Line 717
			    <{'ok',New}> when 'true' ->
				{[P|Ps],[New|News],St2}
			    %% Line 718
			    <'error'> when 'true' ->
				{[P|Ps],[P|News],St2}
			    ( <_cor5> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor5})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 720
	  <[],_cor9,St> when 'true' ->
	      {[],[],St}
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'record_upd_fs',3}}] )
	    -| ['compiler_generated'] )
	end
'record_setel'/4 =
    %% Line 726
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor9> =
	    %% Line 727
	    ( fun (_cor6,_cor5) ->
		  case <_cor6,_cor5> of
		    <{'record_field',Lf,Field,Val},Acc> when 'true' ->
			%% Line 728
			case apply 'index_expr'/4
				 (Lf, Field, _cor2, _cor1) of
			  <I = {'integer',_cor34,FieldIndex}> when 'true' ->
			      %% Line 729
			      [{FieldIndex,{I,Lf,Val}}|Acc]
			  ( <_cor4> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor4})
			    -| ['compiler_generated'] )
			end
		    ( <_cor8,_cor7> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor8,_cor7})
			    -| [{'function_name',{'-record_setel/4-fun-0-',2}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-record_setel/4-fun-0-'}}] )
	in  let <Us1> =
		%% Line 727
		call 'lists':'foldl'
		    (_cor9, %% Line 730
			    [], _cor0)
	    in  let <Us2> =
		    %% Line 731
		    call 'lists':'sort'
			(Us1)
		in  let <_cor16> =
			%% Line 732
			( letrec
			      'lc$^0'/1 =
				  fun (_cor14) ->
				      case _cor14 of
					<[{_cor35,T}|_cor13]> when 'true' ->
					    let <_cor15> =
						apply 'lc$^0'/1
						    (_cor13)
					    in  ( [T|_cor15]
						  -| ['compiler_generated'] )
					( <[_cor12|_cor13]> when 'true' ->
					      apply 'lc$^0'/1
						  (_cor13)
					  -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor14> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor14})
						-| [{'function_name',{'lc$^0',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lc$^0'/1
				  (Us2)
			  -| ['list_comprehension'] )
		    in  let <_cor18> =
			    %% Line 733
			    call 'erlang':'hd'
				(_cor16)
			in  let <Lr> =
				%% Line 733
				call 'erlang':'element'
				    (2, _cor18)
			    in  let <_cor20> =
				    %% Line 734
				    call 'erlang':'length'
					(_cor1)
				in  let <Wildcards> =
					%% Line 734
					call 'lists':'duplicate'
					    (_cor20, {'var',Lr,'_'})
				    in  let <NLr> =
					    %% Line 735
					    apply 'neg_line'/1
						(Lr)
					in  let <_cor27> =
						%% Line 738
						( fun (_cor24,_cor23) ->
						      case <_cor24,_cor23> of
							<{I,Lf,Val},Acc> when 'true' ->
							    %% Line 739
							    {'call',Lf,{'remote',Lf,{'atom',Lf,'erlang'},%% Line 740
													 {'atom',Lf,'setelement'}},%% Line 740
																   [I|[Acc|[Val|[]]]]}
							( <_cor26,_cor25> when 'true' ->
							      ( primop 'match_fail'
								    ({'function_clause',_cor26,_cor25})
								-| [{'function_name',{'-record_setel/4-fun-1-',2}}] )
							  -| ['compiler_generated'] )
						      end
						  -| [{'id',{0,0,'-record_setel/4-fun-1-'}}] )
					    in  let <_cor28> =
						    %% Line 738
						    call 'lists':'foldr'
							(_cor27, _cor3, _cor16)
						in  let <_cor29> =
							%% Line 743
							apply 'call_error'/2
							    (NLr, {'tuple',NLr,[{'atom',NLr,'badrecord'}|[{'atom',NLr,_cor2}|[]]]})
						    in  %% Line 736
							{'case',Lr,_cor3,%% Line 737
									 [{'clause',Lr,[{'tuple',Lr,[{'atom',Lr,_cor2}|Wildcards]}|[]],[],%% Line 738
																	  [_cor28|%% Line 741
																		  []]}|%% Line 742
																		       [{'clause',NLr,[{'var',NLr,'_'}|[]],[],%% Line 743
																							      [_cor29|[]]}|%% Line 743
																									   []]]}
'record_info_call'/3 =
    %% Line 748
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Line,[{'atom',_X_Li,Info}|[{'atom',_X_Ln,Name}|[]]],St> when 'true' ->
	      %% Line 749
	      case Info of
		%% Line 750
		<'size'> when 'true' ->
		    let <_cor3> =
			%% Line 751
			apply 'record_fields'/2
			    (Name, St)
		    in  let <_cor4> =
			    %% Line 751
			    call 'erlang':'length'
				(_cor3)
			in  let <_cor5> =
				%% Line 751
				call 'erlang':'+'
				    (1, _cor4)
			    in  %% Line 751
				{{'integer',Line,_cor5},St}
		%% Line 752
		<'fields'> when 'true' ->
		    let <_cor6> =
			%% Line 753
			apply 'record_fields'/2
			    (Name, St)
		    in  let <_cor7> =
			    %% Line 753
			    apply 'field_names'/1
				(_cor6)
			in  let <_cor8> =
				%% Line 753
				apply 'make_list'/2
				    (_cor7, Line)
			    in  %% Line 753
				{_cor8,St}
		( <_cor9> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor9})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10})
		  -| [{'function_name',{'record_info_call',3}}] )
	    -| ['compiler_generated'] )
	end
'record_exprs'/2 =
    %% Line 760
    fun (_cor1,_cor0) ->
	%% Line 761
	apply 'record_exprs'/4
	    (_cor1, _cor0, [], [])
'record_exprs'/4 =
    %% Line 763
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Field0 = {'record_field',Lf,Name = {'atom',_X_La,_X_F},Val}|Us],St0,Pre,Fs> when 'true' ->
	      %% Line 764
	      case apply 'is_simple_val'/1
		       (Val) of
		%% Line 765
		<'true'> when 'true' ->
		    %% Line 766
		    apply 'record_exprs'/4
			(Us, St0, Pre, [Field0|Fs])
		%% Line 767
		<'false'> when 'true' ->
		    %% Line 768
		    case apply 'new_var'/2
			     (Lf, St0) of
		      <{Var,St}> when 'true' ->
			  let <Bind> =
			      %% Line 769
			      {'match',Lf,Var,Val}
			  in  let <Field> =
				  %% Line 770
				  {'record_field',Lf,Name,Var}
			      in  %% Line 771
				  apply 'record_exprs'/4
				      (Us, St, [Bind|Pre], [Field|Fs])
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor7> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor7})
		  -| ['compiler_generated'] )
	      end
	  %% Line 773
	  <[],St,Pre,Fs> when 'true' ->
	      let <_cor8> =
		  %% Line 774
		  call 'lists':'reverse'
		      (Pre)
	      in  %% Line 774
		  {_cor8,Fs,St}
	  ( <_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'record_exprs',4}}] )
	    -| ['compiler_generated'] )
	end
'is_simple_val'/1 =
    %% Line 776
    fun (_cor0) ->
	case _cor0 of
	  <{'var',_cor6,_cor7}> when 'true' ->
	      'true'
	  %% Line 777
	  <Val> when 'true' ->
	      %% Line 778
	      try
		  do  %% Line 779
		      call 'erl_parse':'normalise'
			  (Val)
		      %% Line 780
		      'true'
	      of <_cor1> ->
		  _cor1
	      catch <_cor4,_cor3,_cor2> ->
		  case <_cor4,_cor3,_cor2> of
		    %% Line 781
		    <'error',_cor8,_cor9> when 'true' ->
			%% Line 782
			'false'
		    ( <_cor4,_cor3,_cor2> when 'true' ->
			  primop 'raise'
			      (_cor2, _cor3)
		      -| ['compiler_generated'] )
		  end
	end
'pattern_bin'/2 =
    %% Line 787
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 788
	    ( fun (_cor3,_cor2) ->
		  apply 'pattern_element'/2
		      (_cor3, _cor2)
	      -| [{'id',{0,0,'-pattern_bin/2-fun-0-'}}] )
	in  %% Line 788
	    call 'lists':'foldr'
		(_cor6, {[],_cor0}, _cor1)
'pattern_element'/2 =
    %% Line 790
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'bin_element',Line,Expr0,Size,Type},{Es,St0}> when 'true' ->
	      %% Line 791
	      case apply 'pattern'/2
		       (Expr0, St0) of
		<{Expr,St1}> when 'true' ->
		    %% Line 792
		    {[{'bin_element',Line,Expr,Size,Type}|Es],St1}
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'pattern_element',2}}] )
	    -| ['compiler_generated'] )
	end
'expr_bin'/2 =
    %% Line 796
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 797
	    ( fun (_cor3,_cor2) ->
		  apply 'bin_element'/2
		      (_cor3, _cor2)
	      -| [{'id',{0,0,'-expr_bin/2-fun-0-'}}] )
	in  %% Line 797
	    call 'lists':'foldr'
		(_cor6, {[],_cor0}, _cor1)
'bin_element'/2 =
    %% Line 799
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'bin_element',Line,Expr,Size,Type},{Es,St0}> when 'true' ->
	      %% Line 800
	      case apply 'expr'/2
		       (Expr, St0) of
		<{Expr1,St1}> when 'true' ->
		    let <_cor3> =
			%% Line 801
			case <> of
			  <>
			      when call 'erlang':'=:='
				    (Size,
				     'default') ->
			      {'default',St1}
			  %% Line 802
			  <> when 'true' ->
			      apply 'expr'/2
				  (Size, St1)
			end
		    in  %% Line 801
			case _cor3 of
			  <{Size1,St2}> when 'true' ->
			      %% Line 804
			      {[{'bin_element',Line,Expr1,Size1,Type}|Es],St2}
			  ( <_cor4> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor4})
			    -| ['compiler_generated'] )
			end
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'bin_element',2}}] )
	    -| ['compiler_generated'] )
	end
'new_var'/2 =
    %% Line 806
    fun (_cor1,_cor0) ->
	%% Line 807
	case apply 'new_var_name'/1
		 (_cor0) of
	  <{New,St1}> when 'true' ->
	      %% Line 808
	      {{'var',_cor1,New},St1}
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'new_var_name'/1 =
    %% Line 810
    fun (_cor0) ->
	%% Line 811
	( case _cor0 of
	    ( <( {'exprec',_cor12,_rec17,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor8> =
		      %% Line 812
		      call 'erlang':'integer_to_list'
			  (_rec17)
		  in  let <_cor9> =
			  %% Line 812
			  [114|[101|[99|_cor8]]]
		      in  let <_cor10> =
			      %% Line 812
			      call 'erlang':'list_to_atom'
				  (_cor9)
			  in  let <_rec18> =
				  %% Line 812
				  call 'erlang':'+'
				      (_rec17, 1)
			      in  let <_cor7> =
				      %% Line 812
				      call 'erlang':'setelement'
					  (3, _cor0, _rec18)
				  in  %% Line 812
				      {_cor10,_cor7}
	      -| ['compiler_generated'] )
	    ( <_cor19> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','exprec'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'make_list'/2 =
    %% Line 814
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 815
	    ( fun (_cor3,_cor2) ->
		  {'cons',_cor0,_cor3,_cor2}
	      -| [{'id',{0,0,'-make_list/2-fun-0-'}}] )
	in  %% Line 815
	    call 'lists':'foldr'
		(_cor6, {'nil',_cor0}, _cor1)
'call_error'/2 =
    %% Line 817
    fun (_cor1,_cor0) ->
	%% Line 818
	{'call',_cor1,{'remote',_cor1,{'atom',_cor1,'erlang'},{'atom',_cor1,'error'}},[_cor0|[]]}
'import'/2 =
    %% Line 820
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{Mod,Fs},St> when 'true' ->
	      %% Line 821
	      ( case St of
		  ( <( {'exprec',_cor9,_cor10,_rec22,_cor11,_cor12,_cor13,_cor14,_cor15}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_rec20> =
			    apply 'add_imports'/3
				(Mod, Fs, _rec22)
			in  call 'erlang':'setelement'
				(4, St, _rec20)
		    -| ['compiler_generated'] )
		  ( <_cor16> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','exprec'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 822
	  <_X_Mod0,St> when 'true' ->
	      %% Line 823
	      St
	end
'add_imports'/3 =
    %% Line 825
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Mod,[F|Fs],Is> when 'true' ->
	      let <_cor3> =
		  %% Line 826
		  call 'orddict':'store'
		      (F, Mod, Is)
	      in  %% Line 826
		  apply 'add_imports'/3
		      (Mod, Fs, _cor3)
	  %% Line 827
	  <_cor7,[],Is> when 'true' ->
	      Is
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'add_imports',3}}] )
	    -| ['compiler_generated'] )
	end
'imported'/3 =
    %% Line 829
    fun (_cor2,_cor1,_cor0) ->
	%% Line 830
	( case _cor0 of
	    ( <( {'exprec',_cor9,_cor10,_rec23,_cor11,_cor12,_cor13,_cor14,_cor15}
		 -| ['compiler_generated'] )> when 'true' ->
		  case call 'orddict':'find'
			   ({_cor2,_cor1}, _rec23) of
		    %% Line 831
		    <{'ok',Mod}> when 'true' ->
			{'yes',Mod}
		    %% Line 832
		    <'error'> when 'true' ->
			'no'
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor5})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor16> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','exprec'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'optimize_is_record'/3 =
    %% Line 839
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <H0,G0,{'exprec',Opts,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16}> when 'true' ->
	      %% Line 840
	      case apply 'opt_rec_vars'/1
		       (G0) of
		%% Line 841
		<[]> when 'true' ->
		    %% Line 842
		    {H0,G0}
		%% Line 843
		<Rs0> when 'true' ->
		    %% Line 844
		    case call 'lists':'member'
			     ('dialyzer', Opts) of
		      %% Line 845
		      <'true'> when 'true' ->
			  %% Line 846
			  {H0,G0}
		      %% Line 847
		      <'false'> when 'true' ->
			  %% Line 848
			  case apply 'opt_pattern_list'/2
				   (H0, Rs0) of
			    <{H,Rs}> when 'true' ->
				let <G> =
				    %% Line 849
				    apply 'opt_remove'/2
					(G0, Rs)
				in  %% Line 850
				    {H,G}
			    ( <_cor3> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor3})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor5> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor5})
			-| ['compiler_generated'] )
		    end
	      end
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7})
		  -| [{'function_name',{'optimize_is_record',3}}] )
	    -| ['compiler_generated'] )
	end
'opt_rec_vars'/1 =
    %% Line 871
    fun (_cor0) ->
	case _cor0 of
	  <[G|Gs]> when 'true' ->
	      let <_cor1> =
		  %% Line 872
		  call 'orddict':'new'
		      ()
	      in  let <Rs> =
		      %% Line 872
		      apply 'opt_rec_vars_1'/2
			  (G, _cor1)
		  in  %% Line 873
		      apply 'opt_rec_vars'/2
			  (Gs, Rs)
	  %% Line 874
	  <[]> when 'true' ->
	      call 'orddict':'new'
		  ()
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'opt_rec_vars',1}}] )
	    -| ['compiler_generated'] )
	end
'opt_rec_vars'/2 =
    %% Line 876
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[G|Gs],Rs0> when 'true' ->
	      let <_cor2> =
		  %% Line 877
		  call 'orddict':'new'
		      ()
	      in  let <Rs1> =
		      %% Line 877
		      apply 'opt_rec_vars_1'/2
			  (G, _cor2)
		  in  let <Rs> =
			  %% Line 878
			  call 'ordsets':'intersection'
			      (Rs0, Rs1)
		      in  %% Line 879
			  apply 'opt_rec_vars'/2
			      (Gs, Rs)
	  %% Line 880
	  <[],Rs> when 'true' ->
	      Rs
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'opt_rec_vars',2}}] )
	    -| ['compiler_generated'] )
	end
'opt_rec_vars_1'/2 =
    %% Line 882
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[T|Ts],Rs0> when 'true' ->
	      let <Rs> =
		  %% Line 883
		  apply 'opt_rec_vars_2'/2
		      (T, Rs0)
	      in  %% Line 884
		  apply 'opt_rec_vars_1'/2
		      (Ts, Rs)
	  %% Line 885
	  <[],Rs> when 'true' ->
	      Rs
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'opt_rec_vars_1',2}}] )
	    -| ['compiler_generated'] )
	end
'opt_rec_vars_2'/2 =
    %% Line 887
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'op',_cor4,'and',A1,A2},Rs> when 'true' ->
	      %% Line 888
	      apply 'opt_rec_vars_1'/2
		  ([A1|[A2|[]]], Rs)
	  %% Line 889
	  <{'op',_cor5,'andalso',A1,A2},Rs> when 'true' ->
	      %% Line 890
	      apply 'opt_rec_vars_1'/2
		  ([A1|[A2|[]]], Rs)
	  %% Line 891
	  <{'op',_cor6,'orelse',Arg,{'atom',_cor7,'fail'}},Rs> when 'true' ->
	      %% Line 894
	      apply 'opt_rec_vars_2'/2
		  (Arg, Rs)
	  %% Line 895
	  <{'call',_cor8,{'remote',_cor9,{'atom',_cor10,'erlang'},{'atom',_cor11,'is_record'}},%% Line 896
											       [{'var',_cor12,V}|[{'atom',_cor13,Tag}|[{'integer',_cor14,Sz}|[]]]]},%% Line 896
																				    Rs> when 'true' ->
	      %% Line 897
	      call 'orddict':'store'
		  (V, {Tag,Sz}, Rs)
	  %% Line 898
	  <{'call',_cor15,{'atom',_cor16,'is_record'},%% Line 899
						      [{'var',_cor17,V}|[{'atom',_cor18,Tag}|[{'integer',_cor19,Sz}|[]]]]},%% Line 899
															   Rs> when 'true' ->
	      %% Line 900
	      call 'orddict':'store'
		  (V, {Tag,Sz}, Rs)
	  %% Line 901
	  <_cor20,Rs> when 'true' ->
	      Rs
	end
'opt_pattern_list'/2 =
    %% Line 903
    fun (_cor1,_cor0) ->
	%% Line 904
	apply 'opt_pattern_list'/3
	    (_cor1, _cor0, [])
'opt_pattern_list'/3 =
    %% Line 906
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[P0|Ps],Rs0,Acc> when 'true' ->
	      %% Line 907
	      case apply 'opt_pattern'/2
		       (P0, Rs0) of
		<{P,Rs}> when 'true' ->
		    %% Line 908
		    apply 'opt_pattern_list'/3
			(Ps, Rs, [P|Acc])
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 909
	  <[],Rs,Acc> when 'true' ->
	      let <_cor4> =
		  %% Line 910
		  call 'lists':'reverse'
		      (Acc)
	      in  %% Line 910
		  {_cor4,Rs}
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'opt_pattern_list',3}}] )
	    -| ['compiler_generated'] )
	end
'opt_pattern'/2 =
    %% Line 912
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Var = {'var',_cor12,V},Rs0> when 'true' ->
	      %% Line 913
	      case call 'orddict':'find'
		       (V, Rs0) of
		%% Line 914
		<{'ok',{Tag,Sz}}> when 'true' ->
		    let <Rs> =
			%% Line 915
			call 'orddict':'store'
			    (V, {'remove',Tag,Sz}, Rs0)
		    in  let <_cor3> =
			    %% Line 916
			    apply 'opt_var'/3
				(Var, Tag, Sz)
			in  %% Line 916
			    {_cor3,Rs}
		%% Line 917
		<_cor13> when 'true' ->
		    %% Line 918
		    {Var,Rs0}
	      end
	  %% Line 920
	  <{'cons',Line,H0,T0},Rs0> when 'true' ->
	      %% Line 921
	      case apply 'opt_pattern'/2
		       (H0, Rs0) of
		<{H,Rs1}> when 'true' ->
		    %% Line 922
		    case apply 'opt_pattern'/2
			     (T0, Rs1) of
		      <{T,Rs}> when 'true' ->
			  %% Line 923
			  {{'cons',Line,H,T},Rs}
		      ( <_cor6> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor6})
			-| ['compiler_generated'] )
		    end
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 924
	  <{'tuple',Line,Es0},Rs0> when 'true' ->
	      %% Line 925
	      case apply 'opt_pattern_list'/2
		       (Es0, Rs0) of
		<{Es,Rs}> when 'true' ->
		    %% Line 926
		    {{'tuple',Line,Es},Rs}
		( <_cor7> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor7})
		  -| ['compiler_generated'] )
	      end
	  %% Line 927
	  <{'match',Line,Pa0,Pb0},Rs0> when 'true' ->
	      %% Line 928
	      case apply 'opt_pattern'/2
		       (Pa0, Rs0) of
		<{Pa,Rs1}> when 'true' ->
		    %% Line 929
		    case apply 'opt_pattern'/2
			     (Pb0, Rs1) of
		      <{Pb,Rs}> when 'true' ->
			  %% Line 930
			  {{'match',Line,Pa,Pb},Rs}
		      ( <_cor9> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor9})
			-| ['compiler_generated'] )
		    end
		( <_cor8> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor8})
		  -| ['compiler_generated'] )
	      end
	  %% Line 931
	  <P,Rs> when 'true' ->
	      {P,Rs}
	end
'opt_var'/3 =
    %% Line 933
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Var = {'var',Line,_cor8},Tag,Sz> when 'true' ->
	      let <Rp> =
		  %% Line 934
		  apply 'record_pattern'/6
		      (2, -1, 'ignore', Sz, Line, [{'atom',Line,Tag}|[]])
	      in  %% Line 935
		  {'match',Line,{'tuple',Line,Rp},Var}
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'opt_var',3}}] )
	    -| ['compiler_generated'] )
	end
'opt_remove'/2 =
    %% Line 937
    fun (_cor1,_cor0) ->
	%% Line 938
	( letrec
	      'lc$^0'/1 =
		  fun (_cor4) ->
		      case _cor4 of
			<[G|_cor3]> when 'true' ->
			    let <_cor5> =
				apply 'opt_remove_1'/2
				    (G, _cor0)
			    in  let <_cor6> =
				    apply 'lc$^0'/1
					(_cor3)
				in  ( [_cor5|_cor6]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor4> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor4})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  apply 'lc$^0'/1
		  (_cor1)
	  -| ['list_comprehension'] )
'opt_remove_1'/2 =
    %% Line 940
    fun (_cor1,_cor0) ->
	%% Line 941
	( letrec
	      'lc$^0'/1 =
		  fun (_cor4) ->
		      case _cor4 of
			<[T|_cor3]> when 'true' ->
			    let <_cor5> =
				apply 'opt_remove_2'/2
				    (T, _cor0)
			    in  let <_cor6> =
				    apply 'lc$^0'/1
					(_cor3)
				in  ( [_cor5|_cor6]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor4> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor4})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  apply 'lc$^0'/1
		  (_cor1)
	  -| ['list_comprehension'] )
'opt_remove_2'/2 =
    %% Line 943
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'op',L,Op = 'and',A1,A2},Rs> when 'true' ->
	      let <_cor3> =
		  %% Line 944
		  apply 'opt_remove_2'/2
		      (A1, Rs)
	      in  let <_cor2> =
		      %% Line 944
		      apply 'opt_remove_2'/2
			  (A2, Rs)
		  in  %% Line 944
		      {'op',L,Op,_cor3,_cor2}
	  %% Line 945
	  <{'op',L,Op = 'andalso',A1,A2},Rs> when 'true' ->
	      let <_cor5> =
		  %% Line 946
		  apply 'opt_remove_2'/2
		      (A1, Rs)
	      in  let <_cor4> =
		      %% Line 946
		      apply 'opt_remove_2'/2
			  (A2, Rs)
		  in  %% Line 946
		      {'op',L,Op,_cor5,_cor4}
	  %% Line 947
	  <{'op',L,'orelse',A1,A2},Rs> when 'true' ->
	      let <_cor6> =
		  %% Line 948
		  apply 'opt_remove_2'/2
		      (A1, Rs)
	      in  %% Line 948
		  {'op',L,'orelse',_cor6,A2}
	  %% Line 949
	  <A = {'call',Line,{'remote',_cor11,{'atom',_cor12,'erlang'},{'atom',_cor13,'is_record'}},%% Line 950
												   [{'var',_cor14,V}|[{'atom',_cor15,Tag}|[{'integer',_cor16,Sz}|[]]]]},%% Line 950
																					Rs> when 'true' ->
	      %% Line 951
	      case call 'orddict':'find'
		       (V, Rs) of
		%% Line 952
		<{'ok',{'remove',_cor17,_cor18}}>
		    when let <_cor19> =
			  call 'erlang':'=:='
			      (_cor17, Tag)
		      in  let <_cor20> =
			      call 'erlang':'=:='
				  (_cor18, Sz)
			  in  call 'erlang':'and'
				  (_cor19, _cor20) ->
		    %% Line 953
		    {'atom',Line,'true'}
		%% Line 954
		<_cor21> when 'true' ->
		    %% Line 955
		    A
	      end
	  %% Line 957
	  <A = {'call',Line,{'atom',_cor22,'is_record'},%% Line 958
							[{'var',_cor23,V}|[{'atom',_cor24,Tag}|[{'integer',_cor25,Sz}|[]]]]},%% Line 958
															     Rs> when 'true' ->
	      %% Line 959
	      case call 'orddict':'find'
		       (V, Rs) of
		%% Line 960
		<{'ok',{'remove',_cor26,_cor27}}>
		    when let <_cor28> =
			  call 'erlang':'=:='
			      (_cor26, Tag)
		      in  let <_cor29> =
			      call 'erlang':'=:='
				  (_cor27, Sz)
			  in  call 'erlang':'and'
				  (_cor28, _cor29) ->
		    %% Line 961
		    {'atom',Line,'true'}
		%% Line 962
		<_cor30> when 'true' ->
		    %% Line 963
		    A
	      end
	  %% Line 965
	  <A,_cor31> when 'true' ->
	      A
	end
'neg_line'/1 =
    %% Line 967
    fun (_cor0) ->
	let <_cor4> =
	    %% Line 968
	    ( fun (_cor2) ->
		  let <_cor1> =
		      call 'erlang':'abs'
			  (_cor2)
		  in  call 'erlang':'-'
			  (_cor1)
	      -| [{'id',{0,0,'-neg_line/1-fun-0-'}}] )
	in  %% Line 968
	    call 'erl_parse':'set_line'
		(_cor0, _cor4)
'record_offset'/2 =
    %% Line 970
    fun (_cor1,_cor0) ->
	%% Line 971
	( case _cor0 of
	    ( <( {'exprec',_rec24,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13}
		 -| ['compiler_generated'] )> when 'true' ->
		  case call 'lists':'member'
			   ('dialyzer', _rec24) of
		    %% Line 972
		    <'true'>
			when call 'erlang':'>='
			      (_cor1,
			       0) ->
			call 'erlang':'+'
			    (_cor1, 100000000)
		    %% Line 973
		    <'true'>
			when call 'erlang':'<'
			      (_cor1,
			       0) ->
			call 'erlang':'-'
			    (_cor1, 100000000)
		    %% Line 974
		    <'false'> when 'true' ->
			_cor1
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor4})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor14> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','exprec'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('erl_expand_records')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('erl_expand_records', _cor0)
end