module 'dets_sup' ['init'/1,
		   'module_info'/0,
		   'module_info'/1,
		   'start_link'/0]
    attributes [%% Line 21
		'behaviour' =
		    %% Line 21
		    ['supervisor'],
		%% Line 25
		'spec' =
		    %% Line 25
		    [{{'start_link',0},[{'type',25,'fun',[{'type',25,'product',[]}|[{'type',25,'union',[{'type',25,'tuple',[{'atom',25,'ok'}|[{'type',25,'pid',[]}]]}|[{'atom',25,'ignore'}|[{'type',25,'tuple',[{'atom',25,'error'}|[{'type',25,'term',[]}]]}]]]}]]}]}],
		%% Line 30
		'spec' =
		    %% Line 30
		    [{{'init',1},[{'type',30,'fun',[{'type',30,'product',[{'type',30,'nil',[]}]}|[{'type',31,'tuple',[{'atom',31,'ok'}|[{'type',31,'tuple',[{'type',31,'tuple',[{'atom',31,'simple_one_for_one'}|[{'integer',31,4}|[{'integer',31,3600}]]]}|[{'type',32,'list',[{'type',32,'tuple',[{'atom',32,'dets'}|[{'type',32,'tuple',[{'atom',32,'dets'}|[{'atom',32,'istart_link'}|[{'type',32,'nil',[]}]]]}|[{'atom',33,'temporary'}|[{'integer',33,30000}|[{'atom',33,'worker'}|[{'type',33,'list',[{'atom',33,'dets'}]}]]]]]]}]}]]}]]}]]}]}]]
'start_link'/0 =
    %% Line 27
    fun () ->
	%% Line 28
	call 'supervisor':'start_link'
	    ({'local','dets_sup'}, 'dets_sup', [])
'init'/1 =
    %% Line 35
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 38
	      {'ok',{{'simple_one_for_one',4,3600},[{'dets',{'dets','istart_link',[]},'temporary',30000,'worker',['dets']}]}}
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'init',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('dets_sup')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('dets_sup', _cor0)
end