module 'dets' ['add_user'/3,
	       'all'/0,
	       'bchunk'/2,
	       'close'/1,
	       'delete'/2,
	       'delete_all_objects'/1,
	       'delete_object'/2,
	       'file_info'/1,
	       'first'/1,
	       'foldl'/3,
	       'foldr'/3,
	       'from_ets'/2,
	       'fsck'/1,
	       'fsck'/2,
	       'get_head_field'/2,
	       'info'/1,
	       'info'/2,
	       'init'/2,
	       'init_table'/2,
	       'init_table'/3,
	       'insert'/2,
	       'insert_new'/2,
	       'internal_close'/1,
	       'internal_open'/3,
	       'is_compatible_bchunk_format'/2,
	       'is_dets_file'/1,
	       'istart_link'/1,
	       'lookup'/2,
	       'lookup_keys'/2,
	       'match'/1,
	       'match'/2,
	       'match'/3,
	       'match_delete'/2,
	       'match_object'/1,
	       'match_object'/2,
	       'match_object'/3,
	       'member'/2,
	       'module_info'/0,
	       'module_info'/1,
	       'next'/2,
	       'open_file'/1,
	       'open_file'/2,
	       'pid2name'/1,
	       'remove_user'/2,
	       'repair_continuation'/2,
	       'safe_fixtable'/2,
	       'select'/1,
	       'select'/2,
	       'select'/3,
	       'select_delete'/2,
	       'slot'/2,
	       'start'/0,
	       'stop'/0,
	       'sync'/1,
	       'system_code_change'/4,
	       'system_continue'/3,
	       'system_terminate'/4,
	       'table'/1,
	       'table'/2,
	       'to_ets'/2,
	       'traverse'/2,
	       'update_counter'/3,
	       'verbose'/0,
	       'verbose'/1,
	       'view'/1,
	       'where'/2]
    attributes [%% Line 91
		'export_type' =
		    %% Line 91
		    [{'bindings_cont',0}|[{'cont',0}|[{'object_cont',0}|[{'select_cont',0}|[{'tab_name',0}]]]]],
		%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','file_info'},[{'typed_record_field',{'record_field',25,{'atom',25,'size'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'type'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'device'}|[{'atom',26,'directory'}|[{'atom',26,'other'}|[{'atom',26,'regular'}|[{'atom',26,'symlink'}]]]]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'access'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'atom',27,'read'}|[{'atom',27,'write'}|[{'atom',27,'read_write'}|[{'atom',27,'none'}]]]]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'atime'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'remote_type',28,[{'atom',28,'file'}|[{'atom',28,'date_time'}|[[]]]]}|[{'type',28,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'mtime'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'remote_type',32,[{'atom',32,'file'}|[{'atom',32,'date_time'}|[[]]]]}|[{'type',32,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',34,{'atom',34,'ctime'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'remote_type',34,[{'atom',34,'file'}|[{'atom',34,'date_time'}|[[]]]]}|[{'type',34,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',40,{'atom',40,'mode'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'links'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',46,{'atom',46,'major_device'}},{'type',46,'union',[{'atom',46,'undefined'}|[{'type',46,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'minor_device'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'inode'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',54,{'atom',54,'uid'}},{'type',54,'union',[{'atom',54,'undefined'}|[{'type',54,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',55,{'atom',55,'gid'}},{'type',55,'union',[{'atom',55,'undefined'}|[{'type',55,'non_neg_integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','file_descriptor'},[{'typed_record_field',{'record_field',59,{'atom',59,'module'}},{'type',59,'union',[{'atom',59,'undefined'}|[{'type',59,'module',[]}]]}}|[{'typed_record_field',{'record_field',60,{'atom',60,'data'}},{'type',60,'union',[{'atom',60,'undefined'}|[{'type',60,'term',[]}]]}}]],[]}],
		%% Line 49
		'type' =
		    %% Line 49
		    [{{'record','head'},[{'record_field',50,{'atom',50,'m'}}|[{'record_field',51,{'atom',51,'m2'}}|[{'record_field',52,{'atom',52,'next'}}|[{'record_field',53,{'atom',53,'fptr'}}|[{'record_field',54,{'atom',54,'no_objects'}}|[{'record_field',55,{'atom',55,'no_keys'}}|[{'record_field',56,{'atom',56,'maxobjsize'}}|[{'record_field',58,{'atom',58,'n'}}|[{'record_field',59,{'atom',59,'type'}}|[{'record_field',60,{'atom',60,'keypos'}}|[{'record_field',61,{'atom',61,'freelists'}}|[{'record_field',63,{'atom',63,'freelists_p'}}|[{'record_field',64,{'atom',64,'no_collections'}}|[{'record_field',66,{'atom',66,'auto_save'}}|[{'record_field',67,{'atom',67,'update_mode'}}|[{'record_field',68,{'atom',68,'fixed'},{'atom',68,'false'}}|[{'record_field',70,{'atom',70,'hash_bif'}}|[{'record_field',71,{'atom',71,'has_md5'}}|[{'record_field',72,{'atom',72,'min_no_slots'}}|[{'record_field',73,{'atom',73,'max_no_slots'}}|[{'record_field',74,{'atom',74,'cache'}}|[{'record_field',76,{'atom',76,'filename'}}|[{'record_field',77,{'atom',77,'access'},{'atom',77,'read_write'}}|[{'record_field',78,{'atom',78,'ram_file'},{'atom',78,'false'}}|[{'record_field',79,{'atom',79,'name'}}|[{'record_field',81,{'atom',81,'parent'}}|[{'record_field',82,{'atom',82,'server'}}|[{'record_field',85,{'atom',85,'version'}}|[{'record_field',86,{'atom',86,'mod'}}|[{'record_field',87,{'atom',87,'bump'}}|[{'record_field',88,{'atom',88,'base'}}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','fileheader'},[{'record_field',94,{'atom',94,'freelist'}}|[{'record_field',95,{'atom',95,'fl_base'}}|[{'record_field',96,{'atom',96,'cookie'}}|[{'record_field',97,{'atom',97,'closed_properly'}}|[{'record_field',98,{'atom',98,'type'}}|[{'record_field',99,{'atom',99,'version'}}|[{'record_field',100,{'atom',100,'m'}}|[{'record_field',101,{'atom',101,'next'}}|[{'record_field',102,{'atom',102,'keypos'}}|[{'record_field',103,{'atom',103,'no_objects'}}|[{'record_field',104,{'atom',104,'no_keys'}}|[{'record_field',105,{'atom',105,'min_no_slots'}}|[{'record_field',106,{'atom',106,'max_no_slots'}}|[{'record_field',107,{'atom',107,'no_colls'}}|[{'record_field',108,{'atom',108,'hash_method'}}|[{'record_field',109,{'atom',109,'read_md5'}}|[{'record_field',110,{'atom',110,'has_md5'}}|[{'record_field',111,{'atom',111,'md5'}}|[{'record_field',112,{'atom',112,'trailer'}}|[{'record_field',113,{'atom',113,'eof'}}|[{'record_field',114,{'atom',114,'n'}}|[{'record_field',115,{'atom',115,'mod'}}]]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 119
		'type' =
		    %% Line 119
		    [{{'record','cache'},[{'record_field',120,{'atom',120,'cache'}}|[{'record_field',121,{'atom',121,'csize'}}|[{'record_field',122,{'atom',122,'inserts'}}|[{'record_field',123,{'atom',123,'wrtime'}}|[{'record_field',124,{'atom',124,'tsize'}}|[{'record_field',125,{'atom',125,'delay'}}]]]]]],[]}],
		%% Line 141
		'type' =
		    %% Line 141
		    [{{'record','dets_cont'},[{'record_field',142,{'atom',142,'what'}}|[{'record_field',143,{'atom',143,'no_objs'}}|[{'record_field',144,{'atom',144,'bin'}}|[{'record_field',145,{'atom',145,'alloc'}}|[{'record_field',146,{'atom',146,'tab'}}|[{'record_field',147,{'atom',147,'proc'}}|[{'record_field',148,{'atom',148,'match_program'}}]]]]]]],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{{'record','open_args'},[{'record_field',152,{'atom',152,'file'}}|[{'record_field',153,{'atom',153,'type'}}|[{'record_field',154,{'atom',154,'keypos'}}|[{'record_field',155,{'atom',155,'repair'}}|[{'record_field',156,{'atom',156,'min_no_slots'}}|[{'record_field',157,{'atom',157,'max_no_slots'}}|[{'record_field',158,{'atom',158,'ram_file'}}|[{'record_field',159,{'atom',159,'delayed_write'}}|[{'record_field',160,{'atom',160,'auto_save'}}|[{'record_field',161,{'atom',161,'access'}}|[{'record_field',162,{'atom',162,'version'}}|[{'record_field',163,{'atom',163,'debug'}}]]]]]]]]]]]],[]}],
		%% Line 179
		'type' =
		    %% Line 179
		    [{'access',{'type',179,'union',[{'atom',179,'read'}|[{'atom',179,'read_write'}]]},[]}],
		%% Line 180
		'type' =
		    %% Line 180
		    [{'auto_save',{'type',180,'union',[{'atom',180,'infinity'}|[{'type',180,'non_neg_integer',[]}]]},[]}],
		%% Line 181
		'opaque' =
		    %% Line 181
		    [{'bindings_cont',{'type',181,'record',[{'atom',181,'dets_cont'}]},[]}],
		%% Line 182
		'opaque' =
		    %% Line 182
		    [{'cont',{'type',182,'record',[{'atom',182,'dets_cont'}]},[]}],
		%% Line 183
		'type' =
		    %% Line 183
		    [{'keypos',{'type',183,'pos_integer',[]},[]}],
		%% Line 184
		'type' =
		    %% Line 184
		    [{'match_spec',{'remote_type',184,[{'atom',184,'ets'}|[{'atom',184,'match_spec'}|[[]]]]},[]}],
		%% Line 185
		'type' =
		    %% Line 185
		    [{'object',{'type',185,'tuple','any'},[]}],
		%% Line 186
		'type' =
		    %% Line 186
		    [{'no_slots',{'type',186,'union',[{'type',186,'non_neg_integer',[]}|[{'atom',186,'default'}]]},[]}],
		%% Line 187
		'opaque' =
		    %% Line 187
		    [{'object_cont',{'type',187,'record',[{'atom',187,'dets_cont'}]},[]}],
		%% Line 188
		'type' =
		    %% Line 188
		    [{'pattern',{'type',188,'union',[{'type',188,'atom',[]}|[{'type',188,'tuple','any'}]]},[]}],
		%% Line 189
		'opaque' =
		    %% Line 189
		    [{'select_cont',{'type',189,'record',[{'atom',189,'dets_cont'}]},[]}],
		%% Line 190
		'type' =
		    %% Line 190
		    [{'tab_name',{'type',190,'term',[]},[]}],
		%% Line 191
		'type' =
		    %% Line 191
		    [{'type',{'type',191,'union',[{'atom',191,'bag'}|[{'atom',191,'duplicate_bag'}|[{'atom',191,'set'}]]]},[]}],
		%% Line 192
		'type' =
		    %% Line 192
		    [{'version',{'type',192,'union',[{'integer',192,8}|[{'integer',192,9}|[{'atom',192,'default'}]]]},[]}],
		%% Line 213
		'spec' =
		    %% Line 213
		    [{{'all',0},[{'type',213,'fun',[{'type',213,'product',[]}|[{'type',213,'list',[{'type',213,'tab_name',[]}]}]]}]}],
		%% Line 218
		'spec' =
		    %% Line 218
		    [{{'bchunk',2},[{'type',218,'bounded_fun',[{'type',218,'fun',[{'type',218,'product',[{'var',218,'Name'}|[{'var',218,'Continuation'}]]}|[{'type',219,'union',[{'type',219,'tuple',[{'var',219,'Continuation2'}|[{'var',219,'Data'}]]}|[{'atom',219,'$end_of_table'}|[{'type',219,'tuple',[{'atom',219,'error'}|[{'var',219,'Reason'}]]}]]]}]]}|[[{'type',220,'constraint',[{'atom',220,'is_subtype'}|[[{'var',220,'Name'}|[{'type',220,'tab_name',[]}]]]]}|[{'type',221,'constraint',[{'atom',221,'is_subtype'}|[[{'var',221,'Continuation'}|[{'type',221,'union',[{'atom',221,'start'}|[{'type',221,'cont',[]}]]}]]]]}|[{'type',222,'constraint',[{'atom',222,'is_subtype'}|[[{'var',222,'Continuation2'}|[{'type',222,'cont',[]}]]]]}|[{'type',223,'constraint',[{'atom',223,'is_subtype'}|[[{'var',223,'Data'}|[{'type',223,'union',[{'type',223,'binary',[]}|[{'type',223,'tuple','any'}]]}]]]]}|[{'type',224,'constraint',[{'atom',224,'is_subtype'}|[[{'var',224,'Reason'}|[{'type',224,'term',[]}]]]]}]]]]]]]}]}],
		%% Line 233
		'spec' =
		    %% Line 233
		    [{{'close',1},[{'type',233,'bounded_fun',[{'type',233,'fun',[{'type',233,'product',[{'var',233,'Name'}]}|[{'type',233,'union',[{'atom',233,'ok'}|[{'type',233,'tuple',[{'atom',233,'error'}|[{'var',233,'Reason'}]]}]]}]]}|[[{'type',234,'constraint',[{'atom',234,'is_subtype'}|[[{'var',234,'Name'}|[{'type',234,'tab_name',[]}]]]]}|[{'type',235,'constraint',[{'atom',235,'is_subtype'}|[[{'var',235,'Reason'}|[{'type',235,'term',[]}]]]]}]]]]}]}],
		%% Line 245
		'spec' =
		    %% Line 245
		    [{{'delete',2},[{'type',245,'bounded_fun',[{'type',245,'fun',[{'type',245,'product',[{'var',245,'Name'}|[{'var',245,'Key'}]]}|[{'type',245,'union',[{'atom',245,'ok'}|[{'type',245,'tuple',[{'atom',245,'error'}|[{'var',245,'Reason'}]]}]]}]]}|[[{'type',246,'constraint',[{'atom',246,'is_subtype'}|[[{'var',246,'Name'}|[{'type',246,'tab_name',[]}]]]]}|[{'type',247,'constraint',[{'atom',247,'is_subtype'}|[[{'var',247,'Key'}|[{'type',247,'term',[]}]]]]}|[{'type',248,'constraint',[{'atom',248,'is_subtype'}|[[{'var',248,'Reason'}|[{'type',248,'term',[]}]]]]}]]]]]}]}],
		%% Line 253
		'spec' =
		    %% Line 253
		    [{{'delete_all_objects',1},[{'type',253,'bounded_fun',[{'type',253,'fun',[{'type',253,'product',[{'var',253,'Name'}]}|[{'type',253,'union',[{'atom',253,'ok'}|[{'type',253,'tuple',[{'atom',253,'error'}|[{'var',253,'Reason'}]]}]]}]]}|[[{'type',254,'constraint',[{'atom',254,'is_subtype'}|[[{'var',254,'Name'}|[{'type',254,'tab_name',[]}]]]]}|[{'type',255,'constraint',[{'atom',255,'is_subtype'}|[[{'var',255,'Reason'}|[{'type',255,'term',[]}]]]]}]]]]}]}],
		%% Line 267
		'spec' =
		    %% Line 267
		    [{{'delete_object',2},[{'type',267,'bounded_fun',[{'type',267,'fun',[{'type',267,'product',[{'var',267,'Name'}|[{'var',267,'Object'}]]}|[{'type',267,'union',[{'atom',267,'ok'}|[{'type',267,'tuple',[{'atom',267,'error'}|[{'var',267,'Reason'}]]}]]}]]}|[[{'type',268,'constraint',[{'atom',268,'is_subtype'}|[[{'var',268,'Name'}|[{'type',268,'tab_name',[]}]]]]}|[{'type',269,'constraint',[{'atom',269,'is_subtype'}|[[{'var',269,'Object'}|[{'type',269,'object',[]}]]]]}|[{'type',270,'constraint',[{'atom',270,'is_subtype'}|[[{'var',270,'Reason'}|[{'type',270,'term',[]}]]]]}]]]]]}]}],
		%% Line 293
		'spec' =
		    %% Line 293
		    [{{'first',1},[{'type',293,'bounded_fun',[{'type',293,'fun',[{'type',293,'product',[{'var',293,'Name'}]}|[{'type',293,'union',[{'var',293,'Key'}|[{'atom',293,'$end_of_table'}]]}]]}|[[{'type',294,'constraint',[{'atom',294,'is_subtype'}|[[{'var',294,'Name'}|[{'type',294,'tab_name',[]}]]]]}|[{'type',295,'constraint',[{'atom',295,'is_subtype'}|[[{'var',295,'Key'}|[{'type',295,'term',[]}]]]]}]]]]}]}],
		%% Line 300
		'spec' =
		    %% Line 300
		    [{{'foldr',3},[{'type',300,'bounded_fun',[{'type',300,'fun',[{'type',300,'product',[{'var',300,'Function'}|[{'var',300,'Acc0'}|[{'var',300,'Name'}]]]}|[{'type',300,'union',[{'var',300,'Acc'}|[{'type',300,'tuple',[{'atom',300,'error'}|[{'var',300,'Reason'}]]}]]}]]}|[[{'type',301,'constraint',[{'atom',301,'is_subtype'}|[[{'var',301,'Name'}|[{'type',301,'tab_name',[]}]]]]}|[{'type',302,'constraint',[{'atom',302,'is_subtype'}|[[{'var',302,'Function'}|[{'type',302,'fun',[{'type',302,'product',[{'ann_type',302,[{'var',302,'Object'}|[{'type',302,'object',[]}]]}|[{'var',302,'AccIn'}]]}|[{'var',302,'AccOut'}]]}]]]]}|[{'type',303,'constraint',[{'atom',303,'is_subtype'}|[[{'var',303,'Acc0'}|[{'type',303,'term',[]}]]]]}|[{'type',304,'constraint',[{'atom',304,'is_subtype'}|[[{'var',304,'Acc'}|[{'type',304,'term',[]}]]]]}|[{'type',305,'constraint',[{'atom',305,'is_subtype'}|[[{'var',305,'AccIn'}|[{'type',305,'term',[]}]]]]}|[{'type',306,'constraint',[{'atom',306,'is_subtype'}|[[{'var',306,'AccOut'}|[{'type',306,'term',[]}]]]]}|[{'type',307,'constraint',[{'atom',307,'is_subtype'}|[[{'var',307,'Reason'}|[{'type',307,'term',[]}]]]]}]]]]]]]]]}]}],
		%% Line 312
		'spec' =
		    %% Line 312
		    [{{'foldl',3},[{'type',312,'bounded_fun',[{'type',312,'fun',[{'type',312,'product',[{'var',312,'Function'}|[{'var',312,'Acc0'}|[{'var',312,'Name'}]]]}|[{'type',312,'union',[{'var',312,'Acc'}|[{'type',312,'tuple',[{'atom',312,'error'}|[{'var',312,'Reason'}]]}]]}]]}|[[{'type',313,'constraint',[{'atom',313,'is_subtype'}|[[{'var',313,'Name'}|[{'type',313,'tab_name',[]}]]]]}|[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'Function'}|[{'type',314,'fun',[{'type',314,'product',[{'ann_type',314,[{'var',314,'Object'}|[{'type',314,'object',[]}]]}|[{'var',314,'AccIn'}]]}|[{'var',314,'AccOut'}]]}]]]]}|[{'type',315,'constraint',[{'atom',315,'is_subtype'}|[[{'var',315,'Acc0'}|[{'type',315,'term',[]}]]]]}|[{'type',316,'constraint',[{'atom',316,'is_subtype'}|[[{'var',316,'Acc'}|[{'type',316,'term',[]}]]]]}|[{'type',317,'constraint',[{'atom',317,'is_subtype'}|[[{'var',317,'AccIn'}|[{'type',317,'term',[]}]]]]}|[{'type',318,'constraint',[{'atom',318,'is_subtype'}|[[{'var',318,'AccOut'}|[{'type',318,'term',[]}]]]]}|[{'type',319,'constraint',[{'atom',319,'is_subtype'}|[[{'var',319,'Reason'}|[{'type',319,'term',[]}]]]]}]]]]]]]]]}]}],
		%% Line 325
		'spec' =
		    %% Line 325
		    [{{'from_ets',2},[{'type',325,'bounded_fun',[{'type',325,'fun',[{'type',325,'product',[{'var',325,'Name'}|[{'var',325,'EtsTab'}]]}|[{'type',325,'union',[{'atom',325,'ok'}|[{'type',325,'tuple',[{'atom',325,'error'}|[{'var',325,'Reason'}]]}]]}]]}|[[{'type',326,'constraint',[{'atom',326,'is_subtype'}|[[{'var',326,'Name'}|[{'type',326,'tab_name',[]}]]]]}|[{'type',327,'constraint',[{'atom',327,'is_subtype'}|[[{'var',327,'EtsTab'}|[{'remote_type',327,[{'atom',327,'ets'}|[{'atom',327,'tab'}|[[]]]]}]]]]}|[{'type',328,'constraint',[{'atom',328,'is_subtype'}|[[{'var',328,'Reason'}|[{'type',328,'term',[]}]]]]}]]]]]}]}],
		%% Line 352
		'spec' =
		    %% Line 352
		    [{{'info',1},[{'type',352,'bounded_fun',[{'type',352,'fun',[{'type',352,'product',[{'var',352,'Name'}]}|[{'type',352,'union',[{'var',352,'InfoList'}|[{'atom',352,'undefined'}]]}]]}|[[{'type',353,'constraint',[{'atom',353,'is_subtype'}|[[{'var',353,'Name'}|[{'type',353,'tab_name',[]}]]]]}|[{'type',354,'constraint',[{'atom',354,'is_subtype'}|[[{'var',354,'InfoList'}|[{'type',354,'list',[{'var',354,'InfoTuple'}]}]]]]}|[{'type',355,'constraint',[{'atom',355,'is_subtype'}|[[{'var',355,'InfoTuple'}|[{'type',355,'union',[{'type',355,'tuple',[{'atom',355,'file_size'}|[{'type',355,'non_neg_integer',[]}]]}|[{'type',356,'tuple',[{'atom',356,'filename'}|[{'remote_type',356,[{'atom',356,'file'}|[{'atom',356,'name'}|[[]]]]}]]}|[{'type',357,'tuple',[{'atom',357,'keypos'}|[{'type',357,'keypos',[]}]]}|[{'type',358,'tuple',[{'atom',358,'size'}|[{'type',358,'non_neg_integer',[]}]]}|[{'type',359,'tuple',[{'atom',359,'type'}|[{'type',359,'type',[]}]]}]]]]]}]]]]}]]]]]}]}],
		%% Line 369
		'spec' =
		    %% Line 369
		    [{{'info',2},[{'type',369,'bounded_fun',[{'type',369,'fun',[{'type',369,'product',[{'var',369,'Name'}|[{'var',369,'Item'}]]}|[{'type',369,'union',[{'var',369,'Value'}|[{'atom',369,'undefined'}]]}]]}|[[{'type',370,'constraint',[{'atom',370,'is_subtype'}|[[{'var',370,'Name'}|[{'type',370,'tab_name',[]}]]]]}|[{'type',371,'constraint',[{'atom',371,'is_subtype'}|[[{'var',371,'Item'}|[{'type',371,'union',[{'atom',371,'access'}|[{'atom',371,'auto_save'}|[{'atom',371,'bchunk_format'}|[{'atom',372,'hash'}|[{'atom',372,'file_size'}|[{'atom',372,'filename'}|[{'atom',372,'keypos'}|[{'atom',372,'memory'}|[{'atom',373,'no_keys'}|[{'atom',373,'no_objects'}|[{'atom',373,'no_slots'}|[{'atom',373,'owner'}|[{'atom',373,'ram_file'}|[{'atom',374,'safe_fixed'}|[{'atom',374,'size'}|[{'atom',374,'type'}|[{'atom',374,'version'}]]]]]]]]]]]]]]]]]}]]]]}|[{'type',375,'constraint',[{'atom',375,'is_subtype'}|[[{'var',375,'Value'}|[{'type',375,'term',[]}]]]]}]]]]]}]}],
		%% Line 399
		'spec' =
		    %% Line 399
		    [{{'init_table',2},[{'type',399,'bounded_fun',[{'type',399,'fun',[{'type',399,'product',[{'var',399,'Name'}|[{'var',399,'InitFun'}]]}|[{'type',399,'union',[{'atom',399,'ok'}|[{'type',399,'tuple',[{'atom',399,'error'}|[{'var',399,'Reason'}]]}]]}]]}|[[{'type',400,'constraint',[{'atom',400,'is_subtype'}|[[{'var',400,'Name'}|[{'type',400,'tab_name',[]}]]]]}|[{'type',401,'constraint',[{'atom',401,'is_subtype'}|[[{'var',401,'InitFun'}|[{'type',401,'fun',[{'type',401,'product',[{'var',401,'Arg'}]}|[{'var',401,'Res'}]]}]]]]}|[{'type',402,'constraint',[{'atom',402,'is_subtype'}|[[{'var',402,'Arg'}|[{'type',402,'union',[{'atom',402,'read'}|[{'atom',402,'close'}]]}]]]]}|[{'type',403,'constraint',[{'atom',403,'is_subtype'}|[[{'var',403,'Res'}|[{'type',403,'union',[{'atom',403,'end_of_input'}|[{'type',403,'tuple',[{'type',403,'list',[{'type',403,'object',[]}]}|[{'var',403,'InitFun'}]]}|[{'type',403,'tuple',[{'var',403,'Data'}|[{'var',403,'InitFun'}]]}|[{'type',403,'term',[]}]]]]}]]]]}|[{'type',404,'constraint',[{'atom',404,'is_subtype'}|[[{'var',404,'Reason'}|[{'type',404,'term',[]}]]]]}|[{'type',405,'constraint',[{'atom',405,'is_subtype'}|[[{'var',405,'Data'}|[{'type',405,'union',[{'type',405,'binary',[]}|[{'type',405,'tuple','any'}]]}]]]]}]]]]]]]]}]}],
		%% Line 410
		'spec' =
		    %% Line 410
		    [{{'init_table',3},[{'type',410,'bounded_fun',[{'type',410,'fun',[{'type',410,'product',[{'var',410,'Name'}|[{'var',410,'InitFun'}|[{'var',410,'Options'}]]]}|[{'type',410,'union',[{'atom',410,'ok'}|[{'type',410,'tuple',[{'atom',410,'error'}|[{'var',410,'Reason'}]]}]]}]]}|[[{'type',411,'constraint',[{'atom',411,'is_subtype'}|[[{'var',411,'Name'}|[{'type',411,'tab_name',[]}]]]]}|[{'type',412,'constraint',[{'atom',412,'is_subtype'}|[[{'var',412,'InitFun'}|[{'type',412,'fun',[{'type',412,'product',[{'var',412,'Arg'}]}|[{'var',412,'Res'}]]}]]]]}|[{'type',413,'constraint',[{'atom',413,'is_subtype'}|[[{'var',413,'Arg'}|[{'type',413,'union',[{'atom',413,'read'}|[{'atom',413,'close'}]]}]]]]}|[{'type',414,'constraint',[{'atom',414,'is_subtype'}|[[{'var',414,'Res'}|[{'type',414,'union',[{'atom',414,'end_of_input'}|[{'type',414,'tuple',[{'type',414,'list',[{'type',414,'object',[]}]}|[{'var',414,'InitFun'}]]}|[{'type',414,'tuple',[{'var',414,'Data'}|[{'var',414,'InitFun'}]]}|[{'type',414,'term',[]}]]]]}]]]]}|[{'type',415,'constraint',[{'atom',415,'is_subtype'}|[[{'var',415,'Options'}|[{'type',415,'union',[{'var',415,'Option'}|[{'type',415,'list',[{'var',415,'Option'}]}]]}]]]]}|[{'type',416,'constraint',[{'atom',416,'is_subtype'}|[[{'var',416,'Option'}|[{'type',416,'union',[{'type',416,'tuple',[{'atom',416,'min_no_slots'}|[{'type',416,'no_slots',[]}]]}|[{'type',416,'tuple',[{'atom',416,'format'}|[{'type',416,'union',[{'atom',416,'term'}|[{'atom',416,'bchunk'}]]}]]}]]}]]]]}|[{'type',417,'constraint',[{'atom',417,'is_subtype'}|[[{'var',417,'Reason'}|[{'type',417,'term',[]}]]]]}|[{'type',418,'constraint',[{'atom',418,'is_subtype'}|[[{'var',418,'Data'}|[{'type',418,'union',[{'type',418,'binary',[]}|[{'type',418,'tuple','any'}]]}]]]]}]]]]]]]]]]}]}],
		%% Line 433
		'spec' =
		    %% Line 433
		    [{{'insert',2},[{'type',433,'bounded_fun',[{'type',433,'fun',[{'type',433,'product',[{'var',433,'Name'}|[{'var',433,'Objects'}]]}|[{'type',433,'union',[{'atom',433,'ok'}|[{'type',433,'tuple',[{'atom',433,'error'}|[{'var',433,'Reason'}]]}]]}]]}|[[{'type',434,'constraint',[{'atom',434,'is_subtype'}|[[{'var',434,'Name'}|[{'type',434,'tab_name',[]}]]]]}|[{'type',435,'constraint',[{'atom',435,'is_subtype'}|[[{'var',435,'Objects'}|[{'type',435,'union',[{'type',435,'object',[]}|[{'type',435,'list',[{'type',435,'object',[]}]}]]}]]]]}|[{'type',436,'constraint',[{'atom',436,'is_subtype'}|[[{'var',436,'Reason'}|[{'type',436,'term',[]}]]]]}]]]]]}]}],
		%% Line 443
		'spec' =
		    %% Line 443
		    [{{'insert_new',2},[{'type',443,'bounded_fun',[{'type',443,'fun',[{'type',443,'product',[{'var',443,'Name'}|[{'var',443,'Objects'}]]}|[{'type',443,'union',[{'type',443,'boolean',[]}|[{'type',443,'tuple',[{'atom',443,'error'}|[{'var',443,'Reason'}]]}]]}]]}|[[{'type',444,'constraint',[{'atom',444,'is_subtype'}|[[{'var',444,'Name'}|[{'type',444,'tab_name',[]}]]]]}|[{'type',445,'constraint',[{'atom',445,'is_subtype'}|[[{'var',445,'Objects'}|[{'type',445,'union',[{'type',445,'object',[]}|[{'type',445,'list',[{'type',445,'object',[]}]}]]}]]]]}|[{'type',446,'constraint',[{'atom',446,'is_subtype'}|[[{'var',446,'Reason'}|[{'type',446,'term',[]}]]]]}]]]]]}]}],
		%% Line 459
		'spec' =
		    %% Line 459
		    [{{'is_compatible_bchunk_format',2},[{'type',459,'bounded_fun',[{'type',459,'fun',[{'type',459,'product',[{'var',459,'Name'}|[{'var',459,'BchunkFormat'}]]}|[{'type',459,'boolean',[]}]]}|[[{'type',460,'constraint',[{'atom',460,'is_subtype'}|[[{'var',460,'Name'}|[{'type',460,'tab_name',[]}]]]]}|[{'type',461,'constraint',[{'atom',461,'is_subtype'}|[[{'var',461,'BchunkFormat'}|[{'type',461,'binary',[]}]]]]}]]]]}]}],
		%% Line 466
		'spec' =
		    %% Line 466
		    [{{'is_dets_file',1},[{'type',466,'bounded_fun',[{'type',466,'fun',[{'type',466,'product',[{'var',466,'Filename'}]}|[{'type',466,'union',[{'type',466,'boolean',[]}|[{'type',466,'tuple',[{'atom',466,'error'}|[{'var',466,'Reason'}]]}]]}]]}|[[{'type',467,'constraint',[{'atom',467,'is_subtype'}|[[{'var',467,'Filename'}|[{'remote_type',467,[{'atom',467,'file'}|[{'atom',467,'name'}|[[]]]]}]]]]}|[{'type',468,'constraint',[{'atom',468,'is_subtype'}|[[{'var',468,'Reason'}|[{'type',468,'term',[]}]]]]}]]]]}]}],
		%% Line 483
		'spec' =
		    %% Line 483
		    [{{'lookup',2},[{'type',483,'bounded_fun',[{'type',483,'fun',[{'type',483,'product',[{'var',483,'Name'}|[{'var',483,'Key'}]]}|[{'type',483,'union',[{'var',483,'Objects'}|[{'type',483,'tuple',[{'atom',483,'error'}|[{'var',483,'Reason'}]]}]]}]]}|[[{'type',484,'constraint',[{'atom',484,'is_subtype'}|[[{'var',484,'Name'}|[{'type',484,'tab_name',[]}]]]]}|[{'type',485,'constraint',[{'atom',485,'is_subtype'}|[[{'var',485,'Key'}|[{'type',485,'term',[]}]]]]}|[{'type',486,'constraint',[{'atom',486,'is_subtype'}|[[{'var',486,'Objects'}|[{'type',486,'list',[{'type',486,'object',[]}]}]]]]}|[{'type',487,'constraint',[{'atom',487,'is_subtype'}|[[{'var',487,'Reason'}|[{'type',487,'term',[]}]]]]}]]]]]]}]}],
		%% Line 501
		'spec' =
		    %% Line 501
		    [{{'match',2},[{'type',501,'bounded_fun',[{'type',501,'fun',[{'type',501,'product',[{'var',501,'Name'}|[{'var',501,'Pattern'}]]}|[{'type',501,'union',[{'type',501,'list',[{'var',501,'Match'}]}|[{'type',501,'tuple',[{'atom',501,'error'}|[{'var',501,'Reason'}]]}]]}]]}|[[{'type',502,'constraint',[{'atom',502,'is_subtype'}|[[{'var',502,'Name'}|[{'type',502,'tab_name',[]}]]]]}|[{'type',503,'constraint',[{'atom',503,'is_subtype'}|[[{'var',503,'Pattern'}|[{'type',503,'pattern',[]}]]]]}|[{'type',504,'constraint',[{'atom',504,'is_subtype'}|[[{'var',504,'Match'}|[{'type',504,'list',[{'type',504,'term',[]}]}]]]]}|[{'type',505,'constraint',[{'atom',505,'is_subtype'}|[[{'var',505,'Reason'}|[{'type',505,'term',[]}]]]]}]]]]]]}]}],
		%% Line 510
		'spec' =
		    %% Line 510
		    [{{'match',3},[{'type',510,'bounded_fun',[{'type',510,'fun',[{'type',510,'product',[{'var',510,'Name'}|[{'var',510,'Pattern'}|[{'var',510,'N'}]]]}|[{'type',511,'union',[{'type',511,'tuple',[{'type',511,'list',[{'var',511,'Match'}]}|[{'var',511,'Continuation'}]]}|[{'atom',511,'$end_of_table'}|[{'type',511,'tuple',[{'atom',511,'error'}|[{'var',511,'Reason'}]]}]]]}]]}|[[{'type',512,'constraint',[{'atom',512,'is_subtype'}|[[{'var',512,'Name'}|[{'type',512,'tab_name',[]}]]]]}|[{'type',513,'constraint',[{'atom',513,'is_subtype'}|[[{'var',513,'Pattern'}|[{'type',513,'pattern',[]}]]]]}|[{'type',514,'constraint',[{'atom',514,'is_subtype'}|[[{'var',514,'N'}|[{'type',514,'union',[{'atom',514,'default'}|[{'type',514,'non_neg_integer',[]}]]}]]]]}|[{'type',515,'constraint',[{'atom',515,'is_subtype'}|[[{'var',515,'Continuation'}|[{'type',515,'bindings_cont',[]}]]]]}|[{'type',516,'constraint',[{'atom',516,'is_subtype'}|[[{'var',516,'Match'}|[{'type',516,'list',[{'type',516,'term',[]}]}]]]]}|[{'type',517,'constraint',[{'atom',517,'is_subtype'}|[[{'var',517,'Reason'}|[{'type',517,'term',[]}]]]]}]]]]]]]]}]}],
		%% Line 522
		'spec' =
		    %% Line 522
		    [{{'match',1},[{'type',522,'bounded_fun',[{'type',522,'fun',[{'type',522,'product',[{'var',522,'Continuation'}]}|[{'type',523,'union',[{'type',523,'tuple',[{'type',523,'list',[{'var',523,'Match'}]}|[{'var',523,'Continuation2'}]]}|[{'atom',523,'$end_of_table'}|[{'type',523,'tuple',[{'atom',523,'error'}|[{'var',523,'Reason'}]]}]]]}]]}|[[{'type',524,'constraint',[{'atom',524,'is_subtype'}|[[{'var',524,'Continuation'}|[{'type',524,'bindings_cont',[]}]]]]}|[{'type',525,'constraint',[{'atom',525,'is_subtype'}|[[{'var',525,'Continuation2'}|[{'type',525,'bindings_cont',[]}]]]]}|[{'type',526,'constraint',[{'atom',526,'is_subtype'}|[[{'var',526,'Match'}|[{'type',526,'list',[{'type',526,'term',[]}]}]]]]}|[{'type',527,'constraint',[{'atom',527,'is_subtype'}|[[{'var',527,'Reason'}|[{'type',527,'term',[]}]]]]}]]]]]]}]}],
		%% Line 534
		'spec' =
		    %% Line 534
		    [{{'match_delete',2},[{'type',534,'bounded_fun',[{'type',534,'fun',[{'type',534,'product',[{'var',534,'Name'}|[{'var',534,'Pattern'}]]}|[{'type',534,'union',[{'atom',534,'ok'}|[{'type',534,'tuple',[{'atom',534,'error'}|[{'var',534,'Reason'}]]}]]}]]}|[[{'type',535,'constraint',[{'atom',535,'is_subtype'}|[[{'var',535,'Name'}|[{'type',535,'tab_name',[]}]]]]}|[{'type',536,'constraint',[{'atom',536,'is_subtype'}|[[{'var',536,'Pattern'}|[{'type',536,'pattern',[]}]]]]}|[{'type',537,'constraint',[{'atom',537,'is_subtype'}|[[{'var',537,'Reason'}|[{'type',537,'term',[]}]]]]}]]]]]}]}],
		%% Line 565
		'spec' =
		    %% Line 565
		    [{{'match_object',2},[{'type',565,'bounded_fun',[{'type',565,'fun',[{'type',565,'product',[{'var',565,'Name'}|[{'var',565,'Pattern'}]]}|[{'type',565,'union',[{'var',565,'Objects'}|[{'type',565,'tuple',[{'atom',565,'error'}|[{'var',565,'Reason'}]]}]]}]]}|[[{'type',566,'constraint',[{'atom',566,'is_subtype'}|[[{'var',566,'Name'}|[{'type',566,'tab_name',[]}]]]]}|[{'type',567,'constraint',[{'atom',567,'is_subtype'}|[[{'var',567,'Pattern'}|[{'type',567,'pattern',[]}]]]]}|[{'type',568,'constraint',[{'atom',568,'is_subtype'}|[[{'var',568,'Objects'}|[{'type',568,'list',[{'type',568,'object',[]}]}]]]]}|[{'type',569,'constraint',[{'atom',569,'is_subtype'}|[[{'var',569,'Reason'}|[{'type',569,'term',[]}]]]]}]]]]]]}]}],
		%% Line 574
		'spec' =
		    %% Line 574
		    [{{'match_object',3},[{'type',574,'bounded_fun',[{'type',574,'fun',[{'type',574,'product',[{'var',574,'Name'}|[{'var',574,'Pattern'}|[{'var',574,'N'}]]]}|[{'type',575,'union',[{'type',575,'tuple',[{'var',575,'Objects'}|[{'var',575,'Continuation'}]]}|[{'atom',575,'$end_of_table'}|[{'type',575,'tuple',[{'atom',575,'error'}|[{'var',575,'Reason'}]]}]]]}]]}|[[{'type',576,'constraint',[{'atom',576,'is_subtype'}|[[{'var',576,'Name'}|[{'type',576,'tab_name',[]}]]]]}|[{'type',577,'constraint',[{'atom',577,'is_subtype'}|[[{'var',577,'Pattern'}|[{'type',577,'pattern',[]}]]]]}|[{'type',578,'constraint',[{'atom',578,'is_subtype'}|[[{'var',578,'N'}|[{'type',578,'union',[{'atom',578,'default'}|[{'type',578,'non_neg_integer',[]}]]}]]]]}|[{'type',579,'constraint',[{'atom',579,'is_subtype'}|[[{'var',579,'Continuation'}|[{'type',579,'object_cont',[]}]]]]}|[{'type',580,'constraint',[{'atom',580,'is_subtype'}|[[{'var',580,'Objects'}|[{'type',580,'list',[{'type',580,'object',[]}]}]]]]}|[{'type',581,'constraint',[{'atom',581,'is_subtype'}|[[{'var',581,'Reason'}|[{'type',581,'term',[]}]]]]}]]]]]]]]}]}],
		%% Line 586
		'spec' =
		    %% Line 586
		    [{{'match_object',1},[{'type',586,'bounded_fun',[{'type',586,'fun',[{'type',586,'product',[{'var',586,'Continuation'}]}|[{'type',587,'union',[{'type',587,'tuple',[{'var',587,'Objects'}|[{'var',587,'Continuation2'}]]}|[{'atom',587,'$end_of_table'}|[{'type',587,'tuple',[{'atom',587,'error'}|[{'var',587,'Reason'}]]}]]]}]]}|[[{'type',588,'constraint',[{'atom',588,'is_subtype'}|[[{'var',588,'Continuation'}|[{'type',588,'object_cont',[]}]]]]}|[{'type',589,'constraint',[{'atom',589,'is_subtype'}|[[{'var',589,'Continuation2'}|[{'type',589,'object_cont',[]}]]]]}|[{'type',590,'constraint',[{'atom',590,'is_subtype'}|[[{'var',590,'Objects'}|[{'type',590,'list',[{'type',590,'object',[]}]}]]]]}|[{'type',591,'constraint',[{'atom',591,'is_subtype'}|[[{'var',591,'Reason'}|[{'type',591,'term',[]}]]]]}]]]]]]}]}],
		%% Line 598
		'spec' =
		    %% Line 598
		    [{{'member',2},[{'type',598,'bounded_fun',[{'type',598,'fun',[{'type',598,'product',[{'var',598,'Name'}|[{'var',598,'Key'}]]}|[{'type',598,'union',[{'type',598,'boolean',[]}|[{'type',598,'tuple',[{'atom',598,'error'}|[{'var',598,'Reason'}]]}]]}]]}|[[{'type',599,'constraint',[{'atom',599,'is_subtype'}|[[{'var',599,'Name'}|[{'type',599,'tab_name',[]}]]]]}|[{'type',600,'constraint',[{'atom',600,'is_subtype'}|[[{'var',600,'Key'}|[{'type',600,'term',[]}]]]]}|[{'type',601,'constraint',[{'atom',601,'is_subtype'}|[[{'var',601,'Reason'}|[{'type',601,'term',[]}]]]]}]]]]]}]}],
		%% Line 606
		'spec' =
		    %% Line 606
		    [{{'next',2},[{'type',606,'bounded_fun',[{'type',606,'fun',[{'type',606,'product',[{'var',606,'Name'}|[{'var',606,'Key1'}]]}|[{'type',606,'union',[{'var',606,'Key2'}|[{'atom',606,'$end_of_table'}]]}]]}|[[{'type',607,'constraint',[{'atom',607,'is_subtype'}|[[{'var',607,'Name'}|[{'type',607,'tab_name',[]}]]]]}|[{'type',608,'constraint',[{'atom',608,'is_subtype'}|[[{'var',608,'Key1'}|[{'type',608,'term',[]}]]]]}|[{'type',609,'constraint',[{'atom',609,'is_subtype'}|[[{'var',609,'Key2'}|[{'type',609,'term',[]}]]]]}]]]]]}]}],
		%% Line 614
		'spec' =
		    %% Line 614
		    [{{'open_file',1},[{'type',614,'bounded_fun',[{'type',614,'fun',[{'type',614,'product',[{'var',614,'Filename'}]}|[{'type',614,'union',[{'type',614,'tuple',[{'atom',614,'ok'}|[{'var',614,'Reference'}]]}|[{'type',614,'tuple',[{'atom',614,'error'}|[{'var',614,'Reason'}]]}]]}]]}|[[{'type',615,'constraint',[{'atom',615,'is_subtype'}|[[{'var',615,'Filename'}|[{'remote_type',615,[{'atom',615,'file'}|[{'atom',615,'name'}|[[]]]]}]]]]}|[{'type',616,'constraint',[{'atom',616,'is_subtype'}|[[{'var',616,'Reference'}|[{'type',616,'reference',[]}]]]]}|[{'type',617,'constraint',[{'atom',617,'is_subtype'}|[[{'var',617,'Reason'}|[{'type',617,'term',[]}]]]]}]]]]]}]}],
		%% Line 630
		'spec' =
		    %% Line 630
		    [{{'open_file',2},[{'type',630,'bounded_fun',[{'type',630,'fun',[{'type',630,'product',[{'var',630,'Name'}|[{'var',630,'Args'}]]}|[{'type',630,'union',[{'type',630,'tuple',[{'atom',630,'ok'}|[{'var',630,'Name'}]]}|[{'type',630,'tuple',[{'atom',630,'error'}|[{'var',630,'Reason'}]]}]]}]]}|[[{'type',631,'constraint',[{'atom',631,'is_subtype'}|[[{'var',631,'Name'}|[{'type',631,'tab_name',[]}]]]]}|[{'type',632,'constraint',[{'atom',632,'is_subtype'}|[[{'var',632,'Args'}|[{'type',632,'list',[{'var',632,'OpenArg'}]}]]]]}|[{'type',633,'constraint',[{'atom',633,'is_subtype'}|[[{'var',633,'OpenArg'}|[{'type',633,'union',[{'type',633,'tuple',[{'atom',633,'access'}|[{'type',633,'access',[]}]]}|[{'type',634,'tuple',[{'atom',634,'auto_save'}|[{'type',634,'auto_save',[]}]]}|[{'type',635,'tuple',[{'atom',635,'estimated_no_objects'}|[{'type',635,'non_neg_integer',[]}]]}|[{'type',636,'tuple',[{'atom',636,'file'}|[{'remote_type',636,[{'atom',636,'file'}|[{'atom',636,'name'}|[[]]]]}]]}|[{'type',637,'tuple',[{'atom',637,'max_no_slots'}|[{'type',637,'no_slots',[]}]]}|[{'type',638,'tuple',[{'atom',638,'min_no_slots'}|[{'type',638,'no_slots',[]}]]}|[{'type',639,'tuple',[{'atom',639,'keypos'}|[{'type',639,'keypos',[]}]]}|[{'type',640,'tuple',[{'atom',640,'ram_file'}|[{'type',640,'boolean',[]}]]}|[{'type',641,'tuple',[{'atom',641,'repair'}|[{'type',641,'union',[{'type',641,'boolean',[]}|[{'atom',641,'force'}]]}]]}|[{'type',642,'tuple',[{'atom',642,'type'}|[{'type',642,'type',[]}]]}|[{'type',643,'tuple',[{'atom',643,'version'}|[{'type',643,'version',[]}]]}]]]]]]]]]]]}]]]]}|[{'type',644,'constraint',[{'atom',644,'is_subtype'}|[[{'var',644,'Reason'}|[{'type',644,'term',[]}]]]]}]]]]]]}]}],
		%% Line 661
		'spec' =
		    %% Line 661
		    [{{'pid2name',1},[{'type',661,'bounded_fun',[{'type',661,'fun',[{'type',661,'product',[{'var',661,'Pid'}]}|[{'type',661,'union',[{'type',661,'tuple',[{'atom',661,'ok'}|[{'var',661,'Name'}]]}|[{'atom',661,'undefined'}]]}]]}|[[{'type',662,'constraint',[{'atom',662,'is_subtype'}|[[{'var',662,'Pid'}|[{'type',662,'pid',[]}]]]]}|[{'type',663,'constraint',[{'atom',663,'is_subtype'}|[[{'var',663,'Name'}|[{'type',663,'tab_name',[]}]]]]}]]]]}]}],
		%% Line 671
		'spec' =
		    %% Line 671
		    [{{'repair_continuation',2},[{'type',671,'bounded_fun',[{'type',671,'fun',[{'type',671,'product',[{'var',671,'Continuation'}|[{'var',671,'MatchSpec'}]]}|[{'var',671,'Continuation2'}]]}|[[{'type',672,'constraint',[{'atom',672,'is_subtype'}|[[{'var',672,'Continuation'}|[{'type',672,'select_cont',[]}]]]]}|[{'type',673,'constraint',[{'atom',673,'is_subtype'}|[[{'var',673,'Continuation2'}|[{'type',673,'select_cont',[]}]]]]}|[{'type',674,'constraint',[{'atom',674,'is_subtype'}|[[{'var',674,'MatchSpec'}|[{'type',674,'match_spec',[]}]]]]}]]]]]}]}],
		%% Line 689
		'spec' =
		    %% Line 689
		    [{{'safe_fixtable',2},[{'type',689,'bounded_fun',[{'type',689,'fun',[{'type',689,'product',[{'var',689,'Name'}|[{'var',689,'Fix'}]]}|[{'atom',689,'ok'}]]}|[[{'type',690,'constraint',[{'atom',690,'is_subtype'}|[[{'var',690,'Name'}|[{'type',690,'tab_name',[]}]]]]}|[{'type',691,'constraint',[{'atom',691,'is_subtype'}|[[{'var',691,'Fix'}|[{'type',691,'boolean',[]}]]]]}]]]]}]}],
		%% Line 698
		'spec' =
		    %% Line 698
		    [{{'select',2},[{'type',698,'bounded_fun',[{'type',698,'fun',[{'type',698,'product',[{'var',698,'Name'}|[{'var',698,'MatchSpec'}]]}|[{'type',698,'union',[{'var',698,'Selection'}|[{'type',698,'tuple',[{'atom',698,'error'}|[{'var',698,'Reason'}]]}]]}]]}|[[{'type',699,'constraint',[{'atom',699,'is_subtype'}|[[{'var',699,'Name'}|[{'type',699,'tab_name',[]}]]]]}|[{'type',700,'constraint',[{'atom',700,'is_subtype'}|[[{'var',700,'MatchSpec'}|[{'type',700,'match_spec',[]}]]]]}|[{'type',701,'constraint',[{'atom',701,'is_subtype'}|[[{'var',701,'Selection'}|[{'type',701,'list',[{'type',701,'term',[]}]}]]]]}|[{'type',702,'constraint',[{'atom',702,'is_subtype'}|[[{'var',702,'Reason'}|[{'type',702,'term',[]}]]]]}]]]]]]}]}],
		%% Line 707
		'spec' =
		    %% Line 707
		    [{{'select',3},[{'type',707,'bounded_fun',[{'type',707,'fun',[{'type',707,'product',[{'var',707,'Name'}|[{'var',707,'MatchSpec'}|[{'var',707,'N'}]]]}|[{'type',708,'union',[{'type',708,'tuple',[{'var',708,'Selection'}|[{'var',708,'Continuation'}]]}|[{'atom',708,'$end_of_table'}|[{'type',708,'tuple',[{'atom',708,'error'}|[{'var',708,'Reason'}]]}]]]}]]}|[[{'type',709,'constraint',[{'atom',709,'is_subtype'}|[[{'var',709,'Name'}|[{'type',709,'tab_name',[]}]]]]}|[{'type',710,'constraint',[{'atom',710,'is_subtype'}|[[{'var',710,'MatchSpec'}|[{'type',710,'match_spec',[]}]]]]}|[{'type',711,'constraint',[{'atom',711,'is_subtype'}|[[{'var',711,'N'}|[{'type',711,'union',[{'atom',711,'default'}|[{'type',711,'non_neg_integer',[]}]]}]]]]}|[{'type',712,'constraint',[{'atom',712,'is_subtype'}|[[{'var',712,'Continuation'}|[{'type',712,'select_cont',[]}]]]]}|[{'type',713,'constraint',[{'atom',713,'is_subtype'}|[[{'var',713,'Selection'}|[{'type',713,'list',[{'type',713,'term',[]}]}]]]]}|[{'type',714,'constraint',[{'atom',714,'is_subtype'}|[[{'var',714,'Reason'}|[{'type',714,'term',[]}]]]]}]]]]]]]]}]}],
		%% Line 719
		'spec' =
		    %% Line 719
		    [{{'select',1},[{'type',719,'bounded_fun',[{'type',719,'fun',[{'type',719,'product',[{'var',719,'Continuation'}]}|[{'type',720,'union',[{'type',720,'tuple',[{'var',720,'Selection'}|[{'var',720,'Continuation2'}]]}|[{'atom',720,'$end_of_table'}|[{'type',720,'tuple',[{'atom',720,'error'}|[{'var',720,'Reason'}]]}]]]}]]}|[[{'type',721,'constraint',[{'atom',721,'is_subtype'}|[[{'var',721,'Continuation'}|[{'type',721,'select_cont',[]}]]]]}|[{'type',722,'constraint',[{'atom',722,'is_subtype'}|[[{'var',722,'Continuation2'}|[{'type',722,'select_cont',[]}]]]]}|[{'type',723,'constraint',[{'atom',723,'is_subtype'}|[[{'var',723,'Selection'}|[{'type',723,'list',[{'type',723,'term',[]}]}]]]]}|[{'type',724,'constraint',[{'atom',724,'is_subtype'}|[[{'var',724,'Reason'}|[{'type',724,'term',[]}]]]]}]]]]]]}]}],
		%% Line 731
		'spec' =
		    %% Line 731
		    [{{'select_delete',2},[{'type',731,'bounded_fun',[{'type',731,'fun',[{'type',731,'product',[{'var',731,'Name'}|[{'var',731,'MatchSpec'}]]}|[{'type',731,'union',[{'var',731,'N'}|[{'type',731,'tuple',[{'atom',731,'error'}|[{'var',731,'Reason'}]]}]]}]]}|[[{'type',732,'constraint',[{'atom',732,'is_subtype'}|[[{'var',732,'Name'}|[{'type',732,'tab_name',[]}]]]]}|[{'type',733,'constraint',[{'atom',733,'is_subtype'}|[[{'var',733,'MatchSpec'}|[{'type',733,'match_spec',[]}]]]]}|[{'type',734,'constraint',[{'atom',734,'is_subtype'}|[[{'var',734,'N'}|[{'type',734,'non_neg_integer',[]}]]]]}|[{'type',735,'constraint',[{'atom',735,'is_subtype'}|[[{'var',735,'Reason'}|[{'type',735,'term',[]}]]]]}]]]]]]}]}],
		%% Line 740
		'spec' =
		    %% Line 740
		    [{{'slot',2},[{'type',740,'bounded_fun',[{'type',740,'fun',[{'type',740,'product',[{'var',740,'Name'}|[{'var',740,'I'}]]}|[{'type',740,'union',[{'atom',740,'$end_of_table'}|[{'var',740,'Objects'}|[{'type',740,'tuple',[{'atom',740,'error'}|[{'var',740,'Reason'}]]}]]]}]]}|[[{'type',741,'constraint',[{'atom',741,'is_subtype'}|[[{'var',741,'Name'}|[{'type',741,'tab_name',[]}]]]]}|[{'type',742,'constraint',[{'atom',742,'is_subtype'}|[[{'var',742,'I'}|[{'type',742,'non_neg_integer',[]}]]]]}|[{'type',743,'constraint',[{'atom',743,'is_subtype'}|[[{'var',743,'Objects'}|[{'type',743,'list',[{'type',743,'object',[]}]}]]]]}|[{'type',744,'constraint',[{'atom',744,'is_subtype'}|[[{'var',744,'Reason'}|[{'type',744,'term',[]}]]]]}]]]]]]}]}],
		%% Line 760
		'spec' =
		    %% Line 760
		    [{{'sync',1},[{'type',760,'bounded_fun',[{'type',760,'fun',[{'type',760,'product',[{'var',760,'Name'}]}|[{'type',760,'union',[{'atom',760,'ok'}|[{'type',760,'tuple',[{'atom',760,'error'}|[{'var',760,'Reason'}]]}]]}]]}|[[{'type',761,'constraint',[{'atom',761,'is_subtype'}|[[{'var',761,'Name'}|[{'type',761,'tab_name',[]}]]]]}|[{'type',762,'constraint',[{'atom',762,'is_subtype'}|[[{'var',762,'Reason'}|[{'type',762,'term',[]}]]]]}]]]]}]}],
		%% Line 767
		'spec' =
		    %% Line 767
		    [{{'table',1},[{'type',767,'bounded_fun',[{'type',767,'fun',[{'type',767,'product',[{'var',767,'Name'}]}|[{'var',767,'QueryHandle'}]]}|[[{'type',768,'constraint',[{'atom',768,'is_subtype'}|[[{'var',768,'Name'}|[{'type',768,'tab_name',[]}]]]]}|[{'type',769,'constraint',[{'atom',769,'is_subtype'}|[[{'var',769,'QueryHandle'}|[{'remote_type',769,[{'atom',769,'qlc'}|[{'atom',769,'query_handle'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 774
		'spec' =
		    %% Line 774
		    [{{'table',2},[{'type',774,'bounded_fun',[{'type',774,'fun',[{'type',774,'product',[{'var',774,'Name'}|[{'var',774,'Options'}]]}|[{'var',774,'QueryHandle'}]]}|[[{'type',775,'constraint',[{'atom',775,'is_subtype'}|[[{'var',775,'Name'}|[{'type',775,'tab_name',[]}]]]]}|[{'type',776,'constraint',[{'atom',776,'is_subtype'}|[[{'var',776,'Options'}|[{'type',776,'union',[{'var',776,'Option'}|[{'type',776,'list',[{'var',776,'Option'}]}]]}]]]]}|[{'type',777,'constraint',[{'atom',777,'is_subtype'}|[[{'var',777,'Option'}|[{'type',777,'union',[{'type',777,'tuple',[{'atom',777,'n_objects'}|[{'var',777,'Limit'}]]}|[{'type',778,'tuple',[{'atom',778,'traverse'}|[{'var',778,'TraverseMethod'}]]}]]}]]]]}|[{'type',779,'constraint',[{'atom',779,'is_subtype'}|[[{'var',779,'Limit'}|[{'type',779,'union',[{'atom',779,'default'}|[{'type',779,'pos_integer',[]}]]}]]]]}|[{'type',780,'constraint',[{'atom',780,'is_subtype'}|[[{'var',780,'TraverseMethod'}|[{'type',780,'union',[{'atom',780,'first_next'}|[{'atom',780,'select'}|[{'type',780,'tuple',[{'atom',780,'select'}|[{'type',780,'match_spec',[]}]]}]]]}]]]]}|[{'type',781,'constraint',[{'atom',781,'is_subtype'}|[[{'var',781,'QueryHandle'}|[{'remote_type',781,[{'atom',781,'qlc'}|[{'atom',781,'query_handle'}|[[]]]]}]]]]}]]]]]]]]}]}],
		%% Line 860
		'spec' =
		    %% Line 860
		    [{{'to_ets',2},[{'type',860,'bounded_fun',[{'type',860,'fun',[{'type',860,'product',[{'var',860,'Name'}|[{'var',860,'EtsTab'}]]}|[{'type',860,'union',[{'var',860,'EtsTab'}|[{'type',860,'tuple',[{'atom',860,'error'}|[{'var',860,'Reason'}]]}]]}]]}|[[{'type',861,'constraint',[{'atom',861,'is_subtype'}|[[{'var',861,'Name'}|[{'type',861,'tab_name',[]}]]]]}|[{'type',862,'constraint',[{'atom',862,'is_subtype'}|[[{'var',862,'EtsTab'}|[{'remote_type',862,[{'atom',862,'ets'}|[{'atom',862,'tab'}|[[]]]]}]]]]}|[{'type',863,'constraint',[{'atom',863,'is_subtype'}|[[{'var',863,'Reason'}|[{'type',863,'term',[]}]]]]}]]]]]}]}],
		%% Line 874
		'spec' =
		    %% Line 874
		    [{{'traverse',2},[{'type',874,'bounded_fun',[{'type',874,'fun',[{'type',874,'product',[{'var',874,'Name'}|[{'var',874,'Fun'}]]}|[{'type',874,'union',[{'var',874,'Return'}|[{'type',874,'tuple',[{'atom',874,'error'}|[{'var',874,'Reason'}]]}]]}]]}|[[{'type',875,'constraint',[{'atom',875,'is_subtype'}|[[{'var',875,'Name'}|[{'type',875,'tab_name',[]}]]]]}|[{'type',876,'constraint',[{'atom',876,'is_subtype'}|[[{'var',876,'Fun'}|[{'type',876,'fun',[{'type',876,'product',[{'var',876,'Object'}]}|[{'var',876,'FunReturn'}]]}]]]]}|[{'type',877,'constraint',[{'atom',877,'is_subtype'}|[[{'var',877,'Object'}|[{'type',877,'object',[]}]]]]}|[{'type',878,'constraint',[{'atom',878,'is_subtype'}|[[{'var',878,'FunReturn'}|[{'type',878,'union',[{'atom',878,'continue'}|[{'type',879,'tuple',[{'atom',879,'continue'}|[{'var',879,'Val'}]]}|[{'type',880,'tuple',[{'atom',880,'done'}|[{'var',880,'Value'}]]}|[{'var',881,'OtherValue'}]]]]}]]]]}|[{'type',882,'constraint',[{'atom',882,'is_subtype'}|[[{'var',882,'Return'}|[{'type',882,'union',[{'type',882,'list',[{'type',882,'term',[]}]}|[{'var',882,'OtherValue'}]]}]]]]}|[{'type',883,'constraint',[{'atom',883,'is_subtype'}|[[{'var',883,'Val'}|[{'type',883,'term',[]}]]]]}|[{'type',884,'constraint',[{'atom',884,'is_subtype'}|[[{'var',884,'Value'}|[{'type',884,'term',[]}]]]]}|[{'type',885,'constraint',[{'atom',885,'is_subtype'}|[[{'var',885,'OtherValue'}|[{'type',885,'term',[]}]]]]}|[{'type',886,'constraint',[{'atom',886,'is_subtype'}|[[{'var',886,'Reason'}|[{'type',886,'term',[]}]]]]}]]]]]]]]]]]}]}],
		%% Line 905
		'spec' =
		    %% Line 905
		    [{{'update_counter',3},[{'type',905,'bounded_fun',[{'type',905,'fun',[{'type',905,'product',[{'var',905,'Name'}|[{'var',905,'Key'}|[{'var',905,'Increment'}]]]}|[{'var',905,'Result'}]]}|[[{'type',906,'constraint',[{'atom',906,'is_subtype'}|[[{'var',906,'Name'}|[{'type',906,'tab_name',[]}]]]]}|[{'type',907,'constraint',[{'atom',907,'is_subtype'}|[[{'var',907,'Key'}|[{'type',907,'term',[]}]]]]}|[{'type',908,'constraint',[{'atom',908,'is_subtype'}|[[{'var',908,'Increment'}|[{'type',908,'union',[{'type',908,'tuple',[{'var',908,'Pos'}|[{'var',908,'Incr'}]]}|[{'var',908,'Incr'}]]}]]]]}|[{'type',909,'constraint',[{'atom',909,'is_subtype'}|[[{'var',909,'Pos'}|[{'type',909,'integer',[]}]]]]}|[{'type',910,'constraint',[{'atom',910,'is_subtype'}|[[{'var',910,'Incr'}|[{'type',910,'integer',[]}]]]]}|[{'type',911,'constraint',[{'atom',911,'is_subtype'}|[[{'var',911,'Result'}|[{'type',911,'integer',[]}]]]]}]]]]]]]]}]}]]
'add_user'/3 =
    %% Line 210
    fun (_cor2,_cor1,_cor0) ->
	%% Line 211
	apply 'req'/2
	    (_cor2, {'add_user',_cor1,_cor0})
'all'/0 =
    %% Line 215
    fun () ->
	%% Line 216
	call 'dets_server':'all'
	    ()
'bchunk'/2 =
    %% Line 226
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Tab,'start'> when 'true' ->
	      let <_cor2> =
		  %% Line 227
		  apply 'treq'/2
		      (Tab, {'bchunk_init',Tab})
	      in  let <_cor0> =
		      %% Line 227
		      [Tab|['start']]
		  in  %% Line 1263
		      ( case <_cor2,( _cor0
				      -| ['compiler_generated'] )> of
			  ( <( 'badarg'
			       -| ['compiler_generated'] ),( A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1264
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( 'badarg'
					 -| ['compiler_generated'] ), ( A
									-| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1265
			  ( <( Reply
			       -| ['compiler_generated'] ),( _X_A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1266
				( Reply
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 228
	  <Tab,State = {'dets_cont','bchunk',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11}>
	      when call 'erlang':'=:='
		    (_cor9,
		     Tab) ->
	      let <_cor3> =
		  %% Line 229
		  apply 'treq'/2
		      (Tab, {'bchunk',State})
	      in  let <_cor0> =
		      %% Line 229
		      [Tab|[State|[]]]
		  in  %% Line 1263
		      ( case <_cor3,( _cor0
				      -| ['compiler_generated'] )> of
			  ( <( 'badarg'
			       -| ['compiler_generated'] ),( A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1264
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( 'badarg'
					 -| ['compiler_generated'] ), ( A
									-| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1265
			  ( <( Reply
			       -| ['compiler_generated'] ),( _X_A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1266
				( Reply
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 230
	  <Tab,Term> when 'true' ->
	      %% Line 231
	      call 'erlang':'error'
		  ('badarg', [Tab|[Term|[]]])
	end
'close'/1 =
    %% Line 237
    fun (_cor0) ->
	%% Line 238
	case call 'dets_server':'close'
		 (_cor0) of
	  %% Line 239
	  <'badarg'> when 'true' ->
	      %% Line 240
	      {'error','not_owner'}
	  %% Line 241
	  <Reply> when 'true' ->
	      %% Line 242
	      Reply
	end
'delete'/2 =
    %% Line 250
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 251
	    apply 'treq'/2
		(_cor1, {'delete_key',[_cor0|[]]})
	in  let <_fol6> =
		%% Line 251
		[_cor1|[_cor0|[]]]
	    in  %% Line 1263
		( case <_cor2,_fol6> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'delete_all_objects'/1 =
    %% Line 257
    fun (_cor0) ->
	%% Line 258
	case apply 'treq'/2
		 (_cor0, 'delete_all_objects') of
	  %% Line 259
	  <'badarg'> when 'true' ->
	      %% Line 260
	      call 'erlang':'error'
		  ('badarg', [_cor0|[]])
	  %% Line 261
	  <'fixed'> when 'true' ->
	      %% Line 262
	      apply 'match_delete'/2
		  (_cor0, '_')
	  %% Line 263
	  <Reply> when 'true' ->
	      %% Line 264
	      Reply
	end
'delete_object'/2 =
    %% Line 272
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 273
	    apply 'treq'/2
		(_cor1, {'delete_object',[_cor0|[]]})
	in  let <_fol10> =
		%% Line 273
		[_cor1|[_cor0|[]]]
	    in  %% Line 1263
		( case <_cor2,_fol10> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'fsck'/1 =
    %% Line 276
    fun (_cor0) ->
	%% Line 277
	apply 'fsck'/2
	    (_cor0, 'default')
'fsck'/2 =
    %% Line 279
    fun (_cor1,_cor0) ->
	catch
	    %% Line 281
	    case apply 'read_file_header'/3
		     (_cor1, 'read', 'false') of
	      <{'ok',Fd,FH}> when 'true' ->
		  %% Line 283
		  ( case FH of
		      ( <( {'fileheader',_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_rec0}
			   -| ['compiler_generated'] )> when 'true' ->
			    case call _rec0:'check_file_header'
				     (FH, Fd) of
			      %% Line 284
			      <{'error','not_closed'}> when 'true' ->
				  let <_cor5> =
				      %% Line 285
				      call 'erlang':'make_ref'
					  ()
				  in  %% Line 285
				      apply 'fsck'/7
					  (Fd, _cor5, _cor1, FH, 'default', 'default', _cor0)
			      %% Line 286
			      <{'ok',_X_Head,_X_Extra}> when 'true' ->
				  let <_cor6> =
				      %% Line 287
				      call 'erlang':'make_ref'
					  ()
				  in  %% Line 287
				      apply 'fsck'/7
					  (Fd, _cor6, _cor1, FH, 'default', 'default', _cor0)
			      %% Line 288
			      <Error> when 'true' ->
				  %% Line 289
				  Error
			    end
			-| ['compiler_generated'] )
		      ( <_cor31> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','fileheader'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor2})
		-| ['compiler_generated'] )
	    end
'first'/1 =
    %% Line 297
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 298
	    apply 'treq'/2
		(_cor0, 'first')
	in  let <_fol15> =
		%% Line 298
		[_cor0|[]]
	    in  %% Line 1275
		( case <_cor1,_fol15> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1276
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1277
		    ( <( {( 'ok'
			    -| ['compiler_generated'] ),( Reply
							  -| ['compiler_generated'] )}
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1278
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1279
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1280
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'exit'
								 -| ['compiler_generated'] )
				(( Reply
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'foldr'/3 =
    %% Line 309
    fun (_cor2,_cor1,_cor0) ->
	%% Line 310
	apply 'foldl'/3
	    (_cor2, _cor1, _cor0)
'foldl'/3 =
    %% Line 321
    fun (_cor2,_cor1,_cor0) ->
	let <Ref> =
	    %% Line 322
	    call 'erlang':'make_ref'
		()
	in  let <_cor4> =
		%% Line 323
		apply 'do_traverse'/4
		    (_cor2, _cor1, _cor0, Ref)
	    in  let <_fol22> =
		    %% Line 323
		    [_cor2|[_cor1|[_cor0|[]]]]
		in  %% Line 1263
		    ( case <_cor4,_fol22> of
			( <( 'badarg'
			     -| ['compiler_generated'] ),( A
							   -| ['compiler_generated'] )> when ( 'true'
											       -| ['compiler_generated'] ) ->
			      %% Line 1264
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( 'badarg'
				       -| ['compiler_generated'] ), ( A
								      -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			%% Line 1265
			( <( Reply
			     -| ['compiler_generated'] ),( _X_A
							   -| ['compiler_generated'] )> when ( 'true'
											       -| ['compiler_generated'] ) ->
			      %% Line 1266
			      ( Reply
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
'from_ets'/2 =
    %% Line 330
    fun (_cor1,_cor0) ->
	do  %% Line 331
	    call 'ets':'safe_fixtable'
		(_cor0, 'true')
	    let <LC> =
		%% Line 333
		call 'ets':'select'
		    (_cor0, [{'_',[],['$_']}], 100)
	    in  let <InitFun> =
		    %% Line 334
		    apply 'from_ets_fun'/2
			(LC, _cor0)
		in  let <Reply> =
			%% Line 335
			apply 'treq'/2
			    (_cor1, {'initialize',InitFun,'term','default'})
		    in  do  %% Line 336
			    call 'ets':'safe_fixtable'
				(_cor0, 'false')
			    %% Line 337
			    case Reply of
			      %% Line 338
			      <{'thrown',Thrown}> when 'true' ->
				  call 'erlang':'throw'
				      (Thrown)
			      %% Line 339
			      <Else> when 'true' ->
				  let <_fol25> =
				      [_cor1|[_cor0|[]]]
				  in  %% Line 1263
				      ( case <Else,_fol25> of
					  ( <( 'badarg'
					       -| ['compiler_generated'] ),( A
									     -| ['compiler_generated'] )> when ( 'true'
														 -| ['compiler_generated'] ) ->
						%% Line 1264
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( 'badarg'
							 -| ['compiler_generated'] ), ( A
											-| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  %% Line 1265
					  ( <( Reply
					       -| ['compiler_generated'] ),( _X_A
									     -| ['compiler_generated'] )> when ( 'true'
														 -| ['compiler_generated'] ) ->
						%% Line 1266
						( Reply
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
			    end
'from_ets_fun'/2 =
    %% Line 342
    fun (_cor1,_cor0) ->
	%% Line 343
	( fun (_cor5) ->
	      case _cor5 of
		<'close'> when 'true' ->
		    %% Line 344
		    'ok'
		%% Line 345
		<'read'>
		    when call 'erlang':'=:='
			  (_cor1,
			   '$end_of_table') ->
		    %% Line 346
		    'end_of_input'
		%% Line 347
		<'read'> when 'true' ->
		    %% Line 348
		    case _cor1 of
		      <{L,C}> when 'true' ->
			  let <_cor3> =
			      %% Line 349
			      call 'ets':'select'
				  (C)
			  in  let <_cor4> =
				  %% Line 349
				  apply 'from_ets_fun'/2
				      (_cor3, _cor0)
			      in  %% Line 349
				  {L,_cor4}
		      ( <_cor2> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor2})
			-| ['compiler_generated'] )
		    end
		( <_cor6> when 'true' ->
		      ( primop 'match_fail'
			    ({'function_clause',_cor6})
			-| [{'function_name',{'-from_ets_fun/2-fun-0-',1}}] )
		  -| ['compiler_generated'] )
	      end
	  -| [{'id',{0,0,'-from_ets_fun/2-fun-0-'}}] )
'info'/1 =
    %% Line 361
    fun (_cor0) ->
	let <_cor1> =
	    catch
		%% Line 362
		call 'dets_server':'get_pid'
		    (_cor0)
	in  %% Line 362
	    case _cor1 of
	      %% Line 363
	      <{'EXIT',_X_Reason}> when 'true' ->
		  %% Line 364
		  'undefined'
	      %% Line 365
	      <Pid> when 'true' ->
		  %% Line 1269
		  ( case apply 'req'/2
			     (Pid, 'info') of
		      ( <( 'badarg'
			   -| ['compiler_generated'] )> when ( 'true'
							       -| ['compiler_generated'] ) ->
			    %% Line 1270
			    ( 'undefined'
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		      %% Line 1271
		      ( <( Reply
			   -| ['compiler_generated'] )> when ( 'true'
							       -| ['compiler_generated'] ) ->
			    %% Line 1272
			    ( Reply
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	    end
'info'/2 =
    %% Line 377
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Tab,'owner'> when 'true' ->
	      let <_cor2> =
		  catch
		      %% Line 378
		      call 'dets_server':'get_pid'
			  (Tab)
	      in  %% Line 378
		  case _cor2 of
		    %% Line 379
		    <Pid>
			when call 'erlang':'is_pid'
			      (_cor2) ->
			%% Line 380
			Pid
		    %% Line 381
		    <_cor10> when 'true' ->
			%% Line 382
			'undefined'
		  end
	  %% Line 384
	  <Tab,'users'> when 'true' ->
	      %% Line 385
	      case call 'dets_server':'users'
		       (Tab) of
		%% Line 386
		<[]> when 'true' ->
		    %% Line 387
		    'undefined'
		%% Line 388
		<Users> when 'true' ->
		    %% Line 389
		    Users
	      end
	  %% Line 391
	  <Tab,Tag> when 'true' ->
	      let <_cor5> =
		  catch
		      %% Line 392
		      call 'dets_server':'get_pid'
			  (Tab)
	      in  %% Line 392
		  case _cor5 of
		    %% Line 393
		    <{'EXIT',_X_Reason}> when 'true' ->
			%% Line 394
			'undefined'
		    %% Line 395
		    <Pid> when 'true' ->
			%% Line 1269
			( case apply 'req'/2
				   (Pid, {'info',Tag}) of
			    ( <( 'badarg'
				 -| ['compiler_generated'] )> when ( 'true'
								     -| ['compiler_generated'] ) ->
				  %% Line 1270
				  ( 'undefined'
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    %% Line 1271
			    ( <( Reply
				 -| ['compiler_generated'] )> when ( 'true'
								     -| ['compiler_generated'] ) ->
				  %% Line 1272
				  ( Reply
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		  end
	end
'init_table'/2 =
    %% Line 407
    fun (_cor1,_cor0) ->
	%% Line 408
	apply 'init_table'/3
	    (_cor1, _cor0, [])
'init_table'/3 =
    %% Line 420
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Tab,InitFun,Options>
	      when call 'erlang':'is_function'
		    (InitFun) ->
	      %% Line 421
	      case apply 'options'/2
		       (Options, ['format'|['min_no_slots']]) of
		%% Line 422
		<{'badarg',_cor8}> when 'true' ->
		    %% Line 423
		    call 'erlang':'error'
			('badarg', [Tab|[InitFun|[Options|[]]]])
		%% Line 424
		<[Format|[MinNoSlots|[]]]> when 'true' ->
		    %% Line 425
		    case apply 'treq'/2
			     (Tab, {'initialize',InitFun,Format,MinNoSlots}) of
		      %% Line 426
		      <{'thrown',Thrown}> when 'true' ->
			  call 'erlang':'throw'
			      (Thrown)
		      %% Line 427
		      <Else> when 'true' ->
			  let <_cor0> =
			      [Tab|[InitFun|[Options|[]]]]
			  in  %% Line 1263
			      ( case <Else,( _cor0
					     -| ['compiler_generated'] )> of
				  ( <( 'badarg'
				       -| ['compiler_generated'] ),( A
								     -| ['compiler_generated'] )> when ( 'true'
													 -| ['compiler_generated'] ) ->
					%% Line 1264
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( 'badarg'
						 -| ['compiler_generated'] ), ( A
										-| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  %% Line 1265
				  ( <( Reply
				       -| ['compiler_generated'] ),( _X_A
								     -| ['compiler_generated'] )> when ( 'true'
													 -| ['compiler_generated'] ) ->
					%% Line 1266
					( Reply
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
		    end
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 430
	  <Tab,InitFun,Options> when 'true' ->
	      %% Line 431
	      call 'erlang':'error'
		  ('badarg', [Tab|[InitFun|[Options|[]]]])
	end
'insert'/2 =
    %% Line 438
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Tab,Objs>
	      when call 'erlang':'is_list'
		    (Objs) ->
	      let <_cor2> =
		  %% Line 439
		  apply 'treq'/2
		      (Tab, {'insert',Objs})
	      in  let <_cor0> =
		      %% Line 439
		      [Tab|[Objs|[]]]
		  in  %% Line 1263
		      ( case <_cor2,( _cor0
				      -| ['compiler_generated'] )> of
			  ( <( 'badarg'
			       -| ['compiler_generated'] ),( A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1264
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( 'badarg'
					 -| ['compiler_generated'] ), ( A
									-| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1265
			  ( <( Reply
			       -| ['compiler_generated'] ),( _X_A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1266
				( Reply
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 440
	  <Tab,Obj> when 'true' ->
	      let <_cor3> =
		  %% Line 441
		  apply 'treq'/2
		      (Tab, {'insert',[Obj|[]]})
	      in  let <_cor0> =
		      %% Line 441
		      [Tab|[Obj|[]]]
		  in  %% Line 1263
		      ( case <_cor3,( _cor0
				      -| ['compiler_generated'] )> of
			  ( <( 'badarg'
			       -| ['compiler_generated'] ),( A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1264
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( 'badarg'
					 -| ['compiler_generated'] ), ( A
									-| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1265
			  ( <( Reply
			       -| ['compiler_generated'] ),( _X_A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1266
				( Reply
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	end
'insert_new'/2 =
    %% Line 448
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Tab,Objs>
	      when call 'erlang':'is_list'
		    (Objs) ->
	      let <_cor2> =
		  %% Line 449
		  apply 'treq'/2
		      (Tab, {'insert_new',Objs})
	      in  let <_cor0> =
		      %% Line 449
		      [Tab|[Objs|[]]]
		  in  %% Line 1263
		      ( case <_cor2,( _cor0
				      -| ['compiler_generated'] )> of
			  ( <( 'badarg'
			       -| ['compiler_generated'] ),( A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1264
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( 'badarg'
					 -| ['compiler_generated'] ), ( A
									-| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1265
			  ( <( Reply
			       -| ['compiler_generated'] ),( _X_A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1266
				( Reply
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 450
	  <Tab,Obj> when 'true' ->
	      let <_cor3> =
		  %% Line 451
		  apply 'treq'/2
		      (Tab, {'insert_new',[Obj|[]]})
	      in  let <_cor0> =
		      %% Line 451
		      [Tab|[Obj|[]]]
		  in  %% Line 1263
		      ( case <_cor3,( _cor0
				      -| ['compiler_generated'] )> of
			  ( <( 'badarg'
			       -| ['compiler_generated'] ),( A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1264
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( 'badarg'
					 -| ['compiler_generated'] ), ( A
									-| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1265
			  ( <( Reply
			       -| ['compiler_generated'] ),( _X_A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1266
				( Reply
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	end
'internal_close'/1 =
    %% Line 453
    fun (_cor0) ->
	%% Line 454
	apply 'req'/2
	    (_cor0, 'close')
'internal_open'/3 =
    %% Line 456
    fun (_cor2,_cor1,_cor0) ->
	%% Line 457
	apply 'req'/2
	    (_cor2, {'internal_open',_cor1,_cor0})
'is_compatible_bchunk_format'/2 =
    %% Line 463
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 464
	    apply 'treq'/2
		(_cor1, {'is_compatible_bchunk_format',_cor0})
	in  let <_fol37> =
		%% Line 464
		[_cor1|[_cor0|[]]]
	    in  %% Line 1263
		( case <_cor2,_fol37> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'is_dets_file'/1 =
    %% Line 470
    fun (_cor0) ->
	let <_cor1> =
	    catch
		%% Line 471
		apply 'read_file_header'/3
		    (_cor0, 'read', 'false')
	in  %% Line 471
	    case _cor1 of
	      %% Line 472
	      <{'ok',Fd,FH}> when 'true' ->
		  let <_X_> =
		      %% Line 473
		      ( call 'file':'close'
			    (Fd)
			-| ['result_not_wanted'] )
		  in  %% Line 474
		      ( case FH of
			  ( <( {'fileheader',_cor7,_cor8,_rec1,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27}
			       -| ['compiler_generated'] )> when 'true' ->
				call 'erlang':'=:='
				    (_rec1, 11259375)
			    -| ['compiler_generated'] )
			  ( <_cor28> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','fileheader'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	      %% Line 475
	      <{'error',{'tooshort',_cor29}}> when 'true' ->
		  %% Line 476
		  'false'
	      %% Line 477
	      <{'error',{'not_a_dets_file',_cor30}}> when 'true' ->
		  %% Line 478
		  'false'
	      %% Line 479
	      <Other> when 'true' ->
		  %% Line 480
		  Other
	    end
'lookup'/2 =
    %% Line 489
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 490
	    apply 'treq'/2
		(_cor1, {'lookup_keys',[_cor0|[]]})
	in  let <_fol41> =
		%% Line 490
		[_cor1|[_cor0|[]]]
	    in  %% Line 1263
		( case <_cor2,_fol41> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'lookup_keys'/2 =
    %% Line 493
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    catch
		%% Line 494
		call 'lists':'usort'
		    (_cor0)
	in  %% Line 494
	    case _cor2 of
	      %% Line 495
	      <UKeys>
		  when let <_cor3> =
			call 'erlang':'is_list'
			    (_cor2)
		    in  let <_cor4> =
			    call 'erlang':'=/='
				(_cor2, [])
			in  call 'erlang':'and'
				(_cor3, _cor4) ->
		  let <_cor5> =
		      %% Line 496
		      apply 'treq'/2
			  (_cor1, {'lookup_keys',UKeys})
		  in  let <_fol44> =
			  %% Line 496
			  [_cor1|[_cor0|[]]]
		      in  %% Line 1263
			  ( case <_cor5,_fol44> of
			      ( <( 'badarg'
				   -| ['compiler_generated'] ),( A
								 -| ['compiler_generated'] )> when ( 'true'
												     -| ['compiler_generated'] ) ->
				    %% Line 1264
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( 'badarg'
					     -| ['compiler_generated'] ), ( A
									    -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      %% Line 1265
			      ( <( Reply
				   -| ['compiler_generated'] ),( _X_A
								 -| ['compiler_generated'] )> when ( 'true'
												     -| ['compiler_generated'] ) ->
				    %% Line 1266
				    ( Reply
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
	      %% Line 497
	      <_X_Else> when 'true' ->
		  %% Line 498
		  call 'erlang':'error'
		      ('badarg', [_cor1|[_cor0|[]]])
	    end
'match'/2 =
    %% Line 507
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 508
	    apply 'safe_match'/3
		(_cor1, _cor0, 'bindings')
	in  let <_fol47> =
		%% Line 508
		[_cor1|[_cor0|[]]]
	    in  %% Line 1263
		( case <_cor2,_fol47> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'match'/3 =
    %% Line 519
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 520
	    apply 'init_chunk_match'/5
		(_cor2, _cor1, 'bindings', _cor0, 'no_safe')
	in  let <_fol51> =
		%% Line 520
		[_cor2|[_cor1|[_cor0|[]]]]
	    in  %% Line 1263
		( case <_cor3,_fol51> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'match'/1 =
    %% Line 529
    fun (_cor0) ->
	case _cor0 of
	  <State = {'dets_cont',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15}>
	      when call 'erlang':'=:='
		    (_cor9,
		     'bindings') ->
	      let <_cor7> =
		  %% Line 530
		  apply 'chunk_match'/2
		      (State, 'no_safe')
	      in  let <_cor0> =
		      %% Line 530
		      [State|[]]
		  in  %% Line 1263
		      ( case <_cor7,( _cor0
				      -| ['compiler_generated'] )> of
			  ( <( 'badarg'
			       -| ['compiler_generated'] ),( A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1264
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( 'badarg'
					 -| ['compiler_generated'] ), ( A
									-| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1265
			  ( <( Reply
			       -| ['compiler_generated'] ),( _X_A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1266
				( Reply
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 531
	  <Term> when 'true' ->
	      %% Line 532
	      call 'erlang':'error'
		  ('badarg', [Term|[]])
	end
'match_delete'/2 =
    %% Line 539
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 540
	    apply 'match_delete'/3
		(_cor1, _cor0, 'delete')
	in  let <_fol54> =
		%% Line 540
		[_cor1|[_cor0|[]]]
	    in  %% Line 1263
		( case <_cor2,_fol54> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'match_delete'/3 =
    %% Line 542
    fun (_cor2,_cor1,_cor0) ->
	%% Line 543
	case apply 'compile_match_spec'/2
		 (_cor0, _cor1) of
	  %% Line 544
	  <{Spec,MP}> when 'true' ->
	      let <_cor3> =
		  catch
		      %% Line 545
		      call 'dets_server':'get_pid'
			  (_cor2)
	      in  %% Line 545
		  case _cor3 of
		    %% Line 546
		    <{'EXIT',_X_Reason}> when 'true' ->
			%% Line 547
			'badarg'
		    %% Line 548
		    <Proc> when 'true' ->
			let <R> =
			    %% Line 549
			    apply 'req'/2
				(Proc, {'match_delete_init',MP,Spec})
			in  %% Line 550
			    apply 'do_match_delete'/4
				(Proc, R, _cor0, 0)
		  end
	  %% Line 552
	  <'badarg'> when 'true' ->
	      %% Line 553
	      'badarg'
	  ( <_cor6> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor6})
	    -| ['compiler_generated'] )
	end
'do_match_delete'/4 =
    %% Line 556
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_Proc,{'done',N1},'select',N> when 'true' ->
	      %% Line 557
	      call 'erlang':'+'
		  (N, N1)
	  %% Line 558
	  <_X_Proc,{'done',_X_N1},_X_What,_X_N> when 'true' ->
	      %% Line 559
	      'ok'
	  %% Line 560
	  <Proc,{'cont',State,N1},What,N> when 'true' ->
	      let <_cor5> =
		  %% Line 561
		  apply 'req'/2
		      (Proc, {'match_delete',State})
	      in  let <_cor4> =
		      %% Line 561
		      call 'erlang':'+'
			  (N, N1)
		  in  %% Line 561
		      apply 'do_match_delete'/4
			  (Proc, _cor5, What, _cor4)
	  %% Line 562
	  <_X_Proc,Error,_X_What,_X_N> when 'true' ->
	      %% Line 563
	      Error
	end
'match_object'/2 =
    %% Line 571
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 572
	    apply 'safe_match'/3
		(_cor1, _cor0, 'object')
	in  let <_fol60> =
		%% Line 572
		[_cor1|[_cor0|[]]]
	    in  %% Line 1263
		( case <_cor2,_fol60> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'match_object'/3 =
    %% Line 583
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 584
	    apply 'init_chunk_match'/5
		(_cor2, _cor1, 'object', _cor0, 'no_safe')
	in  let <_fol64> =
		%% Line 584
		[_cor2|[_cor1|[_cor0|[]]]]
	    in  %% Line 1263
		( case <_cor3,_fol64> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'match_object'/1 =
    %% Line 593
    fun (_cor0) ->
	case _cor0 of
	  <State = {'dets_cont',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15}>
	      when call 'erlang':'=:='
		    (_cor9,
		     'object') ->
	      let <_cor7> =
		  %% Line 594
		  apply 'chunk_match'/2
		      (State, 'no_safe')
	      in  let <_cor0> =
		      %% Line 594
		      [State|[]]
		  in  %% Line 1263
		      ( case <_cor7,( _cor0
				      -| ['compiler_generated'] )> of
			  ( <( 'badarg'
			       -| ['compiler_generated'] ),( A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1264
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( 'badarg'
					 -| ['compiler_generated'] ), ( A
									-| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1265
			  ( <( Reply
			       -| ['compiler_generated'] ),( _X_A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1266
				( Reply
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 595
	  <Term> when 'true' ->
	      %% Line 596
	      call 'erlang':'error'
		  ('badarg', [Term|[]])
	end
'member'/2 =
    %% Line 603
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 604
	    apply 'treq'/2
		(_cor1, {'member',_cor0})
	in  let <_fol67> =
		%% Line 604
		[_cor1|[_cor0|[]]]
	    in  %% Line 1263
		( case <_cor2,_fol67> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'next'/2 =
    %% Line 611
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 612
	    apply 'treq'/2
		(_cor1, {'next',_cor0})
	in  let <_fol70> =
		%% Line 612
		[_cor1|[_cor0|[]]]
	    in  %% Line 1275
		( case <_cor2,_fol70> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1276
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1277
		    ( <( {( 'ok'
			    -| ['compiler_generated'] ),( Reply
							  -| ['compiler_generated'] )}
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1278
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1279
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1280
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'exit'
								 -| ['compiler_generated'] )
				(( Reply
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'open_file'/1 =
    %% Line 622
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 623
	    apply 'to_list'/1
		(_cor0)
	in  %% Line 623
	    case call 'dets_server':'open_file'
		     (_cor1) of
	      %% Line 624
	      <'badarg'> when 'true' ->
		  %% Line 625
		  call 'erlang':'error'
		      ('dets_process_died', [_cor0|[]])
	      %% Line 626
	      <Reply> when 'true' ->
		  let <_fol73> =
		      %% Line 627
		      [_cor0|[]]
		  in  %% Line 1255
		      ( case <Reply,_fol73> of
			  ( <( {( 'error'
				  -| ['compiler_generated'] ),( {( 'file_error'
								   -| ['compiler_generated'] ),( _cor4
												 -| ['compiler_generated'] ),( 'einval'
															       -| ['compiler_generated'] )}
								-| ['compiler_generated'] )}
			       -| ['compiler_generated'] ),( A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1256
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( 'badarg'
					 -| ['compiler_generated'] ), ( A
									-| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1257
			  ( <( {( 'error'
				  -| ['compiler_generated'] ),( {( 'file_error'
								   -| ['compiler_generated'] ),( _cor5
												 -| ['compiler_generated'] ),( 'badarg'
															       -| ['compiler_generated'] )}
								-| ['compiler_generated'] )}
			       -| ['compiler_generated'] ),( A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1258
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( 'badarg'
					 -| ['compiler_generated'] ), ( A
									-| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1259
			  ( <_fol71,( _X_A
				      -| ['compiler_generated'] )> when ( 'true'
									  -| ['compiler_generated'] ) ->
				_fol71
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	    end
'open_file'/2 =
    %% Line 646
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Tab,Args>
	      when call 'erlang':'is_list'
		    (Args) ->
	      let <_cor2> =
		  catch
		      %% Line 647
		      apply 'defaults'/2
			  (Tab, Args)
	      in  %% Line 647
		  case _cor2 of
		    %% Line 648
		    <OpenArgs = {'open_args',_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18}> when ( 'true'
																       -| ['compiler_generated'] ) ->
			%% Line 649
			case call 'dets_server':'open_file'
				 (Tab, OpenArgs) of
			  %% Line 650
			  <'badarg'> when 'true' ->
			      %% Line 651
			      call 'erlang':'error'
				  ('dets_process_died', [Tab|[Args|[]]])
			  %% Line 652
			  <Reply> when 'true' ->
			      let <_cor0> =
				  %% Line 653
				  [Tab|[Args|[]]]
			      in  %% Line 1255
				  ( case <Reply,( _cor0
						  -| ['compiler_generated'] )> of
				      ( <( {( 'error'
					      -| ['compiler_generated'] ),( {( 'file_error'
									       -| ['compiler_generated'] ),( _cor4
													     -| ['compiler_generated'] ),( 'einval'
																	   -| ['compiler_generated'] )}
									    -| ['compiler_generated'] )}
					   -| ['compiler_generated'] ),( A
									 -| ['compiler_generated'] )> when ( 'true'
													     -| ['compiler_generated'] ) ->
					    %% Line 1256
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( 'badarg'
						     -| ['compiler_generated'] ), ( A
										    -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      %% Line 1257
				      ( <( {( 'error'
					      -| ['compiler_generated'] ),( {( 'file_error'
									       -| ['compiler_generated'] ),( _cor5
													     -| ['compiler_generated'] ),( 'badarg'
																	   -| ['compiler_generated'] )}
									    -| ['compiler_generated'] )}
					   -| ['compiler_generated'] ),( A
									 -| ['compiler_generated'] )> when ( 'true'
													     -| ['compiler_generated'] ) ->
					    %% Line 1258
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( 'badarg'
						     -| ['compiler_generated'] ), ( A
										    -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      %% Line 1259
				      ( <_fol74,( _X_A
						  -| ['compiler_generated'] )> when ( 'true'
										      -| ['compiler_generated'] ) ->
					    _fol74
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			end
		    %% Line 655
		    <_cor19> when 'true' ->
			%% Line 656
			call 'erlang':'error'
			    ('badarg', [Tab|[Args|[]]])
		  end
	  %% Line 658
	  <Tab,Arg> when 'true' ->
	      %% Line 659
	      apply 'open_file'/2
		  (Tab, [Arg|[]])
	end
'pid2name'/1 =
    %% Line 665
    fun (_cor0) ->
	%% Line 666
	call 'dets_server':'pid2name'
	    (_cor0)
'remove_user'/2 =
    %% Line 668
    fun (_cor1,_cor0) ->
	%% Line 669
	apply 'req'/2
	    (_cor1, {'close',_cor0})
'repair_continuation'/2 =
    %% Line 676
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Cont = {'dets_cont',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,B},MS>
	      when %% Line 677
		call 'erlang':'is_binary'
		    (B) ->
	      %% Line 678
	      case call 'ets':'is_compiled_ms'
		       (B) of
		%% Line 679
		<'true'> when 'true' ->
		    %% Line 680
		    Cont
		%% Line 681
		<'false'> when 'true' ->
		    let <_rec2> =
			%% Line 682
			call 'ets':'match_spec_compile'
			    (MS)
		    in  %% Line 682
			call 'erlang':'setelement'
			    (8, Cont, _rec2)
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 684
	  <Cont = {'dets_cont',_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28},_X_MS> when 'true' ->
	      %% Line 685
	      Cont
	  %% Line 686
	  <T,MS> when 'true' ->
	      %% Line 687
	      call 'erlang':'error'
		  ('badarg', [T|[MS|[]]])
	end
'safe_fixtable'/2 =
    %% Line 693
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Tab,Bool>
	      when let <_cor2> =
		    call 'erlang':'=:='
			(Bool, 'true')
		in  let <_cor3> =
			call 'erlang':'=:='
			    (Bool, 'false')
		    in  let <_cor4> =
			    call 'erlang':'is_boolean'
				(Bool)
			in  let <_cor5> =
				call 'erlang':'and'
				    (_cor3, _cor4)
			    in  call 'erlang':'or'
				    (_cor2, _cor5) ->
	      let <_cor6> =
		  %% Line 694
		  apply 'treq'/2
		      (Tab, {'safe_fixtable',Bool})
	      in  let <_cor0> =
		      %% Line 694
		      [Tab|[Bool|[]]]
		  in  %% Line 1263
		      ( case <_cor6,( _cor0
				      -| ['compiler_generated'] )> of
			  ( <( 'badarg'
			       -| ['compiler_generated'] ),( A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1264
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( 'badarg'
					 -| ['compiler_generated'] ), ( A
									-| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1265
			  ( <( Reply
			       -| ['compiler_generated'] ),( _X_A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1266
				( Reply
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 695
	  <Tab,Term> when 'true' ->
	      %% Line 696
	      call 'erlang':'error'
		  ('badarg', [Tab|[Term|[]]])
	end
'select'/2 =
    %% Line 704
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 705
	    apply 'safe_match'/3
		(_cor1, _cor0, 'select')
	in  let <_fol103> =
		%% Line 705
		[_cor1|[_cor0|[]]]
	    in  %% Line 1263
		( case <_cor2,_fol103> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'select'/3 =
    %% Line 716
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 717
	    apply 'init_chunk_match'/5
		(_cor2, _cor1, 'select', _cor0, 'no_safe')
	in  let <_fol107> =
		%% Line 717
		[_cor2|[_cor1|[_cor0|[]]]]
	    in  %% Line 1263
		( case <_cor3,_fol107> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'select'/1 =
    %% Line 726
    fun (_cor0) ->
	case _cor0 of
	  <State = {'dets_cont',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15}>
	      when call 'erlang':'=:='
		    (_cor9,
		     'select') ->
	      let <_cor7> =
		  %% Line 727
		  apply 'chunk_match'/2
		      (State, 'no_safe')
	      in  let <_cor0> =
		      %% Line 727
		      [State|[]]
		  in  %% Line 1263
		      ( case <_cor7,( _cor0
				      -| ['compiler_generated'] )> of
			  ( <( 'badarg'
			       -| ['compiler_generated'] ),( A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1264
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( 'badarg'
					 -| ['compiler_generated'] ), ( A
									-| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1265
			  ( <( Reply
			       -| ['compiler_generated'] ),( _X_A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1266
				( Reply
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 728
	  <Term> when 'true' ->
	      %% Line 729
	      call 'erlang':'error'
		  ('badarg', [Term|[]])
	end
'select_delete'/2 =
    %% Line 737
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 738
	    apply 'match_delete'/3
		(_cor1, _cor0, 'select')
	in  let <_fol110> =
		%% Line 738
		[_cor1|[_cor0|[]]]
	    in  %% Line 1263
		( case <_cor2,_fol110> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'slot'/2 =
    %% Line 746
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Tab,Slot>
	      when let <_cor2> =
		    call 'erlang':'is_integer'
			(Slot)
		in  let <_cor3> =
			call 'erlang':'>='
			    (Slot, 0)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      let <_cor4> =
		  %% Line 747
		  apply 'treq'/2
		      (Tab, {'slot',Slot})
	      in  let <_cor0> =
		      %% Line 747
		      [Tab|[Slot|[]]]
		  in  %% Line 1263
		      ( case <_cor4,( _cor0
				      -| ['compiler_generated'] )> of
			  ( <( 'badarg'
			       -| ['compiler_generated'] ),( A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1264
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( 'badarg'
					 -| ['compiler_generated'] ), ( A
									-| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  %% Line 1265
			  ( <( Reply
			       -| ['compiler_generated'] ),( _X_A
							     -| ['compiler_generated'] )> when ( 'true'
												 -| ['compiler_generated'] ) ->
				%% Line 1266
				( Reply
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 748
	  <Tab,Term> when 'true' ->
	      %% Line 749
	      call 'erlang':'error'
		  ('badarg', [Tab|[Term|[]]])
	end
'start'/0 =
    %% Line 751
    fun () ->
	%% Line 752
	call 'dets_server':'start'
	    ()
'stop'/0 =
    %% Line 754
    fun () ->
	%% Line 755
	call 'dets_server':'stop'
	    ()
'istart_link'/1 =
    %% Line 757
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 758
	    call 'erlang':'self'
		()
	in  let <_cor2> =
		%% Line 758
		call 'proc_lib':'spawn_link'
		    ('dets', 'init', [_cor1|[_cor0|[]]])
	    in  %% Line 758
		{'ok',_cor2}
'sync'/1 =
    %% Line 764
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 765
	    apply 'treq'/2
		(_cor0, 'sync')
	in  let <_fol113> =
		%% Line 765
		[_cor0|[]]
	    in  %% Line 1263
		( case <_cor1,_fol113> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'table'/1 =
    %% Line 771
    fun (_cor0) ->
	%% Line 772
	apply 'table'/2
	    (_cor0, [])
'table'/2 =
    %% Line 783
    fun (_cor1,_cor0) ->
	%% Line 784
	case apply 'options'/2
		 (_cor0, ['traverse'|['n_objects']]) of
	  %% Line 785
	  <{'badarg',_cor45}> when 'true' ->
	      %% Line 786
	      call 'erlang':'error'
		  ('badarg', [_cor1|[_cor0|[]]])
	  %% Line 787
	  <[Traverse|[NObjs|[]]]> when 'true' ->
	      let <_cor8> =
		  %% Line 788
		  case Traverse of
		    %% Line 789
		    <'first_next'> when 'true' ->
			%% Line 790
			( fun () ->
			      let <_cor2> =
				  apply 'first'/1
				      (_cor1)
			      in  apply 'qlc_next'/2
				      (_cor1, _cor2)
			  -| [{'id',{0,0,'-table/2-fun-0-'}}] )
		    %% Line 791
		    <'select'> when 'true' ->
			%% Line 792
			( fun (_cor4) ->
			      let <_cor3> =
				  apply 'select'/3
				      (_cor1, _cor4, NObjs)
			      in  apply 'qlc_select'/1
				      (_cor3)
			  -| [{'id',{0,0,'-table/2-fun-1-'}}] )
		    %% Line 793
		    <{'select',MS}> when 'true' ->
			%% Line 794
			( fun () ->
			      let <_cor6> =
				  apply 'select'/3
				      (_cor1, MS, NObjs)
			      in  apply 'qlc_select'/1
				      (_cor6)
			  -| [{'id',{0,0,'-table/2-fun-2-'}}] )
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor7})
		      -| ['compiler_generated'] )
		  end
	      in  let <PreFun> =
		      %% Line 796
		      ( fun (_cor10) ->
			    apply 'safe_fixtable'/2
				(_cor1, 'true')
			-| [{'id',{0,0,'-table/2-fun-3-'}}] )
		  in  let <PostFun> =
			  %% Line 797
			  ( fun () ->
				apply 'safe_fixtable'/2
				    (_cor1, 'false')
			    -| [{'id',{0,0,'-table/2-fun-4-'}}] )
		      in  let <InfoFun> =
			      %% Line 798
			      ( fun (_cor14) ->
				    apply 'table_info'/2
					(_cor1, _cor14)
				-| [{'id',{0,0,'-table/2-fun-5-'}}] )
			  in  let <_cor22> =
				  %% Line 801
				  case Traverse of
				    %% Line 802
				    <{'select',_X_MS}> when 'true' ->
					%% Line 803
					'undefined'
				    %% Line 804
				    <_cor47> when 'true' ->
					%% Line 805
					( fun (_cor18,_cor17) ->
					      case <_cor18,_cor17> of
						<_X_KeyPos,[K|[]]> when 'true' ->
						    apply 'lookup'/2
							(_cor1, K)
						%% Line 806
						<_X_KeyPos,Ks> when 'true' ->
						    apply 'lookup_keys'/2
							(_cor1, Ks)
					      end
					  -| [{'id',{0,0,'-table/2-fun-6-'}}] )
				  end
			      in  let <FormatFun> =
				      %% Line 810
				      ( fun (_cor39) ->
					    case _cor39 of
					      <{'all',_X_NElements,_X_ElementFun}> when 'true' ->
						  let <_cor28> =
						      %% Line 811
						      ( letrec
							    'lc$^0'/1 =
								fun (_cor26) ->
								    case _cor26 of
								      <[_cor48|_cor25]>
									  when call 'erlang':'=/='
										(_cor0,
										 []) ->
									  let <_cor27> =
									      apply 'lc$^0'/1
										  (_cor25)
									  in  ( [_cor0|_cor27]
										-| ['compiler_generated'] )
								      ( <[_cor49|_cor25]> when 'true' ->
									    apply 'lc$^0'/1
										(_cor25)
									-| ['compiler_generated'] )
								      <[]> when 'true' ->
									  []
								      ( <_cor26> when 'true' ->
									    ( primop 'match_fail'
										  ({'function_clause',_cor26})
									      -| [{'function_name',{'lc$^0',1}}] )
									-| ['compiler_generated'] )
								    end
							in  apply 'lc$^0'/1
								([[]])
							-| ['list_comprehension'] )
						  in  let <As> =
							  %% Line 811
							  [_cor1|_cor28]
						      in  %% Line 812
							  {'dets','table',As}
					      %% Line 813
					      <{'match_spec',MS}> when 'true' ->
						  let <_cor30> =
						      %% Line 815
						      apply 'listify'/1
							  (_cor0)
						  in  %% Line 814
						      {'dets','table',[_cor1|[[{'traverse',{'select',MS}}|_cor30]|%% Line 815
														  []]]}
					      %% Line 816
					      <{'lookup',_X_KeyPos,[Value|[]],_X_NElements,ElementFun}> when 'true' ->
						  let <_cor31> =
						      %% Line 818
						      apply ElementFun
							  (Value)
						  in  %% Line 817
						      call 'io_lib':'format'
							  ([126|[119|[58|[108|[111|[111|[107|[117|[112|[40|[126|[119|[44|[32|[126|[119|[41]]]]]]]]]]]]]]]]], %% Line 818
																			     ['dets'|[_cor1|[_cor31|[]]]])
					      %% Line 819
					      <{'lookup',_X_KeyPos,Values,_X_NElements,ElementFun}> when 'true' ->
						  let <_cor37> =
						      %% Line 820
						      ( letrec
							    'lc$^1'/1 =
								fun (_cor34) ->
								    case _cor34 of
								      <[V|_cor33]> when 'true' ->
									  let <_cor35> =
									      apply ElementFun
										  (V)
									  in  let <_cor36> =
										  apply 'lc$^1'/1
										      (_cor33)
									      in  ( [_cor35|_cor36]
										    -| ['compiler_generated'] )
								      <[]> when 'true' ->
									  []
								      ( <_cor34> when 'true' ->
									    ( primop 'match_fail'
										  ({'function_clause',_cor34})
									      -| [{'function_name',{'lc$^1',1}}] )
									-| ['compiler_generated'] )
								    end
							in  apply 'lc$^1'/1
								(Values)
							-| ['list_comprehension'] )
						  in  %% Line 821
						      call 'io_lib':'format'
							  ([108|[105|[115|[116|[115|[58|[102|[108|[97|[116|[109|[97|[112|[40|[102|[117|[110|[40|[86|[41|[32|[45|[62|[32|[126|[119|[58|[108|[111|[111|[107|[117|[112|[40|[126|[119|[44|[32|[86|[41|[32|[101|[110|[100|[44|[32|[126|[119|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 823
																																									     ['dets'|[_cor1|[_cor37|[]]]])
					      ( <_cor40> when 'true' ->
						    ( primop 'match_fail'
							  ({'function_clause',_cor40})
						      -| [{'function_name',{'-table/2-fun-7-',1}}] )
						-| ['compiler_generated'] )
					    end
					-| [{'id',{0,0,'-table/2-fun-7-'}}] )
				  in  %% Line 825
				      call 'qlc':'table'
					  (_cor8, [{'pre_fun',PreFun}|[{'post_fun',PostFun}|%% Line 826
											    [{'info_fun',InfoFun}|[{'format_fun',FormatFun}|%% Line 827
																	    [{'key_equality','=:='}|%% Line 828
																				    [{'lookup_fun',_cor22}|[]]]]]]])
	  ( <_cor42> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor42})
	    -| ['compiler_generated'] )
	end
'qlc_next'/2 =
    %% Line 831
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Tab,'$end_of_table'> when 'true' ->
	      %% Line 832
	      []
	  %% Line 833
	  <Tab,Key> when 'true' ->
	      %% Line 834
	      case apply 'lookup'/2
		       (Tab, Key) of
		%% Line 835
		<Objects>
		    when call 'erlang':'is_list'
			  (Objects) ->
		    let <_cor3> =
			%% Line 836
			( fun () ->
			      let <_cor2> =
				  apply 'next'/2
				      (Tab, Key)
			      in  apply 'qlc_next'/2
				      (Tab, _cor2)
			  -| [{'id',{0,0,'-qlc_next/2-fun-0-'}}] )
		    in  %% Line 836
			call 'erlang':'++'
			    (Objects, _cor3)
		%% Line 837
		<Error> when 'true' ->
		    %% Line 839
		    call 'erlang':'exit'
			(Error)
	      end
	end
'qlc_select'/1 =
    %% Line 842
    fun (_cor0) ->
	case _cor0 of
	  <'$end_of_table'> when 'true' ->
	      %% Line 843
	      []
	  %% Line 844
	  <{Objects,Cont}>
	      when call 'erlang':'is_list'
		    (Objects) ->
	      let <_cor2> =
		  %% Line 845
		  ( fun () ->
			let <_cor1> =
			    apply 'select'/1
				(Cont)
			in  apply 'qlc_select'/1
				(_cor1)
		    -| [{'id',{0,0,'-qlc_select/1-fun-0-'}}] )
	      in  %% Line 845
		  call 'erlang':'++'
		      (Objects, _cor2)
	  %% Line 846
	  <Error> when 'true' ->
	      %% Line 847
	      Error
	end
'table_info'/2 =
    %% Line 849
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Tab,'num_of_objects'> when 'true' ->
	      %% Line 850
	      apply 'info'/2
		  (Tab, 'size')
	  %% Line 851
	  <Tab,'keypos'> when 'true' ->
	      %% Line 852
	      apply 'info'/2
		  (Tab, 'keypos')
	  %% Line 853
	  <Tab,'is_unique_objects'> when 'true' ->
	      let <_cor2> =
		  %% Line 854
		  apply 'info'/2
		      (Tab, 'type')
	      in  %% Line 854
		  call 'erlang':'=/='
		      (_cor2, 'duplicate_bag')
	  %% Line 855
	  <_X_Tab,_cor5> when 'true' ->
	      %% Line 856
	      'undefined'
	end
'to_ets'/2 =
    %% Line 865
    fun (_cor1,_cor0) ->
	%% Line 866
	case call 'ets':'info'
		 (_cor0, 'protection') of
	  %% Line 867
	  <'undefined'> when 'true' ->
	      %% Line 868
	      call 'erlang':'error'
		  ('badarg', [_cor1|[_cor0|[]]])
	  %% Line 869
	  <_cor11> when 'true' ->
	      let <Fun> =
		  %% Line 870
		  ( fun (_cor4,_cor3) ->
			case call 'ets':'insert'
				 (_cor3, _cor4) of
			  <'true'> when 'true' ->
			      _cor3
			  ( <_cor2> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor2})
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-to_ets/2-fun-0-'}}] )
	      in  %% Line 871
		  apply 'foldl'/3
		      (Fun, _cor0, _cor1)
	end
'traverse'/2 =
    %% Line 888
    fun (_cor1,_cor0) ->
	let <Ref> =
	    %% Line 889
	    call 'erlang':'make_ref'
		()
	in  let <TFun> =
		%% Line 891
		( fun (_cor5,_cor4) ->
		      %% Line 892
		      case apply _cor0
			       (_cor5) of
			%% Line 893
			<'continue'> when 'true' ->
			    _cor4
			%% Line 895
			<{'continue',Val}> when 'true' ->
			    %% Line 896
			    [Val|_cor4]
			%% Line 897
			<{'done',Value}> when 'true' ->
			    %% Line 898
			    call 'erlang':'throw'
				({Ref,[Value|_cor4]})
			%% Line 899
			<Other> when 'true' ->
			    %% Line 900
			    call 'erlang':'throw'
				({Ref,Other})
		      end
		  -| [{'id',{0,0,'-traverse/2-fun-0-'}}] )
	    in  let <_cor9> =
		    %% Line 903
		    apply 'do_traverse'/4
			(TFun, [], _cor1, Ref)
		in  let <_fol128> =
			%% Line 903
			[_cor1|[_cor0|[]]]
		    in  %% Line 1263
			( case <_cor9,_fol128> of
			    ( <( 'badarg'
				 -| ['compiler_generated'] ),( A
							       -| ['compiler_generated'] )> when ( 'true'
												   -| ['compiler_generated'] ) ->
				  %% Line 1264
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( 'badarg'
					   -| ['compiler_generated'] ), ( A
									  -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    %% Line 1265
			    ( <( Reply
				 -| ['compiler_generated'] ),( _X_A
							       -| ['compiler_generated'] )> when ( 'true'
												   -| ['compiler_generated'] ) ->
				  %% Line 1266
				  ( Reply
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
'update_counter'/3 =
    %% Line 913
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 914
	    apply 'treq'/2
		(_cor2, {'update_counter',_cor1,_cor0})
	in  let <_fol132> =
		%% Line 914
		[_cor2|[_cor1|[_cor0|[]]]]
	    in  %% Line 1263
		( case <_cor3,_fol132> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'verbose'/0 =
    %% Line 916
    fun () ->
	%% Line 917
	apply 'verbose'/1
	    ('true')
'verbose'/1 =
    %% Line 919
    fun (_cor0) ->
	%% Line 920
	case call 'dets_server':'verbose'
		 (_cor0) of
	  <'ok'> when 'true' ->
	      let <All> =
		  %% Line 921
		  call 'dets_server':'all'
		      ()
	      in  let <Fun> =
		      %% Line 922
		      ( fun (_cor3) ->
			    apply 'treq'/2
				(_cor3, {'set_verbose',_cor0})
			-| [{'id',{0,0,'-verbose/1-fun-0-'}}] )
		  in  do  %% Line 923
			  call 'lists':'foreach'
			      (Fun, All)
			  %% Line 924
			  All
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'where'/2 =
    %% Line 930
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 931
	    apply 'treq'/2
		(_cor1, {'where',_cor0})
	in  let <_fol137> =
		%% Line 931
		[_cor1|[_cor0|[]]]
	    in  %% Line 1263
		( case <_cor2,_fol137> of
		    ( <( 'badarg'
			 -| ['compiler_generated'] ),( A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1264
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( 'badarg'
				   -| ['compiler_generated'] ), ( A
								  -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    %% Line 1265
		    ( <( Reply
			 -| ['compiler_generated'] ),( _X_A
						       -| ['compiler_generated'] )> when ( 'true'
											   -| ['compiler_generated'] ) ->
			  %% Line 1266
			  ( Reply
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'do_traverse'/4 =
    %% Line 933
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    catch
		%% Line 934
		call 'dets_server':'get_pid'
		    (_cor1)
	in  %% Line 934
	    case _cor4 of
	      %% Line 935
	      <{'EXIT',_X_Reason}> when 'true' ->
		  %% Line 936
		  'badarg'
	      %% Line 937
	      <Proc> when 'true' ->
		  %% Line 938
		  try
		      %% Line 939
		      apply 'do_trav'/3
			  (Proc, _cor2, _cor3)
		  of <_cor5> ->
		      _cor5
		  catch <_cor8,_cor7,_cor6> ->
		      case <_cor8,_cor7,_cor6> of
			%% Line 940
			<'throw',{_cor14,Result},_cor15>
			    when call 'erlang':'=:='
				  (_cor14,
				   _cor0) ->
			    %% Line 941
			    Result
			( <_cor8,_cor7,_cor6> when 'true' ->
			      primop 'raise'
				  (_cor6, _cor7)
			  -| ['compiler_generated'] )
		      end
	    end
'do_trav'/3 =
    %% Line 945
    fun (_cor2,_cor1,_cor0) ->
	%% Line 946
	case apply 'compile_match_spec'/2
		 ('object', '_') of
	  <{Spec,MP}> when 'true' ->
	      %% Line 948
	      case apply 'req'/2
		       (_cor2, {'match',MP,Spec,'default','safe'}) of
		%% Line 949
		<{'cont',State}> when 'true' ->
		    %% Line 950
		    apply 'do_trav'/4
			(State, _cor2, _cor1, _cor0)
		%% Line 951
		<Error> when 'true' ->
		    %% Line 952
		    Error
	      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'do_trav'/4 =
    %% Line 955
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 956
	case apply 'req'/2
		 (_cor2, {'match_init',_cor3,'safe'}) of
	  %% Line 957
	  <'$end_of_table'> when 'true' ->
	      _cor1
	  %% Line 959
	  <{'cont',{Bins,NewState}}> when 'true' ->
	      let <_cor4> =
		  %% Line 960
		  call 'lists':'reverse'
		      (Bins)
	      in  %% Line 960
		  apply 'do_trav_bins'/5
		      (NewState, _cor2, _cor1, _cor0, _cor4)
	  %% Line 961
	  <Error> when 'true' ->
	      %% Line 962
	      Error
	end
'do_trav_bins'/5 =
    %% Line 965
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <State,Proc,Acc,Fun,[]> when 'true' ->
	      %% Line 966
	      apply 'do_trav'/4
		  (State, Proc, Acc, Fun)
	  %% Line 967
	  <State,Proc,Acc,Fun,[Bin|Bins]> when 'true' ->
	      let <_cor5> =
		  catch
		      %% Line 969
		      call 'erlang':'binary_to_term'
			  (Bin)
	      in  %% Line 969
		  case _cor5 of
		    %% Line 970
		    <{'EXIT',_cor14}> when 'true' ->
			let <_cor6> =
			    %% Line 971
			    call 'dets_utils':'bad_object'
				('do_trav_bins', Bin)
			in  %% Line 971
			    apply 'req'/2
				(Proc, {'corrupt',_cor6})
		    %% Line 972
		    <Term> when 'true' ->
			let <NewAcc> =
			    %% Line 973
			    apply Fun
				(Term, Acc)
			in  %% Line 974
			    apply 'do_trav_bins'/5
				(State, Proc, NewAcc, Fun, Bins)
		  end
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'do_trav_bins',5}}] )
	    -| ['compiler_generated'] )
	end
'safe_match'/3 =
    %% Line 977
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 978
	    apply 'init_chunk_match'/5
		(_cor2, _cor1, _cor0, 'default', 'safe')
	in  %% Line 978
	    apply 'do_safe_match'/2
		(_cor3, [])
'do_safe_match'/2 =
    %% Line 980
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'error',Error},_X_L> when 'true' ->
	      %% Line 981
	      {'error',Error}
	  %% Line 982
	  <{L,C},LL> when 'true' ->
	      let <_cor3> =
		  %% Line 983
		  apply 'chunk_match'/2
		      (C, 'safe')
	      in  let <_cor2> =
		      %% Line 983
		      call 'erlang':'++'
			  (L, LL)
		  in  %% Line 983
		      apply 'do_safe_match'/2
			  (_cor3, _cor2)
	  %% Line 984
	  <'$end_of_table',L> when 'true' ->
	      %% Line 985
	      L
	  %% Line 986
	  <'badarg',_X_L> when 'true' ->
	      %% Line 987
	      'badarg'
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'do_safe_match',2}}] )
	    -| ['compiler_generated'] )
	end
'init_chunk_match'/5 =
    %% Line 990
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Tab,Pat,What,N,Safe>
	      when let <_cor5> =
		    call 'erlang':'is_integer'
			(N)
		in  let <_cor6> =
			call 'erlang':'>='
			    (N, 0)
		    in  let <_cor7> =
			    call 'erlang':'and'
				(_cor5, _cor6)
			in  let <_cor8> =
				%% Line 991
				call 'erlang':'=:='
				    (N, 'default')
			    in  call 'erlang':'or'
				    (_cor7, _cor8) ->
	      %% Line 992
	      case apply 'compile_match_spec'/2
		       (What, Pat) of
		%% Line 993
		<{Spec,MP}> when 'true' ->
		    let <_cor9> =
			catch
			    %% Line 994
			    call 'dets_server':'get_pid'
				(Tab)
		    in  %% Line 994
			case _cor9 of
			  %% Line 995
			  <{'EXIT',_X_Reason}> when 'true' ->
			      %% Line 996
			      'badarg'
			  %% Line 997
			  <Proc> when 'true' ->
			      %% Line 998
			      case apply 'req'/2
				       (Proc, {'match',MP,Spec,N,Safe}) of
				%% Line 999
				<{'done',L}> when 'true' ->
				    %% Line 1000
				    {L,{'dets_cont',%% Line 1001
						    What,'undefined',%% Line 1001
								     'eof','undefined',Tab,Proc,'undefined'}}
				%% Line 1002
				<{'cont',State}> when 'true' ->
				    %% Line 1003
				    case State of
				      <{'dets_cont',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29}> when 'true' ->
					  let <_cor11> =
					      %% Line 1005
					      call 'erlang':'setelement'
						  (7, State, Proc)
					  in  let <_cor12> =
						  %% Line 1004
						  call 'erlang':'setelement'
						      (6, _cor11, Tab)
					      in  let <_cor14> =
						      call 'erlang':'setelement'
							  (2, _cor12, What)
						  in  apply 'chunk_match'/2
							  (_cor14, %% Line 1006
								   Safe)
				      ( <_cor30> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','dets_cont'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				%% Line 1007
				<Error> when 'true' ->
				    %% Line 1008
				    Error
			      end
			end
		%% Line 1011
		<'badarg'> when 'true' ->
		    %% Line 1012
		    'badarg'
		( <_cor17> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor17})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1014
	  <_X_Tab,_X_Pat,_X_What,_X_N,_X_Safe> when 'true' ->
	      %% Line 1015
	      'badarg'
	end
'chunk_match'/2 =
    %% Line 1017
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <State = {'dets_cont',_cor12,_cor13,_cor14,_cor15,_cor16,Proc,_cor17},Safe> when 'true' ->
	      %% Line 1018
	      case apply 'req'/2
		       (Proc, {'match_init',State,Safe}) of
		%% Line 1019
		<Reply = '$end_of_table'> when 'true' ->
		    %% Line 1020
		    Reply
		%% Line 1021
		<{'cont',{Bins,NewState}}> when 'true' ->
		    %% Line 1022
		    ( case NewState of
			( <( {'dets_cont',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_rec5}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <_cor5> =
				  catch
				      %% Line 1023
				      apply 'do_foldl_bins'/2
					  (Bins, _rec5)
			      in  %% Line 1023
				  case _cor5 of
				    %% Line 1024
				    <{'EXIT',_cor25}> when 'true' ->
					%% Line 1025
					case call 'ets':'is_compiled_ms'
						 (_rec5) of
					  %% Line 1026
					  <'true'> when 'true' ->
					      let <Bad> =
						  %% Line 1027
						  call 'dets_utils':'bad_object'
						      ('chunk_match', Bins)
					      in  %% Line 1028
						  apply 'req'/2
						      (Proc, {'corrupt',Bad})
					  %% Line 1029
					  <'false'> when 'true' ->
					      %% Line 1030
					      'badarg'
					  ( <_cor7> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_cor7})
					    -| ['compiler_generated'] )
					end
				    %% Line 1032
				    <[]> when 'true' ->
					%% Line 1033
					apply 'chunk_match'/2
					    (NewState, Safe)
				    %% Line 1034
				    <Terms> when 'true' ->
					%% Line 1035
					{Terms,NewState}
				  end
			  -| ['compiler_generated'] )
			( <_cor24> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','dets_cont'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 1037
		<Error> when 'true' ->
		    %% Line 1038
		    Error
	      end
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'chunk_match',2}}] )
	    -| ['compiler_generated'] )
	end
'do_foldl_bins'/2 =
    %% Line 1041
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Bins,'true'> when 'true' ->
	      %% Line 1042
	      apply 'foldl_bins'/2
		  (Bins, [])
	  %% Line 1043
	  <Bins,MP> when 'true' ->
	      %% Line 1044
	      apply 'foldl_bins'/3
		  (Bins, MP, [])
	end
'foldl_bins'/2 =
    %% Line 1046
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],Terms> when 'true' ->
	      %% Line 1048
	      Terms
	  %% Line 1049
	  <[Bin|Bins],Terms> when 'true' ->
	      let <_cor2> =
		  %% Line 1050
		  call 'erlang':'binary_to_term'
		      (Bin)
	      in  %% Line 1050
		  apply 'foldl_bins'/2
		      (Bins, [_cor2|Terms])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'foldl_bins',2}}] )
	    -| ['compiler_generated'] )
	end
'foldl_bins'/3 =
    %% Line 1052
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],_X_MP,Terms> when 'true' ->
	      %% Line 1054
	      Terms
	  %% Line 1055
	  <[Bin|Bins],MP,Terms> when 'true' ->
	      let <Term> =
		  %% Line 1056
		  call 'erlang':'binary_to_term'
		      (Bin)
	      in  %% Line 1057
		  case call 'ets':'match_spec_run'
			   ([Term|[]], MP) of
		    %% Line 1058
		    <[]> when 'true' ->
			%% Line 1059
			apply 'foldl_bins'/3
			    (Bins, MP, Terms)
		    %% Line 1060
		    <[Result|[]]> when 'true' ->
			%% Line 1061
			apply 'foldl_bins'/3
			    (Bins, MP, [Result|Terms])
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor4})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'foldl_bins',3}}] )
	    -| ['compiler_generated'] )
	end
'compile_match_spec'/2 =
    %% Line 1065
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'select',Spec = [{'_',[],['$_']}]> when 'true' ->
	      %% Line 1066
	      {Spec,'true'}
	  %% Line 1067
	  <'select',Spec> when 'true' ->
	      let <_cor2> =
		  catch
		      %% Line 1068
		      call 'ets':'match_spec_compile'
			  (Spec)
	      in  %% Line 1068
		  case _cor2 of
		    %% Line 1069
		    <X>
			when call 'erlang':'is_binary'
			      (_cor2) ->
			%% Line 1070
			{Spec,X}
		    %% Line 1071
		    <_cor6> when 'true' ->
			%% Line 1072
			'badarg'
		  end
	  %% Line 1074
	  <'object',Pat> when 'true' ->
	      %% Line 1075
	      apply 'compile_match_spec'/2
		  ('select', [{Pat,[],['$_']}|[]])
	  %% Line 1076
	  <'bindings',Pat> when 'true' ->
	      %% Line 1077
	      apply 'compile_match_spec'/2
		  ('select', [{Pat,[],['$$']}|[]])
	  %% Line 1078
	  <'delete',Pat> when 'true' ->
	      %% Line 1079
	      apply 'compile_match_spec'/2
		  ('select', [{Pat,[],['true']}|[]])
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'compile_match_spec',2}}] )
	    -| ['compiler_generated'] )
	end
'defaults'/2 =
    %% Line 1082
    fun (_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 1083
	    apply 'to_list'/1
		(_cor1)
	in  let <_cor2> =
		%% Line 1091
		call 'timer':'minutes'
		    (3)
	    in  let <Defaults0> =
		    %% Line 1083
		    {'open_args',_cor3,%% Line 1084
				       'set',%% Line 1085
					     1,%% Line 1086
					       'true',%% Line 1087
						      'default',%% Line 1088
								'default',%% Line 1089
									  'false',%% Line 1090
										  {3000,14000},_cor2,%% Line 1092
												     'read_write',%% Line 1093
														  'default',%% Line 1094
															    'false'}
		in  let <Fun> = 'repl'/2
		    in  let <Defaults> =
			    %% Line 1096
			    call 'lists':'foldl'
				(Fun, Defaults0, _cor0)
			in  %% Line 1097
			    ( case Defaults of
				( <( {'open_args',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_rec6,_cor24}
				     -| ['compiler_generated'] )> when 'true' ->
				      case _rec6 of
					%% Line 1098
					<8> when 'true' ->
					    %% Line 1099
					    call 'erlang':'setelement'
						(7, Defaults, 'default')
					%% Line 1100
					<_cor39> when 'true' ->
					    %% Line 1101
					    apply 'is_comp_min_max'/1
						(Defaults)
				      end
				  -| ['compiler_generated'] )
				( <_cor25> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','open_args'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
'to_list'/1 =
    %% Line 1104
    fun (_cor0) ->
	case _cor0 of
	  <T>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      call 'erlang':'atom_to_list'
		  (T)
	  %% Line 1105
	  <T> when 'true' ->
	      T
	end
'repl'/2 =
    %% Line 1107
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'access',A},Defs> when 'true' ->
	      do  %% Line 1108
		  apply 'mem'/2
		      (A, ['read'|['read_write']])
		  %% Line 1109
		  case Defs of
		    <{'open_args',_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59}> when 'true' ->
			call 'erlang':'setelement'
			    (11, Defs, A)
		    ( <_cor60> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','open_args'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 1110
	  <{'auto_save',Int},Defs>
	      when let <_cor4> =
		    call 'erlang':'is_integer'
			(Int)
		in  let <_cor5> =
			call 'erlang':'>='
			    (Int, 0)
		    in  call 'erlang':'and'
			    (_cor4, _cor5) ->
	      %% Line 1111
	      case Defs of
		<{'open_args',_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72}> when 'true' ->
		    call 'erlang':'setelement'
			(10, Defs, Int)
		( <_cor73> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','open_args'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 1112
	  <{'auto_save','infinity'},Defs> when 'true' ->
	      %% Line 1113
	      case Defs of
		<{'open_args',_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85}> when 'true' ->
		    call 'erlang':'setelement'
			(10, Defs, 'infinity')
		( <_cor86> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','open_args'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 1114
	  <{'cache_size',Int},Defs>
	      when let <_cor10> =
		    call 'erlang':'is_integer'
			(Int)
		in  let <_cor11> =
			call 'erlang':'>='
			    (Int, 0)
		    in  call 'erlang':'and'
			    (_cor10, _cor11) ->
	      %% Line 1116
	      Defs
	  %% Line 1117
	  <{'cache_size','infinity'},Defs> when 'true' ->
	      %% Line 1118
	      Defs
	  %% Line 1119
	  <{'delayed_write','default'},Defs> when 'true' ->
	      %% Line 1120
	      case Defs of
		<{'open_args',_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98}> when 'true' ->
		    call 'erlang':'setelement'
			(9, Defs, {3000,14000})
		( <_cor99> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','open_args'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 1121
	  <{'delayed_write',C = {Delay,Size}},Defs>
	      when %% Line 1122
		try
		    let <_cor14> =
			call 'erlang':'is_integer'
			    (Delay)
		    in  let <_cor15> =
			    call 'erlang':'>='
				(Delay, 0)
			in  let <_cor16> =
				call 'erlang':'is_integer'
				    (Size)
			    in  let <_cor17> =
				    call 'erlang':'>='
					(Size, 0)
				in  let <_cor18> =
					call 'erlang':'and'
					    (_cor16, _cor17)
				    in  let <_cor19> =
					    call 'erlang':'and'
						(_cor15, _cor18)
					in  call 'erlang':'and'
						(_cor14, _cor19)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1123
	      case Defs of
		<{'open_args',_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111}> when 'true' ->
		    call 'erlang':'setelement'
			(9, Defs, C)
		( <_cor112> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','open_args'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 1124
	  <{'estimated_no_objects',I},Defs> when 'true' ->
	      %% Line 1125
	      apply 'repl'/2
		  ({'min_no_slots',I}, Defs)
	  %% Line 1126
	  <{'file',File},Defs> when 'true' ->
	      let <_rec13> =
		  %% Line 1127
		  apply 'to_list'/1
		      (File)
	      in  %% Line 1127
		  case Defs of
		    <{'open_args',_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124}> when 'true' ->
			call 'erlang':'setelement'
			    (2, Defs, _rec13)
		    ( <_cor125> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','open_args'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 1128
	  <{'keypos',P},Defs>
	      when let <_cor25> =
		    call 'erlang':'is_integer'
			(P)
		in  let <_cor26> =
			call 'erlang':'>'
			    (P, 0)
		    in  call 'erlang':'and'
			    (_cor25, _cor26) ->
	      %% Line 1129
	      case Defs of
		<{'open_args',_cor126,_cor127,_cor128,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137}> when 'true' ->
		    call 'erlang':'setelement'
			(4, Defs, P)
		( <_cor138> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','open_args'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 1130
	  <{'max_no_slots',I},Defs> when 'true' ->
	      let <MaxSlots> =
		  %% Line 1132
		  apply 'is_max_no_slots'/1
		      (I)
	      in  %% Line 1133
		  case Defs of
		    <{'open_args',_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150}> when 'true' ->
			call 'erlang':'setelement'
			    (7, Defs, MaxSlots)
		    ( <_cor151> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','open_args'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 1134
	  <{'min_no_slots',I},Defs> when 'true' ->
	      let <MinSlots> =
		  %% Line 1135
		  apply 'is_min_no_slots'/1
		      (I)
	      in  %% Line 1136
		  case Defs of
		    <{'open_args',_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162,_cor163}> when 'true' ->
			call 'erlang':'setelement'
			    (6, Defs, MinSlots)
		    ( <_cor164> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','open_args'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 1137
	  <{'ram_file',Bool},Defs> when 'true' ->
	      do  %% Line 1138
		  apply 'mem'/2
		      (Bool, ['true'|['false']])
		  %% Line 1139
		  case Defs of
		    <{'open_args',_cor165,_cor166,_cor167,_cor168,_cor169,_cor170,_cor171,_cor172,_cor173,_cor174,_cor175,_cor176}> when 'true' ->
			call 'erlang':'setelement'
			    (8, Defs, Bool)
		    ( <_cor177> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','open_args'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 1140
	  <{'repair',T},Defs> when 'true' ->
	      do  %% Line 1141
		  apply 'mem'/2
		      (T, ['true'|['false'|['force']]])
		  %% Line 1142
		  case Defs of
		    <{'open_args',_cor178,_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189}> when 'true' ->
			call 'erlang':'setelement'
			    (5, Defs, T)
		    ( <_cor190> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','open_args'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 1143
	  <{'type',T},Defs> when 'true' ->
	      do  %% Line 1144
		  apply 'mem'/2
		      (T, ['set'|['bag'|['duplicate_bag']]])
		  %% Line 1145
		  case Defs of
		    <{'open_args',_cor191,_cor192,_cor193,_cor194,_cor195,_cor196,_cor197,_cor198,_cor199,_cor200,_cor201,_cor202}> when 'true' ->
			call 'erlang':'setelement'
			    (3, Defs, T)
		    ( <_cor203> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','open_args'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 1146
	  <{'version',Version},Defs> when 'true' ->
	      let <V> =
		  %% Line 1147
		  apply 'is_version'/1
		      (Version)
	      in  %% Line 1148
		  case Defs of
		    <{'open_args',_cor204,_cor205,_cor206,_cor207,_cor208,_cor209,_cor210,_cor211,_cor212,_cor213,_cor214,_cor215}> when 'true' ->
			call 'erlang':'setelement'
			    (12, Defs, V)
		    ( <_cor216> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','open_args'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 1149
	  <{'debug',Bool},Defs> when 'true' ->
	      do  %% Line 1151
		  apply 'mem'/2
		      (Bool, ['true'|['false']])
		  %% Line 1152
		  case Defs of
		    <{'open_args',_cor217,_cor218,_cor219,_cor220,_cor221,_cor222,_cor223,_cor224,_cor225,_cor226,_cor227,_cor228}> when 'true' ->
			call 'erlang':'setelement'
			    (13, Defs, Bool)
		    ( <_cor229> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','open_args'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 1153
	  <{_cor230,_cor231},_cor232> when 'true' ->
	      %% Line 1154
	      call 'erlang':'exit'
		  ('badarg')
	  ( <_cor47,_cor46> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor47,_cor46})
		  -| [{'function_name',{'repl',2}}] )
	    -| ['compiler_generated'] )
	end
'is_min_no_slots'/1 =
    %% Line 1156
    fun (_cor0) ->
	case _cor0 of
	  <'default'> when 'true' ->
	      'default'
	  %% Line 1157
	  <I>
	      when let <_cor1> =
		    call 'erlang':'is_integer'
			(_cor0)
		in  let <_cor2> =
			call 'erlang':'>='
			    (_cor0, 256)
		    in  call 'erlang':'and'
			    (_cor1, _cor2) ->
	      I
	  %% Line 1158
	  <I>
	      when let <_cor3> =
		    call 'erlang':'is_integer'
			(_cor0)
		in  let <_cor4> =
			call 'erlang':'>='
			    (_cor0, 0)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      256
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5})
		  -| [{'function_name',{'is_min_no_slots',1}}] )
	    -| ['compiler_generated'] )
	end
'is_max_no_slots'/1 =
    %% Line 1160
    fun (_cor0) ->
	case _cor0 of
	  <'default'> when 'true' ->
	      'default'
	  %% Line 1161
	  <I>
	      when try
		    let <_cor1> =
			call 'erlang':'is_integer'
			    (_cor0)
		    in  let <_cor2> =
			    call 'erlang':'>'
				(_cor0, 0)
			in  let <_cor4> =
				call 'erlang':'<'
				    (_cor0, 2147483648)
			    in  let <_cor5> =
				    call 'erlang':'and'
					(_cor2, _cor4)
				in  call 'erlang':'and'
					(_cor1, _cor5)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      I
	  ( <_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6})
		  -| [{'function_name',{'is_max_no_slots',1}}] )
	    -| ['compiler_generated'] )
	end
'is_comp_min_max'/1 =
    %% Line 1163
    fun (_cor0) ->
	%% Line 1164
	case _cor0 of
	  <{'open_args',_cor5,_cor6,_cor7,_cor8,Min,Max,_cor9,_cor10,_cor11,_cor12,V,_cor13}> when 'true' ->
	      %% Line 1165
	      case V of
		%% Line 1166
		<_cor14>
		    when call 'erlang':'=:='
			  (Min,
			   'default') ->
		    _cor0
		%% Line 1167
		<_cor15>
		    when call 'erlang':'=:='
			  (Max,
			   'default') ->
		    _cor0
		%% Line 1168
		<_cor16> when 'true' ->
		    case call 'erlang':'=<'
			     (Min, Max) of
		      <'true'> when 'true' ->
			  _cor0
		      ( <_cor2> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor2})
			-| ['compiler_generated'] )
		    end
	      end
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'is_version'/1 =
    %% Line 1171
    fun (_cor0) ->
	case _cor0 of
	  <'default'> when 'true' ->
	      'default'
	  %% Line 1172
	  <8> when 'true' ->
	      8
	  %% Line 1173
	  <9> when 'true' ->
	      9
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'is_version',1}}] )
	    -| ['compiler_generated'] )
	end
'mem'/2 =
    %% Line 1175
    fun (_cor1,_cor0) ->
	%% Line 1176
	case call 'lists':'member'
		 (_cor1, _cor0) of
	  %% Line 1177
	  <'true'> when 'true' ->
	      'true'
	  %% Line 1178
	  <'false'> when 'true' ->
	      call 'erlang':'exit'
		  ('badarg')
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor2})
	    -| ['compiler_generated'] )
	end
'options'/2 =
    %% Line 1181
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Options,Keys>
	      when call 'erlang':'is_list'
		    (Options) ->
	      %% Line 1182
	      apply 'options'/3
		  (Options, Keys, [])
	  %% Line 1183
	  <Option,Keys> when 'true' ->
	      %% Line 1184
	      apply 'options'/3
		  ([Option|[]], Keys, [])
	end
'options'/3 =
    %% Line 1186
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Options,[Key|Keys],L>
	      when call 'erlang':'is_list'
		    (Options) ->
	      let <_cor12> =
		  %% Line 1187
		  case call 'lists':'keysearch'
			   (Key, 1, Options) of
		    %% Line 1188
		    <{'value',{'format',Format}}>
			when let <_cor3> =
			      call 'erlang':'=:='
				  (Format, 'term')
			  in  let <_cor4> =
				  %% Line 1189
				  call 'erlang':'=:='
				      (Format, 'bchunk')
			      in  call 'erlang':'or'
				      (_cor3, _cor4) ->
			%% Line 1190
			{'ok',Format}
		    %% Line 1191
		    <{'value',{'min_no_slots',I}}> when 'true' ->
			let <_cor5> =
			    catch
				%% Line 1192
				apply 'is_min_no_slots'/1
				    (I)
			in  %% Line 1192
			    case _cor5 of
			      %% Line 1193
			      <{'EXIT',_cor19}> when 'true' ->
				  'badarg'
			      %% Line 1194
			      <MinNoSlots> when 'true' ->
				  {'ok',MinNoSlots}
			    end
		    %% Line 1196
		    <{'value',{'n_objects','default'}}> when 'true' ->
			let <_cor7> =
			    %% Line 1197
			    apply 'default_option'/1
				(Key)
			in  %% Line 1197
			    {'ok',_cor7}
		    %% Line 1198
		    <{'value',{'n_objects',NObjs}}>
			when let <_cor8> =
			      call 'erlang':'is_integer'
				  (NObjs)
			  in  let <_cor9> =
				  %% Line 1199
				  call 'erlang':'>='
				      (NObjs, 1)
			      in  call 'erlang':'and'
				      (_cor8, _cor9) ->
			%% Line 1200
			{'ok',NObjs}
		    %% Line 1201
		    <{'value',{'traverse','select'}}> when 'true' ->
			%% Line 1202
			{'ok','select'}
		    %% Line 1203
		    <{'value',{'traverse',{'select',MS}}}> when 'true' ->
			%% Line 1204
			{'ok',{'select',MS}}
		    %% Line 1205
		    <{'value',{'traverse','first_next'}}> when 'true' ->
			%% Line 1206
			{'ok','first_next'}
		    %% Line 1207
		    <{'value',{_cor20,_cor21}}>
			when call 'erlang':'=:='
			      (_cor20,
			       Key) ->
			%% Line 1208
			'badarg'
		    %% Line 1209
		    <'false'> when 'true' ->
			let <Default> =
			    %% Line 1210
			    apply 'default_option'/1
				(Key)
			in  %% Line 1211
			    {'ok',Default}
		    ( <_cor11> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor11})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 1213
		  case _cor12 of
		    %% Line 1214
		    <'badarg'> when 'true' ->
			%% Line 1215
			{'badarg',Key}
		    %% Line 1216
		    <{'ok',Value}> when 'true' ->
			let <NewOptions> =
			    %% Line 1217
			    call 'lists':'keydelete'
				(Key, 1, Options)
			in  %% Line 1218
			    apply 'options'/3
				(NewOptions, Keys, [Value|L])
		    ( <_cor15> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor15})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1220
	  <[],[],L> when 'true' ->
	      %% Line 1221
	      call 'lists':'reverse'
		  (L)
	  %% Line 1222
	  <Options,_cor22,_X_L> when 'true' ->
	      %% Line 1223
	      {'badarg',Options}
	end
'default_option'/1 =
    %% Line 1225
    fun (_cor0) ->
	case _cor0 of
	  <'format'> when 'true' ->
	      'term'
	  %% Line 1226
	  <'min_no_slots'> when 'true' ->
	      'default'
	  %% Line 1227
	  <'traverse'> when 'true' ->
	      'select'
	  %% Line 1228
	  <'n_objects'> when 'true' ->
	      'default'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'default_option',1}}] )
	    -| ['compiler_generated'] )
	end
'listify'/1 =
    %% Line 1230
    fun (_cor0) ->
	case _cor0 of
	  <L>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 1231
	      L
	  %% Line 1232
	  <T> when 'true' ->
	      %% Line 1233
	      [T|[]]
	end
'treq'/2 =
    %% Line 1235
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    catch
		%% Line 1236
		call 'dets_server':'get_pid'
		    (_cor1)
	in  %% Line 1236
	    case _cor2 of
	      %% Line 1237
	      <Pid>
		  when call 'erlang':'is_pid'
			(_cor2) ->
		  %% Line 1238
		  apply 'req'/2
		      (Pid, _cor0)
	      %% Line 1239
	      <_cor6> when 'true' ->
		  %% Line 1240
		  'badarg'
	    end
'req'/2 =
    %% Line 1243
    fun (_cor1,_cor0) ->
	let <Ref> =
	    %% Line 1244
	    call 'erlang':'monitor'
		('process', _cor1)
	in  let <_cor3> =
		%% Line 1245
		call 'erlang':'self'
		    ()
	    in  do  %% Line 1245
		    call 'erlang':'!'
			(_cor1, {'$dets_call',_cor3,_cor0})
		    %% Line 1246
		    receive
		      %% Line 1247
		      <{'DOWN',_cor6,'process',_cor7,_X_Info}>
			  when let <_cor8> =
				call 'erlang':'=:='
				    (_cor6, Ref)
			    in  let <_cor9> =
				    call 'erlang':'=:='
					(_cor7, _cor1)
				in  call 'erlang':'and'
					(_cor8, _cor9) ->
			  %% Line 1248
			  'badarg'
		      %% Line 1249
		      <{_cor10,Reply}>
			  when call 'erlang':'=:='
				(_cor10,
				 _cor1) ->
			  do  %% Line 1250
			      call 'erlang':'demonitor'
				  (Ref, ['flush'])
			      %% Line 1251
			      Reply
		    after 'infinity' ->
		      'true'
'einval'/2 =
    %% Line 1255
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'error',{'file_error',_cor4,'einval'}},A> when 'true' ->
	      %% Line 1256
	      call 'erlang':'error'
		  ('badarg', A)
	  %% Line 1257
	  <{'error',{'file_error',_cor5,'badarg'}},A> when 'true' ->
	      %% Line 1258
	      call 'erlang':'error'
		  ('badarg', A)
	  %% Line 1259
	  <Reply,_X_A> when 'true' ->
	      %% Line 1260
	      Reply
	end
'badarg'/2 =
    %% Line 1263
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'badarg',A> when 'true' ->
	      %% Line 1264
	      call 'erlang':'error'
		  ('badarg', A)
	  %% Line 1265
	  <Reply,_X_A> when 'true' ->
	      %% Line 1266
	      Reply
	end
'undefined'/1 =
    %% Line 1269
    fun (_cor0) ->
	case _cor0 of
	  <'badarg'> when 'true' ->
	      %% Line 1270
	      'undefined'
	  %% Line 1271
	  <Reply> when 'true' ->
	      %% Line 1272
	      Reply
	end
'badarg_exit'/2 =
    %% Line 1275
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'badarg',A> when 'true' ->
	      %% Line 1276
	      call 'erlang':'error'
		  ('badarg', A)
	  %% Line 1277
	  <{'ok',Reply},_X_A> when 'true' ->
	      %% Line 1278
	      Reply
	  %% Line 1279
	  <Reply,_X_A> when 'true' ->
	      %% Line 1280
	      call 'erlang':'exit'
		  (Reply)
	end
'init'/2 =
    %% Line 1286
    fun (_cor1,_cor0) ->
	do  %% Line 1287
	    call 'erlang':'process_flag'
		('trap_exit', 'true')
	    %% Line 1288
	    apply 'open_file_loop'/1
		({'head','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','false','undefined','undefined','undefined','undefined','undefined','undefined','read_write','false','undefined',_cor1,_cor0,'undefined','undefined','undefined','undefined'})
'open_file_loop'/1 =
    %% Line 1290
    fun (_cor0) ->
	%% Line 1291
	apply 'open_file_loop'/2
	    (_cor0, 0)
'open_file_loop'/2 =
    %% Line 1293
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Head = {'head',_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58},N>
	      when ( try
		      let <_cor7> =
			  call 'erlang':'element'
			      (1, _cor42)
		      in  call 'erlang':'=:='
			      (_cor7, 'error')
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 1294
	      apply 'open_file_loop2'/2
		  (Head, N)
	  %% Line 1295
	  <Head,N> when 'true' ->
	      %% Line 1296
	      receive
		%% Line 1305
		<{'$dets_call',From,Op = {'match_init',_X_State,_X_Safe}}> when 'true' ->
		    %% Line 1306
		    apply 'do_apply_op'/4
			(Op, From, Head, N)
		%% Line 1307
		<{'$dets_call',From,Op = {'bchunk',_X_State}}> when 'true' ->
		    %% Line 1308
		    apply 'do_apply_op'/4
			(Op, From, Head, N)
		%% Line 1309
		<{'$dets_call',From,Op = {'next',_X_Key}}> when 'true' ->
		    %% Line 1310
		    apply 'do_apply_op'/4
			(Op, From, Head, N)
		%% Line 1311
		<{'$dets_call',From,Op = {'match_delete_init',_X_MP,_X_Spec}}> when 'true' ->
		    %% Line 1312
		    apply 'do_apply_op'/4
			(Op, From, Head, N)
		%% Line 1313
		<{'EXIT',Pid,Reason}>
		    when ( try
			    ( case <> of
				( <>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_record'
									       -| ['compiler_generated'] )
					      (Head,
					       ( 'head'
						 -| ['compiler_generated'] ),
					       ( 32
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] ) ->
				      let <_cor13> =
					  ( call 'erlang':'element'
						(27, Head)
					    -| ['compiler_generated'] )
				      in  ( call 'erlang':'=:='
						(Pid, _cor13)
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    let <_X_NewHead> =
			%% Line 1315
			apply 'do_stop'/1
			    (Head)
		    in  %% Line 1316
			call 'erlang':'exit'
			    (Reason)
		%% Line 1317
		<{'EXIT',Pid,Reason}>
		    when ( try
			    ( case <> of
				( <>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_record'
									       -| ['compiler_generated'] )
					      (Head,
					       ( 'head'
						 -| ['compiler_generated'] ),
					       ( 32
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] ) ->
				      let <_cor20> =
					  ( call 'erlang':'element'
						(28, Head)
					    -| ['compiler_generated'] )
				      in  ( call 'erlang':'=:='
						(Pid, _cor20)
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    let <_X_NewHead> =
			%% Line 1319
			apply 'do_stop'/1
			    (Head)
		    in  %% Line 1320
			call 'erlang':'exit'
			    (Reason)
		%% Line 1321
		<{'EXIT',Pid,_X_Reason}> when 'true' ->
		    let <H2> =
			%% Line 1323
			apply 'remove_fix'/3
			    (Head, Pid, 'close')
		    in  %% Line 1324
			apply 'open_file_loop'/2
			    (H2, N)
		%% Line 1325
		<{'system',From,Req}> when 'true' ->
		    %% Line 1326
		    ( case Head of
			( <( {'head',_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_rec23,_cor84,_cor85,_cor86,_cor87,_cor88}
			     -| ['compiler_generated'] )> when 'true' ->
			      call 'sys':'handle_system_msg'
				  (Req, From, _rec23, %% Line 1327
						      'dets', %% Line 1327
							      [], %% Line 1327
								  Head)
			  -| ['compiler_generated'] )
			( <_cor89> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','head'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
	      after %% Line 1328
		    0 ->
		%% Line 1329
		apply 'open_file_loop2'/2
		    (Head, N)
	end
'open_file_loop2'/2 =
    %% Line 1332
    fun (_cor1,_cor0) ->
	%% Line 1333
	receive
	  %% Line 1334
	  <{'$dets_call',From,Op}> when 'true' ->
	      %% Line 1335
	      apply 'do_apply_op'/4
		  (Op, From, _cor1, _cor0)
	  %% Line 1336
	  <{'EXIT',Pid,Reason}>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor6> =
				    ( call 'erlang':'element'
					  (27, _cor1)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=:='
					  (Pid, _cor6)
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      let <_X_NewHead> =
		  %% Line 1338
		  apply 'do_stop'/1
		      (_cor1)
	      in  %% Line 1339
		  call 'erlang':'exit'
		      (Reason)
	  %% Line 1340
	  <{'EXIT',Pid,Reason}>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor13> =
				    ( call 'erlang':'element'
					  (28, _cor1)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=:='
					  (Pid, _cor13)
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      let <_X_NewHead> =
		  %% Line 1342
		  apply 'do_stop'/1
		      (_cor1)
	      in  %% Line 1343
		  call 'erlang':'exit'
		      (Reason)
	  %% Line 1344
	  <{'EXIT',Pid,_X_Reason}> when 'true' ->
	      let <H2> =
		  %% Line 1346
		  apply 'remove_fix'/3
		      (_cor1, Pid, 'close')
	      in  %% Line 1347
		  apply 'open_file_loop'/2
		      (H2, _cor0)
	  %% Line 1348
	  <{'system',From,Req}> when 'true' ->
	      %% Line 1349
	      ( case _cor1 of
		  ( <( {'head',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_rec24,_cor46,_cor47,_cor48,_cor49,_cor50}
		       -| ['compiler_generated'] )> when 'true' ->
			call 'sys':'handle_system_msg'
			    (Req, From, _rec24, %% Line 1350
						'dets', %% Line 1350
							[], _cor1)
		    -| ['compiler_generated'] )
		  ( <_cor51> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1351
	  <Message> when 'true' ->
	      do  %% Line 1352
		  call 'error_logger':'format'
		      ([42|[42|[32|[100|[101|[116|[115|[58|[32|[117|[110|[101|[120|[112|[101|[99|[116|[101|[100|[32|[109|[101|[115|[115|[97|[103|[101|[40|[105|[103|[110|[111|[114|[101|[100|[41|[58|[32|[126|[119|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 1353
																																	[Message|[]])
		  %% Line 1354
		  apply 'open_file_loop'/2
		      (_cor1, _cor0)
	after 'infinity' ->
	  'true'
'do_apply_op'/4 =
    %% Line 1357
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1358
	try
	    apply 'apply_op'/4
		(_cor3, _cor2, _cor1, _cor0)
	of <_cor4> ->
	    case _cor4 of
	      %% Line 1359
	      <'ok'> when 'true' ->
		  %% Line 1360
		  apply 'open_file_loop'/2
		      (_cor1, _cor0)
	      %% Line 1361
	      <{N2,H2 = {'head',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51}}>
		  when call 'erlang':'is_integer'
			(N2) ->
		  %% Line 1362
		  apply 'open_file_loop'/2
		      (H2, N2)
	      %% Line 1363
	      <H2 = {'head',_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82}> when ( 'true'
																															      -| ['compiler_generated'] ) ->
		  %% Line 1364
		  apply 'open_file_loop'/2
		      (H2, _cor0)
	      %% Line 1365
	      <{{'more',From1,Op1,N1},NewHead}> when 'true' ->
		  %% Line 1366
		  apply 'do_apply_op'/4
		      (Op1, From1, NewHead, N1)
	      ( <_cor6> when 'true' ->
		    primop 'match_fail'
			({'try_clause',_cor6})
		-| ['compiler_generated'] )
	    end
	catch <_cor9,_cor8,_cor7> ->
	    case <_cor9,_cor8,_cor7> of
	      %% Line 1368
	      <'exit','normal',_cor83> when 'true' ->
		  %% Line 1369
		  call 'erlang':'exit'
		      ('normal')
	      %% Line 1370
	      <_cor84,Bad,_cor85> when 'true' ->
		  %% Line 1371
		  ( case _cor1 of
		      ( <( {'head',_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_rec25,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115}
			   -| ['compiler_generated'] )> when 'true' ->
			    do  %% Line 1372
				case call 'dets_utils':'debug_mode'
					 () of
				  %% Line 1373
				  <'true'> when 'true' ->
				      let <_cor13> =
					  %% Line 1380
					  call 'erlang':'get_stacktrace'
					      ()
				      in  %% Line 1376
					  call 'error_logger':'format'
					      (%% Line 1377
					       [42|[42|[32|[100|[101|[116|[115|[58|[32|[66|[117|[103|[32|[119|[97|[115|[32|[102|[111|[117|[110|[100|[32|[119|[104|[101|[110|[32|[97|[99|[99|[101|[115|[115|[105|[110|[103|[32|[116|[97|[98|[108|[101|[32|[126|[119|[44|[126|[110|[42|[42|[32|[100|[101|[116|[115|[58|[32|[111|[112|[101|[114|[97|[116|[105|[111|[110|[32|[119|[97|[115|[32|[126|[112|[32|[97|[110|[100|[32|[114|[101|[112|[108|[121|[32|[119|[97|[115|[32|[126|[119|[46|[126|[110|[42|[42|[32|[100|[101|[116|[115|[58|[32|[83|[116|[97|[99|[107|[116|[114|[97|[99|[101|[58|[32|[126|[119|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 1380
																																																																																									   [_rec25|[_cor3|[Bad|[_cor13|[]]]]])
				  %% Line 1381
				  <'false'> when 'true' ->
				      %% Line 1382
				      call 'error_logger':'format'
					  (%% Line 1383
					   [42|[42|[32|[100|[101|[116|[115|[58|[32|[66|[117|[103|[32|[119|[97|[115|[32|[102|[111|[117|[110|[100|[32|[119|[104|[101|[110|[32|[97|[99|[99|[101|[115|[115|[105|[110|[103|[32|[116|[97|[98|[108|[101|[32|[126|[119|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 1384
																																							  [_rec25|[]])
				  ( <_cor14> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor14})
				    -| ['compiler_generated'] )
				end
				do  %% Line 1386
				    case <> of
				      %% Line 1387
				      <>
					  when try
						let <_cor15> =
						    call 'erlang':'self'
							()
						in  call 'erlang':'=/='
							(_cor2, _cor15)
					    of <Try> ->
						Try
					    catch <T,R> ->
						'false' ->
					  let <_cor16> =
					      %% Line 1388
					      call 'erlang':'self'
						  ()
					  in  do  %% Line 1388
						  call 'erlang':'!'
						      (_cor2, {_cor16,{'error',{'dets_bug',_rec25,_cor3,Bad}}})
						  'ok'
				      %% Line 1390
				      <> when 'true' ->
					  'ok'
				    end
				    %% Line 1393
				    apply 'open_file_loop'/2
					(_cor1, _cor0)
			-| ['compiler_generated'] )
		      ( <_cor116> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','head'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	    end
'apply_op'/4 =
    %% Line 1396
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1397
	case _cor3 of
	  %% Line 1398
	  <{'add_user',Tab,OpenArgs}> when 'true' ->
	      %% Line 1401
	      case OpenArgs of
		<{'open_args',Fname,Type,Keypos,_cor270,_cor271,_cor272,Ram,_cor273,_cor274,Access,Version,_cor275}> when 'true' ->
		    let <_cor8> =
			%% Line 1402
			call 'erlang':'=:='
			    (Version, 'default')
		    in  %% Line 1403
			( case _cor1 of
			    ( <( {'head',_cor276,_cor277,_cor278,_cor279,_cor280,_cor281,_cor282,_cor283,_cor284,_cor285,_cor286,_cor287,_cor288,_cor289,_cor290,_cor291,_cor292,_cor293,_cor294,_cor295,_cor296,_cor297,_cor298,_cor299,_cor300,_cor301,_cor302,_rec26,_cor303,_cor304,_cor305}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_cor7> =
				      call 'erlang':'=:='
					  (_rec26, Version)
				  in  let <VersionOK> =
					  call 'erlang':'or'
					      (_cor8, _cor7)
				      in  let <_cor33> =
					      %% Line 1405
					      case <> of
						%% Line 1406
						<>
						    when ( try
							    let <_cor15> =
								( call 'erlang':'=:='
								      (Tab, _cor300)
								  -| ['compiler_generated'] )
							    in  let <_cor18> =
								    %% Line 1407
								    ( call 'erlang':'=:='
									  (_cor285, Keypos)
								      -| ['compiler_generated'] )
								in  let <_cor20> =
									%% Line 1408
									( call 'erlang':'=:='
									      (_cor284, Type)
									  -| ['compiler_generated'] )
								    in  let <_cor22> =
									    %% Line 1409
									    ( call 'erlang':'=:='
										  (_cor299, Ram)
									      -| ['compiler_generated'] )
									in  let <_cor24> =
										%% Line 1410
										( call 'erlang':'=:='
										      (_cor298, Access)
										  -| ['compiler_generated'] )
									    in  let <_cor27> =
										    %% Line 1412
										    ( call 'erlang':'=:='
											  (Fname, _cor297)
										      -| ['compiler_generated'] )
										in  let <_cor28> =
											( call ( 'erlang'
												 -| ['compiler_generated'] ):( 'and'
															       -| ['compiler_generated'] )
											      (%% Line 1411
											       VersionOK, _cor27)
											  -| ['compiler_generated'] )
										    in  let <_cor29> =
											    ( call ( 'erlang'
												     -| ['compiler_generated'] ):( 'and'
																   -| ['compiler_generated'] )
												  (_cor24, _cor28)
											      -| ['compiler_generated'] )
											in  let <_cor30> =
												( call ( 'erlang'
													 -| ['compiler_generated'] ):( 'and'
																       -| ['compiler_generated'] )
												      (_cor22, _cor29)
												  -| ['compiler_generated'] )
											    in  let <_cor31> =
												    ( call ( 'erlang'
													     -| ['compiler_generated'] ):( 'and'
																	   -| ['compiler_generated'] )
													  (_cor20, _cor30)
												      -| ['compiler_generated'] )
												in  let <_cor32> =
													( call ( 'erlang'
														 -| ['compiler_generated'] ):( 'and'
																	       -| ['compiler_generated'] )
													      (_cor18, _cor31)
													  -| ['compiler_generated'] )
												    in  ( call ( 'erlang'
														 -| ['compiler_generated'] ):( 'and'
																	       -| ['compiler_generated'] )
													      (_cor15, _cor32)
													  -| ['compiler_generated'] )
							of <Try> ->
							    Try
							catch <T,R> ->
							    'false'
							-| ['compiler_generated'] ) ->
						    %% Line 1413
						    'ok'
						%% Line 1414
						<> when 'true' ->
						    %% Line 1415
						    apply 'err'/1
							({'error','incompatible_arguments'})
					      end
					  in  let <_cor35> =
						  %% Line 1417
						  call 'erlang':'self'
						      ()
					      in  do  %% Line 1417
						      call 'erlang':'!'
							  (_cor2, {_cor35,_cor33})
						      %% Line 1418
						      'ok'
			      -| ['compiler_generated'] )
			    ( <_cor306> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','head'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1419
	  <'auto_save'> when 'true' ->
	      %% Line 1420
	      ( case _cor1 of
		  ( <( {'head',_cor307,_cor308,_cor309,_cor310,_cor311,_cor312,_cor313,_cor314,_cor315,_cor316,_cor317,_cor318,_cor319,_cor320,_rec27,_cor321,_cor322,_cor323,_cor324,_cor325,_cor326,_cor327,_cor328,_cor329,_cor330,_cor331,_cor332,_cor333,_cor334,_cor335,_cor336}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec27 of
			  %% Line 1421
			  <'saved'> when 'true' ->
			      _cor1
			  %% Line 1423
			  <{'error',_X_Reason}> when 'true' ->
			      _cor1
			  %% Line 1425
			  <_X_Dirty>
			      when call 'erlang':'=:='
				    (_cor0,
				     0) ->
			      do  %% Line 1427
				  call 'dets_utils':'vformat'
				      ([42|[42|[32|[100|[101|[116|[115|[58|[32|[65|[117|[116|[111|[32|[115|[97|[118|[101|[32|[111|[102|[32|[126|[112|[10]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 1428
																						   [_cor330|[]])
				  %% Line 1429
				  case apply 'perform_save'/2
					   (_cor1, 'true') of
				    <{NewHead,_X_Res}> when 'true' ->
					do  %% Line 1430
					    call 'erlang':'garbage_collect'
						()
					    %% Line 1431
					    {0,NewHead}
				    ( <_cor40> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor40})
				      -| ['compiler_generated'] )
				  end
			  %% Line 1432
			  <'dirty'> when 'true' ->
			      do  %% Line 1434
				  apply 'start_auto_save_timer'/1
				      (_cor1)
				  %% Line 1435
				  {0,_cor1}
			  ( <_cor41> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor41})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor337> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1437
	  <'close'> when 'true' ->
	      let <_cor43> =
		  %% Line 1438
		  call 'erlang':'self'
		      ()
	      in  let <_cor42> =
		      %% Line 1438
		      apply 'fclose'/1
			  (_cor1)
		  in  do  %% Line 1438
			  call 'erlang':'!'
			      (_cor2, {_cor43,_cor42})
			  let <_X_NewHead> =
			      %% Line 1439
			      apply 'unlink_fixing_procs'/1
				  (_cor1)
			  in  %% Line 1441
			      call 'erlang':'exit'
				  ('normal')
	  %% Line 1442
	  <{'close',Pid}> when 'true' ->
	      let <NewHead> =
		  %% Line 1445
		  apply 'remove_fix'/3
		      (_cor1, Pid, 'close')
	      in  let <_cor47> =
		      %% Line 1446
		      call 'erlang':'self'
			  ()
		  in  let <_cor46> =
			  %% Line 1446
			  apply 'status'/1
			      (NewHead)
		      in  do  %% Line 1446
			      call 'erlang':'!'
				  (_cor2, {_cor47,_cor46})
			      %% Line 1447
			      NewHead
	  %% Line 1448
	  <{'corrupt',Reason}> when 'true' ->
	      %% Line 1449
	      case call 'dets_utils':'corrupt_reason'
		       (_cor1, Reason) of
		<{H2,Error}> when 'true' ->
		    let <_cor49> =
			%% Line 1450
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1450
			    call 'erlang':'!'
				(_cor2, {_cor49,Error})
			    %% Line 1451
			    H2
		( <_cor48> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor48})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1452
	  <{'delayed_write',WrTime}> when 'true' ->
	      %% Line 1453
	      apply 'delayed_write'/2
		  (_cor1, WrTime)
	  %% Line 1454
	  <'info'> when 'true' ->
	      %% Line 1455
	      case apply 'finfo'/1
		       (_cor1) of
		<{H2,Res}> when 'true' ->
		    let <_cor51> =
			%% Line 1456
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1456
			    call 'erlang':'!'
				(_cor2, {_cor51,Res})
			    %% Line 1457
			    H2
		( <_cor50> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor50})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1458
	  <{'info',Tag}> when 'true' ->
	      %% Line 1459
	      case apply 'finfo'/2
		       (_cor1, Tag) of
		<{H2,Res}> when 'true' ->
		    let <_cor53> =
			%% Line 1460
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1460
			    call 'erlang':'!'
				(_cor2, {_cor53,Res})
			    %% Line 1461
			    H2
		( <_cor52> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor52})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1462
	  <{'is_compatible_bchunk_format',Term}> when 'true' ->
	      let <Res> =
		  %% Line 1463
		  apply 'test_bchunk_format'/2
		      (_cor1, Term)
	      in  let <_cor55> =
		      %% Line 1464
		      call 'erlang':'self'
			  ()
		  in  do  %% Line 1464
			  call 'erlang':'!'
			      (_cor2, {_cor55,Res})
			  %% Line 1465
			  'ok'
	  %% Line 1466
	  <{'internal_open',Ref,Args}> when 'true' ->
	      %% Line 1468
	      ( case _cor1 of
		  ( <( {'head',_cor369,_cor370,_cor371,_cor372,_cor373,_cor374,_cor375,_cor376,_cor377,_cor378,_cor379,_cor380,_cor381,_cor382,_cor383,_cor384,_cor385,_cor386,_cor387,_cor388,_cor389,_cor390,_cor391,_cor392,_cor393,_rec29,_cor394,_cor395,_cor396,_cor397,_cor398}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'do_open_file'/4
				 (Args, _rec29, _cor394, Ref) of
			  %% Line 1469
			  <{'ok',H2}> when 'true' ->
			      let <_cor60> =
				  %% Line 1470
				  call 'erlang':'self'
				      ()
			      in  do  %% Line 1470
				      call 'erlang':'!'
					  (_cor2, {_cor60,'ok'})
				      %% Line 1471
				      H2
			  %% Line 1472
			  <Error> when 'true' ->
			      let <_cor61> =
				  %% Line 1473
				  call 'erlang':'self'
				      ()
			      in  do  %% Line 1473
				      call 'erlang':'!'
					  (_cor2, {_cor61,Error})
				      %% Line 1474
				      call 'erlang':'exit'
					  ('normal')
			end
		    -| ['compiler_generated'] )
		  ( <_cor399> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1476
	  <'may_grow'>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor67> =
				    ( call 'erlang':'element'
					  (16, _cor1)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=/='
					  (_cor67, 'saved')
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 1477
	      case <> of
		%% Line 1478
		<>
		    when ( try
			    ( case <> of
				( <>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_record'
									       -| ['compiler_generated'] )
					      (_cor1,
					       ( 'head'
						 -| ['compiler_generated'] ),
					       ( 32
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] ) ->
				      let <_cor73> =
					  ( call 'erlang':'element'
						(16, _cor1)
					    -| ['compiler_generated'] )
				      in  ( call 'erlang':'=:='
						(_cor73, 'dirty')
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    %% Line 1481
		    ( case _cor1 of
			( <( {'head',_cor431,_cor432,_cor433,_cor434,_cor435,_cor436,_cor437,_cor438,_cor439,_cor440,_cor441,_cor442,_cor443,_cor444,_cor445,_cor446,_cor447,_cor448,_cor449,_cor450,_cor451,_cor452,_cor453,_cor454,_cor455,_cor456,_cor457,_cor458,_rec31,_cor459,_cor460}
			     -| ['compiler_generated'] )> when 'true' ->
			      case call _rec31:'may_grow'
				       (_cor1, 0, 'many_times') of
				<{H2,_X_Res}> when 'true' ->
				    let <_cor78> =
					%% Line 1482
					call 'erlang':'+'
					    (_cor0, 1)
				    in  %% Line 1482
					{_cor78,H2}
				( <_cor77> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor77})
				  -| ['compiler_generated'] )
			      end
			  -| ['compiler_generated'] )
			( <_cor461> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','head'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 1483
		<> when 'true' ->
		    %% Line 1484
		    'ok'
	      end
	  %% Line 1486
	  <{'set_verbose',What}> when 'true' ->
	      do  %% Line 1487
		  apply 'set_verbose'/1
		      (What)
		  let <_cor79> =
		      %% Line 1488
		      call 'erlang':'self'
			  ()
		  in  do  %% Line 1488
			  call 'erlang':'!'
			      (_cor2, {_cor79,'ok'})
			  %% Line 1489
			  'ok'
	  %% Line 1490
	  <{'where',Object}> when 'true' ->
	      %% Line 1491
	      case apply 'where_is_object'/2
		       (_cor1, Object) of
		<{H2,Res}> when 'true' ->
		    let <_cor81> =
			%% Line 1492
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1492
			    call 'erlang':'!'
				(_cor2, {_cor81,Res})
			    %% Line 1493
			    H2
		( <_cor80> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor80})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1494
	  <_X_Message>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor86> =
				    ( call 'erlang':'element'
					  (16, _cor1)
				      -| ['compiler_generated'] )
				in  let <_cor87> =
					( call 'erlang':'element'
					      (1, _cor86)
					  -| ['compiler_generated'] )
				    in  ( call 'erlang':'=:='
					      (_cor87, 'error')
					  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      let <_cor90> =
		  %% Line 1495
		  call 'erlang':'self'
		      ()
	      in  let <_cor89> =
		      %% Line 1495
		      apply 'status'/1
			  (_cor1)
		  in  do  %% Line 1495
			  call 'erlang':'!'
			      (_cor2, {_cor90,_cor89})
			  %% Line 1496
			  'ok'
	  %% Line 1498
	  <{'bchunk_init',Tab}> when 'true' ->
	      %% Line 1499
	      case apply 'do_bchunk_init'/2
		       (_cor1, Tab) of
		<{H2,Res}> when 'true' ->
		    let <_cor92> =
			%% Line 1500
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1500
			    call 'erlang':'!'
				(_cor2, {_cor92,Res})
			    %% Line 1501
			    H2
		( <_cor91> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor91})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1502
	  <{'bchunk',State}> when 'true' ->
	      %% Line 1503
	      case apply 'do_bchunk'/2
		       (_cor1, State) of
		<{H2,Res}> when 'true' ->
		    let <_cor94> =
			%% Line 1504
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1504
			    call 'erlang':'!'
				(_cor2, {_cor94,Res})
			    %% Line 1505
			    H2
		( <_cor93> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor93})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1506
	  <'delete_all_objects'> when 'true' ->
	      %% Line 1507
	      case apply 'fdelete_all_objects'/1
		       (_cor1) of
		<{H2,Res}> when 'true' ->
		    let <_cor96> =
			%% Line 1508
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1508
			    call 'erlang':'!'
				(_cor2, {_cor96,Res})
			    do  %% Line 1509
				call 'erlang':'garbage_collect'
				    ()
				%% Line 1510
				{0,H2}
		( <_cor95> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor95})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1511
	  <{'delete_key',Keys}>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor101> =
				    ( call 'erlang':'element'
					  (16, _cor1)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=:='
					  (_cor101, 'dirty')
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 1512
	      case <> of
		%% Line 1513
		<>
		    when ( try
			    ( case <> of
				( <>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_record'
									       -| ['compiler_generated'] )
					      (_cor1,
					       ( 'head'
						 -| ['compiler_generated'] ),
					       ( 32
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] ) ->
				      let <_cor107> =
					  ( call 'erlang':'element'
						(29, _cor1)
					    -| ['compiler_generated'] )
				      in  ( call 'erlang':'=:='
						(_cor107, 8)
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    %% Line 1514
		    case apply 'fdelete_key'/2
			     (_cor1, Keys) of
		      <{H2,Res}> when 'true' ->
			  let <_cor110> =
			      %% Line 1515
			      call 'erlang':'self'
				  ()
			  in  do  %% Line 1515
				  call 'erlang':'!'
				      (_cor2, {_cor110,Res})
				  let <_cor111> =
				      %% Line 1516
				      call 'erlang':'+'
					  (_cor0, 1)
				  in  %% Line 1516
				      {_cor111,H2}
		      ( <_cor109> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor109})
			-| ['compiler_generated'] )
		    end
		%% Line 1517
		<> when 'true' ->
		    %% Line 1518
		    apply 'stream_op'/5
			(_cor3, _cor2, [], _cor1, _cor0)
	      end
	  %% Line 1520
	  <{'delete_object',Objs}>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor116> =
				    ( call 'erlang':'element'
					  (16, _cor1)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=:='
					  (_cor116, 'dirty')
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 1521
	      ( case _cor1 of
		  ( <( {'head',_cor462,_cor463,_cor464,_cor465,_cor466,_cor467,_cor468,_cor469,_cor470,_rec32,_cor471,_cor472,_cor473,_cor474,_cor475,_cor476,_cor477,_cor478,_cor479,_cor480,_cor481,_cor482,_cor483,_cor484,_cor485,_cor486,_cor487,_cor488,_cor489,_cor490,_cor491}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'check_objects'/2
				 (Objs, _rec32) of
			  %% Line 1522
			  <'true'>
			      when ( call 'erlang':'=:='
				      (_cor488,
				       8)
				  -| ['compiler_generated'] ) ->
			      %% Line 1523
			      case apply 'fdelete_object'/2
				       (_cor1, Objs) of
				<{H2,Res}> when 'true' ->
				    let <_cor127> =
					%% Line 1524
					call 'erlang':'self'
					    ()
				    in  do  %% Line 1524
					    call 'erlang':'!'
						(_cor2, {_cor127,Res})
					    let <_cor128> =
						%% Line 1525
						call 'erlang':'+'
						    (_cor0, 1)
					    in  %% Line 1525
						{_cor128,H2}
				( <_cor126> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor126})
				  -| ['compiler_generated'] )
			      end
			  %% Line 1526
			  <'true'> when 'true' ->
			      %% Line 1527
			      apply 'stream_op'/5
				  (_cor3, _cor2, [], _cor1, _cor0)
			  %% Line 1528
			  <'false'> when 'true' ->
			      let <_cor129> =
				  %% Line 1529
				  call 'erlang':'self'
				      ()
			      in  do  %% Line 1529
				      call 'erlang':'!'
					  (_cor2, {_cor129,'badarg'})
				      %% Line 1530
				      'ok'
			  ( <_cor130> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor130})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor492> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1532
	  <'first'> when 'true' ->
	      %% Line 1533
	      case apply 'ffirst'/1
		       (_cor1) of
		<{H2,Res}> when 'true' ->
		    let <_cor132> =
			%% Line 1534
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1534
			    call 'erlang':'!'
				(_cor2, {_cor132,Res})
			    %% Line 1535
			    H2
		( <_cor131> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor131})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1536
	  <{'initialize',InitFun,Format,MinNoSlots}> when 'true' ->
	      %% Line 1537
	      case apply 'finit'/4
		       (_cor1, InitFun, Format, MinNoSlots) of
		<{H2,Res}> when 'true' ->
		    let <_cor134> =
			%% Line 1538
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1538
			    call 'erlang':'!'
				(_cor2, {_cor134,Res})
			    do  %% Line 1539
				call 'erlang':'garbage_collect'
				    ()
				%% Line 1540
				H2
		( <_cor133> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor133})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1541
	  <{'insert',Objs}>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor139> =
				    ( call 'erlang':'element'
					  (16, _cor1)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=:='
					  (_cor139, 'dirty')
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 1542
	      ( case _cor1 of
		  ( <( {'head',_cor493,_cor494,_cor495,_cor496,_cor497,_cor498,_cor499,_cor500,_cor501,_rec33,_cor502,_cor503,_cor504,_cor505,_cor506,_cor507,_cor508,_cor509,_cor510,_cor511,_cor512,_cor513,_cor514,_cor515,_cor516,_cor517,_cor518,_cor519,_cor520,_cor521,_cor522}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'check_objects'/2
				 (Objs, _rec33) of
			  %% Line 1543
			  <'true'>
			      when ( call 'erlang':'=:='
				      (_cor519,
				       8)
				  -| ['compiler_generated'] ) ->
			      %% Line 1544
			      case apply 'finsert'/2
				       (_cor1, Objs) of
				<{H2,Res}> when 'true' ->
				    let <_cor150> =
					%% Line 1545
					call 'erlang':'self'
					    ()
				    in  do  %% Line 1545
					    call 'erlang':'!'
						(_cor2, {_cor150,Res})
					    let <_cor151> =
						%% Line 1546
						call 'erlang':'+'
						    (_cor0, 1)
					    in  %% Line 1546
						{_cor151,H2}
				( <_cor149> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor149})
				  -| ['compiler_generated'] )
			      end
			  %% Line 1547
			  <'true'> when 'true' ->
			      %% Line 1548
			      apply 'stream_op'/5
				  (_cor3, _cor2, [], _cor1, _cor0)
			  %% Line 1549
			  <'false'> when 'true' ->
			      let <_cor152> =
				  %% Line 1550
				  call 'erlang':'self'
				      ()
			      in  do  %% Line 1550
				      call 'erlang':'!'
					  (_cor2, {_cor152,'badarg'})
				      %% Line 1551
				      'ok'
			  ( <_cor153> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor153})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor523> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1553
	  <{'insert_new',Objs}>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor158> =
				    ( call 'erlang':'element'
					  (16, _cor1)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=:='
					  (_cor158, 'dirty')
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 1554
	      case apply 'finsert_new'/2
		       (_cor1, Objs) of
		<{H2,Res}> when 'true' ->
		    let <_cor161> =
			%% Line 1555
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1555
			    call 'erlang':'!'
				(_cor2, {_cor161,Res})
			    let <_cor162> =
				%% Line 1556
				call 'erlang':'+'
				    (_cor0, 1)
			    in  %% Line 1556
				{_cor162,H2}
		( <_cor160> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor160})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1557
	  <{'lookup_keys',Keys}>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor167> =
				    ( call 'erlang':'element'
					  (29, _cor1)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=:='
					  (_cor167, 8)
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 1558
	      case apply 'flookup_keys'/2
		       (_cor1, Keys) of
		<{H2,Res}> when 'true' ->
		    let <_cor170> =
			%% Line 1559
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1559
			    call 'erlang':'!'
				(_cor2, {_cor170,Res})
			    %% Line 1560
			    H2
		( <_cor169> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor169})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1561
	  <{'lookup_keys',_X_Keys}> when 'true' ->
	      %% Line 1562
	      apply 'stream_op'/5
		  (_cor3, _cor2, [], _cor1, _cor0)
	  %% Line 1563
	  <{'match_init',State,Safe}> when 'true' ->
	      %% Line 1564
	      case apply 'fmatch_init'/2
		       (_cor1, State) of
		<{H1,Res}> when 'true' ->
		    let <_cor173> =
			%% Line 1565
			case Res of
			  %% Line 1566
			  <{'cont',_cor524}> when 'true' ->
			      H1
			  %% Line 1567
			  <_cor525>
			      when call 'erlang':'=:='
				    (Safe,
				     'no_safe') ->
			      H1
			  %% Line 1568
			  <_cor526>
			      when call 'erlang':'=:='
				    (Safe,
				     'safe') ->
			      apply 'do_safe_fixtable'/3
				  (H1, _cor2, 'false')
			  ( <_cor172> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor172})
			    -| ['compiler_generated'] )
			end
		    in  let <_cor175> =
			    %% Line 1570
			    call 'erlang':'self'
				()
			in  do  %% Line 1570
				call 'erlang':'!'
				    (_cor2, {_cor175,Res})
				_cor173
		( <_cor171> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor171})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1572
	  <{'match',MP,Spec,NObjs,Safe}> when 'true' ->
	      %% Line 1573
	      case apply 'fmatch'/6
		       (_cor1, MP, Spec, NObjs, Safe, _cor2) of
		<{H2,Res}> when 'true' ->
		    let <_cor177> =
			%% Line 1574
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1574
			    call 'erlang':'!'
				(_cor2, {_cor177,Res})
			    %% Line 1575
			    H2
		( <_cor176> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor176})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1576
	  <{'member',Key}>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor182> =
				    ( call 'erlang':'element'
					  (29, _cor1)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=:='
					  (_cor182, 8)
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 1577
	      case apply 'fmember'/2
		       (_cor1, Key) of
		<{H2,Res}> when 'true' ->
		    let <_cor185> =
			%% Line 1578
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1578
			    call 'erlang':'!'
				(_cor2, {_cor185,Res})
			    %% Line 1579
			    H2
		( <_cor184> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor184})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1580
	  <_cor527 = {'member',_X_Key}>
	      when call 'erlang':'=:='
		    (_cor527,
		     _cor3) ->
	      %% Line 1581
	      apply 'stream_op'/5
		  (_cor3, _cor2, [], _cor1, _cor0)
	  %% Line 1582
	  <{'next',Key}> when 'true' ->
	      %% Line 1583
	      case apply 'fnext'/2
		       (_cor1, Key) of
		<{H2,Res}> when 'true' ->
		    let <_cor187> =
			%% Line 1584
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1584
			    call 'erlang':'!'
				(_cor2, {_cor187,Res})
			    %% Line 1585
			    H2
		( <_cor186> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor186})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1586
	  <{'match_delete',State}>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor192> =
				    ( call 'erlang':'element'
					  (16, _cor1)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=:='
					  (_cor192, 'dirty')
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 1587
	      case apply 'fmatch_delete'/2
		       (_cor1, State) of
		<{H1,Res}> when 'true' ->
		    let <_cor196> =
			%% Line 1588
			case Res of
			  %% Line 1589
			  <{'cont',_X_S,_X_N}> when 'true' ->
			      H1
			  %% Line 1590
			  <_cor528> when 'true' ->
			      apply 'do_safe_fixtable'/3
				  (H1, _cor2, 'false')
			end
		    in  let <_cor198> =
			    %% Line 1592
			    call 'erlang':'self'
				()
			in  do  %% Line 1592
				call 'erlang':'!'
				    (_cor2, {_cor198,Res})
				let <_cor199> =
				    %% Line 1593
				    call 'erlang':'+'
					(_cor0, 1)
				in  %% Line 1593
				    {_cor199,_cor196}
		( <_cor194> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor194})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1594
	  <{'match_delete_init',MP,Spec}>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor204> =
				    ( call 'erlang':'element'
					  (16, _cor1)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=:='
					  (_cor204, 'dirty')
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 1595
	      case apply 'fmatch_delete_init'/4
		       (_cor1, MP, Spec, _cor2) of
		<{H2,Res}> when 'true' ->
		    let <_cor207> =
			%% Line 1596
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1596
			    call 'erlang':'!'
				(_cor2, {_cor207,Res})
			    let <_cor208> =
				%% Line 1597
				call 'erlang':'+'
				    (_cor0, 1)
			    in  %% Line 1597
				{_cor208,H2}
		( <_cor206> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor206})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1598
	  <{'safe_fixtable',Bool}> when 'true' ->
	      let <NewHead> =
		  %% Line 1599
		  apply 'do_safe_fixtable'/3
		      (_cor1, _cor2, Bool)
	      in  let <_cor210> =
		      %% Line 1600
		      call 'erlang':'self'
			  ()
		  in  do  %% Line 1600
			  call 'erlang':'!'
			      (_cor2, {_cor210,'ok'})
			  %% Line 1601
			  NewHead
	  %% Line 1602
	  <{'slot',Slot}> when 'true' ->
	      %% Line 1603
	      case apply 'fslot'/2
		       (_cor1, Slot) of
		<{H2,Res}> when 'true' ->
		    let <_cor212> =
			%% Line 1604
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1604
			    call 'erlang':'!'
				(_cor2, {_cor212,Res})
			    %% Line 1605
			    H2
		( <_cor211> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor211})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1606
	  <'sync'> when 'true' ->
	      %% Line 1607
	      case apply 'perform_save'/2
		       (_cor1, 'true') of
		<{NewHead,Res}> when 'true' ->
		    let <_cor214> =
			%% Line 1608
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1608
			    call 'erlang':'!'
				(_cor2, {_cor214,Res})
			    do  %% Line 1609
				call 'erlang':'garbage_collect'
				    ()
				%% Line 1610
				{0,NewHead}
		( <_cor213> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor213})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1611
	  <{'update_counter',Key,Incr}>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor219> =
				    ( call 'erlang':'element'
					  (16, _cor1)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=:='
					  (_cor219, 'dirty')
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 1612
	      case apply 'do_update_counter'/3
		       (_cor1, Key, Incr) of
		<{NewHead,Res}> when 'true' ->
		    let <_cor222> =
			%% Line 1613
			call 'erlang':'self'
			    ()
		    in  do  %% Line 1613
			    call 'erlang':'!'
				(_cor2, {_cor222,Res})
			    let <_cor223> =
				%% Line 1614
				call 'erlang':'+'
				    (_cor0, 1)
			    in  %% Line 1614
				{_cor223,NewHead}
		( <_cor221> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor221})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1615
	  <WriteOp>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor228> =
				    ( call 'erlang':'element'
					  (16, _cor1)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=:='
					  (_cor228, 'new_dirty')
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 1616
	      case _cor1 of
		<{'head',_cor529,_cor530,_cor531,_cor532,_cor533,_cor534,_cor535,_cor536,_cor537,_cor538,_cor539,_cor540,_cor541,_cor542,_cor543,_cor544,_cor545,_cor546,_cor547,_cor548,_cor549,_cor550,_cor551,_cor552,_cor553,_cor554,_cor555,_cor556,_cor557,_cor558,_cor559}> when 'true' ->
		    let <_cor232> =
			call 'erlang':'setelement'
			    (16, _cor1, 'dirty')
		    in  %% Line 1617
			apply 'apply_op'/4
			    (WriteOp, _cor2, _cor232, 0)
		( <_cor560> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','head'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 1618
	  <WriteOp>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor1,
					 ( 'head'
					   -| ['compiler_generated'] ),
					 ( 32
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor238> =
				    ( call 'erlang':'element'
					  (24, _cor1)
				      -| ['compiler_generated'] )
				in  let <_cor239> =
					( call 'erlang':'=:='
					      (_cor238, 'read_write')
					  -| ['compiler_generated'] )
				    in  let <_cor241> =
					    %% Line 1619
					    ( call 'erlang':'element'
						  (16, _cor1)
					      -| ['compiler_generated'] )
					in  let <_cor242> =
						%% Line 1619
						( call 'erlang':'=:='
						      (_cor241, 'saved')
						  -| ['compiler_generated'] )
					    in  ( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'and'
										       -| ['compiler_generated'] )
						      (_cor239, _cor242)
						  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      let <_cor245> =
		  catch
		      %% Line 1620
		      ( case _cor1 of
			  ( <( {'head',_cor561,_cor562,_cor563,_cor564,_cor565,_cor566,_cor567,_cor568,_cor569,_cor570,_cor571,_cor572,_cor573,_cor574,_cor575,_cor576,_cor577,_cor578,_cor579,_cor580,_cor581,_cor582,_cor583,_cor584,_cor585,_cor586,_cor587,_cor588,_rec35,_cor589,_cor590}
			       -| ['compiler_generated'] )> when 'true' ->
				call _rec35:'mark_dirty'
				    (_cor1)
			    -| ['compiler_generated'] )
			  ( <_cor591> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','head'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	      in  %% Line 1620
		  case _cor245 of
		    %% Line 1621
		    <'ok'> when 'true' ->
			do  %% Line 1622
			    apply 'start_auto_save_timer'/1
				(_cor1)
			    %% Line 1623
			    case _cor1 of
			      <{'head',_cor592,_cor593,_cor594,_cor595,_cor596,_cor597,_cor598,_cor599,_cor600,_cor601,_cor602,_cor603,_cor604,_cor605,_cor606,_cor607,_cor608,_cor609,_cor610,_cor611,_cor612,_cor613,_cor614,_cor615,_cor616,_cor617,_cor618,_cor619,_cor620,_cor621,_cor622}> when 'true' ->
				  let <_cor248> =
				      call 'erlang':'setelement'
					  (16, _cor1, 'dirty')
				  in  %% Line 1624
				      apply 'apply_op'/4
					  (WriteOp, _cor2, _cor248, 0)
			      ( <_cor623> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','head'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
		    %% Line 1625
		    <{NewHead = {'head',_cor624,_cor625,_cor626,_cor627,_cor628,_cor629,_cor630,_cor631,_cor632,_cor633,_cor634,_cor635,_cor636,_cor637,_cor638,_cor639,_cor640,_cor641,_cor642,_cor643,_cor644,_cor645,_cor646,_cor647,_cor648,_cor649,_cor650,_cor651,_cor652,_cor653,_cor654},Error}> when ( 'true'
																																						-| ['compiler_generated'] ) ->
			let <_cor250> =
			    %% Line 1626
			    call 'erlang':'self'
				()
			in  do  %% Line 1626
				call 'erlang':'!'
				    (_cor2, {_cor250,Error})
				%% Line 1627
				NewHead
		    ( <_cor251> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor251})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1629
	  <WriteOp>
	      when try
		    let <_cor252> =
			call 'erlang':'is_tuple'
			    (_cor3)
		    in  ( case <> of
			    ( <>
				  when ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'is_record'
									   -| ['compiler_generated'] )
					  (_cor1,
					   ( 'head'
					     -| ['compiler_generated'] ),
					   ( 32
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] ) ->
				  let <_cor257> =
				      ( call 'erlang':'element'
					    (24, _cor1)
					-| ['compiler_generated'] )
				  in  let <_cor258> =
					  ( call 'erlang':'=:='
						(_cor257, 'read')
					    -| ['compiler_generated'] )
				      in  ( call 'erlang':'and'
						(_cor252, _cor258)
					    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <> when 'true' ->
				  'false'
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1630
	      ( case _cor1 of
		  ( <( {'head',_cor655,_cor656,_cor657,_cor658,_cor659,_cor660,_cor661,_cor662,_cor663,_cor664,_cor665,_cor666,_cor667,_cor668,_cor669,_cor670,_cor671,_cor672,_cor673,_cor674,_cor675,_rec37,_cor676,_cor677,_cor678,_cor679,_cor680,_cor681,_cor682,_cor683,_cor684}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Reason> = {'access_mode',_rec37}
			in  let <_cor264> =
				%% Line 1631
				call 'erlang':'self'
				    ()
			    in  let <_cor263> =
				    %% Line 1631
				    apply 'err'/1
					({'error',Reason})
				in  do  %% Line 1631
					call 'erlang':'!'
					    (_cor2, {_cor264,_cor263})
					%% Line 1632
					'ok'
		    -| ['compiler_generated'] )
		  ( <_cor685> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor265> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor265})
	    -| ['compiler_generated'] )
	end
'start_auto_save_timer'/1 =
    %% Line 1635
    fun (_cor0) ->
	case _cor0 of
	  <Head = {'head',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44}>
	      when call 'erlang':'=:='
		    (_cor27,
		     'infinity') ->
	      %% Line 1636
	      'ok'
	  %% Line 1637
	  <Head> when 'true' ->
	      %% Line 1638
	      ( case Head of
		  ( <( {'head',_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_rec38,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor11> =
			    %% Line 1639
			    call 'erlang':'self'
				()
			in  let <_cor10> =
				%% Line 1639
				call 'erlang':'self'
				    ()
			    in  do  %% Line 1639
				    call 'erlang':'send_after'
					(_rec38, _cor11, {'$dets_call',_cor10,'auto_save'})
				    %% Line 1640
				    'ok'
		    -| ['compiler_generated'] )
		  ( <_cor75> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'stream_op'/5 =
    %% Line 1645
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1646
	case _cor1 of
	  <{'head',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,M,Fxd,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39}> when 'true' ->
	      %% Line 1647
	      apply 'stream_op'/8
		  (_cor1, _cor2, [], _cor0, _cor3, _cor4, Fxd, M)
	  ( <_cor5> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor5})
	    -| ['compiler_generated'] )
	end
'stream_loop'/6 =
    %% Line 1649
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Head,Pids,C,N,Fxd = 'false',M> when 'true' ->
	      %% Line 1650
	      receive
		%% Line 1651
		<{'$dets_call',From,Message}> when 'true' ->
		    %% Line 1652
		    apply 'stream_op'/8
			(Head, Pids, C, N, From, Message, Fxd, M)
	      after %% Line 1653
		    0 ->
		%% Line 1654
		apply 'stream_end'/5
		    (Head, Pids, C, N, 'no_more')
	  %% Line 1656
	  <Head,Pids,C,N,_X_Fxd,_X_M> when 'true' ->
	      %% Line 1657
	      apply 'stream_end'/5
		  (Head, Pids, C, N, 'no_more')
	end
'stream_op'/8 =
    %% Line 1659
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Head,Pids,C,N,Pid,{'lookup_keys',Keys},Fxd,M> when 'true' ->
	      let <NC> =
		  %% Line 1660
		  [{{'lookup',Pid},Keys}|C]
	      in  %% Line 1661
		  apply 'stream_loop'/6
		      (Head, Pids, NC, N, Fxd, M)
	  %% Line 1662
	  <Head,Pids,C,N,Pid,Op = {'insert',_X_Objects},Fxd,M = 'dirty'> when 'true' ->
	      let <NC> =
		  %% Line 1663
		  [Op|C]
	      in  %% Line 1664
		  apply 'stream_loop'/6
		      (Head, [Pid|Pids], NC, N, Fxd, M)
	  %% Line 1665
	  <Head,Pids,C,N,Pid,Op = {'delete_key',_X_Keys},Fxd,M = 'dirty'> when 'true' ->
	      let <NC> =
		  %% Line 1666
		  [Op|C]
	      in  %% Line 1667
		  apply 'stream_loop'/6
		      (Head, [Pid|Pids], NC, N, Fxd, M)
	  %% Line 1668
	  <Head,Pids,C,N,Pid,Op = {'delete_object',_X_Os},Fxd,M = 'dirty'> when 'true' ->
	      let <NC> =
		  %% Line 1669
		  [Op|C]
	      in  %% Line 1670
		  apply 'stream_loop'/6
		      (Head, [Pid|Pids], NC, N, Fxd, M)
	  %% Line 1671
	  <Head,Pids,C,N,Pid,{'member',Key},Fxd,M> when 'true' ->
	      let <NC> =
		  %% Line 1672
		  [{{'lookup',[Pid|[]]},[Key|[]]}|C]
	      in  %% Line 1673
		  apply 'stream_loop'/6
		      (Head, Pids, NC, N, Fxd, M)
	  %% Line 1674
	  <Head,Pids,C,N,Pid,Op,_X_Fxd,_X_M> when 'true' ->
	      %% Line 1675
	      apply 'stream_end'/5
		  (Head, Pids, C, N, {Pid,Op})
	end
'stream_end'/5 =
    %% Line 1677
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    catch
		let <_cor5> =
		    %% Line 1678
		    call 'lists':'reverse'
			(_cor2)
		in  %% Line 1678
		    apply 'update_cache'/2
			(_cor4, _cor5)
	in  %% Line 1678
	    case _cor6 of
	      %% Line 1679
	      <{Head1,[],PwriteList}> when 'true' ->
		  %% Line 1680
		  apply 'stream_end1'/6
		      (_cor3, _cor0, _cor1, _cor2, Head1, PwriteList)
	      %% Line 1681
	      <{Head1,Found,PwriteList}> when 'true' ->
		  let <_X_> =
		      %% Line 1689
		      apply 'lookup_replies'/1
			  (Found)
		  in  %% Line 1690
		      apply 'stream_end1'/6
			  (_cor3, _cor0, _cor1, _cor2, Head1, PwriteList)
	      %% Line 1691
	      <Head1 = {'head',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53}> when ( 'true'
																																 -| ['compiler_generated'] ) ->
		  %% Line 1692
		  apply 'stream_end2'/7
		      (_cor3, _cor3, _cor0, _cor1, _cor2, Head1, 'ok')
	      %% Line 1693
	      <{Head1 = {'head',_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84},Error}> when ( 'true'
																																	 -| ['compiler_generated'] ) ->
		  let <Fun> =
		      %% Line 1695
		      ( fun (_cor9,_cor8) ->
			    case <_cor9,_cor8> of
			      <{{'lookup',[Pid|[]]},_X_Keys},L> when 'true' ->
				  [Pid|L]
			      %% Line 1696
			      <{{'lookup',Pid},_X_Keys},L> when 'true' ->
				  [Pid|L]
			      %% Line 1697
			      <_cor85,L> when 'true' ->
				  L
			    end
			-| [{'id',{0,0,'-stream_end/5-fun-0-'}}] )
		  in  let <LPs0> =
			  %% Line 1699
			  call 'lists':'foldl'
			      (Fun, [], _cor2)
		      in  let <_cor14> =
			      %% Line 1700
			      call 'lists':'flatten'
				  (LPs0)
			  in  let <LPs> =
				  %% Line 1700
				  call 'lists':'usort'
				      (_cor14)
			      in  let <_cor16> =
				      %% Line 1701
				      call 'erlang':'++'
					  (_cor3, LPs)
				  in  %% Line 1701
				      apply 'stream_end2'/7
					  (_cor16, _cor3, _cor0, _cor1, _cor2, Head1, Error)
	      %% Line 1702
	      <DetsError> when 'true' ->
		  %% Line 1703
		  call 'erlang':'throw'
		      (DetsError)
	    end
'stream_end1'/6 =
    %% Line 1706
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Pids,Next,N,C,Head,[]> when 'true' ->
	      %% Line 1707
	      apply 'stream_end2'/7
		  (Pids, Pids, Next, N, C, Head, 'ok')
	  %% Line 1708
	  <Pids,Next,N,C,Head,PwriteList> when 'true' ->
	      let <_cor6> =
		  catch
		      %% Line 1709
		      call 'dets_utils':'pwrite'
			  (Head, PwriteList)
	      in  %% Line 1709
		  case _cor6 of
		    <{Head1,PR}> when 'true' ->
			%% Line 1710
			apply 'stream_end2'/7
			    (Pids, Pids, Next, N, C, Head1, PR)
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor7})
		      -| ['compiler_generated'] )
		  end
	end
'stream_end2'/7 =
    %% Line 1712
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[Pid|Pids],Ps,Next,N,C,Head,Reply> when 'true' ->
	      let <_cor7> =
		  %% Line 1713
		  call 'erlang':'self'
		      ()
	      in  do  %% Line 1713
		      call 'erlang':'!'
			  (Pid, {_cor7,Reply})
		      let <_cor8> =
			  %% Line 1714
			  call 'erlang':'+'
			      (N, 1)
		      in  %% Line 1714
			  apply 'stream_end2'/7
			      (Pids, Ps, Next, _cor8, C, Head, Reply)
	  %% Line 1715
	  <[],Ps,'no_more',N,C,Head,_X_Reply> when 'true' ->
	      do  %% Line 1716
		  apply 'penalty'/3
		      (Head, Ps, C)
		  %% Line 1717
		  {N,Head}
	  %% Line 1718
	  <[],_X_Ps,{From,Op},N,_X_C,Head,_X_Reply> when 'true' ->
	      %% Line 1719
	      {{'more',From,Op,N},Head}
	  ( <_cor15,_cor14,_cor13,_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13,_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'stream_end2',7}}] )
	    -| ['compiler_generated'] )
	end
'penalty'/3 =
    %% Line 1721
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <H = {'head',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42},_X_Ps,_X_C>
	      when call 'erlang':'=:='
		    (_cor27,
		     'false') ->
	      %% Line 1722
	      'ok'
	  %% Line 1723
	  <_X_H,_X_Ps,[{{'lookup',_X_Pids},_X_Keys}|[]]> when 'true' ->
	      %% Line 1724
	      'ok'
	  %% Line 1725
	  <{'head',_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,{_cor58,[{Pid,_cor59}|[]]},_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74},[_cor75|[]],_X_C>
	      when call 'erlang':'=:='
		    (_cor75,
		     Pid) ->
	      %% Line 1726
	      'ok'
	  %% Line 1727
	  <_X_H,_X_Ps,_X_C> when 'true' ->
	      %% Line 1728
	      call 'timer':'sleep'
		  (1)
	end
'lookup_replies'/1 =
    %% Line 1730
    fun (_cor0) ->
	case _cor0 of
	  <[{P,O}|[]]> when 'true' ->
	      %% Line 1743
	      ( case <P,O> of
		  ( <( [_fol335|( []
				  -| ['compiler_generated'] )]
		       -| ['compiler_generated'] ),_fol336> when ( 'true'
								   -| ['compiler_generated'] ) ->
			( let <_cor3> =
			      %% Line 1744
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'self'
								     -| ['compiler_generated'] )
				    ()
				-| ['compiler_generated'] )
			  in  ( let <_cor2> =
				    %% Line 1744
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( '=/='
									   -| ['compiler_generated'] )
					  (_fol336, ( []
						      -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				in  %% Line 1744
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( '!'
									   -| ['compiler_generated'] )
					  (_fol335, ( {( _cor3
							 -| ['compiler_generated'] ),( _cor2
										       -| ['compiler_generated'] )}
						      -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  %% Line 1745
		  ( <_fol337,_fol338> when ( 'true'
					     -| ['compiler_generated'] ) ->
			( let <_cor4> =
			      %% Line 1746
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'self'
								     -| ['compiler_generated'] )
				    ()
				-| ['compiler_generated'] )
			  in  %% Line 1746
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( '!'
								     -| ['compiler_generated'] )
				    (_fol337, ( {( _cor4
						   -| ['compiler_generated'] ),_fol338}
						-| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1732
	  <Q> when 'true' ->
	      %% Line 1733
	      case call 'dets_utils':'family'
		       (Q) of
		<[{P,O}|L]> when 'true' ->
		    let <_cor2> =
			%% Line 1734
			call 'lists':'append'
			    (O)
		    in  %% Line 1734
			apply 'lookup_replies'/3
			    (P, _cor2, L)
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor1})
		  -| ['compiler_generated'] )
	      end
	end
'lookup_replies'/3 =
    %% Line 1736
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <P,O,[]> when 'true' ->
	      %% Line 1743
	      ( case <P,O> of
		  ( <( [_fol339|( []
				  -| ['compiler_generated'] )]
		       -| ['compiler_generated'] ),_fol340> when ( 'true'
								   -| ['compiler_generated'] ) ->
			( let <_cor3> =
			      %% Line 1744
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'self'
								     -| ['compiler_generated'] )
				    ()
				-| ['compiler_generated'] )
			  in  ( let <_cor2> =
				    %% Line 1744
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( '=/='
									   -| ['compiler_generated'] )
					  (_fol340, ( []
						      -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				in  %% Line 1744
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( '!'
									   -| ['compiler_generated'] )
					  (_fol339, ( {( _cor3
							 -| ['compiler_generated'] ),( _cor2
										       -| ['compiler_generated'] )}
						      -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  %% Line 1745
		  ( <_fol341,_fol342> when ( 'true'
					     -| ['compiler_generated'] ) ->
			( let <_cor4> =
			      %% Line 1746
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'self'
								     -| ['compiler_generated'] )
				    ()
				-| ['compiler_generated'] )
			  in  %% Line 1746
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( '!'
								     -| ['compiler_generated'] )
				    (_fol341, ( {( _cor4
						   -| ['compiler_generated'] ),_fol342}
						-| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1738
	  <P,O,[{P2,O2}|L]> when 'true' ->
	      let <_X_> =
		  %% Line 1743
		  ( case <P,O> of
		      ( <( [_fol345|( []
				      -| ['compiler_generated'] )]
			   -| ['compiler_generated'] ),_fol346> when ( 'true'
								       -| ['compiler_generated'] ) ->
			    ( let <_cor3> =
				  %% Line 1744
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'self'
									 -| ['compiler_generated'] )
					()
				    -| ['compiler_generated'] )
			      in  ( let <_fol347> =
					%% Line 1744
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( '=/='
									       -| ['compiler_generated'] )
					      (_fol346, ( []
							  -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    in  %% Line 1744
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( '!'
									       -| ['compiler_generated'] )
					      (_fol345, ( {( _cor3
							     -| ['compiler_generated'] ),_fol347}
							  -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		      %% Line 1745
		      ( <_fol348,_fol349> when ( 'true'
						 -| ['compiler_generated'] ) ->
			    ( let <_cor4> =
				  %% Line 1746
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'self'
									 -| ['compiler_generated'] )
					()
				    -| ['compiler_generated'] )
			      in  %% Line 1746
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( '!'
									 -| ['compiler_generated'] )
					(_fol348, ( {( _cor4
						       -| ['compiler_generated'] ),_fol349}
						    -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      in  let <_cor4> =
		      %% Line 1740
		      call 'lists':'append'
			  (O2)
		  in  %% Line 1740
		      apply 'lookup_replies'/3
			  (P2, _cor4, L)
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'lookup_replies',3}}] )
	    -| ['compiler_generated'] )
	end
'lookup_reply'/2 =
    %% Line 1743
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[P|[]],O> when 'true' ->
	      let <_cor3> =
		  %% Line 1744
		  call 'erlang':'self'
		      ()
	      in  let <_cor2> =
		      %% Line 1744
		      call 'erlang':'=/='
			  (O, [])
		  in  %% Line 1744
		      call 'erlang':'!'
			  (P, {_cor3,_cor2})
	  %% Line 1745
	  <P,O> when 'true' ->
	      let <_cor4> =
		  %% Line 1746
		  call 'erlang':'self'
		      ()
	      in  %% Line 1746
		  call 'erlang':'!'
		      (P, {_cor4,O})
	end
'system_continue'/3 =
    %% Line 1751
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1752
	apply 'open_file_loop'/1
	    (_cor0)
'system_terminate'/4 =
    %% Line 1754
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_X_NewHead> =
	    %% Line 1755
	    apply 'do_stop'/1
		(_cor0)
	in  %% Line 1756
	    call 'erlang':'exit'
		(_cor3)
'system_code_change'/4 =
    %% Line 1761
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1762
	{'ok',_cor3}
'read_file_header'/3 =
    %% Line 1770
    fun (_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 1771
	    case <> of
	      %% Line 1772
	      <>
		  when call 'erlang':'=:='
			(_cor0,
			 'true') ->
		  %% Line 1773
		  case call 'file':'read_file'
			   (_cor2) of
		    %% Line 1774
		    <{'ok',B}> when 'true' ->
			B
		    %% Line 1775
		    <Err> when 'true' ->
			call 'dets_utils':'file_error'
			    (_cor2, Err)
		  end
	      %% Line 1777
	      <> when 'true' ->
		  _cor2
	    end
	in  let <_cor6> =
		%% Line 1780
		apply 'open_args'/2
		    (_cor1, _cor0)
	    in  %% Line 1780
		case call 'dets_utils':'open'
			 (_cor4, _cor6) of
		  <{'ok',Fd}> when 'true' ->
		      %% Line 1781
		      case %% Line 1782
			   call 'dets_utils':'pread_close'
			       (Fd, _cor2, 16, 4) of
			<{'ok',#{#<Version>(32,1,'integer',['unsigned'|['big']])}#}> when 'true' ->
			    %% Line 1783
			    case <> of
			      %% Line 1784
			      <>
				  when call 'erlang':'=<'
					(Version,
					 8) ->
				  %% Line 1785
				  call 'dets_v8':'read_file_header'
				      (Fd, _cor2)
			      %% Line 1786
			      <>
				  when call 'erlang':'=:='
					(Version,
					 9) ->
				  %% Line 1787
				  call 'dets_v9':'read_file_header'
				      (Fd, _cor2)
			      %% Line 1788
			      <> when 'true' ->
				  let <_X_> =
				      %% Line 1789
				      ( call 'file':'close'
					    (Fd)
					-| ['result_not_wanted'] )
				  in  %% Line 1790
				      call 'erlang':'throw'
					  ({'error',{'not_a_dets_file',_cor2}})
			    end
			( <_cor8> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor8})
			  -| ['compiler_generated'] )
		      end
		  ( <_cor7> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor7})
		    -| ['compiler_generated'] )
		end
'fclose'/1 =
    %% Line 1793
    fun (_cor0) ->
	%% Line 1794
	case apply 'perform_save'/2
		 (_cor0, 'false') of
	  <{Head1,Res}> when 'true' ->
	      %% Line 1795
	      ( case Head1 of
		  ( <( {'head',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_rec39,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec39 of
			  %% Line 1796
			  <'true'> when 'true' ->
			      %% Line 1797
			      Res
			  %% Line 1798
			  <'false'> when 'true' ->
			      do  %% Line 1799
				  call 'dets_utils':'stop_disk_map'
				      ()
				  let <Res2> =
				      %% Line 1800
				      call 'file':'close'
					  (_cor12)
				  in  %% Line 1801
				      case <> of
					%% Line 1802
					<>
					    when call 'erlang':'=:='
						  (Res2,
						   'ok') ->
					    Res
					%% Line 1803
					<> when 'true' ->
					    Res2
				      end
			  ( <_cor7> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor7})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor39> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'perform_save'/2 =
    %% Line 1808
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Head = {'head',_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59},DoSync>
	      when let <_cor8> =
		    call 'erlang':'=:='
			(_cor43, 'dirty')
		in  let <_cor15> =
			%% Line 1809
			call 'erlang':'=:='
			    (_cor43, 'new_dirty')
		    in  ( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'or'
							       -| ['compiler_generated'] )
			      (_cor8, _cor15)
			  -| ['compiler_generated'] ) ->
	      let <_cor24> =
		  catch
		      %% Line 1811
		      case apply 'write_cache'/1
			       (Head) of
			<{Head1,[]}> when 'true' ->
			    %% Line 1812
			    ( case Head1 of
				( <( {'head',_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_rec41,_cor88,_cor89}
				     -| ['compiler_generated'] )> when 'true' ->
				      case call _rec41:'do_perform_save'
					       (Head1) of
					<{Head2,'ok'}> when 'true' ->
					    %% Line 1813
					    case apply 'ensure_written'/2
						     (Head2, DoSync) of
					      <'ok'> when 'true' ->
						  %% Line 1814
						  case Head2 of
						    <{'head',_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121}> when 'true' ->
							let <_cor23> =
							    call 'erlang':'setelement'
								(16, Head2, 'saved')
							in  {_cor23,'ok'}
						    ( <_cor122> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','head'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
					      ( <_cor20> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_cor20})
						-| ['compiler_generated'] )
					    end
					( <_cor19> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor19})
					  -| ['compiler_generated'] )
				      end
				  -| ['compiler_generated'] )
				( <_cor90> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','head'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			( <_cor16> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor16})
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1810
		  case _cor24 of
		    %% Line 1816
		    <Reply = {NewHead = {'head',_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150,_cor151,_cor152,_cor153},_cor154}> when ( 'true'
																																							  -| ['compiler_generated'] ) ->
			%% Line 1817
			Reply
		    ( <_cor25> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor25})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1819
	  <Head,_X_DoSync> when 'true' ->
	      let <_cor26> =
		  %% Line 1820
		  apply 'status'/1
		      (Head)
	      in  %% Line 1820
		  {Head,_cor26}
	end
'ensure_written'/2 =
    %% Line 1822
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Head = {'head',_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69},DoSync>
	      when call 'erlang':'=:='
		    (_cor62,
		     'true') ->
	      %% Line 1823
	      case call 'dets_utils':'position'
		       (Head, 'eof') of
		<{'ok',EOF}> when 'true' ->
		    %% Line 1824
		    case call 'dets_utils':'pread'
			     (Head, 0, EOF, 0) of
		      <{'ok',Bin}> when 'true' ->
			  %% Line 1825
			  case <> of
			    %% Line 1826
			    <>
				when call 'erlang':'=:='
				      (DoSync,
				       'true') ->
				%% Line 1827
				call 'dets_utils':'write_file'
				    (Head, Bin)
			    %% Line 1828
			    <>
				when let <_cor10> =
				      call 'erlang':'=:='
					  (DoSync, 'false')
				  in  let <_cor11> =
					  call 'erlang':'is_boolean'
					      (DoSync)
				      in  call 'erlang':'and'
					      (_cor10, _cor11) ->
				%% Line 1829
				case call 'file':'write_file'
					 (_cor60, Bin) of
				  %% Line 1830
				  <'ok'> when 'true' ->
				      %% Line 1831
				      'ok'
				  %% Line 1832
				  <Error> when 'true' ->
				      %% Line 1833
				      call 'dets_utils':'corrupt_file'
					  (Head, Error)
				end
			    ( <> when 'true' ->
				  primop 'match_fail'
				      ('if_clause')
			      -| ['compiler_generated'] )
			  end
		      ( <_cor9> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor9})
			-| ['compiler_generated'] )
		    end
		( <_cor8> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor8})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1836
	  <Head,'true'>
	      when try
		    ( case <> of
			( <>
			      when ( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_record'
								       -| ['compiler_generated'] )
				      (Head,
				       ( 'head'
					 -| ['compiler_generated'] ),
				       ( 32
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] ) ->
			      let <_cor19> =
				  ( call 'erlang':'element'
					(25, Head)
				    -| ['compiler_generated'] )
			      in  let <_cor20> =
				      ( call 'erlang':'=:='
					    (_cor19, 'true')
					-| ['compiler_generated'] )
				  in  let <_cor22> =
					  ( call 'erlang':'not'
						(_cor20)
					    -| ['compiler_generated'] )
				      in  let <_cor23> =
					      ( call 'erlang':'is_boolean'
						    (_cor19)
						-| ['compiler_generated'] )
					  in  ( call 'erlang':'and'
						    (_cor22, _cor23)
						-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <> when 'true' ->
			      'false'
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1837
	      call 'dets_utils':'sync'
		  (Head)
	  %% Line 1838
	  <Head,'false'>
	      when try
		    ( case <> of
			( <>
			      when ( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_record'
								       -| ['compiler_generated'] )
				      (Head,
				       ( 'head'
					 -| ['compiler_generated'] ),
				       ( 32
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] ) ->
			      let <_cor30> =
				  ( call 'erlang':'element'
					(25, Head)
				    -| ['compiler_generated'] )
			      in  let <_cor31> =
				      ( call 'erlang':'=:='
					    (_cor30, 'true')
					-| ['compiler_generated'] )
				  in  let <_cor33> =
					  ( call 'erlang':'not'
						(_cor31)
					    -| ['compiler_generated'] )
				      in  let <_cor34> =
					      ( call 'erlang':'is_boolean'
						    (_cor30)
						-| ['compiler_generated'] )
					  in  ( call 'erlang':'and'
						    (_cor33, _cor34)
						-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <> when 'true' ->
			      'false'
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1839
	      'ok'
	  ( <_cor38,_cor37> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor38,_cor37})
		  -| [{'function_name',{'ensure_written',2}}] )
	    -| ['compiler_generated'] )
	end
'do_bchunk_init'/2 =
    %% Line 1842
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    catch
		%% Line 1843
		apply 'write_cache'/1
		    (_cor1)
	in  %% Line 1843
	    case _cor2 of
	      %% Line 1844
	      <{H2,[]}> when 'true' ->
		  %% Line 1845
		  ( case H2 of
		      ( <( {'head',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_rec44,_cor48,_cor49}
			   -| ['compiler_generated'] )> when 'true' ->
			    case call _rec44:'table_parameters'
				     (H2) of
			      %% Line 1846
			      <'undefined'> when 'true' ->
				  %% Line 1847
				  {H2,{'error','old_version'}}
			      %% Line 1848
			      <Parms> when 'true' ->
				  let <L> =
				      %% Line 1849
				      call 'dets_utils':'all_allocated'
					  (H2)
				  in  let <_cor6> =
					  %% Line 1850
					  case <> of
					    %% Line 1851
					    <>
						when call 'erlang':'=:='
						      (L,
						       #{}#) ->
						'eof'
					    %% Line 1852
					    <> when 'true' ->
						#{}#
					  end
				      in  let <C0> =
					      %% Line 1854
					      {'dets_cont','undefined','default',_cor6,L,'undefined','undefined','undefined'}
					  in  let <BinParms> =
						  %% Line 1855
						  call 'erlang':'term_to_binary'
						      (Parms)
					      in  let <_rec45> =
						      %% Line 1856
						      call 'erlang':'self'
							  ()
						  in  %% Line 1856
						      case C0 of
							<{'dets_cont',_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57}> when 'true' ->
							    let <_cor12> =
								call 'erlang':'setelement'
								    (7, C0, _rec45)
							    in  let <_cor13> =
								    call 'erlang':'setelement'
									(6, _cor12, _cor0)
								in  let <_cor15> =
									call 'erlang':'setelement'
									    (2, _cor13, 'bchunk')
								    in  {H2,{_cor15,%% Line 1857
										    [BinParms|[]]}}
							( <_cor58> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','dets_cont'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
			    end
			-| ['compiler_generated'] )
		      ( <_cor50> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','head'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      %% Line 1859
	      <HeadError = {NewHead = {'head',_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89},_cor90}> when ( 'true'
																																			-| ['compiler_generated'] ) ->
		  %% Line 1860
		  HeadError
	      ( <_cor17> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor17})
		-| ['compiler_generated'] )
	    end
'do_bchunk'/2 =
    %% Line 1864
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Head,{'dets_cont',_cor14,_cor15,_cor16,_cor17,_cor18,Proc,_cor19}>
	      when try
		    let <_cor2> =
			call 'erlang':'self'
			    ()
		    in  call 'erlang':'=/='
			    (Proc, _cor2)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1865
	      {Head,'badarg'}
	  %% Line 1866
	  <Head,{'dets_cont',_cor20,_cor21,'eof',_cor22,_cor23,_cor24,_cor25}> when 'true' ->
	      %% Line 1867
	      {Head,'$end_of_table'}
	  %% Line 1868
	  <Head,State> when 'true' ->
	      %% Line 1869
	      ( case State of
		  ( <( {'dets_cont',_cor26,_cor27,_cor28,_rec47,_cor29,_cor30,_cor31}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'dets_v9':'read_bchunks'
				 (Head, _rec47) of
			  %% Line 1870
			  <{'error',Reason}> when 'true' ->
			      %% Line 1871
			      call 'dets_utils':'corrupt_reason'
				  (Head, Reason)
			  %% Line 1872
			  <{'finished',Bins}> when 'true' ->
			      let <_cor7> =
				  %% Line 1873
				  call 'erlang':'setelement'
				      (4, State, 'eof')
			      in  %% Line 1873
				  {Head,{_cor7,Bins}}
			  %% Line 1874
			  <{Bins,NewL}> when 'true' ->
			      let <_cor10> =
				  %% Line 1875
				  call 'erlang':'setelement'
				      (5, State, NewL)
			      in  %% Line 1875
				  {Head,{_cor10,Bins}}
			  ( <_cor11> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor11})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor32> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','dets_cont'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'fdelete_all_objects'/1 =
    %% Line 1879
    fun (_cor0) ->
	case _cor0 of
	  <Head = {'head',_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40}>
	      when call 'erlang':'=:='
		    (_cor25,
		     'false') ->
	      let <_cor7> =
		  catch
		      %% Line 1880
		      apply 'do_delete_all_objects'/1
			  (Head)
	      in  %% Line 1880
		  case _cor7 of
		    %% Line 1881
		    <{'ok',NewHead}> when 'true' ->
			do  %% Line 1882
			    apply 'start_auto_save_timer'/1
				(NewHead)
			    %% Line 1883
			    {NewHead,'ok'}
		    %% Line 1884
		    <{'error',Reason}> when 'true' ->
			%% Line 1885
			call 'dets_utils':'corrupt_reason'
			    (Head, Reason)
		    ( <_cor8> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor8})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1887
	  <Head> when 'true' ->
	      %% Line 1888
	      {Head,'fixed'}
	end
'do_delete_all_objects'/1 =
    %% Line 1890
    fun (_cor0) ->
	%% Line 1893
	case _cor0 of
	  <{'head',_cor7,_cor8,_cor9,Fd,_cor10,_cor11,_cor12,_cor13,Type,Kp,_cor14,_cor15,_cor16,Auto,_cor17,_cor18,_cor19,_cor20,MinSlots,MaxSlots,Cache,Fname,_cor21,Ram,Tab,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27}> when 'true' ->
	      let <CacheSz> =
		  %% Line 1894
		  call 'dets_utils':'cache_size'
		      (Cache)
	      in  %% Line 1895
		  case call 'dets_utils':'truncate'
			   (Fd, Fname, 'bof') of
		    <'ok'> when 'true' ->
			%% Line 1896
			call _cor25:'initiate_file'
			    (Fd, Tab, Fname, Type, Kp, MinSlots, MaxSlots, %% Line 1897
									   Ram, %% Line 1897
										CacheSz, %% Line 1897
											 Auto, %% Line 1897
											       'true')
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor3})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'fdelete_key'/2 =
    %% Line 1900
    fun (_cor1,_cor0) ->
	%% Line 1901
	apply 'do_delete'/3
	    (_cor1, _cor0, 'delete_key')
'fdelete_object'/2 =
    %% Line 1904
    fun (_cor1,_cor0) ->
	%% Line 1905
	apply 'do_delete'/3
	    (_cor1, _cor0, 'delete_object')
'ffirst'/1 =
    %% Line 1907
    fun (_cor0) ->
	let <Ref> =
	    %% Line 1908
	    call 'erlang':'make_ref'
		()
	in  let <_cor3> =
		catch
		    let <_cor2> =
			%% Line 1909
			apply 'ffirst1'/1
			    (_cor0)
		    in  %% Line 1909
			{Ref,_cor2}
	    in  %% Line 1909
		case _cor3 of
		  %% Line 1910
		  <{_cor6,{NH,R}}>
		      when call 'erlang':'=:='
			    (_cor6,
			     Ref) ->
		      %% Line 1911
		      {NH,{'ok',R}}
		  %% Line 1912
		  <{NH = {'head',_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37},R}> when ( 'true'
																																   -| ['compiler_generated'] ) ->
		      %% Line 1913
		      {NH,{'error',R}}
		  ( <_cor4> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor4})
		    -| ['compiler_generated'] )
		end
'ffirst1'/1 =
    %% Line 1916
    fun (_cor0) ->
	do  %% Line 1917
	    apply 'check_safe_fixtable'/1
		(_cor0)
	    %% Line 1918
	    case apply 'write_cache'/1
		     (_cor0) of
	      <{NH,[]}> when 'true' ->
		  %% Line 1919
		  apply 'ffirst'/2
		      (NH, 0)
	      ( <_cor1> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor1})
		-| ['compiler_generated'] )
	    end
'ffirst'/2 =
    %% Line 1921
    fun (_cor1,_cor0) ->
	%% Line 1922
	( case _cor1 of
	    ( <( {'head',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_rec51,_cor39,_cor40}
		 -| ['compiler_generated'] )> when 'true' ->
		  case call _rec51:'slot_objs'
			   (_cor1, _cor0) of
		    %% Line 1923
		    <'$end_of_table'> when 'true' ->
			{_cor1,'$end_of_table'}
		    %% Line 1924
		    <[]> when 'true' ->
			let <_cor4> =
			    call 'erlang':'+'
				(_cor0, 1)
			in  apply 'ffirst'/2
				(_cor1, _cor4)
		    %% Line 1925
		    <[X|_cor42]> when 'true' ->
			let <_cor7> =
			    call 'erlang':'element'
				(_cor20, X)
			in  {_cor1,_cor7}
		    ( <_cor8> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor8})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor41> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'finsert'/2 =
    %% Line 1929
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    catch
		%% Line 1930
		apply 'update_cache'/3
		    (_cor1, _cor0, 'insert')
	in  %% Line 1930
	    case _cor2 of
	      %% Line 1931
	      <{NewHead,[]}> when 'true' ->
		  %% Line 1932
		  {NewHead,'ok'}
	      %% Line 1933
	      <HeadError = {NewHead = {'head',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36},_cor37}> when ( 'true'
																																		    -| ['compiler_generated'] ) ->
		  %% Line 1934
		  HeadError
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor3})
		-| ['compiler_generated'] )
	    end
'finsert_new'/2 =
    %% Line 1938
    fun (_cor1,_cor0) ->
	%% Line 1939
	( case _cor1 of
	    ( <( {'head',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_rec53,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor8> =
		      catch
			  let <_cor7> =
			      %% Line 1940
			      ( fun (_cor5) ->
				    call 'erlang':'element'
					(_rec53, _cor5)
				-| [{'id',{0,0,'-finsert_new/2-fun-0-'}}] )
			  in  %% Line 1940
			      call 'lists':'map'
				  (_cor7, _cor0)
		  in  %% Line 1940
		      case _cor8 of
			%% Line 1941
			<Keys>
			    when call 'erlang':'is_list'
				  (_cor8) ->
			    let <_cor9> =
				catch
				    %% Line 1942
				    apply 'update_cache'/3
					(_cor1, Keys, {'lookup','nopid'})
			    in  %% Line 1942
				case _cor9 of
				  %% Line 1943
				  <{Head1,PidObjs}>
				      when call 'erlang':'is_list'
					    (PidObjs) ->
				      let <_cor12> =
					  %% Line 1944
					  ( fun (_cor10) ->
						case _cor10 of
						  <{_X_P,OL}> when 'true' ->
						      call 'erlang':'=:='
							  (OL, [])
						  ( <_cor11> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor11})
							  -| [{'function_name',{'-finsert_new/2-fun-1-',1}}] )
						    -| ['compiler_generated'] )
						end
					    -| [{'id',{0,0,'-finsert_new/2-fun-1-'}}] )
				      in  %% Line 1944
					  case call 'lists':'all'
						   (_cor12, PidObjs) of
					    %% Line 1945
					    <'true'> when 'true' ->
						let <_cor13> =
						    catch
							%% Line 1946
							apply 'update_cache'/3
							    (Head1, _cor0, 'insert')
						in  %% Line 1946
						    case _cor13 of
						      %% Line 1947
						      <{NewHead,[]}> when 'true' ->
							  %% Line 1948
							  {NewHead,'true'}
						      %% Line 1949
						      <{NewHead = {'head',_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81},Error}> when ( 'true'
																																						   -| ['compiler_generated'] ) ->
							  %% Line 1950
							  {NewHead,Error}
						      ( <_cor14> when 'true' ->
							    primop 'match_fail'
								({'case_clause',_cor14})
							-| ['compiler_generated'] )
						    end
					    %% Line 1952
					    <Reply = 'false'> when 'true' ->
						%% Line 1953
						{Head1,Reply}
					    ( <_cor15> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_cor15})
					      -| ['compiler_generated'] )
					  end
				  %% Line 1955
				  <HeadError = {NewHead = {'head',_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112},_cor113}> when ( 'true'
																																							  -| ['compiler_generated'] ) ->
				      %% Line 1956
				      HeadError
				  ( <_cor16> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor16})
				    -| ['compiler_generated'] )
				end
			%% Line 1958
			<_cor114> when 'true' ->
			    %% Line 1959
			    {_cor1,'badarg'}
		      end
	      -| ['compiler_generated'] )
	    ( <_cor50> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'do_safe_fixtable'/3 =
    %% Line 1962
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Head,Pid,'true'> when 'true' ->
	      %% Line 1963
	      ( case Head of
		  ( <( {'head',_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_rec54,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec54 of
			  %% Line 1964
			  <'false'> when 'true' ->
			      do  %% Line 1965
				  call 'erlang':'link'
				      (Pid)
				  let <_cor5> =
				      %% Line 1966
				      call 'erlang':'now'
					  ()
				  in  let <Fixed> =
					  %% Line 1966
					  {_cor5,[{Pid,1}|[]]}
				      in  let <Ftab> =
					      %% Line 1967
					      call 'dets_utils':'get_freelists'
						  (Head)
					  in  let <_rec55> = {%% Line 1968
						   Ftab,%% Line 1968
							Ftab}
					      in  let <_cor10> =
						      %% Line 1968
						      call 'erlang':'setelement'
							  (17, Head, Fixed)
						  in  %% Line 1968
						      call 'erlang':'setelement'
							  (12, _cor10, _rec55)
			  %% Line 1969
			  <{TimeStamp,Counters}> when 'true' ->
			      %% Line 1970
			      case call 'lists':'keysearch'
				       (Pid, 1, Counters) of
				%% Line 1971
				<{'value',{_cor88,Counter}}>
				    when call 'erlang':'=:='
					  (_cor88,
					   Pid) ->
				    let <_cor12> =
					%% Line 1973
					call 'erlang':'+'
					    (Counter, 1)
				    in  let <NewCounters> =
					    %% Line 1972
					    call 'lists':'keyreplace'
						(Pid, 1, Counters, %% Line 1973
								   {Pid,_cor12})
					in  let <_rec57> = {%% Line 1974
						 TimeStamp,%% Line 1974
							   NewCounters}
					    in  %% Line 1974
						call 'erlang':'setelement'
						    (17, Head, _rec57)
				%% Line 1975
				<'false'> when 'true' ->
				    do  %% Line 1976
					call 'erlang':'link'
					    (Pid)
					let <Fixed> =
					    %% Line 1977
					    {TimeStamp,[{Pid,1}|Counters]}
					in  %% Line 1978
					    call 'erlang':'setelement'
						(17, Head, Fixed)
				( <_cor20> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor20})
				  -| ['compiler_generated'] )
			      end
			  ( <_cor21> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor21})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor55> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1981
	  <Head,Pid,'false'> when 'true' ->
	      %% Line 1982
	      apply 'remove_fix'/3
		  (Head, Pid, 'false')
	  ( <_cor24,_cor23,_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22})
		  -| [{'function_name',{'do_safe_fixtable',3}}] )
	    -| ['compiler_generated'] )
	end
'remove_fix'/3 =
    %% Line 1984
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1985
	( case _cor2 of
	    ( <( {'head',_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_rec60,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54}
		 -| ['compiler_generated'] )> when 'true' ->
		  case _rec60 of
		    %% Line 1986
		    <'false'> when 'true' ->
			_cor2
		    %% Line 1988
		    <{TimeStamp,Counters}> when 'true' ->
			%% Line 1989
			case call 'lists':'keysearch'
				 (_cor1, 1, Counters) of
			  %% Line 1991
			  <{'value',{_cor56,Counter}}>
			      when let <_cor57> =
				    call 'erlang':'=:='
					(_cor56, _cor1)
				in  let <_cor5> =
					call 'erlang':'=:='
					    (Counter, 1)
				    in  let <_cor6> =
					    call 'erlang':'=:='
						(_cor0, 'close')
					in  let <_cor58> =
						call 'erlang':'or'
						    (_cor5, _cor6)
					    in  call 'erlang':'and'
						    (_cor57, _cor58) ->
			      do  %% Line 1992
				  call 'erlang':'unlink'
				      (_cor1)
				  %% Line 1993
				  case call 'lists':'keydelete'
					   (_cor1, 1, Counters) of
				    %% Line 1994
				    <[]> when 'true' ->
					do  %% Line 1995
					    apply 'check_growth'/1
						(_cor2)
					    do  %% Line 1996
						call 'erlang':'garbage_collect'
						    ()
						let <_rec61> =
						    %% Line 1998
						    call 'dets_utils':'get_freelists'
							(_cor2)
						in  let <_cor9> =
							%% Line 1997
							call 'erlang':'setelement'
							    (17, _cor2, 'false')
						    in  %% Line 1998
							call 'erlang':'setelement'
							    (12, _cor9, _rec61)
				    %% Line 1999
				    <NewCounters> when 'true' ->
					let <_rec63> = {%% Line 2000
					     TimeStamp,%% Line 2000
						       NewCounters}
					in  %% Line 2000
					    call 'erlang':'setelement'
						(17, _cor2, _rec63)
				  end
			  %% Line 2002
			  <{'value',{_cor123,Counter}}>
			      when call 'erlang':'=:='
				    (_cor123,
				     _cor1) ->
			      let <_cor15> =
				  %% Line 2004
				  call 'erlang':'-'
				      (Counter, 1)
			      in  let <NewCounters> =
				      %% Line 2003
				      call 'lists':'keyreplace'
					  (_cor1, 1, Counters, %% Line 2004
							       {_cor1,_cor15})
				  in  let <_rec65> = {%% Line 2005
					   TimeStamp,%% Line 2005
						     NewCounters}
				      in  %% Line 2005
					  call 'erlang':'setelement'
					      (17, _cor2, _rec65)
			  %% Line 2006
			  <'false'> when 'true' ->
			      _cor2
			  ( <_cor20> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor20})
			    -| ['compiler_generated'] )
			end
		    ( <_cor21> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor21})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor55> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'do_stop'/1 =
    %% Line 2011
    fun (_cor0) ->
	let <_X_NewHead> =
	    %% Line 2012
	    apply 'unlink_fixing_procs'/1
		(_cor0)
	in  %% Line 2013
	    apply 'fclose'/1
		(_cor0)
'unlink_fixing_procs'/1 =
    %% Line 2015
    fun (_cor0) ->
	%% Line 2016
	( case _cor0 of
	    ( <( {'head',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_rec67,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41}
		 -| ['compiler_generated'] )> when 'true' ->
		  case _rec67 of
		    %% Line 2017
		    <'false'> when 'true' ->
			_cor0
		    %% Line 2019
		    <{_cor43,Counters}> when 'true' ->
			let <_cor5> =
			    %% Line 2020
			    ( fun (_cor3) ->
				  case _cor3 of
				    <{Pid,_X_Counter}> when 'true' ->
					call 'erlang':'unlink'
					    (Pid)
				    ( <_cor4> when 'true' ->
					  ( primop 'match_fail'
						({'function_clause',_cor4})
					    -| [{'function_name',{'-unlink_fixing_procs/1-fun-0-',1}}] )
				      -| ['compiler_generated'] )
				  end
			      -| [{'id',{0,0,'-unlink_fixing_procs/1-fun-0-'}}] )
			in  do  %% Line 2020
				call 'lists':'foreach'
				    (_cor5, Counters)
				let <_rec68> =
				    %% Line 2022
				    call 'dets_utils':'get_freelists'
					(_cor0)
				in  let <_cor8> =
					%% Line 2021
					call 'erlang':'setelement'
					    (17, _cor0, 'false')
				    in  %% Line 2022
					call 'erlang':'setelement'
					    (12, _cor8, _rec68)
		    ( <_cor10> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor10})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor42> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'check_growth'/1 =
    %% Line 2025
    fun (_cor0) ->
	case _cor0 of
	  <{'head',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,'read',_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41}> when 'true' ->
	      %% Line 2026
	      'ok'
	  %% Line 2027
	  <Head> when 'true' ->
	      let <NoThings> =
		  %% Line 2028
		  apply 'no_things'/1
		      (Head)
	      in  %% Line 2029
		  case <> of
		    %% Line 2030
		    <>
			when ( try
				( case <> of
				    ( <>
					  when ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'is_record'
										   -| ['compiler_generated'] )
						  (Head,
						   ( 'head'
						     -| ['compiler_generated'] ),
						   ( 32
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] ) ->
					  let <_cor6> =
					      ( call 'erlang':'element'
						    (4, Head)
						-| ['compiler_generated'] )
					  in  ( call 'erlang':'>'
						    (NoThings, _cor6)
						-| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    ( <> when 'true' ->
					  'false'
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    of <Try> ->
				Try
			    catch <T,R> ->
				'false'
			    -| ['compiler_generated'] ) ->
			let <_cor9> =
			    %% Line 2032
			    call 'erlang':'self'
				()
			in  let <_cor8> =
				%% Line 2032
				call 'erlang':'self'
				    ()
			    in  do  %% Line 2031
				    call 'erlang':'send_after'
					(%% Line 2032
					 200, _cor9, %% Line 2032
						     {'$dets_call',_cor8,'may_grow'})
				    %% Line 2033
				    'ok'
		    %% Line 2034
		    <> when 'true' ->
			%% Line 2035
			'ok'
		  end
	end
'finfo'/1 =
    %% Line 2038
    fun (_cor0) ->
	let <_cor1> =
	    catch
		%% Line 2039
		apply 'write_cache'/1
		    (_cor0)
	in  %% Line 2039
	    case _cor1 of
	      %% Line 2040
	      <{H2,[]}> when 'true' ->
		  let <_cor15> =
		      catch
			  %% Line 2041
			  ( case H2 of
			      ( <( {'head',_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_rec70,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48}
				   -| ['compiler_generated'] )> when 'true' ->
				    let <_cor12> =
					%% Line 2045
					apply 'file_size'/2
					    (_cor22, _cor39)
				    in  [{'type',_rec70}|%% Line 2042
							 [{'keypos',_cor27}|%% Line 2043
									    [{'size',_cor23}|%% Line 2044
											     [{'file_size',_cor12}|%% Line 2046
														   [{'filename',_cor39}|[]]]]]]
				-| ['compiler_generated'] )
			      ( <_cor49> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','head'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		  in  %% Line 2047
		      {H2,_cor15}
	      %% Line 2048
	      <HeadError = {H2 = {'head',_cor205,_cor206,_cor207,_cor208,_cor209,_cor210,_cor211,_cor212,_cor213,_cor214,_cor215,_cor216,_cor217,_cor218,_cor219,_cor220,_cor221,_cor222,_cor223,_cor224,_cor225,_cor226,_cor227,_cor228,_cor229,_cor230,_cor231,_cor232,_cor233,_cor234,_cor235},_cor236}> when ( 'true'
																																						   -| ['compiler_generated'] ) ->
		  %% Line 2049
		  HeadError
	      ( <_cor17> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor17})
		-| ['compiler_generated'] )
	    end
'finfo'/2 =
    %% Line 2052
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <H,'access'> when 'true' ->
	      ( case H of
		  ( <( {'head',_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_rec76,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83}
		       -| ['compiler_generated'] )> when 'true' ->
			{H,_rec76}
		    -| ['compiler_generated'] )
		  ( <_cor84> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2053
	  <H,'auto_save'> when 'true' ->
	      ( case H of
		  ( <( {'head',_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_rec77,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114}
		       -| ['compiler_generated'] )> when 'true' ->
			{H,_rec77}
		    -| ['compiler_generated'] )
		  ( <_cor115> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2054
	  <H,'bchunk_format'> when 'true' ->
	      let <_cor6> =
		  catch
		      %% Line 2055
		      apply 'write_cache'/1
			  (H)
	      in  %% Line 2055
		  case _cor6 of
		    %% Line 2056
		    <{H2,[]}> when 'true' ->
			%% Line 2057
			( case H2 of
			    ( <( {'head',_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_rec78,_cor144,_cor145}
				 -| ['compiler_generated'] )> when 'true' ->
				  case call _rec78:'table_parameters'
					   (H2) of
				    %% Line 2058
				    <Undef = 'undefined'> when 'true' ->
					%% Line 2059
					{H2,Undef}
				    %% Line 2060
				    <Parms> when 'true' ->
					let <_cor9> =
					    %% Line 2061
					    call 'erlang':'term_to_binary'
						(Parms)
					in  %% Line 2061
					    {H2,_cor9}
				  end
			      -| ['compiler_generated'] )
			    ( <_cor146> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','head'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    %% Line 2063
		    <HeadError = {H2 = {'head',_cor147,_cor148,_cor149,_cor150,_cor151,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162,_cor163,_cor164,_cor165,_cor166,_cor167,_cor168,_cor169,_cor170,_cor171,_cor172,_cor173,_cor174,_cor175,_cor176,_cor177},_cor178}> when ( 'true'
																																							 -| ['compiler_generated'] ) ->
			%% Line 2064
			HeadError
		    ( <_cor11> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor11})
		      -| ['compiler_generated'] )
		  end
	  %% Line 2066
	  <H,'delayed_write'> when 'true' ->
	      %% Line 2067
	      ( case H of
		  ( <( {'head',_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191,_cor192,_cor193,_cor194,_cor195,_cor196,_cor197,_cor198,_rec79,_cor199,_cor200,_cor201,_cor202,_cor203,_cor204,_cor205,_cor206,_cor207,_cor208}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor14> =
			    call 'dets_utils':'cache_size'
				(_rec79)
			in  {H,_cor14}
		    -| ['compiler_generated'] )
		  ( <_cor209> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2068
	  <H,'filename'> when 'true' ->
	      ( case H of
		  ( <( {'head',_cor210,_cor211,_cor212,_cor213,_cor214,_cor215,_cor216,_cor217,_cor218,_cor219,_cor220,_cor221,_cor222,_cor223,_cor224,_cor225,_cor226,_cor227,_cor228,_cor229,_cor230,_rec80,_cor231,_cor232,_cor233,_cor234,_cor235,_cor236,_cor237,_cor238,_cor239}
		       -| ['compiler_generated'] )> when 'true' ->
			{H,_rec80}
		    -| ['compiler_generated'] )
		  ( <_cor240> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2069
	  <H,'file_size'> when 'true' ->
	      let <_cor17> =
		  catch
		      %% Line 2070
		      apply 'write_cache'/1
			  (H)
	      in  %% Line 2070
		  case _cor17 of
		    %% Line 2071
		    <{H2,[]}> when 'true' ->
			let <_cor22> =
			    catch
				%% Line 2072
				( case H of
				    ( <( {'head',_cor241,_cor242,_cor243,_rec81,_cor244,_cor245,_cor246,_cor247,_cor248,_cor249,_cor250,_cor251,_cor252,_cor253,_cor254,_cor255,_cor256,_cor257,_cor258,_cor259,_cor260,_cor261,_cor262,_cor263,_cor264,_cor265,_cor266,_cor267,_cor268,_cor269,_cor270}
					 -| ['compiler_generated'] )> when 'true' ->
					  apply 'file_size'/2
					      (_rec81, _cor261)
				      -| ['compiler_generated'] )
				    ( <_cor271> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','head'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			in  %% Line 2072
			    {H2,_cor22}
		    %% Line 2073
		    <HeadError = {H2 = {'head',_cor303,_cor304,_cor305,_cor306,_cor307,_cor308,_cor309,_cor310,_cor311,_cor312,_cor313,_cor314,_cor315,_cor316,_cor317,_cor318,_cor319,_cor320,_cor321,_cor322,_cor323,_cor324,_cor325,_cor326,_cor327,_cor328,_cor329,_cor330,_cor331,_cor332,_cor333},_cor334}> when ( 'true'
																																							 -| ['compiler_generated'] ) ->
			%% Line 2074
			HeadError
		    ( <_cor23> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor23})
		      -| ['compiler_generated'] )
		  end
	  %% Line 2076
	  <H,'fixed'> when 'true' ->
	      %% Line 2078
	      ( case H of
		  ( <( {'head',_cor335,_cor336,_cor337,_cor338,_cor339,_cor340,_cor341,_cor342,_cor343,_cor344,_cor345,_cor346,_cor347,_cor348,_cor349,_rec83,_cor350,_cor351,_cor352,_cor353,_cor354,_cor355,_cor356,_cor357,_cor358,_cor359,_cor360,_cor361,_cor362,_cor363,_cor364}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor26> =
			    call 'erlang':'=:='
				(_rec83, 'false')
			in  let <_cor27> =
				call 'erlang':'not'
				    (_cor26)
			    in  {H,_cor27}
		    -| ['compiler_generated'] )
		  ( <_cor365> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2079
	  <H,'hash'> when 'true' ->
	      ( case H of
		  ( <( {'head',_cor366,_cor367,_cor368,_cor369,_cor370,_cor371,_cor372,_cor373,_cor374,_cor375,_cor376,_cor377,_cor378,_cor379,_cor380,_cor381,_rec84,_cor382,_cor383,_cor384,_cor385,_cor386,_cor387,_cor388,_cor389,_cor390,_cor391,_cor392,_cor393,_cor394,_cor395}
		       -| ['compiler_generated'] )> when 'true' ->
			{H,_rec84}
		    -| ['compiler_generated'] )
		  ( <_cor396> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2080
	  <H,'keypos'> when 'true' ->
	      ( case H of
		  ( <( {'head',_cor397,_cor398,_cor399,_cor400,_cor401,_cor402,_cor403,_cor404,_cor405,_rec85,_cor406,_cor407,_cor408,_cor409,_cor410,_cor411,_cor412,_cor413,_cor414,_cor415,_cor416,_cor417,_cor418,_cor419,_cor420,_cor421,_cor422,_cor423,_cor424,_cor425,_cor426}
		       -| ['compiler_generated'] )> when 'true' ->
			{H,_rec85}
		    -| ['compiler_generated'] )
		  ( <_cor427> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2081
	  <H,'memory'> when 'true' ->
	      apply 'finfo'/2
		  (H, 'file_size')
	  %% Line 2082
	  <H,'no_objects'> when 'true' ->
	      apply 'finfo'/2
		  (H, 'size')
	  %% Line 2083
	  <H,'no_keys'> when 'true' ->
	      let <_cor32> =
		  catch
		      %% Line 2084
		      apply 'write_cache'/1
			  (H)
	      in  %% Line 2084
		  case _cor32 of
		    %% Line 2085
		    <{H2,[]}> when 'true' ->
			%% Line 2086
			( case H2 of
			    ( <( {'head',_cor428,_cor429,_cor430,_cor431,_cor432,_rec86,_cor433,_cor434,_cor435,_cor436,_cor437,_cor438,_cor439,_cor440,_cor441,_cor442,_cor443,_cor444,_cor445,_cor446,_cor447,_cor448,_cor449,_cor450,_cor451,_cor452,_cor453,_cor454,_cor455,_cor456,_cor457}
				 -| ['compiler_generated'] )> when 'true' ->
				  {H2,_rec86}
			      -| ['compiler_generated'] )
			    ( <_cor458> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','head'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    %% Line 2087
		    <HeadError = {H2 = {'head',_cor459,_cor460,_cor461,_cor462,_cor463,_cor464,_cor465,_cor466,_cor467,_cor468,_cor469,_cor470,_cor471,_cor472,_cor473,_cor474,_cor475,_cor476,_cor477,_cor478,_cor479,_cor480,_cor481,_cor482,_cor483,_cor484,_cor485,_cor486,_cor487,_cor488,_cor489},_cor490}> when ( 'true'
																																							 -| ['compiler_generated'] ) ->
			%% Line 2088
			HeadError
		    ( <_cor35> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor35})
		      -| ['compiler_generated'] )
		  end
	  %% Line 2090
	  <H,'no_slots'> when 'true' ->
	      ( case H of
		  ( <( {'head',_cor491,_cor492,_cor493,_cor494,_cor495,_cor496,_cor497,_cor498,_cor499,_cor500,_cor501,_cor502,_cor503,_cor504,_cor505,_cor506,_cor507,_cor508,_cor509,_cor510,_cor511,_cor512,_cor513,_cor514,_cor515,_cor516,_cor517,_cor518,_rec87,_cor519,_cor520}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor38> =
			    call _rec87:'no_slots'
				(H)
			in  {H,_cor38}
		    -| ['compiler_generated'] )
		  ( <_cor521> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2091
	  <H,'pid'> when 'true' ->
	      let <_cor39> =
		  call 'erlang':'self'
		      ()
	      in  {H,_cor39}
	  %% Line 2092
	  <H,'ram_file'> when 'true' ->
	      ( case H of
		  ( <( {'head',_cor522,_cor523,_cor524,_cor525,_cor526,_cor527,_cor528,_cor529,_cor530,_cor531,_cor532,_cor533,_cor534,_cor535,_cor536,_cor537,_cor538,_cor539,_cor540,_cor541,_cor542,_cor543,_cor544,_rec88,_cor545,_cor546,_cor547,_cor548,_cor549,_cor550,_cor551}
		       -| ['compiler_generated'] )> when 'true' ->
			{H,_rec88}
		    -| ['compiler_generated'] )
		  ( <_cor552> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2093
	  <H,'safe_fixed'> when 'true' ->
	      ( case H of
		  ( <( {'head',_cor553,_cor554,_cor555,_cor556,_cor557,_cor558,_cor559,_cor560,_cor561,_cor562,_cor563,_cor564,_cor565,_cor566,_cor567,_rec89,_cor568,_cor569,_cor570,_cor571,_cor572,_cor573,_cor574,_cor575,_cor576,_cor577,_cor578,_cor579,_cor580,_cor581,_cor582}
		       -| ['compiler_generated'] )> when 'true' ->
			{H,_rec89}
		    -| ['compiler_generated'] )
		  ( <_cor583> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2094
	  <H,'size'> when 'true' ->
	      let <_cor44> =
		  catch
		      %% Line 2095
		      apply 'write_cache'/1
			  (H)
	      in  %% Line 2095
		  case _cor44 of
		    %% Line 2096
		    <{H2,[]}> when 'true' ->
			%% Line 2097
			( case H2 of
			    ( <( {'head',_cor584,_cor585,_cor586,_cor587,_rec90,_cor588,_cor589,_cor590,_cor591,_cor592,_cor593,_cor594,_cor595,_cor596,_cor597,_cor598,_cor599,_cor600,_cor601,_cor602,_cor603,_cor604,_cor605,_cor606,_cor607,_cor608,_cor609,_cor610,_cor611,_cor612,_cor613}
				 -| ['compiler_generated'] )> when 'true' ->
				  {H2,_rec90}
			      -| ['compiler_generated'] )
			    ( <_cor614> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','head'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    %% Line 2098
		    <HeadError = {H2 = {'head',_cor615,_cor616,_cor617,_cor618,_cor619,_cor620,_cor621,_cor622,_cor623,_cor624,_cor625,_cor626,_cor627,_cor628,_cor629,_cor630,_cor631,_cor632,_cor633,_cor634,_cor635,_cor636,_cor637,_cor638,_cor639,_cor640,_cor641,_cor642,_cor643,_cor644,_cor645},_cor646}> when ( 'true'
																																							 -| ['compiler_generated'] ) ->
			%% Line 2099
			HeadError
		    ( <_cor47> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor47})
		      -| ['compiler_generated'] )
		  end
	  %% Line 2101
	  <H,'type'> when 'true' ->
	      ( case H of
		  ( <( {'head',_cor647,_cor648,_cor649,_cor650,_cor651,_cor652,_cor653,_cor654,_rec91,_cor655,_cor656,_cor657,_cor658,_cor659,_cor660,_cor661,_cor662,_cor663,_cor664,_cor665,_cor666,_cor667,_cor668,_cor669,_cor670,_cor671,_cor672,_cor673,_cor674,_cor675,_cor676}
		       -| ['compiler_generated'] )> when 'true' ->
			{H,_rec91}
		    -| ['compiler_generated'] )
		  ( <_cor677> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2102
	  <H,'version'> when 'true' ->
	      ( case H of
		  ( <( {'head',_cor678,_cor679,_cor680,_cor681,_cor682,_cor683,_cor684,_cor685,_cor686,_cor687,_cor688,_cor689,_cor690,_cor691,_cor692,_cor693,_cor694,_cor695,_cor696,_cor697,_cor698,_cor699,_cor700,_cor701,_cor702,_cor703,_cor704,_rec92,_cor705,_cor706,_cor707}
		       -| ['compiler_generated'] )> when 'true' ->
			{H,_rec92}
		    -| ['compiler_generated'] )
		  ( <_cor708> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2103
	  <H,_cor709> when 'true' ->
	      {H,'undefined'}
	end
'file_size'/2 =
    %% Line 2105
    fun (_cor1,_cor0) ->
	%% Line 2106
	case call 'dets_utils':'position'
		 (_cor1, _cor0, 'eof') of
	  <{'ok',Pos}> when 'true' ->
	      %% Line 2107
	      Pos
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'test_bchunk_format'/2 =
    %% Line 2109
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Head,'undefined'> when 'true' ->
	      %% Line 2110
	      'false'
	  %% Line 2111
	  <Head = {'head',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41},_X_Term>
	      when call 'erlang':'=:='
		    (_cor38,
		     8) ->
	      %% Line 2112
	      'false'
	  %% Line 2113
	  <Head,Term> when 'true' ->
	      let <_cor8> =
		  %% Line 2114
		  call 'dets_v9':'try_bchunk_header'
		      (Term, Head)
	      in  %% Line 2114
		  call 'erlang':'=/='
		      (_cor8, 'not_ok')
	end
'do_open_file'/4 =
    %% Line 2116
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Fname|[Verbose|[]]],Parent,Server,Ref> when 'true' ->
	      let <_cor4> =
		  catch
		      %% Line 2117
		      apply 'fopen2'/2
			  (Fname, Ref)
	      in  %% Line 2117
		  case _cor4 of
		    %% Line 2118
		    <{'error',{'tooshort',_cor22}}> when 'true' ->
			%% Line 2119
			apply 'err'/1
			    ({'error',{'not_a_dets_file',Fname}})
		    %% Line 2120
		    <Error = {'error',_X_Reason}> when 'true' ->
			%% Line 2121
			apply 'err'/1
			    (Error)
		    %% Line 2122
		    <{'ok',Head}> when 'true' ->
			do  %% Line 2123
			    apply 'maybe_put'/2
				('verbose', Verbose)
			    %% Line 2124
			    case Head of
			      <{'head',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53}> when 'true' ->
				  let <_cor6> =
				      call 'erlang':'setelement'
					  (28, Head, Server)
				  in  let <_cor8> =
					  call 'erlang':'setelement'
					      (27, _cor6, Parent)
				      in  {'ok',_cor8}
			      ( <_cor54> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','head'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
		    %% Line 2125
		    <Error = {'EXIT',_X_Reason}> when 'true' ->
			%% Line 2126
			Error
		    %% Line 2127
		    <Bad> when 'true' ->
			do  %% Line 2128
			    call 'error_logger':'format'
				(%% Line 2129
				 [42|[42|[32|[100|[101|[116|[115|[58|[32|[66|[117|[103|[32|[119|[97|[115|[32|[102|[111|[117|[110|[100|[32|[105|[110|[32|[111|[112|[101|[110|[95|[102|[105|[108|[101|[47|[49|[44|[32|[114|[101|[112|[108|[121|[32|[119|[97|[115|[32|[126|[119|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 2130
																																										  [Bad|[]])
			    %% Line 2131
			    {'error',{'dets_bug',Fname,Bad}}
		  end
	  %% Line 2133
	  <[Tab|[OpenArgs|[Verb|[]]]],Parent,Server,_X_Ref> when 'true' ->
	      let <_cor10> =
		  catch
		      %% Line 2134
		      apply 'fopen3'/2
			  (Tab, OpenArgs)
	      in  %% Line 2134
		  case _cor10 of
		    %% Line 2135
		    <{'error',{'tooshort',_cor55}}> when 'true' ->
			%% Line 2136
			( case OpenArgs of
			    ( <( {'open_args',_rec94,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66}
				 -| ['compiler_generated'] )> when 'true' ->
				  apply 'err'/1
				      ({'error',{'not_a_dets_file',_rec94}})
			      -| ['compiler_generated'] )
			    ( <_cor67> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','open_args'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    %% Line 2137
		    <Error = {'error',_X_Reason}> when 'true' ->
			%% Line 2138
			apply 'err'/1
			    (Error)
		    %% Line 2139
		    <{'ok',Head}> when 'true' ->
			do  %% Line 2140
			    apply 'maybe_put'/2
				('verbose', Verb)
			    %% Line 2141
			    case Head of
			      <{'head',_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98}> when 'true' ->
				  let <_cor14> =
				      call 'erlang':'setelement'
					  (28, Head, Server)
				  in  let <_cor16> =
					  call 'erlang':'setelement'
					      (27, _cor14, Parent)
				      in  {'ok',_cor16}
			      ( <_cor99> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','head'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
		    %% Line 2142
		    <Error = {'EXIT',_X_Reason}> when 'true' ->
			%% Line 2143
			Error
		    %% Line 2144
		    <Bad> when 'true' ->
			do  %% Line 2145
			    call 'error_logger':'format'
				(%% Line 2146
				 [42|[42|[32|[100|[101|[116|[115|[58|[32|[66|[117|[103|[32|[119|[97|[115|[32|[102|[111|[117|[110|[100|[32|[105|[110|[32|[111|[112|[101|[110|[95|[102|[105|[108|[101|[47|[50|[44|[32|[97|[114|[103|[117|[109|[101|[110|[116|[115|[32|[119|[101|[114|[101|[126|[110|[42|[42|[32|[100|[101|[116|[115|[58|[32|[126|[119|[32|[97|[110|[100|[32|[114|[101|[112|[108|[121|[32|[119|[97|[115|[32|[126|[119|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 2148
																																																																	[OpenArgs|[Bad|[]]])
			    %% Line 2149
			    {'error',{'dets_bug',Tab,{'open_file',OpenArgs},Bad}}
		  end
	  ( <_cor21,_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor21,_cor20,_cor19,_cor18})
		  -| [{'function_name',{'do_open_file',4}}] )
	    -| ['compiler_generated'] )
	end
'maybe_put'/2 =
    %% Line 2152
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor4,'undefined'> when 'true' ->
	      %% Line 2153
	      'ignore'
	  %% Line 2154
	  <K,V> when 'true' ->
	      %% Line 2155
	      call 'erlang':'put'
		  (K, V)
	end
'finit'/4 =
    %% Line 2158
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Head = {'head',_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60},InitFun,_X_Format,_X_NoSlots>
	      when call 'erlang':'=:='
		    (_cor52,
		     'read') ->
	      let <_cor10> =
		  catch
		      %% Line 2159
		      apply InitFun
			  ('close')
	      in  %% Line 2160
		  {Head,{'error',{'access_mode',_cor51}}}
	  %% Line 2161
	  <Head = {'head',_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122},InitFun,_X_Format,_X_NoSlots>
	      when call 'erlang':'=/='
		    (_cor107,
		     'false') ->
	      let <_cor20> =
		  catch
		      %% Line 2162
		      apply InitFun
			  ('close')
	      in  %% Line 2163
		  {Head,{'error',{'fixed_table',_cor116}}}
	  %% Line 2164
	  <Head,InitFun,Format,NoSlots> when 'true' ->
	      let <_cor24> =
		  catch
		      %% Line 2165
		      apply 'do_finit'/4
			  (Head, InitFun, Format, NoSlots)
	      in  %% Line 2165
		  case _cor24 of
		    %% Line 2166
		    <{'ok',NewHead}> when 'true' ->
			do  %% Line 2167
			    apply 'check_growth'/1
				(NewHead)
			    do  %% Line 2168
				apply 'start_auto_save_timer'/1
				    (NewHead)
				%% Line 2169
				{NewHead,'ok'}
		    %% Line 2170
		    <'badarg'> when 'true' ->
			%% Line 2171
			{Head,'badarg'}
		    %% Line 2172
		    <Error> when 'true' ->
			%% Line 2173
			call 'dets_utils':'corrupt'
			    (Head, Error)
		  end
	end
'do_finit'/4 =
    %% Line 2177
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 2181
	case _cor3 of
	  <{'head',_cor34,_cor35,_cor36,Fd,_cor37,_cor38,_cor39,_cor40,Type,Kp,_cor41,_cor42,_cor43,Auto,UpdateMode,_cor44,_cor45,_cor46,MinSlots0,MaxSlots,Cache,Fname,_cor47,Ram,Tab,_cor48,_cor49,_cor50,HMod,_cor51,_cor52}> when 'true' ->
	      let <CacheSz> =
		  %% Line 2182
		  call 'dets_utils':'cache_size'
		      (Cache)
	      in  let <How,Head1> =
		      %% Line 2184
		      case _cor1 of
			%% Line 2185
			<'term'>
			    when let <_cor6> =
				  call 'erlang':'is_integer'
				      (_cor0)
			      in  let <_cor7> =
				      call 'erlang':'>'
					  (_cor0, MaxSlots)
				  in  call 'erlang':'and'
					  (_cor6, _cor7) ->
			    %% Line 2186
			    call 'erlang':'throw'
				('badarg')
			%% Line 2187
			<'term'> when 'true' ->
			    let <MinSlots> =
				%% Line 2188
				apply 'choose_no_slots'/2
				    (_cor0, MinSlots0)
			    in  %% Line 2189
				case <> of
				  %% Line 2190
				  <>
				      when let <_cor9> =
					    call 'erlang':'=:='
						(UpdateMode, 'new_dirty')
					in  let <_cor10> =
						call 'erlang':'=:='
						    (MinSlots, MinSlots0)
					    in  call 'erlang':'and'
						    (_cor9, _cor10) ->
				      %% Line 2191
				      <'general_init',_cor3>
				  %% Line 2192
				  <> when 'true' ->
				      %% Line 2193
				      case call 'dets_utils':'truncate'
					       (Fd, Fname, 'bof') of
					<'ok'> when 'true' ->
					    %% Line 2194
					    case call HMod:'initiate_file'
						     (Fd, Tab, Fname, Type, Kp, %% Line 2195
										MinSlots, %% Line 2195
											  MaxSlots, %% Line 2195
												    Ram, %% Line 2196
													 CacheSz, %% Line 2196
														  Auto, %% Line 2196
															'false') of
					      <{'ok',H}> when 'true' ->
						  %% Line 2197
						  <'general_init',H>
					      ( <_cor12> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_cor12})
						-| ['compiler_generated'] )
					    end
					( <_cor11> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor11})
					  -| ['compiler_generated'] )
				      end
				end
			%% Line 2199
			<'bchunk'> when 'true' ->
			    %% Line 2200
			    case call 'dets_utils':'truncate'
				     (Fd, Fname, 'bof') of
			      <'ok'> when 'true' ->
				  %% Line 2201
				  <'bchunk_init',_cor3>
			      ( <_cor13> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor13})
				-| ['compiler_generated'] )
			    end
			( <_cor14> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor14})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 2203
		      case How of
			%% Line 2204
			<'bchunk_init'> when 'true' ->
			    %% Line 2205
			    case call HMod:'bchunk_init'
				     (Head1, _cor2) of
			      %% Line 2206
			      <{'ok',NewHead}> when 'true' ->
				  %% Line 2207
				  case NewHead of
				    <{'head',_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83}> when 'true' ->
					let <_cor19> =
					    call 'erlang':'setelement'
						(16, NewHead, 'dirty')
					in  {'ok',_cor19}
				    ( <_cor84> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','head'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
			      %% Line 2208
			      <Error> when 'true' ->
				  %% Line 2209
				  Error
			    end
			%% Line 2211
			<'general_init'> when 'true' ->
			    let <Cntrs> =
				%% Line 2212
				call 'ets':'new'
				    ('dets_init', [])
			    in  let <Input> =
				    %% Line 2213
				    call HMod:'bulk_input'
					(Head1, _cor2, Cntrs)
				in  %% Line 2214
				    ( case Head1 of
					( <( {'head',_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_rec99,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114}
					     -| ['compiler_generated'] )> when 'true' ->
					      let <SlotNumbers> = {_rec99,'bulk_init',MaxSlots}
					      in  %% Line 2215
						  case %% Line 2216
						       apply 'do_sort'/6
							   (Head1, SlotNumbers, Input, Cntrs, Fname, 'not_used') of
						    <{Reply,SizeData}> when 'true' ->
							%% Line 2218
							case Reply of
							  %% Line 2219
							  <{'ok',NoDups,H1}> when 'true' ->
							      %% Line 2220
							      apply 'fsck_copy'/4
								  (SizeData, H1, 'true', NoDups)
							  %% Line 2221
							  <Else> when 'true' ->
							      do  %% Line 2222
								  apply 'close_files'/3
								      ('true', SizeData, Head1)
								  %% Line 2223
								  Else
							end
						    ( <_cor26> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor26})
						      -| ['compiler_generated'] )
						  end
					  -| ['compiler_generated'] )
					( <_cor115> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','head'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
			( <_cor29> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor29})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor4})
	    -| ['compiler_generated'] )
	end
'flookup_keys'/2 =
    %% Line 2228
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    catch
		%% Line 2229
		apply 'update_cache'/3
		    (_cor1, _cor0, {'lookup','nopid'})
	in  %% Line 2229
	    case _cor2 of
	      %% Line 2230
	      <{NewHead,[{_X_NoPid,Objs}|[]]}> when 'true' ->
		  %% Line 2231
		  {NewHead,Objs}
	      %% Line 2232
	      <{NewHead,L}>
		  when call 'erlang':'is_list'
			(L) ->
		  let <_cor5> =
		      %% Line 2233
		      ( fun (_cor3) ->
			    case _cor3 of
			      <{_X_Pid,OL}> when 'true' ->
				  OL
			      ( <_cor4> when 'true' ->
				    ( primop 'match_fail'
					  ({'function_clause',_cor4})
				      -| [{'function_name',{'-flookup_keys/2-fun-0-',1}}] )
				-| ['compiler_generated'] )
			    end
			-| [{'id',{0,0,'-flookup_keys/2-fun-0-'}}] )
		  in  let <_cor6> =
			  %% Line 2233
			  call 'lists':'flatmap'
			      (_cor5, L)
		      in  %% Line 2233
			  {NewHead,_cor6}
	      %% Line 2234
	      <HeadError = {NewHead = {'head',_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40},_cor41}> when ( 'true'
																																			-| ['compiler_generated'] ) ->
		  %% Line 2235
		  HeadError
	      ( <_cor7> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor7})
		-| ['compiler_generated'] )
	    end
'fmatch_init'/2 =
    %% Line 2239
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Head,{'dets_cont',_cor5,_cor6,'eof',_cor7,_cor8,_cor9,_cor10}> when 'true' ->
	      %% Line 2240
	      {Head,'$end_of_table'}
	  %% Line 2241
	  <Head,C> when 'true' ->
	      %% Line 2242
	      case apply 'scan'/2
		       (Head, C) of
		%% Line 2243
		<{'scan_error',Reason}> when 'true' ->
		    %% Line 2244
		    call 'dets_utils':'corrupt_reason'
			(Head, Reason)
		%% Line 2245
		<{Ts,NC}> when 'true' ->
		    %% Line 2246
		    {Head,{'cont',{Ts,NC}}}
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	end
'fmatch'/6 =
    %% Line 2250
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 2251
	( case _cor5 of
	    ( <( {'head',_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_rec100,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 2252
		  case apply 'find_all_keys'/3
			   (_cor3, _rec100, []) of
		    %% Line 2253
		    <[]> when 'true' ->
			let <_cor9> =
			    catch
				%% Line 2255
				apply 'write_cache'/1
				    (_cor5)
			in  %% Line 2255
			    case _cor9 of
			      %% Line 2256
			      <{Head1,[]}> when 'true' ->
				  let <_cor11> =
				      %% Line 2258
				      case _cor1 of
					%% Line 2259
					<'safe'> when 'true' ->
					    apply 'do_safe_fixtable'/3
						(Head1, _cor0, 'true')
					%% Line 2260
					<'no_safe'> when 'true' ->
					    Head1
					( <_cor10> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_cor10})
					  -| ['compiler_generated'] )
				      end
				  in  let <C0> =
					  %% Line 2262
					  apply 'init_scan'/2
					      (_cor11, _cor2)
				      in  %% Line 2263
					  case C0 of
					    <{'dets_cont',_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66}> when 'true' ->
						let <_cor16> =
						    call 'erlang':'setelement'
							(8, C0, _cor4)
						in  {_cor11,{'cont',_cor16}}
					    ( <_cor67> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','dets_cont'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
			      %% Line 2264
			      <HeadError = {NewHead = {'head',_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98},_cor99}> when ( 'true'
																																					-| ['compiler_generated'] ) ->
				  %% Line 2265
				  HeadError
			      ( <_cor17> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor17})
				-| ['compiler_generated'] )
			    end
		    %% Line 2267
		    <List> when 'true' ->
			let <Keys> =
			    %% Line 2268
			    call 'lists':'usort'
				(List)
			in  %% Line 2269
			    case apply 'flookup_keys'/2
				     (_cor5, Keys) of
			      <{NewHead,Reply}> when 'true' ->
				  %% Line 2270
				  case Reply of
				    %% Line 2271
				    <Objs>
					when call 'erlang':'is_list'
					      (Reply) ->
					let <MatchingObjs> =
					    %% Line 2272
					    call 'ets':'match_spec_run'
						(Objs, _cor4)
					in  %% Line 2273
					    {NewHead,{'done',MatchingObjs}}
				    %% Line 2274
				    <Error> when 'true' ->
					%% Line 2275
					{NewHead,Error}
				  end
			      ( <_cor19> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor19})
				-| ['compiler_generated'] )
			    end
		  end
	      -| ['compiler_generated'] )
	    ( <_cor59> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'find_all_keys'/3 =
    %% Line 2279
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],_cor9,Ks> when 'true' ->
	      %% Line 2280
	      Ks
	  %% Line 2281
	  <[{H,_cor10,_cor11}|T],KeyPos,Ks>
	      when call 'erlang':'is_tuple'
		    (H) ->
	      %% Line 2282
	      case call 'erlang':'tuple_size'
		       (H) of
		%% Line 2283
		<Enough>
		    when call 'erlang':'>='
			  (Enough,
			   KeyPos) ->
		    let <Key> =
			%% Line 2284
			call 'erlang':'element'
			    (KeyPos, H)
		    in  %% Line 2285
			case apply 'contains_variable'/1
				 (Key) of
			  %% Line 2286
			  <'true'> when 'true' ->
			      %% Line 2287
			      []
			  %% Line 2288
			  <'false'> when 'true' ->
			      %% Line 2289
			      apply 'find_all_keys'/3
				  (T, KeyPos, [Key|Ks])
			  ( <_cor4> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor4})
			    -| ['compiler_generated'] )
			end
		%% Line 2291
		<_cor12> when 'true' ->
		    %% Line 2292
		    apply 'find_all_keys'/3
			(T, KeyPos, Ks)
	      end
	  %% Line 2294
	  <_cor13,_cor14,_cor15> when 'true' ->
	      %% Line 2295
	      []
	end
'contains_variable'/1 =
    %% Line 2297
    fun (_cor0) ->
	case _cor0 of
	  <'_'> when 'true' ->
	      %% Line 2298
	      'true'
	  %% Line 2299
	  <A>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      %% Line 2300
	      case call 'erlang':'atom_to_list'
		       (A) of
		%% Line 2301
		<[36|T]> when 'true' ->
		    let <_cor1> =
			catch
			    %% Line 2302
			    call 'erlang':'list_to_integer'
				(T)
		    in  %% Line 2302
			case _cor1 of
			  %% Line 2303
			  <{'EXIT',_cor7}> when 'true' ->
			      %% Line 2304
			      'false'
			  %% Line 2305
			  <_cor8> when 'true' ->
			      %% Line 2306
			      'true'
			end
		%% Line 2308
		<_cor9> when 'true' ->
		    %% Line 2309
		    'false'
	      end
	  %% Line 2311
	  <T>
	      when call 'erlang':'is_tuple'
		    (_cor0) ->
	      let <_cor4> =
		  %% Line 2312
		  call 'erlang':'tuple_to_list'
		      (T)
	      in  %% Line 2312
		  apply 'contains_variable'/1
		      (_cor4)
	  %% Line 2313
	  <[]> when 'true' ->
	      %% Line 2314
	      'false'
	  %% Line 2315
	  <[H|T]> when 'true' ->
	      %% Line 2316
	      case apply 'contains_variable'/1
		       (H) of
		%% Line 2317
		<'true'> when 'true' ->
		    %% Line 2318
		    'true'
		%% Line 2319
		<'false'> when 'true' ->
		    %% Line 2320
		    apply 'contains_variable'/1
			(T)
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 2322
	  <_cor10> when 'true' ->
	      %% Line 2323
	      'false'
	end
'fmatch_delete_init'/4 =
    %% Line 2326
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 2327
	( case _cor3 of
	    ( <( {'head',_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_rec102,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor9> =
		      catch
			  %% Line 2329
			  case apply 'find_all_keys'/3
				   (_cor1, _rec102, []) of
			    %% Line 2330
			    <[]> when 'true' ->
				%% Line 2331
				apply 'do_fmatch_delete_var_keys'/4
				    (_cor3, _cor2, _cor1, _cor0)
			    %% Line 2332
			    <List> when 'true' ->
				let <Keys> =
				    %% Line 2333
				    call 'lists':'usort'
					(List)
				in  %% Line 2334
				    apply 'do_fmatch_constant_keys'/3
					(_cor3, Keys, _cor2)
			  end
		  in  %% Line 2328
		      case _cor9 of
			%% Line 2336
			<Reply = {NewHead = {'head',_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76},_cor77}> when ( 'true'
																																			      -| ['compiler_generated'] ) ->
			    %% Line 2337
			    Reply
			( <_cor10> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor10})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor45> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'fmatch_delete'/2 =
    %% Line 2345
    fun (_cor1,_cor0) ->
	%% Line 2346
	case apply 'scan'/2
		 (_cor1, _cor0) of
	  %% Line 2347
	  <{'scan_error',Reason}> when 'true' ->
	      %% Line 2348
	      call 'dets_utils':'corrupt_reason'
		  (_cor1, Reason)
	  %% Line 2349
	  <{[],_cor11}> when 'true' ->
	      %% Line 2350
	      {_cor1,{'done',0}}
	  %% Line 2351
	  <{RTs,NC}> when 'true' ->
	      %% Line 2352
	      ( case _cor0 of
		  ( <( {'dets_cont',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_rec103}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor5> =
			    catch
				%% Line 2353
				apply 'filter_binary_terms'/3
				    (RTs, _rec103, [])
			in  %% Line 2353
			    case _cor5 of
			      %% Line 2354
			      <{'EXIT',_cor19}> when 'true' ->
				  let <Bad> =
				      %% Line 2355
				      call 'dets_utils':'bad_object'
					  ('fmatch_delete', RTs)
				  in  %% Line 2356
				      call 'dets_utils':'corrupt_reason'
					  (_cor1, Bad)
			      %% Line 2357
			      <Terms> when 'true' ->
				  %% Line 2358
				  apply 'do_fmatch_delete'/3
				      (_cor1, Terms, NC)
			    end
		    -| ['compiler_generated'] )
		  ( <_cor18> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','dets_cont'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor8> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor8})
	    -| ['compiler_generated'] )
	end
'do_fmatch_delete_var_keys'/4 =
    %% Line 2362
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Head = {'head',_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55},_X_MP,[{'_',[],['true']}],_X_From>
	      when %% Line 2363
		call 'erlang':'=:='
		    (_cor40,
		     'false') ->
	      %% Line 2366
	      case apply 'write_cache'/1
		       (Head) of
		<{Head1,[]}> when 'true' ->
		    %% Line 2367
		    ( case Head1 of
			( <( {'head',_cor56,_cor57,_cor58,_cor59,_rec104,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85}
			     -| ['compiler_generated'] )> when 'true' ->
			      %% Line 2368
			      case apply 'fdelete_all_objects'/1
				       (Head1) of
				%% Line 2369
				<{NewHead,'ok'}> when 'true' ->
				    %% Line 2370
				    {NewHead,{'done',_rec104}}
				%% Line 2371
				<Reply> when 'true' ->
				    %% Line 2372
				    Reply
			      end
			  -| ['compiler_generated'] )
			( <_cor86> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','head'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor10> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor10})
		  -| ['compiler_generated'] )
	      end
	  %% Line 2374
	  <Head,MP,_X_Spec,From> when 'true' ->
	      let <Head1> =
		  %% Line 2375
		  apply 'do_safe_fixtable'/3
		      (Head, From, 'true')
	      in  %% Line 2376
		  case apply 'write_cache'/1
			   (Head1) of
		    <{NewHead,[]}> when 'true' ->
			let <C0> =
			    %% Line 2377
			    apply 'init_scan'/2
				(NewHead, 'default')
			in  %% Line 2378
			    case C0 of
			      <{'dets_cont',_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93}> when 'true' ->
				  let <_cor20> =
				      call 'erlang':'setelement'
					  (8, C0, MP)
				  in  {NewHead,{'cont',_cor20,0}}
			      ( <_cor94> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','dets_cont'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
		    ( <_cor16> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor16})
		      -| ['compiler_generated'] )
		  end
	end
'do_fmatch_constant_keys'/3 =
    %% Line 2380
    fun (_cor2,_cor1,_cor0) ->
	%% Line 2381
	case apply 'flookup_keys'/2
		 (_cor2, _cor1) of
	  %% Line 2382
	  <{NewHead,ReadTerms}>
	      when call 'erlang':'is_list'
		    (ReadTerms) ->
	      let <Terms> =
		  %% Line 2383
		  apply 'filter_terms'/3
		      (ReadTerms, _cor0, [])
	      in  %% Line 2384
		  apply 'do_fmatch_delete'/3
		      (NewHead, Terms, 'fixed')
	  %% Line 2385
	  <Reply> when 'true' ->
	      %% Line 2386
	      Reply
	end
'filter_binary_terms'/3 =
    %% Line 2389
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[Bin|Bins],MP,L> when 'true' ->
	      let <Term> =
		  %% Line 2390
		  call 'erlang':'binary_to_term'
		      (Bin)
	      in  %% Line 2391
		  case call 'ets':'match_spec_run'
			   ([Term|[]], MP) of
		    %% Line 2392
		    <['true']> when 'true' ->
			%% Line 2393
			apply 'filter_binary_terms'/3
			    (Bins, MP, [Term|L])
		    %% Line 2394
		    <_cor8> when 'true' ->
			%% Line 2395
			apply 'filter_binary_terms'/3
			    (Bins, MP, L)
		  end
	  %% Line 2397
	  <[],_X_MP,L> when 'true' ->
	      %% Line 2398
	      L
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'filter_binary_terms',3}}] )
	    -| ['compiler_generated'] )
	end
'filter_terms'/3 =
    %% Line 2400
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[Term|Terms],MP,L> when 'true' ->
	      %% Line 2401
	      case call 'ets':'match_spec_run'
		       ([Term|[]], MP) of
		%% Line 2402
		<['true']> when 'true' ->
		    %% Line 2403
		    apply 'filter_terms'/3
			(Terms, MP, [Term|L])
		%% Line 2404
		<_cor7> when 'true' ->
		    %% Line 2405
		    apply 'filter_terms'/3
			(Terms, MP, L)
	      end
	  %% Line 2407
	  <[],_X_MP,L> when 'true' ->
	      %% Line 2408
	      L
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'filter_terms',3}}] )
	    -| ['compiler_generated'] )
	end
'do_fmatch_delete'/3 =
    %% Line 2410
    fun (_cor2,_cor1,_cor0) ->
	let <N> =
	    %% Line 2411
	    call 'erlang':'length'
		(_cor1)
	in  %% Line 2412
	    case apply 'do_delete'/3
		     (_cor2, _cor1, 'delete_object') of
	      %% Line 2413
	      <{NewHead,'ok'}>
		  when call 'erlang':'=:='
			(_cor0,
			 'fixed') ->
		  %% Line 2414
		  {NewHead,{'done',N}}
	      %% Line 2415
	      <{NewHead,'ok'}> when 'true' ->
		  %% Line 2416
		  {NewHead,{'cont',_cor0,N}}
	      %% Line 2417
	      <Reply> when 'true' ->
		  %% Line 2418
		  Reply
	    end
'do_delete'/3 =
    %% Line 2421
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    catch
		%% Line 2422
		apply 'update_cache'/3
		    (_cor2, _cor1, _cor0)
	in  %% Line 2422
	    case _cor3 of
	      %% Line 2423
	      <{NewHead,[]}> when 'true' ->
		  %% Line 2424
		  {NewHead,'ok'}
	      %% Line 2425
	      <HeadError = {NewHead = {'head',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38},_cor39}> when ( 'true'
																																		      -| ['compiler_generated'] ) ->
		  %% Line 2426
		  HeadError
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor4})
		-| ['compiler_generated'] )
	    end
'fmember'/2 =
    %% Line 2429
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    catch
		%% Line 2431
		case %% Line 2432
		     apply 'update_cache'/3
			 (_cor1, [_cor0|[]], {'lookup','nopid'}) of
		  <{Head2,[{_X_NoPid,Objs}|[]]}> when 'true' ->
		      let <_cor3> =
			  %% Line 2433
			  call 'erlang':'=/='
			      (Objs, [])
		      in  %% Line 2433
			  {Head2,_cor3}
		  ( <_cor2> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor2})
		    -| ['compiler_generated'] )
		end
	in  %% Line 2430
	    case _cor4 of
	      %% Line 2435
	      <Reply = {NewHead = {'head',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38},_cor39}> when ( 'true'
																																		  -| ['compiler_generated'] ) ->
		  %% Line 2436
		  Reply
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor5})
		-| ['compiler_generated'] )
	    end
'fnext'/2 =
    %% Line 2439
    fun (_cor1,_cor0) ->
	%% Line 2440
	( case _cor1 of
	    ( <( {'head',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_rec106,_cor39,_cor40}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Slot> =
		      call _rec106:'db_hash'
			  (_cor0, _cor1)
		  in  let <Ref> =
			  %% Line 2441
			  call 'erlang':'make_ref'
			      ()
		      in  let <_cor7> =
			      catch
				  let <_cor6> =
				      %% Line 2442
				      apply 'fnext'/3
					  (_cor1, _cor0, Slot)
				  in  %% Line 2442
				      {Ref,_cor6}
			  in  %% Line 2442
			      case _cor7 of
				%% Line 2443
				<{_cor42,{H,R}}>
				    when call 'erlang':'=:='
					  (_cor42,
					   Ref) ->
				    %% Line 2444
				    {H,{'ok',R}}
				%% Line 2445
				<HeadError = {NewHead = {'head',_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73},_cor74}> when ( 'true'
																																					  -| ['compiler_generated'] ) ->
				    %% Line 2446
				    HeadError
				( <_cor8> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor8})
				  -| ['compiler_generated'] )
			      end
	      -| ['compiler_generated'] )
	    ( <_cor41> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'fnext'/3 =
    %% Line 2449
    fun (_cor2,_cor1,_cor0) ->
	%% Line 2450
	case apply 'write_cache'/1
		 (_cor2) of
	  <{NH,[]}> when 'true' ->
	      %% Line 2451
	      ( case _cor2 of
		  ( <( {'head',_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_rec107,_cor38,_cor39}
		       -| ['compiler_generated'] )> when 'true' ->
			case call _rec107:'slot_objs'
				 (NH, _cor0) of
			  %% Line 2452
			  <'$end_of_table'> when 'true' ->
			      {NH,'$end_of_table'}
			  %% Line 2453
			  <L> when 'true' ->
			      apply 'fnext_search'/4
				  (NH, _cor1, _cor0, L)
			end
		    -| ['compiler_generated'] )
		  ( <_cor40> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'fnext_search'/4 =
    %% Line 2456
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 2457
	( case _cor3 of
	    ( <( {'head',_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_rec108,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 2458
		  case apply 'beyond_key'/3
			   (_cor2, _rec108, _cor0) of
		    %% Line 2459
		    <[]> when 'true' ->
			let <_cor7> =
			    call 'erlang':'+'
				(_cor1, 1)
			in  apply 'fnext_slot'/3
				(_cor3, _cor2, _cor7)
		    %% Line 2460
		    <L2> when 'true' ->
			let <_cor8> =
			    call 'erlang':'hd'
				(L2)
			in  let <_cor11> =
				call 'erlang':'element'
				    (_rec108, _cor8)
			    in  {_cor3,_cor11}
		  end
	      -| ['compiler_generated'] )
	    ( <_cor47> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'fnext_slot'/3 =
    %% Line 2464
    fun (_cor2,_cor1,_cor0) ->
	%% Line 2465
	( case _cor2 of
	    ( <( {'head',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_rec110,_cor42,_cor43}
		 -| ['compiler_generated'] )> when 'true' ->
		  case call _rec110:'slot_objs'
			   (_cor2, _cor0) of
		    %% Line 2466
		    <'$end_of_table'> when 'true' ->
			{_cor2,'$end_of_table'}
		    %% Line 2467
		    <[]> when 'true' ->
			let <_cor5> =
			    call 'erlang':'+'
				(_cor0, 1)
			in  apply 'fnext_slot'/3
				(_cor2, _cor1, _cor5)
		    %% Line 2468
		    <L> when 'true' ->
			let <_cor6> =
			    call 'erlang':'hd'
				(L)
			in  let <_cor9> =
				call 'erlang':'element'
				    (_cor23, _cor6)
			    in  {_cor2,_cor9}
		  end
	      -| ['compiler_generated'] )
	    ( <_cor44> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'beyond_key'/3 =
    %% Line 2471
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_K,_X_Kp,[]> when 'true' ->
	      []
	  %% Line 2472
	  <K,Kp,[H|T]> when 'true' ->
	      let <_cor3> =
		  %% Line 2473
		  call 'erlang':'element'
		      (Kp, H)
	      in  %% Line 2473
		  case call 'dets_utils':'cmp'
			   (_cor3, K) of
		    %% Line 2474
		    <0> when 'true' ->
			apply 'beyond_key2'/3
			    (K, Kp, T)
		    %% Line 2475
		    <_cor8> when 'true' ->
			apply 'beyond_key'/3
			    (K, Kp, T)
		  end
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'beyond_key',3}}] )
	    -| ['compiler_generated'] )
	end
'beyond_key2'/3 =
    %% Line 2478
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_K,_X_Kp,[]> when 'true' ->
	      []
	  %% Line 2479
	  <K,Kp,L = [H|T]> when 'true' ->
	      let <_cor3> =
		  %% Line 2480
		  call 'erlang':'element'
		      (Kp, H)
	      in  %% Line 2480
		  case call 'dets_utils':'cmp'
			   (_cor3, K) of
		    %% Line 2481
		    <0> when 'true' ->
			apply 'beyond_key2'/3
			    (K, Kp, T)
		    %% Line 2482
		    <_cor8> when 'true' ->
			L
		  end
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'beyond_key2',3}}] )
	    -| ['compiler_generated'] )
	end
'fopen2'/2 =
    %% Line 2487
    fun (_cor1,_cor0) ->
	%% Line 2488
	case call 'file':'read_file_info'
		 (_cor1) of
	  %% Line 2489
	  <{'ok',_cor27}> when 'true' ->
	      %% Line 2492
	      case apply 'read_file_header'/3
		       (_cor1, 'read_write', 'false') of
		<{'ok',Fd,FH}> when 'true' ->
		    %% Line 2493
		    ( case FH of
			( <( {'fileheader',_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_rec112}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <_cor19> =
				  %% Line 2494
				  case call _rec112:'check_file_header'
					   (FH, Fd) of
				    %% Line 2495
				    <{'ok',Head1,ExtraInfo}> when 'true' ->
					%% Line 2496
					case Head1 of
					  <{'head',_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80}> when 'true' ->
					      let <_cor10> =
						  call 'erlang':'setelement'
						      (23, Head1, _cor1)
					      in  %% Line 2497
						  try
						      let <_cor12> =
							  call _rec112:'init_freelist'
							      (_cor10, ExtraInfo)
						      in  {'ok',_cor12}
						  of <_cor13> ->
						      _cor13
						  catch <_cor16,_cor15,_cor14> ->
						      case <_cor16,_cor15,_cor14> of
							%% Line 2499
							<'throw',_cor82,_cor83> when 'true' ->
							    %% Line 2500
							    {'repair',[32|[104|[97|[115|[32|[98|[97|[100|[32|[102|[114|[101|[101|[32|[108|[105|[115|[116|[115|[44|[32|[114|[101|[112|[97|[105|[114|[105|[110|[103|[32|[46|[46|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}
							( <_cor16,_cor15,_cor14> when 'true' ->
							      primop 'raise'
								  (_cor14, _cor15)
							  -| ['compiler_generated'] )
						      end
					  ( <_cor81> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','head'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
				    %% Line 2502
				    <{'error','not_closed'}> when 'true' ->
					%% Line 2504
					{'repair',[32|[110|[111|[116|[32|[112|[114|[111|[112|[101|[114|[108|[121|[32|[99|[108|[111|[115|[101|[100|[44|[32|[114|[101|[112|[97|[105|[114|[105|[110|[103|[32|[46|[46|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}
				    %% Line 2505
				    <Else> when 'true' ->
					%% Line 2506
					Else
				  end
			      in  %% Line 2508
				  case _cor19 of
				    %% Line 2509
				    <{'repair',Mess}> when 'true' ->
					do  %% Line 2510
					    call 'io':'format'
						('user', [100|[101|[116|[115|[58|[32|[102|[105|[108|[101|[32|[126|[116|[112|[126|[115|[126|[110]]]]]]]]]]]]]]]]]], [_cor1|[Mess|[]]])
					    %% Line 2512
					    case apply 'fsck'/7
						     (Fd, _cor0, _cor1, FH, 'default', 'default', 'default') of
					      %% Line 2513
					      <'ok'> when 'true' ->
						  %% Line 2514
						  apply 'fopen2'/2
						      (_cor1, _cor0)
					      %% Line 2515
					      <Error> when 'true' ->
						  %% Line 2516
						  call 'erlang':'throw'
						      (Error)
					    end
				    %% Line 2518
				    <{'ok',Head}> when 'true' ->
					%% Line 2519
					apply 'open_final'/7
					    (Head, _cor1, 'read_write', 'false', {3000,14000}, _cor0, %% Line 2520
												      'false')
				    %% Line 2521
				    <{'error',Reason}> when 'true' ->
					%% Line 2522
					call 'erlang':'throw'
					    ({'error',{Reason,_cor1}})
				    ( <_cor23> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor23})
				      -| ['compiler_generated'] )
				  end
			  -| ['compiler_generated'] )
			( <_cor49> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','fileheader'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 2524
	  <Error> when 'true' ->
	      %% Line 2525
	      call 'dets_utils':'file_error'
		  (_cor1, Error)
	end
'fopen3'/2 =
    %% Line 2530
    fun (_cor1,_cor0) ->
	%% Line 2531
	( case _cor0 of
	    ( <( {'open_args',_rec114,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 2532
		  case call 'file':'read_file_info'
			   (_rec114) of
		    %% Line 2533
		    <{'ok',_cor26}> when 'true' ->
			%% Line 2534
			apply 'fopen_existing_file'/2
			    (_cor1, _cor0)
		    %% Line 2535
		    <Error>
			when ( call 'erlang':'=:='
				(_cor22,
				 'read')
			    -| ['compiler_generated'] ) ->
			%% Line 2536
			call 'dets_utils':'file_error'
			    (_rec114, Error)
		    %% Line 2537
		    <_X_Error> when 'true' ->
			%% Line 2538
			apply 'fopen_init_file'/2
			    (_cor1, _cor0)
		  end
	      -| ['compiler_generated'] )
	    ( <_cor25> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','open_args'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'fopen_existing_file'/2 =
    %% Line 2541
    fun (_cor1,_cor0) ->
	%% Line 2545
	case _cor0 of
	  <{'open_args',Fname,Type,Kp,Rep,MinSlots,MaxSlots,Ram,CacheSz,Auto,Acc,Version,Debug}> when 'true' ->
	      %% Line 2547
	      case apply 'read_file_header'/3
		       (Fname, Acc, Ram) of
		<{'ok',Fd,FH}> when 'true' ->
		    let <_cor5> =
			%% Line 2548
			call 'erlang':'=:='
			    (Version, 9)
		    in  let <_cor4> =
			    %% Line 2548
			    call 'erlang':'=:='
				(Version, 'default')
			in  let <V9> =
				%% Line 2548
				call 'erlang':'or'
				    (_cor5, _cor4)
			    in  let <_cor10> =
				    %% Line 2549
				    call 'erlang':'=:='
					(MinSlots, 'default')
				in  %% Line 2549
				    ( case FH of
					( <( {'fileheader',_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_rec115,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124}
					     -| ['compiler_generated'] )> when 'true' ->
					      let <_cor9> =
						  call 'erlang':'=:='
						      (MinSlots, _rec115)
					      in  let <MinF> =
						      call 'erlang':'or'
							  (_cor10, _cor9)
						  in  let <_cor15> =
							  %% Line 2550
							  call 'erlang':'=:='
							      (MaxSlots, 'default')
						      in  let <_cor14> =
							      %% Line 2550
							      call 'erlang':'=:='
								  (MaxSlots, _cor115)
							  in  let <MaxF> =
								  %% Line 2550
								  call 'erlang':'or'
								      (_cor15, _cor14)
							      in  let <_cor53> =
								      %% Line 2552
								      case call _cor124:'check_file_header'
									       (FH, Fd) of
									%% Line 2553
									<{'ok',Head,'true'}>
									    when try
										  let <_cor20> =
										      call 'erlang':'=:='
											  (Rep, 'force')
										  in  let <_cor21> =
											  call 'erlang':'=:='
											      (Acc, 'read_write')
										      in  let <_cor27> =
											      %% Line 2554
											      ( call 'erlang':'=:='
												    (_cor109, 9)
												-| ['compiler_generated'] )
											  in  let <_cor30> =
												  %% Line 2555
												  ( call 'erlang':'=/='
													(_cor116, 'undefined')
												    -| ['compiler_generated'] )
											      in  let <_cor34> =
												      ( call 'erlang':'and'
													    (%% Line 2556
													     MaxF, %% Line 2556
														   V9)
													-| ['compiler_generated'] )
												  in  let <_cor35> =
													  ( call 'erlang':'and'
														(%% Line 2556
														 MinF, _cor34)
													    -| ['compiler_generated'] )
												      in  let <_cor36> =
													      ( call 'erlang':'and'
														    (_cor30, _cor35)
														-| ['compiler_generated'] )
													  in  let <_cor37> =
														  ( call 'erlang':'and'
															(_cor27, _cor36)
														    -| ['compiler_generated'] )
													      in  let <_cor38> =
														      ( call 'erlang':'and'
															    (_cor21, _cor37)
															-| ['compiler_generated'] )
														  in  ( call 'erlang':'and'
															    (_cor20, _cor38)
															-| ['compiler_generated'] )
									      of <Try> ->
										  Try
									      catch <T,R> ->
										  'false' ->
									    %% Line 2557
									    {'compact',Head,'true'}
									%% Line 2558
									<{'ok',_X_Head,_X_Extra}>
									    when let <_cor39> =
										  call 'erlang':'=:='
										      (Rep, 'force')
									      in  let <_cor40> =
										      call 'erlang':'=:='
											  (Acc, 'read')
										  in  call 'erlang':'and'
											  (_cor39, _cor40) ->
									    %% Line 2559
									    call 'erlang':'throw'
										({'error',{'access_mode',Fname}})
									%% Line 2560
									<{'ok',Head,'need_compacting'}>
									    when call 'erlang':'=:='
										  (Acc,
										   'read') ->
									    %% Line 2561
									    {'final',Head,'true'}
									%% Line 2562
									<{'ok',_X_Head,'need_compacting'}>
									    when call 'erlang':'=:='
										  (Rep,
										   'true') ->
									    %% Line 2566
									    {'repair',[32|[105|[115|[32|[110|[111|[119|[32|[99|[111|[109|[112|[97|[99|[116|[101|[100|[32|[46|[46|[46]]]]]]]]]]]]]]]]]]]]]}
									%% Line 2567
									<{'ok',_X_Head,_X_Extra}>
									    when call 'erlang':'=:='
										  (Rep,
										   'force') ->
									    %% Line 2569
									    {'repair',[44|[32|[114|[101|[112|[97|[105|[114|[32|[102|[111|[114|[99|[101|[100|[46]]]]]]]]]]]]]]]]}
									%% Line 2570
									<{'ok',Head,ExtraInfo}> when 'true' ->
									    %% Line 2571
									    {'final',Head,ExtraInfo}
									%% Line 2572
									<{'error','not_closed'}>
									    when let <_cor43> =
										  call 'erlang':'=:='
										      (Rep, 'force')
									      in  let <_cor44> =
										      call 'erlang':'=:='
											  (Acc, 'read_write')
										  in  call 'erlang':'and'
											  (_cor43, _cor44) ->
									    %% Line 2574
									    {'repair',[44|[32|[114|[101|[112|[97|[105|[114|[32|[102|[111|[114|[99|[101|[100|[46]]]]]]]]]]]]]]]]}
									%% Line 2575
									<{'error','not_closed'}>
									    when let <_cor46> =
										  call 'erlang':'=:='
										      (Rep, 'true')
									      in  let <_cor47> =
										      call 'erlang':'=:='
											  (Acc, 'read_write')
										  in  call 'erlang':'and'
											  (_cor46, _cor47) ->
									    %% Line 2577
									    {'repair',[32|[110|[111|[116|[32|[112|[114|[111|[112|[101|[114|[108|[121|[32|[99|[108|[111|[115|[101|[100|[44|[32|[114|[101|[112|[97|[105|[114|[105|[110|[103|[32|[46|[46|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}
									%% Line 2578
									<{'error','not_closed'}>
									    when call 'erlang':'=:='
										  (Rep,
										   'false') ->
									    %% Line 2579
									    call 'erlang':'throw'
										({'error',{'needs_repair',Fname}})
									%% Line 2580
									<{'error','version_bump'}>
									    when let <_cor49> =
										  call 'erlang':'=:='
										      (Rep, 'true')
									      in  let <_cor50> =
										      call 'erlang':'=:='
											  (Acc, 'read_write')
										  in  call 'erlang':'and'
											  (_cor49, _cor50) ->
									    %% Line 2583
									    {'repair',[32|[111|[108|[100|[32|[118|[101|[114|[115|[105|[111|[110|[44|[32|[117|[112|[103|[114|[97|[100|[105|[110|[103|[32|[46|[46|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]}
									%% Line 2584
									<{'error',Reason}> when 'true' ->
									    %% Line 2585
									    call 'erlang':'throw'
										({'error',{Reason,Fname}})
									( <_cor52> when 'true' ->
									      primop 'match_fail'
										  ({'case_clause',_cor52})
									  -| ['compiler_generated'] )
								      end
								  in  let <_cor67> =
									  %% Line 2587
									  case _cor53 of
									    %% Line 2588
									    <{Tag,Hd,Extra}>
										when let <_cor55> =
										      call 'erlang':'=:='
											  (Tag, 'final')
										  in  let <_cor56> =
											  call 'erlang':'=:='
											      (Tag, 'compact')
										      in  call 'erlang':'or'
											      (_cor55, _cor56) ->
										%% Line 2589
										case Hd of
										  <{'head',_cor170,_cor171,_cor172,_cor173,_cor174,_cor175,_cor176,_cor177,_cor178,_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191,_cor192,_cor193,_cor194,_cor195,_cor196,_cor197,_cor198,_cor199,_cor200}> when 'true' ->
										      let <_cor59> =
											  call 'erlang':'setelement'
											      (23, Hd, Fname)
										      in  %% Line 2590
											  try
											      let <_cor61> =
												  call _cor124:'init_freelist'
												      (_cor59, Extra)
											      in  {Tag,_cor61}
											  of <_cor62> ->
											      _cor62
											  catch <_cor65,_cor64,_cor63> ->
											      case <_cor65,_cor64,_cor63> of
												%% Line 2592
												<'throw',_cor202,_cor203> when 'true' ->
												    %% Line 2593
												    {'repair',[32|[104|[97|[115|[32|[98|[97|[100|[32|[102|[114|[101|[101|[32|[108|[105|[115|[116|[115|[44|[32|[114|[101|[112|[97|[105|[114|[105|[110|[103|[32|[46|[46|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}
												( <_cor65,_cor64,_cor63> when 'true' ->
												      primop 'raise'
													  (_cor63, _cor64)
												  -| ['compiler_generated'] )
											      end
										  ( <_cor201> when 'true' ->
											( call ( 'erlang'
												 -| ['compiler_generated'] ):( 'error'
															       -| ['compiler_generated'] )
											      (( {'badrecord','head'}
												 -| ['compiler_generated'] ))
											  -| ['compiler_generated'] )
										    -| ['compiler_generated'] )
										end
									    %% Line 2595
									    <Else> when 'true' ->
										%% Line 2596
										Else
									  end
								      in  %% Line 2598
									  case _cor67 of
									    %% Line 2599
									    <_cor204>
										when ( call 'erlang':'=/='
											(_cor108,
											 Type)
										    -| ['compiler_generated'] ) ->
										%% Line 2600
										call 'erlang':'throw'
										    ({'error',{'type_mismatch',Fname}})
									    %% Line 2601
									    <_cor205>
										when ( call 'erlang':'=/='
											(_cor112,
											 Kp)
										    -| ['compiler_generated'] ) ->
										%% Line 2602
										call 'erlang':'throw'
										    ({'error',{'keypos_mismatch',Fname}})
									    %% Line 2603
									    <{'compact',SourceHead}> when 'true' ->
										do  %% Line 2604
										    call 'io':'format'
											('user', [100|[101|[116|[115|[58|[32|[102|[105|[108|[101|[32|[126|[116|[112|[32|[105|[115|[32|[110|[111|[119|[32|[99|[111|[109|[112|[97|[99|[116|[101|[100|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Fname|[]])
										    %% Line 2605
										    case apply 'open_final'/7
											     (SourceHead, Fname, 'read', 'false', %% Line 2606
																  {3000,14000}, _cor1, %% Line 2606
																		       Debug) of
										      <{'ok',NewSourceHead}> when 'true' ->
											  let <_cor82> =
											      catch
												  %% Line 2607
												  apply 'compact'/1
												      (NewSourceHead)
											  in  %% Line 2607
											      case _cor82 of
												%% Line 2608
												<'ok'> when 'true' ->
												    do  %% Line 2609
													call 'erlang':'garbage_collect'
													    ()
													let <_cor85> =
													    %% Line 2610
													    call 'erlang':'setelement'
														(5, _cor0, 'false')
													in  %% Line 2610
													    apply 'fopen3'/2
														(_cor1, _cor85)
												%% Line 2611
												<_X_Err> when 'true' ->
												    let <_X_> =
													%% Line 2612
													( call 'file':'close'
													      (Fd)
													  -| ['result_not_wanted'] )
												    in  do  %% Line 2613
													    call 'dets_utils':'stop_disk_map'
														()
													    do  %% Line 2614
														call 'io':'format'
														    ('user', [100|[101|[116|[115|[58|[32|[99|[111|[109|[112|[97|[99|[116|[105|[111|[110|[32|[111|[102|[32|[102|[105|[108|[101|[32|[126|[116|[112|[32|[102|[97|[105|[108|[101|[100|[44|[32|[110|[111|[119|[32|[114|[101|[112|[97|[105|[114|[105|[110|[103|[32|[46|[46|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 2615
																																																							    [Fname|[]])
														%% Line 2616
														case apply 'read_file_header'/3
															 (Fname, Acc, Ram) of
														  <{'ok',Fd2,_X_FH}> when 'true' ->
														      %% Line 2617
														      apply 'do_repair'/8
															  (Fd2, _cor1, Fname, FH, MinSlots, MaxSlots, %% Line 2618
																				      Version, _cor0)
														  ( <_cor87> when 'true' ->
															primop 'match_fail'
															    ({'badmatch',_cor87})
														    -| ['compiler_generated'] )
														end
											      end
										      ( <_cor81> when 'true' ->
											    primop 'match_fail'
												({'badmatch',_cor81})
											-| ['compiler_generated'] )
										    end
									    %% Line 2620
									    <{'repair',Mess}> when 'true' ->
										do  %% Line 2621
										    call 'io':'format'
											('user', [100|[101|[116|[115|[58|[32|[102|[105|[108|[101|[32|[126|[116|[112|[126|[115|[126|[110]]]]]]]]]]]]]]]]]], [Fname|[Mess|[]]])
										    %% Line 2622
										    apply 'do_repair'/8
											(Fd, _cor1, Fname, FH, MinSlots, MaxSlots, %% Line 2623
																   Version, _cor0)
									    %% Line 2624
									    <_cor219>
										when let <_cor94> =
										      ( call 'erlang':'=/='
											    (_cor109, Version)
											-| ['compiler_generated'] )
										  in  let <_cor96> =
											  ( call 'erlang':'=/='
												(Version, 'default')
											    -| ['compiler_generated'] )
										      in  ( call ( 'erlang'
												   -| ['compiler_generated'] ):( 'and'
																 -| ['compiler_generated'] )
												(_cor94, _cor96)
											    -| ['compiler_generated'] ) ->
										%% Line 2625
										call 'erlang':'throw'
										    ({'error',{'version_mismatch',Fname}})
									    %% Line 2626
									    <{'final',H}> when 'true' ->
										%% Line 2627
										case H of
										  <{'head',_cor220,_cor221,_cor222,_cor223,_cor224,_cor225,_cor226,_cor227,_cor228,_cor229,_cor230,_cor231,_cor232,_cor233,_cor234,_cor235,_cor236,_cor237,_cor238,_cor239,_cor240,_cor241,_cor242,_cor243,_cor244,_cor245,_cor246,_cor247,_cor248,_cor249,_cor250}> when 'true' ->
										      let <_cor99> =
											  call 'erlang':'setelement'
											      (15, H, Auto)
										      in  %% Line 2628
											  apply 'open_final'/7
											      (_cor99, Fname, Acc, Ram, CacheSz, _cor1, Debug)
										  ( <_cor251> when 'true' ->
											( call ( 'erlang'
												 -| ['compiler_generated'] ):( 'error'
															       -| ['compiler_generated'] )
											      (( {'badrecord','head'}
												 -| ['compiler_generated'] ))
											  -| ['compiler_generated'] )
										    -| ['compiler_generated'] )
										end
									    ( <_cor101> when 'true' ->
										  primop 'match_fail'
										      ({'case_clause',_cor101})
									      -| ['compiler_generated'] )
									  end
					  -| ['compiler_generated'] )
					( <_cor125> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','fileheader'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'do_repair'/8 =
    %% Line 2631
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 2632
	case apply 'fsck'/7
		 (_cor7, _cor6, _cor5, _cor4, _cor3, _cor2, _cor1) of
	  %% Line 2633
	  <'ok'> when 'true' ->
	      do  %% Line 2635
		  call 'erlang':'garbage_collect'
		      ()
		  %% Line 2636
		  case _cor0 of
		    <{'open_args',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31}> when 'true' ->
			let <_cor10> =
			    call 'erlang':'setelement'
				(5, _cor0, 'false')
			in  apply 'fopen3'/2
				(_cor6, _cor10)
		    ( <_cor32> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','open_args'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 2637
	  <Error> when 'true' ->
	      %% Line 2638
	      call 'erlang':'throw'
		  (Error)
	end
'open_final'/7 =
    %% Line 2642
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_rec122> =
	    %% Line 2647
	    call 'dets_utils':'new_cache'
		(_cor2)
	in  %% Line 2647
	    case _cor6 of
	      <{'head',_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61}> when 'true' ->
		  let <_cor9> =
		      call 'erlang':'setelement'
			  (26, _cor6, _cor1)
		  in  let <_cor10> =
			  call 'erlang':'setelement'
			      (25, _cor9, _cor3)
		      in  let <_cor11> =
			      call 'erlang':'setelement'
				  (24, _cor10, _cor4)
			  in  let <_cor12> =
				  call 'erlang':'setelement'
				      (23, _cor11, _cor5)
			      in  let <_cor14> =
				      call 'erlang':'setelement'
					  (22, _cor12, _rec122)
				  in  %% Line 2648
				      ( case _cor14 of
					  ( <( {'head',_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_rec124,_cor90,_cor91,_cor92}
					       -| ['compiler_generated'] )> when 'true' ->
						do  apply 'init_disk_map'/3
							(_rec124, _cor1, _cor0)
						    do  %% Line 2649
							call _cor90:'cache_segps'
							    (_cor66, _cor5, _cor65)
							do  %% Line 2650
							    apply 'check_growth'/1
								(_cor14)
							    %% Line 2651
							    {'ok',_cor14}
					    -| ['compiler_generated'] )
					  ( <_cor93> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','head'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
	      ( <_cor62> when 'true' ->
		    ( call ( 'erlang'
			     -| ['compiler_generated'] ):( 'error'
							   -| ['compiler_generated'] )
			  (( {'badrecord','head'}
			     -| ['compiler_generated'] ))
		      -| ['compiler_generated'] )
		-| ['compiler_generated'] )
	    end
'fopen_init_file'/2 =
    %% Line 2654
    fun (_cor1,_cor0) ->
	%% Line 2658
	case _cor0 of
	  <{'open_args',Fname,Type,Kp,_cor25,MinSlotsArg,MaxSlotsArg,Ram,CacheSz,Auto,_cor26,UseVersion,Debug}> when 'true' ->
	      let <MinSlots> =
		  %% Line 2659
		  apply 'choose_no_slots'/2
		      (MinSlotsArg, 256)
	      in  let <MaxSlots> =
		      %% Line 2660
		      apply 'choose_no_slots'/2
			  (MaxSlotsArg, 33554432)
		  in  let <_cor7> =
			  %% Line 2661
			  case <> of
			    %% Line 2662
			    <>
				when call 'erlang':'=:='
				      (Ram,
				       'true') ->
				[]
			    %% Line 2663
			    <> when 'true' ->
				Fname
			  end
		      in  let <_cor9> =
			      %% Line 2665
			      apply 'open_args'/2
				  ('read_write', Ram)
			  in  %% Line 2665
			      case call 'dets_utils':'open'
				       (_cor7, _cor9) of
				<{'ok',Fd}> when 'true' ->
				    let <_cor12> =
					%% Line 2666
					case <> of
					  %% Line 2667
					  <>
					      when call 'erlang':'=:='
						    (UseVersion,
						     'default') ->
					      %% Line 2668
					      case call 'os':'getenv'
						       ([68|[69|[84|[83|[95|[85|[83|[69|[95|[70|[73|[76|[69|[95|[70|[79|[82|[77|[65|[84]]]]]]]]]]]]]]]]]]]]) of
						%% Line 2669
						<[56]> when 'true' ->
						    8
						%% Line 2670
						<_cor27> when 'true' ->
						    9
					      end
					  %% Line 2672
					  <> when 'true' ->
					      %% Line 2673
					      UseVersion
					end
				    in  let <Mod> =
					    %% Line 2675
					    apply 'version2module'/1
						(_cor12)
					in  do  %% Line 2677
						apply 'init_disk_map'/3
						    (_cor12, _cor1, Debug)
						let <_cor15> =
						    catch
							%% Line 2678
							call Mod:'initiate_file'
							    (Fd, _cor1, Fname, Type, Kp, MinSlots, MaxSlots, %% Line 2679
													     Ram, %% Line 2679
														  CacheSz, %% Line 2679
															   Auto, %% Line 2679
																 'true')
						in  %% Line 2678
						    case _cor15 of
						      %% Line 2680
						      <{'error',Reason}>
							  when call 'erlang':'=:='
								(Ram,
								 'true') ->
							  let <_X_> =
							      %% Line 2681
							      ( call 'file':'close'
								    (Fd)
								-| ['result_not_wanted'] )
							  in  %% Line 2682
							      call 'erlang':'throw'
								  ({'error',Reason})
						      %% Line 2683
						      <{'error',Reason}> when 'true' ->
							  let <_X_> =
							      %% Line 2684
							      ( call 'file':'close'
								    (Fd)
								-| ['result_not_wanted'] )
							  in  let <_X_> =
								  %% Line 2685
								  ( call 'file':'delete'
									(Fname)
								    -| ['result_not_wanted'] )
							      in  %% Line 2686
								  call 'erlang':'throw'
								      ({'error',Reason})
						      %% Line 2687
						      <{'ok',Head}> when 'true' ->
							  do  %% Line 2688
							      apply 'start_auto_save_timer'/1
								  (Head)
							      %% Line 2690
							      case Head of
								<{'head',_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58}> when 'true' ->
								    let <_cor21> =
									call 'erlang':'setelement'
									    (16, Head, 'new_dirty')
								    in  {'ok',_cor21}
								( <_cor59> when 'true' ->
								      ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'error'
													     -| ['compiler_generated'] )
									    (( {'badrecord','head'}
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
							      end
						      ( <_cor22> when 'true' ->
							    primop 'match_fail'
								({'case_clause',_cor22})
							-| ['compiler_generated'] )
						    end
				( <_cor10> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor10})
				  -| ['compiler_generated'] )
			      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'init_disk_map'/3 =
    %% Line 2694
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <9,Name,Debug> when 'true' ->
	      let <_cor5> =
		  %% Line 2695
		  ( case Debug of
		      ( <( 'true'
			   -| ['compiler_generated'] )> when 'true' ->
			    'true'
			-| ['compiler_generated'] )
		      ( <( 'false'
			   -| ['compiler_generated'] )> when 'true' ->
			    call 'dets_utils':'debug_mode'
				()
			-| ['compiler_generated'] )
		      ( <_cor3> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {( 'badarg'
					-| ['compiler_generated'] ),_cor3}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      in  %% Line 2695
		  case _cor5 of
		    %% Line 2696
		    <'true'> when 'true' ->
			%% Line 2697
			call 'dets_utils':'init_disk_map'
			    (Name)
		    %% Line 2698
		    <'false'> when 'true' ->
			%% Line 2699
			'ok'
		    ( <_cor6> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor6})
		      -| ['compiler_generated'] )
		  end
	  %% Line 2701
	  <_X_Version,_X_Name,_X_Debug> when 'true' ->
	      %% Line 2702
	      'ok'
	end
'open_args'/2 =
    %% Line 2704
    fun (_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 2705
	    case _cor1 of
	      %% Line 2706
	      <'read'> when 'true' ->
		  []
	      %% Line 2707
	      <'read_write'> when 'true' ->
		  ['write']
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor2})
		-| ['compiler_generated'] )
	    end
	in  let <_cor6> =
		%% Line 2709
		case _cor0 of
		  %% Line 2710
		  <'true'> when 'true' ->
		      ['ram']
		  %% Line 2711
		  <'false'> when 'true' ->
		      ['raw']
		  ( <_cor5> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor5})
		    -| ['compiler_generated'] )
		end
	    in  let <_cor8> =
		    %% Line 2713
		    call 'erlang':'++'
			(_cor6, ['binary'|['read']])
		in  %% Line 2713
		    call 'erlang':'++'
			(_cor3, _cor8)
'version2module'/1 =
    %% Line 2715
    fun (_cor0) ->
	case _cor0 of
	  <V>
	      when call 'erlang':'=<'
		    (_cor0,
		     8) ->
	      'dets_v8'
	  %% Line 2716
	  <9> when 'true' ->
	      'dets_v9'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'version2module',1}}] )
	    -| ['compiler_generated'] )
	end
'module2version'/1 =
    %% Line 2718
    fun (_cor0) ->
	case _cor0 of
	  <'dets_v8'> when 'true' ->
	      8
	  %% Line 2719
	  <'dets_v9'> when 'true' ->
	      9
	  %% Line 2720
	  <'not_used'> when 'true' ->
	      9
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'module2version',1}}] )
	    -| ['compiler_generated'] )
	end
'compact'/1 =
    %% Line 2724
    fun (_cor0) ->
	%% Line 2726
	case _cor0 of
	  <{'head',_cor22,_cor23,_cor24,SFd,_cor25,_cor26,_cor27,_cor28,Type,Kp,_cor29,_cor30,_cor31,Auto,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,Fname,_cor39,Ram,Tab,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45}> when 'true' ->
	      let <Tmp> =
		  %% Line 2727
		  apply 'tempfile'/1
		      (Fname)
	      in  let <TblParms> =
		      %% Line 2728
		      call 'dets_v9':'table_parameters'
			  (_cor0)
		  in  let <_cor4> =
			  %% Line 2729
			  apply 'open_args'/2
			      ('read_write', 'false')
		      in  %% Line 2729
			  case call 'dets_utils':'open'
				   (Tmp, _cor4) of
			    <{'ok',Fd}> when 'true' ->
				let <_cor7> =
				    catch
					%% Line 2735
					call 'dets_v9':'prep_table_copy'
					    (Fd, Tab, Tmp, Type, Kp, Ram, {3000,14000}, %% Line 2736
											Auto, %% Line 2736
											      TblParms)
				in  %% Line 2735
				    case _cor7 of
				      %% Line 2737
				      <{'ok',H}> when 'true' ->
					  %% Line 2745
					  case call 'dets_v9':'compact_init'
						   (_cor0, H, TblParms) of
					    %% Line 2746
					    <{'ok',NewHead}> when 'true' ->
						let <_cor15> =
						    %% Line 2747
						    case apply 'fclose'/1
							     (NewHead) of
						      %% Line 2748
						      <'ok'> when 'true' ->
							  %% Line 2749
							  case call 'file':'close'
								   (SFd) of
							    <'ok'> when 'true' ->
								%% Line 2751
								call 'dets_utils':'rename'
								    (Tmp, Fname)
							    ( <_cor13> when 'true' ->
								  primop 'match_fail'
								      ({'badmatch',_cor13})
							      -| ['compiler_generated'] )
							  end
						      %% Line 2752
						      <E> when 'true' ->
							  %% Line 2753
							  E
						    end
						in  %% Line 2755
						    case <> of
						      %% Line 2756
						      <>
							  when call 'erlang':'=:='
								(_cor15,
								 'ok') ->
							  'ok'
						      %% Line 2757
						      <> when 'true' ->
							  let <_X_> =
							      %% Line 2758
							      ( call 'file':'delete'
								    (Tmp)
								-| ['result_not_wanted'] )
							  in  %% Line 2759
							      call 'erlang':'throw'
								  (_cor15)
						    end
					    %% Line 2761
					    <Err> when 'true' ->
						let <_X_> =
						    %% Line 2762
						    ( call 'file':'close'
							  (Fd)
						      -| ['result_not_wanted'] )
						in  let <_X_> =
							%% Line 2763
							( call 'file':'delete'
							      (Tmp)
							  -| ['result_not_wanted'] )
						    in  %% Line 2764
							call 'erlang':'throw'
							    (Err)
					  end
				      %% Line 2739
				      <Error> when 'true' ->
					  let <_X_> =
					      %% Line 2740
					      ( call 'file':'close'
						    (Fd)
						-| ['result_not_wanted'] )
					  in  let <_X_> =
						  %% Line 2741
						  ( call 'file':'delete'
							(Tmp)
						    -| ['result_not_wanted'] )
					      in  %% Line 2742
						  call 'erlang':'throw'
						      (Error)
				    end
			    ( <_cor5> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor5})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'fsck'/7 =
    %% Line 2769
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 2772
	case _cor3 of
	  <{'fileheader',_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,MinSlotsFile,MaxSlotsFile,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44}> when 'true' ->
	      let <EstNoSlots0> =
		  %% Line 2773
		  apply 'file_no_things'/1
		      (_cor3)
	      in  let <MinSlots> =
		      %% Line 2774
		      apply 'choose_no_slots'/2
			  (_cor2, MinSlotsFile)
		  in  let <MaxSlots> =
			  %% Line 2775
			  apply 'choose_no_slots'/2
			      (_cor1, MaxSlotsFile)
		      in  let <_cor11> =
			      %% Line 2776
			      call 'erlang':'max'
				  (MinSlots, EstNoSlots0)
			  in  let <EstNoSlots> =
				  %% Line 2776
				  call 'erlang':'min'
				      (MaxSlots, _cor11)
			      in  let <SlotNumbers> = {%% Line 2777
				       MinSlots,%% Line 2777
						EstNoSlots,%% Line 2777
							   MaxSlots}
				  in  %% Line 2782
				      case apply 'fsck_try'/6
					       (_cor6, _cor5, _cor3, _cor4, SlotNumbers, _cor0) of
					%% Line 2783
					<{'try_again',BetterNoSlots}> when 'true' ->
					    let <BetterSlotNumbers> = {%% Line 2784
						 MinSlots,%% Line 2784
							  BetterNoSlots,%% Line 2784
									MaxSlots}
					    in  %% Line 2785
						case apply 'fsck_try'/6
							 (_cor6, _cor5, _cor3, _cor4, BetterSlotNumbers, _cor0) of
						  %% Line 2786
						  <{'try_again',_cor45}> when 'true' ->
						      let <_X_> =
							  %% Line 2787
							  ( call 'file':'close'
								(_cor6)
							    -| ['result_not_wanted'] )
						      in  %% Line 2788
							  {'error',{'cannot_repair',_cor4}}
						  %% Line 2789
						  <Else> when 'true' ->
						      %% Line 2790
						      Else
						end
					%% Line 2792
					<Else> when 'true' ->
					    %% Line 2793
					    Else
				      end
	  ( <_cor7> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor7})
	    -| ['compiler_generated'] )
	end
'choose_no_slots'/2 =
    %% Line 2796
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'default',NoSlots> when 'true' ->
	      NoSlots
	  %% Line 2797
	  <NoSlots,_cor4> when 'true' ->
	      NoSlots
	end
'fsck_try'/6 =
    %% Line 2804
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Tmp> =
	    %% Line 2805
	    apply 'tempfile'/1
		(_cor2)
	in  %% Line 2806
	    case _cor3 of
	      <{'fileheader',_cor25,_cor26,_cor27,_cor28,Type,_cor29,_cor30,_cor31,KeyPos,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44}> when 'true' ->
		  %% Line 2807
		  case _cor1 of
		    <{_X_MinSlots,EstNoSlots,MaxSlots}> when 'true' ->
			let <OpenArgs> =
			    %% Line 2808
			    {'open_args',Tmp,Type,KeyPos,%% Line 2809
							 'false',%% Line 2809
								 EstNoSlots,%% Line 2810
									    MaxSlots,%% Line 2811
										     'false',%% Line 2811
											     {3000,14000},%% Line 2812
													  'infinity',%% Line 2812
														     'read_write',_cor0,%% Line 2813
																	'false'}
			in  let <_cor10> =
				catch
				    %% Line 2814
				    apply 'fopen3'/2
					(_cor4, OpenArgs)
			    in  %% Line 2814
				case _cor10 of
				  %% Line 2815
				  <{'ok',Head}> when 'true' ->
				      %% Line 2816
				      case apply 'fsck_try_est'/5
					       (Head, _cor5, _cor2, _cor1, _cor3) of
					%% Line 2817
					<{'ok',NewHead}> when 'true' ->
					    let <_cor12> =
						%% Line 2818
						case apply 'fclose'/1
							 (NewHead) of
						  %% Line 2819
						  <'ok'> when 'true' ->
						      %% Line 2821
						      call 'dets_utils':'rename'
							  (Tmp, _cor2)
						  %% Line 2822
						  <Error> when 'true' ->
						      %% Line 2823
						      Error
						end
					    in  %% Line 2825
						case <> of
						  %% Line 2826
						  <>
						      when call 'erlang':'=:='
							    (_cor12,
							     'ok') ->
						      'ok'
						  %% Line 2827
						  <> when 'true' ->
						      do  %% Line 2828
							  ( call 'file':'delete'
								(Tmp)
							    -| ['result_not_wanted'] )
							  _cor12
						end
					%% Line 2831
					<TryAgainOrError> when 'true' ->
					    do  %% Line 2832
						( call 'file':'delete'
						      (Tmp)
						  -| ['result_not_wanted'] )
						%% Line 2833
						TryAgainOrError
				      end
				  %% Line 2835
				  <Error> when 'true' ->
				      do  %% Line 2836
					  ( call 'file':'close'
						(_cor5)
					    -| ['result_not_wanted'] )
					  %% Line 2837
					  Error
				end
		    ( <_cor8> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor8})
		      -| ['compiler_generated'] )
		  end
	      ( <_cor7> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor7})
		-| ['compiler_generated'] )
	    end
'tempfile'/1 =
    %% Line 2840
    fun (_cor0) ->
	let <Tmp> =
	    %% Line 2841
	    call 'lists':'concat'
		([_cor0|[[46|[84|[77|[80]]]]]])
	in  %% Line 2842
	    apply 'tempfile'/2
		(Tmp, 10)
'tempfile'/2 =
    %% Line 2844
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Tmp,0> when 'true' ->
	      %% Line 2845
	      Tmp
	  %% Line 2846
	  <Tmp,N> when 'true' ->
	      %% Line 2847
	      case call 'file':'delete'
		       (Tmp) of
		%% Line 2848
		<{'error','eacces'}> when 'true' ->
		    do  %% Line 2849
			call 'timer':'sleep'
			    (1000)
			let <_cor2> =
			    %% Line 2850
			    call 'erlang':'-'
				(N, 1)
			in  %% Line 2850
			    apply 'tempfile'/2
				(Tmp, _cor2)
		%% Line 2851
		<_cor6> when 'true' ->
		    %% Line 2852
		    Tmp
	      end
	end
'fsck_try_est'/5 =
    %% Line 2856
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 2858
	( case _cor0 of
	    ( <( {'fileheader',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_rec129}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Cntrs> =
		      %% Line 2859
		      call 'ets':'new'
			  ('dets_repair', [])
		  in  let <Input> =
			  %% Line 2860
			  call _rec129:'fsck_input'
			      (_cor4, _cor3, Cntrs, _cor0)
		      in  %% Line 2861
			  case apply 'do_sort'/6
				   (_cor4, _cor1, Input, Cntrs, _cor2, _rec129) of
			    <{Reply,SizeData}> when 'true' ->
				%% Line 2863
				case Reply of
				  %% Line 2864
				  <{'ok',NoDups,H1}> when 'true' ->
				      let <_X_> =
					  %% Line 2865
					  ( call 'file':'close'
						(_cor3)
					    -| ['result_not_wanted'] )
				      in  %% Line 2866
					  apply 'fsck_copy'/4
					      (SizeData, H1, 'false', NoDups)
				  %% Line 2867
				  <Return = {'try_again',_cor42}> when 'true' ->
				      do  %% Line 2868
					  apply 'close_files'/3
					      ('false', SizeData, _cor4)
					  %% Line 2869
					  Return
				  %% Line 2870
				  <Else> when 'true' ->
				      let <_X_> =
					  %% Line 2871
					  ( call 'file':'close'
						(_cor3)
					    -| ['result_not_wanted'] )
				      in  do  %% Line 2872
					      apply 'close_files'/3
						  ('false', SizeData, _cor4)
					      %% Line 2873
					      Else
				end
			    ( <_cor10> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor10})
			      -| ['compiler_generated'] )
			  end
	      -| ['compiler_generated'] )
	    ( <_cor41> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','fileheader'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'do_sort'/6 =
    %% Line 2876
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <OldV> =
	    %% Line 2877
	    apply 'module2version'/1
		(_cor0)
	in  %% Line 2883
	    ( case _cor5 of
		( <( {'head',_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_rec130,_cor50,_cor51}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <Output> =
			  call _rec130:'output_objs'
			      (OldV, _cor5, _cor4, _cor2)
		      in  let <TmpDir> =
			      %% Line 2884
			      call 'filename':'dirname'
				  (_cor1)
			  in  let <_cor11> =
				  catch
				      %% Line 2885
				      call 'file_sorter':'sort'
					  (_cor3, Output, %% Line 2886
							  [{'format','binary'}|[{'tmpdir',TmpDir}|[]]])
			      in  let <L> =
				      %% Line 2887
				      call 'ets':'tab2list'
					  (_cor2)
				  in  do  %% Line 2888
					  call 'ets':'delete'
					      (_cor2)
					  let <_cor14> =
					      %% Line 2889
					      call 'lists':'keysort'
						  (1, L)
					  in  let <_cor15> =
						  %% Line 2889
						  call 'lists':'reverse'
						      (_cor14)
					      in  %% Line 2889
						  {_cor11,_cor15}
		  -| ['compiler_generated'] )
		( <_cor52> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','head'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'fsck_copy'/4 =
    %% Line 2891
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{_X_LogSz,Pos,Bins,_X_NoObjects}|SizeData],Head,_X_Bulk,NoDups>
	      when %% Line 2892
		call 'erlang':'is_list'
		    (Bins) ->
	      %% Line 2893
	      case call 'erlang':'=:='
		       (NoDups, 0) of
		<'true'> when 'true' ->
		    let <_cor7> =
			%% Line 2894
			( fun (_cor5) ->
			      case _cor5 of
				<{_cor18,P,B,_cor19}> when 'true' ->
				    {P,B}
				( <_cor6> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor6})
					-| [{'function_name',{'-fsck_copy/4-fun-0-',1}}] )
				  -| ['compiler_generated'] )
			      end
			  -| [{'id',{0,0,'-fsck_copy/4-fun-0-'}}] )
		    in  let <_cor8> =
			    %% Line 2894
			    call 'lists':'map'
				(_cor7, SizeData)
			in  let <PWs> =
				%% Line 2894
				[{Pos,Bins}|_cor8]
			    in  %% Line 2895
				case Head of
				  <{'head',_cor20,_cor21,_cor22,Fd,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,FileName,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48}> when 'true' ->
				      do  %% Line 2896
					  call 'dets_utils':'pwrite'
					      (Fd, FileName, PWs)
					  let <_cor13> =
					      %% Line 2897
					      call 'erlang':'setelement'
						  (16, Head, 'dirty')
					  in  %% Line 2897
					      {'ok',_cor13}
				  ( <_cor10> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor10})
				    -| ['compiler_generated'] )
				end
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 2898
	  <SizeData,Head,Bulk,NoDups> when 'true' ->
	      catch
		  %% Line 2899
		  apply 'fsck_copy1'/4
		      (SizeData, Head, Bulk, NoDups)
	end
'fsck_copy1'/4 =
    %% Line 2901
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[SzData|L],Head,Bulk,NoDups> when 'true' ->
	      %% Line 2902
	      ( case Head of
		  ( <( {'head',_cor48,_cor49,_cor50,_rec132,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 2903
			case SzData of
			  <{LogSz,Pos,{FileName,Fd},NoObjects}> when 'true' ->
			      let <_cor9> =
				  %% Line 2904
				  case <> of
				    <>
					when call 'erlang':'=:='
					      (NoObjects,
					       0) ->
					0
				    <> when 'true' ->
					let <_cor8> =
					    call 'erlang':'-'
						(LogSz, 1)
					in  call 'erlang':'bsl'
						(1, _cor8)
				  end
			      in  let <ExpectedSize> =
				      %% Line 2905
				      call 'erlang':'*'
					  (_cor9, NoObjects)
				  in  do  %% Line 2906
					  case apply 'close_tmp'/1
						   (Fd) of
					    %% Line 2907
					    <'ok'> when 'true' ->
						'ok'
					    %% Line 2908
					    <Err> when 'true' ->
						do  %% Line 2909
						    apply 'close_files'/3
							(Bulk, L, Head)
						    %% Line 2910
						    call 'dets_utils':'file_error'
							(FileName, Err)
					  end
					  do  %% Line 2912
					      case call 'file':'position'
						       (_rec132, Pos) of
						%% Line 2913
						<{'ok',_cor79}>
						    when call 'erlang':'=:='
							  (_cor79,
							   Pos) ->
						    'ok'
						%% Line 2914
						<Err2> when 'true' ->
						    do  %% Line 2915
							apply 'close_files'/3
							    (Bulk, L, Head)
							%% Line 2916
							call 'dets_utils':'file_error'
							    (_cor68, Err2)
					      end
					      let <CR> =
						  %% Line 2918
						  call 'file':'copy'
						      ({FileName,['raw'|['binary']]}, _rec132)
					      in  let <_X_> =
						      %% Line 2919
						      ( call 'file':'delete'
							    (FileName)
							-| ['result_not_wanted'] )
						  in  %% Line 2920
						      case CR of
							%% Line 2921
							<{'ok',Copied}>
							    when let <_cor18> =
								  call 'erlang':'=:='
								      (Copied, ExpectedSize)
							      in  let <_cor19> =
								      %% Line 2922
								      call 'erlang':'=:='
									  (NoObjects, 0)
								  in  call 'erlang':'or'
									  (_cor18, _cor19) ->
							    %% Line 2923
							    apply 'fsck_copy1'/4
								(L, Head, Bulk, NoDups)
							%% Line 2924
							<{'ok',Copied}>
							    when let <_cor20> =
								  call 'erlang':'=:='
								      (Bulk, 'true')
							      in  let <_cor26> =
								      ( call 'erlang':'=:='
									    (_cor74, 8)
									-| ['compiler_generated'] )
								  in  ( call 'erlang':'and'
									    (_cor20, _cor26)
									-| ['compiler_generated'] ) ->
							    let <NoZeros> =
								%% Line 2925
								call 'erlang':'-'
								    (ExpectedSize, Copied)
							    in  let <Dups> =
								    %% Line 2926
								    call 'erlang':'div'
									(NoZeros, _cor9)
								in  let <Addr> =
									%% Line 2927
									call 'erlang':'+'
									    (Pos, Copied)
								    in  let <_cor31> =
									    %% Line 2928
									    call 'erlang':'-'
										(_cor9, 1)
									in  let <NewHead> =
										%% Line 2928
										apply 'free_n_objects'/4
										    (Head, Addr, _cor31, NoDups)
									    in  let <NewNoDups> =
										    %% Line 2929
										    call 'erlang':'-'
											(NoDups, Dups)
										in  %% Line 2930
										    apply 'fsck_copy1'/4
											(L, NewHead, Bulk, NewNoDups)
							%% Line 2931
							<{'ok',_X_Copied}> when 'true' ->
							    do  %% Line 2932
								apply 'close_files'/3
								    (Bulk, L, Head)
								let <_cor34> =
								    %% Line 2933
								    case <> of
								      <>
									  when call 'erlang':'=:='
										(Bulk,
										 'true') ->
									  'initialization_failed'
								      %% Line 2934
								      <> when 'true' ->
									  'repair_failed'
								    end
								in  %% Line 2935
								    {'error',{_cor34,_cor68}}
							%% Line 2936
							<FError> when 'true' ->
							    do  %% Line 2937
								apply 'close_files'/3
								    (Bulk, L, Head)
								%% Line 2938
								call 'dets_utils':'file_error'
								    (FileName, FError)
						      end
			  ( <_cor7> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor7})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor78> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2940
	  <[],Head,_X_Bulk,NoDups>
	      when call 'erlang':'=/='
		    (NoDups,
		     0) ->
	      %% Line 2941
	      ( case Head of
		  ( <( {'head',_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150,_cor151,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162,_rec135,_cor163,_cor164,_cor165,_cor166,_cor167,_cor168,_cor169,_cor170,_cor171}
		       -| ['compiler_generated'] )> when 'true' ->
			{'error',{'initialization_failed',_rec135}}
		    -| ['compiler_generated'] )
		  ( <_cor172> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2942
	  <[],Head,_X_Bulk,_X_NoDups> when 'true' ->
	      %% Line 2943
	      case Head of
		<{'head',_cor173,_cor174,_cor175,_cor176,_cor177,_cor178,_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191,_cor192,_cor193,_cor194,_cor195,_cor196,_cor197,_cor198,_cor199,_cor200,_cor201,_cor202,_cor203}> when 'true' ->
		    let <_cor43> =
			call 'erlang':'setelement'
			    (16, Head, 'dirty')
		    in  {'ok',_cor43}
		( <_cor204> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','head'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  ( <_cor47,_cor46,_cor45,_cor44> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor47,_cor46,_cor45,_cor44})
		  -| [{'function_name',{'fsck_copy1',4}}] )
	    -| ['compiler_generated'] )
	end
'free_n_objects'/4 =
    %% Line 2945
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Head,_X_Addr,_X_Size,0> when 'true' ->
	      %% Line 2946
	      Head
	  %% Line 2947
	  <Head,Addr,Size,N> when 'true' ->
	      %% Line 2948
	      case call 'dets_utils':'free'
		       (Head, Addr, Size) of
		<{NewHead,_cor12}> when 'true' ->
		    let <_cor5> =
			%% Line 2949
			call 'erlang':'+'
			    (Addr, Size)
		    in  let <NewAddr> =
			    %% Line 2949
			    call 'erlang':'+'
				(_cor5, 1)
			in  let <_cor7> =
				%% Line 2950
				call 'erlang':'-'
				    (N, 1)
			    in  %% Line 2950
				apply 'free_n_objects'/4
				    (NewHead, NewAddr, Size, _cor7)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	end
'close_files'/3 =
    %% Line 2952
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'false',SizeData,Head> when 'true' ->
	      %% Line 2953
	      ( case Head of
		  ( <( {'head',_cor13,_cor14,_cor15,_rec137,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_X_> =
			    ( call 'file':'close'
				  (_rec137)
			      -| ['result_not_wanted'] )
			in  %% Line 2954
			    apply 'close_files'/3
				('true', SizeData, Head)
		    -| ['compiler_generated'] )
		  ( <_cor43> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['result_not_wanted','compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2955
	  <'true',SizeData,_X_Head> when 'true' ->
	      let <Fun> =
		  %% Line 2956
		  ( fun (_cor7) ->
			case _cor7 of
			  <{_X_Size,_X_Pos,{FileName,Fd},_X_No}> when 'true' ->
			      let <_X_> =
				  %% Line 2957
				  apply 'close_tmp'/1
				      (Fd)
			      in  %% Line 2958
				  call 'file':'delete'
				      (FileName)
			  %% Line 2959
			  <_cor44> when 'true' ->
			      %% Line 2960
			      'ok'
			end
		    -| [{'id',{0,0,'-close_files/3-fun-0-'}}] )
	      in  %% Line 2962
		  call 'lists':'foreach'
		      (Fun, SizeData)
	  ( <_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10})
		  -| [{'function_name',{'close_files',3}}] )
	    -| ['compiler_generated'] )
	end
'close_tmp'/1 =
    %% Line 2964
    fun (_cor0) ->
	%% Line 2965
	call 'file':'close'
	    (_cor0)
'fslot'/2 =
    %% Line 2967
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    catch
		%% Line 2969
		case apply 'write_cache'/1
			 (_cor1) of
		  <{NH,[]}> when 'true' ->
		      %% Line 2970
		      ( case NH of
			  ( <( {'head',_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_rec138,_cor38,_cor39}
			       -| ['compiler_generated'] )> when 'true' ->
				let <Objs> =
				    call _rec138:'slot_objs'
					(NH, _cor0)
				in  %% Line 2971
				    {NH,Objs}
			    -| ['compiler_generated'] )
			  ( <_cor40> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','head'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  ( <_cor2> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor2})
		    -| ['compiler_generated'] )
		end
	in  %% Line 2968
	    case _cor6 of
	      %% Line 2973
	      <Reply = {NewHead = {'head',_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71},_X_Objects}> when ( 'true'
																																			-| ['compiler_generated'] ) ->
		  %% Line 2974
		  Reply
	      ( <_cor7> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor7})
		-| ['compiler_generated'] )
	    end
'do_update_counter'/3 =
    %% Line 2977
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Head = {'head',_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49},_X_Key,_X_Incr>
	      when call 'erlang':'=/='
		    (_cor27,
		     'set') ->
	      %% Line 2978
	      {Head,'badarg'}
	  %% Line 2979
	  <Head,Key,Incr> when 'true' ->
	      %% Line 2980
	      case apply 'flookup_keys'/2
		       (Head, [Key|[]]) of
		%% Line 2981
		<{H1,[O|[]]}> when 'true' ->
		    %% Line 2982
		    ( case H1 of
			( <( {'head',_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_rec139,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <_cor12> =
				  catch
				      %% Line 2983
				      apply 'try_update_tuple'/3
					  (O, _rec139, Incr)
			      in  %% Line 2983
				  case _cor12 of
				    %% Line 2984
				    <{'EXIT',_cor81}> when 'true' ->
					%% Line 2985
					{H1,'badarg'}
				    %% Line 2986
				    <{New,Term}> when 'true' ->
					%% Line 2987
					case apply 'finsert'/2
						 (H1, [Term|[]]) of
					  %% Line 2988
					  <{H2,'ok'}> when 'true' ->
					      %% Line 2989
					      {H2,New}
					  %% Line 2990
					  <Reply> when 'true' ->
					      %% Line 2991
					      Reply
					end
				    ( <_cor14> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor14})
				      -| ['compiler_generated'] )
				  end
			  -| ['compiler_generated'] )
			( <_cor80> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','head'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 2994
		<{H1,[]}> when 'true' ->
		    %% Line 2995
		    {H1,'badarg'}
		%% Line 2996
		<HeadError> when 'true' ->
		    %% Line 2997
		    HeadError
	      end
	end
'try_update_tuple'/3 =
    %% Line 3000
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <O,_X_Kp,{Pos,Incr}> when 'true' ->
	      %% Line 3001
	      apply 'try_update_tuple2'/3
		  (O, Pos, Incr)
	  %% Line 3002
	  <O,Kp,Incr> when 'true' ->
	      let <_cor3> =
		  %% Line 3003
		  call 'erlang':'+'
		      (Kp, 1)
	      in  %% Line 3003
		  apply 'try_update_tuple2'/3
		      (O, _cor3, Incr)
	end
'try_update_tuple2'/3 =
    %% Line 3005
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 3006
	    call 'erlang':'element'
		(_cor1, _cor2)
	in  let <New> =
		%% Line 3006
		call 'erlang':'+'
		    (_cor3, _cor0)
	    in  let <_cor5> =
		    %% Line 3007
		    call 'erlang':'setelement'
			(_cor1, _cor2, New)
		in  %% Line 3007
		    {New,_cor5}
'set_verbose'/1 =
    %% Line 3009
    fun (_cor0) ->
	case _cor0 of
	  <'true'> when 'true' ->
	      %% Line 3010
	      call 'erlang':'put'
		  ('verbose', 'yes')
	  %% Line 3011
	  <_cor2> when 'true' ->
	      %% Line 3012
	      call 'erlang':'erase'
		  ('verbose')
	end
'where_is_object'/2 =
    %% Line 3014
    fun (_cor1,_cor0) ->
	%% Line 3015
	( case _cor1 of
	    ( <( {'head',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_rec140,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 3016
		  case apply 'check_objects'/2
			   ([_cor0|[]], _rec140) of
		    %% Line 3017
		    <'true'> when 'true' ->
			let <_cor5> =
			    catch
				%% Line 3018
				apply 'write_cache'/1
				    (_cor1)
			in  %% Line 3018
			    case _cor5 of
			      %% Line 3019
			      <{NewHead,[]}> when 'true' ->
				  let <_cor8> =
				      %% Line 3020
				      call _cor40:'find_object'
					  (NewHead, _cor0)
				  in  %% Line 3020
				      {NewHead,_cor8}
			      %% Line 3021
			      <HeadError = {NewHead = {'head',_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105},_cor106}> when ( 'true'
																																					       -| ['compiler_generated'] ) ->
				  %% Line 3022
				  HeadError
			      ( <_cor9> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor9})
				-| ['compiler_generated'] )
			    end
		    %% Line 3024
		    <'false'> when 'true' ->
			%% Line 3025
			{_cor1,'badarg'}
		    ( <_cor10> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor10})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor43> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'check_objects'/2 =
    %% Line 3028
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[T|Ts],Kp>
	      when try
		    let <_cor2> =
			call 'erlang':'tuple_size'
			    (T)
		    in  call 'erlang':'>='
			    (_cor2, Kp)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 3029
	      apply 'check_objects'/2
		  (Ts, Kp)
	  %% Line 3030
	  <L,_X_Kp> when 'true' ->
	      %% Line 3031
	      call 'erlang':'=:='
		  (L, [])
	end
'no_things'/1 =
    %% Line 3033
    fun (_cor0) ->
	case _cor0 of
	  <Head = {'head',_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40}>
	      when call 'erlang':'=:='
		    (_cor15,
		     'undefined') ->
	      _cor14
	  %% Line 3035
	  <Head> when 'true' ->
	      %% Line 3036
	      ( case Head of
		  ( <( {'head',_cor72,_cor73,_cor74,_cor75,_cor76,_rec143,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101}
		       -| ['compiler_generated'] )> when 'true' ->
			_rec143
		    -| ['compiler_generated'] )
		  ( <_cor102> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'file_no_things'/1 =
    %% Line 3038
    fun (_cor0) ->
	case _cor0 of
	  <FH = {'fileheader',_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31}>
	      when call 'erlang':'=:='
		    (_cor20,
		     'undefined') ->
	      _cor19
	  %% Line 3040
	  <FH> when 'true' ->
	      %% Line 3041
	      ( case FH of
		  ( <( {'fileheader',_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_rec145,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74}
		       -| ['compiler_generated'] )> when 'true' ->
			_rec145
		    -| ['compiler_generated'] )
		  ( <_cor75> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','fileheader'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'update_cache'/3 =
    %% Line 3062
    fun (_cor2,_cor1,_cor0) ->
	%% Line 3063
	case apply 'update_cache'/2
		 (_cor2, [{_cor0,_cor1}|[]]) of
	  <{Head1,LU,PwriteList}> when 'true' ->
	      %% Line 3064
	      case call 'dets_utils':'pwrite'
		       (Head1, PwriteList) of
		<{NewHead,'ok'}> when 'true' ->
		    %% Line 3065
		    {NewHead,LU}
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'update_cache'/2 =
    %% Line 3068
    fun (_cor1,_cor0) ->
	%% Line 3069
	( case _cor1 of
	    ( <( {'head',_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_rec146,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 3070
		  case _rec146 of
		    <{'cache',C,Size0,Ins,_cor90,_cor91,_cor92}> when 'true' ->
			let <_cor6> =
			    %% Line 3071
			    call 'erlang':'external_size'
				(_cor0)
			in  let <NewSize> =
				%% Line 3071
				call 'erlang':'+'
				    (Size0, _cor6)
			    in  %% Line 3073
				case %% Line 3074
				     apply 'cache_binary'/7
					 (_cor1, _cor0, C, Size0, Ins, 'false', []) of
				  <{NewC,NewIns,Lookup,Found}> when 'true' ->
				      let <_cor10> =
					  %% Line 3075
					  call 'erlang':'setelement'
					      (4, _rec146, NewIns)
				      in  let <_cor11> =
					      %% Line 3075
					      call 'erlang':'setelement'
						  (3, _cor10, NewSize)
					  in  let <_cor13> =
						  %% Line 3075
						  call 'erlang':'setelement'
						      (2, _cor11, NewC)
					      in  let <_cor17> =
						      %% Line 3076
						      call 'erlang':'setelement'
							  (22, _cor1, _cor13)
						  in  %% Line 3077
						      case <> of
							%% Line 3078
							<>
							    when let <_cor19> =
								  call 'erlang':'=:='
								      (Lookup, 'true')
							      in  let <_cor26> =
								      call 'erlang':'>='
									  (NewSize, _cor91)
								  in  call 'erlang':'or'
									  (_cor19, _cor26) ->
							    %% Line 3080
							    case call _cor86:'write_cache'
								     (_cor17) of
							      <{NewHead,LU,PwriteList}> when 'true' ->
								  let <_cor30> =
								      %% Line 3081
								      call 'erlang':'++'
									  (Found, LU)
								  in  %% Line 3081
								      {NewHead,_cor30,PwriteList}
							      ( <_cor29> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_cor29})
								-| ['compiler_generated'] )
							    end
							%% Line 3082
							<>
							    when call 'erlang':'=:='
								  (NewC,
								   []) ->
							    %% Line 3083
							    {_cor17,Found,[]}
							%% Line 3084
							<>
							    when call 'erlang':'=:='
								  (_cor90,
								   'undefined') ->
							    let <Now> =
								%% Line 3086
								call 'erlang':'now'
								    ()
							    in  let <Me> =
								    %% Line 3086
								    call 'erlang':'self'
									()
								in  let <Call> = {%% Line 3087
									 '$dets_call',%% Line 3087
										      Me,%% Line 3087
											 {'delayed_write',Now}}
								    in  do  %% Line 3088
									    call 'erlang':'send_after'
										(_cor92, Me, Call)
									    %% Line 3089
									    case _cor13 of
									      <{'cache',_cor169,_cor170,_cor171,_cor172,_cor173,_cor174}> when 'true' ->
										  let <_cor44> =
										      call 'erlang':'setelement'
											  (5, _cor13, Now)
										  in  case _cor17 of
											<{'head',_cor176,_cor177,_cor178,_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191,_cor192,_cor193,_cor194,_cor195,_cor196,_cor197,_cor198,_cor199,_cor200,_cor201,_cor202,_cor203,_cor204,_cor205,_cor206}> when 'true' ->
											    let <_cor48> =
												call 'erlang':'setelement'
												    (22, _cor17, _cor44)
											    in  {_cor48,Found,[]}
											( <_cor207> when 'true' ->
											      ( call ( 'erlang'
												       -| ['compiler_generated'] ):( 'error'
																     -| ['compiler_generated'] )
												    (( {'badrecord','head'}
												       -| ['compiler_generated'] ))
												-| ['compiler_generated'] )
											  -| ['compiler_generated'] )
										      end
									      ( <_cor175> when 'true' ->
										    ( call ( 'erlang'
											     -| ['compiler_generated'] ):( 'error'
															   -| ['compiler_generated'] )
											  (( {'badrecord','cache'}
											     -| ['compiler_generated'] ))
										      -| ['compiler_generated'] )
										-| ['compiler_generated'] )
									    end
							%% Line 3090
							<>
							    when call 'erlang':'=:='
								  (Size0,
								   0) ->
							    let <_rec156> =
								%% Line 3093
								call 'erlang':'now'
								    ()
							    in  %% Line 3093
								case _cor13 of
								  <{'cache',_cor208,_cor209,_cor210,_cor211,_cor212,_cor213}> when 'true' ->
								      let <_cor52> =
									  call 'erlang':'setelement'
									      (5, _cor13, _rec156)
								      in  case _cor17 of
									    <{'head',_cor215,_cor216,_cor217,_cor218,_cor219,_cor220,_cor221,_cor222,_cor223,_cor224,_cor225,_cor226,_cor227,_cor228,_cor229,_cor230,_cor231,_cor232,_cor233,_cor234,_cor235,_cor236,_cor237,_cor238,_cor239,_cor240,_cor241,_cor242,_cor243,_cor244,_cor245}> when 'true' ->
										let <_cor56> =
										    call 'erlang':'setelement'
											(22, _cor17, _cor52)
										in  {_cor56,Found,[]}
									    ( <_cor246> when 'true' ->
										  ( call ( 'erlang'
											   -| ['compiler_generated'] ):( 'error'
															 -| ['compiler_generated'] )
											(( {'badrecord','head'}
											   -| ['compiler_generated'] ))
										    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									  end
								  ( <_cor214> when 'true' ->
									( call ( 'erlang'
										 -| ['compiler_generated'] ):( 'error'
													       -| ['compiler_generated'] )
									      (( {'badrecord','cache'}
										 -| ['compiler_generated'] ))
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								end
							%% Line 3094
							<> when 'true' ->
							    %% Line 3096
							    {_cor17,Found,[]}
						      end
				  ( <_cor8> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor8})
				    -| ['compiler_generated'] )
				end
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor89> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'cache_binary'/7 =
    %% Line 3099
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Head,[{Q,Os}|L],C,Seq,Ins,Lu,F>
	      when call 'erlang':'=:='
		    (Q,
		     'delete_object') ->
	      %% Line 3100
	      ( case Head of
		  ( <( {'head',_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_rec158,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53}
		       -| ['compiler_generated'] )> when 'true' ->
			apply 'cache_obj_op'/10
			    (Head, L, C, Seq, Ins, Lu, F, Os, _rec158, Q)
		    -| ['compiler_generated'] )
		  ( <_cor54> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 3101
	  <Head,[{Q,Os}|L],C,Seq,Ins,Lu,F>
	      when call 'erlang':'=:='
		    (Q,
		     'insert') ->
	      let <_cor9> =
		  %% Line 3102
		  call 'erlang':'length'
		      (Os)
	      in  let <NewIns> =
		      %% Line 3102
		      call 'erlang':'+'
			  (Ins, _cor9)
		  in  %% Line 3103
		      ( case Head of
			  ( <( {'head',_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_rec159,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84}
			       -| ['compiler_generated'] )> when 'true' ->
				apply 'cache_obj_op'/10
				    (Head, L, C, Seq, NewIns, Lu, F, Os, _rec159, Q)
			    -| ['compiler_generated'] )
			  ( <_cor85> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','head'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 3104
	  <Head,[{Q,Ks}|L],C,Seq,Ins,Lu,F>
	      when call 'erlang':'=:='
		    (Q,
		     'delete_key') ->
	      %% Line 3105
	      apply 'cache_key_op'/9
		  (Head, L, C, Seq, Ins, Lu, F, Ks, Q)
	  %% Line 3106
	  <Head,[{Q,Ks}|L],C,Seq,Ins,_X_Lu,F>
	      when call 'erlang':'=:='
		    (C,
		     []) ->
	      %% Line 3107
	      apply 'cache_key_op'/9
		  (Head, L, C, Seq, Ins, 'true', F, Ks, Q)
	  %% Line 3108
	  <Head,[{Q,Ks}|L],C,Seq,Ins,Lu,F> when 'true' ->
	      %% Line 3109
	      ( case Head of
		  ( <( {'head',_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_rec160,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'dets_utils':'cache_lookup'
				 (_rec160, Ks, C, []) of
			  %% Line 3110
			  <'false'> when 'true' ->
			      %% Line 3111
			      apply 'cache_key_op'/9
				  (Head, L, C, Seq, Ins, 'true', F, Ks, Q)
			  %% Line 3112
			  <Found> when 'true' ->
			      %% Line 3113
			      case Q of
				<{'lookup',Pid}> when 'true' ->
				    %% Line 3114
				    apply 'cache_binary'/7
					(Head, L, C, Seq, Ins, Lu, [{Pid,Found}|F])
				( <_cor15> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor15})
				  -| ['compiler_generated'] )
			      end
			end
		    -| ['compiler_generated'] )
		  ( <_cor116> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 3116
	  <_X_Head,[],C,_X_Seq,Ins,Lu,F> when 'true' ->
	      %% Line 3117
	      {C,Ins,Lu,F}
	  ( <_cor23,_cor22,_cor21,_cor20,_cor19,_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor23,_cor22,_cor21,_cor20,_cor19,_cor18,_cor17})
		  -| [{'function_name',{'cache_binary',7}}] )
	    -| ['compiler_generated'] )
	end
'cache_key_op'/9 =
    %% Line 3119
    fun (_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Head,L,C,Seq,Ins,Lu,F,[K|Ks],Q> when 'true' ->
	      let <E> = {%% Line 3120
		   K,%% Line 3120
		     {Seq,Q}}
	      in  let <_cor10> =
		      %% Line 3121
		      call 'erlang':'+'
			  (Seq, 1)
		  in  %% Line 3121
		      apply 'cache_key_op'/9
			  (Head, L, [E|C], _cor10, Ins, Lu, F, Ks, Q)
	  %% Line 3122
	  <Head,L,C,Seq,Ins,Lu,F,[],_X_Q> when 'true' ->
	      %% Line 3123
	      apply 'cache_binary'/7
		  (Head, L, C, Seq, Ins, Lu, F)
	  ( <_cor19,_cor18,_cor17,_cor16,_cor15,_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17,_cor16,_cor15,_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'cache_key_op',9}}] )
	    -| ['compiler_generated'] )
	end
'cache_obj_op'/10 =
    %% Line 3125
    fun (_cor9,_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor9,_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Head,L,C,Seq,Ins,Lu,F,[O|Os],Kp,Q> when 'true' ->
	      let <_cor10> =
		  %% Line 3126
		  call 'erlang':'element'
		      (Kp, O)
	      in  let <E> = {_cor10,%% Line 3126
			      {Seq,{Q,O}}}
		  in  let <_cor12> =
			  %% Line 3127
			  call 'erlang':'+'
			      (Seq, 1)
		      in  %% Line 3127
			  apply 'cache_obj_op'/10
			      (Head, L, [E|C], _cor12, Ins, Lu, F, Os, Kp, Q)
	  %% Line 3128
	  <Head,L,C,Seq,Ins,Lu,F,[],_X_Kp,_X_Q> when 'true' ->
	      %% Line 3129
	      apply 'cache_binary'/7
		  (Head, L, C, Seq, Ins, Lu, F)
	  ( <_cor22,_cor21,_cor20,_cor19,_cor18,_cor17,_cor16,_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21,_cor20,_cor19,_cor18,_cor17,_cor16,_cor15,_cor14,_cor13})
		  -| [{'function_name',{'cache_obj_op',10}}] )
	    -| ['compiler_generated'] )
	end
'delayed_write'/2 =
    %% Line 3133
    fun (_cor1,_cor0) ->
	%% Line 3134
	( case _cor1 of
	    ( <( {'head',_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_rec161,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 3135
		  ( case _rec161 of
		      ( <( {'cache',_cor78,_cor79,_cor80,_rec162,_cor81,_cor82}
			   -| ['compiler_generated'] )> when 'true' ->
			    %% Line 3136
			    case <> of
			      %% Line 3137
			      <>
				  when call 'erlang':'=:='
					(_rec162,
					 _cor0) ->
				  let <_cor8> =
				      catch
					  %% Line 3139
					  apply 'write_cache'/1
					      (_cor1)
				  in  %% Line 3139
				      case _cor8 of
					%% Line 3140
					<{Head2,[]}> when 'true' ->
					    %% Line 3141
					    ( case Head2 of
						( <( {'head',_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_rec164,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113}
						     -| ['compiler_generated'] )> when 'true' ->
						      case _rec164 of
							<{'cache',_cor115,_cor116,_cor117,_cor118,_cor119,_cor120}> when 'true' ->
							    let <_cor13> =
								call 'erlang':'setelement'
								    (5, _rec164, 'undefined')
							    in  %% Line 3142
								call 'erlang':'setelement'
								    (22, Head2, _cor13)
							( <_cor121> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','cache'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
						  -| ['compiler_generated'] )
						( <_cor114> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','head'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					%% Line 3143
					<{NewHead,_X_Error}> when 'true' ->
					    %% Line 3144
					    NewHead
					( <_cor17> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_cor17})
					  -| ['compiler_generated'] )
				      end
			      %% Line 3146
			      <> when 'true' ->
				  %% Line 3149
				  case <> of
				    %% Line 3150
				    <>
					when ( call 'erlang':'=:='
						(_cor79,
						 0)
					    -| ['compiler_generated'] ) ->
					let <_cor26> =
					    %% Line 3152
					    call 'erlang':'setelement'
						(5, _rec161, 'undefined')
					in  %% Line 3153
					    call 'erlang':'setelement'
						(22, _cor1, _cor26)
				    %% Line 3154
				    <> when 'true' ->
					%% Line 3156
					case _cor0 of
					  <{MS1,S1,M1}> when 'true' ->
					      %% Line 3157
					      case _rec162 of
						<{MS2,S2,M2}> when 'true' ->
						    let <_cor32> =
							%% Line 3158
							call 'erlang':'*'
							    (1000000, MS1)
						    in  let <_cor33> =
							    %% Line 3158
							    call 'erlang':'+'
								(S1, _cor32)
							in  let <_cor34> =
								%% Line 3158
								call 'erlang':'*'
								    (1000000, _cor33)
							    in  let <WrT> =
								    %% Line 3158
								    call 'erlang':'+'
									(M1, _cor34)
								in  let <_cor36> =
									%% Line 3159
									call 'erlang':'*'
									    (1000000, MS2)
								    in  let <_cor37> =
									    %% Line 3159
									    call 'erlang':'+'
										(S2, _cor36)
									in  let <_cor38> =
										%% Line 3159
										call 'erlang':'*'
										    (1000000, _cor37)
									    in  let <LastWrT> =
										    %% Line 3159
										    call 'erlang':'+'
											(M2, _cor38)
										in  let <_cor40> =
											%% Line 3160
											call 'erlang':'-'
											    (LastWrT, WrT)
										    in  let <_cor41> =
											    %% Line 3160
											    call 'erlang':'/'
												(_cor40, 1000)
											in  let <When> =
												%% Line 3160
												call 'erlang':'round'
												    (_cor41)
											    in  let <Me> =
												    %% Line 3160
												    call 'erlang':'self'
													()
												in  let <Call> = {%% Line 3161
													 '$dets_call',%% Line 3161
														      Me,%% Line 3161
															 {'delayed_write',_rec162}}
												    in  do  %% Line 3162
													    call 'erlang':'send_after'
														(When, Me, Call)
													    _cor1
						( <_cor31> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_cor31})
						  -| ['compiler_generated'] )
					      end
					  ( <_cor30> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_cor30})
					    -| ['compiler_generated'] )
					end
				  end
			    end
			-| ['compiler_generated'] )
		      ( <_cor83> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','cache'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor77> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'write_cache'/1 =
    %% Line 3168
    fun (_cor0) ->
	%% Line 3169
	( case _cor0 of
	    ( <( {'head',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_rec168,_cor34,_cor35}
		 -| ['compiler_generated'] )> when 'true' ->
		  case call _rec168:'write_cache'
			   (_cor0) of
		    <{Head1,LU,PwriteList}> when 'true' ->
			%% Line 3170
			case call 'dets_utils':'pwrite'
				 (Head1, PwriteList) of
			  <{NewHead,'ok'}> when 'true' ->
			      %% Line 3171
			      {NewHead,LU}
			  ( <_cor4> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor4})
			    -| ['compiler_generated'] )
			end
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor3})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor36> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'status'/1 =
    %% Line 3173
    fun (_cor0) ->
	%% Line 3174
	( case _cor0 of
	    ( <( {'head',_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_rec169,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34}
		 -| ['compiler_generated'] )> when 'true' ->
		  case _rec169 of
		    %% Line 3175
		    <'saved'> when 'true' ->
			'ok'
		    %% Line 3176
		    <'dirty'> when 'true' ->
			'ok'
		    %% Line 3177
		    <'new_dirty'> when 'true' ->
			'ok'
		    %% Line 3178
		    <Error> when 'true' ->
			Error
		  end
	      -| ['compiler_generated'] )
	    ( <_cor35> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'init_scan'/2 =
    %% Line 3184
    fun (_cor1,_cor0) ->
	do  %% Line 3185
	    apply 'check_safe_fixtable'/1
		(_cor1)
	    let <FreeLists> =
		%% Line 3186
		call 'dets_utils':'get_freelists'
		    (_cor1)
	    in  %% Line 3187
		( case _cor1 of
		    ( <( {'head',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_rec170}
			 -| ['compiler_generated'] )> when 'true' ->
			  %% Line 3188
			  case call 'dets_utils':'find_next_allocated'
				   (FreeLists, _rec170, _rec170) of
			    %% Line 3189
			    <{From,To}> when 'true' ->
				%% Line 3190
				{'dets_cont','undefined',_cor0,#{}#,{From,To,#{}#},'undefined','undefined','undefined'}
			    %% Line 3191
			    <'none'> when 'true' ->
				%% Line 3192
				{'dets_cont','undefined',_cor0,'eof',#{}#,'undefined','undefined','undefined'}
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor6})
			      -| ['compiler_generated'] )
			  end
		      -| ['compiler_generated'] )
		    ( <_cor39> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','head'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'check_safe_fixtable'/1 =
    %% Line 3195
    fun (_cor0) ->
	%% Line 3196
	( case _cor0 of
	    ( <( {'head',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_rec171,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor8> =
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (_rec171,
				       'false') ->
				let <_cor5> =
				    %% Line 3197
				    call 'erlang':'get'
					('verbose')
				in  %% Line 3197
				    ( case <> of
					( <>
					      when call 'erlang':'=:='
						    (_cor5,
						     'yes') ->
					      'true'
					  -| ['compiler_generated'] )
					( <> when 'true' ->
					      call 'dets_utils':'debug_mode'
						  ()
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  in  case _cor8 of
			%% Line 3198
			<'true'> when 'true' ->
			    %% Line 3199
			    call 'error_logger':'format'
				(%% Line 3200
				 [42|[42|[32|[100|[101|[116|[115|[58|[32|[116|[114|[97|[118|[101|[114|[115|[97|[108|[32|[111|[102|[32|[126|[112|[32|[110|[101|[101|[100|[115|[32|[115|[97|[102|[101|[95|[102|[105|[120|[116|[97|[98|[108|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 3201
																																				       [_cor36|[]])
			%% Line 3202
			<'false'> when 'true' ->
			    %% Line 3203
			    'ok'
			( <_cor11> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor11})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor43> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','head'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'scan'/2 =
    %% Line 3208
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Head,C = {'dets_cont',_cor12,_cor13,_cor14,#{}#,_cor15,_cor16,_cor17}> when 'true' ->
	      %% Line 3209
	      {[],C}
	  %% Line 3210
	  <Head,C> when 'true' ->
	      %% Line 3211
	      case C of
		<{'dets_cont',_cor18,No,Bin,L0,_cor19,_cor20,_cor21}> when 'true' ->
		    %% Line 3212
		    case L0 of
		      <{From,To,L}> when 'true' ->
			  let <_cor6> =
			      %% Line 3213
			      case No of
				%% Line 3214
				<'default'> when 'true' ->
				    %% Line 3215
				    0
				%% Line 3216
				<_cor22>
				    when call 'erlang':'is_integer'
					  (No) ->
				    let <_cor4> =
					%% Line 3217
					call 'erlang':'-'
					    (No)
				    in  %% Line 3217
					call 'erlang':'-'
					    (_cor4, 1)
				( <_cor5> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor5})
				  -| ['compiler_generated'] )
			      end
			  in  %% Line 3219
			      ( case Head of
				  ( <( {'head',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_rec173,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52}
				       -| ['compiler_generated'] )> when 'true' ->
					apply 'scan'/8
					    (Bin, Head, From, To, L, [], _cor6, {C,_rec173})
				    -| ['compiler_generated'] )
				  ( <_cor53> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','head'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor3})
			-| ['compiler_generated'] )
		    end
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	end
'scan'/8 =
    %% Line 3221
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Bin,H,From,To,L,Ts,R,C = {C0,Type}> when 'true' ->
	      %% Line 3222
	      ( case H of
		  ( <( {'head',_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_rec174,_cor66,_cor67}
		       -| ['compiler_generated'] )> when 'true' ->
			case call _rec174:'scan_objs'
				 (H, Bin, From, To, L, Ts, R, Type) of
			  %% Line 3223
			  <{'more',NFrom,NTo,NL,NTs,NR,Sz}> when 'true' ->
			      %% Line 3224
			      apply 'scan_read'/8
				  (H, NFrom, NTo, Sz, NL, NTs, NR, C)
			  %% Line 3225
			  <{'stop',B = #{}#,NFrom,NTo,NL = #{}#,NTs}> when 'true' ->
			      let <Ftab> =
				  %% Line 3226
				  call 'dets_utils':'get_freelists'
				      (H)
			      in  %% Line 3227
				  case call 'dets_utils':'find_next_allocated'
					   (Ftab, NFrom, _cor67) of
				    %% Line 3228
				    <'none'> when 'true' ->
					%% Line 3229
					case C0 of
					  <{'dets_cont',_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106}> when 'true' ->
					      let <_cor14> =
						  call 'erlang':'setelement'
						      (5, C0, B)
					      in  let <_cor16> =
						      call 'erlang':'setelement'
							  (4, _cor14, 'eof')
						  in  {NTs,_cor16}
					  ( <_cor107> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','dets_cont'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
				    %% Line 3230
				    <_cor108> when 'true' ->
					let <_rec177> = {%% Line 3231
					     NFrom,%% Line 3231
						   NTo,%% Line 3231
						       NL}
					in  %% Line 3231
					    case C0 of
					      <{'dets_cont',_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115}> when 'true' ->
						  let <_cor19> =
						      call 'erlang':'setelement'
							  (5, C0, _rec177)
						  in  let <_cor21> =
							  call 'erlang':'setelement'
							      (4, _cor19, B)
						      in  {NTs,_cor21}
					      ( <_cor116> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','dets_cont'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
				  end
			  %% Line 3233
			  <{'stop',B,NFrom,NTo,NL,NTs}> when 'true' ->
			      let <_rec179> = {%% Line 3234
				   NFrom,%% Line 3234
					 NTo,%% Line 3234
					     NL}
			      in  %% Line 3234
				  case C0 of
				    <{'dets_cont',_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123}> when 'true' ->
					let <_cor25> =
					    call 'erlang':'setelement'
						(5, C0, _rec179)
					in  let <_cor27> =
						call 'erlang':'setelement'
						    (4, _cor25, B)
					    in  {NTs,_cor27}
				    ( <_cor124> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','dets_cont'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
			  %% Line 3235
			  <'bad_object'> when 'true' ->
			      let <_cor28> =
				  %% Line 3236
				  call 'dets_utils':'bad_object'
				      ('scan', {From,To,Bin})
			      in  %% Line 3236
				  {'scan_error',_cor28}
			  ( <_cor29> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor29})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor68> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','head'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor37,_cor36,_cor35,_cor34,_cor33,_cor32,_cor31,_cor30> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor37,_cor36,_cor35,_cor34,_cor33,_cor32,_cor31,_cor30})
		  -| [{'function_name',{'scan',8}}] )
	    -| ['compiler_generated'] )
	end
'scan_read'/8 =
    %% Line 3239
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_H,From,To,_X_Min,L0,Ts,%% Line 3240
				     R,%% Line 3240
				       {C,_X_Type}>
	      when %% Line 3240
		call 'erlang':'>='
		    (R,
		     8192) ->
	      let <L> = {%% Line 3242
		   From,%% Line 3242
			To,%% Line 3242
			   L0}
	      in  %% Line 3243
		  case C of
		    <{'dets_cont',_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41}> when 'true' ->
			let <_cor10> =
			    call 'erlang':'setelement'
				(5, C, L)
			in  let <_cor12> =
				call 'erlang':'setelement'
				    (4, _cor10, #{}#)
			    in  {Ts,_cor12}
		    ( <_cor42> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','dets_cont'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 3244
	  <H,From,_X_To,Min,_X_L,Ts,R,C> when 'true' ->
	      let <_cor13> =
		  %% Line 3245
		  case <> of
		    %% Line 3246
		    <>
			when call 'erlang':'<'
			      (Min,
			       8192) ->
			8192
		    %% Line 3247
		    <> when 'true' ->
			Min
		  end
	      in  let <FreeLists> =
		      %% Line 3249
		      call 'dets_utils':'get_freelists'
			  (H)
		  in  %% Line 3250
		      ( case H of
			  ( <( {'head',_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_rec182}
			       -| ['compiler_generated'] )> when 'true' ->
				case call 'dets_utils':'find_allocated'
					 (FreeLists, From, _cor13, _rec182) of
				  %% Line 3251
				  <Bin0 = #{}#> when 'true' ->
				      %% Line 3252
				      case C of
					<{Cont,_cor74}> when 'true' ->
					    %% Line 3253
					    case Cont of
					      <{'dets_cont',_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81}> when 'true' ->
						  let <_cor20> =
						      call 'erlang':'setelement'
							  (5, Cont, Bin0)
						  in  let <_cor22> =
							  call 'erlang':'setelement'
							      (4, _cor20, 'eof')
						      in  {Ts,_cor22}
					      ( <_cor82> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','dets_cont'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					( <_cor18> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor18})
					  -| ['compiler_generated'] )
				      end
				  %% Line 3254
				  <#{#<From1>(32,1,'integer',['unsigned'|['big']]),
				     #<To1>(32,1,'integer',['unsigned'|['big']]),
				     #<L1>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
				      %% Line 3255
				      case call 'dets_utils':'pread_n'
					       (_cor46, From1, _cor13) of
					%% Line 3256
					<'eof'> when 'true' ->
					    %% Line 3257
					    {'scan_error','premature_eof'}
					%% Line 3258
					<NewBin> when 'true' ->
					    %% Line 3259
					    apply 'scan'/8
						(NewBin, H, From1, To1, L1, Ts, R, C)
				      end
				  ( <_cor26> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor26})
				    -| ['compiler_generated'] )
				end
			    -| ['compiler_generated'] )
			  ( <_cor73> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','head'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	end
'err'/1 =
    %% Line 3263
    fun (_cor0) ->
	%% Line 3264
	case call 'erlang':'get'
		 ('verbose') of
	  %% Line 3265
	  <'yes'> when 'true' ->
	      do  %% Line 3266
		  call 'error_logger':'format'
		      ([42|[42|[32|[100|[101|[116|[115|[58|[32|[102|[97|[105|[108|[101|[100|[32|[119|[105|[116|[104|[32|[126|[119|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]], [_cor0|[]])
		  _cor0
	  %% Line 3268
	  <'undefined'> when 'true' ->
	      _cor0
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor1})
	    -| ['compiler_generated'] )
	end
'file_info'/1 =
    %% Line 3274
    fun (_cor0) ->
	let <_cor1> =
	    catch
		%% Line 3275
		apply 'read_file_header'/3
		    (_cor0, 'read', 'false')
	in  %% Line 3275
	    case _cor1 of
	      %% Line 3276
	      <{'ok',Fd,FH}> when 'true' ->
		  let <_X_> =
		      %% Line 3277
		      ( call 'file':'close'
			    (Fd)
			-| ['result_not_wanted'] )
		  in  %% Line 3278
		      ( case FH of
			  ( <( {'fileheader',_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_rec185}
			       -| ['compiler_generated'] )> when 'true' ->
				call _rec185:'file_info'
				    (FH)
			    -| ['compiler_generated'] )
			  ( <_cor28> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','fileheader'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	      %% Line 3279
	      <Other> when 'true' ->
		  %% Line 3280
		  Other
	    end
'get_head_field'/2 =
    %% Line 3283
    fun (_cor1,_cor0) ->
	%% Line 3284
	call 'dets_utils':'read_4'
	    (_cor1, _cor0)
'view'/1 =
    %% Line 3290
    fun (_cor0) ->
	let <_cor1> =
	    catch
		%% Line 3291
		apply 'read_file_header'/3
		    (_cor0, 'read', 'false')
	in  %% Line 3291
	    case _cor1 of
	      %% Line 3292
	      <{'ok',Fd,FH}> when 'true' ->
		  %% Line 3293
		  ( case FH of
		      ( <( {'fileheader',_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_rec186}
			   -| ['compiler_generated'] )> when 'true' ->
			    %% Line 3294
			    letrec
				'after$^0'/0 =
				    fun () ->
					%% Line 3306
					( call 'file':'close'
					      (Fd)
					  -| ['result_not_wanted'] )
			    in  try
				    try
					call _rec186:'check_file_header'
					    (FH, Fd)
				    of <_cor5> ->
					case _cor5 of
					  %% Line 3295
					  <{'ok',H0,ExtraInfo}> when 'true' ->
					      %% Line 3297
					      case call _rec186:'check_file_header'
						       (FH, Fd) of
						%% Line 3298
						<{'ok',_cor67,_cor68}>
						    when let <_cor69> =
							  call 'erlang':'=:='
							      (_cor67, H0)
						      in  let <_cor70> =
							      call 'erlang':'=:='
								  (_cor68, ExtraInfo)
							  in  call 'erlang':'and'
								  (_cor69, _cor70) ->
						    let <H> =
							%% Line 3299
							call _rec186:'init_freelist'
							    (H0, ExtraInfo)
						    in  do  %% Line 3300
							    apply 'v_free_list'/1
								(H)
							    do  %% Line 3301
								call _rec186:'v_segments'
								    (H)
								%% Line 3302
								'ok'
						%% Line 3303
						<X> when 'true' ->
						    %% Line 3304
						    X
					      end
					  ( <_cor11> when 'true' ->
						primop 'match_fail'
						    ({'try_clause',_cor11})
					    -| ['compiler_generated'] )
					end
				    catch <_cor14,_cor13,_cor12> ->
					primop 'raise'
					    (_cor12, _cor13)
				of <_cor16> ->
				    do  ( apply 'after$^0'/0
					      ()
					  -| ['compiler_generated'] )
					_cor16
				catch <_cor19,_cor18,_cor17> ->
				    do  ( apply 'after$^0'/0
					      ()
					  -| ['compiler_generated'] )
					primop 'raise'
					    (_cor17, _cor18)
			-| ['compiler_generated'] )
		      ( <_cor43> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','fileheader'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      %% Line 3308
	      <X> when 'true' ->
		  %% Line 3309
		  X
	    end
'v_free_list'/1 =
    %% Line 3312
    fun (_cor0) ->
	do  %% Line 3313
	    call 'io':'format'
		([70|[82|[69|[69|[32|[76|[73|[83|[84|[32|[46|[46|[46|[46|[46|[46|[32|[10]]]]]]]]]]]]]]]]]], [])
	    let <_cor1> =
		%% Line 3314
		call 'dets_utils':'all_free'
		    (_cor0)
	    in  do  %% Line 3314
		    call 'io':'format'
			([126|[112|[126|[110]]]], [_cor1|[]])
		    %% Line 3315
		    call 'io':'format'
			([69|[78|[68|[32|[79|[70|[32|[70|[82|[69|[69|[32|[76|[73|[83|[84|[32|[10]]]]]]]]]]]]]]]]]], [])
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('dets')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('dets', _cor0)
end