module 'dbg_wx_break_win' ['create_win'/5,
			   'handle_event'/2,
			   'module_info'/0,
			   'module_info'/1,
			   'update_functions'/2]
    attributes [%% Line 25
		'type' =
		    %% Line 25
		    [{{'record','wx'},[{'typed_record_field',{'record_field',25,{'atom',25,'id'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'obj'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'remote_type',26,[{'atom',26,'wx'}|[{'atom',26,'wx_object'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'userData'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'type',27,'term',[]}]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'event'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'type',28,'event',[]}]]}}]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{'wx',{'type',31,'record',[{'atom',31,'wx'}]},[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','wxNavigationKey'},[{'typed_record_field',{'record_field',35,{'atom',35,'type'}},{'type',35,'union',[{'atom',35,'undefined'}|[{'type',35,'wxNavigationKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'flags'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'integer',[]}]]}}|[{'typed_record_field',{'record_field',37,{'atom',37,'focus'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'remote_type',37,[{'atom',37,'wxWindow'}|[{'atom',37,'wxWindow'}|[[]]]]}]]}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{'wxNavigationKeyEventType',{'atom',38,'navigation_key'},[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{'wxNavigationKey',{'type',39,'record',[{'atom',39,'wxNavigationKey'}]},[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','wxSash'},[{'typed_record_field',{'record_field',41,{'atom',41,'type'}},{'type',41,'union',[{'atom',41,'undefined'}|[{'type',41,'wxSashEventType',[]}]]}}|[{'typed_record_field',{'record_field',42,{'atom',42,'edge'}},{'type',42,'union',[{'atom',42,'undefined'}|[{'remote_type',42,[{'atom',42,'wx'}|[{'atom',42,'wx_enum'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'dragRect'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'tuple',[{'ann_type',43,[{'var',43,'X'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'Y'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'W'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'H'}|[{'type',43,'integer',[]}]]}]]]]}]]}}|[{'typed_record_field',{'record_field',44,{'atom',44,'dragStatus'}},{'type',44,'union',[{'atom',44,'undefined'}|[{'remote_type',44,[{'atom',44,'wx'}|[{'atom',44,'wx_enum'}|[[]]]]}]]}}]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'wxSashEventType',{'atom',45,'sash_dragged'},[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{'wxSash',{'type',46,'record',[{'atom',46,'wxSash'}]},[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','wxList'},[{'typed_record_field',{'record_field',48,{'atom',48,'type'}},{'type',48,'union',[{'atom',48,'undefined'}|[{'type',48,'wxListEventType',[]}]]}}|[{'typed_record_field',{'record_field',49,{'atom',49,'code'}},{'type',49,'union',[{'atom',49,'undefined'}|[{'type',49,'integer',[]}]]}}|[{'typed_record_field',{'record_field',50,{'atom',50,'oldItemIndex'}},{'type',50,'union',[{'atom',50,'undefined'}|[{'type',50,'integer',[]}]]}}|[{'typed_record_field',{'record_field',51,{'atom',51,'itemIndex'}},{'type',51,'union',[{'atom',51,'undefined'}|[{'type',51,'integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'col'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'pointDrag'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'tuple',[{'ann_type',53,[{'var',53,'X'}|[{'type',53,'integer',[]}]]}|[{'ann_type',53,[{'var',53,'Y'}|[{'type',53,'integer',[]}]]}]]}]]}}]]]]]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{'wxListEventType',{'type',54,'union',[{'atom',54,'command_list_begin_drag'}|[{'atom',54,'command_list_begin_rdrag'}|[{'atom',54,'command_list_begin_label_edit'}|[{'atom',54,'command_list_end_label_edit'}|[{'atom',54,'command_list_delete_item'}|[{'atom',54,'command_list_delete_all_items'}|[{'atom',54,'command_list_key_down'}|[{'atom',54,'command_list_insert_item'}|[{'atom',54,'command_list_col_click'}|[{'atom',54,'command_list_col_right_click'}|[{'atom',54,'command_list_col_begin_drag'}|[{'atom',54,'command_list_col_dragging'}|[{'atom',54,'command_list_col_end_drag'}|[{'atom',54,'command_list_item_selected'}|[{'atom',54,'command_list_item_deselected'}|[{'atom',54,'command_list_item_right_click'}|[{'atom',54,'command_list_item_middle_click'}|[{'atom',54,'command_list_item_activated'}|[{'atom',54,'command_list_item_focused'}|[{'atom',54,'command_list_cache_hint'}]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{'wxList',{'type',55,'record',[{'atom',55,'wxList'}]},[]}],
		%% Line 57
		'type' =
		    %% Line 57
		    [{{'record','wxNotebook'},[{'typed_record_field',{'record_field',57,{'atom',57,'type'}},{'type',57,'union',[{'atom',57,'undefined'}|[{'type',57,'wxNotebookEventType',[]}]]}}],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{'wxNotebookEventType',{'type',58,'union',[{'atom',58,'command_notebook_page_changed'}|[{'atom',58,'command_notebook_page_changing'}]]},[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{'wxNotebook',{'type',59,'record',[{'atom',59,'wxNotebook'}]},[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','wxDisplayChanged'},[{'typed_record_field',{'record_field',61,{'atom',61,'type'}},{'type',61,'union',[{'atom',61,'undefined'}|[{'type',61,'wxDisplayChangedEventType',[]}]]}}],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{'wxDisplayChangedEventType',{'atom',62,'display_changed'},[]}],
		%% Line 63
		'type' =
		    %% Line 63
		    [{'wxDisplayChanged',{'type',63,'record',[{'atom',63,'wxDisplayChanged'}]},[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','wxErase'},[{'typed_record_field',{'record_field',65,{'atom',65,'type'}},{'type',65,'union',[{'atom',65,'undefined'}|[{'type',65,'wxEraseEventType',[]}]]}}|[{'typed_record_field',{'record_field',66,{'atom',66,'dc'}},{'type',66,'union',[{'atom',66,'undefined'}|[{'remote_type',66,[{'atom',66,'wxDC'}|[{'atom',66,'wxDC'}|[[]]]]}]]}}]],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{'wxEraseEventType',{'atom',67,'erase_background'},[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{'wxErase',{'type',68,'record',[{'atom',68,'wxErase'}]},[]}],
		%% Line 70
		'type' =
		    %% Line 70
		    [{{'record','wxKey'},[{'typed_record_field',{'record_field',70,{'atom',70,'type'}},{'type',70,'union',[{'atom',70,'undefined'}|[{'type',70,'wxKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',71,{'atom',71,'x'}},{'type',71,'union',[{'atom',71,'undefined'}|[{'type',71,'integer',[]}]]}}|[{'typed_record_field',{'record_field',72,{'atom',72,'y'}},{'type',72,'union',[{'atom',72,'undefined'}|[{'type',72,'integer',[]}]]}}|[{'typed_record_field',{'record_field',73,{'atom',73,'keyCode'}},{'type',73,'union',[{'atom',73,'undefined'}|[{'type',73,'integer',[]}]]}}|[{'typed_record_field',{'record_field',74,{'atom',74,'controlDown'}},{'type',74,'union',[{'atom',74,'undefined'}|[{'type',74,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'shiftDown'}},{'type',75,'union',[{'atom',75,'undefined'}|[{'type',75,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',76,{'atom',76,'altDown'}},{'type',76,'union',[{'atom',76,'undefined'}|[{'type',76,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',77,{'atom',77,'metaDown'}},{'type',77,'union',[{'atom',77,'undefined'}|[{'type',77,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',78,{'atom',78,'scanCode'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',79,{'atom',79,'uniChar'}},{'type',79,'union',[{'atom',79,'undefined'}|[{'type',79,'integer',[]}]]}}|[{'typed_record_field',{'record_field',80,{'atom',80,'rawCode'}},{'type',80,'union',[{'atom',80,'undefined'}|[{'type',80,'integer',[]}]]}}|[{'typed_record_field',{'record_field',81,{'atom',81,'rawFlags'}},{'type',81,'union',[{'atom',81,'undefined'}|[{'type',81,'integer',[]}]]}}]]]]]]]]]]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{'wxKeyEventType',{'type',82,'union',[{'atom',82,'char'}|[{'atom',82,'char_hook'}|[{'atom',82,'key_down'}|[{'atom',82,'key_up'}]]]]},[]}],
		%% Line 83
		'type' =
		    %% Line 83
		    [{'wxKey',{'type',83,'record',[{'atom',83,'wxKey'}]},[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{{'record','wxWindowDestroy'},[{'typed_record_field',{'record_field',85,{'atom',85,'type'}},{'type',85,'union',[{'atom',85,'undefined'}|[{'type',85,'wxWindowDestroyEventType',[]}]]}}],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{'wxWindowDestroyEventType',{'atom',86,'destroy'},[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{'wxWindowDestroy',{'type',87,'record',[{'atom',87,'wxWindowDestroy'}]},[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','wxCalendar'},[{'typed_record_field',{'record_field',89,{'atom',89,'type'}},{'type',89,'union',[{'atom',89,'undefined'}|[{'type',89,'wxCalendarEventType',[]}]]}}],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{'wxCalendarEventType',{'type',90,'union',[{'atom',90,'calendar_sel_changed'}|[{'atom',90,'calendar_day_changed'}|[{'atom',90,'calendar_month_changed'}|[{'atom',90,'calendar_year_changed'}|[{'atom',90,'calendar_doubleclicked'}|[{'atom',90,'calendar_weekday_clicked'}]]]]]]},[]}],
		%% Line 91
		'type' =
		    %% Line 91
		    [{'wxCalendar',{'type',91,'record',[{'atom',91,'wxCalendar'}]},[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','wxSplitter'},[{'typed_record_field',{'record_field',93,{'atom',93,'type'}},{'type',93,'union',[{'atom',93,'undefined'}|[{'type',93,'wxSplitterEventType',[]}]]}}],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{'wxSplitterEventType',{'type',94,'union',[{'atom',94,'command_splitter_sash_pos_changed'}|[{'atom',94,'command_splitter_sash_pos_changing'}|[{'atom',94,'command_splitter_doubleclicked'}|[{'atom',94,'command_splitter_unsplit'}]]]]},[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{'wxSplitter',{'type',95,'record',[{'atom',95,'wxSplitter'}]},[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','wxScroll'},[{'typed_record_field',{'record_field',97,{'atom',97,'type'}},{'type',97,'union',[{'atom',97,'undefined'}|[{'type',97,'wxScrollEventType',[]}]]}}|[{'typed_record_field',{'record_field',98,{'atom',98,'commandInt'}},{'type',98,'union',[{'atom',98,'undefined'}|[{'type',98,'integer',[]}]]}}|[{'typed_record_field',{'record_field',99,{'atom',99,'extraLong'}},{'type',99,'union',[{'atom',99,'undefined'}|[{'type',99,'integer',[]}]]}}]]],[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{'wxScrollEventType',{'type',100,'union',[{'atom',100,'scroll_top'}|[{'atom',100,'scroll_bottom'}|[{'atom',100,'scroll_lineup'}|[{'atom',100,'scroll_linedown'}|[{'atom',100,'scroll_pageup'}|[{'atom',100,'scroll_pagedown'}|[{'atom',100,'scroll_thumbtrack'}|[{'atom',100,'scroll_thumbrelease'}|[{'atom',100,'scroll_changed'}]]]]]]]]]},[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{'wxScroll',{'type',101,'record',[{'atom',101,'wxScroll'}]},[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','wxMenu'},[{'typed_record_field',{'record_field',103,{'atom',103,'type'}},{'type',103,'union',[{'atom',103,'undefined'}|[{'type',103,'wxMenuEventType',[]}]]}}],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{'wxMenuEventType',{'type',104,'union',[{'atom',104,'menu_open'}|[{'atom',104,'menu_close'}|[{'atom',104,'menu_highlight'}]]]},[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{'wxMenu',{'type',105,'record',[{'atom',105,'wxMenu'}]},[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','wxContextMenu'},[{'typed_record_field',{'record_field',107,{'atom',107,'type'}},{'type',107,'union',[{'atom',107,'undefined'}|[{'type',107,'wxContextMenuEventType',[]}]]}}],[]}],
		%% Line 108
		'type' =
		    %% Line 108
		    [{'wxContextMenuEventType',{'atom',108,'context_menu'},[]}],
		%% Line 109
		'type' =
		    %% Line 109
		    [{'wxContextMenu',{'type',109,'record',[{'atom',109,'wxContextMenu'}]},[]}],
		%% Line 111
		'type' =
		    %% Line 111
		    [{{'record','wxShow'},[{'typed_record_field',{'record_field',111,{'atom',111,'type'}},{'type',111,'union',[{'atom',111,'undefined'}|[{'type',111,'wxShowEventType',[]}]]}}],[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{'wxShowEventType',{'atom',112,'show'},[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{'wxShow',{'type',113,'record',[{'atom',113,'wxShow'}]},[]}],
		%% Line 115
		'type' =
		    %% Line 115
		    [{{'record','wxSpin'},[{'typed_record_field',{'record_field',115,{'atom',115,'type'}},{'type',115,'union',[{'atom',115,'undefined'}|[{'type',115,'wxSpinEventType',[]}]]}}|[{'typed_record_field',{'record_field',116,{'atom',116,'commandInt'}},{'type',116,'union',[{'atom',116,'undefined'}|[{'type',116,'integer',[]}]]}}]],[]}],
		%% Line 117
		'type' =
		    %% Line 117
		    [{'wxSpinEventType',{'type',117,'union',[{'atom',117,'command_spinctrl_updated'}|[{'atom',117,'spin_up'}|[{'atom',117,'spin_down'}|[{'atom',117,'spin'}]]]]},[]}],
		%% Line 118
		'type' =
		    %% Line 118
		    [{'wxSpin',{'type',118,'record',[{'atom',118,'wxSpin'}]},[]}],
		%% Line 120
		'type' =
		    %% Line 120
		    [{{'record','wxSetCursor'},[{'typed_record_field',{'record_field',120,{'atom',120,'type'}},{'type',120,'union',[{'atom',120,'undefined'}|[{'type',120,'wxSetCursorEventType',[]}]]}}],[]}],
		%% Line 121
		'type' =
		    %% Line 121
		    [{'wxSetCursorEventType',{'atom',121,'set_cursor'},[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{'wxSetCursor',{'type',122,'record',[{'atom',122,'wxSetCursor'}]},[]}],
		%% Line 124
		'type' =
		    %% Line 124
		    [{{'record','wxFontPicker'},[{'typed_record_field',{'record_field',124,{'atom',124,'type'}},{'type',124,'union',[{'atom',124,'undefined'}|[{'type',124,'wxFontPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',125,{'atom',125,'font'}},{'type',125,'union',[{'atom',125,'undefined'}|[{'remote_type',125,[{'atom',125,'wxFont'}|[{'atom',125,'wxFont'}|[[]]]]}]]}}]],[]}],
		%% Line 126
		'type' =
		    %% Line 126
		    [{'wxFontPickerEventType',{'atom',126,'command_fontpicker_changed'},[]}],
		%% Line 127
		'type' =
		    %% Line 127
		    [{'wxFontPicker',{'type',127,'record',[{'atom',127,'wxFontPicker'}]},[]}],
		%% Line 129
		'type' =
		    %% Line 129
		    [{{'record','wxScrollWin'},[{'typed_record_field',{'record_field',129,{'atom',129,'type'}},{'type',129,'union',[{'atom',129,'undefined'}|[{'type',129,'wxScrollWinEventType',[]}]]}}],[]}],
		%% Line 130
		'type' =
		    %% Line 130
		    [{'wxScrollWinEventType',{'type',130,'union',[{'atom',130,'scrollwin_top'}|[{'atom',130,'scrollwin_bottom'}|[{'atom',130,'scrollwin_lineup'}|[{'atom',130,'scrollwin_linedown'}|[{'atom',130,'scrollwin_pageup'}|[{'atom',130,'scrollwin_pagedown'}|[{'atom',130,'scrollwin_thumbtrack'}|[{'atom',130,'scrollwin_thumbrelease'}]]]]]]]]},[]}],
		%% Line 131
		'type' =
		    %% Line 131
		    [{'wxScrollWin',{'type',131,'record',[{'atom',131,'wxScrollWin'}]},[]}],
		%% Line 133
		'type' =
		    %% Line 133
		    [{{'record','wxPaint'},[{'typed_record_field',{'record_field',133,{'atom',133,'type'}},{'type',133,'union',[{'atom',133,'undefined'}|[{'type',133,'wxPaintEventType',[]}]]}}],[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{'wxPaintEventType',{'atom',134,'paint'},[]}],
		%% Line 135
		'type' =
		    %% Line 135
		    [{'wxPaint',{'type',135,'record',[{'atom',135,'wxPaint'}]},[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','wxChildFocus'},[{'typed_record_field',{'record_field',137,{'atom',137,'type'}},{'type',137,'union',[{'atom',137,'undefined'}|[{'type',137,'wxChildFocusEventType',[]}]]}}],[]}],
		%% Line 138
		'type' =
		    %% Line 138
		    [{'wxChildFocusEventType',{'atom',138,'child_focus'},[]}],
		%% Line 139
		'type' =
		    %% Line 139
		    [{'wxChildFocus',{'type',139,'record',[{'atom',139,'wxChildFocus'}]},[]}],
		%% Line 141
		'type' =
		    %% Line 141
		    [{{'record','wxMaximize'},[{'typed_record_field',{'record_field',141,{'atom',141,'type'}},{'type',141,'union',[{'atom',141,'undefined'}|[{'type',141,'wxMaximizeEventType',[]}]]}}],[]}],
		%% Line 142
		'type' =
		    %% Line 142
		    [{'wxMaximizeEventType',{'atom',142,'maximize'},[]}],
		%% Line 143
		'type' =
		    %% Line 143
		    [{'wxMaximize',{'type',143,'record',[{'atom',143,'wxMaximize'}]},[]}],
		%% Line 145
		'type' =
		    %% Line 145
		    [{{'record','wxFileDirPicker'},[{'typed_record_field',{'record_field',145,{'atom',145,'type'}},{'type',145,'union',[{'atom',145,'undefined'}|[{'type',145,'wxFileDirPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',146,{'atom',146,'path'}},{'type',146,'union',[{'atom',146,'undefined'}|[{'remote_type',146,[{'atom',146,'unicode'}|[{'atom',146,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 147
		'type' =
		    %% Line 147
		    [{'wxFileDirPickerEventType',{'type',147,'union',[{'atom',147,'command_filepicker_changed'}|[{'atom',147,'command_dirpicker_changed'}]]},[]}],
		%% Line 148
		'type' =
		    %% Line 148
		    [{'wxFileDirPicker',{'type',148,'record',[{'atom',148,'wxFileDirPicker'}]},[]}],
		%% Line 150
		'type' =
		    %% Line 150
		    [{{'record','wxFocus'},[{'typed_record_field',{'record_field',150,{'atom',150,'type'}},{'type',150,'union',[{'atom',150,'undefined'}|[{'type',150,'wxFocusEventType',[]}]]}}],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{'wxFocusEventType',{'type',151,'union',[{'atom',151,'set_focus'}|[{'atom',151,'kill_focus'}]]},[]}],
		%% Line 152
		'type' =
		    %% Line 152
		    [{'wxFocus',{'type',152,'record',[{'atom',152,'wxFocus'}]},[]}],
		%% Line 154
		'type' =
		    %% Line 154
		    [{{'record','wxDate'},[{'typed_record_field',{'record_field',154,{'atom',154,'type'}},{'type',154,'union',[{'atom',154,'undefined'}|[{'type',154,'wxDateEventType',[]}]]}}|[{'typed_record_field',{'record_field',155,{'atom',155,'date'}},{'type',155,'union',[{'atom',155,'undefined'}|[{'remote_type',155,[{'atom',155,'wx'}|[{'atom',155,'wx_datetime'}|[[]]]]}]]}}]],[]}],
		%% Line 156
		'type' =
		    %% Line 156
		    [{'wxDateEventType',{'atom',156,'date_changed'},[]}],
		%% Line 157
		'type' =
		    %% Line 157
		    [{'wxDate',{'type',157,'record',[{'atom',157,'wxDate'}]},[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','wxHtmlLink'},[{'typed_record_field',{'record_field',159,{'atom',159,'type'}},{'type',159,'union',[{'atom',159,'undefined'}|[{'type',159,'wxHtmlLinkEventType',[]}]]}}|[{'typed_record_field',{'record_field',160,{'atom',160,'linkInfo'}},{'type',160,'union',[{'atom',160,'undefined'}|[{'remote_type',160,[{'atom',160,'wx'}|[{'atom',160,'wx_wxHtmlLinkInfo'}|[[]]]]}]]}}]],[]}],
		%% Line 161
		'type' =
		    %% Line 161
		    [{'wxHtmlLinkEventType',{'atom',161,'command_html_link_clicked'},[]}],
		%% Line 162
		'type' =
		    %% Line 162
		    [{'wxHtmlLink',{'type',162,'record',[{'atom',162,'wxHtmlLink'}]},[]}],
		%% Line 164
		'type' =
		    %% Line 164
		    [{{'record','wxHelp'},[{'typed_record_field',{'record_field',164,{'atom',164,'type'}},{'type',164,'union',[{'atom',164,'undefined'}|[{'type',164,'wxHelpEventType',[]}]]}}],[]}],
		%% Line 165
		'type' =
		    %% Line 165
		    [{'wxHelpEventType',{'type',165,'union',[{'atom',165,'help'}|[{'atom',165,'detailed_help'}]]},[]}],
		%% Line 166
		'type' =
		    %% Line 166
		    [{'wxHelp',{'type',166,'record',[{'atom',166,'wxHelp'}]},[]}],
		%% Line 168
		'type' =
		    %% Line 168
		    [{{'record','wxActivate'},[{'typed_record_field',{'record_field',168,{'atom',168,'type'}},{'type',168,'union',[{'atom',168,'undefined'}|[{'type',168,'wxActivateEventType',[]}]]}}|[{'typed_record_field',{'record_field',169,{'atom',169,'active'}},{'type',169,'union',[{'atom',169,'undefined'}|[{'type',169,'boolean',[]}]]}}]],[]}],
		%% Line 170
		'type' =
		    %% Line 170
		    [{'wxActivateEventType',{'type',170,'union',[{'atom',170,'activate'}|[{'atom',170,'activate_app'}|[{'atom',170,'hibernate'}]]]},[]}],
		%% Line 171
		'type' =
		    %% Line 171
		    [{'wxActivate',{'type',171,'record',[{'atom',171,'wxActivate'}]},[]}],
		%% Line 173
		'type' =
		    %% Line 173
		    [{{'record','wxStyledText'},[{'typed_record_field',{'record_field',173,{'atom',173,'type'}},{'type',173,'union',[{'atom',173,'undefined'}|[{'type',173,'wxStyledTextEventType',[]}]]}}|[{'typed_record_field',{'record_field',174,{'atom',174,'position'}},{'type',174,'union',[{'atom',174,'undefined'}|[{'type',174,'integer',[]}]]}}|[{'typed_record_field',{'record_field',175,{'atom',175,'key'}},{'type',175,'union',[{'atom',175,'undefined'}|[{'type',175,'integer',[]}]]}}|[{'typed_record_field',{'record_field',176,{'atom',176,'modifiers'}},{'type',176,'union',[{'atom',176,'undefined'}|[{'type',176,'integer',[]}]]}}|[{'typed_record_field',{'record_field',177,{'atom',177,'modificationType'}},{'type',177,'union',[{'atom',177,'undefined'}|[{'type',177,'integer',[]}]]}}|[{'typed_record_field',{'record_field',178,{'atom',178,'text'}},{'type',178,'union',[{'atom',178,'undefined'}|[{'remote_type',178,[{'atom',178,'unicode'}|[{'atom',178,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',179,{'atom',179,'length'}},{'type',179,'union',[{'atom',179,'undefined'}|[{'type',179,'integer',[]}]]}}|[{'typed_record_field',{'record_field',180,{'atom',180,'linesAdded'}},{'type',180,'union',[{'atom',180,'undefined'}|[{'type',180,'integer',[]}]]}}|[{'typed_record_field',{'record_field',181,{'atom',181,'line'}},{'type',181,'union',[{'atom',181,'undefined'}|[{'type',181,'integer',[]}]]}}|[{'typed_record_field',{'record_field',182,{'atom',182,'foldLevelNow'}},{'type',182,'union',[{'atom',182,'undefined'}|[{'type',182,'integer',[]}]]}}|[{'typed_record_field',{'record_field',183,{'atom',183,'foldLevelPrev'}},{'type',183,'union',[{'atom',183,'undefined'}|[{'type',183,'integer',[]}]]}}|[{'typed_record_field',{'record_field',184,{'atom',184,'margin'}},{'type',184,'union',[{'atom',184,'undefined'}|[{'type',184,'integer',[]}]]}}|[{'typed_record_field',{'record_field',185,{'atom',185,'message'}},{'type',185,'union',[{'atom',185,'undefined'}|[{'type',185,'integer',[]}]]}}|[{'typed_record_field',{'record_field',186,{'atom',186,'wParam'}},{'type',186,'union',[{'atom',186,'undefined'}|[{'type',186,'integer',[]}]]}}|[{'typed_record_field',{'record_field',187,{'atom',187,'lParam'}},{'type',187,'union',[{'atom',187,'undefined'}|[{'type',187,'integer',[]}]]}}|[{'typed_record_field',{'record_field',188,{'atom',188,'listType'}},{'type',188,'union',[{'atom',188,'undefined'}|[{'type',188,'integer',[]}]]}}|[{'typed_record_field',{'record_field',189,{'atom',189,'x'}},{'type',189,'union',[{'atom',189,'undefined'}|[{'type',189,'integer',[]}]]}}|[{'typed_record_field',{'record_field',190,{'atom',190,'y'}},{'type',190,'union',[{'atom',190,'undefined'}|[{'type',190,'integer',[]}]]}}|[{'typed_record_field',{'record_field',191,{'atom',191,'dragText'}},{'type',191,'union',[{'atom',191,'undefined'}|[{'remote_type',191,[{'atom',191,'unicode'}|[{'atom',191,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',192,{'atom',192,'dragAllowMove'}},{'type',192,'union',[{'atom',192,'undefined'}|[{'type',192,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',193,{'atom',193,'dragResult'}},{'type',193,'union',[{'atom',193,'undefined'}|[{'remote_type',193,[{'atom',193,'wx'}|[{'atom',193,'wx_enum'}|[[]]]]}]]}}]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 194
		'type' =
		    %% Line 194
		    [{'wxStyledTextEventType',{'type',194,'union',[{'atom',194,'stc_change'}|[{'atom',194,'stc_styleneeded'}|[{'atom',194,'stc_charadded'}|[{'atom',194,'stc_savepointreached'}|[{'atom',194,'stc_savepointleft'}|[{'atom',194,'stc_romodifyattempt'}|[{'atom',194,'stc_key'}|[{'atom',194,'stc_doubleclick'}|[{'atom',194,'stc_updateui'}|[{'atom',194,'stc_modified'}|[{'atom',194,'stc_macrorecord'}|[{'atom',194,'stc_marginclick'}|[{'atom',194,'stc_needshown'}|[{'atom',194,'stc_painted'}|[{'atom',194,'stc_userlistselection'}|[{'atom',194,'stc_uridropped'}|[{'atom',194,'stc_dwellstart'}|[{'atom',194,'stc_dwellend'}|[{'atom',194,'stc_start_drag'}|[{'atom',194,'stc_drag_over'}|[{'atom',194,'stc_do_drop'}|[{'atom',194,'stc_zoom'}|[{'atom',194,'stc_hotspot_click'}|[{'atom',194,'stc_hotspot_dclick'}|[{'atom',194,'stc_calltip_click'}|[{'atom',194,'stc_autocomp_selection'}]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 195
		'type' =
		    %% Line 195
		    [{'wxStyledText',{'type',195,'record',[{'atom',195,'wxStyledText'}]},[]}],
		%% Line 197
		'type' =
		    %% Line 197
		    [{{'record','wxSysColourChanged'},[{'typed_record_field',{'record_field',197,{'atom',197,'type'}},{'type',197,'union',[{'atom',197,'undefined'}|[{'type',197,'wxSysColourChangedEventType',[]}]]}}],[]}],
		%% Line 198
		'type' =
		    %% Line 198
		    [{'wxSysColourChangedEventType',{'atom',198,'sys_colour_changed'},[]}],
		%% Line 199
		'type' =
		    %% Line 199
		    [{'wxSysColourChanged',{'type',199,'record',[{'atom',199,'wxSysColourChanged'}]},[]}],
		%% Line 201
		'type' =
		    %% Line 201
		    [{{'record','wxGrid'},[{'typed_record_field',{'record_field',201,{'atom',201,'type'}},{'type',201,'union',[{'atom',201,'undefined'}|[{'type',201,'wxGridEventType',[]}]]}}|[{'typed_record_field',{'record_field',202,{'atom',202,'row'}},{'type',202,'union',[{'atom',202,'undefined'}|[{'type',202,'integer',[]}]]}}|[{'typed_record_field',{'record_field',203,{'atom',203,'col'}},{'type',203,'union',[{'atom',203,'undefined'}|[{'type',203,'integer',[]}]]}}|[{'typed_record_field',{'record_field',204,{'atom',204,'x'}},{'type',204,'union',[{'atom',204,'undefined'}|[{'type',204,'integer',[]}]]}}|[{'typed_record_field',{'record_field',205,{'atom',205,'y'}},{'type',205,'union',[{'atom',205,'undefined'}|[{'type',205,'integer',[]}]]}}|[{'typed_record_field',{'record_field',206,{'atom',206,'selecting'}},{'type',206,'union',[{'atom',206,'undefined'}|[{'type',206,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',207,{'atom',207,'control'}},{'type',207,'union',[{'atom',207,'undefined'}|[{'type',207,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',208,{'atom',208,'meta'}},{'type',208,'union',[{'atom',208,'undefined'}|[{'type',208,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',209,{'atom',209,'shift'}},{'type',209,'union',[{'atom',209,'undefined'}|[{'type',209,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',210,{'atom',210,'alt'}},{'type',210,'union',[{'atom',210,'undefined'}|[{'type',210,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 211
		'type' =
		    %% Line 211
		    [{'wxGridEventType',{'type',211,'union',[{'atom',211,'grid_cell_left_click'}|[{'atom',211,'grid_cell_right_click'}|[{'atom',211,'grid_cell_left_dclick'}|[{'atom',211,'grid_cell_right_dclick'}|[{'atom',211,'grid_label_left_click'}|[{'atom',211,'grid_label_right_click'}|[{'atom',211,'grid_label_left_dclick'}|[{'atom',211,'grid_label_right_dclick'}|[{'atom',211,'grid_row_size'}|[{'atom',211,'grid_col_size'}|[{'atom',211,'grid_range_select'}|[{'atom',211,'grid_cell_change'}|[{'atom',211,'grid_select_cell'}|[{'atom',211,'grid_editor_shown'}|[{'atom',211,'grid_editor_hidden'}|[{'atom',211,'grid_editor_created'}|[{'atom',211,'grid_cell_begin_drag'}]]]]]]]]]]]]]]]]]},[]}],
		%% Line 212
		'type' =
		    %% Line 212
		    [{'wxGrid',{'type',212,'record',[{'atom',212,'wxGrid'}]},[]}],
		%% Line 214
		'type' =
		    %% Line 214
		    [{{'record','wxPaletteChanged'},[{'typed_record_field',{'record_field',214,{'atom',214,'type'}},{'type',214,'union',[{'atom',214,'undefined'}|[{'type',214,'wxPaletteChangedEventType',[]}]]}}],[]}],
		%% Line 215
		'type' =
		    %% Line 215
		    [{'wxPaletteChangedEventType',{'atom',215,'palette_changed'},[]}],
		%% Line 216
		'type' =
		    %% Line 216
		    [{'wxPaletteChanged',{'type',216,'record',[{'atom',216,'wxPaletteChanged'}]},[]}],
		%% Line 218
		'type' =
		    %% Line 218
		    [{{'record','wxUpdateUI'},[{'typed_record_field',{'record_field',218,{'atom',218,'type'}},{'type',218,'union',[{'atom',218,'undefined'}|[{'type',218,'wxUpdateUIEventType',[]}]]}}],[]}],
		%% Line 219
		'type' =
		    %% Line 219
		    [{'wxUpdateUIEventType',{'atom',219,'update_ui'},[]}],
		%% Line 220
		'type' =
		    %% Line 220
		    [{'wxUpdateUI',{'type',220,'record',[{'atom',220,'wxUpdateUI'}]},[]}],
		%% Line 222
		'type' =
		    %% Line 222
		    [{{'record','wxSize'},[{'typed_record_field',{'record_field',222,{'atom',222,'type'}},{'type',222,'union',[{'atom',222,'undefined'}|[{'type',222,'wxSizeEventType',[]}]]}}|[{'typed_record_field',{'record_field',223,{'atom',223,'size'}},{'type',223,'union',[{'atom',223,'undefined'}|[{'type',223,'tuple',[{'ann_type',223,[{'var',223,'W'}|[{'type',223,'integer',[]}]]}|[{'ann_type',223,[{'var',223,'H'}|[{'type',223,'integer',[]}]]}]]}]]}}|[{'typed_record_field',{'record_field',224,{'atom',224,'rect'}},{'type',224,'union',[{'atom',224,'undefined'}|[{'type',224,'tuple',[{'ann_type',224,[{'var',224,'X'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'Y'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'W'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'H'}|[{'type',224,'integer',[]}]]}]]]]}]]}}]]],[]}],
		%% Line 225
		'type' =
		    %% Line 225
		    [{'wxSizeEventType',{'atom',225,'size'},[]}],
		%% Line 226
		'type' =
		    %% Line 226
		    [{'wxSize',{'type',226,'record',[{'atom',226,'wxSize'}]},[]}],
		%% Line 228
		'type' =
		    %% Line 228
		    [{{'record','wxIconize'},[{'typed_record_field',{'record_field',228,{'atom',228,'type'}},{'type',228,'union',[{'atom',228,'undefined'}|[{'type',228,'wxIconizeEventType',[]}]]}}],[]}],
		%% Line 229
		'type' =
		    %% Line 229
		    [{'wxIconizeEventType',{'atom',229,'iconize'},[]}],
		%% Line 230
		'type' =
		    %% Line 230
		    [{'wxIconize',{'type',230,'record',[{'atom',230,'wxIconize'}]},[]}],
		%% Line 232
		'type' =
		    %% Line 232
		    [{{'record','wxAuiNotebook'},[{'typed_record_field',{'record_field',232,{'atom',232,'type'}},{'type',232,'union',[{'atom',232,'undefined'}|[{'type',232,'wxAuiNotebookEventType',[]}]]}}|[{'typed_record_field',{'record_field',233,{'atom',233,'old_selection'}},{'type',233,'union',[{'atom',233,'undefined'}|[{'type',233,'integer',[]}]]}}|[{'typed_record_field',{'record_field',234,{'atom',234,'selection'}},{'type',234,'union',[{'atom',234,'undefined'}|[{'type',234,'integer',[]}]]}}|[{'typed_record_field',{'record_field',235,{'atom',235,'drag_source'}},{'type',235,'union',[{'atom',235,'undefined'}|[{'remote_type',235,[{'atom',235,'wxAuiNotebook'}|[{'atom',235,'wxAuiNotebook'}|[[]]]]}]]}}]]]],[]}],
		%% Line 236
		'type' =
		    %% Line 236
		    [{'wxAuiNotebookEventType',{'type',236,'union',[{'atom',236,'command_auinotebook_page_close'}|[{'atom',236,'command_auinotebook_page_changed'}|[{'atom',236,'command_auinotebook_page_changing'}|[{'atom',236,'command_auinotebook_button'}|[{'atom',236,'command_auinotebook_begin_drag'}|[{'atom',236,'command_auinotebook_end_drag'}|[{'atom',236,'command_auinotebook_drag_motion'}|[{'atom',236,'command_auinotebook_allow_dnd'}|[{'atom',236,'command_auinotebook_tab_middle_down'}|[{'atom',236,'command_auinotebook_tab_middle_up'}|[{'atom',236,'command_auinotebook_tab_right_down'}|[{'atom',236,'command_auinotebook_tab_right_up'}|[{'atom',236,'command_auinotebook_page_closed'}|[{'atom',236,'command_auinotebook_drag_done'}|[{'atom',236,'command_auinotebook_bg_dclick'}]]]]]]]]]]]]]]]},[]}],
		%% Line 237
		'type' =
		    %% Line 237
		    [{'wxAuiNotebook',{'type',237,'record',[{'atom',237,'wxAuiNotebook'}]},[]}],
		%% Line 239
		'type' =
		    %% Line 239
		    [{{'record','wxClose'},[{'typed_record_field',{'record_field',239,{'atom',239,'type'}},{'type',239,'union',[{'atom',239,'undefined'}|[{'type',239,'wxCloseEventType',[]}]]}}],[]}],
		%% Line 240
		'type' =
		    %% Line 240
		    [{'wxCloseEventType',{'type',240,'union',[{'atom',240,'close_window'}|[{'atom',240,'end_session'}|[{'atom',240,'query_end_session'}]]]},[]}],
		%% Line 241
		'type' =
		    %% Line 241
		    [{'wxClose',{'type',241,'record',[{'atom',241,'wxClose'}]},[]}],
		%% Line 243
		'type' =
		    %% Line 243
		    [{{'record','wxMouseCaptureChanged'},[{'typed_record_field',{'record_field',243,{'atom',243,'type'}},{'type',243,'union',[{'atom',243,'undefined'}|[{'type',243,'wxMouseCaptureChangedEventType',[]}]]}}],[]}],
		%% Line 244
		'type' =
		    %% Line 244
		    [{'wxMouseCaptureChangedEventType',{'atom',244,'mouse_capture_changed'},[]}],
		%% Line 245
		'type' =
		    %% Line 245
		    [{'wxMouseCaptureChanged',{'type',245,'record',[{'atom',245,'wxMouseCaptureChanged'}]},[]}],
		%% Line 247
		'type' =
		    %% Line 247
		    [{{'record','wxMouse'},[{'typed_record_field',{'record_field',247,{'atom',247,'type'}},{'type',247,'union',[{'atom',247,'undefined'}|[{'type',247,'wxMouseEventType',[]}]]}}|[{'typed_record_field',{'record_field',248,{'atom',248,'x'}},{'type',248,'union',[{'atom',248,'undefined'}|[{'type',248,'integer',[]}]]}}|[{'typed_record_field',{'record_field',249,{'atom',249,'y'}},{'type',249,'union',[{'atom',249,'undefined'}|[{'type',249,'integer',[]}]]}}|[{'typed_record_field',{'record_field',250,{'atom',250,'leftDown'}},{'type',250,'union',[{'atom',250,'undefined'}|[{'type',250,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',251,{'atom',251,'middleDown'}},{'type',251,'union',[{'atom',251,'undefined'}|[{'type',251,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',252,{'atom',252,'rightDown'}},{'type',252,'union',[{'atom',252,'undefined'}|[{'type',252,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',253,{'atom',253,'controlDown'}},{'type',253,'union',[{'atom',253,'undefined'}|[{'type',253,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',254,{'atom',254,'shiftDown'}},{'type',254,'union',[{'atom',254,'undefined'}|[{'type',254,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',255,{'atom',255,'altDown'}},{'type',255,'union',[{'atom',255,'undefined'}|[{'type',255,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',256,{'atom',256,'metaDown'}},{'type',256,'union',[{'atom',256,'undefined'}|[{'type',256,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',257,{'atom',257,'wheelRotation'}},{'type',257,'union',[{'atom',257,'undefined'}|[{'type',257,'integer',[]}]]}}|[{'typed_record_field',{'record_field',258,{'atom',258,'wheelDelta'}},{'type',258,'union',[{'atom',258,'undefined'}|[{'type',258,'integer',[]}]]}}|[{'typed_record_field',{'record_field',259,{'atom',259,'linesPerAction'}},{'type',259,'union',[{'atom',259,'undefined'}|[{'type',259,'integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 260
		'type' =
		    %% Line 260
		    [{'wxMouseEventType',{'type',260,'union',[{'atom',260,'left_down'}|[{'atom',260,'left_up'}|[{'atom',260,'middle_down'}|[{'atom',260,'middle_up'}|[{'atom',260,'right_down'}|[{'atom',260,'right_up'}|[{'atom',260,'motion'}|[{'atom',260,'enter_window'}|[{'atom',260,'leave_window'}|[{'atom',260,'left_dclick'}|[{'atom',260,'middle_dclick'}|[{'atom',260,'right_dclick'}|[{'atom',260,'mousewheel'}]]]]]]]]]]]]]},[]}],
		%% Line 261
		'type' =
		    %% Line 261
		    [{'wxMouse',{'type',261,'record',[{'atom',261,'wxMouse'}]},[]}],
		%% Line 263
		'type' =
		    %% Line 263
		    [{{'record','wxClipboardText'},[{'typed_record_field',{'record_field',263,{'atom',263,'type'}},{'type',263,'union',[{'atom',263,'undefined'}|[{'type',263,'wxClipboardTextEventType',[]}]]}}],[]}],
		%% Line 264
		'type' =
		    %% Line 264
		    [{'wxClipboardTextEventType',{'type',264,'union',[{'atom',264,'command_text_copy'}|[{'atom',264,'command_text_cut'}|[{'atom',264,'command_text_paste'}]]]},[]}],
		%% Line 265
		'type' =
		    %% Line 265
		    [{'wxClipboardText',{'type',265,'record',[{'atom',265,'wxClipboardText'}]},[]}],
		%% Line 267
		'type' =
		    %% Line 267
		    [{{'record','wxWindowCreate'},[{'typed_record_field',{'record_field',267,{'atom',267,'type'}},{'type',267,'union',[{'atom',267,'undefined'}|[{'type',267,'wxWindowCreateEventType',[]}]]}}],[]}],
		%% Line 268
		'type' =
		    %% Line 268
		    [{'wxWindowCreateEventType',{'atom',268,'create'},[]}],
		%% Line 269
		'type' =
		    %% Line 269
		    [{'wxWindowCreate',{'type',269,'record',[{'atom',269,'wxWindowCreate'}]},[]}],
		%% Line 271
		'type' =
		    %% Line 271
		    [{{'record','wxAuiManager'},[{'typed_record_field',{'record_field',271,{'atom',271,'type'}},{'type',271,'union',[{'atom',271,'undefined'}|[{'type',271,'wxAuiManagerEventType',[]}]]}}|[{'typed_record_field',{'record_field',272,{'atom',272,'manager'}},{'type',272,'union',[{'atom',272,'undefined'}|[{'remote_type',272,[{'atom',272,'wxAuiManager'}|[{'atom',272,'wxAuiManager'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',273,{'atom',273,'pane'}},{'type',273,'union',[{'atom',273,'undefined'}|[{'remote_type',273,[{'atom',273,'wxAuiPaneInfo'}|[{'atom',273,'wxAuiPaneInfo'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',274,{'atom',274,'button'}},{'type',274,'union',[{'atom',274,'undefined'}|[{'type',274,'integer',[]}]]}}|[{'typed_record_field',{'record_field',275,{'atom',275,'veto_flag'}},{'type',275,'union',[{'atom',275,'undefined'}|[{'type',275,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',276,{'atom',276,'canveto_flag'}},{'type',276,'union',[{'atom',276,'undefined'}|[{'type',276,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',277,{'atom',277,'dc'}},{'type',277,'union',[{'atom',277,'undefined'}|[{'remote_type',277,[{'atom',277,'wxDC'}|[{'atom',277,'wxDC'}|[[]]]]}]]}}]]]]]]],[]}],
		%% Line 278
		'type' =
		    %% Line 278
		    [{'wxAuiManagerEventType',{'type',278,'union',[{'atom',278,'aui_pane_button'}|[{'atom',278,'aui_pane_close'}|[{'atom',278,'aui_pane_maximize'}|[{'atom',278,'aui_pane_restore'}|[{'atom',278,'aui_render'}|[{'atom',278,'aui_find_manager'}]]]]]]},[]}],
		%% Line 279
		'type' =
		    %% Line 279
		    [{'wxAuiManager',{'type',279,'record',[{'atom',279,'wxAuiManager'}]},[]}],
		%% Line 281
		'type' =
		    %% Line 281
		    [{{'record','wxInitDialog'},[{'typed_record_field',{'record_field',281,{'atom',281,'type'}},{'type',281,'union',[{'atom',281,'undefined'}|[{'type',281,'wxInitDialogEventType',[]}]]}}],[]}],
		%% Line 282
		'type' =
		    %% Line 282
		    [{'wxInitDialogEventType',{'atom',282,'init_dialog'},[]}],
		%% Line 283
		'type' =
		    %% Line 283
		    [{'wxInitDialog',{'type',283,'record',[{'atom',283,'wxInitDialog'}]},[]}],
		%% Line 285
		'type' =
		    %% Line 285
		    [{{'record','wxCommand'},[{'typed_record_field',{'record_field',285,{'atom',285,'type'}},{'type',285,'union',[{'atom',285,'undefined'}|[{'type',285,'wxCommandEventType',[]}]]}}|[{'typed_record_field',{'record_field',286,{'atom',286,'cmdString'}},{'type',286,'union',[{'atom',286,'undefined'}|[{'remote_type',286,[{'atom',286,'unicode'}|[{'atom',286,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',287,{'atom',287,'commandInt'}},{'type',287,'union',[{'atom',287,'undefined'}|[{'type',287,'integer',[]}]]}}|[{'typed_record_field',{'record_field',288,{'atom',288,'extraLong'}},{'type',288,'union',[{'atom',288,'undefined'}|[{'type',288,'integer',[]}]]}}]]]],[]}],
		%% Line 289
		'type' =
		    %% Line 289
		    [{'wxCommandEventType',{'type',289,'union',[{'atom',289,'command_button_clicked'}|[{'atom',289,'command_checkbox_clicked'}|[{'atom',289,'command_choice_selected'}|[{'atom',289,'command_listbox_selected'}|[{'atom',289,'command_listbox_doubleclicked'}|[{'atom',289,'command_text_updated'}|[{'atom',289,'command_text_enter'}|[{'atom',289,'command_menu_selected'}|[{'atom',289,'command_slider_updated'}|[{'atom',289,'command_radiobox_selected'}|[{'atom',289,'command_radiobutton_selected'}|[{'atom',289,'command_scrollbar_updated'}|[{'atom',289,'command_vlbox_selected'}|[{'atom',289,'command_combobox_selected'}|[{'atom',289,'command_tool_rclicked'}|[{'atom',289,'command_tool_enter'}|[{'atom',289,'command_checklistbox_toggled'}|[{'atom',289,'command_togglebutton_clicked'}|[{'atom',289,'command_left_click'}|[{'atom',289,'command_left_dclick'}|[{'atom',289,'command_right_click'}|[{'atom',289,'command_set_focus'}|[{'atom',289,'command_kill_focus'}|[{'atom',289,'command_enter'}]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 290
		'type' =
		    %% Line 290
		    [{'wxCommand',{'type',290,'record',[{'atom',290,'wxCommand'}]},[]}],
		%% Line 292
		'type' =
		    %% Line 292
		    [{{'record','wxJoystick'},[{'typed_record_field',{'record_field',292,{'atom',292,'type'}},{'type',292,'union',[{'atom',292,'undefined'}|[{'type',292,'wxJoystickEventType',[]}]]}}],[]}],
		%% Line 293
		'type' =
		    %% Line 293
		    [{'wxJoystickEventType',{'type',293,'union',[{'atom',293,'joy_button_down'}|[{'atom',293,'joy_button_up'}|[{'atom',293,'joy_move'}|[{'atom',293,'joy_zmove'}]]]]},[]}],
		%% Line 294
		'type' =
		    %% Line 294
		    [{'wxJoystick',{'type',294,'record',[{'atom',294,'wxJoystick'}]},[]}],
		%% Line 296
		'type' =
		    %% Line 296
		    [{{'record','wxQueryNewPalette'},[{'typed_record_field',{'record_field',296,{'atom',296,'type'}},{'type',296,'union',[{'atom',296,'undefined'}|[{'type',296,'wxQueryNewPaletteEventType',[]}]]}}],[]}],
		%% Line 297
		'type' =
		    %% Line 297
		    [{'wxQueryNewPaletteEventType',{'atom',297,'query_new_palette'},[]}],
		%% Line 298
		'type' =
		    %% Line 298
		    [{'wxQueryNewPalette',{'type',298,'record',[{'atom',298,'wxQueryNewPalette'}]},[]}],
		%% Line 300
		'type' =
		    %% Line 300
		    [{{'record','wxMove'},[{'typed_record_field',{'record_field',300,{'atom',300,'type'}},{'type',300,'union',[{'atom',300,'undefined'}|[{'type',300,'wxMoveEventType',[]}]]}}],[]}],
		%% Line 301
		'type' =
		    %% Line 301
		    [{'wxMoveEventType',{'atom',301,'move'},[]}],
		%% Line 302
		'type' =
		    %% Line 302
		    [{'wxMove',{'type',302,'record',[{'atom',302,'wxMove'}]},[]}],
		%% Line 304
		'type' =
		    %% Line 304
		    [{{'record','wxIdle'},[{'typed_record_field',{'record_field',304,{'atom',304,'type'}},{'type',304,'union',[{'atom',304,'undefined'}|[{'type',304,'wxIdleEventType',[]}]]}}],[]}],
		%% Line 305
		'type' =
		    %% Line 305
		    [{'wxIdleEventType',{'atom',305,'idle'},[]}],
		%% Line 306
		'type' =
		    %% Line 306
		    [{'wxIdle',{'type',306,'record',[{'atom',306,'wxIdle'}]},[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{{'record','wxColourPicker'},[{'typed_record_field',{'record_field',308,{'atom',308,'type'}},{'type',308,'union',[{'atom',308,'undefined'}|[{'type',308,'wxColourPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',309,{'atom',309,'colour'}},{'type',309,'union',[{'atom',309,'undefined'}|[{'remote_type',309,[{'atom',309,'wx'}|[{'atom',309,'wx_colour'}|[[]]]]}]]}}]],[]}],
		%% Line 310
		'type' =
		    %% Line 310
		    [{'wxColourPickerEventType',{'atom',310,'command_colourpicker_changed'},[]}],
		%% Line 311
		'type' =
		    %% Line 311
		    [{'wxColourPicker',{'type',311,'record',[{'atom',311,'wxColourPicker'}]},[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{{'record','wxTaskBarIcon'},[{'typed_record_field',{'record_field',313,{'atom',313,'type'}},{'type',313,'union',[{'atom',313,'undefined'}|[{'type',313,'wxTaskBarIconEventType',[]}]]}}],[]}],
		%% Line 314
		'type' =
		    %% Line 314
		    [{'wxTaskBarIconEventType',{'type',314,'union',[{'atom',314,'taskbar_move'}|[{'atom',314,'taskbar_left_down'}|[{'atom',314,'taskbar_left_up'}|[{'atom',314,'taskbar_right_down'}|[{'atom',314,'taskbar_right_up'}|[{'atom',314,'taskbar_left_dclick'}|[{'atom',314,'taskbar_right_dclick'}]]]]]]]},[]}],
		%% Line 315
		'type' =
		    %% Line 315
		    [{'wxTaskBarIcon',{'type',315,'record',[{'atom',315,'wxTaskBarIcon'}]},[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{{'record','wxTree'},[{'typed_record_field',{'record_field',317,{'atom',317,'type'}},{'type',317,'union',[{'atom',317,'undefined'}|[{'type',317,'wxTreeEventType',[]}]]}}|[{'typed_record_field',{'record_field',318,{'atom',318,'item'}},{'type',318,'union',[{'atom',318,'undefined'}|[{'type',318,'integer',[]}]]}}|[{'typed_record_field',{'record_field',319,{'atom',319,'itemOld'}},{'type',319,'union',[{'atom',319,'undefined'}|[{'type',319,'integer',[]}]]}}|[{'typed_record_field',{'record_field',320,{'atom',320,'pointDrag'}},{'type',320,'union',[{'atom',320,'undefined'}|[{'type',320,'tuple',[{'ann_type',320,[{'var',320,'X'}|[{'type',320,'integer',[]}]]}|[{'ann_type',320,[{'var',320,'Y'}|[{'type',320,'integer',[]}]]}]]}]]}}]]]],[]}],
		%% Line 321
		'type' =
		    %% Line 321
		    [{'wxTreeEventType',{'type',321,'union',[{'atom',321,'command_tree_begin_drag'}|[{'atom',321,'command_tree_begin_rdrag'}|[{'atom',321,'command_tree_begin_label_edit'}|[{'atom',321,'command_tree_end_label_edit'}|[{'atom',321,'command_tree_delete_item'}|[{'atom',321,'command_tree_get_info'}|[{'atom',321,'command_tree_set_info'}|[{'atom',321,'command_tree_item_expanded'}|[{'atom',321,'command_tree_item_expanding'}|[{'atom',321,'command_tree_item_collapsed'}|[{'atom',321,'command_tree_item_collapsing'}|[{'atom',321,'command_tree_sel_changed'}|[{'atom',321,'command_tree_sel_changing'}|[{'atom',321,'command_tree_key_down'}|[{'atom',321,'command_tree_item_activated'}|[{'atom',321,'command_tree_item_right_click'}|[{'atom',321,'command_tree_item_middle_click'}|[{'atom',321,'command_tree_end_drag'}|[{'atom',321,'command_tree_state_image_click'}|[{'atom',321,'command_tree_item_gettooltip'}|[{'atom',321,'command_tree_item_menu'}]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 322
		'type' =
		    %% Line 322
		    [{'wxTree',{'type',322,'record',[{'atom',322,'wxTree'}]},[]}],
		%% Line 324
		'type' =
		    %% Line 324
		    [{'event',{'type',324,'union',[{'type',324,'wxActivate',[]}|[{'type',324,'wxAuiManager',[]}|[{'type',324,'wxAuiNotebook',[]}|[{'type',324,'wxCalendar',[]}|[{'type',324,'wxChildFocus',[]}|[{'type',324,'wxClipboardText',[]}|[{'type',324,'wxClose',[]}|[{'type',324,'wxColourPicker',[]}|[{'type',324,'wxCommand',[]}|[{'type',324,'wxContextMenu',[]}|[{'type',324,'wxDate',[]}|[{'type',324,'wxDisplayChanged',[]}|[{'type',324,'wxErase',[]}|[{'type',324,'wxFileDirPicker',[]}|[{'type',324,'wxFocus',[]}|[{'type',324,'wxFontPicker',[]}|[{'type',324,'wxGrid',[]}|[{'type',324,'wxHelp',[]}|[{'type',324,'wxHtmlLink',[]}|[{'type',324,'wxIconize',[]}|[{'type',324,'wxIdle',[]}|[{'type',324,'wxInitDialog',[]}|[{'type',324,'wxJoystick',[]}|[{'type',324,'wxKey',[]}|[{'type',324,'wxList',[]}|[{'type',324,'wxMaximize',[]}|[{'type',324,'wxMenu',[]}|[{'type',324,'wxMouse',[]}|[{'type',324,'wxMouseCaptureChanged',[]}|[{'type',324,'wxMove',[]}|[{'type',324,'wxNavigationKey',[]}|[{'type',324,'wxNotebook',[]}|[{'type',324,'wxPaint',[]}|[{'type',324,'wxPaletteChanged',[]}|[{'type',324,'wxQueryNewPalette',[]}|[{'type',324,'wxSash',[]}|[{'type',324,'wxScroll',[]}|[{'type',324,'wxScrollWin',[]}|[{'type',324,'wxSetCursor',[]}|[{'type',324,'wxShow',[]}|[{'type',324,'wxSize',[]}|[{'type',324,'wxSpin',[]}|[{'type',324,'wxSplitter',[]}|[{'type',324,'wxStyledText',[]}|[{'type',324,'wxSysColourChanged',[]}|[{'type',324,'wxTaskBarIcon',[]}|[{'type',324,'wxTree',[]}|[{'type',324,'wxUpdateUI',[]}|[{'type',324,'wxWindowCreate',[]}|[{'type',324,'wxWindowDestroy',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 325
		'type' =
		    %% Line 325
		    [{'wxEventType',{'type',325,'union',[{'type',325,'wxActivateEventType',[]}|[{'type',325,'wxAuiManagerEventType',[]}|[{'type',325,'wxAuiNotebookEventType',[]}|[{'type',325,'wxCalendarEventType',[]}|[{'type',325,'wxChildFocusEventType',[]}|[{'type',325,'wxClipboardTextEventType',[]}|[{'type',325,'wxCloseEventType',[]}|[{'type',325,'wxColourPickerEventType',[]}|[{'type',325,'wxCommandEventType',[]}|[{'type',325,'wxContextMenuEventType',[]}|[{'type',325,'wxDateEventType',[]}|[{'type',325,'wxDisplayChangedEventType',[]}|[{'type',325,'wxEraseEventType',[]}|[{'type',325,'wxFileDirPickerEventType',[]}|[{'type',325,'wxFocusEventType',[]}|[{'type',325,'wxFontPickerEventType',[]}|[{'type',325,'wxGridEventType',[]}|[{'type',325,'wxHelpEventType',[]}|[{'type',325,'wxHtmlLinkEventType',[]}|[{'type',325,'wxIconizeEventType',[]}|[{'type',325,'wxIdleEventType',[]}|[{'type',325,'wxInitDialogEventType',[]}|[{'type',325,'wxJoystickEventType',[]}|[{'type',325,'wxKeyEventType',[]}|[{'type',325,'wxListEventType',[]}|[{'type',325,'wxMaximizeEventType',[]}|[{'type',325,'wxMenuEventType',[]}|[{'type',325,'wxMouseCaptureChangedEventType',[]}|[{'type',325,'wxMouseEventType',[]}|[{'type',325,'wxMoveEventType',[]}|[{'type',325,'wxNavigationKeyEventType',[]}|[{'type',325,'wxNotebookEventType',[]}|[{'type',325,'wxPaintEventType',[]}|[{'type',325,'wxPaletteChangedEventType',[]}|[{'type',325,'wxQueryNewPaletteEventType',[]}|[{'type',325,'wxSashEventType',[]}|[{'type',325,'wxScrollEventType',[]}|[{'type',325,'wxScrollWinEventType',[]}|[{'type',325,'wxSetCursorEventType',[]}|[{'type',325,'wxShowEventType',[]}|[{'type',325,'wxSizeEventType',[]}|[{'type',325,'wxSpinEventType',[]}|[{'type',325,'wxSplitterEventType',[]}|[{'type',325,'wxStyledTextEventType',[]}|[{'type',325,'wxSysColourChangedEventType',[]}|[{'type',325,'wxTaskBarIconEventType',[]}|[{'type',325,'wxTreeEventType',[]}|[{'type',325,'wxUpdateUIEventType',[]}|[{'type',325,'wxWindowCreateEventType',[]}|[{'type',325,'wxWindowDestroyEventType',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 328
		'type' =
		    %% Line 328
		    [{{'record','wxMouseState'},[{'typed_record_field',{'record_field',328,{'atom',328,'x'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',328,{'atom',328,'y'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'leftDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'type',329,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'middleDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'rightDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'controlDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'shiftDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'altDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'metaDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'cmdDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 333
		'type' =
		    %% Line 333
		    [{{'record','wxHtmlLinkInfo'},[{'typed_record_field',{'record_field',334,{'atom',334,'href'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',334,{'atom',334,'target'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','winInfo'},[{'record_field',30,{'atom',30,'type'}}|[{'record_field',31,{'atom',31,'win'}}|[{'record_field',32,{'atom',32,'entries'}}|[{'record_field',33,{'atom',33,'trigger'}}|[{'record_field',34,{'atom',34,'listbox'}}|[{'record_field',35,{'atom',35,'text'}}|[{'record_field',36,{'atom',36,'ok'}}|[{'record_field',37,{'atom',37,'funcs'},{'nil',37}}]]]]]]]],[]}]]
'create_win'/5 =
    %% Line 54
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Parent,Pos,'function',Mod,_X_Line> when 'true' ->
	      let <Win> =
		  %% Line 55
		  call 'wxDialog':'new'
		      (Parent, -1, [70|[117|[110|[99|[116|[105|[111|[110|[32|[66|[114|[101|[97|[107]]]]]]]]]]]]]], %% Line 56
														   [{'pos',Pos}|%% Line 57
																[{'style',536877120}]])
	      in  let <MainS> =
		      %% Line 58
		      call 'wxBoxSizer':'new'
			  (8)
		  in  let <Label> =
			  %% Line 59
			  call 'wxStaticText':'new'
			      (Win, -1, [77|[111|[100|[117|[108|[101|[58]]]]]]])
		      in  let <Int> =
			      %% Line 60
			      call 'int':'interpreted'
				  ()
			  in  let <_cor19> =
				  %% Line 61
				  ( letrec
					'lc$^0'/1 =
					    fun (_cor16) ->
						case _cor16 of
						  <[M|_cor15]> when 'true' ->
						      let <_cor17> =
							  call 'erlang':'atom_to_list'
							      (M)
						      in  let <_cor18> =
							      apply 'lc$^0'/1
								  (_cor15)
							  in  ( [_cor17|_cor18]
								-| ['compiler_generated'] )
						  <[]> when 'true' ->
						      []
						  ( <_cor16> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor16})
							  -| [{'function_name',{'lc$^0',1}}] )
						    -| ['compiler_generated'] )
						end
				    in  apply 'lc$^0'/1
					    (Int)
				    -| ['list_comprehension'] )
			      in  let <_cor21> =
				      %% Line 63
				      call 'dbg_wx_win':'to_string'
					  (Mod)
				  in  let <Text> =
					  %% Line 62
					  call 'wxComboBox':'new'
					      (Win, -1, %% Line 63
							[{'value',_cor21}|%% Line 64
									  [{'choices',_cor19}|[]]])
				      in  do  %% Line 67
					      call 'wxSizer':'add'
						  (MainS, Label, [{'border',5}|[{'flag',112}]])
					      do  %% Line 69
						  call 'wxSizer':'add'
						      (MainS, Text, [{'border',5}|[{'flag',8240}]])
						  let <FunLabel> =
						      %% Line 70
						      call 'wxStaticText':'new'
							  (Win, -1, [70|[117|[110|[99|[116|[105|[111|[110|[58]]]]]]]]])
						  in  let <LB> =
							  %% Line 71
							  call 'wxListBox':'new'
							      (Win, -1, [{'size',{-1,100}}|[{'style',64}]])
						      in  do  %% Line 72
							      call 'wxSizer':'add'
								  (MainS, FunLabel, [{'border',5}|[{'flag',8240}]])
							      do  %% Line 73
								  call 'wxSizer':'add'
								      (MainS, LB, [{'proportion',1}|[{'border',5}|[{'flag',8240}]]])
								  do  %% Line 74
								      call 'wxSizer':'setMinSize'
									  (MainS, 300, 400)
								      let <OK> =
									  %% Line 75
									  call 'wxDialog':'createStdDialogButtonSizer'
									      (Win, 20)
								      in  do  %% Line 76
									      call 'wxSizer':'add'
										  (MainS, OK, [{'border',5}|[{'flag',240}]])
									      do  %% Line 77
										  call 'wxDialog':'setSizer'
										      (Win, MainS)
										  do  %% Line 78
										      call 'wxSizer':'fit'
											  (MainS, Win)
										      do  %% Line 79
											  call 'wxSizer':'setSizeHints'
											      (MainS, Win)
											  do  %% Line 80
											      call 'wxComboBox':'setFocus'
												  (Text)
											      do  %% Line 81
												  call 'wxDialog':'connect'
												      (Win, 'command_button_clicked')
												  do  %% Line 82
												      call 'wxComboBox':'connect'
													  (Text, 'command_text_updated')
												      do  %% Line 83
													  call 'wxListBox':'connect'
													      (LB, 'command_listbox_selected')
													  do  %% Line 84
													      call 'wxListBox':'connect'
														  (LB, 'command_listbox_doubleclicked')
													      let <OKId> =
														  %% Line 85
														  call 'wxDialog':'getAffirmativeId'
														      (Win)
													      in  let <OKButt> =
														      %% Line 86
														      call 'wxWindow':'findWindowById'
															  (OKId, [{'parent',Win}|[]])
														  in  do  %% Line 87
															  call 'wxWindow':'disable'
															      (OKButt)
															  do  %% Line 88
															      call 'wxDialog':'centreOnParent'
																  (Win)
															      do  %% Line 89
																  call 'wxDialog':'show'
																      (Win)
																  %% Line 91
																  {'winInfo','function',Win,%% Line 92
																			    [],%% Line 92
																			       'enable',%% Line 93
																					LB,Text,OKButt,%% Line 93
																						       []}
	  %% Line 95
	  <Parent,Pos,Type,Mod,Line> when 'true' ->
	      let <_cor42> =
		  %% Line 96
		  case Type of
		    %% Line 97
		    <'line'> when 'true' ->
			[76|[105|[110|[101|[32|[66|[114|[101|[97|[107]]]]]]]]]]
		    %% Line 98
		    <'conditional'> when 'true' ->
			[67|[111|[110|[100|[105|[116|[105|[111|[110|[97|[108|[32|[66|[114|[101|[97|[107]]]]]]]]]]]]]]]]]
		    ( <_cor41> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor41})
		      -| ['compiler_generated'] )
		  end
	      in  let <Win> =
		      %% Line 101
		      call 'wxDialog':'new'
			  (Parent, -1, _cor42, %% Line 102
					       [{'pos',Pos}|%% Line 103
							    [{'style',536877120}]])
		  in  let <MainS> =
			  %% Line 105
			  call 'wxBoxSizer':'new'
			      (8)
		      in  let <Int> =
			      %% Line 108
			      call 'int':'interpreted'
				  ()
			  in  let <_cor56> =
				  %% Line 109
				  ( letrec
					'lc$^1'/1 =
					    fun (_cor53) ->
						case _cor53 of
						  <[M|_cor52]> when 'true' ->
						      let <_cor54> =
							  call 'erlang':'atom_to_list'
							      (M)
						      in  let <_cor55> =
							      apply 'lc$^1'/1
								  (_cor52)
							  in  ( [_cor54|_cor55]
								-| ['compiler_generated'] )
						  <[]> when 'true' ->
						      []
						  ( <_cor53> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor53})
							  -| [{'function_name',{'lc$^1',1}}] )
						    -| ['compiler_generated'] )
						end
				    in  apply 'lc$^1'/1
					    (Int)
				    -| ['list_comprehension'] )
			      in  let <ModT> =
				      %% Line 110
				      call 'wxComboBox':'new'
					  (Win, -1, [{'choices',_cor56}|[]])
				  in  let <ModSz> =
					  %% Line 111
					  apply 'create_label_of_control'/4
					      (Win, [77|[111|[100|[117|[108|[101|[58]]]]]]], ModT, Mod)
				      in  do  %% Line 112
					      call 'wxSizer':'add'
						  (MainS, ModSz, [{'flag',8192}])
					      let <Add> =
						  %% Line 114
						  ( fun (_cor62) ->
							case _cor62 of
							  <{IType,Label,Def}> when 'true' ->
							      %% Line 115
							      case apply 'create_sizer_with_text'/3
								       (Win, Label, Def) of
								<{Sz,Text}> when 'true' ->
								    do  %% Line 116
									call 'wxSizer':'add'
									    (MainS, Sz, [{'flag',8192}])
									%% Line 117
									{Text,IType}
								( <_cor61> when 'true' ->
								      primop 'match_fail'
									  ({'badmatch',_cor61})
								  -| ['compiler_generated'] )
							      end
							  ( <_cor63> when 'true' ->
								( primop 'match_fail'
								      ({'function_clause',_cor63})
								  -| [{'function_name',{'-create_win/5-fun-0-',1}}] )
							    -| ['compiler_generated'] )
							end
						    -| [{'id',{0,0,'-create_win/5-fun-0-'}}] )
					      in  let <_cor66> =
						      %% Line 119
						      case Type of
							%% Line 120
							<'line'> when 'true' ->
							    %% Line 121
							    [{'integer',[76|[105|[110|[101|[58]]]]],Line}|[]]
							%% Line 122
							<'conditional'> when 'true' ->
							    %% Line 123
							    [{'integer',[76|[105|[110|[101|[58]]]]],Line}|%% Line 124
													  [{'atom',[67|[45|[77|[111|[100|[117|[108|[101|[58]]]]]]]]],[]}|[{'atom',[67|[45|[70|[117|[110|[99|[116|[105|[111|[110|[58]]]]]]]]]]],[]}]]]
							( <_cor65> when 'true' ->
							      primop 'match_fail'
								  ({'case_clause',_cor65})
							  -| ['compiler_generated'] )
						      end
						  in  let <Entries> =
							  %% Line 128
							  call 'wx':'map'
							      (Add, _cor66)
						      in  %% Line 130
							  case apply 'create_trigger_box'/1
								   (Win) of
							    <{TriggerBox,Trigger}> when 'true' ->
								do  %% Line 131
								    call 'wxSizer':'add'
									(MainS, TriggerBox, [{'border',5}|[{'flag',8432}]])
								    do  %% Line 133
									call 'wxSizer':'addStretchSpacer'
									    (MainS)
									let <OK> =
									    %% Line 135
									    call 'wxDialog':'createStdDialogButtonSizer'
										(Win, 20)
									in  do  %% Line 136
										call 'wxSizer':'add'
										    (MainS, OK, [{'border',5}|[{'flag',240}]])
										do  %% Line 137
										    call 'wxSizer':'setMinSize'
											(MainS, 300, -1)
										    do  %% Line 138
											call 'wxDialog':'setSizer'
											    (Win, MainS)
											do  %% Line 139
											    call 'wxSizer':'fit'
												(MainS, Win)
											    do  %% Line 140
												call 'wxSizer':'setSizeHints'
												    (MainS, Win)
												do  %% Line 141
												    call 'wxComboBox':'setFocus'
													(ModT)
												    do  %% Line 142
													call 'wxDialog':'connect'
													    (Win, 'command_button_clicked')
													do  %% Line 143
													    call 'wxDialog':'connect'
														(Win, 'command_text_updated')
													    let <OKId> =
														%% Line 144
														call 'wxDialog':'getAffirmativeId'
														    (Win)
													    in  let <OKButt> =
														    %% Line 145
														    call 'wxWindow':'findWindowById'
															(OKId)
														in  do  %% Line 146
															call 'wxWindow':'disable'
															    (OKButt)
															do  %% Line 147
															    call 'wxDialog':'centreOnParent'
																(Win)
															    do  %% Line 148
																call 'wxDialog':'show'
																    (Win)
																%% Line 149
																{'winInfo',Type,Win,%% Line 150
																		    Entries,%% Line 150
																			    Trigger,'undefined',ModT,%% Line 150
																						     OKButt,[]}
							    ( <_cor69> when 'true' ->
								  primop 'match_fail'
								      ({'badmatch',_cor69})
							      -| ['compiler_generated'] )
							  end
	end
'update_functions'/2 =
    %% Line 159
    fun (_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 160
	    ( fun (_cor3) ->
		  case _cor3 of
		    <[N|[A|[]]]> when 'true' ->
			let <_cor2> =
			    %% Line 161
			    call 'io_lib':'format'
				([126|[112|[47|[126|[112]]]]], [N|[A|[]]])
			in  %% Line 161
			    call 'lists':'flatten'
				(_cor2)
		    ( <_cor4> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor4})
			    -| [{'function_name',{'-update_functions/2-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-update_functions/2-fun-0-'}}] )
	in  let <Items> =
		%% Line 160
		call 'lists':'map'
		    (_cor5, _cor0)
	    in  %% Line 164
		( case _cor1 of
		    ( <( {'winInfo',_cor13,_cor14,_cor15,_cor16,_rec0,_cor17,_cor18,_cor19}
			 -| ['compiler_generated'] )> when 'true' ->
			  do  call 'wxListBox':'set'
				  (_rec0, Items)
			      %% Line 165
			      call 'erlang':'setelement'
				  (9, _cor1, _cor0)
		      -| ['compiler_generated'] )
		    ( <_cor20> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','winInfo'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'handle_event'/2 =
    %% Line 179
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx',5101,_cor26,_cor27,_cor28},{'winInfo',_cor29,Win,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35}> when 'true' ->
	      do  %% Line 180
		  call 'wxDialog':'destroy'
		      (Win)
		  %% Line 181
		  'stopped'
	  %% Line 182
	  <{'wx',_cor36,_cor37,_cor38,{'wxCommand','command_text_updated',_cor39,_cor40,_cor41}},%% Line 183
												 {'winInfo','function',_cor42,_cor43,_cor44,_cor45,Text,OK,_cor46}> when 'true' ->
	      let <Module> =
		  %% Line 184
		  call 'wxComboBox':'getValue'
		      (Text)
	      in  do  %% Line 185
		      call 'wxWindow':'disable'
			  (OK)
		      let <_cor3> =
			  %% Line 186
			  call 'erlang':'list_to_atom'
			      (Module)
		      in  %% Line 186
			  {'module',_cor3}
	  %% Line 187
	  <{'wx',_cor47,_cor48,_cor49,{'wxCommand','command_text_updated',_cor50,_cor51,_cor52}},%% Line 188
												 {'winInfo',_cor53,_cor54,Es,_cor55,_cor56,Text,OK,_cor57}> when 'true' ->
	      let <Module> =
		  %% Line 189
		  call 'wxComboBox':'getValue'
		      (Text)
	      in  do  %% Line 190
		      case apply 'check_input'/1
			       (Es) of
			%% Line 191
			<'error'> when 'true' ->
			    call 'wxWindow':'disable'
				(OK)
			%% Line 192
			<_X_Data>
			    when call 'erlang':'=/='
				  (Module,
				   []) ->
			    call 'wxWindow':'enable'
				(OK)
			%% Line 193
			<_cor58> when 'true' ->
			    call 'wxWindow':'disable'
				(OK)
		      end
		      %% Line 195
		      'ignore'
	  %% Line 196
	  <{'wx',_cor59,_cor60,_cor61,{'wxCommand','command_listbox_selected',_cor62,_cor63,_cor64}},%% Line 197
												     {'winInfo','function',_cor65,_cor66,_cor67,LB,_cor68,OK,_cor69}> when 'true' ->
	      do  %% Line 198
		  case call 'wxListBox':'getSelections'
			   (LB) of
		    %% Line 199
		    <{N,_cor70}>
			when call 'erlang':'>'
			      (N,
			       0) ->
			call 'wxWindow':'enable'
			    (OK)
		    %% Line 200
		    <_cor71> when 'true' ->
			call 'wxWindow':'disable'
			    (OK)
		  end
		  %% Line 202
		  'ignore'
	  %% Line 203
	  <{'wx',OKorListBox,_cor72,_cor73,{'wxCommand',OKorDoubleClick,_cor74,_cor75,_cor76}},%% Line 204
											       {'winInfo','function',Win,_cor77,_cor78,LB,Text,_cor79,Funcs}>
	      when let <_cor7> =
		    %% Line 205
		    call 'erlang':'=:='
			(OKorListBox, 5100)
		in  let <_cor8> =
			%% Line 206
			call 'erlang':'=:='
			    (OKorDoubleClick, 'command_listbox_doubleclicked')
		    in  %% Line 205
			call 'erlang':'or'
			    (_cor7, _cor8) ->
	      let <Mod> =
		  %% Line 207
		  call 'wxComboBox':'getValue'
		      (Text)
	      in  %% Line 208
		  case call 'wxListBox':'getSelections'
			   (LB) of
		    <{_cor80,IndexL}> when 'true' ->
			let <_cor18> =
			    %% Line 209
			    ( letrec
				  'lc$^0'/1 =
				      fun (_cor13) ->
					  case _cor13 of
					    <[Index|_cor12]> when 'true' ->
						let <_cor14> =
						    call 'erlang':'list_to_atom'
							(Mod)
						in  let <_cor15> =
							call 'erlang':'+'
							    (Index, 1)
						    in  let <_cor16> =
							    call 'lists':'nth'
								(_cor15, Funcs)
							in  let <_cor17> =
								apply 'lc$^0'/1
								    (_cor12)
							    in  ( [[_cor14|_cor16]|_cor17]
								  -| ['compiler_generated'] )
					    <[]> when 'true' ->
						[]
					    ( <_cor13> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor13})
						    -| [{'function_name',{'lc$^0',1}}] )
					      -| ['compiler_generated'] )
					  end
			      in  apply 'lc$^0'/1
				      (IndexL)
			      -| ['list_comprehension'] )
			in  do  %% Line 210
				call 'wxDialog':'destroy'
				    (Win)
				%% Line 211
				{'break',_cor18,'enable'}
		    ( <_cor10> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor10})
		      -| ['compiler_generated'] )
		  end
	  %% Line 212
	  <{'wx',5100,_cor81,_cor82,_cor83},{'winInfo',_cor84,Win,Es,Trigger,_cor85,Text,_cor86,_cor87}> when 'true' ->
	      let <Mod> =
		  %% Line 214
		  call 'wxComboBox':'getValue'
		      (Text)
	      in  let <Data> =
		      %% Line 215
		      apply 'check_input'/1
			  (Es)
		  in  let <Trigged> =
			  %% Line 216
			  apply 'get_trigger'/1
			      (Trigger)
		      in  do  %% Line 217
			      call 'wxDialog':'destroy'
				  (Win)
			      let <_cor23> =
				  %% Line 218
				  call 'erlang':'list_to_atom'
				      (Mod)
			      in  %% Line 218
				  {'break',[[_cor23|Data]|[]],Trigged}
	  %% Line 220
	  <_X_WxEvent,_X_WinInfo> when 'true' ->
	      %% Line 222
	      'ignore'
	end
'check_input'/1 =
    %% Line 224
    fun (_cor0) ->
	%% Line 225
	apply 'check_input'/2
	    (_cor0, [])
'check_input'/2 =
    %% Line 226
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{Entry,Type}|Entries],Data> when 'true' ->
	      let <Str> =
		  %% Line 227
		  call 'wxTextCtrl':'getValue'
		      (Entry)
	      in  %% Line 228
		  case call 'erl_scan':'string'
			   (Str) of
		    %% Line 229
		    <{'ok',[{_cor6,_X_Line,Val}|[]],_X_EndLine}>
			when call 'erlang':'=:='
			      (_cor6,
			       Type) ->
			%% Line 230
			apply 'check_input'/2
			    (Entries, [Val|Data])
		    %% Line 231
		    <_X_Error> when 'true' ->
			'error'
		  end
	  %% Line 233
	  <[],Data> when 'true' ->
	      call 'lists':'reverse'
		  (Data)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'check_input',2}}] )
	    -| ['compiler_generated'] )
	end
'create_sizer_with_text'/3 =
    %% Line 235
    fun (_cor2,_cor1,_cor0) ->
	let <Text> =
	    %% Line 236
	    call 'wxTextCtrl':'new'
		(_cor2, -1)
	in  let <Sz> =
		%% Line 237
		apply 'create_label_of_control'/4
		    (_cor2, _cor1, Text, _cor0)
	    in  %% Line 238
		{Sz,Text}
'create_label_of_control'/4 =
    %% Line 240
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Sizer> =
	    %% Line 241
	    call 'wxBoxSizer':'new'
		(4)
	in  let <Text> =
		%% Line 242
		call 'wxStaticText':'new'
		    (_cor3, -1, _cor2)
	    in  do  %% Line 245
		    call 'wxSizer':'add'
			(Sizer, Text, [{'proportion',1}|[{'flag',2096}|[{'border',5}]]])
		    do  %% Line 246
			call 'wxSizer':'add'
			    (Sizer, _cor1, [{'proportion',3}|[{'flag',10288}|[{'border',5}]]])
			let <_cor11> =
			    %% Line 247
			    call 'dbg_wx_win':'to_string'
				(_cor0)
			in  do  %% Line 247
				call 'wxControl':'setLabel'
				    (_cor1, _cor11)
				%% Line 248
				Sizer
'create_trigger_box'/1 =
    %% Line 250
    fun (_cor0) ->
	let <SBox> =
	    %% Line 251
	    call 'wxStaticBox':'new'
		(_cor0, -1, [84|[114|[105|[103|[103|[101|[114|[32|[65|[99|[116|[105|[111|[110|[58]]]]]]]]]]]]]]])
	in  let <SBS> =
		%% Line 252
		call 'wxStaticBoxSizer':'new'
		    (SBox, 8)
	    in  let <Ebtn> =
		    %% Line 253
		    call 'wxRadioButton':'new'
			(_cor0, -1, [69|[110|[97|[98|[108|[101]]]]]])
		in  do  %% Line 254
			call 'wxSizer':'add'
			    (SBS, Ebtn)
			let <Dibtn> =
			    %% Line 255
			    call 'wxRadioButton':'new'
				(_cor0, -1, [68|[105|[115|[97|[98|[108|[101]]]]]]])
			in  do  %% Line 256
				call 'wxSizer':'add'
				    (SBS, Dibtn)
				let <Debtn> =
				    %% Line 257
				    call 'wxRadioButton':'new'
					(_cor0, -1, [68|[101|[108|[101|[116|[101]]]]]])
				in  do  %% Line 258
					call 'wxSizer':'add'
					    (SBS, Debtn)
					do  %% Line 259
					    call 'wxRadioButton':'setValue'
						(Ebtn, 'true')
					    %% Line 260
					    {SBS,[{Ebtn,'enable'}|[{Dibtn,'disable'}|[{Debtn,'delete'}|[]]]]}
'get_trigger'/1 =
    %% Line 262
    fun (_cor0) ->
	case _cor0 of
	  <[{Btn,Op}|R]> when 'true' ->
	      %% Line 263
	      case call 'wxRadioButton':'getValue'
		       (Btn) of
		%% Line 264
		<'true'> when 'true' ->
		    Op
		%% Line 265
		<'false'> when 'true' ->
		    apply 'get_trigger'/1
			(R)
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor1})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'get_trigger',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('dbg_wx_break_win')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('dbg_wx_break_win', _cor0)
end