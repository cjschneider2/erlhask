module 'dbg_wx_trace_win' ['add_break'/3,
			   'clear_breaks'/1,
			   'clear_breaks'/2,
			   'configure'/2,
			   'create_win'/4,
			   'delete_break'/2,
			   'display'/2,
			   'enable'/2,
			   'eval_output'/3,
			   'get_window'/1,
			   'handle_event'/2,
			   'helpwin'/2,
			   'init'/0,
			   'is_enabled'/1,
			   'is_shown'/2,
			   'mark_line'/3,
			   'module_info'/0,
			   'module_info'/1,
			   'remove_code'/2,
			   'select'/2,
			   'select_line'/2,
			   'selected_line'/1,
			   'show_code'/3,
			   'show_no_code'/1,
			   'stop'/1,
			   'trace_output'/2,
			   'unmark_line'/1,
			   'update_bindings'/2,
			   'update_break'/2,
			   'update_strings'/1]
    attributes [%% Line 25
		'type' =
		    %% Line 25
		    [{{'record','wx'},[{'typed_record_field',{'record_field',25,{'atom',25,'id'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'obj'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'remote_type',26,[{'atom',26,'wx'}|[{'atom',26,'wx_object'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'userData'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'type',27,'term',[]}]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'event'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'type',28,'event',[]}]]}}]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{'wx',{'type',31,'record',[{'atom',31,'wx'}]},[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','wxNavigationKey'},[{'typed_record_field',{'record_field',35,{'atom',35,'type'}},{'type',35,'union',[{'atom',35,'undefined'}|[{'type',35,'wxNavigationKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'flags'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'integer',[]}]]}}|[{'typed_record_field',{'record_field',37,{'atom',37,'focus'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'remote_type',37,[{'atom',37,'wxWindow'}|[{'atom',37,'wxWindow'}|[[]]]]}]]}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{'wxNavigationKeyEventType',{'atom',38,'navigation_key'},[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{'wxNavigationKey',{'type',39,'record',[{'atom',39,'wxNavigationKey'}]},[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','wxSash'},[{'typed_record_field',{'record_field',41,{'atom',41,'type'}},{'type',41,'union',[{'atom',41,'undefined'}|[{'type',41,'wxSashEventType',[]}]]}}|[{'typed_record_field',{'record_field',42,{'atom',42,'edge'}},{'type',42,'union',[{'atom',42,'undefined'}|[{'remote_type',42,[{'atom',42,'wx'}|[{'atom',42,'wx_enum'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'dragRect'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'tuple',[{'ann_type',43,[{'var',43,'X'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'Y'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'W'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'H'}|[{'type',43,'integer',[]}]]}]]]]}]]}}|[{'typed_record_field',{'record_field',44,{'atom',44,'dragStatus'}},{'type',44,'union',[{'atom',44,'undefined'}|[{'remote_type',44,[{'atom',44,'wx'}|[{'atom',44,'wx_enum'}|[[]]]]}]]}}]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'wxSashEventType',{'atom',45,'sash_dragged'},[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{'wxSash',{'type',46,'record',[{'atom',46,'wxSash'}]},[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','wxList'},[{'typed_record_field',{'record_field',48,{'atom',48,'type'}},{'type',48,'union',[{'atom',48,'undefined'}|[{'type',48,'wxListEventType',[]}]]}}|[{'typed_record_field',{'record_field',49,{'atom',49,'code'}},{'type',49,'union',[{'atom',49,'undefined'}|[{'type',49,'integer',[]}]]}}|[{'typed_record_field',{'record_field',50,{'atom',50,'oldItemIndex'}},{'type',50,'union',[{'atom',50,'undefined'}|[{'type',50,'integer',[]}]]}}|[{'typed_record_field',{'record_field',51,{'atom',51,'itemIndex'}},{'type',51,'union',[{'atom',51,'undefined'}|[{'type',51,'integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'col'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'pointDrag'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'tuple',[{'ann_type',53,[{'var',53,'X'}|[{'type',53,'integer',[]}]]}|[{'ann_type',53,[{'var',53,'Y'}|[{'type',53,'integer',[]}]]}]]}]]}}]]]]]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{'wxListEventType',{'type',54,'union',[{'atom',54,'command_list_begin_drag'}|[{'atom',54,'command_list_begin_rdrag'}|[{'atom',54,'command_list_begin_label_edit'}|[{'atom',54,'command_list_end_label_edit'}|[{'atom',54,'command_list_delete_item'}|[{'atom',54,'command_list_delete_all_items'}|[{'atom',54,'command_list_key_down'}|[{'atom',54,'command_list_insert_item'}|[{'atom',54,'command_list_col_click'}|[{'atom',54,'command_list_col_right_click'}|[{'atom',54,'command_list_col_begin_drag'}|[{'atom',54,'command_list_col_dragging'}|[{'atom',54,'command_list_col_end_drag'}|[{'atom',54,'command_list_item_selected'}|[{'atom',54,'command_list_item_deselected'}|[{'atom',54,'command_list_item_right_click'}|[{'atom',54,'command_list_item_middle_click'}|[{'atom',54,'command_list_item_activated'}|[{'atom',54,'command_list_item_focused'}|[{'atom',54,'command_list_cache_hint'}]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{'wxList',{'type',55,'record',[{'atom',55,'wxList'}]},[]}],
		%% Line 57
		'type' =
		    %% Line 57
		    [{{'record','wxNotebook'},[{'typed_record_field',{'record_field',57,{'atom',57,'type'}},{'type',57,'union',[{'atom',57,'undefined'}|[{'type',57,'wxNotebookEventType',[]}]]}}],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{'wxNotebookEventType',{'type',58,'union',[{'atom',58,'command_notebook_page_changed'}|[{'atom',58,'command_notebook_page_changing'}]]},[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{'wxNotebook',{'type',59,'record',[{'atom',59,'wxNotebook'}]},[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','wxDisplayChanged'},[{'typed_record_field',{'record_field',61,{'atom',61,'type'}},{'type',61,'union',[{'atom',61,'undefined'}|[{'type',61,'wxDisplayChangedEventType',[]}]]}}],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{'wxDisplayChangedEventType',{'atom',62,'display_changed'},[]}],
		%% Line 63
		'type' =
		    %% Line 63
		    [{'wxDisplayChanged',{'type',63,'record',[{'atom',63,'wxDisplayChanged'}]},[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','wxErase'},[{'typed_record_field',{'record_field',65,{'atom',65,'type'}},{'type',65,'union',[{'atom',65,'undefined'}|[{'type',65,'wxEraseEventType',[]}]]}}|[{'typed_record_field',{'record_field',66,{'atom',66,'dc'}},{'type',66,'union',[{'atom',66,'undefined'}|[{'remote_type',66,[{'atom',66,'wxDC'}|[{'atom',66,'wxDC'}|[[]]]]}]]}}]],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{'wxEraseEventType',{'atom',67,'erase_background'},[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{'wxErase',{'type',68,'record',[{'atom',68,'wxErase'}]},[]}],
		%% Line 70
		'type' =
		    %% Line 70
		    [{{'record','wxKey'},[{'typed_record_field',{'record_field',70,{'atom',70,'type'}},{'type',70,'union',[{'atom',70,'undefined'}|[{'type',70,'wxKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',71,{'atom',71,'x'}},{'type',71,'union',[{'atom',71,'undefined'}|[{'type',71,'integer',[]}]]}}|[{'typed_record_field',{'record_field',72,{'atom',72,'y'}},{'type',72,'union',[{'atom',72,'undefined'}|[{'type',72,'integer',[]}]]}}|[{'typed_record_field',{'record_field',73,{'atom',73,'keyCode'}},{'type',73,'union',[{'atom',73,'undefined'}|[{'type',73,'integer',[]}]]}}|[{'typed_record_field',{'record_field',74,{'atom',74,'controlDown'}},{'type',74,'union',[{'atom',74,'undefined'}|[{'type',74,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'shiftDown'}},{'type',75,'union',[{'atom',75,'undefined'}|[{'type',75,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',76,{'atom',76,'altDown'}},{'type',76,'union',[{'atom',76,'undefined'}|[{'type',76,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',77,{'atom',77,'metaDown'}},{'type',77,'union',[{'atom',77,'undefined'}|[{'type',77,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',78,{'atom',78,'scanCode'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',79,{'atom',79,'uniChar'}},{'type',79,'union',[{'atom',79,'undefined'}|[{'type',79,'integer',[]}]]}}|[{'typed_record_field',{'record_field',80,{'atom',80,'rawCode'}},{'type',80,'union',[{'atom',80,'undefined'}|[{'type',80,'integer',[]}]]}}|[{'typed_record_field',{'record_field',81,{'atom',81,'rawFlags'}},{'type',81,'union',[{'atom',81,'undefined'}|[{'type',81,'integer',[]}]]}}]]]]]]]]]]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{'wxKeyEventType',{'type',82,'union',[{'atom',82,'char'}|[{'atom',82,'char_hook'}|[{'atom',82,'key_down'}|[{'atom',82,'key_up'}]]]]},[]}],
		%% Line 83
		'type' =
		    %% Line 83
		    [{'wxKey',{'type',83,'record',[{'atom',83,'wxKey'}]},[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{{'record','wxWindowDestroy'},[{'typed_record_field',{'record_field',85,{'atom',85,'type'}},{'type',85,'union',[{'atom',85,'undefined'}|[{'type',85,'wxWindowDestroyEventType',[]}]]}}],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{'wxWindowDestroyEventType',{'atom',86,'destroy'},[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{'wxWindowDestroy',{'type',87,'record',[{'atom',87,'wxWindowDestroy'}]},[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','wxCalendar'},[{'typed_record_field',{'record_field',89,{'atom',89,'type'}},{'type',89,'union',[{'atom',89,'undefined'}|[{'type',89,'wxCalendarEventType',[]}]]}}],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{'wxCalendarEventType',{'type',90,'union',[{'atom',90,'calendar_sel_changed'}|[{'atom',90,'calendar_day_changed'}|[{'atom',90,'calendar_month_changed'}|[{'atom',90,'calendar_year_changed'}|[{'atom',90,'calendar_doubleclicked'}|[{'atom',90,'calendar_weekday_clicked'}]]]]]]},[]}],
		%% Line 91
		'type' =
		    %% Line 91
		    [{'wxCalendar',{'type',91,'record',[{'atom',91,'wxCalendar'}]},[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','wxSplitter'},[{'typed_record_field',{'record_field',93,{'atom',93,'type'}},{'type',93,'union',[{'atom',93,'undefined'}|[{'type',93,'wxSplitterEventType',[]}]]}}],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{'wxSplitterEventType',{'type',94,'union',[{'atom',94,'command_splitter_sash_pos_changed'}|[{'atom',94,'command_splitter_sash_pos_changing'}|[{'atom',94,'command_splitter_doubleclicked'}|[{'atom',94,'command_splitter_unsplit'}]]]]},[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{'wxSplitter',{'type',95,'record',[{'atom',95,'wxSplitter'}]},[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','wxScroll'},[{'typed_record_field',{'record_field',97,{'atom',97,'type'}},{'type',97,'union',[{'atom',97,'undefined'}|[{'type',97,'wxScrollEventType',[]}]]}}|[{'typed_record_field',{'record_field',98,{'atom',98,'commandInt'}},{'type',98,'union',[{'atom',98,'undefined'}|[{'type',98,'integer',[]}]]}}|[{'typed_record_field',{'record_field',99,{'atom',99,'extraLong'}},{'type',99,'union',[{'atom',99,'undefined'}|[{'type',99,'integer',[]}]]}}]]],[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{'wxScrollEventType',{'type',100,'union',[{'atom',100,'scroll_top'}|[{'atom',100,'scroll_bottom'}|[{'atom',100,'scroll_lineup'}|[{'atom',100,'scroll_linedown'}|[{'atom',100,'scroll_pageup'}|[{'atom',100,'scroll_pagedown'}|[{'atom',100,'scroll_thumbtrack'}|[{'atom',100,'scroll_thumbrelease'}|[{'atom',100,'scroll_changed'}]]]]]]]]]},[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{'wxScroll',{'type',101,'record',[{'atom',101,'wxScroll'}]},[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','wxMenu'},[{'typed_record_field',{'record_field',103,{'atom',103,'type'}},{'type',103,'union',[{'atom',103,'undefined'}|[{'type',103,'wxMenuEventType',[]}]]}}],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{'wxMenuEventType',{'type',104,'union',[{'atom',104,'menu_open'}|[{'atom',104,'menu_close'}|[{'atom',104,'menu_highlight'}]]]},[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{'wxMenu',{'type',105,'record',[{'atom',105,'wxMenu'}]},[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','wxContextMenu'},[{'typed_record_field',{'record_field',107,{'atom',107,'type'}},{'type',107,'union',[{'atom',107,'undefined'}|[{'type',107,'wxContextMenuEventType',[]}]]}}],[]}],
		%% Line 108
		'type' =
		    %% Line 108
		    [{'wxContextMenuEventType',{'atom',108,'context_menu'},[]}],
		%% Line 109
		'type' =
		    %% Line 109
		    [{'wxContextMenu',{'type',109,'record',[{'atom',109,'wxContextMenu'}]},[]}],
		%% Line 111
		'type' =
		    %% Line 111
		    [{{'record','wxShow'},[{'typed_record_field',{'record_field',111,{'atom',111,'type'}},{'type',111,'union',[{'atom',111,'undefined'}|[{'type',111,'wxShowEventType',[]}]]}}],[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{'wxShowEventType',{'atom',112,'show'},[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{'wxShow',{'type',113,'record',[{'atom',113,'wxShow'}]},[]}],
		%% Line 115
		'type' =
		    %% Line 115
		    [{{'record','wxSpin'},[{'typed_record_field',{'record_field',115,{'atom',115,'type'}},{'type',115,'union',[{'atom',115,'undefined'}|[{'type',115,'wxSpinEventType',[]}]]}}|[{'typed_record_field',{'record_field',116,{'atom',116,'commandInt'}},{'type',116,'union',[{'atom',116,'undefined'}|[{'type',116,'integer',[]}]]}}]],[]}],
		%% Line 117
		'type' =
		    %% Line 117
		    [{'wxSpinEventType',{'type',117,'union',[{'atom',117,'command_spinctrl_updated'}|[{'atom',117,'spin_up'}|[{'atom',117,'spin_down'}|[{'atom',117,'spin'}]]]]},[]}],
		%% Line 118
		'type' =
		    %% Line 118
		    [{'wxSpin',{'type',118,'record',[{'atom',118,'wxSpin'}]},[]}],
		%% Line 120
		'type' =
		    %% Line 120
		    [{{'record','wxSetCursor'},[{'typed_record_field',{'record_field',120,{'atom',120,'type'}},{'type',120,'union',[{'atom',120,'undefined'}|[{'type',120,'wxSetCursorEventType',[]}]]}}],[]}],
		%% Line 121
		'type' =
		    %% Line 121
		    [{'wxSetCursorEventType',{'atom',121,'set_cursor'},[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{'wxSetCursor',{'type',122,'record',[{'atom',122,'wxSetCursor'}]},[]}],
		%% Line 124
		'type' =
		    %% Line 124
		    [{{'record','wxFontPicker'},[{'typed_record_field',{'record_field',124,{'atom',124,'type'}},{'type',124,'union',[{'atom',124,'undefined'}|[{'type',124,'wxFontPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',125,{'atom',125,'font'}},{'type',125,'union',[{'atom',125,'undefined'}|[{'remote_type',125,[{'atom',125,'wxFont'}|[{'atom',125,'wxFont'}|[[]]]]}]]}}]],[]}],
		%% Line 126
		'type' =
		    %% Line 126
		    [{'wxFontPickerEventType',{'atom',126,'command_fontpicker_changed'},[]}],
		%% Line 127
		'type' =
		    %% Line 127
		    [{'wxFontPicker',{'type',127,'record',[{'atom',127,'wxFontPicker'}]},[]}],
		%% Line 129
		'type' =
		    %% Line 129
		    [{{'record','wxScrollWin'},[{'typed_record_field',{'record_field',129,{'atom',129,'type'}},{'type',129,'union',[{'atom',129,'undefined'}|[{'type',129,'wxScrollWinEventType',[]}]]}}],[]}],
		%% Line 130
		'type' =
		    %% Line 130
		    [{'wxScrollWinEventType',{'type',130,'union',[{'atom',130,'scrollwin_top'}|[{'atom',130,'scrollwin_bottom'}|[{'atom',130,'scrollwin_lineup'}|[{'atom',130,'scrollwin_linedown'}|[{'atom',130,'scrollwin_pageup'}|[{'atom',130,'scrollwin_pagedown'}|[{'atom',130,'scrollwin_thumbtrack'}|[{'atom',130,'scrollwin_thumbrelease'}]]]]]]]]},[]}],
		%% Line 131
		'type' =
		    %% Line 131
		    [{'wxScrollWin',{'type',131,'record',[{'atom',131,'wxScrollWin'}]},[]}],
		%% Line 133
		'type' =
		    %% Line 133
		    [{{'record','wxPaint'},[{'typed_record_field',{'record_field',133,{'atom',133,'type'}},{'type',133,'union',[{'atom',133,'undefined'}|[{'type',133,'wxPaintEventType',[]}]]}}],[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{'wxPaintEventType',{'atom',134,'paint'},[]}],
		%% Line 135
		'type' =
		    %% Line 135
		    [{'wxPaint',{'type',135,'record',[{'atom',135,'wxPaint'}]},[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','wxChildFocus'},[{'typed_record_field',{'record_field',137,{'atom',137,'type'}},{'type',137,'union',[{'atom',137,'undefined'}|[{'type',137,'wxChildFocusEventType',[]}]]}}],[]}],
		%% Line 138
		'type' =
		    %% Line 138
		    [{'wxChildFocusEventType',{'atom',138,'child_focus'},[]}],
		%% Line 139
		'type' =
		    %% Line 139
		    [{'wxChildFocus',{'type',139,'record',[{'atom',139,'wxChildFocus'}]},[]}],
		%% Line 141
		'type' =
		    %% Line 141
		    [{{'record','wxMaximize'},[{'typed_record_field',{'record_field',141,{'atom',141,'type'}},{'type',141,'union',[{'atom',141,'undefined'}|[{'type',141,'wxMaximizeEventType',[]}]]}}],[]}],
		%% Line 142
		'type' =
		    %% Line 142
		    [{'wxMaximizeEventType',{'atom',142,'maximize'},[]}],
		%% Line 143
		'type' =
		    %% Line 143
		    [{'wxMaximize',{'type',143,'record',[{'atom',143,'wxMaximize'}]},[]}],
		%% Line 145
		'type' =
		    %% Line 145
		    [{{'record','wxFileDirPicker'},[{'typed_record_field',{'record_field',145,{'atom',145,'type'}},{'type',145,'union',[{'atom',145,'undefined'}|[{'type',145,'wxFileDirPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',146,{'atom',146,'path'}},{'type',146,'union',[{'atom',146,'undefined'}|[{'remote_type',146,[{'atom',146,'unicode'}|[{'atom',146,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 147
		'type' =
		    %% Line 147
		    [{'wxFileDirPickerEventType',{'type',147,'union',[{'atom',147,'command_filepicker_changed'}|[{'atom',147,'command_dirpicker_changed'}]]},[]}],
		%% Line 148
		'type' =
		    %% Line 148
		    [{'wxFileDirPicker',{'type',148,'record',[{'atom',148,'wxFileDirPicker'}]},[]}],
		%% Line 150
		'type' =
		    %% Line 150
		    [{{'record','wxFocus'},[{'typed_record_field',{'record_field',150,{'atom',150,'type'}},{'type',150,'union',[{'atom',150,'undefined'}|[{'type',150,'wxFocusEventType',[]}]]}}],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{'wxFocusEventType',{'type',151,'union',[{'atom',151,'set_focus'}|[{'atom',151,'kill_focus'}]]},[]}],
		%% Line 152
		'type' =
		    %% Line 152
		    [{'wxFocus',{'type',152,'record',[{'atom',152,'wxFocus'}]},[]}],
		%% Line 154
		'type' =
		    %% Line 154
		    [{{'record','wxDate'},[{'typed_record_field',{'record_field',154,{'atom',154,'type'}},{'type',154,'union',[{'atom',154,'undefined'}|[{'type',154,'wxDateEventType',[]}]]}}|[{'typed_record_field',{'record_field',155,{'atom',155,'date'}},{'type',155,'union',[{'atom',155,'undefined'}|[{'remote_type',155,[{'atom',155,'wx'}|[{'atom',155,'wx_datetime'}|[[]]]]}]]}}]],[]}],
		%% Line 156
		'type' =
		    %% Line 156
		    [{'wxDateEventType',{'atom',156,'date_changed'},[]}],
		%% Line 157
		'type' =
		    %% Line 157
		    [{'wxDate',{'type',157,'record',[{'atom',157,'wxDate'}]},[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','wxHtmlLink'},[{'typed_record_field',{'record_field',159,{'atom',159,'type'}},{'type',159,'union',[{'atom',159,'undefined'}|[{'type',159,'wxHtmlLinkEventType',[]}]]}}|[{'typed_record_field',{'record_field',160,{'atom',160,'linkInfo'}},{'type',160,'union',[{'atom',160,'undefined'}|[{'remote_type',160,[{'atom',160,'wx'}|[{'atom',160,'wx_wxHtmlLinkInfo'}|[[]]]]}]]}}]],[]}],
		%% Line 161
		'type' =
		    %% Line 161
		    [{'wxHtmlLinkEventType',{'atom',161,'command_html_link_clicked'},[]}],
		%% Line 162
		'type' =
		    %% Line 162
		    [{'wxHtmlLink',{'type',162,'record',[{'atom',162,'wxHtmlLink'}]},[]}],
		%% Line 164
		'type' =
		    %% Line 164
		    [{{'record','wxHelp'},[{'typed_record_field',{'record_field',164,{'atom',164,'type'}},{'type',164,'union',[{'atom',164,'undefined'}|[{'type',164,'wxHelpEventType',[]}]]}}],[]}],
		%% Line 165
		'type' =
		    %% Line 165
		    [{'wxHelpEventType',{'type',165,'union',[{'atom',165,'help'}|[{'atom',165,'detailed_help'}]]},[]}],
		%% Line 166
		'type' =
		    %% Line 166
		    [{'wxHelp',{'type',166,'record',[{'atom',166,'wxHelp'}]},[]}],
		%% Line 168
		'type' =
		    %% Line 168
		    [{{'record','wxActivate'},[{'typed_record_field',{'record_field',168,{'atom',168,'type'}},{'type',168,'union',[{'atom',168,'undefined'}|[{'type',168,'wxActivateEventType',[]}]]}}|[{'typed_record_field',{'record_field',169,{'atom',169,'active'}},{'type',169,'union',[{'atom',169,'undefined'}|[{'type',169,'boolean',[]}]]}}]],[]}],
		%% Line 170
		'type' =
		    %% Line 170
		    [{'wxActivateEventType',{'type',170,'union',[{'atom',170,'activate'}|[{'atom',170,'activate_app'}|[{'atom',170,'hibernate'}]]]},[]}],
		%% Line 171
		'type' =
		    %% Line 171
		    [{'wxActivate',{'type',171,'record',[{'atom',171,'wxActivate'}]},[]}],
		%% Line 173
		'type' =
		    %% Line 173
		    [{{'record','wxStyledText'},[{'typed_record_field',{'record_field',173,{'atom',173,'type'}},{'type',173,'union',[{'atom',173,'undefined'}|[{'type',173,'wxStyledTextEventType',[]}]]}}|[{'typed_record_field',{'record_field',174,{'atom',174,'position'}},{'type',174,'union',[{'atom',174,'undefined'}|[{'type',174,'integer',[]}]]}}|[{'typed_record_field',{'record_field',175,{'atom',175,'key'}},{'type',175,'union',[{'atom',175,'undefined'}|[{'type',175,'integer',[]}]]}}|[{'typed_record_field',{'record_field',176,{'atom',176,'modifiers'}},{'type',176,'union',[{'atom',176,'undefined'}|[{'type',176,'integer',[]}]]}}|[{'typed_record_field',{'record_field',177,{'atom',177,'modificationType'}},{'type',177,'union',[{'atom',177,'undefined'}|[{'type',177,'integer',[]}]]}}|[{'typed_record_field',{'record_field',178,{'atom',178,'text'}},{'type',178,'union',[{'atom',178,'undefined'}|[{'remote_type',178,[{'atom',178,'unicode'}|[{'atom',178,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',179,{'atom',179,'length'}},{'type',179,'union',[{'atom',179,'undefined'}|[{'type',179,'integer',[]}]]}}|[{'typed_record_field',{'record_field',180,{'atom',180,'linesAdded'}},{'type',180,'union',[{'atom',180,'undefined'}|[{'type',180,'integer',[]}]]}}|[{'typed_record_field',{'record_field',181,{'atom',181,'line'}},{'type',181,'union',[{'atom',181,'undefined'}|[{'type',181,'integer',[]}]]}}|[{'typed_record_field',{'record_field',182,{'atom',182,'foldLevelNow'}},{'type',182,'union',[{'atom',182,'undefined'}|[{'type',182,'integer',[]}]]}}|[{'typed_record_field',{'record_field',183,{'atom',183,'foldLevelPrev'}},{'type',183,'union',[{'atom',183,'undefined'}|[{'type',183,'integer',[]}]]}}|[{'typed_record_field',{'record_field',184,{'atom',184,'margin'}},{'type',184,'union',[{'atom',184,'undefined'}|[{'type',184,'integer',[]}]]}}|[{'typed_record_field',{'record_field',185,{'atom',185,'message'}},{'type',185,'union',[{'atom',185,'undefined'}|[{'type',185,'integer',[]}]]}}|[{'typed_record_field',{'record_field',186,{'atom',186,'wParam'}},{'type',186,'union',[{'atom',186,'undefined'}|[{'type',186,'integer',[]}]]}}|[{'typed_record_field',{'record_field',187,{'atom',187,'lParam'}},{'type',187,'union',[{'atom',187,'undefined'}|[{'type',187,'integer',[]}]]}}|[{'typed_record_field',{'record_field',188,{'atom',188,'listType'}},{'type',188,'union',[{'atom',188,'undefined'}|[{'type',188,'integer',[]}]]}}|[{'typed_record_field',{'record_field',189,{'atom',189,'x'}},{'type',189,'union',[{'atom',189,'undefined'}|[{'type',189,'integer',[]}]]}}|[{'typed_record_field',{'record_field',190,{'atom',190,'y'}},{'type',190,'union',[{'atom',190,'undefined'}|[{'type',190,'integer',[]}]]}}|[{'typed_record_field',{'record_field',191,{'atom',191,'dragText'}},{'type',191,'union',[{'atom',191,'undefined'}|[{'remote_type',191,[{'atom',191,'unicode'}|[{'atom',191,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',192,{'atom',192,'dragAllowMove'}},{'type',192,'union',[{'atom',192,'undefined'}|[{'type',192,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',193,{'atom',193,'dragResult'}},{'type',193,'union',[{'atom',193,'undefined'}|[{'remote_type',193,[{'atom',193,'wx'}|[{'atom',193,'wx_enum'}|[[]]]]}]]}}]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 194
		'type' =
		    %% Line 194
		    [{'wxStyledTextEventType',{'type',194,'union',[{'atom',194,'stc_change'}|[{'atom',194,'stc_styleneeded'}|[{'atom',194,'stc_charadded'}|[{'atom',194,'stc_savepointreached'}|[{'atom',194,'stc_savepointleft'}|[{'atom',194,'stc_romodifyattempt'}|[{'atom',194,'stc_key'}|[{'atom',194,'stc_doubleclick'}|[{'atom',194,'stc_updateui'}|[{'atom',194,'stc_modified'}|[{'atom',194,'stc_macrorecord'}|[{'atom',194,'stc_marginclick'}|[{'atom',194,'stc_needshown'}|[{'atom',194,'stc_painted'}|[{'atom',194,'stc_userlistselection'}|[{'atom',194,'stc_uridropped'}|[{'atom',194,'stc_dwellstart'}|[{'atom',194,'stc_dwellend'}|[{'atom',194,'stc_start_drag'}|[{'atom',194,'stc_drag_over'}|[{'atom',194,'stc_do_drop'}|[{'atom',194,'stc_zoom'}|[{'atom',194,'stc_hotspot_click'}|[{'atom',194,'stc_hotspot_dclick'}|[{'atom',194,'stc_calltip_click'}|[{'atom',194,'stc_autocomp_selection'}]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 195
		'type' =
		    %% Line 195
		    [{'wxStyledText',{'type',195,'record',[{'atom',195,'wxStyledText'}]},[]}],
		%% Line 197
		'type' =
		    %% Line 197
		    [{{'record','wxSysColourChanged'},[{'typed_record_field',{'record_field',197,{'atom',197,'type'}},{'type',197,'union',[{'atom',197,'undefined'}|[{'type',197,'wxSysColourChangedEventType',[]}]]}}],[]}],
		%% Line 198
		'type' =
		    %% Line 198
		    [{'wxSysColourChangedEventType',{'atom',198,'sys_colour_changed'},[]}],
		%% Line 199
		'type' =
		    %% Line 199
		    [{'wxSysColourChanged',{'type',199,'record',[{'atom',199,'wxSysColourChanged'}]},[]}],
		%% Line 201
		'type' =
		    %% Line 201
		    [{{'record','wxGrid'},[{'typed_record_field',{'record_field',201,{'atom',201,'type'}},{'type',201,'union',[{'atom',201,'undefined'}|[{'type',201,'wxGridEventType',[]}]]}}|[{'typed_record_field',{'record_field',202,{'atom',202,'row'}},{'type',202,'union',[{'atom',202,'undefined'}|[{'type',202,'integer',[]}]]}}|[{'typed_record_field',{'record_field',203,{'atom',203,'col'}},{'type',203,'union',[{'atom',203,'undefined'}|[{'type',203,'integer',[]}]]}}|[{'typed_record_field',{'record_field',204,{'atom',204,'x'}},{'type',204,'union',[{'atom',204,'undefined'}|[{'type',204,'integer',[]}]]}}|[{'typed_record_field',{'record_field',205,{'atom',205,'y'}},{'type',205,'union',[{'atom',205,'undefined'}|[{'type',205,'integer',[]}]]}}|[{'typed_record_field',{'record_field',206,{'atom',206,'selecting'}},{'type',206,'union',[{'atom',206,'undefined'}|[{'type',206,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',207,{'atom',207,'control'}},{'type',207,'union',[{'atom',207,'undefined'}|[{'type',207,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',208,{'atom',208,'meta'}},{'type',208,'union',[{'atom',208,'undefined'}|[{'type',208,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',209,{'atom',209,'shift'}},{'type',209,'union',[{'atom',209,'undefined'}|[{'type',209,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',210,{'atom',210,'alt'}},{'type',210,'union',[{'atom',210,'undefined'}|[{'type',210,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 211
		'type' =
		    %% Line 211
		    [{'wxGridEventType',{'type',211,'union',[{'atom',211,'grid_cell_left_click'}|[{'atom',211,'grid_cell_right_click'}|[{'atom',211,'grid_cell_left_dclick'}|[{'atom',211,'grid_cell_right_dclick'}|[{'atom',211,'grid_label_left_click'}|[{'atom',211,'grid_label_right_click'}|[{'atom',211,'grid_label_left_dclick'}|[{'atom',211,'grid_label_right_dclick'}|[{'atom',211,'grid_row_size'}|[{'atom',211,'grid_col_size'}|[{'atom',211,'grid_range_select'}|[{'atom',211,'grid_cell_change'}|[{'atom',211,'grid_select_cell'}|[{'atom',211,'grid_editor_shown'}|[{'atom',211,'grid_editor_hidden'}|[{'atom',211,'grid_editor_created'}|[{'atom',211,'grid_cell_begin_drag'}]]]]]]]]]]]]]]]]]},[]}],
		%% Line 212
		'type' =
		    %% Line 212
		    [{'wxGrid',{'type',212,'record',[{'atom',212,'wxGrid'}]},[]}],
		%% Line 214
		'type' =
		    %% Line 214
		    [{{'record','wxPaletteChanged'},[{'typed_record_field',{'record_field',214,{'atom',214,'type'}},{'type',214,'union',[{'atom',214,'undefined'}|[{'type',214,'wxPaletteChangedEventType',[]}]]}}],[]}],
		%% Line 215
		'type' =
		    %% Line 215
		    [{'wxPaletteChangedEventType',{'atom',215,'palette_changed'},[]}],
		%% Line 216
		'type' =
		    %% Line 216
		    [{'wxPaletteChanged',{'type',216,'record',[{'atom',216,'wxPaletteChanged'}]},[]}],
		%% Line 218
		'type' =
		    %% Line 218
		    [{{'record','wxUpdateUI'},[{'typed_record_field',{'record_field',218,{'atom',218,'type'}},{'type',218,'union',[{'atom',218,'undefined'}|[{'type',218,'wxUpdateUIEventType',[]}]]}}],[]}],
		%% Line 219
		'type' =
		    %% Line 219
		    [{'wxUpdateUIEventType',{'atom',219,'update_ui'},[]}],
		%% Line 220
		'type' =
		    %% Line 220
		    [{'wxUpdateUI',{'type',220,'record',[{'atom',220,'wxUpdateUI'}]},[]}],
		%% Line 222
		'type' =
		    %% Line 222
		    [{{'record','wxSize'},[{'typed_record_field',{'record_field',222,{'atom',222,'type'}},{'type',222,'union',[{'atom',222,'undefined'}|[{'type',222,'wxSizeEventType',[]}]]}}|[{'typed_record_field',{'record_field',223,{'atom',223,'size'}},{'type',223,'union',[{'atom',223,'undefined'}|[{'type',223,'tuple',[{'ann_type',223,[{'var',223,'W'}|[{'type',223,'integer',[]}]]}|[{'ann_type',223,[{'var',223,'H'}|[{'type',223,'integer',[]}]]}]]}]]}}|[{'typed_record_field',{'record_field',224,{'atom',224,'rect'}},{'type',224,'union',[{'atom',224,'undefined'}|[{'type',224,'tuple',[{'ann_type',224,[{'var',224,'X'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'Y'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'W'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'H'}|[{'type',224,'integer',[]}]]}]]]]}]]}}]]],[]}],
		%% Line 225
		'type' =
		    %% Line 225
		    [{'wxSizeEventType',{'atom',225,'size'},[]}],
		%% Line 226
		'type' =
		    %% Line 226
		    [{'wxSize',{'type',226,'record',[{'atom',226,'wxSize'}]},[]}],
		%% Line 228
		'type' =
		    %% Line 228
		    [{{'record','wxIconize'},[{'typed_record_field',{'record_field',228,{'atom',228,'type'}},{'type',228,'union',[{'atom',228,'undefined'}|[{'type',228,'wxIconizeEventType',[]}]]}}],[]}],
		%% Line 229
		'type' =
		    %% Line 229
		    [{'wxIconizeEventType',{'atom',229,'iconize'},[]}],
		%% Line 230
		'type' =
		    %% Line 230
		    [{'wxIconize',{'type',230,'record',[{'atom',230,'wxIconize'}]},[]}],
		%% Line 232
		'type' =
		    %% Line 232
		    [{{'record','wxAuiNotebook'},[{'typed_record_field',{'record_field',232,{'atom',232,'type'}},{'type',232,'union',[{'atom',232,'undefined'}|[{'type',232,'wxAuiNotebookEventType',[]}]]}}|[{'typed_record_field',{'record_field',233,{'atom',233,'old_selection'}},{'type',233,'union',[{'atom',233,'undefined'}|[{'type',233,'integer',[]}]]}}|[{'typed_record_field',{'record_field',234,{'atom',234,'selection'}},{'type',234,'union',[{'atom',234,'undefined'}|[{'type',234,'integer',[]}]]}}|[{'typed_record_field',{'record_field',235,{'atom',235,'drag_source'}},{'type',235,'union',[{'atom',235,'undefined'}|[{'remote_type',235,[{'atom',235,'wxAuiNotebook'}|[{'atom',235,'wxAuiNotebook'}|[[]]]]}]]}}]]]],[]}],
		%% Line 236
		'type' =
		    %% Line 236
		    [{'wxAuiNotebookEventType',{'type',236,'union',[{'atom',236,'command_auinotebook_page_close'}|[{'atom',236,'command_auinotebook_page_changed'}|[{'atom',236,'command_auinotebook_page_changing'}|[{'atom',236,'command_auinotebook_button'}|[{'atom',236,'command_auinotebook_begin_drag'}|[{'atom',236,'command_auinotebook_end_drag'}|[{'atom',236,'command_auinotebook_drag_motion'}|[{'atom',236,'command_auinotebook_allow_dnd'}|[{'atom',236,'command_auinotebook_tab_middle_down'}|[{'atom',236,'command_auinotebook_tab_middle_up'}|[{'atom',236,'command_auinotebook_tab_right_down'}|[{'atom',236,'command_auinotebook_tab_right_up'}|[{'atom',236,'command_auinotebook_page_closed'}|[{'atom',236,'command_auinotebook_drag_done'}|[{'atom',236,'command_auinotebook_bg_dclick'}]]]]]]]]]]]]]]]},[]}],
		%% Line 237
		'type' =
		    %% Line 237
		    [{'wxAuiNotebook',{'type',237,'record',[{'atom',237,'wxAuiNotebook'}]},[]}],
		%% Line 239
		'type' =
		    %% Line 239
		    [{{'record','wxClose'},[{'typed_record_field',{'record_field',239,{'atom',239,'type'}},{'type',239,'union',[{'atom',239,'undefined'}|[{'type',239,'wxCloseEventType',[]}]]}}],[]}],
		%% Line 240
		'type' =
		    %% Line 240
		    [{'wxCloseEventType',{'type',240,'union',[{'atom',240,'close_window'}|[{'atom',240,'end_session'}|[{'atom',240,'query_end_session'}]]]},[]}],
		%% Line 241
		'type' =
		    %% Line 241
		    [{'wxClose',{'type',241,'record',[{'atom',241,'wxClose'}]},[]}],
		%% Line 243
		'type' =
		    %% Line 243
		    [{{'record','wxMouseCaptureChanged'},[{'typed_record_field',{'record_field',243,{'atom',243,'type'}},{'type',243,'union',[{'atom',243,'undefined'}|[{'type',243,'wxMouseCaptureChangedEventType',[]}]]}}],[]}],
		%% Line 244
		'type' =
		    %% Line 244
		    [{'wxMouseCaptureChangedEventType',{'atom',244,'mouse_capture_changed'},[]}],
		%% Line 245
		'type' =
		    %% Line 245
		    [{'wxMouseCaptureChanged',{'type',245,'record',[{'atom',245,'wxMouseCaptureChanged'}]},[]}],
		%% Line 247
		'type' =
		    %% Line 247
		    [{{'record','wxMouse'},[{'typed_record_field',{'record_field',247,{'atom',247,'type'}},{'type',247,'union',[{'atom',247,'undefined'}|[{'type',247,'wxMouseEventType',[]}]]}}|[{'typed_record_field',{'record_field',248,{'atom',248,'x'}},{'type',248,'union',[{'atom',248,'undefined'}|[{'type',248,'integer',[]}]]}}|[{'typed_record_field',{'record_field',249,{'atom',249,'y'}},{'type',249,'union',[{'atom',249,'undefined'}|[{'type',249,'integer',[]}]]}}|[{'typed_record_field',{'record_field',250,{'atom',250,'leftDown'}},{'type',250,'union',[{'atom',250,'undefined'}|[{'type',250,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',251,{'atom',251,'middleDown'}},{'type',251,'union',[{'atom',251,'undefined'}|[{'type',251,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',252,{'atom',252,'rightDown'}},{'type',252,'union',[{'atom',252,'undefined'}|[{'type',252,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',253,{'atom',253,'controlDown'}},{'type',253,'union',[{'atom',253,'undefined'}|[{'type',253,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',254,{'atom',254,'shiftDown'}},{'type',254,'union',[{'atom',254,'undefined'}|[{'type',254,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',255,{'atom',255,'altDown'}},{'type',255,'union',[{'atom',255,'undefined'}|[{'type',255,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',256,{'atom',256,'metaDown'}},{'type',256,'union',[{'atom',256,'undefined'}|[{'type',256,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',257,{'atom',257,'wheelRotation'}},{'type',257,'union',[{'atom',257,'undefined'}|[{'type',257,'integer',[]}]]}}|[{'typed_record_field',{'record_field',258,{'atom',258,'wheelDelta'}},{'type',258,'union',[{'atom',258,'undefined'}|[{'type',258,'integer',[]}]]}}|[{'typed_record_field',{'record_field',259,{'atom',259,'linesPerAction'}},{'type',259,'union',[{'atom',259,'undefined'}|[{'type',259,'integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 260
		'type' =
		    %% Line 260
		    [{'wxMouseEventType',{'type',260,'union',[{'atom',260,'left_down'}|[{'atom',260,'left_up'}|[{'atom',260,'middle_down'}|[{'atom',260,'middle_up'}|[{'atom',260,'right_down'}|[{'atom',260,'right_up'}|[{'atom',260,'motion'}|[{'atom',260,'enter_window'}|[{'atom',260,'leave_window'}|[{'atom',260,'left_dclick'}|[{'atom',260,'middle_dclick'}|[{'atom',260,'right_dclick'}|[{'atom',260,'mousewheel'}]]]]]]]]]]]]]},[]}],
		%% Line 261
		'type' =
		    %% Line 261
		    [{'wxMouse',{'type',261,'record',[{'atom',261,'wxMouse'}]},[]}],
		%% Line 263
		'type' =
		    %% Line 263
		    [{{'record','wxClipboardText'},[{'typed_record_field',{'record_field',263,{'atom',263,'type'}},{'type',263,'union',[{'atom',263,'undefined'}|[{'type',263,'wxClipboardTextEventType',[]}]]}}],[]}],
		%% Line 264
		'type' =
		    %% Line 264
		    [{'wxClipboardTextEventType',{'type',264,'union',[{'atom',264,'command_text_copy'}|[{'atom',264,'command_text_cut'}|[{'atom',264,'command_text_paste'}]]]},[]}],
		%% Line 265
		'type' =
		    %% Line 265
		    [{'wxClipboardText',{'type',265,'record',[{'atom',265,'wxClipboardText'}]},[]}],
		%% Line 267
		'type' =
		    %% Line 267
		    [{{'record','wxWindowCreate'},[{'typed_record_field',{'record_field',267,{'atom',267,'type'}},{'type',267,'union',[{'atom',267,'undefined'}|[{'type',267,'wxWindowCreateEventType',[]}]]}}],[]}],
		%% Line 268
		'type' =
		    %% Line 268
		    [{'wxWindowCreateEventType',{'atom',268,'create'},[]}],
		%% Line 269
		'type' =
		    %% Line 269
		    [{'wxWindowCreate',{'type',269,'record',[{'atom',269,'wxWindowCreate'}]},[]}],
		%% Line 271
		'type' =
		    %% Line 271
		    [{{'record','wxAuiManager'},[{'typed_record_field',{'record_field',271,{'atom',271,'type'}},{'type',271,'union',[{'atom',271,'undefined'}|[{'type',271,'wxAuiManagerEventType',[]}]]}}|[{'typed_record_field',{'record_field',272,{'atom',272,'manager'}},{'type',272,'union',[{'atom',272,'undefined'}|[{'remote_type',272,[{'atom',272,'wxAuiManager'}|[{'atom',272,'wxAuiManager'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',273,{'atom',273,'pane'}},{'type',273,'union',[{'atom',273,'undefined'}|[{'remote_type',273,[{'atom',273,'wxAuiPaneInfo'}|[{'atom',273,'wxAuiPaneInfo'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',274,{'atom',274,'button'}},{'type',274,'union',[{'atom',274,'undefined'}|[{'type',274,'integer',[]}]]}}|[{'typed_record_field',{'record_field',275,{'atom',275,'veto_flag'}},{'type',275,'union',[{'atom',275,'undefined'}|[{'type',275,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',276,{'atom',276,'canveto_flag'}},{'type',276,'union',[{'atom',276,'undefined'}|[{'type',276,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',277,{'atom',277,'dc'}},{'type',277,'union',[{'atom',277,'undefined'}|[{'remote_type',277,[{'atom',277,'wxDC'}|[{'atom',277,'wxDC'}|[[]]]]}]]}}]]]]]]],[]}],
		%% Line 278
		'type' =
		    %% Line 278
		    [{'wxAuiManagerEventType',{'type',278,'union',[{'atom',278,'aui_pane_button'}|[{'atom',278,'aui_pane_close'}|[{'atom',278,'aui_pane_maximize'}|[{'atom',278,'aui_pane_restore'}|[{'atom',278,'aui_render'}|[{'atom',278,'aui_find_manager'}]]]]]]},[]}],
		%% Line 279
		'type' =
		    %% Line 279
		    [{'wxAuiManager',{'type',279,'record',[{'atom',279,'wxAuiManager'}]},[]}],
		%% Line 281
		'type' =
		    %% Line 281
		    [{{'record','wxInitDialog'},[{'typed_record_field',{'record_field',281,{'atom',281,'type'}},{'type',281,'union',[{'atom',281,'undefined'}|[{'type',281,'wxInitDialogEventType',[]}]]}}],[]}],
		%% Line 282
		'type' =
		    %% Line 282
		    [{'wxInitDialogEventType',{'atom',282,'init_dialog'},[]}],
		%% Line 283
		'type' =
		    %% Line 283
		    [{'wxInitDialog',{'type',283,'record',[{'atom',283,'wxInitDialog'}]},[]}],
		%% Line 285
		'type' =
		    %% Line 285
		    [{{'record','wxCommand'},[{'typed_record_field',{'record_field',285,{'atom',285,'type'}},{'type',285,'union',[{'atom',285,'undefined'}|[{'type',285,'wxCommandEventType',[]}]]}}|[{'typed_record_field',{'record_field',286,{'atom',286,'cmdString'}},{'type',286,'union',[{'atom',286,'undefined'}|[{'remote_type',286,[{'atom',286,'unicode'}|[{'atom',286,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',287,{'atom',287,'commandInt'}},{'type',287,'union',[{'atom',287,'undefined'}|[{'type',287,'integer',[]}]]}}|[{'typed_record_field',{'record_field',288,{'atom',288,'extraLong'}},{'type',288,'union',[{'atom',288,'undefined'}|[{'type',288,'integer',[]}]]}}]]]],[]}],
		%% Line 289
		'type' =
		    %% Line 289
		    [{'wxCommandEventType',{'type',289,'union',[{'atom',289,'command_button_clicked'}|[{'atom',289,'command_checkbox_clicked'}|[{'atom',289,'command_choice_selected'}|[{'atom',289,'command_listbox_selected'}|[{'atom',289,'command_listbox_doubleclicked'}|[{'atom',289,'command_text_updated'}|[{'atom',289,'command_text_enter'}|[{'atom',289,'command_menu_selected'}|[{'atom',289,'command_slider_updated'}|[{'atom',289,'command_radiobox_selected'}|[{'atom',289,'command_radiobutton_selected'}|[{'atom',289,'command_scrollbar_updated'}|[{'atom',289,'command_vlbox_selected'}|[{'atom',289,'command_combobox_selected'}|[{'atom',289,'command_tool_rclicked'}|[{'atom',289,'command_tool_enter'}|[{'atom',289,'command_checklistbox_toggled'}|[{'atom',289,'command_togglebutton_clicked'}|[{'atom',289,'command_left_click'}|[{'atom',289,'command_left_dclick'}|[{'atom',289,'command_right_click'}|[{'atom',289,'command_set_focus'}|[{'atom',289,'command_kill_focus'}|[{'atom',289,'command_enter'}]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 290
		'type' =
		    %% Line 290
		    [{'wxCommand',{'type',290,'record',[{'atom',290,'wxCommand'}]},[]}],
		%% Line 292
		'type' =
		    %% Line 292
		    [{{'record','wxJoystick'},[{'typed_record_field',{'record_field',292,{'atom',292,'type'}},{'type',292,'union',[{'atom',292,'undefined'}|[{'type',292,'wxJoystickEventType',[]}]]}}],[]}],
		%% Line 293
		'type' =
		    %% Line 293
		    [{'wxJoystickEventType',{'type',293,'union',[{'atom',293,'joy_button_down'}|[{'atom',293,'joy_button_up'}|[{'atom',293,'joy_move'}|[{'atom',293,'joy_zmove'}]]]]},[]}],
		%% Line 294
		'type' =
		    %% Line 294
		    [{'wxJoystick',{'type',294,'record',[{'atom',294,'wxJoystick'}]},[]}],
		%% Line 296
		'type' =
		    %% Line 296
		    [{{'record','wxQueryNewPalette'},[{'typed_record_field',{'record_field',296,{'atom',296,'type'}},{'type',296,'union',[{'atom',296,'undefined'}|[{'type',296,'wxQueryNewPaletteEventType',[]}]]}}],[]}],
		%% Line 297
		'type' =
		    %% Line 297
		    [{'wxQueryNewPaletteEventType',{'atom',297,'query_new_palette'},[]}],
		%% Line 298
		'type' =
		    %% Line 298
		    [{'wxQueryNewPalette',{'type',298,'record',[{'atom',298,'wxQueryNewPalette'}]},[]}],
		%% Line 300
		'type' =
		    %% Line 300
		    [{{'record','wxMove'},[{'typed_record_field',{'record_field',300,{'atom',300,'type'}},{'type',300,'union',[{'atom',300,'undefined'}|[{'type',300,'wxMoveEventType',[]}]]}}],[]}],
		%% Line 301
		'type' =
		    %% Line 301
		    [{'wxMoveEventType',{'atom',301,'move'},[]}],
		%% Line 302
		'type' =
		    %% Line 302
		    [{'wxMove',{'type',302,'record',[{'atom',302,'wxMove'}]},[]}],
		%% Line 304
		'type' =
		    %% Line 304
		    [{{'record','wxIdle'},[{'typed_record_field',{'record_field',304,{'atom',304,'type'}},{'type',304,'union',[{'atom',304,'undefined'}|[{'type',304,'wxIdleEventType',[]}]]}}],[]}],
		%% Line 305
		'type' =
		    %% Line 305
		    [{'wxIdleEventType',{'atom',305,'idle'},[]}],
		%% Line 306
		'type' =
		    %% Line 306
		    [{'wxIdle',{'type',306,'record',[{'atom',306,'wxIdle'}]},[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{{'record','wxColourPicker'},[{'typed_record_field',{'record_field',308,{'atom',308,'type'}},{'type',308,'union',[{'atom',308,'undefined'}|[{'type',308,'wxColourPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',309,{'atom',309,'colour'}},{'type',309,'union',[{'atom',309,'undefined'}|[{'remote_type',309,[{'atom',309,'wx'}|[{'atom',309,'wx_colour'}|[[]]]]}]]}}]],[]}],
		%% Line 310
		'type' =
		    %% Line 310
		    [{'wxColourPickerEventType',{'atom',310,'command_colourpicker_changed'},[]}],
		%% Line 311
		'type' =
		    %% Line 311
		    [{'wxColourPicker',{'type',311,'record',[{'atom',311,'wxColourPicker'}]},[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{{'record','wxTaskBarIcon'},[{'typed_record_field',{'record_field',313,{'atom',313,'type'}},{'type',313,'union',[{'atom',313,'undefined'}|[{'type',313,'wxTaskBarIconEventType',[]}]]}}],[]}],
		%% Line 314
		'type' =
		    %% Line 314
		    [{'wxTaskBarIconEventType',{'type',314,'union',[{'atom',314,'taskbar_move'}|[{'atom',314,'taskbar_left_down'}|[{'atom',314,'taskbar_left_up'}|[{'atom',314,'taskbar_right_down'}|[{'atom',314,'taskbar_right_up'}|[{'atom',314,'taskbar_left_dclick'}|[{'atom',314,'taskbar_right_dclick'}]]]]]]]},[]}],
		%% Line 315
		'type' =
		    %% Line 315
		    [{'wxTaskBarIcon',{'type',315,'record',[{'atom',315,'wxTaskBarIcon'}]},[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{{'record','wxTree'},[{'typed_record_field',{'record_field',317,{'atom',317,'type'}},{'type',317,'union',[{'atom',317,'undefined'}|[{'type',317,'wxTreeEventType',[]}]]}}|[{'typed_record_field',{'record_field',318,{'atom',318,'item'}},{'type',318,'union',[{'atom',318,'undefined'}|[{'type',318,'integer',[]}]]}}|[{'typed_record_field',{'record_field',319,{'atom',319,'itemOld'}},{'type',319,'union',[{'atom',319,'undefined'}|[{'type',319,'integer',[]}]]}}|[{'typed_record_field',{'record_field',320,{'atom',320,'pointDrag'}},{'type',320,'union',[{'atom',320,'undefined'}|[{'type',320,'tuple',[{'ann_type',320,[{'var',320,'X'}|[{'type',320,'integer',[]}]]}|[{'ann_type',320,[{'var',320,'Y'}|[{'type',320,'integer',[]}]]}]]}]]}}]]]],[]}],
		%% Line 321
		'type' =
		    %% Line 321
		    [{'wxTreeEventType',{'type',321,'union',[{'atom',321,'command_tree_begin_drag'}|[{'atom',321,'command_tree_begin_rdrag'}|[{'atom',321,'command_tree_begin_label_edit'}|[{'atom',321,'command_tree_end_label_edit'}|[{'atom',321,'command_tree_delete_item'}|[{'atom',321,'command_tree_get_info'}|[{'atom',321,'command_tree_set_info'}|[{'atom',321,'command_tree_item_expanded'}|[{'atom',321,'command_tree_item_expanding'}|[{'atom',321,'command_tree_item_collapsed'}|[{'atom',321,'command_tree_item_collapsing'}|[{'atom',321,'command_tree_sel_changed'}|[{'atom',321,'command_tree_sel_changing'}|[{'atom',321,'command_tree_key_down'}|[{'atom',321,'command_tree_item_activated'}|[{'atom',321,'command_tree_item_right_click'}|[{'atom',321,'command_tree_item_middle_click'}|[{'atom',321,'command_tree_end_drag'}|[{'atom',321,'command_tree_state_image_click'}|[{'atom',321,'command_tree_item_gettooltip'}|[{'atom',321,'command_tree_item_menu'}]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 322
		'type' =
		    %% Line 322
		    [{'wxTree',{'type',322,'record',[{'atom',322,'wxTree'}]},[]}],
		%% Line 324
		'type' =
		    %% Line 324
		    [{'event',{'type',324,'union',[{'type',324,'wxActivate',[]}|[{'type',324,'wxAuiManager',[]}|[{'type',324,'wxAuiNotebook',[]}|[{'type',324,'wxCalendar',[]}|[{'type',324,'wxChildFocus',[]}|[{'type',324,'wxClipboardText',[]}|[{'type',324,'wxClose',[]}|[{'type',324,'wxColourPicker',[]}|[{'type',324,'wxCommand',[]}|[{'type',324,'wxContextMenu',[]}|[{'type',324,'wxDate',[]}|[{'type',324,'wxDisplayChanged',[]}|[{'type',324,'wxErase',[]}|[{'type',324,'wxFileDirPicker',[]}|[{'type',324,'wxFocus',[]}|[{'type',324,'wxFontPicker',[]}|[{'type',324,'wxGrid',[]}|[{'type',324,'wxHelp',[]}|[{'type',324,'wxHtmlLink',[]}|[{'type',324,'wxIconize',[]}|[{'type',324,'wxIdle',[]}|[{'type',324,'wxInitDialog',[]}|[{'type',324,'wxJoystick',[]}|[{'type',324,'wxKey',[]}|[{'type',324,'wxList',[]}|[{'type',324,'wxMaximize',[]}|[{'type',324,'wxMenu',[]}|[{'type',324,'wxMouse',[]}|[{'type',324,'wxMouseCaptureChanged',[]}|[{'type',324,'wxMove',[]}|[{'type',324,'wxNavigationKey',[]}|[{'type',324,'wxNotebook',[]}|[{'type',324,'wxPaint',[]}|[{'type',324,'wxPaletteChanged',[]}|[{'type',324,'wxQueryNewPalette',[]}|[{'type',324,'wxSash',[]}|[{'type',324,'wxScroll',[]}|[{'type',324,'wxScrollWin',[]}|[{'type',324,'wxSetCursor',[]}|[{'type',324,'wxShow',[]}|[{'type',324,'wxSize',[]}|[{'type',324,'wxSpin',[]}|[{'type',324,'wxSplitter',[]}|[{'type',324,'wxStyledText',[]}|[{'type',324,'wxSysColourChanged',[]}|[{'type',324,'wxTaskBarIcon',[]}|[{'type',324,'wxTree',[]}|[{'type',324,'wxUpdateUI',[]}|[{'type',324,'wxWindowCreate',[]}|[{'type',324,'wxWindowDestroy',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 325
		'type' =
		    %% Line 325
		    [{'wxEventType',{'type',325,'union',[{'type',325,'wxActivateEventType',[]}|[{'type',325,'wxAuiManagerEventType',[]}|[{'type',325,'wxAuiNotebookEventType',[]}|[{'type',325,'wxCalendarEventType',[]}|[{'type',325,'wxChildFocusEventType',[]}|[{'type',325,'wxClipboardTextEventType',[]}|[{'type',325,'wxCloseEventType',[]}|[{'type',325,'wxColourPickerEventType',[]}|[{'type',325,'wxCommandEventType',[]}|[{'type',325,'wxContextMenuEventType',[]}|[{'type',325,'wxDateEventType',[]}|[{'type',325,'wxDisplayChangedEventType',[]}|[{'type',325,'wxEraseEventType',[]}|[{'type',325,'wxFileDirPickerEventType',[]}|[{'type',325,'wxFocusEventType',[]}|[{'type',325,'wxFontPickerEventType',[]}|[{'type',325,'wxGridEventType',[]}|[{'type',325,'wxHelpEventType',[]}|[{'type',325,'wxHtmlLinkEventType',[]}|[{'type',325,'wxIconizeEventType',[]}|[{'type',325,'wxIdleEventType',[]}|[{'type',325,'wxInitDialogEventType',[]}|[{'type',325,'wxJoystickEventType',[]}|[{'type',325,'wxKeyEventType',[]}|[{'type',325,'wxListEventType',[]}|[{'type',325,'wxMaximizeEventType',[]}|[{'type',325,'wxMenuEventType',[]}|[{'type',325,'wxMouseCaptureChangedEventType',[]}|[{'type',325,'wxMouseEventType',[]}|[{'type',325,'wxMoveEventType',[]}|[{'type',325,'wxNavigationKeyEventType',[]}|[{'type',325,'wxNotebookEventType',[]}|[{'type',325,'wxPaintEventType',[]}|[{'type',325,'wxPaletteChangedEventType',[]}|[{'type',325,'wxQueryNewPaletteEventType',[]}|[{'type',325,'wxSashEventType',[]}|[{'type',325,'wxScrollEventType',[]}|[{'type',325,'wxScrollWinEventType',[]}|[{'type',325,'wxSetCursorEventType',[]}|[{'type',325,'wxShowEventType',[]}|[{'type',325,'wxSizeEventType',[]}|[{'type',325,'wxSpinEventType',[]}|[{'type',325,'wxSplitterEventType',[]}|[{'type',325,'wxStyledTextEventType',[]}|[{'type',325,'wxSysColourChangedEventType',[]}|[{'type',325,'wxTaskBarIconEventType',[]}|[{'type',325,'wxTreeEventType',[]}|[{'type',325,'wxUpdateUIEventType',[]}|[{'type',325,'wxWindowCreateEventType',[]}|[{'type',325,'wxWindowDestroyEventType',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 328
		'type' =
		    %% Line 328
		    [{{'record','wxMouseState'},[{'typed_record_field',{'record_field',328,{'atom',328,'x'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',328,{'atom',328,'y'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'leftDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'type',329,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'middleDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'rightDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'controlDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'shiftDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'altDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'metaDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'cmdDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 333
		'type' =
		    %% Line 333
		    [{{'record','wxHtmlLinkInfo'},[{'typed_record_field',{'record_field',334,{'atom',334,'href'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',334,{'atom',334,'target'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{{'record','breakInfo'},[{'record_field',46,{'atom',46,'point'}}|[{'record_field',46,{'atom',46,'status'}}|[{'record_field',46,{'atom',46,'break'}}]]],[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{{'record','break'},[{'record_field',47,{'atom',47,'mb'}}|[{'record_field',47,{'atom',47,'smi'}}|[{'record_field',47,{'atom',47,'emi'}}|[{'record_field',47,{'atom',47,'dimi'}}|[{'record_field',47,{'atom',47,'demi'}}]]]]],[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','winInfo'},[{'record_field',48,{'atom',48,'window'}}|[{'record_field',49,{'atom',49,'size'}}|[{'record_field',50,{'atom',50,'find'}}|[{'record_field',51,{'atom',51,'m_szr'}}|[{'record_field',52,{'atom',52,'e_szr'}}|[{'record_field',54,{'atom',54,'code'}}|[{'record_field',55,{'atom',55,'sb'}}|[{'record_field',56,{'atom',56,'sg'}}|[{'record_field',57,{'atom',57,'bs'}}|[{'record_field',58,{'atom',58,'eval'}}|[{'record_field',59,{'atom',59,'bind'}}|[{'record_field',60,{'atom',60,'trace'}}|[{'record_field',62,{'atom',62,'marked_line'},{'integer',62,0}}|[{'record_field',63,{'atom',63,'selected_line'},{'integer',63,0}}|[{'record_field',65,{'atom',65,'breaks'},{'nil',65}}|[{'record_field',67,{'atom',67,'editor'}}|[{'record_field',68,{'atom',68,'editors'},{'nil',68}}]]]]]]]]]]]]]]]]],[]}],
		%% Line 71
		'type' =
		    %% Line 71
		    [{{'record','sub'},[{'record_field',71,{'atom',71,'enable'},{'atom',71,'true'}}|[{'record_field',72,{'atom',72,'win'}}|[{'record_field',73,{'atom',73,'in'}}|[{'record_field',74,{'atom',74,'out'}}|[{'record_field',75,{'atom',75,'name'}}]]]]],[]}],
		%% Line 78
		'type' =
		    %% Line 78
		    [{{'record','sa'},[{'record_field',78,{'atom',78,'search'}}|[{'record_field',79,{'atom',79,'goto'}}|[{'record_field',80,{'atom',80,'radio'}}]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{{'record','find'},[{'record_field',82,{'atom',82,'start'}}|[{'record_field',83,{'atom',83,'strlen'}}|[{'record_field',84,{'atom',84,'found'}}]]],[]}]]
'init'/0 =
    %% Line 124
    fun () ->
	%% Line 125
	call 'dbg_wx_win':'init'
	    ()
'stop'/1 =
    %% Line 127
    fun (_cor0) ->
	case _cor0 of
	  <{'winInfo',Win,_cor2,_cor3,_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17}> when 'true' ->
	      do  catch
		      %% Line 128
		      call 'wxFrame':'destroy'
			  (Win)
		  %% Line 129
		  'ok'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'stop',1}}] )
	    -| ['compiler_generated'] )
	end
'create_win'/4 =
    %% Line 139
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Do> =
	    %% Line 141
	    ( fun () ->
		  let <_cor4> =
		      %% Line 142
		      call 'dbg_wx_win':'to_string'
			  (_cor2)
		  in  let <Win> =
			  %% Line 142
			  call 'wxFrame':'new'
			      (_cor3, -1, _cor4, %% Line 143
						 [{'size',{700,650}}])
		      in  let <Panel> =
			      %% Line 144
			      call 'wxPanel':'new'
				  (Win, [{'size',{700,650}}])
			  in  let <MenuBar> =
				  %% Line 145
				  call 'wxMenuBar':'new'
				      ()
			      in  do  %% Line 146
				      call 'dbg_wx_win':'create_menus'
					  (MenuBar, _cor0, Win, 1)
				      do  %% Line 147
					  call 'wxFrame':'setMenuBar'
					      (Win, MenuBar)
					  let <Sizer> =
					      %% Line 149
					      call 'wxBoxSizer':'new'
						  (8)
					  in  let <Code> =
						  %% Line 150
						  apply 'code_area'/1
						      (Panel)
					      in  %% Line 151
						  ( case Code of
						      ( <( {'sub',_cor60,_rec0,_cor61,_cor62,_cor63}
							   -| ['compiler_generated'] )> when 'true' ->
							    do  call 'wxSizer':'add'
								    (Sizer, _rec0, %% Line 152
										   [{'proportion',1}|[{'border',2}|[{'flag',8320}]]])
								do  %% Line 154
								    call 'wxSizer':'setVirtualSizeHints'
									(Sizer, _rec0)
								    let <Search> =
									%% Line 157
									apply 'search_area'/1
									    (Panel)
								    in  %% Line 158
									( case Search of
									    ( <( {'sub',_cor70,_rec2,_cor71,_cor72,_cor73}
										 -| ['compiler_generated'] )> when 'true' ->
										  do  call 'wxSizer':'add'
											  (Sizer, _rec2, [{'border',3}|[{'flag',8432}]])
										      let <Bs> =
											  %% Line 159
											  apply 'button_area'/1
											      (Panel)
										      in  %% Line 160
											  ( case Bs of
											      ( <( {'sub',_cor75,_rec3,_cor76,_cor77,_cor78}
												   -| ['compiler_generated'] )> when 'true' ->
												    do  call 'wxSizer':'add'
													    (Sizer, _rec3, [{'border',3}|[{'flag',8432}]])
													let <InfoArea> =
													    %% Line 162
													    call 'wxBoxSizer':'new'
														(4)
													in  do  %% Line 163
														call 'wxSizer':'setMinSize'
														    (InfoArea, {100,200})
														let <Eval> =
														    %% Line 164
														    apply 'eval_area'/1
															(Panel)
														in  %% Line 165
														    ( case Eval of
															( <( {'sub',_cor80,_rec4,_cor81,_cor82,_cor83}
															     -| ['compiler_generated'] )> when 'true' ->
															      do  call 'wxSizer':'add'
																      (InfoArea, _rec4, [{'proportion',1}|[{'flag',8192}]])
																  let <Bind> =
																      %% Line 166
																      apply 'bind_area'/1
																	  (Panel)
																  in  %% Line 167
																      ( case Bind of
																	  ( <( {'sub',_cor85,_rec5,_cor86,_cor87,_cor88}
																	       -| ['compiler_generated'] )> when 'true' ->
																		do  call 'wxSizer':'add'
																			(InfoArea, _rec5, %% Line 168
																					  [{'proportion',1}|[{'border',2}|[{'flag',8208}]]])
																		    do  %% Line 170
																			call 'wxSizer':'add'
																			    (Sizer, InfoArea, [{'border',3}|[{'flag',8432}]])
																			let <Trace> =
																			    %% Line 172
																			    apply 'trace_area'/1
																				(Panel)
																			in  %% Line 173
																			    ( case Trace of
																				( <( {'sub',_cor90,_rec6,_cor91,_cor92,_cor93}
																				     -| ['compiler_generated'] )> when 'true' ->
																				      do  call 'wxSizer':'add'
																					      (Sizer, _rec6, [{'border',3}|[{'flag',8432}]])
																					  let <SB> =
																					      %% Line 174
																					      call 'wxFrame':'createStatusBar'
																						  (Win, [])
																					  in  do  %% Line 177
																						  call 'wxFrame':'connect'
																						      (Win, 'sash_dragged', [{'id',425}|[{'lastId',427}]])
																						  do  %% Line 179
																						      call 'wxFrame':'connect'
																							  (Win, 'close_window', [{'skip','true'}])
																						      do  %% Line 180
																							  call 'wxFrame':'connect'
																							      (Win, 'size', [{'skip','true'}])
																							  do  %% Line 181
																							      call 'wxWindow':'connect'
																								  (Win, 'key_up', [{'skip','true'}])
																							      do  %% Line 182
																								  call 'wxWindow':'setFocus'
																								      (_cor62)
																								  let <Wi0> =
																								      %% Line 184
																								      {'winInfo',Win,'undefined','undefined',%% Line 185
																													     {Panel,Sizer},%% Line 186
																															   {'true',InfoArea},%% Line 187
																																	     Code,%% Line 187
																																		  SB,%% Line 187
																																		     Search,%% Line 187
																																			    Bs,%% Line 188
																																			       Eval,%% Line 188
																																				    Bind,%% Line 188
																																					 Trace,0,0,[],%% Line 189
																																						      {'$top',_cor62},%% Line 190
																																								      [{'$top',_cor62}|[]]}
																								  in  let <_cor46> =
																									  %% Line 192
																									  apply 'enable_windows'/2
																									      (Wi0, _cor1)
																								      in  let <Wi> =
																									      %% Line 192
																									      apply 'show_windows'/1
																										  (_cor46)
																									  in  do  %% Line 193
																										  call 'wxWindow':'setSizer'
																										      (Panel, Sizer)
																										  do  %% Line 194
																										      call 'wxSizer':'fit'
																											  (Sizer, Win)
																										      do  %% Line 195
																											  call 'wxSizer':'setSizeHints'
																											      (Sizer, Win)
																											  let <IconFile> =
																											      %% Line 197
																											      call 'dbg_wx_win':'find_icon'
																												  ([101|[114|[108|[97|[110|[103|[95|[98|[117|[103|[46|[112|[110|[103]]]]]]]]]]]]]])
																											  in  let <Icon> =
																												  %% Line 198
																												  call 'wxIcon':'new'
																												      (IconFile, [{'type',15}])
																											      in  do  %% Line 199
																												      call 'wxFrame':'setIcon'
																													  (Win, Icon)
																												      do  %% Line 200
																													  call 'wxIcon':'destroy'
																													      (Icon)
																													  do  %% Line 202
																													      call 'wxFrame':'show'
																														  (Win)
																													      do  %% Line 203
																														  call 'erlang':'put'
																														      ('window', Win)
																														  do  %% Line 204
																														      call 'erlang':'put'
																															  ('strings', ['str_on'])
																														      %% Line 205
																														      Wi
																				  -| ['compiler_generated'] )
																				( <_cor94> when 'true' ->
																				      ( call ( 'erlang'
																					       -| ['compiler_generated'] ):( 'error'
																									     -| ['compiler_generated'] )
																					    (( {'badrecord','sub'}
																					       -| ['compiler_generated'] ))
																					-| ['compiler_generated'] )
																				  -| ['compiler_generated'] )
																			      end
																			      -| ['compiler_generated'] )
																	    -| ['compiler_generated'] )
																	  ( <_cor89> when 'true' ->
																		( call ( 'erlang'
																			 -| ['compiler_generated'] ):( 'error'
																						       -| ['compiler_generated'] )
																		      (( {'badrecord','sub'}
																			 -| ['compiler_generated'] ))
																		  -| ['compiler_generated'] )
																	    -| ['compiler_generated'] )
																	end
																	-| ['compiler_generated'] )
															  -| ['compiler_generated'] )
															( <_cor84> when 'true' ->
															      ( call ( 'erlang'
																       -| ['compiler_generated'] ):( 'error'
																				     -| ['compiler_generated'] )
																    (( {'badrecord','sub'}
																       -| ['compiler_generated'] ))
																-| ['compiler_generated'] )
															  -| ['compiler_generated'] )
														      end
														      -| ['compiler_generated'] )
												-| ['compiler_generated'] )
											      ( <_cor79> when 'true' ->
												    ( call ( 'erlang'
													     -| ['compiler_generated'] ):( 'error'
																	   -| ['compiler_generated'] )
													  (( {'badrecord','sub'}
													     -| ['compiler_generated'] ))
												      -| ['compiler_generated'] )
												-| ['compiler_generated'] )
											    end
											    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									    ( <_cor74> when 'true' ->
										  ( call ( 'erlang'
											   -| ['compiler_generated'] ):( 'error'
															 -| ['compiler_generated'] )
											(( {'badrecord','sub'}
											   -| ['compiler_generated'] ))
										    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									  end
									  -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						      ( <_cor64> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','sub'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
						    -| ['compiler_generated'] )
	      -| [{'id',{0,0,'-create_win/4-fun-0-'}}] )
	in  %% Line 208
	    try
		call 'wx':'batch'
		    (Do)
	    of <_cor52> ->
		_cor52
	    catch <_cor55,_cor54,_cor53> ->
		do  %% Line 210
		    call 'io':'format'
			([67|[114|[97|[115|[104|[101|[100|[32|[126|[112|[32|[126|[112]]]]]]]]]]]]], [_cor55|[_cor54|[]]])
		    %% Line 211
		    call 'erlang':'error'
			(_cor55)
'get_window'/1 =
    %% Line 220
    fun (_cor0) ->
	%% Line 221
	( case _cor0 of
	    ( <( {'winInfo',_rec10,_cor3,_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18}
		 -| ['compiler_generated'] )> when 'true' ->
		  _rec10
	      -| ['compiler_generated'] )
	    ( <_cor19> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','winInfo'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'configure'/1 =
    %% Line 230
    fun (_cor0) ->
	case _cor0 of
	  <Wi = {'winInfo',Win,_cor3,_cor4,{Panel,Sizer},_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17}> when 'true' ->
	      let <_cor1> =
		  %% Line 231
		  ( fun () ->
			do  %% Line 232
			    apply 'show_windows'/1
				(Wi)
			    do  %% Line 233
				call 'wxSizer':'layout'
				    (Sizer)
				do  %% Line 235
				    call 'wxWindow':'setSizer'
					(Panel, Sizer)
				    do  %% Line 236
					call 'wxSizer':'fit'
					    (Sizer, Win)
					do  %% Line 237
					    call 'wxSizer':'setSizeHints'
						(Sizer, Win)
					    %% Line 238
					    Wi
		    -| [{'id',{0,0,'-configure/1-fun-0-'}}] )
	      in  %% Line 231
		  call 'wx':'batch'
		      (_cor1)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'configure',1}}] )
	    -| ['compiler_generated'] )
	end
'configure'/2 =
    %% Line 241
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Wi0 = {'winInfo',Win,_cor6,_cor7,{Panel,Sizer},_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20},Windows> when 'true' ->
	      let <_cor3> =
		  %% Line 242
		  ( fun () ->
			let <Wi> =
			    %% Line 243
			    apply 'enable_windows'/2
				(Wi0, Windows)
			in  do  %% Line 244
				apply 'show_windows'/1
				    (Wi)
				do  %% Line 245
				    call 'wxSizer':'layout'
					(Sizer)
				    do  %% Line 246
					call 'wxWindow':'setSizer'
					    (Panel, Sizer)
					do  %% Line 247
					    call 'wxSizer':'fit'
						(Sizer, Win)
					    do  %% Line 248
						call 'wxSizer':'setSizeHints'
						    (Sizer, Win)
						%% Line 249
						Wi
		    -| [{'id',{0,0,'-configure/2-fun-0-'}}] )
	      in  %% Line 242
		  call 'wx':'batch'
		      (_cor3)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'configure',2}}] )
	    -| ['compiler_generated'] )
	end
'enable_windows'/2 =
    %% Line 252
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Wi = {'winInfo',_cor32,_cor33,_cor34,_cor35,{_cor36,InfoArea},_cor37,_cor38,SG0,Bs0,%% Line 253
											       Eval0,%% Line 253
												     Bind0,%% Line 253
													   Trace0,_cor39,_cor40,_cor41,_cor42,_cor43},%% Line 253
																		      Windows> when 'true' ->
	      let <_cor12> =
		  %% Line 254
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor4) ->
				case _cor4 of
				  <[%% Line 255
				    Window|_cor3]> when 'true' ->
				      ( case Window of
					  ( <( {'sub',_cor44,_cor45,_cor46,_cor47,_rec13}
					       -| ['compiler_generated'] )> when 'true' ->
						let <_rec11> =
						    call 'lists':'member'
							(_rec13, Windows)
						in  let <_cor10> =
							call 'erlang':'setelement'
							    (2, Window, _rec11)
						    in  let <_cor11> =
							    %% Line 255
							    apply 'lc$^0'/1
								(_cor3)
							in  ( [_cor10|_cor11]
							      -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <_cor48> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','sub'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_cor4> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor4})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (%% Line 255
			     [SG0|[Bs0|[Eval0|[Trace0|[Bind0|[]]]]]])
		    -| ['list_comprehension'] )
	      in  %% Line 256
		  case _cor12 of
		    <[SG|[Bs|[Eval|[Trace|[Bind|[]]]]]]> when 'true' ->
			%% Line 257
			( case Eval of
			    ( <( {'sub',_rec14,_cor55,_cor56,_cor57,_cor58}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_cor20> =
				      ( case _rec14 of
					  ( <( 'true'
					       -| ['compiler_generated'] )> when 'true' ->
						'true'
					    -| ['compiler_generated'] )
					  ( <( 'false'
					       -| ['compiler_generated'] )> when 'true' ->
						( case Bind of
						    ( <( {'sub',_rec15,_cor60,_cor61,_cor62,_cor63}
							 -| ['compiler_generated'] )> when 'true' ->
							  _rec15
						      -| ['compiler_generated'] )
						    ( <_cor64> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','sub'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <_cor15> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {( 'badarg'
							    -| ['compiler_generated'] ),_cor15}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				  in  let <_rec16> = {_cor20,%% Line 258
						  InfoArea}
				      in  let <_cor24> =
					      %% Line 259
					      call 'erlang':'setelement'
						  (13, Wi, Trace)
					  in  let <_cor25> =
						  %% Line 259
						  call 'erlang':'setelement'
						      (12, _cor24, Bind)
					      in  let <_cor26> =
						      %% Line 259
						      call 'erlang':'setelement'
							  (11, _cor25, Eval)
						  in  let <_cor27> =
							  %% Line 258
							  call 'erlang':'setelement'
							      (10, _cor26, Bs)
						      in  let <_cor28> =
							      %% Line 258
							      call 'erlang':'setelement'
								  (9, _cor27, SG)
							  in  %% Line 258
							      call 'erlang':'setelement'
								  (6, _cor28, _rec16)
			      -| ['compiler_generated'] )
			    ( <_cor59> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','sub'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    ( <_cor14> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor14})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor31,_cor30> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor31,_cor30})
		  -| [{'function_name',{'enable_windows',2}}] )
	    -| ['compiler_generated'] )
	end
'show_windows'/1 =
    %% Line 262
    fun (_cor0) ->
	case _cor0 of
	  <Wi = {'winInfo',_cor71,_cor72,_cor73,{_cor74,Sizer},{_cor75,InfoArea},_cor76,_cor77,SG,Bs,%% Line 263
												     Eval,%% Line 263
													  Bind,%% Line 263
													       Trace,_cor78,_cor79,_cor80,_cor81,_cor82}> when 'true' ->
	      %% Line 264
	      ( case SG of
		  ( <( {'sub',_rec18,_cor83,_cor84,_cor85,_cor86}
		       -| ['compiler_generated'] )> when 'true' ->
			do  case _rec18 of
			      %% Line 265
			      <'false'> when 'true' ->
				  call 'wxSizer':'hide'
				      (Sizer, _cor83)
			      %% Line 266
			      <_cor93> when 'true' ->
				  call 'wxSizer':'show'
				      (Sizer, _cor83)
			    end
			    %% Line 268
			    ( case Bs of
				( <( {'sub',_rec21,_cor99,_cor100,_cor101,_cor102}
				     -| ['compiler_generated'] )> when 'true' ->
				      do  case _rec21 of
					    %% Line 269
					    <'false'> when 'true' ->
						call 'wxSizer':'hide'
						    (Sizer, _cor99)
					    %% Line 270
					    <_cor109> when 'true' ->
						call 'wxSizer':'show'
						    (Sizer, _cor99)
					  end
					  do  %% Line 272
					      case <> of
						<>
						    when try
							  ( case <> of
							      ( <>
								    when ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'is_record'
													     -| ['compiler_generated'] )
									    (Eval,
									     ( 'sub'
									       -| ['compiler_generated'] ),
									     ( 6
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] ) ->
								    let <_cor16> =
									( call 'erlang':'element'
									      (2, Eval)
									  -| ['compiler_generated'] )
								    in  ( case ( call ( 'erlang'
											-| ['compiler_generated'] ):( 'and'
														      -| ['compiler_generated'] )
										     (( 'true'
											-| ['compiler_generated'] ), _cor16)
										 -| ['compiler_generated'] ) of
									    ( <'false'> when 'true' ->
										  ( case <> of
										      ( <>
											    when ( call ( 'erlang'
												       -| ['compiler_generated'] ):( 'is_record'
																     -| ['compiler_generated'] )
												    (Bind,
												     ( 'sub'
												       -| ['compiler_generated'] ),
												     ( 6
												       -| ['compiler_generated'] ))
												-| ['compiler_generated'] ) ->
											    let <_cor21> =
												( call 'erlang':'element'
												      (2, Bind)
												  -| ['compiler_generated'] )
											    in  let <_cor25> =
												    ( call ( 'erlang'
													     -| ['compiler_generated'] ):( 'and'
																	   -| ['compiler_generated'] )
													  (( 'true'
													     -| ['compiler_generated'] ), _cor21)
												      -| ['compiler_generated'] )
												in  ( call 'erlang':'not'
													  (_cor25)
												      -| ['compiler_generated'] )
											-| ['compiler_generated'] )
										      ( <> when 'true' ->
											    let <_cor21> =
												( call 'erlang':'element'
												      (2, Bind)
												  -| ['compiler_generated'] )
											    in  let <_cor25> =
												    ( call ( 'erlang'
													     -| ['compiler_generated'] ):( 'and'
																	   -| ['compiler_generated'] )
													  (( 'fail'
													     -| ['compiler_generated'] ), _cor21)
												      -| ['compiler_generated'] )
												in  ( call 'erlang':'not'
													  (_cor25)
												      -| ['compiler_generated'] )
											-| ['compiler_generated'] )
										    end
										    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									    ( <'true'> when 'true' ->
										  'false'
									      -| ['compiler_generated'] )
									  end
									  -| ['compiler_generated'] )
								-| ['compiler_generated'] )
							      ( <> when 'true' ->
								    let <_cor16> =
									( call 'erlang':'element'
									      (2, Eval)
									  -| ['compiler_generated'] )
								    in  ( case ( call ( 'erlang'
											-| ['compiler_generated'] ):( 'and'
														      -| ['compiler_generated'] )
										     (( 'fail'
											-| ['compiler_generated'] ), _cor16)
										 -| ['compiler_generated'] ) of
									    ( <'false'> when 'true' ->
										  ( case <> of
										      ( <>
											    when ( call ( 'erlang'
												       -| ['compiler_generated'] ):( 'is_record'
																     -| ['compiler_generated'] )
												    (Bind,
												     ( 'sub'
												       -| ['compiler_generated'] ),
												     ( 6
												       -| ['compiler_generated'] ))
												-| ['compiler_generated'] ) ->
											    let <_cor21> =
												( call 'erlang':'element'
												      (2, Bind)
												  -| ['compiler_generated'] )
											    in  let <_cor25> =
												    ( call ( 'erlang'
													     -| ['compiler_generated'] ):( 'and'
																	   -| ['compiler_generated'] )
													  (( 'true'
													     -| ['compiler_generated'] ), _cor21)
												      -| ['compiler_generated'] )
												in  ( call 'erlang':'not'
													  (_cor25)
												      -| ['compiler_generated'] )
											-| ['compiler_generated'] )
										      ( <> when 'true' ->
											    let <_cor21> =
												( call 'erlang':'element'
												      (2, Bind)
												  -| ['compiler_generated'] )
											    in  let <_cor25> =
												    ( call ( 'erlang'
													     -| ['compiler_generated'] ):( 'and'
																	   -| ['compiler_generated'] )
													  (( 'fail'
													     -| ['compiler_generated'] ), _cor21)
												      -| ['compiler_generated'] )
												in  ( call 'erlang':'not'
													  (_cor25)
												      -| ['compiler_generated'] )
											-| ['compiler_generated'] )
										    end
										    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									    ( <'true'> when 'true' ->
										  'false'
									      -| ['compiler_generated'] )
									  end
									  -| ['compiler_generated'] )
								-| ['compiler_generated'] )
							    end
							    -| ['compiler_generated'] )
						      of <Try> ->
							  Try
						      catch <T,R> ->
							  'false' ->
						    %% Line 273
						    call 'wxSizer':'hide'
							(Sizer, InfoArea)
						%% Line 274
						<>
						    when try
							  ( case <> of
							      ( <>
								    when ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'is_record'
													     -| ['compiler_generated'] )
									    (Eval,
									     ( 'sub'
									       -| ['compiler_generated'] ),
									     ( 6
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] ) ->
								    let <_cor32> =
									( call 'erlang':'element'
									      (2, Eval)
									  -| ['compiler_generated'] )
								    in  let <_cor33> =
									    ( call 'erlang':'=:='
										  (_cor32, 'true')
									      -| ['compiler_generated'] )
									in  let <_cor35> =
										( call 'erlang':'not'
										      (_cor33)
										  -| ['compiler_generated'] )
									    in  let <_cor36> =
										    ( call 'erlang':'is_boolean'
											  (_cor32)
										      -| ['compiler_generated'] )
										in  ( call 'erlang':'and'
											  (_cor35, _cor36)
										      -| ['compiler_generated'] )
								-| ['compiler_generated'] )
							      ( <> when 'true' ->
								    'false'
								-| ['compiler_generated'] )
							    end
							    -| ['compiler_generated'] )
						      of <Try> ->
							  Try
						      catch <T,R> ->
							  'false' ->
						    do  %% Line 275
							call 'wxSizer':'show'
							    (Sizer, InfoArea)
							%% Line 276
							( case Eval of
							    ( <( {'sub',_cor115,_rec24,_cor116,_cor117,_cor118}
								 -| ['compiler_generated'] )> when 'true' ->
								  do  call 'wxSizer':'hide'
									  (InfoArea, _rec24)
								      %% Line 277
								      ( case Bind of
									  ( <( {'sub',_cor120,_rec25,_cor121,_cor122,_cor123}
									       -| ['compiler_generated'] )> when 'true' ->
										call 'wxSizer':'show'
										    (InfoArea, _rec25)
									    -| ['compiler_generated'] )
									  ( <_cor124> when 'true' ->
										( call ( 'erlang'
											 -| ['compiler_generated'] ):( 'error'
														       -| ['compiler_generated'] )
										      (( {'badrecord','sub'}
											 -| ['compiler_generated'] ))
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									end
									-| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							    ( <_cor119> when 'true' ->
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( 'error'
													 -| ['compiler_generated'] )
									(( {'badrecord','sub'}
									   -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
						%% Line 278
						<>
						    when try
							  ( case <> of
							      ( <>
								    when ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'is_record'
													     -| ['compiler_generated'] )
									    (Bind,
									     ( 'sub'
									       -| ['compiler_generated'] ),
									     ( 6
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] ) ->
								    let <_cor47> =
									( call 'erlang':'element'
									      (2, Bind)
									  -| ['compiler_generated'] )
								    in  let <_cor48> =
									    ( call 'erlang':'=:='
										  (_cor47, 'true')
									      -| ['compiler_generated'] )
									in  let <_cor50> =
										( call 'erlang':'not'
										      (_cor48)
										  -| ['compiler_generated'] )
									    in  let <_cor51> =
										    ( call 'erlang':'is_boolean'
											  (_cor47)
										      -| ['compiler_generated'] )
										in  ( call 'erlang':'and'
											  (_cor50, _cor51)
										      -| ['compiler_generated'] )
								-| ['compiler_generated'] )
							      ( <> when 'true' ->
								    'false'
								-| ['compiler_generated'] )
							    end
							    -| ['compiler_generated'] )
						      of <Try> ->
							  Try
						      catch <T,R> ->
							  'false' ->
						    %% Line 279
						    case call 'wxSizer':'getChildren'
							     (InfoArea) of
						      <[EvalSI|_cor125]> when 'true' ->
							  do  %% Line 280
							      call 'wxSizerItem':'setProportion'
								  (EvalSI, 1)
							      do  %% Line 281
								  call 'wxSizer':'show'
								      (Sizer, InfoArea)
								  %% Line 282
								  ( case Bind of
								      ( <( {'sub',_cor126,_rec26,_cor127,_cor128,_cor129}
									   -| ['compiler_generated'] )> when 'true' ->
									    do  call 'wxSizer':'hide'
										    (InfoArea, _rec26)
										%% Line 283
										( case Eval of
										    ( <( {'sub',_cor131,_rec27,_cor132,_cor133,_cor134}
											 -| ['compiler_generated'] )> when 'true' ->
											  do  call 'wxSizer':'show'
												  (InfoArea, _rec27)
											      'ok'
										      -| ['compiler_generated'] )
										    ( <_cor135> when 'true' ->
											  ( call ( 'erlang'
												   -| ['compiler_generated'] ):( 'error'
																 -| ['compiler_generated'] )
												(( {'badrecord','sub'}
												   -| ['compiler_generated'] ))
											    -| ['compiler_generated'] )
										      -| ['compiler_generated'] )
										  end
										  -| ['compiler_generated'] )
									-| ['compiler_generated'] )
								      ( <_cor130> when 'true' ->
									    ( call ( 'erlang'
										     -| ['compiler_generated'] ):( 'error'
														   -| ['compiler_generated'] )
										  (( {'badrecord','sub'}
										     -| ['compiler_generated'] ))
									      -| ['compiler_generated'] )
									-| ['compiler_generated'] )
								    end
								    -| ['compiler_generated'] )
						      ( <_cor54> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_cor54})
							-| ['compiler_generated'] )
						    end
						%% Line 285
						<> when 'true' ->
						    do  %% Line 286
							call 'wxSizer':'show'
							    (Sizer, InfoArea)
							%% Line 287
							( case Eval of
							    ( <( {'sub',_cor136,_rec28,_cor137,_cor138,_cor139}
								 -| ['compiler_generated'] )> when 'true' ->
								  do  call 'wxSizer':'show'
									  (InfoArea, _rec28)
								      %% Line 288
								      ( case Bind of
									  ( <( {'sub',_cor141,_rec29,_cor142,_cor143,_cor144}
									       -| ['compiler_generated'] )> when 'true' ->
										call 'wxSizer':'show'
										    (InfoArea, _rec29)
									    -| ['compiler_generated'] )
									  ( <_cor145> when 'true' ->
										( call ( 'erlang'
											 -| ['compiler_generated'] ):( 'error'
														       -| ['compiler_generated'] )
										      (( {'badrecord','sub'}
											 -| ['compiler_generated'] ))
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									end
									-| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							    ( <_cor140> when 'true' ->
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( 'error'
													 -| ['compiler_generated'] )
									(( {'badrecord','sub'}
									   -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
					      end
					      %% Line 290
					      ( case Trace of
						  ( <( {'sub',_rec30,_cor146,_cor147,_cor148,_cor149}
						       -| ['compiler_generated'] )> when 'true' ->
							do  case _rec30 of
							      %% Line 291
							      <'false'> when 'true' ->
								  call 'wxSizer':'hide'
								      (Sizer, _cor146)
							      %% Line 292
							      <_cor156> when 'true' ->
								  call 'wxSizer':'show'
								      (Sizer, _cor146)
							    end
							    %% Line 294
							    Wi
						    -| ['compiler_generated'] )
						  ( <_cor150> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','sub'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_cor103> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','sub'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor87> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','sub'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor70> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor70})
		  -| [{'function_name',{'show_windows',1}}] )
	    -| ['compiler_generated'] )
	end
'enable'/2 =
    %% Line 302
    fun (_cor1,_cor0) ->
	let <_cor9> =
	    %% Line 303
	    ( fun (_cor7) ->
		  let <MI> =
		      %% Line 304
		      call 'erlang':'get'
			  (_cor7)
		  in  do  %% Line 305
			  call 'wxMenuItem':'enable'
			      (MI, [{'enable',_cor0}|[]])
			  %% Line 306
			  case apply 'is_button'/1
				   (_cor7) of
			    %% Line 307
			    <{'true',ButtonId}> when 'true' ->
				let <Parent> =
				    %% Line 308
				    call 'erlang':'get'
					('window')
				in  let <Butt> =
					%% Line 309
					call 'wxWindow':'findWindowById'
					    (ButtonId, %% Line 310
						       [{'parent',Parent}|[]])
				    in  %% Line 311
					case call 'wx':'is_null'
						 (Butt) of
					  %% Line 312
					  <'true'> when 'true' ->
					      'ignore'
					  %% Line 313
					  <'false'> when 'true' ->
					      %% Line 314
					      call 'wxButton':'enable'
						  (Butt, [{'enable',_cor0}|[]])
					  ( <_cor5> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_cor5})
					    -| ['compiler_generated'] )
					end
			    %% Line 316
			    <_cor12> when 'true' ->
				%% Line 317
				'ignore'
			  end
	      -| [{'id',{0,0,'-enable/2-fun-0-'}}] )
	in  %% Line 303
	    call 'wx':'foreach'
		(_cor9, _cor1)
'is_enabled'/1 =
    %% Line 322
    fun (_cor0) ->
	let <MI> =
	    %% Line 323
	    call 'erlang':'get'
		(_cor0)
	in  %% Line 324
	    call 'wxMenuItem':'isEnabled'
		(MI)
'select'/2 =
    %% Line 331
    fun (_cor1,_cor0) ->
	let <MI> =
	    %% Line 332
	    call 'erlang':'get'
		(_cor1)
	in  %% Line 333
	    call 'wxMenuItem':'check'
		(MI, [{'check',_cor0}|[]])
'add_break'/3 =
    %% Line 346
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <WinInfo,Menu,Break = {{Mod,Line},[Status|_X_Options]}> when 'true' ->
	      %% Line 347
	      ( case WinInfo of
		  ( <( {'winInfo',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_rec33,_cor24}
		       -| ['compiler_generated'] )> when 'true' ->
			do  case _rec33 of
			      %% Line 348
			      <{_cor26,Editor}>
				  when call 'erlang':'=:='
					(_cor26,
					 Mod) ->
				  %% Line 349
				  call 'dbg_wx_code':'add_break_to_code'
				      (Editor, Line, Status)
			      %% Line 350
			      <_cor27> when 'true' ->
				  'ok'
			    end
			    %% Line 352
			    apply 'add_break_to_menu'/3
				(WinInfo, Menu, Break)
		    -| ['compiler_generated'] )
		  ( <_cor25> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','winInfo'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'add_break',3}}] )
	    -| ['compiler_generated'] )
	end
'add_break_to_menu'/3 =
    %% Line 354
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <WinInfo,Menu,{Point,Options = [Status|_X_Options]}> when 'true' ->
	      %% Line 355
	      ( case WinInfo of
		  ( <( {'winInfo',_rec34,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Break> =
			    call 'dbg_wx_win':'add_break'
				(_rec34, Menu, Point)
			in  do  %% Line 356
				call 'dbg_wx_win':'update_break'
				    (Break, Options)
				let <BreakInfo> =
				    %% Line 357
				    {'breakInfo',Point,Status,Break}
				in  let <_rec35> =
					%% Line 358
					[BreakInfo|_cor28]
				    in  %% Line 358
					call 'erlang':'setelement'
					    (16, WinInfo, _rec35)
		    -| ['compiler_generated'] )
		  ( <_cor31> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','winInfo'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12})
		  -| [{'function_name',{'add_break_to_menu',3}}] )
	    -| ['compiler_generated'] )
	end
'update_break'/2 =
    %% Line 370
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <WinInfo,Break = {{Mod,Line},[Status|_X_Options]}> when 'true' ->
	      %% Line 371
	      ( case WinInfo of
		  ( <( {'winInfo',_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_rec38,_cor22}
		       -| ['compiler_generated'] )> when 'true' ->
			do  case _rec38 of
			      %% Line 372
			      <{_cor24,Editor}>
				  when call 'erlang':'=:='
					(_cor24,
					 Mod) ->
				  %% Line 373
				  call 'dbg_wx_code':'add_break_to_code'
				      (Editor, Line, Status)
			      %% Line 374
			      <_cor25> when 'true' ->
				  'ok'
			    end
			    %% Line 376
			    apply 'update_break_in_menu'/2
				(WinInfo, Break)
		    -| ['compiler_generated'] )
		  ( <_cor23> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','winInfo'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'update_break',2}}] )
	    -| ['compiler_generated'] )
	end
'update_break_in_menu'/2 =
    %% Line 378
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <WinInfo,{Point,Options = [Status|_X_Options]}> when 'true' ->
	      %% Line 380
	      ( case WinInfo of
		  ( <( {'winInfo',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_rec39,_cor32,_cor33}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'lists':'keysearch'
				 (Point, 2, _rec39) of
			  <{'value',BreakInfo}> when 'true' ->
			      %% Line 381
			      ( case BreakInfo of
				  ( <( {'breakInfo',_cor35,_cor36,_rec40}
				       -| ['compiler_generated'] )> when 'true' ->
					do  call 'dbg_wx_win':'update_break'
						(_rec40, Options)
					    let <_cor9> =
						%% Line 382
						call 'erlang':'setelement'
						    (3, BreakInfo, Status)
					    in  let <_rec42> =
						    %% Line 383
						    call 'lists':'keyreplace'
							(Point, 2, _rec39, _cor9)
						in  %% Line 383
						    call 'erlang':'setelement'
							(16, WinInfo, _rec42)
				    -| ['compiler_generated'] )
				  ( <_cor37> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','breakInfo'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  ( <_cor4> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor4})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor34> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','winInfo'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16})
		  -| [{'function_name',{'update_break_in_menu',2}}] )
	    -| ['compiler_generated'] )
	end
'delete_break'/2 =
    %% Line 392
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <WinInfo,Point = {Mod,Line}> when 'true' ->
	      %% Line 393
	      ( case WinInfo of
		  ( <( {'winInfo',_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_rec45,_cor22}
		       -| ['compiler_generated'] )> when 'true' ->
			do  case _rec45 of
			      %% Line 394
			      <{_cor24,Editor}>
				  when call 'erlang':'=:='
					(_cor24,
					 Mod) ->
				  call 'dbg_wx_code':'del_break_from_code'
				      (Editor, Line)
			      %% Line 395
			      <_cor25> when 'true' ->
				  'ok'
			    end
			    %% Line 397
			    apply 'delete_break_from_menu'/2
				(WinInfo, Point)
		    -| ['compiler_generated'] )
		  ( <_cor23> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','winInfo'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'delete_break',2}}] )
	    -| ['compiler_generated'] )
	end
'delete_break_from_menu'/2 =
    %% Line 399
    fun (_cor1,_cor0) ->
	%% Line 401
	( case _cor1 of
	    ( <( {'winInfo',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_rec46,_cor28,_cor29}
		 -| ['compiler_generated'] )> when 'true' ->
		  case call 'lists':'keysearch'
			   (_cor0, 2, _rec46) of
		    <{'value',BreakInfo}> when 'true' ->
			%% Line 402
			( case BreakInfo of
			    ( <( {'breakInfo',_cor31,_cor32,_rec47}
				 -| ['compiler_generated'] )> when 'true' ->
				  do  call 'dbg_wx_win':'delete_break'
					  (_rec47)
				      let <_rec48> =
					  %% Line 403
					  call 'lists':'keydelete'
					      (_cor0, 2, _rec46)
				      in  %% Line 403
					  call 'erlang':'setelement'
					      (16, _cor1, _rec48)
			      -| ['compiler_generated'] )
			    ( <_cor33> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','breakInfo'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor4})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor30> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','winInfo'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'clear_breaks'/1 =
    %% Line 411
    fun (_cor0) ->
	%% Line 412
	apply 'clear_breaks'/2
	    (_cor0, 'all')
'clear_breaks'/2 =
    %% Line 413
    fun (_cor1,_cor0) ->
	let <_cor8> =
	    %% Line 414
	    case <> of
	      %% Line 415
	      <>
		  when call 'erlang':'=:='
			(_cor0,
			 'all') ->
		  ( case _cor1 of
		      ( <( {'winInfo',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_rec51,_cor34,_cor35}
			   -| ['compiler_generated'] )> when 'true' ->
			    _rec51
			-| ['compiler_generated'] )
		      ( <_cor36> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','winInfo'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      %% Line 416
	      <> when 'true' ->
		  let <_cor7> =
		      %% Line 417
		      ( fun (_cor5) ->
			    case _cor5 of
			      <{'breakInfo',{Mod2,_X_L},_cor37,_cor38}> when 'true' ->
				  %% Line 418
				  case <> of
				    %% Line 419
				    <>
					when call 'erlang':'=:='
					      (Mod2,
					       _cor0) ->
					'true'
				    %% Line 420
				    <> when 'true' ->
					'false'
				  end
			      ( <_cor6> when 'true' ->
				    ( primop 'match_fail'
					  ({'function_clause',_cor6})
				      -| [{'function_name',{'-clear_breaks/2-fun-0-',1}}] )
				-| ['compiler_generated'] )
			    end
			-| [{'id',{0,0,'-clear_breaks/2-fun-0-'}}] )
		  in  %% Line 423
		      ( case _cor1 of
			  ( <( {'winInfo',_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_rec52,_cor53,_cor54}
			       -| ['compiler_generated'] )> when 'true' ->
				call 'lists':'filter'
				    (_cor7, _rec52)
			    -| ['compiler_generated'] )
			  ( <_cor55> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','winInfo'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	    end
	in  let <_cor12> =
		%% Line 425
		( fun (_cor10) ->
		      case _cor10 of
			<{'breakInfo',Point,_cor56,_cor57}> when 'true' ->
			    %% Line 426
			    apply 'delete_break'/2
				(_cor1, Point)
			( <_cor11> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor11})
				-| [{'function_name',{'-clear_breaks/2-fun-1-',1}}] )
			  -| ['compiler_generated'] )
		      end
		  -| [{'id',{0,0,'-clear_breaks/2-fun-1-'}}] )
	    in  do  %% Line 425
		    call 'lists':'foreach'
			(_cor12, _cor8)
		    %% Line 429
		    ( case _cor1 of
			( <( {'winInfo',_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_rec53,_cor72,_cor73}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <Remain> =
				  call 'erlang':'--'
				      (_rec53, _cor8)
			      in  %% Line 430
				  call 'erlang':'setelement'
				      (16, _cor1, Remain)
			  -| ['compiler_generated'] )
			( <_cor74> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','winInfo'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
'display'/2 =
    %% Line 444
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'winInfo',Win,_cor10,_cor11,_cor12,_cor13,_cor14,Sb,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24},Arg> when 'true' ->
	      let <_cor6> =
		  %% Line 445
		  case Arg of
		    %% Line 446
		    <'idle'> when 'true' ->
			[83|[116|[97|[116|[101|[58|[32|[117|[110|[105|[110|[116|[101|[114|[112|[114|[101|[116|[101|[100]]]]]]]]]]]]]]]]]]]]
		    %% Line 447
		    <{'exit',{Mod,Line},Reason}> when 'true' ->
			do  %% Line 448
			    call 'wxWindow':'raise'
				(Win)
			    %% Line 449
			    call 'dbg_wx_win':'to_string'
				([83|[116|[97|[116|[101|[58|[32|[69|[88|[73|[84|[69|[68|[32|[91|[126|[119|[46|[101|[114|[108|[47|[126|[119|[93|[44|[32|[82|[101|[97|[115|[111|[110|[58|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 450
																												      [Mod|[Line|[Reason|[]]]])
		    %% Line 451
		    <{'exit','null',Reason}> when 'true' ->
			do  %% Line 452
			    call 'wxWindow':'raise'
				(Win)
			    %% Line 453
			    call 'dbg_wx_win':'to_string'
				([83|[116|[97|[116|[101|[58|[32|[69|[88|[73|[84|[69|[68|[32|[91|[117|[110|[105|[110|[116|[101|[114|[112|[114|[101|[116|[101|[100|[93|[44|[32|[82|[101|[97|[115|[111|[110|[58|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 454
																																[Reason|[]])
		    %% Line 455
		    <{Level,'null',_X_Line}>
			when call 'erlang':'is_integer'
			      (Level) ->
			%% Line 456
			call 'dbg_wx_win':'to_string'
			    ([42|[42|[42|[32|[67|[97|[108|[108|[32|[108|[101|[118|[101|[108|[32|[35|[126|[119|[32|[40|[105|[110|[32|[110|[111|[110|[45|[105|[110|[116|[101|[114|[112|[114|[101|[116|[101|[100|[32|[99|[111|[100|[101|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 458
																																		      [Level|[]])
		    %% Line 459
		    <{Level,Mod,Line}>
			when call 'erlang':'is_integer'
			      (Level) ->
			%% Line 460
			call 'dbg_wx_win':'to_string'
			    ([42|[42|[42|[32|[67|[97|[108|[108|[32|[108|[101|[118|[101|[108|[32|[35|[126|[119|[32|[91|[126|[119|[46|[101|[114|[108|[47|[126|[119|[93]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 461
																								    [Level|[Mod|[Line|[]]]])
		    %% Line 462
		    <{Status,Mod,Line}> when 'true' ->
			let <_cor3> =
			    %% Line 463
			    case Status of
			      %% Line 464
			      <'wait'> when 'true' ->
				  'receive'
			      %% Line 465
			      <_cor25> when 'true' ->
				  Status
			    end
			in  %% Line 467
			    call 'dbg_wx_win':'to_string'
				([83|[116|[97|[116|[101|[58|[32|[126|[119|[32|[91|[126|[119|[46|[101|[114|[108|[47|[126|[119|[93]]]]]]]]]]]]]]]]]]]]], %% Line 468
																		       [_cor3|[Mod|[Line|[]]]])
		    %% Line 469
		    <{'running',Mod}> when 'true' ->
			%% Line 470
			call 'dbg_wx_win':'to_string'
			    ([83|[116|[97|[116|[101|[58|[32|[114|[117|[110|[110|[105|[110|[103|[32|[91|[126|[119|[46|[101|[114|[108|[93]]]]]]]]]]]]]]]]]]]]]]], [Mod|[]])
		    %% Line 471
		    <{'text',Text}> when 'true' ->
			call 'dbg_wx_win':'to_string'
			    (Text)
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor5})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 473
		  call 'wxStatusBar':'setStatusText'
		      (Sb, _cor6)
	  ( <_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8})
		  -| [{'function_name',{'display',2}}] )
	    -| ['compiler_generated'] )
	end
'is_shown'/2 =
    %% Line 485
    fun (_cor1,_cor0) ->
	%% Line 487
	'false'
'show_code'/3 =
    %% Line 489
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <WinInfo = {'winInfo',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,{_cor36,Ed},_cor37},Mod,Contents> when 'true' ->
	      do  %% Line 491
		  call 'dbg_wx_code':'load_code'
		      (Ed, Contents)
		  let <_cor13> =
		      %% Line 493
		      ( fun (_cor11) ->
			    %% Line 494
			    ( case _cor11 of
				( <( {'breakInfo',_rec55,_cor38,_cor39}
				     -| ['compiler_generated'] )> when 'true' ->
				      case _rec55 of
					%% Line 495
					<{Mod2,Line}>
					    when call 'erlang':'=:='
						  (Mod2,
						   Mod) ->
					    %% Line 497
					    call 'dbg_wx_code':'add_break_to_code'
						(Ed, Line, _cor38)
					%% Line 498
					<_X_Point> when 'true' ->
					    'ignore'
				      end
				  -| ['compiler_generated'] )
				( <_cor40> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','breakInfo'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			-| [{'id',{0,0,'-show_code/3-fun-0-'}}] )
		  in  do  %% Line 493
			  call 'lists':'foreach'
			      (_cor13, _cor35)
			  let <_rec58> = {%% Line 503
			       Mod,%% Line 503
				   Ed}
			  in  let <_cor16> =
				  %% Line 503
				  call 'erlang':'setelement'
				      (17, WinInfo, _rec58)
			      in  %% Line 503
				  call 'erlang':'setelement'
				      (4, _cor16, 'undefined')
	  ( <_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19,_cor18})
		  -| [{'function_name',{'show_code',3}}] )
	    -| ['compiler_generated'] )
	end
'show_no_code'/1 =
    %% Line 505
    fun (_cor0) ->
	case _cor0 of
	  <WinInfo = {'winInfo',_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,{_cor20,Ed},_cor21}> when 'true' ->
	      do  %% Line 506
		  call 'dbg_wx_code':'unload_code'
		      (Ed)
		  let <_rec60> = {%% Line 507
		       '$top',%% Line 507
			      Ed}
		  in  %% Line 507
		      call 'erlang':'setelement'
			  (17, WinInfo, _rec60)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'show_no_code',1}}] )
	    -| ['compiler_generated'] )
	end
'remove_code'/2 =
    %% Line 509
    fun (_cor1,_cor0) ->
	_cor1
'mark_line'/3 =
    %% Line 519
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <WinInfo = {'winInfo',_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,{_cor25,Ed},_cor26},Line,_X_How> when 'true' ->
	      do  %% Line 520
		  call 'dbg_wx_code':'mark_line'
		      (Ed, _cor22, Line)
		  %% Line 521
		  call 'erlang':'setelement'
		      (14, WinInfo, Line)
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7})
		  -| [{'function_name',{'mark_line',3}}] )
	    -| ['compiler_generated'] )
	end
'unmark_line'/1 =
    %% Line 523
    fun (_cor0) ->
	%% Line 524
	apply 'mark_line'/3
	    (_cor0, 0, 'false')
'select_line'/2 =
    %% Line 534
    fun (_cor1,_cor0) ->
	%% Line 535
	( case _cor1 of
	    ( <( {'winInfo',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_rec64,_cor27}
		 -| ['compiler_generated'] )> when 'true' ->
		  case _rec64 of
		    <{_X_Mod,Ed}> when 'true' ->
			let <Size> =
			    %% Line 539
			    call 'dbg_wx_code':'get_no_lines'
				(Ed)
			in  %% Line 540
			    case <> of
			      %% Line 541
			      <>
				  when call 'erlang':'=:='
					(_cor0,
					 0) ->
				  do  %% Line 542
				      call 'dbg_wx_code':'goto_line'
					  (Ed, 1)
				      %% Line 543
				      call 'erlang':'setelement'
					  (15, _cor1, 0)
			      %% Line 544
			      <>
				  when call 'erlang':'<'
					(_cor0,
					 Size) ->
				  do  %% Line 545
				      call 'dbg_wx_code':'goto_line'
					  (Ed, _cor0)
				      %% Line 546
				      call 'erlang':'setelement'
					  (15, _cor1, _cor0)
			      %% Line 547
			      <> when 'true' ->
				  _cor1
			    end
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor4})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor28> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','winInfo'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'selected_line'/1 =
    %% Line 551
    fun (_cor0) ->
	case _cor0 of
	  <{'winInfo',_cor3,_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,{_cor18,Ed},_cor19}> when 'true' ->
	      let <_cor1> =
		  %% Line 552
		  call 'wxStyledTextCtrl':'getCurrentLine'
		      (Ed)
	      in  %% Line 552
		  call 'erlang':'+'
		      (_cor1, 1)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'selected_line',1}}] )
	    -| ['compiler_generated'] )
	end
'eval_output'/3 =
    %% Line 559
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'winInfo',_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,{'sub',_cor16,_cor17,_cor18,Log,_cor19},_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26},Text,_X_Face> when 'true' ->
	      let <_cor3> =
		  %% Line 560
		  call 'dbg_wx_win':'to_string'
		      (Text)
	      in  do  %% Line 560
		      call 'wxTextCtrl':'appendText'
			  (Log, _cor3)
		      %% Line 561
		      'ok'
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'eval_output',3}}] )
	    -| ['compiler_generated'] )
	end
'update_bindings'/2 =
    %% Line 567
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'winInfo',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,{'sub',_cor24,_cor25,_cor26,BA,_cor27},_cor28,_cor29,_cor30,_cor31,_cor32,_cor33},Bs> when 'true' ->
	      do  %% Line 568
		  call 'wxListCtrl':'deleteAllItems'
		      (BA)
		  let <_cor11> =
		      %% Line 569
		      ( fun (_cor8,_cor7) ->
			    case <_cor8,_cor7> of
			      <{Var,Val},Row> when 'true' ->
				  do  %% Line 570
				      call 'wxListCtrl':'insertItem'
					  (BA, Row, [])
				      let <_cor2> =
					  %% Line 571
					  call 'dbg_wx_win':'to_string'
					      (Var)
				      in  do  %% Line 571
					      call 'wxListCtrl':'setItem'
						  (BA, Row, 0, _cor2)
					      let <_cor4> =
						  %% Line 572
						  case call 'erlang':'get'
							   ('strings') of
						    %% Line 573
						    <[]> when 'true' ->
							[126|[57|[57|[57|[57|[57|[57|[108|[80]]]]]]]]]
						    %% Line 574
						    <['str_on']> when 'true' ->
							[126|[57|[57|[57|[57|[57|[57|[116|[80]]]]]]]]]
						    ( <_cor3> when 'true' ->
							  primop 'match_fail'
							      ({'case_clause',_cor3})
						      -| ['compiler_generated'] )
						  end
					      in  let <_cor6> =
						      %% Line 576
						      call 'dbg_wx_win':'to_string'
							  (_cor4, [Val|[20]])
						  in  do  %% Line 576
							  call 'wxListCtrl':'setItem'
							      (BA, Row, 1, _cor6)
							  %% Line 577
							  call 'erlang':'+'
							      (Row, 1)
			      ( <_cor10,_cor9> when 'true' ->
				    ( primop 'match_fail'
					  ({'function_clause',_cor10,_cor9})
				      -| [{'function_name',{'-update_bindings/2-fun-0-',2}}] )
				-| ['compiler_generated'] )
			    end
			-| [{'id',{0,0,'-update_bindings/2-fun-0-'}}] )
		  in  do  %% Line 569
			  call 'wx':'foldl'
			      (_cor11, %% Line 578
				       0, %% Line 578
					  Bs)
			  do  %% Line 579
			      call 'erlang':'put'
				  ('bindings', Bs)
			      %% Line 580
			      'ok'
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'update_bindings',2}}] )
	    -| ['compiler_generated'] )
	end
'update_strings'/1 =
    %% Line 582
    fun (_cor0) ->
	do  %% Line 583
	    ( call 'erlang':'put'
		  ('strings', _cor0)
	      -| ['result_not_wanted'] )
	    %% Line 584
	    'ok'
'trace_output'/2 =
    %% Line 590
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'winInfo',_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,{'sub',_cor16,_cor17,_cor18,Log,_cor19},_cor20,_cor21,_cor22,_cor23,_cor24},Text> when 'true' ->
	      let <_cor2> =
		  %% Line 591
		  call 'dbg_wx_win':'to_string'
		      (Text)
	      in  do  %% Line 591
		      call 'wxTextCtrl':'appendText'
			  (Log, _cor2)
		      %% Line 592
		      'ok'
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'trace_output',2}}] )
	    -| ['compiler_generated'] )
	end
'handle_event'/2 =
    %% Line 615
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Ev = {'wx',_cor253,_cor254,_cor255,{'wxClose',_cor256}},_X_WinInfo> when 'true' ->
	      %% Line 616
	      'stopped'
	  %% Line 618
	  <{'wx',_cor257,_cor258,_cor259,{'wxSize',_cor260,Size,_cor261}},Wi0> when 'true' ->
	      %% Line 619
	      case Wi0 of
		<{'winInfo',_cor262,_cor263,_cor264,_cor265,_cor266,_cor267,_cor268,_cor269,_cor270,_cor271,_cor272,_cor273,_cor274,_cor275,_cor276,_cor277,_cor278}> when 'true' ->
		    let <_cor4> =
			call 'erlang':'setelement'
			    (3, Wi0, Size)
		    in  do  %% Line 620
			    apply 'resize'/1
				(_cor4)
			    %% Line 621
			    {'win',_cor4}
		( <_cor279> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','winInfo'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 623
	  <{'wx',_cor280,_cor281,_cor282,{'wxSash',_cor283,_cor284,_cor285,1}},_X_Wi> when 'true' ->
	      %% Line 624
	      'ignore'
	  %% Line 625
	  <{'wx',425,_cor286,_cor287,{'wxSash',_cor288,_cor289,{_X_X,_X_Y,_X_W,H},_cor290}},Wi> when 'true' ->
	      %% Line 626
	      case Wi of
		<{'winInfo',_cor291,_cor292,_cor293,{_cor294,Sizer},{Enable,InfoSzr},Code,_cor295,_cor296,_cor297,_cor298,_cor299,Trace,_cor300,_cor301,_cor302,_cor303,_cor304}> when 'true' ->
		    let <_cor10> =
			%% Line 628
			( case Enable of
			    ( <( 'true'
				 -| ['compiler_generated'] )> when 'true' ->
				  'true'
			      -| ['compiler_generated'] )
			    ( <( 'false'
				 -| ['compiler_generated'] )> when 'true' ->
				  ( case Trace of
				      ( <( {'sub',_rec68,_cor305,_cor306,_cor307,_cor308}
					   -| ['compiler_generated'] )> when 'true' ->
					    _rec68
					-| ['compiler_generated'] )
				      ( <_cor309> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','sub'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <_cor7> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {( 'badarg'
					      -| ['compiler_generated'] ),_cor7}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    in  %% Line 628
			case _cor10 of
			  %% Line 629
			  <'false'> when 'true' ->
			      %% Line 630
			      'ignore'
			  %% Line 631
			  <'true'> when 'true' ->
			      %% Line 632
			      ( case Code of
				  ( <( {'sub',_cor310,_rec69,_cor311,_cor312,_cor313}
				       -| ['compiler_generated'] )> when 'true' ->
					case call 'wxWindow':'getMinSize'
						 (_rec69) of
					  <{_cor315,CMH}> when 'true' ->
					      do  %% Line 633
						  case call 'erlang':'>'
							   (CMH, H) of
						    %% Line 634
						    <'true'> when 'true' ->
							call 'wxSashWindow':'setMinSize'
							    (_rec69, {500,H})
						    %% Line 635
						    <_cor321> when 'true' ->
							'ok'
						  end
						  %% Line 637
						  case call 'wxWindow':'getSize'
							   (_rec69) of
						    <{_cor327,CH}> when 'true' ->
							let <Change> =
							    %% Line 638
							    call 'erlang':'-'
								(CH, H)
							in  let <ChangeH> =
								%% Line 639
								( fun (_cor25) ->
								      %% Line 640
								      case call 'wxSizerItem':'getMinSize'
									       (_cor25) of
									<{ItemW,ItemH}> when 'true' ->
									    let <_cor23> =
										%% Line 641
										call 'erlang':'+'
										    (ItemH, Change)
									    in  let <_cor24> =
										    %% Line 641
										    call 'erlang':'max'
											(_cor23, -1)
										in  %% Line 641
										    call 'wxSizerItem':'setInitSize'
											(_cor25, ItemW, _cor24)
									( <_cor21> when 'true' ->
									      primop 'match_fail'
										  ({'badmatch',_cor21})
									  -| ['compiler_generated'] )
								      end
								  -| [{'id',{0,0,'-handle_event/2-fun-0-'}}] )
							    in  do  %% Line 643
								    case <> of
								      <>
									  when call 'erlang':'=:='
										(Enable,
										 'true') ->
									  %% Line 644
									  case call 'wxSizer':'getMinSize'
										   (InfoSzr) of
									    <{IW,IH}> when 'true' ->
										do  %% Line 645
										    ( letrec
											  'lc$^0'/1 =
											      fun (_cor32) ->
												  case _cor32 of
												    <[Child|_cor30]> when 'true' ->
													do  apply ChangeH
														(Child)
													    apply 'lc$^0'/1
														(_cor30)
												    <[]> when 'true' ->
													[]
												    ( <_cor32> when 'true' ->
													  ( primop 'match_fail'
														({'function_clause',_cor32})
													    -| [{'function_name',{'lc$^0',1}}] )
												      -| ['compiler_generated'] )
												  end
										      in  let <_cor31> =
											      call 'wxSizer':'getChildren'
												  (InfoSzr)
											  in  apply 'lc$^0'/1
												  (_cor31)
										      -| ['list_comprehension'] )
										    let <_cor35> =
											%% Line 646
											call 'erlang':'+'
											    (IH, Change)
										    in  do  %% Line 646
											    call 'wxSizer':'setMinSize'
												(InfoSzr, {IW,_cor35})
											    'ok'
									    ( <_cor28> when 'true' ->
										  primop 'match_fail'
										      ({'badmatch',_cor28})
									      -| ['compiler_generated'] )
									  end
								      %% Line 648
								      <>
									  when ( try
										  ( case <> of
										      ( <>
											    when ( call ( 'erlang'
												       -| ['compiler_generated'] ):( 'is_record'
																     -| ['compiler_generated'] )
												    (Trace,
												     ( 'sub'
												       -| ['compiler_generated'] ),
												     ( 6
												       -| ['compiler_generated'] ))
												-| ['compiler_generated'] ) ->
											    let <_cor40> =
												( call 'erlang':'element'
												      (2, Trace)
												  -| ['compiler_generated'] )
											    in  ( call 'erlang':'=:='
												      (_cor40, 'true')
												  -| ['compiler_generated'] )
											-| ['compiler_generated'] )
										      ( <> when 'true' ->
											    'false'
											-| ['compiler_generated'] )
										    end
										    -| ['compiler_generated'] )
									      of <Try> ->
										  Try
									      catch <T,R> ->
										  'false'
									      -| ['compiler_generated'] ) ->
									  %% Line 649
									  ( case Trace of
									      ( <( {'sub',_cor328,_rec72,_cor329,_cor330,_cor331}
										   -| ['compiler_generated'] )> when 'true' ->
										    case call 'wxWindow':'getMinSize'
											     (_rec72) of
										      <{TW,TH}> when 'true' ->
											  let <_cor45> =
											      %% Line 650
											      call 'erlang':'+'
												  (TH, Change)
											  in  do  %% Line 650
												  call 'wxWindow':'setMinSize'
												      (_rec72, {TW,_cor45})
												  'ok'
										      ( <_cor44> when 'true' ->
											    primop 'match_fail'
												({'badmatch',_cor44})
											-| ['compiler_generated'] )
										    end
										-| ['compiler_generated'] )
									      ( <_cor332> when 'true' ->
										    ( call ( 'erlang'
											     -| ['compiler_generated'] ):( 'error'
															   -| ['compiler_generated'] )
											  (( {'badrecord','sub'}
											     -| ['compiler_generated'] ))
										      -| ['compiler_generated'] )
										-| ['compiler_generated'] )
									    end
									    -| ['compiler_generated'] )
								      ( <> when 'true' ->
									    primop 'match_fail'
										('if_clause')
									-| ['compiler_generated'] )
								    end
								    do  %% Line 653
									call 'wxSizer':'layout'
									    (Sizer)
									%% Line 654
									'ignore'
						    ( <_cor19> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor19})
						      -| ['compiler_generated'] )
						  end
					  ( <_cor13> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_cor13})
					    -| ['compiler_generated'] )
					end
				    -| ['compiler_generated'] )
				  ( <_cor314> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','sub'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  ( <_cor48> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor48})
			    -| ['compiler_generated'] )
			end
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor6})
		  -| ['compiler_generated'] )
	      end
	  %% Line 657
	  <{'wx',426,_cor338,_cor339,{'wxSash',_cor340,_cor341,{_X_X,_X_Y,W,_X_H},_cor342}},Wi> when 'true' ->
	      %% Line 659
	      case Wi of
		<{'winInfo',_cor343,_cor344,_cor345,{_cor346,Sizer},{Enable,InfoSzr},_cor347,_cor348,_cor349,_cor350,{'sub',_cor351,EvalSzr,_cor352,_cor353,_cor354},_cor355,_cor356,_cor357,_cor358,_cor359,_cor360,_cor361}>
		    when call 'erlang':'=:='
			  (_cor351,
			   Enable) ->
		    %% Line 660
		    case Enable of
		      %% Line 661
		      <'false'> when 'true' ->
			  %% Line 662
			  'ignore'
		      %% Line 663
		      <'true'> when 'true' ->
			  %% Line 664
			  case call 'wxSizer':'getChildren'
				   (InfoSzr) of
			    <[Eval|[Bind|[]]]> when 'true' ->
				%% Line 665
				case call 'wxSizer':'getSize'
					 (InfoSzr) of
				  <{Tot,_cor362}> when 'true' ->
				      let <EvalWidth> =
					  %% Line 666
					  call 'erlang':'-'
					      (Tot, W)
				      in  let <Change> =
					      %% Line 668
					      ( fun (_cor55,_cor54) ->
						    %% Line 669
						    case call 'wxSizerItem':'getMinSize'
							     (_cor55) of
						      <{_X_EW,EH}> when 'true' ->
							  %% Line 670
							  call 'wxSizerItem':'setInitSize'
							      (_cor55, _cor54, EH)
						      ( <_cor53> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_cor53})
							-| ['compiler_generated'] )
						    end
						-| [{'id',{0,0,'-handle_event/2-fun-1-'}}] )
					  in  do  %% Line 673
						  apply Change
						      (Eval, EvalWidth)
						  do  %% Line 674
						      ( letrec
							    'lc$^1'/1 =
								fun (_cor62) ->
								    case _cor62 of
								      <[Kid|_cor60]> when 'true' ->
									  do  apply Change
										  (Kid, EvalWidth)
									      apply 'lc$^1'/1
										  (_cor60)
								      <[]> when 'true' ->
									  []
								      ( <_cor62> when 'true' ->
									    ( primop 'match_fail'
										  ({'function_clause',_cor62})
									      -| [{'function_name',{'lc$^1',1}}] )
									-| ['compiler_generated'] )
								    end
							in  let <_cor61> =
								call 'wxSizer':'getChildren'
								    (EvalSzr)
							    in  apply 'lc$^1'/1
								    (_cor61)
							-| ['list_comprehension'] )
						      do  %% Line 675
							  apply Change
							      (Bind, W)
							  do  %% Line 677
							      call 'wxSizerItem':'setProportion'
								  (Eval, 0)
							      do  %% Line 678
								  call 'wxSizer':'layout'
								      (InfoSzr)
								  do  %% Line 679
								      call 'wxSizer':'layout'
									  (Sizer)
								      do  %% Line 681
									  apply 'resize'/1
									      (Wi)
									  %% Line 682
									  'ignore'
				  ( <_cor51> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor51})
				    -| ['compiler_generated'] )
				end
			    ( <_cor50> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor50})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor65> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor65})
			-| ['compiler_generated'] )
		    end
		( <_cor49> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor49})
		  -| ['compiler_generated'] )
	      end
	  %% Line 685
	  <{'wx',427,_cor363,_cor364,{'wxSash',_cor365,_cor366,{_X_X,_X_Y,_X_W,H},_cor367}},Wi> when 'true' ->
	      %% Line 686
	      case Wi of
		<{'winInfo',_cor368,_cor369,_cor370,{_cor371,Sizer},{Enable,InfoSzr},Code,_cor372,_cor373,_cor374,_cor375,_cor376,Trace,_cor377,_cor378,_cor379,_cor380,_cor381}> when 'true' ->
		    %% Line 687
		    ( case Trace of
			( <( {'sub',_cor382,_rec74,_cor383,_cor384,_cor385}
			     -| ['compiler_generated'] )> when 'true' ->
			      case call 'wxWindow':'getSize'
				       (_rec74) of
				<{TW,TH}> when 'true' ->
				    let <Change> =
					%% Line 688
					call 'erlang':'-'
					    (TH, H)
				    in  %% Line 689
					case Enable of
					  %% Line 690
					  <'false'> when 'true' ->
					      %% Line 691
					      ( case Code of
						  ( <( {'sub',_cor387,_rec75,_cor388,_cor389,_cor390}
						       -| ['compiler_generated'] )> when 'true' ->
							case call 'wxWindow':'getSize'
								 (_rec75) of
							  <{_cor392,CH}> when 'true' ->
							      %% Line 692
							      case call 'wxWindow':'getMinSize'
								       (_rec75) of
								<{_cor398,CMH}> when 'true' ->
								    let <_cor77> =
									%% Line 693
									call 'erlang':'+'
									    (CH, Change)
								    in  do  %% Line 693
									    case call 'erlang':'>'
										     (CMH, _cor77) of
									      %% Line 694
									      <'true'> when 'true' ->
										  let <_cor78> =
										      call 'erlang':'+'
											  (CH, Change)
										  in  call 'wxSashWindow':'setMinSize'
											  (_rec75, {500,_cor78})
									      %% Line 695
									      <_cor404> when 'true' ->
										  'ok'
									    end
									    do  %% Line 697
										call 'wxWindow':'setMinSize'
										    (_rec74, {TW,H})
										do  %% Line 698
										    call 'wxSizer':'layout'
											(Sizer)
										    %% Line 699
										    'ignore'
								( <_cor76> when 'true' ->
								      primop 'match_fail'
									  ({'badmatch',_cor76})
								  -| ['compiler_generated'] )
							      end
							  ( <_cor73> when 'true' ->
								primop 'match_fail'
								    ({'badmatch',_cor73})
							    -| ['compiler_generated'] )
							end
						    -| ['compiler_generated'] )
						  ( <_cor391> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','sub'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
					  %% Line 700
					  <'true'> when 'true' ->
					      let <ChangeH> =
						  %% Line 701
						  ( fun (_cor88) ->
							%% Line 702
							case call 'wxSizerItem':'getMinSize'
								 (_cor88) of
							  <{ItemW,ItemH}> when 'true' ->
							      let <_cor86> =
								  %% Line 703
								  call 'erlang':'+'
								      (ItemH, Change)
							      in  let <_cor87> =
								      %% Line 703
								      call 'erlang':'max'
									  (_cor86, -1)
								  in  %% Line 703
								      call 'wxSizerItem':'setInitSize'
									  (_cor88, ItemW, _cor87)
							  ( <_cor84> when 'true' ->
								primop 'match_fail'
								    ({'badmatch',_cor84})
							    -| ['compiler_generated'] )
							end
						    -| [{'id',{0,0,'-handle_event/2-fun-2-'}}] )
					      in  %% Line 705
						  case call 'wxSizer':'getMinSize'
							   (InfoSzr) of
						    <{IW,IH}> when 'true' ->
							do  %% Line 706
							    ( letrec
								  'lc$^2'/1 =
								      fun (_cor95) ->
									  case _cor95 of
									    <[Child|_cor93]> when 'true' ->
										do  apply ChangeH
											(Child)
										    apply 'lc$^2'/1
											(_cor93)
									    <[]> when 'true' ->
										[]
									    ( <_cor95> when 'true' ->
										  ( primop 'match_fail'
											({'function_clause',_cor95})
										    -| [{'function_name',{'lc$^2',1}}] )
									      -| ['compiler_generated'] )
									  end
							      in  let <_cor94> =
								      call 'wxSizer':'getChildren'
									  (InfoSzr)
								  in  apply 'lc$^2'/1
									  (_cor94)
							      -| ['list_comprehension'] )
							    let <Wanted> =
								%% Line 707
								call 'erlang':'+'
								    (IH, Change)
							    in  do  %% Line 708
								    call 'wxSizer':'setMinSize'
									(InfoSzr, {IW,Wanted})
								    %% Line 709
								    case call 'wxSizer':'getMinSize'
									     (InfoSzr) of
								      <{_cor410,RH}> when 'true' ->
									  do  %% Line 710
									      case <> of
										%% Line 711
										<>
										    when call 'erlang':'>'
											  (RH,
											   Wanted) ->
										    %% Line 712
										    ( case Code of
											( <( {'sub',_cor411,_rec79,_cor412,_cor413,_cor414}
											     -| ['compiler_generated'] )> when 'true' ->
											      case call 'wxWindow':'getSize'
												       (_rec79) of
												<{_cor416,CH}> when 'true' ->
												    %% Line 713
												    case call 'wxWindow':'getMinSize'
													     (_rec79) of
												      <{_cor422,CMH}> when 'true' ->
													  let <_cor106> =
													      %% Line 714
													      call 'erlang':'-'
														  (RH, Wanted)
													  in  let <CC> =
														  %% Line 714
														  call 'erlang':'-'
														      (CH, _cor106)
													      in  do  %% Line 715
														      case call 'erlang':'>'
															       (CMH, CC) of
															%% Line 716
															<'true'>
															    when call 'erlang':'>'
																  (CC,
																   50) ->
															    do  %% Line 717
																call 'wxWindow':'setMinSize'
																    (_rec74, {TW,H})
																%% Line 718
																call 'wxSashWindow':'setMinSize'
																    (_rec79, {500,CC})
															%% Line 719
															<_cor433>
															    when call 'erlang':'<'
																  (CC,
																   50) ->
															    'ok'
															%% Line 721
															<_cor434> when 'true' ->
															    %% Line 722
															    call 'wxWindow':'setMinSize'
																(_rec74, {TW,H})
														      end
														      'ok'
												      ( <_cor105> when 'true' ->
													    primop 'match_fail'
														({'badmatch',_cor105})
													-| ['compiler_generated'] )
												    end
												( <_cor102> when 'true' ->
												      primop 'match_fail'
													  ({'badmatch',_cor102})
												  -| ['compiler_generated'] )
											      end
											  -| ['compiler_generated'] )
											( <_cor415> when 'true' ->
											      ( call ( 'erlang'
												       -| ['compiler_generated'] ):( 'error'
																     -| ['compiler_generated'] )
												    (( {'badrecord','sub'}
												       -| ['compiler_generated'] ))
												-| ['compiler_generated'] )
											  -| ['compiler_generated'] )
										      end
										      -| ['compiler_generated'] )
										%% Line 725
										<> when 'true' ->
										    %% Line 726
										    call 'wxWindow':'setMinSize'
											(_rec74, {TW,H})
									      end
									      do  %% Line 728
										  call 'wxSizer':'layout'
										      (Sizer)
										  %% Line 729
										  'ignore'
								      ( <_cor99> when 'true' ->
									    primop 'match_fail'
										({'badmatch',_cor99})
									-| ['compiler_generated'] )
								    end
						    ( <_cor91> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor91})
						      -| ['compiler_generated'] )
						  end
					  ( <_cor118> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_cor118})
					    -| ['compiler_generated'] )
					end
				( <_cor69> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor69})
				  -| ['compiler_generated'] )
			      end
			  -| ['compiler_generated'] )
			( <_cor386> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','sub'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor66> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor66})
		  -| ['compiler_generated'] )
	      end
	  %% Line 733
	  <_X_Ev = {'wx',_cor445,_cor446,_cor447,{'wxKey',_cor448,_cor449,_cor450,Key,'true',_cor451,_cor452,_cor453,_cor454,_cor455,_cor456,_cor457}},_X_WinInfo> when 'true' ->
	      %% Line 735
	      case <> of
		%% Line 736
		<>
		    when try
			  let <_cor119> =
			      call 'erlang':'/='
				  (Key, 315)
			  in  let <_cor120> =
				  call 'erlang':'/='
				      (Key, 317)
			      in  let <_cor121> =
				      call 'erlang':'/='
					  (Key, 13)
				  in  let <_cor122> =
					  call 'erlang':'and'
					      (_cor120, _cor121)
				      in  call 'erlang':'and'
					      (_cor119, _cor122)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    %% Line 737
		    try
			let <_cor124> =
			    %% Line 738
			    call 'erlang':'+'
				(Key, 32)
			in  let <_cor125> =
				%% Line 738
				call 'erlang':'list_to_atom'
				    ([_cor124|[]])
			    in  %% Line 738
				{'shortcut',_cor125}
		    of <_cor126> ->
			_cor126
		    catch <_cor129,_cor128,_cor127> ->
			%% Line 739
			'ignore'
		%% Line 741
		<> when 'true' ->
		    %% Line 742
		    'ignore'
	      end
	  %% Line 744
	  <{'wx',_cor461,_cor462,{'dbg_ui_winman',Win},%% Line 745
						       {'wxCommand','command_menu_selected',_cor463,_cor464,_cor465}},%% Line 745
														      _X_WinInfo> when 'true' ->
	      do  %% Line 746
		  call 'dbg_wx_winman':'raise'
		      (Win)
		  %% Line 747
		  'ignore'
	  %% Line 749
	  <{'wx',_cor466,_cor467,{'break',Point,'status'},%% Line 750
							  {'wxCommand','command_menu_selected',_cor468,_cor469,_cor470}},%% Line 751
															 WinInfo> when 'true' ->
	      %% Line 753
	      ( case WinInfo of
		  ( <( {'winInfo',_cor471,_cor472,_cor473,_cor474,_cor475,_cor476,_cor477,_cor478,_cor479,_cor480,_cor481,_cor482,_cor483,_cor484,_rec85,_cor485,_cor486}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'lists':'keysearch'
				 (Point, 2, _rec85) of
			  <{'value',BreakInfo}> when 'true' ->
			      %% Line 755
			      case BreakInfo of
				<{'breakInfo',_cor488,_cor489,{'break',_cor490,Smi,_cor491,_cor492,_cor493}}> when 'true' ->
				    %% Line 757
				    case call 'wxMenuItem':'getText'
					     (Smi) of
				      %% Line 758
				      <[69|[110|[97|[98|[108|[101]]]]]]> when 'true' ->
					  {'break',Point,{'status','active'}}
				      %% Line 759
				      <[68|[105|[115|[97|[98|[108|[101]]]]]]]> when 'true' ->
					  {'break',Point,{'status','inactive'}}
				      ( <_cor134> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor134})
					-| ['compiler_generated'] )
				    end
				( <_cor133> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor133})
				  -| ['compiler_generated'] )
			      end
			  ( <_cor132> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor132})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor487> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','winInfo'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 762
	  <{'wx',_cor494,_cor495,Data,_X_Cmd = %% Line 763
					       {'wxCommand','command_menu_selected',_cor496,_cor497,_cor498}},%% Line 764
													      _X_WinInfo> when 'true' ->
	      %% Line 766
	      Data
	  %% Line 769
	  <{'wx',_cor499,_cor500,_cor501,{'wxStyledText','stc_doubleclick',_cor502,_cor503,_cor504,_cor505,_cor506,_cor507,_cor508,_cor509,_cor510,_cor511,_cor512,_cor513,_cor514,_cor515,_cor516,_cor517,_cor518,_cor519,_cor520,_cor521}},WinInfo = %% Line 770
																														       {'winInfo',_cor522,_cor523,_cor524,_cor525,_cor526,_cor527,_cor528,_cor529,_cor530,_cor531,_cor532,_cor533,_cor534,_cor535,_cor536,{Mod,Ed},_cor537}> when 'true' ->
	      let <Line> =
		  %% Line 771
		  call 'wxStyledTextCtrl':'getCurrentLine'
		      (Ed)
	      in  let <_cor136> =
		      %% Line 772
		      call 'erlang':'+'
			  (Line, 1)
		  in  let <Point> = {%% Line 772
			   Mod,_cor136}
		      in  %% Line 773
			  case call 'lists':'keymember'
				   (Point, 2, _cor536) of
			    %% Line 774
			    <'true'> when 'true' ->
				{'break',Point,'delete'}
			    %% Line 775
			    <'false'> when 'true' ->
				{'break',Point,'add'}
			    ( <_cor140> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor140})
			      -| ['compiler_generated'] )
			  end
	  %% Line 779
	  <{'wx',414,_cor555,_cor556,{'wxCommand',_cor557,Str,_cor558,_cor559}},WinInfo> when 'true' ->
	      %% Line 780
	      try
		  let <Line> =
		      %% Line 781
		      call 'erlang':'list_to_integer'
			  (Str)
		  in  %% Line 782
		      {'gotoline',Line}
	      of <_cor142> ->
		  _cor142
	      catch <_cor145,_cor144,_cor143> ->
		  do  %% Line 785
		      apply 'display'/2
			  (WinInfo, {'text',[78|[111|[116|[32|[97|[32|[108|[105|[110|[101|[32|[110|[117|[109|[98|[101|[114]]]]]]]]]]]]]]]]]})
		      %% Line 786
		      'ignore'
	  %% Line 788
	  <{'wx',413,_cor563,_cor564,{'wxFocus',_cor565}},Wi> when 'true' ->
	      %% Line 789
	      case Wi of
		<{'winInfo',_cor566,_cor567,_cor568,_cor569,_cor570,_cor571,_cor572,_cor573,_cor574,_cor575,_cor576,_cor577,_cor578,_cor579,_cor580,_cor581,_cor582}> when 'true' ->
		    let <_cor148> =
			call 'erlang':'setelement'
			    (4, Wi, 'undefined')
		    in  {'win',_cor148}
		( <_cor583> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','winInfo'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 790
	  <{'wx',413,_cor584,_cor585,{'wxCommand','command_text_enter',Str,_cor586,_cor587}},Wi = %% Line 791
												  {'winInfo',_cor588,_cor589,Find,_cor590,_cor591,Code,_cor592,{'sub',_cor593,_cor594,{'sa',_cor595,_cor596,{NextO,_cor597,CaseO}},_cor598,_cor599},_cor600,_cor601,_cor602,_cor603,_cor604,_cor605,_cor606,_cor607,_cor608}>
	      when %% Line 792
		call 'erlang':'=/='
		    (Find,
		     'undefined') ->
	      let <_cor150> =
		  %% Line 793
		  call 'wxRadioButton':'getValue'
		      (NextO)
	      in  let <_cor149> =
		      %% Line 793
		      call 'wx_misc':'getKeyState'
			  (306)
		  in  let <Dir> =
			  %% Line 793
			  call 'erlang':'xor'
			      (_cor150, _cor149)
		      in  let <Case> =
			      %% Line 794
			      call 'wxCheckBox':'getValue'
				  (CaseO)
			  in  let <_cor173> =
				  %% Line 795
				  case <> of
				    <>
					when ( try
						( case <> of
						    ( <>
							  when ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'is_record'
												   -| ['compiler_generated'] )
								  (Find,
								   ( 'find'
								     -| ['compiler_generated'] ),
								   ( 4
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] ) ->
							  let <_cor157> =
							      ( call 'erlang':'element'
								    (4, Find)
								-| ['compiler_generated'] )
							  in  let <_cor158> =
								  ( call 'erlang':'=:='
									(_cor157, 'true')
								    -| ['compiler_generated'] )
							      in  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( 'and'
													 -| ['compiler_generated'] )
									(_cor158, Dir)
								    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						    ( <> when 'true' ->
							  'false'
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    of <Try> ->
						Try
					    catch <T,R> ->
						'false'
					    -| ['compiler_generated'] ) ->
					%% Line 796
					( case Code of
					    ( <( {'sub',_cor609,_cor610,_cor611,_rec88,_cor612}
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'wxStyledTextCtrl':'getAnchor'
						      (_rec88)
					      -| ['compiler_generated'] )
					    ( <_cor613> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','sub'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    %% Line 797
				    <>
					when ( try
						( case <> of
						    ( <>
							  when ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'is_record'
												   -| ['compiler_generated'] )
								  (Find,
								   ( 'find'
								     -| ['compiler_generated'] ),
								   ( 4
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] ) ->
							  let <_cor167> =
							      ( call 'erlang':'element'
								    (4, Find)
								-| ['compiler_generated'] )
							  in  ( call 'erlang':'=:='
								    (_cor167, 'true')
								-| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						    ( <> when 'true' ->
							  'false'
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    of <Try> ->
						Try
					    catch <T,R> ->
						'false'
					    -| ['compiler_generated'] ) ->
					%% Line 798
					( case Code of
					    ( <( {'sub',_cor614,_cor615,_cor616,_rec89,_cor617}
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'wxStyledTextCtrl':'getCurrentPos'
						      (_rec89)
					      -| ['compiler_generated'] )
					    ( <_cor618> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','sub'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    %% Line 799
				    <>
					when Dir ->
					%% Line 800
					0
				    %% Line 801
				    <> when 'true' ->
					%% Line 802
					( case Code of
					    ( <( {'sub',_cor619,_cor620,_cor621,_rec90,_cor622}
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'wxStyledTextCtrl':'getLength'
						      (_rec90)
					      -| ['compiler_generated'] )
					    ( <_cor623> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','sub'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				  end
			      in  %% Line 804
				  ( case Code of
				      ( <( {'sub',_cor624,_cor625,_cor626,_rec91,_cor627}
					   -| ['compiler_generated'] )> when 'true' ->
					    do  call 'dbg_wx_code':'goto_pos'
						    (_rec91, _cor173)
						%% Line 805
						case call 'dbg_wx_code':'find'
							 (_rec91, Str, Case, Dir) of
						  %% Line 806
						  <'true'> when 'true' ->
						      do  %% Line 807
							  apply 'display'/2
							      (Wi, {'text',[]})
							  %% Line 808
							  case Find of
							    <{'find',_cor634,_cor635,_cor636}> when 'true' ->
								let <_cor181> =
								    call 'erlang':'setelement'
									(4, Find, 'true')
								in  let <_cor185> =
									call 'erlang':'setelement'
									    (4, Wi, _cor181)
								    in  {'win',_cor185}
							    ( <_cor637> when 'true' ->
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( 'error'
													 -| ['compiler_generated'] )
									(( {'badrecord','find'}
									   -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							  end
						  %% Line 809
						  <'false'> when 'true' ->
						      do  %% Line 810
							  apply 'display'/2
							      (Wi, {'text',[78|[111|[116|[32|[102|[111|[117|[110|[100|[32|[40|[72|[105|[116|[32|[69|[110|[116|[101|[114|[32|[116|[111|[32|[119|[114|[97|[112|[32|[115|[101|[97|[114|[99|[104|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]})
							  %% Line 811
							  case Find of
							    <{'find',_cor656,_cor657,_cor658}> when 'true' ->
								let <_cor188> =
								    call 'erlang':'setelement'
									(4, Find, 'false')
								in  let <_cor192> =
									call 'erlang':'setelement'
									    (4, Wi, _cor188)
								    in  {'win',_cor192}
							    ( <_cor659> when 'true' ->
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( 'error'
													 -| ['compiler_generated'] )
									(( {'badrecord','find'}
									   -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							  end
						  ( <_cor193> when 'true' ->
							primop 'match_fail'
							    ({'case_clause',_cor193})
						    -| ['compiler_generated'] )
						end
					-| ['compiler_generated'] )
				      ( <_cor628> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','sub'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
	  %% Line 813
	  <{'wx',413,_cor678,_cor679,{'wxCommand',_cor680,[],_cor681,_cor682}},Wi = %% Line 814
										    {'winInfo',_cor683,_cor684,_cor685,_cor686,_cor687,Code,_cor688,_cor689,_cor690,_cor691,_cor692,_cor693,_cor694,_cor695,_cor696,_cor697,_cor698}> when 'true' ->
	      %% Line 816
	      ( case Code of
		  ( <( {'sub',_cor699,_cor700,_cor701,_rec99,_cor702}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Pos> =
			    call 'dbg_wx_code':'current_pos'
				(_rec99)
			in  do  %% Line 817
				call 'dbg_wx_code':'goto_pos'
				    (_rec99, Pos)
				let <_cor201> =
				    %% Line 818
				    call 'erlang':'setelement'
					(4, Wi, 'undefined')
				in  %% Line 818
				    {'win',_cor201}
		    -| ['compiler_generated'] )
		  ( <_cor703> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','sub'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 819
	  <{'wx',413,_cor727,_cor728,{'wxCommand',_cor729,Str,_cor730,_cor731}},Wi = %% Line 820
										     {'winInfo',_cor732,_cor733,Find,_cor734,_cor735,Code,_cor736,%% Line 821
																		  {'sub',_cor737,_cor738,{'sa',_cor739,_cor740,{NextO,_cor741,CaseO}},_cor742,_cor743},_cor744,_cor745,_cor746,_cor747,_cor748,_cor749,_cor750,_cor751,_cor752}> when 'true' ->
	      let <Dir> =
		  %% Line 822
		  call 'wxRadioButton':'getValue'
		      (NextO)
	      in  let <Case> =
		      %% Line 823
		      call 'wxCheckBox':'getValue'
			  (CaseO)
		  in  let <_cor220> =
			  %% Line 825
			  case Find of
			    %% Line 826
			    <'undefined'> when 'true' ->
				%% Line 827
				( case Code of
				    ( <( {'sub',_cor753,_cor754,_cor755,_rec102,_cor756}
					 -| ['compiler_generated'] )> when 'true' ->
					  let <Pos> =
					      call 'dbg_wx_code':'current_pos'
						  (_rec102)
					  in  let <_cor207> =
						  %% Line 828
						  call 'erlang':'length'
						      (Str)
					      in  %% Line 828
						  {'find',Pos,_cor207,'undefined'}
				      -| ['compiler_generated'] )
				    ( <_cor757> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','sub'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    %% Line 829
			    <{'find',_cor758,Old,_cor759}>
				when try
				      let <_cor208> =
					  call 'erlang':'length'
					      (Str)
				      in  call 'erlang':'<'
					      (Old, _cor208)
				  of <Try> ->
				      Try
				  catch <T,R> ->
				      'false' ->
				let <_rec103> =
				    %% Line 830
				    call 'erlang':'length'
					(Str)
				in  %% Line 830
				    call 'erlang':'setelement'
					(3, Find, _rec103)
			    %% Line 831
			    <_cor764> when 'true' ->
				%% Line 832
				( case Code of
				    ( <( {'sub',_cor765,_cor766,_cor767,_rec105,_cor768}
					 -| ['compiler_generated'] )> when 'true' ->
					  ( case Find of
					      ( <( {'find',_rec106,_cor770,_cor771}
						   -| ['compiler_generated'] )> when 'true' ->
						    do  call 'dbg_wx_code':'goto_pos'
							    (_rec105, _rec106)
							let <_rec107> =
							    %% Line 833
							    call 'erlang':'length'
								(Str)
							in  %% Line 833
							    call 'erlang':'setelement'
								(3, Find, _rec107)
						-| ['compiler_generated'] )
					      ( <_cor772> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','find'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    ( <_cor769> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','sub'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			  end
		      in  %% Line 835
			  ( case Code of
			      ( <( {'sub',_cor777,_cor778,_cor779,_rec109,_cor780}
				   -| ['compiler_generated'] )> when 'true' ->
				    case call 'dbg_wx_code':'find'
					     (_rec109, Str, Case, Dir) of
				      %% Line 836
				      <'true'> when 'true' ->
					  do  %% Line 837
					      apply 'display'/2
						  (Wi, {'text',[]})
					      %% Line 838
					      case _cor220 of
						<{'find',_cor782,_cor783,_cor784}> when 'true' ->
						    let <_cor226> =
							call 'erlang':'setelement'
							    (4, _cor220, 'true')
						    in  let <_cor230> =
							    call 'erlang':'setelement'
								(4, Wi, _cor226)
							in  {'win',_cor230}
						( <_cor785> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','find'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
				      %% Line 839
				      <'false'> when 'true' ->
					  do  %% Line 840
					      apply 'display'/2
						  (Wi, {'text',[78|[111|[116|[32|[102|[111|[117|[110|[100|[32|[40|[72|[105|[116|[32|[69|[110|[116|[101|[114|[32|[116|[111|[32|[119|[114|[97|[112|[32|[115|[101|[97|[114|[99|[104|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]})
					      %% Line 841
					      case _cor220 of
						<{'find',_cor804,_cor805,_cor806}> when 'true' ->
						    let <_cor233> =
							call 'erlang':'setelement'
							    (4, _cor220, 'false')
						    in  let <_cor237> =
							    call 'erlang':'setelement'
								(4, Wi, _cor233)
							in  {'win',_cor237}
						( <_cor807> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','find'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
				      ( <_cor238> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor238})
					-| ['compiler_generated'] )
				    end
				-| ['compiler_generated'] )
			      ( <_cor781> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','sub'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
	  %% Line 845
	  <{'wx',ID,_cor826,_cor827,{'wxCommand','command_button_clicked',_cor828,_cor829,_cor830}},_X_Wi> when 'true' ->
	      let <_cor239> =
		  %% Line 846
		  apply 'buttons'/0
		      ()
	      in  %% Line 846
		  case call 'lists':'keyfind'
			   (ID, 2, _cor239) of
		    <{Button,_cor831}> when 'true' ->
			%% Line 847
			Button
		    ( <_cor240> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor240})
		      -| ['compiler_generated'] )
		  end
	  %% Line 850
	  <{'wx',410,_cor832,_cor833,{'wxCommand','command_text_enter',_cor834,_cor835,_cor836}},Wi = %% Line 851
												      {'winInfo',_cor837,_cor838,_cor839,_cor840,_cor841,_cor842,_cor843,_cor844,_cor845,{'sub',_cor846,_cor847,TC,_cor848,_cor849},_cor850,_cor851,_cor852,_cor853,_cor854,_cor855,_cor856}> when 'true' ->
	      %% Line 852
	      case call 'wxTextCtrl':'getValue'
		       (TC) of
		%% Line 853
		<[10]> when 'true' ->
		    do  %% Line 854
			apply 'eval_output'/3
			    (Wi, [10], 'normal')
			%% Line 855
			'ignore'
		%% Line 856
		<Cmd> when 'true' ->
		    do  %% Line 857
			apply 'eval_output'/3
			    (Wi, [62|[Cmd|[10]]], 'normal')
			do  %% Line 858
			    call 'wxTextCtrl':'setValue'
				(TC, [])
			    %% Line 859
			    {'user_command',Cmd}
	      end
	  %% Line 863
	  <{'wx',_cor857,_cor858,_cor859,{'wxList','command_list_item_selected',_cor860,_cor861,Row,_cor862,_cor863}},Wi> when 'true' ->
	      let <Bs> =
		  %% Line 864
		  call 'erlang':'get'
		      ('bindings')
	      in  let <_cor243> =
		      %% Line 865
		      call 'erlang':'+'
			  (Row, 1)
		  in  %% Line 865
		      case call 'lists':'nth'
			       (_cor243, Bs) of
			<{Var,Val}> when 'true' ->
			    let <_cor246> =
				%% Line 866
				case call 'erlang':'get'
					 ('strings') of
				  %% Line 867
				  <[]> when 'true' ->
				      call 'io_lib':'format'
					  ([60|[32|[126|[115|[32|[61|[32|[126|[108|[112|[126|[110]]]]]]]]]]]], [Var|[Val|[]]])
				  %% Line 868
				  <['str_on']> when 'true' ->
				      call 'io_lib':'format'
					  ([60|[32|[126|[115|[32|[61|[32|[126|[116|[112|[126|[110]]]]]]]]]]]], [Var|[Val|[]]])
				  ( <_cor245> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor245})
				    -| ['compiler_generated'] )
				end
			    in  do  %% Line 870
				    apply 'eval_output'/3
					(Wi, _cor246, 'bold')
				    %% Line 871
				    'ignore'
			( <_cor244> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor244})
			  -| ['compiler_generated'] )
		      end
	  %% Line 872
	  <{'wx',_cor864,_cor865,_cor866,{'wxList','command_list_item_activated',_cor867,_cor868,Row,_cor869,_cor870}},_X_Wi> when 'true' ->
	      let <Bs> =
		  %% Line 873
		  call 'erlang':'get'
		      ('bindings')
	      in  let <_cor249> =
		      %% Line 874
		      call 'erlang':'+'
			  (Row, 1)
		  in  let <Binding> =
			  %% Line 874
			  call 'lists':'nth'
			      (_cor249, Bs)
		      in  %% Line 875
			  {'edit',Binding}
	  %% Line 877
	  <_X_GSEvent,_X_WinInfo> when 'true' ->
	      %% Line 879
	      'ignore'
	end
'resize'/1 =
    %% Line 885
    fun (_cor0) ->
	case _cor0 of
	  <{'winInfo',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,Bind,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38}> when 'true' ->
	      %% Line 887
	      case <> of
		%% Line 888
		<>
		    when ( try
			    ( case <> of
				( <>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_record'
									       -| ['compiler_generated'] )
					      (Bind,
					       ( 'sub'
						 -| ['compiler_generated'] ),
					       ( 6
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] ) ->
				      let <_cor5> =
					  ( call 'erlang':'element'
						(2, Bind)
					    -| ['compiler_generated'] )
				      in  ( call 'erlang':'=:='
						(_cor5, 'false')
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    %% Line 889
		    'ok'
		%% Line 890
		<>
		    when ( try
			    ( case <> of
				( <>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_record'
									       -| ['compiler_generated'] )
					      (Bind,
					       ( 'sub'
						 -| ['compiler_generated'] ),
					       ( 6
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] ) ->
				      let <_cor11> =
					  ( call 'erlang':'element'
						(2, Bind)
					    -| ['compiler_generated'] )
				      in  ( call 'erlang':'=:='
						(_cor11, 'true')
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    %% Line 891
		    ( case Bind of
			( <( {'sub',_cor39,_cor40,_cor41,_rec116,_cor42}
			     -| ['compiler_generated'] )> when 'true' ->
			      case call 'wxWindow':'getClientSize'
				       (_rec116) of
				<{EW,_cor44}> when 'true' ->
				    let <B0W> =
					%% Line 892
					call 'wxListCtrl':'getColumnWidth'
					    (_rec116, 0)
				    in  let <_cor19> =
					    %% Line 893
					    call 'erlang':'-'
						(EW, B0W)
					in  do  %% Line 893
						call 'wxListCtrl':'setColumnWidth'
						    (_rec116, 1, _cor19)
						%% Line 894
						'ok'
				( <_cor15> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor15})
				  -| ['compiler_generated'] )
			      end
			  -| ['compiler_generated'] )
			( <_cor43> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','sub'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <> when 'true' ->
		      primop 'match_fail'
			  ('if_clause')
		  -| ['compiler_generated'] )
	      end
	  ( <_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22})
		  -| [{'function_name',{'resize',1}}] )
	    -| ['compiler_generated'] )
	end
'code_area'/1 =
    %% Line 902
    fun (_cor0) ->
	let <CodeWin> =
	    %% Line 903
	    call 'wxSashWindow':'new'
		(_cor0, [{'id',425}|[{'size',{700,400}}|[{'style',192}]]])
	in  let <Code> =
		%% Line 906
		call 'dbg_wx_code':'code_area'
		    (CodeWin)
	    in  do  %% Line 907
		    call 'wxSashWindow':'setSashVisible'
			(CodeWin, 2, 'true')
		    do  %% Line 908
			call 'wxWindow':'setMinSize'
			    (CodeWin, {600,400})
			%% Line 909
			{'sub','true',CodeWin,'undefined',Code,'Code Area'}
'buttons'/0 =
    %% Line 914
    fun () ->
	%% Line 915
	[{'Step',401}|[{'Next',402}|[{'Continue',403}|[{'Finish',404}|[{'Where',405}|[{'Up',406}|[{'Down',407}]]]]]]]
'is_button'/1 =
    %% Line 919
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 920
	    apply 'buttons'/0
		()
	in  %% Line 920
	    case call 'lists':'keyfind'
		     (_cor0, 1, _cor1) of
	      %% Line 921
	      <{_cor4,Button}>
		  when call 'erlang':'=:='
			(_cor4,
			 _cor0) ->
		  {'true',Button}
	      %% Line 922
	      <'false'> when 'true' ->
		  'false'
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor2})
		-| ['compiler_generated'] )
	    end
'button_area'/1 =
    %% Line 925
    fun (_cor0) ->
	let <Sz> =
	    %% Line 926
	    call 'wxBoxSizer':'new'
		(4)
	in  let <_cor8> =
		%% Line 927
		( fun (_cor6) ->
		      case _cor6 of
			<{Name,Button}> when 'true' ->
			    let <_cor3> =
				%% Line 929
				call 'dbg_wx_win':'to_string'
				    (Name)
			    in  let <B> =
				    %% Line 928
				    call 'wxButton':'new'
					(_cor0, Button, %% Line 929
							[{'label',_cor3}|[]])
				in  let <Id> =
					%% Line 930
					call 'wxWindow':'getId'
					    (B)
				    in  do  %% Line 931
					    call 'wxSizer':'add'
						(Sz, B, [])
					    %% Line 932
					    call 'wxButton':'connect'
						(B, 'command_button_clicked', [{'id',Id}|[]])
			( <_cor7> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor7})
				-| [{'function_name',{'-button_area/1-fun-0-',1}}] )
			  -| ['compiler_generated'] )
		      end
		  -| [{'id',{0,0,'-button_area/1-fun-0-'}}] )
	    in  let <_cor2> =
		    %% Line 933
		    apply 'buttons'/0
			()
		in  do  %% Line 927
			call 'wx':'foreach'
			    (_cor8, _cor2)
			%% Line 934
			{'sub','true',Sz,'undefined','undefined','Button Area'}
'search_area'/1 =
    %% Line 938
    fun (_cor0) ->
	let <HSz> =
	    %% Line 939
	    call 'wxBoxSizer':'new'
		(4)
	in  let <_cor3> =
		%% Line 940
		call 'wxStaticText':'new'
		    (_cor0, -1, [70|[105|[110|[100|[58]]]]])
	    in  do  %% Line 940
		    call 'wxSizer':'add'
			(HSz, _cor3, %% Line 941
				     [{'flag',2048}])
		    let <TC1> =
			%% Line 942
			call 'wxTextCtrl':'new'
			    (_cor0, 413, [{'style',1024}])
		    in  do  %% Line 943
			    call 'wxSizer':'add'
				(HSz, TC1, [{'proportion',3}|[{'flag',8192}]])
			    let <Nbtn> =
				%% Line 944
				call 'wxRadioButton':'new'
				    (_cor0, -1, [78|[101|[120|[116]]]])
			    in  do  %% Line 945
				    call 'wxRadioButton':'setValue'
					(Nbtn, 'true')
				    do  %% Line 946
					call 'wxSizer':'add'
					    (HSz, Nbtn, [{'flag',2048}])
					let <Pbtn> =
					    %% Line 947
					    call 'wxRadioButton':'new'
						(_cor0, -1, [80|[114|[101|[118|[105|[111|[117|[115]]]]]]]])
					in  do  %% Line 948
						call 'wxSizer':'add'
						    (HSz, Pbtn, [{'flag',2048}])
						let <Cbtn> =
						    %% Line 949
						    call 'wxCheckBox':'new'
							(_cor0, -1, [77|[97|[116|[99|[104|[32|[67|[97|[115|[101]]]]]]]]]])
						in  do  %% Line 950
							call 'wxSizer':'add'
							    (HSz, Cbtn, [{'flag',2048}])
							do  %% Line 951
							    call 'wxSizer':'add'
								(HSz, 15, 15, [{'proportion',1}|[{'flag',8192}]])
							    let <_cor12> =
								%% Line 952
								call 'wxStaticText':'new'
								    (_cor0, -1, [71|[111|[116|[111|[32|[76|[105|[110|[101|[58]]]]]]]]]])
							    in  do  %% Line 952
								    call 'wxSizer':'add'
									(HSz, _cor12, %% Line 953
										      [{'flag',2048}])
								    let <TC2> =
									%% Line 954
									call 'wxTextCtrl':'new'
									    (_cor0, 414, [{'style',1024}])
								    in  do  %% Line 955
									    call 'wxSizer':'add'
										(HSz, TC2, [{'proportion',0}|[{'flag',8192}]])
									    do  %% Line 956
										call 'wxTextCtrl':'connect'
										    (TC1, 'command_text_updated')
										do  %% Line 957
										    call 'wxTextCtrl':'connect'
											(TC1, 'command_text_enter')
										    do  %% Line 958
											call 'wxTextCtrl':'connect'
											    (TC1, 'kill_focus')
											do  %% Line 959
											    call 'wxTextCtrl':'connect'
												(TC2, 'command_text_enter')
											    do  %% Line 960
												call 'wxWindow':'connect'
												    (_cor0, 'command_button_clicked')
												%% Line 962
												{'sub','true',HSz,%% Line 963
														  {'sa',TC1,TC2,{Nbtn,Pbtn,Cbtn}},'undefined','Search Area'}
'eval_area'/1 =
    %% Line 967
    fun (_cor0) ->
	let <VSz> =
	    %% Line 968
	    call 'wxBoxSizer':'new'
		(8)
	in  let <HSz> =
		%% Line 969
		call 'wxBoxSizer':'new'
		    (4)
	    in  let <_cor4> =
		    %% Line 971
		    call 'wxStaticText':'new'
			(_cor0, -1, [69|[118|[97|[108|[117|[97|[116|[111|[114|[58]]]]]]]]]])
		in  do  %% Line 971
			call 'wxSizer':'add'
			    (HSz, _cor4, %% Line 972
					 [{'flag',2048}])
			let <TC> =
			    %% Line 973
			    call 'wxTextCtrl':'new'
				(_cor0, 410, [{'style',1024}])
			in  do  %% Line 974
				call 'wxSizer':'add'
				    (HSz, TC, [{'proportion',1}|[{'flag',8192}]])
				do  %% Line 975
				    call 'wxSizer':'add'
					(VSz, HSz, [{'flag',8192}])
				    let <TL> =
					%% Line 976
					call 'wxTextCtrl':'new'
					    (_cor0, 411, [{'style',1073741872}])
				    in  do  %% Line 978
					    call 'wxSizer':'add'
						(VSz, TL, [{'proportion',5}|[{'flag',8192}]])
					    do  %% Line 980
						call 'wxTextCtrl':'connect'
						    (TC, 'command_text_enter')
						%% Line 981
						{'sub','true',VSz,TC,TL,'Evaluator Area'}
'bind_area'/1 =
    %% Line 985
    fun (_cor0) ->
	let <Win> =
	    %% Line 987
	    call 'wxSashWindow':'new'
		(_cor0, [{'id',426}|[{'style',4194496}]])
	in  do  %% Line 988
		call 'wxSashWindow':'setSashVisible'
		    (Win, 3, 'true')
		let <BA> =
		    %% Line 990
		    call 'wxListCtrl':'new'
			(Win, [{'style',8224}])
		in  let <LI> =
			%% Line 991
			call 'wxListItem':'new'
			    ()
		    in  do  %% Line 993
			    call 'wxListItem':'setText'
				(LI, [78|[97|[109|[101]]]])
			    do  %% Line 994
				call 'wxListItem':'setAlign'
				    (LI, 0)
				do  %% Line 995
				    call 'wxListCtrl':'insertColumn'
					(BA, 0, LI)
				    do  %% Line 997
					call 'wxListItem':'setText'
					    (LI, [86|[97|[108|[117|[101]]]]])
					do  %% Line 998
					    call 'wxListCtrl':'insertColumn'
						(BA, 1, LI)
					    do  %% Line 999
						call 'wxListItem':'destroy'
						    (LI)
						do  %% Line 1001
						    call 'wxListCtrl':'setColumnWidth'
							(BA, 0, 100)
						    do  %% Line 1002
							call 'wxListCtrl':'setColumnWidth'
							    (BA, 1, 150)
							do  %% Line 1003
							    call 'wxListCtrl':'connect'
								(BA, 'command_list_item_selected')
							    do  %% Line 1004
								call 'wxListCtrl':'connect'
								    (BA, 'command_list_item_activated')
								%% Line 1006
								{'sub','true',Win,'undefined',BA,'Bindings Area'}
'trace_area'/1 =
    %% Line 1010
    fun (_cor0) ->
	let <Win> =
	    %% Line 1012
	    call 'wxSashWindow':'new'
		(_cor0, [{'id',427}|[{'size',{700,100}}|[{'style',4194496}]]])
	in  do  %% Line 1014
		call 'wxSashWindow':'setSashVisible'
		    (Win, 0, 'true')
		do  %% Line 1015
		    call 'wxWindow':'setMinSize'
			(Win, {500,100})
		    let <TC> =
			%% Line 1016
			call 'wxTextCtrl':'new'
			    (Win, -1, [{'style',48}])
		    in  %% Line 1017
			{'sub','true',Win,'undefined',TC,'Trace Area'}
'helpwin'/2 =
    %% Line 1023
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Type,WinInfo = {'winInfo',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,Sg = {'sub',_cor28,_cor29,Sa,_cor30,_cor31},_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40}> when 'true' ->
	      let <_cor12> =
		  %% Line 1024
		  case _cor28 of
		    %% Line 1025
		    <'false'> when 'true' ->
			let <_cor6> =
			    call 'erlang':'setelement'
				(2, Sg, 'true')
			in  let <_cor10> =
				call 'erlang':'setelement'
				    (9, WinInfo, _cor6)
			    in  apply 'configure'/1
				    (_cor10)
		    %% Line 1026
		    <'true'> when 'true' ->
			WinInfo
		    ( <_cor11> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor11})
		      -| ['compiler_generated'] )
		  end
	      in  do  %% Line 1028
		      case Type of
			%% Line 1029
			<'gotoline'> when 'true' ->
			    ( case Sa of
				( <( {'sa',_cor70,_rec123,_cor71}
				     -| ['compiler_generated'] )> when 'true' ->
				      call 'wxWindow':'setFocus'
					  (_rec123)
				  -| ['compiler_generated'] )
				( <_cor72> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','sa'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			%% Line 1030
			<'search'> when 'true' ->
			    ( case Sa of
				( <( {'sa',_rec124,_cor73,_cor74}
				     -| ['compiler_generated'] )> when 'true' ->
				      call 'wxWindow':'setFocus'
					  (_rec124)
				  -| ['compiler_generated'] )
				( <_cor75> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','sa'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			( <_cor18> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor18})
			  -| ['compiler_generated'] )
		      end
		      _cor12
	  ( <_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19})
		  -| [{'function_name',{'helpwin',2}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('dbg_wx_trace_win')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('dbg_wx_trace_win', _cor0)
end