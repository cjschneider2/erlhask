module 'erl_prettypr' ['best'/1,
		       'best'/2,
		       'format'/1,
		       'format'/2,
		       'get_ctxt_hook'/1,
		       'get_ctxt_linewidth'/1,
		       'get_ctxt_paperwidth'/1,
		       'get_ctxt_precedence'/1,
		       'get_ctxt_user'/1,
		       'layout'/1,
		       'layout'/2,
		       'module_info'/0,
		       'module_info'/1,
		       'set_ctxt_hook'/2,
		       'set_ctxt_linewidth'/2,
		       'set_ctxt_paperwidth'/2,
		       'set_ctxt_precedence'/2,
		       'set_ctxt_user'/2]
    attributes [%% Line 49
		'type' =
		    %% Line 49
		    [{'hook',{'type',49,'union',[{'atom',49,'none'}|[{'type',50,'fun',[{'type',50,'product',[{'remote_type',50,[{'atom',50,'erl_syntax'}|[{'atom',50,'syntaxTree'}|[[]]]]}|[{'var',50,'_'}|[{'var',50,'_'}]]]}|[{'remote_type',50,[{'atom',50,'prettypr'}|[{'atom',50,'document'}|[[]]]]}]]}]]},[]}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{'clause_t',{'type',51,'union',[{'atom',51,'case_expr'}|[{'atom',51,'cond_expr'}|[{'atom',51,'fun_expr'}|[{'atom',52,'if_expr'}|[{'atom',52,'receive_expr'}|[{'atom',52,'try_expr'}|[{'type',53,'tuple',[{'atom',53,'function'}|[{'remote_type',53,[{'atom',53,'prettypr'}|[{'atom',53,'document'}|[[]]]]}]]}|[{'type',54,'tuple',[{'atom',54,'rule'}|[{'remote_type',54,[{'atom',54,'prettypr'}|[{'atom',54,'document'}|[[]]]]}]]}]]]]]]]]},[]}],
		%% Line 56
		'type' =
		    %% Line 56
		    [{{'record','ctxt'},[{'typed_record_field',{'record_field',56,{'atom',56,'prec'},{'integer',56,0}},{'type',56,'integer',[]}}|[{'typed_record_field',{'record_field',57,{'atom',57,'sub_indent'},{'integer',57,2}},{'type',57,'non_neg_integer',[]}}|[{'typed_record_field',{'record_field',58,{'atom',58,'break_indent'},{'integer',58,4}},{'type',58,'non_neg_integer',[]}}|[{'typed_record_field',{'record_field',59,{'atom',59,'clause'},{'atom',59,'undefined'}},{'type',59,'union',[{'type',59,'clause_t',[]}|[{'atom',59,'undefined'}]]}}|[{'typed_record_field',{'record_field',60,{'atom',60,'hook'},{'atom',60,'none'}},{'type',60,'hook',[]}}|[{'typed_record_field',{'record_field',61,{'atom',61,'paper'},{'integer',61,80}},{'type',61,'integer',[]}}|[{'typed_record_field',{'record_field',62,{'atom',62,'ribbon'},{'integer',62,56}},{'type',62,'integer',[]}}|[{'typed_record_field',{'record_field',63,{'atom',63,'user'},{'atom',63,'undefined'}},{'type',63,'term',[]}}|[{'typed_record_field',{'record_field',64,{'atom',64,'encoding'},{'call',64,{'remote',64,{'atom',64,'epp'},{'atom',64,'default_encoding'}},[]}},{'remote_type',64,[{'atom',64,'epp'}|[{'atom',64,'source_encoding'}|[[]]]]}}]]]]]]]]],[]}],
		%% Line 66
		'type' =
		    %% Line 66
		    [{'context',{'type',66,'record',[{'atom',66,'ctxt'}]},[]}],
		%% Line 77
		'spec' =
		    %% Line 77
		    [{{'get_ctxt_precedence',1},[{'type',77,'fun',[{'type',77,'product',[{'type',77,'context',[]}]}|[{'type',77,'integer',[]}]]}]}],
		%% Line 90
		'spec' =
		    %% Line 90
		    [{{'set_ctxt_precedence',2},[{'type',90,'fun',[{'type',90,'product',[{'type',90,'context',[]}|[{'type',90,'integer',[]}]]}|[{'type',90,'context',[]}]]}]}],
		%% Line 105
		'spec' =
		    %% Line 105
		    [{{'get_ctxt_paperwidth',1},[{'type',105,'fun',[{'type',105,'product',[{'type',105,'context',[]}]}|[{'type',105,'integer',[]}]]}]}],
		%% Line 120
		'spec' =
		    %% Line 120
		    [{{'set_ctxt_paperwidth',2},[{'type',120,'fun',[{'type',120,'product',[{'type',120,'context',[]}|[{'type',120,'integer',[]}]]}|[{'type',120,'context',[]}]]}]}],
		%% Line 129
		'spec' =
		    %% Line 129
		    [{{'get_ctxt_linewidth',1},[{'type',129,'fun',[{'type',129,'product',[{'type',129,'context',[]}]}|[{'type',129,'integer',[]}]]}]}],
		%% Line 144
		'spec' =
		    %% Line 144
		    [{{'set_ctxt_linewidth',2},[{'type',144,'fun',[{'type',144,'product',[{'type',144,'context',[]}|[{'type',144,'integer',[]}]]}|[{'type',144,'context',[]}]]}]}],
		%% Line 153
		'spec' =
		    %% Line 153
		    [{{'get_ctxt_hook',1},[{'type',153,'fun',[{'type',153,'product',[{'type',153,'context',[]}]}|[{'type',153,'hook',[]}]]}]}],
		%% Line 162
		'spec' =
		    %% Line 162
		    [{{'set_ctxt_hook',2},[{'type',162,'fun',[{'type',162,'product',[{'type',162,'context',[]}|[{'type',162,'hook',[]}]]}|[{'type',162,'context',[]}]]}]}],
		%% Line 171
		'spec' =
		    %% Line 171
		    [{{'get_ctxt_user',1},[{'type',171,'fun',[{'type',171,'product',[{'type',171,'context',[]}]}|[{'type',171,'term',[]}]]}]}],
		%% Line 180
		'spec' =
		    %% Line 180
		    [{{'set_ctxt_user',2},[{'type',180,'fun',[{'type',180,'product',[{'type',180,'context',[]}|[{'type',180,'term',[]}]]}|[{'type',180,'context',[]}]]}]}],
		%% Line 190
		'spec' =
		    %% Line 190
		    [{{'format',1},[{'type',190,'fun',[{'type',190,'product',[{'remote_type',190,[{'atom',190,'erl_syntax'}|[{'atom',190,'syntaxTree'}|[[]]]]}]}|[{'type',190,'string',[]}]]}]}],
		%% Line 271
		'spec' =
		    %% Line 271
		    [{{'format',2},[{'type',271,'fun',[{'type',271,'product',[{'remote_type',271,[{'atom',271,'erl_syntax'}|[{'atom',271,'syntaxTree'}|[[]]]]}|[{'type',271,'list',[{'type',271,'term',[]}]}]]}|[{'type',271,'string',[]}]]}]}],
		%% Line 283
		'spec' =
		    %% Line 283
		    [{{'best',1},[{'type',283,'fun',[{'type',283,'product',[{'remote_type',283,[{'atom',283,'erl_syntax'}|[{'atom',283,'syntaxTree'}|[[]]]]}]}|[{'type',283,'union',[{'atom',283,'empty'}|[{'remote_type',283,[{'atom',283,'prettypr'}|[{'atom',283,'document'}|[[]]]]}]]}]]}]}],
		%% Line 304
		'spec' =
		    %% Line 304
		    [{{'best',2},[{'type',304,'fun',[{'type',304,'product',[{'remote_type',304,[{'atom',304,'erl_syntax'}|[{'atom',304,'syntaxTree'}|[[]]]]}|[{'type',304,'list',[{'type',304,'term',[]}]}]]}|[{'type',304,'union',[{'atom',304,'empty'}|[{'remote_type',304,[{'atom',304,'prettypr'}|[{'atom',304,'document'}|[[]]]]}]]}]]}]}],
		%% Line 316
		'spec' =
		    %% Line 316
		    [{{'layout',1},[{'type',316,'fun',[{'type',316,'product',[{'remote_type',316,[{'atom',316,'erl_syntax'}|[{'atom',316,'syntaxTree'}|[[]]]]}]}|[{'remote_type',316,[{'atom',316,'prettypr'}|[{'atom',316,'document'}|[[]]]]}]]}]}],
		%% Line 342
		'spec' =
		    %% Line 342
		    [{{'layout',2},[{'type',342,'fun',[{'type',342,'product',[{'remote_type',342,[{'atom',342,'erl_syntax'}|[{'atom',342,'syntaxTree'}|[[]]]]}|[{'type',342,'list',[{'type',342,'term',[]}]}]]}|[{'remote_type',342,[{'atom',342,'prettypr'}|[{'atom',342,'document'}|[[]]]]}]]}]}]]
'get_ctxt_precedence'/1 =
    %% Line 79
    fun (_cor0) ->
	%% Line 80
	( case _cor0 of
	    ( <( {'ctxt',_rec0,_cor3,_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10}
		 -| ['compiler_generated'] )> when 'true' ->
		  _rec0
	      -| ['compiler_generated'] )
	    ( <_cor11> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','ctxt'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'set_ctxt_precedence'/2 =
    %% Line 92
    fun (_cor1,_cor0) ->
	%% Line 93
	apply 'set_prec'/2
	    (_cor1, _cor0)
'set_prec'/2 =
    %% Line 95
    fun (_cor1,_cor0) ->
	%% Line 96
	case _cor1 of
	  <{'ctxt',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14}> when 'true' ->
	      call 'erlang':'setelement'
		  (2, _cor1, _cor0)
	  ( <_cor15> when 'true' ->
		( call ( 'erlang'
			 -| ['compiler_generated'] ):( 'error'
						       -| ['compiler_generated'] )
		      (( {'badrecord','ctxt'}
			 -| ['compiler_generated'] ))
		  -| ['compiler_generated'] )
	    -| ['compiler_generated'] )
	end
'reset_prec'/1 =
    %% Line 98
    fun (_cor0) ->
	%% Line 99
	apply 'set_prec'/2
	    (_cor0, 0)
'get_ctxt_paperwidth'/1 =
    %% Line 107
    fun (_cor0) ->
	%% Line 108
	( case _cor0 of
	    ( <( {'ctxt',_cor3,_cor4,_cor5,_cor6,_cor7,_rec2,_cor8,_cor9,_cor10}
		 -| ['compiler_generated'] )> when 'true' ->
		  _rec2
	      -| ['compiler_generated'] )
	    ( <_cor11> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','ctxt'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'set_ctxt_paperwidth'/2 =
    %% Line 122
    fun (_cor1,_cor0) ->
	%% Line 123
	case _cor1 of
	  <{'ctxt',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14}> when 'true' ->
	      call 'erlang':'setelement'
		  (7, _cor1, _cor0)
	  ( <_cor15> when 'true' ->
		( call ( 'erlang'
			 -| ['compiler_generated'] ):( 'error'
						       -| ['compiler_generated'] )
		      (( {'badrecord','ctxt'}
			 -| ['compiler_generated'] ))
		  -| ['compiler_generated'] )
	    -| ['compiler_generated'] )
	end
'get_ctxt_linewidth'/1 =
    %% Line 131
    fun (_cor0) ->
	%% Line 132
	( case _cor0 of
	    ( <( {'ctxt',_cor3,_cor4,_cor5,_cor6,_cor7,_cor8,_rec4,_cor9,_cor10}
		 -| ['compiler_generated'] )> when 'true' ->
		  _rec4
	      -| ['compiler_generated'] )
	    ( <_cor11> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','ctxt'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'set_ctxt_linewidth'/2 =
    %% Line 146
    fun (_cor1,_cor0) ->
	%% Line 147
	case _cor1 of
	  <{'ctxt',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14}> when 'true' ->
	      call 'erlang':'setelement'
		  (8, _cor1, _cor0)
	  ( <_cor15> when 'true' ->
		( call ( 'erlang'
			 -| ['compiler_generated'] ):( 'error'
						       -| ['compiler_generated'] )
		      (( {'badrecord','ctxt'}
			 -| ['compiler_generated'] ))
		  -| ['compiler_generated'] )
	    -| ['compiler_generated'] )
	end
'get_ctxt_hook'/1 =
    %% Line 155
    fun (_cor0) ->
	%% Line 156
	( case _cor0 of
	    ( <( {'ctxt',_cor3,_cor4,_cor5,_cor6,_rec6,_cor7,_cor8,_cor9,_cor10}
		 -| ['compiler_generated'] )> when 'true' ->
		  _rec6
	      -| ['compiler_generated'] )
	    ( <_cor11> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','ctxt'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'set_ctxt_hook'/2 =
    %% Line 164
    fun (_cor1,_cor0) ->
	%% Line 165
	case _cor1 of
	  <{'ctxt',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14}> when 'true' ->
	      call 'erlang':'setelement'
		  (6, _cor1, _cor0)
	  ( <_cor15> when 'true' ->
		( call ( 'erlang'
			 -| ['compiler_generated'] ):( 'error'
						       -| ['compiler_generated'] )
		      (( {'badrecord','ctxt'}
			 -| ['compiler_generated'] ))
		  -| ['compiler_generated'] )
	    -| ['compiler_generated'] )
	end
'get_ctxt_user'/1 =
    %% Line 173
    fun (_cor0) ->
	%% Line 174
	( case _cor0 of
	    ( <( {'ctxt',_cor3,_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_rec8,_cor10}
		 -| ['compiler_generated'] )> when 'true' ->
		  _rec8
	      -| ['compiler_generated'] )
	    ( <_cor11> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','ctxt'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'set_ctxt_user'/2 =
    %% Line 182
    fun (_cor1,_cor0) ->
	%% Line 183
	case _cor1 of
	  <{'ctxt',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14}> when 'true' ->
	      call 'erlang':'setelement'
		  (9, _cor1, _cor0)
	  ( <_cor15> when 'true' ->
		( call ( 'erlang'
			 -| ['compiler_generated'] ):( 'error'
						       -| ['compiler_generated'] )
		      (( {'badrecord','ctxt'}
			 -| ['compiler_generated'] ))
		  -| ['compiler_generated'] )
	    -| ['compiler_generated'] )
	end
'format'/1 =
    %% Line 192
    fun (_cor0) ->
	%% Line 193
	apply 'format'/2
	    (_cor0, [])
'format'/2 =
    %% Line 273
    fun (_cor1,_cor0) ->
	let <W> =
	    %% Line 274
	    call 'proplists':'get_value'
		('paper', _cor0, 80)
	in  let <L> =
		%% Line 275
		call 'proplists':'get_value'
		    ('ribbon', _cor0, 56)
	    in  let <_cor4> =
		    %% Line 276
		    apply 'layout'/2
			(_cor1, _cor0)
		in  %% Line 276
		    call 'prettypr':'format'
			(_cor4, W, L)
'best'/1 =
    %% Line 285
    fun (_cor0) ->
	%% Line 286
	apply 'best'/2
	    (_cor0, [])
'best'/2 =
    %% Line 306
    fun (_cor1,_cor0) ->
	let <W> =
	    %% Line 307
	    call 'proplists':'get_value'
		('paper', _cor0, 80)
	in  let <L> =
		%% Line 308
		call 'proplists':'get_value'
		    ('ribbon', _cor0, 56)
	    in  let <_cor4> =
		    %% Line 309
		    apply 'layout'/2
			(_cor1, _cor0)
		in  %% Line 309
		    call 'prettypr':'best'
			(_cor4, W, L)
'layout'/1 =
    %% Line 318
    fun (_cor0) ->
	%% Line 319
	apply 'layout'/2
	    (_cor0, [])
'layout'/2 =
    %% Line 344
    fun (_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 346
	    call 'proplists':'get_value'
		('hook', _cor0, 'none')
	in  let <_cor6> =
		%% Line 347
		call 'proplists':'get_value'
		    ('paper', _cor0, 80)
	    in  let <_cor5> =
		    %% Line 348
		    call 'proplists':'get_value'
			('ribbon', _cor0, 56)
		in  let <_cor4> =
			%% Line 349
			call 'proplists':'get_value'
			    ('user', _cor0)
		    in  let <_cor2> =
			    %% Line 351
			    call 'epp':'default_encoding'
				()
			in  let <_cor3> =
				%% Line 350
				call 'proplists':'get_value'
				    ('encoding', _cor0, _cor2)
			    in  %% Line 345
				apply 'lay'/2
				    (_cor1, %% Line 346
					    {'ctxt',0,2,4,'undefined',_cor7,_cor6,_cor5,_cor4,_cor3})
'lay'/2 =
    %% Line 353
    fun (_cor1,_cor0) ->
	%% Line 354
	case call 'erl_syntax':'get_ann'
		 (_cor1) of
	  %% Line 355
	  <[]> when 'true' ->
	      %% Line 357
	      apply 'lay_1'/2
		  (_cor1, _cor0)
	  %% Line 358
	  <_X_As> when 'true' ->
	      %% Line 359
	      ( case _cor0 of
		  ( <( {'ctxt',_cor8,_cor9,_cor10,_cor11,_rec10,_cor12,_cor13,_cor14,_cor15}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec10 of
			  %% Line 360
			  <'none'> when 'true' ->
			      %% Line 361
			      apply 'lay_1'/2
				  (_cor1, _cor0)
			  %% Line 362
			  <Hook> when 'true' ->
			      %% Line 363
			      apply Hook
				  (_cor1, _cor0, ( 'lay_1'/2
						   -| [{'id',{0,0,'-lay/2-fun-0-'}}] ))
			end
		    -| ['compiler_generated'] )
		  ( <_cor16> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','ctxt'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'lay_1'/2 =
    %% Line 369
    fun (_cor1,_cor0) ->
	%% Line 370
	case call 'erl_syntax':'has_comments'
		 (_cor1) of
	  %% Line 371
	  <'true'> when 'true' ->
	      let <D1> =
		  %% Line 372
		  apply 'lay_2'/2
		      (_cor1, _cor0)
	      in  let <_cor3> =
		      %% Line 373
		      call 'erl_syntax':'get_postcomments'
			  (_cor1)
		  in  let <D2> =
			  %% Line 373
			  apply 'lay_postcomments'/2
			      (_cor3, %% Line 374
				      D1)
		      in  let <_cor5> =
			      %% Line 375
			      call 'erl_syntax':'get_precomments'
				  (_cor1)
			  in  %% Line 375
			      apply 'lay_precomments'/2
				  (_cor5, D2)
	  %% Line 376
	  <'false'> when 'true' ->
	      %% Line 377
	      apply 'lay_2'/2
		  (_cor1, _cor0)
	  ( <_cor6> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor6})
	    -| ['compiler_generated'] )
	end
'lay_precomments'/2 =
    %% Line 382
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],D> when 'true' ->
	      %% Line 383
	      D
	  %% Line 384
	  <Cs,D> when 'true' ->
	      let <_cor4> =
		  %% Line 385
		  apply 'stack_comments'/2
		      (Cs, 'false')
	      in  let <_cor5> =
		      %% Line 385
		      call 'prettypr':'break'
			  (_cor4)
		  in  let <_cor6> =
			  %% Line 385
			  call 'prettypr':'floating'
			      (_cor5, -1, -1)
		      in  %% Line 385
			  call 'prettypr':'above'
			      (_cor6, D)
	end
'lay_postcomments'/2 =
    %% Line 389
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],D> when 'true' ->
	      %% Line 390
	      D
	  %% Line 391
	  <Cs,D> when 'true' ->
	      let <_cor2> =
		  %% Line 392
		  apply 'stack_comments'/2
		      (Cs, 'true')
	      in  let <_cor3> =
		      %% Line 392
		      call 'prettypr':'break'
			  (_cor2)
		  in  let <_cor4> =
			  %% Line 392
			  call 'prettypr':'floating'
			      (_cor3, 1, 0)
		      in  %% Line 392
			  call 'prettypr':'beside'
			      (D, _cor4)
	end
'stack_comments'/2 =
    %% Line 397
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[C|Cs],Pad> when 'true' ->
	      let <_cor2> =
		  %% Line 398
		  call 'erl_syntax':'comment_text'
		      (C)
	      in  let <D> =
		      %% Line 398
		      apply 'stack_comment_lines'/1
			  (_cor2)
		  in  let <_cor10> =
			  %% Line 399
			  case Pad of
			    %% Line 400
			    <'true'> when 'true' ->
				let <_cor5> =
				    %% Line 401
				    case call 'erl_syntax':'comment_padding'
					     (C) of
				      %% Line 402
				      <'none'> when 'true' ->
					  %% Line 403
					  2
				      %% Line 404
				      <P1> when 'true' ->
					  %% Line 405
					  P1
				    end
				in  let <_cor7> =
					%% Line 407
					apply 'spaces'/1
					    (_cor5)
				    in  let <_cor8> =
					    %% Line 407
					    call 'prettypr':'text'
						(_cor7)
					in  %% Line 407
					    call 'prettypr':'beside'
						(_cor8, D)
			    %% Line 408
			    <'false'> when 'true' ->
				%% Line 409
				D
			    ( <_cor9> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor9})
			      -| ['compiler_generated'] )
			  end
		      in  %% Line 411
			  case Cs of
			    %% Line 412
			    <[]> when 'true' ->
				_cor10
			    %% Line 414
			    <_cor16> when 'true' ->
				let <_cor12> =
				    %% Line 415
				    apply 'stack_comments'/2
					(Cs, Pad)
				in  %% Line 415
				    call 'prettypr':'above'
					(_cor10, _cor12)
			  end
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'stack_comments',2}}] )
	    -| ['compiler_generated'] )
	end
'stack_comment_lines'/1 =
    %% Line 421
    fun (_cor0) ->
	case _cor0 of
	  <[S|Ss]> when 'true' ->
	      let <_cor1> =
		  %% Line 422
		  apply 'add_comment_prefix'/1
		      (S)
	      in  let <D> =
		      %% Line 422
		      call 'prettypr':'text'
			  (_cor1)
		  in  %% Line 423
		      case Ss of
			%% Line 424
			<[]> when 'true' ->
			    %% Line 425
			    D
			%% Line 426
			<_cor6> when 'true' ->
			    let <_cor3> =
				%% Line 427
				apply 'stack_comment_lines'/1
				    (Ss)
			    in  %% Line 427
				call 'prettypr':'above'
				    (D, _cor3)
		      end
	  %% Line 429
	  <[]> when 'true' ->
	      %% Line 430
	      call 'prettypr':'empty'
		  ()
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5})
		  -| [{'function_name',{'stack_comment_lines',1}}] )
	    -| ['compiler_generated'] )
	end
'add_comment_prefix'/1 =
    %% Line 432
    fun (_cor0) ->
	%% Line 433
	[37|_cor0]
'lay_2'/2 =
    %% Line 437
    fun (_cor1,_cor0) ->
	%% Line 438
	case call 'erl_syntax':'type'
		 (_cor1) of
	  %% Line 441
	  <'variable'> when 'true' ->
	      let <_cor2> =
		  %% Line 442
		  call 'erl_syntax':'variable_literal'
		      (_cor1)
	      in  %% Line 442
		  call 'prettypr':'text'
		      (_cor2)
	  %% Line 444
	  <'atom'> when 'true' ->
	      let <_cor3> =
		  %% Line 445
		  call 'erl_syntax':'atom_literal'
		      (_cor1)
	      in  %% Line 445
		  call 'prettypr':'text'
		      (_cor3)
	  %% Line 447
	  <'integer'> when 'true' ->
	      let <_cor4> =
		  %% Line 448
		  call 'erl_syntax':'integer_literal'
		      (_cor1)
	      in  %% Line 448
		  call 'prettypr':'text'
		      (_cor4)
	  %% Line 450
	  <'float'> when 'true' ->
	      let <_cor5> =
		  %% Line 451
		  call 'erl_syntax':'float_literal'
		      (_cor1)
	      in  let <_cor6> =
		      %% Line 451
		      apply 'tidy_float'/1
			  (_cor5)
		  in  %% Line 451
		      call 'prettypr':'text'
			  (_cor6)
	  %% Line 453
	  <'char'> when 'true' ->
	      %% Line 454
	      ( case _cor0 of
		  ( <( {'ctxt',_cor566,_cor567,_cor568,_cor569,_cor570,_cor571,_cor572,_cor573,_rec11}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor9> =
			    call 'erl_syntax':'char_literal'
				(_cor1, _rec11)
			in  call 'prettypr':'text'
				(_cor9)
		    -| ['compiler_generated'] )
		  ( <_cor574> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','ctxt'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 456
	  <'string'> when 'true' ->
	      %% Line 457
	      ( case _cor0 of
		  ( <( {'ctxt',_cor575,_cor576,_cor577,_cor578,_cor579,_cor580,_cor581,_cor582,_rec12}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor12> =
			    call 'erl_syntax':'string_literal'
				(_cor1, _rec12)
			in  apply 'lay_string'/2
				(_cor12, _cor0)
		    -| ['compiler_generated'] )
		  ( <_cor583> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','ctxt'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 459
	  <'nil'> when 'true' ->
	      %% Line 460
	      call 'prettypr':'text'
		  ([91|[93]])
	  %% Line 462
	  <'tuple'> when 'true' ->
	      let <_cor16> =
		  %% Line 463
		  call 'erl_syntax':'tuple_elements'
		      (_cor1)
	      in  let <_cor14> =
		      %% Line 464
		      call 'prettypr':'text'
			  ([44])
		  in  let <_cor15> =
			  %% Line 464
			  call 'prettypr':'floating'
			      (_cor14)
		      in  let <_cor13> =
			      %% Line 464
			      apply 'reset_prec'/1
				  (_cor0)
			  in  let <Es> =
				  %% Line 463
				  apply 'seq'/4
				      (_cor16, _cor15, _cor13, %% Line 465
							       ( 'lay'/2
								 -| [{'id',{0,0,'-lay_2/2-fun-0-'}}] ))
			      in  let <_cor22> =
				      %% Line 466
				      call 'prettypr':'text'
					  ([123])
				  in  let <_cor23> =
					  %% Line 466
					  call 'prettypr':'floating'
					      (_cor22)
				      in  let <_cor20> =
					      %% Line 467
					      call 'prettypr':'par'
						  (Es)
					  in  let <_cor18> =
						  %% Line 468
						  call 'prettypr':'text'
						      ([125])
					      in  let <_cor19> =
						      %% Line 468
						      call 'prettypr':'floating'
							  (_cor18)
						  in  let <_cor21> =
							  %% Line 467
							  call 'prettypr':'beside'
							      (_cor20, _cor19)
						      in  %% Line 466
							  call 'prettypr':'beside'
							      (_cor23, _cor21)
	  %% Line 470
	  <'list'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 471
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <Node1> =
		      %% Line 472
		      call 'erl_syntax':'compact_list'
			  (_cor1)
		  in  let <_cor28> =
			  %% Line 473
			  call 'erl_syntax':'list_prefix'
			      (Node1)
		      in  let <_cor26> =
			      %% Line 474
			      call 'prettypr':'text'
				  ([44])
			  in  let <_cor27> =
				  %% Line 474
				  call 'prettypr':'floating'
				      (_cor26)
			      in  let <_cor29> =
				      %% Line 473
				      apply 'seq'/4
					  (_cor28, _cor27, %% Line 474
							   Ctxt1, %% Line 475
								  ( 'lay'/2
								    -| [{'id',{0,0,'-lay_2/2-fun-1-'}}] ))
				  in  let <D1> =
					  %% Line 473
					  call 'prettypr':'par'
					      (_cor29)
				      in  let <_cor41> =
					      %% Line 476
					      case call 'erl_syntax':'list_suffix'
						       (Node1) of
						%% Line 477
						<'none'> when 'true' ->
						    let <_cor31> =
							%% Line 478
							call 'prettypr':'text'
							    ([93])
						    in  let <_cor32> =
							    %% Line 478
							    call 'prettypr':'floating'
								(_cor31)
							in  %% Line 478
							    call 'prettypr':'beside'
								(D1, _cor32)
						%% Line 479
						<S> when 'true' ->
						    let <_cor37> =
							%% Line 482
							call 'prettypr':'text'
							    ([124|[32]])
						    in  let <_cor38> =
							    %% Line 482
							    call 'prettypr':'floating'
								(_cor37)
							in  let <_cor35> =
								%% Line 483
								apply 'lay'/2
								    (S, Ctxt1)
							    in  let <_cor33> =
								    %% Line 484
								    call 'prettypr':'text'
									([93])
								in  let <_cor34> =
									%% Line 484
									call 'prettypr':'floating'
									    (_cor33)
								    in  let <_cor36> =
									    %% Line 483
									    call 'prettypr':'beside'
										(_cor35, _cor34)
									in  let <_cor39> =
										%% Line 481
										call 'prettypr':'beside'
										    (_cor38, _cor36)
									    in  %% Line 480
										call 'prettypr':'follow'
										    (D1, _cor39)
					      end
					  in  let <_cor43> =
						  %% Line 486
						  call 'prettypr':'text'
						      ([91])
					      in  let <_cor44> =
						      %% Line 486
						      call 'prettypr':'floating'
							  (_cor43)
						  in  %% Line 486
						      call 'prettypr':'beside'
							  (_cor44, _cor41)
	  %% Line 488
	  <'operator'> when 'true' ->
	      let <_cor45> =
		  %% Line 489
		  call 'erl_syntax':'operator_literal'
		      (_cor1)
	      in  let <_cor46> =
		      %% Line 489
		      call 'prettypr':'text'
			  (_cor45)
		  in  %% Line 489
		      call 'prettypr':'floating'
			  (_cor46)
	  %% Line 491
	  <'infix_expr'> when 'true' ->
	      let <Operator> =
		  %% Line 492
		  call 'erl_syntax':'infix_expr_operator'
		      (_cor1)
	      in  let <_cor50> =
		      %% Line 494
		      case call 'erl_syntax':'type'
			       (Operator) of
			%% Line 495
			<'operator'> when 'true' ->
			    let <_cor48> =
				%% Line 497
				call 'erl_syntax':'operator_name'
				    (Operator)
			    in  %% Line 496
				call 'erl_parse':'inop_prec'
				    (_cor48)
			%% Line 498
			<_cor584> when 'true' ->
			    %% Line 499
			    {0,0,0}
		      end
		  in  %% Line 493
		      case _cor50 of
			<{PrecL,Prec,PrecR}> when 'true' ->
			    let <_cor53> =
				%% Line 501
				call 'erl_syntax':'infix_expr_left'
				    (_cor1)
			    in  let <_cor52> =
				    %% Line 502
				    apply 'set_prec'/2
					(_cor0, PrecL)
				in  let <D1> =
					%% Line 501
					apply 'lay'/2
					    (_cor53, _cor52)
				    in  let <_cor55> =
					    %% Line 503
					    apply 'reset_prec'/1
						(_cor0)
					in  let <D2> =
						%% Line 503
						apply 'lay'/2
						    (Operator, _cor55)
					    in  let <_cor58> =
						    %% Line 504
						    call 'erl_syntax':'infix_expr_right'
							(_cor1)
						in  let <_cor57> =
							%% Line 505
							apply 'set_prec'/2
							    (_cor0, PrecR)
						    in  let <D3> =
							    %% Line 504
							    apply 'lay'/2
								(_cor58, _cor57)
							in  %% Line 506
							    ( case _cor0 of
								( <( {'ctxt',_cor585,_rec13,_cor586,_cor587,_cor588,_cor589,_cor590,_cor591,_cor592}
								     -| ['compiler_generated'] )> when 'true' ->
								      let <D4> =
									  call 'prettypr':'par'
									      ([D1|[D2|[D3|[]]]], _rec13)
								      in  %% Line 507
									  apply 'maybe_parentheses'/3
									      (D4, Prec, _cor0)
								  -| ['compiler_generated'] )
								( <_cor593> when 'true' ->
								      ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'error'
													     -| ['compiler_generated'] )
									    (( {'badrecord','ctxt'}
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
							      end
							      -| ['compiler_generated'] )
			( <_cor51> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor51})
			  -| ['compiler_generated'] )
		      end
	  %% Line 509
	  <'prefix_expr'> when 'true' ->
	      let <Operator> =
		  %% Line 510
		  call 'erl_syntax':'prefix_expr_operator'
		      (_cor1)
	      in  let <_cor67> =
		      %% Line 512
		      case call 'erl_syntax':'type'
			       (Operator) of
			%% Line 513
			<'operator'> when 'true' ->
			    let <N> =
				%% Line 514
				call 'erl_syntax':'operator_name'
				    (Operator)
			    in  let <_cor65> =
				    %% Line 515
				    call 'erl_parse':'preop_prec'
					(N)
				in  %% Line 515
				    {_cor65,N}
			%% Line 516
			<_cor594> when 'true' ->
			    %% Line 517
			    {{0,0},'any'}
		      end
		  in  %% Line 511
		      case _cor67 of
			<{{Prec,PrecR},Name}> when 'true' ->
			    let <_cor69> =
				%% Line 519
				apply 'reset_prec'/1
				    (_cor0)
			    in  let <D1> =
				    %% Line 519
				    apply 'lay'/2
					(Operator, _cor69)
				in  let <_cor72> =
					%% Line 520
					call 'erl_syntax':'prefix_expr_argument'
					    (_cor1)
				    in  let <_cor71> =
					    %% Line 521
					    apply 'set_prec'/2
						(_cor0, PrecR)
					in  let <D2> =
						%% Line 520
						apply 'lay'/2
						    (_cor72, _cor71)
					    in  let <_cor77> =
						    %% Line 522
						    case Name of
						      %% Line 523
						      <'+'> when 'true' ->
							  %% Line 524
							  call 'prettypr':'beside'
							      (D1, D2)
						      %% Line 525
						      <'-'> when 'true' ->
							  %% Line 526
							  call 'prettypr':'beside'
							      (D1, D2)
						      %% Line 527
						      <_cor595> when 'true' ->
							  %% Line 528
							  ( case _cor0 of
							      ( <( {'ctxt',_cor596,_rec14,_cor597,_cor598,_cor599,_cor600,_cor601,_cor602,_cor603}
								   -| ['compiler_generated'] )> when 'true' ->
								    call 'prettypr':'par'
									([D1|[D2|[]]], _rec14)
								-| ['compiler_generated'] )
							      ( <_cor604> when 'true' ->
								    ( call ( 'erlang'
									     -| ['compiler_generated'] ):( 'error'
													   -| ['compiler_generated'] )
									  (( {'badrecord','ctxt'}
									     -| ['compiler_generated'] ))
								      -| ['compiler_generated'] )
								-| ['compiler_generated'] )
							    end
							    -| ['compiler_generated'] )
						    end
						in  %% Line 530
						    apply 'maybe_parentheses'/3
							(_cor77, Prec, _cor0)
			( <_cor68> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor68})
			  -| ['compiler_generated'] )
		      end
	  %% Line 532
	  <'application'> when 'true' ->
	      %% Line 533
	      case call 'erl_parse':'func_prec'
		       () of
		<{PrecL,Prec}> when 'true' ->
		    let <_cor81> =
			%% Line 534
			call 'erl_syntax':'application_operator'
			    (_cor1)
		    in  let <_cor80> =
			    %% Line 535
			    apply 'set_prec'/2
				(_cor0, PrecL)
			in  let <D> =
				%% Line 534
				apply 'lay'/2
				    (_cor81, _cor80)
			    in  let <_cor86> =
				    %% Line 536
				    call 'erl_syntax':'application_arguments'
					(_cor1)
				in  let <_cor84> =
					%% Line 537
					call 'prettypr':'text'
					    ([44])
				    in  let <_cor85> =
					    %% Line 537
					    call 'prettypr':'floating'
						(_cor84)
					in  let <_cor83> =
						%% Line 537
						apply 'reset_prec'/1
						    (_cor0)
					    in  let <As> =
						    %% Line 536
						    apply 'seq'/4
							(_cor86, _cor85, _cor83, %% Line 538
										 ( 'lay'/2
										   -| [{'id',{0,0,'-lay_2/2-fun-2-'}}] ))
						in  let <_cor92> =
							%% Line 542
							call 'prettypr':'text'
							    ([40])
						    in  let <_cor90> =
							    %% Line 543
							    call 'prettypr':'par'
								(As)
							in  let <_cor88> =
								%% Line 544
								call 'prettypr':'text'
								    ([41])
							    in  let <_cor89> =
								    %% Line 544
								    call 'prettypr':'floating'
									(_cor88)
								in  let <_cor91> =
									%% Line 543
									call 'prettypr':'beside'
									    (_cor90, _cor89)
								    in  let <_cor93> =
									    %% Line 542
									    call 'prettypr':'beside'
										(_cor92, _cor91)
									in  let <D1> =
										%% Line 542
										call 'prettypr':'beside'
										    (D, _cor93)
									    in  %% Line 545
										apply 'maybe_parentheses'/3
										    (D1, Prec, _cor0)
		( <_cor79> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor79})
		  -| ['compiler_generated'] )
	      end
	  %% Line 547
	  <'match_expr'> when 'true' ->
	      %% Line 548
	      case call 'erl_parse':'inop_prec'
		       ('=') of
		<{PrecL,Prec,PrecR}> when 'true' ->
		    let <_cor97> =
			%% Line 549
			call 'erl_syntax':'match_expr_pattern'
			    (_cor1)
		    in  let <_cor96> =
			    %% Line 550
			    apply 'set_prec'/2
				(_cor0, PrecL)
			in  let <D1> =
				%% Line 549
				apply 'lay'/2
				    (_cor97, _cor96)
			    in  let <_cor100> =
				    %% Line 551
				    call 'erl_syntax':'match_expr_body'
					(_cor1)
				in  let <_cor99> =
					%% Line 552
					apply 'set_prec'/2
					    (_cor0, PrecR)
				    in  let <D2> =
					    %% Line 551
					    apply 'lay'/2
						(_cor100, _cor99)
					in  let <_cor104> =
						%% Line 553
						call 'prettypr':'text'
						    ([32|[61]])
					    in  let <_cor105> =
						    %% Line 553
						    call 'prettypr':'floating'
							(_cor104)
						in  let <_cor106> =
							%% Line 553
							call 'prettypr':'beside'
							    (D1, _cor105)
						    in  %% Line 554
							( case _cor0 of
							    ( <( {'ctxt',_cor605,_cor606,_rec15,_cor607,_cor608,_cor609,_cor610,_cor611,_cor612}
								 -| ['compiler_generated'] )> when 'true' ->
								  let <D3> =
								      call 'prettypr':'follow'
									  (_cor106, D2, _rec15)
								  in  %% Line 555
								      apply 'maybe_parentheses'/3
									  (D3, Prec, _cor0)
							      -| ['compiler_generated'] )
							    ( <_cor613> when 'true' ->
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( 'error'
													 -| ['compiler_generated'] )
									(( {'badrecord','ctxt'}
									   -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
		( <_cor95> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor95})
		  -| ['compiler_generated'] )
	      end
	  %% Line 557
	  <'underscore'> when 'true' ->
	      %% Line 558
	      call 'prettypr':'text'
		  ([95])
	  %% Line 560
	  <'clause'> when 'true' ->
	      let <_rec16> =
		  %% Line 562
		  apply 'reset_prec'/1
		      (_cor0)
	      in  %% Line 562
		  case _rec16 of
		    <{'ctxt',_cor614,_cor615,_cor616,_cor617,_cor618,_cor619,_cor620,_cor621,_cor622}> when 'true' ->
			let <_cor110> =
			    call 'erlang':'setelement'
				(5, _rec16, 'undefined')
			in  let <_cor114> =
				%% Line 563
				call 'erl_syntax':'clause_patterns'
				    (_cor1)
			    in  let <_cor112> =
				    %% Line 564
				    call 'prettypr':'text'
					([44])
				in  let <_cor113> =
					%% Line 564
					call 'prettypr':'floating'
					    (_cor112)
				    in  let <_cor115> =
					    %% Line 563
					    apply 'seq'/4
						(_cor114, _cor113, _cor110, %% Line 565
									    ( 'lay'/2
									      -| [{'id',{0,0,'-lay_2/2-fun-3-'}}] ))
					in  let <D1> =
						%% Line 563
						call 'prettypr':'par'
						    (_cor115)
					    in  let <_cor118> =
						    %% Line 566
						    case call 'erl_syntax':'clause_guard'
							     (_cor1) of
						      %% Line 567
						      <'none'> when 'true' ->
							  %% Line 568
							  'none'
						      %% Line 569
						      <G> when 'true' ->
							  %% Line 570
							  apply 'lay'/2
							      (G, _cor110)
						    end
						in  let <_cor122> =
							%% Line 572
							call 'erl_syntax':'clause_body'
							    (_cor1)
						    in  let <_cor120> =
							    %% Line 573
							    call 'prettypr':'text'
								([44])
							in  let <_cor121> =
								%% Line 573
								call 'prettypr':'floating'
								    (_cor120)
							    in  let <_cor123> =
								    %% Line 572
								    apply 'seq'/4
									(_cor122, _cor121, _cor110, %% Line 574
												    ( 'lay'/2
												      -| [{'id',{0,0,'-lay_2/2-fun-4-'}}] ))
								in  let <D3> =
									%% Line 572
									call 'prettypr':'sep'
									    (_cor123)
								    in  %% Line 575
									( case _cor0 of
									    ( <( {'ctxt',_cor624,_cor625,_cor626,_rec17,_cor627,_cor628,_cor629,_cor630,_cor631}
										 -| ['compiler_generated'] )> when 'true' ->
										  case _rec17 of
										    %% Line 576
										    <'fun_expr'> when 'true' ->
											%% Line 577
											apply 'make_fun_clause'/4
											    (D1, _cor118, D3, _cor0)
										    %% Line 578
										    <{'function',N}> when 'true' ->
											%% Line 579
											apply 'make_fun_clause'/5
											    (N, D1, _cor118, D3, _cor0)
										    %% Line 580
										    <'if_expr'> when 'true' ->
											%% Line 581
											apply 'make_if_clause'/4
											    (D1, _cor118, D3, _cor0)
										    %% Line 582
										    <'cond_expr'> when 'true' ->
											%% Line 583
											apply 'make_if_clause'/4
											    (D1, _cor118, D3, _cor0)
										    %% Line 584
										    <'case_expr'> when 'true' ->
											%% Line 585
											apply 'make_case_clause'/4
											    (D1, _cor118, D3, _cor0)
										    %% Line 586
										    <'receive_expr'> when 'true' ->
											%% Line 587
											apply 'make_case_clause'/4
											    (D1, _cor118, D3, _cor0)
										    %% Line 588
										    <'try_expr'> when 'true' ->
											%% Line 589
											apply 'make_case_clause'/4
											    (D1, _cor118, D3, _cor0)
										    %% Line 590
										    <{'rule',N}> when 'true' ->
											%% Line 591
											apply 'make_rule_clause'/5
											    (N, D1, _cor118, D3, _cor0)
										    %% Line 592
										    <'undefined'> when 'true' ->
											%% Line 595
											apply 'make_fun_clause'/4
											    (D1, _cor118, D3, _cor0)
										    ( <_cor127> when 'true' ->
											  primop 'match_fail'
											      ({'case_clause',_cor127})
										      -| ['compiler_generated'] )
										  end
									      -| ['compiler_generated'] )
									    ( <_cor632> when 'true' ->
										  ( call ( 'erlang'
											   -| ['compiler_generated'] ):( 'error'
															 -| ['compiler_generated'] )
											(( {'badrecord','ctxt'}
											   -| ['compiler_generated'] ))
										    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									  end
									  -| ['compiler_generated'] )
		    ( <_cor623> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','ctxt'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 598
	  <'function'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 601
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor129> =
		      %% Line 602
		      call 'erl_syntax':'function_name'
			  (_cor1)
		  in  let <D1> =
			  %% Line 602
			  apply 'lay'/2
			      (_cor129, Ctxt1)
		      in  let <_cor131> =
			      %% Line 603
			      call 'erl_syntax':'function_clauses'
				  (_cor1)
			  in  let <D2> =
				  %% Line 603
				  apply 'lay_clauses'/3
				      (_cor131, %% Line 604
						{'function',D1}, %% Line 604
								 Ctxt1)
			      in  let <_cor133> =
				      %% Line 605
				      call 'prettypr':'text'
					  ([46])
				  in  let <_cor134> =
					  %% Line 605
					  call 'prettypr':'floating'
					      (_cor133)
				      in  %% Line 605
					  call 'prettypr':'beside'
					      (D2, _cor134)
	  %% Line 607
	  <'case_expr'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 608
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor136> =
		      %% Line 609
		      call 'erl_syntax':'case_expr_argument'
			  (_cor1)
		  in  let <D1> =
			  %% Line 609
			  apply 'lay'/2
			      (_cor136, Ctxt1)
		      in  let <_cor138> =
			      %% Line 610
			      call 'erl_syntax':'case_expr_clauses'
				  (_cor1)
			  in  let <D2> =
				  %% Line 610
				  apply 'lay_clauses'/3
				      (_cor138, %% Line 611
						'case_expr', %% Line 611
							     Ctxt1)
			      in  let <_cor144> =
				      %% Line 612
				      call 'prettypr':'text'
					  ([99|[97|[115|[101]]]])
				  in  %% Line 612
				      ( case Ctxt1 of
					  ( <( {'ctxt',_cor633,_rec18,_cor634,_cor635,_cor636,_cor637,_cor638,_cor639,_cor640}
					       -| ['compiler_generated'] )> when 'true' ->
						let <_cor145> =
						    call 'prettypr':'follow'
							(_cor144, D1, _rec18)
						in  let <_cor146> =
							%% Line 613
							call 'prettypr':'text'
							    ([111|[102]])
						    in  let <_cor147> =
							    call 'prettypr':'par'
								([_cor145|%% Line 613
									  [_cor146|[]]], _cor634)
							in  let <_cor150> =
								%% Line 615
								call 'prettypr':'nest'
								    (_rec18, D2)
							    in  let <_cor151> =
								    %% Line 616
								    call 'prettypr':'text'
									([101|[110|[100]]])
								in  call 'prettypr':'sep'
									([_cor147|%% Line 615
										  [_cor150|%% Line 616
											   [_cor151|[]]]])
					    -| ['compiler_generated'] )
					  ( <_cor641> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','ctxt'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
	  %% Line 618
	  <'if_expr'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 619
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor153> =
		      %% Line 620
		      call 'erl_syntax':'if_expr_clauses'
			  (_cor1)
		  in  let <D> =
			  %% Line 620
			  apply 'lay_clauses'/3
			      (_cor153, %% Line 621
					'if_expr', %% Line 621
						   Ctxt1)
		      in  let <_cor157> =
			      %% Line 622
			      call 'prettypr':'text'
				  ([105|[102]])
			  in  %% Line 622
			      ( case Ctxt1 of
				  ( <( {'ctxt',_cor660,_rec21,_cor661,_cor662,_cor663,_cor664,_cor665,_cor666,_cor667}
				       -| ['compiler_generated'] )> when 'true' ->
					let <_cor158> =
					    call 'prettypr':'follow'
						(_cor157, D, _rec21)
					in  let <_cor159> =
						%% Line 623
						call 'prettypr':'text'
						    ([101|[110|[100]]])
					    in  call 'prettypr':'sep'
						    ([_cor158|%% Line 623
							      [_cor159|[]]])
				    -| ['compiler_generated'] )
				  ( <_cor668> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','ctxt'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
	  %% Line 625
	  <'cond_expr'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 626
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor161> =
		      %% Line 627
		      call 'erl_syntax':'cond_expr_clauses'
			  (_cor1)
		  in  let <D> =
			  %% Line 627
			  apply 'lay_clauses'/3
			      (_cor161, %% Line 628
					'cond_expr', %% Line 628
						     Ctxt1)
		      in  let <_cor163> =
			      %% Line 629
			      call 'prettypr':'text'
				  ([99|[111|[110|[100]]]])
			  in  %% Line 630
			      ( case Ctxt1 of
				  ( <( {'ctxt',_cor669,_rec22,_cor670,_cor671,_cor672,_cor673,_cor674,_cor675,_cor676}
				       -| ['compiler_generated'] )> when 'true' ->
					let <_cor166> =
					    call 'prettypr':'nest'
						(_rec22, D)
					in  let <_cor167> =
						%% Line 631
						call 'prettypr':'text'
						    ([101|[110|[100]]])
					    in  call 'prettypr':'sep'
						    ([_cor163|[_cor166|%% Line 631
								       [_cor167|[]]]])
				    -| ['compiler_generated'] )
				  ( <_cor677> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','ctxt'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
	  %% Line 633
	  <'fun_expr'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 634
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor169> =
		      %% Line 635
		      call 'erl_syntax':'fun_expr_clauses'
			  (_cor1)
		  in  let <D> =
			  %% Line 635
			  apply 'lay_clauses'/3
			      (_cor169, %% Line 636
					'fun_expr', %% Line 636
						    Ctxt1)
		      in  let <_cor173> =
			      %% Line 637
			      call 'prettypr':'text'
				  ([102|[117|[110]]])
			  in  %% Line 637
			      ( case Ctxt1 of
				  ( <( {'ctxt',_cor678,_rec23,_cor679,_cor680,_cor681,_cor682,_cor683,_cor684,_cor685}
				       -| ['compiler_generated'] )> when 'true' ->
					let <_cor174> =
					    call 'prettypr':'follow'
						(_cor173, D, _rec23)
					in  let <_cor175> =
						%% Line 638
						call 'prettypr':'text'
						    ([101|[110|[100]]])
					    in  call 'prettypr':'sep'
						    ([_cor174|%% Line 638
							      [_cor175|[]]])
				    -| ['compiler_generated'] )
				  ( <_cor686> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','ctxt'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
	  %% Line 640
	  <'named_fun_expr'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 641
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor177> =
		      %% Line 642
		      call 'erl_syntax':'named_fun_expr_name'
			  (_cor1)
		  in  let <D1> =
			  %% Line 642
			  apply 'lay'/2
			      (_cor177, Ctxt1)
		      in  let <_cor179> =
			      %% Line 643
			      call 'erl_syntax':'named_fun_expr_clauses'
				  (_cor1)
			  in  let <D> =
				  %% Line 643
				  apply 'lay_clauses'/3
				      (_cor179, %% Line 644
						{'function',D1}, %% Line 644
								 Ctxt1)
			      in  let <_cor183> =
				      %% Line 645
				      call 'prettypr':'text'
					  ([102|[117|[110]]])
				  in  %% Line 645
				      ( case Ctxt1 of
					  ( <( {'ctxt',_cor687,_rec24,_cor688,_cor689,_cor690,_cor691,_cor692,_cor693,_cor694}
					       -| ['compiler_generated'] )> when 'true' ->
						let <_cor184> =
						    call 'prettypr':'follow'
							(_cor183, D, _rec24)
						in  let <_cor185> =
							%% Line 646
							call 'prettypr':'text'
							    ([101|[110|[100]]])
						    in  call 'prettypr':'sep'
							    ([_cor184|%% Line 646
								      [_cor185|[]]])
					    -| ['compiler_generated'] )
					  ( <_cor695> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','ctxt'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
	  %% Line 648
	  <'module_qualifier'> when 'true' ->
	      %% Line 649
	      case call 'erl_parse':'inop_prec'
		       (':') of
		<{PrecL,_X_Prec,PrecR}> when 'true' ->
		    let <_cor188> =
			%% Line 650
			call 'erl_syntax':'module_qualifier_argument'
			    (_cor1)
		    in  let <_cor187> =
			    %% Line 651
			    apply 'set_prec'/2
				(_cor0, PrecL)
			in  let <D1> =
				%% Line 650
				apply 'lay'/2
				    (_cor188, _cor187)
			    in  let <_cor191> =
				    %% Line 652
				    call 'erl_syntax':'module_qualifier_body'
					(_cor1)
				in  let <_cor190> =
					%% Line 653
					apply 'set_prec'/2
					    (_cor0, PrecR)
				    in  let <D2> =
					    %% Line 652
					    apply 'lay'/2
						(_cor191, _cor190)
					in  let <_cor193> =
						%% Line 654
						call 'prettypr':'text'
						    ([58])
					    in  let <_cor194> =
						    %% Line 654
						    call 'prettypr':'beside'
							(_cor193, D2)
						in  %% Line 654
						    call 'prettypr':'beside'
							(D1, _cor194)
		( <_cor186> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor186})
		  -| ['compiler_generated'] )
	      end
	  %% Line 660
	  <'arity_qualifier'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 661
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor196> =
		      %% Line 662
		      call 'erl_syntax':'arity_qualifier_body'
			  (_cor1)
		  in  let <D1> =
			  %% Line 662
			  apply 'lay'/2
			      (_cor196, Ctxt1)
		      in  let <_cor198> =
			      %% Line 663
			      call 'erl_syntax':'arity_qualifier_argument'
				  (_cor1)
			  in  let <D2> =
				  %% Line 663
				  apply 'lay'/2
				      (_cor198, Ctxt1)
			      in  let <_cor200> =
				      %% Line 664
				      call 'prettypr':'text'
					  ([47])
				  in  let <_cor201> =
					  %% Line 664
					  call 'prettypr':'beside'
					      (_cor200, D2)
				      in  %% Line 664
					  call 'prettypr':'beside'
					      (D1, _cor201)
	  %% Line 666
	  <'attribute'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 671
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <N> =
		      %% Line 672
		      call 'erl_syntax':'attribute_name'
			  (_cor1)
		  in  let <_cor215> =
			  %% Line 673
			  case call 'erl_syntax':'attribute_arguments'
				   (_cor1) of
			    %% Line 674
			    <'none'> when 'true' ->
				%% Line 675
				apply 'lay'/2
				    (N, Ctxt1)
			    %% Line 676
			    <Args> when 'true' ->
				let <_cor204> =
				    %% Line 677
				    call 'prettypr':'text'
					([44])
				in  let <_cor205> =
					%% Line 677
					call 'prettypr':'floating'
					    (_cor204)
				    in  let <As> =
					    %% Line 677
					    apply 'seq'/4
						(Args, _cor205, Ctxt1, %% Line 678
								       ( 'lay'/2
									 -| [{'id',{0,0,'-lay_2/2-fun-5-'}}] ))
					in  let <_cor213> =
						%% Line 679
						apply 'lay'/2
						    (N, Ctxt1)
					    in  let <_cor211> =
						    %% Line 680
						    call 'prettypr':'text'
							([40])
						in  let <_cor209> =
							%% Line 681
							call 'prettypr':'par'
							    (As)
						    in  let <_cor207> =
							    %% Line 682
							    call 'prettypr':'text'
								([41])
							in  let <_cor208> =
								%% Line 682
								call 'prettypr':'floating'
								    (_cor207)
							    in  let <_cor210> =
								    %% Line 681
								    call 'prettypr':'beside'
									(_cor209, _cor208)
								in  let <_cor212> =
									%% Line 680
									call 'prettypr':'beside'
									    (_cor211, _cor210)
								    in  %% Line 679
									call 'prettypr':'beside'
									    (_cor213, _cor212)
			  end
		      in  let <_cor220> =
			      %% Line 684
			      call 'prettypr':'text'
				  ([45])
			  in  let <_cor221> =
				  %% Line 684
				  call 'prettypr':'floating'
				      (_cor220)
			      in  let <_cor217> =
				      %% Line 684
				      call 'prettypr':'text'
					  ([46])
				  in  let <_cor218> =
					  %% Line 684
					  call 'prettypr':'floating'
					      (_cor217)
				      in  let <_cor219> =
					      %% Line 684
					      call 'prettypr':'beside'
						  (_cor215, _cor218)
					  in  %% Line 684
					      call 'prettypr':'beside'
						  (_cor221, _cor219)
	  %% Line 686
	  <'binary'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 687
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor225> =
		      %% Line 688
		      call 'erl_syntax':'binary_fields'
			  (_cor1)
		  in  let <_cor223> =
			  %% Line 689
			  call 'prettypr':'text'
			      ([44])
		      in  let <_cor224> =
			      %% Line 689
			      call 'prettypr':'floating'
				  (_cor223)
			  in  let <Es> =
				  %% Line 688
				  apply 'seq'/4
				      (_cor225, _cor224, %% Line 689
							 Ctxt1, %% Line 689
								( 'lay'/2
								  -| [{'id',{0,0,'-lay_2/2-fun-6-'}}] ))
			      in  let <_cor231> =
				      %% Line 690
				      call 'prettypr':'text'
					  ([60|[60]])
				  in  let <_cor232> =
					  %% Line 690
					  call 'prettypr':'floating'
					      (_cor231)
				      in  let <_cor229> =
					      %% Line 691
					      call 'prettypr':'par'
						  (Es)
					  in  let <_cor227> =
						  %% Line 691
						  call 'prettypr':'text'
						      ([62|[62]])
					      in  let <_cor228> =
						      %% Line 691
						      call 'prettypr':'floating'
							  (_cor227)
						  in  let <_cor230> =
							  %% Line 691
							  call 'prettypr':'beside'
							      (_cor229, _cor228)
						      in  %% Line 690
							  call 'prettypr':'beside'
							      (_cor232, _cor230)
	  %% Line 693
	  <'binary_field'> when 'true' ->
	      let <_cor233> =
		  %% Line 694
		  call 'erl_parse':'max_prec'
		      ()
	      in  let <Ctxt1> =
		      %% Line 694
		      apply 'set_prec'/2
			  (_cor0, _cor233)
		  in  let <_cor235> =
			  %% Line 695
			  call 'erl_syntax':'binary_field_body'
			      (_cor1)
		      in  let <D1> =
			      %% Line 695
			      apply 'lay'/2
				  (_cor235, Ctxt1)
			  in  let <_cor241> =
				  %% Line 696
				  case call 'erl_syntax':'binary_field_types'
					   (_cor1) of
				    %% Line 697
				    <[]> when 'true' ->
					%% Line 698
					call 'prettypr':'empty'
					    ()
				    %% Line 699
				    <Ts> when 'true' ->
					let <_cor238> =
					    %% Line 700
					    call 'prettypr':'text'
						([47])
					in  let <_cor239> =
						%% Line 700
						call 'prettypr':'floating'
						    (_cor238)
					    in  let <_cor237> =
						    %% Line 701
						    apply 'lay_bit_types'/2
							(Ts, Ctxt1)
						in  %% Line 700
						    call 'prettypr':'beside'
							(_cor239, _cor237)
				  end
			      in  %% Line 703
				  call 'prettypr':'beside'
				      (D1, _cor241)
	  %% Line 705
	  <'block_expr'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 706
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor246> =
		      %% Line 707
		      call 'erl_syntax':'block_expr_body'
			  (_cor1)
		  in  let <_cor244> =
			  %% Line 708
			  call 'prettypr':'text'
			      ([44])
		      in  let <_cor245> =
			      %% Line 708
			      call 'prettypr':'floating'
				  (_cor244)
			  in  let <Es> =
				  %% Line 707
				  apply 'seq'/4
				      (_cor246, _cor245, %% Line 708
							 Ctxt1, %% Line 708
								( 'lay'/2
								  -| [{'id',{0,0,'-lay_2/2-fun-7-'}}] ))
			      in  let <_cor248> =
				      %% Line 709
				      call 'prettypr':'text'
					  ([98|[101|[103|[105|[110]]]]])
				  in  %% Line 710
				      ( case Ctxt1 of
					  ( <( {'ctxt',_cor696,_rec25,_cor697,_cor698,_cor699,_cor700,_cor701,_cor702,_cor703}
					       -| ['compiler_generated'] )> when 'true' ->
						let <_cor249> =
						    call 'prettypr':'sep'
							(Es)
						in  let <_cor252> =
							call 'prettypr':'nest'
							    (_rec25, _cor249)
						    in  let <_cor253> =
							    %% Line 711
							    call 'prettypr':'text'
								([101|[110|[100]]])
							in  call 'prettypr':'sep'
								([_cor248|[_cor252|%% Line 711
										   [_cor253|[]]]])
					    -| ['compiler_generated'] )
					  ( <_cor704> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','ctxt'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
	  %% Line 713
	  <'catch_expr'> when 'true' ->
	      %% Line 714
	      case call 'erl_parse':'preop_prec'
		       ('catch') of
		<{Prec,PrecR}> when 'true' ->
		    let <_cor256> =
			%% Line 715
			call 'erl_syntax':'catch_expr_body'
			    (_cor1)
		    in  let <_cor255> =
			    %% Line 716
			    apply 'set_prec'/2
				(_cor0, PrecR)
			in  let <D> =
				%% Line 715
				apply 'lay'/2
				    (_cor256, _cor255)
			    in  let <_cor260> =
				    %% Line 717
				    call 'prettypr':'text'
					([99|[97|[116|[99|[104]]]]])
				in  %% Line 717
				    ( case _cor0 of
					( <( {'ctxt',_cor705,_rec26,_cor706,_cor707,_cor708,_cor709,_cor710,_cor711,_cor712}
					     -| ['compiler_generated'] )> when 'true' ->
					      let <D1> =
						  call 'prettypr':'follow'
						      (_cor260, D, _rec26)
					      in  %% Line 718
						  apply 'maybe_parentheses'/3
						      (D1, Prec, _cor0)
					  -| ['compiler_generated'] )
					( <_cor713> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','ctxt'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
		( <_cor254> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor254})
		  -| ['compiler_generated'] )
	      end
	  %% Line 720
	  <'class_qualifier'> when 'true' ->
	      let <_cor262> =
		  %% Line 721
		  call 'erl_parse':'max_prec'
		      ()
	      in  let <Ctxt1> =
		      %% Line 721
		      apply 'set_prec'/2
			  (_cor0, _cor262)
		  in  let <_cor264> =
			  %% Line 722
			  call 'erl_syntax':'class_qualifier_argument'
			      (_cor1)
		      in  let <D1> =
			      %% Line 722
			      apply 'lay'/2
				  (_cor264, Ctxt1)
			  in  let <_cor266> =
				  %% Line 723
				  call 'erl_syntax':'class_qualifier_body'
				      (_cor1)
			      in  let <D2> =
				      %% Line 723
				      apply 'lay'/2
					  (_cor266, Ctxt1)
				  in  let <_cor268> =
					  %% Line 724
					  call 'prettypr':'text'
					      ([58])
				      in  let <_cor269> =
					      %% Line 724
					      call 'prettypr':'beside'
						  (_cor268, D2)
					  in  %% Line 724
					      call 'prettypr':'beside'
						  (D1, _cor269)
	  %% Line 726
	  <'comment'> when 'true' ->
	      let <_cor270> =
		  %% Line 728
		  call 'erl_syntax':'comment_text'
		      (_cor1)
	      in  let <D> =
		      %% Line 727
		      apply 'stack_comment_lines'/1
			  (_cor270)
		  in  %% Line 730
		      case call 'erl_syntax':'comment_padding'
			       (_cor1) of
			%% Line 731
			<'none'> when 'true' ->
			    let <_cor272> =
				%% Line 732
				call 'prettypr':'break'
				    (D)
			    in  %% Line 732
				call 'prettypr':'floating'
				    (_cor272)
			%% Line 733
			<P> when 'true' ->
			    let <_cor273> =
				%% Line 734
				apply 'spaces'/1
				    (P)
			    in  let <_cor274> =
				    %% Line 734
				    call 'prettypr':'text'
					(_cor273)
				in  let <_cor275> =
					%% Line 734
					call 'prettypr':'beside'
					    (_cor274, D)
				    in  let <_cor276> =
					    %% Line 734
					    call 'prettypr':'break'
						(_cor275)
					in  %% Line 734
					    call 'prettypr':'floating'
						(_cor276)
		      end
	  %% Line 737
	  <'conjunction'> when 'true' ->
	      let <_cor281> =
		  %% Line 738
		  call 'erl_syntax':'conjunction_body'
		      (_cor1)
	      in  let <_cor279> =
		      %% Line 739
		      call 'prettypr':'text'
			  ([44])
		  in  let <_cor280> =
			  %% Line 739
			  call 'prettypr':'floating'
			      (_cor279)
		      in  let <_cor278> =
			      %% Line 739
			      apply 'reset_prec'/1
				  (_cor0)
			  in  let <_cor282> =
				  %% Line 738
				  apply 'seq'/4
				      (_cor281, _cor280, _cor278, %% Line 740
								  ( 'lay'/2
								    -| [{'id',{0,0,'-lay_2/2-fun-8-'}}] ))
			      in  %% Line 738
				  call 'prettypr':'par'
				      (_cor282)
	  %% Line 742
	  <'disjunction'> when 'true' ->
	      let <_cor286> =
		  %% Line 745
		  call 'erl_syntax':'disjunction_body'
		      (_cor1)
	      in  let <_cor284> =
		      %% Line 746
		      call 'prettypr':'text'
			  ([59])
		  in  let <_cor285> =
			  %% Line 746
			  call 'prettypr':'floating'
			      (_cor284)
		      in  let <_cor283> =
			      %% Line 746
			      apply 'reset_prec'/1
				  (_cor0)
			  in  let <_cor287> =
				  %% Line 745
				  apply 'seq'/4
				      (_cor286, _cor285, _cor283, %% Line 747
								  ( 'lay'/2
								    -| [{'id',{0,0,'-lay_2/2-fun-9-'}}] ))
			      in  %% Line 745
				  call 'prettypr':'sep'
				      (_cor287)
	  %% Line 749
	  <'error_marker'> when 'true' ->
	      let <E> =
		  %% Line 750
		  call 'erl_syntax':'error_marker_info'
		      (_cor1)
	      in  let <_cor293> =
		      %% Line 751
		      call 'prettypr':'text'
			  ([42|[42|[32]]])
		  in  let <_cor290> =
			  %% Line 752
			  apply 'reset_prec'/1
			      (_cor0)
		      in  let <_cor291> =
			      %% Line 752
			      apply 'lay_error_info'/2
				  (E, _cor290)
			  in  let <_cor289> =
				  %% Line 753
				  call 'prettypr':'text'
				      ([32|[42|[42]]])
			      in  let <_cor292> =
				      %% Line 752
				      call 'prettypr':'beside'
					  (_cor291, _cor289)
				  in  %% Line 751
				      call 'prettypr':'beside'
					  (_cor293, _cor292)
	  %% Line 755
	  <'eof_marker'> when 'true' ->
	      %% Line 756
	      call 'prettypr':'empty'
		  ()
	  %% Line 758
	  <'form_list'> when 'true' ->
	      let <_cor295> =
		  %% Line 759
		  call 'erl_syntax':'form_list_elements'
		      (_cor1)
	      in  let <_cor294> =
		      %% Line 760
		      apply 'reset_prec'/1
			  (_cor0)
		  in  let <Es> =
			  %% Line 759
			  apply 'seq'/4
			      (_cor295, 'none', _cor294, %% Line 760
							 ( 'lay'/2
							   -| [{'id',{0,0,'-lay_2/2-fun-10-'}}] ))
		      in  let <_cor297> =
			      %% Line 761
			      call 'prettypr':'text'
				  ([])
			  in  %% Line 761
			      apply 'vertical_sep'/2
				  (_cor297, Es)
	  %% Line 763
	  <'generator'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 764
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor299> =
		      %% Line 765
		      call 'erl_syntax':'generator_pattern'
			  (_cor1)
		  in  let <D1> =
			  %% Line 765
			  apply 'lay'/2
			      (_cor299, Ctxt1)
		      in  let <_cor301> =
			      %% Line 766
			      call 'erl_syntax':'generator_body'
				  (_cor1)
			  in  let <D2> =
				  %% Line 766
				  apply 'lay'/2
				      (_cor301, Ctxt1)
			      in  let <_cor305> =
				      %% Line 767
				      call 'prettypr':'text'
					  ([60|[45|[32]]])
				  in  let <_cor306> =
					  %% Line 767
					  call 'prettypr':'beside'
					      (_cor305, D2)
				      in  %% Line 767
					  ( case Ctxt1 of
					      ( <( {'ctxt',_cor714,_cor715,_rec27,_cor716,_cor717,_cor718,_cor719,_cor720,_cor721}
						   -| ['compiler_generated'] )> when 'true' ->
						    call 'prettypr':'par'
							([D1|[_cor306|[]]], _rec27)
						-| ['compiler_generated'] )
					      ( <_cor722> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','ctxt'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
	  %% Line 769
	  <'binary_generator'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 770
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor308> =
		      %% Line 771
		      call 'erl_syntax':'binary_generator_pattern'
			  (_cor1)
		  in  let <D1> =
			  %% Line 771
			  apply 'lay'/2
			      (_cor308, Ctxt1)
		      in  let <_cor310> =
			      %% Line 772
			      call 'erl_syntax':'binary_generator_body'
				  (_cor1)
			  in  let <D2> =
				  %% Line 772
				  apply 'lay'/2
				      (_cor310, Ctxt1)
			      in  let <_cor314> =
				      %% Line 773
				      call 'prettypr':'text'
					  ([60|[61|[32]]])
				  in  let <_cor315> =
					  %% Line 773
					  call 'prettypr':'beside'
					      (_cor314, D2)
				      in  %% Line 773
					  ( case Ctxt1 of
					      ( <( {'ctxt',_cor723,_cor724,_rec28,_cor725,_cor726,_cor727,_cor728,_cor729,_cor730}
						   -| ['compiler_generated'] )> when 'true' ->
						    call 'prettypr':'par'
							([D1|[_cor315|[]]], _rec28)
						-| ['compiler_generated'] )
					      ( <_cor731> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','ctxt'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
	  %% Line 775
	  <'implicit_fun'> when 'true' ->
	      let <_cor317> =
		  %% Line 776
		  call 'erl_syntax':'implicit_fun_name'
		      (_cor1)
	      in  let <_cor316> =
		      %% Line 777
		      apply 'reset_prec'/1
			  (_cor0)
		  in  let <D> =
			  %% Line 776
			  apply 'lay'/2
			      (_cor317, _cor316)
		      in  let <_cor319> =
			      %% Line 778
			      call 'prettypr':'text'
				  ([102|[117|[110|[32]]]])
			  in  let <_cor320> =
				  %% Line 778
				  call 'prettypr':'floating'
				      (_cor319)
			      in  %% Line 778
				  call 'prettypr':'beside'
				      (_cor320, D)
	  %% Line 780
	  <'list_comp'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 781
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor322> =
		      %% Line 782
		      call 'erl_syntax':'list_comp_template'
			  (_cor1)
		  in  let <D1> =
			  %% Line 782
			  apply 'lay'/2
			      (_cor322, Ctxt1)
		      in  let <_cor326> =
			      %% Line 783
			      call 'erl_syntax':'list_comp_body'
				  (_cor1)
			  in  let <_cor324> =
				  %% Line 784
				  call 'prettypr':'text'
				      ([44])
			      in  let <_cor325> =
				      %% Line 784
				      call 'prettypr':'floating'
					  (_cor324)
				  in  let <_cor327> =
					  %% Line 783
					  apply 'seq'/4
					      (_cor326, _cor325, %% Line 784
								 Ctxt1, %% Line 785
									( 'lay'/2
									  -| [{'id',{0,0,'-lay_2/2-fun-11-'}}] ))
				      in  let <D2> =
					      %% Line 783
					      call 'prettypr':'par'
						  (_cor327)
					  in  let <_cor336> =
						  %% Line 786
						  call 'prettypr':'text'
						      ([91])
					      in  let <_cor337> =
						      %% Line 786
						      call 'prettypr':'floating'
							  (_cor336)
						  in  let <_cor332> =
							  %% Line 787
							  call 'prettypr':'text'
							      ([124|[124|[32]]])
						      in  let <_cor333> =
							      %% Line 787
							      call 'prettypr':'floating'
								  (_cor332)
							  in  let <_cor329> =
								  %% Line 788
								  call 'prettypr':'text'
								      ([93])
							      in  let <_cor330> =
								      %% Line 788
								      call 'prettypr':'floating'
									  (_cor329)
								  in  let <_cor331> =
									  %% Line 788
									  call 'prettypr':'beside'
									      (D2, _cor330)
								      in  let <_cor334> =
									      %% Line 787
									      call 'prettypr':'beside'
										  (_cor333, _cor331)
									  in  let <_cor335> =
										  %% Line 787
										  call 'prettypr':'par'
										      ([D1|[_cor334|%% Line 788
												    []]])
									      in  %% Line 786
										  call 'prettypr':'beside'
										      (_cor337, _cor335)
	  %% Line 790
	  <'binary_comp'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 791
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor339> =
		      %% Line 792
		      call 'erl_syntax':'binary_comp_template'
			  (_cor1)
		  in  let <D1> =
			  %% Line 792
			  apply 'lay'/2
			      (_cor339, Ctxt1)
		      in  let <_cor343> =
			      %% Line 793
			      call 'erl_syntax':'binary_comp_body'
				  (_cor1)
			  in  let <_cor341> =
				  %% Line 794
				  call 'prettypr':'text'
				      ([44])
			      in  let <_cor342> =
				      %% Line 794
				      call 'prettypr':'floating'
					  (_cor341)
				  in  let <_cor344> =
					  %% Line 793
					  apply 'seq'/4
					      (_cor343, _cor342, %% Line 794
								 Ctxt1, %% Line 795
									( 'lay'/2
									  -| [{'id',{0,0,'-lay_2/2-fun-12-'}}] ))
				      in  let <D2> =
					      %% Line 793
					      call 'prettypr':'par'
						  (_cor344)
					  in  let <_cor353> =
						  %% Line 796
						  call 'prettypr':'text'
						      ([60|[60|[32]]])
					      in  let <_cor354> =
						      %% Line 796
						      call 'prettypr':'floating'
							  (_cor353)
						  in  let <_cor349> =
							  %% Line 797
							  call 'prettypr':'text'
							      ([32|[124|[124|[32]]]])
						      in  let <_cor350> =
							      %% Line 797
							      call 'prettypr':'floating'
								  (_cor349)
							  in  let <_cor346> =
								  %% Line 798
								  call 'prettypr':'text'
								      ([32|[62|[62]]])
							      in  let <_cor347> =
								      %% Line 798
								      call 'prettypr':'floating'
									  (_cor346)
								  in  let <_cor348> =
									  %% Line 798
									  call 'prettypr':'beside'
									      (D2, _cor347)
								      in  let <_cor351> =
									      %% Line 797
									      call 'prettypr':'beside'
										  (_cor350, _cor348)
									  in  let <_cor352> =
										  %% Line 797
										  call 'prettypr':'par'
										      ([D1|[_cor351|%% Line 798
												    []]])
									      in  %% Line 796
										  call 'prettypr':'beside'
										      (_cor354, _cor352)
	  %% Line 800
	  <'macro'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 803
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <N> =
		      %% Line 804
		      call 'erl_syntax':'macro_name'
			  (_cor1)
		  in  let <_cor370> =
			  %% Line 805
			  case call 'erl_syntax':'macro_arguments'
				   (_cor1) of
			    %% Line 806
			    <'none'> when 'true' ->
				%% Line 807
				apply 'lay'/2
				    (N, Ctxt1)
			    %% Line 808
			    <Args> when 'true' ->
				let <_cor359> =
				    %% Line 809
				    call 'prettypr':'text'
					([44])
				in  let <_cor360> =
					%% Line 809
					call 'prettypr':'floating'
					    (_cor359)
				    in  let <_cor357> =
					    %% Line 810
					    call 'erl_parse':'max_prec'
						()
					in  let <_cor358> =
						%% Line 810
						apply 'set_prec'/2
						    (Ctxt1, _cor357)
					    in  let <As> =
						    %% Line 809
						    apply 'seq'/4
							(Args, _cor360, _cor358, %% Line 810
										 ( 'lay'/2
										   -| [{'id',{0,0,'-lay_2/2-fun-13-'}}] ))
						in  let <_cor368> =
							%% Line 811
							apply 'lay'/2
							    (N, Ctxt1)
						    in  let <_cor366> =
							    %% Line 812
							    call 'prettypr':'text'
								([40])
							in  let <_cor364> =
								%% Line 813
								call 'prettypr':'par'
								    (As)
							    in  let <_cor362> =
								    %% Line 814
								    call 'prettypr':'text'
									([41])
								in  let <_cor363> =
									%% Line 814
									call 'prettypr':'floating'
									    (_cor362)
								    in  let <_cor365> =
									    %% Line 813
									    call 'prettypr':'beside'
										(_cor364, _cor363)
									in  let <_cor367> =
										%% Line 812
										call 'prettypr':'beside'
										    (_cor366, _cor365)
									    in  %% Line 811
										call 'prettypr':'beside'
										    (_cor368, _cor367)
			  end
		      in  let <_cor372> =
			      %% Line 816
			      call 'prettypr':'text'
				  ([63])
			  in  let <_cor373> =
				  %% Line 816
				  call 'prettypr':'floating'
				      (_cor372)
			      in  let <D1> =
				      %% Line 816
				      call 'prettypr':'beside'
					  (_cor373, _cor370)
				  in  %% Line 817
				      apply 'maybe_parentheses'/3
					  (D1, 0, _cor0)
	  %% Line 819
	  <'parentheses'> when 'true' ->
	      let <_cor376> =
		  %% Line 820
		  call 'erl_syntax':'parentheses_body'
		      (_cor1)
	      in  let <_cor375> =
		      %% Line 821
		      apply 'reset_prec'/1
			  (_cor0)
		  in  let <D> =
			  %% Line 820
			  apply 'lay'/2
			      (_cor376, _cor375)
		      in  %% Line 822
			  apply 'lay_parentheses'/2
			      (D, _cor0)
	  %% Line 824
	  <'receive_expr'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 825
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor379> =
		      %% Line 826
		      call 'erl_syntax':'receive_expr_clauses'
			  (_cor1)
		  in  let <D1> =
			  %% Line 826
			  apply 'lay_clauses'/3
			      (_cor379, %% Line 827
					'receive_expr', %% Line 827
							Ctxt1)
		      in  let <_cor394> =
			      %% Line 828
			      case call 'erl_syntax':'receive_expr_timeout'
				       (_cor1) of
				%% Line 829
				<'none'> when 'true' ->
				    %% Line 830
				    D1
				%% Line 831
				<T> when 'true' ->
				    let <D3> =
					%% Line 832
					apply 'lay'/2
					    (T, Ctxt1)
				    in  let <A> =
					    %% Line 833
					    call 'erl_syntax':'receive_expr_action'
						(_cor1)
					in  let <_cor383> =
						%% Line 834
						call 'prettypr':'text'
						    ([44])
					    in  let <_cor384> =
						    %% Line 834
						    call 'prettypr':'floating'
							(_cor383)
						in  let <_cor385> =
							%% Line 834
							apply 'seq'/4
							    (A, _cor384, %% Line 835
									 Ctxt1, %% Line 835
										( 'lay'/2
										  -| [{'id',{0,0,'-lay_2/2-fun-14-'}}] ))
						    in  let <D4> =
							    %% Line 834
							    call 'prettypr':'sep'
								(_cor385)
							in  let <_cor390> =
								%% Line 837
								call 'prettypr':'text'
								    ([97|[102|[116|[101|[114]]]]])
							    in  let <_cor391> =
								    %% Line 837
								    call 'prettypr':'floating'
									(_cor390)
								in  let <_cor389> =
									%% Line 838
									apply 'append_clause_body'/3
									    (D4, D3, %% Line 839
										     Ctxt1)
								    in  %% Line 840
									( case Ctxt1 of
									    ( <( {'ctxt',_cor732,_rec29,_cor733,_cor734,_cor735,_cor736,_cor737,_cor738,_cor739}
										 -| ['compiler_generated'] )> when 'true' ->
										  let <_cor392> =
										      call 'prettypr':'follow'
											  (_cor391, _cor389, _rec29)
										  in  call 'prettypr':'sep'
											  ([D1|[_cor392|[]]])
									      -| ['compiler_generated'] )
									    ( <_cor740> when 'true' ->
										  ( call ( 'erlang'
											   -| ['compiler_generated'] ):( 'error'
															 -| ['compiler_generated'] )
											(( {'badrecord','ctxt'}
											   -| ['compiler_generated'] ))
										    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									  end
									  -| ['compiler_generated'] )
			      end
			  in  let <_cor396> =
				  %% Line 842
				  call 'prettypr':'text'
				      ([114|[101|[99|[101|[105|[118|[101]]]]]]])
			      in  %% Line 843
				  ( case Ctxt1 of
				      ( <( {'ctxt',_cor741,_rec30,_cor742,_cor743,_cor744,_cor745,_cor746,_cor747,_cor748}
					   -| ['compiler_generated'] )> when 'true' ->
					    let <_cor399> =
						call 'prettypr':'nest'
						    (_rec30, _cor394)
					    in  let <_cor400> =
						    %% Line 844
						    call 'prettypr':'text'
							([101|[110|[100]]])
						in  call 'prettypr':'sep'
							([_cor396|[_cor399|%% Line 844
									   [_cor400|[]]]])
					-| ['compiler_generated'] )
				      ( <_cor749> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','ctxt'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
	  %% Line 846
	  <'record_access'> when 'true' ->
	      %% Line 847
	      case call 'erl_parse':'inop_prec'
		       ('#') of
		<{PrecL,Prec,PrecR}> when 'true' ->
		    let <_cor403> =
			%% Line 848
			call 'erl_syntax':'record_access_argument'
			    (_cor1)
		    in  let <_cor402> =
			    %% Line 849
			    apply 'set_prec'/2
				(_cor0, PrecL)
			in  let <D1> =
				%% Line 848
				apply 'lay'/2
				    (_cor403, _cor402)
			    in  let <_cor408> =
				    %% Line 851
				    call 'prettypr':'text'
					([46])
				in  let <_cor409> =
					%% Line 851
					call 'prettypr':'floating'
					    (_cor408)
				    in  let <_cor406> =
					    %% Line 852
					    call 'erl_syntax':'record_access_field'
						(_cor1)
					in  let <_cor405> =
						%% Line 853
						apply 'set_prec'/2
						    (_cor0, PrecR)
					    in  let <_cor407> =
						    %% Line 852
						    apply 'lay'/2
							(_cor406, _cor405)
						in  let <D2> =
							%% Line 850
							call 'prettypr':'beside'
							    (_cor409, _cor407)
						    in  let <_cor417> =
							    %% Line 854
							    case call 'erl_syntax':'record_access_type'
								     (_cor1) of
							      %% Line 855
							      <'none'> when 'true' ->
								  %% Line 856
								  D2
							      %% Line 857
							      <T> when 'true' ->
								  let <_cor413> =
								      %% Line 858
								      call 'prettypr':'text'
									  ([35])
								  in  let <_cor414> =
									  %% Line 858
									  call 'prettypr':'floating'
									      (_cor413)
								      in  let <_cor411> =
									      %% Line 859
									      apply 'reset_prec'/1
										  (_cor0)
									  in  let <_cor412> =
										  %% Line 859
										  apply 'lay'/2
										      (T, _cor411)
									      in  let <_cor415> =
										      %% Line 858
										      call 'prettypr':'beside'
											  (_cor414, _cor412)
										  in  %% Line 858
										      call 'prettypr':'beside'
											  (_cor415, %% Line 860
												    D2)
							    end
							in  let <_cor419> =
								%% Line 862
								call 'prettypr':'beside'
								    (D1, _cor417)
							    in  %% Line 862
								apply 'maybe_parentheses'/3
								    (_cor419, Prec, _cor0)
		( <_cor401> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor401})
		  -| ['compiler_generated'] )
	      end
	  %% Line 864
	  <'record_expr'> when 'true' ->
	      %% Line 865
	      case call 'erl_parse':'inop_prec'
		       ('#') of
		<{PrecL,Prec,_cor750}> when 'true' ->
		    let <Ctxt1> =
			%% Line 866
			apply 'reset_prec'/1
			    (_cor0)
		    in  let <_cor422> =
			    %% Line 867
			    call 'erl_syntax':'record_expr_type'
				(_cor1)
			in  let <D1> =
				%% Line 867
				apply 'lay'/2
				    (_cor422, Ctxt1)
			    in  let <_cor426> =
				    %% Line 868
				    call 'erl_syntax':'record_expr_fields'
					(_cor1)
				in  let <_cor424> =
					%% Line 869
					call 'prettypr':'text'
					    ([44])
				    in  let <_cor425> =
					    %% Line 869
					    call 'prettypr':'floating'
						(_cor424)
					in  let <_cor427> =
						%% Line 868
						apply 'seq'/4
						    (_cor426, _cor425, %% Line 869
								       Ctxt1, %% Line 870
									      ( 'lay'/2
										-| [{'id',{0,0,'-lay_2/2-fun-15-'}}] ))
					    in  let <D2> =
						    %% Line 868
						    call 'prettypr':'par'
							(_cor427)
						in  let <_cor434> =
							%% Line 871
							call 'prettypr':'text'
							    ([35])
						    in  let <_cor435> =
							    %% Line 871
							    call 'prettypr':'floating'
								(_cor434)
							in  let <_cor436> =
								%% Line 871
								call 'prettypr':'beside'
								    (_cor435, D1)
							    in  let <_cor432> =
								    %% Line 872
								    call 'prettypr':'text'
									([123])
								in  let <_cor429> =
									%% Line 873
									call 'prettypr':'text'
									    ([125])
								    in  let <_cor430> =
									    %% Line 873
									    call 'prettypr':'floating'
										(_cor429)
									in  let <_cor431> =
										%% Line 873
										call 'prettypr':'beside'
										    (D2, _cor430)
									    in  let <_cor433> =
										    %% Line 872
										    call 'prettypr':'beside'
											(_cor432, _cor431)
										in  let <D3> =
											%% Line 871
											call 'prettypr':'beside'
											    (_cor436, _cor433)
										    in  let <_cor441> =
											    %% Line 874
											    case call 'erl_syntax':'record_expr_argument'
												     (_cor1) of
											      %% Line 875
											      <'none'> when 'true' ->
												  %% Line 876
												  D3
											      %% Line 877
											      <A> when 'true' ->
												  let <_cor438> =
												      %% Line 878
												      apply 'set_prec'/2
													  (_cor0, PrecL)
												  in  let <_cor439> =
													  %% Line 878
													  apply 'lay'/2
													      (A, _cor438)
												      in  %% Line 878
													  call 'prettypr':'beside'
													      (_cor439, D3)
											    end
											in  %% Line 880
											    apply 'maybe_parentheses'/3
												(_cor441, Prec, _cor0)
		( <_cor420> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor420})
		  -| ['compiler_generated'] )
	      end
	  %% Line 882
	  <'record_field'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 883
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor444> =
		      %% Line 884
		      call 'erl_syntax':'record_field_name'
			  (_cor1)
		  in  let <D1> =
			  %% Line 884
			  apply 'lay'/2
			      (_cor444, Ctxt1)
		      in  %% Line 885
			  case call 'erl_syntax':'record_field_value'
				   (_cor1) of
			    %% Line 886
			    <'none'> when 'true' ->
				%% Line 887
				D1
			    %% Line 888
			    <V> when 'true' ->
				let <_cor448> =
				    %% Line 889
				    call 'prettypr':'text'
					([61])
				in  let <_cor449> =
					%% Line 889
					call 'prettypr':'floating'
					    (_cor448)
				    in  let <_cor450> =
					    %% Line 889
					    apply 'lay'/2
						(V, Ctxt1)
					in  %% Line 890
					    ( case Ctxt1 of
						( <( {'ctxt',_cor751,_cor752,_rec31,_cor753,_cor754,_cor755,_cor756,_cor757,_cor758}
						     -| ['compiler_generated'] )> when 'true' ->
						      call 'prettypr':'par'
							  ([D1|[_cor449|[_cor450|[]]]], _rec31)
						  -| ['compiler_generated'] )
						( <_cor759> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','ctxt'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
			  end
	  %% Line 893
	  <'record_index_expr'> when 'true' ->
	      %% Line 894
	      case call 'erl_parse':'preop_prec'
		       ('#') of
		<{Prec,PrecR}> when 'true' ->
		    let <_cor454> =
			%% Line 895
			call 'erl_syntax':'record_index_expr_type'
			    (_cor1)
		    in  let <_cor453> =
			    %% Line 896
			    apply 'reset_prec'/1
				(_cor0)
			in  let <D1> =
				%% Line 895
				apply 'lay'/2
				    (_cor454, _cor453)
			    in  let <_cor457> =
				    %% Line 897
				    call 'erl_syntax':'record_index_expr_field'
					(_cor1)
				in  let <_cor456> =
					%% Line 898
					apply 'set_prec'/2
					    (_cor0, PrecR)
				    in  let <D2> =
					    %% Line 897
					    apply 'lay'/2
						(_cor457, _cor456)
					in  let <_cor462> =
						%% Line 899
						call 'prettypr':'text'
						    ([35])
					    in  let <_cor463> =
						    %% Line 899
						    call 'prettypr':'floating'
							(_cor462)
						in  let <_cor464> =
							%% Line 899
							call 'prettypr':'beside'
							    (_cor463, D1)
						    in  let <_cor459> =
							    %% Line 900
							    call 'prettypr':'text'
								([46])
							in  let <_cor460> =
								%% Line 900
								call 'prettypr':'floating'
								    (_cor459)
							    in  let <_cor461> =
								    %% Line 900
								    call 'prettypr':'beside'
									(_cor460, D2)
								in  let <D3> =
									%% Line 899
									call 'prettypr':'beside'
									    (_cor464, _cor461)
								    in  %% Line 901
									apply 'maybe_parentheses'/3
									    (D3, Prec, _cor0)
		( <_cor452> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor452})
		  -| ['compiler_generated'] )
	      end
	  %% Line 903
	  <'map_expr'> when 'true' ->
	      %% Line 904
	      case call 'erl_parse':'inop_prec'
		       ('#') of
		<{PrecL,Prec,_cor760}> when 'true' ->
		    let <Ctxt1> =
			%% Line 905
			apply 'reset_prec'/1
			    (_cor0)
		    in  let <_cor470> =
			    %% Line 906
			    call 'erl_syntax':'map_expr_fields'
				(_cor1)
			in  let <_cor468> =
				%% Line 907
				call 'prettypr':'text'
				    ([44])
			    in  let <_cor469> =
				    %% Line 907
				    call 'prettypr':'floating'
					(_cor468)
				in  let <_cor471> =
					%% Line 906
					apply 'seq'/4
					    (_cor470, _cor469, %% Line 907
							       Ctxt1, %% Line 907
								      ( 'lay'/2
									-| [{'id',{0,0,'-lay_2/2-fun-16-'}}] ))
				    in  let <D1> =
					    %% Line 906
					    call 'prettypr':'par'
						(_cor471)
					in  let <_cor476> =
						%% Line 908
						call 'prettypr':'text'
						    ([35|[123]])
					    in  let <_cor473> =
						    %% Line 908
						    call 'prettypr':'text'
							([125])
						in  let <_cor474> =
							%% Line 908
							call 'prettypr':'floating'
							    (_cor473)
						    in  let <_cor475> =
							    %% Line 908
							    call 'prettypr':'beside'
								(D1, _cor474)
							in  let <D2> =
								%% Line 908
								call 'prettypr':'beside'
								    (_cor476, _cor475)
							    in  let <_cor481> =
								    %% Line 909
								    case call 'erl_syntax':'map_expr_argument'
									     (_cor1) of
								      %% Line 910
								      <'none'> when 'true' ->
									  %% Line 911
									  D2
								      %% Line 912
								      <A> when 'true' ->
									  let <_cor478> =
									      %% Line 913
									      apply 'set_prec'/2
										  (_cor0, PrecL)
									  in  let <_cor479> =
										  %% Line 913
										  apply 'lay'/2
										      (A, _cor478)
									      in  %% Line 913
										  call 'prettypr':'beside'
										      (_cor479, D2)
								    end
								in  %% Line 915
								    apply 'maybe_parentheses'/3
									(_cor481, Prec, _cor0)
		( <_cor466> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor466})
		  -| ['compiler_generated'] )
	      end
	  %% Line 917
	  <'map_field_assoc'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 918
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor484> =
		      %% Line 919
		      call 'erl_syntax':'map_field_assoc_name'
			  (_cor1)
		  in  let <D1> =
			  %% Line 919
			  apply 'lay'/2
			      (_cor484, Ctxt1)
		      in  let <_cor486> =
			      %% Line 920
			      call 'erl_syntax':'map_field_assoc_value'
				  (_cor1)
			  in  let <D2> =
				  %% Line 920
				  apply 'lay'/2
				      (_cor486, Ctxt1)
			      in  let <_cor490> =
				      %% Line 921
				      call 'prettypr':'text'
					  ([61|[62]])
				  in  let <_cor491> =
					  %% Line 921
					  call 'prettypr':'floating'
					      (_cor490)
				      in  %% Line 921
					  ( case Ctxt1 of
					      ( <( {'ctxt',_cor761,_cor762,_rec32,_cor763,_cor764,_cor765,_cor766,_cor767,_cor768}
						   -| ['compiler_generated'] )> when 'true' ->
						    call 'prettypr':'par'
							([D1|[_cor491|[D2|[]]]], _rec32)
						-| ['compiler_generated'] )
					      ( <_cor769> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','ctxt'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
	  %% Line 923
	  <'map_field_exact'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 924
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor493> =
		      %% Line 925
		      call 'erl_syntax':'map_field_exact_name'
			  (_cor1)
		  in  let <D1> =
			  %% Line 925
			  apply 'lay'/2
			      (_cor493, Ctxt1)
		      in  let <_cor495> =
			      %% Line 926
			      call 'erl_syntax':'map_field_exact_value'
				  (_cor1)
			  in  let <D2> =
				  %% Line 926
				  apply 'lay'/2
				      (_cor495, Ctxt1)
			      in  let <_cor499> =
				      %% Line 927
				      call 'prettypr':'text'
					  ([58|[61]])
				  in  let <_cor500> =
					  %% Line 927
					  call 'prettypr':'floating'
					      (_cor499)
				      in  %% Line 927
					  ( case Ctxt1 of
					      ( <( {'ctxt',_cor770,_cor771,_rec33,_cor772,_cor773,_cor774,_cor775,_cor776,_cor777}
						   -| ['compiler_generated'] )> when 'true' ->
						    call 'prettypr':'par'
							([D1|[_cor500|[D2|[]]]], _rec33)
						-| ['compiler_generated'] )
					      ( <_cor778> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','ctxt'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
	  %% Line 929
	  <'rule'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 932
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor502> =
		      %% Line 933
		      call 'erl_syntax':'rule_name'
			  (_cor1)
		  in  let <D1> =
			  %% Line 933
			  apply 'lay'/2
			      (_cor502, Ctxt1)
		      in  let <_cor504> =
			      %% Line 934
			      call 'erl_syntax':'rule_clauses'
				  (_cor1)
			  in  let <D2> =
				  %% Line 934
				  apply 'lay_clauses'/3
				      (_cor504, %% Line 935
						{'rule',D1}, %% Line 935
							     Ctxt1)
			      in  let <_cor506> =
				      %% Line 936
				      call 'prettypr':'text'
					  ([46])
				  in  let <_cor507> =
					  %% Line 936
					  call 'prettypr':'floating'
					      (_cor506)
				      in  %% Line 936
					  call 'prettypr':'beside'
					      (D2, _cor507)
	  %% Line 938
	  <'size_qualifier'> when 'true' ->
	      let <_cor508> =
		  %% Line 939
		  call 'erl_parse':'max_prec'
		      ()
	      in  let <Ctxt1> =
		      %% Line 939
		      apply 'set_prec'/2
			  (_cor0, _cor508)
		  in  let <_cor510> =
			  %% Line 940
			  call 'erl_syntax':'size_qualifier_body'
			      (_cor1)
		      in  let <D1> =
			      %% Line 940
			      apply 'lay'/2
				  (_cor510, Ctxt1)
			  in  let <_cor512> =
				  %% Line 941
				  call 'erl_syntax':'size_qualifier_argument'
				      (_cor1)
			      in  let <D2> =
				      %% Line 941
				      apply 'lay'/2
					  (_cor512, Ctxt1)
				  in  let <_cor514> =
					  %% Line 942
					  call 'prettypr':'text'
					      ([58])
				      in  let <_cor515> =
					      %% Line 942
					      call 'prettypr':'beside'
						  (_cor514, D2)
					  in  %% Line 942
					      call 'prettypr':'beside'
						  (D1, _cor515)
	  %% Line 944
	  <'text'> when 'true' ->
	      let <_cor516> =
		  %% Line 945
		  call 'erl_syntax':'text_string'
		      (_cor1)
	      in  %% Line 945
		  call 'prettypr':'text'
		      (_cor516)
	  %% Line 947
	  <'try_expr'> when 'true' ->
	      let <Ctxt1> =
		  %% Line 948
		  apply 'reset_prec'/1
		      (_cor0)
	      in  let <_cor520> =
		      %% Line 949
		      call 'erl_syntax':'try_expr_body'
			  (_cor1)
		  in  let <_cor518> =
			  %% Line 950
			  call 'prettypr':'text'
			      ([44])
		      in  let <_cor519> =
			      %% Line 950
			      call 'prettypr':'floating'
				  (_cor518)
			  in  let <_cor521> =
				  %% Line 949
				  apply 'seq'/4
				      (_cor520, _cor519, %% Line 950
							 Ctxt1, %% Line 950
								( 'lay'/2
								  -| [{'id',{0,0,'-lay_2/2-fun-17-'}}] ))
			      in  let <D1> =
				      %% Line 949
				      call 'prettypr':'sep'
					  (_cor521)
				  in  let <_cor523> =
					  %% Line 951
					  call 'prettypr':'text'
					      ([101|[110|[100]]])
				      in  let <Es0> =
					      %% Line 951
					      [_cor523|[]]
					  in  let <_cor534> =
						  %% Line 952
						  case call 'erl_syntax':'try_expr_after'
							   (_cor1) of
						    %% Line 953
						    <[]> when 'true' ->
							Es0
						    %% Line 954
						    <As> when 'true' ->
							let <_cor525> =
							    %% Line 955
							    call 'prettypr':'text'
								([44])
							in  let <_cor526> =
								%% Line 955
								call 'prettypr':'floating'
								    (_cor525)
							    in  let <_cor527> =
								    %% Line 955
								    apply 'seq'/4
									(As, _cor526, Ctxt1, %% Line 956
											     ( 'lay'/2
											       -| [{'id',{0,0,'-lay_2/2-fun-18-'}}] ))
								in  let <D2> =
									%% Line 955
									call 'prettypr':'sep'
									    (_cor527)
								    in  let <_cor529> =
									    %% Line 957
									    call 'prettypr':'text'
										([97|[102|[116|[101|[114]]]]])
									in  %% Line 958
									    ( case Ctxt1 of
										( <( {'ctxt',_cor779,_rec34,_cor780,_cor781,_cor782,_cor783,_cor784,_cor785,_cor786}
										     -| ['compiler_generated'] )> when 'true' ->
										      let <_cor532> =
											  call 'prettypr':'nest'
											      (_rec34, D2)
										      in  [_cor529|[_cor532|%% Line 959
													    Es0]]
										  -| ['compiler_generated'] )
										( <_cor787> when 'true' ->
										      ( call ( 'erlang'
											       -| ['compiler_generated'] ):( 'error'
															     -| ['compiler_generated'] )
											    (( {'badrecord','ctxt'}
											       -| ['compiler_generated'] ))
											-| ['compiler_generated'] )
										  -| ['compiler_generated'] )
									      end
									      -| ['compiler_generated'] )
						  end
					      in  let <_cor542> =
						      %% Line 961
						      case call 'erl_syntax':'try_expr_handlers'
							       (_cor1) of
							%% Line 962
							<[]> when 'true' ->
							    _cor534
							%% Line 963
							<Hs> when 'true' ->
							    let <D3> =
								%% Line 964
								apply 'lay_clauses'/3
								    (Hs, 'try_expr', Ctxt1)
							    in  let <_cor537> =
								    %% Line 965
								    call 'prettypr':'text'
									([99|[97|[116|[99|[104]]]]])
								in  %% Line 966
								    ( case Ctxt1 of
									( <( {'ctxt',_cor788,_rec35,_cor789,_cor790,_cor791,_cor792,_cor793,_cor794,_cor795}
									     -| ['compiler_generated'] )> when 'true' ->
									      let <_cor540> =
										  call 'prettypr':'nest'
										      (_rec35, D3)
									      in  [_cor537|[_cor540|_cor534]]
									  -| ['compiler_generated'] )
									( <_cor796> when 'true' ->
									      ( call ( 'erlang'
										       -| ['compiler_generated'] ):( 'error'
														     -| ['compiler_generated'] )
										    (( {'badrecord','ctxt'}
										       -| ['compiler_generated'] ))
										-| ['compiler_generated'] )
									  -| ['compiler_generated'] )
								      end
								      -| ['compiler_generated'] )
						      end
						  in  let <_cor550> =
							  %% Line 969
							  case call 'erl_syntax':'try_expr_clauses'
								   (_cor1) of
							    %% Line 970
							    <[]> when 'true' ->
								_cor542
							    %% Line 971
							    <Cs> when 'true' ->
								let <D4> =
								    %% Line 972
								    apply 'lay_clauses'/3
									(Cs, 'try_expr', Ctxt1)
								in  let <_cor545> =
									%% Line 973
									call 'prettypr':'text'
									    ([111|[102]])
								    in  %% Line 974
									( case Ctxt1 of
									    ( <( {'ctxt',_cor797,_rec36,_cor798,_cor799,_cor800,_cor801,_cor802,_cor803,_cor804}
										 -| ['compiler_generated'] )> when 'true' ->
										  let <_cor548> =
										      call 'prettypr':'nest'
											  (_rec36, D4)
										  in  [_cor545|[_cor548|_cor542]]
									      -| ['compiler_generated'] )
									    ( <_cor805> when 'true' ->
										  ( call ( 'erlang'
											   -| ['compiler_generated'] ):( 'error'
															 -| ['compiler_generated'] )
											(( {'badrecord','ctxt'}
											   -| ['compiler_generated'] ))
										    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									  end
									  -| ['compiler_generated'] )
							  end
						      in  let <_cor554> =
							      %% Line 977
							      call 'prettypr':'text'
								  ([116|[114|[121]]])
							  in  %% Line 977
							      ( case Ctxt1 of
								  ( <( {'ctxt',_cor806,_rec37,_cor807,_cor808,_cor809,_cor810,_cor811,_cor812,_cor813}
								       -| ['compiler_generated'] )> when 'true' ->
									let <_cor555> =
									    call 'prettypr':'follow'
										(_cor554, D1, _rec37)
									in  let <_cor556> =
										%% Line 978
										call 'erlang':'hd'
										    (_cor550)
									    in  let <_cor557> =
										    call 'prettypr':'par'
											([_cor555|%% Line 978
												  [_cor556|[]]])
										in  let <_cor558> =
											%% Line 979
											call 'erlang':'tl'
											    (_cor550)
										    in  call 'prettypr':'sep'
											    ([_cor557|_cor558])
								    -| ['compiler_generated'] )
								  ( <_cor814> when 'true' ->
									( call ( 'erlang'
										 -| ['compiler_generated'] ):( 'error'
													       -| ['compiler_generated'] )
									      (( {'badrecord','ctxt'}
										 -| ['compiler_generated'] ))
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
	  %% Line 981
	  <'warning_marker'> when 'true' ->
	      let <E> =
		  %% Line 982
		  call 'erl_syntax':'warning_marker_info'
		      (_cor1)
	      in  let <_cor562> =
		      %% Line 983
		      call 'prettypr':'text'
			  ([37|[37|[32|[87|[65|[82|[78|[73|[78|[71|[58|[32]]]]]]]]]]]])
		  in  let <_cor560> =
			  %% Line 984
			  apply 'reset_prec'/1
			      (_cor0)
		      in  let <_cor561> =
			      %% Line 984
			      apply 'lay_error_info'/2
				  (E, _cor560)
			  in  %% Line 983
			      call 'prettypr':'beside'
				  (_cor562, _cor561)
	  ( <_cor563> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor563})
	    -| ['compiler_generated'] )
	end
'lay_parentheses'/2 =
    %% Line 987
    fun (_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 988
	    call 'prettypr':'text'
		([40])
	in  let <_cor6> =
		%% Line 988
		call 'prettypr':'floating'
		    (_cor5)
	    in  let <_cor2> =
		    %% Line 988
		    call 'prettypr':'text'
			([41])
		in  let <_cor3> =
			%% Line 988
			call 'prettypr':'floating'
			    (_cor2)
		    in  let <_cor4> =
			    %% Line 988
			    call 'prettypr':'beside'
				(_cor1, _cor3)
			in  %% Line 988
			    call 'prettypr':'beside'
				(_cor6, _cor4)
'maybe_parentheses'/3 =
    %% Line 990
    fun (_cor2,_cor1,_cor0) ->
	%% Line 991
	( case _cor0 of
	    ( <( {'ctxt',_rec38,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16}
		 -| ['compiler_generated'] )> when 'true' ->
		  case _rec38 of
		    %% Line 992
		    <P>
			when call 'erlang':'>'
			      (_rec38,
			       _cor1) ->
			%% Line 993
			apply 'lay_parentheses'/2
			    (_cor2, _cor0)
		    %% Line 994
		    <_cor18> when 'true' ->
			_cor2
		  end
	      -| ['compiler_generated'] )
	    ( <_cor17> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','ctxt'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'lay_string'/2 =
    %% Line 998
    fun (_cor1,_cor0) ->
	%% Line 1001
	( case _cor0 of
	    ( <( {'ctxt',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_rec39,_cor15,_cor16}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor4> =
		      call 'erlang':'*'
			  (_rec39, 2)
		  in  let <W> =
			  call 'erlang':'div'
			      (_cor4, 3)
		      in  let <_cor6> =
			      %% Line 1002
			      call 'erlang':'length'
				  (_cor1)
			  in  %% Line 1002
			      apply 'lay_string_1'/3
				  (_cor1, _cor6, W)
	      -| ['compiler_generated'] )
	    ( <_cor17> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','ctxt'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'lay_string_1'/3 =
    %% Line 1004
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,L,W>
	      when let <_cor3> =
		    call 'erlang':'>'
			(L, W)
		in  let <_cor4> =
			call 'erlang':'>'
			    (W, 0)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      let <_cor5> =
		  %% Line 1006
		  call 'erlang':'-'
		      (W, 1)
	      in  %% Line 1006
		  case apply 'split_string'/3
			   (S, _cor5, L) of
		    %% Line 1007
		    <{_X_S1,[]}> when 'true' ->
			%% Line 1008
			call 'prettypr':'text'
			    (S)
		    %% Line 1009
		    <{S1,S2}> when 'true' ->
			let <_cor9> =
			    %% Line 1010
			    call 'erlang':'++'
				(S1, [34])
			in  let <_cor10> =
				%% Line 1010
				call 'prettypr':'text'
				    (_cor9)
			    in  let <_cor6> =
				    %% Line 1011
				    call 'erlang':'-'
					(L, W)
				in  let <_cor7> =
					%% Line 1011
					call 'erlang':'+'
					    (_cor6, 1)
				    in  let <_cor8> =
					    %% Line 1011
					    apply 'lay_string_1'/3
						([34|S2], _cor7, W)
					in  %% Line 1010
					    call 'prettypr':'above'
						(_cor10, _cor8)
		    ( <_cor11> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor11})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1013
	  <S,_X_L,_X_W> when 'true' ->
	      %% Line 1014
	      call 'prettypr':'text'
		  (S)
	end
'split_string'/3 =
    %% Line 1016
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1017
	apply 'split_string_1'/4
	    (_cor2, _cor1, _cor0, [])
'split_string_1'/4 =
    %% Line 1022
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[32|Xs],N,L,As>
	      when let <_cor4> =
		    call 'erlang':'=<'
			(N, 0)
		in  let <_cor5> =
			call 'erlang':'>='
			    (L, 5)
		    in  call 'erlang':'and'
			    (_cor4, _cor5) ->
	      let <_cor6> =
		  %% Line 1023
		  call 'lists':'reverse'
		      ([32|As])
	      in  %% Line 1023
		  {_cor6,Xs}
	  %% Line 1024
	  <[9|Xs],N,L,As>
	      when let <_cor7> =
		    call 'erlang':'=<'
			(N, 0)
		in  let <_cor8> =
			call 'erlang':'>='
			    (L, 5)
		    in  call 'erlang':'and'
			    (_cor7, _cor8) ->
	      let <_cor9> =
		  %% Line 1025
		  call 'lists':'reverse'
		      ([116|[92|As]])
	      in  %% Line 1025
		  {_cor9,Xs}
	  %% Line 1026
	  <[10|Xs],N,L,As>
	      when let <_cor10> =
		    call 'erlang':'=<'
			(N, 0)
		in  let <_cor11> =
			call 'erlang':'>='
			    (L, 5)
		    in  call 'erlang':'and'
			    (_cor10, _cor11) ->
	      let <_cor12> =
		  %% Line 1027
		  call 'lists':'reverse'
		      ([110|[92|As]])
	      in  %% Line 1027
		  {_cor12,Xs}
	  %% Line 1028
	  <[92|Xs],N,L,As> when 'true' ->
	      let <_cor14> =
		  %% Line 1029
		  call 'erlang':'-'
		      (N, 1)
	      in  let <_cor13> =
		      %% Line 1029
		      call 'erlang':'-'
			  (L, 1)
		  in  %% Line 1029
		      apply 'split_string_2'/4
			  (Xs, _cor14, _cor13, [92|As])
	  %% Line 1030
	  <Xs,N,L,As>
	      when let <_cor16> =
		    call 'erlang':'=<'
			(N, -10)
		in  let <_cor17> =
			call 'erlang':'>='
			    (L, 5)
		    in  call 'erlang':'and'
			    (_cor16, _cor17) ->
	      let <_cor18> =
		  %% Line 1031
		  call 'lists':'reverse'
		      (As)
	      in  %% Line 1031
		  {_cor18,Xs}
	  %% Line 1032
	  <[X|Xs],N,L,As> when 'true' ->
	      let <_cor20> =
		  %% Line 1033
		  call 'erlang':'-'
		      (N, 1)
	      in  let <_cor19> =
		      %% Line 1033
		      call 'erlang':'-'
			  (L, 1)
		  in  %% Line 1033
		      apply 'split_string_1'/4
			  (Xs, _cor20, _cor19, [X|As])
	  %% Line 1034
	  <[],_X_N,_X_L,As> when 'true' ->
	      let <_cor21> =
		  %% Line 1035
		  call 'lists':'reverse'
		      (As)
	      in  %% Line 1035
		  {_cor21,[]}
	  ( <_cor25,_cor24,_cor23,_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor25,_cor24,_cor23,_cor22})
		  -| [{'function_name',{'split_string_1',4}}] )
	    -| ['compiler_generated'] )
	end
'split_string_2'/4 =
    %% Line 1037
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[94|[X|Xs]],N,L,As> when 'true' ->
	      let <_cor5> =
		  %% Line 1038
		  call 'erlang':'-'
		      (N, 2)
	      in  let <_cor4> =
		      %% Line 1038
		      call 'erlang':'-'
			  (L, 2)
		  in  %% Line 1038
		      apply 'split_string_1'/4
			  (Xs, _cor5, _cor4, [X|[94|As]])
	  %% Line 1039
	  <[X1|[X2|[X3|Xs]]],N,L,As>
	      when %% Line 1040
		try
		    let <_cor6> =
			call 'erlang':'>='
			    (X1, 48)
		    in  let <_cor7> =
			    call 'erlang':'=<'
				(X1, 55)
			in  let <_cor8> =
				call 'erlang':'>='
				    (X2, 48)
			    in  let <_cor9> =
				    call 'erlang':'=<'
					(X2, 55)
				in  let <_cor10> =
					call 'erlang':'>='
					    (X3, 48)
				    in  let <_cor11> =
					    call 'erlang':'=<'
						(X3, 55)
					in  let <_cor12> =
						call 'erlang':'and'
						    (_cor10, _cor11)
					    in  let <_cor13> =
						    call 'erlang':'and'
							(_cor9, _cor12)
						in  let <_cor14> =
							call 'erlang':'and'
							    (_cor8, _cor13)
						    in  let <_cor15> =
							    call 'erlang':'and'
								(_cor7, _cor14)
							in  call 'erlang':'and'
								(_cor6, _cor15)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor17> =
		  %% Line 1041
		  call 'erlang':'-'
		      (N, 3)
	      in  let <_cor16> =
		      %% Line 1041
		      call 'erlang':'-'
			  (L, 3)
		  in  %% Line 1041
		      apply 'split_string_1'/4
			  (Xs, _cor17, _cor16, [X3|[X2|[X1|As]]])
	  %% Line 1042
	  <[X1|[X2|Xs]],N,L,As>
	      when %% Line 1043
		try
		    let <_cor18> =
			call 'erlang':'>='
			    (X1, 48)
		    in  let <_cor19> =
			    call 'erlang':'=<'
				(X1, 55)
			in  let <_cor20> =
				call 'erlang':'>='
				    (X2, 48)
			    in  let <_cor21> =
				    call 'erlang':'=<'
					(X2, 55)
				in  let <_cor22> =
					call 'erlang':'and'
					    (_cor20, _cor21)
				    in  let <_cor23> =
					    call 'erlang':'and'
						(_cor19, _cor22)
					in  call 'erlang':'and'
						(_cor18, _cor23)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor25> =
		  %% Line 1044
		  call 'erlang':'-'
		      (N, 2)
	      in  let <_cor24> =
		      %% Line 1044
		      call 'erlang':'-'
			  (L, 2)
		  in  %% Line 1044
		      apply 'split_string_1'/4
			  (Xs, _cor25, _cor24, [X2|[X1|As]])
	  %% Line 1045
	  <[X|Xs],N,L,As> when 'true' ->
	      let <_cor27> =
		  %% Line 1046
		  call 'erlang':'-'
		      (N, 1)
	      in  let <_cor26> =
		      %% Line 1046
		      call 'erlang':'-'
			  (L, 1)
		  in  %% Line 1046
		      apply 'split_string_1'/4
			  (Xs, _cor27, _cor26, [X|As])
	  ( <_cor31,_cor30,_cor29,_cor28> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor31,_cor30,_cor29,_cor28})
		  -| [{'function_name',{'split_string_2',4}}] )
	    -| ['compiler_generated'] )
	end
'lay_clauses'/3 =
    %% Line 1052
    fun (_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 1053
	    call 'prettypr':'text'
		([59])
	in  let <_cor7> =
		%% Line 1053
		call 'prettypr':'floating'
		    (_cor6)
	    in  %% Line 1054
		case _cor0 of
		  <{'ctxt',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20}> when 'true' ->
		      let <_cor5> =
			  call 'erlang':'setelement'
			      (5, _cor0, _cor1)
		      in  let <_cor8> =
			      apply 'seq'/4
				  (_cor2, _cor7, _cor5, %% Line 1055
							( 'lay'/2
							  -| [{'id',{0,0,'-lay_clauses/3-fun-0-'}}] ))
			  in  apply 'vertical'/1
				  (_cor8)
		  ( <_cor21> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','ctxt'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
'make_fun_clause'/4 =
    %% Line 1061
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1062
	apply 'make_fun_clause'/5
	    ('none', _cor3, _cor2, _cor1, _cor0)
'make_fun_clause'/5 =
    %% Line 1064
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <D> =
	    %% Line 1065
	    apply 'make_fun_clause_head'/3
		(_cor4, _cor3, _cor0)
	in  %% Line 1066
	    apply 'make_case_clause'/4
		(D, _cor2, _cor1, _cor0)
'make_fun_clause_head'/3 =
    %% Line 1068
    fun (_cor2,_cor1,_cor0) ->
	let <D> =
	    %% Line 1069
	    apply 'lay_parentheses'/2
		(_cor1, _cor0)
	in  %% Line 1070
	    case <> of
	      <>
		  when call 'erlang':'=:='
			(_cor2,
			 'none') ->
		  %% Line 1071
		  D
	      %% Line 1072
	      <> when 'true' ->
		  %% Line 1073
		  call 'prettypr':'beside'
		      (_cor2, D)
	    end
'make_rule_clause'/5 =
    %% Line 1076
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <D> =
	    %% Line 1077
	    apply 'make_fun_clause_head'/3
		(_cor4, _cor3, _cor0)
	in  let <_cor6> =
		%% Line 1078
		apply 'append_guard'/3
		    (_cor2, D, _cor0)
	    in  %% Line 1078
		apply 'append_rule_body'/3
		    (_cor1, _cor6, _cor0)
'make_case_clause'/4 =
    %% Line 1080
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 1081
	    apply 'append_guard'/3
		(_cor2, _cor3, _cor0)
	in  %% Line 1081
	    apply 'append_clause_body'/3
		(_cor1, _cor4, _cor0)
'make_if_clause'/4 =
    %% Line 1083
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 1085
	    case <> of
	      <>
		  when call 'erlang':'=:='
			(_cor2,
			 'none') ->
		  %% Line 1086
		  call 'prettypr':'text'
		      ([116|[114|[117|[101]]]])
	      %% Line 1087
	      <> when 'true' ->
		  _cor2
	    end
	in  %% Line 1090
	    apply 'append_clause_body'/3
		(_cor1, _cor4, _cor0)
'append_clause_body'/3 =
    %% Line 1092
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 1093
	    call 'prettypr':'text'
		([32|[45|[62]]])
	in  let <_cor4> =
		%% Line 1093
		call 'prettypr':'floating'
		    (_cor3)
	    in  %% Line 1093
		apply 'append_clause_body'/4
		    (_cor2, _cor1, _cor4, _cor0)
'append_rule_body'/3 =
    %% Line 1095
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 1096
	    call 'prettypr':'text'
		([32|[58|[45]]])
	in  let <_cor4> =
		%% Line 1096
		call 'prettypr':'floating'
		    (_cor3)
	    in  %% Line 1096
		apply 'append_clause_body'/4
		    (_cor2, _cor1, _cor4, _cor0)
'append_clause_body'/4 =
    %% Line 1098
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 1099
	    call 'prettypr':'beside'
		(_cor2, _cor1)
	in  %% Line 1099
	    ( case _cor0 of
		( <( {'ctxt',_cor12,_cor13,_rec41,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <_cor7> =
			  call 'prettypr':'nest'
			      (_rec41, _cor3)
		      in  call 'prettypr':'sep'
			      ([_cor4|[_cor7|[]]])
		  -| ['compiler_generated'] )
		( <_cor20> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','ctxt'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'append_guard'/3 =
    %% Line 1101
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'none',D,_cor12> when 'true' ->
	      %% Line 1102
	      D
	  %% Line 1103
	  <G,D,Ctxt> when 'true' ->
	      let <_cor7> =
		  %% Line 1104
		  call 'prettypr':'text'
		      ([119|[104|[101|[110]]]])
	      in  %% Line 1104
		  ( case Ctxt of
		      ( <( {'ctxt',_cor13,_rec42,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_cor8> =
				call 'prettypr':'follow'
				    (_cor7, G, _rec42)
			    in  call 'prettypr':'par'
				    ([D|[_cor8|[]]], _cor14)
			-| ['compiler_generated'] )
		      ( <_cor21> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','ctxt'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	end
'lay_bit_types'/2 =
    %% Line 1107
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[T|[]],Ctxt> when 'true' ->
	      %% Line 1108
	      apply 'lay'/2
		  (T, Ctxt)
	  %% Line 1109
	  <[T|Ts],Ctxt> when 'true' ->
	      let <_cor6> =
		  %% Line 1110
		  apply 'lay'/2
		      (T, Ctxt)
	      in  let <_cor3> =
		      %% Line 1111
		      call 'prettypr':'text'
			  ([45])
		  in  let <_cor4> =
			  %% Line 1111
			  call 'prettypr':'floating'
			      (_cor3)
		      in  let <_cor2> =
			      %% Line 1112
			      apply 'lay_bit_types'/2
				  (Ts, Ctxt)
			  in  let <_cor5> =
				  %% Line 1111
				  call 'prettypr':'beside'
				      (_cor4, _cor2)
			      in  %% Line 1110
				  call 'prettypr':'beside'
				      (_cor6, _cor5)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'lay_bit_types',2}}] )
	    -| ['compiler_generated'] )
	end
'lay_error_info'/2 =
    %% Line 1114
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <T0 = {L,M,T},Ctxt>
	      when let <_cor2> =
		    call 'erlang':'is_integer'
			(L)
		in  let <_cor3> =
			call 'erlang':'is_atom'
			    (M)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      let <_cor4> =
		  catch
		      %% Line 1115
		      call M:'format_error'
			  (T)
	      in  %% Line 1115
		  case _cor4 of
		    %% Line 1116
		    <S>
			when call 'erlang':'is_list'
			      (_cor4) ->
			%% Line 1117
			case <> of
			  <>
			      when call 'erlang':'>'
				    (L,
				     0) ->
			      let <_cor6> =
				  %% Line 1118
				  call 'io_lib':'format'
				      ([126|[119|[58|[32]]]], [L|[]])
			      in  let <_cor7> =
				      %% Line 1118
				      call 'prettypr':'text'
					  (_cor6)
				  in  let <_cor5> =
					  %% Line 1118
					  call 'prettypr':'text'
					      (S)
				      in  %% Line 1118
					  call 'prettypr':'beside'
					      (_cor7, _cor5)
			  %% Line 1119
			  <> when 'true' ->
			      %% Line 1120
			      call 'prettypr':'text'
				  (S)
			end
		    %% Line 1122
		    <_cor11> when 'true' ->
			%% Line 1123
			apply 'lay_concrete'/2
			    (T0, Ctxt)
		  end
	  %% Line 1125
	  <T,Ctxt> when 'true' ->
	      %% Line 1126
	      apply 'lay_concrete'/2
		  (T, Ctxt)
	end
'lay_concrete'/2 =
    %% Line 1128
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 1129
	    call 'erl_syntax':'abstract'
		(_cor1)
	in  %% Line 1129
	    apply 'lay'/2
		(_cor2, _cor0)
'seq'/4 =
    %% Line 1131
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[H|T],Separator,Ctxt,Fun> when 'true' ->
	      %% Line 1132
	      case T of
		%% Line 1133
		<[]> when 'true' ->
		    let <_cor4> =
			%% Line 1134
			apply Fun
			    (H, Ctxt)
		    in  %% Line 1134
			[_cor4|[]]
		%% Line 1135
		<_cor14> when 'true' ->
		    let <_cor5> =
			%% Line 1136
			apply Fun
			    (H, Ctxt)
		    in  let <_cor6> =
			    %% Line 1136
			    apply 'maybe_append'/2
				(Separator, _cor5)
			in  let <_cor7> =
				%% Line 1137
				apply 'seq'/4
				    (T, Separator, Ctxt, Fun)
			    in  %% Line 1136
				[_cor6|_cor7]
	      end
	  %% Line 1139
	  <[],_cor15,_cor16,_cor17> when 'true' ->
	      let <_cor9> =
		  %% Line 1140
		  call 'prettypr':'empty'
		      ()
	      in  %% Line 1140
		  [_cor9|[]]
	  ( <_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10})
		  -| [{'function_name',{'seq',4}}] )
	    -| ['compiler_generated'] )
	end
'maybe_append'/2 =
    %% Line 1142
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'none',D> when 'true' ->
	      %% Line 1143
	      D
	  %% Line 1144
	  <Suffix,D> when 'true' ->
	      %% Line 1145
	      call 'prettypr':'beside'
		  (D, Suffix)
	end
'vertical'/1 =
    %% Line 1147
    fun (_cor0) ->
	case _cor0 of
	  <[D|[]]> when 'true' ->
	      %% Line 1148
	      D
	  %% Line 1149
	  <[D|Ds]> when 'true' ->
	      let <_cor1> =
		  %% Line 1150
		  apply 'vertical'/1
		      (Ds)
	      in  %% Line 1150
		  call 'prettypr':'above'
		      (D, _cor1)
	  %% Line 1151
	  <[]> when 'true' ->
	      %% Line 1152
	      []
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'vertical',1}}] )
	    -| ['compiler_generated'] )
	end
'vertical_sep'/2 =
    %% Line 1154
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Sep,[D|[]]> when 'true' ->
	      %% Line 1155
	      D
	  %% Line 1156
	  <Sep,[D|Ds]> when 'true' ->
	      let <_cor3> =
		  %% Line 1157
		  call 'prettypr':'above'
		      (D, Sep)
	      in  let <_cor2> =
		      %% Line 1157
		      apply 'vertical_sep'/2
			  (Sep, Ds)
		  in  %% Line 1157
		      call 'prettypr':'above'
			  (_cor3, _cor2)
	  %% Line 1158
	  <_X_Sep,[]> when 'true' ->
	      %% Line 1159
	      []
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'vertical_sep',2}}] )
	    -| ['compiler_generated'] )
	end
'spaces'/1 =
    %% Line 1161
    fun (_cor0) ->
	case _cor0 of
	  <N>
	      when call 'erlang':'>'
		    (_cor0,
		     0) ->
	      let <_cor1> =
		  %% Line 1162
		  call 'erlang':'-'
		      (N, 1)
	      in  let <_cor2> =
		      %% Line 1162
		      apply 'spaces'/1
			  (_cor1)
		  in  %% Line 1162
		      [32|_cor2]
	  %% Line 1163
	  <_cor4> when 'true' ->
	      %% Line 1164
	      []
	end
'tidy_float'/1 =
    %% Line 1166
    fun (_cor0) ->
	case _cor0 of
	  <[46|[C|Cs]]> when 'true' ->
	      let <_cor1> =
		  %% Line 1167
		  apply 'tidy_float_1'/1
		      (Cs)
	      in  %% Line 1167
		  [46|[C|_cor1]]
	  %% Line 1168
	  <Cs = [101|_cor4]> when 'true' ->
	      %% Line 1169
	      apply 'tidy_float_2'/1
		  (Cs)
	  %% Line 1170
	  <[C|Cs]> when 'true' ->
	      let <_cor2> =
		  %% Line 1171
		  apply 'tidy_float'/1
		      (Cs)
	      in  %% Line 1171
		  [C|_cor2]
	  %% Line 1172
	  <[]> when 'true' ->
	      %% Line 1173
	      []
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'tidy_float',1}}] )
	    -| ['compiler_generated'] )
	end
'tidy_float_1'/1 =
    %% Line 1175
    fun (_cor0) ->
	case _cor0 of
	  <[48|[48|[48|Cs]]]> when 'true' ->
	      %% Line 1176
	      apply 'tidy_float_2'/1
		  (Cs)
	  %% Line 1177
	  <Cs = [101|_cor3]> when 'true' ->
	      %% Line 1178
	      apply 'tidy_float_2'/1
		  (Cs)
	  %% Line 1179
	  <[C|Cs]> when 'true' ->
	      let <_cor1> =
		  %% Line 1180
		  apply 'tidy_float_1'/1
		      (Cs)
	      in  %% Line 1180
		  [C|_cor1]
	  %% Line 1181
	  <[]> when 'true' ->
	      %% Line 1182
	      []
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'tidy_float_1',1}}] )
	    -| ['compiler_generated'] )
	end
'tidy_float_2'/1 =
    %% Line 1184
    fun (_cor0) ->
	case _cor0 of
	  <[101|[43|[48]]]> when 'true' ->
	      []
	  %% Line 1185
	  <[101|[43|[48|Cs]]]> when 'true' ->
	      apply 'tidy_float_2'/1
		  ([101|[43|Cs]])
	  %% Line 1186
	  <Cs = [101|[43|_cor2]]> when 'true' ->
	      Cs
	  %% Line 1187
	  <[101|[45|[48]]]> when 'true' ->
	      []
	  %% Line 1188
	  <[101|[45|[48|Cs]]]> when 'true' ->
	      apply 'tidy_float_2'/1
		  ([101|[45|Cs]])
	  %% Line 1189
	  <Cs = [101|[45|_cor3]]> when 'true' ->
	      Cs
	  %% Line 1190
	  <[101|Cs]> when 'true' ->
	      apply 'tidy_float_2'/1
		  ([101|[43|Cs]])
	  %% Line 1191
	  <[_X_C|Cs]> when 'true' ->
	      apply 'tidy_float_2'/1
		  (Cs)
	  %% Line 1192
	  <[]> when 'true' ->
	      []
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'tidy_float_2',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('erl_prettypr')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('erl_prettypr', _cor0)
end