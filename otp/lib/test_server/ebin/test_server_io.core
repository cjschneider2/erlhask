module 'test_server_io' ['end_transaction'/0,
			 'finish'/0,
			 'get_gl'/1,
			 'handle_call'/3,
			 'handle_info'/2,
			 'init'/1,
			 'module_info'/0,
			 'module_info'/1,
			 'print'/3,
			 'print_buffered'/1,
			 'print_unexpected'/1,
			 'reset_state'/0,
			 'set_fd'/2,
			 'set_footer'/1,
			 'set_gl_props'/1,
			 'set_job_name'/1,
			 'start_link'/0,
			 'start_transaction'/0,
			 'stop'/1,
			 'terminate'/2]
    attributes [%% Line 40
		'type' =
		    %% Line 40
		    [{{'record','st'},[{'record_field',40,{'atom',40,'fds'}}|[{'record_field',41,{'atom',41,'tags'},{'nil',41}}|[{'typed_record_field',{'record_field',42,{'atom',42,'shared_gl'}},{'type',42,'union',[{'atom',42,'undefined'}|[{'type',42,'pid',[]}]]}}|[{'record_field',43,{'atom',43,'gls'}}|[{'record_field',44,{'atom',44,'io_buffering'},{'atom',44,'false'}}|[{'record_field',45,{'atom',45,'buffered'}}|[{'record_field',46,{'atom',46,'html_footer'}}|[{'record_field',47,{'atom',47,'job_name'}}|[{'record_field',48,{'atom',48,'gl_props'}}|[{'record_field',49,{'atom',49,'phase'}}|[{'record_field',50,{'atom',50,'offline_buffer'}}|[{'record_field',51,{'atom',51,'stopping'}}|[{'record_field',52,{'atom',52,'pending_ops'}}]]]]]]]]]]]]],[]}]]
'start_link'/0 =
    %% Line 55
    fun () ->
	%% Line 56
	case call 'erlang':'whereis'
		 ('test_server_io') of
	  %% Line 57
	  <'undefined'> when 'true' ->
	      %% Line 58
	      case call 'gen_server':'start_link'
		       ({'local','test_server_io'}, 'test_server_io', [], []) of
		%% Line 59
		<{'ok',Pid}> when 'true' ->
		    %% Line 60
		    {'ok',Pid}
		%% Line 61
		<Other> when 'true' ->
		    %% Line 62
		    Other
	      end
	  %% Line 64
	  <Pid> when 'true' ->
	      do  %% Line 66
		  apply 'reset_state'/0
		      ()
		  %% Line 67
		  {'ok',Pid}
	end
'stop'/1 =
    %% Line 70
    fun (_cor0) ->
	let <OldGL> =
	    %% Line 71
	    call 'erlang':'group_leader'
		()
	in  let <_cor3> =
		%% Line 72
		call 'erlang':'self'
		    ()
	    in  let <_cor2> =
		    %% Line 72
		    call 'erlang':'self'
			()
		in  do  %% Line 72
			call 'erlang':'group_leader'
			    (_cor3, _cor2)
			do  %% Line 73
			    apply 'req'/1
				({'stop',_cor0})
			    let <_cor4> =
				%% Line 74
				call 'erlang':'self'
				    ()
			    in  do  %% Line 74
				    call 'erlang':'group_leader'
					(OldGL, _cor4)
				    %% Line 75
				    'ok'
'finish'/0 =
    %% Line 77
    fun () ->
	%% Line 78
	apply 'req'/1
	    ('finish')
'get_gl'/1 =
    %% Line 90
    fun (_cor0) ->
	case _cor0 of
	  <Shared>
	      when call 'erlang':'is_boolean'
		    (_cor0) ->
	      %% Line 91
	      apply 'req'/1
		  ({'get_gl',Shared})
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'get_gl',1}}] )
	    -| ['compiler_generated'] )
	end
'set_fd'/2 =
    %% Line 100
    fun (_cor1,_cor0) ->
	%% Line 101
	apply 'req'/1
	    ({'set_fd',_cor1,_cor0})
'start_transaction'/0 =
    %% Line 108
    fun () ->
	let <_cor0> =
	    %% Line 109
	    call 'erlang':'self'
		()
	in  %% Line 109
	    apply 'req'/1
		({'start_transaction',_cor0})
'end_transaction'/0 =
    %% Line 116
    fun () ->
	let <_cor0> =
	    %% Line 117
	    call 'erlang':'self'
		()
	in  %% Line 117
	    apply 'req'/1
		({'end_transaction',_cor0})
'print'/3 =
    %% Line 130
    fun (_cor2,_cor1,_cor0) ->
	%% Line 131
	apply 'req'/1
	    ({'print',_cor2,_cor1,_cor0})
'print_buffered'/1 =
    %% Line 140
    fun (_cor0) ->
	%% Line 141
	apply 'req'/1
	    ({'print_buffered',_cor0})
'print_unexpected'/1 =
    %% Line 148
    fun (_cor0) ->
	%% Line 149
	apply 'print'/3
	    ('xxxFrom', 'unexpected_io', _cor0)
'set_footer'/1 =
    %% Line 156
    fun (_cor0) ->
	%% Line 157
	apply 'req'/1
	    ({'set_footer',_cor0})
'set_job_name'/1 =
    %% Line 165
    fun (_cor0) ->
	%% Line 166
	apply 'req'/1
	    ({'set_job_name',_cor0})
'set_gl_props'/1 =
    %% Line 173
    fun (_cor0) ->
	%% Line 174
	apply 'req'/1
	    ({'set_gl_props',_cor0})
'reset_state'/0 =
    %% Line 179
    fun () ->
	%% Line 180
	apply 'req'/1
	    ('reset_state')
'init'/1 =
    %% Line 184
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      do  %% Line 185
		  call 'erlang':'process_flag'
		      ('trap_exit', 'true')
		  let <Empty> =
		      %% Line 186
		      call 'gb_trees':'empty'
			  ()
		  in  %% Line 187
		      case call 'test_server_gl':'start_link'
			       () of
			<{'ok',Shared}> when 'true' ->
			    let <_cor4> =
				%% Line 188
				call 'gb_sets':'empty'
				    ()
			    in  let <_cor3> =
				    %% Line 189
				    call 'gb_sets':'empty'
					()
				in  %% Line 188
				    {'ok',{'st',Empty,[],Shared,_cor4,_cor3,%% Line 190
									    Empty,%% Line 191
										  [60|[47|[98|[111|[100|[121|[62|[10|[60|[47|[104|[116|[109|[108|[62|[10]]]]]]]]]]]]]]]],%% Line 192
																					 [60|[110|[97|[109|[101|[32|[110|[111|[116|[32|[115|[101|[116|[62]]]]]]]]]]]]]],%% Line 193
																															[],%% Line 194
																															   'starting',%% Line 195
																																      [],'undefined',%% Line 196
																																		     []}}
			( <_cor2> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor2})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5})
		  -| [{'function_name',{'init',1}}] )
	    -| ['compiler_generated'] )
	end
'req'/1 =
    %% Line 198
    fun (_cor0) ->
	%% Line 199
	call 'gen_server':'call'
	    ('test_server_io', _cor0, 'infinity')
'handle_call'/3 =
    %% Line 201
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'get_gl','false'},_X_From,St = {'st',_cor117,_cor118,_cor119,Gls,_cor120,_cor121,_cor122,_cor123,Props,_cor124,_cor125,_cor126,_cor127}> when 'true' ->
	      %% Line 202
	      case call 'test_server_gl':'start_link'
		       () of
		<{'ok',Pid}> when 'true' ->
		    do  %% Line 203
			call 'test_server_gl':'set_props'
			    (Pid, Props)
			let <_rec0> =
			    %% Line 204
			    call 'gb_sets':'insert'
				(Pid, Gls)
			in  let <_cor7> =
				%% Line 204
				call 'erlang':'setelement'
				    (5, St, _rec0)
			    in  %% Line 204
				{'reply',Pid,_cor7}
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 205
	  <{'get_gl','true'},_X_From,St = {'st',_cor142,_cor143,Shared,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150,_cor151,_cor152,_cor153}> when 'true' ->
	      %% Line 206
	      {'reply',Shared,St}
	  %% Line 207
	  <{'set_fd',Tag,Fd},_X_From,St = {'st',Fds0,Tags0,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,%% Line 208
															   OfflineBuff,_cor162,_cor163}> when 'true' ->
	      let <Fds> =
		  %% Line 209
		  call 'gb_trees':'enter'
		      (Tag, Fd, Fds0)
	      in  let <_cor9> =
		      %% Line 210
		      call 'lists':'delete'
			  (Tag, Tags0)
		  in  let <_rec2> =
			  %% Line 210
			  [Tag|_cor9]
		      in  let <_cor12> =
			      %% Line 210
			      call 'erlang':'setelement'
				  (3, St, _rec2)
			  in  let <_cor14> =
				  %% Line 210
				  call 'erlang':'setelement'
				      (2, _cor12, Fds)
			      in  let <_cor20> =
				      %% Line 212
				      case <> of
					<>
					    when call 'erlang':'=:='
						  (OfflineBuff,
						   []) ->
					    %% Line 213
					    []
					%% Line 214
					<> when 'true' ->
					    let <_cor19> =
						%% Line 216
						( fun (_cor17) ->
						      case _cor17 of
							<{T,From,Str}>
							    when call 'erlang':'=='
								  (T,
								   Tag) ->
							    do  %% Line 217
								apply 'output'/4
								    (From, Tag, Str, _cor14)
								%% Line 218
								'false'
							%% Line 219
							<_cor178> when 'true' ->
							    %% Line 220
							    'true'
						      end
						  -| [{'id',{0,0,'-handle_call/3-fun-0-'}}] )
					    in  let <_cor16> =
						    %% Line 221
						    call 'lists':'reverse'
							(OfflineBuff)
						in  %% Line 216
						    call 'lists':'filtermap'
							(_cor19, _cor16)
				      end
				  in  let <_rec4> =
					  %% Line 224
					  call 'lists':'reverse'
					      (_cor20)
				      in  %% Line 223
					  case _cor14 of
					    <{'st',_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191}> when 'true' ->
						let <_cor24> =
						    %% Line 224
						    call 'erlang':'setelement'
							(12, _cor14, _rec4)
						in  let <_cor26> =
							call 'erlang':'setelement'
							    (11, _cor24, 'started')
						    in  {'reply','ok',_cor26}
					    ( <_cor192> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','st'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
	  %% Line 225
	  <{'start_transaction',Pid},_X_From,St = {'st',_cor193,_cor194,_cor195,_cor196,Buffer0,%% Line 226
												Buf0,_cor197,_cor198,_cor199,_cor200,_cor201,_cor202,_cor203}> when 'true' ->
	      let <_cor29> =
		  %% Line 227
		  case call 'gb_trees':'is_defined'
			   (Pid, Buf0) of
		    %% Line 228
		    <'false'> when 'true' ->
			let <_cor27> =
			    call 'queue':'new'
				()
			in  call 'gb_trees':'insert'
				(Pid, _cor27, Buf0)
		    %% Line 229
		    <'true'> when 'true' ->
			Buf0
		    ( <_cor28> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor28})
		      -| ['compiler_generated'] )
		  end
	      in  let <Buffer> =
		      %% Line 231
		      call 'gb_sets':'add'
			  (Pid, Buffer0)
		  in  let <_cor33> =
			  %% Line 232
			  call 'erlang':'setelement'
			      (7, St, _cor29)
		      in  let <_cor35> =
			      %% Line 232
			      call 'erlang':'setelement'
				  (6, _cor33, Buffer)
			  in  %% Line 232
			      {'reply','ok',_cor35}
	  %% Line 233
	  <{'print',From,Tag,Str},_X_From,St0> when 'true' ->
	      let <St> =
		  %% Line 234
		  apply 'output'/4
		      (From, Tag, Str, St0)
	      in  %% Line 235
		  {'reply','ok',St}
	  %% Line 236
	  <{'end_transaction',Pid},_X_From,St0 = {'st',_cor218,_cor219,_cor220,_cor221,Buffer0,%% Line 237
											       Buffered0,_cor222,_cor223,_cor224,_cor225,_cor226,_cor227,_cor228}> when 'true' ->
	      let <Q0> =
		  %% Line 238
		  call 'gb_trees':'get'
		      (Pid, Buffered0)
	      in  let <Q> =
		      %% Line 239
		      call 'queue':'in'
			  ('eot', Q0)
		  in  let <Buffered> =
			  %% Line 240
			  call 'gb_trees':'update'
			      (Pid, Q, Buffered0)
		      in  let <Buffer> =
			      %% Line 241
			      call 'gb_sets':'delete_any'
				  (Pid, Buffer0)
			  in  let <_cor42> =
				  %% Line 242
				  call 'erlang':'setelement'
				      (7, St0, Buffered)
			      in  let <_cor44> =
				      %% Line 242
				      call 'erlang':'setelement'
					  (6, _cor42, Buffer)
				  in  %% Line 243
				      {'reply','ok',_cor44}
	  %% Line 244
	  <{'print_buffered',Pid},_X_From,St0 = {'st',_cor243,_cor244,_cor245,_cor246,_cor247,Buffered0,_cor248,_cor249,_cor250,_cor251,_cor252,_cor253,_cor254}> when 'true' ->
	      let <Q0> =
		  %% Line 245
		  call 'gb_trees':'get'
		      (Pid, Buffered0)
	      in  let <Q> =
		      %% Line 246
		      apply 'do_print_buffered'/2
			  (Q0, St0)
		  in  let <Buffered> =
			  %% Line 247
			  call 'gb_trees':'update'
			      (Pid, Q, Buffered0)
		      in  let <_cor51> =
			      %% Line 248
			      call 'erlang':'setelement'
				  (7, St0, Buffered)
			  in  %% Line 249
			      {'reply','ok',_cor51}
	  %% Line 250
	  <{'set_footer',Footer},_X_From,St> when 'true' ->
	      %% Line 251
	      case St of
		<{'st',_cor269,_cor270,_cor271,_cor272,_cor273,_cor274,_cor275,_cor276,_cor277,_cor278,_cor279,_cor280,_cor281}> when 'true' ->
		    let <_cor55> =
			call 'erlang':'setelement'
			    (8, St, Footer)
		    in  {'reply','ok',_cor55}
		( <_cor282> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','st'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 252
	  <{'set_job_name',Name},_X_From,St> when 'true' ->
	      %% Line 253
	      case St of
		<{'st',_cor283,_cor284,_cor285,_cor286,_cor287,_cor288,_cor289,_cor290,_cor291,_cor292,_cor293,_cor294,_cor295}> when 'true' ->
		    let <_cor58> =
			call 'erlang':'setelement'
			    (9, St, Name)
		    in  {'reply','ok',_cor58}
		( <_cor296> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','st'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 254
	  <{'set_gl_props',Props},_X_From,St = {'st',_cor297,_cor298,Shared,_cor299,_cor300,_cor301,_cor302,_cor303,_cor304,_cor305,_cor306,_cor307,_cor308}> when 'true' ->
	      do  %% Line 255
		  call 'test_server_gl':'set_props'
		      (Shared, Props)
		  let <_cor61> =
		      %% Line 256
		      call 'erlang':'setelement'
			  (10, St, Props)
		  in  %% Line 256
		      {'reply','ok',_cor61}
	  %% Line 257
	  <'reset_state',From,St = {'st',_cor323,_cor324,_cor325,_cor326,_cor327,_cor328,_cor329,_cor330,_cor331,'stopping',_cor332,_cor333,Ops}> when 'true' ->
	      let <Op> =
		  %% Line 259
		  ( fun (_cor63) ->
			%% Line 260
			case apply 'handle_call'/3
				 ('reset_state', From, _cor63) of
			  <{_cor334,Result,NewSt1}> when 'true' ->
			      %% Line 261
			      {Result,NewSt1}
			  ( <_cor62> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor62})
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-handle_call/3-fun-1-'}}] )
	      in  let <_rec12> =
		      %% Line 263
		      [{From,Op}|Ops]
		  in  let <_cor69> =
			  %% Line 263
			  call 'erlang':'setelement'
			      (14, St, _rec12)
		      in  %% Line 263
			  {'noreply',_cor69}
	  %% Line 264
	  <'reset_state',_X_From,{'st',Fds,Tags,_cor349,Gls,_cor350,_cor351,_cor352,_cor353,_cor354,_cor355,%% Line 265
													    OfflineBuff,_cor356,_cor357}> when 'true' ->
	      let <_cor73> =
		  %% Line 267
		  ( fun (_cor71) ->
			%% Line 268
			case call 'gb_trees':'lookup'
				 (_cor71, Fds) of
			  %% Line 269
			  <'none'> when 'true' ->
			      %% Line 270
			      'ok'
			  %% Line 271
			  <{'value',Fd}> when 'true' ->
			      %% Line 272
			      call 'file':'close'
				  (Fd)
			  ( <_cor70> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor70})
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-handle_call/3-fun-2-'}}] )
	      in  do  %% Line 267
		      call 'lists':'foreach'
			  (_cor73, %% Line 274
				   Tags)
		      let <GlList> =
			  %% Line 275
			  call 'gb_sets':'to_list'
			      (Gls)
		      in  do  %% Line 276
			      ( letrec
				    'lc$^0'/1 =
					fun (_cor77) ->
					    case _cor77 of
					      <[GL|_cor76]> when 'true' ->
						  do  call 'test_server_gl':'stop'
							  (GL)
						      apply 'lc$^0'/1
							  (_cor76)
					      <[]> when 'true' ->
						  []
					      ( <_cor77> when 'true' ->
						    ( primop 'match_fail'
							  ({'function_clause',_cor77})
						      -| [{'function_name',{'lc$^0',1}}] )
						-| ['compiler_generated'] )
					    end
				in  apply 'lc$^0'/1
					(GlList)
				-| ['list_comprehension'] )
			      do  %% Line 277
				  call 'timer':'sleep'
				      (100)
				  let <_cor82> =
				      %% Line 278
				      ( fun (_cor80) ->
					    call 'erlang':'is_process_alive'
						(_cor80)
					-| [{'id',{0,0,'-handle_call/3-fun-3-'}}] )
				  in  do  %% Line 278
					  case call 'lists':'filter'
						   (_cor82, GlList) of
					    %% Line 279
					    <[]> when 'true' ->
						'ok'
					    %% Line 281
					    <_cor358> when 'true' ->
						do  %% Line 282
						    call 'timer':'sleep'
							(2000)
						    %% Line 283
						    ( letrec
							  'lc$^1'/1 =
							      fun (_cor85) ->
								  case _cor85 of
								    <[GL|_cor84]> when 'true' ->
									do  call 'erlang':'exit'
										(GL, 'kill')
									    apply 'lc$^1'/1
										(_cor84)
								    <[]> when 'true' ->
									[]
								    ( <_cor85> when 'true' ->
									  ( primop 'match_fail'
										({'function_clause',_cor85})
									    -| [{'function_name',{'lc$^1',1}}] )
								      -| ['compiler_generated'] )
								  end
						      in  apply 'lc$^1'/1
							      (GlList)
						      -| ['list_comprehension'] )
					  end
					  let <Empty> =
					      %% Line 285
					      call 'gb_trees':'empty'
						  ()
					  in  %% Line 286
					      case call 'test_server_gl':'start_link'
						       () of
						<{'ok',Shared}> when 'true' ->
						    let <_cor92> =
							%% Line 287
							call 'gb_sets':'empty'
							    ()
						    in  let <_cor91> =
							    %% Line 288
							    call 'gb_sets':'empty'
								()
							in  %% Line 287
							    {'reply','ok',{'st',Empty,[],Shared,_cor92,_cor91,%% Line 289
													      Empty,%% Line 290
														    [60|[47|[98|[111|[100|[121|[62|[10|[60|[47|[104|[116|[109|[108|[62|[10]]]]]]]]]]]]]]]],%% Line 291
																									   [60|[110|[97|[109|[101|[32|[110|[111|[116|[32|[115|[101|[116|[62]]]]]]]]]]]]]],%% Line 292
																																			  [],%% Line 293
																																			     'starting',%% Line 294
																																					OfflineBuff,'undefined',%% Line 295
																																								[]}}
						( <_cor90> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_cor90})
						  -| ['compiler_generated'] )
					      end
	  %% Line 296
	  <{'stop',FdTags},From,St0 = {'st',Fds0,Tags0,%% Line 297
						       SGL,%% Line 297
							   Gls0,_cor359,_cor360,_cor361,_cor362,_cor363,_cor364,_cor365,_cor366,_cor367}> when 'true' ->
	      let <_rec14> =
		  %% Line 298
		  call 'gb_sets':'insert'
		      (SGL, Gls0)
	      in  let <_cor95> =
		      %% Line 298
		      call 'erlang':'setelement'
			  (13, St0, From)
		  in  let <_cor96> =
			  %% Line 298
			  call 'erlang':'setelement'
			      (11, _cor95, 'stopping')
		      in  let <_cor98> =
			      %% Line 298
			      call 'erlang':'setelement'
				  (5, _cor96, _rec14)
			  in  do  %% Line 299
				  apply 'gc'/1
				      (_cor98)
				  let <_cor107> =
				      %% Line 301
				      ( fun (_cor104,_cor103) ->
					    case <_cor104,_cor103> of
					      <Tag,{Fds,Tags}> when 'true' ->
						  %% Line 302
						  case call 'gb_trees':'lookup'
							   (Tag, Fds) of
						    %% Line 303
						    <'none'> when 'true' ->
							%% Line 304
							{Fds,Tags}
						    %% Line 305
						    <{'value',Fd}> when 'true' ->
							do  %% Line 306
							    call 'file':'close'
								(Fd)
							    let <_cor101> =
								%% Line 307
								call 'gb_trees':'delete'
								    (Tag, Fds)
							    in  let <_cor100> =
								    %% Line 308
								    call 'lists':'delete'
									(Tag, Tags)
								in  %% Line 307
								    {_cor101,_cor100}
						    ( <_cor102> when 'true' ->
							  primop 'match_fail'
							      ({'case_clause',_cor102})
						      -| ['compiler_generated'] )
						  end
					      ( <_cor106,_cor105> when 'true' ->
						    ( primop 'match_fail'
							  ({'function_clause',_cor106,_cor105})
						      -| [{'function_name',{'-handle_call/3-fun-4-',2}}] )
						-| ['compiler_generated'] )
					    end
					-| [{'id',{0,0,'-handle_call/3-fun-4-'}}] )
				  in  %% Line 301
				      case call 'lists':'foldl'
					       (_cor107, %% Line 310
							 {Fds0,Tags0}, %% Line 310
								       FdTags) of
					<{Fds1,Tags1}> when 'true' ->
					    let <_cor109> =
						%% Line 313
						call 'erlang':'self'
						    ()
					    in  do  %% Line 313
						    call 'erlang':'send_after'
							(1000, _cor109, 'stop_group_leaders')
						    %% Line 314
						    case _cor98 of
						      <{'st',_cor382,_cor383,_cor384,_cor385,_cor386,_cor387,_cor388,_cor389,_cor390,_cor391,_cor392,_cor393,_cor394}> when 'true' ->
							  let <_cor111> =
							      call 'erlang':'setelement'
								  (3, _cor98, Tags1)
							  in  let <_cor113> =
								  call 'erlang':'setelement'
								      (2, _cor111, Fds1)
							      in  {'noreply',_cor113}
						      ( <_cor395> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','st'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
					( <_cor108> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor108})
					  -| ['compiler_generated'] )
				      end
	  %% Line 315
	  <'finish',From,St> when 'true' ->
	      do  %% Line 316
		  call 'gen_server':'reply'
		      (From, 'ok')
		  %% Line 317
		  {'stop','normal',St}
	  ( <_cor116,_cor115,_cor114> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor116,_cor115,_cor114})
		  -| [{'function_name',{'handle_call',3}}] )
	    -| ['compiler_generated'] )
	end
'handle_info'/2 =
    %% Line 319
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'EXIT',Pid,'normal'},St = {'st',_cor48,_cor49,_cor50,Gls0,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,From,_cor58}> when 'true' ->
	      let <Gls> =
		  %% Line 320
		  call 'gb_sets':'delete_any'
		      (Pid, Gls0)
	      in  let <_cor5> =
		      %% Line 321
		      ( case call 'gb_sets':'is_empty'
				 (Gls) of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				'true'
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			  ( <_cor3> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {( 'badarg'
					    -| ['compiler_generated'] ),_cor3}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  in  %% Line 321
		      case _cor5 of
			%% Line 322
			<'true'> when 'true' ->
			    do  %% Line 324
				call 'gen_server':'reply'
				    (From, 'ok')
				let <_cor7> =
				    %% Line 325
				    call 'erlang':'setelement'
					(13, St, 'undefined')
				in  let <_cor8> =
					%% Line 325
					call 'erlang':'setelement'
					    (11, _cor7, 'stopping')
				    in  let <_cor10> =
					    %% Line 325
					    call 'erlang':'setelement'
						(5, _cor8, Gls)
					in  %% Line 325
					    {'noreply',_cor10}
			%% Line 326
			<'false'> when 'true' ->
			    let <_cor12> =
				%% Line 328
				call 'erlang':'setelement'
				    (11, St, 'stopping')
			    in  let <_cor14> =
				    %% Line 328
				    call 'erlang':'setelement'
					(5, _cor12, Gls)
				in  %% Line 328
				    {'noreply',_cor14}
			( <_cor15> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor15})
			  -| ['compiler_generated'] )
		      end
	  %% Line 330
	  <{'EXIT',_X_Pid,Reason},_X_St> when 'true' ->
	      %% Line 331
	      call 'erlang':'exit'
		  (Reason)
	  %% Line 332
	  <'stop_group_leaders',St = {'st',_cor87,_cor88,_cor89,Gls,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98}> when 'true' ->
	      let <GlPids> =
		  %% Line 334
		  call 'gb_sets':'to_list'
		      (Gls)
	      in  do  %% Line 335
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor19) ->
				    case _cor19 of
				      <[GL|_cor18]> when 'true' ->
					  do  call 'test_server_gl':'stop'
						  (GL)
					      apply 'lc$^0'/1
						  (_cor18)
				      <[]> when 'true' ->
					  []
				      ( <_cor19> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor19})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(GlPids)
			-| ['list_comprehension'] )
		      do  %% Line 336
			  call 'timer':'sleep'
			      (100)
			  let <_cor24> =
			      %% Line 338
			      ( fun (_cor22) ->
				    call 'erlang':'is_process_alive'
					(_cor22)
				-| [{'id',{0,0,'-handle_info/2-fun-0-'}}] )
			  in  let <_cor26> =
				  %% Line 338
				  case call 'lists':'filter'
					   (_cor24, GlPids) of
				    %% Line 339
				    <[]> when 'true' ->
					0
				    %% Line 340
				    <_cor99> when 'true' ->
					2000
				  end
			      in  let <_cor28> =
				      %% Line 342
				      call 'erlang':'self'
					  ()
				  in  do  %% Line 342
					  call 'erlang':'send_after'
					      (_cor26, _cor28, 'kill_group_leaders')
					  %% Line 343
					  {'noreply',St}
	  %% Line 344
	  <'kill_group_leaders',St = {'st',_cor100,_cor101,_cor102,Gls,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,From,%% Line 345
																    Ops}> when 'true' ->
	      do  %% Line 346
		  ( letrec
			'lc$^1'/1 =
			    fun (_cor32) ->
				case _cor32 of
				  <[GL|_cor30]> when 'true' ->
				      do  call 'erlang':'exit'
					      (GL, 'kill')
					  apply 'lc$^1'/1
					      (_cor30)
				  <[]> when 'true' ->
				      []
				  ( <_cor32> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor32})
					  -| [{'function_name',{'lc$^1',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  let <_cor31> =
			    call 'gb_sets':'to_list'
				(Gls)
			in  apply 'lc$^1'/1
				(_cor31)
		    -| ['list_comprehension'] )
		  do  %% Line 347
		      case <> of
			<>
			    when call 'erlang':'=/='
				  (From,
				   'undefined') ->
			    %% Line 348
			    call 'gen_server':'reply'
				(From, 'ok')
			%% Line 349
			<> when 'true' ->
			    'ok'
		      end
		      let <_cor44> =
			  %% Line 353
			  ( fun (_cor41,_cor40) ->
				case <_cor41,_cor40> of
				  <{ReplyTo,Op},NewSt> when 'true' ->
				      %% Line 354
				      case apply Op
					       (NewSt) of
					<{Result,NewSt1}> when 'true' ->
					    do  %% Line 355
						call 'gen_server':'reply'
						    (ReplyTo, Result)
						%% Line 356
						NewSt1
					( <_cor39> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor39})
					  -| ['compiler_generated'] )
				      end
				  ( <_cor43,_cor42> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor43,_cor42})
					  -| [{'function_name',{'-handle_info/2-fun-1-',2}}] )
				    -| ['compiler_generated'] )
				end
			    -| [{'id',{0,0,'-handle_info/2-fun-1-'}}] )
		      in  let <_cor36> =
			      %% Line 357
			      call 'erlang':'setelement'
				  (14, St, [])
			  in  let <_cor38> =
				  %% Line 357
				  call 'erlang':'setelement'
				      (11, _cor36, 'idle')
			      in  let <St1> =
				      %% Line 353
				      call 'lists':'foldr'
					  (_cor44, _cor38, %% Line 357
							   Ops)
				  in  %% Line 358
				      {'noreply',St1}
	  %% Line 359
	  <Other,St> when 'true' ->
	      do  %% Line 360
		  call 'io':'format'
		      ([73|[103|[110|[111|[114|[105|[110|[103|[58|[32|[126|[112|[10]]]]]]]]]]]]], [Other|[]])
		  %% Line 361
		  {'noreply',St}
	end
'terminate'/2 =
    %% Line 363
    fun (_cor1,_cor0) ->
	%% Line 364
	'ok'
'output'/4 =
    %% Line 366
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <From,Tag,Str,St = {'st',_cor21,_cor22,_cor23,_cor24,Buffered,Buf0,_cor25,_cor26,_cor27,%% Line 367
												  Phase,%% Line 367
													OfflineBuff,_cor28,_cor29}> when 'true' ->
	      %% Line 368
	      case call 'gb_sets':'is_member'
		       (From, Buffered) of
		%% Line 369
		<'false'> when 'true' ->
		    %% Line 370
		    case apply 'do_output'/4
			     (Tag, Str, Phase, St) of
		      %% Line 371
		      <'buffer'>
			  when try
				let <_cor4> =
				    call 'erlang':'length'
					(OfflineBuff)
				in  call 'erlang':'>'
					(_cor4, 500)
			    of <Try> ->
				Try
			    catch <T,R> ->
				'false' ->
			  %% Line 373
			  call 'erlang':'setelement'
			      (12, St, [])
		      %% Line 374
		      <'buffer'> when 'true' ->
			  let <_rec21> =
			      %% Line 375
			      [{Tag,From,Str}|OfflineBuff]
			  in  %% Line 375
			      call 'erlang':'setelement'
				  (12, St, _rec21)
		      %% Line 376
		      <_cor58> when 'true' ->
			  %% Line 377
			  St
		    end
		%% Line 379
		<'true'> when 'true' ->
		    let <Q0> =
			%% Line 380
			call 'gb_trees':'get'
			    (From, Buf0)
		    in  let <Q> =
			    %% Line 381
			    call 'queue':'in'
				({Tag,Str}, Q0)
			in  let <Buf> =
				%% Line 382
				call 'gb_trees':'update'
				    (From, Q, Buf0)
			    in  %% Line 383
				call 'erlang':'setelement'
				    (7, St, Buf)
		( <_cor16> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor16})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor20,_cor19,_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19,_cor18,_cor17})
		  -| [{'function_name',{'output',4}}] )
	    -| ['compiler_generated'] )
	end
'do_output'/4 =
    %% Line 386
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <'stdout',Str,_cor17,{'st',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,'undefined',_cor25,_cor26,_cor27,_cor28,_cor29}> when 'true' ->
	      %% Line 387
	      call 'io':'put_chars'
		  (Str)
	  %% Line 388
	  <'stdout',Str0,_cor30,{'st',_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,Name,_cor38,_cor39,_cor40,_cor41,_cor42}> when 'true' ->
	      let <Str> =
		  %% Line 389
		  call 'io_lib':'format'
		      ([84|[101|[115|[116|[105|[110|[103|[32|[126|[116|[115|[58|[32|[126|[116|[115|[10]]]]]]]]]]]]]]]]], [Name|[Str0|[]]])
	      in  %% Line 390
		  call 'io':'put_chars'
		      (Str)
	  %% Line 391
	  <Tag,Str,Phase,St = {'st',Fds,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54}> when 'true' ->
	      %% Line 392
	      case call 'gb_trees':'lookup'
		       (Tag, Fds) of
		%% Line 393
		<'none'>
		    when call 'erlang':'=/='
			  (Phase,
			   'started') ->
		    %% Line 394
		    'buffer'
		%% Line 395
		<'none'> when 'true' ->
		    let <S> =
			%% Line 396
			call 'io_lib':'format'
			    ([10|[42|[42|[42|[32|[69|[82|[82|[79|[82|[58|[32|[126|[119|[44|[32|[108|[105|[110|[101|[32|[126|[119|[58|[32|[78|[111|[32|[107|[110|[111|[119|[110|[32|[39|[126|[112|[39|[32|[108|[111|[103|[32|[102|[105|[108|[101|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 397
																																				     ['test_server_io'|[397|[Tag|[]]]])
		    in  %% Line 398
			apply 'do_output'/4
			    ('stdout', [S|[Str|[]]], Phase, St)
		%% Line 399
		<{'value',Fd}> when 'true' ->
		    %% Line 400
		    try
			do  %% Line 401
			    call 'io':'put_chars'
				(Fd, Str)
			    %% Line 402
			    case Tag of
			      %% Line 403
			      <'html'> when 'true' ->
				  apply 'finalise_table'/2
				      (Fd, St)
			      %% Line 404
			      <_cor55> when 'true' ->
				  'ok'
			    end
		    of <_cor7> ->
			_cor7
		    catch <_cor10,_cor9,_cor8> ->
			let <S> =
			    %% Line 407
			    call 'io_lib':'format'
				([10|[42|[42|[42|[32|[69|[82|[82|[79|[82|[58|[32|[126|[119|[44|[32|[108|[105|[110|[101|[32|[126|[119|[58|[32|[69|[114|[114|[111|[114|[32|[119|[114|[105|[116|[105|[110|[103|[32|[116|[111|[32|[108|[111|[103|[32|[102|[105|[108|[101|[32|[39|[126|[112|[39|[58|[32|[126|[112|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 409
																																													      ['test_server_io'|[409|[Tag|[_cor9|[]]]]])
			in  %% Line 410
			    apply 'do_output'/4
				('stdout', [S|[Str|[]]], Phase, St)
		( <_cor12> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor12})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor16,_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14,_cor13})
		  -| [{'function_name',{'do_output',4}}] )
	    -| ['compiler_generated'] )
	end
'finalise_table'/2 =
    %% Line 414
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Fd,{'st',_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,Footer,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16}> when 'true' ->
	      %% Line 415
	      case call 'file':'position'
		       (Fd, {'cur',0}) of
		%% Line 416
		<{'ok',Pos}> when 'true' ->
		    do  %% Line 420
			call 'io':'put_chars'
			    (Fd, [[10|[60|[47|[116|[97|[98|[108|[101|[62|[10]]]]]]]]]]|[Footer|[]]])
			%% Line 421
			call 'file':'position'
			    (Fd, Pos)
		%% Line 422
		<{'error','epipe'}> when 'true' ->
		    %% Line 426
		    'ok'
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'finalise_table',2}}] )
	    -| ['compiler_generated'] )
	end
'do_print_buffered'/2 =
    %% Line 429
    fun (_cor1,_cor0) ->
	let <Item> =
	    %% Line 430
	    call 'queue':'get'
		(_cor1)
	in  let <Q> =
		%% Line 431
		call 'queue':'drop'
		    (_cor1)
	    in  %% Line 432
		case Item of
		  %% Line 433
		  <'eot'> when 'true' ->
		      %% Line 434
		      Q
		  %% Line 435
		  <{Tag,Str}> when 'true' ->
		      do  %% Line 436
			  apply 'do_output'/4
			      (Tag, Str, 'undefined', _cor0)
			  %% Line 437
			  apply 'do_print_buffered'/2
			      (Q, _cor0)
		  ( <_cor4> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor4})
		    -| ['compiler_generated'] )
		end
'gc'/1 =
    %% Line 440
    fun (_cor0) ->
	case _cor0 of
	  <{'st',_cor19,_cor20,_cor21,Gls0,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30}> when 'true' ->
	      let <_cor8> =
		  %% Line 441
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor4) ->
				case _cor4 of
				  <[%% Line 446
				    P|_cor2]> when 'true' ->
				      let <_cor6> =
					  %% Line 442
					  case call 'erlang':'process_info'
						   (P, 'group_leader') of
					    %% Line 443
					    <{'group_leader',GL}> when 'true' ->
						GL
					    %% Line 444
					    <'undefined'> when 'true' ->
						'undefined'
					    ( <_cor5> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_cor5})
					      -| ['compiler_generated'] )
					  end
				      in  let <_cor7> =
					      %% Line 446
					      apply 'lc$^0'/1
						  (_cor2)
					  in  ( [_cor6|_cor7]
						-| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_cor4> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor4})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  let <_cor3> =
			    %% Line 446
			    call 'erlang':'processes'
				()
			in  apply 'lc$^0'/1
				(_cor3)
		    -| ['list_comprehension'] )
	      in  let <InUse> =
		      %% Line 447
		      call 'ordsets':'from_list'
			  (_cor8)
		  in  let <Gls> =
			  %% Line 448
			  call 'gb_sets':'to_list'
			      (Gls0)
		      in  let <NotUsed> =
			      %% Line 449
			      call 'ordsets':'subtract'
				  (Gls, InUse)
			  in  do  %% Line 450
				  ( letrec
					'lc$^1'/1 =
					    fun (_cor15) ->
						case _cor15 of
						  <[Pid|_cor14]> when 'true' ->
						      do  call 'test_server_gl':'stop'
							      (Pid)
							  apply 'lc$^1'/1
							      (_cor14)
						  <[]> when 'true' ->
						      []
						  ( <_cor15> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor15})
							  -| [{'function_name',{'lc$^1',1}}] )
						    -| ['compiler_generated'] )
						end
				    in  apply 'lc$^1'/1
					    (NotUsed)
				    -| ['list_comprehension'] )
				  %% Line 451
				  'ok'
	  ( <_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18})
		  -| [{'function_name',{'gc',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('test_server_io')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('test_server_io', _cor0)
end