module 'ts_lib' ['b2s'/1,
		 'erlang_type'/0,
		 'erlang_type'/1,
		 'error'/1,
		 'initial_capital'/1,
		 'make_non_erlang'/2,
		 'maybe_atom_to_list'/1,
		 'module_info'/0,
		 'module_info'/1,
		 'print_data'/1,
		 'progress'/4,
		 'specialized_specs'/2,
		 'specs'/1,
		 'subst'/2,
		 'subst_file'/3,
		 'suites'/2,
		 'var'/2]
    attributes [%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','file_info'},[{'typed_record_field',{'record_field',25,{'atom',25,'size'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'type'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'device'}|[{'atom',26,'directory'}|[{'atom',26,'other'}|[{'atom',26,'regular'}|[{'atom',26,'symlink'}]]]]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'access'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'atom',27,'read'}|[{'atom',27,'write'}|[{'atom',27,'read_write'}|[{'atom',27,'none'}]]]]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'atime'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'remote_type',28,[{'atom',28,'file'}|[{'atom',28,'date_time'}|[[]]]]}|[{'type',28,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'mtime'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'remote_type',32,[{'atom',32,'file'}|[{'atom',32,'date_time'}|[[]]]]}|[{'type',32,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',34,{'atom',34,'ctime'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'remote_type',34,[{'atom',34,'file'}|[{'atom',34,'date_time'}|[[]]]]}|[{'type',34,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',40,{'atom',40,'mode'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'links'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',46,{'atom',46,'major_device'}},{'type',46,'union',[{'atom',46,'undefined'}|[{'type',46,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'minor_device'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'inode'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',54,{'atom',54,'uid'}},{'type',54,'union',[{'atom',54,'undefined'}|[{'type',54,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',55,{'atom',55,'gid'}},{'type',55,'union',[{'atom',55,'undefined'}|[{'type',55,'non_neg_integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','file_descriptor'},[{'typed_record_field',{'record_field',59,{'atom',59,'module'}},{'type',59,'union',[{'atom',59,'undefined'}|[{'type',59,'module',[]}]]}}|[{'typed_record_field',{'record_field',60,{'atom',60,'data'}},{'type',60,'union',[{'atom',60,'undefined'}|[{'type',60,'term',[]}]]}}]],[]}]]
'error'/1 =
    %% Line 37
    fun (_cor0) ->
	%% Line 38
	call 'erlang':'throw'
	    ({'error',_cor0})
'var'/2 =
    %% Line 42
    fun (_cor1,_cor0) ->
	%% Line 43
	case call 'lists':'keysearch'
		 (_cor1, 1, _cor0) of
	  %% Line 44
	  <{'value',{_cor5,Value}}>
	      when call 'erlang':'=:='
		    (_cor5,
		     _cor1) ->
	      %% Line 45
	      Value
	  %% Line 46
	  <'false'> when 'true' ->
	      %% Line 47
	      apply 'error'/1
		  ({'bad_installation',{'undefined_var',_cor1,_cor0}})
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor2})
	    -| ['compiler_generated'] )
	end
'verbosity'/1 =
    %% Line 51
    fun (_cor0) ->
	%% Line 53
	case call 'lists':'member'
		 ('verbose', _cor0) of
	  %% Line 54
	  <'true'> when 'true' ->
	      %% Line 55
	      1
	  %% Line 56
	  <'false'> when 'true' ->
	      %% Line 57
	      case call 'lists':'keysearch'
		       ('verbose', 1, _cor0) of
		%% Line 58
		<{'value',{'verbose',Level}}> when 'true' ->
		    %% Line 59
		    Level
		%% Line 60
		<_cor4> when 'true' ->
		    %% Line 61
		    0
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor2})
	    -| ['compiler_generated'] )
	end
'progress'/4 =
    %% Line 67
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <V> =
	    %% Line 68
	    apply 'verbosity'/1
		(_cor3)
	in  %% Line 69
	    case <> of
	      %% Line 70
	      <>
		  when call 'erlang':'>='
			(V,
			 _cor2) ->
		  %% Line 71
		  call 'io':'format'
		      (_cor1, _cor0)
	      %% Line 72
	      <> when 'true' ->
		  %% Line 73
		  'ok'
	    end
'erlang_type'/0 =
    %% Line 78
    fun () ->
	let <_cor0> =
	    %% Line 79
	    call 'code':'root_dir'
		()
	in  %% Line 79
	    apply 'erlang_type'/1
		(_cor0)
'erlang_type'/1 =
    %% Line 80
    fun (_cor0) ->
	%% Line 81
	case call 'init':'script_id'
		 () of
	  <{_cor5,Version}> when 'true' ->
	      let <RelDir> =
		  %% Line 82
		  call 'filename':'join'
		      (_cor0, [114|[101|[108|[101|[97|[115|[101|[115]]]]]]]])
	      in  %% Line 83
		  case call 'filelib':'is_file'
			   (RelDir) of
		    %% Line 84
		    <'true'> when 'true' ->
			{'otp',Version}
		    %% Line 85
		    <'false'> when 'true' ->
			{'srctree',Version}
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor3})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'initial_capital'/1 =
    %% Line 90
    fun (_cor0) ->
	case _cor0 of
	  <[C|Rest]>
	      when let <_cor1> =
		    call 'erlang':'=<'
			(97, C)
		in  let <_cor2> =
			call 'erlang':'=<'
			    (C, 122)
		    in  call 'erlang':'and'
			    (_cor1, _cor2) ->
	      let <_cor3> =
		  %% Line 91
		  call 'erlang':'-'
		      (C, 97)
	      in  let <_cor4> =
		      %% Line 91
		      call 'erlang':'+'
			  (_cor3, 65)
		  in  %% Line 91
		      [_cor4|Rest]
	  %% Line 92
	  <String> when 'true' ->
	      %% Line 93
	      String
	end
'specialized_specs'/2 =
    %% Line 95
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 96
	    call 'filename':'dirname'
		(_cor1)
	in  let <_cor3> =
		%% Line 97
		call 'erlang':'++'
		    (_cor0, [46|[115|[112|[101|[99]]]]])
	    in  let <_cor4> =
		    %% Line 97
		    [42|[95|_cor3]]
		in  let <_cor5> =
			%% Line 96
			call 'filename':'join'
			    ([_cor2|%% Line 97
				    [[42|[95|[116|[101|[115|[116]]]]]]|[_cor4|[]]]])
		    in  let <Specs> =
			    %% Line 96
			    call 'filelib':'wildcard'
				(_cor5)
			in  let <_cor16> =
				%% Line 98
				( letrec
				      'lc$^0'/1 =
					  fun (_cor9) ->
					      case _cor9 of
						<[%% Line 101
						  Name|_cor8]> when 'true' ->
						    let <Base> =
							%% Line 99
							call 'filename':'basename'
							    (Name)
						    in  let <_cor11> =
							    %% Line 100
							    call 'string':'rstr'
								(Base, [95])
							in  let <_cor12> =
								%% Line 100
								call 'erlang':'-'
								    (_cor11, 1)
							    in  let <_cor13> =
								    %% Line 100
								    call 'string':'substr'
									(Base, 1, _cor12)
								in  let <_cor14> =
									%% Line 100
									call 'erlang':'list_to_atom'
									    (_cor13)
								    in  let <_cor15> =
									    %% Line 101
									    apply 'lc$^0'/1
										(_cor8)
									in  ( [_cor14|_cor15]
									      -| ['compiler_generated'] )
						<[]> when 'true' ->
						    []
						( <_cor9> when 'true' ->
						      ( primop 'match_fail'
							    ({'function_clause',_cor9})
							-| [{'function_name',{'lc$^0',1}}] )
						  -| ['compiler_generated'] )
					      end
				  in  apply 'lc$^0'/1
					  (%% Line 101
					   Specs)
				  -| ['list_comprehension'] )
			    in  %% Line 98
				apply 'sort_tests'/1
				    (_cor16)
'specs'/1 =
    %% Line 103
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 104
	    call 'filename':'dirname'
		(_cor0)
	in  let <_cor2> =
		%% Line 104
		call 'filename':'join'
		    ([_cor1|%% Line 105
			    [[42|[95|[116|[101|[115|[116]]]]]]|[[42|[46|[123|[100|[121|[110|[44|[125|[115|[112|[101|[99]]]]]]]]]]]]]]])
	    in  let <Specs> =
		    %% Line 104
		    call 'filelib':'wildcard'
			(_cor2)
		in  let <NoBench> =
			%% Line 107
			( fun (_cor5) ->
			      %% Line 108
			      case call 'lists':'reverse'
				       (_cor5) of
				%% Line 109
				<[99|[101|[112|[115|[46|[104|[99|[110|[101|[98|[95|_cor16]]]]]]]]]]]> when 'true' ->
				    'false'
				%% Line 110
				<[99|[101|[112|[115|[46|[101|[107|[111|[109|[115|[95|_cor17]]]]]]]]]]]> when 'true' ->
				    'false'
				%% Line 111
				<_cor18> when 'true' ->
				    'true'
			      end
			  -| [{'id',{0,0,'-specs/1-fun-0-'}}] )
		    in  let <_cor14> =
			    %% Line 115
			    ( letrec
				  'lc$^0'/1 =
				      fun (_cor10) ->
					  case _cor10 of
					    <[Name|_cor9]> when 'true' ->
						( case apply NoBench
							   (Name) of
						    <'true'> when 'true' ->
							let <_cor11> =
							    apply 'filename_to_atom'/1
								(Name)
							in  let <_cor12> =
								apply 'lc$^0'/1
								    (_cor9)
							    in  ( [_cor11|_cor12]
								  -| ['compiler_generated'] )
						    ( <'false'> when 'true' ->
							  apply 'lc$^0'/1
							      (_cor9)
						      -| ['compiler_generated'] )
						    ( <_cor13> when 'true' ->
							  primop 'match_fail'
							      ({'case_clause',_cor13})
						      -| ['compiler_generated'] )
						  end
						  -| ['list_comprehension'] )
					    <[]> when 'true' ->
						[]
					    ( <_cor10> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor10})
						    -| [{'function_name',{'lc$^0',1}}] )
					      -| ['compiler_generated'] )
					  end
			      in  apply 'lc$^0'/1
				      (Specs)
			      -| ['list_comprehension'] )
			in  %% Line 115
			    apply 'sort_tests'/1
				(_cor14)
'suites'/2 =
    %% Line 117
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 118
	    call 'filename':'dirname'
		(_cor1)
	in  let <_cor3> =
		%% Line 118
		call 'erlang':'++'
		    (_cor0, [95|[116|[101|[115|[116]]]]])
	    in  let <Glob> =
		    %% Line 118
		    call 'filename':'join'
			([_cor2|[_cor3|%% Line 119
				       [[42|[95|[83|[85|[73|[84|[69|[46|[101|[114|[108]]]]]]]]]]]]]])
		in  let <Suites> =
			%% Line 120
			call 'filelib':'wildcard'
			    (Glob)
		    in  %% Line 121
			( letrec
			      'lc$^0'/1 =
				  fun (_cor8) ->
				      case _cor8 of
					<[Name|_cor7]> when 'true' ->
					    let <_cor9> =
						apply 'filename_to_atom'/1
						    (Name)
					    in  let <_cor10> =
						    apply 'lc$^0'/1
							(_cor7)
						in  ( [_cor9|_cor10]
						      -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor8> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor8})
						-| [{'function_name',{'lc$^0',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lc$^0'/1
				  (Suites)
			  -| ['list_comprehension'] )
'filename_to_atom'/1 =
    %% Line 123
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 124
	    call 'filename':'basename'
		(_cor0)
	in  let <_cor2> =
		%% Line 124
		call 'filename':'rootname'
		    (_cor1)
	    in  %% Line 124
		call 'erlang':'list_to_atom'
		    (_cor2)
'sort_tests'/1 =
    %% Line 128
    fun (_cor0) ->
	let <_cor7> =
	    %% Line 129
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor3) ->
			  case _cor3 of
			    <[%% Line 130
			      X|_cor2]> when 'true' ->
				let <_cor4> =
				    apply 'filename_to_atom'/1
					(X)
				in  let <_cor5> =
					apply 'suite_order'/1
					    (_cor4)
				    in  let <_cor6> =
					    %% Line 130
					    apply 'lc$^0'/1
						(_cor2)
					in  ( [{_cor5,X}|_cor6]
					      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor3> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor3})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (_cor0)
	      -| ['list_comprehension'] )
	in  let <Sorted> =
		%% Line 129
		call 'lists':'usort'
		    (_cor7)
	    in  %% Line 131
		( letrec
		      'lc$^1'/1 =
			  fun (_cor11) ->
			      case _cor11 of
				<[{_cor14,X}|_cor10]> when 'true' ->
				    let <_cor12> =
					apply 'lc$^1'/1
					    (_cor10)
				    in  ( [X|_cor12]
					  -| ['compiler_generated'] )
				( <[_cor9|_cor10]> when 'true' ->
				      apply 'lc$^1'/1
					  (_cor10)
				  -| ['compiler_generated'] )
				<[]> when 'true' ->
				    []
				( <_cor11> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor11})
					-| [{'function_name',{'lc$^1',1}}] )
				  -| ['compiler_generated'] )
			      end
		  in  apply 'lc$^1'/1
			  (Sorted)
		  -| ['list_comprehension'] )
'suite_order'/1 =
    %% Line 136
    fun (_cor0) ->
	case _cor0 of
	  <'emulator'> when 'true' ->
	      0
	  %% Line 137
	  <'test_server'> when 'true' ->
	      1
	  %% Line 138
	  <'kernel'> when 'true' ->
	      4
	  %% Line 139
	  <'stdlib'> when 'true' ->
	      6
	  %% Line 140
	  <'compiler'> when 'true' ->
	      8
	  %% Line 141
	  <'hipe'> when 'true' ->
	      9
	  %% Line 142
	  <'erl_interface'> when 'true' ->
	      12
	  %% Line 143
	  <'jinterface'> when 'true' ->
	      14
	  %% Line 144
	  <'sasl'> when 'true' ->
	      16
	  %% Line 145
	  <'tools'> when 'true' ->
	      18
	  %% Line 146
	  <'runtime_tools'> when 'true' ->
	      19
	  %% Line 147
	  <'parsetools'> when 'true' ->
	      20
	  %% Line 148
	  <'debugger'> when 'true' ->
	      22
	  %% Line 149
	  <'ic'> when 'true' ->
	      24
	  %% Line 150
	  <'orber'> when 'true' ->
	      26
	  %% Line 151
	  <'inets'> when 'true' ->
	      28
	  %% Line 152
	  <'asn1'> when 'true' ->
	      30
	  %% Line 153
	  <'os_mon'> when 'true' ->
	      32
	  %% Line 154
	  <'snmp'> when 'true' ->
	      38
	  %% Line 155
	  <'mnesia'> when 'true' ->
	      44
	  %% Line 156
	  <'system'> when 'true' ->
	      999
	  %% Line 157
	  <_cor2> when 'true' ->
	      200
	end
'subst_file'/3 =
    %% Line 163
    fun (_cor2,_cor1,_cor0) ->
	%% Line 164
	case call 'file':'read_file'
		 (_cor2) of
	  %% Line 165
	  <{'ok',Bin}> when 'true' ->
	      let <_cor3> =
		  %% Line 166
		  apply 'b2s'/1
		      (Bin)
	      in  let <Subst> =
		      %% Line 166
		      apply 'subst'/3
			  (_cor3, _cor0, [])
		  in  let <_cor5> =
			  %% Line 167
			  call 'unicode':'characters_to_binary'
			      (Subst)
		      in  %% Line 167
			  case call 'file':'write_file'
				   (_cor1, _cor5) of
			    %% Line 168
			    <'ok'> when 'true' ->
				%% Line 169
				'ok'
			    %% Line 170
			    <{'error',Reason}> when 'true' ->
				%% Line 171
				{'error',{'file_write',Reason}}
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor6})
			      -| ['compiler_generated'] )
			  end
	  %% Line 173
	  <Error> when 'true' ->
	      %% Line 174
	      Error
	end
'subst'/2 =
    %% Line 177
    fun (_cor1,_cor0) ->
	%% Line 178
	apply 'subst'/3
	    (_cor1, _cor0, [])
'subst'/3 =
    %% Line 180
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[64|[95|Rest]],Vars,Result> when 'true' ->
	      %% Line 181
	      apply 'subst_var'/4
		  ([95|Rest], Vars, Result, [])
	  %% Line 182
	  <[64|[C|Rest]],Vars,Result>
	      when let <_cor3> =
		    call 'erlang':'=<'
			(65, C)
		in  let <_cor4> =
			call 'erlang':'=<'
			    (C, 90)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      %% Line 183
	      apply 'subst_var'/4
		  ([C|Rest], Vars, Result, [])
	  %% Line 184
	  <[64|[C|Rest]],Vars,Result>
	      when let <_cor5> =
		    call 'erlang':'=<'
			(97, C)
		in  let <_cor6> =
			call 'erlang':'=<'
			    (C, 122)
		    in  call 'erlang':'and'
			    (_cor5, _cor6) ->
	      %% Line 185
	      apply 'subst_var'/4
		  ([C|Rest], Vars, Result, [])
	  %% Line 186
	  <[C|Rest],Vars,Result> when 'true' ->
	      %% Line 187
	      apply 'subst'/3
		  (Rest, Vars, [C|Result])
	  %% Line 188
	  <[],_X_Vars,Result> when 'true' ->
	      %% Line 189
	      call 'lists':'reverse'
		  (Result)
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7})
		  -| [{'function_name',{'subst',3}}] )
	    -| ['compiler_generated'] )
	end
'subst_var'/4 =
    %% Line 191
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[64|Rest],Vars,Result,VarAcc> when 'true' ->
	      let <_cor4> =
		  %% Line 192
		  call 'lists':'reverse'
		      (VarAcc)
	      in  let <Key> =
		      %% Line 192
		      call 'erlang':'list_to_atom'
			  (_cor4)
		  in  %% Line 193
		      case apply 'do_subst_var'/5
			       (Key, Rest, Vars, Result, VarAcc) of
			<{Result1,Rest1}> when 'true' ->
			    %% Line 194
			    apply 'subst'/3
				(Rest1, Vars, Result1)
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor6})
			  -| ['compiler_generated'] )
		      end
	  %% Line 196
	  <[C|Rest],Vars,Result,VarAcc> when 'true' ->
	      %% Line 197
	      apply 'subst_var'/4
		  (Rest, Vars, Result, [C|VarAcc])
	  %% Line 198
	  <[],Vars,Result,VarAcc> when 'true' ->
	      let <_cor7> =
		  %% Line 199
		  call 'erlang':'++'
		      (VarAcc, [64|Result])
	      in  %% Line 199
		  apply 'subst'/3
		      ([], Vars, [_cor7|[]])
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'subst_var',4}}] )
	    -| ['compiler_generated'] )
	end
'do_subst_var'/5 =
    %% Line 202
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Cond,Rest,Vars,Result,_X_VarAcc>
	      when let <_cor5> =
		    call 'erlang':'=:='
			(Cond, 'IFEQ')
		in  let <_cor6> =
			%% Line 203
			call 'erlang':'=:='
			    (Cond, 'IFNEQ')
		    in  call 'erlang':'or'
			    (_cor5, _cor6) ->
	      %% Line 204
	      case apply 'do_test'/3
		       (Rest, Vars, Cond) of
		<{Bool,Comment,Rest1}> when 'true' ->
		    let <Rest2> =
			%% Line 205
			apply 'extract_clause'/2
			    (Bool, Rest1)
		    in  let <_cor9> =
			    %% Line 206
			    call 'lists':'reverse'
				(Comment, Result)
			in  %% Line 206
			    {_cor9,Rest2}
		( <_cor7> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor7})
		  -| ['compiler_generated'] )
	      end
	  %% Line 208
	  <Key,Rest,Vars,Result,VarAcc> when 'true' ->
	      %% Line 209
	      case call 'lists':'keysearch'
		       (Key, 1, Vars) of
		%% Line 210
		<{'value',{_cor18,Value}}>
		    when call 'erlang':'=:='
			  (_cor18,
			   Key) ->
		    let <_cor10> =
			%% Line 211
			call 'lists':'reverse'
			    (Value, Result)
		    in  %% Line 211
			{_cor10,Rest}
		%% Line 212
		<'false'> when 'true' ->
		    let <_cor11> =
			%% Line 213
			call 'erlang':'++'
			    (VarAcc, [64|Result])
		    in  %% Line 213
			{[64|_cor11],Rest}
		( <_cor12> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor12})
		  -| ['compiler_generated'] )
	      end
	end
'do_test'/3 =
    %% Line 217
    fun (_cor2,_cor1,_cor0) ->
	%% Line 218
	case apply 'get_arg'/4
		 (_cor2, _cor1, 44, []) of
	  <{Arg1,Rest1}> when 'true' ->
	      %% Line 219
	      case apply 'get_arg'/4
		       (Rest1, _cor1, 41, []) of
		<{Arg2,Rest2}> when 'true' ->
		    let <_cor6> =
			%% Line 220
			case Arg1 of
			  %% Line 221
			  <_cor13>
			      when let <_cor14> =
				    call 'erlang':'=:='
					(Arg1, Arg2)
				in  let <_cor15> =
					call 'erlang':'=:='
					    (_cor0, 'IFEQ')
				    in  call 'erlang':'and'
					    (_cor14, _cor15) ->
			      'true'
			  %% Line 222
			  <_cor16>
			      when let <_cor17> =
				    call 'erlang':'=:='
					(Arg1, Arg2)
				in  let <_cor18> =
					call 'erlang':'=:='
					    (_cor0, 'IFNEQ')
				    in  call 'erlang':'and'
					    (_cor17, _cor18) ->
			      'false'
			  %% Line 223
			  <_cor19>
			      when call 'erlang':'=:='
				    (_cor0,
				     'IFNEQ') ->
			      'true'
			  %% Line 224
			  <_cor20> when 'true' ->
			      'false'
			end
		    in  let <_cor8> =
			    %% Line 227
			    call 'erlang':'atom_to_list'
				(_cor0)
			in  let <Comment> =
				%% Line 226
				call 'io_lib':'format'
				    ([35|[32|[82|[101|[115|[117|[108|[116|[32|[111|[102|[32|[116|[101|[115|[116|[58|[32|[126|[115|[32|[40|[126|[115|[44|[32|[126|[115|[41|[32|[45|[62|[32|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 227
																													[_cor8|[Arg1|[Arg2|[_cor6|[]]]]])
			    in  %% Line 228
				{_cor6,Comment,Rest2}
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'get_arg'/4 =
    %% Line 231
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[32|Rest],Vars,Stop,Acc> when 'true' ->
	      %% Line 232
	      apply 'get_arg'/4
		  (Rest, Vars, Stop, Acc)
	  %% Line 233
	  <[40|Rest],Vars,Stop,_cor10> when 'true' ->
	      %% Line 234
	      apply 'get_arg'/4
		  (Rest, Vars, Stop, [])
	  %% Line 235
	  <[Stop|Rest],Vars,_cor11,Acc>
	      when call 'erlang':'=:='
		    (_cor11,
		     Stop) ->
	      let <Arg> =
		  %% Line 236
		  call 'lists':'reverse'
		      (Acc)
	      in  let <Subst> =
		      %% Line 237
		      apply 'subst'/2
			  (Arg, Vars)
		  in  %% Line 238
		      {Subst,Rest}
	  %% Line 239
	  <[C|Rest],Vars,Stop,Acc> when 'true' ->
	      %% Line 240
	      apply 'get_arg'/4
		  (Rest, Vars, Stop, [C|Acc])
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'get_arg',4}}] )
	    -| ['compiler_generated'] )
	end
'extract_clause'/2 =
    %% Line 243
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'true',Rest> when 'true' ->
	      %% Line 244
	      apply 'extract_clause'/3
		  ('true', Rest, [])
	  %% Line 245
	  <'false',Rest> when 'true' ->
	      let <Rest1> =
		  %% Line 246
		  apply 'discard_clause'/1
		      (Rest)
	      in  %% Line 247
		  apply 'extract_clause'/3
		      ('false', Rest1, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'extract_clause',2}}] )
	    -| ['compiler_generated'] )
	end
'extract_clause'/3 =
    %% Line 250
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'true',[64|[69|[76|[83|[69|[64|Rest]]]]]],Acc> when 'true' ->
	      let <Rest1> =
		  %% Line 251
		  apply 'discard_clause'/1
		      (Rest)
	      in  %% Line 252
		  call 'lists':'reverse'
		      (Acc, Rest1)
	  %% Line 254
	  <'false',[64|[69|[76|[83|[69|[64|Rest]]]]]],_X_Acc> when 'true' ->
	      %% Line 255
	      apply 'extract_clause'/3
		  ('false', Rest, [])
	  %% Line 257
	  <'true',[64|[69|[78|[68|[73|[70|[64|Rest]]]]]]],Acc> when 'true' ->
	      %% Line 258
	      call 'lists':'reverse'
		  (Acc, Rest)
	  %% Line 260
	  <'false',[64|[69|[78|[68|[73|[70|[64|Rest]]]]]]],Acc> when 'true' ->
	      %% Line 261
	      call 'lists':'reverse'
		  (Acc, Rest)
	  %% Line 263
	  <Bool,[C|Rest],Acc> when 'true' ->
	      %% Line 264
	      apply 'extract_clause'/3
		  (Bool, Rest, [C|Acc])
	  %% Line 266
	  <_cor7,[],Acc> when 'true' ->
	      %% Line 267
	      call 'lists':'reverse'
		  (Acc)
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'extract_clause',3}}] )
	    -| ['compiler_generated'] )
	end
'discard_clause'/1 =
    %% Line 269
    fun (_cor0) ->
	case _cor0 of
	  <[64|[69|[76|[83|[69|[64|Rest]]]]]]> when 'true' ->
	      %% Line 270
	      Rest
	  %% Line 271
	  <[64|[69|[78|[68|[73|[70|[64|Rest]]]]]]]> when 'true' ->
	      %% Line 272
	      Rest
	  %% Line 273
	  <[_X_C|Rest]> when 'true' ->
	      %% Line 274
	      apply 'discard_clause'/1
		  (Rest)
	  %% Line 275
	  <[]> when 'true' ->
	      %% Line 276
	      []
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'discard_clause',1}}] )
	    -| ['compiler_generated'] )
	end
'print_data'/1 =
    %% Line 279
    fun (_cor0) ->
	%% Line 280
	receive
	  %% Line 281
	  <{_cor3,{'data',Bytes}}>
	      when call 'erlang':'=:='
		    (_cor3,
		     _cor0) ->
	      do  %% Line 282
		  call 'io':'put_chars'
		      (Bytes)
		  %% Line 283
		  apply 'print_data'/1
		      (_cor0)
	  %% Line 284
	  <{_cor4,'eof'}>
	      when call 'erlang':'=:='
		    (_cor4,
		     _cor0) ->
	      let <_cor1> =
		  %% Line 285
		  call 'erlang':'self'
		      ()
	      in  do  %% Line 285
		      call 'erlang':'!'
			  (_cor0, {_cor1,'close'})
		      do  %% Line 286
			  receive
			    %% Line 287
			    <{_cor5,'closed'}>
				when call 'erlang':'=:='
				      (_cor5,
				       _cor0) ->
				'ok'
			  after 'infinity' ->
			    'ok'
			  %% Line 290
			  receive
			    %% Line 291
			    <{'EXIT',_cor6,_cor7}>
				when call 'erlang':'=:='
				      (_cor6,
				       _cor0) ->
				%% Line 292
				'ok'
			  after %% Line 293
				1 ->
			    %% Line 294
			    'ok'
	after 'infinity' ->
	  'true'
'maybe_atom_to_list'/1 =
    %% Line 298
    fun (_cor0) ->
	case _cor0 of
	  <To_list>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 299
	      To_list
	  %% Line 300
	  <To_list>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      %% Line 301
	      call 'erlang':'atom_to_list'
		  (To_list)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'maybe_atom_to_list',1}}] )
	    -| ['compiler_generated'] )
	end
'make_non_erlang'/2 =
    %% Line 306
    fun (_cor1,_cor0) ->
	let <AllDir> =
	    %% Line 308
	    call 'filename':'join'
		(_cor1, [46|[46|[47|[97|[108|[108|[95|[83|[85|[73|[84|[69|[95|[100|[97|[116|[97]]]]]]]]]]]]]]]]])
	in  do  %% Line 309
		case call 'filelib':'is_dir'
			 (AllDir) of
		  %% Line 310
		  <'true'> when 'true' ->
		      %% Line 311
		      apply 'make_non_erlang_do'/2
			  (AllDir, _cor0)
		  %% Line 312
		  <'false'> when 'true' ->
		      'ok'
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor3})
		    -| ['compiler_generated'] )
		end
		%% Line 315
		apply 'make_non_erlang_do'/2
		    (_cor1, _cor0)
'make_non_erlang_do'/2 =
    %% Line 317
    fun (_cor1,_cor0) ->
	%% Line 318
	letrec
	    'after$^0'/0 =
		fun () ->
		    %% Line 343
		    call 'timer':'sleep'
			(100)
	in  try
		let <MakeCommand> =
		    %% Line 319
		    call 'proplists':'get_value'
			('make_command', _cor0)
		in  let <FirstMakefile> =
			%% Line 321
			call 'filename':'join'
			    (_cor1, [77|[97|[107|[101|[102|[105|[108|[101|[46|[102|[105|[114|[115|[116]]]]]]]]]]]]]])
		    in  do  %% Line 322
			    case call 'filelib':'is_regular'
				     (FirstMakefile) of
			      %% Line 323
			      <'true'> when 'true' ->
				  do  %% Line 324
				      call 'io':'format'
					  ([77|[97|[107|[105|[110|[103|[32|[126|[112]]]]]]]]], [FirstMakefile|[]])
				      let <_cor4> =
					  %% Line 326
					  call 'filename':'basename'
					      (FirstMakefile)
				      in  %% Line 325
					  case call 'ts_make':'make'
						   (%% Line 326
						    MakeCommand, _cor1, _cor4) of
					    <'ok'> when 'true' ->
						'ok'
					    ( <_cor5> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_cor5})
					      -| ['compiler_generated'] )
					  end
			      %% Line 327
			      <'false'> when 'true' ->
				  'ok'
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor6})
				-| ['compiler_generated'] )
			    end
			    let <MakefileSrc> =
				%% Line 331
				call 'filename':'join'
				    (_cor1, [77|[97|[107|[101|[102|[105|[108|[101|[46|[115|[114|[99]]]]]]]]]]]])
			    in  let <MakefileDest> =
				    %% Line 332
				    call 'filename':'join'
					(_cor1, [77|[97|[107|[101|[102|[105|[108|[101]]]]]]]])
				in  %% Line 333
				    case call 'filelib':'is_regular'
					     (MakefileSrc) of
				      %% Line 334
				      <'true'> when 'true' ->
					  %% Line 335
					  case call 'ts_lib':'subst_file'
						   (MakefileSrc, MakefileDest, _cor0) of
					    <'ok'> when 'true' ->
						do  %% Line 336
						    call 'io':'format'
							([77|[97|[107|[105|[110|[103|[32|[126|[112]]]]]]]]], [MakefileDest|[]])
						    let <_cor19> =
							%% Line 337
							call 'ts_make':'make'
							    ([{'makefile',[77|[97|[107|[101|[102|[105|[108|[101]]]]]]]]}|[{'data_dir',_cor1}|_cor0]])
						    in  %% Line 337
							case _cor19 of
							  <'ok'> when 'true' ->
							      ( _cor19
								-| ['compiler_generated'] )
							  ( <_cor10> when 'true' ->
								primop 'match_fail'
								    ({'badmatch',_cor10})
							    -| ['compiler_generated'] )
							end
					    ( <_cor9> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_cor9})
					      -| ['compiler_generated'] )
					  end
				      %% Line 339
				      <'false'> when 'true' ->
					  %% Line 340
					  'ok'
				      ( <_cor11> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor11})
					-| ['compiler_generated'] )
				    end
	    of <_cor12> ->
		do  ( apply 'after$^0'/0
			  ()
		      -| ['compiler_generated'] )
		    _cor12
	    catch <_cor15,_cor14,_cor13> ->
		do  ( apply 'after$^0'/0
			  ()
		      -| ['compiler_generated'] )
		    primop 'raise'
			(_cor13, _cor14)
'b2s'/1 =
    %% Line 346
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 347
	    apply 'default_encoding'/0
		()
	in  %% Line 347
	    call 'unicode':'characters_to_list'
		(_cor0, _cor1)
'default_encoding'/0 =
    %% Line 349
    fun () ->
	%% Line 350
	try
	    call 'epp':'default_encoding'
		()
	of <_cor0> ->
	    _cor0
	catch <_cor3,_cor2,_cor1> ->
	    case <_cor3,_cor2,_cor1> of
	      %% Line 351
	      <'error','undef',_cor4> when 'true' ->
		  'latin1'
	      ( <_cor3,_cor2,_cor1> when 'true' ->
		    primop 'raise'
			(_cor1, _cor2)
		-| ['compiler_generated'] )
	    end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ts_lib')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ts_lib', _cor0)
end