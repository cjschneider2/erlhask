module 'ts_run' ['ct_run_test'/2,
		 'module_info'/0,
		 'module_info'/1,
		 'run'/4]
    attributes []
'run'/4 =
    %% Line 51
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 53
	    case call 'lists':'keysearch'
		     ('vars', 1, _cor1) of
	      %% Line 54
	      <{'value',{'vars',Vars1}}> when 'true' ->
		  %% Line 55
		  call 'erlang':'++'
		      (Vars1, _cor0)
	      %% Line 56
	      <_cor21> when 'true' ->
		  _cor0
	    end
	in  let <_cor8> =
		%% Line 60
		call 'lists':'member'
		    ('interactive', _cor1)
	    in  let <_cor7> =
		    %% Line 60
		    call 'lists':'member'
			('batch', _cor1)
		in  let <Batch,Runner> =
			%% Line 60
			case <_cor8,_cor7> of
			  %% Line 61
			  <'false','true'> when 'true' ->
			      %% Line 62
			      <'true',( 'run_batch'/3
					-| [{'id',{0,0,'-run/4-fun-0-'}}] )>
			  %% Line 63
			  <_fol0,_fol1> when 'true' ->
			      %% Line 64
			      <'false',( 'run_interactive'/3
					 -| [{'id',{0,0,'-run/4-fun-1-'}}] )>
			end
		    in  let <Hooks> =
			    %% Line 66
			    [( 'init_state'/3
			       -| [{'id',{0,0,'-run/4-fun-2-'}}] )|%% Line 67
								   [( 'run_preinits'/3
								      -| [{'id',{0,0,'-run/4-fun-3-'}}] )|%% Line 68
													  [( 'make_command'/3
													     -| [{'id',{0,0,'-run/4-fun-4-'}}] )|%% Line 69
																		 [Runner|[]]]]]
			in  let <Args> =
				%% Line 70
				apply 'make_common_test_args'/3
				    (_cor2, _cor1, _cor5)
			    in  let <St> =
				    %% Line 71
				    {'state',_cor3,'undefined',Args,'undefined','undefined','undefined','undefined',Batch,'undefined','undefined','undefined'}
				in  %% Line 73
				    case apply 'execute'/4
					     (Hooks, _cor5, [], St) of
				      %% Line 74
				      <{'ok',_cor23,_cor24,_cor25}> when 'true' ->
					  'ok'
				      %% Line 75
				      <Error> when 'true' ->
					  Error
				    end
'execute'/4 =
    %% Line 78
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Hook|Rest],Vars0,Spec0,St0> when 'true' ->
	      %% Line 79
	      case apply Hook
		       (Vars0, Spec0, St0) of
		%% Line 80
		<'ok'> when 'true' ->
		    %% Line 81
		    apply 'execute'/4
			(Rest, Vars0, Spec0, St0)
		%% Line 82
		<{'ok',Vars,Spec,St}> when 'true' ->
		    %% Line 83
		    apply 'execute'/4
			(Rest, Vars, Spec, St)
		%% Line 84
		<Error> when 'true' ->
		    %% Line 85
		    Error
	      end
	  %% Line 87
	  <[],Vars,Spec,St> when 'true' ->
	      %% Line 88
	      {'ok',Vars,Spec,St}
	  ( <_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6,_cor5})
		  -| [{'function_name',{'execute',4}}] )
	    -| ['compiler_generated'] )
	end
'ct_run_test'/2 =
    %% Line 92
    fun (_cor1,_cor0) ->
	%% Line 93
	try
	    %% Line 94
	    case call 'file':'set_cwd'
		     (_cor1) of
	      <'ok'> when 'true' ->
		  %% Line 95
		  case call 'ct':'run_test'
			   (_cor0) of
		    %% Line 96
		    <{_cor10,_cor11,_cor12}> when 'true' ->
			%% Line 97
			'ok'
		    %% Line 98
		    <{'error',Error}> when 'true' ->
			%% Line 99
			call 'io':'format'
			    ([69|[82|[82|[79|[82|[58|[32|[126|[80|[10]]]]]]]]]], [Error|[20]])
		    %% Line 100
		    <Other> when 'true' ->
			%% Line 101
			call 'io':'format'
			    ([126|[80|[10]]], [Other|[20]])
		  end
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor2})
		-| ['compiler_generated'] )
	    end
	of <_cor4> ->
	    _cor4
	catch <_cor7,_cor6,_cor5> ->
	    %% Line 105
	    call 'io':'format'
		([67|[82|[65|[83|[72|[58|[32|[126|[80|[10]]]]]]]]]], [_cor6|[20]])
'del_skipped_suite_data_dir'/2 =
    %% Line 113
    fun (_cor1,_cor0) ->
	let <_cor8> =
	    %% Line 114
	    ( fun (_cor5,_cor4) ->
		  case <_cor5,_cor4> of
		    <{'skip',{SS,_X_C}},SSs> when 'true' ->
			let <_cor2> =
			    %% Line 115
			    call 'erlang':'atom_to_list'
				(SS)
			in  let <_cor3> =
				%% Line 115
				call 'erlang':'++'
				    (_cor2, [95|[100|[97|[116|[97]]]]])
			    in  %% Line 115
				[_cor3|SSs]
		    %% Line 116
		    <_cor18,SSs> when 'true' ->
			%% Line 117
			SSs
		  end
	      -| [{'id',{0,0,'-del_skipped_suite_data_dir/2-fun-0-'}}] )
	in  let <SkipDirNames> =
		%% Line 114
		call 'lists':'foldl'
		    (_cor8, %% Line 119
			    [], _cor0)
	    in  let <_cor15> =
		    %% Line 121
		    ( fun (_cor13) ->
			  let <_cor10> =
			      %% Line 122
			      call 'filename':'dirname'
				  (_cor13)
			  in  let <_cor11> =
				  %% Line 122
				  call 'filename':'basename'
				      (_cor10)
			      in  let <_cor12> =
				      %% Line 122
				      call 'lists':'member'
					  (_cor11, %% Line 123
						   SkipDirNames)
				  in  %% Line 122
				      call 'erlang':'not'
					  (_cor12)
		      -| [{'id',{0,0,'-del_skipped_suite_data_dir/2-fun-1-'}}] )
		in  %% Line 121
		    call 'lists':'filter'
			(_cor15, _cor1)
'init_state'/3 =
    %% Line 129
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Vars,[],St0> when 'true' ->
	      %% Line 131
	      ( case St0 of
		  ( <( {'state',_rec0,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34}
		       -| ['compiler_generated'] )> when 'true' ->
			let <FileBase,Wc0,Mod> =
			    case _rec0 of
			      %% Line 132
			      <{Fil,Mod0}> when 'true' ->
				  let <_cor5> =
				      call 'erlang':'atom_to_list'
					  (Mod0)
				  in  let <_cor6> =
					  call 'erlang':'++'
					      (_cor5, [42|[95|[100|[97|[116|[97]]]]]])
				      in  <Fil,_cor6,Mod0>
			      %% Line 133
			      <Fil> when 'true' ->
				  <Fil,[42|[95|[83|[85|[73|[84|[69|[95|[100|[97|[116|[97]]]]]]]]]]]],[]>
			    end
			in  %% Line 135
			    case call 'file':'get_cwd'
				     () of
			      <{'ok',Cwd}> when 'true' ->
				  let <_cor12> =
				      %% Line 136
				      call 'filename':'dirname'
					  (Cwd)
				  in  let <_cor11> =
					  %% Line 136
					  call 'erlang':'++'
					      (FileBase, [95|[116|[101|[115|[116]]]]])
				      in  let <TestDir> =
					      %% Line 136
					      call 'filename':'join'
						  (_cor12, _cor11)
					  in  %% Line 137
					      case call 'filelib':'is_dir'
						       (TestDir) of
						%% Line 138
						<'true'> when 'true' ->
						    let <Wc> =
							%% Line 139
							call 'filename':'join'
							    (TestDir, Wc0)
						    in  let <_cor16> =
							    %% Line 141
							    call 'erlang':'setelement'
								(10, St0, Wc)
							in  let <_cor17> =
								%% Line 141
								call 'erlang':'setelement'
								    (6, _cor16, TestDir)
							    in  let <_cor18> =
								    %% Line 140
								    call 'erlang':'setelement'
									(3, _cor17, Mod)
								in  let <_cor20> =
									%% Line 140
									call 'erlang':'setelement'
									    (2, _cor18, FileBase)
								    in  %% Line 140
									{'ok',Vars,[],_cor20}
						%% Line 142
						<'false'> when 'true' ->
						    %% Line 143
						    {'error',{'no_test_directory',TestDir}}
						( <_cor21> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_cor21})
						  -| ['compiler_generated'] )
					      end
			      ( <_cor10> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor10})
				-| ['compiler_generated'] )
			    end
		    -| ['compiler_generated'] )
		  ( <_cor35> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor24,_cor23,_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22})
		  -| [{'function_name',{'init_state',3}}] )
	    -| ['compiler_generated'] )
	end
'run_preinits'/3 =
    %% Line 149
    fun (_cor2,_cor1,_cor0) ->
	%% Line 150
	( case _cor0 of
	    ( <( {'state',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_rec2,_cor19,_cor20}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Wc> =
		      call 'filename':'join'
			  (_rec2, [77|[97|[107|[101|[102|[105|[108|[101|[46|[102|[105|[114|[115|[116]]]]]]]]]]]]]])
		  in  let <_cor6> =
			  %% Line 151
			  call 'filelib':'wildcard'
			      (Wc)
		      in  let <_cor7> =
			      %% Line 151
			      apply 'del_skipped_suite_data_dir'/2
				  (_cor6, _cor1)
			  in  do  %% Line 151
				  apply 'run_pre_makefiles'/4
				      (_cor7, _cor2, _cor1, _cor0)
				  %% Line 153
				  {'ok',_cor2,_cor1,_cor0}
	      -| ['compiler_generated'] )
	    ( <_cor21> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'run_pre_makefiles'/4 =
    %% Line 155
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Makefile|Ms],Vars0,Spec0,St0> when 'true' ->
	      let <Hooks> =
		  %% Line 156
		  [( 'run_pre_makefile'/3
		     -| [{'id',{0,0,'-run_pre_makefiles/4-fun-0-'}}] )|[]]
	      in  %% Line 157
		  case St0 of
		    <{'state',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23}> when 'true' ->
			let <_cor7> =
			    call 'erlang':'setelement'
				(8, St0, Makefile)
			in  case apply 'execute'/4
				     (Hooks, Vars0, Spec0, _cor7) of
			      %% Line 158
			      <Error = {'error',_X_Reason}> when 'true' ->
				  Error
			      %% Line 159
			      <{'ok',Vars,Spec,St}> when 'true' ->
				  apply 'run_pre_makefiles'/4
				      (Ms, Vars, Spec, St)
			      ( <_cor8> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor8})
				-| ['compiler_generated'] )
			    end
		    ( <_cor24> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 161
	  <[],Vars,Spec,St> when 'true' ->
	      {'ok',Vars,Spec,St}
	  ( <_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'run_pre_makefiles',4}}] )
	    -| ['compiler_generated'] )
	end
'run_pre_makefile'/3 =
    %% Line 163
    fun (_cor2,_cor1,_cor0) ->
	%% Line 164
	( case _cor0 of
	    ( <( {'state',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_rec4,_cor19,_cor20,_cor21,_cor22}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Shortname> =
		      %% Line 165
		      call 'filename':'basename'
			  (_rec4)
		  in  let <DataDir> =
			  %% Line 166
			  call 'filename':'dirname'
			      (_rec4)
		      in  let <Make> =
			      %% Line 167
			      call 'ts_lib':'var'
				  ('make_command', _cor2)
			  in  %% Line 168
			      case call 'ts_make':'make'
				       (Make, DataDir, Shortname) of
				%% Line 169
				<'ok'> when 'true' ->
				    {'ok',_cor2,_cor1,_cor0}
				%% Line 170
				<Error = {'error',_X_Reason}> when 'true' ->
				    Error
				( <_cor9> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor9})
				  -| ['compiler_generated'] )
			      end
	      -| ['compiler_generated'] )
	    ( <_cor23> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'get_config_files'/0 =
    %% Line 173
    fun () ->
	let <_cor2> =
	    %% Line 175
	    case call 'os':'type'
		     () of
	      %% Line 176
	      <{'unix',_cor3}> when 'true' ->
		  [[116|[115|[46|[117|[110|[105|[120|[46|[99|[111|[110|[102|[105|[103]]]]]]]]]]]]]]]
	      %% Line 177
	      <{'win32',_cor4}> when 'true' ->
		  [[116|[115|[46|[119|[105|[110|[51|[50|[46|[99|[111|[110|[102|[105|[103]]]]]]]]]]]]]]]]
	      %% Line 178
	      <_cor5> when 'true' ->
		  []
	    end
	in  %% Line 175
	    [[116|[115|[46|[99|[111|[110|[102|[105|[103]]]]]]]]]|_cor2]
'backslashify'/1 =
    %% Line 183
    fun (_cor0) ->
	case _cor0 of
	  <[92|[34|T]]> when 'true' ->
	      let <_cor1> =
		  %% Line 184
		  apply 'backslashify'/1
		      (T)
	      in  %% Line 184
		  [92|[34|_cor1]]
	  %% Line 185
	  <[34|T]> when 'true' ->
	      let <_cor2> =
		  %% Line 186
		  apply 'backslashify'/1
		      (T)
	      in  %% Line 186
		  [92|[34|_cor2]]
	  %% Line 187
	  <[H|T]> when 'true' ->
	      let <_cor3> =
		  %% Line 188
		  apply 'backslashify'/1
		      (T)
	      in  %% Line 188
		  [H|_cor3]
	  %% Line 189
	  <[]> when 'true' ->
	      %% Line 190
	      []
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'backslashify',1}}] )
	    -| ['compiler_generated'] )
	end
'make_command'/3 =
    %% Line 192
    fun (_cor2,_cor1,_cor0) ->
	%% Line 193
	case call 'file':'get_cwd'
		 () of
	  <{'ok',Cwd}> when 'true' ->
	      %% Line 194
	      ( case _cor0 of
		  ( <( {'state',_cor48,_cor49,_cor50,_cor51,_rec5,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57}
		       -| ['compiler_generated'] )> when 'true' ->
			let <TestPath> =
			    %% Line 195
			    call 'filename':'nativename'
				(_rec5)
			in  let <_cor16> =
				%% Line 196
				case call 'os':'getenv'
					 ([84|[83|[95|[82|[85|[78|[95|[86|[65|[76|[71|[82|[73|[78|[68]]]]]]]]]]]]]]]) of
				  %% Line 197
				  <'false'> when 'true' ->
				      let <_cor8> =
					  %% Line 198
					  call 'lib':'progname'
					      ()
				      in  %% Line 198
					  call 'erlang':'atom_to_list'
					      (_cor8)
				  %% Line 199
				  <_cor59> when 'true' ->
				      do  %% Line 200
					  case _cor48 of
					    %% Line 201
					    <Dir>
						when call 'erlang':'is_list'
						      (_cor48) ->
						let <_cor11> =
						    %% Line 202
						    call 'erlang':'++'
							(Dir, [45])
						in  %% Line 202
						    call 'os':'putenv'
							([86|[65|[76|[71|[82|[73|[78|[68|[95|[76|[79|[71|[70|[73|[76|[69|[95|[80|[82|[69|[70|[73|[88]]]]]]]]]]]]]]]]]]]]]]], _cor11)
					    %% Line 203
					    <_cor71> when 'true' ->
						'ok'
					  end
					  let <_cor14> =
					      %% Line 207
					      case call 'erlang':'system_info'
						       ('smp_support') of
						%% Line 208
						<'true'> when 'true' ->
						    [32|[45|[115|[109|[112]]]]]
						%% Line 209
						<'false'> when 'true' ->
						    []
						( <_cor13> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_cor13})
						  -| ['compiler_generated'] )
					      end
					  in  %% Line 206
					      call 'erlang':'++'
						  ([99|[101|[114|[108|[32|[45|[118|[97|[108|[103|[114|[105|[110|[100]]]]]]]]]]]]]], _cor14)
				end
			    in  let <_cor19> =
				    %% Line 213
				    case call 'ts_lib':'var'
					     ('longnames', _cor2) of
				      %% Line 214
				      <'true'> when 'true' ->
					  %% Line 215
					  [32|[45|[110|[97|[109|[101|[32]]]]]]]
				      %% Line 216
				      <'false'> when 'true' ->
					  %% Line 217
					  [32|[45|[115|[110|[97|[109|[101|[32]]]]]]]]
				      ( <_cor18> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor18})
					-| ['compiler_generated'] )
				    end
				in  let <_cor22> =
					%% Line 220
					case call 'lists':'keysearch'
						 ('erl_start_args', 1, _cor2) of
					  %% Line 221
					  <{'value',{'erl_start_args',Args}}> when 'true' ->
					      Args
					  %% Line 222
					  <'false'> when 'true' ->
					      []
					  ( <_cor21> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_cor21})
					    -| ['compiler_generated'] )
					end
				    in  let <_cor26> =
					    %% Line 224
					    call 'erlang':'++'
						(_cor48, [95|[101|[114|[108|[95|[99|[114|[97|[115|[104|[46|[100|[117|[109|[112]]]]]]]]]]]]]]])
					in  let <CrashFile> =
						%% Line 224
						call 'filename':'join'
						    (Cwd, _cor26)
					    in  do  %% Line 225
						    case call 'filelib':'is_file'
							     (CrashFile) of
						      %% Line 226
						      <'true'> when 'true' ->
							  do  %% Line 227
							      call 'io':'format'
								  ([116|[115|[95|[114|[117|[110|[58|[32|[68|[101|[108|[101|[116|[105|[110|[103|[32|[100|[117|[109|[112|[58|[32|[126|[116|[115|[10]]]]]]]]]]]]]]]]]]]]]]]]]]], [CrashFile|[]])
							      %% Line 228
							      call 'file':'delete'
								  (CrashFile)
						      %% Line 229
						      <'false'> when 'true' ->
							  'ok'
						      ( <_cor28> when 'true' ->
							    primop 'match_fail'
								({'case_clause',_cor28})
							-| ['compiler_generated'] )
						    end
						    let <NetDir> =
							%% Line 235
							call 'ts_lib':'var'
							    ('ts_net_dir', _cor2)
						    in  let <TestVars> =
							    %% Line 236
							    [[34|[123|[110|[101|[116|[95|[100|[105|[114|[44|[92|[34]]]]]]]]]]]]|[NetDir|[[92|[34|[125|[34]]]]]]]
							in  let <_cor31> =
								%% Line 240
								call 'ts_lib':'var'
								    ('rsh_name', _cor2)
							    in  let <_cor32> =
								    %% Line 242
								    apply 'path_separator'/0
									()
								in  let <_cor33> =
									%% Line 243
									apply 'remove_path_spaces'/0
									    ()
								    in  let <_cor34> =
									    %% Line 242
									    call 'lists':'flatten'
										([TestPath|[_cor32|%% Line 243
												   [_cor33|[]]]])
									in  let <_cor35> =
										%% Line 242
										apply 'backslashify'/1
										    (_cor34)
									    in  let <_cor38> =
										    %% Line 252
										    call 'lists':'flatten'
											(_cor50)
										in  let <_cor39> =
											%% Line 252
											apply 'backslashify'/1
											    (_cor38)
										    in  let <Cmd> =
											    %% Line 239
											    [_cor16|[_cor19|[[116|[101|[115|[116|[95|[115|[101|[114|[118|[101|[114|[32|[45|[114|[115|[104|[32]]]]]]]]]]]]]]]]]|%% Line 240
																									       [_cor31|%% Line 241
																										       [[32|[45|[101|[110|[118|[32|[80|[65|[84|[72|[32|[34]]]]]]]]]]]]|%% Line 242
																																		       [_cor35|%% Line 244
																																			       [[34]|%% Line 245
																																				     [[32|[45|[101|[110|[118|[32|[69|[82|[76|[95|[67|[82|[65|[83|[72|[95|[68|[85|[77|[80|[32]]]]]]]]]]]]]]]]]]]]]|[CrashFile|%% Line 248
																																																			     [[32|[45|[98|[111|[111|[116|[32|[115|[116|[97|[114|[116|[95|[115|[97|[115|[108|[32|[45|[115|[97|[115|[108|[32|[101|[114|[114|[108|[111|[103|[95|[116|[121|[112|[101|[32|[101|[114|[114|[111|[114]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|%% Line 249
																																																																																       [[32|[45|[112|[122|[32|[34]]]]]]|[Cwd|[[34]|%% Line 250
																																																																																						   [[32|[45|[99|[116|[95|[116|[101|[115|[116|[95|[118|[97|[114|[115|[32]]]]]]]]]]]]]]]|[TestVars|%% Line 251
																																																																																																		 [[32|[45|[101|[118|[97|[108|[32|[34|[116|[115|[95|[114|[117|[110|[58|[99|[116|[95|[114|[117|[110|[95|[116|[101|[115|[116|[40|[92|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[_rec5|[[92|[34|[44|[32]]]]|%% Line 252
																																																																																																																									       [_cor39|[[41|[34|[32]]]|%% Line 254
																																																																																																																												       [_cor22|[]]]]]]]]]]]]]]]]]]]]]]
											in  let <_rec9> =
												%% Line 255
												call 'lists':'flatten'
												    (Cmd)
											    in  let <_cor44> =
												    %% Line 255
												    call 'erlang':'setelement'
													(5, _cor0, _rec9)
												in  %% Line 255
												    {'ok',_cor2,_cor1,_cor44}
		    -| ['compiler_generated'] )
		  ( <_cor58> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'run_batch'/3 =
    %% Line 258
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 259
	    call 'erlang':'process_flag'
		('trap_exit', 'true')
	    %% Line 260
	    ( case _cor0 of
		( <( {'state',_cor13,_cor14,_cor15,_rec11,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <Command> =
			  call 'erlang':'++'
			      (_rec11, [32|[45|[110|[111|[105|[110|[112|[117|[116|[32|[45|[115|[32|[101|[114|[108|[97|[110|[103|[32|[104|[97|[108|[116]]]]]]]]]]]]]]]]]]]]]]]])
		      in  do  %% Line 261
			      call 'ts_lib':'progress'
				  (_cor2, 1, [67|[111|[109|[109|[97|[110|[100|[58|[32|[126|[116|[115|[126|[110]]]]]]]]]]]]]], [Command|[]])
			      do  %% Line 262
				  call 'io':'format'
				      ('user', [67|[111|[109|[109|[97|[110|[100|[58|[32|[126|[116|[115|[126|[110]]]]]]]]]]]]]], [Command|[]])
				  let <Port> =
				      %% Line 263
				      call 'erlang':'open_port'
					  ({'spawn',Command}, ['stream'|['in'|['eof']]])
				  in  let <_cor8> =
					  %% Line 264
					  case call 'os':'getenv'
						   ([84|[83|[95|[82|[85|[78|[95|[86|[65|[76|[71|[82|[73|[78|[68]]]]]]]]]]]]]]]) of
					    %% Line 265
					    <'false'> when 'true' ->
						1
					    %% Line 266
					    <_cor24> when 'true' ->
						100
					  end
				      in  let <Timeout> =
					      %% Line 264
					      call 'erlang':'*'
						  (30000, _cor8)
					  in  %% Line 268
					      apply 'tricky_print_data'/2
						  (Port, Timeout)
		  -| ['compiler_generated'] )
		( <_cor23> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'tricky_print_data'/2 =
    %% Line 270
    fun (_cor1,_cor0) ->
	%% Line 271
	receive
	  %% Line 272
	  <{_cor7,{'data',Bytes}}>
	      when call 'erlang':'=:='
		    (_cor7,
		     _cor1) ->
	      do  %% Line 273
		  call 'io':'put_chars'
		      (Bytes)
		  %% Line 274
		  apply 'tricky_print_data'/2
		      (_cor1, _cor0)
	  %% Line 275
	  <{_cor8,'eof'}>
	      when call 'erlang':'=:='
		    (_cor8,
		     _cor1) ->
	      let <_cor4> =
		  %% Line 276
		  call 'erlang':'self'
		      ()
	      in  do  %% Line 276
		      call 'erlang':'!'
			  (_cor1, {_cor4,'close'})
		      do  %% Line 277
			  receive
			    %% Line 278
			    <{_cor9,'closed'}>
				when call 'erlang':'=:='
				      (_cor9,
				       _cor1) ->
				'ok'
			  after 'infinity' ->
			    'ok'
			  %% Line 281
			  receive
			    %% Line 282
			    <{'EXIT',_cor10,_cor11}>
				when call 'erlang':'=:='
				      (_cor10,
				       _cor1) ->
				%% Line 283
				'ok'
			  after %% Line 284
				1 ->
			    %% Line 285
			    'ok'
	after _cor0 ->
	  %% Line 288
	  case call 'erl_epmd':'names'
		   () of
	    %% Line 289
	    <{'ok',Names}> when 'true' ->
		%% Line 290
		case apply 'is_testnode_dead'/1
			 (Names) of
		  %% Line 291
		  <'true'> when 'true' ->
		      %% Line 292
		      call 'io':'put_chars'
			  ([87|[65|[82|[78|[73|[78|[71|[58|[32|[78|[111|[32|[69|[79|[70|[44|[32|[98|[117|[116|[32|[116|[101|[115|[116|[95|[115|[101|[114|[118|[101|[114|[32|[110|[111|[100|[101|[32|[105|[115|[32|[100|[111|[119|[110|[33|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		  %% Line 294
		  <'false'> when 'true' ->
		      %% Line 295
		      apply 'tricky_print_data'/2
			  (_cor1, _cor0)
		  ( <_cor2> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor2})
		    -| ['compiler_generated'] )
		end
	    %% Line 297
	    <_cor12> when 'true' ->
		%% Line 298
		apply 'tricky_print_data'/2
		    (_cor1, _cor0)
	  end
'is_testnode_dead'/1 =
    %% Line 302
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      'true'
	  %% Line 303
	  <[{[116|[101|[115|[116|[95|[115|[101|[114|[118|[101|[114]]]]]]]]]]],_cor2}|_cor3]> when 'true' ->
	      'false'
	  %% Line 304
	  <[_cor4|T]> when 'true' ->
	      apply 'is_testnode_dead'/1
		  (T)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'is_testnode_dead',1}}] )
	    -| ['compiler_generated'] )
	end
'run_interactive'/3 =
    %% Line 306
    fun (_cor2,_cor1,_cor0) ->
	%% Line 307
	( case _cor0 of
	    ( <( {'state',_cor13,_cor14,_cor15,_rec12,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22}
		 -| ['compiler_generated'] )> when 'true' ->
		  do  %% Line 308
		      call 'ts_lib':'progress'
			  (_cor2, 1, [67|[111|[109|[109|[97|[110|[100|[58|[32|[126|[115|[126|[110]]]]]]]]]]]]], [_rec12|[]])
		      %% Line 309
		      case call 'ts_lib':'var'
			       ('os', _cor2) of
			%% Line 310
			<[87|[105|[110|[100|[111|[119|[115|[32|[57|[53]]]]]]]]]]> when 'true' ->
			    let <_cor6> =
				%% Line 318
				call 'erlang':'++'
				    ([115|[116|[97|[114|[116|[32|[60|[32|[110|[117|[108|[32|[62|[32|[110|[117|[108|[32|[119]]]]]]]]]]]]]]]]]]], _rec12)
			    in  do  %% Line 318
				    call 'os':'cmd'
					(_cor6)
				    %% Line 319
				    'ok'
			%% Line 320
			<[87|[105|[110|[100|[111|[119|[115|[32|[57|[56]]]]]]]]]]> when 'true' ->
			    let <_cor7> =
				%% Line 321
				call 'erlang':'++'
				    ([115|[116|[97|[114|[116|[32|[60|[32|[110|[117|[108|[32|[62|[32|[110|[117|[108|[32|[119]]]]]]]]]]]]]]]]]]], _rec12)
			    in  do  %% Line 321
				    call 'os':'cmd'
					(_cor7)
				    %% Line 322
				    'ok'
			%% Line 323
			<[87|[105|[110|[100|[111|[119|[115|_cor24]]]]]]]> when 'true' ->
			    let <_cor8> =
				%% Line 324
				call 'erlang':'++'
				    ([115|[116|[97|[114|[116|[32|[119]]]]]]], _rec12)
			    in  do  %% Line 324
				    call 'os':'cmd'
					(_cor8)
				    %% Line 325
				    'ok'
			%% Line 326
			<_X_Other> when 'true' ->
			    %% Line 328
			    apply 'start_xterm'/1
				(_rec12)
		      end
	      -| ['compiler_generated'] )
	    ( <_cor23> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'start_xterm'/1 =
    %% Line 331
    fun (_cor0) ->
	%% Line 332
	case call 'os':'find_executable'
		 ([120|[116|[101|[114|[109]]]]]) of
	  %% Line 333
	  <'false'> when 'true' ->
	      do  %% Line 334
		  call 'io':'format'
		      ([84|[104|[101|[32|[96|[120|[116|[101|[114|[109|[39|[32|[112|[114|[111|[103|[114|[97|[109|[32|[119|[97|[115|[32|[110|[111|[116|[32|[102|[111|[117|[110|[100|[46|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		  %% Line 335
		  {'error','no_xterm'}
	  %% Line 336
	  <_X_Xterm> when 'true' ->
	      %% Line 337
	      case call 'os':'getenv'
		       ([68|[73|[83|[80|[76|[65|[89]]]]]]]) of
		%% Line 338
		<'false'> when 'true' ->
		    do  %% Line 339
			call 'io':'format'
			    ([68|[73|[83|[80|[76|[65|[89|[32|[105|[115|[32|[110|[111|[116|[32|[115|[101|[116|[46|[10]]]]]]]]]]]]]]]]]]]])
			%% Line 340
			{'error','display_not_set'}
		%% Line 341
		<Display> when 'true' ->
		    do  %% Line 342
			call 'io':'format'
			    ([83|[116|[97|[114|[116|[105|[110|[103|[32|[120|[116|[101|[114|[109|[32|[40|[68|[73|[83|[80|[76|[65|[89|[61|[126|[115|[41|[46|[46|[46|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 343
																								      [Display|[]])
			let <_cor1> =
			    %% Line 344
			    call 'erlang':'++'
				(_cor0, [38])
			in  let <_cor2> =
				%% Line 344
				call 'erlang':'++'
				    ([120|[116|[101|[114|[109|[32|[45|[115|[108|[32|[49|[48|[48|[48|[48|[32|[45|[101|[32]]]]]]]]]]]]]]]]]]], _cor1)
			    in  do  %% Line 344
				    call 'os':'cmd'
					(_cor2)
				    %% Line 345
				    'ok'
	      end
	end
'path_separator'/0 =
    %% Line 349
    fun () ->
	%% Line 350
	case call 'os':'type'
		 () of
	  %% Line 351
	  <{'win32',_cor1}> when 'true' ->
	      [59]
	  %% Line 352
	  <{'unix',_cor2}> when 'true' ->
	      [58]
	  ( <_cor0> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor0})
	    -| ['compiler_generated'] )
	end
'make_common_test_args'/3 =
    %% Line 356
    fun (_cor2,_cor1,_cor0) ->
	let <_cor10> =
	    %% Line 358
	    case call 'lists':'keysearch'
		     ('trace', 1, _cor1) of
	      %% Line 359
	      <{'value',{'trace',TI}}>
		  when let <_cor3> =
			call 'erlang':'is_tuple'
			    (TI)
		    in  let <_cor5> =
			    try
				let <_cor4> =
				    call 'erlang':'hd'
					(TI)
				in  call 'erlang':'is_tuple'
					(_cor4)
			    of <Try> ->
				Try
			    catch <T,R> ->
				'false'
			in  call 'erlang':'or'
				(_cor3, _cor5) ->
		  let <_cor6> =
		      %% Line 360
		      call 'io_lib':'format'
			  ([126|[112|[46|[126|[110]]]]], [TI|[]])
		  in  %% Line 360
		      case call 'file':'write_file'
			       ([116|[114|[97|[99|[101|[105|[110|[102|[111]]]]]]]]], _cor6) of
			<'ok'> when 'true' ->
			    %% Line 361
			    [{'ct_trace',[116|[114|[97|[99|[101|[105|[110|[102|[111]]]]]]]]]}]
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor7})
			  -| ['compiler_generated'] )
		      end
	      %% Line 362
	      <{'value',{'trace',TIFile}}>
		  when call 'erlang':'is_atom'
			(TIFile) ->
		  let <_cor8> =
		      %% Line 363
		      call 'erlang':'atom_to_list'
			  (TIFile)
		  in  %% Line 363
		      [{'ct_trace',_cor8}|[]]
	      %% Line 364
	      <{'value',{'trace',TIFile}}> when 'true' ->
		  %% Line 365
		  [{'ct_trace',TIFile}|[]]
	      %% Line 366
	      <'false'> when 'true' ->
		  %% Line 367
		  []
	      ( <_cor9> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor9})
		-| ['compiler_generated'] )
	    end
	in  let <_cor14> =
		%% Line 370
		case call 'lists':'keysearch'
			 ('cover', 1, _cor1) of
		  %% Line 371
		  <{'value',{'cover',App,'none',_X_Analyse}}> when 'true' ->
		      do  %% Line 372
			  call 'io':'format'
			      ([78|[111|[32|[99|[111|[118|[101|[114|[32|[102|[105|[108|[101|[32|[102|[111|[117|[110|[100|[32|[102|[111|[114|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]], [App|[]])
			  %% Line 373
			  []
		  %% Line 374
		  <{'value',{'cover',_X_App,File,_X_Analyse}}> when 'true' ->
		      let <_cor12> =
			  %% Line 375
			  apply 'to_list'/1
			      (File)
		      in  %% Line 375
			  [{'cover',_cor12}|[{'cover_stop','false'}]]
		  %% Line 376
		  <'false'> when 'true' ->
		      %% Line 377
		      []
		  ( <_cor13> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor13})
		    -| ['compiler_generated'] )
		end
	    in  let <_cor17> =
		    %% Line 380
		    case call 'lists':'keysearch'
			     ('logdir', 1, _cor1) of
		      %% Line 381
		      <{'value',{'logdir',_cor43}}> when 'true' ->
			  %% Line 382
			  []
		      %% Line 383
		      <'false'> when 'true' ->
			  %% Line 384
			  [{'logdir',[46|[46|[47|[116|[101|[115|[116|[95|[115|[101|[114|[118|[101|[114]]]]]]]]]]]]]]}]
		      ( <_cor16> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor16})
			-| ['compiler_generated'] )
		    end
		in  let <_cor21> =
			%% Line 390
			call 'os':'getenv'
			    ([84|[69|[83|[84|[95|[67|[79|[78|[70|[73|[71|[95|[80|[65|[84|[72]]]]]]]]]]]]]]]])
		    in  let <_cor20> =
			    %% Line 391
			    call 'lists':'keysearch'
				('config', 1, _cor1)
			in  let <ConfigPath,Options> =
				%% Line 390
				case <_cor21,_cor20> of
				  %% Line 392
				  <_cor44,{'value',{'config',Path}}> when 'true' ->
				      let <_cor22> =
					  %% Line 393
					  call 'lists':'keydelete'
					      ('config', 1, _cor1)
				      in  %% Line 393
					  <Path,_cor22>
				  %% Line 394
				  <'false','false'> when 'true' ->
				      %% Line 395
				      <[46|[46|[47|[116|[101|[115|[116|[95|[115|[101|[114|[118|[101|[114]]]]]]]]]]]]]],_cor1>
				  %% Line 396
				  <Path,_cor45> when 'true' ->
				      %% Line 397
				      <Path,_cor1>
				end
			    in  let <_cor32> =
				    %% Line 399
				    ( letrec
					  'lc$^0'/1 =
					      fun (_cor29) ->
						  case _cor29 of
						    <[%% Line 400
						      File|_cor27]> when 'true' ->
							let <_cor30> =
							    call 'filename':'join'
								(ConfigPath, File)
							in  let <_cor31> =
								%% Line 400
								apply 'lc$^0'/1
								    (_cor27)
							    in  ( [_cor30|_cor31]
								  -| ['compiler_generated'] )
						    <[]> when 'true' ->
							[]
						    ( <_cor29> when 'true' ->
							  ( primop 'match_fail'
								({'function_clause',_cor29})
							    -| [{'function_name',{'lc$^0',1}}] )
						      -| ['compiler_generated'] )
						  end
				      in  let <_cor28> =
					      %% Line 400
					      apply 'get_config_files'/0
						  ()
					  in  apply 'lc$^0'/1
						  (_cor28)
				      -| ['list_comprehension'] )
				in  let <ConfigFiles> =
					%% Line 399
					[{'config',_cor32}|%% Line 400
							   []]
				    in  let <_cor34> =
					    %% Line 403
					    call 'erlang':'++'
						(Options, [{'scale_timetraps','true'}])
					in  let <_cor35> =
						%% Line 403
						call 'erlang':'++'
						    (ConfigFiles, _cor34)
					    in  let <_cor36> =
						    %% Line 402
						    call 'erlang':'++'
							(_cor17, _cor35)
						in  let <_cor37> =
							%% Line 402
							call 'erlang':'++'
							    (_cor14, _cor36)
						    in  let <_cor38> =
							    %% Line 402
							    call 'erlang':'++'
								(_cor10, _cor37)
							in  let <_cor39> =
								%% Line 402
								call 'erlang':'++'
								    (_cor2, _cor38)
							    in  %% Line 401
								call 'io_lib':'format'
								    ([126|[49|[48|[48|[48|[48|[48|[112]]]]]]]], [[{'abort_if_missing_suites','true'}|_cor39]|%% Line 403
																			     []])
'to_list'/1 =
    %% Line 405
    fun (_cor0) ->
	case _cor0 of
	  <X>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      %% Line 406
	      call 'erlang':'atom_to_list'
		  (X)
	  %% Line 407
	  <X>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 408
	      X
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'to_list',1}}] )
	    -| ['compiler_generated'] )
	end
'remove_path_spaces'/0 =
    %% Line 413
    fun () ->
	let <Path> =
	    %% Line 414
	    call 'os':'getenv'
		([80|[65|[84|[72]]]])
	in  %% Line 415
	    case call 'os':'type'
		     () of
	      %% Line 416
	      <{'win32','nt'}> when 'true' ->
		  %% Line 417
		  apply 'remove_path_spaces'/1
		      (Path)
	      %% Line 418
	      <_cor2> when 'true' ->
		  %% Line 419
		  Path
	    end
'remove_path_spaces'/1 =
    %% Line 422
    fun (_cor0) ->
	let <SPath> =
	    %% Line 423
	    apply 'split_path'/1
		(_cor0)
	in  let <_cor7> =
		%% Line 424
		( fun (_cor5) ->
		      let <_cor2> =
			  %% Line 426
			  apply 'split_one'/1
			      (_cor5)
		      in  let <_cor3> =
			      %% Line 426
			      apply 'translate_path'/1
				  (_cor2)
			  in  let <_cor4> =
				  %% Line 425
				  call 'filename':'join'
				      (_cor3)
			      in  call 'filename':'nativename'
				      (_cor4)
		  -| [{'id',{0,0,'-remove_path_spaces/1-fun-0-'}}] )
	    in  %% Line 424
		case call 'lists':'map'
			 (_cor7, %% Line 428
				 SPath) of
		  <[NSHead|NSTail]> when 'true' ->
		      let <_cor13> =
			  %% Line 429
			  ( letrec
				'lc$^0'/1 =
				    fun (_cor11) ->
					case _cor11 of
					  <[X|_cor10]> when 'true' ->
					      let <_cor12> =
						  apply 'lc$^0'/1
						      (_cor10)
					      in  ( [[59|X]|_cor12]
						    -| ['compiler_generated'] )
					  <[]> when 'true' ->
					      []
					  ( <_cor11> when 'true' ->
						( primop 'match_fail'
						      ({'function_clause',_cor11})
						  -| [{'function_name',{'lc$^0',1}}] )
					    -| ['compiler_generated'] )
					end
			    in  apply 'lc$^0'/1
				    (NSTail)
			    -| ['list_comprehension'] )
		      in  let <_cor14> =
			      %% Line 429
			      call 'lists':'flatten'
				  (_cor13)
			  in  %% Line 429
			      call 'erlang':'++'
				  (NSHead, _cor14)
		  ( <_cor8> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor8})
		    -| ['compiler_generated'] )
		end
'translate_path'/1 =
    %% Line 431
    fun (_cor0) ->
	%% Line 433
	apply 'translate_path'/2
	    (_cor0, [])
'translate_path'/2 =
    %% Line 436
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],_cor13> when 'true' ->
	      %% Line 437
	      []
	  %% Line 438
	  <[PC|T],BaseList> when 'true' ->
	      let <_cor2> =
		  %% Line 439
		  call 'erlang':'++'
		      (BaseList, [PC|[]])
	      in  let <_cor3> =
		      %% Line 439
		      call 'filename':'join'
			  (_cor2)
		  in  let <FullPath> =
			  %% Line 439
			  call 'filename':'nativename'
			      (_cor3)
		      in  let <_cor5> =
			      catch
				  %% Line 440
				  call 'file':'altname'
				      (FullPath)
			  in  let <_cor7> =
				  %% Line 440
				  case _cor5 of
				    %% Line 441
				    <{'ok',X}> when 'true' ->
					%% Line 442
					X
				    %% Line 443
				    <_cor14> when 'true' ->
					%% Line 444
					PC
				  end
			      in  let <NewBase> =
				      %% Line 447
				      call 'erlang':'++'
					  (BaseList, [_cor7|[]])
				  in  let <_cor10> =
					  %% Line 448
					  apply 'translate_path'/2
					      (T, NewBase)
				      in  %% Line 448
					  [_cor7|_cor10]
	  ( <_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11})
		  -| [{'function_name',{'translate_path',2}}] )
	    -| ['compiler_generated'] )
	end
'split_one'/1 =
    %% Line 450
    fun (_cor0) ->
	%% Line 451
	call 'filename':'split'
	    (_cor0)
'split_path'/1 =
    %% Line 453
    fun (_cor0) ->
	%% Line 454
	call 'string':'tokens'
	    (_cor0, [59])
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ts_run')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ts_run', _cor0)
end