module 'test_server_gl' ['get_tc_supervisor'/1,
			 'handle_call'/3,
			 'handle_cast'/2,
			 'handle_info'/2,
			 'init'/1,
			 'module_info'/0,
			 'module_info'/1,
			 'print'/4,
			 'set_minor_fd'/3,
			 'set_props'/2,
			 'start_link'/0,
			 'stop'/1,
			 'terminate'/2,
			 'unset_minor_fd'/1]
    attributes [%% Line 31
		'type' =
		    %% Line 31
		    [{{'record','st'},[{'typed_record_field',{'record_field',31,{'atom',31,'tc_supervisor'}},{'type',31,'union',[{'atom',31,'undefined'}|[{'atom',31,'none'}|[{'type',31,'pid',[]}]]]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'tc'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'type',32,'mfa',[]}]]}}|[{'typed_record_field',{'record_field',33,{'atom',33,'minor'}},{'type',33,'union',[{'atom',33,'undefined'}|[{'atom',33,'none'}|[{'type',33,'pid',[]}]]]}}|[{'record_field',34,{'atom',34,'minor_monitor'}}|[{'typed_record_field',{'record_field',35,{'atom',35,'capture'}},{'type',35,'union',[{'atom',35,'undefined'}|[{'atom',35,'none'}|[{'type',35,'pid',[]}]]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'reject_io'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'boolean',[]}]]}}|[{'record_field',37,{'atom',37,'permit_io'}}|[{'typed_record_field',{'record_field',38,{'atom',38,'auto_nl'},{'atom',38,'true'}},{'type',38,'boolean',[]}}|[{'record_field',39,{'atom',39,'levels'}}]]]]]]]]],[]}]]
'start_link'/0 =
    %% Line 46
    fun () ->
	%% Line 47
	case call 'gen_server':'start_link'
		 ('test_server_gl', [], []) of
	  %% Line 48
	  <{'ok',Pid}> when 'true' ->
	      %% Line 49
	      {'ok',Pid}
	  %% Line 50
	  <Other> when 'true' ->
	      %% Line 51
	      Other
	end
'stop'/1 =
    %% Line 59
    fun (_cor0) ->
	%% Line 60
	call 'gen_server':'cast'
	    (_cor0, 'stop')
'set_minor_fd'/3 =
    %% Line 73
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 74
	    call 'erlang':'self'
		()
	in  %% Line 74
	    apply 'req'/2
		(_cor2, {'set_minor_fd',_cor1,_cor0,_cor3})
'unset_minor_fd'/1 =
    %% Line 85
    fun (_cor0) ->
	%% Line 86
	apply 'req'/2
	    (_cor0, 'unset_minor_fd')
'get_tc_supervisor'/1 =
    %% Line 95
    fun (_cor0) ->
	%% Line 96
	apply 'req'/2
	    (_cor0, 'get_tc_supervisor')
'print'/4 =
    %% Line 114
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 115
	apply 'req'/2
	    (_cor3, {'print',_cor2,_cor1,_cor0})
'set_props'/2 =
    %% Line 126
    fun (_cor1,_cor0) ->
	%% Line 127
	apply 'req'/2
	    (_cor1, {'set_props',_cor0})
'init'/1 =
    %% Line 131
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      let <_cor1> =
		  %% Line 137
		  call 'gb_sets':'empty'
		      ()
	      in  %% Line 132
		  {'ok',{'st','none','undefined',%% Line 133
						 'none',%% Line 134
							'none',%% Line 135
							       'none',%% Line 136
								      'false',_cor1,%% Line 138
										    'true',%% Line 139
											   {1,19,10}}}
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'init',1}}] )
	    -| ['compiler_generated'] )
	end
'req'/2 =
    %% Line 142
    fun (_cor1,_cor0) ->
	%% Line 143
	call 'gen_server':'call'
	    (_cor1, _cor0, 'infinity')
'handle_call'/3 =
    %% Line 145
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'get_tc_supervisor',_X_From,St = {'st',Pid,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}> when 'true' ->
	      %% Line 146
	      {'reply',Pid,St}
	  %% Line 147
	  <{'set_minor_fd',Fd,MFA,Supervisor},_X_From,St> when 'true' ->
	      let <Ref> =
		  %% Line 148
		  call 'erlang':'monitor'
		      ('process', Fd)
	      in  %% Line 150
		  case St of
		    <{'st',_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34}> when 'true' ->
			let <_cor5> =
			    call 'erlang':'setelement'
				(5, St, Ref)
			in  let <_cor6> =
				call 'erlang':'setelement'
				    (4, _cor5, Fd)
			    in  let <_cor7> =
				    call 'erlang':'setelement'
					(3, _cor6, MFA)
				in  let <_cor9> =
					call 'erlang':'setelement'
					    (2, _cor7, Supervisor)
				    in  {'reply','ok',_cor9}
		    ( <_cor35> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','st'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 151
	  <'unset_minor_fd',_X_From,St> when 'true' ->
	      %% Line 152
	      case St of
		<{'st',_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44}> when 'true' ->
		    let <_cor11> =
			call 'erlang':'setelement'
			    (4, St, 'none')
		    in  let <_cor13> =
			    call 'erlang':'setelement'
				(2, _cor11, 'none')
			in  {'reply','ok',_cor13}
		( <_cor45> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','st'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 153
	  <{'set_props',PropList},_X_From,St> when 'true' ->
	      let <_cor14> =
		  %% Line 154
		  apply 'do_set_props'/2
		      (PropList, St)
	      in  %% Line 154
		  {'reply','ok',_cor14}
	  %% Line 155
	  <{'print',Detail,Msg,Printer},{From,_cor46},St> when 'true' ->
	      do  %% Line 156
		  apply 'output'/5
		      (Detail, Msg, Printer, From, St)
		  %% Line 157
		  {'reply','ok',St}
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'handle_call',3}}] )
	    -| ['compiler_generated'] )
	end
'handle_cast'/2 =
    %% Line 159
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'stop',St> when 'true' ->
	      %% Line 160
	      {'stop','normal',St}
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'handle_cast',2}}] )
	    -| ['compiler_generated'] )
	end
'handle_info'/2 =
    %% Line 162
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <D = {'DOWN',Ref,'process',_cor33,Reason},St = {'st',_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42}>
	      when call 'erlang':'=:='
		    (_cor37,
		     Ref) ->
	      do  %% Line 163
		  case Reason of
		    %% Line 164
		    <'normal'> when 'true' ->
			'ok'
		    %% Line 165
		    <_cor43> when 'true' ->
			let <Data> =
			    %% Line 166
			    call 'io_lib':'format'
				([61|[61|[61|[32|[87|[65|[82|[78|[73|[78|[71|[32|[61|[61|[61|[32|[84|[67|[58|[32|[126|[119|[10|[71|[111|[116|[32|[100|[111|[119|[110|[32|[102|[114|[111|[109|[32|[109|[105|[110|[111|[114|[32|[70|[100|[32|[126|[119|[58|[32|[126|[119|[10|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 168
																																								      [_cor35|[_cor36|[D|[]]]])
			in  %% Line 169
			    call 'test_server_io':'print_unexpected'
				(Data)
		  end
		  let <_cor9> =
		      %% Line 171
		      call 'erlang':'setelement'
			  (5, St, 'none')
		  in  let <_cor11> =
			  %% Line 171
			  call 'erlang':'setelement'
			      (4, _cor9, 'none')
		      in  %% Line 171
			  {'noreply',_cor11}
	  %% Line 172
	  <{'permit_io',Pid},St = {'st',_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,P,_cor78,_cor79}> when 'true' ->
	      let <_rec5> =
		  %% Line 173
		  call 'gb_sets':'add'
		      (Pid, P)
	      in  let <_cor15> =
		      %% Line 173
		      call 'erlang':'setelement'
			  (8, St, _rec5)
		  in  %% Line 173
		      {'noreply',_cor15}
	  %% Line 174
	  <{'capture',Cap0},St> when 'true' ->
	      let <_cor17> =
		  %% Line 175
		  case Cap0 of
		    %% Line 176
		    <'false'> when 'true' ->
			'none'
		    %% Line 177
		    <Pid>
			when call 'erlang':'is_pid'
			      (Cap0) ->
			Pid
		    ( <_cor16> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor16})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 179
		  case St of
		    <{'st',_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98}> when 'true' ->
			let <_cor21> =
			    call 'erlang':'setelement'
				(6, St, _cor17)
			in  {'noreply',_cor21}
		    ( <_cor99> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','st'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 180
	  <IoReq = {'io_request',From,ReplyAs,Req},St> when 'true' ->
	      do  %% Line 181
		  try
		      apply 'io_req'/3
			  (Req, From, St)
		  of <_cor22> ->
		      case _cor22 of
			%% Line 182
			<'passthrough'> when 'true' ->
			    let <_cor23> =
				%% Line 183
				call 'erlang':'group_leader'
				    ()
			    in  %% Line 183
				call 'erlang':'!'
				    (_cor23, IoReq)
			%% Line 184
			<Data> when 'true' ->
			    do  %% Line 185
				case apply 'is_io_permitted'/2
					 (From, St) of
				  %% Line 186
				  <'false'> when 'true' ->
				      'ok'
				  %% Line 188
				  <'true'> when 'true' ->
				      do  %% Line 189
					  case St of
					    %% Line 190
					    <{'st',_cor100,_cor101,_cor102,_cor103,'none',_cor104,_cor105,_cor106,_cor107}> when 'true' ->
						'ok'
					    %% Line 192
					    <{'st',_cor108,_cor109,_cor110,_cor111,CapturePid,_cor112,_cor113,_cor114,_cor115}> when 'true' ->
						%% Line 193
						call 'erlang':'!'
						    (CapturePid, {'captured',Data})
					    ( <_cor24> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_cor24})
					      -| ['compiler_generated'] )
					  end
					  %% Line 195
					  apply 'output'/5
					      ('minor', Data, From, From, St)
				  ( <_cor25> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor25})
				    -| ['compiler_generated'] )
				end
				%% Line 197
				call 'erlang':'!'
				    (From, {'io_reply',ReplyAs,'ok'})
		      end
		  catch <_cor29,_cor28,_cor27> ->
		      %% Line 200
		      call 'erlang':'!'
			  (From, {'io_reply',ReplyAs,{'error','arguments'}})
		  %% Line 202
		  {'noreply',St}
	  %% Line 203
	  <{'structured_io',ClientPid,{Detail,Str}},St> when 'true' ->
	      do  %% Line 204
		  apply 'output'/5
		      (Detail, Str, ClientPid, ClientPid, St)
		  %% Line 205
		  {'noreply',St}
	  %% Line 206
	  <{'printout',Detail,Format,Args},St> when 'true' ->
	      let <Str> =
		  %% Line 207
		  call 'io_lib':'format'
		      (Format, Args)
	      in  do  %% Line 208
		      apply 'output'/5
			  (Detail, Str, 'internal', 'none', St)
		      %% Line 209
		      {'noreply',St}
	  %% Line 210
	  <Msg,St = {'st',Pid,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126}>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      do  %% Line 216
		  call 'erlang':'!'
		      (Pid, Msg)
		  %% Line 217
		  {'noreply',St}
	  %% Line 218
	  <_X_Msg,St = {'st',_cor127,_cor128,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135}> when 'true' ->
	      %% Line 220
	      {'noreply',St}
	  ( <_cor32,_cor31> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor32,_cor31})
		  -| [{'function_name',{'handle_info',2}}] )
	    -| ['compiler_generated'] )
	end
'terminate'/2 =
    %% Line 222
    fun (_cor1,_cor0) ->
	%% Line 223
	'ok'
'do_set_props'/2 =
    %% Line 225
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'levels',Levels}|Ps],St> when 'true' ->
	      %% Line 226
	      case St of
		<{'st',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21}> when 'true' ->
		    let <_cor4> =
			call 'erlang':'setelement'
			    (10, St, Levels)
		    in  apply 'do_set_props'/2
			    (Ps, _cor4)
		( <_cor22> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','st'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 227
	  <[{'auto_nl',AutoNL}|Ps],St> when 'true' ->
	      %% Line 228
	      case St of
		<{'st',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31}> when 'true' ->
		    let <_cor7> =
			call 'erlang':'setelement'
			    (9, St, AutoNL)
		    in  apply 'do_set_props'/2
			    (Ps, _cor7)
		( <_cor32> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','st'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 229
	  <[{'reject_io_reqs',Bool}|Ps],St> when 'true' ->
	      %% Line 230
	      case St of
		<{'st',_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41}> when 'true' ->
		    let <_cor10> =
			call 'erlang':'setelement'
			    (7, St, Bool)
		    in  apply 'do_set_props'/2
			    (Ps, _cor10)
		( <_cor42> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','st'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 231
	  <[],St> when 'true' ->
	      St
	  ( <_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11})
		  -| [{'function_name',{'do_set_props',2}}] )
	    -| ['compiler_generated'] )
	end
'io_req'/3 =
    %% Line 233
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'put_chars',Enc,Bytes},_cor9,_cor10>
	      when let <_cor3> =
		    call 'erlang':'=:='
			(Enc, 'latin1')
		in  let <_cor4> =
			call 'erlang':'=:='
			    (Enc, 'unicode')
		    in  call 'erlang':'or'
			    (_cor3, _cor4) ->
	      %% Line 234
	      call 'unicode':'characters_to_list'
		  (Bytes, Enc)
	  %% Line 235
	  <{'put_chars',Encoding,Mod,Func,[Format|[Args|[]]]},_cor11,_cor12> when 'true' ->
	      let <Str> =
		  %% Line 236
		  call Mod:Func
		      (Format, Args)
	      in  %% Line 237
		  call 'unicode':'characters_to_list'
		      (Str, Encoding)
	  %% Line 238
	  <_cor13,_cor14,_cor15> when 'true' ->
	      'passthrough'
	end
'output'/5 =
    %% Line 240
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Level,Str,Sender,From,St>
	      when call 'erlang':'is_integer'
		    (Level) ->
	      do  %% Line 241
		  case apply 'selected_by_level'/3
			   (Level, 'stdout', St) of
		    %% Line 242
		    <'true'> when 'true' ->
			apply 'output'/5
			    ('stdout', Str, Sender, From, St)
		    %% Line 243
		    <'false'> when 'true' ->
			'ok'
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor5})
		      -| ['compiler_generated'] )
		  end
		  do  %% Line 245
		      case apply 'selected_by_level'/3
			       (Level, 'major', St) of
			%% Line 246
			<'true'> when 'true' ->
			    apply 'output'/5
				('major', Str, Sender, From, St)
			%% Line 247
			<'false'> when 'true' ->
			    'ok'
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor6})
			  -| ['compiler_generated'] )
		      end
		      %% Line 249
		      case apply 'selected_by_level'/3
			       (Level, 'minor', St) of
			%% Line 250
			<'true'> when 'true' ->
			    apply 'output'/5
				('minor', Str, Sender, From, St)
			%% Line 251
			<'false'> when 'true' ->
			    'ok'
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor7})
			  -| ['compiler_generated'] )
		      end
	  %% Line 253
	  <'stdout',Str,_X_Sender,From,St> when 'true' ->
	      %% Line 254
	      apply 'output_to_file'/4
		  ('stdout', Str, From, St)
	  %% Line 255
	  <'html',Str,_X_Sender,From,St> when 'true' ->
	      %% Line 256
	      apply 'output_to_file'/4
		  ('html', Str, From, St)
	  %% Line 257
	  <Level,Str,Sender,From,St>
	      when call 'erlang':'is_atom'
		    (Level) ->
	      let <_cor8> =
		  %% Line 258
		  apply 'dress_output'/3
		      (Str, Sender, St)
	      in  %% Line 258
		  apply 'output_to_file'/4
		      (Level, _cor8, From, St)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'output',5}}] )
	    -| ['compiler_generated'] )
	end
'output_to_file'/4 =
    %% Line 260
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <'minor',Data0,From,{'st',_cor16,{M,F,A},'none',_cor17,_cor18,_cor19,_cor20,_cor21,_cor22}> when 'true' ->
	      let <_cor4> =
		  %% Line 261
		  call 'io_lib':'format'
		      ([61|[61|[61|[32|[126|[119|[58|[126|[119|[47|[126|[119|[10]]]]]]]]]]]]], [M|[F|[A|[]]]])
	      in  let <Data> =
		      %% Line 261
		      [_cor4|[Data0|[]]]
		  in  do  %% Line 262
			  call 'test_server_io':'print'
			      (From, 'unexpected_io', Data)
			  %% Line 263
			  'ok'
	  %% Line 264
	  <'minor',Data,From,{'st',_cor23,TC,Fd,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29}> when 'true' ->
	      %% Line 265
	      try
		  %% Line 266
		  call 'io':'put_chars'
		      (Fd, Data)
	      of <_cor6> ->
		  _cor6
	      catch <_cor9,_cor8,_cor7> ->
		  let <_cor10> =
		      %% Line 270
		      call 'io_lib':'format'
			  ([61|[61|[61|[32|[69|[82|[82|[79|[82|[32|[61|[61|[61|[32|[84|[67|[58|[32|[126|[119|[10|[70|[97|[105|[108|[101|[100|[32|[116|[111|[32|[119|[114|[105|[116|[101|[32|[116|[111|[32|[109|[105|[110|[111|[114|[32|[70|[100|[58|[32|[126|[119|[10|[84|[121|[112|[101|[58|[32|[126|[119|[10|[82|[101|[97|[115|[111|[110|[58|[32|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 274
																																																					   [TC|[Fd|[_cor9|[_cor8|[]]]]])
		  in  let <Data1> =
			  %% Line 270
			  [_cor10|%% Line 275
				  [Data|[[10]]]]
		      in  %% Line 276
			  call 'test_server_io':'print'
			      (From, 'unexpected_io', Data1)
	  %% Line 278
	  <Detail,Data,From,_cor31> when 'true' ->
	      %% Line 279
	      call 'test_server_io':'print'
		  (From, Detail, Data)
	end
'is_io_permitted'/2 =
    %% Line 281
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <From,{'st',_cor4,_cor5,_cor6,_cor7,_cor8,'true',P,_cor9,_cor10}> when 'true' ->
	      %% Line 282
	      call 'gb_sets':'is_member'
		  (From, P)
	  %% Line 283
	  <_cor11,{'st',_cor12,_cor13,_cor14,_cor15,_cor16,'false',_cor17,_cor18,_cor19}> when 'true' ->
	      'true'
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'is_io_permitted',2}}] )
	    -| ['compiler_generated'] )
	end
'selected_by_level'/3 =
    %% Line 285
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Level,'stdout',{'st',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,{Stdout,_cor14,_cor15}}> when 'true' ->
	      %% Line 286
	      call 'erlang':'=<'
		  (Level, Stdout)
	  %% Line 287
	  <Level,'major',{'st',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,{_cor24,Major,_cor25}}> when 'true' ->
	      %% Line 288
	      call 'erlang':'=<'
		  (Level, Major)
	  %% Line 289
	  <Level,'minor',{'st',_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,{_cor34,_cor35,Minor}}> when 'true' ->
	      %% Line 290
	      call 'erlang':'>='
		  (Level, Minor)
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'selected_by_level',3}}] )
	    -| ['compiler_generated'] )
	end
'dress_output'/3 =
    %% Line 292
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Str = [61|_cor7],'internal',_cor8> when 'true' ->
	      %% Line 293
	      [Str|[10]]
	  %% Line 294
	  <Str,'internal',_cor9> when 'true' ->
	      %% Line 295
	      [[61|[61|[61|[32]]]]|[Str|[10]]]
	  %% Line 296
	  <Str,_cor10,{'st',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,AutoNL,_cor18}> when 'true' ->
	      %% Line 297
	      case AutoNL of
		%% Line 298
		<'true'> when 'true' ->
		    [Str|[10]]
		%% Line 299
		<'false'> when 'true' ->
		    Str
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'dress_output',3}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('test_server_gl')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('test_server_gl', _cor0)
end