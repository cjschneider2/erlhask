module 'ts_erl_config' ['module_info'/0,
			'module_info'/1,
			'variables'/2]
    attributes []
'variables'/2 =
    %% Line 30
    fun (_cor1,_cor0) ->
	let <Base1> =
	    %% Line 31
	    apply 'erl_include'/1
		(_cor1)
	in  let <Base2> =
		%% Line 32
		apply 'get_app_vars'/3
		    (( 'erl_interface'/2
		       -| [{'id',{0,0,'-variables/2-fun-0-'}}] ), Base1, _cor0)
	    in  let <Base3> =
		    %% Line 33
		    apply 'get_app_vars'/3
			(( 'ic'/2
			   -| [{'id',{0,0,'-variables/2-fun-1-'}}] ), Base2, _cor0)
		in  let <Base4> =
			%% Line 34
			apply 'get_app_vars'/3
			    (( 'jinterface'/2
			       -| [{'id',{0,0,'-variables/2-fun-2-'}}] ), Base3, _cor0)
		    in  let <Base5> =
			    %% Line 35
			    apply 'dl_vars'/3
				(Base4, Base3, _cor0)
			in  let <Base6> =
				%% Line 36
				apply 'emu_vars'/1
				    (Base5)
			    in  let <Base7> =
				    %% Line 37
				    apply 'get_app_vars'/3
					(( 'ssl'/2
					   -| [{'id',{0,0,'-variables/2-fun-3-'}}] ), Base6, _cor0)
				in  let <Base8> =
					%% Line 38
					apply 'erts_lib'/2
					    (Base7, _cor0)
				    in  let <Base> =
					    %% Line 39
					    apply 'separators'/2
						(Base8, _cor0)
					in  let <_cor11> =
						%% Line 40
						call 'code':'objfile_extension'
						    ()
					    in  let <_cor12> =
						    %% Line 40
						    call 'erlang':'tl'
							(_cor11)
						in  let <_cor13> =
							%% Line 41
							call 'erlang':'system_info'
							    ('threads')
						    in  let <_cor14> =
							    %% Line 41
							    call 'erlang':'atom_to_list'
								(_cor13)
							in  let <_cor16> =
								%% Line 42
								case apply 'is_debug_build'/0
									 () of
								  %% Line 43
								  <'true'> when 'true' ->
								      %% Line 44
								      [46|[100|[101|[98|[117|[103]]]]]]
								  %% Line 45
								  <'false'> when 'true' ->
								      %% Line 46
								      []
								  ( <_cor15> when 'true' ->
									primop 'match_fail'
									    ({'case_clause',_cor15})
								    -| ['compiler_generated'] )
								end
							    in  %% Line 40
								[{'EMULATOR',_cor12}|%% Line 41
										     [{'emu_threads',_cor14}|%% Line 42
													     [{'type_marker',_cor16}|%% Line 48
																     Base]]]
'get_app_vars'/3 =
    %% Line 50
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    catch
		%% Line 51
		apply _cor2
		    (_cor1, _cor0)
	in  %% Line 51
	    case _cor3 of
	      %% Line 52
	      <Res>
		  when call 'erlang':'is_list'
			(_cor3) ->
		  %% Line 53
		  Res
	      %% Line 54
	      <{'cannot_find_app',App}> when 'true' ->
		  do  %% Line 55
		      call 'io':'format'
			  ([42|[32|[87|[65|[82|[78|[73|[78|[71|[58|[32|[67|[97|[110|[110|[111|[116|[32|[102|[105|[110|[100|[32|[126|[112|[33|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]], [App|[]])
		      _cor1
	      %% Line 57
	      <{'EXIT',Reason}> when 'true' ->
		  %% Line 58
		  call 'erlang':'exit'
		      (Reason)
	      %% Line 59
	      <Garbage> when 'true' ->
		  %% Line 60
		  call 'erlang':'exit'
		      ({'unexpected_internal_error',Garbage})
	    end
'dl_vars'/3 =
    %% Line 63
    fun (_cor2,_cor1,_cor0) ->
	let <ShlibRules> =
	    %% Line 70
	    call 'ts_lib':'subst'
		([46|[83|[85|[70|[70|[73|[88|[69|[83|[58|[10|[46|[83|[85|[70|[70|[73|[88|[69|[83|[58|[32|[64|[100|[108|[108|[64|[32|[64|[111|[98|[106|[64|[32|[46|[99|[10|[10|[46|[99|[64|[100|[108|[108|[64|[58|[10|[9|[64|[67|[67|[64|[32|[45|[99|[32|[64|[83|[72|[76|[73|[66|[95|[67|[70|[76|[65|[71|[83|[64|[32|[36|[40|[83|[72|[76|[73|[66|[95|[69|[88|[84|[82|[65|[95|[67|[70|[76|[65|[71|[83|[41|[32|[45|[73|[64|[101|[114|[108|[95|[105|[110|[99|[108|[117|[100|[101|[64|[32|[64|[68|[69|[70|[83|[64|[32|[36|[60|[10|[9|[64|[83|[72|[76|[73|[66|[95|[76|[68|[64|[32|[64|[67|[82|[79|[83|[83|[76|[68|[70|[76|[65|[71|[83|[64|[32|[64|[83|[72|[76|[73|[66|[95|[76|[68|[70|[76|[65|[71|[83|[64|[32|[36|[40|[83|[72|[76|[73|[66|[95|[69|[88|[84|[82|[65|[95|[76|[68|[70|[76|[65|[71|[83|[41|[32|[45|[111|[32|[36|[64|[32|[36|[42|[64|[111|[98|[106|[64|[32|[64|[83|[72|[76|[73|[66|[95|[76|[68|[76|[73|[66|[83|[64|[32|[36|[40|[83|[72|[76|[73|[66|[95|[69|[88|[84|[82|[65|[95|[76|[68|[76|[73|[66|[83|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor2)
	in  %% Line 71
	    case apply 'get_app_vars2'/3
		     (( 'jinterface'/2
			-| [{'id',{0,0,'-dl_vars/3-fun-0-'}}] ), _cor1, _cor0) of
	      %% Line 72
	      <{App,'not_found'}> when 'true' ->
		  %% Line 73
		  [{'SHLIB_RULES',ShlibRules}|[{App,[110|[111|[116|[95|[102|[111|[117|[110|[100]]]]]]]]]}|_cor2]]
	      %% Line 74
	      <_cor12> when 'true' ->
		  %% Line 75
		  [{'SHLIB_RULES',ShlibRules}|_cor2]
	    end
'get_app_vars2'/3 =
    %% Line 77
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    catch
		%% Line 78
		apply _cor2
		    (_cor1, _cor0)
	in  %% Line 78
	    case _cor3 of
	      %% Line 79
	      <Res>
		  when call 'erlang':'is_list'
			(_cor3) ->
		  %% Line 80
		  {'jinterface','ok'}
	      %% Line 81
	      <{'cannot_find_app',App}> when 'true' ->
		  %% Line 82
		  {App,'not_found'}
	      %% Line 83
	      <{'EXIT',Reason}> when 'true' ->
		  %% Line 84
		  call 'erlang':'exit'
		      (Reason)
	      %% Line 85
	      <Garbage> when 'true' ->
		  %% Line 86
		  call 'erlang':'exit'
		      ({'unexpected_internal_error',Garbage})
	    end
'erts_lib_name'/2 =
    %% Line 89
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'multi_threaded',{'win32',V}> when 'true' ->
	      let <_cor3> =
		  %% Line 90
		  case apply 'is_debug_build'/0
			   () of
		    %% Line 91
		    <'true'> when 'true' ->
			[100]
		    %% Line 92
		    <'false'> when 'true' ->
			[]
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor2})
		      -| ['compiler_generated'] )
		  end
	      in  let <_cor4> =
		      %% Line 90
		      call 'erlang':'++'
			  ([101|[114|[116|[115|[95|[77|[68]]]]]]], _cor3)
		  in  %% Line 90
		      apply 'link_library'/2
			  (_cor4, %% Line 94
				  {'win32',V})
	  %% Line 95
	  <'single_threaded',{'win32',V}> when 'true' ->
	      let <_cor6> =
		  %% Line 96
		  case apply 'is_debug_build'/0
			   () of
		    %% Line 97
		    <'true'> when 'true' ->
			[100]
		    %% Line 98
		    <'false'> when 'true' ->
			[]
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor5})
		      -| ['compiler_generated'] )
		  end
	      in  let <_cor7> =
		      %% Line 96
		      call 'erlang':'++'
			  ([101|[114|[116|[115|[95|[77|[76]]]]]]], _cor6)
		  in  %% Line 96
		      apply 'link_library'/2
			  (_cor7, %% Line 100
				  {'win32',V})
	  %% Line 101
	  <'multi_threaded',OsType> when 'true' ->
	      %% Line 102
	      apply 'link_library'/2
		  ([101|[114|[116|[115|[95|[114]]]]]], OsType)
	  %% Line 103
	  <'single_threaded',OsType> when 'true' ->
	      %% Line 104
	      apply 'link_library'/2
		  ([101|[114|[116|[115]]]], OsType)
	  ( <_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8})
		  -| [{'function_name',{'erts_lib_name',2}}] )
	    -| ['compiler_generated'] )
	end
'erts_lib'/2 =
    %% Line 106
    fun (_cor1,_cor0) ->
	let <ErtsLibInclude,ErtsLibIncludeGenerated,ErtsLibIncludeInternal,ErtsLibIncludeInternalGenerated,ErtsLibPath,ErtsLibInternalPath,ErtsLibEthreadMake,ErtsLibInternalMake> =
	    %% Line 116
	    case apply 'erl_root'/1
		     (_cor1) of
	      %% Line 117
	      <{'installed',_X_Root}> when 'true' ->
		  let <Erts> =
		      %% Line 118
		      apply 'lib_dir'/2
			  (_cor1, 'erts')
		  in  let <ErtsInclude> =
			  %% Line 119
			  call 'filename':'join'
			      ([Erts|[[105|[110|[99|[108|[117|[100|[101]]]]]]]]])
		      in  let <ErtsIncludeInternal> =
			      %% Line 120
			      call 'filename':'join'
				  ([ErtsInclude|[[105|[110|[116|[101|[114|[110|[97|[108]]]]]]]]]])
			  in  let <ErtsLib> =
				  %% Line 121
				  call 'filename':'join'
				      ([Erts|[[108|[105|[98]]]]])
			      in  let <ErtsLibInternal> =
				      %% Line 122
				      call 'filename':'join'
					  ([ErtsLib|[[105|[110|[116|[101|[114|[110|[97|[108]]]]]]]]]])
				  in  let <ErtsEthreadMake> =
					  %% Line 123
					  call 'filename':'join'
					      ([ErtsIncludeInternal|[[101|[116|[104|[114|[101|[97|[100|[46|[109|[107]]]]]]]]]]]])
				      in  let <ErtsInternalMake> =
					      %% Line 124
					      call 'filename':'join'
						  ([ErtsIncludeInternal|[[101|[114|[116|[115|[95|[105|[110|[116|[101|[114|[110|[97|[108|[46|[109|[107]]]]]]]]]]]]]]]]]])
					  in  %% Line 126
					      <ErtsInclude,%% Line 127
							   ErtsInclude,%% Line 128
								       ErtsIncludeInternal,%% Line 129
											   ErtsIncludeInternal,%% Line 130
													       ErtsLib,%% Line 131
														       ErtsLibInternal,%% Line 132
																       ErtsEthreadMake,%% Line 133
																		       ErtsInternalMake>
	      %% Line 134
	      <{'srctree',Root,Target}> when 'true' ->
		  let <Erts> =
		      %% Line 135
		      call 'filename':'join'
			  ([Root|[[101|[114|[116|[115]]]]]])
		  in  let <ErtsInclude> =
			  %% Line 136
			  call 'filename':'join'
			      ([Erts|[[105|[110|[99|[108|[117|[100|[101]]]]]]]]])
		      in  let <ErtsIncludeTarget> =
			      %% Line 137
			      call 'filename':'join'
				  ([ErtsInclude|[Target|[]]])
			  in  let <ErtsIncludeInternal> =
				  %% Line 138
				  call 'filename':'join'
				      ([ErtsInclude|%% Line 139
						    [[105|[110|[116|[101|[114|[110|[97|[108]]]]]]]]]])
			      in  let <ErtsIncludeInternalTarget> =
				      %% Line 140
				      call 'filename':'join'
					  ([ErtsIncludeInternal|%% Line 141
								[Target|[]]])
				  in  let <ErtsLib> =
					  %% Line 142
					  call 'filename':'join'
					      ([Erts|[[108|[105|[98]]]|[Target|[]]]])
				      in  let <ErtsLibInternal> =
					      %% Line 143
					      call 'filename':'join'
						  ([Erts|%% Line 144
							 [[108|[105|[98]]]|%% Line 145
									   [[105|[110|[116|[101|[114|[110|[97|[108]]]]]]]]|%% Line 146
															   [Target|[]]]]])
					  in  let <ErtsEthreadMake> =
						  %% Line 147
						  call 'filename':'join'
						      ([ErtsIncludeInternalTarget|[[101|[116|[104|[114|[101|[97|[100|[46|[109|[107]]]]]]]]]]]])
					      in  let <ErtsInternalMake> =
						      %% Line 148
						      call 'filename':'join'
							  ([ErtsIncludeInternalTarget|[[101|[114|[116|[115|[95|[105|[110|[116|[101|[114|[110|[97|[108|[46|[109|[107]]]]]]]]]]]]]]]]]])
						  in  %% Line 150
						      <ErtsInclude,%% Line 151
								   ErtsIncludeTarget,%% Line 152
										     ErtsIncludeInternal,%% Line 153
													 ErtsIncludeInternalTarget,%% Line 154
																   ErtsLib,%% Line 155
																	   ErtsLibInternal,%% Line 156
																			   ErtsEthreadMake,%% Line 157
																					   ErtsInternalMake>
	      ( <_cor18> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor18})
		-| ['compiler_generated'] )
	    end
	in  let <_cor21> =
		%% Line 160
		call 'filename':'nativename'
		    (ErtsLibInclude)
	    in  let <_cor22> =
		    %% Line 160
		    apply 'quote'/1
			(_cor21)
		in  let <_cor23> =
			%% Line 162
			call 'filename':'nativename'
			    (ErtsLibIncludeGenerated)
		    in  let <_cor24> =
			    %% Line 162
			    apply 'quote'/1
				(_cor23)
			in  let <_cor25> =
				%% Line 164
				call 'filename':'nativename'
				    (ErtsLibIncludeInternal)
			    in  let <_cor26> =
				    %% Line 164
				    apply 'quote'/1
					(_cor25)
				in  let <_cor27> =
					%% Line 166
					call 'filename':'nativename'
					    (ErtsLibIncludeInternalGenerated)
				    in  let <_cor28> =
					    %% Line 166
					    apply 'quote'/1
						(_cor27)
					in  let <_cor29> =
						%% Line 167
						call 'filename':'nativename'
						    (ErtsLibPath)
					    in  let <_cor30> =
						    %% Line 167
						    apply 'quote'/1
							(_cor29)
						in  let <_cor31> =
							%% Line 168
							call 'filename':'nativename'
							    (ErtsLibInternalPath)
						    in  let <_cor32> =
							    %% Line 168
							    apply 'quote'/1
								(_cor31)
							in  let <_cor33> =
								%% Line 169
								apply 'erts_lib_name'/2
								    ('multi_threaded', _cor0)
							    in  let <_cor34> =
								    %% Line 170
								    apply 'erts_lib_name'/2
									('single_threaded', _cor0)
								in  let <_cor35> =
									%% Line 171
									apply 'quote'/1
									    (ErtsLibEthreadMake)
								    in  let <_cor36> =
									    %% Line 172
									    apply 'quote'/1
										(ErtsLibInternalMake)
									in  %% Line 159
									    [{'erts_lib_include',_cor22}|%% Line 161
													 [{'erts_lib_include_generated',_cor24}|%% Line 163
																		[{'erts_lib_include_internal',_cor26}|%% Line 165
																						      [{'erts_lib_include_internal_generated',_cor28}|%% Line 167
																												      [{'erts_lib_path',_cor30}|%% Line 168
																																[{'erts_lib_internal_path',_cor32}|%% Line 169
																																				   [{'erts_lib_multi_threaded',_cor33}|%% Line 170
																																								       [{'erts_lib_single_threaded',_cor34}|%% Line 171
																																													    [{'erts_lib_make_ethread',_cor35}|%% Line 172
																																																	      [{'erts_lib_make_internal',_cor36}|_cor1]]]]]]]]]]
'erl_include'/1 =
    %% Line 175
    fun (_cor0) ->
	let <_cor18> =
	    %% Line 177
	    case apply 'erl_root'/1
		     (_cor0) of
	      %% Line 178
	      <{'installed',Root}> when 'true' ->
		  let <_cor1> =
		      %% Line 179
		      call 'filename':'join'
			  ([Root|[[117|[115|[114]]]|[[105|[110|[99|[108|[117|[100|[101]]]]]]]]]])
		  in  %% Line 179
		      apply 'quote'/1
			  (_cor1)
	      %% Line 180
	      <{'srctree',Root,Target}> when 'true' ->
		  let <_cor15> =
		      %% Line 181
		      call 'filename':'join'
			  ([Root|[[101|[114|[116|[115]]]]|[[101|[109|[117|[108|[97|[116|[111|[114]]]]]]]]|[[98|[101|[97|[109]]]]]]]])
		  in  let <_cor16> =
			  %% Line 181
			  apply 'quote'/1
			      (_cor15)
		      in  let <_cor11> =
			      %% Line 182
			      call 'filename':'join'
				  ([Root|[[101|[114|[116|[115]]]]|[[101|[109|[117|[108|[97|[116|[111|[114]]]]]]]]]]])
			  in  let <_cor12> =
				  %% Line 182
				  apply 'quote'/1
				      (_cor11)
			      in  let <_cor9> =
				      %% Line 183
				      apply 'system_include'/2
					  (Root, _cor0)
				  in  let <_cor5> =
					  %% Line 184
					  call 'filename':'join'
					      ([Root|[[101|[114|[116|[115]]]]|[[105|[110|[99|[108|[117|[100|[101]]]]]]]]]])
				      in  let <_cor6> =
					      %% Line 184
					      apply 'quote'/1
						  (_cor5)
					  in  let <_cor2> =
						  %% Line 185
						  call 'filename':'join'
						      ([Root|[[101|[114|[116|[115]]]]|[[105|[110|[99|[108|[117|[100|[101]]]]]]]|[Target|[]]]]])
					      in  let <_cor3> =
						      %% Line 185
						      apply 'quote'/1
							  (_cor2)
						  in  let <_cor4> =
							  %% Line 185
							  [32|[45|[73|_cor3]]]
						      in  let <_cor7> =
							      %% Line 185
							      call 'erlang':'++'
								  (_cor6, _cor4)
							  in  let <_cor8> =
								  %% Line 184
								  [32|[45|[73|_cor7]]]
							      in  let <_cor10> =
								      %% Line 184
								      call 'erlang':'++'
									  (_cor9, _cor8)
								  in  let <_cor13> =
									  %% Line 183
									  call 'erlang':'++'
									      (_cor12, _cor10)
								      in  let <_cor14> =
									      %% Line 182
									      [32|[45|[73|_cor13]]]
									  in  %% Line 182
									      call 'erlang':'++'
										  (_cor16, _cor14)
	      ( <_cor17> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor17})
		-| ['compiler_generated'] )
	    end
	in  let <_cor20> =
		%% Line 187
		call 'filename':'nativename'
		    (_cor18)
	    in  %% Line 187
		[{'erl_include',_cor20}|_cor0]
'system_include'/2 =
    %% Line 190
    fun (_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 192
	    case call 'ts_lib':'var'
		     ('os', _cor0) of
	      %% Line 193
	      <[87|[105|[110|[100|[111|[119|[115|_X_T]]]]]]]> when 'true' ->
		  [115|[121|[115|[47|[119|[105|[110|[51|[50]]]]]]]]]
	      %% Line 194
	      <_cor10> when 'true' ->
		  [115|[121|[115|[47|[117|[110|[105|[120]]]]]]]]
	    end
	in  let <_cor5> =
		%% Line 196
		call 'filename':'join'
		    ([_cor1|[[101|[114|[116|[115]]]]|[[101|[109|[117|[108|[97|[116|[111|[114]]]]]]]]|[_cor3|[]]]]])
	    in  let <_cor6> =
		    %% Line 196
		    call 'filename':'nativename'
			(_cor5)
		in  let <_cor7> =
			%% Line 196
			apply 'quote'/1
			    (_cor6)
		    in  %% Line 196
			[32|[45|[73|_cor7]]]
'erl_interface'/2 =
    %% Line 198
    fun (_cor1,_cor0) ->
	let <_cor10> =
	    %% Line 200
	    case apply 'lib_dir'/2
		     (_cor1, 'erl_interface') of
	      %% Line 201
	      <{'error','bad_name'}> when 'true' ->
		  %% Line 202
		  call 'erlang':'throw'
		      ({'cannot_find_app','erl_interface'})
	      %% Line 203
	      <Dir> when 'true' ->
		  let <_cor8> =
		      %% Line 204
		      call 'filename':'join'
			  (Dir, [105|[110|[99|[108|[117|[100|[101]]]]]]])
		  in  let <_cor7> =
			  %% Line 205
			  case apply 'erl_root'/1
				   (_cor1) of
			    %% Line 206
			    <{'installed',_X_Root}> when 'true' ->
				let <_cor3> =
				    %% Line 207
				    call 'filename':'join'
					(Dir, [108|[105|[98]]])
				in  let <_cor2> =
					%% Line 208
					call 'filename':'join'
					    ([Dir|[[115|[114|[99]]]|[[101|[105|[100|[101|[102|[115|[46|[109|[107]]]]]]]]]]]])
				    in  %% Line 207
					{_cor3,_cor2}
			    %% Line 209
			    <{'srctree',_X_Root,Target}> when 'true' ->
				let <_cor5> =
				    %% Line 210
				    call 'filename':'join'
					([Dir|[[111|[98|[106]]]|[Target|[]]]])
				in  let <_cor4> =
					%% Line 211
					call 'filename':'join'
					    ([Dir|[[115|[114|[99]]]|[Target|[[101|[105|[100|[101|[102|[115|[46|[109|[107]]]]]]]]]]]]])
				    in  %% Line 210
					{_cor5,_cor4}
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor6})
			      -| ['compiler_generated'] )
			  end
		      in  %% Line 204
			  {_cor8,_cor7}
	    end
	in  %% Line 199
	    case _cor10 of
	      <{Incl,{LibPath,MkIncl}}> when 'true' ->
		  let <Lib> =
		      %% Line 214
		      apply 'link_library'/2
			  ([101|[114|[108|[95|[105|[110|[116|[101|[114|[102|[97|[99|[101]]]]]]]]]]]]], _cor0)
		  in  let <Lib1> =
			  %% Line 215
			  apply 'link_library'/2
			      ([101|[105]], _cor0)
		      in  let <LibDrv,Lib1Drv> =
			      %% Line 217
			      case call 'erlang':'system_info'
				       ('threads') of
				%% Line 218
				<'false'> when 'true' ->
				    %% Line 219
				    case _cor0 of
				      %% Line 220
				      <{'unix',_cor43}> when 'true' ->
					  let <_cor15> =
					      %% Line 221
					      apply 'link_library'/2
						  ([101|[114|[108|[95|[105|[110|[116|[101|[114|[102|[97|[99|[101|[95|[115|[116]]]]]]]]]]]]]]]], _cor0)
					  in  let <_cor14> =
						  %% Line 222
						  apply 'link_library'/2
						      ([101|[105|[95|[115|[116]]]]], _cor0)
					      in  <_cor15,_cor14>
				      %% Line 223
				      <_cor44> when 'true' ->
					  %% Line 224
					  <Lib,Lib1>
				    end
				%% Line 226
				<'true'> when 'true' ->
				    %% Line 227
				    case _cor0 of
				      %% Line 228
				      <{'win32',_cor45}> when 'true' ->
					  let <_cor18> =
					      %% Line 229
					      apply 'link_library'/2
						  ([101|[114|[108|[95|[105|[110|[116|[101|[114|[102|[97|[99|[101|[95|[109|[100]]]]]]]]]]]]]]]], _cor0)
					  in  let <_cor17> =
						  %% Line 230
						  apply 'link_library'/2
						      ([101|[105|[95|[109|[100]]]]], _cor0)
					      in  <_cor18,_cor17>
				      %% Line 231
				      <_cor46> when 'true' ->
					  %% Line 232
					  <Lib,Lib1>
				    end
				( <_cor20> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor20})
				  -| ['compiler_generated'] )
			      end
			  in  let <_cor24> =
				  %% Line 235
				  case _cor0 of
				    %% Line 243
				    <{'unix','freebsd'}> when 'true' ->
					%% Line 244
					[45|[108|[112|[116|[104|[114|[101|[97|[100]]]]]]]]]
				    %% Line 245
				    <{'unix',_cor47}> when 'true' ->
					%% Line 246
					[45|[108|[112|[116|[104|[114|[101|[97|[100]]]]]]]]]
				    %% Line 247
				    <_cor48> when 'true' ->
					%% Line 248
					[]
				  end
			      in  let <_cor26> =
				      %% Line 250
				      call 'filename':'nativename'
					  (LibPath)
				  in  let <_cor27> =
					  %% Line 250
					  apply 'quote'/1
					      (_cor26)
				      in  let <_cor28> =
					      %% Line 251
					      apply 'sock_libraries'/1
						  (_cor0)
					  in  let <_cor29> =
						  %% Line 252
						  call 'filename':'join'
						      (LibPath, Lib)
					      in  let <_cor30> =
						      %% Line 252
						      apply 'quote'/1
							  (_cor29)
						  in  let <_cor31> =
							  %% Line 253
							  call 'filename':'join'
							      (LibPath, Lib1)
						      in  let <_cor32> =
							      %% Line 253
							      apply 'quote'/1
								  (_cor31)
							  in  let <_cor33> =
								  %% Line 254
								  call 'filename':'join'
								      (LibPath, LibDrv)
							      in  let <_cor34> =
								      %% Line 254
								      apply 'quote'/1
									  (_cor33)
								  in  let <_cor35> =
									  %% Line 255
									  call 'filename':'join'
									      (LibPath, Lib1Drv)
								      in  let <_cor36> =
									      %% Line 255
									      apply 'quote'/1
										  (_cor35)
									  in  let <_cor37> =
										  %% Line 257
										  call 'filename':'nativename'
										      (Incl)
									      in  let <_cor38> =
										      %% Line 257
										      apply 'quote'/1
											  (_cor37)
										  in  let <_cor39> =
											  %% Line 258
											  call 'filename':'nativename'
											      (MkIncl)
										      in  let <_cor40> =
											      %% Line 258
											      apply 'quote'/1
												  (_cor39)
											  in  %% Line 250
											      [{'erl_interface_libpath',_cor27}|%% Line 251
																[{'erl_interface_sock_libs',_cor28}|%% Line 252
																				    [{'erl_interface_lib',_cor30}|%% Line 253
																								  [{'erl_interface_eilib',_cor32}|%% Line 254
																												  [{'erl_interface_lib_drv',_cor34}|%% Line 255
																																    [{'erl_interface_eilib_drv',_cor36}|%% Line 256
																																					[{'erl_interface_threadlib',_cor24}|%% Line 257
																																									    [{'erl_interface_include',_cor38}|%% Line 258
																																													      [{'erl_interface_mk_include',_cor40}|_cor1]]]]]]]]]
	      ( <_cor11> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor11})
		-| ['compiler_generated'] )
	    end
'ic'/2 =
    %% Line 261
    fun (_cor1,_cor0) ->
	let <ClassPath,LibPath,Incl> =
	    %% Line 263
	    case apply 'lib_dir'/2
		     (_cor1, 'ic') of
	      %% Line 264
	      <{'error','bad_name'}> when 'true' ->
		  %% Line 265
		  call 'erlang':'throw'
		      ({'cannot_find_app','ic'})
	      %% Line 266
	      <Dir> when 'true' ->
		  let <_cor5> =
		      %% Line 267
		      call 'filename':'join'
			  ([Dir|[[112|[114|[105|[118]]]]|[[105|[99|[46|[106|[97|[114]]]]]]]]])
		  in  let <_cor4> =
			  %% Line 268
			  case apply 'erl_root'/1
				   (_cor1) of
			    %% Line 269
			    <{'installed',_X_Root}> when 'true' ->
				%% Line 270
				call 'filename':'join'
				    ([Dir|[[112|[114|[105|[118]]]]|[[108|[105|[98]]]]]])
			    %% Line 271
			    <{'srctree',_X_Root,Target}> when 'true' ->
				%% Line 272
				call 'filename':'join'
				    ([Dir|[[112|[114|[105|[118]]]]|[[108|[105|[98]]]|[Target|[]]]]])
			    ( <_cor3> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor3})
			      -| ['compiler_generated'] )
			  end
		      in  let <_cor2> =
			      %% Line 274
			      call 'filename':'join'
				  (Dir, [105|[110|[99|[108|[117|[100|[101]]]]]]])
			  in  <_cor5,_cor4,_cor2>
	    end
	in  let <_cor9> =
		%% Line 276
		call 'filename':'nativename'
		    (ClassPath)
	    in  let <_cor10> =
		    %% Line 276
		    apply 'quote'/1
			(_cor9)
		in  let <_cor11> =
			%% Line 277
			call 'filename':'nativename'
			    (LibPath)
		    in  let <_cor12> =
			    %% Line 277
			    apply 'quote'/1
				(_cor11)
			in  let <_cor14> =
				%% Line 278
				call 'filename':'nativename'
				    (LibPath)
			    in  let <_cor13> =
				    %% Line 278
				    apply 'link_library'/2
					([105|[99]], _cor0)
				in  let <_cor15> =
					%% Line 278
					call 'filename':'join'
					    (_cor14, _cor13)
				    in  let <_cor16> =
					    %% Line 278
					    apply 'quote'/1
						(_cor15)
					in  let <_cor17> =
						%% Line 279
						call 'filename':'nativename'
						    (Incl)
					    in  let <_cor18> =
						    %% Line 279
						    apply 'quote'/1
							(_cor17)
						in  %% Line 276
						    [{'ic_classpath',_cor10}|%% Line 277
									     [{'ic_libpath',_cor12}|%% Line 278
												    [{'ic_lib',_cor16}|%% Line 279
														       [{'ic_include_path',_cor18}|_cor1]]]]
'jinterface'/2 =
    %% Line 281
    fun (_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 283
	    case apply 'lib_dir'/2
		     (_cor1, 'jinterface') of
	      %% Line 284
	      <{'error','bad_name'}> when 'true' ->
		  %% Line 285
		  call 'erlang':'throw'
		      ({'cannot_find_app','jinterface'})
	      %% Line 286
	      <Dir> when 'true' ->
		  %% Line 287
		  call 'filename':'join'
		      ([Dir|[[112|[114|[105|[118]]]]|[[79|[116|[112|[69|[114|[108|[97|[110|[103|[46|[106|[97|[114]]]]]]]]]]]]]]]])
	    end
	in  let <_cor5> =
		%% Line 289
		call 'filename':'nativename'
		    (_cor3)
	    in  let <_cor6> =
		    %% Line 289
		    apply 'quote'/1
			(_cor5)
		in  %% Line 289
		    [{'jinterface_classpath',_cor6}|_cor1]
'lib_dir'/2 =
    %% Line 291
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 292
	    case _cor0 of
	      %% Line 293
	      <'erts'> when 'true' ->
		  let <_cor2> =
		      %% Line 294
		      call 'code':'root_dir'
			  ()
		  in  let <_cor3> =
			  %% Line 295
			  call 'erlang':'system_info'
			      ('version')
		      in  let <_cor4> =
			      %% Line 295
			      call 'erlang':'++'
				  ([101|[114|[116|[115|[45]]]]], _cor3)
			  in  %% Line 294
			      call 'filename':'join'
				  ([_cor2|%% Line 295
					  [_cor4|[]]])
	      %% Line 296
	      <_cor23> when 'true' ->
		  %% Line 297
		  call 'code':'lib_dir'
		      (_cor0)
	    end
	in  let <_cor8> =
		%% Line 299
		apply 'get_var'/2
		    ('crossroot', _cor1)
	    in  %% Line 299
		case <_cor8,_cor6> of
		  %% Line 300
		  <{'error',_cor24},_cor25> when 'true' ->
		      _cor6
		  %% Line 302
		  <CrossRoot,_cor26> when 'true' ->
		      let <_cor11> =
			  %% Line 305
			  case _cor0 of
			    %% Line 306
			    <'erts'> when 'true' ->
				%% Line 307
				[CrossRoot|[[101|[114|[116|[115]]]]]]
			    %% Line 308
			    <_cor27> when 'true' ->
				let <_cor9> =
				    %% Line 309
				    call 'erlang':'atom_to_list'
					(_cor0)
				in  %% Line 309
				    [CrossRoot|[[108|[105|[98]]]|[_cor9|[]]]]
			  end
		      in  let <CLibDir> =
			      %% Line 311
			      call 'filename':'join'
				  (_cor11)
			  in  let <_cor14> =
				  %% Line 312
				  call 'erlang':'++'
				      (CLibDir, [42])
			      in  let <Cmd> =
				      %% Line 312
				      call 'erlang':'++'
					  ([108|[115|[32|[45|[100|[32]]]]]], _cor14)
				  in  let <_cor16> =
					  %% Line 313
					  call 'os':'cmd'
					      (Cmd)
				      in  let <_cor17> =
					      %% Line 313
					      call 'string':'tokens'
						  (_cor16, [10])
					  in  let <XLibDir> =
						  %% Line 313
						  call 'lists':'last'
						      (_cor17)
					      in  %% Line 314
						  case call 'file':'list_dir'
							   (XLibDir) of
						    %% Line 315
						    <{'error','enoent'}> when 'true' ->
							%% Line 316
							[]
						    %% Line 317
						    <_cor28> when 'true' ->
							%% Line 318
							XLibDir
						  end
		end
'erl_root'/1 =
    %% Line 322
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 323
	    case apply 'get_var'/2
		     ('crossroot', _cor0) of
	      %% Line 324
	      <{'error','notfound'}> when 'true' ->
		  call 'code':'root_dir'
		      ()
	      %% Line 325
	      <CrossRoot> when 'true' ->
		  CrossRoot
	    end
	in  %% Line 327
	    case call 'ts_lib':'erlang_type'
		     (_cor2) of
	      %% Line 328
	      <{'srctree',_X_Version}> when 'true' ->
		  let <Target> =
		      %% Line 329
		      apply 'get_var'/2
			  ('target', _cor0)
		  in  %% Line 330
		      {'srctree',_cor2,Target}
	      %% Line 331
	      <{_cor7,_X_Version}> when 'true' ->
		  %% Line 332
		  {'installed',_cor2}
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor5})
		-| ['compiler_generated'] )
	    end
'get_var'/2 =
    %% Line 336
    fun (_cor1,_cor0) ->
	%% Line 337
	case call 'lists':'keysearch'
		 (_cor1, 1, _cor0) of
	  %% Line 338
	  <{'value',{_cor5,Value}}>
	      when call 'erlang':'=:='
		    (_cor5,
		     _cor1) ->
	      %% Line 339
	      Value
	  %% Line 340
	  <_cor6> when 'true' ->
	      %% Line 341
	      {'error','notfound'}
	end
'sock_libraries'/1 =
    %% Line 345
    fun (_cor0) ->
	case _cor0 of
	  <{'win32',_cor2}> when 'true' ->
	      %% Line 346
	      [119|[115|[50|[95|[51|[50|[46|[108|[105|[98]]]]]]]]]]
	  %% Line 347
	  <{'unix',_cor3}> when 'true' ->
	      %% Line 348
	      []
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'sock_libraries',1}}] )
	    -| ['compiler_generated'] )
	end
'link_library'/2 =
    %% Line 350
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <LibName,{'win32',_cor5}> when 'true' ->
	      %% Line 351
	      call 'erlang':'++'
		  (LibName, [46|[108|[105|[98]]]])
	  %% Line 352
	  <LibName,{'unix',_cor6}> when 'true' ->
	      let <_cor2> =
		  %% Line 353
		  call 'erlang':'++'
		      (LibName, [46|[97]])
	      in  %% Line 353
		  [108|[105|[98|_cor2]]]
	  %% Line 354
	  <_X_LibName,_X_Other> when 'true' ->
	      %% Line 355
	      call 'erlang':'exit'
		  ({'link_library','not_supported'})
	end
'emu_vars'/1 =
    %% Line 358
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 359
	    apply 'is_source_build'/0
		()
	in  let <_cor2> =
		%% Line 360
		call 'lib':'progname'
		    ()
	    in  let <_cor3> =
		    %% Line 360
		    call 'erlang':'atom_to_list'
			(_cor2)
		in  %% Line 359
		    [{'is_source_build',_cor1}|%% Line 360
					       [{'erl_name',_cor3}|_cor0]]
'is_source_build'/0 =
    %% Line 362
    fun () ->
	let <_cor0> =
	    %% Line 363
	    call 'erlang':'system_info'
		('system_version')
	in  let <_cor1> =
		%% Line 363
		call 'string':'str'
		    (_cor0, [91|[115|[111|[117|[114|[99|[101|[93]]]]]]]])
	    in  %% Line 363
		call 'erlang':'>'
		    (_cor1, 0)
'is_debug_build'/0 =
    %% Line 365
    fun () ->
	let <_cor1> =
	    catch
		let <_cor0> =
		    %% Line 366
		    call 'erlang':'system_info'
			('system_version')
		in  %% Line 366
		    call 'string':'str'
			(_cor0, [100|[101|[98|[117|[103]]]]])
	in  %% Line 366
	    case _cor1 of
	      %% Line 367
	      <Int>
		  when let <_cor2> =
			call 'erlang':'is_integer'
			    (_cor1)
		    in  let <_cor3> =
			    call 'erlang':'>'
				(_cor1, 0)
			in  call 'erlang':'and'
				(_cor2, _cor3) ->
		  %% Line 368
		  'true'
	      %% Line 369
	      <_cor5> when 'true' ->
		  %% Line 370
		  'false'
	    end
'ssl'/2 =
    %% Line 375
    fun (_cor1,_cor0) ->
	%% Line 376
	case apply 'lib_dir'/2
		 (_cor1, 'ssl') of
	  %% Line 377
	  <{'error','bad_name'}> when 'true' ->
	      %% Line 378
	      call 'erlang':'throw'
		  ({'cannot_find_app','ssl'})
	  %% Line 379
	  <Dir> when 'true' ->
	      let <_cor2> =
		  %% Line 380
		  call 'filename':'nativename'
		      (Dir)
	      in  let <_cor3> =
		      %% Line 380
		      apply 'quote'/1
			  (_cor2)
		  in  %% Line 380
		      [{'ssl_libdir',_cor3}|_cor1]
	end
'separators'/2 =
    %% Line 383
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Vars,{'win32',_cor4}> when 'true' ->
	      %% Line 384
	      [{'DS',[92]}|[{'PS',[59]}|Vars]]
	  %% Line 385
	  <Vars,_cor5> when 'true' ->
	      %% Line 386
	      [{'DS',[47]}|[{'PS',[58]}|Vars]]
	end
'quote'/1 =
    %% Line 388
    fun (_cor0) ->
	%% Line 389
	case call 'lists':'member'
		 (32, _cor0) of
	  %% Line 390
	  <'false'> when 'true' ->
	      _cor0
	  %% Line 391
	  <'true'> when 'true' ->
	      apply 'make_quote'/1
		  (_cor0)
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor1})
	    -| ['compiler_generated'] )
	end
'make_quote'/1 =
    %% Line 394
    fun (_cor0) ->
	%% Line 395
	case call 'os':'type'
		 () of
	  %% Line 396
	  <{'win32',_cor9}> when 'true' ->
	      let <_cor1> =
		  %% Line 397
		  call 'erlang':'++'
		      (_cor0, [34])
	      in  %% Line 397
		  [34|_cor1]
	  %% Line 398
	  <_cor10> when 'true' ->
	      let <BackQuote> =
		  %% Line 399
		  ( fun (_cor3,_cor2) ->
			case <_cor3,_cor2> of
			  <32,Acc> when 'true' ->
			      [92|[32|Acc]]
			  %% Line 400
			  <Char,Acc> when 'true' ->
			      [Char|Acc]
			end
		    -| [{'id',{0,0,'-make_quote/1-fun-0-'}}] )
	      in  %% Line 401
		  call 'lists':'foldr'
		      (BackQuote, [], _cor0)
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ts_erl_config')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ts_erl_config', _cor0)
end