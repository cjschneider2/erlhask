module 'ts_install' ['install'/2,
		     'module_info'/0,
		     'module_info'/1,
		     'platform_id'/1]
    attributes [%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','file_info'},[{'typed_record_field',{'record_field',25,{'atom',25,'size'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'type'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'device'}|[{'atom',26,'directory'}|[{'atom',26,'other'}|[{'atom',26,'regular'}|[{'atom',26,'symlink'}]]]]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'access'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'atom',27,'read'}|[{'atom',27,'write'}|[{'atom',27,'read_write'}|[{'atom',27,'none'}]]]]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'atime'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'remote_type',28,[{'atom',28,'file'}|[{'atom',28,'date_time'}|[[]]]]}|[{'type',28,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'mtime'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'remote_type',32,[{'atom',32,'file'}|[{'atom',32,'date_time'}|[[]]]]}|[{'type',32,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',34,{'atom',34,'ctime'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'remote_type',34,[{'atom',34,'file'}|[{'atom',34,'date_time'}|[[]]]]}|[{'type',34,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',40,{'atom',40,'mode'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'links'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',46,{'atom',46,'major_device'}},{'type',46,'union',[{'atom',46,'undefined'}|[{'type',46,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'minor_device'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'inode'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',54,{'atom',54,'uid'}},{'type',54,'union',[{'atom',54,'undefined'}|[{'type',54,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',55,{'atom',55,'gid'}},{'type',55,'union',[{'atom',55,'undefined'}|[{'type',55,'non_neg_integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','file_descriptor'},[{'typed_record_field',{'record_field',59,{'atom',59,'module'}},{'type',59,'union',[{'atom',59,'undefined'}|[{'type',59,'module',[]}]]}}|[{'typed_record_field',{'record_field',60,{'atom',60,'data'}},{'type',60,'union',[{'atom',60,'undefined'}|[{'type',60,'term',[]}]]}}]],[]}]]
'install'/2 =
    %% Line 27
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'install_local',Options> when 'true' ->
	      let <_cor2> =
		  %% Line 28
		  call 'os':'type'
		      ()
	      in  %% Line 28
		  apply 'install'/2
		      (_cor2, Options)
	  %% Line 30
	  <TargetSystem,Options> when 'true' ->
	      %% Line 31
	      case call 'file':'consult'
		       ([118|[97|[114|[105|[97|[98|[108|[101|[115]]]]]]]]]) of
		%% Line 32
		<{'ok',Vars}> when 'true' ->
		    %% Line 33
		    case call 'proplists':'get_value'
			     ('cross', Vars) of
		      %% Line 34
		      <[121|[101|[115]]]>
			  when call 'erlang':'=:='
				(Options,
				 []) ->
			  %% Line 35
			  apply 'target_install'/1
			      (Vars)
		      %% Line 36
		      <_cor7> when 'true' ->
			  %% Line 37
			  apply 'build_install'/2
			      (TargetSystem, Options)
		    end
		%% Line 39
		<_cor8> when 'true' ->
		    %% Line 40
		    apply 'build_install'/2
			(TargetSystem, Options)
	      end
	end
'build_install'/2 =
    %% Line 44
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 45
	    call 'proplists':'get_value'
		('xcomp', _cor0)
	in  let <XComp> =
		%% Line 45
		apply 'parse_xcomp_file'/1
		    (_cor2)
	    in  let <_cor4> =
		    %% Line 46
		    call 'erlang':'++'
			(XComp, _cor0)
		in  %% Line 46
		    case apply 'autoconf'/2
			     (_cor1, _cor4) of
		      %% Line 47
		      <{'ok',Vars0}> when 'true' ->
			  let <OsType> =
			      %% Line 48
			      apply 'os_type'/1
				  (_cor1)
			  in  let <_cor6> =
				  %% Line 49
				  call 'erlang':'++'
				      (XComp, _cor0)
			      in  let <_cor7> =
				      %% Line 49
				      call 'erlang':'++'
					  (Vars0, _cor6)
				  in  let <Vars1> =
					  %% Line 49
					  call 'ts_erl_config':'variables'
					      (_cor7, OsType)
				      in  %% Line 50
					  case apply 'add_vars'/2
						   (Vars1, _cor0) of
					    <{Options1,Vars2}> when 'true' ->
						let <Vars3> =
						    %% Line 51
						    call 'lists':'flatten'
							([Options1|Vars2])
						in  %% Line 52
						    apply 'write_terms'/2
							([118|[97|[114|[105|[97|[98|[108|[101|[115]]]]]]]]], Vars3)
					    ( <_cor9> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_cor9})
					      -| ['compiler_generated'] )
					  end
		      %% Line 53
		      <{'error',Reason}> when 'true' ->
			  %% Line 54
			  {'error',Reason}
		      ( <_cor11> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor11})
			-| ['compiler_generated'] )
		    end
'os_type'/1 =
    %% Line 57
    fun (_cor0) ->
	case _cor0 of
	  <OsType = {'unix',_cor2}> when 'true' ->
	      OsType
	  %% Line 58
	  <OsType = {'win32',_cor3}> when 'true' ->
	      OsType
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'os_type',1}}] )
	    -| ['compiler_generated'] )
	end
'target_install'/1 =
    %% Line 60
    fun (_cor0) ->
	do  %% Line 61
	    call 'io':'format'
		([67|[114|[111|[115|[115|[32|[105|[110|[115|[116|[97|[108|[108|[97|[116|[105|[111|[110|[32|[100|[101|[116|[101|[99|[116|[101|[100|[44|[32|[115|[107|[105|[112|[112|[105|[110|[103|[32|[99|[111|[110|[102|[105|[103|[117|[114|[101|[32|[97|[110|[100|[32|[100|[97|[116|[97|[95|[100|[105|[114|[32|[109|[97|[107|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	    do  %% Line 62
		case call 'file':'rename'
			 ([118|[97|[114|[105|[97|[98|[108|[101|[115]]]]]]]]], [118|[97|[114|[105|[97|[98|[108|[101|[115|[45|[99|[114|[111|[115|[115]]]]]]]]]]]]]]]) of
		  %% Line 63
		  <'ok'> when 'true' ->
		      'ok'
		  %% Line 65
		  <_cor7> when 'true' ->
		      do  %% Line 66
			  call 'io':'format'
			      ([67|[111|[117|[108|[100|[32|[110|[111|[116|[32|[102|[105|[110|[100|[32|[118|[97|[114|[105|[97|[98|[108|[101|[115|[32|[102|[105|[108|[101|[32|[102|[114|[111|[109|[32|[99|[114|[111|[115|[115|[32|[109|[97|[107|[101|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
			  %% Line 67
			  call 'erlang':'throw'
			      ('cross_installation_failed')
		end
		let <CPU> =
		    %% Line 69
		    call 'proplists':'get_value'
			('CPU', _cor0)
		in  let <OS> =
			%% Line 70
			call 'proplists':'get_value'
			    ('os', _cor0)
		    in  %% Line 71
			case apply 'add_vars'/2
				 ([{'cross',[121|[101|[115]]]}|[{'CPU',CPU}|[{'os',OS}|[]]]], []) of
			  <{Options,Vars}> when 'true' ->
			      let <Variables> =
				  %% Line 72
				  call 'lists':'flatten'
				      ([Options|Vars])
			      in  %% Line 73
				  apply 'write_terms'/2
				      ([118|[97|[114|[105|[97|[98|[108|[101|[115]]]]]]]]], Variables)
			  ( <_cor4> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor4})
			    -| ['compiler_generated'] )
			end
'autoconf'/2 =
    %% Line 79
    fun (_cor1,_cor0) ->
	%% Line 80
	case apply 'autoconf1'/2
		 (_cor1, _cor0) of
	  %% Line 81
	  <'ok'> when 'true' ->
	      let <_cor2> =
		  %% Line 82
		  call 'file':'read_file'
		      ([99|[111|[110|[102|[95|[118|[97|[114|[115]]]]]]]]])
	      in  %% Line 82
		  apply 'autoconf2'/1
		      (_cor2)
	  %% Line 83
	  <Error> when 'true' ->
	      %% Line 84
	      Error
	end
'autoconf1'/2 =
    %% Line 87
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'win32',_cor4},[{'cross',[110|[111]]}]> when 'true' ->
	      %% Line 88
	      call 'ts_autoconf_win32':'configure'
		  ()
	  %% Line 89
	  <{'unix',_cor5},XCompFile> when 'true' ->
	      %% Line 90
	      apply 'unix_autoconf'/1
		  (XCompFile)
	  %% Line 91
	  <_cor6,_cor7> when 'true' ->
	      do  %% Line 92
		  call 'io':'format'
		      ([99|[114|[111|[115|[115|[32|[99|[111|[109|[112|[105|[108|[97|[116|[105|[111|[110|[32|[110|[111|[116|[32|[115|[117|[112|[112|[111|[114|[116|[101|[100|[32|[102|[111|[114|[32|[116|[104|[97|[116|[32|[116|[104|[105|[115|[32|[112|[108|[97|[116|[102|[111|[114|[109|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		  %% Line 93
		  call 'erlang':'throw'
		      ('cross_installation_failed')
	end
'autoconf2'/1 =
    %% Line 95
    fun (_cor0) ->
	case _cor0 of
	  <{'ok',Bin}> when 'true' ->
	      let <_cor1> =
		  %% Line 96
		  call 'ts_lib':'b2s'
		      (Bin)
	      in  %% Line 96
		  apply 'get_vars'/4
		      (_cor1, 'name', [], [])
	  %% Line 97
	  <Error> when 'true' ->
	      %% Line 98
	      Error
	end
'get_vars'/4 =
    %% Line 100
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[58|Rest],'name',Current,Result> when 'true' ->
	      let <_cor4> =
		  %% Line 101
		  call 'lists':'reverse'
		      (Current)
	      in  let <Name> =
		      %% Line 101
		      call 'erlang':'list_to_atom'
			  (_cor4)
		  in  %% Line 102
		      apply 'get_vars'/4
			  (Rest, 'value', [], [Name|Result])
	  %% Line 103
	  <[13|Rest],'value',Current,Result> when 'true' ->
	      %% Line 104
	      apply 'get_vars'/4
		  (Rest, 'value', Current, Result)
	  %% Line 105
	  <[10|Rest],'value',Current,[Name|Result]> when 'true' ->
	      let <Value> =
		  %% Line 106
		  call 'lists':'reverse'
		      (Current)
	      in  %% Line 107
		  apply 'get_vars'/4
		      (Rest, 'name', [], [{Name,Value}|Result])
	  %% Line 108
	  <[C|Rest],State,Current,Result> when 'true' ->
	      %% Line 109
	      apply 'get_vars'/4
		  (Rest, State, [C|Current], Result)
	  %% Line 110
	  <[],'name',[],Result> when 'true' ->
	      %% Line 111
	      {'ok',Result}
	  %% Line 112
	  <_cor11,_cor12,_cor13,_cor14> when 'true' ->
	      %% Line 113
	      {'error','fatal_bad_conf_vars'}
	end
'config_flags'/0 =
    %% Line 115
    fun () ->
	%% Line 116
	case call 'os':'getenv'
		 ([67|[79|[78|[70|[73|[71|[95|[70|[76|[65|[71|[83]]]]]]]]]]]]) of
	  %% Line 117
	  <'false'> when 'true' ->
	      []
	  %% Line 118
	  <CF> when 'true' ->
	      call 'string':'tokens'
		  (CF, [32|[9|[10]]])
	end
'unix_autoconf'/1 =
    %% Line 121
    fun (_cor0) ->
	let <Configure> =
	    %% Line 122
	    call 'filename':'absname'
		([99|[111|[110|[102|[105|[103|[117|[114|[101]]]]]]]]])
	in  let <Flags> =
		%% Line 123
		call 'proplists':'get_value'
		    ('crossflags', _cor0, [])
	    in  let <Env> =
		    %% Line 124
		    call 'proplists':'get_value'
			('crossenv', _cor0, [])
		in  let <Host> =
			%% Line 125
			apply 'get_xcomp_flag'/2
			    ([104|[111|[115|[116]]]], Flags)
		    in  let <Build> =
			    %% Line 126
			    apply 'get_xcomp_flag'/2
				([98|[117|[105|[108|[100]]]]], Flags)
			in  let <_cor6> =
				%% Line 128
				call 'erlang':'system_info'
				    ('threads')
			    in  let <_cor8> =
				    %% Line 128
				    ( case <> of
					<>
					    when call 'erlang':'=/='
						  (_cor6,
						   'false') ->
					    ( [[32|[45|[45|[101|[110|[97|[98|[108|[101|[45|[115|[104|[108|[105|[98|[45|[116|[104|[114|[101|[97|[100|[45|[115|[97|[102|[101|[116|[121]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
					      -| ['compiler_generated'] )
					( <> when 'true' ->
					      []
					  -| ['compiler_generated'] )
				      end
				      -| ['list_comprehension'] )
				in  let <_cor10> =
					%% Line 130
					call 'erlang':'system_info'
					    ('system_version')
				    in  let <_cor11> =
					    %% Line 130
					    call 'string':'str'
						(_cor10, [100|[101|[98|[117|[103]]]]])
					in  let <_cor13> =
						%% Line 130
						( case <> of
						    <>
							when call 'erlang':'>'
							      (_cor11,
							       0) ->
							( [[32|[45|[45|[101|[110|[97|[98|[108|[101|[45|[100|[101|[98|[117|[103|[45|[109|[111|[100|[101]]]]]]]]]]]]]]]]]]]]]
							  -| ['compiler_generated'] )
						    ( <> when 'true' ->
							  []
						      -| ['compiler_generated'] )
						  end
						  -| ['list_comprehension'] )
					    in  let <_cor23> =
						    %% Line 131
						    ( letrec
							  'lc$^0'/1 =
							      fun (_cor21) ->
								  case _cor21 of
								    <[Y|_cor16]>
									when %% Line 133
									  try
									      ( case <> of
										  ( <>
											when call 'erlang':'=='
											      (Y,
											       [45|[45|[101|[110|[97|[98|[108|[101|[45|[109|[54|[52|[45|[98|[117|[105|[108|[100]]]]]]]]]]]]]]]]]]) ->
											'true'
										    -| ['compiler_generated'] )
										  ( <> when 'true' ->
											call 'erlang':'=='
											    (Y, [45|[45|[101|[110|[97|[98|[108|[101|[45|[109|[51|[50|[45|[98|[117|[105|[108|[100]]]]]]]]]]]]]]]]]])
										    -| ['compiler_generated'] )
										end
										-| ['compiler_generated'] )
									  of <Try> ->
									      Try
									  catch <T,R> ->
									      'false' ->
									let <_cor22> =
									    apply 'lc$^0'/1
										(_cor16)
									in  ( [Y|_cor22]
									      -| ['compiler_generated'] )
								    ( <[Y|_cor16]> when 'true' ->
									  apply 'lc$^0'/1
									      (_cor16)
								      -| ['compiler_generated'] )
								    <[]> when 'true' ->
									[]
								    ( <_cor21> when 'true' ->
									  ( primop 'match_fail'
										({'function_clause',_cor21})
									    -| [{'function_name',{'lc$^0',1}}] )
								      -| ['compiler_generated'] )
								  end
						      in  let <_cor20> =
							      apply 'config_flags'/0
								  ()
							  in  apply 'lc$^0'/1
								  (_cor20)
						      -| ['list_comprehension'] )
						in  let <_cor25> =
							%% Line 134
							[32|_cor23]
						    in  let <_cor26> =
							    %% Line 134
							    call 'erlang':'++'
								(_cor13, _cor25)
							in  let <_cor27> =
								%% Line 134
								call 'erlang':'++'
								    (_cor8, _cor26)
							    in  let <_cor28> =
								    %% Line 134
								    call 'erlang':'++'
									(Build, _cor27)
								in  let <Args> =
									%% Line 134
									call 'erlang':'++'
									    (Host, _cor28)
								    in  %% Line 135
									case call 'filelib':'is_file'
										 (Configure) of
									  %% Line 136
									  <'true'> when 'true' ->
									      let <OSXEnv> =
										  %% Line 137
										  apply 'macosx_cflags'/0
										      ()
									      in  let <_cor31> =
										      %% Line 139
										      call 'erlang':'++'
											  (Configure, Args)
										  in  let <_cor32> =
											  %% Line 139
											  call 'lists':'flatten'
											      (_cor31)
										      in  let <_cor33> =
											      %% Line 139
											      call 'erlang':'++'
												  (Env, OSXEnv)
											  in  do  %% Line 138
												  call 'io':'format'
												      ([82|[117|[110|[110|[105|[110|[103|[32|[126|[115|[126|[110|[69|[110|[118|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]], %% Line 139
																												 [_cor32|[_cor33|[]]])
												  let <_cor35> =
												      %% Line 140
												      call 'lists':'flatten'
													  ([[34]|[Configure|[[34]|[Args|[]]]]])
												  in  let <_cor34> =
													  %% Line 141
													  call 'erlang':'++'
													      (Env, OSXEnv)
												      in  let <Port> =
													      %% Line 140
													      call 'erlang':'open_port'
														  ({'spawn',_cor35}, %% Line 141
																     ['stream'|['eof'|[{'env',_cor34}|[]]]])
													  in  %% Line 142
													      call 'ts_lib':'print_data'
														  (Port)
									  %% Line 143
									  <'false'> when 'true' ->
									      %% Line 144
									      {'error','no_configure_script'}
									  ( <_cor37> when 'true' ->
										primop 'match_fail'
										    ({'case_clause',_cor37})
									    -| ['compiler_generated'] )
									end
'get_xcomp_flag'/2 =
    %% Line 147
    fun (_cor1,_cor0) ->
	%% Line 148
	apply 'get_xcomp_flag'/3
	    (_cor1, _cor1, _cor0)
'get_xcomp_flag'/3 =
    %% Line 149
    fun (_cor2,_cor1,_cor0) ->
	%% Line 150
	case call 'proplists':'get_value'
		 (_cor2, _cor0) of
	  %% Line 151
	  <'undefined'> when 'true' ->
	      []
	  %% Line 152
	  <[103|[117|[101|[115|[115]]]]]> when 'true' ->
	      let <_cor3> =
		  call 'os':'cmd'
		      ([36|[69|[82|[76|[95|[84|[79|[80|[47|[101|[114|[116|[115|[47|[97|[117|[116|[111|[99|[111|[110|[102|[47|[99|[111|[110|[102|[105|[103|[46|[103|[117|[101|[115|[115]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	      in  [[32|[45|[45]]]|[_cor1|[[61]|[_cor3|[]]]]]
	  %% Line 153
	  <HostVal> when 'true' ->
	      [[32|[45|[45]]]|[_cor1|[[61]|[HostVal|[]]]]]
	end
'macosx_cflags'/0 =
    %% Line 157
    fun () ->
	%% Line 158
	case call 'os':'type'
		 () of
	  %% Line 159
	  <{'unix','darwin'}> when 'true' ->
	      let <WordSize> =
		  %% Line 162
		  call 'erlang':'system_info'
		      ('wordsize')
	      in  let <_cor1> =
		      %% Line 163
		      call 'erlang':'*'
			  (8, WordSize)
		  in  let <_cor2> =
			  %% Line 163
			  call 'erlang':'integer_to_list'
			      (_cor1)
		      in  let <Mflag> =
			      %% Line 163
			      [45|[109|_cor2]]
			  in  %% Line 164
			      [{[67|[70|[76|[65|[71|[83]]]]]],Mflag}|[{[76|[68|[70|[76|[65|[71|[83]]]]]]],Mflag}|[]]]
	  %% Line 165
	  <_cor5> when 'true' ->
	      %% Line 166
	      []
	end
'parse_xcomp_file'/1 =
    %% Line 169
    fun (_cor0) ->
	case _cor0 of
	  <'undefined'> when 'true' ->
	      %% Line 170
	      [{'cross',[110|[111]]}]
	  %% Line 171
	  <Filepath> when 'true' ->
	      %% Line 172
	      case call 'file':'read_file'
		       (Filepath) of
		<{'ok',Bin}> when 'true' ->
		    let <Lines> =
			%% Line 173
			call 'binary':'split'
			    (Bin, #{#<10>(8,1,'integer',['unsigned'|['big']])}#, ['global'|['trim']])
		    in  %% Line 174
			case apply 'parse_xcomp_file'/3
				 (Lines, [], []) of
			  <{Envs,Flags}> when 'true' ->
			      let <_cor4> =
				  %% Line 175
				  call 'os':'getenv'
				      ([69|[82|[76|[95|[84|[79|[80]]]]]]])
			      in  %% Line 175
				  [{'cross',[121|[101|[115]]]}|[{'crossroot',_cor4}|%% Line 176
										    [{'crossenv',Envs}|[{'crossflags',Flags}|[]]]]]
			  ( <_cor3> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor3})
			    -| ['compiler_generated'] )
			end
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor1})
		  -| ['compiler_generated'] )
	      end
	end
'parse_xcomp_file'/3 =
    %% Line 178
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[Line = #{#<A>(8,1,'integer',['unsigned'|['big']]),
		     #<_cor16>('all',8,'binary',['unsigned'|['big']])}#|R],Envs,Flags>
	      when let <_cor3> =
		    %% Line 179
		    call 'erlang':'=<'
			(65, A)
		in  let <_cor4> =
			%% Line 179
			call 'erlang':'=<'
			    (A, 90)
		    in  %% Line 179
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      %% Line 180
	      case call 'binary':'split'
		       (Line, #{#<61>(8,1,'integer',['unsigned'|['big']])}#) of
		<[Var|[Value|[]]]> when 'true' ->
		    let <_cor7> =
			%% Line 181
			call 'ts_lib':'b2s'
			    (Var)
		    in  let <_cor6> =
			    %% Line 182
			    call 'ts_lib':'b2s'
				(Value)
			in  %% Line 181
			    apply 'parse_xcomp_file'/3
				(R, [{_cor7,_cor6}|%% Line 182
						   Envs], %% Line 182
							  Flags)
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 183
	  <[#{#<101>(8,1,'integer',['unsigned'|['big']]),
	      #<114>(8,1,'integer',['unsigned'|['big']]),
	      #<108>(8,1,'integer',['unsigned'|['big']]),
	      #<95>(8,1,'integer',['unsigned'|['big']]),
	      #<120>(8,1,'integer',['unsigned'|['big']]),
	      #<99>(8,1,'integer',['unsigned'|['big']]),
	      #<111>(8,1,'integer',['unsigned'|['big']]),
	      #<109>(8,1,'integer',['unsigned'|['big']]),
	      #<112>(8,1,'integer',['unsigned'|['big']]),
	      #<95>(8,1,'integer',['unsigned'|['big']]),
	      #<Line>('all',8,'binary',['unsigned'|['big']])}#|R],Envs,Flags> when 'true' ->
	      %% Line 184
	      case call 'binary':'split'
		       (Line, #{#<61>(8,1,'integer',['unsigned'|['big']])}#) of
		<[Var|[Value|[]]]> when 'true' ->
		    let <_cor10> =
			%% Line 185
			call 'ts_lib':'b2s'
			    (Var)
		    in  let <_cor9> =
			    %% Line 186
			    call 'ts_lib':'b2s'
				(Value)
			in  %% Line 185
			    apply 'parse_xcomp_file'/3
				(R, Envs, [{_cor10,_cor9}|%% Line 186
							  Flags])
		( <_cor8> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor8})
		  -| ['compiler_generated'] )
	      end
	  %% Line 187
	  <[_cor17|R],Envs,Flags> when 'true' ->
	      %% Line 188
	      apply 'parse_xcomp_file'/3
		  (R, Envs, Flags)
	  %% Line 189
	  <[],Envs,Flags> when 'true' ->
	      let <_cor12> =
		  %% Line 190
		  call 'lists':'reverse'
		      (Envs)
	      in  let <_cor11> =
		      %% Line 190
		      call 'lists':'reverse'
			  (Flags)
		  in  %% Line 190
		      {_cor12,_cor11}
	  ( <_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13})
		  -| [{'function_name',{'parse_xcomp_file',3}}] )
	    -| ['compiler_generated'] )
	end
'write_terms'/2 =
    %% Line 192
    fun (_cor1,_cor0) ->
	%% Line 193
	case call 'file':'open'
		 (_cor1, ['write']) of
	  %% Line 194
	  <{'ok',Fd}> when 'true' ->
	      let <_cor2> =
		  %% Line 195
		  apply 'remove_duplicates'/1
		      (_cor0)
	      in  let <Result> =
		      %% Line 195
		      apply 'write_terms1'/2
			  (Fd, _cor2)
		  in  do  %% Line 196
			  call 'file':'close'
			      (Fd)
			  %% Line 197
			  Result
	  %% Line 198
	  <{'error',Reason}> when 'true' ->
	      %% Line 199
	      {'error',Reason}
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor4})
	    -| ['compiler_generated'] )
	end
'write_terms1'/2 =
    %% Line 202
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Fd,[Term|Rest]> when 'true' ->
	      %% Line 203
	      case call 'io':'format'
		       (Fd, [126|[112|[46|[10]]]], [Term|[]]) of
		<'ok'> when 'true' ->
		    %% Line 204
		    apply 'write_terms1'/2
			(Fd, Rest)
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 205
	  <_cor5,[]> when 'true' ->
	      %% Line 206
	      'ok'
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'write_terms1',2}}] )
	    -| ['compiler_generated'] )
	end
'remove_duplicates'/1 =
    %% Line 208
    fun (_cor0) ->
	let <_cor7> =
	    %% Line 210
	    ( fun (_cor4,_cor3) ->
		  case <_cor4,_cor3> of
		    <{Key,Val},Acc> when 'true' ->
			let <R> =
			    %% Line 211
			    call 'erlang':'make_ref'
				()
			in  %% Line 212
			    case call 'proplists':'get_value'
				     (Key, Acc, R) of
			      %% Line 213
			      <_cor10>
				  when call 'erlang':'=:='
					(_cor10,
					 R) ->
				  [{Key,Val}|Acc]
			      %% Line 214
			      <_X_Else> when 'true' ->
				  %% Line 215
				  Acc
			    end
		    ( <_cor6,_cor5> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor6,_cor5})
			    -| [{'function_name',{'-remove_duplicates/1-fun-0-',2}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-remove_duplicates/1-fun-0-'}}] )
	in  let <_cor8> =
		%% Line 210
		call 'lists':'foldl'
		    (_cor7, %% Line 217
			    [], _cor0)
	    in  %% Line 209
		call 'lists':'reverse'
		    (_cor8)
'add_vars'/2 =
    %% Line 219
    fun (_cor1,_cor0) ->
	let <Opts,LongNames> =
	    %% Line 221
	    case call 'lists':'keymember'
		     ('longnames', 1, _cor0) of
	      %% Line 222
	      <'true'> when 'true' ->
		  let <_cor2> =
		      %% Line 223
		      call 'lists':'keydelete'
			  ('longnames', 1, _cor0)
		  in  <_cor2,%% Line 223
			     'true'>
	      %% Line 224
	      <'false'> when 'true' ->
		  %% Line 225
		  <_cor0,'false'>
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor3})
		-| ['compiler_generated'] )
	    end
	in  %% Line 227
	    case %% Line 228
		 apply 'platform'/1
		     ([{'longnames',LongNames}|_cor1]) of
	      <{PlatformId,PlatformLabel,PlatformFilename,Version}> when 'true' ->
		  let <_cor7> =
		      %% Line 229
		      apply 'hostname'/0
			  ()
		  in  let <NetDir> =
			  %% Line 229
			  call 'lists':'concat'
			      ([[47|[110|[101|[116]]]]|[_cor7|[]]])
		      in  let <_cor10> =
			      %% Line 230
			      case call 'file':'read_file_info'
				       (NetDir) of
				%% Line 231
				<{'ok',{'file_info',_cor16,'directory',_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27}}> when 'true' ->
				    NetDir
				%% Line 232
				<_cor28> when 'true' ->
				    []
			      end
			  in  let <_cor12> =
				  %% Line 237
				  apply 'get_rsh_name'/0
				      ()
			      in  let <_cor13> =
				      %% Line 242
				      apply 'get_testcase_callback'/0
					  ()
				  in  %% Line 234
				      {Opts,[{'longnames',LongNames}|%% Line 235
								     [{'platform_id',PlatformId}|%% Line 236
												 [{'platform_filename',PlatformFilename}|%% Line 237
																	 [{'rsh_name',_cor12}|%% Line 238
																			      [{'platform_label',PlatformLabel}|%% Line 239
																								[{'ts_net_dir',_cor10}|%% Line 240
																										       [{'erl_flags',[]}|%% Line 241
																													 [{'erl_release',Version}|%% Line 242
																																  [{'ts_testcase_callback',_cor13}|_cor1]]]]]]]]]}
	      ( <_cor6> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor6})
		-| ['compiler_generated'] )
	    end
'get_testcase_callback'/0 =
    %% Line 244
    fun () ->
	%% Line 245
	case call 'os':'getenv'
		 ([84|[83|[95|[84|[69|[83|[84|[67|[65|[83|[69|[95|[67|[65|[76|[76|[66|[65|[67|[75]]]]]]]]]]]]]]]]]]]]) of
	  %% Line 246
	  <ModFunc>
	      when let <_cor0> =
		    call 'erlang':'is_list'
			(ModFunc)
		in  let <_cor1> =
			call 'erlang':'=/='
			    (ModFunc, [])
		    in  call 'erlang':'and'
			    (_cor0, _cor1) ->
	      %% Line 247
	      case call 'string':'tokens'
		       (ModFunc, [32]) of
		%% Line 248
		<[_X_Mod|[_X_Func|[]]]> when 'true' ->
		    ModFunc
		%% Line 249
		<_cor6> when 'true' ->
		    []
	      end
	  %% Line 251
	  <_cor7> when 'true' ->
	      %% Line 252
	      case call 'init':'get_argument'
		       ('ts_testcase_callback') of
		%% Line 253
		<{'ok',[[Mod|[Func|[]]]|[]]}> when 'true' ->
		    let <_cor3> =
			[32|Func]
		    in  call 'erlang':'++'
			    (Mod, _cor3)
		%% Line 254
		<_cor8> when 'true' ->
		    []
	      end
	end
'get_rsh_name'/0 =
    %% Line 258
    fun () ->
	%% Line 259
	case call 'os':'getenv'
		 ([69|[82|[76|[95|[82|[83|[72]]]]]]]) of
	  %% Line 260
	  <'false'> when 'true' ->
	      [114|[115|[104]]]
	  %% Line 261
	  <Str> when 'true' ->
	      Str
	end
'platform_id'/1 =
    %% Line 264
    fun (_cor0) ->
	%% Line 265
	case apply 'platform'/1
		 (_cor0) of
	  <{Id,_cor3,_cor4,_cor5}> when 'true' ->
	      %% Line 266
	      Id
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'platform'/1 =
    %% Line 268
    fun (_cor0) ->
	let <Hostname> =
	    %% Line 269
	    apply 'hostname'/0
		()
	in  %% Line 271
	    case call 'ts_lib':'erlang_type'
		     () of
	      <{Type,Version}> when 'true' ->
		  let <Cpu> =
		      %% Line 272
		      call 'ts_lib':'var'
			  ('CPU', _cor0)
		  in  let <Os> =
			  %% Line 273
			  call 'ts_lib':'var'
			      ('os', _cor0)
		      in  let <_cor5> =
			      %% Line 275
			      call 'erlang':'atom_to_list'
				  (Type)
			  in  let <ErlType> =
				  %% Line 275
				  apply 'to_upper'/1
				      (_cor5)
			      in  let <OsType> =
				      %% Line 276
				      call 'ts_lib':'initial_capital'
					  (Os)
				  in  let <CpuType> =
					  %% Line 277
					  call 'ts_lib':'initial_capital'
					      (Cpu)
				      in  let <LinuxDist> =
					      %% Line 278
					      apply 'linux_dist'/0
						  ()
					  in  let <ExtraLabel> =
						  %% Line 279
						  apply 'extra_platform_label'/0
						      ()
					      in  let <Schedulers> =
						      %% Line 280
						      apply 'schedulers'/0
							  ()
						  in  let <BindType> =
							  %% Line 281
							  apply 'bind_type'/0
							      ()
						      in  let <KP> =
							      %% Line 282
							      apply 'kernel_poll'/0
								  ()
							  in  let <IOTHR> =
								  %% Line 283
								  apply 'io_thread'/0
								      ()
							      in  let <LC> =
								      %% Line 284
								      apply 'lock_checking'/0
									  ()
								  in  let <MT> =
									  %% Line 285
									  apply 'modified_timing'/0
									      ()
								      in  let <AsyncThreads> =
									      %% Line 286
									      apply 'async_threads'/0
										  ()
									  in  let <Debug> =
										  %% Line 287
										  apply 'debug'/0
										      ()
									      in  let <CpuBits> =
										      %% Line 288
										      apply 'word_size'/0
											  ()
										  in  let <Common> =
											  %% Line 289
											  call 'lists':'concat'
											      ([Hostname|[[47]|[OsType|[[47]|[CpuType|[CpuBits|[LinuxDist|%% Line 290
																			  [Schedulers|[BindType|[KP|[IOTHR|[LC|[MT|[AsyncThreads|%% Line 291
																										 [Debug|[ExtraLabel|[]]]]]]]]]]]]]]]]])
										      in  let <PlatformId> =
											      %% Line 292
											      call 'lists':'concat'
												  ([ErlType|[[32]|[Version|[Common|[]]]]])
											  in  let <PlatformLabel> =
												  %% Line 293
												  call 'erlang':'++'
												      (ErlType, Common)
											      in  let <PlatformFilename> =
												      %% Line 294
												      apply 'platform_as_filename'/1
													  (PlatformId)
												  in  %% Line 295
												      {PlatformId,PlatformLabel,PlatformFilename,Version}
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor2})
		-| ['compiler_generated'] )
	    end
'platform_as_filename'/1 =
    %% Line 297
    fun (_cor0) ->
	let <_cor6> =
	    %% Line 298
	    ( fun (_cor4) ->
		  case _cor4 of
		    <32> when 'true' ->
			95
		    %% Line 299
		    <47> when 'true' ->
			95
		    %% Line 300
		    <C>
			when let <_cor1> =
			      call 'erlang':'=<'
				  (65, _cor4)
			  in  let <_cor2> =
				  call 'erlang':'=<'
				      (_cor4, 90)
			      in  call 'erlang':'and'
				      (_cor1, _cor2) ->
			let <_cor3> =
			    call 'erlang':'-'
				(C, 65)
			in  call 'erlang':'+'
				(_cor3, 97)
		    %% Line 301
		    <C> when 'true' ->
			C
		  end
	      -| [{'id',{0,0,'-platform_as_filename/1-fun-0-'}}] )
	in  %% Line 298
	    call 'lists':'map'
		(_cor6, _cor0)
'to_upper'/1 =
    %% Line 304
    fun (_cor0) ->
	let <_cor6> =
	    %% Line 305
	    ( fun (_cor4) ->
		  case _cor4 of
		    <C>
			when let <_cor1> =
			      call 'erlang':'=<'
				  (97, _cor4)
			  in  let <_cor2> =
				  call 'erlang':'=<'
				      (_cor4, 122)
			      in  call 'erlang':'and'
				      (_cor1, _cor2) ->
			let <_cor3> =
			    call 'erlang':'-'
				(C, 97)
			in  call 'erlang':'+'
				(_cor3, 65)
		    %% Line 306
		    <C> when 'true' ->
			C
		  end
	      -| [{'id',{0,0,'-to_upper/1-fun-0-'}}] )
	in  %% Line 305
	    call 'lists':'map'
		(_cor6, _cor0)
'word_size'/0 =
    %% Line 309
    fun () ->
	let <_cor1> =
	    %% Line 310
	    call 'erlang':'system_info'
		({'wordsize','external'})
	in  let <_cor0> =
		%% Line 311
		call 'erlang':'system_info'
		    ({'wordsize','internal'})
	    in  %% Line 310
		case <_cor1,_cor0> of
		  %% Line 312
		  <4,4> when 'true' ->
		      []
		  %% Line 313
		  <8,8> when 'true' ->
		      [47|[54|[52]]]
		  %% Line 314
		  <8,4> when 'true' ->
		      [47|[72|[97|[108|[102|[119|[111|[114|[100]]]]]]]]]
		  ( <_fol20,_fol21> when 'true' ->
			let <_cor2> = {_fol20,_fol21}
			in  primop 'match_fail'
				({'case_clause',_cor2})
		    -| ['compiler_generated'] )
		end
'linux_dist'/0 =
    %% Line 317
    fun () ->
	%% Line 318
	case call 'os':'type'
		 () of
	  %% Line 319
	  <{'unix','linux'}> when 'true' ->
	      %% Line 320
	      apply 'linux_dist_1'/1
		  ([( 'linux_dist_suse'/0
		      -| [{'id',{0,0,'-linux_dist/0-fun-0-'}}] )|[]])
	  %% Line 321
	  <_cor1> when 'true' ->
	      []
	end
'linux_dist_1'/1 =
    %% Line 324
    fun (_cor0) ->
	case _cor0 of
	  <[F|T]> when 'true' ->
	      %% Line 325
	      case apply F
		       () of
		%% Line 326
		<[]> when 'true' ->
		    apply 'linux_dist_1'/1
			(T)
		%% Line 327
		<Str> when 'true' ->
		    Str
	      end
	  %% Line 329
	  <[]> when 'true' ->
	      []
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'linux_dist_1',1}}] )
	    -| ['compiler_generated'] )
	end
'linux_dist_suse'/0 =
    %% Line 331
    fun () ->
	%% Line 332
	case call 'filelib':'is_file'
		 ([47|[101|[116|[99|[47|[83|[117|[83|[69|[45|[114|[101|[108|[101|[97|[115|[101]]]]]]]]]]]]]]]]]) of
	  %% Line 333
	  <'false'> when 'true' ->
	      []
	  %% Line 334
	  <'true'> when 'true' ->
	      let <Ver0> =
		  %% Line 335
		  call 'os':'cmd'
		      ([97|[119|[107|[32|[39|[47|[94|[86|[69|[82|[83|[73|[79|[78|[47|[32|[123|[112|[114|[105|[110|[116|[32|[36|[51|[125|[39|[32|[47|[101|[116|[99|[47|[83|[117|[83|[69|[45|[114|[101|[108|[101|[97|[115|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	      in  %% Line 336
		  case call 'lists':'reverse'
			   (Ver0) of
		    <[_cor4|Ver1]> when 'true' ->
			let <Ver> =
			    %% Line 337
			    call 'lists':'reverse'
				(Ver1)
			in  %% Line 338
			    call 'erlang':'++'
				([47|[83|[117|[115|[101]]]]], Ver)
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor1})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor3})
	    -| ['compiler_generated'] )
	end
'hostname'/0 =
    %% Line 341
    fun () ->
	let <_cor0> =
	    catch
		%% Line 342
		call 'inet':'gethostname'
		    ()
	in  %% Line 342
	    case _cor0 of
	      %% Line 343
	      <{'ok',Hostname}>
		  when call 'erlang':'is_list'
			(Hostname) ->
		  let <_cor3> =
		      %% Line 344
		      ( fun (_cor1) ->
			    call 'erlang':'/='
				(_cor1, 46)
			-| [{'id',{0,0,'-hostname/0-fun-0-'}}] )
		  in  let <_cor4> =
			  %% Line 344
			  call 'lists':'takewhile'
			      (_cor3, Hostname)
		      in  %% Line 344
			  [47|_cor4]
	      %% Line 345
	      <_cor6> when 'true' ->
		  %% Line 346
		  [47|[108|[111|[99|[97|[108|[104|[111|[115|[116]]]]]]]]]]
	    end
'async_threads'/0 =
    %% Line 349
    fun () ->
	let <_cor0> =
	    catch
		%% Line 350
		call 'erlang':'system_info'
		    ('threads')
	in  %% Line 350
	    case _cor0 of
	      %% Line 351
	      <'true'> when 'true' ->
		  let <_cor1> =
		      call 'erlang':'system_info'
			  ('thread_pool_size')
		  in  let <_cor2> =
			  call 'erlang':'integer_to_list'
			      (_cor1)
		      in  [47|[65|_cor2]]
	      %% Line 352
	      <_cor4> when 'true' ->
		  []
	    end
'schedulers'/0 =
    %% Line 355
    fun () ->
	let <_cor0> =
	    catch
		%% Line 356
		call 'erlang':'system_info'
		    ('smp_support')
	in  %% Line 356
	    case _cor0 of
	      %% Line 357
	      <'true'> when 'true' ->
		  let <_cor2> =
		      %% Line 358
		      call 'erlang':'system_info'
			  ('schedulers')
		  in  let <_cor1> =
			  %% Line 359
			  call 'erlang':'system_info'
			      ('schedulers_online')
		      in  %% Line 358
			  case <_cor2,_cor1> of
			    %% Line 360
			    <S,_cor10>
				when call 'erlang':'=:='
				      (_cor10,
				       S) ->
				let <_cor3> =
				    %% Line 361
				    call 'erlang':'integer_to_list'
					(S)
				in  %% Line 361
				    [47|[83|_cor3]]
			    %% Line 362
			    <S,O> when 'true' ->
				let <_cor6> =
				    %% Line 363
				    call 'erlang':'integer_to_list'
					(S)
				in  let <_cor4> =
					%% Line 364
					call 'erlang':'integer_to_list'
					    (O)
				    in  let <_cor5> =
					    %% Line 363
					    [58|_cor4]
					in  let <_cor7> =
						%% Line 363
						call 'erlang':'++'
						    (_cor6, _cor5)
					    in  %% Line 363
						[47|[83|_cor7]]
			  end
	      %% Line 366
	      <_cor11> when 'true' ->
		  []
	    end
'bind_type'/0 =
    %% Line 369
    fun () ->
	let <_cor0> =
	    catch
		%% Line 370
		call 'erlang':'system_info'
		    ('scheduler_bind_type')
	in  %% Line 370
	    case _cor0 of
	      %% Line 371
	      <'thread_no_node_processor_spread'> when 'true' ->
		  [47|[115|[98|[116|[116|[110|[110|[112|[115]]]]]]]]]
	      %% Line 372
	      <'no_node_processor_spread'> when 'true' ->
		  [47|[115|[98|[116|[110|[110|[112|[115]]]]]]]]
	      %% Line 373
	      <'no_node_thread_spread'> when 'true' ->
		  [47|[115|[98|[116|[110|[110|[116|[115]]]]]]]]
	      %% Line 374
	      <'processor_spread'> when 'true' ->
		  [47|[115|[98|[116|[112|[115]]]]]]
	      %% Line 375
	      <'thread_spread'> when 'true' ->
		  [47|[115|[98|[116|[116|[115]]]]]]
	      %% Line 376
	      <'no_spread'> when 'true' ->
		  [47|[115|[98|[116|[110|[115]]]]]]
	      %% Line 377
	      <_cor2> when 'true' ->
		  []
	    end
'debug'/0 =
    %% Line 381
    fun () ->
	let <_cor0> =
	    %% Line 382
	    call 'erlang':'system_info'
		('system_version')
	in  %% Line 382
	    case call 'string':'str'
		     (_cor0, [100|[101|[98|[117|[103]]]]]) of
	      %% Line 383
	      <0> when 'true' ->
		  []
	      %% Line 384
	      <_cor2> when 'true' ->
		  [47|[68|[101|[98|[117|[103]]]]]]
	    end
'lock_checking'/0 =
    %% Line 387
    fun () ->
	let <_cor0> =
	    catch
		%% Line 388
		call 'erlang':'system_info'
		    ('lock_checking')
	in  %% Line 388
	    case _cor0 of
	      %% Line 389
	      <'true'> when 'true' ->
		  [47|[76|[67]]]
	      %% Line 390
	      <_cor2> when 'true' ->
		  []
	    end
'modified_timing'/0 =
    %% Line 393
    fun () ->
	let <_cor0> =
	    catch
		%% Line 394
		call 'erlang':'system_info'
		    ('modified_timing_level')
	in  %% Line 394
	    case _cor0 of
	      %% Line 395
	      <N>
		  when call 'erlang':'is_integer'
			(_cor0) ->
		  let <_cor1> =
		      %% Line 396
		      call 'erlang':'integer_to_list'
			  (N)
		  in  %% Line 396
		      [47|[84|_cor1]]
	      %% Line 397
	      <_cor3> when 'true' ->
		  []
	    end
'kernel_poll'/0 =
    %% Line 400
    fun () ->
	let <_cor0> =
	    catch
		%% Line 401
		call 'erlang':'system_info'
		    ('kernel_poll')
	in  %% Line 401
	    case _cor0 of
	      %% Line 402
	      <'true'> when 'true' ->
		  [47|[75|[80]]]
	      %% Line 403
	      <_cor2> when 'true' ->
		  []
	    end
'io_thread'/0 =
    %% Line 406
    fun () ->
	let <_cor0> =
	    catch
		%% Line 407
		call 'erlang':'system_info'
		    ('io_thread')
	in  %% Line 407
	    case _cor0 of
	      %% Line 408
	      <'true'> when 'true' ->
		  [47|[73|[79|[84|[72|[82]]]]]]
	      %% Line 409
	      <_cor2> when 'true' ->
		  []
	    end
'extra_platform_label'/0 =
    %% Line 412
    fun () ->
	%% Line 413
	case call 'os':'getenv'
		 ([84|[83|[95|[69|[88|[84|[82|[65|[95|[80|[76|[65|[84|[70|[79|[82|[77|[95|[76|[65|[66|[69|[76]]]]]]]]]]]]]]]]]]]]]]]) of
	  %% Line 414
	  <[]> when 'true' ->
	      []
	  %% Line 415
	  <Label = [_cor1|_cor2]> when 'true' ->
	      [47|Label]
	  %% Line 416
	  <'false'> when 'true' ->
	      []
	  ( <_cor0> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor0})
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ts_install')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ts_install', _cor0)
end