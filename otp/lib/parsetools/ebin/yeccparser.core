module 'yeccparser' ['format_error'/1,
		     'module_info'/0,
		     'module_info'/1,
		     'parse'/1,
		     'parse_and_scan'/1]
    attributes [%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','symbol'},[{'record_field',65,{'atom',65,'line'}}|[{'record_field',65,{'atom',65,'name'}}]],[]}],
		%% Line 23
		'type' =
		    %% Line 23
		    [{'yecc_ret',{'type',23,'union',[{'type',23,'tuple',[{'atom',23,'error'}|[{'var',23,'_'}]]}|[{'type',23,'tuple',[{'atom',23,'ok'}|[{'var',23,'_'}]]}]]},[]}],
		%% Line 25
		'spec' =
		    %% Line 25
		    [{{'parse',1},[{'type',25,'fun',[{'type',25,'product',[{'ann_type',25,[{'var',25,'Tokens'}|[{'type',25,'list',[]}]]}]}|[{'type',25,'yecc_ret',[]}]]}]}],
		%% Line 29
		'spec' =
		    %% Line 29
		    [{{'parse_and_scan',1},[{'type',29,'fun',[{'type',29,'product',[{'type',29,'union',[{'type',29,'tuple',[{'type',29,'union',[{'type',29,'function',[]}|[{'type',29,'tuple',[{'type',29,'atom',[]}|[{'type',29,'atom',[]}]]}]]}|[{'type',29,'list',[{'var',29,'_'}]}]]}|[{'type',30,'tuple',[{'type',30,'atom',[]}|[{'type',30,'atom',[]}|[{'type',30,'list',[{'var',30,'_'}]}]]]}]]}]}|[{'type',30,'yecc_ret',[]}]]}]}],
		%% Line 36
		'spec' =
		    %% Line 36
		    [{{'format_error',1},[{'type',36,'fun',[{'type',36,'product',[{'type',36,'any',[]}]}|[{'type',36,'list',[{'type',36,'union',[{'type',36,'char',[]}|[{'type',36,'list',[]}]]}]}]]}]}],
		%% Line 48
		'spec' =
		    %% Line 48
		    [{{'return_error',2},[{'type',48,'fun',[{'type',48,'product',[{'type',48,'integer',[]}|[{'type',48,'any',[]}]]}|[{'type',48,'no_return',[]}]]}]}]]
'symbol'/1 =
    %% Line 67
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 68
	    apply 'line_of'/1
		(_cor0)
	in  let <_cor1> =
		%% Line 68
		apply 'value_of'/1
		    (_cor0)
	    in  %% Line 68
		{'symbol',_cor2,_cor1}
'value_of'/1 =
    %% Line 70
    fun (_cor0) ->
	%% Line 71
	call 'erlang':'element'
	    (3, _cor0)
'line_of'/1 =
    %% Line 73
    fun (_cor0) ->
	%% Line 74
	call 'erlang':'element'
	    (2, _cor0)
'parse'/1 =
    %% Line 26
    fun (_cor0) ->
	%% Line 27
	apply 'yeccpars0'/5
	    (_cor0, {'no_func','no_line'}, 0, [], [])
'parse_and_scan'/1 =
    %% Line 31
    fun (_cor0) ->
	case _cor0 of
	  <{F,A}> when 'true' ->
	      %% Line 32
	      apply 'yeccpars0'/5
		  ([], {{F,A},'no_line'}, 0, [], [])
	  %% Line 33
	  <{M,F,A}> when 'true' ->
	      %% Line 34
	      apply 'yeccpars0'/5
		  ([], {{{M,F},A},'no_line'}, 0, [], [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'parse_and_scan',1}}] )
	    -| ['compiler_generated'] )
	end
'format_error'/1 =
    %% Line 37
    fun (_cor0) ->
	%% Line 38
	case call 'io_lib':'deep_char_list'
		 (_cor0) of
	  %% Line 39
	  <'true'> when 'true' ->
	      _cor0
	  %% Line 41
	  <_cor3> when 'true' ->
	      %% Line 42
	      call 'io_lib':'write'
		  (_cor0)
	end
'return_error'/2 =
    %% Line 49
    fun (_cor1,_cor0) ->
	%% Line 50
	call 'erlang':'throw'
	    ({'error',{_cor1,'yeccparser',_cor0}})
'yeccpars0'/5 =
    %% Line 54
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 55
	try
	    apply 'yeccpars1'/5
		(_cor4, _cor3, _cor2, _cor1, _cor0)
	of <_cor5> ->
	    _cor5
	catch <_cor8,_cor7,_cor6> ->
	    case <_cor8,_cor7,_cor6> of
	      %% Line 57
	      <'error',Error,_cor20> when 'true' ->
		  let <Stacktrace> =
		      %% Line 58
		      call 'erlang':'get_stacktrace'
			  ()
		  in  %% Line 59
		      try
			  apply 'yecc_error_type'/2
			      (Error, Stacktrace)
		      of <_cor10> ->
			  %% Line 61
			  call 'erlang':'raise'
			      ('error', {'yecc_bug',[49|[46|[52]]],_cor10}, %% Line 62
									    Stacktrace)
		      catch <_cor14,_cor13,_cor12> ->
			  %% Line 63
			  call 'erlang':'raise'
			      ('error', Error, Stacktrace)
	      %% Line 66
	      <'throw',Error = {'error',{_X_Line,'yeccparser',_X_M}},_cor24> when 'true' ->
		  %% Line 67
		  Error
	      ( <_cor8,_cor7,_cor6> when 'true' ->
		    primop 'raise'
			(_cor6, _cor7)
		-| ['compiler_generated'] )
	    end
'yecc_error_type'/2 =
    %% Line 70
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'function_clause',[{'yeccparser',F,ArityOrArgs,_cor9}|_cor10]> when 'true' ->
	      %% Line 71
	      case call 'erlang':'atom_to_list'
		       (F) of
		%% Line 72
		<[121|[101|[99|[99|[103|[111|[116|[111|[95|SymbolL]]]]]]]]]> when 'true' ->
		    %% Line 73
		    case call 'erl_scan':'string'
			     (SymbolL) of
		      <{'ok',[{'atom',_cor11,Symbol}|[]],_cor12}> when 'true' ->
			  let <_cor4> =
			      %% Line 74
			      case ArityOrArgs of
				%% Line 75
				<[S|[_cor13|[_cor14|[_cor15|[_cor16|[_cor17|[_cor18|[]]]]]]]]> when 'true' ->
				    S
				%% Line 76
				<_cor19> when 'true' ->
				    'state_is_unknown'
			      end
			  in  %% Line 78
			      {Symbol,_cor4,'missing_in_goto_table'}
		      ( <_cor2> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor2})
			-| ['compiler_generated'] )
		    end
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor6})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'yecc_error_type',2}}] )
	    -| ['compiler_generated'] )
	end
'yeccpars1'/5 =
    %% Line 81
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[Token|Tokens],Tzr,State,States,Vstack> when 'true' ->
	      let <_cor5> =
		  %% Line 82
		  call 'erlang':'element'
		      (1, Token)
	      in  %% Line 82
		  apply 'yeccpars2'/7
		      (State, _cor5, States, Vstack, Token, Tokens, Tzr)
	  %% Line 83
	  <[],{{F,A},_X_Line},State,States,Vstack> when 'true' ->
	      %% Line 84
	      case call 'erlang':'apply'
		       (F, A) of
		%% Line 85
		<{'ok',Tokens,Endline}> when 'true' ->
		    %% Line 86
		    apply 'yeccpars1'/5
			(Tokens, {{F,A},Endline}, State, States, Vstack)
		%% Line 87
		<{'eof',Endline}> when 'true' ->
		    %% Line 88
		    apply 'yeccpars1'/5
			([], {'no_func',Endline}, State, States, Vstack)
		%% Line 89
		<{'error',Descriptor,_X_Endline}> when 'true' ->
		    %% Line 90
		    {'error',Descriptor}
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor6})
		  -| ['compiler_generated'] )
	      end
	  %% Line 92
	  <[],{'no_func','no_line'},State,States,Vstack> when 'true' ->
	      let <_cor8> =
		  %% Line 94
		  apply 'yecc_end'/1
		      (999999)
	      in  %% Line 94
		  apply 'yeccpars2'/7
		      (State, '$end', States, Vstack, _cor8, [], %% Line 95
								 {'no_func',999999})
	  %% Line 96
	  <[],{'no_func',Endline},State,States,Vstack> when 'true' ->
	      let <_cor9> =
		  %% Line 97
		  apply 'yecc_end'/1
		      (Endline)
	      in  %% Line 97
		  apply 'yeccpars2'/7
		      (State, '$end', States, Vstack, _cor9, [], %% Line 98
								 {'no_func',Endline})
	  ( <_cor14,_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11,_cor10})
		  -| [{'function_name',{'yeccpars1',5}}] )
	    -| ['compiler_generated'] )
	end
'yeccpars1'/7 =
    %% Line 106
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <State1,State,States,Vstack,Token0,[Token|Tokens],Tzr> when 'true' ->
	      let <_cor7> =
		  %% Line 107
		  call 'erlang':'element'
		      (1, Token)
	      in  %% Line 107
		  apply 'yeccpars2'/7
		      (State, _cor7, [State1|States], %% Line 108
						      [Token0|Vstack], %% Line 108
								       Token, %% Line 108
									      Tokens, %% Line 108
										      Tzr)
	  %% Line 109
	  <State1,State,States,Vstack,Token0,[],Tzr = {{_X_F,_X_A},_X_Line}> when 'true' ->
	      %% Line 110
	      apply 'yeccpars1'/5
		  ([], Tzr, State, [State1|States], [Token0|Vstack])
	  %% Line 111
	  <State1,State,States,Vstack,Token0,[],{'no_func','no_line'}> when 'true' ->
	      let <Line> =
		  %% Line 112
		  apply 'yecctoken_end_location'/1
		      (Token0)
	      in  let <_cor9> =
		      %% Line 114
		      apply 'yecc_end'/1
			  (Line)
		  in  %% Line 113
		      apply 'yeccpars2'/7
			  (State, '$end', [State1|States], [Token0|Vstack], _cor9, %% Line 114
										   [], %% Line 114
										       {'no_func',Line})
	  %% Line 115
	  <State1,State,States,Vstack,Token0,[],{'no_func',Line}> when 'true' ->
	      let <_cor10> =
		  %% Line 117
		  apply 'yecc_end'/1
		      (Line)
	      in  %% Line 116
		  apply 'yeccpars2'/7
		      (State, '$end', [State1|States], [Token0|Vstack], _cor10, %% Line 117
										[], %% Line 117
										    {'no_func',Line})
	  ( <_cor17,_cor16,_cor15,_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15,_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'yeccpars1',7}}] )
	    -| ['compiler_generated'] )
	end
'yecc_end'/1 =
    %% Line 120
    fun (_cor0) ->
	case _cor0 of
	  <{Line,_X_Column}> when 'true' ->
	      %% Line 121
	      {'$end',Line}
	  %% Line 122
	  <Line> when 'true' ->
	      %% Line 123
	      {'$end',Line}
	end
'yecctoken_end_location'/1 =
    %% Line 125
    fun (_cor0) ->
	%% Line 126
	try
	    %% Line 127
	    case call 'erl_scan':'token_info'
		     (_cor0, 'text') of
	      <{'text',Str}> when 'true' ->
		  %% Line 128
		  case call 'erl_scan':'token_info'
			   (_cor0, 'line') of
		    <{'line',Line}> when 'true' ->
			let <Parts> =
			    %% Line 129
			    call 're':'split'
				(Str, [10])
			in  let <_cor4> =
				%% Line 130
				call 'erlang':'length'
				    (Parts)
			    in  let <Dline> =
				    %% Line 130
				    call 'erlang':'-'
					(_cor4, 1)
				in  let <Yline> =
					%% Line 131
					call 'erlang':'+'
					    (Line, Dline)
				    in  %% Line 132
					case call 'erl_scan':'token_info'
						 (_cor0, 'column') of
					  %% Line 133
					  <{'column',Column}> when 'true' ->
					      let <_cor7> =
						  %% Line 134
						  call 'lists':'last'
						      (Parts)
					      in  let <Col> =
						      %% Line 134
						      call 'erlang':'byte_size'
							  (_cor7)
						  in  let <_cor9> =
							  %% Line 135
							  case <> of
							    <>
								when call 'erlang':'=:='
								      (Dline,
								       0) ->
								Column
							    <> when 'true' ->
								1
							  end
						      in  let <_cor10> =
							      %% Line 135
							      call 'erlang':'+'
								  (Col, _cor9)
							  in  %% Line 135
							      {Yline,_cor10}
					  %% Line 136
					  <'undefined'> when 'true' ->
					      %% Line 137
					      Yline
					  ( <_cor11> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_cor11})
					    -| ['compiler_generated'] )
					end
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor2})
		      -| ['compiler_generated'] )
		  end
	      ( <_cor1> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor1})
		-| ['compiler_generated'] )
	    end
	of <_cor12> ->
	    _cor12
	catch <_cor15,_cor14,_cor13> ->
	    %% Line 140
	    apply 'yecctoken_location'/1
		(_cor0)
'yeccerror'/1 =
    %% Line 143
    fun (_cor0) ->
	let <Text> =
	    %% Line 144
	    apply 'yecctoken_to_string'/1
		(_cor0)
	in  let <Location> =
		%% Line 145
		apply 'yecctoken_location'/1
		    (_cor0)
	    in  %% Line 146
		{'error',{Location,'yeccparser',[[115|[121|[110|[116|[97|[120|[32|[101|[114|[114|[111|[114|[32|[98|[101|[102|[111|[114|[101|[58|[32]]]]]]]]]]]]]]]]]]]]]|[Text|[]]]}}
'yecctoken_to_string'/1 =
    %% Line 148
    fun (_cor0) ->
	let <_cor1> =
	    catch
		%% Line 149
		call 'erl_scan':'token_info'
		    (_cor0, 'text')
	in  %% Line 149
	    case _cor1 of
	      %% Line 150
	      <{'text',Txt}> when 'true' ->
		  Txt
	      %% Line 151
	      <_cor4> when 'true' ->
		  apply 'yecctoken2string'/1
		      (_cor0)
	    end
'yecctoken_location'/1 =
    %% Line 154
    fun (_cor0) ->
	let <_cor1> =
	    catch
		%% Line 155
		call 'erl_scan':'token_info'
		    (_cor0, 'location')
	in  %% Line 155
	    case _cor1 of
	      %% Line 156
	      <{'location',Loc}> when 'true' ->
		  Loc
	      %% Line 157
	      <_cor4> when 'true' ->
		  call 'erlang':'element'
		      (2, _cor0)
	    end
'yecctoken2string'/1 =
    %% Line 160
    fun (_cor0) ->
	case _cor0 of
	  <{'atom',_cor2,A}> when 'true' ->
	      call 'io_lib':'write'
		  (A)
	  %% Line 161
	  <{'integer',_cor3,N}> when 'true' ->
	      call 'io_lib':'write'
		  (N)
	  %% Line 162
	  <{'float',_cor4,F}> when 'true' ->
	      call 'io_lib':'write'
		  (F)
	  %% Line 163
	  <{'char',_cor5,C}> when 'true' ->
	      call 'io_lib':'write_char'
		  (C)
	  %% Line 164
	  <{'var',_cor6,V}> when 'true' ->
	      call 'io_lib':'format'
		  ([126|[115]], [V|[]])
	  %% Line 165
	  <{'string',_cor7,S}> when 'true' ->
	      call 'io_lib':'write_string'
		  (S)
	  %% Line 166
	  <{'reserved_symbol',_cor8,A}> when 'true' ->
	      call 'io_lib':'write'
		  (A)
	  %% Line 167
	  <{_X_Cat,_cor9,Val}> when 'true' ->
	      call 'io_lib':'write'
		  (Val)
	  %% Line 168
	  <{'dot',_cor10}> when 'true' ->
	      [39|[46|[39]]]
	  %% Line 169
	  <{'$end',_cor11}> when 'true' ->
	      %% Line 170
	      []
	  %% Line 171
	  <{Other,_cor12}>
	      when call 'erlang':'is_atom'
		    (Other) ->
	      %% Line 172
	      call 'io_lib':'write'
		  (Other)
	  %% Line 173
	  <Other> when 'true' ->
	      %% Line 174
	      call 'io_lib':'write'
		  (Other)
	end
'yeccpars2'/7 =
    %% Line 198
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S = 0,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 199
	      apply 'yeccpars2_0'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 210
	  <S = 6,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 211
	      apply 'yeccpars2_6'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 212
	  <S = 7,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 213
	      apply 'yeccpars2_7'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 214
	  <S = 8,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 215
	      apply 'yeccpars2_8'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 216
	  <S = 9,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 217
	      apply 'yeccpars2_9'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 218
	  <S = 10,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 219
	      apply 'yeccpars2_0'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 228
	  <S = 15,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 229
	      apply 'yeccpars2_15'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 234
	  <S = 18,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 235
	      apply 'yeccpars2_18'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 236
	  <S = 19,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 237
	      apply 'yeccpars2_19'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 238
	  <S = 20,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 239
	      apply 'yeccpars2_20'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 240
	  <S = 21,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 241
	      apply 'yeccpars2_21'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 242
	  <S = 22,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 243
	      apply 'yeccpars2_22'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 244
	  <S = 23,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 245
	      apply 'yeccpars2_23'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 246
	  <S = 24,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 247
	      apply 'yeccpars2_24'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 248
	  <S = 25,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 249
	      apply 'yeccpars2_25'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 250
	  <S = 26,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 251
	      apply 'yeccpars2_26'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 252
	  <S = 27,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 253
	      apply 'yeccpars2_27'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 256
	  <S = 29,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 257
	      apply 'yeccpars2_29'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 262
	  <S = 32,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 263
	      apply 'yeccpars2_32'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 266
	  <S = 34,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 267
	      apply 'yeccpars2_34'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 268
	  <S = 35,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 269
	      apply 'yeccpars2_35'/7
		  (S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 270
	  <Other,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19> when 'true' ->
	      %% Line 271
	      call 'erlang':'error'
		  ({'yecc_bug',[49|[46|[51]]],{'missing_state_in_action_table',Other}})
	end
'yeccpars2_0'/7 =
    %% Line 273
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,'atom',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 274
	      apply 'yeccpars1'/7
		  (S, 6, Ss, Stack, T, Ts, Tzr)
	  %% Line 275
	  <S,'integer',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 276
	      apply 'yeccpars1'/7
		  (S, 7, Ss, Stack, T, Ts, Tzr)
	  %% Line 277
	  <S,'reserved_word',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 278
	      apply 'yeccpars1'/7
		  (S, 8, Ss, Stack, T, Ts, Tzr)
	  %% Line 279
	  <S,'var',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 280
	      apply 'yeccpars1'/7
		  (S, 9, Ss, Stack, T, Ts, Tzr)
	  %% Line 281
	  <_cor14,_cor15,_cor16,_cor17,T,_cor18,_cor19> when 'true' ->
	      %% Line 282
	      apply 'yeccerror'/1
		  (T)
	end
'yeccpars2_1'/7 =
    %% Line 284
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,'atom',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 285
	      apply 'yeccpars1'/7
		  (S, 6, Ss, Stack, T, Ts, Tzr)
	  %% Line 286
	  <S,'integer',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 287
	      apply 'yeccpars1'/7
		  (S, 7, Ss, Stack, T, Ts, Tzr)
	  %% Line 288
	  <S,'reserved_word',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 289
	      apply 'yeccpars1'/7
		  (S, 8, Ss, Stack, T, Ts, Tzr)
	  %% Line 290
	  <S,'string',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 291
	      apply 'yeccpars1'/7
		  (S, 32, Ss, Stack, T, Ts, Tzr)
	  %% Line 292
	  <S,'var',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 293
	      apply 'yeccpars1'/7
		  (S, 9, Ss, Stack, T, Ts, Tzr)
	  %% Line 294
	  <_X_S,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      let <_cor7> =
		  %% Line 295
		  call 'erlang':'hd'
		      (Ss)
	      in  %% Line 295
		  apply 'yeccgoto_head'/7
		      (_cor7, Cat, Ss, Stack, T, Ts, Tzr)
	end
'yeccpars2_2'/7 =
    %% Line 297
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 298
	    call 'erlang':'hd'
		(_cor4)
	in  %% Line 298
	    apply 'yeccgoto_grammar'/7
		(_cor7, _cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'yeccpars2_3'/7 =
    %% Line 300
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,'->',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 301
	      apply 'yeccpars1'/7
		  (S, 10, Ss, Stack, T, Ts, Tzr)
	  %% Line 302
	  <_cor14,_cor15,_cor16,_cor17,T,_cor18,_cor19> when 'true' ->
	      %% Line 303
	      apply 'yeccerror'/1
		  (T)
	end
'yeccpars2_4'/7 =
    %% Line 305
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_S,'$end',_X_Ss,Stack,_X_T,_X_Ts,_X_Tzr> when 'true' ->
	      let <_cor7> =
		  %% Line 306
		  call 'erlang':'hd'
		      (Stack)
	      in  %% Line 306
		  {'ok',_cor7}
	  %% Line 307
	  <_cor15,_cor16,_cor17,_cor18,T,_cor19,_cor20> when 'true' ->
	      %% Line 308
	      apply 'yeccerror'/1
		  (T)
	end
'yeccpars2_5'/7 =
    %% Line 310
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 311
	    call 'erlang':'hd'
		(_cor4)
	in  %% Line 311
	    apply 'yeccgoto_grammar'/7
		(_cor7, _cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'yeccpars2_6'/7 =
    %% Line 313
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	( case _cor3 of
	    ( <( [( _X__1
		    -| ['compiler_generated'] )|( _X__Stack
						  -| ['compiler_generated'] )]
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  ( let <_fol38> =
			( apply ( 'symbol'/1
				  -| ['compiler_generated'] )
			      (( _X__1
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    in  let <NewStack> =
			    ( [_fol38|( _X__Stack
					-| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor8> =
				%% Line 315
				call 'erlang':'hd'
				    (_cor4)
			    in  %% Line 315
				apply 'yeccgoto_symbol'/7
				    (_cor8, _cor5, _cor4, NewStack, _cor2, _cor1, _cor0)
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_fol39> when ( 'true'
			      -| ['compiler_generated'] ) ->
		  ( primop ( 'match_fail'
			     -| ['compiler_generated'] )
			(( {( 'badmatch'
			      -| ['compiler_generated'] ),_fol39}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'yeccpars2_7'/7 =
    %% Line 317
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	( case _cor3 of
	    ( <( [( _X__1
		    -| ['compiler_generated'] )|( _X__Stack
						  -| ['compiler_generated'] )]
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  ( let <_fol49> =
			( apply ( 'symbol'/1
				  -| ['compiler_generated'] )
			      (( _X__1
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    in  let <NewStack> =
			    ( [_fol49|( _X__Stack
					-| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor8> =
				%% Line 319
				call 'erlang':'hd'
				    (_cor4)
			    in  %% Line 319
				apply 'yeccgoto_symbol'/7
				    (_cor8, _cor5, _cor4, NewStack, _cor2, _cor1, _cor0)
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_fol50> when ( 'true'
			      -| ['compiler_generated'] ) ->
		  ( primop ( 'match_fail'
			     -| ['compiler_generated'] )
			(( {( 'badmatch'
			      -| ['compiler_generated'] ),_fol50}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'yeccpars2_8'/7 =
    %% Line 321
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	( case _cor3 of
	    ( <( [( _X__1
		    -| ['compiler_generated'] )|( _X__Stack
						  -| ['compiler_generated'] )]
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  ( let <_fol60> =
			( apply ( 'symbol'/1
				  -| ['compiler_generated'] )
			      (( _X__1
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    in  let <NewStack> =
			    ( [_fol60|( _X__Stack
					-| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor8> =
				%% Line 323
				call 'erlang':'hd'
				    (_cor4)
			    in  %% Line 323
				apply 'yeccgoto_symbol'/7
				    (_cor8, _cor5, _cor4, NewStack, _cor2, _cor1, _cor0)
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_fol61> when ( 'true'
			      -| ['compiler_generated'] ) ->
		  ( primop ( 'match_fail'
			     -| ['compiler_generated'] )
			(( {( 'badmatch'
			      -| ['compiler_generated'] ),_fol61}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'yeccpars2_9'/7 =
    %% Line 325
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	( case _cor3 of
	    ( <( [( _X__1
		    -| ['compiler_generated'] )|( _X__Stack
						  -| ['compiler_generated'] )]
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  ( let <_fol71> =
			( apply ( 'symbol'/1
				  -| ['compiler_generated'] )
			      (( _X__1
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    in  let <NewStack> =
			    ( [_fol71|( _X__Stack
					-| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor8> =
				%% Line 327
				call 'erlang':'hd'
				    (_cor4)
			    in  %% Line 327
				apply 'yeccgoto_symbol'/7
				    (_cor8, _cor5, _cor4, NewStack, _cor2, _cor1, _cor0)
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_fol72> when ( 'true'
			      -| ['compiler_generated'] ) ->
		  ( primop ( 'match_fail'
			     -| ['compiler_generated'] )
			(( {( 'badmatch'
			      -| ['compiler_generated'] ),_fol72}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'yeccpars2_11'/7 =
    %% Line 331
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,':',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 332
	      apply 'yeccpars1'/7
		  (S, 15, Ss, Stack, T, Ts, Tzr)
	  %% Line 333
	  <_X_S,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      let <NewStack> =
		  ( [( {'erlang_code',[{'atom',0,'$undefined'}]}
		       -| ['compiler_generated'] )|%% Line 334
						   Stack]
		    -| ['compiler_generated'] )
	      in  %% Line 335
		  apply 'yeccpars2_14'/7
		      (14, Cat, [11|Ss], NewStack, T, Ts, Tzr)
	end
'yeccpars2_12'/7 =
    %% Line 337
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,'atom',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 338
	      apply 'yeccpars1'/7
		  (S, 6, Ss, Stack, T, Ts, Tzr)
	  %% Line 339
	  <S,'integer',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 340
	      apply 'yeccpars1'/7
		  (S, 7, Ss, Stack, T, Ts, Tzr)
	  %% Line 341
	  <S,'reserved_word',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 342
	      apply 'yeccpars1'/7
		  (S, 8, Ss, Stack, T, Ts, Tzr)
	  %% Line 343
	  <S,'var',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 344
	      apply 'yeccpars1'/7
		  (S, 9, Ss, Stack, T, Ts, Tzr)
	  %% Line 345
	  <_X_S,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      ( case %% Line 346
		     Stack of
		  ( <( [( _X__1
			  -| ['compiler_generated'] )|( _X__Stack
							-| ['compiler_generated'] )]
		       -| ['compiler_generated'] )> when ( 'true'
							   -| ['compiler_generated'] ) ->
			let <NewStack> =
			    ( [( [( _X__1
				    -| ['compiler_generated'] )|( []
								  -| ['compiler_generated'] )]
				 -| ['compiler_generated'] )|( _X__Stack
							       -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor8> =
				%% Line 347
				call 'erlang':'hd'
				    (Ss)
			    in  %% Line 347
				apply 'yeccgoto_symbols'/7
				    (_cor8, Cat, Ss, NewStack, T, Ts, Tzr)
		    -| ['compiler_generated'] )
		  ( <_fol84> when ( 'true'
				    -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'badmatch'
				    -| ['compiler_generated'] ),_fol84}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'yeccpars2_13'/7 =
    %% Line 349
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 350
	case _cor4 of
	  <[_cor17|Nss]> when 'true' ->
	      ( case _cor3 of
		  ( <( [( _X__2
			  -| ['compiler_generated'] )|( [( _X__1
							   -| ['compiler_generated'] )|( _X__Stack
											 -| ['compiler_generated'] )]
							-| ['compiler_generated'] )]
		       -| ['compiler_generated'] )> when ( 'true'
							   -| ['compiler_generated'] ) ->
			let <NewStack> =
			    ( [( [( _X__1
				    -| ['compiler_generated'] )|( _X__2
								  -| ['compiler_generated'] )]
				 -| ['compiler_generated'] )|( _X__Stack
							       -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor9> =
				%% Line 352
				call 'erlang':'hd'
				    (Nss)
			    in  %% Line 352
				apply 'yeccgoto_symbols'/7
				    (_cor9, _cor5, Nss, NewStack, _cor2, _cor1, _cor0)
		    -| ['compiler_generated'] )
		  ( <_fol87> when ( 'true'
				    -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'badmatch'
				    -| ['compiler_generated'] ),_fol87}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor7> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor7})
	    -| ['compiler_generated'] )
	end
'yeccpars2_14'/7 =
    %% Line 354
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,'dot',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 355
	      apply 'yeccpars1'/7
		  (S, 29, Ss, Stack, T, Ts, Tzr)
	  %% Line 356
	  <_cor14,_cor15,_cor16,_cor17,T,_cor18,_cor19> when 'true' ->
	      %% Line 357
	      apply 'yeccerror'/1
		  (T)
	end
'yeccpars2_15'/7 =
    %% Line 359
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,'->',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 360
	      apply 'yeccpars1'/7
		  (S, 18, Ss, Stack, T, Ts, Tzr)
	  %% Line 361
	  <S,':',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 362
	      apply 'yeccpars1'/7
		  (S, 19, Ss, Stack, T, Ts, Tzr)
	  %% Line 363
	  <S,'atom',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 364
	      apply 'yeccpars1'/7
		  (S, 20, Ss, Stack, T, Ts, Tzr)
	  %% Line 365
	  <S,'char',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 366
	      apply 'yeccpars1'/7
		  (S, 21, Ss, Stack, T, Ts, Tzr)
	  %% Line 367
	  <S,'float',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 368
	      apply 'yeccpars1'/7
		  (S, 22, Ss, Stack, T, Ts, Tzr)
	  %% Line 369
	  <S,'integer',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 370
	      apply 'yeccpars1'/7
		  (S, 23, Ss, Stack, T, Ts, Tzr)
	  %% Line 371
	  <S,'reserved_symbol',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 372
	      apply 'yeccpars1'/7
		  (S, 24, Ss, Stack, T, Ts, Tzr)
	  %% Line 373
	  <S,'reserved_word',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 374
	      apply 'yeccpars1'/7
		  (S, 25, Ss, Stack, T, Ts, Tzr)
	  %% Line 375
	  <S,'string',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 376
	      apply 'yeccpars1'/7
		  (S, 26, Ss, Stack, T, Ts, Tzr)
	  %% Line 377
	  <S,'var',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 378
	      apply 'yeccpars1'/7
		  (S, 27, Ss, Stack, T, Ts, Tzr)
	  %% Line 379
	  <_cor14,_cor15,_cor16,_cor17,T,_cor18,_cor19> when 'true' ->
	      %% Line 380
	      apply 'yeccerror'/1
		  (T)
	end
'yeccpars2_16'/7 =
    %% Line 382
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 383
	case _cor4 of
	  <[_cor17|Nss]> when 'true' ->
	      ( case _cor3 of
		  ( <( [( _X__2
			  -| ['compiler_generated'] )|( [( _X__1
							   -| ['compiler_generated'] )|( _X__Stack
											 -| ['compiler_generated'] )]
							-| ['compiler_generated'] )]
		       -| ['compiler_generated'] )> when ( 'true'
							   -| ['compiler_generated'] ) ->
			let <NewStack> =
			    ( [( {( 'erlang_code'
				    -| ['compiler_generated'] ),( _X__2
								  -| ['compiler_generated'] )}
				 -| ['compiler_generated'] )|( _X__Stack
							       -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor9> =
				%% Line 385
				call 'erlang':'hd'
				    (Nss)
			    in  %% Line 385
				apply 'yeccgoto_attached_code'/7
				    (_cor9, _cor5, Nss, NewStack, _cor2, _cor1, _cor0)
		    -| ['compiler_generated'] )
		  ( <_fol97> when ( 'true'
				    -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'badmatch'
				    -| ['compiler_generated'] ),_fol97}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor7> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor7})
	    -| ['compiler_generated'] )
	end
'yeccpars2_17'/7 =
    %% Line 387
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,'->',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 388
	      apply 'yeccpars1'/7
		  (S, 18, Ss, Stack, T, Ts, Tzr)
	  %% Line 389
	  <S,':',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 390
	      apply 'yeccpars1'/7
		  (S, 19, Ss, Stack, T, Ts, Tzr)
	  %% Line 391
	  <S,'atom',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 392
	      apply 'yeccpars1'/7
		  (S, 20, Ss, Stack, T, Ts, Tzr)
	  %% Line 393
	  <S,'char',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 394
	      apply 'yeccpars1'/7
		  (S, 21, Ss, Stack, T, Ts, Tzr)
	  %% Line 395
	  <S,'float',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 396
	      apply 'yeccpars1'/7
		  (S, 22, Ss, Stack, T, Ts, Tzr)
	  %% Line 397
	  <S,'integer',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 398
	      apply 'yeccpars1'/7
		  (S, 23, Ss, Stack, T, Ts, Tzr)
	  %% Line 399
	  <S,'reserved_symbol',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 400
	      apply 'yeccpars1'/7
		  (S, 24, Ss, Stack, T, Ts, Tzr)
	  %% Line 401
	  <S,'reserved_word',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 402
	      apply 'yeccpars1'/7
		  (S, 25, Ss, Stack, T, Ts, Tzr)
	  %% Line 403
	  <S,'string',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 404
	      apply 'yeccpars1'/7
		  (S, 26, Ss, Stack, T, Ts, Tzr)
	  %% Line 405
	  <S,'var',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 406
	      apply 'yeccpars1'/7
		  (S, 27, Ss, Stack, T, Ts, Tzr)
	  %% Line 407
	  <_X_S,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      ( case %% Line 408
		     Stack of
		  ( <( [( _X__1
			  -| ['compiler_generated'] )|( _X__Stack
							-| ['compiler_generated'] )]
		       -| ['compiler_generated'] )> when ( 'true'
							   -| ['compiler_generated'] ) ->
			let <NewStack> =
			    ( [( [( _X__1
				    -| ['compiler_generated'] )|( []
								  -| ['compiler_generated'] )]
				 -| ['compiler_generated'] )|( _X__Stack
							       -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor8> =
				%% Line 409
				call 'erlang':'hd'
				    (Ss)
			    in  %% Line 409
				apply 'yeccgoto_tokens'/7
				    (_cor8, Cat, Ss, NewStack, T, Ts, Tzr)
		    -| ['compiler_generated'] )
		  ( <_fol107> when ( 'true'
				     -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'badmatch'
				    -| ['compiler_generated'] ),_fol107}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'yeccpars2_18'/7 =
    %% Line 411
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	( case _cor3 of
	    ( <( [( _X__1
		    -| ['compiler_generated'] )|( _X__Stack
						  -| ['compiler_generated'] )]
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  ( let <_fol110> =
			( apply ( 'line_of'/1
				  -| ['compiler_generated'] )
			      (( _X__1
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    in  let <NewStack> =
			    ( [( {( '->'
				    -| ['compiler_generated'] ),_fol110}
				 -| ['compiler_generated'] )|( _X__Stack
							       -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor8> =
				%% Line 413
				call 'erlang':'hd'
				    (_cor4)
			    in  %% Line 413
				apply 'yeccgoto_token'/7
				    (_cor8, _cor5, _cor4, NewStack, _cor2, _cor1, _cor0)
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_fol111> when ( 'true'
			       -| ['compiler_generated'] ) ->
		  ( primop ( 'match_fail'
			     -| ['compiler_generated'] )
			(( {( 'badmatch'
			      -| ['compiler_generated'] ),_fol111}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'yeccpars2_19'/7 =
    %% Line 415
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	( case _cor3 of
	    ( <( [( _X__1
		    -| ['compiler_generated'] )|( _X__Stack
						  -| ['compiler_generated'] )]
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  ( let <_fol121> =
			( apply ( 'line_of'/1
				  -| ['compiler_generated'] )
			      (( _X__1
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    in  let <NewStack> =
			    ( [( {( ':'
				    -| ['compiler_generated'] ),_fol121}
				 -| ['compiler_generated'] )|( _X__Stack
							       -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor8> =
				%% Line 417
				call 'erlang':'hd'
				    (_cor4)
			    in  %% Line 417
				apply 'yeccgoto_token'/7
				    (_cor8, _cor5, _cor4, NewStack, _cor2, _cor1, _cor0)
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_fol122> when ( 'true'
			       -| ['compiler_generated'] ) ->
		  ( primop ( 'match_fail'
			     -| ['compiler_generated'] )
			(( {( 'badmatch'
			      -| ['compiler_generated'] ),_fol122}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'yeccpars2_20'/7 =
    %% Line 419
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 420
	    call 'erlang':'hd'
		(_cor4)
	in  %% Line 420
	    apply 'yeccgoto_token'/7
		(_cor7, _cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'yeccpars2_21'/7 =
    %% Line 422
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 423
	    call 'erlang':'hd'
		(_cor4)
	in  %% Line 423
	    apply 'yeccgoto_token'/7
		(_cor7, _cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'yeccpars2_22'/7 =
    %% Line 425
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 426
	    call 'erlang':'hd'
		(_cor4)
	in  %% Line 426
	    apply 'yeccgoto_token'/7
		(_cor7, _cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'yeccpars2_23'/7 =
    %% Line 428
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 429
	    call 'erlang':'hd'
		(_cor4)
	in  %% Line 429
	    apply 'yeccgoto_token'/7
		(_cor7, _cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'yeccpars2_24'/7 =
    %% Line 431
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	( case _cor3 of
	    ( <( [( _X__1
		    -| ['compiler_generated'] )|( _X__Stack
						  -| ['compiler_generated'] )]
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  ( let <_fol160> =
			( apply ( 'value_of'/1
				  -| ['compiler_generated'] )
			      (( _X__1
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    in  ( let <_fol161> =
			      ( apply ( 'line_of'/1
					-| ['compiler_generated'] )
				    (( _X__1
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  in  let <NewStack> =
				  ( [( {_fol160,_fol161}
				       -| ['compiler_generated'] )|( _X__Stack
								     -| ['compiler_generated'] )]
				    -| ['compiler_generated'] )
			      in  let <_cor8> =
				      %% Line 433
				      call 'erlang':'hd'
					  (_cor4)
				  in  %% Line 433
				      apply 'yeccgoto_token'/7
					  (_cor8, _cor5, _cor4, NewStack, _cor2, _cor1, _cor0)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_fol162> when ( 'true'
			       -| ['compiler_generated'] ) ->
		  ( primop ( 'match_fail'
			     -| ['compiler_generated'] )
			(( {( 'badmatch'
			      -| ['compiler_generated'] ),_fol162}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'yeccpars2_25'/7 =
    %% Line 435
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	( case _cor3 of
	    ( <( [( _X__1
		    -| ['compiler_generated'] )|( _X__Stack
						  -| ['compiler_generated'] )]
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  ( let <_fol172> =
			( apply ( 'value_of'/1
				  -| ['compiler_generated'] )
			      (( _X__1
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    in  ( let <_fol173> =
			      ( apply ( 'line_of'/1
					-| ['compiler_generated'] )
				    (( _X__1
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  in  let <NewStack> =
				  ( [( {_fol172,_fol173}
				       -| ['compiler_generated'] )|( _X__Stack
								     -| ['compiler_generated'] )]
				    -| ['compiler_generated'] )
			      in  let <_cor8> =
				      %% Line 437
				      call 'erlang':'hd'
					  (_cor4)
				  in  %% Line 437
				      apply 'yeccgoto_token'/7
					  (_cor8, _cor5, _cor4, NewStack, _cor2, _cor1, _cor0)
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_fol174> when ( 'true'
			       -| ['compiler_generated'] ) ->
		  ( primop ( 'match_fail'
			     -| ['compiler_generated'] )
			(( {( 'badmatch'
			      -| ['compiler_generated'] ),_fol174}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'yeccpars2_26'/7 =
    %% Line 439
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 440
	    call 'erlang':'hd'
		(_cor4)
	in  %% Line 440
	    apply 'yeccgoto_token'/7
		(_cor7, _cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'yeccpars2_27'/7 =
    %% Line 442
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 443
	    call 'erlang':'hd'
		(_cor4)
	in  %% Line 443
	    apply 'yeccgoto_token'/7
		(_cor7, _cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'yeccpars2_28'/7 =
    %% Line 445
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 446
	case _cor4 of
	  <[_cor17|Nss]> when 'true' ->
	      ( case _cor3 of
		  ( <( [( _X__2
			  -| ['compiler_generated'] )|( [( _X__1
							   -| ['compiler_generated'] )|( _X__Stack
											 -| ['compiler_generated'] )]
							-| ['compiler_generated'] )]
		       -| ['compiler_generated'] )> when ( 'true'
							   -| ['compiler_generated'] ) ->
			let <NewStack> =
			    ( [( [( _X__1
				    -| ['compiler_generated'] )|( _X__2
								  -| ['compiler_generated'] )]
				 -| ['compiler_generated'] )|( _X__Stack
							       -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor9> =
				%% Line 448
				call 'erlang':'hd'
				    (Nss)
			    in  %% Line 448
				apply 'yeccgoto_tokens'/7
				    (_cor9, _cor5, Nss, NewStack, _cor2, _cor1, _cor0)
		    -| ['compiler_generated'] )
		  ( <_fol198> when ( 'true'
				     -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'badmatch'
				    -| ['compiler_generated'] ),_fol198}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor7> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor7})
	    -| ['compiler_generated'] )
	end
'yeccpars2_29'/7 =
    %% Line 450
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 451
	case _cor4 of
	  <[_cor17|[_cor18|[_cor19|[_cor20|Nss]]]]> when 'true' ->
	      ( case _cor3 of
		  ( <( [( _X__5
			  -| ['compiler_generated'] )|( [( _X__4
							   -| ['compiler_generated'] )|( [( _X__3
											    -| ['compiler_generated'] )|( [( _X__2
															     -| ['compiler_generated'] )|( [( _X__1
																			      -| ['compiler_generated'] )|( _X__Stack
																							    -| ['compiler_generated'] )]
																			   -| ['compiler_generated'] )]
															  -| ['compiler_generated'] )]
											 -| ['compiler_generated'] )]
							-| ['compiler_generated'] )]
		       -| ['compiler_generated'] )> when ( 'true'
							   -| ['compiler_generated'] ) ->
			let <NewStack> =
			    ( [( {( 'rule'
				    -| ['compiler_generated'] ),( [( _X__1
								     -| ['compiler_generated'] )|( _X__3
												   -| ['compiler_generated'] )]
								  -| ['compiler_generated'] ),( _X__4
												-| ['compiler_generated'] )}
				 -| ['compiler_generated'] )|( _X__Stack
							       -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor9> =
				%% Line 453
				call 'erlang':'hd'
				    (Nss)
			    in  %% Line 453
				apply 'yeccgoto_rule'/7
				    (_cor9, _cor5, Nss, NewStack, _cor2, _cor1, _cor0)
		    -| ['compiler_generated'] )
		  ( <_fol208> when ( 'true'
				     -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'badmatch'
				    -| ['compiler_generated'] ),_fol208}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor7> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor7})
	    -| ['compiler_generated'] )
	end
'yeccpars2_30'/7 =
    %% Line 455
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,'dot',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 456
	      apply 'yeccpars1'/7
		  (S, 35, Ss, Stack, T, Ts, Tzr)
	  %% Line 457
	  <_cor14,_cor15,_cor16,_cor17,T,_cor18,_cor19> when 'true' ->
	      %% Line 458
	      apply 'yeccerror'/1
		  (T)
	end
'yeccpars2_31'/7 =
    %% Line 460
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,'dot',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 461
	      apply 'yeccpars1'/7
		  (S, 34, Ss, Stack, T, Ts, Tzr)
	  %% Line 462
	  <_cor14,_cor15,_cor16,_cor17,T,_cor18,_cor19> when 'true' ->
	      %% Line 463
	      apply 'yeccerror'/1
		  (T)
	end
'yeccpars2_32'/7 =
    %% Line 465
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,'string',Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 466
	      apply 'yeccpars1'/7
		  (S, 32, Ss, Stack, T, Ts, Tzr)
	  %% Line 467
	  <_X_S,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      ( case %% Line 468
		     Stack of
		  ( <( [( _X__1
			  -| ['compiler_generated'] )|( _X__Stack
							-| ['compiler_generated'] )]
		       -| ['compiler_generated'] )> when ( 'true'
							   -| ['compiler_generated'] ) ->
			let <NewStack> =
			    ( [( [( _X__1
				    -| ['compiler_generated'] )|( []
								  -| ['compiler_generated'] )]
				 -| ['compiler_generated'] )|( _X__Stack
							       -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor8> =
				%% Line 469
				call 'erlang':'hd'
				    (Ss)
			    in  %% Line 469
				apply 'yeccgoto_strings'/7
				    (_cor8, Cat, Ss, NewStack, T, Ts, Tzr)
		    -| ['compiler_generated'] )
		  ( <_fol218> when ( 'true'
				     -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'badmatch'
				    -| ['compiler_generated'] ),_fol218}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'yeccpars2_33'/7 =
    %% Line 471
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 472
	case _cor4 of
	  <[_cor17|Nss]> when 'true' ->
	      ( case _cor3 of
		  ( <( [( _X__2
			  -| ['compiler_generated'] )|( [( _X__1
							   -| ['compiler_generated'] )|( _X__Stack
											 -| ['compiler_generated'] )]
							-| ['compiler_generated'] )]
		       -| ['compiler_generated'] )> when ( 'true'
							   -| ['compiler_generated'] ) ->
			let <NewStack> =
			    ( [( [( _X__1
				    -| ['compiler_generated'] )|( _X__2
								  -| ['compiler_generated'] )]
				 -| ['compiler_generated'] )|( _X__Stack
							       -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor9> =
				%% Line 474
				call 'erlang':'hd'
				    (Nss)
			    in  %% Line 474
				apply 'yeccgoto_strings'/7
				    (_cor9, _cor5, Nss, NewStack, _cor2, _cor1, _cor0)
		    -| ['compiler_generated'] )
		  ( <_fol221> when ( 'true'
				     -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'badmatch'
				    -| ['compiler_generated'] ),_fol221}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor7> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor7})
	    -| ['compiler_generated'] )
	end
'yeccpars2_34'/7 =
    %% Line 476
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 477
	case _cor4 of
	  <[_cor17|[_cor18|Nss]]> when 'true' ->
	      ( case _cor3 of
		  ( <( [( _X__3
			  -| ['compiler_generated'] )|( [( _X__2
							   -| ['compiler_generated'] )|( [( _X__1
											    -| ['compiler_generated'] )|( _X__Stack
															  -| ['compiler_generated'] )]
											 -| ['compiler_generated'] )]
							-| ['compiler_generated'] )]
		       -| ['compiler_generated'] )> when ( 'true'
							   -| ['compiler_generated'] ) ->
			let <NewStack> =
			    ( [( {( _X__1
				    -| ['compiler_generated'] ),( _X__2
								  -| ['compiler_generated'] )}
				 -| ['compiler_generated'] )|( _X__Stack
							       -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor9> =
				%% Line 479
				call 'erlang':'hd'
				    (Nss)
			    in  %% Line 479
				apply 'yeccgoto_declaration'/7
				    (_cor9, _cor5, Nss, NewStack, _cor2, _cor1, _cor0)
		    -| ['compiler_generated'] )
		  ( <_fol231> when ( 'true'
				     -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'badmatch'
				    -| ['compiler_generated'] ),_fol231}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor7> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor7})
	    -| ['compiler_generated'] )
	end
'yeccpars2_35'/7 =
    %% Line 481
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 482
	case _cor4 of
	  <[_cor17|[_cor18|Nss]]> when 'true' ->
	      ( case _cor3 of
		  ( <( [( _X__3
			  -| ['compiler_generated'] )|( [( _X__2
							   -| ['compiler_generated'] )|( [( _X__1
											    -| ['compiler_generated'] )|( _X__Stack
															  -| ['compiler_generated'] )]
											 -| ['compiler_generated'] )]
							-| ['compiler_generated'] )]
		       -| ['compiler_generated'] )> when ( 'true'
							   -| ['compiler_generated'] ) ->
			let <NewStack> =
			    ( [( {( _X__1
				    -| ['compiler_generated'] ),( _X__2
								  -| ['compiler_generated'] )}
				 -| ['compiler_generated'] )|( _X__Stack
							       -| ['compiler_generated'] )]
			      -| ['compiler_generated'] )
			in  let <_cor9> =
				%% Line 484
				call 'erlang':'hd'
				    (Nss)
			    in  %% Line 484
				apply 'yeccgoto_declaration'/7
				    (_cor9, _cor5, Nss, NewStack, _cor2, _cor1, _cor0)
		    -| ['compiler_generated'] )
		  ( <_fol241> when ( 'true'
				     -| ['compiler_generated'] ) ->
			( primop ( 'match_fail'
				   -| ['compiler_generated'] )
			      (( {( 'badmatch'
				    -| ['compiler_generated'] ),_fol241}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor7> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor7})
	    -| ['compiler_generated'] )
	end
'yeccgoto_attached_code'/7 =
    %% Line 486
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <11,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 487
	      apply 'yeccpars2_14'/7
		  (14, Cat, Ss, Stack, T, Ts, Tzr)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'yeccgoto_attached_code',7}}] )
	    -| ['compiler_generated'] )
	end
'yeccgoto_declaration'/7 =
    %% Line 489
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_S = 0,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 490
	      apply 'yeccpars2_5'/7
		  (_X_S, Cat, Ss, Stack, T, Ts, Tzr)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'yeccgoto_declaration',7}}] )
	    -| ['compiler_generated'] )
	end
'yeccgoto_grammar'/7 =
    %% Line 492
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <0,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 493
	      apply 'yeccpars2_4'/7
		  (4, Cat, Ss, Stack, T, Ts, Tzr)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'yeccgoto_grammar',7}}] )
	    -| ['compiler_generated'] )
	end
'yeccgoto_head'/7 =
    %% Line 495
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <0,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 496
	      apply 'yeccpars2_3'/7
		  (3, Cat, Ss, Stack, T, Ts, Tzr)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'yeccgoto_head',7}}] )
	    -| ['compiler_generated'] )
	end
'yeccgoto_rule'/7 =
    %% Line 498
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_S = 0,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 499
	      apply 'yeccpars2_2'/7
		  (_X_S, Cat, Ss, Stack, T, Ts, Tzr)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'yeccgoto_rule',7}}] )
	    -| ['compiler_generated'] )
	end
'yeccgoto_strings'/7 =
    %% Line 501
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <1,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 502
	      apply 'yeccpars2_31'/7
		  (31, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 503
	  <_X_S = 32,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 504
	      apply 'yeccpars2_33'/7
		  (_X_S, Cat, Ss, Stack, T, Ts, Tzr)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'yeccgoto_strings',7}}] )
	    -| ['compiler_generated'] )
	end
'yeccgoto_symbol'/7 =
    %% Line 506
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <0,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 507
	      apply 'yeccpars2_1'/7
		  (1, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 508
	  <1,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 509
	      apply 'yeccpars2_12'/7
		  (12, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 510
	  <10,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 511
	      apply 'yeccpars2_12'/7
		  (12, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 512
	  <12,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 513
	      apply 'yeccpars2_12'/7
		  (12, Cat, Ss, Stack, T, Ts, Tzr)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'yeccgoto_symbol',7}}] )
	    -| ['compiler_generated'] )
	end
'yeccgoto_symbols'/7 =
    %% Line 515
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <1,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 516
	      apply 'yeccpars2_30'/7
		  (30, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 517
	  <10,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 518
	      apply 'yeccpars2_11'/7
		  (11, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 519
	  <_X_S = 12,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 520
	      apply 'yeccpars2_13'/7
		  (_X_S, Cat, Ss, Stack, T, Ts, Tzr)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'yeccgoto_symbols',7}}] )
	    -| ['compiler_generated'] )
	end
'yeccgoto_token'/7 =
    %% Line 522
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <15,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 523
	      apply 'yeccpars2_17'/7
		  (17, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 524
	  <17,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 525
	      apply 'yeccpars2_17'/7
		  (17, Cat, Ss, Stack, T, Ts, Tzr)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'yeccgoto_token',7}}] )
	    -| ['compiler_generated'] )
	end
'yeccgoto_tokens'/7 =
    %% Line 527
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_S = 15,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 528
	      apply 'yeccpars2_16'/7
		  (_X_S, Cat, Ss, Stack, T, Ts, Tzr)
	  %% Line 529
	  <_X_S = 17,Cat,Ss,Stack,T,Ts,Tzr> when 'true' ->
	      %% Line 530
	      apply 'yeccpars2_28'/7
		  (_X_S, Cat, Ss, Stack, T, Ts, Tzr)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'yeccgoto_tokens',7}}] )
	    -| ['compiler_generated'] )
	end
'yeccpars2_6_'/1 =
    %% Line 45
    fun (_cor0) ->
	%% Line 46
	case _cor0 of
	  <[_X__1|_X__Stack]> when 'true' ->
	      let <_cor2> =
		  %% Line 48
		  apply 'symbol'/1
		      (_X__1)
	      in  %% Line 47
		  [_cor2|%% Line 49
			 _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_7_'/1 =
    %% Line 46
    fun (_cor0) ->
	%% Line 47
	case _cor0 of
	  <[_X__1|_X__Stack]> when 'true' ->
	      let <_cor2> =
		  %% Line 49
		  apply 'symbol'/1
		      (_X__1)
	      in  %% Line 48
		  [_cor2|%% Line 50
			 _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_8_'/1 =
    %% Line 47
    fun (_cor0) ->
	%% Line 48
	case _cor0 of
	  <[_X__1|_X__Stack]> when 'true' ->
	      let <_cor2> =
		  %% Line 50
		  apply 'symbol'/1
		      (_X__1)
	      in  %% Line 49
		  [_cor2|%% Line 51
			 _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_9_'/1 =
    %% Line 44
    fun (_cor0) ->
	%% Line 45
	case _cor0 of
	  <[_X__1|_X__Stack]> when 'true' ->
	      let <_cor2> =
		  %% Line 47
		  apply 'symbol'/1
		      (_X__1)
	      in  %% Line 46
		  [_cor2|%% Line 48
			 _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_11_'/1 =
    %% Line 41
    fun (_cor0) ->
	%% Line 42
	[%% Line 43
	 {'erlang_code',[{'atom',0,'$undefined'}]}|_cor0]
'yeccpars2_12_'/1 =
    %% Line 36
    fun (_cor0) ->
	%% Line 37
	case _cor0 of
	  <[_X__1|_X__Stack]> when 'true' ->
	      %% Line 38
	      [%% Line 39
	       [_X__1|[]]|%% Line 40
			  _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_13_'/1 =
    %% Line 37
    fun (_cor0) ->
	%% Line 38
	case _cor0 of
	  <[_X__2|[_X__1|_X__Stack]]> when 'true' ->
	      %% Line 39
	      [%% Line 40
	       [_X__1|_X__2]|%% Line 41
			     _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_16_'/1 =
    %% Line 40
    fun (_cor0) ->
	%% Line 41
	case _cor0 of
	  <[_X__2|[_X__1|_X__Stack]]> when 'true' ->
	      %% Line 42
	      [%% Line 43
	       {'erlang_code',_X__2}|%% Line 44
				     _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_17_'/1 =
    %% Line 42
    fun (_cor0) ->
	%% Line 43
	case _cor0 of
	  <[_X__1|_X__Stack]> when 'true' ->
	      %% Line 44
	      [%% Line 45
	       [_X__1|[]]|%% Line 46
			  _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_18_'/1 =
    %% Line 56
    fun (_cor0) ->
	%% Line 57
	case _cor0 of
	  <[_X__1|_X__Stack]> when 'true' ->
	      let <_cor2> =
		  %% Line 59
		  apply 'line_of'/1
		      (_X__1)
	      in  %% Line 58
		  [%% Line 59
		   {'->',_cor2}|%% Line 60
				_X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_19_'/1 =
    %% Line 57
    fun (_cor0) ->
	%% Line 58
	case _cor0 of
	  <[_X__1|_X__Stack]> when 'true' ->
	      let <_cor2> =
		  %% Line 60
		  apply 'line_of'/1
		      (_X__1)
	      in  %% Line 59
		  [%% Line 60
		   {':',_cor2}|%% Line 61
			       _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_24_'/1 =
    %% Line 54
    fun (_cor0) ->
	%% Line 55
	case _cor0 of
	  <[_X__1|_X__Stack]> when 'true' ->
	      let <_cor3> =
		  %% Line 57
		  apply 'value_of'/1
		      (_X__1)
	      in  let <_cor2> =
		      %% Line 57
		      apply 'line_of'/1
			  (_X__1)
		  in  %% Line 56
		      [%% Line 57
		       {_cor3,_cor2}|%% Line 58
				     _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_25_'/1 =
    %% Line 55
    fun (_cor0) ->
	%% Line 56
	case _cor0 of
	  <[_X__1|_X__Stack]> when 'true' ->
	      let <_cor3> =
		  %% Line 58
		  apply 'value_of'/1
		      (_X__1)
	      in  let <_cor2> =
		      %% Line 58
		      apply 'line_of'/1
			  (_X__1)
		  in  %% Line 57
		      [%% Line 58
		       {_cor3,_cor2}|%% Line 59
				     _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_28_'/1 =
    %% Line 43
    fun (_cor0) ->
	%% Line 44
	case _cor0 of
	  <[_X__2|[_X__1|_X__Stack]]> when 'true' ->
	      %% Line 45
	      [%% Line 46
	       [_X__1|_X__2]|%% Line 47
			     _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_29_'/1 =
    %% Line 34
    fun (_cor0) ->
	%% Line 35
	case _cor0 of
	  <[_X__5|[_X__4|[_X__3|[_X__2|[_X__1|_X__Stack]]]]]> when 'true' ->
	      %% Line 36
	      [%% Line 37
	       {'rule',[_X__1|_X__3],_X__4}|%% Line 38
					    _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_32_'/1 =
    %% Line 38
    fun (_cor0) ->
	%% Line 39
	case _cor0 of
	  <[_X__1|_X__Stack]> when 'true' ->
	      %% Line 40
	      [%% Line 41
	       [_X__1|[]]|%% Line 42
			  _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_33_'/1 =
    %% Line 39
    fun (_cor0) ->
	%% Line 40
	case _cor0 of
	  <[_X__2|[_X__1|_X__Stack]]> when 'true' ->
	      %% Line 41
	      [%% Line 42
	       [_X__1|_X__2]|%% Line 43
			     _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_34_'/1 =
    %% Line 33
    fun (_cor0) ->
	%% Line 34
	case _cor0 of
	  <[_X__3|[_X__2|[_X__1|_X__Stack]]]> when 'true' ->
	      %% Line 35
	      [%% Line 36
	       {_X__1,_X__2}|%% Line 37
			     _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'yeccpars2_35_'/1 =
    %% Line 32
    fun (_cor0) ->
	%% Line 33
	case _cor0 of
	  <[_X__3|[_X__2|[_X__1|_X__Stack]]]> when 'true' ->
	      %% Line 34
	      [%% Line 35
	       {_X__1,_X__2}|%% Line 36
			     _X__Stack]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('yeccparser')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('yeccparser', _cor0)
end