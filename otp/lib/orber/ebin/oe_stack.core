module 'oe_stack' ['module_info'/0,
		   'module_info'/1,
		   'oe_dependency'/0,
		   'oe_get_module'/5,
		   'oe_register'/0,
		   'oe_unregister'/0]
    attributes [%% Line 15
		'ic_compiled' =
		    %% Line 15
		    [52|[95|[51|[95|[53]]]]]]
'oe_register'/0 =
    %% Line 27
    fun () ->
	let <OE_IFR> =
	    %% Line 28
	    call 'orber_ifr':'find_repository'
		()
	in  do  %% Line 30
		apply 'register_tests'/1
		    (OE_IFR)
		let <_X_OE_1> =
		    %% Line 32
		    apply 'oe_get_top_module'/4
			(OE_IFR, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]], [83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101]]]]]]]]]]], [49|[46|[48]]])
		in  do  %% Line 34
			call 'orber_ifr':'ModuleDef_create_exception'
			    (_X_OE_1, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[69|[109|[112|[116|[121|[83|[116|[97|[99|[107|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [69|[109|[112|[116|[121|[83|[116|[97|[99|[107]]]]]]]]]], [49|[46|[48]]], [])
			let <_X_OE_2> =
			    %% Line 36
			    call 'orber_ifr':'ModuleDef_create_interface'
				(_X_OE_1, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[83|[116|[97|[99|[107|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]], [83|[116|[97|[99|[107]]]]], [49|[46|[48]]], [])
			in  let <_cor4> =
				%% Line 38
				call 'orber_ifr':'Repository_create_idltype'
				    (OE_IFR, 'tk_long')
			    in  let <_cor3> =
				    %% Line 38
				    call 'orber_ifr':'lookup_id'
					(OE_IFR, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[69|[109|[112|[116|[121|[83|[116|[97|[99|[107|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				in  do  %% Line 38
					call 'orber_ifr':'InterfaceDef_create_operation'
					    (_X_OE_2, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[83|[116|[97|[99|[107|[47|[112|[111|[112|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [112|[111|[112]]], [49|[46|[48]]], _cor4, 'OP_NORMAL', [], [_cor3|[]], [])
					let <_cor6> =
					    %% Line 40
					    call 'orber_ifr':'Repository_create_idltype'
						(OE_IFR, 'tk_void')
					in  let <_cor5> =
						%% Line 40
						call 'orber_ifr':'Repository_create_idltype'
						    (OE_IFR, 'tk_long')
					    in  do  %% Line 40
						    call 'orber_ifr':'InterfaceDef_create_operation'
							(_X_OE_2, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[83|[116|[97|[99|[107|[47|[112|[117|[115|[104|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [112|[117|[115|[104]]]], [49|[46|[48]]], _cor6, 'OP_NORMAL', [{'parameterdescription',[118|[97|[108|[117|[101]]]]],'tk_long',_cor5,'PARAM_IN'}|%% Line 41
																																														     []], %% Line 41
																																															  [], %% Line 41
																																															      [])
						    let <_cor7> =
							%% Line 43
							call 'orber_ifr':'Repository_create_idltype'
							    (OE_IFR, 'tk_void')
						    in  do  %% Line 43
							    call 'orber_ifr':'InterfaceDef_create_operation'
								(_X_OE_2, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[83|[116|[97|[99|[107|[47|[101|[109|[112|[116|[121|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [101|[109|[112|[116|[121]]]]], [49|[46|[48]]], _cor7, 'OP_NORMAL', [], [], [])
							    let <_X_OE_3> =
								%% Line 45
								call 'orber_ifr':'ModuleDef_create_interface'
								    (_X_OE_1, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[83|[116|[97|[99|[107|[70|[97|[99|[116|[111|[114|[121|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [83|[116|[97|[99|[107|[70|[97|[99|[116|[111|[114|[121]]]]]]]]]]]], [49|[46|[48]]], [])
							    in  let <_cor9> =
								    %% Line 47
								    call 'orber_ifr':'Repository_create_idltype'
									(OE_IFR, {'tk_objref',[73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[83|[116|[97|[99|[107|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]],[83|[116|[97|[99|[107]]]]]})
								in  do  %% Line 47
									call 'orber_ifr':'InterfaceDef_create_operation'
									    (_X_OE_3, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[83|[116|[97|[99|[107|[70|[97|[99|[116|[111|[114|[121|[47|[99|[114|[101|[97|[116|[101|[95|[115|[116|[97|[99|[107|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [99|[114|[101|[97|[116|[101|[95|[115|[116|[97|[99|[107]]]]]]]]]]]], [49|[46|[48]]], _cor9, %% Line 49
																																																				       'OP_NORMAL', %% Line 49
																																																						    [], %% Line 49
																																																							[], %% Line 49
																																																							    [])
									let <_cor11> =
									    %% Line 51
									    call 'orber_ifr':'Repository_create_idltype'
										(OE_IFR, 'tk_void')
									in  let <_cor10> =
										%% Line 52
										call 'orber_ifr':'Repository_create_idltype'
										    (OE_IFR, {'tk_objref',[73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[83|[116|[97|[99|[107|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]],[83|[116|[97|[99|[107]]]]]})
									    in  do  %% Line 51
										    call 'orber_ifr':'InterfaceDef_create_operation'
											(_X_OE_3, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[83|[116|[97|[99|[107|[70|[97|[99|[116|[111|[114|[121|[47|[100|[101|[115|[116|[114|[111|[121|[95|[115|[116|[97|[99|[107|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [100|[101|[115|[116|[114|[111|[121|[95|[115|[116|[97|[99|[107]]]]]]]]]]]]], [49|[46|[48]]], _cor11, 'OP_NORMAL', [{'parameterdescription',[115],{'tk_objref',[73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[83|[116|[97|[99|[107|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]],[83|[116|[97|[99|[107]]]]]},_cor10,%% Line 54
																																																																																				      'PARAM_IN'}|%% Line 55
																																																																																						  []], %% Line 55
																																																																																						       [], %% Line 55
																																																																																							   [])
										    %% Line 57
										    'ok'
'register_tests'/1 =
    %% Line 61
    fun (_cor0) ->
	do  %% Line 62
	    apply 're_register_test'/1
		(_cor0)
	    %% Line 63
	    apply 'include_reg_test'/1
		(_cor0)
're_register_test'/1 =
    %% Line 67
    fun (_cor0) ->
	%% Line 68
	case call 'orber_ifr':'Repository_lookup_id'
		 (_cor0, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[69|[109|[112|[116|[121|[83|[116|[97|[99|[107|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]) of
	  %% Line 69
	  <[]> when 'true' ->
	      %% Line 70
	      'true'
	  %% Line 71
	  <_cor3> when 'true' ->
	      %% Line 72
	      call 'erlang':'exit'
		  ({'allready_registered',[73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[69|[109|[112|[116|[121|[83|[116|[97|[99|[107|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]})
	end
'include_reg_test'/1 =
    %% Line 77
    fun (_cor0) ->
	'true'
'oe_get_top_module'/4 =
    %% Line 81
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 82
	case call 'orber_ifr':'Repository_lookup_id'
		 (_cor3, _cor2) of
	  %% Line 83
	  <[]> when 'true' ->
	      %% Line 84
	      call 'orber_ifr':'Repository_create_module'
		  (_cor3, _cor2, _cor1, _cor0)
	  %% Line 85
	  <Mod> when 'true' ->
	      %% Line 86
	      Mod
	end
'oe_get_module'/5 =
    %% Line 90
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 91
	case call 'orber_ifr':'Repository_lookup_id'
		 (_cor4, _cor2) of
	  %% Line 92
	  <[]> when 'true' ->
	      %% Line 93
	      call 'orber_ifr':'ModuleDef_create_module'
		  (_cor3, _cor2, _cor1, _cor0)
	  %% Line 94
	  <Mod> when 'true' ->
	      %% Line 95
	      Mod
	end
'oe_unregister'/0 =
    %% Line 100
    fun () ->
	let <OE_IFR> =
	    %% Line 101
	    call 'orber_ifr':'find_repository'
		()
	in  do  %% Line 103
		apply 'oe_destroy'/2
		    (OE_IFR, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[83|[116|[97|[99|[107|[70|[97|[99|[116|[111|[114|[121|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		do  %% Line 104
		    apply 'oe_destroy'/2
			(OE_IFR, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[83|[116|[97|[99|[107|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]])
		    do  %% Line 105
			apply 'oe_destroy'/2
			    (OE_IFR, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[69|[109|[112|[116|[121|[83|[116|[97|[99|[107|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
			do  %% Line 106
			    apply 'oe_destroy_if_empty'/2
				(OE_IFR, [73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]])
			    %% Line 107
			    'ok'
'oe_destroy_if_empty'/2 =
    %% Line 110
    fun (_cor1,_cor0) ->
	%% Line 111
	case call 'orber_ifr':'Repository_lookup_id'
		 (_cor1, _cor0) of
	  %% Line 112
	  <[]> when 'true' ->
	      %% Line 113
	      'ok'
	  %% Line 114
	  <Ref> when 'true' ->
	      %% Line 115
	      case call 'orber_ifr':'contents'
		       (Ref, 'dk_All', 'true') of
		%% Line 116
		<[]> when 'true' ->
		    do  %% Line 117
			call 'orber_ifr':'destroy'
			    (Ref)
			%% Line 118
			'ok'
		%% Line 119
		<_cor6> when 'true' ->
		    %% Line 120
		    'ok'
	      end
	end
'oe_destroy'/2 =
    %% Line 124
    fun (_cor1,_cor0) ->
	%% Line 125
	case call 'orber_ifr':'Repository_lookup_id'
		 (_cor1, _cor0) of
	  %% Line 126
	  <[]> when 'true' ->
	      %% Line 127
	      'ok'
	  %% Line 128
	  <Ref> when 'true' ->
	      do  %% Line 129
		  call 'orber_ifr':'destroy'
		      (Ref)
		  %% Line 130
		  'ok'
	end
'oe_dependency'/0 =
    %% Line 136
    fun () ->
	%% Line 138
	[]
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('oe_stack')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('oe_stack', _cor0)
end