module 'StackModule_Stack_impl' ['empty'/1,
				 'init'/1,
				 'module_info'/0,
				 'module_info'/1,
				 'pop'/1,
				 'push'/2,
				 'terminate'/2]
    attributes []
'init'/1 =
    %% Line 30
    fun (_cor0) ->
	%% Line 31
	{'ok',[]}
'terminate'/2 =
    %% Line 33
    fun (_cor1,_cor0) ->
	%% Line 34
	'ok'
'push'/2 =
    %% Line 36
    fun (_cor1,_cor0) ->
	%% Line 37
	{'reply','ok',[_cor0|_cor1]}
'pop'/1 =
    %% Line 39
    fun (_cor0) ->
	case _cor0 of
	  <[Val|Stack]> when 'true' ->
	      %% Line 40
	      {'reply',Val,Stack}
	  %% Line 41
	  <[]> when 'true' ->
	      %% Line 42
	      call 'corba':'raise'
		  ({'StackModule_EmptyStack',[73|[68|[76|[58|[83|[116|[97|[99|[107|[77|[111|[100|[117|[108|[101|[47|[69|[109|[112|[116|[121|[83|[116|[97|[99|[107|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]})
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'pop',1}}] )
	    -| ['compiler_generated'] )
	end
'empty'/1 =
    %% Line 44
    fun (_cor0) ->
	%% Line 45
	{'reply','ok',[]}
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('StackModule_Stack_impl')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('StackModule_Stack_impl', _cor0)
end