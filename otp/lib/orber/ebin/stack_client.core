module 'stack_client' ['module_info'/0,
		       'module_info'/1,
		       'run'/0]
    attributes []
'run'/0 =
    %% Line 29
    fun () ->
	let <_cor0> =
	    catch
		%% Line 30
		call 'corba':'string_to_object'
		    ([99|[111|[114|[98|[97|[110|[97|[109|[101|[58|[114|[105|[114|[58|[47|[78|[97|[109|[101|[83|[101|[114|[118|[105|[99|[101|[35|[83|[116|[97|[99|[107|[70|[97|[99|[116|[111|[114|[121]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	in  %% Line 30
	    case _cor0 of
	      %% Line 31
	      <{'EXCEPTION',_X_E}> when 'true' ->
		  %% Line 32
		  call 'io':'format'
		      ([84|[104|[101|[32|[115|[116|[97|[99|[107|[32|[102|[97|[99|[116|[111|[114|[121|[32|[115|[101|[114|[118|[101|[114|[32|[105|[115|[32|[110|[111|[116|[32|[114|[101|[103|[105|[115|[116|[101|[114|[101|[100|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [])
	      %% Line 33
	      <SF> when 'true' ->
		  let <SS> =
		      %% Line 35
		      call 'StackModule_StackFactory':'create_stack'
			  (SF)
		  in  do  %% Line 37
			  call 'StackModule_Stack':'push'
			      (SS, 4)
			  do  %% Line 38
			      call 'StackModule_Stack':'push'
				  (SS, 7)
			      do  %% Line 39
				  call 'StackModule_Stack':'push'
				      (SS, 1)
				  do  %% Line 40
				      call 'StackModule_Stack':'push'
					  (SS, 1)
				      let <Res> =
					  %% Line 41
					  call 'StackModule_Stack':'pop'
					      (SS)
				      in  do  %% Line 42
					      call 'io':'format'
						  ([126|[119|[126|[110]]]], [Res|[]])
					      let <Res1> =
						  %% Line 43
						  call 'StackModule_Stack':'pop'
						      (SS)
					      in  do  %% Line 44
						      call 'io':'format'
							  ([126|[119|[126|[110]]]], [Res1|[]])
						      let <Res2> =
							  %% Line 45
							  call 'StackModule_Stack':'pop'
							      (SS)
						      in  do  %% Line 46
							      call 'io':'format'
								  ([126|[119|[126|[110]]]], [Res2|[]])
							      let <Res3> =
								  %% Line 47
								  call 'StackModule_Stack':'pop'
								      (SS)
							      in  do  %% Line 48
								      call 'io':'format'
									  ([126|[119|[126|[110]]]], [Res3|[]])
								      %% Line 51
								      call 'StackModule_StackFactory':'destroy_stack'
									  (SF, SS)
	    end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('stack_client')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('stack_client', _cor0)
end