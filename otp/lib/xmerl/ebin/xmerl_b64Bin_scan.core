module 'xmerl_b64Bin_scan' ['module_info'/0,
			    'module_info'/1,
			    'scan'/1]
    attributes []
'scan'/1 =
    %% Line 26
    fun (_cor0) ->
	%% Line 27
	apply 'scan'/2
	    (_cor0, [])
'scan'/2 =
    %% Line 29
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],Acc> when 'true' ->
	      %% Line 30
	      call 'lists':'reverse'
		  ([{'$end',1,'$end'}|Acc])
	  %% Line 31
	  <Str,Acc> when 'true' ->
	      %% Line 32
	      case apply 'scan_token'/1
		       (Str) of
		%% Line 33
		<{Token,Rest}> when 'true' ->
		    %% Line 34
		    apply 'scan'/2
			(Rest, [Token|Acc])
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	end
'scan_token'/1 =
    %% Line 37
    fun (_cor0) ->
	case _cor0 of
	  <[32|[H|T]]> when 'true' ->
	      %% Line 38
	      apply 'scan_token'/1
		  ([H|T])
	  %% Line 39
	  <[H|T]>
	      when let <_cor1> =
		    call 'erlang':'=='
			(H, 65)
		in  let <_cor2> =
			call 'erlang':'=='
			    (H, 81)
		    in  let <_cor3> =
			    call 'erlang':'=='
				(H, 103)
			in  let <_cor4> =
				call 'erlang':'=='
				    (H, 119)
			    in  let <_cor5> =
				    call 'erlang':'or'
					(_cor3, _cor4)
				in  let <_cor6> =
					call 'erlang':'or'
					    (_cor2, _cor5)
				    in  call 'erlang':'or'
					    (_cor1, _cor6) ->
	      %% Line 40
	      {{'b04',1,H},T}
	  %% Line 41
	  <[H|T]>
	      when let <_cor7> =
		    %% Line 42
		    call 'erlang':'=='
			(H, 69)
		in  let <_cor8> =
			%% Line 42
			call 'erlang':'=='
			    (H, 73)
		    in  let <_cor9> =
			    %% Line 42
			    call 'erlang':'=='
				(H, 77)
			in  let <_cor10> =
				%% Line 42
				call 'erlang':'=='
				    (H, 85)
			    in  let <_cor11> =
				    %% Line 42
				    call 'erlang':'=='
					(H, 89)
				in  let <_cor12> =
					%% Line 42
					call 'erlang':'=='
					    (H, 99)
				    in  let <_cor13> =
					    %% Line 42
					    call 'erlang':'=='
						(H, 107)
					in  let <_cor14> =
						%% Line 42
						call 'erlang':'=='
						    (H, 111)
					    in  let <_cor15> =
						    %% Line 42
						    call 'erlang':'=='
							(H, 115)
						in  let <_cor16> =
							%% Line 42
							call 'erlang':'=='
							    (H, 48)
						    in  let <_cor17> =
							    %% Line 43
							    call 'erlang':'=='
								(H, 52)
							in  let <_cor18> =
								%% Line 43
								call 'erlang':'=='
								    (H, 56)
							    in  let <_cor19> =
								    %% Line 43
								    call 'erlang':'or'
									(_cor17, _cor18)
								in  let <_cor20> =
									%% Line 42
									call 'erlang':'or'
									    (_cor16, _cor19)
								    in  let <_cor21> =
									    %% Line 42
									    call 'erlang':'or'
										(_cor15, _cor20)
									in  let <_cor22> =
										%% Line 42
										call 'erlang':'or'
										    (_cor14, _cor21)
									    in  let <_cor23> =
										    %% Line 42
										    call 'erlang':'or'
											(_cor13, _cor22)
										in  let <_cor24> =
											%% Line 42
											call 'erlang':'or'
											    (_cor12, _cor23)
										    in  let <_cor25> =
											    %% Line 42
											    call 'erlang':'or'
												(_cor11, _cor24)
											in  let <_cor26> =
												%% Line 42
												call 'erlang':'or'
												    (_cor10, _cor25)
											    in  let <_cor27> =
												    %% Line 42
												    call 'erlang':'or'
													(_cor9, _cor26)
												in  let <_cor28> =
													%% Line 42
													call 'erlang':'or'
													    (_cor8, _cor27)
												    in  %% Line 42
													call 'erlang':'or'
													    (_cor7, _cor28) ->
	      %% Line 44
	      {{'b16x',1,H},T}
	  %% Line 45
	  <[H|T]>
	      when let <_cor29> =
		    %% Line 46
		    call 'erlang':'=='
			(H, 66)
		in  let <_cor30> =
			%% Line 46
			call 'erlang':'=='
			    (H, 67)
		    in  let <_cor31> =
			    %% Line 46
			    call 'erlang':'=='
				(H, 68)
			in  let <_cor32> =
				%% Line 46
				call 'erlang':'=='
				    (H, 70)
			    in  let <_cor33> =
				    %% Line 46
				    call 'erlang':'=='
					(H, 71)
				in  let <_cor34> =
					%% Line 46
					call 'erlang':'=='
					    (H, 72)
				    in  let <_cor35> =
					    %% Line 46
					    call 'erlang':'=='
						(H, 74)
					in  let <_cor36> =
						%% Line 46
						call 'erlang':'=='
						    (H, 75)
					    in  let <_cor37> =
						    %% Line 46
						    call 'erlang':'=='
							(H, 76)
						in  let <_cor38> =
							%% Line 46
							call 'erlang':'=='
							    (H, 78)
						    in  let <_cor39> =
							    %% Line 47
							    call 'erlang':'=='
								(H, 79)
							in  let <_cor40> =
								%% Line 47
								call 'erlang':'=='
								    (H, 80)
							    in  let <_cor41> =
								    %% Line 47
								    call 'erlang':'=='
									(H, 82)
								in  let <_cor42> =
									%% Line 47
									call 'erlang':'=='
									    (H, 83)
								    in  let <_cor43> =
									    %% Line 47
									    call 'erlang':'=='
										(H, 84)
									in  let <_cor44> =
										%% Line 47
										call 'erlang':'=='
										    (H, 86)
									    in  let <_cor45> =
										    %% Line 47
										    call 'erlang':'=='
											(H, 87)
										in  let <_cor46> =
											%% Line 47
											call 'erlang':'=='
											    (H, 88)
										    in  let <_cor47> =
											    %% Line 47
											    call 'erlang':'=='
												(H, 90)
											in  let <_cor48> =
												%% Line 47
												call 'erlang':'or'
												    (_cor46, _cor47)
											    in  let <_cor49> =
												    %% Line 47
												    call 'erlang':'or'
													(_cor45, _cor48)
												in  let <_cor50> =
													%% Line 47
													call 'erlang':'or'
													    (_cor44, _cor49)
												    in  let <_cor51> =
													    %% Line 47
													    call 'erlang':'or'
														(_cor43, _cor50)
													in  let <_cor52> =
														%% Line 47
														call 'erlang':'or'
														    (_cor42, _cor51)
													    in  let <_cor53> =
														    %% Line 47
														    call 'erlang':'or'
															(_cor41, _cor52)
														in  let <_cor54> =
															%% Line 47
															call 'erlang':'or'
															    (_cor40, _cor53)
														    in  let <_cor55> =
															    %% Line 47
															    call 'erlang':'or'
																(_cor39, _cor54)
															in  let <_cor56> =
																%% Line 46
																call 'erlang':'or'
																    (_cor38, _cor55)
															    in  let <_cor57> =
																    %% Line 46
																    call 'erlang':'or'
																	(_cor37, _cor56)
																in  let <_cor58> =
																	%% Line 46
																	call 'erlang':'or'
																	    (_cor36, _cor57)
																    in  let <_cor59> =
																	    %% Line 46
																	    call 'erlang':'or'
																		(_cor35, _cor58)
																	in  let <_cor60> =
																		%% Line 46
																		call 'erlang':'or'
																		    (_cor34, _cor59)
																	    in  let <_cor61> =
																		    %% Line 46
																		    call 'erlang':'or'
																			(_cor33, _cor60)
																		in  let <_cor62> =
																			%% Line 46
																			call 'erlang':'or'
																			    (_cor32, _cor61)
																		    in  let <_cor63> =
																			    %% Line 46
																			    call 'erlang':'or'
																				(_cor31, _cor62)
																			in  let <_cor64> =
																				%% Line 46
																				call 'erlang':'or'
																				    (_cor30, _cor63)
																			    in  %% Line 46
																				call 'erlang':'or'
																				    (_cor29, _cor64) ->
	      %% Line 48
	      {{'b64x',1,H},T}
	  %% Line 49
	  <[H|T]>
	      when let <_cor65> =
		    %% Line 50
		    call 'erlang':'=='
			(H, 97)
		in  let <_cor66> =
			%% Line 50
			call 'erlang':'=='
			    (H, 98)
		    in  let <_cor67> =
			    %% Line 50
			    call 'erlang':'=='
				(H, 100)
			in  let <_cor68> =
				%% Line 50
				call 'erlang':'=='
				    (H, 101)
			    in  let <_cor69> =
				    %% Line 50
				    call 'erlang':'=='
					(H, 102)
				in  let <_cor70> =
					%% Line 50
					call 'erlang':'=='
					    (H, 104)
				    in  let <_cor71> =
					    %% Line 50
					    call 'erlang':'=='
						(H, 105)
					in  let <_cor72> =
						%% Line 50
						call 'erlang':'=='
						    (H, 106)
					    in  let <_cor73> =
						    %% Line 50
						    call 'erlang':'=='
							(H, 108)
						in  let <_cor74> =
							%% Line 50
							call 'erlang':'=='
							    (H, 109)
						    in  let <_cor75> =
							    %% Line 50
							    call 'erlang':'=='
								(H, 110)
							in  let <_cor76> =
								%% Line 50
								call 'erlang':'=='
								    (H, 112)
							    in  let <_cor77> =
								    %% Line 51
								    call 'erlang':'=='
									(H, 113)
								in  let <_cor78> =
									%% Line 51
									call 'erlang':'=='
									    (H, 114)
								    in  let <_cor79> =
									    %% Line 51
									    call 'erlang':'=='
										(H, 116)
									in  let <_cor80> =
										%% Line 51
										call 'erlang':'=='
										    (H, 117)
									    in  let <_cor81> =
										    %% Line 51
										    call 'erlang':'=='
											(H, 118)
										in  let <_cor82> =
											%% Line 51
											call 'erlang':'=='
											    (H, 120)
										    in  let <_cor83> =
											    %% Line 51
											    call 'erlang':'=='
												(H, 121)
											in  let <_cor84> =
												%% Line 51
												call 'erlang':'=='
												    (H, 122)
											    in  let <_cor85> =
												    %% Line 51
												    call 'erlang':'or'
													(_cor83, _cor84)
												in  let <_cor86> =
													%% Line 51
													call 'erlang':'or'
													    (_cor82, _cor85)
												    in  let <_cor87> =
													    %% Line 51
													    call 'erlang':'or'
														(_cor81, _cor86)
													in  let <_cor88> =
														%% Line 51
														call 'erlang':'or'
														    (_cor80, _cor87)
													    in  let <_cor89> =
														    %% Line 51
														    call 'erlang':'or'
															(_cor79, _cor88)
														in  let <_cor90> =
															%% Line 51
															call 'erlang':'or'
															    (_cor78, _cor89)
														    in  let <_cor91> =
															    %% Line 51
															    call 'erlang':'or'
																(_cor77, _cor90)
															in  let <_cor92> =
																%% Line 50
																call 'erlang':'or'
																    (_cor76, _cor91)
															    in  let <_cor93> =
																    %% Line 50
																    call 'erlang':'or'
																	(_cor75, _cor92)
																in  let <_cor94> =
																	%% Line 50
																	call 'erlang':'or'
																	    (_cor74, _cor93)
																    in  let <_cor95> =
																	    %% Line 50
																	    call 'erlang':'or'
																		(_cor73, _cor94)
																	in  let <_cor96> =
																		%% Line 50
																		call 'erlang':'or'
																		    (_cor72, _cor95)
																	    in  let <_cor97> =
																		    %% Line 50
																		    call 'erlang':'or'
																			(_cor71, _cor96)
																		in  let <_cor98> =
																			%% Line 50
																			call 'erlang':'or'
																			    (_cor70, _cor97)
																		    in  let <_cor99> =
																			    %% Line 50
																			    call 'erlang':'or'
																				(_cor69, _cor98)
																			in  let <_cor100> =
																				%% Line 50
																				call 'erlang':'or'
																				    (_cor68, _cor99)
																			    in  let <_cor101> =
																				    %% Line 50
																				    call 'erlang':'or'
																					(_cor67, _cor100)
																				in  let <_cor102> =
																					%% Line 50
																					call 'erlang':'or'
																					    (_cor66, _cor101)
																				    in  %% Line 50
																					call 'erlang':'or'
																					    (_cor65, _cor102) ->
	      %% Line 52
	      {{'b64x',1,H},T}
	  %% Line 53
	  <[H|T]>
	      when let <_cor103> =
		    %% Line 54
		    call 'erlang':'=='
			(H, 49)
		in  let <_cor104> =
			%% Line 54
			call 'erlang':'=='
			    (H, 50)
		    in  let <_cor105> =
			    %% Line 54
			    call 'erlang':'=='
				(H, 51)
			in  let <_cor106> =
				%% Line 54
				call 'erlang':'=='
				    (H, 53)
			    in  let <_cor107> =
				    %% Line 54
				    call 'erlang':'=='
					(H, 54)
				in  let <_cor108> =
					%% Line 54
					call 'erlang':'=='
					    (H, 55)
				    in  let <_cor109> =
					    %% Line 54
					    call 'erlang':'=='
						(H, 57)
					in  let <_cor110> =
						%% Line 54
						call 'erlang':'=='
						    (H, 43)
					    in  let <_cor111> =
						    %% Line 54
						    call 'erlang':'=='
							(H, 47)
						in  let <_cor112> =
							%% Line 54
							call 'erlang':'or'
							    (_cor110, _cor111)
						    in  let <_cor113> =
							    %% Line 54
							    call 'erlang':'or'
								(_cor109, _cor112)
							in  let <_cor114> =
								%% Line 54
								call 'erlang':'or'
								    (_cor108, _cor113)
							    in  let <_cor115> =
								    %% Line 54
								    call 'erlang':'or'
									(_cor107, _cor114)
								in  let <_cor116> =
									%% Line 54
									call 'erlang':'or'
									    (_cor106, _cor115)
								    in  let <_cor117> =
									    %% Line 54
									    call 'erlang':'or'
										(_cor105, _cor116)
									in  let <_cor118> =
										%% Line 54
										call 'erlang':'or'
										    (_cor104, _cor117)
									    in  %% Line 54
										call 'erlang':'or'
										    (_cor103, _cor118) ->
	      %% Line 55
	      {{'b64x',1,H},T}
	  %% Line 56
	  <[61|T]> when 'true' ->
	      %% Line 57
	      {{'=',1,[61]},T}
	  %% Line 58
	  <[H|_X_T]> when 'true' ->
	      %% Line 59
	      call 'erlang':'exit'
		  ({'error',{'base64Binary_scan_illegal_char',H}})
	  ( <_cor119> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor119})
		  -| [{'function_name',{'scan_token',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('xmerl_b64Bin_scan')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('xmerl_b64Bin_scan', _cor0)
end