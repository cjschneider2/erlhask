module 'xmerl_xpath_pred' ['boolean'/1,
			   'boolean'/2,
			   'ceiling'/2,
			   'concat'/2,
			   'contains'/2,
			   'core_function'/1,
			   'count'/2,
			   'eval'/2,
			   'floor'/2,
			   'fn_false'/2,
			   'fn_not'/2,
			   'fn_true'/2,
			   'id'/2,
			   'lang'/2,
			   'last'/2,
			   'local-name'/2,
			   'module_info'/0,
			   'module_info'/1,
			   'name'/2,
			   'namespace-uri'/2,
			   'nodeset'/1,
			   'normalize-space'/2,
			   'number'/1,
			   'number'/2,
			   'position'/2,
			   'round'/2,
			   'starts-with'/2,
			   'string'/1,
			   'string'/2,
			   'string-length'/2,
			   'substring'/2,
			   'substring-after'/2,
			   'substring-before'/2,
			   'sum'/2,
			   'translate'/2]
    attributes []
'eval'/2 =
    %% Line 79
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Expr,C = {'xmlContext',_cor17,{'xmlNode',_cor18,_cor19,_cor20,Pos},_cor21,_cor22,_cor23,_cor24,_cor25,_cor26}> when 'true' ->
	      let <Obj> =
		  %% Line 80
		  apply 'expr'/2
		      (Expr, C)
	      in  %% Line 81
		  ( case Obj of
		      ( <( {'xmlObj',_rec0,_cor27}
			   -| ['compiler_generated'] )> when 'true' ->
			    case _rec0 of
			      %% Line 82
			      <'number'>
				  when ( call 'erlang':'=='
					  (_cor27,
					   Pos)
				      -| ['compiler_generated'] ) ->
				  %% Line 83
				  'true'
			      %% Line 84
			      <'number'> when 'true' ->
				  %% Line 85
				  'false'
			      %% Line 86
			      <'boolean'> when 'true' ->
				  _cor27
			      %% Line 88
			      <_cor31> when 'true' ->
				  %% Line 89
				  apply 'mk_boolean'/2
				      (C, Obj)
			    end
			-| ['compiler_generated'] )
		      ( <_cor28> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','xmlObj'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15})
		  -| [{'function_name',{'eval',2}}] )
	    -| ['compiler_generated'] )
	end
'string'/1 =
    %% Line 95
    fun (_cor0) ->
	%% Line 96
	{'xmlObj','string',_cor0}
'nodeset'/1 =
    %% Line 98
    fun (_cor0) ->
	%% Line 99
	{'xmlObj','nodeset',_cor0}
'number'/1 =
    %% Line 101
    fun (_cor0) ->
	%% Line 102
	{'xmlObj','number',_cor0}
'boolean'/1 =
    %% Line 104
    fun (_cor0) ->
	%% Line 105
	{'xmlObj','boolean',_cor0}
'expr'/2 =
    %% Line 108
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'arith',Op,E1,E2},C> when 'true' ->
	      %% Line 109
	      apply 'arith_expr'/4
		  (Op, E1, E2, C)
	  %% Line 110
	  <{'comp',Op,E1,E2},C> when 'true' ->
	      %% Line 111
	      apply 'comp_expr'/4
		  (Op, E1, E2, C)
	  %% Line 112
	  <{'bool',Op,E1,E2},C> when 'true' ->
	      %% Line 113
	      apply 'bool_expr'/4
		  (Op, E1, E2, C)
	  %% Line 114
	  <{'negative',E},C> when 'true' ->
	      let <N> =
		  %% Line 115
		  apply 'mk_number'/2
		      (C, E)
	      in  %% Line 116
		  call 'erlang':'-'
		      (N)
	  %% Line 117
	  <{'number',N},_X_C> when 'true' ->
	      %% Line 118
	      {'xmlObj','number',N}
	  %% Line 119
	  <{'literal',S},_X_C> when 'true' ->
	      %% Line 120
	      {'xmlObj','string',S}
	  %% Line 121
	  <{'function_call',F,Args},C> when 'true' ->
	      %% Line 122
	      case apply 'core_function'/1
		       (F) of
		%% Line 123
		<{'true',F1}> when 'true' ->
		    %% Line 124
		    call 'xmerl_xpath_pred':F1
			(C, Args)
		%% Line 125
		<'true'> when 'true' ->
		    %% Line 126
		    call 'xmerl_xpath_pred':F
			(C, Args)
		%% Line 127
		<'false'> when 'true' ->
		    %% Line 130
		    call 'erlang':'exit'
			({'not_a_core_function',F})
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 132
	  <{'path',Type,PathExpr},C> when 'true' ->
	      %% Line 133
	      case %% Line 134
		   call 'xmerl_xpath':'eval_path'
		       (Type, PathExpr, C) of
		<{'state',{'xmlContext',_cor7,_cor8,_cor9,NS,_cor10,_cor11,_cor12,_cor13},_cor14}> when 'true' ->
		    %% Line 135
		    {'xmlObj','nodeset',NS}
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 136
	  <Expr,_X_C> when 'true' ->
	      %% Line 137
	      call 'erlang':'exit'
		  ({'unknown_expr',Expr})
	end
'arith_expr'/4 =
    %% Line 140
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <'+',E1,E2,C> when 'true' ->
	      let <_cor5> =
		  %% Line 141
		  apply 'mk_number'/2
		      (C, E1)
	      in  let <_cor4> =
		      %% Line 141
		      apply 'mk_number'/2
			  (C, E2)
		  in  let <_cor6> =
			  %% Line 141
			  call 'erlang':'+'
			      (_cor5, _cor4)
		      in  %% Line 141
			  {'xmlObj','number',_cor6}
	  %% Line 142
	  <'-',E1,E2,C> when 'true' ->
	      let <_cor8> =
		  %% Line 143
		  apply 'mk_number'/2
		      (C, E1)
	      in  let <_cor7> =
		      %% Line 143
		      apply 'mk_number'/2
			  (C, E2)
		  in  let <_cor9> =
			  %% Line 143
			  call 'erlang':'-'
			      (_cor8, _cor7)
		      in  %% Line 143
			  {'xmlObj','number',_cor9}
	  %% Line 144
	  <'*',E1,E2,C> when 'true' ->
	      let <_cor11> =
		  %% Line 145
		  apply 'mk_number'/2
		      (C, E1)
	      in  let <_cor10> =
		      %% Line 145
		      apply 'mk_number'/2
			  (C, E2)
		  in  let <_cor12> =
			  %% Line 145
			  call 'erlang':'*'
			      (_cor11, _cor10)
		      in  %% Line 145
			  {'xmlObj','number',_cor12}
	  %% Line 146
	  <'div',E1,E2,C> when 'true' ->
	      let <_cor14> =
		  %% Line 147
		  apply 'mk_number'/2
		      (C, E1)
	      in  let <_cor13> =
		      %% Line 147
		      apply 'mk_number'/2
			  (C, E2)
		  in  let <_cor15> =
			  %% Line 147
			  call 'erlang':'/'
			      (_cor14, _cor13)
		      in  %% Line 147
			  {'xmlObj','number',_cor15}
	  %% Line 148
	  <'mod',E1,E2,C> when 'true' ->
	      let <_cor17> =
		  %% Line 149
		  apply 'mk_number'/2
		      (C, E1)
	      in  let <_cor16> =
		      %% Line 149
		      apply 'mk_number'/2
			  (C, E2)
		  in  let <_cor18> =
			  %% Line 149
			  call 'erlang':'rem'
			      (_cor17, _cor16)
		      in  %% Line 149
			  {'xmlObj','number',_cor18}
	  ( <_cor22,_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21,_cor20,_cor19})
		  -| [{'function_name',{'arith_expr',4}}] )
	    -| ['compiler_generated'] )
	end
'comp_expr'/4 =
    %% Line 151
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <'>',E1,E2,C> when 'true' ->
	      let <N1> =
		  %% Line 152
		  apply 'expr'/2
		      (E1, C)
	      in  let <N2> =
		      %% Line 153
		      apply 'expr'/2
			  (E2, C)
		  in  let <_cor7> =
			  %% Line 154
			  apply 'compare_ineq_format'/3
			      (N1, N2, C)
		      in  let <_cor6> =
			      %% Line 154
			      apply 'compare_ineq_format'/3
				  (N2, N1, C)
			  in  let <_cor8> =
				  %% Line 154
				  call 'erlang':'>'
				      (_cor7, _cor6)
			      in  %% Line 154
				  {'xmlObj','boolean',_cor8}
	  %% Line 155
	  <'<',E1,E2,C> when 'true' ->
	      let <N1> =
		  %% Line 156
		  apply 'expr'/2
		      (E1, C)
	      in  let <N2> =
		      %% Line 157
		      apply 'expr'/2
			  (E2, C)
		  in  let <_cor12> =
			  %% Line 158
			  apply 'compare_ineq_format'/3
			      (N1, N2, C)
		      in  let <_cor11> =
			      %% Line 158
			      apply 'compare_ineq_format'/3
				  (N2, N1, C)
			  in  let <_cor13> =
				  %% Line 158
				  call 'erlang':'>'
				      (_cor12, _cor11)
			      in  %% Line 158
				  {'xmlObj','boolean',_cor13}
	  %% Line 159
	  <'>=',E1,E2,C> when 'true' ->
	      let <N1> =
		  %% Line 160
		  apply 'expr'/2
		      (E1, C)
	      in  let <N2> =
		      %% Line 161
		      apply 'expr'/2
			  (E2, C)
		  in  let <_cor17> =
			  %% Line 162
			  apply 'compare_ineq_format'/3
			      (N1, N2, C)
		      in  let <_cor16> =
			      %% Line 162
			      apply 'compare_ineq_format'/3
				  (N2, N1, C)
			  in  let <_cor18> =
				  %% Line 162
				  call 'erlang':'>'
				      (_cor17, _cor16)
			      in  %% Line 162
				  {'xmlObj','boolean',_cor18}
	  %% Line 163
	  <'<=',E1,E2,C> when 'true' ->
	      let <N1> =
		  %% Line 164
		  apply 'expr'/2
		      (E1, C)
	      in  let <N2> =
		      %% Line 165
		      apply 'expr'/2
			  (E2, C)
		  in  let <_cor22> =
			  %% Line 166
			  apply 'compare_ineq_format'/3
			      (N1, N2, C)
		      in  let <_cor21> =
			      %% Line 166
			      apply 'compare_ineq_format'/3
				  (N2, N1, C)
			  in  let <_cor23> =
				  %% Line 166
				  call 'erlang':'>'
				      (_cor22, _cor21)
			      in  %% Line 166
				  {'xmlObj','boolean',_cor23}
	  %% Line 167
	  <'=',E1,E2,C> when 'true' ->
	      let <N1> =
		  %% Line 168
		  apply 'expr'/2
		      (E1, C)
	      in  let <N2> =
		      %% Line 169
		      apply 'expr'/2
			  (E2, C)
		  in  let <_cor27> =
			  %% Line 170
			  apply 'compare_eq_format'/3
			      (N1, N2, C)
		      in  let <_cor26> =
			      %% Line 170
			      apply 'compare_eq_format'/3
				  (N2, N1, C)
			  in  let <_cor28> =
				  %% Line 170
				  call 'erlang':'=='
				      (_cor27, _cor26)
			      in  %% Line 170
				  {'xmlObj','boolean',_cor28}
	  %% Line 171
	  <'!=',E1,E2,C> when 'true' ->
	      let <N1> =
		  %% Line 172
		  apply 'expr'/2
		      (E1, C)
	      in  let <N2> =
		      %% Line 173
		      apply 'expr'/2
			  (E2, C)
		  in  let <_cor32> =
			  %% Line 174
			  apply 'compare_eq_format'/3
			      (N1, N2, C)
		      in  let <_cor31> =
			      %% Line 174
			      apply 'compare_eq_format'/3
				  (N2, N1, C)
			  in  let <_cor33> =
				  %% Line 174
				  call 'erlang':'/='
				      (_cor32, _cor31)
			      in  %% Line 174
				  {'xmlObj','boolean',_cor33}
	  ( <_cor37,_cor36,_cor35,_cor34> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor37,_cor36,_cor35,_cor34})
		  -| [{'function_name',{'comp_expr',4}}] )
	    -| ['compiler_generated'] )
	end
'bool_expr'/4 =
    %% Line 176
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <'or',E1,E2,C> when 'true' ->
	      let <_cor5> =
		  %% Line 177
		  apply 'mk_boolean'/2
		      (C, E1)
	      in  let <_cor4> =
		      %% Line 177
		      apply 'mk_boolean'/2
			  (C, E2)
		  in  let <_cor6> =
			  %% Line 177
			  call 'erlang':'or'
			      (_cor5, _cor4)
		      in  %% Line 177
			  {'xmlObj','boolean',_cor6}
	  %% Line 178
	  <'and',E1,E2,C> when 'true' ->
	      let <_cor8> =
		  %% Line 179
		  apply 'mk_boolean'/2
		      (C, E1)
	      in  let <_cor7> =
		      %% Line 179
		      apply 'mk_boolean'/2
			  (C, E2)
		  in  let <_cor9> =
			  %% Line 179
			  call 'erlang':'and'
			      (_cor8, _cor7)
		      in  %% Line 179
			  {'xmlObj','boolean',_cor9}
	  ( <_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10})
		  -| [{'function_name',{'bool_expr',4}}] )
	    -| ['compiler_generated'] )
	end
'compare_eq_format'/3 =
    %% Line 196
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <N1 = {'xmlObj',T1,_cor13},N2 = {'xmlObj',T2,_cor14},C>
	      when let <_cor3> =
		    call 'erlang':'=:='
			(T1, 'nodeset')
		in  let <_cor4> =
			%% Line 197
			call 'erlang':'=:='
			    (T2, 'nodeset')
		    in  call 'erlang':'or'
			    (_cor3, _cor4) ->
	      %% Line 198
	      apply 'compare_nseq_format'/3
		  (N1, N2, C)
	  %% Line 199
	  <N1 = {'xmlObj',T1,_cor15},{'xmlObj',T2,_cor16},C>
	      when let <_cor5> =
		    call 'erlang':'=:='
			(T1, 'boolean')
		in  let <_cor6> =
			%% Line 200
			call 'erlang':'=:='
			    (T2, 'boolean')
		    in  call 'erlang':'or'
			    (_cor5, _cor6) ->
	      %% Line 201
	      apply 'mk_boolean'/2
		  (C, N1)
	  %% Line 202
	  <N1 = {'xmlObj',T1,_cor17},{'xmlObj',T2,_cor18},C>
	      when let <_cor7> =
		    call 'erlang':'=:='
			(T1, 'number')
		in  let <_cor8> =
			%% Line 203
			call 'erlang':'=:='
			    (T2, 'number')
		    in  call 'erlang':'or'
			    (_cor7, _cor8) ->
	      %% Line 204
	      apply 'mk_number'/2
		  (C, N1)
	  %% Line 205
	  <N1,_cor19,C> when 'true' ->
	      let <_cor9> =
		  %% Line 206
		  apply 'string_value'/1
		      (N1)
	      in  %% Line 206
		  apply 'mk_string'/2
		      (C, _cor9)
	end
'compare_ineq_format'/3 =
    %% Line 208
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <N1 = {'xmlObj',T1,_cor8},N2 = %% Line 209
					 {'xmlObj',T2,_cor9},%% Line 209
							     C>
	      when let <_cor3> =
		    %% Line 209
		    call 'erlang':'=:='
			(T1, 'nodeset')
		in  let <_cor4> =
			%% Line 210
			call 'erlang':'=:='
			    (T2, 'nodeset')
		    in  %% Line 209
			call 'erlang':'or'
			    (_cor3, _cor4) ->
	      %% Line 211
	      apply 'compare_nseq_format'/3
		  (N1, N2, C)
	  %% Line 212
	  <N1,_X_N2,C> when 'true' ->
	      %% Line 213
	      apply 'mk_number'/2
		  (C, N1)
	end
'compare_nseq_format'/3 =
    %% Line 215
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <N1 = {'xmlObj','number',_cor8},_X_N2,C> when 'true' ->
	      %% Line 216
	      apply 'mk_number'/2
		  (C, N1)
	  %% Line 217
	  <N1 = {'xmlObj','boolean',_cor9},_X_N2,C> when 'true' ->
	      %% Line 218
	      apply 'mk_boolean'/2
		  (C, N1)
	  %% Line 219
	  <N1 = {'xmlObj','string',_cor10},_X_N2,C> when 'true' ->
	      %% Line 220
	      apply 'mk_string'/2
		  (C, N1)
	  %% Line 221
	  <N1 = {'xmlObj','nodeset',_cor11},_X_N2 = {'xmlObj','number',_cor12},C> when 'true' ->
	      let <_cor3> =
		  %% Line 223
		  apply 'string_value'/1
		      (N1)
	      in  %% Line 223
		  apply 'mk_number'/2
		      (C, _cor3)
	  %% Line 224
	  <N1 = {'xmlObj','nodeset',_cor13},_X_N2 = {'xmlObj','boolean',_cor14},C> when 'true' ->
	      %% Line 225
	      apply 'mk_boolean'/2
		  (C, N1)
	  %% Line 226
	  <N1 = {'xmlObj','nodeset',_cor15},_X_N2,C> when 'true' ->
	      let <_cor4> =
		  %% Line 227
		  apply 'string_value'/1
		      (N1)
	      in  %% Line 227
		  apply 'mk_string'/2
		      (C, _cor4)
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'compare_nseq_format',3}}] )
	    -| ['compiler_generated'] )
	end
'core_function'/1 =
    %% Line 230
    fun (_cor0) ->
	case _cor0 of
	  <'last'> when 'true' ->
	      'true'
	  %% Line 231
	  <'position'> when 'true' ->
	      'true'
	  %% Line 232
	  <'count'> when 'true' ->
	      'true'
	  %% Line 233
	  <'id'> when 'true' ->
	      'true'
	  %% Line 234
	  <'local-name'> when 'true' ->
	      'true'
	  %% Line 235
	  <'namespace-uri'> when 'true' ->
	      'true'
	  %% Line 236
	  <'name'> when 'true' ->
	      'true'
	  %% Line 237
	  <'string'> when 'true' ->
	      'true'
	  %% Line 238
	  <'concat'> when 'true' ->
	      'true'
	  %% Line 239
	  <'starts-with'> when 'true' ->
	      'true'
	  %% Line 240
	  <'contains'> when 'true' ->
	      'true'
	  %% Line 241
	  <'substring-before'> when 'true' ->
	      'true'
	  %% Line 242
	  <'substring-after'> when 'true' ->
	      'true'
	  %% Line 243
	  <'string-length'> when 'true' ->
	      'true'
	  %% Line 244
	  <'normalize-space'> when 'true' ->
	      'true'
	  %% Line 245
	  <'translate'> when 'true' ->
	      'true'
	  %% Line 246
	  <'boolean'> when 'true' ->
	      'true'
	  %% Line 247
	  <'not'> when 'true' ->
	      {'true','fn_not'}
	  %% Line 248
	  <'true'> when 'true' ->
	      {'true','fn_true'}
	  %% Line 249
	  <'false'> when 'true' ->
	      {'true','fn_false'}
	  %% Line 250
	  <'lang'> when 'true' ->
	      'true'
	  %% Line 251
	  <'number'> when 'true' ->
	      'true'
	  %% Line 252
	  <'sum'> when 'true' ->
	      'true'
	  %% Line 253
	  <'floor'> when 'true' ->
	      'true'
	  %% Line 254
	  <'ceiling'> when 'true' ->
	      'true'
	  %% Line 255
	  <'round'> when 'true' ->
	      'true'
	  %% Line 256
	  <_cor2> when 'true' ->
	      %% Line 257
	      'false'
	end
'last'/2 =
    %% Line 263
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'xmlContext',_cor5,_cor6,_cor7,Set,_cor8,_cor9,_cor10,_cor11},[]> when 'true' ->
	      let <_cor2> =
		  %% Line 264
		  call 'erlang':'length'
		      (Set)
	      in  %% Line 264
		  {'xmlObj','number',_cor2}
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'last',2}}] )
	    -| ['compiler_generated'] )
	end
'position'/2 =
    %% Line 267
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'xmlContext',_cor4,{'xmlNode',_cor5,_cor6,_cor7,Pos},_cor8,_cor9,_cor10,_cor11,_cor12,_cor13},[]> when 'true' ->
	      %% Line 268
	      {'xmlObj','number',Pos}
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'position',2}}] )
	    -| ['compiler_generated'] )
	end
'count'/2 =
    %% Line 271
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[Arg|[]]> when 'true' ->
	      let <_cor2> =
		  %% Line 272
		  apply 'mk_nodeset'/2
		      (C, Arg)
	      in  let <_cor3> =
		      %% Line 272
		      call 'erlang':'length'
			  (_cor2)
		  in  %% Line 272
		      {'xmlObj','number',_cor3}
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'count',2}}] )
	    -| ['compiler_generated'] )
	end
'id'/2 =
    %% Line 275
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[Arg|[]]> when 'true' ->
	      %% Line 276
	      ( case C of
		  ( <( {'xmlContext',_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_rec2}
		       -| ['compiler_generated'] )> when 'true' ->
			let <NS0> =
			    %% Line 277
			    [_rec2|[]]
			in  %% Line 279
			    ( case apply 'mk_object'/2
				       (C, Arg) of
				( <( {'xmlObj',_rec3,_cor53}
				     -| ['compiler_generated'] )> when 'true' ->
				      case _rec3 of
					%% Line 280
					<'nodeset'> when 'true' ->
					    let <_cor18> =
						%% Line 284
						( fun (_cor15,_cor14) ->
						      let <StrVal> =
							  %% Line 285
							  apply 'string_value'/1
							      (_cor15)
						      in  let <TokensX> =
							      %% Line 286
							      apply 'id_tokens'/1
								  (StrVal)
							  in  %% Line 287
							      call 'erlang':'++'
								  (TokensX, _cor14)
						  -| [{'id',{0,0,'-id/2-fun-0-'}}] )
					    in  let <IdTokens> =
						    %% Line 283
						    call 'lists':'foldl'
							(_cor18, %% Line 288
								 [], _cor53)
						in  let <_cor25> =
							%% Line 291
							( fun (_cor23) ->
							      %% Line 292
							      apply 'attribute_test'/3
								  (_cor23, 'id', IdTokens)
							  -| [{'id',{0,0,'-id/2-fun-1-'}}] )
						    in  let <_cor22> =
							    %% Line 293
							    call 'erlang':'setelement'
								(5, C, NS0)
							in  let <NewNodeSet> =
								%% Line 290
								call 'xmerl_xpath':'axis'
								    ('descendant_or_self', _cor25, _cor22)
							    in  %% Line 294
								{'xmlObj','nodeset',NewNodeSet}
					%% Line 295
					<_cor66> when 'true' ->
					    let <StrVal> =
						%% Line 296
						apply 'string_value'/1
						    (_cor53)
					    in  let <IdTokens> =
						    %% Line 297
						    apply 'id_tokens'/1
							(StrVal)
						in  %% Line 298
						    ( case _rec2 of
							( <( {'xmlNode',_cor69,_rec8,_cor70,_cor71}
							     -| ['compiler_generated'] )> when 'true' ->
							      ( case _rec8 of
								  ( <( {'xmlDocument',_rec7}
								       -| ['compiler_generated'] )> when 'true' ->
									let <NodeSet> =
									    [_rec7|[]]
									in  let <_cor40> =
										%% Line 300
										( fun (_cor37,_cor36) ->
										      %% Line 301
										      apply 'select_on_attribute'/4
											  (NodeSet, 'id', _cor37, _cor36)
										  -| [{'id',{0,0,'-id/2-fun-2-'}}] )
									    in  let <NewNodeSet> =
										    %% Line 299
										    call 'lists':'foldl'
											(_cor40, %% Line 302
												 [], %% Line 302
												     IdTokens)
										in  %% Line 303
										    {'xmlObj','nodeset',NewNodeSet}
								    -| ['compiler_generated'] )
								  ( <_cor73> when 'true' ->
									( call ( 'erlang'
										 -| ['compiler_generated'] ):( 'error'
													       -| ['compiler_generated'] )
									      (( {'badrecord','xmlDocument'}
										 -| ['compiler_generated'] ))
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
							( <_cor72> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','xmlNode'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
				      end
				  -| ['compiler_generated'] )
				( <_cor54> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','xmlObj'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor52> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','xmlContext'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor44,_cor43> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor44,_cor43})
		  -| [{'function_name',{'id',2}}] )
	    -| ['compiler_generated'] )
	end
'id_tokens'/1 =
    %% Line 307
    fun (_cor0) ->
	case _cor0 of
	  <Str = {'xmlObj','string',_cor4}> when 'true' ->
	      %% Line 308
	      call 'string':'tokens'
		  (_cor4, [32|[9|[10|[13]]]])
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'id_tokens',1}}] )
	    -| ['compiler_generated'] )
	end
'attribute_test'/3 =
    %% Line 312
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'xmlNode',_cor7,{'xmlElement',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,Attrs,_cor14,_cor15,_cor16,_cor17},_cor18,_cor19},%% Line 313
																    Key,%% Line 313
																	Vals> when 'true' ->
	      %% Line 314
	      case call 'lists':'keysearch'
		       (Key, 2, Attrs) of
		%% Line 315
		<{'value',{'xmlAttribute',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,V,_cor27}}> when 'true' ->
		    %% Line 316
		    call 'lists':'member'
			(V, Vals)
		%% Line 317
		<_cor28> when 'true' ->
		    %% Line 318
		    'false'
	      end
	  %% Line 320
	  <_X_Node,_X_Key,_X_Vals> when 'true' ->
	      %% Line 321
	      'false'
	end
'local-name'/2 =
    %% Line 326
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[]> when 'true' ->
	      let <_cor2> =
		  %% Line 327
		  apply 'default_nodeset'/1
		      (C)
	      in  %% Line 327
		  apply 'local_name1'/1
		      (_cor2)
	  %% Line 329
	  <C,[Arg|[]]> when 'true' ->
	      let <_cor3> =
		  %% Line 330
		  apply 'mk_nodeset'/2
		      (C, Arg)
	      in  %% Line 330
		  apply 'local_name1'/1
		      (_cor3)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'local-name',2}}] )
	    -| ['compiler_generated'] )
	end
'local_name1'/1 =
    %% Line 332
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 333
	      {'xmlObj','string',[]}
	  %% Line 334
	  <[{'xmlNode','element',El,_cor5,_cor6}|_cor7]> when 'true' ->
	      %% Line 335
	      case El of
		<{'xmlElement',Name,_cor8,NSI,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16}> when 'true' ->
		    %% Line 336
		    apply 'local_name2'/2
			(Name, NSI)
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor1})
		  -| ['compiler_generated'] )
	      end
	  %% Line 337
	  <[{'xmlNode','attribute',Att,_cor17,_cor18}|_cor19]> when 'true' ->
	      %% Line 338
	      case Att of
		<{'xmlAttribute',Name,_cor20,NSI,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26}> when 'true' ->
		    %% Line 339
		    apply 'local_name2'/2
			(Name, NSI)
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 340
	  <[{'xmlNode','namespace',N,_cor27,_cor28}|_cor29]> when 'true' ->
	      %% Line 341
	      case N of
		<{'xmlNsNode',_cor30,_cor31,Prefix,_cor32}> when 'true' ->
		    %% Line 342
		    {'xmlObj','string',Prefix}
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 343
	  <[{'xmlElement',Name,_cor33,NSI,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41}|_cor42]> when 'true' ->
	      %% Line 344
	      apply 'local_name2'/2
		  (Name, NSI)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'local_name1',1}}] )
	    -| ['compiler_generated'] )
	end
'local_name2'/2 =
    %% Line 345
    fun (_cor1,_cor0) ->
	%% Line 346
	case _cor0 of
	  %% Line 347
	  <{_X_Prefix,Local}> when 'true' ->
	      %% Line 348
	      {'xmlObj','string',Local}
	  %% Line 349
	  <[]> when 'true' ->
	      let <_cor2> =
		  %% Line 350
		  call 'erlang':'atom_to_list'
		      (_cor1)
	      in  %% Line 350
		  {'xmlObj','string',_cor2}
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor3})
	    -| ['compiler_generated'] )
	end
'namespace-uri'/2 =
    %% Line 354
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[]> when 'true' ->
	      let <_cor2> =
		  %% Line 355
		  apply 'default_nodeset'/1
		      (C)
	      in  %% Line 355
		  apply 'ns_uri'/1
		      (_cor2)
	  %% Line 357
	  <C,[Arg|[]]> when 'true' ->
	      let <_cor3> =
		  %% Line 358
		  apply 'mk_nodeset'/2
		      (C, Arg)
	      in  %% Line 358
		  apply 'ns_uri'/1
		      (_cor3)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'namespace-uri',2}}] )
	    -| ['compiler_generated'] )
	end
'ns_uri'/1 =
    %% Line 361
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 362
	      {'xmlObj','string',[]}
	  %% Line 363
	  <[{'xmlElement',_cor4,_cor5,NSI,NS,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12}|_cor13]> when 'true' ->
	      %% Line 364
	      apply 'ns_uri2'/2
		  (NSI, NS)
	  %% Line 365
	  <[{'xmlNode','element',El,_cor14,_cor15}|_cor16]> when 'true' ->
	      %% Line 366
	      case El of
		<{'xmlElement',_cor17,_cor18,NSI,NS,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}> when 'true' ->
		    %% Line 367
		    apply 'ns_uri2'/2
			(NSI, NS)
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor1})
		  -| ['compiler_generated'] )
	      end
	  %% Line 368
	  <[{'xmlNode','attribute',Att,_cor26,_cor27}|_cor28]> when 'true' ->
	      %% Line 369
	      case Att of
		<{'xmlAttribute',_cor29,_cor30,NSI,NS,_cor31,_cor32,_cor33,_cor34,_cor35}> when 'true' ->
		    %% Line 370
		    apply 'ns_uri2'/2
			(NSI, NS)
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 371
	  <_cor36> when 'true' ->
	      %% Line 372
	      {'xmlObj','string',[]}
	end
'ns_uri2'/2 =
    %% Line 374
    fun (_cor1,_cor0) ->
	%% Line 375
	case _cor1 of
	  %% Line 376
	  <{Prefix,_cor8}> when 'true' ->
	      %% Line 377
	      ( case _cor0 of
		  ( <( {'xmlNamespace',_cor9,_rec10}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'lists':'keysearch'
				 (Prefix, 1, _rec10) of
			  %% Line 378
			  <'false'> when 'true' ->
			      %% Line 379
			      {'xmlObj','string',[]}
			  %% Line 380
			  <{'value',{_X_K,V}}> when 'true' ->
			      %% Line 381
			      apply 'string_value'/1
				  (V)
			  ( <_cor4> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor4})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor10> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','xmlNamespace'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 383
	  <[]> when 'true' ->
	      %% Line 384
	      {'xmlObj','string',[]}
	  ( <_cor5> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor5})
	    -| ['compiler_generated'] )
	end
'name'/2 =
    %% Line 396
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[]> when 'true' ->
	      let <_cor2> =
		  %% Line 397
		  apply 'default_nodeset'/1
		      (C)
	      in  %% Line 397
		  apply 'name1'/1
		      (_cor2)
	  %% Line 398
	  <C,[Arg|[]]> when 'true' ->
	      let <_cor3> =
		  %% Line 399
		  apply 'mk_nodeset'/2
		      (C, Arg)
	      in  %% Line 399
		  apply 'name1'/1
		      (_cor3)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'name',2}}] )
	    -| ['compiler_generated'] )
	end
'name1'/1 =
    %% Line 400
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 401
	      {'xmlObj','string',[]}
	  %% Line 402
	  <NodeSet> when 'true' ->
	      let <_cor3> =
		  %% Line 404
		  case apply 'ns_uri'/1
			   (NodeSet) of
		    %% Line 405
		    <{'xmlObj',_cor8,NSStr}>
			when call 'erlang':'=/='
			      (NSStr,
			       []) ->
			let <_cor1> =
			    %% Line 406
			    call 'erlang':'++'
				(NSStr, [125])
			in  %% Line 406
			    [123|_cor1]
		    %% Line 407
		    <_cor9> when 'true' ->
			%% Line 408
			[]
		  end
	      in  %% Line 410
		  case apply 'local_name1'/1
			   (NodeSet) of
		    <{'xmlObj',_cor10,LocalName}> when 'true' ->
			let <_cor6> =
			    %% Line 411
			    call 'erlang':'++'
				(_cor3, LocalName)
			in  %% Line 411
			    {'xmlObj','string',_cor6}
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		      -| ['compiler_generated'] )
		  end
	end
'string'/2 =
    %% Line 418
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[]> when 'true' ->
	      let <_cor2> =
		  %% Line 419
		  apply 'default_nodeset'/1
		      (C)
	      in  %% Line 419
		  apply 'ns_string'/1
		      (_cor2)
	  %% Line 420
	  <C,[Arg|[]]> when 'true' ->
	      let <_cor3> =
		  %% Line 421
		  apply 'mk_object'/2
		      (C, Arg)
	      in  %% Line 421
		  apply 'string_value'/1
		      (_cor3)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'string',2}}] )
	    -| ['compiler_generated'] )
	end
'ns_string'/1 =
    %% Line 423
    fun (_cor0) ->
	case _cor0 of
	  <[Obj|_cor2]> when 'true' ->
	      %% Line 424
	      apply 'string_value'/1
		  (Obj)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'ns_string',1}}] )
	    -| ['compiler_generated'] )
	end
'string_value'/1 =
    %% Line 426
    fun (_cor0) ->
	case _cor0 of
	  <{'xmlObj','nodeset',[]}> when 'true' ->
	      %% Line 427
	      {'xmlObj','string',[]}
	  %% Line 428
	  <N = {'xmlObj','nodeset',_cor39}> when 'true' ->
	      let <_cor3> =
		  %% Line 429
		  call 'erlang':'hd'
		      (_cor39)
	      in  %% Line 429
		  apply 'string_value'/1
		      (_cor3)
	  %% Line 430
	  <N = {'xmlObj',_cor42,_cor43}> when 'true' ->
	      %% Line 431
	      apply 'string_value'/1
		  (_cor43)
	  %% Line 434
	  <A = {'xmlNode','attribute',_cor46,_cor47,_cor48}> when 'true' ->
	      %% Line 435
	      case _cor46 of
		<{'xmlAttribute',_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,AttVal,_cor60}> when 'true' ->
		    %% Line 436
		    {'xmlObj','string',AttVal}
		( <_cor8> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor8})
		  -| ['compiler_generated'] )
	      end
	  %% Line 437
	  <N = {'xmlNode','namespace',_cor61,_cor62,_cor63}> when 'true' ->
	      %% Line 438
	      case _cor61 of
		<{'xmlNsNode',_cor68,_cor69,_cor70,URI}> when 'true' ->
		    let <_cor12> =
			%% Line 439
			call 'erlang':'atom_to_list'
			    (URI)
		    in  %% Line 439
			{'xmlObj','string',_cor12}
		( <_cor11> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor11})
		  -| ['compiler_generated'] )
	      end
	  %% Line 440
	  <El = {'xmlNode','element',_cor71,_cor72,_cor73}> when 'true' ->
	      %% Line 441
	      case _cor71 of
		<{'xmlElement',_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,C,_cor85,_cor86,_cor87}> when 'true' ->
		    let <TextValue> =
			%% Line 442
			( fun (_cor17,_cor16) ->
			      case <_cor17,_cor16> of
				<{'xmlText',_cor88,_cor89,_cor90,T,_cor91},_X_Fun> when 'true' ->
				    T
				%% Line 443
				<{'xmlElement',_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,Cont,_cor99,_cor100,_cor101},Fun> when 'true' ->
				    apply Fun
					(Cont, Fun)
				%% Line 444
				<_cor102,_cor103> when 'true' ->
				    []
			      end
			  -| [{'id',{0,0,'-string_value/1-fun-0-'}}] )
		    in  let <TextDecendants> =
			    %% Line 446
			    ( fun (_cor21) ->
				  apply TextValue
				      (_cor21, TextValue)
			      -| [{'id',{0,0,'-string_value/1-fun-1-'}}] )
			in  let <_cor24> =
				%% Line 447
				call 'lists':'map'
				    (TextDecendants, C)
			    in  let <_cor25> =
				    %% Line 447
				    call 'lists':'flatten'
					(_cor24)
				in  %% Line 447
				    {'xmlObj','string',_cor25}
		( <_cor15> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor15})
		  -| ['compiler_generated'] )
	      end
	  %% Line 448
	  <T = {'xmlNode','text',_cor104,_cor105,_cor106}> when 'true' ->
	      %% Line 449
	      case _cor104 of
		<{'xmlText',_cor111,_cor112,_cor113,Txt,_cor114}> when 'true' ->
		    %% Line 450
		    {'xmlObj','string',Txt}
		( <_cor28> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor28})
		  -| ['compiler_generated'] )
	      end
	  %% Line 451
	  <T = {'xmlNode','comment',_cor115,_cor116,_cor117}> when 'true' ->
	      %% Line 452
	      case _cor115 of
		<{'xmlComment',_cor122,_cor123,_cor124,Txt}> when 'true' ->
		    %% Line 453
		    {'xmlObj','string',Txt}
		( <_cor31> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor31})
		  -| ['compiler_generated'] )
	      end
	  %% Line 454
	  <'infinity'> when 'true' ->
	      {'xmlObj','string',[73|[110|[102|[105|[110|[105|[116|[121]]]]]]]]}
	  %% Line 455
	  <'neg_infinity'> when 'true' ->
	      {'xmlObj','string',[45|[73|[110|[102|[105|[110|[105|[116|[121]]]]]]]]]}
	  %% Line 456
	  <A>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      let <_cor32> =
		  %% Line 457
		  call 'erlang':'atom_to_list'
		      (A)
	      in  %% Line 457
		  {'xmlObj','string',_cor32}
	  %% Line 458
	  <N>
	      when call 'erlang':'is_integer'
		    (_cor0) ->
	      let <_cor33> =
		  %% Line 459
		  call 'erlang':'integer_to_list'
		      (N)
	      in  %% Line 459
		  {'xmlObj','string',_cor33}
	  %% Line 460
	  <N>
	      when call 'erlang':'is_float'
		    (_cor0) ->
	      let <_cor34> =
		  %% Line 461
		  call 'erlang':'*'
		      (N, 10000000000000000)
	      in  let <N1> =
		      %% Line 461
		      call 'erlang':'round'
			  (_cor34)
		  in  let <_cor36> =
			  %% Line 462
			  call 'erlang':'integer_to_list'
			      (N1)
		      in  let <_cor37> =
			      %% Line 462
			      apply 'strip_zeroes'/1
				  (_cor36)
			  in  %% Line 462
			      {'xmlObj','string',_cor37}
	  %% Line 463
	  <Str>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 464
	      {'xmlObj','string',Str}
	  ( <_cor38> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor38})
		  -| [{'function_name',{'string_value',1}}] )
	    -| ['compiler_generated'] )
	end
'strip_zeroes'/1 =
    %% Line 466
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 467
	    call 'lists':'reverse'
		(_cor0)
	in  %% Line 467
	    apply 'strip_zs'/2
		(_cor1, 15)
'strip_zs'/2 =
    %% Line 469
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[H|T],0> when 'true' ->
	      let <_cor2> =
		  %% Line 470
		  call 'lists':'reverse'
		      (T)
	      in  %% Line 470
		  call 'erlang':'++'
		      (_cor2, [46|[H|[]]])
	  %% Line 471
	  <[48|T],N> when 'true' ->
	      let <_cor3> =
		  %% Line 472
		  call 'erlang':'-'
		      (N, 1)
	      in  %% Line 472
		  apply 'strip_zs'/2
		      (T, _cor3)
	  %% Line 473
	  <[H|T],N> when 'true' ->
	      let <_cor4> =
		  %% Line 474
		  call 'erlang':'-'
		      (N, 1)
	      in  %% Line 474
		  apply 'strip_zs'/3
		      (T, _cor4, [H|[]])
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'strip_zs',2}}] )
	    -| ['compiler_generated'] )
	end
'strip_zs'/3 =
    %% Line 476
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[H|T],0,Acc> when 'true' ->
	      let <_cor3> =
		  %% Line 477
		  call 'lists':'reverse'
		      (T)
	      in  %% Line 477
		  call 'erlang':'++'
		      (_cor3, [46|[H|Acc]])
	  %% Line 478
	  <[H|T],N,Acc> when 'true' ->
	      let <_cor4> =
		  %% Line 479
		  call 'erlang':'-'
		      (N, 1)
	      in  %% Line 479
		  apply 'strip_zs'/3
		      (T, _cor4, [H|Acc])
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'strip_zs',3}}] )
	    -| ['compiler_generated'] )
	end
'concat'/2 =
    %% Line 483
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,Args = [_cor12|[_cor13|_cor14]]> when 'true' ->
	      let <_cor7> =
		  %% Line 484
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor4) ->
				case _cor4 of
				  <[A|_cor3]> when 'true' ->
				      let <_cor5> =
					  apply 'mk_string'/2
					      (C, A)
				      in  let <_cor6> =
					      apply 'lc$^0'/1
						  (_cor3)
					  in  ( [_cor5|_cor6]
						-| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_cor4> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor4})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (Args)
		    -| ['list_comprehension'] )
	      in  let <_cor9> =
		      %% Line 485
		      call 'lists':'concat'
			  (_cor7)
		  in  %% Line 485
		      {'xmlObj','string',_cor9}
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'concat',2}}] )
	    -| ['compiler_generated'] )
	end
'starts-with'/2 =
    %% Line 488
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[A1|[A2|[]]]> when 'true' ->
	      let <_cor3> =
		  %% Line 489
		  apply 'mk_string'/2
		      (C, A2)
	      in  let <_cor2> =
		      %% Line 489
		      apply 'mk_string'/2
			  (C, A1)
		  in  let <_cor4> =
			  %% Line 489
			  call 'lists':'prefix'
			      (_cor3, _cor2)
		      in  %% Line 489
			  {'xmlObj','boolean',_cor4}
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'starts-with',2}}] )
	    -| ['compiler_generated'] )
	end
'contains'/2 =
    %% Line 492
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[A1|[A2|[]]]> when 'true' ->
	      let <_cor3> =
		  %% Line 493
		  apply 'mk_string'/2
		      (C, A1)
	      in  let <_cor2> =
		      %% Line 493
		      apply 'mk_string'/2
			  (C, A2)
		  in  let <Pos> =
			  %% Line 493
			  call 'string':'str'
			      (_cor3, _cor2)
		      in  let <_cor5> =
			      %% Line 494
			      call 'erlang':'>'
				  (Pos, 0)
			  in  %% Line 494
			      {'xmlObj','boolean',_cor5}
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'contains',2}}] )
	    -| ['compiler_generated'] )
	end
'substring-before'/2 =
    %% Line 497
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[A1|[A2|[]]]> when 'true' ->
	      let <S1> =
		  %% Line 498
		  apply 'mk_string'/2
		      (C, A1)
	      in  let <S2> =
		      %% Line 499
		      apply 'mk_string'/2
			  (C, A2)
		  in  let <Pos> =
			  %% Line 500
			  call 'string':'str'
			      (S1, S2)
		      in  let <_cor5> =
			      %% Line 501
			      call 'string':'substr'
				  (S1, 1, Pos)
			  in  %% Line 501
			      {'xmlObj','string',_cor5}
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'substring-before',2}}] )
	    -| ['compiler_generated'] )
	end
'substring-after'/2 =
    %% Line 504
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[A1|[A2|[]]]> when 'true' ->
	      let <S1> =
		  %% Line 505
		  apply 'mk_string'/2
		      (C, A1)
	      in  let <S2> =
		      %% Line 506
		      apply 'mk_string'/2
			  (C, A2)
		  in  %% Line 507
		      case call 'string':'str'
			       (S1, S2) of
			%% Line 508
			<0> when 'true' ->
			    %% Line 509
			    {'xmlObj','string',[]}
			%% Line 510
			<Pos> when 'true' ->
			    let <_cor4> =
				%% Line 511
				call 'string':'substr'
				    (S1, Pos)
			    in  %% Line 511
				{'xmlObj','string',_cor4}
		      end
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'substring-after',2}}] )
	    -| ['compiler_generated'] )
	end
'substring'/2 =
    %% Line 515
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[A1|[A2|[]]]> when 'true' ->
	      let <S> =
		  %% Line 516
		  apply 'mk_string'/2
		      (C, A1)
	      in  let <Pos> =
		      %% Line 517
		      apply 'mk_integer'/2
			  (C, A2)
		  in  let <_cor4> =
			  %% Line 518
			  call 'string':'substr'
			      (S, Pos)
		      in  %% Line 518
			  {'xmlObj','string',_cor4}
	  %% Line 519
	  <C,[A1|[A2|[A3|[]]]]> when 'true' ->
	      let <S> =
		  %% Line 520
		  apply 'mk_string'/2
		      (C, A1)
	      in  let <Pos> =
		      %% Line 521
		      apply 'mk_integer'/2
			  (C, A2)
		  in  let <Length> =
			  %% Line 522
			  apply 'mk_integer'/2
			      (C, A3)
		      in  let <_cor8> =
			      %% Line 523
			      call 'string':'substr'
				  (S, Pos, Length)
			  in  %% Line 523
			      {'xmlObj','string',_cor8}
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9})
		  -| [{'function_name',{'substring',2}}] )
	    -| ['compiler_generated'] )
	end
'string-length'/2 =
    %% Line 527
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C = {'xmlContext',_cor7,N,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13},[]> when 'true' ->
	      let <_cor2> =
		  %% Line 528
		  apply 'string_value'/1
		      (N)
	      in  let <_cor3> =
		      %% Line 528
		      apply 'mk_string'/2
			  (C, _cor2)
		  in  %% Line 528
		      call 'erlang':'length'
			  (_cor3)
	  %% Line 530
	  <C,[A|[]]> when 'true' ->
	      let <_cor4> =
		  %% Line 531
		  apply 'mk_string'/2
		      (C, A)
	      in  %% Line 531
		  call 'erlang':'length'
		      (_cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'string-length',2}}] )
	    -| ['compiler_generated'] )
	end
'normalize-space'/2 =
    %% Line 535
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C = {'xmlContext',_cor7,N,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13},[]> when 'true' ->
	      let <_cor2> =
		  %% Line 536
		  apply 'string_value'/1
		      (N)
	      in  let <_cor3> =
		      %% Line 536
		      apply 'mk_string'/2
			  (C, _cor2)
		  in  %% Line 536
		      apply 'normalize'/1
			  (_cor3)
	  %% Line 538
	  <C,[A|[]]> when 'true' ->
	      let <_cor4> =
		  %% Line 539
		  apply 'mk_string'/2
		      (C, A)
	      in  %% Line 539
		  apply 'normalize'/1
		      (_cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'normalize-space',2}}] )
	    -| ['compiler_generated'] )
	end
'translate'/2 =
    %% Line 543
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[A1|[A2|[A3|[]]]]> when 'true' ->
	      let <S1> =
		  %% Line 544
		  apply 'mk_string'/2
		      (C, A1)
	      in  let <S2> =
		      %% Line 545
		      apply 'mk_string'/2
			  (C, A2)
		  in  let <S3> =
			  %% Line 546
			  apply 'mk_string'/2
			      (C, A3)
		      in  let <_cor5> =
			      %% Line 547
			      apply 'translations'/2
				  (S2, S3)
			  in  let <_cor6> =
				  %% Line 547
				  apply 'translate1'/2
				      (S1, _cor5)
			      in  %% Line 547
				  {'xmlObj','string',_cor6}
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'translate',2}}] )
	    -| ['compiler_generated'] )
	end
'translate1'/2 =
    %% Line 549
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[H|T],Xls> when 'true' ->
	      %% Line 550
	      case call 'lists':'keysearch'
		       (H, 1, Xls) of
		%% Line 551
		<{'value',{_cor7,'remove'}}> when 'true' ->
		    %% Line 552
		    apply 'translate1'/2
			(T, Xls)
		%% Line 553
		<{'value',{_cor8,'replace',H1}}> when 'true' ->
		    let <_cor2> =
			%% Line 554
			apply 'translate1'/2
			    (T, Xls)
		    in  %% Line 554
			[H1|_cor2]
		%% Line 555
		<'false'> when 'true' ->
		    let <_cor3> =
			%% Line 556
			apply 'translate1'/2
			    (T, Xls)
		    in  %% Line 556
			[H|_cor3]
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 558
	  <[],_cor9> when 'true' ->
	      %% Line 559
	      []
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'translate1',2}}] )
	    -| ['compiler_generated'] )
	end
'translations'/2 =
    %% Line 561
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[H|T],[H1|T1]> when 'true' ->
	      let <_cor2> =
		  %% Line 562
		  apply 'translations'/2
		      (T, T1)
	      in  %% Line 562
		  [{H,'replace',H1}|_cor2]
	  %% Line 563
	  <Rest,[]> when 'true' ->
	      %% Line 564
	      ( letrec
		    'lc$^0'/1 =
			fun (_cor5) ->
			    case _cor5 of
			      <[X|_cor4]> when 'true' ->
				  let <_cor6> =
				      apply 'lc$^0'/1
					  (_cor4)
				  in  ( [{X,'remove'}|_cor6]
					-| ['compiler_generated'] )
			      <[]> when 'true' ->
				  []
			      ( <_cor5> when 'true' ->
				    ( primop 'match_fail'
					  ({'function_clause',_cor5})
				      -| [{'function_name',{'lc$^0',1}}] )
				-| ['compiler_generated'] )
			    end
		in  apply 'lc$^0'/1
			(Rest)
		-| ['list_comprehension'] )
	  %% Line 565
	  <[],_X_Rest> when 'true' ->
	      %% Line 566
	      []
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'translations',2}}] )
	    -| ['compiler_generated'] )
	end
'boolean'/2 =
    %% Line 571
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[Arg|[]]> when 'true' ->
	      let <_cor2> =
		  %% Line 572
		  apply 'mk_boolean'/2
		      (C, Arg)
	      in  %% Line 572
		  {'xmlObj','boolean',_cor2}
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'boolean',2}}] )
	    -| ['compiler_generated'] )
	end
'fn_not'/2 =
    %% Line 575
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[Arg|[]]> when 'true' ->
	      let <_cor2> =
		  %% Line 576
		  apply 'mk_boolean'/2
		      (C, Arg)
	      in  let <_cor3> =
		      %% Line 576
		      call 'erlang':'not'
			  (_cor2)
		  in  %% Line 576
		      {'xmlObj','boolean',_cor3}
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'fn_not',2}}] )
	    -| ['compiler_generated'] )
	end
'fn_true'/2 =
    %% Line 579
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_C,[]> when 'true' ->
	      %% Line 580
	      {'xmlObj','boolean','true'}
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'fn_true',2}}] )
	    -| ['compiler_generated'] )
	end
'fn_false'/2 =
    %% Line 583
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_C,[]> when 'true' ->
	      %% Line 584
	      {'xmlObj','boolean','false'}
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'fn_false',2}}] )
	    -| ['compiler_generated'] )
	end
'lang'/2 =
    %% Line 587
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C = {'xmlContext',_cor12,N,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18},[Arg|[]]> when 'true' ->
	      let <S> =
		  %% Line 588
		  apply 'mk_string'/2
		      (C, Arg)
	      in  let <_cor4> =
		      %% Line 590
		      case N of
			%% Line 591
			<{'xmlElement',_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,L,_cor27,_cor28}> when 'true' ->
			    L
			%% Line 592
			<{'xmlAttribute',_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,L,_cor35,_cor36}> when 'true' ->
			    L
			%% Line 593
			<{'xmlText',_cor37,_cor38,L,_cor39,_cor40}> when 'true' ->
			    L
			%% Line 594
			<{'xmlComment',_cor41,_cor42,L,_cor43}> when 'true' ->
			    L
			%% Line 595
			<_cor44> when 'true' ->
			    []
		      end
		  in  %% Line 597
		      case _cor4 of
			%% Line 598
			<[]> when 'true' ->
			    %% Line 599
			    {'xmlObj','boolean','false'}
			%% Line 600
			<_cor45> when 'true' ->
			    let <_cor7> =
				%% Line 601
				apply 'upcase'/1
				    (S)
			    in  let <_cor6> =
				    %% Line 601
				    apply 'upcase'/1
					(_cor4)
				in  let <_cor8> =
					%% Line 601
					apply 'match_lang'/2
					    (_cor7, _cor6)
				    in  %% Line 601
					{'xmlObj','boolean',_cor8}
		      end
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'lang',2}}] )
	    -| ['compiler_generated'] )
	end
'upcase'/1 =
    %% Line 605
    fun (_cor0) ->
	case _cor0 of
	  <[H|T]>
	      when let <_cor1> =
		    call 'erlang':'>='
			(H, 97)
		in  let <_cor2> =
			call 'erlang':'=<'
			    (H, 122)
		    in  call 'erlang':'and'
			    (_cor1, _cor2) ->
	      let <_cor4> =
		  %% Line 606
		  call 'erlang':'+'
		      (H, -32)
	      in  let <_cor5> =
		      %% Line 606
		      apply 'upcase'/1
			  (T)
		  in  %% Line 606
		      [_cor4|_cor5]
	  %% Line 607
	  <[H|T]> when 'true' ->
	      let <_cor6> =
		  %% Line 608
		  apply 'upcase'/1
		      (T)
	      in  %% Line 608
		  [H|_cor6]
	  %% Line 609
	  <[]> when 'true' ->
	      %% Line 610
	      []
	  ( <_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7})
		  -| [{'function_name',{'upcase',1}}] )
	    -| ['compiler_generated'] )
	end
'match_lang'/2 =
    %% Line 612
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[H|T],[_cor4|T1]>
	      when call 'erlang':'=:='
		    (_cor4,
		     H) ->
	      %% Line 613
	      apply 'match_lang'/2
		  (T, T1)
	  %% Line 614
	  <[],[45|_cor5]> when 'true' ->
	      %% Line 615
	      'true'
	  %% Line 616
	  <[],[]> when 'true' ->
	      %% Line 617
	      'true'
	  %% Line 618
	  <_cor6,_cor7> when 'true' ->
	      %% Line 619
	      'false'
	end
'number'/2 =
    %% Line 624
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C = {'xmlContext',_cor7,N,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13},[]> when 'true' ->
	      let <_cor2> =
		  %% Line 625
		  apply 'string'/2
		      (C, N)
	      in  let <_cor3> =
		      %% Line 625
		      apply 'mk_number'/2
			  (C, _cor2)
		  in  %% Line 625
		      {'xmlObj','number',_cor3}
	  %% Line 626
	  <C,[Arg|[]]> when 'true' ->
	      let <_cor4> =
		  %% Line 627
		  apply 'mk_number'/2
		      (C, Arg)
	      in  %% Line 627
		  {'xmlObj','number',_cor4}
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'number',2}}] )
	    -| ['compiler_generated'] )
	end
'sum'/2 =
    %% Line 630
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[Arg|[]]> when 'true' ->
	      let <NS> =
		  %% Line 631
		  apply 'mk_nodeset'/2
		      (C, Arg)
	      in  let <_cor9> =
		      %% Line 633
		      ( fun (_cor6,_cor5) ->
			    let <_cor3> =
				%% Line 634
				apply 'string'/2
				    (C, _cor6)
			    in  let <_cor4> =
				    %% Line 634
				    apply 'mk_number'/2
					(C, _cor3)
				in  %% Line 634
				    call 'erlang':'+'
					(_cor5, _cor4)
			-| [{'id',{0,0,'-sum/2-fun-0-'}}] )
		  in  %% Line 632
		      call 'lists':'foldl'
			  (_cor9, %% Line 635
				  0, %% Line 635
				     NS)
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'sum',2}}] )
	    -| ['compiler_generated'] )
	end
'floor'/2 =
    %% Line 637
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[Arg|[]]> when 'true' ->
	      let <Num> =
		  %% Line 638
		  apply 'mk_number'/2
		      (C, Arg)
	      in  %% Line 639
		  case call 'erlang':'trunc'
			   (Num) of
		    %% Line 640
		    <Num1>
			when call 'erlang':'>'
			      (Num1,
			       Num) ->
			let <_cor3> =
			    %% Line 641
			    call 'erlang':'-'
				(Num1, 1)
			in  %% Line 641
			    {'xmlObj','number',_cor3}
		    %% Line 642
		    <Num1> when 'true' ->
			%% Line 643
			{'xmlObj','number',Num1}
		  end
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'floor',2}}] )
	    -| ['compiler_generated'] )
	end
'ceiling'/2 =
    %% Line 646
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[Arg|[]]> when 'true' ->
	      let <Num> =
		  %% Line 647
		  apply 'mk_number'/2
		      (C, Arg)
	      in  %% Line 648
		  case call 'erlang':'trunc'
			   (Num) of
		    %% Line 649
		    <Num1>
			when call 'erlang':'<'
			      (Num1,
			       Num) ->
			let <_cor3> =
			    %% Line 650
			    call 'erlang':'+'
				(Num1, 1)
			in  %% Line 650
			    {'xmlObj','number',_cor3}
		    %% Line 651
		    <Num1> when 'true' ->
			%% Line 652
			{'xmlObj','number',Num1}
		  end
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'ceiling',2}}] )
	    -| ['compiler_generated'] )
	end
'round'/2 =
    %% Line 656
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C,[Arg|[]]> when 'true' ->
	      %% Line 657
	      case apply 'mk_number'/2
		       (C, Arg) of
		%% Line 658
		<A>
		    when call 'erlang':'is_atom'
			  (A) ->
		    %% Line 659
		    A
		%% Line 660
		<N>
		    when call 'erlang':'is_integer'
			  (N) ->
		    %% Line 661
		    N
		%% Line 662
		<F>
		    when call 'erlang':'is_float'
			  (F) ->
		    %% Line 663
		    call 'erlang':'round'
			(F)
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'round',2}}] )
	    -| ['compiler_generated'] )
	end
'select_on_attribute'/4 =
    %% Line 667
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[E = {'xmlElement',_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,Attrs,_cor21,_cor22,_cor23,_cor24}|T],K,V,Acc> when 'true' ->
	      %% Line 668
	      case call 'lists':'keysearch'
		       (K, 2, Attrs) of
		%% Line 669
		<{'value',{'xmlAttribute',_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33}}>
		    when call 'erlang':'=:='
			  (_cor32,
			   V) ->
		    let <Acc2> =
			%% Line 670
			apply 'select_on_attribute'/4
			    (_cor21, K, V, [E|Acc])
		    in  %% Line 671
			apply 'select_on_attribute'/4
			    (T, K, V, Acc2)
		%% Line 672
		<_cor45> when 'true' ->
		    let <Acc2> =
			%% Line 673
			apply 'select_on_attribute'/4
			    (_cor21, K, V, Acc)
		    in  %% Line 674
			apply 'select_on_attribute'/4
			    (T, K, V, Acc2)
	      end
	  %% Line 676
	  <[H = {'xmlText',_cor57,_cor58,_cor59,_cor60,_cor61}|T],K,V,Acc> when ( 'true'
										  -| ['compiler_generated'] ) ->
	      %% Line 677
	      apply 'select_on_attribute'/4
		  (T, K, V, Acc)
	  %% Line 678
	  <[],_X_K,_X_V,Acc> when 'true' ->
	      %% Line 679
	      Acc
	  ( <_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'select_on_attribute',4}}] )
	    -| ['compiler_generated'] )
	end
'mk_nodeset'/2 =
    %% Line 684
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_C0,{'xmlContext',_cor5,_cor6,_cor7,NS,_cor8,_cor9,_cor10,_cor11}> when 'true' ->
	      %% Line 685
	      NS
	  %% Line 686
	  <_X_C0,{'xmlObj','nodeset',NS}> when 'true' ->
	      %% Line 687
	      NS
	  %% Line 688
	  <C0,Expr> when 'true' ->
	      %% Line 689
	      case apply 'expr'/2
		       (Expr, C0) of
		%% Line 690
		<{'xmlObj','nodeset',NS}> when 'true' ->
		    %% Line 691
		    NS
		%% Line 692
		<Other> when 'true' ->
		    %% Line 693
		    call 'erlang':'exit'
			({'expected_nodeset',Other})
	      end
	end
'default_nodeset'/1 =
    %% Line 697
    fun (_cor0) ->
	case _cor0 of
	  <{'xmlContext',_cor2,N,_cor3,_cor4,_cor5,_cor6,_cor7,_cor8}> when 'true' ->
	      %% Line 698
	      [N|[]]
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'default_nodeset',1}}] )
	    -| ['compiler_generated'] )
	end
'mk_object'/2 =
    %% Line 701
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_C0,Obj = {'xmlObj',_cor4,_cor5}> when 'true' ->
	      %% Line 702
	      Obj
	  %% Line 703
	  <C0,Expr> when 'true' ->
	      %% Line 704
	      apply 'expr'/2
		  (Expr, C0)
	end
'mk_string'/2 =
    %% Line 707
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_C0,{'xmlObj','string',V}> when 'true' ->
	      %% Line 708
	      V
	  %% Line 709
	  <C0,Obj = {'xmlObj',_cor6,_cor7}> when 'true' ->
	      let <_cor2> =
		  %% Line 710
		  apply 'string_value'/1
		      (Obj)
	      in  %% Line 710
		  apply 'mk_string'/2
		      (C0, _cor2)
	  %% Line 711
	  <C0,Expr> when 'true' ->
	      let <_cor3> =
		  %% Line 712
		  apply 'expr'/2
		      (Expr, C0)
	      in  %% Line 712
		  apply 'mk_string'/2
		      (C0, _cor3)
	end
'mk_integer'/2 =
    %% Line 716
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_C0,{'xmlObj','number',V}>
	      when call 'erlang':'is_float'
		    (V) ->
	      %% Line 717
	      call 'erlang':'round'
		  (V)
	  %% Line 718
	  <_X_C0,{'xmlObj','number',V}>
	      when call 'erlang':'is_integer'
		    (V) ->
	      %% Line 719
	      V
	  %% Line 720
	  <C,Expr> when 'true' ->
	      let <_cor2> =
		  %% Line 721
		  apply 'expr'/2
		      (Expr, C)
	      in  %% Line 721
		  apply 'mk_integer'/2
		      (C, _cor2)
	end
'mk_number'/2 =
    %% Line 724
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_C,{'xmlObj','string',V}> when 'true' ->
	      %% Line 725
	      apply 'scan_number'/1
		  (V)
	  %% Line 726
	  <_X_C,{'xmlObj','number',V}> when 'true' ->
	      %% Line 727
	      V
	  %% Line 728
	  <C,N = {'xmlObj','nodeset',_cor6}> when 'true' ->
	      let <_cor2> =
		  %% Line 729
		  apply 'string_value'/1
		      (N)
	      in  %% Line 729
		  apply 'mk_number'/2
		      (C, _cor2)
	  %% Line 730
	  <_X_C,{'xmlObj','boolean','false'}> when 'true' ->
	      %% Line 731
	      0
	  %% Line 732
	  <_X_C,{'xmlObj','boolean','true'}> when 'true' ->
	      %% Line 733
	      1
	  %% Line 734
	  <C,Expr> when 'true' ->
	      let <_cor3> =
		  %% Line 735
		  apply 'expr'/2
		      (Expr, C)
	      in  %% Line 735
		  apply 'mk_number'/2
		      (C, _cor3)
	end
'mk_boolean'/2 =
    %% Line 738
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_C,{'xmlObj','boolean',V}> when 'true' ->
	      %% Line 739
	      V
	  %% Line 740
	  <_X_C,{'xmlObj','number',0}> when 'true' ->
	      %% Line 741
	      'false'
	  %% Line 742
	  <_X_C,{'xmlObj','number',V}>
	      when let <_cor2> =
		    call 'erlang':'is_float'
			(V)
		in  let <_cor3> =
			call 'erlang':'is_integer'
			    (V)
		    in  call 'erlang':'or'
			    (_cor2, _cor3) ->
	      %% Line 743
	      'true'
	  %% Line 744
	  <_X_C,{'xmlObj','nodeset',[]}> when 'true' ->
	      %% Line 745
	      'false'
	  %% Line 746
	  <_X_C,{'xmlObj','nodeset',_X_V}> when 'true' ->
	      %% Line 747
	      'true'
	  %% Line 748
	  <_X_C,{'xmlObj','string',[]}> when 'true' ->
	      %% Line 749
	      'false'
	  %% Line 750
	  <_X_C,{'xmlObj','string',_X_V}> when 'true' ->
	      %% Line 751
	      'true'
	  %% Line 752
	  <C,Expr> when 'true' ->
	      let <_cor4> =
		  %% Line 753
		  apply 'expr'/2
		      (Expr, C)
	      in  %% Line 753
		  apply 'mk_boolean'/2
		      (C, _cor4)
	end
'normalize'/1 =
    %% Line 756
    fun (_cor0) ->
	case _cor0 of
	  <[H|T]>
	      when let <_cor1> =
		    call 'erlang':'=='
			(H, 32)
		in  let <_cor2> =
			call 'erlang':'=='
			    (H, 13)
		    in  let <_cor3> =
			    call 'erlang':'=='
				(H, 10)
			in  let <_cor4> =
				call 'erlang':'=='
				    (H, 9)
			    in  let <_cor5> =
				    call 'erlang':'or'
					(_cor3, _cor4)
				in  let <_cor6> =
					call 'erlang':'or'
					    (_cor2, _cor5)
				    in  call 'erlang':'or'
					    (_cor1, _cor6) ->
	      %% Line 757
	      apply 'normalize'/1
		  (T)
	  %% Line 758
	  <Str> when 'true' ->
	      let <ContF> =
		  %% Line 759
		  ( fun (_cor9,_cor8,_cor7) ->
			%% Line 760
			apply _cor8
			    ()
		    -| [{'id',{0,0,'-normalize/1-fun-0-'}}] )
	      in  let <_cor16> =
		      %% Line 764
		      ( fun () ->
			    call 'erlang':'exit'
				('event_fun')
			-| [{'id',{0,0,'-normalize/1-fun-1-'}}] )
		  in  let <_cor15> =
			  %% Line 765
			  ( fun () ->
				call 'erlang':'exit'
				    ('hook_fun')
			    -| [{'id',{0,0,'-normalize/1-fun-2-'}}] )
		      in  let <_cor14> =
			      %% Line 763
			      ( fun () ->
				    call 'erlang':'exit'
					('acc_fun')
				-| [{'id',{0,0,'-normalize/1-fun-3-'}}] )
			  in  %% Line 762
			      apply 'normalize'/3
				  (Str, %% Line 763
					{'xmerl_scanner','undefined','no','prolog',[],'undefined','internal','true','false','false','undefined','false','false','undefined','undefined',[],'file_name_unknown','off',[],'preserve',_cor16,_cor15,_cor14,'undefined','undefined',%% Line 766
																																		ContF,'undefined','undefined','undefined','undefined',{'xmerl_fun_states','undefined','undefined','undefined','undefined','undefined'},[],'false','false',1,1,[]}, %% Line 767
																																																						   [])
	end
'normalize'/3 =
    %% Line 770
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Str = [H|_cor13],S,Acc>
	      when let <_cor3> =
		    call 'erlang':'=='
			(H, 32)
		in  let <_cor4> =
			call 'erlang':'=='
			    (H, 13)
		    in  let <_cor5> =
			    call 'erlang':'=='
				(H, 10)
			in  let <_cor6> =
				call 'erlang':'=='
				    (H, 9)
			    in  let <_cor7> =
				    call 'erlang':'or'
					(_cor5, _cor6)
				in  let <_cor8> =
					call 'erlang':'or'
					    (_cor4, _cor7)
				    in  call 'erlang':'or'
					    (_cor3, _cor8) ->
	      %% Line 771
	      case call 'xmerl_scan':'accumulate_whitespace'
		       (Str, S, 'preserve', Acc) of
		%% Line 772
		<{[32|Acc1],[],_X_S1}> when 'true' ->
		    %% Line 773
		    call 'lists':'reverse'
			(Acc1)
		%% Line 774
		<{Acc1,[],_X_S1}> when 'true' ->
		    %% Line 775
		    call 'lists':'reverse'
			(Acc1)
		%% Line 776
		<{Acc1,T1,S1}> when 'true' ->
		    %% Line 777
		    apply 'normalize'/3
			(T1, S1, Acc1)
		( <_cor9> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor9})
		  -| ['compiler_generated'] )
	      end
	  %% Line 779
	  <[H|T],S,Acc> when 'true' ->
	      %% Line 780
	      apply 'normalize'/3
		  (T, S, [H|Acc])
	  %% Line 781
	  <[],_X_S,Acc> when 'true' ->
	      %% Line 782
	      call 'lists':'reverse'
		  (Acc)
	  ( <_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10})
		  -| [{'function_name',{'normalize',3}}] )
	    -| ['compiler_generated'] )
	end
'scan_number'/1 =
    %% Line 785
    fun (_cor0) ->
	case _cor0 of
	  <[H|T]>
	      when let <_cor1> =
		    call 'erlang':'=='
			(H, 32)
		in  let <_cor2> =
			call 'erlang':'=='
			    (H, 13)
		    in  let <_cor3> =
			    call 'erlang':'=='
				(H, 10)
			in  let <_cor4> =
				call 'erlang':'=='
				    (H, 9)
			    in  let <_cor5> =
				    call 'erlang':'or'
					(_cor3, _cor4)
				in  let <_cor6> =
					call 'erlang':'or'
					    (_cor2, _cor5)
				    in  call 'erlang':'or'
					    (_cor1, _cor6) ->
	      %% Line 786
	      apply 'scan_number'/1
		  (T)
	  %% Line 787
	  <[45|T]> when 'true' ->
	      let <_cor7> =
		  catch
		      %% Line 788
		      call 'xmerl_xpath_scan':'scan_number'
			  (T)
	      in  %% Line 788
		  case _cor7 of
		    %% Line 789
		    <{{'number',N},Tail}> when 'true' ->
			%% Line 790
			case apply 'is_all_white'/1
				 (Tail) of
			  %% Line 791
			  <'true'> when 'true' ->
			      %% Line 792
			      N
			  %% Line 793
			  <'false'> when 'true' ->
			      %% Line 794
			      'NaN'
			  ( <_cor8> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor8})
			    -| ['compiler_generated'] )
			end
		    %% Line 796
		    <_X_Other> when 'true' ->
			%% Line 797
			'NaN'
		  end
	  %% Line 799
	  <T> when 'true' ->
	      let <_cor10> =
		  catch
		      %% Line 800
		      call 'xmerl_xpath_scan':'scan_number'
			  (T)
	      in  %% Line 800
		  case _cor10 of
		    %% Line 801
		    <{{'number',N},Tail}> when 'true' ->
			%% Line 802
			case apply 'is_all_white'/1
				 (Tail) of
			  %% Line 803
			  <'true'> when 'true' ->
			      %% Line 804
			      N
			  %% Line 805
			  <'false'> when 'true' ->
			      %% Line 806
			      'NaN'
			  ( <_cor11> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor11})
			    -| ['compiler_generated'] )
			end
		    %% Line 808
		    <_X_Other> when 'true' ->
			%% Line 809
			'NaN'
		  end
	end
'is_all_white'/1 =
    %% Line 812
    fun (_cor0) ->
	case _cor0 of
	  <[H|T]>
	      when let <_cor1> =
		    call 'erlang':'=='
			(H, 32)
		in  let <_cor2> =
			call 'erlang':'=='
			    (H, 13)
		    in  let <_cor3> =
			    call 'erlang':'=='
				(H, 10)
			in  let <_cor4> =
				call 'erlang':'=='
				    (H, 9)
			    in  let <_cor5> =
				    call 'erlang':'or'
					(_cor3, _cor4)
				in  let <_cor6> =
					call 'erlang':'or'
					    (_cor2, _cor5)
				    in  call 'erlang':'or'
					    (_cor1, _cor6) ->
	      %% Line 813
	      apply 'is_all_white'/1
		  (T)
	  %% Line 814
	  <[_X_H|_X_T]> when 'true' ->
	      %% Line 815
	      'false'
	  %% Line 816
	  <[]> when 'true' ->
	      %% Line 817
	      'true'
	  ( <_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7})
		  -| [{'function_name',{'is_all_white',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('xmerl_xpath_pred')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('xmerl_xpath_pred', _cor0)
end