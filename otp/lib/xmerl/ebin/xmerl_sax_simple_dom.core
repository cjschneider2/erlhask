module 'xmerl_sax_simple_dom' ['event'/3,
			       'get_dom'/1,
			       'initial_state'/0,
			       'module_info'/0,
			       'module_info'/1]
    attributes []
'initial_state'/0 =
    %% Line 82
    fun () ->
	%% Line 83
	{'xmerl_sax_simple_dom_state',[],[],[],[]}
'get_dom'/1 =
    %% Line 91
    fun (_cor0) ->
	case _cor0 of
	  <{'xmerl_sax_simple_dom_state',_cor2,_cor3,_cor4,Dom}> when 'true' ->
	      %% Line 92
	      Dom
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'get_dom',1}}] )
	    -| ['compiler_generated'] )
	end
'event'/3 =
    %% Line 100
    fun (_cor2,_cor1,_cor0) ->
	%% Line 101
	apply 'build_dom'/2
	    (_cor2, _cor0)
'build_dom'/2 =
    %% Line 118
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'startDocument',State> when 'true' ->
	      %% Line 119
	      case State of
		<{'xmerl_sax_simple_dom_state',_cor79,_cor80,_cor81,_cor82}> when 'true' ->
		    call 'erlang':'setelement'
			(5, State, ['startDocument'])
		( <_cor83> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','xmerl_sax_simple_dom_state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 120
	  <'endDocument',State = %% Line 121
				 {'xmerl_sax_simple_dom_state',_cor84,_cor85,_cor86,[{Tag,Attributes,Content}|D]}> when 'true' ->
	      %% Line 122
	      case D of
		%% Line 123
		<['startDocument']> when 'true' ->
		    let <_cor4> =
			%% Line 125
			call 'lists':'reverse'
			    (Content)
		    in  let <_rec1> =
			    %% Line 124
			    [{Tag,Attributes,_cor4}|%% Line 125
						    []]
			in  %% Line 124
			    call 'erlang':'setelement'
				(5, State, _rec1)
		%% Line 126
		<[Decl = {'xmlDecl',_cor92,_cor93,_cor94,_cor95}|['startDocument']]> when 'true' ->
		    let <_cor8> =
			%% Line 128
			call 'lists':'reverse'
			    (Content)
		    in  let <_rec3> =
			    %% Line 127
			    [Decl|[{Tag,Attributes,_cor8}|%% Line 128
							  []]]
			in  %% Line 127
			    call 'erlang':'setelement'
				(5, State, _rec3)
		%% Line 129
		<_cor101> when 'true' ->
		    do  %% Line 130
			call 'io':'format'
			    ([126|[112|[10]]], [D|[]])
			%% Line 131
			call 'erlang':'throw'
			    ({'sax_simple_dom_error',[119|[101|[39|[114|[101|[32|[110|[111|[116|[32|[97|[116|[32|[101|[110|[100|[32|[116|[104|[101|[32|[100|[111|[99|[117|[109|[101|[110|[116|[32|[119|[104|[101|[110|[32|[101|[110|[100|[68|[111|[99|[117|[109|[101|[110|[116|[32|[101|[118|[101|[110|[116|[32|[105|[115|[32|[101|[110|[99|[111|[117|[110|[116|[101|[114|[101|[100|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]})
	      end
	  %% Line 136
	  <{'startElement',_X_Uri,LocalName,_X_QName,Attributes},State = %% Line 137
									 {'xmerl_sax_simple_dom_state',T,CN,_cor102,D}> when 'true' ->
	      let <A> =
		  %% Line 139
		  apply 'parse_attributes'/2
		      (LocalName, Attributes)
	      in  let <Num,NewCN> =
		      %% Line 141
		      case CN of
			%% Line 142
			<[]> when 'true' ->
			    %% Line 143
			    <1,[1]>
			%% Line 144
			<[N|CNs]> when 'true' ->
			    let <_cor14> =
				%% Line 145
				call 'erlang':'+'
				    (N, 1)
			    in  %% Line 145
				<N,[1|[_cor14|CNs]]>
			( <_cor15> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor15})
			  -| ['compiler_generated'] )
		      end
		  in  let <_cor18> =
			  %% Line 148
			  call 'erlang':'list_to_atom'
			      (LocalName)
		      in  let <_rec5> =
			      %% Line 148
			      [{_cor18,Num}|T]
			  in  let <_cor21> =
				  %% Line 150
				  call 'erlang':'list_to_atom'
				      (LocalName)
			      in  let <_cor20> =
				      %% Line 151
				      call 'lists':'reverse'
					  (A)
				  in  let <_rec6> =
					  %% Line 150
					  [{_cor21,_cor20,%% Line 152
							  []}|%% Line 153
							      D]
				      in  %% Line 150
					  {'xmerl_sax_simple_dom_state',_rec5,NewCN,_cor102,_rec6}
	  %% Line 154
	  <{'endElement',_X_Uri,LocalName,_X_QName},State = %% Line 155
							    {'xmerl_sax_simple_dom_state',[_cor104|T],%% Line 156
												      [_cor105|CN],_cor106,%% Line 157
															   [{CName,CAttributes,CContent}|%% Line 158
																			 [{PName,PAttributes,PContent}|D]]}> when 'true' ->
	      %% Line 159
	      case call 'erlang':'list_to_atom'
		       (LocalName) of
		%% Line 160
		<_cor107>
		    when call 'erlang':'=:='
			  (_cor107,
			   CName) ->
		    let <_cor25> =
			%% Line 165
			call 'lists':'reverse'
			    (CContent)
		    in  let <_rec12> =
			    %% Line 163
			    [{PName,PAttributes,%% Line 164
						[{CName,CAttributes,_cor25}|%% Line 166
									    PContent]}|%% Line 167
										       D]
			in  %% Line 163
			    {'xmerl_sax_simple_dom_state',T,CN,_cor106,_rec12}
		%% Line 168
		<_cor109> when 'true' ->
		    let <_cor29> =
			%% Line 169
			call 'erlang':'++'
			    ([32|[98|[117|[116|[32|[101|[120|[112|[101|[99|[116|[101|[100|[58|[32]]]]]]]]]]]]]]], %% Line 170
														  CName)
		    in  let <_cor30> =
			    %% Line 169
			    call 'erlang':'++'
				(LocalName, _cor29)
			in  let <_cor31> =
				%% Line 169
				call 'erlang':'++'
				    ([71|[111|[116|[32|[101|[110|[100|[32|[111|[102|[32|[101|[108|[101|[109|[101|[110|[116|[58|[32]]]]]]]]]]]]]]]]]]]], _cor30)
			    in  %% Line 169
				call 'erlang':'throw'
				    ({'sax_simple_dom_error',_cor31})
	      end
	  %% Line 175
	  <{'characters',String},State = %% Line 176
					 {'xmerl_sax_simple_dom_state',_X_T,%% Line 177
									    [Num|CN],_cor110,%% Line 178
											     [{Name,Attributes,Content}|D]}> when 'true' ->
	      let <_cor33> =
		  %% Line 179
		  call 'erlang':'+'
		      (Num, 1)
	      in  let <_rec18> =
		      %% Line 179
		      [_cor33|CN]
		  in  let <_rec19> =
			  %% Line 180
			  [{Name,Attributes,[String|Content]}|D]
		      in  let <_cor37> =
			      %% Line 180
			      call 'erlang':'setelement'
				  (5, State, _rec19)
			  in  %% Line 179
			      call 'erlang':'setelement'
				  (3, _cor37, _rec18)
	  %% Line 182
	  <{'ignorableWhitespace',String},State = %% Line 183
						  {'xmerl_sax_simple_dom_state',T,%% Line 184
										  [Num|CN],_cor116,%% Line 185
												   [{Name,Attributes,Content}|D]}> when 'true' ->
	      let <_cor39> =
		  %% Line 186
		  call 'erlang':'+'
		      (Num, 1)
	      in  let <_rec21> =
		      %% Line 186
		      [_cor39|CN]
		  in  let <_rec22> =
			  %% Line 187
			  [{Name,Attributes,[{'xmlText',T,Num,[],String,'text'}|Content]}|D]
		      in  let <_cor43> =
			      %% Line 187
			      call 'erlang':'setelement'
				  (5, State, _rec22)
			  in  %% Line 186
			      call 'erlang':'setelement'
				  (3, _cor43, _rec21)
	  %% Line 191
	  <{'comment',String},State = %% Line 192
				      {'xmerl_sax_simple_dom_state',T,%% Line 193
								      [Num|CN],_cor122,%% Line 194
										       [Current = {'xmlElement',_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_cor129,C,_cor130,_cor131,_cor132}|D]}> when 'true' ->
	      let <_cor45> =
		  %% Line 195
		  call 'erlang':'+'
		      (Num, 1)
	      in  let <_rec24> =
		      %% Line 195
		      [_cor45|CN]
		  in  let <_rec27> =
			  %% Line 196
			  [{'xmlComment',T,Num,[],String}|C]
		      in  let <_cor50> =
			      %% Line 196
			      call 'erlang':'setelement'
				  (9, Current, _rec27)
			  in  let <_rec25> =
				  %% Line 196
				  [_cor50|D]
			      in  let <_cor53> =
				      %% Line 196
				      call 'erlang':'setelement'
					  (5, State, _rec25)
				  in  %% Line 195
				      call 'erlang':'setelement'
					  (3, _cor53, _rec24)
	  %% Line 200
	  <{'startPrefixMapping',[],_X_Uri},State> when 'true' ->
	      %% Line 201
	      State
	  %% Line 202
	  <{'startPrefixMapping',Prefix,Uri},State = %% Line 203
						     {'xmerl_sax_simple_dom_state',_cor150,_cor151,NS,_cor152}> when 'true' ->
	      let <_cor55> =
		  %% Line 204
		  call 'erlang':'list_to_atom'
		      (Uri)
	      in  let <_rec29> =
		      %% Line 204
		      [{Prefix,_cor55}|NS]
		  in  %% Line 204
		      call 'erlang':'setelement'
			  (4, State, _rec29)
	  %% Line 205
	  <{'endPrefixMapping',Prefix},State = %% Line 206
					       {'xmerl_sax_simple_dom_state',_cor158,_cor159,[{_cor160,_cor161}|NS],_cor162}>
	      when call 'erlang':'=:='
		    (_cor160,
		     %% Line 206
		     Prefix) ->
	      %% Line 207
	      call 'erlang':'setelement'
		  (4, State, NS)
	  %% Line 211
	  <{'processingInstruction',[120|[109|[108]]],PiData},State = %% Line 212
								      {'xmerl_sax_simple_dom_state',_cor168,_cor169,_cor170,D}> when 'true' ->
	      %% Line 213
	      case apply 'find_and_remove_attribute'/3
		       ([118|[101|[114|[115|[105|[111|[110]]]]]]], PiData, []) of
		<{Vsn,PiData1}> when 'true' ->
		    %% Line 214
		    case apply 'find_and_remove_attribute'/3
			     ([101|[110|[99|[111|[100|[105|[110|[103]]]]]]]], PiData1, []) of
		      <{Enc,PiData2}> when 'true' ->
			  %% Line 215
			  case apply 'find_and_remove_attribute'/3
				   ([115|[116|[97|[110|[100|[97|[108|[111|[110|[101]]]]]]]]]], PiData2, 'yes') of
			    <{Standalone,PiData3}> when 'true' ->
				let <_rec32> =
				    %% Line 216
				    [{'xmlDecl',Vsn,Enc,Standalone,PiData3}|D]
				in  %% Line 216
				    call 'erlang':'setelement'
					(5, State, _rec32)
			    ( <_cor63> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor63})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor62> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor62})
			-| ['compiler_generated'] )
		    end
		( <_cor61> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor61})
		  -| ['compiler_generated'] )
	      end
	  %% Line 217
	  <{'processingInstruction',PiTarget,PiData},State = %% Line 218
							     {'xmerl_sax_simple_dom_state',_cor176,[Num|CN],_cor177,%% Line 219
														    [Current = {'xmlElement',_cor178,_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,C,_cor185,_cor186,_cor187}|D]}> when 'true' ->
	      let <_cor67> =
		  %% Line 220
		  call 'erlang':'+'
		      (Num, 1)
	      in  let <_rec34> =
		      %% Line 220
		      [_cor67|CN]
		  in  let <_rec37> =
			  %% Line 221
			  [{'xmlPI',PiTarget,Num,PiData}|%% Line 222
							 C]
		      in  let <_cor72> =
			      %% Line 221
			      call 'erlang':'setelement'
				  (9, Current, _rec37)
			  in  let <_rec35> =
				  %% Line 221
				  [_cor72|%% Line 222
					  D]
			      in  let <_cor75> =
				      %% Line 221
				      call 'erlang':'setelement'
					  (5, State, _rec35)
				  in  %% Line 220
				      call 'erlang':'setelement'
					  (3, _cor75, _rec34)
	  %% Line 227
	  <_X_E,State> when 'true' ->
	      %% Line 228
	      State
	end
'parse_attributes'/2 =
    %% Line 240
    fun (_cor1,_cor0) ->
	%% Line 241
	apply 'parse_attributes'/4
	    (_cor1, _cor0, 1, [])
'parse_attributes'/4 =
    %% Line 243
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_cor10,[],_cor11,Acc> when 'true' ->
	      %% Line 244
	      Acc
	  %% Line 245
	  <ElName,[{_X_Uri,_X_Prefix,LocalName,AttrValue}|As],N,Acc> when 'true' ->
	      let <_cor5> =
		  %% Line 246
		  call 'erlang':'+'
		      (N, 1)
	      in  let <_cor4> =
		      %% Line 246
		      call 'erlang':'list_to_atom'
			  (LocalName)
		  in  %% Line 246
		      apply 'parse_attributes'/4
			  (ElName, As, _cor5, [{_cor4,AttrValue}|Acc])
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'parse_attributes',4}}] )
	    -| ['compiler_generated'] )
	end
'find_and_remove_attribute'/3 =
    %% Line 256
    fun (_cor2,_cor1,_cor0) ->
	%% Line 257
	case call 'lists':'keysearch'
		 (_cor2, 1, _cor1) of
	  %% Line 258
	  <{'value',{_cor8,Value}}>
	      when call 'erlang':'=:='
		    (_cor8,
		     _cor2) ->
	      let <Data2> =
		  %% Line 259
		  call 'lists':'keydelete'
		      (_cor2, 1, _cor1)
	      in  %% Line 260
		  {Value,Data2}
	  %% Line 261
	  <'false'> when 'true' ->
	      %% Line 262
	      {_cor0,_cor1}
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor4})
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('xmerl_sax_simple_dom')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('xmerl_sax_simple_dom', _cor0)
end