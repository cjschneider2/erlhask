module 'tracer' ['module_info'/0,
		 'module_info'/1,
		 'post'/4,
		 'pre'/3]
    attributes []
'pre'/3 =
    %% Line 44
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <M,F,[State|[I|[]]]>
	      when call 'erlang':'is_integer'
		    (I) ->
	      let <_cor3> =
		  %% Line 45
		  call 'erlang':'self'
		      ()
	      in  do  %% Line 45
		      call 'io':'format'
			  ([80|[114|[101|[99|[111|[110|[100|[32|[99|[97|[108|[108|[101|[100|[32|[105|[110|[32|[112|[114|[111|[99|[101|[115|[115|[32|[126|[112|[58|[32|[126|[115|[58|[126|[115|[40|[41|[32|[126|[112|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor3|[M|[F|[[State|[I|[]]]|[]]]]])
		      %% Line 46
		      'ok'
	  %% Line 47
	  <_X_M,_X_F,_X_A> when 'true' ->
	      %% Line 48
	      call 'corba':'raise'
		  ({'m_NotAnInteger',[73|[68|[76|[58|[109|[47|[78|[111|[116|[65|[110|[73|[110|[116|[101|[103|[101|[114|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]})
	end
'post'/4 =
    %% Line 50
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 51
	    call 'erlang':'self'
		()
	in  do  %% Line 51
		call 'io':'format'
		    ([80|[111|[115|[116|[99|[111|[110|[100|[32|[99|[97|[108|[108|[101|[100|[32|[105|[110|[32|[112|[114|[111|[99|[101|[115|[115|[32|[126|[112|[58|[32|[126|[115|[58|[126|[115|[40|[41|[32|[126|[112|[32|[126|[112|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor4|[_cor3|[_cor2|[_cor1|[_cor0|[]]]]]])
		%% Line 52
		'ok'
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('tracer')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('tracer', _cor0)
end