module 'oe_ex' ['module_info'/0,
		'module_info'/1,
		'oe_dependency'/0,
		'oe_get_module'/5,
		'oe_register'/0,
		'oe_unregister'/0]
    attributes [%% Line 15
		'ic_compiled' =
		    %% Line 15
		    [52|[95|[51|[95|[53]]]]]]
'oe_register'/0 =
    %% Line 27
    fun () ->
	let <OE_IFR> =
	    %% Line 28
	    call 'orber_ifr':'find_repository'
		()
	in  do  %% Line 30
		apply 'register_tests'/1
		    (OE_IFR)
		let <_X_OE_1> =
		    %% Line 32
		    apply 'oe_get_top_module'/4
			(OE_IFR, [73|[68|[76|[58|[109|[58|[49|[46|[48]]]]]]]]], [109], [49|[46|[48]]])
		in  do  %% Line 34
			call 'orber_ifr':'ModuleDef_create_exception'
			    (_X_OE_1, [73|[68|[76|[58|[109|[47|[78|[111|[116|[65|[110|[73|[110|[116|[101|[103|[101|[114|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]], [78|[111|[116|[65|[110|[73|[110|[116|[101|[103|[101|[114]]]]]]]]]]]], [49|[46|[48]]], [])
			let <_X_OE_2> =
			    %% Line 36
			    call 'orber_ifr':'ModuleDef_create_interface'
				(_X_OE_1, [73|[68|[76|[58|[109|[47|[105|[58|[49|[46|[48]]]]]]]]]]], [105], [49|[46|[48]]], [])
			in  let <_cor4> =
				%% Line 38
				call 'orber_ifr':'Repository_create_idltype'
				    (OE_IFR, 'tk_short')
			    in  let <_cor3> =
				    %% Line 38
				    call 'orber_ifr':'Repository_create_idltype'
					(OE_IFR, 'tk_short')
				in  do  %% Line 38
					call 'orber_ifr':'InterfaceDef_create_operation'
					    (_X_OE_2, [73|[68|[76|[58|[109|[47|[105|[47|[102|[58|[49|[46|[48]]]]]]]]]]]]], [102], [49|[46|[48]]], _cor4, 'OP_NORMAL', [{'parameterdescription',[105],'tk_short',_cor3,'PARAM_IN'}|%% Line 39
																												  []], %% Line 39
																												       [], %% Line 39
																													   [])
					let <_cor6> =
					    %% Line 41
					    call 'orber_ifr':'Repository_create_idltype'
						(OE_IFR, 'tk_void')
					in  let <_cor5> =
						%% Line 41
						call 'orber_ifr':'Repository_create_idltype'
						    (OE_IFR, 'tk_long')
					    in  do  %% Line 41
						    call 'orber_ifr':'InterfaceDef_create_operation'
							(_X_OE_2, [73|[68|[76|[58|[109|[47|[105|[47|[103|[58|[49|[46|[48]]]]]]]]]]]]], [103], [49|[46|[48]]], _cor6, 'OP_ONEWAY', [{'parameterdescription',[105],'tk_long',_cor5,'PARAM_IN'}|%% Line 42
																													     []], %% Line 42
																														  [], %% Line 42
																														      [])
						    %% Line 44
						    'ok'
'register_tests'/1 =
    %% Line 48
    fun (_cor0) ->
	do  %% Line 49
	    apply 're_register_test'/1
		(_cor0)
	    %% Line 50
	    apply 'include_reg_test'/1
		(_cor0)
're_register_test'/1 =
    %% Line 54
    fun (_cor0) ->
	%% Line 55
	case call 'orber_ifr':'Repository_lookup_id'
		 (_cor0, [73|[68|[76|[58|[109|[47|[78|[111|[116|[65|[110|[73|[110|[116|[101|[103|[101|[114|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]) of
	  %% Line 56
	  <[]> when 'true' ->
	      %% Line 57
	      'true'
	  %% Line 58
	  <_cor3> when 'true' ->
	      %% Line 59
	      call 'erlang':'exit'
		  ({'allready_registered',[73|[68|[76|[58|[109|[47|[78|[111|[116|[65|[110|[73|[110|[116|[101|[103|[101|[114|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]]})
	end
'include_reg_test'/1 =
    %% Line 64
    fun (_cor0) ->
	'true'
'oe_get_top_module'/4 =
    %% Line 68
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 69
	case call 'orber_ifr':'Repository_lookup_id'
		 (_cor3, _cor2) of
	  %% Line 70
	  <[]> when 'true' ->
	      %% Line 71
	      call 'orber_ifr':'Repository_create_module'
		  (_cor3, _cor2, _cor1, _cor0)
	  %% Line 72
	  <Mod> when 'true' ->
	      %% Line 73
	      Mod
	end
'oe_get_module'/5 =
    %% Line 77
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 78
	case call 'orber_ifr':'Repository_lookup_id'
		 (_cor4, _cor2) of
	  %% Line 79
	  <[]> when 'true' ->
	      %% Line 80
	      call 'orber_ifr':'ModuleDef_create_module'
		  (_cor3, _cor2, _cor1, _cor0)
	  %% Line 81
	  <Mod> when 'true' ->
	      %% Line 82
	      Mod
	end
'oe_unregister'/0 =
    %% Line 87
    fun () ->
	let <OE_IFR> =
	    %% Line 88
	    call 'orber_ifr':'find_repository'
		()
	in  do  %% Line 90
		apply 'oe_destroy'/2
		    (OE_IFR, [73|[68|[76|[58|[109|[47|[105|[58|[49|[46|[48]]]]]]]]]]])
		do  %% Line 91
		    apply 'oe_destroy'/2
			(OE_IFR, [73|[68|[76|[58|[109|[47|[78|[111|[116|[65|[110|[73|[110|[116|[101|[103|[101|[114|[58|[49|[46|[48]]]]]]]]]]]]]]]]]]]]]])
		    do  %% Line 92
			apply 'oe_destroy_if_empty'/2
			    (OE_IFR, [73|[68|[76|[58|[109|[58|[49|[46|[48]]]]]]]]])
			%% Line 93
			'ok'
'oe_destroy_if_empty'/2 =
    %% Line 96
    fun (_cor1,_cor0) ->
	%% Line 97
	case call 'orber_ifr':'Repository_lookup_id'
		 (_cor1, _cor0) of
	  %% Line 98
	  <[]> when 'true' ->
	      %% Line 99
	      'ok'
	  %% Line 100
	  <Ref> when 'true' ->
	      %% Line 101
	      case call 'orber_ifr':'contents'
		       (Ref, 'dk_All', 'true') of
		%% Line 102
		<[]> when 'true' ->
		    do  %% Line 103
			call 'orber_ifr':'destroy'
			    (Ref)
			%% Line 104
			'ok'
		%% Line 105
		<_cor6> when 'true' ->
		    %% Line 106
		    'ok'
	      end
	end
'oe_destroy'/2 =
    %% Line 110
    fun (_cor1,_cor0) ->
	%% Line 111
	case call 'orber_ifr':'Repository_lookup_id'
		 (_cor1, _cor0) of
	  %% Line 112
	  <[]> when 'true' ->
	      %% Line 113
	      'ok'
	  %% Line 114
	  <Ref> when 'true' ->
	      do  %% Line 115
		  call 'orber_ifr':'destroy'
		      (Ref)
		  %% Line 116
		  'ok'
	end
'oe_dependency'/0 =
    %% Line 122
    fun () ->
	%% Line 124
	[]
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('oe_ex')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('oe_ex', _cor0)
end