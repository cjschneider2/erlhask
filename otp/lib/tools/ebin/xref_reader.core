module 'xref_reader' ['module'/5,
		      'module_info'/0,
		      'module_info'/1]
    attributes []
'module'/5 =
    %% Line 59
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor9> =
	    %% Line 60
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor7) ->
			  case _cor7 of
			    <[{'attribute',_X_Line,Attr,V}|_cor6]> when 'true' ->
				let <_cor8> =
				    apply 'lc$^0'/1
					(_cor6)
				in  ( [{Attr,V}|_cor8]
				      -| ['compiler_generated'] )
			    ( <[_cor5|_cor6]> when 'true' ->
				  apply 'lc$^0'/1
				      (_cor6)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor7> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor7})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (_cor3)
	      -| ['list_comprehension'] )
	in  let <IsAbstract> =
		%% Line 61
		call 'xref_utils':'is_abstract_module'
		    (_cor9)
	    in  let <S> =
		    %% Line 62
		    {'xrefr',_cor4,[],[],[],[],[],[],_cor1,_cor0,_cor2,%% Line 63
								       IsAbstract,[],[],[],[],[],[]}
		in  %% Line 64
		    apply 'forms'/2
			(_cor3, S)
'forms'/2 =
    %% Line 66
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[F|Fs],S> when 'true' ->
	      let <S1> =
		  %% Line 67
		  apply 'form'/2
		      (F, S)
	      in  %% Line 68
		  apply 'forms'/2
		      (Fs, S1)
	  %% Line 69
	  <[],S> when 'true' ->
	      %% Line 73
	      case S of
		<{'xrefr',M,_cor10,DefAt,LCallAt,XCallAt,LC,XC,X,Depr,_cor11,_cor12,_cor13,_cor14,U,AL,AX,B}> when 'true' ->
		    let <_cor6> =
			%% Line 74
			call 'lists':'reverse'
			    (AL)
		    in  let <_cor5> =
			    %% Line 74
			    call 'lists':'reverse'
				(AX)
			in  let <_cor4> =
				%% Line 74
				call 'lists':'reverse'
				    (B)
			    in  let <Attrs> = {_cor6,_cor5,_cor4}
				in  %% Line 75
				    {'ok',M,{DefAt,LCallAt,XCallAt,LC,XC,X,Attrs,Depr},U}
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8})
		  -| [{'function_name',{'forms',2}}] )
	    -| ['compiler_generated'] )
	end
'form'/2 =
    %% Line 77
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'attribute',Line,'xref',Calls},S> when 'true' ->
	      %% Line 79
	      case S of
		<{'xrefr',M,Fun,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,L,X,B}> when 'true' ->
		    %% Line 80
		    apply 'attr'/8
			(Calls, Line, M, Fun, L, X, B, S)
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 81
	  <{'attribute',_X_Line,_X_Attr,_X_Val},S> when 'true' ->
	      %% Line 82
	      S
	  %% Line 83
	  <{'function',0,'module_info',0,_X_Clauses},S> when 'true' ->
	      %% Line 84
	      S
	  %% Line 85
	  <{'function',0,'module_info',1,_X_Clauses},S> when 'true' ->
	      %% Line 86
	      S
	  %% Line 87
	  <{'function',Line,Name,Arity,Clauses},S> when 'true' ->
	      %% Line 88
	      ( case S of
		  ( <( {'xrefr',_rec0,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50}
		       -| ['compiler_generated'] )> when 'true' ->
			let <MFA0> = {_rec0,Name,Arity}
			in  let <MFA> =
				%% Line 89
				apply 'adjust_arity'/2
				    (S, MFA0)
			    in  let <_cor9> =
				    %% Line 90
				    call 'erlang':'setelement'
					(3, S, MFA)
				in  let <_rec2> =
					%% Line 91
					[{MFA,Line}|_cor36]
				    in  %% Line 91
					case _cor9 of
					  <{'xrefr',_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103}> when 'true' ->
					      let <_cor16> =
						  call 'erlang':'setelement'
						      (4, _cor9, _rec2)
					      in  let <S3> =
						      %% Line 92
						      apply 'clauses'/2
							  (Clauses, _cor16)
						  in  %% Line 93
						      case S3 of
							<{'xrefr',_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121}> when 'true' ->
							    call 'erlang':'setelement'
								(3, S3, [])
							( <_cor122> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','xrefr'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
					  ( <_cor104> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','xrefr'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
		    -| ['compiler_generated'] )
		  ( <_cor51> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','xrefr'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor22,_cor21> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21})
		  -| [{'function_name',{'form',2}}] )
	    -| ['compiler_generated'] )
	end
'clauses'/2 =
    %% Line 95
    fun (_cor1,_cor0) ->
	%% Line 96
	case _cor0 of
	  <{'xrefr',_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,FunVars,Matches,_cor16,_cor17,_cor18,_cor19}> when 'true' ->
	      %% Line 97
	      apply 'clauses'/4
		  (_cor1, FunVars, Matches, _cor0)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'clauses'/4 =
    %% Line 99
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{'clause',_X_Line,_X_H,G,B}|Cs],FunVars,Matches,S> when 'true' ->
	      %% Line 100
	      ( case S of
		  ( <( {'xrefr',_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_rec6,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor7> =
			    case _rec6 of
			      %% Line 101
			      <'true'> when 'true' ->
				  apply 'expr'/2
				      (G, S)
			      %% Line 102
			      <'false'> when 'true' ->
				  S
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor6})
				-| ['compiler_generated'] )
			    end
			in  let <S2> =
				%% Line 104
				apply 'expr'/2
				    (B, _cor7)
			    in  %% Line 105
				case S2 of
				  <{'xrefr',_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52}> when 'true' ->
				      let <_cor11> =
					  call 'erlang':'setelement'
					      (14, S2, Matches)
				      in  let <_cor13> =
					      call 'erlang':'setelement'
						  (13, _cor11, FunVars)
					  in  %% Line 106
					      apply 'clauses'/2
						  (Cs, _cor13)
				  ( <_cor53> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','xrefr'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
		    -| ['compiler_generated'] )
		  ( <_cor35> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','xrefr'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 107
	  <[],_X_FunVars,_X_Matches,S> when 'true' ->
	      %% Line 108
	      S
	  ( <_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17,_cor16,_cor15})
		  -| [{'function_name',{'clauses',4}}] )
	    -| ['compiler_generated'] )
	end
'attr'/8 =
    %% Line 110
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[E = {From,To}|As],Ln,M,Fun,AL,AX,B,S> when 'true' ->
	      %% Line 111
	      case apply 'mfa'/2
		       (From, M) of
		%% Line 112
		<{_cor23,_cor24,MFA}>
		    when let <_cor8> =
			  call 'erlang':'=:='
			      (MFA, Fun)
		      in  let <_cor9> =
			      call 'erlang':'=:='
				  ([], Fun)
			  in  call 'erlang':'or'
				  (_cor8, _cor9) ->
		    %% Line 113
		    apply 'attr'/11
			(From, To, Ln, M, Fun, AL, AX, B, S, As, E)
		%% Line 114
		<{_cor25,_cor26,_cor27}> when 'true' ->
		    %% Line 115
		    apply 'attr'/8
			(As, Ln, M, Fun, AL, AX, [E|B], S)
		%% Line 116
		<_cor28> when 'true' ->
		    %% Line 117
		    apply 'attr'/11
			(Fun, E, Ln, M, Fun, AL, AX, B, S, As, E)
	      end
	  %% Line 119
	  <[To|As],Ln,M,Fun,AL,AX,B,S> when 'true' ->
	      %% Line 120
	      apply 'attr'/11
		  (Fun, To, Ln, M, Fun, AL, AX, B, S, As, To)
	  %% Line 121
	  <[],_X_Ln,_X_M,_X_Fun,AL,AX,B,S> when 'true' ->
	      %% Line 122
	      case S of
		<{'xrefr',_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45}> when 'true' ->
		    let <_cor12> =
			call 'erlang':'setelement'
			    (18, S, B)
		    in  let <_cor13> =
			    call 'erlang':'setelement'
				(17, _cor12, AX)
			in  call 'erlang':'setelement'
				(16, _cor13, AL)
		( <_cor46> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','xrefr'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  ( <_cor22,_cor21,_cor20,_cor19,_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21,_cor20,_cor19,_cor18,_cor17,_cor16,_cor15})
		  -| [{'function_name',{'attr',8}}] )
	    -| ['compiler_generated'] )
	end
'attr'/11 =
    %% Line 124
    fun (_cor10,_cor9,_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor12> =
	    %% Line 125
	    apply 'mfa'/2
		(_cor10, _cor7)
	in  let <_cor11> =
		%% Line 125
		apply 'mfa'/2
		    (_cor9, _cor7)
	    in  %% Line 125
		case <_cor12,_cor11> of
		  %% Line 126
		  <{'true',_cor25,F},{_cor26,'external',T}> when 'true' ->
		      %% Line 127
		      apply 'attr'/8
			  (_cor1, _cor8, _cor7, _cor6, _cor5, [{{F,T},_cor8}|_cor4], _cor3, _cor2)
		  %% Line 128
		  <{'true',_cor27,F},{_cor28,'local',T}> when 'true' ->
		      %% Line 129
		      apply 'attr'/8
			  (_cor1, _cor8, _cor7, _cor6, [{{F,T},_cor8}|_cor5], _cor4, _cor3, _cor2)
		  %% Line 130
		  <_fol77,_fol78> when 'true' ->
		      apply 'attr'/8
			  (_cor1, _cor8, _cor7, _cor6, _cor5, _cor4, [_cor0|_cor3], _cor2)
		end
'mfa'/2 =
    %% Line 133
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{F,A},M>
	      when let <_cor2> =
		    call 'erlang':'is_atom'
			(F)
		in  let <_cor3> =
			call 'erlang':'is_integer'
			    (A)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      %% Line 134
	      {'true','local',{M,F,A}}
	  %% Line 135
	  <MFA = {M,F,A},M1>
	      when try
		    let <_cor4> =
			call 'erlang':'is_atom'
			    (M)
		    in  let <_cor5> =
			    call 'erlang':'is_atom'
				(F)
			in  let <_cor6> =
				call 'erlang':'is_integer'
				    (A)
			    in  let <_cor7> =
				    call 'erlang':'and'
					(_cor5, _cor6)
				in  call 'erlang':'and'
					(_cor4, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor8> =
		  %% Line 136
		  call 'erlang':'=:='
		      (M, M1)
	      in  %% Line 136
		  {_cor8,'external',MFA}
	  %% Line 137
	  <_cor11,_X_M> when 'true' ->
	      'false'
	end
'expr'/2 =
    %% Line 139
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'if',_X_Line,Cs},S> when 'true' ->
	      %% Line 140
	      apply 'clauses'/2
		  (Cs, S)
	  %% Line 141
	  <{'case',_X_Line,E,Cs},S> when 'true' ->
	      let <S1> =
		  %% Line 142
		  apply 'expr'/2
		      (E, S)
	      in  %% Line 143
		  apply 'clauses'/2
		      (Cs, S1)
	  %% Line 144
	  <{'receive',_X_Line,Cs},S> when 'true' ->
	      %% Line 145
	      apply 'clauses'/2
		  (Cs, S)
	  %% Line 146
	  <{'receive',_X_Line,Cs,To,ToEs},S> when 'true' ->
	      let <S1> =
		  %% Line 147
		  apply 'expr'/2
		      (To, S)
	      in  let <S2> =
		      %% Line 148
		      apply 'expr'/2
			  (ToEs, S1)
		  in  %% Line 149
		      apply 'clauses'/2
			  (Cs, S2)
	  %% Line 150
	  <{'try',_X_Line,Es,Scs,Ccs,As},S> when 'true' ->
	      let <S1> =
		  %% Line 151
		  apply 'expr'/2
		      (Es, S)
	      in  let <S2> =
		      %% Line 152
		      apply 'clauses'/2
			  (Scs, S1)
		  in  let <S3> =
			  %% Line 153
			  apply 'clauses'/2
			      (Ccs, S2)
		      in  %% Line 154
			  apply 'expr'/2
			      (As, S3)
	  %% Line 155
	  <{'fun',Line,{'function',{'atom',_cor52,Mod},%% Line 156
						       {'atom',_cor53,Name},%% Line 157
									    {'integer',_cor54,Arity}}},%% Line 157
												       S> when 'true' ->
	      let <As> =
		  %% Line 159
		  call 'lists':'duplicate'
		      (Arity, {'atom',Line,'foo'})
	      in  %% Line 160
		  apply 'external_call'/6
		      (Mod, Name, As, Line, 'false', S)
	  %% Line 161
	  <{'fun',Line,{'function',Mod,Name,{'integer',_cor55,Arity}}},S> when 'true' ->
	      let <As> =
		  %% Line 163
		  call 'lists':'duplicate'
		      (Arity, {'atom',Line,'foo'})
	      in  let <_cor10> =
		      %% Line 164
		      apply 'list2term'/1
			  (As)
		  in  %% Line 164
		      apply 'external_call'/6
			  ('erlang', 'apply', [Mod|[Name|[_cor10|[]]]], Line, 'true', S)
	  %% Line 165
	  <{'fun',Line,{'function',Mod,Name,_X_Arity}},S> when 'true' ->
	      let <As> = {%% Line 167
		   'var',%% Line 167
			 Line,%% Line 167
			      '_'}
	      in  %% Line 168
		  apply 'external_call'/6
		      ('erlang', 'apply', [Mod|[Name|[As|[]]]], Line, 'true', S)
	  %% Line 169
	  <{'fun',Line,{'function',Name,Arity},_X_Extra},S> when 'true' ->
	      %% Line 171
	      ( case S of
		  ( <( {'xrefr',_rec9,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71}
		       -| ['compiler_generated'] )> when 'true' ->
			apply 'handle_call'/6
			    ('local', _rec9, Name, Arity, Line, S)
		    -| ['compiler_generated'] )
		  ( <_cor72> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','xrefr'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 172
	  <{'fun',_X_Line,{'clauses',Cs},_X_Extra},S> when 'true' ->
	      %% Line 173
	      apply 'clauses'/2
		  (Cs, S)
	  %% Line 174
	  <{'named_fun',_X_Line,'_',Cs,_X_Extra},S> when 'true' ->
	      %% Line 175
	      apply 'clauses'/2
		  (Cs, S)
	  %% Line 176
	  <{'named_fun',_X_Line,Name,Cs,_X_Extra},S> when 'true' ->
	      %% Line 177
	      ( case S of
		  ( <( {'xrefr',_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_rec12,_cor84,_cor85,_cor86,_cor87,_cor88}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_rec10> =
			    [Name|_rec12]
			in  let <_cor19> =
				call 'erlang':'setelement'
				    (13, S, _rec10)
			    in  %% Line 178
				apply 'clauses'/2
				    (Cs, _cor19)
		    -| ['compiler_generated'] )
		  ( <_cor89> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','xrefr'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 179
	  <{'call',Line,{'atom',_cor108,Name},As},S> when 'true' ->
	      %% Line 180
	      ( case S of
		  ( <( {'xrefr',_rec13,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor21> =
			    call 'erlang':'length'
				(As)
			in  let <S1> =
				apply 'handle_call'/6
				    ('local', _rec13, Name, _cor21, Line, S)
			    in  %% Line 181
				apply 'expr'/2
				    (As, S1)
		    -| ['compiler_generated'] )
		  ( <_cor125> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','xrefr'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 182
	  <{'call',Line,{'remote',_X_Line,{'atom',_cor126,Mod},{'atom',_cor127,Name}},As},S> when 'true' ->
	      %% Line 183
	      apply 'external_call'/6
		  (Mod, Name, As, Line, 'false', S)
	  %% Line 184
	  <{'call',Line,{'remote',_X_Line,Mod,Name},As},S> when 'true' ->
	      let <_cor25> =
		  %% Line 186
		  apply 'list2term'/1
		      (As)
	      in  %% Line 186
		  apply 'external_call'/6
		      ('erlang', 'apply', [Mod|[Name|[_cor25|[]]]], Line, 'true', S)
	  %% Line 187
	  <{'call',Line,F,As},S> when 'true' ->
	      let <_cor26> =
		  %% Line 188
		  apply 'list2term'/1
		      (As)
	      in  %% Line 188
		  apply 'external_call'/6
		      ('erlang', 'apply', [F|[_cor26|[]]], Line, 'true', S)
	  %% Line 189
	  <{'match',_X_Line,{'var',_cor128,Var},{'fun',_cor129,{'clauses',Cs},_X_Extra}},S> when 'true' ->
	      %% Line 192
	      ( case S of
		  ( <( {'xrefr',_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_rec16,_cor141,_cor142,_cor143,_cor144,_cor145}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_rec14> =
			    [Var|_rec16]
			in  let <_cor32> =
				call 'erlang':'setelement'
				    (13, S, _rec14)
			    in  %% Line 193
				apply 'clauses'/2
				    (Cs, _cor32)
		    -| ['compiler_generated'] )
		  ( <_cor146> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','xrefr'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 194
	  <{'match',_X_Line,{'var',_cor165,Var},Fun = {'named_fun',_cor166,_cor167,_cor168,_cor169}},S> when 'true' ->
	      %% Line 195
	      ( case S of
		  ( <( {'xrefr',_cor170,_cor171,_cor172,_cor173,_cor174,_cor175,_cor176,_cor177,_cor178,_cor179,_cor180,_rec19,_cor181,_cor182,_cor183,_cor184,_cor185}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_rec17> =
			    [Var|_rec19]
			in  let <_cor39> =
				call 'erlang':'setelement'
				    (13, S, _rec17)
			    in  %% Line 196
				apply 'expr'/2
				    (Fun, _cor39)
		    -| ['compiler_generated'] )
		  ( <_cor186> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','xrefr'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 197
	  <{'match',_X_Line,{'var',_cor205,Var},E},S> when 'true' ->
	      %% Line 200
	      ( case S of
		  ( <( {'xrefr',_cor206,_cor207,_cor208,_cor209,_cor210,_cor211,_cor212,_cor213,_cor214,_cor215,_cor216,_cor217,_rec22,_cor218,_cor219,_cor220,_cor221}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_rec20> =
			    [{Var,E}|_rec22]
			in  let <_cor46> =
				call 'erlang':'setelement'
				    (14, S, _rec20)
			    in  %% Line 201
				apply 'expr'/2
				    (E, _cor46)
		    -| ['compiler_generated'] )
		  ( <_cor222> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','xrefr'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 202
	  <{'op',_X_Line,'orelse',Op1,Op2},S> when 'true' ->
	      %% Line 203
	      apply 'expr'/2
		  ([Op1|[Op2|[]]], S)
	  %% Line 204
	  <{'op',_X_Line,'andalso',Op1,Op2},S> when 'true' ->
	      %% Line 205
	      apply 'expr'/2
		  ([Op1|[Op2|[]]], S)
	  %% Line 206
	  <{'op',Line,Op,Operand1,Operand2},S> when 'true' ->
	      %% Line 207
	      apply 'external_call'/6
		  ('erlang', Op, [Operand1|[Operand2|[]]], Line, 'false', S)
	  %% Line 208
	  <{'op',Line,Op,Operand},S> when 'true' ->
	      %% Line 209
	      apply 'external_call'/6
		  ('erlang', Op, [Operand|[]], Line, 'false', S)
	  %% Line 210
	  <T,S>
	      when call 'erlang':'is_tuple'
		    (T) ->
	      let <_cor48> =
		  %% Line 211
		  call 'erlang':'tuple_to_list'
		      (T)
	      in  %% Line 211
		  apply 'expr'/2
		      (_cor48, S)
	  %% Line 212
	  <[E|Es],S> when 'true' ->
	      let <_cor49> =
		  %% Line 213
		  apply 'expr'/2
		      (E, S)
	      in  %% Line 213
		  apply 'expr'/2
		      (Es, _cor49)
	  %% Line 214
	  <_X_E,S> when 'true' ->
	      %% Line 215
	      S
	end
'external_call'/6 =
    %% Line 219
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Arity> =
	    %% Line 220
	    call 'erlang':'length'
		(_cor3)
	in  let <_cor19> =
		%% Line 221
		case call 'xref_utils':'is_funfun'
			 (_cor5, _cor4, Arity) of
		  %% Line 222
		  <'true'>
		      when try
			    let <_cor7> =
				call 'erlang':'=:='
				    ('erlang', _cor5)
			    in  let <_cor8> =
				    call 'erlang':'=:='
					('apply', _cor4)
				in  let <_cor9> =
					call 'erlang':'=:='
					    (2, Arity)
				    in  let <_cor10> =
					    call 'erlang':'and'
						(_cor8, _cor9)
					in  call 'erlang':'and'
						(_cor7, _cor10)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false' ->
		      'apply2'
		  %% Line 223
		  <'true'>
		      when try
			    let <_cor11> =
				call 'erlang':'=:='
				    ('erts_debug', _cor5)
			    in  let <_cor12> =
				    call 'erlang':'=:='
					('apply', _cor4)
				in  let <_cor13> =
					call 'erlang':'=:='
					    (4, Arity)
				    in  let <_cor14> =
					    call 'erlang':'and'
						(_cor12, _cor13)
					in  call 'erlang':'and'
						(_cor11, _cor14)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false' ->
		      'debug4'
		  %% Line 224
		  <'true'>
		      when let <_cor15> =
			    call 'erlang':'=:='
				('erlang', _cor5)
			in  let <_cor16> =
				call 'erlang':'=:='
				    ('spawn_opt', _cor4)
			    in  call 'erlang':'and'
				    (_cor15, _cor16) ->
		      call 'erlang':'-'
			  (Arity, 1)
		  %% Line 225
		  <'true'> when 'true' ->
		      Arity
		  %% Line 226
		  <'false'>
		      when call 'erlang':'=:='
			    (_cor5,
			     'erlang') ->
		      %% Line 227
		      case call 'erl_internal':'type_test'
			       (_cor4, Arity) of
			%% Line 228
			<'true'> when 'true' ->
			    'type'
			%% Line 229
			<'false'> when 'true' ->
			    'false'
			( <_cor17> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor17})
			  -| ['compiler_generated'] )
		      end
		  %% Line 231
		  <'false'> when 'true' ->
		      'false'
		  ( <_cor18> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor18})
		    -| ['compiler_generated'] )
		end
	    in  let <_cor23> =
		    %% Line 233
		    case <> of
		      %% Line 234
		      <>
			  when let <_cor21> =
				call 'erlang':'=:='
				    (_cor19, 'type')
			    in  let <_cor22> =
				    call 'erlang':'=:='
					(_cor1, 'true')
				in  call 'erlang':'or'
					(_cor21, _cor22) ->
			  _cor0
		      %% Line 236
		      <> when 'true' ->
			  %% Line 237
			  apply 'handle_call'/6
			      ('external', _cor5, _cor4, Arity, _cor2, _cor0)
		    end
		in  %% Line 239
		    case <_cor19,_cor3> of
		      %% Line 240
		      <'false',_cor34> when 'true' ->
			  %% Line 241
			  apply 'expr'/2
			      (_cor3, _cor23)
		      %% Line 242
		      <'type',_cor35> when 'true' ->
			  %% Line 243
			  apply 'expr'/2
			      (_cor3, _cor23)
		      %% Line 244
		      <'apply2',[{'tuple',_cor36,[M|[F|[]]]}|[ArgsTerm|[]]]> when 'true' ->
			  %% Line 245
			  apply 'eval_args'/7
			      (M, F, ArgsTerm, _cor2, _cor23, _cor3, [])
		      %% Line 246
		      <1,[{'tuple',_cor37,[M|[F|[]]]}|R]> when 'true' ->
			  let <_cor25> =
			      %% Line 247
			      apply 'list2term'/1
				  ([])
			  in  %% Line 247
			      apply 'eval_args'/7
				  (M, F, _cor25, _cor2, _cor23, _cor3, R)
		      %% Line 248
		      <2,[Node|[{'tuple',_cor38,[M|[F|[]]]}|R]]> when 'true' ->
			  let <_cor26> =
			      %% Line 249
			      apply 'list2term'/1
				  ([])
			  in  %% Line 249
			      apply 'eval_args'/7
				  (M, F, _cor26, _cor2, _cor23, _cor3, [Node|R])
		      %% Line 250
		      <3,[M|[F|[ArgsTerm|R]]]> when 'true' ->
			  %% Line 251
			  apply 'eval_args'/7
			      (M, F, ArgsTerm, _cor2, _cor23, _cor3, R)
		      %% Line 252
		      <4,[Node|[M|[F|[ArgsTerm|R]]]]> when 'true' ->
			  %% Line 253
			  apply 'eval_args'/7
			      (M, F, ArgsTerm, _cor2, _cor23, _cor3, [Node|R])
		      %% Line 254
		      <'debug4',[M|[F|[ArgsTerm|[_cor39|[]]]]]> when 'true' ->
			  %% Line 255
			  apply 'eval_args'/7
			      (M, F, ArgsTerm, _cor2, _cor23, _cor3, [])
		      %% Line 256
		      <_fol232,_fol233> when 'true' ->
			  %% Line 257
			  apply 'check_funarg'/4
			      (_cor19, _cor3, _cor2, _cor23)
		    end
'eval_args'/7 =
    %% Line 260
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 261
	case apply 'mod_fun'/2
		 (_cor6, _cor5) of
	  <{IsSimpleCall,M,F}> when 'true' ->
	      %% Line 262
	      case apply 'term2list'/3
		       (_cor4, [], _cor2) of
		%% Line 263
		<'undefined'> when 'true' ->
		    let <S1> =
			%% Line 264
			apply 'unresolved'/5
			    (M, F, -1, _cor3, _cor2)
		    in  %% Line 265
			apply 'expr'/2
			    (_cor1, S1)
		%% Line 266
		<ArgsList2>
		    when let <_cor10> =
			  call 'erlang':'=:='
			      (IsSimpleCall, 'false')
		      in  let <_cor11> =
			      call 'erlang':'is_boolean'
				  (IsSimpleCall)
			  in  call 'erlang':'and'
				  (_cor10, _cor11) ->
		    let <_cor12> =
			%% Line 267
			call 'erlang':'length'
			    (ArgsList2)
		    in  let <S1> =
			    %% Line 267
			    apply 'unresolved'/5
				(M, F, _cor12, _cor3, _cor2)
			in  %% Line 268
			    apply 'expr'/2
				(_cor1, S1)
		%% Line 269
		<ArgsList2>
		    when call 'erlang':'=:='
			  (IsSimpleCall,
			   'true') ->
		    let <S1> =
			%% Line 270
			apply 'expr'/2
			    (_cor0, _cor2)
		    in  %% Line 271
			apply 'external_call'/6
			    (M, F, ArgsList2, _cor3, 'false', S1)
		( <_cor15> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor15})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor7> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor7})
	    -| ['compiler_generated'] )
	end
'mod_fun'/2 =
    %% Line 274
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'atom',_cor4,M1},{'atom',_cor5,F1}> when 'true' ->
	      {'true',M1,F1}
	  %% Line 275
	  <{'atom',_cor6,M1},_cor7> when 'true' ->
	      {'false',M1,'$F_EXPR'}
	  %% Line 276
	  <_cor8,{'atom',_cor9,F1}> when 'true' ->
	      {'false','$M_EXPR',F1}
	  %% Line 277
	  <_cor10,_cor11> when 'true' ->
	      {'false','$M_EXPR','$F_EXPR'}
	end
'check_funarg'/4 =
    %% Line 279
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 280
	case apply 'fun_args'/2
		 (_cor3, _cor2) of
	  <{FunArg,Args}> when 'true' ->
	      let <_cor9> =
		  %% Line 281
		  case apply 'funarg'/2
			   (FunArg, _cor0) of
		    %% Line 282
		    <'true'> when 'true' ->
			_cor0
		    %% Line 284
		    <'false'>
			when call 'erlang':'is_integer'
			      (_cor3) ->
			%% Line 285
			apply 'unresolved'/5
			    ('$M_EXPR', '$F_EXPR', 0, _cor1, _cor0)
		    %% Line 286
		    <'false'> when 'true' ->
			let <_cor6> =
			    %% Line 287
			    case apply 'term2list'/3
				     (Args, [], _cor0) of
			      %% Line 288
			      <'undefined'> when 'true' ->
				  -1
			      %% Line 289
			      <As> when 'true' ->
				  call 'erlang':'length'
				      (As)
			    end
			in  %% Line 291
			    apply 'unresolved'/5
				('$M_EXPR', '$F_EXPR', _cor6, _cor1, _cor0)
		    ( <_cor8> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor8})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 293
		  apply 'expr'/2
		      (_cor2, _cor9)
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor4})
	    -| ['compiler_generated'] )
	end
'funarg'/2 =
    %% Line 295
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'fun',_cor6,_X_Clauses,_X_Extra},_X_S> when 'true' ->
	      'true'
	  %% Line 296
	  <{'fun',_cor7,{'function',_cor8,_cor9,_cor10}},_X_S> when 'true' ->
	      %% Line 298
	      'true'
	  %% Line 299
	  <{'named_fun',_cor11,_cor12,_cor13,_cor14},_X_S> when 'true' ->
	      %% Line 300
	      'true'
	  %% Line 301
	  <{'var',_cor15,Var},S> when 'true' ->
	      ( case S of
		  ( <( {'xrefr',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_rec23,_cor27,_cor28,_cor29,_cor30,_cor31}
		       -| ['compiler_generated'] )> when 'true' ->
			call 'lists':'member'
			    (Var, _rec23)
		    -| ['compiler_generated'] )
		  ( <_cor32> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','xrefr'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 302
	  <_cor33,_X_S> when 'true' ->
	      'false'
	end
'fun_args'/2 =
    %% Line 304
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'apply2',[FunArg|[Args|[]]]> when 'true' ->
	      {FunArg,Args}
	  %% Line 305
	  <1,[FunArg|Args]> when 'true' ->
	      {FunArg,Args}
	  %% Line 306
	  <2,[_X_Node|[FunArg|Args]]> when 'true' ->
	      {FunArg,Args}
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'fun_args',2}}] )
	    -| ['compiler_generated'] )
	end
'list2term'/1 =
    %% Line 308
    fun (_cor0) ->
	case _cor0 of
	  <[A|As]> when 'true' ->
	      let <_cor1> =
		  %% Line 309
		  apply 'list2term'/1
		      (As)
	      in  %% Line 309
		  {'cons',0,A,_cor1}
	  %% Line 310
	  <[]> when 'true' ->
	      %% Line 311
	      {'nil',0}
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'list2term',1}}] )
	    -| ['compiler_generated'] )
	end
'term2list'/3 =
    %% Line 313
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'cons',_X_Line,H,T},L,S> when 'true' ->
	      %% Line 314
	      apply 'term2list'/3
		  (T, [H|L], S)
	  %% Line 315
	  <{'nil',_X_Line},L,_X_S> when 'true' ->
	      %% Line 316
	      call 'lists':'reverse'
		  (L)
	  %% Line 317
	  <{'var',_cor9,Var},L,S> when 'true' ->
	      %% Line 318
	      ( case S of
		  ( <( {'xrefr',_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_rec24,_cor22,_cor23,_cor24,_cor25}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'lists':'keysearch'
				 (Var, 1, _rec24) of
			  %% Line 319
			  <{'value',{_cor27,E}}>
			      when call 'erlang':'=:='
				    (_cor27,
				     Var) ->
			      %% Line 320
			      apply 'term2list'/3
				  (E, L, S)
			  %% Line 321
			  <'false'> when 'true' ->
			      %% Line 322
			      'undefined'
			  ( <_cor5> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor5})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor26> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','xrefr'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 324
	  <_X_Else,_X_L,_X_S> when 'true' ->
	      %% Line 325
	      'undefined'
	end
'unresolved'/5 =
    %% Line 327
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 328
	apply 'handle_call'/5
	    ('external', {_cor4,_cor3,_cor2}, _cor1, _cor0, 'true')
'handle_call'/6 =
    %% Line 330
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 331
	case call 'xref_utils':'is_builtin'
		 (_cor4, _cor3, _cor2) of
	  %% Line 332
	  <'true'>
	      when try
		    ( case <> of
			( <>
			      when ( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_record'
								       -| ['compiler_generated'] )
				      (_cor0,
				       ( 'xrefr'
					 -| ['compiler_generated'] ),
				       ( 18
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] ) ->
			      let <_cor10> =
				  ( call 'erlang':'element'
					(11, _cor0)
				    -| ['compiler_generated'] )
			      in  let <_cor11> =
				      ( call 'erlang':'=:='
					    (_cor10, 'true')
					-| ['compiler_generated'] )
				  in  let <_cor13> =
					  ( call 'erlang':'not'
						(_cor11)
					    -| ['compiler_generated'] )
				      in  let <_cor14> =
					      ( call 'erlang':'is_boolean'
						    (_cor10)
						-| ['compiler_generated'] )
					  in  ( call 'erlang':'and'
						    (_cor13, _cor14)
						-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <> when 'true' ->
			      'false'
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      _cor0
	  %% Line 333
	  <_X_Else> when 'true' ->
	      let <To> = {_cor4,_cor3,_cor2}
	      in  %% Line 335
		  apply 'handle_call'/5
		      (_cor5, To, _cor1, _cor0, 'false')
	end
'handle_call'/5 =
    %% Line 338
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 339
	( case _cor1 of
	    ( <( {'xrefr',_cor42,_rec25,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <To> =
		      %% Line 340
		      apply 'adjust_arity'/2
			  (_cor1, _cor3)
		  in  let <Call> = {_rec25,%% Line 341
				  To}
		      in  let <CallAt> = {%% Line 342
			       Call,_cor2}
			  in  let <_cor16> =
				  %% Line 343
				  case <> of
				    %% Line 344
				    <>
					when call 'erlang':'=:='
					      (_cor0,
					       'true') ->
					let <_rec26> =
					    %% Line 345
					    [CallAt|_cor54]
					in  %% Line 345
					    call 'erlang':'setelement'
						(15, _cor1, _rec26)
				    %% Line 346
				    <> when 'true' ->
					_cor1
				  end
			      in  %% Line 349
				  case _cor4 of
				    %% Line 350
				    <'local'> when 'true' ->
					%% Line 351
					( case _cor16 of
					    ( <( {'xrefr',_cor94,_cor95,_cor96,_cor97,_cor98,_rec32,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109}
						 -| ['compiler_generated'] )> when 'true' ->
						  let <_rec29> =
						      [Call|_rec32]
						  in  let <_rec30> =
							  %% Line 352
							  [CallAt|_cor97]
						      in  let <_cor25> =
							      call 'erlang':'setelement'
								  (7, _cor16, _rec29)
							  in  %% Line 352
							      call 'erlang':'setelement'
								  (5, _cor25, _rec30)
					      -| ['compiler_generated'] )
					    ( <_cor110> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','xrefr'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    %% Line 353
				    <'external'> when 'true' ->
					%% Line 354
					( case _cor16 of
					    ( <( {'xrefr',_cor146,_cor147,_cor148,_cor149,_cor150,_cor151,_rec37,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161}
						 -| ['compiler_generated'] )> when 'true' ->
						  let <_rec34> =
						      [Call|_rec37]
						  in  let <_rec35> =
							  %% Line 355
							  [CallAt|_cor150]
						      in  let <_cor34> =
							      call 'erlang':'setelement'
								  (8, _cor16, _rec34)
							  in  %% Line 355
							      call 'erlang':'setelement'
								  (6, _cor34, _rec35)
					      -| ['compiler_generated'] )
					    ( <_cor162> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','xrefr'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    ( <_cor36> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor36})
				      -| ['compiler_generated'] )
				  end
	      -| ['compiler_generated'] )
	    ( <_cor58> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','xrefr'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'adjust_arity'/2 =
    %% Line 358
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'xrefr',M,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,'true',_cor15,_cor16,_cor17,_cor18,_cor19,_cor20},MFA = {_cor21,F,A}>
	      when call 'erlang':'=:='
		    (_cor21,
		     M) ->
	      %% Line 359
	      case call 'xref_utils':'is_static_function'
		       (F, A) of
		%% Line 360
		<'true'> when 'true' ->
		    %% Line 361
		    MFA
		%% Line 362
		<'false'> when 'true' ->
		    let <_cor2> =
			%% Line 363
			call 'erlang':'-'
			    (A, 1)
		    in  %% Line 363
			{M,F,_cor2}
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 365
	  <_X_S,MFA> when 'true' ->
	      %% Line 366
	      MFA
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('xref_reader')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('xref_reader', _cor0)
end