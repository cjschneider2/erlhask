module 'eprof' ['analyze'/0,
		'analyze'/1,
		'analyze'/2,
		'code_change'/3,
		'dump'/0,
		'handle_call'/3,
		'handle_cast'/2,
		'handle_info'/2,
		'init'/1,
		'log'/1,
		'module_info'/0,
		'module_info'/1,
		'profile'/1,
		'profile'/2,
		'profile'/3,
		'profile'/4,
		'profile'/5,
		'start'/0,
		'start_profiling'/1,
		'start_profiling'/2,
		'start_profiling'/3,
		'stop'/0,
		'stop_profiling'/0,
		'terminate'/2]
    attributes [%% Line 24
		'behaviour' =
		    %% Line 24
		    ['gen_server']]
'start'/0 =
    %% Line 73
    fun () ->
	call 'gen_server':'start'
	    ({'local','eprof'}, 'eprof', [], [])
'stop'/0 =
    %% Line 74
    fun () ->
	call 'gen_server':'call'
	    ('eprof', 'stop', 'infinity')
'analyze'/0 =
    %% Line 77
    fun () ->
	%% Line 78
	apply 'analyze'/1
	    ('procs')
'analyze'/1 =
    %% Line 80
    fun (_cor0) ->
	case _cor0 of
	  <Type>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      %% Line 81
	      apply 'analyze'/2
		  (Type, [])
	  %% Line 82
	  <Opts>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 83
	      apply 'analyze'/2
		  ('procs', Opts)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'analyze',1}}] )
	    -| ['compiler_generated'] )
	end
'analyze'/2 =
    %% Line 84
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Type,Opts>
	      when call 'erlang':'is_list'
		    (Opts) ->
	      %% Line 85
	      call 'gen_server':'call'
		  ('eprof', {'analyze',Type,Opts}, 'infinity')
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'analyze',2}}] )
	    -| ['compiler_generated'] )
	end
'profile'/1 =
    %% Line 88
    fun (_cor0) ->
	case _cor0 of
	  <Rootset>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 89
	      apply 'start_profiling'/1
		  (Rootset)
	  %% Line 91
	  <Fun>
	      when call 'erlang':'is_function'
		    (_cor0) ->
	      %% Line 92
	      apply 'profile'/2
		  ([], Fun)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'profile',1}}] )
	    -| ['compiler_generated'] )
	end
'profile'/2 =
    %% Line 94
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Fun,Opts>
	      when try
		    let <_cor2> =
			call 'erlang':'is_function'
			    (Fun)
		    in  let <_cor3> =
			    call 'erlang':'is_list'
				(Opts)
			in  call 'erlang':'and'
				(_cor2, _cor3)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 95
	      apply 'profile'/6
		  ([], 'erlang', 'apply', [Fun|[[]]], {'_','_','_'}, Opts)
	  %% Line 97
	  <Rootset,Fun>
	      when try
		    let <_cor4> =
			call 'erlang':'is_list'
			    (Rootset)
		    in  let <_cor5> =
			    call 'erlang':'is_function'
				(Fun)
			in  call 'erlang':'and'
				(_cor4, _cor5)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 98
	      apply 'profile'/3
		  (Rootset, Fun, {'_','_','_'})
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'profile',2}}] )
	    -| ['compiler_generated'] )
	end
'profile'/3 =
    %% Line 100
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Rootset,Fun,Pattern>
	      when try
		    let <_cor3> =
			call 'erlang':'is_list'
			    (Rootset)
		    in  let <_cor4> =
			    call 'erlang':'is_function'
				(Fun)
			in  call 'erlang':'and'
				(_cor3, _cor4)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 101
	      apply 'profile'/4
		  (Rootset, Fun, Pattern, [{'set_on_spawn','true'}])
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'profile',3}}] )
	    -| ['compiler_generated'] )
	end
'profile'/4 =
    %% Line 103
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Rootset,Fun,Pattern,Options>
	      when try
		    let <_cor4> =
			call 'erlang':'is_list'
			    (Rootset)
		    in  let <_cor5> =
			    call 'erlang':'is_function'
				(Fun)
			in  let <_cor6> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor7> =
				    call 'erlang':'and'
					(_cor5, _cor6)
				in  call 'erlang':'and'
					(_cor4, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 104
	      apply 'profile'/6
		  (Rootset, 'erlang', 'apply', [Fun|[[]]], Pattern, Options)
	  %% Line 106
	  <Rootset,M,F,A>
	      when try
		    let <_cor8> =
			call 'erlang':'is_list'
			    (Rootset)
		    in  let <_cor9> =
			    call 'erlang':'is_atom'
				(M)
			in  let <_cor10> =
				call 'erlang':'is_atom'
				    (F)
			    in  let <_cor11> =
				    call 'erlang':'is_list'
					(A)
				in  let <_cor12> =
					call 'erlang':'and'
					    (_cor10, _cor11)
				    in  let <_cor13> =
					    call 'erlang':'and'
						(_cor9, _cor12)
					in  call 'erlang':'and'
						(_cor8, _cor13)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 107
	      apply 'profile'/5
		  (Rootset, M, F, A, {'_','_','_'})
	  ( <_cor17,_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15,_cor14})
		  -| [{'function_name',{'profile',4}}] )
	    -| ['compiler_generated'] )
	end
'profile'/5 =
    %% Line 109
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Rootset,M,F,A,Pattern>
	      when try
		    let <_cor5> =
			call 'erlang':'is_list'
			    (Rootset)
		    in  let <_cor6> =
			    call 'erlang':'is_atom'
				(M)
			in  let <_cor7> =
				call 'erlang':'is_atom'
				    (F)
			    in  let <_cor8> =
				    call 'erlang':'is_list'
					(A)
				in  let <_cor9> =
					call 'erlang':'and'
					    (_cor7, _cor8)
				    in  let <_cor10> =
					    call 'erlang':'and'
						(_cor6, _cor9)
					in  call 'erlang':'and'
						(_cor5, _cor10)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 110
	      apply 'profile'/6
		  (Rootset, M, F, A, Pattern, [{'set_on_spawn','true'}])
	  ( <_cor15,_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'profile',5}}] )
	    -| ['compiler_generated'] )
	end
'profile'/6 =
    %% Line 113
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 114
	    apply 'start'/0
		()
	    %% Line 115
	    call 'gen_server':'call'
		('eprof', {'profile_start',_cor5,_cor1,{_cor4,_cor3,_cor2},_cor0}, 'infinity')
'dump'/0 =
    %% Line 117
    fun () ->
	%% Line 118
	call 'gen_server':'call'
	    ('eprof', 'dump', 'infinity')
'log'/1 =
    %% Line 120
    fun (_cor0) ->
	%% Line 121
	call 'gen_server':'call'
	    ('eprof', {'logfile',_cor0}, 'infinity')
'start_profiling'/1 =
    %% Line 124
    fun (_cor0) ->
	%% Line 125
	apply 'start_profiling'/2
	    (_cor0, {'_','_','_'})
'start_profiling'/2 =
    %% Line 126
    fun (_cor1,_cor0) ->
	%% Line 127
	apply 'start_profiling'/3
	    (_cor1, _cor0, [{'set_on_spawn','true'}])
'start_profiling'/3 =
    %% Line 128
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 129
	    apply 'start'/0
		()
	    %% Line 130
	    call 'gen_server':'call'
		('eprof', {'profile_start',_cor2,_cor1,'undefined',_cor0}, 'infinity')
'stop_profiling'/0 =
    %% Line 132
    fun () ->
	%% Line 133
	call 'gen_server':'call'
	    ('eprof', 'profile_stop', 'infinity')
'init'/1 =
    %% Line 142
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      do  %% Line 143
		  call 'erlang':'process_flag'
		      ('trap_exit', 'true')
		  let <_cor1> =
		      call 'gb_trees':'empty'
			  ()
		  in  %% Line 144
		      {'ok',{'state','false',{'_','_','_'},[],[],'undefined','undefined','undefined',{'bpd',0,0,_cor1,[]}}}
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'init',1}}] )
	    -| ['compiler_generated'] )
	end
'handle_call'/3 =
    %% Line 154
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'analyze',_cor67,_cor68},_cor69,S = {'state',_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,Bpd = {'bpd',_cor77 = 0,_cor78 = 0,_cor79 = {0,'nil'},_cor80 = _cor81}}> when ( 'true'
																							  -| ['compiler_generated'] ) ->
	      %% Line 155
	      {'reply','nothing_to_analyze',S}
	  %% Line 157
	  <{'analyze','procs',Opts},_cor82,S = {'state',_cor83,_cor84,_cor85,_cor86,Fd,_cor87,_cor88,Bpd = {'bpd',_cor89 = _cor90,Tus = _cor91,Ps = _cor92,_cor93 = _cor94}}> when ( 'true'
																						     -| ['compiler_generated'] ) ->
	      let <_cor10> =
		  %% Line 158
		  ( fun (_cor8) ->
			case _cor8 of
			  %% Line 159
			  <{Pid,Mfas}> when 'true' ->
			      %% Line 160
			      case apply 'sum_bp_total_n_us'/1
				       (Mfas) of
				<{Pn,Pus}> when 'true' ->
				    let <_cor5> =
					%% Line 161
					apply 'divide'/2
					    (Pus, Tus)
				    in  let <_cor6> =
					    %% Line 161
					    call 'erlang':'*'
						(1.00000000000000000000e+02, _cor5)
					in  let <_cor7> =
						%% Line 161
						apply 's'/2
						    ([126|[46|[50|[102]]]], [_cor6|[]])
					    in  do  %% Line 161
						    apply 'format'/3
							(Fd, [126|[110|[42|[42|[42|[42|[42|[42|[32|[80|[114|[111|[99|[101|[115|[115|[32|[126|[119|[32|[32|[32|[32|[45|[45|[32|[126|[115|[32|[37|[32|[111|[102|[32|[112|[114|[111|[102|[105|[108|[101|[100|[32|[116|[105|[109|[101|[32|[42|[42|[42|[32|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Pid|[_cor7|[]]])
						    do  %% Line 162
							apply 'print_bp_mfa'/4
							    (Mfas, {Pn,Pus}, Fd, Opts)
							%% Line 163
							'ok'
				( <_cor4> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor4})
				  -| ['compiler_generated'] )
			      end
			  ( <_cor9> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor9})
				  -| [{'function_name',{'-handle_call/3-fun-0-',1}}] )
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-handle_call/3-fun-0-'}}] )
	      in  let <_cor3> =
		      %% Line 164
		      call 'gb_trees':'to_list'
			  (Ps)
		  in  do  %% Line 158
			  call 'lists':'foreach'
			      (_cor10, _cor3)
			  %% Line 165
			  {'reply','ok',S}
	  %% Line 167
	  <{'analyze','total',Opts},_cor95,S = {'state',_cor96,_cor97,_cor98,_cor99,Fd,_cor100,_cor101,Bpd = {'bpd',Tn = _cor102,Tus = _cor103,_cor104 = _cor105,Mfas = _cor106}}> when ( 'true'
																							  -| ['compiler_generated'] ) ->
	      do  %% Line 168
		  apply 'print_bp_mfa'/4
		      (Mfas, {Tn,Tus}, Fd, Opts)
		  %% Line 169
		  {'reply','ok',S}
	  %% Line 171
	  <{'analyze',Type,_X_Opts},_cor107,S> when 'true' ->
	      %% Line 172
	      {'reply',{'error',{'undefined',Type}},S}
	  %% Line 176
	  <{'profile_start',_X_Rootset,_X_Pattern,_X_MFA,_X_Opts},_X_From,S = {'state','true',_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114}> when 'true' ->
	      %% Line 177
	      {'reply',{'error','already_profiling'},S}
	  %% Line 179
	  <{'profile_start',Rootset,Pattern,{M,F,A},Opts},From,S = {'state',_cor115,_cor116,_cor117,_cor118,Fd,_cor119,_cor120,_cor121}> when 'true' ->
	      %% Line 181
	      case apply 'set_pattern_trace'/2
		       ('false', _cor116) of
		<'ok'> when 'true' ->
		    let <_X_> =
			%% Line 182
			apply 'set_process_trace'/3
			    ('false', _cor117, _cor118)
		    in  let <Topts> =
			    %% Line 184
			    apply 'get_trace_options'/1
				(Opts)
			in  let <Pid> =
				%% Line 185
				apply 'setup_profiling'/3
				    (M, F, A)
			    in  %% Line 187
				case apply 'set_process_trace'/3
					 ('true', [Pid|Rootset], Topts) of
				  %% Line 188
				  <'true'> when 'true' ->
				      %% Line 189
				      case apply 'set_pattern_trace'/2
					       ('true', Pattern) of
					<'ok'> when 'true' ->
					    let <T0> =
						%% Line 190
						call 'erlang':'now'
						    ()
					    in  %% Line 191
						case apply 'execute_profiling'/1
							 (Pid) of
						  <'ok'> when 'true' ->
						      let <_cor24> =
							  call 'gb_trees':'empty'
							      ()
						      in  %% Line 192
							  {'noreply',{'state',%% Line 193
									      'true',%% Line 199
										     Pattern,%% Line 194
											     [Pid|Rootset],%% Line 198
													   Topts,%% Line 197
														 Fd,%% Line 195
														    T0,%% Line 196
														       From,{'bpd',0,0,_cor24,[]}}}
						  ( <_cor23> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_cor23})
						    -| ['compiler_generated'] )
						end
					( <_cor21> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor21})
					  -| ['compiler_generated'] )
				      end
				  %% Line 201
				  <'false'> when 'true' ->
				      do  %% Line 202
					  call 'erlang':'exit'
					      (Pid, 'eprof_kill')
					  let <_cor25> =
					      call 'gb_trees':'empty'
						  ()
					  in  %% Line 203
					      {'reply','error',{'state','false',{'_','_','_'},[],[],Fd,'undefined','undefined',{'bpd',0,0,_cor25,[]}}}
				  ( <_cor26> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor26})
				    -| ['compiler_generated'] )
				end
		( <_cor13> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor13})
		  -| ['compiler_generated'] )
	      end
	  %% Line 206
	  <{'profile_start',Rootset,Pattern,'undefined',Opts},From,S = {'state',_cor146,_cor147,_cor148,_cor149,Fd,_cor150,_cor151,_cor152}> when 'true' ->
	      %% Line 208
	      case apply 'set_pattern_trace'/2
		       ('false', _cor147) of
		<'ok'> when 'true' ->
		    %% Line 209
		    case apply 'set_process_trace'/3
			     ('false', _cor148, _cor149) of
		      <'true'> when 'true' ->
			  let <Topts> =
			      %% Line 210
			      apply 'get_trace_options'/1
				  (Opts)
			  in  %% Line 212
			      case apply 'set_process_trace'/3
				       ('true', Rootset, Topts) of
				%% Line 213
				<'true'> when 'true' ->
				    let <T0> =
					%% Line 214
					call 'erlang':'now'
					    ()
				    in  %% Line 215
					case apply 'set_pattern_trace'/2
						 ('true', Pattern) of
					  <'ok'> when 'true' ->
					      let <_cor38> =
						  call 'gb_trees':'empty'
						      ()
					      in  %% Line 216
						  {'reply','profiling',{'state',%% Line 217
										'true',%% Line 223
										       Pattern,%% Line 218
											       Rootset,%% Line 222
												       Topts,%% Line 221
													     Fd,%% Line 219
														T0,%% Line 220
														   From,{'bpd',0,0,_cor38,[]}}}
					  ( <_cor37> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_cor37})
					    -| ['compiler_generated'] )
					end
				%% Line 225
				<'false'> when 'true' ->
				    let <_cor39> =
					call 'gb_trees':'empty'
					    ()
				    in  %% Line 226
					{'reply','error',{'state','false',{'_','_','_'},[],[],Fd,'undefined','undefined',{'bpd',0,0,_cor39,[]}}}
				( <_cor40> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor40})
				  -| ['compiler_generated'] )
			      end
		      ( <_cor34> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor34})
			-| ['compiler_generated'] )
		    end
		( <_cor29> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor29})
		  -| ['compiler_generated'] )
	      end
	  %% Line 229
	  <'profile_stop',_X_From,S = {'state','false',_cor177,_cor178,_cor179,_cor180,_cor181,_cor182,_cor183}> when 'true' ->
	      %% Line 230
	      {'reply','profiling_already_stopped',S}
	  %% Line 232
	  <'profile_stop',_X_From,S = {'state','true',_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190}> when 'true' ->
	      %% Line 234
	      case apply 'set_pattern_trace'/2
		       ('pause', _cor184) of
		<'ok'> when 'true' ->
		    let <Bpd> =
			%% Line 235
			apply 'collect_bpd'/0
			    ()
		    in  let <_X_> =
			    %% Line 236
			    apply 'set_process_trace'/3
				('false', _cor185, _cor186)
			in  %% Line 237
			    case apply 'set_pattern_trace'/2
				     ('false', _cor184) of
			      <'ok'> when 'true' ->
				  let <_cor55> =
				      %% Line 244
				      {'state','false',{'_','_','_'},[],[],_cor187,_cor188,_cor189,Bpd}
				  in  %% Line 239
				      {'reply','profiling_stopped',_cor55}
			      ( <_cor52> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor52})
				-| ['compiler_generated'] )
			    end
		( <_cor43> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor43})
		  -| ['compiler_generated'] )
	      end
	  %% Line 248
	  <{'logfile',File},_X_From,S = {'state',_cor224,_cor225,_cor226,_cor227,OldFd,_cor228,_cor229,_cor230}> when 'true' ->
	      %% Line 249
	      case call 'file':'open'
		       (File, ['write']) of
		%% Line 250
		<{'ok',Fd}> when 'true' ->
		    do  %% Line 251
			case OldFd of
			  %% Line 252
			  <'undefined'> when 'true' ->
			      'ok'
			  %% Line 253
			  <_cor231> when 'true' ->
			      call 'file':'close'
				  (OldFd)
			end
			let <_cor59> =
			    %% Line 255
			    call 'erlang':'setelement'
				(6, S, Fd)
			in  %% Line 255
			    {'reply','ok',_cor59}
		%% Line 256
		<Error> when 'true' ->
		    %% Line 257
		    {'reply',Error,S}
	      end
	  %% Line 260
	  <'dump',_X_From,S = {'state',_cor241,_cor242,_cor243,_cor244,_cor245,_cor246,_cor247,Bpd = {'bpd',_cor248,_cor249,_cor250,_cor251}}> when ( 'true'
																		      -| ['compiler_generated'] ) ->
	      let <_cor63> =
		  %% Line 261
		  call 'gb_trees':'to_list'
		      (_cor250)
	      in  %% Line 261
		  {'reply',_cor63,S}
	  %% Line 263
	  <'stop',_X_FromTag,S> when 'true' ->
	      %% Line 264
	      {'stop','normal','stopped',S}
	  ( <_cor66,_cor65,_cor64> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor66,_cor65,_cor64})
		  -| [{'function_name',{'handle_call',3}}] )
	    -| ['compiler_generated'] )
	end
'handle_cast'/2 =
    %% Line 272
    fun (_cor1,_cor0) ->
	%% Line 273
	{'noreply',_cor0}
'handle_info'/2 =
    %% Line 281
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'EXIT',_cor33,'normal'},S> when 'true' ->
	      %% Line 282
	      {'noreply',S}
	  %% Line 283
	  <{'EXIT',_cor34,'eprof_kill'},S> when 'true' ->
	      %% Line 284
	      {'noreply',S}
	  %% Line 285
	  <{'EXIT',_cor35,Reason},S = {'state',_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,FromTag,_cor42}> when 'true' ->
	      let <_X_> =
		  %% Line 287
		  apply 'set_process_trace'/3
		      ('false', _cor38, _cor39)
	      in  %% Line 288
		  case apply 'set_pattern_trace'/2
			   ('false', _cor37) of
		    <'ok'> when 'true' ->
			do  %% Line 290
			    call 'gen_server':'reply'
				(FromTag, {'error',Reason})
			    let <_cor11> =
				%% Line 294
				call 'erlang':'setelement'
				    (5, S, [])
			    in  let <_cor12> =
				    %% Line 293
				    call 'erlang':'setelement'
					(4, _cor11, [])
				in  let <_cor13> =
					%% Line 295
					call 'erlang':'setelement'
					    (3, _cor12, {'_','_','_'})
				    in  let <_cor15> =
					    %% Line 292
					    call 'erlang':'setelement'
						(2, _cor13, 'false')
					in  %% Line 291
					    {'noreply',_cor15}
		    ( <_cor9> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor9})
		      -| ['compiler_generated'] )
		  end
	  %% Line 299
	  <{_X_Pid,{'answer',Result}},S = {'state',_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,FromTag = {From,_cor82},_cor83}> when 'true' ->
	      %% Line 301
	      case apply 'set_pattern_trace'/2
		       ('pause', _cor77) of
		<'ok'> when 'true' ->
		    let <Bpd> =
			%% Line 302
			apply 'collect_bpd'/0
			    ()
		    in  let <_X_> =
			    %% Line 303
			    apply 'set_process_trace'/3
				('false', _cor78, _cor79)
			in  %% Line 304
			    case apply 'set_pattern_trace'/2
				     ('false', _cor77) of
			      <'ok'> when 'true' ->
				  do  catch
					  %% Line 306
					  call 'erlang':'unlink'
					      (From)
				      do  %% Line 307
					  call 'gen_server':'reply'
					      (FromTag, {'ok',Result})
					  let <_rec36> = {From,_cor82}
					  in  let <_cor30> =
						  %% Line 313
						  {'state','false',{'_','_','_'},[],[],_cor80,_cor81,_rec36,Bpd}
					      in  %% Line 308
						  {'noreply',_cor30}
			      ( <_cor27> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor27})
				-| ['compiler_generated'] )
			    end
		( <_cor18> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor18})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor32,_cor31> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor32,_cor31})
		  -| [{'function_name',{'handle_info',2}}] )
	    -| ['compiler_generated'] )
	end
'terminate'/2 =
    %% Line 322
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Reason,{'state',_cor7,_cor8,_cor9,_cor10,'undefined',_cor11,_cor12,_cor13}> when 'true' ->
	      %% Line 323
	      case apply 'set_pattern_trace'/2
		       ('false', {'_','_','_'}) of
		<'ok'> when 'true' ->
		    %% Line 324
		    'ok'
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 325
	  <_X_Reason,{'state',_cor14,_cor15,_cor16,_cor17,Fd,_cor18,_cor19,_cor20}> when 'true' ->
	      %% Line 326
	      case call 'file':'close'
		       (Fd) of
		<'ok'> when 'true' ->
		    %% Line 327
		    case apply 'set_pattern_trace'/2
			     ('false', {'_','_','_'}) of
		      <'ok'> when 'true' ->
			  %% Line 328
			  'ok'
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'terminate',2}}] )
	    -| ['compiler_generated'] )
	end
'code_change'/3 =
    %% Line 336
    fun (_cor2,_cor1,_cor0) ->
	%% Line 337
	{'ok',_cor1}
'setup_profiling'/3 =
    %% Line 346
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 347
	    ( fun () ->
		  apply 'spin_profile'/3
		      (_cor2, _cor1, _cor0)
	      -| [{'id',{0,0,'-setup_profiling/3-fun-0-'}}] )
	in  %% Line 347
	    call 'erlang':'spawn_link'
		(_cor3)
'spin_profile'/3 =
    %% Line 349
    fun (_cor2,_cor1,_cor0) ->
	%% Line 350
	receive
	  %% Line 351
	  <{Pid,'execute'}> when 'true' ->
	      let <_cor4> =
		  %% Line 352
		  call 'erlang':'self'
		      ()
	      in  let <_cor3> =
		      %% Line 352
		      call 'erlang':'apply'
			  (_cor2, _cor1, _cor0)
		  in  %% Line 352
		      call 'erlang':'!'
			  (Pid, {_cor4,{'answer',_cor3}})
	after 'infinity' ->
	  'true'
'execute_profiling'/1 =
    %% Line 355
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 356
	    call 'erlang':'self'
		()
	in  do  %% Line 356
		call 'erlang':'!'
		    (_cor0, {_cor1,'execute'})
		%% Line 357
		'ok'
'get_trace_options'/1 =
    %% Line 360
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 361
	      ['call']
	  %% Line 362
	  <[{'set_on_spawn','true'}|Opts]> when 'true' ->
	      let <_cor1> =
		  %% Line 363
		  apply 'get_trace_options'/1
		      (Opts)
	      in  %% Line 363
		  ['set_on_spawn'|_cor1]
	  %% Line 364
	  <['set_on_spawn'|Opts]> when 'true' ->
	      let <_cor2> =
		  %% Line 365
		  apply 'get_trace_options'/1
		      (Opts)
	      in  %% Line 365
		  ['set_on_spawn'|_cor2]
	  %% Line 366
	  <[_cor4|Opts]> when 'true' ->
	      %% Line 367
	      apply 'get_trace_options'/1
		  (Opts)
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'get_trace_options',1}}] )
	    -| ['compiler_generated'] )
	end
'set_pattern_trace'/2 =
    %% Line 370
    fun (_cor1,_cor0) ->
	do  %% Line 371
	    call 'erlang':'system_flag'
		('multi_scheduling', 'block')
	    do  %% Line 372
		call 'erlang':'trace_pattern'
		    ('on_load', _cor1, ['call_time'])
		do  %% Line 373
		    call 'erlang':'trace_pattern'
			(_cor0, _cor1, ['call_time'])
		    do  %% Line 374
			call 'erlang':'system_flag'
			    ('multi_scheduling', 'unblock')
			%% Line 375
			'ok'
'set_process_trace'/3 =
    %% Line 377
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_cor11,[],_cor12> when 'true' ->
	      'true'
	  %% Line 378
	  <Flag,[Pid|Pids],Options>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      %% Line 379
	      try
		  do  %% Line 380
		      call 'erlang':'trace'
			  (Pid, Flag, Options)
		      %% Line 381
		      apply 'set_process_trace'/3
			  (Flag, Pids, Options)
	      of <_cor3> ->
		  _cor3
	      catch <_cor6,_cor5,_cor4> ->
		  %% Line 384
		  'false'
	  %% Line 386
	  <Flag,[Name|Pids],Options>
	      when call 'erlang':'is_atom'
		    (Name) ->
	      %% Line 387
	      case call 'erlang':'whereis'
		       (Name) of
		%% Line 388
		<'undefined'> when 'true' ->
		    %% Line 389
		    apply 'set_process_trace'/3
			(Flag, Pids, Options)
		%% Line 390
		<Pid> when 'true' ->
		    %% Line 391
		    apply 'set_process_trace'/3
			(Flag, [Pid|Pids], Options)
	      end
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'set_process_trace',3}}] )
	    -| ['compiler_generated'] )
	end
'collect_bpd'/0 =
    %% Line 394
    fun () ->
	let <_cor11> =
	    %% Line 395
	    ( letrec
		  'lc$^1'/1 =
		      fun (_cor9) ->
			  case _cor9 of
			    <[M|_cor1]>
				when call 'erlang':'=/='
				      (M,
				       'eprof') ->
				let <_cor10> =
				    apply 'lc$^1'/1
					(_cor1)
				in  ( [M|_cor10]
				      -| ['compiler_generated'] )
			    ( <[M|_cor1]> when 'true' ->
				  apply 'lc$^1'/1
				      (_cor1)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor9> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor9})
				    -| [{'function_name',{'lc$^1',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  let <_cor8> =
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor5) ->
				    case _cor5 of
				      <[Mi|_cor3]> when 'true' ->
					  let <_cor6> =
					      call 'erlang':'element'
						  (1, Mi)
					  in  let <_cor7> =
						  apply 'lc$^0'/1
						      (_cor3)
					      in  ( [_cor6|_cor7]
						    -| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor5> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor5})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  let <_cor4> =
				call 'code':'all_loaded'
				    ()
			    in  apply 'lc$^0'/1
				    (_cor4)
			-| ['list_comprehension'] )
		  in  apply 'lc$^1'/1
			  (_cor8)
	      -| ['list_comprehension'] )
	in  %% Line 395
	    apply 'collect_bpd'/1
		(_cor11)
'collect_bpd'/1 =
    %% Line 397
    fun (_cor0) ->
	case _cor0 of
	  <Ms>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      let <_cor2> =
		  %% Line 398
		  apply 'collect_mfas'/1
		      (Ms)
	      in  let <_cor1> =
		      %% Line 398
		      call 'erlang':'system_info'
			  ('snifs')
		  in  let <_cor3> =
			  %% Line 398
			  call 'erlang':'++'
			      (_cor2, _cor1)
		      in  %% Line 398
			  apply 'collect_bpdf'/1
			      (_cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'collect_bpd',1}}] )
	    -| ['compiler_generated'] )
	end
'collect_mfas'/1 =
    %% Line 400
    fun (_cor0) ->
	let <_cor11> =
	    %% Line 401
	    ( fun (_cor8,_cor7) ->
		  let <_cor6> =
		      %% Line 403
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor4) ->
				    case _cor4 of
				      <[{F,A}|_cor2]> when 'true' ->
					  let <_cor5> =
					      apply 'lc$^0'/1
						  (_cor2)
					  in  ( [{_cor8,F,A}|_cor5]
						-| ['compiler_generated'] )
				      ( <[_cor1|_cor2]> when 'true' ->
					    apply 'lc$^0'/1
						(_cor2)
					-| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor4> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor4})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  let <_cor3> =
				call _cor8:'module_info'
				    ('functions')
			    in  apply 'lc$^0'/1
				    (_cor3)
			-| ['list_comprehension'] )
		  in  %% Line 403
		      call 'erlang':'++'
			  (_cor7, _cor6)
	      -| [{'id',{0,0,'-collect_mfas/1-fun-0-'}}] )
	in  %% Line 401
	    call 'lists':'foldl'
		(_cor11, %% Line 404
			 [], _cor0)
'collect_bpdf'/1 =
    %% Line 406
    fun (_cor0) ->
	let <_cor1> =
	    call 'gb_trees':'empty'
		()
	in  %% Line 407
	    apply 'collect_bpdf'/2
		(_cor0, {'bpd',0,0,_cor1,[]})
'collect_bpdf'/2 =
    %% Line 408
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],Bpd> when 'true' ->
	      %% Line 409
	      Bpd
	  %% Line 410
	  <[Mfa|Mfas],Bpd = {'bpd',N,Us,Tree,Code}> when 'true' ->
	      %% Line 411
	      case call 'erlang':'trace_info'
		       (Mfa, 'call_time') of
		%% Line 412
		<{'call_time',[]}> when 'true' ->
		    %% Line 413
		    apply 'collect_bpdf'/2
			(Mfas, Bpd)
		%% Line 414
		<{'call_time',Data}>
		    when call 'erlang':'is_list'
			  (Data) ->
		    %% Line 415
		    case apply 'collect_bpdfp'/3
			     (Mfa, Tree, Data) of
		      <{CTn,CTus,CTree}> when 'true' ->
			  let <_rec38> =
			      %% Line 417
			      call 'erlang':'+'
				  (CTn, N)
			  in  let <_rec39> =
				  %% Line 418
				  call 'erlang':'+'
				      (CTus, Us)
			      in  let <_rec40> =
				      %% Line 420
				      [{Mfa,{CTn,CTus}}|Code]
				  in  let <_cor8> =
					  %% Line 420
					  {'bpd',_rec38,_rec39,CTree,_rec40}
				      in  %% Line 416
					  apply 'collect_bpdf'/2
					      (Mfas, _cor8)
		      ( <_cor2> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor2})
			-| ['compiler_generated'] )
		    end
		%% Line 422
		<{'call_time','false'}> when 'true' ->
		    %% Line 423
		    apply 'collect_bpdf'/2
			(Mfas, Bpd)
		%% Line 424
		<{'call_time',_X_Other}> when 'true' ->
		    %% Line 425
		    apply 'collect_bpdf'/2
			(Mfas, Bpd)
		( <_cor9> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor9})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'collect_bpdf',2}}] )
	    -| ['compiler_generated'] )
	end
'collect_bpdfp'/3 =
    %% Line 428
    fun (_cor2,_cor1,_cor0) ->
	let <_cor14> =
	    %% Line 429
	    ( fun (_cor11,_cor10) ->
		  case <_cor11,_cor10> of
		    %% Line 430
		    <{Pid,Ni,Si,Usi},{PTno,PTuso,To}> when 'true' ->
			let <_cor3> =
			    %% Line 431
			    call 'erlang':'*'
				(Si, 1000000)
			in  let <Time> =
				%% Line 431
				call 'erlang':'+'
				    (_cor3, Usi)
			    in  let <_cor6> =
				    %% Line 432
				    case call 'gb_trees':'lookup'
					     (Pid, To) of
				      %% Line 433
				      <'none'> when 'true' ->
					  %% Line 434
					  call 'gb_trees':'enter'
					      (Pid, [{_cor2,{Ni,Time}}|[]], To)
				      %% Line 435
				      <{'value',Pmfas}> when 'true' ->
					  %% Line 436
					  call 'gb_trees':'enter'
					      (Pid, [{_cor2,{Ni,Time}}|Pmfas], To)
				      ( <_cor5> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor5})
					-| ['compiler_generated'] )
				    end
				in  let <_cor9> =
					%% Line 438
					call 'erlang':'+'
					    (PTno, Ni)
				    in  let <_cor8> =
					    %% Line 438
					    call 'erlang':'+'
						(PTuso, Time)
					in  %% Line 438
					    {_cor9,_cor8,_cor6}
		    ( <_cor13,_cor12> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor13,_cor12})
			    -| [{'function_name',{'-collect_bpdfp/3-fun-0-',2}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-collect_bpdfp/3-fun-0-'}}] )
	in  %% Line 429
	    call 'lists':'foldl'
		(_cor14, %% Line 439
			 {0,0,_cor1}, _cor0)
'sort_mfa'/2 =
    %% Line 442
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Bpfs,'mfa'>
	      when call 'erlang':'is_list'
		    (Bpfs) ->
	      let <_cor6> =
		  %% Line 443
		  ( fun (_cor3,_cor2) ->
			case <_cor3,_cor2> of
			  %% Line 444
			  <{A,_cor19},{B,_cor20}>
			      when call 'erlang':'<'
				    (A,
				     B) ->
			      'true'
			  %% Line 445
			  <_cor21,_cor22> when 'true' ->
			      'false'
			end
		    -| [{'id',{0,0,'-sort_mfa/2-fun-0-'}}] )
	      in  %% Line 443
		  call 'lists':'sort'
		      (_cor6, %% Line 446
			      Bpfs)
	  %% Line 447
	  <Bpfs,'time'>
	      when call 'erlang':'is_list'
		    (Bpfs) ->
	      let <_cor11> =
		  %% Line 448
		  ( fun (_cor8,_cor7) ->
			case <_cor8,_cor7> of
			  %% Line 449
			  <{_cor23,{_cor24,A}},{_cor25,{_cor26,B}}>
			      when call 'erlang':'<'
				    (A,
				     B) ->
			      'true'
			  %% Line 450
			  <_cor27,_cor28> when 'true' ->
			      'false'
			end
		    -| [{'id',{0,0,'-sort_mfa/2-fun-1-'}}] )
	      in  %% Line 448
		  call 'lists':'sort'
		      (_cor11, %% Line 451
			       Bpfs)
	  %% Line 452
	  <Bpfs,'calls'>
	      when call 'erlang':'is_list'
		    (Bpfs) ->
	      let <_cor16> =
		  %% Line 453
		  ( fun (_cor13,_cor12) ->
			case <_cor13,_cor12> of
			  %% Line 454
			  <{_cor29,{A,_cor30}},{_cor31,{B,_cor32}}>
			      when call 'erlang':'<'
				    (A,
				     B) ->
			      'true'
			  %% Line 455
			  <_cor33,_cor34> when 'true' ->
			      'false'
			end
		    -| [{'id',{0,0,'-sort_mfa/2-fun-2-'}}] )
	      in  %% Line 453
		  call 'lists':'sort'
		      (_cor16, %% Line 456
			       Bpfs)
	  %% Line 457
	  <Bpfs,_cor35>
	      when call 'erlang':'is_list'
		    (Bpfs) ->
	      apply 'sort_mfa'/2
		  (Bpfs, 'time')
	  ( <_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17})
		  -| [{'function_name',{'sort_mfa',2}}] )
	    -| ['compiler_generated'] )
	end
'filter_mfa'/2 =
    %% Line 459
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Bpfs,Ts>
	      when call 'erlang':'is_list'
		    (Ts) ->
	      let <_cor3> =
		  %% Line 460
		  call 'proplists':'get_value'
		      ('calls', Ts, 0)
	      in  let <_cor2> =
		      %% Line 460
		      call 'proplists':'get_value'
			  ('time', Ts, 0)
		  in  %% Line 460
		      apply 'filter_mfa'/4
			  (Bpfs, [], _cor3, _cor2)
	  %% Line 461
	  <Bpfs,_cor6> when 'true' ->
	      Bpfs
	end
'filter_mfa'/4 =
    %% Line 462
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[],Out,_cor10,_cor11> when 'true' ->
	      call 'lists':'reverse'
		  (Out)
	  %% Line 463
	  <[Bpf = {_cor12,{C,T}}|Bpfs],Out,Ct,Tt>
	      when let <_cor4> =
		    call 'erlang':'>='
			(C, Ct)
		in  let <_cor5> =
			call 'erlang':'>='
			    (T, Tt)
		    in  call 'erlang':'and'
			    (_cor4, _cor5) ->
	      apply 'filter_mfa'/4
		  (Bpfs, [Bpf|Out], Ct, Tt)
	  %% Line 464
	  <[_cor13|Bpfs],Out,Ct,Tt> when 'true' ->
	      apply 'filter_mfa'/4
		  (Bpfs, Out, Ct, Tt)
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'filter_mfa',4}}] )
	    -| ['compiler_generated'] )
	end
'sum_bp_total_n_us'/1 =
    %% Line 466
    fun (_cor0) ->
	let <_cor7> =
	    %% Line 467
	    ( fun (_cor4,_cor3) ->
		  case <_cor4,_cor3> of
		    <{_cor9,{Ci,Usi}},{Co,Uso}> when 'true' ->
			let <_cor2> =
			    call 'erlang':'+'
				(Co, Ci)
			in  let <_cor1> =
				call 'erlang':'+'
				    (Uso, Usi)
			    in  {_cor2,_cor1}
		    ( <_cor6,_cor5> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor6,_cor5})
			    -| [{'function_name',{'-sum_bp_total_n_us/1-fun-0-',2}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-sum_bp_total_n_us/1-fun-0-'}}] )
	in  %% Line 467
	    call 'lists':'foldl'
		(_cor7, {0,0}, _cor0)
'string_bp_mfa'/2 =
    %% Line 471
    fun (_cor1,_cor0) ->
	apply 'string_bp_mfa'/4
	    (_cor1, _cor0, {0,0,0,0,0}, [])
'string_bp_mfa'/4 =
    %% Line 472
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[],_cor27,Ws,Strings> when 'true' ->
	      let <_cor4> =
		  call 'lists':'reverse'
		      (Strings)
	      in  {Ws,_cor4}
	  %% Line 473
	  <[{Mfa,{Count,Time}}|Mfas],Tus,{MfaW,CountW,PercW,TimeW,TpCW},Strings> when 'true' ->
	      let <Smfa> =
		  %% Line 474
		  apply 's'/1
		      (Mfa)
	      in  let <Scount> =
		      %% Line 475
		      apply 's'/1
			  (Count)
		  in  let <Stime> =
			  %% Line 476
			  apply 's'/1
			      (Time)
		      in  let <_cor8> =
			      %% Line 477
			      apply 'divide'/2
				  (Time, Tus)
			  in  let <_cor9> =
				  %% Line 477
				  call 'erlang':'*'
				      (100, _cor8)
			      in  let <Sperc> =
				      %% Line 477
				      apply 's'/2
					  ([126|[46|[50|[102]]]], [_cor9|[]])
				  in  let <_cor11> =
					  %% Line 478
					  apply 'divide'/2
					      (Time, Count)
				      in  let <Stpc> =
					      %% Line 478
					      apply 's'/2
						  ([126|[46|[50|[102]]]], [_cor11|[]])
					  in  let <_cor21> =
						  %% Line 481
						  call 'erlang':'length'
						      (Smfa)
					      in  let <_cor22> =
						      %% Line 481
						      call 'erlang':'max'
							  (MfaW, _cor21)
						  in  let <_cor19> =
							  %% Line 482
							  call 'erlang':'length'
							      (Scount)
						      in  let <_cor20> =
							      %% Line 482
							      call 'erlang':'max'
								  (CountW, _cor19)
							  in  let <_cor17> =
								  %% Line 483
								  call 'erlang':'length'
								      (Sperc)
							      in  let <_cor18> =
								      %% Line 483
								      call 'erlang':'max'
									  (PercW, _cor17)
								  in  let <_cor15> =
									  %% Line 484
									  call 'erlang':'length'
									      (Stime)
								      in  let <_cor16> =
									      %% Line 484
									      call 'erlang':'max'
										  (TimeW, _cor15)
									  in  let <_cor13> =
										  %% Line 485
										  call 'erlang':'length'
										      (Stpc)
									      in  let <_cor14> =
										      %% Line 485
										      call 'erlang':'max'
											  (TpCW, _cor13)
										  in  %% Line 480
										      apply 'string_bp_mfa'/4
											  (Mfas, Tus, {_cor22,_cor20,_cor18,_cor16,_cor14}, %% Line 486
																	    [[Smfa|[Scount|[Sperc|[Stime|[Stpc|[]]]]]]|Strings])
	  ( <_cor26,_cor25,_cor24,_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor26,_cor25,_cor24,_cor23})
		  -| [{'function_name',{'string_bp_mfa',4}}] )
	    -| ['compiler_generated'] )
	end
'print_bp_mfa'/4 =
    %% Line 488
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Mfas,{_X_Tn,Tus},Fd,Opts> when 'true' ->
	      let <_cor5> =
		  %% Line 489
		  call 'proplists':'get_value'
		      ('sort', Opts)
	      in  let <_cor6> =
		      %% Line 489
		      apply 'sort_mfa'/2
			  (Mfas, _cor5)
		  in  let <_cor4> =
			  %% Line 489
			  call 'proplists':'get_value'
			      ('filter', Opts)
		      in  let <Fmfas> =
			      %% Line 489
			      apply 'filter_mfa'/2
				  (_cor6, _cor4)
			  in  %% Line 490
			      case apply 'string_bp_mfa'/2
				       (Fmfas, Tus) of
				<{{MfaW,CountW,PercW,TimeW,TpCW},Strs}> when 'true' ->
				    let <_cor18> =
					%% Line 492
					call 'erlang':'max'
					    (8, MfaW)
				    in  let <_cor16> =
					    %% Line 493
					    call 'erlang':'max'
						(5, CountW)
					in  let <_cor14> =
						%% Line 494
						call 'erlang':'max'
						    (3, PercW)
					    in  let <_cor12> =
						    %% Line 495
						    call 'erlang':'max'
							(4, TimeW)
						in  let <_cor10> =
							%% Line 496
							call 'erlang':'max'
							    (10, TpCW)
						    in  let <Ws> =
							    %% Line 491
							    {_cor18,_cor16,_cor14,_cor12,_cor10}
							in  do  %% Line 498
								apply 'format'/3
								    (Fd, Ws, [[70|[85|[78|[67|[84|[73|[79|[78]]]]]]]]|[[67|[65|[76|[76|[83]]]]]|[[32|[32|[37]]]|[[84|[73|[77|[69]]]]|[[117|[83|[32|[47|[32|[67|[65|[76|[76|[83]]]]]]]]]]]]]]])
								do  %% Line 499
								    apply 'format'/3
									(Fd, Ws, [[45|[45|[45|[45|[45|[45|[45|[45]]]]]]]]|[[45|[45|[45|[45|[45]]]]]|[[45|[45|[45]]]|[[45|[45|[45|[45]]]]|[[45|[45|[45|[45|[45|[45|[45|[45|[45|[45]]]]]]]]]]]]]]])
								    let <_cor22> =
									%% Line 501
									( fun (_cor20) ->
									      apply 'format'/3
										  (Fd, Ws, _cor20)
									  -| [{'id',{0,0,'-print_bp_mfa/4-fun-0-'}}] )
								    in  do  %% Line 501
									    call 'lists':'foreach'
										(_cor22, Strs)
									    %% Line 502
									    'ok'
				( <_cor8> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor8})
				  -| ['compiler_generated'] )
			      end
	  ( <_cor26,_cor25,_cor24,_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor26,_cor25,_cor24,_cor23})
		  -| [{'function_name',{'print_bp_mfa',4}}] )
	    -| ['compiler_generated'] )
	end
's'/1 =
    %% Line 504
    fun (_cor0) ->
	case _cor0 of
	  <{M,F,A}> when 'true' ->
	      apply 's'/2
		  ([126|[119|[58|[126|[119|[47|[126|[119]]]]]]]], [M|[F|[A|[]]]])
	  %% Line 505
	  <Term> when 'true' ->
	      apply 's'/2
		  ([126|[112]], [Term|[]])
	end
's'/2 =
    %% Line 506
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    call 'io_lib':'format'
		(_cor1, _cor0)
	in  call 'lists':'flatten'
		(_cor2)
'format'/3 =
    %% Line 509
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Fd,{MfaW,CountW,PercW,TimeW,TpCW},Strings> when 'true' ->
	      let <_cor3> =
		  %% Line 510
		  apply 's'/2
		      ([126|[126|[46|[126|[112|[115|[32|[32|[126|[126|[126|[112|[115|[32|[32|[126|[126|[126|[112|[115|[32|[32|[126|[126|[126|[112|[115|[32|[32|[91|[126|[126|[126|[112|[115|[93|[126|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [MfaW|[CountW|[PercW|[TimeW|[TpCW|[]]]]]])
	      in  %% Line 510
		  apply 'format'/3
		      (Fd, _cor3, Strings)
	  %% Line 511
	  <'undefined',Format,Strings> when 'true' ->
	      do  %% Line 512
		  call 'io':'format'
		      (Format, Strings)
		  %% Line 513
		  'ok'
	  %% Line 514
	  <Fd,Format,Strings> when 'true' ->
	      do  %% Line 515
		  call 'io':'format'
		      (Fd, Format, Strings)
		  do  %% Line 516
		      call 'io':'format'
			  (Format, Strings)
		      %% Line 517
		      'ok'
	end
'divide'/2 =
    %% Line 519
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor4,0> when 'true' ->
	      0.00000000000000000000e+00
	  %% Line 520
	  <T,N> when 'true' ->
	      call 'erlang':'/'
		  (T, N)
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('eprof')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('eprof', _cor0)
end