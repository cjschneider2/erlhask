module 'application' ['behaviour_info'/1,
		      'ensure_all_started'/1,
		      'ensure_all_started'/2,
		      'ensure_started'/1,
		      'ensure_started'/2,
		      'get_all_env'/0,
		      'get_all_env'/1,
		      'get_all_key'/0,
		      'get_all_key'/1,
		      'get_application'/0,
		      'get_application'/1,
		      'get_env'/1,
		      'get_env'/2,
		      'get_env'/3,
		      'get_key'/1,
		      'get_key'/2,
		      'info'/0,
		      'load'/1,
		      'load'/2,
		      'loaded_applications'/0,
		      'module_info'/0,
		      'module_info'/1,
		      'permit'/2,
		      'set_env'/3,
		      'set_env'/4,
		      'start'/1,
		      'start'/2,
		      'start_boot'/1,
		      'start_boot'/2,
		      'start_type'/0,
		      'stop'/1,
		      'takeover'/2,
		      'unload'/1,
		      'unset_env'/2,
		      'unset_env'/3,
		      'which_applications'/0,
		      'which_applications'/1]
    attributes [%% Line 33
		'export_type' =
		    %% Line 33
		    [{'start_type',0}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{'start_type',{'type',37,'union',[{'atom',37,'normal'}|[{'type',38,'tuple',[{'atom',38,'takeover'}|[{'ann_type',38,[{'var',38,'Node'}|[{'type',38,'node',[]}]]}]]}|[{'type',39,'tuple',[{'atom',39,'failover'}|[{'ann_type',39,[{'var',39,'Node'}|[{'type',39,'node',[]}]]}]]}]]]},[]}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{'restart_type',{'type',40,'union',[{'atom',40,'permanent'}|[{'atom',40,'transient'}|[{'atom',40,'temporary'}]]]},[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{'application_opt',{'type',41,'union',[{'type',41,'tuple',[{'atom',41,'description'}|[{'ann_type',41,[{'var',41,'Description'}|[{'type',41,'string',[]}]]}]]}|[{'type',42,'tuple',[{'atom',42,'vsn'}|[{'ann_type',42,[{'var',42,'Vsn'}|[{'type',42,'string',[]}]]}]]}|[{'type',43,'tuple',[{'atom',43,'id'}|[{'ann_type',43,[{'var',43,'Id'}|[{'type',43,'string',[]}]]}]]}|[{'type',44,'tuple',[{'atom',44,'modules'}|[{'type',44,'list',[{'ann_type',44,[{'var',44,'Module'}|[{'type',44,'module',[]}]]}]}]]}|[{'type',45,'tuple',[{'atom',45,'registered'}|[{'ann_type',45,[{'var',45,'Names'}|[{'type',45,'list',[{'ann_type',45,[{'var',45,'Name'}|[{'type',45,'atom',[]}]]}]}]]}]]}|[{'type',46,'tuple',[{'atom',46,'applications'}|[{'type',46,'list',[{'ann_type',46,[{'var',46,'Application'}|[{'type',46,'atom',[]}]]}]}]]}|[{'type',47,'tuple',[{'atom',47,'included_applications'}|[{'type',47,'list',[{'ann_type',47,[{'var',47,'Application'}|[{'type',47,'atom',[]}]]}]}]]}|[{'type',48,'tuple',[{'atom',48,'env'}|[{'type',48,'list',[{'type',48,'tuple',[{'ann_type',48,[{'var',48,'Par'}|[{'type',48,'atom',[]}]]}|[{'ann_type',48,[{'var',48,'Val'}|[{'type',48,'term',[]}]]}]]}]}]]}|[{'type',49,'tuple',[{'atom',49,'start_phases'}|[{'type',50,'union',[{'type',50,'list',[{'type',50,'tuple',[{'ann_type',50,[{'var',50,'Phase'}|[{'type',50,'atom',[]}]]}|[{'ann_type',50,[{'var',50,'PhaseArgs'}|[{'type',50,'term',[]}]]}]]}]}|[{'atom',50,'undefined'}]]}]]}|[{'type',51,'tuple',[{'atom',51,'maxT'}|[{'ann_type',51,[{'var',51,'MaxT'}|[{'type',51,'timeout',[]}]]}]]}|[{'type',52,'tuple',[{'atom',52,'maxP'}|[{'ann_type',53,[{'var',53,'MaxP'}|[{'type',53,'union',[{'type',53,'pos_integer',[]}|[{'atom',53,'infinity'}]]}]]}]]}|[{'type',54,'tuple',[{'atom',54,'mod'}|[{'ann_type',54,[{'var',54,'Start'}|[{'type',54,'tuple',[{'ann_type',54,[{'var',54,'Module'}|[{'type',54,'module',[]}]]}|[{'ann_type',54,[{'var',54,'StartArgs'}|[{'type',54,'term',[]}]]}]]}]]}]]}]]]]]]]]]]]]},[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{'application_spec',{'type',55,'tuple',[{'atom',55,'application'}|[{'ann_type',56,[{'var',56,'Application'}|[{'type',56,'atom',[]}]]}|[{'ann_type',57,[{'var',57,'AppSpecKeys'}|[{'type',57,'list',[{'type',57,'application_opt',[]}]}]]}]]]},[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{'tuple_of',{'type',59,'tuple','any'},[{'var',59,'_T'}]}],
		%% Line 63
		'callback' =
		    %% Line 63
		    [{{'start',2},[{'type',63,'fun',[{'type',63,'product',[{'ann_type',63,[{'var',63,'StartType'}|[{'type',63,'start_type',[]}]]}|[{'ann_type',63,[{'var',63,'StartArgs'}|[{'type',63,'term',[]}]]}]]}|[{'type',64,'union',[{'type',64,'tuple',[{'atom',64,'ok'}|[{'type',64,'pid',[]}]]}|[{'type',64,'tuple',[{'atom',64,'ok'}|[{'type',64,'pid',[]}|[{'ann_type',64,[{'var',64,'State'}|[{'type',64,'term',[]}]]}]]]}|[{'type',64,'tuple',[{'atom',64,'error'}|[{'ann_type',64,[{'var',64,'Reason'}|[{'type',64,'term',[]}]]}]]}]]]}]]}]}],
		%% Line 66
		'callback' =
		    %% Line 66
		    [{{'stop',1},[{'type',66,'fun',[{'type',66,'product',[{'ann_type',66,[{'var',66,'State'}|[{'type',66,'term',[]}]]}]}|[{'type',67,'term',[]}]]}]}],
		%% Line 74
		'spec' =
		    %% Line 74
		    [{{'load',1},[{'type',74,'bounded_fun',[{'type',74,'fun',[{'type',74,'product',[{'var',74,'AppDescr'}]}|[{'type',74,'union',[{'atom',74,'ok'}|[{'type',74,'tuple',[{'atom',74,'error'}|[{'var',74,'Reason'}]]}]]}]]}|[[{'type',75,'constraint',[{'atom',75,'is_subtype'}|[[{'var',75,'AppDescr'}|[{'type',75,'union',[{'var',75,'Application'}|[{'paren_type',75,[{'ann_type',75,[{'var',75,'AppSpec'}|[{'type',75,'application_spec',[]}]]}]}]]}]]]]}|[{'type',76,'constraint',[{'atom',76,'is_subtype'}|[[{'var',76,'Application'}|[{'type',76,'atom',[]}]]]]}|[{'type',77,'constraint',[{'atom',77,'is_subtype'}|[[{'var',77,'Reason'}|[{'type',77,'term',[]}]]]]}]]]]]}]}],
		%% Line 82
		'spec' =
		    %% Line 82
		    [{{'load',2},[{'type',82,'bounded_fun',[{'type',82,'fun',[{'type',82,'product',[{'var',82,'AppDescr'}|[{'var',82,'Distributed'}]]}|[{'type',82,'union',[{'atom',82,'ok'}|[{'type',82,'tuple',[{'atom',82,'error'}|[{'var',82,'Reason'}]]}]]}]]}|[[{'type',83,'constraint',[{'atom',83,'is_subtype'}|[[{'var',83,'AppDescr'}|[{'type',83,'union',[{'var',83,'Application'}|[{'paren_type',83,[{'ann_type',83,[{'var',83,'AppSpec'}|[{'type',83,'application_spec',[]}]]}]}]]}]]]]}|[{'type',84,'constraint',[{'atom',84,'is_subtype'}|[[{'var',84,'Application'}|[{'type',84,'atom',[]}]]]]}|[{'type',85,'constraint',[{'atom',85,'is_subtype'}|[[{'var',85,'Distributed'}|[{'type',85,'union',[{'type',85,'tuple',[{'var',85,'Application'}|[{'var',85,'Nodes'}]]}|[{'type',86,'tuple',[{'var',86,'Application'}|[{'var',86,'Time'}|[{'var',86,'Nodes'}]]]}|[{'atom',87,'default'}]]]}]]]]}|[{'type',88,'constraint',[{'atom',88,'is_subtype'}|[[{'var',88,'Nodes'}|[{'type',88,'list',[{'type',88,'union',[{'type',88,'node',[]}|[{'type',88,'tuple_of',[{'type',88,'node',[]}]}]]}]}]]]]}|[{'type',89,'constraint',[{'atom',89,'is_subtype'}|[[{'var',89,'Time'}|[{'type',89,'pos_integer',[]}]]]]}|[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'Reason'}|[{'type',90,'term',[]}]]]]}]]]]]]]]}]}],
		%% Line 111
		'spec' =
		    %% Line 111
		    [{{'unload',1},[{'type',111,'bounded_fun',[{'type',111,'fun',[{'type',111,'product',[{'var',111,'Application'}]}|[{'type',111,'union',[{'atom',111,'ok'}|[{'type',111,'tuple',[{'atom',111,'error'}|[{'var',111,'Reason'}]]}]]}]]}|[[{'type',112,'constraint',[{'atom',112,'is_subtype'}|[[{'var',112,'Application'}|[{'type',112,'atom',[]}]]]]}|[{'type',113,'constraint',[{'atom',113,'is_subtype'}|[[{'var',113,'Reason'}|[{'type',113,'term',[]}]]]]}]]]]}]}],
		%% Line 119
		'spec' =
		    %% Line 119
		    [{{'ensure_all_started',1},[{'type',119,'bounded_fun',[{'type',119,'fun',[{'type',119,'product',[{'var',119,'Application'}]}|[{'type',119,'union',[{'type',119,'tuple',[{'atom',119,'ok'}|[{'var',119,'Started'}]]}|[{'type',119,'tuple',[{'atom',119,'error'}|[{'var',119,'Reason'}]]}]]}]]}|[[{'type',120,'constraint',[{'atom',120,'is_subtype'}|[[{'var',120,'Application'}|[{'type',120,'atom',[]}]]]]}|[{'type',121,'constraint',[{'atom',121,'is_subtype'}|[[{'var',121,'Started'}|[{'type',121,'list',[{'type',121,'atom',[]}]}]]]]}|[{'type',122,'constraint',[{'atom',122,'is_subtype'}|[[{'var',122,'Reason'}|[{'type',122,'term',[]}]]]]}]]]]]}]}],
		%% Line 126
		'spec' =
		    %% Line 126
		    [{{'ensure_all_started',2},[{'type',126,'bounded_fun',[{'type',126,'fun',[{'type',126,'product',[{'var',126,'Application'}|[{'var',126,'Type'}]]}|[{'type',126,'union',[{'type',126,'tuple',[{'atom',126,'ok'}|[{'var',126,'Started'}]]}|[{'type',126,'tuple',[{'atom',126,'error'}|[{'var',126,'Reason'}]]}]]}]]}|[[{'type',127,'constraint',[{'atom',127,'is_subtype'}|[[{'var',127,'Application'}|[{'type',127,'atom',[]}]]]]}|[{'type',128,'constraint',[{'atom',128,'is_subtype'}|[[{'var',128,'Type'}|[{'type',128,'restart_type',[]}]]]]}|[{'type',129,'constraint',[{'atom',129,'is_subtype'}|[[{'var',129,'Started'}|[{'type',129,'list',[{'type',129,'atom',[]}]}]]]]}|[{'type',130,'constraint',[{'atom',130,'is_subtype'}|[[{'var',130,'Reason'}|[{'type',130,'term',[]}]]]]}]]]]]]}]}],
		%% Line 158
		'spec' =
		    %% Line 158
		    [{{'start',1},[{'type',158,'bounded_fun',[{'type',158,'fun',[{'type',158,'product',[{'var',158,'Application'}]}|[{'type',158,'union',[{'atom',158,'ok'}|[{'type',158,'tuple',[{'atom',158,'error'}|[{'var',158,'Reason'}]]}]]}]]}|[[{'type',159,'constraint',[{'atom',159,'is_subtype'}|[[{'var',159,'Application'}|[{'type',159,'atom',[]}]]]]}|[{'type',160,'constraint',[{'atom',160,'is_subtype'}|[[{'var',160,'Reason'}|[{'type',160,'term',[]}]]]]}]]]]}]}],
		%% Line 165
		'spec' =
		    %% Line 165
		    [{{'start',2},[{'type',165,'bounded_fun',[{'type',165,'fun',[{'type',165,'product',[{'var',165,'Application'}|[{'var',165,'Type'}]]}|[{'type',165,'union',[{'atom',165,'ok'}|[{'type',165,'tuple',[{'atom',165,'error'}|[{'var',165,'Reason'}]]}]]}]]}|[[{'type',166,'constraint',[{'atom',166,'is_subtype'}|[[{'var',166,'Application'}|[{'type',166,'atom',[]}]]]]}|[{'type',167,'constraint',[{'atom',167,'is_subtype'}|[[{'var',167,'Type'}|[{'type',167,'restart_type',[]}]]]]}|[{'type',168,'constraint',[{'atom',168,'is_subtype'}|[[{'var',168,'Reason'}|[{'type',168,'term',[]}]]]]}]]]]]}]}],
		%% Line 181
		'spec' =
		    %% Line 181
		    [{{'ensure_started',1},[{'type',181,'bounded_fun',[{'type',181,'fun',[{'type',181,'product',[{'var',181,'Application'}]}|[{'type',181,'union',[{'atom',181,'ok'}|[{'type',181,'tuple',[{'atom',181,'error'}|[{'var',181,'Reason'}]]}]]}]]}|[[{'type',182,'constraint',[{'atom',182,'is_subtype'}|[[{'var',182,'Application'}|[{'type',182,'atom',[]}]]]]}|[{'type',183,'constraint',[{'atom',183,'is_subtype'}|[[{'var',183,'Reason'}|[{'type',183,'term',[]}]]]]}]]]]}]}],
		%% Line 188
		'spec' =
		    %% Line 188
		    [{{'ensure_started',2},[{'type',188,'bounded_fun',[{'type',188,'fun',[{'type',188,'product',[{'var',188,'Application'}|[{'var',188,'Type'}]]}|[{'type',188,'union',[{'atom',188,'ok'}|[{'type',188,'tuple',[{'atom',188,'error'}|[{'var',188,'Reason'}]]}]]}]]}|[[{'type',189,'constraint',[{'atom',189,'is_subtype'}|[[{'var',189,'Application'}|[{'type',189,'atom',[]}]]]]}|[{'type',190,'constraint',[{'atom',190,'is_subtype'}|[[{'var',190,'Type'}|[{'type',190,'restart_type',[]}]]]]}|[{'type',191,'constraint',[{'atom',191,'is_subtype'}|[[{'var',191,'Reason'}|[{'type',191,'term',[]}]]]]}]]]]]}]}],
		%% Line 203
		'spec' =
		    %% Line 203
		    [{{'start_boot',1},[{'type',203,'fun',[{'type',203,'product',[{'ann_type',203,[{'var',203,'Application'}|[{'type',203,'atom',[]}]]}]}|[{'type',203,'union',[{'atom',203,'ok'}|[{'type',203,'tuple',[{'atom',203,'error'}|[{'type',203,'term',[]}]]}]]}]]}]}],
		%% Line 208
		'spec' =
		    %% Line 208
		    [{{'start_boot',2},[{'type',208,'fun',[{'type',208,'product',[{'ann_type',208,[{'var',208,'Application'}|[{'type',208,'atom',[]}]]}|[{'ann_type',208,[{'var',208,'RestartType'}|[{'type',208,'restart_type',[]}]]}]]}|[{'type',209,'union',[{'atom',209,'ok'}|[{'type',209,'tuple',[{'atom',209,'error'}|[{'type',209,'term',[]}]]}]]}]]}]}],
		%% Line 214
		'spec' =
		    %% Line 214
		    [{{'takeover',2},[{'type',214,'bounded_fun',[{'type',214,'fun',[{'type',214,'product',[{'var',214,'Application'}|[{'var',214,'Type'}]]}|[{'type',214,'union',[{'atom',214,'ok'}|[{'type',214,'tuple',[{'atom',214,'error'}|[{'var',214,'Reason'}]]}]]}]]}|[[{'type',215,'constraint',[{'atom',215,'is_subtype'}|[[{'var',215,'Application'}|[{'type',215,'atom',[]}]]]]}|[{'type',216,'constraint',[{'atom',216,'is_subtype'}|[[{'var',216,'Type'}|[{'type',216,'restart_type',[]}]]]]}|[{'type',217,'constraint',[{'atom',217,'is_subtype'}|[[{'var',217,'Reason'}|[{'type',217,'term',[]}]]]]}]]]]]}]}],
		%% Line 222
		'spec' =
		    %% Line 222
		    [{{'permit',2},[{'type',222,'bounded_fun',[{'type',222,'fun',[{'type',222,'product',[{'var',222,'Application'}|[{'var',222,'Permission'}]]}|[{'type',222,'union',[{'atom',222,'ok'}|[{'type',222,'tuple',[{'atom',222,'error'}|[{'var',222,'Reason'}]]}]]}]]}|[[{'type',223,'constraint',[{'atom',223,'is_subtype'}|[[{'var',223,'Application'}|[{'type',223,'atom',[]}]]]]}|[{'type',224,'constraint',[{'atom',224,'is_subtype'}|[[{'var',224,'Permission'}|[{'type',224,'boolean',[]}]]]]}|[{'type',225,'constraint',[{'atom',225,'is_subtype'}|[[{'var',225,'Reason'}|[{'type',225,'term',[]}]]]]}]]]]]}]}],
		%% Line 242
		'spec' =
		    %% Line 242
		    [{{'stop',1},[{'type',242,'bounded_fun',[{'type',242,'fun',[{'type',242,'product',[{'var',242,'Application'}]}|[{'type',242,'union',[{'atom',242,'ok'}|[{'type',242,'tuple',[{'atom',242,'error'}|[{'var',242,'Reason'}]]}]]}]]}|[[{'type',243,'constraint',[{'atom',243,'is_subtype'}|[[{'var',243,'Application'}|[{'type',243,'atom',[]}]]]]}|[{'type',244,'constraint',[{'atom',244,'is_subtype'}|[[{'var',244,'Reason'}|[{'type',244,'term',[]}]]]]}]]]]}]}],
		%% Line 249
		'spec' =
		    %% Line 249
		    [{{'which_applications',0},[{'type',249,'bounded_fun',[{'type',249,'fun',[{'type',249,'product',[]}|[{'type',249,'list',[{'type',249,'tuple',[{'var',249,'Application'}|[{'var',249,'Description'}|[{'var',249,'Vsn'}]]]}]}]]}|[[{'type',250,'constraint',[{'atom',250,'is_subtype'}|[[{'var',250,'Application'}|[{'type',250,'atom',[]}]]]]}|[{'type',251,'constraint',[{'atom',251,'is_subtype'}|[[{'var',251,'Description'}|[{'type',251,'string',[]}]]]]}|[{'type',252,'constraint',[{'atom',252,'is_subtype'}|[[{'var',252,'Vsn'}|[{'type',252,'string',[]}]]]]}]]]]]}]}],
		%% Line 257
		'spec' =
		    %% Line 257
		    [{{'which_applications',1},[{'type',257,'bounded_fun',[{'type',257,'fun',[{'type',257,'product',[{'var',257,'Timeout'}]}|[{'type',257,'list',[{'type',257,'tuple',[{'var',257,'Application'}|[{'var',257,'Description'}|[{'var',257,'Vsn'}]]]}]}]]}|[[{'type',258,'constraint',[{'atom',258,'is_subtype'}|[[{'var',258,'Timeout'}|[{'type',258,'timeout',[]}]]]]}|[{'type',259,'constraint',[{'atom',259,'is_subtype'}|[[{'var',259,'Application'}|[{'type',259,'atom',[]}]]]]}|[{'type',260,'constraint',[{'atom',260,'is_subtype'}|[[{'var',260,'Description'}|[{'type',260,'string',[]}]]]]}|[{'type',261,'constraint',[{'atom',261,'is_subtype'}|[[{'var',261,'Vsn'}|[{'type',261,'string',[]}]]]]}]]]]]]}]}],
		%% Line 268
		'spec' =
		    %% Line 268
		    [{{'loaded_applications',0},[{'type',268,'bounded_fun',[{'type',268,'fun',[{'type',268,'product',[]}|[{'type',268,'list',[{'type',268,'tuple',[{'var',268,'Application'}|[{'var',268,'Description'}|[{'var',268,'Vsn'}]]]}]}]]}|[[{'type',269,'constraint',[{'atom',269,'is_subtype'}|[[{'var',269,'Application'}|[{'type',269,'atom',[]}]]]]}|[{'type',270,'constraint',[{'atom',270,'is_subtype'}|[[{'var',270,'Description'}|[{'type',270,'string',[]}]]]]}|[{'type',271,'constraint',[{'atom',271,'is_subtype'}|[[{'var',271,'Vsn'}|[{'type',271,'string',[]}]]]]}]]]]]}]}],
		%% Line 276
		'spec' =
		    %% Line 276
		    [{{'info',0},[{'type',276,'fun',[{'type',276,'product',[]}|[{'type',276,'term',[]}]]}]}],
		%% Line 281
		'spec' =
		    %% Line 281
		    [{{'set_env',3},[{'type',281,'bounded_fun',[{'type',281,'fun',[{'type',281,'product',[{'var',281,'Application'}|[{'var',281,'Par'}|[{'var',281,'Val'}]]]}|[{'atom',281,'ok'}]]}|[[{'type',282,'constraint',[{'atom',282,'is_subtype'}|[[{'var',282,'Application'}|[{'type',282,'atom',[]}]]]]}|[{'type',283,'constraint',[{'atom',283,'is_subtype'}|[[{'var',283,'Par'}|[{'type',283,'atom',[]}]]]]}|[{'type',284,'constraint',[{'atom',284,'is_subtype'}|[[{'var',284,'Val'}|[{'type',284,'term',[]}]]]]}]]]]]}]}],
		%% Line 289
		'spec' =
		    %% Line 289
		    [{{'set_env',4},[{'type',289,'bounded_fun',[{'type',289,'fun',[{'type',289,'product',[{'var',289,'Application'}|[{'var',289,'Par'}|[{'var',289,'Val'}|[{'var',289,'Opts'}]]]]}|[{'atom',289,'ok'}]]}|[[{'type',290,'constraint',[{'atom',290,'is_subtype'}|[[{'var',290,'Application'}|[{'type',290,'atom',[]}]]]]}|[{'type',291,'constraint',[{'atom',291,'is_subtype'}|[[{'var',291,'Par'}|[{'type',291,'atom',[]}]]]]}|[{'type',292,'constraint',[{'atom',292,'is_subtype'}|[[{'var',292,'Val'}|[{'type',292,'term',[]}]]]]}|[{'type',293,'constraint',[{'atom',293,'is_subtype'}|[[{'var',293,'Opts'}|[{'type',293,'list',[{'type',293,'union',[{'type',293,'tuple',[{'atom',293,'timeout'}|[{'type',293,'timeout',[]}]]}|[{'type',293,'tuple',[{'atom',293,'persistent'}|[{'type',293,'boolean',[]}]]}]]}]}]]]]}]]]]]]}]}],
		%% Line 302
		'spec' =
		    %% Line 302
		    [{{'unset_env',2},[{'type',302,'bounded_fun',[{'type',302,'fun',[{'type',302,'product',[{'var',302,'Application'}|[{'var',302,'Par'}]]}|[{'atom',302,'ok'}]]}|[[{'type',303,'constraint',[{'atom',303,'is_subtype'}|[[{'var',303,'Application'}|[{'type',303,'atom',[]}]]]]}|[{'type',304,'constraint',[{'atom',304,'is_subtype'}|[[{'var',304,'Par'}|[{'type',304,'atom',[]}]]]]}]]]]}]}],
		%% Line 309
		'spec' =
		    %% Line 309
		    [{{'unset_env',3},[{'type',309,'bounded_fun',[{'type',309,'fun',[{'type',309,'product',[{'var',309,'Application'}|[{'var',309,'Par'}|[{'var',309,'Opts'}]]]}|[{'atom',309,'ok'}]]}|[[{'type',310,'constraint',[{'atom',310,'is_subtype'}|[[{'var',310,'Application'}|[{'type',310,'atom',[]}]]]]}|[{'type',311,'constraint',[{'atom',311,'is_subtype'}|[[{'var',311,'Par'}|[{'type',311,'atom',[]}]]]]}|[{'type',312,'constraint',[{'atom',312,'is_subtype'}|[[{'var',312,'Opts'}|[{'type',312,'list',[{'type',312,'union',[{'type',312,'tuple',[{'atom',312,'timeout'}|[{'type',312,'timeout',[]}]]}|[{'type',312,'tuple',[{'atom',312,'persistent'}|[{'type',312,'boolean',[]}]]}]]}]}]]]]}]]]]]}]}],
		%% Line 321
		'spec' =
		    %% Line 321
		    [{{'get_env',1},[{'type',321,'bounded_fun',[{'type',321,'fun',[{'type',321,'product',[{'var',321,'Par'}]}|[{'type',321,'union',[{'atom',321,'undefined'}|[{'type',321,'tuple',[{'atom',321,'ok'}|[{'var',321,'Val'}]]}]]}]]}|[[{'type',322,'constraint',[{'atom',322,'is_subtype'}|[[{'var',322,'Par'}|[{'type',322,'atom',[]}]]]]}|[{'type',323,'constraint',[{'atom',323,'is_subtype'}|[[{'var',323,'Val'}|[{'type',323,'term',[]}]]]]}]]]]}]}],
		%% Line 328
		'spec' =
		    %% Line 328
		    [{{'get_env',2},[{'type',328,'bounded_fun',[{'type',328,'fun',[{'type',328,'product',[{'var',328,'Application'}|[{'var',328,'Par'}]]}|[{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'tuple',[{'atom',328,'ok'}|[{'var',328,'Val'}]]}]]}]]}|[[{'type',329,'constraint',[{'atom',329,'is_subtype'}|[[{'var',329,'Application'}|[{'type',329,'atom',[]}]]]]}|[{'type',330,'constraint',[{'atom',330,'is_subtype'}|[[{'var',330,'Par'}|[{'type',330,'atom',[]}]]]]}|[{'type',331,'constraint',[{'atom',331,'is_subtype'}|[[{'var',331,'Val'}|[{'type',331,'term',[]}]]]]}]]]]]}]}],
		%% Line 336
		'spec' =
		    %% Line 336
		    [{{'get_env',3},[{'type',336,'bounded_fun',[{'type',336,'fun',[{'type',336,'product',[{'var',336,'Application'}|[{'var',336,'Par'}|[{'var',336,'Def'}]]]}|[{'var',336,'Val'}]]}|[[{'type',337,'constraint',[{'atom',337,'is_subtype'}|[[{'var',337,'Application'}|[{'type',337,'atom',[]}]]]]}|[{'type',338,'constraint',[{'atom',338,'is_subtype'}|[[{'var',338,'Par'}|[{'type',338,'atom',[]}]]]]}|[{'type',339,'constraint',[{'atom',339,'is_subtype'}|[[{'var',339,'Def'}|[{'type',339,'term',[]}]]]]}|[{'type',340,'constraint',[{'atom',340,'is_subtype'}|[[{'var',340,'Val'}|[{'type',340,'term',[]}]]]]}]]]]]]}]}],
		%% Line 350
		'spec' =
		    %% Line 350
		    [{{'get_all_env',0},[{'type',350,'bounded_fun',[{'type',350,'fun',[{'type',350,'product',[]}|[{'var',350,'Env'}]]}|[[{'type',351,'constraint',[{'atom',351,'is_subtype'}|[[{'var',351,'Env'}|[{'type',351,'list',[{'type',351,'tuple',[{'ann_type',351,[{'var',351,'Par'}|[{'type',351,'atom',[]}]]}|[{'ann_type',351,[{'var',351,'Val'}|[{'type',351,'term',[]}]]}]]}]}]]]]}]]]}]}],
		%% Line 356
		'spec' =
		    %% Line 356
		    [{{'get_all_env',1},[{'type',356,'bounded_fun',[{'type',356,'fun',[{'type',356,'product',[{'var',356,'Application'}]}|[{'var',356,'Env'}]]}|[[{'type',357,'constraint',[{'atom',357,'is_subtype'}|[[{'var',357,'Application'}|[{'type',357,'atom',[]}]]]]}|[{'type',358,'constraint',[{'atom',358,'is_subtype'}|[[{'var',358,'Env'}|[{'type',358,'list',[{'type',358,'tuple',[{'ann_type',358,[{'var',358,'Par'}|[{'type',358,'atom',[]}]]}|[{'ann_type',358,[{'var',358,'Val'}|[{'type',358,'term',[]}]]}]]}]}]]]]}]]]]}]}],
		%% Line 363
		'spec' =
		    %% Line 363
		    [{{'get_key',1},[{'type',363,'bounded_fun',[{'type',363,'fun',[{'type',363,'product',[{'var',363,'Key'}]}|[{'type',363,'union',[{'atom',363,'undefined'}|[{'type',363,'tuple',[{'atom',363,'ok'}|[{'var',363,'Val'}]]}]]}]]}|[[{'type',364,'constraint',[{'atom',364,'is_subtype'}|[[{'var',364,'Key'}|[{'type',364,'atom',[]}]]]]}|[{'type',365,'constraint',[{'atom',365,'is_subtype'}|[[{'var',365,'Val'}|[{'type',365,'term',[]}]]]]}]]]]}]}],
		%% Line 370
		'spec' =
		    %% Line 370
		    [{{'get_key',2},[{'type',370,'bounded_fun',[{'type',370,'fun',[{'type',370,'product',[{'var',370,'Application'}|[{'var',370,'Key'}]]}|[{'type',370,'union',[{'atom',370,'undefined'}|[{'type',370,'tuple',[{'atom',370,'ok'}|[{'var',370,'Val'}]]}]]}]]}|[[{'type',371,'constraint',[{'atom',371,'is_subtype'}|[[{'var',371,'Application'}|[{'type',371,'atom',[]}]]]]}|[{'type',372,'constraint',[{'atom',372,'is_subtype'}|[[{'var',372,'Key'}|[{'type',372,'atom',[]}]]]]}|[{'type',373,'constraint',[{'atom',373,'is_subtype'}|[[{'var',373,'Val'}|[{'type',373,'term',[]}]]]]}]]]]]}]}],
		%% Line 378
		'spec' =
		    %% Line 378
		    [{{'get_all_key',0},[{'type',378,'bounded_fun',[{'type',378,'fun',[{'type',378,'product',[]}|[{'type',378,'union',[{'type',378,'nil',[]}|[{'type',378,'tuple',[{'atom',378,'ok'}|[{'var',378,'Keys'}]]}]]}]]}|[[{'type',379,'constraint',[{'atom',379,'is_subtype'}|[[{'var',379,'Keys'}|[{'type',379,'nonempty_list',[{'type',379,'tuple',[{'ann_type',379,[{'var',379,'Key'}|[{'type',379,'atom',[]}]]}|[{'ann_type',379,[{'var',379,'Val'}|[{'type',379,'term',[]}]]}]]}]}]]]]}]]]}]}],
		%% Line 384
		'spec' =
		    %% Line 384
		    [{{'get_all_key',1},[{'type',384,'bounded_fun',[{'type',384,'fun',[{'type',384,'product',[{'var',384,'Application'}]}|[{'type',384,'union',[{'atom',384,'undefined'}|[{'var',384,'Keys'}]]}]]}|[[{'type',385,'constraint',[{'atom',385,'is_subtype'}|[[{'var',385,'Application'}|[{'type',385,'atom',[]}]]]]}|[{'type',386,'constraint',[{'atom',386,'is_subtype'}|[[{'var',386,'Keys'}|[{'type',386,'tuple',[{'atom',386,'ok'}|[{'type',386,'nonempty_list',[{'type',386,'tuple',[{'ann_type',386,[{'var',386,'Key'}|[{'type',386,'atom',[]}]]}|[{'ann_type',386,[{'var',386,'Val'}|[{'type',386,'term',[]}]]}]]}]}]]}]]]]}]]]]}]}],
		%% Line 391
		'spec' =
		    %% Line 391
		    [{{'get_application',0},[{'type',391,'bounded_fun',[{'type',391,'fun',[{'type',391,'product',[]}|[{'type',391,'union',[{'atom',391,'undefined'}|[{'type',391,'tuple',[{'atom',391,'ok'}|[{'var',391,'Application'}]]}]]}]]}|[[{'type',392,'constraint',[{'atom',392,'is_subtype'}|[[{'var',392,'Application'}|[{'type',392,'atom',[]}]]]]}]]]}]}],
		%% Line 397
		'spec' =
		    %% Line 397
		    [{{'get_application',1},[{'type',397,'bounded_fun',[{'type',397,'fun',[{'type',397,'product',[{'var',397,'PidOrModule'}]}|[{'type',397,'union',[{'atom',397,'undefined'}|[{'type',397,'tuple',[{'atom',397,'ok'}|[{'var',397,'Application'}]]}]]}]]}|[[{'type',398,'constraint',[{'atom',398,'is_subtype'}|[[{'var',398,'PidOrModule'}|[{'type',398,'union',[{'paren_type',398,[{'ann_type',398,[{'var',398,'Pid'}|[{'type',398,'pid',[]}]]}]}|[{'paren_type',398,[{'ann_type',398,[{'var',398,'Module'}|[{'type',398,'module',[]}]]}]}]]}]]]]}|[{'type',399,'constraint',[{'atom',399,'is_subtype'}|[[{'var',399,'Application'}|[{'type',399,'atom',[]}]]]]}]]]]}]}],
		%% Line 411
		'spec' =
		    %% Line 411
		    [{{'start_type',0},[{'type',411,'bounded_fun',[{'type',411,'fun',[{'type',411,'product',[]}|[{'type',411,'union',[{'var',411,'StartType'}|[{'atom',411,'undefined'}|[{'atom',411,'local'}]]]}]]}|[[{'type',412,'constraint',[{'atom',412,'is_subtype'}|[[{'var',412,'StartType'}|[{'type',412,'start_type',[]}]]]]}]]]}]}]]
'load'/1 =
    %% Line 79
    fun (_cor0) ->
	%% Line 80
	apply 'load1'/2
	    (_cor0, [])
'load'/2 =
    %% Line 92
    fun (_cor1,_cor0) ->
	%% Line 93
	apply 'load1'/2
	    (_cor1, _cor0)
'load1'/2 =
    %% Line 96
    fun (_cor1,_cor0) ->
	%% Line 97
	case call 'application_controller':'load_application'
		 (_cor1) of
	  %% Line 98
	  <'ok'>
	      when call 'erlang':'=/='
		    (_cor0,
		     []) ->
	      let <AppName> =
		  %% Line 99
		  apply 'get_appl_name'/1
		      (_cor1)
	      in  %% Line 100
		  case call 'dist_ac':'load_application'
			   (AppName, _cor0) of
		    %% Line 101
		    <'ok'> when 'true' ->
			%% Line 102
			'ok'
		    %% Line 103
		    <{'error',R}> when 'true' ->
			do  %% Line 104
			    call 'application_controller':'unload_application'
				(AppName)
			    %% Line 105
			    {'error',R}
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor3})
		      -| ['compiler_generated'] )
		  end
	  %% Line 107
	  <Else> when 'true' ->
	      %% Line 108
	      Else
	end
'unload'/1 =
    %% Line 115
    fun (_cor0) ->
	%% Line 116
	call 'application_controller':'unload_application'
	    (_cor0)
'ensure_all_started'/1 =
    %% Line 123
    fun (_cor0) ->
	%% Line 124
	apply 'ensure_all_started'/2
	    (_cor0, 'temporary')
'ensure_all_started'/2 =
    %% Line 131
    fun (_cor1,_cor0) ->
	%% Line 132
	case apply 'ensure_all_started'/3
		 (_cor1, _cor0, []) of
	  %% Line 133
	  <{'ok',Started}> when 'true' ->
	      let <_cor2> =
		  %% Line 134
		  call 'lists':'reverse'
		      (Started)
	      in  %% Line 134
		  {'ok',_cor2}
	  %% Line 135
	  <{'error',Reason,Started}> when 'true' ->
	      let <_cor8> =
		  %% Line 136
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor5) ->
				case _cor5 of
				  <[App|_cor4]> when 'true' ->
				      let <_cor6> =
					  apply 'stop'/1
					      (App)
				      in  let <_cor7> =
					      apply 'lc$^0'/1
						  (_cor4)
					  in  ( [_cor6|_cor7]
						-| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_cor5> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor5})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (Started)
		    -| ['list_comprehension'] )
	      in  %% Line 137
		  {'error',Reason}
	  ( <_cor10> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor10})
	    -| ['compiler_generated'] )
	end
'ensure_all_started'/3 =
    %% Line 140
    fun (_cor2,_cor1,_cor0) ->
	%% Line 141
	case apply 'start'/2
		 (_cor2, _cor1) of
	  %% Line 142
	  <'ok'> when 'true' ->
	      %% Line 143
	      {'ok',[_cor2|_cor0]}
	  %% Line 144
	  <{'error',{'already_started',_cor8}}>
	      when call 'erlang':'=:='
		    (_cor8,
		     _cor2) ->
	      %% Line 145
	      {'ok',_cor0}
	  %% Line 146
	  <{'error',{'not_started',Dependency}}> when 'true' ->
	      %% Line 147
	      case apply 'ensure_all_started'/3
		       (Dependency, _cor1, _cor0) of
		%% Line 148
		<{'ok',NewStarted}> when 'true' ->
		    %% Line 149
		    apply 'ensure_all_started'/3
			(_cor2, _cor1, NewStarted)
		%% Line 150
		<Error> when 'true' ->
		    %% Line 151
		    Error
	      end
	  %% Line 153
	  <{'error',Reason}> when 'true' ->
	      %% Line 154
	      {'error',{_cor2,Reason},_cor0}
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor4})
	    -| ['compiler_generated'] )
	end
'start'/1 =
    %% Line 162
    fun (_cor0) ->
	%% Line 163
	apply 'start'/2
	    (_cor0, 'temporary')
'start'/2 =
    %% Line 170
    fun (_cor1,_cor0) ->
	%% Line 171
	case apply 'load'/1
		 (_cor1) of
	  %% Line 172
	  <'ok'> when 'true' ->
	      let <Name> =
		  %% Line 173
		  apply 'get_appl_name'/1
		      (_cor1)
	      in  %% Line 174
		  call 'application_controller':'start_application'
		      (Name, _cor0)
	  %% Line 175
	  <{'error',{'already_loaded',Name}}> when 'true' ->
	      %% Line 176
	      call 'application_controller':'start_application'
		  (Name, _cor0)
	  %% Line 177
	  <Error> when 'true' ->
	      %% Line 178
	      Error
	end
'ensure_started'/1 =
    %% Line 185
    fun (_cor0) ->
	%% Line 186
	apply 'ensure_started'/2
	    (_cor0, 'temporary')
'ensure_started'/2 =
    %% Line 193
    fun (_cor1,_cor0) ->
	%% Line 194
	case apply 'start'/2
		 (_cor1, _cor0) of
	  %% Line 195
	  <'ok'> when 'true' ->
	      %% Line 196
	      'ok'
	  %% Line 197
	  <{'error',{'already_started',_cor5}}>
	      when call 'erlang':'=:='
		    (_cor5,
		     _cor1) ->
	      %% Line 198
	      'ok'
	  %% Line 199
	  <Error> when 'true' ->
	      %% Line 200
	      Error
	end
'start_boot'/1 =
    %% Line 205
    fun (_cor0) ->
	%% Line 206
	apply 'start_boot'/2
	    (_cor0, 'temporary')
'start_boot'/2 =
    %% Line 211
    fun (_cor1,_cor0) ->
	%% Line 212
	call 'application_controller':'start_boot_application'
	    (_cor1, _cor0)
'takeover'/2 =
    %% Line 219
    fun (_cor1,_cor0) ->
	%% Line 220
	call 'dist_ac':'takeover_application'
	    (_cor1, _cor0)
'permit'/2 =
    %% Line 227
    fun (_cor1,_cor0) ->
	do  %% Line 228
	    case _cor0 of
	      %% Line 229
	      <'true'> when 'true' ->
		  'ok'
	      %% Line 230
	      <'false'> when 'true' ->
		  'ok'
	      %% Line 231
	      <Bad> when 'true' ->
		  call 'erlang':'exit'
		      ({'badarg',{'application','permit',[_cor1|[Bad|[]]]}})
	    end
	    %% Line 233
	    case call 'application_controller':'permit_application'
		     (_cor1, _cor0) of
	      %% Line 234
	      <'distributed_application'> when 'true' ->
		  %% Line 235
		  call 'dist_ac':'permit_application'
		      (_cor1, _cor0)
	      %% Line 236
	      <{'distributed_application','only_loaded'}> when 'true' ->
		  %% Line 237
		  call 'dist_ac':'permit_only_loaded_application'
		      (_cor1, _cor0)
	      %% Line 238
	      <LocalResult> when 'true' ->
		  %% Line 239
		  LocalResult
	    end
'stop'/1 =
    %% Line 246
    fun (_cor0) ->
	%% Line 247
	call 'application_controller':'stop_application'
	    (_cor0)
'which_applications'/0 =
    %% Line 254
    fun () ->
	%% Line 255
	call 'application_controller':'which_applications'
	    ()
'which_applications'/1 =
    %% Line 263
    fun (_cor0) ->
	case _cor0 of
	  <'infinity'> when 'true' ->
	      %% Line 264
	      call 'application_controller':'which_applications'
		  ('infinity')
	  %% Line 265
	  <Timeout>
	      when let <_cor1> =
		    call 'erlang':'is_integer'
			(_cor0)
		in  let <_cor2> =
			call 'erlang':'>='
			    (_cor0, 0)
		    in  call 'erlang':'and'
			    (_cor1, _cor2) ->
	      %% Line 266
	      call 'application_controller':'which_applications'
		  (Timeout)
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'which_applications',1}}] )
	    -| ['compiler_generated'] )
	end
'loaded_applications'/0 =
    %% Line 273
    fun () ->
	%% Line 274
	call 'application_controller':'loaded_applications'
	    ()
'info'/0 =
    %% Line 278
    fun () ->
	%% Line 279
	call 'application_controller':'info'
	    ()
'set_env'/3 =
    %% Line 286
    fun (_cor2,_cor1,_cor0) ->
	%% Line 287
	call 'application_controller':'set_env'
	    (_cor2, _cor1, _cor0)
'set_env'/4 =
    %% Line 295
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Application,Key,Val,'infinity'> when 'true' ->
	      %% Line 296
	      apply 'set_env'/4
		  (Application, Key, Val, [{'timeout','infinity'}])
	  %% Line 297
	  <Application,Key,Val,Timeout>
	      when let <_cor4> =
		    call 'erlang':'is_integer'
			(Timeout)
		in  let <_cor5> =
			call 'erlang':'>='
			    (Timeout, 0)
		    in  call 'erlang':'and'
			    (_cor4, _cor5) ->
	      %% Line 298
	      apply 'set_env'/4
		  (Application, Key, Val, [{'timeout',Timeout}|[]])
	  %% Line 299
	  <Application,Key,Val,Opts>
	      when call 'erlang':'is_list'
		    (Opts) ->
	      %% Line 300
	      call 'application_controller':'set_env'
		  (Application, Key, Val, Opts)
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'set_env',4}}] )
	    -| ['compiler_generated'] )
	end
'unset_env'/2 =
    %% Line 306
    fun (_cor1,_cor0) ->
	%% Line 307
	call 'application_controller':'unset_env'
	    (_cor1, _cor0)
'unset_env'/3 =
    %% Line 314
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Application,Key,'infinity'> when 'true' ->
	      %% Line 315
	      apply 'unset_env'/3
		  (Application, Key, [{'timeout','infinity'}])
	  %% Line 316
	  <Application,Key,Timeout>
	      when let <_cor3> =
		    call 'erlang':'is_integer'
			(Timeout)
		in  let <_cor4> =
			call 'erlang':'>='
			    (Timeout, 0)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      %% Line 317
	      apply 'unset_env'/3
		  (Application, Key, [{'timeout',Timeout}|[]])
	  %% Line 318
	  <Application,Key,Opts>
	      when call 'erlang':'is_list'
		    (Opts) ->
	      %% Line 319
	      call 'application_controller':'unset_env'
		  (Application, Key, Opts)
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'unset_env',3}}] )
	    -| ['compiler_generated'] )
	end
'get_env'/1 =
    %% Line 325
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 326
	    call 'erlang':'group_leader'
		()
	in  %% Line 326
	    call 'application_controller':'get_pid_env'
		(_cor1, _cor0)
'get_env'/2 =
    %% Line 333
    fun (_cor1,_cor0) ->
	%% Line 334
	call 'application_controller':'get_env'
	    (_cor1, _cor0)
'get_env'/3 =
    %% Line 342
    fun (_cor2,_cor1,_cor0) ->
	%% Line 343
	case apply 'get_env'/2
		 (_cor2, _cor1) of
	  %% Line 344
	  <{'ok',Val}> when 'true' ->
	      %% Line 345
	      Val
	  %% Line 346
	  <'undefined'> when 'true' ->
	      _cor0
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor3})
	    -| ['compiler_generated'] )
	end
'get_all_env'/0 =
    %% Line 353
    fun () ->
	let <_cor0> =
	    %% Line 354
	    call 'erlang':'group_leader'
		()
	in  %% Line 354
	    call 'application_controller':'get_pid_all_env'
		(_cor0)
'get_all_env'/1 =
    %% Line 360
    fun (_cor0) ->
	%% Line 361
	call 'application_controller':'get_all_env'
	    (_cor0)
'get_key'/1 =
    %% Line 367
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 368
	    call 'erlang':'group_leader'
		()
	in  %% Line 368
	    call 'application_controller':'get_pid_key'
		(_cor1, _cor0)
'get_key'/2 =
    %% Line 375
    fun (_cor1,_cor0) ->
	%% Line 376
	call 'application_controller':'get_key'
	    (_cor1, _cor0)
'get_all_key'/0 =
    %% Line 381
    fun () ->
	let <_cor0> =
	    %% Line 382
	    call 'erlang':'group_leader'
		()
	in  %% Line 382
	    call 'application_controller':'get_pid_all_key'
		(_cor0)
'get_all_key'/1 =
    %% Line 388
    fun (_cor0) ->
	%% Line 389
	call 'application_controller':'get_all_key'
	    (_cor0)
'get_application'/0 =
    %% Line 394
    fun () ->
	let <_cor0> =
	    %% Line 395
	    call 'erlang':'group_leader'
		()
	in  %% Line 395
	    call 'application_controller':'get_application'
		(_cor0)
'get_application'/1 =
    %% Line 401
    fun (_cor0) ->
	case _cor0 of
	  <Pid>
	      when call 'erlang':'is_pid'
		    (_cor0) ->
	      %% Line 402
	      case call 'erlang':'process_info'
		       (Pid, 'group_leader') of
		%% Line 403
		<{'group_leader',Gl}> when 'true' ->
		    %% Line 404
		    call 'application_controller':'get_application'
			(Gl)
		%% Line 405
		<'undefined'> when 'true' ->
		    %% Line 406
		    'undefined'
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor1})
		  -| ['compiler_generated'] )
	      end
	  %% Line 408
	  <Module>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      %% Line 409
	      call 'application_controller':'get_application_module'
		  (Module)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'get_application',1}}] )
	    -| ['compiler_generated'] )
	end
'start_type'/0 =
    %% Line 414
    fun () ->
	let <_cor0> =
	    %% Line 415
	    call 'erlang':'group_leader'
		()
	in  %% Line 415
	    call 'application_controller':'start_type'
		(_cor0)
'get_appl_name'/1 =
    %% Line 418
    fun (_cor0) ->
	case _cor0 of
	  <Name>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      Name
	  %% Line 419
	  <{'application',Name,_cor2}>
	      when call 'erlang':'is_atom'
		    (Name) ->
	      Name
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'get_appl_name',1}}] )
	    -| ['compiler_generated'] )
	end
'behaviour_info'/1 =
    fun (_cor0) ->
	case _cor0 of
	  <'callbacks'> when 'true' ->
	      [{'start',2}|[{'stop',1}]]
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'behaviour_info',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('application')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('application', _cor0)
end