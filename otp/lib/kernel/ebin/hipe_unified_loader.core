module 'hipe_unified_loader' ['chunk_name'/1,
			      'load'/2,
			      'load_module'/3,
			      'load_native_code'/2,
			      'module_info'/0,
			      'module_info'/1,
			      'post_beam_load'/1]
    attributes [%% Line 301
		'type' =
		    %% Line 301
		    [{{'record','comp_servers'},[{'typed_record_field',{'record_field',301,{'atom',301,'pp_server'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}|[{'typed_record_field',{'record_field',301,{'atom',301,'range'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}|[{'typed_record_field',{'record_field',301,{'atom',301,'type'}},{'type',301,'union',[{'atom',301,'undefined'}|[{'type',301,'pid',[]}]]}}]]],[]}],
		%% Line 307
		'type' =
		    %% Line 307
		    [{'comp_option',{'type',307,'union',[{'type',307,'atom',[]}|[{'type',307,'tuple',[{'type',307,'atom',[]}|[{'type',307,'atom',[]}]]}]]},[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{'comp_options',{'type',308,'list',[{'type',308,'comp_option',[]}]},[]}],
		%% Line 310
		'type' =
		    %% Line 310
		    [{'hipe_architecture',{'type',311,'union',[{'atom',311,'amd64'}|[{'atom',311,'arm'}|[{'atom',311,'powerpc'}|[{'atom',311,'ppc64'}|[{'atom',311,'ultrasparc'}|[{'atom',311,'x86'}]]]]]]},[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{'hipe_map',{'type',313,'list',[{'type',313,'tuple',[{'type',313,'non_neg_integer',[]}|[{'type',314,'union',[{'atom',314,'unknown'}|[{'type',314,'tuple',[{'type',314,'union',[{'atom',314,'reg'}|[{'atom',314,'fp_reg'}|[{'atom',314,'spill'}]]]}|[{'type',315,'non_neg_integer',[]}]]}]]}]]}]},[]}],
		%% Line 316
		'type' =
		    %% Line 316
		    [{'hipe_temp_map',{'type',316,'tuple','any'},[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{'hipe_spill_map',{'type',317,'list',[{'type',317,'tuple',[{'type',317,'non_neg_integer',[]}|[{'type',317,'tuple',[{'atom',317,'spill'}|[{'type',317,'non_neg_integer',[]}]]}]]}]},[]}],
		%% Line 68
		'spec' =
		    %% Line 68
		    [{{'chunk_name',1},[{'type',68,'fun',[{'type',68,'product',[{'type',68,'hipe_architecture',[]}]}|[{'type',68,'string',[]}]]}]}],
		%% Line 87
		'spec' =
		    %% Line 87
		    [{{'load_native_code',2},[{'type',87,'bounded_fun',[{'type',87,'fun',[{'type',87,'product',[{'var',87,'Mod'}|[{'type',87,'binary',[]}]]}|[{'type',87,'union',[{'atom',87,'no_native'}|[{'type',87,'tuple',[{'atom',87,'module'}|[{'var',87,'Mod'}]]}]]}]]}|[[{'type',88,'constraint',[{'atom',88,'is_subtype'}|[[{'var',88,'Mod'}|[{'type',88,'atom',[]}]]]]}]]]}]}],
		%% Line 121
		'spec' =
		    %% Line 121
		    [{{'post_beam_load',1},[{'type',121,'fun',[{'type',121,'product',[{'type',121,'atom',[]}]}|[{'atom',121,'ok'}]]}]}],
		%% Line 151
		'spec' =
		    %% Line 151
		    [{{'load_module',3},[{'type',151,'bounded_fun',[{'type',151,'fun',[{'type',151,'product',[{'var',151,'Mod'}|[{'type',151,'binary',[]}|[{'var',151,'_'}]]]}|[{'type',151,'union',[{'atom',151,'bad_crc'}|[{'type',151,'tuple',[{'atom',151,'module'}|[{'var',151,'Mod'}]]}]]}]]}|[[{'type',152,'constraint',[{'atom',152,'is_subtype'}|[[{'var',152,'Mod'}|[{'type',152,'atom',[]}]]]]}]]]}]}],
		%% Line 172
		'spec' =
		    %% Line 172
		    [{{'load',2},[{'type',172,'bounded_fun',[{'type',172,'fun',[{'type',172,'product',[{'var',172,'Mod'}|[{'type',172,'binary',[]}]]}|[{'type',172,'union',[{'atom',172,'bad_crc'}|[{'type',172,'tuple',[{'atom',172,'module'}|[{'var',172,'Mod'}]]}]]}]]}|[[{'type',172,'constraint',[{'atom',172,'is_subtype'}|[[{'var',172,'Mod'}|[{'type',172,'atom',[]}]]]]}]]]}]}],
		%% Line 355
		'type' =
		    %% Line 355
		    [{{'record','fundef'},[{'typed_record_field',{'record_field',355,{'atom',355,'address'}},{'type',355,'union',[{'atom',355,'undefined'}|[{'type',355,'integer',[]}]]}}|[{'typed_record_field',{'record_field',356,{'atom',356,'mfa'}},{'type',356,'union',[{'atom',356,'undefined'}|[{'type',356,'mfa',[]}]]}}|[{'typed_record_field',{'record_field',357,{'atom',357,'is_closure'}},{'type',357,'union',[{'atom',357,'undefined'}|[{'type',357,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',358,{'atom',358,'is_exported'}},{'type',358,'union',[{'atom',358,'undefined'}|[{'type',358,'boolean',[]}]]}}]]]],[]}],
		%% Line 847
		'spec' =
		    %% Line 847
		    [{{'is_loaded',1},[{'type',847,'fun',[{'type',847,'product',[{'ann_type',847,[{'var',847,'Module'}|[{'type',847,'atom',[]}]]}]}|[{'type',847,'boolean',[]}]]}]}]]
'chunk_name'/1 =
    %% Line 73
    fun (_cor0) ->
	%% Line 74
	case _cor0 of
	  %% Line 75
	  <'amd64'> when 'true' ->
	      [72|[65|[54|[52]]]]
	  %% Line 76
	  <'arm'> when 'true' ->
	      [72|[65|[82|[77]]]]
	  %% Line 77
	  <'powerpc'> when 'true' ->
	      [72|[80|[80|[67]]]]
	  %% Line 78
	  <'ppc64'> when 'true' ->
	      [72|[80|[54|[52]]]]
	  %% Line 79
	  <'ultrasparc'> when 'true' ->
	      [72|[83|[56|[80]]]]
	  %% Line 80
	  <'x86'> when 'true' ->
	      [72|[88|[56|[54]]]]
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor1})
	    -| ['compiler_generated'] )
	end
'load_native_code'/2 =
    %% Line 94
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Mod,Bin>
	      when let <_cor2> =
		    call 'erlang':'is_atom'
			(Mod)
		in  let <_cor3> =
			call 'erlang':'is_binary'
			    (Bin)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      let <Architecture> =
		  %% Line 95
		  call 'erlang':'system_info'
		      ('hipe_architecture')
	      in  %% Line 96
		  try
		      apply 'chunk_name'/1
			  (Architecture)
		  of <_cor5> ->
		      %% Line 99
		      case call 'code':'get_chunk'
			       (Bin, _cor5) of
			%% Line 100
			<'undefined'> when 'true' ->
			    'no_native'
			%% Line 101
			<NativeCode>
			    when call 'erlang':'is_binary'
				  (NativeCode) ->
			    do  %% Line 102
				call 'erlang':'system_flag'
				    ('multi_scheduling', 'block')
				%% Line 103
				letrec
				    'after$^0'/0 =
					fun () ->
					    %% Line 110
					    call 'erlang':'system_flag'
						('multi_scheduling', 'unblock')
				in  try
					let <OldReferencesToPatch> =
					    %% Line 104
					    apply 'patch_to_emu_step1'/1
						(Mod)
					in  %% Line 105
					    case apply 'load_module'/4
						     (Mod, NativeCode, Bin, OldReferencesToPatch) of
					      %% Line 106
					      <'bad_crc'> when 'true' ->
						  'no_native'
					      %% Line 107
					      <Result> when 'true' ->
						  Result
					    end
				    of <_cor8> ->
					do  ( apply 'after$^0'/0
						  ()
					      -| ['compiler_generated'] )
					    _cor8
				    catch <_cor11,_cor10,_cor9> ->
					do  ( apply 'after$^0'/0
						  ()
					      -| ['compiler_generated'] )
					    primop 'raise'
						(_cor9, _cor10)
			( <_cor12> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor12})
			  -| ['compiler_generated'] )
		      end
		  catch <_cor16,_cor15,_cor14> ->
		      %% Line 116
		      'no_native'
	  ( <_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17})
		  -| [{'function_name',{'load_native_code',2}}] )
	    -| ['compiler_generated'] )
	end
'post_beam_load'/1 =
    %% Line 123
    fun (_cor0) ->
	case _cor0 of
	  <Mod>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      let <Architecture> =
		  %% Line 124
		  call 'erlang':'system_info'
		      ('hipe_architecture')
	      in  %% Line 125
		  try
		      apply 'chunk_name'/1
			  (Architecture)
		  of <_cor2> ->
		      do  %% Line 127
			  call 'erlang':'system_flag'
			      ('multi_scheduling', 'block')
			  %% Line 128
			  letrec
			      'after$^0'/0 =
				  fun () ->
				      %% Line 131
				      call 'erlang':'system_flag'
					  ('multi_scheduling', 'unblock')
			  in  try
				  %% Line 129
				  apply 'patch_to_emu'/1
				      (Mod)
			      of <_cor3> ->
				  do  ( apply 'after$^0'/0
					    ()
					-| ['compiler_generated'] )
				      _cor3
			      catch <_cor6,_cor5,_cor4> ->
				  do  ( apply 'after$^0'/0
					    ()
					-| ['compiler_generated'] )
				      primop 'raise'
					  (_cor4, _cor5)
		  catch <_cor10,_cor9,_cor8> ->
		      %% Line 135
		      'ok'
	  ( <_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11})
		  -| [{'function_name',{'post_beam_load',1}}] )
	    -| ['compiler_generated'] )
	end
'version_check'/2 =
    %% Line 140
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Version,Mod>
	      when call 'erlang':'is_atom'
		    (Mod) ->
	      %% Line 142
	      case call 'erlang':'<'
		       (Version, [51|[46|[49|[49]]]]) of
		%% Line 143
		<'true'> when 'true' ->
		    %% Line 144
		    call 'code_server':'info_msg'
			([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[87|[65|[82|[78|[73|[78|[71|[58|[32|[77|[111|[100|[117|[108|[101|[32|[126|[119|[32|[119|[97|[115|[32|[99|[111|[109|[112|[105|[108|[101|[100|[32|[119|[105|[116|[104|[32|[72|[105|[80|[69|[32|[118|[101|[114|[115|[105|[111|[110|[32|[126|[115|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 145
																																																		   [Mod|[Version|[]]])
		%% Line 146
		<_cor9> when 'true' ->
		    'ok'
	      end
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'version_check',2}}] )
	    -| ['compiler_generated'] )
	end
'load_module'/3 =
    %% Line 153
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 154
	    call 'erlang':'system_flag'
		('multi_scheduling', 'block')
	    %% Line 155
	    letrec
		'after$^0'/0 =
		    fun () ->
			%% Line 158
			call 'erlang':'system_flag'
			    ('multi_scheduling', 'unblock')
	    in  try
		    %% Line 156
		    apply 'load_module_nosmp'/3
			(_cor2, _cor1, _cor0)
		of <_cor3> ->
		    do  ( apply 'after$^0'/0
			      ()
			  -| ['compiler_generated'] )
			_cor3
		catch <_cor6,_cor5,_cor4> ->
		    do  ( apply 'after$^0'/0
			      ()
			  -| ['compiler_generated'] )
			primop 'raise'
			    (_cor4, _cor5)
'load_module_nosmp'/3 =
    %% Line 161
    fun (_cor2,_cor1,_cor0) ->
	%% Line 162
	apply 'load_module'/4
	    (_cor2, _cor1, _cor0, [])
'load_module'/4 =
    %% Line 164
    fun (_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 167
	    call 'erlang':'put'
		('hipe_patch_closures', 'false')
	    %% Line 168
	    apply 'load_common'/4
		(_cor3, _cor2, _cor1, _cor0)
'load'/2 =
    %% Line 174
    fun (_cor1,_cor0) ->
	do  %% Line 175
	    call 'erlang':'system_flag'
		('multi_scheduling', 'block')
	    %% Line 176
	    letrec
		'after$^0'/0 =
		    fun () ->
			%% Line 179
			call 'erlang':'system_flag'
			    ('multi_scheduling', 'unblock')
	    in  try
		    %% Line 177
		    apply 'load_nosmp'/2
			(_cor1, _cor0)
		of <_cor2> ->
		    do  ( apply 'after$^0'/0
			      ()
			  -| ['compiler_generated'] )
			_cor2
		catch <_cor5,_cor4,_cor3> ->
		    do  ( apply 'after$^0'/0
			      ()
			  -| ['compiler_generated'] )
			primop 'raise'
			    (_cor3, _cor4)
'load_nosmp'/2 =
    %% Line 182
    fun (_cor1,_cor0) ->
	do  %% Line 185
	    call 'erlang':'put'
		('hipe_patch_closures', 'true')
	    %% Line 186
	    apply 'load_common'/4
		(_cor1, _cor0, [], [])
'load_common'/4 =
    %% Line 190
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 196
	case call 'erlang':'binary_to_term'
		 (_cor2) of
	  <[{Version,CheckSum}|[ConstAlign|[ConstSize|[ConstMap|[LabelMap|[ExportMap|[CodeSize|[CodeBinary|[Refs|[0|[[]]]]]]]]]]]]> when 'true' ->
	      do  %% Line 205
		  apply 'version_check'/2
		      (Version, _cor3)
		  %% Line 206
		  case call 'hipe_bifs':'check_crc'
			   (CheckSum) of
		    %% Line 207
		    <'false'> when 'true' ->
			do  %% Line 208
			    call 'code_server':'info_msg'
				([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[87|[97|[114|[110|[105|[110|[103|[58|[32|[110|[111|[116|[32|[108|[111|[97|[100|[105|[110|[103|[32|[110|[97|[116|[105|[118|[101|[32|[99|[111|[100|[101|[32|[102|[111|[114|[32|[109|[111|[100|[117|[108|[101|[32|[126|[119|[58|[32|[105|[116|[32|[119|[97|[115|[32|[99|[111|[109|[112|[105|[108|[101|[100|[32|[102|[111|[114|[32|[97|[110|[32|[105|[110|[99|[111|[109|[112|[97|[116|[105|[98|[108|[101|[32|[114|[117|[110|[116|[105|[109|[101|[32|[115|[121|[115|[116|[101|[109|[59|[32|[112|[108|[101|[97|[115|[101|[32|[114|[101|[103|[101|[110|[101|[114|[97|[116|[101|[32|[110|[97|[116|[105|[118|[101|[32|[99|[111|[100|[101|[32|[102|[111|[114|[32|[116|[104|[105|[115|[32|[114|[117|[110|[116|[105|[109|[101|[32|[115|[121|[115|[116|[101|[109|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 210
																																																																																																																												      [_cor3|[]])
			    %% Line 211
			    'bad_crc'
		    %% Line 212
		    <'true'> when 'true' ->
			do  %% Line 213
			    call 'erlang':'put'
				('closures_to_patch', [])
			    %% Line 215
			    case %% Line 216
				 apply 'create_data_segment'/3
				     (ConstAlign, ConstSize, ConstMap) of
			      <{ConstAddr,ConstMap2}> when 'true' ->
				  let <CalleeMFAs> =
				      %% Line 218
				      apply 'find_callee_mfas'/1
					  (Refs)
				  in  %% Line 220
				      case %% Line 221
					   apply 'enter_code'/5
					       (CodeSize, CodeBinary, CalleeMFAs, _cor3, _cor1) of
					<{CodeAddress,Trampolines}> when 'true' ->
					    let <TrampolineMap> =
						%% Line 223
						apply 'mk_trampoline_map'/2
						    (CalleeMFAs, Trampolines)
					    in  %% Line 225
						case apply 'patch_consts'/3
							 (LabelMap, ConstAddr, CodeAddress) of
						  <'ok'> when 'true' ->
						      %% Line 228
						      case apply 'exports'/2
							       (ExportMap, CodeAddress) of
							<{MFAs,Addresses}> when 'true' ->
							    let <ReferencesToPatch> =
								%% Line 230
								apply 'get_refs_from'/2
								    (MFAs, [])
							    in  %% Line 232
								case apply 'remove_refs_from'/1
									 (MFAs) of
								  <'ok'> when 'true' ->
								      %% Line 235
								      case apply 'patch'/5
									       (Refs, CodeAddress, ConstMap2, Addresses, TrampolineMap) of
									<'ok'> when 'true' ->
									    do  %% Line 239
										case _cor1 of
										  %% Line 240
										  <[]> when 'true' ->
										      let <_cor20> =
											  %% Line 245
											  ( fun (_cor18) ->
												case _cor18 of
												  <{FE,DestAddress}> when 'true' ->
												      %% Line 246
												      call 'hipe_bifs':'set_native_address_in_fe'
													  (FE, DestAddress)
												  ( <_cor19> when 'true' ->
													( primop 'match_fail'
													      ({'function_clause',_cor19})
													  -| [{'function_name',{'-load_common/4-fun-0-',1}}] )
												    -| ['compiler_generated'] )
												end
											    -| [{'id',{0,0,'-load_common/4-fun-0-'}}] )
										      in  let <_cor17> =
											      %% Line 247
											      call 'erlang':'erase'
												  ('closures_to_patch')
											  in  do  %% Line 245
												  call 'lists':'foreach'
												      (_cor20, _cor17)
												  do  %% Line 248
												      apply 'export_funs'/1
													  (Addresses)
												      'ok'
										  %% Line 250
										  <BeamBinary>
										      when call 'erlang':'is_binary'
											    (_cor1) ->
										      %% Line 252
										      case call 'erlang':'erase'
											       ('closures_to_patch') of
											<[]> when 'true' ->
											    let <ClosurePatches> =
												%% Line 253
												apply 'find_closure_patches'/1
												    (Refs)
											    in  let <AddressesOfClosuresToPatch> =
												    %% Line 255
												    apply 'calculate_addresses'/3
													(ClosurePatches, CodeAddress, Addresses)
												in  do  %% Line 256
													apply 'export_funs'/1
													    (Addresses)
													%% Line 257
													apply 'export_funs'/4
													    (_cor3, BeamBinary, Addresses, AddressesOfClosuresToPatch)
											( <_cor21> when 'true' ->
											      primop 'match_fail'
												  ({'badmatch',_cor21})
											  -| ['compiler_generated'] )
										      end
										  ( <_cor24> when 'true' ->
											primop 'match_fail'
											    ({'case_clause',_cor24})
										    -| ['compiler_generated'] )
										end
										do  %% Line 260
										    apply 'patch_to_emu_step2'/1
											(_cor0)
										    do  %% Line 264
											apply 'redirect'/1
											    (ReferencesToPatch)
											let <_X_> =
											    %% Line 266
											    ( call 'erlang':'erase'
												  ('hipe_patch_closures')
											      -| ['result_not_wanted'] )
											in  let <_X_> =
												%% Line 267
												( call 'erlang':'erase'
												      ('hipe_assert_code_area')
												  -| ['result_not_wanted'] )
											    in  %% Line 269
												{'module',_cor3}
									( <_cor16> when 'true' ->
									      primop 'match_fail'
										  ({'badmatch',_cor16})
									  -| ['compiler_generated'] )
								      end
								  ( <_cor15> when 'true' ->
									primop 'match_fail'
									    ({'badmatch',_cor15})
								    -| ['compiler_generated'] )
								end
							( <_cor13> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_cor13})
							  -| ['compiler_generated'] )
						      end
						  ( <_cor12> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_cor12})
						    -| ['compiler_generated'] )
						end
					( <_cor10> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor10})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor8> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor8})
				-| ['compiler_generated'] )
			    end
		    ( <_cor27> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor27})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor4})
	    -| ['compiler_generated'] )
	end
'find_callee_mfas'/1 =
    %% Line 276
    fun (_cor0) ->
	case _cor0 of
	  <Patches>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 277
	      case call 'erlang':'system_info'
		       ('hipe_architecture') of
		%% Line 278
		<'amd64'> when 'true' ->
		    []
		%% Line 279
		<'arm'> when 'true' ->
		    let <_cor1> =
			call 'gb_sets':'empty'
			    ()
		    in  apply 'find_callee_mfas'/3
			    (Patches, _cor1, 'false')
		%% Line 280
		<'powerpc'> when 'true' ->
		    let <_cor2> =
			call 'gb_sets':'empty'
			    ()
		    in  apply 'find_callee_mfas'/3
			    (Patches, _cor2, 'true')
		%% Line 281
		<'ppc64'> when 'true' ->
		    let <_cor3> =
			call 'gb_sets':'empty'
			    ()
		    in  apply 'find_callee_mfas'/3
			    (Patches, _cor3, 'true')
		%% Line 282
		<'ultrasparc'> when 'true' ->
		    []
		%% Line 283
		<'x86'> when 'true' ->
		    []
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5})
		  -| [{'function_name',{'find_callee_mfas',1}}] )
	    -| ['compiler_generated'] )
	end
'find_callee_mfas'/3 =
    %% Line 286
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{Type,Data}|Patches],MFAs,SkipErtsSyms> when 'true' ->
	      let <_cor4> =
		  %% Line 288
		  case Type of
		    <0> when 'true' ->
			'load_atom'
		    <1> when 'true' ->
			'load_address'
		    <4> when 'true' ->
			'sdesc'
		    <5> when 'true' ->
			'x86_abs_pcrel'
		    <2> when 'true' ->
			'call_remote'
		    <3> when 'true' ->
			'call_local'
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor3})
		      -| ['compiler_generated'] )
		  end
	      in  let <_cor6> =
		      %% Line 288
		      case _cor4 of
			%% Line 289
			<'call_local'> when 'true' ->
			    apply 'add_callee_mfas'/3
				(Data, MFAs, SkipErtsSyms)
			%% Line 290
			<'call_remote'> when 'true' ->
			    apply 'add_callee_mfas'/3
				(Data, MFAs, SkipErtsSyms)
			%% Line 292
			<_cor12> when 'true' ->
			    MFAs
		      end
		  in  %% Line 294
		      apply 'find_callee_mfas'/3
			  (Patches, _cor6, SkipErtsSyms)
	  %% Line 295
	  <[],MFAs,_X_SkipErtsSyms> when 'true' ->
	      let <_cor8> =
		  %% Line 296
		  call 'gb_sets':'to_list'
		      (MFAs)
	      in  %% Line 296
		  call 'erlang':'list_to_tuple'
		      (_cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'find_callee_mfas',3}}] )
	    -| ['compiler_generated'] )
	end
'add_callee_mfas'/3 =
    %% Line 298
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{DestMFA,_X_Offsets}|Refs],MFAs,SkipErtsSyms> when 'true' ->
	      let <_cor5> =
		  %% Line 300
		  case SkipErtsSyms of
		    %% Line 301
		    <'true'> when 'true' ->
			%% Line 306
			case apply 'bif_address'/1
				 (DestMFA) of
			  %% Line 307
			  <'false'> when 'true' ->
			      call 'gb_sets':'add_element'
				  (DestMFA, MFAs)
			  %% Line 308
			  <BifAddress>
			      when call 'erlang':'is_integer'
				    (BifAddress) ->
			      MFAs
			  ( <_cor3> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor3})
			    -| ['compiler_generated'] )
			end
		    %% Line 310
		    <'false'> when 'true' ->
			%% Line 312
			call 'gb_sets':'add_element'
			    (DestMFA, MFAs)
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor4})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 314
		  apply 'add_callee_mfas'/3
		      (Refs, _cor5, SkipErtsSyms)
	  %% Line 315
	  <[],MFAs,_X_SkipErtsSyms> when 'true' ->
	      MFAs
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7})
		  -| [{'function_name',{'add_callee_mfas',3}}] )
	    -| ['compiler_generated'] )
	end
'mk_trampoline_map'/2 =
    %% Line 319
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],[]> when 'true' ->
	      []
	  %% Line 320
	  <CalleeMFAs,Trampolines> when 'true' ->
	      let <_cor3> =
		  %% Line 322
		  case call 'erlang':'system_info'
			   ('hipe_architecture') of
		    %% Line 323
		    <'amd64'> when 'true' ->
			8
		    %% Line 324
		    <'ppc64'> when 'true' ->
			8
		    %% Line 325
		    <_cor9> when 'true' ->
			4
		  end
	      in  let <_cor6> =
		      %% Line 327
		      call 'erlang':'tuple_size'
			  (CalleeMFAs)
		  in  let <_cor5> =
			  %% Line 328
			  call 'gb_trees':'empty'
			      ()
		      in  %% Line 327
			  apply 'mk_trampoline_map'/5
			      (_cor6, CalleeMFAs, %% Line 328
						  Trampolines, _cor3, _cor5)
	end
'mk_trampoline_map'/5 =
    %% Line 330
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <I,CalleeMFAs,Trampolines,SizeofLong,Map>
	      when call 'erlang':'>='
		    (I,
		     1) ->
	      let <MFA> =
		  %% Line 331
		  call 'erlang':'element'
		      (I, CalleeMFAs)
	      in  let <_cor6> =
		      %% Line 333
		      call 'erlang':'-'
			  (I, 1)
		  in  let <Skip> =
			  %% Line 333
			  call 'erlang':'*'
			      (_cor6, SizeofLong)
		      in  %% Line 336
			  case Trampolines of
			    <#{#<_cor16>(Skip,8,'binary',['unsigned'|['big']]),
			       #<Trampoline>(SizeofLong,8,'integer',['unsigned'|['native']]),
			       #<_cor17>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
				let <NewMap> =
				    %% Line 337
				    call 'gb_trees':'insert'
					(MFA, Trampoline, Map)
				in  let <_cor10> =
					%% Line 338
					call 'erlang':'-'
					    (I, 1)
				    in  %% Line 338
					apply 'mk_trampoline_map'/5
					    (_cor10, CalleeMFAs, Trampolines, SizeofLong, NewMap)
			    ( <_cor8> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor8})
			      -| ['compiler_generated'] )
			  end
	  %% Line 339
	  <0,_cor18,_cor19,_cor20,Map> when 'true' ->
	      Map
	  ( <_cor15,_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'mk_trampoline_map',5}}] )
	    -| ['compiler_generated'] )
	end
'trampoline_map_get'/2 =
    %% Line 343
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor4,[]> when 'true' ->
	      []
	  %% Line 344
	  <MFA,Map> when 'true' ->
	      call 'gb_trees':'get'
		  (MFA, Map)
	end
'trampoline_map_lookup'/2 =
    %% Line 346
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor5,[]> when 'true' ->
	      []
	  %% Line 347
	  <Primop,Map> when 'true' ->
	      %% Line 348
	      case call 'gb_trees':'lookup'
		       (Primop, Map) of
		%% Line 349
		<{'value',X}> when 'true' ->
		    X
		%% Line 350
		<_cor6> when 'true' ->
		    []
	      end
	end
'exports'/2 =
    %% Line 360
    fun (_cor1,_cor0) ->
	%% Line 361
	apply 'exports'/4
	    (_cor1, _cor0, [], [])
'exports'/4 =
    %% Line 363
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Offset|[M|[F|[A|[IsClosure|[IsExported|Rest]]]]]],BaseAddress,MFAs,Addresses> when 'true' ->
	      let <_cor6> =
		  %% Line 364
		  ( case IsExported of
		      ( <( 'true'
			   -| ['compiler_generated'] )> when 'true' ->
			    call 'erlang':'is_builtin'
				(M, F, A)
			-| ['compiler_generated'] )
		      ( <( 'false'
			   -| ['compiler_generated'] )> when 'true' ->
			    'false'
			-| ['compiler_generated'] )
		      ( <_cor4> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {( 'badarg'
					-| ['compiler_generated'] ),_cor4}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      in  %% Line 364
		  case _cor6 of
		    %% Line 365
		    <'true'> when 'true' ->
			%% Line 366
			apply 'exports'/4
			    (Rest, BaseAddress, MFAs, Addresses)
		    %% Line 367
		    <_X_false> when 'true' ->
			let <MFA> = {%% Line 368
			     M,%% Line 368
			       F,%% Line 368
				 A}
			in  let <Address> =
				%% Line 369
				call 'erlang':'+'
				    (BaseAddress, Offset)
			    in  let <FunDef> =
				    %% Line 370
				    {'fundef',Address,MFA,IsClosure,%% Line 371
								    IsExported}
				in  %% Line 372
				    apply 'exports'/4
					(Rest, BaseAddress, [MFA|MFAs], [FunDef|Addresses])
		  end
	  %% Line 374
	  <[],_cor15,MFAs,Addresses> when 'true' ->
	      %% Line 375
	      {MFAs,Addresses}
	  ( <_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'exports',4}}] )
	    -| ['compiler_generated'] )
	end
'mod'/1 =
    %% Line 377
    fun (_cor0) ->
	case _cor0 of
	  <{M,_X_F,_X_A}> when 'true' ->
	      M
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'mod',1}}] )
	    -| ['compiler_generated'] )
	end
'calculate_addresses'/3 =
    %% Line 381
    fun (_cor2,_cor1,_cor0) ->
	%% Line 383
	( letrec
	      'lc$^0'/1 =
		  fun (_cor6) ->
		      case _cor6 of
			<[%% Line 386
			  {Data = {DestMFA,_cor13,_cor14},Offsets}|_cor5]> when 'true' ->
			    let <_cor8> =
				%% Line 384
				apply 'offsets_to_addresses'/2
				    (Offsets, _cor1)
			    in  let <_cor7> =
				    %% Line 385
				    apply 'get_native_address'/3
					(DestMFA, _cor0, 'local')
				in  let <_cor9> =
					%% Line 386
					apply 'lc$^0'/1
					    (_cor5)
				    in  ( [{Data,_cor8,_cor7}|_cor9]
					  -| ['compiler_generated'] )
			( <[_cor4|_cor5]> when 'true' ->
			      %% Line 386
			      apply 'lc$^0'/1
				  (_cor5)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor6> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor6})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  apply 'lc$^0'/1
		  (_cor2)
	  -| ['list_comprehension'] )
'offsets_to_addresses'/2 =
    %% Line 388
    fun (_cor1,_cor0) ->
	%% Line 389
	( letrec
	      'lc$^0'/1 =
		  fun (_cor4) ->
		      case _cor4 of
			<[O|_cor3]> when 'true' ->
			    let <_cor5> =
				call 'erlang':'+'
				    (O, _cor0)
			    in  let <_cor6> =
				    apply 'lc$^0'/1
					(_cor3)
				in  ( [{_cor5,'load_fe'}|_cor6]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor4> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor4})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  apply 'lc$^0'/1
		  (_cor1)
	  -| ['list_comprehension'] )
'find_closure_patches'/1 =
    %% Line 393
    fun (_cor0) ->
	case _cor0 of
	  <[{Type,Refs}|Rest]> when 'true' ->
	      let <_cor2> =
		  %% Line 394
		  case Type of
		    <0> when 'true' ->
			'load_atom'
		    <1> when 'true' ->
			'load_address'
		    <4> when 'true' ->
			'sdesc'
		    <5> when 'true' ->
			'x86_abs_pcrel'
		    <2> when 'true' ->
			'call_remote'
		    <3> when 'true' ->
			'call_local'
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor1})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 394
		  case _cor2 of
		    %% Line 395
		    <'load_address'> when 'true' ->
			%% Line 396
			apply 'find_closure_refs'/2
			    (Refs, Rest)
		    %% Line 397
		    <_cor5> when 'true' ->
			%% Line 398
			apply 'find_closure_patches'/1
			    (Rest)
		  end
	  %% Line 400
	  <[]> when 'true' ->
	      []
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'find_closure_patches',1}}] )
	    -| ['compiler_generated'] )
	end
'find_closure_refs'/2 =
    %% Line 402
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{Dest,Offsets}|Rest],Refs> when 'true' ->
	      %% Line 403
	      case Dest of
		%% Line 404
		<{'closure',Data}> when 'true' ->
		    let <_cor2> =
			%% Line 405
			apply 'find_closure_refs'/2
			    (Rest, Refs)
		    in  %% Line 405
			[{Data,Offsets}|_cor2]
		%% Line 406
		<_cor6> when 'true' ->
		    %% Line 407
		    apply 'find_closure_refs'/2
			(Rest, Refs)
	      end
	  %% Line 409
	  <[],Refs> when 'true' ->
	      %% Line 410
	      apply 'find_closure_patches'/1
		  (Refs)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'find_closure_refs',2}}] )
	    -| ['compiler_generated'] )
	end
'export_funs'/1 =
    %% Line 414
    fun (_cor0) ->
	case _cor0 of
	  <[FunDef|Addresses]> when 'true' ->
	      %% Line 416
	      case FunDef of
		<{'fundef',Address,MFA,IsClosure,IsExported}> when 'true' ->
		    do  %% Line 427
			call 'hipe_bifs':'set_funinfo_native_address'
			    (MFA, Address, IsExported)
			do  %% Line 428
			    call 'hipe_bifs':'set_native_address'
				(MFA, Address, IsClosure)
			    %% Line 429
			    apply 'export_funs'/1
				(Addresses)
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor1})
		  -| ['compiler_generated'] )
	      end
	  %% Line 430
	  <[]> when 'true' ->
	      %% Line 431
	      'ok'
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'export_funs',1}}] )
	    -| ['compiler_generated'] )
	end
'export_funs'/4 =
    %% Line 433
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor8> =
	    %% Line 434
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor6) ->
			  case _cor6 of
			    <[{'fundef',Address,{_X_M,F,A},_cor15,_cor16}|_cor5]> when 'true' ->
				let <_cor7> =
				    apply 'lc$^0'/1
					(_cor5)
				in  ( [{F,A,Address}|_cor7]
				      -| ['compiler_generated'] )
			    ( <[_cor4|_cor5]> when 'true' ->
				  apply 'lc$^0'/1
				      (_cor5)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor6> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor6})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (_cor1)
	      -| ['list_comprehension'] )
	in  %% Line 435
	    case call 'code':'make_stub_module'
		     (_cor3, _cor2, {_cor8,_cor0}) of
	      <_cor17>
		  when call 'erlang':'=:='
			(_cor17,
			 _cor3) ->
		  %% Line 436
		  'ok'
	      ( <_cor10> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor10})
		-| ['compiler_generated'] )
	    end
'patch'/5 =
    %% Line 453
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[{Type,SortedRefs}|Rest],CodeAddress,ConstMap2,Addresses,TrampolineMap> when 'true' ->
	      let <_cor6> =
		  %% Line 456
		  case Type of
		    <0> when 'true' ->
			'load_atom'
		    <1> when 'true' ->
			'load_address'
		    <4> when 'true' ->
			'sdesc'
		    <5> when 'true' ->
			'x86_abs_pcrel'
		    <2> when 'true' ->
			'call_remote'
		    <3> when 'true' ->
			'call_local'
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor5})
		      -| ['compiler_generated'] )
		  end
	      in  do  %% Line 456
		      case _cor6 of
			%% Line 457
			<'call_local'> when 'true' ->
			    %% Line 458
			    apply 'patch_call'/5
				(SortedRefs, CodeAddress, Addresses, 'local', TrampolineMap)
			%% Line 459
			<'call_remote'> when 'true' ->
			    %% Line 460
			    apply 'patch_call'/5
				(SortedRefs, CodeAddress, Addresses, 'remote', TrampolineMap)
			%% Line 461
			<Other> when 'true' ->
			    %% Line 462
			    apply 'patch_all'/5
				(Other, SortedRefs, CodeAddress, {ConstMap2,CodeAddress}, Addresses)
		      end
		      %% Line 464
		      apply 'patch'/5
			  (Rest, CodeAddress, ConstMap2, Addresses, TrampolineMap)
	  %% Line 465
	  <[],_cor13,_cor14,_cor15,_cor16> when 'true' ->
	      'ok'
	  ( <_cor12,_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'patch',5}}] )
	    -| ['compiler_generated'] )
	end
'patch_call'/5 =
    %% Line 470
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[{DestMFA,Offsets}|SortedRefs],BaseAddress,Addresses,RemoteOrLocal,TrampolineMap> when 'true' ->
	      do  %% Line 471
		  case apply 'bif_address'/1
			   (DestMFA) of
		    %% Line 472
		    <'false'> when 'true' ->
			let <DestAddress> =
			    %% Line 478
			    apply 'get_native_address'/3
				(DestMFA, Addresses, RemoteOrLocal)
			in  let <Trampoline> =
				%% Line 479
				apply 'trampoline_map_get'/2
				    (DestMFA, TrampolineMap)
			    in  %% Line 480
				apply 'patch_mfa_call_list'/7
				    (Offsets, BaseAddress, DestMFA, DestAddress, Addresses, RemoteOrLocal, Trampoline)
		    %% Line 481
		    <BifAddress>
			when call 'erlang':'is_integer'
			      (BifAddress) ->
			let <Trampoline> =
			    %% Line 482
			    apply 'trampoline_map_lookup'/2
				(DestMFA, TrampolineMap)
			in  %% Line 483
			    apply 'patch_bif_call_list'/4
				(Offsets, BaseAddress, BifAddress, Trampoline)
		    ( <_cor8> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor8})
		      -| ['compiler_generated'] )
		  end
		  %% Line 485
		  apply 'patch_call'/5
		      (SortedRefs, BaseAddress, Addresses, RemoteOrLocal, TrampolineMap)
	  %% Line 486
	  <[],_cor14,_cor15,_cor16,_cor17> when 'true' ->
	      %% Line 487
	      'ok'
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'patch_call',5}}] )
	    -| ['compiler_generated'] )
	end
'patch_bif_call_list'/4 =
    %% Line 489
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Offset|Offsets],BaseAddress,BifAddress,Trampoline> when 'true' ->
	      let <CallAddress> =
		  %% Line 490
		  call 'erlang':'+'
		      (BaseAddress, Offset)
	      in  do  %% Line 491
		      case apply 'assert_local_patch'/1
			       (CallAddress) of
			<'true'> when 'true' ->
			    'ok'
			<_cor13> when 'true' ->
			    do  call 'code_server':'info_msg'
				    ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[88|[73|[84|[69|[68|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[32|[126|[119|[32|[64|[126|[119|[58|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['assertion_failed'|['hipe_unified_loader'|[491]]])
				call 'erlang':'error'
				    ({'hipe_unified_loader',491,'assertion_failed'})
		      end
		      do  %% Line 492
			  apply 'patch_call_insn'/3
			      (CallAddress, BifAddress, Trampoline)
			  %% Line 493
			  apply 'patch_bif_call_list'/4
			      (Offsets, BaseAddress, BifAddress, Trampoline)
	  %% Line 494
	  <[],_cor14,_cor15,_cor16> when 'true' ->
	      'ok'
	  ( <_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'patch_bif_call_list',4}}] )
	    -| ['compiler_generated'] )
	end
'patch_mfa_call_list'/7 =
    %% Line 496
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[Offset|Offsets],BaseAddress,DestMFA,DestAddress,Addresses,RemoteOrLocal,Trampoline> when 'true' ->
	      let <CallAddress> =
		  %% Line 497
		  call 'erlang':'+'
		      (BaseAddress, Offset)
	      in  do  %% Line 498
		      apply 'add_ref'/6
			  (DestMFA, CallAddress, Addresses, 'call', Trampoline, RemoteOrLocal)
		      do  %% Line 499
			  case apply 'assert_local_patch'/1
				   (CallAddress) of
			    <'true'> when 'true' ->
				'ok'
			    <_cor19> when 'true' ->
				do  call 'code_server':'info_msg'
					([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[88|[73|[84|[69|[68|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[32|[126|[119|[32|[64|[126|[119|[58|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['assertion_failed'|['hipe_unified_loader'|[499]]])
				    call 'erlang':'error'
					({'hipe_unified_loader',499,'assertion_failed'})
			  end
			  do  %% Line 500
			      apply 'patch_call_insn'/3
				  (CallAddress, DestAddress, Trampoline)
			      %% Line 501
			      apply 'patch_mfa_call_list'/7
				  (Offsets, BaseAddress, DestMFA, DestAddress, Addresses, RemoteOrLocal, Trampoline)
	  %% Line 502
	  <[],_cor20,_cor21,_cor22,_cor23,_cor24,_cor25> when 'true' ->
	      'ok'
	  ( <_cor18,_cor17,_cor16,_cor15,_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17,_cor16,_cor15,_cor14,_cor13,_cor12})
		  -| [{'function_name',{'patch_mfa_call_list',7}}] )
	    -| ['compiler_generated'] )
	end
'patch_call_insn'/3 =
    %% Line 504
    fun (_cor2,_cor1,_cor0) ->
	%% Line 507
	call 'hipe_bifs':'patch_call'
	    (_cor2, _cor1, _cor0)
'patch_all'/5 =
    %% Line 512
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Type,[{Dest,Offsets}|Rest],BaseAddress,ConstAndZone,Addresses> when 'true' ->
	      do  %% Line 513
		  apply 'patch_all_offsets'/6
		      (Type, Dest, Offsets, BaseAddress, ConstAndZone, Addresses)
		  %% Line 514
		  apply 'patch_all'/5
		      (Type, Rest, BaseAddress, ConstAndZone, Addresses)
	  %% Line 515
	  <_cor10,[],_cor11,_cor12,_cor13> when 'true' ->
	      'ok'
	  ( <_cor9,_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6,_cor5})
		  -| [{'function_name',{'patch_all',5}}] )
	    -| ['compiler_generated'] )
	end
'patch_all_offsets'/6 =
    %% Line 517
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Type,Data,[Offset|Offsets],BaseAddress,%% Line 518
						  ConstAndZone,%% Line 518
							       Addresses> when 'true' ->
	      let <Address> =
		  %% Line 521
		  call 'erlang':'+'
		      (BaseAddress, Offset)
	      in  do  %% Line 522
		      apply 'patch_offset'/5
			  (Type, Data, Address, ConstAndZone, Addresses)
		      %% Line 524
		      apply 'patch_all_offsets'/6
			  (Type, Data, Offsets, BaseAddress, ConstAndZone, Addresses)
	  %% Line 525
	  <_cor13,_cor14,[],_cor15,_cor16,_cor17> when 'true' ->
	      'ok'
	  ( <_cor12,_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'patch_all_offsets',6}}] )
	    -| ['compiler_generated'] )
	end
'patch_offset'/5 =
    %% Line 530
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 531
	case _cor4 of
	  %% Line 532
	  <'load_address'> when 'true' ->
	      %% Line 533
	      apply 'patch_load_address'/4
		  (_cor3, _cor2, _cor1, _cor0)
	  %% Line 534
	  <'load_atom'> when 'true' ->
	      %% Line 536
	      apply 'patch_atom'/2
		  (_cor2, _cor3)
	  %% Line 537
	  <'sdesc'> when 'true' ->
	      %% Line 538
	      apply 'patch_sdesc'/4
		  (_cor3, _cor2, _cor1, _cor0)
	  %% Line 539
	  <'x86_abs_pcrel'> when 'true' ->
	      %% Line 540
	      apply 'patch_instr'/3
		  (_cor2, _cor3, 'x86_abs_pcrel')
	  ( <_cor6> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor6})
	    -| ['compiler_generated'] )
	end
'patch_atom'/2 =
    %% Line 546
    fun (_cor1,_cor0) ->
	do  %% Line 547
	    case apply 'assert_local_patch'/1
		     (_cor1) of
	      <'true'> when 'true' ->
		  'ok'
	      <_cor9> when 'true' ->
		  do  call 'code_server':'info_msg'
			  ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[88|[73|[84|[69|[68|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[32|[126|[119|[32|[64|[126|[119|[58|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['assertion_failed'|['hipe_unified_loader'|[547]]])
		      call 'erlang':'error'
			  ({'hipe_unified_loader',547,'assertion_failed'})
	    end
	    let <_cor6> =
		%% Line 548
		call 'hipe_bifs':'atom_to_word'
		    (_cor0)
	    in  %% Line 548
		apply 'patch_instr'/3
		    (_cor1, _cor6, 'atom')
'patch_sdesc'/4 =
    %% Line 550
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{SymExnRA,FSize,Arity,Live},%% Line 551
				       Address,%% Line 551
					       {_X_ConstMap2,CodeAddress},%% Line 551
									  _X_Addresses> when 'true' ->
	      let <_cor5> =
		  %% Line 553
		  case SymExnRA of
		    %% Line 554
		    <[]> when 'true' ->
			0
		    %% Line 555
		    <LabelOffset> when 'true' ->
			call 'erlang':'+'
			    (CodeAddress, LabelOffset)
		  end
	      in  do  %% Line 557
		      case apply 'assert_local_patch'/1
			       (Address) of
			<'true'> when 'true' ->
			    'ok'
			<_cor16> when 'true' ->
			    do  call 'code_server':'info_msg'
				    ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[88|[73|[84|[69|[68|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[32|[126|[119|[32|[64|[126|[119|[58|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['assertion_failed'|['hipe_unified_loader'|[557]]])
				call 'erlang':'error'
				    ({'hipe_unified_loader',557,'assertion_failed'})
		      end
		      %% Line 559
		      call 'hipe_bifs':'enter_sdesc'
			  ({Address,_cor5,FSize,Arity,Live,{'undefined','undefined',0}})
	  ( <_cor15,_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13,_cor12})
		  -| [{'function_name',{'patch_sdesc',4}}] )
	    -| ['compiler_generated'] )
	end
'patch_load_address'/4 =
    %% Line 565
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 566
	case _cor3 of
	  %% Line 567
	  <{'local_function',DestMFA}> when 'true' ->
	      %% Line 568
	      apply 'patch_load_mfa'/4
		  (_cor2, DestMFA, _cor0, 'local')
	  %% Line 569
	  <{'remote_function',DestMFA}> when 'true' ->
	      %% Line 570
	      apply 'patch_load_mfa'/4
		  (_cor2, DestMFA, _cor0, 'remote')
	  %% Line 571
	  <{'constant',Name}> when 'true' ->
	      %% Line 572
	      case _cor1 of
		<{ConstMap2,_X_CodeAddress}> when 'true' ->
		    let <ConstAddress> =
			%% Line 573
			apply 'find_const'/2
			    (Name, ConstMap2)
		    in  %% Line 574
			apply 'patch_instr'/3
			    (_cor2, ConstAddress, 'constant')
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 575
	  <{'closure',{DestMFA,Uniq,Index}}> when 'true' ->
	      %% Line 576
	      apply 'patch_closure'/5
		  (DestMFA, Uniq, Index, _cor2, _cor0)
	  %% Line 577
	  <{'c_const',CConst}> when 'true' ->
	      let <_cor6> =
		  %% Line 578
		  apply 'bif_address'/1
		      (CConst)
	      in  %% Line 578
		  apply 'patch_instr'/3
		      (_cor2, _cor6, 'c_const')
	  ( <_cor7> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor7})
	    -| ['compiler_generated'] )
	end
'patch_closure'/5 =
    %% Line 581
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 582
	case call 'erlang':'get'
		 ('hipe_patch_closures') of
	  %% Line 583
	  <'false'> when 'true' ->
	      %% Line 584
	      []
	  %% Line 585
	  <'true'> when 'true' ->
	      let <DestAddress> =
		  %% Line 592
		  apply 'get_native_address'/3
		      (_cor4, _cor0, 'local')
	      in  let <BEAMAddress> =
		      %% Line 593
		      call 'hipe_bifs':'fun_to_address'
			  (_cor4)
		  in  let <_cor8> =
			  %% Line 594
			  apply 'mod'/1
			      (_cor4)
		      in  let <FE> =
			      %% Line 594
			      call 'hipe_bifs':'get_fe'
				  (_cor8, {_cor3,_cor2,BEAMAddress})
			  in  let <_cor10> =
				  %% Line 595
				  call 'erlang':'get'
				      ('closures_to_patch')
			      in  do  %% Line 595
				      call 'erlang':'put'
					  ('closures_to_patch', [{FE,DestAddress}|_cor10])
				      do  %% Line 598
					  case apply 'assert_local_patch'/1
						   (_cor1) of
					    <'true'> when 'true' ->
						'ok'
					    <_cor21> when 'true' ->
						do  call 'code_server':'info_msg'
							([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[88|[73|[84|[69|[68|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[32|[126|[119|[32|[64|[126|[119|[58|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['assertion_failed'|['hipe_unified_loader'|[598]]])
						    call 'erlang':'error'
							({'hipe_unified_loader',598,'assertion_failed'})
					  end
					  %% Line 599
					  apply 'patch_instr'/3
					      (_cor1, FE, 'closure')
	  ( <_cor15> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor15})
	    -| ['compiler_generated'] )
	end
'patch_load_mfa'/4 =
    %% Line 606
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 608
	    case apply 'bif_address'/1
		     (_cor2) of
	      %% Line 609
	      <'false'> when 'true' ->
		  let <NativeAddress> =
		      %% Line 610
		      apply 'get_native_address'/3
			  (_cor2, _cor1, _cor0)
		  in  do  %% Line 611
			  apply 'add_ref'/6
			      (_cor2, _cor3, _cor1, 'load_mfa', [], _cor0)
			  %% Line 612
			  NativeAddress
	      %% Line 613
	      <BifAddress>
		  when call 'erlang':'is_integer'
			(BifAddress) ->
		  %% Line 614
		  BifAddress
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor5})
		-| ['compiler_generated'] )
	    end
	in  do  %% Line 616
		case apply 'assert_local_patch'/1
			 (_cor3) of
		  <'true'> when 'true' ->
		      'ok'
		  <_cor16> when 'true' ->
		      do  call 'code_server':'info_msg'
			      ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[88|[73|[84|[69|[68|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[32|[126|[119|[32|[64|[126|[119|[58|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['assertion_failed'|['hipe_unified_loader'|[616]]])
			  call 'erlang':'error'
			      ({'hipe_unified_loader',616,'assertion_failed'})
		end
		%% Line 617
		apply 'patch_instr'/3
		    (_cor3, _cor6, 'load_mfa')
'patch_consts'/3 =
    %% Line 622
    fun (_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 623
	    ( fun (_cor3) ->
		  %% Line 624
		  apply 'patch_label_or_labels'/3
		      (_cor3, _cor1, _cor0)
	      -| [{'id',{0,0,'-patch_consts/3-fun-0-'}}] )
	in  %% Line 623
	    call 'lists':'foreach'
		(_cor5, _cor2)
'patch_label_or_labels'/3 =
    %% Line 627
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{Pos,Offset},DataAddress,CodeAddress> when 'true' ->
	      let <_cor3> =
		  %% Line 628
		  call 'erlang':'+'
		      (CodeAddress, Offset)
	      in  do  %% Line 628
		      case apply 'assert_local_patch'/1
			       (_cor3) of
			<'true'> when 'true' ->
			    'ok'
			<_cor13> when 'true' ->
			    do  call 'code_server':'info_msg'
				    ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[88|[73|[84|[69|[68|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[32|[126|[119|[32|[64|[126|[119|[58|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['assertion_failed'|['hipe_unified_loader'|[628]]])
				call 'erlang':'error'
				    ({'hipe_unified_loader',628,'assertion_failed'})
		      end
		      let <_cor9> =
			  %% Line 629
			  call 'erlang':'+'
			      (DataAddress, Pos)
		      in  let <_cor8> =
			      %% Line 629
			      call 'erlang':'+'
				  (CodeAddress, Offset)
			  in  %% Line 629
			      apply 'write_word'/2
				  (_cor9, _cor8)
	  %% Line 630
	  <{'sorted',Base,UnOrderdList},DataAddress,CodeAddress> when 'true' ->
	      %% Line 631
	      apply 'sort_and_write'/4
		  (UnOrderdList, Base, DataAddress, CodeAddress)
	  ( <_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10})
		  -| [{'function_name',{'patch_label_or_labels',3}}] )
	    -| ['compiler_generated'] )
	end
'sort_and_write'/4 =
    %% Line 633
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <WriteAndInc> =
	    %% Line 635
	    ( fun (_cor11,_cor10) ->
		  case <_cor11,_cor10> of
		    <{_cor21,Offset},DataPos> when 'true' ->
			let <_cor4> =
			    %% Line 636
			    call 'erlang':'+'
				(_cor0, Offset)
			in  do  %% Line 636
				case apply 'assert_local_patch'/1
					 (_cor4) of
				  <'true'> when 'true' ->
				      'ok'
				  <_cor22> when 'true' ->
				      do  call 'code_server':'info_msg'
					      ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[88|[73|[84|[69|[68|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[32|[126|[119|[32|[64|[126|[119|[58|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['assertion_failed'|['hipe_unified_loader'|[636]]])
					  call 'erlang':'error'
					      ({'hipe_unified_loader',636,'assertion_failed'})
				end
				let <_cor9> =
				    %% Line 637
				    call 'erlang':'+'
					(_cor0, Offset)
				in  %% Line 637
				    apply 'write_word'/2
					(DataPos, _cor9)
		    ( <_cor13,_cor12> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor13,_cor12})
			    -| [{'function_name',{'-sort_and_write/4-fun-0-',2}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-sort_and_write/4-fun-0-'}}] )
	in  let <_cor16> =
		%% Line 639
		call 'erlang':'+'
		    (_cor1, _cor2)
	    in  let <_cor15> =
		    %% Line 639
		    apply 'sort_on_representation'/1
			(_cor3)
		in  %% Line 639
		    call 'lists':'foldl'
			(WriteAndInc, _cor16, _cor15)
'sort_on_representation'/1 =
    %% Line 641
    fun (_cor0) ->
	let <_cor6> =
	    %% Line 642
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor3) ->
			  case _cor3 of
			    <[%% Line 643
			      {Term,Offset}|_cor2]> when 'true' ->
				let <_cor4> =
				    call 'hipe_bifs':'term_to_word'
					(Term)
				in  let <_cor5> =
					%% Line 643
					apply 'lc$^0'/1
					    (_cor2)
				    in  ( [{_cor4,Offset}|_cor5]
					  -| ['compiler_generated'] )
			    ( <[_cor1|_cor2]> when 'true' ->
				  %% Line 643
				  apply 'lc$^0'/1
				      (_cor2)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor3> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor3})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (_cor0)
	      -| ['list_comprehension'] )
	in  %% Line 642
	    call 'lists':'sort'
		(_cor6)
'patch_instr'/3 =
    %% Line 653
    fun (_cor2,_cor1,_cor0) ->
	%% Line 654
	call 'hipe_bifs':'patch_insn'
	    (_cor2, _cor1, _cor0)
'write_word'/2 =
    %% Line 663
    fun (_cor1,_cor0) ->
	%% Line 664
	case call 'erlang':'system_info'
		 ('hipe_architecture') of
	  %% Line 665
	  <'amd64'> when 'true' ->
	      do  %% Line 666
		  call 'hipe_bifs':'write_u64'
		      (_cor1, _cor0)
		  %% Line 667
		  call 'erlang':'+'
		      (_cor1, 8)
	  %% Line 668
	  <'ppc64'> when 'true' ->
	      do  %% Line 669
		  call 'hipe_bifs':'write_u64'
		      (_cor1, _cor0)
		  %% Line 670
		  call 'erlang':'+'
		      (_cor1, 8)
	  %% Line 671
	  <_cor5> when 'true' ->
	      do  %% Line 672
		  call 'hipe_bifs':'write_u32'
		      (_cor1, _cor0)
		  %% Line 673
		  call 'erlang':'+'
		      (_cor1, 4)
	end
'bif_address'/1 =
    %% Line 678
    fun (_cor0) ->
	case _cor0 of
	  <{M,F,A}> when 'true' ->
	      %% Line 679
	      call 'hipe_bifs':'bif_address'
		  (M, F, A)
	  %% Line 680
	  <Name>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      %% Line 681
	      call 'hipe_bifs':'primop_address'
		  (Name)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'bif_address',1}}] )
	    -| ['compiler_generated'] )
	end
'create_data_segment'/3 =
    %% Line 689
    fun (_cor2,_cor1,_cor0) ->
	let <DataAddress> =
	    %% Line 691
	    call 'hipe_bifs':'alloc_data'
		(_cor2, _cor1)
	in  %% Line 692
	    apply 'enter_data'/4
		(_cor0, [], DataAddress, _cor1)
'enter_data'/4 =
    %% Line 694
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 695
	case _cor3 of
	  %% Line 696
	  <[ConstNo|[Offset|[Type|[Data|Rest]]]]>
	      when call 'erlang':'is_integer'
		    (Offset) ->
	      let <_cor5> =
		  %% Line 698
		  call 'erlang':'>='
		      (Offset, 0)
	      in  let <_cor4> =
		      %% Line 698
		      call 'erlang':'=<'
			  (Offset, _cor0)
		  in  do  %% Line 698
			  case call 'erlang':'and'
				   (_cor5, _cor4) of
			    <'true'> when 'true' ->
				'ok'
			    <_cor17> when 'true' ->
				do  call 'code_server':'info_msg'
					([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[88|[73|[84|[69|[68|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[32|[126|[119|[32|[64|[126|[119|[58|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['assertion_failed'|['hipe_unified_loader'|[698]]])
				    call 'erlang':'error'
					({'hipe_unified_loader',698,'assertion_failed'})
			  end
			  let <_cor10> =
			      %% Line 699
			      call 'erlang':'+'
				  (_cor1, Offset)
			  in  let <Res> =
				  %% Line 699
				  apply 'enter_datum'/3
				      (Type, Data, _cor10)
			      in  %% Line 700
				  apply 'enter_data'/4
				      (Rest, [{ConstNo,Res}|_cor2], _cor1, _cor0)
	  %% Line 701
	  <[]> when 'true' ->
	      %% Line 702
	      {_cor1,_cor2}
	  ( <_cor12> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor12})
	    -| ['compiler_generated'] )
	end
'enter_datum'/3 =
    %% Line 705
    fun (_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 706
	    case _cor2 of
	      <0> when 'true' ->
		  'term'
	      <2> when 'true' ->
		  'sorted_block'
	      <1> when 'true' ->
		  'block'
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor3})
		-| ['compiler_generated'] )
	    end
	in  %% Line 706
	    case _cor4 of
	      %% Line 707
	      <'term'> when 'true' ->
		  let <_cor5> =
		      %% Line 709
		      call 'hipe_bifs':'merge_term'
			  (_cor1)
		  in  %% Line 709
		      call 'hipe_bifs':'term_to_word'
			  (_cor5)
	      %% Line 710
	      <'sorted_block'> when 'true' ->
		  let <_cor11> =
		      %% Line 711
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor8) ->
				    case _cor8 of
				      <[Term|_cor7]> when 'true' ->
					  let <_cor9> =
					      call 'hipe_bifs':'term_to_word'
						  (Term)
					  in  let <_cor10> =
						  apply 'lc$^0'/1
						      (_cor7)
					      in  ( [_cor9|_cor10]
						    -| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor8> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor8})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(_cor1)
			-| ['list_comprehension'] )
		  in  let <L> =
			  %% Line 711
			  call 'lists':'sort'
			      (_cor11)
		      in  do  %% Line 712
			      apply 'write_words'/2
				  (L, _cor0)
			      _cor0
	      %% Line 714
	      <'block'> when 'true' ->
		  do  %% Line 715
		      case _cor1 of
			%% Line 716
			<{Lbls,[]}> when 'true' ->
			    %% Line 717
			    apply 'write_bytes'/2
				(Lbls, _cor0)
			%% Line 718
			<{Lbls,SortOrder}> when 'true' ->
			    let <_cor19> =
				%% Line 719
				( letrec
				      'lc$^1'/1 =
					  fun (_cor17) ->
					      case _cor17 of
						<[{_cor26,Lbl}|_cor14]> when 'true' ->
						    let <_cor18> =
							apply 'lc$^1'/1
							    (_cor14)
						    in  ( [Lbl|_cor18]
							  -| ['compiler_generated'] )
						( <[_cor13|_cor14]> when 'true' ->
						      apply 'lc$^1'/1
							  (_cor14)
						  -| ['compiler_generated'] )
						<[]> when 'true' ->
						    []
						( <_cor17> when 'true' ->
						      ( primop 'match_fail'
							    ({'function_clause',_cor17})
							-| [{'function_name',{'lc$^1',1}}] )
						  -| ['compiler_generated'] )
					      end
				  in  let <_cor15> =
					  apply 'group'/2
					      (Lbls, SortOrder)
				      in  let <_cor16> =
					      call 'lists':'sort'
						  (_cor15)
					  in  apply 'lc$^1'/1
						  (_cor16)
				  -| ['list_comprehension'] )
			    in  %% Line 720
				apply 'write_words'/2
				    (_cor19, _cor0)
			%% Line 721
			<Lbls> when 'true' ->
			    %% Line 722
			    apply 'write_bytes'/2
				(Lbls, _cor0)
		      end
		      _cor0
	      ( <_cor22> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor22})
		-| ['compiler_generated'] )
	    end
'group'/2 =
    %% Line 727
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],[]> when 'true' ->
	      %% Line 728
	      []
	  %% Line 729
	  <[B1|[B2|[B3|[B4|Ls]]]],[O|Os]> when 'true' ->
	      let <_cor3> =
		  %% Line 730
		  call 'hipe_bifs':'term_to_word'
		      (O)
	      in  let <_cor2> =
		      %% Line 730
		      apply 'bytes_to_32'/4
			  (B4, B3, B2, B1)
		  in  let <_cor4> =
			  %% Line 730
			  apply 'group'/2
			      (Ls, Os)
		      in  %% Line 730
			  [{_cor3,_cor2}|_cor4]
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'group',2}}] )
	    -| ['compiler_generated'] )
	end
'bytes_to_32'/4 =
    %% Line 732
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 733
	    call 'erlang':'bsl'
		(_cor3, 24)
	in  let <_cor5> =
		%% Line 733
		call 'erlang':'bsl'
		    (_cor2, 16)
	    in  let <_cor7> =
		    %% Line 733
		    call 'erlang':'bor'
			(_cor6, _cor5)
		in  let <_cor4> =
			%% Line 733
			call 'erlang':'bsl'
			    (_cor1, 8)
		    in  let <_cor8> =
			    %% Line 733
			    call 'erlang':'bor'
				(_cor7, _cor4)
			in  %% Line 733
			    call 'erlang':'bor'
				(_cor8, _cor0)
'write_words'/2 =
    %% Line 735
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[W|Rest],Addr> when 'true' ->
	      let <_cor2> =
		  %% Line 736
		  apply 'write_word'/2
		      (Addr, W)
	      in  %% Line 736
		  apply 'write_words'/2
		      (Rest, _cor2)
	  %% Line 737
	  <[],Addr>
	      when call 'erlang':'is_integer'
		    (Addr) ->
	      'true'
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'write_words',2}}] )
	    -| ['compiler_generated'] )
	end
'write_bytes'/2 =
    %% Line 739
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[B|Rest],Addr> when 'true' ->
	      do  %% Line 740
		  call 'hipe_bifs':'write_u8'
		      (Addr, B)
		  let <_cor2> =
		      %% Line 741
		      call 'erlang':'+'
			  (Addr, 1)
		  in  %% Line 741
		      apply 'write_bytes'/2
			  (Rest, _cor2)
	  %% Line 742
	  <[],Addr>
	      when call 'erlang':'is_integer'
		    (Addr) ->
	      'true'
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'write_bytes',2}}] )
	    -| ['compiler_generated'] )
	end
'find_const'/2 =
    %% Line 746
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <ConstNo,[{_cor8,Addr}|_X_ConstMap2]>
	      when call 'erlang':'=:='
		    (_cor8,
		     ConstNo) ->
	      %% Line 747
	      Addr
	  %% Line 748
	  <ConstNo,[_cor9|ConstMap2]> when 'true' ->
	      %% Line 749
	      apply 'find_const'/2
		  (ConstNo, ConstMap2)
	  %% Line 750
	  <ConstNo,[]> when 'true' ->
	      do  %% Line 751
		  call 'code_server':'error_msg'
		      ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[114|[114|[111|[114|[58|[32|[91|[126|[115|[58|[126|[119|[93|[58|[32|[67|[111|[110|[115|[116|[97|[110|[116|[32|[110|[111|[116|[32|[102|[111|[117|[110|[100|[32|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['hipe_unified_loader'|[751|[ConstNo|[]]]])
		  %% Line 752
		  call 'erlang':'exit'
		      ({'constant_not_found',ConstNo})
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'find_const',2}}] )
	    -| ['compiler_generated'] )
	end
'add_ref'/6 =
    %% Line 771
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <CallerMFA> =
	    %% Line 772
	    apply 'address_to_mfa_lth'/2
		(_cor4, _cor3)
	in  let <_cor10> =
		%% Line 774
		case _cor0 of
		  %% Line 775
		  <'local'> when 'true' ->
		      %% Line 776
		      case _cor5 of
			<{M1,_cor18,_cor19}> when 'true' ->
			    %% Line 777
			    case CallerMFA of
			      <{M2,_cor20,_cor21}> when 'true' ->
				  %% Line 778
				  call 'erlang':'=:='
				      (M1, M2)
			      ( <_cor8> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor8})
				-| ['compiler_generated'] )
			    end
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor7})
			  -| ['compiler_generated'] )
		      end
		  %% Line 779
		  <'remote'> when 'true' ->
		      %% Line 780
		      'true'
		  ( <_cor9> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor9})
		    -| ['compiler_generated'] )
		end
	    in  %% Line 774
		case _cor10 of
		  <'true'> when 'true' ->
		      %% Line 783
		      call 'hipe_bifs':'add_ref'
			  (_cor5, {CallerMFA,_cor4,_cor2,_cor1,_cor0})
		  ( <_cor11> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor11})
		    -| ['compiler_generated'] )
		end
'address_to_mfa_lth'/2 =
    %% Line 786
    fun (_cor1,_cor0) ->
	%% Line 787
	case apply 'address_to_mfa_lth'/3
		 (_cor1, _cor0, 'false') of
	  %% Line 788
	  <'false'> when 'true' ->
	      do  %% Line 789
		  call 'code_server':'error_msg'
		      ([60|[72|[105|[80|[69|[32|[40|[118|[32|[51|[46|[49|[49|[41|[62|[32|[69|[114|[114|[111|[114|[58|[32|[91|[126|[115|[58|[126|[119|[93|[58|[32|[76|[111|[99|[97|[108|[32|[97|[100|[100|[100|[114|[101|[115|[115|[32|[110|[111|[116|[32|[102|[111|[117|[110|[100|[32|[126|[119|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['hipe_unified_loader'|[789|[_cor1|[]]]])
		  %% Line 790
		  call 'erlang':'exit'
		      ({'hipe_unified_loader','local_address_not_found'})
	  %% Line 791
	  <MFA> when 'true' ->
	      %% Line 792
	      MFA
	end
'address_to_mfa_lth'/3 =
    %% Line 795
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Address,[{'fundef',Adr,MFA,_cor6,_cor7}|Rest],Prev> when 'true' ->
	      %% Line 796
	      case <> of
		<>
		    when call 'erlang':'<'
			  (Address,
			   Adr) ->
		    %% Line 797
		    Prev
		%% Line 798
		<> when 'true' ->
		    %% Line 799
		    apply 'address_to_mfa_lth'/3
			(Address, Rest, MFA)
	      end
	  %% Line 801
	  <_X_Address,[],Prev> when 'true' ->
	      %% Line 802
	      Prev
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'address_to_mfa_lth',3}}] )
	    -| ['compiler_generated'] )
	end
'patch_to_emu'/1 =
    %% Line 815
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 816
	    apply 'patch_to_emu_step1'/1
		(_cor0)
	in  %% Line 816
	    apply 'patch_to_emu_step2'/1
		(_cor1)
'patch_to_emu_step1'/1 =
    %% Line 820
    fun (_cor0) ->
	%% Line 821
	case apply 'is_loaded'/1
		 (_cor0) of
	  %% Line 822
	  <'true'> when 'true' ->
	      let <_cor6> =
		  %% Line 824
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor4) ->
				case _cor4 of
				  <[{Fun,Arity}|_cor2]> when 'true' ->
				      let <_cor5> =
					  apply 'lc$^0'/1
					      (_cor2)
				      in  ( [{_cor0,Fun,Arity}|_cor5]
					    -| ['compiler_generated'] )
				  ( <[_cor1|_cor2]> when 'true' ->
					apply 'lc$^0'/1
					    (_cor2)
				    -| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_cor4> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor4})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  let <_cor3> =
			    call _cor0:'module_info'
				('exports')
			in  apply 'lc$^0'/1
				(_cor3)
		    -| ['list_comprehension'] )
	      in  do  %% Line 831
		      call 'hipe_bifs':'invalidate_funinfo_native_addresses'
			  (_cor6)
		      let <ReferencesToPatch> =
			  %% Line 834
			  apply 'get_refs_from'/2
			      (_cor6, [])
		      in  %% Line 835
			  case apply 'remove_refs_from'/1
				   (_cor6) of
			    <'ok'> when 'true' ->
				%% Line 836
				ReferencesToPatch
			    ( <_cor9> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor9})
			      -| ['compiler_generated'] )
			  end
	  %% Line 837
	  <'false'> when 'true' ->
	      %% Line 839
	      []
	  ( <_cor10> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor10})
	    -| ['compiler_generated'] )
	end
'patch_to_emu_step2'/1 =
    %% Line 843
    fun (_cor0) ->
	do  %% Line 844
	    apply 'emu_make_stubs'/1
		(_cor0)
	    %% Line 845
	    apply 'redirect'/1
		(_cor0)
'is_loaded'/1 =
    %% Line 849
    fun (_cor0) ->
	case _cor0 of
	  <M>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      %% Line 850
	      try
		  call 'hipe_bifs':'fun_to_address'
		      ({M,'module_info',0})
	      of <_cor1> ->
		  case _cor1 of
		    %% Line 851
		    <I>
			when call 'erlang':'is_integer'
			      (_cor1) ->
			'true'
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'try_clause',_cor2})
		      -| ['compiler_generated'] )
		  end
	      catch <_cor5,_cor4,_cor3> ->
		  %% Line 852
		  'false'
	  ( <_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6})
		  -| [{'function_name',{'is_loaded',1}}] )
	    -| ['compiler_generated'] )
	end
'emu_make_stubs'/1 =
    %% Line 867
    fun (_cor0) ->
	[]
'get_refs_from'/2 =
    %% Line 875
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <MFAs,[]> when 'true' ->
	      do  %% Line 876
		  apply 'mark_referred_from'/1
		      (MFAs)
		  %% Line 877
		  MFAs
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'get_refs_from',2}}] )
	    -| ['compiler_generated'] )
	end
'mark_referred_from'/1 =
    %% Line 879
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 880
	    ( fun (_cor1) ->
		  call 'hipe_bifs':'mark_referred_from'
		      (_cor1)
	      -| [{'id',{0,0,'-mark_referred_from/1-fun-0-'}}] )
	in  %% Line 880
	    call 'lists':'foreach'
		(_cor3, _cor0)
'redirect'/1 =
    %% Line 888
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 889
	    ( fun (_cor1) ->
		  call 'hipe_bifs':'redirect_referred_from'
		      (_cor1)
	      -| [{'id',{0,0,'-redirect/1-fun-0-'}}] )
	in  %% Line 889
	    call 'lists':'foreach'
		(_cor3, _cor0)
'remove_refs_from'/1 =
    %% Line 901
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 902
	    ( fun (_cor1) ->
		  call 'hipe_bifs':'remove_refs_from'
		      (_cor1)
	      -| [{'id',{0,0,'-remove_refs_from/1-fun-0-'}}] )
	in  %% Line 902
	    call 'lists':'foreach'
		(_cor3, _cor0)
'get_native_address'/3 =
    %% Line 912
    fun (_cor2,_cor1,_cor0) ->
	%% Line 913
	case apply 'mfa_to_address'/3
		 (_cor2, _cor1, _cor0) of
	  %% Line 914
	  <Adr>
	      when call 'erlang':'is_integer'
		    (Adr) ->
	      Adr
	  %% Line 915
	  <'false'> when 'true' ->
	      let <_cor4> =
		  %% Line 917
		  case _cor0 of
		    %% Line 918
		    <'remote'> when 'true' ->
			'true'
		    %% Line 919
		    <'local'> when 'true' ->
			'false'
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor3})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 921
		  call 'hipe_bifs':'find_na_or_make_stub'
		      (_cor2, _cor4)
	  ( <_cor6> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor6})
	    -| ['compiler_generated'] )
	end
'mfa_to_address'/3 =
    %% Line 924
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <MFA,[{'fundef',Adr,_cor8,_cor9,%% Line 925
					  IsExported}|%% Line 925
						      _X_Rest],%% Line 925
							       RemoteOrLocal>
	      when call 'erlang':'=:='
		    (_cor8,
		     MFA) ->
	      %% Line 926
	      case RemoteOrLocal of
		%% Line 927
		<'local'> when 'true' ->
		    %% Line 928
		    Adr
		%% Line 929
		<'remote'> when 'true' ->
		    %% Line 930
		    case IsExported of
		      %% Line 931
		      <'true'> when 'true' ->
			  %% Line 932
			  Adr
		      %% Line 933
		      <'false'> when 'true' ->
			  %% Line 934
			  'false'
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor3})
			-| ['compiler_generated'] )
		    end
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 937
	  <MFA,[_cor10|Rest],RemoteOrLocal> when 'true' ->
	      %% Line 938
	      apply 'mfa_to_address'/3
		  (MFA, Rest, RemoteOrLocal)
	  %% Line 939
	  <_cor11,[],_cor12> when 'true' ->
	      'false'
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'mfa_to_address',3}}] )
	    -| ['compiler_generated'] )
	end
'assert_local_patch'/1 =
    %% Line 948
    fun (_cor0) ->
	case _cor0 of
	  <Address>
	      when call 'erlang':'is_integer'
		    (_cor0) ->
	      %% Line 949
	      case call 'erlang':'get'
		       ('hipe_assert_code_area') of
		<{First,Last}> when 'true' ->
		    %% Line 950
		    ( case <> of
			( <>
			      when call 'erlang':'>='
				    (Address,
				     First) ->
			      call 'erlang':'<'
				  (Address, Last)
			  -| ['compiler_generated'] )
			( <> when 'true' ->
			      'false'
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor1})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'assert_local_patch',1}}] )
	    -| ['compiler_generated'] )
	end
'enter_code'/5 =
    %% Line 963
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 964
	    call 'erlang':'byte_size'
		(_cor3)
	in  %% Line 964
	    case call 'erlang':'=:='
		     (_cor5, _cor4) of
	      <'true'> when 'true' ->
		  do  %% Line 965
		      call 'hipe_bifs':'update_code_size'
			  (_cor1, _cor0, _cor4)
		      %% Line 966
		      case call 'hipe_bifs':'enter_code'
			       (_cor3, _cor2) of
			<{CodeAddress,Trampolines}> when 'true' ->
			    let <_cor8> =
				%% Line 967
				call 'erlang':'byte_size'
				    (_cor3)
			    in  let <_cor9> =
				    %% Line 967
				    call 'erlang':'+'
					(CodeAddress, _cor8)
				in  do  %% Line 967
					call 'erlang':'put'
					    ('hipe_assert_code_area', {CodeAddress,_cor9})
					%% Line 968
					{CodeAddress,Trampolines}
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor7})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor6> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor6})
		-| ['compiler_generated'] )
	    end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hipe_unified_loader')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hipe_unified_loader', _cor0)
end