module 'pg2' ['create'/1,
	      'delete'/1,
	      'get_closest_pid'/1,
	      'get_local_members'/1,
	      'get_members'/1,
	      'handle_call'/3,
	      'handle_cast'/2,
	      'handle_info'/2,
	      'init'/1,
	      'join'/2,
	      'leave'/2,
	      'module_info'/0,
	      'module_info'/1,
	      'start'/0,
	      'start_link'/0,
	      'terminate'/2,
	      'which_groups'/0]
    attributes [%% Line 33
		'spec' =
		    %% Line 33
		    [{{'start_link',0},[{'type',33,'fun',[{'type',33,'product',[]}|[{'type',33,'union',[{'type',33,'tuple',[{'atom',33,'ok'}|[{'type',33,'pid',[]}]]}|[{'type',33,'tuple',[{'atom',33,'error'}|[{'type',33,'any',[]}]]}]]}]]}]}],
		%% Line 38
		'spec' =
		    %% Line 38
		    [{{'start',0},[{'type',38,'fun',[{'type',38,'product',[]}|[{'type',38,'union',[{'type',38,'tuple',[{'atom',38,'ok'}|[{'type',38,'pid',[]}]]}|[{'type',38,'tuple',[{'atom',38,'error'}|[{'type',38,'any',[]}]]}]]}]]}]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{'name',{'type',43,'any',[]},[]}],
		%% Line 45
		'spec' =
		    %% Line 45
		    [{{'create',1},[{'type',45,'fun',[{'type',45,'product',[{'ann_type',45,[{'var',45,'Name'}|[{'type',45,'name',[]}]]}]}|[{'atom',45,'ok'}]]}]}],
		%% Line 60
		'spec' =
		    %% Line 60
		    [{{'delete',1},[{'type',60,'fun',[{'type',60,'product',[{'ann_type',60,[{'var',60,'Name'}|[{'type',60,'name',[]}]]}]}|[{'atom',60,'ok'}]]}]}],
		%% Line 70
		'spec' =
		    %% Line 70
		    [{{'join',2},[{'type',70,'bounded_fun',[{'type',70,'fun',[{'type',70,'product',[{'var',70,'Name'}|[{'ann_type',70,[{'var',70,'Pid'}|[{'type',70,'pid',[]}]]}]]}|[{'type',70,'union',[{'atom',70,'ok'}|[{'type',70,'tuple',[{'atom',70,'error'}|[{'type',70,'tuple',[{'atom',70,'no_such_group'}|[{'var',70,'Name'}]]}]]}]]}]]}|[[{'type',71,'constraint',[{'atom',71,'is_subtype'}|[[{'var',71,'Name'}|[{'type',71,'name',[]}]]]]}]]]}]}],
		%% Line 87
		'spec' =
		    %% Line 87
		    [{{'leave',2},[{'type',87,'bounded_fun',[{'type',87,'fun',[{'type',87,'product',[{'var',87,'Name'}|[{'ann_type',87,[{'var',87,'Pid'}|[{'type',87,'pid',[]}]]}]]}|[{'type',87,'union',[{'atom',87,'ok'}|[{'type',87,'tuple',[{'atom',87,'error'}|[{'type',87,'tuple',[{'atom',87,'no_such_group'}|[{'var',87,'Name'}]]}]]}]]}]]}|[[{'type',88,'constraint',[{'atom',88,'is_subtype'}|[[{'var',88,'Name'}|[{'type',88,'name',[]}]]]]}]]]}]}],
		%% Line 104
		'spec' =
		    %% Line 104
		    [{{'get_members',1},[{'type',104,'bounded_fun',[{'type',104,'fun',[{'type',104,'product',[{'var',104,'Name'}]}|[{'type',104,'union',[{'type',104,'list',[{'type',104,'pid',[]}]}|[{'type',104,'tuple',[{'atom',104,'error'}|[{'type',104,'tuple',[{'atom',104,'no_such_group'}|[{'var',104,'Name'}]]}]]}]]}]]}|[[{'type',105,'constraint',[{'atom',105,'is_subtype'}|[[{'var',105,'Name'}|[{'type',105,'name',[]}]]]]}]]]}]}],
		%% Line 116
		'spec' =
		    %% Line 116
		    [{{'get_local_members',1},[{'type',116,'bounded_fun',[{'type',116,'fun',[{'type',116,'product',[{'var',116,'Name'}]}|[{'type',116,'union',[{'type',116,'list',[{'type',116,'pid',[]}]}|[{'type',116,'tuple',[{'atom',116,'error'}|[{'type',116,'tuple',[{'atom',116,'no_such_group'}|[{'var',116,'Name'}]]}]]}]]}]]}|[[{'type',117,'constraint',[{'atom',117,'is_subtype'}|[[{'var',117,'Name'}|[{'type',117,'name',[]}]]]]}]]]}]}],
		%% Line 128
		'spec' =
		    %% Line 128
		    [{{'which_groups',0},[{'type',128,'fun',[{'type',128,'product',[]}|[{'type',128,'list',[{'ann_type',128,[{'var',128,'Name'}|[{'type',128,'name',[]}]]}]}]]}]}],
		%% Line 134
		'spec' =
		    %% Line 134
		    [{{'get_closest_pid',1},[{'type',134,'bounded_fun',[{'type',134,'fun',[{'type',134,'product',[{'var',134,'Name'}]}|[{'type',134,'union',[{'type',134,'pid',[]}|[{'type',134,'tuple',[{'atom',134,'error'}|[{'var',134,'Reason'}]]}]]}]]}|[[{'type',135,'constraint',[{'atom',135,'is_subtype'}|[[{'var',135,'Name'}|[{'type',135,'name',[]}]]]]}|[{'type',136,'constraint',[{'atom',136,'is_subtype'}|[[{'var',136,'Reason'}|[{'type',136,'union',[{'type',136,'tuple',[{'atom',136,'no_process'}|[{'var',136,'Name'}]]}|[{'type',136,'tuple',[{'atom',136,'no_such_group'}|[{'var',136,'Name'}]]}]]}]]]]}]]]]}]}],
		%% Line 160
		'type' =
		    %% Line 160
		    [{{'record','state'},[],[]}],
		%% Line 162
		'type' =
		    %% Line 162
		    [{'state',{'type',162,'record',[{'atom',162,'state'}]},[]}],
		%% Line 164
		'spec' =
		    %% Line 164
		    [{{'init',1},[{'type',164,'fun',[{'type',164,'product',[{'ann_type',164,[{'var',164,'Arg'}|[{'type',164,'nil',[]}]]}]}|[{'type',164,'tuple',[{'atom',164,'ok'}|[{'type',164,'state',[]}]]}]]}]}],
		%% Line 176
		'spec' =
		    %% Line 176
		    [{{'handle_call',3},[{'type',176,'bounded_fun',[{'type',176,'fun',[{'type',176,'product',[{'ann_type',176,[{'var',176,'Call'}|[{'type',176,'union',[{'type',176,'tuple',[{'atom',176,'create'}|[{'var',176,'Name'}]]}|[{'type',177,'tuple',[{'atom',177,'delete'}|[{'var',177,'Name'}]]}|[{'type',178,'tuple',[{'atom',178,'join'}|[{'var',178,'Name'}|[{'ann_type',178,[{'var',178,'Pid'}|[{'type',178,'pid',[]}]]}]]]}|[{'type',179,'tuple',[{'atom',179,'leave'}|[{'var',179,'Name'}|[{'ann_type',179,[{'var',179,'Pid'}|[{'type',179,'pid',[]}]]}]]]}]]]]}]]}|[{'ann_type',180,[{'var',180,'From'}|[{'type',180,'tuple',[{'type',180,'pid',[]}|[{'ann_type',180,[{'var',180,'Tag'}|[{'type',180,'any',[]}]]}]]}]]}|[{'ann_type',181,[{'var',181,'State'}|[{'type',181,'state',[]}]]}]]]}|[{'type',181,'tuple',[{'atom',181,'reply'}|[{'atom',181,'ok'}|[{'type',181,'state',[]}]]]}]]}|[[{'type',182,'constraint',[{'atom',182,'is_subtype'}|[[{'var',182,'Name'}|[{'type',182,'name',[]}]]]]}]]]}]}],
		%% Line 202
		'spec' =
		    %% Line 202
		    [{{'handle_cast',2},[{'type',202,'bounded_fun',[{'type',202,'fun',[{'type',202,'product',[{'ann_type',202,[{'var',202,'Cast'}|[{'type',202,'union',[{'type',202,'tuple',[{'atom',202,'exchange'}|[{'type',202,'node',[]}|[{'ann_type',202,[{'var',202,'Names'}|[{'type',202,'list',[{'type',202,'nonempty_list',[{'var',202,'Name'}]}]}]]}]]]}|[{'type',203,'tuple',[{'atom',203,'del_member'}|[{'var',203,'Name'}|[{'ann_type',203,[{'var',203,'Pid'}|[{'type',203,'pid',[]}]]}]]]}]]}]]}|[{'ann_type',204,[{'var',204,'State'}|[{'type',204,'state',[]}]]}]]}|[{'type',204,'tuple',[{'atom',204,'noreply'}|[{'type',204,'state',[]}]]}]]}|[[{'type',205,'constraint',[{'atom',205,'is_subtype'}|[[{'var',205,'Name'}|[{'type',205,'name',[]}]]]]}]]]}]}],
		%% Line 214
		'spec' =
		    %% Line 214
		    [{{'handle_info',2},[{'type',214,'fun',[{'type',214,'product',[{'ann_type',214,[{'var',214,'Tuple'}|[{'type',214,'tuple','any'}]]}|[{'ann_type',214,[{'var',214,'State'}|[{'type',214,'state',[]}]]}]]}|[{'type',215,'tuple',[{'atom',215,'noreply'}|[{'type',215,'state',[]}]]}]]}]}],
		%% Line 229
		'spec' =
		    %% Line 229
		    [{{'terminate',2},[{'type',229,'fun',[{'type',229,'product',[{'ann_type',229,[{'var',229,'Reason'}|[{'type',229,'any',[]}]]}|[{'ann_type',229,[{'var',229,'State'}|[{'type',229,'state',[]}]]}]]}|[{'atom',229,'ok'}]]}]}]]
'start_link'/0 =
    %% Line 35
    fun () ->
	%% Line 36
	call 'gen_server':'start_link'
	    ({'local','pg2'}, 'pg2', [], [])
'start'/0 =
    %% Line 40
    fun () ->
	%% Line 41
	apply 'ensure_started'/0
	    ()
'create'/1 =
    %% Line 47
    fun (_cor0) ->
	let <_X_> =
	    %% Line 48
	    apply 'ensure_started'/0
		()
	in  %% Line 49
	    case call 'ets':'member'
		     ('pg2_table', {'group',_cor0}) of
	      %% Line 50
	      <'false'> when 'true' ->
		  let <_cor3> =
		      %% Line 51
		      call 'erlang':'self'
			  ()
		  in  let <_cor2> =
			  %% Line 52
			  ( fun () ->
				%% Line 53
				call 'gen_server':'multi_call'
				    ('pg2', {'create',_cor0})
			    -| [{'id',{0,0,'-create/1-fun-0-'}}] )
		      in  do  %% Line 51
			      call 'global':'trans'
				  ({{'pg2',_cor0},_cor3}, _cor2)
			      %% Line 55
			      'ok'
	      %% Line 56
	      <'true'> when 'true' ->
		  %% Line 57
		  'ok'
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor4})
		-| ['compiler_generated'] )
	    end
'delete'/1 =
    %% Line 62
    fun (_cor0) ->
	let <_X_> =
	    %% Line 63
	    apply 'ensure_started'/0
		()
	in  let <_cor3> =
		%% Line 64
		call 'erlang':'self'
		    ()
	    in  let <_cor2> =
		    %% Line 65
		    ( fun () ->
			  %% Line 66
			  call 'gen_server':'multi_call'
			      ('pg2', {'delete',_cor0})
		      -| [{'id',{0,0,'-delete/1-fun-0-'}}] )
		in  do  %% Line 64
			call 'global':'trans'
			    ({{'pg2',_cor0},_cor3}, _cor2)
			%% Line 68
			'ok'
'join'/2 =
    %% Line 73
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Name,Pid>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      let <_X_> =
		  %% Line 74
		  apply 'ensure_started'/0
		      ()
	      in  %% Line 75
		  case call 'ets':'member'
			   ('pg2_table', {'group',Name}) of
		    %% Line 76
		    <'false'> when 'true' ->
			%% Line 77
			{'error',{'no_such_group',Name}}
		    %% Line 78
		    <'true'> when 'true' ->
			let <_cor4> =
			    %% Line 79
			    call 'erlang':'self'
				()
			in  let <_cor3> =
				%% Line 80
				( fun () ->
				      %% Line 81
				      call 'gen_server':'multi_call'
					  ('pg2', %% Line 82
						  {'join',Name,Pid})
				  -| [{'id',{0,0,'-join/2-fun-0-'}}] )
			    in  do  %% Line 79
				    call 'global':'trans'
					({{'pg2',Name},_cor4}, _cor3)
				    %% Line 84
				    'ok'
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor5})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'join',2}}] )
	    -| ['compiler_generated'] )
	end
'leave'/2 =
    %% Line 90
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Name,Pid>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      let <_X_> =
		  %% Line 91
		  apply 'ensure_started'/0
		      ()
	      in  %% Line 92
		  case call 'ets':'member'
			   ('pg2_table', {'group',Name}) of
		    %% Line 93
		    <'false'> when 'true' ->
			%% Line 94
			{'error',{'no_such_group',Name}}
		    %% Line 95
		    <'true'> when 'true' ->
			let <_cor4> =
			    %% Line 96
			    call 'erlang':'self'
				()
			in  let <_cor3> =
				%% Line 97
				( fun () ->
				      %% Line 98
				      call 'gen_server':'multi_call'
					  ('pg2', %% Line 99
						  {'leave',Name,Pid})
				  -| [{'id',{0,0,'-leave/2-fun-0-'}}] )
			    in  do  %% Line 96
				    call 'global':'trans'
					({{'pg2',Name},_cor4}, _cor3)
				    %% Line 101
				    'ok'
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor5})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'leave',2}}] )
	    -| ['compiler_generated'] )
	end
'get_members'/1 =
    %% Line 107
    fun (_cor0) ->
	let <_X_> =
	    %% Line 108
	    apply 'ensure_started'/0
		()
	in  %% Line 109
	    case call 'ets':'member'
		     ('pg2_table', {'group',_cor0}) of
	      %% Line 110
	      <'true'> when 'true' ->
		  %% Line 111
		  apply 'group_members'/1
		      (_cor0)
	      %% Line 112
	      <'false'> when 'true' ->
		  %% Line 113
		  {'error',{'no_such_group',_cor0}}
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor2})
		-| ['compiler_generated'] )
	    end
'get_local_members'/1 =
    %% Line 119
    fun (_cor0) ->
	let <_X_> =
	    %% Line 120
	    apply 'ensure_started'/0
		()
	in  %% Line 121
	    case call 'ets':'member'
		     ('pg2_table', {'group',_cor0}) of
	      %% Line 122
	      <'true'> when 'true' ->
		  %% Line 123
		  apply 'local_group_members'/1
		      (_cor0)
	      %% Line 124
	      <'false'> when 'true' ->
		  %% Line 125
		  {'error',{'no_such_group',_cor0}}
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor2})
		-| ['compiler_generated'] )
	    end
'which_groups'/0 =
    %% Line 130
    fun () ->
	let <_X_> =
	    %% Line 131
	    apply 'ensure_started'/0
		()
	in  %% Line 132
	    apply 'all_groups'/0
		()
'get_closest_pid'/1 =
    %% Line 138
    fun (_cor0) ->
	%% Line 139
	case apply 'get_local_members'/1
		 (_cor0) of
	  %% Line 140
	  <[Pid|[]]> when 'true' ->
	      %% Line 141
	      Pid
	  %% Line 142
	  <[]> when 'true' ->
	      %% Line 143
	      case call 'erlang':'now'
		       () of
		<{_cor12,_cor13,X}> when 'true' ->
		    %% Line 144
		    case apply 'get_members'/1
			     (_cor0) of
		      %% Line 145
		      <[]> when 'true' ->
			  {'error',{'no_process',_cor0}}
		      %% Line 146
		      <Members> when 'true' ->
			  let <_cor2> =
			      %% Line 147
			      call 'erlang':'length'
				  (Members)
			  in  let <_cor3> =
				  %% Line 147
				  call 'erlang':'rem'
				      (X, _cor2)
			      in  let <_cor4> =
				      %% Line 147
				      call 'erlang':'+'
					  (_cor3, 1)
				  in  %% Line 147
				      call 'lists':'nth'
					  (_cor4, Members)
		    end
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor1})
		  -| ['compiler_generated'] )
	      end
	  %% Line 149
	  <Members>
	      when call 'erlang':'is_list'
		    (Members) ->
	      %% Line 150
	      case call 'erlang':'now'
		       () of
		<{_cor14,_cor15,X}> when 'true' ->
		    let <_cor7> =
			%% Line 151
			call 'erlang':'length'
			    (Members)
		    in  let <_cor8> =
			    %% Line 151
			    call 'erlang':'rem'
				(X, _cor7)
			in  let <_cor9> =
				%% Line 151
				call 'erlang':'+'
				    (_cor8, 1)
			    in  %% Line 151
				call 'lists':'nth'
				    (_cor9, Members)
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor6})
		  -| ['compiler_generated'] )
	      end
	  %% Line 152
	  <Else> when 'true' ->
	      %% Line 153
	      Else
	end
'init'/1 =
    %% Line 166
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      let <Ns> =
		  %% Line 167
		  call 'erlang':'nodes'
		      ()
	      in  %% Line 168
		  case call 'net_kernel':'monitor_nodes'
			   ('true') of
		    <'ok'> when 'true' ->
			let <_cor7> =
			    %% Line 169
			    ( fun (_cor5) ->
				  let <_cor3> =
				      %% Line 170
				      call 'erlang':'node'
					  ()
				  in  do  %% Line 170
					  call 'erlang':'!'
					      ({'pg2',_cor5}, {'new_pg2',_cor3})
					  let <_cor4> =
					      %% Line 171
					      call 'erlang':'self'
						  ()
					  in  %% Line 171
					      call 'erlang':'!'
						  (_cor4, {'nodeup',_cor5})
			      -| [{'id',{0,0,'-init/1-fun-0-'}}] )
			in  do  %% Line 169
				call 'lists':'foreach'
				    (_cor7, %% Line 172
					    Ns)
				%% Line 173
				case call 'ets':'new'
					 ('pg2_table', ['ordered_set'|['protected'|['named_table']]]) of
				  <'pg2_table'> when 'true' ->
				      %% Line 174
				      {'ok',{'state'}}
				  ( <_cor8> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor8})
				    -| ['compiler_generated'] )
				end
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor2})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9})
		  -| [{'function_name',{'init',1}}] )
	    -| ['compiler_generated'] )
	end
'handle_call'/3 =
    %% Line 184
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'create',Name},_X_From,S> when 'true' ->
	      do  %% Line 185
		  apply 'assure_group'/1
		      (Name)
		  %% Line 186
		  {'reply','ok',S}
	  %% Line 187
	  <{'join',Name,Pid},_X_From,S> when 'true' ->
	      do  %% Line 188
		  ( case call 'ets':'member'
			     ('pg2_table', {'group',Name}) of
		      ( <( 'true'
			   -| ['compiler_generated'] )> when 'true' ->
			    apply 'join_group'/2
				(Name, Pid)
			-| ['compiler_generated'] )
		      ( <( 'false'
			   -| ['compiler_generated'] )> when 'true' ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <_cor3> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {( 'badarg'
					-| ['compiler_generated'] ),_cor3}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  %% Line 189
		  {'reply','ok',S}
	  %% Line 190
	  <{'leave',Name,Pid},_X_From,S> when 'true' ->
	      do  %% Line 191
		  ( case call 'ets':'member'
			     ('pg2_table', {'group',Name}) of
		      ( <( 'true'
			   -| ['compiler_generated'] )> when 'true' ->
			    apply 'leave_group'/2
				(Name, Pid)
			-| ['compiler_generated'] )
		      ( <( 'false'
			   -| ['compiler_generated'] )> when 'true' ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <_cor5> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {( 'badarg'
					-| ['compiler_generated'] ),_cor5}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  %% Line 192
		  {'reply','ok',S}
	  %% Line 193
	  <{'delete',Name},_X_From,S> when 'true' ->
	      do  %% Line 194
		  apply 'delete_group'/1
		      (Name)
		  %% Line 195
		  {'reply','ok',S}
	  %% Line 196
	  <Request,From,S> when 'true' ->
	      do  %% Line 197
		  call 'error_logger':'warning_msg'
		      ([84|[104|[101|[32|[112|[103|[50|[32|[115|[101|[114|[118|[101|[114|[32|[114|[101|[99|[101|[105|[118|[101|[100|[32|[97|[110|[32|[117|[110|[101|[120|[112|[101|[99|[116|[101|[100|[32|[109|[101|[115|[115|[97|[103|[101|[58|[10|[104|[97|[110|[100|[108|[101|[95|[99|[97|[108|[108|[40|[126|[112|[44|[32|[126|[112|[44|[32|[95|[41|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 199
																																																				  [Request|[From|[]]])
		  %% Line 200
		  {'noreply',S}
	end
'handle_cast'/2 =
    %% Line 207
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'exchange',_X_Node,List},S> when 'true' ->
	      do  %% Line 208
		  apply 'store'/1
		      (List)
		  %% Line 209
		  {'noreply',S}
	  %% Line 210
	  <_cor4,S> when 'true' ->
	      %% Line 212
	      {'noreply',S}
	end
'handle_info'/2 =
    %% Line 217
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'DOWN',MonitorRef,'process',_X_Pid,_X_Info},S> when 'true' ->
	      do  %% Line 218
		  apply 'member_died'/1
		      (MonitorRef)
		  %% Line 219
		  {'noreply',S}
	  %% Line 220
	  <{'nodeup',Node},S> when 'true' ->
	      let <_cor3> =
		  %% Line 221
		  call 'erlang':'node'
		      ()
	      in  let <_cor2> =
		      %% Line 221
		      apply 'all_members'/0
			  ()
		  in  do  %% Line 221
			  call 'gen_server':'cast'
			      ({'pg2',Node}, {'exchange',_cor3,_cor2})
			  %% Line 222
			  {'noreply',S}
	  %% Line 223
	  <{'new_pg2',Node},S> when 'true' ->
	      let <_cor5> =
		  %% Line 224
		  call 'erlang':'node'
		      ()
	      in  let <_cor4> =
		      %% Line 224
		      apply 'all_members'/0
			  ()
		  in  do  %% Line 224
			  call 'gen_server':'cast'
			      ({'pg2',Node}, {'exchange',_cor5,_cor4})
			  %% Line 225
			  {'noreply',S}
	  %% Line 226
	  <_cor8,S> when 'true' ->
	      %% Line 227
	      {'noreply',S}
	end
'terminate'/2 =
    %% Line 231
    fun (_cor1,_cor0) ->
	%% Line 232
	case call 'ets':'delete'
		 ('pg2_table') of
	  <'true'> when 'true' ->
	      %% Line 233
	      'ok'
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'store'/1 =
    %% Line 257
    fun (_cor0) ->
	do  %% Line 258
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor3) ->
			  case _cor3 of
			    <[%% Line 261
			      [Name|[Members|[]]]|_cor2]> when 'true' ->
				do  %% Line 259
				    ( case apply 'assure_group'/1
					       (Name) of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      %% Line 260
					      ( letrec
						    'lc$^1'/1 =
							fun (_cor9) ->
							    case _cor9 of
							      <[P|_cor6]> when 'true' ->
								  do  apply 'join_group'/2
									  (Name, P)
								      apply 'lc$^1'/1
									  (_cor6)
							      <[]> when 'true' ->
								  []
							      ( <_cor9> when 'true' ->
								    ( primop 'match_fail'
									  ({'function_clause',_cor9})
								      -| [{'function_name',{'lc$^1',1}}] )
								-| ['compiler_generated'] )
							    end
						in  let <_cor7> =
							apply 'group_members'/1
							    (Name)
						    in  let <_cor8> =
							    call 'erlang':'--'
								(Members, _cor7)
							in  apply 'lc$^1'/1
								(_cor8)
						-| ['list_comprehension'] )
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      'ok'
					  -| ['compiler_generated'] )
					( <_cor4> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {( 'badarg'
							  -| ['compiler_generated'] ),_cor4}
						       -| ['compiler_generated'] ))
						-| ['result_not_wanted','compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				    %% Line 261
				    apply 'lc$^0'/1
					(_cor2)
			    ( <[_cor1|_cor2]> when 'true' ->
				  %% Line 261
				  apply 'lc$^0'/1
				      (_cor2)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor3> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor3})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (_cor0)
	      -| ['list_comprehension'] )
	    %% Line 262
	    'ok'
'assure_group'/1 =
    %% Line 264
    fun (_cor0) ->
	let <Key> = {%% Line 265
	     'group',_cor0}
	in  %% Line 266
	    ( case call 'ets':'member'
		       ('pg2_table', Key) of
		( <( 'true'
		     -| ['compiler_generated'] )> when 'true' ->
		      'true'
		  -| ['compiler_generated'] )
		( <( 'false'
		     -| ['compiler_generated'] )> when 'true' ->
		      let <_cor3> =
			  call 'ets':'insert'
			      ('pg2_table', {Key})
		      in  call 'erlang':'=:='
			      ('true', _cor3)
		  -| ['compiler_generated'] )
		( <_cor2> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {( 'badarg'
				  -| ['compiler_generated'] ),_cor2}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'delete_group'/1 =
    %% Line 268
    fun (_cor0) ->
	let <_cor7> =
	    %% Line 269
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor4) ->
			  case _cor4 of
			    <[Pid|_cor2]> when 'true' ->
				let <_cor5> =
				    apply 'leave_group'/2
					(_cor0, Pid)
				in  let <_cor6> =
					apply 'lc$^0'/1
					    (_cor2)
				    in  ( [_cor5|_cor6]
					  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor4> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor4})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  let <_cor3> =
		      apply 'group_members'/1
			  (_cor0)
		  in  apply 'lc$^0'/1
			  (_cor3)
	      -| ['list_comprehension'] )
	in  %% Line 270
	    case call 'ets':'delete'
		     ('pg2_table', {'group',_cor0}) of
	      <'true'> when 'true' ->
		  %% Line 271
		  'ok'
	      ( <_cor9> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor9})
		-| ['compiler_generated'] )
	    end
'member_died'/1 =
    %% Line 273
    fun (_cor0) ->
	%% Line 274
	case call 'ets':'lookup'
		 ('pg2_table', {'ref',_cor0}) of
	  <[{{'ref',_cor23},Pid}|[]]>
	      when call 'erlang':'=:='
		    (_cor23,
		     _cor0) ->
	      let <Names> =
		  %% Line 275
		  apply 'member_groups'/1
		      (Pid)
	      in  let <_cor12> =
		      %% Line 276
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor8) ->
				    case _cor8 of
				      <[%% Line 277
					Name|_cor4]> when 'true' ->
					  ( letrec
						'lc$^1'/1 =
						    fun (_cor9) ->
							case _cor9 of
							  <[%% Line 278
							    P|_cor6]> when 'true' ->
							      let <_cor10> =
								  apply 'leave_group'/2
								      (Name, P)
							      in  let <_cor11> =
								      %% Line 278
								      apply 'lc$^1'/1
									  (_cor6)
								  in  ( [_cor10|_cor11]
									-| ['compiler_generated'] )
							  <[]> when 'true' ->
							      %% Line 277
							      apply 'lc$^0'/1
								  (_cor4)
							  ( <_cor9> when 'true' ->
								( primop 'match_fail'
								      ({'function_clause',_cor9})
								  -| [{'function_name',{'lc$^1',1}}] )
							    -| ['compiler_generated'] )
							end
					    in  let <_cor7> =
						    %% Line 278
						    apply 'member_in_group'/2
							(Pid, Name)
						in  apply 'lc$^1'/1
							(_cor7)
					    -| ['list_comprehension'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor8> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor8})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(%% Line 277
				 Names)
			-| ['list_comprehension'] )
		  in  do  %% Line 280
			  ( letrec
				'lc$^2'/1 =
				    fun (_cor16) ->
					case _cor16 of
					  <[%% Line 281
					    Name|_cor15]> when 'true' ->
					      let <_cor17> =
						  ( call 'erlang':'nodes'
							()
						    -| ['result_not_wanted'] )
					      in  do  ( call 'gen_server':'abcast'
							    (_cor17, 'pg2', {'del_member',Name,Pid})
							-| ['result_not_wanted'] )
						      %% Line 281
						      apply 'lc$^2'/1
							  (_cor15)
					  <[]> when 'true' ->
					      []
					  ( <_cor16> when 'true' ->
						( primop 'match_fail'
						      ({'function_clause',_cor16})
						  -| [{'function_name',{'lc$^2',1}}] )
					    -| ['compiler_generated'] )
					end
			    in  apply 'lc$^2'/1
				    (%% Line 281
				     Names)
			    -| ['list_comprehension'] )
			  %% Line 282
			  'ok'
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'join_group'/2 =
    %% Line 284
    fun (_cor1,_cor0) ->
	let <Ref_Pid> = {%% Line 285
	     'ref',_cor0}
	in  do  %% Line 286
		try
		    do  ( call 'ets':'update_counter'
			      ('pg2_table', Ref_Pid, {4,1})
			  -| ['result_not_wanted'] )
			'true'
		of <_cor5> ->
		    _cor5
		catch <_cor8,_cor7,_cor6> ->
		    %% Line 288
		    case apply 'do_monitor'/1
			     (_cor0) of
		      <{RPid,Ref}> when 'true' ->
			  %% Line 289
			  case call 'ets':'insert'
				   ('pg2_table', {Ref_Pid,RPid,Ref,1}) of
			    <'true'> when 'true' ->
				let <_cor31> =
				    %% Line 290
				    call 'ets':'insert'
					('pg2_table', {{'ref',Ref},_cor0})
				in  %% Line 290
				    case _cor31 of
				      <'true'> when 'true' ->
					  ( _cor31
					    -| ['compiler_generated'] )
				      ( <_cor11> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor11})
					-| ['compiler_generated'] )
				    end
			    ( <_cor10> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor10})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor9> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor9})
			-| ['compiler_generated'] )
		    end
		let <Member_Name_Pid> = {%% Line 292
		     'member',_cor1,_cor0}
		in  %% Line 293
		    try
			( call 'ets':'update_counter'
			      ('pg2_table', Member_Name_Pid, {2,1})
			  -| ['result_not_wanted'] )
		    of <_cor15> ->
			_cor15
		    catch <_cor18,_cor17,_cor16> ->
			%% Line 295
			case call 'ets':'insert'
				 ('pg2_table', {Member_Name_Pid,1}) of
			  <'true'> when 'true' ->
			      let <_cor23> =
				  %% Line 297
				  ( case <> of
				      <>
					  when try
						let <_cor21> =
						    ( call 'erlang':'node'
							  (_cor0)
						      -| ['result_not_wanted'] )
						in  let <_cor20> =
							( call 'erlang':'node'
							      ()
							  -| ['result_not_wanted'] )
						    in  call 'erlang':'=:='
							    (_cor21, _cor20)
					    of <Try> ->
						Try
					    catch <T,R> ->
						'false' ->
					  let <_cor22> =
					      ( call 'ets':'insert'
						    ('pg2_table', {{'local_member',_cor1,_cor0}})
						-| ['result_not_wanted'] )
					  in  ( [_cor22|[]]
						-| ['compiler_generated'] )
				      ( <> when 'true' ->
					    []
					-| ['compiler_generated'] )
				    end
				    -| ['list_comprehension'] )
			      in  let <_cor35> =
				      %% Line 298
				      call 'ets':'insert'
					  ('pg2_table', {{'pid',_cor0,_cor1}})
				  in  %% Line 298
				      case _cor35 of
					<'true'> when 'true' ->
					    ( _cor35
					      -| ['compiler_generated'] )
					( <_cor25> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor25})
					  -| ['compiler_generated'] )
				      end
			  ( <_cor19> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor19})
			    -| ['compiler_generated'] )
			end
'leave_group'/2 =
    %% Line 301
    fun (_cor1,_cor0) ->
	let <Member_Name_Pid> = {%% Line 302
	     'member',_cor1,_cor0}
	in  %% Line 303
	    try
		call 'ets':'update_counter'
		    ('pg2_table', Member_Name_Pid, {2,-1})
	    of <_cor4> ->
		do  %% Line 305
		    case <> of
		      %% Line 306
		      <>
			  when call 'erlang':'=:='
				(_cor4,
				 0) ->
			  %% Line 307
			  case call 'ets':'delete'
				   ('pg2_table', {'pid',_cor0,_cor1}) of
			    <'true'> when 'true' ->
				do  %% Line 309
				    ( case <> of
					<>
					    when try
						  let <_cor7> =
						      ( call 'erlang':'node'
							    (_cor0)
							-| ['result_not_wanted'] )
						  in  let <_cor6> =
							  ( call 'erlang':'node'
								()
							    -| ['result_not_wanted'] )
						      in  call 'erlang':'=:='
							      (_cor7, _cor6)
					      of <Try> ->
						  Try
					      catch <T,R> ->
						  'false' ->
					    ( call 'ets':'delete'
						  ('pg2_table', {'local_member',_cor1,_cor0})
					      -| ['result_not_wanted'] )
					( <> when 'true' ->
					      []
					  -| ['compiler_generated'] )
				      end
				      -| ['list_comprehension'] )
				    %% Line 310
				    case call 'ets':'delete'
					     ('pg2_table', Member_Name_Pid) of
				      <'true'> when 'true' ->
					  'ok'
				      ( <_cor11> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor11})
					-| ['compiler_generated'] )
				    end
			    ( <_cor5> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor5})
			      -| ['compiler_generated'] )
			  end
		      %% Line 311
		      <> when 'true' ->
			  'ok'
		    end
		    let <Ref_Pid> = {%% Line 314
			 'ref',_cor0}
		    in  %% Line 315
			case call 'ets':'update_counter'
				 ('pg2_table', Ref_Pid, {4,-1}) of
			  %% Line 316
			  <0> when 'true' ->
			      %% Line 317
			      case call 'ets':'lookup'
				       ('pg2_table', Ref_Pid) of
				<[{_cor26,RPid,Ref,0}|[]]>
				    when call 'erlang':'=:='
					  (_cor26,
					   Ref_Pid) ->
				    %% Line 318
				    case call 'ets':'delete'
					     ('pg2_table', {'ref',Ref}) of
				      <'true'> when 'true' ->
					  %% Line 319
					  case call 'ets':'delete'
						   ('pg2_table', Ref_Pid) of
					    <'true'> when 'true' ->
						%% Line 320
						case call 'erlang':'demonitor'
							 (Ref, ['flush']) of
						  <'true'> when 'true' ->
						      %% Line 321
						      apply 'kill_monitor_proc'/2
							  (RPid, _cor0)
						  ( <_cor17> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_cor17})
						    -| ['compiler_generated'] )
						end
					    ( <_cor16> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_cor16})
					      -| ['compiler_generated'] )
					  end
				      ( <_cor15> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor15})
					-| ['compiler_generated'] )
				    end
				( <_cor14> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor14})
				  -| ['compiler_generated'] )
			      end
			  %% Line 322
			  <_cor27> when 'true' ->
			      %% Line 323
			      'ok'
			end
	    catch <_cor22,_cor21,_cor20> ->
		%% Line 326
		'ok'
'all_members'/0 =
    %% Line 329
    fun () ->
	%% Line 330
	( letrec
	      'lc$^0'/1 =
		  fun (_cor3) ->
		      case _cor3 of
			<[G|_cor1]> when 'true' ->
			    let <_cor4> =
				apply 'group_members'/1
				    (G)
			    in  let <_cor5> =
				    apply 'lc$^0'/1
					(_cor1)
				in  ( [[G|[_cor4|[]]]|_cor5]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor3> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor3})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor2> =
		  apply 'all_groups'/0
		      ()
	      in  apply 'lc$^0'/1
		      (_cor2)
	  -| ['list_comprehension'] )
'group_members'/1 =
    %% Line 332
    fun (_cor0) ->
	%% Line 333
	( letrec
	      'lc$^0'/1 =
		  fun (_cor7) ->
		      case _cor7 of
			<[%% Line 334
			  [P|[N|[]]]|_cor2]> when 'true' ->
			    ( letrec
				  'lc$^1'/1 =
				      fun (_cor8) ->
					  case _cor8 of
					    <[_cor11|_cor5]> when 'true' ->
						let <_cor9> =
						    %% Line 335
						    apply 'lc$^1'/1
							(_cor5)
						in  ( [P|_cor9]
						      -| ['compiler_generated'] )
					    <[]> when 'true' ->
						%% Line 334
						apply 'lc$^0'/1
						    (_cor2)
					    ( <_cor8> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor8})
						    -| [{'function_name',{'lc$^1',1}}] )
					      -| ['compiler_generated'] )
					  end
			      in  let <_cor6> =
				      %% Line 335
				      call 'lists':'seq'
					  (1, N)
				  in  apply 'lc$^1'/1
					  (_cor6)
			      -| ['list_comprehension'] )
			( <[_cor1|_cor2]> when 'true' ->
			      %% Line 334
			      apply 'lc$^0'/1
				  (_cor2)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor7> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor7})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor3> =
		  %% Line 334
		  call 'ets':'match'
		      ('pg2_table', {{'member',_cor0,'$1'},'$2'})
	      in  apply 'lc$^0'/1
		      (_cor3)
	  -| ['list_comprehension'] )
'local_group_members'/1 =
    %% Line 337
    fun (_cor0) ->
	%% Line 338
	( letrec
	      'lc$^0'/1 =
		  fun (_cor7) ->
		      case _cor7 of
			<[%% Line 339
			  [Pid|[]]|_cor2]> when 'true' ->
			    ( letrec
				  'lc$^1'/1 =
				      fun (_cor8) ->
					  case _cor8 of
					    <[%% Line 340
					      P|_cor5]> when 'true' ->
						let <_cor9> =
						    %% Line 340
						    apply 'lc$^1'/1
							(_cor5)
						in  ( [P|_cor9]
						      -| ['compiler_generated'] )
					    <[]> when 'true' ->
						%% Line 339
						apply 'lc$^0'/1
						    (_cor2)
					    ( <_cor8> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor8})
						    -| [{'function_name',{'lc$^1',1}}] )
					      -| ['compiler_generated'] )
					  end
			      in  let <_cor6> =
				      %% Line 340
				      apply 'member_in_group'/2
					  (Pid, _cor0)
				  in  apply 'lc$^1'/1
					  (_cor6)
			      -| ['list_comprehension'] )
			( <[_cor1|_cor2]> when 'true' ->
			      %% Line 339
			      apply 'lc$^0'/1
				  (_cor2)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor7> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor7})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor3> =
		  %% Line 339
		  call 'ets':'match'
		      ('pg2_table', {{'local_member',_cor0,'$1'}})
	      in  apply 'lc$^0'/1
		      (_cor3)
	  -| ['list_comprehension'] )
'member_in_group'/2 =
    %% Line 342
    fun (_cor1,_cor0) ->
	%% Line 343
	case call 'ets':'lookup'
		 ('pg2_table', {'member',_cor0,_cor1}) of
	  %% Line 344
	  <[]> when 'true' ->
	      []
	  %% Line 345
	  <[{{'member',_cor5,_cor6},N}|[]]>
	      when let <_cor7> =
		    call 'erlang':'=:='
			(_cor5, _cor0)
		in  let <_cor8> =
			call 'erlang':'=:='
			    (_cor6, _cor1)
		    in  call 'erlang':'and'
			    (_cor7, _cor8) ->
	      %% Line 346
	      call 'lists':'duplicate'
		  (N, _cor1)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor2})
	    -| ['compiler_generated'] )
	end
'member_groups'/1 =
    %% Line 349
    fun (_cor0) ->
	%% Line 350
	( letrec
	      'lc$^0'/1 =
		  fun (_cor4) ->
		      case _cor4 of
			<[[Name|[]]|_cor2]> when 'true' ->
			    let <_cor5> =
				apply 'lc$^0'/1
				    (_cor2)
			    in  ( [Name|_cor5]
				  -| ['compiler_generated'] )
			( <[_cor1|_cor2]> when 'true' ->
			      apply 'lc$^0'/1
				  (_cor2)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor4> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor4})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor3> =
		  call 'ets':'match'
		      ('pg2_table', {{'pid',_cor0,'$1'}})
	      in  apply 'lc$^0'/1
		      (_cor3)
	  -| ['list_comprehension'] )
'all_groups'/0 =
    %% Line 352
    fun () ->
	%% Line 353
	( letrec
	      'lc$^0'/1 =
		  fun (_cor3) ->
		      case _cor3 of
			<[[N|[]]|_cor1]> when 'true' ->
			    let <_cor4> =
				apply 'lc$^0'/1
				    (_cor1)
			    in  ( [N|_cor4]
				  -| ['compiler_generated'] )
			( <[_cor0|_cor1]> when 'true' ->
			      apply 'lc$^0'/1
				  (_cor1)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor3> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor3})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor2> =
		  call 'ets':'match'
		      ('pg2_table', {{'group','$1'}})
	      in  apply 'lc$^0'/1
		      (_cor2)
	  -| ['list_comprehension'] )
'ensure_started'/0 =
    %% Line 355
    fun () ->
	%% Line 356
	case call 'erlang':'whereis'
		 ('pg2') of
	  %% Line 357
	  <'undefined'> when 'true' ->
	      %% Line 360
	      call 'supervisor':'start_child'
		  ('kernel_safe_sup', {'pg2',{'pg2','start_link',[]},'permanent',1000,'worker',['pg2']})
	  %% Line 361
	  <Pg2Pid> when 'true' ->
	      %% Line 362
	      {'ok',Pg2Pid}
	end
'kill_monitor_proc'/2 =
    %% Line 366
    fun (_cor1,_cor0) ->
	%% Line 367
	( case <> of
	    ( <>
		  when call 'erlang':'=:='
			(_cor1,
			 _cor0) ->
		  'true'
	      -| ['compiler_generated'] )
	    ( <> when 'true' ->
		  call 'erlang':'exit'
		      (_cor1, 'kill')
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'do_monitor'/1 =
    %% Line 371
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 372
	    call 'erlang':'node'
		(_cor0)
	in  let <_cor2> =
		%% Line 372
		call 'erlang':'node'
		    ()
	    in  let <_cor7> =
		    %% Line 372
		    ( case <> of
			( <>
			      when call 'erlang':'=:='
				    (_cor3,
				     _cor2) ->
			      'true'
			  -| ['compiler_generated'] )
			( <> when 'true' ->
			      let <_cor5> =
				  call 'erlang':'node'
				      (_cor0)
			      in  let <_cor4> =
				      call 'erlang':'nodes'
					  ()
				  in  call 'lists':'member'
					  (_cor5, _cor4)
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		in  %% Line 372
		    case _cor7 of
		      %% Line 373
		      <'true'> when 'true' ->
			  let <_cor8> =
			      %% Line 375
			      call 'erlang':'monitor'
				  ('process', _cor0)
			  in  %% Line 375
			      {_cor0,_cor8}
		      %% Line 376
		      <'false'> when 'true' ->
			  let <F> =
			      %% Line 377
			      ( fun () ->
				    let <Ref> =
					%% Line 378
					call 'erlang':'monitor'
					    ('process', _cor0)
				    in  %% Line 379
					receive
					  %% Line 380
					  <{'DOWN',_cor13,'process',_cor14,_X_Info}>
					      when let <_cor15> =
						    call 'erlang':'=:='
							(_cor13, Ref)
						in  let <_cor16> =
							call 'erlang':'=:='
							    (_cor14, _cor0)
						    in  call 'erlang':'and'
							    (_cor15, _cor16) ->
					      %% Line 381
					      call 'erlang':'exit'
						  ('normal')
					after 'infinity' ->
					  'true'
				-| [{'id',{0,0,'-do_monitor/1-fun-0-'}}] )
			  in  %% Line 384
			      call 'erlang':'spawn_monitor'
				  (F)
		      ( <_cor11> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor11})
			-| ['compiler_generated'] )
		    end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('pg2')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('pg2', _cor0)
end