module 'inet_db' ['add_alt_ns'/1,
		  'add_alt_ns'/2,
		  'add_host'/2,
		  'add_hosts'/1,
		  'add_ns'/1,
		  'add_ns'/2,
		  'add_rc'/1,
		  'add_rc_bin'/1,
		  'add_rc_list'/1,
		  'add_resolv'/1,
		  'add_rr'/1,
		  'add_rr'/5,
		  'add_search'/1,
		  'add_socks_methods'/1,
		  'add_socks_noproxy'/1,
		  'clear_cache'/0,
		  'clear_hosts'/0,
		  'del_alt_ns'/0,
		  'del_alt_ns'/1,
		  'del_alt_ns'/2,
		  'del_host'/1,
		  'del_ns'/0,
		  'del_ns'/1,
		  'del_ns'/2,
		  'del_rr'/4,
		  'del_search'/0,
		  'del_search'/1,
		  'del_socks_methods'/0,
		  'del_socks_methods'/1,
		  'del_socks_noproxy'/1,
		  'get_hosts_file'/0,
		  'get_rc'/0,
		  'get_searchlist'/0,
		  'getbyname'/2,
		  'gethostbyaddr'/1,
		  'gethostname'/0,
		  'handle_call'/3,
		  'handle_cast'/2,
		  'handle_info'/2,
		  'init'/1,
		  'ins_alt_ns'/1,
		  'ins_alt_ns'/2,
		  'ins_ns'/1,
		  'ins_ns'/2,
		  'ins_search'/1,
		  'lookup_socket'/1,
		  'module_info'/0,
		  'module_info'/1,
		  'register_socket'/2,
		  'res_check_option'/2,
		  'res_gethostbyaddr'/2,
		  'res_hostent_by_domain'/3,
		  'res_option'/1,
		  'res_option'/2,
		  'res_update_conf'/0,
		  'res_update_hosts'/0,
		  'reset'/0,
		  'sctp_module'/0,
		  'set_cache_refresh'/1,
		  'set_cache_size'/1,
		  'set_domain'/1,
		  'set_edns'/1,
		  'set_hostname'/1,
		  'set_hosts_file'/1,
		  'set_inet6'/1,
		  'set_lookup'/1,
		  'set_recurse'/1,
		  'set_resolv_conf'/1,
		  'set_retry'/1,
		  'set_sctp_module'/1,
		  'set_socks_port'/1,
		  'set_socks_server'/1,
		  'set_tcp_module'/1,
		  'set_timeout'/1,
		  'set_udp_module'/1,
		  'set_udp_payload_size'/1,
		  'set_usevc'/1,
		  'socks_option'/1,
		  'start'/0,
		  'start_link'/0,
		  'stop'/0,
		  'tcp_module'/0,
		  'terminate'/2,
		  'tolower'/1,
		  'udp_module'/0,
		  'unregister_socket'/1]
    attributes [%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','file_info'},[{'typed_record_field',{'record_field',25,{'atom',25,'size'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'type'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'device'}|[{'atom',26,'directory'}|[{'atom',26,'other'}|[{'atom',26,'regular'}|[{'atom',26,'symlink'}]]]]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'access'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'atom',27,'read'}|[{'atom',27,'write'}|[{'atom',27,'read_write'}|[{'atom',27,'none'}]]]]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'atime'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'remote_type',28,[{'atom',28,'file'}|[{'atom',28,'date_time'}|[[]]]]}|[{'type',28,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'mtime'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'remote_type',32,[{'atom',32,'file'}|[{'atom',32,'date_time'}|[[]]]]}|[{'type',32,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',34,{'atom',34,'ctime'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'remote_type',34,[{'atom',34,'file'}|[{'atom',34,'date_time'}|[[]]]]}|[{'type',34,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',40,{'atom',40,'mode'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'links'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',46,{'atom',46,'major_device'}},{'type',46,'union',[{'atom',46,'undefined'}|[{'type',46,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'minor_device'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'inode'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',54,{'atom',54,'uid'}},{'type',54,'union',[{'atom',54,'undefined'}|[{'type',54,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',55,{'atom',55,'gid'}},{'type',55,'union',[{'atom',55,'undefined'}|[{'type',55,'non_neg_integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','file_descriptor'},[{'typed_record_field',{'record_field',59,{'atom',59,'module'}},{'type',59,'union',[{'atom',59,'undefined'}|[{'type',59,'module',[]}]]}}|[{'typed_record_field',{'record_field',60,{'atom',60,'data'}},{'type',60,'union',[{'atom',60,'undefined'}|[{'type',60,'term',[]}]]}}]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{{'record','state'},[{'record_field',83,{'atom',83,'db'}}|[{'record_field',84,{'atom',84,'cache'}}|[{'record_field',85,{'atom',85,'hosts_byname'}}|[{'record_field',86,{'atom',86,'hosts_byaddr'}}|[{'record_field',87,{'atom',87,'hosts_file_byname'}}|[{'record_field',88,{'atom',88,'hosts_file_byaddr'}}|[{'record_field',89,{'atom',89,'cache_timer'}}]]]]]]],[]}],
		%% Line 91
		'type' =
		    %% Line 91
		    [{'state',{'type',91,'record',[{'atom',91,'state'}]},[]}],
		%% Line 22
		'type' =
		    %% Line 22
		    [{{'record','hostent'},[{'typed_record_field',{'record_field',24,{'atom',24,'h_name'}},{'type',24,'union',[{'atom',24,'undefined'}|[{'remote_type',24,[{'atom',24,'inet'}|[{'atom',24,'hostname'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',25,{'atom',25,'h_aliases'},{'nil',25}},{'type',25,'list',[{'remote_type',25,[{'atom',25,'inet'}|[{'atom',25,'hostname'}|[[]]]]}]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'h_addrtype'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'inet'}|[{'atom',26,'inet6'}]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'h_length'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'type',27,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'h_addr_list'},{'nil',28}},{'type',28,'list',[{'remote_type',28,[{'atom',28,'inet'}|[{'atom',28,'ip_address'}|[[]]]]}]}}]]]]],[]}],
		%% Line 374
		'type' =
		    %% Line 374
		    [{{'record','connect_opts'},[{'record_field',376,{'atom',376,'ifaddr'},{'atom',376,'any'}}|[{'record_field',377,{'atom',377,'port'},{'integer',377,0}}|[{'record_field',378,{'atom',378,'fd'},{'op',378,'-',{'integer',378,1}}}|[{'record_field',379,{'atom',379,'opts'},{'nil',379}}]]]],[]}],
		%% Line 382
		'type' =
		    %% Line 382
		    [{{'record','listen_opts'},[{'record_field',384,{'atom',384,'ifaddr'},{'atom',384,'any'}}|[{'record_field',385,{'atom',385,'port'},{'integer',385,0}}|[{'record_field',386,{'atom',386,'backlog'},{'integer',386,5}}|[{'record_field',387,{'atom',387,'fd'},{'op',387,'-',{'integer',387,1}}}|[{'record_field',388,{'atom',388,'opts'},{'nil',388}}]]]]],[]}],
		%% Line 392
		'type' =
		    %% Line 392
		    [{{'record','udp_opts'},[{'record_field',394,{'atom',394,'ifaddr'},{'atom',394,'any'}}|[{'record_field',395,{'atom',395,'port'},{'integer',395,0}}|[{'record_field',396,{'atom',396,'fd'},{'op',396,'-',{'integer',396,1}}}|[{'record_field',397,{'atom',397,'opts'},{'cons',397,{'tuple',397,[{'atom',397,'active'}|[{'atom',397,'true'}]]},{'nil',397}}}]]]],[]}],
		%% Line 402
		'type' =
		    %% Line 402
		    [{{'record','sctp_opts'},[{'record_field',404,{'atom',404,'ifaddr'}}|[{'record_field',405,{'atom',405,'port'},{'integer',405,0}}|[{'record_field',406,{'atom',406,'fd'},{'op',406,'-',{'integer',406,1}}}|[{'record_field',407,{'atom',407,'type'},{'atom',407,'seqpacket'}}|[{'record_field',408,{'atom',408,'opts'},{'cons',408,{'tuple',408,[{'atom',408,'mode'}|[{'atom',408,'binary'}]]},{'cons',409,{'tuple',409,[{'atom',409,'buffer'}|[{'integer',409,65536}]]},{'cons',410,{'tuple',410,[{'atom',410,'sndbuf'}|[{'integer',410,65536}]]},{'cons',411,{'tuple',411,[{'atom',411,'recbuf'}|[{'integer',411,1024}]]},{'cons',412,{'tuple',412,[{'atom',412,'sctp_events'}|[{'atom',412,'undefined'}]]},{'nil',414}}}}}}}]]]]],[]}],
		%% Line 150
		'type' =
		    %% Line 150
		    [{{'record','dns_header'},[{'record_field',152,{'atom',152,'id'},{'integer',152,0}}|[{'record_field',154,{'atom',154,'qr'},{'integer',154,0}}|[{'record_field',155,{'atom',155,'opcode'},{'integer',155,0}}|[{'record_field',156,{'atom',156,'aa'},{'integer',156,0}}|[{'record_field',157,{'atom',157,'tc'},{'integer',157,0}}|[{'record_field',158,{'atom',158,'rd'},{'integer',158,0}}|[{'record_field',160,{'atom',160,'ra'},{'integer',160,0}}|[{'record_field',161,{'atom',161,'pr'},{'integer',161,0}}|[{'record_field',163,{'atom',163,'rcode'},{'integer',163,0}}]]]]]]]]],[]}],
		%% Line 166
		'type' =
		    %% Line 166
		    [{{'record','dns_rec'},[{'record_field',168,{'atom',168,'header'}}|[{'record_field',169,{'atom',169,'qdlist'},{'nil',169}}|[{'record_field',170,{'atom',170,'anlist'},{'nil',170}}|[{'record_field',171,{'atom',171,'nslist'},{'nil',171}}|[{'record_field',172,{'atom',172,'arlist'},{'nil',172}}]]]]],[]}],
		%% Line 176
		'type' =
		    %% Line 176
		    [{{'record','dns_rr'},[{'record_field',178,{'atom',178,'domain'},{'string',178,[]}}|[{'record_field',179,{'atom',179,'type'},{'atom',179,'any'}}|[{'record_field',180,{'atom',180,'class'},{'atom',180,'in'}}|[{'record_field',181,{'atom',181,'cnt'},{'integer',181,0}}|[{'record_field',182,{'atom',182,'ttl'},{'integer',182,0}}|[{'record_field',183,{'atom',183,'data'},{'nil',183}}|[{'record_field',185,{'atom',185,'tm'}}|[{'record_field',186,{'atom',186,'bm'},{'nil',186}}|[{'record_field',187,{'atom',187,'func'},{'atom',187,'false'}}]]]]]]]]],[]}],
		%% Line 192
		'type' =
		    %% Line 192
		    [{{'record','dns_rr_opt'},[{'record_field',194,{'atom',194,'domain'},{'string',194,[]}}|[{'record_field',195,{'atom',195,'type'},{'atom',195,'opt'}}|[{'record_field',196,{'atom',196,'udp_payload_size'},{'integer',196,1280}}|[{'record_field',197,{'atom',197,'ext_rcode'},{'integer',197,0}}|[{'record_field',198,{'atom',198,'version'},{'integer',198,0}}|[{'record_field',199,{'atom',199,'z'},{'integer',199,0}}|[{'record_field',200,{'atom',200,'data'},{'nil',200}}]]]]]]],[]}],
		%% Line 203
		'type' =
		    %% Line 203
		    [{{'record','dns_query'},[{'record_field',205,{'atom',205,'domain'}}|[{'record_field',206,{'atom',206,'type'}}|[{'record_field',207,{'atom',207,'class'}}]]],[]}],
		%% Line 842
		'spec' =
		    %% Line 842
		    [{{'init',1},[{'type',842,'fun',[{'type',842,'product',[{'type',842,'nil',[]}]}|[{'type',842,'tuple',[{'atom',842,'ok'}|[{'type',842,'state',[]}]]}]]}]}],
		%% Line 899
		'spec' =
		    %% Line 899
		    [{{'handle_call',3},[{'type',899,'fun',[{'type',899,'product',[{'type',899,'term',[]}|[{'type',899,'tuple',[{'type',899,'pid',[]}|[{'type',899,'term',[]}]]}|[{'type',899,'state',[]}]]]}|[{'type',900,'union',[{'type',900,'tuple',[{'atom',900,'reply'}|[{'type',900,'term',[]}|[{'type',900,'state',[]}]]]}|[{'type',900,'tuple',[{'atom',900,'stop'}|[{'atom',900,'normal'}|[{'atom',900,'ok'}|[{'type',900,'state',[]}]]]]}]]}]]}]}],
		%% Line 1154
		'spec' =
		    %% Line 1154
		    [{{'handle_cast',2},[{'type',1154,'fun',[{'type',1154,'product',[{'type',1154,'term',[]}|[{'type',1154,'state',[]}]]}|[{'type',1154,'tuple',[{'atom',1154,'noreply'}|[{'type',1154,'state',[]}]]}]]}]}],
		%% Line 1166
		'spec' =
		    %% Line 1166
		    [{{'handle_info',2},[{'type',1166,'fun',[{'type',1166,'product',[{'type',1166,'term',[]}|[{'type',1166,'state',[]}]]}|[{'type',1166,'tuple',[{'atom',1166,'noreply'}|[{'type',1166,'state',[]}]]}]]}]}],
		%% Line 1181
		'spec' =
		    %% Line 1181
		    [{{'terminate',2},[{'type',1181,'fun',[{'type',1181,'product',[{'type',1181,'term',[]}|[{'type',1181,'state',[]}]]}|[{'atom',1181,'ok'}]]}]}]]
'start'/0 =
    %% Line 103
    fun () ->
	%% Line 104
	case call 'gen_server':'start'
		 ({'local','inet_db'}, 'inet_db', [], []) of
	  %% Line 105
	  <Ok = {'ok',_X_Pid}> when 'true' ->
	      do  call 'inet_config':'init'
		      ()
		  Ok
	  %% Line 106
	  <Error> when 'true' ->
	      Error
	end
'start_link'/0 =
    %% Line 110
    fun () ->
	%% Line 111
	case call 'gen_server':'start_link'
		 ({'local','inet_db'}, 'inet_db', [], []) of
	  %% Line 112
	  <Ok = {'ok',_X_Pid}> when 'true' ->
	      do  call 'inet_config':'init'
		      ()
		  Ok
	  %% Line 113
	  <Error> when 'true' ->
	      Error
	end
'call'/1 =
    %% Line 116
    fun (_cor0) ->
	%% Line 117
	call 'gen_server':'call'
	    ('inet_db', _cor0, 'infinity')
'stop'/0 =
    %% Line 119
    fun () ->
	%% Line 120
	apply 'call'/1
	    ('stop')
'reset'/0 =
    %% Line 122
    fun () ->
	%% Line 123
	apply 'call'/1
	    ('reset')
'add_resolv'/1 =
    %% Line 127
    fun (_cor0) ->
	%% Line 128
	case call 'inet_parse':'resolv'
		 (_cor0) of
	  %% Line 129
	  <{'ok',Res}> when 'true' ->
	      apply 'add_rc_list'/1
		  (Res)
	  %% Line 130
	  <Error> when 'true' ->
	      Error
	end
'add_hosts'/1 =
    %% Line 134
    fun (_cor0) ->
	%% Line 135
	case call 'inet_parse':'hosts'
		 (_cor0) of
	  %% Line 136
	  <{'ok',Res}> when 'true' ->
	      let <_cor3> =
		  %% Line 138
		  ( fun (_cor1) ->
			case _cor1 of
			  <{IP,Name,Aliases}> when 'true' ->
			      apply 'add_host'/2
				  (IP, [Name|Aliases])
			  ( <_cor2> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor2})
				  -| [{'function_name',{'-add_hosts/1-fun-0-',1}}] )
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-add_hosts/1-fun-0-'}}] )
	      in  %% Line 137
		  call 'lists':'foreach'
		      (_cor3, %% Line 139
			      Res)
	  %% Line 140
	  <Error> when 'true' ->
	      Error
	end
'add_host'/2 =
    %% Line 143
    fun (_cor1,_cor0) ->
	apply 'call'/1
	    ({'add_host',_cor1,_cor0})
'del_host'/1 =
    %% Line 145
    fun (_cor0) ->
	apply 'call'/1
	    ({'del_host',_cor0})
'clear_hosts'/0 =
    %% Line 147
    fun () ->
	apply 'call'/1
	    ('clear_hosts')
'add_ns'/1 =
    %% Line 150
    fun (_cor0) ->
	%% Line 151
	apply 'add_ns'/2
	    (_cor0, 53)
'add_ns'/2 =
    %% Line 152
    fun (_cor1,_cor0) ->
	%% Line 153
	apply 'call'/1
	    ({'listop','nameservers','add',{_cor1,_cor0}})
'ins_ns'/1 =
    %% Line 156
    fun (_cor0) ->
	%% Line 157
	apply 'ins_ns'/2
	    (_cor0, 53)
'ins_ns'/2 =
    %% Line 158
    fun (_cor1,_cor0) ->
	%% Line 159
	apply 'call'/1
	    ({'listop','nameservers','ins',{_cor1,_cor0}})
'del_ns'/1 =
    %% Line 162
    fun (_cor0) ->
	%% Line 163
	apply 'del_ns'/2
	    (_cor0, 53)
'del_ns'/2 =
    %% Line 164
    fun (_cor1,_cor0) ->
	%% Line 165
	apply 'call'/1
	    ({'listop','nameservers','del',{_cor1,_cor0}})
'del_ns'/0 =
    %% Line 167
    fun () ->
	%% Line 168
	apply 'call'/1
	    ({'listdel','nameservers'})
'add_alt_ns'/1 =
    %% Line 172
    fun (_cor0) ->
	%% Line 173
	apply 'add_alt_ns'/2
	    (_cor0, 53)
'add_alt_ns'/2 =
    %% Line 174
    fun (_cor1,_cor0) ->
	%% Line 175
	apply 'call'/1
	    ({'listop','alt_nameservers','add',{_cor1,_cor0}})
'ins_alt_ns'/1 =
    %% Line 178
    fun (_cor0) ->
	%% Line 179
	apply 'ins_alt_ns'/2
	    (_cor0, 53)
'ins_alt_ns'/2 =
    %% Line 180
    fun (_cor1,_cor0) ->
	%% Line 181
	apply 'call'/1
	    ({'listop','alt_nameservers','ins',{_cor1,_cor0}})
'del_alt_ns'/1 =
    %% Line 184
    fun (_cor0) ->
	%% Line 185
	apply 'del_alt_ns'/2
	    (_cor0, 53)
'del_alt_ns'/2 =
    %% Line 186
    fun (_cor1,_cor0) ->
	%% Line 187
	apply 'call'/1
	    ({'listop','alt_nameservers','del',{_cor1,_cor0}})
'del_alt_ns'/0 =
    %% Line 189
    fun () ->
	%% Line 190
	apply 'call'/1
	    ({'listdel','alt_nameservers'})
'add_search'/1 =
    %% Line 193
    fun (_cor0) ->
	case _cor0 of
	  <Domain>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 194
	      apply 'call'/1
		  ({'listop','search','add',Domain})
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'add_search',1}}] )
	    -| ['compiler_generated'] )
	end
'ins_search'/1 =
    %% Line 196
    fun (_cor0) ->
	case _cor0 of
	  <Domain>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 197
	      apply 'call'/1
		  ({'listop','search','ins',Domain})
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'ins_search',1}}] )
	    -| ['compiler_generated'] )
	end
'del_search'/1 =
    %% Line 199
    fun (_cor0) ->
	%% Line 200
	apply 'call'/1
	    ({'listop','search','del',_cor0})
'del_search'/0 =
    %% Line 202
    fun () ->
	%% Line 203
	apply 'call'/1
	    ({'listdel','search'})
'set_hostname'/1 =
    %% Line 207
    fun (_cor0) ->
	%% Line 208
	apply 'call'/1
	    ({'set_hostname',_cor0})
'set_domain'/1 =
    %% Line 211
    fun (_cor0) ->
	apply 'res_option'/2
	    ('domain', _cor0)
'set_lookup'/1 =
    %% Line 214
    fun (_cor0) ->
	apply 'res_option'/2
	    ('lookup', _cor0)
'set_recurse'/1 =
    %% Line 217
    fun (_cor0) ->
	apply 'res_option'/2
	    ('recurse', _cor0)
'set_timeout'/1 =
    %% Line 219
    fun (_cor0) ->
	apply 'res_option'/2
	    ('timeout', _cor0)
'set_retry'/1 =
    %% Line 221
    fun (_cor0) ->
	apply 'res_option'/2
	    ('retry', _cor0)
'set_inet6'/1 =
    %% Line 223
    fun (_cor0) ->
	apply 'res_option'/2
	    ('inet6', _cor0)
'set_usevc'/1 =
    %% Line 225
    fun (_cor0) ->
	apply 'res_option'/2
	    ('usevc', _cor0)
'set_edns'/1 =
    %% Line 227
    fun (_cor0) ->
	apply 'res_option'/2
	    ('edns', _cor0)
'set_udp_payload_size'/1 =
    %% Line 229
    fun (_cor0) ->
	apply 'res_option'/2
	    ('udp_payload_size', _cor0)
'set_resolv_conf'/1 =
    %% Line 231
    fun (_cor0) ->
	apply 'res_option'/2
	    ('resolv_conf', _cor0)
'set_hosts_file'/1 =
    %% Line 233
    fun (_cor0) ->
	apply 'res_option'/2
	    ('hosts_file', _cor0)
'get_hosts_file'/0 =
    %% Line 235
    fun () ->
	%% Line 236
	apply 'get_rc_hosts'/3
	    ([], [], 'inet_hosts_file_byname')
'set_socks_server'/1 =
    %% Line 239
    fun (_cor0) ->
	apply 'call'/1
	    ({'set_socks_server',_cor0})
'set_socks_port'/1 =
    %% Line 241
    fun (_cor0) ->
	apply 'call'/1
	    ({'set_socks_port',_cor0})
'add_socks_methods'/1 =
    %% Line 243
    fun (_cor0) ->
	apply 'call'/1
	    ({'add_socks_methods',_cor0})
'del_socks_methods'/1 =
    %% Line 245
    fun (_cor0) ->
	apply 'call'/1
	    ({'del_socks_methods',_cor0})
'del_socks_methods'/0 =
    %% Line 247
    fun () ->
	apply 'call'/1
	    ('del_socks_methods')
'add_socks_noproxy'/1 =
    %% Line 249
    fun (_cor0) ->
	case _cor0 of
	  <{Net,Mask}> when 'true' ->
	      apply 'call'/1
		  ({'add_socks_noproxy',{Net,Mask}})
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'add_socks_noproxy',1}}] )
	    -| ['compiler_generated'] )
	end
'del_socks_noproxy'/1 =
    %% Line 251
    fun (_cor0) ->
	apply 'call'/1
	    ({'del_socks_noproxy',_cor0})
'set_cache_size'/1 =
    %% Line 254
    fun (_cor0) ->
	apply 'call'/1
	    ({'set_cache_size',_cor0})
'set_cache_refresh'/1 =
    %% Line 256
    fun (_cor0) ->
	apply 'call'/1
	    ({'set_cache_refresh',_cor0})
'clear_cache'/0 =
    %% Line 258
    fun () ->
	apply 'call'/1
	    ('clear_cache')
'set_tcp_module'/1 =
    %% Line 261
    fun (_cor0) ->
	apply 'call'/1
	    ({'set_tcp_module',_cor0})
'tcp_module'/0 =
    %% Line 263
    fun () ->
	apply 'db_get'/1
	    ('tcp_module')
'set_udp_module'/1 =
    %% Line 265
    fun (_cor0) ->
	apply 'call'/1
	    ({'set_udp_module',_cor0})
'udp_module'/0 =
    %% Line 267
    fun () ->
	apply 'db_get'/1
	    ('udp_module')
'set_sctp_module'/1 =
    %% Line 269
    fun (_cor0) ->
	apply 'call'/1
	    ({'set_sctp_module',_cor0})
'sctp_module'/0 =
    %% Line 271
    fun () ->
	apply 'db_get'/1
	    ('sctp_module')
'add_rc'/1 =
    %% Line 274
    fun (_cor0) ->
	%% Line 275
	case call 'file':'consult'
		 (_cor0) of
	  %% Line 276
	  <{'ok',List}> when 'true' ->
	      apply 'add_rc_list'/1
		  (List)
	  %% Line 277
	  <Error> when 'true' ->
	      Error
	end
'add_rc_bin'/1 =
    %% Line 281
    fun (_cor0) ->
	let <_cor1> =
	    catch
		%% Line 282
		call 'erlang':'binary_to_term'
		    (_cor0)
	in  %% Line 282
	    case _cor1 of
	      %% Line 283
	      <List>
		  when call 'erlang':'is_list'
			(_cor1) ->
		  %% Line 284
		  apply 'add_rc_list'/1
		      (List)
	      %% Line 285
	      <_cor4> when 'true' ->
		  %% Line 286
		  {'error','badarg'}
	    end
'add_rc_list'/1 =
    %% Line 289
    fun (_cor0) ->
	apply 'call'/1
	    ({'add_rc_list',_cor0})
'translate_lookup'/1 =
    %% Line 294
    fun (_cor0) ->
	case _cor0 of
	  <[[98|[105|[110|[100]]]]|Ls]> when 'true' ->
	      let <_cor1> =
		  apply 'translate_lookup'/1
		      (Ls)
	      in  ['dns'|_cor1]
	  %% Line 295
	  <[[100|[110|[115]]]|Ls]> when 'true' ->
	      let <_cor2> =
		  apply 'translate_lookup'/1
		      (Ls)
	      in  ['dns'|_cor2]
	  %% Line 296
	  <[[104|[111|[115|[116|[115]]]]]|Ls]> when 'true' ->
	      let <_cor3> =
		  apply 'translate_lookup'/1
		      (Ls)
	      in  ['file'|_cor3]
	  %% Line 297
	  <[[102|[105|[108|[101|[115]]]]]|Ls]> when 'true' ->
	      let <_cor4> =
		  apply 'translate_lookup'/1
		      (Ls)
	      in  ['file'|_cor4]
	  %% Line 298
	  <[[102|[105|[108|[101]]]]|Ls]> when 'true' ->
	      let <_cor5> =
		  apply 'translate_lookup'/1
		      (Ls)
	      in  ['file'|_cor5]
	  %% Line 299
	  <[[121|[112]]|Ls]> when 'true' ->
	      let <_cor6> =
		  apply 'translate_lookup'/1
		      (Ls)
	      in  ['yp'|_cor6]
	  %% Line 300
	  <[[110|[105|[115]]]|Ls]> when 'true' ->
	      let <_cor7> =
		  apply 'translate_lookup'/1
		      (Ls)
	      in  ['nis'|_cor7]
	  %% Line 301
	  <[[110|[105|[115|[112|[108|[117|[115]]]]]]]|Ls]> when 'true' ->
	      let <_cor8> =
		  apply 'translate_lookup'/1
		      (Ls)
	      in  ['nisplus'|_cor8]
	  %% Line 302
	  <[[110|[97|[116|[105|[118|[101]]]]]]|Ls]> when 'true' ->
	      let <_cor9> =
		  apply 'translate_lookup'/1
		      (Ls)
	      in  ['native'|_cor9]
	  %% Line 303
	  <[M|Ls]>
	      when call 'erlang':'is_atom'
		    (M) ->
	      let <_cor10> =
		  call 'erlang':'atom_to_list'
		      (M)
	      in  apply 'translate_lookup'/1
		      ([_cor10|Ls])
	  %% Line 304
	  <[_cor12|Ls]> when 'true' ->
	      apply 'translate_lookup'/1
		  (Ls)
	  %% Line 305
	  <[]> when 'true' ->
	      []
	  ( <_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11})
		  -| [{'function_name',{'translate_lookup',1}}] )
	    -| ['compiler_generated'] )
	end
'valid_lookup'/0 =
    %% Line 307
    fun () ->
	['dns'|['file'|['yp'|['nis'|['nisplus'|['native']]]]]]
'get_rc'/0 =
    %% Line 311
    fun () ->
	%% Line 312
	apply 'get_rc'/2
	    (['hosts'|['domain'|['nameservers'|['search'|['alt_nameservers'|['timeout'|['retry'|['inet6'|['usevc'|['edns'|['udp_payload_size'|['resolv_conf'|['hosts_file'|['socks5_server'|['socks5_port'|['socks5_methods'|['socks5_noproxy'|['udp'|['sctp'|['tcp'|['host'|['cache_size'|['cache_refresh'|['lookup']]]]]]]]]]]]]]]]]]]]]]]], %% Line 316
																																									       [])
'get_rc'/2 =
    %% Line 318
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[K|Ks],Ls> when 'true' ->
	      %% Line 319
	      case K of
		%% Line 320
		<'hosts'> when 'true' ->
		    apply 'get_rc_hosts'/3
			(Ks, Ls, 'inet_hosts_byname')
		%% Line 321
		<'domain'> when 'true' ->
		    apply 'get_rc'/5
			('domain', 'res_domain', [], Ks, Ls)
		%% Line 322
		<'nameservers'> when 'true' ->
		    let <_cor2> =
			apply 'db_get'/1
			    ('res_ns')
		    in  apply 'get_rc_ns'/4
			    (_cor2, 'nameservers', Ks, Ls)
		%% Line 323
		<'alt_nameservers'> when 'true' ->
		    let <_cor3> =
			apply 'db_get'/1
			    ('res_alt_ns')
		    in  apply 'get_rc_ns'/4
			    (_cor3, 'alt_nameservers', Ks, Ls)
		%% Line 324
		<'search'> when 'true' ->
		    apply 'get_rc'/5
			('search', 'res_search', [], Ks, Ls)
		%% Line 325
		<'timeout'> when 'true' ->
		    apply 'get_rc'/5
			('timeout', 'res_timeout', 2000, Ks, Ls)
		%% Line 326
		<'retry'> when 'true' ->
		    apply 'get_rc'/5
			('retry', 'res_retry', 3, Ks, Ls)
		%% Line 327
		<'inet6'> when 'true' ->
		    apply 'get_rc'/5
			('inet6', 'res_inet6', 'false', Ks, Ls)
		%% Line 328
		<'usevc'> when 'true' ->
		    apply 'get_rc'/5
			('usevc', 'res_usevc', 'false', Ks, Ls)
		%% Line 329
		<'edns'> when 'true' ->
		    apply 'get_rc'/5
			('edns', 'res_edns', 'false', Ks, Ls)
		%% Line 330
		<'udp_payload_size'> when 'true' ->
		    apply 'get_rc'/5
			('udp_payload_size', 'res_udp_payload_size', %% Line 331
								     1280, %% Line 331
									   Ks, %% Line 331
									       Ls)
		%% Line 332
		<'resolv_conf'> when 'true' ->
		    apply 'get_rc'/5
			('resolv_conf', 'res_resolv_conf', 'undefined', Ks, Ls)
		%% Line 333
		<'hosts_file'> when 'true' ->
		    apply 'get_rc'/5
			('hosts_file', 'res_hosts_file', 'undefined', Ks, Ls)
		%% Line 334
		<'tcp'> when 'true' ->
		    apply 'get_rc'/5
			('tcp', 'tcp_module', 'inet_tcp', Ks, Ls)
		%% Line 335
		<'udp'> when 'true' ->
		    apply 'get_rc'/5
			('udp', 'udp_module', 'inet_udp', Ks, Ls)
		%% Line 336
		<'sctp'> when 'true' ->
		    apply 'get_rc'/5
			('sctp', 'sctp_module', 'inet_sctp', Ks, Ls)
		%% Line 337
		<'lookup'> when 'true' ->
		    apply 'get_rc'/5
			('lookup', 'res_lookup', ['native'|['file']], Ks, Ls)
		%% Line 338
		<'cache_size'> when 'true' ->
		    apply 'get_rc'/5
			('cache_size', 'cache_size', 100, Ks, Ls)
		%% Line 339
		<'cache_refresh'> when 'true' ->
		    %% Line 340
		    apply 'get_rc'/5
			('cache_refresh', 'cache_refresh_interval', 3600000, Ks, Ls)
		%% Line 341
		<'socks5_server'> when 'true' ->
		    apply 'get_rc'/5
			('socks5_server', 'socks5_server', [], Ks, Ls)
		%% Line 342
		<'socks5_port'> when 'true' ->
		    apply 'get_rc'/5
			('socks5_port', 'socks5_port', 1080, Ks, Ls)
		%% Line 343
		<'socks5_methods'> when 'true' ->
		    apply 'get_rc'/5
			('socks5_methods', 'socks5_methods', ['none'], Ks, Ls)
		%% Line 344
		<'socks5_noproxy'> when 'true' ->
		    %% Line 345
		    case apply 'db_get'/1
			     ('socks5_noproxy') of
		      %% Line 346
		      <[]> when 'true' ->
			  apply 'get_rc'/2
			      (Ks, Ls)
		      %% Line 347
		      <NoProxy> when 'true' ->
			  apply 'get_rc_noproxy'/3
			      (NoProxy, Ks, Ls)
		    end
		%% Line 349
		<_cor10> when 'true' ->
		    %% Line 350
		    apply 'get_rc'/2
			(Ks, Ls)
	      end
	  %% Line 352
	  <[],Ls> when 'true' ->
	      %% Line 353
	      call 'lists':'reverse'
		  (Ls)
	  ( <_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8})
		  -| [{'function_name',{'get_rc',2}}] )
	    -| ['compiler_generated'] )
	end
'get_rc'/5 =
    %% Line 355
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 356
	case apply 'db_get'/1
		 (_cor3) of
	  %% Line 357
	  <_cor11>
	      when call 'erlang':'=:='
		    (_cor11,
		     _cor2) ->
	      apply 'get_rc'/2
		  (_cor1, _cor0)
	  %% Line 358
	  <Value> when 'true' ->
	      apply 'get_rc'/2
		  (_cor1, [{_cor4,Value}|_cor0])
	end
'get_rc_noproxy'/3 =
    %% Line 361
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{Net,Mask}|Ms],Ks,Ls> when 'true' ->
	      %% Line 362
	      apply 'get_rc_noproxy'/3
		  (Ms, Ks, [{'socks5_noproxy',Net,Mask}|Ls])
	  %% Line 363
	  <[],Ks,Ls> when 'true' ->
	      apply 'get_rc'/2
		  (Ks, Ls)
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'get_rc_noproxy',3}}] )
	    -| ['compiler_generated'] )
	end
'get_rc_ns'/4 =
    %% Line 365
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{IP,53}|Ns],Tag,Ks,Ls> when 'true' ->
	      %% Line 366
	      apply 'get_rc_ns'/4
		  (Ns, Tag, Ks, [{Tag,IP}|Ls])
	  %% Line 367
	  <[{IP,Port}|Ns],Tag,Ks,Ls> when 'true' ->
	      %% Line 368
	      apply 'get_rc_ns'/4
		  (Ns, Tag, Ks, [{Tag,IP,Port}|Ls])
	  %% Line 369
	  <[],_X_Tag,Ks,Ls> when 'true' ->
	      %% Line 370
	      apply 'get_rc'/2
		  (Ks, Ls)
	  ( <_cor7,_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5,_cor4})
		  -| [{'function_name',{'get_rc_ns',4}}] )
	    -| ['compiler_generated'] )
	end
'get_rc_hosts'/3 =
    %% Line 372
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 373
	    call 'ets':'tab2list'
		(_cor0)
	in  %% Line 373
	    case call 'lists':'keysort'
		     (3, _cor3) of
	      %% Line 374
	      <[]> when 'true' ->
		  apply 'get_rc'/2
		      (_cor2, _cor1)
	      %% Line 375
	      <[{N,_cor8,IP}|Hosts]> when 'true' ->
		  apply 'get_rc_hosts'/5
		      (_cor2, _cor1, IP, Hosts, [N|[]])
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor4})
		-| ['compiler_generated'] )
	    end
'get_rc_hosts'/5 =
    %% Line 378
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Ks,Ls,IP,[],Ns> when 'true' ->
	      let <_cor5> =
		  %% Line 379
		  call 'lists':'reverse'
		      (Ns)
	      in  %% Line 379
		  apply 'get_rc'/2
		      (Ks, [{'host',IP,_cor5}|Ls])
	  %% Line 380
	  <Ks,Ls,IP,[{N,_cor13,_cor14}|Hosts],Ns>
	      when call 'erlang':'=:='
		    (_cor14,
		     IP) ->
	      %% Line 381
	      apply 'get_rc_hosts'/5
		  (Ks, Ls, IP, Hosts, [N|Ns])
	  %% Line 382
	  <Ks,Ls,IP,[{N,_cor15,NewIP}|Hosts],Ns> when 'true' ->
	      let <_cor6> =
		  %% Line 383
		  call 'lists':'reverse'
		      (Ns)
	      in  let <_cor7> =
		      %% Line 383
		      apply 'get_rc_hosts'/5
			  (Ks, Ls, NewIP, Hosts, [N|[]])
		  in  %% Line 383
		      [{'host',IP,_cor6}|_cor7]
	  ( <_cor12,_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'get_rc_hosts',5}}] )
	    -| ['compiler_generated'] )
	end
'res_option'/1 =
    %% Line 388
    fun (_cor0) ->
	case _cor0 of
	  <'next_id'> when 'true' ->
	      let <Cnt> =
		  %% Line 389
		  call 'ets':'update_counter'
		      ('inet_db', 'res_id', 1)
	      in  %% Line 390
		  case call 'erlang':'band'
			   (Cnt, 65535) of
		    %% Line 391
		    <0> when 'true' ->
			let <_cor2> =
			    %% Line 392
			    call 'erlang':'-'
				(Cnt)
			in  do  %% Line 392
				call 'ets':'update_counter'
				    ('inet_db', 'res_id', _cor2)
				%% Line 393
				0
		    %% Line 394
		    <Id> when 'true' ->
			%% Line 395
			Id
		  end
	  %% Line 397
	  <Option> when 'true' ->
	      %% Line 398
	      case apply 'res_optname'/1
		       (Option) of
		%% Line 399
		<'undefined'> when 'true' ->
		    %% Line 400
		    call 'erlang':'error'
			('badarg', [Option|[]])
		%% Line 401
		<ResOptname> when 'true' ->
		    %% Line 402
		    apply 'db_get'/1
			(ResOptname)
	      end
	end
'res_option'/2 =
    %% Line 405
    fun (_cor1,_cor0) ->
	%% Line 406
	case apply 'res_optname'/1
		 (_cor1) of
	  %% Line 407
	  <'undefined'> when 'true' ->
	      %% Line 408
	      call 'erlang':'error'
		  ('badarg', [_cor1|[_cor0|[]]])
	  %% Line 409
	  <_cor5> when 'true' ->
	      %% Line 410
	      apply 'call'/1
		  ({'res_set',_cor1,_cor0})
	end
'res_optname'/1 =
    %% Line 413
    fun (_cor0) ->
	case _cor0 of
	  <'nameserver'> when 'true' ->
	      'res_ns'
	  %% Line 414
	  <'alt_nameserver'> when 'true' ->
	      'res_alt_ns'
	  %% Line 415
	  <'nameservers'> when 'true' ->
	      'res_ns'
	  %% Line 416
	  <'alt_nameservers'> when 'true' ->
	      'res_alt_ns'
	  %% Line 417
	  <'domain'> when 'true' ->
	      'res_domain'
	  %% Line 418
	  <'lookup'> when 'true' ->
	      'res_lookup'
	  %% Line 419
	  <'recurse'> when 'true' ->
	      'res_recurse'
	  %% Line 420
	  <'search'> when 'true' ->
	      'res_search'
	  %% Line 421
	  <'retry'> when 'true' ->
	      'res_retry'
	  %% Line 422
	  <'timeout'> when 'true' ->
	      'res_timeout'
	  %% Line 423
	  <'inet6'> when 'true' ->
	      'res_inet6'
	  %% Line 424
	  <'usevc'> when 'true' ->
	      'res_usevc'
	  %% Line 425
	  <'edns'> when 'true' ->
	      'res_edns'
	  %% Line 426
	  <'udp_payload_size'> when 'true' ->
	      'res_udp_payload_size'
	  %% Line 427
	  <'resolv_conf'> when 'true' ->
	      'res_resolv_conf'
	  %% Line 428
	  <'resolv_conf_name'> when 'true' ->
	      'res_resolv_conf'
	  %% Line 429
	  <'hosts_file'> when 'true' ->
	      'res_hosts_file'
	  %% Line 430
	  <'hosts_file_name'> when 'true' ->
	      'res_hosts_file'
	  %% Line 431
	  <_cor2> when 'true' ->
	      'undefined'
	end
'res_check_option'/2 =
    %% Line 433
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'nameserver',NSs> when 'true' ->
	      %% Line 434
	      apply 'res_check_list'/2
		  (NSs, ( 'res_check_ns'/1
			  -| [{'id',{0,0,'-res_check_option/2-fun-0-'}}] ))
	  %% Line 435
	  <'alt_nameserver',NSs> when 'true' ->
	      %% Line 436
	      apply 'res_check_list'/2
		  (NSs, ( 'res_check_ns'/1
			  -| [{'id',{0,0,'-res_check_option/2-fun-1-'}}] ))
	  %% Line 437
	  <'nameservers',NSs> when 'true' ->
	      %% Line 438
	      apply 'res_check_list'/2
		  (NSs, ( 'res_check_ns'/1
			  -| [{'id',{0,0,'-res_check_option/2-fun-2-'}}] ))
	  %% Line 439
	  <'alt_nameservers',NSs> when 'true' ->
	      %% Line 440
	      apply 'res_check_list'/2
		  (NSs, ( 'res_check_ns'/1
			  -| [{'id',{0,0,'-res_check_option/2-fun-3-'}}] ))
	  %% Line 441
	  <'domain',Dom> when 'true' ->
	      %% Line 442
	      call 'inet_parse':'visible_string'
		  (Dom)
	  %% Line 443
	  <'lookup',Methods> when 'true' ->
	      %% Line 444
	      try
		  let <_cor2> =
		      apply 'valid_lookup'/0
			  ()
		  in  apply 'lists_subtract'/2
			  (Methods, _cor2)
	      of <_cor3> ->
		  case _cor3 of
		    %% Line 445
		    <[]> when 'true' ->
			'true'
		    %% Line 446
		    <_cor20> when 'true' ->
			'false'
		  end
	      catch <_cor7,_cor6,_cor5> ->
		  case <_cor7,_cor6,_cor5> of
		    %% Line 448
		    <'error',_cor21,_cor22> when 'true' ->
			'false'
		    ( <_cor7,_cor6,_cor5> when 'true' ->
			  primop 'raise'
			      (_cor5, _cor6)
		      -| ['compiler_generated'] )
		  end
	  %% Line 450
	  <'recurse',R>
	      when let <_cor8> =
		    call 'erlang':'=:='
			(R, 0)
		in  let <_cor9> =
			call 'erlang':'=:='
			    (R, 1)
		    in  call 'erlang':'or'
			    (_cor8, _cor9) ->
	      'true'
	  %% Line 451
	  <'recurse',R>
	      when call 'erlang':'is_boolean'
		    (R) ->
	      'true'
	  %% Line 452
	  <'search',SearchList> when 'true' ->
	      %% Line 453
	      apply 'res_check_list'/2
		  (SearchList, ( 'res_check_search'/1
				 -| [{'id',{0,0,'-res_check_option/2-fun-4-'}}] ))
	  %% Line 454
	  <'retry',N>
	      when let <_cor10> =
		    call 'erlang':'is_integer'
			(N)
		in  let <_cor11> =
			call 'erlang':'>'
			    (N, 0)
		    in  call 'erlang':'and'
			    (_cor10, _cor11) ->
	      'true'
	  %% Line 455
	  <'timeout',T>
	      when let <_cor12> =
		    call 'erlang':'is_integer'
			(T)
		in  let <_cor13> =
			call 'erlang':'>'
			    (T, 0)
		    in  call 'erlang':'and'
			    (_cor12, _cor13) ->
	      'true'
	  %% Line 456
	  <'inet6',Bool>
	      when call 'erlang':'is_boolean'
		    (Bool) ->
	      'true'
	  %% Line 457
	  <'usevc',Bool>
	      when call 'erlang':'is_boolean'
		    (Bool) ->
	      'true'
	  %% Line 458
	  <'edns',V>
	      when let <_cor14> =
		    call 'erlang':'=:='
			(V, 'false')
		in  let <_cor15> =
			call 'erlang':'=:='
			    (V, 0)
		    in  call 'erlang':'or'
			    (_cor14, _cor15) ->
	      'true'
	  %% Line 459
	  <'udp_payload_size',S>
	      when let <_cor16> =
		    call 'erlang':'is_integer'
			(S)
		in  let <_cor17> =
			call 'erlang':'>='
			    (S, 512)
		    in  call 'erlang':'and'
			    (_cor16, _cor17) ->
	      'true'
	  %% Line 460
	  <'resolv_conf',[]> when 'true' ->
	      'true'
	  %% Line 461
	  <'resolv_conf',F> when 'true' ->
	      %% Line 462
	      apply 'res_check_option_absfile'/1
		  (F)
	  %% Line 463
	  <'resolv_conf_name',[]> when 'true' ->
	      'true'
	  %% Line 464
	  <'resolv_conf_name',F> when 'true' ->
	      %% Line 465
	      apply 'res_check_option_absfile'/1
		  (F)
	  %% Line 466
	  <'hosts_file',[]> when 'true' ->
	      'true'
	  %% Line 467
	  <'hosts_file',F> when 'true' ->
	      %% Line 468
	      apply 'res_check_option_absfile'/1
		  (F)
	  %% Line 469
	  <'hosts_file_name',[]> when 'true' ->
	      'true'
	  %% Line 470
	  <'hosts_file_name',F> when 'true' ->
	      %% Line 471
	      apply 'res_check_option_absfile'/1
		  (F)
	  %% Line 472
	  <_cor23,_cor24> when 'true' ->
	      'false'
	end
'res_check_option_absfile'/1 =
    %% Line 474
    fun (_cor0) ->
	%% Line 475
	try
	    call 'filename':'pathtype'
		(_cor0)
	of <_cor1> ->
	    case _cor1 of
	      %% Line 476
	      <'absolute'> when 'true' ->
		  'true'
	      %% Line 477
	      <_cor7> when 'true' ->
		  'false'
	    end
	catch <_cor5,_cor4,_cor3> ->
	    %% Line 479
	    'false'
'res_check_list'/2 =
    %% Line 482
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],_X_Fun> when 'true' ->
	      'true'
	  %% Line 483
	  <[H|T],Fun> when 'true' ->
	      %% Line 484
	      ( case apply Fun
			 (H) of
		  ( <( 'true'
		       -| ['compiler_generated'] )> when 'true' ->
			apply 'res_check_list'/2
			    (T, Fun)
		    -| ['compiler_generated'] )
		  ( <( 'false'
		       -| ['compiler_generated'] )> when 'true' ->
			'false'
		    -| ['compiler_generated'] )
		  ( <_cor2> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {( 'badarg'
				    -| ['compiler_generated'] ),_cor2}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 485
	  <_cor6,_X_Fun> when 'true' ->
	      'false'
	end
'res_check_ns'/1 =
    %% Line 487
    fun (_cor0) ->
	case _cor0 of
	  <{{A,B,C,D,E,F,G,H},Port}>
	      when %% Line 488
		try
		    let <_cor2> =
			call 'erlang':'bor'
			    (A, B)
		    in  let <_cor3> =
			    call 'erlang':'bor'
				(_cor2, C)
			in  let <_cor4> =
				call 'erlang':'bor'
				    (_cor3, D)
			    in  let <_cor5> =
				    call 'erlang':'bor'
					(_cor4, E)
				in  let <_cor6> =
					call 'erlang':'bor'
					    (_cor5, F)
				    in  let <_cor7> =
					    call 'erlang':'bor'
						(_cor6, G)
					in  let <_cor8> =
						call 'erlang':'bor'
						    (_cor7, H)
					    in  let <_cor9> =
						    call 'erlang':'band'
							(_cor8, -65536)
						in  let <_cor10> =
							call 'erlang':'=:='
							    (_cor9, 0)
						    in  let <_cor11> =
							    call 'erlang':'band'
								(Port, 65535)
							in  let <_cor12> =
								call 'erlang':'=:='
								    (_cor11, Port)
							    in  call 'erlang':'and'
								    (_cor10, _cor12)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 488
	      'true'
	  %% Line 489
	  <{{A,B,C,D},Port}>
	      when %% Line 490
		try
		    let <_cor14> =
			call 'erlang':'bor'
			    (A, B)
		    in  let <_cor15> =
			    call 'erlang':'bor'
				(_cor14, C)
			in  let <_cor16> =
				call 'erlang':'bor'
				    (_cor15, D)
			    in  let <_cor17> =
				    call 'erlang':'band'
					(_cor16, -256)
				in  let <_cor18> =
					call 'erlang':'=:='
					    (_cor17, 0)
				    in  let <_cor19> =
					    call 'erlang':'band'
						(Port, 65535)
					in  let <_cor20> =
						call 'erlang':'=:='
						    (_cor19, Port)
					    in  call 'erlang':'and'
						    (_cor18, _cor20)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 490
	      'true'
	  %% Line 491
	  <_cor22> when 'true' ->
	      'false'
	end
'res_check_search'/1 =
    %% Line 493
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      'true'
	  %% Line 494
	  <Dom> when 'true' ->
	      call 'inet_parse':'visible_string'
		  (Dom)
	end
'socks_option'/1 =
    %% Line 496
    fun (_cor0) ->
	case _cor0 of
	  <'server'> when 'true' ->
	      apply 'db_get'/1
		  ('socks5_server')
	  %% Line 497
	  <'port'> when 'true' ->
	      apply 'db_get'/1
		  ('socks5_port')
	  %% Line 498
	  <'methods'> when 'true' ->
	      apply 'db_get'/1
		  ('socks5_methods')
	  %% Line 499
	  <'noproxy'> when 'true' ->
	      apply 'db_get'/1
		  ('socks5_noproxy')
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'socks_option',1}}] )
	    -| ['compiler_generated'] )
	end
'gethostname'/0 =
    %% Line 501
    fun () ->
	apply 'db_get'/1
	    ('hostname')
'res_update_conf'/0 =
    %% Line 503
    fun () ->
	%% Line 504
	apply 'res_update'/5
	    ('res_resolv_conf', 'res_resolv_conf_tm', 'res_resolv_conf_info', %% Line 505
									      'set_resolv_conf_tm', %% Line 505
												    ( 'set_resolv_conf'/1
												      -| [{'id',{0,0,'-res_update_conf/0-fun-0-'}}] ))
'res_update_hosts'/0 =
    %% Line 507
    fun () ->
	%% Line 508
	apply 'res_update'/5
	    ('res_hosts_file', 'res_hosts_file_tm', 'res_hosts_file_info', %% Line 509
									   'set_hosts_file_tm', %% Line 509
												( 'set_hosts_file'/1
												  -| [{'id',{0,0,'-res_update_hosts/0-fun-0-'}}] ))
'res_update'/5 =
    %% Line 511
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 512
	case apply 'db_get'/1
		 (_cor3) of
	  %% Line 513
	  <'undefined'> when 'true' ->
	      'ok'
	  %% Line 514
	  <TM> when 'true' ->
	      %% Line 515
	      case apply 'times'/0
		       () of
		%% Line 516
		<Now>
		    when try
			  let <_cor5> =
			      call 'erlang':'+'
				  (TM, 5)
			  in  call 'erlang':'>='
				  (Now, _cor5)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    %% Line 517
		    case apply 'db_get'/1
			     (_cor4) of
		      %% Line 518
		      <'undefined'> when 'true' ->
			  %% Line 519
			  apply _cor0
			      ([])
		      %% Line 520
		      <[]> when 'true' ->
			  %% Line 521
			  apply _cor0
			      ([])
		      %% Line 522
		      <File> when 'true' ->
			  %% Line 523
			  case call 'erl_prim_loader':'read_file_info'
				   (File) of
			    %% Line 524
			    <{'ok',Finfo0}> when 'true' ->
				%% Line 526
				case Finfo0 of
				  <{'file_info',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33}> when 'true' ->
				      let <_cor7> =
					  %% Line 527
					  call 'erlang':'setelement'
					      (5, Finfo0, 'undefined')
				      in  let <_cor9> =
					      call 'erlang':'setelement'
						  (4, _cor7, 'undefined')
					  in  %% Line 528
					      case apply 'db_get'/1
						       (_cor2) of
						%% Line 529
						<_cor35>
						    when call 'erlang':'=:='
							  (_cor35,
							   _cor9) ->
						    %% Line 530
						    apply 'call'/1
							({_cor1,Now})
						%% Line 531
						<_cor36> when 'true' ->
						    %% Line 532
						    apply _cor0
							(File)
					      end
				  ( <_cor34> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','file_info'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
			    %% Line 534
			    <_cor37> when 'true' ->
				do  %% Line 535
				    apply 'call'/1
					({_cor1,Now})
				    %% Line 536
				    'error'
			  end
		    end
		%% Line 539
		<_cor38> when 'true' ->
		    'ok'
	      end
	end
'db_get'/1 =
    %% Line 543
    fun (_cor0) ->
	%% Line 544
	case call 'ets':'lookup'
		 ('inet_db', _cor0) of
	  %% Line 545
	  <[]> when 'true' ->
	      'undefined'
	  %% Line 546
	  <[{_cor3,Val}|[]]> when 'true' ->
	      Val
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor1})
	    -| ['compiler_generated'] )
	end
'add_rr'/1 =
    %% Line 549
    fun (_cor0) ->
	%% Line 550
	apply 'call'/1
	    ({'add_rr',_cor0})
'add_rr'/5 =
    %% Line 552
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 553
	apply 'call'/1
	    ({'add_rr',{'dns_rr',_cor4,_cor2,_cor3,0,_cor1,_cor0,'undefined',[],'false'}})
'del_rr'/4 =
    %% Line 556
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 557
	apply 'call'/1
	    ({'del_rr',{'dns_rr',_cor3,_cor1,_cor2,%% Line 558
						   '_',%% Line 558
						       '_',_cor0,%% Line 558
								 '_',%% Line 559
								     '_',%% Line 559
									 '_'}})
'res_cache_answer'/1 =
    %% Line 561
    fun (_cor0) ->
	let <_cor5> =
	    %% Line 562
	    ( fun (_cor3) ->
		  apply 'add_rr'/1
		      (_cor3)
	      -| [{'id',{0,0,'-res_cache_answer/1-fun-0-'}}] )
	in  %% Line 562
	    ( case _cor0 of
		( <( {'dns_rec',_cor7,_cor8,_rec1,_cor9,_cor10}
		     -| ['compiler_generated'] )> when 'true' ->
		      call 'lists':'foreach'
			  (_cor5, _rec1)
		  -| ['compiler_generated'] )
		( <_cor11> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','dns_rec'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'getbyname'/2 =
    %% Line 573
    fun (_cor1,_cor0) ->
	%% Line 574
	case call 'inet_parse':'dots'
		 (_cor1) of
	  <{EmbeddedDots,TrailingDot}> when 'true' ->
	      let <_cor3> =
		  %% Line 575
		  case <> of
		    <>
			when call 'erlang':'=:='
			      (TrailingDot,
			       'true') ->
			[]
		    <> when 'true' ->
			[46]
		  end
	      in  %% Line 576
		  case <> of
		    <>
			when call 'erlang':'=:='
			      (TrailingDot,
			       'true') ->
			%% Line 577
			apply 'hostent_by_domain'/2
			    (_cor1, _cor0)
		    %% Line 578
		    <>
			when call 'erlang':'=:='
			      (EmbeddedDots,
			       0) ->
			let <_cor5> =
			    %% Line 579
			    apply 'get_searchlist'/0
				()
			in  %% Line 579
			    apply 'getbysearch'/5
				(_cor1, _cor3, _cor5, _cor0, {'error','nxdomain'})
		    %% Line 580
		    <> when 'true' ->
			%% Line 581
			case apply 'hostent_by_domain'/2
				 (_cor1, _cor0) of
			  %% Line 582
			  <Error = {'error',_cor10}> when 'true' ->
			      let <_cor6> =
				  %% Line 583
				  apply 'get_searchlist'/0
				      ()
			      in  %% Line 583
				  apply 'getbysearch'/5
				      (_cor1, _cor3, _cor6, _cor0, Error)
			  %% Line 584
			  <Other> when 'true' ->
			      Other
			end
		  end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'getbysearch'/5 =
    %% Line 588
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Name,Dot,[Dom|Ds],Type,_cor13> when 'true' ->
	      let <_cor5> =
		  %% Line 589
		  call 'erlang':'++'
		      (Dot, Dom)
	      in  let <_cor6> =
		      %% Line 589
		      call 'erlang':'++'
			  (Name, _cor5)
		  in  %% Line 589
		      case apply 'hostent_by_domain'/2
			       (_cor6, Type) of
			%% Line 590
			<Ok = {'ok',_X_HEnt}> when 'true' ->
			    Ok
			%% Line 591
			<Error> when 'true' ->
			    apply 'getbysearch'/5
				(Name, Dot, Ds, Type, Error)
		      end
	  %% Line 593
	  <_X_Name,_X_Dot,[],_X_Type,Error> when 'true' ->
	      %% Line 594
	      Error
	  ( <_cor12,_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'getbysearch',5}}] )
	    -| ['compiler_generated'] )
	end
'get_searchlist'/0 =
    %% Line 600
    fun () ->
	%% Line 601
	case apply 'res_option'/1
		 ('search') of
	  %% Line 602
	  <[]> when 'true' ->
	      let <_cor0> =
		  apply 'res_option'/1
		      ('domain')
	      in  [_cor0|[]]
	  %% Line 603
	  <L> when 'true' ->
	      L
	end
'make_hostent'/4 =
    %% Line 607
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Name,Addrs,Aliases,'a'> when 'true' ->
	      %% Line 608
	      {'hostent',%% Line 609
			 Name,%% Line 613
			      Aliases,%% Line 610
				      'inet',%% Line 611
					     4,%% Line 612
					       Addrs}
	  %% Line 615
	  <Name,Addrs,Aliases,'aaaa'> when 'true' ->
	      %% Line 616
	      {'hostent',%% Line 617
			 Name,%% Line 621
			      Aliases,%% Line 618
				      'inet6',%% Line 619
					      16,%% Line 620
						 Addrs}
	  %% Line 623
	  <Name,Datas,Aliases,Type> when 'true' ->
	      let <_cor4> =
		  %% Line 628
		  call 'erlang':'length'
		      (Datas)
	      in  %% Line 625
		  {'hostent',%% Line 626
			     Name,%% Line 630
				  Aliases,%% Line 627
					  Type,_cor4,%% Line 629
						     Datas}
	end
'hostent_by_domain'/2 =
    %% Line 633
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 635
	    apply 'stripdot'/1
		(_cor1)
	in  %% Line 635
	    apply 'hostent_by_domain'/3
		(_cor2, [], _cor0)
'hostent_by_domain'/3 =
    %% Line 637
    fun (_cor2,_cor1,_cor0) ->
	%% Line 638
	case apply 'lookup_type'/2
		 (_cor2, _cor0) of
	  %% Line 639
	  <[]> when 'true' ->
	      %% Line 640
	      case apply 'lookup_cname'/1
		       (_cor2) of
		%% Line 641
		<[]> when 'true' ->
		    %% Line 642
		    {'error','nxdomain'}
		%% Line 643
		<[CName|_cor10]> when 'true' ->
		    %% Line 644
		    case call 'lists':'member'
			     (CName, [_cor2|_cor1]) of
		      %% Line 645
		      <'true'> when 'true' ->
			  %% Line 646
			  {'error','nxdomain'}
		      %% Line 647
		      <'false'> when 'true' ->
			  %% Line 648
			  apply 'hostent_by_domain'/3
			      (CName, [_cor2|_cor1], _cor0)
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor3})
			-| ['compiler_generated'] )
		    end
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 651
	  <Addrs> when 'true' ->
	      let <_cor5> =
		  %% Line 652
		  apply 'make_hostent'/4
		      (_cor2, Addrs, _cor1, _cor0)
	      in  %% Line 652
		  {'ok',_cor5}
	end
'lookup_type'/2 =
    %% Line 656
    fun (_cor1,_cor0) ->
	%% Line 657
	( letrec
	      'lc$^0'/1 =
		  fun (_cor5) ->
		      case _cor5 of
			<[R|_cor3]> when 'true' ->
			    ( case R of
				( <( {'dns_rr',_cor11,_cor12,_cor13,_cor14,_cor15,_rec2,_cor16,_cor17,_cor18}
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_cor8> =
					  apply 'lc$^0'/1
					      (_cor3)
				      in  ( [_rec2|_cor8]
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_cor19> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','dns_rr'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor5> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor5})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor4> =
		  apply 'lookup_rr'/3
		      (_cor1, 'in', _cor0)
	      in  apply 'lc$^0'/1
		      (_cor4)
	  -| ['list_comprehension'] )
'lookup_cname'/1 =
    %% Line 660
    fun (_cor0) ->
	%% Line 661
	( letrec
	      'lc$^0'/1 =
		  fun (_cor4) ->
		      case _cor4 of
			<[R|_cor2]> when 'true' ->
			    ( case R of
				( <( {'dns_rr',_cor9,_cor10,_cor11,_cor12,_cor13,_rec3,_cor14,_cor15,_cor16}
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_cor7> =
					  apply 'lc$^0'/1
					      (_cor2)
				      in  ( [_rec3|_cor7]
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_cor17> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','dns_rr'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor4> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor4})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor3> =
		  apply 'lookup_rr'/3
		      (_cor0, 'in', 'cname')
	      in  apply 'lc$^0'/1
		      (_cor3)
	  -| ['list_comprehension'] )
'lookup_rr'/3 =
    %% Line 665
    fun (_cor2,_cor1,_cor0) ->
	%% Line 666
	apply 'call'/1
	    ({'lookup_rr',_cor2,_cor1,_cor0})
'res_hostent_by_domain'/3 =
    %% Line 672
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 673
	    apply 'res_cache_answer'/1
		(_cor0)
	    %% Line 674
	    ( case _cor0 of
		( <( {'dns_rec',_cor10,_cor11,_rec4,_cor12,_cor13}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <_cor6> =
			  %% Line 676
			  apply 'stripdot'/1
			      (_cor2)
		      in  %% Line 676
			  apply 'res_hostent_by_domain'/4
			      (_cor6, [], _cor1, _rec4)
		  -| ['compiler_generated'] )
		( <_cor14> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','dns_rec'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'res_hostent_by_domain'/4 =
    %% Line 678
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 679
	case apply 'res_lookup_type'/3
		 (_cor3, _cor1, _cor0) of
	  %% Line 680
	  <[]> when 'true' ->
	      %% Line 681
	      case apply 'res_lookup_type'/3
		       (_cor3, 'cname', _cor0) of
		%% Line 682
		<[]> when 'true' ->
		    %% Line 683
		    {'error','nxdomain'}
		%% Line 684
		<[CName|_cor12]> when 'true' ->
		    %% Line 685
		    case call 'lists':'member'
			     (CName, [_cor3|_cor2]) of
		      %% Line 686
		      <'true'> when 'true' ->
			  %% Line 687
			  {'error','nxdomain'}
		      %% Line 688
		      <'false'> when 'true' ->
			  %% Line 689
			  apply 'res_hostent_by_domain'/4
			      (CName, [_cor3|_cor2], _cor1, _cor0)
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 693
	  <Addrs> when 'true' ->
	      let <_cor6> =
		  %% Line 694
		  apply 'make_hostent'/4
		      (_cor3, Addrs, _cor2, _cor1)
	      in  %% Line 694
		  {'ok',_cor6}
	end
'res_lookup_type'/3 =
    %% Line 698
    fun (_cor2,_cor1,_cor0) ->
	%% Line 699
	( letrec
	      'lc$^0'/1 =
		  fun (_cor14) ->
		      case _cor14 of
			<[R|_cor4]>
			    when %% Line 700
			      ( try
				    ( case <> of
					( <>
					      when ( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'is_record'
										       -| ['compiler_generated'] )
						      (R,
						       ( 'dns_rr'
							 -| ['compiler_generated'] ),
						       ( 10
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] ) ->
					      let <_cor9> =
						  ( call 'erlang':'element'
							(2, R)
						    -| ['compiler_generated'] )
					      in  let <_cor10> =
						      ( call 'erlang':'=:='
							    (_cor9, _cor2)
							-| ['compiler_generated'] )
						  in  let <_cor12> =
							  %% Line 701
							  ( call 'erlang':'element'
								(3, R)
							    -| ['compiler_generated'] )
						      in  let <_cor13> =
							      %% Line 701
							      ( call 'erlang':'=:='
								    (_cor12, _cor1)
								-| ['compiler_generated'] )
							  in  ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'and'
												     -| ['compiler_generated'] )
								    (_cor10, _cor13)
								-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <> when 'true' ->
					      'false'
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				of <Try> ->
				    Try
				catch <T,R> ->
				    'false'
				-| ['compiler_generated'] ) ->
			    ( case R of
				( <( {'dns_rr',_cor21,_cor22,_cor23,_cor24,_cor25,_rec5,_cor26,_cor27,_cor28}
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_cor17> =
					  apply 'lc$^0'/1
					      (_cor4)
				      in  ( [_rec5|_cor17]
					    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <_cor29> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','dns_rr'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			( <[R|_cor4]> when 'true' ->
			      apply 'lc$^0'/1
				  (_cor4)
			  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor14> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor14})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  apply 'lc$^0'/1
		  (_cor0)
	  -| ['list_comprehension'] )
'gethostbyaddr'/1 =
    %% Line 707
    fun (_cor0) ->
	%% Line 708
	case apply 'dnip'/1
		 (_cor0) of
	  %% Line 709
	  <{'ok',{IP1,HType,HLen,DnIP}}> when 'true' ->
	      let <RRs> =
		  %% Line 710
		  apply 'match_rr'/1
		      ({'dns_rr',DnIP,'ptr','in',%% Line 711
						 '_',%% Line 711
						     '_',%% Line 712
							 '_',%% Line 711
							     '_',%% Line 712
								 '_',%% Line 712
								     '_'})
	      in  %% Line 713
		  apply 'ent_gethostbyaddr'/4
		      (RRs, IP1, HType, HLen)
	  %% Line 714
	  <Error> when 'true' ->
	      Error
	end
'res_gethostbyaddr'/2 =
    %% Line 721
    fun (_cor1,_cor0) ->
	%% Line 722
	case apply 'dnt'/1
		 (_cor1) of
	  <{'ok',{IP1,HType,HLen}}> when 'true' ->
	      do  %% Line 723
		  apply 'res_cache_answer'/1
		      (_cor0)
		  %% Line 724
		  ( case _cor0 of
		      ( <( {'dns_rec',_cor7,_cor8,_rec6,_cor9,_cor10}
			   -| ['compiler_generated'] )> when 'true' ->
			    apply 'ent_gethostbyaddr'/4
				(_rec6, IP1, HType, HLen)
			-| ['compiler_generated'] )
		      ( <_cor11> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','dns_rec'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'ent_gethostbyaddr'/4 =
    %% Line 726
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 727
	case _cor3 of
	  %% Line 728
	  <[]> when 'true' ->
	      {'error','nxdomain'}
	  %% Line 729
	  <[RR|TR]> when 'true' ->
	      do  %% Line 731
		  case <> of
		    <>
			when call 'erlang':'=/='
			      (TR,
			       []) ->
			'ok'
		    %% Line 733
		    <> when 'true' ->
			'ok'
		  end
		  %% Line 735
		  ( case RR of
		      ( <( {'dns_rr',_cor14,_cor15,_cor16,_cor17,_cor18,_rec7,_cor19,_cor20,_cor21}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_cor7> =
				%% Line 737
				apply 'lookup_cname'/1
				    (_rec7)
			    in  let <H> =
				    %% Line 736
				    {'hostent',_rec7,_cor7,_cor1,_cor0,%% Line 738
								       [_cor2|[]]}
				in  %% Line 741
				    {'ok',H}
			-| ['compiler_generated'] )
		      ( <_cor22> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','dns_rr'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor9> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor9})
	    -| ['compiler_generated'] )
	end
'dnip'/1 =
    %% Line 744
    fun (_cor0) ->
	%% Line 745
	case apply 'dnt'/1
		 (_cor0) of
	  %% Line 746
	  <{'ok',{IP1 = {A,B,C,D},'inet',HLen}}> when 'true' ->
	      let <_cor1> =
		  %% Line 747
		  apply 'dn_in_addr_arpa'/4
		      (A, B, C, D)
	      in  %% Line 747
		  {'ok',{IP1,'inet',HLen,_cor1}}
	  %% Line 748
	  <{'ok',{IP1 = {A,B,C,D,E,F,G,H},'inet6',HLen}}> when 'true' ->
	      let <_cor2> =
		  %% Line 749
		  apply 'dn_ip6_int'/8
		      (A, B, C, D, E, F, G, H)
	      in  %% Line 749
		  {'ok',{IP1,'inet6',HLen,_cor2}}
	  %% Line 750
	  <_cor5> when 'true' ->
	      %% Line 751
	      {'error','formerr'}
	end
'dnt'/1 =
    %% Line 755
    fun (_cor0) ->
	case _cor0 of
	  <IP = {A,B,C,D}>
	      when try
		    let <_cor2> =
			call 'erlang':'bor'
			    (A, B)
		    in  let <_cor3> =
			    call 'erlang':'bor'
				(_cor2, C)
			in  let <_cor4> =
				call 'erlang':'bor'
				    (_cor3, D)
			    in  let <_cor5> =
				    call 'erlang':'band'
					(_cor4, -256)
				in  call 'erlang':'=:='
					(_cor5, 0)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 756
	      {'ok',{IP,'inet',4}}
	  %% Line 757
	  <{0,0,0,0,0,65535,G,H}>
	      when try
		    let <_cor6> =
			call 'erlang':'+'
			    (G, H)
		    in  call 'erlang':'is_integer'
			    (_cor6)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <A> =
		  %% Line 758
		  call 'erlang':'div'
		      (G, 256)
	      in  let <B> =
		      %% Line 758
		      call 'erlang':'rem'
			  (G, 256)
		  in  let <C> =
			  %% Line 758
			  call 'erlang':'div'
			      (H, 256)
		      in  let <D> =
			      %% Line 758
			      call 'erlang':'rem'
				  (H, 256)
			  in  %% Line 759
			      {'ok',{{A,B,C,D},'inet',4}}
	  %% Line 760
	  <IP = {A,B,C,D,E,F,G,H}>
	      when try
		    let <_cor12> =
			call 'erlang':'bor'
			    (A, B)
		    in  let <_cor13> =
			    call 'erlang':'bor'
				(_cor12, C)
			in  let <_cor14> =
				call 'erlang':'bor'
				    (_cor13, D)
			    in  let <_cor15> =
				    call 'erlang':'bor'
					(_cor14, E)
				in  let <_cor16> =
					call 'erlang':'bor'
					    (_cor15, F)
				    in  let <_cor17> =
					    call 'erlang':'bor'
						(_cor16, G)
					in  let <_cor18> =
						call 'erlang':'bor'
						    (_cor17, H)
					    in  let <_cor19> =
						    call 'erlang':'band'
							(_cor18, -65536)
						in  call 'erlang':'=:='
							(_cor19, 0)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 761
	      {'ok',{IP,'inet6',16}}
	  %% Line 762
	  <_cor21> when 'true' ->
	      %% Line 763
	      {'error','formerr'}
	end
'register_socket'/2 =
    %% Line 768
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Socket,Module>
	      when let <_cor2> =
		    call 'erlang':'is_port'
			(Socket)
		in  let <_cor3> =
			call 'erlang':'is_atom'
			    (Module)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      %% Line 769
	      try
		  call 'erlang':'port_set_data'
		      (Socket, Module)
	      of <_cor4> ->
		  _cor4
	      catch <_cor7,_cor6,_cor5> ->
		  case <_cor7,_cor6,_cor5> of
		    %% Line 771
		    <'error','badarg',_cor10> when 'true' ->
			'false'
		    ( <_cor7,_cor6,_cor5> when 'true' ->
			  primop 'raise'
			      (_cor5, _cor6)
		      -| ['compiler_generated'] )
		  end
	  ( <_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8})
		  -| [{'function_name',{'register_socket',2}}] )
	    -| ['compiler_generated'] )
	end
'unregister_socket'/1 =
    %% Line 774
    fun (_cor0) ->
	case _cor0 of
	  <Socket>
	      when call 'erlang':'is_port'
		    (_cor0) ->
	      %% Line 775
	      'ok'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'unregister_socket',1}}] )
	    -| ['compiler_generated'] )
	end
'lookup_socket'/1 =
    %% Line 777
    fun (_cor0) ->
	case _cor0 of
	  <Socket>
	      when call 'erlang':'is_port'
		    (_cor0) ->
	      %% Line 778
	      try
		  call 'erlang':'port_get_data'
		      (Socket)
	      of <_cor1> ->
		  case _cor1 of
		    %% Line 779
		    <Module>
			when call 'erlang':'is_atom'
			      (_cor1) ->
			{'ok',Module}
		    %% Line 780
		    <_cor7> when 'true' ->
			{'error','closed'}
		  end
	      catch <_cor5,_cor4,_cor3> ->
		  case <_cor5,_cor4,_cor3> of
		    %% Line 782
		    <'error','badarg',_cor8> when 'true' ->
			{'error','closed'}
		    ( <_cor5,_cor4,_cor3> when 'true' ->
			  primop 'raise'
			      (_cor3, _cor4)
		      -| ['compiler_generated'] )
		  end
	  ( <_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6})
		  -| [{'function_name',{'lookup_socket',1}}] )
	    -| ['compiler_generated'] )
	end
'init'/1 =
    %% Line 844
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      do  %% Line 845
		  call 'erlang':'process_flag'
		      ('trap_exit', 'true')
		  let <Db> =
		      %% Line 846
		      call 'ets':'new'
			  ('inet_db', ['public'|['named_table']])
		  in  do  %% Line 847
			  apply 'reset_db'/1
			      (Db)
			  let <Cache> =
			      %% Line 849
			      call 'ets':'new'
				  ('inet_cache', ['public'|['bag'|[{'keypos',2}|['named_table']]]])
			  in  let <HostsByname> =
				  %% Line 852
				  call 'ets':'new'
				      ('inet_hosts_byname', ['protected'|['bag'|['named_table'|[{'keypos',1}]]]])
			      in  let <HostsByaddr> =
				      %% Line 853
				      call 'ets':'new'
					  ('inet_hosts_byaddr', ['protected'|['bag'|['named_table'|[{'keypos',3}]]]])
				  in  let <HostsFileByname> =
					  %% Line 854
					  call 'ets':'new'
					      ('inet_hosts_file_byname', ['protected'|['bag'|['named_table'|[{'keypos',1}]]]])
				      in  let <HostsFileByaddr> =
					      %% Line 855
					      call 'ets':'new'
						  ('inet_hosts_file_byaddr', ['protected'|['bag'|['named_table'|[{'keypos',3}]]]])
					  in  let <_cor10> =
						  %% Line 862
						  apply 'init_timer'/0
						      ()
					      in  %% Line 856
						  {'ok',{'state',Db,%% Line 857
								    Cache,%% Line 858
									  HostsByname,%% Line 859
										      HostsByaddr,%% Line 860
												  HostsFileByname,%% Line 861
														  HostsFileByaddr,_cor10}}
	  ( <_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11})
		  -| [{'function_name',{'init',1}}] )
	    -| ['compiler_generated'] )
	end
'reset_db'/1 =
    %% Line 864
    fun (_cor0) ->
	do  %% Line 865
	    call 'ets':'insert'
		(_cor0, {'hostname',[]})
	    do  %% Line 866
		call 'ets':'insert'
		    (_cor0, {'res_ns',[]})
		do  %% Line 867
		    call 'ets':'insert'
			(_cor0, {'res_alt_ns',[]})
		    do  %% Line 868
			call 'ets':'insert'
			    (_cor0, {'res_search',[]})
			do  %% Line 869
			    call 'ets':'insert'
				(_cor0, {'res_domain',[]})
			    do  %% Line 870
				call 'ets':'insert'
				    (_cor0, {'res_lookup',[]})
				do  %% Line 871
				    call 'ets':'insert'
					(_cor0, {'res_recurse','true'})
				    do  %% Line 872
					call 'ets':'insert'
					    (_cor0, {'res_usevc','false'})
					do  %% Line 873
					    call 'ets':'insert'
						(_cor0, {'res_id',0})
					    do  %% Line 874
						call 'ets':'insert'
						    (_cor0, {'res_retry',3})
						do  %% Line 875
						    call 'ets':'insert'
							(_cor0, {'res_timeout',2000})
						    do  %% Line 876
							call 'ets':'insert'
							    (_cor0, {'res_inet6','false'})
							do  %% Line 877
							    call 'ets':'insert'
								(_cor0, {'res_edns','false'})
							    do  %% Line 878
								call 'ets':'insert'
								    (_cor0, {'res_udp_payload_size',1280})
								do  %% Line 879
								    call 'ets':'insert'
									(_cor0, {'cache_size',100})
								    do  %% Line 880
									call 'ets':'insert'
									    (_cor0, {'cache_refresh_interval',3600000})
									do  %% Line 881
									    call 'ets':'insert'
										(_cor0, {'socks5_server',[]})
									    do  %% Line 882
										call 'ets':'insert'
										    (_cor0, {'socks5_port',1080})
										do  %% Line 883
										    call 'ets':'insert'
											(_cor0, {'socks5_methods',['none']})
										    do  %% Line 884
											call 'ets':'insert'
											    (_cor0, {'socks5_noproxy',[]})
											do  %% Line 885
											    call 'ets':'insert'
												(_cor0, {'tcp_module','inet_tcp'})
											    do  %% Line 886
												call 'ets':'insert'
												    (_cor0, {'udp_module','inet_udp'})
												%% Line 887
												call 'ets':'insert'
												    (_cor0, {'sctp_module','inet_sctp'})
'handle_call'/3 =
    %% Line 902
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Request,From,State = {'state',Db,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186}> when 'true' ->
	      %% Line 903
	      case Request of
		%% Line 904
		<{'load_hosts_file',IPNmAs}>
		    when call 'erlang':'is_list'
			  (IPNmAs) ->
		    let <_cor15> =
			%% Line 907
			( letrec
			      'lc$^0'/1 =
				  fun (_cor5) ->
				      case _cor5 of
					<[%% Line 911
					  {IP,Nm,As}|_cor4]> when 'true' ->
					    let <_cor13> =
						( letrec
						      'lc$^1'/1 =
							  fun (_cor8) ->
							      case _cor8 of
								<[%% Line 910
								  N|_cor7]> when 'true' ->
								    let <_cor11> =
									%% Line 908
									case <> of
									  <>
									      when try
										    let <_cor9> =
											call 'erlang':'tuple_size'
											    (IP)
										    in  call 'erlang':'=:='
											    (_cor9, 4)
										of <Try> ->
										    Try
										catch <T,R> ->
										    'false' ->
									      'inet'
									  %% Line 909
									  <>
									      when try
										    let <_cor10> =
											call 'erlang':'tuple_size'
											    (IP)
										    in  call 'erlang':'=:='
											    (_cor10, 8)
										of <Try> ->
										    Try
										catch <T,R> ->
										    'false' ->
									      'inet6'
									  ( <> when 'true' ->
										primop 'match_fail'
										    ('if_clause')
									    -| ['compiler_generated'] )
									end
								    in  let <_cor12> =
									    %% Line 910
									    apply 'lc$^1'/1
										(_cor7)
									in  ( [{N,_cor11,%% Line 910
											 IP}|_cor12]
									      -| ['compiler_generated'] )
								<[]> when 'true' ->
								    []
								( <_cor8> when 'true' ->
								      ( primop 'match_fail'
									    ({'function_clause',_cor8})
									-| [{'function_name',{'lc$^1',1}}] )
								  -| ['compiler_generated'] )
							      end
						  in  apply 'lc$^1'/1
							  (%% Line 910
							   [Nm|As])
						  -| ['list_comprehension'] )
					    in  let <_cor14> =
						    %% Line 911
						    apply 'lc$^0'/1
							(_cor4)
						in  ( [_cor13|_cor14]
						      -| ['compiler_generated'] )
					( <[_cor3|_cor4]> when 'true' ->
					      %% Line 911
					      apply 'lc$^0'/1
						  (_cor4)
					  -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor5> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor5})
						-| [{'function_name',{'lc$^0',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lc$^0'/1
				  (%% Line 911
				   IPNmAs)
			  -| ['list_comprehension'] )
		    in  let <NIPs> =
			    %% Line 906
			    call 'lists':'flatten'
				(_cor15)
			in  do  %% Line 914
				call 'ets':'delete_all_objects'
				    (_cor184)
				do  %% Line 915
				    call 'ets':'delete_all_objects'
					(_cor185)
				    let <_cor28> =
					%% Line 919
					( letrec
					      'lc$^2'/1 =
						  fun (_cor25) ->
						      case _cor25 of
							<[{N,Type,IP}|_cor24]> when 'true' ->
							    let <_cor26> =
								apply 'tolower'/1
								    (N)
							    in  let <_cor27> =
								    apply 'lc$^2'/1
									(_cor24)
								in  ( [{_cor26,Type,IP}|_cor27]
								      -| ['compiler_generated'] )
							( <[_cor23|_cor24]> when 'true' ->
							      apply 'lc$^2'/1
								  (_cor24)
							  -| ['compiler_generated'] )
							<[]> when 'true' ->
							    []
							( <_cor25> when 'true' ->
							      ( primop 'match_fail'
								    ({'function_clause',_cor25})
								-| [{'function_name',{'lc$^2',1}}] )
							  -| ['compiler_generated'] )
						      end
					  in  apply 'lc$^2'/1
						  (NIPs)
					  -| ['list_comprehension'] )
				    in  do  %% Line 919
					    call 'ets':'insert'
						(_cor184, _cor28)
					    do  %% Line 920
						call 'ets':'insert'
						    (_cor185, NIPs)
						%% Line 921
						{'reply','ok',State}
		%% Line 923
		<{'add_host',IP = {A,B,C,D},Names = [N|As]}>
		    when %% Line 924
		      try
			  let <_cor30> =
			      call 'erlang':'bor'
				  (A, B)
			  in  let <_cor31> =
				  call 'erlang':'bor'
				      (_cor30, C)
			      in  let <_cor32> =
				      call 'erlang':'bor'
					  (_cor31, D)
				  in  let <_cor33> =
					  call 'erlang':'band'
					      (_cor32, -256)
				      in  let <_cor34> =
					      call 'erlang':'=:='
						  (_cor33, 0)
					  in  let <_cor35> =
						  call 'erlang':'is_list'
						      (N)
					      in  let <_cor36> =
						      call 'erlang':'is_list'
							  (As)
						  in  let <_cor37> =
							  call 'erlang':'and'
							      (_cor35, _cor36)
						      in  call 'erlang':'and'
							      (_cor34, _cor37)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    do  %% Line 925
			apply 'do_add_host'/5
			    (_cor182, _cor183, %% Line 927
					       Names, %% Line 927
						      'inet', %% Line 927
							      IP)
			%% Line 928
			{'reply','ok',State}
		%% Line 929
		<{'add_host',IP = {A,B,C,D,E,F,G,H},Names = [N|As]}>
		    when %% Line 930
		      try
			  let <_cor43> =
			      call 'erlang':'bor'
				  (A, B)
			  in  let <_cor44> =
				  call 'erlang':'bor'
				      (_cor43, C)
			      in  let <_cor45> =
				      call 'erlang':'bor'
					  (_cor44, D)
				  in  let <_cor46> =
					  call 'erlang':'bor'
					      (_cor45, E)
				      in  let <_cor47> =
					      call 'erlang':'bor'
						  (_cor46, F)
					  in  let <_cor48> =
						  call 'erlang':'bor'
						      (_cor47, G)
					      in  let <_cor49> =
						      call 'erlang':'bor'
							  (_cor48, H)
						  in  let <_cor50> =
							  call 'erlang':'band'
							      (_cor49, -65536)
						      in  let <_cor51> =
							      call 'erlang':'=:='
								  (_cor50, 0)
							  in  let <_cor52> =
								  call 'erlang':'is_list'
								      (N)
							      in  let <_cor53> =
								      call 'erlang':'is_list'
									  (As)
								  in  let <_cor54> =
									  call 'erlang':'and'
									      (_cor52, _cor53)
								      in  call 'erlang':'and'
									      (_cor51, _cor54)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    do  %% Line 931
			apply 'do_add_host'/5
			    (_cor182, _cor183, %% Line 933
					       Names, %% Line 933
						      'inet6', %% Line 933
							       IP)
			%% Line 934
			{'reply','ok',State}
		%% Line 936
		<{'del_host',IP = {A,B,C,D}}>
		    when try
			  let <_cor60> =
			      call 'erlang':'bor'
				  (A, B)
			  in  let <_cor61> =
				  call 'erlang':'bor'
				      (_cor60, C)
			      in  let <_cor62> =
				      call 'erlang':'bor'
					  (_cor61, D)
				  in  let <_cor63> =
					  call 'erlang':'band'
					      (_cor62, -256)
				      in  call 'erlang':'=:='
					      (_cor63, 0)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    do  %% Line 937
			apply 'do_del_host'/3
			    (_cor182, _cor183, %% Line 939
					       IP)
			%% Line 940
			{'reply','ok',State}
		%% Line 941
		<{'del_host',IP = {A,B,C,D,E,F,G,H}}>
		    when try
			  let <_cor69> =
			      call 'erlang':'bor'
				  (A, B)
			  in  let <_cor70> =
				  call 'erlang':'bor'
				      (_cor69, C)
			      in  let <_cor71> =
				      call 'erlang':'bor'
					  (_cor70, D)
				  in  let <_cor72> =
					  call 'erlang':'bor'
					      (_cor71, E)
				      in  let <_cor73> =
					      call 'erlang':'bor'
						  (_cor72, F)
					  in  let <_cor74> =
						  call 'erlang':'bor'
						      (_cor73, G)
					      in  let <_cor75> =
						      call 'erlang':'bor'
							  (_cor74, H)
						  in  let <_cor76> =
							  call 'erlang':'band'
							      (_cor75, -65536)
						      in  call 'erlang':'=:='
							      (_cor76, 0)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    do  %% Line 942
			apply 'do_del_host'/3
			    (_cor182, _cor183, %% Line 944
					       IP)
			%% Line 945
			{'reply','ok',State}
		%% Line 947
		<{'add_rr',RR = {'dns_rr',_cor257,_cor258,_cor259,_cor260,_cor261,_cor262,_cor263,_cor264,_cor265}}> when ( 'true'
															    -| ['compiler_generated'] ) ->
		    do  %% Line 949
			apply 'do_add_rr'/3
			    (RR, Db, State)
			%% Line 950
			{'reply','ok',State}
		%% Line 952
		<{'del_rr',RR = {'dns_rr',_cor266,_cor267,_cor268,_cor269,_cor270,_cor271,_cor272,_cor273,_cor274}}> when ( 'true'
															    -| ['compiler_generated'] ) ->
		    do  %% Line 955
			call 'ets':'match_delete'
			    (_cor181, RR)
			%% Line 956
			{'reply','ok',State}
		%% Line 958
		<{'lookup_rr',Domain,Class,Type}> when 'true' ->
		    let <_cor84> =
			%% Line 959
			apply 'do_lookup_rr'/3
			    (Domain, Class, Type)
		    in  %% Line 959
			{'reply',_cor84,State}
		%% Line 961
		<{'listop',Opt,Op,E}> when 'true' ->
		    let <El> =
			%% Line 962
			[E|[]]
		    in  %% Line 963
			case apply 'res_check_option'/2
				 (Opt, El) of
			  %% Line 964
			  <'true'> when 'true' ->
			      let <Optname> =
				  %% Line 965
				  apply 'res_optname'/1
				      (Opt)
			      in  %% Line 966
				  case call 'ets':'lookup'
					   (Db, Optname) of
				    <[{_cor282,Es}|[]]> when 'true' ->
					let <_cor91> =
					    %% Line 967
					    case Op of
					      %% Line 968
					      <'ins'> when 'true' ->
						  let <_cor88> =
						      apply 'lists_delete'/2
							  (E, Es)
						  in  [E|_cor88]
					      %% Line 969
					      <'add'> when 'true' ->
						  let <_cor89> =
						      apply 'lists_delete'/2
							  (E, Es)
						  in  call 'erlang':'++'
							  (_cor89, El)
					      %% Line 970
					      <'del'> when 'true' ->
						  apply 'lists_delete'/2
						      (E, Es)
					      ( <_cor90> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_cor90})
						-| ['compiler_generated'] )
					    end
					in  do  %% Line 972
						call 'ets':'insert'
						    (Db, {Optname,_cor91})
						%% Line 973
						{'reply','ok',State}
				    ( <_cor87> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor87})
				      -| ['compiler_generated'] )
				  end
			  %% Line 974
			  <'false'> when 'true' ->
			      %% Line 975
			      {'reply','error',State}
			  ( <_cor93> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor93})
			    -| ['compiler_generated'] )
			end
		%% Line 978
		<{'listdel',Opt}> when 'true' ->
		    let <_cor94> =
			%% Line 979
			apply 'res_optname'/1
			    (Opt)
		    in  do  %% Line 979
			    call 'ets':'insert'
				(Db, {_cor94,[]})
			    %% Line 980
			    {'reply','ok',State}
		%% Line 982
		<{'set_hostname',Name}> when 'true' ->
		    %% Line 983
		    case call 'inet_parse':'visible_string'
			     (Name) of
		      %% Line 984
		      <'true'> when 'true' ->
			  do  %% Line 985
			      call 'ets':'insert'
				  (Db, {'hostname',Name})
			      %% Line 986
			      {'reply','ok',State}
		      %% Line 987
		      <'false'> when 'true' ->
			  %% Line 988
			  {'reply','error',State}
		      ( <_cor95> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor95})
			-| ['compiler_generated'] )
		    end
		%% Line 991
		<{'res_set',Option = 'hosts_file_name',Fname}> when 'true' ->
		    %% Line 992
		    apply 'handle_set_file'/7
			(%% Line 993
			 Option, %% Line 993
				 Fname, %% Line 993
					'res_hosts_file_tm', %% Line 993
							     'res_hosts_file_info', %% Line 994
										    'undefined', %% Line 994
												 From, %% Line 994
												       State)
		%% Line 995
		<{'res_set',Option = 'resolv_conf_name',Fname}> when 'true' ->
		    %% Line 996
		    apply 'handle_set_file'/7
			(%% Line 997
			 Option, %% Line 997
				 Fname, %% Line 997
					'res_resolv_conf_tm', %% Line 997
							      'res_resolv_conf_info', %% Line 998
										      'undefined', %% Line 998
												   From, %% Line 998
													 State)
		%% Line 1000
		<{'res_set',Option = 'hosts_file',Fname}> when 'true' ->
		    let <_cor99> =
			%% Line 1003
			( fun (_cor97) ->
			      %% Line 1004
			      case call 'inet_parse':'hosts'
				       (%% Line 1005
					Fname, %% Line 1005
					       {'chars',_cor97}) of
				%% Line 1006
				<{'ok',Opts}> when 'true' ->
				    %% Line 1007
				    [{'load_hosts_file',Opts}|[]]
				%% Line 1008
				<_cor283> when 'true' ->
				    'error'
			      end
			  -| [{'id',{0,0,'-handle_call/3-fun-0-'}}] )
		    in  %% Line 1001
			apply 'handle_set_file'/7
			    (%% Line 1002
			     Option, %% Line 1002
				     Fname, %% Line 1002
					    'res_hosts_file_tm', %% Line 1002
								 'res_hosts_file_info', _cor99, %% Line 1011
												From, %% Line 1011
												      State)
		%% Line 1013
		<{'res_set',Option = 'resolv_conf',Fname}> when 'true' ->
		    let <_cor114> =
			%% Line 1016
			( fun (_cor112) ->
			      %% Line 1017
			      case call 'inet_parse':'resolv'
				       (%% Line 1018
					Fname, %% Line 1018
					       {'chars',_cor112}) of
				%% Line 1019
				<{'ok',Opts}> when 'true' ->
				    let <_cor104> =
					%% Line 1022
					( fun (_cor101,_cor100) ->
					      case <_cor101,_cor100> of
						<{'search',L},_cor284> when 'true' ->
						    %% Line 1023
						    L
						%% Line 1024
						<{'domain',[]},S> when 'true' ->
						    %% Line 1025
						    S
						%% Line 1026
						<{'domain',D},_cor285> when 'true' ->
						    %% Line 1027
						    [D|[]]
						%% Line 1028
						<_cor286,S> when 'true' ->
						    %% Line 1029
						    S
					      end
					  -| [{'id',{0,0,'-handle_call/3-fun-1-'}}] )
				    in  let <Search> =
					    %% Line 1021
					    call 'lists':'foldl'
						(_cor104, %% Line 1030
							  [], %% Line 1030
							      Opts)
					in  let <_cor110> =
						%% Line 1035
						( letrec
						      'lc$^3'/1 =
							  fun (_cor108) ->
							      case _cor108 of
								<[Opt = {'nameserver',_cor287}|_cor107]> when 'true' ->
								    let <_cor109> =
									apply 'lc$^3'/1
									    (_cor107)
								    in  ( [Opt|_cor109]
									  -| ['compiler_generated'] )
								( <[_cor106|_cor107]> when 'true' ->
								      apply 'lc$^3'/1
									  (_cor107)
								  -| ['compiler_generated'] )
								<[]> when 'true' ->
								    []
								( <_cor108> when 'true' ->
								      ( primop 'match_fail'
									    ({'function_clause',_cor108})
									-| [{'function_name',{'lc$^3',1}}] )
								  -| ['compiler_generated'] )
							      end
						  in  apply 'lc$^3'/1
							  (Opts)
						  -| ['list_comprehension'] )
					    in  %% Line 1031
						['del_ns'|%% Line 1032
							  ['clear_search'|%% Line 1033
									  ['clear_cache'|%% Line 1034
											 [{'search',Search}|_cor110]]]]
				%% Line 1036
				<_cor288> when 'true' ->
				    'error'
			      end
			  -| [{'id',{0,0,'-handle_call/3-fun-2-'}}] )
		    in  %% Line 1014
			apply 'handle_set_file'/7
			    (%% Line 1015
			     Option, %% Line 1015
				     Fname, %% Line 1015
					    'res_resolv_conf_tm', %% Line 1015
								  'res_resolv_conf_info', _cor114, %% Line 1039
												   From, %% Line 1039
													 State)
		%% Line 1041
		<{'res_set',Opt,Value}> when 'true' ->
		    %% Line 1042
		    case apply 'res_optname'/1
			     (Opt) of
		      %% Line 1043
		      <'undefined'> when 'true' ->
			  %% Line 1044
			  {'reply','error',State}
		      %% Line 1045
		      <Optname> when 'true' ->
			  %% Line 1046
			  case apply 'res_check_option'/2
				   (Opt, Value) of
			    %% Line 1047
			    <'true'> when 'true' ->
				do  %% Line 1048
				    call 'ets':'insert'
					(Db, {Optname,Value})
				    %% Line 1049
				    {'reply','ok',State}
			    %% Line 1050
			    <'false'> when 'true' ->
				%% Line 1051
				{'reply','error',State}
			    ( <_cor115> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor115})
			      -| ['compiler_generated'] )
			  end
		    end
		%% Line 1055
		<{'set_resolv_conf_tm',TM}> when 'true' ->
		    do  %% Line 1056
			call 'ets':'insert'
			    (Db, {'res_resolv_conf_tm',TM})
			%% Line 1057
			{'reply','ok',State}
		%% Line 1059
		<{'set_hosts_file_tm',TM}> when 'true' ->
		    do  %% Line 1060
			call 'ets':'insert'
			    (Db, {'res_hosts_file_tm',TM})
			%% Line 1061
			{'reply','ok',State}
		%% Line 1063
		<{'set_socks_server',{A,B,C,D}}>
		    when try
			  let <_cor118> =
			      call 'erlang':'bor'
				  (A, B)
			  in  let <_cor119> =
				  call 'erlang':'bor'
				      (_cor118, C)
			      in  let <_cor120> =
				      call 'erlang':'bor'
					  (_cor119, D)
				  in  let <_cor121> =
					  call 'erlang':'band'
					      (_cor120, -256)
				      in  call 'erlang':'=:='
					      (_cor121, 0)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    do  %% Line 1064
			call 'ets':'insert'
			    (Db, {'socks5_server',{A,B,C,D}})
			%% Line 1065
			{'reply','ok',State}
		%% Line 1067
		<{'set_socks_port',Port}>
		    when call 'erlang':'is_integer'
			  (Port) ->
		    do  %% Line 1068
			call 'ets':'insert'
			    (Db, {'socks5_port',Port})
			%% Line 1069
			{'reply','ok',State}
		%% Line 1071
		<{'add_socks_methods',Ls}> when 'true' ->
		    %% Line 1072
		    case call 'ets':'lookup'
			     (Db, 'socks5_methods') of
		      <[{_cor289,As}|[]]> when 'true' ->
			  let <As1> =
			      %% Line 1073
			      apply 'lists_subtract'/2
				  (As, Ls)
			  in  let <_cor124> =
				  %% Line 1074
				  call 'erlang':'++'
				      (As1, Ls)
			      in  do  %% Line 1074
				      call 'ets':'insert'
					  (Db, {'socks5_methods',_cor124})
				      %% Line 1075
				      {'reply','ok',State}
		      ( <_cor122> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor122})
			-| ['compiler_generated'] )
		    end
		%% Line 1077
		<{'del_socks_methods',Ls}> when 'true' ->
		    %% Line 1078
		    case call 'ets':'lookup'
			     (Db, 'socks5_methods') of
		      <[{_cor290,As}|[]]> when 'true' ->
			  let <As1> =
			      %% Line 1079
			      apply 'lists_subtract'/2
				  (As, Ls)
			  in  do  %% Line 1080
				  case call 'lists':'member'
					   ('none', As1) of
				    %% Line 1081
				    <'false'> when 'true' ->
					let <_cor127> =
					    call 'erlang':'++'
						(As1, ['none'])
					in  call 'ets':'insert'
						(Db, {'socks5_methods',_cor127})
				    %% Line 1082
				    <'true'> when 'true' ->
					call 'ets':'insert'
					    (Db, {'socks5_methods',As1})
				    ( <_cor128> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor128})
				      -| ['compiler_generated'] )
				  end
				  %% Line 1084
				  {'reply','ok',State}
		      ( <_cor125> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor125})
			-| ['compiler_generated'] )
		    end
		%% Line 1086
		<'del_socks_methods'> when 'true' ->
		    do  %% Line 1087
			call 'ets':'insert'
			    (Db, {'socks5_methods',['none']})
			%% Line 1088
			{'reply','ok',State}
		%% Line 1090
		<{'add_socks_noproxy',{{A,B,C,D},{MA,MB,MC,MD}}}>
		    when %% Line 1091
		      try
			  let <_cor130> =
			      call 'erlang':'bor'
				  (A, B)
			  in  let <_cor131> =
				  call 'erlang':'bor'
				      (_cor130, C)
			      in  let <_cor132> =
				      call 'erlang':'bor'
					  (_cor131, D)
				  in  let <_cor133> =
					  call 'erlang':'band'
					      (_cor132, -256)
				      in  let <_cor134> =
					      call 'erlang':'=:='
						  (_cor133, 0)
					  in  let <_cor136> =
						  call 'erlang':'bor'
						      (MA, MB)
					      in  let <_cor137> =
						      call 'erlang':'bor'
							  (_cor136, MC)
						  in  let <_cor138> =
							  call 'erlang':'bor'
							      (_cor137, MD)
						      in  let <_cor139> =
							      call 'erlang':'band'
								  (_cor138, -256)
							  in  let <_cor140> =
								  call 'erlang':'=:='
								      (_cor139, 0)
							      in  call 'erlang':'and'
								      (_cor134, _cor140)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    %% Line 1092
		    case call 'ets':'lookup'
			     (Db, 'socks5_noproxy') of
		      <[{_cor291,As}|[]]> when 'true' ->
			  let <_cor142> =
			      %% Line 1093
			      call 'erlang':'++'
				  (As, [{{A,B,C,D},{MA,MB,MC,MD}}|[]])
			  in  do  %% Line 1093
				  call 'ets':'insert'
				      (Db, {'socks5_noproxy',_cor142})
				  %% Line 1094
				  {'reply','ok',State}
		      ( <_cor141> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor141})
			-| ['compiler_generated'] )
		    end
		%% Line 1096
		<{'del_socks_noproxy',IP = {A,B,C,D}}>
		    when try
			  let <_cor144> =
			      call 'erlang':'bor'
				  (A, B)
			  in  let <_cor145> =
				  call 'erlang':'bor'
				      (_cor144, C)
			      in  let <_cor146> =
				      call 'erlang':'bor'
					  (_cor145, D)
				  in  let <_cor147> =
					  call 'erlang':'band'
					      (_cor146, -256)
				      in  call 'erlang':'=:='
					      (_cor147, 0)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    %% Line 1097
		    case call 'ets':'lookup'
			     (Db, 'socks5_noproxy') of
		      <[{_cor292,As}|[]]> when 'true' ->
			  let <_cor149> =
			      %% Line 1098
			      apply 'lists_keydelete'/3
				  (IP, 1, As)
			  in  do  %% Line 1098
				  call 'ets':'insert'
				      (Db, {'socks5_noproxy',_cor149})
				  %% Line 1099
				  {'reply','ok',State}
		      ( <_cor148> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor148})
			-| ['compiler_generated'] )
		    end
		%% Line 1101
		<{'set_tcp_module',Mod}>
		    when call 'erlang':'is_atom'
			  (Mod) ->
		    do  %% Line 1102
			call 'ets':'insert'
			    (Db, {'tcp_module',Mod})
			%% Line 1103
			{'reply','ok',State}
		%% Line 1105
		<{'set_udp_module',Mod}>
		    when call 'erlang':'is_atom'
			  (Mod) ->
		    do  %% Line 1106
			call 'ets':'insert'
			    (Db, {'udp_module',Mod})
			%% Line 1107
			{'reply','ok',State}
		%% Line 1109
		<{'set_sctp_module',Fam}>
		    when call 'erlang':'is_atom'
			  (Fam) ->
		    do  %% Line 1110
			call 'ets':'insert'
			    (Db, {'sctp_module',Fam})
			%% Line 1111
			{'reply','ok',State}
		%% Line 1113
		<{'set_cache_size',Size}>
		    when let <_cor150> =
			  call 'erlang':'is_integer'
			      (Size)
		      in  let <_cor151> =
			      call 'erlang':'>='
				  (Size, 0)
			  in  call 'erlang':'and'
				  (_cor150, _cor151) ->
		    do  %% Line 1114
			call 'ets':'insert'
			    (Db, {'cache_size',Size})
			%% Line 1115
			{'reply','ok',State}
		%% Line 1117
		<{'set_cache_refresh',Time}>
		    when let <_cor152> =
			  call 'erlang':'is_integer'
			      (Time)
		      in  let <_cor153> =
			      call 'erlang':'>'
				  (Time, 0)
			  in  call 'erlang':'and'
				  (_cor152, _cor153) ->
		    let <_cor154> =
			%% Line 1118
			call 'erlang':'+'
			    (Time, 999)
		    in  let <_cor155> =
			    %% Line 1118
			    call 'erlang':'div'
				(_cor154, 1000)
			in  let <Time1> =
				%% Line 1118
				call 'erlang':'*'
				    (_cor155, 1000)
			    in  do  %% Line 1119
				    call 'ets':'insert'
					(Db, {'cache_refresh_interval',Time1})
				    let <_X_> =
					%% Line 1120
					apply 'stop_timer'/1
					    (_cor186)
				    in  let <_rec20> =
					    %% Line 1121
					    apply 'init_timer'/0
						()
					in  let <_cor163> =
						%% Line 1121
						call 'erlang':'setelement'
						    (8, State, _rec20)
					    in  %% Line 1121
						{'reply','ok',_cor163}
		%% Line 1123
		<'clear_hosts'> when 'true' ->
		    do  %% Line 1124
			call 'ets':'delete_all_objects'
			    (_cor182)
			do  %% Line 1125
			    call 'ets':'delete_all_objects'
				(_cor183)
			    %% Line 1126
			    {'reply','ok',State}
		%% Line 1128
		<'clear_cache'> when 'true' ->
		    do  %% Line 1129
			call 'ets':'match_delete'
			    (_cor181, '_')
			%% Line 1130
			{'reply','ok',State}
		%% Line 1132
		<'reset'> when 'true' ->
		    do  %% Line 1133
			apply 'reset_db'/1
			    (Db)
			let <_X_> =
			    %% Line 1134
			    apply 'stop_timer'/1
				(_cor186)
			in  let <_rec26> =
				%% Line 1135
				apply 'init_timer'/0
				    ()
			    in  let <_cor176> =
				    %% Line 1135
				    call 'erlang':'setelement'
					(8, State, _rec26)
				in  %% Line 1135
				    {'reply','ok',_cor176}
		%% Line 1137
		<{'add_rc_list',List}> when 'true' ->
		    %% Line 1138
		    apply 'handle_rc_list'/3
			(List, From, State)
		%% Line 1140
		<'stop'> when 'true' ->
		    %% Line 1141
		    {'stop','normal','ok',State}
		%% Line 1143
		<_cor344> when 'true' ->
		    %% Line 1144
		    {'reply','error',State}
	      end
	  ( <_cor180,_cor179,_cor178> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor180,_cor179,_cor178})
		  -| [{'function_name',{'handle_call',3}}] )
	    -| ['compiler_generated'] )
	end
'handle_cast'/2 =
    %% Line 1156
    fun (_cor1,_cor0) ->
	%% Line 1157
	{'noreply',_cor0}
'handle_info'/2 =
    %% Line 1168
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'refresh_timeout',State> when 'true' ->
	      %% Line 1169
	      ( case State of
		  ( <( {'state',_cor10,_rec28,_cor11,_cor12,_cor13,_cor14,_cor15}
		       -| ['compiler_generated'] )> when 'true' ->
			do  apply 'do_refresh_cache'/1
				(_rec28)
			    let <_rec29> =
				%% Line 1170
				apply 'init_timer'/0
				    ()
			    in  let <_cor7> =
				    %% Line 1170
				    call 'erlang':'setelement'
					(8, State, _rec29)
				in  %% Line 1170
				    {'noreply',_cor7}
		    -| ['compiler_generated'] )
		  ( <_cor16> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1172
	  <_X_Info,State> when 'true' ->
	      %% Line 1173
	      {'noreply',State}
	end
'terminate'/2 =
    %% Line 1183
    fun (_cor1,_cor0) ->
	%% Line 1184
	( case _cor0 of
	    ( <( {'state',_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_rec31}
		 -| ['compiler_generated'] )> when 'true' ->
		  do  apply 'stop_timer'/1
			  (_rec31)
		      %% Line 1185
		      'ok'
	      -| ['compiler_generated'] )
	    ( <_cor13> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['result_not_wanted','compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'handle_set_file'/7 =
    %% Line 1191
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Option,Fname,TagTm,TagInfo,ParseFun,From,State = %% Line 1192
							    {'state',Db,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35}> when 'true' ->
	      %% Line 1193
	      case apply 'res_check_option'/2
		       (Option, Fname) of
		%% Line 1194
		<'true'>
		    when call 'erlang':'=:='
			  (Fname,
			   []) ->
		    let <_cor7> =
			%% Line 1195
			apply 'res_optname'/1
			    (Option)
		    in  do  %% Line 1195
			    call 'ets':'insert'
				(Db, {_cor7,Fname})
			    do  %% Line 1196
				call 'ets':'delete'
				    (Db, TagInfo)
				do  %% Line 1197
				    call 'ets':'delete'
					(Db, TagTm)
				    %% Line 1198
				    apply 'handle_set_file'/4
					(ParseFun, #{}#, From, State)
		%% Line 1199
		<'true'>
		    when call 'erlang':'=:='
			  (ParseFun,
			   'undefined') ->
		    let <File> =
			%% Line 1200
			call 'filename':'flatten'
			    (Fname)
		    in  let <_cor9> =
			    %% Line 1201
			    apply 'res_optname'/1
				(Option)
			in  do  %% Line 1201
				call 'ets':'insert'
				    (Db, {_cor9,File})
				do  %% Line 1202
				    call 'ets':'insert'
					(Db, {TagInfo,'undefined'})
				    do  %% Line 1203
					call 'ets':'insert'
					    (Db, {TagTm,0})
					%% Line 1204
					{'reply','ok',State}
		%% Line 1205
		<'true'> when 'true' ->
		    let <File> =
			%% Line 1206
			call 'filename':'flatten'
			    (Fname)
		    in  let <_cor11> =
			    %% Line 1207
			    apply 'res_optname'/1
				(Option)
			in  do  %% Line 1207
				call 'ets':'insert'
				    (Db, {_cor11,File})
				let <_cor20> =
				    %% Line 1209
				    case call 'erl_prim_loader':'read_file_info'
					     (File) of
				      %% Line 1210
				      <{'ok',Finfo0}> when 'true' ->
					  %% Line 1211
					  case Finfo0 of
					    <{'file_info',_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48}> when 'true' ->
						let <_cor13> =
						    %% Line 1212
						    call 'erlang':'setelement'
							(5, Finfo0, 'undefined')
						in  let <_cor15> =
							call 'erlang':'setelement'
							    (4, _cor13, 'undefined')
						    in  do  %% Line 1213
							    call 'ets':'insert'
								(Db, {TagInfo,_cor15})
							    let <_cor17> =
								%% Line 1214
								apply 'times'/0
								    ()
							    in  do  %% Line 1214
								    call 'ets':'insert'
									(Db, {TagTm,_cor17})
								    %% Line 1215
								    case call 'erl_prim_loader':'get_file'
									     (File) of
								      %% Line 1216
								      <{'ok',B,_cor50}> when 'true' ->
									  B
								      %% Line 1217
								      <_cor51> when 'true' ->
									  #{}#
								    end
					    ( <_cor49> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','file_info'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
				      %% Line 1219
				      <_cor52> when 'true' ->
					  #{}#
				    end
				in  %% Line 1221
				    apply 'handle_set_file'/4
					(ParseFun, _cor20, From, State)
		%% Line 1222
		<'false'> when 'true' ->
		    {'reply','error',State}
		( <_cor22> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor22})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor29,_cor28,_cor27,_cor26,_cor25,_cor24,_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor29,_cor28,_cor27,_cor26,_cor25,_cor24,_cor23})
		  -| [{'function_name',{'handle_set_file',7}}] )
	    -| ['compiler_generated'] )
	end
'handle_set_file'/4 =
    %% Line 1225
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1226
	case apply _cor3
		 (_cor2) of
	  %% Line 1227
	  <'error'> when 'true' ->
	      %% Line 1228
	      {'reply','error',_cor0}
	  %% Line 1229
	  <Opts> when 'true' ->
	      %% Line 1230
	      apply 'handle_rc_list'/3
		  (Opts, _cor1, _cor0)
	end
'do_add_host'/5 =
    %% Line 1236
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 1237
	    apply 'do_del_host'/3
		(_cor4, _cor3, _cor0)
	    let <_cor10> =
		%% Line 1238
		( letrec
		      'lc$^0'/1 =
			  fun (_cor7) ->
			      case _cor7 of
				<[N|_cor6]> when 'true' ->
				    let <_cor8> =
					apply 'tolower'/1
					    (N)
				    in  let <_cor9> =
					    apply 'lc$^0'/1
						(_cor6)
					in  ( [{_cor8,_cor1,_cor0}|_cor9]
					      -| ['compiler_generated'] )
				<[]> when 'true' ->
				    []
				( <_cor7> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor7})
					-| [{'function_name',{'lc$^0',1}}] )
				  -| ['compiler_generated'] )
			      end
		  in  apply 'lc$^0'/1
			  (_cor2)
		  -| ['list_comprehension'] )
	    in  do  %% Line 1238
		    call 'ets':'insert'
			(_cor4, _cor10)
		    let <_cor15> =
			%% Line 1239
			( letrec
			      'lc$^1'/1 =
				  fun (_cor13) ->
				      case _cor13 of
					<[N|_cor12]> when 'true' ->
					    let <_cor14> =
						apply 'lc$^1'/1
						    (_cor12)
					    in  ( [{N,_cor1,_cor0}|_cor14]
						  -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor13> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor13})
						-| [{'function_name',{'lc$^1',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lc$^1'/1
				  (_cor2)
			  -| ['list_comprehension'] )
		    in  do  %% Line 1239
			    call 'ets':'insert'
				(_cor3, _cor15)
			    %% Line 1240
			    'ok'
'do_del_host'/3 =
    %% Line 1242
    fun (_cor2,_cor1,_cor0) ->
	let <_cor10> =
	    %% Line 1244
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor6) ->
			  case _cor6 of
			    <[%% Line 1245
			      {Name,Type,Addr}|_cor4]> when 'true' ->
				let <_cor7> =
				    apply 'tolower'/1
					(Name)
				in  let <_cor8> =
					( call 'ets':'delete_object'
					      (_cor2, {_cor7,Type,Addr})
					  -| ['result_not_wanted'] )
				    in  let <_cor9> =
					    %% Line 1245
					    apply 'lc$^0'/1
						(_cor4)
					in  ( [_cor8|_cor9]
					      -| ['compiler_generated'] )
			    ( <[_cor3|_cor4]> when 'true' ->
				  %% Line 1245
				  apply 'lc$^0'/1
				      (_cor4)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor6> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor6})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  let <_cor5> =
		      %% Line 1245
		      ( call 'ets':'lookup'
			    (_cor1, _cor0)
			-| ['result_not_wanted'] )
		  in  apply 'lc$^0'/1
			  (_cor5)
	      -| ['list_comprehension'] )
	in  do  %% Line 1246
		call 'ets':'delete'
		    (_cor1, _cor0)
		%% Line 1247
		'ok'
'handle_rc_list'/3 =
    %% Line 1251
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],_X_From,State> when 'true' ->
	      %% Line 1252
	      {'reply','ok',State}
	  %% Line 1253
	  <[Opt|Opts],From,State> when 'true' ->
	      %% Line 1254
	      case apply 'rc_opt_req'/1
		       (Opt) of
		%% Line 1255
		<'undefined'> when 'true' ->
		    %% Line 1256
		    {'reply',{'error',{'badopt',Opt}},State}
		%% Line 1257
		<Req> when 'true' ->
		    %% Line 1258
		    case apply 'handle_calls'/3
			     (Req, From, State) of
		      %% Line 1259
		      <{'reply','ok',NewState}> when 'true' ->
			  %% Line 1260
			  apply 'handle_rc_list'/3
			      (Opts, From, NewState)
		      %% Line 1261
		      <Result> when 'true' ->
			  Result
		    end
	      end
	  %% Line 1264
	  <_cor8,_X_From,State> when 'true' ->
	      %% Line 1265
	      {'reply','error',State}
	end
'handle_calls'/3 =
    %% Line 1267
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],_X_From,State> when 'true' ->
	      %% Line 1268
	      {'reply','ok',State}
	  %% Line 1269
	  <[Req|Reqs],From,State> when 'true' ->
	      %% Line 1270
	      case apply 'handle_call'/3
		       (Req, From, State) of
		%% Line 1271
		<{'reply','ok',NewState}> when 'true' ->
		    %% Line 1272
		    apply 'handle_calls'/3
			(Reqs, From, NewState)
		%% Line 1273
		<{'reply',_cor7,NewState}> when 'true' ->
		    %% Line 1274
		    {'reply','error',NewState}
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1277
	  <Req,From,State> when 'true' ->
	      %% Line 1278
	      apply 'handle_call'/3
		  (Req, From, State)
	end
'rc_opt_req'/1 =
    %% Line 1282
    fun (_cor0) ->
	case _cor0 of
	  <{'nameserver',Ns}> when 'true' ->
	      %% Line 1283
	      {'listop','nameservers','add',{Ns,53}}
	  %% Line 1284
	  <{'nameserver',Ns,Port}> when 'true' ->
	      %% Line 1285
	      {'listop','nameservers','add',{Ns,Port}}
	  %% Line 1286
	  <{'alt_nameserver',Ns}> when 'true' ->
	      %% Line 1287
	      {'listop','alt_nameservers','add',{Ns,53}}
	  %% Line 1288
	  <{'alt_nameserver',Ns,Port}> when 'true' ->
	      %% Line 1289
	      {'listop','alt_nameservers','add',{Ns,Port}}
	  %% Line 1290
	  <{'socks5_noproxy',IP,Mask}> when 'true' ->
	      %% Line 1291
	      {'add_socks_noproxy',{IP,Mask}}
	  %% Line 1292
	  <{'search',Ds}>
	      when call 'erlang':'is_list'
		    (Ds) ->
	      %% Line 1293
	      try
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor3) ->
				case _cor3 of
				  <[D|_cor2]> when 'true' ->
				      let <_cor4> =
					  apply 'lc$^0'/1
					      (_cor2)
				      in  ( [{'listop','search','add',D}|_cor4]
					    -| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_cor3> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor3})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (Ds)
		    -| ['list_comprehension'] )
	      of <_cor5> ->
		  _cor5
	      catch <_cor8,_cor7,_cor6> ->
		  case <_cor8,_cor7,_cor6> of
		    %% Line 1294
		    <'error',_cor18,_cor19> when 'true' ->
			'undefined'
		    ( <_cor8,_cor7,_cor6> when 'true' ->
			  primop 'raise'
			      (_cor6, _cor7)
		      -| ['compiler_generated'] )
		  end
	  %% Line 1296
	  <{'host',IP,Aliases}> when 'true' ->
	      {'add_host',IP,Aliases}
	  %% Line 1297
	  <Req = {'load_hosts_file',_cor20}> when 'true' ->
	      Req
	  %% Line 1298
	  <{'lookup',Ls}> when 'true' ->
	      %% Line 1299
	      try
		  let <_cor9> =
		      apply 'translate_lookup'/1
			  (Ls)
		  in  {'res_set','lookup',_cor9}
	      of <_cor10> ->
		  _cor10
	      catch <_cor13,_cor12,_cor11> ->
		  case <_cor13,_cor12,_cor11> of
		    %% Line 1300
		    <'error',_cor21,_cor22> when 'true' ->
			'undefined'
		    ( <_cor13,_cor12,_cor11> when 'true' ->
			  primop 'raise'
			      (_cor11, _cor12)
		      -| ['compiler_generated'] )
		  end
	  %% Line 1302
	  <{Name,Arg}> when 'true' ->
	      %% Line 1303
	      case apply 'rc_reqname'/1
		       (Name) of
		%% Line 1304
		<'undefined'> when 'true' ->
		    %% Line 1305
		    case apply 'is_res_set'/1
			     (Name) of
		      %% Line 1306
		      <'true'> when 'true' ->
			  {'res_set',Name,Arg}
		      %% Line 1307
		      <'false'> when 'true' ->
			  'undefined'
		      ( <_cor14> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor14})
			-| ['compiler_generated'] )
		    end
		%% Line 1309
		<Req> when 'true' ->
		    {Req,Arg}
	      end
	  %% Line 1311
	  <'del_ns'> when 'true' ->
	      %% Line 1312
	      {'listdel','nameservers'}
	  %% Line 1313
	  <'del_alt_ns'> when 'true' ->
	      %% Line 1314
	      {'listdel','alt_nameservers'}
	  %% Line 1315
	  <'clear_ns'> when 'true' ->
	      %% Line 1316
	      [{'listdel','nameservers'}|[{'listdel','alt_nameservers'}]]
	  %% Line 1317
	  <'clear_search'> when 'true' ->
	      %% Line 1318
	      {'listdel','search'}
	  %% Line 1319
	  <Opt>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      %% Line 1320
	      case apply 'is_reqname'/1
		       (Opt) of
		%% Line 1321
		<'true'> when 'true' ->
		    Opt
		%% Line 1322
		<'false'> when 'true' ->
		    'undefined'
		( <_cor16> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor16})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1324
	  <_cor23> when 'true' ->
	      'undefined'
	end
'rc_reqname'/1 =
    %% Line 1326
    fun (_cor0) ->
	case _cor0 of
	  <'socks5_server'> when 'true' ->
	      'set_socks_server'
	  %% Line 1327
	  <'socks5_port'> when 'true' ->
	      'set_socks_port'
	  %% Line 1328
	  <'socks5_methods'> when 'true' ->
	      'set_socks_methods'
	  %% Line 1329
	  <'cache_refresh'> when 'true' ->
	      'set_cache_refresh'
	  %% Line 1330
	  <'cache_size'> when 'true' ->
	      'set_cache_size'
	  %% Line 1331
	  <'udp'> when 'true' ->
	      'set_udp_module'
	  %% Line 1332
	  <'sctp'> when 'true' ->
	      'set_sctp_module'
	  %% Line 1333
	  <'tcp'> when 'true' ->
	      'set_tcp_module'
	  %% Line 1334
	  <_cor2> when 'true' ->
	      'undefined'
	end
'is_res_set'/1 =
    %% Line 1336
    fun (_cor0) ->
	case _cor0 of
	  <'domain'> when 'true' ->
	      'true'
	  %% Line 1337
	  <'lookup'> when 'true' ->
	      'true'
	  %% Line 1338
	  <'timeout'> when 'true' ->
	      'true'
	  %% Line 1339
	  <'retry'> when 'true' ->
	      'true'
	  %% Line 1340
	  <'inet6'> when 'true' ->
	      'true'
	  %% Line 1341
	  <'usevc'> when 'true' ->
	      'true'
	  %% Line 1342
	  <'edns'> when 'true' ->
	      'true'
	  %% Line 1343
	  <'udp_payload_size'> when 'true' ->
	      'true'
	  %% Line 1344
	  <'resolv_conf'> when 'true' ->
	      'true'
	  %% Line 1345
	  <'hosts_file'> when 'true' ->
	      'true'
	  %% Line 1346
	  <_cor2> when 'true' ->
	      'false'
	end
'is_reqname'/1 =
    %% Line 1348
    fun (_cor0) ->
	case _cor0 of
	  <'reset'> when 'true' ->
	      'true'
	  %% Line 1349
	  <'clear_cache'> when 'true' ->
	      'true'
	  %% Line 1350
	  <'clear_hosts'> when 'true' ->
	      'true'
	  %% Line 1351
	  <_cor2> when 'true' ->
	      'false'
	end
'do_add_rr'/3 =
    %% Line 1358
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1359
	( case _cor0 of
	    ( <( {'state',_cor15,_rec33,_cor16,_cor17,_cor18,_cor19,_cor20}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <TM> =
		      %% Line 1360
		      apply 'times'/0
			  ()
		  in  %% Line 1361
		      case apply 'alloc_entry'/3
			       (_cor1, _rec33, TM) of
			%% Line 1362
			<'true'> when 'true' ->
			    %% Line 1363
			    case _cor2 of
			      <{'dns_rr',_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30}> when 'true' ->
				  let <_cor8> =
				      call 'erlang':'setelement'
					  (8, _cor2, TM)
				  in  let <_cor10> =
					  call 'erlang':'setelement'
					      (5, _cor8, TM)
				      in  apply 'cache_rr'/3
					      (_cor1, _rec33, _cor10)
			      ( <_cor31> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','dns_rr'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			%% Line 1364
			<_cor32> when 'true' ->
			    %% Line 1365
			    'false'
		      end
	      -| ['compiler_generated'] )
	    ( <_cor21> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'cache_rr'/3 =
    %% Line 1368
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1371
	case _cor0 of
	  <{'dns_rr',_rec36,_rec37,_rec38,_rec39,_rec40,_rec41,_rec42,_rec43,_rec44}> when 'true' ->
	      let <_cor5> =
		  {'dns_rr',_rec36,_rec37,_rec38,'_','_',_rec41,'_','_','_'}
	      in  do  call 'ets':'match_delete'
			  (_cor1, _cor5)
		      %% Line 1372
		      call 'ets':'insert'
			  (_cor1, _cor0)
	  ( <_cor9> when 'true' ->
		( call ( 'erlang'
			 -| ['compiler_generated'] ):( 'error'
						       -| ['compiler_generated'] )
		      (( {'badrecord','dns_rr'}
			 -| ['compiler_generated'] ))
		  -| ['compiler_generated'] )
	    -| ['compiler_generated'] )
	end
'times'/0 =
    %% Line 1374
    fun () ->
	%% Line 1375
	case call 'erlang':'now'
		 () of
	  <{Mega,Secs,_cor2}> when 'true' ->
	      let <_cor1> =
		  %% Line 1376
		  call 'erlang':'*'
		      (Mega, 1000000)
	      in  %% Line 1376
		  call 'erlang':'+'
		      (_cor1, Secs)
	  ( <_cor0> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor0})
	    -| ['compiler_generated'] )
	end
'do_lookup_rr'/3 =
    %% Line 1380
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1381
	apply 'match_rr'/1
	    ({'dns_rr',_cor2,_cor0,_cor1,%% Line 1382
					 '_',%% Line 1382
					     '_',%% Line 1383
						 '_',%% Line 1382
						     '_',%% Line 1383
							 '_',%% Line 1383
							     '_'})
'match_rr'/1 =
    %% Line 1385
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 1386
	    call 'ets':'match_object'
		('inet_cache', _cor0)
	in  let <_cor1> =
		%% Line 1386
		apply 'times'/0
		    ()
	    in  %% Line 1386
		apply 'filter_rr'/2
		    (_cor2, _cor1)
'filter_rr'/2 =
    %% Line 1391
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[RR = {'dns_rr',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31}|RRs],Time>
	      when call 'erlang':'=:='
		    (_cor27,
		     0) ->
	      do  %% Line 1392
		  call 'ets':'match_delete'
		      ('inet_cache', RR)
		  let <_cor8> =
		      %% Line 1393
		      apply 'filter_rr'/2
			  (RRs, Time)
		  in  %% Line 1393
		      [RR|_cor8]
	  %% Line 1394
	  <[RR = {'dns_rr',_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40}|RRs],Time>
	      when ( try
		      let <_cor15> =
			  call 'erlang':'+'
			      (_cor38, _cor36)
		      in  call 'erlang':'<'
			      (_cor15, Time)
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      do  %% Line 1395
		  call 'ets':'match_delete'
		      ('inet_cache', RR)
		  %% Line 1396
		  apply 'filter_rr'/2
		      (RRs, Time)
	  %% Line 1397
	  <[RR|RRs],Time> when 'true' ->
	      do  %% Line 1398
		  call 'ets':'match_delete'
		      ('inet_cache', RR)
		  %% Line 1399
		  case RR of
		    <{'dns_rr',_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49}> when 'true' ->
			let <_cor19> =
			    call 'erlang':'setelement'
				(5, RR, Time)
			in  do  call 'ets':'insert'
				    ('inet_cache', _cor19)
				let <_cor20> =
				    %% Line 1400
				    apply 'filter_rr'/2
					(RRs, Time)
				in  %% Line 1400
				    [RR|_cor20]
		    ( <_cor50> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','dns_rr'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 1401
	  <[],_X_Time> when 'true' ->
	      []
	  ( <_cor22,_cor21> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21})
		  -| [{'function_name',{'filter_rr',2}}] )
	    -| ['compiler_generated'] )
	end
'tolower'/1 =
    %% Line 1412
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      []
	  %% Line 1413
	  <[C|Cs]>
	      when call 'erlang':'is_integer'
		    (C) ->
	      %% Line 1414
	      case <> of
		<>
		    when let <_cor1> =
			  call 'erlang':'>='
			      (C, 65)
		      in  let <_cor2> =
			      call 'erlang':'=<'
				  (C, 90)
			  in  call 'erlang':'and'
				  (_cor1, _cor2) ->
		    let <_cor3> =
			%% Line 1415
			call 'erlang':'-'
			    (C, 65)
		    in  let <_cor4> =
			    %% Line 1415
			    call 'erlang':'+'
				(_cor3, 97)
			in  let <_cor5> =
				%% Line 1415
				apply 'tolower'/1
				    (Cs)
			    in  %% Line 1415
				[_cor4|_cor5]
		%% Line 1416
		<> when 'true' ->
		    let <_cor6> =
			%% Line 1417
			apply 'tolower'/1
			    (Cs)
		    in  %% Line 1417
			[C|_cor6]
	      end
	  ( <_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7})
		  -| [{'function_name',{'tolower',1}}] )
	    -| ['compiler_generated'] )
	end
'dn_ip6_int'/8 =
    %% Line 1420
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor22> =
	    %% Line 1421
	    apply 'dnib'/1
		(_cor0)
	in  let <_cor20> =
		%% Line 1421
		apply 'dnib'/1
		    (_cor1)
	    in  let <_cor18> =
		    %% Line 1421
		    apply 'dnib'/1
			(_cor2)
		in  let <_cor16> =
			%% Line 1421
			apply 'dnib'/1
			    (_cor3)
		    in  let <_cor14> =
			    %% Line 1422
			    apply 'dnib'/1
				(_cor4)
			in  let <_cor12> =
				%% Line 1422
				apply 'dnib'/1
				    (_cor5)
			    in  let <_cor10> =
				    %% Line 1422
				    apply 'dnib'/1
					(_cor6)
				in  let <_cor8> =
					%% Line 1422
					apply 'dnib'/1
					    (_cor7)
				    in  let <_cor9> =
					    %% Line 1422
					    call 'erlang':'++'
						(_cor8, [105|[112|[54|[46|[105|[110|[116]]]]]]])
					in  let <_cor11> =
						%% Line 1422
						call 'erlang':'++'
						    (_cor10, _cor9)
					    in  let <_cor13> =
						    %% Line 1422
						    call 'erlang':'++'
							(_cor12, _cor11)
						in  let <_cor15> =
							%% Line 1422
							call 'erlang':'++'
							    (_cor14, _cor13)
						    in  let <_cor17> =
							    %% Line 1421
							    call 'erlang':'++'
								(_cor16, _cor15)
							in  let <_cor19> =
								%% Line 1421
								call 'erlang':'++'
								    (_cor18, _cor17)
							    in  let <_cor21> =
								    %% Line 1421
								    call 'erlang':'++'
									(_cor20, _cor19)
								in  %% Line 1421
								    call 'erlang':'++'
									(_cor22, _cor21)
'dn_in_addr_arpa'/4 =
    %% Line 1424
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor13> =
	    %% Line 1425
	    call 'erlang':'integer_to_list'
		(_cor0)
	in  let <_cor10> =
		%% Line 1426
		call 'erlang':'integer_to_list'
		    (_cor1)
	    in  let <_cor7> =
		    %% Line 1427
		    call 'erlang':'integer_to_list'
			(_cor2)
		in  let <_cor4> =
			%% Line 1428
			call 'erlang':'integer_to_list'
			    (_cor3)
		    in  let <_cor5> =
			    %% Line 1428
			    call 'erlang':'++'
				(_cor4, [46|[105|[110|[45|[97|[100|[100|[114|[46|[97|[114|[112|[97]]]]]]]]]]]]])
			in  let <_cor6> =
				%% Line 1427
				[46|_cor5]
			    in  let <_cor8> =
				    %% Line 1427
				    call 'erlang':'++'
					(_cor7, _cor6)
				in  let <_cor9> =
					%% Line 1426
					[46|_cor8]
				    in  let <_cor11> =
					    %% Line 1426
					    call 'erlang':'++'
						(_cor10, _cor9)
					in  let <_cor12> =
						%% Line 1425
						[46|_cor11]
					    in  %% Line 1425
						call 'erlang':'++'
						    (_cor13, _cor12)
'dnib'/1 =
    %% Line 1430
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 1431
	    apply 'hex'/1
		(_cor0)
	in  let <_cor2> =
		%% Line 1431
		call 'erlang':'bsr'
		    (_cor0, 4)
	    in  let <_cor3> =
		    %% Line 1431
		    apply 'hex'/1
			(_cor2)
		in  let <_cor4> =
			%% Line 1431
			call 'erlang':'bsr'
			    (_cor0, 8)
		    in  let <_cor5> =
			    %% Line 1431
			    apply 'hex'/1
				(_cor4)
			in  let <_cor6> =
				%% Line 1431
				call 'erlang':'bsr'
				    (_cor0, 12)
			    in  let <_cor7> =
				    %% Line 1431
				    apply 'hex'/1
					(_cor6)
				in  %% Line 1431
				    [_cor1|[46|[_cor3|[46|[_cor5|[46|[_cor7|[46]]]]]]]]
'hex'/1 =
    %% Line 1433
    fun (_cor0) ->
	let <X4> =
	    %% Line 1434
	    call 'erlang':'band'
		(_cor0, 15)
	in  %% Line 1435
	    case <> of
	      <>
		  when call 'erlang':'<'
			(X4,
			 10) ->
		  call 'erlang':'+'
		      (X4, 48)
	      %% Line 1436
	      <> when 'true' ->
		  let <_cor2> =
		      call 'erlang':'-'
			  (X4, 10)
		  in  call 'erlang':'+'
			  (_cor2, 97)
	    end
'stripdot'/1 =
    %% Line 1441
    fun (_cor0) ->
	%% Line 1442
	case apply 'stripdot_1'/1
		 (_cor0) of
	  %% Line 1443
	  <'false'> when 'true' ->
	      _cor0
	  %% Line 1444
	  <N> when 'true' ->
	      N
	end
'stripdot_1'/1 =
    %% Line 1447
    fun (_cor0) ->
	case _cor0 of
	  <[46]> when 'true' ->
	      []
	  %% Line 1448
	  <[]> when 'true' ->
	      'false'
	  %% Line 1449
	  <[H|T]> when 'true' ->
	      %% Line 1450
	      case apply 'stripdot_1'/1
		       (T) of
		%% Line 1451
		<'false'> when 'true' ->
		    'false'
		%% Line 1452
		<N> when 'true' ->
		    [H|N]
	      end
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'stripdot_1',1}}] )
	    -| ['compiler_generated'] )
	end
'init_timer'/0 =
    %% Line 1458
    fun () ->
	let <_cor1> =
	    %% Line 1459
	    apply 'cache_refresh'/0
		()
	in  let <_cor0> =
		%% Line 1459
		call 'erlang':'self'
		    ()
	    in  %% Line 1459
		call 'erlang':'send_after'
		    (_cor1, _cor0, 'refresh_timeout')
'stop_timer'/1 =
    %% Line 1461
    fun (_cor0) ->
	case _cor0 of
	  <'undefined'> when 'true' ->
	      %% Line 1462
	      'undefined'
	  %% Line 1463
	  <Timer> when 'true' ->
	      %% Line 1464
	      call 'erlang':'cancel_timer'
		  (Timer)
	end
'cache_refresh'/0 =
    %% Line 1466
    fun () ->
	%% Line 1467
	case apply 'db_get'/1
		 ('cache_refresh_interval') of
	  %% Line 1468
	  <'undefined'> when 'true' ->
	      3600000
	  %% Line 1469
	  <Val> when 'true' ->
	      Val
	end
'do_refresh_cache'/1 =
    %% Line 1475
    fun (_cor0) ->
	let <Now> =
	    %% Line 1476
	    apply 'times'/0
		()
	in  let <_cor2> =
		%% Line 1477
		call 'ets':'first'
		    (_cor0)
	    in  %% Line 1477
		apply 'do_refresh_cache'/4
		    (_cor2, _cor0, Now, Now)
'do_refresh_cache'/4 =
    %% Line 1479
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <'$end_of_table',_cor24,_cor25,OldestT> when 'true' ->
	      %% Line 1480
	      OldestT
	  %% Line 1481
	  <Key,CacheDb,Now,OldestT> when 'true' ->
	      let <Fun> =
		  %% Line 1482
		  ( fun (_cor13,_cor12) ->
			case <_cor13,_cor12> of
			  <RR = {'dns_rr',_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34},T>
			      when ( try
				      let <_cor10> =
					  call 'erlang':'+'
					      (_cor32, _cor30)
				      in  call 'erlang':'<'
					      (_cor10, Now)
				  of <Try> ->
				      Try
				  catch <T,R> ->
				      'false'
				  -| ['compiler_generated'] ) ->
			      do  %% Line 1483
				  call 'ets':'match_delete'
				      (CacheDb, RR)
				  %% Line 1484
				  T
			  %% Line 1485
			  <{'dns_rr',_cor35,_cor36,_cor37,C,_cor38,_cor39,_cor40,_cor41,_cor42},T>
			      when call 'erlang':'<'
				    (C,
				     T) ->
			      %% Line 1486
			      C
			  %% Line 1487
			  <_cor43,T> when 'true' ->
			      %% Line 1488
			      T
			end
		    -| [{'id',{0,0,'-do_refresh_cache/4-fun-0-'}}] )
	      in  let <Next> =
		      %% Line 1490
		      call 'ets':'next'
			  (CacheDb, Key)
		  in  let <_cor18> =
			  %% Line 1491
			  call 'ets':'lookup'
			      (CacheDb, Key)
		      in  let <OldT> =
			      %% Line 1491
			      call 'lists':'foldl'
				  (Fun, OldestT, _cor18)
			  in  %% Line 1492
			      apply 'do_refresh_cache'/4
				  (Next, CacheDb, Now, OldT)
	end
'alloc_entry'/3 =
    %% Line 1503
    fun (_cor2,_cor1,_cor0) ->
	let <CurSize> =
	    %% Line 1504
	    call 'ets':'info'
		(_cor1, 'size')
	in  %% Line 1505
	    case call 'ets':'lookup'
		     (_cor2, 'cache_size') of
	      %% Line 1506
	      <[{'cache_size',Size}|[]]>
		  when let <_cor4> =
			call 'erlang':'=<'
			    (Size, CurSize)
		    in  let <_cor5> =
			    call 'erlang':'>'
				(Size, 0)
			in  call 'erlang':'and'
				(_cor4, _cor5) ->
		  let <_cor6> =
		      %% Line 1507
		      call 'erlang':'*'
			  (Size, 1.00000000000000005551e-01)
		  in  let <_cor7> =
			  %% Line 1507
			  call 'erlang':'trunc'
			      (_cor6)
		      in  let <_cor8> =
			      %% Line 1507
			      call 'erlang':'+'
				  (_cor7, 1)
			  in  %% Line 1507
			      apply 'alloc_entry'/4
				  (_cor1, CurSize, _cor0, _cor8)
	      %% Line 1508
	      <[{'cache_size',Size}|[]]>
		  when call 'erlang':'=<'
			(Size,
			 0) ->
		  %% Line 1509
		  'false'
	      %% Line 1510
	      <_cor13> when 'true' ->
		  %% Line 1511
		  'true'
	    end
'alloc_entry'/4 =
    %% Line 1514
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <OldestTM> =
	    %% Line 1515
	    apply 'do_refresh_cache'/1
		(_cor3)
	in  %% Line 1516
	    case call 'ets':'info'
		     (_cor3, 'size') of
	      %% Line 1517
	      <_cor10>
		  when call 'erlang':'=:='
			(_cor10,
			 _cor2) ->
		  %% Line 1519
		  apply 'delete_n_oldest'/4
		      (_cor3, _cor1, OldestTM, _cor0)
	      %% Line 1520
	      <_cor11> when 'true' ->
		  %% Line 1521
		  'true'
	    end
'delete_n_oldest'/4 =
    %% Line 1524
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 1525
	    call 'erlang':'-'
		(_cor2, _cor1)
	in  let <_cor5> =
		%% Line 1525
		call 'erlang':'*'
		    (_cor4, 2.99999999999999988898e-01)
	    in  let <_cor6> =
		    %% Line 1525
		    call 'erlang':'trunc'
			(_cor5)
		in  let <DelTM> =
			%% Line 1525
			call 'erlang':'+'
			    (_cor6, _cor1)
		    in  let <_cor8> =
			    %% Line 1526
			    apply 'delete_older'/3
				(_cor3, DelTM, _cor0)
			in  %% Line 1526
			    call 'erlang':'=/='
				(_cor8, 0)
'delete_older'/3 =
    %% Line 1531
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 1532
	    call 'ets':'first'
		(_cor2)
	in  %% Line 1532
	    apply 'delete_older'/5
		(_cor3, _cor2, _cor1, _cor0, 0)
'delete_older'/5 =
    %% Line 1534
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <'$end_of_table',_cor24,_cor25,_cor26,M> when 'true' ->
	      %% Line 1535
	      M
	  %% Line 1536
	  <_cor27,_cor28,_cor29,N,M>
	      when call 'erlang':'=<'
		    (N,
		     M) ->
	      %% Line 1537
	      M
	  %% Line 1538
	  <Domain,CacheDb,TM,N,M> when 'true' ->
	      let <Next> =
		  %% Line 1539
		  call 'ets':'next'
		      (CacheDb, Domain)
	      in  let <Fun> =
		      %% Line 1540
		      ( fun (_cor13,_cor12) ->
			    case <_cor13,_cor12> of
			      <RR = {'dns_rr',_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38},MM>
				  when call 'erlang':'=<'
					(_cor33,
					 TM) ->
				  do  %% Line 1541
				      call 'ets':'match_delete'
					  (CacheDb, RR)
				      %% Line 1542
				      call 'erlang':'+'
					  (MM, 1)
			      %% Line 1543
			      <_cor39,MM> when 'true' ->
				  %% Line 1544
				  MM
			    end
			-| [{'id',{0,0,'-delete_older/5-fun-0-'}}] )
		  in  let <_cor17> =
			  %% Line 1546
			  call 'ets':'lookup'
			      (CacheDb, Domain)
		      in  let <M1> =
			      %% Line 1546
			      call 'lists':'foldl'
				  (Fun, M, _cor17)
			  in  %% Line 1547
			      apply 'delete_older'/5
				  (Next, CacheDb, TM, N, M1)
	end
'lists_delete'/2 =
    %% Line 1552
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor5,[]> when 'true' ->
	      []
	  %% Line 1553
	  <E,[_cor6|Es]>
	      when call 'erlang':'=:='
		    (_cor6,
		     E) ->
	      %% Line 1554
	      apply 'lists_delete'/2
		  (E, Es)
	  %% Line 1555
	  <E,[X|Es]> when 'true' ->
	      let <_cor2> =
		  %% Line 1556
		  apply 'lists_delete'/2
		      (E, Es)
	      in  %% Line 1556
		  [X|_cor2]
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'lists_delete',2}}] )
	    -| ['compiler_generated'] )
	end
'lists_subtract'/2 =
    %% Line 1559
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 1560
	    ( fun (_cor3,_cor2) ->
		  apply 'lists_delete'/2
		      (_cor3, _cor2)
	      -| [{'id',{0,0,'-lists_subtract/2-fun-0-'}}] )
	in  %% Line 1560
	    call 'lists':'foldl'
		(_cor6, _cor1, _cor0)
'lists_keydelete'/3 =
    %% Line 1563
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_cor8,_cor9,[]> when 'true' ->
	      []
	  %% Line 1564
	  <K,N,[T|Ts]>
	      when try
		    let <_cor3> =
			call 'erlang':'element'
			    (N, T)
		    in  call 'erlang':'=:='
			    (_cor3, K)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1565
	      apply 'lists_keydelete'/3
		  (K, N, Ts)
	  %% Line 1566
	  <K,N,[X|Ts]> when 'true' ->
	      let <_cor4> =
		  %% Line 1567
		  apply 'lists_keydelete'/3
		      (K, N, Ts)
	      in  %% Line 1567
		  [X|_cor4]
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'lists_keydelete',3}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('inet_db')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('inet_db', _cor0)
end