module 'application_controller' ['change_application_data'/2,
				 'code_change'/3,
				 'config_change'/1,
				 'control_application'/1,
				 'do_config_diff'/2,
				 'get_all_env'/1,
				 'get_all_key'/1,
				 'get_application'/1,
				 'get_application_module'/1,
				 'get_env'/2,
				 'get_key'/2,
				 'get_loaded'/1,
				 'get_master'/1,
				 'get_pid_all_env'/1,
				 'get_pid_all_key'/1,
				 'get_pid_env'/2,
				 'get_pid_key'/2,
				 'handle_call'/3,
				 'handle_cast'/2,
				 'handle_info'/2,
				 'info'/0,
				 'init_starter'/4,
				 'load_application'/1,
				 'loaded_applications'/0,
				 'module_info'/0,
				 'module_info'/1,
				 'permit_application'/2,
				 'prep_config_change'/0,
				 'set_env'/3,
				 'set_env'/4,
				 'start'/1,
				 'start_application'/2,
				 'start_boot_application'/2,
				 'start_type'/1,
				 'stop_application'/1,
				 'terminate'/2,
				 'test_change_apps'/2,
				 'unload_application'/1,
				 'unset_env'/2,
				 'unset_env'/3,
				 'which_applications'/0,
				 'which_applications'/1]
    attributes [%% Line 19
		'type' =
		    %% Line 19
		    [{{'record','appl_data'},[{'record_field',19,{'atom',19,'name'}}|[{'record_field',19,{'atom',19,'regs'},{'nil',19}}|[{'record_field',19,{'atom',19,'phases'}}|[{'record_field',19,{'atom',19,'mod'}}|[{'record_field',19,{'atom',19,'mods'},{'nil',19}}|[{'record_field',20,{'atom',20,'inc_apps'}}|[{'record_field',20,{'atom',20,'maxP'},{'atom',20,'infinity'}}|[{'record_field',20,{'atom',20,'maxT'},{'atom',20,'infinity'}}]]]]]]]],[]}],
		%% Line 132
		'type' =
		    %% Line 132
		    [{'appname',{'type',132,'atom',[]},[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{{'record','state'},[{'record_field',134,{'atom',134,'loading'},{'nil',134}}|[{'record_field',134,{'atom',134,'starting'},{'nil',134}}|[{'record_field',134,{'atom',134,'start_p_false'},{'nil',134}}|[{'record_field',134,{'atom',134,'running'},{'nil',134}}|[{'record_field',135,{'atom',135,'control'},{'nil',135}}|[{'record_field',135,{'atom',135,'started'},{'nil',135}}|[{'record_field',135,{'atom',135,'start_req'},{'nil',135}}|[{'record_field',135,{'atom',135,'conf_data'}}]]]]]]]],[]}],
		%% Line 136
		'type' =
		    %% Line 136
		    [{'state',{'type',136,'record',[{'atom',136,'state'}]},[]}],
		%% Line 156
		'type' =
		    %% Line 156
		    [{{'record','appl'},[{'record_field',156,{'atom',156,'name'}}|[{'record_field',156,{'atom',156,'appl_data'}}|[{'record_field',156,{'atom',156,'descr'}}|[{'record_field',156,{'atom',156,'id'}}|[{'record_field',156,{'atom',156,'vsn'}}|[{'record_field',156,{'atom',156,'restart_type'}}|[{'record_field',156,{'atom',156,'inc_apps'}}|[{'record_field',156,{'atom',156,'apps'}}]]]]]]]],[]}],
		%% Line 607
		'type' =
		    %% Line 607
		    [{'calls',{'type',607,'union',[{'atom',607,'info'}|[{'atom',607,'prep_config_change'}|[{'atom',607,'which_applications'}|[{'type',608,'tuple',[{'type',608,'union',[{'atom',608,'config_change'}|[{'atom',608,'control_application'}|[{'atom',609,'load_application'}|[{'atom',609,'start_type'}|[{'atom',609,'stop_application'}|[{'atom',610,'unload_application'}]]]]]]}|[{'type',610,'term',[]}]]}|[{'type',611,'tuple',[{'atom',611,'change_application_data'}|[{'var',611,'_'}|[{'var',611,'_'}]]]}|[{'type',612,'tuple',[{'atom',612,'permit_application'}|[{'type',612,'union',[{'type',612,'atom',[]}|[{'type',612,'tuple',[{'atom',612,'application'}|[{'type',612,'atom',[]}|[{'var',612,'_'}]]]}]]}|[{'var',612,'_'}]]]}|[{'type',613,'tuple',[{'atom',613,'start_application'}|[{'var',613,'_'}|[{'var',613,'_'}]]]}|[{'type',614,'tuple',[{'atom',614,'unset_env'}|[{'var',614,'_'}|[{'var',614,'_'}|[{'var',614,'_'}]]]]}|[{'type',615,'tuple',[{'atom',615,'set_env'}|[{'var',615,'_'}|[{'var',615,'_'}|[{'var',615,'_'}|[{'var',615,'_'}]]]]]}]]]]]]]]]},[]}],
		%% Line 617
		'spec' =
		    %% Line 617
		    [{{'handle_call',3},[{'type',617,'fun',[{'type',617,'product',[{'type',617,'calls',[]}|[{'type',617,'tuple',[{'type',617,'pid',[]}|[{'type',617,'term',[]}]]}|[{'type',617,'state',[]}]]]}|[{'type',618,'union',[{'type',618,'tuple',[{'atom',618,'noreply'}|[{'type',618,'state',[]}]]}|[{'type',618,'tuple',[{'atom',618,'reply'}|[{'type',618,'term',[]}|[{'type',618,'state',[]}]]]}]]}]]}]}],
		%% Line 912
		'spec' =
		    %% Line 912
		    [{{'handle_cast',2},[{'type',912,'fun',[{'type',912,'product',[{'type',912,'tuple',[{'atom',912,'application_started'}|[{'type',912,'appname',[]}|[{'var',912,'_'}]]]}|[{'type',912,'state',[]}]]}|[{'type',913,'union',[{'type',913,'tuple',[{'atom',913,'noreply'}|[{'type',913,'state',[]}]]}|[{'type',913,'tuple',[{'atom',913,'stop'}|[{'type',913,'string',[]}|[{'type',913,'state',[]}]]]}]]}]]}]}],
		%% Line 1002
		'spec' =
		    %% Line 1002
		    [{{'handle_info',2},[{'type',1002,'fun',[{'type',1002,'product',[{'type',1002,'term',[]}|[{'type',1002,'state',[]}]]}|[{'type',1003,'union',[{'type',1003,'tuple',[{'atom',1003,'noreply'}|[{'type',1003,'state',[]}]]}|[{'type',1003,'tuple',[{'atom',1003,'stop'}|[{'type',1003,'string',[]}|[{'type',1003,'state',[]}]]]}]]}]]}]}],
		%% Line 1179
		'spec' =
		    %% Line 1179
		    [{{'terminate',2},[{'type',1179,'fun',[{'type',1179,'product',[{'type',1179,'term',[]}|[{'type',1179,'state',[]}]]}|[{'atom',1179,'ok'}]]}]}],
		%% Line 1216
		'spec' =
		    %% Line 1216
		    [{{'code_change',3},[{'type',1216,'fun',[{'type',1216,'product',[{'type',1216,'term',[]}|[{'type',1216,'state',[]}|[{'type',1216,'term',[]}]]]}|[{'type',1216,'tuple',[{'atom',1216,'ok'}|[{'type',1216,'state',[]}]]}]]}]}],
		%% Line 2006
		'spec' =
		    %% Line 2006
		    [{{'to_string',1},[{'type',2006,'fun',[{'type',2006,'product',[{'type',2006,'term',[]}]}|[{'type',2006,'string',[]}]]}]}]]
'start'/1 =
    %% Line 184
    fun (_cor0) ->
	let <Init> =
	    %% Line 187
	    call 'erlang':'self'
		()
	in  let <_cor2> =
		%% Line 188
		( fun () ->
		      apply 'init'/2
			  (Init, _cor0)
		  -| [{'id',{0,0,'-start/1-fun-0-'}}] )
	    in  let <AC> =
		    %% Line 188
		    call 'erlang':'spawn_link'
			(_cor2)
		in  %% Line 189
		    receive
		      %% Line 190
		      <{'ack',_cor5,'ok'}>
			  when call 'erlang':'=:='
				(_cor5,
				 AC) ->
			  %% Line 191
			  {'ok',AC}
		      %% Line 192
		      <{'ack',_cor6,{'error',Reason}}>
			  when call 'erlang':'=:='
				(_cor6,
				 AC) ->
			  %% Line 193
			  apply 'to_string'/1
			      (Reason)
		      %% Line 194
		      <{'EXIT',_X_Pid,Reason}> when 'true' ->
			  %% Line 195
			  apply 'to_string'/1
			      (Reason)
		    after 'infinity' ->
		      'true'
'load_application'/1 =
    %% Line 205
    fun (_cor0) ->
	%% Line 206
	call 'gen_server':'call'
	    ('application_controller', {'load_application',_cor0}, 'infinity')
'unload_application'/1 =
    %% Line 208
    fun (_cor0) ->
	%% Line 209
	call 'gen_server':'call'
	    ('application_controller', {'unload_application',_cor0}, 'infinity')
'start_application'/2 =
    %% Line 232
    fun (_cor1,_cor0) ->
	%% Line 233
	call 'gen_server':'call'
	    ('application_controller', {'start_application',_cor1,_cor0}, 'infinity')
'start_boot_application'/2 =
    %% Line 242
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 243
	    call 'application':'load'
		(_cor1)
	in  %% Line 243
	    case <_cor2,_cor0> of
	      %% Line 244
	      <'ok',_cor10> when 'true' ->
		  let <AppName> =
		      %% Line 245
		      apply 'get_appl_name'/1
			  (_cor1)
		  in  %% Line 246
		      call 'gen_server':'call'
			  ('application_controller', {'start_application',AppName,_cor0}, 'infinity')
	      %% Line 247
	      <{'error',{'already_loaded',AppName}},_cor11> when 'true' ->
		  %% Line 248
		  call 'gen_server':'call'
		      ('application_controller', {'start_application',AppName,_cor0}, 'infinity')
	      %% Line 249
	      <{'error',{'bad_environment_value',Env}},'permanent'> when 'true' ->
		  let <Txt> =
		      %% Line 250
		      call 'io_lib':'format'
			  ([66|[97|[100|[32|[101|[110|[118|[105|[114|[111|[110|[109|[101|[110|[116|[32|[118|[97|[114|[105|[97|[98|[108|[101|[58|[32|[126|[116|[112|[32|[32|[65|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[58|[32|[126|[112]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 251
																																				[Env|[_cor1|[]]])
		  in  let <_cor5> =
			  %% Line 252
			  call 'lists':'flatten'
			      (Txt)
		      in  let <_cor6> =
			      %% Line 252
			      call 'erlang':'list_to_atom'
				  (_cor5)
			  in  %% Line 252
			      call 'erlang':'exit'
				  ({'error',_cor6})
	      %% Line 253
	      <Error,_cor12> when 'true' ->
		  %% Line 254
		  Error
	    end
'stop_application'/1 =
    %% Line 257
    fun (_cor0) ->
	%% Line 258
	call 'gen_server':'call'
	    ('application_controller', {'stop_application',_cor0}, 'infinity')
'which_applications'/0 =
    %% Line 263
    fun () ->
	%% Line 264
	call 'gen_server':'call'
	    ('application_controller', 'which_applications')
'which_applications'/1 =
    %% Line 265
    fun (_cor0) ->
	%% Line 266
	call 'gen_server':'call'
	    ('application_controller', 'which_applications', _cor0)
'loaded_applications'/0 =
    %% Line 268
    fun () ->
	let <_cor2> =
	    %% Line 270
	    ( fun (_cor0) ->
		  case _cor0 of
		    <[{{'loaded',AppName},{'appl',_cor3,_cor4,Descr,_cor5,Vsn,_cor6,_cor7,_cor8}}|[]]> when 'true' ->
			%% Line 271
			{'true',{AppName,Descr,Vsn}}
		    %% Line 272
		    <_cor9> when 'true' ->
			%% Line 273
			'false'
		  end
	      -| [{'id',{0,0,'-loaded_applications/0-fun-0-'}}] )
	in  %% Line 269
	    call 'ets':'filter'
		('ac_tab', _cor2, %% Line 275
				  [])
'info'/0 =
    %% Line 278
    fun () ->
	%% Line 279
	call 'gen_server':'call'
	    ('application_controller', 'info')
'control_application'/1 =
    %% Line 281
    fun (_cor0) ->
	%% Line 282
	call 'gen_server':'call'
	    ('application_controller', {'control_application',_cor0}, 'infinity')
'change_application_data'/2 =
    %% Line 306
    fun (_cor1,_cor0) ->
	%% Line 307
	call 'gen_server':'call'
	    ('application_controller', %% Line 308
				       {'change_application_data',_cor1,_cor0}, %% Line 309
										'infinity')
'prep_config_change'/0 =
    %% Line 311
    fun () ->
	%% Line 312
	call 'gen_server':'call'
	    ('application_controller', %% Line 313
				       'prep_config_change', %% Line 314
							     'infinity')
'config_change'/1 =
    %% Line 317
    fun (_cor0) ->
	%% Line 318
	call 'gen_server':'call'
	    ('application_controller', %% Line 319
				       {'config_change',_cor0}, %% Line 320
								'infinity')
'get_pid_env'/2 =
    %% Line 324
    fun (_cor1,_cor0) ->
	%% Line 325
	case call 'ets':'match'
		 ('ac_tab', {{'application_master','$1'},_cor1}) of
	  %% Line 326
	  <[[AppName|[]]|[]]> when 'true' ->
	      apply 'get_env'/2
		  (AppName, _cor0)
	  %% Line 327
	  <_cor5> when 'true' ->
	      'undefined'
	end
'get_env'/2 =
    %% Line 330
    fun (_cor1,_cor0) ->
	%% Line 331
	case call 'ets':'lookup'
		 ('ac_tab', {'env',_cor1,_cor0}) of
	  %% Line 332
	  <[{_cor5,Val}|[]]> when 'true' ->
	      {'ok',Val}
	  %% Line 333
	  <_cor6> when 'true' ->
	      'undefined'
	end
'get_pid_all_env'/1 =
    %% Line 336
    fun (_cor0) ->
	%% Line 337
	case call 'ets':'match'
		 ('ac_tab', {{'application_master','$1'},_cor0}) of
	  %% Line 338
	  <[[AppName|[]]|[]]> when 'true' ->
	      apply 'get_all_env'/1
		  (AppName)
	  %% Line 339
	  <_cor3> when 'true' ->
	      []
	end
'get_all_env'/1 =
    %% Line 342
    fun (_cor0) ->
	let <_cor4> =
	    %% Line 343
	    ( fun (_cor2) ->
		  case _cor2 of
		    <[Key|[Val|[]]]> when 'true' ->
			{Key,Val}
		    ( <_cor3> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor3})
			    -| [{'function_name',{'-get_all_env/1-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-get_all_env/1-fun-0-'}}] )
	in  let <_cor1> =
		%% Line 344
		call 'ets':'match'
		    ('ac_tab', {{'env',_cor0,'$1'},'$2'})
	    in  %% Line 343
		call 'lists':'map'
		    (_cor4, _cor1)
'get_pid_key'/2 =
    %% Line 349
    fun (_cor1,_cor0) ->
	%% Line 350
	case call 'ets':'match'
		 ('ac_tab', {{'application_master','$1'},_cor1}) of
	  %% Line 351
	  <[[AppName|[]]|[]]> when 'true' ->
	      apply 'get_key'/2
		  (AppName, _cor0)
	  %% Line 352
	  <_cor5> when 'true' ->
	      'undefined'
	end
'get_key'/2 =
    %% Line 355
    fun (_cor1,_cor0) ->
	%% Line 356
	case call 'ets':'lookup'
		 ('ac_tab', {'loaded',_cor1}) of
	  %% Line 357
	  <[{_cor41,Appl}|[]]> when 'true' ->
	      %% Line 358
	      case _cor0 of
		%% Line 359
		<'description'> when 'true' ->
		    %% Line 360
		    ( case Appl of
			( <( {'appl',_cor42,_cor43,_rec0,_cor44,_cor45,_cor46,_cor47,_cor48}
			     -| ['compiler_generated'] )> when 'true' ->
			      {'ok',_rec0}
			  -| ['compiler_generated'] )
			( <_cor49> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','appl'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 361
		<'id'> when 'true' ->
		    %% Line 362
		    ( case Appl of
			( <( {'appl',_cor50,_cor51,_cor52,_rec1,_cor53,_cor54,_cor55,_cor56}
			     -| ['compiler_generated'] )> when 'true' ->
			      {'ok',_rec1}
			  -| ['compiler_generated'] )
			( <_cor57> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','appl'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 363
		<'vsn'> when 'true' ->
		    %% Line 364
		    ( case Appl of
			( <( {'appl',_cor58,_cor59,_cor60,_cor61,_rec2,_cor62,_cor63,_cor64}
			     -| ['compiler_generated'] )> when 'true' ->
			      {'ok',_rec2}
			  -| ['compiler_generated'] )
			( <_cor65> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','appl'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 365
		<'modules'> when 'true' ->
		    %% Line 366
		    ( case Appl of
			( <( {'appl',_cor66,_rec4,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72}
			     -| ['compiler_generated'] )> when 'true' ->
			      ( case _rec4 of
				  ( <( {'appl_data',_cor74,_cor75,_cor76,_cor77,_rec3,_cor78,_cor79,_cor80}
				       -| ['compiler_generated'] )> when 'true' ->
					{'ok',_rec3}
				    -| ['compiler_generated'] )
				  ( <_cor81> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','appl_data'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_cor73> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','appl'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 367
		<'maxP'> when 'true' ->
		    %% Line 368
		    ( case Appl of
			( <( {'appl',_cor82,_rec6,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88}
			     -| ['compiler_generated'] )> when 'true' ->
			      ( case _rec6 of
				  ( <( {'appl_data',_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_rec5,_cor96}
				       -| ['compiler_generated'] )> when 'true' ->
					{'ok',_rec5}
				    -| ['compiler_generated'] )
				  ( <_cor97> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','appl_data'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_cor89> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','appl'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 369
		<'maxT'> when 'true' ->
		    %% Line 370
		    ( case Appl of
			( <( {'appl',_cor98,_rec8,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104}
			     -| ['compiler_generated'] )> when 'true' ->
			      ( case _rec8 of
				  ( <( {'appl_data',_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_rec7}
				       -| ['compiler_generated'] )> when 'true' ->
					{'ok',_rec7}
				    -| ['compiler_generated'] )
				  ( <_cor113> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','appl_data'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_cor105> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','appl'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 371
		<'registered'> when 'true' ->
		    %% Line 372
		    ( case Appl of
			( <( {'appl',_cor114,_rec10,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120}
			     -| ['compiler_generated'] )> when 'true' ->
			      ( case _rec10 of
				  ( <( {'appl_data',_cor122,_rec9,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128}
				       -| ['compiler_generated'] )> when 'true' ->
					{'ok',_rec9}
				    -| ['compiler_generated'] )
				  ( <_cor129> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','appl_data'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_cor121> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','appl'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 373
		<'included_applications'> when 'true' ->
		    %% Line 374
		    ( case Appl of
			( <( {'appl',_cor130,_cor131,_cor132,_cor133,_cor134,_cor135,_rec11,_cor136}
			     -| ['compiler_generated'] )> when 'true' ->
			      {'ok',_rec11}
			  -| ['compiler_generated'] )
			( <_cor137> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','appl'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 375
		<'applications'> when 'true' ->
		    %% Line 376
		    ( case Appl of
			( <( {'appl',_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_rec12}
			     -| ['compiler_generated'] )> when 'true' ->
			      {'ok',_rec12}
			  -| ['compiler_generated'] )
			( <_cor145> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','appl'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 377
		<'env'> when 'true' ->
		    let <_cor28> =
			%% Line 378
			apply 'get_all_env'/1
			    (_cor1)
		    in  %% Line 378
			{'ok',_cor28}
		%% Line 379
		<'mod'> when 'true' ->
		    %% Line 380
		    ( case Appl of
			( <( {'appl',_cor146,_rec14,_cor147,_cor148,_cor149,_cor150,_cor151,_cor152}
			     -| ['compiler_generated'] )> when 'true' ->
			      ( case _rec14 of
				  ( <( {'appl_data',_cor154,_cor155,_cor156,_rec13,_cor157,_cor158,_cor159,_cor160}
				       -| ['compiler_generated'] )> when 'true' ->
					{'ok',_rec13}
				    -| ['compiler_generated'] )
				  ( <_cor161> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','appl_data'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_cor153> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','appl'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 381
		<'start_phases'> when 'true' ->
		    %% Line 382
		    ( case Appl of
			( <( {'appl',_cor162,_rec16,_cor163,_cor164,_cor165,_cor166,_cor167,_cor168}
			     -| ['compiler_generated'] )> when 'true' ->
			      ( case _rec16 of
				  ( <( {'appl_data',_cor170,_cor171,_rec15,_cor172,_cor173,_cor174,_cor175,_cor176}
				       -| ['compiler_generated'] )> when 'true' ->
					{'ok',_rec15}
				    -| ['compiler_generated'] )
				  ( <_cor177> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','appl_data'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <_cor169> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','appl'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 383
		<_cor178> when 'true' ->
		    'undefined'
	      end
	  %% Line 385
	  <_cor179> when 'true' ->
	      %% Line 386
	      'undefined'
	end
'get_pid_all_key'/1 =
    %% Line 389
    fun (_cor0) ->
	%% Line 390
	case call 'ets':'match'
		 ('ac_tab', {{'application_master','$1'},_cor0}) of
	  %% Line 391
	  <[[AppName|[]]|[]]> when 'true' ->
	      apply 'get_all_key'/1
		  (AppName)
	  %% Line 392
	  <_cor3> when 'true' ->
	      []
	end
'get_all_key'/1 =
    %% Line 395
    fun (_cor0) ->
	%% Line 396
	case call 'ets':'lookup'
		 ('ac_tab', {'loaded',_cor0}) of
	  %% Line 397
	  <[{_cor38,Appl}|[]]> when 'true' ->
	      %% Line 398
	      ( case Appl of
		  ( <( {'appl',_cor39,_cor40,_rec17,_cor41,_cor42,_cor43,_cor44,_cor45}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 401
			( case _cor40 of
			    ( <( {'appl_data',_cor71,_cor72,_cor73,_cor74,_rec20,_cor75,_cor76,_cor77}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_cor128> =
				      ( {%% Line 404
					 'appl_data',_cor71,_cor72,_cor73,_cor74,_rec20,_cor75,_cor76,_cor77}
					-| ['compiler_generated'] )
				  in  let <_cor27> =
					  %% Line 407
					  apply 'get_all_env'/1
					      (_cor0)
				      in  %% Line 408
					  ( case _cor128 of
					      ( <( {'appl_data',_cor151,_cor152,_cor153,_rec30,_cor154,_cor155,_cor156,_cor157}
						   -| ['compiler_generated'] )> when 'true' ->
						    {'ok',[{'description',_rec17}|[{'id',_cor41}|[{'vsn',_cor42}|[{'modules',_rec20}|[{'maxP',_cor76}|[{'maxT',_cor77}|[{'registered',_cor72}|[{'included_applications',_cor44}|[{'applications',_cor45}|[{'env',_cor27}|[{'mod',_rec30}|%% Line 409
																																			 [{'start_phases',_cor153}|%% Line 410
																																						   []]]]]]]]]]]]]}
						-| ['compiler_generated'] )
					      ( <_cor158> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','appl_data'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <_cor78> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','appl_data'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor46> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','appl'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 411
	  <_cor175> when 'true' ->
	      %% Line 412
	      'undefined'
	end
'start_type'/1 =
    %% Line 416
    fun (_cor0) ->
	%% Line 417
	case call 'ets':'match'
		 ('ac_tab', {{'application_master','$1'},_cor0}) of
	  %% Line 418
	  <[[AppName|[]]|[]]> when 'true' ->
	      %% Line 419
	      call 'gen_server':'call'
		  ('application_controller', {'start_type',AppName}, 'infinity')
	  %% Line 420
	  <_X_X> when 'true' ->
	      %% Line 421
	      'undefined'
	end
'get_master'/1 =
    %% Line 429
    fun (_cor0) ->
	%% Line 430
	case call 'ets':'lookup'
		 ('ac_tab', {'application_master',_cor0}) of
	  %% Line 431
	  <[{_cor3,Pid}|[]]> when 'true' ->
	      Pid
	  %% Line 432
	  <_cor4> when 'true' ->
	      'undefined'
	end
'get_application'/1 =
    %% Line 435
    fun (_cor0) ->
	%% Line 436
	case call 'ets':'match'
		 ('ac_tab', {{'application_master','$1'},_cor0}) of
	  %% Line 437
	  <[[AppName|[]]|[]]> when 'true' ->
	      {'ok',AppName}
	  %% Line 438
	  <_cor3> when 'true' ->
	      'undefined'
	end
'get_application_module'/1 =
    %% Line 441
    fun (_cor0) ->
	let <AppModules> =
	    %% Line 444
	    call 'ets':'match'
		('ac_tab', {{'loaded','$1'},{'appl','_',{'appl_data','_','_','_','_','$2','_','_','_'},'_','_','_','_','_','_'}})
	in  %% Line 445
	    apply 'get_application_module'/2
		(_cor0, AppModules)
'get_application_module'/2 =
    %% Line 447
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Module,[[AppName|[Modules|[]]]|AppModules]> when 'true' ->
	      %% Line 448
	      case call 'lists':'member'
		       (Module, Modules) of
		%% Line 449
		<'true'> when 'true' ->
		    %% Line 450
		    {'ok',AppName}
		%% Line 451
		<'false'> when 'true' ->
		    %% Line 452
		    apply 'get_application_module'/2
			(Module, AppModules)
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 454
	  <_X_Module,[]> when 'true' ->
	      %% Line 455
	      'undefined'
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'get_application_module',2}}] )
	    -| ['compiler_generated'] )
	end
'permit_application'/2 =
    %% Line 457
    fun (_cor1,_cor0) ->
	%% Line 458
	call 'gen_server':'call'
	    ('application_controller', %% Line 459
				       {'permit_application',_cor1,_cor0}, %% Line 460
									   'infinity')
'set_env'/3 =
    %% Line 463
    fun (_cor2,_cor1,_cor0) ->
	%% Line 464
	call 'gen_server':'call'
	    ('application_controller', {'set_env',_cor2,_cor1,_cor0,[]})
'set_env'/4 =
    %% Line 465
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Timeout> =
	    %% Line 466
	    call 'proplists':'get_value'
		('timeout', _cor0, 5000)
	in  %% Line 467
	    call 'gen_server':'call'
		('application_controller', {'set_env',_cor3,_cor2,_cor1,_cor0}, Timeout)
'unset_env'/2 =
    %% Line 469
    fun (_cor1,_cor0) ->
	%% Line 470
	call 'gen_server':'call'
	    ('application_controller', {'unset_env',_cor1,_cor0,[]})
'unset_env'/3 =
    %% Line 471
    fun (_cor2,_cor1,_cor0) ->
	let <Timeout> =
	    %% Line 472
	    call 'proplists':'get_value'
		('timeout', _cor0, 5000)
	in  %% Line 473
	    call 'gen_server':'call'
		('application_controller', {'unset_env',_cor2,_cor1,_cor0}, Timeout)
'init'/2 =
    %% Line 478
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 479
	    call 'erlang':'self'
		()
	in  do  %% Line 479
		call 'erlang':'register'
		    ('application_controller', _cor2)
		do  %% Line 480
		    call 'erlang':'process_flag'
			('trap_exit', 'true')
		    do  %% Line 481
			call 'erlang':'put'
			    ('$ancestors', [_cor1|[]])
			do  %% Line 482
			    call 'erlang':'put'
				('$initial_call', {'application_controller','start',1})
			    let <_cor3> =
				catch
				    %% Line 484
				    apply 'check_conf'/0
					()
			    in  %% Line 484
				case _cor3 of
				  %% Line 485
				  <{'ok',ConfData}> when 'true' ->
				      %% Line 491
				      case apply 'check_conf_data'/1
					       (ConfData) of
					%% Line 492
					<'ok'> when 'true' ->
					    let <_X_> =
						%% Line 493
						( call 'ets':'new'
						      ('ac_tab', ['set'|['public'|['named_table']]])
						  -| ['result_not_wanted'] )
					    in  let <S> =
						    %% Line 494
						    {'state',[],[],[],[],[],[],[],ConfData}
						in  %% Line 495
						    case apply 'make_appl'/1
							     (_cor0) of
						      <{'ok',KAppl}> when 'true' ->
							  let <_cor7> =
							      catch
								  %% Line 496
								  apply 'load'/2
								      (S, KAppl)
							  in  %% Line 496
							      case _cor7 of
								%% Line 497
								<{'EXIT',LoadError}> when 'true' ->
								    let <Reason> = {%% Line 498
									 'load error',%% Line 498
										      LoadError}
								    in  let <_cor10> =
									    %% Line 499
									    call 'erlang':'self'
										()
									in  let <_cor9> =
										%% Line 499
										apply 'to_string'/1
										    (Reason)
									    in  %% Line 499
										call 'erlang':'!'
										    (_cor1, {'ack',_cor10,{'error',_cor9}})
								%% Line 500
								<{'error',Error}> when 'true' ->
								    let <_cor12> =
									%% Line 501
									call 'erlang':'self'
									    ()
								    in  let <_cor11> =
									    %% Line 501
									    apply 'to_string'/1
										(Error)
									in  %% Line 501
									    call 'erlang':'!'
										(_cor1, {'ack',_cor12,{'error',_cor11}})
								%% Line 502
								<{'ok',NewS}> when 'true' ->
								    let <_cor13> =
									%% Line 503
									call 'erlang':'self'
									    ()
								    in  do  %% Line 503
									    call 'erlang':'!'
										(_cor1, {'ack',_cor13,'ok'})
									    %% Line 504
									    call 'gen_server':'enter_loop'
										('application_controller', [], NewS, %% Line 505
														     {'local','application_controller'})
								( <_cor14> when 'true' ->
								      primop 'match_fail'
									  ({'case_clause',_cor14})
								  -| ['compiler_generated'] )
							      end
						      ( <_cor6> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_cor6})
							-| ['compiler_generated'] )
						    end
					%% Line 507
					<{'error',ErrorStr}> when 'true' ->
					    let <_cor15> =
						%% Line 508
						call 'io_lib':'format'
						    ([105|[110|[118|[97|[108|[105|[100|[32|[99|[111|[110|[102|[105|[103|[32|[100|[97|[116|[97|[58|[32|[126|[116|[115]]]]]]]]]]]]]]]]]]]]]]]], [ErrorStr|[]])
					    in  let <Str> =
						    %% Line 508
						    call 'lists':'flatten'
							(_cor15)
						in  let <_cor18> =
							%% Line 509
							call 'erlang':'self'
							    ()
						    in  let <_cor17> =
							    %% Line 509
							    apply 'to_string'/1
								(Str)
							in  %% Line 509
							    call 'erlang':'!'
								(_cor1, {'ack',_cor18,{'error',_cor17}})
					( <_cor19> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_cor19})
					  -| ['compiler_generated'] )
				      end
				  %% Line 511
				  <{'error',{File,Line,Str}}> when 'true' ->
				      let <_cor20> =
					  %% Line 513
					  call 'io_lib':'format'
					      ([101|[114|[114|[111|[114|[32|[105|[110|[32|[99|[111|[110|[102|[105|[103|[32|[102|[105|[108|[101|[32|[126|[116|[112|[32|[40|[126|[119|[41|[58|[32|[126|[116|[115]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 515
																														  [File|[Line|[Str|[]]]])
				      in  let <ReasonStr> =
					      %% Line 513
					      call 'lists':'flatten'
						  (_cor20)
					  in  let <_cor23> =
						  %% Line 516
						  call 'erlang':'self'
						      ()
					      in  let <_cor22> =
						      %% Line 516
						      apply 'to_string'/1
							  (ReasonStr)
						  in  %% Line 516
						      call 'erlang':'!'
							  (_cor1, {'ack',_cor23,{'error',_cor22}})
				  ( <_cor24> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor24})
				    -| ['compiler_generated'] )
				end
'check_conf_data'/1 =
    %% Line 523
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 524
	      'ok'
	  %% Line 525
	  <ConfData>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 526
	      case ConfData of
		<[Application|ConfDataRem]> when 'true' ->
		    %% Line 527
		    case Application of
		      %% Line 528
		      <{'kernel',List}>
			  when call 'erlang':'is_list'
				(List) ->
			  %% Line 529
			  case apply 'check_para_kernel'/1
				   (List) of
			    %% Line 530
			    <'ok'> when 'true' ->
				%% Line 531
				apply 'check_conf_data'/1
				    (ConfDataRem)
			    %% Line 532
			    <Error1> when 'true' ->
				%% Line 533
				Error1
			  end
		      %% Line 535
		      <{AppName,List}>
			  when let <_cor3> =
				call 'erlang':'is_atom'
				    (AppName)
			    in  let <_cor4> =
				    call 'erlang':'is_list'
					(List)
				in  call 'erlang':'and'
					(_cor3, _cor4) ->
			  let <_cor5> =
			      %% Line 536
			      call 'erlang':'atom_to_list'
				  (AppName)
			  in  %% Line 536
			      case apply 'check_para'/2
				       (List, _cor5) of
				%% Line 537
				<'ok'> when 'true' ->
				    %% Line 538
				    apply 'check_conf_data'/1
					(ConfDataRem)
				%% Line 539
				<Error2> when 'true' ->
				    %% Line 540
				    Error2
			      end
		      %% Line 542
		      <{AppName,List}>
			  when call 'erlang':'is_list'
				(List) ->
			  let <_cor7> =
			      %% Line 544
			      call 'io_lib':'format'
				  ([126|[116|[112]]], [AppName|[]])
			  in  let <_cor8> =
				  %% Line 544
				  call 'lists':'flatten'
				      (_cor7)
			      in  let <_cor9> =
				      %% Line 545
				      call 'erlang':'++'
					  (_cor8, [59|[32|[97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[32|[110|[97|[109|[101|[32|[109|[117|[115|[116|[32|[98|[101|[32|[97|[110|[32|[97|[116|[111|[109]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				  in  let <ErrMsg> =
					  %% Line 544
					  call 'erlang':'++'
					      ([97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[58|[32]]]]]]]]]]]]], _cor9)
				      in  %% Line 546
					  {'error',ErrMsg}
		      %% Line 547
		      <{AppName,_X_List}> when 'true' ->
			  let <_cor11> =
			      %% Line 549
			      call 'io_lib':'format'
				  ([126|[116|[112]]], [AppName|[]])
			  in  let <_cor12> =
				  %% Line 549
				  call 'lists':'flatten'
				      (_cor11)
			      in  let <_cor13> =
				      %% Line 550
				      call 'erlang':'++'
					  (_cor12, [59|[32|[112|[97|[114|[97|[109|[101|[116|[101|[114|[115|[32|[109|[117|[115|[116|[32|[98|[101|[32|[97|[32|[108|[105|[115|[116]]]]]]]]]]]]]]]]]]]]]]]]]]])
				  in  let <ErrMsg> =
					  %% Line 549
					  call 'erlang':'++'
					      ([97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[58|[32]]]]]]]]]]]]], _cor13)
				      in  %% Line 551
					  {'error',ErrMsg}
		      %% Line 552
		      <Else> when 'true' ->
			  let <_cor15> =
			      %% Line 554
			      call 'io_lib':'format'
				  ([32|[126|[116|[112]]]], [Else|[]])
			  in  let <_cor16> =
				  %% Line 554
				  call 'lists':'flatten'
				      (_cor15)
			      in  let <ErrMsg> =
				      %% Line 553
				      call 'erlang':'++'
					  ([105|[110|[118|[97|[108|[105|[100|[32|[97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[32|[110|[97|[109|[101|[58|[32]]]]]]]]]]]]]]]]]]]]]]]]]], _cor16)
				  in  %% Line 555
				      {'error',ErrMsg}
		    end
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor1})
		  -| ['compiler_generated'] )
	      end
	  %% Line 557
	  <_X_ConfData> when 'true' ->
	      %% Line 558
	      {'error','configuration must be a list ended by <dot><whitespace>'}
	end
'check_para_kernel'/1 =
    %% Line 562
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 563
	      'ok'
	  %% Line 564
	  <[{'distributed',Apps}|ParaList]>
	      when call 'erlang':'is_list'
		    (Apps) ->
	      %% Line 565
	      case apply 'check_distributed'/1
		       (Apps) of
		%% Line 566
		<Error = {'error',_X_ErrorMsg}> when 'true' ->
		    %% Line 567
		    Error
		%% Line 568
		<_cor9> when 'true' ->
		    %% Line 569
		    apply 'check_para_kernel'/1
			(ParaList)
	      end
	  %% Line 571
	  <[{'distributed',_X_Apps}|_X_ParaList]> when 'true' ->
	      %% Line 572
	      {'error',[97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[58|[32|[107|[101|[114|[110|[101|[108|[59|[32|[101|[114|[114|[111|[110|[101|[111|[117|[115|[32|[112|[97|[114|[97|[109|[101|[116|[101|[114|[58|[32|[100|[105|[115|[116|[114|[105|[98|[117|[116|[101|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}
	  %% Line 573
	  <[{Para,_X_Val}|ParaList]>
	      when call 'erlang':'is_atom'
		    (Para) ->
	      %% Line 574
	      apply 'check_para_kernel'/1
		  (ParaList)
	  %% Line 575
	  <[{Para,_X_Val}|_X_ParaList]> when 'true' ->
	      let <_cor2> =
		  %% Line 577
		  call 'io_lib':'format'
		      ([126|[116|[112]]], [Para|[]])
	      in  let <_cor3> =
		      %% Line 577
		      call 'lists':'flatten'
			  (_cor2)
		  in  let <_cor4> =
			  %% Line 576
			  call 'erlang':'++'
			      ([97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[58|[32|[107|[101|[114|[110|[101|[108|[59|[32|[105|[110|[118|[97|[108|[105|[100|[32|[112|[97|[114|[97|[109|[101|[116|[101|[114|[58|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor3)
		      in  %% Line 576
			  {'error',_cor4}
	  %% Line 578
	  <Else> when 'true' ->
	      let <_cor5> =
		  %% Line 580
		  call 'io_lib':'format'
		      ([126|[116|[112]]], [Else|[]])
	      in  let <_cor6> =
		      %% Line 580
		      call 'lists':'flatten'
			  (_cor5)
		  in  let <_cor7> =
			  %% Line 579
			  call 'erlang':'++'
			      ([97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[58|[32|[107|[101|[114|[110|[101|[108|[59|[32|[105|[110|[118|[97|[108|[105|[100|[32|[112|[97|[114|[97|[109|[101|[116|[101|[114|[32|[108|[105|[115|[116|[58|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor6)
		      in  %% Line 579
			  {'error',_cor7}
	end
'check_distributed'/1 =
    %% Line 583
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 584
	      'ok'
	  %% Line 585
	  <[{App,List}|Apps]>
	      when let <_cor1> =
		    call 'erlang':'is_atom'
			(App)
		in  let <_cor2> =
			call 'erlang':'is_list'
			    (List)
		    in  call 'erlang':'and'
			    (_cor1, _cor2) ->
	      %% Line 586
	      apply 'check_distributed'/1
		  (Apps)
	  %% Line 587
	  <[{App,'infinity',List}|Apps]>
	      when let <_cor3> =
		    call 'erlang':'is_atom'
			(App)
		in  let <_cor4> =
			call 'erlang':'is_list'
			    (List)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      %% Line 588
	      apply 'check_distributed'/1
		  (Apps)
	  %% Line 589
	  <[{App,Time,List}|Apps]>
	      when try
		    let <_cor5> =
			call 'erlang':'is_atom'
			    (App)
		    in  let <_cor6> =
			    call 'erlang':'is_integer'
				(Time)
			in  let <_cor7> =
				call 'erlang':'is_list'
				    (List)
			    in  let <_cor8> =
				    call 'erlang':'and'
					(_cor6, _cor7)
				in  call 'erlang':'and'
					(_cor5, _cor8)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 590
	      apply 'check_distributed'/1
		  (Apps)
	  %% Line 591
	  <_X_Else> when 'true' ->
	      %% Line 592
	      {'error',[97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[58|[32|[107|[101|[114|[110|[101|[108|[59|[32|[101|[114|[114|[111|[110|[101|[111|[117|[115|[32|[112|[97|[114|[97|[109|[101|[116|[101|[114|[58|[32|[100|[105|[115|[116|[114|[105|[98|[117|[116|[101|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}
	end
'check_para'/2 =
    %% Line 595
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],_X_AppName> when 'true' ->
	      %% Line 596
	      'ok'
	  %% Line 597
	  <[{Para,_X_Val}|ParaList],AppName>
	      when call 'erlang':'is_atom'
		    (Para) ->
	      %% Line 598
	      apply 'check_para'/2
		  (ParaList, AppName)
	  %% Line 599
	  <[{Para,_X_Val}|_X_ParaList],AppName> when 'true' ->
	      let <_cor2> =
		  %% Line 601
		  call 'io_lib':'format'
		      ([126|[116|[112]]], [Para|[]])
	      in  let <_cor3> =
		      %% Line 601
		      call 'lists':'flatten'
			  (_cor2)
		  in  let <_cor4> =
			  %% Line 600
			  call 'erlang':'++'
			      ([59|[32|[105|[110|[118|[97|[108|[105|[100|[32|[112|[97|[114|[97|[109|[101|[116|[101|[114|[58|[32]]]]]]]]]]]]]]]]]]]]], _cor3)
		      in  let <_cor5> =
			      %% Line 600
			      call 'erlang':'++'
				  (AppName, _cor4)
			  in  let <_cor6> =
				  %% Line 600
				  call 'erlang':'++'
				      ([97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[58|[32]]]]]]]]]]]]], _cor5)
			      in  %% Line 600
				  {'error',_cor6}
	  %% Line 602
	  <[Else|_X_ParaList],AppName> when 'true' ->
	      let <_cor7> =
		  %% Line 604
		  call 'io_lib':'format'
		      ([126|[116|[112]]], [Else|[]])
	      in  let <_cor8> =
		      %% Line 604
		      call 'lists':'flatten'
			  (_cor7)
		  in  let <_cor9> =
			  %% Line 603
			  call 'erlang':'++'
			      ([59|[32|[105|[110|[118|[97|[108|[105|[100|[32|[112|[97|[114|[97|[109|[101|[116|[101|[114|[58|[32]]]]]]]]]]]]]]]]]]]]], _cor8)
		      in  let <_cor10> =
			      %% Line 603
			      call 'erlang':'++'
				  (AppName, _cor9)
			  in  let <_cor11> =
				  %% Line 603
				  call 'erlang':'++'
				      ([97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[58|[32]]]]]]]]]]]]], _cor10)
			      in  %% Line 603
				  {'error',_cor11}
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'check_para',2}}] )
	    -| ['compiler_generated'] )
	end
'handle_call'/3 =
    %% Line 620
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'load_application',Application},From,S> when 'true' ->
	      let <_cor3> =
		  catch
		      %% Line 621
		      apply 'do_load_application'/2
			  (Application, S)
	      in  %% Line 621
		  case _cor3 of
		    %% Line 622
		    <{'ok',NewS}> when 'true' ->
			let <AppName> =
			    %% Line 623
			    apply 'get_appl_name'/1
				(Application)
			in  %% Line 624
			    case apply 'cntrl'/3
				     (AppName, S, {'ac_load_application_req',AppName}) of
			      %% Line 625
			      <'true'> when 'true' ->
				  %% Line 627
				  ( case S of
				      ( <( {'state',_rec36,_cor203,_cor204,_cor205,_cor206,_cor207,_cor208,_cor209}
					   -| ['compiler_generated'] )> when 'true' ->
					    let <_rec34> =
						[{AppName,From}|_rec36]
					    in  let <_cor10> =
						    call 'erlang':'setelement'
							(2, S, _rec34)
						in  {'noreply',_cor10}
					-| ['compiler_generated'] )
				      ( <_cor210> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','state'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      %% Line 628
			      <'false'> when 'true' ->
				  %% Line 629
				  {'reply','ok',NewS}
			      ( <_cor11> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor11})
				-| ['compiler_generated'] )
			    end
		    %% Line 631
		    <Error = {'error',_cor220}> when 'true' ->
			%% Line 632
			{'reply',Error,S}
		    %% Line 633
		    <{'EXIT',R}> when 'true' ->
			%% Line 634
			{'reply',{'error',R},S}
		    ( <_cor12> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor12})
		      -| ['compiler_generated'] )
		  end
	  %% Line 637
	  <{'unload_application',AppName},_X_From,S> when 'true' ->
	      %% Line 638
	      ( case S of
		  ( <( {'state',_cor221,_cor222,_cor223,_rec37,_cor224,_cor225,_cor226,_cor227}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'lists':'keymember'
				 (AppName, 1, _rec37) of
			  %% Line 639
			  <'true'> when 'true' ->
			      {'reply',{'error',{'running',AppName}},S}
			  %% Line 640
			  <'false'> when 'true' ->
			      %% Line 641
			      case apply 'get_loaded'/1
				       (AppName) of
				%% Line 642
				<{'true',_cor229}> when 'true' ->
				    let <NewS> =
					%% Line 643
					apply 'unload'/2
					    (AppName, S)
				    in  do  %% Line 644
					    apply 'cntrl'/3
						(AppName, S, {'ac_application_unloaded',AppName})
					    %% Line 645
					    {'reply','ok',NewS}
				%% Line 646
				<'false'> when 'true' ->
				    %% Line 647
				    {'reply',{'error',{'not_loaded',AppName}},S}
				( <_cor16> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor16})
				  -| ['compiler_generated'] )
			      end
			  ( <_cor17> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor17})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor228> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 651
	  <{'start_application',AppName,RestartType},From,S> when 'true' ->
	      %% Line 653
	      case S of
		<{'state',_cor230,Starting,SPF,Running,_cor231,Started,Start_req,_cor232}> when 'true' ->
		    %% Line 658
		    case call 'lists':'keyfind'
			     (AppName, 1, Start_req) of
		      %% Line 659
		      <'false'> when 'true' ->
			  let <_cor19> =
			      catch
				  %% Line 660
				  apply 'check_start_cond'/4
				      (AppName, RestartType, Started, Running)
			  in  %% Line 660
			      case _cor19 of
				%% Line 661
				<{'ok',Appl}> when 'true' ->
				    let <Cntrl> =
					%% Line 662
					apply 'cntrl'/3
					    (AppName, S, {'ac_start_application_req',AppName})
				    in  let <Perm> =
					    %% Line 663
					    call 'application':'get_env'
						('kernel', 'permissions')
					in  %% Line 664
					    case <Cntrl,Perm> of
					      %% Line 665
					      <'true',_cor233> when 'true' ->
						  let <_rec38> =
						      %% Line 666
						      [{AppName,RestartType,'normal',From}|%% Line 667
											   Starting]
						  in  let <_rec39> =
							  %% Line 668
							  [{AppName,From}|Start_req]
						      in  let <_cor25> =
							      %% Line 668
							      call 'erlang':'setelement'
								  (8, S, _rec39)
							  in  let <_cor27> =
								  %% Line 666
								  call 'erlang':'setelement'
								      (3, _cor25, _rec38)
							      in  %% Line 666
								  {'noreply',_cor27}
					      %% Line 669
					      <'false','undefined'> when 'true' ->
						  do  %% Line 670
						      apply 'spawn_starter'/4
							  (From, Appl, S, 'normal')
						      let <_rec41> =
							  %% Line 671
							  [{AppName,RestartType,'normal',From}|%% Line 672
											       Starting]
						      in  let <_rec42> =
							      %% Line 673
							      [{AppName,From}|Start_req]
							  in  let <_cor31> =
								  %% Line 673
								  call 'erlang':'setelement'
								      (8, S, _rec42)
							      in  let <_cor33> =
								      %% Line 671
								      call 'erlang':'setelement'
									  (3, _cor31, _rec41)
								  in  %% Line 671
								      {'noreply',_cor33}
					      %% Line 674
					      <'false',{'ok',Perms}> when 'true' ->
						  %% Line 675
						  case call 'lists':'member'
							   ({AppName,'false'}, Perms) of
						    %% Line 676
						    <'false'> when 'true' ->
							do  %% Line 677
							    apply 'spawn_starter'/4
								(From, Appl, S, 'normal')
							    let <_rec44> =
								%% Line 678
								[{AppName,RestartType,'normal',From}|%% Line 679
												     Starting]
							    in  let <_rec45> =
								    %% Line 680
								    [{AppName,From}|Start_req]
								in  let <_cor37> =
									%% Line 680
									call 'erlang':'setelement'
									    (8, S, _rec45)
								    in  let <_cor39> =
									    %% Line 678
									    call 'erlang':'setelement'
										(3, _cor37, _rec44)
									in  %% Line 678
									    {'noreply',_cor39}
						    %% Line 681
						    <'true'> when 'true' ->
							let <_rec47> =
							    %% Line 682
							    [{AppName,RestartType,'normal',From}|%% Line 683
												 SPF]
							in  let <_cor43> =
								%% Line 682
								call 'erlang':'setelement'
								    (4, S, _rec47)
							    in  %% Line 684
								{'reply','ok',_cor43}
						    ( <_cor45> when 'true' ->
							  primop 'match_fail'
							      ({'case_clause',_cor45})
						      -| ['compiler_generated'] )
						  end
					      ( <_fol427,_fol428> when 'true' ->
						    let <_cor46> = {_fol427,_fol428}
						    in  primop 'match_fail'
							    ({'case_clause',_cor46})
						-| ['compiler_generated'] )
					    end
				%% Line 687
				<Error = {'error',_X_R}> when 'true' ->
				    %% Line 688
				    {'reply',Error,S}
				( <_cor47> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor47})
				  -| ['compiler_generated'] )
			      end
		      %% Line 690
		      <{_cor270,_X_FromX}>
			  when call 'erlang':'=:='
				(_cor270,
				 AppName) ->
			  let <_rec49> =
			      %% Line 691
			      [{AppName,From}|Start_req]
			  in  let <_cor51> =
				  %% Line 691
				  call 'erlang':'setelement'
				      (8, S, _rec49)
			      in  %% Line 692
				  {'noreply',_cor51}
		      ( <_cor53> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor53})
			-| ['compiler_generated'] )
		    end
		( <_cor18> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor18})
		  -| ['compiler_generated'] )
	      end
	  %% Line 695
	  <{'permit_application',AppName,Bool},From,S> when 'true' ->
	      %% Line 696
	      ( case S of
		  ( <( {'state',_cor280,_cor281,_cor282,_cor283,_rec51,_cor284,_cor285,_cor286}
		       -| ['compiler_generated'] )> when 'true' ->
			let <IsLoaded> =
			    %% Line 702
			    apply 'get_loaded'/1
				(AppName)
			in  let <IsStarting> =
				%% Line 703
				call 'lists':'keysearch'
				    (AppName, 1, _cor281)
			    in  let <IsSPF> =
				    %% Line 704
				    call 'lists':'keysearch'
					(AppName, 1, _cor282)
				in  let <IsStarted> =
					%% Line 705
					call 'lists':'keysearch'
					    (AppName, 1, _cor284)
				    in  let <IsRunning> =
					    %% Line 706
					    call 'lists':'keysearch'
						(AppName, 1, _cor283)
					in  %% Line 708
					    case call 'lists':'keymember'
						     (AppName, 1, _rec51) of
					      %% Line 712
					      <'true'> when 'true' ->
						  %% Line 713
						  case <IsLoaded,IsStarting,IsStarted> of
						    %% Line 715
						    <'false',_cor328,_cor329> when 'true' ->
							%% Line 716
							{'reply',{'error',{'not_loaded',AppName}},S}
						    %% Line 718
						    <{'true',_X_Appl},'false','false'> when 'true' ->
							do  %% Line 719
							    apply 'update_permissions'/2
								(AppName, Bool)
							    %% Line 720
							    {'reply',{'distributed_application','only_loaded'},S}
						    %% Line 721
						    <_fol514,_fol515,_fol516> when 'true' ->
							do  %% Line 722
							    apply 'update_permissions'/2
								(AppName, Bool)
							    %% Line 723
							    {'reply','distributed_application',S}
						  end
					      %% Line 728
					      <'false'> when 'true' ->
						  %% Line 729
						  case <Bool,IsLoaded,IsStarting,IsSPF,IsStarted,IsRunning> of
						    %% Line 734
						    <'true',_cor331,_cor332,_cor333,_cor334,{'value',_X_Tuple}> when 'true' ->
							%% Line 735
							{'reply','ok',S}
						    %% Line 737
						    <'true','false',_cor335,_cor336,_cor337,_cor338> when 'true' ->
							%% Line 738
							{'reply',{'error',{'not_loaded',AppName}},S}
						    %% Line 740
						    <'true',{'true',_X_Appl},'false','false','false','false'> when 'true' ->
							do  %% Line 741
							    apply 'update_permissions'/2
								(AppName, Bool)
							    %% Line 742
							    {'reply','ok',S}
						    %% Line 744
						    <'true',{'true',_X_Appl},{'value',_X_Tuple},'false','false','false'> when 'true' ->
							do  %% Line 745
							    apply 'update_permissions'/2
								(AppName, Bool)
							    %% Line 746
							    {'reply','ok',S}
						    %% Line 748
						    <'true',{'true',Appl},'false',{'value',Tuple},'false','false'> when 'true' ->
							do  %% Line 749
							    apply 'update_permissions'/2
								(AppName, Bool)
							    %% Line 750
							    case Tuple of
							      <{_X_AppName2,RestartType,'normal',_X_From}> when 'true' ->
								  do  %% Line 751
								      apply 'spawn_starter'/4
									  (From, Appl, S, 'normal')
								      let <_rec57> =
									  %% Line 752
									  [{AppName,RestartType,'normal',From}|_cor281]
								      in  let <_rec58> =
									      %% Line 753
									      call 'lists':'keydelete'
										  (AppName, 1, _cor282)
									  in  let <_rec59> =
										  %% Line 754
										  [{AppName,From}|_cor285]
									      in  let <_cor83> =
										      %% Line 754
										      call 'erlang':'setelement'
											  (8, S, _rec59)
										  in  let <_cor84> =
											  %% Line 753
											  call 'erlang':'setelement'
											      (4, _cor83, _rec58)
										      in  let <_cor86> =
											      %% Line 752
											      call 'erlang':'setelement'
												  (3, _cor84, _rec57)
											  in  %% Line 755
											      {'noreply',_cor86}
							      ( <_cor78> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_cor78})
								-| ['compiler_generated'] )
							    end
						    %% Line 757
						    <'true',{'true',Appl},_cor348,_cor349,{'value',{_cor350,RestartType}},'false'>
							when call 'erlang':'=:='
							      (_cor350,
							       AppName) ->
							do  %% Line 758
							    apply 'update_permissions'/2
								(AppName, Bool)
							    do  %% Line 759
								apply 'spawn_starter'/4
								    (From, Appl, S, 'normal')
								let <_rec61> =
								    %% Line 760
								    [{AppName,RestartType,'normal',From}|_cor281]
								in  let <_rec62> =
									%% Line 761
									call 'lists':'keydelete'
									    (AppName, 1, _cor284)
								    in  let <_rec63> =
									    %% Line 762
									    [{AppName,From}|_cor285]
									in  let <_cor92> =
										%% Line 762
										call 'erlang':'setelement'
										    (8, S, _rec63)
									    in  let <_cor93> =
										    %% Line 761
										    call 'erlang':'setelement'
											(7, _cor92, _rec62)
										in  let <_cor95> =
											%% Line 760
											call 'erlang':'setelement'
											    (3, _cor93, _rec61)
										    in  %% Line 763
											{'noreply',_cor95}
						    %% Line 769
						    <'false',_cor360,_cor361,_cor362,_cor363,{'value',{_X_AppName,Id}}> when 'true' ->
							%% Line 770
							case call 'lists':'keyfind'
								 (AppName, 1, _cor284) of
							  <{_X_AppName2,Type}> when 'true' ->
							      do  %% Line 771
								  apply 'stop_appl'/3
								      (AppName, Id, Type)
								  let <NRunning> =
								      %% Line 772
								      call 'lists':'keydelete'
									  (AppName, 1, _cor283)
								  in  let <_cor101> =
									  %% Line 773
									  call 'erlang':'setelement'
									      (5, S, NRunning)
								      in  %% Line 773
									  {'reply','ok',_cor101}
							  ( <_cor97> when 'true' ->
								primop 'match_fail'
								    ({'badmatch',_cor97})
							    -| ['compiler_generated'] )
							end
						    %% Line 775
						    <'false','false',_cor373,_cor374,_cor375,_cor376> when 'true' ->
							%% Line 776
							{'reply',{'error',{'not_loaded',AppName}},S}
						    %% Line 778
						    <'false',{'true',_X_Appl},'false','false','false','false'> when 'true' ->
							do  %% Line 779
							    apply 'update_permissions'/2
								(AppName, Bool)
							    %% Line 780
							    {'reply','ok',S}
						    %% Line 782
						    <'false',{'true',_X_Appl},{'value',_X_Tuple},'false','false','false'> when 'true' ->
							do  %% Line 783
							    apply 'update_permissions'/2
								(AppName, Bool)
							    %% Line 784
							    {'reply','ok',S}
						    %% Line 786
						    <'false',{'true',_X_Appl},'false',{'value',_X_Tuple},'false','false'> when 'true' ->
							do  %% Line 787
							    apply 'update_permissions'/2
								(AppName, Bool)
							    let <_rec66> =
								%% Line 788
								call 'lists':'keydelete'
								    (AppName, 1, _cor282)
							    in  let <_cor105> =
								    %% Line 788
								    call 'erlang':'setelement'
									(4, S, _rec66)
								in  %% Line 789
								    {'reply','ok',_cor105}
						    %% Line 791
						    <'false',{'true',_X_Appl},_cor386,_cor387,{'value',_X_Tuple},'false'> when 'true' ->
							do  %% Line 792
							    apply 'update_permissions'/2
								(AppName, Bool)
							    %% Line 793
							    {'reply','ok',S}
						    ( <_fol520,_fol521,_fol522,_fol523,_fol524,_fol525> when 'true' ->
							  let <_cor107> =
							      ( {_fol520,_fol521,_fol522,_fol523,_fol524,_fol525}
								-| ['compiler_generated'] )
							  in  primop 'match_fail'
								  ({'case_clause',_cor107})
						      -| ['compiler_generated'] )
						  end
					      ( <_cor108> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_cor108})
						-| ['compiler_generated'] )
					    end
		    -| ['compiler_generated'] )
		  ( <_cor287> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 798
	  <{'stop_application',AppName},_X_From,S> when 'true' ->
	      %% Line 799
	      case S of
		<{'state',_cor388,_cor389,_cor390,Running,_cor391,Started,_cor392,_cor393}> when 'true' ->
		    %% Line 800
		    case call 'lists':'keyfind'
			     (AppName, 1, Running) of
		      %% Line 801
		      <{_X_AppName,Id}> when 'true' ->
			  %% Line 802
			  case call 'lists':'keyfind'
				   (AppName, 1, Started) of
			    <{_X_AppName2,Type}> when 'true' ->
				do  %% Line 803
				    apply 'stop_appl'/3
					(AppName, Id, Type)
				    let <NRunning> =
					%% Line 804
					call 'lists':'keydelete'
					    (AppName, 1, Running)
				    in  let <NStarted> =
					    %% Line 805
					    call 'lists':'keydelete'
						(AppName, 1, Started)
					in  do  %% Line 806
						apply 'cntrl'/3
						    (AppName, S, {'ac_application_stopped',AppName})
						let <_cor114> =
						    %% Line 807
						    call 'erlang':'setelement'
							(7, S, NStarted)
						in  let <_cor116> =
							%% Line 807
							call 'erlang':'setelement'
							    (5, _cor114, NRunning)
						    in  %% Line 807
							{'reply','ok',_cor116}
			    ( <_cor110> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor110})
			      -| ['compiler_generated'] )
			  end
		      %% Line 808
		      <'false'> when 'true' ->
			  %% Line 809
			  case call 'lists':'keymember'
				   (AppName, 1, Started) of
			    %% Line 810
			    <'true'> when 'true' ->
				let <NStarted> =
				    %% Line 811
				    call 'lists':'keydelete'
					(AppName, 1, Started)
				in  do  %% Line 812
					apply 'cntrl'/3
					    (AppName, S, {'ac_application_stopped',AppName})
					let <_cor120> =
					    %% Line 813
					    call 'erlang':'setelement'
						(7, S, NStarted)
					in  %% Line 813
					    {'reply','ok',_cor120}
			    %% Line 814
			    <'false'> when 'true' ->
				%% Line 815
				{'reply',{'error',{'not_started',AppName}},S}
			    ( <_cor121> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor121})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor122> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor122})
			-| ['compiler_generated'] )
		    end
		( <_cor109> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor109})
		  -| ['compiler_generated'] )
	      end
	  %% Line 819
	  <{'change_application_data',Applications,Config},_X_From,S> when 'true' ->
	      let <_cor125> =
		  %% Line 821
		  ( fun (_cor123) ->
			case _cor123 of
			  <[{{'loaded',_X_AppName},Appl}|[]]> when 'true' ->
			      %% Line 822
			      {'true',Appl}
			  %% Line 823
			  <_cor412> when 'true' ->
			      %% Line 824
			      'false'
			end
		    -| [{'id',{0,0,'-handle_call/3-fun-0-'}}] )
	      in  let <OldAppls> =
		      %% Line 820
		      call 'ets':'filter'
			  ('ac_tab', _cor125, %% Line 826
					      [])
		  in  let <_cor127> =
			  catch
			      %% Line 827
			      apply 'do_change_apps'/3
				  (Applications, Config, OldAppls)
		      in  %% Line 827
			  case _cor127 of
			    %% Line 828
			    <Error = {'error',_cor413}> when 'true' ->
				%% Line 829
				{'reply',Error,S}
			    %% Line 830
			    <{'EXIT',R}> when 'true' ->
				%% Line 831
				{'reply',{'error',R},S}
			    %% Line 832
			    <{NewAppls,NewConfig}> when 'true' ->
				let <_cor132> =
				    %% Line 833
				    ( fun (_cor130) ->
					  %% Line 834
					  ( case _cor130 of
					      ( <( {'appl',_rec70,_cor414,_cor415,_cor416,_cor417,_cor418,_cor419,_cor420}
						   -| ['compiler_generated'] )> when 'true' ->
						    call 'ets':'insert'
							('ac_tab', {{'loaded',_rec70},_cor130})
						-| ['compiler_generated'] )
					      ( <_cor421> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','appl'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				      -| [{'id',{0,0,'-handle_call/3-fun-1-'}}] )
				in  do  %% Line 833
					call 'lists':'foreach'
					    (_cor132, %% Line 836
						      NewAppls)
					%% Line 837
					case S of
					  <{'state',_cor422,_cor423,_cor424,_cor425,_cor426,_cor427,_cor428,_cor429}> when 'true' ->
					      let <_cor135> =
						  call 'erlang':'setelement'
						      (9, S, NewConfig)
					      in  {'reply','ok',_cor135}
					  ( <_cor430> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','state'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
			    ( <_cor136> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor136})
			      -| ['compiler_generated'] )
			  end
	  %% Line 840
	  <'prep_config_change',_X_From,S> when 'true' ->
	      %% Line 841
	      ( case S of
		  ( <( {'state',_cor431,_cor432,_cor433,_rec72,_cor434,_cor435,_cor436,_cor437}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor140> =
			    %% Line 842
			    apply 'do_prep_config_change'/1
				(_rec72)
			in  let <EnvBefore> =
				%% Line 842
				call 'lists':'reverse'
				    (_cor140)
			    in  %% Line 843
				{'reply',EnvBefore,S}
		    -| ['compiler_generated'] )
		  ( <_cor438> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 845
	  <{'config_change',EnvBefore},_X_From,S> when 'true' ->
	      %% Line 846
	      ( case S of
		  ( <( {'state',_cor439,_cor440,_cor441,_rec73,_cor442,_cor443,_cor444,_cor445}
		       -| ['compiler_generated'] )> when 'true' ->
			let <R> =
			    %% Line 847
			    apply 'do_config_change'/2
				(_rec73, EnvBefore)
			in  %% Line 848
			    {'reply',R,S}
		    -| ['compiler_generated'] )
		  ( <_cor446> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 850
	  <'which_applications',_X_From,S> when 'true' ->
	      let <_cor152> =
		  %% Line 851
		  ( fun (_cor150) ->
			case _cor150 of
			  <{Name,Id}> when 'true' ->
			      %% Line 852
			      case Id of
				%% Line 853
				<{'distributed',_X_Node}> when 'true' ->
				    %% Line 854
				    'false'
				%% Line 855
				<_cor447> when 'true' ->
				    %% Line 856
				    case %% Line 857
					 apply 'get_loaded'/1
					     (Name) of
				      <{'true',{'appl',_cor448,_cor449,Descr,_cor450,Vsn,_cor451,_cor452,_cor453}}> when 'true' ->
					  %% Line 858
					  {'true',{Name,Descr,Vsn}}
				      ( <_cor148> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor148})
					-| ['compiler_generated'] )
				    end
			      end
			  ( <_cor151> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor151})
				  -| [{'function_name',{'-handle_call/3-fun-2-',1}}] )
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-handle_call/3-fun-2-'}}] )
	      in  %% Line 860
		  ( case S of
		      ( <( {'state',_cor454,_cor455,_cor456,_rec74,_cor457,_cor458,_cor459,_cor460}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <Reply> =
				call 'lists':'zf'
				    (_cor152, _rec74)
			    in  %% Line 861
				{'reply',Reply,S}
			-| ['compiler_generated'] )
		      ( <_cor461> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 863
	  <{'set_env',AppName,Key,Val,Opts},_X_From,S> when 'true' ->
	      do  %% Line 864
		  call 'ets':'insert'
		      ('ac_tab', {{'env',AppName,Key},Val})
		  %% Line 865
		  case call 'proplists':'get_value'
			   ('persistent', Opts, 'false') of
		    %% Line 866
		    <'true'> when 'true' ->
			let <Fun> =
			    %% Line 867
			    ( fun (_cor154) ->
				  call 'lists':'keystore'
				      (Key, 1, _cor154, {Key,Val})
			      -| [{'id',{0,0,'-handle_call/3-fun-3-'}}] )
			in  %% Line 868
			    ( case S of
				( <( {'state',_cor462,_cor463,_cor464,_cor465,_cor466,_cor467,_cor468,_rec77}
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_rec75> =
					  apply 'change_app_env'/3
					      (_rec77, AppName, Fun)
				      in  let <_cor162> =
					      call 'erlang':'setelement'
						  (9, S, _rec75)
					  in  {'reply','ok',_cor162}
				  -| ['compiler_generated'] )
				( <_cor469> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','state'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
		    %% Line 869
		    <'false'> when 'true' ->
			%% Line 870
			{'reply','ok',S}
		    ( <_cor163> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor163})
		      -| ['compiler_generated'] )
		  end
	  %% Line 873
	  <{'unset_env',AppName,Key,Opts},_X_From,S> when 'true' ->
	      do  %% Line 874
		  call 'ets':'delete'
		      ('ac_tab', {'env',AppName,Key})
		  %% Line 875
		  case call 'proplists':'get_value'
			   ('persistent', Opts, 'false') of
		    %% Line 876
		    <'true'> when 'true' ->
			let <Fun> =
			    %% Line 877
			    ( fun (_cor164) ->
				  call 'lists':'keydelete'
				      (Key, 1, _cor164)
			      -| [{'id',{0,0,'-handle_call/3-fun-4-'}}] )
			in  %% Line 878
			    ( case S of
				( <( {'state',_cor479,_cor480,_cor481,_cor482,_cor483,_cor484,_cor485,_rec80}
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_rec78> =
					  apply 'change_app_env'/3
					      (_rec80, AppName, Fun)
				      in  let <_cor172> =
					      call 'erlang':'setelement'
						  (9, S, _rec78)
					  in  {'reply','ok',_cor172}
				  -| ['compiler_generated'] )
				( <_cor486> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','state'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
		    %% Line 879
		    <'false'> when 'true' ->
			%% Line 880
			{'reply','ok',S}
		    ( <_cor173> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor173})
		      -| ['compiler_generated'] )
		  end
	  %% Line 883
	  <{'control_application',AppName},{Pid,_X_Tag},S> when 'true' ->
	      %% Line 884
	      ( case S of
		  ( <( {'state',_cor496,_cor497,_cor498,_cor499,_rec81,_cor500,_cor501,_cor502}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 885
			case call 'lists':'keymember'
				 (AppName, 1, _rec81) of
			  %% Line 886
			  <'false'> when 'true' ->
			      do  %% Line 887
				  call 'erlang':'link'
				      (Pid)
				  let <_rec82> =
				      %% Line 888
				      [{AppName,Pid}|_rec81]
				  in  let <_cor180> =
					  %% Line 888
					  call 'erlang':'setelement'
					      (6, S, _rec82)
				      in  %% Line 888
					  {'reply','true',_cor180}
			  %% Line 889
			  <'true'> when 'true' ->
			      %% Line 890
			      {'reply','false',S}
			  ( <_cor181> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor181})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor503> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 893
	  <{'start_type',AppName},_X_From,S> when 'true' ->
	      %% Line 894
	      ( case S of
		  ( <( {'state',_cor513,_rec84,_cor514,_cor515,_cor516,_cor517,_cor518,_cor519}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor186> =
			    %% Line 895
			    case call 'lists':'keyfind'
				     (AppName, 1, _rec84) of
			      %% Line 896
			      <'false'> when 'true' ->
				  %% Line 897
				  'local'
			      %% Line 898
			      <{_X_AppName,_X_RestartType,Type,_X_F}> when 'true' ->
				  %% Line 899
				  Type
			      ( <_cor185> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor185})
				-| ['compiler_generated'] )
			    end
			in  %% Line 901
			    {'reply',_cor186,S}
		    -| ['compiler_generated'] )
		  ( <_cor520> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 903
	  <'info',_X_From,S> when 'true' ->
	      let <_cor188> =
		  %% Line 904
		  apply 'loaded_applications'/0
		      ()
	      in  %% Line 905
		  ( case S of
		      ( <( {'state',_rec85,_cor521,_cor522,_cor523,_cor524,_cor525,_cor526,_cor527}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <Reply> =
				[{'loaded',_cor188}|[{'loading',_rec85}|%% Line 906
									[{'started',_cor525}|%% Line 907
											     [{'start_p_false',_cor522}|%% Line 908
															[{'running',_cor523}|%% Line 909
																	     [{'starting',_cor521}|[]]]]]]]
			    in  %% Line 910
				{'reply',Reply,S}
			-| ['compiler_generated'] )
		      ( <_cor528> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor202,_cor201,_cor200> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor202,_cor201,_cor200})
		  -| [{'function_name',{'handle_call',3}}] )
	    -| ['compiler_generated'] )
	end
'handle_cast'/2 =
    %% Line 915
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'application_started',AppName,Res},S> when 'true' ->
	      %% Line 916
	      apply 'handle_application_started'/3
		  (AppName, Res, S)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'handle_cast',2}}] )
	    -| ['compiler_generated'] )
	end
'handle_application_started'/3 =
    %% Line 918
    fun (_cor2,_cor1,_cor0) ->
	%% Line 920
	case _cor0 of
	  <{'state',_cor63,Starting,_cor64,Running,_cor65,Started,Start_req,_cor66}> when 'true' ->
	      let <Start_reqN> =
		  %% Line 921
		  apply 'reply_to_requester'/3
		      (_cor2, Start_req, _cor1)
	      in  %% Line 922
		  case call 'lists':'keyfind'
			   (_cor2, 1, Starting) of
		    <{_X_AppName,RestartType,_X_Type,_X_From}> when 'true' ->
			%% Line 923
			case _cor1 of
			  %% Line 924
			  <{'ok',Id}> when 'true' ->
			      do  %% Line 925
				  case _cor2 of
				    %% Line 926
				    <'kernel'> when 'true' ->
					apply 'check_user'/0
					    ()
				    %% Line 927
				    <_cor67> when 'true' ->
					'ok'
				  end
				  let <_cor7> =
				      %% Line 929
				      apply 'nd'/1
					  (Id)
				  in  do  %% Line 929
					  apply 'info_started'/2
					      (_cor2, _cor7)
					  do  %% Line 930
					      apply 'notify_cntrl_started'/4
						  (_cor2, Id, _cor0, 'ok')
					      let <NRunning> =
						  %% Line 931
						  apply 'keyreplaceadd'/4
						      (_cor2, 1, Running, {_cor2,Id})
					      in  let <NStarted> =
						      %% Line 932
						      apply 'keyreplaceadd'/4
							  (_cor2, 1, Started, {_cor2,RestartType})
						  in  let <_rec90> =
							  %% Line 933
							  call 'lists':'keydelete'
							      (_cor2, 1, Starting)
						      in  let <_cor12> =
							      %% Line 936
							      call 'erlang':'setelement'
								  (8, _cor0, Start_reqN)
							  in  let <_cor13> =
								  %% Line 935
								  call 'erlang':'setelement'
								      (7, _cor12, NStarted)
							      in  let <_cor14> =
								      %% Line 934
								      call 'erlang':'setelement'
									  (5, _cor13, NRunning)
								  in  let <_cor16> =
									  %% Line 933
									  call 'erlang':'setelement'
									      (3, _cor14, _rec90)
								      in  let <Perm> =
									      %% Line 938
									      call 'application':'get_env'
										  ('kernel', 'permissions')
									  in  %% Line 939
									      case <Perm,Id> of
										%% Line 940
										<'undefined',_cor77> when 'true' ->
										    %% Line 941
										    {'noreply',_cor16}
										%% Line 943
										<{'ok',Perms},{'distributed',StartNode}>
										    when try
											  let <_cor19> =
											      call 'erlang':'node'
												  ()
											  in  call 'erlang':'=:='
												  (StartNode, _cor19)
										      of <Try> ->
											  Try
										      catch <T,R> ->
											  'false' ->
										    %% Line 944
										    case call 'lists':'member'
											     ({_cor2,'false'}, Perms) of
										      %% Line 945
										      <'true'> when 'true' ->
											  %% Line 946
											  case _cor16 of
											    <{'state',_cor78,_cor79,_cor80,StopRunning,_cor81,StopStarted,_cor82,_cor83}> when 'true' ->
												%% Line 947
												case call 'lists':'keyfind'
													 (_cor2, 1, StopRunning) of
												  %% Line 948
												  <{_cor84,_cor85}>
												      when let <_cor86> =
													    call 'erlang':'=:='
														(_cor84, _X_AppName)
													in  let <_cor87> =
														call 'erlang':'=:='
														    (_cor85, Id)
													    in  call 'erlang':'and'
														    (_cor86, _cor87) ->
												      %% Line 949
												      case %% Line 950
													   call 'lists':'keyfind'
													       (_cor2, 1, StopStarted) of
													<{_X_AppName2,Type}> when 'true' ->
													    do  %% Line 951
														apply 'stop_appl'/3
														    (_cor2, Id, Type)
														let <NStopRunning> =
														    %% Line 952
														    call 'lists':'keydelete'
															(_cor2, 1, StopRunning)
														in  do  %% Line 953
															apply 'cntrl'/3
															    (_cor2, _cor16, {'ac_application_stopped',_cor2})
															let <_cor24> =
															    %% Line 955
															    call 'erlang':'setelement'
																(7, _cor16, StopStarted)
															in  let <_cor26> =
																%% Line 954
																call 'erlang':'setelement'
																    (5, _cor24, NStopRunning)
															    in  %% Line 954
																{'noreply',_cor26}
													( <_cor21> when 'true' ->
													      primop 'match_fail'
														  ({'badmatch',_cor21})
													  -| ['compiler_generated'] )
												      end
												  %% Line 956
												  <'false'> when 'true' ->
												      %% Line 957
												      {'noreply',_cor16}
												  ( <_cor27> when 'true' ->
													primop 'match_fail'
													    ({'case_clause',_cor27})
												    -| ['compiler_generated'] )
												end
											    ( <_cor20> when 'true' ->
												  primop 'match_fail'
												      ({'badmatch',_cor20})
											      -| ['compiler_generated'] )
											  end
										      %% Line 959
										      <'false'> when 'true' ->
											  %% Line 960
											  {'noreply',_cor16}
										      ( <_cor28> when 'true' ->
											    primop 'match_fail'
												({'case_clause',_cor28})
											-| ['compiler_generated'] )
										    end
										%% Line 962
										<_fol835,_fol836> when 'true' ->
										    %% Line 963
										    {'noreply',_cor16}
									      end
			  %% Line 965
			  <Error = {'error',R}>
			      when call 'erlang':'=:='
				    (RestartType,
				     'temporary') ->
			      do  %% Line 966
				  apply 'notify_cntrl_started'/4
				      (_cor2, 'undefined', _cor0, Error)
				  do  %% Line 967
				      apply 'info_exited'/3
					  (_cor2, R, RestartType)
				      let <_rec93> =
					  %% Line 968
					  call 'lists':'keydelete'
					      (_cor2, 1, Starting)
				      in  let <_cor32> =
					      %% Line 969
					      call 'erlang':'setelement'
						  (8, _cor0, Start_reqN)
					  in  let <_cor34> =
						  %% Line 968
						  call 'erlang':'setelement'
						      (3, _cor32, _rec93)
					      in  %% Line 968
						  {'noreply',_cor34}
			  %% Line 970
			  <{'info',R}>
			      when call 'erlang':'=:='
				    (RestartType,
				     'temporary') ->
			      do  %% Line 971
				  apply 'notify_cntrl_started'/4
				      (_cor2, 'undefined', _cor0, {'error',R})
				  let <_rec95> =
				      %% Line 972
				      call 'lists':'keydelete'
					  (_cor2, 1, Starting)
				  in  let <_cor37> =
					  %% Line 973
					  call 'erlang':'setelement'
					      (8, _cor0, Start_reqN)
				      in  let <_cor39> =
					      %% Line 972
					      call 'erlang':'setelement'
						  (3, _cor37, _rec95)
					  in  %% Line 972
					      {'noreply',_cor39}
			  %% Line 974
			  <{ErrInf,R}>
			      when let <_cor40> =
				    call 'erlang':'=:='
					(RestartType, 'transient')
				in  let <_cor41> =
					call 'erlang':'=:='
					    (ErrInf, 'error')
				    in  let <_cor42> =
					    call 'erlang':'and'
						(_cor40, _cor41)
					in  let <_cor43> =
						%% Line 975
						call 'erlang':'=:='
						    (RestartType, 'transient')
					    in  let <_cor44> =
						    %% Line 975
						    call 'erlang':'=:='
							(ErrInf, 'info')
						in  let <_cor45> =
							%% Line 975
							call 'erlang':'and'
							    (_cor43, _cor44)
						    in  call 'erlang':'or'
							    (_cor42, _cor45) ->
			      do  %% Line 976
				  apply 'notify_cntrl_started'/4
				      (_cor2, 'undefined', _cor0, {'error',R})
				  do  %% Line 977
				      case ErrInf of
					%% Line 978
					<'error'> when 'true' ->
					    %% Line 979
					    apply 'info_exited'/3
						(_cor2, R, RestartType)
					%% Line 980
					<'info'> when 'true' ->
					    'ok'
					( <_cor46> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_cor46})
					  -| ['compiler_generated'] )
				      end
				      %% Line 983
				      case R of
					%% Line 984
					<{{'EXIT','normal'},_X_Call}> when 'true' ->
					    let <_rec97> =
						%% Line 985
						call 'lists':'keydelete'
						    (_cor2, 1, Starting)
					    in  let <_cor49> =
						    %% Line 986
						    call 'erlang':'setelement'
							(8, _cor0, Start_reqN)
						in  let <_cor51> =
							%% Line 985
							call 'erlang':'setelement'
							    (3, _cor49, _rec97)
						    in  %% Line 985
							{'noreply',_cor51}
					%% Line 987
					<_cor125> when 'true' ->
					    let <Reason> = {%% Line 988
						 'application_start_failure',_cor2,%% Line 988
										   R}
					    in  let <_cor53> =
						    %% Line 989
						    apply 'to_string'/1
							(Reason)
						in  %% Line 989
						    {'stop',_cor53,_cor0}
				      end
			  %% Line 991
			  <Error = {'error',R}> when 'true' ->
			      do  %% Line 992
				  apply 'notify_cntrl_started'/4
				      (_cor2, 'undefined', _cor0, Error)
				  do  %% Line 993
				      apply 'info_exited'/3
					  (_cor2, R, RestartType)
				      let <Reason> = {%% Line 994
					   'application_start_failure',_cor2,%% Line 994
									     R}
				      in  let <_cor56> =
					      %% Line 995
					      apply 'to_string'/1
						  (Reason)
					  in  %% Line 995
					      {'stop',_cor56,_cor0}
			  %% Line 996
			  <{'info',R}> when 'true' ->
			      do  %% Line 997
				  apply 'notify_cntrl_started'/4
				      (_cor2, 'undefined', _cor0, {'error',R})
				  let <Reason> = {%% Line 998
				       'application_start_failure',_cor2,%% Line 998
									 R}
				  in  let <_cor58> =
					  %% Line 999
					  apply 'to_string'/1
					      (Reason)
				      in  %% Line 999
					  {'stop',_cor58,_cor0}
			  ( <_cor59> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor59})
			    -| ['compiler_generated'] )
			end
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'handle_info'/2 =
    %% Line 1005
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'ac_load_application_reply',AppName,Res},S> when 'true' ->
	      %% Line 1006
	      ( case S of
		  ( <( {'state',_rec99,_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'keysearchdelete'/3
				 (AppName, 1, _rec99) of
			  %% Line 1007
			  <{'value',{_X_AppName,From},Loading}> when 'true' ->
			      do  %% Line 1008
				  call 'gen_server':'reply'
				      (From, Res)
				  %% Line 1009
				  case Res of
				    %% Line 1010
				    <'ok'> when 'true' ->
					let <_cor6> =
					    %% Line 1011
					    call 'erlang':'setelement'
						(2, S, Loading)
					in  %% Line 1011
					    {'noreply',_cor6}
				    %% Line 1012
				    <{'error',_X_R}> when 'true' ->
					let <NewS> =
					    %% Line 1013
					    apply 'unload'/2
						(AppName, S)
					in  %% Line 1014
					    case NewS of
					      <{'state',_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146}> when 'true' ->
						  let <_cor10> =
						      call 'erlang':'setelement'
							  (2, NewS, Loading)
						  in  {'noreply',_cor10}
					      ( <_cor147> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','state'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
				    ( <_cor11> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor11})
				      -| ['compiler_generated'] )
				  end
			  %% Line 1016
			  <'false'> when 'true' ->
			      %% Line 1017
			      {'noreply',S}
			  ( <_cor12> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor12})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor129> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1020
	  <{'ac_start_application_reply',AppName,Res},S> when 'true' ->
	      %% Line 1021
	      ( case S of
		  ( <( {'state',_cor148,_cor149,_cor150,_cor151,_cor152,_cor153,_rec102,_cor154}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 1022
			case call 'lists':'keyfind'
				 (AppName, 1, _cor149) of
			  %% Line 1023
			  <{_X_AppName,RestartType,Type,From}> when 'true' ->
			      %% Line 1024
			      case Res of
				%% Line 1025
				<'start_it'> when 'true' ->
				    %% Line 1026
				    case apply 'get_loaded'/1
					     (AppName) of
				      <{'true',Appl}> when 'true' ->
					  do  %% Line 1027
					      apply 'spawn_starter'/4
						  (From, Appl, S, Type)
					      %% Line 1028
					      {'noreply',S}
				      ( <_cor19> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor19})
					-| ['compiler_generated'] )
				    end
				%% Line 1029
				<{'started',Node}> when 'true' ->
				    %% Line 1030
				    apply 'handle_application_started'/3
					(AppName, %% Line 1031
						  {'ok',{'distributed',Node}}, %% Line 1032
									       S)
				%% Line 1033
				<'not_started'> when 'true' ->
				    let <Start_reqN> =
					%% Line 1036
					apply 'reply_to_requester'/3
					    (AppName, _rec102, 'ok')
				    in  let <_rec105> =
					    %% Line 1038
					    call 'lists':'keydelete'
						(AppName, 1, _cor149)
					in  let <_rec106> =
						%% Line 1039
						[{AppName,RestartType}|_cor153]
					    in  let <_cor27> =
						    %% Line 1040
						    call 'erlang':'setelement'
							(8, S, Start_reqN)
						in  let <_cor28> =
							%% Line 1039
							call 'erlang':'setelement'
							    (7, _cor27, _rec106)
						    in  let <_cor30> =
							    %% Line 1038
							    call 'erlang':'setelement'
								(3, _cor28, _rec105)
							in  %% Line 1037
							    {'noreply',_cor30}
				%% Line 1041
				<Takeover = {'takeover',_X_Node}> when 'true' ->
				    %% Line 1042
				    case apply 'get_loaded'/1
					     (AppName) of
				      <{'true',Appl}> when 'true' ->
					  do  %% Line 1043
					      apply 'spawn_starter'/4
						  (From, Appl, S, Takeover)
					      let <NewStarting1> =
						  %% Line 1044
						  call 'lists':'keydelete'
						      (AppName, 1, _cor149)
					      in  let <NewStarting> =
						      %% Line 1045
						      [{AppName,RestartType,Takeover,From}|NewStarting1]
						  in  let <_cor36> =
							  %% Line 1046
							  call 'erlang':'setelement'
							      (3, S, NewStarting)
						      in  %% Line 1046
							  {'noreply',_cor36}
				      ( <_cor31> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor31})
					-| ['compiler_generated'] )
				    end
				%% Line 1047
				<Error = {'error',Reason}>
				    when call 'erlang':'=:='
					  (RestartType,
					   'permanent') ->
				    let <Start_reqN> =
					%% Line 1048
					apply 'reply_to_requester'/3
					    (AppName, _rec102, Error)
				    in  let <_cor41> =
					    %% Line 1049
					    apply 'to_string'/1
						(Reason)
					in  let <_cor40> =
						%% Line 1049
						call 'erlang':'setelement'
						    (8, S, Start_reqN)
					    in  %% Line 1049
						{'stop',_cor41,_cor40}
				%% Line 1050
				<Error = {'error',_X_Reason}> when 'true' ->
				    let <Start_reqN> =
					%% Line 1051
					apply 'reply_to_requester'/3
					    (AppName, _rec102, Error)
				    in  let <_rec110> =
					    %% Line 1053
					    call 'lists':'keydelete'
						(AppName, 1, _cor149)
					in  let <_cor45> =
						%% Line 1054
						call 'erlang':'setelement'
						    (8, S, Start_reqN)
					    in  let <_cor47> =
						    %% Line 1052
						    call 'erlang':'setelement'
							(3, _cor45, _rec110)
						in  %% Line 1052
						    {'noreply',_cor47}
				( <_cor48> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor48})
				  -| ['compiler_generated'] )
			      end
			  %% Line 1056
			  <'false'> when 'true' ->
			      %% Line 1057
			      {'noreply',S}
			  ( <_cor49> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor49})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor155> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1060
	  <{'ac_change_application_req',AppName,Msg},S> when 'true' ->
	      %% Line 1061
	      ( case S of
		  ( <( {'state',_cor208,_cor209,_cor210,_rec112,_cor211,_cor212,_cor213,_cor214}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor60> =
			    %% Line 1064
			    call 'lists':'keyfind'
				(AppName, 1, _rec112)
			in  let <_cor59> =
				%% Line 1064
				call 'lists':'keyfind'
				    (AppName, 1, _cor212)
			    in  %% Line 1064
				case <_cor60,_cor59> of
				  %% Line 1065
				  <{_cor232,Id},{_X_AppName2,Type}>
				      when call 'erlang':'=:='
					    (_cor232,
					     AppName) ->
				      %% Line 1066
				      case Msg of
					%% Line 1067
					<{'started',Node}> when 'true' ->
					    do  %% Line 1068
						apply 'stop_appl'/3
						    (AppName, Id, Type)
						let <_cor61> =
						    %% Line 1070
						    call 'lists':'keydelete'
							(AppName, 1, _rec112)
						in  let <NRunning> =
							%% Line 1069
							[{AppName,{'distributed',Node}}|_cor61]
						    in  let <_cor65> =
							    %% Line 1071
							    call 'erlang':'setelement'
								(5, S, NRunning)
							in  %% Line 1071
							    {'noreply',_cor65}
					%% Line 1072
					<{'takeover',_X_Node,_X_RT}>
					    when call 'erlang':'is_pid'
						  (Id) ->
					    do  %% Line 1073
						apply 'notify_cntrl_started'/4
						    (AppName, Id, S, 'ok')
						%% Line 1074
						{'noreply',S}
					%% Line 1075
					<{'takeover',Node,RT}> when 'true' ->
					    let <NewS> =
						%% Line 1076
						apply 'do_start'/5
						    (AppName, RT, {'takeover',Node}, 'undefined', S)
					    in  %% Line 1077
						{'noreply',NewS}
					%% Line 1078
					<{'failover',_X_Node,_X_RT}>
					    when call 'erlang':'is_pid'
						  (Id) ->
					    do  %% Line 1079
						apply 'notify_cntrl_started'/4
						    (AppName, Id, S, 'ok')
						%% Line 1080
						{'noreply',S}
					%% Line 1081
					<{'failover',Node,RT}> when 'true' ->
					    %% Line 1082
					    case call 'application':'get_key'
						     (AppName, 'start_phases') of
					      %% Line 1083
					      <{'ok','undefined'}> when 'true' ->
						  let <NewS> =
						      %% Line 1087
						      apply 'do_start'/5
							  (AppName, RT, 'normal', 'undefined', S)
						  in  %% Line 1088
						      {'noreply',NewS}
					      %% Line 1089
					      <{'ok',_X_StartPhases}> when 'true' ->
						  let <NewS> =
						      %% Line 1090
						      apply 'do_start'/5
							  (AppName, RT, {'failover',Node}, 'undefined', S)
						  in  %% Line 1091
						      {'noreply',NewS}
					      ( <_cor69> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_cor69})
						-| ['compiler_generated'] )
					    end
					%% Line 1093
					<'stop_it'> when 'true' ->
					    do  %% Line 1094
						apply 'stop_appl'/3
						    (AppName, Id, Type)
						do  %% Line 1095
						    apply 'cntrl'/3
							(AppName, S, {'ac_application_not_run',AppName})
						    let <NRunning> =
							%% Line 1096
							call 'lists':'keyreplace'
							    (AppName, 1, _rec112, %% Line 1097
										  {AppName,{'distributed',[]}})
						    in  let <_cor73> =
							    %% Line 1098
							    call 'erlang':'setelement'
								(5, S, NRunning)
							in  %% Line 1098
							    {'noreply',_cor73}
					%% Line 1100
					<'start_it'>
					    when call 'erlang':'is_pid'
						  (Id) ->
					    do  %% Line 1101
						apply 'notify_cntrl_started'/4
						    (AppName, Id, S, 'ok')
						%% Line 1102
						{'noreply',S}
					%% Line 1103
					<'start_it'> when 'true' ->
					    let <NewS> =
						%% Line 1104
						apply 'do_start'/5
						    (AppName, 'undefined', 'normal', 'undefined', S)
					    in  %% Line 1105
						{'noreply',NewS}
					%% Line 1106
					<'not_running'> when 'true' ->
					    let <NRunning> =
						%% Line 1107
						call 'lists':'keydelete'
						    (AppName, 1, _rec112)
					    in  let <_cor78> =
						    %% Line 1108
						    call 'erlang':'setelement'
							(5, S, NRunning)
						in  %% Line 1108
						    {'noreply',_cor78}
					%% Line 1109
					<_cor260> when 'true' ->
					    %% Line 1110
					    {'noreply',S}
				      end
				  %% Line 1112
				  <_fol1046,_fol1047> when 'true' ->
				      let <IsLoaded> =
					  %% Line 1113
					  apply 'get_loaded'/1
					      (AppName)
				      in  let <IsStarting> =
					      %% Line 1114
					      call 'lists':'keysearch'
						  (AppName, 1, _cor209)
					  in  let <IsStarted> =
						  %% Line 1115
						  call 'lists':'keysearch'
						      (AppName, 1, _cor212)
					      in  let <IsRunning> =
						      %% Line 1116
						      call 'lists':'keysearch'
							  (AppName, 1, _rec112)
						  in  %% Line 1118
						      case Msg of
							%% Line 1119
							<'start_it'> when 'true' ->
							    %% Line 1120
							    case <IsLoaded,IsStarting,IsStarted,IsRunning> of
							      %% Line 1122
							      <_cor262,_cor263,_cor264,{'value',_X_Tuple}> when 'true' ->
								  %% Line 1123
								  {'noreply',S}
							      %% Line 1125
							      <'false',_cor265,_cor266,_cor267> when 'true' ->
								  %% Line 1126
								  {'noreply',S}
							      %% Line 1128
							      <{'true',_X_Appl},'false','false','false'> when 'true' ->
								  %% Line 1129
								  {'noreply',S}
							      %% Line 1131
							      <{'true',_X_Appl},{'value',Tuple},'false','false'> when 'true' ->
								  %% Line 1132
								  case Tuple of
								    <{_X_AppName,_X_RStype,_X_Type,From}> when 'true' ->
									let <NewS> =
									    %% Line 1133
									    apply 'do_start'/5
										(AppName, 'undefined', 'normal', From, S)
									in  %% Line 1134
									    {'noreply',NewS}
								    ( <_cor84> when 'true' ->
									  primop 'match_fail'
									      ({'badmatch',_cor84})
								      -| ['compiler_generated'] )
								  end
							      %% Line 1136
							      <{'true',_X_Appl},_cor268,{'value',{_cor269,_X_RestartType}},'false'>
								  when call 'erlang':'=:='
									(_cor269,
									 AppName) ->
								  let <NewS> =
								      %% Line 1137
								      apply 'do_start'/5
									  (AppName, 'undefined', 'normal', 'undefined', S)
								  in  let <_rec118> =
									  %% Line 1138
									  call 'lists':'keydelete'
									      (AppName, 1, _cor212)
								      in  %% Line 1138
									  case NewS of
									    <{'state',_cor270,_cor271,_cor272,_cor273,_cor274,_cor275,_cor276,_cor277}> when 'true' ->
										let <_cor90> =
										    call 'erlang':'setelement'
											(7, NewS, _rec118)
										in  %% Line 1139
										    {'noreply',_cor90}
									    ( <_cor278> when 'true' ->
										  ( call ( 'erlang'
											   -| ['compiler_generated'] ):( 'error'
															 -| ['compiler_generated'] )
											(( {'badrecord','state'}
											   -| ['compiler_generated'] ))
										    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									  end
							      ( <_fol1050,_fol1051,_fol1052,_fol1053> when 'true' ->
								    let <_cor92> =
									( {_fol1050,_fol1051,_fol1052,_fol1053}
									  -| ['compiler_generated'] )
								    in  primop 'match_fail'
									    ({'case_clause',_cor92})
								-| ['compiler_generated'] )
							    end
							%% Line 1141
							<{'started',Node}> when 'true' ->
							    let <_cor93> =
								%% Line 1143
								call 'lists':'keydelete'
								    (AppName, 1, _rec112)
							    in  let <NRunning> =
								    %% Line 1142
								    [{AppName,{'distributed',Node}}|_cor93]
								in  let <_cor97> =
									%% Line 1144
									call 'erlang':'setelement'
									    (5, S, NRunning)
								    in  %% Line 1144
									{'noreply',_cor97}
							%% Line 1145
							<_cor288> when 'true' ->
							    %% Line 1146
							    {'noreply',S}
						      end
				end
		    -| ['compiler_generated'] )
		  ( <_cor215> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1154
	  <{'EXIT',Pid,Reason},S> when 'true' ->
	      do  %% Line 1155
		  call 'ets':'match_delete'
		      ('ac_tab', {{'application_master','_'},Pid})
		  %% Line 1156
		  ( case S of
		      ( <( {'state',_cor289,_cor290,_cor291,_rec121,_cor292,_cor293,_cor294,_cor295}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <NRunning> =
				call 'lists':'keydelete'
				    (Pid, 2, _rec121)
			    in  let <_cor105> =
				    %% Line 1157
				    call 'erlang':'setelement'
					(5, S, NRunning)
				in  %% Line 1158
				    case call 'lists':'keyfind'
					     (Pid, 2, _rec121) of
				      %% Line 1159
				      <{AppName,_X_AmPid}> when 'true' ->
					  do  %% Line 1160
					      apply 'cntrl'/3
						  (AppName, S, {'ac_application_stopped',AppName})
					      %% Line 1161
					      case call 'lists':'keyfind'
						       (AppName, 1, _cor293) of
						%% Line 1162
						<{_X_AppName,'temporary'}> when 'true' ->
						    do  %% Line 1163
							apply 'info_exited'/3
							    (AppName, Reason, 'temporary')
							%% Line 1164
							{'noreply',_cor105}
						%% Line 1165
						<{_X_AppName,'transient'}>
						    when call 'erlang':'=:='
							  (Reason,
							   'normal') ->
						    do  %% Line 1166
							apply 'info_exited'/3
							    (AppName, Reason, 'transient')
							%% Line 1167
							{'noreply',_cor105}
						%% Line 1168
						<{_X_AppName,Type}> when 'true' ->
						    do  %% Line 1169
							apply 'info_exited'/3
							    (AppName, Reason, Type)
							let <_cor111> =
							    %% Line 1170
							    apply 'to_string'/1
								({'application_terminated',AppName,Reason})
							in  %% Line 1170
							    {'stop',_cor111,_cor105}
						( <_cor112> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_cor112})
						  -| ['compiler_generated'] )
					      end
				      %% Line 1172
				      <'false'> when 'true' ->
					  let <_rec125> =
					      %% Line 1173
					      apply 'del_cntrl'/2
						  (_cor292, Pid)
					  in  let <_cor118> =
						  %% Line 1173
						  call 'erlang':'setelement'
						      (6, S, _rec125)
					      in  %% Line 1173
						  {'noreply',_cor118}
				      ( <_cor119> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor119})
					-| ['compiler_generated'] )
				    end
			-| ['compiler_generated'] )
		      ( <_cor296> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 1176
	  <_cor339,S> when 'true' ->
	      %% Line 1177
	      {'noreply',S}
	end
'terminate'/2 =
    %% Line 1181
    fun (_cor1,_cor0) ->
	do  %% Line 1182
	    case call 'application':'get_env'
		     ('kernel', 'shutdown_func') of
	      %% Line 1183
	      <{'ok',{M,F}}> when 'true' ->
		  catch
		      %% Line 1184
		      call M:F
			  (_cor1)
	      %% Line 1185
	      <_cor15> when 'true' ->
		  'ok'
	    end
	    let <_cor4> =
		%% Line 1189
		case call 'application':'get_env'
			 ('kernel', 'shutdown_timeout') of
		  %% Line 1190
		  <'undefined'> when 'true' ->
		      'infinity'
		  %% Line 1191
		  <{'ok',T}> when 'true' ->
		      T
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor3})
		    -| ['compiler_generated'] )
		end
	    in  let <_cor11> =
		    %% Line 1193
		    ( fun (_cor9) ->
			  case _cor9 of
			    <{_X_AppName,Id}>
				when call 'erlang':'is_pid'
				      (Id) ->
				let <Ref> =
				    %% Line 1194
				    call 'erlang':'monitor'
					('process', Id)
				in  do  %% Line 1195
					call 'erlang':'unlink'
					    (Id)
					do  %% Line 1196
					    call 'erlang':'exit'
						(Id, 'shutdown')
					    %% Line 1197
					    receive
					      %% Line 1199
					      <{'EXIT',_cor16,_cor17}>
						  when call 'erlang':'=:='
							(_cor16,
							 Id) ->
						  'ok'
					    after %% Line 1200
						  0 ->
					      %% Line 1201
					      receive
						%% Line 1202
						<{'DOWN',_cor18,'process',_cor19,_cor20}>
						    when let <_cor21> =
							  call 'erlang':'=:='
							      (_cor18, Ref)
						      in  let <_cor22> =
							      call 'erlang':'=:='
								  (_cor19, Id)
							  in  call 'erlang':'and'
								  (_cor21, _cor22) ->
						    'ok'
					      after _cor4 ->
						do  %% Line 1204
						    call 'erlang':'exit'
							(Id, 'kill')
						    %% Line 1205
						    receive
						      %% Line 1206
						      <{'DOWN',_cor23,'process',_cor24,_cor25}>
							  when let <_cor26> =
								call 'erlang':'=:='
								    (_cor23, Ref)
							    in  let <_cor27> =
								    call 'erlang':'=:='
									(_cor24, Id)
								in  call 'erlang':'and'
									(_cor26, _cor27) ->
							  'ok'
						    after 'infinity' ->
						      'true'
			    %% Line 1210
			    <_cor28> when 'true' ->
				'ok'
			  end
		      -| [{'id',{0,0,'-terminate/2-fun-0-'}}] )
		in  %% Line 1212
		    ( case _cor0 of
			( <( {'state',_cor29,_cor30,_cor31,_rec128,_cor32,_cor33,_cor34,_cor35}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  call 'lists':'foreach'
				      (_cor11, _rec128)
				  %% Line 1213
				  case call 'ets':'delete'
					   ('ac_tab') of
				    <'true'> when 'true' ->
					%% Line 1214
					'ok'
				    ( <_cor12> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor12})
				      -| ['compiler_generated'] )
				  end
			  -| ['compiler_generated'] )
			( <_cor36> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
'code_change'/3 =
    %% Line 1218
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1219
	{'ok',_cor1}
'cntrl'/3 =
    %% Line 1225
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <AppName,{'state',_cor7,_cor8,_cor9,_cor10,Control,_cor11,_cor12,_cor13},Msg> when 'true' ->
	      %% Line 1226
	      case call 'lists':'keyfind'
		       (AppName, 1, Control) of
		%% Line 1227
		<{_X_AppName,Pid}> when 'true' ->
		    do  %% Line 1228
			call 'erlang':'!'
			    (Pid, Msg)
			%% Line 1229
			'true'
		%% Line 1230
		<'false'> when 'true' ->
		    %% Line 1231
		    'false'
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'cntrl',3}}] )
	    -| ['compiler_generated'] )
	end
'notify_cntrl_started'/4 =
    %% Line 1234
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_AppName,{'distributed',_X_Node},_X_S,_X_Res> when 'true' ->
	      %% Line 1235
	      'ok'
	  %% Line 1236
	  <AppName,_X_Id,S,Res> when 'true' ->
	      %% Line 1237
	      apply 'cntrl'/3
		  (AppName, S, {'ac_application_run',AppName,Res})
	end
'del_cntrl'/2 =
    %% Line 1239
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{_cor5,Pid}|T],_cor6>
	      when call 'erlang':'=:='
		    (_cor6,
		     Pid) ->
	      %% Line 1240
	      apply 'del_cntrl'/2
		  (T, Pid)
	  %% Line 1241
	  <[H|T],Pid> when 'true' ->
	      let <_cor2> =
		  %% Line 1242
		  apply 'del_cntrl'/2
		      (T, Pid)
	      in  %% Line 1242
		  [H|_cor2]
	  %% Line 1243
	  <[],_X_Pid> when 'true' ->
	      %% Line 1244
	      []
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'del_cntrl',2}}] )
	    -| ['compiler_generated'] )
	end
'get_loaded'/1 =
    %% Line 1246
    fun (_cor0) ->
	let <AppName> =
	    %% Line 1247
	    apply 'get_appl_name'/1
		(_cor0)
	in  %% Line 1248
	    case call 'ets':'lookup'
		     ('ac_tab', {'loaded',AppName}) of
	      %% Line 1249
	      <[{_X_Key,Appl}|[]]> when 'true' ->
		  {'true',Appl}
	      %% Line 1250
	      <_cor4> when 'true' ->
		  'false'
	    end
'do_load_application'/2 =
    %% Line 1253
    fun (_cor1,_cor0) ->
	%% Line 1254
	case apply 'get_loaded'/1
		 (_cor1) of
	  %% Line 1255
	  <{'true',_cor6}> when 'true' ->
	      %% Line 1256
	      call 'erlang':'throw'
		  ({'error',{'already_loaded',_cor1}})
	  %% Line 1257
	  <'false'> when 'true' ->
	      %% Line 1258
	      case apply 'make_appl'/1
		       (_cor1) of
		%% Line 1259
		<{'ok',Appl}> when 'true' ->
		    apply 'load'/2
			(_cor0, Appl)
		%% Line 1260
		<Error> when 'true' ->
		    Error
	      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor3})
	    -| ['compiler_generated'] )
	end
'load'/2 =
    %% Line 1266
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,{ApplData,ApplEnv,IncApps,Descr,Id,Vsn,Apps}> when 'true' ->
	      %% Line 1267
	      ( case ApplData of
		  ( <( {'appl_data',_rec129,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27}
		       -| ['compiler_generated'] )> when 'true' ->
			let <ConfEnv> =
			    %% Line 1268
			    apply 'get_env_i'/2
				(_rec129, S)
			in  let <NewEnv> =
				%% Line 1269
				apply 'merge_app_env'/2
				    (ApplEnv, ConfEnv)
			    in  let <CmdLineEnv> =
				    %% Line 1270
				    apply 'get_cmd_env'/1
					(_rec129)
				in  let <NewEnv2> =
					%% Line 1271
					apply 'merge_app_env'/2
					    (NewEnv, CmdLineEnv)
				    in  let <NewEnv3> =
					    %% Line 1272
					    apply 'keyreplaceadd'/4
						('included_applications', 1, NewEnv2, %% Line 1273
										      {'included_applications',IncApps})
					in  do  %% Line 1274
						apply 'add_env'/2
						    (_rec129, NewEnv3)
						let <Appl> =
						    %% Line 1275
						    {'appl',_rec129,%% Line 1276
								    ApplData,Descr,Id,Vsn,'undefined',%% Line 1276
												      IncApps,%% Line 1276
													      Apps}
						in  do  %% Line 1277
							call 'ets':'insert'
							    ('ac_tab', {{'loaded',_rec129},Appl})
							let <_cor17> =
							    %% Line 1279
							    ( fun (_cor14,_cor13) ->
								  %% Line 1280
								  case apply 'get_loaded'/1
									   (_cor14) of
								    %% Line 1281
								    <{'true',_cor29}> when 'true' ->
									_cor13
								    %% Line 1282
								    <'false'> when 'true' ->
									%% Line 1283
									case apply 'do_load_application'/2
										 (_cor14, _cor13) of
									  %% Line 1284
									  <{'ok',S2}> when 'true' ->
									      S2
									  %% Line 1285
									  <Error> when 'true' ->
									      call 'erlang':'throw'
										  (Error)
									end
								    ( <_cor12> when 'true' ->
									  primop 'match_fail'
									      ({'case_clause',_cor12})
								      -| ['compiler_generated'] )
								  end
							      -| [{'id',{0,0,'-load/2-fun-0-'}}] )
							in  let <NewS> =
								%% Line 1279
								call 'lists':'foldl'
								    (_cor17, %% Line 1288
									     S, %% Line 1288
										IncApps)
							    in  %% Line 1289
								{'ok',NewS}
		    -| ['compiler_generated'] )
		  ( <_cor28> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','appl_data'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19})
		  -| [{'function_name',{'load',2}}] )
	    -| ['compiler_generated'] )
	end
'unload'/2 =
    %% Line 1291
    fun (_cor1,_cor0) ->
	%% Line 1292
	case apply 'get_env'/2
		 (_cor1, 'included_applications') of
	  <{'ok',IncApps}> when 'true' ->
	      do  %% Line 1293
		  apply 'del_env'/1
		      (_cor1)
		  do  %% Line 1294
		      call 'ets':'delete'
			  ('ac_tab', {'loaded',_cor1})
		      let <_cor8> =
			  %% Line 1295
			  ( fun (_cor5,_cor4) ->
				%% Line 1296
				case apply 'get_loaded'/1
					 (_cor5) of
				  %% Line 1297
				  <'false'> when 'true' ->
				      _cor4
				  %% Line 1298
				  <{'true',_cor11}> when 'true' ->
				      apply 'unload'/2
					  (_cor5, _cor4)
				  ( <_cor3> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor3})
				    -| ['compiler_generated'] )
				end
			    -| [{'id',{0,0,'-unload/2-fun-0-'}}] )
		      in  %% Line 1295
			  call 'lists':'foldl'
			      (_cor8, _cor0, %% Line 1300
					     IncApps)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'check_start_cond'/4 =
    %% Line 1302
    fun (_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 1303
	    apply 'validRestartType'/1
		(_cor2)
	    %% Line 1304
	    case apply 'get_loaded'/1
		     (_cor3) of
	      %% Line 1305
	      <{'true',Appl}> when 'true' ->
		  %% Line 1308
		  case call 'lists':'keymember'
			   (_cor3, 1, _cor0) of
		    %% Line 1309
		    <'true'> when 'true' ->
			%% Line 1310
			{'error',{'already_started',_cor3}}
		    %% Line 1311
		    <'false'> when 'true' ->
			let <_cor9> =
			    %% Line 1313
			    ( fun (_cor7) ->
				  %% Line 1314
				  case call 'lists':'keymember'
					   (_cor7, 1, _cor1) of
				    %% Line 1315
				    <'true'> when 'true' ->
					'ok'
				    %% Line 1316
				    <'false'> when 'true' ->
					%% Line 1317
					call 'erlang':'throw'
					    ({'error',{'not_started',_cor7}})
				    ( <_cor6> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor6})
				      -| ['compiler_generated'] )
				  end
			      -| [{'id',{0,0,'-check_start_cond/4-fun-0-'}}] )
			in  %% Line 1319
			    ( case Appl of
				( <( {'appl',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_rec130}
				     -| ['compiler_generated'] )> when 'true' ->
				      do  call 'lists':'foreach'
					      (_cor9, _rec130)
					  %% Line 1320
					  {'ok',Appl}
				  -| ['compiler_generated'] )
				( <_cor23> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','appl'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
		    ( <_cor10> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor10})
		      -| ['compiler_generated'] )
		  end
	      %% Line 1322
	      <'false'> when 'true' ->
		  %% Line 1323
		  {'error',{'not_loaded',_cor3}}
	      ( <_cor11> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor11})
		-| ['compiler_generated'] )
	    end
'do_start'/5 =
    %% Line 1326
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1327
	( case _cor0 of
	    ( <( {'state',_cor34,_cor35,_cor36,_cor37,_cor38,_rec131,_cor39,_cor40}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor8> =
		      case call 'lists':'keyfind'
			       (_cor4, 1, _rec131) of
			%% Line 1328
			<{_X_AppName2,OldRT}> when 'true' ->
			    %% Line 1329
			    apply 'get_restart_type'/2
				(_cor3, OldRT)
			%% Line 1330
			<'false'> when 'true' ->
			    _cor3
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor7})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 1335
		      case call 'lists':'keymember'
			       (_cor4, 1, _cor39) of
			%% Line 1336
			<'false'> when 'true' ->
			    %% Line 1337
			    case apply 'get_loaded'/1
				     (_cor4) of
			      <{'true',Appl}> when 'true' ->
				  do  %% Line 1339
				      apply 'spawn_starter'/4
					  ('undefined', Appl, _cor0, _cor2)
				      let <_cor22> =
					  %% Line 1340
					  case call 'lists':'keymember'
						   (_cor4, 1, _cor35) of
					    %% Line 1341
					    <'false'> when 'true' ->
						%% Line 1343
						[{_cor4,_cor8,_cor2,_cor1}|_cor35]
					    %% Line 1345
					    <'true'> when 'true' ->
						_cor35
					    ( <_cor21> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_cor21})
					      -| ['compiler_generated'] )
					  end
				      in  let <_rec137> =
					      %% Line 1349
					      [{_cor4,_cor1}|_cor39]
					  in  let <_cor26> =
						  %% Line 1349
						  call 'erlang':'setelement'
						      (8, _cor0, _rec137)
					      in  %% Line 1348
						  call 'erlang':'setelement'
						      (3, _cor26, _cor22)
			      ( <_cor12> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor12})
				-| ['compiler_generated'] )
			    end
			%% Line 1350
			<'true'> when 'true' ->
			    _cor0
			( <_cor28> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor28})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor41> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'spawn_starter'/4 =
    %% Line 1354
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1355
	call 'erlang':'spawn_link'
	    ('application_controller', 'init_starter', [_cor3|[_cor2|[_cor1|[_cor0|[]]]]])
'init_starter'/4 =
    %% Line 1357
    fun (_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 1358
	    call 'erlang':'process_flag'
		('trap_exit', 'true')
	    %% Line 1359
	    ( case _cor2 of
		( <( {'appl',_rec139,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <_cor7> =
			  catch
			      %% Line 1361
			      apply 'start_appl'/3
				  (_cor2, _cor1, _cor0)
		      in  %% Line 1360
			  call 'gen_server':'cast'
			      ('application_controller', {'application_started',_rec139,_cor7})
		  -| ['compiler_generated'] )
		( <_cor19> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','appl'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'reply'/2 =
    %% Line 1363
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'undefined',_X_Reply> when 'true' ->
	      %% Line 1364
	      'ok'
	  %% Line 1365
	  <From,Reply> when 'true' ->
	      call 'gen_server':'reply'
		  (From, Reply)
	end
'start_appl'/3 =
    %% Line 1367
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1368
	( case _cor2 of
	    ( <( {'appl',_cor22,_rec140,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 1369
		  ( case _rec140 of
		      ( <( {'appl_data',_cor30,_cor31,_cor32,_rec141,_cor33,_cor34,_cor35,_cor36}
			   -| ['compiler_generated'] )> when 'true' ->
			    case _rec141 of
			      %% Line 1370
			      <[]> when 'true' ->
				  %% Line 1371
				  {'ok','undefined'}
			      %% Line 1372
			      <_cor38> when 'true' ->
				  %% Line 1374
				  ( case _cor1 of
				      ( <( {'state',_cor39,_cor40,_cor41,_rec142,_cor42,_cor43,_cor44,_cor45}
					   -| ['compiler_generated'] )> when 'true' ->
					    let <_cor16> =
						%% Line 1376
						( fun (_cor14) ->
						      %% Line 1377
						      case call 'lists':'keymember'
							       (_cor14, 1, _rec142) of
							%% Line 1378
							<'true'> when 'true' ->
							    %% Line 1379
							    'ok'
							%% Line 1380
							<'false'> when 'true' ->
							    %% Line 1381
							    call 'erlang':'throw'
								({'info',{'not_running',_cor14}})
							( <_cor13> when 'true' ->
							      primop 'match_fail'
								  ({'case_clause',_cor13})
							  -| ['compiler_generated'] )
						      end
						  -| [{'id',{0,0,'-start_appl/3-fun-0-'}}] )
					    in  do  %% Line 1375
						    call 'lists':'foreach'
							(_cor16, _cor28)
						    %% Line 1384
						    case call 'application_master':'start_link'
							     (_rec140, _cor0) of
						      %% Line 1385
						      <Ok = {'ok',_X_Pid}> when 'true' ->
							  %% Line 1386
							  Ok
						      %% Line 1387
						      <Error = {'error',_X_Reason}> when 'true' ->
							  %% Line 1388
							  call 'erlang':'throw'
							      (Error)
						      ( <_cor17> when 'true' ->
							    primop 'match_fail'
								({'case_clause',_cor17})
							-| ['compiler_generated'] )
						    end
					-| ['compiler_generated'] )
				      ( <_cor46> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','state'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			    end
			-| ['compiler_generated'] )
		      ( <_cor37> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','appl_data'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor29> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','appl'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'stop_appl'/3 =
    %% Line 1396
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <AppName,Id,Type>
	      when call 'erlang':'is_pid'
		    (Id) ->
	      do  %% Line 1397
		  call 'erlang':'unlink'
		      (Id)
		  do  %% Line 1398
		      call 'application_master':'stop'
			  (Id)
		      do  %% Line 1399
			  apply 'info_exited'/3
			      (AppName, 'stopped', Type)
			  %% Line 1400
			  call 'ets':'delete'
			      ('ac_tab', {'application_master',AppName})
	  %% Line 1401
	  <AppName,'undefined',Type> when 'true' ->
	      %% Line 1403
	      apply 'info_exited'/3
		  (AppName, 'stopped', Type)
	  %% Line 1404
	  <_X_AppName,_X_Id,_X_Type> when 'true' ->
	      %% Line 1406
	      'ok'
	end
'keysearchdelete'/3 =
    %% Line 1408
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1409
	apply 'ksd'/4
	    (_cor2, _cor1, _cor0, [])
'ksd'/4 =
    %% Line 1411
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Key,Pos,[H|T],Rest>
	      when try
		    let <_cor4> =
			call 'erlang':'element'
			    (Pos, H)
		    in  call 'erlang':'=:='
			    (_cor4, Key)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor5> =
		  %% Line 1412
		  call 'erlang':'++'
		      (Rest, T)
	      in  %% Line 1412
		  {'value',H,_cor5}
	  %% Line 1413
	  <Key,Pos,[H|T],Rest> when 'true' ->
	      %% Line 1414
	      apply 'ksd'/4
		  (Key, Pos, T, [H|Rest])
	  %% Line 1415
	  <_X_Key,_X_Pos,[],_X_Rest> when 'true' ->
	      %% Line 1416
	      'false'
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'ksd',4}}] )
	    -| ['compiler_generated'] )
	end
'keyreplaceadd'/4 =
    %% Line 1418
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1420
	case call 'lists':'keymember'
		 (_cor3, _cor2, _cor1) of
	  %% Line 1421
	  <'true'> when 'true' ->
	      call 'lists':'keyreplace'
		  (_cor3, _cor2, _cor1, _cor0)
	  %% Line 1422
	  <'false'> when 'true' ->
	      [_cor0|_cor1]
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor4})
	    -| ['compiler_generated'] )
	end
'validRestartType'/1 =
    %% Line 1425
    fun (_cor0) ->
	case _cor0 of
	  <'permanent'> when 'true' ->
	      'true'
	  %% Line 1426
	  <'temporary'> when 'true' ->
	      'true'
	  %% Line 1427
	  <'transient'> when 'true' ->
	      'true'
	  %% Line 1428
	  <RestartType> when 'true' ->
	      %% Line 1429
	      call 'erlang':'throw'
		  ({'error',{'invalid_restart_type',RestartType}})
	end
'nd'/1 =
    %% Line 1431
    fun (_cor0) ->
	case _cor0 of
	  <{'distributed',Node}> when 'true' ->
	      Node
	  %% Line 1432
	  <_cor2> when 'true' ->
	      call 'erlang':'node'
		  ()
	end
'get_restart_type'/2 =
    %% Line 1434
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'undefined',OldRT> when 'true' ->
	      %% Line 1435
	      OldRT
	  %% Line 1436
	  <RT,_X_OldRT> when 'true' ->
	      %% Line 1437
	      RT
	end
'get_appl_name'/1 =
    %% Line 1439
    fun (_cor0) ->
	case _cor0 of
	  <Name>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      Name
	  %% Line 1440
	  <{'application',Name,_cor2}>
	      when call 'erlang':'is_atom'
		    (Name) ->
	      Name
	  %% Line 1441
	  <Appl> when 'true' ->
	      call 'erlang':'throw'
		  ({'error',{'bad_application',Appl}})
	end
'make_appl'/1 =
    %% Line 1443
    fun (_cor0) ->
	case _cor0 of
	  <Name>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 1444
		  call 'erlang':'atom_to_list'
		      (Name)
	      in  let <FName> =
		      %% Line 1444
		      call 'erlang':'++'
			  (_cor1, [46|[97|[112|[112]]]])
		  in  %% Line 1445
		      case call 'code':'where_is_file'
			       (FName) of
			%% Line 1446
			<'non_existing'> when 'true' ->
			    let <_cor3> =
				%% Line 1447
				call 'file':'format_error'
				    ('enoent')
			    in  %% Line 1447
				{'error',{_cor3,FName}}
			%% Line 1448
			<FullName> when 'true' ->
			    %% Line 1449
			    case apply 'prim_consult'/1
				     (FullName) of
			      %% Line 1450
			      <{'ok',[Application|[]]}> when 'true' ->
				  let <_cor4> =
				      %% Line 1451
				      apply 'make_appl_i'/1
					  (Application)
				  in  %% Line 1451
				      {'ok',_cor4}
			      %% Line 1452
			      <{'error',Reason}> when 'true' ->
				  let <_cor5> =
				      %% Line 1453
				      call 'file':'format_error'
					  (Reason)
				  in  %% Line 1453
				      {'error',{_cor5,FName}}
			      %% Line 1454
			      <'error'> when 'true' ->
				  %% Line 1455
				  {'error',[98|[97|[100|[32|[101|[110|[99|[111|[100|[105|[110|[103]]]]]]]]]]]]}
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor6})
				-| ['compiler_generated'] )
			    end
		      end
	  %% Line 1458
	  <Application> when 'true' ->
	      let <_cor8> =
		  %% Line 1459
		  apply 'make_appl_i'/1
		      (Application)
	      in  %% Line 1459
		  {'ok',_cor8}
	end
'prim_consult'/1 =
    %% Line 1461
    fun (_cor0) ->
	%% Line 1462
	case call 'erl_prim_loader':'get_file'
		 (_cor0) of
	  %% Line 1463
	  <{'ok',Bin,_cor5}> when 'true' ->
	      %% Line 1464
	      case apply 'file_binary_to_list'/1
		       (Bin) of
		%% Line 1465
		<{'ok',String}> when 'true' ->
		    %% Line 1466
		    case call 'erl_scan':'string'
			     (String) of
		      %% Line 1467
		      <{'ok',Tokens,_X_EndLine}> when 'true' ->
			  %% Line 1468
			  apply 'prim_parse'/2
			      (Tokens, [])
		      %% Line 1469
		      <{'error',Reason,_X_EndLine}> when 'true' ->
			  %% Line 1470
			  {'error',Reason}
		      ( <_cor1> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor1})
			-| ['compiler_generated'] )
		    end
		%% Line 1472
		<'error'> when 'true' ->
		    %% Line 1473
		    'error'
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1475
	  <'error'> when 'true' ->
	      %% Line 1476
	      {'error','enoent'}
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor3})
	    -| ['compiler_generated'] )
	end
'prim_parse'/2 =
    %% Line 1479
    fun (_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 1480
	    ( fun (_cor3) ->
		  let <_cor2> =
		      call 'erlang':'element'
			  (1, _cor3)
		  in  call 'erlang':'=/='
			  (_cor2, 'dot')
	      -| [{'id',{0,0,'-prim_parse/2-fun-0-'}}] )
	in  %% Line 1480
	    case call 'lists':'splitwith'
		     (_cor5, _cor1) of
	      %% Line 1481
	      <{[],[]}> when 'true' ->
		  let <_cor6> =
		      %% Line 1482
		      call 'lists':'reverse'
			  (_cor0)
		  in  %% Line 1482
		      {'ok',_cor6}
	      %% Line 1483
	      <{Tokens2,[Dot = {'dot',_cor14}|Rest]}> when 'true' ->
		  let <_cor7> =
		      %% Line 1484
		      call 'erlang':'++'
			  (Tokens2, [Dot|[]])
		  in  %% Line 1484
		      case call 'erl_parse':'parse_term'
			       (_cor7) of
			%% Line 1485
			<{'ok',Term}> when 'true' ->
			    %% Line 1486
			    apply 'prim_parse'/2
				(Rest, [Term|_cor0])
			%% Line 1487
			<Error = {'error',_X_R}> when 'true' ->
			    %% Line 1488
			    Error
			( <_cor8> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor8})
			  -| ['compiler_generated'] )
		      end
	      %% Line 1490
	      <{Tokens2,[]}> when 'true' ->
		  %% Line 1491
		  case call 'erl_parse':'parse_term'
			   (Tokens2) of
		    %% Line 1492
		    <{'ok',Term}> when 'true' ->
			let <_cor9> =
			    %% Line 1493
			    call 'lists':'reverse'
				([Term|_cor0])
			in  %% Line 1493
			    {'ok',_cor9}
		    %% Line 1494
		    <Error = {'error',_X_R}> when 'true' ->
			%% Line 1495
			Error
		    ( <_cor10> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor10})
		      -| ['compiler_generated'] )
		  end
	      ( <_cor11> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor11})
		-| ['compiler_generated'] )
	    end
'make_appl_i'/1 =
    %% Line 1499
    fun (_cor0) ->
	case _cor0 of
	  <{'application',Name,Opts}>
	      when let <_cor1> =
		    call 'erlang':'is_atom'
			(Name)
		in  let <_cor2> =
			call 'erlang':'is_list'
			    (Opts)
		    in  call 'erlang':'and'
			    (_cor1, _cor2) ->
	      let <Descr> =
		  %% Line 1500
		  apply 'get_opt'/3
		      ('description', Opts, [])
	      in  let <Id> =
		      %% Line 1501
		      apply 'get_opt'/3
			  ('id', Opts, [])
		  in  let <Vsn> =
			  %% Line 1502
			  apply 'get_opt'/3
			      ('vsn', Opts, [])
		      in  let <Mods> =
			      %% Line 1503
			      apply 'get_opt'/3
				  ('modules', Opts, [])
			  in  let <Regs> =
				  %% Line 1504
				  apply 'get_opt'/3
				      ('registered', Opts, [])
			      in  let <Apps> =
				      %% Line 1505
				      apply 'get_opt'/3
					  ('applications', Opts, [])
				  in  let <_cor10> =
					  %% Line 1507
					  case apply 'get_opt'/3
						   ('mod', Opts, []) of
					    %% Line 1508
					    <MA = {M,_X_A}>
						when call 'erlang':'is_atom'
						      (M) ->
						MA
					    %% Line 1509
					    <[]> when 'true' ->
						[]
					    %% Line 1510
					    <Other> when 'true' ->
						call 'erlang':'throw'
						    ({'error',{'badstartspec',Other}})
					  end
				      in  let <Phases> =
					      %% Line 1512
					      apply 'get_opt'/3
						  ('start_phases', Opts, 'undefined')
					  in  let <Env> =
						  %% Line 1513
						  apply 'get_opt'/3
						      ('env', Opts, [])
					      in  let <MaxP> =
						      %% Line 1514
						      apply 'get_opt'/3
							  ('maxP', Opts, 'infinity')
						  in  let <MaxT> =
							  %% Line 1515
							  apply 'get_opt'/3
							      ('maxT', Opts, 'infinity')
						      in  let <IncApps> =
							      %% Line 1516
							      apply 'get_opt'/3
								  ('included_applications', Opts, [])
							  in  %% Line 1517
							      {{'appl_data',Name,Regs,Phases,_cor10,%% Line 1518
												    Mods,%% Line 1518
													 IncApps,%% Line 1518
														 MaxP,%% Line 1518
														      MaxT},%% Line 1519
															    Env,%% Line 1519
																IncApps,%% Line 1519
																	Descr,%% Line 1519
																	      Id,%% Line 1519
																		 Vsn,%% Line 1519
																		     Apps}
	  %% Line 1520
	  <{'application',Name,Opts}>
	      when call 'erlang':'is_list'
		    (Opts) ->
	      %% Line 1521
	      call 'erlang':'throw'
		  ({'error',{'invalid_name',Name}})
	  %% Line 1522
	  <{'application',_X_Name,Opts}> when 'true' ->
	      %% Line 1523
	      call 'erlang':'throw'
		  ({'error',{'invalid_options',Opts}})
	  %% Line 1524
	  <Appl> when 'true' ->
	      call 'erlang':'throw'
		  ({'error',{'bad_application',Appl}})
	end
'do_change_apps'/3 =
    %% Line 1535
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1542
	case apply 'check_conf_sys'/1
		 (_cor1) of
	  <{'ok',SysConfig,Errors}> when 'true' ->
	      let <_cor8> =
		  %% Line 1546
		  ( fun (_cor6) ->
			case _cor6 of
			  <{'error',{SysFName,Line,Str}}> when 'true' ->
			      let <_cor4> =
				  %% Line 1547
				  call 'io_lib':'format'
				      ([126|[116|[112|[58|[32|[126|[119|[58|[32|[126|[116|[115|[126|[110]]]]]]]]]]]]]], %% Line 1548
															[SysFName|[Line|[Str|[]]]])
			      in  let <Str2> =
				      %% Line 1547
				      call 'lists':'flatten'
					  (_cor4)
				  in  %% Line 1549
				      call 'error_logger':'format'
					  (Str2, [])
			  ( <_cor7> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor7})
				  -| [{'function_name',{'-do_change_apps/3-fun-0-',1}}] )
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-do_change_apps/3-fun-0-'}}] )
	      in  do  %% Line 1546
		      call 'lists':'foreach'
			  (_cor8, %% Line 1551
				  Errors)
		      let <_cor16> =
			  %% Line 1553
			  ( fun (_cor14) ->
				%% Line 1554
				( case _cor14 of
				    ( <( {'appl',_rec144,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27}
					 -| ['compiler_generated'] )> when 'true' ->
					  %% Line 1555
					  case apply 'is_loaded_app'/2
						   (_rec144, _cor2) of
					    %% Line 1556
					    <{'true',Application}> when 'true' ->
						let <_cor12> =
						    %% Line 1557
						    apply 'make_appl'/1
							(Application)
						in  %% Line 1557
						    apply 'do_change_appl'/3
							(_cor12, _cor14, %% Line 1558
									 SysConfig)
					    %% Line 1561
					    <'false'> when 'true' ->
						_cor14
					    ( <_cor13> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_cor13})
					      -| ['compiler_generated'] )
					  end
				      -| ['compiler_generated'] )
				    ( <_cor28> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','appl'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    -| [{'id',{0,0,'-do_change_apps/3-fun-1-'}}] )
		      in  let <_cor17> =
			      %% Line 1553
			      call 'lists':'map'
				  (_cor16, _cor0)
			  in  %% Line 1553
			      {_cor17,%% Line 1565
				      SysConfig}
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'is_loaded_app'/2 =
    %% Line 1567
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <AppName,[{'application',_cor4,App}|_cor5]>
	      when call 'erlang':'=:='
		    (_cor4,
		     AppName) ->
	      %% Line 1568
	      {'true',{'application',AppName,App}}
	  %% Line 1569
	  <AppName,[_cor6|T]> when 'true' ->
	      apply 'is_loaded_app'/2
		  (AppName, T)
	  %% Line 1570
	  <_X_AppName,[]> when 'true' ->
	      'false'
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'is_loaded_app',2}}] )
	    -| ['compiler_generated'] )
	end
'do_change_appl'/3 =
    %% Line 1572
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'ok',{ApplData,Env,IncApps,Descr,Id,Vsn,Apps}},%% Line 1573
							   OldAppl,%% Line 1573
								   Config> when 'true' ->
	      %% Line 1574
	      ( case OldAppl of
		  ( <( {'appl',_rec145,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22}
		       -| ['compiler_generated'] )> when 'true' ->
			let <ConfEnv> =
			    %% Line 1577
			    apply 'get_opt'/3
				(_rec145, Config, [])
			in  let <NewEnv1> =
				%% Line 1578
				apply 'merge_app_env'/2
				    (Env, ConfEnv)
			    in  let <CmdLineEnv> =
				    %% Line 1581
				    apply 'get_cmd_env'/1
					(_rec145)
				in  let <NewEnv2> =
					%% Line 1582
					apply 'merge_app_env'/2
					    (NewEnv1, CmdLineEnv)
				    in  let <NewEnv3> =
					    %% Line 1585
					    apply 'keyreplaceadd'/4
						('included_applications', 1, NewEnv2, %% Line 1586
										      {'included_applications',IncApps})
					in  do  %% Line 1589
						apply 'del_env'/1
						    (_rec145)
						do  %% Line 1590
						    apply 'add_env'/2
							(_rec145, NewEnv3)
						    %% Line 1597
						    {'appl',_rec145,ApplData,Descr,Id,Vsn,_cor20,IncApps,Apps}
		    -| ['compiler_generated'] )
		  ( <_cor23> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','appl'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1598
	  <Error = {'error',_X_R},_X_Appl,_X_ConfData> when 'true' ->
	      %% Line 1599
	      call 'erlang':'throw'
		  (Error)
	  ( <_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13})
		  -| [{'function_name',{'do_change_appl',3}}] )
	    -| ['compiler_generated'] )
	end
'get_opt'/3 =
    %% Line 1601
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1602
	case call 'lists':'keyfind'
		 (_cor2, 1, _cor1) of
	  %% Line 1603
	  <{_X_Key,Val}> when 'true' ->
	      Val
	  %% Line 1604
	  <_cor7> when 'true' ->
	      _cor0
	end
'get_cmd_env'/1 =
    %% Line 1607
    fun (_cor0) ->
	%% Line 1608
	case call 'init':'get_argument'
		 (_cor0) of
	  %% Line 1609
	  <{'ok',Args}> when 'true' ->
	      let <_cor6> =
		  %% Line 1610
		  ( fun (_cor3,_cor2) ->
			let <_cor1> =
			    apply 'conv'/1
				(_cor3)
			in  call 'erlang':'++'
				(_cor1, _cor2)
		    -| [{'id',{0,0,'-get_cmd_env/1-fun-0-'}}] )
	      in  %% Line 1610
		  call 'lists':'foldl'
		      (_cor6, [], Args)
	  %% Line 1611
	  <_cor9> when 'true' ->
	      []
	end
'conv'/1 =
    %% Line 1614
    fun (_cor0) ->
	case _cor0 of
	  <[Key|[Val|T]]> when 'true' ->
	      let <_cor2> =
		  %% Line 1615
		  apply 'make_term'/1
		      (Key)
	      in  let <_cor1> =
		      %% Line 1615
		      apply 'make_term'/1
			  (Val)
		  in  let <_cor3> =
			  %% Line 1615
			  apply 'conv'/1
			      (T)
		      in  %% Line 1615
			  [{_cor2,_cor1}|_cor3]
	  %% Line 1616
	  <_cor5> when 'true' ->
	      []
	end
'make_term'/1 =
    %% Line 1619
    fun (_cor0) ->
	%% Line 1620
	case call 'erl_scan':'string'
		 (_cor0) of
	  %% Line 1621
	  <{'ok',Tokens,_cor7}> when 'true' ->
	      let <_cor1> =
		  %% Line 1622
		  call 'erlang':'++'
		      (Tokens, [{'dot',1}])
	      in  %% Line 1622
		  case call 'erl_parse':'parse_term'
			   (_cor1) of
		    %% Line 1623
		    <{'ok',Term}> when 'true' ->
			%% Line 1624
			Term
		    %% Line 1625
		    <{'error',{_cor8,M,Reason}}> when 'true' ->
			let <_cor2> =
			    %% Line 1627
			    call M:'format_error'
				(Reason)
			in  do  %% Line 1626
				call 'error_logger':'format'
				    ([97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[95|[99|[111|[110|[116|[114|[111|[108|[108|[101|[114|[58|[32|[126|[116|[115|[58|[32|[126|[116|[115|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 1627
																													 [_cor2|[_cor0|[]]])
				%% Line 1628
				call 'erlang':'throw'
				    ({'error',{'bad_environment_value',_cor0}})
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor3})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1630
	  <{'error',{_cor9,M,Reason},_cor10}> when 'true' ->
	      let <_cor4> =
		  %% Line 1632
		  call M:'format_error'
		      (Reason)
	      in  do  %% Line 1631
		      call 'error_logger':'format'
			  ([97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[95|[99|[111|[110|[116|[114|[111|[108|[108|[101|[114|[58|[32|[126|[116|[115|[58|[32|[126|[116|[115|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 1632
																											       [_cor4|[_cor0|[]]])
		      %% Line 1633
		      call 'erlang':'throw'
			  ({'error',{'bad_environment_value',_cor0}})
	  ( <_cor5> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor5})
	    -| ['compiler_generated'] )
	end
'get_env_i'/2 =
    %% Line 1636
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Name,{'state',_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,ConfData}>
	      when call 'erlang':'is_list'
		    (ConfData) ->
	      %% Line 1637
	      case call 'lists':'keyfind'
		       (Name, 1, ConfData) of
		%% Line 1638
		<{_X_Name,Env}> when 'true' ->
		    Env
		%% Line 1639
		<_cor12> when 'true' ->
		    []
	      end
	  %% Line 1641
	  <_X_Name,_cor13> when 'true' ->
	      []
	end
'merge_env'/2 =
    %% Line 1644
    fun (_cor1,_cor0) ->
	%% Line 1645
	apply 'merge_env'/3
	    (_cor1, _cor0, [])
'merge_env'/3 =
    %% Line 1647
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{App,AppEnv1}|T],Env2,Res> when 'true' ->
	      %% Line 1648
	      case apply 'get_env_key'/2
		       (App, Env2) of
		%% Line 1649
		<{'value',AppEnv2,RestEnv2}> when 'true' ->
		    let <NewAppEnv> =
			%% Line 1650
			apply 'merge_app_env'/2
			    (AppEnv1, AppEnv2)
		    in  %% Line 1651
			apply 'merge_env'/3
			    (T, RestEnv2, [{App,NewAppEnv}|Res])
		%% Line 1652
		<_cor8> when 'true' ->
		    %% Line 1653
		    apply 'merge_env'/3
			(T, Env2, [{App,AppEnv1}|Res])
	      end
	  %% Line 1655
	  <[],Env2,Res> when 'true' ->
	      %% Line 1656
	      call 'erlang':'++'
		  (Env2, Res)
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'merge_env',3}}] )
	    -| ['compiler_generated'] )
	end
'change_app_env'/3 =
    %% Line 1660
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1661
	case apply 'get_env_key'/2
		 (_cor1, _cor2) of
	  %% Line 1662
	  <{'value',AppEnv,RestEnv}> when 'true' ->
	      let <_cor3> =
		  %% Line 1663
		  apply _cor0
		      (AppEnv)
	      in  %% Line 1663
		  [{_cor1,_cor3}|RestEnv]
	  %% Line 1664
	  <_cor9> when 'true' ->
	      let <_cor4> =
		  %% Line 1665
		  apply _cor0
		      ([])
	      in  %% Line 1665
		  [{_cor1,_cor4}|_cor2]
	end
'merge_app_env'/2 =
    %% Line 1669
    fun (_cor1,_cor0) ->
	%% Line 1670
	apply 'merge_app_env'/3
	    (_cor1, _cor0, [])
'merge_app_env'/3 =
    %% Line 1672
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{Key,Val}|T],Env2,Res> when 'true' ->
	      %% Line 1673
	      case apply 'get_env_key'/2
		       (Key, Env2) of
		%% Line 1674
		<{'value',NewVal,RestEnv}> when 'true' ->
		    %% Line 1675
		    apply 'merge_app_env'/3
			(T, RestEnv, [{Key,NewVal}|Res])
		%% Line 1676
		<_cor7> when 'true' ->
		    %% Line 1677
		    apply 'merge_app_env'/3
			(T, Env2, [{Key,Val}|Res])
	      end
	  %% Line 1679
	  <[],Env2,Res> when 'true' ->
	      %% Line 1680
	      call 'erlang':'++'
		  (Env2, Res)
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'merge_app_env',3}}] )
	    -| ['compiler_generated'] )
	end
'get_env_key'/2 =
    %% Line 1682
    fun (_cor1,_cor0) ->
	apply 'get_env_key'/3
	    (_cor0, _cor1, [])
'get_env_key'/3 =
    %% Line 1683
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{Key,Val}|T],_cor7,Res>
	      when call 'erlang':'=:='
		    (_cor7,
		     Key) ->
	      let <_cor3> =
		  %% Line 1684
		  call 'erlang':'++'
		      (T, Res)
	      in  %% Line 1684
		  {'value',Val,_cor3}
	  %% Line 1685
	  <[H|T],Key,Res> when 'true' ->
	      %% Line 1686
	      apply 'get_env_key'/3
		  (T, Key, [H|Res])
	  %% Line 1687
	  <[],_X_Key,Res> when 'true' ->
	      Res
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'get_env_key',3}}] )
	    -| ['compiler_generated'] )
	end
'add_env'/2 =
    %% Line 1689
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 1690
	    ( fun (_cor2) ->
		  case _cor2 of
		    <{Key,Value}> when 'true' ->
			%% Line 1691
			call 'ets':'insert'
			    ('ac_tab', {{'env',_cor1,Key},Value})
		    ( <_cor3> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor3})
			    -| [{'function_name',{'-add_env/2-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-add_env/2-fun-0-'}}] )
	in  %% Line 1690
	    call 'lists':'foreach'
		(_cor4, _cor0)
'del_env'/1 =
    %% Line 1695
    fun (_cor0) ->
	%% Line 1696
	call 'ets':'match_delete'
	    ('ac_tab', {{'env',_cor0,'_'},'_'})
'check_user'/0 =
    %% Line 1698
    fun () ->
	%% Line 1699
	case call 'erlang':'whereis'
		 ('user') of
	  %% Line 1700
	  <User>
	      when call 'erlang':'is_pid'
		    (User) ->
	      let <_cor0> =
		  call 'erlang':'self'
		      ()
	      in  call 'erlang':'group_leader'
		      (User, _cor0)
	  %% Line 1701
	  <_cor2> when 'true' ->
	      'ok'
	end
'do_prep_config_change'/1 =
    %% Line 1708
    fun (_cor0) ->
	%% Line 1709
	apply 'do_prep_config_change'/2
	    (_cor0, [])
'do_prep_config_change'/2 =
    %% Line 1711
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],EnvBefore> when 'true' ->
	      %% Line 1712
	      EnvBefore
	  %% Line 1713
	  <[{App,_X_Id}|Apps],EnvBefore> when 'true' ->
	      let <Env> =
		  %% Line 1714
		  call 'application':'get_all_env'
		      (App)
	      in  %% Line 1715
		  apply 'do_prep_config_change'/2
		      (Apps, [{App,Env}|EnvBefore])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'do_prep_config_change',2}}] )
	    -| ['compiler_generated'] )
	end
'do_config_change'/2 =
    %% Line 1722
    fun (_cor1,_cor0) ->
	%% Line 1723
	apply 'do_config_change'/3
	    (_cor1, _cor0, [])
'do_config_change'/3 =
    %% Line 1725
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],_X_EnvBefore,[]> when 'true' ->
	      %% Line 1726
	      'ok'
	  %% Line 1727
	  <[],_X_EnvBefore,Errors> when 'true' ->
	      %% Line 1728
	      {'error',Errors}
	  %% Line 1729
	  <[{App,_X_Id}|Apps],EnvBefore,Errors> when 'true' ->
	      let <_cor3> =
		  %% Line 1730
		  call 'application':'get_all_env'
		      (App)
	      in  let <AppEnvNow> =
		      %% Line 1730
		      call 'lists':'sort'
			  (_cor3)
		  in  let <_cor6> =
			  %% Line 1731
			  case call 'lists':'keyfind'
				   (App, 1, EnvBefore) of
			    %% Line 1732
			    <'false'> when 'true' ->
				%% Line 1733
				[]
			    %% Line 1734
			    <{_cor19,AppEnvBeforeT}>
				when call 'erlang':'=:='
				      (_cor19,
				       App) ->
				%% Line 1735
				call 'lists':'sort'
				    (AppEnvBeforeT)
			    ( <_cor5> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor5})
			      -| ['compiler_generated'] )
			  end
		      in  let <_cor13> =
			      %% Line 1738
			      case AppEnvNow of
				%% Line 1739
				<_cor20>
				    when call 'erlang':'=:='
					  (AppEnvNow,
					   _cor6) ->
				    %% Line 1740
				    'ok'
				%% Line 1741
				<_cor21> when 'true' ->
				    %% Line 1742
				    case apply 'do_config_diff'/2
					     (AppEnvNow, _cor6) of
				      %% Line 1743
				      <{[],[],[]}> when 'true' ->
					  %% Line 1744
					  'ok'
				      %% Line 1745
				      <{Changed,New,Removed}> when 'true' ->
					  %% Line 1746
					  case call 'application':'get_key'
						   (App, 'mod') of
					    %% Line 1747
					    <{'ok',{Mod,_X_Para}}> when 'true' ->
						let <_cor8> =
						    catch
							%% Line 1748
							call Mod:'config_change'
							    (Changed, New, %% Line 1749
									   Removed)
						in  %% Line 1748
						    case _cor8 of
						      %% Line 1750
						      <'ok'> when 'true' ->
							  %% Line 1751
							  'ok'
						      %% Line 1754
						      <{'EXIT',{'undef',_cor22}}> when 'true' ->
							  %% Line 1755
							  'ok'
						      %% Line 1756
						      <Error = {'error',_cor23}> when 'true' ->
							  %% Line 1757
							  Error
						      %% Line 1758
						      <Else> when 'true' ->
							  %% Line 1759
							  {'error',Else}
						    end
					    %% Line 1761
					    <{'ok',[]}> when 'true' ->
						%% Line 1762
						{'error',{'module_not_defined',App}}
					    %% Line 1763
					    <'undefined'> when 'true' ->
						%% Line 1764
						{'error',{'application_not_found',App}}
					    ( <_cor10> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_cor10})
					      -| ['compiler_generated'] )
					  end
				      ( <_cor11> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor11})
					-| ['compiler_generated'] )
				    end
			      end
			  in  %% Line 1769
			      case _cor13 of
				%% Line 1770
				<'ok'> when 'true' ->
				    %% Line 1771
				    apply 'do_config_change'/3
					(Apps, EnvBefore, Errors)
				%% Line 1772
				<{'error',NewError}> when 'true' ->
				    %% Line 1773
				    apply 'do_config_change'/3
					(Apps, EnvBefore, [NewError|Errors])
				( <_cor15> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor15})
				  -| ['compiler_generated'] )
			      end
	  ( <_cor18,_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17,_cor16})
		  -| [{'function_name',{'do_config_change',3}}] )
	    -| ['compiler_generated'] )
	end
'do_config_diff'/2 =
    %% Line 1780
    fun (_cor1,_cor0) ->
	%% Line 1781
	apply 'do_config_diff'/3
	    (_cor1, _cor0, {[],[]})
'do_config_diff'/3 =
    %% Line 1783
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],AppEnvBefore,{Changed,New}> when 'true' ->
	      let <_cor7> =
		  %% Line 1784
		  ( fun (_cor4,_cor3) ->
			case <_cor4,_cor3> of
			  <{Env,_X_Value},Acc> when 'true' ->
			      [Env|Acc]
			  ( <_cor6,_cor5> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor6,_cor5})
				  -| [{'function_name',{'-do_config_diff/3-fun-0-',2}}] )
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-do_config_diff/3-fun-0-'}}] )
	      in  let <Removed> =
		      %% Line 1784
		      call 'lists':'foldl'
			  (_cor7, [], AppEnvBefore)
		  in  %% Line 1785
		      {Changed,New,Removed}
	  %% Line 1786
	  <AppEnvNow,[],{Changed,New}> when 'true' ->
	      let <_cor9> =
		  %% Line 1787
		  call 'erlang':'++'
		      (AppEnvNow, New)
	      in  %% Line 1787
		  {Changed,_cor9,[]}
	  %% Line 1788
	  <[{Env,Value}|AppEnvNow],AppEnvBefore,{Changed,New}> when 'true' ->
	      %% Line 1789
	      case call 'lists':'keyfind'
		       (Env, 1, AppEnvBefore) of
		%% Line 1790
		<{_cor16,_cor17}>
		    when let <_cor18> =
			  call 'erlang':'=:='
			      (_cor16, Env)
		      in  let <_cor19> =
			      call 'erlang':'=:='
				  (_cor17, Value)
			  in  call 'erlang':'and'
				  (_cor18, _cor19) ->
		    let <_cor10> =
			%% Line 1791
			call 'lists':'keydelete'
			    (Env, 1, AppEnvBefore)
		    in  %% Line 1791
			apply 'do_config_diff'/3
			    (AppEnvNow, _cor10, {Changed,New})
		%% Line 1792
		<{_cor20,_X_OtherValue}>
		    when call 'erlang':'=:='
			  (_cor20,
			   Env) ->
		    let <_cor11> =
			%% Line 1793
			call 'lists':'keydelete'
			    (Env, 1, AppEnvBefore)
		    in  %% Line 1793
			apply 'do_config_diff'/3
			    (AppEnvNow, _cor11, %% Line 1794
						{[{Env,Value}|Changed],New})
		%% Line 1795
		<'false'> when 'true' ->
		    %% Line 1796
		    apply 'do_config_diff'/3
			(AppEnvNow, AppEnvBefore, {Changed,[{Env,Value}|New]})
		( <_cor12> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor12})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13})
		  -| [{'function_name',{'do_config_diff',3}}] )
	    -| ['compiler_generated'] )
	end
'check_conf'/0 =
    %% Line 1803
    fun () ->
	%% Line 1804
	case call 'init':'get_argument'
		 ('config') of
	  %% Line 1805
	  <{'ok',Files}> when 'true' ->
	      let <_cor11> =
		  %% Line 1807
		  ( fun (_cor8,_cor7) ->
			case <_cor8,_cor7> of
			  <[File|[]],Env> when 'true' ->
			      let <BFName> =
				  %% Line 1808
				  call 'filename':'basename'
				      (File, [46|[99|[111|[110|[102|[105|[103]]]]]]])
			      in  let <_cor2> =
				      %% Line 1809
				      call 'filename':'dirname'
					  (File)
				  in  let <_cor1> =
					  %% Line 1810
					  call 'erlang':'++'
					      (BFName, [46|[99|[111|[110|[102|[105|[103]]]]]]])
				      in  let <FName> =
					      %% Line 1809
					      call 'filename':'join'
						  (_cor2, _cor1)
					  in  %% Line 1811
					      case apply 'load_file'/1
						       (FName) of
						%% Line 1812
						<{'ok',NewEnv}> when 'true' ->
						    %% Line 1818
						    case <> of
						      %% Line 1819
						      <>
							  when call 'erlang':'=:='
								(BFName,
								 [115|[121|[115]]]) ->
							  %% Line 1820
							  case %% Line 1821
							       apply 'check_conf_sys'/1
								   (NewEnv) of
							    <{'ok',SysEnv,Errors}> when 'true' ->
								%% Line 1826
								case Errors of
								  %% Line 1827
								  <[]> when 'true' ->
								      %% Line 1828
								      apply 'merge_env'/2
									  (Env, SysEnv)
								  %% Line 1829
								  <[{'error',{SysFName,Line,Str}}|_cor14]> when 'true' ->
								      %% Line 1830
								      call 'erlang':'throw'
									  ({'error',{SysFName,Line,Str}})
								  ( <_cor5> when 'true' ->
									primop 'match_fail'
									    ({'case_clause',_cor5})
								    -| ['compiler_generated'] )
								end
							    ( <_cor4> when 'true' ->
								  primop 'match_fail'
								      ({'badmatch',_cor4})
							      -| ['compiler_generated'] )
							  end
						      %% Line 1832
						      <> when 'true' ->
							  %% Line 1833
							  apply 'merge_env'/2
							      (Env, NewEnv)
						    end
						%% Line 1835
						<{'error',{Line,_X_Mod,Str}}> when 'true' ->
						    %% Line 1836
						    call 'erlang':'throw'
							({'error',{FName,Line,Str}})
						( <_cor6> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_cor6})
						  -| ['compiler_generated'] )
					      end
			  ( <_cor10,_cor9> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor10,_cor9})
				  -| [{'function_name',{'-check_conf/0-fun-0-',2}}] )
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-check_conf/0-fun-0-'}}] )
	      in  let <_cor12> =
		      %% Line 1806
		      call 'lists':'foldl'
			  (_cor11, %% Line 1838
				   [], %% Line 1838
				       Files)
		  in  %% Line 1806
		      {'ok',_cor12}
	  %% Line 1839
	  <_cor15> when 'true' ->
	      {'ok',[]}
	end
'check_conf_sys'/1 =
    %% Line 1842
    fun (_cor0) ->
	%% Line 1843
	apply 'check_conf_sys'/3
	    (_cor0, [], [])
'check_conf_sys'/3 =
    %% Line 1845
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[File|T],SysEnv,Errors>
	      when call 'erlang':'is_list'
		    (File) ->
	      let <BFName> =
		  %% Line 1846
		  call 'filename':'basename'
		      (File, [46|[99|[111|[110|[102|[105|[103]]]]]]])
	      in  let <_cor5> =
		      %% Line 1847
		      call 'filename':'dirname'
			  (File)
		  in  let <_cor4> =
			  %% Line 1847
			  call 'erlang':'++'
			      (BFName, [46|[99|[111|[110|[102|[105|[103]]]]]]])
		      in  let <FName> =
			      %% Line 1847
			      call 'filename':'join'
				  (_cor5, _cor4)
			  in  %% Line 1848
			      case apply 'load_file'/1
				       (FName) of
				%% Line 1849
				<{'ok',NewEnv}> when 'true' ->
				    let <_cor7> =
					%% Line 1850
					apply 'merge_env'/2
					    (SysEnv, NewEnv)
				    in  %% Line 1850
					apply 'check_conf_sys'/3
					    (T, _cor7, Errors)
				%% Line 1851
				<{'error',{Line,_X_Mod,Str}}> when 'true' ->
				    %% Line 1852
				    apply 'check_conf_sys'/3
					(T, SysEnv, [{'error',{FName,Line,Str}}|Errors])
				( <_cor8> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor8})
				  -| ['compiler_generated'] )
			      end
	  %% Line 1854
	  <[Tuple|T],SysEnv,Errors> when 'true' ->
	      let <_cor9> =
		  %% Line 1855
		  apply 'merge_env'/2
		      (SysEnv, [Tuple|[]])
	      in  %% Line 1855
		  apply 'check_conf_sys'/3
		      (T, _cor9, Errors)
	  %% Line 1856
	  <[],SysEnv,Errors> when 'true' ->
	      let <_cor10> =
		  %% Line 1857
		  call 'lists':'reverse'
		      (Errors)
	      in  %% Line 1857
		  {'ok',SysEnv,_cor10}
	  ( <_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11})
		  -| [{'function_name',{'check_conf_sys',3}}] )
	    -| ['compiler_generated'] )
	end
'load_file'/1 =
    %% Line 1859
    fun (_cor0) ->
	%% Line 1861
	case call 'erl_prim_loader':'get_file'
		 (_cor0) of
	  %% Line 1862
	  <{'ok',Bin,_X_FileName}> when 'true' ->
	      %% Line 1865
	      case apply 'file_binary_to_list'/1
		       (Bin) of
		%% Line 1866
		<{'ok',String}> when 'true' ->
		    let <_cor1> =
			%% Line 1867
			call 'erlang':'++'
			    (String, [32])
		    in  %% Line 1867
			apply 'scan_file'/1
			    (_cor1)
		%% Line 1868
		<'error'> when 'true' ->
		    %% Line 1869
		    {'error',{'none','scan_file',[98|[97|[100|[32|[101|[110|[99|[111|[100|[105|[110|[103]]]]]]]]]]]]}}
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1871
	  <'error'> when 'true' ->
	      %% Line 1872
	      {'error',{'none','open_file',[99|[111|[110|[102|[105|[103|[117|[114|[97|[116|[105|[111|[110|[32|[102|[105|[108|[101|[32|[110|[111|[116|[32|[102|[111|[117|[110|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]}}
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor3})
	    -| ['compiler_generated'] )
	end
'scan_file'/1 =
    %% Line 1875
    fun (_cor0) ->
	%% Line 1876
	case call 'erl_scan':'tokens'
		 ([], _cor0, 1) of
	  %% Line 1877
	  <{'done',{'ok',Tokens,_cor6},Left}> when 'true' ->
	      %% Line 1878
	      case call 'erl_parse':'parse_term'
		       (Tokens) of
		%% Line 1879
		<Res = {'ok',L}>
		    when call 'erlang':'is_list'
			  (L) ->
		    %% Line 1880
		    case apply 'only_ws'/1
			     (Left) of
		      %% Line 1881
		      <'true'> when 'true' ->
			  %% Line 1882
			  Res
		      %% Line 1883
		      <'false'> when 'true' ->
			  %% Line 1885
			  apply 'config_error'/0
			      ()
		      ( <_cor1> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor1})
			-| ['compiler_generated'] )
		    end
		%% Line 1887
		<{'ok',_cor7}> when 'true' ->
		    %% Line 1889
		    apply 'config_error'/0
			()
		%% Line 1890
		<Error> when 'true' ->
		    %% Line 1891
		    Error
	      end
	  %% Line 1893
	  <{'done',Result,_cor8}> when 'true' ->
	      let <_cor3> =
		  %% Line 1894
		  call 'erlang':'tuple_to_list'
		      (Result)
	      in  %% Line 1894
		  {'error',{'none','parse_file',_cor3}}
	  %% Line 1895
	  <{'more',_cor9}> when 'true' ->
	      %% Line 1896
	      {'error',{'none','load_file',[110|[111|[32|[101|[110|[100|[105|[110|[103|[32|[60|[100|[111|[116|[62|[32|[102|[111|[117|[110|[100]]]]]]]]]]]]]]]]]]]]]}}
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor4})
	    -| ['compiler_generated'] )
	end
'only_ws'/1 =
    %% Line 1899
    fun (_cor0) ->
	case _cor0 of
	  <[C|Cs]>
	      when call 'erlang':'=<'
		    (C,
		     32) ->
	      apply 'only_ws'/1
		  (Cs)
	  %% Line 1900
	  <[37|Cs]> when 'true' ->
	      let <_cor1> =
		  apply 'strip_comment'/1
		      (Cs)
	      in  apply 'only_ws'/1
		      (_cor1)
	  %% Line 1901
	  <[_cor3|_cor4]> when 'true' ->
	      'false'
	  %% Line 1902
	  <[]> when 'true' ->
	      'true'
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'only_ws',1}}] )
	    -| ['compiler_generated'] )
	end
'strip_comment'/1 =
    %% Line 1904
    fun (_cor0) ->
	case _cor0 of
	  <[10|Cs]> when 'true' ->
	      Cs
	  %% Line 1905
	  <[_cor2|Cs]> when 'true' ->
	      apply 'strip_comment'/1
		  (Cs)
	  %% Line 1906
	  <[]> when 'true' ->
	      []
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'strip_comment',1}}] )
	    -| ['compiler_generated'] )
	end
'config_error'/0 =
    %% Line 1908
    fun () ->
	%% Line 1909
	{'error',{'none','load_file',[99|[111|[110|[102|[105|[103|[117|[114|[97|[116|[105|[111|[110|[32|[102|[105|[108|[101|[32|[109|[117|[115|[116|[32|[99|[111|[110|[116|[97|[105|[110|[32|[79|[78|[69|[32|[108|[105|[115|[116|[32|[101|[110|[100|[101|[100|[32|[98|[121|[32|[60|[100|[111|[116|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}}
'info_started'/2 =
    %% Line 1916
    fun (_cor1,_cor0) ->
	let <Rep> =
	    %% Line 1917
	    [{'application',_cor1}|%% Line 1918
				   [{'started_at',_cor0}|[]]]
	in  %% Line 1919
	    call 'error_logger':'info_report'
		('progress', Rep)
'info_exited'/3 =
    %% Line 1921
    fun (_cor2,_cor1,_cor0) ->
	let <Rep> =
	    %% Line 1922
	    [{'application',_cor2}|%% Line 1923
				   [{'exited',_cor1}|%% Line 1924
						     [{'type',_cor0}|[]]]]
	in  %% Line 1925
	    call 'error_logger':'info_report'
		(Rep)
'reply_to_requester'/3 =
    %% Line 1931
    fun (_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 1932
	    case _cor0 of
	      %% Line 1933
	      <{'ok',_X_Id}> when 'true' ->
		  %% Line 1934
		  'ok'
	      %% Line 1935
	      <{'info',Reason}> when 'true' ->
		  %% Line 1936
		  {'error',Reason}
	      %% Line 1937
	      <Error> when 'true' ->
		  %% Line 1938
		  Error
	    end
	in  let <_cor11> =
		%% Line 1941
		( fun (_cor8,_cor7) ->
		      %% Line 1942
		      case _cor8 of
			%% Line 1943
			<{_cor15,From}>
			    when call 'erlang':'=:='
				  (_cor15,
				   _cor2) ->
			    do  %% Line 1944
				apply 'reply'/2
				    (From, _cor4)
				_cor7
			%% Line 1946
			<_cor16> when 'true' ->
			    %% Line 1947
			    [_cor8|_cor7]
		      end
		  -| [{'id',{0,0,'-reply_to_requester/3-fun-0-'}}] )
	    in  %% Line 1941
		call 'lists':'foldl'
		    (_cor11, %% Line 1950
			     [], _cor1)
'update_permissions'/2 =
    %% Line 1957
    fun (_cor1,_cor0) ->
	%% Line 1959
	case call 'ets':'lookup'
		 ('ac_tab', {'env','kernel','permissions'}) of
	  %% Line 1960
	  <[]> when 'true' ->
	      %% Line 1961
	      call 'ets':'insert'
		  ('ac_tab', {{'env','kernel','permissions'},[{_cor1,_cor0}|[]]})
	  %% Line 1962
	  <[{_cor7,Perm}|[]]> when 'true' ->
	      let <Perm2> =
		  %% Line 1963
		  call 'lists':'keydelete'
		      (_cor1, 1, Perm)
	      in  %% Line 1964
		  call 'ets':'insert'
		      ('ac_tab', {{'env','kernel','permissions'},[{_cor1,_cor0}|Perm2]})
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor4})
	    -| ['compiler_generated'] )
	end
'test_change_apps'/2 =
    %% Line 1970
    fun (_cor1,_cor0) ->
	let <Res> =
	    %% Line 1971
	    apply 'test_make_apps'/2
		(_cor1, [])
	in  %% Line 1972
	    apply 'test_do_change_appl'/3
		(_cor1, _cor0, Res)
'test_do_change_appl'/3 =
    %% Line 1974
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],_cor8,_cor9> when 'true' ->
	      %% Line 1975
	      'ok'
	  %% Line 1976
	  <[A|Apps],[],[R|Res]> when 'true' ->
	      let <_X_> =
		  %% Line 1977
		  apply 'do_change_appl'/3
		      (R, {'appl',A,'undefined','undefined','undefined','undefined','undefined','undefined','undefined'}, [])
	      in  %% Line 1978
		  apply 'test_do_change_appl'/3
		      (Apps, [], Res)
	  %% Line 1979
	  <[A|Apps],[C|Conf],[R|Res]> when 'true' ->
	      let <_X_> =
		  %% Line 1980
		  apply 'do_change_appl'/3
		      (R, {'appl',A,'undefined','undefined','undefined','undefined','undefined','undefined','undefined'}, C)
	      in  %% Line 1981
		  apply 'test_do_change_appl'/3
		      (Apps, Conf, Res)
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'test_do_change_appl',3}}] )
	    -| ['compiler_generated'] )
	end
'test_make_apps'/2 =
    %% Line 1983
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],Res> when 'true' ->
	      %% Line 1984
	      call 'lists':'reverse'
		  (Res)
	  %% Line 1985
	  <[A|Apps],Res> when 'true' ->
	      let <_cor2> =
		  %% Line 1986
		  apply 'make_appl'/1
		      (A)
	      in  %% Line 1986
		  apply 'test_make_apps'/2
		      (Apps, [_cor2|Res])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'test_make_apps',2}}] )
	    -| ['compiler_generated'] )
	end
'file_binary_to_list'/1 =
    %% Line 1988
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 1989
	    case call 'epp':'read_encoding_from_binary'
		     (_cor0) of
	      %% Line 1990
	      <'none'> when 'true' ->
		  call 'epp':'default_encoding'
		      ()
	      %% Line 1991
	      <Encoding> when 'true' ->
		  Encoding
	    end
	in  let <_cor4> =
		catch
		    %% Line 1993
		    call 'unicode':'characters_to_list'
			(_cor0, _cor2)
	    in  %% Line 1993
		case _cor4 of
		  %% Line 1994
		  <String>
		      when call 'erlang':'is_list'
			    (_cor4) ->
		      %% Line 1995
		      {'ok',String}
		  %% Line 1996
		  <_cor7> when 'true' ->
		      %% Line 1997
		      'error'
		end
'to_string'/1 =
    %% Line 2008
    fun (_cor0) ->
	%% Line 2009
	case call 'io_lib':'printable_list'
		 (_cor0) of
	  %% Line 2010
	  <'true'> when 'true' ->
	      _cor0
	  %% Line 2012
	  <'false'> when 'true' ->
	      let <_cor1> =
		  %% Line 2013
		  call 'io_lib':'format'
		      ([126|[49|[51|[52|[50|[49|[55|[55|[50|[56|[112]]]]]]]]]]], [_cor0|[]])
	      in  %% Line 2013
		  call 'lists':'flatten'
		      (_cor1)
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor2})
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('application_controller')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('application_controller', _cor0)
end