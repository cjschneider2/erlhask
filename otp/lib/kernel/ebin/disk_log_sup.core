module 'disk_log_sup' ['init'/1,
		       'module_info'/0,
		       'module_info'/1,
		       'start_link'/0]
    attributes [%% Line 21
		'behaviour' =
		    %% Line 21
		    ['supervisor']]
'start_link'/0 =
    %% Line 25
    fun () ->
	%% Line 26
	call 'supervisor':'start_link'
	    ({'local','disk_log_sup'}, 'disk_log_sup', [])
'init'/1 =
    %% Line 28
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 32
	      {'ok',{{'simple_one_for_one',4,3600},[{'disk_log',{'disk_log','istart_link',[]},'temporary',1000,'worker',['disk_log']}]}}
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'init',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('disk_log_sup')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('disk_log_sup', _cor0)
end