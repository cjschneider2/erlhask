module 'auth' ['code_change'/3,
	       'cookie'/0,
	       'cookie'/1,
	       'get_cookie'/0,
	       'get_cookie'/1,
	       'handle_call'/3,
	       'handle_cast'/2,
	       'handle_info'/2,
	       'init'/1,
	       'is_auth'/1,
	       'module_info'/0,
	       'module_info'/1,
	       'node_cookie'/1,
	       'node_cookie'/2,
	       'print'/3,
	       'set_cookie'/1,
	       'set_cookie'/2,
	       'start_link'/0,
	       'sync_cookie'/0,
	       'terminate'/2]
    attributes [%% Line 20
		'behaviour' =
		    %% Line 20
		    ['gen_server'],
		%% Line 26
		'deprecated' =
		    %% Line 26
		    [{'is_auth',1}|[{'cookie','_'}|[{'node_cookie','_'}]]],
		%% Line 40
		'type' =
		    %% Line 40
		    [{'cookie',{'type',40,'atom',[]},[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','state'},[{'typed_record_field',{'record_field',42,{'atom',42,'our_cookie'}},{'type',42,'union',[{'atom',42,'undefined'}|[{'type',42,'cookie',[]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'other_cookies'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'remote_type',43,[{'atom',43,'ets'}|[{'atom',43,'tab'}|[[]]]]}]]}}]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'state',{'type',45,'record',[{'atom',45,'state'}]},[]}],
		%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','file_info'},[{'typed_record_field',{'record_field',25,{'atom',25,'size'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'type'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'device'}|[{'atom',26,'directory'}|[{'atom',26,'other'}|[{'atom',26,'regular'}|[{'atom',26,'symlink'}]]]]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'access'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'atom',27,'read'}|[{'atom',27,'write'}|[{'atom',27,'read_write'}|[{'atom',27,'none'}]]]]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'atime'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'remote_type',28,[{'atom',28,'file'}|[{'atom',28,'date_time'}|[[]]]]}|[{'type',28,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'mtime'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'remote_type',32,[{'atom',32,'file'}|[{'atom',32,'date_time'}|[[]]]]}|[{'type',32,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',34,{'atom',34,'ctime'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'remote_type',34,[{'atom',34,'file'}|[{'atom',34,'date_time'}|[[]]]]}|[{'type',34,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',40,{'atom',40,'mode'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'links'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',46,{'atom',46,'major_device'}},{'type',46,'union',[{'atom',46,'undefined'}|[{'type',46,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'minor_device'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'inode'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',54,{'atom',54,'uid'}},{'type',54,'union',[{'atom',54,'undefined'}|[{'type',54,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',55,{'atom',55,'gid'}},{'type',55,'union',[{'atom',55,'undefined'}|[{'type',55,'non_neg_integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','file_descriptor'},[{'typed_record_field',{'record_field',59,{'atom',59,'module'}},{'type',59,'union',[{'atom',59,'undefined'}|[{'type',59,'module',[]}]]}}|[{'typed_record_field',{'record_field',60,{'atom',60,'data'}},{'type',60,'union',[{'atom',60,'undefined'}|[{'type',60,'term',[]}]]}}]],[]}],
		%% Line 53
		'spec' =
		    %% Line 53
		    [{{'start_link',0},[{'type',53,'fun',[{'type',53,'product',[]}|[{'type',53,'union',[{'type',53,'tuple',[{'atom',53,'ok'}|[{'type',53,'pid',[]}]]}|[{'type',53,'tuple',[{'atom',53,'error'}|[{'type',53,'term',[]}]]}|[{'atom',53,'ignore'}]]]}]]}]}],
		%% Line 60
		'spec' =
		    %% Line 60
		    [{{'is_auth',1},[{'type',60,'bounded_fun',[{'type',60,'fun',[{'type',60,'product',[{'var',60,'Node'}]}|[{'type',60,'union',[{'atom',60,'yes'}|[{'atom',60,'no'}]]}]]}|[[{'type',61,'constraint',[{'atom',61,'is_subtype'}|[[{'var',61,'Node'}|[{'type',61,'node',[]}]]]]}]]]}]}],
		%% Line 69
		'spec' =
		    %% Line 69
		    [{{'cookie',0},[{'type',69,'bounded_fun',[{'type',69,'fun',[{'type',69,'product',[]}|[{'var',69,'Cookie'}]]}|[[{'type',70,'constraint',[{'atom',70,'is_subtype'}|[[{'var',70,'Cookie'}|[{'type',70,'cookie',[]}]]]]}]]]}]}],
		%% Line 75
		'spec' =
		    %% Line 75
		    [{{'cookie',1},[{'type',75,'bounded_fun',[{'type',75,'fun',[{'type',75,'product',[{'var',75,'TheCookie'}]}|[{'atom',75,'true'}]]}|[[{'type',76,'constraint',[{'atom',76,'is_subtype'}|[[{'var',76,'TheCookie'}|[{'type',76,'union',[{'var',76,'Cookie'}|[{'type',76,'list',[{'var',76,'Cookie'}]}]]}]]]]}|[{'type',77,'constraint',[{'atom',77,'is_subtype'}|[[{'var',77,'Cookie'}|[{'type',77,'cookie',[]}]]]]}]]]]}]}],
		%% Line 84
		'spec' =
		    %% Line 84
		    [{{'node_cookie',1},[{'type',84,'fun',[{'type',84,'product',[{'ann_type',84,[{'var',84,'Cookies'}|[{'type',84,'nonempty_list',[{'type',84,'union',[{'type',84,'node',[]}|[{'type',84,'cookie',[]}]]}]}]]}]}|[{'type',84,'union',[{'atom',84,'yes'}|[{'atom',84,'no'}]]}]]}]}],
		%% Line 89
		'spec' =
		    %% Line 89
		    [{{'node_cookie',2},[{'type',89,'bounded_fun',[{'type',89,'fun',[{'type',89,'product',[{'var',89,'Node'}|[{'var',89,'Cookie'}]]}|[{'type',89,'union',[{'atom',89,'yes'}|[{'atom',89,'no'}]]}]]}|[[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'Node'}|[{'type',90,'node',[]}]]]]}|[{'type',91,'constraint',[{'atom',91,'is_subtype'}|[[{'var',91,'Cookie'}|[{'type',91,'cookie',[]}]]]]}]]]]}]}],
		%% Line 99
		'spec' =
		    %% Line 99
		    [{{'get_cookie',0},[{'type',99,'fun',[{'type',99,'product',[]}|[{'type',99,'union',[{'atom',99,'nocookie'}|[{'type',99,'cookie',[]}]]}]]}]}],
		%% Line 104
		'spec' =
		    %% Line 104
		    [{{'get_cookie',1},[{'type',104,'fun',[{'type',104,'product',[{'ann_type',104,[{'var',104,'Node'}|[{'type',104,'node',[]}]]}]}|[{'type',104,'union',[{'atom',104,'nocookie'}|[{'type',104,'cookie',[]}]]}]]}]}],
		%% Line 111
		'spec' =
		    %% Line 111
		    [{{'set_cookie',1},[{'type',111,'fun',[{'type',111,'product',[{'ann_type',111,[{'var',111,'Cookie'}|[{'type',111,'cookie',[]}]]}]}|[{'atom',111,'true'}]]}]}],
		%% Line 116
		'spec' =
		    %% Line 116
		    [{{'set_cookie',2},[{'type',116,'fun',[{'type',116,'product',[{'ann_type',116,[{'var',116,'Node'}|[{'type',116,'node',[]}]]}|[{'ann_type',116,[{'var',116,'Cookie'}|[{'type',116,'cookie',[]}]]}]]}|[{'atom',116,'true'}]]}]}],
		%% Line 123
		'spec' =
		    %% Line 123
		    [{{'sync_cookie',0},[{'type',123,'fun',[{'type',123,'product',[]}|[{'type',123,'any',[]}]]}]}],
		%% Line 128
		'spec' =
		    %% Line 128
		    [{{'print',3},[{'type',128,'fun',[{'type',128,'product',[{'ann_type',128,[{'var',128,'Node'}|[{'type',128,'node',[]}]]}|[{'ann_type',128,[{'var',128,'Format'}|[{'type',128,'string',[]}]]}|[{'ann_type',128,[{'var',128,'Args'}|[{'type',128,'list',[{'var',128,'_'}]}]]}]]]}|[{'atom',128,'ok'}]]}]}],
		%% Line 135
		'spec' =
		    %% Line 135
		    [{{'init',1},[{'type',135,'fun',[{'type',135,'product',[{'type',135,'nil',[]}]}|[{'type',135,'tuple',[{'atom',135,'ok'}|[{'type',135,'state',[]}]]}]]}]}],
		%% Line 145
		'type' =
		    %% Line 145
		    [{'calls',{'type',145,'union',[{'atom',145,'echo'}|[{'atom',145,'sync_cookie'}|[{'type',146,'tuple',[{'atom',146,'get_cookie'}|[{'type',146,'node',[]}]]}|[{'type',147,'tuple',[{'atom',147,'set_cookie'}|[{'type',147,'node',[]}|[{'type',147,'term',[]}]]]}]]]]},[]}],
		%% Line 149
		'spec' =
		    %% Line 149
		    [{{'handle_call',3},[{'type',149,'fun',[{'type',149,'product',[{'type',149,'calls',[]}|[{'type',149,'tuple',[{'type',149,'pid',[]}|[{'type',149,'term',[]}]]}|[{'type',149,'state',[]}]]]}|[{'type',150,'tuple',[{'atom',150,'reply'}|[{'type',150,'union',[{'atom',150,'hello'}|[{'atom',150,'true'}|[{'atom',150,'nocookie'}|[{'type',150,'cookie',[]}]]]]}|[{'type',150,'state',[]}]]]}]]}]}],
		%% Line 190
		'spec' =
		    %% Line 190
		    [{{'handle_cast',2},[{'type',190,'fun',[{'type',190,'product',[{'type',190,'tuple',[{'atom',190,'print'}|[{'type',190,'string',[]}|[{'type',190,'list',[{'type',190,'term',[]}]}]]]}|[{'type',190,'state',[]}]]}|[{'type',191,'tuple',[{'atom',191,'noreply'}|[{'type',191,'state',[]}]]}]]}]}],
		%% Line 200
		'spec' =
		    %% Line 200
		    [{{'handle_info',2},[{'type',200,'fun',[{'type',200,'product',[{'type',200,'term',[]}|[{'type',200,'state',[]}]]}|[{'type',200,'tuple',[{'atom',200,'noreply'}|[{'type',200,'state',[]}]]}]]}]}],
		%% Line 249
		'spec' =
		    %% Line 249
		    [{{'code_change',3},[{'type',249,'fun',[{'type',249,'product',[{'type',249,'term',[]}|[{'type',249,'state',[]}|[{'type',249,'term',[]}]]]}|[{'type',249,'tuple',[{'atom',249,'ok'}|[{'type',249,'state',[]}]]}]]}]}],
		%% Line 254
		'spec' =
		    %% Line 254
		    [{{'terminate',2},[{'type',254,'fun',[{'type',254,'product',[{'type',254,'term',[]}|[{'type',254,'state',[]}]]}|[{'atom',254,'ok'}]]}]}]]
'start_link'/0 =
    %% Line 55
    fun () ->
	%% Line 56
	call 'gen_server':'start_link'
	    ({'local','auth'}, 'auth', [], [])
'is_auth'/1 =
    %% Line 63
    fun (_cor0) ->
	%% Line 64
	case call 'net_adm':'ping'
		 (_cor0) of
	  %% Line 65
	  <'pong'> when 'true' ->
	      'yes'
	  %% Line 66
	  <'pang'> when 'true' ->
	      'no'
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor1})
	    -| ['compiler_generated'] )
	end
'cookie'/0 =
    %% Line 72
    fun () ->
	%% Line 73
	apply 'get_cookie'/0
	    ()
'cookie'/1 =
    %% Line 79
    fun (_cor0) ->
	case _cor0 of
	  <[Cookie|[]]> when 'true' ->
	      %% Line 80
	      apply 'set_cookie'/1
		  (Cookie)
	  %% Line 81
	  <Cookie> when 'true' ->
	      %% Line 82
	      apply 'set_cookie'/1
		  (Cookie)
	end
'node_cookie'/1 =
    %% Line 86
    fun (_cor0) ->
	case _cor0 of
	  <[Node|[Cookie|[]]]> when 'true' ->
	      %% Line 87
	      apply 'node_cookie'/2
		  (Node, Cookie)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'node_cookie',1}}] )
	    -| ['compiler_generated'] )
	end
'node_cookie'/2 =
    %% Line 93
    fun (_cor1,_cor0) ->
	do  %% Line 94
	    apply 'set_cookie'/2
		(_cor1, _cor0)
	    %% Line 95
	    apply 'is_auth'/1
		(_cor1)
'get_cookie'/0 =
    %% Line 101
    fun () ->
	let <_cor0> =
	    %% Line 102
	    call 'erlang':'node'
		()
	in  %% Line 102
	    apply 'get_cookie'/1
		(_cor0)
'get_cookie'/1 =
    %% Line 106
    fun (_cor0) ->
	case _cor0 of
	  <_X_Node>
	      when try
		    let <_cor1> =
			call 'erlang':'node'
			    ()
		    in  call 'erlang':'=:='
			    (_cor1, 'nonode@nohost')
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 107
	      'nocookie'
	  %% Line 108
	  <Node> when 'true' ->
	      %% Line 109
	      call 'gen_server':'call'
		  ('auth', {'get_cookie',Node})
	end
'set_cookie'/1 =
    %% Line 113
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 114
	    call 'erlang':'node'
		()
	in  %% Line 114
	    apply 'set_cookie'/2
		(_cor1, _cor0)
'set_cookie'/2 =
    %% Line 118
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Node,_X_Cookie>
	      when try
		    let <_cor2> =
			call 'erlang':'node'
			    ()
		    in  call 'erlang':'=:='
			    (_cor2, 'nonode@nohost')
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 119
	      call 'erlang':'error'
		  ('distribution_not_started')
	  %% Line 120
	  <Node,Cookie> when 'true' ->
	      %% Line 121
	      call 'gen_server':'call'
		  ('auth', {'set_cookie',Node,Cookie})
	end
'sync_cookie'/0 =
    %% Line 125
    fun () ->
	%% Line 126
	call 'gen_server':'call'
	    ('auth', 'sync_cookie')
'print'/3 =
    %% Line 130
    fun (_cor2,_cor1,_cor0) ->
	catch
	    %% Line 131
	    call 'gen_server':'cast'
		({'auth',_cor2}, {'print',_cor1,_cor0})
'init'/1 =
    %% Line 137
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      do  %% Line 138
		  call 'erlang':'process_flag'
		      ('trap_exit', 'true')
		  let <_cor1> =
		      %% Line 139
		      apply 'init_cookie'/0
			  ()
		  in  %% Line 139
		      {'ok',_cor1}
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'init',1}}] )
	    -| ['compiler_generated'] )
	end
'handle_call'/3 =
    %% Line 152
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'get_cookie',Node},{_X_From,_X_Tag},State>
	      when try
		    let <_cor3> =
			call 'erlang':'node'
			    ()
		    in  call 'erlang':'=:='
			    (Node, _cor3)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 153
	      ( case State of
		  ( <( {'state',_rec0,_cor30}
		       -| ['compiler_generated'] )> when 'true' ->
			{'reply',_rec0,State}
		    -| ['compiler_generated'] )
		  ( <_cor31> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 154
	  <{'get_cookie',Node},{_X_From,_X_Tag},State> when 'true' ->
	      %% Line 155
	      ( case State of
		  ( <( {'state',_cor32,_rec1}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'ets':'lookup'
				 (_rec1, Node) of
			  %% Line 156
			  <[{_cor34,Cookie}|[]]>
			      when call 'erlang':'=:='
				    (_cor34,
				     Node) ->
			      %% Line 157
			      {'reply',Cookie,State}
			  %% Line 158
			  <[]> when 'true' ->
			      %% Line 159
			      {'reply',_cor32,State}
			  ( <_cor10> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor10})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor33> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 161
	  <{'set_cookie',Node,Cookie},{_X_From,_X_Tag},State>
	      when %% Line 162
		try
		    let <_cor11> =
			call 'erlang':'node'
			    ()
		    in  call 'erlang':'=:='
			    (Node, _cor11)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 163
	      case State of
		<{'state',_cor37,_cor38}> when 'true' ->
		    let <_cor14> =
			call 'erlang':'setelement'
			    (2, State, Cookie)
		    in  {'reply','true',_cor14}
		( <_cor39> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 170
	  <{'set_cookie',Node,Cookie},{_X_From,_X_Tag},State> when 'true' ->
	      %% Line 171
	      ( case State of
		  ( <( {'state',_cor40,_rec4}
		       -| ['compiler_generated'] )> when 'true' ->
			do  call 'ets':'insert'
				(_rec4, {Node,Cookie})
			    %% Line 172
			    {'reply','true',State}
		    -| ['compiler_generated'] )
		  ( <_cor41> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 174
	  <'sync_cookie',_X_From,State> when 'true' ->
	      %% Line 175
	      ( case State of
		  ( <( {'state',_cor42,_rec5}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor17> =
			    call 'erlang':'node'
				()
			in  case call 'ets':'lookup'
				     (_rec5, _cor17) of
			      %% Line 176
			      <[{_X_N,C}|[]]> when 'true' ->
				  let <_cor20> =
				      %% Line 177
				      call 'erlang':'node'
					  ()
				  in  do  %% Line 177
					  call 'ets':'delete'
					      (_rec5, _cor20)
					  let <_cor25> =
					      %% Line 178
					      call 'erlang':'setelement'
						  (2, State, C)
					  in  %% Line 178
					      {'reply','true',_cor25}
			      %% Line 179
			      <[]> when 'true' ->
				  %% Line 180
				  {'reply','true',State}
			      ( <_cor26> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor26})
				-| ['compiler_generated'] )
			    end
		    -| ['compiler_generated'] )
		  ( <_cor43> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 183
	  <'echo',_X_From,O> when 'true' ->
	      %% Line 184
	      {'reply','hello',O}
	  ( <_cor29,_cor28,_cor27> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor29,_cor28,_cor27})
		  -| [{'function_name',{'handle_call',3}}] )
	    -| ['compiler_generated'] )
	end
'handle_cast'/2 =
    %% Line 193
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'print',What,Args},O> when 'true' ->
	      do  %% Line 195
		  call 'error_logger':'error_msg'
		      (What, Args)
		  %% Line 196
		  {'noreply',O}
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'handle_cast',2}}] )
	    -| ['compiler_generated'] )
	end
'handle_info'/2 =
    %% Line 202
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{From,'badcookie','net_kernel',{_cor20,'spawn',_X_M,_X_F,_X_A,_X_Gleader}},O>
	      when call 'erlang':'=:='
		    (_cor20,
		     From) ->
	      let <_cor3> =
		  %% Line 203
		  call 'erlang':'node'
		      (From)
	      in  let <_cor2> =
		      %% Line 204
		      call 'erlang':'node'
			  ()
		  in  do  %% Line 203
			  call 'auth':'print'
			      (_cor3, [126|[110|[42|[42|[32|[85|[110|[97|[117|[116|[104|[111|[114|[105|[122|[101|[100|[32|[115|[112|[97|[119|[110|[32|[97|[116|[116|[101|[109|[112|[116|[32|[116|[111|[32|[126|[119|[32|[42|[42|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 204
																																		     [_cor2|[]])
			  let <_cor4> =
			      %% Line 205
			      call 'erlang':'node'
				  (From)
			  in  do  %% Line 205
				  call 'erlang':'disconnect_node'
				      (_cor4)
				  %% Line 206
				  {'noreply',O}
	  %% Line 207
	  <{From,'badcookie','net_kernel',{_cor21,'spawn_link',_X_M,_X_F,_X_A,_X_Gleader}},O>
	      when call 'erlang':'=:='
		    (_cor21,
		     From) ->
	      let <_cor6> =
		  %% Line 208
		  call 'erlang':'node'
		      (From)
	      in  let <_cor5> =
		      %% Line 210
		      call 'erlang':'node'
			  ()
		  in  do  %% Line 208
			  call 'auth':'print'
			      (_cor6, %% Line 209
				      [126|[110|[42|[42|[32|[85|[110|[97|[117|[116|[104|[111|[114|[105|[122|[101|[100|[32|[115|[112|[97|[119|[110|[95|[108|[105|[110|[107|[32|[97|[116|[116|[101|[109|[112|[116|[32|[116|[111|[32|[126|[119|[32|[42|[42|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 210
																																						  [_cor5|[]])
			  let <_cor7> =
			      %% Line 211
			      call 'erlang':'node'
				  (From)
			  in  do  %% Line 211
				  call 'erlang':'disconnect_node'
				      (_cor7)
				  %% Line 212
				  {'noreply',O}
	  %% Line 213
	  <{_X_From,'badcookie','ddd_server',_X_Mess},O> when 'true' ->
	      %% Line 216
	      {'noreply',O}
	  %% Line 217
	  <{From,'badcookie','rex',_X_Msg},O> when 'true' ->
	      let <_cor9> =
		  %% Line 218
		  apply 'getnode'/1
		      (From)
	      in  let <_cor8> =
		      %% Line 219
		      call 'erlang':'node'
			  ()
		  in  do  %% Line 218
			  call 'auth':'print'
			      (_cor9, %% Line 219
				      [126|[110|[42|[42|[32|[85|[110|[97|[117|[116|[104|[111|[114|[105|[122|[101|[100|[32|[114|[112|[99|[32|[97|[116|[116|[101|[109|[112|[116|[32|[116|[111|[32|[126|[119|[32|[42|[42|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 219
																																	 [_cor8|[]])
			  let <_cor10> =
			      %% Line 220
			      call 'erlang':'node'
				  (From)
			  in  do  %% Line 220
				  call 'erlang':'disconnect_node'
				      (_cor10)
				  %% Line 221
				  {'noreply',O}
	  %% Line 223
	  <{From,'badcookie','net_kernel',{'$gen_call',{_cor22,Tag},{'is_auth',_X_Node}}},O>
	      when call 'erlang':'=:='
		    (_cor22,
		     From) ->
	      do  %% Line 224
		  call 'erlang':'!'
		      (From, {Tag,'no'})
		  %% Line 225
		  {'noreply',O}
	  %% Line 226
	  <{_X_From,'badcookie',To,{{'auth_reply',N},R}},O> when 'true' ->
	      do  catch
		      %% Line 227
		      call 'erlang':'!'
			  (To, {{'auth_reply',N},R})
		  %% Line 228
		  {'noreply',O}
	  %% Line 229
	  <{From,'badcookie',Name,Mess},Opened> when 'true' ->
	      do  %% Line 231
		  case call 'lists':'member'
			   (Name, Opened) of
		    %% Line 232
		    <'true'> when 'true' ->
			catch
			    %% Line 233
			    call 'erlang':'!'
				(Name, Mess)
		    %% Line 234
		    <'false'> when 'true' ->
			let <_cor12> =
			    catch
				let <_cor11> =
				    %% Line 235
				    call 'erlang':'element'
					(1, Mess)
				in  %% Line 235
				    call 'lists':'member'
					(_cor11, Opened)
			in  %% Line 235
			    case _cor12 of
			      %% Line 236
			      <'true'> when 'true' ->
				  catch
				      %% Line 237
				      call 'erlang':'!'
					  (Name, Mess)
			      %% Line 238
			      <_cor23> when 'true' ->
				  let <_cor14> =
				      %% Line 239
				      apply 'getnode'/1
					  (From)
				  in  let <_cor13> =
					  %% Line 241
					  call 'erlang':'node'
					      ()
				      in  do  %% Line 239
					      call 'auth':'print'
						  (_cor14, %% Line 240
							   [126|[110|[42|[42|[32|[85|[110|[97|[117|[116|[104|[111|[114|[105|[122|[101|[100|[32|[115|[101|[110|[100|[32|[97|[116|[116|[101|[109|[112|[116|[32|[126|[119|[32|[116|[111|[32|[126|[119|[32|[42|[42|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 241
																																						      [Mess|[_cor13|[]]])
					      let <_cor15> =
						  %% Line 242
						  apply 'getnode'/1
						      (From)
					      in  %% Line 242
						  call 'erlang':'disconnect_node'
						      (_cor15)
			    end
		    ( <_cor17> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor17})
		      -| ['compiler_generated'] )
		  end
		  %% Line 245
		  {'noreply',Opened}
	  %% Line 246
	  <_cor24,O> when 'true' ->
	      %% Line 247
	      {'noreply',O}
	end
'code_change'/3 =
    %% Line 251
    fun (_cor2,_cor1,_cor0) ->
	%% Line 252
	{'ok',_cor1}
'terminate'/2 =
    %% Line 256
    fun (_cor1,_cor0) ->
	%% Line 257
	'ok'
'getnode'/1 =
    %% Line 259
    fun (_cor0) ->
	case _cor0 of
	  <P>
	      when call 'erlang':'is_pid'
		    (_cor0) ->
	      call 'erlang':'node'
		  (P)
	  %% Line 260
	  <P> when 'true' ->
	      P
	end
'init_cookie'/0 =
    %% Line 270
    fun () ->
	%% Line 271
	case call 'init':'get_argument'
		 ('nocookie') of
	  %% Line 272
	  <'error'> when 'true' ->
	      %% Line 273
	      case call 'init':'get_argument'
		       ('setcookie') of
		%% Line 274
		<{'ok',[[C0|[]]|[]]}> when 'true' ->
		    let <C> =
			%% Line 275
			call 'erlang':'list_to_atom'
			    (C0)
		    in  let <_cor1> =
			    %% Line 277
			    call 'ets':'new'
				('cookies', %% Line 278
					    ['protected'])
			in  %% Line 276
			    {'state',C,_cor1}
		%% Line 279
		<_cor8> when 'true' ->
		    %% Line 281
		    case apply 'read_cookie'/0
			     () of
		      %% Line 282
		      <{'error',Error}> when 'true' ->
			  do  %% Line 283
			      call 'error_logger':'error_msg'
				  (Error, [])
			      %% Line 285
			      call 'erlang':'error'
				  (Error)
		      %% Line 286
		      <{'ok',Co}> when 'true' ->
			  let <_cor3> =
			      %% Line 287
			      call 'erlang':'list_to_atom'
				  (Co)
			  in  let <_cor2> =
				  %% Line 288
				  call 'ets':'new'
				      (%% Line 289
				       'cookies', %% Line 290
						  ['protected'])
			      in  %% Line 287
				  {'state',_cor3,_cor2}
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor4})
			-| ['compiler_generated'] )
		    end
	      end
	  %% Line 293
	  <_X_Other> when 'true' ->
	      let <_cor6> =
		  %% Line 295
		  call 'ets':'new'
		      ('cookies', ['protected'])
	      in  %% Line 294
		  {'state','nocookie',_cor6}
	end
'read_cookie'/0 =
    %% Line 298
    fun () ->
	%% Line 299
	case call 'init':'get_argument'
		 ('home') of
	  %% Line 300
	  <{'ok',[[Home|[]]|[]]}> when 'true' ->
	      let <_cor0> =
		  %% Line 301
		  call 'filename':'join'
		      (Home, [46|[101|[114|[108|[97|[110|[103|[46|[99|[111|[111|[107|[105|[101]]]]]]]]]]]]]])
	      in  %% Line 301
		  apply 'read_cookie'/1
		      (_cor0)
	  %% Line 302
	  <_cor2> when 'true' ->
	      %% Line 303
	      {'error',[78|[111|[32|[104|[111|[109|[101|[32|[102|[111|[114|[32|[99|[111|[111|[107|[105|[101|[32|[102|[105|[108|[101]]]]]]]]]]]]]]]]]]]]]]]}
	end
'read_cookie'/1 =
    %% Line 306
    fun (_cor0) ->
	%% Line 307
	case call 'file':'raw_read_file_info'
		 (_cor0) of
	  %% Line 308
	  <{'ok',{'file_info',Size,Type,_cor7,_cor8,_cor9,_cor10,Mode,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16}}> when 'true' ->
	      let <_cor1> =
		  %% Line 309
		  call 'os':'type'
		      ()
	      in  %% Line 309
		  case apply 'check_attributes'/4
			   (_cor0, Type, Mode, _cor1) of
		    %% Line 310
		    <'ok'> when 'true' ->
			apply 'read_cookie'/2
			    (_cor0, Size)
		    %% Line 311
		    <Error> when 'true' ->
			Error
		  end
	  %% Line 313
	  <{'error','enoent'}> when 'true' ->
	      %% Line 314
	      case apply 'create_cookie'/1
		       (_cor0) of
		%% Line 315
		<'ok'> when 'true' ->
		    apply 'read_cookie'/1
			(_cor0)
		%% Line 316
		<Error> when 'true' ->
		    Error
	      end
	  %% Line 318
	  <{'error',Reason}> when 'true' ->
	      let <_cor4> =
		  %% Line 319
		  apply 'make_error'/2
		      (_cor0, Reason)
	      in  %% Line 319
		  {'error',_cor4}
	  ( <_cor5> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor5})
	    -| ['compiler_generated'] )
	end
'read_cookie'/2 =
    %% Line 322
    fun (_cor1,_cor0) ->
	%% Line 323
	case call 'file':'open'
		 (_cor1, ['raw'|['read']]) of
	  %% Line 324
	  <{'ok',File}> when 'true' ->
	      %% Line 325
	      case call 'file':'read'
		       (File, _cor0) of
		%% Line 326
		<{'ok',List}> when 'true' ->
		    %% Line 327
		    case call 'file':'close'
			     (File) of
		      <'ok'> when 'true' ->
			  %% Line 328
			  apply 'check_cookie'/2
			      (List, [])
		      ( <_cor2> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor2})
			-| ['compiler_generated'] )
		    end
		%% Line 329
		<{'error',Reason}> when 'true' ->
		    %% Line 330
		    apply 'make_error'/2
			(_cor1, Reason)
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 332
	  <{'error',Reason}> when 'true' ->
	      %% Line 333
	      apply 'make_error'/2
		  (_cor1, Reason)
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor4})
	    -| ['compiler_generated'] )
	end
'make_error'/2 =
    %% Line 336
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 337
	    call 'erlang':'atom_to_list'
		(_cor0)
	in  let <_cor3> =
		%% Line 337
		[58|[32|_cor2]]
	    in  let <_cor4> =
		    %% Line 337
		    call 'erlang':'++'
			(_cor1, _cor3)
		in  let <_cor5> =
			%% Line 337
			call 'erlang':'++'
			    ([69|[114|[114|[111|[114|[32|[119|[104|[101|[110|[32|[114|[101|[97|[100|[105|[110|[103|[32]]]]]]]]]]]]]]]]]]], _cor4)
		    in  %% Line 337
			{'error',_cor5}
'check_attributes'/4 =
    %% Line 341
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Name,Type,_X_Mode,_X_Os>
	      when call 'erlang':'=/='
		    (Type,
		     'regular') ->
	      let <_cor4> =
		  %% Line 342
		  call 'erlang':'++'
		      ([32|[105|[115|[32|[111|[102|[32|[116|[121|[112|[101|[32]]]]]]]]]]]], Type)
	      in  let <_cor5> =
		      %% Line 342
		      call 'erlang':'++'
			  (Name, _cor4)
		  in  let <_cor6> =
			  %% Line 342
			  call 'erlang':'++'
			      ([67|[111|[111|[107|[105|[101|[32|[102|[105|[108|[101|[32]]]]]]]]]]]], _cor5)
		      in  %% Line 342
			  {'error',_cor6}
	  %% Line 343
	  <Name,_X_Type,Mode,{'unix',_cor14}>
	      when try
		    let <_cor7> =
			call 'erlang':'band'
			    (Mode, 63)
		    in  call 'erlang':'=/='
			    (_cor7, 0)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor8> =
		  %% Line 344
		  call 'erlang':'++'
		      (Name, [32|[109|[117|[115|[116|[32|[98|[101|[32|[97|[99|[99|[101|[115|[115|[105|[98|[108|[101|[32|[98|[121|[32|[111|[119|[110|[101|[114|[32|[111|[110|[108|[121]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	      in  let <_cor9> =
		      %% Line 344
		      call 'erlang':'++'
			  ([67|[111|[111|[107|[105|[101|[32|[102|[105|[108|[101|[32]]]]]]]]]]]], _cor8)
		  in  %% Line 344
		      {'error',_cor9}
	  %% Line 345
	  <_X_Name,_X_Type,_X_Mode,_X_Os> when 'true' ->
	      %% Line 346
	      'ok'
	end
'check_cookie'/2 =
    %% Line 350
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Letter|Rest],Result>
	      when let <_cor2> =
		    call 'erlang':'=<'
			(32, Letter)
		in  let <_cor3> =
			call 'erlang':'=<'
			    (Letter, 126)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      %% Line 351
	      apply 'check_cookie'/2
		  (Rest, [Letter|Result])
	  %% Line 352
	  <[X|Rest],Result> when 'true' ->
	      %% Line 353
	      apply 'check_cookie1'/2
		  ([X|Rest], Result)
	  %% Line 354
	  <[],Result> when 'true' ->
	      %% Line 355
	      apply 'check_cookie1'/2
		  ([], Result)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'check_cookie',2}}] )
	    -| ['compiler_generated'] )
	end
'check_cookie1'/2 =
    %% Line 357
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[10|Rest],Result> when 'true' ->
	      %% Line 358
	      apply 'check_cookie1'/2
		  (Rest, Result)
	  %% Line 359
	  <[13|Rest],Result> when 'true' ->
	      %% Line 360
	      apply 'check_cookie1'/2
		  (Rest, Result)
	  %% Line 361
	  <[32|Rest],Result> when 'true' ->
	      %% Line 362
	      apply 'check_cookie1'/2
		  (Rest, Result)
	  %% Line 363
	  <[_cor5|_cor6],_X_Result> when 'true' ->
	      %% Line 364
	      {'error',[66|[97|[100|[32|[99|[104|[97|[114|[97|[99|[116|[101|[114|[115|[32|[105|[110|[32|[99|[111|[111|[107|[105|[101]]]]]]]]]]]]]]]]]]]]]]]]}
	  %% Line 365
	  <[],[]> when 'true' ->
	      %% Line 366
	      {'error',[84|[111|[111|[32|[115|[104|[111|[114|[116|[32|[99|[111|[111|[107|[105|[101|[32|[115|[116|[114|[105|[110|[103]]]]]]]]]]]]]]]]]]]]]]]}
	  %% Line 367
	  <[],Result> when 'true' ->
	      let <_cor2> =
		  %% Line 368
		  call 'lists':'reverse'
		      (Result)
	      in  %% Line 368
		  {'ok',_cor2}
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'check_cookie1',2}}] )
	    -| ['compiler_generated'] )
	end
'create_cookie'/1 =
    %% Line 372
    fun (_cor0) ->
	%% Line 373
	case call 'erlang':'now'
		 () of
	  <{_cor18,S1,S2}> when 'true' ->
	      let <_cor2> =
		  %% Line 374
		  call 'erlang':'*'
		      (S2, 10000)
	      in  let <Seed> =
		      %% Line 374
		      call 'erlang':'+'
			  (_cor2, S1)
		  in  let <Cookie> =
			  %% Line 375
			  apply 'random_cookie'/3
			      (20, Seed, [])
		      in  %% Line 376
			  case call 'file':'open'
				   (_cor0, ['write'|['raw']]) of
			    %% Line 377
			    <{'ok',File}> when 'true' ->
				let <R1> =
				    %% Line 378
				    call 'file':'write'
					(File, Cookie)
				in  %% Line 379
				    case call 'file':'close'
					     (File) of
				      <'ok'> when 'true' ->
					  let <_cor7> =
					      %% Line 380
					      apply 'make_info'/1
						  (_cor0)
					  in  let <R2> =
						  %% Line 380
						  call 'file':'raw_write_file_info'
						      (_cor0, _cor7)
					      in  %% Line 381
						  case <R1,R2> of
						    %% Line 382
						    <'ok','ok'> when 'true' ->
							%% Line 383
							'ok'
						    %% Line 384
						    <{'error',Reason},_cor19> when 'true' ->
							let <_cor9> =
							    %% Line 387
							    call 'io_lib':'format'
								([70|[97|[105|[108|[101|[100|[32|[116|[111|[32|[119|[114|[105|[116|[101|[32|[116|[111|[32|[99|[111|[111|[107|[105|[101|[32|[102|[105|[108|[101|[32|[39|[126|[116|[115|[39|[58|[32|[126|[112]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor0|[Reason|[]]])
							in  let <_cor10> =
								%% Line 386
								call 'lists':'flatten'
								    (_cor9)
							    in  %% Line 385
								{'error',_cor10}
						    %% Line 388
						    <'ok',{'error',Reason}> when 'true' ->
							let <_cor11> =
							    %% Line 389
							    call 'erlang':'atom_to_list'
								(Reason)
							in  let <_cor12> =
								%% Line 389
								call 'erlang':'++'
								    ([70|[97|[105|[108|[101|[100|[32|[116|[111|[32|[99|[104|[97|[110|[103|[101|[32|[109|[111|[100|[101|[58|[32]]]]]]]]]]]]]]]]]]]]]]], _cor11)
							    in  %% Line 389
								{'error',_cor12}
						    ( <_fol32,_fol33> when 'true' ->
							  let <_cor13> = {_fol32,_fol33}
							  in  primop 'match_fail'
								  ({'case_clause',_cor13})
						      -| ['compiler_generated'] )
						  end
				      ( <_cor6> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor6})
					-| ['compiler_generated'] )
				    end
			    %% Line 391
			    <{'error',Reason}> when 'true' ->
				let <_cor14> =
				    %% Line 394
				    call 'io_lib':'format'
					([70|[97|[105|[108|[101|[100|[32|[116|[111|[32|[99|[114|[101|[97|[116|[101|[32|[99|[111|[111|[107|[105|[101|[32|[102|[105|[108|[101|[32|[39|[126|[116|[115|[39|[58|[32|[126|[112]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor0|[Reason|[]]])
				in  let <_cor15> =
					%% Line 393
					call 'lists':'flatten'
					    (_cor14)
				    in  %% Line 392
					{'error',_cor15}
			    ( <_cor16> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor16})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'random_cookie'/3 =
    %% Line 397
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <0,_cor13,Result> when 'true' ->
	      %% Line 398
	      Result
	  %% Line 399
	  <Count,X0,Result> when 'true' ->
	      let <X> =
		  %% Line 400
		  apply 'next_random'/1
		      (X0)
	      in  let <_cor6> =
		      %% Line 401
		      call 'erlang':'*'
			  (X, 26)
		  in  let <_cor7> =
			  %% Line 401
			  call 'erlang':'div'
			      (_cor6, 68719476736)
		      in  let <Letter> =
			      %% Line 401
			      call 'erlang':'+'
				  (_cor7, 65)
			  in  let <_cor9> =
				  %% Line 402
				  call 'erlang':'-'
				      (Count, 1)
			      in  %% Line 402
				  apply 'random_cookie'/3
				      (_cor9, X, [Letter|Result])
	end
'make_info'/1 =
    %% Line 411
    fun (_cor0) ->
	let <_cor2> =
	    %% Line 413
	    case call 'file':'raw_read_file_info'
		     (_cor0) of
	      %% Line 414
	      <{'ok',{'file_info',_cor5,_cor6,_cor7,{Date,_cor8},_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17}}> when 'true' ->
		  %% Line 415
		  {Date,{0,0,0}}
	      %% Line 416
	      <_cor18> when 'true' ->
		  %% Line 417
		  {{1990,1,1},{0,0,0}}
	    end
	in  %% Line 419
	    {'file_info','undefined','undefined','undefined',_cor2,_cor2,_cor2,256,'undefined','undefined','undefined','undefined','undefined','undefined'}
'next_random'/1 =
    %% Line 426
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 427
	    call 'erlang':'*'
		(_cor0, 17059465)
	in  let <_cor2> =
		%% Line 427
		call 'erlang':'+'
		    (_cor1, 1)
	    in  %% Line 427
		call 'erlang':'band'
		    (_cor2, 68719476735)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('auth')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('auth', _cor0)
end