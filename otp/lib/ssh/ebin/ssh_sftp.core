module 'ssh_sftp' ['apread'/4,
		   'apwrite'/4,
		   'aread'/3,
		   'attr_to_info'/1,
		   'awrite'/3,
		   'close'/2,
		   'close'/3,
		   'code_change'/3,
		   'del_dir'/2,
		   'del_dir'/3,
		   'delete'/2,
		   'delete'/3,
		   'get_file_info'/2,
		   'get_file_info'/3,
		   'handle_call'/3,
		   'handle_cast'/2,
		   'handle_msg'/2,
		   'handle_ssh_msg'/2,
		   'info_to_attr'/1,
		   'init'/1,
		   'list_dir'/2,
		   'list_dir'/3,
		   'make_dir'/2,
		   'make_dir'/3,
		   'make_symlink'/3,
		   'make_symlink'/4,
		   'module_info'/0,
		   'module_info'/1,
		   'open'/3,
		   'open'/4,
		   'opendir'/2,
		   'opendir'/3,
		   'position'/3,
		   'position'/4,
		   'pread'/4,
		   'pread'/5,
		   'pwrite'/4,
		   'pwrite'/5,
		   'read'/3,
		   'read'/4,
		   'read_file'/2,
		   'read_file'/3,
		   'read_file_info'/2,
		   'read_file_info'/3,
		   'read_link'/2,
		   'read_link'/3,
		   'read_link_info'/2,
		   'read_link_info'/3,
		   'readdir'/2,
		   'readdir'/3,
		   'real_path'/2,
		   'real_path'/3,
		   'recv_window'/1,
		   'recv_window'/2,
		   'rename'/3,
		   'rename'/4,
		   'send_window'/1,
		   'send_window'/2,
		   'start_channel'/1,
		   'start_channel'/2,
		   'start_channel'/3,
		   'stop_channel'/1,
		   'terminate'/2,
		   'write'/3,
		   'write'/4,
		   'write_file'/3,
		   'write_file'/4,
		   'write_file_info'/3,
		   'write_file_info'/4]
    attributes [%% Line 26
		'behaviour' =
		    %% Line 26
		    ['ssh_channel'],
		%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','file_info'},[{'typed_record_field',{'record_field',25,{'atom',25,'size'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'type'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'device'}|[{'atom',26,'directory'}|[{'atom',26,'other'}|[{'atom',26,'regular'}|[{'atom',26,'symlink'}]]]]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'access'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'atom',27,'read'}|[{'atom',27,'write'}|[{'atom',27,'read_write'}|[{'atom',27,'none'}]]]]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'atime'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'remote_type',28,[{'atom',28,'file'}|[{'atom',28,'date_time'}|[[]]]]}|[{'type',28,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'mtime'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'remote_type',32,[{'atom',32,'file'}|[{'atom',32,'date_time'}|[[]]]]}|[{'type',32,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',34,{'atom',34,'ctime'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'remote_type',34,[{'atom',34,'file'}|[{'atom',34,'date_time'}|[[]]]]}|[{'type',34,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',40,{'atom',40,'mode'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'links'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',46,{'atom',46,'major_device'}},{'type',46,'union',[{'atom',46,'undefined'}|[{'type',46,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'minor_device'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'inode'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',54,{'atom',54,'uid'}},{'type',54,'union',[{'atom',54,'undefined'}|[{'type',54,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',55,{'atom',55,'gid'}},{'type',55,'union',[{'atom',55,'undefined'}|[{'type',55,'non_neg_integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','file_descriptor'},[{'typed_record_field',{'record_field',59,{'atom',59,'module'}},{'type',59,'union',[{'atom',59,'undefined'}|[{'type',59,'module',[]}]]}}|[{'typed_record_field',{'record_field',60,{'atom',60,'data'}},{'type',60,'union',[{'atom',60,'undefined'}|[{'type',60,'term',[]}]]}}]],[]}],
		%% Line 64
		'type' =
		    %% Line 64
		    [{{'record','ssh'},[{'record_field',68,{'atom',68,'role'}}|[{'record_field',69,{'atom',69,'peer'}}|[{'record_field',71,{'atom',71,'c_vsn'}}|[{'record_field',72,{'atom',72,'s_vsn'}}|[{'record_field',74,{'atom',74,'c_version'}}|[{'record_field',75,{'atom',75,'s_version'}}|[{'record_field',77,{'atom',77,'c_keyinit'}}|[{'record_field',78,{'atom',78,'s_keyinit'}}|[{'record_field',80,{'atom',80,'algorithms'}}|[{'record_field',82,{'atom',82,'kex'}}|[{'record_field',83,{'atom',83,'hkey'}}|[{'record_field',84,{'atom',84,'key_cb'}}|[{'record_field',85,{'atom',85,'io_cb'}}|[{'record_field',87,{'atom',87,'send_mac'},{'atom',87,'none'}}|[{'record_field',88,{'atom',88,'send_mac_key'}}|[{'record_field',89,{'atom',89,'send_mac_size'},{'integer',89,0}}|[{'record_field',91,{'atom',91,'recv_mac'},{'atom',91,'none'}}|[{'record_field',92,{'atom',92,'recv_mac_key'}}|[{'record_field',93,{'atom',93,'recv_mac_size'},{'integer',93,0}}|[{'record_field',95,{'atom',95,'encrypt'},{'atom',95,'none'}}|[{'record_field',96,{'atom',96,'encrypt_keys'}}|[{'record_field',97,{'atom',97,'encrypt_block_size'},{'integer',97,8}}|[{'record_field',98,{'atom',98,'encrypt_ctx'}}|[{'record_field',100,{'atom',100,'decrypt'},{'atom',100,'none'}}|[{'record_field',101,{'atom',101,'decrypt_keys'}}|[{'record_field',102,{'atom',102,'decrypt_block_size'},{'integer',102,8}}|[{'record_field',103,{'atom',103,'decrypt_ctx'}}|[{'record_field',105,{'atom',105,'compress'},{'atom',105,'none'}}|[{'record_field',106,{'atom',106,'compress_ctx'}}|[{'record_field',107,{'atom',107,'decompress'},{'atom',107,'none'}}|[{'record_field',108,{'atom',108,'decompress_ctx'}}|[{'record_field',110,{'atom',110,'c_lng'},{'atom',110,'none'}}|[{'record_field',111,{'atom',111,'s_lng'},{'atom',111,'none'}}|[{'record_field',113,{'atom',113,'user_ack'},{'atom',113,'true'}}|[{'record_field',114,{'atom',114,'timeout'},{'atom',114,'infinity'}}|[{'record_field',116,{'atom',116,'shared_secret'}}|[{'record_field',117,{'atom',117,'exchanged_hash'}}|[{'record_field',118,{'atom',118,'session_id'}}|[{'record_field',120,{'atom',120,'opts'},{'nil',120}}|[{'record_field',121,{'atom',121,'send_sequence'},{'integer',121,0}}|[{'record_field',122,{'atom',122,'recv_sequence'},{'integer',122,0}}|[{'record_field',123,{'atom',123,'keyex_key'}}|[{'record_field',124,{'atom',124,'keyex_info'}}|[{'record_field',127,{'atom',127,'user'}}|[{'record_field',128,{'atom',128,'service'}}|[{'record_field',129,{'atom',129,'userauth_quiet_mode'}}|[{'record_field',130,{'atom',130,'userauth_supported_methods'}}|[{'record_field',131,{'atom',131,'userauth_methods'}}|[{'record_field',132,{'atom',132,'userauth_preference'}}|[{'record_field',133,{'atom',133,'available_host_keys'}}|[{'record_field',134,{'atom',134,'authenticated'},{'atom',134,'false'}}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','alg'},[{'record_field',139,{'atom',139,'kex'}}|[{'record_field',140,{'atom',140,'hkey'}}|[{'record_field',141,{'atom',141,'send_mac'}}|[{'record_field',142,{'atom',142,'recv_mac'}}|[{'record_field',143,{'atom',143,'encrypt'}}|[{'record_field',144,{'atom',144,'decrypt'}}|[{'record_field',145,{'atom',145,'compress'}}|[{'record_field',146,{'atom',146,'decompress'}}|[{'record_field',147,{'atom',147,'c_lng'}}|[{'record_field',148,{'atom',148,'s_lng'}}]]]]]]]]]],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{{'record','ssh_key'},[{'record_field',153,{'atom',153,'type'}}|[{'record_field',154,{'atom',154,'public'}}|[{'record_field',155,{'atom',155,'private'}}|[{'record_field',156,{'atom',156,'comment'},{'string',156,[]}}]]]],[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','ssh_pty'},[{'record_field',159,{'atom',159,'term'},{'string',159,[]}}|[{'record_field',160,{'atom',160,'width'},{'integer',160,80}}|[{'record_field',161,{'atom',161,'height'},{'integer',161,25}}|[{'record_field',162,{'atom',162,'pixel_width'},{'integer',162,1024}}|[{'record_field',163,{'atom',163,'pixel_height'},{'integer',163,768}}|[{'record_field',164,{'atom',164,'modes'},{'bin',164,[]}}]]]]]],[]}],
		%% Line 222
		'type' =
		    %% Line 222
		    [{{'record','ssh_xfer_attr'},[{'record_field',224,{'atom',224,'type'}}|[{'record_field',225,{'atom',225,'size'}}|[{'record_field',226,{'atom',226,'owner'}}|[{'record_field',227,{'atom',227,'group'}}|[{'record_field',228,{'atom',228,'permissions'}}|[{'record_field',229,{'atom',229,'atime'}}|[{'record_field',230,{'atom',230,'atime_nseconds'}}|[{'record_field',231,{'atom',231,'createtime'}}|[{'record_field',232,{'atom',232,'createtime_nseconds'}}|[{'record_field',233,{'atom',233,'mtime'}}|[{'record_field',234,{'atom',234,'mtime_nseconds'}}|[{'record_field',235,{'atom',235,'acl'}}|[{'record_field',236,{'atom',236,'attrib_bits'}}|[{'record_field',237,{'atom',237,'extensions'}}]]]]]]]]]]]]]],[]}],
		%% Line 240
		'type' =
		    %% Line 240
		    [{{'record','ssh_xfer_ace'},[{'record_field',242,{'atom',242,'type'}}|[{'record_field',243,{'atom',243,'flag'}}|[{'record_field',244,{'atom',244,'mask'}}|[{'record_field',245,{'atom',245,'who'}}]]]],[]}],
		%% Line 249
		'type' =
		    %% Line 249
		    [{{'record','ssh_xfer'},[{'record_field',251,{'atom',251,'vsn'}}|[{'record_field',252,{'atom',252,'ext'}}|[{'record_field',253,{'atom',253,'cm'}}|[{'record_field',254,{'atom',254,'channel'}}]]]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{{'record','state'},[{'record_field',56,{'atom',56,'xf'}}|[{'record_field',57,{'atom',57,'rep_buf'},{'bin',57,[]}}|[{'record_field',58,{'atom',58,'req_id'}}|[{'record_field',59,{'atom',59,'req_list'},{'nil',59}}|[{'record_field',60,{'atom',60,'inf'}}]]]]],[]}],
		%% Line 63
		'type' =
		    %% Line 63
		    [{{'record','fileinf'},[{'record_field',65,{'atom',65,'handle'}}|[{'record_field',66,{'atom',66,'offset'}}|[{'record_field',67,{'atom',67,'size'}}|[{'record_field',68,{'atom',68,'mode'}}]]]],[]}]]
'start_channel'/1 =
    %% Line 82
    fun (_cor0) ->
	case _cor0 of
	  <Cm>
	      when call 'erlang':'is_pid'
		    (_cor0) ->
	      %% Line 83
	      apply 'start_channel'/2
		  (Cm, [])
	  %% Line 84
	  <Host>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 85
	      apply 'start_channel'/2
		  (Host, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'start_channel',1}}] )
	    -| ['compiler_generated'] )
	end
'start_channel'/2 =
    %% Line 86
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Cm,Opts>
	      when call 'erlang':'is_pid'
		    (Cm) ->
	      let <Timeout> =
		  %% Line 87
		  call 'proplists':'get_value'
		      ('timeout', Opts, 'infinity')
	      in  %% Line 88
		  case call 'ssh_xfer':'attach'
			   (Cm, []) of
		    %% Line 89
		    <{'ok',ChannelId,_cor8}>
			when call 'erlang':'=:='
			      (_cor8,
			       Cm) ->
			%% Line 90
			case call 'ssh_channel':'start'
				 (Cm, ChannelId, %% Line 91
						 'ssh_sftp', %% Line 91
							     [Cm|[ChannelId|[Timeout|[]]]]) of
			  %% Line 92
			  <{'ok',Pid}> when 'true' ->
			      %% Line 93
			      case apply 'wait_for_version_negotiation'/2
				       (Pid, Timeout) of
				%% Line 94
				<'ok'> when 'true' ->
				    %% Line 95
				    {'ok',Pid}
				%% Line 96
				<TimeOut> when 'true' ->
				    %% Line 97
				    TimeOut
			      end
			  %% Line 99
			  <{'error',Reason}> when 'true' ->
			      %% Line 100
			      {'error',Reason}
			  %% Line 101
			  <'ignore'> when 'true' ->
			      %% Line 102
			      {'error','ignore'}
			  ( <_cor4> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor4})
			    -| ['compiler_generated'] )
			end
		    %% Line 104
		    <Error> when 'true' ->
			%% Line 105
			Error
		  end
	  %% Line 108
	  <Host,Opts> when 'true' ->
	      %% Line 109
	      apply 'start_channel'/3
		  (Host, 22, Opts)
	end
'start_channel'/3 =
    %% Line 110
    fun (_cor2,_cor1,_cor0) ->
	let <Timeout> =
	    %% Line 111
	    call 'proplists':'get_value'
		('timeout', _cor0, 'infinity')
	in  let <_cor4> =
		%% Line 112
		call 'proplists':'delete'
		    ('timeout', _cor0)
	    in  %% Line 112
		case call 'ssh_xfer':'connect'
			 (_cor2, _cor1, _cor4) of
		  %% Line 113
		  <{'ok',ChannelId,Cm}> when 'true' ->
		      %% Line 114
		      case call 'ssh_channel':'start'
			       (Cm, ChannelId, 'ssh_sftp', [Cm|%% Line 115
							       [ChannelId|[Timeout|[]]]]) of
			%% Line 116
			<{'ok',Pid}> when 'true' ->
			    %% Line 117
			    case apply 'wait_for_version_negotiation'/2
				     (Pid, Timeout) of
			      %% Line 118
			      <'ok'> when 'true' ->
				  %% Line 119
				  {'ok',Pid,Cm}
			      %% Line 120
			      <TimeOut> when 'true' ->
				  %% Line 121
				  TimeOut
			    end
			%% Line 123
			<{'error',Reason}> when 'true' ->
			    %% Line 124
			    {'error',Reason}
			%% Line 125
			<'ignore'> when 'true' ->
			    %% Line 126
			    {'error','ignore'}
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor6})
			  -| ['compiler_generated'] )
		      end
		  %% Line 128
		  <Error> when 'true' ->
		      %% Line 129
		      Error
		end
'stop_channel'/1 =
    %% Line 132
    fun (_cor0) ->
	%% Line 133
	case call 'erlang':'is_process_alive'
		 (_cor0) of
	  %% Line 134
	  <'true'> when 'true' ->
	      let <OldValue> =
		  %% Line 135
		  call 'erlang':'process_flag'
		      ('trap_exit', 'true')
	      in  do  %% Line 136
		      call 'erlang':'link'
			  (_cor0)
		      do  %% Line 137
			  call 'erlang':'exit'
			      (_cor0, 'ssh_sftp_stop_channel')
			  do  %% Line 138
			      receive
				%% Line 139
				<{'EXIT',_cor4,'normal'}>
				    when call 'erlang':'=:='
					  (_cor4,
					   _cor0) ->
				    'ok'
			      after %% Line 141
				    5000 ->
				do  %% Line 142
				    call 'erlang':'exit'
					(_cor0, 'kill')
				    %% Line 143
				    receive
				      %% Line 144
				      <{'EXIT',_cor5,'killed'}>
					  when call 'erlang':'=:='
						(_cor5,
						 _cor0) ->
					  'ok'
				    after 'infinity' ->
				      'ok'
			      do  %% Line 148
				  call 'erlang':'process_flag'
				      ('trap_exit', OldValue)
				  %% Line 149
				  'ok'
	  %% Line 150
	  <'false'> when 'true' ->
	      %% Line 151
	      'ok'
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor2})
	    -| ['compiler_generated'] )
	end
'wait_for_version_negotiation'/2 =
    %% Line 154
    fun (_cor1,_cor0) ->
	%% Line 155
	apply 'call'/3
	    (_cor1, 'wait_for_version_negotiation', _cor0)
'open'/3 =
    %% Line 157
    fun (_cor2,_cor1,_cor0) ->
	%% Line 158
	apply 'open'/4
	    (_cor2, _cor1, _cor0, 'infinity')
'open'/4 =
    %% Line 159
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 160
	apply 'call'/3
	    (_cor3, {'open','false',_cor2,_cor1}, _cor0)
'opendir'/2 =
    %% Line 162
    fun (_cor1,_cor0) ->
	%% Line 163
	apply 'opendir'/3
	    (_cor1, _cor0, 'infinity')
'opendir'/3 =
    %% Line 164
    fun (_cor2,_cor1,_cor0) ->
	%% Line 165
	apply 'call'/3
	    (_cor2, {'opendir','false',_cor1}, _cor0)
'close'/2 =
    %% Line 167
    fun (_cor1,_cor0) ->
	%% Line 168
	apply 'close'/3
	    (_cor1, _cor0, 'infinity')
'close'/3 =
    %% Line 169
    fun (_cor2,_cor1,_cor0) ->
	%% Line 170
	apply 'call'/3
	    (_cor2, {'close','false',_cor1}, _cor0)
'readdir'/2 =
    %% Line 172
    fun (_cor1,_cor0) ->
	%% Line 173
	apply 'readdir'/3
	    (_cor1, _cor0, 'infinity')
'readdir'/3 =
    %% Line 174
    fun (_cor2,_cor1,_cor0) ->
	%% Line 175
	apply 'call'/3
	    (_cor2, {'readdir','false',_cor1}, _cor0)
'pread'/4 =
    %% Line 177
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 178
	apply 'pread'/5
	    (_cor3, _cor2, _cor1, _cor0, 'infinity')
'pread'/5 =
    %% Line 179
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 180
	apply 'call'/3
	    (_cor4, {'pread','false',_cor3,_cor2,_cor1}, _cor0)
'read'/3 =
    %% Line 182
    fun (_cor2,_cor1,_cor0) ->
	%% Line 183
	apply 'read'/4
	    (_cor2, _cor1, _cor0, 'infinity')
'read'/4 =
    %% Line 184
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 185
	apply 'call'/3
	    (_cor3, {'read','false',_cor2,_cor1}, _cor0)
'apread'/4 =
    %% Line 189
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 190
	apply 'call'/3
	    (_cor3, {'pread','true',_cor2,_cor1,_cor0}, 'infinity')
'aread'/3 =
    %% Line 193
    fun (_cor2,_cor1,_cor0) ->
	%% Line 194
	apply 'call'/3
	    (_cor2, {'read','true',_cor1,_cor0}, 'infinity')
'pwrite'/4 =
    %% Line 196
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 197
	apply 'pwrite'/5
	    (_cor3, _cor2, _cor1, _cor0, 'infinity')
'pwrite'/5 =
    %% Line 198
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 199
	apply 'call'/3
	    (_cor4, {'pwrite','false',_cor3,_cor2,_cor1}, _cor0)
'write'/3 =
    %% Line 201
    fun (_cor2,_cor1,_cor0) ->
	%% Line 202
	apply 'write'/4
	    (_cor2, _cor1, _cor0, 'infinity')
'write'/4 =
    %% Line 203
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 204
	apply 'call'/3
	    (_cor3, {'write','false',_cor2,_cor1}, _cor0)
'apwrite'/4 =
    %% Line 208
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 209
	apply 'call'/3
	    (_cor3, {'pwrite','true',_cor2,_cor1,_cor0}, 'infinity')
'awrite'/3 =
    %% Line 213
    fun (_cor2,_cor1,_cor0) ->
	%% Line 214
	apply 'call'/3
	    (_cor2, {'write','true',_cor1,_cor0}, 'infinity')
'position'/3 =
    %% Line 216
    fun (_cor2,_cor1,_cor0) ->
	%% Line 217
	apply 'position'/4
	    (_cor2, _cor1, _cor0, 'infinity')
'position'/4 =
    %% Line 218
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 219
	apply 'call'/3
	    (_cor3, {'position',_cor2,_cor1}, _cor0)
'real_path'/2 =
    %% Line 221
    fun (_cor1,_cor0) ->
	%% Line 222
	apply 'real_path'/3
	    (_cor1, _cor0, 'infinity')
'real_path'/3 =
    %% Line 223
    fun (_cor2,_cor1,_cor0) ->
	%% Line 224
	apply 'call'/3
	    (_cor2, {'real_path','false',_cor1}, _cor0)
'read_file_info'/2 =
    %% Line 226
    fun (_cor1,_cor0) ->
	%% Line 227
	apply 'read_file_info'/3
	    (_cor1, _cor0, 'infinity')
'read_file_info'/3 =
    %% Line 228
    fun (_cor2,_cor1,_cor0) ->
	%% Line 229
	apply 'call'/3
	    (_cor2, {'read_file_info','false',_cor1}, _cor0)
'get_file_info'/2 =
    %% Line 231
    fun (_cor1,_cor0) ->
	%% Line 232
	apply 'get_file_info'/3
	    (_cor1, _cor0, 'infinity')
'get_file_info'/3 =
    %% Line 233
    fun (_cor2,_cor1,_cor0) ->
	%% Line 234
	apply 'call'/3
	    (_cor2, {'get_file_info','false',_cor1}, _cor0)
'write_file_info'/3 =
    %% Line 236
    fun (_cor2,_cor1,_cor0) ->
	%% Line 237
	apply 'write_file_info'/4
	    (_cor2, _cor1, _cor0, 'infinity')
'write_file_info'/4 =
    %% Line 238
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 239
	apply 'call'/3
	    (_cor3, {'write_file_info','false',_cor2,_cor1}, _cor0)
'read_link_info'/2 =
    %% Line 241
    fun (_cor1,_cor0) ->
	%% Line 242
	apply 'read_link_info'/3
	    (_cor1, _cor0, 'infinity')
'read_link_info'/3 =
    %% Line 243
    fun (_cor2,_cor1,_cor0) ->
	%% Line 244
	apply 'call'/3
	    (_cor2, {'read_link_info','false',_cor1}, _cor0)
'read_link'/2 =
    %% Line 246
    fun (_cor1,_cor0) ->
	%% Line 247
	apply 'read_link'/3
	    (_cor1, _cor0, 'infinity')
'read_link'/3 =
    %% Line 248
    fun (_cor2,_cor1,_cor0) ->
	%% Line 249
	case apply 'call'/3
		 (_cor2, {'read_link','false',_cor1}, _cor0) of
	  %% Line 250
	  <{'ok',[{Name,_X_Attrs}|[]]}> when 'true' ->
	      %% Line 251
	      {'ok',Name}
	  %% Line 252
	  <ErrMsg> when 'true' ->
	      %% Line 253
	      ErrMsg
	end
'make_symlink'/3 =
    %% Line 256
    fun (_cor2,_cor1,_cor0) ->
	%% Line 257
	apply 'make_symlink'/4
	    (_cor2, _cor1, _cor0, 'infinity')
'make_symlink'/4 =
    %% Line 258
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 259
	apply 'call'/3
	    (_cor3, {'make_symlink','false',_cor2,_cor1}, _cor0)
'rename'/3 =
    %% Line 261
    fun (_cor2,_cor1,_cor0) ->
	%% Line 262
	apply 'rename'/4
	    (_cor2, _cor1, _cor0, 'infinity')
'rename'/4 =
    %% Line 263
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 264
	apply 'call'/3
	    (_cor3, {'rename','false',_cor2,_cor1}, _cor0)
'delete'/2 =
    %% Line 266
    fun (_cor1,_cor0) ->
	%% Line 267
	apply 'delete'/3
	    (_cor1, _cor0, 'infinity')
'delete'/3 =
    %% Line 268
    fun (_cor2,_cor1,_cor0) ->
	%% Line 269
	apply 'call'/3
	    (_cor2, {'delete','false',_cor1}, _cor0)
'make_dir'/2 =
    %% Line 271
    fun (_cor1,_cor0) ->
	%% Line 272
	apply 'make_dir'/3
	    (_cor1, _cor0, 'infinity')
'make_dir'/3 =
    %% Line 273
    fun (_cor2,_cor1,_cor0) ->
	%% Line 274
	apply 'call'/3
	    (_cor2, {'make_dir','false',_cor1}, _cor0)
'del_dir'/2 =
    %% Line 276
    fun (_cor1,_cor0) ->
	%% Line 277
	apply 'del_dir'/3
	    (_cor1, _cor0, 'infinity')
'del_dir'/3 =
    %% Line 278
    fun (_cor2,_cor1,_cor0) ->
	%% Line 279
	apply 'call'/3
	    (_cor2, {'del_dir','false',_cor1}, _cor0)
'send_window'/1 =
    %% Line 283
    fun (_cor0) ->
	%% Line 284
	apply 'send_window'/2
	    (_cor0, 'infinity')
'send_window'/2 =
    %% Line 285
    fun (_cor1,_cor0) ->
	%% Line 286
	apply 'call'/3
	    (_cor1, 'send_window', _cor0)
'recv_window'/1 =
    %% Line 288
    fun (_cor0) ->
	%% Line 289
	apply 'recv_window'/2
	    (_cor0, 'infinity')
'recv_window'/2 =
    %% Line 290
    fun (_cor1,_cor0) ->
	%% Line 291
	apply 'call'/3
	    (_cor1, 'recv_window', _cor0)
'list_dir'/2 =
    %% Line 294
    fun (_cor1,_cor0) ->
	%% Line 295
	apply 'list_dir'/3
	    (_cor1, _cor0, 'infinity')
'list_dir'/3 =
    %% Line 297
    fun (_cor2,_cor1,_cor0) ->
	%% Line 298
	case apply 'opendir'/3
		 (_cor2, _cor1, _cor0) of
	  %% Line 299
	  <{'ok',Handle}> when 'true' ->
	      let <Res> =
		  %% Line 300
		  apply 'do_list_dir'/4
		      (_cor2, Handle, _cor0, [])
	      in  do  %% Line 301
		      apply 'close'/3
			  (_cor2, Handle, _cor0)
		      %% Line 302
		      case Res of
			%% Line 303
			<{'ok',List}> when 'true' ->
			    let <_cor8> =
				%% Line 304
				( fun (_cor5,_cor4) ->
				      case <_cor5,_cor4> of
					<{Nm,_X_Info},Acc> when 'true' ->
					    %% Line 305
					    [Nm|Acc]
					( <_cor7,_cor6> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor7,_cor6})
						-| [{'function_name',{'-list_dir/3-fun-0-',2}}] )
					  -| ['compiler_generated'] )
				      end
				  -| [{'id',{0,0,'-list_dir/3-fun-0-'}}] )
			    in  let <NList> =
				    %% Line 304
				    call 'lists':'foldl'
					(_cor8, %% Line 306
						[], %% Line 306
						    List)
				in  %% Line 307
				    {'ok',NList}
			%% Line 308
			<Error> when 'true' ->
			    Error
		      end
	  %% Line 310
	  <Error> when 'true' ->
	      %% Line 311
	      Error
	end
'do_list_dir'/4 =
    %% Line 314
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 315
	case apply 'readdir'/3
		 (_cor3, _cor2, _cor1) of
	  %% Line 316
	  <{'ok',[]}> when 'true' ->
	      %% Line 317
	      {'ok',_cor0}
	  %% Line 318
	  <{'ok',Names}> when 'true' ->
	      let <_cor4> =
		  %% Line 319
		  call 'erlang':'++'
		      (_cor0, Names)
	      in  %% Line 319
		  apply 'do_list_dir'/4
		      (_cor3, _cor2, _cor1, _cor4)
	  %% Line 320
	  <'eof'> when 'true' ->
	      %% Line 321
	      {'ok',_cor0}
	  %% Line 322
	  <Error> when 'true' ->
	      %% Line 323
	      Error
	end
'read_file'/2 =
    %% Line 327
    fun (_cor1,_cor0) ->
	%% Line 328
	apply 'read_file'/3
	    (_cor1, _cor0, 'infinity')
'read_file'/3 =
    %% Line 330
    fun (_cor2,_cor1,_cor0) ->
	%% Line 331
	case apply 'open'/4
		 (_cor2, _cor1, ['read'|['binary']], _cor0) of
	  %% Line 332
	  <{'ok',Handle}> when 'true' ->
	      %% Line 333
	      case apply 'recv_window'/2
		       (_cor2, _cor0) of
		<{'ok',{_X_WindowSz,PacketSz}}> when 'true' ->
		    let <Res> =
			%% Line 334
			apply 'read_file_loop'/5
			    (_cor2, Handle, PacketSz, _cor0, [])
		    in  do  %% Line 335
			    apply 'close'/2
				(_cor2, Handle)
			    %% Line 336
			    Res
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 337
	  <Error> when 'true' ->
	      %% Line 338
	      Error
	end
'read_file_loop'/5 =
    %% Line 341
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 342
	case apply 'read'/4
		 (_cor4, _cor3, _cor2, _cor1) of
	  %% Line 343
	  <{'ok',Data}> when 'true' ->
	      %% Line 344
	      apply 'read_file_loop'/5
		  (_cor4, _cor3, _cor2, _cor1, [Data|_cor0])
	  %% Line 345
	  <'eof'> when 'true' ->
	      let <_cor5> =
		  %% Line 346
		  call 'lists':'reverse'
		      (_cor0)
	      in  let <_cor6> =
		      %% Line 346
		      call 'erlang':'list_to_binary'
			  (_cor5)
		  in  %% Line 346
		      {'ok',_cor6}
	  %% Line 347
	  <Error> when 'true' ->
	      %% Line 348
	      Error
	end
'write_file'/3 =
    %% Line 351
    fun (_cor2,_cor1,_cor0) ->
	%% Line 352
	apply 'write_file'/4
	    (_cor2, _cor1, _cor0, 'infinity')
'write_file'/4 =
    %% Line 354
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Pid,Name,List,FileOpTimeout>
	      when call 'erlang':'is_list'
		    (List) ->
	      let <_cor4> =
		  %% Line 355
		  call 'unicode':'characters_to_binary'
		      (List)
	      in  %% Line 355
		  apply 'write_file'/4
		      (Pid, Name, _cor4, FileOpTimeout)
	  %% Line 356
	  <Pid,Name,Bin,FileOpTimeout> when 'true' ->
	      %% Line 357
	      case apply 'open'/4
		       (Pid, Name, ['write'|['binary']], FileOpTimeout) of
		%% Line 358
		<{'ok',Handle}> when 'true' ->
		    %% Line 359
		    case apply 'send_window'/2
			     (Pid, FileOpTimeout) of
		      <{'ok',{_X_Window,Packet}}> when 'true' ->
			  let <_cor6> =
			      %% Line 360
			      call 'erlang':'size'
				  (Bin)
			  in  let <Res> =
				  %% Line 360
				  apply 'write_file_loop'/7
				      (Pid, Handle, 0, Bin, _cor6, Packet, %% Line 361
									   FileOpTimeout)
			      in  do  %% Line 362
				      apply 'close'/3
					  (Pid, Handle, FileOpTimeout)
				      %% Line 363
				      Res
		      ( <_cor5> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor5})
			-| ['compiler_generated'] )
		    end
		%% Line 364
		<Error> when 'true' ->
		    %% Line 365
		    Error
	      end
	end
'write_file_loop'/7 =
    %% Line 368
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_Pid,_X_Handle,_X_Pos,_X_Bin,0,_X_PacketSz,_X_FileOpTimeout> when 'true' ->
	      %% Line 369
	      'ok'
	  %% Line 370
	  <Pid,Handle,Pos,Bin,Remain,PacketSz,FileOpTimeout> when 'true' ->
	      %% Line 371
	      case <> of
		<>
		    when call 'erlang':'>='
			  (Remain,
			   PacketSz) ->
		    %% Line 372
		    case Bin of
		      <#{#<_cor19>(Pos,8,'binary',['unsigned'|['big']]),
			 #<Data>(PacketSz,8,'binary',['unsigned'|['big']]),
			 #<_cor20>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
			  %% Line 373
			  case apply 'write'/4
				   (Pid, Handle, Data, FileOpTimeout) of
			    %% Line 374
			    <'ok'> when 'true' ->
				let <_cor9> =
				    %% Line 376
				    call 'erlang':'+'
					(Pos, PacketSz)
				in  let <_cor8> =
					%% Line 376
					call 'erlang':'-'
					    (Remain, PacketSz)
				    in  %% Line 375
					apply 'write_file_loop'/7
					    (Pid, Handle, _cor9, %% Line 376
								 Bin, _cor8, %% Line 377
									     PacketSz, %% Line 377
										       FileOpTimeout)
			    %% Line 378
			    <Error> when 'true' ->
				%% Line 379
				Error
			  end
		      ( <_cor7> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor7})
			-| ['compiler_generated'] )
		    end
		%% Line 381
		<> when 'true' ->
		    %% Line 382
		    case ( Bin
			   -| ['reuse_for_context'] ) of
		      <#{#<_cor21>(Pos,8,'binary',['unsigned'|['big']]),
			 #<Data>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
			  %% Line 383
			  apply 'write'/4
			      (Pid, Handle, Data, FileOpTimeout)
		      ( <_cor11> when 'true' ->
			    do  primop 'bs_context_to_binary'
				    (_cor11)
				primop 'match_fail'
				    ({'badmatch',_cor11})
			-| ['compiler_generated'] )
		    end
	      end
	end
'init'/1 =
    %% Line 395
    fun (_cor0) ->
	case _cor0 of
	  <[Cm|[ChannelId|[Timeout|[]]]]> when 'true' ->
	      do  %% Line 396
		  call 'erlang':'monitor'
		      ('process', Cm)
		  %% Line 397
		  case call 'ssh_connection':'subsystem'
			   (Cm, ChannelId, [115|[102|[116|[112]]]], Timeout) of
		    %% Line 398
		    <'success'> when 'true' ->
			let <Xf> =
			    %% Line 399
			    {'ssh_xfer','undefined','undefined',Cm,%% Line 400
								   ChannelId}
			in  let <_cor2> =
				%% Line 404
				apply 'new_inf'/0
				    ()
			    in  %% Line 401
				{'ok',{'state',Xf,%% Line 403
						  #{}#,%% Line 402
						       0,[],_cor2}}
		    %% Line 405
		    <'failure'> when 'true' ->
			%% Line 406
			{'stop',[115|[101|[114|[118|[101|[114|[32|[102|[97|[105|[108|[101|[100|[32|[116|[111|[32|[115|[116|[97|[114|[116|[32|[115|[102|[116|[112|[32|[115|[117|[98|[115|[121|[115|[116|[101|[109]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}
		    %% Line 407
		    <Error> when 'true' ->
			%% Line 408
			{'stop',Error}
		  end
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'init',1}}] )
	    -| ['compiler_generated'] )
	end
'handle_call'/3 =
    %% Line 421
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{{'timeout','infinity'},'wait_for_version_negotiation'},From,State = %% Line 422
										{'state',Xf = {'ssh_xfer','undefined',_cor20,_cor21,_cor22},_cor23,_cor24,_cor25,_cor26}> when 'true' ->
	      let <_cor5> =
		  %% Line 423
		  call 'erlang':'setelement'
		      (2, Xf, From)
	      in  let <_cor9> =
		      %% Line 423
		      call 'erlang':'setelement'
			  (2, State, _cor5)
		  in  %% Line 423
		      {'noreply',_cor9}
	  %% Line 425
	  <{{'timeout',Timeout},'wait_for_version_negotiation'},From,State = %% Line 426
									     {'state',Xf = {'ssh_xfer','undefined',_cor38,_cor39,_cor40},_cor41,_cor42,_cor43,_cor44}> when 'true' ->
	      do  %% Line 427
		  call 'timer':'send_after'
		      (Timeout, {'timeout','undefined',From})
		  let <_cor12> =
		      %% Line 428
		      call 'erlang':'setelement'
			  (2, Xf, From)
		  in  let <_cor16> =
			  %% Line 428
			  call 'erlang':'setelement'
			      (2, State, _cor12)
		      in  %% Line 428
			  {'noreply',_cor16}
	  %% Line 430
	  <{_cor56,'wait_for_version_negotiation'},_cor57,State> when 'true' ->
	      %% Line 431
	      {'reply','ok',State}
	  %% Line 433
	  <{{'timeout','infinity'},Msg},From,State> when 'true' ->
	      %% Line 434
	      apply 'do_handle_call'/3
		  (Msg, From, State)
	  %% Line 435
	  <{{'timeout',Timeout},Msg},From,State = {'state',_cor58,_cor59,Id,_cor60,_cor61}> when 'true' ->
	      do  %% Line 436
		  call 'timer':'send_after'
		      (Timeout, {'timeout',Id,From})
		  %% Line 437
		  apply 'do_handle_call'/3
		      (Msg, From, State)
	  ( <_cor19,_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17})
		  -| [{'function_name',{'handle_call',3}}] )
	    -| ['compiler_generated'] )
	end
'handle_cast'/2 =
    %% Line 439
    fun (_cor1,_cor0) ->
	%% Line 440
	{'noreply',_cor0}
'code_change'/3 =
    %% Line 442
    fun (_cor2,_cor1,_cor0) ->
	%% Line 443
	{'ok',_cor1}
'do_handle_call'/3 =
    %% Line 445
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'open',Async,FileName,Mode},From,State = {'state',XF,_cor185,_cor186,_cor187,_cor188}> when 'true' ->
	      %% Line 446
	      ( case XF of
		  ( <( {'ssh_xfer',_rec6,_cor189,_cor190,_cor191}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'open_mode'/2
				 (_rec6, Mode) of
			  <{Access,Flags,Attrs}> when 'true' ->
			      do  %% Line 448
				  call 'ssh_xfer':'open'
				      (XF, _cor186, FileName, Access, Flags, Attrs)
				  %% Line 449
				  case Async of
				    %% Line 450
				    <'true'> when 'true' ->
					let <_cor13> =
					    %% Line 453
					    ( fun (_cor10,_cor9) ->
						  case <_cor10,_cor9> of
						    <{'ok',Handle},State1> when 'true' ->
							%% Line 454
							apply 'open2'/7
							    (_cor186, FileName, Handle, Mode, Async, %% Line 455
												     From, %% Line 455
													   State1)
						    %% Line 456
						    <Rep,State1> when 'true' ->
							%% Line 457
							apply 'async_reply'/4
							    (_cor186, Rep, From, State1)
						  end
					      -| [{'id',{0,0,'-do_handle_call/3-fun-0-'}}] )
					in  let <_cor14> =
						%% Line 452
						apply 'update_request_info'/3
						    (_cor186, State, _cor13)
					    in  %% Line 451
						{'reply',{'async',_cor186},_cor14}
				    %% Line 459
				    <'false'> when 'true' ->
					let <_cor19> =
					    %% Line 462
					    ( fun (_cor16,_cor15) ->
						  case <_cor16,_cor15> of
						    <{'ok',Handle},State1> when 'true' ->
							%% Line 463
							apply 'open2'/7
							    (_cor186, FileName, Handle, Mode, Async, %% Line 464
												     From, %% Line 464
													   State1)
						    %% Line 465
						    <Rep,State1> when 'true' ->
							%% Line 466
							apply 'sync_reply'/3
							    (Rep, From, State1)
						  end
					      -| [{'id',{0,0,'-do_handle_call/3-fun-1-'}}] )
					in  let <_cor20> =
						%% Line 461
						apply 'update_request_info'/3
						    (_cor186, State, _cor19)
					    in  %% Line 460
						{'noreply',_cor20}
				    ( <_cor21> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor21})
				      -| ['compiler_generated'] )
				  end
			  ( <_cor5> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor5})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor192> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','ssh_xfer'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 470
	  <{'opendir',Async,Path},From,State> when 'true' ->
	      %% Line 471
	      ( case State of
		  ( <( {'state',_cor198,_cor199,_rec8,_cor200,_cor201}
		       -| ['compiler_generated'] )> when 'true' ->
			do  %% Line 472
			    call 'ssh_xfer':'opendir'
				(_cor198, _rec8, Path)
			    %% Line 473
			    apply 'make_reply'/4
				(_rec8, Async, From, State)
		    -| ['compiler_generated'] )
		  ( <_cor202> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 475
	  <{'readdir',Async,Handle},From,State> when 'true' ->
	      %% Line 476
	      ( case State of
		  ( <( {'state',_cor208,_cor209,_rec10,_cor210,_cor211}
		       -| ['compiler_generated'] )> when 'true' ->
			do  %% Line 477
			    call 'ssh_xfer':'readdir'
				(_cor208, _rec10, Handle)
			    %% Line 478
			    apply 'make_reply'/4
				(_rec10, Async, From, State)
		    -| ['compiler_generated'] )
		  ( <_cor212> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 480
	  <{'close',_X_Async,Handle},From,State> when 'true' ->
	      %% Line 482
	      case apply 'get_size'/2
		       (Handle, State) of
		%% Line 483
		<'undefined'> when 'true' ->
		    %% Line 484
		    ( case State of
			( <( {'state',_cor218,_cor219,_rec12,_cor220,_cor221}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  %% Line 485
				  call 'ssh_xfer':'close'
				      (_cor218, _rec12, Handle)
				  let <_cor42> =
				      %% Line 487
				      ( fun (_cor39,_cor38) ->
					    let <_cor37> =
						%% Line 488
						apply 'erase_handle'/2
						    (Handle, _cor38)
					    in  %% Line 488
						{_cor39,_cor37}
					-| [{'id',{0,0,'-do_handle_call/3-fun-2-'}}] )
				  in  %% Line 486
				      apply 'make_reply_post'/5
					  (_rec12, 'false', From, State, _cor42)
			  -| ['compiler_generated'] )
			( <_cor222> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 490
		<_cor228> when 'true' ->
		    %% Line 491
		    case apply 'lseek_position'/3
			     (Handle, 'cur', State) of
		      %% Line 492
		      <{'ok',_cor229}> when 'true' ->
			  %% Line 493
			  ( case State of
			      ( <( {'state',_cor230,_cor231,_rec14,_cor232,_cor233}
				   -| ['compiler_generated'] )> when 'true' ->
				    do  %% Line 494
					call 'ssh_xfer':'close'
					    (_cor230, _rec14, Handle)
					let <_cor53> =
					    %% Line 496
					    ( fun (_cor50,_cor49) ->
						  let <_cor48> =
						      %% Line 497
						      apply 'erase_handle'/2
							  (Handle, _cor49)
						  in  %% Line 497
						      {_cor50,_cor48}
					      -| [{'id',{0,0,'-do_handle_call/3-fun-3-'}}] )
					in  %% Line 495
					    apply 'make_reply_post'/5
						(_rec14, 'false', From, State, _cor53)
				-| ['compiler_generated'] )
			      ( <_cor234> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','state'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      %% Line 499
		      <Error> when 'true' ->
			  %% Line 500
			  {'reply',Error,State}
		    end
	      end
	  %% Line 504
	  <{'pread',Async,Handle,At,Length},From,State> when 'true' ->
	      %% Line 505
	      case apply 'lseek_position'/3
		       (Handle, At, State) of
		%% Line 506
		<{'ok',Offset}> when 'true' ->
		    %% Line 507
		    ( case State of
			( <( {'state',_cor240,_cor241,_rec16,_cor242,_cor243}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  %% Line 508
				  call 'ssh_xfer':'read'
				      (_cor240, _rec16, Handle, Offset, Length)
				  let <_cor61> =
				      %% Line 511
				      call 'erlang':'+'
					  (Offset, Length)
				  in  let <State1> =
					  %% Line 511
					  apply 'update_offset'/3
					      (Handle, _cor61, State)
				      in  let <_cor69> =
					      %% Line 513
					      ( fun (_cor66,_cor65) ->
						    case <_cor66,_cor65> of
						      <{'ok',Data},State2> when 'true' ->
							  %% Line 514
							  case apply 'get_mode'/2
								   (Handle, State2) of
							    %% Line 515
							    <'binary'> when 'true' ->
								{{'ok',Data},State2}
							    %% Line 516
							    <'text'> when 'true' ->
								let <_cor63> =
								    %% Line 517
								    call 'unicode':'characters_to_list'
									(Data)
								in  %% Line 517
								    {{'ok',_cor63},State2}
							    ( <_cor64> when 'true' ->
								  primop 'match_fail'
								      ({'case_clause',_cor64})
							      -| ['compiler_generated'] )
							  end
						      %% Line 519
						      <Rep,State2> when 'true' ->
							  %% Line 520
							  {Rep,State2}
						    end
						-| [{'id',{0,0,'-do_handle_call/3-fun-4-'}}] )
					  in  %% Line 512
					      apply 'make_reply_post'/5
						  (_rec16, Async, From, State1, _cor69)
			  -| ['compiler_generated'] )
			( <_cor244> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 522
		<Error> when 'true' ->
		    %% Line 523
		    {'reply',Error,State}
	      end
	  %% Line 526
	  <{'read',Async,Handle,Length},From,State> when 'true' ->
	      %% Line 527
	      case apply 'lseek_position'/3
		       (Handle, 'cur', State) of
		%% Line 528
		<{'ok',Offset}> when 'true' ->
		    %% Line 529
		    ( case State of
			( <( {'state',_cor250,_cor251,_rec18,_cor252,_cor253}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  %% Line 530
				  call 'ssh_xfer':'read'
				      (_cor250, _rec18, Handle, Offset, Length)
				  let <_cor76> =
				      %% Line 533
				      call 'erlang':'+'
					  (Offset, Length)
				  in  let <State1> =
					  %% Line 533
					  apply 'update_offset'/3
					      (Handle, _cor76, State)
				      in  let <_cor84> =
					      %% Line 535
					      ( fun (_cor81,_cor80) ->
						    case <_cor81,_cor80> of
						      <{'ok',Data},State2> when 'true' ->
							  %% Line 536
							  case apply 'get_mode'/2
								   (Handle, State2) of
							    %% Line 537
							    <'binary'> when 'true' ->
								{{'ok',Data},State2}
							    %% Line 538
							    <'text'> when 'true' ->
								let <_cor78> =
								    call 'erlang':'binary_to_list'
									(Data)
								in  {{'ok',_cor78},State2}
							    ( <_cor79> when 'true' ->
								  primop 'match_fail'
								      ({'case_clause',_cor79})
							      -| ['compiler_generated'] )
							  end
						      %% Line 540
						      <Rep,State2> when 'true' ->
							  {Rep,State2}
						    end
						-| [{'id',{0,0,'-do_handle_call/3-fun-5-'}}] )
					  in  %% Line 534
					      apply 'make_reply_post'/5
						  (_rec18, Async, From, State1, _cor84)
			  -| ['compiler_generated'] )
			( <_cor254> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 542
		<Error> when 'true' ->
		    %% Line 543
		    {'reply',Error,State}
	      end
	  %% Line 546
	  <{'pwrite',Async,Handle,At,Data0},From,State> when 'true' ->
	      %% Line 547
	      case apply 'lseek_position'/3
		       (Handle, At, State) of
		%% Line 548
		<{'ok',Offset}> when 'true' ->
		    let <_cor86> =
			%% Line 549
			case <> of
			  %% Line 550
			  <>
			      when call 'erlang':'is_binary'
				    (Data0) ->
			      %% Line 551
			      Data0
			  %% Line 552
			  <>
			      when call 'erlang':'is_list'
				    (Data0) ->
			      %% Line 553
			      call 'erlang':'list_to_binary'
				  (Data0)
			  ( <> when 'true' ->
				primop 'match_fail'
				    ('if_clause')
			    -| ['compiler_generated'] )
			end
		    in  %% Line 555
			( case State of
			    ( <( {'state',_cor260,_cor261,_rec20,_cor262,_cor263}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <Size> =
				      %% Line 556
				      call 'erlang':'size'
					  (_cor86)
				  in  do  %% Line 557
					  call 'ssh_xfer':'write'
					      (_cor260, _rec20, Handle, Offset, _cor86)
					  let <_cor94> =
					      %% Line 558
					      call 'erlang':'+'
						  (Offset, Size)
					  in  let <State1> =
						  %% Line 558
						  apply 'update_size'/3
						      (Handle, _cor94, State)
					      in  %% Line 559
						  apply 'make_reply'/4
						      (_rec20, Async, From, State1)
			      -| ['compiler_generated'] )
			    ( <_cor264> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','state'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		%% Line 560
		<Error> when 'true' ->
		    %% Line 561
		    {'reply',Error,State}
	      end
	  %% Line 564
	  <{'write',Async,Handle,Data0},From,State> when 'true' ->
	      %% Line 565
	      case apply 'lseek_position'/3
		       (Handle, 'cur', State) of
		%% Line 566
		<{'ok',Offset}> when 'true' ->
		    let <_cor97> =
			%% Line 567
			case <> of
			  %% Line 568
			  <>
			      when call 'erlang':'is_binary'
				    (Data0) ->
			      %% Line 569
			      Data0
			  %% Line 570
			  <>
			      when call 'erlang':'is_list'
				    (Data0) ->
			      %% Line 571
			      call 'erlang':'list_to_binary'
				  (Data0)
			  ( <> when 'true' ->
				primop 'match_fail'
				    ('if_clause')
			    -| ['compiler_generated'] )
			end
		    in  %% Line 573
			( case State of
			    ( <( {'state',_cor270,_cor271,_rec22,_cor272,_cor273}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <Size> =
				      %% Line 574
				      call 'erlang':'size'
					  (_cor97)
				  in  do  %% Line 575
					  call 'ssh_xfer':'write'
					      (_cor270, _rec22, Handle, Offset, _cor97)
					  let <_cor105> =
					      %% Line 576
					      call 'erlang':'+'
						  (Offset, Size)
					  in  let <State1> =
						  %% Line 576
						  apply 'update_offset'/3
						      (Handle, _cor105, State)
					      in  %% Line 577
						  apply 'make_reply'/4
						      (_rec22, Async, From, State1)
			      -| ['compiler_generated'] )
			    ( <_cor274> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','state'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		%% Line 578
		<Error> when 'true' ->
		    %% Line 579
		    {'reply',Error,State}
	      end
	  %% Line 582
	  <{'position',Handle,At},_X_From,State> when 'true' ->
	      %% Line 584
	      case apply 'lseek_position'/3
		       (Handle, At, State) of
		%% Line 585
		<{'ok',Offset}> when 'true' ->
		    let <_cor108> =
			%% Line 586
			apply 'update_offset'/3
			    (Handle, Offset, State)
		    in  %% Line 586
			{'reply',{'ok',Offset},_cor108}
		%% Line 587
		<Error> when 'true' ->
		    %% Line 588
		    {'reply',Error,State}
	      end
	  %% Line 591
	  <{'rename',Async,FromFile,ToFile},From,State> when 'true' ->
	      %% Line 592
	      ( case State of
		  ( <( {'state',_cor280,_cor281,_rec24,_cor282,_cor283}
		       -| ['compiler_generated'] )> when 'true' ->
			do  %% Line 593
			    call 'ssh_xfer':'rename'
				(_cor280, _rec24, FromFile, ToFile, ['overwrite'])
			    %% Line 594
			    apply 'make_reply'/4
				(_rec24, Async, From, State)
		    -| ['compiler_generated'] )
		  ( <_cor284> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 596
	  <{'delete',Async,Name},From,State> when 'true' ->
	      %% Line 597
	      ( case State of
		  ( <( {'state',_cor290,_cor291,_rec26,_cor292,_cor293}
		       -| ['compiler_generated'] )> when 'true' ->
			do  %% Line 598
			    call 'ssh_xfer':'remove'
				(_cor290, _rec26, Name)
			    %% Line 599
			    apply 'make_reply'/4
				(_rec26, Async, From, State)
		    -| ['compiler_generated'] )
		  ( <_cor294> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 601
	  <{'make_dir',Async,Name},From,State> when 'true' ->
	      %% Line 602
	      ( case State of
		  ( <( {'state',_cor300,_cor301,_rec28,_cor302,_cor303}
		       -| ['compiler_generated'] )> when 'true' ->
			do  %% Line 603
			    call 'ssh_xfer':'mkdir'
				(_cor300, _rec28, Name, %% Line 604
							{'ssh_xfer_attr','directory','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined'})
			    %% Line 605
			    apply 'make_reply'/4
				(_rec28, Async, From, State)
		    -| ['compiler_generated'] )
		  ( <_cor304> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 607
	  <{'del_dir',Async,Name},From,State> when 'true' ->
	      %% Line 608
	      ( case State of
		  ( <( {'state',_cor310,_cor311,_rec30,_cor312,_cor313}
		       -| ['compiler_generated'] )> when 'true' ->
			do  %% Line 609
			    call 'ssh_xfer':'rmdir'
				(_cor310, _rec30, Name)
			    %% Line 610
			    apply 'make_reply'/4
				(_rec30, Async, From, State)
		    -| ['compiler_generated'] )
		  ( <_cor314> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 612
	  <{'real_path',Async,Name},From,State> when 'true' ->
	      %% Line 613
	      ( case State of
		  ( <( {'state',_cor320,_cor321,_rec32,_cor322,_cor323}
		       -| ['compiler_generated'] )> when 'true' ->
			do  %% Line 614
			    call 'ssh_xfer':'realpath'
				(_cor320, _rec32, Name)
			    %% Line 615
			    apply 'make_reply'/4
				(_rec32, Async, From, State)
		    -| ['compiler_generated'] )
		  ( <_cor324> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 617
	  <{'read_file_info',Async,Name},From,State> when 'true' ->
	      %% Line 618
	      ( case State of
		  ( <( {'state',_cor330,_cor331,_rec34,_cor332,_cor333}
		       -| ['compiler_generated'] )> when 'true' ->
			do  %% Line 619
			    call 'ssh_xfer':'stat'
				(_cor330, _rec34, Name, 'all')
			    %% Line 620
			    apply 'make_reply'/4
				(_rec34, Async, From, State)
		    -| ['compiler_generated'] )
		  ( <_cor334> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 622
	  <{'get_file_info',Async,Name},From,State> when 'true' ->
	      %% Line 623
	      ( case State of
		  ( <( {'state',_cor340,_cor341,_rec36,_cor342,_cor343}
		       -| ['compiler_generated'] )> when 'true' ->
			do  %% Line 624
			    call 'ssh_xfer':'fstat'
				(_cor340, _rec36, Name, 'all')
			    %% Line 625
			    apply 'make_reply'/4
				(_rec36, Async, From, State)
		    -| ['compiler_generated'] )
		  ( <_cor344> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 627
	  <{'read_link_info',Async,Name},From,State> when 'true' ->
	      %% Line 628
	      ( case State of
		  ( <( {'state',_cor350,_cor351,_rec38,_cor352,_cor353}
		       -| ['compiler_generated'] )> when 'true' ->
			do  %% Line 629
			    call 'ssh_xfer':'lstat'
				(_cor350, _rec38, Name, 'all')
			    %% Line 630
			    apply 'make_reply'/4
				(_rec38, Async, From, State)
		    -| ['compiler_generated'] )
		  ( <_cor354> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 632
	  <{'read_link',Async,Name},From,State> when 'true' ->
	      %% Line 633
	      ( case State of
		  ( <( {'state',_cor360,_cor361,_rec40,_cor362,_cor363}
		       -| ['compiler_generated'] )> when 'true' ->
			do  %% Line 634
			    call 'ssh_xfer':'readlink'
				(_cor360, _rec40, Name)
			    %% Line 635
			    apply 'make_reply'/4
				(_rec40, Async, From, State)
		    -| ['compiler_generated'] )
		  ( <_cor364> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 637
	  <{'make_symlink',Async,Path,TargetPath},From,State> when 'true' ->
	      %% Line 638
	      ( case State of
		  ( <( {'state',_cor370,_cor371,_rec42,_cor372,_cor373}
		       -| ['compiler_generated'] )> when 'true' ->
			do  %% Line 639
			    call 'ssh_xfer':'symlink'
				(_cor370, _rec42, Path, TargetPath)
			    %% Line 640
			    apply 'make_reply'/4
				(_rec42, Async, From, State)
		    -| ['compiler_generated'] )
		  ( <_cor374> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 642
	  <{'write_file_info',Async,Name,Info},From,State> when 'true' ->
	      %% Line 643
	      ( case State of
		  ( <( {'state',_cor380,_cor381,_rec44,_cor382,_cor383}
		       -| ['compiler_generated'] )> when 'true' ->
			let <A> =
			    %% Line 644
			    apply 'info_to_attr'/1
				(Info)
			in  do  %% Line 645
				call 'ssh_xfer':'setstat'
				    (_cor380, _rec44, Name, A)
				%% Line 646
				apply 'make_reply'/4
				    (_rec44, Async, From, State)
		    -| ['compiler_generated'] )
		  ( <_cor384> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 651
	  <'send_window',_X_From,State> when 'true' ->
	      %% Line 652
	      ( case State of
		  ( <( {'state',_rec46,_cor390,_cor391,_cor392,_cor393}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 654
			( case _rec46 of
			    ( <( {'ssh_xfer',_cor395,_cor396,_rec47,_cor397}
				 -| ['compiler_generated'] )> when 'true' ->
				  case call 'ssh':'channel_info'
					   (_rec47, _cor397, ['send_window']) of
				    <[{'send_window',{{'win_size',Size0},{'packet_size',Size1}}}|[]]> when 'true' ->
					%% Line 655
					{'reply',{'ok',{Size0,Size1}},State}
				    ( <_cor173> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor173})
				      -| ['compiler_generated'] )
				  end
			      -| ['compiler_generated'] )
			    ( <_cor398> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','ssh_xfer'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor394> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 660
	  <'recv_window',_X_From,State> when 'true' ->
	      %% Line 661
	      ( case State of
		  ( <( {'state',_rec49,_cor403,_cor404,_cor405,_cor406}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 663
			( case _rec49 of
			    ( <( {'ssh_xfer',_cor408,_cor409,_rec50,_cor410}
				 -| ['compiler_generated'] )> when 'true' ->
				  case call 'ssh':'channel_info'
					   (_rec50, _cor410, ['recv_window']) of
				    <[{'recv_window',{{'win_size',Size0},{'packet_size',Size1}}}|[]]> when 'true' ->
					%% Line 664
					{'reply',{'ok',{Size0,Size1}},State}
				    ( <_cor181> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor181})
				      -| ['compiler_generated'] )
				  end
			      -| ['compiler_generated'] )
			    ( <_cor411> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','ssh_xfer'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor407> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 667
	  <'stop',_X_From,State> when 'true' ->
	      %% Line 668
	      {'stop','shutdown','ok',State}
	  %% Line 670
	  <Call,_X_From,State> when 'true' ->
	      %% Line 671
	      {'reply',{'error','bad_call',Call,State},State}
	end
'handle_ssh_msg'/2 =
    %% Line 678
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'ssh_cm',_X_ConnectionManager,%% Line 679
					  {'data',_X_ChannelId,0,Data}},State0 = %% Line 679
										 {'state',_cor9,Data0,_cor10,_cor11,_cor12}> when 'true' ->
	      let <_cor2> =
		  %% Line 681
		  #{#<Data0>('all',8,'binary',['unsigned'|['big']]),
		    #<Data>('all',8,'binary',['unsigned'|['big']])}#
	      in  let <State> =
		      %% Line 681
		      apply 'handle_reply'/2
			  (State0, _cor2)
		  in  %% Line 682
		      {'ok',State}
	  %% Line 684
	  <{'ssh_cm',_X_ConnectionManager,%% Line 685
					  {'data',_X_ChannelId,1,Data}},%% Line 685
									State> when 'true' ->
	      let <_cor4> =
		  %% Line 686
		  call 'erlang':'binary_to_list'
		      (Data)
	      in  do  %% Line 686
		      call 'error_logger':'format'
			  ([115|[115|[104|[58|[32|[83|[84|[68|[69|[82|[82|[58|[32|[126|[115|[10]]]]]]]]]]]]]]]], [_cor4|[]])
		      %% Line 687
		      {'ok',State}
	  %% Line 689
	  <{'ssh_cm',_X_ConnectionManager,{'eof',_X_ChannelId}},State> when 'true' ->
	      %% Line 690
	      {'ok',State}
	  %% Line 692
	  <{'ssh_cm',_cor13,{'signal',_cor14,_cor15}},State> when 'true' ->
	      %% Line 694
	      {'ok',State}
	  %% Line 696
	  <{'ssh_cm',_cor16,{'exit_signal',ChannelId,_cor17,Error,_cor18}},%% Line 697
									   State0> when 'true' ->
	      let <State> =
		  %% Line 698
		  apply 'reply_all'/2
		      (State0, {'error',Error})
	      in  %% Line 699
		  {'stop',ChannelId,State}
	  %% Line 701
	  <{'ssh_cm',_cor19,{'exit_status',ChannelId,Status}},State0> when 'true' ->
	      let <State> =
		  %% Line 702
		  apply 'reply_all'/2
		      (State0, {'error',{'exit_status',Status}})
	      in  %% Line 703
		  {'stop',ChannelId,State}
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'handle_ssh_msg',2}}] )
	    -| ['compiler_generated'] )
	end
'handle_msg'/2 =
    %% Line 710
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'ssh_channel_up',_cor9,_cor10},State = {'state',Xf,_cor11,_cor12,_cor13,_cor14}> when 'true' ->
	      do  %% Line 711
		  call 'ssh_xfer':'protocol_version_request'
		      (Xf)
		  %% Line 712
		  {'ok',State}
	  %% Line 715
	  <{'timeout','undefined',From},State = %% Line 716
						{'state',{'ssh_xfer',_cor15,_cor16,_cor17,ChannelId},_cor18,_cor19,_cor20,_cor21}> when 'true' ->
	      do  %% Line 717
		  call 'ssh_channel':'reply'
		      (From, {'error','timeout'})
		  %% Line 718
		  {'stop',ChannelId,State}
	  %% Line 720
	  <{'timeout',Id,From},State = {'state',_cor22,_cor23,_cor24,ReqList0,_cor25}> when 'true' ->
	      %% Line 721
	      case call 'lists':'keysearch'
		       (Id, 1, ReqList0) of
		%% Line 722
		<'false'> when 'true' ->
		    %% Line 723
		    {'ok',State}
		%% Line 724
		<_cor26> when 'true' ->
		    let <ReqList> =
			%% Line 725
			call 'lists':'keydelete'
			    (Id, 1, ReqList0)
		    in  do  %% Line 726
			    call 'ssh_channel':'reply'
				(From, {'error','timeout'})
			    let <_cor5> =
				%% Line 727
				call 'erlang':'setelement'
				    (5, State, ReqList)
			    in  %% Line 727
				{'ok',_cor5}
	      end
	  %% Line 731
	  <{'DOWN',_X_Ref,_X_Type,_X_Process,_cor33},State = %% Line 732
							     {'state',{'ssh_xfer',_cor34,_cor35,_cor36,ChannelId},_cor37,_cor38,_cor39,_cor40}> when 'true' ->
	      %% Line 733
	      {'stop',ChannelId,State}
	  %% Line 736
	  <{'EXIT',_cor41,'ssh_sftp_stop_channel'},State = %% Line 737
							   {'state',{'ssh_xfer',_cor42,_cor43,_cor44,ChannelId},_cor45,_cor46,_cor47,_cor48}> when 'true' ->
	      %% Line 738
	      {'stop',ChannelId,State}
	  %% Line 740
	  <_cor49,State> when 'true' ->
	      %% Line 741
	      {'ok',State}
	end
'terminate'/2 =
    %% Line 747
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'shutdown',State = {'state',{'ssh_xfer',_cor4,_cor5,Cm,_cor6},_cor7,_cor8,_cor9,_cor10}> when 'true' ->
	      do  %% Line 748
		  apply 'reply_all'/2
		      (State, {'error','closed'})
		  %% Line 749
		  call 'ssh':'close'
		      (Cm)
	  %% Line 751
	  <_X_Reason,State> when 'true' ->
	      %% Line 752
	      apply 'reply_all'/2
		  (State, {'error','closed'})
	end
'call'/3 =
    %% Line 757
    fun (_cor2,_cor1,_cor0) ->
	%% Line 758
	call 'ssh_channel':'call'
	    (_cor2, {{'timeout',_cor0},_cor1}, 'infinity')
'handle_reply'/2 =
    %% Line 760
    fun (_cor1,_cor0) ->
	case <_cor1,( _cor0
		      -| ['reuse_for_context'] )> of
	  <State,#{#<Len>(32,1,'integer',['unsigned'|['big']]),
		   #<Reply>(Len,8,'binary',['unsigned'|['big']]),
		   #<Rest>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 761
	      apply 'do_handle_reply'/3
		  (State, Reply, Rest)
	  %% Line 762
	  <State,Data> when 'true' ->
	      do  primop 'bs_context_to_binary'
		      (Data)
		  %% Line 763
		  case State of
		    <{'state',_cor6,_cor7,_cor8,_cor9,_cor10}> when 'true' ->
			call 'erlang':'setelement'
			    (3, State, Data)
		    ( <_cor11> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	end
'do_handle_reply'/3 =
    %% Line 765
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <State = {'state',Xf,_cor23,_cor24,_cor25,_cor26},%% Line 766
							    #{#<2>(8,1,'integer',['unsigned'|['big']]),
							      #<Version>(32,1,'integer',['unsigned'|['big']]),
							      #<BinExt>('all',8,'binary',['unsigned'|['big']])}#,%% Line 766
														 Rest> when 'true' ->
	      let <Ext> =
		  %% Line 767
		  call 'ssh_xfer':'decode_ext'
		      (BinExt)
	      in  %% Line 768
		  ( case Xf of
		      ( <( {'ssh_xfer',_rec54,_cor27,_cor28,_cor29}
			   -| ['compiler_generated'] )> when 'true' ->
			    do  case _rec54 of
				  %% Line 769
				  <'undefined'> when 'true' ->
				      'ok'
				  %% Line 771
				  <From> when 'true' ->
				      %% Line 772
				      call 'ssh_channel':'reply'
					  (From, 'ok')
				end
				let <_cor8> =
				    %% Line 774
				    call 'erlang':'setelement'
					(3, Xf, Ext)
				in  let <_cor10> =
					%% Line 774
					call 'erlang':'setelement'
					    (2, _cor8, Version)
				    in  let <_cor13> =
					    %% Line 774
					    call 'erlang':'setelement'
						(3, State, Rest)
					in  %% Line 774
					    call 'erlang':'setelement'
						(2, _cor13, _cor10)
			-| ['compiler_generated'] )
		      ( <_cor30> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','ssh_xfer'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 776
	  <State0,Data,Rest> when 'true' ->
	      let <_cor17> =
		  catch
		      %% Line 777
		      ( case State0 of
			  ( <( {'state',_rec58,_cor42,_cor43,_cor44,_cor45}
			       -| ['compiler_generated'] )> when 'true' ->
				call 'ssh_xfer':'xf_reply'
				    (_rec58, Data)
			    -| ['compiler_generated'] )
			  ( <_cor46> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','state'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	      in  %% Line 777
		  case _cor17 of
		    %% Line 778
		    <{'EXIT',_X_Reason}> when 'true' ->
			%% Line 779
			apply 'handle_reply'/2
			    (State0, Rest)
		    %% Line 780
		    <XfReply> when 'true' ->
			let <State> =
			    %% Line 781
			    apply 'handle_req_reply'/2
				(State0, XfReply)
			in  %% Line 782
			    apply 'handle_reply'/2
				(State, Rest)
		  end
	end
'handle_req_reply'/2 =
    %% Line 785
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <State0,XfReply = {_cor17,ReqID,_cor18}> when 'true' ->
	      %% Line 786
	      ( case State0 of
		  ( <( {'state',_cor19,_cor20,_cor21,_rec59,_cor22}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'lists':'keysearch'
				 (ReqID, 1, _rec59) of
			  %% Line 787
			  <'false'> when 'true' ->
			      %% Line 788
			      State0
			  %% Line 789
			  <{'value',{_cor24,Fun}}> when 'true' ->
			      let <List> =
				  %% Line 790
				  call 'lists':'keydelete'
				      (ReqID, 1, _rec59)
			      in  let <_cor9> =
				      %% Line 791
				      call 'erlang':'setelement'
					  (5, State0, List)
				  in  let <_cor12> =
					  catch
					      let <_cor11> =
						  %% Line 792
						  apply 'xreply'/1
						      (XfReply)
					      in  %% Line 792
						  apply Fun
						      (_cor11, _cor9)
				      in  %% Line 792
					  case _cor12 of
					    %% Line 793
					    <{'EXIT',_cor36}> when 'true' ->
						_cor9
					    %% Line 795
					    <State> when 'true' ->
						%% Line 796
						State
					  end
			  ( <_cor14> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor14})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor23> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15})
		  -| [{'function_name',{'handle_req_reply',2}}] )
	    -| ['compiler_generated'] )
	end
'xreply'/1 =
    %% Line 800
    fun (_cor0) ->
	case _cor0 of
	  <{'handle',_cor3,H}> when 'true' ->
	      {'ok',H}
	  %% Line 801
	  <{'data',_cor4,Data}> when 'true' ->
	      {'ok',Data}
	  %% Line 802
	  <{'name',_cor5,Names}> when 'true' ->
	      {'ok',Names}
	  %% Line 803
	  <{'attrs',_cor6,A}> when 'true' ->
	      let <_cor1> =
		  apply 'attr_to_info'/1
		      (A)
	      in  {'ok',_cor1}
	  %% Line 804
	  <{'extended_reply',_cor7,X}> when 'true' ->
	      {'ok',X}
	  %% Line 805
	  <{'status',_cor8,{'ok',_X_Err,_X_Lang,_X_Rep}}> when 'true' ->
	      'ok'
	  %% Line 806
	  <{'status',_cor9,{'eof',_X_Err,_X_Lang,_X_Rep}}> when 'true' ->
	      'eof'
	  %% Line 807
	  <{'status',_cor10,{Stat,_X_Err,_X_Lang,_X_Rep}}> when 'true' ->
	      {'error',Stat}
	  %% Line 808
	  <{Code,_cor11,Reply}> when 'true' ->
	      {Code,Reply}
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'xreply',1}}] )
	    -| ['compiler_generated'] )
	end
'update_request_info'/3 =
    %% Line 810
    fun (_cor2,_cor1,_cor0) ->
	%% Line 811
	( case _cor1 of
	    ( <( {'state',_cor16,_cor17,_cor18,_rec62,_cor19}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <List> =
		      [{_cor2,_cor0}|_rec62]
		  in  let <_cor8> =
			  %% Line 812
			  call 'erlang':'+'
			      (_cor18, 1)
		      in  let <ID> =
			      %% Line 812
			      call 'erlang':'band'
				  (_cor8, 4294967295)
			  in  let <_cor11> =
				  %% Line 813
				  call 'erlang':'setelement'
				      (5, _cor1, List)
			      in  %% Line 813
				  call 'erlang':'setelement'
				      (4, _cor11, ID)
	      -| ['compiler_generated'] )
	    ( <_cor20> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'async_reply'/4 =
    %% Line 815
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <ReqID,Reply,_X_From = {To,_cor8},State> when 'true' ->
	      do  %% Line 816
		  call 'erlang':'!'
		      (To, {'async_reply',ReqID,Reply})
		  %% Line 817
		  State
	  ( <_cor7,_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5,_cor4})
		  -| [{'function_name',{'async_reply',4}}] )
	    -| ['compiler_generated'] )
	end
'sync_reply'/3 =
    %% Line 819
    fun (_cor2,_cor1,_cor0) ->
	do  catch
		%% Line 820
		call 'ssh_channel':'reply'
		    (_cor1, _cor2)
	    _cor0
'open2'/7 =
    %% Line 823
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 824
	( case _cor0 of
	    ( <( {'state',_cor54,_cor55,_cor56,_cor57,_rec65}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor12> =
		      %% Line 825
		      ( case call 'lists':'member'
				 ('binary', _cor3) of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				'true'
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'lists':'member'
				    ('raw', _cor3)
			    -| ['compiler_generated'] )
			  ( <_cor10> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {( 'badarg'
					    -| ['compiler_generated'] ),_cor10}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  in  let <_cor14> =
			  %% Line 825
			  case _cor12 of
			    %% Line 826
			    <'true'> when 'true' ->
				'binary'
			    %% Line 827
			    <'false'> when 'true' ->
				'text'
			    ( <_cor13> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor13})
			      -| ['compiler_generated'] )
			  end
		      in  let <I1> =
			      %% Line 829
			      apply 'add_new_handle'/3
				  (_cor4, _cor14, _rec65)
			  in  let <_cor19> =
				  %% Line 830
				  call 'erlang':'setelement'
				      (6, _cor0, I1)
			      in  %% Line 831
				  ( case _cor19 of
				      ( <( {'state',_cor65,_cor66,_rec67,_cor67,_cor68}
					   -| ['compiler_generated'] )> when 'true' ->
					    do  %% Line 832
						call 'ssh_xfer':'stat'
						    (_cor65, _rec67, _cor5, ['size'])
						%% Line 833
						case _cor2 of
						  %% Line 834
						  <'true'> when 'true' ->
						      let <_cor35> =
							  %% Line 836
							  ( fun (_cor32,_cor31) ->
								case <_cor32,_cor31> of
								  <{'ok',FI},State1> when 'true' ->
								      %% Line 837
								      ( case FI of
									  ( <( {'file_info',_rec69,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86}
									       -| ['compiler_generated'] )> when 'true' ->
										let <_cor29> =
										    %% Line 838
										    case <> of
										      <>
											  when call 'erlang':'is_integer'
												(_rec69) ->
											  %% Line 839
											  apply 'put_size'/3
											      (_cor4, _rec69, State1)
										      %% Line 840
										      <> when 'true' ->
											  %% Line 841
											  State1
										    end
										in  %% Line 843
										    apply 'async_reply'/4
											(_cor6, {'ok',_cor4}, _cor1, _cor29)
									    -| ['compiler_generated'] )
									  ( <_cor87> when 'true' ->
										( call ( 'erlang'
											 -| ['compiler_generated'] ):( 'error'
														       -| ['compiler_generated'] )
										      (( {'badrecord','file_info'}
											 -| ['compiler_generated'] ))
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									end
									-| ['compiler_generated'] )
								  %% Line 844
								  <_cor88,State1> when 'true' ->
								      %% Line 845
								      apply 'async_reply'/4
									  (_cor6, {'ok',_cor4}, _cor1, State1)
								end
							    -| [{'id',{0,0,'-open2/7-fun-0-'}}] )
						      in  %% Line 835
							  apply 'update_request_info'/3
							      (_rec67, _cor19, _cor35)
						  %% Line 847
						  <'false'> when 'true' ->
						      let <_cor45> =
							  %% Line 849
							  ( fun (_cor42,_cor41) ->
								case <_cor42,_cor41> of
								  <{'ok',FI},State1> when 'true' ->
								      %% Line 850
								      ( case FI of
									  ( <( {'file_info',_rec70,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100}
									       -| ['compiler_generated'] )> when 'true' ->
										let <_cor39> =
										    %% Line 851
										    case <> of
										      <>
											  when call 'erlang':'is_integer'
												(_rec70) ->
											  %% Line 852
											  apply 'put_size'/3
											      (_cor4, _rec70, State1)
										      %% Line 853
										      <> when 'true' ->
											  %% Line 854
											  State1
										    end
										in  %% Line 856
										    apply 'sync_reply'/3
											({'ok',_cor4}, _cor1, _cor39)
									    -| ['compiler_generated'] )
									  ( <_cor101> when 'true' ->
										( call ( 'erlang'
											 -| ['compiler_generated'] ):( 'error'
														       -| ['compiler_generated'] )
										      (( {'badrecord','file_info'}
											 -| ['compiler_generated'] ))
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									end
									-| ['compiler_generated'] )
								  %% Line 857
								  <_cor102,State1> when 'true' ->
								      %% Line 858
								      apply 'sync_reply'/3
									  ({'ok',_cor4}, _cor1, State1)
								end
							    -| [{'id',{0,0,'-open2/7-fun-1-'}}] )
						      in  %% Line 848
							  apply 'update_request_info'/3
							      (_rec67, _cor19, _cor45)
						  ( <_cor46> when 'true' ->
							primop 'match_fail'
							    ({'case_clause',_cor46})
						    -| ['compiler_generated'] )
						end
					-| ['compiler_generated'] )
				      ( <_cor69> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','state'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor58> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'reply_all'/2 =
    %% Line 862
    fun (_cor1,_cor0) ->
	%% Line 863
	( case _cor1 of
	    ( <( {'state',_cor12,_cor13,_cor14,_rec71,_cor15}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor7> =
		      %% Line 864
		      ( fun (_cor5) ->
			    case _cor5 of
			      <{_X_ReqID,Fun}> when 'true' ->
				  catch
				      %% Line 865
				      apply Fun
					  (_cor0, _cor1)
			      ( <_cor6> when 'true' ->
				    ( primop 'match_fail'
					  ({'function_clause',_cor6})
				      -| [{'function_name',{'-reply_all/2-fun-0-',1}}] )
				-| ['compiler_generated'] )
			    end
			-| [{'id',{0,0,'-reply_all/2-fun-0-'}}] )
		  in  do  %% Line 864
			  call 'lists':'foreach'
			      (_cor7, _rec71)
			  %% Line 867
			  call 'erlang':'setelement'
			      (5, _cor1, [])
	      -| ['compiler_generated'] )
	    ( <_cor16> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'make_reply'/4 =
    %% Line 869
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <ReqID,'true',From,State> when 'true' ->
	      let <_cor8> =
		  %% Line 872
		  ( fun (_cor5,_cor4) ->
			%% Line 873
			apply 'async_reply'/4
			    (ReqID, _cor5, From, _cor4)
		    -| [{'id',{0,0,'-make_reply/4-fun-0-'}}] )
	      in  let <_cor9> =
		      %% Line 871
		      apply 'update_request_info'/3
			  (ReqID, State, _cor8)
		  in  %% Line 870
		      {'reply',{'async',ReqID},_cor9}
	  %% Line 876
	  <ReqID,'false',From,State> when 'true' ->
	      let <_cor14> =
		  %% Line 879
		  ( fun (_cor11,_cor10) ->
			%% Line 880
			apply 'sync_reply'/3
			    (_cor11, From, _cor10)
		    -| [{'id',{0,0,'-make_reply/4-fun-1-'}}] )
	      in  let <_cor15> =
		      %% Line 878
		      apply 'update_request_info'/3
			  (ReqID, State, _cor14)
		  in  %% Line 877
		      {'noreply',_cor15}
	  ( <_cor19,_cor18,_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17,_cor16})
		  -| [{'function_name',{'make_reply',4}}] )
	    -| ['compiler_generated'] )
	end
'make_reply_post'/5 =
    %% Line 883
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <ReqID,'true',From,State,PostFun> when 'true' ->
	      let <_cor11> =
		  %% Line 886
		  ( fun (_cor8,_cor7) ->
			let <_cor5> =
			    catch
				%% Line 887
				apply PostFun
				    (_cor8, _cor7)
			in  %% Line 887
			    case _cor5 of
			      %% Line 888
			      <{'EXIT',_cor26}> when 'true' ->
				  %% Line 889
				  apply 'async_reply'/4
				      (ReqID, _cor8, From, _cor7)
			      %% Line 890
			      <{Reply1,State2}> when 'true' ->
				  %% Line 891
				  apply 'async_reply'/4
				      (ReqID, Reply1, From, State2)
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor6})
				-| ['compiler_generated'] )
			    end
		    -| [{'id',{0,0,'-make_reply_post/5-fun-0-'}}] )
	      in  let <_cor12> =
		      %% Line 885
		      apply 'update_request_info'/3
			  (ReqID, State, _cor11)
		  in  %% Line 884
		      {'reply',{'async',ReqID},_cor12}
	  %% Line 895
	  <ReqID,'false',From,State,PostFun> when 'true' ->
	      let <_cor19> =
		  %% Line 898
		  ( fun (_cor16,_cor15) ->
			let <_cor13> =
			    catch
				%% Line 899
				apply PostFun
				    (_cor16, _cor15)
			in  %% Line 899
			    case _cor13 of
			      %% Line 900
			      <{'EXIT',_cor27}> when 'true' ->
				  %% Line 901
				  apply 'sync_reply'/3
				      (_cor16, From, _cor15)
			      %% Line 902
			      <{Reply1,State2}> when 'true' ->
				  %% Line 903
				  apply 'sync_reply'/3
				      (Reply1, From, State2)
			      ( <_cor14> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor14})
				-| ['compiler_generated'] )
			    end
		    -| [{'id',{0,0,'-make_reply_post/5-fun-1-'}}] )
	      in  let <_cor20> =
		      %% Line 897
		      apply 'update_request_info'/3
			  (ReqID, State, _cor19)
		  in  %% Line 896
		      {'noreply',_cor20}
	  ( <_cor25,_cor24,_cor23,_cor22,_cor21> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor25,_cor24,_cor23,_cor22,_cor21})
		  -| [{'function_name',{'make_reply_post',5}}] )
	    -| ['compiler_generated'] )
	end
'info_to_attr'/1 =
    %% Line 908
    fun (_cor0) ->
	case _cor0 of
	  <I = {'file_info',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33}> when ( 'true'
																-| ['compiler_generated'] ) ->
	      let <_cor9> =
		  %% Line 914
		  apply 'datetime_to_unix'/1
		      (_cor24)
	      in  let <_cor6> =
		      %% Line 916
		      apply 'datetime_to_unix'/1
			  (_cor26)
		  in  let <_cor3> =
			  %% Line 915
			  apply 'datetime_to_unix'/1
			      (_cor25)
		      in  %% Line 909
			  {'ssh_xfer_attr',_cor22,_cor21,_cor32,_cor33,_cor27,_cor9,'undefined',_cor6,'undefined',_cor3,'undefined','undefined','undefined','undefined'}
	  ( <_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20})
		  -| [{'function_name',{'info_to_attr',1}}] )
	    -| ['compiler_generated'] )
	end
'attr_to_info'/1 =
    %% Line 919
    fun (_cor0) ->
	case _cor0 of
	  <A = {'ssh_xfer_attr',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34}> when ( 'true'
																	   -| ['compiler_generated'] ) ->
	      let <_cor15> =
		  %% Line 924
		  apply 'unix_to_datetime'/1
		      (_cor26)
	      in  let <_cor12> =
		      %% Line 925
		      apply 'unix_to_datetime'/1
			  (_cor30)
		  in  let <_cor9> =
			  %% Line 926
			  apply 'unix_to_datetime'/1
			      (_cor28)
		      in  %% Line 920
			  {'file_info',_cor22,_cor21,%% Line 923
						     'read_write',_cor15,_cor12,_cor9,_cor25,%% Line 928
											     1,%% Line 929
											       0,%% Line 930
												 0,%% Line 931
												   0,_cor23,_cor24}
	  ( <_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20})
		  -| [{'function_name',{'attr_to_info',1}}] )
	    -| ['compiler_generated'] )
	end
'unix_to_datetime'/1 =
    %% Line 945
    fun (_cor0) ->
	case _cor0 of
	  <'undefined'> when 'true' ->
	      %% Line 946
	      'undefined'
	  %% Line 947
	  <UTCSecs> when 'true' ->
	      let <_cor1> =
		  %% Line 949
		  call 'erlang':'+'
		      (UTCSecs, 62167219200)
	      in  let <UTCDateTime> =
		      %% Line 949
		      call 'calendar':'gregorian_seconds_to_datetime'
			  (_cor1)
		  in  %% Line 950
		      call 'erlang':'universaltime_to_localtime'
			  (UTCDateTime)
	end
'datetime_to_unix'/1 =
    %% Line 952
    fun (_cor0) ->
	case _cor0 of
	  <'undefined'> when 'true' ->
	      %% Line 953
	      'undefined'
	  %% Line 954
	  <LocalDateTime> when 'true' ->
	      let <UTCDateTime> =
		  %% Line 955
		  call 'erlang':'localtime_to_universaltime'
		      (LocalDateTime)
	      in  let <_cor2> =
		      %% Line 956
		      call 'calendar':'datetime_to_gregorian_seconds'
			  (UTCDateTime)
		  in  %% Line 956
		      call 'erlang':'-'
			  (_cor2, 62167219200)
	end
'open_mode'/2 =
    %% Line 959
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Vsn,Modes>
	      when call 'erlang':'>='
		    (Vsn,
		     5) ->
	      %% Line 960
	      apply 'open_mode5'/1
		  (Modes)
	  %% Line 961
	  <_X_Vsn,Modes> when 'true' ->
	      %% Line 962
	      apply 'open_mode3'/1
		  (Modes)
	end
'open_mode5'/1 =
    %% Line 964
    fun (_cor0) ->
	let <_cor4> =
	    %% Line 966
	    call 'lists':'member'
		('write', _cor0)
	in  let <_cor3> =
		%% Line 967
		call 'lists':'member'
		    ('read', _cor0)
	    in  let <_cor2> =
		    %% Line 968
		    call 'lists':'member'
			('append', _cor0)
		in  let <Fl,Ac> =
			%% Line 966
			case <_cor4,_cor3,_cor2> of
			  %% Line 969
			  <_cor9,_cor10,'true'> when 'true' ->
			      %% Line 970
			      <['append_data'],['read_attributes'|['append_data'|['write_attributes']]]>
			  %% Line 973
			  <'true','false','false'> when 'true' ->
			      %% Line 974
			      <['create_truncate'],['write_data'|['write_attributes']]>
			  %% Line 976
			  <'true','true',_cor11> when 'true' ->
			      %% Line 977
			      <['open_or_create'],['read_data'|['read_attributes'|['write_data'|['write_attributes']]]]>
			  %% Line 980
			  <'false','true',_cor12> when 'true' ->
			      %% Line 981
			      <['open_existing'],['read_data'|['read_attributes']]>
			  ( <_fol1067,_fol1068,_fol1069> when 'true' ->
				let <_cor5> = {_fol1067,_fol1068,_fol1069}
				in  primop 'match_fail'
					({'case_clause',_cor5})
			    -| ['compiler_generated'] )
			end
		    in  %% Line 984
			{Ac,Fl,{'ssh_xfer_attr','regular','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined'}}
'open_mode3'/1 =
    %% Line 986
    fun (_cor0) ->
	let <_cor4> =
	    %% Line 988
	    call 'lists':'member'
		('write', _cor0)
	in  let <_cor3> =
		%% Line 989
		call 'lists':'member'
		    ('read', _cor0)
	    in  let <_cor2> =
		    %% Line 990
		    call 'lists':'member'
			('append', _cor0)
		in  let <_cor6> =
			%% Line 988
			case <_cor4,_cor3,_cor2> of
			  %% Line 991
			  <_cor9,_cor10,'true'> when 'true' ->
			      %% Line 992
			      ['append']
			  %% Line 993
			  <'true','false','false'> when 'true' ->
			      %% Line 994
			      ['write'|['creat'|['trunc']]]
			  %% Line 995
			  <'true','true',_cor11> when 'true' ->
			      %% Line 996
			      ['read'|['write']]
			  %% Line 997
			  <'false','true',_cor12> when 'true' ->
			      %% Line 998
			      ['read']
			  ( <_fol1071,_fol1072,_fol1073> when 'true' ->
				let <_cor5> = {_fol1071,_fol1072,_fol1073}
				in  primop 'match_fail'
					({'case_clause',_cor5})
			    -| ['compiler_generated'] )
			end
		    in  %% Line 1000
			{[],_cor6,{'ssh_xfer_attr','regular','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined'}}
'new_inf'/0 =
    %% Line 1003
    fun () ->
	call 'dict':'new'
	    ()
'add_new_handle'/3 =
    %% Line 1005
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1006
	call 'dict':'store'
	    (_cor2, {'fileinf','undefined',0,0,_cor1}, _cor0)
'update_size'/3 =
    %% Line 1008
    fun (_cor2,_cor1,_cor0) ->
	let <OldSize> =
	    %% Line 1009
	    apply 'get_size'/2
		(_cor2, _cor0)
	in  %% Line 1010
	    case <> of
	      <>
		  when call 'erlang':'>'
			(_cor1,
			 OldSize) ->
		  %% Line 1011
		  apply 'put_size'/3
		      (_cor2, _cor1, _cor0)
	      %% Line 1012
	      <> when 'true' ->
		  _cor0
	    end
'update_offset'/3 =
    %% Line 1019
    fun (_cor2,_cor1,_cor0) ->
	let <State1> =
	    %% Line 1020
	    apply 'put_offset'/3
		(_cor2, _cor1, _cor0)
	in  %% Line 1021
	    apply 'update_size'/3
		(_cor2, _cor1, State1)
'put_size'/3 =
    %% Line 1024
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1025
	( case _cor0 of
	    ( <( {'state',_cor19,_cor20,_cor21,_cor22,_rec89}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 1026
		  case call 'dict':'find'
			   (_cor2, _rec89) of
		    %% Line 1027
		    <{'ok',FI}> when 'true' ->
			%% Line 1028
			case FI of
			  <{'fileinf',_cor24,_cor25,_cor26,_cor27}> when 'true' ->
			      let <_cor8> =
				  call 'erlang':'setelement'
				      (4, FI, _cor1)
			      in  let <_rec90> =
				      call 'dict':'store'
					  (_cor2, _cor8, _rec89)
				  in  call 'erlang':'setelement'
					  (6, _cor0, _rec90)
			  ( <_cor28> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','fileinf'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
		    %% Line 1029
		    <_cor35> when 'true' ->
			let <_rec93> =
			    %% Line 1030
			    call 'dict':'store'
				(_cor2, {'fileinf','undefined',0,_cor1,'undefined'}, _rec89)
			in  %% Line 1030
			    call 'erlang':'setelement'
				(6, _cor0, _rec93)
		  end
	      -| ['compiler_generated'] )
	    ( <_cor23> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'put_offset'/3 =
    %% Line 1034
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1035
	( case _cor0 of
	    ( <( {'state',_cor19,_cor20,_cor21,_cor22,_rec95}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 1036
		  case call 'dict':'find'
			   (_cor2, _rec95) of
		    %% Line 1037
		    <{'ok',FI}> when 'true' ->
			%% Line 1038
			case FI of
			  <{'fileinf',_cor24,_cor25,_cor26,_cor27}> when 'true' ->
			      let <_cor8> =
				  call 'erlang':'setelement'
				      (3, FI, _cor1)
			      in  let <_rec96> =
				      call 'dict':'store'
					  (_cor2, _cor8, _rec95)
				  in  call 'erlang':'setelement'
					  (6, _cor0, _rec96)
			  ( <_cor28> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','fileinf'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
		    %% Line 1040
		    <_cor35> when 'true' ->
			let <_rec99> =
			    %% Line 1041
			    call 'dict':'store'
				(_cor2, {'fileinf','undefined',_cor1,_cor1,'undefined'}, _rec95)
			in  %% Line 1041
			    call 'erlang':'setelement'
				(6, _cor0, _rec99)
		  end
	      -| ['compiler_generated'] )
	    ( <_cor23> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'get_size'/2 =
    %% Line 1045
    fun (_cor1,_cor0) ->
	%% Line 1046
	( case _cor0 of
	    ( <( {'state',_cor8,_cor9,_cor10,_cor11,_rec101}
		 -| ['compiler_generated'] )> when 'true' ->
		  case call 'dict':'find'
			   (_cor1, _rec101) of
		    %% Line 1047
		    <{'ok',FI}> when 'true' ->
			%% Line 1048
			( case FI of
			    ( <( {'fileinf',_cor13,_cor14,_rec102,_cor15}
				 -| ['compiler_generated'] )> when 'true' ->
				  _rec102
			      -| ['compiler_generated'] )
			    ( <_cor16> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','fileinf'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    %% Line 1049
		    <_cor17> when 'true' ->
			%% Line 1050
			'undefined'
		  end
	      -| ['compiler_generated'] )
	    ( <_cor12> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'get_mode'/2 =
    %% Line 1057
    fun (_cor1,_cor0) ->
	%% Line 1058
	( case _cor0 of
	    ( <( {'state',_cor8,_cor9,_cor10,_cor11,_rec103}
		 -| ['compiler_generated'] )> when 'true' ->
		  case call 'dict':'find'
			   (_cor1, _rec103) of
		    %% Line 1059
		    <{'ok',FI}> when 'true' ->
			%% Line 1060
			( case FI of
			    ( <( {'fileinf',_cor13,_cor14,_cor15,_rec104}
				 -| ['compiler_generated'] )> when 'true' ->
				  _rec104
			      -| ['compiler_generated'] )
			    ( <_cor16> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','fileinf'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    %% Line 1061
		    <_cor17> when 'true' ->
			%% Line 1062
			'undefined'
		  end
	      -| ['compiler_generated'] )
	    ( <_cor12> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'erase_handle'/2 =
    %% Line 1065
    fun (_cor1,_cor0) ->
	%% Line 1066
	( case _cor0 of
	    ( <( {'state',_cor9,_cor10,_cor11,_cor12,_rec105}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <FI> =
		      call 'dict':'erase'
			  (_cor1, _rec105)
		  in  %% Line 1067
		      call 'erlang':'setelement'
			  (6, _cor0, FI)
	      -| ['compiler_generated'] )
	    ( <_cor13> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'lseek_position'/3 =
    %% Line 1072
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1073
	( case _cor0 of
	    ( <( {'state',_cor9,_cor10,_cor11,_cor12,_rec107}
		 -| ['compiler_generated'] )> when 'true' ->
		  case call 'dict':'find'
			   (_cor2, _rec107) of
		    %% Line 1074
		    <{'ok',{'fileinf',_cor14,O,S,_cor15}}> when 'true' ->
			%% Line 1075
			apply 'lseek_pos'/3
			    (_cor1, O, S)
		    %% Line 1076
		    <_cor16> when 'true' ->
			%% Line 1077
			{'error','einval'}
		  end
	      -| ['compiler_generated'] )
	    ( <_cor13> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'lseek_pos'/3 =
    %% Line 1080
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_Pos,'undefined',_cor36> when 'true' ->
	      %% Line 1081
	      {'error','einval'}
	  %% Line 1082
	  <Pos,_X_CurOffset,_X_CurSize>
	      when %% Line 1083
		try
		    ( case <> of
			( <>
			      when call 'erlang':'is_integer'
				    (Pos) ->
			      ( case <> of
				  ( <>
					when call 'erlang':'=<'
					      (0,
					       Pos) ->
					call 'erlang':'<'
					    (Pos, 9223372036854775808)
				    -| ['compiler_generated'] )
				  ( <> when 'true' ->
					'false'
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <> when 'true' ->
			      'false'
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1084
	      {'ok',Pos}
	  %% Line 1085
	  <'bof',_X_CurOffset,_X_CurSize> when 'true' ->
	      %% Line 1086
	      {'ok',0}
	  %% Line 1087
	  <'cur',CurOffset,_X_CurSize> when 'true' ->
	      %% Line 1088
	      {'ok',CurOffset}
	  %% Line 1089
	  <'eof',_X_CurOffset,CurSize> when 'true' ->
	      %% Line 1090
	      {'ok',CurSize}
	  %% Line 1091
	  <{'bof',Offset},_X_CurOffset,_X_CurSize>
	      when %% Line 1092
		try
		    ( case <> of
			( <>
			      when call 'erlang':'is_integer'
				    (Offset) ->
			      ( case <> of
				  ( <>
					when call 'erlang':'=<'
					      (0,
					       Offset) ->
					call 'erlang':'<'
					    (Offset, 9223372036854775808)
				    -| ['compiler_generated'] )
				  ( <> when 'true' ->
					'false'
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <> when 'true' ->
			      'false'
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1093
	      {'ok',Offset}
	  %% Line 1094
	  <{'cur',Offset},CurOffset,_X_CurSize>
	      when %% Line 1095
		try
		    ( case <> of
			( <>
			      when call 'erlang':'is_integer'
				    (Offset) ->
			      ( case <> of
				  ( <>
					when call 'erlang':'=<'
					      (-9223372036854775808,
					       Offset) ->
					%% Line 1096
					call 'erlang':'<'
					    (Offset, 9223372036854775808)
				    -| ['compiler_generated'] )
				  ( <> when 'true' ->
					'false'
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <> when 'true' ->
			      'false'
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <NewOffset> =
		  %% Line 1097
		  call 'erlang':'+'
		      (CurOffset, Offset)
	      in  %% Line 1098
		  case <> of
		    <>
			when call 'erlang':'<'
			      (NewOffset,
			       0) ->
			%% Line 1099
			{'ok',0}
		    %% Line 1100
		    <> when 'true' ->
			%% Line 1101
			{'ok',NewOffset}
		  end
	  %% Line 1103
	  <{'eof',Offset},_X_CurOffset,CurSize>
	      when %% Line 1104
		try
		    ( case <> of
			( <>
			      when call 'erlang':'is_integer'
				    (Offset) ->
			      ( case <> of
				  ( <>
					when call 'erlang':'=<'
					      (-9223372036854775808,
					       Offset) ->
					%% Line 1105
					call 'erlang':'<'
					    (Offset, 9223372036854775808)
				    -| ['compiler_generated'] )
				  ( <> when 'true' ->
					'false'
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
			( <> when 'true' ->
			      'false'
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <NewOffset> =
		  %% Line 1106
		  call 'erlang':'+'
		      (CurSize, Offset)
	      in  %% Line 1107
		  case <> of
		    <>
			when call 'erlang':'<'
			      (NewOffset,
			       0) ->
			%% Line 1108
			{'ok',0}
		    %% Line 1109
		    <> when 'true' ->
			%% Line 1110
			{'ok',NewOffset}
		  end
	  %% Line 1112
	  <_cor37,_cor38,_cor39> when 'true' ->
	      %% Line 1113
	      {'error','einval'}
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ssh_sftp')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ssh_sftp', _cor0)
end