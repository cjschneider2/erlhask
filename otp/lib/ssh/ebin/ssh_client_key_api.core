module 'ssh_client_key_api' ['behaviour_info'/1,
			     'module_info'/0,
			     'module_info'/1]
    attributes [%% Line 25
		'callback' =
		    %% Line 25
		    [{{'is_host_key',4},[{'type',25,'fun',[{'type',25,'product',[{'ann_type',25,[{'var',25,'PublicKey'}|[{'type',25,'union',[{'type',25,'record',[{'atom',25,'RSAPublicKey'}]}|[{'type',25,'tuple',[{'type',25,'integer',[]}|[{'type',25,'record',[{'atom',25,'Dss-Parms'}]}]]}|[{'type',25,'term',[]}]]]}]]}|[{'ann_type',25,[{'var',25,'Host'}|[{'type',25,'string',[]}]]}|[{'ann_type',26,[{'var',26,'Algorithm'}|[{'type',26,'union',[{'atom',26,'ssh-rsa'}|[{'atom',26,'ssh-dss'}|[{'type',26,'atom',[]}]]]}]]}|[{'ann_type',26,[{'var',26,'ConnectOptions'}|[{'remote_type',26,[{'atom',26,'proplists'}|[{'atom',26,'proplist'}|[[]]]]}]]}]]]]}|[{'type',27,'boolean',[]}]]}]}],
		%% Line 29
		'callback' =
		    %% Line 29
		    [{{'user_key',2},[{'type',29,'fun',[{'type',29,'product',[{'ann_type',29,[{'var',29,'Algorithm'}|[{'type',29,'union',[{'atom',29,'ssh-rsa'}|[{'atom',29,'ssh-dss'}|[{'type',29,'atom',[]}]]]}]]}|[{'ann_type',29,[{'var',29,'ConnectOptions'}|[{'remote_type',29,[{'atom',29,'proplists'}|[{'atom',29,'proplist'}|[[]]]]}]]}]]}|[{'type',30,'union',[{'type',30,'tuple',[{'atom',30,'ok'}|[{'ann_type',30,[{'var',30,'PrivateKey'}|[{'type',30,'union',[{'type',30,'record',[{'atom',30,'RSAPrivateKey'}]}|[{'type',30,'record',[{'atom',30,'DSAPrivateKey'}]}|[{'type',30,'term',[]}]]]}]]}]]}|[{'type',30,'tuple',[{'atom',30,'error'}|[{'type',30,'string',[]}]]}]]}]]}]}],
		%% Line 33
		'callback' =
		    %% Line 33
		    [{{'add_host_key',3},[{'type',33,'fun',[{'type',33,'product',[{'ann_type',33,[{'var',33,'Host'}|[{'type',33,'string',[]}]]}|[{'ann_type',33,[{'var',33,'PublicKey'}|[{'type',33,'union',[{'type',33,'record',[{'atom',33,'RSAPublicKey'}]}|[{'type',33,'tuple',[{'type',33,'integer',[]}|[{'type',33,'record',[{'atom',33,'Dss-Parms'}]}]]}|[{'type',33,'term',[]}]]]}]]}|[{'ann_type',34,[{'var',34,'Options'}|[{'type',34,'list',[]}]]}]]]}|[{'type',35,'union',[{'atom',35,'ok'}|[{'type',35,'tuple',[{'atom',35,'error'}|[{'ann_type',35,[{'var',35,'Error'}|[{'type',35,'term',[]}]]}]]}]]}]]}]}]]
'behaviour_info'/1 =
    fun (_cor0) ->
	case _cor0 of
	  <'callbacks'> when 'true' ->
	      [{'is_host_key',4}|[{'user_key',2}|[{'add_host_key',3}]]]
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'behaviour_info',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ssh_client_key_api')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ssh_client_key_api', _cor0)
end