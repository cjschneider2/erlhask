module 'ssh' ['channel_info'/3,
	      'close'/1,
	      'connect'/3,
	      'connect'/4,
	      'connection_info'/2,
	      'daemon'/1,
	      'daemon'/2,
	      'daemon'/3,
	      'module_info'/0,
	      'module_info'/1,
	      'shell'/1,
	      'shell'/2,
	      'shell'/3,
	      'start'/0,
	      'start'/1,
	      'stop'/0,
	      'stop_daemon'/1,
	      'stop_daemon'/2,
	      'stop_listener'/1,
	      'stop_listener'/2]
    attributes [%% Line 64
		'type' =
		    %% Line 64
		    [{{'record','ssh'},[{'record_field',68,{'atom',68,'role'}}|[{'record_field',69,{'atom',69,'peer'}}|[{'record_field',71,{'atom',71,'c_vsn'}}|[{'record_field',72,{'atom',72,'s_vsn'}}|[{'record_field',74,{'atom',74,'c_version'}}|[{'record_field',75,{'atom',75,'s_version'}}|[{'record_field',77,{'atom',77,'c_keyinit'}}|[{'record_field',78,{'atom',78,'s_keyinit'}}|[{'record_field',80,{'atom',80,'algorithms'}}|[{'record_field',82,{'atom',82,'kex'}}|[{'record_field',83,{'atom',83,'hkey'}}|[{'record_field',84,{'atom',84,'key_cb'}}|[{'record_field',85,{'atom',85,'io_cb'}}|[{'record_field',87,{'atom',87,'send_mac'},{'atom',87,'none'}}|[{'record_field',88,{'atom',88,'send_mac_key'}}|[{'record_field',89,{'atom',89,'send_mac_size'},{'integer',89,0}}|[{'record_field',91,{'atom',91,'recv_mac'},{'atom',91,'none'}}|[{'record_field',92,{'atom',92,'recv_mac_key'}}|[{'record_field',93,{'atom',93,'recv_mac_size'},{'integer',93,0}}|[{'record_field',95,{'atom',95,'encrypt'},{'atom',95,'none'}}|[{'record_field',96,{'atom',96,'encrypt_keys'}}|[{'record_field',97,{'atom',97,'encrypt_block_size'},{'integer',97,8}}|[{'record_field',98,{'atom',98,'encrypt_ctx'}}|[{'record_field',100,{'atom',100,'decrypt'},{'atom',100,'none'}}|[{'record_field',101,{'atom',101,'decrypt_keys'}}|[{'record_field',102,{'atom',102,'decrypt_block_size'},{'integer',102,8}}|[{'record_field',103,{'atom',103,'decrypt_ctx'}}|[{'record_field',105,{'atom',105,'compress'},{'atom',105,'none'}}|[{'record_field',106,{'atom',106,'compress_ctx'}}|[{'record_field',107,{'atom',107,'decompress'},{'atom',107,'none'}}|[{'record_field',108,{'atom',108,'decompress_ctx'}}|[{'record_field',110,{'atom',110,'c_lng'},{'atom',110,'none'}}|[{'record_field',111,{'atom',111,'s_lng'},{'atom',111,'none'}}|[{'record_field',113,{'atom',113,'user_ack'},{'atom',113,'true'}}|[{'record_field',114,{'atom',114,'timeout'},{'atom',114,'infinity'}}|[{'record_field',116,{'atom',116,'shared_secret'}}|[{'record_field',117,{'atom',117,'exchanged_hash'}}|[{'record_field',118,{'atom',118,'session_id'}}|[{'record_field',120,{'atom',120,'opts'},{'nil',120}}|[{'record_field',121,{'atom',121,'send_sequence'},{'integer',121,0}}|[{'record_field',122,{'atom',122,'recv_sequence'},{'integer',122,0}}|[{'record_field',123,{'atom',123,'keyex_key'}}|[{'record_field',124,{'atom',124,'keyex_info'}}|[{'record_field',127,{'atom',127,'user'}}|[{'record_field',128,{'atom',128,'service'}}|[{'record_field',129,{'atom',129,'userauth_quiet_mode'}}|[{'record_field',130,{'atom',130,'userauth_supported_methods'}}|[{'record_field',131,{'atom',131,'userauth_methods'}}|[{'record_field',132,{'atom',132,'userauth_preference'}}|[{'record_field',133,{'atom',133,'available_host_keys'}}|[{'record_field',134,{'atom',134,'authenticated'},{'atom',134,'false'}}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','alg'},[{'record_field',139,{'atom',139,'kex'}}|[{'record_field',140,{'atom',140,'hkey'}}|[{'record_field',141,{'atom',141,'send_mac'}}|[{'record_field',142,{'atom',142,'recv_mac'}}|[{'record_field',143,{'atom',143,'encrypt'}}|[{'record_field',144,{'atom',144,'decrypt'}}|[{'record_field',145,{'atom',145,'compress'}}|[{'record_field',146,{'atom',146,'decompress'}}|[{'record_field',147,{'atom',147,'c_lng'}}|[{'record_field',148,{'atom',148,'s_lng'}}]]]]]]]]]],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{{'record','ssh_key'},[{'record_field',153,{'atom',153,'type'}}|[{'record_field',154,{'atom',154,'public'}}|[{'record_field',155,{'atom',155,'private'}}|[{'record_field',156,{'atom',156,'comment'},{'string',156,[]}}]]]],[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','ssh_pty'},[{'record_field',159,{'atom',159,'term'},{'string',159,[]}}|[{'record_field',160,{'atom',160,'width'},{'integer',160,80}}|[{'record_field',161,{'atom',161,'height'},{'integer',161,25}}|[{'record_field',162,{'atom',162,'pixel_width'},{'integer',162,1024}}|[{'record_field',163,{'atom',163,'pixel_height'},{'integer',163,768}}|[{'record_field',164,{'atom',164,'modes'},{'bin',164,[]}}]]]]]],[]}],
		%% Line 24
		'type' =
		    %% Line 24
		    [{'channel_id',{'type',24,'integer',[]},[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{{'record','ssh_msg_global_request'},[{'record_field',57,{'atom',57,'name'}}|[{'record_field',58,{'atom',58,'want_reply'}}|[{'record_field',59,{'atom',59,'data'}}]]],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{{'record','ssh_msg_request_success'},[{'record_field',64,{'atom',64,'data'}}],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{{'record','ssh_msg_request_failure'},[],[]}],
		%% Line 72
		'type' =
		    %% Line 72
		    [{{'record','ssh_msg_channel_open'},[{'record_field',74,{'atom',74,'channel_type'}}|[{'record_field',75,{'atom',75,'sender_channel'}}|[{'record_field',76,{'atom',76,'initial_window_size'}}|[{'record_field',77,{'atom',77,'maximum_packet_size'}}|[{'record_field',78,{'atom',78,'data'}}]]]]],[]}],
		%% Line 81
		'type' =
		    %% Line 81
		    [{{'record','ssh_msg_channel_open_confirmation'},[{'record_field',83,{'atom',83,'recipient_channel'}}|[{'record_field',84,{'atom',84,'sender_channel'}}|[{'record_field',85,{'atom',85,'initial_window_size'}}|[{'record_field',86,{'atom',86,'maximum_packet_size'}}|[{'record_field',87,{'atom',87,'data'}}]]]]],[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{{'record','ssh_msg_channel_open_failure'},[{'record_field',103,{'atom',103,'recipient_channel'}}|[{'record_field',104,{'atom',104,'reason'}}|[{'record_field',105,{'atom',105,'description'}}|[{'record_field',106,{'atom',106,'lang'}}]]]],[]}],
		%% Line 110
		'type' =
		    %% Line 110
		    [{{'record','ssh_msg_channel_window_adjust'},[{'record_field',112,{'atom',112,'recipient_channel'}}|[{'record_field',113,{'atom',113,'bytes_to_add'}}]],[]}],
		%% Line 116
		'type' =
		    %% Line 116
		    [{{'record','ssh_msg_channel_data'},[{'record_field',118,{'atom',118,'recipient_channel'}}|[{'record_field',119,{'atom',119,'data'}}]],[]}],
		%% Line 129
		'type' =
		    %% Line 129
		    [{{'record','ssh_msg_channel_extended_data'},[{'record_field',131,{'atom',131,'recipient_channel'}}|[{'record_field',132,{'atom',132,'data_type_code'}}|[{'record_field',133,{'atom',133,'data'}}]]],[]}],
		%% Line 136
		'type' =
		    %% Line 136
		    [{{'record','ssh_msg_channel_eof'},[{'record_field',138,{'atom',138,'recipient_channel'}}],[]}],
		%% Line 141
		'type' =
		    %% Line 141
		    [{{'record','ssh_msg_channel_close'},[{'record_field',143,{'atom',143,'recipient_channel'}}],[]}],
		%% Line 147
		'type' =
		    %% Line 147
		    [{{'record','ssh_msg_channel_request'},[{'record_field',149,{'atom',149,'recipient_channel'}}|[{'record_field',150,{'atom',150,'request_type'}}|[{'record_field',151,{'atom',151,'want_reply'}}|[{'record_field',152,{'atom',152,'data'}}]]]],[]}],
		%% Line 156
		'type' =
		    %% Line 156
		    [{{'record','ssh_msg_channel_success'},[{'record_field',158,{'atom',158,'recipient_channel'}}],[]}],
		%% Line 162
		'type' =
		    %% Line 162
		    [{{'record','ssh_msg_channel_failure'},[{'record_field',164,{'atom',164,'recipient_channel'}}],[]}],
		%% Line 235
		'type' =
		    %% Line 235
		    [{{'record','channel'},[{'record_field',237,{'atom',237,'type'}}|[{'record_field',238,{'atom',238,'sys'}}|[{'record_field',239,{'atom',239,'user'}}|[{'record_field',240,{'atom',240,'flow_control'}}|[{'record_field',242,{'atom',242,'local_id'}}|[{'record_field',244,{'atom',244,'recv_window_size'}}|[{'record_field',245,{'atom',245,'recv_packet_size'}}|[{'record_field',246,{'atom',246,'recv_close'},{'atom',246,'false'}}|[{'record_field',248,{'atom',248,'remote_id'}}|[{'record_field',249,{'atom',249,'send_window_size'}}|[{'record_field',250,{'atom',250,'send_packet_size'}}|[{'record_field',251,{'atom',251,'sent_close'},{'atom',251,'false'}}|[{'record_field',252,{'atom',252,'send_buf'},{'nil',252}}]]]]]]]]]]]]],[]}],
		%% Line 255
		'type' =
		    %% Line 255
		    [{{'record','connection'},[{'record_field',256,{'atom',256,'requests'},{'nil',256}}|[{'record_field',257,{'atom',257,'channel_cache'}}|[{'record_field',258,{'atom',258,'port_bindings'}}|[{'record_field',259,{'atom',259,'channel_id_seed'}}|[{'record_field',260,{'atom',260,'cli_spec'}}|[{'record_field',261,{'atom',261,'address'}}|[{'record_field',262,{'atom',262,'port'}}|[{'record_field',263,{'atom',263,'options'}}|[{'record_field',264,{'atom',264,'exec'}}|[{'record_field',265,{'atom',265,'system_supervisor'}}|[{'record_field',266,{'atom',266,'sub_system_supervisor'}}|[{'record_field',267,{'atom',267,'connection_supervisor'}}]]]]]]]]]]]],[]}],
		%% Line 11
		'type' =
		    %% Line 11
		    [{{'record','AttributePKCS-7'},[{'record_field',12,{'atom',12,'type'}}|[{'record_field',12,{'atom',12,'values'}}]],[]}],
		%% Line 14
		'type' =
		    %% Line 14
		    [{{'record','AlgorithmIdentifierPKSC-7'},[{'record_field',15,{'atom',15,'algorithm'}}|[{'record_field',15,{'atom',15,'parameters'},{'atom',15,'asn1_NOVALUE'}}]],[]}],
		%% Line 17
		'type' =
		    %% Line 17
		    [{{'record','AlgorithmIdentifierPKCS-10'},[{'record_field',18,{'atom',18,'algorithm'}}|[{'record_field',18,{'atom',18,'parameters'},{'atom',18,'asn1_NOVALUE'}}]],[]}],
		%% Line 20
		'type' =
		    %% Line 20
		    [{{'record','AttributePKCS-10'},[{'record_field',21,{'atom',21,'type'}}|[{'record_field',21,{'atom',21,'values'}}]],[]}],
		%% Line 23
		'type' =
		    %% Line 23
		    [{{'record','SubjectPublicKeyInfo-PKCS-10'},[{'record_field',24,{'atom',24,'algorithm'}}|[{'record_field',24,{'atom',24,'subjectPublicKey'}}]],[]}],
		%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','ECPrivateKey'},[{'record_field',27,{'atom',27,'version'}}|[{'record_field',27,{'atom',27,'privateKey'}}|[{'record_field',27,{'atom',27,'parameters'},{'atom',27,'asn1_NOVALUE'}}|[{'record_field',27,{'atom',27,'publicKey'},{'atom',27,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 29
		'type' =
		    %% Line 29
		    [{{'record','DSAPrivateKey'},[{'record_field',30,{'atom',30,'version'}}|[{'record_field',30,{'atom',30,'p'}}|[{'record_field',30,{'atom',30,'q'}}|[{'record_field',30,{'atom',30,'g'}}|[{'record_field',30,{'atom',30,'y'}}|[{'record_field',30,{'atom',30,'x'}}]]]]]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','DHParameter'},[{'record_field',33,{'atom',33,'prime'}}|[{'record_field',33,{'atom',33,'base'}}|[{'record_field',33,{'atom',33,'privateValueLength'},{'atom',33,'asn1_NOVALUE'}}]]],[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','DigestInfoNull'},[{'record_field',36,{'atom',36,'digestAlgorithm'}}|[{'record_field',36,{'atom',36,'digest'}}]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','DigestInfoPKCS-1'},[{'record_field',39,{'atom',39,'digestAlgorithm'}}|[{'record_field',39,{'atom',39,'digest'}}]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','RSASSA-PSS-params'},[{'record_field',42,{'atom',42,'hashAlgorithm'}}|[{'record_field',42,{'atom',42,'maskGenAlgorithm'}}|[{'record_field',42,{'atom',42,'saltLength'},{'atom',42,'asn1_DEFAULT'}}|[{'record_field',42,{'atom',42,'trailerField'},{'atom',42,'asn1_DEFAULT'}}]]]],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','AlgorithmNull'},[{'record_field',45,{'atom',45,'algorithm'}}|[{'record_field',45,{'atom',45,'parameters'}}]],[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{{'record','Algorithm'},[{'record_field',48,{'atom',48,'algorithm'}}|[{'record_field',48,{'atom',48,'parameters'},{'atom',48,'asn1_NOVALUE'}}]],[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','OtherPrimeInfo'},[{'record_field',51,{'atom',51,'prime'}}|[{'record_field',51,{'atom',51,'exponent'}}|[{'record_field',51,{'atom',51,'coefficient'}}]]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{{'record','RSAPrivateKey'},[{'record_field',54,{'atom',54,'version'}}|[{'record_field',54,{'atom',54,'modulus'}}|[{'record_field',54,{'atom',54,'publicExponent'}}|[{'record_field',54,{'atom',54,'privateExponent'}}|[{'record_field',54,{'atom',54,'prime1'}}|[{'record_field',54,{'atom',54,'prime2'}}|[{'record_field',54,{'atom',54,'exponent1'}}|[{'record_field',54,{'atom',54,'exponent2'}}|[{'record_field',54,{'atom',54,'coefficient'}}|[{'record_field',54,{'atom',54,'otherPrimeInfos'},{'atom',54,'asn1_NOVALUE'}}]]]]]]]]]],[]}],
		%% Line 56
		'type' =
		    %% Line 56
		    [{{'record','RSAPublicKey'},[{'record_field',57,{'atom',57,'modulus'}}|[{'record_field',57,{'atom',57,'publicExponent'}}]],[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{{'record','Curve'},[{'record_field',60,{'atom',60,'a'}}|[{'record_field',60,{'atom',60,'b'}}|[{'record_field',60,{'atom',60,'seed'},{'atom',60,'asn1_NOVALUE'}}]]],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{{'record','ECParameters'},[{'record_field',63,{'atom',63,'version'}}|[{'record_field',63,{'atom',63,'fieldID'}}|[{'record_field',63,{'atom',63,'curve'}}|[{'record_field',63,{'atom',63,'base'}}|[{'record_field',63,{'atom',63,'order'}}|[{'record_field',63,{'atom',63,'cofactor'},{'atom',63,'asn1_NOVALUE'}}]]]]]],[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','Pentanomial'},[{'record_field',66,{'atom',66,'k1'}}|[{'record_field',66,{'atom',66,'k2'}}|[{'record_field',66,{'atom',66,'k3'}}]]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','Characteristic-two'},[{'record_field',69,{'atom',69,'m'}}|[{'record_field',69,{'atom',69,'basis'}}|[{'record_field',69,{'atom',69,'parameters'}}]]],[]}],
		%% Line 71
		'type' =
		    %% Line 71
		    [{{'record','ECDSA-Sig-Value'},[{'record_field',72,{'atom',72,'r'}}|[{'record_field',72,{'atom',72,'s'}}]],[]}],
		%% Line 74
		'type' =
		    %% Line 74
		    [{{'record','FieldID'},[{'record_field',75,{'atom',75,'fieldType'}}|[{'record_field',75,{'atom',75,'parameters'}}]],[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','ValidationParms'},[{'record_field',78,{'atom',78,'seed'}}|[{'record_field',78,{'atom',78,'pgenCounter'}}]],[]}],
		%% Line 80
		'type' =
		    %% Line 80
		    [{{'record','DomainParameters'},[{'record_field',81,{'atom',81,'p'}}|[{'record_field',81,{'atom',81,'g'}}|[{'record_field',81,{'atom',81,'q'}}|[{'record_field',81,{'atom',81,'j'},{'atom',81,'asn1_NOVALUE'}}|[{'record_field',81,{'atom',81,'validationParms'},{'atom',81,'asn1_NOVALUE'}}]]]]],[]}],
		%% Line 83
		'type' =
		    %% Line 83
		    [{{'record','Dss-Sig-Value'},[{'record_field',84,{'atom',84,'r'}}|[{'record_field',84,{'atom',84,'s'}}]],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{{'record','Dss-Parms'},[{'record_field',87,{'atom',87,'p'}}|[{'record_field',87,{'atom',87,'q'}}|[{'record_field',87,{'atom',87,'g'}}]]],[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','ACClearAttrs'},[{'record_field',90,{'atom',90,'acIssuer'}}|[{'record_field',90,{'atom',90,'acSerial'}}|[{'record_field',90,{'atom',90,'attrs'}}]]],[]}],
		%% Line 92
		'type' =
		    %% Line 92
		    [{{'record','AAControls'},[{'record_field',93,{'atom',93,'pathLenConstraint'},{'atom',93,'asn1_NOVALUE'}}|[{'record_field',93,{'atom',93,'permittedAttrs'},{'atom',93,'asn1_NOVALUE'}}|[{'record_field',93,{'atom',93,'excludedAttrs'},{'atom',93,'asn1_NOVALUE'}}|[{'record_field',93,{'atom',93,'permitUnSpecified'},{'atom',93,'asn1_DEFAULT'}}]]]],[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{{'record','SecurityCategory'},[{'record_field',96,{'atom',96,'type'}}|[{'record_field',96,{'atom',96,'value'}}]],[]}],
		%% Line 98
		'type' =
		    %% Line 98
		    [{{'record','Clearance'},[{'record_field',99,{'atom',99,'policyId'}}|[{'record_field',99,{'atom',99,'classList'},{'atom',99,'asn1_DEFAULT'}}|[{'record_field',99,{'atom',99,'securityCategories'},{'atom',99,'asn1_NOVALUE'}}]]],[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{{'record','RoleSyntax'},[{'record_field',102,{'atom',102,'roleAuthority'},{'atom',102,'asn1_NOVALUE'}}|[{'record_field',102,{'atom',102,'roleName'}}]],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{{'record','SvceAuthInfo'},[{'record_field',105,{'atom',105,'service'}}|[{'record_field',105,{'atom',105,'ident'}}|[{'record_field',105,{'atom',105,'authInfo'},{'atom',105,'asn1_NOVALUE'}}]]],[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','IetfAttrSyntax'},[{'record_field',108,{'atom',108,'policyAuthority'},{'atom',108,'asn1_NOVALUE'}}|[{'record_field',108,{'atom',108,'values'}}]],[]}],
		%% Line 110
		'type' =
		    %% Line 110
		    [{{'record','TargetCert'},[{'record_field',111,{'atom',111,'targetCertificate'}}|[{'record_field',111,{'atom',111,'targetName'},{'atom',111,'asn1_NOVALUE'}}|[{'record_field',111,{'atom',111,'certDigestInfo'},{'atom',111,'asn1_NOVALUE'}}]]],[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{{'record','AttCertValidityPeriod'},[{'record_field',114,{'atom',114,'notBeforeTime'}}|[{'record_field',114,{'atom',114,'notAfterTime'}}]],[]}],
		%% Line 116
		'type' =
		    %% Line 116
		    [{{'record','IssuerSerial'},[{'record_field',117,{'atom',117,'issuer'}}|[{'record_field',117,{'atom',117,'serial'}}|[{'record_field',117,{'atom',117,'issuerUID'},{'atom',117,'asn1_NOVALUE'}}]]],[]}],
		%% Line 119
		'type' =
		    %% Line 119
		    [{{'record','V2Form'},[{'record_field',120,{'atom',120,'issuerName'},{'atom',120,'asn1_NOVALUE'}}|[{'record_field',120,{'atom',120,'baseCertificateID'},{'atom',120,'asn1_NOVALUE'}}|[{'record_field',120,{'atom',120,'objectDigestInfo'},{'atom',120,'asn1_NOVALUE'}}]]],[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{{'record','ObjectDigestInfo'},[{'record_field',123,{'atom',123,'digestedObjectType'}}|[{'record_field',123,{'atom',123,'otherObjectTypeID'},{'atom',123,'asn1_NOVALUE'}}|[{'record_field',123,{'atom',123,'digestAlgorithm'}}|[{'record_field',123,{'atom',123,'objectDigest'}}]]]],[]}],
		%% Line 125
		'type' =
		    %% Line 125
		    [{{'record','Holder'},[{'record_field',126,{'atom',126,'baseCertificateID'},{'atom',126,'asn1_NOVALUE'}}|[{'record_field',126,{'atom',126,'entityName'},{'atom',126,'asn1_NOVALUE'}}|[{'record_field',126,{'atom',126,'objectDigestInfo'},{'atom',126,'asn1_NOVALUE'}}]]],[]}],
		%% Line 128
		'type' =
		    %% Line 128
		    [{{'record','AttributeCertificateInfo'},[{'record_field',129,{'atom',129,'version'}}|[{'record_field',129,{'atom',129,'holder'}}|[{'record_field',129,{'atom',129,'issuer'}}|[{'record_field',129,{'atom',129,'signature'}}|[{'record_field',129,{'atom',129,'serialNumber'}}|[{'record_field',129,{'atom',129,'attrCertValidityPeriod'}}|[{'record_field',129,{'atom',129,'attributes'}}|[{'record_field',129,{'atom',129,'issuerUniqueID'},{'atom',129,'asn1_NOVALUE'}}|[{'record_field',129,{'atom',129,'extensions'},{'atom',129,'asn1_NOVALUE'}}]]]]]]]]],[]}],
		%% Line 131
		'type' =
		    %% Line 131
		    [{{'record','AttributeCertificate'},[{'record_field',132,{'atom',132,'acinfo'}}|[{'record_field',132,{'atom',132,'signatureAlgorithm'}}|[{'record_field',132,{'atom',132,'signatureValue'}}]]],[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{{'record','IssuingDistributionPoint'},[{'record_field',135,{'atom',135,'distributionPoint'},{'atom',135,'asn1_NOVALUE'}}|[{'record_field',135,{'atom',135,'onlyContainsUserCerts'},{'atom',135,'asn1_DEFAULT'}}|[{'record_field',135,{'atom',135,'onlyContainsCACerts'},{'atom',135,'asn1_DEFAULT'}}|[{'record_field',135,{'atom',135,'onlySomeReasons'},{'atom',135,'asn1_NOVALUE'}}|[{'record_field',135,{'atom',135,'indirectCRL'},{'atom',135,'asn1_DEFAULT'}}|[{'record_field',135,{'atom',135,'onlyContainsAttributeCerts'},{'atom',135,'asn1_DEFAULT'}}]]]]]],[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','AccessDescription'},[{'record_field',138,{'atom',138,'accessMethod'}}|[{'record_field',138,{'atom',138,'accessLocation'}}]],[]}],
		%% Line 140
		'type' =
		    %% Line 140
		    [{{'record','DistributionPoint'},[{'record_field',141,{'atom',141,'distributionPoint'},{'atom',141,'asn1_NOVALUE'}}|[{'record_field',141,{'atom',141,'reasons'},{'atom',141,'asn1_NOVALUE'}}|[{'record_field',141,{'atom',141,'cRLIssuer'},{'atom',141,'asn1_NOVALUE'}}]]],[]}],
		%% Line 143
		'type' =
		    %% Line 143
		    [{{'record','PolicyConstraints'},[{'record_field',144,{'atom',144,'requireExplicitPolicy'},{'atom',144,'asn1_NOVALUE'}}|[{'record_field',144,{'atom',144,'inhibitPolicyMapping'},{'atom',144,'asn1_NOVALUE'}}]],[]}],
		%% Line 146
		'type' =
		    %% Line 146
		    [{{'record','GeneralSubtree'},[{'record_field',147,{'atom',147,'base'}}|[{'record_field',147,{'atom',147,'minimum'},{'atom',147,'asn1_DEFAULT'}}|[{'record_field',147,{'atom',147,'maximum'},{'atom',147,'asn1_NOVALUE'}}]]],[]}],
		%% Line 149
		'type' =
		    %% Line 149
		    [{{'record','NameConstraints'},[{'record_field',150,{'atom',150,'permittedSubtrees'},{'atom',150,'asn1_NOVALUE'}}|[{'record_field',150,{'atom',150,'excludedSubtrees'},{'atom',150,'asn1_NOVALUE'}}]],[]}],
		%% Line 152
		'type' =
		    %% Line 152
		    [{{'record','BasicConstraints'},[{'record_field',153,{'atom',153,'cA'},{'atom',153,'asn1_DEFAULT'}}|[{'record_field',153,{'atom',153,'pathLenConstraint'},{'atom',153,'asn1_NOVALUE'}}]],[]}],
		%% Line 155
		'type' =
		    %% Line 155
		    [{{'record','EDIPartyName'},[{'record_field',156,{'atom',156,'nameAssigner'},{'atom',156,'asn1_NOVALUE'}}|[{'record_field',156,{'atom',156,'partyName'}}]],[]}],
		%% Line 158
		'type' =
		    %% Line 158
		    [{{'record','AnotherName'},[{'record_field',159,{'atom',159,'type-id'}}|[{'record_field',159,{'atom',159,'value'}}]],[]}],
		%% Line 161
		'type' =
		    %% Line 161
		    [{{'record','PolicyMappings_SEQOF'},[{'record_field',162,{'atom',162,'issuerDomainPolicy'}}|[{'record_field',162,{'atom',162,'subjectDomainPolicy'}}]],[]}],
		%% Line 164
		'type' =
		    %% Line 164
		    [{{'record','NoticeReference'},[{'record_field',165,{'atom',165,'organization'}}|[{'record_field',165,{'atom',165,'noticeNumbers'}}]],[]}],
		%% Line 167
		'type' =
		    %% Line 167
		    [{{'record','UserNotice'},[{'record_field',168,{'atom',168,'noticeRef'},{'atom',168,'asn1_NOVALUE'}}|[{'record_field',168,{'atom',168,'explicitText'},{'atom',168,'asn1_NOVALUE'}}]],[]}],
		%% Line 170
		'type' =
		    %% Line 170
		    [{{'record','PolicyQualifierInfo'},[{'record_field',171,{'atom',171,'policyQualifierId'}}|[{'record_field',171,{'atom',171,'qualifier'}}]],[]}],
		%% Line 173
		'type' =
		    %% Line 173
		    [{{'record','PolicyInformation'},[{'record_field',174,{'atom',174,'policyIdentifier'}}|[{'record_field',174,{'atom',174,'policyQualifiers'},{'atom',174,'asn1_NOVALUE'}}]],[]}],
		%% Line 176
		'type' =
		    %% Line 176
		    [{{'record','PrivateKeyUsagePeriod'},[{'record_field',177,{'atom',177,'notBefore'},{'atom',177,'asn1_NOVALUE'}}|[{'record_field',177,{'atom',177,'notAfter'},{'atom',177,'asn1_NOVALUE'}}]],[]}],
		%% Line 179
		'type' =
		    %% Line 179
		    [{{'record','AuthorityKeyIdentifier'},[{'record_field',180,{'atom',180,'keyIdentifier'},{'atom',180,'asn1_NOVALUE'}}|[{'record_field',180,{'atom',180,'authorityCertIssuer'},{'atom',180,'asn1_NOVALUE'}}|[{'record_field',180,{'atom',180,'authorityCertSerialNumber'},{'atom',180,'asn1_NOVALUE'}}]]],[]}],
		%% Line 182
		'type' =
		    %% Line 182
		    [{{'record','EncryptedData'},[{'record_field',183,{'atom',183,'version'}}|[{'record_field',183,{'atom',183,'encryptedContentInfo'}}]],[]}],
		%% Line 185
		'type' =
		    %% Line 185
		    [{{'record','DigestedData'},[{'record_field',186,{'atom',186,'version'}}|[{'record_field',186,{'atom',186,'digestAlgorithm'}}|[{'record_field',186,{'atom',186,'contentInfo'}}|[{'record_field',186,{'atom',186,'digest'}}]]]],[]}],
		%% Line 188
		'type' =
		    %% Line 188
		    [{{'record','SignedAndEnvelopedData'},[{'record_field',189,{'atom',189,'version'}}|[{'record_field',189,{'atom',189,'recipientInfos'}}|[{'record_field',189,{'atom',189,'digestAlgorithms'}}|[{'record_field',189,{'atom',189,'encryptedContentInfo'}}|[{'record_field',189,{'atom',189,'certificates'},{'atom',189,'asn1_NOVALUE'}}|[{'record_field',189,{'atom',189,'crls'},{'atom',189,'asn1_NOVALUE'}}|[{'record_field',189,{'atom',189,'signerInfos'}}]]]]]]],[]}],
		%% Line 191
		'type' =
		    %% Line 191
		    [{{'record','RecipientInfo'},[{'record_field',192,{'atom',192,'version'}}|[{'record_field',192,{'atom',192,'issuerAndSerialNumber'}}|[{'record_field',192,{'atom',192,'keyEncryptionAlgorithm'}}|[{'record_field',192,{'atom',192,'encryptedKey'}}]]]],[]}],
		%% Line 194
		'type' =
		    %% Line 194
		    [{{'record','EncryptedContentInfo'},[{'record_field',195,{'atom',195,'contentType'}}|[{'record_field',195,{'atom',195,'contentEncryptionAlgorithm'}}|[{'record_field',195,{'atom',195,'encryptedContent'},{'atom',195,'asn1_NOVALUE'}}]]],[]}],
		%% Line 197
		'type' =
		    %% Line 197
		    [{{'record','EnvelopedData'},[{'record_field',198,{'atom',198,'version'}}|[{'record_field',198,{'atom',198,'recipientInfos'}}|[{'record_field',198,{'atom',198,'encryptedContentInfo'}}]]],[]}],
		%% Line 200
		'type' =
		    %% Line 200
		    [{{'record','DigestInfoPKCS-7'},[{'record_field',201,{'atom',201,'digestAlgorithm'}}|[{'record_field',201,{'atom',201,'digest'}}]],[]}],
		%% Line 203
		'type' =
		    %% Line 203
		    [{{'record','SignerInfo'},[{'record_field',204,{'atom',204,'version'}}|[{'record_field',204,{'atom',204,'issuerAndSerialNumber'}}|[{'record_field',204,{'atom',204,'digestAlgorithm'}}|[{'record_field',204,{'atom',204,'authenticatedAttributes'},{'atom',204,'asn1_NOVALUE'}}|[{'record_field',204,{'atom',204,'digestEncryptionAlgorithm'}}|[{'record_field',204,{'atom',204,'encryptedDigest'}}|[{'record_field',204,{'atom',204,'unauthenticatedAttributes'},{'atom',204,'asn1_NOVALUE'}}]]]]]]],[]}],
		%% Line 206
		'type' =
		    %% Line 206
		    [{{'record','SignerInfo_unauthenticatedAttributes_uaSet_SETOF'},[{'record_field',207,{'atom',207,'type'}}|[{'record_field',207,{'atom',207,'values'}}]],[]}],
		%% Line 209
		'type' =
		    %% Line 209
		    [{{'record','SignerInfo_unauthenticatedAttributes_uaSequence_SEQOF'},[{'record_field',210,{'atom',210,'type'}}|[{'record_field',210,{'atom',210,'values'}}]],[]}],
		%% Line 212
		'type' =
		    %% Line 212
		    [{{'record','SignedData'},[{'record_field',213,{'atom',213,'version'}}|[{'record_field',213,{'atom',213,'digestAlgorithms'}}|[{'record_field',213,{'atom',213,'contentInfo'}}|[{'record_field',213,{'atom',213,'certificates'},{'atom',213,'asn1_NOVALUE'}}|[{'record_field',213,{'atom',213,'crls'},{'atom',213,'asn1_NOVALUE'}}|[{'record_field',213,{'atom',213,'signerInfos'}}]]]]]],[]}],
		%% Line 215
		'type' =
		    %% Line 215
		    [{{'record','ContentInfo'},[{'record_field',216,{'atom',216,'contentType'}}|[{'record_field',216,{'atom',216,'content'},{'atom',216,'asn1_NOVALUE'}}]],[]}],
		%% Line 218
		'type' =
		    %% Line 218
		    [{{'record','KeyEncryptionAlgorithmIdentifier'},[{'record_field',219,{'atom',219,'algorithm'}}|[{'record_field',219,{'atom',219,'parameters'},{'atom',219,'asn1_NOVALUE'}}]],[]}],
		%% Line 221
		'type' =
		    %% Line 221
		    [{{'record','IssuerAndSerialNumber'},[{'record_field',222,{'atom',222,'issuer'}}|[{'record_field',222,{'atom',222,'serialNumber'}}]],[]}],
		%% Line 224
		'type' =
		    %% Line 224
		    [{{'record','DigestEncryptionAlgorithmIdentifier'},[{'record_field',225,{'atom',225,'algorithm'}}|[{'record_field',225,{'atom',225,'parameters'},{'atom',225,'asn1_NOVALUE'}}]],[]}],
		%% Line 227
		'type' =
		    %% Line 227
		    [{{'record','DigestAlgorithmIdentifier'},[{'record_field',228,{'atom',228,'algorithm'}}|[{'record_field',228,{'atom',228,'parameters'},{'atom',228,'asn1_NOVALUE'}}]],[]}],
		%% Line 230
		'type' =
		    %% Line 230
		    [{{'record','ContentEncryptionAlgorithmIdentifier'},[{'record_field',231,{'atom',231,'algorithm'}}|[{'record_field',231,{'atom',231,'parameters'},{'atom',231,'asn1_NOVALUE'}}]],[]}],
		%% Line 233
		'type' =
		    %% Line 233
		    [{{'record','SignerInfoAuthenticatedAttributes_aaSet_SETOF'},[{'record_field',234,{'atom',234,'type'}}|[{'record_field',234,{'atom',234,'values'}}]],[]}],
		%% Line 236
		'type' =
		    %% Line 236
		    [{{'record','SignerInfoAuthenticatedAttributes_aaSequence_SEQOF'},[{'record_field',237,{'atom',237,'type'}}|[{'record_field',237,{'atom',237,'values'}}]],[]}],
		%% Line 239
		'type' =
		    %% Line 239
		    [{{'record','CertificationRequest'},[{'record_field',240,{'atom',240,'certificationRequestInfo'}}|[{'record_field',240,{'atom',240,'signatureAlgorithm'}}|[{'record_field',240,{'atom',240,'signature'}}]]],[]}],
		%% Line 242
		'type' =
		    %% Line 242
		    [{{'record','CertificationRequest_signatureAlgorithm'},[{'record_field',243,{'atom',243,'algorithm'}}|[{'record_field',243,{'atom',243,'parameters'},{'atom',243,'asn1_NOVALUE'}}]],[]}],
		%% Line 245
		'type' =
		    %% Line 245
		    [{{'record','CertificationRequestInfo'},[{'record_field',246,{'atom',246,'version'}}|[{'record_field',246,{'atom',246,'subject'}}|[{'record_field',246,{'atom',246,'subjectPKInfo'}}|[{'record_field',246,{'atom',246,'attributes'}}]]]],[]}],
		%% Line 248
		'type' =
		    %% Line 248
		    [{{'record','CertificationRequestInfo_subjectPKInfo'},[{'record_field',249,{'atom',249,'algorithm'}}|[{'record_field',249,{'atom',249,'subjectPublicKey'}}]],[]}],
		%% Line 251
		'type' =
		    %% Line 251
		    [{{'record','CertificationRequestInfo_subjectPKInfo_algorithm'},[{'record_field',252,{'atom',252,'algorithm'}}|[{'record_field',252,{'atom',252,'parameters'},{'atom',252,'asn1_NOVALUE'}}]],[]}],
		%% Line 254
		'type' =
		    %% Line 254
		    [{{'record','CertificationRequestInfo_attributes_SETOF'},[{'record_field',255,{'atom',255,'type'}}|[{'record_field',255,{'atom',255,'values'}}]],[]}],
		%% Line 257
		'type' =
		    %% Line 257
		    [{{'record','TeletexDomainDefinedAttribute'},[{'record_field',258,{'atom',258,'type'}}|[{'record_field',258,{'atom',258,'value'}}]],[]}],
		%% Line 260
		'type' =
		    %% Line 260
		    [{{'record','PresentationAddress'},[{'record_field',261,{'atom',261,'pSelector'},{'atom',261,'asn1_NOVALUE'}}|[{'record_field',261,{'atom',261,'sSelector'},{'atom',261,'asn1_NOVALUE'}}|[{'record_field',261,{'atom',261,'tSelector'},{'atom',261,'asn1_NOVALUE'}}|[{'record_field',261,{'atom',261,'nAddresses'}}]]]],[]}],
		%% Line 263
		'type' =
		    %% Line 263
		    [{{'record','ExtendedNetworkAddress_e163-4-address'},[{'record_field',264,{'atom',264,'number'}}|[{'record_field',264,{'atom',264,'sub-address'},{'atom',264,'asn1_NOVALUE'}}]],[]}],
		%% Line 266
		'type' =
		    %% Line 266
		    [{{'record','PDSParameter'},[{'record_field',267,{'atom',267,'printable-string'},{'atom',267,'asn1_NOVALUE'}}|[{'record_field',267,{'atom',267,'teletex-string'},{'atom',267,'asn1_NOVALUE'}}]],[]}],
		%% Line 269
		'type' =
		    %% Line 269
		    [{{'record','UnformattedPostalAddress'},[{'record_field',270,{'atom',270,'printable-address'},{'atom',270,'asn1_NOVALUE'}}|[{'record_field',270,{'atom',270,'teletex-string'},{'atom',270,'asn1_NOVALUE'}}]],[]}],
		%% Line 272
		'type' =
		    %% Line 272
		    [{{'record','TeletexPersonalName'},[{'record_field',273,{'atom',273,'surname'}}|[{'record_field',273,{'atom',273,'given-name'},{'atom',273,'asn1_NOVALUE'}}|[{'record_field',273,{'atom',273,'initials'},{'atom',273,'asn1_NOVALUE'}}|[{'record_field',273,{'atom',273,'generation-qualifier'},{'atom',273,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 275
		'type' =
		    %% Line 275
		    [{{'record','ExtensionAttribute'},[{'record_field',276,{'atom',276,'extension-attribute-type'}}|[{'record_field',276,{'atom',276,'extension-attribute-value'}}]],[]}],
		%% Line 278
		'type' =
		    %% Line 278
		    [{{'record','BuiltInDomainDefinedAttribute'},[{'record_field',279,{'atom',279,'type'}}|[{'record_field',279,{'atom',279,'value'}}]],[]}],
		%% Line 281
		'type' =
		    %% Line 281
		    [{{'record','PersonalName'},[{'record_field',282,{'atom',282,'surname'}}|[{'record_field',282,{'atom',282,'given-name'},{'atom',282,'asn1_NOVALUE'}}|[{'record_field',282,{'atom',282,'initials'},{'atom',282,'asn1_NOVALUE'}}|[{'record_field',282,{'atom',282,'generation-qualifier'},{'atom',282,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 284
		'type' =
		    %% Line 284
		    [{{'record','BuiltInStandardAttributes'},[{'record_field',285,{'atom',285,'country-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'administration-domain-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'network-address'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'terminal-identifier'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'private-domain-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'organization-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'numeric-user-identifier'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'personal-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'organizational-unit-names'},{'atom',285,'asn1_NOVALUE'}}]]]]]]]]],[]}],
		%% Line 287
		'type' =
		    %% Line 287
		    [{{'record','ORAddress'},[{'record_field',288,{'atom',288,'built-in-standard-attributes'}}|[{'record_field',288,{'atom',288,'built-in-domain-defined-attributes'},{'atom',288,'asn1_NOVALUE'}}|[{'record_field',288,{'atom',288,'extension-attributes'},{'atom',288,'asn1_NOVALUE'}}]]],[]}],
		%% Line 290
		'type' =
		    %% Line 290
		    [{{'record','AlgorithmIdentifier'},[{'record_field',291,{'atom',291,'algorithm'}}|[{'record_field',291,{'atom',291,'parameters'},{'atom',291,'asn1_NOVALUE'}}]],[]}],
		%% Line 293
		'type' =
		    %% Line 293
		    [{{'record','TBSCertList'},[{'record_field',294,{'atom',294,'version'},{'atom',294,'asn1_NOVALUE'}}|[{'record_field',294,{'atom',294,'signature'}}|[{'record_field',294,{'atom',294,'issuer'}}|[{'record_field',294,{'atom',294,'thisUpdate'}}|[{'record_field',294,{'atom',294,'nextUpdate'},{'atom',294,'asn1_NOVALUE'}}|[{'record_field',294,{'atom',294,'revokedCertificates'},{'atom',294,'asn1_NOVALUE'}}|[{'record_field',294,{'atom',294,'crlExtensions'},{'atom',294,'asn1_NOVALUE'}}]]]]]]],[]}],
		%% Line 296
		'type' =
		    %% Line 296
		    [{{'record','TBSCertList_revokedCertificates_SEQOF'},[{'record_field',297,{'atom',297,'userCertificate'}}|[{'record_field',297,{'atom',297,'revocationDate'}}|[{'record_field',297,{'atom',297,'crlEntryExtensions'},{'atom',297,'asn1_NOVALUE'}}]]],[]}],
		%% Line 299
		'type' =
		    %% Line 299
		    [{{'record','CertificateList'},[{'record_field',300,{'atom',300,'tbsCertList'}}|[{'record_field',300,{'atom',300,'signatureAlgorithm'}}|[{'record_field',300,{'atom',300,'signature'}}]]],[]}],
		%% Line 302
		'type' =
		    %% Line 302
		    [{{'record','Extension'},[{'record_field',303,{'atom',303,'extnID'}}|[{'record_field',303,{'atom',303,'critical'},{'atom',303,'asn1_DEFAULT'}}|[{'record_field',303,{'atom',303,'extnValue'}}]]],[]}],
		%% Line 305
		'type' =
		    %% Line 305
		    [{{'record','SubjectPublicKeyInfo'},[{'record_field',306,{'atom',306,'algorithm'}}|[{'record_field',306,{'atom',306,'subjectPublicKey'}}]],[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{{'record','Validity'},[{'record_field',309,{'atom',309,'notBefore'}}|[{'record_field',309,{'atom',309,'notAfter'}}]],[]}],
		%% Line 311
		'type' =
		    %% Line 311
		    [{{'record','TBSCertificate'},[{'record_field',312,{'atom',312,'version'},{'atom',312,'asn1_DEFAULT'}}|[{'record_field',312,{'atom',312,'serialNumber'}}|[{'record_field',312,{'atom',312,'signature'}}|[{'record_field',312,{'atom',312,'issuer'}}|[{'record_field',312,{'atom',312,'validity'}}|[{'record_field',312,{'atom',312,'subject'}}|[{'record_field',312,{'atom',312,'subjectPublicKeyInfo'}}|[{'record_field',312,{'atom',312,'issuerUniqueID'},{'atom',312,'asn1_NOVALUE'}}|[{'record_field',312,{'atom',312,'subjectUniqueID'},{'atom',312,'asn1_NOVALUE'}}|[{'record_field',312,{'atom',312,'extensions'},{'atom',312,'asn1_NOVALUE'}}]]]]]]]]]],[]}],
		%% Line 314
		'type' =
		    %% Line 314
		    [{{'record','Certificate'},[{'record_field',315,{'atom',315,'tbsCertificate'}}|[{'record_field',315,{'atom',315,'signatureAlgorithm'}}|[{'record_field',315,{'atom',315,'signature'}}]]],[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{{'record','AttributeTypeAndValue'},[{'record_field',318,{'atom',318,'type'}}|[{'record_field',318,{'atom',318,'value'}}]],[]}],
		%% Line 320
		'type' =
		    %% Line 320
		    [{{'record','Attribute'},[{'record_field',321,{'atom',321,'type'}}|[{'record_field',321,{'atom',321,'values'}}]],[]}],
		%% Line 323
		'type' =
		    %% Line 323
		    [{{'record','Extension-Any'},[{'record_field',324,{'atom',324,'extnID'}}|[{'record_field',324,{'atom',324,'critical'},{'atom',324,'asn1_DEFAULT'}}|[{'record_field',324,{'atom',324,'extnValue'}}]]],[]}],
		%% Line 326
		'type' =
		    %% Line 326
		    [{{'record','OTPExtension'},[{'record_field',327,{'atom',327,'extnID'}}|[{'record_field',327,{'atom',327,'critical'},{'atom',327,'asn1_DEFAULT'}}|[{'record_field',327,{'atom',327,'extnValue'}}]]],[]}],
		%% Line 329
		'type' =
		    %% Line 329
		    [{{'record','OTPExtensionAttribute'},[{'record_field',330,{'atom',330,'extensionAttributeType'}}|[{'record_field',330,{'atom',330,'extensionAttributeValue'}}]],[]}],
		%% Line 332
		'type' =
		    %% Line 332
		    [{{'record','OTPCharacteristic-two'},[{'record_field',333,{'atom',333,'m'}}|[{'record_field',333,{'atom',333,'basis'}}|[{'record_field',333,{'atom',333,'parameters'}}]]],[]}],
		%% Line 335
		'type' =
		    %% Line 335
		    [{{'record','OTPFieldID'},[{'record_field',336,{'atom',336,'fieldType'}}|[{'record_field',336,{'atom',336,'parameters'}}]],[]}],
		%% Line 338
		'type' =
		    %% Line 338
		    [{{'record','PublicKeyAlgorithm'},[{'record_field',339,{'atom',339,'algorithm'}}|[{'record_field',339,{'atom',339,'parameters'},{'atom',339,'asn1_NOVALUE'}}]],[]}],
		%% Line 341
		'type' =
		    %% Line 341
		    [{{'record','SignatureAlgorithm-Any'},[{'record_field',342,{'atom',342,'algorithm'}}|[{'record_field',342,{'atom',342,'parameters'},{'atom',342,'asn1_NOVALUE'}}]],[]}],
		%% Line 344
		'type' =
		    %% Line 344
		    [{{'record','SignatureAlgorithm'},[{'record_field',345,{'atom',345,'algorithm'}}|[{'record_field',345,{'atom',345,'parameters'},{'atom',345,'asn1_NOVALUE'}}]],[]}],
		%% Line 347
		'type' =
		    %% Line 347
		    [{{'record','OTPSubjectPublicKeyInfo-Any'},[{'record_field',348,{'atom',348,'algorithm'}}|[{'record_field',348,{'atom',348,'subjectPublicKey'}}]],[]}],
		%% Line 350
		'type' =
		    %% Line 350
		    [{{'record','OTPSubjectPublicKeyInfo'},[{'record_field',351,{'atom',351,'algorithm'}}|[{'record_field',351,{'atom',351,'subjectPublicKey'}}]],[]}],
		%% Line 353
		'type' =
		    %% Line 353
		    [{{'record','OTPOLDSubjectPublicKeyInfo'},[{'record_field',354,{'atom',354,'algorithm'}}|[{'record_field',354,{'atom',354,'subjectPublicKey'}}]],[]}],
		%% Line 356
		'type' =
		    %% Line 356
		    [{{'record','OTPOLDSubjectPublicKeyInfo_algorithm'},[{'record_field',357,{'atom',357,'algo'}}|[{'record_field',357,{'atom',357,'parameters'},{'atom',357,'asn1_NOVALUE'}}]],[]}],
		%% Line 359
		'type' =
		    %% Line 359
		    [{{'record','OTPAttributeTypeAndValue'},[{'record_field',360,{'atom',360,'type'}}|[{'record_field',360,{'atom',360,'value'}}]],[]}],
		%% Line 362
		'type' =
		    %% Line 362
		    [{{'record','OTPTBSCertificate'},[{'record_field',363,{'atom',363,'version'},{'atom',363,'asn1_DEFAULT'}}|[{'record_field',363,{'atom',363,'serialNumber'}}|[{'record_field',363,{'atom',363,'signature'}}|[{'record_field',363,{'atom',363,'issuer'}}|[{'record_field',363,{'atom',363,'validity'}}|[{'record_field',363,{'atom',363,'subject'}}|[{'record_field',363,{'atom',363,'subjectPublicKeyInfo'}}|[{'record_field',363,{'atom',363,'issuerUniqueID'},{'atom',363,'asn1_NOVALUE'}}|[{'record_field',363,{'atom',363,'subjectUniqueID'},{'atom',363,'asn1_NOVALUE'}}|[{'record_field',363,{'atom',363,'extensions'},{'atom',363,'asn1_NOVALUE'}}]]]]]]]]]],[]}],
		%% Line 365
		'type' =
		    %% Line 365
		    [{{'record','OTPCertificate'},[{'record_field',366,{'atom',366,'tbsCertificate'}}|[{'record_field',366,{'atom',366,'signatureAlgorithm'}}|[{'record_field',366,{'atom',366,'signature'}}]]],[]}],
		%% Line 11
		'type' =
		    %% Line 11
		    [{{'record','AlgorithmIdentifierPKCS5v2-0'},[{'record_field',12,{'atom',12,'algorithm'}}|[{'record_field',12,{'atom',12,'parameters'},{'atom',12,'asn1_NOVALUE'}}]],[]}],
		%% Line 14
		'type' =
		    %% Line 14
		    [{{'record','PKAttribute'},[{'record_field',15,{'atom',15,'type'}}|[{'record_field',15,{'atom',15,'values'}}|[{'record_field',15,{'atom',15,'valuesWithContext'},{'atom',15,'asn1_NOVALUE'}}]]],[]}],
		%% Line 17
		'type' =
		    %% Line 17
		    [{{'record','PKAttribute_valuesWithContext_SETOF'},[{'record_field',18,{'atom',18,'value'}}|[{'record_field',18,{'atom',18,'contextList'}}]],[]}],
		%% Line 20
		'type' =
		    %% Line 20
		    [{{'record','AlgorithmIdentifierPKCS-8'},[{'record_field',21,{'atom',21,'algorithm'}}|[{'record_field',21,{'atom',21,'parameters'},{'atom',21,'asn1_NOVALUE'}}]],[]}],
		%% Line 23
		'type' =
		    %% Line 23
		    [{{'record','RC5-CBC-Parameters'},[{'record_field',24,{'atom',24,'version'}}|[{'record_field',24,{'atom',24,'rounds'}}|[{'record_field',24,{'atom',24,'blockSizeInBits'}}|[{'record_field',24,{'atom',24,'iv'},{'atom',24,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','RC2-CBC-Parameter'},[{'record_field',27,{'atom',27,'rc2ParameterVersion'},{'atom',27,'asn1_NOVALUE'}}|[{'record_field',27,{'atom',27,'iv'}}]],[]}],
		%% Line 29
		'type' =
		    %% Line 29
		    [{{'record','PBMAC1-params'},[{'record_field',30,{'atom',30,'keyDerivationFunc'}}|[{'record_field',30,{'atom',30,'messageAuthScheme'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','PBMAC1-params_keyDerivationFunc'},[{'record_field',33,{'atom',33,'algorithm'}}|[{'record_field',33,{'atom',33,'parameters'},{'atom',33,'asn1_NOVALUE'}}]],[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','PBMAC1-params_messageAuthScheme'},[{'record_field',36,{'atom',36,'algorithm'}}|[{'record_field',36,{'atom',36,'parameters'},{'atom',36,'asn1_NOVALUE'}}]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','PBES2-params'},[{'record_field',39,{'atom',39,'keyDerivationFunc'}}|[{'record_field',39,{'atom',39,'encryptionScheme'}}]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','PBES2-params_keyDerivationFunc'},[{'record_field',42,{'atom',42,'algorithm'}}|[{'record_field',42,{'atom',42,'parameters'},{'atom',42,'asn1_NOVALUE'}}]],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','PBES2-params_encryptionScheme'},[{'record_field',45,{'atom',45,'algorithm'}}|[{'record_field',45,{'atom',45,'parameters'},{'atom',45,'asn1_NOVALUE'}}]],[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{{'record','PBEParameter'},[{'record_field',48,{'atom',48,'salt'}}|[{'record_field',48,{'atom',48,'iterationCount'}}]],[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','PBKDF2-params'},[{'record_field',51,{'atom',51,'salt'}}|[{'record_field',51,{'atom',51,'iterationCount'}}|[{'record_field',51,{'atom',51,'keyLength'},{'atom',51,'asn1_NOVALUE'}}|[{'record_field',51,{'atom',51,'prf'},{'atom',51,'asn1_DEFAULT'}}]]]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{{'record','PBKDF2-params_salt_otherSource'},[{'record_field',54,{'atom',54,'algorithm'}}|[{'record_field',54,{'atom',54,'parameters'},{'atom',54,'asn1_NOVALUE'}}]],[]}],
		%% Line 56
		'type' =
		    %% Line 56
		    [{{'record','PBKDF2-params_prf'},[{'record_field',57,{'atom',57,'algorithm'}}|[{'record_field',57,{'atom',57,'parameters'},{'atom',57,'asn1_NOVALUE'}}]],[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{{'record','Context'},[{'record_field',60,{'atom',60,'contextType'}}|[{'record_field',60,{'atom',60,'contextValues'}}|[{'record_field',60,{'atom',60,'fallback'},{'atom',60,'asn1_DEFAULT'}}]]],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{{'record','EncryptedPrivateKeyInfo'},[{'record_field',63,{'atom',63,'encryptionAlgorithm'}}|[{'record_field',63,{'atom',63,'encryptedData'}}]],[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','EncryptedPrivateKeyInfo_encryptionAlgorithm'},[{'record_field',66,{'atom',66,'algorithm'}}|[{'record_field',66,{'atom',66,'parameters'},{'atom',66,'asn1_NOVALUE'}}]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','Attributes_SETOF'},[{'record_field',69,{'atom',69,'type'}}|[{'record_field',69,{'atom',69,'values'}}|[{'record_field',69,{'atom',69,'valuesWithContext'},{'atom',69,'asn1_NOVALUE'}}]]],[]}],
		%% Line 71
		'type' =
		    %% Line 71
		    [{{'record','Attributes_SETOF_valuesWithContext_SETOF'},[{'record_field',72,{'atom',72,'value'}}|[{'record_field',72,{'atom',72,'contextList'}}]],[]}],
		%% Line 74
		'type' =
		    %% Line 74
		    [{{'record','PrivateKeyInfo'},[{'record_field',75,{'atom',75,'version'}}|[{'record_field',75,{'atom',75,'privateKeyAlgorithm'}}|[{'record_field',75,{'atom',75,'privateKey'}}|[{'record_field',75,{'atom',75,'attributes'},{'atom',75,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','PrivateKeyInfo_privateKeyAlgorithm'},[{'record_field',78,{'atom',78,'algorithm'}}|[{'record_field',78,{'atom',78,'parameters'},{'atom',78,'asn1_NOVALUE'}}]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','SubjectPublicKeyInfoAlgorithm'},[{'record_field',29,{'atom',29,'algorithm'}}|[{'record_field',30,{'atom',30,'parameters'},{'atom',30,'asn1_NOVALUE'}}]],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','path_validation_state'},[{'record_field',44,{'atom',44,'valid_policy_tree'}}|[{'record_field',45,{'atom',45,'explicit_policy'}}|[{'record_field',46,{'atom',46,'inhibit_any_policy'}}|[{'record_field',47,{'atom',47,'policy_mapping'}}|[{'record_field',48,{'atom',48,'cert_num'}}|[{'record_field',49,{'atom',49,'last_cert'},{'atom',49,'false'}}|[{'record_field',50,{'atom',50,'permitted_subtrees'},{'atom',50,'no_constraints'}}|[{'record_field',51,{'atom',51,'excluded_subtrees'},{'nil',51}}|[{'record_field',52,{'atom',52,'working_public_key_algorithm'}}|[{'record_field',53,{'atom',53,'working_public_key'}}|[{'record_field',54,{'atom',54,'working_public_key_parameters'}}|[{'record_field',55,{'atom',55,'working_issuer_name'}}|[{'record_field',56,{'atom',56,'max_path_length'}}|[{'record_field',57,{'atom',57,'verify_fun'}}|[{'record_field',58,{'atom',58,'user_state'}}]]]]]]]]]]]]]]],[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','policy_tree_node'},[{'record_field',62,{'atom',62,'valid_policy'}}|[{'record_field',63,{'atom',63,'qualifier_set'}}|[{'record_field',64,{'atom',64,'criticality_indicator'}}|[{'record_field',65,{'atom',65,'expected_policy_set'}}]]]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','revoke_state'},[{'record_field',69,{'atom',69,'reasons_mask'}}|[{'record_field',70,{'atom',70,'cert_status'}}|[{'record_field',71,{'atom',71,'interim_reasons_mask'}}|[{'record_field',72,{'atom',72,'valid_ext'}}]]]],[]}],
		%% Line 75
		'type' =
		    %% Line 75
		    [{{'record','ECPoint'},[{'record_field',76,{'atom',76,'point'}}],[]}],
		%% Line 35
		'spec' =
		    %% Line 35
		    [{{'start',0},[{'type',35,'fun',[{'type',35,'product',[]}|[{'type',35,'union',[{'atom',35,'ok'}|[{'type',35,'tuple',[{'atom',35,'error'}|[{'type',35,'term',[]}]]}]]}]]}]}],
		%% Line 36
		'spec' =
		    %% Line 36
		    [{{'start',1},[{'type',36,'fun',[{'type',36,'product',[{'type',36,'union',[{'atom',36,'permanent'}|[{'atom',36,'transient'}|[{'atom',36,'temporary'}]]]}]}|[{'type',36,'union',[{'atom',36,'ok'}|[{'type',36,'tuple',[{'atom',36,'error'}|[{'type',36,'term',[]}]]}]]}]]}]}],
		%% Line 54
		'spec' =
		    %% Line 54
		    [{{'stop',0},[{'type',54,'fun',[{'type',54,'product',[]}|[{'type',54,'union',[{'atom',54,'ok'}|[{'type',54,'tuple',[{'atom',54,'error'}|[{'type',54,'term',[]}]]}]]}]]}]}],
		%% Line 62
		'spec' =
		    %% Line 62
		    [{{'connect',3},[{'type',62,'fun',[{'type',62,'product',[{'type',62,'string',[]}|[{'type',62,'integer',[]}|[{'remote_type',62,[{'atom',62,'proplists'}|[{'atom',62,'proplist'}|[[]]]]}]]]}|[{'type',62,'union',[{'type',62,'tuple',[{'atom',62,'ok'}|[{'type',62,'pid',[]}]]}|[{'type',62,'tuple',[{'atom',62,'error'}|[{'type',62,'term',[]}]]}]]}]]}]}],
		%% Line 63
		'spec' =
		    %% Line 63
		    [{{'connect',4},[{'type',63,'fun',[{'type',63,'product',[{'type',63,'string',[]}|[{'type',63,'integer',[]}|[{'remote_type',63,[{'atom',63,'proplists'}|[{'atom',63,'proplist'}|[[]]]]}|[{'type',63,'timeout',[]}]]]]}|[{'type',63,'union',[{'type',63,'tuple',[{'atom',63,'ok'}|[{'type',63,'pid',[]}]]}|[{'type',63,'tuple',[{'atom',63,'error'}|[{'type',63,'term',[]}]]}]]}]]}]}],
		%% Line 92
		'spec' =
		    %% Line 92
		    [{{'close',1},[{'type',92,'fun',[{'type',92,'product',[{'type',92,'pid',[]}]}|[{'atom',92,'ok'}]]}]}],
		%% Line 100
		'spec' =
		    %% Line 100
		    [{{'connection_info',2},[{'type',100,'fun',[{'type',100,'product',[{'type',100,'pid',[]}|[{'type',100,'list',[{'type',100,'atom',[]}]}]]}|[{'type',100,'list',[{'type',100,'tuple',[{'type',100,'atom',[]}|[{'type',100,'term',[]}]]}]}]]}]}],
		%% Line 108
		'spec' =
		    %% Line 108
		    [{{'channel_info',3},[{'type',108,'fun',[{'type',108,'product',[{'type',108,'pid',[]}|[{'type',108,'channel_id',[]}|[{'type',108,'list',[{'type',108,'atom',[]}]}]]]}|[{'type',108,'list',[{'type',108,'tuple',[{'type',108,'atom',[]}|[{'type',108,'term',[]}]]}]}]]}]}],
		%% Line 116
		'spec' =
		    %% Line 116
		    [{{'daemon',1},[{'type',116,'fun',[{'type',116,'product',[{'type',116,'integer',[]}]}|[{'type',116,'tuple',[{'atom',116,'ok'}|[{'type',116,'pid',[]}]]}]]}]}],
		%% Line 117
		'spec' =
		    %% Line 117
		    [{{'daemon',2},[{'type',117,'fun',[{'type',117,'product',[{'type',117,'integer',[]}|[{'remote_type',117,[{'atom',117,'proplists'}|[{'atom',117,'proplist'}|[[]]]]}]]}|[{'type',117,'tuple',[{'atom',117,'ok'}|[{'type',117,'pid',[]}]]}]]}]}],
		%% Line 118
		'spec' =
		    %% Line 118
		    [{{'daemon',3},[{'type',118,'fun',[{'type',118,'product',[{'type',118,'union',[{'atom',118,'any'}|[{'remote_type',118,[{'atom',118,'inet'}|[{'atom',118,'ip_address'}|[[]]]]}]]}|[{'type',118,'integer',[]}|[{'remote_type',118,[{'atom',118,'proplists'}|[{'atom',118,'proplist'}|[[]]]]}]]]}|[{'type',118,'tuple',[{'atom',118,'ok'}|[{'type',118,'pid',[]}]]}]]}]}],
		%% Line 151
		'spec' =
		    %% Line 151
		    [{{'stop_listener',1},[{'type',151,'fun',[{'type',151,'product',[{'type',151,'pid',[]}]}|[{'atom',151,'ok'}]]}]}],
		%% Line 152
		'spec' =
		    %% Line 152
		    [{{'stop_listener',2},[{'type',152,'fun',[{'type',152,'product',[{'remote_type',152,[{'atom',152,'inet'}|[{'atom',152,'ip_address'}|[[]]]]}|[{'type',152,'integer',[]}]]}|[{'atom',152,'ok'}]]}]}],
		%% Line 163
		'spec' =
		    %% Line 163
		    [{{'stop_daemon',1},[{'type',163,'fun',[{'type',163,'product',[{'type',163,'pid',[]}]}|[{'atom',163,'ok'}]]}]}],
		%% Line 164
		'spec' =
		    %% Line 164
		    [{{'stop_daemon',2},[{'type',164,'fun',[{'type',164,'product',[{'remote_type',164,[{'atom',164,'inet'}|[{'atom',164,'ip_address'}|[[]]]]}|[{'type',164,'integer',[]}]]}|[{'atom',164,'ok'}]]}]}],
		%% Line 175
		'spec' =
		    %% Line 175
		    [{{'shell',1},[{'type',175,'fun',[{'type',175,'product',[{'type',175,'string',[]}]}|[{'var',175,'_'}]]}]}],
		%% Line 176
		'spec' =
		    %% Line 176
		    [{{'shell',2},[{'type',176,'fun',[{'type',176,'product',[{'type',176,'string',[]}|[{'remote_type',176,[{'atom',176,'proplists'}|[{'atom',176,'proplist'}|[[]]]]}]]}|[{'var',176,'_'}]]}]}],
		%% Line 177
		'spec' =
		    %% Line 177
		    [{{'shell',3},[{'type',177,'fun',[{'type',177,'product',[{'type',177,'string',[]}|[{'type',177,'integer',[]}|[{'remote_type',177,[{'atom',177,'proplists'}|[{'atom',177,'proplist'}|[[]]]]}]]]}|[{'var',177,'_'}]]}]}]]
'start'/0 =
    %% Line 41
    fun () ->
	do  %% Line 42
	    call 'application':'start'
		('crypto')
	    do  %% Line 43
		call 'application':'start'
		    ('asn1')
		do  %% Line 44
		    call 'application':'start'
			('public_key')
		    %% Line 45
		    call 'application':'start'
			('ssh')
'start'/1 =
    %% Line 47
    fun (_cor0) ->
	do  %% Line 48
	    call 'application':'start'
		('crypto', _cor0)
	    do  %% Line 49
		call 'application':'start'
		    ('asn1')
		do  %% Line 50
		    call 'application':'start'
			('public_key', _cor0)
		    %% Line 51
		    call 'application':'start'
			('ssh', _cor0)
'stop'/0 =
    %% Line 58
    fun () ->
	%% Line 59
	call 'application':'stop'
	    ('ssh')
'connect'/3 =
    %% Line 67
    fun (_cor2,_cor1,_cor0) ->
	%% Line 68
	apply 'connect'/4
	    (_cor2, _cor1, _cor0, 'infinity')
'connect'/4 =
    %% Line 69
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 70
	case apply 'handle_options'/1
		 (_cor1) of
	  %% Line 71
	  <Error = {'error',_X_Reason}> when 'true' ->
	      %% Line 72
	      Error
	  %% Line 73
	  <{SocketOptions,SshOptions}> when 'true' ->
	      %% Line 74
	      case %% Line 75
		   call 'proplists':'get_value'
		       ('transport', _cor1, {'tcp','gen_tcp','tcp_closed'}) of
		<TransportOpts = {_cor19,Transport,_cor20}> when 'true' ->
		    let <ConnectionTimeout> =
			%% Line 76
			call 'proplists':'get_value'
			    ('connect_timeout', _cor1, 'infinity')
		    in  %% Line 77
			try
			    call Transport:'connect'
				(_cor3, _cor2, [{'active','false'}|SocketOptions], ConnectionTimeout)
			of <_cor6> ->
			    case _cor6 of
			      %% Line 78
			      <{'ok',Socket}> when 'true' ->
				  let <_cor7> =
				      %% Line 79
				      call 'erlang':'self'
					  ()
				  in  let <_cor8> =
					  %% Line 79
					  apply 'fix_idle_time'/1
					      (SshOptions)
				      in  let <Opts> =
					      %% Line 79
					      [{'user_pid',_cor7}|[{'host',_cor3}|_cor8]]
					  in  %% Line 80
					      call 'ssh_connection_handler':'start_connection'
						  ('client', Socket, Opts, _cor0)
			      %% Line 81
			      <{'error',Reason}> when 'true' ->
				  %% Line 82
				  {'error',Reason}
			      ( <_cor10> when 'true' ->
				    primop 'match_fail'
					({'try_clause',_cor10})
				-| ['compiler_generated'] )
			    end
			catch <_cor13,_cor12,_cor11> ->
			    case <_cor13,_cor12,_cor11> of
			      %% Line 84
			      <'exit',{'function_clause',_cor21},_cor22> when 'true' ->
				  %% Line 85
				  {'error',{'options',{'transport',TransportOpts}}}
			      %% Line 86
			      <'exit','badarg',_cor23> when 'true' ->
				  %% Line 87
				  {'error',{'options',{'socket_options',SocketOptions}}}
			      ( <_cor13,_cor12,_cor11> when 'true' ->
				    primop 'raise'
					(_cor11, _cor12)
				-| ['compiler_generated'] )
			    end
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor14> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor14})
	    -| ['compiler_generated'] )
	end
'close'/1 =
    %% Line 96
    fun (_cor0) ->
	%% Line 97
	call 'ssh_connection_handler':'stop'
	    (_cor0)
'connection_info'/2 =
    %% Line 104
    fun (_cor1,_cor0) ->
	%% Line 105
	call 'ssh_connection_handler':'connection_info'
	    (_cor1, _cor0)
'channel_info'/3 =
    %% Line 112
    fun (_cor2,_cor1,_cor0) ->
	%% Line 113
	call 'ssh_connection_handler':'channel_info'
	    (_cor2, _cor1, _cor0)
'daemon'/1 =
    %% Line 123
    fun (_cor0) ->
	%% Line 124
	apply 'daemon'/2
	    (_cor0, [])
'daemon'/2 =
    %% Line 126
    fun (_cor1,_cor0) ->
	%% Line 127
	apply 'daemon'/3
	    ('any', _cor1, _cor0)
'daemon'/3 =
    %% Line 129
    fun (_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 130
	    case call 'proplists':'get_value'
		     ('shell', _cor0) of
	      %% Line 131
	      <'undefined'> when 'true' ->
		  %% Line 132
		  [{'shell',{'shell','start',[]}}|_cor0]
	      %% Line 133
	      <_cor14> when 'true' ->
		  _cor0
	    end
	in  let <Host,Inet,Options> =
		%% Line 137
		case _cor2 of
		  %% Line 138
		  <'any'> when 'true' ->
		      %% Line 139
		      case call 'inet':'gethostname'
			       () of
			<{'ok',Host0}> when 'true' ->
			    let <_cor7> =
				%% Line 140
				call 'proplists':'get_value'
				    ('inet', _cor4, 'inet')
			    in  %% Line 140
				<Host0,_cor7,_cor4>
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor6})
			  -| ['compiler_generated'] )
		      end
		  %% Line 141
		  <{_cor15,_cor16,_cor17,_cor18}> when 'true' ->
		      %% Line 142
		      <_cor2,'inet',%% Line 143
				    [{'ip',_cor2}|_cor4]>
		  %% Line 144
		  <{_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26}> when 'true' ->
		      %% Line 145
		      <_cor2,'inet6',%% Line 146
				     [{'ip',_cor2}|_cor4]>
		  ( <_cor8> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor8})
		    -| ['compiler_generated'] )
		end
	    in  %% Line 148
		apply 'start_daemon'/4
		    (Host, _cor1, Options, Inet)
'stop_listener'/1 =
    %% Line 157
    fun (_cor0) ->
	%% Line 158
	call 'ssh_system_sup':'stop_listener'
	    (_cor0)
'stop_listener'/2 =
    %% Line 159
    fun (_cor1,_cor0) ->
	%% Line 160
	call 'ssh_system_sup':'stop_listener'
	    (_cor1, _cor0)
'stop_daemon'/1 =
    %% Line 169
    fun (_cor0) ->
	%% Line 170
	call 'ssh_system_sup':'stop_system'
	    (_cor0)
'stop_daemon'/2 =
    %% Line 171
    fun (_cor1,_cor0) ->
	%% Line 172
	call 'ssh_system_sup':'stop_system'
	    (_cor1, _cor0)
'shell'/1 =
    %% Line 188
    fun (_cor0) ->
	%% Line 189
	apply 'shell'/3
	    (_cor0, 22, [])
'shell'/2 =
    %% Line 190
    fun (_cor1,_cor0) ->
	%% Line 191
	apply 'shell'/3
	    (_cor1, 22, _cor0)
'shell'/3 =
    %% Line 192
    fun (_cor2,_cor1,_cor0) ->
	%% Line 193
	case apply 'connect'/3
		 (_cor2, _cor1, _cor0) of
	  %% Line 194
	  <{'ok',ConnectionRef}> when 'true' ->
	      %% Line 195
	      case call 'ssh_connection':'session_channel'
		       (ConnectionRef, 'infinity') of
		%% Line 196
		<{'ok',ChannelId}> when 'true' ->
		    let <Args> =
			%% Line 197
			[{'channel_cb','ssh_shell'}|%% Line 198
						    [{'init_args',[ConnectionRef|[ChannelId|[]]]}|%% Line 199
												  [{'cm',ConnectionRef}|[{'channel_id',ChannelId}|[]]]]]
		    in  %% Line 200
			case call 'ssh_channel':'init'
				 ([Args|[]]) of
			  <{'ok',State}> when 'true' ->
			      %% Line 201
			      call 'ssh_channel':'enter_loop'
				  (State)
			  ( <_cor4> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor4})
			    -| ['compiler_generated'] )
			end
		%% Line 202
		<Error> when 'true' ->
		    %% Line 203
		    Error
	      end
	  %% Line 205
	  <Error> when 'true' ->
	      %% Line 206
	      Error
	end
'fix_idle_time'/1 =
    %% Line 212
    fun (_cor0) ->
	%% Line 213
	case call 'proplists':'get_value'
		 ('idle_time', _cor0) of
	  %% Line 214
	  <'undefined'> when 'true' ->
	      %% Line 215
	      [{'idle_time','infinity'}|_cor0]
	  %% Line 216
	  <_cor3> when 'true' ->
	      _cor0
	end
'start_daemon'/4 =
    %% Line 219
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 220
	case apply 'handle_options'/1
		 (_cor1) of
	  %% Line 221
	  <Error = {'error',_X_Reason}> when 'true' ->
	      %% Line 222
	      Error
	  %% Line 223
	  <{SocketOptions,SshOptions}> when 'true' ->
	      %% Line 224
	      apply 'do_start_daemon'/4
		  (_cor3, _cor2, [{'role','server'}|SshOptions], [_cor0|SocketOptions])
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor4})
	    -| ['compiler_generated'] )
	end
'do_start_daemon'/4 =
    %% Line 227
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 228
	case call 'ssh_system_sup':'system_supervisor'
		 (_cor3, _cor2) of
	  %% Line 229
	  <'undefined'> when 'true' ->
	      %% Line 233
	      try
		  call 'sshd_sup':'start_child'
		      ([{'address',_cor3}|%% Line 234
					  [{'port',_cor2}|[{'role','server'}|%% Line 235
									     [{'socket_opts',_cor0}|%% Line 236
												    [{'ssh_opts',_cor1}|[]]]]]])
	      of <_cor4> ->
		  case _cor4 of
		    %% Line 237
		    <{'ok',SysSup}> when 'true' ->
			%% Line 238
			{'ok',SysSup}
		    %% Line 239
		    <{'error',{'already_started',_cor15}}> when 'true' ->
			%% Line 240
			{'error','eaddrinuse'}
		    %% Line 241
		    <{'error',R}> when 'true' ->
			%% Line 242
			{'error',R}
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'try_clause',_cor5})
		      -| ['compiler_generated'] )
		  end
	      catch <_cor8,_cor7,_cor6> ->
		  case <_cor8,_cor7,_cor6> of
		    %% Line 244
		    <'exit',{'noproc',_cor16},_cor17> when 'true' ->
			%% Line 245
			{'error','ssh_not_started'}
		    ( <_cor8,_cor7,_cor6> when 'true' ->
			  primop 'raise'
			      (_cor6, _cor7)
		      -| ['compiler_generated'] )
		  end
	  %% Line 247
	  <Sup> when 'true' ->
	      %% Line 248
	      case call 'ssh_system_sup':'restart_acceptor'
		       (_cor3, _cor2) of
		%% Line 249
		<{'ok',_cor18}> when 'true' ->
		    %% Line 250
		    {'ok',Sup}
		%% Line 251
		<_cor19> when 'true' ->
		    %% Line 252
		    {'error','eaddrinuse'}
	      end
	end
'handle_options'/1 =
    %% Line 256
    fun (_cor0) ->
	%% Line 257
	try
	    let <_cor1> =
		call 'proplists':'unfold'
		    (_cor0)
	    in  apply 'handle_option'/3
		    (_cor1, [], [])
	of <_cor2> ->
	    case _cor2 of
	      %% Line 258
	      <{Inet,Ssh}> when 'true' ->
		  let <_cor3> =
		      %% Line 259
		      apply 'handle_ip'/1
			  (Inet)
		  in  %% Line 259
		      {_cor3,Ssh}
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'try_clause',_cor4})
		-| ['compiler_generated'] )
	    end
	catch <_cor7,_cor6,_cor5> ->
	    case <_cor7,_cor6,_cor5> of
	      %% Line 261
	      <'throw',Error,_cor9> when 'true' ->
		  %% Line 262
		  Error
	      ( <_cor7,_cor6,_cor5> when 'true' ->
		    primop 'raise'
			(_cor5, _cor6)
		-| ['compiler_generated'] )
	    end
'handle_option'/3 =
    %% Line 265
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],SocketOptions,SshOptions> when 'true' ->
	      %% Line 266
	      {SocketOptions,SshOptions}
	  %% Line 267
	  <[Opt = {'system_dir',_cor44}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor3> =
		  %% Line 268
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 268
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor3|SshOptions])
	  %% Line 269
	  <[Opt = {'user_dir',_cor45}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor4> =
		  %% Line 270
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 270
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor4|SshOptions])
	  %% Line 271
	  <[Opt = {'user_dir_fun',_cor46}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor5> =
		  %% Line 272
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 272
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor5|SshOptions])
	  %% Line 273
	  <[Opt = {'silently_accept_hosts',_cor47}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor6> =
		  %% Line 274
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 274
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor6|SshOptions])
	  %% Line 275
	  <[Opt = {'user_interaction',_cor48}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor7> =
		  %% Line 276
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 276
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor7|SshOptions])
	  %% Line 277
	  <[Opt = {'public_key_alg',_cor49}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor8> =
		  %% Line 278
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 278
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor8|SshOptions])
	  %% Line 279
	  <[Opt = {'connect_timeout',_cor50}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor9> =
		  %% Line 280
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 280
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor9|SshOptions])
	  %% Line 281
	  <[Opt = {'user',_cor51}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor10> =
		  %% Line 282
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 282
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor10|SshOptions])
	  %% Line 283
	  <[Opt = {'dsa_pass_phrase',_cor52}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor11> =
		  %% Line 284
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 284
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor11|SshOptions])
	  %% Line 285
	  <[Opt = {'rsa_pass_phrase',_cor53}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor12> =
		  %% Line 286
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 286
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor12|SshOptions])
	  %% Line 287
	  <[Opt = {'password',_cor54}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor13> =
		  %% Line 288
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 288
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor13|SshOptions])
	  %% Line 289
	  <[Opt = {'user_passwords',_cor55}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor14> =
		  %% Line 290
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 290
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor14|SshOptions])
	  %% Line 291
	  <[Opt = {'pwdfun',_cor56}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor15> =
		  %% Line 292
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 292
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor15|SshOptions])
	  %% Line 293
	  <[Opt = {'key_cb',_cor57}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor16> =
		  %% Line 294
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 294
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor16|SshOptions])
	  %% Line 295
	  <[Opt = {'role',_cor58}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor17> =
		  %% Line 296
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 296
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor17|SshOptions])
	  %% Line 297
	  <[Opt = {'compression',_cor59}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor18> =
		  %% Line 298
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 298
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor18|SshOptions])
	  %% Line 300
	  <[{'allow_user_interaction',Value}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor19> =
		  %% Line 301
		  apply 'handle_ssh_option'/1
		      ({'user_interaction',Value})
	      in  %% Line 301
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor19|SshOptions])
	  %% Line 302
	  <[Opt = {'infofun',_cor60}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor20> =
		  %% Line 303
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 303
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor20|SshOptions])
	  %% Line 304
	  <[Opt = {'connectfun',_cor61}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor21> =
		  %% Line 305
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 305
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor21|SshOptions])
	  %% Line 306
	  <[Opt = {'disconnectfun',_cor62}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor22> =
		  %% Line 307
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 307
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor22|SshOptions])
	  %% Line 308
	  <[Opt = {'failfun',_cor63}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor23> =
		  %% Line 309
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 309
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor23|SshOptions])
	  %% Line 311
	  <[{'ip_v6_disabled',Value}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor24> =
		  %% Line 312
		  apply 'handle_ssh_option'/1
		      ({'ipv6_disabled',Value})
	      in  %% Line 312
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor24|SshOptions])
	  %% Line 313
	  <[Opt = {'ipv6_disabled',_cor64}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor25> =
		  %% Line 314
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 314
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor25|SshOptions])
	  %% Line 315
	  <[Opt = {'transport',_cor65}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor26> =
		  %% Line 316
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 316
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor26|SshOptions])
	  %% Line 317
	  <[Opt = {'subsystems',_cor66}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor27> =
		  %% Line 318
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 318
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor27|SshOptions])
	  %% Line 319
	  <[Opt = {'ssh_cli',_cor67}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor28> =
		  %% Line 320
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 320
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor28|SshOptions])
	  %% Line 321
	  <[Opt = {'shell',_cor68}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor29> =
		  %% Line 322
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 322
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor29|SshOptions])
	  %% Line 323
	  <[Opt = {'exec',_cor69}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor30> =
		  %% Line 324
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 324
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor30|SshOptions])
	  %% Line 325
	  <[Opt = {'auth_methods',_cor70}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor31> =
		  %% Line 326
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 326
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor31|SshOptions])
	  %% Line 327
	  <[Opt = {'pref_public_key_algs',_cor71}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor32> =
		  %% Line 328
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 328
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor32|SshOptions])
	  %% Line 329
	  <[Opt = {'quiet_mode',_cor72}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor33> =
		  %% Line 330
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 330
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor33|SshOptions])
	  %% Line 331
	  <[Opt = {'idle_time',_cor73}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor34> =
		  %% Line 332
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 332
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor34|SshOptions])
	  %% Line 333
	  <[Opt = {'rekey_limit',_cor74}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor35> =
		  %% Line 334
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 334
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor35|SshOptions])
	  %% Line 335
	  <[Opt = {'max_sessions',_cor75}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor36> =
		  %% Line 336
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 336
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor36|SshOptions])
	  %% Line 337
	  <[Opt = {'negotiation_timeout',_cor76}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor37> =
		  %% Line 338
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 338
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor37|SshOptions])
	  %% Line 339
	  <[Opt = {'parallel_login',_cor77}|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor38> =
		  %% Line 340
		  apply 'handle_ssh_option'/1
		      (Opt)
	      in  %% Line 340
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor38|SshOptions])
	  %% Line 341
	  <['parallel_login'|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor39> =
		  %% Line 342
		  apply 'handle_ssh_option'/1
		      ({'parallel_login','true'})
	      in  %% Line 342
		  apply 'handle_option'/3
		      (Rest, SocketOptions, [_cor39|SshOptions])
	  %% Line 343
	  <[Opt|Rest],SocketOptions,SshOptions> when 'true' ->
	      let <_cor40> =
		  %% Line 344
		  apply 'handle_inet_option'/1
		      (Opt)
	      in  %% Line 344
		  apply 'handle_option'/3
		      (Rest, [_cor40|SocketOptions], SshOptions)
	  ( <_cor43,_cor42,_cor41> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor43,_cor42,_cor41})
		  -| [{'function_name',{'handle_option',3}}] )
	    -| ['compiler_generated'] )
	end
'handle_ssh_option'/1 =
    %% Line 346
    fun (_cor0) ->
	case _cor0 of
	  <Opt = {'system_dir',Value}>
	      when call 'erlang':'is_list'
		    (Value) ->
	      %% Line 347
	      Opt
	  %% Line 348
	  <Opt = {'user_dir',Value}>
	      when call 'erlang':'is_list'
		    (Value) ->
	      %% Line 349
	      Opt
	  %% Line 350
	  <Opt = {'user_dir_fun',Value}>
	      when call 'erlang':'is_function'
		    (Value) ->
	      %% Line 351
	      Opt
	  %% Line 352
	  <Opt = {'silently_accept_hosts',Value}>
	      when call 'erlang':'is_boolean'
		    (Value) ->
	      %% Line 353
	      Opt
	  %% Line 354
	  <Opt = {'user_interaction',Value}>
	      when call 'erlang':'is_boolean'
		    (Value) ->
	      %% Line 355
	      Opt
	  %% Line 356
	  <{'public_key_alg','ssh_dsa'}> when 'true' ->
	      %% Line 357
	      {'public_key_alg','ssh-dss'}
	  %% Line 358
	  <{'public_key_alg','ssh_rsa'}> when 'true' ->
	      %% Line 359
	      {'public_key_alg','ssh-rsa'}
	  %% Line 360
	  <Opt = {'public_key_alg',Value}>
	      when let <_cor1> =
		    call 'erlang':'=:='
			(Value, 'ssh-rsa')
		in  let <_cor2> =
			call 'erlang':'=:='
			    (Value, 'ssh-dss')
		    in  call 'erlang':'or'
			    (_cor1, _cor2) ->
	      %% Line 361
	      Opt
	  %% Line 362
	  <Opt = {'pref_public_key_algs',Value}>
	      when try
		    let <_cor3> =
			call 'erlang':'is_list'
			    (Value)
		    in  let <_cor4> =
			    call 'erlang':'length'
				(Value)
			in  let <_cor5> =
				call 'erlang':'>='
				    (_cor4, 1)
			    in  call 'erlang':'and'
				    (_cor3, _cor5)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 363
	      case apply 'handle_pref_algs'/2
		       (Value, []) of
		%% Line 364
		<{'true',NewOpts}> when 'true' ->
		    %% Line 365
		    NewOpts
		%% Line 366
		<_cor26> when 'true' ->
		    %% Line 367
		    call 'erlang':'throw'
			({'error',{'eoptions',Opt}})
	      end
	  %% Line 369
	  <Opt = {'connect_timeout',Value}>
	      when let <_cor7> =
		    call 'erlang':'is_integer'
			(Value)
		in  let <_cor8> =
			call 'erlang':'=:='
			    (Value, 'infinity')
		    in  call 'erlang':'or'
			    (_cor7, _cor8) ->
	      %% Line 370
	      Opt
	  %% Line 371
	  <Opt = {'max_sessions',Value}>
	      when let <_cor9> =
		    call 'erlang':'is_integer'
			(Value)
		in  let <_cor10> =
			call 'erlang':'>'
			    (Value, 0)
		    in  call 'erlang':'and'
			    (_cor9, _cor10) ->
	      %% Line 372
	      Opt
	  %% Line 373
	  <Opt = {'negotiation_timeout',Value}>
	      when let <_cor11> =
		    call 'erlang':'is_integer'
			(Value)
		in  let <_cor12> =
			call 'erlang':'=:='
			    (Value, 'infinity')
		    in  call 'erlang':'or'
			    (_cor11, _cor12) ->
	      %% Line 374
	      Opt
	  %% Line 375
	  <Opt = {'parallel_login',Value}>
	      when let <_cor13> =
		    call 'erlang':'=:='
			(Value, 'true')
		in  let <_cor14> =
			call 'erlang':'=:='
			    (Value, 'false')
		    in  call 'erlang':'or'
			    (_cor13, _cor14) ->
	      %% Line 376
	      Opt
	  %% Line 377
	  <Opt = {'user',Value}>
	      when call 'erlang':'is_list'
		    (Value) ->
	      %% Line 378
	      Opt
	  %% Line 379
	  <Opt = {'dsa_pass_phrase',Value}>
	      when call 'erlang':'is_list'
		    (Value) ->
	      %% Line 380
	      Opt
	  %% Line 381
	  <Opt = {'rsa_pass_phrase',Value}>
	      when call 'erlang':'is_list'
		    (Value) ->
	      %% Line 382
	      Opt
	  %% Line 383
	  <Opt = {'password',Value}>
	      when call 'erlang':'is_list'
		    (Value) ->
	      %% Line 384
	      Opt
	  %% Line 385
	  <Opt = {'user_passwords',Value}>
	      when call 'erlang':'is_list'
		    (Value) ->
	      %% Line 386
	      Opt
	  %% Line 387
	  <Opt = {'pwdfun',Value}>
	      when call 'erlang':'is_function'
		    (Value) ->
	      %% Line 388
	      Opt
	  %% Line 389
	  <Opt = {'key_cb',Value}>
	      when call 'erlang':'is_atom'
		    (Value) ->
	      %% Line 390
	      Opt
	  %% Line 391
	  <Opt = {'compression',Value}>
	      when call 'erlang':'is_atom'
		    (Value) ->
	      %% Line 392
	      Opt
	  %% Line 393
	  <Opt = {'exec',{Module,Function,_cor27}}>
	      when let <_cor15> =
		    call 'erlang':'is_atom'
			(Module)
		in  let <_cor16> =
			%% Line 394
			call 'erlang':'is_atom'
			    (Function)
		    in  call 'erlang':'and'
			    (_cor15, _cor16) ->
	      %% Line 396
	      Opt
	  %% Line 397
	  <Opt = {'auth_methods',Value}>
	      when call 'erlang':'is_list'
		    (Value) ->
	      %% Line 398
	      Opt
	  %% Line 399
	  <Opt = {'infofun',Value}>
	      when call 'erlang':'is_function'
		    (Value) ->
	      %% Line 400
	      Opt
	  %% Line 401
	  <Opt = {'connectfun',Value}>
	      when call 'erlang':'is_function'
		    (Value) ->
	      %% Line 402
	      Opt
	  %% Line 403
	  <Opt = {'disconnectfun',Value}>
	      when call 'erlang':'is_function'
		    (Value) ->
	      %% Line 404
	      Opt
	  %% Line 405
	  <Opt = {'failfun',Value}>
	      when call 'erlang':'is_function'
		    (Value) ->
	      %% Line 406
	      Opt
	  %% Line 408
	  <Opt = {'ipv6_disabled',Value}>
	      when call 'erlang':'is_boolean'
		    (Value) ->
	      %% Line 409
	      call 'erlang':'throw'
		  ({'error',{{'ipv6_disabled',Opt},'option_no_longer_valid_use_inet_option_instead'}})
	  %% Line 410
	  <Opt = {'transport',{Protocol,Cb,ClosTag}}>
	      when try
		    let <_cor17> =
			call 'erlang':'is_atom'
			    (Protocol)
		    in  let <_cor18> =
			    %% Line 411
			    call 'erlang':'is_atom'
				(Cb)
			in  let <_cor19> =
				%% Line 412
				call 'erlang':'is_atom'
				    (ClosTag)
			    in  let <_cor20> =
				    call 'erlang':'and'
					(_cor18, _cor19)
				in  call 'erlang':'and'
					(_cor17, _cor20)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 413
	      Opt
	  %% Line 414
	  <Opt = {'subsystems',Value}>
	      when call 'erlang':'is_list'
		    (Value) ->
	      %% Line 415
	      Opt
	  %% Line 416
	  <Opt = {'ssh_cli',{Cb,_cor28}}>
	      when call 'erlang':'is_atom'
		    (Cb) ->
	      %% Line 417
	      Opt
	  %% Line 418
	  <Opt = {'ssh_cli','no_cli'}> when 'true' ->
	      %% Line 419
	      Opt
	  %% Line 420
	  <Opt = {'shell',{Module,Function,_cor29}}>
	      when let <_cor21> =
		    call 'erlang':'is_atom'
			(Module)
		in  let <_cor22> =
			%% Line 421
			call 'erlang':'is_atom'
			    (Function)
		    in  call 'erlang':'and'
			    (_cor21, _cor22) ->
	      %% Line 422
	      Opt
	  %% Line 423
	  <Opt = {'shell',Value}>
	      when call 'erlang':'is_function'
		    (Value) ->
	      %% Line 424
	      Opt
	  %% Line 425
	  <Opt = {'quiet_mode',Value}>
	      when call 'erlang':'is_boolean'
		    (Value) ->
	      %% Line 426
	      Opt
	  %% Line 427
	  <Opt = {'idle_time',Value}>
	      when let <_cor23> =
		    call 'erlang':'is_integer'
			(Value)
		in  let <_cor24> =
			call 'erlang':'>'
			    (Value, 0)
		    in  call 'erlang':'and'
			    (_cor23, _cor24) ->
	      %% Line 428
	      Opt
	  %% Line 429
	  <Opt = {'rekey_limit',Value}>
	      when call 'erlang':'is_integer'
		    (Value) ->
	      %% Line 430
	      Opt
	  %% Line 431
	  <Opt> when 'true' ->
	      %% Line 432
	      call 'erlang':'throw'
		  ({'error',{'eoptions',Opt}})
	end
'handle_inet_option'/1 =
    %% Line 434
    fun (_cor0) ->
	case _cor0 of
	  <Opt = {'active',_cor4}> when 'true' ->
	      %% Line 435
	      call 'erlang':'throw'
		  ({'error',{{'eoptions',Opt},[83|[83|[72|[32|[104|[97|[115|[32|[98|[117|[105|[108|[116|[32|[105|[110|[32|[102|[108|[111|[119|[32|[99|[111|[110|[116|[114|[111|[108|[44|[32|[97|[110|[100|[32|[97|[99|[116|[105|[118|[101|[32|[105|[115|[32|[104|[97|[110|[100|[108|[101|[100|[32|[105|[110|[116|[101|[114|[110|[97|[108|[108|[121|[44|[32|[117|[115|[101|[114|[32|[105|[115|[32|[110|[111|[116|[32|[97|[108|[108|[111|[119|[101|[100|[116|[111|[32|[115|[112|[101|[99|[105|[102|[121|[32|[116|[104|[105|[115|[32|[111|[112|[116|[105|[111|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}})
	  %% Line 439
	  <{'inet',Value}>
	      when let <_cor1> =
		    call 'erlang':'=:='
			(Value, 'inet')
		in  let <_cor2> =
			call 'erlang':'=:='
			    (Value, 'inet6')
		    in  call 'erlang':'or'
			    (_cor1, _cor2) ->
	      %% Line 440
	      Value
	  %% Line 441
	  <Opt = {'reuseaddr',_cor5}> when 'true' ->
	      %% Line 442
	      call 'erlang':'throw'
		  ({'error',{{'eoptions',Opt},[73|[115|[32|[115|[101|[116|[32|[105|[110|[116|[101|[114|[110|[97|[108|[108|[121|[44|[32|[117|[115|[101|[114|[32|[105|[115|[32|[110|[111|[116|[32|[97|[108|[108|[111|[119|[101|[100|[116|[111|[32|[115|[112|[101|[99|[105|[102|[121|[32|[116|[104|[105|[115|[32|[111|[112|[116|[105|[111|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]}})
	  %% Line 445
	  <Opt> when 'true' ->
	      %% Line 446
	      Opt
	end
'handle_pref_algs'/2 =
    %% Line 448
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],Acc> when 'true' ->
	      let <_cor2> =
		  %% Line 449
		  call 'lists':'reverse'
		      (Acc)
	      in  %% Line 449
		  {'true',_cor2}
	  %% Line 450
	  <[H|T],Acc> when 'true' ->
	      %% Line 451
	      case H of
		%% Line 452
		<'ssh_dsa'> when 'true' ->
		    %% Line 453
		    apply 'handle_pref_algs'/2
			(T, ['ssh-dss'|Acc])
		%% Line 454
		<'ssh_rsa'> when 'true' ->
		    %% Line 455
		    apply 'handle_pref_algs'/2
			(T, ['ssh-rsa'|Acc])
		%% Line 456
		<'ssh-dss'> when 'true' ->
		    %% Line 457
		    apply 'handle_pref_algs'/2
			(T, ['ssh-dss'|Acc])
		%% Line 458
		<'ssh-rsa'> when 'true' ->
		    %% Line 459
		    apply 'handle_pref_algs'/2
			(T, ['ssh-rsa'|Acc])
		%% Line 460
		<_cor6> when 'true' ->
		    %% Line 461
		    'false'
	      end
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'handle_pref_algs',2}}] )
	    -| ['compiler_generated'] )
	end
'handle_ip'/1 =
    %% Line 464
    fun (_cor0) ->
	%% Line 465
	case call 'lists':'member'
		 ('inet', _cor0) of
	  %% Line 466
	  <'true'> when 'true' ->
	      _cor0
	  %% Line 468
	  <'false'> when 'true' ->
	      %% Line 469
	      case call 'lists':'member'
		       ('inet6', _cor0) of
		%% Line 470
		<'true'> when 'true' ->
		    _cor0
		%% Line 472
		<'false'> when 'true' ->
		    %% Line 473
		    ['inet'|_cor0]
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor1})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor2})
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ssh')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ssh', _cor0)
end