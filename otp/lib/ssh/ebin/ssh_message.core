module 'ssh_message' ['decode'/1,
		      'decode_keyboard_interactive_prompts'/2,
		      'encode'/1,
		      'encode_host_key'/1,
		      'module_info'/0,
		      'module_info'/1]
    attributes [%% Line 11
		'type' =
		    %% Line 11
		    [{{'record','AttributePKCS-7'},[{'record_field',12,{'atom',12,'type'}}|[{'record_field',12,{'atom',12,'values'}}]],[]}],
		%% Line 14
		'type' =
		    %% Line 14
		    [{{'record','AlgorithmIdentifierPKSC-7'},[{'record_field',15,{'atom',15,'algorithm'}}|[{'record_field',15,{'atom',15,'parameters'},{'atom',15,'asn1_NOVALUE'}}]],[]}],
		%% Line 17
		'type' =
		    %% Line 17
		    [{{'record','AlgorithmIdentifierPKCS-10'},[{'record_field',18,{'atom',18,'algorithm'}}|[{'record_field',18,{'atom',18,'parameters'},{'atom',18,'asn1_NOVALUE'}}]],[]}],
		%% Line 20
		'type' =
		    %% Line 20
		    [{{'record','AttributePKCS-10'},[{'record_field',21,{'atom',21,'type'}}|[{'record_field',21,{'atom',21,'values'}}]],[]}],
		%% Line 23
		'type' =
		    %% Line 23
		    [{{'record','SubjectPublicKeyInfo-PKCS-10'},[{'record_field',24,{'atom',24,'algorithm'}}|[{'record_field',24,{'atom',24,'subjectPublicKey'}}]],[]}],
		%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','ECPrivateKey'},[{'record_field',27,{'atom',27,'version'}}|[{'record_field',27,{'atom',27,'privateKey'}}|[{'record_field',27,{'atom',27,'parameters'},{'atom',27,'asn1_NOVALUE'}}|[{'record_field',27,{'atom',27,'publicKey'},{'atom',27,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 29
		'type' =
		    %% Line 29
		    [{{'record','DSAPrivateKey'},[{'record_field',30,{'atom',30,'version'}}|[{'record_field',30,{'atom',30,'p'}}|[{'record_field',30,{'atom',30,'q'}}|[{'record_field',30,{'atom',30,'g'}}|[{'record_field',30,{'atom',30,'y'}}|[{'record_field',30,{'atom',30,'x'}}]]]]]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','DHParameter'},[{'record_field',33,{'atom',33,'prime'}}|[{'record_field',33,{'atom',33,'base'}}|[{'record_field',33,{'atom',33,'privateValueLength'},{'atom',33,'asn1_NOVALUE'}}]]],[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','DigestInfoNull'},[{'record_field',36,{'atom',36,'digestAlgorithm'}}|[{'record_field',36,{'atom',36,'digest'}}]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','DigestInfoPKCS-1'},[{'record_field',39,{'atom',39,'digestAlgorithm'}}|[{'record_field',39,{'atom',39,'digest'}}]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','RSASSA-PSS-params'},[{'record_field',42,{'atom',42,'hashAlgorithm'}}|[{'record_field',42,{'atom',42,'maskGenAlgorithm'}}|[{'record_field',42,{'atom',42,'saltLength'},{'atom',42,'asn1_DEFAULT'}}|[{'record_field',42,{'atom',42,'trailerField'},{'atom',42,'asn1_DEFAULT'}}]]]],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','AlgorithmNull'},[{'record_field',45,{'atom',45,'algorithm'}}|[{'record_field',45,{'atom',45,'parameters'}}]],[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{{'record','Algorithm'},[{'record_field',48,{'atom',48,'algorithm'}}|[{'record_field',48,{'atom',48,'parameters'},{'atom',48,'asn1_NOVALUE'}}]],[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','OtherPrimeInfo'},[{'record_field',51,{'atom',51,'prime'}}|[{'record_field',51,{'atom',51,'exponent'}}|[{'record_field',51,{'atom',51,'coefficient'}}]]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{{'record','RSAPrivateKey'},[{'record_field',54,{'atom',54,'version'}}|[{'record_field',54,{'atom',54,'modulus'}}|[{'record_field',54,{'atom',54,'publicExponent'}}|[{'record_field',54,{'atom',54,'privateExponent'}}|[{'record_field',54,{'atom',54,'prime1'}}|[{'record_field',54,{'atom',54,'prime2'}}|[{'record_field',54,{'atom',54,'exponent1'}}|[{'record_field',54,{'atom',54,'exponent2'}}|[{'record_field',54,{'atom',54,'coefficient'}}|[{'record_field',54,{'atom',54,'otherPrimeInfos'},{'atom',54,'asn1_NOVALUE'}}]]]]]]]]]],[]}],
		%% Line 56
		'type' =
		    %% Line 56
		    [{{'record','RSAPublicKey'},[{'record_field',57,{'atom',57,'modulus'}}|[{'record_field',57,{'atom',57,'publicExponent'}}]],[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{{'record','Curve'},[{'record_field',60,{'atom',60,'a'}}|[{'record_field',60,{'atom',60,'b'}}|[{'record_field',60,{'atom',60,'seed'},{'atom',60,'asn1_NOVALUE'}}]]],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{{'record','ECParameters'},[{'record_field',63,{'atom',63,'version'}}|[{'record_field',63,{'atom',63,'fieldID'}}|[{'record_field',63,{'atom',63,'curve'}}|[{'record_field',63,{'atom',63,'base'}}|[{'record_field',63,{'atom',63,'order'}}|[{'record_field',63,{'atom',63,'cofactor'},{'atom',63,'asn1_NOVALUE'}}]]]]]],[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','Pentanomial'},[{'record_field',66,{'atom',66,'k1'}}|[{'record_field',66,{'atom',66,'k2'}}|[{'record_field',66,{'atom',66,'k3'}}]]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','Characteristic-two'},[{'record_field',69,{'atom',69,'m'}}|[{'record_field',69,{'atom',69,'basis'}}|[{'record_field',69,{'atom',69,'parameters'}}]]],[]}],
		%% Line 71
		'type' =
		    %% Line 71
		    [{{'record','ECDSA-Sig-Value'},[{'record_field',72,{'atom',72,'r'}}|[{'record_field',72,{'atom',72,'s'}}]],[]}],
		%% Line 74
		'type' =
		    %% Line 74
		    [{{'record','FieldID'},[{'record_field',75,{'atom',75,'fieldType'}}|[{'record_field',75,{'atom',75,'parameters'}}]],[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','ValidationParms'},[{'record_field',78,{'atom',78,'seed'}}|[{'record_field',78,{'atom',78,'pgenCounter'}}]],[]}],
		%% Line 80
		'type' =
		    %% Line 80
		    [{{'record','DomainParameters'},[{'record_field',81,{'atom',81,'p'}}|[{'record_field',81,{'atom',81,'g'}}|[{'record_field',81,{'atom',81,'q'}}|[{'record_field',81,{'atom',81,'j'},{'atom',81,'asn1_NOVALUE'}}|[{'record_field',81,{'atom',81,'validationParms'},{'atom',81,'asn1_NOVALUE'}}]]]]],[]}],
		%% Line 83
		'type' =
		    %% Line 83
		    [{{'record','Dss-Sig-Value'},[{'record_field',84,{'atom',84,'r'}}|[{'record_field',84,{'atom',84,'s'}}]],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{{'record','Dss-Parms'},[{'record_field',87,{'atom',87,'p'}}|[{'record_field',87,{'atom',87,'q'}}|[{'record_field',87,{'atom',87,'g'}}]]],[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','ACClearAttrs'},[{'record_field',90,{'atom',90,'acIssuer'}}|[{'record_field',90,{'atom',90,'acSerial'}}|[{'record_field',90,{'atom',90,'attrs'}}]]],[]}],
		%% Line 92
		'type' =
		    %% Line 92
		    [{{'record','AAControls'},[{'record_field',93,{'atom',93,'pathLenConstraint'},{'atom',93,'asn1_NOVALUE'}}|[{'record_field',93,{'atom',93,'permittedAttrs'},{'atom',93,'asn1_NOVALUE'}}|[{'record_field',93,{'atom',93,'excludedAttrs'},{'atom',93,'asn1_NOVALUE'}}|[{'record_field',93,{'atom',93,'permitUnSpecified'},{'atom',93,'asn1_DEFAULT'}}]]]],[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{{'record','SecurityCategory'},[{'record_field',96,{'atom',96,'type'}}|[{'record_field',96,{'atom',96,'value'}}]],[]}],
		%% Line 98
		'type' =
		    %% Line 98
		    [{{'record','Clearance'},[{'record_field',99,{'atom',99,'policyId'}}|[{'record_field',99,{'atom',99,'classList'},{'atom',99,'asn1_DEFAULT'}}|[{'record_field',99,{'atom',99,'securityCategories'},{'atom',99,'asn1_NOVALUE'}}]]],[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{{'record','RoleSyntax'},[{'record_field',102,{'atom',102,'roleAuthority'},{'atom',102,'asn1_NOVALUE'}}|[{'record_field',102,{'atom',102,'roleName'}}]],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{{'record','SvceAuthInfo'},[{'record_field',105,{'atom',105,'service'}}|[{'record_field',105,{'atom',105,'ident'}}|[{'record_field',105,{'atom',105,'authInfo'},{'atom',105,'asn1_NOVALUE'}}]]],[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','IetfAttrSyntax'},[{'record_field',108,{'atom',108,'policyAuthority'},{'atom',108,'asn1_NOVALUE'}}|[{'record_field',108,{'atom',108,'values'}}]],[]}],
		%% Line 110
		'type' =
		    %% Line 110
		    [{{'record','TargetCert'},[{'record_field',111,{'atom',111,'targetCertificate'}}|[{'record_field',111,{'atom',111,'targetName'},{'atom',111,'asn1_NOVALUE'}}|[{'record_field',111,{'atom',111,'certDigestInfo'},{'atom',111,'asn1_NOVALUE'}}]]],[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{{'record','AttCertValidityPeriod'},[{'record_field',114,{'atom',114,'notBeforeTime'}}|[{'record_field',114,{'atom',114,'notAfterTime'}}]],[]}],
		%% Line 116
		'type' =
		    %% Line 116
		    [{{'record','IssuerSerial'},[{'record_field',117,{'atom',117,'issuer'}}|[{'record_field',117,{'atom',117,'serial'}}|[{'record_field',117,{'atom',117,'issuerUID'},{'atom',117,'asn1_NOVALUE'}}]]],[]}],
		%% Line 119
		'type' =
		    %% Line 119
		    [{{'record','V2Form'},[{'record_field',120,{'atom',120,'issuerName'},{'atom',120,'asn1_NOVALUE'}}|[{'record_field',120,{'atom',120,'baseCertificateID'},{'atom',120,'asn1_NOVALUE'}}|[{'record_field',120,{'atom',120,'objectDigestInfo'},{'atom',120,'asn1_NOVALUE'}}]]],[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{{'record','ObjectDigestInfo'},[{'record_field',123,{'atom',123,'digestedObjectType'}}|[{'record_field',123,{'atom',123,'otherObjectTypeID'},{'atom',123,'asn1_NOVALUE'}}|[{'record_field',123,{'atom',123,'digestAlgorithm'}}|[{'record_field',123,{'atom',123,'objectDigest'}}]]]],[]}],
		%% Line 125
		'type' =
		    %% Line 125
		    [{{'record','Holder'},[{'record_field',126,{'atom',126,'baseCertificateID'},{'atom',126,'asn1_NOVALUE'}}|[{'record_field',126,{'atom',126,'entityName'},{'atom',126,'asn1_NOVALUE'}}|[{'record_field',126,{'atom',126,'objectDigestInfo'},{'atom',126,'asn1_NOVALUE'}}]]],[]}],
		%% Line 128
		'type' =
		    %% Line 128
		    [{{'record','AttributeCertificateInfo'},[{'record_field',129,{'atom',129,'version'}}|[{'record_field',129,{'atom',129,'holder'}}|[{'record_field',129,{'atom',129,'issuer'}}|[{'record_field',129,{'atom',129,'signature'}}|[{'record_field',129,{'atom',129,'serialNumber'}}|[{'record_field',129,{'atom',129,'attrCertValidityPeriod'}}|[{'record_field',129,{'atom',129,'attributes'}}|[{'record_field',129,{'atom',129,'issuerUniqueID'},{'atom',129,'asn1_NOVALUE'}}|[{'record_field',129,{'atom',129,'extensions'},{'atom',129,'asn1_NOVALUE'}}]]]]]]]]],[]}],
		%% Line 131
		'type' =
		    %% Line 131
		    [{{'record','AttributeCertificate'},[{'record_field',132,{'atom',132,'acinfo'}}|[{'record_field',132,{'atom',132,'signatureAlgorithm'}}|[{'record_field',132,{'atom',132,'signatureValue'}}]]],[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{{'record','IssuingDistributionPoint'},[{'record_field',135,{'atom',135,'distributionPoint'},{'atom',135,'asn1_NOVALUE'}}|[{'record_field',135,{'atom',135,'onlyContainsUserCerts'},{'atom',135,'asn1_DEFAULT'}}|[{'record_field',135,{'atom',135,'onlyContainsCACerts'},{'atom',135,'asn1_DEFAULT'}}|[{'record_field',135,{'atom',135,'onlySomeReasons'},{'atom',135,'asn1_NOVALUE'}}|[{'record_field',135,{'atom',135,'indirectCRL'},{'atom',135,'asn1_DEFAULT'}}|[{'record_field',135,{'atom',135,'onlyContainsAttributeCerts'},{'atom',135,'asn1_DEFAULT'}}]]]]]],[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','AccessDescription'},[{'record_field',138,{'atom',138,'accessMethod'}}|[{'record_field',138,{'atom',138,'accessLocation'}}]],[]}],
		%% Line 140
		'type' =
		    %% Line 140
		    [{{'record','DistributionPoint'},[{'record_field',141,{'atom',141,'distributionPoint'},{'atom',141,'asn1_NOVALUE'}}|[{'record_field',141,{'atom',141,'reasons'},{'atom',141,'asn1_NOVALUE'}}|[{'record_field',141,{'atom',141,'cRLIssuer'},{'atom',141,'asn1_NOVALUE'}}]]],[]}],
		%% Line 143
		'type' =
		    %% Line 143
		    [{{'record','PolicyConstraints'},[{'record_field',144,{'atom',144,'requireExplicitPolicy'},{'atom',144,'asn1_NOVALUE'}}|[{'record_field',144,{'atom',144,'inhibitPolicyMapping'},{'atom',144,'asn1_NOVALUE'}}]],[]}],
		%% Line 146
		'type' =
		    %% Line 146
		    [{{'record','GeneralSubtree'},[{'record_field',147,{'atom',147,'base'}}|[{'record_field',147,{'atom',147,'minimum'},{'atom',147,'asn1_DEFAULT'}}|[{'record_field',147,{'atom',147,'maximum'},{'atom',147,'asn1_NOVALUE'}}]]],[]}],
		%% Line 149
		'type' =
		    %% Line 149
		    [{{'record','NameConstraints'},[{'record_field',150,{'atom',150,'permittedSubtrees'},{'atom',150,'asn1_NOVALUE'}}|[{'record_field',150,{'atom',150,'excludedSubtrees'},{'atom',150,'asn1_NOVALUE'}}]],[]}],
		%% Line 152
		'type' =
		    %% Line 152
		    [{{'record','BasicConstraints'},[{'record_field',153,{'atom',153,'cA'},{'atom',153,'asn1_DEFAULT'}}|[{'record_field',153,{'atom',153,'pathLenConstraint'},{'atom',153,'asn1_NOVALUE'}}]],[]}],
		%% Line 155
		'type' =
		    %% Line 155
		    [{{'record','EDIPartyName'},[{'record_field',156,{'atom',156,'nameAssigner'},{'atom',156,'asn1_NOVALUE'}}|[{'record_field',156,{'atom',156,'partyName'}}]],[]}],
		%% Line 158
		'type' =
		    %% Line 158
		    [{{'record','AnotherName'},[{'record_field',159,{'atom',159,'type-id'}}|[{'record_field',159,{'atom',159,'value'}}]],[]}],
		%% Line 161
		'type' =
		    %% Line 161
		    [{{'record','PolicyMappings_SEQOF'},[{'record_field',162,{'atom',162,'issuerDomainPolicy'}}|[{'record_field',162,{'atom',162,'subjectDomainPolicy'}}]],[]}],
		%% Line 164
		'type' =
		    %% Line 164
		    [{{'record','NoticeReference'},[{'record_field',165,{'atom',165,'organization'}}|[{'record_field',165,{'atom',165,'noticeNumbers'}}]],[]}],
		%% Line 167
		'type' =
		    %% Line 167
		    [{{'record','UserNotice'},[{'record_field',168,{'atom',168,'noticeRef'},{'atom',168,'asn1_NOVALUE'}}|[{'record_field',168,{'atom',168,'explicitText'},{'atom',168,'asn1_NOVALUE'}}]],[]}],
		%% Line 170
		'type' =
		    %% Line 170
		    [{{'record','PolicyQualifierInfo'},[{'record_field',171,{'atom',171,'policyQualifierId'}}|[{'record_field',171,{'atom',171,'qualifier'}}]],[]}],
		%% Line 173
		'type' =
		    %% Line 173
		    [{{'record','PolicyInformation'},[{'record_field',174,{'atom',174,'policyIdentifier'}}|[{'record_field',174,{'atom',174,'policyQualifiers'},{'atom',174,'asn1_NOVALUE'}}]],[]}],
		%% Line 176
		'type' =
		    %% Line 176
		    [{{'record','PrivateKeyUsagePeriod'},[{'record_field',177,{'atom',177,'notBefore'},{'atom',177,'asn1_NOVALUE'}}|[{'record_field',177,{'atom',177,'notAfter'},{'atom',177,'asn1_NOVALUE'}}]],[]}],
		%% Line 179
		'type' =
		    %% Line 179
		    [{{'record','AuthorityKeyIdentifier'},[{'record_field',180,{'atom',180,'keyIdentifier'},{'atom',180,'asn1_NOVALUE'}}|[{'record_field',180,{'atom',180,'authorityCertIssuer'},{'atom',180,'asn1_NOVALUE'}}|[{'record_field',180,{'atom',180,'authorityCertSerialNumber'},{'atom',180,'asn1_NOVALUE'}}]]],[]}],
		%% Line 182
		'type' =
		    %% Line 182
		    [{{'record','EncryptedData'},[{'record_field',183,{'atom',183,'version'}}|[{'record_field',183,{'atom',183,'encryptedContentInfo'}}]],[]}],
		%% Line 185
		'type' =
		    %% Line 185
		    [{{'record','DigestedData'},[{'record_field',186,{'atom',186,'version'}}|[{'record_field',186,{'atom',186,'digestAlgorithm'}}|[{'record_field',186,{'atom',186,'contentInfo'}}|[{'record_field',186,{'atom',186,'digest'}}]]]],[]}],
		%% Line 188
		'type' =
		    %% Line 188
		    [{{'record','SignedAndEnvelopedData'},[{'record_field',189,{'atom',189,'version'}}|[{'record_field',189,{'atom',189,'recipientInfos'}}|[{'record_field',189,{'atom',189,'digestAlgorithms'}}|[{'record_field',189,{'atom',189,'encryptedContentInfo'}}|[{'record_field',189,{'atom',189,'certificates'},{'atom',189,'asn1_NOVALUE'}}|[{'record_field',189,{'atom',189,'crls'},{'atom',189,'asn1_NOVALUE'}}|[{'record_field',189,{'atom',189,'signerInfos'}}]]]]]]],[]}],
		%% Line 191
		'type' =
		    %% Line 191
		    [{{'record','RecipientInfo'},[{'record_field',192,{'atom',192,'version'}}|[{'record_field',192,{'atom',192,'issuerAndSerialNumber'}}|[{'record_field',192,{'atom',192,'keyEncryptionAlgorithm'}}|[{'record_field',192,{'atom',192,'encryptedKey'}}]]]],[]}],
		%% Line 194
		'type' =
		    %% Line 194
		    [{{'record','EncryptedContentInfo'},[{'record_field',195,{'atom',195,'contentType'}}|[{'record_field',195,{'atom',195,'contentEncryptionAlgorithm'}}|[{'record_field',195,{'atom',195,'encryptedContent'},{'atom',195,'asn1_NOVALUE'}}]]],[]}],
		%% Line 197
		'type' =
		    %% Line 197
		    [{{'record','EnvelopedData'},[{'record_field',198,{'atom',198,'version'}}|[{'record_field',198,{'atom',198,'recipientInfos'}}|[{'record_field',198,{'atom',198,'encryptedContentInfo'}}]]],[]}],
		%% Line 200
		'type' =
		    %% Line 200
		    [{{'record','DigestInfoPKCS-7'},[{'record_field',201,{'atom',201,'digestAlgorithm'}}|[{'record_field',201,{'atom',201,'digest'}}]],[]}],
		%% Line 203
		'type' =
		    %% Line 203
		    [{{'record','SignerInfo'},[{'record_field',204,{'atom',204,'version'}}|[{'record_field',204,{'atom',204,'issuerAndSerialNumber'}}|[{'record_field',204,{'atom',204,'digestAlgorithm'}}|[{'record_field',204,{'atom',204,'authenticatedAttributes'},{'atom',204,'asn1_NOVALUE'}}|[{'record_field',204,{'atom',204,'digestEncryptionAlgorithm'}}|[{'record_field',204,{'atom',204,'encryptedDigest'}}|[{'record_field',204,{'atom',204,'unauthenticatedAttributes'},{'atom',204,'asn1_NOVALUE'}}]]]]]]],[]}],
		%% Line 206
		'type' =
		    %% Line 206
		    [{{'record','SignerInfo_unauthenticatedAttributes_uaSet_SETOF'},[{'record_field',207,{'atom',207,'type'}}|[{'record_field',207,{'atom',207,'values'}}]],[]}],
		%% Line 209
		'type' =
		    %% Line 209
		    [{{'record','SignerInfo_unauthenticatedAttributes_uaSequence_SEQOF'},[{'record_field',210,{'atom',210,'type'}}|[{'record_field',210,{'atom',210,'values'}}]],[]}],
		%% Line 212
		'type' =
		    %% Line 212
		    [{{'record','SignedData'},[{'record_field',213,{'atom',213,'version'}}|[{'record_field',213,{'atom',213,'digestAlgorithms'}}|[{'record_field',213,{'atom',213,'contentInfo'}}|[{'record_field',213,{'atom',213,'certificates'},{'atom',213,'asn1_NOVALUE'}}|[{'record_field',213,{'atom',213,'crls'},{'atom',213,'asn1_NOVALUE'}}|[{'record_field',213,{'atom',213,'signerInfos'}}]]]]]],[]}],
		%% Line 215
		'type' =
		    %% Line 215
		    [{{'record','ContentInfo'},[{'record_field',216,{'atom',216,'contentType'}}|[{'record_field',216,{'atom',216,'content'},{'atom',216,'asn1_NOVALUE'}}]],[]}],
		%% Line 218
		'type' =
		    %% Line 218
		    [{{'record','KeyEncryptionAlgorithmIdentifier'},[{'record_field',219,{'atom',219,'algorithm'}}|[{'record_field',219,{'atom',219,'parameters'},{'atom',219,'asn1_NOVALUE'}}]],[]}],
		%% Line 221
		'type' =
		    %% Line 221
		    [{{'record','IssuerAndSerialNumber'},[{'record_field',222,{'atom',222,'issuer'}}|[{'record_field',222,{'atom',222,'serialNumber'}}]],[]}],
		%% Line 224
		'type' =
		    %% Line 224
		    [{{'record','DigestEncryptionAlgorithmIdentifier'},[{'record_field',225,{'atom',225,'algorithm'}}|[{'record_field',225,{'atom',225,'parameters'},{'atom',225,'asn1_NOVALUE'}}]],[]}],
		%% Line 227
		'type' =
		    %% Line 227
		    [{{'record','DigestAlgorithmIdentifier'},[{'record_field',228,{'atom',228,'algorithm'}}|[{'record_field',228,{'atom',228,'parameters'},{'atom',228,'asn1_NOVALUE'}}]],[]}],
		%% Line 230
		'type' =
		    %% Line 230
		    [{{'record','ContentEncryptionAlgorithmIdentifier'},[{'record_field',231,{'atom',231,'algorithm'}}|[{'record_field',231,{'atom',231,'parameters'},{'atom',231,'asn1_NOVALUE'}}]],[]}],
		%% Line 233
		'type' =
		    %% Line 233
		    [{{'record','SignerInfoAuthenticatedAttributes_aaSet_SETOF'},[{'record_field',234,{'atom',234,'type'}}|[{'record_field',234,{'atom',234,'values'}}]],[]}],
		%% Line 236
		'type' =
		    %% Line 236
		    [{{'record','SignerInfoAuthenticatedAttributes_aaSequence_SEQOF'},[{'record_field',237,{'atom',237,'type'}}|[{'record_field',237,{'atom',237,'values'}}]],[]}],
		%% Line 239
		'type' =
		    %% Line 239
		    [{{'record','CertificationRequest'},[{'record_field',240,{'atom',240,'certificationRequestInfo'}}|[{'record_field',240,{'atom',240,'signatureAlgorithm'}}|[{'record_field',240,{'atom',240,'signature'}}]]],[]}],
		%% Line 242
		'type' =
		    %% Line 242
		    [{{'record','CertificationRequest_signatureAlgorithm'},[{'record_field',243,{'atom',243,'algorithm'}}|[{'record_field',243,{'atom',243,'parameters'},{'atom',243,'asn1_NOVALUE'}}]],[]}],
		%% Line 245
		'type' =
		    %% Line 245
		    [{{'record','CertificationRequestInfo'},[{'record_field',246,{'atom',246,'version'}}|[{'record_field',246,{'atom',246,'subject'}}|[{'record_field',246,{'atom',246,'subjectPKInfo'}}|[{'record_field',246,{'atom',246,'attributes'}}]]]],[]}],
		%% Line 248
		'type' =
		    %% Line 248
		    [{{'record','CertificationRequestInfo_subjectPKInfo'},[{'record_field',249,{'atom',249,'algorithm'}}|[{'record_field',249,{'atom',249,'subjectPublicKey'}}]],[]}],
		%% Line 251
		'type' =
		    %% Line 251
		    [{{'record','CertificationRequestInfo_subjectPKInfo_algorithm'},[{'record_field',252,{'atom',252,'algorithm'}}|[{'record_field',252,{'atom',252,'parameters'},{'atom',252,'asn1_NOVALUE'}}]],[]}],
		%% Line 254
		'type' =
		    %% Line 254
		    [{{'record','CertificationRequestInfo_attributes_SETOF'},[{'record_field',255,{'atom',255,'type'}}|[{'record_field',255,{'atom',255,'values'}}]],[]}],
		%% Line 257
		'type' =
		    %% Line 257
		    [{{'record','TeletexDomainDefinedAttribute'},[{'record_field',258,{'atom',258,'type'}}|[{'record_field',258,{'atom',258,'value'}}]],[]}],
		%% Line 260
		'type' =
		    %% Line 260
		    [{{'record','PresentationAddress'},[{'record_field',261,{'atom',261,'pSelector'},{'atom',261,'asn1_NOVALUE'}}|[{'record_field',261,{'atom',261,'sSelector'},{'atom',261,'asn1_NOVALUE'}}|[{'record_field',261,{'atom',261,'tSelector'},{'atom',261,'asn1_NOVALUE'}}|[{'record_field',261,{'atom',261,'nAddresses'}}]]]],[]}],
		%% Line 263
		'type' =
		    %% Line 263
		    [{{'record','ExtendedNetworkAddress_e163-4-address'},[{'record_field',264,{'atom',264,'number'}}|[{'record_field',264,{'atom',264,'sub-address'},{'atom',264,'asn1_NOVALUE'}}]],[]}],
		%% Line 266
		'type' =
		    %% Line 266
		    [{{'record','PDSParameter'},[{'record_field',267,{'atom',267,'printable-string'},{'atom',267,'asn1_NOVALUE'}}|[{'record_field',267,{'atom',267,'teletex-string'},{'atom',267,'asn1_NOVALUE'}}]],[]}],
		%% Line 269
		'type' =
		    %% Line 269
		    [{{'record','UnformattedPostalAddress'},[{'record_field',270,{'atom',270,'printable-address'},{'atom',270,'asn1_NOVALUE'}}|[{'record_field',270,{'atom',270,'teletex-string'},{'atom',270,'asn1_NOVALUE'}}]],[]}],
		%% Line 272
		'type' =
		    %% Line 272
		    [{{'record','TeletexPersonalName'},[{'record_field',273,{'atom',273,'surname'}}|[{'record_field',273,{'atom',273,'given-name'},{'atom',273,'asn1_NOVALUE'}}|[{'record_field',273,{'atom',273,'initials'},{'atom',273,'asn1_NOVALUE'}}|[{'record_field',273,{'atom',273,'generation-qualifier'},{'atom',273,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 275
		'type' =
		    %% Line 275
		    [{{'record','ExtensionAttribute'},[{'record_field',276,{'atom',276,'extension-attribute-type'}}|[{'record_field',276,{'atom',276,'extension-attribute-value'}}]],[]}],
		%% Line 278
		'type' =
		    %% Line 278
		    [{{'record','BuiltInDomainDefinedAttribute'},[{'record_field',279,{'atom',279,'type'}}|[{'record_field',279,{'atom',279,'value'}}]],[]}],
		%% Line 281
		'type' =
		    %% Line 281
		    [{{'record','PersonalName'},[{'record_field',282,{'atom',282,'surname'}}|[{'record_field',282,{'atom',282,'given-name'},{'atom',282,'asn1_NOVALUE'}}|[{'record_field',282,{'atom',282,'initials'},{'atom',282,'asn1_NOVALUE'}}|[{'record_field',282,{'atom',282,'generation-qualifier'},{'atom',282,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 284
		'type' =
		    %% Line 284
		    [{{'record','BuiltInStandardAttributes'},[{'record_field',285,{'atom',285,'country-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'administration-domain-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'network-address'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'terminal-identifier'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'private-domain-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'organization-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'numeric-user-identifier'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'personal-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'organizational-unit-names'},{'atom',285,'asn1_NOVALUE'}}]]]]]]]]],[]}],
		%% Line 287
		'type' =
		    %% Line 287
		    [{{'record','ORAddress'},[{'record_field',288,{'atom',288,'built-in-standard-attributes'}}|[{'record_field',288,{'atom',288,'built-in-domain-defined-attributes'},{'atom',288,'asn1_NOVALUE'}}|[{'record_field',288,{'atom',288,'extension-attributes'},{'atom',288,'asn1_NOVALUE'}}]]],[]}],
		%% Line 290
		'type' =
		    %% Line 290
		    [{{'record','AlgorithmIdentifier'},[{'record_field',291,{'atom',291,'algorithm'}}|[{'record_field',291,{'atom',291,'parameters'},{'atom',291,'asn1_NOVALUE'}}]],[]}],
		%% Line 293
		'type' =
		    %% Line 293
		    [{{'record','TBSCertList'},[{'record_field',294,{'atom',294,'version'},{'atom',294,'asn1_NOVALUE'}}|[{'record_field',294,{'atom',294,'signature'}}|[{'record_field',294,{'atom',294,'issuer'}}|[{'record_field',294,{'atom',294,'thisUpdate'}}|[{'record_field',294,{'atom',294,'nextUpdate'},{'atom',294,'asn1_NOVALUE'}}|[{'record_field',294,{'atom',294,'revokedCertificates'},{'atom',294,'asn1_NOVALUE'}}|[{'record_field',294,{'atom',294,'crlExtensions'},{'atom',294,'asn1_NOVALUE'}}]]]]]]],[]}],
		%% Line 296
		'type' =
		    %% Line 296
		    [{{'record','TBSCertList_revokedCertificates_SEQOF'},[{'record_field',297,{'atom',297,'userCertificate'}}|[{'record_field',297,{'atom',297,'revocationDate'}}|[{'record_field',297,{'atom',297,'crlEntryExtensions'},{'atom',297,'asn1_NOVALUE'}}]]],[]}],
		%% Line 299
		'type' =
		    %% Line 299
		    [{{'record','CertificateList'},[{'record_field',300,{'atom',300,'tbsCertList'}}|[{'record_field',300,{'atom',300,'signatureAlgorithm'}}|[{'record_field',300,{'atom',300,'signature'}}]]],[]}],
		%% Line 302
		'type' =
		    %% Line 302
		    [{{'record','Extension'},[{'record_field',303,{'atom',303,'extnID'}}|[{'record_field',303,{'atom',303,'critical'},{'atom',303,'asn1_DEFAULT'}}|[{'record_field',303,{'atom',303,'extnValue'}}]]],[]}],
		%% Line 305
		'type' =
		    %% Line 305
		    [{{'record','SubjectPublicKeyInfo'},[{'record_field',306,{'atom',306,'algorithm'}}|[{'record_field',306,{'atom',306,'subjectPublicKey'}}]],[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{{'record','Validity'},[{'record_field',309,{'atom',309,'notBefore'}}|[{'record_field',309,{'atom',309,'notAfter'}}]],[]}],
		%% Line 311
		'type' =
		    %% Line 311
		    [{{'record','TBSCertificate'},[{'record_field',312,{'atom',312,'version'},{'atom',312,'asn1_DEFAULT'}}|[{'record_field',312,{'atom',312,'serialNumber'}}|[{'record_field',312,{'atom',312,'signature'}}|[{'record_field',312,{'atom',312,'issuer'}}|[{'record_field',312,{'atom',312,'validity'}}|[{'record_field',312,{'atom',312,'subject'}}|[{'record_field',312,{'atom',312,'subjectPublicKeyInfo'}}|[{'record_field',312,{'atom',312,'issuerUniqueID'},{'atom',312,'asn1_NOVALUE'}}|[{'record_field',312,{'atom',312,'subjectUniqueID'},{'atom',312,'asn1_NOVALUE'}}|[{'record_field',312,{'atom',312,'extensions'},{'atom',312,'asn1_NOVALUE'}}]]]]]]]]]],[]}],
		%% Line 314
		'type' =
		    %% Line 314
		    [{{'record','Certificate'},[{'record_field',315,{'atom',315,'tbsCertificate'}}|[{'record_field',315,{'atom',315,'signatureAlgorithm'}}|[{'record_field',315,{'atom',315,'signature'}}]]],[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{{'record','AttributeTypeAndValue'},[{'record_field',318,{'atom',318,'type'}}|[{'record_field',318,{'atom',318,'value'}}]],[]}],
		%% Line 320
		'type' =
		    %% Line 320
		    [{{'record','Attribute'},[{'record_field',321,{'atom',321,'type'}}|[{'record_field',321,{'atom',321,'values'}}]],[]}],
		%% Line 323
		'type' =
		    %% Line 323
		    [{{'record','Extension-Any'},[{'record_field',324,{'atom',324,'extnID'}}|[{'record_field',324,{'atom',324,'critical'},{'atom',324,'asn1_DEFAULT'}}|[{'record_field',324,{'atom',324,'extnValue'}}]]],[]}],
		%% Line 326
		'type' =
		    %% Line 326
		    [{{'record','OTPExtension'},[{'record_field',327,{'atom',327,'extnID'}}|[{'record_field',327,{'atom',327,'critical'},{'atom',327,'asn1_DEFAULT'}}|[{'record_field',327,{'atom',327,'extnValue'}}]]],[]}],
		%% Line 329
		'type' =
		    %% Line 329
		    [{{'record','OTPExtensionAttribute'},[{'record_field',330,{'atom',330,'extensionAttributeType'}}|[{'record_field',330,{'atom',330,'extensionAttributeValue'}}]],[]}],
		%% Line 332
		'type' =
		    %% Line 332
		    [{{'record','OTPCharacteristic-two'},[{'record_field',333,{'atom',333,'m'}}|[{'record_field',333,{'atom',333,'basis'}}|[{'record_field',333,{'atom',333,'parameters'}}]]],[]}],
		%% Line 335
		'type' =
		    %% Line 335
		    [{{'record','OTPFieldID'},[{'record_field',336,{'atom',336,'fieldType'}}|[{'record_field',336,{'atom',336,'parameters'}}]],[]}],
		%% Line 338
		'type' =
		    %% Line 338
		    [{{'record','PublicKeyAlgorithm'},[{'record_field',339,{'atom',339,'algorithm'}}|[{'record_field',339,{'atom',339,'parameters'},{'atom',339,'asn1_NOVALUE'}}]],[]}],
		%% Line 341
		'type' =
		    %% Line 341
		    [{{'record','SignatureAlgorithm-Any'},[{'record_field',342,{'atom',342,'algorithm'}}|[{'record_field',342,{'atom',342,'parameters'},{'atom',342,'asn1_NOVALUE'}}]],[]}],
		%% Line 344
		'type' =
		    %% Line 344
		    [{{'record','SignatureAlgorithm'},[{'record_field',345,{'atom',345,'algorithm'}}|[{'record_field',345,{'atom',345,'parameters'},{'atom',345,'asn1_NOVALUE'}}]],[]}],
		%% Line 347
		'type' =
		    %% Line 347
		    [{{'record','OTPSubjectPublicKeyInfo-Any'},[{'record_field',348,{'atom',348,'algorithm'}}|[{'record_field',348,{'atom',348,'subjectPublicKey'}}]],[]}],
		%% Line 350
		'type' =
		    %% Line 350
		    [{{'record','OTPSubjectPublicKeyInfo'},[{'record_field',351,{'atom',351,'algorithm'}}|[{'record_field',351,{'atom',351,'subjectPublicKey'}}]],[]}],
		%% Line 353
		'type' =
		    %% Line 353
		    [{{'record','OTPOLDSubjectPublicKeyInfo'},[{'record_field',354,{'atom',354,'algorithm'}}|[{'record_field',354,{'atom',354,'subjectPublicKey'}}]],[]}],
		%% Line 356
		'type' =
		    %% Line 356
		    [{{'record','OTPOLDSubjectPublicKeyInfo_algorithm'},[{'record_field',357,{'atom',357,'algo'}}|[{'record_field',357,{'atom',357,'parameters'},{'atom',357,'asn1_NOVALUE'}}]],[]}],
		%% Line 359
		'type' =
		    %% Line 359
		    [{{'record','OTPAttributeTypeAndValue'},[{'record_field',360,{'atom',360,'type'}}|[{'record_field',360,{'atom',360,'value'}}]],[]}],
		%% Line 362
		'type' =
		    %% Line 362
		    [{{'record','OTPTBSCertificate'},[{'record_field',363,{'atom',363,'version'},{'atom',363,'asn1_DEFAULT'}}|[{'record_field',363,{'atom',363,'serialNumber'}}|[{'record_field',363,{'atom',363,'signature'}}|[{'record_field',363,{'atom',363,'issuer'}}|[{'record_field',363,{'atom',363,'validity'}}|[{'record_field',363,{'atom',363,'subject'}}|[{'record_field',363,{'atom',363,'subjectPublicKeyInfo'}}|[{'record_field',363,{'atom',363,'issuerUniqueID'},{'atom',363,'asn1_NOVALUE'}}|[{'record_field',363,{'atom',363,'subjectUniqueID'},{'atom',363,'asn1_NOVALUE'}}|[{'record_field',363,{'atom',363,'extensions'},{'atom',363,'asn1_NOVALUE'}}]]]]]]]]]],[]}],
		%% Line 365
		'type' =
		    %% Line 365
		    [{{'record','OTPCertificate'},[{'record_field',366,{'atom',366,'tbsCertificate'}}|[{'record_field',366,{'atom',366,'signatureAlgorithm'}}|[{'record_field',366,{'atom',366,'signature'}}]]],[]}],
		%% Line 11
		'type' =
		    %% Line 11
		    [{{'record','AlgorithmIdentifierPKCS5v2-0'},[{'record_field',12,{'atom',12,'algorithm'}}|[{'record_field',12,{'atom',12,'parameters'},{'atom',12,'asn1_NOVALUE'}}]],[]}],
		%% Line 14
		'type' =
		    %% Line 14
		    [{{'record','PKAttribute'},[{'record_field',15,{'atom',15,'type'}}|[{'record_field',15,{'atom',15,'values'}}|[{'record_field',15,{'atom',15,'valuesWithContext'},{'atom',15,'asn1_NOVALUE'}}]]],[]}],
		%% Line 17
		'type' =
		    %% Line 17
		    [{{'record','PKAttribute_valuesWithContext_SETOF'},[{'record_field',18,{'atom',18,'value'}}|[{'record_field',18,{'atom',18,'contextList'}}]],[]}],
		%% Line 20
		'type' =
		    %% Line 20
		    [{{'record','AlgorithmIdentifierPKCS-8'},[{'record_field',21,{'atom',21,'algorithm'}}|[{'record_field',21,{'atom',21,'parameters'},{'atom',21,'asn1_NOVALUE'}}]],[]}],
		%% Line 23
		'type' =
		    %% Line 23
		    [{{'record','RC5-CBC-Parameters'},[{'record_field',24,{'atom',24,'version'}}|[{'record_field',24,{'atom',24,'rounds'}}|[{'record_field',24,{'atom',24,'blockSizeInBits'}}|[{'record_field',24,{'atom',24,'iv'},{'atom',24,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','RC2-CBC-Parameter'},[{'record_field',27,{'atom',27,'rc2ParameterVersion'},{'atom',27,'asn1_NOVALUE'}}|[{'record_field',27,{'atom',27,'iv'}}]],[]}],
		%% Line 29
		'type' =
		    %% Line 29
		    [{{'record','PBMAC1-params'},[{'record_field',30,{'atom',30,'keyDerivationFunc'}}|[{'record_field',30,{'atom',30,'messageAuthScheme'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','PBMAC1-params_keyDerivationFunc'},[{'record_field',33,{'atom',33,'algorithm'}}|[{'record_field',33,{'atom',33,'parameters'},{'atom',33,'asn1_NOVALUE'}}]],[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','PBMAC1-params_messageAuthScheme'},[{'record_field',36,{'atom',36,'algorithm'}}|[{'record_field',36,{'atom',36,'parameters'},{'atom',36,'asn1_NOVALUE'}}]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','PBES2-params'},[{'record_field',39,{'atom',39,'keyDerivationFunc'}}|[{'record_field',39,{'atom',39,'encryptionScheme'}}]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','PBES2-params_keyDerivationFunc'},[{'record_field',42,{'atom',42,'algorithm'}}|[{'record_field',42,{'atom',42,'parameters'},{'atom',42,'asn1_NOVALUE'}}]],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','PBES2-params_encryptionScheme'},[{'record_field',45,{'atom',45,'algorithm'}}|[{'record_field',45,{'atom',45,'parameters'},{'atom',45,'asn1_NOVALUE'}}]],[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{{'record','PBEParameter'},[{'record_field',48,{'atom',48,'salt'}}|[{'record_field',48,{'atom',48,'iterationCount'}}]],[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','PBKDF2-params'},[{'record_field',51,{'atom',51,'salt'}}|[{'record_field',51,{'atom',51,'iterationCount'}}|[{'record_field',51,{'atom',51,'keyLength'},{'atom',51,'asn1_NOVALUE'}}|[{'record_field',51,{'atom',51,'prf'},{'atom',51,'asn1_DEFAULT'}}]]]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{{'record','PBKDF2-params_salt_otherSource'},[{'record_field',54,{'atom',54,'algorithm'}}|[{'record_field',54,{'atom',54,'parameters'},{'atom',54,'asn1_NOVALUE'}}]],[]}],
		%% Line 56
		'type' =
		    %% Line 56
		    [{{'record','PBKDF2-params_prf'},[{'record_field',57,{'atom',57,'algorithm'}}|[{'record_field',57,{'atom',57,'parameters'},{'atom',57,'asn1_NOVALUE'}}]],[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{{'record','Context'},[{'record_field',60,{'atom',60,'contextType'}}|[{'record_field',60,{'atom',60,'contextValues'}}|[{'record_field',60,{'atom',60,'fallback'},{'atom',60,'asn1_DEFAULT'}}]]],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{{'record','EncryptedPrivateKeyInfo'},[{'record_field',63,{'atom',63,'encryptionAlgorithm'}}|[{'record_field',63,{'atom',63,'encryptedData'}}]],[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','EncryptedPrivateKeyInfo_encryptionAlgorithm'},[{'record_field',66,{'atom',66,'algorithm'}}|[{'record_field',66,{'atom',66,'parameters'},{'atom',66,'asn1_NOVALUE'}}]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','Attributes_SETOF'},[{'record_field',69,{'atom',69,'type'}}|[{'record_field',69,{'atom',69,'values'}}|[{'record_field',69,{'atom',69,'valuesWithContext'},{'atom',69,'asn1_NOVALUE'}}]]],[]}],
		%% Line 71
		'type' =
		    %% Line 71
		    [{{'record','Attributes_SETOF_valuesWithContext_SETOF'},[{'record_field',72,{'atom',72,'value'}}|[{'record_field',72,{'atom',72,'contextList'}}]],[]}],
		%% Line 74
		'type' =
		    %% Line 74
		    [{{'record','PrivateKeyInfo'},[{'record_field',75,{'atom',75,'version'}}|[{'record_field',75,{'atom',75,'privateKeyAlgorithm'}}|[{'record_field',75,{'atom',75,'privateKey'}}|[{'record_field',75,{'atom',75,'attributes'},{'atom',75,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','PrivateKeyInfo_privateKeyAlgorithm'},[{'record_field',78,{'atom',78,'algorithm'}}|[{'record_field',78,{'atom',78,'parameters'},{'atom',78,'asn1_NOVALUE'}}]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','SubjectPublicKeyInfoAlgorithm'},[{'record_field',29,{'atom',29,'algorithm'}}|[{'record_field',30,{'atom',30,'parameters'},{'atom',30,'asn1_NOVALUE'}}]],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','path_validation_state'},[{'record_field',44,{'atom',44,'valid_policy_tree'}}|[{'record_field',45,{'atom',45,'explicit_policy'}}|[{'record_field',46,{'atom',46,'inhibit_any_policy'}}|[{'record_field',47,{'atom',47,'policy_mapping'}}|[{'record_field',48,{'atom',48,'cert_num'}}|[{'record_field',49,{'atom',49,'last_cert'},{'atom',49,'false'}}|[{'record_field',50,{'atom',50,'permitted_subtrees'},{'atom',50,'no_constraints'}}|[{'record_field',51,{'atom',51,'excluded_subtrees'},{'nil',51}}|[{'record_field',52,{'atom',52,'working_public_key_algorithm'}}|[{'record_field',53,{'atom',53,'working_public_key'}}|[{'record_field',54,{'atom',54,'working_public_key_parameters'}}|[{'record_field',55,{'atom',55,'working_issuer_name'}}|[{'record_field',56,{'atom',56,'max_path_length'}}|[{'record_field',57,{'atom',57,'verify_fun'}}|[{'record_field',58,{'atom',58,'user_state'}}]]]]]]]]]]]]]]],[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','policy_tree_node'},[{'record_field',62,{'atom',62,'valid_policy'}}|[{'record_field',63,{'atom',63,'qualifier_set'}}|[{'record_field',64,{'atom',64,'criticality_indicator'}}|[{'record_field',65,{'atom',65,'expected_policy_set'}}]]]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','revoke_state'},[{'record_field',69,{'atom',69,'reasons_mask'}}|[{'record_field',70,{'atom',70,'cert_status'}}|[{'record_field',71,{'atom',71,'interim_reasons_mask'}}|[{'record_field',72,{'atom',72,'valid_ext'}}]]]],[]}],
		%% Line 75
		'type' =
		    %% Line 75
		    [{{'record','ECPoint'},[{'record_field',76,{'atom',76,'point'}}],[]}],
		%% Line 64
		'type' =
		    %% Line 64
		    [{{'record','ssh'},[{'record_field',68,{'atom',68,'role'}}|[{'record_field',69,{'atom',69,'peer'}}|[{'record_field',71,{'atom',71,'c_vsn'}}|[{'record_field',72,{'atom',72,'s_vsn'}}|[{'record_field',74,{'atom',74,'c_version'}}|[{'record_field',75,{'atom',75,'s_version'}}|[{'record_field',77,{'atom',77,'c_keyinit'}}|[{'record_field',78,{'atom',78,'s_keyinit'}}|[{'record_field',80,{'atom',80,'algorithms'}}|[{'record_field',82,{'atom',82,'kex'}}|[{'record_field',83,{'atom',83,'hkey'}}|[{'record_field',84,{'atom',84,'key_cb'}}|[{'record_field',85,{'atom',85,'io_cb'}}|[{'record_field',87,{'atom',87,'send_mac'},{'atom',87,'none'}}|[{'record_field',88,{'atom',88,'send_mac_key'}}|[{'record_field',89,{'atom',89,'send_mac_size'},{'integer',89,0}}|[{'record_field',91,{'atom',91,'recv_mac'},{'atom',91,'none'}}|[{'record_field',92,{'atom',92,'recv_mac_key'}}|[{'record_field',93,{'atom',93,'recv_mac_size'},{'integer',93,0}}|[{'record_field',95,{'atom',95,'encrypt'},{'atom',95,'none'}}|[{'record_field',96,{'atom',96,'encrypt_keys'}}|[{'record_field',97,{'atom',97,'encrypt_block_size'},{'integer',97,8}}|[{'record_field',98,{'atom',98,'encrypt_ctx'}}|[{'record_field',100,{'atom',100,'decrypt'},{'atom',100,'none'}}|[{'record_field',101,{'atom',101,'decrypt_keys'}}|[{'record_field',102,{'atom',102,'decrypt_block_size'},{'integer',102,8}}|[{'record_field',103,{'atom',103,'decrypt_ctx'}}|[{'record_field',105,{'atom',105,'compress'},{'atom',105,'none'}}|[{'record_field',106,{'atom',106,'compress_ctx'}}|[{'record_field',107,{'atom',107,'decompress'},{'atom',107,'none'}}|[{'record_field',108,{'atom',108,'decompress_ctx'}}|[{'record_field',110,{'atom',110,'c_lng'},{'atom',110,'none'}}|[{'record_field',111,{'atom',111,'s_lng'},{'atom',111,'none'}}|[{'record_field',113,{'atom',113,'user_ack'},{'atom',113,'true'}}|[{'record_field',114,{'atom',114,'timeout'},{'atom',114,'infinity'}}|[{'record_field',116,{'atom',116,'shared_secret'}}|[{'record_field',117,{'atom',117,'exchanged_hash'}}|[{'record_field',118,{'atom',118,'session_id'}}|[{'record_field',120,{'atom',120,'opts'},{'nil',120}}|[{'record_field',121,{'atom',121,'send_sequence'},{'integer',121,0}}|[{'record_field',122,{'atom',122,'recv_sequence'},{'integer',122,0}}|[{'record_field',123,{'atom',123,'keyex_key'}}|[{'record_field',124,{'atom',124,'keyex_info'}}|[{'record_field',127,{'atom',127,'user'}}|[{'record_field',128,{'atom',128,'service'}}|[{'record_field',129,{'atom',129,'userauth_quiet_mode'}}|[{'record_field',130,{'atom',130,'userauth_supported_methods'}}|[{'record_field',131,{'atom',131,'userauth_methods'}}|[{'record_field',132,{'atom',132,'userauth_preference'}}|[{'record_field',133,{'atom',133,'available_host_keys'}}|[{'record_field',134,{'atom',134,'authenticated'},{'atom',134,'false'}}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','alg'},[{'record_field',139,{'atom',139,'kex'}}|[{'record_field',140,{'atom',140,'hkey'}}|[{'record_field',141,{'atom',141,'send_mac'}}|[{'record_field',142,{'atom',142,'recv_mac'}}|[{'record_field',143,{'atom',143,'encrypt'}}|[{'record_field',144,{'atom',144,'decrypt'}}|[{'record_field',145,{'atom',145,'compress'}}|[{'record_field',146,{'atom',146,'decompress'}}|[{'record_field',147,{'atom',147,'c_lng'}}|[{'record_field',148,{'atom',148,'s_lng'}}]]]]]]]]]],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{{'record','ssh_key'},[{'record_field',153,{'atom',153,'type'}}|[{'record_field',154,{'atom',154,'public'}}|[{'record_field',155,{'atom',155,'private'}}|[{'record_field',156,{'atom',156,'comment'},{'string',156,[]}}]]]],[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','ssh_pty'},[{'record_field',159,{'atom',159,'term'},{'string',159,[]}}|[{'record_field',160,{'atom',160,'width'},{'integer',160,80}}|[{'record_field',161,{'atom',161,'height'},{'integer',161,25}}|[{'record_field',162,{'atom',162,'pixel_width'},{'integer',162,1024}}|[{'record_field',163,{'atom',163,'pixel_height'},{'integer',163,768}}|[{'record_field',164,{'atom',164,'modes'},{'bin',164,[]}}]]]]]],[]}],
		%% Line 24
		'type' =
		    %% Line 24
		    [{'channel_id',{'type',24,'integer',[]},[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{{'record','ssh_msg_global_request'},[{'record_field',57,{'atom',57,'name'}}|[{'record_field',58,{'atom',58,'want_reply'}}|[{'record_field',59,{'atom',59,'data'}}]]],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{{'record','ssh_msg_request_success'},[{'record_field',64,{'atom',64,'data'}}],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{{'record','ssh_msg_request_failure'},[],[]}],
		%% Line 72
		'type' =
		    %% Line 72
		    [{{'record','ssh_msg_channel_open'},[{'record_field',74,{'atom',74,'channel_type'}}|[{'record_field',75,{'atom',75,'sender_channel'}}|[{'record_field',76,{'atom',76,'initial_window_size'}}|[{'record_field',77,{'atom',77,'maximum_packet_size'}}|[{'record_field',78,{'atom',78,'data'}}]]]]],[]}],
		%% Line 81
		'type' =
		    %% Line 81
		    [{{'record','ssh_msg_channel_open_confirmation'},[{'record_field',83,{'atom',83,'recipient_channel'}}|[{'record_field',84,{'atom',84,'sender_channel'}}|[{'record_field',85,{'atom',85,'initial_window_size'}}|[{'record_field',86,{'atom',86,'maximum_packet_size'}}|[{'record_field',87,{'atom',87,'data'}}]]]]],[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{{'record','ssh_msg_channel_open_failure'},[{'record_field',103,{'atom',103,'recipient_channel'}}|[{'record_field',104,{'atom',104,'reason'}}|[{'record_field',105,{'atom',105,'description'}}|[{'record_field',106,{'atom',106,'lang'}}]]]],[]}],
		%% Line 110
		'type' =
		    %% Line 110
		    [{{'record','ssh_msg_channel_window_adjust'},[{'record_field',112,{'atom',112,'recipient_channel'}}|[{'record_field',113,{'atom',113,'bytes_to_add'}}]],[]}],
		%% Line 116
		'type' =
		    %% Line 116
		    [{{'record','ssh_msg_channel_data'},[{'record_field',118,{'atom',118,'recipient_channel'}}|[{'record_field',119,{'atom',119,'data'}}]],[]}],
		%% Line 129
		'type' =
		    %% Line 129
		    [{{'record','ssh_msg_channel_extended_data'},[{'record_field',131,{'atom',131,'recipient_channel'}}|[{'record_field',132,{'atom',132,'data_type_code'}}|[{'record_field',133,{'atom',133,'data'}}]]],[]}],
		%% Line 136
		'type' =
		    %% Line 136
		    [{{'record','ssh_msg_channel_eof'},[{'record_field',138,{'atom',138,'recipient_channel'}}],[]}],
		%% Line 141
		'type' =
		    %% Line 141
		    [{{'record','ssh_msg_channel_close'},[{'record_field',143,{'atom',143,'recipient_channel'}}],[]}],
		%% Line 147
		'type' =
		    %% Line 147
		    [{{'record','ssh_msg_channel_request'},[{'record_field',149,{'atom',149,'recipient_channel'}}|[{'record_field',150,{'atom',150,'request_type'}}|[{'record_field',151,{'atom',151,'want_reply'}}|[{'record_field',152,{'atom',152,'data'}}]]]],[]}],
		%% Line 156
		'type' =
		    %% Line 156
		    [{{'record','ssh_msg_channel_success'},[{'record_field',158,{'atom',158,'recipient_channel'}}],[]}],
		%% Line 162
		'type' =
		    %% Line 162
		    [{{'record','ssh_msg_channel_failure'},[{'record_field',164,{'atom',164,'recipient_channel'}}],[]}],
		%% Line 235
		'type' =
		    %% Line 235
		    [{{'record','channel'},[{'record_field',237,{'atom',237,'type'}}|[{'record_field',238,{'atom',238,'sys'}}|[{'record_field',239,{'atom',239,'user'}}|[{'record_field',240,{'atom',240,'flow_control'}}|[{'record_field',242,{'atom',242,'local_id'}}|[{'record_field',244,{'atom',244,'recv_window_size'}}|[{'record_field',245,{'atom',245,'recv_packet_size'}}|[{'record_field',246,{'atom',246,'recv_close'},{'atom',246,'false'}}|[{'record_field',248,{'atom',248,'remote_id'}}|[{'record_field',249,{'atom',249,'send_window_size'}}|[{'record_field',250,{'atom',250,'send_packet_size'}}|[{'record_field',251,{'atom',251,'sent_close'},{'atom',251,'false'}}|[{'record_field',252,{'atom',252,'send_buf'},{'nil',252}}]]]]]]]]]]]]],[]}],
		%% Line 255
		'type' =
		    %% Line 255
		    [{{'record','connection'},[{'record_field',256,{'atom',256,'requests'},{'nil',256}}|[{'record_field',257,{'atom',257,'channel_cache'}}|[{'record_field',258,{'atom',258,'port_bindings'}}|[{'record_field',259,{'atom',259,'channel_id_seed'}}|[{'record_field',260,{'atom',260,'cli_spec'}}|[{'record_field',261,{'atom',261,'address'}}|[{'record_field',262,{'atom',262,'port'}}|[{'record_field',263,{'atom',263,'options'}}|[{'record_field',264,{'atom',264,'exec'}}|[{'record_field',265,{'atom',265,'system_supervisor'}}|[{'record_field',266,{'atom',266,'sub_system_supervisor'}}|[{'record_field',267,{'atom',267,'connection_supervisor'}}]]]]]]]]]]]],[]}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{{'record','ssh_msg_userauth_request'},[{'record_field',39,{'atom',39,'user'}}|[{'record_field',40,{'atom',40,'service'}}|[{'record_field',41,{'atom',41,'method'}}|[{'record_field',42,{'atom',42,'data'}}]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','ssh_msg_userauth_failure'},[{'record_field',47,{'atom',47,'authentications'}}|[{'record_field',48,{'atom',48,'partial_success'}}]],[]}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{{'record','ssh_msg_userauth_success'},[],[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{{'record','ssh_msg_userauth_banner'},[{'record_field',57,{'atom',57,'message'}}|[{'record_field',58,{'atom',58,'language'}}]],[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','ssh_msg_userauth_passwd_changereq'},[{'record_field',63,{'atom',63,'prompt'}}|[{'record_field',64,{'atom',64,'languge'}}]],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{{'record','ssh_msg_userauth_pk_ok'},[{'record_field',69,{'atom',69,'algorithm_name'}}|[{'record_field',70,{'atom',70,'key_blob'}}]],[]}],
		%% Line 73
		'type' =
		    %% Line 73
		    [{{'record','ssh_msg_userauth_info_request'},[{'record_field',74,{'atom',74,'name'}}|[{'record_field',75,{'atom',75,'instruction'}}|[{'record_field',76,{'atom',76,'language_tag'}}|[{'record_field',77,{'atom',77,'num_prompts'}}|[{'record_field',78,{'atom',78,'data'}}]]]]],[]}],
		%% Line 80
		'type' =
		    %% Line 80
		    [{{'record','ssh_msg_userauth_info_response'},[{'record_field',81,{'atom',81,'num_responses'}}|[{'record_field',82,{'atom',82,'data'}}]],[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{{'record','ssh_msg_disconnect'},[{'record_field',54,{'atom',54,'code'}}|[{'record_field',55,{'atom',55,'description'}}|[{'record_field',56,{'atom',56,'language'}}]]],[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{{'record','ssh_msg_ignore'},[{'record_field',61,{'atom',61,'data'}}],[]}],
		%% Line 64
		'type' =
		    %% Line 64
		    [{{'record','ssh_msg_unimplemented'},[{'record_field',66,{'atom',66,'sequence'}}],[]}],
		%% Line 69
		'type' =
		    %% Line 69
		    [{{'record','ssh_msg_debug'},[{'record_field',71,{'atom',71,'always_display'}}|[{'record_field',72,{'atom',72,'message'}}|[{'record_field',73,{'atom',73,'language'}}]]],[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','ssh_msg_service_request'},[{'record_field',79,{'atom',79,'name'}}],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{{'record','ssh_msg_service_accept'},[{'record_field',84,{'atom',84,'name'}}],[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{{'record','ssh_msg_kexinit'},[{'record_field',89,{'atom',89,'cookie'}}|[{'record_field',90,{'atom',90,'kex_algorithms'}}|[{'record_field',91,{'atom',91,'server_host_key_algorithms'}}|[{'record_field',92,{'atom',92,'encryption_algorithms_client_to_server'}}|[{'record_field',93,{'atom',93,'encryption_algorithms_server_to_client'}}|[{'record_field',94,{'atom',94,'mac_algorithms_client_to_server'}}|[{'record_field',95,{'atom',95,'mac_algorithms_server_to_client'}}|[{'record_field',96,{'atom',96,'compression_algorithms_client_to_server'}}|[{'record_field',97,{'atom',97,'compression_algorithms_server_to_client'}}|[{'record_field',98,{'atom',98,'languages_client_to_server'}}|[{'record_field',99,{'atom',99,'languages_server_to_client'}}|[{'record_field',100,{'atom',100,'first_kex_packet_follows'},{'atom',100,'false'}}|[{'record_field',102,{'atom',102,'reserved'},{'integer',102,0}}]]]]]]]]]]]]],[]}],
		%% Line 115
		'type' =
		    %% Line 115
		    [{{'record','ssh_msg_kexdh_init'},[{'record_field',117,{'atom',117,'e'}}],[]}],
		%% Line 120
		'type' =
		    %% Line 120
		    [{{'record','ssh_msg_kexdh_reply'},[{'record_field',122,{'atom',122,'public_host_key'}}|[{'record_field',123,{'atom',123,'f'}}|[{'record_field',124,{'atom',124,'h_sig'}}]]],[]}],
		%% Line 127
		'type' =
		    %% Line 127
		    [{{'record','ssh_msg_newkeys'},[],[]}],
		%% Line 143
		'type' =
		    %% Line 143
		    [{{'record','ssh_msg_kex_dh_gex_request'},[{'record_field',145,{'atom',145,'min'}}|[{'record_field',146,{'atom',146,'n'}}|[{'record_field',147,{'atom',147,'max'}}]]],[]}],
		%% Line 150
		'type' =
		    %% Line 150
		    [{{'record','ssh_msg_kex_dh_gex_request_old'},[{'record_field',152,{'atom',152,'n'}}],[]}],
		%% Line 155
		'type' =
		    %% Line 155
		    [{{'record','ssh_msg_kex_dh_gex_group'},[{'record_field',157,{'atom',157,'p'}}|[{'record_field',158,{'atom',158,'g'}}]],[]}],
		%% Line 161
		'type' =
		    %% Line 161
		    [{{'record','ssh_msg_kex_dh_gex_init'},[{'record_field',163,{'atom',163,'e'}}],[]}],
		%% Line 166
		'type' =
		    %% Line 166
		    [{{'record','ssh_msg_kex_dh_gex_reply'},[{'record_field',168,{'atom',168,'public_host_key'}}|[{'record_field',169,{'atom',169,'f'}}|[{'record_field',170,{'atom',170,'h_sig'}}]]],[]}]]
'encode'/1 =
    %% Line 34
    fun (_cor0) ->
	case _cor0 of
	  <{'ssh_msg_global_request',%% Line 35
				     Name,%% Line 36
					  Bool,%% Line 37
					       Data}> when 'true' ->
	      %% Line 38
	      call 'ssh_bits':'encode'
		  ([80|%% Line 39
		       [Name|[Bool|[Data|[]]]]], %% Line 39
						 ['byte'|['string'|['boolean'|['...']]]])
	  %% Line 40
	  <{'ssh_msg_request_success',Data}> when 'true' ->
	      %% Line 41
	      #{#<81>(8,1,'integer',['unsigned'|['big']]),
		#<Data>('all',8,'binary',['unsigned'|['big']])}#
	  %% Line 42
	  <{'ssh_msg_request_failure'}> when 'true' ->
	      %% Line 43
	      #{#<82>(8,1,'integer',['unsigned'|['big']])}#
	  %% Line 44
	  <{'ssh_msg_channel_open',%% Line 45
				   Type,%% Line 46
					Sender,%% Line 47
					       Window,%% Line 48
						      Max,%% Line 49
							  Data}> when 'true' ->
	      %% Line 51
	      call 'ssh_bits':'encode'
		  ([90|%% Line 52
		       [Type|[Sender|[Window|[Max|[Data|[]]]]]]], %% Line 52
								  ['byte'|['string'|['uint32'|['uint32'|['uint32'|['...']]]]]])
	  %% Line 54
	  <{'ssh_msg_channel_open_confirmation',%% Line 55
						Recipient,%% Line 56
							  Sender,%% Line 57
								 InitWindowSize,%% Line 58
										MaxPacketSize,%% Line 59
											      Data}> when 'true' ->
	      %% Line 61
	      call 'ssh_bits':'encode'
		  ([91|[Recipient|%% Line 62
				  [Sender|[InitWindowSize|[MaxPacketSize|[Data|[]]]]]]], %% Line 63
											 ['byte'|['uint32'|['uint32'|['uint32'|['uint32'|['...']]]]]])
	  %% Line 64
	  <{'ssh_msg_channel_open_failure',%% Line 65
					   Recipient,%% Line 66
						     Reason,%% Line 67
							    Desc,%% Line 68
								 Lang}> when 'true' ->
	      %% Line 70
	      call 'ssh_bits':'encode'
		  ([92|[Recipient|%% Line 71
				  [Reason|[Desc|[Lang|[]]]]]], %% Line 71
							       ['byte'|['uint32'|['uint32'|['string'|['string']]]]])
	  %% Line 72
	  <{'ssh_msg_channel_window_adjust',%% Line 73
					    Recipient,%% Line 74
						      Bytes}> when 'true' ->
	      %% Line 76
	      call 'ssh_bits':'encode'
		  ([93|[Recipient|[Bytes|[]]]], %% Line 77
						['byte'|['uint32'|['uint32']]])
	  %% Line 78
	  <{'ssh_msg_channel_data',%% Line 79
				   Recipient,%% Line 80
					     Data}> when 'true' ->
	      %% Line 82
	      call 'ssh_bits':'encode'
		  ([94|[Recipient|[Data|[]]]], ['byte'|['uint32'|['binary']]])
	  %% Line 84
	  <{'ssh_msg_channel_extended_data',%% Line 85
					    Recipient,%% Line 86
						      DataType,%% Line 87
							       Data}> when 'true' ->
	      %% Line 89
	      call 'ssh_bits':'encode'
		  ([95|[Recipient|%% Line 90
				  [DataType|[Data|[]]]]], %% Line 90
							  ['byte'|['uint32'|['uint32'|['binary']]]])
	  %% Line 92
	  <{'ssh_msg_channel_eof',Recipient}> when 'true' ->
	      %% Line 94
	      #{#<96>(8,1,'integer',['unsigned'|['big']]),
		#<Recipient>(32,1,'integer',['unsigned'|['big']])}#
	  %% Line 95
	  <{'ssh_msg_channel_close',%% Line 96
				    Recipient}> when 'true' ->
	      %% Line 98
	      #{#<97>(8,1,'integer',['unsigned'|['big']]),
		#<Recipient>(32,1,'integer',['unsigned'|['big']])}#
	  %% Line 99
	  <{'ssh_msg_channel_request',%% Line 100
				      Recipient,%% Line 101
						Type,%% Line 102
						     Bool,%% Line 103
							  Data}> when 'true' ->
	      %% Line 105
	      call 'ssh_bits':'encode'
		  ([98|[Recipient|[Type|[Bool|[Data|[]]]]]], %% Line 106
							     ['byte'|['uint32'|['string'|['boolean'|['...']]]]])
	  %% Line 107
	  <{'ssh_msg_channel_success',%% Line 108
				      Recipient}> when 'true' ->
	      %% Line 110
	      #{#<99>(8,1,'integer',['unsigned'|['big']]),
		#<Recipient>(32,1,'integer',['unsigned'|['big']])}#
	  %% Line 111
	  <{'ssh_msg_channel_failure',%% Line 112
				      Recipient}> when 'true' ->
	      %% Line 114
	      #{#<100>(8,1,'integer',['unsigned'|['big']]),
		#<Recipient>(32,1,'integer',['unsigned'|['big']])}#
	  %% Line 116
	  <{'ssh_msg_userauth_request',%% Line 117
				       User,%% Line 118
					    Service,%% Line 119
						    Method,%% Line 120
							   Data}> when 'true' ->
	      %% Line 122
	      call 'ssh_bits':'encode'
		  ([50|[User|[Service|[Method|[Data|[]]]]]], %% Line 123
							     ['byte'|['string_utf8'|['string'|['string'|['...']]]]])
	  %% Line 124
	  <{'ssh_msg_userauth_failure',%% Line 125
				       Auths,%% Line 126
					     Bool}> when 'true' ->
	      %% Line 128
	      call 'ssh_bits':'encode'
		  ([51|[Auths|[Bool|[]]]], %% Line 129
					   ['byte'|['string'|['boolean']]])
	  %% Line 130
	  <{'ssh_msg_userauth_success'}> when 'true' ->
	      %% Line 131
	      #{#<52>(8,1,'integer',['unsigned'|['big']])}#
	  %% Line 133
	  <{'ssh_msg_userauth_banner',%% Line 134
				      Banner,%% Line 135
					     Lang}> when 'true' ->
	      %% Line 137
	      call 'ssh_bits':'encode'
		  ([53|[Banner|[Lang|[]]]], %% Line 138
					    ['byte'|['string_utf8'|['string']]])
	  %% Line 140
	  <{'ssh_msg_userauth_pk_ok',%% Line 141
				     Alg,%% Line 142
					 KeyBlob}> when 'true' ->
	      %% Line 144
	      call 'ssh_bits':'encode'
		  ([60|[Alg|[KeyBlob|[]]]], %% Line 145
					    ['byte'|['string'|['binary']]])
	  %% Line 147
	  <{'ssh_msg_userauth_passwd_changereq',Prompt,%% Line 148
						       Lang}> when 'true' ->
	      %% Line 150
	      call 'ssh_bits':'encode'
		  ([60|[Prompt|[Lang|[]]]], %% Line 151
					    ['byte'|['string'|['string']]])
	  %% Line 153
	  <{'ssh_msg_userauth_info_request',%% Line 154
					    Name,%% Line 155
						 Inst,%% Line 156
						      Lang,%% Line 157
							   NumPromtps,%% Line 158
								      Data}> when 'true' ->
	      %% Line 159
	      call 'ssh_bits':'encode'
		  ([60|[Name|[Inst|[Lang|[NumPromtps|[Data|[]]]]]]], %% Line 160
								     ['byte'|['string'|['string'|['string'|['uint32'|['...']]]]]])
	  %% Line 162
	  <{'ssh_msg_userauth_info_response',%% Line 163
					     Num,%% Line 164
						 Data}> when 'true' ->
	      %% Line 165
	      call 'ssh_bits':'encode'
		  ([61|[Num|[Data|[]]]], %% Line 166
					 ['byte'|['uint32'|['...']]])
	  %% Line 167
	  <{'ssh_msg_disconnect',%% Line 168
				 Code,%% Line 169
				      Desc,%% Line 170
					   Lang}> when 'true' ->
	      %% Line 172
	      call 'ssh_bits':'encode'
		  ([1|[Code|[Desc|[Lang|[]]]]], %% Line 173
						['byte'|['uint32'|['string'|['string']]]])
	  %% Line 175
	  <{'ssh_msg_service_request',%% Line 176
				      Service}> when 'true' ->
	      %% Line 178
	      call 'ssh_bits':'encode'
		  ([5|[Service|[]]], ['byte'|['string']])
	  %% Line 180
	  <{'ssh_msg_service_accept',%% Line 181
				     Service}> when 'true' ->
	      %% Line 183
	      call 'ssh_bits':'encode'
		  ([6|[Service|[]]], ['byte'|['string']])
	  %% Line 185
	  <{'ssh_msg_newkeys'}> when 'true' ->
	      %% Line 186
	      #{#<21>(8,1,'integer',['unsigned'|['big']])}#
	  %% Line 188
	  <{'ssh_msg_kexinit',%% Line 189
			      Cookie,%% Line 190
				     KeyAlgs,%% Line 191
					     HostKeyAlgs,%% Line 192
							 EncAlgC2S,%% Line 193
								   EncAlgS2C,%% Line 194
									     MacAlgC2S,%% Line 195
										       MacAlgS2C,%% Line 196
												 CompAlgS2C,%% Line 197
													    CompAlgC2S,%% Line 198
														       LangC2S,%% Line 199
															       LangS2C,%% Line 200
																       Bool,%% Line 201
																	    Reserved}> when 'true' ->
	      %% Line 203
	      call 'ssh_bits':'encode'
		  ([20|[Cookie|[KeyAlgs|[HostKeyAlgs|[EncAlgC2S|[EncAlgS2C|%% Line 204
									   [MacAlgC2S|[MacAlgS2C|[CompAlgS2C|[CompAlgC2S|[LangC2S|[LangS2C|[Bool|%% Line 205
																		 [Reserved|[]]]]]]]]]]]]]]], %% Line 206
																					     ['byte'|['cookie'|['name_list'|['name_list'|['name_list'|['name_list'|['name_list'|['name_list'|['name_list'|['name_list'|['name_list'|['name_list'|['boolean'|['uint32']]]]]]]]]]]]]])
	  %% Line 214
	  <{'ssh_msg_kexdh_init',E}> when 'true' ->
	      %% Line 215
	      call 'ssh_bits':'encode'
		  ([30|[E|[]]], ['byte'|['mpint']])
	  %% Line 217
	  <{'ssh_msg_kexdh_reply',%% Line 218
				  Key,%% Line 219
				      F,%% Line 220
					Signature}> when 'true' ->
	      let <EncKey> =
		  %% Line 222
		  apply 'encode_host_key'/1
		      (Key)
	      in  let <EncSign> =
		      %% Line 223
		      apply 'encode_sign'/2
			  (Key, Signature)
		  in  %% Line 224
		      call 'ssh_bits':'encode'
			  ([31|[EncKey|[F|[EncSign|[]]]]], ['byte'|['binary'|['mpint'|['binary']]]])
	  %% Line 226
	  <{'ssh_msg_kex_dh_gex_request',%% Line 227
					 Min,%% Line 228
					     N,%% Line 229
					       Max}> when 'true' ->
	      %% Line 231
	      call 'ssh_bits':'encode'
		  ([34|[Min|[N|[Max|[]]]]], %% Line 232
					    ['byte'|['uint32'|['uint32'|['uint32'|['uint32']]]]])
	  %% Line 233
	  <{'ssh_msg_kex_dh_gex_request_old',N}> when 'true' ->
	      %% Line 234
	      call 'ssh_bits':'encode'
		  ([30|[N|[]]], %% Line 235
				['byte'|['uint32']])
	  %% Line 237
	  <{'ssh_msg_kex_dh_gex_group',Prime,Generator}> when 'true' ->
	      %% Line 238
	      call 'ssh_bits':'encode'
		  ([31|[Prime|[Generator|[]]]], %% Line 239
						['byte'|['mpint'|['mpint']]])
	  %% Line 241
	  <{'ssh_msg_kex_dh_gex_init',Public}> when 'true' ->
	      %% Line 242
	      call 'ssh_bits':'encode'
		  ([32|[Public|[]]], ['byte'|['mpint']])
	  %% Line 244
	  <{'ssh_msg_kex_dh_gex_reply',%% Line 246
				       Key,%% Line 247
					   F,%% Line 248
					     Signature}> when 'true' ->
	      let <EncKey> =
		  %% Line 250
		  apply 'encode_host_key'/1
		      (Key)
	      in  let <EncSign> =
		      %% Line 251
		      apply 'encode_sign'/2
			  (Key, Signature)
		  in  %% Line 252
		      call 'ssh_bits':'encode'
			  ([31|[EncKey|[F|[EncSign|[]]]]], ['byte'|['binary'|['mpint'|['binary']]]])
	  %% Line 254
	  <{'ssh_msg_ignore',Data}> when 'true' ->
	      %% Line 255
	      call 'ssh_bits':'encode'
		  ([2|[Data|[]]], ['byte'|['string']])
	  %% Line 257
	  <{'ssh_msg_unimplemented',Seq}> when 'true' ->
	      %% Line 258
	      call 'ssh_bits':'encode'
		  ([3|[Seq|[]]], ['byte'|['uint32']])
	  %% Line 260
	  <{'ssh_msg_debug',Bool,%% Line 261
				 Msg,%% Line 262
				     Lang}> when 'true' ->
	      %% Line 263
	      call 'ssh_bits':'encode'
		  ([4|[Bool|[Msg|[Lang|[]]]]], ['byte'|['boolean'|['string'|['string']]]])
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5})
		  -| [{'function_name',{'encode',1}}] )
	    -| ['compiler_generated'] )
	end
'decode'/1 =
    %% Line 267
    fun (_cor0) ->
	case ( _cor0
	       -| ['reuse_for_context'] ) of
	  <#{#<80>(8,1,'integer',['unsigned'|['big']]),
	     #<Len>(32,1,'integer',['unsigned'|['big']]),
	     #<Name>(Len,8,'binary',['unsigned'|['big']]),
	     #<%% Line 268
	       Bool>(%% Line 268
		     8,1,'integer',['unsigned'|['big']]),
	     #<%% Line 268
	       Data>(%% Line 268
		     'all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor1> =
		  %% Line 271
		  apply 'erl_boolean'/1
		      (Bool)
	      in  %% Line 269
		  {'ssh_msg_global_request',%% Line 270
					    Name,_cor1,%% Line 272
						       Data}
	  %% Line 274
	  <#{#<81>(8,1,'integer',['unsigned'|['big']]),
	     #<Data>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 275
	      {'ssh_msg_request_success',Data}
	  %% Line 276
	  <#{#<82>(8,1,'integer',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 277
	      {'ssh_msg_request_failure'}
	  %% Line 278
	  <#{#<90>(8,1,'integer',['unsigned'|['big']]),
	     #<%% Line 279
	       Len>(%% Line 279
		    32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 279
	       Type>(%% Line 279
		     Len,8,'binary',['unsigned'|['big']]),
	     #<%% Line 280
	       Sender>(%% Line 280
		       32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 280
	       Window>(%% Line 280
		       32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 280
	       Max>(%% Line 280
		    32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 281
	       Data>(%% Line 281
		     'all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor2> =
		  %% Line 283
		  call 'erlang':'binary_to_list'
		      (Type)
	      in  %% Line 282
		  {'ssh_msg_channel_open',_cor2,%% Line 284
						Sender,%% Line 285
						       Window,%% Line 286
							      Max,%% Line 287
								  Data}
	  %% Line 289
	  <#{#<91>(8,1,'integer',['unsigned'|['big']]),
	     #<Recipient>(32,1,'integer',['unsigned'|['big']]),
	     #<Sender>(32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 290
	       InitWindowSize>(%% Line 290
			       32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 290
	       MaxPacketSize>(%% Line 290
			      32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 291
	       Data>(%% Line 291
		     'all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 292
	      {'ssh_msg_channel_open_confirmation',%% Line 293
						   Recipient,%% Line 294
							     Sender,%% Line 295
								    InitWindowSize,%% Line 296
										   MaxPacketSize,%% Line 297
												 Data}
	  %% Line 299
	  <#{#<92>(8,1,'integer',['unsigned'|['big']]),
	     #<Recipient>(32,1,'integer',['unsigned'|['big']]),
	     #<Reason>(32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 300
	       Len0>(%% Line 300
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 300
	       Desc>(%% Line 300
		     Len0,8,'binary',['unsigned'|['big']]),
	     #<%% Line 300
	       Len1>(%% Line 300
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 300
	       Lang>(%% Line 300
		     Len1,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor3> =
		  %% Line 304
		  call 'unicode':'characters_to_list'
		      (Desc)
	      in  %% Line 301
		  {'ssh_msg_channel_open_failure',%% Line 302
						  Recipient,%% Line 303
							    Reason,_cor3,%% Line 305
									 Lang}
	  %% Line 307
	  <#{#<93>(8,1,'integer',['unsigned'|['big']]),
	     #<Recipient>(32,1,'integer',['unsigned'|['big']]),
	     #<Bytes>(32,1,'integer',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 308
	      {'ssh_msg_channel_window_adjust',%% Line 309
					       Recipient,%% Line 310
							 Bytes}
	  %% Line 313
	  <#{#<94>(8,1,'integer',['unsigned'|['big']]),
	     #<Recipient>(32,1,'integer',['unsigned'|['big']]),
	     #<Len>(32,1,'integer',['unsigned'|['big']]),
	     #<Data>(Len,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 314
	      {'ssh_msg_channel_data',%% Line 315
				      Recipient,%% Line 316
						Data}
	  %% Line 318
	  <#{#<95>(8,1,'integer',['unsigned'|['big']]),
	     #<Recipient>(32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 319
	       DataType>(%% Line 319
			 32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 319
	       Len>(%% Line 319
		    32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 319
	       Data>(%% Line 319
		     Len,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 320
	      {'ssh_msg_channel_extended_data',%% Line 321
					       Recipient,%% Line 322
							 DataType,%% Line 323
								  Data}
	  %% Line 325
	  <#{#<96>(8,1,'integer',['unsigned'|['big']]),
	     #<Recipient>(32,1,'integer',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 326
	      {'ssh_msg_channel_eof',%% Line 327
				     Recipient}
	  %% Line 329
	  <#{#<97>(8,1,'integer',['unsigned'|['big']]),
	     #<Recipient>(32,1,'integer',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 330
	      {'ssh_msg_channel_close',%% Line 331
				       Recipient}
	  %% Line 333
	  <#{#<98>(8,1,'integer',['unsigned'|['big']]),
	     #<Recipient>(32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 334
	       Len>(%% Line 334
		    32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 334
	       RequestType>(%% Line 334
			    Len,8,'binary',['unsigned'|['big']]),
	     #<%% Line 335
	       Bool>(%% Line 335
		     8,1,'integer',['unsigned'|['big']]),
	     #<%% Line 335
	       Data>(%% Line 335
		     'all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor5> =
		  %% Line 338
		  call 'unicode':'characters_to_list'
		      (RequestType)
	      in  let <_cor4> =
		      %% Line 339
		      apply 'erl_boolean'/1
			  (Bool)
		  in  %% Line 336
		      {'ssh_msg_channel_request',%% Line 337
						 Recipient,_cor5,_cor4,%% Line 340
								       Data}
	  %% Line 342
	  <#{#<99>(8,1,'integer',['unsigned'|['big']]),
	     #<Recipient>(32,1,'integer',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 343
	      {'ssh_msg_channel_success',%% Line 344
					 Recipient}
	  %% Line 346
	  <#{#<100>(8,1,'integer',['unsigned'|['big']]),
	     #<Recipient>(32,1,'integer',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 347
	      {'ssh_msg_channel_failure',%% Line 348
					 Recipient}
	  %% Line 352
	  <#{#<50>(8,1,'integer',['unsigned'|['big']]),
	     #<%% Line 353
	       Len0>(%% Line 353
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 353
	       User>(%% Line 353
		     Len0,8,'binary',['unsigned'|['big']]),
	     #<%% Line 354
	       Len1>(%% Line 354
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 354
	       Service>(%% Line 354
			Len1,8,'binary',['unsigned'|['big']]),
	     #<%% Line 355
	       Len2>(%% Line 355
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 355
	       Method>(%% Line 355
		       Len2,8,'binary',['unsigned'|['big']]),
	     #<%% Line 356
	       Data>(%% Line 356
		     'all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor8> =
		  %% Line 358
		  call 'unicode':'characters_to_list'
		      (User)
	      in  let <_cor7> =
		      %% Line 359
		      call 'unicode':'characters_to_list'
			  (Service)
		  in  let <_cor6> =
			  %% Line 360
			  call 'unicode':'characters_to_list'
			      (Method)
		      in  %% Line 357
			  {'ssh_msg_userauth_request',_cor8,_cor7,_cor6,%% Line 361
									Data}
	  %% Line 364
	  <#{#<51>(8,1,'integer',['unsigned'|['big']]),
	     #<%% Line 365
	       Len0>(%% Line 365
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 365
	       Auths>(%% Line 365
		      Len0,8,'binary',['unsigned'|['big']]),
	     #<%% Line 366
	       Bool>(%% Line 366
		     8,1,'integer',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor10> =
		  %% Line 368
		  call 'unicode':'characters_to_list'
		      (Auths)
	      in  let <_cor9> =
		      %% Line 369
		      apply 'erl_boolean'/1
			  (Bool)
		  in  %% Line 367
		      {'ssh_msg_userauth_failure',_cor10,_cor9}
	  %% Line 372
	  <#{#<52>(8,1,'integer',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 373
	      {'ssh_msg_userauth_success'}
	  %% Line 375
	  <#{#<53>(8,1,'integer',['unsigned'|['big']]),
	     #<%% Line 376
	       Len0>(%% Line 376
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 376
	       Banner>(%% Line 376
		       Len0,8,'binary',['unsigned'|['big']]),
	     #<%% Line 377
	       Len1>(%% Line 377
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 377
	       Lang>(%% Line 377
		     Len1,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 378
	      {'ssh_msg_userauth_banner',%% Line 379
					 Banner,%% Line 380
						Lang}
	  %% Line 383
	  <#{#<60>(8,1,'integer',['unsigned'|['big']]),
	     #<Len0>(32,1,'integer',['unsigned'|['big']]),
	     #<Name>(Len0,8,'binary',['unsigned'|['big']]),
	     #<%% Line 384
	       Len1>(%% Line 384
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 384
	       Inst>(%% Line 384
		     Len1,8,'binary',['unsigned'|['big']]),
	     #<%% Line 384
	       Len2>(%% Line 384
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 384
	       Lang>(%% Line 384
		     Len2,8,'binary',['unsigned'|['big']]),
	     #<%% Line 385
	       NumPromtps>(%% Line 385
			   32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 385
	       Data>(%% Line 385
		     'all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 386
	      {'ssh_msg_userauth_info_request',%% Line 387
					       Name,%% Line 388
						    Inst,%% Line 389
							 Lang,%% Line 390
							      NumPromtps,%% Line 391
									 Data}
	  %% Line 394
	  <#{#<60>(8,1,'integer',['unsigned'|['big']]),
	     #<Len0>(32,1,'integer',['unsigned'|['big']]),
	     #<Prompt>(Len0,8,'binary',['unsigned'|['big']]),
	     #<%% Line 395
	       Len1>(%% Line 395
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 395
	       Lang>(%% Line 395
		     Len1,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 396
	      {'ssh_msg_userauth_passwd_changereq',%% Line 397
						   Prompt,%% Line 398
							  Lang}
	  %% Line 402
	  <#{#<60>(8,1,'integer',['unsigned'|['big']]),
	     #<Len>(32,1,'integer',['unsigned'|['big']]),
	     #<Alg>(Len,8,'binary',['unsigned'|['big']]),
	     #<KeyBlob>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 403
	      {'ssh_msg_userauth_pk_ok',%% Line 404
					Alg,%% Line 405
					    KeyBlob}
	  %% Line 408
	  <#{#<61>(8,1,'integer',['unsigned'|['big']]),
	     #<Num>(32,1,'integer',['unsigned'|['big']]),
	     #<Data>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 409
	      {'ssh_msg_userauth_info_response',%% Line 410
						Num,%% Line 411
						    Data}
	  %% Line 414
	  <#{#<20>(8,1,'integer',['unsigned'|['big']]),
	     #<Cookie>(128,1,'integer',['unsigned'|['big']]),
	     #<Data>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 415
	      apply 'decode_kex_init'/3
		  (Data, [Cookie|['ssh_msg_kexinit']], 10)
	  %% Line 417
	  <#{#<30>(8,1,'integer',['unsigned'|['big']]),
	     #<Len>(32,1,'integer',['unsigned'|['big']]),
	     #<E>(Len,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor11> =
		  %% Line 418
		  apply 'erlint'/2
		      (Len, E)
	      in  %% Line 418
		  {'ssh_msg_kexdh_init',_cor11}
	  %% Line 420
	  <#{#<34>(8,1,'integer',['unsigned'|['big']]),
	     #<Min>(32,1,'integer',['unsigned'|['big']]),
	     #<N>(32,1,'integer',['unsigned'|['big']]),
	     #<Max>(32,1,'integer',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 421
	      {'ssh_msg_kex_dh_gex_request',%% Line 422
					    Min,%% Line 423
						N,%% Line 424
						  Max}
	  %% Line 426
	  <#{#<30>(8,1,'integer',['unsigned'|['big']]),
	     #<N>(32,1,'integer',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 427
	      {'ssh_msg_kex_dh_gex_request_old',%% Line 428
						N}
	  %% Line 430
	  <#{#<31>(8,1,'integer',['unsigned'|['big']]),
	     #<%% Line 431
	       Len0>(%% Line 431
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 431
	       Prime>(%% Line 431
		      Len0,8,'integer',['signed'|['big']]),
	     #<%% Line 432
	       Len1>(%% Line 432
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 432
	       Generator>(%% Line 432
			  Len1,8,'integer',['signed'|['big']])}#> when 'true' ->
	      %% Line 433
	      {'ssh_msg_kex_dh_gex_group',%% Line 434
					  Prime,%% Line 435
						Generator}
	  %% Line 437
	  <#{#<31>(8,1,'integer',['unsigned'|['big']]),
	     #<Len0>(32,1,'integer',['unsigned'|['big']]),
	     #<Key>(Len0,8,'binary',['unsigned'|['big']]),
	     #<%% Line 438
	       Len1>(%% Line 438
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 438
	       F>(%% Line 438
		  Len1,8,'binary',['unsigned'|['big']]),
	     #<%% Line 439
	       Len2>(%% Line 439
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 439
	       Hashsign>(%% Line 439
			 Len2,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor14> =
		  %% Line 441
		  apply 'decode_host_key'/1
		      (Key)
	      in  let <_cor13> =
		      %% Line 442
		      apply 'erlint'/2
			  (Len1, F)
		  in  let <_cor12> =
			  %% Line 443
			  apply 'decode_sign'/1
			      (Hashsign)
		      in  %% Line 440
			  {'ssh_msg_kexdh_reply',_cor14,_cor13,_cor12}
	  %% Line 446
	  <#{#<5>(8,1,'integer',['unsigned'|['big']]),
	     #<Len0>(32,1,'integer',['unsigned'|['big']]),
	     #<Service>(Len0,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor15> =
		  %% Line 448
		  call 'unicode':'characters_to_list'
		      (Service)
	      in  %% Line 447
		  {'ssh_msg_service_request',_cor15}
	  %% Line 451
	  <#{#<6>(8,1,'integer',['unsigned'|['big']]),
	     #<Len0>(32,1,'integer',['unsigned'|['big']]),
	     #<Service>(Len0,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor16> =
		  %% Line 453
		  call 'unicode':'characters_to_list'
		      (Service)
	      in  %% Line 452
		  {'ssh_msg_service_accept',_cor16}
	  %% Line 456
	  <#{#<1>(8,1,'integer',['unsigned'|['big']]),
	     #<Code>(32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 457
	       Len0>(%% Line 457
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 457
	       Desc>(%% Line 457
		     Len0,8,'binary',['unsigned'|['big']]),
	     #<%% Line 457
	       Len1>(%% Line 457
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 457
	       Lang>(%% Line 457
		     Len1,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor17> =
		  %% Line 460
		  call 'unicode':'characters_to_list'
		      (Desc)
	      in  %% Line 458
		  {'ssh_msg_disconnect',%% Line 459
					Code,_cor17,%% Line 461
						    Lang}
	  %% Line 465
	  <#{#<1>(8,1,'integer',['unsigned'|['big']]),
	     #<Code>(32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 466
	       Len0>(%% Line 466
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 466
	       Desc>(%% Line 466
		     Len0,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor18> =
		  %% Line 469
		  call 'unicode':'characters_to_list'
		      (Desc)
	      in  %% Line 467
		  {'ssh_msg_disconnect',%% Line 468
					Code,_cor18,%% Line 470
						    #{#<101>(8,1,'integer',['unsigned'|['big']]),
						      #<110>(8,1,'integer',['unsigned'|['big']])}#}
	  %% Line 473
	  <#{#<21>(8,1,'integer',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 474
	      {'ssh_msg_newkeys'}
	  %% Line 476
	  <#{#<2>(8,1,'integer',['unsigned'|['big']]),
	     #<Len>(32,1,'integer',['unsigned'|['big']]),
	     #<Data>(Len,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 477
	      {'ssh_msg_ignore',Data}
	  %% Line 479
	  <#{#<3>(8,1,'integer',['unsigned'|['big']]),
	     #<Seq>(32,1,'integer',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 480
	      {'ssh_msg_unimplemented',Seq}
	  %% Line 482
	  <#{#<4>(8,1,'integer',['unsigned'|['big']]),
	     #<Bool>(8,1,'integer',['unsigned'|['big']]),
	     #<Len0>(32,1,'integer',['unsigned'|['big']]),
	     #<Msg>(Len0,8,'binary',['unsigned'|['big']]),
	     #<%% Line 483
	       Len1>(%% Line 483
		     32,1,'integer',['unsigned'|['big']]),
	     #<%% Line 483
	       Lang>(%% Line 483
		     Len1,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor19> =
		  %% Line 484
		  apply 'erl_boolean'/1
		      (Bool)
	      in  %% Line 484
		  {'ssh_msg_debug',_cor19,%% Line 485
					  Msg,%% Line 486
					      Lang}
	  ( <_cor20> when 'true' ->
		do  primop 'bs_context_to_binary'
			(_cor20)
		    ( primop 'match_fail'
			  ({'function_clause',_cor20})
		      -| [{'function_name',{'decode',1}}] )
	    -| ['compiler_generated'] )
	end
'decode_keyboard_interactive_prompts'/2 =
    %% Line 488
    fun (_cor1,_cor0) ->
	case <( _cor1
		-| ['reuse_for_context'] ),_cor0> of
	  <#{}#,Acc> when 'true' ->
	      %% Line 489
	      call 'lists':'reverse'
		  (Acc)
	  %% Line 490
	  <#{#<Len>(32,1,'integer',['unsigned'|['big']]),
	     #<Prompt>(Len,8,'binary',['unsigned'|['big']]),
	     #<Bool>(8,1,'integer',['unsigned'|['big']]),
	     #<Bin>('all',8,'binary',['unsigned'|['big']])}#,%% Line 491
							     Acc> when 'true' ->
	      let <_cor2> =
		  %% Line 492
		  apply 'erl_boolean'/1
		      (Bool)
	      in  %% Line 492
		  apply 'decode_keyboard_interactive_prompts'/2
		      (Bin, [{Prompt,_cor2}|Acc])
	  ( <_cor4,_cor3> when 'true' ->
		do  primop 'bs_context_to_binary'
			(_cor4)
		    ( primop 'match_fail'
			  ({'function_clause',_cor4,_cor3})
		      -| [{'function_name',{'decode_keyboard_interactive_prompts',2}}] )
	    -| ['compiler_generated'] )
	end
'erl_boolean'/1 =
    %% Line 494
    fun (_cor0) ->
	case _cor0 of
	  <0> when 'true' ->
	      %% Line 495
	      'false'
	  %% Line 496
	  <1> when 'true' ->
	      %% Line 497
	      'true'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'erl_boolean',1}}] )
	    -| ['compiler_generated'] )
	end
'decode_kex_init'/3 =
    %% Line 499
    fun (_cor2,_cor1,_cor0) ->
	case <( _cor2
		-| ['reuse_for_context'] ),_cor1,_cor0> of
	  <#{#<Bool>(8,1,'integer',['unsigned'|['big']]),
	     #<X>(32,1,'integer',['unsigned'|['big']])}#,Acc,0> when 'true' ->
	      let <_cor3> =
		  %% Line 500
		  apply 'erl_boolean'/1
		      (Bool)
	      in  let <_cor4> =
		      %% Line 500
		      call 'lists':'reverse'
			  ([X|[_cor3|Acc]])
		  in  %% Line 500
		      call 'erlang':'list_to_tuple'
			  (_cor4)
	  %% Line 501
	  <#{#<Len>(32,1,'integer',['unsigned'|['big']]),
	     #<Data>(Len,8,'binary',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#,Acc,N> when 'true' ->
	      let <_cor5> =
		  %% Line 502
		  call 'unicode':'characters_to_list'
		      (Data)
	      in  let <Names> =
		      %% Line 502
		      call 'string':'tokens'
			  (_cor5, [44])
		  in  let <_cor7> =
			  %% Line 503
			  call 'erlang':'-'
			      (N, 1)
		      in  %% Line 503
			  apply 'decode_kex_init'/3
			      (Rest, [Names|Acc], _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		do  primop 'bs_context_to_binary'
			(_cor10)
		    ( primop 'match_fail'
			  ({'function_clause',_cor10,_cor9,_cor8})
		      -| [{'function_name',{'decode_kex_init',3}}] )
	    -| ['compiler_generated'] )
	end
'erlint'/2 =
    %% Line 505
    fun (_cor1,_cor0) ->
	let <Bits> =
	    %% Line 506
	    call 'erlang':'*'
		(_cor1, 8)
	in  %% Line 507
	    case ( _cor0
		   -| ['reuse_for_context'] ) of
	      <#{#<Integer>(Bits,1,'integer',['unsigned'|['big']])}#> when 'true' ->
		  %% Line 508
		  Integer
	      ( <_cor3> when 'true' ->
		    do  primop 'bs_context_to_binary'
			    (_cor3)
			primop 'match_fail'
			    ({'badmatch',_cor3})
		-| ['compiler_generated'] )
	    end
'decode_sign'/1 =
    %% Line 510
    fun (_cor0) ->
	case ( _cor0
	       -| ['reuse_for_context'] ) of
	  <#{#<Len>(32,1,'integer',['unsigned'|['big']]),
	     #<_X_Alg>(Len,8,'binary',['unsigned'|['big']]),
	     #<_cor2>(32,1,'integer',['unsigned'|['big']]),
	     #<Signature>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 511
	      Signature
	  ( <_cor1> when 'true' ->
		do  primop 'bs_context_to_binary'
			(_cor1)
		    ( primop 'match_fail'
			  ({'function_clause',_cor1})
		      -| [{'function_name',{'decode_sign',1}}] )
	    -| ['compiler_generated'] )
	end
'decode_host_key'/1 =
    %% Line 513
    fun (_cor0) ->
	case ( _cor0
	       -| ['reuse_for_context'] ) of
	  <#{#<Len>(32,1,'integer',['unsigned'|['big']]),
	     #<Alg>(Len,8,'binary',['unsigned'|['big']]),
	     #<Rest>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      %% Line 514
	      apply 'decode_host_key'/2
		  (Alg, Rest)
	  ( <_cor1> when 'true' ->
		do  primop 'bs_context_to_binary'
			(_cor1)
		    ( primop 'match_fail'
			  ({'function_clause',_cor1})
		      -| [{'function_name',{'decode_host_key',1}}] )
	    -| ['compiler_generated'] )
	end
'decode_host_key'/2 =
    %% Line 516
    fun (_cor1,_cor0) ->
	case <( _cor1
		-| ['reuse_for_context'] ),_cor0> of
	  <#{#<115>(8,1,'integer',['unsigned'|['big']]),
	     #<115>(8,1,'integer',['unsigned'|['big']]),
	     #<104>(8,1,'integer',['unsigned'|['big']]),
	     #<45>(8,1,'integer',['unsigned'|['big']]),
	     #<114>(8,1,'integer',['unsigned'|['big']]),
	     #<115>(8,1,'integer',['unsigned'|['big']]),
	     #<97>(8,1,'integer',['unsigned'|['big']])}#,#{#<Len0>(32,1,'integer',['unsigned'|['big']]),
							   #<E>(Len0,8,'binary',['unsigned'|['big']]),
							   #<%% Line 517
							     Len1>(%% Line 517
								   32,1,'integer',['unsigned'|['big']]),
							   #<%% Line 517
							     N>(%% Line 517
								Len1,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor3> =
		  %% Line 519
		  apply 'erlint'/2
		      (Len1, N)
	      in  let <_cor2> =
		      %% Line 518
		      apply 'erlint'/2
			  (Len0, E)
		  in  %% Line 518
		      {'RSAPublicKey',_cor3,_cor2}
	  %% Line 521
	  <#{#<115>(8,1,'integer',['unsigned'|['big']]),
	     #<115>(8,1,'integer',['unsigned'|['big']]),
	     #<104>(8,1,'integer',['unsigned'|['big']]),
	     #<45>(8,1,'integer',['unsigned'|['big']]),
	     #<100>(8,1,'integer',['unsigned'|['big']]),
	     #<115>(8,1,'integer',['unsigned'|['big']]),
	     #<115>(8,1,'integer',['unsigned'|['big']])}#,%% Line 522
							  #{#<Len0>(32,1,'integer',['unsigned'|['big']]),
							    #<P>(Len0,8,'binary',['unsigned'|['big']]),
							    #<%% Line 523
							      Len1>(%% Line 523
								    32,1,'integer',['unsigned'|['big']]),
							    #<%% Line 523
							      Q>(%% Line 523
								 Len1,8,'binary',['unsigned'|['big']]),
							    #<%% Line 524
							      Len2>(%% Line 524
								    32,1,'integer',['unsigned'|['big']]),
							    #<%% Line 524
							      G>(%% Line 524
								 Len2,8,'binary',['unsigned'|['big']]),
							    #<%% Line 525
							      Len3>(%% Line 525
								    32,1,'integer',['unsigned'|['big']]),
							    #<%% Line 525
							      Y>(%% Line 525
								 Len3,8,'binary',['unsigned'|['big']])}#> when 'true' ->
	      let <_cor7> =
		  %% Line 526
		  apply 'erlint'/2
		      (Len3, Y)
	      in  let <_cor6> =
		      %% Line 526
		      apply 'erlint'/2
			  (Len0, P)
		  in  let <_cor5> =
			  %% Line 526
			  apply 'erlint'/2
			      (Len1, Q)
		      in  let <_cor4> =
			      %% Line 527
			      apply 'erlint'/2
				  (Len2, G)
			  in  %% Line 526
			      {_cor7,{'Dss-Parms',_cor6,_cor5,_cor4}}
	  ( <_cor9,_cor8> when 'true' ->
		do  primop 'bs_context_to_binary'
			(_cor9)
		    ( primop 'match_fail'
			  ({'function_clause',_cor9,_cor8})
		      -| [{'function_name',{'decode_host_key',2}}] )
	    -| ['compiler_generated'] )
	end
'encode_host_key'/1 =
    %% Line 529
    fun (_cor0) ->
	case _cor0 of
	  <{'RSAPublicKey',N,E}> when 'true' ->
	      %% Line 530
	      call 'ssh_bits':'encode'
		  ([[115|[115|[104|[45|[114|[115|[97]]]]]]]|[E|[N|[]]]], ['string'|['mpint'|['mpint']]])
	  %% Line 531
	  <{Y,{'Dss-Parms',P,Q,G}}> when 'true' ->
	      %% Line 532
	      call 'ssh_bits':'encode'
		  ([[115|[115|[104|[45|[100|[115|[115]]]]]]]|[P|[Q|[G|[Y|[]]]]]], %% Line 533
										  ['string'|['mpint'|['mpint'|['mpint'|['mpint']]]]])
	  %% Line 534
	  <{'RSAPrivateKey',_cor2,N,E,_cor3,_cor4,_cor5,_cor6,_cor7,_cor8,_cor9}> when 'true' ->
	      %% Line 535
	      call 'ssh_bits':'encode'
		  ([[115|[115|[104|[45|[114|[115|[97]]]]]]]|[E|[N|[]]]], ['string'|['mpint'|['mpint']]])
	  %% Line 536
	  <{'DSAPrivateKey',_cor10,P,Q,G,Y,_cor11}> when 'true' ->
	      %% Line 537
	      call 'ssh_bits':'encode'
		  ([[115|[115|[104|[45|[100|[115|[115]]]]]]]|[P|[Q|[G|[Y|[]]]]]], %% Line 538
										  ['string'|['mpint'|['mpint'|['mpint'|['mpint']]]]])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'encode_host_key',1}}] )
	    -| ['compiler_generated'] )
	end
'encode_sign'/2 =
    %% Line 539
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'RSAPrivateKey',_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13},Signature> when 'true' ->
	      %% Line 540
	      call 'ssh_bits':'encode'
		  ([[115|[115|[104|[45|[114|[115|[97]]]]]]]|[Signature|[]]], ['string'|['binary']])
	  %% Line 541
	  <{'DSAPrivateKey',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19},Signature> when 'true' ->
	      %% Line 542
	      call 'ssh_bits':'encode'
		  ([[115|[115|[104|[45|[100|[115|[115]]]]]]]|[Signature|[]]], ['string'|['binary']])
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'encode_sign',2}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ssh_message')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ssh_message', _cor0)
end