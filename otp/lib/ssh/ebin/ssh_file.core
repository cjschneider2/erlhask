module 'ssh_file' ['add_host_key'/3,
		   'host_key'/2,
		   'is_auth_key'/3,
		   'is_host_key'/4,
		   'module_info'/0,
		   'module_info'/1,
		   'user_key'/2]
    attributes [%% Line 26
		'behaviour' =
		    %% Line 26
		    ['ssh_server_key_api'],
		%% Line 27
		'behaviour' =
		    %% Line 27
		    ['ssh_client_key_api'],
		%% Line 11
		'type' =
		    %% Line 11
		    [{{'record','AttributePKCS-7'},[{'record_field',12,{'atom',12,'type'}}|[{'record_field',12,{'atom',12,'values'}}]],[]}],
		%% Line 14
		'type' =
		    %% Line 14
		    [{{'record','AlgorithmIdentifierPKSC-7'},[{'record_field',15,{'atom',15,'algorithm'}}|[{'record_field',15,{'atom',15,'parameters'},{'atom',15,'asn1_NOVALUE'}}]],[]}],
		%% Line 17
		'type' =
		    %% Line 17
		    [{{'record','AlgorithmIdentifierPKCS-10'},[{'record_field',18,{'atom',18,'algorithm'}}|[{'record_field',18,{'atom',18,'parameters'},{'atom',18,'asn1_NOVALUE'}}]],[]}],
		%% Line 20
		'type' =
		    %% Line 20
		    [{{'record','AttributePKCS-10'},[{'record_field',21,{'atom',21,'type'}}|[{'record_field',21,{'atom',21,'values'}}]],[]}],
		%% Line 23
		'type' =
		    %% Line 23
		    [{{'record','SubjectPublicKeyInfo-PKCS-10'},[{'record_field',24,{'atom',24,'algorithm'}}|[{'record_field',24,{'atom',24,'subjectPublicKey'}}]],[]}],
		%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','ECPrivateKey'},[{'record_field',27,{'atom',27,'version'}}|[{'record_field',27,{'atom',27,'privateKey'}}|[{'record_field',27,{'atom',27,'parameters'},{'atom',27,'asn1_NOVALUE'}}|[{'record_field',27,{'atom',27,'publicKey'},{'atom',27,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 29
		'type' =
		    %% Line 29
		    [{{'record','DSAPrivateKey'},[{'record_field',30,{'atom',30,'version'}}|[{'record_field',30,{'atom',30,'p'}}|[{'record_field',30,{'atom',30,'q'}}|[{'record_field',30,{'atom',30,'g'}}|[{'record_field',30,{'atom',30,'y'}}|[{'record_field',30,{'atom',30,'x'}}]]]]]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','DHParameter'},[{'record_field',33,{'atom',33,'prime'}}|[{'record_field',33,{'atom',33,'base'}}|[{'record_field',33,{'atom',33,'privateValueLength'},{'atom',33,'asn1_NOVALUE'}}]]],[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','DigestInfoNull'},[{'record_field',36,{'atom',36,'digestAlgorithm'}}|[{'record_field',36,{'atom',36,'digest'}}]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','DigestInfoPKCS-1'},[{'record_field',39,{'atom',39,'digestAlgorithm'}}|[{'record_field',39,{'atom',39,'digest'}}]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','RSASSA-PSS-params'},[{'record_field',42,{'atom',42,'hashAlgorithm'}}|[{'record_field',42,{'atom',42,'maskGenAlgorithm'}}|[{'record_field',42,{'atom',42,'saltLength'},{'atom',42,'asn1_DEFAULT'}}|[{'record_field',42,{'atom',42,'trailerField'},{'atom',42,'asn1_DEFAULT'}}]]]],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','AlgorithmNull'},[{'record_field',45,{'atom',45,'algorithm'}}|[{'record_field',45,{'atom',45,'parameters'}}]],[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{{'record','Algorithm'},[{'record_field',48,{'atom',48,'algorithm'}}|[{'record_field',48,{'atom',48,'parameters'},{'atom',48,'asn1_NOVALUE'}}]],[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','OtherPrimeInfo'},[{'record_field',51,{'atom',51,'prime'}}|[{'record_field',51,{'atom',51,'exponent'}}|[{'record_field',51,{'atom',51,'coefficient'}}]]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{{'record','RSAPrivateKey'},[{'record_field',54,{'atom',54,'version'}}|[{'record_field',54,{'atom',54,'modulus'}}|[{'record_field',54,{'atom',54,'publicExponent'}}|[{'record_field',54,{'atom',54,'privateExponent'}}|[{'record_field',54,{'atom',54,'prime1'}}|[{'record_field',54,{'atom',54,'prime2'}}|[{'record_field',54,{'atom',54,'exponent1'}}|[{'record_field',54,{'atom',54,'exponent2'}}|[{'record_field',54,{'atom',54,'coefficient'}}|[{'record_field',54,{'atom',54,'otherPrimeInfos'},{'atom',54,'asn1_NOVALUE'}}]]]]]]]]]],[]}],
		%% Line 56
		'type' =
		    %% Line 56
		    [{{'record','RSAPublicKey'},[{'record_field',57,{'atom',57,'modulus'}}|[{'record_field',57,{'atom',57,'publicExponent'}}]],[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{{'record','Curve'},[{'record_field',60,{'atom',60,'a'}}|[{'record_field',60,{'atom',60,'b'}}|[{'record_field',60,{'atom',60,'seed'},{'atom',60,'asn1_NOVALUE'}}]]],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{{'record','ECParameters'},[{'record_field',63,{'atom',63,'version'}}|[{'record_field',63,{'atom',63,'fieldID'}}|[{'record_field',63,{'atom',63,'curve'}}|[{'record_field',63,{'atom',63,'base'}}|[{'record_field',63,{'atom',63,'order'}}|[{'record_field',63,{'atom',63,'cofactor'},{'atom',63,'asn1_NOVALUE'}}]]]]]],[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','Pentanomial'},[{'record_field',66,{'atom',66,'k1'}}|[{'record_field',66,{'atom',66,'k2'}}|[{'record_field',66,{'atom',66,'k3'}}]]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','Characteristic-two'},[{'record_field',69,{'atom',69,'m'}}|[{'record_field',69,{'atom',69,'basis'}}|[{'record_field',69,{'atom',69,'parameters'}}]]],[]}],
		%% Line 71
		'type' =
		    %% Line 71
		    [{{'record','ECDSA-Sig-Value'},[{'record_field',72,{'atom',72,'r'}}|[{'record_field',72,{'atom',72,'s'}}]],[]}],
		%% Line 74
		'type' =
		    %% Line 74
		    [{{'record','FieldID'},[{'record_field',75,{'atom',75,'fieldType'}}|[{'record_field',75,{'atom',75,'parameters'}}]],[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','ValidationParms'},[{'record_field',78,{'atom',78,'seed'}}|[{'record_field',78,{'atom',78,'pgenCounter'}}]],[]}],
		%% Line 80
		'type' =
		    %% Line 80
		    [{{'record','DomainParameters'},[{'record_field',81,{'atom',81,'p'}}|[{'record_field',81,{'atom',81,'g'}}|[{'record_field',81,{'atom',81,'q'}}|[{'record_field',81,{'atom',81,'j'},{'atom',81,'asn1_NOVALUE'}}|[{'record_field',81,{'atom',81,'validationParms'},{'atom',81,'asn1_NOVALUE'}}]]]]],[]}],
		%% Line 83
		'type' =
		    %% Line 83
		    [{{'record','Dss-Sig-Value'},[{'record_field',84,{'atom',84,'r'}}|[{'record_field',84,{'atom',84,'s'}}]],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{{'record','Dss-Parms'},[{'record_field',87,{'atom',87,'p'}}|[{'record_field',87,{'atom',87,'q'}}|[{'record_field',87,{'atom',87,'g'}}]]],[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','ACClearAttrs'},[{'record_field',90,{'atom',90,'acIssuer'}}|[{'record_field',90,{'atom',90,'acSerial'}}|[{'record_field',90,{'atom',90,'attrs'}}]]],[]}],
		%% Line 92
		'type' =
		    %% Line 92
		    [{{'record','AAControls'},[{'record_field',93,{'atom',93,'pathLenConstraint'},{'atom',93,'asn1_NOVALUE'}}|[{'record_field',93,{'atom',93,'permittedAttrs'},{'atom',93,'asn1_NOVALUE'}}|[{'record_field',93,{'atom',93,'excludedAttrs'},{'atom',93,'asn1_NOVALUE'}}|[{'record_field',93,{'atom',93,'permitUnSpecified'},{'atom',93,'asn1_DEFAULT'}}]]]],[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{{'record','SecurityCategory'},[{'record_field',96,{'atom',96,'type'}}|[{'record_field',96,{'atom',96,'value'}}]],[]}],
		%% Line 98
		'type' =
		    %% Line 98
		    [{{'record','Clearance'},[{'record_field',99,{'atom',99,'policyId'}}|[{'record_field',99,{'atom',99,'classList'},{'atom',99,'asn1_DEFAULT'}}|[{'record_field',99,{'atom',99,'securityCategories'},{'atom',99,'asn1_NOVALUE'}}]]],[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{{'record','RoleSyntax'},[{'record_field',102,{'atom',102,'roleAuthority'},{'atom',102,'asn1_NOVALUE'}}|[{'record_field',102,{'atom',102,'roleName'}}]],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{{'record','SvceAuthInfo'},[{'record_field',105,{'atom',105,'service'}}|[{'record_field',105,{'atom',105,'ident'}}|[{'record_field',105,{'atom',105,'authInfo'},{'atom',105,'asn1_NOVALUE'}}]]],[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','IetfAttrSyntax'},[{'record_field',108,{'atom',108,'policyAuthority'},{'atom',108,'asn1_NOVALUE'}}|[{'record_field',108,{'atom',108,'values'}}]],[]}],
		%% Line 110
		'type' =
		    %% Line 110
		    [{{'record','TargetCert'},[{'record_field',111,{'atom',111,'targetCertificate'}}|[{'record_field',111,{'atom',111,'targetName'},{'atom',111,'asn1_NOVALUE'}}|[{'record_field',111,{'atom',111,'certDigestInfo'},{'atom',111,'asn1_NOVALUE'}}]]],[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{{'record','AttCertValidityPeriod'},[{'record_field',114,{'atom',114,'notBeforeTime'}}|[{'record_field',114,{'atom',114,'notAfterTime'}}]],[]}],
		%% Line 116
		'type' =
		    %% Line 116
		    [{{'record','IssuerSerial'},[{'record_field',117,{'atom',117,'issuer'}}|[{'record_field',117,{'atom',117,'serial'}}|[{'record_field',117,{'atom',117,'issuerUID'},{'atom',117,'asn1_NOVALUE'}}]]],[]}],
		%% Line 119
		'type' =
		    %% Line 119
		    [{{'record','V2Form'},[{'record_field',120,{'atom',120,'issuerName'},{'atom',120,'asn1_NOVALUE'}}|[{'record_field',120,{'atom',120,'baseCertificateID'},{'atom',120,'asn1_NOVALUE'}}|[{'record_field',120,{'atom',120,'objectDigestInfo'},{'atom',120,'asn1_NOVALUE'}}]]],[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{{'record','ObjectDigestInfo'},[{'record_field',123,{'atom',123,'digestedObjectType'}}|[{'record_field',123,{'atom',123,'otherObjectTypeID'},{'atom',123,'asn1_NOVALUE'}}|[{'record_field',123,{'atom',123,'digestAlgorithm'}}|[{'record_field',123,{'atom',123,'objectDigest'}}]]]],[]}],
		%% Line 125
		'type' =
		    %% Line 125
		    [{{'record','Holder'},[{'record_field',126,{'atom',126,'baseCertificateID'},{'atom',126,'asn1_NOVALUE'}}|[{'record_field',126,{'atom',126,'entityName'},{'atom',126,'asn1_NOVALUE'}}|[{'record_field',126,{'atom',126,'objectDigestInfo'},{'atom',126,'asn1_NOVALUE'}}]]],[]}],
		%% Line 128
		'type' =
		    %% Line 128
		    [{{'record','AttributeCertificateInfo'},[{'record_field',129,{'atom',129,'version'}}|[{'record_field',129,{'atom',129,'holder'}}|[{'record_field',129,{'atom',129,'issuer'}}|[{'record_field',129,{'atom',129,'signature'}}|[{'record_field',129,{'atom',129,'serialNumber'}}|[{'record_field',129,{'atom',129,'attrCertValidityPeriod'}}|[{'record_field',129,{'atom',129,'attributes'}}|[{'record_field',129,{'atom',129,'issuerUniqueID'},{'atom',129,'asn1_NOVALUE'}}|[{'record_field',129,{'atom',129,'extensions'},{'atom',129,'asn1_NOVALUE'}}]]]]]]]]],[]}],
		%% Line 131
		'type' =
		    %% Line 131
		    [{{'record','AttributeCertificate'},[{'record_field',132,{'atom',132,'acinfo'}}|[{'record_field',132,{'atom',132,'signatureAlgorithm'}}|[{'record_field',132,{'atom',132,'signatureValue'}}]]],[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{{'record','IssuingDistributionPoint'},[{'record_field',135,{'atom',135,'distributionPoint'},{'atom',135,'asn1_NOVALUE'}}|[{'record_field',135,{'atom',135,'onlyContainsUserCerts'},{'atom',135,'asn1_DEFAULT'}}|[{'record_field',135,{'atom',135,'onlyContainsCACerts'},{'atom',135,'asn1_DEFAULT'}}|[{'record_field',135,{'atom',135,'onlySomeReasons'},{'atom',135,'asn1_NOVALUE'}}|[{'record_field',135,{'atom',135,'indirectCRL'},{'atom',135,'asn1_DEFAULT'}}|[{'record_field',135,{'atom',135,'onlyContainsAttributeCerts'},{'atom',135,'asn1_DEFAULT'}}]]]]]],[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','AccessDescription'},[{'record_field',138,{'atom',138,'accessMethod'}}|[{'record_field',138,{'atom',138,'accessLocation'}}]],[]}],
		%% Line 140
		'type' =
		    %% Line 140
		    [{{'record','DistributionPoint'},[{'record_field',141,{'atom',141,'distributionPoint'},{'atom',141,'asn1_NOVALUE'}}|[{'record_field',141,{'atom',141,'reasons'},{'atom',141,'asn1_NOVALUE'}}|[{'record_field',141,{'atom',141,'cRLIssuer'},{'atom',141,'asn1_NOVALUE'}}]]],[]}],
		%% Line 143
		'type' =
		    %% Line 143
		    [{{'record','PolicyConstraints'},[{'record_field',144,{'atom',144,'requireExplicitPolicy'},{'atom',144,'asn1_NOVALUE'}}|[{'record_field',144,{'atom',144,'inhibitPolicyMapping'},{'atom',144,'asn1_NOVALUE'}}]],[]}],
		%% Line 146
		'type' =
		    %% Line 146
		    [{{'record','GeneralSubtree'},[{'record_field',147,{'atom',147,'base'}}|[{'record_field',147,{'atom',147,'minimum'},{'atom',147,'asn1_DEFAULT'}}|[{'record_field',147,{'atom',147,'maximum'},{'atom',147,'asn1_NOVALUE'}}]]],[]}],
		%% Line 149
		'type' =
		    %% Line 149
		    [{{'record','NameConstraints'},[{'record_field',150,{'atom',150,'permittedSubtrees'},{'atom',150,'asn1_NOVALUE'}}|[{'record_field',150,{'atom',150,'excludedSubtrees'},{'atom',150,'asn1_NOVALUE'}}]],[]}],
		%% Line 152
		'type' =
		    %% Line 152
		    [{{'record','BasicConstraints'},[{'record_field',153,{'atom',153,'cA'},{'atom',153,'asn1_DEFAULT'}}|[{'record_field',153,{'atom',153,'pathLenConstraint'},{'atom',153,'asn1_NOVALUE'}}]],[]}],
		%% Line 155
		'type' =
		    %% Line 155
		    [{{'record','EDIPartyName'},[{'record_field',156,{'atom',156,'nameAssigner'},{'atom',156,'asn1_NOVALUE'}}|[{'record_field',156,{'atom',156,'partyName'}}]],[]}],
		%% Line 158
		'type' =
		    %% Line 158
		    [{{'record','AnotherName'},[{'record_field',159,{'atom',159,'type-id'}}|[{'record_field',159,{'atom',159,'value'}}]],[]}],
		%% Line 161
		'type' =
		    %% Line 161
		    [{{'record','PolicyMappings_SEQOF'},[{'record_field',162,{'atom',162,'issuerDomainPolicy'}}|[{'record_field',162,{'atom',162,'subjectDomainPolicy'}}]],[]}],
		%% Line 164
		'type' =
		    %% Line 164
		    [{{'record','NoticeReference'},[{'record_field',165,{'atom',165,'organization'}}|[{'record_field',165,{'atom',165,'noticeNumbers'}}]],[]}],
		%% Line 167
		'type' =
		    %% Line 167
		    [{{'record','UserNotice'},[{'record_field',168,{'atom',168,'noticeRef'},{'atom',168,'asn1_NOVALUE'}}|[{'record_field',168,{'atom',168,'explicitText'},{'atom',168,'asn1_NOVALUE'}}]],[]}],
		%% Line 170
		'type' =
		    %% Line 170
		    [{{'record','PolicyQualifierInfo'},[{'record_field',171,{'atom',171,'policyQualifierId'}}|[{'record_field',171,{'atom',171,'qualifier'}}]],[]}],
		%% Line 173
		'type' =
		    %% Line 173
		    [{{'record','PolicyInformation'},[{'record_field',174,{'atom',174,'policyIdentifier'}}|[{'record_field',174,{'atom',174,'policyQualifiers'},{'atom',174,'asn1_NOVALUE'}}]],[]}],
		%% Line 176
		'type' =
		    %% Line 176
		    [{{'record','PrivateKeyUsagePeriod'},[{'record_field',177,{'atom',177,'notBefore'},{'atom',177,'asn1_NOVALUE'}}|[{'record_field',177,{'atom',177,'notAfter'},{'atom',177,'asn1_NOVALUE'}}]],[]}],
		%% Line 179
		'type' =
		    %% Line 179
		    [{{'record','AuthorityKeyIdentifier'},[{'record_field',180,{'atom',180,'keyIdentifier'},{'atom',180,'asn1_NOVALUE'}}|[{'record_field',180,{'atom',180,'authorityCertIssuer'},{'atom',180,'asn1_NOVALUE'}}|[{'record_field',180,{'atom',180,'authorityCertSerialNumber'},{'atom',180,'asn1_NOVALUE'}}]]],[]}],
		%% Line 182
		'type' =
		    %% Line 182
		    [{{'record','EncryptedData'},[{'record_field',183,{'atom',183,'version'}}|[{'record_field',183,{'atom',183,'encryptedContentInfo'}}]],[]}],
		%% Line 185
		'type' =
		    %% Line 185
		    [{{'record','DigestedData'},[{'record_field',186,{'atom',186,'version'}}|[{'record_field',186,{'atom',186,'digestAlgorithm'}}|[{'record_field',186,{'atom',186,'contentInfo'}}|[{'record_field',186,{'atom',186,'digest'}}]]]],[]}],
		%% Line 188
		'type' =
		    %% Line 188
		    [{{'record','SignedAndEnvelopedData'},[{'record_field',189,{'atom',189,'version'}}|[{'record_field',189,{'atom',189,'recipientInfos'}}|[{'record_field',189,{'atom',189,'digestAlgorithms'}}|[{'record_field',189,{'atom',189,'encryptedContentInfo'}}|[{'record_field',189,{'atom',189,'certificates'},{'atom',189,'asn1_NOVALUE'}}|[{'record_field',189,{'atom',189,'crls'},{'atom',189,'asn1_NOVALUE'}}|[{'record_field',189,{'atom',189,'signerInfos'}}]]]]]]],[]}],
		%% Line 191
		'type' =
		    %% Line 191
		    [{{'record','RecipientInfo'},[{'record_field',192,{'atom',192,'version'}}|[{'record_field',192,{'atom',192,'issuerAndSerialNumber'}}|[{'record_field',192,{'atom',192,'keyEncryptionAlgorithm'}}|[{'record_field',192,{'atom',192,'encryptedKey'}}]]]],[]}],
		%% Line 194
		'type' =
		    %% Line 194
		    [{{'record','EncryptedContentInfo'},[{'record_field',195,{'atom',195,'contentType'}}|[{'record_field',195,{'atom',195,'contentEncryptionAlgorithm'}}|[{'record_field',195,{'atom',195,'encryptedContent'},{'atom',195,'asn1_NOVALUE'}}]]],[]}],
		%% Line 197
		'type' =
		    %% Line 197
		    [{{'record','EnvelopedData'},[{'record_field',198,{'atom',198,'version'}}|[{'record_field',198,{'atom',198,'recipientInfos'}}|[{'record_field',198,{'atom',198,'encryptedContentInfo'}}]]],[]}],
		%% Line 200
		'type' =
		    %% Line 200
		    [{{'record','DigestInfoPKCS-7'},[{'record_field',201,{'atom',201,'digestAlgorithm'}}|[{'record_field',201,{'atom',201,'digest'}}]],[]}],
		%% Line 203
		'type' =
		    %% Line 203
		    [{{'record','SignerInfo'},[{'record_field',204,{'atom',204,'version'}}|[{'record_field',204,{'atom',204,'issuerAndSerialNumber'}}|[{'record_field',204,{'atom',204,'digestAlgorithm'}}|[{'record_field',204,{'atom',204,'authenticatedAttributes'},{'atom',204,'asn1_NOVALUE'}}|[{'record_field',204,{'atom',204,'digestEncryptionAlgorithm'}}|[{'record_field',204,{'atom',204,'encryptedDigest'}}|[{'record_field',204,{'atom',204,'unauthenticatedAttributes'},{'atom',204,'asn1_NOVALUE'}}]]]]]]],[]}],
		%% Line 206
		'type' =
		    %% Line 206
		    [{{'record','SignerInfo_unauthenticatedAttributes_uaSet_SETOF'},[{'record_field',207,{'atom',207,'type'}}|[{'record_field',207,{'atom',207,'values'}}]],[]}],
		%% Line 209
		'type' =
		    %% Line 209
		    [{{'record','SignerInfo_unauthenticatedAttributes_uaSequence_SEQOF'},[{'record_field',210,{'atom',210,'type'}}|[{'record_field',210,{'atom',210,'values'}}]],[]}],
		%% Line 212
		'type' =
		    %% Line 212
		    [{{'record','SignedData'},[{'record_field',213,{'atom',213,'version'}}|[{'record_field',213,{'atom',213,'digestAlgorithms'}}|[{'record_field',213,{'atom',213,'contentInfo'}}|[{'record_field',213,{'atom',213,'certificates'},{'atom',213,'asn1_NOVALUE'}}|[{'record_field',213,{'atom',213,'crls'},{'atom',213,'asn1_NOVALUE'}}|[{'record_field',213,{'atom',213,'signerInfos'}}]]]]]],[]}],
		%% Line 215
		'type' =
		    %% Line 215
		    [{{'record','ContentInfo'},[{'record_field',216,{'atom',216,'contentType'}}|[{'record_field',216,{'atom',216,'content'},{'atom',216,'asn1_NOVALUE'}}]],[]}],
		%% Line 218
		'type' =
		    %% Line 218
		    [{{'record','KeyEncryptionAlgorithmIdentifier'},[{'record_field',219,{'atom',219,'algorithm'}}|[{'record_field',219,{'atom',219,'parameters'},{'atom',219,'asn1_NOVALUE'}}]],[]}],
		%% Line 221
		'type' =
		    %% Line 221
		    [{{'record','IssuerAndSerialNumber'},[{'record_field',222,{'atom',222,'issuer'}}|[{'record_field',222,{'atom',222,'serialNumber'}}]],[]}],
		%% Line 224
		'type' =
		    %% Line 224
		    [{{'record','DigestEncryptionAlgorithmIdentifier'},[{'record_field',225,{'atom',225,'algorithm'}}|[{'record_field',225,{'atom',225,'parameters'},{'atom',225,'asn1_NOVALUE'}}]],[]}],
		%% Line 227
		'type' =
		    %% Line 227
		    [{{'record','DigestAlgorithmIdentifier'},[{'record_field',228,{'atom',228,'algorithm'}}|[{'record_field',228,{'atom',228,'parameters'},{'atom',228,'asn1_NOVALUE'}}]],[]}],
		%% Line 230
		'type' =
		    %% Line 230
		    [{{'record','ContentEncryptionAlgorithmIdentifier'},[{'record_field',231,{'atom',231,'algorithm'}}|[{'record_field',231,{'atom',231,'parameters'},{'atom',231,'asn1_NOVALUE'}}]],[]}],
		%% Line 233
		'type' =
		    %% Line 233
		    [{{'record','SignerInfoAuthenticatedAttributes_aaSet_SETOF'},[{'record_field',234,{'atom',234,'type'}}|[{'record_field',234,{'atom',234,'values'}}]],[]}],
		%% Line 236
		'type' =
		    %% Line 236
		    [{{'record','SignerInfoAuthenticatedAttributes_aaSequence_SEQOF'},[{'record_field',237,{'atom',237,'type'}}|[{'record_field',237,{'atom',237,'values'}}]],[]}],
		%% Line 239
		'type' =
		    %% Line 239
		    [{{'record','CertificationRequest'},[{'record_field',240,{'atom',240,'certificationRequestInfo'}}|[{'record_field',240,{'atom',240,'signatureAlgorithm'}}|[{'record_field',240,{'atom',240,'signature'}}]]],[]}],
		%% Line 242
		'type' =
		    %% Line 242
		    [{{'record','CertificationRequest_signatureAlgorithm'},[{'record_field',243,{'atom',243,'algorithm'}}|[{'record_field',243,{'atom',243,'parameters'},{'atom',243,'asn1_NOVALUE'}}]],[]}],
		%% Line 245
		'type' =
		    %% Line 245
		    [{{'record','CertificationRequestInfo'},[{'record_field',246,{'atom',246,'version'}}|[{'record_field',246,{'atom',246,'subject'}}|[{'record_field',246,{'atom',246,'subjectPKInfo'}}|[{'record_field',246,{'atom',246,'attributes'}}]]]],[]}],
		%% Line 248
		'type' =
		    %% Line 248
		    [{{'record','CertificationRequestInfo_subjectPKInfo'},[{'record_field',249,{'atom',249,'algorithm'}}|[{'record_field',249,{'atom',249,'subjectPublicKey'}}]],[]}],
		%% Line 251
		'type' =
		    %% Line 251
		    [{{'record','CertificationRequestInfo_subjectPKInfo_algorithm'},[{'record_field',252,{'atom',252,'algorithm'}}|[{'record_field',252,{'atom',252,'parameters'},{'atom',252,'asn1_NOVALUE'}}]],[]}],
		%% Line 254
		'type' =
		    %% Line 254
		    [{{'record','CertificationRequestInfo_attributes_SETOF'},[{'record_field',255,{'atom',255,'type'}}|[{'record_field',255,{'atom',255,'values'}}]],[]}],
		%% Line 257
		'type' =
		    %% Line 257
		    [{{'record','TeletexDomainDefinedAttribute'},[{'record_field',258,{'atom',258,'type'}}|[{'record_field',258,{'atom',258,'value'}}]],[]}],
		%% Line 260
		'type' =
		    %% Line 260
		    [{{'record','PresentationAddress'},[{'record_field',261,{'atom',261,'pSelector'},{'atom',261,'asn1_NOVALUE'}}|[{'record_field',261,{'atom',261,'sSelector'},{'atom',261,'asn1_NOVALUE'}}|[{'record_field',261,{'atom',261,'tSelector'},{'atom',261,'asn1_NOVALUE'}}|[{'record_field',261,{'atom',261,'nAddresses'}}]]]],[]}],
		%% Line 263
		'type' =
		    %% Line 263
		    [{{'record','ExtendedNetworkAddress_e163-4-address'},[{'record_field',264,{'atom',264,'number'}}|[{'record_field',264,{'atom',264,'sub-address'},{'atom',264,'asn1_NOVALUE'}}]],[]}],
		%% Line 266
		'type' =
		    %% Line 266
		    [{{'record','PDSParameter'},[{'record_field',267,{'atom',267,'printable-string'},{'atom',267,'asn1_NOVALUE'}}|[{'record_field',267,{'atom',267,'teletex-string'},{'atom',267,'asn1_NOVALUE'}}]],[]}],
		%% Line 269
		'type' =
		    %% Line 269
		    [{{'record','UnformattedPostalAddress'},[{'record_field',270,{'atom',270,'printable-address'},{'atom',270,'asn1_NOVALUE'}}|[{'record_field',270,{'atom',270,'teletex-string'},{'atom',270,'asn1_NOVALUE'}}]],[]}],
		%% Line 272
		'type' =
		    %% Line 272
		    [{{'record','TeletexPersonalName'},[{'record_field',273,{'atom',273,'surname'}}|[{'record_field',273,{'atom',273,'given-name'},{'atom',273,'asn1_NOVALUE'}}|[{'record_field',273,{'atom',273,'initials'},{'atom',273,'asn1_NOVALUE'}}|[{'record_field',273,{'atom',273,'generation-qualifier'},{'atom',273,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 275
		'type' =
		    %% Line 275
		    [{{'record','ExtensionAttribute'},[{'record_field',276,{'atom',276,'extension-attribute-type'}}|[{'record_field',276,{'atom',276,'extension-attribute-value'}}]],[]}],
		%% Line 278
		'type' =
		    %% Line 278
		    [{{'record','BuiltInDomainDefinedAttribute'},[{'record_field',279,{'atom',279,'type'}}|[{'record_field',279,{'atom',279,'value'}}]],[]}],
		%% Line 281
		'type' =
		    %% Line 281
		    [{{'record','PersonalName'},[{'record_field',282,{'atom',282,'surname'}}|[{'record_field',282,{'atom',282,'given-name'},{'atom',282,'asn1_NOVALUE'}}|[{'record_field',282,{'atom',282,'initials'},{'atom',282,'asn1_NOVALUE'}}|[{'record_field',282,{'atom',282,'generation-qualifier'},{'atom',282,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 284
		'type' =
		    %% Line 284
		    [{{'record','BuiltInStandardAttributes'},[{'record_field',285,{'atom',285,'country-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'administration-domain-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'network-address'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'terminal-identifier'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'private-domain-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'organization-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'numeric-user-identifier'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'personal-name'},{'atom',285,'asn1_NOVALUE'}}|[{'record_field',285,{'atom',285,'organizational-unit-names'},{'atom',285,'asn1_NOVALUE'}}]]]]]]]]],[]}],
		%% Line 287
		'type' =
		    %% Line 287
		    [{{'record','ORAddress'},[{'record_field',288,{'atom',288,'built-in-standard-attributes'}}|[{'record_field',288,{'atom',288,'built-in-domain-defined-attributes'},{'atom',288,'asn1_NOVALUE'}}|[{'record_field',288,{'atom',288,'extension-attributes'},{'atom',288,'asn1_NOVALUE'}}]]],[]}],
		%% Line 290
		'type' =
		    %% Line 290
		    [{{'record','AlgorithmIdentifier'},[{'record_field',291,{'atom',291,'algorithm'}}|[{'record_field',291,{'atom',291,'parameters'},{'atom',291,'asn1_NOVALUE'}}]],[]}],
		%% Line 293
		'type' =
		    %% Line 293
		    [{{'record','TBSCertList'},[{'record_field',294,{'atom',294,'version'},{'atom',294,'asn1_NOVALUE'}}|[{'record_field',294,{'atom',294,'signature'}}|[{'record_field',294,{'atom',294,'issuer'}}|[{'record_field',294,{'atom',294,'thisUpdate'}}|[{'record_field',294,{'atom',294,'nextUpdate'},{'atom',294,'asn1_NOVALUE'}}|[{'record_field',294,{'atom',294,'revokedCertificates'},{'atom',294,'asn1_NOVALUE'}}|[{'record_field',294,{'atom',294,'crlExtensions'},{'atom',294,'asn1_NOVALUE'}}]]]]]]],[]}],
		%% Line 296
		'type' =
		    %% Line 296
		    [{{'record','TBSCertList_revokedCertificates_SEQOF'},[{'record_field',297,{'atom',297,'userCertificate'}}|[{'record_field',297,{'atom',297,'revocationDate'}}|[{'record_field',297,{'atom',297,'crlEntryExtensions'},{'atom',297,'asn1_NOVALUE'}}]]],[]}],
		%% Line 299
		'type' =
		    %% Line 299
		    [{{'record','CertificateList'},[{'record_field',300,{'atom',300,'tbsCertList'}}|[{'record_field',300,{'atom',300,'signatureAlgorithm'}}|[{'record_field',300,{'atom',300,'signature'}}]]],[]}],
		%% Line 302
		'type' =
		    %% Line 302
		    [{{'record','Extension'},[{'record_field',303,{'atom',303,'extnID'}}|[{'record_field',303,{'atom',303,'critical'},{'atom',303,'asn1_DEFAULT'}}|[{'record_field',303,{'atom',303,'extnValue'}}]]],[]}],
		%% Line 305
		'type' =
		    %% Line 305
		    [{{'record','SubjectPublicKeyInfo'},[{'record_field',306,{'atom',306,'algorithm'}}|[{'record_field',306,{'atom',306,'subjectPublicKey'}}]],[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{{'record','Validity'},[{'record_field',309,{'atom',309,'notBefore'}}|[{'record_field',309,{'atom',309,'notAfter'}}]],[]}],
		%% Line 311
		'type' =
		    %% Line 311
		    [{{'record','TBSCertificate'},[{'record_field',312,{'atom',312,'version'},{'atom',312,'asn1_DEFAULT'}}|[{'record_field',312,{'atom',312,'serialNumber'}}|[{'record_field',312,{'atom',312,'signature'}}|[{'record_field',312,{'atom',312,'issuer'}}|[{'record_field',312,{'atom',312,'validity'}}|[{'record_field',312,{'atom',312,'subject'}}|[{'record_field',312,{'atom',312,'subjectPublicKeyInfo'}}|[{'record_field',312,{'atom',312,'issuerUniqueID'},{'atom',312,'asn1_NOVALUE'}}|[{'record_field',312,{'atom',312,'subjectUniqueID'},{'atom',312,'asn1_NOVALUE'}}|[{'record_field',312,{'atom',312,'extensions'},{'atom',312,'asn1_NOVALUE'}}]]]]]]]]]],[]}],
		%% Line 314
		'type' =
		    %% Line 314
		    [{{'record','Certificate'},[{'record_field',315,{'atom',315,'tbsCertificate'}}|[{'record_field',315,{'atom',315,'signatureAlgorithm'}}|[{'record_field',315,{'atom',315,'signature'}}]]],[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{{'record','AttributeTypeAndValue'},[{'record_field',318,{'atom',318,'type'}}|[{'record_field',318,{'atom',318,'value'}}]],[]}],
		%% Line 320
		'type' =
		    %% Line 320
		    [{{'record','Attribute'},[{'record_field',321,{'atom',321,'type'}}|[{'record_field',321,{'atom',321,'values'}}]],[]}],
		%% Line 323
		'type' =
		    %% Line 323
		    [{{'record','Extension-Any'},[{'record_field',324,{'atom',324,'extnID'}}|[{'record_field',324,{'atom',324,'critical'},{'atom',324,'asn1_DEFAULT'}}|[{'record_field',324,{'atom',324,'extnValue'}}]]],[]}],
		%% Line 326
		'type' =
		    %% Line 326
		    [{{'record','OTPExtension'},[{'record_field',327,{'atom',327,'extnID'}}|[{'record_field',327,{'atom',327,'critical'},{'atom',327,'asn1_DEFAULT'}}|[{'record_field',327,{'atom',327,'extnValue'}}]]],[]}],
		%% Line 329
		'type' =
		    %% Line 329
		    [{{'record','OTPExtensionAttribute'},[{'record_field',330,{'atom',330,'extensionAttributeType'}}|[{'record_field',330,{'atom',330,'extensionAttributeValue'}}]],[]}],
		%% Line 332
		'type' =
		    %% Line 332
		    [{{'record','OTPCharacteristic-two'},[{'record_field',333,{'atom',333,'m'}}|[{'record_field',333,{'atom',333,'basis'}}|[{'record_field',333,{'atom',333,'parameters'}}]]],[]}],
		%% Line 335
		'type' =
		    %% Line 335
		    [{{'record','OTPFieldID'},[{'record_field',336,{'atom',336,'fieldType'}}|[{'record_field',336,{'atom',336,'parameters'}}]],[]}],
		%% Line 338
		'type' =
		    %% Line 338
		    [{{'record','PublicKeyAlgorithm'},[{'record_field',339,{'atom',339,'algorithm'}}|[{'record_field',339,{'atom',339,'parameters'},{'atom',339,'asn1_NOVALUE'}}]],[]}],
		%% Line 341
		'type' =
		    %% Line 341
		    [{{'record','SignatureAlgorithm-Any'},[{'record_field',342,{'atom',342,'algorithm'}}|[{'record_field',342,{'atom',342,'parameters'},{'atom',342,'asn1_NOVALUE'}}]],[]}],
		%% Line 344
		'type' =
		    %% Line 344
		    [{{'record','SignatureAlgorithm'},[{'record_field',345,{'atom',345,'algorithm'}}|[{'record_field',345,{'atom',345,'parameters'},{'atom',345,'asn1_NOVALUE'}}]],[]}],
		%% Line 347
		'type' =
		    %% Line 347
		    [{{'record','OTPSubjectPublicKeyInfo-Any'},[{'record_field',348,{'atom',348,'algorithm'}}|[{'record_field',348,{'atom',348,'subjectPublicKey'}}]],[]}],
		%% Line 350
		'type' =
		    %% Line 350
		    [{{'record','OTPSubjectPublicKeyInfo'},[{'record_field',351,{'atom',351,'algorithm'}}|[{'record_field',351,{'atom',351,'subjectPublicKey'}}]],[]}],
		%% Line 353
		'type' =
		    %% Line 353
		    [{{'record','OTPOLDSubjectPublicKeyInfo'},[{'record_field',354,{'atom',354,'algorithm'}}|[{'record_field',354,{'atom',354,'subjectPublicKey'}}]],[]}],
		%% Line 356
		'type' =
		    %% Line 356
		    [{{'record','OTPOLDSubjectPublicKeyInfo_algorithm'},[{'record_field',357,{'atom',357,'algo'}}|[{'record_field',357,{'atom',357,'parameters'},{'atom',357,'asn1_NOVALUE'}}]],[]}],
		%% Line 359
		'type' =
		    %% Line 359
		    [{{'record','OTPAttributeTypeAndValue'},[{'record_field',360,{'atom',360,'type'}}|[{'record_field',360,{'atom',360,'value'}}]],[]}],
		%% Line 362
		'type' =
		    %% Line 362
		    [{{'record','OTPTBSCertificate'},[{'record_field',363,{'atom',363,'version'},{'atom',363,'asn1_DEFAULT'}}|[{'record_field',363,{'atom',363,'serialNumber'}}|[{'record_field',363,{'atom',363,'signature'}}|[{'record_field',363,{'atom',363,'issuer'}}|[{'record_field',363,{'atom',363,'validity'}}|[{'record_field',363,{'atom',363,'subject'}}|[{'record_field',363,{'atom',363,'subjectPublicKeyInfo'}}|[{'record_field',363,{'atom',363,'issuerUniqueID'},{'atom',363,'asn1_NOVALUE'}}|[{'record_field',363,{'atom',363,'subjectUniqueID'},{'atom',363,'asn1_NOVALUE'}}|[{'record_field',363,{'atom',363,'extensions'},{'atom',363,'asn1_NOVALUE'}}]]]]]]]]]],[]}],
		%% Line 365
		'type' =
		    %% Line 365
		    [{{'record','OTPCertificate'},[{'record_field',366,{'atom',366,'tbsCertificate'}}|[{'record_field',366,{'atom',366,'signatureAlgorithm'}}|[{'record_field',366,{'atom',366,'signature'}}]]],[]}],
		%% Line 11
		'type' =
		    %% Line 11
		    [{{'record','AlgorithmIdentifierPKCS5v2-0'},[{'record_field',12,{'atom',12,'algorithm'}}|[{'record_field',12,{'atom',12,'parameters'},{'atom',12,'asn1_NOVALUE'}}]],[]}],
		%% Line 14
		'type' =
		    %% Line 14
		    [{{'record','PKAttribute'},[{'record_field',15,{'atom',15,'type'}}|[{'record_field',15,{'atom',15,'values'}}|[{'record_field',15,{'atom',15,'valuesWithContext'},{'atom',15,'asn1_NOVALUE'}}]]],[]}],
		%% Line 17
		'type' =
		    %% Line 17
		    [{{'record','PKAttribute_valuesWithContext_SETOF'},[{'record_field',18,{'atom',18,'value'}}|[{'record_field',18,{'atom',18,'contextList'}}]],[]}],
		%% Line 20
		'type' =
		    %% Line 20
		    [{{'record','AlgorithmIdentifierPKCS-8'},[{'record_field',21,{'atom',21,'algorithm'}}|[{'record_field',21,{'atom',21,'parameters'},{'atom',21,'asn1_NOVALUE'}}]],[]}],
		%% Line 23
		'type' =
		    %% Line 23
		    [{{'record','RC5-CBC-Parameters'},[{'record_field',24,{'atom',24,'version'}}|[{'record_field',24,{'atom',24,'rounds'}}|[{'record_field',24,{'atom',24,'blockSizeInBits'}}|[{'record_field',24,{'atom',24,'iv'},{'atom',24,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','RC2-CBC-Parameter'},[{'record_field',27,{'atom',27,'rc2ParameterVersion'},{'atom',27,'asn1_NOVALUE'}}|[{'record_field',27,{'atom',27,'iv'}}]],[]}],
		%% Line 29
		'type' =
		    %% Line 29
		    [{{'record','PBMAC1-params'},[{'record_field',30,{'atom',30,'keyDerivationFunc'}}|[{'record_field',30,{'atom',30,'messageAuthScheme'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','PBMAC1-params_keyDerivationFunc'},[{'record_field',33,{'atom',33,'algorithm'}}|[{'record_field',33,{'atom',33,'parameters'},{'atom',33,'asn1_NOVALUE'}}]],[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','PBMAC1-params_messageAuthScheme'},[{'record_field',36,{'atom',36,'algorithm'}}|[{'record_field',36,{'atom',36,'parameters'},{'atom',36,'asn1_NOVALUE'}}]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','PBES2-params'},[{'record_field',39,{'atom',39,'keyDerivationFunc'}}|[{'record_field',39,{'atom',39,'encryptionScheme'}}]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','PBES2-params_keyDerivationFunc'},[{'record_field',42,{'atom',42,'algorithm'}}|[{'record_field',42,{'atom',42,'parameters'},{'atom',42,'asn1_NOVALUE'}}]],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','PBES2-params_encryptionScheme'},[{'record_field',45,{'atom',45,'algorithm'}}|[{'record_field',45,{'atom',45,'parameters'},{'atom',45,'asn1_NOVALUE'}}]],[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{{'record','PBEParameter'},[{'record_field',48,{'atom',48,'salt'}}|[{'record_field',48,{'atom',48,'iterationCount'}}]],[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','PBKDF2-params'},[{'record_field',51,{'atom',51,'salt'}}|[{'record_field',51,{'atom',51,'iterationCount'}}|[{'record_field',51,{'atom',51,'keyLength'},{'atom',51,'asn1_NOVALUE'}}|[{'record_field',51,{'atom',51,'prf'},{'atom',51,'asn1_DEFAULT'}}]]]],[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{{'record','PBKDF2-params_salt_otherSource'},[{'record_field',54,{'atom',54,'algorithm'}}|[{'record_field',54,{'atom',54,'parameters'},{'atom',54,'asn1_NOVALUE'}}]],[]}],
		%% Line 56
		'type' =
		    %% Line 56
		    [{{'record','PBKDF2-params_prf'},[{'record_field',57,{'atom',57,'algorithm'}}|[{'record_field',57,{'atom',57,'parameters'},{'atom',57,'asn1_NOVALUE'}}]],[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{{'record','Context'},[{'record_field',60,{'atom',60,'contextType'}}|[{'record_field',60,{'atom',60,'contextValues'}}|[{'record_field',60,{'atom',60,'fallback'},{'atom',60,'asn1_DEFAULT'}}]]],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{{'record','EncryptedPrivateKeyInfo'},[{'record_field',63,{'atom',63,'encryptionAlgorithm'}}|[{'record_field',63,{'atom',63,'encryptedData'}}]],[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','EncryptedPrivateKeyInfo_encryptionAlgorithm'},[{'record_field',66,{'atom',66,'algorithm'}}|[{'record_field',66,{'atom',66,'parameters'},{'atom',66,'asn1_NOVALUE'}}]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','Attributes_SETOF'},[{'record_field',69,{'atom',69,'type'}}|[{'record_field',69,{'atom',69,'values'}}|[{'record_field',69,{'atom',69,'valuesWithContext'},{'atom',69,'asn1_NOVALUE'}}]]],[]}],
		%% Line 71
		'type' =
		    %% Line 71
		    [{{'record','Attributes_SETOF_valuesWithContext_SETOF'},[{'record_field',72,{'atom',72,'value'}}|[{'record_field',72,{'atom',72,'contextList'}}]],[]}],
		%% Line 74
		'type' =
		    %% Line 74
		    [{{'record','PrivateKeyInfo'},[{'record_field',75,{'atom',75,'version'}}|[{'record_field',75,{'atom',75,'privateKeyAlgorithm'}}|[{'record_field',75,{'atom',75,'privateKey'}}|[{'record_field',75,{'atom',75,'attributes'},{'atom',75,'asn1_NOVALUE'}}]]]],[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','PrivateKeyInfo_privateKeyAlgorithm'},[{'record_field',78,{'atom',78,'algorithm'}}|[{'record_field',78,{'atom',78,'parameters'},{'atom',78,'asn1_NOVALUE'}}]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','SubjectPublicKeyInfoAlgorithm'},[{'record_field',29,{'atom',29,'algorithm'}}|[{'record_field',30,{'atom',30,'parameters'},{'atom',30,'asn1_NOVALUE'}}]],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','path_validation_state'},[{'record_field',44,{'atom',44,'valid_policy_tree'}}|[{'record_field',45,{'atom',45,'explicit_policy'}}|[{'record_field',46,{'atom',46,'inhibit_any_policy'}}|[{'record_field',47,{'atom',47,'policy_mapping'}}|[{'record_field',48,{'atom',48,'cert_num'}}|[{'record_field',49,{'atom',49,'last_cert'},{'atom',49,'false'}}|[{'record_field',50,{'atom',50,'permitted_subtrees'},{'atom',50,'no_constraints'}}|[{'record_field',51,{'atom',51,'excluded_subtrees'},{'nil',51}}|[{'record_field',52,{'atom',52,'working_public_key_algorithm'}}|[{'record_field',53,{'atom',53,'working_public_key'}}|[{'record_field',54,{'atom',54,'working_public_key_parameters'}}|[{'record_field',55,{'atom',55,'working_issuer_name'}}|[{'record_field',56,{'atom',56,'max_path_length'}}|[{'record_field',57,{'atom',57,'verify_fun'}}|[{'record_field',58,{'atom',58,'user_state'}}]]]]]]]]]]]]]]],[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','policy_tree_node'},[{'record_field',62,{'atom',62,'valid_policy'}}|[{'record_field',63,{'atom',63,'qualifier_set'}}|[{'record_field',64,{'atom',64,'criticality_indicator'}}|[{'record_field',65,{'atom',65,'expected_policy_set'}}]]]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','revoke_state'},[{'record_field',69,{'atom',69,'reasons_mask'}}|[{'record_field',70,{'atom',70,'cert_status'}}|[{'record_field',71,{'atom',71,'interim_reasons_mask'}}|[{'record_field',72,{'atom',72,'valid_ext'}}]]]],[]}],
		%% Line 75
		'type' =
		    %% Line 75
		    [{{'record','ECPoint'},[{'record_field',76,{'atom',76,'point'}}],[]}],
		%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','file_info'},[{'typed_record_field',{'record_field',25,{'atom',25,'size'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'type'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'device'}|[{'atom',26,'directory'}|[{'atom',26,'other'}|[{'atom',26,'regular'}|[{'atom',26,'symlink'}]]]]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'access'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'atom',27,'read'}|[{'atom',27,'write'}|[{'atom',27,'read_write'}|[{'atom',27,'none'}]]]]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'atime'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'remote_type',28,[{'atom',28,'file'}|[{'atom',28,'date_time'}|[[]]]]}|[{'type',28,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'mtime'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'remote_type',32,[{'atom',32,'file'}|[{'atom',32,'date_time'}|[[]]]]}|[{'type',32,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',34,{'atom',34,'ctime'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'remote_type',34,[{'atom',34,'file'}|[{'atom',34,'date_time'}|[[]]]]}|[{'type',34,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',40,{'atom',40,'mode'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'links'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',46,{'atom',46,'major_device'}},{'type',46,'union',[{'atom',46,'undefined'}|[{'type',46,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'minor_device'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'inode'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',54,{'atom',54,'uid'}},{'type',54,'union',[{'atom',54,'undefined'}|[{'type',54,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',55,{'atom',55,'gid'}},{'type',55,'union',[{'atom',55,'undefined'}|[{'type',55,'non_neg_integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','file_descriptor'},[{'typed_record_field',{'record_field',59,{'atom',59,'module'}},{'type',59,'union',[{'atom',59,'undefined'}|[{'type',59,'module',[]}]]}}|[{'typed_record_field',{'record_field',60,{'atom',60,'data'}},{'type',60,'union',[{'atom',60,'undefined'}|[{'type',60,'term',[]}]]}}]],[]}],
		%% Line 64
		'type' =
		    %% Line 64
		    [{{'record','ssh'},[{'record_field',68,{'atom',68,'role'}}|[{'record_field',69,{'atom',69,'peer'}}|[{'record_field',71,{'atom',71,'c_vsn'}}|[{'record_field',72,{'atom',72,'s_vsn'}}|[{'record_field',74,{'atom',74,'c_version'}}|[{'record_field',75,{'atom',75,'s_version'}}|[{'record_field',77,{'atom',77,'c_keyinit'}}|[{'record_field',78,{'atom',78,'s_keyinit'}}|[{'record_field',80,{'atom',80,'algorithms'}}|[{'record_field',82,{'atom',82,'kex'}}|[{'record_field',83,{'atom',83,'hkey'}}|[{'record_field',84,{'atom',84,'key_cb'}}|[{'record_field',85,{'atom',85,'io_cb'}}|[{'record_field',87,{'atom',87,'send_mac'},{'atom',87,'none'}}|[{'record_field',88,{'atom',88,'send_mac_key'}}|[{'record_field',89,{'atom',89,'send_mac_size'},{'integer',89,0}}|[{'record_field',91,{'atom',91,'recv_mac'},{'atom',91,'none'}}|[{'record_field',92,{'atom',92,'recv_mac_key'}}|[{'record_field',93,{'atom',93,'recv_mac_size'},{'integer',93,0}}|[{'record_field',95,{'atom',95,'encrypt'},{'atom',95,'none'}}|[{'record_field',96,{'atom',96,'encrypt_keys'}}|[{'record_field',97,{'atom',97,'encrypt_block_size'},{'integer',97,8}}|[{'record_field',98,{'atom',98,'encrypt_ctx'}}|[{'record_field',100,{'atom',100,'decrypt'},{'atom',100,'none'}}|[{'record_field',101,{'atom',101,'decrypt_keys'}}|[{'record_field',102,{'atom',102,'decrypt_block_size'},{'integer',102,8}}|[{'record_field',103,{'atom',103,'decrypt_ctx'}}|[{'record_field',105,{'atom',105,'compress'},{'atom',105,'none'}}|[{'record_field',106,{'atom',106,'compress_ctx'}}|[{'record_field',107,{'atom',107,'decompress'},{'atom',107,'none'}}|[{'record_field',108,{'atom',108,'decompress_ctx'}}|[{'record_field',110,{'atom',110,'c_lng'},{'atom',110,'none'}}|[{'record_field',111,{'atom',111,'s_lng'},{'atom',111,'none'}}|[{'record_field',113,{'atom',113,'user_ack'},{'atom',113,'true'}}|[{'record_field',114,{'atom',114,'timeout'},{'atom',114,'infinity'}}|[{'record_field',116,{'atom',116,'shared_secret'}}|[{'record_field',117,{'atom',117,'exchanged_hash'}}|[{'record_field',118,{'atom',118,'session_id'}}|[{'record_field',120,{'atom',120,'opts'},{'nil',120}}|[{'record_field',121,{'atom',121,'send_sequence'},{'integer',121,0}}|[{'record_field',122,{'atom',122,'recv_sequence'},{'integer',122,0}}|[{'record_field',123,{'atom',123,'keyex_key'}}|[{'record_field',124,{'atom',124,'keyex_info'}}|[{'record_field',127,{'atom',127,'user'}}|[{'record_field',128,{'atom',128,'service'}}|[{'record_field',129,{'atom',129,'userauth_quiet_mode'}}|[{'record_field',130,{'atom',130,'userauth_supported_methods'}}|[{'record_field',131,{'atom',131,'userauth_methods'}}|[{'record_field',132,{'atom',132,'userauth_preference'}}|[{'record_field',133,{'atom',133,'available_host_keys'}}|[{'record_field',134,{'atom',134,'authenticated'},{'atom',134,'false'}}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','alg'},[{'record_field',139,{'atom',139,'kex'}}|[{'record_field',140,{'atom',140,'hkey'}}|[{'record_field',141,{'atom',141,'send_mac'}}|[{'record_field',142,{'atom',142,'recv_mac'}}|[{'record_field',143,{'atom',143,'encrypt'}}|[{'record_field',144,{'atom',144,'decrypt'}}|[{'record_field',145,{'atom',145,'compress'}}|[{'record_field',146,{'atom',146,'decompress'}}|[{'record_field',147,{'atom',147,'c_lng'}}|[{'record_field',148,{'atom',148,'s_lng'}}]]]]]]]]]],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{{'record','ssh_key'},[{'record_field',153,{'atom',153,'type'}}|[{'record_field',154,{'atom',154,'public'}}|[{'record_field',155,{'atom',155,'private'}}|[{'record_field',156,{'atom',156,'comment'},{'string',156,[]}}]]]],[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','ssh_pty'},[{'record_field',159,{'atom',159,'term'},{'string',159,[]}}|[{'record_field',160,{'atom',160,'width'},{'integer',160,80}}|[{'record_field',161,{'atom',161,'height'},{'integer',161,25}}|[{'record_field',162,{'atom',162,'pixel_width'},{'integer',162,1024}}|[{'record_field',163,{'atom',163,'pixel_height'},{'integer',163,768}}|[{'record_field',164,{'atom',164,'modes'},{'bin',164,[]}}]]]]]],[]}]]
'host_key'/2 =
    %% Line 48
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 49
	    apply 'file_base_name'/1
		(_cor1)
	in  let <File> =
		%% Line 49
		apply 'file_name'/3
		    ('system', _cor2, _cor0)
	    in  let <_cor4> =
		    %% Line 53
		    apply 'identity_pass_phrase'/1
			(_cor1)
		in  let <Password> =
			%% Line 53
			call 'proplists':'get_value'
			    (_cor4, _cor0, 'ignore')
		    in  %% Line 54
			apply 'decode'/2
			    (File, Password)
'is_auth_key'/3 =
    %% Line 57
    fun (_cor2,_cor1,_cor0) ->
	%% Line 58
	case apply 'lookup_user_key'/3
		 (_cor2, _cor1, _cor0) of
	  %% Line 59
	  <{'ok',_cor7}>
	      when call 'erlang':'=:='
		    (_cor7,
		     _cor2) ->
	      %% Line 60
	      'true'
	  %% Line 61
	  <_cor8> when 'true' ->
	      %% Line 62
	      'false'
	end
'is_host_key'/4 =
    %% Line 67
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 68
	case apply 'lookup_host_key'/4
		 (_cor3, _cor2, _cor1, _cor0) of
	  %% Line 69
	  <{'ok',_cor9}>
	      when call 'erlang':'=:='
		    (_cor9,
		     _cor3) ->
	      %% Line 70
	      'true'
	  %% Line 71
	  <_cor10> when 'true' ->
	      %% Line 72
	      'false'
	end
'user_key'/2 =
    %% Line 75
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 76
	    apply 'identity_key_filename'/1
		(_cor1)
	in  let <File> =
		%% Line 76
		apply 'file_name'/3
		    ('user', _cor2, _cor0)
	    in  let <_cor4> =
		    %% Line 77
		    apply 'identity_pass_phrase'/1
			(_cor1)
		in  let <Password> =
			%% Line 77
			call 'proplists':'get_value'
			    (_cor4, _cor0, 'ignore')
		    in  %% Line 78
			apply 'decode'/2
			    (File, Password)
'file_base_name'/1 =
    %% Line 83
    fun (_cor0) ->
	case _cor0 of
	  <'ssh-rsa'> when 'true' ->
	      %% Line 84
	      [115|[115|[104|[95|[104|[111|[115|[116|[95|[114|[115|[97|[95|[107|[101|[121]]]]]]]]]]]]]]]]
	  %% Line 85
	  <'ssh-dss'> when 'true' ->
	      %% Line 86
	      [115|[115|[104|[95|[104|[111|[115|[116|[95|[100|[115|[97|[95|[107|[101|[121]]]]]]]]]]]]]]]]
	  %% Line 87
	  <_cor2> when 'true' ->
	      %% Line 88
	      [115|[115|[104|[95|[104|[111|[115|[116|[95|[107|[101|[121]]]]]]]]]]]]
	end
'decode'/2 =
    %% Line 90
    fun (_cor1,_cor0) ->
	%% Line 91
	try
	    let <_cor2> =
		%% Line 92
		apply 'read_ssh_file'/1
		    (_cor1)
	    in  let <_cor3> =
		    %% Line 92
		    apply 'decode_ssh_file'/2
			(_cor2, _cor0)
		in  %% Line 92
		    {'ok',_cor3}
	of <_cor4> ->
	    _cor4
	catch <_cor7,_cor6,_cor5> ->
	    case <_cor7,_cor6,_cor5> of
	      %% Line 94
	      <'throw',Reason,_cor10> when 'true' ->
		  %% Line 95
		  {'error',Reason}
	      %% Line 96
	      <'error',Reason,_cor11> when 'true' ->
		  %% Line 97
		  {'error',Reason}
	      ( <_cor7,_cor6,_cor5> when 'true' ->
		    primop 'raise'
			(_cor5, _cor6)
		-| ['compiler_generated'] )
	    end
'read_ssh_file'/1 =
    %% Line 100
    fun (_cor0) ->
	%% Line 101
	case call 'file':'read_file'
		 (_cor0) of
	  <{'ok',Bin}> when 'true' ->
	      %% Line 102
	      Bin
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'decode_ssh_file'/2 =
    %% Line 105
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <SshBin,'public_key'> when 'true' ->
	      %% Line 106
	      call 'public_key':'ssh_decode'
		  (SshBin, 'public_key')
	  %% Line 109
	  <Pem,Password> when 'true' ->
	      %% Line 110
	      case call 'public_key':'pem_decode'
		       (Pem) of
		%% Line 111
		<[Entry = {_cor5,_cor6,'not_encrypted'}|[]]> when 'true' ->
		    %% Line 112
		    call 'public_key':'pem_entry_decode'
			(Entry)
		%% Line 113
		<[Entry|[]]>
		    when call 'erlang':'=/='
			  (Password,
			   'ignore') ->
		    %% Line 114
		    call 'public_key':'pem_entry_decode'
			(Entry, Password)
		%% Line 115
		<_cor7> when 'true' ->
		    %% Line 116
		    call 'erlang':'throw'
			([78|[111|[32|[112|[97|[115|[115|[32|[112|[104|[114|[97|[115|[101|[32|[112|[114|[111|[118|[105|[100|[101|[100|[32|[102|[111|[114|[32|[112|[114|[105|[118|[97|[116|[101|[32|[107|[101|[121|[32|[102|[105|[108|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	      end
	end
'lookup_host_key'/4 =
    %% Line 124
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Host1> =
	    %% Line 125
	    apply 'replace_localhost'/1
		(_cor2)
	in  %% Line 126
	    apply 'do_lookup_host_key'/4
		(_cor3, Host1, _cor1, _cor0)
'add_host_key'/3 =
    %% Line 129
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 130
	    apply 'replace_localhost'/1
		(_cor2)
	in  let <Host1> =
		%% Line 130
		apply 'add_ip'/1
		    (_cor3)
	    in  let <KnownHosts> =
		    %% Line 131
		    apply 'file_name'/3
			('user', [107|[110|[111|[119|[110|[95|[104|[111|[115|[116|[115]]]]]]]]]]], _cor0)
		in  %% Line 132
		    case call 'file':'open'
			     (KnownHosts, ['write'|['append']]) of
		      %% Line 133
		      <{'ok',Fd}> when 'true' ->
			  %% Line 134
			  case call 'file':'change_mode'
				   (KnownHosts, 420) of
			    <'ok'> when 'true' ->
				let <Res> =
				    %% Line 135
				    apply 'add_key_fd'/3
					(Fd, Host1, _cor1)
				in  do  %% Line 136
					call 'file':'close'
					    (Fd)
					%% Line 137
					Res
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor6})
			      -| ['compiler_generated'] )
			  end
		      %% Line 138
		      <Error> when 'true' ->
			  %% Line 139
			  Error
		    end
'lookup_user_key'/3 =
    %% Line 142
    fun (_cor2,_cor1,_cor0) ->
	let <SshDir> =
	    %% Line 143
	    apply 'ssh_dir'/2
		({'remoteuser',_cor1}, _cor0)
	in  %% Line 144
	    case apply 'lookup_user_key_f'/5
		     (_cor2, _cor1, SshDir, [97|[117|[116|[104|[111|[114|[105|[122|[101|[100|[95|[107|[101|[121|[115]]]]]]]]]]]]]]], _cor0) of
	      %% Line 145
	      <{'ok',_cor8}>
		  when call 'erlang':'=:='
			(_cor8,
			 _cor2) ->
		  %% Line 146
		  {'ok',_cor2}
	      %% Line 147
	      <_cor9> when 'true' ->
		  %% Line 148
		  apply 'lookup_user_key_f'/5
		      (_cor2, _cor1, SshDir, [97|[117|[116|[104|[111|[114|[105|[122|[101|[100|[95|[107|[101|[121|[115|[50]]]]]]]]]]]]]]]], _cor0)
	    end
'ssh_dir'/2 =
    %% Line 159
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'remoteuser',User},Opts> when 'true' ->
	      %% Line 160
	      case call 'proplists':'get_value'
		       ('user_dir_fun', Opts) of
		%% Line 161
		<'undefined'> when 'true' ->
		    %% Line 162
		    case call 'proplists':'get_value'
			     ('user_dir', Opts) of
		      %% Line 163
		      <'undefined'> when 'true' ->
			  %% Line 164
			  apply 'default_user_dir'/0
			      ()
		      %% Line 165
		      <Dir> when 'true' ->
			  %% Line 166
			  Dir
		    end
		%% Line 168
		<FUN> when 'true' ->
		    %% Line 169
		    apply FUN
			(User)
	      end
	  %% Line 173
	  <'user',Opts> when 'true' ->
	      %% Line 174
	      case call 'proplists':'get_value'
		       ('user_dir', Opts, 'false') of
		%% Line 175
		<'false'> when 'true' ->
		    apply 'default_user_dir'/0
			()
		%% Line 176
		<D> when 'true' ->
		    D
	      end
	  %% Line 180
	  <'system',Opts> when 'true' ->
	      %% Line 181
	      call 'proplists':'get_value'
		  ('system_dir', Opts, [47|[101|[116|[99|[47|[115|[115|[104]]]]]]]])
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'ssh_dir',2}}] )
	    -| ['compiler_generated'] )
	end
'file_name'/3 =
    %% Line 184
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 185
	    apply 'ssh_dir'/2
		(_cor2, _cor0)
	in  %% Line 185
	    call 'filename':'join'
		(_cor3, _cor1)
'add_ip'/1 =
    %% Line 191
    fun (_cor0) ->
	%% Line 192
	case call 'inet':'getaddr'
		 (_cor0, 'inet') of
	  %% Line 193
	  <{'ok',Addr}> when 'true' ->
	      %% Line 194
	      case call 'ssh_connection':'encode_ip'
		       (Addr) of
		%% Line 195
		<'false'> when 'true' ->
		    _cor0
		%% Line 196
		<IPString> when 'true' ->
		    let <_cor1> =
			[44|IPString]
		    in  call 'erlang':'++'
			    (_cor0, _cor1)
	      end
	  %% Line 198
	  <_cor5> when 'true' ->
	      _cor0
	end
'replace_localhost'/1 =
    %% Line 201
    fun (_cor0) ->
	case _cor0 of
	  <[108|[111|[99|[97|[108|[104|[111|[115|[116]]]]]]]]]> when 'true' ->
	      %% Line 202
	      case call 'inet':'gethostname'
		       () of
		<{'ok',Hostname}> when 'true' ->
		    %% Line 203
		    Hostname
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor1})
		  -| ['compiler_generated'] )
	      end
	  %% Line 204
	  <Host> when 'true' ->
	      %% Line 205
	      Host
	end
'do_lookup_host_key'/4 =
    %% Line 207
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 208
	    apply 'file_name'/3
		('user', [107|[110|[111|[119|[110|[95|[104|[111|[115|[116|[115]]]]]]]]]]], _cor0)
	in  %% Line 208
	    case call 'file':'open'
		     (_cor4, ['read'|['binary']]) of
	      %% Line 209
	      <{'ok',Fd}> when 'true' ->
		  let <Res> =
		      %% Line 210
		      apply 'lookup_host_key_fd'/4
			  (Fd, _cor3, _cor2, _cor1)
		  in  do  %% Line 211
			  call 'file':'close'
			      (Fd)
			  %% Line 212
			  {'ok',Res}
	      %% Line 213
	      <{'error','enoent'}> when 'true' ->
		  {'error','not_found'}
	      %% Line 214
	      <Error> when 'true' ->
		  Error
	    end
'identity_key_filename'/1 =
    %% Line 217
    fun (_cor0) ->
	case _cor0 of
	  <'ssh-dss'> when 'true' ->
	      %% Line 218
	      [105|[100|[95|[100|[115|[97]]]]]]
	  %% Line 219
	  <'ssh-rsa'> when 'true' ->
	      %% Line 220
	      [105|[100|[95|[114|[115|[97]]]]]]
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'identity_key_filename',1}}] )
	    -| ['compiler_generated'] )
	end
'identity_pass_phrase'/1 =
    %% Line 222
    fun (_cor0) ->
	case _cor0 of
	  <[115|[115|[104|[45|[100|[115|[115]]]]]]]> when 'true' ->
	      %% Line 223
	      'dsa_pass_phrase'
	  %% Line 224
	  <'ssh-dss'> when 'true' ->
	      %% Line 225
	      'dsa_pass_phrase'
	  %% Line 226
	  <'ssh-rsa'> when 'true' ->
	      %% Line 227
	      'rsa_pass_phrase'
	  %% Line 228
	  <[115|[115|[104|[45|[114|[115|[97]]]]]]]> when 'true' ->
	      %% Line 229
	      'rsa_pass_phrase'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'identity_pass_phrase',1}}] )
	    -| ['compiler_generated'] )
	end
'lookup_host_key_fd'/4 =
    %% Line 231
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 232
	case call 'io':'get_line'
		 (_cor3, '') of
	  %% Line 233
	  <'eof'> when 'true' ->
	      %% Line 234
	      {'error','not_found'}
	  %% Line 235
	  <Line> when 'true' ->
	      %% Line 236
	      case apply 'ssh_decode_line'/2
		       (Line, 'known_hosts') of
		%% Line 237
		<[{Key,Attributes}|[]]> when 'true' ->
		    let <_cor4> =
			%% Line 238
			call 'proplists':'get_value'
			    ('hostnames', Attributes)
		    in  %% Line 238
			apply 'handle_host'/6
			    (_cor3, _cor2, _cor1, _cor4, Key, _cor0)
		%% Line 239
		<[]> when 'true' ->
		    %% Line 240
		    apply 'lookup_host_key_fd'/4
			(_cor3, _cor2, _cor1, _cor0)
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor5})
		  -| ['compiler_generated'] )
	      end
	end
'ssh_decode_line'/2 =
    %% Line 244
    fun (_cor1,_cor0) ->
	%% Line 245
	try
	    %% Line 246
	    call 'public_key':'ssh_decode'
		(_cor1, _cor0)
	of <_cor2> ->
	    _cor2
	catch <_cor5,_cor4,_cor3> ->
	    %% Line 248
	    []
'handle_host'/6 =
    %% Line 251
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Host1> =
	    %% Line 252
	    apply 'host_name'/1
		(_cor3)
	in  let <_cor9> =
		%% Line 253
		( case call 'lists':'member'
			   (Host1, _cor2) of
		    ( <( 'true'
			 -| ['compiler_generated'] )> when 'true' ->
			  apply 'key_match'/2
			      (_cor1, _cor0)
		      -| ['compiler_generated'] )
		    ( <( 'false'
			 -| ['compiler_generated'] )> when 'true' ->
			  'false'
		      -| ['compiler_generated'] )
		    ( <_cor7> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {( 'badarg'
				      -| ['compiler_generated'] ),_cor7}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
	    in  %% Line 253
		case _cor9 of
		  %% Line 254
		  <'true'>
		      when call 'erlang':'=='
			    (_cor4,
			     _cor1) ->
		      _cor1
		  %% Line 256
		  <_cor17> when 'true' ->
		      %% Line 257
		      apply 'lookup_host_key_fd'/4
			  (_cor5, _cor4, _cor3, _cor0)
		end
'host_name'/1 =
    %% Line 260
    fun (_cor0) ->
	case _cor0 of
	  <Atom>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      %% Line 261
	      call 'erlang':'atom_to_list'
		  (Atom)
	  %% Line 262
	  <List> when 'true' ->
	      %% Line 263
	      List
	end
'key_match'/2 =
    %% Line 265
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'RSAPublicKey',_cor4,_cor5},'ssh-rsa'> when 'true' ->
	      %% Line 266
	      'true'
	  %% Line 267
	  <{_cor6,{'Dss-Parms',_cor7,_cor8,_cor9}},'ssh-dss'> when 'true' ->
	      %% Line 268
	      'true'
	  %% Line 269
	  <_cor10,_cor11> when 'true' ->
	      %% Line 270
	      'false'
	end
'add_key_fd'/3 =
    %% Line 272
    fun (_cor2,_cor1,_cor0) ->
	let <SshBin> =
	    %% Line 273
	    call 'public_key':'ssh_encode'
		([{_cor0,[{'hostnames',[_cor1|[]]}|[]]}|[]], 'known_hosts')
	in  %% Line 274
	    call 'file':'write'
		(_cor2, SshBin)
'lookup_user_key_f'/5 =
    %% Line 276
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_cor13,_X_User,[],_X_F,_X_Opts> when 'true' ->
	      %% Line 277
	      {'error','nouserdir'}
	  %% Line 278
	  <_cor14,_X_User,'nouserdir',_X_F,_X_Opts> when 'true' ->
	      %% Line 279
	      {'error','nouserdir'}
	  %% Line 280
	  <Key,_X_User,Dir,F,_X_Opts> when 'true' ->
	      let <FileName> =
		  %% Line 281
		  call 'filename':'join'
		      (Dir, F)
	      in  %% Line 282
		  case call 'file':'open'
			   (FileName, ['read'|['binary']]) of
		    %% Line 283
		    <{'ok',Fd}> when 'true' ->
			let <Res> =
			    %% Line 284
			    apply 'lookup_user_key_fd'/2
				(Fd, Key)
			in  do  %% Line 285
				call 'file':'close'
				    (Fd)
				%% Line 286
				Res
		    %% Line 287
		    <{'error',Reason}> when 'true' ->
			%% Line 288
			{'error',{{'openerr',Reason},{'file',FileName}}}
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor7})
		      -| ['compiler_generated'] )
		  end
	end
'lookup_user_key_fd'/2 =
    %% Line 291
    fun (_cor1,_cor0) ->
	%% Line 292
	case call 'io':'get_line'
		 (_cor1, '') of
	  %% Line 293
	  <'eof'> when 'true' ->
	      %% Line 294
	      {'error','not_found'}
	  %% Line 295
	  <Line> when 'true' ->
	      %% Line 296
	      case apply 'ssh_decode_line'/2
		       (Line, 'auth_keys') of
		%% Line 297
		<[{AuthKey,_cor7}|[]]> when 'true' ->
		    %% Line 298
		    case apply 'is_auth_key'/2
			     (_cor0, AuthKey) of
		      %% Line 299
		      <'true'> when 'true' ->
			  %% Line 300
			  {'ok',_cor0}
		      %% Line 301
		      <'false'> when 'true' ->
			  %% Line 302
			  apply 'lookup_user_key_fd'/2
			      (_cor1, _cor0)
		      ( <_cor2> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor2})
			-| ['compiler_generated'] )
		    end
		%% Line 304
		<[]> when 'true' ->
		    %% Line 305
		    apply 'lookup_user_key_fd'/2
			(_cor1, _cor0)
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor3})
		  -| ['compiler_generated'] )
	      end
	end
'is_auth_key'/2 =
    %% Line 309
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Key,_cor4>
	      when call 'erlang':'=:='
		    (_cor4,
		     Key) ->
	      %% Line 310
	      'true'
	  %% Line 311
	  <_cor5,_cor6> when 'true' ->
	      %% Line 312
	      'false'
	end
'default_user_dir'/0 =
    %% Line 314
    fun () ->
	%% Line 315
	case call 'init':'get_argument'
		 ('home') of
	  <{'ok',[[Home|_cor8]|[]]}> when 'true' ->
	      let <UserDir> =
		  %% Line 316
		  call 'filename':'join'
		      (Home, [46|[115|[115|[104]]]])
	      in  let <_cor2> =
		      %% Line 317
		      call 'filename':'join'
			  (UserDir, [100|[117|[109|[109|[121]]]]])
		  in  %% Line 317
		      case call 'filelib':'ensure_dir'
			       (_cor2) of
			<'ok'> when 'true' ->
			    %% Line 318
			    case call 'file':'read_file_info'
				     (UserDir) of
			      <{'ok',Info}> when 'true' ->
				  %% Line 319
				  case Info of
				    <{'file_info',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,Mode,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20}> when 'true' ->
					do  %% Line 320
					    case call 'erlang':'band'
						     (Mode, 511) of
					      %% Line 321
					      <448> when 'true' ->
						  'ok'
					      %% Line 323
					      <_X_Other> when 'true' ->
						  %% Line 324
						  case call 'file':'change_mode'
							   (UserDir, 448) of
						    <'ok'> when 'true' ->
							'ok'
						    ( <_cor6> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor6})
						      -| ['compiler_generated'] )
						  end
					    end
					    %% Line 326
					    UserDir
				    ( <_cor5> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor5})
				      -| ['compiler_generated'] )
				  end
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor4})
				-| ['compiler_generated'] )
			    end
			( <_cor3> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor3})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor0> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor0})
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ssh_file')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ssh_file', _cor0)
end