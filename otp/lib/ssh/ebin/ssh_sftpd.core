module 'ssh_sftpd' ['handle_msg'/2,
		    'handle_ssh_msg'/2,
		    'init'/1,
		    'listen'/1,
		    'listen'/2,
		    'listen'/3,
		    'module_info'/0,
		    'module_info'/1,
		    'stop'/1,
		    'subsystem_spec'/1,
		    'terminate'/2]
    attributes [%% Line 26
		'behaviour' =
		    %% Line 26
		    ['ssh_daemon_channel'],
		%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','file_info'},[{'typed_record_field',{'record_field',25,{'atom',25,'size'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'type'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'device'}|[{'atom',26,'directory'}|[{'atom',26,'other'}|[{'atom',26,'regular'}|[{'atom',26,'symlink'}]]]]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'access'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'atom',27,'read'}|[{'atom',27,'write'}|[{'atom',27,'read_write'}|[{'atom',27,'none'}]]]]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'atime'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'remote_type',28,[{'atom',28,'file'}|[{'atom',28,'date_time'}|[[]]]]}|[{'type',28,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'mtime'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'remote_type',32,[{'atom',32,'file'}|[{'atom',32,'date_time'}|[[]]]]}|[{'type',32,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',34,{'atom',34,'ctime'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'remote_type',34,[{'atom',34,'file'}|[{'atom',34,'date_time'}|[[]]]]}|[{'type',34,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',40,{'atom',40,'mode'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'links'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',46,{'atom',46,'major_device'}},{'type',46,'union',[{'atom',46,'undefined'}|[{'type',46,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'minor_device'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'inode'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',54,{'atom',54,'uid'}},{'type',54,'union',[{'atom',54,'undefined'}|[{'type',54,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',55,{'atom',55,'gid'}},{'type',55,'union',[{'atom',55,'undefined'}|[{'type',55,'non_neg_integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','file_descriptor'},[{'typed_record_field',{'record_field',59,{'atom',59,'module'}},{'type',59,'union',[{'atom',59,'undefined'}|[{'type',59,'module',[]}]]}}|[{'typed_record_field',{'record_field',60,{'atom',60,'data'}},{'type',60,'union',[{'atom',60,'undefined'}|[{'type',60,'term',[]}]]}}]],[]}],
		%% Line 64
		'type' =
		    %% Line 64
		    [{{'record','ssh'},[{'record_field',68,{'atom',68,'role'}}|[{'record_field',69,{'atom',69,'peer'}}|[{'record_field',71,{'atom',71,'c_vsn'}}|[{'record_field',72,{'atom',72,'s_vsn'}}|[{'record_field',74,{'atom',74,'c_version'}}|[{'record_field',75,{'atom',75,'s_version'}}|[{'record_field',77,{'atom',77,'c_keyinit'}}|[{'record_field',78,{'atom',78,'s_keyinit'}}|[{'record_field',80,{'atom',80,'algorithms'}}|[{'record_field',82,{'atom',82,'kex'}}|[{'record_field',83,{'atom',83,'hkey'}}|[{'record_field',84,{'atom',84,'key_cb'}}|[{'record_field',85,{'atom',85,'io_cb'}}|[{'record_field',87,{'atom',87,'send_mac'},{'atom',87,'none'}}|[{'record_field',88,{'atom',88,'send_mac_key'}}|[{'record_field',89,{'atom',89,'send_mac_size'},{'integer',89,0}}|[{'record_field',91,{'atom',91,'recv_mac'},{'atom',91,'none'}}|[{'record_field',92,{'atom',92,'recv_mac_key'}}|[{'record_field',93,{'atom',93,'recv_mac_size'},{'integer',93,0}}|[{'record_field',95,{'atom',95,'encrypt'},{'atom',95,'none'}}|[{'record_field',96,{'atom',96,'encrypt_keys'}}|[{'record_field',97,{'atom',97,'encrypt_block_size'},{'integer',97,8}}|[{'record_field',98,{'atom',98,'encrypt_ctx'}}|[{'record_field',100,{'atom',100,'decrypt'},{'atom',100,'none'}}|[{'record_field',101,{'atom',101,'decrypt_keys'}}|[{'record_field',102,{'atom',102,'decrypt_block_size'},{'integer',102,8}}|[{'record_field',103,{'atom',103,'decrypt_ctx'}}|[{'record_field',105,{'atom',105,'compress'},{'atom',105,'none'}}|[{'record_field',106,{'atom',106,'compress_ctx'}}|[{'record_field',107,{'atom',107,'decompress'},{'atom',107,'none'}}|[{'record_field',108,{'atom',108,'decompress_ctx'}}|[{'record_field',110,{'atom',110,'c_lng'},{'atom',110,'none'}}|[{'record_field',111,{'atom',111,'s_lng'},{'atom',111,'none'}}|[{'record_field',113,{'atom',113,'user_ack'},{'atom',113,'true'}}|[{'record_field',114,{'atom',114,'timeout'},{'atom',114,'infinity'}}|[{'record_field',116,{'atom',116,'shared_secret'}}|[{'record_field',117,{'atom',117,'exchanged_hash'}}|[{'record_field',118,{'atom',118,'session_id'}}|[{'record_field',120,{'atom',120,'opts'},{'nil',120}}|[{'record_field',121,{'atom',121,'send_sequence'},{'integer',121,0}}|[{'record_field',122,{'atom',122,'recv_sequence'},{'integer',122,0}}|[{'record_field',123,{'atom',123,'keyex_key'}}|[{'record_field',124,{'atom',124,'keyex_info'}}|[{'record_field',127,{'atom',127,'user'}}|[{'record_field',128,{'atom',128,'service'}}|[{'record_field',129,{'atom',129,'userauth_quiet_mode'}}|[{'record_field',130,{'atom',130,'userauth_supported_methods'}}|[{'record_field',131,{'atom',131,'userauth_methods'}}|[{'record_field',132,{'atom',132,'userauth_preference'}}|[{'record_field',133,{'atom',133,'available_host_keys'}}|[{'record_field',134,{'atom',134,'authenticated'},{'atom',134,'false'}}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','alg'},[{'record_field',139,{'atom',139,'kex'}}|[{'record_field',140,{'atom',140,'hkey'}}|[{'record_field',141,{'atom',141,'send_mac'}}|[{'record_field',142,{'atom',142,'recv_mac'}}|[{'record_field',143,{'atom',143,'encrypt'}}|[{'record_field',144,{'atom',144,'decrypt'}}|[{'record_field',145,{'atom',145,'compress'}}|[{'record_field',146,{'atom',146,'decompress'}}|[{'record_field',147,{'atom',147,'c_lng'}}|[{'record_field',148,{'atom',148,'s_lng'}}]]]]]]]]]],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{{'record','ssh_key'},[{'record_field',153,{'atom',153,'type'}}|[{'record_field',154,{'atom',154,'public'}}|[{'record_field',155,{'atom',155,'private'}}|[{'record_field',156,{'atom',156,'comment'},{'string',156,[]}}]]]],[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','ssh_pty'},[{'record_field',159,{'atom',159,'term'},{'string',159,[]}}|[{'record_field',160,{'atom',160,'width'},{'integer',160,80}}|[{'record_field',161,{'atom',161,'height'},{'integer',161,25}}|[{'record_field',162,{'atom',162,'pixel_width'},{'integer',162,1024}}|[{'record_field',163,{'atom',163,'pixel_height'},{'integer',163,768}}|[{'record_field',164,{'atom',164,'modes'},{'bin',164,[]}}]]]]]],[]}],
		%% Line 222
		'type' =
		    %% Line 222
		    [{{'record','ssh_xfer_attr'},[{'record_field',224,{'atom',224,'type'}}|[{'record_field',225,{'atom',225,'size'}}|[{'record_field',226,{'atom',226,'owner'}}|[{'record_field',227,{'atom',227,'group'}}|[{'record_field',228,{'atom',228,'permissions'}}|[{'record_field',229,{'atom',229,'atime'}}|[{'record_field',230,{'atom',230,'atime_nseconds'}}|[{'record_field',231,{'atom',231,'createtime'}}|[{'record_field',232,{'atom',232,'createtime_nseconds'}}|[{'record_field',233,{'atom',233,'mtime'}}|[{'record_field',234,{'atom',234,'mtime_nseconds'}}|[{'record_field',235,{'atom',235,'acl'}}|[{'record_field',236,{'atom',236,'attrib_bits'}}|[{'record_field',237,{'atom',237,'extensions'}}]]]]]]]]]]]]]],[]}],
		%% Line 240
		'type' =
		    %% Line 240
		    [{{'record','ssh_xfer_ace'},[{'record_field',242,{'atom',242,'type'}}|[{'record_field',243,{'atom',243,'flag'}}|[{'record_field',244,{'atom',244,'mask'}}|[{'record_field',245,{'atom',245,'who'}}]]]],[]}],
		%% Line 249
		'type' =
		    %% Line 249
		    [{{'record','ssh_xfer'},[{'record_field',251,{'atom',251,'vsn'}}|[{'record_field',252,{'atom',252,'ext'}}|[{'record_field',253,{'atom',253,'cm'}}|[{'record_field',254,{'atom',254,'channel'}}]]]],[]}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{{'record','state'},[{'record_field',41,{'atom',41,'xf'}}|[{'record_field',42,{'atom',42,'cwd'}}|[{'record_field',43,{'atom',43,'root'}}|[{'record_field',44,{'atom',44,'remote_channel'}}|[{'record_field',45,{'atom',45,'pending'}}|[{'record_field',46,{'atom',46,'file_handler'}}|[{'record_field',47,{'atom',47,'file_state'}}|[{'record_field',48,{'atom',48,'max_files'}}|[{'record_field',49,{'atom',49,'handles'}}]]]]]]]]],[]}]]
'subsystem_spec'/1 =
    %% Line 57
    fun (_cor0) ->
	%% Line 58
	{[115|[102|[116|[112]]]],{'ssh_sftpd',_cor0}}
'listen'/1 =
    %% Line 66
    fun (_cor0) ->
	%% Line 67
	apply 'listen'/3
	    ('any', _cor0, [])
'listen'/2 =
    %% Line 68
    fun (_cor1,_cor0) ->
	%% Line 69
	apply 'listen'/3
	    ('any', _cor1, _cor0)
'listen'/3 =
    %% Line 70
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 71
	    apply 'subsystem_spec'/1
		(_cor0)
	in  let <SubSystems> =
		%% Line 71
		[_cor3|[]]
	    in  %% Line 72
		call 'ssh':'daemon'
		    (_cor2, _cor1, [{'subsystems',SubSystems}|_cor0])
'stop'/1 =
    %% Line 78
    fun (_cor0) ->
	%% Line 79
	call 'ssh':'stop_listener'
	    (_cor0)
'init'/1 =
    %% Line 92
    fun (_cor0) ->
	let <FileMod,FS0> =
	    %% Line 93
	    case call 'proplists':'get_value'
		     ('file_handler', _cor0, %% Line 94
					     {'ssh_sftpd_file',[]}) of
	      %% Line 95
	      <{F,S}> when 'true' ->
		  %% Line 96
		  <F,S>
	      %% Line 97
	      <F> when 'true' ->
		  %% Line 98
		  <F,[]>
	    end
	in  %% Line 101
	    case call FileMod:'get_cwd'
		     (FS0) of
	      <{{'ok',Default},FS1}> when 'true' ->
		  let <CWD> =
		      %% Line 102
		      call 'proplists':'get_value'
			  ('cwd', _cor0, Default)
		  in  let <Root0> =
			  %% Line 104
			  call 'proplists':'get_value'
			      ('root', _cor0, [])
		      in  let <Root,State> =
			      %% Line 111
			      case apply 'resolve_symlinks'/2
				       (Root0, %% Line 112
					       {'state','undefined','undefined',Root0,'undefined','undefined',%% Line 113
													      FileMod,%% Line 114
														      FS1,'undefined','undefined'}) of
				%% Line 115
				<{{'ok',Root1},State0}> when 'true' ->
				    %% Line 116
				    <Root1,State0>
				%% Line 117
				<{{'error',_cor17},State0}> when 'true' ->
				    %% Line 118
				    <Root0,State0>
				( <_cor7> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor7})
				  -| ['compiler_generated'] )
			      end
			  in  let <MaxLength> =
				  %% Line 120
				  call 'proplists':'get_value'
				      ('max_files', _cor0, 0)
			      in  let <Vsn> =
				      %% Line 121
				      call 'proplists':'get_value'
					  ('sftpd_vsn', _cor0, 5)
				  in  let <_rec0> =
					  %% Line 124
					  {'ssh_xfer',Vsn,[],%% Line 253
							     'undefined',%% Line 254
									 'undefined'}
				      in  %% Line 124
					  case State of
					    <{'state',_rec2,_rec3,_rec4,_rec5,_rec6,_rec7,_rec8,_rec9,_rec10}> when 'true' ->
						let <_cor15> =
						    {'state',_rec0,CWD,Root,_rec5,#{}#,_rec7,_rec8,MaxLength,[]}
						in  {'ok',_cor15}
					    ( <_cor18> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','state'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor4})
		-| ['compiler_generated'] )
	    end
'handle_ssh_msg'/2 =
    %% Line 132
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'ssh_cm',_X_ConnectionManager,%% Line 133
					  {'data',_X_ChannelId,Type,Data}},%% Line 133
									   State> when 'true' ->
	      let <State1> =
		  %% Line 134
		  apply 'handle_data'/3
		      (Type, Data, State)
	      in  %% Line 135
		  {'ok',State1}
	  %% Line 137
	  <{'ssh_cm',_cor7,{'eof',ChannelId}},State> when 'true' ->
	      %% Line 138
	      {'stop',ChannelId,State}
	  %% Line 140
	  <{'ssh_cm',_cor8,{'signal',_cor9,_cor10}},State> when 'true' ->
	      %% Line 142
	      {'ok',State}
	  %% Line 144
	  <{'ssh_cm',_cor11,{'exit_signal',ChannelId,_cor12,Error,_cor13}},State> when 'true' ->
	      let <Report> =
		  %% Line 145
		  call 'io_lib':'format'
		      ([67|[111|[110|[110|[101|[99|[116|[105|[111|[110|[32|[99|[108|[111|[115|[101|[100|[32|[98|[121|[32|[112|[101|[101|[114|[32|[126|[110|[32|[69|[114|[114|[111|[114|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 146
																														       [Error|[]])
	      in  do  %% Line 147
		      call 'error_logger':'error_report'
			  (Report)
		      %% Line 148
		      {'stop',ChannelId,State}
	  %% Line 150
	  <{'ssh_cm',_cor14,{'exit_status',ChannelId,0}},State> when 'true' ->
	      %% Line 151
	      {'stop',ChannelId,State}
	  %% Line 153
	  <{'ssh_cm',_cor15,{'exit_status',ChannelId,Status}},State> when 'true' ->
	      let <Report> =
		  %% Line 155
		  call 'io_lib':'format'
		      ([67|[111|[110|[110|[101|[99|[116|[105|[111|[110|[32|[99|[108|[111|[115|[101|[100|[32|[98|[121|[32|[112|[101|[101|[114|[32|[126|[110|[32|[83|[116|[97|[116|[117|[115|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 156
																															    [Status|[]])
	      in  do  %% Line 157
		      call 'error_logger':'error_report'
			  (Report)
		      %% Line 158
		      {'stop',ChannelId,State}
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'handle_ssh_msg',2}}] )
	    -| ['compiler_generated'] )
	end
'handle_msg'/2 =
    %% Line 165
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'ssh_channel_up',ChannelId,ConnectionManager},State = %% Line 166
								  {'state',Xf,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19}> when 'true' ->
	      %% Line 167
	      case Xf of
		<{'ssh_xfer',_cor20,_cor21,_cor22,_cor23}> when 'true' ->
		    let <_cor3> =
			%% Line 168
			call 'erlang':'setelement'
			    (5, Xf, ChannelId)
		    in  let <_cor5> =
			    call 'erlang':'setelement'
				(4, _cor3, ConnectionManager)
			in  let <_cor9> =
				call 'erlang':'setelement'
				    (2, State, _cor5)
			    in  {'ok',_cor9}
		( <_cor24> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','ssh_xfer'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'handle_msg',2}}] )
	    -| ['compiler_generated'] )
	end
'terminate'/2 =
    %% Line 177
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor10,{'state',_cor11,_cor12,_cor13,_cor14,_cor15,FileMod,FS,_cor16,Handles}> when 'true' ->
	      let <CloseFun> =
		  %% Line 178
		  ( fun (_cor4,_cor3) ->
			case <_cor4,_cor3> of
			  <{_cor17,'file',{_cor18,Fd}},FS0> when 'true' ->
			      %% Line 179
			      case call FileMod:'close'
				       (Fd, FS0) of
				<{_X_Res,FS1}> when 'true' ->
				    %% Line 180
				    FS1
				( <_cor2> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor2})
				  -| ['compiler_generated'] )
			      end
			  %% Line 181
			  <_cor19,FS0> when 'true' ->
			      %% Line 182
			      FS0
			end
		    -| [{'id',{0,0,'-terminate/2-fun-0-'}}] )
	      in  do  %% Line 184
		      call 'lists':'foldl'
			  (CloseFun, FS, Handles)
		      %% Line 185
		      'ok'
	  ( <_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8})
		  -| [{'function_name',{'terminate',2}}] )
	    -| ['compiler_generated'] )
	end
'handle_data'/3 =
    %% Line 190
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <0,#{#<Len>(32,1,'integer',['unsigned'|['big']]),
	       #<Msg>(Len,8,'binary',['unsigned'|['big']]),
	       #<Rest>('all',8,'binary',['unsigned'|['big']])}#,State = %% Line 191
									{'state',_cor15,_cor16,_cor17,_cor18,#{}#,_cor19,_cor20,_cor21,_cor22}> when 'true' ->
	      %% Line 192
	      case ( Msg
		     -| ['reuse_for_context'] ) of
		<#{#<Op>(8,1,'integer',['unsigned'|['big']]),
		   #<ReqId>(32,1,'integer',['unsigned'|['big']]),
		   #<Data>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
		    let <NewState> =
			%% Line 193
			apply 'handle_op'/4
			    (Op, ReqId, Data, State)
		    in  %% Line 194
			case Rest of
			  %% Line 195
			  <#{}#> when 'true' ->
			      %% Line 196
			      NewState
			  %% Line 197
			  <_cor23> when 'true' ->
			      %% Line 198
			      apply 'handle_data'/3
				  (0, Rest, NewState)
			end
		( <_cor3> when 'true' ->
		      do  primop 'bs_context_to_binary'
			      (_cor3)
			  primop 'match_fail'
			      ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 201
	  <0,Data,State = {'state',_cor24,_cor25,_cor26,_cor27,#{}#,_cor28,_cor29,_cor30,_cor31}> when 'true' ->
	      %% Line 202
	      call 'erlang':'setelement'
		  (6, State, Data)
	  %% Line 204
	  <Type,Data,State = {'state',_cor42,_cor43,_cor44,_cor45,Pending,_cor46,_cor47,_cor48,_cor49}> when 'true' ->
	      let <_cor11> =
		  %% Line 205
		  #{#<Pending>('all',8,'binary',['unsigned'|['big']]),
		    #<Data>('all',8,'binary',['unsigned'|['big']])}#
	      in  let <_cor10> =
		      %% Line 206
		      call 'erlang':'setelement'
			  (6, State, #{}#)
		  in  %% Line 205
		      apply 'handle_data'/3
			  (Type, _cor11, _cor10)
	  ( <_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12})
		  -| [{'function_name',{'handle_data',3}}] )
	    -| ['compiler_generated'] )
	end
'handle_op'/4 =
    %% Line 208
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <1,Version,B,State>
	      when call 'erlang':'is_binary'
		    (B) ->
	      %% Line 209
	      ( case State of
		  ( <( {'state',_rec16,_cor148,_cor149,_cor150,_cor151,_cor152,_cor153,_cor154,_cor155}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 210
			( case _rec16 of
			    ( <( {'ssh_xfer',_rec17,_cor157,_cor158,_cor159}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <Vsn> =
				      call 'lists':'min'
					  ([_rec17|[Version|[]]])
				  in  let <_cor12> =
					  %% Line 211
					  call 'erlang':'setelement'
					      (2, _rec16, Vsn)
				      in  let <_cor14> =
					      %% Line 212
					      #{#<Vsn>(32,1,'integer',['unsigned'|['big']])}#
					  in  do  %% Line 212
						  call 'ssh_xfer':'xf_send_reply'
						      (_cor12, 2, _cor14)
						  %% Line 213
						  call 'erlang':'setelement'
						      (2, State, _cor12)
			      -| ['compiler_generated'] )
			    ( <_cor160> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','ssh_xfer'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor156> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 214
	  <16,ReqId,%% Line 215
		    #{#<Rlen>(32,1,'integer',['unsigned'|['big']]),
		      #<RPath>(Rlen,8,'binary',['unsigned'|['big']])}#,%% Line 216
								       State0> when 'true' ->
	      let <RelPath> =
		  %% Line 217
		  apply 'relate_file_name'/3
		      (RPath, State0, 'false')
	      in  %% Line 218
		  case apply 'resolve_symlinks'/2
			   (RelPath, State0) of
		    <{Res,State}> when 'true' ->
			%% Line 219
			case Res of
			  %% Line 220
			  <{'ok',AbsPath}> when 'true' ->
			      let <NewAbsPath> =
				  %% Line 221
				  apply 'chroot_filename'/2
				      (AbsPath, State)
			      in  %% Line 222
				  ( case State of
				      ( <( {'state',_rec20,_cor176,_cor177,_cor178,_cor179,_cor180,_cor181,_cor182,_cor183}
					   -| ['compiler_generated'] )> when 'true' ->
					    do  %% Line 224
						call 'ssh_xfer':'xf_send_name'
						    (_rec20, ReqId, NewAbsPath, {'ssh_xfer_attr','directory','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined'})
						%% Line 225
						State
					-| ['compiler_generated'] )
				      ( <_cor184> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','state'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			  %% Line 226
			  <Error = {'error',_cor185}> when 'true' ->
			      %% Line 227
			      apply 'send_status'/3
				  (Error, ReqId, State)
			  ( <_cor26> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor26})
			    -| ['compiler_generated'] )
			end
		    ( <_cor20> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor20})
		      -| ['compiler_generated'] )
		  end
	  %% Line 229
	  <11,ReqId,%% Line 230
		    #{#<RLen>(32,1,'integer',['unsigned'|['big']]),
		      #<RPath>(RLen,8,'binary',['unsigned'|['big']])}#,State0 = %% Line 231
										{'state',{'ssh_xfer',Vsn,_cor186,_cor187,_cor188},_cor189,_cor190,_cor191,_cor192,%% Line 232
																				  FileMod,%% Line 232
																					  FS0,_cor193,_cor194}> when 'true' ->
	      let <RelPath> =
		  %% Line 233
		  call 'unicode':'characters_to_list'
		      (RPath)
	      in  let <AbsPath> =
		      %% Line 234
		      apply 'relate_file_name'/2
			  (RelPath, State0)
		  in  let <_rec21> =
			  %% Line 236
			  ( {'ssh_xfer',Vsn,_cor186,_cor187,_cor188}
			    -| ['compiler_generated'] )
		      in  %% Line 237
			  case call FileMod:'is_dir'
				   (AbsPath, FS0) of
			    <{IsDir,FS1}> when 'true' ->
				let <_cor35> =
				    %% Line 238
				    call 'erlang':'setelement'
					(8, State0, FS1)
				in  %% Line 239
				    case IsDir of
				      %% Line 240
				      <'false'>
					  when call 'erlang':'>'
						(Vsn,
						 5) ->
					  do  %% Line 241
					      call 'ssh_xfer':'xf_send_status'
						  (_rec21, ReqId, 19, %% Line 242
								      [78|[111|[116|[32|[97|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121]]]]]]]]]]]]]]])
					      _cor35
				      %% Line 244
				      <'false'> when 'true' ->
					  do  %% Line 245
					      call 'ssh_xfer':'xf_send_status'
						  (_rec21, ReqId, 4, %% Line 246
								     [78|[111|[116|[32|[97|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121]]]]]]]]]]]]]]])
					      _cor35
				      %% Line 248
				      <'true'> when 'true' ->
					  %% Line 249
					  apply 'add_handle'/5
					      (_cor35, _rec21, ReqId, 'directory', {RelPath,'unread'})
				      ( <_cor37> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor37})
					-| ['compiler_generated'] )
				    end
			    ( <_cor32> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor32})
			      -| ['compiler_generated'] )
			  end
	  %% Line 251
	  <12,ReqId,%% Line 252
		    #{#<HLen>(32,1,'integer',['unsigned'|['big']]),
		      #<BinHandle>(HLen,8,'binary',['unsigned'|['big']])}#,%% Line 253
									   State> when 'true' ->
	      %% Line 254
	      ( case State of
		  ( <( {'state',_rec23,_cor214,_cor215,_cor216,_cor217,_cor218,_cor219,_cor220,_cor221}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 255
			case apply 'get_handle'/2
				 (_cor221, BinHandle) of
			  %% Line 256
			  <{_X_Handle,'directory',{_X_RelPath,'eof'}}> when 'true' ->
			      do  %% Line 257
				  call 'ssh_xfer':'xf_send_status'
				      (_rec23, ReqId, 1)
				  %% Line 258
				  State
			  %% Line 259
			  <{Handle,'directory',{RelPath,Status}}> when 'true' ->
			      %% Line 260
			      apply 'read_dir'/6
				  (State, _rec23, ReqId, Handle, RelPath, Status)
			  %% Line 261
			  <_cor232> when 'true' ->
			      do  %% Line 262
				  call 'ssh_xfer':'xf_send_status'
				      (_rec23, ReqId, 9)
				  %% Line 263
				  State
			end
		    -| ['compiler_generated'] )
		  ( <_cor222> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 265
	  <4,ReqId,%% Line 266
		   #{#<HLen>(32,1,'integer',['unsigned'|['big']]),
		     #<BinHandle>(HLen,8,'binary',['unsigned'|['big']])}#,State = %% Line 267
										  {'state',XF,_cor233,_cor234,_cor235,_cor236,%% Line 268
															      FileMod,%% Line 268
																      FS0,_cor237,Handles}> when 'true' ->
	      %% Line 269
	      case apply 'get_handle'/2
		       (Handles, BinHandle) of
		%% Line 270
		<{Handle,Type,T}> when 'true' ->
		    let <_cor45> =
			%% Line 271
			case Type of
			  %% Line 272
			  <'file'> when 'true' ->
			      %% Line 273
			      apply 'close_our_file'/3
				  (T, FileMod, FS0)
			  %% Line 274
			  <_cor238> when 'true' ->
			      %% Line 275
			      FS0
			end
		    in  do  %% Line 277
			    call 'ssh_xfer':'xf_send_status'
				(XF, ReqId, 0)
			    let <_rec25> =
				%% Line 278
				call 'lists':'keydelete'
				    (Handle, 1, Handles)
			    in  let <_cor49> =
				    %% Line 278
				    call 'erlang':'setelement'
					(10, State, _rec25)
				in  %% Line 279
				    call 'erlang':'setelement'
					(8, _cor49, _cor45)
		%% Line 280
		<_cor249> when 'true' ->
		    do  %% Line 281
			call 'ssh_xfer':'xf_send_status'
			    (XF, ReqId, 9)
			%% Line 282
			State
	      end
	  %% Line 284
	  <7,ReqId,Data,State> when 'true' ->
	      %% Line 285
	      ( case State of
		  ( <( {'state',_rec28,_cor250,_cor251,_cor252,_cor253,_cor254,_cor255,_cor256,_cor257}
		       -| ['compiler_generated'] )> when 'true' ->
			( case _rec28 of
			    ( <( {'ssh_xfer',_rec27,_cor259,_cor260,_cor261}
				 -| ['compiler_generated'] )> when 'true' ->
				  apply 'stat'/5
				      (_rec27, ReqId, Data, State, 'read_link_info')
			      -| ['compiler_generated'] )
			    ( <_cor262> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','ssh_xfer'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor258> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 286
	  <17,ReqId,Data,State> when 'true' ->
	      %% Line 287
	      ( case State of
		  ( <( {'state',_rec30,_cor263,_cor264,_cor265,_cor266,_cor267,_cor268,_cor269,_cor270}
		       -| ['compiler_generated'] )> when 'true' ->
			( case _rec30 of
			    ( <( {'ssh_xfer',_rec29,_cor272,_cor273,_cor274}
				 -| ['compiler_generated'] )> when 'true' ->
				  apply 'stat'/5
				      (_rec29, ReqId, Data, State, 'read_file_info')
			      -| ['compiler_generated'] )
			    ( <_cor275> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','ssh_xfer'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor271> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 288
	  <8,ReqId,Data,State> when 'true' ->
	      %% Line 289
	      ( case State of
		  ( <( {'state',_rec32,_cor276,_cor277,_cor278,_cor279,_cor280,_cor281,_cor282,_cor283}
		       -| ['compiler_generated'] )> when 'true' ->
			( case _rec32 of
			    ( <( {'ssh_xfer',_rec31,_cor285,_cor286,_cor287}
				 -| ['compiler_generated'] )> when 'true' ->
				  apply 'fstat'/4
				      (_rec31, ReqId, Data, State)
			      -| ['compiler_generated'] )
			    ( <_cor288> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','ssh_xfer'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor284> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 290
	  <3,ReqId,Data,State> when 'true' ->
	      %% Line 291
	      ( case State of
		  ( <( {'state',_rec34,_cor289,_cor290,_cor291,_cor292,_cor293,_cor294,_cor295,_cor296}
		       -| ['compiler_generated'] )> when 'true' ->
			( case _rec34 of
			    ( <( {'ssh_xfer',_rec33,_cor298,_cor299,_cor300}
				 -| ['compiler_generated'] )> when 'true' ->
				  apply 'open'/4
				      (_rec33, ReqId, Data, State)
			      -| ['compiler_generated'] )
			    ( <_cor301> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','ssh_xfer'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor297> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 292
	  <5,ReqId,#{#<HLen>(32,1,'integer',['unsigned'|['big']]),
		     #<BinHandle>(HLen,8,'binary',['unsigned'|['big']]),
		     #<%% Line 293
		       Offset>(%% Line 293
			       64,1,'integer',['unsigned'|['big']]),
		     #<%% Line 293
		       Len>(%% Line 293
			    32,1,'integer',['unsigned'|['big']])}#,%% Line 294
								   State> when 'true' ->
	      %% Line 295
	      ( case State of
		  ( <( {'state',_cor302,_cor303,_cor304,_cor305,_cor306,_cor307,_cor308,_cor309,_rec35}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'get_handle'/2
				 (_rec35, BinHandle) of
			  %% Line 296
			  <{_X_Handle,'file',{_X_Path,IoDevice}}> when 'true' ->
			      %% Line 297
			      apply 'read_file'/5
				  (ReqId, IoDevice, Offset, Len, State)
			  %% Line 298
			  <_cor311> when 'true' ->
			      do  %% Line 299
				  call 'ssh_xfer':'xf_send_status'
				      (_cor302, ReqId, %% Line 300
						       9)
				  %% Line 301
				  State
			end
		    -| ['compiler_generated'] )
		  ( <_cor310> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 303
	  <6,ReqId,%% Line 304
		   #{#<HLen>(32,1,'integer',['unsigned'|['big']]),
		     #<BinHandle>(HLen,8,'binary',['unsigned'|['big']]),
		     #<Offset>(64,1,'integer',['unsigned'|['big']]),
		     #<%% Line 305
		       Len>(%% Line 305
			    32,1,'integer',['unsigned'|['big']]),
		     #<%% Line 305
		       Data>(%% Line 305
			     Len,8,'binary',['unsigned'|['big']])}#,%% Line 305
								    State> when 'true' ->
	      %% Line 306
	      ( case State of
		  ( <( {'state',_cor321,_cor322,_cor323,_cor324,_cor325,_cor326,_cor327,_cor328,_rec37}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'get_handle'/2
				 (_rec37, BinHandle) of
			  %% Line 307
			  <{_X_Handle,'file',{_X_Path,IoDevice}}> when 'true' ->
			      %% Line 308
			      apply 'write_file'/5
				  (ReqId, IoDevice, Offset, Data, State)
			  %% Line 309
			  <_cor330> when 'true' ->
			      do  %% Line 310
				  call 'ssh_xfer':'xf_send_status'
				      (_cor321, ReqId, %% Line 311
						       9)
				  %% Line 312
				  State
			end
		    -| ['compiler_generated'] )
		  ( <_cor329> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 314
	  <19,ReqId,#{#<PLen>(32,1,'integer',['unsigned'|['big']]),
		      #<RelPath>(PLen,8,'binary',['unsigned'|['big']])}#,State = %% Line 315
										 {'state',_cor340,_cor341,_cor342,_cor343,_cor344,FileMod,FS0,_cor345,_cor346}> when 'true' ->
	      let <AbsPath> =
		  %% Line 316
		  apply 'relate_file_name'/2
		      (RelPath, State)
	      in  %% Line 317
		  case call FileMod:'read_link'
			   (AbsPath, FS0) of
		    <{Res,FS1}> when 'true' ->
			do  %% Line 318
			    case Res of
			      %% Line 319
			      <{'ok',NewPath}> when 'true' ->
				  %% Line 320
				  call 'ssh_xfer':'xf_send_name'
				      (_cor340, ReqId, NewPath, %% Line 321
								{'ssh_xfer_attr','regular','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined'})
			      %% Line 322
			      <{'error',Error}> when 'true' ->
				  let <_cor82> =
				      %% Line 324
				      call 'ssh_xfer':'encode_erlang_status'
					  (Error)
				  in  %% Line 323
				      call 'ssh_xfer':'xf_send_status'
					  (_cor340, ReqId, _cor82)
			      ( <_cor85> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor85})
				-| ['compiler_generated'] )
			    end
			    %% Line 326
			    call 'erlang':'setelement'
				(8, State, FS1)
		    ( <_cor79> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor79})
		      -| ['compiler_generated'] )
		  end
	  %% Line 327
	  <9,ReqId,#{#<PLen>(32,1,'integer',['unsigned'|['big']]),
		     #<BPath>(PLen,8,'binary',['unsigned'|['big']]),
		     #<%% Line 328
		       Attr>(%% Line 328
			     'all',8,'binary',['unsigned'|['big']])}#,%% Line 328
								      State0> when 'true' ->
	      let <Path> =
		  %% Line 329
		  apply 'relate_file_name'/2
		      (BPath, State0)
	      in  %% Line 330
		  case apply 'set_stat'/3
			   (Attr, Path, State0) of
		    <{Status,State1}> when 'true' ->
			%% Line 331
			apply 'send_status'/3
			    (Status, ReqId, State1)
		    ( <_cor89> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor89})
		      -| ['compiler_generated'] )
		  end
	  %% Line 332
	  <14,ReqId,#{#<PLen>(32,1,'integer',['unsigned'|['big']]),
		      #<BPath>(PLen,8,'binary',['unsigned'|['big']]),
		      #<%% Line 333
			Attr>(%% Line 333
			      'all',8,'binary',['unsigned'|['big']])}#,State0 = %% Line 334
										{'state',_cor375,_cor376,_cor377,_cor378,_cor379,FileMod,FS0,_cor380,_cor381}> when 'true' ->
	      let <Path> =
		  %% Line 335
		  apply 'relate_file_name'/2
		      (BPath, State0)
	      in  %% Line 336
		  case call FileMod:'make_dir'
			   (Path, FS0) of
		    <{Res,FS1}> when 'true' ->
			let <_cor94> =
			    %% Line 337
			    call 'erlang':'setelement'
				(8, State0, FS1)
			in  %% Line 338
			    case Res of
			      %% Line 339
			      <'ok'> when 'true' ->
				  %% Line 340
				  case apply 'set_stat'/3
					   (Attr, Path, _cor94) of
				    <{_cor392,State2}> when 'true' ->
					%% Line 341
					apply 'send_status'/3
					    ('ok', ReqId, State2)
				    ( <_cor96> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor96})
				      -| ['compiler_generated'] )
				  end
			      %% Line 342
			      <{'error',Error}> when 'true' ->
				  %% Line 343
				  apply 'send_status'/3
				      ({'error',Error}, ReqId, _cor94)
			      ( <_cor97> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor97})
				-| ['compiler_generated'] )
			    end
		    ( <_cor91> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor91})
		      -| ['compiler_generated'] )
		  end
	  %% Line 345
	  <10,ReqId,#{#<HLen>(32,1,'integer',['unsigned'|['big']]),
		      #<BinHandle>(HLen,8,'binary',['unsigned'|['big']]),
		      #<%% Line 346
			Attr>(%% Line 346
			      'all',8,'binary',['unsigned'|['big']])}#,State0 = %% Line 347
										{'state',_cor393,_cor394,_cor395,_cor396,_cor397,_cor398,_cor399,_cor400,Handles}> when 'true' ->
	      %% Line 349
	      case apply 'get_handle'/2
		       (Handles, BinHandle) of
		%% Line 350
		<{_X_Handle,_X_Type,{Path,_cor401}}> when 'true' ->
		    %% Line 351
		    case apply 'set_stat'/3
			     (Attr, Path, State0) of
		      <{Status,State1}> when 'true' ->
			  %% Line 352
			  apply 'send_status'/3
			      (Status, ReqId, State1)
		      ( <_cor98> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor98})
			-| ['compiler_generated'] )
		    end
		%% Line 353
		<_cor402> when 'true' ->
		    do  %% Line 354
			call 'ssh_xfer':'xf_send_status'
			    (_cor393, ReqId, %% Line 355
					     9)
			%% Line 356
			State0
	      end
	  %% Line 358
	  <13,ReqId,#{#<PLen>(32,1,'integer',['unsigned'|['big']]),
		      #<BPath>(PLen,8,'binary',['unsigned'|['big']])}#,State0 = %% Line 359
										{'state',{'ssh_xfer',Vsn,_cor412,_cor413,_cor414},_cor415,_cor416,_cor417,_cor418,FileMod,FS0,_cor419,_cor420}> when 'true' ->
	      let <Path> =
		  %% Line 360
		  apply 'relate_file_name'/2
		      (BPath, State0)
	      in  %% Line 361
		  case call FileMod:'is_dir'
			   (Path, FS0) of
		    <{IsDir,_X_FS1}> when 'true' ->
			%% Line 362
			case IsDir of
			  %% Line 363
			  <'true'>
			      when call 'erlang':'>'
				    (Vsn,
				     5) ->
			      let <_rec44> =
				  %% Line 364
				  ( {'ssh_xfer',Vsn,_cor412,_cor413,_cor414}
				    -| ['compiler_generated'] )
			      in  %% Line 364
				  call 'ssh_xfer':'xf_send_status'
				      (_rec44, ReqId, %% Line 365
						      24, %% Line 365
							  [70|[105|[108|[101|[32|[105|[115|[32|[97|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121]]]]]]]]]]]]]]]]]]])
			  %% Line 366
			  <'true'> when 'true' ->
			      let <_rec45> =
				  %% Line 367
				  ( {'ssh_xfer',Vsn,_cor412,_cor413,_cor414}
				    -| ['compiler_generated'] )
			      in  %% Line 367
				  call 'ssh_xfer':'xf_send_status'
				      (_rec45, ReqId, %% Line 368
						      4, %% Line 368
							 [70|[105|[108|[101|[32|[105|[115|[32|[97|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121]]]]]]]]]]]]]]]]]]])
			  %% Line 369
			  <'false'> when 'true' ->
			      %% Line 370
			      case call FileMod:'delete'
				       (Path, FS0) of
				<{Status,FS1}> when 'true' ->
				    let <_cor111> =
					%% Line 371
					call 'erlang':'setelement'
					    (8, State0, FS1)
				    in  %% Line 372
					apply 'send_status'/3
					    (Status, ReqId, _cor111)
				( <_cor108> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor108})
				  -| ['compiler_generated'] )
			      end
			  ( <_cor113> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor113})
			    -| ['compiler_generated'] )
			end
		    ( <_cor103> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor103})
		      -| ['compiler_generated'] )
		  end
	  %% Line 374
	  <15,ReqId,#{#<PLen>(32,1,'integer',['unsigned'|['big']]),
		      #<BPath>(PLen,8,'binary',['unsigned'|['big']])}#,State0 = %% Line 375
										{'state',_cor449,_cor450,_cor451,_cor452,_cor453,FileMod,FS0,_cor454,_cor455}> when 'true' ->
	      let <Path> =
		  %% Line 376
		  apply 'relate_file_name'/2
		      (BPath, State0)
	      in  %% Line 377
		  case call FileMod:'del_dir'
			   (Path, FS0) of
		    <{Status,FS1}> when 'true' ->
			let <_cor118> =
			    %% Line 378
			    call 'erlang':'setelement'
				(8, State0, FS1)
			in  %% Line 379
			    apply 'send_status'/3
				(Status, ReqId, _cor118)
		    ( <_cor115> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor115})
		      -| ['compiler_generated'] )
		  end
	  %% Line 381
	  <18,ReqId,Bin = %% Line 382
			  #{#<PLen>(32,1,'integer',['unsigned'|['big']]),
			    #<_cor466>(PLen,8,'binary',['unsigned'|['big']]),
			    #<PLen2>(32,1,'integer',['unsigned'|['big']]),
			    #<_cor467>(PLen2,8,'binary',['unsigned'|['big']])}#,State = %% Line 384
											{'state',{'ssh_xfer',Vsn,_cor468,_cor469,_cor470},_cor471,_cor472,_cor473,_cor474,_cor475,_cor476,_cor477,_cor478}>
	      when let <_cor120> =
		    %% Line 384
		    call 'erlang':'=='
			(Vsn, 3)
		in  let <_cor121> =
			%% Line 384
			call 'erlang':'=='
			    (Vsn, 4)
		    in  %% Line 384
			call 'erlang':'or'
			    (_cor120, _cor121) ->
	      let <_cor122> =
		  %% Line 385
		  #{#<Bin>('all',8,'binary',['unsigned'|['big']]),
		    #<0>(32,1,'integer',['unsigned'|['big']])}#
	      in  %% Line 385
		  apply 'handle_op'/4
		      (18, ReqId, _cor122, State)
	  %% Line 387
	  <18,ReqId,%% Line 388
		    #{#<PLen>(32,1,'integer',['unsigned'|['big']]),
		      #<BPath>(PLen,8,'binary',['unsigned'|['big']]),
		      #<PLen2>(32,1,'integer',['unsigned'|['big']]),
		      #<%% Line 389
			BPath2>(PLen2,8,'binary',['unsigned'|['big']]),
		      #<%% Line 389
			Flags>(%% Line 389
			       32,1,'integer',['unsigned'|['big']])}#,State0 = %% Line 390
									       {'state',_cor479,_cor480,_cor481,_cor482,_cor483,FileMod,FS0,_cor484,_cor485}> when 'true' ->
	      let <Path> =
		  %% Line 391
		  apply 'relate_file_name'/2
		      (BPath, State0)
	      in  let <Path2> =
		      %% Line 392
		      apply 'relate_file_name'/2
			  (BPath2, State0)
		  in  %% Line 393
		      case call 'erlang':'band'
			       (Flags, 2) of
			%% Line 394
			<0> when 'true' ->
			    %% Line 395
			    case call 'erlang':'band'
				     (Flags, 1) of
			      %% Line 396
			      <0> when 'true' ->
				  %% Line 397
				  case call FileMod:'read_link_info'
					   (Path2, FS0) of
				    <{Res,FS1}> when 'true' ->
					let <_cor128> =
					    %% Line 398
					    call 'erlang':'setelement'
						(8, State0, FS1)
					in  %% Line 399
					    case Res of
					      %% Line 400
					      <{'ok',_X_Info}> when 'true' ->
						  %% Line 402
						  ( case _cor128 of
						      ( <( {'state',_rec49,_cor496,_cor497,_cor498,_cor499,_cor500,_cor501,_cor502,_cor503}
							   -| ['compiler_generated'] )> when 'true' ->
							    do  call 'ssh_xfer':'xf_send_status'
								    (_rec49, %% Line 403
									     ReqId, %% Line 404
										    11)
								_cor128
							-| ['compiler_generated'] )
						      ( <_cor504> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','state'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
						    -| ['compiler_generated'] )
					      %% Line 406
					      <_cor505> when 'true' ->
						  %% Line 407
						  apply 'rename'/4
						      (Path, Path2, ReqId, _cor128)
					    end
				    ( <_cor125> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor125})
				      -| ['compiler_generated'] )
				  end
			      %% Line 409
			      <_cor506> when 'true' ->
				  %% Line 410
				  apply 'rename'/4
				      (Path, Path2, ReqId, State0)
			    end
			%% Line 412
			<_cor507> when 'true' ->
			    do  %% Line 413
				call 'ssh_xfer':'xf_send_status'
				    (_cor479, ReqId, %% Line 414
						     8)
				%% Line 415
				State0
		      end
	  %% Line 417
	  <20,ReqId,%% Line 418
		    #{#<PLen>(32,1,'integer',['unsigned'|['big']]),
		      #<Link>(PLen,8,'binary',['unsigned'|['big']]),
		      #<PLen2>(32,1,'integer',['unsigned'|['big']]),
		      #<%% Line 419
			Target>(PLen2,8,'binary',['unsigned'|['big']])}#,State0 = %% Line 420
										  {'state',_cor517,_cor518,_cor519,_cor520,_cor521,FileMod,FS0,_cor522,_cor523}> when 'true' ->
	      let <LinkPath> =
		  %% Line 421
		  apply 'relate_file_name'/2
		      (Link, State0)
	      in  let <TargetPath> =
		      %% Line 422
		      apply 'relate_file_name'/2
			  (Target, State0)
		  in  %% Line 423
		      case call FileMod:'make_symlink'
			       (TargetPath, LinkPath, FS0) of
			<{Status,FS1}> when 'true' ->
			    let <_cor142> =
				%% Line 424
				call 'erlang':'setelement'
				    (8, State0, FS1)
			    in  %% Line 425
				apply 'send_status'/3
				    (Status, ReqId, _cor142)
			( <_cor139> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor139})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor147,_cor146,_cor145,_cor144> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor147,_cor146,_cor145,_cor144})
		  -| [{'function_name',{'handle_op',4}}] )
	    -| ['compiler_generated'] )
	end
'new_handle'/2 =
    %% Line 427
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],H> when 'true' ->
	      %% Line 428
	      H
	  %% Line 429
	  <[{N,_cor5,_cor6}|Rest],H>
	      when call 'erlang':'=<'
		    (N,
		     H) ->
	      let <_cor2> =
		  %% Line 430
		  call 'erlang':'+'
		      (N, 1)
	      in  %% Line 430
		  apply 'new_handle'/2
		      (Rest, _cor2)
	  %% Line 431
	  <[_cor7|Rest],H> when 'true' ->
	      %% Line 432
	      apply 'new_handle'/2
		  (Rest, H)
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'new_handle',2}}] )
	    -| ['compiler_generated'] )
	end
'add_handle'/5 =
    %% Line 434
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 435
	( case _cor4 of
	    ( <( {'state',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_rec52}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Handle> =
		      %% Line 436
		      apply 'new_handle'/2
			  (_rec52, 0)
		  in  let <_cor9> =
			  %% Line 437
			  call 'erlang':'integer_to_list'
			      (Handle)
		      in  do  %% Line 437
			      call 'ssh_xfer':'xf_send_handle'
				  (_cor3, _cor2, _cor9)
			      let <_rec53> =
				  %% Line 440
				  [{Handle,_cor1,_cor0}|_rec52]
			      in  %% Line 440
				  call 'erlang':'setelement'
				      (10, _cor4, _rec53)
	      -| ['compiler_generated'] )
	    ( <_cor26> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'get_handle'/2 =
    %% Line 442
    fun (_cor1,_cor0) ->
	let <_cor3> =
	    catch
		let <_cor2> =
		    %% Line 443
		    call 'erlang':'binary_to_list'
			(_cor0)
		in  %% Line 443
		    call 'erlang':'list_to_integer'
			(_cor2)
	in  %% Line 443
	    case _cor3 of
	      %% Line 444
	      <I>
		  when call 'erlang':'is_integer'
			(_cor3) ->
		  %% Line 445
		  case call 'lists':'keysearch'
			   (I, 1, _cor1) of
		    %% Line 446
		    <{'value',T}> when 'true' ->
			T
		    %% Line 447
		    <'false'> when 'true' ->
			'error'
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor4})
		      -| ['compiler_generated'] )
		  end
	      %% Line 449
	      <_cor8> when 'true' ->
		  %% Line 450
		  'error'
	    end
'read_dir'/6 =
    %% Line 454
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <State0 = {'state',_cor55,_cor56,_cor57,_cor58,_cor59,FileMod,FS0,MaxLength,_cor60},%% Line 455
											      XF,%% Line 455
												 ReqId,%% Line 455
												       Handle,%% Line 455
													      RelPath,%% Line 455
														      {'cache',Files}> when 'true' ->
	      let <AbsPath> =
		  %% Line 456
		  apply 'relate_file_name'/2
		      (RelPath, State0)
	      in  %% Line 457
		  case <> of
		    %% Line 458
		    <>
			when try
			      let <_cor7> =
				  call 'erlang':'length'
				      (Files)
			      in  call 'erlang':'>'
				      (_cor7, MaxLength)
			  of <Try> ->
			      Try
			  catch <T,R> ->
			      'false' ->
			%% Line 459
			case call 'lists':'split'
				 (MaxLength, Files) of
			  <{ToSend,NewCache}> when 'true' ->
			      %% Line 460
			      case apply 'get_attrs'/4
				       (AbsPath, ToSend, FileMod, FS0) of
				<{NamesAndAttrs,FS1}> when 'true' ->
				    do  %% Line 461
					call 'ssh_xfer':'xf_send_names'
					    (XF, ReqId, NamesAndAttrs)
					let <Handles> =
					    %% Line 462
					    call 'lists':'keyreplace'
						(Handle, 1, _cor60, %% Line 464
								    {Handle,'directory',{RelPath,{'cache',NewCache}}})
					in  let <_cor14> =
						%% Line 465
						call 'erlang':'setelement'
						    (10, State0, Handles)
					    in  %% Line 465
						call 'erlang':'setelement'
						    (8, _cor14, FS1)
				( <_cor9> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor9})
				  -| ['compiler_generated'] )
			      end
			  ( <_cor8> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor8})
			    -| ['compiler_generated'] )
			end
		    %% Line 466
		    <> when 'true' ->
			%% Line 467
			case apply 'get_attrs'/4
				 (AbsPath, Files, FileMod, FS0) of
			  <{NamesAndAttrs,FS1}> when 'true' ->
			      do  %% Line 468
				  call 'ssh_xfer':'xf_send_names'
				      (XF, ReqId, NamesAndAttrs)
				  let <Handles> =
				      %% Line 469
				      call 'lists':'keyreplace'
					  (Handle, 1, _cor60, %% Line 471
							      {Handle,'directory',{RelPath,'eof'}})
				  in  let <_cor21> =
					  %% Line 472
					  call 'erlang':'setelement'
					      (10, State0, Handles)
				      in  %% Line 472
					  call 'erlang':'setelement'
					      (8, _cor21, FS1)
			  ( <_cor16> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor16})
			    -| ['compiler_generated'] )
			end
		  end
	  %% Line 474
	  <State0 = {'state',_cor99,_cor100,_cor101,_cor102,_cor103,FileMod,FS0,MaxLength,_cor104},%% Line 475
												   XF,%% Line 475
												      ReqId,%% Line 475
													    Handle,%% Line 475
														   RelPath,%% Line 475
															   _X_Status> when 'true' ->
	      let <AbsPath> =
		  %% Line 476
		  apply 'relate_file_name'/2
		      (RelPath, State0)
	      in  %% Line 477
		  case call FileMod:'list_dir'
			   (AbsPath, FS0) of
		    <{Res,FS1}> when 'true' ->
			%% Line 478
			case Res of
			  %% Line 479
			  <{'ok',Files}>
			      when try
				    ( case <> of
					( <>
					      when call 'erlang':'=='
						    (MaxLength,
						     0) ->
					      'true'
					  -| ['compiler_generated'] )
					( <> when 'true' ->
					      let <_cor26> =
						  call 'erlang':'length'
						      (Files)
					      in  call 'erlang':'>'
						      (MaxLength, _cor26)
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				of <Try> ->
				    Try
				catch <T,R> ->
				    'false' ->
			      %% Line 480
			      case apply 'get_attrs'/4
				       (AbsPath, Files, FileMod, FS1) of
				<{NamesAndAttrs,FS2}> when 'true' ->
				    do  %% Line 481
					call 'ssh_xfer':'xf_send_names'
					    (XF, ReqId, NamesAndAttrs)
					let <Handles> =
					    %% Line 482
					    call 'lists':'keyreplace'
						(Handle, 1, _cor104, %% Line 484
								     {Handle,'directory',{RelPath,'eof'}})
					in  let <_cor34> =
						%% Line 485
						call 'erlang':'setelement'
						    (10, State0, Handles)
					    in  %% Line 485
						call 'erlang':'setelement'
						    (8, _cor34, FS2)
				( <_cor29> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor29})
				  -| ['compiler_generated'] )
			      end
			  %% Line 486
			  <{'ok',Files}> when 'true' ->
			      %% Line 487
			      case call 'lists':'split'
				       (MaxLength, Files) of
				<{ToSend,Cache}> when 'true' ->
				    %% Line 488
				    case apply 'get_attrs'/4
					     (AbsPath, ToSend, FileMod, FS1) of
				      <{NamesAndAttrs,FS2}> when 'true' ->
					  do  %% Line 489
					      call 'ssh_xfer':'xf_send_names'
						  (XF, ReqId, NamesAndAttrs)
					      let <Handles> =
						  %% Line 490
						  call 'lists':'keyreplace'
						      (Handle, 1, _cor104, %% Line 492
									   {Handle,'directory',{RelPath,{'cache',Cache}}})
					      in  let <_cor42> =
						      %% Line 493
						      call 'erlang':'setelement'
							  (10, State0, Handles)
						  in  %% Line 493
						      call 'erlang':'setelement'
							  (8, _cor42, FS2)
				      ( <_cor37> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor37})
					-| ['compiler_generated'] )
				    end
				( <_cor36> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor36})
				  -| ['compiler_generated'] )
			      end
			  %% Line 494
			  <{'error',Error}> when 'true' ->
			      let <_cor46> =
				  %% Line 495
				  call 'erlang':'setelement'
				      (8, State0, FS1)
			      in  %% Line 496
				  apply 'send_status'/3
				      ({'error',Error}, ReqId, _cor46)
			  ( <_cor48> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor48})
			    -| ['compiler_generated'] )
			end
		    ( <_cor24> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor24})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor54,_cor53,_cor52,_cor51,_cor50,_cor49> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor54,_cor53,_cor52,_cor51,_cor50,_cor49})
		  -| [{'function_name',{'read_dir',6}}] )
	    -| ['compiler_generated'] )
	end
'get_attrs'/4 =
    %% Line 501
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 502
	apply 'get_attrs'/5
	    (_cor3, _cor2, _cor1, _cor0, [])
'get_attrs'/5 =
    %% Line 504
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_RelPath,[],_X_FileMod,FS,Acc> when 'true' ->
	      let <_cor5> =
		  %% Line 505
		  call 'lists':'reverse'
		      (Acc)
	      in  %% Line 505
		  {_cor5,FS}
	  %% Line 506
	  <RelPath,[F|Rest],FileMod,FS0,Acc> when 'true' ->
	      let <Path> =
		  %% Line 507
		  call 'filename':'absname'
		      (F, RelPath)
	      in  %% Line 508
		  case call FileMod:'read_link_info'
			   (Path, FS0) of
		    %% Line 509
		    <{{'ok',Info},FS1}> when 'true' ->
			let <Attrs> =
			    %% Line 510
			    call 'ssh_sftp':'info_to_attr'
				(Info)
			in  %% Line 511
			    apply 'get_attrs'/5
				(RelPath, Rest, FileMod, FS1, [{F,Attrs}|Acc])
		    %% Line 512
		    <{{'error','enoent'},FS1}> when 'true' ->
			%% Line 513
			apply 'get_attrs'/5
			    (RelPath, Rest, FileMod, FS1, Acc)
		    %% Line 514
		    <{Error,FS1}> when 'true' ->
			%% Line 515
			{Error,FS1}
		    ( <_cor8> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor8})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'get_attrs',5}}] )
	    -| ['compiler_generated'] )
	end
'close_our_file'/3 =
    %% Line 518
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{_cor7,Fd},FileMod,FS0> when 'true' ->
	      %% Line 519
	      case call FileMod:'close'
		       (Fd, FS0) of
		<{_X_Res,FS1}> when 'true' ->
		    %% Line 520
		    FS1
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'close_our_file',3}}] )
	    -| ['compiler_generated'] )
	end
'stat'/5 =
    %% Line 523
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Vsn,ReqId,Data,State,F>
	      when call 'erlang':'=<'
		    (Vsn,
		     3) ->
	      %% Line 524
	      case ( Data
		     -| ['reuse_for_context'] ) of
		<#{#<BLen>(32,1,'integer',['unsigned'|['big']]),
		   #<BPath>(BLen,8,'binary',['unsigned'|['big']])}#> when 'true' ->
		    let <_cor6> =
			%% Line 525
			call 'unicode':'characters_to_list'
			    (BPath)
		    in  %% Line 525
			apply 'stat'/4
			    (ReqId, _cor6, State, F)
		( <_cor5> when 'true' ->
		      do  primop 'bs_context_to_binary'
			      (_cor5)
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 526
	  <Vsn,ReqId,Data,State,F>
	      when call 'erlang':'>='
		    (Vsn,
		     4) ->
	      %% Line 527
	      case ( Data
		     -| ['reuse_for_context'] ) of
		<#{#<BLen>(32,1,'integer',['unsigned'|['big']]),
		   #<BPath>(BLen,8,'binary',['unsigned'|['big']]),
		   #<_X_Flags>(32,1,'integer',['unsigned'|['big']])}#> when 'true' ->
		    let <_cor8> =
			%% Line 528
			call 'unicode':'characters_to_list'
			    (BPath)
		    in  %% Line 528
			apply 'stat'/4
			    (ReqId, _cor8, State, F)
		( <_cor7> when 'true' ->
		      do  primop 'bs_context_to_binary'
			      (_cor7)
			  primop 'match_fail'
			      ({'badmatch',_cor7})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'stat',5}}] )
	    -| ['compiler_generated'] )
	end
'fstat'/4 =
    %% Line 530
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Vsn,ReqId,Data,State>
	      when call 'erlang':'=<'
		    (Vsn,
		     3) ->
	      %% Line 531
	      case ( Data
		     -| ['reuse_for_context'] ) of
		<#{#<HLen>(32,1,'integer',['unsigned'|['big']]),
		   #<Handle>(HLen,8,'binary',['unsigned'|['big']])}#> when 'true' ->
		    %% Line 532
		    apply 'fstat'/3
			(ReqId, Handle, State)
		( <_cor4> when 'true' ->
		      do  primop 'bs_context_to_binary'
			      (_cor4)
			  primop 'match_fail'
			      ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 533
	  <Vsn,ReqId,Data,State>
	      when call 'erlang':'>='
		    (Vsn,
		     4) ->
	      %% Line 534
	      case ( Data
		     -| ['reuse_for_context'] ) of
		<#{#<HLen>(32,1,'integer',['unsigned'|['big']]),
		   #<Handle>(HLen,8,'binary',['unsigned'|['big']]),
		   #<_X_Flags>(32,1,'integer',['unsigned'|['big']])}#> when 'true' ->
		    %% Line 535
		    apply 'fstat'/3
			(ReqId, Handle, State)
		( <_cor5> when 'true' ->
		      do  primop 'bs_context_to_binary'
			      (_cor5)
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'fstat',4}}] )
	    -| ['compiler_generated'] )
	end
'fstat'/3 =
    %% Line 537
    fun (_cor2,_cor1,_cor0) ->
	%% Line 538
	( case _cor0 of
	    ( <( {'state',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_rec64}
		 -| ['compiler_generated'] )> when 'true' ->
		  case apply 'get_handle'/2
			   (_rec64, _cor1) of
		    %% Line 539
		    <{_X_Handle,_X_Type,{Path,_cor20}}> when 'true' ->
			%% Line 540
			apply 'stat'/4
			    (_cor2, Path, _cor0, 'read_file_info')
		    %% Line 541
		    <_cor21> when 'true' ->
			do  %% Line 542
			    call 'ssh_xfer':'xf_send_status'
				(_cor11, _cor2, %% Line 543
						9)
			    _cor0
		  end
	      -| ['compiler_generated'] )
	    ( <_cor19> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'stat'/4 =
    %% Line 547
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <ReqId,RelPath,State0 = {'state',_cor19,_cor20,_cor21,_cor22,_cor23,FileMod,%% Line 548
										      FS0,_cor24,_cor25},%% Line 548
													 F> when 'true' ->
	      let <AbsPath> =
		  %% Line 549
		  apply 'relate_file_name'/2
		      (RelPath, State0)
	      in  %% Line 551
		  case call FileMod:F
			   (AbsPath, FS0) of
		    <{Res,FS1}> when 'true' ->
			let <_cor11> =
			    %% Line 552
			    call 'erlang':'setelement'
				(8, State0, FS1)
			in  %% Line 553
			    case Res of
			      %% Line 554
			      <{'ok',FileInfo}> when 'true' ->
				  let <_cor13> =
				      %% Line 556
				      call 'ssh_sftp':'info_to_attr'
					  (FileInfo)
				  in  do  %% Line 555
					  call 'ssh_xfer':'xf_send_attr'
					      (_cor19, ReqId, _cor13)
					  _cor11
			      %% Line 558
			      <{'error',E}> when 'true' ->
				  %% Line 559
				  apply 'send_status'/3
				      ({'error',E}, ReqId, _cor11)
			      ( <_cor14> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor14})
				-| ['compiler_generated'] )
			    end
		    ( <_cor8> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor8})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17,_cor16,_cor15})
		  -| [{'function_name',{'stat',4}}] )
	    -| ['compiler_generated'] )
	end
'decode_4_open_flag'/1 =
    %% Line 562
    fun (_cor0) ->
	case _cor0 of
	  <'create_new'> when 'true' ->
	      %% Line 563
	      ['write']
	  %% Line 564
	  <'create_truncate'> when 'true' ->
	      %% Line 565
	      ['write']
	  %% Line 566
	  <'truncate_existing'> when 'true' ->
	      %% Line 567
	      ['write']
	  %% Line 568
	  <'open_existing'> when 'true' ->
	      %% Line 569
	      ['read']
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'decode_4_open_flag',1}}] )
	    -| ['compiler_generated'] )
	end
'decode_4_flags'/1 =
    %% Line 571
    fun (_cor0) ->
	case _cor0 of
	  <[OpenFlag|Flags]> when 'true' ->
	      let <_cor1> =
		  %% Line 572
		  apply 'decode_4_open_flag'/1
		      (OpenFlag)
	      in  %% Line 572
		  apply 'decode_4_flags'/2
		      (Flags, _cor1)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'decode_4_flags',1}}] )
	    -| ['compiler_generated'] )
	end
'decode_4_flags'/2 =
    %% Line 574
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],Flags> when 'true' ->
	      %% Line 575
	      Flags
	  %% Line 576
	  <['append_data'|R],_X_Flags> when 'true' ->
	      %% Line 577
	      apply 'decode_4_flags'/2
		  (R, ['append'])
	  %% Line 578
	  <['append_data_atomic'|R],_X_Flags> when 'true' ->
	      %% Line 579
	      apply 'decode_4_flags'/2
		  (R, ['append'])
	  %% Line 580
	  <[_cor4|R],Flags> when 'true' ->
	      %% Line 581
	      apply 'decode_4_flags'/2
		  (R, Flags)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'decode_4_flags',2}}] )
	    -| ['compiler_generated'] )
	end
'decode_4_access_flag'/1 =
    %% Line 583
    fun (_cor0) ->
	case _cor0 of
	  <'read_data'> when 'true' ->
	      %% Line 584
	      ['read']
	  %% Line 585
	  <'list_directory'> when 'true' ->
	      %% Line 586
	      ['read']
	  %% Line 587
	  <'write_data'> when 'true' ->
	      %% Line 588
	      ['write']
	  %% Line 589
	  <'add_file'> when 'true' ->
	      %% Line 590
	      ['write']
	  %% Line 591
	  <'add_subdirectory'> when 'true' ->
	      %% Line 592
	      ['read']
	  %% Line 593
	  <'append_data'> when 'true' ->
	      %% Line 594
	      ['append']
	  %% Line 595
	  <'write_attributes'> when 'true' ->
	      %% Line 596
	      ['write']
	  %% Line 597
	  <_cor2> when 'true' ->
	      %% Line 598
	      ['read']
	end
'decode_4_acess'/1 =
    %% Line 600
    fun (_cor0) ->
	case _cor0 of
	  <Flags = [_cor6|_cor7]> when 'true' ->
	      let <_cor4> =
		  %% Line 601
		  ( fun (_cor2) ->
			let <_cor1> =
			    %% Line 602
			    apply 'decode_4_access_flag'/1
				(_cor2)
			in  %% Line 602
			    [_cor1|[]]
		    -| [{'id',{0,0,'-decode_4_acess/1-fun-0-'}}] )
	      in  %% Line 601
		  call 'lists':'map'
		      (_cor4, %% Line 603
			      Flags)
	  %% Line 604
	  <[]> when 'true' ->
	      %% Line 605
	      []
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5})
		  -| [{'function_name',{'decode_4_acess',1}}] )
	    -| ['compiler_generated'] )
	end
'open'/4 =
    %% Line 607
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Vsn,ReqId,Data,State>
	      when call 'erlang':'=<'
		    (Vsn,
		     3) ->
	      %% Line 609
	      case ( Data
		     -| ['reuse_for_context'] ) of
		<#{#<BLen>(32,1,'integer',['unsigned'|['big']]),
		   #<BPath>(BLen,8,'binary',['unsigned'|['big']]),
		   #<PFlags>(32,1,'integer',['unsigned'|['big']]),
		   #<_X_Attrs>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
		    let <Path> =
			%% Line 610
			call 'unicode':'characters_to_list'
			    (BPath)
		    in  let <Flags> =
			    %% Line 611
			    call 'ssh_xfer':'decode_open_flags'
				(Vsn, PFlags)
			in  %% Line 612
			    apply 'do_open'/4
				(ReqId, State, Path, Flags)
		( <_cor4> when 'true' ->
		      do  primop 'bs_context_to_binary'
			      (_cor4)
			  primop 'match_fail'
			      ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 613
	  <Vsn,ReqId,Data,State>
	      when call 'erlang':'>='
		    (Vsn,
		     4) ->
	      %% Line 615
	      case ( Data
		     -| ['reuse_for_context'] ) of
		<#{#<BLen>(32,1,'integer',['unsigned'|['big']]),
		   #<BPath>(BLen,8,'binary',['unsigned'|['big']]),
		   #<Access>(32,1,'integer',['unsigned'|['big']]),
		   #<PFlags>(32,1,'integer',['unsigned'|['big']]),
		   #<_X_Attrs>('all',8,'binary',['unsigned'|['big']])}#> when 'true' ->
		    let <Path> =
			%% Line 616
			call 'unicode':'characters_to_list'
			    (BPath)
		    in  let <FlagBits> =
			    %% Line 617
			    call 'ssh_xfer':'decode_open_flags'
				(Vsn, PFlags)
			in  let <AcessBits> =
				%% Line 618
				call 'ssh_xfer':'decode_ace_mask'
				    (Access)
			    in  let <AcessFlags> =
				    %% Line 625
				    apply 'decode_4_acess'/1
					(AcessBits)
				in  let <_cor12> =
					%% Line 627
					apply 'decode_4_flags'/1
					    (FlagBits)
				    in  let <_cor13> =
					    %% Line 626
					    call 'lists':'umerge'
						(%% Line 627
						 [[_cor12|[]]|AcessFlags])
					in  let <Flags> =
						%% Line 626
						call 'lists':'append'
						    (_cor13)
					    in  %% Line 628
						apply 'do_open'/4
						    (ReqId, State, Path, Flags)
		( <_cor7> when 'true' ->
		      do  primop 'bs_context_to_binary'
			      (_cor7)
			  primop 'match_fail'
			      ({'badmatch',_cor7})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17,_cor16,_cor15})
		  -| [{'function_name',{'open',4}}] )
	    -| ['compiler_generated'] )
	end
'do_open'/4 =
    %% Line 630
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 631
	case _cor2 of
	  <{'state',{'ssh_xfer',Vsn,_cor31,_cor32,_cor33},_cor34,Root,_cor35,_cor36,FileMod,FS0,_cor37,_cor38}> when 'true' ->
	      let <_rec68> =
		  %% Line 632
		  ( {'ssh_xfer',Vsn,_cor31,_cor32,_cor33}
		    -| ['compiler_generated'] )
	      in  let <F> =
		      %% Line 633
		      ['binary'|_cor0]
		  in  %% Line 634
		      case call FileMod:'is_dir'
			       (_cor1, FS0) of
			<{IsDir,_X_FS1}> when 'true' ->
			    %% Line 635
			    case IsDir of
			      %% Line 636
			      <'true'>
				  when call 'erlang':'>'
					(Vsn,
					 5) ->
				  let <_rec69> =
				      %% Line 637
				      ( {'ssh_xfer',Vsn,_cor31,_cor32,_cor33}
					-| ['compiler_generated'] )
				  in  %% Line 637
				      call 'ssh_xfer':'xf_send_status'
					  (_rec69, _cor3, %% Line 638
							  24, %% Line 638
							      [70|[105|[108|[101|[32|[105|[115|[32|[97|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121]]]]]]]]]]]]]]]]]]])
			      %% Line 639
			      <'true'> when 'true' ->
				  let <_rec70> =
				      %% Line 640
				      ( {'ssh_xfer',Vsn,_cor31,_cor32,_cor33}
					-| ['compiler_generated'] )
				  in  %% Line 640
				      call 'ssh_xfer':'xf_send_status'
					  (_rec70, _cor3, %% Line 641
							  4, %% Line 641
							     [70|[105|[108|[101|[32|[105|[115|[32|[97|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121]]]]]]]]]]]]]]]]]]])
			      %% Line 642
			      <'false'> when 'true' ->
				  let <_cor15> =
				      %% Line 643
				      case Root of
					%% Line 644
					<[]> when 'true' ->
					    _cor1
					%% Line 646
					<_cor66> when 'true' ->
					    %% Line 647
					    apply 'relate_file_name'/2
						(_cor1, _cor2)
				      end
				  in  %% Line 649
				      case call FileMod:'open'
					       (_cor15, F, FS0) of
					<{Res,FS1}> when 'true' ->
					    let <_cor20> =
						%% Line 650
						call 'erlang':'setelement'
						    (8, _cor2, FS1)
					    in  %% Line 651
						case Res of
						  %% Line 652
						  <{'ok',IoDevice}> when 'true' ->
						      %% Line 653
						      apply 'add_handle'/5
							  (_cor20, _rec68, _cor3, 'file', {_cor1,IoDevice})
						  %% Line 654
						  <{'error',Error}> when 'true' ->
						      %% Line 655
						      ( case _cor20 of
							  ( <( {'state',_rec72,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84}
							       -| ['compiler_generated'] )> when 'true' ->
								let <_cor22> =
								    %% Line 656
								    call 'ssh_xfer':'encode_erlang_status'
									(Error)
								in  do  call 'ssh_xfer':'xf_send_status'
									    (_rec72, _cor3, _cor22)
									_cor20
							    -| ['compiler_generated'] )
							  ( <_cor85> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','state'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  ( <_cor25> when 'true' ->
							primop 'match_fail'
							    ({'case_clause',_cor25})
						    -| ['compiler_generated'] )
						end
					( <_cor17> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor17})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor26> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor26})
				-| ['compiler_generated'] )
			    end
			( <_cor9> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor9})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor4})
	    -| ['compiler_generated'] )
	end
'resolve_symlinks'/2 =
    %% Line 662
    fun (_cor1,_cor0) ->
	%% Line 663
	apply 'resolve_symlinks'/3
	    (_cor1, 32, _cor0)
'resolve_symlinks'/3 =
    %% Line 665
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 666
	    call 'filename':'split'
		(_cor2)
	in  %% Line 666
	    apply 'resolve_symlinks_2'/4
		(_cor3, _cor0, _cor1, [])
'resolve_symlinks_2'/4 =
    %% Line 668
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_Path,State,LinkCnt,_X_AccPath>
	      when call 'erlang':'=:='
		    (LinkCnt,
		     0) ->
	      %% Line 670
	      {{'error','emlink'},State}
	  %% Line 671
	  <[[46]|RestPath],State0,LinkCnt,AccPath> when 'true' ->
	      %% Line 672
	      apply 'resolve_symlinks_2'/4
		  (RestPath, State0, LinkCnt, AccPath)
	  %% Line 673
	  <[[46|[46]]|RestPath],State0,LinkCnt,AccPath> when 'true' ->
	      let <AccPathComps0> =
		  %% Line 675
		  call 'filename':'split'
		      (AccPath)
	      in  let <_cor6> =
		      %% Line 676
		      case call 'lists':'droplast'
			       (AccPathComps0) of
			%% Line 677
			<[]> when 'true' ->
			    %% Line 678
			    []
			%% Line 679
			<AccPathComps> when 'true' ->
			    %% Line 680
			    call 'filename':'join'
				(AccPathComps)
		      end
		  in  %% Line 682
		      apply 'resolve_symlinks_2'/4
			  (RestPath, State0, LinkCnt, _cor6)
	  %% Line 683
	  <[PathComp|RestPath],State0,LinkCnt,AccPath0> when 'true' ->
	      %% Line 684
	      case State0 of
		<{'state',_cor25,_cor26,_cor27,_cor28,_cor29,FileMod,FS0,_cor30,_cor31}> when 'true' ->
		    let <AccPath1> =
			%% Line 685
			call 'filename':'join'
			    (AccPath0, PathComp)
		    in  %% Line 686
			case call FileMod:'read_link'
				 (AccPath1, FS0) of
			  <{Res,FS1}> when 'true' ->
			      let <_cor13> =
				  %% Line 687
				  call 'erlang':'setelement'
				      (8, State0, FS1)
			      in  %% Line 688
				  case Res of
				    %% Line 689
				    <{'ok',Target0}> when 'true' ->
					let <Target1> =
					    %% Line 692
					    call 'filename':'absname'
						(Target0, AccPath0)
					in  let <_cor16> =
						%% Line 693
						call 'erlang':'-'
						    (LinkCnt, 1)
					    in  %% Line 693
						case apply 'resolve_symlinks'/3
							 (Target1, _cor16, _cor13) of
						  <{FollowRes,State2}> when 'true' ->
						      %% Line 694
						      case FollowRes of
							%% Line 695
							<{'ok',Target}> when 'true' ->
							    let <_cor18> =
								%% Line 696
								call 'erlang':'-'
								    (LinkCnt, 1)
							    in  %% Line 696
								apply 'resolve_symlinks_2'/4
								    (RestPath, State2, _cor18, Target)
							%% Line 697
							<Error = {'error',_cor42}> when 'true' ->
							    %% Line 698
							    {Error,State2}
							( <_cor19> when 'true' ->
							      primop 'match_fail'
								  ({'case_clause',_cor19})
							  -| ['compiler_generated'] )
						      end
						  ( <_cor17> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_cor17})
						    -| ['compiler_generated'] )
						end
				    %% Line 700
				    <{'error','einval'}> when 'true' ->
					%% Line 701
					apply 'resolve_symlinks_2'/4
					    (RestPath, _cor13, LinkCnt, AccPath1)
				    %% Line 702
				    <Error = {'error',_cor43}> when 'true' ->
					%% Line 703
					{Error,_cor13}
				    ( <_cor20> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor20})
				      -| ['compiler_generated'] )
				  end
			  ( <_cor10> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor10})
			    -| ['compiler_generated'] )
			end
		( <_cor8> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor8})
		  -| ['compiler_generated'] )
	      end
	  %% Line 705
	  <[],State,_X_LinkCnt,AccPath> when 'true' ->
	      %% Line 706
	      {{'ok',AccPath},State}
	  ( <_cor24,_cor23,_cor22,_cor21> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22,_cor21})
		  -| [{'function_name',{'resolve_symlinks_2',4}}] )
	    -| ['compiler_generated'] )
	end
'relate_file_name'/2 =
    %% Line 709
    fun (_cor1,_cor0) ->
	%% Line 710
	apply 'relate_file_name'/3
	    (_cor1, _cor0, 'true')
'relate_file_name'/3 =
    %% Line 712
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <File,State,Canonicalize>
	      when call 'erlang':'is_binary'
		    (File) ->
	      let <_cor3> =
		  %% Line 713
		  call 'unicode':'characters_to_list'
		      (File)
	      in  %% Line 713
		  apply 'relate_file_name'/3
		      (_cor3, State, Canonicalize)
	  %% Line 714
	  <File,{'state',_cor11,CWD,[],_cor12,_cor13,_cor14,_cor15,_cor16,_cor17},Canonicalize> when 'true' ->
	      %% Line 715
	      apply 'relate_filename_to_path'/3
		  (File, CWD, Canonicalize)
	  %% Line 716
	  <File,{'state',_cor18,_cor19,Root,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25},Canonicalize> when 'true' ->
	      %% Line 717
	      case apply 'is_within_root'/2
		       (Root, File) of
		%% Line 718
		<'true'> when 'true' ->
		    %% Line 719
		    File
		%% Line 720
		<'false'> when 'true' ->
		    let <RelFile> =
			%% Line 721
			apply 'make_relative_filename'/1
			    (File)
		    in  let <NewFile> =
			    %% Line 722
			    apply 'relate_filename_to_path'/3
				(RelFile, Root, Canonicalize)
			in  %% Line 723
			    case apply 'is_within_root'/2
				     (Root, NewFile) of
			      %% Line 724
			      <'true'> when 'true' ->
				  %% Line 725
				  NewFile
			      %% Line 726
			      <'false'> when 'true' ->
				  %% Line 727
				  Root
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor6})
				-| ['compiler_generated'] )
			    end
		( <_cor7> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor7})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'relate_file_name',3}}] )
	    -| ['compiler_generated'] )
	end
'is_within_root'/2 =
    %% Line 731
    fun (_cor1,_cor0) ->
	%% Line 732
	call 'lists':'prefix'
	    (_cor1, _cor0)
'make_relative_filename'/1 =
    %% Line 736
    fun (_cor0) ->
	case _cor0 of
	  <[47]> when 'true' ->
	      [46|[47]]
	  %% Line 737
	  <[47|File]> when 'true' ->
	      File
	  %% Line 738
	  <File> when 'true' ->
	      File
	end
'relate_filename_to_path'/3 =
    %% Line 740
    fun (_cor2,_cor1,_cor0) ->
	let <File1> =
	    %% Line 741
	    call 'filename':'absname'
		(_cor2, _cor1)
	in  let <_cor4> =
		%% Line 742
		case <> of
		  <>
		      when call 'erlang':'=:='
			    (_cor0,
			     'true') ->
		      apply 'canonicalize_filename'/1
			  (File1)
		  %% Line 743
		  <> when 'true' ->
		      File1
		end
	    in  %% Line 745
		apply 'ensure_trailing_slash_is_preserved'/2
		    (_cor2, _cor4)
'ensure_trailing_slash_is_preserved'/2 =
    %% Line 791
    fun (_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 792
	    call 'lists':'suffix'
		([47], _cor1)
	in  let <_cor2> =
		%% Line 792
		call 'lists':'suffix'
		    ([47], _cor0)
	    in  %% Line 792
		case <_cor3,_cor2> of
		  %% Line 793
		  <'true','false'> when 'true' ->
		      call 'erlang':'++'
			  (_cor0, [47])
		  %% Line 794
		  <_fol1009,_fol1010> when 'true' ->
		      _cor0
		end
'canonicalize_filename'/1 =
    %% Line 800
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 801
	    call 'filename':'split'
		(_cor0)
	in  let <_cor2> =
		%% Line 801
		apply 'canonicalize_filename_2'/2
		    (_cor1, [])
	    in  let <File> =
		    %% Line 801
		    call 'filename':'join'
			(_cor2)
		in  %% Line 802
		    apply 'ensure_trailing_slash_is_preserved'/2
			(_cor0, File)
'canonicalize_filename_2'/2 =
    %% Line 804
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[[46|[46]]|Rest],Acc = [[47]]> when 'true' ->
	      %% Line 805
	      apply 'canonicalize_filename_2'/2
		  (Rest, Acc)
	  %% Line 806
	  <[[46|[46]]|Rest],[_X_Dir|Paths]> when 'true' ->
	      %% Line 807
	      apply 'canonicalize_filename_2'/2
		  (Rest, Paths)
	  %% Line 808
	  <[[46]|Rest],Acc> when 'true' ->
	      %% Line 809
	      apply 'canonicalize_filename_2'/2
		  (Rest, Acc)
	  %% Line 810
	  <[A|Rest],Acc> when 'true' ->
	      %% Line 811
	      apply 'canonicalize_filename_2'/2
		  (Rest, [A|Acc])
	  %% Line 812
	  <[],Acc> when 'true' ->
	      %% Line 813
	      call 'lists':'reverse'
		  (Acc)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'canonicalize_filename_2',2}}] )
	    -| ['compiler_generated'] )
	end
'chroot_filename'/2 =
    %% Line 817
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Filename,{'state',_cor7,_cor8,Root,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14}> when 'true' ->
	      let <FilenameComps0> =
		  %% Line 818
		  call 'filename':'split'
		      (Filename)
	      in  let <RootComps> =
		      %% Line 819
		      call 'filename':'split'
			  (Root)
		  in  let <_cor4> =
			  %% Line 820
			  apply 'chroot_filename_2'/2
			      (FilenameComps0, RootComps)
		      in  %% Line 820
			  call 'filename':'join'
			      (_cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'chroot_filename',2}}] )
	    -| ['compiler_generated'] )
	end
'chroot_filename_2'/2 =
    %% Line 822
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[PathComp|FilenameRest],[_cor5|RootRest]>
	      when call 'erlang':'=:='
		    (_cor5,
		     PathComp) ->
	      %% Line 823
	      apply 'chroot_filename_2'/2
		  (FilenameRest, RootRest)
	  %% Line 824
	  <FilenameComps,[]>
	      when try
		    let <_cor2> =
			call 'erlang':'length'
			    (FilenameComps)
		    in  call 'erlang':'>'
			    (_cor2, 0)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 827
	      [[47]|FilenameComps]
	  %% Line 828
	  <_X_FilenameComps,_X_RootComps> when 'true' ->
	      %% Line 831
	      [[47]]
	end
'read_file'/5 =
    %% Line 834
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <ReqId,IoDevice,Offset,Len,State0 = %% Line 835
					      {'state',_cor24,_cor25,_cor26,_cor27,_cor28,FileMod,FS0,_cor29,_cor30}> when 'true' ->
	      %% Line 836
	      case call FileMod:'position'
		       (IoDevice, {'bof',Offset}, FS0) of
		<{Res1,FS1}> when 'true' ->
		    %% Line 837
		    case Res1 of
		      %% Line 838
		      <{'ok',_X_NewPos}> when 'true' ->
			  %% Line 839
			  case call FileMod:'read'
				   (IoDevice, Len, FS1) of
			    <{Res2,FS2}> when 'true' ->
				let <_cor9> =
				    %% Line 840
				    call 'erlang':'setelement'
					(8, State0, FS2)
				in  %% Line 841
				    case Res2 of
				      %% Line 842
				      <{'ok',Data}> when 'true' ->
					  %% Line 843
					  ( case _cor9 of
					      ( <( {'state',_rec75,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48}
						   -| ['compiler_generated'] )> when 'true' ->
						    do  call 'ssh_xfer':'xf_send_data'
							    (_rec75, ReqId, Data)
							_cor9
						-| ['compiler_generated'] )
					      ( <_cor49> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','state'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				      %% Line 845
				      <{'error',Error}> when 'true' ->
					  %% Line 846
					  apply 'send_status'/3
					      ({'error',Error}, ReqId, _cor9)
				      %% Line 847
				      <'eof'> when 'true' ->
					  %% Line 848
					  apply 'send_status'/3
					      ('eof', ReqId, _cor9)
				      ( <_cor13> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor13})
					-| ['compiler_generated'] )
				    end
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor6})
			      -| ['compiler_generated'] )
			  end
		      %% Line 850
		      <{'error',Error}> when 'true' ->
			  let <_cor16> =
			      %% Line 851
			      call 'erlang':'setelement'
				  (8, State0, FS1)
			  in  %% Line 852
			      apply 'send_status'/3
				  ({'error',Error}, ReqId, _cor16)
		      ( <_cor18> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor18})
			-| ['compiler_generated'] )
		    end
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor23,_cor22,_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor23,_cor22,_cor21,_cor20,_cor19})
		  -| [{'function_name',{'read_file',5}}] )
	    -| ['compiler_generated'] )
	end
'write_file'/5 =
    %% Line 855
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <ReqId,IoDevice,Offset,Data,State0 = %% Line 856
					       {'state',_cor21,_cor22,_cor23,_cor24,_cor25,FileMod,FS0,_cor26,_cor27}> when 'true' ->
	      %% Line 857
	      case call FileMod:'position'
		       (IoDevice, {'bof',Offset}, FS0) of
		<{Res,FS1}> when 'true' ->
		    %% Line 858
		    case Res of
		      %% Line 859
		      <{'ok',_X_NewPos}> when 'true' ->
			  %% Line 860
			  case call FileMod:'write'
				   (IoDevice, Data, FS1) of
			    <{Status,FS2}> when 'true' ->
				let <_cor9> =
				    %% Line 861
				    call 'erlang':'setelement'
					(8, State0, FS2)
				in  %% Line 862
				    apply 'send_status'/3
					(Status, ReqId, _cor9)
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor6})
			      -| ['compiler_generated'] )
			  end
		      %% Line 863
		      <{'error',Error}> when 'true' ->
			  let <_cor13> =
			      %% Line 864
			      call 'erlang':'setelement'
				  (8, State0, FS1)
			  in  %% Line 865
			      apply 'send_status'/3
				  ({'error',Error}, ReqId, _cor13)
		      ( <_cor15> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor15})
			-| ['compiler_generated'] )
		    end
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor20,_cor19,_cor18,_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19,_cor18,_cor17,_cor16})
		  -| [{'function_name',{'write_file',5}}] )
	    -| ['compiler_generated'] )
	end
'get_status'/1 =
    %% Line 868
    fun (_cor0) ->
	case _cor0 of
	  <'ok'> when 'true' ->
	      %% Line 869
	      0
	  %% Line 870
	  <'eof'> when 'true' ->
	      %% Line 871
	      1
	  %% Line 872
	  <{'error',Error}> when 'true' ->
	      %% Line 873
	      call 'ssh_xfer':'encode_erlang_status'
		  (Error)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'get_status',1}}] )
	    -| ['compiler_generated'] )
	end
'send_status'/3 =
    %% Line 875
    fun (_cor2,_cor1,_cor0) ->
	%% Line 876
	( case _cor0 of
	    ( <( {'state',_rec79,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor3> =
		      apply 'get_status'/1
			  (_cor2)
		  in  do  call 'ssh_xfer':'xf_send_status'
			      (_rec79, _cor1, _cor3)
			  _cor0
	      -| ['compiler_generated'] )
	    ( <_cor17> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'set_stat'/3 =
    %% Line 879
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <#{}#,_X_Path,State> when 'true' ->
	      %% Line 880
	      {'ok',State}
	  %% Line 881
	  <Attr,Path,State0 = %% Line 882
			      {'state',_cor24,_cor25,_cor26,_cor27,_cor28,FileMod,FS0,_cor29,_cor30}> when 'true' ->
	      %% Line 884
	      ( case _cor24 of
		  ( <( {'ssh_xfer',_rec80,_cor40,_cor41,_cor42}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'ssh_xfer':'decode_ATTR'
				 (_rec80, Attr) of
			  <{DecodedAttr,_X_Rest}> when 'true' ->
			      let <Info> =
				  %% Line 885
				  call 'ssh_sftp':'attr_to_info'
				      (DecodedAttr)
			      in  %% Line 886
				  case call FileMod:'read_link_info'
					   (Path, FS0) of
				    <{Res1,FS1}> when 'true' ->
					%% Line 887
					case Res1 of
					  %% Line 888
					  <{'ok',OldInfo}> when 'true' ->
					      let <NewInfo> =
						  %% Line 889
						  apply 'set_file_info'/2
						      (Info, OldInfo)
					      in  %% Line 890
						  case call FileMod:'write_file_info'
							   (Path, NewInfo, FS1) of
						    <{Res2,FS2}> when 'true' ->
							let <_cor14> =
							    %% Line 891
							    call 'erlang':'setelement'
								(8, State0, FS2)
							in  %% Line 892
							    {Res2,_cor14}
						    ( <_cor11> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor11})
						      -| ['compiler_generated'] )
						  end
					  %% Line 893
					  <{'error',Error}> when 'true' ->
					      let <_cor18> =
						  %% Line 894
						  call 'erlang':'setelement'
						      (8, State0, FS1)
					      in  %% Line 895
						  {{'error',Error},_cor18}
					  ( <_cor20> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_cor20})
					    -| ['compiler_generated'] )
					end
				    ( <_cor9> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor9})
				      -| ['compiler_generated'] )
				  end
			  ( <_cor7> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor7})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor43> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','ssh_xfer'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor23,_cor22,_cor21> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor23,_cor22,_cor21})
		  -| [{'function_name',{'set_stat',3}}] )
	    -| ['compiler_generated'] )
	end
'set_file_info_sel'/2 =
    %% Line 899
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'undefined',F> when 'true' ->
	      %% Line 900
	      F
	  %% Line 901
	  <F,_cor4> when 'true' ->
	      %% Line 902
	      F
	end
'set_file_info'/2 =
    %% Line 904
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'file_info',_cor10,_cor11,_cor12,Dst_atime,Dst_mtime,%% Line 905
								 Dst_ctime,%% Line 906
									   Dst_mode,_cor13,_cor14,_cor15,_cor16,%% Line 906
														Dst_uid,%% Line 906
															Dst_gid},%% Line 907
																 {'file_info',_cor17,_cor18,_cor19,Src_atime,Src_mtime,%% Line 908
																						       Src_ctime,%% Line 909
																								 Src_mode,_cor20,_cor21,_cor22,_cor23,%% Line 909
																												      Src_uid,%% Line 909
																													      Src_gid}> when 'true' ->
	      let <_cor7> =
		  %% Line 910
		  apply 'set_file_info_sel'/2
		      (Dst_atime, Src_atime)
	      in  let <_cor6> =
		      %% Line 911
		      apply 'set_file_info_sel'/2
			  (Dst_mtime, Src_mtime)
		  in  let <_cor5> =
			  %% Line 912
			  apply 'set_file_info_sel'/2
			      (Dst_ctime, Src_ctime)
		      in  let <_cor4> =
			      %% Line 913
			      apply 'set_file_info_sel'/2
				  (Dst_mode, Src_mode)
			  in  let <_cor3> =
				  %% Line 914
				  apply 'set_file_info_sel'/2
				      (Dst_uid, Src_uid)
			      in  let <_cor2> =
				      %% Line 915
				      apply 'set_file_info_sel'/2
					  (Dst_gid, Src_gid)
				  in  %% Line 910
				      {'file_info','undefined','undefined','undefined',_cor7,_cor6,_cor5,_cor4,'undefined','undefined','undefined','undefined',_cor3,_cor2}
	  ( <_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8})
		  -| [{'function_name',{'set_file_info',2}}] )
	    -| ['compiler_generated'] )
	end
'rename'/4 =
    %% Line 917
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 918
	case _cor0 of
	  <{'state',_cor14,_cor15,_cor16,_cor17,_cor18,FileMod,FS0,_cor19,_cor20}> when 'true' ->
	      %% Line 919
	      case call FileMod:'rename'
		       (_cor3, _cor2, FS0) of
		<{Status,FS1}> when 'true' ->
		    let <_cor8> =
			%% Line 920
			call 'erlang':'setelement'
			    (8, _cor0, FS1)
		    in  %% Line 921
			apply 'send_status'/3
			    (Status, _cor1, _cor8)
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor4})
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ssh_sftpd')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ssh_sftpd', _cor0)
end