module 'ssh_server_key_api' ['behaviour_info'/1,
			     'module_info'/0,
			     'module_info'/1]
    attributes [%% Line 25
		'callback' =
		    %% Line 25
		    [{{'host_key',2},[{'type',25,'fun',[{'type',25,'product',[{'ann_type',25,[{'var',25,'Algorithm'}|[{'type',25,'union',[{'atom',25,'ssh-rsa'}|[{'atom',25,'ssh-dss'}|[{'type',25,'atom',[]}]]]}]]}|[{'ann_type',25,[{'var',25,'DaemonOptions'}|[{'remote_type',25,[{'atom',25,'proplists'}|[{'atom',25,'proplist'}|[[]]]]}]]}]]}|[{'type',26,'union',[{'type',26,'tuple',[{'atom',26,'ok'}|[{'ann_type',26,[{'var',26,'PrivateKey'}|[{'type',26,'union',[{'type',26,'record',[{'atom',26,'RSAPrivateKey'}]}|[{'type',26,'record',[{'atom',26,'DSAPrivateKey'}]}|[{'type',26,'term',[]}]]]}]]}]]}|[{'type',26,'tuple',[{'atom',26,'error'}|[{'type',26,'string',[]}]]}]]}]]}]}],
		%% Line 28
		'callback' =
		    %% Line 28
		    [{{'is_auth_key',3},[{'type',28,'fun',[{'type',28,'product',[{'ann_type',28,[{'var',28,'PublicKey'}|[{'type',28,'union',[{'type',28,'record',[{'atom',28,'RSAPublicKey'}]}|[{'type',28,'tuple',[{'type',28,'integer',[]}|[{'type',28,'record',[{'atom',28,'Dss-Parms'}]}]]}|[{'type',28,'term',[]}]]]}]]}|[{'ann_type',29,[{'var',29,'User'}|[{'type',29,'string',[]}]]}|[{'ann_type',29,[{'var',29,'DaemonOptions'}|[{'remote_type',29,[{'atom',29,'proplists'}|[{'atom',29,'proplist'}|[[]]]]}]]}]]]}|[{'type',30,'boolean',[]}]]}]}]]
'behaviour_info'/1 =
    fun (_cor0) ->
	case _cor0 of
	  <'callbacks'> when 'true' ->
	      [{'host_key',2}|[{'is_auth_key',3}]]
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'behaviour_info',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ssh_server_key_api')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ssh_server_key_api', _cor0)
end