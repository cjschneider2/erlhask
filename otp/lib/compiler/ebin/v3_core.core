module 'v3_core' ['format_error'/1,
		  'module'/2,
		  'module_info'/0,
		  'module_info'/1]
    attributes [%% Line 31
		'type' =
		    %% Line 31
		    [{{'record','c_alias'},[{'record_field',31,{'atom',31,'anno'},{'nil',31}}|[{'record_field',31,{'atom',31,'var'}}|[{'record_field',32,{'atom',32,'pat'}}]]],[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','c_apply'},[{'record_field',34,{'atom',34,'anno'},{'nil',34}}|[{'record_field',34,{'atom',34,'op'}}|[{'record_field',35,{'atom',35,'args'}}]]],[]}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{{'record','c_binary'},[{'record_field',37,{'atom',37,'anno'},{'nil',37}}|[{'typed_record_field',{'record_field',37,{'atom',37,'segments'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'type',37,'list',[{'remote_type',37,[{'atom',37,'cerl'}|[{'atom',37,'c_bitstr'}|[[]]]]}]}]]}}]],[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{{'record','c_bitstr'},[{'record_field',39,{'atom',39,'anno'},{'nil',39}}|[{'record_field',39,{'atom',39,'val'}}|[{'record_field',40,{'atom',40,'size'}}|[{'record_field',41,{'atom',41,'unit'}}|[{'record_field',42,{'atom',42,'type'}}|[{'record_field',43,{'atom',43,'flags'}}]]]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','c_call'},[{'record_field',45,{'atom',45,'anno'},{'nil',45}}|[{'record_field',45,{'atom',45,'module'}}|[{'record_field',46,{'atom',46,'name'}}|[{'record_field',47,{'atom',47,'args'}}]]]],[]}],
		%% Line 49
		'type' =
		    %% Line 49
		    [{{'record','c_case'},[{'record_field',49,{'atom',49,'anno'},{'nil',49}}|[{'record_field',49,{'atom',49,'arg'}}|[{'record_field',50,{'atom',50,'clauses'}}]]],[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{{'record','c_catch'},[{'record_field',52,{'atom',52,'anno'},{'nil',52}}|[{'record_field',52,{'atom',52,'body'}}]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{{'record','c_clause'},[{'record_field',54,{'atom',54,'anno'},{'nil',54}}|[{'record_field',54,{'atom',54,'pats'}}|[{'record_field',55,{'atom',55,'guard'}}|[{'record_field',56,{'atom',56,'body'}}]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','c_cons'},[{'record_field',58,{'atom',58,'anno'},{'nil',58}}|[{'record_field',58,{'atom',58,'hd'}}|[{'record_field',59,{'atom',59,'tl'}}]]],[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','c_fun'},[{'record_field',61,{'atom',61,'anno'},{'nil',61}}|[{'record_field',61,{'atom',61,'vars'}}|[{'record_field',62,{'atom',62,'body'}}]]],[]}],
		%% Line 64
		'type' =
		    %% Line 64
		    [{{'record','c_let'},[{'record_field',64,{'atom',64,'anno'},{'nil',64}}|[{'record_field',64,{'atom',64,'vars'}}|[{'record_field',65,{'atom',65,'arg'}}|[{'record_field',66,{'atom',66,'body'}}]]]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','c_letrec'},[{'record_field',68,{'atom',68,'anno'},{'nil',68}}|[{'record_field',68,{'atom',68,'defs'}}|[{'record_field',69,{'atom',69,'body'}}]]],[]}],
		%% Line 71
		'type' =
		    %% Line 71
		    [{{'record','c_literal'},[{'record_field',71,{'atom',71,'anno'},{'nil',71}}|[{'record_field',71,{'atom',71,'val'}}]],[]}],
		%% Line 73
		'type' =
		    %% Line 73
		    [{{'record','c_map'},[{'record_field',73,{'atom',73,'anno'},{'nil',73}}|[{'typed_record_field',{'record_field',74,{'atom',74,'arg'},{'record',74,'c_literal',[{'record_field',74,{'atom',74,'val'},{'map',74,[]}}]}},{'type',74,'union',[{'remote_type',74,[{'atom',74,'cerl'}|[{'atom',74,'c_var'}|[[]]]]}|[{'remote_type',74,[{'atom',74,'cerl'}|[{'atom',74,'c_literal'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'es'}},{'type',75,'union',[{'atom',75,'undefined'}|[{'type',75,'list',[{'remote_type',75,[{'atom',75,'cerl'}|[{'atom',75,'c_map_pair'}|[[]]]]}]}]]}}]]],[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','c_map_pair'},[{'record_field',77,{'atom',77,'anno'},{'nil',77}}|[{'typed_record_field',{'record_field',78,{'atom',78,'op'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'record',[{'atom',78,'c_literal'}|[{'type',78,'field_type',[{'atom',78,'val'}|[{'atom',78,'assoc'}]]}]]}|[{'type',78,'record',[{'atom',78,'c_literal'}|[{'type',78,'field_type',[{'atom',78,'val'}|[{'atom',78,'exact'}]]}]]}]]]}}|[{'record_field',79,{'atom',79,'key'}}|[{'record_field',80,{'atom',80,'val'}}]]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{{'record','c_module'},[{'record_field',82,{'atom',82,'anno'},{'nil',82}}|[{'record_field',82,{'atom',82,'name'}}|[{'record_field',83,{'atom',83,'exports'}}|[{'record_field',84,{'atom',84,'attrs'}}|[{'record_field',85,{'atom',85,'defs'}}]]]]],[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{{'record','c_primop'},[{'record_field',87,{'atom',87,'anno'},{'nil',87}}|[{'record_field',87,{'atom',87,'name'}}|[{'record_field',88,{'atom',88,'args'}}]]],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{{'record','c_receive'},[{'record_field',90,{'atom',90,'anno'},{'nil',90}}|[{'record_field',90,{'atom',90,'clauses'}}|[{'record_field',91,{'atom',91,'timeout'}}|[{'record_field',92,{'atom',92,'action'}}]]]],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{{'record','c_seq'},[{'record_field',94,{'atom',94,'anno'},{'nil',94}}|[{'record_field',94,{'atom',94,'arg'}}|[{'record_field',95,{'atom',95,'body'}}]]],[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','c_try'},[{'record_field',97,{'atom',97,'anno'},{'nil',97}}|[{'record_field',97,{'atom',97,'arg'}}|[{'record_field',98,{'atom',98,'vars'}}|[{'record_field',99,{'atom',99,'body'}}|[{'record_field',100,{'atom',100,'evars'}}|[{'record_field',101,{'atom',101,'handler'}}]]]]]],[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','c_tuple'},[{'record_field',103,{'atom',103,'anno'},{'nil',103}}|[{'record_field',103,{'atom',103,'es'}}]],[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{{'record','c_values'},[{'record_field',105,{'atom',105,'anno'},{'nil',105}}|[{'record_field',105,{'atom',105,'es'}}]],[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','c_var'},[{'record_field',107,{'atom',107,'anno'},{'nil',107}}|[{'typed_record_field',{'record_field',107,{'atom',107,'name'}},{'type',107,'union',[{'atom',107,'undefined'}|[{'remote_type',107,[{'atom',107,'cerl'}|[{'atom',107,'var_name'}|[[]]]]}]]}}]],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{{'record','a'},[{'record_field',90,{'atom',90,'us'},{'nil',90}}|[{'record_field',90,{'atom',90,'ns'},{'nil',90}}|[{'record_field',90,{'atom',90,'anno'},{'nil',90}}]]],[]}],
		%% Line 92
		'type' =
		    %% Line 92
		    [{{'record','iapply'},[{'record_field',92,{'atom',92,'anno'},{'record',92,'a',[]}}|[{'record_field',92,{'atom',92,'op'}}|[{'record_field',92,{'atom',92,'args'}}]]],[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','ibinary'},[{'record_field',93,{'atom',93,'anno'},{'record',93,'a',[]}}|[{'record_field',93,{'atom',93,'segments'}}]],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{{'record','icall'},[{'record_field',94,{'atom',94,'anno'},{'record',94,'a',[]}}|[{'record_field',94,{'atom',94,'module'}}|[{'record_field',94,{'atom',94,'name'}}|[{'record_field',94,{'atom',94,'args'}}]]]],[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{{'record','icase'},[{'record_field',95,{'atom',95,'anno'},{'record',95,'a',[]}}|[{'record_field',95,{'atom',95,'args'}}|[{'record_field',95,{'atom',95,'clauses'}}|[{'record_field',95,{'atom',95,'fc'}}]]]],[]}],
		%% Line 96
		'type' =
		    %% Line 96
		    [{{'record','icatch'},[{'record_field',96,{'atom',96,'anno'},{'record',96,'a',[]}}|[{'record_field',96,{'atom',96,'body'}}]],[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','iclause'},[{'record_field',97,{'atom',97,'anno'},{'record',97,'a',[]}}|[{'record_field',97,{'atom',97,'pats'}}|[{'record_field',97,{'atom',97,'pguard'},{'nil',97}}|[{'record_field',97,{'atom',97,'guard'}}|[{'record_field',97,{'atom',97,'body'}}]]]]],[]}],
		%% Line 98
		'type' =
		    %% Line 98
		    [{{'record','ifun'},[{'record_field',98,{'atom',98,'anno'},{'record',98,'a',[]}}|[{'record_field',98,{'atom',98,'id'}}|[{'record_field',98,{'atom',98,'vars'}}|[{'record_field',98,{'atom',98,'clauses'}}|[{'record_field',98,{'atom',98,'fc'}}|[{'record_field',98,{'atom',98,'name'},{'atom',98,'unnamed'}}]]]]]],[]}],
		%% Line 99
		'type' =
		    %% Line 99
		    [{{'record','iletrec'},[{'record_field',99,{'atom',99,'anno'},{'record',99,'a',[]}}|[{'record_field',99,{'atom',99,'defs'}}|[{'record_field',99,{'atom',99,'body'}}]]],[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{{'record','imatch'},[{'record_field',100,{'atom',100,'anno'},{'record',100,'a',[]}}|[{'record_field',100,{'atom',100,'pat'}}|[{'record_field',100,{'atom',100,'guard'},{'nil',100}}|[{'record_field',100,{'atom',100,'arg'}}|[{'record_field',100,{'atom',100,'fc'}}]]]]],[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{{'record','iprimop'},[{'record_field',101,{'atom',101,'anno'},{'record',101,'a',[]}}|[{'record_field',101,{'atom',101,'name'}}|[{'record_field',101,{'atom',101,'args'}}]]],[]}],
		%% Line 102
		'type' =
		    %% Line 102
		    [{{'record','iprotect'},[{'record_field',102,{'atom',102,'anno'},{'record',102,'a',[]}}|[{'record_field',102,{'atom',102,'body'}}]],[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','ireceive1'},[{'record_field',103,{'atom',103,'anno'},{'record',103,'a',[]}}|[{'record_field',103,{'atom',103,'clauses'}}]],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{{'record','ireceive2'},[{'record_field',104,{'atom',104,'anno'},{'record',104,'a',[]}}|[{'record_field',104,{'atom',104,'clauses'}}|[{'record_field',104,{'atom',104,'timeout'}}|[{'record_field',104,{'atom',104,'action'}}]]]],[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{{'record','iset'},[{'record_field',105,{'atom',105,'anno'},{'record',105,'a',[]}}|[{'record_field',105,{'atom',105,'var'}}|[{'record_field',105,{'atom',105,'arg'}}]]],[]}],
		%% Line 106
		'type' =
		    %% Line 106
		    [{{'record','itry'},[{'record_field',106,{'atom',106,'anno'},{'record',106,'a',[]}}|[{'record_field',106,{'atom',106,'args'}}|[{'record_field',106,{'atom',106,'vars'}}|[{'record_field',106,{'atom',106,'body'}}|[{'record_field',106,{'atom',106,'evars'}}|[{'record_field',106,{'atom',106,'handler'}}]]]]]],[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','ifilter'},[{'record_field',107,{'atom',107,'anno'},{'record',107,'a',[]}}|[{'record_field',107,{'atom',107,'arg'}}]],[]}],
		%% Line 108
		'type' =
		    %% Line 108
		    [{{'record','igen'},[{'record_field',108,{'atom',108,'anno'},{'record',108,'a',[]}}|[{'record_field',108,{'atom',108,'acc_pat'}}|[{'record_field',108,{'atom',108,'acc_guard'}}|[{'record_field',108,{'atom',108,'skip_pat'}}|[{'record_field',108,{'atom',108,'tail'}}|[{'record_field',108,{'atom',108,'tail_pat'}}|[{'record_field',108,{'atom',108,'arg'}}]]]]]]],[]}],
		%% Line 110
		'type' =
		    %% Line 110
		    [{'iapply',{'type',110,'record',[{'atom',110,'iapply'}]},[]}],
		%% Line 111
		'type' =
		    %% Line 111
		    [{'ibinary',{'type',111,'record',[{'atom',111,'ibinary'}]},[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{'icall',{'type',112,'record',[{'atom',112,'icall'}]},[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{'icase',{'type',113,'record',[{'atom',113,'icase'}]},[]}],
		%% Line 114
		'type' =
		    %% Line 114
		    [{'icatch',{'type',114,'record',[{'atom',114,'icatch'}]},[]}],
		%% Line 115
		'type' =
		    %% Line 115
		    [{'iclause',{'type',115,'record',[{'atom',115,'iclause'}]},[]}],
		%% Line 116
		'type' =
		    %% Line 116
		    [{'ifun',{'type',116,'record',[{'atom',116,'ifun'}]},[]}],
		%% Line 117
		'type' =
		    %% Line 117
		    [{'iletrec',{'type',117,'record',[{'atom',117,'iletrec'}]},[]}],
		%% Line 118
		'type' =
		    %% Line 118
		    [{'imatch',{'type',118,'record',[{'atom',118,'imatch'}]},[]}],
		%% Line 119
		'type' =
		    %% Line 119
		    [{'iprimop',{'type',119,'record',[{'atom',119,'iprimop'}]},[]}],
		%% Line 120
		'type' =
		    %% Line 120
		    [{'iprotect',{'type',120,'record',[{'atom',120,'iprotect'}]},[]}],
		%% Line 121
		'type' =
		    %% Line 121
		    [{'ireceive1',{'type',121,'record',[{'atom',121,'ireceive1'}]},[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{'ireceive2',{'type',122,'record',[{'atom',122,'ireceive2'}]},[]}],
		%% Line 123
		'type' =
		    %% Line 123
		    [{'iset',{'type',123,'record',[{'atom',123,'iset'}]},[]}],
		%% Line 124
		'type' =
		    %% Line 124
		    [{'itry',{'type',124,'record',[{'atom',124,'itry'}]},[]}],
		%% Line 125
		'type' =
		    %% Line 125
		    [{'ifilter',{'type',125,'record',[{'atom',125,'ifilter'}]},[]}],
		%% Line 126
		'type' =
		    %% Line 126
		    [{'igen',{'type',126,'record',[{'atom',126,'igen'}]},[]}],
		%% Line 128
		'type' =
		    %% Line 128
		    [{'i',{'type',128,'union',[{'type',128,'iapply',[]}|[{'type',128,'ibinary',[]}|[{'type',128,'icall',[]}|[{'type',128,'icase',[]}|[{'type',128,'icatch',[]}|[{'type',129,'iclause',[]}|[{'type',129,'ifun',[]}|[{'type',129,'iletrec',[]}|[{'type',129,'imatch',[]}|[{'type',129,'iprimop',[]}|[{'type',130,'iprotect',[]}|[{'type',130,'ireceive1',[]}|[{'type',130,'ireceive2',[]}|[{'type',130,'iset',[]}|[{'type',130,'itry',[]}|[{'type',131,'ifilter',[]}|[{'type',131,'igen',[]}]]]]]]]]]]]]]]]]]},[]}],
		%% Line 133
		'type' =
		    %% Line 133
		    [{'warning',{'type',133,'tuple',[{'remote_type',133,[{'atom',133,'file'}|[{'atom',133,'filename'}|[[]]]]}|[{'type',133,'list',[{'type',133,'tuple',[{'type',133,'integer',[]}|[{'type',133,'module',[]}|[{'type',133,'term',[]}]]]}]}]]},[]}],
		%% Line 135
		'type' =
		    %% Line 135
		    [{{'record','core'},[{'typed_record_field',{'record_field',135,{'atom',135,'vcount'},{'integer',135,0}},{'type',135,'non_neg_integer',[]}}|[{'typed_record_field',{'record_field',136,{'atom',136,'fcount'},{'integer',136,0}},{'type',136,'non_neg_integer',[]}}|[{'typed_record_field',{'record_field',137,{'atom',137,'in_guard'},{'atom',137,'false'}},{'type',137,'boolean',[]}}|[{'typed_record_field',{'record_field',138,{'atom',138,'wanted'},{'atom',138,'true'}},{'type',138,'boolean',[]}}|[{'typed_record_field',{'record_field',139,{'atom',139,'opts'}},{'type',139,'union',[{'atom',139,'undefined'}|[{'type',139,'list',[{'remote_type',139,[{'atom',139,'compile'}|[{'atom',139,'option'}|[[]]]]}]}]]}}|[{'typed_record_field',{'record_field',140,{'atom',140,'ws'},{'nil',140}},{'type',140,'list',[{'type',140,'warning',[]}]}}|[{'record_field',141,{'atom',141,'file'},{'cons',141,{'tuple',141,[{'atom',141,'file'}|[{'string',141,[]}]]},{'nil',141}}}]]]]]]],[]}],
		%% Line 144
		'type' =
		    %% Line 144
		    [{'fa',{'type',144,'tuple',[{'type',144,'atom',[]}|[{'type',144,'arity',[]}]]},[]}],
		%% Line 145
		'type' =
		    %% Line 145
		    [{'attribute',{'type',145,'atom',[]},[]}],
		%% Line 146
		'type' =
		    %% Line 146
		    [{'form',{'type',146,'union',[{'type',146,'tuple',[{'atom',146,'function'}|[{'type',146,'integer',[]}|[{'type',146,'atom',[]}|[{'type',146,'arity',[]}|[{'var',146,'_'}]]]]]}|[{'type',147,'tuple',[{'atom',147,'attribute'}|[{'type',147,'integer',[]}|[{'type',147,'attribute',[]}|[{'var',147,'_'}]]]]}]]},[]}],
		%% Line 149
		'spec' =
		    %% Line 149
		    [{{'module',2},[{'type',149,'fun',[{'type',149,'product',[{'type',149,'tuple',[{'type',149,'module',[]}|[{'type',149,'list',[{'type',149,'fa',[]}]}|[{'type',149,'list',[{'type',149,'form',[]}]}]]]}|[{'type',149,'list',[{'remote_type',149,[{'atom',149,'compile'}|[{'atom',149,'option'}|[[]]]]}]}]]}|[{'type',150,'tuple',[{'atom',150,'ok'}|[{'remote_type',150,[{'atom',150,'cerl'}|[{'atom',150,'c_module'}|[[]]]]}|[{'type',150,'list',[{'type',150,'warning',[]}]}]]]}]]}]}],
		%% Line 2314
		'spec' =
		    %% Line 2314
		    [{{'get_anno',1},[{'type',2314,'fun',[{'type',2314,'product',[{'type',2314,'union',[{'remote_type',2314,[{'atom',2314,'cerl'}|[{'atom',2314,'cerl'}|[[]]]]}|[{'type',2314,'i',[]}]]}]}|[{'type',2314,'term',[]}]]}]}],
		%% Line 2318
		'spec' =
		    %% Line 2318
		    [{{'set_anno',2},[{'type',2318,'fun',[{'type',2318,'product',[{'type',2318,'union',[{'remote_type',2318,[{'atom',2318,'cerl'}|[{'atom',2318,'cerl'}|[[]]]]}|[{'type',2318,'i',[]}]]}|[{'type',2318,'term',[]}]]}|[{'remote_type',2318,[{'atom',2318,'cerl'}|[{'atom',2318,'cerl'}|[[]]]]}]]}]}],
		%% Line 2322
		'spec' =
		    %% Line 2322
		    [{{'is_simple',1},[{'type',2322,'fun',[{'type',2322,'product',[{'type',2322,'union',[{'remote_type',2322,[{'atom',2322,'cerl'}|[{'atom',2322,'cerl'}|[[]]]]}|[{'type',2322,'i',[]}]]}]}|[{'type',2322,'boolean',[]}]]}]}],
		%% Line 2334
		'spec' =
		    %% Line 2334
		    [{{'is_simple_list',1},[{'type',2334,'fun',[{'type',2334,'product',[{'type',2334,'list',[{'remote_type',2334,[{'atom',2334,'cerl'}|[{'atom',2334,'cerl'}|[[]]]]}]}]}|[{'type',2334,'boolean',[]}]]}]}],
		%% Line 2342
		'type' =
		    %% Line 2342
		    [{'err_desc',{'type',2342,'union',[{'atom',2342,'bad_binary'}|[{'atom',2342,'nomatch'}]]},[]}],
		%% Line 2344
		'spec' =
		    %% Line 2344
		    [{{'format_error',1},[{'type',2344,'fun',[{'type',2344,'product',[{'type',2344,'err_desc',[]}]}|[{'type',2344,'nonempty_string',[]}]]}]}]]
'module'/2 =
    %% Line 152
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{Mod,Exp,Forms},Opts> when 'true' ->
	      let <_cor4> =
		  %% Line 153
		  fun (_cor2) ->
		      case _cor2 of
			<NA = {_X_N,_X_A}> when 'true' ->
			    {'c_var',[],_cor2}
			( <_cor3> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor2})
				-| [{'function_name',{'-module/2-fun-0-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  let <Cexp> =
		      %% Line 153
		      call 'lists':'map'
			  (_cor4, Exp)
		  in  let <_cor10> =
			  %% Line 154
			  fun (_cor7,_cor6) ->
			      %% Line 155
			      apply 'form'/3
				  (_cor7, _cor6, _cor0)
		      in  let <_677> =
			      %% Line 154
			      call 'lists':'foldl'
				  (_cor10, %% Line 156
					   {[],[],[],[]}, Forms)
			  in  %% Line 154
			      case _677 of
				<{Kfs0,As0,Ws,_X_File}> when 'true' ->
				    let <Kfs> =
					%% Line 157
					call 'lists':'reverse'
					    (Kfs0)
				    in  let <As> =
					    %% Line 158
					    call 'lists':'reverse'
						(As0)
					in  %% Line 159
					    {'ok',{'c_module',[],{'c_literal',[],Mod},Cexp,As,Kfs},Ws}
				( <_cor11> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_677})
				  -| ['compiler_generated'] )
			      end
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'module',2}}] )
	    -| ['compiler_generated'] )
	end
'form'/3 =
    %% Line 161
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <F0 = {'function',_cor8,_cor9,_cor10,_cor11},{Fs,As,Ws0,File},Opts> when 'true' ->
	      let <_14647> =
		  %% Line 162
		  apply 'function'/4
		      (_cor2, Ws0, File, _cor0)
	      in  %% Line 162
		  case _14647 of
		    <{F,Ws}> when 'true' ->
			%% Line 163
			{[F|Fs],As,Ws,File}
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_14647})
		      -| ['compiler_generated'] )
		  end
	  %% Line 164
	  <{'attribute',_cor12,'file',{File,_X_Line}},{Fs,As,Ws,_cor13},_X_Opts> when 'true' ->
	      %% Line 165
	      {Fs,As,Ws,File}
	  %% Line 166
	  <F = {'attribute',_cor14,_cor15,_cor16},{Fs,As,Ws,File},_X_Opts> when 'true' ->
	      let <_cor4> =
		  %% Line 167
		  apply 'attribute'/1
		      (_cor2)
	      in  %% Line 167
		  {Fs,[_cor4|As],Ws,File}
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'form',3}}] )
	    -| ['compiler_generated'] )
	end
'attribute'/1 =
    %% Line 169
    fun (_cor0) ->
	case _cor0 of
	  <{'attribute',Line,Name,Val}> when 'true' ->
	      %% Line 170
	      {{'c_literal',[Line|[]],Name},{'c_literal',[Line|[]],Val}}
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'attribute',1}}] )
	    -| ['compiler_generated'] )
	end
'function'/4 =
    %% Line 172
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'function',_cor12,Name,Arity,Cs0},Ws0,File,Opts> when 'true' ->
	      let <St0> =
		  %% Line 174
		  {'core',0,0,'false','true',_cor0,_cor2,[{'file',_cor1}|[]]}
	      in  let <_1041> =
		      %% Line 175
		      apply 'body'/4
			  (Cs0, Name, Arity, St0)
		  in  %% Line 175
		      case _1041 of
			<{B0,St1}> when 'true' ->
			    let <_13300> =
				%% Line 1746
				apply 'uexpr'/3
				    (B0, [], St1)
			    in  %% Line 178
				case _13300 of
				  <{B1,St2}> when 'true' ->
				      let <_11089> =
					  %% Line 181
					  apply 'cbody'/2
					      (B1, St2)
				      in  %% Line 181
					  case _11089 of
					    <{B2,{'core',_cor13,_cor14,_cor15,_cor16,_cor17,Ws,_cor18}}> when 'true' ->
						%% Line 184
						{{{'c_var',[],{Name,Arity}},B2},Ws}
					    ( <_cor7> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_11089})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor6> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_13300})
				    -| ['compiler_generated'] )
				end
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_1041})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'function',4}}] )
	    -| ['compiler_generated'] )
	end
'body'/4 =
    %% Line 186
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 187
	    call 'erlang':'hd'
		(_cor3)
	in  let <_cor5> =
		%% Line 187
		call 'erlang':'element'
		    (2, _cor4)
	    in  let <Anno> =
		    %% Line 187
		    apply 'lineno_anno'/2
			(_cor5, _cor0)
		in  let <_13818> =
			%% Line 1708
			apply 'new_vars_1'/4
			    (_cor1, Anno, _cor0, [])
		    in  %% Line 188
			case _13818 of
			  <{Args,St1}> when 'true' ->
			      let <_10863> =
				  %% Line 189
				  apply 'clauses'/2
				      (_cor3, St1)
			      in  %% Line 189
				  case _10863 of
				    <{Cs1,St2}> when 'true' ->
					let <_8287> =
					    %% Line 1707
					    apply 'new_vars_1'/4
						(_cor1, [], St2, [])
					in  %% Line 190
					    case _8287 of
					      <{Ps,St3}> when 'true' ->
						  let <_1375> = {_cor2,_cor1}
						  in  let <FcAnno> =
							  %% Line 1716
							  [{'function_name',_1375}|Anno]
						      in  let <_15104> =
							      %% Line 1718
							      call 'cerl':'ann_c_tuple'
								  (Anno, [{'c_literal',[],'function_clause'}|Ps])
							  in  let <Fc> =
								  %% Line 1721
								  {'iclause',{'a',[],[],['compiler_generated']},Ps,[],%% Line 1722
														      [],%% Line 1723
															 [{'iprimop',{'a',[],[],FcAnno},{'c_literal',[],'match_fail'},%% Line 1724
																						      [_15104|[]]}|%% Line 1724
																								   []]}
							      in  %% Line 192
								  {{'ifun',{'a',[],[],Anno},[],Args,Cs1,Fc,'unnamed'},St3}
					      ( <_cor9> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_8287})
						-| ['compiler_generated'] )
					    end
				    ( <_cor8> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_10863})
				      -| ['compiler_generated'] )
				  end
			  ( <_cor7> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_13818})
			    -| ['compiler_generated'] )
			end
'clauses'/2 =
    %% Line 199
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[C0|Cs0],St0> when 'true' ->
	      let <_12229> =
		  %% Line 200
		  apply 'clause'/2
		      (C0, _cor0)
	      in  %% Line 200
		  case _12229 of
		    %% Line 201
		    <{'noclause',St}> when 'true' ->
			apply 'clauses'/2
			    (Cs0, St)
		    %% Line 202
		    <{C,St1}> when 'true' ->
			let <_1802> =
			    %% Line 203
			    apply 'clauses'/2
				(Cs0, St1)
			in  %% Line 203
			    case _1802 of
			      <{Cs,St2}> when 'true' ->
				  %% Line 204
				  {[C|Cs],St2}
			      ( <_cor2> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_1802})
				-| ['compiler_generated'] )
			    end
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_12229})
		      -| ['compiler_generated'] )
		  end
	  %% Line 206
	  <[],St> when 'true' ->
	      {[],_cor0}
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'clauses',2}}] )
	    -| ['compiler_generated'] )
	end
'clause'/2 =
    %% Line 208
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'clause',Lc,H0,G0,B0},St0> when 'true' ->
	      %% Line 209
	      try
		  apply 'head'/2
		      (H0, _cor0)
	      of <_cor2> ->
		  let <_11000> =
		      %% Line 211
		      apply 'guard'/2
			  (G0, _cor0)
		  in  %% Line 211
		      case _11000 of
			<{G1,St1}> when 'true' ->
			    let <_13370> =
				%% Line 212
				apply 'exprs'/2
				    (B0, St1)
			    in  %% Line 212
				case _13370 of
				  <{B1,St2}> when 'true' ->
				      let <Anno> =
					  %% Line 213
					  apply 'lineno_anno'/2
					      (Lc, St2)
				      in  %% Line 214
					  {{'iclause',{'a',[],[],Anno},_cor2,[],G1,B1},St2}
				  ( <_cor4> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_13370})
				    -| ['compiler_generated'] )
				end
			( <_cor3> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_11000})
			  -| ['compiler_generated'] )
		      end
	      catch <_cor9,_cor8,_cor7> ->
		  case <_cor9,_cor8,_cor7> of
		    %% Line 216
		    <'throw','nomatch',_cor13> when 'true' ->
			let <St> =
			    %% Line 217
			    apply 'add_warning'/3
				(Lc, 'nomatch', _cor0)
			in  %% Line 218
			    {'noclause',St}
		    ( <_14226,_3312,_7100> when 'true' ->
			  primop 'raise'
			      (_cor7, _cor8)
		      -| ['compiler_generated'] )
		  end
	  ( <_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'clause',2}}] )
	    -| ['compiler_generated'] )
	end
'head'/2 =
    %% Line 225
    fun (_cor1,_cor0) ->
	apply 'pattern_list'/2
	    (_cor1, _cor0)
'guard'/2 =
    %% Line 231
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],St> when 'true' ->
	      {[],_cor0}
	  %% Line 232
	  <Gs0,St0> when 'true' ->
	      let <_cor11> =
		  %% Line 233
		  fun (_cor8,_cor7) ->
		      let <Gt1> =
			  %% Line 234
			  apply 'guard_tests'/1
			      (_cor8)
		      in  let <L> =
			      %% Line 235
			      call 'erlang':'element'
				  (2, Gt1)
			  in  %% Line 236
			      {'op',L,'or',Gt1,_cor7}
	      in  let <_cor3> =
		      %% Line 237
		      call 'lists':'last'
			  (_cor1)
		  in  let <_cor4> =
			  %% Line 237
			  apply 'guard_tests'/1
			      (_cor3)
		      in  let <_cor2> =
			      %% Line 237
			      call 'lists':'droplast'
				  (_cor1)
			  in  let <Gs1> =
				  %% Line 233
				  call 'lists':'foldr'
				      (_cor11, _cor4, _cor2)
			      in  %% Line 238
				  case _cor0 of
				    <{'core',_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28}> when 'true' ->
					let <_cor15> =
					    call 'erlang':'setelement'
						(4, _cor0, 'true')
					in  let <_8501> =
						apply 'gexpr_top'/2
						    (Gs1, _cor15)
					    in  case _8501 of
						  <{Gs,St}> when 'true' ->
						      %% Line 239
						      case St of
							<{'core',_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36}> when 'true' ->
							    let <_cor19> =
								call 'erlang':'setelement'
								    (4, St, 'false')
							    in  {Gs,_cor19}
							( <_cor37> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','core'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
						  ( <_cor16> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_8501})
						    -| ['compiler_generated'] )
						end
				    ( <_cor29> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','core'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
	end
'guard_tests'/1 =
    %% Line 241
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 242
	    call 'erlang':'hd'
		(_cor0)
	in  let <L> =
		%% Line 242
		call 'erlang':'element'
		    (2, _cor1)
	    in  let <_cor9> =
		    %% Line 243
		    fun (_cor6,_cor5) ->
			{'op',L,'and',_cor6,_cor5}
		in  let <_cor4> =
			%% Line 243
			call 'lists':'last'
			    (_cor0)
		    in  let <_cor3> =
			    %% Line 243
			    call 'lists':'droplast'
				(_cor0)
			in  let <_cor10> =
				%% Line 243
				call 'lists':'foldr'
				    (_cor9, _cor4, _cor3)
			    in  %% Line 243
				{'protect',L,_cor10}
'gexpr_top'/2 =
    %% Line 250
    fun (_cor1,_cor0) ->
	let <_4227> =
	    %% Line 251
	    apply 'gexpr'/3
		(_cor1, [], _cor0)
	in  %% Line 251
	    case _4227 of
	      <{E1,Eps0,Bools,St1}> when 'true' ->
		  let <_2558> =
		      %% Line 252
		      apply 'force_booleans'/4
			  (Bools, E1, Eps0, St1)
		  in  %% Line 252
		      case _2558 of
			<{E,Eps,St}> when 'true' ->
			    let <_cor4> =
				%% Line 253
				call 'erlang':'++'
				    (Eps, [E|[]])
			    in  %% Line 253
				{_cor4,St}
			( <_cor3> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_2558})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_4227})
		-| ['compiler_generated'] )
	    end
'gexpr'/3 =
    %% Line 258
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'protect',Line,Arg},Bools0,St0> when 'true' ->
	      let <_12774> =
		  %% Line 259
		  apply 'gexpr'/3
		      (Arg, [], _cor0)
	      in  %% Line 259
		  case _12774 of
		    %% Line 260
		    <{E0,[],Bools,St1}> when 'true' ->
			let <_4195> =
			    %% Line 261
			    apply 'force_booleans'/4
				(Bools, E0, [], St1)
			in  %% Line 261
			    case _4195 of
			      <{E,Eps,St}> when 'true' ->
				  %% Line 262
				  {E,Eps,_cor1,St}
			      ( <_cor3> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_4195})
				-| ['compiler_generated'] )
			    end
		    %% Line 263
		    <{E0,Eps0,Bools,St1}> when 'true' ->
			let <_8815> =
			    %% Line 264
			    apply 'force_booleans'/4
				(Bools, E0, Eps0, St1)
			in  %% Line 264
			    case _8815 of
			      <{E,Eps,St}> when 'true' ->
				  let <Anno> =
				      %% Line 265
				      apply 'lineno_anno'/2
					  (Line, St)
				  in  let <_cor6> =
					  %% Line 266
					  call 'erlang':'++'
					      (Eps, [E|[]])
				      in  %% Line 266
					  {{'iprotect',{'a',[],[],Anno},_cor6},[],_cor1,St}
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_8815})
				-| ['compiler_generated'] )
			    end
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_12774})
		      -| ['compiler_generated'] )
		  end
	  %% Line 268
	  <{'op',L,'andalso',E1,E2},Bools,St0> when 'true' ->
	      let <_12468> =
		  %% Line 1700
		  apply 'new_var_name'/1
		      (_cor0)
	      in  %% Line 1700
		  case _12468 of
		    <{New,St}> when 'true' ->
			let <_15145> = {%% Line 1701
			     {'c_var',L,New},St}
			in  case _15145 of
			      <{{'c_var',_cor21,V0},St}> when 'true' ->
				  let <V> = {'var',L,V0}
				  in  let <False> = {'atom',L,'false'}
				      in  let <E> =
					      apply 'make_bool_switch_guard'/5
						  (L, E1, V, E2, False)
					  in  apply 'gexpr'/3
						  (E, _cor1, St)
			      ( <_cor8> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_15145})
				-| ['compiler_generated'] )
			    end
		    ( <_9519> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12468})
		      -| ['compiler_generated'] )
		  end
	  %% Line 274
	  <{'op',L,'orelse',E1,E2},Bools,St0> when 'true' ->
	      let <_12468> =
		  %% Line 1700
		  apply 'new_var_name'/1
		      (_cor0)
	      in  %% Line 1700
		  case _12468 of
		    <{New,St}> when 'true' ->
			let <_14008> = {%% Line 1701
			     {'c_var',L,New},St}
			in  case _14008 of
			      <{{'c_var',_cor22,V0},St}> when 'true' ->
				  let <V> = {'var',L,V0}
				  in  let <True> = {'atom',L,'true'}
				      in  let <E> =
					      apply 'make_bool_switch_guard'/5
						  (L, E1, V, True, E2)
					  in  apply 'gexpr'/3
						  (E, _cor1, St)
			      ( <_cor12> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_14008})
				-| ['compiler_generated'] )
			    end
		    ( <_8517> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12468})
		      -| ['compiler_generated'] )
		  end
	  %% Line 280
	  <E = {'op',Line,Op,L,R},Bools,St> when 'true' ->
	      let <_1311> =
		  %% Line 281
		  call 'erl_internal':'bool_op'
		      (Op, 2)
	      in  %% Line 281
		  case _1311 of
		    %% Line 282
		    <'true'> when 'true' ->
			%% Line 283
			apply 'gexpr_bool'/6
			    (Op, L, R, _cor1, _cor0, Line)
		    %% Line 284
		    <'false'> when 'true' ->
			%% Line 285
			apply 'gexpr_test'/3
			    (_cor2, _cor1, _cor0)
		    ( <_cor16> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_1311})
		      -| ['compiler_generated'] )
		  end
	  %% Line 287
	  <E = {'call',Line,{'remote',_cor23,{'atom',_cor24,'erlang'},{'atom',_cor25,Op}},[L|[R|[]]]},Bools,St> when 'true' ->
	      let <_12947> =
		  %% Line 288
		  call 'erl_internal':'bool_op'
		      (Op, 2)
	      in  %% Line 288
		  case _12947 of
		    %% Line 289
		    <'true'> when 'true' ->
			%% Line 290
			apply 'gexpr_bool'/6
			    (Op, L, R, _cor1, _cor0, Line)
		    %% Line 291
		    <'false'> when 'true' ->
			%% Line 292
			apply 'gexpr_test'/3
			    (_cor2, _cor1, _cor0)
		    ( <_cor17> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_12947})
		      -| ['compiler_generated'] )
		  end
	  %% Line 294
	  <{'op',Line,'not',A},Bools,St> when 'true' ->
	      %% Line 295
	      apply 'gexpr_not'/4
		  (A, _cor1, _cor0, Line)
	  %% Line 296
	  <{'call',Line,{'remote',_cor26,{'atom',_cor27,'erlang'},{'atom',_cor28,'not'}},[A|[]]},Bools,St> when 'true' ->
	      %% Line 297
	      apply 'gexpr_not'/4
		  (A, _cor1, _cor0, Line)
	  %% Line 298
	  <E0,Bools,St0> when 'true' ->
	      %% Line 299
	      apply 'gexpr_test'/3
		  (_cor2, _cor1, _cor0)
	end
'gexpr_bool'/6 =
    %% Line 304
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_2917> =
	    %% Line 305
	    apply 'gexpr'/3
		(_cor4, _cor2, _cor1)
	in  %% Line 305
	    case _2917 of
	      <{Le,Lps,Bools1,St1}> when 'true' ->
		  let <_5363> =
		      %% Line 306
		      apply 'force_safe'/2
			  (Le, St1)
		  in  %% Line 306
		      case _5363 of
			<{Ll,Llps,St2}> when 'true' ->
			    let <_1357> =
				%% Line 307
				apply 'gexpr'/3
				    (_cor3, Bools1, St2)
			    in  %% Line 307
				case _1357 of
				  <{Re,Rps,Bools,St3}> when 'true' ->
				      let <_3228> =
					  %% Line 308
					  apply 'force_safe'/2
					      (Re, St3)
				      in  %% Line 308
					  case _3228 of
					    <{Rl,Rlps,St4}> when 'true' ->
						let <Anno> =
						    %% Line 309
						    apply 'lineno_anno'/2
							(_cor0, St4)
						in  let <_cor11> =
							%% Line 313
							call 'erlang':'++'
							    (Rps, Rlps)
						    in  let <_cor12> =
							    %% Line 313
							    call 'erlang':'++'
								(Llps, _cor11)
							in  let <_cor13> =
								%% Line 313
								call 'erlang':'++'
								    (Lps, _cor12)
							    in  %% Line 310
								{{'icall',{'a',[],[],Anno},%% Line 311
											   {'c_literal',Anno,'erlang'},%% Line 312
														       {'c_literal',Anno,_cor5},%% Line 313
																		[Ll|[Rl|[]]]},_cor13,Bools,St4}
					    ( <_cor9> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_3228})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor8> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_1357})
				    -| ['compiler_generated'] )
				end
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_5363})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor6> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_2917})
		-| ['compiler_generated'] )
	    end
'gexpr_not'/4 =
    %% Line 318
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_9884> =
	    %% Line 319
	    apply 'gexpr'/3
		(_cor3, _cor2, _cor1)
	in  %% Line 319
	    case _9884 of
	      <{Ae0,Aps,Bools,St1}> when 'true' ->
		  %% Line 320
		  case Ae0 of
		    %% Line 323
		    <EqCall = {'icall',_cor20,{'c_literal',_cor21,'erlang'},{'c_literal',_cor22,'=:='},[E|[{'c_literal',_cor23,'true'}|[]]]}> when 'true' ->
			let <_rec2> =
			    %% Line 329
			    [E|[{'c_literal',[],'false'}]]
			in  let <_cor8> =
				%% Line 329
				call 'erlang':'setelement'
				    (5, Ae0, _rec2)
			    in  let <_9225> =
				    %% Line 330
				    apply 'force_safe'/2
					(_cor8, St1)
				in  %% Line 330
				    case _9225 of
				      <{Al,Alps,St2}> when 'true' ->
					  let <_cor11> =
					      %% Line 331
					      call 'erlang':'++'
						  (Aps, Alps)
					  in  %% Line 331
					      {Al,_cor11,Bools,St2}
				      ( <_cor10> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_9225})
					-| ['compiler_generated'] )
				    end
		    %% Line 332
		    <Ae> when 'true' ->
			let <_3921> =
			    %% Line 333
			    apply 'force_safe'/2
				(Ae0, St1)
			in  %% Line 333
			    case _3921 of
			      <{Al,Alps,St2}> when 'true' ->
				  let <Anno> =
				      %% Line 334
				      apply 'lineno_anno'/2
					  (_cor0, St2)
				  in  let <_cor14> =
					  %% Line 338
					  call 'erlang':'++'
					      (Aps, Alps)
				      in  %% Line 335
					  {{'icall',{'a',[],[],Anno},%% Line 336
								     {'c_literal',Anno,'erlang'},%% Line 337
												 {'c_literal',Anno,'not'},%% Line 338
															  [Al|[]]},_cor14,Bools,St2}
			      ( <_cor12> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_3921})
				-| ['compiler_generated'] )
			    end
		  end
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_9884})
		-| ['compiler_generated'] )
	    end
'gexpr_test'/3 =
    %% Line 346
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'atom',L,'true'},Bools,St0> when 'true' ->
	      let <_cor3> =
		  %% Line 347
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  %% Line 347
		  {{'c_literal',_cor3,'true'},[],_cor1,_cor0}
	  %% Line 348
	  <{'atom',L,'false'},Bools,St0> when 'true' ->
	      let <_cor4> =
		  %% Line 349
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  %% Line 349
		  {{'c_literal',_cor4,'false'},[],_cor1,_cor0}
	  %% Line 350
	  <E0,Bools0,St0> when 'true' ->
	      let <_8513> =
		  %% Line 351
		  apply 'expr'/2
		      (_cor2, _cor0)
	      in  %% Line 351
		  case _8513 of
		    <{E1,Eps0,St1}> when 'true' ->
			%% Line 353
			case E1 of
			  %% Line 354
			  <{'icall',Anno,{'c_literal',_cor30,'erlang'},{'c_literal',_cor31,N},As}> when 'true' ->
			      let <Ar> =
				  %% Line 355
				  call 'erlang':'length'
				      (As)
			      in  let <_6928> =
				      %% Line 356
				      call 'erl_internal':'type_test'
					  (N, Ar)
				  in  let <_cor11> =
					  %% Line 356
					  ( case _6928 of
					      ( <( 'true'
						   -| ['compiler_generated'] )> when 'true' ->
						    'true'
						-| ['compiler_generated'] )
					      ( <( 'false'
						   -| ['compiler_generated'] )> when 'true' ->
						    let <_10135> =
							%% Line 357
							call 'erl_internal':'comp_op'
							    (N, Ar)
						    in  %% Line 357
							( case _10135 of
							    ( <( 'true'
								 -| ['compiler_generated'] )> when 'true' ->
								  'true'
							      -| ['compiler_generated'] )
							    ( <( 'false'
								 -| ['compiler_generated'] )> when 'true' ->
								  %% Line 358
								  call 'erl_internal':'bool_op'
								      (N, Ar)
							      -| ['compiler_generated'] )
							    ( <_cor8> when 'true' ->
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( 'error'
													 -| ['compiler_generated'] )
									(( {( 'badarg'
									      -| ['compiler_generated'] ),_10135}
									   -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_cor7> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {( 'badarg'
								-| ['compiler_generated'] ),_6928}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				      in  %% Line 356
					  case _cor11 of
					    %% Line 359
					    <'true'> when 'true' ->
						{E1,Eps0,_cor1,St1}
					    %% Line 360
					    <'false'> when 'true' ->
						%% Line 361
						( case Anno of
						    ( <( {'a',_cor32,_cor33,_rec4}
							 -| ['compiler_generated'] )> when 'true' ->
							  let <_12468> =
							      %% Line 1700
							      apply 'new_var_name'/1
								  (St1)
							  in  %% Line 1700
							      case _12468 of
								<{New,St}> when 'true' ->
								    let <New> = {%% Line 1701
									 'c_var',_rec4,New}
								    in  let <Bools> =
									    [New|_cor1]
									in  let <_cor17> =
										call 'erlang':'++'
										    (Eps0, [{'iset',Anno,New,E1}|[]])
									    in  {{'icall',Anno,{'c_literal',_rec4,'erlang'},{'c_literal',_rec4,'=:='},[New|[{'c_literal',_rec4,'true'}|[]]]},_cor17,Bools,St}
								( <_2481> when 'true' ->
								      primop 'match_fail'
									  ({'badmatch',_12468})
								  -| ['compiler_generated'] )
							      end
						      -| ['compiler_generated'] )
						    ( <_cor34> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','a'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    ( <_cor18> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_cor11})
					      -| ['compiler_generated'] )
					  end
			  %% Line 370
			  <_cor35> when 'true' ->
			      let <Anno> =
				  %% Line 371
				  apply 'get_ianno'/1
				      (E1)
			      in  let <Lanno> =
				      %% Line 372
				      apply 'get_lineno_anno'/1
					  (E1)
				  in  let <_5250> =
					  %% Line 373
					  apply 'is_simple'/1
					      (E1)
				      in  %% Line 373
					  case _5250 of
					    %% Line 374
					    <'true'> when 'true' ->
						let <Bools> =
						    %% Line 375
						    [E1|_cor1]
						in  %% Line 376
						    {{'icall',Anno,%% Line 377
								   {'c_literal',Lanno,'erlang'},%% Line 378
												{'c_literal',Lanno,'=:='},%% Line 379
															  [E1|[{'c_literal',Lanno,'true'}|[]]]},Eps0,Bools,St1}
					    %% Line 380
					    <'false'> when 'true' ->
						let <_12468> =
						    %% Line 1700
						    apply 'new_var_name'/1
							(St1)
						in  %% Line 1700
						    case _12468 of
						      <{New,St}> when 'true' ->
							  let <New,St2> = <%% Line 1701
							       {'c_var',Lanno,New},St>
							  in  let <Bools> =
								  [New|_cor1]
							      in  let <_cor24> =
								      call 'erlang':'++'
									  (Eps0, [{'iset',Anno,New,E1}|[]])
								  in  {{'icall',Anno,{'c_literal',Lanno,'erlang'},{'c_literal',Lanno,'=:='},[New|[{'c_literal',Lanno,'true'}|[]]]},_cor24,Bools,St2}
						      ( <_10934> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_12468})
							-| ['compiler_generated'] )
						    end
					    ( <_cor25> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_5250})
					      -| ['compiler_generated'] )
					  end
			end
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_8513})
		      -| ['compiler_generated'] )
		  end
	end
'force_booleans'/4 =
    %% Line 391
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor9> =
	    %% Line 392
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor6) ->
			  case _cor6 of
			    <[V|_cor5]> when 'true' ->
				let <_cor7> =
				    %% Line 2320
				    call 'erlang':'setelement'
					(2, V, [])
				in  let <_cor8> =
					apply 'lc$^0'/1
					    (_cor5)
				    in  ( [_cor7|_cor8]
					  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_5334> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor6})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  case _cor3 of
		    <[V|_cor5]> when 'true' ->
			let <_cor7> =
			    %% Line 2320
			    call 'erlang':'setelement'
				(2, V, [])
			in  let <_cor8> =
				apply 'lc$^0'/1
				    (_cor5)
			    in  ( [_cor7|_cor8]
				  -| ['compiler_generated'] )
		    <[]> when 'true' ->
			[]
		    ( <_5334> when 'true' ->
			  primop 'match_fail'
			      ({'function_clause',_cor3})
		      -| ['compiler_generated'] )
		  end
	      -| ['list_comprehension'] )
	in  let <Vs> =
		%% Line 393
		apply 'unforce'/3
		    (_cor2, _cor1, _cor9)
	    in  %% Line 394
		apply 'force_booleans_1'/4
		    (Vs, _cor2, _cor1, _cor0)
'force_booleans_1'/4 =
    %% Line 396
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[],E,Eps,St> when 'true' ->
	      %% Line 397
	      {_cor2,_cor1,_cor0}
	  %% Line 398
	  <[V|Vs],E0,Eps0,St0> when 'true' ->
	      let <_14833> =
		  %% Line 399
		  apply 'force_safe'/2
		      (_cor2, _cor0)
	      in  %% Line 399
		  case _14833 of
		    <{E1,Eps1,St1}> when 'true' ->
			let <Lanno> =
			    %% Line 400
			    call 'erlang':'element'
				(2, V)
			in  let <Anno> =
				%% Line 401
				{'a',[],[],Lanno}
			    in  let <Call> =
				    %% Line 402
				    {'icall',Anno,{'c_literal',Lanno,'erlang'},%% Line 403
									       {'c_literal',Lanno,'is_boolean'},%% Line 404
														[V|[]]}
				in  let <_12468> =
					%% Line 1700
					apply 'new_var_name'/1
					    (St1)
				    in  %% Line 1700
					case _12468 of
					  <{New,St}> when 'true' ->
					      let <New,St> = <%% Line 1701
						   {'c_var',Lanno,New},St>
					      in  let <Iset> =
						      {'iset',Anno,New,Call}
						  in  let <_cor10> =
							  call 'erlang':'++'
							      (Eps1, [Iset|[]])
						      in  let <Eps> =
							      call 'erlang':'++'
								  (_cor1, _cor10)
							  in  let <E> =
								  {'icall',Anno,{'c_literal',Lanno,'erlang'},{'c_literal',Lanno,'and'},[E1|[New|[]]]}
							      in  apply 'force_booleans_1'/4
								      (Vs, E, Eps, St)
					  ( <_12103> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_12468})
					    -| ['compiler_generated'] )
					end
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_14833})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor16,_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'force_booleans_1',4}}] )
	    -| ['compiler_generated'] )
	end
'unforce'/3 =
    %% Line 436
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_cor9,_cor10,[]> when 'true' ->
	      %% Line 437
	      []
	  %% Line 438
	  <E,Eps,Vs> when 'true' ->
	      let <_cor4> =
		  %% Line 439
		  call 'erlang':'++'
		      (_cor1, [_cor2|[]])
	      in  let <_cor3> =
		      %% Line 439
		      call 'gb_trees':'empty'
			  ()
		  in  let <Tree> =
			  %% Line 439
			  apply 'unforce_tree'/2
			      (_cor4, _cor3)
		      in  %% Line 440
			  apply 'unforce'/2
			      (Tree, _cor0)
	end
'unforce_tree'/2 =
    %% Line 442
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'iset',_cor6,{'c_var',_cor7,V},Arg0}|Es],D0> when 'true' ->
	      let <Arg> =
		  %% Line 443
		  apply 'unforce_tree_subst'/2
		      (Arg0, _cor0)
	      in  let <D> =
		      %% Line 444
		      call 'gb_trees':'insert'
			  (V, Arg, _cor0)
		  in  %% Line 445
		      apply 'unforce_tree'/2
			  (Es, D)
	  %% Line 446
	  <[Call = {'icall',_cor8,_cor9,_cor10,_cor11}|[]],D> when 'true' ->
	      %% Line 447
	      apply 'unforce_tree_subst'/2
		  (Call, _cor0)
	  %% Line 448
	  <[Top|[]],_cor12> when 'true' ->
	      Top
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'unforce_tree',2}}] )
	    -| ['compiler_generated'] )
	end
'unforce_tree_subst'/2 =
    %% Line 450
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Call = {'icall',_cor11,{'c_literal',_cor12,'erlang'},%% Line 451
								{'c_literal',_cor13,'=:='},%% Line 452
											   [_X_Expr|[{'c_literal',_cor14,Bool}|[]]]},_cor15>
	      when %% Line 453
		call 'erlang':'is_boolean'
		    (Bool) ->
	      _cor1
	  %% Line 457
	  <Call = {'icall',_cor16,_cor17,_cor18,Args0},D> when 'true' ->
	      let <_cor5> =
		  %% Line 458
		  fun (_cor3) ->
		      case _cor3 of
			<Var = {'c_var',_cor19,V}> when 'true' ->
			    let <_7424> =
				%% Line 459
				call 'gb_trees':'lookup'
				    (V, _cor0)
			    in  %% Line 459
				case _7424 of
				  %% Line 460
				  <{'value',Val}> when 'true' ->
				      Val
				  %% Line 461
				  <'none'> when 'true' ->
				      _cor3
				  ( <_cor2> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_7424})
				    -| ['compiler_generated'] )
				end
			%% Line 463
			<Expr> when 'true' ->
			    _cor3
		      end
	      in  let <Args> =
		      %% Line 458
		      call 'lists':'map'
			  (_cor5, Args0)
		  in  %% Line 465
		      call 'erlang':'setelement'
			  (5, _cor1, Args)
	  %% Line 466
	  <Expr,_cor25> when 'true' ->
	      _cor1
	end
'unforce'/2 =
    %% Line 468
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'icall',_cor7,{'c_literal',_cor8,'erlang'},%% Line 469
						       {'c_literal',_cor9,Name},Args},Vs0> when 'true' ->
	      %% Line 471
	      case <Name,Args> of
		%% Line 472
		<'and',[Arg1|[Arg2|[]]]> when 'true' ->
		    let <Vs> =
			%% Line 473
			apply 'unforce'/2
			    (Arg1, _cor0)
		    in  %% Line 474
			apply 'unforce'/2
			    (Arg2, Vs)
		%% Line 475
		<'=:=',[E|[{'c_literal',_cor10,Bool}|[]]]>
		    when call 'erlang':'is_boolean'
			  (Bool) ->
		    let <_cor3> =
			%% Line 2320
			call 'erlang':'setelement'
			    (2, E, [])
		    in  %% Line 476
			call 'erlang':'--'
			    (_cor0, [_cor3|[]])
		%% Line 477
		<_cor11,_cor12> when 'true' ->
		    _cor0
	      end
	  %% Line 481
	  <_cor13,Vs> when 'true' ->
	      _cor0
	end
'exprs'/2 =
    %% Line 486
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[E0|Es0],St0> when 'true' ->
	      let <_15531> =
		  %% Line 487
		  apply 'expr'/2
		      (E0, _cor0)
	      in  %% Line 487
		  case _15531 of
		    <{E1,Eps,St1}> when 'true' ->
			let <_1547> =
			    %% Line 488
			    apply 'exprs'/2
				(Es0, St1)
			in  %% Line 488
			    case _1547 of
			      <{Es1,St2}> when 'true' ->
				  let <_cor4> =
				      %% Line 489
				      [E1|Es1]
				  in  let <_cor5> =
					  %% Line 489
					  call 'erlang':'++'
					      (Eps, _cor4)
				      in  %% Line 489
					  {_cor5,St2}
			      ( <_cor3> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_1547})
				-| ['compiler_generated'] )
			    end
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_15531})
		      -| ['compiler_generated'] )
		  end
	  %% Line 490
	  <[],St> when 'true' ->
	      {[],_cor0}
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'exprs',2}}] )
	    -| ['compiler_generated'] )
	end
'expr'/2 =
    %% Line 495
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'var',L,V},St> when 'true' ->
	      let <_cor2> =
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  {{'c_var',_cor2,V},[],_cor0}
	  %% Line 496
	  <{'char',L,C},St> when 'true' ->
	      let <_cor3> =
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  {{'c_literal',_cor3,C},[],_cor0}
	  %% Line 497
	  <{'integer',L,I},St> when 'true' ->
	      let <_cor4> =
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  {{'c_literal',_cor4,I},[],_cor0}
	  %% Line 498
	  <{'float',L,F},St> when 'true' ->
	      let <_cor5> =
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  {{'c_literal',_cor5,F},[],_cor0}
	  %% Line 499
	  <{'atom',L,A},St> when 'true' ->
	      let <_cor6> =
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  {{'c_literal',_cor6,A},[],_cor0}
	  %% Line 500
	  <{'nil',L},St> when 'true' ->
	      let <_cor7> =
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  {{'c_literal',_cor7,[]},[],_cor0}
	  %% Line 501
	  <{'string',L,S},St> when 'true' ->
	      let <_cor8> =
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  {{'c_literal',_cor8,S},[],_cor0}
	  %% Line 502
	  <{'cons',L,H0,T0},St0> when 'true' ->
	      let <_13267> =
		  %% Line 503
		  apply 'safe'/2
		      (H0, _cor0)
	      in  %% Line 503
		  case _13267 of
		    <{H1,Hps,St1}> when 'true' ->
			let <_7505> =
			    %% Line 504
			    apply 'safe'/2
				(T0, St1)
			in  %% Line 504
			    case _7505 of
			      <{T1,Tps,St2}> when 'true' ->
				  let <A> =
				      %% Line 505
				      apply 'lineno_anno'/2
					  (L, St2)
				  in  let <_cor13> =
					  %% Line 506
					  apply 'annotate_cons'/4
					      (A, H1, T1, St2)
				      in  let <_cor12> =
					      %% Line 506
					      call 'erlang':'++'
						  (Hps, Tps)
					  in  %% Line 506
					      {_cor13,_cor12,St2}
			      ( <_cor10> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_7505})
				-| ['compiler_generated'] )
			    end
		    ( <_cor9> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_13267})
		      -| ['compiler_generated'] )
		  end
	  %% Line 507
	  <{'lc',L,E,Qs0},St0> when 'true' ->
	      let <_7986> =
		  %% Line 508
		  apply 'preprocess_quals'/3
		      (L, Qs0, _cor0)
	      in  %% Line 508
		  case _7986 of
		    <{Qs1,St1}> when 'true' ->
			let <_cor15> =
			    %% Line 509
			    apply 'lineno_anno'/2
				(L, St1)
			in  %% Line 509
			    apply 'lc_tq'/5
				(L, E, Qs1, {'c_literal',_cor15,[]}, St1)
		    ( <_cor14> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_7986})
		      -| ['compiler_generated'] )
		  end
	  %% Line 510
	  <{'bc',L,E,Qs},St> when 'true' ->
	      %% Line 511
	      apply 'bc_tq'/5
		  (L, E, Qs, {'nil',L}, _cor0)
	  %% Line 512
	  <{'tuple',L,Es0},St0> when 'true' ->
	      let <_14815> =
		  %% Line 513
		  apply 'safe_list'/2
		      (Es0, _cor0)
	      in  %% Line 513
		  case _14815 of
		    <{Es1,Eps,St1}> when 'true' ->
			let <A> =
			    %% Line 514
			    apply 'record_anno'/2
				(L, St1)
			in  let <_cor18> =
				%% Line 515
				apply 'annotate_tuple'/3
				    (A, Es1, St1)
			    in  %% Line 515
				{_cor18,Eps,St1}
		    ( <_cor16> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_14815})
		      -| ['compiler_generated'] )
		  end
	  %% Line 516
	  <{'map',L,Es0},St0> when 'true' ->
	      %% Line 519
	      try
		  apply 'map_pair_list'/2
		      (Es0, _cor0)
	      of <_cor19> ->
		  case _cor19 of
		    %% Line 520
		    <{Es1,Eps,St1}> when 'true' ->
			let <A> =
			    %% Line 521
			    apply 'lineno_anno'/2
				(L, St1)
			in  let <_cor21> =
				%% Line 522
				call 'cerl':'ann_c_map'
				    (A, Es1)
			    in  %% Line 522
				{_cor21,Eps,St1}
		    ( <_cor22> when 'true' ->
			  primop 'match_fail'
			      ({'try_clause',_cor19})
		      -| ['compiler_generated'] )
		  end
	      catch <_cor25,_cor24,_cor23> ->
		  case <_cor25,_cor24,_cor23> of
		    %% Line 524
		    <'throw',{'bad_map',Warning},_cor159> when 'true' ->
			let <St> =
			    %% Line 525
			    apply 'add_warning'/3
				(L, Warning, _cor0)
			in  let <LineAnno> =
				%% Line 526
				apply 'lineno_anno'/2
				    (L, St)
			    in  let <As> =
				    %% Line 527
				    [{'c_literal',LineAnno,'badarg'}|[]]
				in  %% Line 528
				    {{'icall',{'a',[],[],LineAnno},%% Line 529
								   {'c_literal',LineAnno,'erlang'},%% Line 530
												   {'c_literal',LineAnno,'error'},As},%% Line 531
																      [],St}
		    ( <_10584,_9663,_6715> when 'true' ->
			  primop 'raise'
			      (_cor23, _cor24)
		      -| ['compiler_generated'] )
		  end
	  %% Line 533
	  <{'map',L,M0,Es0},St0> when 'true' ->
	      %% Line 534
	      try
		  let <_cor29> =
		      apply 'lineno_anno'/2
			  (L, _cor0)
		  in  apply 'expr_map'/4
			  (M0, Es0, _cor29, _cor0)
	      of <_cor30> ->
		  case _cor30 of
		    %% Line 535
		    <Res = {_cor160,_cor161,_cor162}> when 'true' ->
			_cor30
		    ( <_cor31> when 'true' ->
			  primop 'match_fail'
			      ({'try_clause',_cor30})
		      -| ['compiler_generated'] )
		  end
	      catch <_cor34,_cor33,_cor32> ->
		  case <_cor34,_cor33,_cor32> of
		    %% Line 537
		    <'throw',{'bad_map',Warning},_cor163> when 'true' ->
			let <St> =
			    %% Line 538
			    apply 'add_warning'/3
				(L, Warning, _cor0)
			in  let <LineAnno> =
				%% Line 539
				apply 'lineno_anno'/2
				    (L, St)
			    in  let <As> =
				    %% Line 540
				    [{'c_literal',LineAnno,'badarg'}|[]]
				in  %% Line 541
				    {{'icall',{'a',[],[],LineAnno},%% Line 542
								   {'c_literal',LineAnno,'erlang'},%% Line 543
												   {'c_literal',LineAnno,'error'},As},%% Line 544
																      [],St}
		    ( <_4121,_7812,_10319> when 'true' ->
			  primop 'raise'
			      (_cor32, _cor33)
		      -| ['compiler_generated'] )
		  end
	  %% Line 546
	  <{'bin',L,Es0},St0> when 'true' ->
	      %% Line 547
	      try
		  let <_cor38> =
		      apply 'lineno_anno'/2
			  (L, _cor0)
		  in  apply 'expr_bin'/3
			  (Es0, _cor38, _cor0)
	      of <_cor39> ->
		  case _cor39 of
		    %% Line 548
		    <Res = {_cor164,_cor165,_cor166}> when 'true' ->
			_cor39
		    ( <_cor40> when 'true' ->
			  primop 'match_fail'
			      ({'try_clause',_cor39})
		      -| ['compiler_generated'] )
		  end
	      catch <_cor43,_cor42,_cor41> ->
		  case <_cor43,_cor42,_cor41> of
		    %% Line 550
		    <'throw','bad_binary',_cor167> when 'true' ->
			let <St> =
			    %% Line 551
			    apply 'add_warning'/3
				(L, 'bad_binary', _cor0)
			in  let <LineAnno> =
				%% Line 552
				apply 'lineno_anno'/2
				    (L, St)
			    in  let <As> =
				    %% Line 553
				    [{'c_literal',LineAnno,'badarg'}|[]]
				in  %% Line 554
				    {{'icall',{'a',[],[],LineAnno},%% Line 555
								   {'c_literal',LineAnno,'erlang'},%% Line 556
												   {'c_literal',LineAnno,'error'},As},%% Line 557
																      [],St}
		    ( <_13706,_9452,_4253> when 'true' ->
			  primop 'raise'
			      (_cor41, _cor42)
		      -| ['compiler_generated'] )
		  end
	  %% Line 559
	  <{'block',_cor168,Es0},St0> when 'true' ->
	      let <_cor47> =
		  %% Line 561
		  call 'lists':'droplast'
		      (Es0)
	      in  let <_11571> =
		      %% Line 561
		      apply 'exprs'/2
			  (_cor47, _cor0)
		  in  %% Line 561
		      case _11571 of
			<{Es1,St1}> when 'true' ->
			    let <_cor49> =
				%% Line 562
				call 'lists':'last'
				    (Es0)
			    in  let <_3817> =
				    %% Line 562
				    apply 'expr'/2
					(_cor49, St1)
				in  %% Line 562
				    case _3817 of
				      <{E1,Eps,St2}> when 'true' ->
					  let <_cor51> =
					      %% Line 563
					      call 'erlang':'++'
						  (Es1, Eps)
					  in  %% Line 563
					      {E1,_cor51,St2}
				      ( <_cor50> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_3817})
					-| ['compiler_generated'] )
				    end
			( <_cor48> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_11571})
			  -| ['compiler_generated'] )
		      end
	  %% Line 564
	  <{'if',L,Cs0},St0> when 'true' ->
	      let <_11313> =
		  %% Line 565
		  apply 'clauses'/2
		      (Cs0, _cor0)
	      in  %% Line 565
		  case _11313 of
		    <{Cs1,St1}> when 'true' ->
			let <Lanno> =
			    %% Line 566
			    apply 'lineno_anno'/2
				(L, St1)
			in  let <Fc> =
				%% Line 567
				apply 'fail_clause'/3
				    ([], Lanno, {'c_literal',[],'if_clause'})
			    in  %% Line 568
				{{'icase',{'a',[],[],Lanno},[],Cs1,Fc},[],St1}
		    ( <_cor52> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_11313})
		      -| ['compiler_generated'] )
		  end
	  %% Line 569
	  <{'case',L,E0,Cs0},St0> when 'true' ->
	      let <_10497> =
		  %% Line 570
		  apply 'novars'/2
		      (E0, _cor0)
	      in  %% Line 570
		  case _10497 of
		    <{E1,Eps,St1}> when 'true' ->
			let <_8167> =
			    %% Line 571
			    apply 'clauses'/2
				(Cs0, St1)
			in  %% Line 571
			    case _8167 of
			      <{Cs1,St2}> when 'true' ->
				  let <_12468> =
				      %% Line 1700
				      apply 'new_var_name'/1
					  (St2)
				  in  %% Line 1700
				      case _12468 of
					<{New,St}> when 'true' ->
					    let <Fpat,St3> = <%% Line 1701
						 {'c_var',[],New},St>
					    in  let <Lanno> =
						    apply 'lineno_anno'/2
							(L, St2)
						in  let <_cor59> =
							call 'cerl':'c_tuple'
							    ([{'c_literal',[],'case_clause'}|[Fpat|[]]])
						    in  let <Fc> =
							    apply 'fail_clause'/3
								([Fpat|[]], Lanno, _cor59)
							in  {{'icase',{'a',[],[],Lanno},[E1|[]],Cs1,Fc},Eps,St3}
					( <_cor2> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_12468})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor56> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_8167})
				-| ['compiler_generated'] )
			    end
		    ( <_cor55> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_10497})
		      -| ['compiler_generated'] )
		  end
	  %% Line 576
	  <{'receive',L,Cs0},St0> when 'true' ->
	      let <_5483> =
		  %% Line 577
		  apply 'clauses'/2
		      (Cs0, _cor0)
	      in  %% Line 577
		  case _5483 of
		    <{Cs1,St1}> when 'true' ->
			let <_cor62> =
			    %% Line 578
			    apply 'lineno_anno'/2
				(L, St1)
			in  %% Line 578
			    {{'ireceive1',{'a',[],[],_cor62},Cs1},[],St1}
		    ( <_cor61> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_5483})
		      -| ['compiler_generated'] )
		  end
	  %% Line 579
	  <{'receive',L,Cs0,Te0,Tes0},St0> when 'true' ->
	      let <_2004> =
		  %% Line 580
		  apply 'novars'/2
		      (Te0, _cor0)
	      in  %% Line 580
		  case _2004 of
		    <{Te1,Teps,St1}> when 'true' ->
			let <_1439> =
			    %% Line 581
			    apply 'exprs'/2
				(Tes0, St1)
			in  %% Line 581
			    case _1439 of
			      <{Tes1,St2}> when 'true' ->
				  let <_15587> =
				      %% Line 582
				      apply 'clauses'/2
					  (Cs0, St2)
				  in  %% Line 582
				      case _15587 of
					<{Cs1,St3}> when 'true' ->
					    let <_cor66> =
						%% Line 583
						apply 'lineno_anno'/2
						    (L, St3)
					    in  %% Line 583
						{{'ireceive2',{'a',[],[],_cor66},Cs1,Te1,Tes1},Teps,St3}
					( <_cor65> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_15587})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor64> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_1439})
				-| ['compiler_generated'] )
			    end
		    ( <_cor63> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_2004})
		      -| ['compiler_generated'] )
		  end
	  %% Line 585
	  <{'try',L,Es0,[],Ecs,[]},St0> when 'true' ->
	      let <_624> =
		  %% Line 587
		  apply 'exprs'/2
		      (Es0, _cor0)
	      in  %% Line 587
		  case _624 of
		    <{Es1,St1}> when 'true' ->
			let <_12468> =
			    %% Line 1700
			    apply 'new_var_name'/1
				(St1)
			in  %% Line 1700
			    case _12468 of
			      <{New,St}> when 'true' ->
				  let <V,St2> = <%% Line 1701
				       {'c_var',[],New},St>
				  in  let <_10647> =
					  apply 'try_exception'/2
					      (Ecs, St2)
				      in  case _10647 of
					    <{Evs,Hs,St3}> when 'true' ->
						let <Lanno> =
						    apply 'lineno_anno'/2
							(L, St3)
						in  {{'itry',{'a',[],[],Lanno},Es1,[V|[]],[V|[]],Evs,Hs},[],St3}
					    ( <_cor69> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_10647})
					      -| ['compiler_generated'] )
					  end
			      ( <_cor2> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_12468})
				-| ['compiler_generated'] )
			    end
		    ( <_cor67> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_624})
		      -| ['compiler_generated'] )
		  end
	  %% Line 594
	  <{'try',L,Es0,Cs0,Ecs,[]},St0> when 'true' ->
	      let <_9922> =
		  %% Line 596
		  apply 'exprs'/2
		      (Es0, _cor0)
	      in  %% Line 596
		  case _9922 of
		    <{Es1,St1}> when 'true' ->
			let <_12468> =
			    %% Line 1700
			    apply 'new_var_name'/1
				(St1)
			in  %% Line 1700
			    case _12468 of
			      <{New,St}> when 'true' ->
				  let <V,St2> = <%% Line 1701
				       {'c_var',[],New},St>
				  in  let <_8470> =
					  apply 'clauses'/2
					      (Cs0, St2)
				      in  case _8470 of
					    <{Cs1,St3}> when 'true' ->
						let <_12468> =
						    apply 'new_var_name'/1
							(St3)
						in  case _12468 of
						      <{New,St}> when 'true' ->
							  let <Fpat> = {%% Line 1701
							       'c_var',[],New}
							  in  let <Lanno> =
								  apply 'lineno_anno'/2
								      (L, St)
							      in  let <_cor76> =
								      call 'cerl':'c_tuple'
									  ([{'c_literal',[],'try_clause'}|[Fpat|[]]])
								  in  let <Fc> =
									  apply 'fail_clause'/3
									      ([Fpat|[]], Lanno, _cor76)
								      in  let <_2826> =
									      apply 'try_exception'/2
										  (Ecs, St)
									  in  case _2826 of
										<{Evs,Hs,St5}> when 'true' ->
										    let <_cor79> =
											apply 'lineno_anno'/2
											    (L, St5)
										    in  {{'itry',{'a',[],[],_cor79},Es1,[V|[]],[{'icase',{'a',[],[],Lanno},[V|[]],Cs1,Fc}|[]],Evs,Hs},[],St5}
										( <_cor78> when 'true' ->
										      primop 'match_fail'
											  ({'badmatch',_2826})
										  -| ['compiler_generated'] )
									      end
						      ( <_cor2> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_12468})
							-| ['compiler_generated'] )
						    end
					    ( <_cor73> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_8470})
					      -| ['compiler_generated'] )
					  end
			      ( <_cor2> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_12468})
				-| ['compiler_generated'] )
			    end
		    ( <_cor71> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_9922})
		      -| ['compiler_generated'] )
		  end
	  %% Line 608
	  <{'try',L,Es0,[],[],As0},St0> when 'true' ->
	      let <_5879> =
		  %% Line 610
		  apply 'exprs'/2
		      (Es0, _cor0)
	      in  %% Line 610
		  case _5879 of
		    <{Es1,St1}> when 'true' ->
			let <_12769> =
			    %% Line 611
			    apply 'exprs'/2
				(As0, St1)
			in  %% Line 611
			    case _12769 of
			      <{As1,St2}> when 'true' ->
				  let <_14328> =
				      %% Line 612
				      apply 'new_fun_name'/2
					  ([97|[102|[116|[101|[114]]]]], St2)
				  in  %% Line 612
				      case _14328 of
					<{Name,St3}> when 'true' ->
					    let <_12468> =
						%% Line 1700
						apply 'new_var_name'/1
						    (St3)
					    in  %% Line 1700
						case _12468 of
						  <{New,St}> when 'true' ->
						      let <V,St4> = <%% Line 1701
							   {'c_var',[],New},St>
						      in  let <LA> =
							      apply 'lineno_anno'/2
								  (L, St4)
							  in  let <Lanno> =
								  {'a',[],[],LA}
							      in  let <_9121> = {Name,0}
								  in  let <FcAnno> =
									  %% Line 1716
									  [{'function_name',_9121}|LA]
								      in  let <_cor4> =
									      %% Line 1718
									      call 'cerl':'ann_c_tuple'
										  (LA, [{'c_literal',[],'function_clause'}])
									  in  let <Fc> =
										  %% Line 1721
										  {'iclause',{'a',[],[],['compiler_generated']},[],[],%% Line 1722
																      [],%% Line 1723
																	 [{'iprimop',{'a',[],[],FcAnno},{'c_literal',[],'match_fail'},%% Line 1724
																								      [_cor4|[]]}|%% Line 1724
																										  []]}
									      in  let <Fun> =
										      {'ifun',Lanno,[],[],[{'iclause',Lanno,[],[],[{'c_literal',[],'true'}],As1}|[]],Fc,'unnamed'}
										  in  let <App> =
											  {'iapply',{'a',[],[],['compiler_generated'|LA]},{'c_var',LA,{Name,0}},[]}
										      in  let <_7325> =
											      apply 'try_after'/2
												  ([App|[]], St4)
											  in  case _7325 of
												<{Evs,Hs,St5}> when 'true' ->
												    let <Try> =
													{'itry',Lanno,Es1,[V|[]],[App|[V|[]]],Evs,Hs}
												    in  let <Letrec> =
													    {'iletrec',Lanno,[{{Name,0},Fun}|[]],[Try|[]]}
													in  {Letrec,[],St5}
												( <_cor89> when 'true' ->
												      primop 'match_fail'
													  ({'badmatch',_7325})
												  -| ['compiler_generated'] )
											      end
						  ( <_cor2> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_12468})
						    -| ['compiler_generated'] )
						end
					( <_cor82> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_14328})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor81> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_12769})
				-| ['compiler_generated'] )
			    end
		    ( <_cor80> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_5879})
		      -| ['compiler_generated'] )
		  end
	  %% Line 629
	  <{'try',L,Es,Cs,Ecs,As},St0> when 'true' ->
	      %% Line 631
	      apply 'expr'/2
		  ({'try',L,[{'try',L,Es,Cs,Ecs,[]}|[]],[],[],As}, _cor0)
	  %% Line 632
	  <{'catch',L,E0},St0> when 'true' ->
	      let <_13270> =
		  %% Line 633
		  apply 'expr'/2
		      (E0, _cor0)
	      in  %% Line 633
		  case _13270 of
		    <{E1,Eps,St1}> when 'true' ->
			let <Lanno> =
			    %% Line 634
			    apply 'lineno_anno'/2
				(L, St1)
			in  let <_cor94> =
				%% Line 635
				call 'erlang':'++'
				    (Eps, [E1|[]])
			    in  %% Line 635
				{{'icatch',{'a',[],[],Lanno},_cor94},[],St1}
		    ( <_cor92> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_13270})
		      -| ['compiler_generated'] )
		  end
	  %% Line 636
	  <{'fun',L,{'function',F,A},Id = {_cor169,_cor170,_cor171}},St> when 'true' ->
	      let <Lanno> =
		  %% Line 637
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  let <_cor96> =
		      %% Line 638
		      call 'erlang':'++'
			  (Lanno, [{'id',Id}|[]])
		  in  %% Line 638
		      {{'c_var',_cor96,{F,A}},[],_cor0}
	  %% Line 639
	  <{'fun',L,{'function',M,F,A}},St0> when 'true' ->
	      let <_15255> =
		  %% Line 640
		  apply 'safe_list'/2
		      ([M|[F|[A|[]]]], _cor0)
	      in  %% Line 640
		  case _15255 of
		    <{As,Aps,St1}> when 'true' ->
			let <Lanno> =
			    %% Line 641
			    apply 'lineno_anno'/2
				(L, St1)
			in  %% Line 642
			    {{'icall',{'a',[],[],Lanno},%% Line 643
							{'c_literal',[],'erlang'},%% Line 644
										  {'c_literal',[],'make_fun'},As},Aps,St1}
		    ( <_cor97> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_15255})
		      -| ['compiler_generated'] )
		  end
	  %% Line 646
	  <{'fun',L,{'clauses',Cs},Id},St> when 'true' ->
	      %% Line 647
	      apply 'fun_tq'/5
		  (Id, Cs, L, _cor0, 'unnamed')
	  %% Line 648
	  <{'named_fun',L,'_',Cs,Id},St> when 'true' ->
	      %% Line 649
	      apply 'fun_tq'/5
		  (Id, Cs, L, _cor0, 'unnamed')
	  %% Line 650
	  <{'named_fun',L,Name,Cs,{Index,Uniq,_X_Fname}},St> when 'true' ->
	      %% Line 651
	      apply 'fun_tq'/5
		  ({Index,Uniq,Name}, Cs, L, _cor0, {'named',Name})
	  %% Line 652
	  <{'call',L,{'remote',_cor172,M,F},As0},St0 = {'core',_cor173,_cor174,_cor175,Wanted,_cor176,_cor177,_cor178}> when 'true' ->
	      let <_12237> =
		  %% Line 653
		  apply 'safe_list'/2
		      ([M|[F|As0]], _cor0)
	      in  %% Line 653
		  case _12237 of
		    <{[M1|[F1|As1]],Aps,St1}> when 'true' ->
			let <Lanno> =
			    %% Line 654
			    apply 'lineno_anno'/2
				(L, St1)
			in  let <_cor102> =
				%% Line 655
				case Wanted of
				  %% Line 656
				  <'false'> when 'true' ->
				      ['result_not_wanted'|Lanno]
				  %% Line 657
				  <'true'> when 'true' ->
				      Lanno
				  ( <_cor101> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',Wanted})
				    -| ['compiler_generated'] )
				end
			    in  %% Line 659
				{{'icall',{'a',[],[],_cor102},M1,F1,As1},Aps,St1}
		    ( <_cor99> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12237})
		      -| ['compiler_generated'] )
		  end
	  %% Line 660
	  <{'call',Lc,{'atom',Lf,F},As0},St0> when 'true' ->
	      let <_9508> =
		  %% Line 661
		  apply 'safe_list'/2
		      (As0, _cor0)
	      in  %% Line 661
		  case _9508 of
		    <{As1,Aps,St1}> when 'true' ->
			let <_cor106> =
			    %% Line 662
			    apply 'lineno_anno'/2
				(Lf, St1)
			in  let <_cor105> =
				%% Line 662
				call 'erlang':'length'
				    (As1)
			    in  let <Op> = {%% Line 662
				     'c_var',_cor106,%% Line 662
						     {F,_cor105}}
				in  let <_cor108> =
					%% Line 663
					apply 'lineno_anno'/2
					    (Lc, St1)
				    in  %% Line 663
					{{'iapply',{'a',[],[],_cor108},Op,As1},Aps,St1}
		    ( <_cor104> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_9508})
		      -| ['compiler_generated'] )
		  end
	  %% Line 664
	  <{'call',L,FunExp,As0},St0> when 'true' ->
	      let <_cor109> =
		  %% Line 665
		  call 'erlang':'length'
		      (As0)
	      in  let <_12605> =
		      %% Line 665
		      apply 'safe_fun'/3
			  (_cor109, FunExp, _cor0)
		  in  %% Line 665
		      case _12605 of
			<{Fun,Fps,St1}> when 'true' ->
			    let <_13669> =
				%% Line 666
				apply 'safe_list'/2
				    (As0, St1)
			    in  %% Line 666
				case _13669 of
				  <{As1,Aps,St2}> when 'true' ->
				      let <Lanno> =
					  %% Line 667
					  apply 'lineno_anno'/2
					      (L, St2)
				      in  let <_cor113> =
					      %% Line 668
					      call 'erlang':'++'
						  (Fps, Aps)
					  in  %% Line 668
					      {{'iapply',{'a',[],[],Lanno},Fun,As1},_cor113,St2}
				  ( <_cor111> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_13669})
				    -| ['compiler_generated'] )
				end
			( <_cor110> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_12605})
			  -| ['compiler_generated'] )
		      end
	  %% Line 669
	  <{'match',L,P0,E0},St0> when 'true' ->
	      let <_6526> =
		  %% Line 671
		  apply 'fold_match'/2
		      (E0, P0)
	      in  %% Line 671
		  case _6526 of
		    <{P1,E1}> when 'true' ->
			let <_cor118> =
			    %% Line 672
			    case P1 of
			      %% Line 673
			      <{'var',_cor179,'_'}> when 'true' ->
				  case _cor0 of
				    <{'core',_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186}> when 'true' ->
					call 'erlang':'setelement'
					    (5, _cor0, 'false')
				    ( <_cor187> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','core'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
			      %% Line 674
			      <_cor188> when 'true' ->
				  _cor0
			    end
			in  let <_9588> =
				%% Line 676
				apply 'novars'/2
				    (E1, _cor118)
			    in  %% Line 676
				case _9588 of
				  <{E2,Eps,St2}> when 'true' ->
				      %% Line 677
				      ( case _cor0 of
					  ( <( {'core',_cor189,_cor190,_cor191,_rec9,_cor192,_cor193,_cor194}
					       -| ['compiler_generated'] )> when 'true' ->
						case St2 of
						  <{'core',_cor196,_cor197,_cor198,_cor199,_cor200,_cor201,_cor202}> when 'true' ->
						      let <_cor126> =
							  call 'erlang':'setelement'
							      (5, St2, _rec9)
						      in  let <_cor132> =
							      %% Line 678
							      try
								  %% Line 679
								  apply 'pattern'/2
								      (P1, _cor126)
							      of <_cor128> ->
								  _cor128
							      catch <_cor131,_cor130,_cor129> ->
								  case <_cor131,_cor130,_cor129> of
								    %% Line 681
								    <'throw',Thrown,_cor204> when 'true' ->
									_cor130
								    ( <_15531,_14199,_3961> when 'true' ->
									  primop 'raise'
									      (_cor129, _cor130)
								      -| ['compiler_generated'] )
								  end
							  in  let <_12468> =
								  %% Line 1700
								  apply 'new_var_name'/1
								      (_cor126)
							      in  %% Line 1700
								  case _12468 of
								    <{New,St}> when 'true' ->
									let <Fpat,St4> = <%% Line 1701
									     {'c_var',[],New},St>
									in  let <Lanno> =
										apply 'lineno_anno'/2
										    (L, St4)
									    in  let <_cor136> =
										    call 'cerl':'c_tuple'
											([{'c_literal',[],'badmatch'}|[Fpat|[]]])
										in  let <Fc> =
											apply 'fail_clause'/3
											    ([Fpat|[]], Lanno, _cor136)
										    in  case _cor132 of
											  <'nomatch'> when 'true' ->
											      let <St> =
												  apply 'add_warning'/3
												      (L, 'nomatch', St4)
											      in  {{'icase',{'a',[],[],Lanno},[E2|[]],[],Fc},Eps,St}
											  <Other>
											      when let <_cor139> =
												    call 'erlang':'is_atom'
													(_cor132)
												in  call 'erlang':'not'
													(_cor139) ->
											      {{'imatch',{'a',[],[],Lanno},_cor132,[],E2,Fc},Eps,St4}
											  ( <_cor140> when 'true' ->
												primop 'match_fail'
												    ({'case_clause',_cor132})
											    -| ['compiler_generated'] )
											end
								    ( <_cor2> when 'true' ->
									  primop 'match_fail'
									      ({'badmatch',_12468})
								      -| ['compiler_generated'] )
								  end
						  ( <_cor203> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','core'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
					    -| ['compiler_generated'] )
					  ( <_cor195> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','core'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				  ( <_cor120> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_9588})
				    -| ['compiler_generated'] )
				end
		    ( <_cor114> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_6526})
		      -| ['compiler_generated'] )
		  end
	  %% Line 695
	  <{'op',_cor205,'++',{'lc',Llc,E,Qs0},More},St0> when 'true' ->
	      let <_13379> =
		  %% Line 702
		  apply 'safe'/2
		      (More, _cor0)
	      in  %% Line 702
		  case _13379 of
		    <{Mc,Mps,St1}> when 'true' ->
			let <_13571> =
			    %% Line 703
			    apply 'preprocess_quals'/3
				(Llc, Qs0, St1)
			in  %% Line 703
			    case _13571 of
			      <{Qs,St2}> when 'true' ->
				  let <_3371> =
				      %% Line 704
				      apply 'lc_tq'/5
					  (Llc, E, Qs, Mc, St2)
				  in  %% Line 704
				      case _3371 of
					<{Y,Yps,St}> when 'true' ->
					    let <_cor144> =
						%% Line 705
						call 'erlang':'++'
						    (Mps, Yps)
					    in  %% Line 705
						{Y,_cor144,St}
					( <_cor143> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_3371})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor142> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_13571})
				-| ['compiler_generated'] )
			    end
		    ( <_cor141> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_13379})
		      -| ['compiler_generated'] )
		  end
	  %% Line 706
	  <{'op',L,'andalso',E1,E2},St0> when 'true' ->
	      let <_12468> =
		  %% Line 1700
		  apply 'new_var_name'/1
		      (_cor0)
	      in  %% Line 1700
		  case _12468 of
		    <{New,St}> when 'true' ->
			let <_6050> = {%% Line 1701
			     {'c_var',L,New},St}
			in  case _6050 of
			      <{{'c_var',_cor206,V0},St}> when 'true' ->
				  let <V> = {'var',L,V0}
				  in  let <False> = {'atom',L,'false'}
				      in  let <E> =
					      apply 'make_bool_switch'/6
						  (L, E1, V, E2, False, _cor0)
					  in  apply 'expr'/2
						  (E, St)
			      ( <_cor145> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_6050})
				-| ['compiler_generated'] )
			    end
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12468})
		      -| ['compiler_generated'] )
		  end
	  %% Line 712
	  <{'op',L,'orelse',E1,E2},St0> when 'true' ->
	      let <_12468> =
		  %% Line 1700
		  apply 'new_var_name'/1
		      (_cor0)
	      in  %% Line 1700
		  case _12468 of
		    <{New,St}> when 'true' ->
			let <_13255> = {%% Line 1701
			     {'c_var',L,New},St}
			in  case _13255 of
			      <{{'c_var',_cor207,V0},St}> when 'true' ->
				  let <V> = {'var',L,V0}
				  in  let <True> = {'atom',L,'true'}
				      in  let <E> =
					      apply 'make_bool_switch'/6
						  (L, E1, V, True, E2, _cor0)
					  in  apply 'expr'/2
						  (E, St)
			      ( <_cor149> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_13255})
				-| ['compiler_generated'] )
			    end
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12468})
		      -| ['compiler_generated'] )
		  end
	  %% Line 718
	  <{'op',L,Op,A0},St0> when 'true' ->
	      let <_5040> =
		  %% Line 719
		  apply 'safe'/2
		      (A0, _cor0)
	      in  %% Line 719
		  case _5040 of
		    <{A1,Aps,St1}> when 'true' ->
			let <LineAnno> =
			    %% Line 720
			    apply 'lineno_anno'/2
				(L, St1)
			in  %% Line 721
			    {{'icall',{'a',[],[],LineAnno},%% Line 722
							   {'c_literal',LineAnno,'erlang'},%% Line 723
											   {'c_literal',LineAnno,Op},%% Line 723
														     [A1|[]]},Aps,St1}
		    ( <_cor153> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_5040})
		      -| ['compiler_generated'] )
		  end
	  %% Line 724
	  <{'op',L,Op,L0,R0},St0> when 'true' ->
	      let <_7562> =
		  %% Line 725
		  apply 'safe_list'/2
		      ([L0|[R0|[]]], _cor0)
	      in  %% Line 725
		  case _7562 of
		    <{As,Aps,St1}> when 'true' ->
			let <LineAnno> =
			    %% Line 726
			    apply 'lineno_anno'/2
				(L, St1)
			in  %% Line 727
			    {{'icall',{'a',[],[],LineAnno},%% Line 728
							   {'c_literal',LineAnno,'erlang'},%% Line 729
											   {'c_literal',LineAnno,Op},As},Aps,St1}
		    ( <_cor155> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_7562})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor158,_cor157> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'expr',2}}] )
	    -| ['compiler_generated'] )
	end
'make_bool_switch'/6 =
    %% Line 731
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <L,E,V,T,F,{'core',_cor12,_cor13,'true',_cor14,_cor15,_cor16,_cor17}> when 'true' ->
	      %% Line 732
	      apply 'make_bool_switch_guard'/5
		  (_cor5, _cor4, _cor3, _cor2, _cor1)
	  %% Line 733
	  <L,E,V,T,F,{'core',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24}> when 'true' ->
	      %% Line 734
	      apply 'make_bool_switch_body'/5
		  (_cor5, _cor4, _cor3, _cor2, _cor1)
	  ( <_cor11,_cor10,_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'make_bool_switch',6}}] )
	    -| ['compiler_generated'] )
	end
'make_bool_switch_body'/5 =
    %% Line 736
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_1407> =
	    %% Line 2306
	    fun (_15489) ->
		call 'erlang':'abs'
		    (_15489)
	in  let <_cor5> =
		%% Line 2306
		call 'erl_parse':'set_line'
		    (_cor4, _1407)
	    in  let <_14258> =
		    %% Line 2309
		    fun (_3687) ->
			let <_8374> =
			    call 'erlang':'abs'
				(_3687)
			in  call 'erlang':'-'
				(_8374)
		in  let <NegL> =
			%% Line 2309
			call 'erl_parse':'set_line'
			    (_cor5, _14258)
		    in  let <Error> =
			    %% Line 738
			    {'tuple',NegL,[{'atom',NegL,'badarg'}|[_cor2|[]]]}
			in  %% Line 739
			    {'case',NegL,_cor3,%% Line 740
					       [{'clause',NegL,[{'atom',NegL,'true'}|[]],[],[_cor1|[]]}|%% Line 741
													[{'clause',NegL,[{'atom',NegL,'false'}|[]],[],[_cor0|[]]}|%% Line 742
																				  [{'clause',NegL,[_cor2|[]],[],%% Line 743
																								[{'call',NegL,{'remote',NegL,{'atom',NegL,'erlang'},{'atom',NegL,'error'}},%% Line 744
																																	   [Error|[]]}|%% Line 744
																																		       []]}|%% Line 744
																																			    []]]]}
'make_bool_switch_guard'/5 =
    %% Line 746
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_cor12,E,_cor13,{'atom',_cor14,'true'},{'atom',_cor15,'false'}> when 'true' ->
	      _cor3
	  %% Line 747
	  <L,E,V,T,F> when 'true' ->
	      let <_3084> =
		  %% Line 2306
		  fun (_13385) ->
		      call 'erlang':'abs'
			  (_13385)
	      in  let <_cor5> =
		      %% Line 2306
		      call 'erl_parse':'set_line'
			  (_cor4, _3084)
		  in  let <_14366> =
			  %% Line 2309
			  fun (_8527) ->
			      let <_10442> =
				  call 'erlang':'abs'
				      (_8527)
			      in  call 'erlang':'-'
				      (_10442)
		      in  let <NegL> =
			      %% Line 2309
			      call 'erl_parse':'set_line'
				  (_cor5, _14366)
			  in  %% Line 749
			      {'case',NegL,_cor3,%% Line 750
						 [{'clause',NegL,[{'atom',NegL,'true'}|[]],[],[_cor1|[]]}|%% Line 751
													  [{'clause',NegL,[{'atom',NegL,'false'}|[]],[],[_cor0|[]]}|%% Line 752
																				    [{'clause',NegL,[_cor2|[]],[],[_cor2|[]]}|%% Line 753
																									      []]]]}
	end
'expr_map'/4 =
    %% Line 755
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_8744> =
	    %% Line 756
	    apply 'safe'/2
		(_cor3, _cor0)
	in  %% Line 756
	    case _8744 of
	      <{M1,Mps,St1}> when 'true' ->
		  let <_5661> =
		      %% Line 757
		      apply 'is_valid_map_src'/1
			  (M1)
		  in  %% Line 757
		      case _5661 of
			%% Line 758
			<'true'> when 'true' ->
			    %% Line 759
			    case <M1,_cor2> of
			      %% Line 760
			      <{'c_var',_cor18,_cor19},[]> when 'true' ->
				  let <_12468> =
				      %% Line 1700
				      apply 'new_var_name'/1
					  (St1)
				  in  %% Line 1700
				      case _12468 of
					<{New,St}> when 'true' ->
					    let <Vpat,St2> = <%% Line 1701
						 {'c_var',[],New},St>
					    in  let <_12468> =
						    apply 'new_var_name'/1
							(St2)
						in  case _12468 of
						      <{New,St}> when 'true' ->
							  let <Fpat> = {%% Line 1701
							       'c_var',[],New}
							  in  let <Cs> =
								  [{'iclause',_cor1,[Vpat|[]],[],[{'icall',{'a',[],[],_cor1},{'c_literal',_cor1,'erlang'},{'c_literal',_cor1,'is_map'},[Vpat|[]]}|[]],[Vpat|[]]}|[]]
							      in  let <Fc> =
								      apply 'fail_clause'/3
									  ([Fpat|[]], _cor1, {'c_literal',[],'badarg'})
								  in  {{'icase',{'a',[],[],_cor1},[M1|[]],Cs,Fc},Mps,St}
						      ( <_7461> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_12468})
							-| ['compiler_generated'] )
						    end
					( <_7655> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_12468})
					  -| ['compiler_generated'] )
				      end
			      %% Line 774
			      <_cor20,_cor21> when 'true' ->
				  let <_15167> =
				      %% Line 775
				      apply 'map_pair_list'/2
					  (_cor2, St1)
				  in  %% Line 775
				      case _15167 of
					<{Es1,Eps,St2}> when 'true' ->
					    let <_cor11> =
						%% Line 776
						call 'cerl':'ann_c_map'
						    (_cor1, M1, Es1)
					    in  let <_cor10> =
						    %% Line 776
						    call 'erlang':'++'
							(Mps, Eps)
						in  %% Line 776
						    {_cor11,_cor10,St2}
					( <_cor9> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_15167})
					  -| ['compiler_generated'] )
				      end
			    end
			%% Line 778
			<'false'> when 'true' ->
			    call 'erlang':'throw'
				({'bad_map','bad_map'})
			( <_cor13> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_5661})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_8744})
		-| ['compiler_generated'] )
	    end
'is_valid_map_src'/1 =
    %% Line 781
    fun (_cor0) ->
	case _cor0 of
	  <{'c_literal',_cor2,M}>
	      when call 'erlang':'is_map'
		    (M) ->
	      'true'
	  %% Line 782
	  <{'c_map',_cor3,_cor4,_cor5}> when 'true' ->
	      'true'
	  %% Line 783
	  <{'c_var',_cor6,_cor7}> when 'true' ->
	      'true'
	  %% Line 784
	  <_cor8> when 'true' ->
	      'false'
	end
'map_pair_list'/2 =
    %% Line 786
    fun (_cor1,_cor0) ->
	let <_cor20> =
	    %% Line 787
	    fun (_cor17,_cor16) ->
		case <_cor17,_cor16> of
		  %% Line 788
		  <{'map_field_assoc',L,K0,V0},{Ces,Esp,St0}> when 'true' ->
		      let <_15711> =
			  %% Line 789
			  apply 'safe'/2
			      (K0, St0)
		      in  %% Line 789
			  case _15711 of
			    <{K,Ep0,St1}> when 'true' ->
				%% Line 804
				case K of
				  <{'c_literal',_cor2,_cor3}> when 'true' ->
				      let <_13702> =
					  apply 'safe'/2
					      (V0, St1)
				      in  case _13702 of
					    <{V,Ep1,St2}> when 'true' ->
						let <A> =
						    apply 'lineno_anno'/2
							(L, St2)
						in  let <Pair> =
							{'c_map_pair',A,{'c_literal',[],'assoc'},K,V}
						    in  let <_cor7> =
							    call 'erlang':'++'
								(Ep1, Esp)
							in  let <_cor8> =
								call 'erlang':'++'
								    (Ep0, _cor7)
							    in  {[Pair|Ces],_cor8,St2}
					    ( <_cor4> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_13702})
					      -| ['compiler_generated'] )
					  end
				  %% Line 805
				  <_cor4> when 'true' ->
				      call 'erlang':'throw'
					  ({'bad_map','bad_map_key'})
				end
			    ( <_cor2> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_15711})
			      -| ['compiler_generated'] )
			  end
		  %% Line 795
		  <{'map_field_exact',L,K0,V0},{Ces,Esp,St0}> when 'true' ->
		      let <_8336> =
			  %% Line 796
			  apply 'safe'/2
			      (K0, St0)
		      in  %% Line 796
			  case _8336 of
			    <{K,Ep0,St1}> when 'true' ->
				%% Line 804
				case K of
				  <{'c_literal',_cor2,_cor3}> when 'true' ->
				      let <_4435> =
					  apply 'safe'/2
					      (V0, St1)
				      in  case _4435 of
					    <{V,Ep1,St2}> when 'true' ->
						let <A> =
						    apply 'lineno_anno'/2
							(L, St2)
						in  let <Pair> =
							{'c_map_pair',A,{'c_literal',[],'exact'},K,V}
						    in  let <_cor14> =
							    call 'erlang':'++'
								(Ep1, Esp)
							in  let <_cor15> =
								call 'erlang':'++'
								    (Ep0, _cor14)
							    in  {[Pair|Ces],_cor15,St2}
					    ( <_cor11> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_4435})
					      -| ['compiler_generated'] )
					  end
				  %% Line 805
				  <_cor4> when 'true' ->
				      call 'erlang':'throw'
					  ({'bad_map','bad_map_key'})
				end
			    ( <_cor9> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_8336})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor19,_cor18> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor17,_cor16})
			  -| [{'function_name',{'-map_pair_list/2-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 787
	    call 'lists':'foldr'
		(_cor20, %% Line 802
			 {[],[],_cor0}, _cor1)
'try_exception'/2 =
    %% Line 809
    fun (_cor1,_cor0) ->
	let <_4941> =
	    %% Line 1707
	    apply 'new_vars_1'/4
		(3, [], _cor0, [])
	in  %% Line 811
	    case _4941 of
	      <{Evs,St1}> when 'true' ->
		  let <_2950> =
		      %% Line 812
		      apply 'clauses'/2
			  (_cor1, St1)
		  in  %% Line 812
		      case _2950 of
			<{Ecs1,St2}> when 'true' ->
			    %% Line 813
			    case Evs of
			      <[_cor11|[Value|[Info|[]]]]> when 'true' ->
				  let <_cor5> =
				      %% Line 815
				      call 'cerl':'c_tuple'
					  (Evs)
				  in  let <Ec> =
					  %% Line 814
					  {'iclause',{'a',[],[],['compiler_generated']},%% Line 815
											[_cor5|[]],[],%% Line 815
												      [{'c_literal',[],'true'}],%% Line 816
																[{'iprimop',{'a',[],[],[]},%% Line 817
																			   {'c_literal',[],'raise'},%% Line 818
																						    [Info|[Value|[]]]}|%% Line 818
																								       []]}
				      in  let <_cor7> =
					      %% Line 819
					      call 'cerl':'c_tuple'
						  (Evs)
					  in  let <Hs> =
						  %% Line 819
						  [{'icase',{'a',[],[],[]},[_cor7|[]],Ecs1,Ec}|[]]
					      in  %% Line 820
						  {Evs,Hs,St2}
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'badmatch',Evs})
				-| ['compiler_generated'] )
			    end
			( <_cor3> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_2950})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_4941})
		-| ['compiler_generated'] )
	    end
'try_after'/2 =
    %% Line 822
    fun (_cor1,_cor0) ->
	let <_3844> =
	    %% Line 1707
	    apply 'new_vars_1'/4
		(3, [], _cor0, [])
	in  %% Line 824
	    case _3844 of
	      <{Evs,St1}> when 'true' ->
		  %% Line 825
		  case Evs of
		    <[_cor11|[Value|[Info|[]]]]> when 'true' ->
			let <B> =
			    %% Line 826
			    call 'erlang':'++'
				(_cor1, [{'iprimop',{'a',[],[],[]},%% Line 827
								   {'c_literal',[],'raise'},%% Line 828
											    [Info|[Value|[]]]}|%% Line 828
													       []])
			in  let <_cor5> =
				%% Line 830
				call 'cerl':'c_tuple'
				    (Evs)
			    in  let <Ec> =
				    %% Line 829
				    {'iclause',{'a',[],[],['compiler_generated']},%% Line 830
										  [_cor5|[]],[],%% Line 830
												[{'c_literal',[],'true'}],B}
				in  let <_cor7> =
					%% Line 832
					call 'cerl':'c_tuple'
					    (Evs)
				    in  let <Hs> =
					    %% Line 832
					    [{'icase',{'a',[],[],[]},[_cor7|[]],[],Ec}|[]]
					in  %% Line 833
					    {Evs,Hs,St1}
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',Evs})
		      -| ['compiler_generated'] )
		  end
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_3844})
		-| ['compiler_generated'] )
	    end
'expr_bin'/3 =
    %% Line 840
    fun (_cor2,_cor1,_cor0) ->
	let <_3499> =
	    %% Line 841
	    apply 'constant_bin'/1
		(_cor2)
	in  %% Line 841
	    case _3499 of
	      %% Line 842
	      <'error'> when 'true' ->
		  let <_7126> =
		      %% Line 843
		      apply 'expr_bin_1'/2
			  (_cor2, _cor0)
		  in  %% Line 843
		      case _7126 of
			<{Es,Eps,St}> when 'true' ->
			    %% Line 844
			    {{'ibinary',{'a',[],[],_cor1},Es},Eps,St}
			( <_cor3> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_7126})
			  -| ['compiler_generated'] )
		      end
	      %% Line 845
	      <Bin> when 'true' ->
		  %% Line 846
		  {{'c_literal',_cor1,_3499},[],_cor0}
	    end
'constant_bin'/1 =
    %% Line 855
    fun (_cor0) ->
	%% Line 856
	try
	    %% Line 857
	    apply 'constant_bin_1'/1
		(_cor0)
	of <_cor1> ->
	    _cor1
	catch <_cor4,_cor3,_cor2> ->
	    case <_cor4,_cor3,_cor2> of
	      %% Line 859
	      <'throw','error',_cor6> when 'true' ->
		  'error'
	      ( <_6950,_729,_5091> when 'true' ->
		    primop 'raise'
			(_cor2, _cor3)
		-| ['compiler_generated'] )
	    end
'constant_bin_1'/1 =
    %% Line 862
    fun (_cor0) ->
	do  %% Line 863
	    apply 'verify_suitable_fields'/1
		(_cor0)
	    let <EmptyBindings> =
		%% Line 864
		call 'erl_eval':'new_bindings'
		    ()
	    in  let <EvalFun> =
		    %% Line 865
		    fun (_cor3,_cor2) ->
			case <_cor3,_cor2> of
			  <{'integer',_cor10,I},B> when 'true' ->
			      {'value',I,_cor2}
			  %% Line 866
			  <{'char',_cor11,C},B> when 'true' ->
			      {'value',C,_cor2}
			  %% Line 867
			  <{'float',_cor12,F},B> when 'true' ->
			      {'value',F,_cor2}
			  %% Line 868
			  <{'atom',_cor13,'undefined'},B> when 'true' ->
			      {'value','undefined',_cor2}
			  ( <_cor5,_cor4> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor3,_cor2})
				  -| [{'function_name',{'-constant_bin_1/1-fun-0-',2}}] )
			    -| ['compiler_generated'] )
			end
		in  let <_cor7> =
			catch
			    %% Line 870
			    call 'eval_bits':'expr_grp'
				(_cor0, EmptyBindings, EvalFun)
		    in  %% Line 870
			case _cor7 of
			  %% Line 871
			  <{'value',Bin,_cor14}>
			      when call 'erlang':'=:='
				    (_cor14,
				     EmptyBindings) ->
			      Bin
			  %% Line 873
			  <_cor15> when 'true' ->
			      %% Line 874
			      'error'
			end
'verify_suitable_fields'/1 =
    %% Line 879
    fun (_cor0) ->
	case _cor0 of
	  <[{'bin_element',_cor12,Val,SzTerm,Opts}|Es]> when 'true' ->
	      let <_8414> =
		  %% Line 880
		  call 'lists':'member'
		      ('big', Opts)
	      in  let <_cor3> =
		      %% Line 880
		      ( case _8414 of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				'true'
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				call 'lists':'member'
				    ('little', Opts)
			    -| ['compiler_generated'] )
			  ( <_cor1> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {( 'badarg'
					    -| ['compiler_generated'] ),_8414}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  in  do  %% Line 880
			  case _cor3 of
			    %% Line 881
			    <'true'> when 'true' ->
				'ok'
			    %% Line 882
			    <'false'> when 'true' ->
				call 'erlang':'throw'
				    ('error')
			    ( <_cor4> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor3})
			      -| ['compiler_generated'] )
			  end
			  let <_12277> =
			      %% Line 884
			      call 'lists':'keyfind'
				  ('unit', 1, Opts)
			  in  %% Line 884
			      case _12277 of
				<{'unit',Unit}> when 'true' ->
				    do  %% Line 885
					case <SzTerm,Val> of
					  %% Line 886
					  <{'atom',_cor13,'undefined'},{'char',_cor14,_cor15}> when 'true' ->
					      'ok'
					  %% Line 889
					  <{'atom',_cor16,'undefined'},{'integer',_cor17,_cor18}> when 'true' ->
					      'ok'
					  %% Line 892
					  <{'integer',_cor19,Sz},_cor20>
					      when try
						    let <_cor6> =
							call 'erlang':'*'
							    (Sz, Unit)
						    in  call 'erlang':'=<'
							    (_cor6, 256)
						of <Try> ->
						    Try
						catch <T,R> ->
						    'false' ->
					      'ok'
					  %% Line 895
					  <{'integer',_cor21,Sz0},{'integer',_cor22,Int}> when 'true' ->
					      let <Sz> =
						  %% Line 899
						  call 'erlang':'*'
						      (Sz0, Unit)
					      in  let <_9264> =
						      %% Line 900
						      apply 'count_bits'/1
							  (Int)
						  in  %% Line 900
						      case _9264 of
							%% Line 901
							<BitsNeeded>
							    when try
								  let <_cor8> =
								      call 'erlang':'*'
									  (2, _9264)
								  in  call 'erlang':'>='
									  (_cor8, Sz)
							      of <Try> ->
								  Try
							      catch <T,R> ->
								  'false' ->
							    'ok'
							%% Line 903
							<_cor23> when 'true' ->
							    %% Line 906
							    call 'erlang':'throw'
								('error')
						      end
					  %% Line 908
					  <_cor24,_cor25> when 'true' ->
					      %% Line 911
					      call 'erlang':'throw'
						  ('error')
					end
					%% Line 913
					apply 'verify_suitable_fields'/1
					    (Es)
				( <_cor5> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_12277})
				  -| ['compiler_generated'] )
			      end
	  %% Line 914
	  <[]> when 'true' ->
	      'ok'
	  ( <_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'verify_suitable_fields',1}}] )
	    -| ['compiler_generated'] )
	end
'count_bits'/1 =
    %% Line 919
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 2306
	    fun (_cor1) ->
		call 'erlang':'abs'
		    (_cor1)
	in  let <_cor1> =
		%% Line 2306
		call 'erl_parse':'set_line'
		    (_cor0, _cor3)
	    in  %% Line 922
		case _cor1 of
		  <0> when 'true' ->
		      64
		  %% Line 923
		  <Int> when 'true' ->
		      let <_cor3> =
			  call 'erlang':'bsr'
			      (_cor1, 64)
		      in  apply 'count_bits_1'/2
			      (_cor3, 128)
		end
'count_bits_1'/2 =
    %% Line 922
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <0,Bits> when 'true' ->
	      _cor0
	  %% Line 923
	  <Int,Bits> when 'true' ->
	      let <_cor3> =
		  call 'erlang':'bsr'
		      (_cor1, 64)
	      in  let <_cor2> =
		      call 'erlang':'+'
			  (_cor0, 64)
		  in  apply 'count_bits_1'/2
			  (_cor3, _cor2)
	end
'expr_bin_1'/2 =
    %% Line 925
    fun (_cor1,_cor0) ->
	let <_cor8> =
	    %% Line 926
	    fun (_cor5,_cor4) ->
		case <_cor5,_cor4> of
		  <E,{Ces,Esp,St0}> when 'true' ->
		      let <_14385> =
			  %% Line 927
			  apply 'bitstr'/2
			      (_cor5, St0)
		      in  %% Line 927
			  case _14385 of
			    <{Ce,Ep,St1}> when 'true' ->
				let <_cor3> =
				    %% Line 928
				    call 'erlang':'++'
					(Ep, Esp)
				in  %% Line 928
				    {[Ce|Ces],_cor3,St1}
			    ( <_cor2> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_14385})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor7,_cor6> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor5,_cor4})
			  -| [{'function_name',{'-expr_bin_1/2-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 926
	    call 'lists':'foldr'
		(_cor8, %% Line 929
			{[],[],_cor0}, _cor1)
'bitstr'/2 =
    %% Line 931
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'bin_element',_cor11,E0,Size0,[Type|[{'unit',Unit}|Flags]]},St0> when 'true' ->
	      let <_9084> =
		  %% Line 932
		  apply 'safe'/2
		      (E0, _cor0)
	      in  %% Line 932
		  case _9084 of
		    <{E1,Eps,St1}> when 'true' ->
			let <_7828> =
			    %% Line 933
			    apply 'safe'/2
				(Size0, St1)
			in  %% Line 933
			    case _7828 of
			      <{Size1,Eps2,St2}> when 'true' ->
				  do  do  %% Line 934
					  case <Type,E1> of
					    %% Line 935
					    <_cor12,{'c_var',_cor13,_cor14}> when 'true' ->
						'ok'
					    %% Line 936
					    <'integer',{'c_literal',_cor15,I}>
						when call 'erlang':'is_integer'
						      (I) ->
						'ok'
					    %% Line 937
					    <'utf8',{'c_literal',_cor16,I}>
						when call 'erlang':'is_integer'
						      (I) ->
						'ok'
					    %% Line 938
					    <'utf16',{'c_literal',_cor17,I}>
						when call 'erlang':'is_integer'
						      (I) ->
						'ok'
					    %% Line 939
					    <'utf32',{'c_literal',_cor18,I}>
						when call 'erlang':'is_integer'
						      (I) ->
						'ok'
					    %% Line 940
					    <'float',{'c_literal',_cor19,V}>
						when call 'erlang':'is_number'
						      (V) ->
						'ok'
					    %% Line 941
					    <'binary',{'c_literal',_cor20,V}>
						when call 'erlang':'is_bitstring'
						      (V) ->
						'ok'
					    %% Line 942
					    <_cor21,_cor22> when 'true' ->
						%% Line 943
						call 'erlang':'throw'
						    ('bad_binary')
					  end
					  %% Line 945
					  case Size1 of
					    %% Line 946
					    <{'c_var',_cor23,_cor24}> when 'true' ->
						'ok'
					    %% Line 947
					    <{'c_literal',_cor25,Sz}>
						when let <_cor5> =
						      call 'erlang':'is_integer'
							  (Sz)
						  in  let <_cor6> =
							  call 'erlang':'>='
							      (Sz, 0)
						      in  call 'erlang':'and'
							      (_cor5, _cor6) ->
						'ok'
					    %% Line 948
					    <{'c_literal',_cor26,'undefined'}> when 'true' ->
						'ok'
					    %% Line 949
					    <{'c_literal',_cor27,'all'}> when 'true' ->
						'ok'
					    %% Line 950
					    <_cor28> when 'true' ->
						call 'erlang':'throw'
						    ('bad_binary')
					  end
				      let <_cor8> =
					  %% Line 956
					  call 'erlang':'++'
					      (Eps, Eps2)
				      in  %% Line 952
					  {{'c_bitstr',[],E1,Size1,%% Line 953
								   {'c_literal',[],Unit},%% Line 954
											 {'c_literal',[],Type},%% Line 955
													       {'c_literal',[],Flags}},_cor8,St2}
			      ( <_cor3> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_7828})
				-| ['compiler_generated'] )
			    end
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_9084})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'bitstr',2}}] )
	    -| ['compiler_generated'] )
	end
'fun_tq'/5 =
    %% Line 960
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Id = {_cor18,_cor19,Name},Cs0,L,St0,NameInfo> when 'true' ->
	      let <_cor5> =
		  %% Line 961
		  call 'erlang':'hd'
		      (_cor3)
	      in  case _cor5 of
		    <{'clause',_13484,H0,_9773,_1161}> when 'true' ->
			let <Arity> =
			    call 'erlang':'length'
				(H0)
			in  let <_14064> =
				%% Line 962
				apply 'clauses'/2
				    (_cor3, _cor1)
			    in  %% Line 962
				case _14064 of
				  <{Cs1,St1}> when 'true' ->
				      let <_11247> =
					  %% Line 1707
					  apply 'new_vars_1'/4
					      (Arity, [], St1, [])
				      in  %% Line 963
					  case _11247 of
					    <{Args,St2}> when 'true' ->
						let <_9698> =
						    %% Line 1707
						    apply 'new_vars_1'/4
							(Arity, [], St2, [])
						in  %% Line 964
						    case _9698 of
						      <{Ps,St3}> when 'true' ->
							  let <Anno> =
							      %% Line 965
							      apply 'lineno_anno'/2
								  (_cor2, St3)
							  in  let <_11858> = {Name,Arity}
							      in  let <FcAnno> =
								      %% Line 1716
								      [{'function_name',_11858}|Anno]
								  in  let <_788> =
									  %% Line 1718
									  call 'cerl':'ann_c_tuple'
									      (Anno, [{'c_literal',[],'function_clause'}|Ps])
								      in  let <Fc> =
									      %% Line 1721
									      {'iclause',{'a',[],[],['compiler_generated']},Ps,[],%% Line 1722
																  [],%% Line 1723
																     [{'iprimop',{'a',[],[],FcAnno},{'c_literal',[],'match_fail'},%% Line 1724
																								  [_788|[]]}|%% Line 1724
																									     []]}
									  in  let <Fun> =
										  %% Line 967
										  {'ifun',{'a',[],[],Anno},%% Line 968
													   [{'id',_cor4}|[]],Args,Cs1,Fc,_cor0}
									      in  %% Line 970
										  {Fun,[],St3}
						      ( <_cor9> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_9698})
							-| ['compiler_generated'] )
						    end
					    ( <_cor8> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_11247})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor7> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_14064})
				    -| ['compiler_generated'] )
				end
		    ( <_2454> when 'true' ->
			  primop 'match_fail'
			      ({'function_clause',_cor5})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor17,_cor16,_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'fun_tq',5}}] )
	    -| ['compiler_generated'] )
	end
'lc_tq'/5 =
    %% Line 975
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Line,E,[{'igen',GAnno,AccPat,AccGuard,SkipPat,Tail,TailPat,%% Line 977
								      {Pre,Arg}}|Qs],Mc,St0> when 'true' ->
	      let <_5215> =
		  %% Line 978
		  apply 'new_fun_name'/2
		      ([108|[99]], _cor0)
	      in  %% Line 978
		  case _5215 of
		    <{Name,St1}> when 'true' ->
			let <LA> =
			    %% Line 979
			    apply 'lineno_anno'/2
				(_cor4, St1)
			in  let <LAnno> =
				%% Line 980
				{'a',[],[],LA}
			    in  let <F> = {%% Line 981
				     'c_var',LA,%% Line 981
						{Name,1}}
				in  let <Nc> =
					%% Line 982
					{'iapply',GAnno,F,[Tail|[]]}
				    in  let <_12468> =
					    %% Line 1700
					    apply 'new_var_name'/1
						(St1)
					in  %% Line 1700
					    case _12468 of
					      <{New,St}> when 'true' ->
						  let <Var,St2> = <%% Line 1701
						       {'c_var',[],New},St>
						  in  let <_320> =
							  [Var|[]]
						      in  let <_14364> = {Name,1}
							  in  let <FcAnno> =
								  %% Line 1716
								  [{'function_name',_14364}|LA]
							      in  let <_7826> =
								      %% Line 1718
								      call 'cerl':'ann_c_tuple'
									  (LA, [{'c_literal',[],'function_clause'}|_320])
								  in  let <Fc> =
									  %% Line 1721
									  {'iclause',{'a',[],[],['compiler_generated']},_320,[],%% Line 1722
																[],%% Line 1723
																   [{'iprimop',{'a',[],[],FcAnno},{'c_literal',[],'match_fail'},%% Line 1724
																								[_7826|[]]}|%% Line 1724
																									    []]}
								      in  let <TailClause> =
									      {'iclause',LAnno,[TailPat|[]],[],[],[_cor1|[]]}
									  in  let <_cor14> =
										  case <AccPat,AccGuard> of
										    <_cor38,[]>
											when call 'erlang':'=:='
											      (AccPat,
											       SkipPat) ->
											[TailClause|[]]
										    <_fol111,_fol112> when 'true' ->
											[{'iclause',{'a',[],[],['compiler_generated'|LA]},[SkipPat|[]],[],[],[Nc|[]]}|[TailClause|[]]]
										  end
									      in  let <Cs,St4> =
										      case AccPat of
											<'nomatch'> when 'true' ->
											    <_cor14,St2>
											<_cor40> when 'true' ->
											    let <_10610> =
												apply 'lc_tq'/5
												    (_cor4, _cor3, Qs, Nc, St2)
											    in  case _10610 of
												  <{Lc,Lps,St3}> when 'true' ->
												      let <_cor17> =
													  call 'erlang':'++'
													      (Lps, [Lc|[]])
												      in  <[{'iclause',LAnno,[AccPat|[]],[],AccGuard,_cor17}|_cor14],St3>
												  ( <_cor16> when 'true' ->
													primop 'match_fail'
													    ({'badmatch',_10610})
												    -| ['compiler_generated'] )
												end
										      end
										  in  let <Fun> =
											  {'ifun',LAnno,[],[Var|[]],Cs,Fc,'unnamed'}
										      in  let <_rec10> =
											      ['list_comprehension'|LA]
											  in  case LAnno of
												<{'a',_cor41,_cor42,_cor43}> when 'true' ->
												    let <_cor26> =
													call 'erlang':'setelement'
													    (4, LAnno, _rec10)
												    in  let <_cor22> =
													    call 'erlang':'++'
														(Pre, [{'iapply',LAnno,F,[Arg|[]]}|[]])
													in  {{'iletrec',_cor26,[{{Name,1},Fun}|[]],_cor22},[],St4}
												( <_cor44> when 'true' ->
												      ( call ( 'erlang'
													       -| ['compiler_generated'] ):( 'error'
																	     -| ['compiler_generated'] )
													    (( {'badrecord','a'}
													       -| ['compiler_generated'] ))
													-| ['compiler_generated'] )
												  -| ['compiler_generated'] )
											      end
					      ( <_6748> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_12468})
						-| ['compiler_generated'] )
					    end
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_5215})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1011
	  <Line,E,[Filter = {'ifilter',_cor45,_cor46}|Qs],Mc,St> when 'true' ->
	      %% Line 1012
	      apply 'filter_tq'/7
		  (_cor4, _cor3, Filter, _cor1, _cor0, Qs, 'lc_tq'/5)
	  %% Line 1013
	  <Line,E0,[],Mc0,St0> when 'true' ->
	      let <_10899> =
		  %% Line 1014
		  apply 'safe'/2
		      (_cor3, _cor0)
	      in  %% Line 1014
		  case _10899 of
		    <{H1,Hps,St1}> when 'true' ->
			let <_13688> =
			    %% Line 1015
			    apply 'force_safe'/2
				(_cor1, St1)
			in  %% Line 1015
			    case _13688 of
			      <{T1,Tps,St}> when 'true' ->
				  let <Anno> =
				      %% Line 1016
				      apply 'lineno_anno'/2
					  (_cor4, St)
				  in  let <E> =
					  %% Line 1017
					  call 'cerl':'ann_c_cons'
					      (Anno, H1, T1)
				      in  let <_16116> =
					      %% Line 1018
					      ['compiler_generated'|Anno]
					  in  let <_cor32> =
						  %% Line 2320
						  call 'erlang':'setelement'
						      (2, E, _16116)
					      in  let <_cor31> =
						      %% Line 1018
						      call 'erlang':'++'
							  (Hps, Tps)
						  in  %% Line 1018
						      {_cor32,_cor31,St}
			      ( <_cor28> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_13688})
				-| ['compiler_generated'] )
			    end
		    ( <_cor27> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_10899})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor37,_cor36,_cor35,_cor34,_cor33> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'lc_tq',5}}] )
	    -| ['compiler_generated'] )
	end
'bc_tq'/5 =
    %% Line 1024
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_12468> =
	    %% Line 1700
	    apply 'new_var_name'/1
		(_cor0)
	in  %% Line 1700
	    case _12468 of
	      <{New,St}> when 'true' ->
		  let <BinVar,St1> = <%% Line 1701
		       {'c_var',[],New},St>
		  in  let <_7364> =
			  apply 'bc_initial_size'/3
			      (_cor3, _cor2, St1)
		      in  case _7364 of
			    <{Sz,SzPre,St2}> when 'true' ->
				let <_12365> =
				    apply 'preprocess_quals'/3
					(_cor4, _cor2, St2)
				in  case _12365 of
				      <{Qs,St3}> when 'true' ->
					  let <_8470> =
					      apply 'bc_tq1'/5
						  (_cor4, _cor3, Qs, BinVar, St3)
					  in  case _8470 of
						<{E,BcPre,St}> when 'true' ->
						    let <_cor9> =
							[{'iset',{'a',[],[],[]},BinVar,{'iprimop',{'a',[],[],[]},{'c_literal',[],'bs_init_writable'},[Sz|[]]}}|BcPre]
						    in  let <Pre> =
							    call 'erlang':'++'
								(SzPre, _cor9)
							in  {E,Pre,St}
						( <_cor8> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_8470})
						  -| ['compiler_generated'] )
					      end
				      ( <_cor7> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_12365})
					-| ['compiler_generated'] )
				    end
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_7364})
			      -| ['compiler_generated'] )
			  end
	      ( <_13509> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_12468})
		-| ['compiler_generated'] )
	    end
'bc_tq1'/5 =
    %% Line 1035
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Line,E,[{'igen',GAnno,AccPat,AccGuard,SkipPat,Tail,TailPat,%% Line 1037
								      {Pre,Arg}}|Qs],Mc,St0> when 'true' ->
	      let <_14800> =
		  %% Line 1038
		  apply 'new_fun_name'/2
		      ([108|[98|[99]]], _cor0)
	      in  %% Line 1038
		  case _14800 of
		    <{Name,St1}> when 'true' ->
			let <LA> =
			    %% Line 1039
			    apply 'lineno_anno'/2
				(_cor4, St1)
			in  let <LAnno> =
				%% Line 1040
				{'a',[],[],LA}
			    in  let <_8314> =
				    %% Line 1708
				    apply 'new_vars_1'/4
					(2, LA, St1, [])
				in  %% Line 1041
				    case _8314 of
				      <{Vars = [_cor42|[AccVar|[]]],St2}> when 'true' ->
					  let <F> = {%% Line 1042
					       'c_var',LA,%% Line 1042
							  {Name,2}}
					  in  let <Nc> =
						  %% Line 1043
						  {'iapply',GAnno,F,[Tail|[AccVar|[]]]}
					      in  let <_8408> = {Name,%% Line 1044
							    2}
						  in  let <FcAnno> =
							  %% Line 1716
							  [{'function_name',_8408}|LA]
						      in  let <_7102> =
							      %% Line 1718
							      call 'cerl':'ann_c_tuple'
								  (LA, [{'c_literal',[],'function_clause'}|Vars])
							  in  let <Fc> =
								  %% Line 1721
								  {'iclause',{'a',[],[],['compiler_generated']},Vars,[],%% Line 1722
															[],%% Line 1723
															   [{'iprimop',{'a',[],[],FcAnno},{'c_literal',[],'match_fail'},%% Line 1724
																							[_7102|[]]}|%% Line 1724
																								    []]}
							      in  let <TailClause> =
								      %% Line 1045
								      {'iclause',LAnno,[TailPat|[AccVar|[]]],[],[],%% Line 1046
														   [AccVar|[]]}
								  in  let <_cor14> =
									  %% Line 1047
									  case <AccPat,AccGuard> of
									    %% Line 1048
									    <_cor43,[]>
										when call 'erlang':'=:='
										      (AccPat,
										       SkipPat) ->
										%% Line 1051
										[TailClause|[]]
									    %% Line 1052
									    <_fol120,_fol121> when 'true' ->
										%% Line 1053
										[{'iclause',{'a',[],[],['compiler_generated'|LA]},%% Line 1054
																  [SkipPat|[AccVar|[]]],[],%% Line 1054
																			   [],%% Line 1054
																			      [Nc|[]]}|%% Line 1055
																				       [TailClause|[]]]
									  end
								      in  let <Cs,St4> =
									      %% Line 1057
									      case AccPat of
										%% Line 1058
										<'nomatch'> when 'true' ->
										    <_cor14,St2>
										%% Line 1062
										<_cor45> when 'true' ->
										    let <_9616> =
											%% Line 1063
											apply 'bc_tq1'/5
											    (_cor4, _cor3, Qs, AccVar, St2)
										    in  %% Line 1063
											case _9616 of
											  <{Bc,Bps,St3}> when 'true' ->
											      let <Body> =
												  %% Line 1064
												  call 'erlang':'++'
												      (Bps, [{'iset',{'a',[],[],[]},AccVar,Bc}|[Nc|[]]])
											      in  %% Line 1065
												  <[{'iclause',LAnno,%% Line 1066
														     [AccPat|[AccVar|[]]],[],AccGuard,Body}|_cor14],St3>
											  ( <_cor16> when 'true' ->
												primop 'match_fail'
												    ({'badmatch',_9616})
											    -| ['compiler_generated'] )
											end
									      end
									  in  let <Fun> =
										  %% Line 1070
										  {'ifun',LAnno,[],Vars,Cs,Fc,'unnamed'}
									      in  let <_rec12> =
										      %% Line 1071
										      ['list_comprehension'|LA]
										  in  %% Line 1071
										      case LAnno of
											<{'a',_cor46,_cor47,_cor48}> when 'true' ->
											    let <_cor26> =
												call 'erlang':'setelement'
												    (4, LAnno, _rec12)
											    in  let <_cor22> =
												    %% Line 1072
												    call 'erlang':'++'
													(Pre, [{'iapply',LAnno,F,[Arg|[_cor1|[]]]}|[]])
												in  {{'iletrec',_cor26,[{{Name,2},Fun}|[]],_cor22},%% Line 1073
																		   [],St4}
											( <_cor49> when 'true' ->
											      ( call ( 'erlang'
												       -| ['compiler_generated'] ):( 'error'
																     -| ['compiler_generated'] )
												    (( {'badrecord','a'}
												       -| ['compiler_generated'] ))
												-| ['compiler_generated'] )
											  -| ['compiler_generated'] )
										      end
				      ( <_cor8> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_8314})
					-| ['compiler_generated'] )
				    end
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_14800})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1074
	  <Line,E,[Filter = {'ifilter',_cor50,_cor51}|Qs],Mc,St> when 'true' ->
	      %% Line 1075
	      apply 'filter_tq'/7
		  (_cor4, _cor3, Filter, _cor1, _cor0, Qs, 'bc_tq1'/5)
	  %% Line 1076
	  <_cor52,{'bin',Bl,Elements},[],AccVar,St0> when 'true' ->
	      %% Line 1078
	      ( case _cor1 of
		  ( <( {'c_var',_cor53,_rec14}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_14193> =
			    apply 'expr'/2
				({'bin',Bl,[{'bin_element',Bl,{'var',Bl,_rec14},%% Line 1079
										{'atom',Bl,'all'},%% Line 1080
												  ['binary'|[{'unit',1}]]}|Elements]}, _cor0)
			in  case _14193 of
			      <{E,Pre,St}> when 'true' ->
				  let <_13790> =
				      %% Line 2316
				      call 'erlang':'element'
					  (2, E)
				  in  %% Line 1081
				      case _13790 of
					<Anno0 = {'a',_cor55,_cor56,A}> when 'true' ->
					    let <_rec15> =
						%% Line 1082
						['compiler_generated'|['single_use'|A]]
					    in  let <_cor34> =
						    %% Line 1082
						    call 'erlang':'setelement'
							(4, _13790, _rec15)
						in  let <_cor36> =
							%% Line 2320
							call 'erlang':'setelement'
							    (2, E, _cor34)
						    in  %% Line 1083
							{_cor36,Pre,St}
					( <_cor30> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_13790})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor29> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_14193})
				-| ['compiler_generated'] )
			    end
		    -| ['compiler_generated'] )
		  ( <_cor54> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','c_var'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor41,_cor40,_cor39,_cor38,_cor37> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'bc_tq1',5}}] )
	    -| ['compiler_generated'] )
	end
'filter_tq'/7 =
    %% Line 1090
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Line,E,{'ifilter',LAnno = {'a',_cor37,_cor38,LA},{Pre,Arg}},Mc,St0,Qs,TqFun> when 'true' ->
	      let <_1943> =
		  %% Line 1096
		  apply _cor0
		      (_cor6, _cor5, _cor1, _cor3, _cor2)
	      in  %% Line 1096
		  case _1943 of
		    <{Lc,Lps,St1}> when 'true' ->
			let <_12468> =
			    %% Line 1700
			    apply 'new_var_name'/1
				(St1)
			in  %% Line 1700
			    case _12468 of
			      <{New,St}> when 'true' ->
				  let <FailPat,St2> = <%% Line 1701
				       {'c_var',[],New},St>
				  in  let <_cor9> =
					  call 'cerl':'c_tuple'
					      ([{'c_literal',[],'case_clause'}|[FailPat|[]]])
				      in  let <Fc> =
					      apply 'fail_clause'/3
						  ([FailPat|[]], LA, _cor9)
					  in  let <_rec17> =
						  ['list_comprehension'|LA]
					      in  let <_cor19> =
						      call 'erlang':'setelement'
							  (4, LAnno, _rec17)
						  in  let <_cor11> =
							  call 'erlang':'++'
							      (Lps, [Lc|[]])
						      in  let <_rec19> =
							      ['compiler_generated'|LA]
							  in  let <_cor15> =
								  call 'erlang':'setelement'
								      (4, LAnno, _rec19)
							      in  {{'icase',_cor19,[Arg|[]],[{'iclause',LAnno,[{'c_literal',[],'true'}],[],[],_cor11}|[{'iclause',_cor15,[{'c_literal',[],'false'}],[],[],[_cor3|[]]}|[]]],Fc},Pre,St2}
			      ( <_14002> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_12468})
				-| ['compiler_generated'] )
			    end
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1943})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1109
	  <Line,E,{'ifilter',LAnno = {'a',_cor47,_cor48,LA},Guard},Mc,St0,Qs,TqFun>
	      when %% Line 1110
		call 'erlang':'is_list'
		    (Guard) ->
	      let <_9585> =
		  %% Line 1114
		  apply _cor0
		      (_cor6, _cor5, _cor1, _cor3, _cor2)
	      in  %% Line 1114
		  case _9585 of
		    <{Lc,Lps,St1}> when 'true' ->
			let <_rec21> =
			    %% Line 1115
			    ['list_comprehension'|LA]
			in  let <_cor29> =
				%% Line 1115
				call 'erlang':'setelement'
				    (4, LAnno, _rec21)
			    in  let <_cor25> =
				    %% Line 1116
				    call 'erlang':'++'
					(Lps, [Lc|[]])
				in  let <_rec23> =
					%% Line 1117
					['compiler_generated'|LA]
				    in  let <_cor24> =
					    %% Line 1117
					    call 'erlang':'setelement'
						(4, LAnno, _rec23)
					in  %% Line 1115
					    {{'icase',_cor29,[],%% Line 1116
								[{'iclause',LAnno,[],[],Guard,_cor25}|[]],%% Line 1117
													  {'iclause',_cor24,%% Line 1118
															    [],[],%% Line 1118
																  [],%% Line 1118
																     [_cor3|[]]}},%% Line 1119
																		  [],St1}
		    ( <_cor20> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_9585})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor36,_cor35,_cor34,_cor33,_cor32,_cor31,_cor30> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'filter_tq',7}}] )
	    -| ['compiler_generated'] )
	end
'preprocess_quals'/3 =
    %% Line 1127
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1128
	apply 'preprocess_quals'/4
	    (_cor2, _cor1, _cor0, [])
'preprocess_quals'/4 =
    %% Line 1130
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Line,[Q|Qs0],St0,Acc> when 'true' ->
	      let <_10918> =
		  %% Line 1158
		  case Q of
		    <{'generate',_5190,_11834,_cor4}> when 'true' ->
			'true'
		    %% Line 1159
		    <{'b_generate',_cor5,_cor6,_cor7}> when 'true' ->
			'true'
		    %% Line 1160
		    <_cor8> when 'true' ->
			'false'
		  end
	      in  %% Line 1131
		  case _10918 of
		    %% Line 1132
		    <'true'> when 'true' ->
			let <_11839> =
			    %% Line 1133
			    call 'lists':'splitwith'
				('is_guard_test'/1, Qs0)
			in  %% Line 1133
			    case _11839 of
			      <{Gs,Qs}> when 'true' ->
				  let <_1395> =
				      %% Line 1134
				      apply 'generator'/4
					  (_cor3, Q, Gs, _cor1)
				  in  %% Line 1134
				      case _1395 of
					<{Gen,St}> when 'true' ->
					    %% Line 1135
					    apply 'preprocess_quals'/4
						(_cor3, Qs, St, [Gen|_cor0])
					( <_cor5> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_1395})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_11839})
				-| ['compiler_generated'] )
			    end
		    %% Line 1136
		    <'false'> when 'true' ->
			let <_cor6> =
			    %% Line 2316
			    call 'erlang':'element'
				(2, Q)
			in  let <_cor7> =
				%% Line 1137
				apply 'lineno_anno'/2
				    (_cor6, _cor1)
			    in  let <LAnno> =
				    %% Line 1137
				    {'a',[],[],_cor7}
				in  let <_579> =
					%% Line 1458
					call 'erl_lint':'is_guard_test'
					    (Q)
				    in  %% Line 1138
					case _579 of
					  %% Line 1139
					  <'true'> when 'true' ->
					      let <_1171> =
						  %% Line 1143
						  call 'lists':'splitwith'
						      ('is_guard_test'/1, Qs0)
					      in  %% Line 1143
						  case _1171 of
						    <{Gs,Qs}> when 'true' ->
							let <_12782> =
							    %% Line 1144
							    apply 'lc_guard_tests'/2
								([Q|Gs], _cor1)
							in  %% Line 1144
							    case _12782 of
							      <{Cg,St}> when 'true' ->
								  let <Filter> = {%% Line 1145
								       'ifilter',LAnno,Cg}
								  in  %% Line 1146
								      apply 'preprocess_quals'/4
									  (_cor3, Qs, St, [Filter|_cor0])
							      ( <_cor10> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_12782})
								-| ['compiler_generated'] )
							    end
						    ( <_cor9> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_1171})
						      -| ['compiler_generated'] )
						  end
					  %% Line 1147
					  <'false'> when 'true' ->
					      let <_8382> =
						  %% Line 1150
						  apply 'novars'/2
						      (Q, _cor1)
					      in  %% Line 1150
						  case _8382 of
						    <{Ce,Pre,St}> when 'true' ->
							let <Filter> = {%% Line 1151
							     'ifilter',LAnno,%% Line 1151
									     {Pre,Ce}}
							in  %% Line 1152
							    apply 'preprocess_quals'/4
								(_cor3, Qs0, St, [Filter|_cor0])
						    ( <_cor12> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_8382})
						      -| ['compiler_generated'] )
						  end
					  ( <_cor14> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_579})
					    -| ['compiler_generated'] )
					end
		    ( <_cor15> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_10918})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1155
	  <_cor21,[],St,Acc> when 'true' ->
	      let <_cor16> =
		  %% Line 1156
		  call 'lists':'reverse'
		      (_cor0)
	      in  %% Line 1156
		  {_cor16,_cor1}
	  ( <_cor20,_cor19,_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'preprocess_quals',4}}] )
	    -| ['compiler_generated'] )
	end
'generator'/4 =
    %% Line 1181
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Line,{'generate',Lg,P0,E},Gs,St0> when 'true' ->
	      let <LA> =
		  %% Line 1182
		  apply 'lineno_anno'/2
		      (_cor3, _cor0)
	      in  let <GA> =
		      %% Line 1183
		      apply 'lineno_anno'/2
			  (Lg, _cor0)
		  in  let <_3720> =
			  %% Line 1184
			  apply 'list_gen_pattern'/3
			      (P0, _cor3, _cor0)
		      in  %% Line 1184
			  case _3720 of
			    <{Head,St1}> when 'true' ->
				let <_379> =
				    %% Line 1707
				    apply 'new_vars_1'/4
					(2, [], St1, [])
				in  %% Line 1185
				    case _379 of
				      <{[Tail|[Skip|[]]],St2}> when 'true' ->
					  let <_1260> =
					      %% Line 1186
					      apply 'lc_guard_tests'/2
						  (_cor1, St2)
					  in  %% Line 1186
					      case _1260 of
						<{Cg,St3}> when 'true' ->
						    let <AccPat,SkipPat> =
							%% Line 1187
							case Head of
							  %% Line 1188
							  <{'c_var',_cor38,_cor39}> when 'true' ->
							      let <Cons> =
								  %% Line 1193
								  call 'cerl':'ann_c_cons'
								      (LA, Head, Tail)
							      in  %% Line 1194
								  <Cons,Cons>
							  %% Line 1195
							  <'nomatch'> when 'true' ->
							      let <_cor10> =
								  %% Line 1198
								  call 'cerl':'ann_c_cons'
								      (LA, Skip, Tail)
							      in  %% Line 1198
								  <'nomatch',_cor10>
							  %% Line 1199
							  <_cor40> when 'true' ->
							      let <_cor12> =
								  %% Line 1200
								  call 'cerl':'ann_c_cons'
								      (LA, Head, Tail)
							      in  let <_cor11> =
								      %% Line 1201
								      call 'cerl':'ann_c_cons'
									  (LA, Skip, Tail)
								  in  <_cor12,_cor11>
							end
						    in  let <_8808> =
							    %% Line 1203
							    apply 'safe'/2
								(E, St3)
							in  %% Line 1203
							    case _8808 of
							      <{Ce,Pre,St4}> when 'true' ->
								  let <Gen> =
								      %% Line 1204
								      {'igen',{'a',[],[],GA},AccPat,Cg,SkipPat,Tail,%% Line 1205
														    {'c_literal',LA,[]},%% Line 1205
																	{Pre,Ce}}
								  in  %% Line 1206
								      {Gen,St4}
							      ( <_cor16> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_8808})
								-| ['compiler_generated'] )
							    end
						( <_cor8> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_1260})
						  -| ['compiler_generated'] )
					      end
				      ( <_cor7> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_379})
					-| ['compiler_generated'] )
				    end
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_3720})
			      -| ['compiler_generated'] )
			  end
	  %% Line 1207
	  <Line,{'b_generate',Lg,P,E},Gs,St0> when 'true' ->
	      let <LA> =
		  %% Line 1208
		  apply 'lineno_anno'/2
		      (_cor3, _cor0)
	      in  let <GA> =
		      %% Line 1209
		      apply 'lineno_anno'/2
			  (Lg, _cor0)
		  in  let <_9800> =
			  %% Line 1210
			  apply 'pattern'/2
			      (P, _cor0)
		      in  %% Line 1210
			  case _9800 of
			    <Cp = {'c_binary',_cor41,Segs}> when 'true' ->
				let <_157> =
				    %% Line 1213
				    apply 'append_tail_segment'/2
					(Segs, _cor0)
				in  %% Line 1213
				    case _157 of
				      <{AccSegs,Tail,TailSeg,St1}> when 'true' ->
					  let <_cor24> =
					      %% Line 1214
					      call 'erlang':'setelement'
						  (3, _9800, AccSegs)
					  in  let <_51> =
						  %% Line 1215
						  apply 'lc_guard_tests'/2
						      (_cor1, St1)
					      in  %% Line 1215
						  case _51 of
						    <{Cg,St2}> when 'true' ->
							let <_8743> =
							    %% Line 1233
							    apply 'emasculate_segments'/3
								(AccSegs, St2, [])
							in  %% Line 1216
							    case _8743 of
							      <{SkipSegs,St3}> when 'true' ->
								  let <_cor30> =
								      %% Line 1217
								      call 'erlang':'setelement'
									  (3, _9800, SkipSegs)
								  in  let <_5385> =
									  %% Line 1218
									  apply 'safe'/2
									      (E, St3)
								      in  %% Line 1218
									  case _5385 of
									    <{Ce,Pre,St4}> when 'true' ->
										let <Gen> =
										    %% Line 1219
										    {'igen',{'a',[],[],GA},_cor24,Cg,_cor30,Tail,%% Line 1220
																 {'c_binary',LA,[TailSeg|[]]},%% Line 1221
																			      {Pre,Ce}}
										in  %% Line 1222
										    {Gen,St4}
									    ( <_cor32> when 'true' ->
										  primop 'match_fail'
										      ({'badmatch',_5385})
									      -| ['compiler_generated'] )
									  end
							      ( <_cor27> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_8743})
								-| ['compiler_generated'] )
							    end
						    ( <_cor26> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_51})
						      -| ['compiler_generated'] )
						  end
				      ( <_cor21> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_157})
					-| ['compiler_generated'] )
				    end
			    ( <_cor20> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_9800})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor37,_cor36,_cor35,_cor34> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'generator',4}}] )
	    -| ['compiler_generated'] )
	end
'append_tail_segment'/2 =
    %% Line 1224
    fun (_cor1,_cor0) ->
	let <_12468> =
	    %% Line 1700
	    apply 'new_var_name'/1
		(_cor0)
	in  %% Line 1700
	    case _12468 of
	      <{New,St}> when 'true' ->
		  let <Var,St> = <%% Line 1701
		       {'c_var',[],New},St>
		  in  let <Tail> =
			  {'c_bitstr',[],Var,{'c_literal',[],'all'},{'c_literal',[],1},{'c_literal',[],'binary'},{'c_literal',[],['unsigned'|['big']]}}
		      in  let <_cor4> =
			      call 'erlang':'++'
				  (_cor1, [Tail|[]])
			  in  {_cor4,Var,Tail,St}
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_12468})
		-| ['compiler_generated'] )
	    end
'emasculate_segments'/3 =
    %% Line 1235
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[B = {'c_bitstr',_cor11,{'c_var',_cor12,_cor13},_cor14,_cor15,_cor16,_cor17}|Rest],St,Acc> when 'true' ->
	      %% Line 1236
	      apply 'emasculate_segments'/3
		  (Rest, _cor1, [B|_cor0])
	  %% Line 1237
	  <[B|Rest],St0,Acc> when 'true' ->
	      let <_12468> =
		  %% Line 1700
		  apply 'new_var_name'/1
		      (_cor1)
	      in  %% Line 1700
		  case _12468 of
		    <{New,St}> when 'true' ->
			let <Var,St1> = <%% Line 1701
			     {'c_var',[],New},St>
			in  case B of
			      <{'c_bitstr',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23}> when 'true' ->
				  let <_cor6> =
				      call 'erlang':'setelement'
					  (3, B, Var)
				  in  apply 'emasculate_segments'/3
					  (Rest, St1, [_cor6|_cor0])
			      ( <_cor24> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','c_bitstr'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
		    ( <_2582> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12468})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1240
	  <[],St,Acc> when 'true' ->
	      let <_cor7> =
		  %% Line 1241
		  call 'lists':'reverse'
		      (_cor0)
	      in  %% Line 1241
		  {_cor7,_cor1}
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'emasculate_segments',3}}] )
	    -| ['compiler_generated'] )
	end
'lc_guard_tests'/2 =
    %% Line 1243
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],St> when 'true' ->
	      {[],_cor0}
	  %% Line 1244
	  <Gs0,St0> when 'true' ->
	      let <Gs1> =
		  %% Line 1245
		  apply 'guard_tests'/1
		      (_cor1)
	      in  %% Line 1246
		  case _cor0 of
		    <{'core',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18}> when 'true' ->
			let <_cor5> =
			    call 'erlang':'setelement'
				(4, _cor0, 'true')
			in  let <_8576> =
				apply 'gexpr_top'/2
				    (Gs1, _cor5)
			    in  case _8576 of
				  <{Gs,St}> when 'true' ->
				      %% Line 1247
				      case St of
					<{'core',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26}> when 'true' ->
					    let <_cor9> =
						call 'erlang':'setelement'
						    (4, St, 'false')
					    in  {Gs,_cor9}
					( <_cor27> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','core'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				  ( <_cor6> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_8576})
				    -| ['compiler_generated'] )
				end
		    ( <_cor19> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','core'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	end
'list_gen_pattern'/3 =
    %% Line 1249
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1250
	try
	    let <_cor3> =
		%% Line 1251
		apply 'pattern'/2
		    (_cor2, _cor0)
	    in  %% Line 1251
		{_cor3,_cor0}
	of <_cor4> ->
	    _cor4
	catch <_cor7,_cor6,_cor5> ->
	    case <_cor7,_cor6,_cor5> of
	      %% Line 1253
	      <'throw','nomatch',_cor12> when 'true' ->
		  let <_cor8> =
		      apply 'add_warning'/3
			  (_cor1, 'nomatch', _cor0)
		  in  {'nomatch',_cor8}
	      ( <_5257,_692,_11913> when 'true' ->
		    primop 'raise'
			(_cor5, _cor6)
		-| ['compiler_generated'] )
	    end
'bc_initial_size'/3 =
    %% Line 1261
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1262
	try
	    let <_5334> =
		%% Line 1263
		apply 'bc_elem_size'/2
		    (_cor2, _cor0)
	    in  %% Line 1263
		case _5334 of
		  <{ElemSzExpr,ElemSzPre,EVs,St1}> when 'true' ->
		      let <_12468> =
			  %% Line 1700
			  apply 'new_var_name'/1
			      (St1)
		      in  %% Line 1700
			  case _12468 of
			    <{New,St}> when 'true' ->
				let <V,St2> = <%% Line 1701
				     {'c_var',[],New},St>
				in  let <_14945> =
					apply 'bc_gen_size'/3
					    (_cor1, EVs, St2)
				    in  case _14945 of
					  <{GenSzExpr,GenSzPre,St3}> when 'true' ->
					      case ElemSzExpr of
						<{'c_literal',_cor30,ElemSz}>
						    when try
							  let <_cor6> =
							      call 'erlang':'rem'
								  (ElemSz, 8)
							  in  call 'erlang':'=:='
								  (_cor6, 0)
						      of <Try> ->
							  Try
						      catch <T,R> ->
							  'false' ->
						    let <_cor7> =
							call 'erlang':'div'
							    (ElemSz, 8)
						    in  let <NumBytesExpr> = {'c_literal',[],_cor7}
							in  let <_cor9> =
								apply 'bc_mul'/2
								    (GenSzExpr, NumBytesExpr)
							    in  let <BytesExpr> =
								    [{'iset',{'a',[],[],[]},V,_cor9}|[]]
								in  let <_cor11> =
									call 'erlang':'++'
									    (GenSzPre, BytesExpr)
								    in  let <_cor12> =
									    call 'erlang':'++'
										(ElemSzPre, _cor11)
									in  {V,_cor12,St3}
						<_cor31> when 'true' ->
						    let <_12477> =
							%% Line 1707
							apply 'new_vars_1'/4
							    (2, [], St3, [])
						    in  case _12477 of
							  <{[BitsV|[PlusSevenV|[]]],St}> when 'true' ->
							      let <_cor14> =
								  apply 'bc_mul'/2
								      (GenSzExpr, ElemSzExpr)
							      in  let <BitsExpr> =
								      {'iset',{'a',[],[],[]},BitsV,_cor14}
								  in  let <_cor16> =
									  apply 'bc_add'/2
									      (BitsV, {'c_literal',[],7})
								      in  let <PlusSevenExpr> =
									      {'iset',{'a',[],[],[]},PlusSevenV,_cor16}
									  in  let <_cor18> =
										  {'icall',{'a',[],[],[]},{'c_literal',[],'erlang'},{'c_literal',[],'bsr'},[PlusSevenV|[{'c_literal',[],3}]]}
									      in  let <Expr> =
										      {'iset',{'a',[],[],[]},V,_cor18}
										  in  let <_cor20> =
											  call 'erlang':'++'
											      (GenSzPre, [BitsExpr|[PlusSevenExpr|[Expr|[]]]])
										      in  let <_cor21> =
											      call 'erlang':'++'
												  (ElemSzPre, _cor20)
											  in  {V,_cor21,St}
							  ( <_cor13> when 'true' ->
								primop 'match_fail'
								    ({'badmatch',_12477})
							    -| ['compiler_generated'] )
							end
					      end
					  ( <_cor5> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_14945})
					    -| ['compiler_generated'] )
					end
			    ( <_9105> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_12468})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_5334})
		    -| ['compiler_generated'] )
		end
	of <_cor23> ->
	    _cor23
	catch <_cor26,_cor25,_cor24> ->
	    case <_cor26,_cor25,_cor24> of
	      %% Line 1283
	      <'throw','impossible',_cor32> when 'true' ->
		  %% Line 1284
		  {{'c_literal',[],256},[],_cor0}
	      ( <_8429,_7963,_6735> when 'true' ->
		    primop 'raise'
			(_cor24, _cor25)
		-| ['compiler_generated'] )
	    end
'bc_elem_size'/2 =
    %% Line 1287
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'bin',_cor14,El},St0> when 'true' ->
	      let <_9505> =
		  %% Line 1288
		  apply 'bc_elem_size_1'/3
		      (El, 0, [])
	      in  %% Line 1288
		  case _9505 of
		    %% Line 1289
		    <{Bits,[]}> when 'true' ->
			%% Line 1290
			{{'c_literal',[],Bits},[],[],_cor0}
		    %% Line 1291
		    <{Bits,Vars0}> when 'true' ->
			let <_3958> =
			    %% Line 1292
			    call 'lists':'sort'
				(Vars0)
			in  %% Line 1292
			    case _3958 of
			      <[{U,V0}|Pairs]> when 'true' ->
				  let <F> =
				      %% Line 1293
				      apply 'bc_elem_size_combine'/4
					  (Pairs, U, [V0|[]], [])
				  in  let <_cor8> =
					  %% Line 1294
					  ( letrec
						'lc$^0'/1 =
						    fun (_cor6) ->
							case _cor6 of
							  <[{_cor15,{'c_var',_cor16,V}}|_cor5]> when 'true' ->
							      let <_cor7> =
								  apply 'lc$^0'/1
								      (_cor5)
							      in  ( [V|_cor7]
								    -| ['compiler_generated'] )
							  ( <[_cor4|_cor5]> when 'true' ->
								apply 'lc$^0'/1
								    (_cor5)
							    -| ['compiler_generated'] )
							  <[]> when 'true' ->
							      []
							  ( <_16093> when 'true' ->
								( primop 'match_fail'
								      ({'function_clause',_cor6})
								  -| [{'function_name',{'lc$^0',1}}] )
							    -| ['compiler_generated'] )
							end
					    in  apply 'lc$^0'/1
						    (Vars0)
					    -| ['list_comprehension'] )
				      in  let <_1407> =
					      %% Line 1295
					      apply 'bc_mul_pairs'/4
						  (F, {'c_literal',[],Bits}, [], _cor0)
					  in  %% Line 1295
					      case _1407 of
						<{E,Pre,St}> when 'true' ->
						    %% Line 1296
						    {E,Pre,_cor8,St}
						( <_cor10> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_1407})
						  -| ['compiler_generated'] )
					      end
			      ( <_cor2> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_3958})
				-| ['compiler_generated'] )
			    end
		    ( <_cor11> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_9505})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'bc_elem_size',2}}] )
	    -| ['compiler_generated'] )
	end
'bc_elem_size_1'/3 =
    %% Line 1299
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{'bin_element',_cor10,_cor11,{'integer',_cor12,N},Flags}|Es],Bits,Vars> when 'true' ->
	      let <_1486> =
		  %% Line 1300
		  call 'lists':'keyfind'
		      ('unit', 1, Flags)
	      in  %% Line 1300
		  case _1486 of
		    <{'unit',U}> when 'true' ->
			let <_cor4> =
			    %% Line 1301
			    call 'erlang':'*'
				(U, N)
			in  let <_cor5> =
				%% Line 1301
				call 'erlang':'+'
				    (_cor1, _cor4)
			    in  %% Line 1301
				apply 'bc_elem_size_1'/3
				    (Es, _cor5, _cor0)
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1486})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1302
	  <[{'bin_element',_cor13,_cor14,{'var',_cor15,Var},Flags}|Es],Bits,Vars> when 'true' ->
	      let <_2723> =
		  %% Line 1303
		  call 'lists':'keyfind'
		      ('unit', 1, Flags)
	      in  %% Line 1303
		  case _2723 of
		    <{'unit',U}> when 'true' ->
			%% Line 1304
			apply 'bc_elem_size_1'/3
			    (Es, _cor1, [{U,{'c_var',[],Var}}|_cor0])
		    ( <_cor6> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_2723})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1305
	  <[_cor16|_cor17],_cor18,_cor19> when 'true' ->
	      %% Line 1306
	      call 'erlang':'throw'
		  ('impossible')
	  %% Line 1307
	  <[],Bits,Vars> when 'true' ->
	      %% Line 1308
	      {_cor1,_cor0}
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'bc_elem_size_1',3}}] )
	    -| ['compiler_generated'] )
	end
'bc_elem_size_combine'/4 =
    %% Line 1310
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{U,V}|T],_cor8,UVars,Acc>
	      when call 'erlang':'=:='
		    (_cor2,
		     U) ->
	      %% Line 1311
	      apply 'bc_elem_size_combine'/4
		  (T, U, [V|_cor1], _cor0)
	  %% Line 1312
	  <[{U,V}|T],OldU,UVars,Acc> when 'true' ->
	      %% Line 1313
	      apply 'bc_elem_size_combine'/4
		  (T, U, [V|[]], [{_cor2,_cor1}|_cor0])
	  %% Line 1314
	  <[],U,Uvars,Acc> when 'true' ->
	      %% Line 1315
	      [{_cor2,_cor1}|_cor0]
	  ( <_cor7,_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'bc_elem_size_combine',4}}] )
	    -| ['compiler_generated'] )
	end
'bc_mul_pairs'/4 =
    %% Line 1317
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{U,L0}|T],E0,Pre,St0> when 'true' ->
	      let <_9263> =
		  %% Line 1318
		  apply 'bc_add_list'/2
		      (L0, _cor0)
	      in  %% Line 1318
		  case _9263 of
		    <{AddExpr,AddPre,St1}> when 'true' ->
			let <_1299> =
			    %% Line 1707
			    apply 'new_vars_1'/4
				(2, [], St1, [])
			in  %% Line 1319
			    case _1299 of
			      <{[V1|[V2|[]]],St}> when 'true' ->
				  let <_cor6> =
				      %% Line 1320
				      apply 'bc_mul'/2
					  (AddExpr, {'c_literal',[],U})
				  in  let <Set1> =
					  %% Line 1320
					  {'iset',{'a',[],[],[]},V1,_cor6}
				      in  let <_cor8> =
					      %% Line 1321
					      apply 'bc_add'/2
						  (V1, _cor2)
					  in  let <Set2> =
						  %% Line 1321
						  {'iset',{'a',[],[],[]},V2,_cor8}
					      in  let <_cor10> =
						      %% Line 1322
						      call 'lists':'reverse'
							  (AddPre, _cor1)
						  in  %% Line 1322
						      apply 'bc_mul_pairs'/4
							  (T, V2, [Set2|[Set1|_cor10]], St)
			      ( <_cor5> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_1299})
				-| ['compiler_generated'] )
			    end
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_9263})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1323
	  <[],E,Pre,St> when 'true' ->
	      let <_cor11> =
		  %% Line 1324
		  call 'lists':'reverse'
		      (_cor1)
	      in  %% Line 1324
		  {_cor2,_cor11,_cor0}
	  ( <_cor15,_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'bc_mul_pairs',4}}] )
	    -| ['compiler_generated'] )
	end
'bc_add_list'/2 =
    %% Line 1326
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[V|[]],St> when 'true' ->
	      %% Line 1327
	      {V,[],_cor0}
	  %% Line 1328
	  <[H|T],St> when 'true' ->
	      %% Line 1329
	      apply 'bc_add_list_1'/4
		  (T, [], H, _cor0)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'bc_add_list',2}}] )
	    -| ['compiler_generated'] )
	end
'bc_add_list_1'/4 =
    %% Line 1331
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[H|T],Pre,E,St0> when 'true' ->
	      let <_12468> =
		  %% Line 1700
		  apply 'new_var_name'/1
		      (_cor0)
	      in  %% Line 1700
		  case _12468 of
		    <{New,St}> when 'true' ->
			let <Var,St> = <%% Line 1701
			     {'c_var',[],New},St>
			in  let <_cor5> =
				apply 'bc_add'/2
				    (H, _cor1)
			    in  let <Set> =
				    {'iset',{'a',[],[],[]},Var,_cor5}
				in  apply 'bc_add_list_1'/4
					(T, [Set|_cor2], Var, St)
		    ( <_3303> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12468})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1335
	  <[],Pre,E,St> when 'true' ->
	      let <_cor7> =
		  %% Line 1336
		  call 'lists':'reverse'
		      (_cor2)
	      in  %% Line 1336
		  {_cor1,_cor7,_cor0}
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'bc_add_list_1',4}}] )
	    -| ['compiler_generated'] )
	end
'bc_gen_size'/3 =
    %% Line 1338
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1339
	apply 'bc_gen_size_1'/5
	    (_cor2, _cor1, {'c_literal',[],1}, [], _cor0)
'bc_gen_size_1'/5 =
    %% Line 1341
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[{'generate',L,El,Gen}|Qs],EVs,E0,Pre0,St0> when 'true' ->
	      do  %% Line 1342
		  apply 'bc_verify_non_filtering'/2
		      (El, _cor3)
		  %% Line 1343
		  case Gen of
		    %% Line 1344
		    <{'var',_cor26,ListVar}> when 'true' ->
			let <Lanno> =
			    %% Line 1345
			    apply 'lineno_anno'/2
				(L, _cor0)
			in  let <_12468> =
				%% Line 1700
				apply 'new_var_name'/1
				    (_cor0)
			    in  %% Line 1700
				case _12468 of
				  <{New,St}> when 'true' ->
				      let <LenVar,St1> = <%% Line 1701
					   {'c_var',[],New},St>
				      in  let <Set> =
					      {'iset',{'a',[],[],[]},LenVar,{'icall',{'a',[],[],Lanno},{'c_literal',[],'erlang'},{'c_literal',[],'length'},[{'c_var',[],ListVar}|[]]}}
					  in  let <_2928> =
						  apply 'bc_gen_size_mul'/4
						      (_cor2, LenVar, [Set|_cor1], St1)
					      in  case _2928 of
						    <{E,Pre,St}> when 'true' ->
							apply 'bc_gen_size_1'/5
							    (Qs, _cor3, E, Pre, St)
						    ( <_cor8> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_2928})
						      -| ['compiler_generated'] )
						  end
				  ( <_4498> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_12468})
				    -| ['compiler_generated'] )
				end
		    %% Line 1354
		    <_cor27> when 'true' ->
			let <Len> =
			    %% Line 1356
			    apply 'bc_list_length'/2
				(Gen, 0)
			in  let <_9222> =
				%% Line 1357
				apply 'bc_gen_size_mul'/4
				    (_cor2, {'c_literal',[],Len}, _cor1, _cor0)
			    in  %% Line 1357
				case _9222 of
				  <{E,Pre,St}> when 'true' ->
				      %% Line 1358
				      apply 'bc_gen_size_1'/5
					  (Qs, _cor3, E, Pre, St)
				  ( <_cor10> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_9222})
				    -| ['compiler_generated'] )
				end
		  end
	  %% Line 1360
	  <[{'b_generate',_cor28,El,Gen}|Qs],EVs,E0,Pre0,St0> when 'true' ->
	      do  %% Line 1361
		  apply 'bc_verify_non_filtering'/2
		      (El, _cor3)
		  let <_15863> =
		      %% Line 1362
		      apply 'bc_elem_size'/2
			  (El, _cor0)
		  in  %% Line 1362
		      case _15863 of
			<{MatchSzExpr,Pre1,_cor29,St1}> when 'true' ->
			    let <Pre2> =
				%% Line 1363
				call 'lists':'reverse'
				    (Pre1, _cor1)
			    in  let <_12468> =
				    %% Line 1700
				    apply 'new_var_name'/1
					(St1)
				in  %% Line 1700
				    case _12468 of
				      <{New,St}> when 'true' ->
					  let <ResVar,St2> = <%% Line 1701
					       {'c_var',[],New},St>
					  in  let <_14037> =
						  apply 'bc_gen_bit_size'/3
						      (Gen, Pre2, St2)
					      in  case _14037 of
						    <{BitSizeExpr,Pre3,St3}> when 'true' ->
							let <_cor16> =
							    {'icall',{'a',[],[],[]},{'c_literal',[],'erlang'},{'c_literal',[],'div'},[BitSizeExpr|[MatchSzExpr|[]]]}
							in  let <Div> =
								{'iset',{'a',[],[],[]},ResVar,_cor16}
							    in  let <Pre4> =
								    [Div|Pre3]
								in  let <_14727> =
									apply 'bc_gen_size_mul'/4
									    (_cor2, ResVar, Pre4, St3)
								    in  case _14727 of
									  <{E,Pre,St}> when 'true' ->
									      apply 'bc_gen_size_1'/5
										  (Qs, _cor3, E, Pre, St)
									  ( <_cor19> when 'true' ->
										primop 'match_fail'
										    ({'badmatch',_14727})
									    -| ['compiler_generated'] )
									end
						    ( <_cor15> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_14037})
						      -| ['compiler_generated'] )
						  end
				      ( <_5850> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_12468})
					-| ['compiler_generated'] )
				    end
			( <_cor12> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_15863})
			  -| ['compiler_generated'] )
		      end
	  %% Line 1371
	  <[],_cor30,E,Pre,St> when 'true' ->
	      let <_cor20> =
		  %% Line 1372
		  call 'lists':'reverse'
		      (_cor1)
	      in  %% Line 1372
		  {_cor2,_cor20,_cor0}
	  %% Line 1373
	  <_cor31,_cor32,_cor33,_cor34,_cor35> when 'true' ->
	      %% Line 1374
	      call 'erlang':'throw'
		  ('impossible')
	end
'bc_gen_bit_size'/3 =
    %% Line 1376
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'var',L,V},Pre0,St0> when 'true' ->
	      let <Lanno> =
		  %% Line 1377
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  let <_12468> =
		      %% Line 1700
		      apply 'new_var_name'/1
			  (_cor0)
		  in  %% Line 1700
		      case _12468 of
			<{New,St}> when 'true' ->
			    let <SzVar,St> = <%% Line 1701
				 {'c_var',[],New},St>
			    in  let <Pre> =
				    [{'iset',{'a',[],[],[]},SzVar,{'icall',{'a',[],[],Lanno},{'c_literal',[],'erlang'},{'c_literal',[],'bit_size'},[{'c_var',[],V}|[]]}}|_cor1]
				in  {SzVar,Pre,St}
			( <_4590> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_12468})
			  -| ['compiler_generated'] )
		      end
	  %% Line 1385
	  <Bin = {'bin',_cor10,_cor11},Pre,St> when 'true' ->
	      %% Line 1415
	      case _cor2 of
		<{'bin',_14477,Els}> when 'true' ->
		    let <_cor6> =
			%% Line 1416
			apply 'bc_bin_size_1'/2
			    (Els, 0)
		    in  {{'c_literal',[],_cor6},_cor1,_cor0}
		( <_1470> when 'true' ->
		      primop 'match_fail'
			  ({'function_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1387
	  <_cor12,_cor13,_cor14> when 'true' ->
	      %% Line 1388
	      call 'erlang':'throw'
		  ('impossible')
	end
'bc_verify_non_filtering'/2 =
    %% Line 1390
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'bin',_cor9,Els},EVs> when 'true' ->
	      let <_cor5> =
		  %% Line 1391
		  fun (_cor3) ->
		      case _cor3 of
			<{'bin_element',_cor10,{'var',_cor11,V},_cor12,_cor13}> when 'true' ->
			    let <_4394> =
				%% Line 1392
				call 'lists':'member'
				    (V, _cor0)
			    in  %% Line 1392
				case _4394 of
				  %% Line 1393
				  <'true'> when 'true' ->
				      call 'erlang':'throw'
					  ('impossible')
				  %% Line 1394
				  <'false'> when 'true' ->
				      'ok'
				  ( <_cor2> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_4394})
				    -| ['compiler_generated'] )
				end
			%% Line 1396
			<_cor14> when 'true' ->
			    call 'erlang':'throw'
				('impossible')
		      end
	      in  %% Line 1391
		  call 'lists':'foreach'
		      (_cor5, Els)
	  %% Line 1398
	  <{'var',_cor15,V},EVs> when 'true' ->
	      let <_9865> =
		  %% Line 1399
		  call 'lists':'member'
		      (V, _cor0)
	      in  %% Line 1399
		  case _9865 of
		    %% Line 1400
		    <'true'> when 'true' ->
			call 'erlang':'throw'
			    ('impossible')
		    %% Line 1401
		    <'false'> when 'true' ->
			'ok'
		    ( <_cor6> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_9865})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1403
	  <_cor16,_cor17> when 'true' ->
	      %% Line 1404
	      call 'erlang':'throw'
		  ('impossible')
	end
'bc_list_length'/2 =
    %% Line 1406
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'string',_cor6,Str},Len> when 'true' ->
	      let <_cor2> =
		  %% Line 1407
		  call 'erlang':'length'
		      (Str)
	      in  %% Line 1407
		  call 'erlang':'+'
		      (_cor0, _cor2)
	  %% Line 1408
	  <{'cons',_cor7,_cor8,T},Len> when 'true' ->
	      let <_cor3> =
		  %% Line 1409
		  call 'erlang':'+'
		      (_cor0, 1)
	      in  %% Line 1409
		  apply 'bc_list_length'/2
		      (T, _cor3)
	  %% Line 1410
	  <{'nil',_cor9},Len> when 'true' ->
	      _cor0
	  %% Line 1412
	  <_cor10,_cor11> when 'true' ->
	      %% Line 1413
	      call 'erlang':'throw'
		  ('impossible')
	end
'bc_bin_size_1'/2 =
    %% Line 1418
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'bin_element',_cor7,_cor8,{'integer',_cor9,Sz},Flags}|Els],N> when 'true' ->
	      let <_10541> =
		  %% Line 1419
		  call 'lists':'keyfind'
		      ('unit', 1, Flags)
	      in  %% Line 1419
		  case _10541 of
		    <{'unit',U}> when 'true' ->
			let <_cor3> =
			    %% Line 1420
			    call 'erlang':'*'
				(U, Sz)
			in  let <_cor4> =
				%% Line 1420
				call 'erlang':'+'
				    (_cor0, _cor3)
			    in  %% Line 1420
				apply 'bc_bin_size_1'/2
				    (Els, _cor4)
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_10541})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1421
	  <[],N> when 'true' ->
	      _cor0
	  %% Line 1422
	  <_cor10,_cor11> when 'true' ->
	      call 'erlang':'throw'
		  ('impossible')
	end
'bc_gen_size_mul'/4 =
    %% Line 1424
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'c_literal',_cor10,1},E,Pre,St> when 'true' ->
	      %% Line 1425
	      {_cor2,_cor1,_cor0}
	  %% Line 1426
	  <E1,E2,Pre,St0> when 'true' ->
	      let <_12468> =
		  %% Line 1700
		  apply 'new_var_name'/1
		      (_cor0)
	      in  %% Line 1700
		  case _12468 of
		    <{New,St}> when 'true' ->
			let <V,St> = <%% Line 1701
			     {'c_var',[],New},St>
			in  let <_cor5> =
				apply 'bc_mul'/2
				    (_cor3, _cor2)
			    in  {V,[{'iset',{'a',[],[],[]},V,_cor5}|_cor1],St}
		    ( <_14102> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12468})
		      -| ['compiler_generated'] )
		  end
	end
'bc_mul'/2 =
    %% Line 1430
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <E1,{'c_literal',_cor4,1}> when 'true' ->
	      _cor1
	  %% Line 1432
	  <E1,E2> when 'true' ->
	      %% Line 1433
	      {'icall',{'a',[],[],[]},{'c_literal',[],'erlang'},%% Line 1434
								{'c_literal',[],'*'},%% Line 1435
										     [_cor1|[_cor0|[]]]}
	end
'bc_add'/2 =
    %% Line 1442
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <E1,{'c_literal',_cor4,0}> when 'true' ->
	      _cor1
	  %% Line 1444
	  <E1,E2> when 'true' ->
	      %% Line 1445
	      {'icall',{'a',[],[],[]},{'c_literal',[],'erlang'},%% Line 1446
								{'c_literal',[],'+'},%% Line 1447
										     [_cor1|[_cor0|[]]]}
	end
'is_guard_test'/1 =
    %% Line 1458
    fun (_cor0) ->
	call 'erl_lint':'is_guard_test'
	    (_cor0)
'novars'/2 =
    %% Line 1464
    fun (_cor1,_cor0) ->
	let <_10350> =
	    %% Line 1465
	    apply 'expr'/2
		(_cor1, _cor0)
	in  %% Line 1465
	    case _10350 of
	      <{E1,Eps,St1}> when 'true' ->
		  let <_11333> =
		      %% Line 1466
		      apply 'force_novars'/2
			  (E1, St1)
		  in  %% Line 1466
		      case _11333 of
			<{Se,Sps,St2}> when 'true' ->
			    let <_cor4> =
				%% Line 1467
				call 'erlang':'++'
				    (Eps, Sps)
			    in  %% Line 1467
				{Se,_cor4,St2}
			( <_cor3> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_11333})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_10350})
		-| ['compiler_generated'] )
	    end
'force_novars'/2 =
    %% Line 1469
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <App = {'iapply',_cor4,_cor5,_cor6},St> when 'true' ->
	      {_cor1,[],_cor0}
	  %% Line 1470
	  <Call = {'icall',_cor7,_cor8,_cor9,_cor10},St> when 'true' ->
	      {_cor1,[],_cor0}
	  %% Line 1471
	  <Fun = {'ifun',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16},St> when 'true' ->
	      {_cor1,[],_cor0}
	  %% Line 1472
	  <Bin = {'ibinary',_cor17,_cor18},St> when 'true' ->
	      {_cor1,[],_cor0}
	  %% Line 1473
	  <Ce,St> when 'true' ->
	      %% Line 1474
	      apply 'force_safe'/2
		  (_cor1, _cor0)
	end
'safe'/2 =
    %% Line 1481
    fun (_cor1,_cor0) ->
	let <_6324> =
	    %% Line 1482
	    apply 'expr'/2
		(_cor1, _cor0)
	in  %% Line 1482
	    case _6324 of
	      <{E1,Eps,St1}> when 'true' ->
		  let <_4822> =
		      %% Line 1483
		      apply 'force_safe'/2
			  (E1, St1)
		  in  %% Line 1483
		      case _4822 of
			<{Se,Sps,St2}> when 'true' ->
			    let <_cor4> =
				%% Line 1484
				call 'erlang':'++'
				    (Eps, Sps)
			    in  %% Line 1484
				{Se,_cor4,St2}
			( <_cor3> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_4822})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_6324})
		-| ['compiler_generated'] )
	    end
'safe_fun'/3 =
    %% Line 1486
    fun (_cor2,_cor1,_cor0) ->
	let <_3282> =
	    %% Line 1487
	    apply 'safe'/2
		(_cor1, _cor0)
	in  %% Line 1487
	    case _3282 of
	      %% Line 1488
	      <{E1 = {'c_var',_cor9,{_cor10,A1}},Eps,St1}>
		  when call 'erlang':'=/='
			(A1,
			 _cor2) ->
		  let <_12468> =
		      %% Line 1700
		      apply 'new_var_name'/1
			  (St1)
		  in  %% Line 1700
		      case _12468 of
			<{New,St}> when 'true' ->
			    let <V,St2> = <%% Line 1701
				 {'c_var',[],New},St>
			    in  let <_cor4> =
				    call 'erlang':'++'
					(Eps, [{'iset',{'a',[],[],[]},V,E1}|[]])
				in  {V,_cor4,St2}
			( <_9367> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_12468})
			  -| ['compiler_generated'] )
		      end
	      %% Line 1491
	      <Result> when 'true' ->
		  _3282
	    end
'safe_list'/2 =
    %% Line 1495
    fun (_cor1,_cor0) ->
	let <_cor8> =
	    %% Line 1496
	    fun (_cor5,_cor4) ->
		case <_cor5,_cor4> of
		  <E,{Ces,Esp,St0}> when 'true' ->
		      let <_15639> =
			  %% Line 1497
			  apply 'safe'/2
			      (_cor5, St0)
		      in  %% Line 1497
			  case _15639 of
			    <{Ce,Ep,St1}> when 'true' ->
				let <_cor3> =
				    %% Line 1498
				    call 'erlang':'++'
					(Ep, Esp)
				in  %% Line 1498
				    {[Ce|Ces],_cor3,St1}
			    ( <_cor2> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_15639})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor7,_cor6> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor5,_cor4})
			  -| [{'function_name',{'-safe_list/2-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 1496
	    call 'lists':'foldr'
		(_cor8, %% Line 1499
			{[],[],_cor0}, _cor1)
'force_safe'/2 =
    %% Line 1501
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Imatch = {'imatch',_cor19,P,_cor20,E,_cor21},St0> when 'true' ->
	      let <_15138> =
		  %% Line 1502
		  apply 'force_safe'/2
		      (E, _cor0)
	      in  %% Line 1502
		  case _15138 of
		    <{Le,Lps0,St1}> when 'true' ->
			let <_cor5> =
			    %% Line 1503
			    call 'erlang':'setelement'
				(5, _cor1, Le)
			in  let <Lps> =
				%% Line 1503
				call 'erlang':'++'
				    (Lps0, [_cor5|[]])
			    in  %% Line 1508
				case Le of
				  %% Line 1509
				  <{'c_var',_cor28,_cor29}> when 'true' ->
				      %% Line 1512
				      {Le,Lps,St1}
				  %% Line 1513
				  <_cor30> when 'true' ->
				      let <_12468> =
					  %% Line 1700
					  apply 'new_var_name'/1
					      (St1)
				      in  %% Line 1700
					  case _12468 of
					    <{New,St}> when 'true' ->
						let <V,St2> = <%% Line 1701
						     {'c_var',[],New},St>
						in  let <_rec31> =
							{'c_alias',[],V,P}
						    in  let <_cor10> =
							    call 'erlang':'setelement'
								(5, _cor1, Le)
							in  let <_cor12> =
								call 'erlang':'setelement'
								    (3, _cor10, _rec31)
							    in  let <_cor13> =
								    call 'erlang':'++'
									(Lps0, [_cor12|[]])
								in  {V,_cor13,St2}
					    ( <_cor2> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_12468})
					      -| ['compiler_generated'] )
					  end
				end
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_15138})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1528
	  <Ce,St0> when 'true' ->
	      let <_4195> =
		  %% Line 1529
		  apply 'is_safe'/1
		      (_cor1)
	      in  %% Line 1529
		  case _4195 of
		    %% Line 1530
		    <'true'> when 'true' ->
			{_cor1,[],_cor0}
		    %% Line 1531
		    <'false'> when 'true' ->
			let <_12468> =
			    %% Line 1700
			    apply 'new_var_name'/1
				(_cor0)
			in  %% Line 1700
			    case _12468 of
			      <{New,St}> when 'true' ->
				  let <V,St1> = <%% Line 1701
				       {'c_var',[],New},St>
				  in  {V,[{'iset',{'a',[],[],[]},V,_cor1}|[]],St1}
			      ( <_cor2> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_12468})
				-| ['compiler_generated'] )
			    end
		    ( <_cor16> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_4195})
		      -| ['compiler_generated'] )
		  end
	end
'is_safe'/1 =
    %% Line 1536
    fun (_cor0) ->
	case _cor0 of
	  <{'c_cons',_cor2,_cor3,_cor4}> when 'true' ->
	      'true'
	  %% Line 1537
	  <{'c_tuple',_cor5,_cor6}> when 'true' ->
	      'true'
	  %% Line 1538
	  <{'c_var',_cor7,_cor8}> when 'true' ->
	      'true'
	  %% Line 1539
	  <{'c_literal',_cor9,_cor10}> when 'true' ->
	      'true'
	  %% Line 1540
	  <_cor11> when 'true' ->
	      'false'
	end
'fold_match'/2 =
    %% Line 1545
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'match',L,P0,E0},P> when 'true' ->
	      let <_1383> =
		  %% Line 1546
		  apply 'fold_match'/2
		      (E0, _cor0)
	      in  %% Line 1546
		  case _1383 of
		    <{P1,E1}> when 'true' ->
			%% Line 1547
			{{'match',L,P0,P1},E1}
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1383})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1548
	  <E,P> when 'true' ->
	      {_cor0,_cor1}
	end
'pattern'/2 =
    %% Line 1554
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'var',L,V},St> when 'true' ->
	      let <_cor2> =
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  {'c_var',_cor2,V}
	  %% Line 1555
	  <{'char',L,C},St> when 'true' ->
	      let <_cor3> =
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  {'c_literal',_cor3,C}
	  %% Line 1556
	  <{'integer',L,I},St> when 'true' ->
	      let <_cor4> =
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  {'c_literal',_cor4,I}
	  %% Line 1557
	  <{'float',L,F},St> when 'true' ->
	      let <_cor5> =
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  {'c_literal',_cor5,F}
	  %% Line 1558
	  <{'atom',L,A},St> when 'true' ->
	      let <_cor6> =
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  {'c_literal',_cor6,A}
	  %% Line 1559
	  <{'string',L,S},St> when 'true' ->
	      let <_cor7> =
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  {'c_literal',_cor7,S}
	  %% Line 1560
	  <{'nil',L},St> when 'true' ->
	      let <_cor8> =
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  {'c_literal',_cor8,[]}
	  %% Line 1561
	  <{'cons',L,H,T},St> when 'true' ->
	      let <_cor11> =
		  %% Line 1562
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  let <_cor10> =
		      %% Line 1562
		      apply 'pattern'/2
			  (H, _cor0)
		  in  let <_cor9> =
			  %% Line 1562
			  apply 'pattern'/2
			      (T, _cor0)
		      in  %% Line 1562
			  apply 'annotate_cons'/4
			      (_cor11, _cor10, _cor9, _cor0)
	  %% Line 1563
	  <{'tuple',L,Ps},St> when 'true' ->
	      let <_cor13> =
		  %% Line 1564
		  apply 'record_anno'/2
		      (L, _cor0)
	      in  let <_cor12> =
		      %% Line 1564
		      apply 'pattern_list'/2
			  (Ps, _cor0)
		  in  %% Line 1564
		      apply 'annotate_tuple'/3
			  (_cor13, _cor12, _cor0)
	  %% Line 1565
	  <{'map',L,Ps},St> when 'true' ->
	      let <_cor15> =
		  %% Line 1566
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  let <_cor14> =
		      %% Line 1566
		      apply 'pattern_map_pairs'/2
			  (Ps, _cor0)
		  in  %% Line 1566
		      {'c_map',_cor15,{'c_literal',[],~{}~},_cor14}
	  %% Line 1567
	  <{'bin',L,Ps},St> when 'true' ->
	      let <_cor17> =
		  %% Line 1570
		  apply 'lineno_anno'/2
		      (L, _cor0)
	      in  let <_cor16> =
		      %% Line 1624
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor4) ->
				    case _cor4 of
				      <[P|_cor3]> when 'true' ->
					  let <_cor5> =
					      apply 'pat_segment'/2
						  (P, _cor0)
					  in  let <_cor6> =
						  apply 'lc$^0'/1
						      (_cor3)
					      in  ( [_cor5|_cor6]
						    -| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_2294> when 'true' ->
					    primop 'match_fail'
						({'function_clause',_cor4})
					-| ['compiler_generated'] )
				    end
			in  case Ps of
			      <[P|_cor3]> when 'true' ->
				  let <_cor5> =
				      apply 'pat_segment'/2
					  (P, _cor0)
				  in  let <_cor6> =
					  apply 'lc$^0'/1
					      (_cor3)
				      in  ( [_cor5|_cor6]
					    -| ['compiler_generated'] )
			      <[]> when 'true' ->
				  []
			      ( <_2294> when 'true' ->
				    primop 'match_fail'
					({'function_clause',Ps})
				-| ['compiler_generated'] )
			    end
			-| ['list_comprehension'] )
		  in  %% Line 1570
		      {'c_binary',_cor17,_cor16}
	  %% Line 1571
	  <{'match',_cor22,P1,P2},St> when 'true' ->
	      let <_cor19> =
		  %% Line 1572
		  apply 'pattern'/2
		      (P1, _cor0)
	      in  let <_cor18> =
		      %% Line 1572
		      apply 'pattern'/2
			  (P2, _cor0)
		  in  %% Line 1572
		      apply 'pat_alias'/2
			  (_cor19, _cor18)
	  ( <_cor21,_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'pattern',2}}] )
	    -| ['compiler_generated'] )
	end
'pattern_map_pairs'/2 =
    %% Line 1575
    fun (_cor1,_cor0) ->
	let <_cor12> =
	    %% Line 1578
	    fun (_cor9,_cor8) ->
		let <_13885> =
		    %% Line 1580
		    apply 'pattern_map_pair'/2
			(_cor9, _cor0)
		in  %% Line 1580
		    case _13885 of
		      <CMapPair = {'c_map_pair',_cor17,_cor18,Ck,Cv}> when 'true' ->
			  let <K> =
			      %% Line 1581
			      call 'core_lib':'literal_value'
				  (Ck)
			  in  %% Line 1582
			      case call 'dict':'find'
				       (K, _cor8) of
				%% Line 1583
				<{'ok',Vs}> when 'true' ->
				    let <_cor5> =
					%% Line 1584
					call 'dict':'store'
					    (K, [Cv|Vs], _cor8)
				    in  %% Line 1584
					{_13885,_cor5}
				%% Line 1585
				<_cor19> when 'true' ->
				    let <_cor6> =
					%% Line 1586
					call 'dict':'store'
					    (K, [Cv|[]], _cor8)
				    in  %% Line 1586
					{_13885,_cor6}
			      end
		      ( <_cor3> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_13885})
			-| ['compiler_generated'] )
		    end
	in  let <_cor2> =
		%% Line 1588
		call 'dict':'new'
		    ()
	    in  let <_13761> =
		    %% Line 1578
		    call 'lists':'mapfoldl'
			(_cor12, _cor2, _cor1)
		in  %% Line 1578
		    case _13761 of
		      <{CMapPairs,Kdb}> when 'true' ->
			  let <_cor14> =
			      %% Line 1589
			      call 'dict':'new'
				  ()
			  in  %% Line 1589
			      apply 'pattern_alias_map_pairs'/4
				  (CMapPairs, Kdb, _cor14, _cor0)
		      ( <_cor13> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_13761})
			-| ['compiler_generated'] )
		    end
'pattern_alias_map_pairs'/4 =
    %% Line 1591
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[],_cor17,_cor18,_cor19> when 'true' ->
	      []
	  %% Line 1592
	  <[Pair = {'c_map_pair',_cor20,_cor21,Ck,_cor22}|Pairs],Kdb,Kset,St> when 'true' ->
	      let <K> =
		  %% Line 1594
		  call 'core_lib':'literal_value'
		      (Ck)
	      in  %% Line 1595
		  case call 'dict':'find'
			   (K, _cor1) of
		    %% Line 1596
		    <{'ok','processed'}> when 'true' ->
			%% Line 1597
			apply 'pattern_alias_map_pairs'/4
			    (Pairs, _cor2, _cor1, _cor0)
		    %% Line 1598
		    <_cor23> when 'true' ->
			let <Cvs> =
			    %% Line 1599
			    call 'dict':'fetch'
				(K, _cor2)
			in  let <Cv> =
				%% Line 1600
				apply 'pattern_alias_map_pair_patterns'/1
				    (Cvs)
			    in  let <Kset1> =
				    %% Line 1601
				    call 'dict':'store'
					(K, 'processed', _cor1)
				in  let <_cor10> =
					%% Line 1602
					call 'erlang':'setelement'
					    (5, Pair, Cv)
				    in  let <_cor11> =
					    %% Line 1602
					    apply 'pattern_alias_map_pairs'/4
						(Pairs, _cor2, Kset1, _cor0)
					in  %% Line 1602
					    [_cor10|_cor11]
		  end
	  ( <_cor16,_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'pattern_alias_map_pairs',4}}] )
	    -| ['compiler_generated'] )
	end
'pattern_alias_map_pair_patterns'/1 =
    %% Line 1605
    fun (_cor0) ->
	case _cor0 of
	  <[Cv|[]]> when 'true' ->
	      Cv
	  %% Line 1606
	  <[Cv1|[Cv2|Cvs]]> when 'true' ->
	      let <_cor1> =
		  %% Line 1607
		  apply 'pat_alias'/2
		      (Cv1, Cv2)
	      in  %% Line 1607
		  apply 'pattern_alias_map_pair_patterns'/1
		      ([_cor1|Cvs])
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'pattern_alias_map_pair_patterns',1}}] )
	    -| ['compiler_generated'] )
	end
'pattern_map_pair'/2 =
    %% Line 1609
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'map_field_exact',L,K,V},St> when 'true' ->
	      %% Line 1610
	      case apply 'expr'/2
		       (K, _cor0) of
		%% Line 1611
		<{Key = {'c_literal',_cor7,_cor8},_cor9,_cor10}> when 'true' ->
		    let <_cor3> =
			%% Line 1612
			apply 'lineno_anno'/2
			    (L, _cor0)
		    in  let <_cor2> =
			    %% Line 1615
			    apply 'pattern'/2
				(V, _cor0)
			in  %% Line 1612
			    {'c_map_pair',_cor3,%% Line 1613
						{'c_literal',[],'exact'},Key,_cor2}
		%% Line 1616
		<_cor11> when 'true' ->
		    %% Line 1619
		    call 'erlang':'throw'
			('nomatch')
	      end
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'pattern_map_pair',2}}] )
	    -| ['compiler_generated'] )
	end
'pat_segment'/2 =
    %% Line 1626
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'bin_element',_cor6,Term,Size,[Type|[{'unit',Unit}|Flags]]},St> when 'true' ->
	      let <_cor3> =
		  %% Line 1627
		  apply 'pattern'/2
		      (Term, _cor0)
	      in  let <_cor2> =
		      %% Line 1627
		      apply 'pattern'/2
			  (Size, _cor0)
		  in  %% Line 1627
		      {'c_bitstr',[],_cor3,_cor2,%% Line 1628
						 {'c_literal',[],Unit},%% Line 1629
								       {'c_literal',[],Type},%% Line 1630
											     {'c_literal',[],Flags}}
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'pat_segment',2}}] )
	    -| ['compiler_generated'] )
	end
'pat_alias'/2 =
    %% Line 1635
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'c_var',_cor38,V1},P2> when 'true' ->
	      {'c_alias',[],{'c_var',[],V1},_cor0}
	  %% Line 1636
	  <P1,{'c_var',_cor39,V2}> when 'true' ->
	      {'c_alias',[],{'c_var',[],V2},_cor1}
	  %% Line 1637
	  <Cons = {'c_cons',_cor40,_cor41,_cor42},S = {'c_literal',A,[H|T]}> when 'true' ->
	      let <_cor4> =
		  %% Line 1639
		  call 'erlang':'setelement'
		      (3, _cor0, T)
	      in  let <_cor5> =
		      %% Line 1638
		      call 'cerl':'ann_c_cons_skel'
			  (A, {'c_literal',A,H}, _cor4)
		  in  %% Line 1638
		      apply 'pat_alias'/2
			  (_cor1, _cor5)
	  %% Line 1640
	  <S = {'c_literal',A,[H|T]},Cons = {'c_cons',_cor46,_cor47,_cor48}> when 'true' ->
	      let <_cor8> =
		  %% Line 1642
		  call 'erlang':'setelement'
		      (3, _cor1, T)
	      in  let <_cor9> =
		      %% Line 1641
		      call 'cerl':'ann_c_cons_skel'
			  (A, {'c_literal',A,H}, _cor8)
		  in  %% Line 1641
		      apply 'pat_alias'/2
			  (_cor9, _cor0)
	  %% Line 1643
	  <{'c_cons',Anno,H1,T1},{'c_cons',_cor52,H2,T2}> when 'true' ->
	      let <_cor11> =
		  %% Line 1644
		  apply 'pat_alias'/2
		      (H1, H2)
	      in  let <_cor10> =
		      %% Line 1644
		      apply 'pat_alias'/2
			  (T1, T2)
		  in  %% Line 1644
		      call 'cerl':'ann_c_cons'
			  (Anno, _cor11, _cor10)
	  %% Line 1645
	  <{'c_tuple',Anno,Es1},{'c_literal',_cor53,T}>
	      when call 'erlang':'is_tuple'
		    (T) ->
	      let <_cor17> =
		  %% Line 1646
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor15) ->
				case _cor15 of
				  <[E|_cor13]> when 'true' ->
				      let <_cor16> =
					  apply 'lc$^0'/1
					      (_cor13)
				      in  ( [{'c_literal',[],E}|_cor16]
					    -| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_4300> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor15})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  let <_cor14> =
			    call 'erlang':'tuple_to_list'
				(T)
			in  case _cor14 of
			      <[E|_cor13]> when 'true' ->
				  let <_cor16> =
				      apply 'lc$^0'/1
					  (_cor13)
				  in  ( [{'c_literal',[],E}|_cor16]
					-| ['compiler_generated'] )
			      <[]> when 'true' ->
				  []
			      ( <_4300> when 'true' ->
				    primop 'match_fail'
					({'function_clause',_cor14})
				-| ['compiler_generated'] )
			    end
		    -| ['list_comprehension'] )
	      in  let <_cor19> =
		      %% Line 1647
		      apply 'pat_alias_list'/2
			  (Es1, _cor17)
		  in  %% Line 1647
		      call 'cerl':'ann_c_tuple'
			  (Anno, _cor19)
	  %% Line 1648
	  <{'c_literal',Anno,T},{'c_tuple',_cor54,Es2}>
	      when call 'erlang':'is_tuple'
		    (T) ->
	      let <_cor25> =
		  %% Line 1649
		  ( letrec
			'lc$^1'/1 =
			    fun (_cor23) ->
				case _cor23 of
				  <[E|_cor21]> when 'true' ->
				      let <_cor24> =
					  apply 'lc$^1'/1
					      (_cor21)
				      in  ( [{'c_literal',[],E}|_cor24]
					    -| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_11432> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor23})
					  -| [{'function_name',{'lc$^1',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  let <_cor22> =
			    call 'erlang':'tuple_to_list'
				(T)
			in  case _cor22 of
			      <[E|_cor21]> when 'true' ->
				  let <_cor24> =
				      apply 'lc$^1'/1
					  (_cor21)
				  in  ( [{'c_literal',[],E}|_cor24]
					-| ['compiler_generated'] )
			      <[]> when 'true' ->
				  []
			      ( <_11432> when 'true' ->
				    primop 'match_fail'
					({'function_clause',_cor22})
				-| ['compiler_generated'] )
			    end
		    -| ['list_comprehension'] )
	      in  let <_cor27> =
		      %% Line 1650
		      apply 'pat_alias_list'/2
			  (_cor25, Es2)
		  in  %% Line 1650
		      call 'cerl':'ann_c_tuple'
			  (Anno, _cor27)
	  %% Line 1651
	  <{'c_tuple',Anno,Es1},{'c_tuple',_cor55,Es2}> when 'true' ->
	      let <_cor28> =
		  %% Line 1652
		  apply 'pat_alias_list'/2
		      (Es1, Es2)
	      in  %% Line 1652
		  call 'cerl':'ann_c_tuple'
		      (Anno, _cor28)
	  %% Line 1653
	  <{'c_alias',_cor56,V1,P1},%% Line 1654
				    {'c_alias',_cor57,V2,P2}> when 'true' ->
	      %% Line 1655
	      case <> of
		<>
		    when call 'erlang':'=:='
			  (V1,
			   V2) ->
		    let <_cor29> =
			apply 'pat_alias'/2
			    (P1, P2)
		    in  {'c_alias',[],V1,_cor29}
		%% Line 1656
		<> when 'true' ->
		    let <_cor30> =
			apply 'pat_alias'/2
			    (P1, P2)
		    in  {'c_alias',[],V1,{'c_alias',[],V2,_cor30}}
	      end
	  %% Line 1658
	  <{'c_alias',_cor58,V1,P1},P2> when 'true' ->
	      let <_cor31> =
		  %% Line 1659
		  apply 'pat_alias'/2
		      (P1, _cor0)
	      in  %% Line 1659
		  {'c_alias',[],V1,_cor31}
	  %% Line 1660
	  <P1,{'c_alias',_cor59,V2,P2}> when 'true' ->
	      let <_cor32> =
		  %% Line 1661
		  apply 'pat_alias'/2
		      (_cor1, P2)
	      in  %% Line 1661
		  {'c_alias',[],V2,_cor32}
	  %% Line 1662
	  <P1,P2> when 'true' ->
	      let <_cor34> =
		  %% Line 2320
		  call 'erlang':'setelement'
		      (2, _cor1, [])
	      in  let <_cor33> =
		      %% Line 2320
		      call 'erlang':'setelement'
			  (2, _cor0, [])
		  in  %% Line 1663
		      case <_cor34,_cor33> of
			%% Line 1664
			<P,_cor60>
			    when call 'erlang':'=:='
				  (_cor33,
				   _cor34) ->
			    _cor34
			%% Line 1665
			<_fol256,_fol257> when 'true' ->
			    call 'erlang':'throw'
				('nomatch')
		      end
	end
'pat_alias_list'/2 =
    %% Line 1670
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[A1|A1s],[A2|A2s]> when 'true' ->
	      let <_cor2> =
		  %% Line 1671
		  apply 'pat_alias'/2
		      (A1, A2)
	      in  let <_cor3> =
		      %% Line 1671
		      apply 'pat_alias_list'/2
			  (A1s, A2s)
		  in  %% Line 1671
		      [_cor2|_cor3]
	  %% Line 1672
	  <[],[]> when 'true' ->
	      []
	  %% Line 1673
	  <_cor6,_cor7> when 'true' ->
	      call 'erlang':'throw'
		  ('nomatch')
	end
'pattern_list'/2 =
    %% Line 1677
    fun (_cor1,_cor0) ->
	( letrec
	      'lc$^0'/1 =
		  fun (_cor4) ->
		      case _cor4 of
			<[P|_cor3]> when 'true' ->
			    let <_cor5> =
				apply 'pattern'/2
				    (P, _cor0)
			    in  let <_cor6> =
				    apply 'lc$^0'/1
					(_cor3)
				in  ( [_cor5|_cor6]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_5116> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor4})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  apply 'lc$^0'/1
		  (_cor1)
	  -| ['list_comprehension'] )
'new_fun_name'/2 =
    %% Line 1685
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Type,St = {'core',_cor12,C,_cor13,_cor14,_cor15,_cor16,_cor17}> when 'true' ->
	      let <_cor6> =
		  %% Line 1686
		  call 'erlang':'integer_to_list'
		      (C)
	      in  let <_cor7> =
		      %% Line 1686
		      [36|[94|_cor6]]
		  in  let <_cor8> =
			  %% Line 1686
			  call 'erlang':'++'
			      (_cor1, _cor7)
		      in  let <_cor9> =
			      %% Line 1686
			      call 'erlang':'list_to_atom'
				  (_cor8)
			  in  let <_rec36> =
				  %% Line 1686
				  call 'erlang':'+'
				      (C, 1)
			      in  let <_cor5> =
				      %% Line 1686
				      call 'erlang':'setelement'
					  (3, _cor0, _rec36)
				  in  %% Line 1686
				      {_cor9,_cor5}
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'new_fun_name',2}}] )
	    -| ['compiler_generated'] )
	end
'new_var_name'/1 =
    %% Line 1690
    fun (_cor0) ->
	case _cor0 of
	  <St = {'core',C,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14}> when 'true' ->
	      let <_cor5> =
		  %% Line 1691
		  call 'erlang':'integer_to_list'
		      (C)
	      in  let <_cor6> =
		      %% Line 1691
		      [99|[111|[114|_cor5]]]
		  in  let <_cor7> =
			  %% Line 1691
			  call 'erlang':'list_to_atom'
			      (_cor6)
		      in  let <_rec38> =
			      %% Line 1691
			      call 'erlang':'+'
				  (C, 1)
			  in  let <_cor4> =
				  %% Line 1691
				  call 'erlang':'setelement'
				      (2, _cor0, _rec38)
			      in  %% Line 1691
				  {_cor7,_cor4}
	  ( <_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'new_var_name',1}}] )
	    -| ['compiler_generated'] )
	end
'new_vars_1'/4 =
    %% Line 1710
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <N,Anno,St0,Vs>
	      when call 'erlang':'>'
		    (_cor3,
		     0) ->
	      let <_12468> =
		  apply 'new_var_name'/1
		      (_cor1)
	      in  case _12468 of
		    <{New,St}> when 'true' ->
			let <V,St1> = <{'c_var',_cor2,New},St>
			in  let <_cor5> =
				%% Line 1712
				call 'erlang':'-'
				    (_cor3, 1)
			    in  %% Line 1712
				apply 'new_vars_1'/4
				    (_cor5, _cor2, St1, [V|_cor0])
		    ( <_14551> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12468})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1713
	  <0,_cor10,St,Vs> when 'true' ->
	      {_cor0,_cor1}
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'new_vars_1',4}}] )
	    -| ['compiler_generated'] )
	end
'fail_clause'/3 =
    %% Line 1720
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1721
	{'iclause',{'a',[],[],['compiler_generated']},_cor2,[],%% Line 1722
							       [],%% Line 1723
								  [{'iprimop',{'a',[],[],_cor1},{'c_literal',[],'match_fail'},%% Line 1724
															      [_cor0|[]]}|%% Line 1724
																	  []]}
'annotate_tuple'/3 =
    %% Line 1726
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1727
	( case _cor0 of
	    ( <( {'core',_cor11,_cor12,_cor13,_cor14,_rec40,_cor15,_cor16}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_15007> =
		      call 'lists':'member'
			  ('dialyzer', _rec40)
		  in  case _15007 of
			%% Line 1728
			<'true'> when 'true' ->
			    let <_cor5> =
				%% Line 1730
				call 'cerl':'c_var'
				    ('any')
			    in  let <Node> =
				    %% Line 1730
				    call 'cerl':'ann_c_tuple'
					(_cor2, [_cor5|[]])
				in  %% Line 1731
				    call 'cerl':'update_c_tuple_skel'
					(Node, _cor1)
			%% Line 1732
			<'false'> when 'true' ->
			    %% Line 1733
			    call 'cerl':'ann_c_tuple'
				(_cor2, _cor1)
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_15007})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor17> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','core'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'annotate_cons'/4 =
    %% Line 1736
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1737
	( case _cor0 of
	    ( <( {'core',_cor14,_cor15,_cor16,_cor17,_rec41,_cor18,_cor19}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_14454> =
		      call 'lists':'member'
			  ('dialyzer', _rec41)
		  in  case _14454 of
			%% Line 1738
			<'true'> when 'true' ->
			    let <_cor7> =
				%% Line 1740
				call 'cerl':'c_var'
				    ('any')
			    in  let <_cor6> =
				    %% Line 1740
				    call 'cerl':'c_var'
					('any')
				in  let <Node> =
					%% Line 1740
					call 'cerl':'ann_c_cons'
					    (_cor3, _cor7, _cor6)
				    in  %% Line 1741
					call 'cerl':'update_c_cons_skel'
					    (Node, _cor2, _cor1)
			%% Line 1742
			<'false'> when 'true' ->
			    %% Line 1743
			    call 'cerl':'ann_c_cons'
				(_cor3, _cor2, _cor1)
			( <_cor9> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_14454})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor20> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','core'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'uclauses'/3 =
    %% Line 1750
    fun (_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 1751
	    fun (_cor4,_cor3) ->
		apply 'uclause'/3
		    (_cor4, _cor1, _cor3)
	in  %% Line 1751
	    call 'lists':'mapfoldl'
		(_cor7, _cor0, _cor2)
'uclause'/3 =
    %% Line 1755
    fun (_cor2,_cor1,_cor0) ->
	let <_11900> =
	    %% Line 1756
	    apply 'uclause'/4
		(_cor2, _cor1, _cor1, _cor0)
	in  %% Line 1756
	    case _11900 of
	      <{Cl1,_X_Pvs,Used,New,St1}> when 'true' ->
		  %% Line 1758
		  case apply 'get_ianno'/1
			   (Cl1) of
		    <{'a',_rec43,_rec44,_rec45}> when 'true' ->
			let <_cor7> =
			    {'a',Used,New,_rec45}
			in  %% Line 1759
			    case Cl1 of
			      <{'iclause',_cor16,_cor17,_cor18,_cor19,_cor20}> when 'true' ->
				  let <_cor11> =
				      call 'erlang':'setelement'
					  (2, Cl1, _cor7)
				  in  {_cor11,St1}
			      ( <_cor21> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','iclause'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
		    ( <_cor15> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','a'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_11900})
		-| ['compiler_generated'] )
	    end
'uclause'/4 =
    %% Line 1761
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'iclause',Anno,Ps0,_cor23,G0,B0},Pks,Ks0,St0> when 'true' ->
	      let <_10319> =
		  %% Line 1762
		  apply 'upattern_list'/3
		      (Ps0, _cor2, _cor0)
	      in  %% Line 1762
		  case _10319 of
		    <{Ps1,Pg,Pvs,Pus,St1}> when 'true' ->
			let <_cor5> =
			    %% Line 1763
			    call 'ordsets':'intersection'
				(Pvs, _cor1)
			in  let <Pu> =
				%% Line 1763
				call 'ordsets':'union'
				    (Pus, _cor5)
			    in  let <Pn> =
				    %% Line 1764
				    call 'ordsets':'subtract'
					(Pvs, Pu)
				in  let <Ks1> =
					%% Line 1765
					call 'ordsets':'union'
					    (Pn, _cor1)
				    in  let <_14899> =
					    %% Line 1766
					    apply 'uguard'/4
						(Pg, G0, Ks1, St1)
					in  %% Line 1766
					    case _14899 of
					      <{G1,St2}> when 'true' ->
						  let <Gu> =
						      %% Line 1767
						      apply 'used_in_any'/1
							  (G1)
						  in  let <Gn> =
							  %% Line 1768
							  apply 'new_in_any'/1
							      (G1)
						      in  let <Ks2> =
							      %% Line 1769
							      call 'ordsets':'union'
								  (Gn, Ks1)
							  in  let <_7257> =
								  %% Line 1770
								  apply 'uexprs'/3
								      (B0, Ks2, St2)
							      in  %% Line 1770
								  case _7257 of
								    <{B1,St3}> when 'true' ->
									let <_cor14> =
									    %% Line 1771
									    apply 'used_in_any'/1
										(B1)
									in  let <_cor15> =
										%% Line 1771
										call 'ordsets':'union'
										    ([Pu|[Gu|[_cor14|[]]]])
									    in  let <Used> =
										    %% Line 1771
										    call 'ordsets':'intersection'
											(_cor15, _cor1)
										in  let <_cor17> =
											%% Line 1772
											apply 'new_in_any'/1
											    (B1)
										    in  let <New> =
											    %% Line 1772
											    call 'ordsets':'union'
												([Pn|[Gn|[_cor17|[]]]])
											in  %% Line 1773
											    {{'iclause',Anno,Ps1,[],G1,B1},Pvs,Used,New,St3}
								    ( <_cor13> when 'true' ->
									  primop 'match_fail'
									      ({'badmatch',_7257})
								      -| ['compiler_generated'] )
								  end
					      ( <_cor9> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_14899})
						-| ['compiler_generated'] )
					    end
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_10319})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor22,_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'uclause',4}}] )
	    -| ['compiler_generated'] )
	end
'uguard'/4 =
    %% Line 1778
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[],[],_cor22,St> when 'true' ->
	      {[],_cor0}
	  %% Line 1779
	  <Pg,[],Ks,St> when 'true' ->
	      let <_cor5> =
		  %% Line 1781
		  call 'lists':'droplast'
		      (_cor3)
	      in  let <_cor4> =
		      %% Line 1781
		      call 'lists':'last'
			  (_cor3)
		  in  %% Line 1781
		      apply 'uguard'/4
			  (_cor5, [_cor4|[]], _cor1, _cor0)
	  %% Line 1782
	  <Pg,Gs0,Ks,St0> when 'true' ->
	      let <_cor16> =
		  %% Line 1784
		  fun (_cor13,_cor12) ->
		      case <_cor13,_cor12> of
			<T,{Gs1,St1}> when 'true' ->
			    let <_12468> =
				apply 'new_var_name'/1
				    (St1)
			    in  case _12468 of
				  <{New,St}> when 'true' ->
				      let <L,St2> = <{'c_var',[],New},St>
				      in  let <_12468> =
					      apply 'new_var_name'/1
						  (St2)
					  in  case _12468 of
						<{New,St}> when 'true' ->
						    let <R> = {'c_var',[],New}
						    in  let <_cor9> =
							    %% Line 1787
							    call 'lists':'droplast'
								(Gs1)
							in  let <_cor8> =
								%% Line 1788
								call 'lists':'last'
								    (Gs1)
							    in  let <_cor10> =
								    %% Line 1787
								    call 'erlang':'++'
									(_cor9, %% Line 1788
										[{'iset',{'a',[],[],[]},R,_cor8}|%% Line 1789
														 [{'icall',{'a',[],[],[]},%% Line 1790
																	  {'c_literal',[],'erlang'},%% Line 1791
																				    {'c_literal',[],'and'},%% Line 1792
																							   [L|[R|[]]]}|%% Line 1792
																								       []]])
								in  let <_cor11> =
									%% Line 1787
									[{'iset',{'a',[],[],[]},L,_cor13}|_cor10]
								    in  %% Line 1787
									{_cor11,St}
						( <_1407> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_12468})
						  -| ['compiler_generated'] )
					      end
				  ( <_3051> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_12468})
				    -| ['compiler_generated'] )
				end
			( <_cor15,_cor14> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor13,_cor12})
				-| [{'function_name',{'-uguard/4-fun-0-',2}}] )
			  -| ['compiler_generated'] )
		      end
	      in  let <_15026> =
		      %% Line 1784
		      call 'lists':'foldr'
			  (_cor16, %% Line 1794
				   {_cor2,_cor0}, _cor3)
		  in  %% Line 1784
		      case _15026 of
			<{Gs3,St5}> when 'true' ->
			    %% Line 1796
			    apply 'uexprs'/3
				(Gs3, _cor1, St5)
			( <_cor17> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_15026})
			  -| ['compiler_generated'] )
		      end
	end
'uexprs'/3 =
    %% Line 1800
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{'imatch',A,P0,_cor17,Arg,Fc}|Les],Ks,St0> when 'true' ->
	      %% Line 1802
	      case apply 'upattern'/3
		       (P0, _cor1, _cor0) of
		%% Line 1803
		<{{'c_var',_cor18,_cor19},[],_X_Pvs,_X_Pus,_cor20}> when 'true' ->
		    %% Line 1805
		    apply 'uexprs'/3
			([{'iset',{'a',[],[],[]},P0,Arg}|Les], _cor1, _cor0)
		%% Line 1806
		<_X_Other> when 'true' ->
		    %% Line 1808
		    case <> of
		      %% Line 1809
		      <>
			  when call 'erlang':'=:='
				(Les,
				 []) ->
			  let <_6345> =
			      %% Line 1812
			      apply 'force_safe'/2
				  (Arg, _cor0)
			  in  %% Line 1812
			      case _6345 of
				<{La0,Lps,St1}> when 'true' ->
				    let <La> =
					%% Line 1813
					apply 'mark_compiler_generated'/1
					    (La0)
				    in  let <Mc> =
					    %% Line 1814
					    {'iclause',A,[P0|[]],[],[],[La|[]]}
					in  let <_cor6> =
						%% Line 1815
						call 'erlang':'++'
						    (Lps, [{'icase',A,%% Line 1816
								      [La0|[]],%% Line 1816
									       [Mc|[]],Fc}|%% Line 1816
											   []])
					    in  %% Line 1815
						apply 'uexprs'/3
						    (_cor6, _cor1, St1)
				( <_cor3> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_6345})
				  -| ['compiler_generated'] )
			      end
		      %% Line 1817
		      <> when 'true' ->
			  let <Mc> =
			      %% Line 1818
			      {'iclause',A,[P0|[]],[],[],Les}
			  in  %% Line 1819
			      apply 'uexprs'/3
				  ([{'icase',A,[Arg|[]],%% Line 1820
							[Mc|[]],Fc}|%% Line 1820
								    []], _cor1, _cor0)
		    end
	      end
	  %% Line 1823
	  <[Le0|Les0],Ks,St0> when 'true' ->
	      let <_10236> =
		  %% Line 1824
		  apply 'uexpr'/3
		      (Le0, _cor1, _cor0)
	      in  %% Line 1824
		  case _10236 of
		    <{Le1,St1}> when 'true' ->
			%% Line 1825
			( case %% Line 2316
			       call 'erlang':'element'
				   (2, Le1) of
			    ( <( {'a',_cor21,_rec47,_cor22}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_cor12> =
				      call 'ordsets':'union'
					  (_rec47, _cor1)
				  in  let <_15360> =
					  apply 'uexprs'/3
					      (Les0, _cor12, St1)
				      in  case _15360 of
					    <{Les1,St2}> when 'true' ->
						%% Line 1826
						{[Le1|Les1],St2}
					    ( <_cor13> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_15360})
					      -| ['compiler_generated'] )
					  end
			      -| ['compiler_generated'] )
			    ( <_cor23> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','a'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    ( <_cor9> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_10236})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1827
	  <[],_cor24,St> when 'true' ->
	      {[],_cor0}
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'uexprs',3}}] )
	    -| ['compiler_generated'] )
	end
'mark_compiler_generated'/1 =
    %% Line 1830
    fun (_cor0) ->
	case _cor0 of
	  <{'c_cons',A,H,T}> when 'true' ->
	      let <_cor2> =
		  %% Line 1831
		  apply 'mark_compiler_generated'/1
		      (H)
	      in  let <_cor1> =
		      %% Line 1832
		      apply 'mark_compiler_generated'/1
			  (T)
		  in  %% Line 1831
		      call 'cerl':'ann_c_cons'
			  (['compiler_generated'|A], _cor2, _cor1)
	  %% Line 1833
	  <{'c_tuple',A,Es0}> when 'true' ->
	      let <_cor8> =
		  %% Line 1834
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor5) ->
				case _cor5 of
				  <[E|_cor4]> when 'true' ->
				      let <_cor6> =
					  apply 'mark_compiler_generated'/1
					      (E)
				      in  let <_cor7> =
					      apply 'lc$^0'/1
						  (_cor4)
					  in  ( [_cor6|_cor7]
						-| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_12342> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor5})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (Es0)
		    -| ['list_comprehension'] )
	      in  %% Line 1835
		  call 'cerl':'ann_c_tuple'
		      (['compiler_generated'|A], _cor8)
	  %% Line 1836
	  <Var = {'c_var',A,_cor17}> when 'true' ->
	      let <_rec48> =
		  %% Line 1837
		  ['compiler_generated'|A]
	      in  %% Line 1837
		  call 'erlang':'setelement'
		      (2, _cor0, _rec48)
	  %% Line 1838
	  <Lit = {'c_literal',A,_cor21}> when 'true' ->
	      let <_rec50> =
		  %% Line 1839
		  ['compiler_generated'|A]
	      in  %% Line 1839
		  call 'erlang':'setelement'
		      (2, _cor0, _rec50)
	  ( <_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'mark_compiler_generated',1}}] )
	    -| ['compiler_generated'] )
	end
'uexpr'/3 =
    %% Line 1841
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'iset',A,V,A0},Ks,St0> when 'true' ->
	      let <_10351> =
		  %% Line 1842
		  apply 'uexpr'/3
		      (A0, _cor1, _cor0)
	      in  %% Line 1842
		  case _10351 of
		    <{A1,St1}> when 'true' ->
			%% Line 1843
			( case V of
			    ( <( {'c_var',_cor135,_rec58}
				 -| ['compiler_generated'] )> when 'true' ->
				  ( case %% Line 2316
					 call 'erlang':'element'
					     (2, A1) of
				      ( <( {'a',_rec59,_cor137,_cor138}
					   -| ['compiler_generated'] )> when 'true' ->
					    let <_rec52> =
						call 'ordsets':'del_element'
						    (_rec58, _rec59)
					    in  %% Line 1844
						( case %% Line 2316
						       call 'erlang':'element'
							   (2, A1) of
						    ( <( {'a',_cor142,_rec61,_cor143}
							 -| ['compiler_generated'] )> when 'true' ->
							  let <_rec53> =
							      call 'ordsets':'add_element'
								  (_rec58, _rec61)
							  in  case A of
								<{'a',_rec55,_rec56,_rec57}> when 'true' ->
								    let <_cor16> =
									{'a',_rec52,_rec53,_rec57}
								    in  {{'iset',_cor16,V,A1},St1}
								( <_cor145> when 'true' ->
								      ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'error'
													     -| ['compiler_generated'] )
									    (( {'badrecord','a'}
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
							      end
						      -| ['compiler_generated'] )
						    ( <_cor144> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','a'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      ( <_cor139> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','a'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <_cor136> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','c_var'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_10351})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1847
	  <{'iletrec',A,Fs0,B0},Ks,St0> when 'true' ->
	      let <_cor22> =
		  %% Line 1849
		  fun (_cor19,_cor18) ->
		      case <_cor19,_cor18> of
			<{Name,F0},S0> when 'true' ->
			    let <_2319> =
				%% Line 1850
				apply 'uexpr'/3
				    (F0, _cor1, _cor18)
			    in  %% Line 1850
				case _2319 of
				  <{F1,S1}> when 'true' ->
				      %% Line 1851
				      {{Name,F1},S1}
				  ( <_cor17> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_2319})
				    -| ['compiler_generated'] )
				end
			( <_cor21,_cor20> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor19,_cor18})
				-| [{'function_name',{'-uexpr/3-fun-0-',2}}] )
			  -| ['compiler_generated'] )
		      end
	      in  let <_406> =
		      %% Line 1849
		      call 'lists':'mapfoldl'
			  (_cor22, _cor0, Fs0)
		  in  %% Line 1849
		      case _406 of
			<{Fs1,St1}> when 'true' ->
			    let <_12637> =
				%% Line 1853
				apply 'uexprs'/3
				    (B0, _cor1, St1)
			    in  %% Line 1853
				case _12637 of
				  <{B1,St2}> when 'true' ->
				      let <_cor27> =
					  %% Line 1854
					  fun (_cor25) ->
					      case _cor25 of
						<{_cor146,F}> when 'true' ->
						    F
						( <_cor26> when 'true' ->
						      ( primop 'match_fail'
							    ({'function_clause',_cor25})
							-| [{'function_name',{'-uexpr/3-fun-1-',1}}] )
						  -| ['compiler_generated'] )
					      end
				      in  let <_cor28> =
					      %% Line 1854
					      call 'lists':'map'
						  (_cor27, Fs1)
					  in  let <_cor29> =
						  %% Line 1854
						  call 'erlang':'++'
						      (_cor28, B1)
					      in  let <Used> =
						      %% Line 1854
						      apply 'used_in_any'/1
							  (_cor29)
						  in  %% Line 1855
						      case A of
							<{'a',_rec63,_rec64,_rec65}> when 'true' ->
							    let <_cor33> =
								{'a',Used,[],_rec65}
							    in  {{'iletrec',_cor33,Fs1,B1},St2}
							( <_cor147> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','a'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
				  ( <_cor24> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_12637})
				    -| ['compiler_generated'] )
				end
			( <_cor23> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_406})
			  -| ['compiler_generated'] )
		      end
	  %% Line 1856
	  <{'icase',A = {'a',_cor148,_cor149,Anno},As0,Cs0,Fc0},Ks,St0> when 'true' ->
	      let <_cor7> =
		  %% Line 1933
		  fun (_cor4,_cor3) ->
		      apply 'uexpr'/3
			  (_cor4, _cor1, _cor3)
	      in  let <_5638> =
		      %% Line 1933
		      call 'lists':'mapfoldl'
			  (_cor7, _cor0, As0)
		  in  %% Line 1858
		      case _5638 of
			<{As1,St1}> when 'true' ->
			    let <_3407> =
				%% Line 1859
				apply 'uclauses'/3
				    (Cs0, _cor1, St1)
			    in  %% Line 1859
				case _3407 of
				  <{Cs1,St2}> when 'true' ->
				      let <_12690> =
					  %% Line 1860
					  apply 'uclause'/3
					      (Fc0, _cor1, St2)
				      in  %% Line 1860
					  case _12690 of
					    <{Fc1,St3}> when 'true' ->
						let <_cor38> =
						    %% Line 1861
						    apply 'used_in_any'/1
							(As1)
						in  let <_cor37> =
							%% Line 1861
							apply 'used_in_any'/1
							    (Cs1)
						    in  let <Used> =
							    %% Line 1861
							    call 'ordsets':'union'
								(_cor38, _cor37)
							in  let <_5396> =
								%% Line 1862
								call 'lists':'member'
								    ('list_comprehension', Anno)
							    in  let <_cor41> =
								    %% Line 1862
								    case _5396 of
								      %% Line 1863
								      <'true'> when 'true' ->
									  []
								      %% Line 1864
								      <'false'> when 'true' ->
									  apply 'new_in_all'/1
									      (Cs1)
								      ( <_cor40> when 'true' ->
									    primop 'match_fail'
										({'case_clause',_5396})
									-| ['compiler_generated'] )
								    end
								in  let <_cor45> =
									%% Line 1866
									{'a',Used,_cor41,Anno}
								    in  %% Line 1866
									{{'icase',_cor45,As1,Cs1,Fc1},St3}
					    ( <_cor36> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_12690})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor35> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_3407})
				    -| ['compiler_generated'] )
				end
			( <_cor34> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_5638})
			  -| ['compiler_generated'] )
		      end
	  %% Line 1867
	  <{'ifun',A0,Id,As,Cs0,Fc0,Name},Ks0,St0> when 'true' ->
	      let <_cor6> =
		  %% Line 2253
		  fun (_cor3,_22) ->
		      apply 'lit_vars'/2
			  (_cor3, _22)
	      in  let <Avs> =
		      %% Line 2253
		      call 'lists':'foldl'
			  (_cor6, [], As)
		  in  let <_cor49> =
			  %% Line 1869
			  case Name of
			    %% Line 1870
			    <'unnamed'> when 'true' ->
				_cor1
			    %% Line 1871
			    <{'named',FName}> when 'true' ->
				let <_cor47> =
				    call 'ordsets':'subtract'
					([FName|[]], Avs)
				in  call 'ordsets':'union'
					(_cor47, _cor1)
			    ( <_cor48> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',Name})
			      -| ['compiler_generated'] )
			  end
		      in  let <Ks2> =
			      %% Line 1873
			      call 'ordsets':'union'
				  (Avs, _cor49)
			  in  let <_4248> =
				  %% Line 1874
				  apply 'ufun_clauses'/3
				      (Cs0, Ks2, _cor0)
			      in  %% Line 1874
				  case _4248 of
				    <{Cs1,St1}> when 'true' ->
					let <_10796> =
					    %% Line 1875
					    apply 'ufun_clause'/3
						(Fc0, Ks2, St1)
					in  %% Line 1875
					    case _10796 of
					      <{Fc1,St2}> when 'true' ->
						  let <_cor54> =
						      %% Line 1876
						      apply 'used_in_any'/1
							  (Cs1)
						  in  let <_cor55> =
							  %% Line 1876
							  call 'ordsets':'intersection'
							      (_cor54, _cor49)
						      in  let <Used> =
							      %% Line 1876
							      call 'ordsets':'subtract'
								  (_cor55, Avs)
							  in  %% Line 1877
							      case A0 of
								<{'a',_rec71,_rec72,_rec73}> when 'true' ->
								    let <_cor59> =
									{'a',Used,[],_rec73}
								    in  %% Line 1878
									{{'ifun',_cor59,Id,As,Cs1,Fc1,Name},St2}
								( <_cor151> when 'true' ->
								      ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'error'
													     -| ['compiler_generated'] )
									    (( {'badrecord','a'}
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
							      end
					      ( <_cor53> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_10796})
						-| ['compiler_generated'] )
					    end
				    ( <_cor52> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_4248})
				      -| ['compiler_generated'] )
				  end
	  %% Line 1879
	  <{'iapply',A,Op,As},_cor152,St> when 'true' ->
	      let <_cor62> =
		  %% Line 2236
		  apply 'lit_vars'/2
		      (Op, [])
	      in  let <_cor6> =
		      %% Line 2253
		      fun (_cor3,_13886) ->
			  apply 'lit_vars'/2
			      (_cor3, _13886)
		  in  let <_cor61> =
			  %% Line 2253
			  call 'lists':'foldl'
			      (_cor6, [], As)
		      in  let <Used> =
			      %% Line 1880
			      call 'ordsets':'union'
				  (_cor62, _cor61)
			  in  %% Line 1881
			      case A of
				<{'a',_cor153,_cor154,_cor155}> when 'true' ->
				    let <_cor66> =
					call 'erlang':'setelement'
					    (2, A, Used)
				    in  {{'iapply',_cor66,Op,As},_cor0}
				( <_cor156> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','a'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
	  %% Line 1882
	  <{'iprimop',A,Name,As},_cor157,St> when 'true' ->
	      let <_cor6> =
		  %% Line 2253
		  fun (_cor3,_3078) ->
		      apply 'lit_vars'/2
			  (_cor3, _3078)
	      in  let <Used> =
		      %% Line 2253
		      call 'lists':'foldl'
			  (_cor6, [], As)
		  in  %% Line 1884
		      case A of
			<{'a',_cor158,_cor159,_cor160}> when 'true' ->
			    let <_cor70> =
				call 'erlang':'setelement'
				    (2, A, Used)
			    in  {{'iprimop',_cor70,Name,As},_cor0}
			( <_cor161> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','a'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
	  %% Line 1885
	  <{'icall',A,Mod,Name,As},_cor162,St> when 'true' ->
	      let <_cor71> =
		  %% Line 2236
		  apply 'lit_vars'/2
		      (Mod, [])
	      in  let <_cor72> =
		      %% Line 2236
		      apply 'lit_vars'/2
			  (Name, [])
		  in  let <_cor6> =
			  %% Line 2253
			  fun (_cor3,_8109) ->
			      apply 'lit_vars'/2
				  (_cor3, _8109)
		      in  let <_cor73> =
			      %% Line 2253
			      call 'lists':'foldl'
				  (_cor6, [], As)
			  in  let <Used> =
				  %% Line 1886
				  call 'ordsets':'union'
				      ([_cor71|[_cor72|[_cor73|[]]]])
			      in  %% Line 1887
				  case A of
				    <{'a',_cor163,_cor164,_cor165}> when 'true' ->
					let <_cor77> =
					    call 'erlang':'setelement'
						(2, A, Used)
					in  {{'icall',_cor77,Mod,Name,As},_cor0}
				    ( <_cor166> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','a'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
	  %% Line 1888
	  <{'itry',A,As0,Vs,Bs0,Evs,Hs0},Ks,St0> when 'true' ->
	      let <_12031> =
		  %% Line 1890
		  apply 'uexprs'/3
		      (As0, _cor1, _cor0)
	      in  %% Line 1890
		  case _12031 of
		    <{As1,St1}> when 'true' ->
			let <_8031> =
			    %% Line 1891
			    apply 'uexprs'/3
				(Bs0, _cor1, St1)
			in  %% Line 1891
			    case _8031 of
			      <{Bs1,St2}> when 'true' ->
				  let <_1087> =
				      %% Line 1892
				      apply 'uexprs'/3
					  (Hs0, _cor1, St2)
				  in  %% Line 1892
				      case _1087 of
					<{Hs1,St3}> when 'true' ->
					    let <_cor81> =
						%% Line 1893
						call 'erlang':'++'
						    (Hs1, As1)
					    in  let <_cor82> =
						    %% Line 1893
						    call 'erlang':'++'
							(Bs1, _cor81)
						in  let <_cor83> =
							%% Line 1893
							apply 'used_in_any'/1
							    (_cor82)
						    in  let <Used> =
							    %% Line 1893
							    call 'ordsets':'intersection'
								(_cor83, _cor1)
							in  let <_cor85> =
								%% Line 1894
								call 'erlang':'++'
								    (Bs1, Hs1)
							    in  let <New> =
								    %% Line 1894
								    apply 'new_in_all'/1
									(_cor85)
								in  %% Line 1895
								    case A of
								      <{'a',_rec78,_rec79,_rec80}> when 'true' ->
									  let <_cor89> =
									      {'a',Used,New,_rec80}
									  in  {{'itry',_cor89,As1,Vs,Bs1,Evs,Hs1},St3}
								      ( <_cor167> when 'true' ->
									    ( call ( 'erlang'
										     -| ['compiler_generated'] ):( 'error'
														   -| ['compiler_generated'] )
										  (( {'badrecord','a'}
										     -| ['compiler_generated'] ))
									      -| ['compiler_generated'] )
									-| ['compiler_generated'] )
								    end
					( <_cor80> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_1087})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor79> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_8031})
				-| ['compiler_generated'] )
			    end
		    ( <_cor78> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12031})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1897
	  <{'icatch',A,Es0},Ks,St0> when 'true' ->
	      let <_3784> =
		  %% Line 1898
		  apply 'uexprs'/3
		      (Es0, _cor1, _cor0)
	      in  %% Line 1898
		  case _3784 of
		    <{Es1,St1}> when 'true' ->
			let <_rec81> =
			    %% Line 1899
			    apply 'used_in_any'/1
				(Es1)
			in  %% Line 1899
			    case A of
			      <{'a',_cor168,_cor169,_cor170}> when 'true' ->
				  let <_cor94> =
				      call 'erlang':'setelement'
					  (2, A, _rec81)
				  in  {{'icatch',_cor94,Es1},St1}
			      ( <_cor171> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','a'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
		    ( <_cor90> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3784})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1900
	  <{'ireceive1',A,Cs0},Ks,St0> when 'true' ->
	      let <_9604> =
		  %% Line 1901
		  apply 'uclauses'/3
		      (Cs0, _cor1, _cor0)
	      in  %% Line 1901
		  case _9604 of
		    <{Cs1,St1}> when 'true' ->
			let <_rec83> =
			    %% Line 1902
			    apply 'used_in_any'/1
				(Cs1)
			in  let <_rec84> =
				%% Line 1902
				apply 'new_in_all'/1
				    (Cs1)
			    in  %% Line 1902
				case A of
				  <{'a',_rec86,_rec87,_rec88}> when 'true' ->
				      let <_cor100> =
					  {'a',_rec83,_rec84,_rec88}
				      in  {{'ireceive1',_cor100,Cs1},St1}
				  ( <_cor172> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','a'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
		    ( <_cor95> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_9604})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1904
	  <{'ireceive2',A,Cs0,Te0,Tes0},Ks,St0> when 'true' ->
	      let <_991> =
		  %% Line 1906
		  apply 'uexpr'/3
		      (Te0, _cor1, _cor0)
	      in  %% Line 1906
		  case _991 of
		    <{Te1,St1}> when 'true' ->
			let <_2537> =
			    %% Line 1907
			    apply 'uclauses'/3
				(Cs0, _cor1, St1)
			in  %% Line 1907
			    case _2537 of
			      <{Cs1,St2}> when 'true' ->
				  let <_2714> =
				      %% Line 1908
				      apply 'uexprs'/3
					  (Tes0, _cor1, St2)
				  in  %% Line 1908
				      case _2714 of
					<{Tes1,St3}> when 'true' ->
					    let <_cor104> =
						%% Line 1909
						apply 'used_in_any'/1
						    (Cs1)
					    in  let <_cor105> =
						    %% Line 1909
						    apply 'used_in_any'/1
							(Tes1)
						in  %% Line 1909
						    ( case %% Line 2316
							   call 'erlang':'element'
							       (2, Te1) of
							( <( {'a',_rec89,_cor173,_cor174}
							     -| ['compiler_generated'] )> when 'true' ->
							      let <Used> =
								  call 'ordsets':'union'
								      ([_cor104|[_cor105|[_rec89|[]]]])
							      in  let <_cor112> =
								      %% Line 1910
								      case Cs1 of
									%% Line 1911
									<[]> when 'true' ->
									    apply 'new_in_any'/1
										(Tes1)
									%% Line 1912
									<_cor176> when 'true' ->
									    let <_cor110> =
										apply 'new_in_all'/1
										    (Cs1)
									    in  let <_cor109> =
										    apply 'new_in_any'/1
											(Tes1)
										in  call 'ordsets':'intersection'
											(_cor110, _cor109)
								      end
								  in  %% Line 1914
								      case A of
									<{'a',_rec91,_rec92,_rec93}> when 'true' ->
									    let <_cor116> =
										{'a',Used,_cor112,_rec93}
									    in  {{'ireceive2',_cor116,Cs1,Te1,Tes1},St3}
									( <_cor177> when 'true' ->
									      ( call ( 'erlang'
										       -| ['compiler_generated'] ):( 'error'
														     -| ['compiler_generated'] )
										    (( {'badrecord','a'}
										       -| ['compiler_generated'] ))
										-| ['compiler_generated'] )
									  -| ['compiler_generated'] )
								      end
							  -| ['compiler_generated'] )
							( <_cor175> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','a'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
					( <_cor103> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_2714})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor102> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_2537})
				-| ['compiler_generated'] )
			    end
		    ( <_cor101> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_991})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1916
	  <{'iprotect',A,Es0},Ks,St0> when 'true' ->
	      let <_3644> =
		  %% Line 1917
		  apply 'uexprs'/3
		      (Es0, _cor1, _cor0)
	      in  %% Line 1917
		  case _3644 of
		    <{Es1,St1}> when 'true' ->
			let <Used> =
			    %% Line 1918
			    apply 'used_in_any'/1
				(Es1)
			in  %% Line 1919
			    case A of
			      <{'a',_cor178,_cor179,_cor180}> when 'true' ->
				  let <_cor121> =
				      call 'erlang':'setelement'
					  (2, A, Used)
				  in  {{'iprotect',_cor121,Es1},St1}
			      ( <_cor181> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','a'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
		    ( <_cor117> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3644})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1920
	  <{'ibinary',A,Ss},_cor182,St> when 'true' ->
	      let <Used> =
		  %% Line 2256
		  apply 'bitstr_vars'/2
		      (Ss, [])
	      in  %% Line 1922
		  case A of
		    <{'a',_cor183,_cor184,_cor185}> when 'true' ->
			let <_cor125> =
			    call 'erlang':'setelement'
				(2, A, Used)
			in  {{'ibinary',_cor125,Ss},_cor0}
		    ( <_cor186> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','a'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 1923
	  <Lit = {'c_literal',_cor187,_cor188},_cor189,St> when 'true' ->
	      let <Anno> =
		  %% Line 2316
		  call 'erlang':'element'
		      (2, _cor2)
	      in  let <_9497> =
		      %% Line 1925
		      {'a',[],[],Anno}
		  in  let <_cor127> =
			  %% Line 2320
			  call 'erlang':'setelement'
			      (2, _cor2, _9497)
		      in  %% Line 1925
			  {_cor127,_cor0}
	  %% Line 1926
	  <Lit,_cor190,St> when 'true' ->
	      let <_4058> =
		  %% Line 1927
		  apply 'is_simple'/1
		      (_cor2)
	      in  %% Line 1927
		  case _4058 of
		    <'true'> when 'true' ->
			let <Vs> =
			    %% Line 2236
			    apply 'lit_vars'/2
				(_cor2, [])
			in  let <Anno> =
				%% Line 2316
				call 'erlang':'element'
				    (2, _cor2)
			    in  let <_4777> =
				    %% Line 1930
				    {'a',Vs,[],Anno}
				in  let <_cor131> =
					%% Line 2320
					call 'erlang':'setelement'
					    (2, _cor2, _4777)
				    in  %% Line 1930
					{_cor131,_cor0}
		    ( <_cor128> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_4058})
		      -| ['compiler_generated'] )
		  end
	end
'ufun_clauses'/3 =
    %% Line 1937
    fun (_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 1938
	    fun (_cor4,_cor3) ->
		apply 'ufun_clause'/3
		    (_cor4, _cor1, _cor3)
	in  %% Line 1938
	    call 'lists':'mapfoldl'
		(_cor7, _cor0, _cor2)
'ufun_clause'/3 =
    %% Line 1942
    fun (_cor2,_cor1,_cor0) ->
	let <_429> =
	    %% Line 1943
	    apply 'uclause'/4
		(_cor2, [], _cor1, _cor0)
	in  %% Line 1943
	    case _429 of
	      <{Cl1,Pvs,Used,_cor17,St1}> when 'true' ->
		  let <A0> =
		      %% Line 1944
		      apply 'get_ianno'/1
			  (Cl1)
		  in  let <_cor5> =
			  %% Line 1945
			  call 'ordsets':'intersection'
			      (Used, _cor1)
		      in  let <_rec96> =
			      %% Line 1945
			      call 'ordsets':'subtract'
				  (_cor5, Pvs)
			  in  %% Line 1945
			      case A0 of
				<{'a',_rec98,_rec99,_rec100}> when 'true' ->
				    let <_cor9> =
					{'a',_rec96,[],_rec100}
				    in  %% Line 1946
					case Cl1 of
					  <{'iclause',_cor19,_cor20,_cor21,_cor22,_cor23}> when 'true' ->
					      let <_cor13> =
						  call 'erlang':'setelement'
						      (2, Cl1, _cor9)
					      in  {_cor13,St1}
					  ( <_cor24> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','iclause'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
				( <_cor18> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','a'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_429})
		-| ['compiler_generated'] )
	    end
'upattern'/3 =
    %% Line 1951
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'c_var',_cor46,'_'},_cor47,St0> when 'true' ->
	      let <_8915> =
		  %% Line 1952
		  apply 'new_var_name'/1
		      (_cor0)
	      in  %% Line 1952
		  case _8915 of
		    <{New,St1}> when 'true' ->
			%% Line 1953
			{{'c_var',[],New},[],[New|[]],[],St1}
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_8915})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1954
	  <Var = {'c_var',_cor48,V},Ks,St0> when 'true' ->
	      let <_10962> =
		  %% Line 1955
		  call 'ordsets':'is_element'
		      (V, _cor1)
	      in  %% Line 1955
		  case _10962 of
		    %% Line 1956
		    <'true'> when 'true' ->
			let <_10944> =
			    %% Line 1957
			    apply 'new_var_name'/1
				(_cor0)
			in  %% Line 1957
			    case _10944 of
			      <{N,St1}> when 'true' ->
				  let <New> = {%% Line 1958
				       'c_var',[],N}
				  in  let <_cor6> =
					  %% Line 1959
					  call 'ordsets':'add_element'
					      (N, [V|[]])
				      in  let <Test> =
					      %% Line 1959
					      {'icall',{'a',_cor6,[],[]},%% Line 1960
									 {'c_literal',[],'erlang'},%% Line 1961
												   {'c_literal',[],'=:='},%% Line 1962
															  [New|[_cor2|[]]]}
					  in  %% Line 1964
					      {New,[Test|[]],[N|[]],[],St1}
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_10944})
				-| ['compiler_generated'] )
			    end
		    %% Line 1965
		    <'false'> when 'true' ->
			{_cor2,[],[V|[]],[],_cor0}
		    ( <_cor8> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_10962})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1967
	  <Cons = {'c_cons',_cor49,H0,T0},Ks,St0> when 'true' ->
	      let <_1143> =
		  %% Line 1968
		  apply 'upattern'/3
		      (H0, _cor1, _cor0)
	      in  %% Line 1968
		  case _1143 of
		    <{H1,Hg,Hv,Hu,St1}> when 'true' ->
			let <_cor10> =
			    %% Line 1969
			    call 'ordsets':'union'
				(Hv, _cor1)
			in  let <_12241> =
				%% Line 1969
				apply 'upattern'/3
				    (T0, _cor10, St1)
			    in  %% Line 1969
				case _12241 of
				  <{T1,Tg,Tv,Tu,St2}> when 'true' ->
				      let <_cor17> =
					  %% Line 1970
					  {'c_cons',_cor49,H1,T1}
				      in  let <_cor14> =
					      %% Line 1970
					      call 'erlang':'++'
						  (Hg, Tg)
					  in  let <_cor13> =
						  %% Line 1970
						  call 'ordsets':'union'
						      (Hv, Tv)
					      in  let <_cor12> =
						      %% Line 1970
						      call 'ordsets':'union'
							  (Hu, Tu)
						  in  %% Line 1970
						      {_cor17,_cor14,_cor13,_cor12,St2}
				  ( <_cor11> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_12241})
				    -| ['compiler_generated'] )
				end
		    ( <_cor9> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1143})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1971
	  <Tuple = {'c_tuple',_cor51,Es0},Ks,St0> when 'true' ->
	      let <_6272> =
		  %% Line 1972
		  apply 'upattern_list'/3
		      (Es0, _cor1, _cor0)
	      in  %% Line 1972
		  case _6272 of
		    <{Es1,Esg,Esv,Eus,St1}> when 'true' ->
			let <_cor21> =
			    %% Line 1973
			    call 'erlang':'setelement'
				(3, _cor2, Es1)
			in  %% Line 1973
			    {_cor21,Esg,Esv,Eus,St1}
		    ( <_cor18> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_6272})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1974
	  <Map = {'c_map',_cor55,_cor56,Es0},Ks,St0> when 'true' ->
	      let <_13271> =
		  %% Line 1975
		  apply 'upattern_list'/3
		      (Es0, _cor1, _cor0)
	      in  %% Line 1975
		  case _13271 of
		    <{Es1,Esg,Esv,Eus,St1}> when 'true' ->
			let <_cor25> =
			    %% Line 1976
			    call 'erlang':'setelement'
				(4, _cor2, Es1)
			in  %% Line 1976
			    {_cor25,Esg,Esv,Eus,St1}
		    ( <_cor22> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_13271})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1977
	  <MapPair = {'c_map_pair',_cor61,{'c_literal',_cor62,'exact'},_cor63,V0},Ks,St0> when 'true' ->
	      let <_4059> =
		  %% Line 1978
		  apply 'upattern'/3
		      (V0, _cor1, _cor0)
	      in  %% Line 1978
		  case _4059 of
		    <{V,Vg,Vv,Vu,St1}> when 'true' ->
			let <_cor29> =
			    %% Line 1979
			    call 'erlang':'setelement'
				(5, _cor2, V)
			in  %% Line 1979
			    {_cor29,Vg,Vv,Vu,St1}
		    ( <_cor26> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_4059})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1980
	  <Bin = {'c_binary',_cor69,Es0},Ks,St0> when 'true' ->
	      let <_4835> =
		  %% Line 1981
		  apply 'upat_bin'/3
		      (Es0, _cor1, _cor0)
	      in  %% Line 1981
		  case _4835 of
		    <{Es1,Esg,Esv,Eus,St1}> when 'true' ->
			let <_cor33> =
			    %% Line 1982
			    call 'erlang':'setelement'
				(3, _cor2, Es1)
			in  %% Line 1982
			    {_cor33,Esg,Esv,Eus,St1}
		    ( <_cor30> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_4835})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1983
	  <Alias = {'c_alias',_cor73,V0,P0},Ks,St0> when 'true' ->
	      let <_3566> =
		  %% Line 1984
		  apply 'upattern'/3
		      (V0, _cor1, _cor0)
	      in  %% Line 1984
		  case _3566 of
		    <{V1,Vg,Vv,Vu,St1}> when 'true' ->
			let <_cor35> =
			    %% Line 1985
			    call 'ordsets':'union'
				(Vv, _cor1)
			in  let <_15575> =
				%% Line 1985
				apply 'upattern'/3
				    (P0, _cor35, St1)
			    in  %% Line 1985
				case _15575 of
				  <{P1,Pg,Pv,Pu,St2}> when 'true' ->
				      let <_cor42> =
					  %% Line 1986
					  {'c_alias',_cor73,V1,P1}
				      in  let <_cor39> =
					      %% Line 1986
					      call 'erlang':'++'
						  (Vg, Pg)
					  in  let <_cor38> =
						  %% Line 1986
						  call 'ordsets':'union'
						      (Vv, Pv)
					      in  let <_cor37> =
						      %% Line 1986
						      call 'ordsets':'union'
							  (Vu, Pu)
						  in  %% Line 1986
						      {_cor42,_cor39,_cor38,_cor37,St2}
				  ( <_cor36> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_15575})
				    -| ['compiler_generated'] )
				end
		    ( <_cor34> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3566})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1987
	  <Other,_cor75,St> when 'true' ->
	      {_cor2,[],[],[],_cor0}
	end
'upattern_list'/3 =
    %% Line 1992
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[P0|Ps0],Ks,St0> when 'true' ->
	      let <_1248> =
		  %% Line 1993
		  apply 'upattern'/3
		      (P0, _cor1, _cor0)
	      in  %% Line 1993
		  case _1248 of
		    <{P1,Pg,Pv,Pu,St1}> when 'true' ->
			let <_cor4> =
			    %% Line 1994
			    call 'ordsets':'union'
				(Pv, _cor1)
			in  let <_3837> =
				%% Line 1994
				apply 'upattern_list'/3
				    (Ps0, _cor4, St1)
			    in  %% Line 1994
				case _3837 of
				  <{Ps1,Psg,Psv,Psu,St2}> when 'true' ->
				      let <_cor8> =
					  %% Line 1995
					  call 'erlang':'++'
					      (Pg, Psg)
				      in  let <_cor7> =
					      %% Line 1995
					      call 'ordsets':'union'
						  (Pv, Psv)
					  in  let <_cor6> =
						  %% Line 1995
						  call 'ordsets':'union'
						      (Pu, Psu)
					      in  %% Line 1995
						  {[P1|Ps1],_cor8,_cor7,_cor6,St2}
				  ( <_cor5> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_3837})
				    -| ['compiler_generated'] )
				end
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1248})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1996
	  <[],_cor12,St> when 'true' ->
	      {[],[],[],[],_cor0}
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'upattern_list',3}}] )
	    -| ['compiler_generated'] )
	end
'upat_bin'/3 =
    %% Line 2000
    fun (_cor2,_cor1,_cor0) ->
	let <_12471> =
	    %% Line 2001
	    apply 'upat_bin'/4
		(_cor2, _cor1, [], _cor0)
	in  %% Line 2001
	    case _12471 of
	      <{Es1,Pg,Pv,Pu0,St1}> when 'true' ->
		  let <_cor4> =
		      %% Line 2014
		      call 'ordsets':'intersection'
			  (Pv, Pu0)
		  in  let <Pu1> =
			  %% Line 2014
			  call 'ordsets':'subtract'
			      (Pu0, _cor4)
		      in  %% Line 2015
			  {Es1,Pg,Pv,Pu1,St1}
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_12471})
		-| ['compiler_generated'] )
	    end
'upat_bin'/4 =
    %% Line 2019
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[P0|Ps0],Ks,Bs,St0> when 'true' ->
	      let <_5999> =
		  %% Line 2020
		  apply 'upat_element'/4
		      (P0, _cor2, _cor1, _cor0)
	      in  %% Line 2020
		  case _5999 of
		    <{P1,Pg,Pv,Pu,Bs1,St1}> when 'true' ->
			let <_cor5> =
			    %% Line 2021
			    call 'ordsets':'union'
				(Pv, _cor2)
			in  let <_767> =
				%% Line 2021
				apply 'upat_bin'/4
				    (Ps0, _cor5, Bs1, St1)
			    in  %% Line 2021
				case _767 of
				  <{Ps1,Psg,Psv,Psu,St2}> when 'true' ->
				      let <_cor9> =
					  %% Line 2022
					  call 'erlang':'++'
					      (Pg, Psg)
				      in  let <_cor8> =
					      %% Line 2022
					      call 'ordsets':'union'
						  (Pv, Psv)
					  in  let <_cor7> =
						  %% Line 2022
						  call 'ordsets':'union'
						      (Pu, Psu)
					      in  %% Line 2022
						  {[P1|Ps1],_cor9,_cor8,_cor7,St2}
				  ( <_cor6> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_767})
				    -| ['compiler_generated'] )
				end
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_5999})
		      -| ['compiler_generated'] )
		  end
	  %% Line 2023
	  <[],_cor14,_cor15,St> when 'true' ->
	      {[],[],[],[],_cor0}
	  ( <_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'upat_bin',4}}] )
	    -| ['compiler_generated'] )
	end
'upat_element'/4 =
    %% Line 2028
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Seg = {'c_bitstr',_cor20,H0,Sz0,_cor21,_cor22,_cor23},Ks,Bs0,St0> when 'true' ->
	      let <_9611> =
		  %% Line 2029
		  apply 'upattern'/3
		      (H0, _cor2, _cor0)
	      in  %% Line 2029
		  case _9611 of
		    <{H1,Hg,Hv,[],St1}> when 'true' ->
			let <_cor7> =
			    %% Line 2030
			    case H0 of
			      %% Line 2031
			      <{'c_var',_cor24,Hname}> when 'true' ->
				  %% Line 2032
				  case H1 of
				    %% Line 2033
				    <{'c_var',_cor25,_cor26}>
					when call 'erlang':'=:='
					      (_cor26,
					       Hname) ->
					_cor1
				    %% Line 2035
				    <{'c_var',_cor27,Other}> when 'true' ->
					%% Line 2036
					[{Hname,Other}|_cor1]
				    ( <_cor5> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',H1})
				      -| ['compiler_generated'] )
				  end
			      %% Line 2038
			      <_cor28> when 'true' ->
				  _cor1
			    end
			in  let <_cor10> =
				%% Line 2041
				case Sz0 of
				  %% Line 2042
				  <{'c_var',_cor29,Vname}> when 'true' ->
				      %% Line 2043
				      apply 'rename_bitstr_size'/2
					  (Vname, _cor1)
				  %% Line 2044
				  <_X_Other> when 'true' ->
				      %% Line 2045
				      {Sz0,[]}
				end
			    in  %% Line 2041
				case _cor10 of
				  <{Sz1,Us}> when 'true' ->
				      let <_cor13> =
					  %% Line 2047
					  call 'erlang':'setelement'
					      (4, _cor3, Sz1)
				      in  let <_cor15> =
					      %% Line 2047
					      call 'erlang':'setelement'
						  (3, _cor13, H1)
					  in  %% Line 2047
					      {_cor15,Hg,Hv,Us,_cor7,St1}
				  ( <_cor11> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor10})
				    -| ['compiler_generated'] )
				end
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_9611})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor19,_cor18,_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'upat_element',4}}] )
	    -| ['compiler_generated'] )
	end
'rename_bitstr_size'/2 =
    %% Line 2049
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <V,[{_cor6,N}|_cor7]>
	      when call 'erlang':'=:='
		    (_cor6,
		     _cor1) ->
	      let <New> = {%% Line 2050
		   'c_var',[],N}
	      in  %% Line 2051
		  {New,[N|[]]}
	  %% Line 2052
	  <V,[_cor8|Rest]> when 'true' ->
	      %% Line 2053
	      apply 'rename_bitstr_size'/2
		  (_cor1, Rest)
	  %% Line 2054
	  <V,[]> when 'true' ->
	      let <Old> = {%% Line 2055
		   'c_var',[],_cor1}
	      in  %% Line 2056
		  {Old,[_cor1|[]]}
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'rename_bitstr_size',2}}] )
	    -| ['compiler_generated'] )
	end
'used_in_any'/1 =
    %% Line 2058
    fun (_cor0) ->
	let <_cor7> =
	    %% Line 2059
	    fun (_cor4,_cor3) ->
		( case %% Line 2316
		       call 'erlang':'element'
			   (2, _cor4) of
		    ( <( {'a',_rec115,_cor9,_cor10}
			 -| ['compiler_generated'] )> when 'true' ->
			  call 'ordsets':'union'
			      (_rec115, _cor3)
		      -| ['compiler_generated'] )
		    ( <_cor11> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','a'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
	in  %% Line 2059
	    call 'lists':'foldl'
		(_cor7, %% Line 2060
			[], _cor0)
'new_in_any'/1 =
    %% Line 2062
    fun (_cor0) ->
	let <_cor7> =
	    %% Line 2063
	    fun (_cor4,_cor3) ->
		( case %% Line 2316
		       call 'erlang':'element'
			   (2, _cor4) of
		    ( <( {'a',_cor9,_rec116,_cor10}
			 -| ['compiler_generated'] )> when 'true' ->
			  call 'ordsets':'union'
			      (_rec116, _cor3)
		      -| ['compiler_generated'] )
		    ( <_cor11> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','a'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
	in  %% Line 2063
	    call 'lists':'foldl'
		(_cor7, %% Line 2064
			[], _cor0)
'new_in_all'/1 =
    %% Line 2066
    fun (_cor0) ->
	case _cor0 of
	  <[Le|Les]> when 'true' ->
	      let <_cor9> =
		  %% Line 2067
		  fun (_cor6,_cor5) ->
		      ( case %% Line 2316
			     call 'erlang':'element'
				 (2, _cor6) of
			  ( <( {'a',_cor11,_rec117,_cor12}
			       -| ['compiler_generated'] )> when 'true' ->
				call 'ordsets':'intersection'
				    (_rec117, _cor5)
			    -| ['compiler_generated'] )
			  ( <_cor13> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','a'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	      in  %% Line 2068
		  ( case %% Line 2316
			 call 'erlang':'element'
			     (2, Le) of
		      ( <( {'a',_cor14,_rec118,_cor15}
			   -| ['compiler_generated'] )> when 'true' ->
			    call 'lists':'foldl'
				(_cor9, _rec118, Les)
			-| ['compiler_generated'] )
		      ( <_cor16> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','a'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 2069
	  <[]> when 'true' ->
	      []
	  ( <_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'new_in_all',1}}] )
	    -| ['compiler_generated'] )
	end
'cbody'/2 =
    %% Line 2076
    fun (_cor1,_cor0) ->
	let <_5600> =
	    %% Line 2077
	    apply 'cexpr'/3
		(_cor1, [], _cor0)
	in  %% Line 2077
	    case _5600 of
	      <{B1,_cor5,_cor6,St1}> when 'true' ->
		  %% Line 2078
		  {B1,St1}
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_5600})
		-| ['compiler_generated'] )
	    end
'cclause'/3 =
    %% Line 2083
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'iclause',{'a',_cor8,_cor9,Anno},Ps,_cor10,G0,B0},Exp,St0> when 'true' ->
	      let <_3664> =
		  %% Line 2084
		  apply 'cexprs'/3
		      (B0, _cor1, _cor0)
	      in  %% Line 2084
		  case _3664 of
		    <{B1,_X_Us1,St1}> when 'true' ->
			let <_6638> =
			    %% Line 2085
			    apply 'cguard'/2
				(G0, St1)
			in  %% Line 2085
			    case _6638 of
			      <{G1,St2}> when 'true' ->
				  %% Line 2086
				  {{'c_clause',Anno,Ps,G1,B1},St2}
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_6638})
				-| ['compiler_generated'] )
			    end
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3664})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'cclause',3}}] )
	    -| ['compiler_generated'] )
	end
'cclauses'/3 =
    %% Line 2088
    fun (_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 2089
	    fun (_cor4,_cor3) ->
		apply 'cclause'/3
		    (_cor4, _cor1, _cor3)
	in  %% Line 2089
	    call 'lists':'mapfoldl'
		(_cor7, _cor0, _cor2)
'cguard'/2 =
    %% Line 2091
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],St> when 'true' ->
	      {{'c_literal',[],'true'},_cor0}
	  %% Line 2092
	  <Gs,St0> when 'true' ->
	      let <_15242> =
		  %% Line 2093
		  apply 'cexprs'/3
		      (_cor1, [], _cor0)
	      in  %% Line 2093
		  case _15242 of
		    <{G,_cor5,St1}> when 'true' ->
			%% Line 2094
			{G,St1}
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_15242})
		      -| ['compiler_generated'] )
		  end
	end
'cexprs'/3 =
    %% Line 2100
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[Iset = {'iset',_cor29,Var = {'c_var',_cor30,Name},_cor31}|[]],As,St> when 'true' ->
	      let <_rec119> =
		  %% Line 2102
		  {'a',[Name|[]],[],[]}
	      in  let <_cor6> =
		      %% Line 2102
		      call 'erlang':'setelement'
			  (2, Var, _rec119)
		  in  %% Line 2102
		      apply 'cexprs'/3
			  ([Iset|[_cor6|[]]], _cor1, _cor0)
	  %% Line 2103
	  <[Le|[]],As,St0> when 'true' ->
	      let <_1420> =
		  %% Line 2104
		  apply 'cexpr'/3
		      (Le, _cor1, _cor0)
	      in  %% Line 2104
		  case _1420 of
		    <{Ce,Es,Us,St1}> when 'true' ->
			let <Exp> =
			    ( letrec
				  'lc$^0'/1 =
				      fun (_cor3) ->
					  case _cor3 of
					    <[V|_1000]> when 'true' ->
						let <_cor4> =
						    apply 'lc$^0'/1
							(_1000)
						in  ( [{'c_var',[],V}|_cor4]
						      -| ['compiler_generated'] )
					    <[]> when 'true' ->
						[]
					    ( <_14545> when 'true' ->
						  primop 'match_fail'
						      ({'function_clause',_cor3})
					      -| ['compiler_generated'] )
					  end
			      in  case _cor1 of
				    <[V|_1000]> when 'true' ->
					let <_cor4> =
					    apply 'lc$^0'/1
						(_1000)
					in  ( [{'c_var',[],V}|_cor4]
					      -| ['compiler_generated'] )
				    <[]> when 'true' ->
					[]
				    ( <_14545> when 'true' ->
					  primop 'match_fail'
					      ({'function_clause',_cor1})
				      -| ['compiler_generated'] )
				  end
			      -| ['list_comprehension'] )
			in  %% Line 2106
			    case <> of
			      %% Line 2107
			      <>
				  when call 'erlang':'=:='
					(Es,
					 []) ->
				  let <_cor10> =
				      call 'core_lib':'make_values'
					  ([Ce|Exp])
				  in  let <_cor9> =
					  call 'ordsets':'union'
					      (Us, _cor1)
				      in  {_cor10,_cor9,St1}
			      %% Line 2108
			      <> when 'true' ->
				  let <_12468> =
				      apply 'new_var_name'/1
					  (St1)
				  in  case _12468 of
					<{New,St}> when 'true' ->
					    let <R,St2> = <{'c_var',[],New},St>
					    in  let <_cor15> =
						    %% Line 2110
						    apply 'get_lineno_anno'/1
							(Ce)
						in  let <_cor14> =
							( letrec
							      'lc$^0'/1 =
								  fun (_cor3) ->
								      case _cor3 of
									<[V|_3776]> when 'true' ->
									    let <_cor4> =
										apply 'lc$^0'/1
										    (_3776)
									    in  ( [{'c_var',[],V}|_cor4]
										  -| ['compiler_generated'] )
									<[]> when 'true' ->
									    []
									( <_14545> when 'true' ->
									      primop 'match_fail'
										  ({'function_clause',_cor3})
									  -| ['compiler_generated'] )
								      end
							  in  case Es of
								<[V|_3776]> when 'true' ->
								    let <_cor4> =
									apply 'lc$^0'/1
									    (_3776)
								    in  ( [{'c_var',[],V}|_cor4]
									  -| ['compiler_generated'] )
								<[]> when 'true' ->
								    []
								( <_14545> when 'true' ->
								      primop 'match_fail'
									  ({'function_clause',Es})
								  -| ['compiler_generated'] )
							      end
							  -| ['list_comprehension'] )
						    in  let <_cor13> =
							    %% Line 2112
							    call 'core_lib':'make_values'
								([R|Exp])
							in  let <_cor12> =
								%% Line 2113
								call 'ordsets':'union'
								    (Us, _cor1)
							    in  %% Line 2110
								{{'c_let',_cor15,%% Line 2111
										 [R|_cor14],Ce,_cor13},_cor12,St2}
					( <_14515> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_12468})
					  -| ['compiler_generated'] )
				      end
			    end
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1420})
		      -| ['compiler_generated'] )
		  end
	  %% Line 2115
	  <[{'iset',{'a',_cor35,_cor36,A},V,A0}|Les],As0,St0> when 'true' ->
	      let <_14333> =
		  %% Line 2116
		  apply 'cexprs'/3
		      (Les, _cor1, _cor0)
	      in  %% Line 2116
		  case _14333 of
		    <{Ces,As1,St1}> when 'true' ->
			let <_11219> =
			    %% Line 2117
			    apply 'cexpr'/3
				(A0, As1, St1)
			in  %% Line 2117
			    case _11219 of
			      <{A1,Es,Us,St2}> when 'true' ->
				  let <_cor19> =
				      ( letrec
					    'lc$^0'/1 =
						fun (_cor3) ->
						    case _cor3 of
						      <[_9481|_15894]> when 'true' ->
							  let <_cor4> =
							      apply 'lc$^0'/1
								  (_15894)
							  in  ( [{'c_var',[],_9481}|_cor4]
								-| ['compiler_generated'] )
						      <[]> when 'true' ->
							  []
						      ( <_14545> when 'true' ->
							    primop 'match_fail'
								({'function_clause',_cor3})
							-| ['compiler_generated'] )
						    end
					in  case Es of
					      <[_9481|_15894]> when 'true' ->
						  let <_cor4> =
						      apply 'lc$^0'/1
							  (_15894)
						  in  ( [{'c_var',[],_9481}|_cor4]
							-| ['compiler_generated'] )
					      <[]> when 'true' ->
						  []
					      ( <_14545> when 'true' ->
						    primop 'match_fail'
							({'function_clause',Es})
						-| ['compiler_generated'] )
					    end
					-| ['list_comprehension'] )
				  in  let <_cor18> =
					  %% Line 2119
					  call 'ordsets':'union'
					      (Us, As1)
				      in  %% Line 2118
					  {{'c_let',A,[V|_cor19],A1,Ces},_cor18,St2}
			      ( <_cor17> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_11219})
				-| ['compiler_generated'] )
			    end
		    ( <_cor16> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_14333})
		      -| ['compiler_generated'] )
		  end
	  %% Line 2120
	  <[Le|Les],As0,St0> when 'true' ->
	      let <_7424> =
		  %% Line 2121
		  apply 'cexprs'/3
		      (Les, _cor1, _cor0)
	      in  %% Line 2121
		  case _7424 of
		    <{Ces,As1,St1}> when 'true' ->
			let <_14367> =
			    %% Line 2122
			    apply 'cexpr'/3
				(Le, As1, St1)
			in  %% Line 2122
			    case _14367 of
			      <{Ce,Es,Us,St2}> when 'true' ->
				  %% Line 2123
				  case <> of
				    %% Line 2124
				    <>
					when call 'erlang':'=:='
					      (Es,
					       []) ->
					let <_cor22> =
					    %% Line 2125
					    call 'ordsets':'union'
						(Us, As1)
					in  %% Line 2125
					    {{'c_seq',[],Ce,Ces},_cor22,St2}
				    %% Line 2126
				    <> when 'true' ->
					let <_12468> =
					    apply 'new_var_name'/1
						(St2)
					in  case _12468 of
					      <{New,St}> when 'true' ->
						  let <R,St3> = <{'c_var',[],New},St>
						  in  let <_cor25> =
							  ( letrec
								'lc$^0'/1 =
								    fun (_cor3) ->
									case _cor3 of
									  <[V|_16431]> when 'true' ->
									      let <_cor4> =
										  apply 'lc$^0'/1
										      (_16431)
									      in  ( [{'c_var',[],V}|_cor4]
										    -| ['compiler_generated'] )
									  <[]> when 'true' ->
									      []
									  ( <_14545> when 'true' ->
										primop 'match_fail'
										    ({'function_clause',_cor3})
									    -| ['compiler_generated'] )
									end
							    in  case Es of
								  <[V|_16431]> when 'true' ->
								      let <_cor4> =
									  apply 'lc$^0'/1
									      (_16431)
								      in  ( [{'c_var',[],V}|_cor4]
									    -| ['compiler_generated'] )
								  <[]> when 'true' ->
								      []
								  ( <_14545> when 'true' ->
									primop 'match_fail'
									    ({'function_clause',Es})
								    -| ['compiler_generated'] )
								end
							    -| ['list_comprehension'] )
						      in  let <_cor24> =
							      %% Line 2129
							      call 'ordsets':'union'
								  (Us, As1)
							  in  %% Line 2128
							      {{'c_let',[],[R|_cor25],Ce,Ces},_cor24,St3}
					      ( <_3864> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_12468})
						-| ['compiler_generated'] )
					    end
				  end
			      ( <_cor21> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_14367})
				-| ['compiler_generated'] )
			    end
		    ( <_cor20> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_7424})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor28,_cor27,_cor26> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'cexprs',3}}] )
	    -| ['compiler_generated'] )
	end
'cexpr'/3 =
    %% Line 2134
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'iletrec',A,Fs0,B0},As,St0> when 'true' ->
	      let <_cor9> =
		  %% Line 2135
		  fun (_cor6,_cor5) ->
		      case <_cor6,_cor5> of
			<{NA = {_X_Name,_X_Arity},F0},{Used,S0}> when 'true' ->
			    let <_1650> =
				%% Line 2136
				apply 'cexpr'/3
				    (F0, [], S0)
			    in  %% Line 2136
				case _1650 of
				  <{F1,[],Us,S1}> when 'true' ->
				      let <_cor4> =
					  %% Line 2138
					  call 'ordsets':'union'
					      (Us, Used)
				      in  %% Line 2137
					  {{{'c_var',[],NA},F1},%% Line 2138
								{_cor4,S1}}
				  ( <_cor3> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_1650})
				    -| ['compiler_generated'] )
				end
			( <_cor8,_cor7> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor6,_cor5})
				-| [{'function_name',{'-cexpr/3-fun-0-',2}}] )
			  -| ['compiler_generated'] )
		      end
	      in  let <_15509> =
		      %% Line 2135
		      call 'lists':'mapfoldl'
			  (_cor9, %% Line 2139
				  {[],_cor0}, Fs0)
		  in  %% Line 2135
		      case _15509 of
			<{Fs1,{_cor126,St1}}> when 'true' ->
			    %% Line 2140
			    ( case A of
				( <( {'a',_cor127,_rec121,_cor128}
				     -| ['compiler_generated'] )> when 'true' ->
				      let <Exp> =
					  call 'ordsets':'intersection'
					      (_rec121, _cor1)
				      in  let <_4694> =
					      %% Line 2141
					      apply 'cexprs'/3
						  (B0, Exp, St1)
					  in  %% Line 2141
					      case _4694 of
						<{B1,_X_Us,St2}> when 'true' ->
						    %% Line 2142
						    {{'c_letrec',_cor128,Fs1,B1},Exp,_cor127,St2}
						( <_cor14> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_4694})
						  -| ['compiler_generated'] )
					      end
				  -| ['compiler_generated'] )
				( <_cor129> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','a'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			( <_cor10> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_15509})
			  -| ['compiler_generated'] )
		      end
	  %% Line 2143
	  <{'icase',A,Largs,Lcs,Lfc},As,St0> when 'true' ->
	      %% Line 2144
	      ( case A of
		  ( <( {'a',_cor136,_rec124,_cor137}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Exp> =
			    call 'ordsets':'intersection'
				(_rec124, _cor1)
			in  let <_cor27> =
				%% Line 2145
				fun (_cor24,_cor23) ->
				    case <_cor24,_cor23> of
				      <La,{Cas,Sta}> when 'true' ->
					  let <_5024> =
					      %% Line 2146
					      apply 'cexpr'/3
						  (_cor24, _cor1, Sta)
					  in  %% Line 2146
					      case _5024 of
						<{Ca,[],_X_Us1,Stb}> when 'true' ->
						    %% Line 2147
						    {[Ca|Cas],Stb}
						( <_cor22> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_5024})
						  -| ['compiler_generated'] )
					      end
				      ( <_cor26,_cor25> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor24,_cor23})
					      -| [{'function_name',{'-cexpr/3-fun-1-',2}}] )
					-| ['compiler_generated'] )
				    end
			    in  let <_12847> =
				    %% Line 2145
				    call 'lists':'foldr'
					(_cor27, %% Line 2148
						 {[],_cor0}, Largs)
				in  %% Line 2145
				    case _12847 of
				      <{Cargs,St1}> when 'true' ->
					  let <_9427> =
					      %% Line 2149
					      apply 'cclauses'/3
						  (Lcs, Exp, St1)
					  in  %% Line 2149
					      case _9427 of
						<{Ccs,St2}> when 'true' ->
						    let <_12632> =
							%% Line 2150
							apply 'cclause'/3
							    (Lfc, [], St2)
						    in  %% Line 2150
							case _12632 of
							  <{Cfc,St3}> when 'true' ->
							      let <_cor34> =
								  %% Line 2152
								  call 'core_lib':'make_values'
								      (Cargs)
							      in  let <_cor33> =
								      %% Line 2152
								      call 'erlang':'++'
									  (Ccs, [Cfc|[]])
								  in  %% Line 2151
								      {{'c_case',_cor137,_cor34,_cor33},Exp,_cor136,St3}
							  ( <_cor30> when 'true' ->
								primop 'match_fail'
								    ({'badmatch',_12632})
							    -| ['compiler_generated'] )
							end
						( <_cor29> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_9427})
						  -| ['compiler_generated'] )
					      end
				      ( <_cor28> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_12847})
					-| ['compiler_generated'] )
				    end
		    -| ['compiler_generated'] )
		  ( <_cor138> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','a'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2154
	  <{'ireceive1',A,Lcs},As,St0> when 'true' ->
	      %% Line 2155
	      ( case A of
		  ( <( {'a',_cor145,_rec127,_cor146}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Exp> =
			    call 'ordsets':'intersection'
				(_rec127, _cor1)
			in  let <_4802> =
				%% Line 2156
				apply 'cclauses'/3
				    (Lcs, Exp, _cor0)
			    in  %% Line 2156
				case _4802 of
				  <{Ccs,St1}> when 'true' ->
				      %% Line 2157
				      {{'c_receive',_cor146,Ccs,%% Line 2159
								{'c_literal',[],'infinity'},%% Line 2159
											    {'c_literal',[],'true'}},Exp,_cor145,St1}
				  ( <_cor40> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_4802})
				    -| ['compiler_generated'] )
				end
		    -| ['compiler_generated'] )
		  ( <_cor147> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','a'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2161
	  <{'ireceive2',A,Lcs,Lto,Les},As,St0> when 'true' ->
	      %% Line 2162
	      ( case A of
		  ( <( {'a',_cor154,_rec130,_cor155}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Exp> =
			    call 'ordsets':'intersection'
				(_rec130, _cor1)
			in  let <_14948> =
				%% Line 2163
				apply 'cexpr'/3
				    (Lto, _cor1, _cor0)
			    in  %% Line 2163
				case _14948 of
				  <{Cto,[],_X_Us1,St1}> when 'true' ->
				      let <_6407> =
					  %% Line 2164
					  apply 'cclauses'/3
					      (Lcs, Exp, St1)
				      in  %% Line 2164
					  case _6407 of
					    <{Ccs,St2}> when 'true' ->
						let <_64> =
						    %% Line 2165
						    apply 'cexprs'/3
							(Les, Exp, St2)
						in  %% Line 2165
						    case _64 of
						      <{Ces,_X_Us2,St3}> when 'true' ->
							  %% Line 2166
							  {{'c_receive',_cor155,Ccs,Cto,Ces},Exp,_cor154,St3}
						      ( <_cor50> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_64})
							-| ['compiler_generated'] )
						    end
					    ( <_cor49> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_6407})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor48> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_14948})
				    -| ['compiler_generated'] )
				end
		    -| ['compiler_generated'] )
		  ( <_cor156> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','a'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2169
	  <{'itry',A,La,Vs,Lb,Evs,Lh},As,St0> when 'true' ->
	      %% Line 2170
	      ( case A of
		  ( <( {'a',_cor163,_rec133,_cor164}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Exp> =
			    call 'ordsets':'intersection'
				(_rec133, _cor1)
			in  let <_12276> =
				%% Line 2171
				apply 'cexprs'/3
				    (La, [], _cor0)
			    in  %% Line 2171
				case _12276 of
				  <{Ca,_X_Us1,St1}> when 'true' ->
				      let <_9803> =
					  %% Line 2172
					  apply 'cexprs'/3
					      (Lb, Exp, St1)
				      in  %% Line 2172
					  case _9803 of
					    <{Cb,_X_Us2,St2}> when 'true' ->
						let <_15443> =
						    %% Line 2173
						    apply 'cexprs'/3
							(Lh, Exp, St2)
						in  %% Line 2173
						    case _15443 of
						      <{Ch,_X_Us3,St3}> when 'true' ->
							  %% Line 2174
							  {{'c_try',_cor164,Ca,Vs,Cb,Evs,Ch},Exp,_cor163,St3}
						      ( <_cor60> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_15443})
							-| ['compiler_generated'] )
						    end
					    ( <_cor59> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_9803})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor58> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_12276})
				    -| ['compiler_generated'] )
				end
		    -| ['compiler_generated'] )
		  ( <_cor165> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','a'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2176
	  <{'icatch',A,Les},_X_As,St0> when 'true' ->
	      let <_5475> =
		  %% Line 2177
		  apply 'cexprs'/3
		      (Les, [], _cor0)
	      in  %% Line 2177
		  case _5475 of
		    <{Ces,_X_Us1,St1}> when 'true' ->
			%% Line 2178
			( case A of
			    ( <( {'a',_rec136,_cor172,_cor173}
				 -| ['compiler_generated'] )> when 'true' ->
				  {{'c_catch',[],Ces},[],_rec136,St1}
			      -| ['compiler_generated'] )
			    ( <_cor174> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','a'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    ( <_cor65> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_5475})
		      -| ['compiler_generated'] )
		  end
	  %% Line 2179
	  <Fun = {'ifun',_cor175,_cor176,_cor177,_cor178,_cor179,'unnamed'},As,St0> when 'true' ->
	      %% Line 2180
	      apply 'cfun'/3
		  (_cor2, _cor1, _cor0)
	  %% Line 2181
	  <Fun0 = {'ifun',A0 = {'a',Us0,_cor180,_cor181},_cor182,_cor183,_cor184,{'iclause',_cor185,Ps,_cor186,_cor187,_cor188},{'named',Name}},As,St0> when 'true' ->
	      let <_6435> =
		  %% Line 2183
		  call 'ordsets':'is_element'
		      (Name, Us0)
	      in  %% Line 2183
		  case _6435 of
		    %% Line 2184
		    <'false'> when 'true' ->
			%% Line 2185
			apply 'cfun'/3
			    (_cor2, _cor1, _cor0)
		    %% Line 2186
		    <'true'> when 'true' ->
			let <_rec137> =
			    %% Line 2187
			    call 'ordsets':'del_element'
				(Name, Us0)
			in  let <_cor71> =
				%% Line 2187
				call 'erlang':'setelement'
				    (2, A0, _rec137)
			    in  let <_cor75> =
				    %% Line 2188
				    call 'erlang':'setelement'
					(2, _cor2, _cor71)
				in  let <_344> =
					%% Line 2189
					apply 'cfun'/3
					    (_cor75, _cor1, _cor0)
				    in  %% Line 2189
					case _344 of
					  <{CFun0 = {'c_fun',_cor200,_cor201,Body},[],Us1,St1}> when 'true' ->
					      let <_cor78> =
						  %% Line 2190
						  call 'erlang':'length'
						      (Ps)
					      in  let <RecVar> = {%% Line 2190
						       'c_var',[],%% Line 2190
								  {Name,_cor78}}
						  in  let <Let> =
							  %% Line 2191
							  {'c_let',[],[{'c_var',[],Name}|[]],RecVar,Body}
						      in  let <_cor83> =
							      %% Line 2192
							      call 'erlang':'setelement'
								  (4, CFun0, Let)
							  in  let <Letrec> =
								  %% Line 2193
								  {'c_letrec',_cor181,%% Line 2194
										      [{RecVar,_cor83}|[]],RecVar}
							      in  %% Line 2196
								  {Letrec,[],Us1,St1}
					  ( <_cor77> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_344})
					    -| ['compiler_generated'] )
					end
		    ( <_cor88> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_6435})
		      -| ['compiler_generated'] )
		  end
	  %% Line 2198
	  <{'iapply',A,Op,Args},_X_As,St> when 'true' ->
	      %% Line 2199
	      ( case A of
		  ( <( {'a',_cor209,_cor210,_rec142}
		       -| ['compiler_generated'] )> when 'true' ->
			{{'c_apply',_rec142,Op,Args},[],_cor209,_cor0}
		    -| ['compiler_generated'] )
		  ( <_cor211> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','a'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2200
	  <{'icall',A,Mod,Name,Args},_X_As,St> when 'true' ->
	      %% Line 2201
	      ( case A of
		  ( <( {'a',_cor215,_cor216,_rec144}
		       -| ['compiler_generated'] )> when 'true' ->
			{{'c_call',_rec144,Mod,Name,Args},[],_cor215,_cor0}
		    -| ['compiler_generated'] )
		  ( <_cor217> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','a'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2202
	  <{'iprimop',A,Name,Args},_X_As,St> when 'true' ->
	      %% Line 2203
	      ( case A of
		  ( <( {'a',_cor221,_cor222,_rec146}
		       -| ['compiler_generated'] )> when 'true' ->
			{{'c_primop',_rec146,Name,Args},[],_cor221,_cor0}
		    -| ['compiler_generated'] )
		  ( <_cor223> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','a'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2204
	  <{'iprotect',A,Es},_X_As,St0> when 'true' ->
	      let <_3570> =
		  %% Line 2205
		  apply 'cexprs'/3
		      (Es, [], _cor0)
	      in  %% Line 2205
		  case _3570 of
		    <{Ce,_cor227,St1}> when 'true' ->
			%% Line 2208
			( case A of
			    ( <( {'a',_cor228,_cor229,_rec148}
				 -| ['compiler_generated'] )> when 'true' ->
				  {{'c_try',_rec148,Ce,[{'c_var',[],'Try'}],{'c_var',[],'Try'},[{'c_var',[],'T'}|[{'c_var',[],'R'}]],%% Line 2209
																     {'c_literal',[],'false'}},%% Line 2210
																			       [],_cor228,St1}
			      -| ['compiler_generated'] )
			    ( <_cor230> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','a'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    ( <_cor101> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3570})
		      -| ['compiler_generated'] )
		  end
	  %% Line 2211
	  <{'ibinary',{'a',Us,_cor234,Anno},Segs},_X_As,St> when 'true' ->
	      %% Line 2212
	      {{'c_binary',Anno,Segs},[],Us,_cor0}
	  %% Line 2213
	  <Lit = {'c_literal',_cor235,_cor236},_X_As,St> when 'true' ->
	      %% Line 2215
	      ( case %% Line 2316
		     call 'erlang':'element'
			 (2, _cor2) of
		  ( <( {'a',_rec150,_cor237,_cor238}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor114> =
			    %% Line 2320
			    call 'erlang':'setelement'
				(2, _cor2, _cor238)
			in  %% Line 2216
			    {_cor114,[],_rec150,_cor0}
		    -| ['compiler_generated'] )
		  ( <_cor239> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','a'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2217
	  <Lit,_X_As,St> when 'true' ->
	      let <_10193> =
		  %% Line 2218
		  apply 'is_simple'/1
		      (_cor2)
	      in  %% Line 2218
		  case _10193 of
		    <'true'> when 'true' ->
			%% Line 2220
			( case %% Line 2316
			       call 'erlang':'element'
				   (2, _cor2) of
			    ( <( {'a',_rec152,_cor243,_cor244}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_cor122> =
				      %% Line 2320
				      call 'erlang':'setelement'
					  (2, _cor2, _cor244)
				  in  %% Line 2222
				      {_cor122,[],_rec152,_cor0}
			      -| ['compiler_generated'] )
			    ( <_cor245> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','a'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    ( <_cor115> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_10193})
		      -| ['compiler_generated'] )
		  end
	end
'cfun'/3 =
    %% Line 2224
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'ifun',A,Id,Args,Lcs,Lfc,_cor17},_X_As,St0> when 'true' ->
	      let <_6608> =
		  %% Line 2225
		  apply 'cclauses'/3
		      (Lcs, [], _cor0)
	      in  %% Line 2225
		  case _6608 of
		    <{Ccs,St1}> when 'true' ->
			let <_14325> =
			    %% Line 2226
			    apply 'cclause'/3
				(Lfc, [], St1)
			in  %% Line 2226
			    case _14325 of
			      <{Cfc,St2}> when 'true' ->
				  %% Line 2227
				  ( case A of
				      ( <( {'a',_cor18,_cor19,_rec154}
					   -| ['compiler_generated'] )> when 'true' ->
					    let <_cor13> =
						%% Line 2228
						call 'erlang':'++'
						    (Id, _rec154)
					    in  let <_cor11> =
						    %% Line 2230
						    call 'core_lib':'make_values'
							(Args)
						in  let <_cor12> =
							%% Line 2320
							call 'erlang':'setelement'
							    (2, _cor11, _rec154)
						    in  let <_cor10> =
							    %% Line 2231
							    call 'erlang':'++'
								(Ccs, [Cfc|[]])
							in  %% Line 2228
							    {{'c_fun',_cor13,Args,%% Line 2229
										  {'c_case',_rec154,_cor12,_cor10}},%% Line 2232
														    [],_cor18,St2}
					-| ['compiler_generated'] )
				      ( <_cor20> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','a'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_14325})
				-| ['compiler_generated'] )
			    end
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_6608})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'cfun',3}}] )
	    -| ['compiler_generated'] )
	end
'lit_vars'/2 =
    %% Line 2238
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'c_cons',_cor7,H,T},Vs> when 'true' ->
	      let <_cor2> =
		  apply 'lit_vars'/2
		      (T, _cor0)
	      in  apply 'lit_vars'/2
		      (H, _cor2)
	  %% Line 2239
	  <{'c_tuple',_cor8,Es},Vs> when 'true' ->
	      apply 'lit_list_vars'/2
		  (Es, _cor0)
	  %% Line 2240
	  <{'c_map',_cor9,V,Es},Vs> when 'true' ->
	      let <_cor3> =
		  apply 'lit_list_vars'/2
		      (Es, _cor0)
	      in  apply 'lit_vars'/2
		      (V, _cor3)
	  %% Line 2241
	  <{'c_map_pair',_cor10,_cor11,K,V},Vs> when 'true' ->
	      let <_cor4> =
		  apply 'lit_vars'/2
		      (V, _cor0)
	      in  apply 'lit_vars'/2
		      (K, _cor4)
	  %% Line 2242
	  <{'c_var',_cor12,V},Vs> when 'true' ->
	      call 'ordsets':'add_element'
		  (V, _cor0)
	  %% Line 2243
	  <_cor13,Vs> when 'true' ->
	      _cor0
	end
'lit_list_vars'/2 =
    %% Line 2252
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 2253
	    fun (_cor3,_cor2) ->
		apply 'lit_vars'/2
		    (_cor3, _cor2)
	in  %% Line 2253
	    call 'lists':'foldl'
		(_cor6, _cor0, _cor1)
'bitstr_vars'/2 =
    %% Line 2258
    fun (_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 2259
	    fun (_cor4,_cor3) ->
		case <_cor4,_cor3> of
		  <{'c_bitstr',_cor10,V,S,_cor11,_cor12,_cor13},Vs0> when 'true' ->
		      let <_cor2> =
			  %% Line 2260
			  apply 'lit_vars'/2
			      (S, _cor3)
		      in  %% Line 2260
			  apply 'lit_vars'/2
			      (V, _cor2)
		  ( <_cor6,_cor5> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor4,_cor3})
			  -| [{'function_name',{'-bitstr_vars/2-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 2259
	    call 'lists':'foldl'
		(_cor7, _cor0, _cor1)
'record_anno'/2 =
    %% Line 2263
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <L,St>
	      when call 'erlang':'>='
		    (_cor1,
		     100000000) ->
	      %% Line 2264
	      ( case _cor0 of
		  ( <( {'core',_cor15,_cor16,_cor17,_cor18,_rec156,_cor19,_cor20}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_8599> =
			    call 'lists':'member'
				('dialyzer', _rec156)
			in  case _8599 of
			      %% Line 2265
			      <'true'> when 'true' ->
				  let <_cor4> =
				      %% Line 2266
				      call 'erlang':'-'
					  (_cor1, 100000000)
				  in  let <_cor5> =
					  %% Line 2266
					  apply 'lineno_anno'/2
					      (_cor4, _cor0)
				      in  %% Line 2266
					  ['record'|_cor5]
			      %% Line 2267
			      <'false'> when 'true' ->
				  %% Line 2268
				  apply 'lineno_anno'/2
				      (_cor1, _cor0)
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_8599})
				-| ['compiler_generated'] )
			    end
		    -| ['compiler_generated'] )
		  ( <_cor21> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','core'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2270
	  <L,St>
	      when call 'erlang':'<'
		    (_cor1,
		     -100000000) ->
	      %% Line 2271
	      ( case _cor0 of
		  ( <( {'core',_cor22,_cor23,_cor24,_cor25,_rec157,_cor26,_cor27}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_14776> =
			    call 'lists':'member'
				('dialyzer', _rec157)
			in  case _14776 of
			      %% Line 2272
			      <'true'> when 'true' ->
				  let <_cor10> =
				      %% Line 2273
				      call 'erlang':'+'
					  (_cor1, 100000000)
				  in  let <_cor11> =
					  %% Line 2273
					  apply 'lineno_anno'/2
					      (_cor10, _cor0)
				      in  %% Line 2273
					  ['record'|_cor11]
			      %% Line 2274
			      <'false'> when 'true' ->
				  %% Line 2275
				  apply 'lineno_anno'/2
				      (_cor1, _cor0)
			      ( <_cor12> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_14776})
				-| ['compiler_generated'] )
			    end
		    -| ['compiler_generated'] )
		  ( <_cor28> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','core'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2277
	  <L,St> when 'true' ->
	      %% Line 2278
	      apply 'lineno_anno'/2
		  (_cor1, _cor0)
	end
'lineno_anno'/2 =
    %% Line 2280
    fun (_cor1,_cor0) ->
	let <_14694> =
	    %% Line 2281
	    call 'erl_parse':'get_attribute'
		(_cor1, 'line')
	in  %% Line 2281
	    case _14694 of
	      <{'line',Line}> when 'true' ->
		  %% Line 2282
		  case <> of
		    %% Line 2283
		    <>
			when call 'erlang':'<'
			      (Line,
			       0) ->
			let <_cor6> =
			    %% Line 2284
			    call 'erlang':'-'
				(Line)
			in  %% Line 2284
			    ( case _cor0 of
				( <( {'core',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_rec158}
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_cor5> =
					  call 'erlang':'++'
					      (_rec158, ['compiler_generated'])
				      in  [_cor6|_cor5]
				  -| ['compiler_generated'] )
				( <_cor17> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','core'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
		    %% Line 2285
		    <> when 'true' ->
			%% Line 2286
			( case _cor0 of
			    ( <( {'core',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_rec159}
				 -| ['compiler_generated'] )> when 'true' ->
				  [Line|_rec159]
			      -| ['compiler_generated'] )
			    ( <_cor24> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','core'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		  end
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_14694})
		-| ['compiler_generated'] )
	    end
'get_ianno'/1 =
    %% Line 2289
    fun (_cor0) ->
	let <_11913> =
	    %% Line 2316
	    call 'erlang':'element'
		(2, _cor0)
	in  %% Line 2290
	    case _11913 of
	      %% Line 2291
	      <A = {'a',_cor3,_cor4,_cor5}> when 'true' ->
		  _11913
	      %% Line 2292
	      <A>
		  when call 'erlang':'is_list'
			(_11913) ->
		  {'a',[],[],_11913}
	      ( <_cor1> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_11913})
		-| ['compiler_generated'] )
	    end
'get_lineno_anno'/1 =
    %% Line 2295
    fun (_cor0) ->
	let <_9480> =
	    %% Line 2316
	    call 'erlang':'element'
		(2, _cor0)
	in  %% Line 2296
	    case _9480 of
	      %% Line 2297
	      <{'a',_cor3,_cor4,A}> when 'true' ->
		  A
	      %% Line 2298
	      <A>
		  when call 'erlang':'is_list'
			(_9480) ->
		  _9480
	      ( <_cor1> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_9480})
		-| ['compiler_generated'] )
	    end
'is_simple'/1 =
    %% Line 2324
    fun (_cor0) ->
	case _cor0 of
	  <{'c_var',_cor6,_cor7}> when 'true' ->
	      'true'
	  %% Line 2325
	  <{'c_literal',_cor8,_cor9}> when 'true' ->
	      'true'
	  %% Line 2326
	  <{'c_cons',_cor10,H,T}> when 'true' ->
	      let <_12972> =
		  %% Line 2327
		  apply 'is_simple'/1
		      (H)
	      in  %% Line 2327
		  ( case _12972 of
		      ( <( 'true'
			   -| ['compiler_generated'] )> when 'true' ->
			    apply 'is_simple'/1
				(T)
			-| ['compiler_generated'] )
		      ( <( 'false'
			   -| ['compiler_generated'] )> when 'true' ->
			    'false'
			-| ['compiler_generated'] )
		      ( <_cor1> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {( 'badarg'
					-| ['compiler_generated'] ),_12972}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 2328
	  <{'c_tuple',_cor11,Es}> when 'true' ->
	      %% Line 2336
	      call 'lists':'all'
		  ('is_simple'/1, Es)
	  %% Line 2329
	  <{'c_map',_cor12,_cor13,Es}> when 'true' ->
	      %% Line 2336
	      call 'lists':'all'
		  ('is_simple'/1, Es)
	  %% Line 2330
	  <{'c_map_pair',_cor14,_cor15,K,V}> when 'true' ->
	      let <_6624> =
		  %% Line 2331
		  apply 'is_simple'/1
		      (K)
	      in  %% Line 2331
		  ( case _6624 of
		      ( <( 'true'
			   -| ['compiler_generated'] )> when 'true' ->
			    apply 'is_simple'/1
				(V)
			-| ['compiler_generated'] )
		      ( <( 'false'
			   -| ['compiler_generated'] )> when 'true' ->
			    'false'
			-| ['compiler_generated'] )
		      ( <_cor3> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {( 'badarg'
					-| ['compiler_generated'] ),_6624}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 2332
	  <_cor16> when 'true' ->
	      'false'
	end
'format_error'/1 =
    %% Line 2346
    fun (_cor0) ->
	case _cor0 of
	  <'nomatch'> when 'true' ->
	      %% Line 2347
	      [112|[97|[116|[116|[101|[114|[110|[32|[99|[97|[110|[110|[111|[116|[32|[112|[111|[115|[115|[105|[98|[108|[121|[32|[109|[97|[116|[99|[104]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
	  %% Line 2348
	  <'bad_binary'> when 'true' ->
	      %% Line 2349
	      [98|[105|[110|[97|[114|[121|[32|[99|[111|[110|[115|[116|[114|[117|[99|[116|[105|[111|[110|[32|[119|[105|[108|[108|[32|[102|[97|[105|[108|[32|[98|[101|[99|[97|[117|[115|[101|[32|[111|[102|[32|[97|[32|[116|[121|[112|[101|[32|[109|[105|[115|[109|[97|[116|[99|[104]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
	  %% Line 2350
	  <'bad_map_key'> when 'true' ->
	      %% Line 2351
	      [109|[97|[112|[32|[99|[111|[110|[115|[116|[114|[117|[99|[116|[105|[111|[110|[32|[119|[105|[108|[108|[32|[102|[97|[105|[108|[32|[98|[101|[99|[97|[117|[115|[101|[32|[111|[102|[32|[110|[111|[110|[101|[32|[108|[105|[116|[101|[114|[97|[108|[32|[107|[101|[121|[32|[40|[108|[97|[114|[103|[101|[32|[98|[105|[110|[97|[114|[105|[101|[115|[32|[97|[114|[101|[32|[110|[111|[116|[32|[108|[105|[116|[101|[114|[97|[108|[115|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
	  %% Line 2352
	  <'bad_map'> when 'true' ->
	      %% Line 2353
	      [109|[97|[112|[32|[99|[111|[110|[115|[116|[114|[117|[99|[116|[105|[111|[110|[32|[119|[105|[108|[108|[32|[102|[97|[105|[108|[32|[98|[101|[99|[97|[117|[115|[101|[32|[111|[102|[32|[97|[32|[116|[121|[112|[101|[32|[109|[105|[115|[109|[97|[116|[99|[104]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'format_error',1}}] )
	    -| ['compiler_generated'] )
	end
'add_warning'/3 =
    %% Line 2355
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Line,Term,St = {'core',_cor10,_cor11,_cor12,_cor13,_cor14,Ws,[{'file',File}|[]]}>
	      when call 'erlang':'>='
		    (_cor2,
		     0) ->
	      let <_14352> =
		  call 'erl_parse':'get_attribute'
		      (_cor2, 'location')
	      in  case _14352 of
		    <{'location',Location}> when 'true' ->
			let <_rec160> =
			    %% Line 2356
			    [{File,[{Location,'v3_core',_cor1}|[]]}|Ws]
			in  %% Line 2356
			    call 'erlang':'setelement'
				(7, _cor0, _rec160)
		    ( <_1274> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_14352})
		      -| ['compiler_generated'] )
		  end
	  %% Line 2357
	  <_cor23,_cor24,St> when 'true' ->
	      _cor0
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('v3_core')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('v3_core', _cor0)
end