module 'v3_kernel' ['format_error'/1,
		    'module'/2,
		    'module_info'/0,
		    'module_info'/1]
    attributes [%% Line 31
		'type' =
		    %% Line 31
		    [{{'record','c_alias'},[{'record_field',31,{'atom',31,'anno'},{'nil',31}}|[{'record_field',31,{'atom',31,'var'}}|[{'record_field',32,{'atom',32,'pat'}}]]],[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','c_apply'},[{'record_field',34,{'atom',34,'anno'},{'nil',34}}|[{'record_field',34,{'atom',34,'op'}}|[{'record_field',35,{'atom',35,'args'}}]]],[]}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{{'record','c_binary'},[{'record_field',37,{'atom',37,'anno'},{'nil',37}}|[{'typed_record_field',{'record_field',37,{'atom',37,'segments'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'type',37,'list',[{'remote_type',37,[{'atom',37,'cerl'}|[{'atom',37,'c_bitstr'}|[[]]]]}]}]]}}]],[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{{'record','c_bitstr'},[{'record_field',39,{'atom',39,'anno'},{'nil',39}}|[{'record_field',39,{'atom',39,'val'}}|[{'record_field',40,{'atom',40,'size'}}|[{'record_field',41,{'atom',41,'unit'}}|[{'record_field',42,{'atom',42,'type'}}|[{'record_field',43,{'atom',43,'flags'}}]]]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','c_call'},[{'record_field',45,{'atom',45,'anno'},{'nil',45}}|[{'record_field',45,{'atom',45,'module'}}|[{'record_field',46,{'atom',46,'name'}}|[{'record_field',47,{'atom',47,'args'}}]]]],[]}],
		%% Line 49
		'type' =
		    %% Line 49
		    [{{'record','c_case'},[{'record_field',49,{'atom',49,'anno'},{'nil',49}}|[{'record_field',49,{'atom',49,'arg'}}|[{'record_field',50,{'atom',50,'clauses'}}]]],[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{{'record','c_catch'},[{'record_field',52,{'atom',52,'anno'},{'nil',52}}|[{'record_field',52,{'atom',52,'body'}}]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{{'record','c_clause'},[{'record_field',54,{'atom',54,'anno'},{'nil',54}}|[{'record_field',54,{'atom',54,'pats'}}|[{'record_field',55,{'atom',55,'guard'}}|[{'record_field',56,{'atom',56,'body'}}]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','c_cons'},[{'record_field',58,{'atom',58,'anno'},{'nil',58}}|[{'record_field',58,{'atom',58,'hd'}}|[{'record_field',59,{'atom',59,'tl'}}]]],[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','c_fun'},[{'record_field',61,{'atom',61,'anno'},{'nil',61}}|[{'record_field',61,{'atom',61,'vars'}}|[{'record_field',62,{'atom',62,'body'}}]]],[]}],
		%% Line 64
		'type' =
		    %% Line 64
		    [{{'record','c_let'},[{'record_field',64,{'atom',64,'anno'},{'nil',64}}|[{'record_field',64,{'atom',64,'vars'}}|[{'record_field',65,{'atom',65,'arg'}}|[{'record_field',66,{'atom',66,'body'}}]]]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','c_letrec'},[{'record_field',68,{'atom',68,'anno'},{'nil',68}}|[{'record_field',68,{'atom',68,'defs'}}|[{'record_field',69,{'atom',69,'body'}}]]],[]}],
		%% Line 71
		'type' =
		    %% Line 71
		    [{{'record','c_literal'},[{'record_field',71,{'atom',71,'anno'},{'nil',71}}|[{'record_field',71,{'atom',71,'val'}}]],[]}],
		%% Line 73
		'type' =
		    %% Line 73
		    [{{'record','c_map'},[{'record_field',73,{'atom',73,'anno'},{'nil',73}}|[{'typed_record_field',{'record_field',74,{'atom',74,'arg'},{'record',74,'c_literal',[{'record_field',74,{'atom',74,'val'},{'map',74,[]}}]}},{'type',74,'union',[{'remote_type',74,[{'atom',74,'cerl'}|[{'atom',74,'c_var'}|[[]]]]}|[{'remote_type',74,[{'atom',74,'cerl'}|[{'atom',74,'c_literal'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'es'}},{'type',75,'union',[{'atom',75,'undefined'}|[{'type',75,'list',[{'remote_type',75,[{'atom',75,'cerl'}|[{'atom',75,'c_map_pair'}|[[]]]]}]}]]}}]]],[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','c_map_pair'},[{'record_field',77,{'atom',77,'anno'},{'nil',77}}|[{'typed_record_field',{'record_field',78,{'atom',78,'op'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'record',[{'atom',78,'c_literal'}|[{'type',78,'field_type',[{'atom',78,'val'}|[{'atom',78,'assoc'}]]}]]}|[{'type',78,'record',[{'atom',78,'c_literal'}|[{'type',78,'field_type',[{'atom',78,'val'}|[{'atom',78,'exact'}]]}]]}]]]}}|[{'record_field',79,{'atom',79,'key'}}|[{'record_field',80,{'atom',80,'val'}}]]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{{'record','c_module'},[{'record_field',82,{'atom',82,'anno'},{'nil',82}}|[{'record_field',82,{'atom',82,'name'}}|[{'record_field',83,{'atom',83,'exports'}}|[{'record_field',84,{'atom',84,'attrs'}}|[{'record_field',85,{'atom',85,'defs'}}]]]]],[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{{'record','c_primop'},[{'record_field',87,{'atom',87,'anno'},{'nil',87}}|[{'record_field',87,{'atom',87,'name'}}|[{'record_field',88,{'atom',88,'args'}}]]],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{{'record','c_receive'},[{'record_field',90,{'atom',90,'anno'},{'nil',90}}|[{'record_field',90,{'atom',90,'clauses'}}|[{'record_field',91,{'atom',91,'timeout'}}|[{'record_field',92,{'atom',92,'action'}}]]]],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{{'record','c_seq'},[{'record_field',94,{'atom',94,'anno'},{'nil',94}}|[{'record_field',94,{'atom',94,'arg'}}|[{'record_field',95,{'atom',95,'body'}}]]],[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','c_try'},[{'record_field',97,{'atom',97,'anno'},{'nil',97}}|[{'record_field',97,{'atom',97,'arg'}}|[{'record_field',98,{'atom',98,'vars'}}|[{'record_field',99,{'atom',99,'body'}}|[{'record_field',100,{'atom',100,'evars'}}|[{'record_field',101,{'atom',101,'handler'}}]]]]]],[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','c_tuple'},[{'record_field',103,{'atom',103,'anno'},{'nil',103}}|[{'record_field',103,{'atom',103,'es'}}]],[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{{'record','c_values'},[{'record_field',105,{'atom',105,'anno'},{'nil',105}}|[{'record_field',105,{'atom',105,'es'}}]],[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','c_var'},[{'record_field',107,{'atom',107,'anno'},{'nil',107}}|[{'typed_record_field',{'record_field',107,{'atom',107,'name'}},{'type',107,'union',[{'atom',107,'undefined'}|[{'remote_type',107,[{'atom',107,'cerl'}|[{'atom',107,'var_name'}|[[]]]]}]]}}]],[]}],
		%% Line 27
		'type' =
		    %% Line 27
		    [{{'record','k'},[{'record_field',27,{'atom',27,'us'}}|[{'record_field',28,{'atom',28,'ns'}}|[{'record_field',29,{'atom',29,'a'}}]]],[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','k_literal'},[{'record_field',34,{'atom',34,'anno'},{'nil',34}}|[{'record_field',34,{'atom',34,'val'}}]],[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','k_int'},[{'record_field',35,{'atom',35,'anno'},{'nil',35}}|[{'record_field',35,{'atom',35,'val'}}]],[]}],
		%% Line 36
		'type' =
		    %% Line 36
		    [{{'record','k_float'},[{'record_field',36,{'atom',36,'anno'},{'nil',36}}|[{'record_field',36,{'atom',36,'val'}}]],[]}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{{'record','k_atom'},[{'record_field',37,{'atom',37,'anno'},{'nil',37}}|[{'record_field',37,{'atom',37,'val'}}]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','k_nil'},[{'record_field',38,{'atom',38,'anno'},{'nil',38}}],[]}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{{'record','k_tuple'},[{'record_field',40,{'atom',40,'anno'},{'nil',40}}|[{'record_field',40,{'atom',40,'es'}}]],[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','k_map'},[{'record_field',41,{'atom',41,'anno'},{'nil',41}}|[{'record_field',41,{'atom',41,'var'}}|[{'record_field',41,{'atom',41,'op'}}|[{'record_field',41,{'atom',41,'es'}}]]]],[]}],
		%% Line 42
		'type' =
		    %% Line 42
		    [{{'record','k_map_pair'},[{'record_field',42,{'atom',42,'anno'},{'nil',42}}|[{'record_field',42,{'atom',42,'key'}}|[{'record_field',42,{'atom',42,'val'}}]]],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','k_cons'},[{'record_field',43,{'atom',43,'anno'},{'nil',43}}|[{'record_field',43,{'atom',43,'hd'}}|[{'record_field',43,{'atom',43,'tl'}}]]],[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{{'record','k_binary'},[{'record_field',44,{'atom',44,'anno'},{'nil',44}}|[{'record_field',44,{'atom',44,'segs'}}]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','k_bin_seg'},[{'record_field',45,{'atom',45,'anno'},{'nil',45}}|[{'record_field',45,{'atom',45,'size'}}|[{'record_field',45,{'atom',45,'unit'}}|[{'record_field',45,{'atom',45,'type'}}|[{'record_field',45,{'atom',45,'flags'}}|[{'record_field',45,{'atom',45,'seg'}}|[{'record_field',45,{'atom',45,'next'}}]]]]]]],[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{{'record','k_bin_int'},[{'record_field',46,{'atom',46,'anno'},{'nil',46}}|[{'record_field',46,{'atom',46,'size'}}|[{'record_field',46,{'atom',46,'unit'}}|[{'record_field',46,{'atom',46,'flags'}}|[{'record_field',46,{'atom',46,'val'}}|[{'record_field',46,{'atom',46,'next'}}]]]]]],[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{{'record','k_bin_end'},[{'record_field',47,{'atom',47,'anno'},{'nil',47}}],[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','k_var'},[{'record_field',48,{'atom',48,'anno'},{'nil',48}}|[{'record_field',48,{'atom',48,'name'}}]],[]}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{{'record','k_local'},[{'record_field',50,{'atom',50,'anno'},{'nil',50}}|[{'record_field',50,{'atom',50,'name'}}|[{'record_field',50,{'atom',50,'arity'}}]]],[]}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{{'record','k_remote'},[{'record_field',51,{'atom',51,'anno'},{'nil',51}}|[{'record_field',51,{'atom',51,'mod'}}|[{'record_field',51,{'atom',51,'name'}}|[{'record_field',51,{'atom',51,'arity'}}]]]],[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{{'record','k_internal'},[{'record_field',52,{'atom',52,'anno'},{'nil',52}}|[{'record_field',52,{'atom',52,'name'}}|[{'record_field',52,{'atom',52,'arity'}}]]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{{'record','k_mdef'},[{'record_field',54,{'atom',54,'anno'},{'nil',54}}|[{'record_field',54,{'atom',54,'name'}}|[{'record_field',54,{'atom',54,'exports'}}|[{'record_field',54,{'atom',54,'attributes'}}|[{'record_field',54,{'atom',54,'body'}}]]]]],[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{{'record','k_fdef'},[{'record_field',55,{'atom',55,'anno'},{'nil',55}}|[{'record_field',55,{'atom',55,'func'}}|[{'record_field',55,{'atom',55,'arity'}}|[{'record_field',55,{'atom',55,'vars'}}|[{'record_field',55,{'atom',55,'body'}}]]]]],[]}],
		%% Line 57
		'type' =
		    %% Line 57
		    [{{'record','k_seq'},[{'record_field',57,{'atom',57,'anno'},{'nil',57}}|[{'record_field',57,{'atom',57,'arg'}}|[{'record_field',57,{'atom',57,'body'}}]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','k_put'},[{'record_field',58,{'atom',58,'anno'},{'nil',58}}|[{'record_field',58,{'atom',58,'arg'}}|[{'record_field',58,{'atom',58,'ret'},{'nil',58}}]]],[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{{'record','k_bif'},[{'record_field',59,{'atom',59,'anno'},{'nil',59}}|[{'record_field',59,{'atom',59,'op'}}|[{'record_field',59,{'atom',59,'args'}}|[{'record_field',59,{'atom',59,'ret'},{'nil',59}}]]]],[]}],
		%% Line 60
		'type' =
		    %% Line 60
		    [{{'record','k_test'},[{'record_field',60,{'atom',60,'anno'},{'nil',60}}|[{'record_field',60,{'atom',60,'op'}}|[{'record_field',60,{'atom',60,'args'}}]]],[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','k_call'},[{'record_field',61,{'atom',61,'anno'},{'nil',61}}|[{'record_field',61,{'atom',61,'op'}}|[{'record_field',61,{'atom',61,'args'}}|[{'record_field',61,{'atom',61,'ret'},{'nil',61}}]]]],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{{'record','k_enter'},[{'record_field',62,{'atom',62,'anno'},{'nil',62}}|[{'record_field',62,{'atom',62,'op'}}|[{'record_field',62,{'atom',62,'args'}}]]],[]}],
		%% Line 63
		'type' =
		    %% Line 63
		    [{{'record','k_receive'},[{'record_field',63,{'atom',63,'anno'},{'nil',63}}|[{'record_field',63,{'atom',63,'var'}}|[{'record_field',63,{'atom',63,'body'}}|[{'record_field',63,{'atom',63,'timeout'}}|[{'record_field',63,{'atom',63,'action'}}|[{'record_field',63,{'atom',63,'ret'},{'nil',63}}]]]]]],[]}],
		%% Line 64
		'type' =
		    %% Line 64
		    [{{'record','k_receive_accept'},[{'record_field',64,{'atom',64,'anno'},{'nil',64}}],[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','k_receive_next'},[{'record_field',65,{'atom',65,'anno'},{'nil',65}}],[]}],
		%% Line 66
		'type' =
		    %% Line 66
		    [{{'record','k_try'},[{'record_field',66,{'atom',66,'anno'},{'nil',66}}|[{'record_field',66,{'atom',66,'arg'}}|[{'record_field',66,{'atom',66,'vars'}}|[{'record_field',66,{'atom',66,'body'}}|[{'record_field',66,{'atom',66,'evars'}}|[{'record_field',66,{'atom',66,'handler'}}|[{'record_field',66,{'atom',66,'ret'},{'nil',66}}]]]]]]],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{{'record','k_try_enter'},[{'record_field',67,{'atom',67,'anno'},{'nil',67}}|[{'record_field',67,{'atom',67,'arg'}}|[{'record_field',67,{'atom',67,'vars'}}|[{'record_field',67,{'atom',67,'body'}}|[{'record_field',67,{'atom',67,'evars'}}|[{'record_field',67,{'atom',67,'handler'}}]]]]]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','k_catch'},[{'record_field',68,{'atom',68,'anno'},{'nil',68}}|[{'record_field',68,{'atom',68,'body'}}|[{'record_field',68,{'atom',68,'ret'},{'nil',68}}]]],[]}],
		%% Line 70
		'type' =
		    %% Line 70
		    [{{'record','k_guard_match'},[{'record_field',70,{'atom',70,'anno'},{'nil',70}}|[{'record_field',70,{'atom',70,'vars'}}|[{'record_field',70,{'atom',70,'body'}}|[{'record_field',70,{'atom',70,'ret'},{'nil',70}}]]]],[]}],
		%% Line 71
		'type' =
		    %% Line 71
		    [{{'record','k_match'},[{'record_field',71,{'atom',71,'anno'},{'nil',71}}|[{'record_field',71,{'atom',71,'vars'}}|[{'record_field',71,{'atom',71,'body'}}|[{'record_field',71,{'atom',71,'ret'},{'nil',71}}]]]],[]}],
		%% Line 72
		'type' =
		    %% Line 72
		    [{{'record','k_alt'},[{'record_field',72,{'atom',72,'anno'},{'nil',72}}|[{'record_field',72,{'atom',72,'first'}}|[{'record_field',72,{'atom',72,'then'}}]]],[]}],
		%% Line 73
		'type' =
		    %% Line 73
		    [{{'record','k_select'},[{'record_field',73,{'atom',73,'anno'},{'nil',73}}|[{'record_field',73,{'atom',73,'var'}}|[{'record_field',73,{'atom',73,'types'}}]]],[]}],
		%% Line 74
		'type' =
		    %% Line 74
		    [{{'record','k_type_clause'},[{'record_field',74,{'atom',74,'anno'},{'nil',74}}|[{'record_field',74,{'atom',74,'type'}}|[{'record_field',74,{'atom',74,'values'}}]]],[]}],
		%% Line 75
		'type' =
		    %% Line 75
		    [{{'record','k_val_clause'},[{'record_field',75,{'atom',75,'anno'},{'nil',75}}|[{'record_field',75,{'atom',75,'val'}}|[{'record_field',75,{'atom',75,'body'}}]]],[]}],
		%% Line 76
		'type' =
		    %% Line 76
		    [{{'record','k_guard'},[{'record_field',76,{'atom',76,'anno'},{'nil',76}}|[{'record_field',76,{'atom',76,'clauses'}}]],[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','k_guard_clause'},[{'record_field',77,{'atom',77,'anno'},{'nil',77}}|[{'record_field',77,{'atom',77,'guard'}}|[{'record_field',77,{'atom',77,'body'}}]]],[]}],
		%% Line 79
		'type' =
		    %% Line 79
		    [{{'record','k_break'},[{'record_field',79,{'atom',79,'anno'},{'nil',79}}|[{'record_field',79,{'atom',79,'args'},{'nil',79}}]],[]}],
		%% Line 80
		'type' =
		    %% Line 80
		    [{{'record','k_guard_break'},[{'record_field',80,{'atom',80,'anno'},{'nil',80}}|[{'record_field',80,{'atom',80,'args'},{'nil',80}}]],[]}],
		%% Line 81
		'type' =
		    %% Line 81
		    [{{'record','k_return'},[{'record_field',81,{'atom',81,'anno'},{'nil',81}}|[{'record_field',81,{'atom',81,'args'},{'nil',81}}]],[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{{'record','ivalues'},[{'record_field',101,{'atom',101,'anno'},{'nil',101}}|[{'record_field',101,{'atom',101,'args'}}]],[]}],
		%% Line 102
		'type' =
		    %% Line 102
		    [{{'record','ifun'},[{'record_field',102,{'atom',102,'anno'},{'nil',102}}|[{'record_field',102,{'atom',102,'vars'}}|[{'record_field',102,{'atom',102,'body'}}]]],[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','iset'},[{'record_field',103,{'atom',103,'anno'},{'nil',103}}|[{'record_field',103,{'atom',103,'vars'}}|[{'record_field',103,{'atom',103,'arg'}}|[{'record_field',103,{'atom',103,'body'}}]]]],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{{'record','iletrec'},[{'record_field',104,{'atom',104,'anno'},{'nil',104}}|[{'record_field',104,{'atom',104,'defs'}}]],[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{{'record','ialias'},[{'record_field',105,{'atom',105,'anno'},{'nil',105}}|[{'record_field',105,{'atom',105,'vars'}}|[{'record_field',105,{'atom',105,'pat'}}]]],[]}],
		%% Line 106
		'type' =
		    %% Line 106
		    [{{'record','iclause'},[{'record_field',106,{'atom',106,'anno'},{'nil',106}}|[{'record_field',106,{'atom',106,'isub'}}|[{'record_field',106,{'atom',106,'osub'}}|[{'record_field',106,{'atom',106,'pats'}}|[{'record_field',106,{'atom',106,'guard'}}|[{'record_field',106,{'atom',106,'body'}}]]]]]],[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','ireceive_accept'},[{'record_field',107,{'atom',107,'anno'},{'nil',107}}|[{'record_field',107,{'atom',107,'arg'}}]],[]}],
		%% Line 108
		'type' =
		    %% Line 108
		    [{{'record','ireceive_next'},[{'record_field',108,{'atom',108,'anno'},{'nil',108}}|[{'record_field',108,{'atom',108,'arg'}}]],[]}],
		%% Line 110
		'type' =
		    %% Line 110
		    [{'warning',{'type',110,'term',[]},[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{{'record','kern'},[{'record_field',113,{'atom',113,'func'}}|[{'record_field',114,{'atom',114,'ff'}}|[{'record_field',115,{'atom',115,'vcount'},{'integer',115,0}}|[{'record_field',116,{'atom',116,'fcount'},{'integer',116,0}}|[{'record_field',117,{'atom',117,'ds'},{'nil',117}}|[{'record_field',118,{'atom',118,'funs'},{'nil',118}}|[{'record_field',119,{'atom',119,'free'},{'nil',119}}|[{'typed_record_field',{'record_field',120,{'atom',120,'ws'},{'nil',120}},{'type',120,'list',[{'type',120,'warning',[]}]}}|[{'record_field',121,{'atom',121,'guard_refc'},{'integer',121,0}}]]]]]]]]],[]}],
		%% Line 123
		'spec' =
		    %% Line 123
		    [{{'module',2},[{'type',123,'fun',[{'type',123,'product',[{'remote_type',123,[{'atom',123,'cerl'}|[{'atom',123,'c_module'}|[[]]]]}|[{'type',123,'list',[{'remote_type',123,[{'atom',123,'compile'}|[{'atom',123,'option'}|[[]]]]}]}]]}|[{'type',124,'tuple',[{'atom',124,'ok'}|[{'type',124,'record',[{'atom',124,'k_mdef'}]}|[{'type',124,'list',[{'type',124,'warning',[]}]}]]]}]]}]}],
		%% Line 1999
		'type' =
		    %% Line 1999
		    [{'error',{'type',1999,'union',[{'atom',1999,'bad_call'}|[{'atom',1999,'nomatch_shadow'}|[{'type',1999,'tuple',[{'atom',1999,'nomatch_shadow'}|[{'type',1999,'integer',[]}]]}]]]},[]}],
		%% Line 2001
		'spec' =
		    %% Line 2001
		    [{{'format_error',1},[{'type',2001,'fun',[{'type',2001,'product',[{'type',2001,'error',[]}]}|[{'type',2001,'string',[]}]]}]}]]
'module'/2 =
    %% Line 126
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'c_module',A,M,Es,As,Fs},_X_Options> when 'true' ->
	      let <Kas> =
		  %% Line 127
		  apply 'attributes'/1
		      (As)
	      in  let <_cor5> =
		      %% Line 128
		      fun (_cor3) ->
			  case _cor3 of
			    <{'c_var',_cor19,Fname = {_cor20,_cor21}}> when 'true' ->
				Fname
			    ( <_cor4> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor3})
				    -| [{'function_name',{'-module/2-fun-0-',1}}] )
			      -| ['compiler_generated'] )
			  end
		  in  let <Kes> =
			  %% Line 128
			  call 'lists':'map'
			      (_cor5, Es)
		      in  let <_3751> =
			      %% Line 130
			      call 'lists':'mapfoldl'
				  ('function'/2, {'kern','undefined','undefined',0,0,[],[],[],[],0}, Fs)
			  in  %% Line 130
			      case _3751 of
				<{Kfs,St}> when 'true' ->
				    %% Line 131
				    ( case M of
					( <( {'c_literal',_cor22,_rec0}
					     -| ['compiler_generated'] )> when 'true' ->
					      %% Line 132
					      ( case St of
						  ( <( {'kern',_cor24,_cor25,_cor26,_cor27,_cor28,_rec1,_cor29,_cor30,_cor31}
						       -| ['compiler_generated'] )> when 'true' ->
							let <_cor14> =
							    call 'erlang':'++'
								(Kfs, _rec1)
							in  let <_cor11> =
								call 'lists':'sort'
								    (_cor30)
							    in  {'ok',{'k_mdef',A,_rec0,Kes,Kas,_cor14},_cor11}
						    -| ['compiler_generated'] )
						  ( <_cor32> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','kern'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <_cor23> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','c_literal'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				( <_cor8> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_3751})
				  -| ['compiler_generated'] )
			      end
	  ( <_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'module',2}}] )
	    -| ['compiler_generated'] )
	end
'attributes'/1 =
    %% Line 134
    fun (_cor0) ->
	case _cor0 of
	  <[{{'c_literal',_cor5,Name},Val}|As]> when 'true' ->
	      let <_12719> =
		  %% Line 143
		  case Name of
		    <'type'> when 'true' ->
			'false'
		    %% Line 144
		    <'spec'> when 'true' ->
			'false'
		    %% Line 145
		    <'opaque'> when 'true' ->
			'false'
		    %% Line 146
		    <'export_type'> when 'true' ->
			'false'
		    %% Line 147
		    <_cor2> when 'true' ->
			'true'
		  end
	      in  %% Line 135
		  case _12719 of
		    %% Line 136
		    <'false'> when 'true' ->
			%% Line 137
			apply 'attributes'/1
			    (As)
		    %% Line 138
		    <'true'> when 'true' ->
			let <_cor1> =
			    %% Line 139
			    call 'core_lib':'literal_value'
				(Val)
			in  let <_cor2> =
				%% Line 139
				apply 'attributes'/1
				    (As)
			    in  %% Line 139
				[{Name,_cor1}|_cor2]
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_12719})
		      -| ['compiler_generated'] )
		  end
	  %% Line 141
	  <[]> when 'true' ->
	      []
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'attributes',1}}] )
	    -| ['compiler_generated'] )
	end
'function'/2 =
    %% Line 149
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{{'c_var',_cor17,FA = {F,Arity}},Body},St0> when 'true' ->
	      %% Line 150
	      try
		  let <_rec3> =
		      %% Line 151
		      call 'sets':'new'
			  ()
		  in  %% Line 151
		      case _cor0 of
			<{'kern',_rec5,_rec6,_rec7,_rec8,_rec9,_rec10,_rec11,_rec12,_rec13}> when 'true' ->
			    let <_cor5> =
				{'kern',FA,'undefined',0,0,_rec3,_rec10,_rec11,_rec12,_rec13}
			    in  let <_cor7> =
				    %% Line 834
				    call 'orddict':'new'
					()
				in  let <_11171> =
					%% Line 152
					apply 'expr'/3
					    (Body, _cor7, _cor5)
				    in  %% Line 152
					case _11171 of
					  <{{'ifun',Ab,Kvs,B0},[],St2}> when 'true' ->
					      let <_14978> =
						  %% Line 153
						  apply 'ubody'/3
						      (B0, 'return', St2)
					      in  %% Line 153
						  case _14978 of
						    <{B1,_cor19,St3}> when 'true' ->
							%% Line 155
							{{'k_fdef',{'k',[],[],Ab},F,Arity,Kvs,B1},St3}
						    ( <_cor9> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_14978})
						      -| ['compiler_generated'] )
						  end
					  ( <_cor8> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_11171})
					    -| ['compiler_generated'] )
					end
			( <_cor18> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','kern'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
	      of <_cor10> ->
		  _cor10
	      catch <_cor13,_cor12,_cor11> ->
		  let <Stack> =
		      %% Line 159
		      call 'erlang':'get_stacktrace'
			  ()
		  in  do  %% Line 160
			  call 'io':'fwrite'
			      ([70|[117|[110|[99|[116|[105|[111|[110|[58|[32|[126|[119|[47|[126|[119|[10]]]]]]]]]]]]]]]], [F|[Arity|[]]])
			  %% Line 161
			  call 'erlang':'raise'
			      (_cor13, _cor12, Stack)
	  ( <_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'function',2}}] )
	    -| ['compiler_generated'] )
	end
'body'/3 =
    %% Line 169
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'c_values',A,Ces},Sub,St0> when 'true' ->
	      let <_10373> =
		  %% Line 171
		  apply 'atomic_list'/3
		      (Ces, _cor1, _cor0)
	      in  %% Line 171
		  case _10373 of
		    <{Kes,Pe,St1}> when 'true' ->
			%% Line 173
			{{'ivalues',A,Kes},Pe,St1}
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_10373})
		      -| ['compiler_generated'] )
		  end
	  %% Line 174
	  <{'ireceive_next',A,_cor7},_cor8,St> when 'true' ->
	      %% Line 175
	      {{'k_receive_next',A},[],_cor0}
	  %% Line 176
	  <Ce,Sub,St0> when 'true' ->
	      %% Line 177
	      apply 'expr'/3
		  (_cor2, _cor1, _cor0)
	end
'guard'/3 =
    %% Line 186
    fun (_cor2,_cor1,_cor0) ->
	let <_13451> =
	    %% Line 187
	    apply 'wrap_guard'/2
		(_cor2, _cor0)
	in  %% Line 187
	    case _13451 of
	      <{G1,St1}> when 'true' ->
		  let <_5615> =
		      %% Line 188
		      apply 'expr'/3
			  (G1, _cor1, St1)
		  in  %% Line 188
		      case _5615 of
			<{Ge0,Pre,St2}> when 'true' ->
			    let <_7189> =
				%% Line 189
				apply 'gexpr_test'/2
				    (Ge0, St2)
			    in  %% Line 189
				case _7189 of
				  <{Ge,St}> when 'true' ->
				      let <_cor6> =
					  %% Line 190
					  apply 'pre_seq'/2
					      (Pre, Ge)
				      in  %% Line 190
					  {_cor6,St}
				  ( <_cor5> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_7189})
				    -| ['compiler_generated'] )
				end
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_5615})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_13451})
		-| ['compiler_generated'] )
	    end
'wrap_guard'/2 =
    %% Line 194
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Try = {'c_try',_cor7,_cor8,_cor9,_cor10,_cor11,_cor12},St> when 'true' ->
	      {_cor1,_cor0}
	  %% Line 195
	  <Core,St0> when 'true' ->
	      let <_14403> =
		  %% Line 196
		  apply 'new_var_name'/1
		      (_cor0)
	      in  %% Line 196
		  case _14403 of
		    <{VarName,St}> when 'true' ->
			let <Var> = {%% Line 197
			     'c_var',[],VarName}
			in  let <Try> =
				%% Line 198
				{'c_try',[],_cor1,[Var|[]],Var,[],{'c_literal',[],'false'}}
			    in  %% Line 199
				{Try,St}
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_14403})
		      -| ['compiler_generated'] )
		  end
	end
'gexpr_test'/2 =
    %% Line 206
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Ke = {'k_bif',A,Op = {'k_remote',_cor16,{'k_atom',_cor17,'erlang'},%% Line 207
									      {'k_atom',_cor18,F},Ar},Kargs,_cor19},St> when 'true' ->
	      let <_9639> =
		  %% Line 212
		  call 'erl_internal':'new_type_test'
		      (F, Ar)
	      in  let <_cor4> =
		      %% Line 212
		      ( case _9639 of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				'true'
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				%% Line 213
				call 'erl_internal':'comp_op'
				    (F, Ar)
			    -| ['compiler_generated'] )
			  ( <_cor2> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {( 'badarg'
					    -| ['compiler_generated'] ),_9639}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  in  %% Line 212
		      case _cor4 of
			%% Line 214
			<'true'> when 'true' ->
			    {{'k_test',A,Op,Kargs},_cor0}
			%% Line 215
			<'false'> when 'true' ->
			    apply 'gexpr_test_add'/2
				(_cor1, _cor0)
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor4})
			  -| ['compiler_generated'] )
		      end
	  %% Line 217
	  <Try = {'k_try',_cor20,B0,[{'k_var',_cor21,X}|[]],{'k_var',_cor22,_cor23},_cor24,%% Line 218
											   {'k_atom',_cor25,'false'},_cor26},St0>
	      when call 'erlang':'=:='
		    (_cor23,
		     X) ->
	      let <_10897> =
		  %% Line 219
		  apply 'gexpr_test'/2
		      (B0, _cor0)
	      in  %% Line 219
		  case _10897 of
		    <{B,St}> when 'true' ->
			let <_cor9> =
			    %% Line 221
			    call 'erlang':'setelement'
				(3, _cor1, B)
			in  %% Line 221
			    {_cor9,St}
		    ( <_cor6> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_10897})
		      -| ['compiler_generated'] )
		  end
	  %% Line 222
	  <Iset = {'iset',_cor35,_cor36,_cor37,B0},St0> when 'true' ->
	      let <_8456> =
		  %% Line 223
		  apply 'gexpr_test'/2
		      (B0, _cor0)
	      in  %% Line 223
		  case _8456 of
		    <{B1,St1}> when 'true' ->
			let <_cor13> =
			    %% Line 224
			    call 'erlang':'setelement'
				(5, _cor1, B1)
			in  %% Line 224
			    {_cor13,St1}
		    ( <_cor10> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_8456})
		      -| ['compiler_generated'] )
		  end
	  %% Line 225
	  <Ke,St> when 'true' ->
	      apply 'gexpr_test_add'/2
		  (_cor1, _cor0)
	end
'gexpr_test_add'/2 =
    %% Line 227
    fun (_cor1,_cor0) ->
	let <_9492> =
	    %% Line 231
	    apply 'force_atomic'/2
		(_cor1, _cor0)
	in  %% Line 231
	    case _9492 of
	      <{Ae,Ap,St1}> when 'true' ->
		  let <_cor4> =
		      call 'erlang':'element'
			  (2, _cor1)
		  in  let <_cor5> =
			  %% Line 232
			  apply 'pre_seq'/2
			      (Ap, {'k_test',_cor4,{'k_remote',[],{'k_atom',[],'erlang'},{'k_atom',[],'=:='},2},%% Line 233
														[Ae|[{'k_atom',[],'true'}]]})
		      in  %% Line 232
			  {_cor5,St1}
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_9492})
		-| ['compiler_generated'] )
	    end
'expr'/3 =
    %% Line 238
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Fname = {'c_var',A,{_X_Name,Arity}},Sub,St> when 'true' ->
	      let <_cor11> =
		  %% Line 244
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor6) ->
				case _cor6 of
				  <[V|_cor4]> when 'true' ->
				      let <_cor7> =
					  call 'erlang':'integer_to_list'
					      (V)
				      in  let <_cor8> =
					      [86|_cor7]
					  in  let <_cor9> =
						  call 'erlang':'list_to_atom'
						      (_cor8)
					      in  let <_cor10> =
						      %% Line 245
						      apply 'lc$^0'/1
							  (_cor4)
						  in  ( [{'c_var',[],_cor9}|_cor10]
							-| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_6938> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor6})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  let <_cor5> =
			    %% Line 1986
			    case Arity of
			      <M>
				  when call 'erlang':'=<'
					(1,
					 Arity) ->
				  let <_cor3> =
				      %% Line 1987
				      apply 'integers'/2
					  (2, Arity)
				  in  %% Line 1987
				      [1|_cor3]
			      %% Line 1988
			      <_cor7> when 'true' ->
				  []
			    end
			in  apply 'lc$^0'/1
				(_cor5)
		    -| ['list_comprehension'] )
	      in  let <Fun> =
		      %% Line 246
		      {'c_fun',A,_cor11,{'c_apply',A,_cor2,_cor11}}
		  in  %% Line 247
		      apply 'expr'/3
			  (Fun, _cor1, _cor0)
	  %% Line 248
	  <{'c_var',A,V},Sub,St> when 'true' ->
	      let <_265> =
		  %% Line 837
		  call 'orddict':'find'
		      (V, _cor1)
	      in  let <_cor14> =
		      %% Line 837
		      case _265 of
			%% Line 838
			<{'ok',Val}> when 'true' ->
			    Val
			%% Line 839
			<'error'> when 'true' ->
			    V
			( <_8424> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_265})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 249
		      {{'k_var',A,_cor14},[],_cor0}
	  %% Line 250
	  <{'c_literal',A,V},_X_Sub,St> when 'true' ->
	      let <_cor16> =
		  %% Line 251
		  case V of
		    %% Line 252
		    <[]> when 'true' ->
			%% Line 253
			{'k_nil',A}
		    %% Line 254
		    <_cor178>
			when call 'erlang':'is_integer'
			      (V) ->
			%% Line 255
			{'k_int',A,V}
		    %% Line 256
		    <_cor181>
			when call 'erlang':'is_float'
			      (V) ->
			%% Line 257
			{'k_float',A,V}
		    %% Line 258
		    <_cor184>
			when call 'erlang':'is_atom'
			      (V) ->
			%% Line 259
			{'k_atom',A,V}
		    %% Line 260
		    <_cor187> when 'true' ->
			%% Line 261
			{'k_literal',A,V}
		  end
	      in  %% Line 263
		  {_cor16,[],_cor0}
	  %% Line 264
	  <{'c_cons',A,Ch,Ct},Sub,St0> when 'true' ->
	      let <_8878> =
		  %% Line 267
		  apply 'expr'/3
		      (Ch, _cor1, _cor0)
	      in  %% Line 267
		  case _8878 of
		    <{Kh0,Hp0,St1}> when 'true' ->
			let <_10184> =
			    %% Line 268
			    apply 'expr'/3
				(Ct, _cor1, St1)
			in  %% Line 268
			    case _10184 of
			      <{Kt0,Tp0,St2}> when 'true' ->
				  let <_10064> =
				      %% Line 269
				      apply 'force_atomic'/2
					  (Kt0, St2)
				  in  %% Line 269
				      case _10064 of
					<{Kt1,Tp1,St3}> when 'true' ->
					    let <_12267> =
						%% Line 270
						apply 'force_atomic'/2
						    (Kh0, St3)
					    in  %% Line 270
						case _12267 of
						  <{Kh1,Hp1,St4}> when 'true' ->
						      let <_cor22> =
							  %% Line 271
							  call 'erlang':'++'
							      (Tp1, Hp1)
						      in  let <_cor23> =
							      %% Line 271
							      call 'erlang':'++'
								  (Tp0, _cor22)
							  in  let <_cor24> =
								  %% Line 271
								  call 'erlang':'++'
								      (Hp0, _cor23)
							      in  %% Line 271
								  {{'k_cons',A,Kh1,Kt1},_cor24,St4}
						  ( <_cor21> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_12267})
						    -| ['compiler_generated'] )
						end
					( <_cor20> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_10064})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor19> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_10184})
				-| ['compiler_generated'] )
			    end
		    ( <_cor18> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_8878})
		      -| ['compiler_generated'] )
		  end
	  %% Line 272
	  <{'c_tuple',A,Ces},Sub,St0> when 'true' ->
	      let <_3481> =
		  %% Line 273
		  apply 'atomic_list'/3
		      (Ces, _cor1, _cor0)
	      in  %% Line 273
		  case _3481 of
		    <{Kes,Ep,St1}> when 'true' ->
			%% Line 274
			{{'k_tuple',A,Kes},Ep,St1}
		    ( <_cor25> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3481})
		      -| ['compiler_generated'] )
		  end
	  %% Line 275
	  <{'c_map',A,Var,Ces},Sub,St0> when 'true' ->
	      %% Line 276
	      try
		  apply 'expr_map'/5
		      (A, Var, Ces, _cor1, _cor0)
	      of <_cor26> ->
		  case _cor26 of
		    %% Line 277
		    <Res = {_cor188,_cor189,_cor190}> when 'true' ->
			_cor26
		    ( <_cor27> when 'true' ->
			  primop 'match_fail'
			      ({'try_clause',_cor26})
		      -| ['compiler_generated'] )
		  end
	      catch <_cor30,_cor29,_cor28> ->
		  case <_cor30,_cor29,_cor28> of
		    %% Line 279
		    <'throw','bad_map',_cor191> when 'true' ->
			let <_cor31> =
			    %% Line 1048
			    case A of
			      <[Line|_11720]>
				  when call 'erlang':'is_integer'
					(Line) ->
				  Line
			      %% Line 1049
			      <[_cor3|T]> when 'true' ->
				  apply 'get_line'/1
				      (T)
			      %% Line 1050
			      <[]> when 'true' ->
				  'none'
			      ( <_15183> when 'true' ->
				    primop 'match_fail'
					({'function_clause',A})
				-| ['compiler_generated'] )
			    end
			in  let <St1> =
				%% Line 280
				apply 'add_warning'/4
				    (_cor31, 'bad_map', A, _cor0)
			    in  let <Error> =
				    %% Line 284
				    {'c_call',A,{'c_literal',[],'erlang'},{'c_literal',[],'error'},[{'c_literal',[],'badarg'}]}
				in  %% Line 285
				    apply 'expr'/3
					(Error, _cor1, St1)
		    ( <_6308,_4642,_1509> when 'true' ->
			  primop 'raise'
			      (_cor28, _cor29)
		      -| ['compiler_generated'] )
		  end
	  %% Line 287
	  <{'c_binary',A,Cv},Sub,St0> when 'true' ->
	      %% Line 288
	      try
		  apply 'atomic_bin'/3
		      (Cv, _cor1, _cor0)
	      of <_cor37> ->
		  case _cor37 of
		    %% Line 289
		    <{Kv,Ep,St1}> when 'true' ->
			%% Line 290
			{{'k_binary',A,Kv},Ep,St1}
		    ( <_cor38> when 'true' ->
			  primop 'match_fail'
			      ({'try_clause',_cor37})
		      -| ['compiler_generated'] )
		  end
	      catch <_cor41,_cor40,_cor39> ->
		  case <_cor41,_cor40,_cor39> of
		    %% Line 292
		    <'throw','bad_element_size',_cor192> when 'true' ->
			let <_cor42> =
			    %% Line 1048
			    case A of
			      <[Line|_5466]>
				  when call 'erlang':'is_integer'
					(Line) ->
				  Line
			      %% Line 1049
			      <[_cor3|T]> when 'true' ->
				  apply 'get_line'/1
				      (T)
			      %% Line 1050
			      <[]> when 'true' ->
				  'none'
			      ( <_8548> when 'true' ->
				    primop 'match_fail'
					({'function_clause',A})
				-| ['compiler_generated'] )
			    end
			in  let <St1> =
				%% Line 293
				apply 'add_warning'/4
				    (_cor42, 'bad_segment_size', A, _cor0)
			    in  let <Error> =
				    %% Line 297
				    {'c_call',A,{'c_literal',[],'erlang'},{'c_literal',[],'error'},[{'c_literal',[],'badarg'}]}
				in  %% Line 298
				    apply 'expr'/3
					(Error, _cor1, St1)
		    ( <_5164,_72,_5574> when 'true' ->
			  primop 'raise'
			      (_cor39, _cor40)
		      -| ['compiler_generated'] )
		  end
	  %% Line 300
	  <{'c_fun',A,Cvs,Cb},Sub0,St0 = {'kern',Func,OldFF,_cor193,_cor194,_cor195,_cor196,_cor197,_cor198,_cor199}> when 'true' ->
	      let <_cor51> =
		  %% Line 301
		  case OldFF of
		    %% Line 302
		    <'undefined'> when 'true' ->
			Func
		    %% Line 304
		    <_cor200> when 'true' ->
			%% Line 305
			case call 'lists':'keyfind'
				 ('id', 1, A) of
			  %% Line 306
			  <{'id',{_cor201,_cor202,Name}}> when 'true' ->
			      Name
			  %% Line 307
			  <_cor203> when 'true' ->
			      %% Line 308
			      case call 'lists':'keyfind'
				       ('letrec_name', 1, A) of
				%% Line 309
				<{'letrec_name',Name}> when 'true' ->
				    Name
				%% Line 310
				<_cor204> when 'true' ->
				    'unknown_fun'
			      end
			end
		  end
	      in  let <_cor55> =
		      %% Line 314
		      call 'erlang':'setelement'
			  (3, _cor0, _cor51)
		  in  let <_10596> =
			  %% Line 314
			  apply 'pattern_list'/3
			      (Cvs, _cor1, _cor55)
		      in  %% Line 314
			  case _10596 of
			    <{Kvs,Sub1,St1}> when 'true' ->
				%% Line 316
				case St1 of
				  <{'kern',_cor215,_cor216,_cor217,_cor218,_cor219,_cor220,_cor221,_cor222,_cor223}> when 'true' ->
				      let <_cor59> =
					  call 'erlang':'setelement'
					      (3, St1, _cor51)
				      in  let <_12513> =
					      apply 'body'/3
						  (Cb, Sub1, _cor59)
					  in  case _12513 of
						<{Kb,Pb,St2}> when 'true' ->
						    let <_cor64> =
							%% Line 317
							apply 'pre_seq'/2
							    (Pb, Kb)
						    in  %% Line 317
							case St2 of
							  <{'kern',_cor225,_cor226,_cor227,_cor228,_cor229,_cor230,_cor231,_cor232,_cor233}> when 'true' ->
							      let <_cor63> =
								  call 'erlang':'setelement'
								      (3, St2, OldFF)
							      in  {{'ifun',A,Kvs,_cor64},[],_cor63}
							  ( <_cor234> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','kern'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
						( <_cor60> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_12513})
						  -| ['compiler_generated'] )
					      end
				  ( <_cor224> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','kern'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
			    ( <_cor56> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_10596})
			      -| ['compiler_generated'] )
			  end
	  %% Line 318
	  <{'c_seq',_cor235,Ca,Cb},Sub,St0> when 'true' ->
	      let <_8374> =
		  %% Line 319
		  apply 'body'/3
		      (Ca, _cor1, _cor0)
	      in  %% Line 319
		  case _8374 of
		    <{Ka,Pa,St1}> when 'true' ->
			let <_8649> =
			    %% Line 320
			    apply 'body'/3
				(Cb, _cor1, St1)
			in  %% Line 320
			    case _8649 of
			      <{Kb,Pb,St2}> when 'true' ->
				  let <_cor67> =
				      %% Line 321
				      [Ka|Pb]
				  in  let <_cor68> =
					  %% Line 321
					  call 'erlang':'++'
					      (Pa, _cor67)
				      in  %% Line 321
					  {Kb,_cor68,St2}
			      ( <_cor66> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_8649})
				-| ['compiler_generated'] )
			    end
		    ( <_cor65> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_8374})
		      -| ['compiler_generated'] )
		  end
	  %% Line 322
	  <{'c_let',A,Cvs,Ca,Cb},Sub0,St0> when 'true' ->
	      let <_763> =
		  %% Line 324
		  apply 'body'/3
		      (Ca, _cor1, _cor0)
	      in  %% Line 324
		  case _763 of
		    <{Ka,Pa,St1}> when 'true' ->
			let <_4808> =
			    %% Line 325
			    apply 'pattern_list'/3
				(Cvs, _cor1, St1)
			in  %% Line 325
			    case _4808 of
			      <{Kps,Sub1,St2}> when 'true' ->
				  let <_cor79> =
				      %% Line 328
				      case Ka of
					%% Line 329
					<{'ivalues',_cor236,Kas}> when 'true' ->
					    let <_cor77> =
						%% Line 330
						fun (_cor73,_cor72,_cor71) ->
						    %% Line 331
						    [{'iset',[],[_cor73|[]],_cor72,'undefined'}|_cor71]
					    in  %% Line 330
						apply 'foldr2'/4
						    (_cor77, %% Line 332
							     [], Kps, Kas)
					%% Line 333
					<_X_Other> when 'true' ->
					    %% Line 334
					    [{'iset',A,Kps,Ka,'undefined'}|[]]
				      end
				  in  let <_5932> =
					  %% Line 336
					  apply 'body'/3
					      (Cb, Sub1, St2)
				      in  %% Line 336
					  case _5932 of
					    <{Kb,Pb,St3}> when 'true' ->
						let <_cor82> =
						    %% Line 337
						    call 'erlang':'++'
							(_cor79, Pb)
						in  let <_cor83> =
							%% Line 337
							call 'erlang':'++'
							    (Pa, _cor82)
						    in  %% Line 337
							{Kb,_cor83,St3}
					    ( <_cor81> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_5932})
					      -| ['compiler_generated'] )
					  end
			      ( <_cor70> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_4808})
				-| ['compiler_generated'] )
			    end
		    ( <_cor69> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_763})
		      -| ['compiler_generated'] )
		  end
	  %% Line 338
	  <{'c_letrec',A,Cfs,Cb},Sub0,St0> when 'true' ->
	      let <_cor95> =
		  %% Line 341
		  fun (_cor92,_cor91) ->
		      case <_cor92,_cor91> of
			<{{'c_var',_cor237,{F,Ar}},B0},{Sub,S0}> when 'true' ->
			    let <_cor86> =
				%% Line 342
				call 'erlang':'atom_to_list'
				    (F)
			    in  let <_cor84> =
				    %% Line 344
				    call 'erlang':'integer_to_list'
					(Ar)
				in  let <_cor85> =
					%% Line 343
					[47|_cor84]
				    in  let <_cor87> =
					    %% Line 343
					    call 'erlang':'++'
						(_cor86, _cor85)
					in  let <_8689> =
						%% Line 342
						apply 'new_fun_name'/2
						    (_cor87, S0)
					    in  %% Line 342
						case _8689 of
						  <{N,St1}> when 'true' ->
						      let <_2183> =
							  %% Line 346
							  [{'letrec_name',N}|[]]
						      in  let <B> =
							      call 'erlang':'setelement'
								  (2, B0, _2183)
							  in  let <_cor90> =
								  %% Line 859
								  call 'orddict':'store'
								      ({F,Ar}, N, Sub)
							      in  %% Line 347
								  {{N,B},{_cor90,St1}}
						  ( <_cor88> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_8689})
						    -| ['compiler_generated'] )
						end
			( <_cor94,_cor93> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor92,_cor91})
				-| [{'function_name',{'-expr/3-fun-1-',2}}] )
			  -| ['compiler_generated'] )
		      end
	      in  let <_9492> =
		      %% Line 341
		      call 'lists':'mapfoldl'
			  (_cor95, %% Line 348
				   {_cor1,_cor0}, Cfs)
		  in  %% Line 340
		      case _9492 of
			<{Fs0,{Sub1,St1}}> when 'true' ->
			    let <_cor106> =
				%% Line 350
				fun (_cor103,_cor102) ->
				    case <_cor103,_cor102> of
				      <{N,Fd0},S1> when 'true' ->
					  %% Line 351
					  case _cor102 of
					    <{'kern',_cor238,_cor239,_cor240,_cor241,_cor242,_cor243,_cor244,_cor245,_cor246}> when 'true' ->
						let <_cor99> =
						    call 'erlang':'setelement'
							(3, _cor102, N)
						in  let <_10683> =
							apply 'expr'/3
							    (Fd0, Sub1, _cor99)
						    in  case _10683 of
							  <{Fd1,[],St2}> when 'true' ->
							      let <Fd> =
								  call 'erlang':'setelement'
								      (2, Fd1, A)
							      in  %% Line 353
								  {{N,Fd},St2}
							  ( <_cor100> when 'true' ->
								primop 'match_fail'
								    ({'badmatch',_10683})
							    -| ['compiler_generated'] )
							end
					    ( <_cor247> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','kern'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
				      ( <_cor105,_cor104> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor103,_cor102})
					      -| [{'function_name',{'-expr/3-fun-2-',2}}] )
					-| ['compiler_generated'] )
				    end
			    in  let <_420> =
				    %% Line 350
				    call 'lists':'mapfoldl'
					(_cor106, St1, Fs0)
				in  %% Line 350
				    case _420 of
				      <{Fs1,St2}> when 'true' ->
					  %% Line 355
					  ( case St1 of
					      ( <( {'kern',_cor248,_rec22,_cor249,_cor250,_cor251,_cor252,_cor253,_cor254,_cor255}
						   -| ['compiler_generated'] )> when 'true' ->
						    case St2 of
						      <{'kern',_cor257,_cor258,_cor259,_cor260,_cor261,_cor262,_cor263,_cor264,_cor265}> when 'true' ->
							  let <_cor113> =
							      call 'erlang':'setelement'
								  (3, St2, _rec22)
							  in  let <_13880> =
								  apply 'body'/3
								      (Cb, Sub1, _cor113)
							      in  case _13880 of
								    <{Kb,Pb,St3}> when 'true' ->
									%% Line 356
									{Kb,[{'iletrec',A,Fs1}|Pb],St3}
								    ( <_cor114> when 'true' ->
									  primop 'match_fail'
									      ({'badmatch',_13880})
								      -| ['compiler_generated'] )
								  end
						      ( <_cor266> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','kern'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
						-| ['compiler_generated'] )
					      ( <_cor256> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','kern'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				      ( <_cor107> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_420})
					-| ['compiler_generated'] )
				    end
			( <_cor96> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_9492})
			  -| ['compiler_generated'] )
		      end
	  %% Line 357
	  <{'c_case',_cor267,Ca,Ccs},Sub,St0> when 'true' ->
	      let <_13134> =
		  %% Line 358
		  apply 'body'/3
		      (Ca, _cor1, _cor0)
	      in  %% Line 358
		  case _13134 of
		    <{Ka,Pa,St1}> when 'true' ->
			let <_12114> =
			    %% Line 359
			    apply 'match_vars'/2
				(Ka, St1)
			in  %% Line 359
			    case _12114 of
			      <{Kvs,Pv,St2}> when 'true' ->
				  let <_1460> =
				      %% Line 360
				      apply 'kmatch'/4
					  (Kvs, Ccs, _cor1, St2)
				  in  %% Line 360
				      case _1460 of
					<{Km,St3}> when 'true' ->
					    let <_cor118> =
						%% Line 361
						apply 'build_match'/2
						    (Kvs, Km)
					    in  let <Match> =
						    %% Line 361
						    apply 'flatten_seq'/1
							(_cor118)
						in  let <_cor123> =
							%% Line 362
							call 'lists':'last'
							    (Match)
						    in  let <_cor120> =
							    %% Line 362
							    call 'lists':'droplast'
								(Match)
							in  let <_cor121> =
								%% Line 362
								call 'erlang':'++'
								    (Pv, _cor120)
							    in  let <_cor122> =
								    %% Line 362
								    call 'erlang':'++'
									(Pa, _cor121)
								in  %% Line 362
								    {_cor123,_cor122,St3}
					( <_cor117> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_1460})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor116> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_12114})
				-| ['compiler_generated'] )
			    end
		    ( <_cor115> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_13134})
		      -| ['compiler_generated'] )
		  end
	  %% Line 363
	  <{'c_receive',A,Ccs0,Ce,Ca},Sub,St0> when 'true' ->
	      let <_8537> =
		  %% Line 364
		  apply 'atomic'/3
		      (Ce, _cor1, _cor0)
	      in  %% Line 364
		  case _8537 of
		    <{Ke,Pe,St1}> when 'true' ->
			let <_284> =
			    %% Line 879
			    apply 'new_var_name'/1
				(St1)
			in  %% Line 879
			    case _284 of
			      <{New,_3806}> when 'true' ->
				  let <Rvar,St2> = <%% Line 880
				       {'k_var',[],New},_3806>
				  in  let <_cor132> =
					  fun (_cor130) ->
					      case _cor130 of
						<C = {'c_clause',Banno,_cor268,_cor269,B0}> when 'true' ->
						    let <B1> =
							{'c_seq',[],{'ireceive_accept',A,'undefined'},B0}
						    in  let <_cor128> =
							    call 'erlang':'setelement'
								(5, _cor130, B1)
							in  call 'erlang':'setelement'
								(2, _cor128, Banno)
						( <_cor131> when 'true' ->
						      ( primop 'match_fail'
							    ({'function_clause',_cor130})
							-| [{'function_name',{'-expr/3-fun-3-',1}}] )
						  -| ['compiler_generated'] )
					      end
				      in  let <Ccs1> =
					      call 'lists':'map'
						  (_cor132, Ccs0)
					  in  let <_15106> =
						  apply 'new_var_name'/1
						      (St2)
					      in  case _15106 of
						    <{Mpat,St3}> when 'true' ->
							let <Rc> =
							    {'c_clause',['compiler_generated'|A],[{'c_var',[],Mpat}|[]],{'c_literal',A,'true'},{'ireceive_next',A,'undefined'}}
							in  let <_cor137> =
								call 'erlang':'++'
								    (Ccs1, [Rc|[]])
							    in  let <_cor136> =
								    apply 'add_var_def'/2
									(Rvar, St3)
								in  let <_3973> =
									apply 'kmatch'/4
									    ([Rvar|[]], _cor137, _cor1, _cor136)
								    in  case _3973 of
									  <{Km,St4}> when 'true' ->
									      let <_9990> =
										  apply 'body'/3
										      (Ca, _cor1, St4)
									      in  case _9990 of
										    <{Ka,Pa,St5}> when 'true' ->
											let <_cor140> =
											    apply 'pre_seq'/2
												(Pa, Ka)
											in  {{'k_receive',A,Rvar,Km,Ke,_cor140,[]},Pe,St5}
										    ( <_cor139> when 'true' ->
											  primop 'match_fail'
											      ({'badmatch',_9990})
										      -| ['compiler_generated'] )
										  end
									  ( <_cor138> when 'true' ->
										primop 'match_fail'
										    ({'badmatch',_3973})
									    -| ['compiler_generated'] )
									end
						    ( <_cor134> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_15106})
						      -| ['compiler_generated'] )
						  end
			      ( <_9083> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_284})
				-| ['compiler_generated'] )
			    end
		    ( <_cor124> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_8537})
		      -| ['compiler_generated'] )
		  end
	  %% Line 379
	  <{'c_apply',A,Cop,Cargs},Sub,St> when 'true' ->
	      %% Line 380
	      apply 'c_apply'/5
		  (A, Cop, Cargs, _cor1, _cor0)
	  %% Line 381
	  <{'c_call',A,{'c_literal',_cor275,'erlang'},{'c_literal',_cor276,'is_record'},Args0 = %% Line 382
												[_cor277|[Tag|[Sz|[]]]]},Sub,St0> when 'true' ->
	      let <_9399> =
		  %% Line 383
		  apply 'atomic_list'/3
		      (Args0, _cor1, _cor0)
	      in  %% Line 383
		  case _9399 of
		    <{Args,Ap,St}> when 'true' ->
			%% Line 385
			case <Tag,Sz> of
			  %% Line 386
			  <{'c_literal',_cor278,Atom},{'c_literal',_cor279,Int}>
			      when let <_cor143> =
				    %% Line 387
				    call 'erlang':'is_atom'
					(Atom)
				in  let <_cor144> =
					%% Line 387
					call 'erlang':'is_integer'
					    (Int)
				    in  %% Line 387
					call 'erlang':'and'
					    (_cor143, _cor144) ->
			      %% Line 390
			      {{'k_bif',A,{'k_remote',[],{'k_atom',[],'erlang'},{'k_atom',[],'is_record'},3},Args,[]},Ap,St}
			  %% Line 391
			  <_cor280,_cor281> when 'true' ->
			      %% Line 393
			      {{'k_call',A,{'k_remote',[],{'k_atom',[],'erlang'},{'k_atom',[],'is_record'},3},Args,[]},Ap,St}
			end
		    ( <_cor141> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_9399})
		      -| ['compiler_generated'] )
		  end
	  %% Line 395
	  <{'c_call',A,M0,F0,Cargs},Sub,St0> when 'true' ->
	      let <Ar> =
		  %% Line 396
		  call 'erlang':'length'
		      (Cargs)
	      in  let <_5122> =
		      %% Line 397
		      apply 'call_type'/3
			  (M0, F0, Ar)
		  in  let <Type,St1> =
			  %% Line 397
			  case _5122 of
			    %% Line 398
			    <'error'> when 'true' ->
				let <_cor147> =
				    %% Line 1048
				    case A of
				      <[Line|_13503]>
					  when call 'erlang':'is_integer'
						(Line) ->
					  Line
				      %% Line 1049
				      <[_cor3|T]> when 'true' ->
					  apply 'get_line'/1
					      (T)
				      %% Line 1050
				      <[]> when 'true' ->
					  'none'
				      ( <_1215> when 'true' ->
					    primop 'match_fail'
						({'function_clause',A})
					-| ['compiler_generated'] )
				    end
				in  let <_cor148> =
					%% Line 401
					apply 'add_warning'/4
					    (_cor147, 'bad_call', A, _cor0)
				    in  %% Line 401
					<'old_apply',_cor148>
			    %% Line 402
			    <Type0> when 'true' ->
				%% Line 403
				<_5122,_cor0>
			  end
		      in  %% Line 406
			  case Type of
			    %% Line 407
			    <'old_apply'> when 'true' ->
				let <_cor5> =
				    %% Line 1980
				    fun (_12014,_10305) ->
					%% Line 1981
					{'c_cons',[],_12014,_10305}
				in  let <_cor152> =
					%% Line 1980
					call 'lists':'foldr'
					    (_cor5, %% Line 1982
						    {'c_literal',[],[]}, Cargs)
				    in  let <Call> =
					    %% Line 408
					    {'c_call',A,%% Line 409
							{'c_literal',[],'erlang'},%% Line 410
										  {'c_literal',[],'apply'},%% Line 411
													   [M0|[F0|[_cor152|[]]]]}
					in  %% Line 412
					    apply 'expr'/3
						(Call, _cor1, St1)
			    %% Line 413
			    <_cor282> when 'true' ->
				let <_13665> =
				    %% Line 414
				    apply 'atomic_list'/3
					([M0|[F0|Cargs]], _cor1, St1)
				in  %% Line 414
				    case _13665 of
				      <{[M1|[F1|Kargs]],Ap,St}> when 'true' ->
					  let <_cor156> =
					      %% Line 415
					      case Type of
						%% Line 416
						<'bif'> when 'true' ->
						    %% Line 417
						    {'k_bif',A,{'k_remote',[],M1,F1,Ar},Kargs,[]}
						%% Line 419
						<'call'> when 'true' ->
						    %% Line 420
						    {'k_call',A,{'k_remote',[],M1,F1,Ar},Kargs,[]}
						%% Line 422
						<'apply'> when 'true' ->
						    %% Line 423
						    {'k_call',A,{'k_remote',[],M1,F1,Ar},Kargs,[]}
						( <_cor155> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',Type})
						  -| ['compiler_generated'] )
					      end
					  in  %% Line 426
					      {_cor156,Ap,St}
				      ( <_cor154> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_13665})
					-| ['compiler_generated'] )
				    end
			  end
	  %% Line 428
	  <{'c_primop',A,{'c_literal',_cor283,'match_fail'},Cargs0},Sub,St0> when 'true' ->
	      let <Cargs> =
		  %% Line 429
		  apply 'translate_match_fail'/4
		      (Cargs0, _cor1, A, _cor0)
	      in  let <_13246> =
		      %% Line 430
		      apply 'atomic_list'/3
			  (Cargs, _cor1, _cor0)
		  in  %% Line 430
		      case _13246 of
			<{Kargs,Ap,St}> when 'true' ->
			    let <Ar> =
				%% Line 431
				call 'erlang':'length'
				    (Cargs)
			    in  let <Call> =
				    %% Line 432
				    {'k_call',A,{'k_remote',[],{'k_atom',[],'erlang'},%% Line 433
										      {'k_atom',[],'error'},Ar},Kargs,[]}
				in  %% Line 435
				    {Call,Ap,St}
			( <_cor160> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_13246})
			  -| ['compiler_generated'] )
		      end
	  %% Line 436
	  <{'c_primop',A,{'c_literal',_cor284,N},Cargs},Sub,St0> when 'true' ->
	      let <_3026> =
		  %% Line 437
		  apply 'atomic_list'/3
		      (Cargs, _cor1, _cor0)
	      in  %% Line 437
		  case _3026 of
		    <{Kargs,Ap,St1}> when 'true' ->
			let <Ar> =
			    %% Line 438
			    call 'erlang':'length'
				(Cargs)
			in  %% Line 439
			    {{'k_bif',A,{'k_internal',[],N,Ar},Kargs,[]},Ap,St1}
		    ( <_cor163> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3026})
		      -| ['compiler_generated'] )
		  end
	  %% Line 440
	  <{'c_try',A,Ca,Cvs,Cb,Evs,Ch},Sub0,St0> when 'true' ->
	      let <_7787> =
		  %% Line 443
		  apply 'body'/3
		      (Ca, _cor1, _cor0)
	      in  %% Line 443
		  case _7787 of
		    <{Ka,Pa,St1}> when 'true' ->
			let <_12800> =
			    %% Line 444
			    apply 'pattern_list'/3
				(Cvs, _cor1, St1)
			in  %% Line 444
			    case _12800 of
			      <{Kcvs,Sub1,St2}> when 'true' ->
				  let <_171> =
				      %% Line 445
				      apply 'body'/3
					  (Cb, Sub1, St2)
				  in  %% Line 445
				      case _171 of
					<{Kb,Pb,St3}> when 'true' ->
					    let <_12466> =
						%% Line 446
						apply 'pattern_list'/3
						    (Evs, _cor1, St3)
					    in  %% Line 446
						case _12466 of
						  <{Kevs,Sub2,St4}> when 'true' ->
						      let <_2671> =
							  %% Line 447
							  apply 'body'/3
							      (Ch, Sub2, St4)
						      in  %% Line 447
							  case _2671 of
							    <{Kh,Ph,St5}> when 'true' ->
								let <_cor172> =
								    %% Line 448
								    apply 'pre_seq'/2
									(Pa, Ka)
								in  let <_cor171> =
									%% Line 449
									apply 'pre_seq'/2
									    (Pb, Kb)
								    in  let <_cor170> =
									    %% Line 450
									    apply 'pre_seq'/2
										(Ph, Kh)
									in  %% Line 448
									    {{'k_try',A,_cor172,Kcvs,_cor171,Kevs,_cor170,[]},%% Line 450
															      [],St5}
							    ( <_cor169> when 'true' ->
								  primop 'match_fail'
								      ({'badmatch',_2671})
							      -| ['compiler_generated'] )
							  end
						  ( <_cor168> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_12466})
						    -| ['compiler_generated'] )
						end
					( <_cor167> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_171})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor166> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_12800})
				-| ['compiler_generated'] )
			    end
		    ( <_cor165> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_7787})
		      -| ['compiler_generated'] )
		  end
	  %% Line 451
	  <{'c_catch',A,Cb},Sub,St0> when 'true' ->
	      let <_5424> =
		  %% Line 452
		  apply 'body'/3
		      (Cb, _cor1, _cor0)
	      in  %% Line 452
		  case _5424 of
		    <{Kb,Pb,St1}> when 'true' ->
			let <_cor174> =
			    %% Line 453
			    apply 'pre_seq'/2
				(Pb, Kb)
			in  %% Line 453
			    {{'k_catch',A,_cor174,[]},[],St1}
		    ( <_cor173> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_5424})
		      -| ['compiler_generated'] )
		  end
	  %% Line 455
	  <{'ireceive_accept',A,_cor285},_X_Sub,St> when 'true' ->
	      {{'k_receive_accept',A},[],_cor0}
	  ( <_cor177,_cor176,_cor175> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'expr',3}}] )
	    -| ['compiler_generated'] )
	end
'translate_match_fail'/4 =
    %% Line 461
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 462
	case _cor3 of
	  %% Line 463
	  <[{'c_tuple',_cor16,[{'c_literal',_cor17,'function_clause'}|As]}|[]]> when 'true' ->
	      %% Line 464
	      apply 'translate_match_fail_1'/4
		  (_cor1, As, _cor2, _cor0)
	  %% Line 465
	  <[{'c_literal',_cor18,Tuple}|[]]>
	      when call 'erlang':'is_tuple'
		    (Tuple) ->
	      %% Line 468
	      case call 'erlang':'tuple_to_list'
		       (Tuple) of
		%% Line 469
		<['function_clause'|As0]> when 'true' ->
		    let <_cor8> =
			%% Line 470
			( letrec
			      'lc$^0'/1 =
				  fun (_cor6) ->
				      case _cor6 of
					<[E|_cor5]> when 'true' ->
					    let <_cor7> =
						apply 'lc$^0'/1
						    (_cor5)
					    in  ( [{'c_literal',[],E}|_cor7]
						  -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_8628> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor6})
						-| [{'function_name',{'lc$^0',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  case As0 of
				<[E|_cor5]> when 'true' ->
				    let <_cor7> =
					apply 'lc$^0'/1
					    (_cor5)
				    in  ( [{'c_literal',[],E}|_cor7]
					  -| ['compiler_generated'] )
				<[]> when 'true' ->
				    []
				( <_8628> when 'true' ->
				      primop 'match_fail'
					  ({'function_clause',As0})
				  -| ['compiler_generated'] )
			      end
			  -| ['list_comprehension'] )
		    in  %% Line 471
			apply 'translate_match_fail_1'/4
			    (_cor1, _cor8, _cor2, _cor0)
		%% Line 472
		<_cor19> when 'true' ->
		    _cor3
	      end
	  %% Line 475
	  <_cor20> when 'true' ->
	      _cor3
	end
'translate_match_fail_1'/4 =
    %% Line 480
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Anno,As,Sub,{'kern',_cor15,FF,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22}> when 'true' ->
	      let <_14421> =
		  %% Line 481
		  call 'lists':'keyfind'
		      ('function_name', 1, _cor3)
	      in  let <_cor6> =
		      %% Line 481
		      case _14421 of
			%% Line 482
			<'false'> when 'true' ->
			    %% Line 483
			    'none'
			%% Line 484
			<{'function_name',{Name,Arity}}> when 'true' ->
			    let <_5023> =
				%% Line 853
				call 'orddict':'find'
				    ({Name,Arity}, _cor1)
			    in  let <_cor4> =
				    %% Line 853
				    case _5023 of
				      %% Line 854
				      <{'ok',Val}> when 'true' ->
					  Val
				      %% Line 855
				      <'error'> when 'true' ->
					  Name
				      ( <_14058> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_5023})
					-| ['compiler_generated'] )
				    end
				in  %% Line 485
				    {_cor4,Arity}
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_14421})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 487
		      case <_cor6,FF> of
			%% Line 488
			<Same,_cor23>
			    when call 'erlang':'=:='
				  (FF,
				   _cor6) ->
			    %% Line 490
			    apply 'translate_fc'/1
				(_cor2)
			%% Line 491
			<{F,_cor24},_cor25>
			    when call 'erlang':'=:='
				  (FF,
				   F) ->
			    %% Line 493
			    apply 'translate_fc'/1
				(_cor2)
			%% Line 494
			<_fol122,_fol123> when 'true' ->
			    let <_cor8> =
				%% Line 502
				call 'cerl':'c_tuple'
				    (_cor2)
			    in  let <_cor9> =
				    %% Line 502
				    call 'cerl':'c_tuple'
					([{'c_literal',[],'case_clause'}|[_cor8|[]]])
				in  %% Line 502
				    [_cor9|[]]
		      end
	  ( <_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'translate_match_fail_1',4}}] )
	    -| ['compiler_generated'] )
	end
'translate_fc'/1 =
    %% Line 505
    fun (_cor0) ->
	let <_cor5> =
	    %% Line 1980
	    fun (_cor2,_cor1) ->
		%% Line 1981
		{'c_cons',[],_cor2,_cor1}
	in  let <_cor1> =
		%% Line 1980
		call 'lists':'foldr'
		    (_cor5, %% Line 1982
			    {'c_literal',[],[]}, _cor0)
	    in  %% Line 506
		[{'c_literal',[],'function_clause'}|[_cor1|[]]]
'expr_map'/5 =
    %% Line 508
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_6970> =
	    %% Line 510
	    apply 'expr'/3
		(_cor3, _cor1, _cor0)
	in  %% Line 510
	    case _6970 of
	      <{Var,Mps,St1}> when 'true' ->
		  let <_8406> =
		      %% Line 511
		      apply 'is_valid_map_src'/1
			  (Var)
		  in  %% Line 511
		      case _8406 of
			%% Line 512
			<'true'> when 'true' ->
			    let <_6114> =
				%% Line 513
				apply 'map_split_pairs'/5
				    (_cor4, Var, _cor2, _cor1, St1)
			    in  %% Line 513
				case _6114 of
				  <{Km,Eps,St2}> when 'true' ->
				      let <_cor7> =
					  %% Line 514
					  call 'erlang':'++'
					      (Eps, Mps)
				      in  %% Line 514
					  {Km,_cor7,St2}
				  ( <_cor6> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_6114})
				    -| ['compiler_generated'] )
				end
			%% Line 515
			<'false'> when 'true' ->
			    call 'erlang':'throw'
				('bad_map')
			( <_cor8> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_8406})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_6970})
		-| ['compiler_generated'] )
	    end
'is_valid_map_src'/1 =
    %% Line 518
    fun (_cor0) ->
	case _cor0 of
	  <{'k_map',_cor2,_cor3,_cor4,_cor5}> when 'true' ->
	      'true'
	  %% Line 519
	  <{'k_literal',_cor6,M}>
	      when call 'erlang':'is_map'
		    (M) ->
	      'true'
	  %% Line 520
	  <{'k_var',_cor7,_cor8}> when 'true' ->
	      'true'
	  %% Line 521
	  <_cor9> when 'true' ->
	      'false'
	end
'map_split_pairs'/5 =
    %% Line 523
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor9> =
	    %% Line 527
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor7) ->
			  case _cor7 of
			    <[{'c_map_pair',_cor54,{'c_literal',_cor55,Op},K,V}|_cor6]> when 'true' ->
				let <_cor8> =
				    apply 'lc$^0'/1
					(_cor6)
				in  ( [{Op,K,V}|_cor8]
				      -| ['compiler_generated'] )
			    ( <[_cor5|_cor6]> when 'true' ->
				  apply 'lc$^0'/1
				      (_cor6)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_5879> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor7})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (_cor2)
	      -| ['list_comprehension'] )
	in  let <_cor20> =
		%% Line 528
		fun (_cor17,_cor16) ->
		    case <_cor17,_cor16> of
		      %% Line 529
		      <{Op,K0,V0},{Ops,Espi,Sti0}>
			  when let <_cor11> =
				call 'erlang':'=:='
				    (Op, 'assoc')
			    in  let <_cor12> =
				    call 'erlang':'=:='
					(Op, 'exact')
				in  call 'erlang':'or'
					(_cor11, _cor12) ->
			  let <_6160> =
			      %% Line 530
			      apply 'expr'/3
				  (K0, _cor1, Sti0)
			  in  %% Line 530
			      case _6160 of
				<{K,[],Sti1}> when 'true' ->
				    let <_13394> =
					%% Line 531
					apply 'atomic'/3
					    (V0, _cor1, Sti1)
				    in  %% Line 531
					case _13394 of
					  <{V,Ep,Sti2}> when 'true' ->
					      let <_cor15> =
						  %% Line 532
						  call 'erlang':'++'
						      (Ep, Espi)
					      in  %% Line 532
						  {[{Op,K,V}|Ops],_cor15,Sti2}
					  ( <_cor14> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_13394})
					    -| ['compiler_generated'] )
					end
				( <_cor13> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_6160})
				  -| ['compiler_generated'] )
			      end
		      ( <_cor19,_cor18> when 'true' ->
			    ( primop 'match_fail'
				  ({'function_clause',_cor17,_cor16})
			      -| [{'function_name',{'-map_split_pairs/5-fun-0-',2}}] )
			-| ['compiler_generated'] )
		    end
	    in  let <_2924> =
		    %% Line 528
		    call 'lists':'foldr'
			(_cor20, %% Line 533
				 {[],[],_cor0}, _cor9)
		in  %% Line 528
		    case _2924 of
		      <{Pairs,Esp,St1}> when 'true' ->
			  let <_5160> =
			      %% Line 535
			      apply 'map_group_pairs'/1
				  (Pairs)
			  in  %% Line 535
			      case _5160 of
				%% Line 536
				<{Assoc,[]}> when 'true' ->
				    let <_cor26> =
					%% Line 537
					( letrec
					      'lc$^1'/1 =
						  fun (_cor24) ->
						      case _cor24 of
							<[{_cor56,{'assoc',K,V}}|_cor23]> when 'true' ->
							    let <_cor25> =
								apply 'lc$^1'/1
								    (_cor23)
							    in  ( [{'k_map_pair',[],K,V}|_cor25]
								  -| ['compiler_generated'] )
							( <[_cor22|_cor23]> when 'true' ->
							      apply 'lc$^1'/1
								  (_cor23)
							  -| ['compiler_generated'] )
							<[]> when 'true' ->
							    []
							( <_5776> when 'true' ->
							      ( primop 'match_fail'
								    ({'function_clause',_cor24})
								-| [{'function_name',{'lc$^1',1}}] )
							  -| ['compiler_generated'] )
						      end
					  in  apply 'lc$^1'/1
						  (Assoc)
					  -| ['list_comprehension'] )
				    in  %% Line 538
					{{'k_map',_cor4,_cor3,'assoc',_cor26},Esp,St1}
				%% Line 539
				<{[],Exact}> when 'true' ->
				    let <_cor32> =
					%% Line 540
					( letrec
					      'lc$^2'/1 =
						  fun (_cor30) ->
						      case _cor30 of
							<[{_cor57,{'exact',K,V}}|_cor29]> when 'true' ->
							    let <_cor31> =
								apply 'lc$^2'/1
								    (_cor29)
							    in  ( [{'k_map_pair',[],K,V}|_cor31]
								  -| ['compiler_generated'] )
							( <[_cor28|_cor29]> when 'true' ->
							      apply 'lc$^2'/1
								  (_cor29)
							  -| ['compiler_generated'] )
							<[]> when 'true' ->
							    []
							( <_2342> when 'true' ->
							      ( primop 'match_fail'
								    ({'function_clause',_cor30})
								-| [{'function_name',{'lc$^2',1}}] )
							  -| ['compiler_generated'] )
						      end
					  in  apply 'lc$^2'/1
						  (Exact)
					  -| ['list_comprehension'] )
				    in  %% Line 541
					{{'k_map',_cor4,_cor3,'exact',_cor32},Esp,St1}
				%% Line 542
				<{Assoc,Exact}> when 'true' ->
				    let <_cor38> =
					%% Line 543
					( letrec
					      'lc$^3'/1 =
						  fun (_cor36) ->
						      case _cor36 of
							<[{_cor58,{'assoc',K,V}}|_cor35]> when 'true' ->
							    let <_cor37> =
								apply 'lc$^3'/1
								    (_cor35)
							    in  ( [{'k_map_pair',[],K,V}|_cor37]
								  -| ['compiler_generated'] )
							( <[_cor34|_cor35]> when 'true' ->
							      apply 'lc$^3'/1
								  (_cor35)
							  -| ['compiler_generated'] )
							<[]> when 'true' ->
							    []
							( <_12826> when 'true' ->
							      ( primop 'match_fail'
								    ({'function_clause',_cor36})
								-| [{'function_name',{'lc$^3',1}}] )
							  -| ['compiler_generated'] )
						      end
					  in  apply 'lc$^3'/1
						  (Assoc)
					  -| ['list_comprehension'] )
				    in  let <_2023> =
					    %% Line 544
					    apply 'force_atomic'/2
						({'k_map',_cor4,_cor3,'assoc',_cor38}, St1)
					in  %% Line 544
					    case _2023 of
					      <{Mvar,Em,St2}> when 'true' ->
						  let <_cor45> =
						      %% Line 545
						      ( letrec
							    'lc$^4'/1 =
								fun (_cor43) ->
								    case _cor43 of
								      <[{_cor59,{'exact',K,V}}|_cor42]> when 'true' ->
									  let <_cor44> =
									      apply 'lc$^4'/1
										  (_cor42)
									  in  ( [{'k_map_pair',[],K,V}|_cor44]
										-| ['compiler_generated'] )
								      ( <[_cor41|_cor42]> when 'true' ->
									    apply 'lc$^4'/1
										(_cor42)
									-| ['compiler_generated'] )
								      <[]> when 'true' ->
									  []
								      ( <_12037> when 'true' ->
									    ( primop 'match_fail'
										  ({'function_clause',_cor43})
									      -| [{'function_name',{'lc$^4',1}}] )
									-| ['compiler_generated'] )
								    end
							in  apply 'lc$^4'/1
								(Exact)
							-| ['list_comprehension'] )
						  in  let <_cor47> =
							  %% Line 546
							  call 'erlang':'++'
							      (Esp, Em)
						      in  %% Line 546
							  {{'k_map',_cor4,Mvar,'exact',_cor45},_cor47,St2}
					      ( <_cor40> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_2023})
						-| ['compiler_generated'] )
					    end
				( <_cor48> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_5160})
				  -| ['compiler_generated'] )
			      end
		      ( <_cor21> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_2924})
			-| ['compiler_generated'] )
		    end
'map_group_pairs'/1 =
    %% Line 552
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 553
	    call 'dict':'new'
		()
	in  let <_cor2> =
		%% Line 553
		apply 'map_group_pairs'/2
		    (_cor0, _cor1)
	    in  let <Groups> =
		    %% Line 553
		    call 'dict':'to_list'
			(_cor2)
		in  let <_cor6> =
			%% Line 554
			fun (_cor4) ->
			    case _cor4 of
			      <{_cor8,{Op,_cor9,_cor10}}> when 'true' ->
				  call 'erlang':'=:='
				      (Op, 'assoc')
			      ( <_cor5> when 'true' ->
				    ( primop 'match_fail'
					  ({'function_clause',_cor4})
				      -| [{'function_name',{'-map_group_pairs/1-fun-0-',1}}] )
				-| ['compiler_generated'] )
			    end
		    in  %% Line 554
			call 'lists':'partition'
			    (_cor6, Groups)
'map_group_pairs'/2 =
    %% Line 556
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'assoc',K,V}|Es0],Used0> when 'true' ->
	      let <_cor2> =
		  %% Line 577
		  apply 'map_key_clean'/1
		      (K)
	      in  let <_12910> =
		      %% Line 577
		      call 'dict':'find'
			  (_cor2, _cor0)
		  in  let <_cor3> =
			  %% Line 557
			  case _12910 of
			    %% Line 558
			    <{'ok',{'assoc',_cor10,_cor11}}> when 'true' ->
				let <_7262> = {'assoc',K,V}
				in  let <_cor3> =
					%% Line 574
					apply 'map_key_clean'/1
					    (K)
				    in  %% Line 574
					call 'dict':'store'
					    (_cor3, _7262, _cor0)
			    %% Line 559
			    <{'ok',{'exact',_cor12,_cor13}}> when 'true' ->
				let <_5723> = {'exact',K,V}
				in  let <_cor3> =
					%% Line 574
					apply 'map_key_clean'/1
					    (K)
				    in  %% Line 574
					call 'dict':'store'
					    (_cor3, _5723, _cor0)
			    %% Line 560
			    <_cor14> when 'true' ->
				let <_6475> = {'assoc',K,V}
				in  let <_cor3> =
					%% Line 574
					apply 'map_key_clean'/1
					    (K)
				    in  %% Line 574
					call 'dict':'store'
					    (_cor3, _6475, _cor0)
			  end
		      in  %% Line 562
			  apply 'map_group_pairs'/2
			      (Es0, _cor3)
	  %% Line 563
	  <[{'exact',K,V}|Es0],Used0> when 'true' ->
	      let <_cor2> =
		  %% Line 577
		  apply 'map_key_clean'/1
		      (K)
	      in  let <_12194> =
		      %% Line 577
		      call 'dict':'find'
			  (_cor2, _cor0)
		  in  let <_cor6> =
			  %% Line 564
			  case _12194 of
			    %% Line 565
			    <{'ok',{'assoc',_cor15,_cor16}}> when 'true' ->
				let <_6355> = {'assoc',K,V}
				in  let <_cor3> =
					%% Line 574
					apply 'map_key_clean'/1
					    (K)
				    in  %% Line 574
					call 'dict':'store'
					    (_cor3, _6355, _cor0)
			    %% Line 566
			    <{'ok',{'exact',_cor17,_cor18}}> when 'true' ->
				let <_4583> = {'exact',K,V}
				in  let <_cor3> =
					%% Line 574
					apply 'map_key_clean'/1
					    (K)
				    in  %% Line 574
					call 'dict':'store'
					    (_cor3, _4583, _cor0)
			    %% Line 567
			    <_cor19> when 'true' ->
				let <_4319> = {'exact',K,V}
				in  let <_cor3> =
					%% Line 574
					apply 'map_key_clean'/1
					    (K)
				    in  %% Line 574
					call 'dict':'store'
					    (_cor3, _4319, _cor0)
			  end
		      in  %% Line 569
			  apply 'map_group_pairs'/2
			      (Es0, _cor6)
	  %% Line 570
	  <[],Used> when 'true' ->
	      _cor0
	  ( <_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'map_group_pairs',2}}] )
	    -| ['compiler_generated'] )
	end
'map_key_clean'/1 =
    %% Line 580
    fun (_cor0) ->
	case _cor0 of
	  <{'k_literal',_cor2,V}> when 'true' ->
	      {'k_literal',V}
	  %% Line 581
	  <{'k_int',_cor3,V}> when 'true' ->
	      {'k_int',V}
	  %% Line 582
	  <{'k_float',_cor4,V}> when 'true' ->
	      {'k_float',V}
	  %% Line 583
	  <{'k_atom',_cor5,V}> when 'true' ->
	      {'k_atom',V}
	  %% Line 584
	  <{'k_nil',_cor6}> when 'true' ->
	      'k_nil'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'map_key_clean',1}}] )
	    -| ['compiler_generated'] )
	end
'call_type'/3 =
    %% Line 589
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'c_literal',_cor9,M},{'c_literal',_cor10,F},Ar>
	      when let <_cor3> =
		    call 'erlang':'is_atom'
			(M)
		in  let <_cor4> =
			call 'erlang':'is_atom'
			    (F)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      let <_13713> =
		  %% Line 590
		  apply 'is_remote_bif'/3
		      (M, F, _cor0)
	      in  %% Line 590
		  case _13713 of
		    %% Line 591
		    <'false'> when 'true' ->
			'call'
		    %% Line 592
		    <'true'> when 'true' ->
			'bif'
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_13713})
		      -| ['compiler_generated'] )
		  end
	  %% Line 594
	  <{'c_var',_cor11,_cor12},{'c_literal',_cor13,A},_cor14>
	      when call 'erlang':'is_atom'
		    (A) ->
	      'apply'
	  %% Line 595
	  <{'c_literal',_cor15,A},{'c_var',_cor16,_cor17},_cor18>
	      when call 'erlang':'is_atom'
		    (A) ->
	      'apply'
	  %% Line 596
	  <{'c_var',_cor19,_cor20},{'c_var',_cor21,_cor22},_cor23> when 'true' ->
	      'apply'
	  %% Line 597
	  <_cor24,_cor25,_cor26> when 'true' ->
	      'error'
	end
'match_vars'/2 =
    %% Line 602
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'ivalues',_cor12,As},St> when 'true' ->
	      let <_cor8> =
		  %% Line 603
		  fun (_cor5,_cor4) ->
		      case <_cor5,_cor4> of
			<Ka,{Vs,Vsp,St0}> when 'true' ->
			    let <_12247> =
				%% Line 604
				apply 'force_variable'/2
				    (_cor5, St0)
			    in  %% Line 604
				case _12247 of
				  <{V,Vp,St1}> when 'true' ->
				      let <_cor3> =
					  %% Line 605
					  call 'erlang':'++'
					      (Vp, Vsp)
				      in  %% Line 605
					  {[V|Vs],_cor3,St1}
				  ( <_cor2> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_12247})
				    -| ['compiler_generated'] )
				end
			( <_cor7,_cor6> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor5,_cor4})
				-| [{'function_name',{'-match_vars/2-fun-0-',2}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 603
		  call 'lists':'foldr'
		      (_cor8, %% Line 606
			      {[],[],_cor0}, As)
	  %% Line 607
	  <Ka,St0> when 'true' ->
	      let <_5376> =
		  %% Line 608
		  apply 'force_variable'/2
		      (_cor1, _cor0)
	      in  %% Line 608
		  case _5376 of
		    <{V,Vp,St1}> when 'true' ->
			%% Line 609
			{[V|[]],Vp,St1}
		    ( <_cor9> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_5376})
		      -| ['compiler_generated'] )
		  end
	end
'c_apply'/5 =
    %% Line 614
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <A,{'c_var',Ra,{F0,Ar}},Cargs,Sub,St0> when 'true' ->
	      let <_12570> =
		  %% Line 615
		  apply 'atomic_list'/3
		      (_cor2, _cor1, _cor0)
	      in  %% Line 615
		  case _12570 of
		    <{Kargs,Ap,St1}> when 'true' ->
			let <_5023> =
			    %% Line 853
			    call 'orddict':'find'
				({F0,Ar}, _cor1)
			in  let <F1> =
				%% Line 853
				case _5023 of
				  %% Line 854
				  <{'ok',Val}> when 'true' ->
				      Val
				  %% Line 855
				  <'error'> when 'true' ->
				      F0
				  ( <_2348> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_5023})
				    -| ['compiler_generated'] )
				end
			    in  %% Line 617
				{{'k_call',_cor4,{'k_local',Ra,F1,Ar},Kargs,[]},Ap,St1}
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12570})
		      -| ['compiler_generated'] )
		  end
	  %% Line 619
	  <A,Cop,Cargs,Sub,St0> when 'true' ->
	      let <_1988> =
		  %% Line 620
		  apply 'variable'/3
		      (_cor3, _cor1, _cor0)
	      in  %% Line 620
		  case _1988 of
		    <{Kop,Op,St1}> when 'true' ->
			let <_7549> =
			    %% Line 621
			    apply 'atomic_list'/3
				(_cor2, _cor1, St1)
			in  %% Line 621
			    case _7549 of
			      <{Kargs,Ap,St2}> when 'true' ->
				  let <_cor9> =
				      %% Line 622
				      call 'erlang':'++'
					  (Op, Ap)
				  in  %% Line 622
				      {{'k_call',_cor4,Kop,Kargs,[]},_cor9,St2}
			      ( <_cor8> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_7549})
				-| ['compiler_generated'] )
			    end
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1988})
		      -| ['compiler_generated'] )
		  end
	end
'flatten_seq'/1 =
    %% Line 624
    fun (_cor0) ->
	case _cor0 of
	  <{'iset',A,Vs,Arg,B}> when 'true' ->
	      let <_cor1> =
		  %% Line 625
		  apply 'flatten_seq'/1
		      (B)
	      in  %% Line 625
		  [{'iset',A,Vs,Arg,'undefined'}|_cor1]
	  %% Line 626
	  <Ke> when 'true' ->
	      [_cor0|[]]
	end
'pre_seq'/2 =
    %% Line 628
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'iset',A,Vs,Arg,B}|Ps],K> when 'true' ->
	      %% Line 629
	      case <> of
		<>
		    when call 'erlang':'=:='
			  ('undefined',
			   B) ->
		    let <_cor3> =
			%% Line 630
			apply 'pre_seq'/2
			    (Ps, _cor0)
		    in  %% Line 630
			{'iset',A,Vs,Arg,_cor3}
		( <> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch','undefined'})
		  -| ['compiler_generated'] )
	      end
	  %% Line 631
	  <[P|Ps],K> when 'true' ->
	      let <_cor4> =
		  %% Line 632
		  apply 'pre_seq'/2
		      (Ps, _cor0)
	      in  %% Line 632
		  {'iset',[],[],P,_cor4}
	  %% Line 633
	  <[],K> when 'true' ->
	      _cor0
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'pre_seq',2}}] )
	    -| ['compiler_generated'] )
	end
'atomic'/3 =
    %% Line 639
    fun (_cor2,_cor1,_cor0) ->
	let <_1034> =
	    %% Line 640
	    apply 'expr'/3
		(_cor2, _cor1, _cor0)
	in  %% Line 640
	    case _1034 of
	      <{Ke,Kp,St1}> when 'true' ->
		  let <_3611> =
		      %% Line 641
		      apply 'force_atomic'/2
			  (Ke, St1)
		  in  %% Line 641
		      case _3611 of
			<{Ka,Ap,St2}> when 'true' ->
			    let <_cor5> =
				%% Line 642
				call 'erlang':'++'
				    (Kp, Ap)
			    in  %% Line 642
				{Ka,_cor5,St2}
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_3611})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_1034})
		-| ['compiler_generated'] )
	    end
'force_atomic'/2 =
    %% Line 644
    fun (_cor1,_cor0) ->
	let <_8598> =
	    %% Line 645
	    apply 'is_atomic'/1
		(_cor1)
	in  %% Line 645
	    case _8598 of
	      %% Line 646
	      <'true'> when 'true' ->
		  {_cor1,[],_cor0}
	      %% Line 647
	      <'false'> when 'true' ->
		  let <_284> =
		      %% Line 879
		      apply 'new_var_name'/1
			  (_cor0)
		  in  %% Line 879
		      case _284 of
			<{New,St1}> when 'true' ->
			    let <V,St1> = <%% Line 880
				 {'k_var',[],New},St1>
			    in  {V,[{'iset',[],[V|[]],_cor1,'undefined'}|[]],St1}
			( <_8455> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_284})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_8598})
		-| ['compiler_generated'] )
	    end
'atomic_bin'/3 =
    %% Line 658
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{'c_bitstr',A,E0,S0,U0,T,Fs0}|Es0],Sub,St0> when 'true' ->
	      let <_3796> =
		  %% Line 660
		  apply 'atomic'/3
		      (E0, _cor1, _cor0)
	      in  %% Line 660
		  case _3796 of
		    <{E,Ap1,St1}> when 'true' ->
			let <_4688> =
			    %% Line 661
			    apply 'atomic'/3
				(S0, _cor1, St1)
			in  %% Line 661
			    case _4688 of
			      <{S1,Ap2,St2}> when 'true' ->
				  do  %% Line 662
				      apply 'validate_bin_element_size'/1
					  (S1)
				      let <U1> =
					  %% Line 663
					  call 'core_lib':'literal_value'
					      (U0)
				      in  let <Fs1> =
					      %% Line 664
					      call 'core_lib':'literal_value'
						  (Fs0)
					  in  let <_12857> =
						  %% Line 665
						  apply 'atomic_bin'/3
						      (Es0, _cor1, St2)
					      in  %% Line 665
						  case _12857 of
						    <{Es,Ap3,St3}> when 'true' ->
							let <_cor10> =
							    %% Line 668
							    call 'core_lib':'literal_value'
								(T)
							in  let <_cor8> =
								%% Line 671
								call 'erlang':'++'
								    (Ap2, Ap3)
							    in  let <_cor9> =
								    %% Line 671
								    call 'erlang':'++'
									(Ap1, _cor8)
								in  %% Line 666
								    {{'k_bin_seg',A,S1,U1,_cor10,Fs1,E,Es},_cor9,St3}
						    ( <_cor7> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_12857})
						      -| ['compiler_generated'] )
						  end
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_4688})
				-| ['compiler_generated'] )
			    end
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3796})
		      -| ['compiler_generated'] )
		  end
	  %% Line 672
	  <[],_X_Sub,St> when 'true' ->
	      {{'k_bin_end',[]},[],_cor0}
	  ( <_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'atomic_bin',3}}] )
	    -| ['compiler_generated'] )
	end
'validate_bin_element_size'/1 =
    %% Line 674
    fun (_cor0) ->
	case _cor0 of
	  <{'k_var',_cor2,_cor3}> when 'true' ->
	      'ok'
	  %% Line 675
	  <{'k_int',_cor4,V}>
	      when call 'erlang':'>='
		    (V,
		     0) ->
	      'ok'
	  %% Line 676
	  <{'k_atom',_cor5,'all'}> when 'true' ->
	      'ok'
	  %% Line 677
	  <{'k_atom',_cor6,'undefined'}> when 'true' ->
	      'ok'
	  %% Line 678
	  <_cor7> when 'true' ->
	      call 'erlang':'throw'
		  ('bad_element_size')
	end
'atomic_list'/3 =
    %% Line 682
    fun (_cor2,_cor1,_cor0) ->
	let <_cor9> =
	    %% Line 683
	    fun (_cor6,_cor5) ->
		case <_cor6,_cor5> of
		  <Ce,{Kes,Esp,St0}> when 'true' ->
		      let <_6788> =
			  %% Line 684
			  apply 'atomic'/3
			      (_cor6, _cor1, St0)
		      in  %% Line 684
			  case _6788 of
			    <{Ke,Ep,St1}> when 'true' ->
				let <_cor4> =
				    %% Line 685
				    call 'erlang':'++'
					(Ep, Esp)
				in  %% Line 685
				    {[Ke|Kes],_cor4,St1}
			    ( <_cor3> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_6788})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor8,_cor7> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor6,_cor5})
			  -| [{'function_name',{'-atomic_list/3-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 683
	    call 'lists':'foldr'
		(_cor9, %% Line 686
			{[],[],_cor0}, _cor2)
'is_atomic'/1 =
    %% Line 691
    fun (_cor0) ->
	case _cor0 of
	  <{'k_literal',_cor2,_cor3}> when 'true' ->
	      'true'
	  %% Line 692
	  <{'k_int',_cor4,_cor5}> when 'true' ->
	      'true'
	  %% Line 693
	  <{'k_float',_cor6,_cor7}> when 'true' ->
	      'true'
	  %% Line 694
	  <{'k_atom',_cor8,_cor9}> when 'true' ->
	      'true'
	  %% Line 696
	  <{'k_nil',_cor10}> when 'true' ->
	      'true'
	  %% Line 697
	  <{'k_var',_cor11,_cor12}> when 'true' ->
	      'true'
	  %% Line 698
	  <_cor13> when 'true' ->
	      'false'
	end
'variable'/3 =
    %% Line 703
    fun (_cor2,_cor1,_cor0) ->
	let <_8556> =
	    %% Line 704
	    apply 'expr'/3
		(_cor2, _cor1, _cor0)
	in  %% Line 704
	    case _8556 of
	      <{Ke,Kp,St1}> when 'true' ->
		  let <_4933> =
		      %% Line 705
		      apply 'force_variable'/2
			  (Ke, St1)
		  in  %% Line 705
		      case _4933 of
			<{Kv,Vp,St2}> when 'true' ->
			    let <_cor5> =
				%% Line 706
				call 'erlang':'++'
				    (Kp, Vp)
			    in  %% Line 706
				{Kv,_cor5,St2}
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_4933})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_8556})
		-| ['compiler_generated'] )
	    end
'force_variable'/2 =
    %% Line 708
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Ke = {'k_var',_cor5,_cor6},St> when 'true' ->
	      {_cor1,[],_cor0}
	  %% Line 709
	  <Ke,St0> when 'true' ->
	      let <_284> =
		  %% Line 879
		  apply 'new_var_name'/1
		      (_cor0)
	      in  %% Line 879
		  case _284 of
		    <{New,St1}> when 'true' ->
			let <V,St1> = <%% Line 880
			     {'k_var',[],New},St1>
			in  {V,[{'iset',[],[V|[]],_cor1,'undefined'}|[]],St1}
		    ( <_14546> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_284})
		      -| ['compiler_generated'] )
		  end
	end
'pattern'/4 =
    %% Line 722
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'c_var',A,V},_X_Isub,Osub,St0> when 'true' ->
	      %% Line 723
	      ( case _cor0 of
		  ( <( {'kern',_cor33,_cor34,_cor35,_cor36,_rec24,_cor37,_cor38,_cor39,_cor40}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_6170> =
			    call 'sets':'is_element'
				(V, _rec24)
			in  case _6170 of
			      %% Line 724
			      <'true'> when 'true' ->
				  let <_14683> =
				      %% Line 725
				      apply 'new_var_name'/1
					  (_cor0)
				  in  %% Line 725
				      case _14683 of
					<{New,St1}> when 'true' ->
					    let <_cor13> =
						%% Line 843
						call 'orddict':'store'
						    (V, New, _cor1)
					    in  %% Line 728
						( case St1 of
						    ( <( {'kern',_cor42,_cor43,_cor44,_cor45,_rec27,_cor46,_cor47,_cor48,_cor49}
							 -| ['compiler_generated'] )> when 'true' ->
							  let <_rec25> =
							      call 'sets':'add_element'
								  (New, _rec27)
							  in  let <_cor12> =
								  call 'erlang':'setelement'
								      (6, St1, _rec25)
							      in  {{'k_var',A,New},_cor13,_cor12}
						      -| ['compiler_generated'] )
						    ( <_cor50> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','kern'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					( <_cor6> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_14683})
					  -| ['compiler_generated'] )
				      end
			      %% Line 729
			      <'false'> when 'true' ->
				  let <_rec28> =
				      %% Line 731
				      call 'sets':'add_element'
					  (V, _rec24)
				  in  let <_cor19> =
					  %% Line 731
					  call 'erlang':'setelement'
					      (6, _cor0, _rec28)
				      in  %% Line 730
					  {{'k_var',A,V},_cor1,_cor19}
			      ( <_cor20> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_6170})
				-| ['compiler_generated'] )
			    end
		    -| ['compiler_generated'] )
		  ( <_cor41> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','kern'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 733
	  <{'c_literal',A,Val},_X_Isub,Osub,St> when 'true' ->
	      %% Line 734
	      {{'k_literal',A,Val},_cor1,_cor0}
	  %% Line 735
	  <{'c_cons',A,Ch,Ct},Isub,Osub0,St0> when 'true' ->
	      let <_11536> =
		  %% Line 736
		  apply 'pattern'/4
		      (Ch, _cor2, _cor1, _cor0)
	      in  %% Line 736
		  case _11536 of
		    <{Kh,Osub1,St1}> when 'true' ->
			let <_1831> =
			    %% Line 737
			    apply 'pattern'/4
				(Ct, _cor2, Osub1, St1)
			in  %% Line 737
			    case _1831 of
			      <{Kt,Osub2,St2}> when 'true' ->
				  %% Line 738
				  {{'k_cons',A,Kh,Kt},Osub2,St2}
			      ( <_cor22> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_1831})
				-| ['compiler_generated'] )
			    end
		    ( <_cor21> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_11536})
		      -| ['compiler_generated'] )
		  end
	  %% Line 739
	  <{'c_tuple',A,Ces},Isub,Osub0,St0> when 'true' ->
	      let <_3909> =
		  %% Line 740
		  apply 'pattern_list'/4
		      (Ces, _cor2, _cor1, _cor0)
	      in  %% Line 740
		  case _3909 of
		    <{Kes,Osub1,St1}> when 'true' ->
			%% Line 741
			{{'k_tuple',A,Kes},Osub1,St1}
		    ( <_cor23> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_3909})
		      -| ['compiler_generated'] )
		  end
	  %% Line 742
	  <{'c_map',A,_cor80,Ces},Isub,Osub0,St0> when 'true' ->
	      let <_13550> =
		  %% Line 743
		  apply 'pattern_map_pairs'/4
		      (Ces, _cor2, _cor1, _cor0)
	      in  %% Line 743
		  case _13550 of
		    <{Kes,Osub1,St1}> when 'true' ->
			%% Line 744
			{{'k_map',A,'undefined','exact',Kes},Osub1,St1}
		    ( <_cor24> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_13550})
		      -| ['compiler_generated'] )
		  end
	  %% Line 745
	  <{'c_binary',A,Cv},Isub,Osub0,St0> when 'true' ->
	      let <_1084> =
		  %% Line 746
		  apply 'pattern_bin'/4
		      (Cv, _cor2, _cor1, _cor0)
	      in  %% Line 746
		  case _1084 of
		    <{Kv,Osub1,St1}> when 'true' ->
			%% Line 747
			{{'k_binary',A,Kv},Osub1,St1}
		    ( <_cor25> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1084})
		      -| ['compiler_generated'] )
		  end
	  %% Line 748
	  <{'c_alias',A,Cv,Cp},Isub,Osub0,St0> when 'true' ->
	      let <_2206> =
		  %% Line 749
		  apply 'flatten_alias'/1
		      (Cp)
	      in  %% Line 749
		  case _2206 of
		    <{Cvs,Cpat}> when 'true' ->
			let <_2108> =
			    %% Line 750
			    apply 'pattern_list'/4
				([Cv|Cvs], _cor2, _cor1, _cor0)
			in  %% Line 750
			    case _2108 of
			      <{Kvs,Osub1,St1}> when 'true' ->
				  let <_709> =
				      %% Line 751
				      apply 'pattern'/4
					  (Cpat, _cor2, Osub1, St1)
				  in  %% Line 751
				      case _709 of
					<{Kpat,Osub2,St2}> when 'true' ->
					    %% Line 752
					    {{'ialias',A,Kvs,Kpat},Osub2,St2}
					( <_cor28> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_709})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor27> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_2108})
				-| ['compiler_generated'] )
			    end
		    ( <_cor26> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_2206})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor32,_cor31,_cor30,_cor29> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'pattern',4}}] )
	    -| ['compiler_generated'] )
	end
'flatten_alias'/1 =
    %% Line 754
    fun (_cor0) ->
	case _cor0 of
	  <{'c_alias',_cor3,V,P}> when 'true' ->
	      let <_7041> =
		  %% Line 755
		  apply 'flatten_alias'/1
		      (P)
	      in  %% Line 755
		  case _7041 of
		    <{Vs,Pat}> when 'true' ->
			%% Line 756
			{[V|Vs],Pat}
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_7041})
		      -| ['compiler_generated'] )
		  end
	  %% Line 757
	  <Pat> when 'true' ->
	      {[],_cor0}
	end
'pattern_map_pairs'/4 =
    %% Line 759
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor11> =
	    %% Line 763
	    fun (_cor8,_cor7) ->
		case <_cor8,_cor7> of
		  %% Line 764
		  <{'c_map_pair',_cor25,_cor26,CkA,_cor27},{'c_map_pair',_cor28,_cor29,CkB,_cor30}> when 'true' ->
		      let <A> =
			  %% Line 765
			  call 'core_lib':'literal_value'
			      (CkA)
		      in  let <B> =
			      %% Line 766
			      call 'core_lib':'literal_value'
				  (CkB)
			  in  let <_cor6> =
				  %% Line 767
				  call 'erts_internal':'cmp_term'
				      (A, B)
			      in  %% Line 767
				  call 'erlang':'<'
				      (_cor6, 0)
		  ( <_cor10,_cor9> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor8,_cor7})
			  -| [{'function_name',{'-pattern_map_pairs/4-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  let <Ces1> =
		%% Line 763
		call 'lists':'sort'
		    (_cor11, _cor3)
	    in  let <_cor19> =
		    %% Line 770
		    fun (_cor16,_cor15) ->
			case <_cor16,_cor15> of
			  %% Line 771
			  <{'c_map_pair',A,_cor31,Ck,Cv},{Osubi0,Sti0}> when 'true' ->
			      let <_8949> =
				  %% Line 772
				  apply 'pattern'/4
				      (Ck, _cor2, Osubi0, Sti0)
			      in  %% Line 772
				  case _8949 of
				    <{Kk,Osubi1,Sti1}> when 'true' ->
					let <_13377> =
					    %% Line 773
					    apply 'pattern'/4
						(Cv, _cor2, Osubi1, Sti1)
					in  %% Line 773
					    case _13377 of
					      <{Kv,Osubi2,Sti2}> when 'true' ->
						  %% Line 774
						  {{'k_map_pair',A,Kk,Kv},{Osubi2,Sti2}}
					      ( <_cor14> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_13377})
						-| ['compiler_generated'] )
					    end
				    ( <_cor13> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_8949})
				      -| ['compiler_generated'] )
				  end
			  ( <_cor18,_cor17> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor16,_cor15})
				  -| [{'function_name',{'-pattern_map_pairs/4-fun-1-',2}}] )
			    -| ['compiler_generated'] )
			end
		in  let <_12997> =
			%% Line 770
			call 'lists':'mapfoldl'
			    (_cor19, %% Line 775
				     {_cor1,_cor0}, Ces1)
		    in  %% Line 770
			case _12997 of
			  <{Kes,{Osub1,St1}}> when 'true' ->
			      %% Line 776
			      {Kes,Osub1,St1}
			  ( <_cor20> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_12997})
			    -| ['compiler_generated'] )
			end
'pattern_bin'/4 =
    %% Line 778
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_13803> =
	    %% Line 779
	    apply 'pattern_bin_1'/4
		(_cor3, _cor2, _cor1, _cor0)
	in  %% Line 779
	    case _13803 of
	      <{Kbin,{_cor9,Osub},St}> when 'true' ->
		  %% Line 780
		  {Kbin,Osub,St}
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_13803})
		-| ['compiler_generated'] )
	    end
'pattern_bin_1'/4 =
    %% Line 782
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{'c_bitstr',A,E0,S0,U,T,Fs}|Es0],Isub0,Osub0,St0> when 'true' ->
	      let <_12570> =
		  %% Line 784
		  apply 'expr'/3
		      (S0, _cor2, _cor0)
	      in  %% Line 784
		  case _12570 of
		    <{S1,[],St1}> when 'true' ->
			let <_cor6> =
			    %% Line 785
			    case S1 of
			      %% Line 786
			      <{'k_int',_cor22,_cor23}> when 'true' ->
				  S1
			      %% Line 787
			      <{'k_var',_cor24,_cor25}> when 'true' ->
				  S1
			      %% Line 788
			      <{'k_atom',_cor26,_cor27}> when 'true' ->
				  S1
			      %% Line 789
			      <_cor28> when 'true' ->
				  %% Line 794
				  {'k_atom',[],'bad_size'}
			    end
			in  let <U0> =
				%% Line 796
				call 'core_lib':'literal_value'
				    (U)
			    in  let <Fs0> =
				    %% Line 797
				    call 'core_lib':'literal_value'
					(Fs)
				in  let <_13230> =
					%% Line 799
					apply 'pattern'/4
					    (E0, _cor2, _cor1, St1)
				    in  %% Line 799
					case _13230 of
					  <{E,Osub1,St2}> when 'true' ->
					      let <_cor14> =
						  %% Line 800
						  case E0 of
						    %% Line 801
						    <{'c_var',_cor29,V}> when 'true' ->
							%% Line 802
							( case E of
							    ( <( {'k_var',_cor30,_rec31}
								 -| ['compiler_generated'] )> when 'true' ->
								  %% Line 843
								  call 'orddict':'store'
								      (V, _rec31, _cor2)
							      -| ['compiler_generated'] )
							    ( <_cor31> when 'true' ->
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( 'error'
													 -| ['compiler_generated'] )
									(( {'badrecord','k_var'}
									   -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
						    %% Line 803
						    <_cor32> when 'true' ->
							_cor2
						  end
					      in  let <_4671> =
						      %% Line 805
						      apply 'pattern_bin_1'/4
							  (Es0, _cor14, Osub1, St2)
						  in  %% Line 805
						      case _4671 of
							<{Es,{Isub,Osub},St3}> when 'true' ->
							    let <_cor17> =
								%% Line 808
								call 'core_lib':'literal_value'
								    (T)
							    in  %% Line 806
								{{'k_bin_seg',A,_cor6,U0,_cor17,Fs0,E,Es},%% Line 811
													  {Isub,Osub},St3}
							( <_cor16> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_4671})
							  -| ['compiler_generated'] )
						      end
					  ( <_cor10> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_13230})
					    -| ['compiler_generated'] )
					end
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12570})
		      -| ['compiler_generated'] )
		  end
	  %% Line 812
	  <[],Isub,Osub,St> when 'true' ->
	      {{'k_bin_end',[]},{_cor2,_cor1},_cor0}
	  ( <_cor21,_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'pattern_bin_1',4}}] )
	    -| ['compiler_generated'] )
	end
'pattern_list'/3 =
    %% Line 816
    fun (_cor2,_cor1,_cor0) ->
	%% Line 817
	apply 'pattern_list'/4
	    (_cor2, _cor1, _cor1, _cor0)
'pattern_list'/4 =
    %% Line 819
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor9> =
	    %% Line 820
	    fun (_cor6,_cor5) ->
		case <_cor6,_cor5> of
		  <Ce,{Kes,Osub0,St0}> when 'true' ->
		      let <_5347> =
			  %% Line 821
			  apply 'pattern'/4
			      (_cor6, _cor2, Osub0, St0)
		      in  %% Line 821
			  case _5347 of
			    <{Ke,Osub1,St1}> when 'true' ->
				%% Line 822
				{[Ke|Kes],Osub1,St1}
			    ( <_cor4> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_5347})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor8,_cor7> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor6,_cor5})
			  -| [{'function_name',{'-pattern_list/4-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 820
	    call 'lists':'foldr'
		(_cor9, %% Line 823
			{[],_cor1,_cor0}, _cor3)
'subst_vsub'/3 =
    %% Line 845
    fun (_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 847
	    fun (_cor4,_cor3) ->
		case <_cor4,_cor3> of
		  <_cor12,V1>
		      when call 'erlang':'=:='
			    (_cor3,
			     _cor2) ->
		      _cor1
		  %% Line 848
		  <_cor13,V1> when 'true' ->
		      _cor3
		end
	in  let <Vsub1> =
		%% Line 847
		call 'orddict':'map'
		    (_cor7, _cor0)
	    in  %% Line 850
		call 'orddict':'store'
		    (_cor2, _cor1, Vsub1)
'new_fun_name'/2 =
    %% Line 866
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Type,St = {'kern',{F,Arity},_cor20,_cor21,C,_cor22,_cor23,_cor24,_cor25,_cor26}> when 'true' ->
	      let <_cor10> =
		  %% Line 867
		  call 'erlang':'atom_to_list'
		      (F)
	      in  let <_cor7> =
		      %% Line 867
		      call 'erlang':'integer_to_list'
			  (Arity)
		  in  let <_cor2> =
			  %% Line 868
			  call 'erlang':'integer_to_list'
			      (C)
		      in  let <_cor3> =
			      %% Line 868
			      call 'erlang':'++'
				  (_cor2, [45])
			  in  let <_cor4> =
				  %% Line 868
				  [45|_cor3]
			      in  let <_cor5> =
				      %% Line 868
				      call 'erlang':'++'
					  (_cor1, _cor4)
				  in  let <_cor6> =
					  %% Line 868
					  [45|_cor5]
				      in  let <_cor8> =
					      %% Line 867
					      call 'erlang':'++'
						  (_cor7, _cor6)
					  in  let <_cor9> =
						  %% Line 867
						  [47|_cor8]
					      in  let <_cor11> =
						      %% Line 867
						      call 'erlang':'++'
							  (_cor10, _cor9)
						  in  let <Name> =
							  %% Line 867
							  [45|_cor11]
						      in  let <_cor17> =
							      %% Line 869
							      call 'erlang':'list_to_atom'
								  (Name)
							  in  let <_rec32> =
								  %% Line 869
								  call 'erlang':'+'
								      (C, 1)
							      in  let <_cor16> =
								      %% Line 869
								      call 'erlang':'setelement'
									  (5, _cor0, _rec32)
								  in  %% Line 869
								      {_cor17,_cor16}
	  ( <_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'new_fun_name',2}}] )
	    -| ['compiler_generated'] )
	end
'new_var_name'/1 =
    %% Line 873
    fun (_cor0) ->
	case _cor0 of
	  <St = {'kern',_cor9,_cor10,C,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16}> when 'true' ->
	      let <_cor5> =
		  %% Line 874
		  call 'erlang':'integer_to_list'
		      (C)
	      in  let <_cor6> =
		      %% Line 874
		      [107|[101|[114|_cor5]]]
		  in  let <_cor7> =
			  %% Line 874
			  call 'erlang':'list_to_atom'
			      (_cor6)
		      in  let <_rec34> =
			      %% Line 874
			      call 'erlang':'+'
				  (C, 1)
			  in  let <_cor4> =
				  %% Line 874
				  call 'erlang':'setelement'
				      (4, _cor0, _rec34)
			      in  %% Line 874
				  {_cor7,_cor4}
	  ( <_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'new_var_name',1}}] )
	    -| ['compiler_generated'] )
	end
'new_vars'/3 =
    %% Line 887
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <N,St0,Vs>
	      when call 'erlang':'>'
		    (_cor2,
		     0) ->
	      let <_284> =
		  apply 'new_var_name'/1
		      (_cor1)
	      in  case _284 of
		    <{New,St1}> when 'true' ->
			let <V,St1> = <{'k_var',[],New},St1>
			in  let <_cor4> =
				%% Line 889
				call 'erlang':'-'
				    (_cor2, 1)
			    in  %% Line 889
				apply 'new_vars'/3
				    (_cor4, St1, [V|_cor0])
		    ( <_7581> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_284})
		      -| ['compiler_generated'] )
		  end
	  %% Line 890
	  <0,St,Vs> when 'true' ->
	      {_cor0,_cor1}
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'new_vars',3}}] )
	    -| ['compiler_generated'] )
	end
'add_var_def'/2 =
    %% Line 894
    fun (_cor1,_cor0) ->
	%% Line 895
	( case _cor1 of
	    ( <( {'k_var',_cor11,_rec38}
		 -| ['compiler_generated'] )> when 'true' ->
		  ( case _cor0 of
		      ( <( {'kern',_cor13,_cor14,_cor15,_cor16,_rec39,_cor17,_cor18,_cor19,_cor20}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_rec36> =
				call 'sets':'add_element'
				    (_rec38, _rec39)
			    in  call 'erlang':'setelement'
				    (6, _cor0, _rec36)
			-| ['compiler_generated'] )
		      ( <_cor21> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','kern'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor12> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','k_var'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'is_remote_bif'/3 =
    %% Line 905
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'erlang','get',1> when 'true' ->
	      'true'
	  %% Line 906
	  <'erlang',N,A> when 'true' ->
	      let <_2853> =
		  %% Line 907
		  call 'erl_internal':'guard_bif'
		      (_cor1, _cor0)
	      in  %% Line 907
		  case _2853 of
		    %% Line 908
		    <'true'> when 'true' ->
			'true'
		    %% Line 909
		    <'false'> when 'true' ->
			%% Line 910
			try
			    call 'erl_internal':'op_type'
				(_cor1, _cor0)
			of <_cor3> ->
			    case _cor3 of
			      %% Line 911
			      <'arith'> when 'true' ->
				  'true'
			      %% Line 912
			      <'bool'> when 'true' ->
				  'true'
			      %% Line 913
			      <'comp'> when 'true' ->
				  'true'
			      %% Line 914
			      <'list'> when 'true' ->
				  'false'
			      %% Line 915
			      <'send'> when 'true' ->
				  'false'
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'try_clause',_cor3})
				-| ['compiler_generated'] )
			    end
			catch <_cor7,_cor6,_cor5> ->
			    %% Line 917
			    'false'
		    ( <_cor8> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_2853})
		      -| ['compiler_generated'] )
		  end
	  %% Line 920
	  <_cor15,_cor16,_cor17> when 'true' ->
	      'false'
	end
'foldr2'/4 =
    %% Line 937
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Fun,Acc0,[E1|L1],[E2|L2]> when 'true' ->
	      let <Acc1> =
		  %% Line 938
		  apply _cor3
		      (E1, E2, _cor2)
	      in  %% Line 939
		  apply 'foldr2'/4
		      (_cor3, Acc1, L1, L2)
	  %% Line 940
	  <_cor9,Acc,[],[]> when 'true' ->
	      _cor2
	  ( <_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'foldr2',4}}] )
	    -| ['compiler_generated'] )
	end
'kmatch'/4 =
    %% Line 970
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_2685> =
	    %% Line 971
	    apply 'match_pre'/3
		(_cor2, _cor1, _cor0)
	in  %% Line 971
	    case _2685 of
	      <{Cs,St1}> when 'true' ->
		  %% Line 978
		  apply 'match'/4
		      (_cor3, Cs, 'fail', St1)
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_2685})
		-| ['compiler_generated'] )
	    end
'match_pre'/3 =
    %% Line 985
    fun (_cor2,_cor1,_cor0) ->
	let <_cor8> =
	    %% Line 986
	    fun (_cor5,_cor4) ->
		case <_cor5,_cor4> of
		  <{'c_clause',A,Ps,G,B},{Cs0,St0}> when 'true' ->
		      let <_7971> =
			  %% Line 987
			  apply 'pattern_list'/3
			      (Ps, _cor1, St0)
		      in  %% Line 987
			  case _7971 of
			    <{Kps,Osub1,St1}> when 'true' ->
				%% Line 988
				{[{'iclause',A,_cor1,Osub1,Kps,G,B}|Cs0],St1}
			    ( <_cor3> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_7971})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor7,_cor6> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor5,_cor4})
			  -| [{'function_name',{'-match_pre/3-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 986
	    call 'lists':'foldr'
		(_cor8, %% Line 991
			{[],_cor0}, _cor2)
'match'/4 =
    %% Line 995
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <L = [_X_U|_X_Us],Cs,Def,St0> when 'true' ->
	      let <Pcss> =
		  %% Line 997
		  apply 'partition'/1
		      (_cor2)
	      in  let <_cor9> =
		      %% Line 998
		      fun (_cor6,_cor5) ->
			  case <_cor6,_cor5> of
			    <Pcs,{D,St}> when 'true' ->
				apply 'match_varcon'/4
				    (_cor3, _cor6, D, St)
			    ( <_cor8,_cor7> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor6,_cor5})
				    -| [{'function_name',{'-match/4-fun-0-',2}}] )
			      -| ['compiler_generated'] )
			  end
		  in  %% Line 998
		      call 'lists':'foldr'
			  (_cor9, %% Line 999
				  {_cor1,_cor0}, Pcss)
	  %% Line 1000
	  <[],Cs,Def,St> when 'true' ->
	      %% Line 1001
	      apply 'match_guard'/3
		  (_cor2, _cor1, _cor0)
	  ( <_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'match',4}}] )
	    -| ['compiler_generated'] )
	end
'match_guard'/3 =
    %% Line 1008
    fun (_cor2,_cor1,_cor0) ->
	let <_8988> =
	    %% Line 1009
	    apply 'match_guard_1'/3
		(_cor2, _cor1, _cor0)
	in  %% Line 1009
	    case _8988 of
	      <{Cs1,Def1,St1}> when 'true' ->
		  let <_cor4> =
		      %% Line 1470
		      case Cs1 of
			<[]> when 'true' ->
			    'fail'
			%% Line 1471
			<Cs> when 'true' ->
			    {'k_guard',[],Cs1}
		      end
		  in  let <_cor5> =
			  %% Line 1010
			  apply 'build_alt'/2
			      (_cor4, Def1)
		      in  %% Line 1010
			  {_cor5,St1}
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_8988})
		-| ['compiler_generated'] )
	    end
'match_guard_1'/3 =
    %% Line 1012
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{'iclause',A,_cor15,Osub,_cor16,G,B}|Cs0],Def0,St0> when 'true' ->
	      let <_7771> =
		  %% Line 1059
		  case G of
		    <{'c_literal',_1966,'true'}> when 'true' ->
			'true'
		    %% Line 1060
		    <_cor3> when 'true' ->
			'false'
		  end
	      in  %% Line 1013
		  case _7771 of
		    %% Line 1014
		    <'true'> when 'true' ->
			let <_738> =
			    %% Line 1016
			    apply 'body'/3
				(B, Osub, _cor0)
			in  %% Line 1016
			    case _738 of
			      <{Kb,Pb,St1}> when 'true' ->
				  let <St2> =
				      %% Line 1017
				      apply 'maybe_add_warning'/3
					  (Cs0, A, St1)
				  in  let <St> =
					  %% Line 1018
					  apply 'maybe_add_warning'/3
					      (_cor1, A, St2)
				      in  let <_cor6> =
					      %% Line 1019
					      apply 'pre_seq'/2
						  (Pb, Kb)
					  in  %% Line 1019
					      {[],_cor6,St}
			      ( <_cor3> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_738})
				-| ['compiler_generated'] )
			    end
		    %% Line 1020
		    <'false'> when 'true' ->
			let <_6358> =
			    %% Line 1021
			    apply 'guard'/3
				(G, Osub, _cor0)
			in  %% Line 1021
			    case _6358 of
			      <{Kg,St1}> when 'true' ->
				  let <_5873> =
				      %% Line 1022
				      apply 'body'/3
					  (B, Osub, St1)
				  in  %% Line 1022
				      case _5873 of
					<{Kb,Pb,St2}> when 'true' ->
					    let <_7389> =
						%% Line 1023
						apply 'match_guard_1'/3
						    (Cs0, _cor1, St2)
					    in  %% Line 1023
						case _7389 of
						  <{Cs1,Def1,St3}> when 'true' ->
						      let <_cor10> =
							  %% Line 1024
							  apply 'pre_seq'/2
							      (Pb, Kb)
						      in  %% Line 1024
							  {[{'k_guard_clause',[],Kg,_cor10}|Cs1],Def1,St3}
						  ( <_cor9> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_7389})
						    -| ['compiler_generated'] )
						end
					( <_cor8> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_5873})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor7> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_6358})
				-| ['compiler_generated'] )
			    end
		    ( <_cor11> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_7771})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1027
	  <[],Def,St> when 'true' ->
	      {[],_cor1,_cor0}
	  ( <_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'match_guard_1',3}}] )
	    -| ['compiler_generated'] )
	end
'maybe_add_warning'/3 =
    %% Line 1029
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[C|_cor13],MatchAnno,St> when 'true' ->
	      %% Line 1030
	      apply 'maybe_add_warning'/3
		  (C, _cor1, _cor0)
	  %% Line 1031
	  <[],_X_MatchAnno,St> when 'true' ->
	      _cor0
	  %% Line 1032
	  <'fail',_X_MatchAnno,St> when 'true' ->
	      _cor0
	  %% Line 1033
	  <Ke,MatchAnno,St> when 'true' ->
	      let <Anno> =
		  call 'erlang':'element'
		      (2, _cor2)
	      in  let <_14237> =
		      %% Line 2025
		      call 'lists':'member'
			  ('compiler_generated', Anno)
		  in  %% Line 1034
		      case _14237 of
			%% Line 1035
			<'true'> when 'true' ->
			    _cor0
			%% Line 1037
			<'false'> when 'true' ->
			    let <Anno> =
				call 'erlang':'element'
				    (2, _cor2)
			    in  let <Line> =
				    %% Line 1048
				    case Anno of
				      <[Line|_13113]>
					  when call 'erlang':'is_integer'
						(Line) ->
					  Line
				      %% Line 1049
				      <[_cor3|T]> when 'true' ->
					  apply 'get_line'/1
					      (T)
				      %% Line 1050
				      <[]> when 'true' ->
					  'none'
				      ( <_12195> when 'true' ->
					    primop 'match_fail'
						({'function_clause',Anno})
					-| ['compiler_generated'] )
				    end
				in  let <MatchLine> =
					%% Line 1048
					case _cor1 of
					  <[_8680|_13740]>
					      when call 'erlang':'is_integer'
						    (_8680) ->
					      _8680
					  %% Line 1049
					  <[_cor3|T]> when 'true' ->
					      apply 'get_line'/1
						  (T)
					  %% Line 1050
					  <[]> when 'true' ->
					      'none'
					  ( <_10106> when 'true' ->
						primop 'match_fail'
						    ({'function_clause',_cor1})
					    -| ['compiler_generated'] )
					end
				    in  let <_cor7> =
					    %% Line 1041
					    case MatchLine of
					      %% Line 1042
					      <'none'> when 'true' ->
						  'nomatch_shadow'
					      %% Line 1043
					      <_cor14> when 'true' ->
						  {'nomatch_shadow',MatchLine}
					    end
					in  %% Line 1045
					    apply 'add_warning'/4
						(Line, _cor7, Anno, _cor0)
			( <_cor9> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_14237})
			  -| ['compiler_generated'] )
		      end
	end
'get_line'/1 =
    %% Line 1048
    fun (_cor0) ->
	case _cor0 of
	  <[Line|_cor2]>
	      when call 'erlang':'is_integer'
		    (Line) ->
	      Line
	  %% Line 1049
	  <[_cor3|T]> when 'true' ->
	      apply 'get_line'/1
		  (T)
	  %% Line 1050
	  <[]> when 'true' ->
	      'none'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'get_line',1}}] )
	    -| ['compiler_generated'] )
	end
'get_file'/1 =
    %% Line 1052
    fun (_cor0) ->
	case _cor0 of
	  <[{'file',File}|_cor2]> when 'true' ->
	      File
	  %% Line 1053
	  <[_cor3|T]> when 'true' ->
	      apply 'get_file'/1
		  (T)
	  %% Line 1054
	  <[]> when 'true' ->
	      [110|[111|[95|[102|[105|[108|[101]]]]]]]
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'get_file',1}}] )
	    -| ['compiler_generated'] )
	end
'partition'/1 =
    %% Line 1066
    fun (_cor0) ->
	case _cor0 of
	  <[C1|Cs]> when 'true' ->
	      let <V1> =
		  %% Line 1067
		  apply 'is_var_clause'/1
		      (C1)
	      in  let <_cor5> =
		      %% Line 1068
		      fun (_cor3) ->
			  let <_cor2> =
			      apply 'is_var_clause'/1
				  (_cor3)
			  in  call 'erlang':'=:='
				  (_cor2, V1)
		  in  let <_6783> =
			  %% Line 1068
			  call 'lists':'splitwith'
			      (_cor5, Cs)
		      in  %% Line 1068
			  case _6783 of
			    <{More,Rest}> when 'true' ->
				let <_cor7> =
				    %% Line 1069
				    apply 'partition'/1
					(Rest)
				in  %% Line 1069
				    [[C1|More]|_cor7]
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_6783})
			      -| ['compiler_generated'] )
			  end
	  %% Line 1070
	  <[]> when 'true' ->
	      []
	  ( <_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'partition',1}}] )
	    -| ['compiler_generated'] )
	end
'match_varcon'/4 =
    %% Line 1075
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Us,Cs = [C|_cor9],Def,St> when 'true' ->
	      let <_13184> =
		  %% Line 1076
		  apply 'is_var_clause'/1
		      (C)
	      in  %% Line 1076
		  case _13184 of
		    %% Line 1077
		    <'true'> when 'true' ->
			apply 'match_var'/4
			    (_cor3, _cor2, _cor1, _cor0)
		    %% Line 1078
		    <'false'> when 'true' ->
			apply 'match_con'/4
			    (_cor3, _cor2, _cor1, _cor0)
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_13184})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'match_varcon',4}}] )
	    -| ['compiler_generated'] )
	end
'match_var'/4 =
    %% Line 1088
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[U|Us],Cs0,Def,St> when 'true' ->
	      let <_cor29> =
		  %% Line 1089
		  fun (_cor27) ->
		      case _cor27 of
			<C = {'iclause',_cor35,Isub0,Osub0,[Arg|As],_cor36,_cor37}> when 'true' ->
			    let <_cor4> =
				%% Line 1515
				case Arg of
				  <{'ialias',_12179,_10926,Con}> when 'true' ->
				      Con
				  %% Line 1516
				  <Con> when 'true' ->
				      Arg
				end
			    in  let <_cor5> =
				    %% Line 1518
				    case Arg of
				      <{'ialias',_9577,_2736,_3634}> when 'true' ->
					  _2736
				      %% Line 1519
				      <_X_Con> when 'true' ->
					  []
				    end
				in  let <Vs> =
					%% Line 1090
					[_cor4|_cor5]
				    in  let <_cor13> =
					    %% Line 1091
					    fun (_cor10,_cor9) ->
						case <_cor10,_cor9> of
						  <{'k_var',_cor38,V},Acc> when 'true' ->
						      %% Line 1092
						      ( case U of
							  ( <( {'k_var',_cor39,_rec40}
							       -| ['compiler_generated'] )> when 'true' ->
								apply 'subst_vsub'/3
								    (V, _rec40, _cor9)
							    -| ['compiler_generated'] )
							  ( <_cor40> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','k_var'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  ( <_cor12,_cor11> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor10,_cor9})
							  -| [{'function_name',{'-match_var/4-fun-0-',2}}] )
						    -| ['compiler_generated'] )
						end
					in  let <Osub1> =
						%% Line 1091
						call 'lists':'foldl'
						    (_cor13, Osub0, Vs)
					    in  let <_cor21> =
						    %% Line 1094
						    fun (_cor18,_cor17) ->
							case <_cor18,_cor17> of
							  <{'k_var',_cor41,V},Acc> when 'true' ->
							      %% Line 1095
							      ( case U of
								  ( <( {'k_var',_cor42,_rec41}
								       -| ['compiler_generated'] )> when 'true' ->
									apply 'subst_vsub'/3
									    (V, _rec41, _cor17)
								    -| ['compiler_generated'] )
								  ( <_cor43> when 'true' ->
									( call ( 'erlang'
										 -| ['compiler_generated'] ):( 'error'
													       -| ['compiler_generated'] )
									      (( {'badrecord','k_var'}
										 -| ['compiler_generated'] ))
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
							  ( <_cor20,_cor19> when 'true' ->
								( primop 'match_fail'
								      ({'function_clause',_cor18,_cor17})
								  -| [{'function_name',{'-match_var/4-fun-1-',2}}] )
							    -| ['compiler_generated'] )
							end
						in  let <Isub1> =
							%% Line 1094
							call 'lists':'foldl'
							    (_cor21, Isub0, Vs)
						    in  let <_cor24> =
							    %% Line 1097
							    call 'erlang':'setelement'
								(5, _cor27, As)
							in  let <_cor25> =
								%% Line 1097
								call 'erlang':'setelement'
								    (4, _cor24, Osub1)
							    in  %% Line 1097
								call 'erlang':'setelement'
								    (3, _cor25, Isub1)
			( <_cor28> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor27})
				-| [{'function_name',{'-match_var/4-fun-2-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  let <Cs1> =
		      %% Line 1089
		      call 'lists':'map'
			  (_cor29, _cor2)
		  in  %% Line 1099
		      apply 'match'/4
			  (Us, Cs1, _cor1, _cor0)
	  ( <_cor34,_cor33,_cor32,_cor31> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'match_var',4}}] )
	    -| ['compiler_generated'] )
	end
'match_con'/4 =
    %% Line 1107
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Us,[C|[]],Def,St> when 'true' ->
	      let <_cor4> =
		  %% Line 1111
		  apply 'expand_pat_lit_clause'/2
		      (C, 'false')
	      in  let <Cs> =
		      %% Line 1111
		      [_cor4|[]]
		  in  %% Line 1112
		      apply 'match_con_1'/4
			  (_cor3, Cs, _cor1, _cor0)
	  %% Line 1113
	  <Us,Cs0,Def,St> when 'true' ->
	      let <_cor11> =
		  %% Line 1115
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor8) ->
				case _cor8 of
				  <[C|_cor7]> when 'true' ->
				      let <_cor9> =
					  apply 'expand_pat_lit_clause'/2
					      (C, 'true')
				      in  let <_cor10> =
					      apply 'lc$^0'/1
						  (_cor7)
					  in  ( [_cor9|_cor10]
						-| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_3981> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor8})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (_cor2)
		    -| ['list_comprehension'] )
	      in  %% Line 1116
		  apply 'match_con_1'/4
		      (_cor3, _cor11, _cor1, _cor0)
	end
'match_con_1'/4 =
    %% Line 1118
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <L = [U|_X_Us],Cs,Def,St0> when 'true' ->
	      let <_cor7> =
		  %% Line 1121
		  apply 'select_types'/2
		      (['k_binary'], _cor2)
	      in  let <_cor5> =
		      %% Line 1121
		      apply 'select_bin_con'/1
			  (_cor2)
		  in  let <_cor4> =
			  %% Line 1122
			  apply 'select_types'/2
			      (['k_cons'|['k_tuple'|['k_map'|['k_atom'|['k_float'|['k_int'|['k_nil'|['k_literal']]]]]]]], _cor2)
		      in  let <_cor6> =
			      %% Line 1121
			      call 'erlang':'++'
				  (_cor5, _cor4)
			  in  let <Ttcs> =
				  %% Line 1121
				  call 'erlang':'++'
				      (_cor7, _cor6)
			      in  let <_cor15> =
				      %% Line 1126
				      fun (_cor12,_cor11) ->
					  case <_cor12,_cor11> of
					    <{T,Tcs},St> when 'true' ->
						let <_14096> =
						    %% Line 1127
						    apply 'match_value'/5
							(_cor3, T, Tcs, 'fail', _cor11)
						in  %% Line 1127
						    case _14096 of
						      <{Sc = [S|_cor23],S1}> when 'true' ->
							  let <Anno> =
							      call 'erlang':'element'
								  (2, S)
							  in  %% Line 1130
							      {{'k_type_clause',Anno,T,Sc},S1}
						      ( <_cor9> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_14096})
							-| ['compiler_generated'] )
						    end
					    ( <_cor14,_cor13> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor12,_cor11})
						    -| [{'function_name',{'-match_con_1/4-fun-0-',2}}] )
					      -| ['compiler_generated'] )
					  end
				  in  let <_5788> =
					  %% Line 1126
					  call 'lists':'mapfoldl'
					      (_cor15, _cor0, Ttcs)
				      in  %% Line 1125
					  case _5788 of
					    <{Scs,St1}> when 'true' ->
						let <_cor17> =
						    %% Line 1132
						    apply 'build_select'/2
							(U, Scs)
						in  let <_cor18> =
							%% Line 1484
							case <_cor17,_cor1> of
							  <First,'fail'> when 'true' ->
							      _cor17
							  %% Line 1485
							  <First,Then> when 'true' ->
							      let <_9663> =
								  %% Line 1486
								  {'k_alt',[],_cor17,_cor1}
							      in  let <Anno> =
								      call 'erlang':'element'
									  (2, _cor17)
								  in  call 'erlang':'setelement'
									  (2, _9663, Anno)
							end
						    in  %% Line 1132
							{_cor18,St1}
					    ( <_cor16> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_5788})
					      -| ['compiler_generated'] )
					  end
	  ( <_cor22,_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'match_con_1',4}}] )
	    -| ['compiler_generated'] )
	end
'select_types'/2 =
    %% Line 1134
    fun (_cor1,_cor0) ->
	%% Line 1135
	( letrec
	      'lc$^0'/1 =
		  fun (_cor5) ->
		      case _cor5 of
			<[T|_cor3]> when 'true' ->
			    let <Tcs> =
				apply 'select'/2
				    (T, _cor0)
			    in  ( case <> of
				    <>
					when call 'erlang':'=/='
					      (Tcs,
					       []) ->
					let <_cor6> =
					    apply 'lc$^0'/1
						(_cor3)
					in  ( [{T,Tcs}|_cor6]
					      -| ['compiler_generated'] )
				    ( <> when 'true' ->
					  apply 'lc$^0'/1
					      (_cor3)
				      -| ['compiler_generated'] )
				  end
				  -| ['list_comprehension'] )
			<[]> when 'true' ->
			    []
			( <_12414> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor5})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  apply 'lc$^0'/1
		  (_cor1)
	  -| ['list_comprehension'] )
'expand_pat_lit_clause'/2 =
    %% Line 1137
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <C = {'iclause',_cor24,_cor25,_cor26,[Alias = {'ialias',_cor27,_cor28,{'k_literal',A,Val}}|Ps],_cor29,_cor30},B> when 'true' ->
	      let <_cor3> =
		  %% Line 1138
		  case _cor0 of
		    %% Line 1139
		    <'true'> when 'true' ->
			apply 'expand_pat_lit'/2
			    (Val, A)
		    %% Line 1140
		    <'false'> when 'true' ->
			apply 'literal'/2
			    (Val, A)
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor0})
		      -| ['compiler_generated'] )
		  end
	      in  let <_cor7> =
		      %% Line 1142
		      call 'erlang':'setelement'
			  (4, Alias, _cor3)
		  in  let <_rec43> =
			  %% Line 1142
			  [_cor7|Ps]
		      in  %% Line 1142
			  call 'erlang':'setelement'
			      (5, _cor1, _rec43)
	  %% Line 1143
	  <C = {'iclause',_cor42,_cor43,_cor44,[{'k_literal',A,Val}|Ps],_cor45,_cor46},B> when 'true' ->
	      let <_cor12> =
		  %% Line 1144
		  case _cor0 of
		    %% Line 1145
		    <'true'> when 'true' ->
			apply 'expand_pat_lit'/2
			    (Val, A)
		    %% Line 1146
		    <'false'> when 'true' ->
			apply 'literal'/2
			    (Val, A)
		    ( <_cor11> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor0})
		      -| ['compiler_generated'] )
		  end
	      in  let <_rec46> =
		      %% Line 1148
		      [_cor12|Ps]
		  in  %% Line 1148
		      call 'erlang':'setelement'
			  (5, _cor1, _rec46)
	  %% Line 1149
	  <C = {'iclause',_cor54,_cor55,_cor56,[{'k_binary',A,{'k_bin_end',_cor57}}|Ps],_cor58,_cor59},B> when 'true' ->
	      %% Line 1150
	      case _cor0 of
		%% Line 1151
		<'true'> when 'true' ->
		    _cor1
		%% Line 1153
		<'false'> when 'true' ->
		    let <P> = {%% Line 1154
			 'k_literal',A,%% Line 1154
				       #{}#}
		    in  let <_rec48> =
			    %% Line 1155
			    [P|Ps]
			in  %% Line 1155
			    call 'erlang':'setelement'
				(5, _cor1, _rec48)
		( <_cor21> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor0})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1157
	  <C,_cor67> when 'true' ->
	      _cor1
	end
'expand_pat_lit'/2 =
    %% Line 1159
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[H|T],A> when 'true' ->
	      let <_cor3> =
		  %% Line 1160
		  apply 'literal'/2
		      (H, _cor0)
	      in  let <_cor2> =
		      %% Line 1160
		      apply 'literal'/2
			  (T, _cor0)
		  in  %% Line 1160
		      {'k_cons',_cor0,_cor3,_cor2}
	  %% Line 1161
	  <Tuple,A>
	      when call 'erlang':'is_tuple'
		    (_cor1) ->
	      let <_cor10> =
		  %% Line 1162
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor7) ->
				case _cor7 of
				  <[E|_cor5]> when 'true' ->
				      let <_cor8> =
					  apply 'literal'/2
					      (E, _cor0)
				      in  let <_cor9> =
					      apply 'lc$^0'/1
						  (_cor5)
					  in  ( [_cor8|_cor9]
						-| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_5789> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor7})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  let <_cor6> =
			    call 'erlang':'tuple_to_list'
				(_cor1)
			in  apply 'lc$^0'/1
				(_cor6)
		    -| ['list_comprehension'] )
	      in  %% Line 1162
		  {'k_tuple',_cor0,_cor10}
	  %% Line 1163
	  <Lit,A> when 'true' ->
	      %% Line 1164
	      apply 'literal'/2
		  (_cor1, _cor0)
	end
'literal'/2 =
    %% Line 1166
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],A> when 'true' ->
	      %% Line 1167
	      {'k_nil',_cor0}
	  %% Line 1168
	  <Val,A>
	      when call 'erlang':'is_integer'
		    (_cor1) ->
	      %% Line 1169
	      {'k_int',_cor0,_cor1}
	  %% Line 1170
	  <Val,A>
	      when call 'erlang':'is_float'
		    (_cor1) ->
	      %% Line 1171
	      {'k_float',_cor0,_cor1}
	  %% Line 1172
	  <Val,A>
	      when call 'erlang':'is_atom'
		    (_cor1) ->
	      %% Line 1173
	      {'k_atom',_cor0,_cor1}
	  %% Line 1174
	  <Val,A>
	      when let <_cor2> =
		    call 'erlang':'is_list'
			(_cor1)
		in  let <_cor3> =
			call 'erlang':'is_tuple'
			    (_cor1)
		    in  call 'erlang':'or'
			    (_cor2, _cor3) ->
	      %% Line 1175
	      {'k_literal',_cor0,_cor1}
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'literal',2}}] )
	    -| ['compiler_generated'] )
	end
'select_bin_con'/1 =
    %% Line 1182
    fun (_cor0) ->
	let <_cor6> =
	    %% Line 1183
	    fun (_cor4) ->
		%% Line 1501
		case _cor4 of
		  <{'iclause',_cor2,_cor3,_11271,[Arg|_cor5],_cor6,_cor7}> when 'true' ->
		      let <Con> =
			  %% Line 1503
			  apply 'arg_con'/1
			      (Arg)
		      in  let <_cor3> =
			      call 'erlang':'=:='
				  (Con, 'k_bin_seg')
			  in  let <_cor2> =
				  call 'erlang':'=:='
				      (Con, 'k_bin_end')
			      in  call 'erlang':'or'
				      (_cor3, _cor2)
		  ( <_cor1> when 'true' ->
			primop 'match_fail'
			    ({'function_clause',_cor4})
		    -| ['compiler_generated'] )
		end
	in  let <Cs1> =
		%% Line 1183
		call 'lists':'filter'
		    (_cor6, _cor0)
	    in  %% Line 1187
		apply 'select_bin_con_1'/1
		    (Cs1)
'select_bin_con_1'/1 =
    %% Line 1190
    fun (_cor0) ->
	%% Line 1191
	try
	    let <_cor4> =
		%% Line 1219
		fun (_cor2) ->
		    %% Line 1501
		    case _cor2 of
		      <{'iclause',_10998,_cor3,_cor4,[Arg|_cor5],_cor6,_cor7}> when 'true' ->
			  let <_cor1> =
			      %% Line 1503
			      apply 'arg_con'/1
				  (Arg)
			  in  call 'erlang':'=:='
				  (_cor1, 'k_bin_seg')
		      ( <_cor1> when 'true' ->
			    primop 'match_fail'
				({'function_clause',_cor2})
			-| ['compiler_generated'] )
		    end
	    in  let <_13037> =
		    %% Line 1219
		    call 'lists':'partition'
			(_cor4, _cor0)
		in  %% Line 1218
		    case _13037 of
		      <{BinSegs0,BinEnd}> when 'true' ->
			  let <BinSegs> =
			      %% Line 1222
			      apply 'select_bin_int'/1
				  (BinSegs0)
			  in  %% Line 1223
			      case BinEnd of
				%% Line 1224
				<[]> when 'true' ->
				    BinSegs
				%% Line 1225
				<[_cor13|_cor14]> when 'true' ->
				    call 'erlang':'++'
					(BinSegs, [{'k_bin_end',BinEnd}|[]])
				( <_cor7> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',BinEnd})
				  -| ['compiler_generated'] )
			      end
		      ( <_cor5> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_13037})
			-| ['compiler_generated'] )
		    end
	of <_cor8> ->
	    _cor8
	catch <_cor11,_cor10,_cor9> ->
	    case <_cor11,_cor10,_cor9> of
	      %% Line 1228
	      <'throw','not_possible',_cor15> when 'true' ->
		  %% Line 1229
		  apply 'select_bin_con_2'/1
		      (_cor0)
	      ( <_8396,_5069,_11864> when 'true' ->
		    primop 'raise'
			(_cor9, _cor10)
		-| ['compiler_generated'] )
	    end
'select_bin_con_2'/1 =
    %% Line 1232
    fun (_cor0) ->
	case _cor0 of
	  <[C1|Cs]> when 'true' ->
	      %% Line 1501
	      case C1 of
		<{'iclause',_cor2,_cor3,_cor4,[Arg|_cor5],_cor6,_cor7}> when 'true' ->
		    let <Con> =
			%% Line 1503
			apply 'arg_con'/1
			    (Arg)
		    in  let <_cor5> =
			    fun (_cor3) ->
				case _cor3 of
				  <{'iclause',_cor2,_13333,_cor4,[_fol1151|_cor5],_cor6,_cor7}> when 'true' ->
				      let <_cor2> =
					  %% Line 1503
					  apply 'arg_con'/1
					      (_fol1151)
				      in  call 'erlang':'=:='
					      (_cor2, Con)
				  ( <_cor1> when 'true' ->
					primop 'match_fail'
					    ({'function_clause',_cor3})
				    -| ['compiler_generated'] )
				end
			in  let <_6081> =
				call 'lists':'splitwith'
				    (_cor5, Cs)
			    in  case _6081 of
				  <{More,Rest}> when 'true' ->
				      let <_cor7> =
					  apply 'select_bin_con_2'/1
					      (Rest)
				      in  [{Con,[C1|More]}|_cor7]
				  ( <_cor6> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_6081})
				    -| ['compiler_generated'] )
				end
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'function_clause',C1})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1236
	  <[]> when 'true' ->
	      []
	  ( <_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'select_bin_con_2',1}}] )
	    -| ['compiler_generated'] )
	end
'select_bin_int'/1 =
    %% Line 1246
    fun (_cor0) ->
	case _cor0 of
	  <[C = {'iclause',_cor17,_cor18,_cor19,[{'k_bin_seg',A,Sz = %% Line 1247
								     {'k_int',_cor20,Bits0},U,'integer',Fl,%% Line 1248
													   {'k_literal',_cor21,Val},N}|Ps],_cor22,_cor23}|Cs0]>
	      when %% Line 1250
		call 'erlang':'is_integer'
		    (Val) ->
	      let <Bits> =
		  %% Line 1251
		  call 'erlang':'*'
		      (U, Bits0)
	      in  do  do  %% Line 1252
			  case <> of
			    %% Line 1253
			    <>
				when call 'erlang':'>'
				      (Bits,
				       1024) ->
				call 'erlang':'throw'
				    ('not_possible')
			    %% Line 1254
			    <> when 'true' ->
				'ok'
			  end
			  %% Line 1256
			  apply 'select_assert_match_possible'/3
			      (Bits, Val, Fl)
		      let <P> =
			  %% Line 1257
			  {'k_bin_int',A,Sz,U,Fl,Val,N}
		      in  do  let <_13702> =
				  %% Line 1258
				  call 'lists':'member'
				      ('native', Fl)
			      in  %% Line 1258
				  case _13702 of
				    %% Line 1259
				    <'true'> when 'true' ->
					call 'erlang':'throw'
					    ('not_possible')
				    %% Line 1260
				    <'false'> when 'true' ->
					'ok'
				    ( <_cor3> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_13702})
				      -| ['compiler_generated'] )
				  end
			      let <Cs> =
				  %% Line 1262
				  apply 'select_bin_int_1'/4
				      (Cs0, Bits, Fl, Val)
			      in  let <_rec50> =
				      %% Line 1263
				      [P|Ps]
				  in  let <_cor8> =
					  %% Line 1263
					  call 'erlang':'setelement'
					      (5, C, _rec50)
				      in  %% Line 1263
					  [{'k_bin_int',[_cor8|Cs]}|[]]
	  %% Line 1264
	  <[C = {'iclause',_cor31,_cor32,_cor33,[{'k_bin_seg',A,_cor34,_cor35,'utf8',Fl = %% Line 1265
											  ['unsigned'|['big']],%% Line 1266
													       {'k_literal',_cor36,Val0},N}|Ps],_cor37,_cor38}|Cs0]>
	      when %% Line 1268
		call 'erlang':'is_integer'
		    (Val0) ->
	      let <_13924> =
		  %% Line 1269
		  apply 'select_utf8'/1
		      (Val0)
	      in  %% Line 1269
		  case _13924 of
		    <{Val,Bits}> when 'true' ->
			let <P> =
			    %% Line 1270
			    {'k_bin_int',A,{'k_int',[],Bits},1,Fl,Val,N}
			in  let <Cs> =
				%% Line 1272
				apply 'select_bin_int_1'/4
				    (Cs0, Bits, Fl, Val)
			    in  let <_rec52> =
				    %% Line 1273
				    [P|Ps]
				in  let <_cor15> =
					%% Line 1273
					call 'erlang':'setelement'
					    (5, C, _rec52)
				    in  %% Line 1273
					[{'k_bin_int',[_cor15|Cs]}|[]]
		    ( <_cor9> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_13924})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1274
	  <_cor46> when 'true' ->
	      call 'erlang':'throw'
		  ('not_possible')
	end
'select_bin_int_1'/4 =
    %% Line 1276
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[C = {'iclause',_cor22,_cor23,_cor24,[{'k_bin_seg',A,Sz = %% Line 1277
								     {'k_int',_cor25,Bits0},U,'integer',Fl,%% Line 1279
													   {'k_literal',_cor26,Val},N}|Ps],_cor27,_cor28}|Cs],Bits,_cor29,_cor30>
	      when let <_cor33> =
		    call 'erlang':'=:='
			(_cor1, Fl)
		in  let <_cor31> =
			call 'erlang':'=:='
			    (_cor0, Val)
		    in  let <_cor32> =
			    %% Line 1281
			    call 'erlang':'is_integer'
				(Val)
			in  let <_cor34> =
				call 'erlang':'and'
				    (_cor31, _cor32)
			    in  call 'erlang':'and'
				    (_cor33, _cor34) ->
	      do  %% Line 1282
		  case <> of
		    %% Line 1283
		    <>
			when try
			      let <_cor4> =
				  call 'erlang':'*'
				      (Bits0, U)
			      in  call 'erlang':'=:='
				      (_cor4, _cor2)
			  of <Try> ->
			      Try
			  catch <T,R> ->
			      'false' ->
			'ok'
		    %% Line 1284
		    <> when 'true' ->
			call 'erlang':'throw'
			    ('not_possible')
		  end
		  let <P> =
		      %% Line 1286
		      {'k_bin_int',A,Sz,U,Fl,Val,N}
		  in  let <_rec54> =
			  %% Line 1287
			  [P|Ps]
		      in  let <_cor9> =
			      %% Line 1287
			      call 'erlang':'setelement'
				  (5, C, _rec54)
			  in  let <_cor10> =
				  %% Line 1287
				  apply 'select_bin_int_1'/4
				      (Cs, _cor2, Fl, Val)
			      in  %% Line 1287
				  [_cor9|_cor10]
	  %% Line 1288
	  <[C = {'iclause',_cor42,_cor43,_cor44,[{'k_bin_seg',A,_cor45,_cor46,'utf8',Fl,%% Line 1290
											{'k_literal',_cor47,Val0},N}|Ps],_cor48,_cor49}|Cs],Bits,_cor50,Val>
	      when let <_cor51> =
		    call 'erlang':'=:='
			(_cor1, Fl)
		in  let <_cor52> =
			%% Line 1292
			call 'erlang':'is_integer'
			    (Val0)
		    in  call 'erlang':'and'
			    (_cor51, _cor52) ->
	      do  let <_8430> =
		      %% Line 1293
		      apply 'select_utf8'/1
			  (Val0)
		  in  %% Line 1293
		      case _8430 of
			%% Line 1294
			<{_cor53,_cor54}>
			    when let <_cor55> =
				  call 'erlang':'=:='
				      (_cor53, _cor0)
			      in  let <_cor56> =
				      call 'erlang':'=:='
					  (_cor54, _cor2)
				  in  call 'erlang':'and'
					  (_cor55, _cor56) ->
			    'ok'
			%% Line 1295
			<{_cor57,_cor58}> when 'true' ->
			    call 'erlang':'throw'
				('not_possible')
			( <_cor11> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_8430})
			  -| ['compiler_generated'] )
		      end
		  let <P> =
		      %% Line 1297
		      {'k_bin_int',A,{'k_int',[],_cor2},1,%% Line 1298
							  ['unsigned'|['big']],_cor0,N}
		  in  let <_rec56> =
			  %% Line 1299
			  [P|Ps]
		      in  let <_cor16> =
			      %% Line 1299
			      call 'erlang':'setelement'
				  (5, C, _rec56)
			  in  let <_cor17> =
				  %% Line 1299
				  apply 'select_bin_int_1'/4
				      (Cs, _cor2, Fl, _cor0)
			      in  %% Line 1299
				  [_cor16|_cor17]
	  %% Line 1300
	  <[],_cor66,_cor67,_cor68> when 'true' ->
	      []
	  %% Line 1301
	  <_cor69,_cor70,_cor71,_cor72> when 'true' ->
	      call 'erlang':'throw'
		  ('not_possible')
	end
'select_assert_match_possible'/3 =
    %% Line 1303
    fun (_cor2,_cor1,_cor0) ->
	let <EmptyBindings> =
	    %% Line 1304
	    call 'erl_eval':'new_bindings'
		()
	in  let <MatchFun> =
		%% Line 1305
		apply 'match_fun'/1
		    (_cor1)
	    in  let <EvalFun> =
		    %% Line 1306
		    fun (_cor6,_cor5) ->
			case <_cor6,_cor5> of
			  <{'integer',_cor20,S},B> when 'true' ->
			      {'value',S,_cor5}
			  ( <_cor8,_cor7> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor6,_cor5})
				  -| [{'function_name',{'-select_assert_match_possible/3-fun-0-',2}}] )
			    -| ['compiler_generated'] )
			end
		in  let <Expr> =
			%% Line 1307
			[{'bin_element',0,{'integer',0,_cor1},{'integer',0,_cor2},[{'unit',1}|_cor0]}|[]]
		    in  let <_3570> =
			    %% Line 1308
			    call 'eval_bits':'expr_grp'
				(Expr, EmptyBindings, EvalFun)
			in  %% Line 1308
			    case _3570 of
			      <{'value',Bin,_cor21}>
				  when call 'erlang':'=:='
					(_cor21,
					 EmptyBindings) ->
				  %% Line 1309
				  try
				      let <_5588> =
					  %% Line 1310
					  call 'eval_bits':'match_bits'
					      (Expr, Bin, EmptyBindings, EmptyBindings, MatchFun, EvalFun)
				      in  %% Line 1310
					  case _5588 of
					    <{'match',_cor22}> when 'true' ->
						%% Line 1314
						'ok'
					    ( <_cor12> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_5588})
					      -| ['compiler_generated'] )
					  end
				  of <_cor13> ->
				      _cor13
				  catch <_cor16,_cor15,_cor14> ->
				      case <_cor16,_cor15,_cor14> of
					%% Line 1316
					<'throw','nomatch',_cor23> when 'true' ->
					    %% Line 1317
					    call 'erlang':'throw'
						('not_possible')
					( <_6532,_12102,_7008> when 'true' ->
					      primop 'raise'
						  (_cor14, _cor15)
					  -| ['compiler_generated'] )
				      end
			      ( <_cor11> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_3570})
				-| ['compiler_generated'] )
			    end
'match_fun'/1 =
    %% Line 1320
    fun (_cor0) ->
	%% Line 1321
	fun (_cor2,_cor1) ->
	    case <_cor2,_cor1> of
	      <'match',{{'integer',_cor6,_cor7},NewV,Bs}>
		  when call 'erlang':'=:='
			(NewV,
			 _cor0) ->
		  %% Line 1322
		  {'match',Bs}
	      ( <_cor4,_cor3> when 'true' ->
		    ( primop 'match_fail'
			  ({'function_clause',_cor2,_cor1})
		      -| [{'function_name',{'-match_fun/1-fun-0-',2}}] )
		-| ['compiler_generated'] )
	    end
'select_utf8'/1 =
    %% Line 1325
    fun (_cor0) ->
	%% Line 1326
	try
	    let <Bin> =
		%% Line 1327
		#{#<_cor0>('undefined','undefined','utf8',['unsigned'|['big']])}#
	    in  let <Size> =
		    %% Line 1328
		    call 'erlang':'bit_size'
			(Bin)
		in  %% Line 1329
		    case ( Bin
			   -| ['reuse_for_context'] ) of
		      <#{#<Val>(Size,1,'integer',['unsigned'|['big']])}#> when 'true' ->
			  %% Line 1330
			  {Val,Size}
		      ( <_cor3> when 'true' ->
			    do  primop 'bs_context_to_binary'
				    (Bin)
				primop 'match_fail'
				    ({'badmatch',Bin})
			-| ['compiler_generated'] )
		    end
	of <_cor4> ->
	    _cor4
	catch <_cor7,_cor6,_cor5> ->
	    case <_cor7,_cor6,_cor5> of
	      %% Line 1332
	      <'error',_cor9,_cor10> when 'true' ->
		  %% Line 1333
		  call 'erlang':'throw'
		      ('not_possible')
	      ( <_6454,_10821,_4639> when 'true' ->
		    primop 'raise'
			(_cor5, _cor6)
		-| ['compiler_generated'] )
	    end
'select'/2 =
    %% Line 1338
    fun (_cor1,_cor0) ->
	( letrec
	      'lc$^0'/1 =
		  fun (_cor5) ->
		      case _cor5 of
			<[C|_cor3]> when 'true' ->
			    %% Line 1501
			    case C of
			      <{'iclause',_cor2,_2520,_cor4,[Arg|_3867],_cor6,_cor7}> when 'true' ->
				  let <_cor4> =
				      %% Line 1503
				      apply 'arg_con'/1
					  (Arg)
				  in  ( case <> of
					  <>
					      when call 'erlang':'=:='
						    (_cor4,
						     _cor1) ->
					      let <_cor6> =
						  apply 'lc$^0'/1
						      (_cor3)
					      in  ( [C|_cor6]
						    -| ['compiler_generated'] )
					  ( <> when 'true' ->
						apply 'lc$^0'/1
						    (_cor3)
					    -| ['compiler_generated'] )
					end
					-| ['list_comprehension'] )
			      ( <_6531> when 'true' ->
				    primop 'match_fail'
					({'function_clause',C})
				-| ['compiler_generated'] )
			    end
			<[]> when 'true' ->
			    []
			( <_1364> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor5})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  apply 'lc$^0'/1
		  (_cor0)
	  -| ['list_comprehension'] )
'match_value'/5 =
    %% Line 1344
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Css> =
	    %% Line 1345
	    apply 'group_value'/2
		(_cor3, _cor2)
	in  let <_cor10> =
		%% Line 1347
		fun (_cor7,_cor6) ->
		    apply 'match_clause'/4
			(_cor4, _cor7, _cor1, _cor6)
	    in  %% Line 1347
		call 'lists':'mapfoldl'
		    (_cor10, _cor0, Css)
'group_value'/2 =
    %% Line 1355
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'k_cons',Cs> when 'true' ->
	      [_cor0|[]]
	  %% Line 1356
	  <'k_nil',Cs> when 'true' ->
	      [_cor0|[]]
	  %% Line 1357
	  <'k_binary',Cs> when 'true' ->
	      [_cor0|[]]
	  %% Line 1358
	  <'k_bin_end',Cs> when 'true' ->
	      [_cor0|[]]
	  %% Line 1359
	  <'k_bin_seg',Cs> when 'true' ->
	      apply 'group_bin_seg'/1
		  (_cor0)
	  %% Line 1360
	  <'k_bin_int',Cs> when 'true' ->
	      [_cor0|[]]
	  %% Line 1361
	  <'k_map',Cs> when 'true' ->
	      apply 'group_map'/1
		  (_cor0)
	  %% Line 1362
	  <_cor19,Cs> when 'true' ->
	      let <_cor8> =
		  %% Line 1364
		  fun (_cor5,_cor4) ->
		      let <_cor3> =
			  apply 'clause_val'/1
			      (_cor5)
		      in  call 'dict':'append'
			      (_cor3, _cor5, _cor4)
	      in  let <_cor2> =
		      %% Line 1365
		      call 'dict':'new'
			  ()
		  in  let <Cd> =
			  %% Line 1364
			  call 'lists':'foldl'
			      (_cor8, _cor2, _cor0)
		      in  let <_cor16> =
			      %% Line 1366
			      fun (_cor12,_cor11,_cor10) ->
				  [_cor11|_cor10]
			  in  %% Line 1366
			      call 'dict':'fold'
				  (_cor16, [], Cd)
	end
'group_bin_seg'/1 =
    %% Line 1368
    fun (_cor0) ->
	case _cor0 of
	  <[C1|Cs]> when 'true' ->
	      let <V1> =
		  %% Line 1369
		  apply 'clause_val'/1
		      (C1)
	      in  let <_cor5> =
		      %% Line 1370
		      fun (_cor3) ->
			  let <_cor2> =
			      apply 'clause_val'/1
				  (_cor3)
			  in  call 'erlang':'=='
				  (_cor2, V1)
		  in  let <_4956> =
			  %% Line 1370
			  call 'lists':'splitwith'
			      (_cor5, Cs)
		      in  %% Line 1370
			  case _4956 of
			    <{More,Rest}> when 'true' ->
				let <_cor7> =
				    %% Line 1371
				    apply 'group_bin_seg'/1
					(Rest)
				in  %% Line 1371
				    [[C1|More]|_cor7]
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_4956})
			      -| ['compiler_generated'] )
			  end
	  %% Line 1372
	  <[]> when 'true' ->
	      []
	  ( <_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'group_bin_seg',1}}] )
	    -| ['compiler_generated'] )
	end
'group_map'/1 =
    %% Line 1374
    fun (_cor0) ->
	case _cor0 of
	  <[C1|Cs]> when 'true' ->
	      let <V1> =
		  %% Line 1375
		  apply 'clause_val'/1
		      (C1)
	      in  let <_cor5> =
		      %% Line 1376
		      fun (_cor3) ->
			  let <_cor2> =
			      apply 'clause_val'/1
				  (_cor3)
			  in  call 'erlang':'=:='
				  (_cor2, V1)
		  in  let <_8178> =
			  %% Line 1376
			  call 'lists':'splitwith'
			      (_cor5, Cs)
		      in  %% Line 1376
			  case _8178 of
			    <{More,Rest}> when 'true' ->
				let <_cor7> =
				    %% Line 1377
				    apply 'group_map'/1
					(Rest)
				in  %% Line 1377
				    [[C1|More]|_cor7]
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_8178})
			      -| ['compiler_generated'] )
			  end
	  %% Line 1378
	  <[]> when 'true' ->
	      []
	  ( <_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'group_map',1}}] )
	    -| ['compiler_generated'] )
	end
'match_clause'/4 =
    %% Line 1394
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[U|Us],Cs0 = [C|_cor15],Def,St0> when 'true' ->
	      let <Anno> =
		  call 'erlang':'element'
		      (2, C)
	      in  let <_cor5> =
		      %% Line 1396
		      apply 'get_con'/1
			  (_cor2)
		  in  let <_8832> =
			  %% Line 1396
			  apply 'get_match'/2
			      (_cor5, _cor0)
		      in  %% Line 1396
			  case _8832 of
			    <{Match0,Vs,St1}> when 'true' ->
				let <Match> =
				    %% Line 1397
				    apply 'sub_size_var'/2
					(Match0, _cor2)
				in  let <_5518> =
					%% Line 1398
					apply 'new_clauses'/3
					    (_cor2, U, St1)
				    in  %% Line 1398
					case _5518 of
					  <{Cs1,St2}> when 'true' ->
					      let <_cor9> =
						  %% Line 1399
						  call 'erlang':'++'
						      (Vs, Us)
					      in  let <_3181> =
						      %% Line 1399
						      apply 'match'/4
							  (_cor9, Cs1, _cor1, St2)
						  in  %% Line 1399
						      case _3181 of
							<{B,St3}> when 'true' ->
							    %% Line 1400
							    {{'k_val_clause',Anno,Match,B},St3}
							( <_cor10> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_3181})
							  -| ['compiler_generated'] )
						      end
					  ( <_cor8> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_5518})
					    -| ['compiler_generated'] )
					end
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_8832})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'match_clause',4}}] )
	    -| ['compiler_generated'] )
	end
'sub_size_var'/2 =
    %% Line 1402
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <BinSeg = {'k_bin_seg',_cor11,Kvar = {'k_var',_cor12,Name},_cor13,_cor14,_cor15,_cor16,_cor17},[{'iclause',_cor18,Sub,_cor19,_cor20,_cor21,_cor22}|_cor23]> when 'true' ->
	      let <_265> =
		  call 'orddict':'find'
		      (Name, Sub)
	      in  let <_rec60> =
		      case _265 of
			<{'ok',Val}> when 'true' ->
			    Val
			<'error'> when 'true' ->
			    Name
			( <_cor2> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_265})
			  -| ['compiler_generated'] )
		      end
		  in  let <_cor5> =
			  %% Line 1403
			  call 'erlang':'setelement'
			      (3, Kvar, _rec60)
		      in  %% Line 1403
			  call 'erlang':'setelement'
			      (3, _cor1, _cor5)
	  %% Line 1404
	  <K,_cor35> when 'true' ->
	      _cor1
	end
'get_con'/1 =
    %% Line 1406
    fun (_cor0) ->
	case _cor0 of
	  <[C|_cor3]> when 'true' ->
	      %% Line 1501
	      case C of
		<{'iclause',_cor2,_5147,_cor4,[Arg|_cor5],_cor6,_cor7}> when 'true' ->
		    %% Line 1515
		    case Arg of
		      <{'ialias',_cor2,_6306,Con}> when 'true' ->
			  Con
		      %% Line 1516
		      <Con> when 'true' ->
			  Arg
		    end
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'function_clause',C})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'get_con',1}}] )
	    -| ['compiler_generated'] )
	end
'get_match'/2 =
    %% Line 1408
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'k_cons',_cor35,_cor36,_cor37},St0> when 'true' ->
	      let <_1306> =
		  apply 'new_vars'/3
		      (%% Line 1409
		       2, _cor0, [])
	      in  %% Line 1409
		  case _1306 of
		    <{L = [H|[T|[]]],St1}> when 'true' ->
			%% Line 1410
			{{'k_cons',[],H,T},L,St1}
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1306})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1411
	  <{'k_binary',_cor38,_cor39},St0> when 'true' ->
	      let <_7406> =
		  apply 'new_vars'/3
		      (%% Line 1412
		       1, _cor0, [])
	      in  %% Line 1412
		  case _7406 of
		    <{Mes = [V|[]],St1}> when 'true' ->
			%% Line 1413
			{{'k_binary',[],V},Mes,St1}
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_7406})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1414
	  <Seg = {'k_bin_seg',_cor40,{'k_atom',_cor41,'all'},_cor42,_cor43,_cor44,_cor45,{'k_bin_end',[]}},St0> when 'true' ->
	      let <_10392> =
		  apply 'new_vars'/3
		      (%% Line 1415
		       1, _cor0, [])
	      in  %% Line 1415
		  case _10392 of
		    <{Vars = [S|[]],St1}> when 'true' ->
			let <_cor6> =
			    %% Line 1416
			    call 'erlang':'setelement'
				(8, _cor1, [])
			in  let <_cor8> =
				%% Line 1416
				call 'erlang':'setelement'
				    (7, _cor6, S)
			    in  %% Line 1416
				{_cor8,Vars,St1}
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_10392})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1417
	  <Seg = {'k_bin_seg',_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60},St0> when 'true' ->
	      let <_2633> =
		  apply 'new_vars'/3
		      (%% Line 1418
		       2, _cor0, [])
	      in  %% Line 1418
		  case _2633 of
		    <{[S|[N0|[]]],St1}> when 'true' ->
			let <N> =
			    call 'erlang':'setelement'
				(2, N0, %% Line 1419
					['no_usage'])
			in  let <_cor12> =
				%% Line 1420
				call 'erlang':'setelement'
				    (8, _cor1, N)
			    in  let <_cor14> =
				    %% Line 1420
				    call 'erlang':'setelement'
					(7, _cor12, S)
				in  %% Line 1420
				    {_cor14,[S|[N|[]]],St1}
		    ( <_cor9> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_2633})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1421
	  <BinInt = {'k_bin_int',_cor69,_cor70,_cor71,_cor72,_cor73,_cor74},St0> when 'true' ->
	      let <_284> =
		  apply 'new_var_name'/1
		      (_cor0)
	      in  case _284 of
		    <{New,St1}> when 'true' ->
			let <N0,St1> = <{'k_var',[],New},St1>
			in  let <N> =
				call 'erlang':'setelement'
				    (2, N0, %% Line 1423
					    ['no_usage'])
			    in  let <_cor19> =
				    %% Line 1424
				    call 'erlang':'setelement'
					(7, _cor1, N)
				in  %% Line 1424
				    {_cor19,[N|[]],St1}
		    ( <_7367> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_284})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1425
	  <{'k_tuple',_cor82,Es},St0> when 'true' ->
	      let <_cor20> =
		  %% Line 1426
		  call 'erlang':'length'
		      (Es)
	      in  let <_12573> =
		      apply 'new_vars'/3
			  (_cor20, _cor0, [])
		  in  %% Line 1426
		      case _12573 of
			<{Mes,St1}> when 'true' ->
			    %% Line 1427
			    {{'k_tuple',[],Mes},Mes,St1}
			( <_cor21> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_12573})
			  -| ['compiler_generated'] )
		      end
	  %% Line 1428
	  <{'k_map',_cor83,_cor84,'exact',Es0},St0> when 'true' ->
	      let <_cor22> =
		  %% Line 1429
		  call 'erlang':'length'
		      (Es0)
	      in  let <_4738> =
		      apply 'new_vars'/3
			  (_cor22, _cor0, [])
		  in  %% Line 1429
		      case _4738 of
			<{Mes,St1}> when 'true' ->
			    let <_cor31> =
				%% Line 1430
				fun (_cor28,_cor27) ->
				    case <_cor28,_cor27> of
				      %% Line 1431
				      <Pair = {'k_map_pair',_cor85,_cor86,_cor87},[V|Vs]> when 'true' ->
					  let <_cor26> =
					      %% Line 1432
					      call 'erlang':'setelement'
						  (4, _cor28, V)
					  in  %% Line 1432
					      {_cor26,Vs}
				      ( <_cor30,_cor29> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor28,_cor27})
					      -| [{'function_name',{'-get_match/2-fun-0-',2}}] )
					-| ['compiler_generated'] )
				    end
			    in  let <_13149> =
				    %% Line 1430
				    call 'lists':'mapfoldl'
					(_cor31, Mes, Es0)
				in  %% Line 1430
				    case _13149 of
				      <{Es,_cor92}> when 'true' ->
					  %% Line 1434
					  {{'k_map',[],'undefined','exact',Es},Mes,St1}
				      ( <_cor32> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_13149})
					-| ['compiler_generated'] )
				    end
			( <_cor23> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_4738})
			  -| ['compiler_generated'] )
		      end
	  %% Line 1435
	  <M,St> when 'true' ->
	      %% Line 1436
	      {_cor1,[],_cor0}
	end
'new_clauses'/3 =
    %% Line 1438
    fun (_cor2,_cor1,_cor0) ->
	let <_cor35> =
	    %% Line 1439
	    fun (_cor33) ->
		case _cor33 of
		  <C = {'iclause',_cor40,Isub0,Osub0,[Arg|As],_cor41,_cor42}> when 'true' ->
		      let <_13885> =
			  %% Line 1515
			  case Arg of
			    <{'ialias',_1112,_cor3,Con}> when 'true' ->
				Con
			    %% Line 1516
			    <Con> when 'true' ->
				Arg
			  end
		      in  let <_cor10> =
			      %% Line 1440
			      case _13885 of
				%% Line 1441
				<{'k_cons',_cor43,H,T}> when 'true' ->
				    [H|[T|As]]
				%% Line 1442
				<{'k_tuple',_cor44,Es}> when 'true' ->
				    call 'erlang':'++'
					(Es, As)
				%% Line 1443
				<{'k_binary',_cor45,E}> when 'true' ->
				    [E|As]
				%% Line 1444
				<{'k_bin_seg',_cor46,{'k_atom',_cor47,'all'},_cor48,_cor49,_cor50,S,%% Line 1445
												    {'k_bin_end',[]}}> when 'true' ->
				    %% Line 1446
				    [S|As]
				%% Line 1447
				<{'k_bin_seg',_cor51,_cor52,_cor53,_cor54,_cor55,S,N}> when 'true' ->
				    %% Line 1448
				    [S|[N|As]]
				%% Line 1449
				<{'k_bin_int',_cor56,_cor57,_cor58,_cor59,_cor60,N}> when 'true' ->
				    %% Line 1450
				    [N|As]
				%% Line 1451
				<{'k_map',_cor61,_cor62,'exact',Es}> when 'true' ->
				    let <_cor7> =
					%% Line 1452
					( letrec
					      'lc$^0'/1 =
						  fun (_cor5) ->
						      case _cor5 of
							<[{'k_map_pair',_cor63,_cor64,V}|_cor4]> when 'true' ->
							    let <_cor6> =
								apply 'lc$^0'/1
								    (_cor4)
							    in  ( [V|_cor6]
								  -| ['compiler_generated'] )
							( <[_cor3|_cor4]> when 'true' ->
							      apply 'lc$^0'/1
								  (_cor4)
							  -| ['compiler_generated'] )
							<[]> when 'true' ->
							    []
							( <_2495> when 'true' ->
							      ( primop 'match_fail'
								    ({'function_clause',_cor5})
								-| [{'function_name',{'lc$^0',1}}] )
							  -| ['compiler_generated'] )
						      end
					  in  apply 'lc$^0'/1
						  (Es)
					  -| ['list_comprehension'] )
				    in  %% Line 1453
					call 'erlang':'++'
					    (_cor7, As)
				%% Line 1454
				<_X_Other> when 'true' ->
				    As
			      end
			  in  let <Vs> =
				  %% Line 1518
				  case Arg of
				    <{'ialias',_14973,_8931,_cor3}> when 'true' ->
					_8931
				    %% Line 1519
				    <_X_Con> when 'true' ->
					[]
				  end
			      in  let <_cor19> =
				      %% Line 1458
				      fun (_cor16,_cor15) ->
					  case <_cor16,_cor15> of
					    <{'k_var',_cor65,V},Acc> when 'true' ->
						%% Line 1459
						( case _cor1 of
						    ( <( {'k_var',_cor66,_rec66}
							 -| ['compiler_generated'] )> when 'true' ->
							  apply 'subst_vsub'/3
							      (V, _rec66, _cor15)
						      -| ['compiler_generated'] )
						    ( <_cor67> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','k_var'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    ( <_cor18,_cor17> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor16,_cor15})
						    -| [{'function_name',{'-new_clauses/3-fun-0-',2}}] )
					      -| ['compiler_generated'] )
					  end
				  in  let <Osub1> =
					  %% Line 1458
					  call 'lists':'foldl'
					      (_cor19, Osub0, Vs)
				      in  let <_cor27> =
					      %% Line 1461
					      fun (_cor24,_cor23) ->
						  case <_cor24,_cor23> of
						    <{'k_var',_cor68,V},Acc> when 'true' ->
							%% Line 1462
							( case _cor1 of
							    ( <( {'k_var',_cor69,_rec67}
								 -| ['compiler_generated'] )> when 'true' ->
								  apply 'subst_vsub'/3
								      (V, _rec67, _cor23)
							      -| ['compiler_generated'] )
							    ( <_cor70> when 'true' ->
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( 'error'
													 -| ['compiler_generated'] )
									(( {'badrecord','k_var'}
									   -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
						    ( <_cor26,_cor25> when 'true' ->
							  ( primop 'match_fail'
								({'function_clause',_cor24,_cor23})
							    -| [{'function_name',{'-new_clauses/3-fun-1-',2}}] )
						      -| ['compiler_generated'] )
						  end
					  in  let <Isub1> =
						  %% Line 1461
						  call 'lists':'foldl'
						      (_cor27, Isub0, Vs)
					      in  let <_cor30> =
						      %% Line 1464
						      call 'erlang':'setelement'
							  (5, _cor33, _cor10)
						  in  let <_cor31> =
							  %% Line 1464
							  call 'erlang':'setelement'
							      (4, _cor30, Osub1)
						      in  %% Line 1464
							  call 'erlang':'setelement'
							      (3, _cor31, Isub1)
		  ( <_cor34> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor33})
			  -| [{'function_name',{'-new_clauses/3-fun-2-',1}}] )
		    -| ['compiler_generated'] )
		end
	in  let <Cs1> =
		%% Line 1439
		call 'lists':'map'
		    (_cor35, _cor2)
	    in  %% Line 1466
		{Cs1,_cor0}
'build_select'/2 =
    %% Line 1475
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <V,Tcs = [Tc|_cor4]> when 'true' ->
	      let <_4584> =
		  %% Line 1476
		  {'k_select',[],_cor1,_cor0}
	      in  let <Anno> =
		      call 'erlang':'element'
			  (2, Tc)
		  in  call 'erlang':'setelement'
			  (2, _4584, Anno)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'build_select',2}}] )
	    -| ['compiler_generated'] )
	end
'build_alt'/2 =
    %% Line 1481
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'fail',Then> when 'true' ->
	      _cor0
	  %% Line 1482
	  <First,Then> when 'true' ->
	      %% Line 1484
	      case <_cor1,_cor0> of
		<_5807,'fail'> when 'true' ->
		    _cor1
		%% Line 1485
		<_13507,_10890> when 'true' ->
		    let <_9663> =
			%% Line 1486
			{'k_alt',[],_cor1,_cor0}
		    in  let <Anno> =
			    call 'erlang':'element'
				(2, _cor1)
			in  call 'erlang':'setelement'
				(2, _9663, Anno)
	      end
	end
'build_match'/2 =
    %% Line 1491
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Us,Km = {'k_alt',_cor4,_cor5,_cor6}> when 'true' ->
	      let <_7243> =
		  {'k_match',[],_cor1,_cor0,[]}
	      in  let <Anno> =
		      call 'erlang':'element'
			  (2, _cor0)
		  in  call 'erlang':'setelement'
			  (2, _7243, Anno)
	  %% Line 1492
	  <Us,Km = {'k_select',_cor7,_cor8,_cor9}> when 'true' ->
	      let <_14185> =
		  {'k_match',[],_cor1,_cor0,[]}
	      in  let <Anno> =
		      call 'erlang':'element'
			  (2, _cor0)
		  in  call 'erlang':'setelement'
			  (2, _14185, Anno)
	  %% Line 1493
	  <Us,Km = {'k_guard',_cor10,_cor11}> when 'true' ->
	      let <_2666> =
		  {'k_match',[],_cor1,_cor0,[]}
	      in  let <Anno> =
		      call 'erlang':'element'
			  (2, _cor0)
		  in  call 'erlang':'setelement'
			  (2, _2666, Anno)
	  %% Line 1494
	  <_cor12,Km> when 'true' ->
	      _cor0
	end
'clause_val'/1 =
    %% Line 1505
    fun (_cor0) ->
	case _cor0 of
	  <{'iclause',_cor2,_cor3,_cor4,[Arg|_cor5],_cor6,_cor7}> when 'true' ->
	      apply 'arg_val'/2
		  (Arg, _cor0)
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'function_clause',_cor0})
	    -| ['compiler_generated'] )
	end
'is_var_clause'/1 =
    %% Line 1507
    fun (_cor0) ->
	case _cor0 of
	  <{'iclause',_cor2,_cor3,_cor4,[Arg|_cor5],_cor6,_cor7}> when 'true' ->
	      let <_cor1> =
		  apply 'arg_con'/1
		      (Arg)
	      in  call 'erlang':'=:='
		      (_cor1, 'k_var')
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'function_clause',_cor0})
	    -| ['compiler_generated'] )
	end
'arg_con'/1 =
    %% Line 1521
    fun (_cor0) ->
	let <_11143> =
	    case _cor0 of
	      <{'ialias',_cor2,_cor3,Con}> when 'true' ->
		  Con
	      <Con> when 'true' ->
		  _cor0
	    end
	in  %% Line 1522
	    case _11143 of
	      %% Line 1523
	      <{'k_literal',_cor3,_cor4}> when 'true' ->
		  'k_literal'
	      %% Line 1524
	      <{'k_int',_cor5,_cor6}> when 'true' ->
		  'k_int'
	      %% Line 1525
	      <{'k_float',_cor7,_cor8}> when 'true' ->
		  'k_float'
	      %% Line 1526
	      <{'k_atom',_cor9,_cor10}> when 'true' ->
		  'k_atom'
	      %% Line 1527
	      <{'k_nil',_cor11}> when 'true' ->
		  'k_nil'
	      %% Line 1528
	      <{'k_cons',_cor12,_cor13,_cor14}> when 'true' ->
		  'k_cons'
	      %% Line 1529
	      <{'k_tuple',_cor15,_cor16}> when 'true' ->
		  'k_tuple'
	      %% Line 1530
	      <{'k_map',_cor17,_cor18,_cor19,_cor20}> when 'true' ->
		  'k_map'
	      %% Line 1531
	      <{'k_binary',_cor21,_cor22}> when 'true' ->
		  'k_binary'
	      %% Line 1532
	      <{'k_bin_end',_cor23}> when 'true' ->
		  'k_bin_end'
	      %% Line 1533
	      <{'k_bin_seg',_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30}> when 'true' ->
		  'k_bin_seg'
	      %% Line 1534
	      <{'k_var',_cor31,_cor32}> when 'true' ->
		  'k_var'
	      ( <_cor1> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_11143})
		-| ['compiler_generated'] )
	    end
'arg_val'/2 =
    %% Line 1537
    fun (_cor1,_cor0) ->
	let <_7614> =
	    case _cor1 of
	      <{'ialias',_cor2,_cor3,Con}> when 'true' ->
		  Con
	      <Con> when 'true' ->
		  _cor1
	    end
	in  %% Line 1538
	    case _7614 of
	      %% Line 1539
	      <{'k_literal',_cor22,Lit}> when 'true' ->
		  Lit
	      %% Line 1540
	      <{'k_int',_cor23,I}> when 'true' ->
		  I
	      %% Line 1541
	      <{'k_float',_cor24,F}> when 'true' ->
		  F
	      %% Line 1542
	      <{'k_atom',_cor25,A}> when 'true' ->
		  A
	      %% Line 1543
	      <{'k_tuple',_cor26,Es}> when 'true' ->
		  call 'erlang':'length'
		      (Es)
	      %% Line 1544
	      <{'k_bin_seg',_cor27,S,U,T,Fs,_cor28,_cor29}> when 'true' ->
		  %% Line 1545
		  case S of
		    %% Line 1546
		    <{'k_var',_cor30,V}> when 'true' ->
			%% Line 1547
			case _cor0 of
			  <{'iclause',_cor31,Isub,_cor32,_cor33,_cor34,_cor35}> when 'true' ->
			      let <_265> =
				  call 'orddict':'find'
				      (V, Isub)
			      in  let <_cor3> =
				      case _265 of
					<{'ok',Val}> when 'true' ->
					    Val
					<'error'> when 'true' ->
					    V
					( <_cor2> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_265})
					  -| ['compiler_generated'] )
				      end
				  in  %% Line 1548
				      {{'k_var',[],_cor3},U,T,Fs}
			  ( <_cor2> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor0})
			    -| ['compiler_generated'] )
			end
		    %% Line 1549
		    <_cor36> when 'true' ->
			let <_cor4> =
			    call 'erlang':'setelement'
				(2, S, %% Line 1550
				       [])
			in  %% Line 1550
			    {_cor4,U,T,Fs}
		  end
	      %% Line 1552
	      <{'k_map',_cor37,_cor38,'exact',Es}> when 'true' ->
		  let <_cor11> =
		      %% Line 1553
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor8) ->
				    case _cor8 of
				      <[Pair|_cor7]> when 'true' ->
					  %% Line 1554
					  case Pair of
					    <{'k_map_pair',_cor39,{'k_literal',_cor40,Key},_cor41}> when 'true' ->
						let <_cor10> =
						    %% Line 1556
						    apply 'lc$^0'/1
							(_cor7)
						in  ( [Key|_cor10]
						      -| ['compiler_generated'] )
					    ( <_cor9> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',Pair})
					      -| ['compiler_generated'] )
					  end
				      <[]> when 'true' ->
					  []
				      ( <_616> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor8})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(Es)
			-| ['list_comprehension'] )
		  in  let <_cor18> =
			  %% Line 1559
			  fun (_cor15,_cor14) ->
			      let <_cor13> =
				  call 'erts_internal':'cmp_term'
				      (_cor15, _cor14)
			      in  call 'erlang':'<'
				      (_cor13, 0)
		      in  %% Line 1559
			  call 'lists':'sort'
			      (_cor18, _cor11)
	      ( <_cor19> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_7614})
		-| ['compiler_generated'] )
	    end
'ubody_used_vars'/2 =
    %% Line 1565
    fun (_cor1,_cor0) ->
	%% Line 1566
	case _cor0 of
	  <{'kern',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16}> when 'true' ->
	      let <_cor4> =
		  call 'erlang':'setelement'
		      (7, _cor0, 'ignore')
	      in  let <_8134> =
		      apply 'ubody'/3
			  (_cor1, 'return', _cor4)
		  in  case _8134 of
			<{_cor18,Used,_cor19}> when 'true' ->
			    Used
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_8134})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor17> when 'true' ->
		( call ( 'erlang'
			 -| ['compiler_generated'] ):( 'error'
						       -| ['compiler_generated'] )
		      (( {'badrecord','kern'}
			 -| ['compiler_generated'] ))
		  -| ['compiler_generated'] )
	    -| ['compiler_generated'] )
	end
'ubody'/3 =
    %% Line 1574
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'iset',_cor21,[],Let = {'iletrec',_cor22,_cor23},B0},Br,St0> when 'true' ->
	      let <St> =
		  %% Line 1576
		  apply 'iletrec_funs'/2
		      (Let, _cor0)
	      in  %% Line 1577
		  apply 'ubody'/3
		      (B0, _cor1, St)
	  %% Line 1578
	  <{'iset',A,Vs,E0,B0},Br,St0> when 'true' ->
	      let <_12986> =
		  %% Line 1579
		  apply 'uexpr'/3
		      (E0, {'break',Vs}, _cor0)
	      in  %% Line 1579
		  case _12986 of
		    <{E1,Eu,St1}> when 'true' ->
			let <_5639> =
			    %% Line 1580
			    apply 'ubody'/3
				(B0, _cor1, St1)
			in  %% Line 1580
			    case _5639 of
			      <{B1,Bu,St2}> when 'true' ->
				  let <_cor6> =
				      %% Line 1941
				      fun (_cor3,_7900) ->
					  let <_7606> =
					      apply 'lit_vars'/1
						  (_cor3)
					  in  call 'ordsets':'union'
						  (_7606, _7900)
				  in  let <Ns> =
					  %% Line 1941
					  call 'lists':'foldl'
					      (_cor6, [], Vs)
				      in  let <_cor7> =
					      %% Line 1582
					      call 'ordsets':'subtract'
						  (Bu, Ns)
					  in  let <Used> =
						  %% Line 1582
						  call 'ordsets':'union'
						      (Eu, _cor7)
					      in  %% Line 1583
						  {{'k_seq',{'k',Used,Ns,A},E1,B1},Used,St2}
			      ( <_cor5> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_5639})
				-| ['compiler_generated'] )
			    end
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12986})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1584
	  <{'ivalues',A,As},'return',St> when 'true' ->
	      let <_cor6> =
		  %% Line 1941
		  fun (_cor3,_12508) ->
		      let <_4269> =
			  apply 'lit_vars'/1
			      (_cor3)
		      in  call 'ordsets':'union'
			      (_4269, _12508)
	      in  let <Au> =
		      %% Line 1941
		      call 'lists':'foldl'
			  (_cor6, [], As)
		  in  %% Line 1586
		      {{'k_return',{'k',Au,[],A},As},Au,_cor0}
	  %% Line 1587
	  <{'ivalues',A,As},{'break',_X_Vbs},St> when 'true' ->
	      let <_cor6> =
		  %% Line 1941
		  fun (_cor3,_2752) ->
		      let <_6743> =
			  apply 'lit_vars'/1
			      (_cor3)
		      in  call 'ordsets':'union'
			      (_6743, _2752)
	      in  let <Au> =
		      %% Line 1941
		      call 'lists':'foldl'
			  (_cor6, [], As)
		  in  let <_506> =
			  %% Line 1589
			  apply 'is_in_guard'/1
			      (_cor0)
		      in  %% Line 1589
			  case _506 of
			    %% Line 1590
			    <'true'> when 'true' ->
				%% Line 1591
				{{'k_guard_break',{'k',Au,[],A},As},Au,_cor0}
			    %% Line 1592
			    <'false'> when 'true' ->
				%% Line 1593
				{{'k_break',{'k',Au,[],A},As},Au,_cor0}
			    ( <_cor11> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_506})
			      -| ['compiler_generated'] )
			  end
	  %% Line 1595
	  <E,'return',St0> when 'true' ->
	      let <_3223> =
		  %% Line 1597
		  apply 'is_enter_expr'/1
		      (_cor2)
	      in  %% Line 1597
		  case _3223 of
		    %% Line 1598
		    <'true'> when 'true' ->
			apply 'uexpr'/3
			    (_cor2, 'return', _cor0)
		    %% Line 1599
		    <'false'> when 'true' ->
			let <_11646> =
			    %% Line 1600
			    apply 'force_atomic'/2
				(_cor2, _cor0)
			in  %% Line 1600
			    case _11646 of
			      <{Ea,Pa,St1}> when 'true' ->
				  let <_cor13> =
				      %% Line 1601
				      apply 'pre_seq'/2
					  (Pa, {'ivalues',[],[Ea|[]]})
				  in  %% Line 1601
				      apply 'ubody'/3
					  (_cor13, 'return', St1)
			      ( <_cor12> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_11646})
				-| ['compiler_generated'] )
			    end
		    ( <_cor14> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_3223})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1603
	  <E,Break = {'break',_X_Rs},St0> when 'true' ->
	      let <_7487> =
		  %% Line 1649
		  case _cor2 of
		    <{'k_receive_next',_1933}> when 'true' ->
			'true'
		    %% Line 1650
		    <_cor3> when 'true' ->
			'false'
		  end
	      in  %% Line 1606
		  case _7487 of
		    %% Line 1607
		    <'true'> when 'true' ->
			apply 'uexpr'/3
			    (_cor2, 'return', _cor0)
		    %% Line 1608
		    <'false'> when 'true' ->
			let <_3229> =
			    %% Line 1609
			    apply 'force_atomic'/2
				(_cor2, _cor0)
			in  %% Line 1609
			    case _3229 of
			      <{Ea,Pa,St1}> when 'true' ->
				  let <_cor16> =
				      %% Line 1610
				      apply 'pre_seq'/2
					  (Pa, {'ivalues',[],[Ea|[]]})
				  in  %% Line 1610
				      apply 'ubody'/3
					  (_cor16, _cor1, St1)
			      ( <_cor15> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_3229})
				-| ['compiler_generated'] )
			    end
		    ( <_cor17> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_7487})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'ubody',3}}] )
	    -| ['compiler_generated'] )
	end
'iletrec_funs'/2 =
    %% Line 1613
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'iletrec',_cor21,Fs},St0> when 'true' ->
	      let <_cor9> =
		  %% Line 1616
		  fun (_cor6,_cor5) ->
		      case <_cor6,_cor5> of
			<{_cor22,{'ifun',_cor23,Vs,Fb0}},Free0> when 'true' ->
			    let <Fbu> =
				%% Line 1617
				apply 'ubody_used_vars'/2
				    (Fb0, _cor0)
			    in  let <_10516> =
				    %% Line 1941
				    fun (_cor3,_cor2) ->
					let <_13073> =
					    apply 'lit_vars'/1
						(_cor3)
					in  call 'ordsets':'union'
						(_13073, _cor2)
				in  let <Ns> =
					%% Line 1941
					call 'lists':'foldl'
					    (_10516, [], Vs)
				    in  let <Free1> =
					    %% Line 1619
					    call 'ordsets':'subtract'
						(Fbu, Ns)
					in  %% Line 1620
					    call 'ordsets':'union'
						(Free1, _cor5)
			( <_cor8,_cor7> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor6,_cor5})
				-| [{'function_name',{'-iletrec_funs/2-fun-0-',2}}] )
			  -| ['compiler_generated'] )
		      end
	      in  let <Free> =
		      %% Line 1616
		      call 'lists':'foldl'
			  (_cor9, %% Line 1621
				  [], Fs)
		  in  let <FreeVs> =
			  ( letrec
				'lc$^0'/1 =
				    fun (_cor3) ->
					case _cor3 of
					  <[V|_cor2]> when 'true' ->
					      let <_cor4> =
						  apply 'lc$^0'/1
						      (_cor2)
					      in  ( [{'k_var',[],V}|_cor4]
						    -| ['compiler_generated'] )
					  <[]> when 'true' ->
					      []
					  ( <_10499> when 'true' ->
						primop 'match_fail'
						    ({'function_clause',_cor3})
					    -| ['compiler_generated'] )
					end
			    in  case Free of
				  <[V|_cor2]> when 'true' ->
				      let <_cor4> =
					  apply 'lc$^0'/1
					      (_cor2)
				      in  ( [{'k_var',[],V}|_cor4]
					    -| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_10499> when 'true' ->
					primop 'match_fail'
					    ({'function_clause',Free})
				    -| ['compiler_generated'] )
				end
			    -| ['list_comprehension'] )
		      in  let <_cor17> =
			      %% Line 1624
			      fun (_cor14,_cor13) ->
				  case <_cor14,_cor13> of
				    <{N,{'ifun',_cor24,Vs,_cor25}},Lst> when 'true' ->
					let <_cor12> =
					    %% Line 1625
					    call 'erlang':'length'
						(Vs)
					in  %% Line 1625
					    apply 'store_free'/4
						(N, _cor12, FreeVs, _cor13)
				    ( <_cor16,_cor15> when 'true' ->
					  ( primop 'match_fail'
						({'function_clause',_cor14,_cor13})
					    -| [{'function_name',{'-iletrec_funs/2-fun-1-',2}}] )
				      -| ['compiler_generated'] )
				  end
			  in  let <St1> =
				  %% Line 1624
				  call 'lists':'foldl'
				      (_cor17, _cor0, Fs)
			      in  %% Line 1627
				  apply 'iletrec_funs_gen'/3
				      (Fs, FreeVs, St1)
	  ( <_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'iletrec_funs',2}}] )
	    -| ['compiler_generated'] )
	end
'iletrec_funs_gen'/3 =
    %% Line 1630
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_cor26,_cor27,St = {'kern',_cor28,_cor29,_cor30,_cor31,_cor32,'ignore',_cor33,_cor34,_cor35}> when 'true' ->
	      _cor0
	  %% Line 1634
	  <Fs,FreeVs,St> when 'true' ->
	      let <_cor22> =
		  %% Line 1635
		  fun (_cor19,_cor18) ->
		      case <_cor19,_cor18> of
			<{N,{'ifun',Fa,Vs,Fb0}},Lst0> when 'true' ->
			    let <Arity0> =
				%% Line 1636
				call 'erlang':'length'
				    (Vs)
			    in  let <_rec70> = {N,Arity0}
				in  %% Line 1637
				    case _cor18 of
				      <{'kern',_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44}> when 'true' ->
					  let <_cor7> =
					      call 'erlang':'setelement'
						  (3, _cor18, _rec70)
					  in  let <_4981> =
						  apply 'ubody'/3
						      (Fb0, 'return', _cor7)
					      in  case _4981 of
						    <{Fb1,_cor46,Lst1}> when 'true' ->
							let <_cor9> =
							    %% Line 1638
							    call 'erlang':'length'
								(_cor1)
							in  let <Arity> =
								%% Line 1638
								call 'erlang':'+'
								    (Arity0, _cor9)
							    in  let <_cor11> =
								    %% Line 1641
								    call 'erlang':'++'
									(Vs, _cor1)
								in  let <Fun> =
									%% Line 1639
									{'k_fdef',{'k',[],[],Fa},N,Arity,_cor11,Fb1}
								    in  %% Line 1642
									( case Lst1 of
									    ( <( {'kern',_cor47,_cor48,_cor49,_cor50,_cor51,_rec74,_cor52,_cor53,_cor54}
										 -| ['compiler_generated'] )> when 'true' ->
										  let <_rec72> =
										      [Fun|_rec74]
										  in  call 'erlang':'setelement'
											  (7, Lst1, _rec72)
									      -| ['compiler_generated'] )
									    ( <_cor55> when 'true' ->
										  ( call ( 'erlang'
											   -| ['compiler_generated'] ):( 'error'
															 -| ['compiler_generated'] )
											(( {'badrecord','kern'}
											   -| ['compiler_generated'] ))
										    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									  end
									  -| ['compiler_generated'] )
						    ( <_cor8> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_4981})
						      -| ['compiler_generated'] )
						  end
				      ( <_cor45> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','kern'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
			( <_cor21,_cor20> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor19,_cor18})
				-| [{'function_name',{'-iletrec_funs_gen/3-fun-0-',2}}] )
			  -| ['compiler_generated'] )
		      end
	      in  %% Line 1635
		  call 'lists':'foldl'
		      (_cor22, _cor0, _cor2)
	end
'is_enter_expr'/1 =
    %% Line 1656
    fun (_cor0) ->
	case _cor0 of
	  <{'k_try',_cor2,_cor3,_cor4,_cor5,_cor6,_cor7,_cor8}> when 'true' ->
	      'true'
	  %% Line 1657
	  <{'k_call',_cor9,_cor10,_cor11,_cor12}> when 'true' ->
	      'true'
	  %% Line 1658
	  <{'k_match',_cor13,_cor14,_cor15,_cor16}> when 'true' ->
	      'true'
	  %% Line 1659
	  <{'k_receive',_cor17,_cor18,_cor19,_cor20,_cor21,_cor22}> when 'true' ->
	      'true'
	  %% Line 1660
	  <{'k_receive_next',_cor23}> when 'true' ->
	      'true'
	  %% Line 1661
	  <_cor24> when 'true' ->
	      'false'
	end
'uexpr'/3 =
    %% Line 1667
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Test = {'k_test',A,Op,As},{'break',Rs},St> when 'true' ->
	      %% Line 1668
	      case Rs of
		<[]> when 'true' ->
		    let <_cor5> =
			%% Line 1669
			apply 'op_vars'/1
			    (Op)
		    in  let <_cor6> =
			    %% Line 1941
			    fun (_cor3,_10157) ->
				let <_4006> =
				    apply 'lit_vars'/1
					(_cor3)
				in  call 'ordsets':'union'
					(_4006, _10157)
			in  let <_cor4> =
				%% Line 1941
				call 'lists':'foldl'
				    (_cor6, [], As)
			    in  let <Used> =
				    %% Line 1669
				    call 'ordsets':'union'
					(_cor5, _cor4)
				in  let <_cor6> =
					%% Line 1941
					fun (_cor3,_11172) ->
					    let <_14377> =
						apply 'lit_vars'/1
						    (_cor3)
					    in  call 'ordsets':'union'
						    (_14377, _11172)
				    in  let <_cor7> =
					    %% Line 1941
					    call 'lists':'foldl'
						(_cor6, [], Rs)
					in  let <_rec75> =
						%% Line 1670
						{'k',Used,_cor7,A}
					    in  let <_cor11> =
						    %% Line 1670
						    call 'erlang':'setelement'
							(2, _cor2, _rec75)
						in  %% Line 1670
						    {_cor11,Used,_cor0}
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',Rs})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1672
	  <{'iset',A,Vs,E0,B0},Br = {'break',_cor145},St0> when 'true' ->
	      let <_cor6> =
		  %% Line 1941
		  fun (_cor3,_2768) ->
		      let <_14290> =
			  apply 'lit_vars'/1
			      (_cor3)
		      in  call 'ordsets':'union'
			      (_14290, _2768)
	      in  let <Ns> =
		      %% Line 1941
		      call 'lists':'foldl'
			  (_cor6, [], Vs)
		  in  let <_8576> =
			  %% Line 1674
			  apply 'uexpr'/3
			      (E0, {'break',Vs}, _cor0)
		      in  %% Line 1674
			  case _8576 of
			    <{E1,Eu,St1}> when 'true' ->
				let <_3432> =
				    %% Line 1675
				    apply 'uexpr'/3
					(B0, _cor1, St1)
				in  %% Line 1675
				    case _3432 of
				      <{B1,Bu,St2}> when 'true' ->
					  let <_cor15> =
					      %% Line 1676
					      call 'ordsets':'subtract'
						  (Bu, Ns)
					  in  let <Used> =
						  %% Line 1676
						  call 'ordsets':'union'
						      (Eu, _cor15)
					      in  %% Line 1677
						  {{'k_seq',{'k',Used,Ns,A},E1,B1},Used,St2}
				      ( <_cor14> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_3432})
					-| ['compiler_generated'] )
				    end
			    ( <_cor13> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_8576})
			      -| ['compiler_generated'] )
			  end
	  %% Line 1678
	  <Call = {'k_call',A,Op = {'k_local',_cor146,F,Ar},As0,_cor147},Br,St> when 'true' ->
	      let <Free> =
		  %% Line 1679
		  apply 'get_free'/3
		      (F, Ar, _cor0)
	      in  let <As1> =
		      %% Line 1680
		      call 'erlang':'++'
			  (As0, Free)
		  in  let <_cor6> =
			  %% Line 1941
			  fun (_cor3,_13651) ->
			      let <_12041> =
				  apply 'lit_vars'/1
				      (_cor3)
			      in  call 'ordsets':'union'
				      (_12041, _13651)
		      in  let <Used> =
			      %% Line 1941
			      call 'lists':'foldl'
				  (_cor6, [], As1)
			  in  let <_cor36> =
				  %% Line 1682
				  case _cor1 of
				    %% Line 1683
				    <{'break',Rs}> when 'true' ->
					let <_cor6> =
					    %% Line 1941
					    fun (_cor3,_3568) ->
						let <_4414> =
						    apply 'lit_vars'/1
							(_cor3)
						in  call 'ordsets':'union'
							(_4414, _3568)
					in  let <_cor20> =
						%% Line 1941
						call 'lists':'foldl'
						    (_cor6, [], Rs)
					    in  let <_rec77> =
						    %% Line 1684
						    {'k',Used,_cor20,A}
						in  let <_cor22> =
							%% Line 1685
							call 'erlang':'length'
							    (Free)
						    in  let <_rec84> =
							    %% Line 1685
							    call 'erlang':'+'
								(Ar, _cor22)
							in  let <_cor26> =
								%% Line 1685
								call 'erlang':'setelement'
								    (4, Op, _rec84)
							    in  %% Line 1686
								{'k_call',_rec77,_cor26,As1,Rs}
				    %% Line 1687
				    <'return'> when 'true' ->
					let <_cor30> =
					    %% Line 1689
					    call 'erlang':'length'
						(Free)
					in  let <_rec86> =
						%% Line 1689
						call 'erlang':'+'
						    (Ar, _cor30)
					    in  let <_cor34> =
						    %% Line 1689
						    call 'erlang':'setelement'
							(4, Op, _rec86)
						in  %% Line 1688
						    {'k_enter',{'k',Used,[],A},_cor34,As1}
				    ( <_cor35> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor1})
				      -| ['compiler_generated'] )
				  end
			      in  %% Line 1682
				  {_cor36,Used,_cor0}
	  %% Line 1692
	  <Call = {'k_call',A,Op,As,_cor157},{'break',Rs},St> when 'true' ->
	      let <_cor38> =
		  %% Line 1693
		  apply 'op_vars'/1
		      (Op)
	      in  let <_cor6> =
		      %% Line 1941
		      fun (_cor3,_6508) ->
			  let <_12951> =
			      apply 'lit_vars'/1
				  (_cor3)
			  in  call 'ordsets':'union'
				  (_12951, _6508)
		  in  let <_cor37> =
			  %% Line 1941
			  call 'lists':'foldl'
			      (_cor6, [], As)
		      in  let <Used> =
			      %% Line 1693
			      call 'ordsets':'union'
				  (_cor38, _cor37)
			  in  let <_cor6> =
				  %% Line 1941
				  fun (_cor3,_13602) ->
				      let <_5747> =
					  apply 'lit_vars'/1
					      (_cor3)
				      in  call 'ordsets':'union'
					      (_5747, _13602)
			      in  let <_cor40> =
				      %% Line 1941
				      call 'lists':'foldl'
					  (_cor6, [], Rs)
				  in  let <_rec88> =
					  %% Line 1694
					  {'k',Used,_cor40,A}
				      in  let <_cor43> =
					      %% Line 1694
					      call 'erlang':'setelement'
						  (5, _cor2, Rs)
					  in  let <_cor45> =
						  %% Line 1694
						  call 'erlang':'setelement'
						      (2, _cor43, _rec88)
					      in  %% Line 1694
						  {_cor45,Used,_cor0}
	  %% Line 1696
	  <{'k_call',A,Op,As,_cor163},'return',St> when 'true' ->
	      let <_cor47> =
		  %% Line 1697
		  apply 'op_vars'/1
		      (Op)
	      in  let <_cor6> =
		      %% Line 1941
		      fun (_cor3,_2224) ->
			  let <_12170> =
			      apply 'lit_vars'/1
				  (_cor3)
			  in  call 'ordsets':'union'
				  (_12170, _2224)
		  in  let <_cor46> =
			  %% Line 1941
			  call 'lists':'foldl'
			      (_cor6, [], As)
		      in  let <Used> =
			      %% Line 1697
			      call 'ordsets':'union'
				  (_cor47, _cor46)
			  in  %% Line 1698
			      {{'k_enter',{'k',Used,[],A},Op,As},Used,_cor0}
	  %% Line 1700
	  <Bif = {'k_bif',A,Op,As,_cor164},{'break',Rs},St0> when 'true' ->
	      let <_cor50> =
		  %% Line 1701
		  apply 'op_vars'/1
		      (Op)
	      in  let <_cor6> =
		      %% Line 1941
		      fun (_cor3,_2152) ->
			  let <_14480> =
			      apply 'lit_vars'/1
				  (_cor3)
			  in  call 'ordsets':'union'
				  (_14480, _2152)
		  in  let <_cor49> =
			  %% Line 1941
			  call 'lists':'foldl'
			      (_cor6, [], As)
		      in  let <Used> =
			      %% Line 1701
			      call 'ordsets':'union'
				  (_cor50, _cor49)
			  in  let <_1365> =
				  %% Line 1702
				  apply 'bif_returns'/3
				      (Op, Rs, _cor0)
			      in  %% Line 1702
				  case _1365 of
				    <{Brs,St1}> when 'true' ->
					let <_cor6> =
					    %% Line 1941
					    fun (_cor3,_648) ->
						let <_5217> =
						    apply 'lit_vars'/1
							(_cor3)
						in  call 'ordsets':'union'
							(_5217, _648)
					in  let <_cor53> =
						%% Line 1941
						call 'lists':'foldl'
						    (_cor6, [], Brs)
					    in  let <_rec90> =
						    %% Line 1703
						    {'k',Used,_cor53,A}
						in  let <_cor56> =
							%% Line 1703
							call 'erlang':'setelement'
							    (5, _cor2, Brs)
						    in  let <_cor58> =
							    %% Line 1703
							    call 'erlang':'setelement'
								(2, _cor56, _rec90)
							in  %% Line 1703
							    {_cor58,Used,St1}
				    ( <_cor52> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_1365})
				      -| ['compiler_generated'] )
				  end
	  %% Line 1705
	  <{'k_match',A,Vs0,B0,_cor170},Br,St0> when 'true' ->
	      let <Vs> =
		  %% Line 1706
		  apply 'handle_reuse_annos'/2
		      (Vs0, _cor0)
	      in  let <Rs> =
		      %% Line 1845
		      case _cor1 of
			<{'break',Rs}> when 'true' ->
			    Rs
			%% Line 1846
			<'return'> when 'true' ->
			    []
			( <_3963> when 'true' ->
			      primop 'match_fail'
				  ({'function_clause',_cor1})
			  -| ['compiler_generated'] )
		      end
		  in  let <_12577> =
			  %% Line 1708
			  apply 'umatch'/3
			      (B0, _cor1, _cor0)
		      in  %% Line 1708
			  case _12577 of
			    <{B1,Bu,St1}> when 'true' ->
				let <_7600> =
				    %% Line 1709
				    apply 'is_in_guard'/1
					(St1)
				in  %% Line 1709
				    case _7600 of
				      %% Line 1710
				      <'true'> when 'true' ->
					  let <_cor6> =
					      %% Line 1941
					      fun (_cor3,_13377) ->
						  let <_14220> =
						      apply 'lit_vars'/1
							  (_cor3)
						  in  call 'ordsets':'union'
							  (_14220, _13377)
					  in  let <_cor62> =
						  %% Line 1941
						  call 'lists':'foldl'
						      (_cor6, [], Rs)
					      in  %% Line 1711
						  {{'k_guard_match',{'k',Bu,_cor62,A},Vs,B1,Rs},Bu,St1}
				      %% Line 1713
				      <'false'> when 'true' ->
					  let <_cor6> =
					      %% Line 1941
					      fun (_cor3,_9233) ->
						  let <_2669> =
						      apply 'lit_vars'/1
							  (_cor3)
						  in  call 'ordsets':'union'
							  (_2669, _9233)
					  in  let <_cor63> =
						  %% Line 1941
						  call 'lists':'foldl'
						      (_cor6, [], Rs)
					      in  %% Line 1714
						  {{'k_match',{'k',Bu,_cor63,A},Vs,B1,Rs},Bu,St1}
				      ( <_cor64> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_7600})
					-| ['compiler_generated'] )
				    end
			    ( <_cor61> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_12577})
			      -| ['compiler_generated'] )
			  end
	  %% Line 1717
	  <{'k_receive',A,V,B0,T,A0,_cor171},Br,St0> when 'true' ->
	      let <Rs> =
		  %% Line 1845
		  case _cor1 of
		    <{'break',Rs}> when 'true' ->
			Rs
		    %% Line 1846
		    <'return'> when 'true' ->
			[]
		    ( <_14679> when 'true' ->
			  primop 'match_fail'
			      ({'function_clause',_cor1})
		      -| ['compiler_generated'] )
		  end
	      in  let <Tu> =
		      %% Line 1719
		      apply 'lit_vars'/1
			  (T)
		  in  let <_11937> =
			  %% Line 1720
			  apply 'umatch'/3
			      (B0, _cor1, _cor0)
		      in  %% Line 1720
			  case _11937 of
			    <{B1,Bu,St1}> when 'true' ->
				let <_5882> =
				    %% Line 1721
				    apply 'ubody'/3
					(A0, _cor1, St1)
				in  %% Line 1721
				    case _5882 of
				      <{A1,Au,St2}> when 'true' ->
					  %% Line 1722
					  ( case V of
					      ( <( {'k_var',_cor172,_rec92}
						   -| ['compiler_generated'] )> when 'true' ->
						    let <_cor69> =
							call 'ordsets':'union'
							    (Tu, Au)
						    in  let <_cor70> =
							    call 'ordsets':'union'
								(Bu, _cor69)
							in  let <Used> =
								call 'ordsets':'del_element'
								    (_rec92, _cor70)
							    in  let <_cor6> =
								    %% Line 1941
								    fun (_cor3,_2548) ->
									let <_10460> =
									    apply 'lit_vars'/1
										(_cor3)
									in  call 'ordsets':'union'
										(_10460, _2548)
								in  let <_cor74> =
									%% Line 1941
									call 'lists':'foldl'
									    (_cor6, [], Rs)
								    in  %% Line 1723
									{{'k_receive',{'k',Used,_cor74,A},V,B1,T,A1,Rs},Used,St2}
						-| ['compiler_generated'] )
					      ( <_cor173> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','k_var'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				      ( <_cor68> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_5882})
					-| ['compiler_generated'] )
				    end
			    ( <_cor67> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_11937})
			      -| ['compiler_generated'] )
			  end
	  %% Line 1726
	  <{'k_receive_accept',A},_cor174,St> when 'true' ->
	      %% Line 1727
	      {{'k_receive_accept',{'k',[],[],A}},[],_cor0}
	  %% Line 1728
	  <{'k_receive_next',A},_cor175,St> when 'true' ->
	      %% Line 1729
	      {{'k_receive_next',{'k',[],[],A}},[],_cor0}
	  %% Line 1730
	  <Try = {'k_try',A,A0,Vs,B0,Evs,H0,_cor176},Br = %% Line 1731
							  {'break',Rs0},St0> when 'true' ->
	      let <_7098> =
		  %% Line 1732
		  apply 'is_in_guard'/1
		      (_cor0)
	      in  %% Line 1732
		  case _7098 of
		    %% Line 1733
		    <'true'> when 'true' ->
			%% Line 1734
			case <Vs,B0> of
			  <[{'k_var',_cor177,X}|[]],{'k_var',_cor178,_cor179}>
			      when call 'erlang':'=:='
				    (_cor179,
				     X) ->
			      %% Line 1735
			      case H0 of
				<{'k_atom',_cor180,'false'}> when 'true' ->
				    let <_9015> =
					%% Line 1736
					apply 'uexpr'/3
					    (A0, _cor1, _cor0)
				    in  %% Line 1736
					case _9015 of
					  <{A1,Bu,St1}> when 'true' ->
					      let <_cor6> =
						  %% Line 1941
						  fun (_cor3,_10413) ->
						      let <_15379> =
							  apply 'lit_vars'/1
							      (_cor3)
						      in  call 'ordsets':'union'
							      (_15379, _10413)
					      in  let <_cor78> =
						      %% Line 1941
						      call 'lists':'foldl'
							  (_cor6, [], Rs0)
						  in  let <_rec93> =
							  %% Line 1737
							  {'k',Bu,_cor78,A}
						      in  let <_cor81> =
							      %% Line 1738
							      call 'erlang':'setelement'
								  (8, _cor2, Rs0)
							  in  let <_cor82> =
								  %% Line 1738
								  call 'erlang':'setelement'
								      (3, _cor81, A1)
							      in  let <_cor84> =
								      %% Line 1737
								      call 'erlang':'setelement'
									  (2, _cor82, _rec93)
								  in  %% Line 1737
								      {_cor84,Bu,St1}
					  ( <_cor77> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_9015})
					    -| ['compiler_generated'] )
					end
				( <_cor76> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',H0})
				  -| ['compiler_generated'] )
			      end
			  ( <_fol955,_fol956> when 'true' ->
				let <_cor75> = {Vs,B0}
				in  primop 'match_fail'
					({'badmatch',_cor75})
			    -| ['compiler_generated'] )
			end
		    %% Line 1739
		    <'false'> when 'true' ->
			let <_cor85> =
			    %% Line 1740
			    call 'erlang':'length'
				(Vs)
			in  let <_5701> =
				apply 'new_vars'/3
				    (_cor85, _cor0, [])
			    in  %% Line 1740
				case _5701 of
				  <{Avs,St1}> when 'true' ->
				      let <_718> =
					  %% Line 1741
					  apply 'ubody'/3
					      (A0, {'break',Avs}, St1)
				      in  %% Line 1741
					  case _718 of
					    <{A1,Au,St2}> when 'true' ->
						let <_1519> =
						    %% Line 1742
						    apply 'ubody'/3
							(B0, _cor1, St2)
						in  %% Line 1742
						    case _1519 of
						      <{B1,Bu,St3}> when 'true' ->
							  let <_10564> =
							      %% Line 1743
							      apply 'ubody'/3
								  (H0, _cor1, St3)
							  in  %% Line 1743
							      case _10564 of
								<{H1,Hu,St4}> when 'true' ->
								    let <_14789> =
									%% Line 1744
									apply 'ensure_return_vars'/2
									    (Rs0, St4)
								    in  %% Line 1744
									case _14789 of
									  <{Rs1,St5}> when 'true' ->
									      let <_cor6> =
										  %% Line 1941
										  fun (_cor3,_8573) ->
										      let <_6461> =
											  apply 'lit_vars'/1
											      (_cor3)
										      in  call 'ordsets':'union'
											      (_6461, _8573)
									      in  let <_cor91> =
										      %% Line 1941
										      call 'lists':'foldl'
											  (_cor6, [], Vs)
										  in  let <_cor92> =
											  %% Line 1745
											  call 'ordsets':'subtract'
											      (Bu, _cor91)
										      in  let <_cor6> =
											      %% Line 1941
											      fun (_cor3,_16352) ->
												  let <_10140> =
												      apply 'lit_vars'/1
													  (_cor3)
												  in  call 'ordsets':'union'
													  (_10140, _16352)
											  in  let <_cor93> =
												  %% Line 1941
												  call 'lists':'foldl'
												      (_cor6, [], Evs)
											      in  let <_cor94> =
												      %% Line 1746
												      call 'ordsets':'subtract'
													  (Hu, _cor93)
												  in  let <Used> =
													  %% Line 1745
													  call 'ordsets':'union'
													      ([Au|[_cor92|%% Line 1746
															   [_cor94|[]]]])
												      in  let <_cor6> =
													      %% Line 1941
													      fun (_cor3,_9663) ->
														  let <_15739> =
														      apply 'lit_vars'/1
															  (_cor3)
														  in  call 'ordsets':'union'
															  (_15739, _9663)
													  in  let <_cor96> =
														  %% Line 1941
														  call 'lists':'foldl'
														      (_cor6, [], Rs1)
													      in  %% Line 1747
														  {{'k_try',{'k',Used,_cor96,A},A1,Vs,B1,Evs,H1,Rs1},Used,St5}
									  ( <_cor90> when 'true' ->
										primop 'match_fail'
										    ({'badmatch',_14789})
									    -| ['compiler_generated'] )
									end
								( <_cor89> when 'true' ->
								      primop 'match_fail'
									  ({'badmatch',_10564})
								  -| ['compiler_generated'] )
							      end
						      ( <_cor88> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_1519})
							-| ['compiler_generated'] )
						    end
					    ( <_cor87> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_718})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor86> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_5701})
				    -| ['compiler_generated'] )
				end
		    ( <_cor97> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_7098})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1751
	  <{'k_try',A,A0,Vs,B0,Evs,H0,_cor189},%% Line 1752
					       'return',St0> when 'true' ->
	      let <_cor98> =
		  %% Line 1753
		  call 'erlang':'length'
		      (Vs)
	      in  let <_10882> =
		      apply 'new_vars'/3
			  (_cor98, _cor0, [])
		  in  %% Line 1753
		      case _10882 of
			<{Avs,St1}> when 'true' ->
			    let <_1920> =
				%% Line 1754
				apply 'ubody'/3
				    (A0, {'break',Avs}, St1)
			    in  %% Line 1754
				case _1920 of
				  <{A1,Au,St2}> when 'true' ->
				      let <_2570> =
					  %% Line 1755
					  apply 'ubody'/3
					      (B0, 'return', St2)
				      in  %% Line 1755
					  case _2570 of
					    <{B1,Bu,St3}> when 'true' ->
						let <_11570> =
						    %% Line 1756
						    apply 'ubody'/3
							(H0, 'return', St3)
						in  %% Line 1756
						    case _11570 of
						      <{H1,Hu,St4}> when 'true' ->
							  let <_14958> =
							      apply 'new_vars'/3
								  (%% Line 1757
								   1, St4, [])
							  in  %% Line 1758
							      case _14958 of
								<{Ns,St5}> when 'true' ->
								    let <_cor6> =
									%% Line 1941
									fun (_cor3,_13443) ->
									    let <_8494> =
										apply 'lit_vars'/1
										    (_cor3)
									    in  call 'ordsets':'union'
										    (_8494, _13443)
								    in  let <_cor105> =
									    %% Line 1941
									    call 'lists':'foldl'
										(_cor6, [], Vs)
									in  let <_cor106> =
										%% Line 1759
										call 'ordsets':'subtract'
										    (Bu, _cor105)
									    in  let <_cor6> =
										    %% Line 1941
										    fun (_cor3,_10365) ->
											let <_10078> =
											    apply 'lit_vars'/1
												(_cor3)
											in  call 'ordsets':'union'
												(_10078, _10365)
										in  let <_cor107> =
											%% Line 1941
											call 'lists':'foldl'
											    (_cor6, [], Evs)
										    in  let <_cor108> =
											    %% Line 1760
											    call 'ordsets':'subtract'
												(Hu, _cor107)
											in  let <Used> =
												%% Line 1759
												call 'ordsets':'union'
												    ([Au|[_cor106|%% Line 1760
														  [_cor108|[]]]])
											    in  %% Line 1761
												{{'k_try_enter',{'k',Used,Ns,A},A1,Vs,B1,Evs,H1},Used,St5}
								( <_cor104> when 'true' ->
								      primop 'match_fail'
									  ({'badmatch',_14958})
								  -| ['compiler_generated'] )
							      end
						      ( <_cor102> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_11570})
							-| ['compiler_generated'] )
						    end
					    ( <_cor101> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_2570})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor100> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_1920})
				    -| ['compiler_generated'] )
				end
			( <_cor99> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_10882})
			  -| ['compiler_generated'] )
		      end
	  %% Line 1764
	  <{'k_catch',A,B0,_cor190},{'break',Rs0},St0> when 'true' ->
	      let <_284> =
		  apply 'new_var_name'/1
		      (_cor0)
	      in  case _284 of
		    <{New,St1}> when 'true' ->
			let <Rb,St1> = <{'k_var',[],New},St1>
			in  let <_11014> =
				%% Line 1766
				apply 'ubody'/3
				    (B0, {'break',[Rb|[]]}, St1)
			    in  %% Line 1766
				case _11014 of
				  <{B1,Bu,St2}> when 'true' ->
				      let <_cor112> =
					  %% Line 1768
					  call 'erlang':'length'
					      (Rs0)
				      in  let <_cor113> =
					      %% Line 1768
					      call 'erlang':'-'
						  (1, _cor112)
					  in  let <_3925> =
						  apply 'new_vars'/3
						      (_cor113, St2, [])
					      in  %% Line 1768
						  case _3925 of
						    <{Ns,St3}> when 'true' ->
							let <Rs1> =
							    %% Line 1769
							    call 'erlang':'++'
								(Rs0, Ns)
							in  let <_cor6> =
								%% Line 1941
								fun (_cor3,_5952) ->
								    let <_6188> =
									apply 'lit_vars'/1
									    (_cor3)
								    in  call 'ordsets':'union'
									    (_6188, _5952)
							    in  let <_cor116> =
								    %% Line 1941
								    call 'lists':'foldl'
									(_cor6, [], Rs1)
								in  %% Line 1770
								    {{'k_catch',{'k',Bu,_cor116,A},B1,Rs1},Bu,St3}
						    ( <_cor114> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_3925})
						      -| ['compiler_generated'] )
						  end
				  ( <_cor111> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_11014})
				    -| ['compiler_generated'] )
				end
		    ( <_3996> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_284})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1771
	  <{'ifun',A,Vs,B0},{'break',Rs},St0> when 'true' ->
	      let <_13946> =
		  %% Line 1772
		  apply 'ubody'/3
		      (B0, 'return', _cor0)
	      in  %% Line 1772
		  case _13946 of
		    <{B1,Bu,St1}> when 'true' ->
			let <_cor6> =
			    %% Line 1941
			    fun (_cor3,_7326) ->
				let <_15027> =
				    apply 'lit_vars'/1
					(_cor3)
				in  call 'ordsets':'union'
					(_15027, _7326)
			in  let <Ns> =
				%% Line 1941
				call 'lists':'foldl'
				    (_cor6, [], Vs)
			    in  let <Free> =
				    %% Line 1774
				    call 'ordsets':'subtract'
					(Bu, Ns)
				in  let <Fvs> =
					( letrec
					      'lc$^0'/1 =
						  fun (_cor3) ->
						      case _cor3 of
							<[V|_9132]> when 'true' ->
							    let <_cor4> =
								apply 'lc$^0'/1
								    (_9132)
							    in  ( [{'k_var',[],V}|_cor4]
								  -| ['compiler_generated'] )
							<[]> when 'true' ->
							    []
							( <_10499> when 'true' ->
							      primop 'match_fail'
								  ({'function_clause',_cor3})
							  -| ['compiler_generated'] )
						      end
					  in  case Free of
						<[V|_9132]> when 'true' ->
						    let <_cor4> =
							apply 'lc$^0'/1
							    (_9132)
						    in  ( [{'k_var',[],V}|_cor4]
							  -| ['compiler_generated'] )
						<[]> when 'true' ->
						    []
						( <_10499> when 'true' ->
						      primop 'match_fail'
							  ({'function_clause',Free})
						  -| ['compiler_generated'] )
					      end
					  -| ['list_comprehension'] )
				    in  let <_cor122> =
					    %% Line 1776
					    call 'erlang':'length'
						(Vs)
					in  let <_cor121> =
						%% Line 1776
						call 'erlang':'length'
						    (Free)
					    in  let <Arity> =
						    %% Line 1776
						    call 'erlang':'+'
							(_cor122, _cor121)
						in  let <_9051> =
							%% Line 1778
							call 'lists':'keyfind'
							    ('id', 1, A)
						    in  let <_cor125> =
							    %% Line 1778
							    case _9051 of
							      %% Line 1779
							      <{'id',{_cor191,_cor192,Fname0}}> when 'true' ->
								  %% Line 1780
								  {Fname0,St1}
							      %% Line 1781
							      <'false'> when 'true' ->
								  apply 'new_fun_name'/2
								      ([97|[110|[111|[110|[121|[109|[111|[117|[115]]]]]]]]], St1)
							      ( <_cor124> when 'true' ->
								    primop 'match_fail'
									({'case_clause',_9051})
								-| ['compiler_generated'] )
							    end
							in  %% Line 1777
							    case _cor125 of
							      <{Fname,St}> when 'true' ->
								  let <_cor127> =
								      %% Line 1786
								      call 'erlang':'++'
									  (Vs, Fvs)
								  in  let <Fun> =
									  %% Line 1785
									  {'k_fdef',{'k',[],[],A},Fname,Arity,_cor127,B1}
								      in  let <_cor6> =
									      %% Line 1941
									      fun (_cor3,_664) ->
										  let <_7233> =
										      apply 'lit_vars'/1
											  (_cor3)
										  in  call 'ordsets':'union'
											  (_7233, _664)
									  in  let <_cor133> =
										  %% Line 1941
										  call 'lists':'foldl'
										      (_cor6, [], Rs)
									      in  let <_cor131> =
										      %% Line 1791
										      call 'erlang':'length'
											  (Free)
										  in  let <_cor132> =
											  %% Line 1791
											  call 'erlang':'+'
											      (_cor131, 3)
										      in  let <_cor130> =
											      %% Line 1795
											      apply 'add_local_function'/2
												  (Fun, St)
											  in  %% Line 1790
											      {{'k_bif',{'k',Free,_cor133,A},%% Line 1791
															     {'k_internal',[],'make_fun',_cor132},%% Line 1792
																				  [{'k_atom',[],Fname}|[{'k_int',[],Arity}|%% Line 1793
																									   [{'k_int',[],0}|[{'k_int',[],0}|Fvs]]]],Rs},Free,_cor130}
							      ( <_cor126> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_cor125})
								-| ['compiler_generated'] )
							    end
		    ( <_cor117> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_13946})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1796
	  <Lit,{'break',Rs0},St0> when 'true' ->
	      let <Used> =
		  %% Line 1799
		  apply 'lit_vars'/1
		      (_cor2)
	      in  let <_4453> =
		      %% Line 1800
		      apply 'ensure_return_vars'/2
			  (Rs0, _cor0)
		  in  %% Line 1800
		      case _4453 of
			<{Rs,St1}> when 'true' ->
			    let <_cor6> =
				%% Line 1941
				fun (_cor3,_10407) ->
				    let <_9481> =
					apply 'lit_vars'/1
					    (_cor3)
				    in  call 'ordsets':'union'
					    (_9481, _10407)
			    in  let <_cor137> =
				    %% Line 1941
				    call 'lists':'foldl'
					(_cor6, [], Rs)
				in  let <_cor136> =
					call 'erlang':'element'
					    (2, _cor2)
				    in  %% Line 1801
					{{'k_put',{'k',Used,_cor137,_cor136},_cor2,Rs},Used,St1}
			( <_cor135> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_4453})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor140,_cor139,_cor138> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'uexpr',3}}] )
	    -| ['compiler_generated'] )
	end
'add_local_function'/2 =
    %% Line 1804
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor7,St = {'kern',_cor8,_cor9,_cor10,_cor11,_cor12,'ignore',_cor13,_cor14,_cor15}> when 'true' ->
	      _cor0
	  %% Line 1805
	  <F,St = {'kern',_cor16,_cor17,_cor18,_cor19,_cor20,Funs,_cor21,_cor22,_cor23}> when 'true' ->
	      let <_rec95> =
		  [_cor1|Funs]
	      in  call 'erlang':'setelement'
		      (7, _cor0, _rec95)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'add_local_function',2}}] )
	    -| ['compiler_generated'] )
	end
'handle_reuse_annos'/2 =
    %% Line 1816
    fun (_cor1,_cor0) ->
	%% Line 1817
	( letrec
	      'lc$^0'/1 =
		  fun (_cor4) ->
		      case _cor4 of
			<[V|_cor3]> when 'true' ->
			    let <_cor5> =
				apply 'handle_reuse_anno'/2
				    (V, _cor0)
			    in  let <_cor6> =
				    apply 'lc$^0'/1
					(_cor3)
				in  ( [_cor5|_cor6]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_2604> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor4})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  apply 'lc$^0'/1
		  (_cor1)
	  -| ['list_comprehension'] )
'handle_reuse_anno'/2 =
    %% Line 1819
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <V = {'k_var',A,_cor5},St> when 'true' ->
	      let <_1549> =
		  %% Line 1820
		  call 'lists':'member'
		      ('reuse_for_context', A)
	      in  %% Line 1820
		  case _1549 of
		    %% Line 1821
		    <'false'> when 'true' ->
			_cor1
		    %% Line 1822
		    <'true'> when 'true' ->
			apply 'handle_reuse_anno_1'/2
			    (_cor1, _cor0)
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_1549})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'handle_reuse_anno',2}}] )
	    -| ['compiler_generated'] )
	end
'handle_reuse_anno_1'/2 =
    %% Line 1825
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <V = {'k_var',Anno,Vname},St = {'kern',_cor9,{F,A},_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16}> when 'true' ->
	      let <FreeVs> =
		  %% Line 1826
		  apply 'get_free'/3
		      (F, A, _cor0)
	      in  let <_8639> =
		      %% Line 1827
		      call 'lists':'keymember'
			  (Vname, 3, FreeVs)
		  in  %% Line 1827
		      case _8639 of
			%% Line 1828
			<'true'> when 'true' ->
			    let <_rec97> =
				call 'erlang':'--'
				    (Anno, ['reuse_for_context'])
			    in  call 'erlang':'setelement'
				    (2, _cor1, _rec97)
			%% Line 1829
			<'false'> when 'true' ->
			    _cor1
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_8639})
			  -| ['compiler_generated'] )
		      end
	  %% Line 1831
	  <V,_X_St> when 'true' ->
	      _cor1
	end
'get_free'/3 =
    %% Line 1836
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1837
	( case _cor0 of
	    ( <( {'kern',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_rec99,_cor15,_cor16}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_12372> =
		      call 'orddict':'find'
			  ({_cor2,_cor1}, _rec99)
		  in  case _12372 of
			%% Line 1838
			<{'ok',Val}> when 'true' ->
			    Val
			%% Line 1839
			<'error'> when 'true' ->
			    []
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_12372})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor17> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','kern'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'store_free'/4 =
    %% Line 1842
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1843
	( case _cor0 of
	    ( <( {'kern',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_rec102,_cor19,_cor20}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_rec100> =
		      call 'orddict':'store'
			  ({_cor3,_cor2}, _cor1, _rec102)
		  in  call 'erlang':'setelement'
			  (8, _cor0, _rec100)
	      -| ['compiler_generated'] )
	    ( <_cor21> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','kern'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'bif_returns'/3 =
    %% Line 1850
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'k_remote',_cor16,M,N,Ar},Rs,St0> when 'true' ->
	      let <_cor3> =
		  %% Line 1852
		  call 'erlang':'length'
		      (_cor1)
	      in  let <_cor5> =
		      %% Line 1852
		      call 'erlang':'-'
			  (1, _cor3)
		  in  let <_9313> =
			  apply 'new_vars'/3
			      (_cor5, _cor0, [])
		      in  %% Line 1852
			  case _9313 of
			    <{Ns,St1}> when 'true' ->
				let <_cor7> =
				    %% Line 1853
				    call 'erlang':'++'
					(_cor1, Ns)
				in  %% Line 1853
				    {_cor7,St1}
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_9313})
			      -| ['compiler_generated'] )
			  end
	  %% Line 1854
	  <{'k_internal',_cor17,N,Ar},Rs,St0> when 'true' ->
	      let <_cor9> =
		  case <N,Ar> of
		    <'dsetelement',3> when 'true' ->
			0
		    <'bs_context_to_binary',1> when 'true' ->
			0
		    <_cor4,_cor5> when 'true' ->
			1
		  end
	      in  let <_cor8> =
		      %% Line 1856
		      call 'erlang':'length'
			  (_cor1)
		  in  let <_cor10> =
			  %% Line 1856
			  call 'erlang':'-'
			      (_cor9, _cor8)
		      in  let <_5686> =
			      apply 'new_vars'/3
				  (_cor10, _cor0, [])
			  in  %% Line 1856
			      case _5686 of
				<{Ns,St1}> when 'true' ->
				    let <_cor12> =
					%% Line 1857
					call 'erlang':'++'
					    (_cor1, Ns)
				    in  %% Line 1857
					{_cor12,St1}
				( <_cor11> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_5686})
				  -| ['compiler_generated'] )
			      end
	  ( <_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'bif_returns',3}}] )
	    -| ['compiler_generated'] )
	end
'ensure_return_vars'/2 =
    %% Line 1861
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],St> when 'true' ->
	      apply 'new_vars'/3
		  (1, _cor0, [])
	  %% Line 1862
	  <Rs = [_cor4|[]],St> when 'true' ->
	      {_cor1,_cor0}
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'ensure_return_vars',2}}] )
	    -| ['compiler_generated'] )
	end
'umatch'/3 =
    %% Line 1867
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'k_alt',A,F0,T0},Br,St0> when 'true' ->
	      let <_4736> =
		  %% Line 1868
		  apply 'umatch'/3
		      (F0, _cor1, _cor0)
	      in  %% Line 1868
		  case _4736 of
		    <{F1,Fu,St1}> when 'true' ->
			let <_13599> =
			    %% Line 1869
			    apply 'umatch'/3
				(T0, _cor1, St1)
			in  %% Line 1869
			    case _13599 of
			      <{T1,Tu,St2}> when 'true' ->
				  let <Used> =
				      %% Line 1870
				      call 'ordsets':'union'
					  (Fu, Tu)
				  in  %% Line 1871
				      {{'k_alt',{'k',Used,[],A},F1,T1},Used,St2}
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_13599})
				-| ['compiler_generated'] )
			    end
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_4736})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1873
	  <{'k_select',A,V0,Ts0},Br,St0> when 'true' ->
	      let <V> =
		  %% Line 1874
		  apply 'handle_reuse_anno'/2
		      (V0, _cor0)
	      in  let <_10503> =
		      %% Line 1875
		      apply 'umatch_list'/3
			  (Ts0, _cor1, _cor0)
		  in  %% Line 1875
		      case _10503 of
			<{Ts1,Tus,St1}> when 'true' ->
			    let <_cor8> =
				call 'erlang':'element'
				    (2, V)
			    in  let <_11203> =
				    %% Line 1876
				    call 'lists':'member'
					('no_usage', _cor8)
				in  let <_cor12> =
					%% Line 1876
					case _11203 of
					  %% Line 1877
					  <'true'> when 'true' ->
					      Tus
					  %% Line 1878
					  <'false'> when 'true' ->
					      ( case V of
						  ( <( {'k_var',_cor40,_rec103}
						       -| ['compiler_generated'] )> when 'true' ->
							call 'ordsets':'add_element'
							    (_rec103, Tus)
						    -| ['compiler_generated'] )
						  ( <_cor41> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','k_var'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
					  ( <_cor11> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_11203})
					    -| ['compiler_generated'] )
					end
				    in  %% Line 1880
					{{'k_select',{'k',_cor12,[],A},V,Ts1},_cor12,St1}
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_10503})
			  -| ['compiler_generated'] )
		      end
	  %% Line 1881
	  <{'k_type_clause',A,T,Vs0},Br,St0> when 'true' ->
	      let <_12075> =
		  %% Line 1882
		  apply 'umatch_list'/3
		      (Vs0, _cor1, _cor0)
	      in  %% Line 1882
		  case _12075 of
		    <{Vs1,Vus,St1}> when 'true' ->
			%% Line 1883
			{{'k_type_clause',{'k',Vus,[],A},T,Vs1},Vus,St1}
		    ( <_cor14> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12075})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1884
	  <{'k_val_clause',A,P0,B0},Br,St0> when 'true' ->
	      let <_4013> =
		  %% Line 1885
		  apply 'pat_vars'/1
		      (P0)
	      in  %% Line 1885
		  case _4013 of
		    <{U0,Ps}> when 'true' ->
			let <_cor16> =
			    call 'erlang':'element'
				(2, P0)
			in  let <_9851> =
				%% Line 1886
				{'k',U0,Ps,_cor16}
			    in  let <P> =
				    call 'erlang':'setelement'
					(2, P0, _9851)
				in  let <_618> =
					%% Line 1887
					apply 'umatch'/3
					    (B0, _cor1, _cor0)
				    in  %% Line 1887
					case _618 of
					  <{B1,Bu,St1}> when 'true' ->
					      let <_cor19> =
						  %% Line 1888
						  call 'ordsets':'subtract'
						      (Bu, Ps)
					      in  let <Used> =
						      %% Line 1888
						      call 'ordsets':'union'
							  (U0, _cor19)
						  in  %% Line 1889
						      {{'k_val_clause',{'k',Used,[],A},P,B1},Used,St1}
					  ( <_cor18> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_618})
					    -| ['compiler_generated'] )
					end
		    ( <_cor15> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_4013})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1891
	  <{'k_guard',A,Gs0},Br,St0> when 'true' ->
	      let <_10176> =
		  %% Line 1892
		  apply 'umatch_list'/3
		      (Gs0, _cor1, _cor0)
	      in  %% Line 1892
		  case _10176 of
		    <{Gs1,Gus,St1}> when 'true' ->
			%% Line 1893
			{{'k_guard',{'k',Gus,[],A},Gs1},Gus,St1}
		    ( <_cor21> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_10176})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1894
	  <{'k_guard_clause',A,G0,B0},Br,St0> when 'true' ->
	      %% Line 1897
	      ( case _cor0 of
		  ( <( {'kern',_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_rec106}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_rec104> =
			    call 'erlang':'+'
				(_rec106, 1)
			in  let <_cor27> =
				call 'erlang':'setelement'
				    (10, _cor0, _rec104)
			    in  let <_13024> =
				    apply 'uexpr'/3
					(G0, {'break',[]}, _cor27)
				in  case _13024 of
				      <{G1,Gu,St1}> when 'true' ->
					  %% Line 1899
					  ( case St1 of
					      ( <( {'kern',_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_rec109}
						   -| ['compiler_generated'] )> when 'true' ->
						    let <_rec107> =
							call 'erlang':'-'
							    (_rec109, 1)
						    in  let <_cor34> =
							    call 'erlang':'setelement'
								(10, St1, _rec107)
							in  let <_16174> =
								apply 'umatch'/3
								    (B0, _cor1, _cor34)
							    in  case _16174 of
								  <{B1,Bu,St2}> when 'true' ->
								      let <Used> =
									  %% Line 1900
									  call 'ordsets':'union'
									      (Gu, Bu)
								      in  %% Line 1901
									  {{'k_guard_clause',{'k',Used,[],A},G1,B1},Used,St2}
								  ( <_cor35> when 'true' ->
									primop 'match_fail'
									    ({'badmatch',_16174})
								    -| ['compiler_generated'] )
								end
						-| ['compiler_generated'] )
					      ( <_cor69> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','kern'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				      ( <_cor28> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_13024})
					-| ['compiler_generated'] )
				    end
		    -| ['compiler_generated'] )
		  ( <_cor50> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','kern'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1902
	  <B0,Br,St0> when 'true' ->
	      apply 'ubody'/3
		  (_cor2, _cor1, _cor0)
	end
'umatch_list'/3 =
    %% Line 1904
    fun (_cor2,_cor1,_cor0) ->
	let <_cor9> =
	    %% Line 1905
	    fun (_cor6,_cor5) ->
		case <_cor6,_cor5> of
		  <M0,{Ms1,Us,Sta}> when 'true' ->
		      let <_1342> =
			  %% Line 1906
			  apply 'umatch'/3
			      (_cor6, _cor1, Sta)
		      in  %% Line 1906
			  case _1342 of
			    <{M1,Mu,Stb}> when 'true' ->
				let <_cor4> =
				    %% Line 1907
				    call 'ordsets':'union'
					(Mu, Us)
				in  %% Line 1907
				    {[M1|Ms1],_cor4,Stb}
			    ( <_cor3> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_1342})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor8,_cor7> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor6,_cor5})
			  -| [{'function_name',{'-umatch_list/3-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 1905
	    call 'lists':'foldr'
		(_cor9, %% Line 1908
			{[],[],_cor0}, _cor2)
'op_vars'/1 =
    %% Line 1912
    fun (_cor0) ->
	case _cor0 of
	  <{'k_remote',_cor7,Mod,Name,_cor8}> when 'true' ->
	      let <_cor5> =
		  %% Line 1913
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor3) ->
				case _cor3 of
				  <[{'k_var',_cor9,V}|_cor2]> when 'true' ->
				      let <_cor4> =
					  apply 'lc$^0'/1
					      (_cor2)
				      in  ( [V|_cor4]
					    -| ['compiler_generated'] )
				  ( <[_cor1|_cor2]> when 'true' ->
					apply 'lc$^0'/1
					    (_cor2)
				    -| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_2395> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor3})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    ([Mod|[Name|[]]])
		    -| ['list_comprehension'] )
	      in  %% Line 1913
		  call 'ordsets':'from_list'
		      (_cor5)
	  %% Line 1914
	  <{'k_internal',_cor10,_cor11,_cor12}> when 'true' ->
	      []
	  %% Line 1915
	  <Atomic> when 'true' ->
	      apply 'lit_vars'/1
		  (_cor0)
	end
'lit_vars'/1 =
    %% Line 1920
    fun (_cor0) ->
	case _cor0 of
	  <{'k_var',_cor10,N}> when 'true' ->
	      [N|[]]
	  %% Line 1921
	  <{'k_int',_cor11,_cor12}> when 'true' ->
	      []
	  %% Line 1922
	  <{'k_float',_cor13,_cor14}> when 'true' ->
	      []
	  %% Line 1923
	  <{'k_atom',_cor15,_cor16}> when 'true' ->
	      []
	  %% Line 1925
	  <{'k_nil',_cor17}> when 'true' ->
	      []
	  %% Line 1926
	  <{'k_cons',_cor18,H,T}> when 'true' ->
	      let <_cor2> =
		  %% Line 1927
		  apply 'lit_vars'/1
		      (H)
	      in  let <_cor1> =
		      %% Line 1927
		      apply 'lit_vars'/1
			  (T)
		  in  %% Line 1927
		      call 'ordsets':'union'
			  (_cor2, _cor1)
	  %% Line 1928
	  <{'k_map',_cor19,Var,_cor20,Es}> when 'true' ->
	      %% Line 1929
	      apply 'lit_list_vars'/1
		  ([Var|Es])
	  %% Line 1930
	  <{'k_map_pair',_cor21,K,V}> when 'true' ->
	      let <_cor4> =
		  %% Line 1931
		  apply 'lit_vars'/1
		      (K)
	      in  let <_cor3> =
		      %% Line 1931
		      apply 'lit_vars'/1
			  (V)
		  in  %% Line 1931
		      call 'ordsets':'union'
			  (_cor4, _cor3)
	  %% Line 1932
	  <{'k_binary',_cor22,V}> when 'true' ->
	      apply 'lit_vars'/1
		  (V)
	  %% Line 1933
	  <{'k_bin_end',_cor23}> when 'true' ->
	      []
	  %% Line 1934
	  <{'k_bin_seg',_cor24,Size,_cor25,_cor26,_cor27,S,N}> when 'true' ->
	      let <_cor8> =
		  %% Line 1935
		  apply 'lit_vars'/1
		      (Size)
	      in  let <_cor6> =
		      %% Line 1935
		      apply 'lit_vars'/1
			  (S)
		  in  let <_cor5> =
			  %% Line 1935
			  apply 'lit_vars'/1
			      (N)
		      in  let <_cor7> =
			      %% Line 1935
			      call 'ordsets':'union'
				  (_cor6, _cor5)
			  in  %% Line 1935
			      call 'ordsets':'union'
				  (_cor8, _cor7)
	  %% Line 1936
	  <{'k_tuple',_cor28,Es}> when 'true' ->
	      %% Line 1937
	      apply 'lit_list_vars'/1
		  (Es)
	  %% Line 1938
	  <{'k_literal',_cor29,_cor30}> when 'true' ->
	      []
	  ( <_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'lit_vars',1}}] )
	    -| ['compiler_generated'] )
	end
'lit_list_vars'/1 =
    %% Line 1940
    fun (_cor0) ->
	let <_cor6> =
	    %% Line 1941
	    fun (_cor3,_cor2) ->
		let <_cor1> =
		    apply 'lit_vars'/1
			(_cor3)
		in  call 'ordsets':'union'
			(_cor1, _cor2)
	in  %% Line 1941
	    call 'lists':'foldl'
		(_cor6, [], _cor0)
'pat_vars'/1 =
    %% Line 1947
    fun (_cor0) ->
	case _cor0 of
	  <{'k_var',_cor6,N}> when 'true' ->
	      {[],[N|[]]}
	  %% Line 1949
	  <{'k_literal',_cor7,_cor8}> when 'true' ->
	      {[],[]}
	  %% Line 1950
	  <{'k_int',_cor9,_cor10}> when 'true' ->
	      {[],[]}
	  %% Line 1951
	  <{'k_float',_cor11,_cor12}> when 'true' ->
	      {[],[]}
	  %% Line 1952
	  <{'k_atom',_cor13,_cor14}> when 'true' ->
	      {[],[]}
	  %% Line 1953
	  <{'k_nil',_cor15}> when 'true' ->
	      {[],[]}
	  %% Line 1954
	  <{'k_cons',_cor16,H,T}> when 'true' ->
	      %% Line 1955
	      apply 'pat_list_vars'/1
		  ([H|[T|[]]])
	  %% Line 1956
	  <{'k_binary',_cor17,V}> when 'true' ->
	      %% Line 1957
	      apply 'pat_vars'/1
		  (V)
	  %% Line 1958
	  <{'k_bin_seg',_cor18,Size,_cor19,_cor20,_cor21,S,_cor22}> when 'true' ->
	      let <_10523> =
		  %% Line 1959
		  apply 'pat_list_vars'/1
		      ([S|[]])
	      in  %% Line 1959
		  case _10523 of
		    <{U1,New}> when 'true' ->
			let <_8048> =
			    %% Line 1960
			    apply 'pat_vars'/1
				(Size)
			in  %% Line 1960
			    case _8048 of
			      <{[],U2}> when 'true' ->
				  let <_cor3> =
				      %% Line 1961
				      call 'ordsets':'union'
					  (U1, U2)
				  in  %% Line 1961
				      {_cor3,New}
			      ( <_cor2> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_8048})
				-| ['compiler_generated'] )
			    end
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_10523})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1962
	  <{'k_bin_int',_cor23,Size,_cor24,_cor25,_cor26,_cor27}> when 'true' ->
	      let <_12077> =
		  %% Line 1963
		  apply 'pat_vars'/1
		      (Size)
	      in  %% Line 1963
		  case _12077 of
		    <{[],U}> when 'true' ->
			%% Line 1964
			{U,[]}
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_12077})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1965
	  <{'k_bin_end',_cor28}> when 'true' ->
	      {[],[]}
	  %% Line 1966
	  <{'k_tuple',_cor29,Es}> when 'true' ->
	      %% Line 1967
	      apply 'pat_list_vars'/1
		  (Es)
	  %% Line 1968
	  <{'k_map',_cor30,_cor31,_cor32,Es}> when 'true' ->
	      %% Line 1969
	      apply 'pat_list_vars'/1
		  (Es)
	  %% Line 1970
	  <{'k_map_pair',_cor33,_cor34,V}> when 'true' ->
	      %% Line 1971
	      apply 'pat_vars'/1
		  (V)
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'pat_vars',1}}] )
	    -| ['compiler_generated'] )
	end
'pat_list_vars'/1 =
    %% Line 1973
    fun (_cor0) ->
	let <_cor8> =
	    %% Line 1974
	    fun (_cor5,_cor4) ->
		case <_cor5,_cor4> of
		  <P,{Used0,New0}> when 'true' ->
		      let <_13240> =
			  %% Line 1975
			  apply 'pat_vars'/1
			      (_cor5)
		      in  %% Line 1975
			  case _13240 of
			    <{Used,New}> when 'true' ->
				let <_cor3> =
				    %% Line 1976
				    call 'ordsets':'union'
					(Used0, Used)
				in  let <_cor2> =
					%% Line 1976
					call 'ordsets':'union'
					    (New0, New)
				    in  %% Line 1976
					{_cor3,_cor2}
			    ( <_cor1> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_13240})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor7,_cor6> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor5,_cor4})
			  -| [{'function_name',{'-pat_list_vars/1-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 1974
	    call 'lists':'foldl'
		(_cor8, %% Line 1977
			{[],[]}, _cor0)
'integers'/2 =
    %% Line 1986
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <N,M>
	      when call 'erlang':'=<'
		    (_cor1,
		     _cor0) ->
	      let <_cor2> =
		  %% Line 1987
		  call 'erlang':'+'
		      (_cor1, 1)
	      in  let <_cor3> =
		      %% Line 1987
		      apply 'integers'/2
			  (_cor2, _cor0)
		  in  %% Line 1987
		      [_cor1|_cor3]
	  %% Line 1988
	  <_cor6,_cor7> when 'true' ->
	      []
	end
'is_in_guard'/1 =
    %% Line 1992
    fun (_cor0) ->
	case _cor0 of
	  <{'kern',_cor2,_cor3,_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,Refc}> when 'true' ->
	      %% Line 1993
	      call 'erlang':'>'
		  (Refc, 0)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'is_in_guard',1}}] )
	    -| ['compiler_generated'] )
	end
'format_error'/1 =
    %% Line 2003
    fun (_cor0) ->
	case _cor0 of
	  <{'nomatch_shadow',Line}> when 'true' ->
	      let <M> =
		  %% Line 2004
		  call 'io_lib':'format'
		      ([116|[104|[105|[115|[32|[99|[108|[97|[117|[115|[101|[32|[99|[97|[110|[110|[111|[116|[32|[109|[97|[116|[99|[104|[32|[98|[101|[99|[97|[117|[115|[101|[32|[97|[32|[112|[114|[101|[118|[105|[111|[117|[115|[32|[99|[108|[97|[117|[115|[101|[32|[97|[116|[32|[108|[105|[110|[101|[32|[126|[112|[32|[97|[108|[119|[97|[121|[115|[32|[109|[97|[116|[99|[104|[101|[115]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 2005
																																																								   [Line|[]])
	      in  %% Line 2006
		  call 'lists':'flatten'
		      (M)
	  %% Line 2007
	  <'nomatch_shadow'> when 'true' ->
	      %% Line 2008
	      [116|[104|[105|[115|[32|[99|[108|[97|[117|[115|[101|[32|[99|[97|[110|[110|[111|[116|[32|[109|[97|[116|[99|[104|[32|[98|[101|[99|[97|[117|[115|[101|[32|[97|[32|[112|[114|[101|[118|[105|[111|[117|[115|[32|[99|[108|[97|[117|[115|[101|[32|[97|[108|[119|[97|[121|[115|[32|[109|[97|[116|[99|[104|[101|[115]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
	  %% Line 2009
	  <'bad_call'> when 'true' ->
	      %% Line 2010
	      [105|[110|[118|[97|[108|[105|[100|[32|[109|[111|[100|[117|[108|[101|[32|[97|[110|[100|[47|[111|[114|[32|[102|[117|[110|[99|[116|[105|[111|[110|[32|[110|[97|[109|[101|[59|[32|[116|[104|[105|[115|[32|[99|[97|[108|[108|[32|[119|[105|[108|[108|[32|[97|[108|[119|[97|[121|[115|[32|[102|[97|[105|[108]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
	  %% Line 2011
	  <'bad_segment_size'> when 'true' ->
	      %% Line 2012
	      [98|[105|[110|[97|[114|[121|[32|[99|[111|[110|[115|[116|[114|[117|[99|[116|[105|[111|[110|[32|[119|[105|[108|[108|[32|[102|[97|[105|[108|[32|[98|[101|[99|[97|[117|[115|[101|[32|[111|[102|[32|[97|[32|[116|[121|[112|[101|[32|[109|[105|[115|[109|[97|[116|[99|[104]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
	  %% Line 2013
	  <'bad_map'> when 'true' ->
	      %% Line 2014
	      [109|[97|[112|[32|[99|[111|[110|[115|[116|[114|[117|[99|[116|[105|[111|[110|[32|[119|[105|[108|[108|[32|[102|[97|[105|[108|[32|[98|[101|[99|[97|[117|[115|[101|[32|[111|[102|[32|[97|[32|[116|[121|[112|[101|[32|[109|[105|[115|[109|[97|[116|[99|[104]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'format_error',1}}] )
	    -| ['compiler_generated'] )
	end
'add_warning'/4 =
    %% Line 2016
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <'none',Term,Anno,St = {'kern',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,Ws,_cor23}> when 'true' ->
	      let <File> =
		  %% Line 2017
		  apply 'get_file'/1
		      (_cor1)
	      in  let <_rec110> =
		      %% Line 2018
		      [{File,[{'none','v3_kernel',_cor2}|[]]}|Ws]
		  in  %% Line 2018
		      call 'erlang':'setelement'
			  (9, _cor0, _rec110)
	  %% Line 2019
	  <Line,Term,Anno,St = {'kern',_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,Ws,_cor41}> when 'true' ->
	      let <File> =
		  %% Line 2020
		  apply 'get_file'/1
		      (_cor1)
	      in  let <_rec112> =
		      %% Line 2021
		      [{File,[{_cor3,'v3_kernel',_cor2}|[]]}|Ws]
		  in  %% Line 2021
		      call 'erlang':'setelement'
			  (9, _cor0, _rec112)
	  ( <_cor15,_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'add_warning',4}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('v3_kernel')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('v3_kernel', _cor0)
end