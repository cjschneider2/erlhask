module 'core_lib' ['get_anno'/1,
		   'is_literal'/1,
		   'is_literal_list'/1,
		   'is_var_used'/2,
		   'literal_value'/1,
		   'make_values'/1,
		   'module_info'/0,
		   'module_info'/1,
		   'set_anno'/2]
    attributes [%% Line 31
		'type' =
		    %% Line 31
		    [{{'record','c_alias'},[{'record_field',31,{'atom',31,'anno'},{'nil',31}}|[{'record_field',31,{'atom',31,'var'}}|[{'record_field',32,{'atom',32,'pat'}}]]],[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','c_apply'},[{'record_field',34,{'atom',34,'anno'},{'nil',34}}|[{'record_field',34,{'atom',34,'op'}}|[{'record_field',35,{'atom',35,'args'}}]]],[]}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{{'record','c_binary'},[{'record_field',37,{'atom',37,'anno'},{'nil',37}}|[{'typed_record_field',{'record_field',37,{'atom',37,'segments'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'type',37,'list',[{'remote_type',37,[{'atom',37,'cerl'}|[{'atom',37,'c_bitstr'}|[[]]]]}]}]]}}]],[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{{'record','c_bitstr'},[{'record_field',39,{'atom',39,'anno'},{'nil',39}}|[{'record_field',39,{'atom',39,'val'}}|[{'record_field',40,{'atom',40,'size'}}|[{'record_field',41,{'atom',41,'unit'}}|[{'record_field',42,{'atom',42,'type'}}|[{'record_field',43,{'atom',43,'flags'}}]]]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','c_call'},[{'record_field',45,{'atom',45,'anno'},{'nil',45}}|[{'record_field',45,{'atom',45,'module'}}|[{'record_field',46,{'atom',46,'name'}}|[{'record_field',47,{'atom',47,'args'}}]]]],[]}],
		%% Line 49
		'type' =
		    %% Line 49
		    [{{'record','c_case'},[{'record_field',49,{'atom',49,'anno'},{'nil',49}}|[{'record_field',49,{'atom',49,'arg'}}|[{'record_field',50,{'atom',50,'clauses'}}]]],[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{{'record','c_catch'},[{'record_field',52,{'atom',52,'anno'},{'nil',52}}|[{'record_field',52,{'atom',52,'body'}}]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{{'record','c_clause'},[{'record_field',54,{'atom',54,'anno'},{'nil',54}}|[{'record_field',54,{'atom',54,'pats'}}|[{'record_field',55,{'atom',55,'guard'}}|[{'record_field',56,{'atom',56,'body'}}]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','c_cons'},[{'record_field',58,{'atom',58,'anno'},{'nil',58}}|[{'record_field',58,{'atom',58,'hd'}}|[{'record_field',59,{'atom',59,'tl'}}]]],[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','c_fun'},[{'record_field',61,{'atom',61,'anno'},{'nil',61}}|[{'record_field',61,{'atom',61,'vars'}}|[{'record_field',62,{'atom',62,'body'}}]]],[]}],
		%% Line 64
		'type' =
		    %% Line 64
		    [{{'record','c_let'},[{'record_field',64,{'atom',64,'anno'},{'nil',64}}|[{'record_field',64,{'atom',64,'vars'}}|[{'record_field',65,{'atom',65,'arg'}}|[{'record_field',66,{'atom',66,'body'}}]]]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','c_letrec'},[{'record_field',68,{'atom',68,'anno'},{'nil',68}}|[{'record_field',68,{'atom',68,'defs'}}|[{'record_field',69,{'atom',69,'body'}}]]],[]}],
		%% Line 71
		'type' =
		    %% Line 71
		    [{{'record','c_literal'},[{'record_field',71,{'atom',71,'anno'},{'nil',71}}|[{'record_field',71,{'atom',71,'val'}}]],[]}],
		%% Line 73
		'type' =
		    %% Line 73
		    [{{'record','c_map'},[{'record_field',73,{'atom',73,'anno'},{'nil',73}}|[{'typed_record_field',{'record_field',74,{'atom',74,'arg'},{'record',74,'c_literal',[{'record_field',74,{'atom',74,'val'},{'map',74,[]}}]}},{'type',74,'union',[{'remote_type',74,[{'atom',74,'cerl'}|[{'atom',74,'c_var'}|[[]]]]}|[{'remote_type',74,[{'atom',74,'cerl'}|[{'atom',74,'c_literal'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'es'}},{'type',75,'union',[{'atom',75,'undefined'}|[{'type',75,'list',[{'remote_type',75,[{'atom',75,'cerl'}|[{'atom',75,'c_map_pair'}|[[]]]]}]}]]}}]]],[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','c_map_pair'},[{'record_field',77,{'atom',77,'anno'},{'nil',77}}|[{'typed_record_field',{'record_field',78,{'atom',78,'op'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'record',[{'atom',78,'c_literal'}|[{'type',78,'field_type',[{'atom',78,'val'}|[{'atom',78,'assoc'}]]}]]}|[{'type',78,'record',[{'atom',78,'c_literal'}|[{'type',78,'field_type',[{'atom',78,'val'}|[{'atom',78,'exact'}]]}]]}]]]}}|[{'record_field',79,{'atom',79,'key'}}|[{'record_field',80,{'atom',80,'val'}}]]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{{'record','c_module'},[{'record_field',82,{'atom',82,'anno'},{'nil',82}}|[{'record_field',82,{'atom',82,'name'}}|[{'record_field',83,{'atom',83,'exports'}}|[{'record_field',84,{'atom',84,'attrs'}}|[{'record_field',85,{'atom',85,'defs'}}]]]]],[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{{'record','c_primop'},[{'record_field',87,{'atom',87,'anno'},{'nil',87}}|[{'record_field',87,{'atom',87,'name'}}|[{'record_field',88,{'atom',88,'args'}}]]],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{{'record','c_receive'},[{'record_field',90,{'atom',90,'anno'},{'nil',90}}|[{'record_field',90,{'atom',90,'clauses'}}|[{'record_field',91,{'atom',91,'timeout'}}|[{'record_field',92,{'atom',92,'action'}}]]]],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{{'record','c_seq'},[{'record_field',94,{'atom',94,'anno'},{'nil',94}}|[{'record_field',94,{'atom',94,'arg'}}|[{'record_field',95,{'atom',95,'body'}}]]],[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','c_try'},[{'record_field',97,{'atom',97,'anno'},{'nil',97}}|[{'record_field',97,{'atom',97,'arg'}}|[{'record_field',98,{'atom',98,'vars'}}|[{'record_field',99,{'atom',99,'body'}}|[{'record_field',100,{'atom',100,'evars'}}|[{'record_field',101,{'atom',101,'handler'}}]]]]]],[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','c_tuple'},[{'record_field',103,{'atom',103,'anno'},{'nil',103}}|[{'record_field',103,{'atom',103,'es'}}]],[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{{'record','c_values'},[{'record_field',105,{'atom',105,'anno'},{'nil',105}}|[{'record_field',105,{'atom',105,'es'}}]],[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','c_var'},[{'record_field',107,{'atom',107,'anno'},{'nil',107}}|[{'typed_record_field',{'record_field',107,{'atom',107,'name'}},{'type',107,'union',[{'atom',107,'undefined'}|[{'remote_type',107,[{'atom',107,'cerl'}|[{'atom',107,'var_name'}|[[]]]]}]]}}]],[]}],
		%% Line 34
		'spec' =
		    %% Line 34
		    [{{'get_anno',1},[{'type',34,'fun',[{'type',34,'product',[{'remote_type',34,[{'atom',34,'cerl'}|[{'atom',34,'cerl'}|[[]]]]}]}|[{'type',34,'term',[]}]]}]}],
		%% Line 38
		'spec' =
		    %% Line 38
		    [{{'set_anno',2},[{'type',38,'fun',[{'type',38,'product',[{'remote_type',38,[{'atom',38,'cerl'}|[{'atom',38,'cerl'}|[[]]]]}|[{'type',38,'term',[]}]]}|[{'remote_type',38,[{'atom',38,'cerl'}|[{'atom',38,'cerl'}|[[]]]]}]]}]}],
		%% Line 42
		'spec' =
		    %% Line 42
		    [{{'is_literal',1},[{'type',42,'fun',[{'type',42,'product',[{'remote_type',42,[{'atom',42,'cerl'}|[{'atom',42,'cerl'}|[[]]]]}]}|[{'type',42,'boolean',[]}]]}]}],
		%% Line 51
		'spec' =
		    %% Line 51
		    [{{'is_literal_list',1},[{'type',51,'fun',[{'type',51,'product',[{'type',51,'list',[{'remote_type',51,[{'atom',51,'cerl'}|[{'atom',51,'cerl'}|[[]]]]}]}]}|[{'type',51,'boolean',[]}]]}]}],
		%% Line 61
		'spec' =
		    %% Line 61
		    [{{'literal_value',1},[{'type',61,'fun',[{'type',61,'product',[{'type',61,'union',[{'remote_type',61,[{'atom',61,'cerl'}|[{'atom',61,'c_literal'}|[[]]]]}|[{'remote_type',61,[{'atom',61,'cerl'}|[{'atom',61,'c_binary'}|[[]]]]}|[{'remote_type',62,[{'atom',62,'cerl'}|[{'atom',62,'c_map'}|[[]]]]}|[{'remote_type',62,[{'atom',62,'cerl'}|[{'atom',62,'c_cons'}|[[]]]]}|[{'remote_type',62,[{'atom',62,'cerl'}|[{'atom',62,'c_tuple'}|[[]]]]}]]]]]}]}|[{'type',62,'term',[]}]]}]}],
		%% Line 91
		'spec' =
		    %% Line 91
		    [{{'make_values',1},[{'type',91,'fun',[{'type',91,'product',[{'type',91,'union',[{'type',91,'list',[{'remote_type',91,[{'atom',91,'cerl'}|[{'atom',91,'cerl'}|[[]]]]}]}|[{'remote_type',91,[{'atom',91,'cerl'}|[{'atom',91,'cerl'}|[[]]]]}]]}]}|[{'remote_type',91,[{'atom',91,'cerl'}|[{'atom',91,'cerl'}|[[]]]]}]]}]}],
		%% Line 99
		'spec' =
		    %% Line 99
		    [{{'is_var_used',2},[{'type',99,'fun',[{'type',99,'product',[{'remote_type',99,[{'atom',99,'cerl'}|[{'atom',99,'var_name'}|[[]]]]}|[{'remote_type',99,[{'atom',99,'cerl'}|[{'atom',99,'cerl'}|[[]]]]}]]}|[{'type',99,'boolean',[]}]]}]}],
		%% Line 181
		'spec' =
		    %% Line 181
		    [{{'vu_clause',2},[{'type',181,'fun',[{'type',181,'product',[{'remote_type',181,[{'atom',181,'cerl'}|[{'atom',181,'var_name'}|[[]]]]}|[{'remote_type',181,[{'atom',181,'cerl'}|[{'atom',181,'c_clause'}|[[]]]]}]]}|[{'type',181,'boolean',[]}]]}]}],
		%% Line 192
		'spec' =
		    %% Line 192
		    [{{'vu_clauses',2},[{'type',192,'fun',[{'type',192,'product',[{'remote_type',192,[{'atom',192,'cerl'}|[{'atom',192,'var_name'}|[[]]]]}|[{'type',192,'list',[{'remote_type',192,[{'atom',192,'cerl'}|[{'atom',192,'c_clause'}|[[]]]]}]}]]}|[{'type',192,'boolean',[]}]]}]}],
		%% Line 237
		'spec' =
		    %% Line 237
		    [{{'vu_var_list',2},[{'type',237,'fun',[{'type',237,'product',[{'remote_type',237,[{'atom',237,'cerl'}|[{'atom',237,'var_name'}|[[]]]]}|[{'type',237,'list',[{'remote_type',237,[{'atom',237,'cerl'}|[{'atom',237,'c_var'}|[[]]]]}]}]]}|[{'type',237,'boolean',[]}]]}]}]]
'get_anno'/1 =
    %% Line 36
    fun (_cor0) ->
	call 'erlang':'element'
	    (2, _cor0)
'set_anno'/2 =
    %% Line 40
    fun (_cor1,_cor0) ->
	call 'erlang':'setelement'
	    (2, _cor1, _cor0)
'is_literal'/1 =
    %% Line 44
    fun (_cor0) ->
	case _cor0 of
	  <{'c_literal',_cor4,_cor5}> when 'true' ->
	      'true'
	  %% Line 45
	  <{'c_cons',_cor6,H,T}> when 'true' ->
	      let <_1772> =
		  %% Line 46
		  apply 'is_literal'/1
		      (H)
	      in  %% Line 46
		  ( case _1772 of
		      ( <( 'true'
			   -| ['compiler_generated'] )> when 'true' ->
			    apply 'is_literal'/1
				(T)
			-| ['compiler_generated'] )
		      ( <( 'false'
			   -| ['compiler_generated'] )> when 'true' ->
			    'false'
			-| ['compiler_generated'] )
		      ( <_cor1> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {( 'badarg'
					-| ['compiler_generated'] ),_1772}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 47
	  <{'c_tuple',_cor7,Es}> when 'true' ->
	      %% Line 53
	      call 'lists':'all'
		  ('is_literal'/1, Es)
	  %% Line 48
	  <{'c_binary',_cor8,Es}> when 'true' ->
	      apply 'is_lit_bin'/1
		  (Es)
	  %% Line 49
	  <_cor9> when 'true' ->
	      'false'
	end
'is_literal_list'/1 =
    %% Line 53
    fun (_cor0) ->
	call 'lists':'all'
	    ('is_literal'/1, _cor0)
'is_lit_bin'/1 =
    %% Line 55
    fun (_cor0) ->
	let <_cor5> =
	    %% Line 56
	    fun (_cor3) ->
		case _cor3 of
		  <{'c_bitstr',_cor7,E,S,_cor8,_cor9,_cor10}> when 'true' ->
		      let <_1584> =
			  %% Line 57
			  apply 'is_literal'/1
			      (E)
		      in  %% Line 57
			  ( case _1584 of
			      ( <( 'true'
				   -| ['compiler_generated'] )> when 'true' ->
				    apply 'is_literal'/1
					(S)
				-| ['compiler_generated'] )
			      ( <( 'false'
				   -| ['compiler_generated'] )> when 'true' ->
				    'false'
				-| ['compiler_generated'] )
			      ( <_cor1> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {( 'badarg'
						-| ['compiler_generated'] ),_1584}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		  ( <_cor4> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor3})
			  -| [{'function_name',{'-is_lit_bin/1-fun-0-',1}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 56
	    call 'lists':'all'
		(_cor5, _cor0)
'literal_value'/1 =
    %% Line 64
    fun (_cor0) ->
	case _cor0 of
	  <{'c_literal',_cor19,V}> when 'true' ->
	      V
	  %% Line 65
	  <{'c_binary',_cor20,Es}> when 'true' ->
	      let <_cor6> =
		  %% Line 66
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor3) ->
				case _cor3 of
				  <[Bit|_cor2]> when 'true' ->
				      let <_cor4> =
					  apply 'literal_value_bin'/1
					      (Bit)
				      in  let <_cor5> =
					      apply 'lc$^0'/1
						  (_cor2)
					  in  ( [_cor4|_cor5]
						-| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_1272> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor3})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (Es)
		    -| ['list_comprehension'] )
	      in  %% Line 66
		  call 'erlang':'list_to_binary'
		      (_cor6)
	  %% Line 67
	  <{'c_cons',_cor21,H,T}> when 'true' ->
	      let <_cor7> =
		  %% Line 68
		  apply 'literal_value'/1
		      (H)
	      in  let <_cor8> =
		      %% Line 68
		      apply 'literal_value'/1
			  (T)
		  in  %% Line 68
		      [_cor7|_cor8]
	  %% Line 69
	  <{'c_tuple',_cor22,Es}> when 'true' ->
	      let <_cor9> =
		  %% Line 79
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor3) ->
				case _cor3 of
				  <[V|_cor2]> when 'true' ->
				      let <_cor4> =
					  apply 'literal_value'/1
					      (V)
				      in  let <_cor5> =
					      apply 'lc$^0'/1
						  (_cor2)
					  in  ( [_cor4|_cor5]
						-| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_1773> when 'true' ->
					primop 'match_fail'
					    ({'function_clause',_cor3})
				    -| ['compiler_generated'] )
				end
		    in  case Es of
			  <[V|_cor2]> when 'true' ->
			      let <_cor4> =
				  apply 'literal_value'/1
				      (V)
			      in  let <_cor5> =
				      apply 'lc$^0'/1
					  (_cor2)
				  in  ( [_cor4|_cor5]
					-| ['compiler_generated'] )
			  <[]> when 'true' ->
			      []
			  ( <_1773> when 'true' ->
				primop 'match_fail'
				    ({'function_clause',Es})
			    -| ['compiler_generated'] )
			end
		    -| ['list_comprehension'] )
	      in  %% Line 70
		  call 'erlang':'list_to_tuple'
		      (_cor9)
	  %% Line 71
	  <{'c_map',_cor23,Cm,Cmps}> when 'true' ->
	      let <M> =
		  %% Line 72
		  apply 'literal_value'/1
		      (Cm)
	      in  let <_cor17> =
		      %% Line 73
		      fun (_cor14,_cor13) ->
			  case <_cor14,_cor13> of
			    <{'c_map_pair',_cor24,_cor25,Ck,Cv},Mi> when 'true' ->
				let <K> =
				    %% Line 74
				    apply 'literal_value'/1
					(Ck)
				in  let <V> =
					%% Line 75
					apply 'literal_value'/1
					    (Cv)
				    in  %% Line 76
					call 'maps':'put'
					    (K, V, _cor13)
			    ( <_cor16,_cor15> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor14,_cor13})
				    -| [{'function_name',{'-literal_value/1-fun-0-',2}}] )
			      -| ['compiler_generated'] )
			  end
		  in  %% Line 73
		      call 'lists':'foldl'
			  (_cor17, M, Cmps)
	  ( <_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'literal_value',1}}] )
	    -| ['compiler_generated'] )
	end
'literal_value_bin'/1 =
    %% Line 81
    fun (_cor0) ->
	case _cor0 of
	  <{'c_bitstr',_cor6,Val,Sz,U,T,Fs}> when 'true' ->
	      let <_117> =
		  %% Line 84
		  apply 'literal_value'/1
		      (Sz)
	      in  %% Line 84
		  case _117 of
		    <8> when 'true' ->
			let <_492> =
			    %% Line 85
			    apply 'literal_value'/1
				(U)
			in  %% Line 85
			    case _492 of
			      <1> when 'true' ->
				  let <_1901> =
				      %% Line 86
				      apply 'literal_value'/1
					  (T)
				  in  %% Line 86
				      case _1901 of
					<'integer'> when 'true' ->
					    let <_1424> =
						%% Line 87
						apply 'literal_value'/1
						    (Fs)
					    in  %% Line 87
						case _1424 of
						  <['unsigned'|['big']]> when 'true' ->
						      %% Line 88
						      apply 'literal_value'/1
							  (Val)
						  ( <_cor4> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_1424})
						    -| ['compiler_generated'] )
						end
					( <_cor3> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_1901})
					  -| ['compiler_generated'] )
				      end
			      ( <_cor2> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_492})
				-| ['compiler_generated'] )
			    end
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_117})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'literal_value_bin',1}}] )
	    -| ['compiler_generated'] )
	end
'make_values'/1 =
    %% Line 93
    fun (_cor0) ->
	case _cor0 of
	  <[E|[]]> when 'true' ->
	      E
	  %% Line 94
	  <Es = [H|_cor3]> when 'true' ->
	      let <_cor1> =
		  call 'erlang':'element'
		      (2, H)
	      in  {'c_values',_cor1,_cor0}
	  %% Line 95
	  <[]> when 'true' ->
	      {'c_values',[],[]}
	  %% Line 96
	  <E> when 'true' ->
	      _cor0
	end
'is_var_used'/2 =
    %% Line 101
    fun (_cor1,_cor0) ->
	apply 'vu_expr'/2
	    (_cor1, _cor0)
'vu_expr'/2 =
    %% Line 103
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <V,{'c_values',_cor31,Es}> when 'true' ->
	      let <_cor4> =
		  %% Line 172
		  fun (_cor2) ->
		      apply 'vu_expr'/2
			  (_cor1, _cor2)
	      in  %% Line 172
		  call 'lists':'any'
		      (_cor4, Es)
	  %% Line 105
	  <V,{'c_var',_cor32,V2}> when 'true' ->
	      call 'erlang':'=:='
		  (_cor1, V2)
	  %% Line 106
	  <V,{'c_alias',_cor33,V2,Pat}> when 'true' ->
	      %% Line 109
	      ( case <> of
		  ( <>
			when call 'erlang':'=:='
			      (_cor1,
			       V2) ->
			'true'
		    -| ['compiler_generated'] )
		  ( <> when 'true' ->
			apply 'vu_expr'/2
			    (_cor1, Pat)
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 110
	  <_cor34,{'c_literal',_cor35,_cor36}> when 'true' ->
	      'false'
	  %% Line 111
	  <V,{'c_cons',_cor37,H,T}> when 'true' ->
	      let <_821> =
		  %% Line 112
		  apply 'vu_expr'/2
		      (_cor1, H)
	      in  %% Line 112
		  ( case _821 of
		      ( <( 'true'
			   -| ['compiler_generated'] )> when 'true' ->
			    'true'
			-| ['compiler_generated'] )
		      ( <( 'false'
			   -| ['compiler_generated'] )> when 'true' ->
			    apply 'vu_expr'/2
				(_cor1, T)
			-| ['compiler_generated'] )
		      ( <_cor4> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {( 'badarg'
					-| ['compiler_generated'] ),_821}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 113
	  <V,{'c_tuple',_cor38,Es}> when 'true' ->
	      let <_cor4> =
		  %% Line 172
		  fun (_cor2) ->
		      apply 'vu_expr'/2
			  (_cor1, _cor2)
	      in  %% Line 172
		  call 'lists':'any'
		      (_cor4, Es)
	  %% Line 115
	  <V,{'c_map',_cor39,M,Es}> when 'true' ->
	      let <_538> =
		  %% Line 116
		  apply 'vu_expr'/2
		      (_cor1, M)
	      in  %% Line 116
		  ( case _538 of
		      ( <( 'true'
			   -| ['compiler_generated'] )> when 'true' ->
			    'true'
			-| ['compiler_generated'] )
		      ( <( 'false'
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_cor4> =
				%% Line 172
				fun (_cor2) ->
				    apply 'vu_expr'/2
					(_cor1, _cor2)
			    in  %% Line 172
				call 'lists':'any'
				    (_cor4, Es)
			-| ['compiler_generated'] )
		      ( <_cor6> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {( 'badarg'
					-| ['compiler_generated'] ),_538}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 117
	  <V,{'c_map_pair',_cor40,_cor41,Key,Val}> when 'true' ->
	      let <_699> =
		  %% Line 118
		  [Key|[Val|[]]]
	      in  let <_cor4> =
		      %% Line 172
		      fun (_cor2) ->
			  apply 'vu_expr'/2
			      (_cor1, _cor2)
		  in  %% Line 172
		      call 'lists':'any'
			  (_cor4, _699)
	  %% Line 119
	  <V,{'c_binary',_cor42,Ss}> when 'true' ->
	      %% Line 120
	      apply 'vu_seg_list'/2
		  (_cor1, Ss)
	  %% Line 121
	  <V,{'c_fun',_cor43,Vs,B}> when 'true' ->
	      let <_198> =
		  %% Line 123
		  apply 'vu_var_list'/2
		      (_cor1, Vs)
	      in  %% Line 123
		  case _198 of
		    %% Line 124
		    <'true'> when 'true' ->
			'false'
		    %% Line 125
		    <'false'> when 'true' ->
			apply 'vu_expr'/2
			    (_cor1, B)
		    ( <_cor8> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_198})
		      -| ['compiler_generated'] )
		  end
	  %% Line 127
	  <V,{'c_let',_cor44,Vs,Arg,B}> when 'true' ->
	      let <_1624> =
		  %% Line 128
		  apply 'vu_expr'/2
		      (_cor1, Arg)
	      in  %% Line 128
		  case _1624 of
		    %% Line 129
		    <'true'> when 'true' ->
			'true'
		    %% Line 130
		    <'false'> when 'true' ->
			let <_1138> =
			    %% Line 132
			    apply 'vu_var_list'/2
				(_cor1, Vs)
			in  %% Line 132
			    case _1138 of
			      %% Line 133
			      <'true'> when 'true' ->
				  'false'
			      %% Line 134
			      <'false'> when 'true' ->
				  apply 'vu_expr'/2
				      (_cor1, B)
			      ( <_cor9> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_1138})
				-| ['compiler_generated'] )
			    end
		    ( <_cor10> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_1624})
		      -| ['compiler_generated'] )
		  end
	  %% Line 137
	  <V,{'c_letrec',_cor45,Fs,B}> when 'true' ->
	      let <_cor14> =
		  %% Line 138
		  fun (_cor12) ->
		      case _cor12 of
			<{_cor46,Fb}> when 'true' ->
			    apply 'vu_expr'/2
				(_cor1, Fb)
			( <_cor13> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor12})
				-| [{'function_name',{'-vu_expr/2-fun-0-',1}}] )
			  -| ['compiler_generated'] )
		      end
	      in  let <_852> =
		      %% Line 138
		      call 'lists':'any'
			  (_cor14, Fs)
		  in  %% Line 138
		      ( case _852 of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				'true'
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				apply 'vu_expr'/2
				    (_cor1, B)
			    -| ['compiler_generated'] )
			  ( <_cor11> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {( 'badarg'
					    -| ['compiler_generated'] ),_852}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 139
	  <V,{'c_seq',_cor47,Arg,B}> when 'true' ->
	      let <_550> =
		  %% Line 140
		  apply 'vu_expr'/2
		      (_cor1, Arg)
	      in  %% Line 140
		  ( case _550 of
		      ( <( 'true'
			   -| ['compiler_generated'] )> when 'true' ->
			    'true'
			-| ['compiler_generated'] )
		      ( <( 'false'
			   -| ['compiler_generated'] )> when 'true' ->
			    apply 'vu_expr'/2
				(_cor1, B)
			-| ['compiler_generated'] )
		      ( <_cor16> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {( 'badarg'
					-| ['compiler_generated'] ),_550}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 141
	  <V,{'c_case',_cor48,Arg,Cs}> when 'true' ->
	      let <_440> =
		  %% Line 142
		  apply 'vu_expr'/2
		      (_cor1, Arg)
	      in  %% Line 142
		  ( case _440 of
		      ( <( 'true'
			   -| ['compiler_generated'] )> when 'true' ->
			    'true'
			-| ['compiler_generated'] )
		      ( <( 'false'
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_cor4> =
				%% Line 195
				fun (_cor2) ->
				    apply 'vu_clause'/2
					(_cor1, _cor2)
			    in  %% Line 195
				call 'lists':'any'
				    (_cor4, Cs)
			-| ['compiler_generated'] )
		      ( <_cor18> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {( 'badarg'
					-| ['compiler_generated'] ),_440}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 143
	  <V,{'c_receive',_cor49,Cs,T,A}> when 'true' ->
	      let <_cor4> =
		  %% Line 195
		  fun (_cor2) ->
		      apply 'vu_clause'/2
			  (_cor1, _cor2)
	      in  let <_2404> =
		      %% Line 195
		      call 'lists':'any'
			  (_cor4, Cs)
		  in  %% Line 144
		      ( case _2404 of
			  ( <( 'true'
			       -| ['compiler_generated'] )> when 'true' ->
				'true'
			    -| ['compiler_generated'] )
			  ( <( 'false'
			       -| ['compiler_generated'] )> when 'true' ->
				let <_272> =
				    apply 'vu_expr'/2
					(_cor1, T)
				in  ( case _272 of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      'true'
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      apply 'vu_expr'/2
						  (_cor1, A)
					  -| ['compiler_generated'] )
					( <_cor21> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {( 'badarg'
							  -| ['compiler_generated'] ),_272}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <_cor20> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {( 'badarg'
					    -| ['compiler_generated'] ),_2404}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 145
	  <V,{'c_apply',_cor50,Op,As}> when 'true' ->
	      let <_2563> =
		  %% Line 146
		  [Op|As]
	      in  let <_cor4> =
		      %% Line 172
		      fun (_cor2) ->
			  apply 'vu_expr'/2
			      (_cor1, _cor2)
		  in  %% Line 172
		      call 'lists':'any'
			  (_cor4, _2563)
	  %% Line 147
	  <V,{'c_call',_cor51,M,N,As}> when 'true' ->
	      let <_2593> =
		  %% Line 148
		  [M|[N|As]]
	      in  let <_cor4> =
		      %% Line 172
		      fun (_cor2) ->
			  apply 'vu_expr'/2
			      (_cor1, _cor2)
		  in  %% Line 172
		      call 'lists':'any'
			  (_cor4, _2593)
	  %% Line 149
	  <V,{'c_primop',_cor52,_cor53,As}> when 'true' ->
	      let <_cor4> =
		  %% Line 172
		  fun (_cor2) ->
		      apply 'vu_expr'/2
			  (_cor1, _cor2)
	      in  %% Line 172
		  call 'lists':'any'
		      (_cor4, As)
	  %% Line 151
	  <V,{'c_catch',_cor54,B}> when 'true' ->
	      %% Line 152
	      apply 'vu_expr'/2
		  (_cor1, B)
	  %% Line 153
	  <V,{'c_try',_cor55,E,Vs,B,Evs,H}> when 'true' ->
	      let <_178> =
		  %% Line 154
		  apply 'vu_expr'/2
		      (_cor1, E)
	      in  %% Line 154
		  case _178 of
		    %% Line 155
		    <'true'> when 'true' ->
			'true'
		    %% Line 156
		    <'false'> when 'true' ->
			let <_1418> =
			    %% Line 158
			    apply 'vu_var_list'/2
				(_cor1, Vs)
			in  let <_cor25> =
				%% Line 158
				case _1418 of
				  %% Line 159
				  <'true'> when 'true' ->
				      'false'
				  %% Line 160
				  <'false'> when 'true' ->
				      apply 'vu_expr'/2
					  (_cor1, B)
				  ( <_cor24> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_1418})
				    -| ['compiler_generated'] )
				end
			    in  %% Line 158
				case _cor25 of
				  %% Line 162
				  <'true'> when 'true' ->
				      'true'
				  %% Line 163
				  <'false'> when 'true' ->
				      let <_2216> =
					  %% Line 164
					  apply 'vu_var_list'/2
					      (_cor1, Evs)
				      in  %% Line 164
					  case _2216 of
					    %% Line 165
					    <'true'> when 'true' ->
						'false'
					    %% Line 166
					    <'false'> when 'true' ->
						apply 'vu_expr'/2
						    (_cor1, H)
					    ( <_cor26> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_2216})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor27> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor25})
				    -| ['compiler_generated'] )
				end
		    ( <_cor28> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_178})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor30,_cor29> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'vu_expr',2}}] )
	    -| ['compiler_generated'] )
	end
'vu_seg_list'/2 =
    %% Line 174
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 175
	    fun (_cor4) ->
		case _cor4 of
		  <{'c_bitstr',_cor9,Val,Size,_cor10,_cor11,_cor12}> when 'true' ->
		      let <_70> =
			  %% Line 176
			  apply 'vu_expr'/2
			      (_cor1, Val)
		      in  %% Line 176
			  ( case _70 of
			      ( <( 'true'
				   -| ['compiler_generated'] )> when 'true' ->
				    'true'
				-| ['compiler_generated'] )
			      ( <( 'false'
				   -| ['compiler_generated'] )> when 'true' ->
				    apply 'vu_expr'/2
					(_cor1, Size)
				-| ['compiler_generated'] )
			      ( <_cor2> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {( 'badarg'
						-| ['compiler_generated'] ),_70}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		  ( <_cor5> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor4})
			  -| [{'function_name',{'-vu_seg_list/2-fun-0-',1}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 175
	    call 'lists':'any'
		(_cor6, _cor0)
'vu_clause'/2 =
    %% Line 183
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <V,{'c_clause',_cor7,Ps,G,B}> when 'true' ->
	      let <_202> =
		  %% Line 225
		  fun (_cor4,_cor3) ->
		      apply 'vu_pattern'/3
			  (_cor1, _cor4, _cor3)
	      in  let <_2010> =
		      %% Line 225
		      call 'lists':'foldl'
			  (_202, {'false','false'}, Ps)
		  in  %% Line 184
		      case _2010 of
			%% Line 185
			<{'true',_X_Shad}> when 'true' ->
			    'true'
			%% Line 186
			<{'false','true'}> when 'true' ->
			    'false'
			%% Line 187
			<{'false','false'}> when 'true' ->
			    let <_184> =
				%% Line 189
				apply 'vu_expr'/2
				    (_cor1, G)
			    in  %% Line 189
				( case _184 of
				    ( <( 'true'
					 -| ['compiler_generated'] )> when 'true' ->
					  'true'
				      -| ['compiler_generated'] )
				    ( <( 'false'
					 -| ['compiler_generated'] )> when 'true' ->
					  apply 'vu_expr'/2
					      (_cor1, B)
				      -| ['compiler_generated'] )
				    ( <_cor2> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {( 'badarg'
						      -| ['compiler_generated'] ),_184}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_2010})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'vu_clause',2}}] )
	    -| ['compiler_generated'] )
	end
'vu_pattern'/3 =
    %% Line 204
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <V,{'c_var',_cor9,V2},{Used,_cor10}> when 'true' ->
	      let <_cor3> =
		  %% Line 205
		  call 'erlang':'=:='
		      (_cor2, V2)
	      in  %% Line 205
		  {Used,_cor3}
	  %% Line 206
	  <V,{'c_cons',_cor11,H,T},St0> when 'true' ->
	      let <_2644> =
		  %% Line 207
		  apply 'vu_pattern'/3
		      (_cor2, H, _cor0)
	      in  %% Line 207
		  case _2644 of
		    %% Line 208
		    <St1 = {'true',_cor12}> when 'true' ->
			_2644
		    %% Line 209
		    <St1> when 'true' ->
			apply 'vu_pattern'/3
			    (_cor2, T, _2644)
		  end
	  %% Line 211
	  <V,{'c_tuple',_cor13,Es},St> when 'true' ->
	      %% Line 212
	      apply 'vu_pattern_list'/3
		  (_cor2, Es, _cor0)
	  %% Line 213
	  <V,{'c_binary',_cor14,Ss},St> when 'true' ->
	      %% Line 214
	      apply 'vu_pat_seg_list'/3
		  (_cor2, Ss, _cor0)
	  %% Line 215
	  <V,{'c_alias',_cor15,Var,P},St0> when 'true' ->
	      let <_999> =
		  %% Line 216
		  apply 'vu_pattern'/3
		      (_cor2, Var, _cor0)
	      in  %% Line 216
		  case _999 of
		    %% Line 217
		    <St1 = {'true',_cor16}> when 'true' ->
			_999
		    %% Line 218
		    <St1> when 'true' ->
			apply 'vu_pattern'/3
			    (_cor2, P, _999)
		  end
	  %% Line 220
	  <_cor17,_cor18,St> when 'true' ->
	      _cor0
	end
'vu_pattern_list'/3 =
    %% Line 224
    fun (_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 225
	    fun (_cor4,_cor3) ->
		apply 'vu_pattern'/3
		    (_cor2, _cor4, _cor3)
	in  %% Line 225
	    call 'lists':'foldl'
		(_cor7, _cor0, _cor1)
'vu_pat_seg_list'/3 =
    %% Line 227
    fun (_cor2,_cor1,_cor0) ->
	let <_cor9> =
	    %% Line 228
	    fun (_cor6,_cor5) ->
		case <_cor6,_cor5> of
		  <_cor13,St0 = {'true',_cor14}> when 'true' ->
		      _cor5
		  %% Line 229
		  <{'c_bitstr',_cor15,Val,Size,_cor16,_cor17,_cor18},St0> when 'true' ->
		      let <_1751> =
			  %% Line 230
			  apply 'vu_pattern'/3
			      (_cor2, Val, _cor5)
		      in  %% Line 230
			  case _1751 of
			    %% Line 231
			    <St1 = {'true',_cor19}> when 'true' ->
				_1751
			    %% Line 232
			    <{'false',Shad}> when 'true' ->
				let <_cor3> =
				    %% Line 233
				    apply 'vu_expr'/2
					(_cor2, Size)
				in  %% Line 233
				    {_cor3,Shad}
			    ( <_cor4> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_1751})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor8,_cor7> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor6,_cor5})
			  -| [{'function_name',{'-vu_pat_seg_list/3-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 228
	    call 'lists':'foldl'
		(_cor9, _cor0, _cor1)
'vu_var_list'/2 =
    %% Line 239
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 240
	    fun (_cor2) ->
		case _cor2 of
		  <{'c_var',_cor7,V2}> when 'true' ->
		      call 'erlang':'=:='
			  (_cor1, V2)
		  ( <_cor3> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor2})
			  -| [{'function_name',{'-vu_var_list/2-fun-0-',1}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 240
	    call 'lists':'any'
		(_cor4, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('core_lib')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('core_lib', _cor0)
end