module 'sys_pre_attributes' ['module_info'/0,
			     'module_info'/1,
			     'parse_transform'/2]
    attributes []
'parse_transform'/2 =
    %% Line 61
    fun (_cor1,_cor0) ->
	let <S> =
	    %% Line 62
	    {'state',_cor1,[],[],_cor0}
	in  let <S2> =
		%% Line 63
		apply 'init_transform'/1
		    (S)
	    in  %% Line 64
		( case S2 of
		    ( <( {'state',_cor13,_rec0,_cor14,_cor15}
			 -| ['compiler_generated'] )> when 'true' ->
			  do  do  apply 'report_verbose'/3
				      ([80|[114|[101|[32|[32|[111|[112|[116|[105|[111|[110|[115|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]], [_rec0|[]], S2)
				  %% Line 65
				  apply 'report_verbose'/3
				      ([80|[111|[115|[116|[32|[111|[112|[116|[105|[111|[110|[115|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]], [_cor14|[]], S2)
			      let <S3> =
				  %% Line 66
				  apply 'pre_transform'/1
				      (S2)
			      in  %% Line 68
				  ( case apply 'post_transform'/1
					     (S3) of
				      ( <( {'state',_rec2,_cor21,_cor22,_cor23}
					   -| ['compiler_generated'] )> when 'true' ->
					    _rec2
					-| ['compiler_generated'] )
				      ( <_cor24> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','state'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		    ( <_cor16> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'init_transform'/1 =
    %% Line 73
    fun (_cor0) ->
	%% Line 74
	( case _cor0 of
	    ( <( {'state',_cor5,_cor6,_cor7,_rec3}
		 -| ['compiler_generated'] )> when 'true' ->
		  case _rec3 of
		    %% Line 75
		    <Options>
			when call 'erlang':'is_list'
			      (_rec3) ->
			%% Line 76
			apply 'init_transform'/2
			    (_rec3, _cor0)
		    %% Line 77
		    <Option> when 'true' ->
			%% Line 78
			apply 'init_transform'/2
			    ([_rec3|[]], _cor0)
		  end
	      -| ['compiler_generated'] )
	    ( <_cor8> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'init_transform'/2 =
    %% Line 81
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'attribute','insert',Name,Val}|Tail],S> when 'true' ->
	      let <Op> = {%% Line 82
		   'insert',Name,Val}
	      in  %% Line 83
		  ( case _cor0 of
		      ( <( {'state',_cor29,_cor30,_rec4,_cor31}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <PostOps> =
				[Op|_rec4]
			    in  let <_cor8> =
				    %% Line 84
				    call 'erlang':'setelement'
					(4, _cor0, PostOps)
				in  %% Line 84
				    apply 'init_transform'/2
					(Tail, _cor8)
			-| ['compiler_generated'] )
		      ( <_cor32> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 85
	  <[{'attribute','replace',Name,Val}|Tail],S> when 'true' ->
	      let <Op> = {%% Line 86
		   'replace',Name,Val}
	      in  %% Line 87
		  ( case _cor0 of
		      ( <( {'state',_cor38,_rec6,_cor39,_cor40}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <PreOps> =
				[Op|_rec6]
			    in  let <PostOps> =
				    %% Line 88
				    [Op|_cor39]
				in  let <_cor17> =
					%% Line 89
					call 'erlang':'setelement'
					    (4, _cor0, PostOps)
				    in  let <_cor19> =
					    %% Line 89
					    call 'erlang':'setelement'
						(3, _cor17, PreOps)
					in  %% Line 89
					    apply 'init_transform'/2
						(Tail, _cor19)
			-| ['compiler_generated'] )
		      ( <_cor41> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 90
	  <[{'attribute','delete',Name}|Tail],S> when 'true' ->
	      let <Op> = {%% Line 91
		   'delete',Name}
	      in  %% Line 92
		  ( case _cor0 of
		      ( <( {'state',_cor51,_rec9,_cor52,_cor53}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <PreOps> =
				[Op|_rec9]
			    in  let <_cor26> =
				    %% Line 93
				    call 'erlang':'setelement'
					(3, _cor0, PreOps)
				in  %% Line 93
				    apply 'init_transform'/2
					(Tail, _cor26)
			-| ['compiler_generated'] )
		      ( <_cor54> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 94
	  <[],S> when 'true' ->
	      _cor0
	  %% Line 96
	  <[_cor60|T],S> when 'true' ->
	      %% Line 97
	      apply 'init_transform'/2
		  (T, _cor0)
	  %% Line 98
	  <BadOpt,S> when 'true' ->
	      do  %% Line 99
		  apply 'report_error'/3
		      ([73|[108|[108|[101|[103|[97|[108|[32|[111|[112|[116|[105|[111|[110|[32|[40|[105|[103|[110|[111|[114|[101|[100|[41|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor1|[]], _cor0)
		  _cor0
	end
'pre_transform'/1 =
    %% Line 105
    fun (_cor0) ->
	case _cor0 of
	  <S = {'state',_cor4,[],_cor5,_cor6}> when 'true' ->
	      _cor0
	  %% Line 107
	  <S> when 'true' ->
	      %% Line 108
	      ( case _cor0 of
		  ( <( {'state',_rec11,_cor7,_cor8,_cor9}
		       -| ['compiler_generated'] )> when 'true' ->
			apply 'pre_transform'/3
			    (_rec11, [], _cor0)
		    -| ['compiler_generated'] )
		  ( <_cor10> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'pre_transform'/3 =
    %% Line 110
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[H|T],Acc,S> when 'true' ->
	      %% Line 111
	      case H of
		%% Line 112
		<{'attribute',Line,Name,Val}> when 'true' ->
		    %% Line 113
		    ( case _cor0 of
			( <( {'state',_cor28,_rec12,_cor29,_cor30}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <_2432> =
				  call 'lists':'keyfind'
				      (Name, 2, _rec12)
			      in  case _2432 of
				    %% Line 114
				    <'false'> when 'true' ->
					%% Line 115
					apply 'pre_transform'/3
					    (T, [H|_cor1], _cor0)
				    %% Line 117
				    <{'replace',_cor32,NewVal}>
					when call 'erlang':'=:='
					      (_cor32,
					       Name) ->
					do  %% Line 118
					    apply 'report_warning'/3
						([82|[101|[112|[108|[97|[99|[101|[32|[97|[116|[116|[114|[105|[98|[117|[116|[101|[32|[126|[112|[58|[32|[126|[112|[32|[45|[62|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 119
																												     [Name|[Val|[NewVal|[]]]], _cor0)
					    let <New> =
						%% Line 121
						{'attribute',Line,Name,NewVal}
					    in  let <Pre> =
						    %% Line 122
						    call 'lists':'keydelete'
							(Name, 2, _rec12)
						in  let <Post> =
							%% Line 123
							call 'lists':'keydelete'
							    (Name, 2, _cor29)
						    in  let <_cor13> =
							    %% Line 124
							    call 'erlang':'setelement'
								(4, _cor0, Post)
							in  let <_cor15> =
								%% Line 124
								call 'erlang':'setelement'
								    (3, _cor13, Pre)
							    in  %% Line 125
								case <> of
								  %% Line 126
								  <>
								      when call 'erlang':'=:='
									    (Pre,
									     []) ->
								      let <Forms> =
									  %% Line 128
									  call 'lists':'reverse'
									      (_cor1, [New|T])
								      in  %% Line 129
									  case _cor15 of
									    <{'state',_cor46,_cor47,_cor48,_cor49}> when 'true' ->
										call 'erlang':'setelement'
										    (2, _cor15, Forms)
									    ( <_cor50> when 'true' ->
										  ( call ( 'erlang'
											   -| ['compiler_generated'] ):( 'error'
															 -| ['compiler_generated'] )
											(( {'badrecord','state'}
											   -| ['compiler_generated'] ))
										    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									  end
								  %% Line 130
								  <> when 'true' ->
								      %% Line 131
								      apply 'pre_transform'/3
									  (T, [New|_cor1], _cor15)
								end
				    %% Line 134
				    <{'delete',_cor51}>
					when call 'erlang':'=:='
					      (_cor51,
					       Name) ->
					do  %% Line 135
					    apply 'report_warning'/3
						([68|[101|[108|[101|[116|[101|[32|[97|[116|[116|[114|[105|[98|[117|[116|[101|[32|[126|[112|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 136
																								 [Name|[Val|[]]], _cor0)
					    %% Line 138
					    apply 'pre_transform'/3
						(T, _cor1, _cor0)
				    ( <_cor20> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_2432})
				      -| ['compiler_generated'] )
				  end
			  -| ['compiler_generated'] )
			( <_cor31> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 140
		<_X_Any> when 'true' ->
		    %% Line 141
		    apply 'pre_transform'/3
			(T, [H|_cor1], _cor0)
	      end
	  %% Line 143
	  <[],Acc,S> when 'true' ->
	      let <_rec17> =
		  %% Line 144
		  call 'lists':'reverse'
		      (_cor1)
	      in  %% Line 144
		  case _cor0 of
		    <{'state',_cor52,_cor53,_cor54,_cor55}> when 'true' ->
			call 'erlang':'setelement'
			    (2, _cor0, _rec17)
		    ( <_cor56> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  ( <_cor27,_cor26,_cor25> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'pre_transform',3}}] )
	    -| ['compiler_generated'] )
	end
'post_transform'/1 =
    %% Line 149
    fun (_cor0) ->
	case _cor0 of
	  <S = {'state',_cor4,_cor5,[],_cor6}> when 'true' ->
	      _cor0
	  %% Line 151
	  <S> when 'true' ->
	      %% Line 152
	      ( case _cor0 of
		  ( <( {'state',_rec19,_cor7,_cor8,_cor9}
		       -| ['compiler_generated'] )> when 'true' ->
			apply 'post_transform'/3
			    (_rec19, [], _cor0)
		    -| ['compiler_generated'] )
		  ( <_cor10> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'post_transform'/3 =
    %% Line 154
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[H|T],Acc,S> when 'true' ->
	      %% Line 155
	      case H of
		%% Line 156
		<Attribute = {'attribute',Line,'module',_X_Val}> when 'true' ->
		    let <Acc2> =
			%% Line 157
			call 'lists':'reverse'
			    ([H|_cor1])
		    in  %% Line 158
			( case _cor0 of
			    ( <( {'state',_cor19,_cor20,_rec20,_cor21}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_cor6> =
				      apply 'attrs'/3
					  (_rec20, Line, _cor0)
				  in  let <_cor7> =
					  call 'erlang':'++'
					      (_cor6, T)
				      in  let <Forms> =
					      call 'erlang':'++'
						  (Acc2, _cor7)
					  in  let <_cor10> =
						  %% Line 159
						  call 'erlang':'setelement'
						      (4, _cor0, [])
					      in  %% Line 159
						  call 'erlang':'setelement'
						      (2, _cor10, Forms)
			      -| ['compiler_generated'] )
			    ( <_cor22> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','state'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		%% Line 160
		<_X_Any> when 'true' ->
		    %% Line 161
		    apply 'post_transform'/3
			(T, [H|_cor1], _cor0)
	      end
	  %% Line 163
	  <[],Acc,S> when 'true' ->
	      let <_rec22> =
		  %% Line 164
		  call 'lists':'reverse'
		      (_cor1)
	      in  %% Line 164
		  case _cor0 of
		    <{'state',_cor28,_cor29,_cor30,_cor31}> when 'true' ->
			call 'erlang':'setelement'
			    (2, _cor0, _rec22)
		    ( <_cor32> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  ( <_cor18,_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'post_transform',3}}] )
	    -| ['compiler_generated'] )
	end
'attrs'/3 =
    %% Line 166
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{'replace',Name,NewVal}|T],Line,S> when 'true' ->
	      do  %% Line 167
		  apply 'report_verbose'/3
		      ([73|[110|[115|[101|[114|[116|[32|[97|[116|[116|[114|[105|[98|[117|[116|[101|[32|[126|[112|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]], [Name|[NewVal|[]]], _cor0)
		  let <_cor3> =
		      %% Line 168
		      apply 'attrs'/3
			  (T, _cor1, _cor0)
		  in  %% Line 168
		      [{'attribute',_cor1,Name,NewVal}|_cor3]
	  %% Line 169
	  <[{'insert',Name,NewVal}|T],Line,S> when 'true' ->
	      do  %% Line 170
		  apply 'report_verbose'/3
		      ([73|[110|[115|[101|[114|[116|[32|[97|[116|[116|[114|[105|[98|[117|[116|[101|[32|[126|[112|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]], [Name|[NewVal|[]]], _cor0)
		  let <_cor4> =
		      %% Line 171
		      apply 'attrs'/3
			  (T, _cor1, _cor0)
		  in  %% Line 171
		      [{'attribute',_cor1,Name,NewVal}|_cor4]
	  %% Line 172
	  <[],_cor8,_cor9> when 'true' ->
	      %% Line 173
	      []
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'attrs',3}}] )
	    -| ['compiler_generated'] )
	end
'report_error'/3 =
    %% Line 182
    fun (_cor2,_cor1,_cor0) ->
	let <_445> =
	    %% Line 183
	    apply 'is_error'/1
		(_cor0)
	in  %% Line 183
	    case _445 of
	      %% Line 184
	      <'true'> when 'true' ->
		  let <_cor3> =
		      %% Line 185
		      call 'erlang':'++'
			  ([126|[112|[58|[32|[42|[32|[69|[82|[82|[79|[82|[32|[42|[32]]]]]]]]]]]]]], _cor2)
		  in  %% Line 185
		      call 'io':'format'
			  (_cor3, ['sys_pre_attributes'|_cor1])
	      %% Line 186
	      <'false'> when 'true' ->
		  %% Line 187
		  'ok'
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_445})
		-| ['compiler_generated'] )
	    end
'report_warning'/3 =
    %% Line 190
    fun (_cor2,_cor1,_cor0) ->
	let <_881> =
	    %% Line 191
	    apply 'is_warning'/1
		(_cor0)
	in  %% Line 191
	    case _881 of
	      %% Line 192
	      <'true'> when 'true' ->
		  let <_cor3> =
		      %% Line 193
		      call 'erlang':'++'
			  ([126|[112|[58|[32|[42|[32|[87|[65|[82|[78|[73|[78|[71|[32|[42|[32]]]]]]]]]]]]]]]], _cor2)
		  in  %% Line 193
		      call 'io':'format'
			  (_cor3, ['sys_pre_attributes'|_cor1])
	      %% Line 194
	      <'false'> when 'true' ->
		  %% Line 195
		  'ok'
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_881})
		-| ['compiler_generated'] )
	    end
'report_verbose'/3 =
    %% Line 198
    fun (_cor2,_cor1,_cor0) ->
	%% Line 213
	( case _cor0 of
	    ( <( {'state',_cor4,_cor5,_cor6,_rec26}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_26> =
		      call 'lists':'member'
			  ('verbose', _rec26)
		  in  case _26 of
			<'true'> when 'true' ->
			    let <_cor3> =
				[126|[112|[58|[32|_cor2]]]]
			    in  call 'io':'format'
				    (_cor3, ['sys_pre_attributes'|_cor1])
			<'false'> when 'true' ->
			    'ok'
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_26})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor7> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'is_error'/1 =
    %% Line 206
    fun (_cor0) ->
	%% Line 207
	( case _cor0 of
	    ( <( {'state',_cor6,_cor7,_cor8,_rec24}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor4> =
		      call 'lists':'member'
			  ('report_errors', _rec24)
		  in  let <_cor1> =
			  %% Line 213
			  call 'lists':'member'
			      ('verbose', _rec24)
		      in  call 'erlang':'or'
			      (_cor4, _cor1)
	      -| ['compiler_generated'] )
	    ( <_cor9> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'is_warning'/1 =
    %% Line 209
    fun (_cor0) ->
	%% Line 210
	( case _cor0 of
	    ( <( {'state',_cor6,_cor7,_cor8,_rec25}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor4> =
		      call 'lists':'member'
			  ('report_warnings', _rec25)
		  in  let <_cor1> =
			  %% Line 213
			  call 'lists':'member'
			      ('verbose', _rec25)
		      in  call 'erlang':'or'
			      (_cor4, _cor1)
	      -| ['compiler_generated'] )
	    ( <_cor9> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('sys_pre_attributes')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('sys_pre_attributes', _cor0)
end