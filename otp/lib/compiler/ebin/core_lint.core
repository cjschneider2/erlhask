module 'core_lint' ['format_error'/1,
		    'module'/1,
		    'module'/2,
		    'module_info'/0,
		    'module_info'/1]
    attributes [%% Line 31
		'type' =
		    %% Line 31
		    [{{'record','c_alias'},[{'record_field',31,{'atom',31,'anno'},{'nil',31}}|[{'record_field',31,{'atom',31,'var'}}|[{'record_field',32,{'atom',32,'pat'}}]]],[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','c_apply'},[{'record_field',34,{'atom',34,'anno'},{'nil',34}}|[{'record_field',34,{'atom',34,'op'}}|[{'record_field',35,{'atom',35,'args'}}]]],[]}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{{'record','c_binary'},[{'record_field',37,{'atom',37,'anno'},{'nil',37}}|[{'typed_record_field',{'record_field',37,{'atom',37,'segments'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'type',37,'list',[{'remote_type',37,[{'atom',37,'cerl'}|[{'atom',37,'c_bitstr'}|[[]]]]}]}]]}}]],[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{{'record','c_bitstr'},[{'record_field',39,{'atom',39,'anno'},{'nil',39}}|[{'record_field',39,{'atom',39,'val'}}|[{'record_field',40,{'atom',40,'size'}}|[{'record_field',41,{'atom',41,'unit'}}|[{'record_field',42,{'atom',42,'type'}}|[{'record_field',43,{'atom',43,'flags'}}]]]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','c_call'},[{'record_field',45,{'atom',45,'anno'},{'nil',45}}|[{'record_field',45,{'atom',45,'module'}}|[{'record_field',46,{'atom',46,'name'}}|[{'record_field',47,{'atom',47,'args'}}]]]],[]}],
		%% Line 49
		'type' =
		    %% Line 49
		    [{{'record','c_case'},[{'record_field',49,{'atom',49,'anno'},{'nil',49}}|[{'record_field',49,{'atom',49,'arg'}}|[{'record_field',50,{'atom',50,'clauses'}}]]],[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{{'record','c_catch'},[{'record_field',52,{'atom',52,'anno'},{'nil',52}}|[{'record_field',52,{'atom',52,'body'}}]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{{'record','c_clause'},[{'record_field',54,{'atom',54,'anno'},{'nil',54}}|[{'record_field',54,{'atom',54,'pats'}}|[{'record_field',55,{'atom',55,'guard'}}|[{'record_field',56,{'atom',56,'body'}}]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','c_cons'},[{'record_field',58,{'atom',58,'anno'},{'nil',58}}|[{'record_field',58,{'atom',58,'hd'}}|[{'record_field',59,{'atom',59,'tl'}}]]],[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','c_fun'},[{'record_field',61,{'atom',61,'anno'},{'nil',61}}|[{'record_field',61,{'atom',61,'vars'}}|[{'record_field',62,{'atom',62,'body'}}]]],[]}],
		%% Line 64
		'type' =
		    %% Line 64
		    [{{'record','c_let'},[{'record_field',64,{'atom',64,'anno'},{'nil',64}}|[{'record_field',64,{'atom',64,'vars'}}|[{'record_field',65,{'atom',65,'arg'}}|[{'record_field',66,{'atom',66,'body'}}]]]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','c_letrec'},[{'record_field',68,{'atom',68,'anno'},{'nil',68}}|[{'record_field',68,{'atom',68,'defs'}}|[{'record_field',69,{'atom',69,'body'}}]]],[]}],
		%% Line 71
		'type' =
		    %% Line 71
		    [{{'record','c_literal'},[{'record_field',71,{'atom',71,'anno'},{'nil',71}}|[{'record_field',71,{'atom',71,'val'}}]],[]}],
		%% Line 73
		'type' =
		    %% Line 73
		    [{{'record','c_map'},[{'record_field',73,{'atom',73,'anno'},{'nil',73}}|[{'typed_record_field',{'record_field',74,{'atom',74,'arg'},{'record',74,'c_literal',[{'record_field',74,{'atom',74,'val'},{'map',74,[]}}]}},{'type',74,'union',[{'remote_type',74,[{'atom',74,'cerl'}|[{'atom',74,'c_var'}|[[]]]]}|[{'remote_type',74,[{'atom',74,'cerl'}|[{'atom',74,'c_literal'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'es'}},{'type',75,'union',[{'atom',75,'undefined'}|[{'type',75,'list',[{'remote_type',75,[{'atom',75,'cerl'}|[{'atom',75,'c_map_pair'}|[[]]]]}]}]]}}]]],[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','c_map_pair'},[{'record_field',77,{'atom',77,'anno'},{'nil',77}}|[{'typed_record_field',{'record_field',78,{'atom',78,'op'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'record',[{'atom',78,'c_literal'}|[{'type',78,'field_type',[{'atom',78,'val'}|[{'atom',78,'assoc'}]]}]]}|[{'type',78,'record',[{'atom',78,'c_literal'}|[{'type',78,'field_type',[{'atom',78,'val'}|[{'atom',78,'exact'}]]}]]}]]]}}|[{'record_field',79,{'atom',79,'key'}}|[{'record_field',80,{'atom',80,'val'}}]]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{{'record','c_module'},[{'record_field',82,{'atom',82,'anno'},{'nil',82}}|[{'record_field',82,{'atom',82,'name'}}|[{'record_field',83,{'atom',83,'exports'}}|[{'record_field',84,{'atom',84,'attrs'}}|[{'record_field',85,{'atom',85,'defs'}}]]]]],[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{{'record','c_primop'},[{'record_field',87,{'atom',87,'anno'},{'nil',87}}|[{'record_field',87,{'atom',87,'name'}}|[{'record_field',88,{'atom',88,'args'}}]]],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{{'record','c_receive'},[{'record_field',90,{'atom',90,'anno'},{'nil',90}}|[{'record_field',90,{'atom',90,'clauses'}}|[{'record_field',91,{'atom',91,'timeout'}}|[{'record_field',92,{'atom',92,'action'}}]]]],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{{'record','c_seq'},[{'record_field',94,{'atom',94,'anno'},{'nil',94}}|[{'record_field',94,{'atom',94,'arg'}}|[{'record_field',95,{'atom',95,'body'}}]]],[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','c_try'},[{'record_field',97,{'atom',97,'anno'},{'nil',97}}|[{'record_field',97,{'atom',97,'arg'}}|[{'record_field',98,{'atom',98,'vars'}}|[{'record_field',99,{'atom',99,'body'}}|[{'record_field',100,{'atom',100,'evars'}}|[{'record_field',101,{'atom',101,'handler'}}]]]]]],[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','c_tuple'},[{'record_field',103,{'atom',103,'anno'},{'nil',103}}|[{'record_field',103,{'atom',103,'es'}}]],[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{{'record','c_values'},[{'record_field',105,{'atom',105,'anno'},{'nil',105}}|[{'record_field',105,{'atom',105,'es'}}]],[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','c_var'},[{'record_field',107,{'atom',107,'anno'},{'nil',107}}|[{'typed_record_field',{'record_field',107,{'atom',107,'name'}},{'type',107,'union',[{'atom',107,'undefined'}|[{'remote_type',107,[{'atom',107,'cerl'}|[{'atom',107,'var_name'}|[[]]]]}]]}}]],[]}],
		%% Line 57
		'type' =
		    %% Line 57
		    [{'fa',{'type',57,'tuple',[{'type',57,'atom',[]}|[{'type',57,'arity',[]}]]},[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{'err_desc',{'type',59,'union',[{'atom',59,'invalid_attributes'}|[{'atom',59,'invalid_exports'}|[{'type',60,'tuple',[{'atom',60,'arg_mismatch'}|[{'type',60,'fa',[]}]]}|[{'type',60,'tuple',[{'atom',60,'bittype_unit'}|[{'type',60,'fa',[]}]]}|[{'type',61,'tuple',[{'atom',61,'illegal_expr'}|[{'type',61,'fa',[]}]]}|[{'type',61,'tuple',[{'atom',61,'illegal_guard'}|[{'type',61,'fa',[]}]]}|[{'type',62,'tuple',[{'atom',62,'illegal_pattern'}|[{'type',62,'fa',[]}]]}|[{'type',62,'tuple',[{'atom',62,'illegal_try'}|[{'type',62,'fa',[]}]]}|[{'type',63,'tuple',[{'atom',63,'not_bs_pattern'}|[{'type',63,'fa',[]}]]}|[{'type',63,'tuple',[{'atom',63,'not_pattern'}|[{'type',63,'fa',[]}]]}|[{'type',64,'tuple',[{'atom',64,'not_var'}|[{'type',64,'fa',[]}]]}|[{'type',64,'tuple',[{'atom',64,'pattern_mismatch'}|[{'type',64,'fa',[]}]]}|[{'type',65,'tuple',[{'atom',65,'return_mismatch'}|[{'type',65,'fa',[]}]]}|[{'type',65,'tuple',[{'atom',65,'undefined_function'}|[{'type',65,'fa',[]}]]}|[{'type',66,'tuple',[{'atom',66,'duplicate_var'}|[{'remote_type',66,[{'atom',66,'cerl'}|[{'atom',66,'var_name'}|[[]]]]}|[{'type',66,'fa',[]}]]]}|[{'type',67,'tuple',[{'atom',67,'unbound_var'}|[{'remote_type',67,[{'atom',67,'cerl'}|[{'atom',67,'var_name'}|[[]]]]}|[{'type',67,'fa',[]}]]]}|[{'type',68,'tuple',[{'atom',68,'undefined_function'}|[{'type',68,'fa',[]}|[{'type',68,'fa',[]}]]]}|[{'type',69,'tuple',[{'atom',69,'tail_segment_not_at_end'}|[{'type',69,'fa',[]}]]}]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 71
		'type' =
		    %% Line 71
		    [{'error',{'type',71,'tuple',[{'atom',71,'none'}|[{'type',71,'module',[]}|[{'type',71,'err_desc',[]}]]]},[]}],
		%% Line 72
		'type' =
		    %% Line 72
		    [{'warning',{'type',72,'tuple',[{'type',72,'module',[]}|[{'type',72,'term',[]}]]},[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','lint'},[{'typed_record_field',{'record_field',77,{'atom',77,'module'}},{'type',77,'union',[{'atom',77,'undefined'}|[{'type',77,'module',[]}]]}}|[{'typed_record_field',{'record_field',78,{'atom',78,'func'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'fa',[]}]]}}|[{'typed_record_field',{'record_field',79,{'atom',79,'errors'},{'nil',79}},{'type',79,'list',[{'type',79,'error',[]}]}}|[{'typed_record_field',{'record_field',80,{'atom',80,'warnings'},{'nil',80}},{'type',80,'list',[{'type',80,'warning',[]}]}}]]]],[]}],
		%% Line 87
		'spec' =
		    %% Line 87
		    [{{'format_error',1},[{'type',87,'fun',[{'type',87,'product',[{'type',87,'err_desc',[]}]}|[{'type',87,'list',[{'type',87,'union',[{'type',87,'char',[]}|[{'type',87,'list',[]}]]}]}]]}]}],
		%% Line 124
		'type' =
		    %% Line 124
		    [{'ret',{'type',124,'union',[{'type',124,'tuple',[{'atom',124,'ok'}|[{'type',124,'list',[{'type',124,'tuple',[{'type',124,'module',[]}|[{'type',124,'nonempty_list',[{'type',124,'warning',[]}]}]]}]}]]}|[{'type',125,'tuple',[{'atom',125,'error'}|[{'type',125,'list',[{'type',125,'tuple',[{'type',125,'module',[]}|[{'type',125,'nonempty_list',[{'type',125,'error',[]}]}]]}]}|[{'type',126,'list',[{'type',126,'tuple',[{'type',126,'module',[]}|[{'type',126,'nonempty_list',[{'type',126,'warning',[]}]}]]}]}]]]}]]},[]}],
		%% Line 128
		'spec' =
		    %% Line 128
		    [{{'module',1},[{'type',128,'fun',[{'type',128,'product',[{'remote_type',128,[{'atom',128,'cerl'}|[{'atom',128,'c_module'}|[[]]]]}]}|[{'type',128,'ret',[]}]]}]}],
		%% Line 132
		'spec' =
		    %% Line 132
		    [{{'module',2},[{'type',132,'fun',[{'type',132,'product',[{'remote_type',132,[{'atom',132,'cerl'}|[{'atom',132,'c_module'}|[[]]]]}|[{'type',132,'list',[{'remote_type',132,[{'atom',132,'compile'}|[{'atom',132,'option'}|[[]]]]}]}]]}|[{'type',132,'ret',[]}]]}]}],
		%% Line 581
		'spec' =
		    %% Line 581
		    [{{'is_simple_top',1},[{'type',581,'fun',[{'type',581,'product',[{'remote_type',581,[{'atom',581,'cerl'}|[{'atom',581,'cerl'}|[[]]]]}]}|[{'type',581,'boolean',[]}]]}]}]]
'format_error'/1 =
    %% Line 89
    fun (_cor0) ->
	case _cor0 of
	  <'invalid_attributes'> when 'true' ->
	      [105|[110|[118|[97|[108|[105|[100|[32|[97|[116|[116|[114|[105|[98|[117|[116|[101|[115]]]]]]]]]]]]]]]]]]
	  %% Line 90
	  <'invalid_exports'> when 'true' ->
	      [105|[110|[118|[97|[108|[105|[100|[32|[101|[120|[112|[111|[114|[116|[115]]]]]]]]]]]]]]]
	  %% Line 91
	  <{'arg_mismatch',{F,A}}> when 'true' ->
	      %% Line 92
	      call 'io_lib':'format'
		  ([97|[114|[103|[117|[109|[101|[110|[116|[32|[99|[111|[117|[110|[116|[32|[109|[105|[115|[109|[97|[116|[99|[104|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [F|[A|[]]])
	  %% Line 93
	  <{'bittype_unit',{F,A}}> when 'true' ->
	      %% Line 94
	      call 'io_lib':'format'
		  ([117|[110|[105|[116|[32|[119|[105|[116|[104|[111|[117|[116|[32|[115|[105|[122|[101|[32|[105|[110|[32|[98|[105|[116|[32|[115|[121|[110|[116|[97|[120|[32|[112|[97|[116|[116|[101|[114|[110|[47|[101|[120|[112|[114|[101|[115|[115|[105|[111|[110|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [F|[A|[]]])
	  %% Line 95
	  <{'illegal_expr',{F,A}}> when 'true' ->
	      %% Line 96
	      call 'io_lib':'format'
		  ([105|[108|[108|[101|[103|[97|[108|[32|[101|[120|[112|[114|[101|[115|[115|[105|[111|[110|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]], [F|[A|[]]])
	  %% Line 97
	  <{'illegal_guard',{F,A}}> when 'true' ->
	      %% Line 98
	      call 'io_lib':'format'
		  ([105|[108|[108|[101|[103|[97|[108|[32|[103|[117|[97|[114|[100|[32|[101|[120|[112|[114|[101|[115|[115|[105|[111|[110|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [F|[A|[]]])
	  %% Line 99
	  <{'illegal_pattern',{F,A}}> when 'true' ->
	      %% Line 100
	      call 'io_lib':'format'
		  ([105|[108|[108|[101|[103|[97|[108|[32|[112|[97|[116|[116|[101|[114|[110|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]], [F|[A|[]]])
	  %% Line 101
	  <{'illegal_try',{F,A}}> when 'true' ->
	      %% Line 102
	      call 'io_lib':'format'
		  ([105|[108|[108|[101|[103|[97|[108|[32|[116|[114|[121|[32|[101|[120|[112|[114|[101|[115|[115|[105|[111|[110|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [F|[A|[]]])
	  %% Line 103
	  <{'not_bs_pattern',{F,A}}> when 'true' ->
	      %% Line 104
	      call 'io_lib':'format'
		  ([101|[120|[112|[101|[99|[116|[105|[110|[103|[32|[98|[105|[116|[32|[115|[121|[110|[116|[97|[120|[32|[112|[97|[116|[116|[101|[114|[110|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [F|[A|[]]])
	  %% Line 105
	  <{'not_pattern',{F,A}}> when 'true' ->
	      %% Line 106
	      call 'io_lib':'format'
		  ([101|[120|[112|[101|[99|[116|[105|[110|[103|[32|[112|[97|[116|[116|[101|[114|[110|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]], [F|[A|[]]])
	  %% Line 107
	  <{'not_var',{F,A}}> when 'true' ->
	      %% Line 108
	      call 'io_lib':'format'
		  ([101|[120|[112|[101|[99|[116|[105|[110|[103|[32|[118|[97|[114|[105|[97|[98|[108|[101|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]], [F|[A|[]]])
	  %% Line 109
	  <{'pattern_mismatch',{F,A}}> when 'true' ->
	      %% Line 110
	      call 'io_lib':'format'
		  ([112|[97|[116|[116|[101|[114|[110|[32|[99|[111|[117|[110|[116|[32|[109|[105|[115|[109|[97|[116|[99|[104|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [F|[A|[]]])
	  %% Line 111
	  <{'return_mismatch',{F,A}}> when 'true' ->
	      %% Line 112
	      call 'io_lib':'format'
		  ([114|[101|[116|[117|[114|[110|[32|[99|[111|[117|[110|[116|[32|[109|[105|[115|[109|[97|[116|[99|[104|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [F|[A|[]]])
	  %% Line 113
	  <{'undefined_function',{F,A}}> when 'true' ->
	      %% Line 114
	      call 'io_lib':'format'
		  ([102|[117|[110|[99|[116|[105|[111|[110|[32|[126|[119|[47|[126|[119|[32|[117|[110|[100|[101|[102|[105|[110|[101|[100]]]]]]]]]]]]]]]]]]]]]]]], [F|[A|[]]])
	  %% Line 115
	  <{'duplicate_var',N,{F,A}}> when 'true' ->
	      %% Line 116
	      call 'io_lib':'format'
		  ([100|[117|[112|[108|[105|[99|[97|[116|[101|[32|[118|[97|[114|[105|[97|[98|[108|[101|[32|[126|[115|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [N|[F|[A|[]]]])
	  %% Line 117
	  <{'unbound_var',N,{F,A}}> when 'true' ->
	      %% Line 118
	      call 'io_lib':'format'
		  ([117|[110|[98|[111|[117|[110|[100|[32|[118|[97|[114|[105|[97|[98|[108|[101|[32|[126|[115|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]], [N|[F|[A|[]]]])
	  %% Line 119
	  <{'undefined_function',{F1,A1},{F2,A2}}> when 'true' ->
	      %% Line 120
	      call 'io_lib':'format'
		  ([117|[110|[100|[101|[102|[105|[110|[101|[100|[32|[102|[117|[110|[99|[116|[105|[111|[110|[32|[126|[119|[47|[126|[119|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [F1|[A1|[F2|[A2|[]]]]])
	  %% Line 121
	  <{'tail_segment_not_at_end',{F,A}}> when 'true' ->
	      %% Line 122
	      call 'io_lib':'format'
		  ([98|[105|[110|[97|[114|[121|[32|[116|[97|[105|[108|[32|[115|[101|[103|[109|[101|[110|[116|[32|[110|[111|[116|[32|[97|[116|[32|[101|[110|[100|[32|[105|[110|[32|[126|[119|[47|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [F|[A|[]]])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'format_error',1}}] )
	    -| ['compiler_generated'] )
	end
'module'/1 =
    %% Line 130
    fun (_cor0) ->
	apply 'module'/2
	    (_cor0, [])
'module'/2 =
    %% Line 134
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'c_module',_cor12,M,Es,As,Ds},_X_Opts> when 'true' ->
	      let <Defined> =
		  %% Line 135
		  apply 'defined_funcs'/1
		      (Ds)
	      in  %% Line 136
		  ( case M of
		      ( <( {'c_literal',_cor13,_rec0}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <St0> =
				{'lint',_rec0,'undefined',[],[]}
			    in  let <St1> =
				    %% Line 137
				    apply 'check_exports'/2
					(Es, St0)
				in  let <St2> =
					%% Line 138
					apply 'check_attrs'/2
					    (As, St1)
				    in  let <St3> =
					    %% Line 139
					    apply 'module_defs'/3
						(Ds, Defined, St2)
					in  let <St4> =
						%% Line 140
						apply 'check_state'/3
						    (Es, Defined, St3)
					    in  %% Line 141
						apply 'return_status'/1
						    (St4)
			-| ['compiler_generated'] )
		      ( <_cor14> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','c_literal'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'module',2}}] )
	    -| ['compiler_generated'] )
	end
'defined_funcs'/1 =
    %% Line 145
    fun (_cor0) ->
	let <_cor5> =
	    %% Line 146
	    fun (_cor2,_cor1) ->
		case <_cor2,_cor1> of
		  <{{'c_var',_cor7,IA = {_X_I,_X_A}},_cor8},Def> when 'true' ->
		      %% Line 147
		      call 'ordsets':'add_element'
			  (IA, _cor1)
		  ( <_cor4,_cor3> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor2,_cor1})
			  -| [{'function_name',{'-defined_funcs/1-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 146
	    call 'lists':'foldl'
		(_cor5, %% Line 148
			[], _cor0)
'return_status'/1 =
    %% Line 154
    fun (_cor0) ->
	%% Line 155
	( case _cor0 of
	    ( <( {'lint',_cor14,_cor15,_cor16,_rec1}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Ws> =
		      call 'lists':'reverse'
			  (_rec1)
		  in  let <_3435> =
			  %% Line 156
			  call 'lists':'reverse'
			      (_cor16)
		      in  %% Line 156
			  case _3435 of
			    %% Line 157
			    <[]> when 'true' ->
				{'ok',[{_cor14,Ws}|[]]}
			    %% Line 158
			    <Es> when 'true' ->
				{'error',[{_cor14,_3435}|[]],[{_cor14,Ws}|[]]}
			  end
	      -| ['compiler_generated'] )
	    ( <_cor17> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','lint'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'add_error'/2 =
    %% Line 165
    fun (_cor1,_cor0) ->
	( case _cor0 of
	    ( <( {'lint',_cor9,_cor10,_rec8,_cor11}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_rec6> =
		      [{'none','core_lint',_cor1}|_rec8]
		  in  call 'erlang':'setelement'
			  (4, _cor0, _rec6)
	      -| ['compiler_generated'] )
	    ( <_cor12> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','lint'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'check_exports'/2 =
    %% Line 169
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 170
	    fun (_cor4) ->
		case _cor4 of
		  <{'c_var',_cor10,{Name,Arity}}>
		      when let <_cor2> =
			    %% Line 171
			    call 'erlang':'is_atom'
				(Name)
			in  let <_cor3> =
				%% Line 171
				call 'erlang':'is_integer'
				    (Arity)
			    in  %% Line 171
				call 'erlang':'and'
				    (_cor2, _cor3) ->
		      %% Line 171
		      'true'
		  %% Line 172
		  <_cor11> when 'true' ->
		      'false'
		end
	in  let <_3948> =
		%% Line 170
		call 'lists':'all'
		    (_cor6, _cor1)
	    in  %% Line 170
		case _3948 of
		  %% Line 174
		  <'true'> when 'true' ->
		      _cor0
		  %% Line 175
		  <'false'> when 'true' ->
		      apply 'add_error'/2
			  ('invalid_exports', _cor0)
		  ( <_cor7> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_3948})
		    -| ['compiler_generated'] )
		end
'check_attrs'/2 =
    %% Line 178
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 179
	    fun (_cor2) ->
		case _cor2 of
		  <{{'c_literal',_cor8,_cor9},V}> when 'true' ->
		      call 'core_lib':'is_literal'
			  (V)
		  %% Line 180
		  <_cor10> when 'true' ->
		      'false'
		end
	in  let <_245> =
		%% Line 179
		call 'lists':'all'
		    (_cor4, _cor1)
	    in  %% Line 179
		case _245 of
		  %% Line 182
		  <'true'> when 'true' ->
		      _cor0
		  %% Line 183
		  <'false'> when 'true' ->
		      apply 'add_error'/2
			  ('invalid_attributes', _cor0)
		  ( <_cor5> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_245})
		    -| ['compiler_generated'] )
		end
'check_state'/3 =
    %% Line 186
    fun (_cor2,_cor1,_cor0) ->
	let <_cor8> =
	    %% Line 187
	    fun (_cor5,_cor4) ->
		case <_cor5,_cor4> of
		  <{'c_var',_cor12,F = {_X_N,_X_A}},St1> when 'true' ->
		      let <_3043> =
			  %% Line 188
			  call 'ordsets':'is_element'
			      (F, _cor1)
		      in  %% Line 188
			  case _3043 of
			    %% Line 189
			    <'true'> when 'true' ->
				_cor4
			    %% Line 190
			    <'false'> when 'true' ->
				apply 'add_error'/2
				    ({'undefined_function',F}, _cor0)
			    ( <_cor3> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_3043})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor7,_cor6> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor5,_cor4})
			  -| [{'function_name',{'-check_state/3-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 187
	    call 'lists':'foldl'
		(_cor8, _cor0, _cor2)
'module_defs'/3 =
    %% Line 196
    fun (_cor2,_cor1,_cor0) ->
	let <_cor12> =
	    %% Line 198
	    fun (_cor9,_cor8) ->
		%% Line 199
		case _cor9 of
		  <{{'c_var',_cor16,FA = {_X_F,_X_A}},_cor17}> when 'true' ->
		      %% Line 200
		      case _cor8 of
			<{'lint',_cor18,_cor19,_cor20,_cor21}> when 'true' ->
			    let <_cor6> =
				call 'erlang':'setelement'
				    (3, _cor8, FA)
			    in  %% Line 201
				apply 'function'/3
				    (_cor9, _cor1, _cor6)
			( <_cor22> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','lint'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor9})
		    -| ['compiler_generated'] )
		end
	in  %% Line 198
	    call 'lists':'foldl'
		(_cor12, _cor0, _cor2)
'function'/3 =
    %% Line 211
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{{'c_var',_cor9,{_cor10,_cor11}},B},Def,St> when 'true' ->
	      %% Line 213
	      case B of
		%% Line 214
		<{'c_fun',_cor12,_cor13,_cor14}> when 'true' ->
		    apply 'expr'/4
			(B, _cor1, 'any', _cor0)
		%% Line 215
		<_cor15> when 'true' ->
		    ( case _cor0 of
			( <( {'lint',_cor16,_rec10,_cor17,_cor18}
			     -| ['compiler_generated'] )> when 'true' ->
			      apply 'add_error'/2
				  ({'illegal_expr',_rec10}, _cor0)
			  -| ['compiler_generated'] )
			( <_cor19> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','lint'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
	      end
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'function',3}}] )
	    -| ['compiler_generated'] )
	end
'body'/4 =
    %% Line 220
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'c_values',_cor12,Es},Def,Rt,St> when 'true' ->
	      let <_cor5> =
		  %% Line 221
		  call 'erlang':'length'
		      (Es)
	      in  let <_cor7> =
		      %% Line 392
		      fun (_cor4,_4284) ->
			  apply 'expr'/4
			      (_cor4, _cor2, 1, _4284)
		  in  let <_cor4> =
			  %% Line 392
			  call 'lists':'foldl'
			      (_cor7, _cor0, Es)
		      in  %% Line 221
			  apply 'return_match'/3
			      (_cor1, _cor5, _cor4)
	  %% Line 222
	  <E,Def,Rt,St0> when 'true' ->
	      let <St1> =
		  %% Line 223
		  apply 'expr'/4
		      (_cor3, _cor2, _cor1, _cor0)
	      in  let <_2347> =
		      %% Line 583
		      case _cor3 of
			<{'c_var',_1278,_1185}> when 'true' ->
			    'true'
			%% Line 584
			<{'c_cons',_cor4,_cor5,_cor6}> when 'true' ->
			    'true'
			%% Line 585
			<{'c_tuple',_cor7,_cor8}> when 'true' ->
			    'true'
			%% Line 586
			<{'c_binary',_cor9,_cor10}> when 'true' ->
			    'true'
			%% Line 587
			<{'c_literal',_cor11,_cor12}> when 'true' ->
			    'true'
			%% Line 588
			<_cor13> when 'true' ->
			    'false'
		      end
		  in  %% Line 224
		      case _2347 of
			%% Line 225
			<'true'> when 'true' ->
			    apply 'return_match'/3
				(_cor1, 1, St1)
			%% Line 226
			<'false'> when 'true' ->
			    St1
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_2347})
			  -| ['compiler_generated'] )
		      end
	end
'guard'/3 =
    %% Line 232
    fun (_cor2,_cor1,_cor0) ->
	apply 'gexpr'/4
	    (_cor2, _cor1, 1, _cor0)
'gbody'/4 =
    %% Line 241
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'c_values',_cor12,Es},Def,Rt,St> when 'true' ->
	      let <_cor5> =
		  %% Line 242
		  call 'erlang':'length'
		      (Es)
	      in  let <_cor7> =
		      %% Line 302
		      fun (_cor4,_1560) ->
			  apply 'gexpr'/4
			      (_cor4, _cor2, 1, _1560)
		  in  let <_cor4> =
			  %% Line 302
			  call 'lists':'foldl'
			      (_cor7, _cor0, Es)
		      in  %% Line 242
			  apply 'return_match'/3
			      (_cor1, _cor5, _cor4)
	  %% Line 243
	  <E,Def,Rt,St0> when 'true' ->
	      let <St1> =
		  %% Line 244
		  apply 'gexpr'/4
		      (_cor3, _cor2, _cor1, _cor0)
	      in  let <_513> =
		      %% Line 583
		      case _cor3 of
			<{'c_var',_2383,_980}> when 'true' ->
			    'true'
			%% Line 584
			<{'c_cons',_cor4,_cor5,_cor6}> when 'true' ->
			    'true'
			%% Line 585
			<{'c_tuple',_cor7,_cor8}> when 'true' ->
			    'true'
			%% Line 586
			<{'c_binary',_cor9,_cor10}> when 'true' ->
			    'true'
			%% Line 587
			<{'c_literal',_cor11,_cor12}> when 'true' ->
			    'true'
			%% Line 588
			<_cor13> when 'true' ->
			    'false'
		      end
		  in  %% Line 245
		      case _513 of
			%% Line 246
			<'true'> when 'true' ->
			    apply 'return_match'/3
				(_cor1, 1, St1)
			%% Line 247
			<'false'> when 'true' ->
			    St1
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_513})
			  -| ['compiler_generated'] )
		      end
	end
'gexpr'/4 =
    %% Line 250
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'c_var',_cor27,N},Def,_X_Rt,St>
	      when let <_cor4> =
		    call 'erlang':'is_atom'
			(N)
		in  let <_cor5> =
			call 'erlang':'is_integer'
			    (N)
		    in  call 'erlang':'or'
			    (_cor4, _cor5) ->
	      %% Line 251
	      apply 'expr_var'/3
		  (N, _cor2, _cor0)
	  %% Line 252
	  <{'c_literal',_cor28,_cor29},_X_Def,_X_Rt,St> when 'true' ->
	      _cor0
	  %% Line 253
	  <{'c_cons',_cor30,H,T},Def,_X_Rt,St> when 'true' ->
	      let <_5152> =
		  %% Line 254
		  [H|[T|[]]]
	      in  let <_cor7> =
		      %% Line 302
		      fun (_cor4,_288) ->
			  apply 'gexpr'/4
			      (_cor4, _cor2, 1, _288)
		  in  %% Line 302
		      call 'lists':'foldl'
			  (_cor7, _cor0, _5152)
	  %% Line 255
	  <{'c_tuple',_cor31,Es},Def,_X_Rt,St> when 'true' ->
	      let <_cor7> =
		  %% Line 302
		  fun (_cor4,_2248) ->
		      apply 'gexpr'/4
			  (_cor4, _cor2, 1, _2248)
	      in  %% Line 302
		  call 'lists':'foldl'
		      (_cor7, _cor0, Es)
	  %% Line 257
	  <{'c_map',_cor32,_cor33,Es},Def,_X_Rt,St> when 'true' ->
	      let <_cor7> =
		  %% Line 302
		  fun (_cor4,_3853) ->
		      apply 'gexpr'/4
			  (_cor4, _cor2, 1, _3853)
	      in  %% Line 302
		  call 'lists':'foldl'
		      (_cor7, _cor0, Es)
	  %% Line 259
	  <{'c_map_pair',_cor34,_cor35,K,V},Def,_X_Rt,St> when 'true' ->
	      let <_2777> =
		  %% Line 260
		  [K|[V|[]]]
	      in  let <_cor7> =
		      %% Line 302
		      fun (_cor4,_13) ->
			  apply 'gexpr'/4
			      (_cor4, _cor2, 1, _13)
		  in  %% Line 302
		      call 'lists':'foldl'
			  (_cor7, _cor0, _2777)
	  %% Line 261
	  <{'c_binary',_cor36,Ss},Def,_X_Rt,St> when 'true' ->
	      let <_cor7> =
		  %% Line 307
		  fun (_cor4,_4539) ->
		      apply 'gbitstr'/3
			  (_cor4, _cor2, _4539)
	      in  %% Line 307
		  call 'lists':'foldl'
		      (_cor7, _cor0, Ss)
	  %% Line 263
	  <{'c_seq',_cor37,Arg,B},Def,Rt,St0> when 'true' ->
	      let <St1> =
		  %% Line 264
		  apply 'gexpr'/4
		      (Arg, _cor2, 'any', _cor0)
	      in  %% Line 265
		  apply 'gbody'/4
		      (B, _cor2, _cor1, St1)
	  %% Line 266
	  <{'c_let',_cor38,Vs,Arg,B},Def,Rt,St0> when 'true' ->
	      let <_cor7> =
		  %% Line 428
		  case Vs of
		    <[]> when 'true' ->
			'any'
		    %% Line 429
		    <Es> when 'true' ->
			call 'erlang':'length'
			    (Vs)
		  end
	      in  let <St1> =
		      %% Line 267
		      apply 'gbody'/4
			  (Arg, _cor2, _cor7, _cor0)
		  in  let <_1830> =
			  %% Line 461
			  apply 'variable_list'/3
			      (Vs, [], St1)
		      in  %% Line 268
			  case _1830 of
			    <{Lvs,St2}> when 'true' ->
				let <_cor10> =
				    %% Line 269
				    call 'ordsets':'union'
					(Lvs, _cor2)
				in  %% Line 269
				    apply 'gbody'/4
					(B, _cor10, _cor1, St2)
			    ( <_cor9> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_1830})
			      -| ['compiler_generated'] )
			  end
	  %% Line 270
	  <{'c_call',_cor39,{'c_literal',_cor40,'erlang'},{'c_literal',_cor41,'is_record'},%% Line 271
											   [Arg|[{'c_literal',_cor42,Tag}|[{'c_literal',_cor43,Size}|[]]]]},Def,%% Line 272
																				1,St>
	      when let <_cor11> =
		    %% Line 272
		    call 'erlang':'is_atom'
			(Tag)
		in  let <_cor12> =
			%% Line 272
			call 'erlang':'is_integer'
			    (Size)
		    in  %% Line 272
			call 'erlang':'and'
			    (_cor11, _cor12) ->
	      %% Line 273
	      apply 'gexpr'/4
		  (Arg, _cor2, 1, _cor0)
	  %% Line 274
	  <{'c_call',_cor44,{'c_literal',_cor45,'erlang'},{'c_literal',_cor46,'is_record'},_cor47},_X_Def,%% Line 275
													  1,St> when 'true' ->
	      %% Line 276
	      ( case _cor0 of
		  ( <( {'lint',_cor48,_rec11,_cor49,_cor50}
		       -| ['compiler_generated'] )> when 'true' ->
			apply 'add_error'/2
			    ({'illegal_guard',_rec11}, _cor0)
		    -| ['compiler_generated'] )
		  ( <_cor51> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','lint'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 277
	  <{'c_call',_cor52,{'c_literal',_cor53,'erlang'},{'c_literal',_cor54,Name},As},Def,%% Line 278
											    1,St>
	      when %% Line 278
		call 'erlang':'is_atom'
		    (Name) ->
	      let <_cor15> =
		  %% Line 279
		  call 'erlang':'length'
		      (As)
	      in  let <_3532> =
		      %% Line 279
		      apply 'is_guard_bif'/2
			  (Name, _cor15)
		  in  %% Line 279
		      case _3532 of
			%% Line 280
			<'true'> when 'true' ->
			    let <_cor7> =
				%% Line 302
				fun (_cor4,_5007) ->
				    apply 'gexpr'/4
					(_cor4, _cor2, 1, _5007)
			    in  %% Line 302
				call 'lists':'foldl'
				    (_cor7, _cor0, As)
			%% Line 282
			<'false'> when 'true' ->
			    %% Line 283
			    ( case _cor0 of
				( <( {'lint',_cor55,_rec12,_cor56,_cor57}
				     -| ['compiler_generated'] )> when 'true' ->
				      apply 'add_error'/2
					  ({'illegal_guard',_rec12}, _cor0)
				  -| ['compiler_generated'] )
				( <_cor58> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','lint'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			( <_cor18> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_3532})
			  -| ['compiler_generated'] )
		      end
	  %% Line 285
	  <{'c_primop',_cor59,{'c_literal',_cor60,A},As},Def,_X_Rt,St0>
	      when call 'erlang':'is_atom'
		    (A) ->
	      let <_cor7> =
		  %% Line 302
		  fun (_cor4,_2522) ->
		      apply 'gexpr'/4
			  (_cor4, _cor2, 1, _2522)
	      in  %% Line 302
		  call 'lists':'foldl'
		      (_cor7, _cor0, As)
	  %% Line 287
	  <{'c_try',_cor61,E,[{'c_var',_cor62,X}|[]],{'c_var',_cor63,_cor64},%% Line 288
									     [{'c_var',_cor65,_cor66}|[{'c_var',_cor67,_cor68}|[]]],%% Line 288
																    {'c_literal',_cor69,'false'}},Def,Rt,St>
	      when call 'erlang':'=:='
		    (_cor64,
		     X) ->
	      %% Line 290
	      apply 'gbody'/4
		  (E, _cor2, _cor1, _cor0)
	  %% Line 291
	  <{'c_case',_cor70,Arg,Cs},Def,Rt,St0> when 'true' ->
	      %% Line 433
	      case Cs of
		<[{'c_clause',_5872,Ps,_4839,_cor4}|_cor5]> when 'true' ->
		    let <PatCount> =
			call 'erlang':'length'
			    (Ps)
		    in  let <St1> =
			    apply 'gbody'/4
				(Arg, _cor2, PatCount, _cor0)
			in  apply 'clauses'/5
				(Cs, _cor2, PatCount, _cor1, St1)
		( <_4133> when 'true' ->
		      primop 'match_fail'
			  ({'function_clause',Cs})
		  -| ['compiler_generated'] )
	      end
	  %% Line 295
	  <_X_Core,_cor71,_cor72,St> when 'true' ->
	      %% Line 297
	      ( case _cor0 of
		  ( <( {'lint',_cor73,_rec13,_cor74,_cor75}
		       -| ['compiler_generated'] )> when 'true' ->
			apply 'add_error'/2
			    ({'illegal_guard',_rec13}, _cor0)
		    -| ['compiler_generated'] )
		  ( <_cor76> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','lint'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'gbitstr'/3 =
    %% Line 309
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'c_bitstr',_cor6,V,S,_cor7,_cor8,_cor9},Def,St> when 'true' ->
	      let <_3229> =
		  %% Line 310
		  [V|[S|[]]]
	      in  let <_3294> =
		      fun (_cor4,_cor3) ->
			  apply 'gexpr'/4
			      (_cor4, _cor1, 1, _cor3)
		  in  call 'lists':'foldl'
			  (_3294, _cor0, _3229)
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'gbitstr',3}}] )
	    -| ['compiler_generated'] )
	end
'is_guard_bif'/2 =
    %% Line 314
    fun (_cor1,_cor0) ->
	let <_4176> =
	    %% Line 315
	    call 'erl_internal':'guard_bif'
		(_cor1, _cor0)
	in  %% Line 316
	    ( case _4176 of
		( <( 'true'
		     -| ['compiler_generated'] )> when 'true' ->
		      'true'
		  -| ['compiler_generated'] )
		( <( 'false'
		     -| ['compiler_generated'] )> when 'true' ->
		      let <_1511> =
			  call 'erl_internal':'arith_op'
			      (_cor1, _cor0)
		      in  %% Line 317
			  ( case _1511 of
			      ( <( 'true'
				   -| ['compiler_generated'] )> when 'true' ->
				    'true'
				-| ['compiler_generated'] )
			      ( <( 'false'
				   -| ['compiler_generated'] )> when 'true' ->
				    let <_3966> =
					call 'erl_internal':'bool_op'
					    (_cor1, _cor0)
				    in  %% Line 318
					( case _3966 of
					    ( <( 'true'
						 -| ['compiler_generated'] )> when 'true' ->
						  'true'
					      -| ['compiler_generated'] )
					    ( <( 'false'
						 -| ['compiler_generated'] )> when 'true' ->
						  call 'erl_internal':'comp_op'
						      (_cor1, _cor0)
					      -| ['compiler_generated'] )
					    ( <_cor4> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {( 'badarg'
							      -| ['compiler_generated'] ),_3966}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <_cor3> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {( 'badarg'
						-| ['compiler_generated'] ),_1511}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		  -| ['compiler_generated'] )
		( <_cor2> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {( 'badarg'
				  -| ['compiler_generated'] ),_4176}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'expr'/4 =
    %% Line 322
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'c_var',_cor48,FA = {_cor49,_cor50}},Def,_X_Rt,St> when 'true' ->
	      %% Line 323
	      apply 'expr_fname'/3
		  (FA, _cor2, _cor0)
	  %% Line 324
	  <{'c_var',_cor51,N},Def,_X_Rt,St> when 'true' ->
	      apply 'expr_var'/3
		  (N, _cor2, _cor0)
	  %% Line 325
	  <{'c_literal',_cor52,_cor53},_X_Def,_X_Rt,St> when 'true' ->
	      _cor0
	  %% Line 326
	  <{'c_cons',_cor54,H,T},Def,_X_Rt,St> when 'true' ->
	      let <_2359> =
		  %% Line 327
		  [H|[T|[]]]
	      in  let <_cor7> =
		      %% Line 392
		      fun (_cor4,_3357) ->
			  apply 'expr'/4
			      (_cor4, _cor2, 1, _3357)
		  in  %% Line 392
		      call 'lists':'foldl'
			  (_cor7, _cor0, _2359)
	  %% Line 328
	  <{'c_tuple',_cor55,Es},Def,_X_Rt,St> when 'true' ->
	      let <_cor7> =
		  %% Line 392
		  fun (_cor4,_4140) ->
		      apply 'expr'/4
			  (_cor4, _cor2, 1, _4140)
	      in  %% Line 392
		  call 'lists':'foldl'
		      (_cor7, _cor0, Es)
	  %% Line 330
	  <{'c_map',_cor56,_cor57,Es},Def,_X_Rt,St> when 'true' ->
	      let <_cor7> =
		  %% Line 392
		  fun (_cor4,_4673) ->
		      apply 'expr'/4
			  (_cor4, _cor2, 1, _4673)
	      in  %% Line 392
		  call 'lists':'foldl'
		      (_cor7, _cor0, Es)
	  %% Line 332
	  <{'c_map_pair',_cor58,_cor59,K,V},Def,_X_Rt,St> when 'true' ->
	      let <_2271> =
		  %% Line 333
		  [K|[V|[]]]
	      in  let <_cor7> =
		      %% Line 392
		      fun (_cor4,_4685) ->
			  apply 'expr'/4
			      (_cor4, _cor2, 1, _4685)
		  in  %% Line 392
		      call 'lists':'foldl'
			  (_cor7, _cor0, _2271)
	  %% Line 334
	  <{'c_binary',_cor60,Ss},Def,_X_Rt,St> when 'true' ->
	      let <_cor7> =
		  %% Line 397
		  fun (_cor4,_5164) ->
		      apply 'bitstr'/3
			  (_cor4, _cor2, _5164)
	      in  %% Line 397
		  call 'lists':'foldl'
		      (_cor7, _cor0, Ss)
	  %% Line 336
	  <{'c_fun',_cor61,Vs,B},Def,Rt,St0> when 'true' ->
	      let <_5112> =
		  %% Line 461
		  apply 'variable_list'/3
		      (Vs, [], _cor0)
	      in  %% Line 337
		  case _5112 of
		    <{Vvs,St1}> when 'true' ->
			let <_cor5> =
			    %% Line 338
			    call 'ordsets':'union'
				(Vvs, _cor2)
			in  let <_cor6> =
				%% Line 338
				apply 'body'/4
				    (B, _cor5, 'any', St1)
			    in  %% Line 338
				apply 'return_match'/3
				    (_cor1, 1, _cor6)
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_5112})
		      -| ['compiler_generated'] )
		  end
	  %% Line 339
	  <{'c_seq',_cor62,Arg,B},Def,Rt,St0> when 'true' ->
	      let <St1> =
		  %% Line 340
		  apply 'expr'/4
		      (Arg, _cor2, 1, _cor0)
	      in  %% Line 341
		  apply 'body'/4
		      (B, _cor2, _cor1, St1)
	  %% Line 342
	  <{'c_let',_cor63,Vs,Arg,B},Def,Rt,St0> when 'true' ->
	      let <_cor8> =
		  %% Line 428
		  case Vs of
		    <[]> when 'true' ->
			'any'
		    %% Line 429
		    <Es> when 'true' ->
			call 'erlang':'length'
			    (Vs)
		  end
	      in  let <St1> =
		      %% Line 343
		      apply 'body'/4
			  (Arg, _cor2, _cor8, _cor0)
		  in  let <_4252> =
			  %% Line 461
			  apply 'variable_list'/3
			      (Vs, [], St1)
		      in  %% Line 344
			  case _4252 of
			    <{Lvs,St2}> when 'true' ->
				let <_cor11> =
				    %% Line 345
				    call 'ordsets':'union'
					(Lvs, _cor2)
				in  %% Line 345
				    apply 'body'/4
					(B, _cor11, _cor1, St2)
			    ( <_cor10> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_4252})
			      -| ['compiler_generated'] )
			  end
	  %% Line 346
	  <{'c_letrec',_cor64,Fs,B},Def0,Rt,St0> when 'true' ->
	      let <_cor5> =
		  fun (_2061,_1562) ->
		      case <_2061,_1562> of
			<{{'c_var',_cor7,IA = {_X_I,_X_A}},_cor8},Def> when 'true' ->
			    call 'ordsets':'add_element'
				(IA, _1562)
			( <_cor4,_3610> when 'true' ->
			      primop 'match_fail'
				  ({'function_clause',_2061,_1562})
			  -| ['compiler_generated'] )
		      end
	      in  let <_cor12> =
		      call 'lists':'foldl'
			  (_cor5, [], Fs)
		  in  let <Def1> =
			  %% Line 347
			  call 'ordsets':'union'
			      (_cor12, _cor2)
		      in  let <_cor7> =
			      fun (_cor4,_641) ->
				  apply 'function'/3
				      (_cor4, Def1, _641)
			  in  let <St1> =
				  call 'lists':'foldl'
				      (_cor7, _cor0, Fs)
			      in  %% Line 349
				  ( case _cor0 of
				      ( <( {'lint',_cor65,_rec16,_cor66,_cor67}
					   -| ['compiler_generated'] )> when 'true' ->
					    case St1 of
					      <{'lint',_cor69,_cor70,_cor71,_cor72}> when 'true' ->
						  let <_cor20> =
						      call 'erlang':'setelement'
							  (3, St1, _rec16)
						  in  apply 'body'/4
							  (B, Def1, _cor1, _cor20)
					      ( <_cor73> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','lint'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					-| ['compiler_generated'] )
				      ( <_cor68> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','lint'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
	  %% Line 350
	  <{'c_case',_cor74,Arg,Cs},Def,Rt,St0> when 'true' ->
	      %% Line 433
	      case Cs of
		<[{'c_clause',_651,Ps,_5000,_cor4}|_cor5]> when 'true' ->
		    let <Pc> =
			call 'erlang':'length'
			    (Ps)
		    in  let <St1> =
			    apply 'body'/4
				(Arg, _cor2, Pc, _cor0)
			in  apply 'clauses'/5
				(Cs, _cor2, Pc, _cor1, St1)
		( <_4364> when 'true' ->
		      primop 'match_fail'
			  ({'function_clause',Cs})
		  -| ['compiler_generated'] )
	      end
	  %% Line 354
	  <{'c_receive',_cor75,Cs,{'c_literal',_cor76,'infinity'},%% Line 355
								  {'c_literal',_cor77,_cor78}},Def,Rt,St> when 'true' ->
	      %% Line 359
	      apply 'clauses'/5
		  (Cs, _cor2, 1, _cor1, _cor0)
	  %% Line 360
	  <{'c_receive',_cor79,Cs,T,A},Def,Rt,St0> when 'true' ->
	      let <St1> =
		  %% Line 361
		  apply 'expr'/4
		      (T, _cor2, 1, _cor0)
	      in  let <St2> =
		      %% Line 362
		      apply 'body'/4
			  (A, _cor2, _cor1, St1)
		  in  %% Line 363
		      apply 'clauses'/5
			  (Cs, _cor2, 1, _cor1, St2)
	  %% Line 364
	  <{'c_apply',_cor80,Op,As},Def,_X_Rt,St0> when 'true' ->
	      let <_cor25> =
		  %% Line 365
		  call 'erlang':'length'
		      (As)
	      in  let <St1> =
		      %% Line 365
		      apply 'apply_op'/4
			  (Op, _cor2, _cor25, _cor0)
		  in  let <_cor7> =
			  %% Line 392
			  fun (_cor4,_1898) ->
			      apply 'expr'/4
				  (_cor4, _cor2, 1, _1898)
		      in  %% Line 392
			  call 'lists':'foldl'
			      (_cor7, St1, As)
	  %% Line 367
	  <{'c_call',_cor81,M,N,As},Def,_X_Rt,St0> when 'true' ->
	      let <St1> =
		  %% Line 368
		  apply 'expr'/4
		      (M, _cor2, 1, _cor0)
	      in  let <St2> =
		      %% Line 369
		      apply 'expr'/4
			  (N, _cor2, 1, St1)
		  in  let <_cor7> =
			  %% Line 392
			  fun (_cor4,_4244) ->
			      apply 'expr'/4
				  (_cor4, _cor2, 1, _4244)
		      in  %% Line 392
			  call 'lists':'foldl'
			      (_cor7, St2, As)
	  %% Line 371
	  <{'c_primop',_cor82,{'c_literal',_cor83,A},As},Def,_X_Rt,St0>
	      when call 'erlang':'is_atom'
		    (A) ->
	      let <_cor7> =
		  %% Line 392
		  fun (_cor4,_5779) ->
		      apply 'expr'/4
			  (_cor4, _cor2, 1, _5779)
	      in  %% Line 392
		  call 'lists':'foldl'
		      (_cor7, _cor0, As)
	  %% Line 373
	  <{'c_catch',_cor84,B},Def,Rt,St> when 'true' ->
	      let <_cor29> =
		  %% Line 374
		  apply 'body'/4
		      (B, _cor2, 1, _cor0)
	      in  %% Line 374
		  apply 'return_match'/3
		      (_cor1, 1, _cor29)
	  %% Line 375
	  <{'c_try',_cor85,A,Vs,B,Evs,H},Def,Rt,St0> when 'true' ->
	      let <_cor33> =
		  %% Line 376
		  case Evs of
		    %% Line 377
		    <[_cor86|[_cor87|[_cor88|[]]]]> when 'true' ->
			_cor0
		    %% Line 378
		    <_cor89> when 'true' ->
			( case _cor0 of
			    ( <( {'lint',_cor90,_rec17,_cor91,_cor92}
				 -| ['compiler_generated'] )> when 'true' ->
				  apply 'add_error'/2
				      ({'illegal_try',_rec17}, _cor0)
			      -| ['compiler_generated'] )
			    ( <_cor93> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','lint'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		  end
	      in  let <_cor35> =
		      %% Line 428
		      case Vs of
			<[]> when 'true' ->
			    'any'
			%% Line 429
			<Es> when 'true' ->
			    call 'erlang':'length'
				(Vs)
		      end
		  in  let <St2> =
			  %% Line 380
			  apply 'body'/4
			      (A, _cor2, _cor35, _cor33)
		      in  let <_4563> =
			      %% Line 461
			      apply 'variable_list'/3
				  (Vs, [], St2)
			  in  %% Line 381
			      case _4563 of
				<{Ns,St3}> when 'true' ->
				    let <_cor38> =
					%% Line 382
					call 'ordsets':'union'
					    (Ns, _cor2)
				    in  let <St4> =
					    %% Line 382
					    apply 'body'/4
						(B, _cor38, _cor1, St3)
					in  let <_6181> =
						%% Line 461
						apply 'variable_list'/3
						    (Evs, [], St4)
					    in  %% Line 383
						case _6181 of
						  <{Ens,St5}> when 'true' ->
						      let <_cor41> =
							  %% Line 384
							  call 'ordsets':'union'
							      (Ens, _cor2)
						      in  %% Line 384
							  apply 'body'/4
							      (H, _cor41, _cor1, St5)
						  ( <_cor40> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_6181})
						    -| ['compiler_generated'] )
						end
				( <_cor37> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_4563})
				  -| ['compiler_generated'] )
			      end
	  %% Line 385
	  <_X_Other,_cor94,_cor95,St> when 'true' ->
	      %% Line 387
	      ( case _cor0 of
		  ( <( {'lint',_cor96,_rec18,_cor97,_cor98}
		       -| ['compiler_generated'] )> when 'true' ->
			apply 'add_error'/2
			    ({'illegal_expr',_rec18}, _cor0)
		    -| ['compiler_generated'] )
		  ( <_cor99> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','lint'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'bitstr'/3 =
    %% Line 399
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'c_bitstr',_cor6,V,S,_cor7,_cor8,_cor9},Def,St> when 'true' ->
	      let <_3198> =
		  %% Line 400
		  [V|[S|[]]]
	      in  let <_5239> =
		      fun (_cor4,_cor3) ->
			  apply 'expr'/4
			      (_cor4, _cor1, 1, _cor3)
		  in  call 'lists':'foldl'
			  (_5239, _cor0, _3198)
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'bitstr',3}}] )
	    -| ['compiler_generated'] )
	end
'apply_op'/4 =
    %% Line 405
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'c_var',_cor9,IA = {_X_I,A}},Def,Ac,St0> when 'true' ->
	      let <_2048> =
		  %% Line 421
		  call 'ordsets':'is_element'
		      (IA, _cor2)
	      in  let <St1> =
		      %% Line 421
		      case _2048 of
			%% Line 422
			<'true'> when 'true' ->
			    _cor0
			%% Line 423
			<'false'> when 'true' ->
			    ( case _cor0 of
				( <( {'lint',_691,_rec20,_cor10,_cor11}
				     -| ['compiler_generated'] )> when 'true' ->
				      apply 'add_error'/2
					  ({'undefined_function',IA,_rec20}, _cor0)
				  -| ['compiler_generated'] )
				( <_cor12> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','lint'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_2048})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 576
		      case <_cor1,A,St1> of
			<N,_cor8,St>
			    when call 'erlang':'=:='
				  (A,
				   _cor1) ->
			    St1
			%% Line 577
			<_X_Req,_X_Sup,St> when 'true' ->
			    %% Line 578
			    ( case St1 of
				( <( {'lint',_3892,_rec30,_cor10,_cor11}
				     -| ['compiler_generated'] )> when 'true' ->
				      apply 'add_error'/2
					  ({'arg_mismatch',_rec30}, St1)
				  -| ['compiler_generated'] )
				( <_cor12> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','lint'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
		      end
	  %% Line 408
	  <E,Def,_cor10,St> when 'true' ->
	      apply 'expr'/4
		  (_cor3, _cor2, 1, _cor0)
	end
'expr_var'/3 =
    %% Line 412
    fun (_cor2,_cor1,_cor0) ->
	let <_477> =
	    %% Line 413
	    call 'ordsets':'is_element'
		(_cor2, _cor1)
	in  %% Line 413
	    case _477 of
	      %% Line 414
	      <'true'> when 'true' ->
		  _cor0
	      %% Line 415
	      <'false'> when 'true' ->
		  ( case _cor0 of
		      ( <( {'lint',_cor9,_rec19,_cor10,_cor11}
			   -| ['compiler_generated'] )> when 'true' ->
			    apply 'add_error'/2
				({'unbound_var',_cor2,_rec19}, _cor0)
			-| ['compiler_generated'] )
		      ( <_cor12> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','lint'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_477})
		-| ['compiler_generated'] )
	    end
'expr_fname'/3 =
    %% Line 420
    fun (_cor2,_cor1,_cor0) ->
	let <_2048> =
	    %% Line 421
	    call 'ordsets':'is_element'
		(_cor2, _cor1)
	in  %% Line 421
	    case _2048 of
	      %% Line 422
	      <'true'> when 'true' ->
		  _cor0
	      %% Line 423
	      <'false'> when 'true' ->
		  ( case _cor0 of
		      ( <( {'lint',_cor9,_rec20,_cor10,_cor11}
			   -| ['compiler_generated'] )> when 'true' ->
			    apply 'add_error'/2
				({'undefined_function',_cor2,_rec20}, _cor0)
			-| ['compiler_generated'] )
		      ( <_cor12> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','lint'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_2048})
		-| ['compiler_generated'] )
	    end
'clauses'/5 =
    %% Line 437
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor9> =
	    %% Line 438
	    fun (_cor6,_cor5) ->
		apply 'clause'/5
		    (_cor6, _cor3, _cor2, _cor1, _cor5)
	in  %% Line 438
	    call 'lists':'foldl'
		(_cor9, _cor0, _cor4)
'clause'/5 =
    %% Line 442
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'c_clause',_cor15,Ps,G,B},Def0,Pc,Rt,St0> when 'true' ->
	      let <_cor5> =
		  %% Line 443
		  call 'erlang':'length'
		      (Ps)
	      in  let <St1> =
		      %% Line 562
		      case <_cor2,_cor5,_cor0> of
			<N,_cor8,St>
			    when call 'erlang':'=:='
				  (_cor5,
				   _cor2) ->
			    _cor0
			%% Line 563
			<_X_Req,_X_Sup,St> when 'true' ->
			    %% Line 564
			    ( case _cor0 of
				( <( {'lint',_cor9,_rec28,_cor10,_cor11}
				     -| ['compiler_generated'] )> when 'true' ->
				      apply 'add_error'/2
					  ({'pattern_mismatch',_rec28}, _cor0)
				  -| ['compiler_generated'] )
				( <_cor12> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','lint'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
		      end
		  in  let <_3537> =
			  %% Line 444
			  apply 'pattern_list'/3
			      (Ps, _cor3, St1)
		      in  %% Line 444
			  case _3537 of
			    <{Pvs,St2}> when 'true' ->
				let <Def1> =
				    %% Line 445
				    call 'ordsets':'union'
					(Pvs, _cor3)
				in  let <St3> =
					%% Line 446
					apply 'guard'/3
					    (G, Def1, St2)
				    in  %% Line 447
					apply 'body'/4
					    (B, Def1, _cor1, St3)
			    ( <_cor7> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_3537})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor14,_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'clause',5}}] )
	    -| ['compiler_generated'] )
	end
'variable'/3 =
    %% Line 451
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'c_var',_cor13,N},Ps,St> when 'true' ->
	      let <_2285> =
		  %% Line 452
		  call 'ordsets':'is_element'
		      (N, _cor1)
	      in  %% Line 452
		  case _2285 of
		    %% Line 453
		    <'true'> when 'true' ->
			( case _cor0 of
			    ( <( {'lint',_cor14,_rec21,_cor15,_cor16}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_cor5> =
				      apply 'add_error'/2
					  ({'duplicate_var',N,_rec21}, _cor0)
				  in  {[],_cor5}
			      -| ['compiler_generated'] )
			    ( <_cor17> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','lint'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    %% Line 454
		    <'false'> when 'true' ->
			{[N|[]],_cor0}
		    ( <_cor6> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_2285})
		      -| ['compiler_generated'] )
		  end
	  %% Line 456
	  <_cor18,Def,St> when 'true' ->
	      ( case _cor0 of
		  ( <( {'lint',_cor19,_rec22,_cor20,_cor21}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor9> =
			    apply 'add_error'/2
				({'not_var',_rec22}, _cor0)
			in  {_cor1,_cor9}
		    -| ['compiler_generated'] )
		  ( <_cor22> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','lint'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'variable_list'/3 =
    %% Line 463
    fun (_cor2,_cor1,_cor0) ->
	let <_cor9> =
	    %% Line 464
	    fun (_cor6,_cor5) ->
		case <_cor6,_cor5> of
		  <V,{Ps0,St0}> when 'true' ->
		      let <_5090> =
			  %% Line 465
			  apply 'variable'/3
			      (_cor6, Ps0, St0)
		      in  %% Line 465
			  case _5090 of
			    <{Vvs,St1}> when 'true' ->
				let <_cor4> =
				    %% Line 466
				    call 'ordsets':'union'
					(Vvs, Ps0)
				in  %% Line 466
				    {_cor4,St1}
			    ( <_cor3> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_5090})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor8,_cor7> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor6,_cor5})
			  -| [{'function_name',{'-variable_list/3-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 464
	    call 'lists':'foldl'
		(_cor9, %% Line 467
			{_cor1,_cor0}, _cor2)
'pattern'/4 =
    %% Line 478
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'c_var',_cor14,N},Def,Ps,St> when 'true' ->
	      %% Line 479
	      apply 'pat_var'/4
		  (N, _cor2, _cor1, _cor0)
	  %% Line 480
	  <{'c_literal',_cor15,_cor16},_X_Def,Ps,St> when 'true' ->
	      {_cor1,_cor0}
	  %% Line 481
	  <{'c_cons',_cor17,H,T},Def,Ps,St> when 'true' ->
	      %% Line 482
	      apply 'pattern_list'/4
		  ([H|[T|[]]], _cor2, _cor1, _cor0)
	  %% Line 483
	  <{'c_tuple',_cor18,Es},Def,Ps,St> when 'true' ->
	      %% Line 484
	      apply 'pattern_list'/4
		  (Es, _cor2, _cor1, _cor0)
	  %% Line 485
	  <{'c_map',_cor19,_cor20,Es},Def,Ps,St> when 'true' ->
	      %% Line 486
	      apply 'pattern_list'/4
		  (Es, _cor2, _cor1, _cor0)
	  %% Line 487
	  <{'c_map_pair',_cor21,{'c_literal',_cor22,'exact'},K,V},Def,Ps,St> when 'true' ->
	      %% Line 488
	      apply 'pattern_list'/4
		  ([K|[V|[]]], _cor2, _cor1, _cor0)
	  %% Line 489
	  <{'c_binary',_cor23,Ss},Def,Ps,St0> when 'true' ->
	      let <St> =
		  %% Line 490
		  apply 'pat_bin_tail_check'/2
		      (Ss, _cor0)
	      in  %% Line 491
		  apply 'pat_bin'/4
		      (Ss, _cor2, _cor1, St)
	  %% Line 492
	  <{'c_alias',_cor24,V,P},Def,Ps,St0> when 'true' ->
	      let <_1296> =
		  %% Line 493
		  apply 'variable'/3
		      (V, _cor1, _cor0)
	      in  %% Line 493
		  case _1296 of
		    <{Vvs,St1}> when 'true' ->
			let <_cor6> =
			    %% Line 494
			    call 'ordsets':'union'
				(Vvs, _cor1)
			in  %% Line 494
			    apply 'pattern'/4
				(P, _cor2, _cor6, St1)
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1296})
		      -| ['compiler_generated'] )
		  end
	  %% Line 495
	  <_X_Other,_cor25,Ps,St> when 'true' ->
	      %% Line 497
	      ( case _cor0 of
		  ( <( {'lint',_cor26,_rec23,_cor27,_cor28}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor9> =
			    apply 'add_error'/2
				({'not_pattern',_rec23}, _cor0)
			in  {_cor1,_cor9}
		    -| ['compiler_generated'] )
		  ( <_cor29> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','lint'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'pat_var'/4 =
    %% Line 499
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_163> =
	    %% Line 500
	    call 'ordsets':'is_element'
		(_cor3, _cor1)
	in  %% Line 500
	    case _163 of
	      %% Line 501
	      <'true'> when 'true' ->
		  ( case _cor0 of
		      ( <( {'lint',_cor13,_rec24,_cor14,_cor15}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_cor6> =
				apply 'add_error'/2
				    ({'duplicate_var',_cor3,_rec24}, _cor0)
			    in  {_cor1,_cor6}
			-| ['compiler_generated'] )
		      ( <_cor16> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','lint'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      %% Line 502
	      <'false'> when 'true' ->
		  let <_cor7> =
		      call 'ordsets':'add_element'
			  (_cor3, _cor1)
		  in  {_cor7,_cor0}
	      ( <_cor8> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_163})
		-| ['compiler_generated'] )
	    end
'pat_bin'/4 =
    %% Line 507
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor8> =
	    %% Line 508
	    fun (_cor5,_cor4) ->
		case <_cor5,_cor4> of
		  <E,{Ps,Def,St}> when 'true' ->
		      %% Line 509
		      apply 'pat_segment'/4
			  (_cor5, Def, Ps, St)
		  ( <_cor7,_cor6> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor5,_cor4})
			  -| [{'function_name',{'-pat_bin/4-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  let <_2617> =
		%% Line 508
		call 'lists':'foldl'
		    (_cor8, %% Line 510
			    {_cor1,_cor2,_cor0}, _cor3)
	    in  %% Line 508
		case _2617 of
		  <{Ps,_cor14,St}> when 'true' ->
		      %% Line 511
		      {Ps,St}
		  ( <_cor9> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_2617})
		    -| ['compiler_generated'] )
		end
'pat_segment'/4 =
    %% Line 513
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'c_bitstr',_cor16,V,S,_cor17,T,_cor18},Def0,Ps0,St0> when 'true' ->
	      let <St1> =
		  %% Line 514
		  apply 'pat_bit_expr'/4
		      (S, T, _cor2, _cor0)
	      in  let <_2040> =
		      %% Line 515
		      apply 'pattern'/4
			  (V, _cor2, _cor1, St1)
		  in  %% Line 515
		      case _2040 of
			<{Ps,St2}> when 'true' ->
			    let <_cor7> =
				%% Line 516
				case V of
				  %% Line 517
				  <{'c_var',_cor19,Name}> when 'true' ->
				      call 'ordsets':'add_element'
					  (Name, _cor2)
				  %% Line 518
				  <_cor20> when 'true' ->
				      _cor2
				end
			    in  %% Line 520
				{Ps,_cor7,St2}
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_2040})
			  -| ['compiler_generated'] )
		      end
	  %% Line 521
	  <_cor21,Def,Ps,St> when 'true' ->
	      %% Line 522
	      ( case _cor0 of
		  ( <( {'lint',_cor22,_rec25,_cor23,_cor24}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor11> =
			    apply 'add_error'/2
				({'not_bs_pattern',_rec25}, _cor0)
			in  {_cor1,_cor2,_cor11}
		    -| ['compiler_generated'] )
		  ( <_cor25> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','lint'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'pat_bin_tail_check'/2 =
    %% Line 528
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'c_bitstr',_cor6,_cor7,{'c_literal',_cor8,'all'},_cor9,_cor10,_cor11}|[]],St> when 'true' ->
	      _cor0
	  %% Line 531
	  <[{'c_bitstr',_cor12,_cor13,{'c_literal',_cor14,'all'},_cor15,_cor16,_cor17}|_cor18],St> when 'true' ->
	      %% Line 532
	      ( case _cor0 of
		  ( <( {'lint',_cor19,_rec26,_cor20,_cor21}
		       -| ['compiler_generated'] )> when 'true' ->
			apply 'add_error'/2
			    ({'tail_segment_not_at_end',_rec26}, _cor0)
		    -| ['compiler_generated'] )
		  ( <_cor22> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','lint'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 533
	  <[_cor23|Ss],St> when 'true' ->
	      %% Line 534
	      apply 'pat_bin_tail_check'/2
		  (Ss, _cor0)
	  %% Line 535
	  <[],St> when 'true' ->
	      _cor0
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'pat_bin_tail_check',2}}] )
	    -| ['compiler_generated'] )
	end
'pat_bit_expr'/4 =
    %% Line 541
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'c_var',_cor10,N},_cor11,Def,St> when 'true' ->
	      apply 'expr_var'/3
		  (N, _cor1, _cor0)
	  %% Line 542
	  <{'c_literal',_cor12,_cor13},_cor14,_cor15,St> when 'true' ->
	      _cor0
	  %% Line 543
	  <{'c_binary',_cor16,_cor17},_cor18,_X_Def,St> when 'true' ->
	      _cor0
	  %% Line 548
	  <_cor19,_cor20,_cor21,St> when 'true' ->
	      %% Line 549
	      ( case _cor0 of
		  ( <( {'lint',_cor22,_rec27,_cor23,_cor24}
		       -| ['compiler_generated'] )> when 'true' ->
			apply 'add_error'/2
			    ({'illegal_expr',_rec27}, _cor0)
		    -| ['compiler_generated'] )
		  ( <_cor25> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','lint'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'pattern_list'/3 =
    %% Line 554
    fun (_cor2,_cor1,_cor0) ->
	apply 'pattern_list'/4
	    (_cor2, _cor1, [], _cor0)
'pattern_list'/4 =
    %% Line 556
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor8> =
	    %% Line 557
	    fun (_cor5,_cor4) ->
		case <_cor5,_cor4> of
		  <P,{Ps,St}> when 'true' ->
		      apply 'pattern'/4
			  (_cor5, _cor2, Ps, St)
		  ( <_cor7,_cor6> when 'true' ->
			( primop 'match_fail'
			      ({'function_clause',_cor5,_cor4})
			  -| [{'function_name',{'-pattern_list/4-fun-0-',2}}] )
		    -| ['compiler_generated'] )
		end
	in  %% Line 557
	    call 'lists':'foldl'
		(_cor8, {_cor1,_cor0}, _cor3)
'return_match'/3 =
    %% Line 569
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'any',_X_Sup,St> when 'true' ->
	      _cor0
	  %% Line 570
	  <N,_cor8,St>
	      when call 'erlang':'=:='
		    (_cor1,
		     _cor2) ->
	      _cor0
	  %% Line 571
	  <_X_Req,_X_Sup,St> when 'true' ->
	      %% Line 572
	      ( case _cor0 of
		  ( <( {'lint',_cor9,_rec29,_cor10,_cor11}
		       -| ['compiler_generated'] )> when 'true' ->
			apply 'add_error'/2
			    ({'return_mismatch',_rec29}, _cor0)
		    -| ['compiler_generated'] )
		  ( <_cor12> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','lint'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('core_lint')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('core_lint', _cor0)
end