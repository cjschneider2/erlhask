module 'compile' ['compile'/3,
		  'compile_asm'/3,
		  'compile_beam'/3,
		  'compile_core'/3,
		  'file'/1,
		  'file'/2,
		  'format_error'/1,
		  'forms'/1,
		  'forms'/2,
		  'iofile'/1,
		  'module_info'/0,
		  'module_info'/1,
		  'noenv_file'/2,
		  'noenv_forms'/2,
		  'noenv_output_generated'/1,
		  'options'/0,
		  'output_generated'/1]
    attributes [%% Line 32
		'export_type' =
		    %% Line 32
		    [{'option',0}],
		%% Line 22
		'type' =
		    %% Line 22
		    [{{'record','options'},[{'typed_record_field',{'record_field',23,{'atom',23,'includes'},{'nil',23}},{'type',23,'list',[{'remote_type',23,[{'atom',23,'file'}|[{'atom',23,'filename'}|[[]]]]}]}}|[{'typed_record_field',{'record_field',25,{'atom',25,'outdir'},{'string',25,[46]}},{'remote_type',25,[{'atom',25,'file'}|[{'atom',25,'filename'}|[[]]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'output_type'},{'atom',27,'undefined'}},{'type',27,'atom',[]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'defines'},{'nil',28}},{'type',28,'list',[{'type',28,'union',[{'type',28,'atom',[]}|[{'type',28,'tuple',[{'type',28,'atom',[]}|[{'var',28,'_'}]]}]]}]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'warning'},{'integer',32,1}},{'type',32,'non_neg_integer',[]}}|[{'typed_record_field',{'record_field',35,{'atom',35,'verbose'},{'atom',35,'false'}},{'type',35,'boolean',[]}}|[{'record_field',36,{'atom',36,'optimize'},{'integer',36,999}}|[{'typed_record_field',{'record_field',37,{'atom',37,'specific'},{'nil',37}},{'type',37,'list',[{'var',37,'_'}]}}|[{'typed_record_field',{'record_field',38,{'atom',38,'outfile'},{'string',38,[]}},{'remote_type',38,[{'atom',38,'file'}|[{'atom',38,'filename'}|[[]]]]}}|[{'typed_record_field',{'record_field',40,{'atom',40,'cwd'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'remote_type',40,[{'atom',40,'file'}|[{'atom',40,'filename'}|[[]]]]}]]}}]]]]]]]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{{'record','c_alias'},[{'record_field',31,{'atom',31,'anno'},{'nil',31}}|[{'record_field',31,{'atom',31,'var'}}|[{'record_field',32,{'atom',32,'pat'}}]]],[]}],
		%% Line 34
		'type' =
		    %% Line 34
		    [{{'record','c_apply'},[{'record_field',34,{'atom',34,'anno'},{'nil',34}}|[{'record_field',34,{'atom',34,'op'}}|[{'record_field',35,{'atom',35,'args'}}]]],[]}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{{'record','c_binary'},[{'record_field',37,{'atom',37,'anno'},{'nil',37}}|[{'typed_record_field',{'record_field',37,{'atom',37,'segments'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'type',37,'list',[{'remote_type',37,[{'atom',37,'cerl'}|[{'atom',37,'c_bitstr'}|[[]]]]}]}]]}}]],[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{{'record','c_bitstr'},[{'record_field',39,{'atom',39,'anno'},{'nil',39}}|[{'record_field',39,{'atom',39,'val'}}|[{'record_field',40,{'atom',40,'size'}}|[{'record_field',41,{'atom',41,'unit'}}|[{'record_field',42,{'atom',42,'type'}}|[{'record_field',43,{'atom',43,'flags'}}]]]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','c_call'},[{'record_field',45,{'atom',45,'anno'},{'nil',45}}|[{'record_field',45,{'atom',45,'module'}}|[{'record_field',46,{'atom',46,'name'}}|[{'record_field',47,{'atom',47,'args'}}]]]],[]}],
		%% Line 49
		'type' =
		    %% Line 49
		    [{{'record','c_case'},[{'record_field',49,{'atom',49,'anno'},{'nil',49}}|[{'record_field',49,{'atom',49,'arg'}}|[{'record_field',50,{'atom',50,'clauses'}}]]],[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{{'record','c_catch'},[{'record_field',52,{'atom',52,'anno'},{'nil',52}}|[{'record_field',52,{'atom',52,'body'}}]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{{'record','c_clause'},[{'record_field',54,{'atom',54,'anno'},{'nil',54}}|[{'record_field',54,{'atom',54,'pats'}}|[{'record_field',55,{'atom',55,'guard'}}|[{'record_field',56,{'atom',56,'body'}}]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','c_cons'},[{'record_field',58,{'atom',58,'anno'},{'nil',58}}|[{'record_field',58,{'atom',58,'hd'}}|[{'record_field',59,{'atom',59,'tl'}}]]],[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','c_fun'},[{'record_field',61,{'atom',61,'anno'},{'nil',61}}|[{'record_field',61,{'atom',61,'vars'}}|[{'record_field',62,{'atom',62,'body'}}]]],[]}],
		%% Line 64
		'type' =
		    %% Line 64
		    [{{'record','c_let'},[{'record_field',64,{'atom',64,'anno'},{'nil',64}}|[{'record_field',64,{'atom',64,'vars'}}|[{'record_field',65,{'atom',65,'arg'}}|[{'record_field',66,{'atom',66,'body'}}]]]],[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{{'record','c_letrec'},[{'record_field',68,{'atom',68,'anno'},{'nil',68}}|[{'record_field',68,{'atom',68,'defs'}}|[{'record_field',69,{'atom',69,'body'}}]]],[]}],
		%% Line 71
		'type' =
		    %% Line 71
		    [{{'record','c_literal'},[{'record_field',71,{'atom',71,'anno'},{'nil',71}}|[{'record_field',71,{'atom',71,'val'}}]],[]}],
		%% Line 73
		'type' =
		    %% Line 73
		    [{{'record','c_map'},[{'record_field',73,{'atom',73,'anno'},{'nil',73}}|[{'typed_record_field',{'record_field',74,{'atom',74,'arg'},{'record',74,'c_literal',[{'record_field',74,{'atom',74,'val'},{'map',74,[]}}]}},{'type',74,'union',[{'remote_type',74,[{'atom',74,'cerl'}|[{'atom',74,'c_var'}|[[]]]]}|[{'remote_type',74,[{'atom',74,'cerl'}|[{'atom',74,'c_literal'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'es'}},{'type',75,'union',[{'atom',75,'undefined'}|[{'type',75,'list',[{'remote_type',75,[{'atom',75,'cerl'}|[{'atom',75,'c_map_pair'}|[[]]]]}]}]]}}]]],[]}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{{'record','c_map_pair'},[{'record_field',77,{'atom',77,'anno'},{'nil',77}}|[{'typed_record_field',{'record_field',78,{'atom',78,'op'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'record',[{'atom',78,'c_literal'}|[{'type',78,'field_type',[{'atom',78,'val'}|[{'atom',78,'assoc'}]]}]]}|[{'type',78,'record',[{'atom',78,'c_literal'}|[{'type',78,'field_type',[{'atom',78,'val'}|[{'atom',78,'exact'}]]}]]}]]]}}|[{'record_field',79,{'atom',79,'key'}}|[{'record_field',80,{'atom',80,'val'}}]]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{{'record','c_module'},[{'record_field',82,{'atom',82,'anno'},{'nil',82}}|[{'record_field',82,{'atom',82,'name'}}|[{'record_field',83,{'atom',83,'exports'}}|[{'record_field',84,{'atom',84,'attrs'}}|[{'record_field',85,{'atom',85,'defs'}}]]]]],[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{{'record','c_primop'},[{'record_field',87,{'atom',87,'anno'},{'nil',87}}|[{'record_field',87,{'atom',87,'name'}}|[{'record_field',88,{'atom',88,'args'}}]]],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{{'record','c_receive'},[{'record_field',90,{'atom',90,'anno'},{'nil',90}}|[{'record_field',90,{'atom',90,'clauses'}}|[{'record_field',91,{'atom',91,'timeout'}}|[{'record_field',92,{'atom',92,'action'}}]]]],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{{'record','c_seq'},[{'record_field',94,{'atom',94,'anno'},{'nil',94}}|[{'record_field',94,{'atom',94,'arg'}}|[{'record_field',95,{'atom',95,'body'}}]]],[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','c_try'},[{'record_field',97,{'atom',97,'anno'},{'nil',97}}|[{'record_field',97,{'atom',97,'arg'}}|[{'record_field',98,{'atom',98,'vars'}}|[{'record_field',99,{'atom',99,'body'}}|[{'record_field',100,{'atom',100,'evars'}}|[{'record_field',101,{'atom',101,'handler'}}]]]]]],[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','c_tuple'},[{'record_field',103,{'atom',103,'anno'},{'nil',103}}|[{'record_field',103,{'atom',103,'es'}}]],[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{{'record','c_values'},[{'record_field',105,{'atom',105,'anno'},{'nil',105}}|[{'record_field',105,{'atom',105,'es'}}]],[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','c_var'},[{'record_field',107,{'atom',107,'anno'},{'nil',107}}|[{'typed_record_field',{'record_field',107,{'atom',107,'name'}},{'type',107,'union',[{'atom',107,'undefined'}|[{'remote_type',107,[{'atom',107,'cerl'}|[{'atom',107,'var_name'}|[[]]]]}]]}}]],[]}],
		%% Line 42
		'type' =
		    %% Line 42
		    [{'option',{'type',42,'union',[{'type',42,'atom',[]}|[{'type',42,'tuple',[{'type',42,'atom',[]}|[{'type',42,'term',[]}]]}|[{'type',42,'tuple',[{'atom',42,'d'}|[{'type',42,'atom',[]}|[{'type',42,'term',[]}]]]}]]]},[]}],
		%% Line 44
		'type' =
		    %% Line 44
		    [{'err_info',{'type',44,'tuple',[{'type',44,'union',[{'remote_type',44,[{'atom',44,'erl_scan'}|[{'atom',44,'line'}|[[]]]]}|[{'atom',44,'none'}]]}|[{'type',45,'module',[]}|[{'type',45,'term',[]}]]]},[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{'errors',{'type',46,'list',[{'type',46,'tuple',[{'remote_type',46,[{'atom',46,'file'}|[{'atom',46,'filename'}|[[]]]]}|[{'type',46,'list',[{'type',46,'err_info',[]}]}]]}]},[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{'warnings',{'type',47,'list',[{'type',47,'tuple',[{'remote_type',47,[{'atom',47,'file'}|[{'atom',47,'filename'}|[[]]]]}|[{'type',47,'list',[{'type',47,'err_info',[]}]}]]}]},[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{'mod_ret',{'type',48,'union',[{'type',48,'tuple',[{'atom',48,'ok'}|[{'type',48,'module',[]}]]}|[{'type',49,'tuple',[{'atom',49,'ok'}|[{'type',49,'module',[]}|[{'remote_type',49,[{'atom',49,'cerl'}|[{'atom',49,'c_module'}|[[]]]]}]]]}|[{'type',50,'tuple',[{'atom',50,'ok'}|[{'type',50,'module',[]}|[{'type',50,'warnings',[]}]]]}]]]},[]}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{'bin_ret',{'type',51,'union',[{'type',51,'tuple',[{'atom',51,'ok'}|[{'type',51,'module',[]}|[{'type',51,'binary',[]}]]]}|[{'type',52,'tuple',[{'atom',52,'ok'}|[{'type',52,'module',[]}|[{'type',52,'binary',[]}|[{'type',52,'warnings',[]}]]]]}]]},[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{'err_ret',{'type',53,'union',[{'atom',53,'error'}|[{'type',53,'tuple',[{'atom',53,'error'}|[{'type',53,'errors',[]}|[{'type',53,'warnings',[]}]]]}]]},[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{'comp_ret',{'type',54,'union',[{'type',54,'mod_ret',[]}|[{'type',54,'bin_ret',[]}|[{'type',54,'err_ret',[]}]]]},[]}],
		%% Line 69
		'spec' =
		    %% Line 69
		    [{{'file',1},[{'type',69,'fun',[{'type',69,'product',[{'type',69,'union',[{'type',69,'module',[]}|[{'remote_type',69,[{'atom',69,'file'}|[{'atom',69,'filename'}|[[]]]]}]]}]}|[{'type',69,'comp_ret',[]}]]}]}],
		%% Line 73
		'spec' =
		    %% Line 73
		    [{{'file',2},[{'type',73,'fun',[{'type',73,'product',[{'type',73,'union',[{'type',73,'module',[]}|[{'remote_type',73,[{'atom',73,'file'}|[{'atom',73,'filename'}|[[]]]]}]]}|[{'type',73,'union',[{'type',73,'list',[{'type',73,'option',[]}]}|[{'type',73,'option',[]}]]}]]}|[{'type',73,'comp_ret',[]}]]}]}],
		%% Line 91
		'spec' =
		    %% Line 91
		    [{{'output_generated',1},[{'type',91,'fun',[{'type',91,'product',[{'type',91,'list',[{'type',91,'option',[]}]}]}|[{'type',91,'boolean',[]}]]}]}],
		%% Line 101
		'spec' =
		    %% Line 101
		    [{{'noenv_file',2},[{'type',101,'fun',[{'type',101,'product',[{'type',101,'union',[{'type',101,'module',[]}|[{'remote_type',101,[{'atom',101,'file'}|[{'atom',101,'filename'}|[[]]]]}]]}|[{'type',101,'union',[{'type',101,'list',[{'type',101,'option',[]}]}|[{'type',101,'option',[]}]]}]]}|[{'type',101,'comp_ret',[]}]]}]}],
		%% Line 113
		'spec' =
		    %% Line 113
		    [{{'noenv_output_generated',1},[{'type',113,'fun',[{'type',113,'product',[{'type',113,'list',[{'type',113,'option',[]}]}]}|[{'type',113,'boolean',[]}]]}]}],
		%% Line 256
		'type' =
		    %% Line 256
		    [{{'record','compile'},[{'typed_record_field',{'record_field',256,{'atom',256,'filename'},{'string',256,[]}},{'remote_type',256,[{'atom',256,'file'}|[{'atom',256,'filename'}|[[]]]]}}|[{'typed_record_field',{'record_field',257,{'atom',257,'dir'},{'string',257,[]}},{'remote_type',257,[{'atom',257,'file'}|[{'atom',257,'filename'}|[[]]]]}}|[{'typed_record_field',{'record_field',258,{'atom',258,'base'},{'string',258,[]}},{'remote_type',258,[{'atom',258,'file'}|[{'atom',258,'filename'}|[[]]]]}}|[{'typed_record_field',{'record_field',259,{'atom',259,'ifile'},{'string',259,[]}},{'remote_type',259,[{'atom',259,'file'}|[{'atom',259,'filename'}|[[]]]]}}|[{'typed_record_field',{'record_field',260,{'atom',260,'ofile'},{'string',260,[]}},{'remote_type',260,[{'atom',260,'file'}|[{'atom',260,'filename'}|[[]]]]}}|[{'record_field',261,{'atom',261,'module'},{'nil',261}}|[{'record_field',262,{'atom',262,'code'},{'nil',262}}|[{'record_field',263,{'atom',263,'core_code'},{'nil',263}}|[{'record_field',264,{'atom',264,'abstract_code'},{'nil',264}}|[{'typed_record_field',{'record_field',265,{'atom',265,'options'},{'nil',265}},{'type',265,'list',[{'type',265,'option',[]}]}}|[{'typed_record_field',{'record_field',266,{'atom',266,'mod_options'},{'nil',266}},{'type',266,'list',[{'type',266,'option',[]}]}}|[{'typed_record_field',{'record_field',267,{'atom',267,'encoding'},{'atom',267,'none'}},{'type',267,'union',[{'atom',267,'none'}|[{'remote_type',267,[{'atom',267,'epp'}|[{'atom',267,'source_encoding'}|[[]]]]}]]}}|[{'record_field',268,{'atom',268,'errors'},{'nil',268}}|[{'record_field',269,{'atom',269,'warnings'},{'nil',269}}]]]]]]]]]]]]]],[]}],
		%% Line 711
		'type' =
		    %% Line 711
		    [{{'record','asm_module'},[{'record_field',711,{'atom',711,'module'}}|[{'record_field',712,{'atom',712,'exports'}}|[{'record_field',713,{'atom',713,'labels'}}|[{'record_field',714,{'atom',714,'functions'},{'nil',714}}|[{'record_field',715,{'atom',715,'cfun'}}|[{'record_field',716,{'atom',716,'code'}}|[{'record_field',717,{'atom',717,'attributes'},{'nil',717}}]]]]]]],[]}],
		%% Line 1628
		'spec' =
		    %% Line 1628
		    [{{'options',0},[{'type',1628,'fun',[{'type',1628,'product',[]}|[{'atom',1628,'ok'}]]}]}]]
'file'/1 =
    %% Line 71
    fun (_cor0) ->
	apply 'file'/2
	    (_cor0, ['verbose'|['report_errors'|['report_warnings']]])
'file'/2 =
    %% Line 75
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <File,Opts>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      let <_cor2> =
		  %% Line 76
		  apply 'env_default_opts'/0
		      ()
	      in  let <_cor3> =
		      %% Line 76
		      call 'erlang':'++'
			  (_cor0, _cor2)
		  in  %% Line 76
		      apply 'do_compile'/2
			  ({'file',_cor1}, _cor3)
	  %% Line 77
	  <File,Opt> when 'true' ->
	      %% Line 78
	      apply 'file'/2
		  (_cor1, [_cor0|['verbose'|['report_errors'|['report_warnings']]]])
	end
'forms'/1 =
    %% Line 80
    fun (_cor0) ->
	apply 'forms'/2
	    (_cor0, ['verbose'|['report_errors'|['report_warnings']]])
'forms'/2 =
    %% Line 82
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Forms,Opts>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      let <_cor2> =
		  %% Line 83
		  apply 'env_default_opts'/0
		      ()
	      in  let <_cor3> =
		      %% Line 83
		      call 'erlang':'++'
			  (_cor0, _cor2)
		  in  %% Line 83
		      apply 'do_compile'/2
			  ({'forms',_cor1}, ['binary'|_cor3])
	  %% Line 84
	  <Forms,Opt>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      %% Line 85
	      apply 'forms'/2
		  (_cor1, [_cor0|['verbose'|['report_errors'|['report_warnings']]]])
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'forms',2}}] )
	    -| ['compiler_generated'] )
	end
'output_generated'/1 =
    %% Line 93
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 94
	    apply 'env_default_opts'/0
		()
	in  let <_cor2> =
		%% Line 94
		call 'erlang':'++'
		    (_cor0, _cor1)
	    in  %% Line 94
		apply 'noenv_output_generated'/1
		    (_cor2)
'noenv_file'/2 =
    %% Line 103
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <File,Opts>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 104
	      apply 'do_compile'/2
		  ({'file',_cor1}, _cor0)
	  %% Line 105
	  <File,Opt> when 'true' ->
	      %% Line 106
	      apply 'noenv_file'/2
		  (_cor1, [_cor0|['verbose'|['report_errors'|['report_warnings']]]])
	end
'noenv_forms'/2 =
    %% Line 108
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Forms,Opts>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 109
	      apply 'do_compile'/2
		  ({'forms',_cor1}, ['binary'|_cor0])
	  %% Line 110
	  <Forms,Opt>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      %% Line 111
	      apply 'noenv_forms'/2
		  (_cor1, [_cor0|['verbose'|['report_errors'|['report_warnings']]]])
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'noenv_forms',2}}] )
	    -| ['compiler_generated'] )
	end
'noenv_output_generated'/1 =
    %% Line 115
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 116
	    apply 'expand_opts'/1
		(_cor0)
	in  let <_2413> =
		%% Line 116
		apply 'passes'/2
		    ('file', _cor1)
	    in  %% Line 116
		case _2413 of
		  <{_cor7,Passes}> when 'true' ->
		      let <_cor5> =
			  %% Line 117
			  fun (_cor3) ->
			      case _cor3 of
				<{'save_binary',_X_T,_X_F}> when 'true' ->
				    'true'
				%% Line 118
				<_X_Other> when 'true' ->
				    'false'
			      end
		      in  %% Line 117
			  call 'lists':'any'
			      (_cor5, Passes)
		  ( <_cor2> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_2413})
		    -| ['compiler_generated'] )
		end
'env_default_opts'/0 =
    %% Line 128
    fun () ->
	let <_2067> =
	    %% Line 130
	    call 'os':'getenv'
		([69|[82|[76|[95|[67|[79|[77|[80|[73|[76|[69|[82|[95|[79|[80|[84|[73|[79|[78|[83]]]]]]]]]]]]]]]]]]]])
	in  %% Line 130
	    case _2067 of
	      %% Line 131
	      <'false'> when 'true' ->
		  []
	      %% Line 132
	      <Str>
		  when call 'erlang':'is_list'
			(_2067) ->
		  let <_998> =
		      %% Line 133
		      call 'erl_scan':'string'
			  (_2067)
		  in  %% Line 133
		      case _998 of
			%% Line 134
			<{'ok',Tokens,_cor5}> when 'true' ->
			    let <_cor1> =
				%% Line 135
				call 'erlang':'++'
				    (Tokens, [{'dot',1}])
			    in  let <_10700> =
				    %% Line 135
				    call 'erl_parse':'parse_term'
					(_cor1)
				in  %% Line 135
				    case _10700 of
				      %% Line 136
				      <{'ok',List}>
					  when call 'erlang':'is_list'
						(List) ->
					  List
				      %% Line 137
				      <{'ok',Term}> when 'true' ->
					  [Term|[]]
				      %% Line 138
				      <{'error',_X_Reason}> when 'true' ->
					  do  %% Line 139
					      call 'io':'format'
						  ([73|[103|[110|[111|[114|[105|[110|[103|[32|[98|[97|[100|[32|[116|[101|[114|[109|[32|[105|[110|[32|[126|[115|[10]]]]]]]]]]]]]]]]]]]]]]]], [[69|[82|[76|[95|[67|[79|[77|[80|[73|[76|[69|[82|[95|[79|[80|[84|[73|[79|[78|[83]]]]]]]]]]]]]]]]]]]]])
					      %% Line 140
					      []
				      ( <_cor2> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_10700})
					-| ['compiler_generated'] )
				    end
			%% Line 142
			<{'error',{_cor6,_cor7,_X_Reason},_cor8}> when 'true' ->
			    do  %% Line 143
				call 'io':'format'
				    ([73|[103|[110|[111|[114|[105|[110|[103|[32|[98|[97|[100|[32|[116|[101|[114|[109|[32|[105|[110|[32|[126|[115|[10]]]]]]]]]]]]]]]]]]]]]]]], [[69|[82|[76|[95|[67|[79|[77|[80|[73|[76|[69|[82|[95|[79|[80|[84|[73|[79|[78|[83]]]]]]]]]]]]]]]]]]]]])
				%% Line 144
				[]
			( <_cor3> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_998})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_2067})
		-| ['compiler_generated'] )
	    end
'do_compile'/2 =
    %% Line 148
    fun (_cor1,_cor0) ->
	let <Opts> =
	    %% Line 149
	    apply 'expand_opts'/1
		(_cor0)
	in  let <_cor8> =
		%% Line 151
		fun () ->
		    let <_cor7> =
			%% Line 152
			try
			    %% Line 153
			    apply 'internal'/2
				(_cor1, Opts)
			of <_cor3> ->
			    _cor3
			catch <_cor6,_cor5,_cor4> ->
			    case <_cor6,_cor5,_cor4> of
			      %% Line 155
			      <'error',Reason,_cor12> when 'true' ->
				  %% Line 156
				  {'error',_cor5}
			      ( <_551,_10693,_6086> when 'true' ->
				    primop 'raise'
					(_cor4, _cor5)
				-| ['compiler_generated'] )
			    end
		    in  %% Line 152
			call 'erlang':'exit'
			    (_cor7)
	    in  let <_11458> =
		    %% Line 151
		    call 'erlang':'spawn_monitor'
			(_cor8)
		in  %% Line 150
		    case _11458 of
		      <{Pid,Ref}> when 'true' ->
			  %% Line 159
			  receive
			    %% Line 160
			    <{'DOWN',_cor13,'process',_cor14,Rep}>
				when let <_cor15> =
				      call 'erlang':'=:='
					  (_cor13, Ref)
				  in  let <_cor16> =
					  call 'erlang':'=:='
					      (_cor14, Pid)
				      in  call 'erlang':'and'
					      (_cor15, _cor16) ->
				Rep
			  after 'infinity' ->
			    'true'
		      ( <_cor9> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_11458})
			-| ['compiler_generated'] )
		    end
'expand_opts'/1 =
    %% Line 163
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 165
	    call 'proplists':'get_value'
		('debug_info_key', _cor0)
	in  let <_cor2> =
		%% Line 166
		call 'proplists':'get_value'
		    ('encrypt_debug_info', _cor0)
	    in  let <_cor1> =
		    %% Line 167
		    call 'proplists':'get_bool'
			('debug_info', _cor0)
		in  let <_cor5> =
			%% Line 165
			case <_cor3,_cor2,_cor1> of
			  %% Line 168
			  <'undefined','undefined',_cor8> when 'true' ->
			      _cor0
			  %% Line 169
			  <_cor9,_cor10,'false'> when 'true' ->
			      ['debug_info'|_cor0]
			  %% Line 170
			  <_cor11,_cor12,_cor13> when 'true' ->
			      _cor0
			end
		    in  %% Line 172
			call 'lists':'foldr'
			    ('expand_opt'/2, [], _cor5)
'expand_opt'/2 =
    %% Line 174
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'basic_validation',Os> when 'true' ->
	      %% Line 175
	      ['no_code_generation'|['to_pp'|['binary'|_cor0]]]
	  %% Line 176
	  <'strong_validation',Os> when 'true' ->
	      %% Line 177
	      ['no_code_generation'|['to_kernel'|['binary'|_cor0]]]
	  %% Line 178
	  <'report',Os> when 'true' ->
	      %% Line 179
	      ['report_errors'|['report_warnings'|_cor0]]
	  %% Line 180
	  <'return',Os> when 'true' ->
	      %% Line 181
	      ['return_errors'|['return_warnings'|_cor0]]
	  %% Line 182
	  <'r12',Os> when 'true' ->
	      %% Line 183
	      ['no_recv_opt'|['no_line_info'|_cor0]]
	  %% Line 184
	  <'r13',Os> when 'true' ->
	      %% Line 185
	      ['no_recv_opt'|['no_line_info'|_cor0]]
	  %% Line 186
	  <'r14',Os> when 'true' ->
	      %% Line 187
	      ['no_line_info'|_cor0]
	  %% Line 188
	  <O = {'debug_info_key',_cor4},Os> when 'true' ->
	      %% Line 189
	      ['encrypt_debug_info'|[_cor1|_cor0]]
	  %% Line 190
	  <'no_float_opt',Os> when 'true' ->
	      %% Line 192
	      ['no_topt'|_cor0]
	  %% Line 193
	  <O,Os> when 'true' ->
	      [_cor1|_cor0]
	end
'format_error'/1 =
    %% Line 197
    fun (_cor0) ->
	case _cor0 of
	  <'no_native_support'> when 'true' ->
	      %% Line 198
	      [116|[104|[105|[115|[32|[115|[121|[115|[116|[101|[109|[32|[105|[115|[32|[110|[111|[116|[32|[99|[111|[110|[102|[105|[103|[117|[114|[101|[100|[32|[102|[111|[114|[32|[110|[97|[116|[105|[118|[101|[45|[99|[111|[100|[101|[32|[99|[111|[109|[112|[105|[108|[97|[116|[105|[111|[110|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
	  %% Line 199
	  <'no_crypto'> when 'true' ->
	      %% Line 200
	      [116|[104|[105|[115|[32|[115|[121|[115|[116|[101|[109|[32|[105|[115|[32|[110|[111|[116|[32|[99|[111|[110|[102|[105|[103|[117|[114|[101|[100|[32|[119|[105|[116|[104|[32|[99|[114|[121|[112|[116|[111|[32|[115|[117|[112|[112|[111|[114|[116|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
	  %% Line 201
	  <'bad_crypto_key'> when 'true' ->
	      %% Line 202
	      [105|[110|[118|[97|[108|[105|[100|[32|[99|[114|[121|[112|[116|[111|[32|[107|[101|[121|[46]]]]]]]]]]]]]]]]]]]
	  %% Line 203
	  <'no_crypto_key'> when 'true' ->
	      %% Line 204
	      [110|[111|[32|[99|[114|[121|[112|[116|[111|[32|[107|[101|[121|[32|[115|[117|[112|[112|[108|[105|[101|[100|[46]]]]]]]]]]]]]]]]]]]]]]]
	  %% Line 205
	  <{'native',E}> when 'true' ->
	      %% Line 206
	      call 'io_lib':'fwrite'
		  ([110|[97|[116|[105|[118|[101|[45|[99|[111|[100|[101|[32|[99|[111|[109|[112|[105|[108|[97|[116|[105|[111|[110|[32|[102|[97|[105|[108|[101|[100|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[58|[32|[126|[116|[80|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 207
																																				     [E|[25]])
	  %% Line 208
	  <{'native_crash',E,Stk}> when 'true' ->
	      %% Line 209
	      call 'io_lib':'fwrite'
		  ([110|[97|[116|[105|[118|[101|[45|[99|[111|[100|[101|[32|[99|[111|[109|[112|[105|[108|[97|[116|[105|[111|[110|[32|[99|[114|[97|[115|[104|[101|[100|[32|[119|[105|[116|[104|[32|[114|[101|[97|[115|[111|[110|[58|[32|[126|[116|[80|[46|[10|[126|[116|[80|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 210
																																								     [E|[25|[Stk|[25]]]])
	  %% Line 211
	  <{'open',E}> when 'true' ->
	      let <_cor1> =
		  %% Line 212
		  call 'file':'format_error'
		      (E)
	      in  %% Line 212
		  call 'io_lib':'format'
		      ([111|[112|[101|[110|[32|[101|[114|[114|[111|[114|[32|[39|[126|[116|[115|[39]]]]]]]]]]]]]]]], [_cor1|[]])
	  %% Line 213
	  <{'epp',E}> when 'true' ->
	      %% Line 214
	      call 'epp':'format_error'
		  (E)
	  %% Line 215
	  <'write_error'> when 'true' ->
	      %% Line 216
	      [101|[114|[114|[111|[114|[32|[119|[114|[105|[116|[105|[110|[103|[32|[102|[105|[108|[101]]]]]]]]]]]]]]]]]]
	  %% Line 217
	  <{'rename',From,To,Error}> when 'true' ->
	      let <_cor2> =
		  %% Line 219
		  call 'file':'format_error'
		      (Error)
	      in  %% Line 218
		  call 'io_lib':'format'
		      ([102|[97|[105|[108|[101|[100|[32|[116|[111|[32|[114|[101|[110|[97|[109|[101|[32|[126|[116|[115|[32|[116|[111|[32|[126|[116|[115|[58|[32|[126|[116|[115]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 219
																									       [From|[To|[_cor2|[]]]])
	  %% Line 220
	  <{'delete',File,Error}> when 'true' ->
	      let <_cor3> =
		  %% Line 222
		  call 'file':'format_error'
		      (Error)
	      in  %% Line 221
		  call 'io_lib':'format'
		      ([102|[97|[105|[108|[101|[100|[32|[116|[111|[32|[100|[101|[108|[101|[116|[101|[32|[102|[105|[108|[101|[32|[126|[116|[115|[58|[32|[126|[116|[115]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 222
																								     [File|[_cor3|[]]])
	  %% Line 223
	  <{'delete_temp',File,Error}> when 'true' ->
	      let <_cor4> =
		  %% Line 225
		  call 'file':'format_error'
		      (Error)
	      in  %% Line 224
		  call 'io_lib':'format'
		      ([102|[97|[105|[108|[101|[100|[32|[116|[111|[32|[100|[101|[108|[101|[116|[101|[32|[116|[101|[109|[112|[111|[114|[97|[114|[121|[32|[102|[105|[108|[101|[32|[126|[116|[115|[58|[32|[126|[116|[115]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 225
																															       [File|[_cor4|[]]])
	  %% Line 226
	  <{'parse_transform',M,R}> when 'true' ->
	      %% Line 227
	      call 'io_lib':'format'
		  ([101|[114|[114|[111|[114|[32|[105|[110|[32|[112|[97|[114|[115|[101|[32|[116|[114|[97|[110|[115|[102|[111|[114|[109|[32|[39|[126|[115|[39|[58|[32|[126|[116|[112]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [M|[R|[]]])
	  %% Line 228
	  <{'undef_parse_transform',M}> when 'true' ->
	      %% Line 229
	      call 'io_lib':'format'
		  ([117|[110|[100|[101|[102|[105|[110|[101|[100|[32|[112|[97|[114|[115|[101|[32|[116|[114|[97|[110|[115|[102|[111|[114|[109|[32|[39|[126|[115|[39]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [M|[]])
	  %% Line 230
	  <{'core_transform',M,R}> when 'true' ->
	      %% Line 231
	      call 'io_lib':'format'
		  ([101|[114|[114|[111|[114|[32|[105|[110|[32|[99|[111|[114|[101|[32|[116|[114|[97|[110|[115|[102|[111|[114|[109|[32|[39|[126|[115|[39|[58|[32|[126|[116|[112]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [M|[R|[]]])
	  %% Line 232
	  <{'crash',Pass,Reason}> when 'true' ->
	      let <_cor5> =
		  %% Line 233
		  apply 'format_error_reason'/1
		      (Reason)
	      in  %% Line 233
		  call 'io_lib':'format'
		      ([105|[110|[116|[101|[114|[110|[97|[108|[32|[101|[114|[114|[111|[114|[32|[105|[110|[32|[126|[112|[59|[10|[99|[114|[97|[115|[104|[32|[114|[101|[97|[115|[111|[110|[58|[32|[126|[116|[115]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Pass|[_cor5|[]]])
	  %% Line 234
	  <{'bad_return',Pass,Reason}> when 'true' ->
	      let <_cor6> =
		  %% Line 235
		  apply 'format_error_reason'/1
		      (Reason)
	      in  %% Line 235
		  call 'io_lib':'format'
		      ([105|[110|[116|[101|[114|[110|[97|[108|[32|[101|[114|[114|[111|[114|[32|[105|[110|[32|[126|[112|[59|[10|[98|[97|[100|[32|[114|[101|[116|[117|[114|[110|[32|[118|[97|[108|[117|[101|[58|[32|[126|[116|[115]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Pass|[_cor6|[]]])
	  %% Line 236
	  <{'module_name',Mod,Filename}> when 'true' ->
	      %% Line 237
	      call 'io_lib':'format'
		  ([77|[111|[100|[117|[108|[101|[32|[110|[97|[109|[101|[32|[39|[126|[115|[39|[32|[100|[111|[101|[115|[32|[110|[111|[116|[32|[109|[97|[116|[99|[104|[32|[102|[105|[108|[101|[32|[110|[97|[109|[101|[32|[39|[126|[116|[115|[39]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Mod|[Filename|[]]])
	  %% Line 238
	  <'reparsing_invalid_unicode'> when 'true' ->
	      %% Line 239
	      [78|[111|[110|[45|[85|[84|[70|[45|[56|[32|[99|[104|[97|[114|[97|[99|[116|[101|[114|[40|[115|[41|[32|[100|[101|[116|[101|[99|[116|[101|[100|[44|[32|[98|[117|[116|[32|[110|[111|[32|[101|[110|[99|[111|[100|[105|[110|[103|[32|[100|[101|[99|[108|[97|[114|[101|[100|[46|[32|[69|[110|[99|[111|[100|[101|[32|[116|[104|[101|[32|[102|[105|[108|[101|[32|[105|[110|[32|[85|[84|[70|[45|[56|[32|[111|[114|[32|[97|[100|[100|[32|[34|[37|[37|[32|[99|[111|[100|[105|[110|[103|[58|[32|[108|[97|[116|[105|[110|[45|[49|[34|[32|[97|[116|[32|[116|[104|[101|[32|[98|[101|[103|[105|[110|[110|[105|[110|[103|[32|[111|[102|[32|[116|[104|[101|[32|[102|[105|[108|[101|[46|[32|[82|[101|[116|[114|[121|[105|[110|[103|[32|[119|[105|[116|[104|[32|[108|[97|[116|[105|[110|[45|[49|[32|[101|[110|[99|[111|[100|[105|[110|[103|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
	  ( <_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'format_error',1}}] )
	    -| ['compiler_generated'] )
	end
'format_error_reason'/1 =
    %% Line 241
    fun (_cor0) ->
	case _cor0 of
	  <{Reason,Stack}>
	      when call 'erlang':'is_list'
		    (Stack) ->
	      let <StackFun> =
		  %% Line 242
		  fun (_cor3,_cor2,_cor1) ->
		      case <_cor3,_cor2,_cor1> of
			%% Line 243
			<'escript','run',2> when 'true' ->
			    'true'
			%% Line 244
			<'escript','start',1> when 'true' ->
			    'true'
			%% Line 245
			<'init','start_it',1> when 'true' ->
			    'true'
			%% Line 246
			<'init','start_em',1> when 'true' ->
			    'true'
			%% Line 247
			<_X_Mod,_X_Fun,_X_Arity> when 'true' ->
			    'false'
		      end
	      in  let <FormatFun> =
		      %% Line 249
		      fun (_cor9,_cor8) ->
			  call 'io_lib':'format'
			      ([126|[116|[112]]], [_cor9|[]])
		  in  let <_cor13> =
			  %% Line 250
			  call 'io_lib':'format'
			      ([126|[116|[112]]], [Reason|[]])
		      in  let <_cor14> =
			      %% Line 251
			      call 'lib':'format_stacktrace'
				  (1, Stack, StackFun, FormatFun)
			  in  %% Line 250
			      [_cor13|[[10|[10]]|%% Line 251
						 [_cor14|[]]]]
	  %% Line 252
	  <Reason> when 'true' ->
	      %% Line 253
	      call 'io_lib':'format'
		  ([126|[116|[112]]], [_cor0|[]])
	end
'internal'/2 =
    %% Line 271
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'forms',Forms},Opts0> when 'true' ->
	      let <_7527> =
		  %% Line 272
		  apply 'passes'/2
		      ('forms', _cor0)
	      in  %% Line 272
		  case _7527 of
		    <{_cor10,Ps}> when 'true' ->
			let <Source> =
			    %% Line 273
			    call 'proplists':'get_value'
				('source', _cor0, [])
			in  let <Opts1> =
				%% Line 274
				call 'proplists':'delete'
				    ('source', _cor0)
			    in  let <Compile> =
				    %% Line 275
				    {'compile',[],[],[],[],[],[],Forms,[],[],Opts1,Opts1,'none',[],[]}
				in  %% Line 276
				    apply 'internal_comp'/4
					(Ps, Source, [], Compile)
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_7527})
		      -| ['compiler_generated'] )
		  end
	  %% Line 277
	  <{'file',File},Opts> when 'true' ->
	      let <_8852> =
		  %% Line 278
		  apply 'passes'/2
		      ('file', _cor0)
	      in  %% Line 278
		  case _8852 of
		    <{Ext,Ps}> when 'true' ->
			let <Compile> =
			    %% Line 279
			    {'compile',[],[],[],[],[],[],[],[],[],_cor0,_cor0,'none',[],[]}
			in  %% Line 280
			    apply 'internal_comp'/4
				(Ps, File, Ext, Compile)
		    ( <_cor6> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_8852})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'internal',2}}] )
	    -| ['compiler_generated'] )
	end
'internal_comp'/4 =
    %% Line 282
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <Dir> =
	    %% Line 283
	    call 'filename':'dirname'
		(_cor2)
	in  let <Base> =
		%% Line 284
		call 'filename':'basename'
		    (_cor2, _cor1)
	    in  let <_rec0> =
		    %% Line 1538
		    case <Dir,Base,_cor1> of
		      <[46],_4035,Suffix> when 'true' ->
			  %% Line 1539
			  call 'erlang':'++'
			      (Base, _cor1)
		      %% Line 1540
		      <_2593,_2456,Suffix> when 'true' ->
			  let <_329> =
			      %% Line 1541
			      call 'erlang':'++'
				  (Base, _cor1)
			  in  %% Line 1541
			      call 'filename':'join'
				  (Dir, _329)
		    end
		in  let <_rec1> =
			%% Line 287
			apply 'objfile'/2
			    (Base, _cor0)
		    in  %% Line 285
			case _cor0 of
			  <{'compile',_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43}> when 'true' ->
			      let <_cor9> =
				  %% Line 287
				  call 'erlang':'setelement'
				      (6, _cor0, _rec1)
			      in  let <_cor10> =
				      %% Line 286
				      call 'erlang':'setelement'
					  (5, _cor9, _rec0)
				  in  let <_cor11> =
					  call 'erlang':'setelement'
					      (4, _cor10, Base)
				      in  let <_cor12> =
					      call 'erlang':'setelement'
						  (3, _cor11, Dir)
					  in  let <_cor14> =
						  call 'erlang':'setelement'
						      (2, _cor12, _cor2)
					      in  %% Line 288
						  ( case _cor14 of
						      ( <( {'compile',_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_rec3,_cor54,_cor55,_cor56,_cor57}
							   -| ['compiler_generated'] )> when 'true' ->
							    let <_12202> =
								call 'lists':'member'
								    ('time', _rec3)
							    in  let <_cor23> =
								    case _12202 of
								      %% Line 289
								      <'true'> when 'true' ->
									  do  %% Line 290
									      call 'io':'format'
										  ([67|[111|[109|[112|[105|[108|[105|[110|[103|[32|[126|[116|[112|[10]]]]]]]]]]]]]], [_cor2|[]])
									      'run_tc'/2
								      %% Line 292
								      <'false'> when 'true' ->
									  fun (_cor19,_cor18) ->
									      case <_cor19,_cor18> of
										<{_X_Name,Fun},St> when 'true' ->
										    catch
											apply Fun
											    (_cor18)
										( <_cor21,_cor20> when 'true' ->
										      ( primop 'match_fail'
											    ({'function_clause',_cor19,_cor18})
											-| [{'function_name',{'-internal_comp/4-fun-1-',2}}] )
										  -| ['compiler_generated'] )
									      end
								      ( <_cor22> when 'true' ->
									    primop 'match_fail'
										({'case_clause',_12202})
									-| ['compiler_generated'] )
								    end
								in  let <_3722> =
									%% Line 294
									apply 'fold_comp'/3
									    (_cor3, _cor23, _cor14)
								    in  %% Line 294
									case _3722 of
									  %% Line 295
									  <{'ok',St2}> when 'true' ->
									      apply 'comp_ret_ok'/1
										  (St2)
									  %% Line 296
									  <{'error',St2}> when 'true' ->
									      apply 'comp_ret_err'/1
										  (St2)
									  ( <_cor25> when 'true' ->
										primop 'match_fail'
										    ({'case_clause',_3722})
									    -| ['compiler_generated'] )
									end
							-| ['compiler_generated'] )
						      ( <_cor58> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','compile'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
						    -| ['compiler_generated'] )
			  ( <_cor44> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','compile'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
'fold_comp'/3 =
    %% Line 299
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{'delay',Ps0}|Passes],Run,St = {'compile',_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,Opts,_cor37,_cor38,_cor39,_cor40}> when 'true' ->
	      let <_cor3> =
		  %% Line 300
		  apply 'select_passes'/2
		      (Ps0, Opts)
	      in  let <Ps> =
		      %% Line 300
		      call 'erlang':'++'
			  (_cor3, Passes)
		  in  %% Line 301
		      apply 'fold_comp'/3
			  (Ps, _cor1, _cor0)
	  %% Line 302
	  <[{Name,Test,Pass}|Ps],Run,St> when 'true' ->
	      let <_11327> =
		  %% Line 303
		  apply Test
		      (_cor0)
	      in  %% Line 303
		  case _11327 of
		    %% Line 304
		    <'false'> when 'true' ->
			%% Line 305
			apply 'fold_comp'/3
			    (Ps, _cor1, _cor0)
		    %% Line 306
		    <'true'> when 'true' ->
			%% Line 307
			apply 'fold_comp'/3
			    ([{Name,Pass}|Ps], _cor1, _cor0)
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_11327})
		      -| ['compiler_generated'] )
		  end
	  %% Line 309
	  <[{Name,Pass}|Ps],Run,St0> when 'true' ->
	      let <_6544> =
		  %% Line 310
		  apply _cor1
		      ({Name,Pass}, _cor0)
	      in  %% Line 310
		  case _6544 of
		    %% Line 311
		    <{'ok',St1}> when 'true' ->
			apply 'fold_comp'/3
			    (Ps, _cor1, St1)
		    %% Line 312
		    <Error = {'error',_X_St1}> when 'true' ->
			_6544
		    %% Line 313
		    <{'EXIT',Reason}> when 'true' ->
			%% Line 314
			( case _cor0 of
			    ( <( {'compile',_cor41,_cor42,_cor43,_rec4,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <Es> =
				      [{_rec4,[{'none','compile',{'crash',Name,Reason}}|[]]}|[]]
				  in  let <_rec5> =
					  %% Line 315
					  call 'erlang':'++'
					      (_cor52, Es)
				      in  let <_cor14> =
					      %% Line 315
					      call 'erlang':'setelement'
						  (14, _cor0, _rec5)
					  in  %% Line 315
					      {'error',_cor14}
			      -| ['compiler_generated'] )
			    ( <_cor54> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','compile'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    %% Line 316
		    <Other> when 'true' ->
			%% Line 317
			( case _cor0 of
			    ( <( {'compile',_cor84,_cor85,_cor86,_rec8,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <Es> =
				      [{_rec8,[{'none','compile',{'bad_return',Name,_6544}}|[]]}|[]]
				  in  let <_rec9> =
					  %% Line 318
					  call 'erlang':'++'
					      (_cor95, Es)
				      in  let <_cor23> =
					      %% Line 318
					      call 'erlang':'setelement'
						  (14, _cor0, _rec9)
					  in  %% Line 318
					      {'error',_cor23}
			      -| ['compiler_generated'] )
			    ( <_cor97> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','compile'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		  end
	  %% Line 320
	  <[],_X_Run,St> when 'true' ->
	      {'ok',_cor0}
	  ( <_cor27,_cor26,_cor25> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'fold_comp',3}}] )
	    -| ['compiler_generated'] )
	end
'run_tc'/2 =
    %% Line 322
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{Name,Fun},St> when 'true' ->
	      let <Before0> =
		  %% Line 323
		  call 'erlang':'statistics'
		      ('runtime')
	      in  let <_cor3> =
		      catch
			  %% Line 324
			  apply Fun
			      (_cor0)
		  in  let <After0> =
			  %% Line 325
			  call 'erlang':'statistics'
			      ('runtime')
		      in  %% Line 326
			  case Before0 of
			    <{Before_c,_cor18}> when 'true' ->
				%% Line 327
				case After0 of
				  <{After_c,_cor19}> when 'true' ->
				      let <_cor9> =
					  %% Line 328
					  call 'erts_debug':'flat_size'
					      (_cor3)
				      in  let <_cor8> =
					      %% Line 328
					      call 'erlang':'system_info'
						  ('wordsize')
					  in  let <Mem0> =
						  %% Line 328
						  call 'erlang':'*'
						      (_cor9, _cor8)
					      in  let <_cor11> =
						      %% Line 329
						      call 'erlang':'/'
							  (Mem0, 1024)
						  in  let <_cor12> =
							  %% Line 329
							  call 'io_lib':'format'
							      ([126|[46|[49|[102|[32|[107|[66]]]]]]], [_cor11|[]])
						      in  let <Mem> =
							      %% Line 329
							      call 'lists':'flatten'
								  (_cor12)
							  in  let <_cor14> =
								  %% Line 331
								  call 'erlang':'-'
								      (After_c, Before_c)
							      in  let <_cor15> =
								      %% Line 331
								      call 'erlang':'/'
									  (_cor14, 1000)
								  in  do  %% Line 330
									  call 'io':'format'
									      ([32|[126|[45|[51|[48|[115|[58|[32|[126|[49|[48|[46|[50|[102|[32|[115|[32|[126|[49|[50|[115|[10]]]]]]]]]]]]]]]]]]]]]], %% Line 331
																								     [Name|[_cor15|[Mem|[]]]])
									  _cor3
				  ( <_cor7> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',After0})
				    -| ['compiler_generated'] )
				end
			    ( <_cor6> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',Before0})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'run_tc',2}}] )
	    -| ['compiler_generated'] )
	end
'comp_ret_ok'/1 =
    %% Line 334
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor18,_cor19,_cor20,_cor21,_cor22,Mod,Code,_cor23,_cor24,Opts,_cor25,_cor26,_cor27,Warn0}> when 'true' ->
	      let <_7578> =
		  %% Line 335
		  apply 'werror'/1
		      (_cor0)
	      in  %% Line 335
		  case _7578 of
		    %% Line 336
		    <'true'> when 'true' ->
			do  let <_868> =
				%% Line 337
				call 'lists':'member'
				    ('report_warnings', Opts)
			    in  %% Line 337
				case _868 of
				  %% Line 338
				  <'true'> when 'true' ->
				      %% Line 339
				      call 'io':'format'
					  ([126|[112|[58|[32|[119|[97|[114|[110|[105|[110|[103|[115|[32|[98|[101|[105|[110|[103|[32|[116|[114|[101|[97|[116|[101|[100|[32|[97|[115|[32|[101|[114|[114|[111|[114|[115|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 340
																															       ['compile'])
				  %% Line 341
				  <'false'> when 'true' ->
				      'ok'
				  ( <_cor1> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_868})
				    -| ['compiler_generated'] )
				end
			    %% Line 344
			    apply 'comp_ret_err'/1
				(_cor0)
		    %% Line 345
		    <'false'> when 'true' ->
			let <Warn> =
			    %% Line 346
			    apply 'messages_per_file'/1
				(Warn0)
			in  let <_cor5> =
				%% Line 347
				call 'erlang':'setelement'
				    (15, _cor0, Warn)
			    in  do  %% Line 347
				    apply 'report_warnings'/1
					(_cor5)
				    let <_8426> =
					%% Line 348
					call 'lists':'member'
					    ('binary', Opts)
				    in  let <_cor9> =
					    %% Line 348
					    ( case _8426 of
						( <( 'true'
						     -| ['compiler_generated'] )> when 'true' ->
						      let <_cor7> =
							  %% Line 349
							  call 'lists':'member'
							      ('no_code_generation', Opts)
						      in  %% Line 349
							  call 'erlang':'not'
							      (_cor7)
						  -| ['compiler_generated'] )
						( <( 'false'
						     -| ['compiler_generated'] )> when 'true' ->
						      'false'
						  -| ['compiler_generated'] )
						( <_cor6> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {( 'badarg'
								  -| ['compiler_generated'] ),_8426}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					in  let <_cor11> =
						%% Line 348
						case _cor9 of
						  %% Line 350
						  <'true'> when 'true' ->
						      [Code|[]]
						  %% Line 351
						  <'false'> when 'true' ->
						      []
						  ( <_cor10> when 'true' ->
							primop 'match_fail'
							    ({'case_clause',_cor9})
						    -| ['compiler_generated'] )
						end
					    in  let <_10996> =
						    %% Line 353
						    call 'lists':'member'
							('return_warnings', Opts)
						in  let <_cor14> =
							%% Line 353
							case _10996 of
							  %% Line 354
							  <'true'> when 'true' ->
							      call 'erlang':'++'
								  (_cor11, [Warn|[]])
							  %% Line 355
							  <'false'> when 'true' ->
							      _cor11
							  ( <_cor13> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_10996})
							    -| ['compiler_generated'] )
							end
						    in  %% Line 357
							call 'erlang':'list_to_tuple'
							    (['ok'|[Mod|_cor14]])
		    ( <_cor16> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_7578})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'comp_ret_ok',1}}] )
	    -| ['compiler_generated'] )
	end
'comp_ret_err'/1 =
    %% Line 360
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,Opts,_cor20,_cor21,Err0,Warn0}> when 'true' ->
	      let <Warn> =
		  %% Line 361
		  apply 'messages_per_file'/1
		      (Warn0)
	      in  let <Err> =
		      %% Line 362
		      apply 'messages_per_file'/1
			  (Err0)
		  in  let <_cor5> =
			  %% Line 363
			  call 'erlang':'setelement'
			      (14, _cor0, Err)
		      in  do  %% Line 363
			      apply 'report_errors'/1
				  (_cor5)
			      let <_cor8> =
				  %% Line 364
				  call 'erlang':'setelement'
				      (15, _cor0, Warn)
			      in  do  %% Line 364
				      apply 'report_warnings'/1
					  (_cor8)
				      let <_10227> =
					  %% Line 365
					  call 'lists':'member'
					      ('return_errors', Opts)
				      in  %% Line 365
					  case _10227 of
					    %% Line 366
					    <'true'> when 'true' ->
						{'error',Err,Warn}
					    %% Line 367
					    <'false'> when 'true' ->
						'error'
					    ( <_cor9> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_10227})
					      -| ['compiler_generated'] )
					  end
	  ( <_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'comp_ret_err',1}}] )
	    -| ['compiler_generated'] )
	end
'not_werror'/1 =
    %% Line 370
    fun (_cor0) ->
	let <_cor1> =
	    apply 'werror'/1
		(_cor0)
	in  call 'erlang':'not'
		(_cor1)
'werror'/1 =
    %% Line 372
    fun (_cor0) ->
	case _cor0 of
	  <{'compile',_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,Opts,_cor13,_cor14,_cor15,Ws}> when 'true' ->
	      %% Line 373
	      ( case <> of
		  ( <>
			when call 'erlang':'=/='
			      (Ws,
			       []) ->
			call 'lists':'member'
			    ('warnings_as_errors', Opts)
		    -| ['compiler_generated'] )
		  ( <> when 'true' ->
			'false'
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'werror',1}}] )
	    -| ['compiler_generated'] )
	end
'messages_per_file'/1 =
    %% Line 376
    fun (_cor0) ->
	let <_cor8> =
	    %% Line 377
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[{File,Messages}|_cor2]> when 'true' ->
				( letrec
				      'lc$^1'/1 =
					  fun (_cor6) ->
					      case _cor6 of
						<[M|_cor4]> when 'true' ->
						    let <_cor7> =
							apply 'lc$^1'/1
							    (_cor4)
						    in  ( [{File,M}|_cor7]
							  -| ['compiler_generated'] )
						<[]> when 'true' ->
						    apply 'lc$^0'/1
							(_cor2)
						( <_2517> when 'true' ->
						      ( primop 'match_fail'
							    ({'function_clause',_cor6})
							-| [{'function_name',{'lc$^1',1}}] )
						  -| ['compiler_generated'] )
					      end
				  in  case Messages of
					<[M|_cor4]> when 'true' ->
					    let <_cor7> =
						apply 'lc$^1'/1
						    (_cor4)
					    in  ( [{File,M}|_cor7]
						  -| ['compiler_generated'] )
					<[]> when 'true' ->
					    apply 'lc$^0'/1
						(_cor2)
					( <_2517> when 'true' ->
					      primop 'match_fail'
						  ({'function_clause',Messages})
					  -| ['compiler_generated'] )
				      end
				  -| ['list_comprehension'] )
			    ( <[_cor1|_cor2]> when 'true' ->
				  apply 'lc$^0'/1
				      (_cor2)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_5925> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (_cor0)
	      -| ['list_comprehension'] )
	in  let <T> =
		%% Line 377
		call 'lists':'sort'
		    (_cor8)
	    in  let <_cor18> =
		    %% Line 380
		    fun (_cor15,_cor14) ->
			let <_cor13> =
			    %% Line 381
			    fun (_cor11) ->
				case _cor11 of
				  <{_cor28,{_cor29,Mod,_cor30}}> when 'true' ->
				      call 'erlang':'=:='
					  (Mod, _cor15)
				  %% Line 382
				  <_cor31> when 'true' ->
				      'false'
				end
			in  %% Line 381
			    call 'lists':'partition'
				(_cor13, _cor14)
		in  let <_3754> =
			%% Line 380
			call 'lists':'mapfoldl'
			    (_cor18, T, ['erl_scan'|['epp'|['erl_parse']]])
		    in  %% Line 379
			case _3754 of
			  <{Prio0,Rest}> when 'true' ->
			      let <_cor25> =
				  %% Line 385
				  fun (_cor22,_cor21) ->
				      case <_cor22,_cor21> of
					<{_cor32,{L1,_cor33,_cor34}},{_cor35,{L2,_cor36,_cor37}}> when 'true' ->
					    call 'erlang':'=<'
						(L1, L2)
					( <_cor24,_cor23> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor22,_cor21})
						-| [{'function_name',{'-messages_per_file/1-fun-2-',2}}] )
					  -| ['compiler_generated'] )
				      end
			      in  let <_cor20> =
				      %% Line 386
				      call 'lists':'append'
					  (Prio0)
				  in  let <Prio> =
					  %% Line 385
					  call 'lists':'sort'
					      (_cor25, _cor20)
				      in  %% Line 387
					  call 'lists':'flatmap'
					      ('mpf'/1, [Prio|[Rest|[]]])
			  ( <_cor19> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_3754})
			    -| ['compiler_generated'] )
			end
'mpf'/1 =
    %% Line 389
    fun (_cor0) ->
	%% Line 390
	( letrec
	      'lc$^1'/1 =
		  fun (_cor9) ->
		      case _cor9 of
			<[File|_cor2]> when 'true' ->
			    let <_cor14> =
				( letrec
				      'lc$^2'/1 =
					  fun (_cor12) ->
					      case _cor12 of
						<[{F,M}|_cor11]>
						    when call 'erlang':'=:='
							  (F,
							   File) ->
						    let <_cor13> =
							apply 'lc$^2'/1
							    (_cor11)
						    in  ( [M|_cor13]
							  -| ['compiler_generated'] )
						( <[_cor10|_cor11]> when 'true' ->
						      apply 'lc$^2'/1
							  (_cor11)
						  -| ['compiler_generated'] )
						<[]> when 'true' ->
						    []
						( <_3683> when 'true' ->
						      ( primop 'match_fail'
							    ({'function_clause',_cor12})
							-| [{'function_name',{'lc$^2',1}}] )
						  -| ['compiler_generated'] )
					      end
				  in  apply 'lc$^2'/1
					  (_cor0)
				  -| ['list_comprehension'] )
			    in  let <_cor15> =
				    %% Line 391
				    apply 'lc$^1'/1
					(_cor2)
				in  ( [{File,_cor14}|_cor15]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_2060> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor9})
				-| [{'function_name',{'lc$^1',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_cor7> =
		  %% Line 391
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor5) ->
				case _cor5 of
				  <[{F,_cor17}|_cor4]> when 'true' ->
				      let <_cor6> =
					  apply 'lc$^0'/1
					      (_cor4)
				      in  ( [F|_cor6]
					    -| ['compiler_generated'] )
				  ( <[_cor3|_cor4]> when 'true' ->
					apply 'lc$^0'/1
					    (_cor4)
				    -| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_3091> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor5})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  case _cor0 of
			  <[{F,_cor17}|_cor4]> when 'true' ->
			      let <_cor6> =
				  apply 'lc$^0'/1
				      (_cor4)
			      in  ( [F|_cor6]
				    -| ['compiler_generated'] )
			  ( <[_cor3|_cor4]> when 'true' ->
				apply 'lc$^0'/1
				    (_cor4)
			    -| ['compiler_generated'] )
			  <[]> when 'true' ->
			      []
			  ( <_3091> when 'true' ->
				primop 'match_fail'
				    ({'function_clause',_cor0})
			    -| ['compiler_generated'] )
			end
		    -| ['list_comprehension'] )
	      in  let <_cor8> =
		      %% Line 391
		      call 'lists':'usort'
			  (_cor7)
		  in  case _cor8 of
			<[File|_cor2]> when 'true' ->
			    let <_cor14> =
				( letrec
				      'lc$^2'/1 =
					  fun (_cor12) ->
					      case _cor12 of
						<[{F,M}|_cor11]>
						    when call 'erlang':'=:='
							  (F,
							   File) ->
						    let <_cor13> =
							apply 'lc$^2'/1
							    (_cor11)
						    in  ( [M|_cor13]
							  -| ['compiler_generated'] )
						( <[_cor10|_cor11]> when 'true' ->
						      apply 'lc$^2'/1
							  (_cor11)
						  -| ['compiler_generated'] )
						<[]> when 'true' ->
						    []
						( <_3683> when 'true' ->
						      primop 'match_fail'
							  ({'function_clause',_cor12})
						  -| ['compiler_generated'] )
					      end
				  in  apply 'lc$^2'/1
					  (_cor0)
				  -| ['list_comprehension'] )
			    in  let <_cor15> =
				    %% Line 391
				    apply 'lc$^1'/1
					(_cor2)
				in  ( [{File,_cor14}|_cor15]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_2060> when 'true' ->
			      primop 'match_fail'
				  ({'function_clause',_cor8})
			  -| ['compiler_generated'] )
		      end
	  -| ['list_comprehension'] )
'passes'/2 =
    %% Line 397
    fun (_cor1,_cor0) ->
	let <_8992> =
	    %% Line 398
	    apply 'passes_1'/1
		(_cor0)
	in  %% Line 398
	    case _8992 of
	      <{Ext,Passes0}> when 'true' ->
		  let <_cor4> =
		      %% Line 399
		      case _cor1 of
			%% Line 400
			<'file'> when 'true' ->
			    Passes0
			%% Line 401
			<'forms'> when 'true' ->
			    call 'erlang':'tl'
				(Passes0)
			( <_cor3> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor1})
			  -| ['compiler_generated'] )
		      end
		  in  let <Passes> =
			  %% Line 403
			  apply 'select_passes'/2
			      (_cor4, _cor0)
		      in  let <_3216> =
			      %% Line 408
			      call 'lists':'last'
				  (Passes)
			  in  let <_cor9> =
				  %% Line 408
				  case _3216 of
				    %% Line 409
				    <{'save_binary',_X_TestFun,_X_Fun}> when 'true' ->
					%% Line 410
					case Passes of
					  %% Line 411
					  <[{'read_beam_file',_cor12}|_cor13]> when 'true' ->
					      Passes
					  %% Line 415
					  <_cor14> when 'true' ->
					      %% Line 416
					      [{'remove_file','remove_file'/1}|Passes]
					end
				    %% Line 418
				    <_cor15> when 'true' ->
					Passes
				  end
			      in  %% Line 408
				  {Ext,_cor9}
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_8992})
		-| ['compiler_generated'] )
	    end
'passes_1'/1 =
    %% Line 422
    fun (_cor0) ->
	case _cor0 of
	  <[Opt|Opts]> when 'true' ->
	      let <_3943> =
		  %% Line 423
		  apply 'pass'/1
		      (Opt)
	      in  %% Line 423
		  case _3943 of
		    %% Line 424
		    <Res = {_cor4,_cor5}> when 'true' ->
			_3943
		    %% Line 425
		    <'none'> when 'true' ->
			apply 'passes_1'/1
			    (Opts)
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_3943})
		      -| ['compiler_generated'] )
		  end
	  %% Line 427
	  <[]> when 'true' ->
	      let <_cor2> =
		  %% Line 428
		  apply 'standard_passes'/0
		      ()
	      in  %% Line 428
		  {[46|[101|[114|[108]]]],[{'parse_module','parse_module'/1}|_cor2]}
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'passes_1',1}}] )
	    -| ['compiler_generated'] )
	end
'pass'/1 =
    %% Line 430
    fun (_cor0) ->
	case _cor0 of
	  <'from_core'> when 'true' ->
	      let <_cor1> =
		  %% Line 431
		  apply 'core_passes'/0
		      ()
	      in  %% Line 431
		  {[46|[99|[111|[114|[101]]]]],[{'parse_core','parse_core'/1}|_cor1]}
	  %% Line 432
	  <'from_asm'> when 'true' ->
	      let <_cor2> =
		  %% Line 433
		  apply 'asm_passes'/0
		      ()
	      in  %% Line 433
		  {[46|[83]],[{'beam_consult_asm','beam_consult_asm'/1}|_cor2]}
	  %% Line 434
	  <'asm'> when 'true' ->
	      do  %% Line 436
		  call 'io':'format'
		      ([99|[111|[109|[112|[105|[108|[101|[58|[102|[105|[108|[101|[47|[50|[32|[111|[112|[116|[105|[111|[110|[32|[39|[97|[115|[109|[39|[32|[104|[97|[115|[32|[98|[101|[101|[110|[32|[100|[101|[112|[114|[101|[99|[97|[116|[101|[100|[32|[97|[110|[100|[32|[119|[105|[108|[108|[32|[98|[101|[126|[110|[114|[101|[109|[111|[118|[101|[100|[32|[105|[110|[32|[116|[104|[101|[32|[49|[56|[46|[48|[32|[114|[101|[108|[101|[97|[115|[101|[46|[32|[85|[115|[101|[32|[39|[102|[114|[111|[109|[95|[97|[115|[109|[39|[32|[105|[110|[115|[116|[101|[97|[100|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		  %% Line 438
		  apply 'pass'/1
		      ('from_asm')
	  %% Line 439
	  <'from_beam'> when 'true' ->
	      let <_cor3> =
		  %% Line 699
		  [{'native_compile','test_native'/1,'native_compile'/1}|%% Line 700
									 [{'unless','binary',{'save_binary','not_werror'/1,'save_binary'/1}}|[]]]
	      in  %% Line 440
		  {[46|[98|[101|[97|[109]]]]],[{'read_beam_file','read_beam_file'/1}|_cor3]}
	  %% Line 441
	  <_cor5> when 'true' ->
	      'none'
	end
'select_passes'/2 =
    %% Line 493
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'pass',Mod}|Ps],Opts> when 'true' ->
	      let <F> =
		  %% Line 494
		  fun (_cor24) ->
		      let <_cor6> =
			  catch
			      %% Line 495
			      ( case _cor24 of
				  ( <( {'compile',_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_rec15,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57}
				       -| ['compiler_generated'] )> when 'true' ->
					call Mod:'module'
					    (_rec15, _cor53)
				    -| ['compiler_generated'] )
				  ( <_cor58> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','compile'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
		      in  %% Line 495
			  case _cor6 of
			    %% Line 496
			    <{'ok',Code}> when 'true' ->
				%% Line 497
				case _cor24 of
				  <{'compile',_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86}> when 'true' ->
				      let <_cor9> =
					  call 'erlang':'setelement'
					      (8, _cor24, Code)
				      in  {'ok',_cor9}
				  ( <_cor87> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','compile'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
			    %% Line 498
			    <{'ok',Code,Ws}> when 'true' ->
				%% Line 499
				( case _cor24 of
				    ( <( {'compile',_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_rec20}
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_rec18> =
					      call 'erlang':'++'
						  (_rec20, Ws)
					  in  let <_cor14> =
						  call 'erlang':'setelement'
						      (15, _cor24, _rec18)
					      in  let <_cor16> =
						      call 'erlang':'setelement'
							  (8, _cor14, Code)
						  in  {'ok',_cor16}
				      -| ['compiler_generated'] )
				    ( <_cor101> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','compile'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    %% Line 500
			    <{'error',Es}> when 'true' ->
				%% Line 501
				( case _cor24 of
				    ( <( {'compile',_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_rec23,_cor129}
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_rec21> =
					      call 'erlang':'++'
						  (_rec23, Es)
					  in  let <_cor22> =
						  call 'erlang':'setelement'
						      (14, _cor24, _rec21)
					      in  {'error',_cor22}
				      -| ['compiler_generated'] )
				    ( <_cor130> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','compile'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    ( <_cor23> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor6})
			      -| ['compiler_generated'] )
			  end
	      in  let <_cor27> =
		      %% Line 504
		      apply 'select_passes'/2
			  (Ps, _cor0)
		  in  %% Line 504
		      [{Mod,F}|_cor27]
	  %% Line 505
	  <[{'src_listing',Ext}|_cor146],_X_Opts> when 'true' ->
	      let <_cor30> =
		  %% Line 506
		  fun (_cor28) ->
		      apply 'src_listing'/2
			  (Ext, _cor28)
	      in  %% Line 506
		  [{'listing',_cor30}|[]]
	  %% Line 507
	  <[{'listing',Ext}|_cor147],_X_Opts> when 'true' ->
	      let <_cor33> =
		  %% Line 508
		  fun (_cor31) ->
		      apply 'listing'/2
			  (Ext, _cor31)
	      in  %% Line 508
		  [{'listing',_cor33}|[]]
	  %% Line 509
	  <['done'|_cor148],_X_Opts> when 'true' ->
	      %% Line 510
	      []
	  %% Line 511
	  <[{'done',Ext}|_cor149],Opts> when 'true' ->
	      %% Line 512
	      apply 'select_passes'/2
		  ([{'unless','binary',{'listing',Ext}}|[]], _cor0)
	  %% Line 513
	  <[{'iff',Flag,Pass}|Ps],Opts> when 'true' ->
	      %% Line 514
	      apply 'select_cond'/5
		  (Flag, 'true', Pass, Ps, _cor0)
	  %% Line 515
	  <[{'unless',Flag,Pass}|Ps],Opts> when 'true' ->
	      %% Line 516
	      apply 'select_cond'/5
		  (Flag, 'false', Pass, Ps, _cor0)
	  %% Line 517
	  <[P = {_cor150,Fun}|Ps],Opts>
	      when call 'erlang':'is_function'
		    (Fun) ->
	      let <_cor34> =
		  %% Line 518
		  apply 'select_passes'/2
		      (Ps, _cor0)
	      in  %% Line 518
		  [P|_cor34]
	  %% Line 519
	  <[{'delay',Passes0}|Ps],Opts>
	      when call 'erlang':'is_list'
		    (Passes0) ->
	      let <_528> =
		  %% Line 557
		  apply 'select_list_passes_1'/3
		      (Passes0, _cor0, [])
	      in  %% Line 524
		  case _528 of
		    %% Line 525
		    <{'done',Passes}> when 'true' ->
			%% Line 526
			[{'delay',Passes}|[]]
		    %% Line 527
		    <{'not_done',Passes}> when 'true' ->
			let <_cor35> =
			    %% Line 528
			    apply 'select_passes'/2
				(Ps, _cor0)
			in  %% Line 528
			    [{'delay',Passes}|_cor35]
		    ( <_cor36> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_528})
		      -| ['compiler_generated'] )
		  end
	  %% Line 530
	  <[P = {_cor151,Test,Fun}|Ps],Opts>
	      when try
		    let <_cor37> =
			call 'erlang':'is_function'
			    (Test)
		    in  let <_cor38> =
			    %% Line 531
			    call 'erlang':'is_function'
				(Fun)
			in  call 'erlang':'and'
				(_cor37, _cor38)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor39> =
		  %% Line 532
		  apply 'select_passes'/2
		      (Ps, _cor0)
	      in  %% Line 532
		  [P|_cor39]
	  %% Line 533
	  <[],_X_Opts> when 'true' ->
	      %% Line 534
	      []
	  %% Line 535
	  <[List|Ps],Opts>
	      when call 'erlang':'is_list'
		    (List) ->
	      let <_3440> =
		  %% Line 536
		  apply 'select_passes'/2
		      (List, _cor0)
	      in  %% Line 536
		  case _3440 of
		    %% Line 537
		    <[]> when 'true' ->
			apply 'select_passes'/2
			    (Ps, _cor0)
		    %% Line 538
		    <Nested> when 'true' ->
			%% Line 539
			case call 'lists':'last'
				 (_3440) of
			  %% Line 540
			  <{'listing',_X_Fun}> when 'true' ->
			      _3440
			  %% Line 541
			  <_X_Other> when 'true' ->
			      let <_cor40> =
				  apply 'select_passes'/2
				      (Ps, _cor0)
			      in  call 'erlang':'++'
				      (_3440, _cor40)
			end
		  end
	  ( <_cor44,_cor43> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'select_passes',2}}] )
	    -| ['compiler_generated'] )
	end
'select_cond'/5 =
    %% Line 545
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <ShouldNotBe> =
	    %% Line 546
	    call 'erlang':'not'
		(_cor3)
	in  let <_9887> =
		%% Line 547
		call 'lists':'member'
		    (_cor4, _cor0)
	    in  %% Line 547
		case _9887 of
		  %% Line 548
		  <_cor12>
		      when call 'erlang':'=:='
			    (_9887,
			     _cor3) ->
		      apply 'select_passes'/2
			  ([_cor2|_cor1], _cor0)
		  %% Line 549
		  <_cor13>
		      when call 'erlang':'=:='
			    (_9887,
			     ShouldNotBe) ->
		      apply 'select_passes'/2
			  (_cor1, _cor0)
		  ( <_cor6> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_9887})
		    -| ['compiler_generated'] )
		end
'select_list_passes'/2 =
    %% Line 556
    fun (_cor1,_cor0) ->
	%% Line 557
	apply 'select_list_passes_1'/3
	    (_cor1, _cor0, [])
'select_list_passes_1'/3 =
    %% Line 559
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{'iff',Flag,Listing = {'listing',_cor18}}|Ps],Opts,Acc> when 'true' ->
	      let <_11349> =
		  %% Line 560
		  call 'lists':'member'
		      (Flag, _cor1)
	      in  %% Line 560
		  case _11349 of
		    %% Line 561
		    <'true'> when 'true' ->
			let <_cor3> =
			    call 'lists':'reverse'
				(_cor0, [Listing|[]])
			in  {'done',_cor3}
		    %% Line 562
		    <'false'> when 'true' ->
			apply 'select_list_passes_1'/3
			    (Ps, _cor1, _cor0)
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_11349})
		      -| ['compiler_generated'] )
		  end
	  %% Line 564
	  <[{'iff',Flag,{'done',Ext}}|Ps],Opts,Acc> when 'true' ->
	      let <_10839> =
		  %% Line 565
		  call 'lists':'member'
		      (Flag, _cor1)
	      in  %% Line 565
		  case _10839 of
		    %% Line 566
		    <'false'> when 'true' ->
			%% Line 567
			apply 'select_list_passes_1'/3
			    (Ps, _cor1, _cor0)
		    %% Line 568
		    <'true'> when 'true' ->
			let <_7173> =
			    %% Line 569
			    call 'lists':'member'
				('binary', _cor1)
			in  let <_cor6> =
				%% Line 569
				case _7173 of
				  %% Line 570
				  <'false'> when 'true' ->
				      call 'lists':'reverse'
					  (_cor0, [{'listing',Ext}|[]])
				  %% Line 571
				  <'true'> when 'true' ->
				      call 'lists':'reverse'
					  (_cor0)
				  ( <_cor5> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_7173})
				    -| ['compiler_generated'] )
				end
			    in  %% Line 569
				{'done',_cor6}
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_10839})
		      -| ['compiler_generated'] )
		  end
	  %% Line 574
	  <[{Op = 'iff',Flag,List0}|Ps],Opts,Acc>
	      when call 'erlang':'is_list'
		    (List0) ->
	      let <_7936> =
		  %% Line 575
		  apply 'select_list_passes'/2
		      (List0, _cor1)
	      in  %% Line 575
		  case _7936 of
		    %% Line 576
		    <{'done',List}> when 'true' ->
			let <_cor8> =
			    call 'lists':'reverse'
				(_cor0)
			in  let <_cor9> =
				call 'erlang':'++'
				    (_cor8, List)
			    in  {'done',_cor9}
		    %% Line 577
		    <{'not_done',List}> when 'true' ->
			apply 'select_list_passes_1'/3
			    (Ps, _cor1, [{Op,Flag,List}|_cor0])
		    ( <_cor10> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_7936})
		      -| ['compiler_generated'] )
		  end
	  %% Line 579
	  <[{Op = 'unless',Flag,List0}|Ps],Opts,Acc>
	      when call 'erlang':'is_list'
		    (List0) ->
	      let <_4167> =
		  %% Line 580
		  apply 'select_list_passes'/2
		      (List0, _cor1)
	      in  %% Line 580
		  case _4167 of
		    %% Line 581
		    <{'done',List}> when 'true' ->
			let <_cor11> =
			    call 'lists':'reverse'
				(_cor0)
			in  let <_cor12> =
				call 'erlang':'++'
				    (_cor11, List)
			    in  {'done',_cor12}
		    %% Line 582
		    <{'not_done',List}> when 'true' ->
			apply 'select_list_passes_1'/3
			    (Ps, _cor1, [{Op,Flag,List}|_cor0])
		    ( <_cor13> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_4167})
		      -| ['compiler_generated'] )
		  end
	  %% Line 584
	  <[P|Ps],Opts,Acc> when 'true' ->
	      %% Line 585
	      apply 'select_list_passes_1'/3
		  (Ps, _cor1, [P|_cor0])
	  %% Line 586
	  <[],_cor19,Acc> when 'true' ->
	      let <_cor14> =
		  %% Line 587
		  call 'lists':'reverse'
		      (_cor0)
	      in  %% Line 587
		  {'not_done',_cor14}
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'select_list_passes_1',3}}] )
	    -| ['compiler_generated'] )
	end
'standard_passes'/0 =
    %% Line 591
    fun () ->
	let <_cor0> =
	    %% Line 617
	    apply 'core_passes'/0
		()
	in  %% Line 592
	    [{'transform_module','transform_module'/1}|%% Line 594
						       [{'iff','makedep',[%% Line 595
									  {'makedep','makedep'/1}|%% Line 596
												  [{'unless','binary',{'makedep_output','makedep_output'/1}}|%% Line 597
																			     []]]}|%% Line 598
																				   [{'iff','makedep','done'}|%% Line 600
																							     [{'iff','dpp',{'listing',[112|[112]]}}|%% Line 601
																												    [{'lint_module','lint_module'/1}|%% Line 602
																																     [{'iff','P',{'src_listing',[80]}}|%% Line 603
																																				       [{'iff','to_pp',{'done',[80]}}|%% Line 605
																																								      [{'iff','dabstr',{'listing',[97|[98|[115|[116|[114]]]]]}}|%% Line 606
																																																[{'iff','debug_info',{'save_abstract_code','save_abstract_code'/1}}|%% Line 608
																																																								    [{'expand_module','expand_module'/1}|%% Line 609
																																																													 [{'iff','dexp',{'listing',[101|[120|[112|[97|[110|[100]]]]]]}}|%% Line 610
																																																																					[{'iff','E',{'src_listing',[69]}}|%% Line 611
																																																																									  [{'iff','to_exp',{'done',[69]}}|%% Line 614
																																																																													  [{'core_module','core_module'/1}|%% Line 615
																																																																																	   [{'iff','dcore',{'listing',[99|[111|[114|[101]]]]}}|%% Line 616
																																																																																							       [{'iff','to_core0',{'done',[99|[111|[114|[101]]]]}}|_cor0]]]]]]]]]]]]]]]]
'core_passes'/0 =
    %% Line 619
    fun () ->
	let <_cor0> =
	    %% Line 635
	    apply 'kernel_passes'/0
		()
	in  %% Line 621
	    [{'iff','clint0',{'core_lint_module','core_lint_module'/1}}|%% Line 622
									[{'delay',%% Line 623
										  [{'unless','no_copt',%% Line 624
												       [{'core_old_inliner','test_old_inliner'/1,'core_old_inliner'/1}|%% Line 625
																				       [{'iff','doldinline',{'listing',[111|[108|[100|[105|[110|[108|[105|[110|[101]]]]]]]]]}}|%% Line 626
																															       [{'core_fold_module','core_fold_module'/1}|%% Line 627
																																					  [{'iff','dcorefold',{'listing',[99|[111|[114|[101|[102|[111|[108|[100]]]]]]]]}}|%% Line 628
																																															  [{'core_inline_module','test_core_inliner'/1,'core_inline_module'/1}|%% Line 629
																																																							       [{'iff','dinline',{'listing',[105|[110|[108|[105|[110|[101]]]]]]}}|%% Line 630
																																																																  [{'core_fold_after_inlining','test_any_inliner'/1,'core_fold_module_after_inlining'/1}|%% Line 632
																																																																											 [{'core_transforms','core_transforms'/1}|[]]]]]]]]]}|%% Line 633
																																																																																	      [{'iff','dcopt',{'listing',[99|[111|[112|[116]]]]}}|[{'iff','to_core',{'done',[99|[111|[114|[101]]]]}}]]]}|_cor0]]
'kernel_passes'/0 =
    %% Line 637
    fun () ->
	let <_cor0> =
	    %% Line 653
	    apply 'asm_passes'/0
		()
	in  %% Line 639
	    [{'core_dsetel_module','core_dsetel_module'/1}|%% Line 640
							   [{'iff','dsetel',{'listing',[100|[115|[101|[116|[101|[108]]]]]]}}|%% Line 642
															     [{'iff','clint',{'core_lint_module','core_lint_module'/1}}|%% Line 643
																							[{'iff','core',{'save_core_code','save_core_code'/1}}|%% Line 646
																													      [{'kernel_module','kernel_module'/1}|%% Line 647
																																		   [{'iff','dkern',{'listing',[107|[101|[114|[110|[101|[108]]]]]]}}|%% Line 648
																																										    [{'iff','to_kernel',{'done',[107|[101|[114|[110|[101|[108]]]]]]}}|%% Line 649
																																																		      [{'pass','v3_life'}|%% Line 650
																																																					  [{'iff','dlife',{'listing',[108|[105|[102|[101]]]]}}|%% Line 651
																																																											       [{'pass','v3_codegen'}|%% Line 652
																																																														      [{'iff','dcg',{'listing',[99|[111|[100|[101|[103|[101|[110]]]]]]]}}|_cor0]]]]]]]]]]]
'asm_passes'/0 =
    %% Line 655
    fun () ->
	let <_cor0> =
	    %% Line 699
	    [{'native_compile','test_native'/1,'native_compile'/1}|%% Line 700
								   [{'unless','binary',{'save_binary','not_werror'/1,'save_binary'/1}}|[]]]
	in  %% Line 657
	    [{'delay',[{'pass','beam_a'}|[{'unless','no_postopt',[{'pass','beam_block'}|[{'iff','dblk',{'listing',[98|[108|[111|[99|[107]]]]]}}|[{'unless','no_except',{'pass','beam_except'}}|[{'iff','dexcept',{'listing',[101|[120|[99|[101|[112|[116]]]]]]}}|[{'unless','no_bopt',{'pass','beam_bool'}}|[{'iff','dbool',{'listing',[98|[111|[111|[108]]]]}}|[{'unless','no_topt',{'pass','beam_type'}}|[{'iff','dtype',{'listing',[116|[121|[112|[101]]]]}}|[{'pass','beam_split'}|[{'iff','dsplit',{'listing',[115|[112|[108|[105|[116]]]]]}}|[{'unless','no_dead',{'pass','beam_dead'}}|[{'iff','ddead',{'listing',[100|[101|[97|[100]]]]}}|[{'unless','no_jopt',{'pass','beam_jump'}}|[{'iff','djmp',{'listing',[106|[117|[109|[112]]]]}}|[{'unless','no_peep_opt',{'pass','beam_peep'}}|[{'iff','dpeep',{'listing',[112|[101|[101|[112]]]]}}|[{'pass','beam_clean'}|[{'iff','dclean',{'listing',[99|[108|[101|[97|[110]]]]]}}|[{'unless','no_bsm_opt',{'pass','beam_bsm'}}|[{'iff','dbsm',{'listing',[98|[115|[109]]]}}|[{'unless','no_recv_opt',{'pass','beam_receive'}}|[{'iff','drecv',{'listing',[114|[101|[99|[118]]]]}}|[{'unless','no_stack_trimming',{'pass','beam_trim'}}|[{'iff','dtrim',{'listing',[116|[114|[105|[109]]]]}}|[{'pass','beam_flatten'}]]]]]]]]]]]]]]]]]]]]]]]]]}|[{'iff','no_postopt',[{'pass','beam_clean'}]}|[{'pass','beam_z'}|[{'iff','dopt',{'listing',[111|[112|[116|[105|[109|[105|[122|[101]]]]]]]]}}|[{'iff','S',{'listing',[83]}}|[{'iff','to_asm',{'done',[83]}}]]]]]]]}|%% Line 694
																																																																																																																																																																																						      [{'pass','beam_validator'}|%% Line 695
																																																																																																																																																																																										 [{'beam_asm','beam_asm'/1}|_cor0]]]
'remove_file'/1 =
    %% Line 707
    fun (_cor0) ->
	%% Line 708
	( case _cor0 of
	    ( <( {'compile',_cor5,_cor6,_cor7,_cor8,_rec24,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17}
		 -| ['compiler_generated'] )> when 'true' ->
		  do  ( call 'file':'delete'
			    (_rec24)
			-| ['result_not_wanted'] )
		      %% Line 709
		      {'ok',_cor0}
	      -| ['compiler_generated'] )
	    ( <_cor18> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','compile'}
			   -| ['compiler_generated'] ))
		    -| ['result_not_wanted','compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'preprocess_asm_forms'/1 =
    %% Line 719
    fun (_cor0) ->
	%% Line 722
	( case apply 'collect_asm'/2
		   (_cor0, {'asm_module','undefined','undefined','undefined',[],'undefined','undefined',[]}) of
	    ( <( {'asm_module',_rec25,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21}
		 -| ['compiler_generated'] )> when 'true' ->
		  {_rec25,%% Line 723
			  {_rec25,_cor16,_cor21,_cor18,_cor17}}
	      -| ['compiler_generated'] )
	    ( <_cor22> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','asm_module'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'collect_asm'/2 =
    %% Line 729
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],R> when 'true' ->
	      %% Line 730
	      ( case _cor0 of
		  ( <( {'asm_module',_cor49,_cor50,_cor51,_cor52,_rec31,_cor53,_cor54}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec31 of
			  %% Line 731
			  <'undefined'> when 'true' ->
			      _cor0
			  %% Line 733
			  <{A,B,C}> when 'true' ->
			      let <_rec32> =
				  %% Line 734
				  call 'erlang':'++'
				      (_cor52, %% Line 735
					       [{'function',A,B,C,_cor53}|[]])
			      in  %% Line 734
				  call 'erlang':'setelement'
				      (5, _cor0, _rec32)
			  ( <_cor11> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_rec31})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor55> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','asm_module'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 737
	  <[{'module',M}|Rest],R> when 'true' ->
	      %% Line 738
	      case _cor0 of
		<{'asm_module',_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84}> when 'true' ->
		    let <_cor14> =
			call 'erlang':'setelement'
			    (2, _cor0, M)
		    in  apply 'collect_asm'/2
			    (Rest, _cor14)
		( <_cor85> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','asm_module'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 739
	  <[{'exports',M}|Rest],R> when 'true' ->
	      %% Line 740
	      case _cor0 of
		<{'asm_module',_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92}> when 'true' ->
		    let <_cor17> =
			call 'erlang':'setelement'
			    (3, _cor0, M)
		    in  apply 'collect_asm'/2
			    (Rest, _cor17)
		( <_cor93> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','asm_module'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 741
	  <[{'labels',M}|Rest],R> when 'true' ->
	      %% Line 742
	      case _cor0 of
		<{'asm_module',_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100}> when 'true' ->
		    let <_cor20> =
			call 'erlang':'setelement'
			    (4, _cor0, M)
		    in  apply 'collect_asm'/2
			    (Rest, _cor20)
		( <_cor101> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','asm_module'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 743
	  <[{'function',A,B,C}|Rest],R> when 'true' ->
	      %% Line 744
	      ( case _cor0 of
		  ( <( {'asm_module',_cor102,_cor103,_cor104,_cor105,_rec39,_cor106,_cor107}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor31> =
			    case _rec39 of
			      %% Line 745
			      <'undefined'> when 'true' ->
				  _cor0
			      %% Line 747
			      <{A0,B0,C0}> when 'true' ->
				  let <_rec40> =
				      %% Line 748
				      call 'erlang':'++'
					  (_cor105, %% Line 749
						    [{'function',A0,B0,C0,_cor106}|[]])
				  in  %% Line 748
				      call 'erlang':'setelement'
					  (5, _cor0, _rec40)
			      ( <_cor30> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_rec39})
				-| ['compiler_generated'] )
			    end
			in  let <_rec44> = {A,B,C}
			    in  %% Line 751
				case _cor31 of
				  <{'asm_module',_cor131,_cor132,_cor133,_cor134,_cor135,_cor136,_cor137}> when 'true' ->
				      let <_cor35> =
					  call 'erlang':'setelement'
					      (7, _cor31, [])
				      in  let <_cor37> =
					      call 'erlang':'setelement'
						  (6, _cor35, _rec44)
					  in  apply 'collect_asm'/2
						  (Rest, _cor37)
				  ( <_cor138> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','asm_module'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
		    -| ['compiler_generated'] )
		  ( <_cor108> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','asm_module'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 752
	  <[{'attributes',Attr}|Rest],R> when 'true' ->
	      %% Line 753
	      case _cor0 of
		<{'asm_module',_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145}> when 'true' ->
		    let <_cor40> =
			call 'erlang':'setelement'
			    (8, _cor0, Attr)
		    in  apply 'collect_asm'/2
			    (Rest, _cor40)
		( <_cor146> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','asm_module'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 754
	  <[X|Rest],R> when 'true' ->
	      %% Line 755
	      ( case _cor0 of
		  ( <( {'asm_module',_cor147,_cor148,_cor149,_cor150,_cor151,_rec49,_cor152}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_rec47> =
			    call 'erlang':'++'
				(_rec49, [X|[]])
			in  let <_cor46> =
				call 'erlang':'setelement'
				    (7, _cor0, _rec47)
			    in  apply 'collect_asm'/2
				    (Rest, _cor46)
		    -| ['compiler_generated'] )
		  ( <_cor153> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','asm_module'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor48,_cor47> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'collect_asm',2}}] )
	    -| ['compiler_generated'] )
	end
'beam_consult_asm'/1 =
    %% Line 757
    fun (_cor0) ->
	%% Line 758
	( case _cor0 of
	    ( <( {'compile',_cor23,_cor24,_cor25,_rec50,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_7402> =
		      call 'file':'consult'
			  (_rec50)
		  in  case _7402 of
			%% Line 759
			<{'ok',Forms0}> when 'true' ->
			    let <Encoding> =
				%% Line 760
				call 'epp':'read_encoding'
				    (_rec50)
			    in  let <_2400> =
				    %% Line 761
				    apply 'preprocess_asm_forms'/1
					(Forms0)
				in  %% Line 761
				    case _2400 of
				      <{Module,Forms}> when 'true' ->
					  let <_cor8> =
					      %% Line 762
					      call 'erlang':'setelement'
						  (13, _cor0, Encoding)
					  in  let <_cor9> =
						  %% Line 762
						  call 'erlang':'setelement'
						      (8, _cor8, Forms)
					      in  let <_cor11> =
						      %% Line 762
						      call 'erlang':'setelement'
							  (7, _cor9, Module)
						  in  %% Line 762
						      {'ok',_cor11}
				      ( <_cor6> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_2400})
					-| ['compiler_generated'] )
				    end
			%% Line 763
			<{'error',E}> when 'true' ->
			    let <Es> =
				%% Line 764
				[{_rec50,[{'none','compile',{'open',E}}|[]]}|[]]
			    in  let <_rec54> =
				    %% Line 765
				    call 'erlang':'++'
					(_cor34, Es)
				in  let <_cor20> =
					%% Line 765
					call 'erlang':'setelement'
					    (14, _cor0, _rec54)
				    in  %% Line 765
					{'error',_cor20}
			( <_cor21> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_7402})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor36> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','compile'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'read_beam_file'/1 =
    %% Line 768
    fun (_cor0) ->
	%% Line 769
	( case _cor0 of
	    ( <( {'compile',_cor30,_cor31,_cor32,_rec57,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_9302> =
		      call 'file':'read_file'
			  (_rec57)
		  in  case _9302 of
			%% Line 770
			<{'ok',Beam}> when 'true' ->
			    let <_3576> =
				%% Line 772
				apply 'no_native_compilation'/2
				    (_rec57, _cor0)
			    in  %% Line 772
				case _3576 of
				  %% Line 773
				  <'true'> when 'true' ->
				      let <_cor7> =
					  %% Line 774
					  call 'erlang':'setelement'
					      (8, _cor0, 'none')
				      in  let <_cor9> =
					      %% Line 774
					      call 'erlang':'setelement'
						  (7, _cor7, 'none')
					  in  %% Line 774
					      {'ok',_cor9}
				  %% Line 775
				  <'false'> when 'true' ->
				      let <_cor10> =
					  %% Line 776
					  call 'filename':'basename'
					      (_rec57)
				      in  let <Mod0> =
					      %% Line 776
					      call 'filename':'rootname'
						  (_cor10)
					  in  let <Mod> =
						  %% Line 777
						  call 'erlang':'list_to_atom'
						      (Mod0)
					      in  let <_cor14> =
						      %% Line 778
						      call 'erlang':'setelement'
							  (8, _cor0, Beam)
						  in  let <_cor15> =
							  %% Line 778
							  call 'erlang':'setelement'
							      (7, _cor14, Mod)
						      in  let <_cor17> =
							      %% Line 778
							      call 'erlang':'setelement'
								  (6, _cor15, _rec57)
							  in  %% Line 778
							      {'ok',_cor17}
				  ( <_cor18> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_3576})
				    -| ['compiler_generated'] )
				end
			%% Line 780
			<{'error',E}> when 'true' ->
			    let <Es> =
				%% Line 781
				[{_rec57,[{'none','compile',{'open',E}}|[]]}|[]]
			    in  let <_rec62> =
				    %% Line 782
				    call 'erlang':'++'
					(_cor41, Es)
				in  let <_cor27> =
					%% Line 782
					call 'erlang':'setelement'
					    (14, _cor0, _rec62)
				    in  %% Line 782
					{'error',_cor27}
			( <_cor28> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_9302})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor43> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','compile'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'no_native_compilation'/2 =
    %% Line 785
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <BeamFile,{'compile',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,Opts0,_cor20,_cor21,_cor22,_cor23}> when 'true' ->
	      %% Line 786
	      case call 'beam_lib':'chunks'
		       (_cor1, [[67|[73|[110|[102]]]]]) of
		%% Line 787
		<{'ok',{_cor24,[{[67|[73|[110|[102]]]],Term0}|[]]}}> when 'true' ->
		    let <Term> =
			%% Line 788
			call 'erlang':'binary_to_term'
			    (Term0)
		    in  let <_cor3> =
			    %% Line 792
			    call 'proplists':'get_value'
				('options', Term, [])
			in  let <Opts> =
				%% Line 792
				call 'erlang':'++'
				    (_cor3, Opts0)
			    in  let <_9449> =
				    %% Line 793
				    call 'lists':'member'
					('no_new_funs', Opts)
				in  %% Line 793
				    ( case _9449 of
					( <( 'true'
					     -| ['compiler_generated'] )> when 'true' ->
					      'true'
					  -| ['compiler_generated'] )
					( <( 'false'
					     -| ['compiler_generated'] )> when 'true' ->
					      let <_cor6> =
						  apply 'is_native_enabled'/1
						      (Opts)
					      in  call 'erlang':'not'
						      (_cor6)
					  -| ['compiler_generated'] )
					( <_cor5> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {( 'badarg'
							  -| ['compiler_generated'] ),_9449}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
		%% Line 794
		<_cor25> when 'true' ->
		    'false'
	      end
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'no_native_compilation',2}}] )
	    -| ['compiler_generated'] )
	end
'parse_module'/1 =
    %% Line 797
    fun (_cor0) ->
	let <_5280> =
	    %% Line 798
	    apply 'do_parse_module'/2
		('utf8', _cor0)
	in  %% Line 798
	    case _5280 of
	      %% Line 799
	      <Ret = {'ok',_cor18}> when 'true' ->
		  _5280
	      %% Line 801
	      <Ret = {'error',_cor19}> when 'true' ->
		  _5280
	      %% Line 803
	      <{'invalid_unicode',File,Line}> when 'true' ->
		  let <_3146> =
		      %% Line 804
		      apply 'do_parse_module'/2
			  ('latin1', _cor0)
		  in  %% Line 804
		      case _3146 of
			%% Line 805
			<{'ok',St}> when 'true' ->
			    let <Es> =
				%% Line 806
				[{File,[{Line,'compile','reparsing_invalid_unicode'}|[]]}|[]]
			    in  %% Line 807
				( case St of
				    ( <( {'compile',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_rec67}
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_rec65> =
					      call 'erlang':'++'
						  (Es, _rec67)
					  in  let <_cor7> =
						  call 'erlang':'setelement'
						      (15, St, _rec65)
					      in  {'ok',_cor7}
				      -| ['compiler_generated'] )
				    ( <_cor33> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','compile'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			%% Line 808
			<{'error',St}> when 'true' ->
			    let <Es> =
				%% Line 809
				[{File,[{Line,'compile','reparsing_invalid_unicode'}|[]]}|[]]
			    in  %% Line 810
				( case St of
				    ( <( {'compile',_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_rec70,_cor61}
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_rec68> =
					      call 'erlang':'++'
						  (Es, _rec70)
					  in  let <_cor14> =
						  call 'erlang':'setelement'
						      (14, St, _rec68)
					      in  {'error',_cor14}
				      -| ['compiler_generated'] )
				    ( <_cor62> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','compile'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			( <_cor15> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_3146})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor16> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_5280})
		-| ['compiler_generated'] )
	    end
'do_parse_module'/2 =
    %% Line 814
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <DefEncoding,St = {'compile',_cor28,Dir,_cor29,File,_cor30,_cor31,_cor32,_cor33,_cor34,Opts,_cor35,_cor36,_cor37,_cor38}> when 'true' ->
	      let <_cor2> =
		  %% Line 1571
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor3) ->
				case _cor3 of
				  <[{'i',P}|_cor2]>
				      when call 'erlang':'is_list'
					    (P) ->
				      let <_cor4> =
					  apply 'lc$^0'/1
					      (_cor2)
				      in  ( [P|_cor4]
					    -| ['compiler_generated'] )
				  ( <[_3693|_cor2]> when 'true' ->
					apply 'lc$^0'/1
					    (_cor2)
				    -| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_3933> when 'true' ->
					primop 'match_fail'
					    ({'function_clause',_cor3})
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (Opts)
		    -| ['list_comprehension'] )
	      in  let <_cor3> =
		      %% Line 817
		      apply 'pre_defs'/1
			  (Opts)
		  in  let <_196> =
			  %% Line 815
			  call 'epp':'parse_file'
			      (File, %% Line 816
				     [{'includes',[[46]|[Dir|_cor2]]}|%% Line 817
								      [{'macros',_cor3}|%% Line 818
											[{'default_encoding',_cor1}|%% Line 819
														    ['extra']]]])
		      in  %% Line 820
			  case _196 of
			    %% Line 821
			    <{'ok',Forms,Extra}> when 'true' ->
				let <Encoding> =
				    %% Line 822
				    call 'proplists':'get_value'
					('encoding', Extra)
				in  let <_5668> =
					%% Line 823
					apply 'find_invalid_unicode'/2
					    (Forms, File)
				    in  %% Line 823
					case _5668 of
					  %% Line 824
					  <'none'> when 'true' ->
					      let <_cor7> =
						  %% Line 825
						  call 'erlang':'setelement'
						      (13, _cor0, Encoding)
					      in  let <_cor9> =
						      %% Line 825
						      call 'erlang':'setelement'
							  (8, _cor7, Forms)
						  in  %% Line 825
						      {'ok',_cor9}
					  %% Line 826
					  <Ret = {'invalid_unicode',_cor54,_cor55}> when 'true' ->
					      %% Line 827
					      case Encoding of
						%% Line 828
						<'none'> when 'true' ->
						    _5668
						%% Line 830
						<_cor56> when 'true' ->
						    let <_cor11> =
							%% Line 831
							call 'erlang':'setelement'
							    (13, _cor0, Encoding)
						    in  let <_cor13> =
							    %% Line 831
							    call 'erlang':'setelement'
								(8, _cor11, Forms)
							in  %% Line 831
							    {'ok',_cor13}
					      end
					  ( <_cor15> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_5668})
					    -| ['compiler_generated'] )
					end
			    %% Line 834
			    <{'error',E}> when 'true' ->
				let <Es> =
				    %% Line 835
				    [{File,[{'none','compile',{'epp',E}}|[]]}|[]]
				in  let <_rec74> =
					%% Line 836
					call 'erlang':'++'
					    (_cor37, Es)
				    in  let <_cor24> =
					    %% Line 836
					    call 'erlang':'setelement'
						(14, _cor0, _rec74)
					in  %% Line 836
					    {'error',_cor24}
			    ( <_cor25> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_196})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor27,_cor26> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'do_parse_module',2}}] )
	    -| ['compiler_generated'] )
	end
'find_invalid_unicode'/2 =
    %% Line 839
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[H|T],File0> when 'true' ->
	      %% Line 840
	      case H of
		%% Line 841
		<{'attribute',_cor5,'file',{File,_cor6}}> when 'true' ->
		    %% Line 842
		    apply 'find_invalid_unicode'/2
			(T, File)
		%% Line 843
		<{'error',{Line,'file_io_server','invalid_unicode'}}> when 'true' ->
		    %% Line 844
		    {'invalid_unicode',_cor0,Line}
		%% Line 845
		<_X_Other> when 'true' ->
		    %% Line 846
		    apply 'find_invalid_unicode'/2
			(T, _cor0)
	      end
	  %% Line 848
	  <[],_cor7> when 'true' ->
	      'none'
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'find_invalid_unicode',2}}] )
	    -| ['compiler_generated'] )
	end
'parse_core'/1 =
    %% Line 850
    fun (_cor0) ->
	%% Line 851
	( case _cor0 of
	    ( <( {'compile',_cor44,_cor45,_cor46,_rec77,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_8994> =
		      call 'file':'read_file'
			  (_rec77)
		  in  case _8994 of
			%% Line 852
			<{'ok',Bin}> when 'true' ->
			    let <_cor3> =
				%% Line 853
				call 'erlang':'binary_to_list'
				    (Bin)
			    in  let <_2086> =
				    %% Line 853
				    call 'core_scan':'string'
					(_cor3)
				in  %% Line 853
				    case _2086 of
				      %% Line 854
				      <{'ok',Toks,_cor58}> when 'true' ->
					  let <_7369> =
					      %% Line 855
					      call 'core_parse':'parse'
						  (Toks)
					  in  %% Line 855
					      case _7369 of
						%% Line 856
						<{'ok',Mod}> when 'true' ->
						    %% Line 857
						    ( case Mod of
							( <( {'c_module',_cor59,_rec79,_cor60,_cor61,_cor62}
							     -| ['compiler_generated'] )> when 'true' ->
							      ( case _rec79 of
								  ( <( {'c_literal',_cor64,_rec78}
								       -| ['compiler_generated'] )> when 'true' ->
									let <_cor10> =
									    %% Line 858
									    call 'erlang':'setelement'
										(8, _cor0, Mod)
									in  let <_cor12> =
										%% Line 858
										call 'erlang':'setelement'
										    (7, _cor10, _rec78)
									    in  %% Line 858
										{'ok',_cor12}
								    -| ['compiler_generated'] )
								  ( <_cor65> when 'true' ->
									( call ( 'erlang'
										 -| ['compiler_generated'] ):( 'error'
													       -| ['compiler_generated'] )
									      (( {'badrecord','c_literal'}
										 -| ['compiler_generated'] ))
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
							( <_cor63> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','c_module'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
						%% Line 859
						<{'error',E}> when 'true' ->
						    let <Es> =
							%% Line 860
							[{_rec77,[E|[]]}|[]]
						    in  let <_rec82> =
							    %% Line 861
							    call 'erlang':'++'
								(_cor55, Es)
							in  let <_cor21> =
								%% Line 861
								call 'erlang':'setelement'
								    (14, _cor0, _rec82)
							    in  %% Line 861
								{'error',_cor21}
						( <_cor22> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_7369})
						  -| ['compiler_generated'] )
					      end
				      %% Line 863
				      <{'error',E,_cor124}> when 'true' ->
					  let <Es> =
					      %% Line 864
					      [{_rec77,[E|[]]}|[]]
					  in  let <_rec86> =
						  %% Line 865
						  call 'erlang':'++'
						      (_cor55, Es)
					      in  let <_cor31> =
						      %% Line 865
						      call 'erlang':'setelement'
							  (14, _cor0, _rec86)
						  in  %% Line 865
						      {'error',_cor31}
				      ( <_cor32> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_2086})
					-| ['compiler_generated'] )
				    end
			%% Line 867
			<{'error',E}> when 'true' ->
			    let <Es> =
				%% Line 868
				[{_rec77,[{'none','compile',{'open',E}}|[]]}|[]]
			    in  let <_rec90> =
				    %% Line 869
				    call 'erlang':'++'
					(_cor55, Es)
				in  let <_cor41> =
					%% Line 869
					call 'erlang':'setelement'
					    (14, _cor0, _rec90)
				    in  %% Line 869
					{'error',_cor41}
			( <_cor42> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_8994})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor57> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','compile'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'compile_options'/1 =
    %% Line 872
    fun (_cor0) ->
	case _cor0 of
	  <[{'attribute',_X_L,'compile',C}|Fs]>
	      when call 'erlang':'is_list'
		    (C) ->
	      let <_cor1> =
		  %% Line 873
		  apply 'compile_options'/1
		      (Fs)
	      in  %% Line 873
		  call 'erlang':'++'
		      (C, _cor1)
	  %% Line 874
	  <[{'attribute',_X_L,'compile',C}|Fs]> when 'true' ->
	      let <_cor2> =
		  %% Line 875
		  apply 'compile_options'/1
		      (Fs)
	      in  %% Line 875
		  [C|_cor2]
	  %% Line 876
	  <[_X_F|Fs]> when 'true' ->
	      apply 'compile_options'/1
		  (Fs)
	  %% Line 877
	  <[]> when 'true' ->
	      []
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'compile_options',1}}] )
	    -| ['compiler_generated'] )
	end
'clean_parse_transforms_1'/2 =
    %% Line 882
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'attribute',L,'compile',C0}|Fs],Acc>
	      when call 'erlang':'is_list'
		    (C0) ->
	      let <_cor4> =
		  %% Line 883
		  fun (_cor2) ->
		      case _cor2 of
			<{'parse_transform',_cor8}> when 'true' ->
			    'false'
			%% Line 884
			<_cor9> when 'true' ->
			    'true'
		      end
	      in  let <C> =
		      %% Line 883
		      call 'lists':'filter'
			  (_cor4, C0)
		  in  %% Line 886
		      apply 'clean_parse_transforms_1'/2
			  (Fs, [{'attribute',L,'compile',C}|_cor0])
	  %% Line 887
	  <[{'attribute',_cor10,'compile',{'parse_transform',_cor11}}|Fs],Acc> when 'true' ->
	      %% Line 888
	      apply 'clean_parse_transforms_1'/2
		  (Fs, _cor0)
	  %% Line 889
	  <[F|Fs],Acc> when 'true' ->
	      %% Line 890
	      apply 'clean_parse_transforms_1'/2
		  (Fs, [F|_cor0])
	  %% Line 891
	  <[],Acc> when 'true' ->
	      call 'lists':'reverse'
		  (_cor0)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'clean_parse_transforms_1',2}}] )
	    -| ['compiler_generated'] )
	end
'transform_module'/1 =
    %% Line 895
    fun (_cor0) ->
	case _cor0 of
	  <St0 = {'compile',_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,Code0,_cor16,_cor17,Opt,_cor18,_cor19,_cor20,_cor21}> when 'true' ->
	      let <_cor1> =
		  %% Line 897
		  apply 'compile_options'/1
		      (Code0)
	      in  let <_cor2> =
		      %% Line 897
		      call 'erlang':'++'
			  (Opt, _cor1)
		  in  let <_4245> =
			  ( letrec
				'lc$^0'/1 =
				    fun (_cor3) ->
					case _cor3 of
					  <[{'parse_transform',M}|_4889]> when 'true' ->
					      let <_cor4> =
						  apply 'lc$^0'/1
						      (_4889)
					      in  ( [M|_cor4]
						    -| ['compiler_generated'] )
					  ( <[_7936|_12344]> when 'true' ->
						apply 'lc$^0'/1
						    (_12344)
					    -| ['compiler_generated'] )
					  <[]> when 'true' ->
					      []
					  ( <_6509> when 'true' ->
						primop 'match_fail'
						    ({'function_clause',_cor3})
					    -| ['compiler_generated'] )
					end
			    in  apply 'lc$^0'/1
				    (_cor2)
			    -| ['list_comprehension'] )
		      in  %% Line 897
			  case _4245 of
			    %% Line 898
			    <[]> when 'true' ->
				{'ok',_cor0}
			    %% Line 899
			    <Ts> when 'true' ->
				let <Code> =
				    apply 'clean_parse_transforms_1'/2
					(Code0, [])
				in  let <_cor6> =
					%% Line 903
					call 'erlang':'setelement'
					    (8, _cor0, Code)
				    in  %% Line 904
					apply 'foldl_transform'/2
					    (_cor6, _4245)
			  end
	  ( <_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'transform_module',1}}] )
	    -| ['compiler_generated'] )
	end
'foldl_transform'/2 =
    %% Line 907
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <St,[T|Ts]> when 'true' ->
	      let <_cor2> =
		  %% Line 908
		  call 'erlang':'atom_to_list'
		      (T)
	      in  let <Name> =
		      %% Line 908
		      call 'erlang':'++'
			  ([116|[114|[97|[110|[115|[102|[111|[114|[109|[32]]]]]]]]]], _cor2)
		  in  let <Fun> =
			  %% Line 909
			  fun (_cor8) ->
			      ( case _cor8 of
				  ( <( {'compile',_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_rec94,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73}
				       -| ['compiler_generated'] )> when 'true' ->
					call T:'parse_transform'
					    (_rec94, _cor69)
				    -| ['compiler_generated'] )
				  ( <_cor74> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','compile'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
		      in  %% Line 910
			  ( case _cor1 of
			      ( <( {'compile',_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_rec96,_cor98,_cor99,_cor100,_cor101}
				   -| ['compiler_generated'] )> when 'true' ->
				    let <_8563> =
					call 'lists':'member'
					    ('time', _rec96)
				    in  let <_cor18> =
					    case _8563 of
					      %% Line 911
					      <'true'> when 'true' ->
						  'run_tc'/2
					      %% Line 912
					      <'false'> when 'true' ->
						  fun (_cor14,_cor13) ->
						      case <_cor14,_cor13> of
							<{_X_Name,F},S> when 'true' ->
							    catch
								apply F
								    (_cor13)
							( <_cor16,_cor15> when 'true' ->
							      ( primop 'match_fail'
								    ({'function_clause',_cor14,_cor13})
								-| [{'function_name',{'-foldl_transform/2-fun-2-',2}}] )
							  -| ['compiler_generated'] )
						      end
					      ( <_cor17> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_8563})
						-| ['compiler_generated'] )
					    end
					in  let <_3506> =
						%% Line 914
						apply _cor18
						    ({Name,Fun}, _cor1)
					    in  %% Line 914
						case _3506 of
						  %% Line 915
						  <{'error',Es,Ws}> when 'true' ->
						      let <_rec97> =
							  %% Line 916
							  call 'erlang':'++'
							      (_cor101, Ws)
						      in  let <_rec98> =
							      %% Line 917
							      call 'erlang':'++'
								  (_cor100, Es)
							  in  let <_cor27> =
								  %% Line 916
								  call 'erlang':'setelement'
								      (15, _cor1, _rec97)
							      in  let <_cor29> =
								      %% Line 917
								      call 'erlang':'setelement'
									  (14, _cor27, _rec98)
								  in  %% Line 916
								      {'error',_cor29}
						  %% Line 918
						  <{'EXIT',{'undef',_cor146}}> when 'true' ->
						      let <Es> =
							  %% Line 919
							  [{_cor92,[{'none','compile',%% Line 920
										      {'undef_parse_transform',T}}|%% Line 920
														   []]}|%% Line 920
															[]]
						      in  let <_rec103> =
							      %% Line 921
							      call 'erlang':'++'
								  (_cor100, Es)
							  in  let <_cor38> =
								  %% Line 921
								  call 'erlang':'setelement'
								      (14, _cor1, _rec103)
							      in  %% Line 921
								  {'error',_cor38}
						  %% Line 922
						  <{'EXIT',R}> when 'true' ->
						      let <Es> =
							  %% Line 923
							  [{_cor92,[{'none','compile',{'parse_transform',T,R}}|[]]}|[]]
						      in  let <_rec107> =
							      %% Line 924
							      call 'erlang':'++'
								  (_cor100, Es)
							  in  let <_cor47> =
								  %% Line 924
								  call 'erlang':'setelement'
								      (14, _cor1, _rec107)
							      in  %% Line 924
								  {'error',_cor47}
						  %% Line 925
						  <{'warning',Forms,Ws}> when 'true' ->
						      let <_rec110> =
							  %% Line 928
							  call 'erlang':'++'
							      (_cor101, Ws)
						      in  let <_cor52> =
							      %% Line 928
							      call 'erlang':'setelement'
								  (15, _cor1, _rec110)
							  in  let <_cor54> =
								  %% Line 927
								  call 'erlang':'setelement'
								      (8, _cor52, Forms)
							      in  %% Line 926
								  apply 'foldl_transform'/2
								      (_cor54, Ts)
						  %% Line 929
						  <Forms> when 'true' ->
						      let <_cor57> =
							  %% Line 930
							  call 'erlang':'setelement'
							      (8, _cor1, _3506)
						      in  %% Line 930
							  apply 'foldl_transform'/2
							      (_cor57, Ts)
						end
				-| ['compiler_generated'] )
			      ( <_cor102> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','compile'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
	  %% Line 932
	  <St,[]> when 'true' ->
	      {'ok',_cor1}
	  ( <_cor60,_cor59> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'foldl_transform',2}}] )
	    -| ['compiler_generated'] )
	end
'core_transforms'/1 =
    %% Line 936
    fun (_cor0) ->
	%% Line 938
	( case _cor0 of
	    ( <( {'compile',_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_rec114,_cor14,_cor15,_cor16,_cor17}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Ts> =
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor3) ->
				    case _cor3 of
				      <[{'core_transform',M}|_cor2]> when 'true' ->
					  let <_cor4> =
					      apply 'lc$^0'/1
						  (_cor2)
					  in  ( [M|_cor4]
						-| ['compiler_generated'] )
				      ( <[_cor1|_cor2]> when 'true' ->
					    apply 'lc$^0'/1
						(_cor2)
					-| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_7051> when 'true' ->
					    primop 'match_fail'
						({'function_clause',_cor3})
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(_rec114)
			-| ['list_comprehension'] )
		  in  %% Line 939
		      apply 'foldl_core_transforms'/2
			  (_cor0, Ts)
	      -| ['compiler_generated'] )
	    ( <_cor18> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','compile'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'foldl_core_transforms'/2 =
    %% Line 941
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <St,[T|Ts]> when 'true' ->
	      let <_cor2> =
		  %% Line 942
		  call 'erlang':'atom_to_list'
		      (T)
	      in  let <Name> =
		      %% Line 942
		      call 'erlang':'++'
			  ([99|[111|[114|[101|[32|[116|[114|[97|[110|[115|[102|[111|[114|[109|[32]]]]]]]]]]]]]]], _cor2)
		  in  let <Fun> =
			  %% Line 943
			  fun (_cor8) ->
			      ( case _cor8 of
				  ( <( {'compile',_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_rec115,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47}
				       -| ['compiler_generated'] )> when 'true' ->
					call T:'core_transform'
					    (_rec115, _cor43)
				    -| ['compiler_generated'] )
				  ( <_cor48> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','compile'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
		      in  %% Line 944
			  ( case _cor1 of
			      ( <( {'compile',_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_rec117,_cor72,_cor73,_cor74,_cor75}
				   -| ['compiler_generated'] )> when 'true' ->
				    let <_12531> =
					call 'lists':'member'
					    ('time', _rec117)
				    in  let <_cor18> =
					    case _12531 of
					      %% Line 945
					      <'true'> when 'true' ->
						  'run_tc'/2
					      %% Line 946
					      <'false'> when 'true' ->
						  fun (_cor14,_cor13) ->
						      case <_cor14,_cor13> of
							<{_X_Name,F},S> when 'true' ->
							    catch
								apply F
								    (_cor13)
							( <_cor16,_cor15> when 'true' ->
							      ( primop 'match_fail'
								    ({'function_clause',_cor14,_cor13})
								-| [{'function_name',{'-foldl_core_transforms/2-fun-2-',2}}] )
							  -| ['compiler_generated'] )
						      end
					      ( <_cor17> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_12531})
						-| ['compiler_generated'] )
					    end
					in  let <_12833> =
						%% Line 948
						apply _cor18
						    ({Name,Fun}, _cor1)
					    in  %% Line 948
						case _12833 of
						  %% Line 949
						  <{'EXIT',R}> when 'true' ->
						      let <Es> =
							  %% Line 950
							  [{_cor66,[{'none','compile',{'core_transform',T,R}}|[]]}|[]]
						      in  let <_rec119> =
							      %% Line 951
							      call 'erlang':'++'
								  (_cor74, Es)
							  in  let <_cor28> =
								  %% Line 951
								  call 'erlang':'setelement'
								      (14, _cor1, _rec119)
							      in  %% Line 951
								  {'error',_cor28}
						  %% Line 952
						  <Forms> when 'true' ->
						      let <_cor31> =
							  %% Line 953
							  call 'erlang':'setelement'
							      (8, _cor1, _12833)
						      in  %% Line 953
							  apply 'foldl_core_transforms'/2
							      (_cor31, Ts)
						end
				-| ['compiler_generated'] )
			      ( <_cor76> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','compile'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
	  %% Line 955
	  <St,[]> when 'true' ->
	      {'ok',_cor1}
	  ( <_cor34,_cor33> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'foldl_core_transforms',2}}] )
	    -| ['compiler_generated'] )
	end
'get_module'/1 =
    %% Line 959
    fun (_cor0) ->
	case _cor0 of
	  <[{'attribute',_cor2,'module',M}|_cor3]> when 'true' ->
	      M
	  %% Line 960
	  <[_cor4|Rest]> when 'true' ->
	      %% Line 961
	      apply 'get_module'/1
		  (Rest)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'get_module',1}}] )
	    -| ['compiler_generated'] )
	end
'add_default_base'/2 =
    %% Line 966
    fun (_cor1,_cor0) ->
	%% Line 967
	( case _cor1 of
	    ( <( {'compile',_rec123,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 968
		  case _rec123 of
		    %% Line 969
		    <[]> when 'true' ->
			let <M> =
			    %% Line 970
			    apply 'get_module'/1
				(_cor0)
			in  let <_rec124> =
				%% Line 971
				call 'erlang':'atom_to_list'
				    (M)
			    in  %% Line 971
				call 'erlang':'setelement'
				    (4, _cor1, _rec124)
		    %% Line 972
		    <_cor41> when 'true' ->
			_cor1
		  end
	      -| ['compiler_generated'] )
	    ( <_cor25> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','compile'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'lint_module'/1 =
    %% Line 976
    fun (_cor0) ->
	%% Line 977
	( case _cor0 of
	    ( <( {'compile',_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_rec126,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_7111> =
		      call 'erl_lint':'module'
			  (_rec126, _cor31, _cor36)
		  in  case _7111 of
			%% Line 979
			<{'ok',Ws}> when 'true' ->
			    let <St1> =
				%% Line 982
				apply 'add_default_base'/2
				    (_cor0, _rec126)
			    in  %% Line 983
				( case St1 of
				    ( <( {'compile',_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_rec132}
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_rec130> =
					      call 'erlang':'++'
						  (_rec132, Ws)
					  in  let <_cor15> =
						  call 'erlang':'setelement'
						      (15, St1, _rec130)
					      in  {'ok',_cor15}
				      -| ['compiler_generated'] )
				    ( <_cor97> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','compile'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			%% Line 984
			<{'error',Es,Ws}> when 'true' ->
			    let <_rec133> =
				%% Line 985
				call 'erlang':'++'
				    (_cor40, Ws)
			    in  let <_rec134> =
				    %% Line 986
				    call 'erlang':'++'
					(_cor39, Es)
				in  let <_cor23> =
					%% Line 985
					call 'erlang':'setelement'
					    (15, _cor0, _rec133)
				    in  let <_cor25> =
					    %% Line 986
					    call 'erlang':'setelement'
						(14, _cor23, _rec134)
					in  %% Line 985
					    {'error',_cor25}
			( <_cor26> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_7111})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor41> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','compile'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'core_lint_module'/1 =
    %% Line 989
    fun (_cor0) ->
	%% Line 990
	( case _cor0 of
	    ( <( {'compile',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_rec138,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_7467> =
		      call 'core_lint':'module'
			  (_rec138, _cor31)
		  in  case _7467 of
			%% Line 991
			<{'ok',Ws}> when 'true' ->
			    let <_rec140> =
				%% Line 992
				call 'erlang':'++'
				    (_cor35, Ws)
			    in  let <_cor10> =
				    %% Line 992
				    call 'erlang':'setelement'
					(15, _cor0, _rec140)
				in  %% Line 992
				    {'ok',_cor10}
			%% Line 993
			<{'error',Es,Ws}> when 'true' ->
			    let <_rec143> =
				%% Line 994
				call 'erlang':'++'
				    (_cor35, Ws)
			    in  let <_rec144> =
				    %% Line 995
				    call 'erlang':'++'
					(_cor34, Es)
				in  let <_cor18> =
					%% Line 994
					call 'erlang':'setelement'
					    (15, _cor0, _rec143)
				    in  let <_cor20> =
					    %% Line 995
					    call 'erlang':'setelement'
						(14, _cor18, _rec144)
					in  %% Line 994
					    {'error',_cor20}
			( <_cor21> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_7467})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor36> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','compile'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'makedep'/1 =
    %% Line 998
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,Code,_cor33,_cor34,Opts,_cor35,_cor36,_cor37,_cor38}> when 'true' ->
	      let <_4444> =
		  %% Line 1004
		  call 'proplists':'get_value'
		      ('makedep_target', Opts)
	      in  let <_cor8> =
		      %% Line 1004
		      case _4444 of
			%% Line 1005
			<'undefined'> when 'true' ->
			    %% Line 1009
			    apply 'shorten_filename'/1
				(_cor31)
			%% Line 1010
			<T> when 'true' ->
			    _4444
		      end
		  in  let <_6174> =
			  %% Line 1016
			  call 'proplists':'get_value'
			      ('makedep_quote_target', Opts)
		      in  let <_cor14> =
			      %% Line 1016
			      case _6174 of
				%% Line 1017
				<'true'> when 'true' ->
				    let <Fun> =
					%% Line 1019
					fun (_cor10) ->
					    case _cor10 of
					      %% Line 1020
					      <36> when 'true' ->
						  [36|[36]]
					      %% Line 1021
					      <C> when 'true' ->
						  _cor10
					    end
				    in  %% Line 1023
					call 'lists':'map'
					    (Fun, _cor8)
				%% Line 1024
				<_cor67> when 'true' ->
				    _cor8
			      end
			  in  let <Target> =
				  %% Line 1027
				  call 'erlang':'++'
				      (_cor14, [58])
			      in  let <_cor17> =
				      %% Line 1034
				      call 'erlang':'length'
					  (Target)
				  in  let <_9981> =
					  %% Line 1030
					  apply 'makedep_add_headers'/7
					      (_cor30, Code, %% Line 1033
							     [], _cor17, Target, %% Line 1036
										 [], Opts)
				      in  %% Line 1030
					  case _9981 of
					    <{MainRule,PhonyRules}> when 'true' ->
						let <_496> =
						    %% Line 1048
						    call 'proplists':'get_value'
							('makedep_phony', Opts)
						in  let <_cor20> =
							%% Line 1048
							case _496 of
							  %% Line 1049
							  <'true'> when 'true' ->
							      call 'erlang':'++'
								  (MainRule, PhonyRules)
							  %% Line 1050
							  <_cor68> when 'true' ->
							      MainRule
							end
						    in  let <_rec150> =
							    %% Line 1052
							    call 'erlang':'iolist_to_binary'
								([_cor20|[[10]]])
							in  let <_cor25> =
								%% Line 1052
								call 'erlang':'setelement'
								    (8, _cor0, _rec150)
							    in  %% Line 1052
								{'ok',_cor25}
					    ( <_cor18> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_9981})
					      -| ['compiler_generated'] )
					  end
	  ( <_cor26> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'makedep',1}}] )
	    -| ['compiler_generated'] )
	end
'makedep_add_headers'/7 =
    %% Line 1054
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Ifile,[{'attribute',_cor17,'file',{File,_cor18}}|Rest],Included,LineLen,MainTarget,Phony,Opts> when 'true' ->
	      let <_6678> =
		  %% Line 1058
		  apply 'makedep_add_header'/6
		      (_cor6, _cor4, _cor3, _cor2, _cor1, File)
	      in  %% Line 1057
		  case _6678 of
		    <{Included1,LineLen1,MainTarget1,Phony1}> when 'true' ->
			%% Line 1059
			apply 'makedep_add_headers'/7
			    (_cor6, Rest, Included1, LineLen1, MainTarget1, Phony1, _cor0)
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_6678})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1061
	  <Ifile,[{'error',{_cor19,'epp',{'include','file',File}}}|Rest],Included,LineLen,MainTarget,Phony,Opts> when 'true' ->
	      %% Line 1064
	      case call 'proplists':'get_value'
		       ('makedep_add_missing', _cor0) of
		%% Line 1065
		<'true'> when 'true' ->
		    let <_7242> =
			%% Line 1067
			apply 'makedep_add_header'/6
			    (_cor6, _cor4, _cor3, _cor2, _cor1, File)
		    in  %% Line 1066
			case _7242 of
			  <{Included1,LineLen1,MainTarget1,Phony1}> when 'true' ->
			      %% Line 1069
			      apply 'makedep_add_headers'/7
				  (_cor6, Rest, Included1, LineLen1, MainTarget1, Phony1, _cor0)
			  ( <_cor8> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_7242})
			    -| ['compiler_generated'] )
			end
		%% Line 1071
		<_cor20> when 'true' ->
		    %% Line 1072
		    apply 'makedep_add_headers'/7
			(_cor6, Rest, _cor4, _cor3, _cor2, _cor1, _cor0)
	      end
	  %% Line 1075
	  <Ifile,[_cor21|Rest],Included,LineLen,MainTarget,Phony,Opts> when 'true' ->
	      %% Line 1077
	      apply 'makedep_add_headers'/7
		  (_cor6, Rest, _cor4, _cor3, _cor2, _cor1, _cor0)
	  %% Line 1079
	  <_X_Ifile,[],_X_Included,_X_LineLen,MainTarget,Phony,_X_Opts> when 'true' ->
	      %% Line 1081
	      {_cor2,_cor1}
	  ( <_cor16,_cor15,_cor14,_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'makedep_add_headers',7}}] )
	    -| ['compiler_generated'] )
	end
'makedep_add_header'/6 =
    %% Line 1083
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_11509> =
	    %% Line 1084
	    call 'lists':'member'
		(_cor0, _cor4)
	in  %% Line 1084
	    case _11509 of
	      %% Line 1085
	      <'true'> when 'true' ->
		  %% Line 1087
		  {_cor4,_cor3,_cor2,_cor1}
	      %% Line 1088
	      <'false'> when 'true' ->
		  let <Included1> =
		      %% Line 1089
		      [_cor0|_cor4]
		  in  let <_cor8> =
			  %% Line 1092
			  case _cor0 of
			    %% Line 1093
			    <[46|[47|File0]]> when 'true' ->
				File0
			    %% Line 1094
			    <_cor34> when 'true' ->
				_cor0
			  end
		      in  let <_cor13> =
			      %% Line 1098
			      case _cor0 of
				%% Line 1099
				<_cor35>
				    when call 'erlang':'=:='
					  (_cor0,
					   _cor5) ->
				    _cor1
				%% Line 1100
				<_cor36> when 'true' ->
				    let <_cor10> =
					call 'erlang':'++'
					    (_cor8, [58])
				    in  let <_cor11> =
					    [10|[10|_cor10]]
					in  call 'erlang':'++'
						(_cor1, _cor11)
			      end
			  in  %% Line 1105
			      case <> of
				%% Line 1106
				<>
				    when try
					  let <_cor16> =
					      call 'erlang':'+'
						  (_cor3, 1)
					  in  let <_cor15> =
						  call 'erlang':'length'
						      (_cor8)
					      in  let <_cor17> =
						      call 'erlang':'+'
							  (_cor16, _cor15)
						  in  call 'erlang':'>'
							  (_cor17, 76)
				      of <Try> ->
					  Try
				      catch <T,R> ->
					  'false' ->
				    let <_cor18> =
					%% Line 1107
					call 'erlang':'length'
					    (_cor8)
				    in  let <LineLen1> =
					    %% Line 1107
					    call 'erlang':'+'
						(2, _cor18)
					in  let <_cor20> =
						%% Line 1108
						call 'erlang':'++'
						    ([32|[92|[10|[32|[32]]]]], _cor8)
					    in  let <MainTarget1> =
						    %% Line 1108
						    call 'erlang':'++'
							(_cor2, _cor20)
						in  %% Line 1109
						    {Included1,LineLen1,MainTarget1,_cor13}
				%% Line 1110
				<> when 'true' ->
				    let <_cor23> =
					%% Line 1111
					call 'erlang':'+'
					    (_cor3, 1)
				    in  let <_cor22> =
					    %% Line 1111
					    call 'erlang':'length'
						(_cor8)
					in  let <LineLen1> =
						%% Line 1111
						call 'erlang':'+'
						    (_cor23, _cor22)
					    in  let <_cor25> =
						    %% Line 1112
						    [32|_cor8]
						in  let <MainTarget1> =
							%% Line 1112
							call 'erlang':'++'
							    (_cor2, _cor25)
						    in  %% Line 1113
							{Included1,LineLen1,MainTarget1,_cor13}
			      end
	      ( <_cor27> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_11509})
		-| ['compiler_generated'] )
	    end
'makedep_output'/1 =
    %% Line 1117
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor46,_cor47,_cor48,_cor49,Ofile,_cor50,Code,_cor51,_cor52,Opts,_cor53,_cor54,_cor55,_cor56}> when 'true' ->
	      let <_11478> =
		  %% Line 1121
		  call 'proplists':'get_value'
		      ('makedep_output', Opts)
	      in  let <_cor3> =
		      %% Line 1121
		      case _11478 of
			%% Line 1122
			<'undefined'> when 'true' ->
			    let <_cor1> =
				%% Line 1124
				call 'filename':'basename'
				    (Ofile, [46|[98|[101|[97|[109]]]]])
			    in  %% Line 1124
				apply 'outfile'/3
				    (_cor1, [80|[98|[101|[97|[109]]]]], Opts)
			%% Line 1125
			<O> when 'true' ->
			    _11478
		      end
		  in  let <_cor10> =
			  %% Line 1132
			  case _cor3 of
			    %% Line 1133
			    <_cor57>
				when call 'erlang':'is_list'
				      (_cor3) ->
				let <_943> =
				    %% Line 1134
				    call 'file':'delete'
					(_cor3)
				in  %% Line 1134
				    case _943 of
				      %% Line 1135
				      <Ret2>
					  when let <_cor5> =
						call 'erlang':'=:='
						    (_943, 'ok')
					    in  let <_cor6> =
						    call 'erlang':'=:='
							(_943, {'error','enoent'})
						in  call 'erlang':'or'
							(_cor5, _cor6) ->
					  let <_9558> =
					      %% Line 1136
					      call 'file':'open'
						  (_cor3, ['write'])
					  in  %% Line 1136
					      case _9558 of
						%% Line 1137
						<{'ok',IODev}> when 'true' ->
						    %% Line 1138
						    {'ok',IODev,'true'}
						%% Line 1139
						<{'error',Reason2}> when 'true' ->
						    %% Line 1140
						    {'error','open',Reason2}
						( <_cor7> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_9558})
						  -| ['compiler_generated'] )
					      end
				      %% Line 1142
				      <{'error',Reason1}> when 'true' ->
					  %% Line 1143
					  {'error','delete',Reason1}
				      ( <_cor8> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_943})
					-| ['compiler_generated'] )
				    end
			    %% Line 1145
			    <_cor58> when 'true' ->
				%% Line 1146
				{'ok',_cor3,'false'}
			  end
		      in  %% Line 1149
			  case _cor10 of
			    %% Line 1150
			    <{'ok',Output1,CloseOutput}> when 'true' ->
				%% Line 1151
				try
				    do  do  %% Line 1153
					    call 'io':'fwrite'
						(Output1, [126|[116|[115]]], [Code|[]])
					    %% Line 1155
					    case <> of
					      %% Line 1156
					      <>
						  when call 'erlang':'=:='
							(CloseOutput,
							 'true') ->
						  let <_3453> =
						      call 'file':'close'
							  (Output1)
						  in  case _3453 of
							<'ok'> when 'true' ->
							    'ok'
							( <_cor12> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_3453})
							  -| ['compiler_generated'] )
						      end
					      %% Line 1157
					      <> when 'true' ->
						  'ok'
					    end
					%% Line 1159
					{'ok',_cor0}
				of <_cor13> ->
				    _cor13
				catch <_cor16,_cor15,_cor14> ->
				    case <_cor16,_cor15,_cor14> of
				      %% Line 1161
				      <'exit',_cor60,_cor61> when 'true' ->
					  let <Err> =
					      %% Line 1163
					      {_cor49,[{'none','compile','write_error'}]}
					  in  let <_rec153> =
						  %% Line 1164
						  call 'erlang':'++'
						      (_cor55, [Err|[]])
					      in  let <_cor25> =
						      %% Line 1164
						      call 'erlang':'setelement'
							  (14, _cor0, _rec153)
						  in  %% Line 1164
						      {'error',_cor25}
				      ( <_8143,_8161,_13009> when 'true' ->
					    primop 'raise'
						(_cor14, _cor15)
					-| ['compiler_generated'] )
				    end
			    %% Line 1166
			    <{'error','open',Reason}> when 'true' ->
				let <Err> =
				    %% Line 1168
				    {_cor49,[{'none','compile',{'open',Reason}}|[]]}
				in  let <_rec157> =
					%% Line 1169
					call 'erlang':'++'
					    (_cor55, [Err|[]])
				    in  let <_cor34> =
					    %% Line 1169
					    call 'erlang':'setelement'
						(14, _cor0, _rec157)
					in  %% Line 1169
					    {'error',_cor34}
			    %% Line 1170
			    <{'error','delete',Reason}> when 'true' ->
				let <Err> =
				    %% Line 1172
				    {_cor49,[{'none','compile',{'delete',_cor3,Reason}}|[]]}
				in  let <_rec161> =
					%% Line 1173
					call 'erlang':'++'
					    (_cor55, [Err|[]])
				    in  let <_cor43> =
					    %% Line 1173
					    call 'erlang':'setelement'
						(14, _cor0, _rec161)
					in  %% Line 1173
					    {'error',_cor43}
			    ( <_cor44> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor10})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor45> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'makedep_output',1}}] )
	    -| ['compiler_generated'] )
	end
'expand_module'/1 =
    %% Line 1179
    fun (_cor0) ->
	case _cor0 of
	  <St0 = {'compile',_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,Code,_cor16,_cor17,Opts0,_cor18,_cor19,_cor20,_cor21}> when 'true' ->
	      let <_965> =
		  %% Line 1180
		  call 'sys_pre_expand':'module'
		      (Code, Opts0)
	      in  %% Line 1180
		  case _965 of
		    <{Mod,Exp,Forms,Opts1}> when 'true' ->
			let <Opts> =
			    %% Line 1181
			    apply 'expand_opts'/1
				(Opts1)
			in  let <_rec164> = {Mod,Exp,Forms}
			    in  let <_cor5> =
				    %% Line 1182
				    call 'erlang':'setelement'
					(11, _cor0, Opts)
				in  let <_cor6> =
					%% Line 1182
					call 'erlang':'setelement'
					    (8, _cor5, _rec164)
				    in  let <_cor8> =
					    %% Line 1182
					    call 'erlang':'setelement'
						(7, _cor6, Mod)
					in  %% Line 1182
					    {'ok',_cor8}
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_965})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'expand_module',1}}] )
	    -| ['compiler_generated'] )
	end
'core_module'/1 =
    %% Line 1184
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,Code0,_cor16,_cor17,Opts,_cor18,_cor19,_cor20,_cor21}> when 'true' ->
	      let <_1108> =
		  %% Line 1185
		  call 'v3_core':'module'
		      (Code0, Opts)
	      in  %% Line 1185
		  case _1108 of
		    <{'ok',Code,Ws}> when 'true' ->
			let <_rec166> =
			    %% Line 1186
			    call 'erlang':'++'
				(_cor21, Ws)
			in  let <_cor6> =
				%% Line 1186
				call 'erlang':'setelement'
				    (15, _cor0, _rec166)
			    in  let <_cor8> =
				    %% Line 1186
				    call 'erlang':'setelement'
					(8, _cor6, Code)
				in  %% Line 1186
				    {'ok',_cor8}
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1108})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'core_module',1}}] )
	    -| ['compiler_generated'] )
	end
'core_fold_module'/1 =
    %% Line 1188
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,Code0,_cor14,_cor15,Opts,_cor16,_cor17,_cor18,Warns}> when 'true' ->
	      let <_337> =
		  %% Line 1189
		  call 'sys_core_fold':'module'
		      (Code0, Opts)
	      in  %% Line 1189
		  case _337 of
		    <{'ok',Code,Ws}> when 'true' ->
			let <_rec169> =
			    %% Line 1190
			    call 'erlang':'++'
				(Warns, Ws)
			in  let <_cor4> =
				%% Line 1190
				call 'erlang':'setelement'
				    (15, _cor0, _rec169)
			    in  let <_cor6> =
				    %% Line 1190
				    call 'erlang':'setelement'
					(8, _cor4, Code)
				in  %% Line 1190
				    {'ok',_cor6}
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_337})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'core_fold_module',1}}] )
	    -| ['compiler_generated'] )
	end
'core_fold_module_after_inlining'/1 =
    %% Line 1192
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,Code0,_cor12,_cor13,Opts,_cor14,_cor15,_cor16,_cor17}> when 'true' ->
	      let <_8343> =
		  %% Line 1195
		  call 'sys_core_fold':'module'
		      (Code0, Opts)
	      in  %% Line 1195
		  case _8343 of
		    <{'ok',Code,_X_Ws}> when 'true' ->
			let <_cor4> =
			    %% Line 1196
			    call 'erlang':'setelement'
				(8, _cor0, Code)
			in  %% Line 1196
			    {'ok',_cor4}
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_8343})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'core_fold_module_after_inlining',1}}] )
	    -| ['compiler_generated'] )
	end
'test_old_inliner'/1 =
    %% Line 1198
    fun (_cor0) ->
	case _cor0 of
	  <{'compile',_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,Opts,_cor14,_cor15,_cor16,_cor17}> when 'true' ->
	      let <_cor3> =
		  %% Line 1201
		  fun (_cor1) ->
		      case _cor1 of
			<{'inline',_cor18}> when 'true' ->
			    'true'
			%% Line 1202
			<_cor19> when 'true' ->
			    'false'
		      end
	      in  %% Line 1201
		  call 'lists':'any'
		      (_cor3, Opts)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'test_old_inliner',1}}] )
	    -| ['compiler_generated'] )
	end
'test_core_inliner'/1 =
    %% Line 1205
    fun (_cor0) ->
	case _cor0 of
	  <{'compile',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,Opts,_cor18,_cor19,_cor20,_cor21}> when 'true' ->
	      let <_cor3> =
		  %% Line 1206
		  fun (_cor1) ->
		      case _cor1 of
			<'no_inline'> when 'true' ->
			    'true'
			%% Line 1207
			<_cor22> when 'true' ->
			    'false'
		      end
	      in  let <_7890> =
		      %% Line 1206
		      call 'lists':'any'
			  (_cor3, Opts)
		  in  %% Line 1206
		      case _7890 of
			%% Line 1209
			<'true'> when 'true' ->
			    'false'
			%% Line 1210
			<'false'> when 'true' ->
			    let <_cor6> =
				%% Line 1211
				fun (_cor4) ->
				    case _cor4 of
				      <'inline'> when 'true' ->
					  'true'
				      %% Line 1212
				      <_cor23> when 'true' ->
					  'false'
				    end
			    in  %% Line 1211
				call 'lists':'any'
				    (_cor6, Opts)
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_7890})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'test_core_inliner',1}}] )
	    -| ['compiler_generated'] )
	end
'test_any_inliner'/1 =
    %% Line 1216
    fun (_cor0) ->
	let <_9646> =
	    %% Line 1217
	    apply 'test_old_inliner'/1
		(_cor0)
	in  %% Line 1217
	    ( case _9646 of
		( <( 'true'
		     -| ['compiler_generated'] )> when 'true' ->
		      'true'
		  -| ['compiler_generated'] )
		( <( 'false'
		     -| ['compiler_generated'] )> when 'true' ->
		      apply 'test_core_inliner'/1
			  (_cor0)
		  -| ['compiler_generated'] )
		( <_cor1> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {( 'badarg'
				  -| ['compiler_generated'] ),_9646}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'core_old_inliner'/1 =
    %% Line 1219
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,Code0,_cor12,_cor13,Opts,_cor14,_cor15,_cor16,_cor17}> when 'true' ->
	      let <_10776> =
		  %% Line 1220
		  call 'sys_core_inline':'module'
		      (Code0, Opts)
	      in  %% Line 1220
		  case _10776 of
		    <{'ok',Code}> when 'true' ->
			let <_cor4> =
			    %% Line 1221
			    call 'erlang':'setelement'
				(8, _cor0, Code)
			in  %% Line 1221
			    {'ok',_cor4}
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_10776})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'core_old_inliner',1}}] )
	    -| ['compiler_generated'] )
	end
'core_inline_module'/1 =
    %% Line 1223
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,Code0,_cor12,_cor13,Opts,_cor14,_cor15,_cor16,_cor17}> when 'true' ->
	      let <Code> =
		  %% Line 1224
		  call 'cerl_inline':'core_transform'
		      (Code0, Opts)
	      in  let <_cor4> =
		      %% Line 1225
		      call 'erlang':'setelement'
			  (8, _cor0, Code)
		  in  %% Line 1225
		      {'ok',_cor4}
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'core_inline_module',1}}] )
	    -| ['compiler_generated'] )
	end
'core_dsetel_module'/1 =
    %% Line 1227
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,Code0,_cor12,_cor13,Opts,_cor14,_cor15,_cor16,_cor17}> when 'true' ->
	      let <_1435> =
		  %% Line 1228
		  call 'sys_core_dsetel':'module'
		      (Code0, Opts)
	      in  %% Line 1228
		  case _1435 of
		    <{'ok',Code}> when 'true' ->
			let <_cor4> =
			    %% Line 1229
			    call 'erlang':'setelement'
				(8, _cor0, Code)
			in  %% Line 1229
			    {'ok',_cor4}
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_1435})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'core_dsetel_module',1}}] )
	    -| ['compiler_generated'] )
	end
'kernel_module'/1 =
    %% Line 1231
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,Code0,_cor16,_cor17,Opts,_cor18,_cor19,_cor20,_cor21}> when 'true' ->
	      let <_9621> =
		  %% Line 1232
		  call 'v3_kernel':'module'
		      (Code0, Opts)
	      in  %% Line 1232
		  case _9621 of
		    <{'ok',Code,Ws}> when 'true' ->
			let <_rec175> =
			    %% Line 1233
			    call 'erlang':'++'
				(_cor21, Ws)
			in  let <_cor6> =
				%% Line 1233
				call 'erlang':'setelement'
				    (15, _cor0, _rec175)
			    in  let <_cor8> =
				    %% Line 1233
				    call 'erlang':'setelement'
					(8, _cor6, Code)
				in  %% Line 1233
				    {'ok',_cor8}
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_9621})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'kernel_module',1}}] )
	    -| ['compiler_generated'] )
	end
'save_abstract_code'/1 =
    %% Line 1235
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor12,_cor13,_cor14,File,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24}> when 'true' ->
	      let <_2927> =
		  %% Line 1236
		  apply 'abstract_code'/1
		      (_cor0)
	      in  %% Line 1236
		  case _2927 of
		    %% Line 1237
		    <{'ok',Code}> when 'true' ->
			let <_cor3> =
			    %% Line 1238
			    call 'erlang':'setelement'
				(10, _cor0, Code)
			in  %% Line 1238
			    {'ok',_cor3}
		    %% Line 1239
		    <{'error',Es}> when 'true' ->
			let <_rec179> =
			    %% Line 1240
			    call 'erlang':'++'
				(_cor23, [{File,Es}|[]])
			in  let <_cor9> =
				%% Line 1240
				call 'erlang':'setelement'
				    (14, _cor0, _rec179)
			    in  %% Line 1240
				{'error',_cor9}
		    ( <_cor10> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_2927})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'save_abstract_code',1}}] )
	    -| ['compiler_generated'] )
	end
'abstract_code'/1 =
    %% Line 1243
    fun (_cor0) ->
	case _cor0 of
	  <{'compile',_cor10,_cor11,_cor12,_cor13,OFile,_cor14,Code,_cor15,_cor16,Opts,_cor17,_cor18,_cor19,_cor20}> when 'true' ->
	      let <Abstr> =
		  %% Line 1244
		  call 'erlang':'term_to_binary'
		      ({'raw_abstract_v1',Code}, ['compressed'])
	      in  let <_4864> =
		      %% Line 1245
		      call 'lists':'member'
			  ('encrypt_debug_info', Opts)
		  in  %% Line 1245
		      case _4864 of
			%% Line 1246
			<'true'> when 'true' ->
			    let <_1379> =
				%% Line 1247
				call 'lists':'keyfind'
				    ('debug_info_key', 1, Opts)
			    in  %% Line 1247
				case _1379 of
				  %% Line 1248
				  <{_cor21,Key}> when 'true' ->
				      %% Line 1249
				      apply 'encrypt_abs_code'/2
					  (Abstr, Key)
				  %% Line 1250
				  <'false'> when 'true' ->
				      let <_cor2> =
					  %% Line 1254
					  call 'filename':'basename'
					      (OFile)
				      in  let <_cor3> =
					      %% Line 1254
					      call 'filename':'rootname'
						  (_cor2)
					  in  let <Module> =
						  %% Line 1254
						  call 'erlang':'list_to_atom'
						      (_cor3)
					      in  let <Mode> =
						      %% Line 1255
						      call 'proplists':'get_value'
							  ('crypto_mode', Opts, 'des3_cbc')
						  in  let <_9115> =
							  %% Line 1256
							  call 'beam_lib':'get_crypto_key'
							      ({'debug_info',Mode,Module,OFile})
						      in  %% Line 1256
							  case _9115 of
							    %% Line 1257
							    <'error'> when 'true' ->
								%% Line 1258
								{'error',[{'none','compile','no_crypto_key'}]}
							    %% Line 1259
							    <Key> when 'true' ->
								%% Line 1260
								apply 'encrypt_abs_code'/2
								    (Abstr, {Mode,_9115})
							  end
				  ( <_cor7> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_1379})
				    -| ['compiler_generated'] )
				end
			%% Line 1263
			<'false'> when 'true' ->
			    %% Line 1264
			    {'ok',Abstr}
			( <_cor8> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_4864})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'abstract_code',1}}] )
	    -| ['compiler_generated'] )
	end
'encrypt_abs_code'/2 =
    %% Line 1267
    fun (_cor1,_cor0) ->
	%% Line 1268
	try
	    let <RealKey> =
		%% Line 1269
		apply 'generate_key'/1
		    (_cor0)
	    in  let <_6686> =
		    %% Line 1270
		    apply 'start_crypto'/0
			()
		in  %% Line 1270
		    case _6686 of
		      %% Line 1271
		      <'ok'> when 'true' ->
			  let <_cor3> =
			      apply 'encrypt'/2
				  (RealKey, _cor1)
			  in  {'ok',_cor3}
		      %% Line 1272
		      <E = {'error',_cor11}> when 'true' ->
			  _6686
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_6686})
			-| ['compiler_generated'] )
		    end
	of <_cor5> ->
	    _cor5
	catch <_cor8,_cor7,_cor6> ->
	    case <_cor8,_cor7,_cor6> of
	      %% Line 1275
	      <'error',_cor12,_cor13> when 'true' ->
		  %% Line 1276
		  {'error',[{'none','compile','bad_crypto_key'}]}
	      ( <_5076,_12491,_5803> when 'true' ->
		    primop 'raise'
			(_cor6, _cor7)
		-| ['compiler_generated'] )
	    end
'start_crypto'/0 =
    %% Line 1279
    fun () ->
	%% Line 1280
	try
	    call 'crypto':'start'
		()
	of <_cor0> ->
	    case _cor0 of
	      %% Line 1281
	      <{'error',{'already_started','crypto'}}> when 'true' ->
		  'ok'
	      %% Line 1282
	      <'ok'> when 'true' ->
		  'ok'
	      ( <_cor1> when 'true' ->
		    primop 'match_fail'
			({'try_clause',_cor0})
		-| ['compiler_generated'] )
	    end
	catch <_cor4,_cor3,_cor2> ->
	    case <_cor4,_cor3,_cor2> of
	      %% Line 1284
	      <'error',_cor5,_cor6> when 'true' ->
		  %% Line 1285
		  {'error',[{'none','compile','no_crypto'}]}
	      ( <_2097,_8353,_11602> when 'true' ->
		    primop 'raise'
			(_cor2, _cor3)
		-| ['compiler_generated'] )
	    end
'generate_key'/1 =
    %% Line 1288
    fun (_cor0) ->
	case _cor0 of
	  <{Type,String}>
	      when let <_cor1> =
		    call 'erlang':'is_atom'
			(Type)
		in  let <_cor2> =
			call 'erlang':'is_list'
			    (String)
		    in  call 'erlang':'and'
			    (_cor1, _cor2) ->
	      %% Line 1289
	      call 'beam_lib':'make_crypto_key'
		  (Type, String)
	  %% Line 1290
	  <String>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 1291
	      apply 'generate_key'/1
		  ({'des3_cbc',_cor0})
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'generate_key',1}}] )
	    -| ['compiler_generated'] )
	end
'encrypt'/2 =
    %% Line 1293
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{Type = 'des3_cbc',Key,IVec,BlockSize},Bin0> when 'true' ->
	      let <_cor2> =
		  %% Line 1294
		  call 'erlang':'byte_size'
		      (_cor0)
	      in  let <_10763> =
		      %% Line 1294
		      call 'erlang':'rem'
			  (_cor2, BlockSize)
		  in  let <_cor6> =
			  %% Line 1294
			  case _10763 of
			    %% Line 1295
			    <0> when 'true' ->
				_cor0
			    %% Line 1296
			    <N> when 'true' ->
				let <_cor3> =
				    call 'erlang':'-'
					(BlockSize, _10763)
				in  let <_cor4> =
					apply 'random_bytes'/1
					    (_cor3)
				    in  call 'erlang':'list_to_binary'
					    ([_cor0|[_cor4|[]]])
			  end
		      in  let <Bin> =
			      %% Line 1298
			      call 'crypto':'block_encrypt'
				  (Type, Key, IVec, _cor6)
			  in  let <TypeString> =
				  %% Line 1299
				  call 'erlang':'atom_to_list'
				      (Type)
			      in  let <_cor10> =
				      %% Line 1300
				      call 'erlang':'length'
					  (TypeString)
				  in  %% Line 1300
				      call 'erlang':'list_to_binary'
					  ([0|[_cor10|[TypeString|[Bin|[]]]]])
	  ( <_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'encrypt',2}}] )
	    -| ['compiler_generated'] )
	end
'random_bytes'/1 =
    %% Line 1302
    fun (_cor0) ->
	let <_7384> =
	    %% Line 1303
	    call 'erlang':'now'
		()
	in  %% Line 1303
	    case _7384 of
	      <{A,B,C}> when 'true' ->
		  do  %% Line 1304
		      ( call 'random':'seed'
			    (A, B, C)
			-| ['result_not_wanted'] )
		      %% Line 1305
		      apply 'random_bytes_1'/2
			  (_cor0, [])
	      ( <_cor1> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_7384})
		-| ['compiler_generated'] )
	    end
'random_bytes_1'/2 =
    %% Line 1307
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <0,Acc> when 'true' ->
	      _cor0
	  %% Line 1308
	  <N,Acc> when 'true' ->
	      let <_cor3> =
		  call 'erlang':'-'
		      (_cor1, 1)
	      in  let <_cor2> =
		      call 'random':'uniform'
			  (255)
		  in  apply 'random_bytes_1'/2
			  (_cor3, [_cor2|_cor0])
	end
'save_core_code'/1 =
    %% Line 1310
    fun (_cor0) ->
	%% Line 1311
	( case _cor0 of
	    ( <( {'compile',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_rec184,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_rec182> =
		      call 'cerl':'from_records'
			  (_rec184)
		  in  let <_cor6> =
			  call 'erlang':'setelement'
			      (9, _cor0, _rec182)
		      in  {'ok',_cor6}
	      -| ['compiler_generated'] )
	    ( <_cor21> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','compile'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'beam_asm'/1 =
    %% Line 1313
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor19,_cor20,_cor21,File,_cor22,_cor23,Code0,_cor24,Abst,_cor25,Opts0,_cor26,_cor27,_cor28}> when 'true' ->
	      let <Source> =
		  %% Line 1315
		  call 'filename':'absname'
		      (File)
	      in  let <_cor4> =
		      %% Line 1316
		      fun (_cor2) ->
			  case _cor2 of
			    <{'debug_info_key',_cor29}> when 'true' ->
				{'debug_info_key','********'}
			    %% Line 1317
			    <Other> when 'true' ->
				_cor2
			  end
		  in  let <Opts1> =
			  %% Line 1316
			  call 'lists':'map'
			      (_cor4, Opts0)
		      in  let <_cor11> =
			      %% Line 1319
			      ( letrec
				    'lc$^0'/1 =
					fun (_cor8) ->
					    case _cor8 of
					      <[O|_cor7]> when 'true' ->
						  let <_7382> =
						      apply 'effects_code_generation'/1
							  (O)
						  in  ( case _7382 of
							  <'true'> when 'true' ->
							      let <_cor9> =
								  apply 'lc$^0'/1
								      (_cor7)
							      in  ( [O|_cor9]
								    -| ['compiler_generated'] )
							  ( <'false'> when 'true' ->
								apply 'lc$^0'/1
								    (_cor7)
							    -| ['compiler_generated'] )
							  ( <_cor10> when 'true' ->
								primop 'match_fail'
								    ({'case_clause',_7382})
							    -| ['compiler_generated'] )
							end
							-| ['list_comprehension'] )
					      <[]> when 'true' ->
						  []
					      ( <_11886> when 'true' ->
						    ( primop 'match_fail'
							  ({'function_clause',_cor8})
						      -| [{'function_name',{'lc$^0',1}}] )
						-| ['compiler_generated'] )
					    end
				in  apply 'lc$^0'/1
					(Opts1)
				-| ['list_comprehension'] )
			  in  let <_11605> =
				  %% Line 1320
				  call 'beam_asm':'module'
				      (Code0, Abst, Source, _cor11)
			      in  %% Line 1320
				  case _11605 of
				    %% Line 1321
				    <{'ok',Code}> when 'true' ->
					let <_cor14> =
					    call 'erlang':'setelement'
						(10, _cor0, [])
					in  let <_cor16> =
						call 'erlang':'setelement'
						    (8, _cor14, Code)
					    in  {'ok',_cor16}
				    ( <_cor17> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_11605})
				      -| ['compiler_generated'] )
				  end
	  ( <_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'beam_asm',1}}] )
	    -| ['compiler_generated'] )
	end
'test_native'/1 =
    %% Line 1324
    fun (_cor0) ->
	case _cor0 of
	  <{'compile',_cor2,_cor3,_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,Opts,_cor11,_cor12,_cor13,_cor14}> when 'true' ->
	      %% Line 1328
	      apply 'is_native_enabled'/1
		  (Opts)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'test_native',1}}] )
	    -| ['compiler_generated'] )
	end
'is_native_enabled'/1 =
    %% Line 1330
    fun (_cor0) ->
	case _cor0 of
	  <['native'|_cor2]> when 'true' ->
	      'true'
	  %% Line 1331
	  <['no_native'|_cor3]> when 'true' ->
	      'false'
	  %% Line 1332
	  <[_cor4|Opts]> when 'true' ->
	      apply 'is_native_enabled'/1
		  (Opts)
	  %% Line 1333
	  <[]> when 'true' ->
	      'false'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'is_native_enabled',1}}] )
	    -| ['compiler_generated'] )
	end
'native_compile'/1 =
    %% Line 1335
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,'none',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24}> when 'true' ->
	      {'ok',_cor0}
	  %% Line 1336
	  <St> when 'true' ->
	      %% Line 1337
	      case call 'erlang':'system_info'
		       ('hipe_architecture') of
		%% Line 1338
		<'undefined'> when 'true' ->
		    %% Line 1339
		    ( case _cor0 of
			( <( {'compile',_cor25,_cor26,_cor27,_rec186,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <Ws> =
				  [{_rec186,[{'none','compile','no_native_support'}]}|[]]
			      in  let <_rec187> =
				      %% Line 1340
				      call 'erlang':'++'
					  (_cor37, Ws)
				  in  let <_cor9> =
					  %% Line 1340
					  call 'erlang':'setelement'
					      (15, _cor0, _rec187)
				      in  %% Line 1340
					  {'ok',_cor9}
			  -| ['compiler_generated'] )
			( <_cor38> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','compile'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 1341
		<_cor68> when 'true' ->
		    %% Line 1342
		    apply 'native_compile_1'/1
			(_cor0)
	      end
	end
'native_compile_1'/1 =
    %% Line 1345
    fun (_cor0) ->
	%% Line 1346
	( case _cor0 of
	    ( <( {'compile',_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_rec190,_cor60,_cor61,_cor62,_cor63}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <IgnoreErrors> =
		      %% Line 1347
		      call 'lists':'member'
			  ('ignore_native_errors', _rec190)
		  in  let <_9780> =
			  %% Line 1348
			  call 'lists':'keyfind'
			      ('hipe', 1, _rec190)
		      in  let <_cor6> =
			      %% Line 1348
			      case _9780 of
				%% Line 1349
				<{'hipe',L}>
				    when call 'erlang':'is_list'
					  (L) ->
				    L
				%% Line 1350
				<{'hipe',X}> when 'true' ->
				    [X|[]]
				%% Line 1351
				<_cor65> when 'true' ->
				    []
			      end
			  in  %% Line 1353
			      try
				  call 'hipe':'compile'
				      (_cor56, _cor58, _cor57, _cor6)
			      of <_cor14> ->
				  case _cor14 of
				    %% Line 1357
				    <{'ok',T = {_X_Type,Bin}}>
					when call 'erlang':'is_binary'
					      (Bin) ->
					let <_cor15> =
					    %% Line 1358
					    apply 'embed_native_code'/2
						(_cor0, T)
					in  %% Line 1358
					    {'ok',_cor15}
				    %% Line 1359
				    <{'error',R}> when 'true' ->
					%% Line 1360
					case IgnoreErrors of
					  %% Line 1361
					  <'true'> when 'true' ->
					      let <Ws> =
						  %% Line 1362
						  [{_cor54,[{'none','compile',{'native',R}}|[]]}|[]]
					      in  let <_rec195> =
						      %% Line 1363
						      call 'erlang':'++'
							  (_cor63, Ws)
						  in  let <_cor24> =
							  %% Line 1363
							  call 'erlang':'setelement'
							      (15, _cor0, _rec195)
						      in  %% Line 1363
							  {'ok',_cor24}
					  %% Line 1364
					  <'false'> when 'true' ->
					      let <Es> =
						  %% Line 1365
						  [{_cor54,[{'none','compile',{'native',R}}|[]]}|[]]
					      in  let <_rec199> =
						      %% Line 1366
						      call 'erlang':'++'
							  (_cor62, Es)
						  in  let <_cor33> =
							  %% Line 1366
							  call 'erlang':'setelement'
							      (14, _cor0, _rec199)
						      in  %% Line 1366
							  {'error',_cor33}
					  ( <_cor34> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',IgnoreErrors})
					    -| ['compiler_generated'] )
					end
				    ( <_cor35> when 'true' ->
					  primop 'match_fail'
					      ({'try_clause',_cor14})
				      -| ['compiler_generated'] )
				  end
			      catch <_cor38,_cor37,_cor36> ->
				  let <Stk> =
				      %% Line 1370
				      call 'erlang':'get_stacktrace'
					  ()
				  in  %% Line 1371
				      case IgnoreErrors of
					%% Line 1372
					<'true'> when 'true' ->
					    let <Ws> =
						%% Line 1373
						[{_cor54,%% Line 1374
							 [{'none','compile',{'native_crash',_cor37,Stk}}|[]]}|%% Line 1374
													      []]
					    in  let <_rec203> =
						    %% Line 1375
						    call 'erlang':'++'
							(_cor63, Ws)
						in  let <_cor48> =
							%% Line 1375
							call 'erlang':'setelement'
							    (15, _cor0, _rec203)
						    in  %% Line 1375
							{'ok',_cor48}
					%% Line 1376
					<'false'> when 'true' ->
					    %% Line 1377
					    call 'erlang':'raise'
						(_cor38, _cor37, Stk)
					( <_cor49> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',IgnoreErrors})
					  -| ['compiler_generated'] )
				      end
	      -| ['compiler_generated'] )
	    ( <_cor64> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','compile'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'embed_native_code'/2 =
    %% Line 1381
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <St,{Architecture,NativeCode}> when 'true' ->
	      %% Line 1382
	      ( case _cor1 of
		  ( <( {'compile',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_rec206,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_3274> =
			    call 'beam_lib':'all_chunks'
				(_rec206)
			in  case _3274 of
			      <{'ok',_cor27,Chunks0}> when 'true' ->
				  let <ChunkName> =
				      %% Line 1383
				      call 'hipe_unified_loader':'chunk_name'
					  (Architecture)
				  in  let <Chunks1> =
					  %% Line 1384
					  call 'lists':'keydelete'
					      (ChunkName, 1, Chunks0)
				      in  let <Chunks> =
					      %% Line 1385
					      call 'erlang':'++'
						  (Chunks1, [{ChunkName,NativeCode}|[]])
					  in  let <_7764> =
						  %% Line 1386
						  call 'beam_lib':'build_module'
						      (Chunks)
					      in  %% Line 1386
						  case _7764 of
						    <{'ok',BeamPlusNative}> when 'true' ->
							%% Line 1387
							call 'erlang':'setelement'
							    (8, _cor1, BeamPlusNative)
						    ( <_cor8> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_7764})
						      -| ['compiler_generated'] )
						  end
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_3274})
				-| ['compiler_generated'] )
			    end
		    -| ['compiler_generated'] )
		  ( <_cor26> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','compile'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'embed_native_code',2}}] )
	    -| ['compiler_generated'] )
	end
'effects_code_generation'/1 =
    %% Line 1394
    fun (_cor0) ->
	%% Line 1395
	case _cor0 of
	  %% Line 1396
	  <'beam'> when 'true' ->
	      'false'
	  %% Line 1397
	  <'report_warnings'> when 'true' ->
	      'false'
	  %% Line 1398
	  <'report_errors'> when 'true' ->
	      'false'
	  %% Line 1399
	  <'return_errors'> when 'true' ->
	      'false'
	  %% Line 1400
	  <'return_warnings'> when 'true' ->
	      'false'
	  %% Line 1401
	  <'binary'> when 'true' ->
	      'false'
	  %% Line 1402
	  <'verbose'> when 'true' ->
	      'false'
	  %% Line 1403
	  <{'cwd',_cor3}> when 'true' ->
	      'false'
	  %% Line 1404
	  <_cor4> when 'true' ->
	      'true'
	end
'save_binary'/1 =
    %% Line 1407
    fun (_cor0) ->
	case _cor0 of
	  <St = {'compile',_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,'none',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27}> when 'true' ->
	      {'ok',_cor0}
	  %% Line 1408
	  <St = {'compile',_cor28,_cor29,_cor30,_cor31,Outfile,Mod,_cor32,_cor33,_cor34,Opts,_cor35,_cor36,_cor37,_cor38}> when 'true' ->
	      let <_12459> =
		  %% Line 1411
		  call 'lists':'member'
		      ('no_error_module_mismatch', Opts)
	      in  %% Line 1411
		  case _12459 of
		    %% Line 1412
		    <'true'> when 'true' ->
			%% Line 1413
			apply 'save_binary_1'/1
			    (_cor0)
		    %% Line 1414
		    <'false'> when 'true' ->
			let <_cor1> =
			    %% Line 1415
			    call 'filename':'basename'
				(Outfile)
			in  let <Base> =
				%% Line 1415
				call 'filename':'rootname'
				    (_cor1)
			    in  let <_8936> =
				    %% Line 1416
				    call 'erlang':'atom_to_list'
					(Mod)
				in  %% Line 1416
				    case _8936 of
				      %% Line 1417
				      <_cor39>
					  when call 'erlang':'=:='
						(_8936,
						 Base) ->
					  %% Line 1418
					  apply 'save_binary_1'/1
					      (_cor0)
				      %% Line 1419
				      <_cor40> when 'true' ->
					  let <Es> =
					      %% Line 1420
					      [{Outfile,%% Line 1421
							[{'none','compile',{'module_name',Mod,Base}}|[]]}|%% Line 1421
													  []]
					  in  let <_rec209> =
						  %% Line 1422
						  call 'erlang':'++'
						      (_cor37, Es)
					      in  let <_cor11> =
						      %% Line 1422
						      call 'erlang':'setelement'
							  (14, _cor0, _rec209)
						  in  %% Line 1422
						      {'error',_cor11}
				    end
		    ( <_cor13> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_12459})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'save_binary',1}}] )
	    -| ['compiler_generated'] )
	end
'save_binary_1'/1 =
    %% Line 1426
    fun (_cor0) ->
	%% Line 1427
	( case _cor0 of
	    ( <( {'compile',_cor27,_cor28,_cor29,_cor30,_rec212,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor1> =
		      %% Line 1556
		      call 'lists':'reverse'
			  (_rec212)
		  in  let <_cor2> =
			  %% Line 1556
			  call 'erlang':'tl'
			      (_cor1)
		      in  let <Tfile> =
			      %% Line 1556
			      call 'lists':'reverse'
				  ([35|_cor2])
			  in  let <_7165> =
				  %% Line 1429
				  apply 'write_binary'/3
				      (Tfile, _cor32, _cor0)
			      in  %% Line 1429
				  case _7165 of
				    %% Line 1430
				    <'ok'> when 'true' ->
					let <_7004> =
					    %% Line 1431
					    call 'file':'rename'
						(Tfile, _rec212)
					in  %% Line 1431
					    case _7004 of
					      %% Line 1432
					      <'ok'> when 'true' ->
						  %% Line 1433
						  {'ok',_cor0}
					      %% Line 1434
					      <{'error',RenameError}> when 'true' ->
						  let <Es0> =
						      %% Line 1435
						      [{_rec212,[{'none','compile',{'rename',Tfile,_rec212,RenameError}}|%% Line 1436
															 []]}|%% Line 1436
															      []]
						  in  let <_6202> =
							  %% Line 1437
							  call 'file':'delete'
							      (Tfile)
						      in  let <_cor9> =
							      %% Line 1437
							      case _6202 of
								%% Line 1438
								<'ok'> when 'true' ->
								    Es0
								%% Line 1439
								<{'error',DeleteError}> when 'true' ->
								    %% Line 1440
								    call 'erlang':'++'
									(Es0, %% Line 1441
									      [{_rec212,%% Line 1442
											[{'none','compile',{'delete_temp',Tfile,DeleteError}}|%% Line 1443
																	      []]}|%% Line 1443
																		   []])
								( <_cor8> when 'true' ->
								      primop 'match_fail'
									  ({'case_clause',_6202})
								  -| ['compiler_generated'] )
							      end
							  in  let <_rec214> =
								  %% Line 1445
								  call 'erlang':'++'
								      (_cor38, _cor9)
							      in  let <_cor16> =
								      %% Line 1445
								      call 'erlang':'setelement'
									  (14, _cor0, _rec214)
								  in  %% Line 1445
								      {'error',_cor16}
					      ( <_cor17> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_7004})
						-| ['compiler_generated'] )
					    end
				    %% Line 1447
				    <{'error',_X_Error}> when 'true' ->
					let <Es> =
					    %% Line 1448
					    [{Tfile,[{'none','compile','write_error'}]}|[]]
					in  let <_rec217> =
						%% Line 1449
						call 'erlang':'++'
						    (_cor38, Es)
					    in  let <_cor24> =
						    %% Line 1449
						    call 'erlang':'setelement'
							(14, _cor0, _rec217)
						in  %% Line 1449
						    {'error',_cor24}
				    ( <_cor25> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_7165})
				      -| ['compiler_generated'] )
				  end
	      -| ['compiler_generated'] )
	    ( <_cor40> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','compile'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'write_binary'/3 =
    %% Line 1452
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1453
	( case _cor0 of
	    ( <( {'compile',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_rec220,_cor21,_cor22,_cor23,_cor24}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_10050> =
		      call 'lists':'member'
			  ('compressed', _rec220)
		  in  let <_cor6> =
			  case _10050 of
			    %% Line 1454
			    <'true'> when 'true' ->
				['compressed']
			    %% Line 1455
			    <'false'> when 'true' ->
				[]
			    ( <_cor5> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_10050})
			      -| ['compiler_generated'] )
			  end
		      in  let <_1699> =
			      %% Line 1457
			      call 'file':'write_file'
				  (_cor2, _cor1, _cor6)
			  in  %% Line 1457
			      case _1699 of
				%% Line 1458
				<'ok'> when 'true' ->
				    'ok'
				%% Line 1459
				<Error = {'error',_cor26}> when 'true' ->
				    _1699
				( <_cor8> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_1699})
				  -| ['compiler_generated'] )
			      end
	      -| ['compiler_generated'] )
	    ( <_cor25> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','compile'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'report_errors'/1 =
    %% Line 1465
    fun (_cor0) ->
	case _cor0 of
	  <{'compile',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,Opts,_cor15,_cor16,Errors,_cor17}> when 'true' ->
	      let <_2441> =
		  %% Line 1466
		  call 'lists':'member'
		      ('report_errors', Opts)
	      in  %% Line 1466
		  case _2441 of
		    %% Line 1467
		    <'true'> when 'true' ->
			let <_cor3> =
			    %% Line 1468
			    fun (_cor1) ->
				case _cor1 of
				  <{{F,_X_L},Eds}> when 'true' ->
				      apply 'list_errors'/2
					  (F, Eds)
				  %% Line 1469
				  <{F,Eds}> when 'true' ->
				      apply 'list_errors'/2
					  (F, Eds)
				  ( <_cor2> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor1})
					  -| [{'function_name',{'-report_errors/1-fun-0-',1}}] )
				    -| ['compiler_generated'] )
				end
			in  %% Line 1468
			    call 'lists':'foreach'
				(_cor3, Errors)
		    %% Line 1471
		    <'false'> when 'true' ->
			'ok'
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_2441})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'report_errors',1}}] )
	    -| ['compiler_generated'] )
	end
'report_warnings'/1 =
    %% Line 1474
    fun (_cor0) ->
	case _cor0 of
	  <{'compile',_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,Opts,_cor31,_cor32,_cor33,Ws0}> when 'true' ->
	      let <Werror> =
		  %% Line 1475
		  call 'lists':'member'
		      ('warnings_as_errors', Opts)
	      in  let <_cor3> =
		      %% Line 1476
		      case Werror of
			%% Line 1477
			<'true'> when 'true' ->
			    []
			%% Line 1478
			<'false'> when 'true' ->
			    [87|[97|[114|[110|[105|[110|[103|[58|[32]]]]]]]]]
			( <_cor2> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',Werror})
			  -| ['compiler_generated'] )
		      end
		  in  let <_cor7> =
			  %% Line 1480
			  ( case Werror of
			      ( <( 'true'
				   -| ['compiler_generated'] )> when 'true' ->
				    call 'lists':'member'
					('report_errors', Opts)
				-| ['compiler_generated'] )
			      ( <( 'false'
				   -| ['compiler_generated'] )> when 'true' ->
				    'false'
				-| ['compiler_generated'] )
			      ( <_cor5> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {( 'badarg'
						-| ['compiler_generated'] ),Werror}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      in  let <_2258> =
			      %% Line 1481
			      call 'lists':'member'
				  ('report_warnings', Opts)
			  in  let <_cor11> =
				  %% Line 1481
				  ( case _2258 of
				      ( <( 'true'
					   -| ['compiler_generated'] )> when 'true' ->
					    'true'
					-| ['compiler_generated'] )
				      ( <( 'false'
					   -| ['compiler_generated'] )> when 'true' ->
					    _cor7
					-| ['compiler_generated'] )
				      ( <_cor9> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {( 'badarg'
							-| ['compiler_generated'] ),_2258}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      in  %% Line 1481
				  case _cor11 of
				    %% Line 1482
				    <'true'> when 'true' ->
					let <_cor14> =
					    %% Line 1483
					    fun (_cor12) ->
						case _cor12 of
						  <{{F,_X_L},Eds}> when 'true' ->
						      apply 'format_message'/3
							  (F, _cor3, Eds)
						  %% Line 1484
						  <{F,Eds}> when 'true' ->
						      apply 'format_message'/3
							  (F, _cor3, Eds)
						  ( <_cor13> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor12})
							  -| [{'function_name',{'-report_warnings/1-fun-0-',1}}] )
						    -| ['compiler_generated'] )
						end
					in  let <Ws1> =
						%% Line 1483
						call 'lists':'flatmap'
						    (_cor14, Ws0)
					    in  let <Ws> =
						    %% Line 1486
						    call 'lists':'sort'
							(Ws1)
						in  let <_cor19> =
							%% Line 1487
							fun (_cor17) ->
							    case _cor17 of
							      <{_cor34,Str}> when 'true' ->
								  call 'io':'put_chars'
								      (Str)
							      ( <_cor18> when 'true' ->
								    ( primop 'match_fail'
									  ({'function_clause',_cor17})
								      -| [{'function_name',{'-report_warnings/1-fun-1-',1}}] )
								-| ['compiler_generated'] )
							    end
						    in  %% Line 1487
							call 'lists':'foreach'
							    (_cor19, Ws)
				    %% Line 1488
				    <'false'> when 'true' ->
					'ok'
				    ( <_cor20> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor11})
				      -| ['compiler_generated'] )
				  end
	  ( <_cor21> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'report_warnings',1}}] )
	    -| ['compiler_generated'] )
	end
'format_message'/3 =
    %% Line 1491
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <F,P,[{'none',Mod,E}|Es]> when 'true' ->
	      let <_cor3> =
		  %% Line 1492
		  call Mod:'format_error'
		      (E)
	      in  let <_cor4> =
		      %% Line 1492
		      call 'io_lib':'format'
			  ([126|[116|[115|[58|[32|[126|[115|[126|[116|[115|[10]]]]]]]]]]], [_cor2|[_cor1|[_cor3|[]]]])
		  in  let <M> = {%% Line 1492
			   'none',_cor4}
		      in  let <_cor6> =
			      %% Line 1493
			      apply 'format_message'/3
				  (_cor2, _cor1, Es)
			  in  %% Line 1493
			      [M|_cor6]
	  %% Line 1494
	  <F,P,[{Loc = {Line,Column},Mod,E}|Es]> when 'true' ->
	      let <_cor7> =
		  %% Line 1496
		  call Mod:'format_error'
		      (E)
	      in  let <_cor8> =
		      %% Line 1495
		      call 'io_lib':'format'
			  ([126|[116|[115|[58|[126|[119|[58|[126|[119|[32|[126|[115|[126|[116|[115|[10]]]]]]]]]]]]]]]], %% Line 1496
															[_cor2|[Line|[Column|[_cor1|[_cor7|[]]]]]])
		  in  let <M> = {%% Line 1495
			   {_cor2,Loc},_cor8}
		      in  let <_cor10> =
			      %% Line 1497
			      apply 'format_message'/3
				  (_cor2, _cor1, Es)
			  in  %% Line 1497
			      [M|_cor10]
	  %% Line 1498
	  <F,P,[{Line,Mod,E}|Es]> when 'true' ->
	      let <_cor11> =
		  %% Line 1500
		  call Mod:'format_error'
		      (E)
	      in  let <_cor12> =
		      %% Line 1499
		      call 'io_lib':'format'
			  ([126|[116|[115|[58|[126|[119|[58|[32|[126|[115|[126|[116|[115|[10]]]]]]]]]]]]]], %% Line 1500
													    [_cor2|[Line|[_cor1|[_cor11|[]]]]])
		  in  let <M> = {%% Line 1499
			   {_cor2,{Line,0}},_cor12}
		      in  let <_cor14> =
			      %% Line 1501
			      apply 'format_message'/3
				  (_cor2, _cor1, Es)
			  in  %% Line 1501
			      [M|_cor14]
	  %% Line 1502
	  <F,P,[{Mod,E}|Es]> when 'true' ->
	      let <_cor15> =
		  %% Line 1505
		  call Mod:'format_error'
		      (E)
	      in  let <_cor16> =
		      %% Line 1505
		      call 'io_lib':'format'
			  ([126|[116|[115|[58|[32|[126|[115|[126|[116|[115|[10]]]]]]]]]]], [_cor2|[_cor1|[_cor15|[]]]])
		  in  let <M> = {%% Line 1505
			   'none',_cor16}
		      in  let <_cor18> =
			      %% Line 1506
			      apply 'format_message'/3
				  (_cor2, _cor1, Es)
			  in  %% Line 1506
			      [M|_cor18]
	  %% Line 1507
	  <_cor22,_cor23,[]> when 'true' ->
	      []
	  ( <_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'format_message',3}}] )
	    -| ['compiler_generated'] )
	end
'list_errors'/2 =
    %% Line 1511
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <F,[{'none',Mod,E}|Es]> when 'true' ->
	      let <_cor2> =
		  %% Line 1512
		  call Mod:'format_error'
		      (E)
	      in  do  %% Line 1512
		      call 'io':'fwrite'
			  ([126|[116|[115|[58|[32|[126|[116|[115|[10]]]]]]]]], [_cor1|[_cor2|[]]])
		      %% Line 1513
		      apply 'list_errors'/2
			  (_cor1, Es)
	  %% Line 1514
	  <F,[{{Line,Column},Mod,E}|Es]> when 'true' ->
	      let <_cor3> =
		  %% Line 1515
		  call Mod:'format_error'
		      (E)
	      in  do  %% Line 1515
		      call 'io':'fwrite'
			  ([126|[116|[115|[58|[126|[119|[58|[126|[119|[58|[32|[126|[116|[115|[10]]]]]]]]]]]]]]], [_cor1|[Line|[Column|[_cor3|[]]]]])
		      %% Line 1516
		      apply 'list_errors'/2
			  (_cor1, Es)
	  %% Line 1517
	  <F,[{Line,Mod,E}|Es]> when 'true' ->
	      let <_cor4> =
		  %% Line 1518
		  call Mod:'format_error'
		      (E)
	      in  do  %% Line 1518
		      call 'io':'fwrite'
			  ([126|[116|[115|[58|[126|[119|[58|[32|[126|[116|[115|[10]]]]]]]]]]]], [_cor1|[Line|[_cor4|[]]]])
		      %% Line 1519
		      apply 'list_errors'/2
			  (_cor1, Es)
	  %% Line 1520
	  <F,[{Mod,E}|Es]> when 'true' ->
	      let <_cor5> =
		  %% Line 1523
		  call Mod:'format_error'
		      (E)
	      in  do  %% Line 1523
		      call 'io':'fwrite'
			  ([126|[116|[115|[58|[32|[126|[116|[115|[10]]]]]]]]], [_cor1|[_cor5|[]]])
		      %% Line 1524
		      apply 'list_errors'/2
			  (_cor1, Es)
	  %% Line 1525
	  <_X_F,[]> when 'true' ->
	      'ok'
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'list_errors',2}}] )
	    -| ['compiler_generated'] )
	end
'iofile'/1 =
    %% Line 1533
    fun (_cor0) ->
	case _cor0 of
	  <File>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 1534
		  call 'erlang':'atom_to_list'
		      (_cor0)
	      in  %% Line 1534
		  apply 'iofile'/1
		      (_cor1)
	  %% Line 1535
	  <File> when 'true' ->
	      let <_cor3> =
		  %% Line 1536
		  call 'filename':'dirname'
		      (_cor0)
	      in  let <_cor2> =
		      %% Line 1536
		      call 'filename':'basename'
			  (_cor0, [46|[101|[114|[108]]]])
		  in  %% Line 1536
		      {_cor3,_cor2}
	end
'outfile'/3 =
    %% Line 1543
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Base,Ext,Opts>
	      when call 'erlang':'is_atom'
		    (_cor1) ->
	      let <_cor3> =
		  %% Line 1544
		  call 'erlang':'atom_to_list'
		      (_cor1)
	      in  %% Line 1544
		  apply 'outfile'/3
		      (_cor2, _cor3, _cor0)
	  %% Line 1545
	  <Base,Ext,Opts> when 'true' ->
	      let <_7483> =
		  %% Line 1546
		  call 'lists':'keyfind'
		      ('outdir', 1, _cor0)
	      in  let <_cor5> =
		      %% Line 1546
		      case _7483 of
			%% Line 1547
			<{'outdir',Odir}> when 'true' ->
			    call 'filename':'join'
				(Odir, _cor2)
			%% Line 1548
			<_X_Other> when 'true' ->
			    _cor2
		      end
		  in  let <_cor7> =
			  %% Line 1550
			  [46|_cor1]
		      in  %% Line 1550
			  call 'erlang':'++'
			      (_cor5, _cor7)
	end
'objfile'/2 =
    %% Line 1552
    fun (_cor1,_cor0) ->
	%% Line 1553
	( case _cor0 of
	    ( <( {'compile',_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_rec221,_cor15,_cor16,_cor17,_cor18}
		 -| ['compiler_generated'] )> when 'true' ->
		  apply 'outfile'/3
		      (_cor1, [98|[101|[97|[109]]]], _rec221)
	      -| ['compiler_generated'] )
	    ( <_cor19> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','compile'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'pre_defs'/1 =
    %% Line 1562
    fun (_cor0) ->
	case _cor0 of
	  <[{'d',M,V}|Opts]> when 'true' ->
	      let <_cor1> =
		  %% Line 1563
		  apply 'pre_defs'/1
		      (Opts)
	      in  %% Line 1563
		  [{M,V}|_cor1]
	  %% Line 1564
	  <[{'d',M}|Opts]> when 'true' ->
	      let <_cor2> =
		  %% Line 1565
		  apply 'pre_defs'/1
		      (Opts)
	      in  %% Line 1565
		  [M|_cor2]
	  %% Line 1566
	  <[_cor4|Opts]> when 'true' ->
	      %% Line 1567
	      apply 'pre_defs'/1
		  (Opts)
	  %% Line 1568
	  <[]> when 'true' ->
	      []
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'pre_defs',1}}] )
	    -| ['compiler_generated'] )
	end
'src_listing'/2 =
    %% Line 1573
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 1574
	    fun (_cor3,_cor2) ->
		case <_cor3,_cor2> of
		  <Lf,{_X_Mod,_X_Exp,Fs}> when 'true' ->
		      apply 'do_src_listing'/2
			  (_cor3, Fs)
		  %% Line 1575
		  <Lf,Fs> when 'true' ->
		      apply 'do_src_listing'/2
			  (_cor3, _cor2)
		end
	in  %% Line 1574
	    apply 'listing'/3
		(_cor6, _cor1, _cor0)
'do_src_listing'/2 =
    %% Line 1578
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 1579
	    call 'io':'getopts'
		(_cor1)
	in  let <_cor3> =
		%% Line 1579
		call 'lists':'keyfind'
		    ('encoding', 1, _cor2)
	    in  let <Opts> =
		    %% Line 1579
		    [_cor3|[]]
		in  let <_cor8> =
			%% Line 1580
			fun (_cor6) ->
			    let <_cor5> =
				call 'erl_pp':'form'
				    (_cor6, Opts)
			    in  call 'io':'put_chars'
				    (_cor1, [_cor5|[[10]]])
		    in  %% Line 1580
			call 'lists':'foreach'
			    (_cor8, _cor0)
'listing'/2 =
    %% Line 1583
    fun (_cor1,_cor0) ->
	%% Line 1584
	case _cor0 of
	  <{'compile',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26}> when 'true' ->
	      let <_cor4> =
		  call 'erlang':'setelement'
		      (13, _cor0, 'none')
	      in  let <_cor10> =
		      %% Line 1585
		      fun (_cor7,_cor6) ->
			  call 'beam_listing':'module'
			      (_cor7, _cor6)
		  in  %% Line 1585
		      apply 'listing'/3
			  (_cor10, _cor1, _cor4)
	  ( <_cor27> when 'true' ->
		( call ( 'erlang'
			 -| ['compiler_generated'] ):( 'error'
						       -| ['compiler_generated'] )
		      (( {'badrecord','compile'}
			 -| ['compiler_generated'] ))
		  -| ['compiler_generated'] )
	    -| ['compiler_generated'] )
	end
'listing'/3 =
    %% Line 1587
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1588
	( case _cor0 of
	    ( <( {'compile',_cor23,_cor24,_rec223,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Lfile> =
		      apply 'outfile'/3
			  (_rec223, _cor1, _cor31)
		  in  let <_11107> =
			  %% Line 1589
			  call 'file':'open'
			      (Lfile, ['write'|['delayed_write']])
		      in  %% Line 1589
			  case _11107 of
			    %% Line 1590
			    <{'ok',Lf}> when 'true' ->
				let <Code> =
				    %% Line 1591
				    apply 'restore_expanded_types'/2
					(_cor1, _cor28)
				in  do  do  %% Line 1592
					    apply 'output_encoding'/2
						(Lf, _cor0)
					    %% Line 1593
					    apply _cor2
						(Lf, Code)
					let <_11619> =
					    %% Line 1594
					    call 'file':'close'
						(Lf)
					in  %% Line 1594
					    case _11619 of
					      <'ok'> when 'true' ->
						  %% Line 1595
						  {'ok',_cor0}
					      ( <_cor11> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_11619})
						-| ['compiler_generated'] )
					    end
			    %% Line 1596
			    <{'error',_X_Error}> when 'true' ->
				let <Es> =
				    %% Line 1597
				    [{Lfile,[{'none','compile','write_error'}]}|[]]
				in  let <_rec226> =
					%% Line 1598
					call 'erlang':'++'
					    (_cor34, Es)
				    in  let <_cor18> =
					    %% Line 1598
					    call 'erlang':'setelement'
						(14, _cor0, _rec226)
					in  %% Line 1598
					    {'error',_cor18}
			    ( <_cor19> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_11107})
			      -| ['compiler_generated'] )
			  end
	      -| ['compiler_generated'] )
	    ( <_cor36> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','compile'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'output_encoding'/2 =
    %% Line 1601
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <F,{'compile',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,'none',_cor20,_cor21}> when 'true' ->
	      let <_cor2> =
		  %% Line 1602
		  call 'epp':'default_encoding'
		      ()
	      in  let <_cor22> =
		      %% Line 1602
		      call 'io':'setopts'
			  (_cor1, [{'encoding',_cor2}|[]])
		  in  %% Line 1602
		      case _cor22 of
			<'ok'> when 'true' ->
			    _cor22
			( <_cor3> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor22})
			  -| ['compiler_generated'] )
		      end
	  %% Line 1603
	  <F,{'compile',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,Encoding,_cor34,_cor35}> when 'true' ->
	      let <_8781> =
		  %% Line 1604
		  call 'io':'setopts'
		      (_cor1, [{'encoding',Encoding}|[]])
	      in  %% Line 1604
		  case _8781 of
		    <'ok'> when 'true' ->
			let <_cor5> =
			    %% Line 1605
			    call 'epp':'encoding_to_string'
				(Encoding)
			in  let <_cor36> =
				%% Line 1605
				call 'io':'fwrite'
				    (_cor1, #{#<37>(8,1,'integer',['unsigned'|['big']]),
					      #<37>(8,1,'integer',['unsigned'|['big']]),
					      #<32>(8,1,'integer',['unsigned'|['big']]),
					      #<126>(8,1,'integer',['unsigned'|['big']]),
					      #<115>(8,1,'integer',['unsigned'|['big']]),
					      #<10>(8,1,'integer',['unsigned'|['big']])}#, [_cor5|[]])
			    in  %% Line 1605
				case _cor36 of
				  <'ok'> when 'true' ->
				      _cor36
				  ( <_cor6> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor36})
				    -| ['compiler_generated'] )
				end
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_8781})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'output_encoding',2}}] )
	    -| ['compiler_generated'] )
	end
'restore_expanded_types'/2 =
    %% Line 1607
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[80],Fs> when 'true' ->
	      %% Line 1608
	      call 'epp':'restore_typed_record_fields'
		  (_cor0)
	  %% Line 1609
	  <[69],{M,I,Fs0}> when 'true' ->
	      let <Fs1> =
		  %% Line 1610
		  apply 'restore_expand_module'/1
		      (Fs0)
	      in  let <Fs> =
		      %% Line 1611
		      call 'epp':'restore_typed_record_fields'
			  (Fs1)
		  in  %% Line 1612
		      {M,I,Fs}
	  %% Line 1613
	  <_X_Ext,Code> when 'true' ->
	      _cor0
	end
'restore_expand_module'/1 =
    %% Line 1615
    fun (_cor0) ->
	case _cor0 of
	  <[{'attribute',Line,'type',[Type|[]]}|Fs]> when 'true' ->
	      let <_cor1> =
		  %% Line 1616
		  apply 'restore_expand_module'/1
		      (Fs)
	      in  %% Line 1616
		  [{'attribute',Line,'type',Type}|_cor1]
	  %% Line 1617
	  <[{'attribute',Line,'opaque',[Type|[]]}|Fs]> when 'true' ->
	      let <_cor2> =
		  %% Line 1618
		  apply 'restore_expand_module'/1
		      (Fs)
	      in  %% Line 1618
		  [{'attribute',Line,'opaque',Type}|_cor2]
	  %% Line 1619
	  <[{'attribute',Line,'spec',[Arg|[]]}|Fs]> when 'true' ->
	      let <_cor3> =
		  %% Line 1620
		  apply 'restore_expand_module'/1
		      (Fs)
	      in  %% Line 1620
		  [{'attribute',Line,'spec',Arg}|_cor3]
	  %% Line 1621
	  <[{'attribute',Line,'callback',[Arg|[]]}|Fs]> when 'true' ->
	      let <_cor4> =
		  %% Line 1622
		  apply 'restore_expand_module'/1
		      (Fs)
	      in  %% Line 1622
		  [{'attribute',Line,'callback',Arg}|_cor4]
	  %% Line 1623
	  <[F|Fs]> when 'true' ->
	      let <_cor5> =
		  %% Line 1624
		  apply 'restore_expand_module'/1
		      (Fs)
	      in  %% Line 1624
		  [F|_cor5]
	  %% Line 1625
	  <[]> when 'true' ->
	      []
	  ( <_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'restore_expand_module',1}}] )
	    -| ['compiler_generated'] )
	end
'options'/0 =
    %% Line 1630
    fun () ->
	let <_cor0> =
	    %% Line 1631
	    apply 'standard_passes'/0
		()
	in  %% Line 1631
	    apply 'help'/1
		(_cor0)
'help'/1 =
    %% Line 1633
    fun (_cor0) ->
	case _cor0 of
	  <[{'delay',Ps}|T]> when 'true' ->
	      do  %% Line 1634
		  apply 'help'/1
		      (Ps)
		  %% Line 1635
		  apply 'help'/1
		      (T)
	  %% Line 1636
	  <[{'iff',Flag,{'src_listing',Ext}}|T]> when 'true' ->
	      do  %% Line 1637
		  call 'io':'fwrite'
		      ([126|[112|[32|[45|[32|[71|[101|[110|[101|[114|[97|[116|[101|[32|[46|[126|[115|[32|[115|[111|[117|[114|[99|[101|[32|[108|[105|[115|[116|[105|[110|[103|[32|[102|[105|[108|[101|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Flag|[Ext|[]]])
		  %% Line 1638
		  apply 'help'/1
		      (T)
	  %% Line 1639
	  <[{'iff',Flag,{'listing',Ext}}|T]> when 'true' ->
	      do  %% Line 1640
		  call 'io':'fwrite'
		      ([126|[112|[32|[45|[32|[71|[101|[110|[101|[114|[97|[116|[101|[32|[46|[126|[115|[32|[102|[105|[108|[101|[10]]]]]]]]]]]]]]]]]]]]]]], [Flag|[Ext|[]]])
		  %% Line 1641
		  apply 'help'/1
		      (T)
	  %% Line 1642
	  <[{'iff',Flag,{Name,Fun}}|T]>
	      when call 'erlang':'is_function'
		    (Fun) ->
	      do  %% Line 1643
		  call 'io':'fwrite'
		      ([126|[112|[32|[45|[32|[82|[117|[110|[32|[126|[115|[10]]]]]]]]]]]], [Flag|[Name|[]]])
		  %% Line 1644
		  apply 'help'/1
		      (T)
	  %% Line 1645
	  <[{'iff',_X_Flag,Action}|T]> when 'true' ->
	      do  %% Line 1646
		  apply 'help'/1
		      (Action)
		  %% Line 1647
		  apply 'help'/1
		      (T)
	  %% Line 1648
	  <[{'unless',Flag,{'pass',Pass}}|T]> when 'true' ->
	      do  %% Line 1649
		  call 'io':'fwrite'
		      ([126|[112|[32|[45|[32|[83|[107|[105|[112|[32|[116|[104|[101|[32|[126|[115|[32|[112|[97|[115|[115|[10]]]]]]]]]]]]]]]]]]]]]], [Flag|[Pass|[]]])
		  %% Line 1650
		  apply 'help'/1
		      (T)
	  %% Line 1651
	  <[{'unless',Flag = 'no_postopt',List}|T]>
	      when call 'erlang':'is_list'
		    (List) ->
	      do  do  %% Line 1653
		      call 'io':'fwrite'
			  ([126|[112|[32|[45|[32|[83|[107|[105|[112|[32|[97|[108|[108|[32|[112|[111|[115|[116|[32|[111|[112|[116|[105|[109|[105|[115|[97|[116|[105|[111|[110|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Flag|[]])
		      %% Line 1654
		      apply 'help'/1
			  (List)
		  %% Line 1655
		  apply 'help'/1
		      (T)
	  %% Line 1656
	  <[{'unless',_X_Flag,Action}|T]> when 'true' ->
	      do  %% Line 1657
		  apply 'help'/1
		      (Action)
		  %% Line 1658
		  apply 'help'/1
		      (T)
	  %% Line 1659
	  <[_cor2|T]> when 'true' ->
	      %% Line 1660
	      apply 'help'/1
		  (T)
	  %% Line 1661
	  <_cor3> when 'true' ->
	      %% Line 1662
	      'ok'
	end
'compile'/3 =
    %% Line 1668
    fun (_cor2,_cor1,_cor0) ->
	let <File> =
	    %% Line 1669
	    apply 'shorten_filename'/1
		(_cor2)
	in  let <_cor4> =
		%% Line 1670
		apply 'make_erl_options'/1
		    (_cor0)
	    in  let <_5571> =
		    %% Line 1670
		    apply 'file'/2
			(File, _cor4)
		in  %% Line 1670
		    case _5571 of
		      %% Line 1671
		      <{'ok',_X_Mod}> when 'true' ->
			  'ok'
		      %% Line 1672
		      <Other> when 'true' ->
			  _5571
		    end
'compile_beam'/3 =
    %% Line 1675
    fun (_cor2,_cor1,_cor0) ->
	let <File> =
	    %% Line 1676
	    apply 'shorten_filename'/1
		(_cor2)
	in  let <_cor4> =
		%% Line 1677
		apply 'make_erl_options'/1
		    (_cor0)
	    in  let <_7279> =
		    %% Line 1677
		    apply 'file'/2
			(File, ['from_beam'|_cor4])
		in  %% Line 1677
		    case _7279 of
		      %% Line 1678
		      <{'ok',_X_Mod}> when 'true' ->
			  'ok'
		      %% Line 1679
		      <Other> when 'true' ->
			  _7279
		    end
'compile_asm'/3 =
    %% Line 1682
    fun (_cor2,_cor1,_cor0) ->
	let <File> =
	    %% Line 1683
	    apply 'shorten_filename'/1
		(_cor2)
	in  let <_cor4> =
		%% Line 1684
		apply 'make_erl_options'/1
		    (_cor0)
	    in  let <_2530> =
		    %% Line 1684
		    apply 'file'/2
			(File, ['from_asm'|_cor4])
		in  %% Line 1684
		    case _2530 of
		      %% Line 1685
		      <{'ok',_X_Mod}> when 'true' ->
			  'ok'
		      %% Line 1686
		      <Other> when 'true' ->
			  _2530
		    end
'compile_core'/3 =
    %% Line 1689
    fun (_cor2,_cor1,_cor0) ->
	let <File> =
	    %% Line 1690
	    apply 'shorten_filename'/1
		(_cor2)
	in  let <_cor4> =
		%% Line 1691
		apply 'make_erl_options'/1
		    (_cor0)
	    in  let <_10820> =
		    %% Line 1691
		    apply 'file'/2
			(File, ['from_core'|_cor4])
		in  %% Line 1691
		    case _10820 of
		      %% Line 1692
		      <{'ok',_X_Mod}> when 'true' ->
			  'ok'
		      %% Line 1693
		      <Other> when 'true' ->
			  _10820
		    end
'shorten_filename'/1 =
    %% Line 1696
    fun (_cor0) ->
	let <_8437> =
	    %% Line 1697
	    call 'file':'get_cwd'
		()
	in  %% Line 1697
	    case _8437 of
	      <{'ok',Cwd}> when 'true' ->
		  let <_8090> =
		      %% Line 1698
		      call 'lists':'prefix'
			  (Cwd, _cor0)
		  in  %% Line 1698
		      case _8090 of
			%% Line 1699
			<'false'> when 'true' ->
			    _cor0
			%% Line 1700
			<'true'> when 'true' ->
			    let <_cor2> =
				%% Line 1701
				call 'erlang':'length'
				    (Cwd)
			    in  let <_12223> =
				    %% Line 1701
				    call 'lists':'nthtail'
					(_cor2, _cor0)
				in  %% Line 1701
				    case _12223 of
				      %% Line 1702
				      <[47|N]> when 'true' ->
					  N
				      %% Line 1703
				      <N> when 'true' ->
					  _12223
				    end
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_8090})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor1> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_8437})
		-| ['compiler_generated'] )
	    end
'make_erl_options'/1 =
    %% Line 1709
    fun (_cor0) ->
	%% Line 1717
	case _cor0 of
	  <{'options',Includes,Outdir,OutputType,Defines,Warning,Verbose,_cor19,Specific,_cor20,Cwd}> when 'true' ->
	      let <_cor6> =
		  %% Line 1720
		  fun (_cor4) ->
		      case _cor4 of
			<{Name,Value}> when 'true' ->
			    %% Line 1721
			    {'d',Name,Value}
			%% Line 1722
			<Name> when 'true' ->
			    %% Line 1723
			    {'d',_cor4}
		      end
	      in  let <_cor7> =
		      %% Line 1720
		      call 'lists':'map'
			  (_cor6, Defines)
		  in  let <_cor3> =
			  %% Line 1725
			  case OutputType of
			    %% Line 1726
			    <'undefined'> when 'true' ->
				[]
			    %% Line 1727
			    <'jam'> when 'true' ->
				['jam']
			    %% Line 1728
			    <'beam'> when 'true' ->
				['beam']
			    %% Line 1729
			    <'native'> when 'true' ->
				['native']
			    ( <_cor2> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',OutputType})
			      -| ['compiler_generated'] )
			  end
		      in  let <_cor8> =
			      %% Line 1724
			      call 'erlang':'++'
				  (_cor7, _cor3)
			  in  let <_cor9> =
				  %% Line 1719
				  ( case <> of
				      <>
					  when call 'erlang':'=/='
						(Warning,
						 0) ->
					  ( ['report_warnings'|_cor8]
					    -| ['compiler_generated'] )
				      ( <> when 'true' ->
					    _cor8
					-| ['compiler_generated'] )
				    end
				    -| ['list_comprehension'] )
			      in  let <_cor10> =
				      %% Line 1718
				      ( case <> of
					  <>
					      when call 'erlang':'=:='
						    (Verbose,
						     'true') ->
					      ( ['verbose'|_cor9]
						-| ['compiler_generated'] )
					  ( <> when 'true' ->
						_cor9
					    -| ['compiler_generated'] )
					end
					-| ['list_comprehension'] )
				  in  let <_cor16> =
					  %% Line 1732
					  ( letrec
						'lc$^0'/1 =
						    fun (_cor14) ->
							case _cor14 of
							  <[Dir|_cor13]> when 'true' ->
							      let <_cor15> =
								  apply 'lc$^0'/1
								      (_cor13)
							      in  ( [{'i',Dir}|_cor15]
								    -| ['compiler_generated'] )
							  <[]> when 'true' ->
							      []
							  ( <_6830> when 'true' ->
								( primop 'match_fail'
								      ({'function_clause',_cor14})
								  -| [{'function_name',{'lc$^0',1}}] )
							    -| ['compiler_generated'] )
							end
					    in  apply 'lc$^0'/1
						    (Includes)
					    -| ['list_comprehension'] )
				      in  let <_cor17> =
					      %% Line 1731
					      ['report_errors'|[{'cwd',Cwd}|[{'outdir',Outdir}|%% Line 1732
											       call 'erlang':'++'
												   (_cor16, Specific)]]]
					  in  %% Line 1731
					      call 'erlang':'++'
						  (_cor10, _cor17)
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor0})
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('compile')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('compile', _cor0)
end