module 'beam_utils' ['bif_to_test'/3,
		     'code_at'/2,
		     'combine_heap_needs'/2,
		     'delete_live_annos'/1,
		     'empty_label_index'/0,
		     'index_label'/3,
		     'index_labels'/1,
		     'is_killed'/3,
		     'is_killed_at'/3,
		     'is_killed_block'/2,
		     'is_not_used'/3,
		     'is_not_used_at'/3,
		     'is_pure_test'/1,
		     'live_opt'/1,
		     'module_info'/0,
		     'module_info'/1]
    attributes []
'is_killed_block'/2 =
    %% Line 46
    fun (_cor1,_cor0) ->
	let <_446> =
	    %% Line 47
	    apply 'check_killed_block'/2
		(_cor1, _cor0)
	in  %% Line 47
	    case _446 of
	      %% Line 48
	      <'killed'> when 'true' ->
		  'true'
	      %% Line 49
	      <'used'> when 'true' ->
		  'false'
	      %% Line 50
	      <'transparent'> when 'true' ->
		  'false'
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_446})
		-| ['compiler_generated'] )
	    end
'is_killed'/3 =
    %% Line 63
    fun (_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 539
	    fun (_cor3,_2734,_2371) ->
		let <_4302> =
		    apply 'check_killed_block'/2
			(_cor3, _2734)
		in  {_4302,_2371}
	in  let <_cor3> =
		%% Line 64
		call 'gb_trees':'empty'
		    ()
	    in  let <St> =
		    %% Line 64
		    {'live',_cor4,_cor0,_cor3}
		in  let <_2897> =
			%% Line 65
			apply 'check_liveness'/3
			    (_cor2, _cor1, St)
		    in  %% Line 65
			case _2897 of
			  %% Line 66
			  <{'killed',_cor10}> when 'true' ->
			      'true'
			  %% Line 67
			  <{'used',_cor11}> when 'true' ->
			      'false'
			  %% Line 68
			  <{'unknown',_cor12}> when 'true' ->
			      'false'
			  ( <_cor6> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_2897})
			    -| ['compiler_generated'] )
			end
'is_killed_at'/3 =
    %% Line 74
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <R,Lbl,D>
	      when call 'erlang':'is_integer'
		    (_cor1) ->
	      let <_cor4> =
		  %% Line 539
		  fun (_cor3,_1307,_1664) ->
		      let <_4647> =
			  apply 'check_killed_block'/2
			      (_cor3, _1307)
		      in  {_4647,_1664}
	      in  let <_cor3> =
		      %% Line 75
		      call 'gb_trees':'empty'
			  ()
		  in  let <St0> =
			  %% Line 75
			  {'live',_cor4,_cor0,_cor3}
		      in  let <_1791> =
			      %% Line 76
			      apply 'check_liveness_at'/3
				  (_cor2, _cor1, St0)
			  in  %% Line 76
			      case _1791 of
				%% Line 77
				<{'killed',_cor10}> when 'true' ->
				    'true'
				%% Line 78
				<{'used',_cor11}> when 'true' ->
				    'false'
				%% Line 79
				<{'unknown',_cor12}> when 'true' ->
				    'false'
				( <_cor6> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_1791})
				  -| ['compiler_generated'] )
			      end
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'is_killed_at',3}}] )
	    -| ['compiler_generated'] )
	end
'is_not_used'/3 =
    %% Line 89
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 90
	    call 'gb_trees':'empty'
		()
	in  let <St> =
		%% Line 90
		{'live','check_used_block'/3,_cor0,_cor3}
	    in  let <_1199> =
		    %% Line 91
		    apply 'check_liveness'/3
			(_cor2, _cor1, St)
		in  %% Line 91
		    case _1199 of
		      %% Line 92
		      <{'killed',_cor9}> when 'true' ->
			  'true'
		      %% Line 93
		      <{'used',_cor10}> when 'true' ->
			  'false'
		      %% Line 94
		      <{'unknown',_cor11}> when 'true' ->
			  'false'
		      ( <_cor5> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_1199})
			-| ['compiler_generated'] )
		    end
'is_not_used_at'/3 =
    %% Line 104
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 105
	    call 'gb_trees':'empty'
		()
	in  let <St> =
		%% Line 105
		{'live','check_used_block'/3,_cor0,_cor3}
	    in  let <_1521> =
		    %% Line 106
		    apply 'check_liveness_at'/3
			(_cor2, _cor1, St)
		in  %% Line 106
		    case _1521 of
		      %% Line 107
		      <{'killed',_cor9}> when 'true' ->
			  'true'
		      %% Line 108
		      <{'used',_cor10}> when 'true' ->
			  'false'
		      %% Line 109
		      <{'unknown',_cor11}> when 'true' ->
			  'false'
		      ( <_cor5> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_1521})
			-| ['compiler_generated'] )
		    end
'index_labels'/1 =
    %% Line 116
    fun (_cor0) ->
	%% Line 117
	apply 'index_labels_1'/2
	    (_cor0, [])
'empty_label_index'/0 =
    %% Line 122
    fun () ->
	%% Line 123
	call 'gb_trees':'empty'
	    ()
'index_label'/3 =
    %% Line 128
    fun (_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 129
	    fun (_cor3) ->
		case _cor3 of
		  <{'label',_cor10}> when 'true' ->
		      'true'
		  %% Line 130
		  <_cor11> when 'true' ->
		      'false'
		end
	in  let <Is> =
		%% Line 129
		call 'lists':'dropwhile'
		    (_cor5, _cor1)
	    in  %% Line 131
		call 'gb_trees':'enter'
		    (_cor2, Is, _cor0)
'code_at'/2 =
    %% Line 137
    fun (_cor1,_cor0) ->
	let <_1652> =
	    %% Line 138
	    call 'gb_trees':'lookup'
		(_cor1, _cor0)
	in  %% Line 138
	    case _1652 of
	      %% Line 139
	      <{'value',Code}> when 'true' ->
		  Code
	      %% Line 140
	      <'none'> when 'true' ->
		  'none'
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_1652})
		-| ['compiler_generated'] )
	    end
'bif_to_test'/3 =
    %% Line 146
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'is_atom',Ops = [_cor6|[]],Fail> when 'true' ->
	      {'test','is_atom',_cor0,_cor1}
	  %% Line 147
	  <'is_boolean',Ops = [_cor7|[]],Fail> when 'true' ->
	      {'test','is_boolean',_cor0,_cor1}
	  %% Line 148
	  <'is_binary',Ops = [_cor8|[]],Fail> when 'true' ->
	      {'test','is_binary',_cor0,_cor1}
	  %% Line 149
	  <'is_bitstring',Ops = [_cor9|[]],Fail> when 'true' ->
	      {'test','is_bitstr',_cor0,_cor1}
	  %% Line 150
	  <'is_float',Ops = [_cor10|[]],Fail> when 'true' ->
	      {'test','is_float',_cor0,_cor1}
	  %% Line 151
	  <'is_function',Ops = [_cor11|[]],Fail> when 'true' ->
	      {'test','is_function',_cor0,_cor1}
	  %% Line 152
	  <'is_function',Ops = [_cor12|[_cor13|[]]],Fail> when 'true' ->
	      {'test','is_function2',_cor0,_cor1}
	  %% Line 153
	  <'is_integer',Ops = [_cor14|[]],Fail> when 'true' ->
	      {'test','is_integer',_cor0,_cor1}
	  %% Line 154
	  <'is_list',Ops = [_cor15|[]],Fail> when 'true' ->
	      {'test','is_list',_cor0,_cor1}
	  %% Line 155
	  <'is_map',Ops = [_cor16|[]],Fail> when 'true' ->
	      {'test','is_map',_cor0,_cor1}
	  %% Line 156
	  <'is_number',Ops = [_cor17|[]],Fail> when 'true' ->
	      {'test','is_number',_cor0,_cor1}
	  %% Line 157
	  <'is_pid',Ops = [_cor18|[]],Fail> when 'true' ->
	      {'test','is_pid',_cor0,_cor1}
	  %% Line 158
	  <'is_port',Ops = [_cor19|[]],Fail> when 'true' ->
	      {'test','is_port',_cor0,_cor1}
	  %% Line 159
	  <'is_reference',Ops = [_cor20|[]],Fail> when 'true' ->
	      {'test','is_reference',_cor0,_cor1}
	  %% Line 160
	  <'is_tuple',Ops = [_cor21|[]],Fail> when 'true' ->
	      {'test','is_tuple',_cor0,_cor1}
	  %% Line 161
	  <'=<',[A|[B|[]]],Fail> when 'true' ->
	      {'test','is_ge',_cor0,[B|[A|[]]]}
	  %% Line 162
	  <'>',[A|[B|[]]],Fail> when 'true' ->
	      {'test','is_lt',_cor0,[B|[A|[]]]}
	  %% Line 163
	  <'<',Ops = [_cor22|[_cor23|[]]],Fail> when 'true' ->
	      {'test','is_lt',_cor0,_cor1}
	  %% Line 164
	  <'>=',Ops = [_cor24|[_cor25|[]]],Fail> when 'true' ->
	      {'test','is_ge',_cor0,_cor1}
	  %% Line 165
	  <'==',[A|[[]]],Fail> when 'true' ->
	      {'test','is_nil',_cor0,[A|[]]}
	  %% Line 166
	  <'==',Ops = [_cor26|[_cor27|[]]],Fail> when 'true' ->
	      {'test','is_eq',_cor0,_cor1}
	  %% Line 167
	  <'/=',Ops = [_cor28|[_cor29|[]]],Fail> when 'true' ->
	      {'test','is_ne',_cor0,_cor1}
	  %% Line 168
	  <'=:=',[A|[[]]],Fail> when 'true' ->
	      {'test','is_nil',_cor0,[A|[]]}
	  %% Line 169
	  <'=:=',Ops = [_cor30|[_cor31|[]]],Fail> when 'true' ->
	      {'test','is_eq_exact',_cor0,_cor1}
	  %% Line 170
	  <'=/=',Ops = [_cor32|[_cor33|[]]],Fail> when 'true' ->
	      {'test','is_ne_exact',_cor0,_cor1}
	  %% Line 171
	  <'is_record',Ops = [_cor34|[_cor35|[_cor36|[]]]],Fail> when 'true' ->
	      {'test','is_record',_cor0,_cor1}
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'bif_to_test',3}}] )
	    -| ['compiler_generated'] )
	end
'is_pure_test'/1 =
    %% Line 179
    fun (_cor0) ->
	case _cor0 of
	  <{'test','is_eq',_cor3,[_cor4|[_cor5|[]]]}> when 'true' ->
	      'true'
	  %% Line 180
	  <{'test','is_ne',_cor6,[_cor7|[_cor8|[]]]}> when 'true' ->
	      'true'
	  %% Line 181
	  <{'test','is_eq_exact',_cor9,[_cor10|[_cor11|[]]]}> when 'true' ->
	      'true'
	  %% Line 182
	  <{'test','is_ne_exact',_cor12,[_cor13|[_cor14|[]]]}> when 'true' ->
	      'true'
	  %% Line 183
	  <{'test','is_ge',_cor15,[_cor16|[_cor17|[]]]}> when 'true' ->
	      'true'
	  %% Line 184
	  <{'test','is_lt',_cor18,[_cor19|[_cor20|[]]]}> when 'true' ->
	      'true'
	  %% Line 185
	  <{'test','is_nil',_cor21,[_cor22|[]]}> when 'true' ->
	      'true'
	  %% Line 186
	  <{'test','is_nonempty_list',_cor23,[_cor24|[]]}> when 'true' ->
	      'true'
	  %% Line 187
	  <{'test','test_arity',_cor25,[_cor26|[_cor27|[]]]}> when 'true' ->
	      'true'
	  %% Line 188
	  <{'test','has_map_fields',_cor28,[_cor29|[{'list',_cor30}|[]]]}> when 'true' ->
	      'true'
	  %% Line 189
	  <{'test',Op,_cor31,Ops}> when 'true' ->
	      let <_cor1> =
		  %% Line 190
		  call 'erlang':'length'
		      (Ops)
	      in  %% Line 190
		  call 'erl_internal':'new_type_test'
		      (Op, _cor1)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'is_pure_test',1}}] )
	    -| ['compiler_generated'] )
	end
'live_opt'/1 =
    %% Line 200
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 202
	    fun (_cor1) ->
		case _cor1 of
		  <{'func_info',_cor12,_cor13,_cor14}> when 'true' ->
		      'false'
		  %% Line 203
		  <_cor15> when 'true' ->
		      'true'
		end
	in  let <_922> =
		%% Line 202
		call 'lists':'splitwith'
		    (_cor3, _cor0)
	    in  %% Line 201
		case _922 of
		  <{Bef = [{'label',Fail}|_cor16],[Fi|Is]}> when 'true' ->
		      %% Line 205
		      case Fi of
			<{'func_info',_cor17,_cor18,Live}> when 'true' ->
			    let <_cor1> =
				%% Line 818
				call 'erlang':'bsl'
				    (1, Live)
			    in  let <_cor7> =
				    %% Line 818
				    call 'erlang':'-'
					(_cor1, 1)
				in  let <_cor6> =
					%% Line 206
					call 'gb_trees':'empty'
					    ()
				    in  let <D> =
					    %% Line 206
					    call 'gb_trees':'insert'
						(Fail, _cor7, _cor6)
					in  let <_cor9> =
						%% Line 207
						call 'lists':'reverse'
						    (Is)
					    in  let <_cor10> =
						    %% Line 207
						    apply 'live_opt'/4
							(_cor9, 0, D, [])
						in  %% Line 207
						    call 'erlang':'++'
							(Bef, [Fi|_cor10])
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',Fi})
			  -| ['compiler_generated'] )
		      end
		  ( <_cor4> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_922})
		    -| ['compiler_generated'] )
		end
'delete_live_annos'/1 =
    %% Line 213
    fun (_cor0) ->
	case _cor0 of
	  <[{'block',Bl0}|Is]> when 'true' ->
	      let <_64> =
		  %% Line 214
		  apply 'delete_live_annos'/1
		      (Bl0)
	      in  %% Line 214
		  case _64 of
		    %% Line 215
		    <[]> when 'true' ->
			apply 'delete_live_annos'/1
			    (Is)
		    %% Line 216
		    <Bl = [_cor5|_cor6]> when 'true' ->
			let <_cor1> =
			    apply 'delete_live_annos'/1
				(Is)
			in  [{'block',_64}|_cor1]
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_64})
		      -| ['compiler_generated'] )
		  end
	  %% Line 218
	  <[{'%live',_cor7}|Is]> when 'true' ->
	      %% Line 219
	      apply 'delete_live_annos'/1
		  (Is)
	  %% Line 220
	  <[I|Is]> when 'true' ->
	      let <_cor3> =
		  %% Line 221
		  apply 'delete_live_annos'/1
		      (Is)
	      in  %% Line 221
		  [I|_cor3]
	  %% Line 222
	  <[]> when 'true' ->
	      []
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'delete_live_annos',1}}] )
	    -| ['compiler_generated'] )
	end
'combine_heap_needs'/2 =
    %% Line 227
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'alloc',Alloc1},{'alloc',Alloc2}> when 'true' ->
	      let <_cor2> =
		  %% Line 628
		  call 'erlang':'++'
		      (Alloc1, Alloc2)
	      in  let <_cor3> =
		      %% Line 628
		      call 'lists':'sort'
			  (_cor2)
		  in  let <_cor2> =
			  %% Line 628
			  apply 'combine_alloc_lists_1'/1
			      (_cor3)
		      in  %% Line 228
			  {'alloc',_cor2}
	  %% Line 229
	  <{'alloc',Alloc},Words>
	      when call 'erlang':'is_integer'
		    (_cor0) ->
	      let <_934> =
		  %% Line 230
		  [{'words',_cor0}|[]]
	      in  let <_cor2> =
		      %% Line 628
		      call 'erlang':'++'
			  (Alloc, _934)
		  in  let <_cor3> =
			  %% Line 628
			  call 'lists':'sort'
			      (_cor2)
		      in  let <_cor3> =
			      %% Line 628
			      apply 'combine_alloc_lists_1'/1
				  (_cor3)
			  in  %% Line 230
			      {'alloc',_cor3}
	  %% Line 231
	  <Words,{'alloc',Alloc}>
	      when call 'erlang':'is_integer'
		    (_cor1) ->
	      let <_1222> =
		  %% Line 232
		  [{'words',_cor1}|[]]
	      in  let <_cor2> =
		      %% Line 628
		      call 'erlang':'++'
			  (Alloc, _1222)
		  in  let <_cor3> =
			  %% Line 628
			  call 'lists':'sort'
			      (_cor2)
		      in  let <_cor4> =
			      %% Line 628
			      apply 'combine_alloc_lists_1'/1
				  (_cor3)
			  in  %% Line 232
			      {'alloc',_cor4}
	  %% Line 233
	  <H1,H2>
	      when let <_cor5> =
		    call 'erlang':'is_integer'
			(_cor1)
		in  let <_cor6> =
			call 'erlang':'is_integer'
			    (_cor0)
		    in  call 'erlang':'and'
			    (_cor5, _cor6) ->
	      %% Line 234
	      call 'erlang':'+'
		  (_cor1, _cor0)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'combine_heap_needs',2}}] )
	    -| ['compiler_generated'] )
	end
'check_liveness'/3 =
    %% Line 249
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <R,[I = {'set',_cor40,_cor41,_cor42}|_cor43],St> when 'true' ->
	      %% Line 250
	      call 'erlang':'error'
		  ('only_allowed_in_blocks', [_cor2|[I|[_cor0|[]]]])
	  %% Line 251
	  <R,[{'block',Blk}|Is],St0 = {'live',BlockCheck,_cor44,_cor45}> when 'true' ->
	      let <_2769> =
		  %% Line 252
		  apply BlockCheck
		      (_cor2, Blk, _cor0)
	      in  %% Line 252
		  case _2769 of
		    %% Line 253
		    <{'transparent',St}> when 'true' ->
			apply 'check_liveness'/3
			    (_cor2, Is, St)
		    %% Line 254
		    <Res = {Other,_cor46}>
			when call 'erlang':'is_atom'
			      (Other) ->
			_2769
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_2769})
		      -| ['compiler_generated'] )
		  end
	  %% Line 256
	  <R,[{'label',_cor47}|Is],St> when 'true' ->
	      %% Line 257
	      apply 'check_liveness'/3
		  (_cor2, Is, _cor0)
	  %% Line 258
	  <R,[{'test',_cor48,{'f',Fail},As}|Is],St0> when 'true' ->
	      let <_1327> =
		  %% Line 259
		  call 'lists':'member'
		      (_cor2, As)
	      in  %% Line 259
		  case _1327 of
		    %% Line 260
		    <'true'> when 'true' ->
			%% Line 261
			{'used',_cor0}
		    %% Line 262
		    <'false'> when 'true' ->
			let <_1114> =
			    %% Line 263
			    apply 'check_liveness_at'/3
				(_cor2, Fail, _cor0)
			in  %% Line 263
			    case _1114 of
			      %% Line 264
			      <{'killed',St}> when 'true' ->
				  apply 'check_liveness'/3
				      (_cor2, Is, St)
			      %% Line 265
			      <Other = {_cor49,_cor50}> when 'true' ->
				  _1114
			      ( <_cor4> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_1114})
				-| ['compiler_generated'] )
			    end
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_1327})
		      -| ['compiler_generated'] )
		  end
	  %% Line 268
	  <R,[{'test',Op,Fail,Live,Ss,Dst}|Is],St> when 'true' ->
	      let <Block> =
		  %% Line 271
		  [{'set',[Dst|[]],Ss,{'alloc',Live,{'bif',Op,Fail}}}|[]]
	      in  %% Line 272
		  apply 'check_liveness'/3
		      (_cor2, [{'block',Block}|Is], _cor0)
	  %% Line 273
	  <R,[{'select',_cor51,_cor52,_cor53,_cor54}|_cor55],St>
	      when call 'erlang':'=:='
		    (_cor52,
		     _cor2) ->
	      %% Line 274
	      {'used',_cor0}
	  %% Line 275
	  <R,[{'select',_cor56,_cor57,Fail,Branches}|_cor58],St> when 'true' ->
	      %% Line 276
	      apply 'check_liveness_everywhere'/3
		  (_cor2, [Fail|Branches], _cor0)
	  %% Line 277
	  <R,[{'jump',{'f',F}}|_cor59],St> when 'true' ->
	      %% Line 278
	      apply 'check_liveness_at'/3
		  (_cor2, F, _cor0)
	  %% Line 279
	  <R,[{'case_end',Used}|_cor60],St> when 'true' ->
	      %% Line 508
	      case <_cor2,Used,_cor0> of
		<_2340,_cor6,_1092>
		    when call 'erlang':'=:='
			  (Used,
			   _cor2) ->
		    {'used',_cor0}
		%% Line 509
		<_cor7,_cor8,_410> when 'true' ->
		    {'killed',_cor0}
	      end
	  %% Line 281
	  <R,[{'badmatch',Used}|_cor61],St> when 'true' ->
	      %% Line 508
	      case <_cor2,Used,_cor0> of
		<_2537,_cor6,_671>
		    when call 'erlang':'=:='
			  (Used,
			   _cor2) ->
		    {'used',_cor0}
		%% Line 509
		<_cor7,_cor8,_4893> when 'true' ->
		    {'killed',_cor0}
	      end
	  %% Line 283
	  <_cor62,['if_end'|_cor63],St> when 'true' ->
	      %% Line 284
	      {'killed',_cor0}
	  %% Line 285
	  <R,[{'func_info',_cor64,_cor65,Ar}|_cor66],St> when 'true' ->
	      %% Line 286
	      case _cor2 of
		%% Line 287
		<{'x',X}>
		    when call 'erlang':'<'
			  (X,
			   Ar) ->
		    {'used',_cor0}
		%% Line 288
		<_cor67> when 'true' ->
		    {'killed',_cor0}
	      end
	  %% Line 290
	  <R,[{'kill',_cor68}|_cor69],St>
	      when call 'erlang':'=:='
		    (_cor68,
		     _cor2) ->
	      %% Line 291
	      {'killed',_cor0}
	  %% Line 292
	  <R,[{'kill',_cor70}|Is],St> when 'true' ->
	      %% Line 293
	      apply 'check_liveness'/3
		  (_cor2, Is, _cor0)
	  %% Line 294
	  <R,[{'bs_init',_cor71,_cor72,'none',Ss,Dst}|Is],St> when 'true' ->
	      let <_28> =
		  %% Line 295
		  call 'lists':'member'
		      (_cor2, Ss)
	      in  %% Line 295
		  case _28 of
		    %% Line 296
		    <'true'> when 'true' ->
			%% Line 297
			{'used',_cor0}
		    %% Line 298
		    <'false'> when 'true' ->
			%% Line 299
			case <> of
			  %% Line 300
			  <>
			      when call 'erlang':'=:='
				    (_cor2,
				     Dst) ->
			      {'killed',_cor0}
			  %% Line 301
			  <> when 'true' ->
			      apply 'check_liveness'/3
				  (_cor2, Is, _cor0)
			end
		    ( <_cor8> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_28})
		      -| ['compiler_generated'] )
		  end
	  %% Line 304
	  <R,[{'bs_init',_cor73,_cor74,Live,Ss,Dst}|Is],St> when 'true' ->
	      %% Line 305
	      case _cor2 of
		%% Line 306
		<{'x',X}> when 'true' ->
		    let <_cor11> =
			%% Line 307
			( case <> of
			    ( <>
				  when call 'erlang':'<'
					(X,
					 Live) ->
				  'true'
			      -| ['compiler_generated'] )
			    ( <> when 'true' ->
				  call 'lists':'member'
				      (_cor2, Ss)
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    in  %% Line 307
			case _cor11 of
			  %% Line 308
			  <'true'> when 'true' ->
			      {'used',_cor0}
			  %% Line 309
			  <'false'> when 'true' ->
			      {'killed',_cor0}
			  ( <_cor12> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor11})
			    -| ['compiler_generated'] )
			end
		%% Line 311
		<{'y',_cor75}> when 'true' ->
		    let <_4837> =
			%% Line 312
			call 'lists':'member'
			    (_cor2, Ss)
		    in  %% Line 312
			case _4837 of
			  %% Line 313
			  <'true'> when 'true' ->
			      {'used',_cor0}
			  %% Line 314
			  <'false'> when 'true' ->
			      %% Line 315
			      case <> of
				%% Line 316
				<>
				    when call 'erlang':'=:='
					  (_cor2,
					   Dst) ->
				    {'killed',_cor0}
				%% Line 317
				<> when 'true' ->
				    apply 'check_liveness'/3
					(_cor2, Is, _cor0)
			      end
			  ( <_cor13> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_4837})
			    -| ['compiler_generated'] )
			end
		( <_cor14> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 321
	  <R,[{'deallocate',_cor76}|Is],St> when 'true' ->
	      %% Line 322
	      case _cor2 of
		%% Line 323
		<{'y',_cor77}> when 'true' ->
		    {'killed',_cor0}
		%% Line 324
		<_cor78> when 'true' ->
		    apply 'check_liveness'/3
			(_cor2, Is, _cor0)
	      end
	  %% Line 326
	  <R,['return'|_cor79],St> when 'true' ->
	      %% Line 327
	      apply 'check_liveness_live_ret'/3
		  (_cor2, 1, _cor0)
	  %% Line 328
	  <R,[{'call',Live,_cor80}|Is],St> when 'true' ->
	      %% Line 329
	      case _cor2 of
		%% Line 330
		<{'x',X}>
		    when call 'erlang':'<'
			  (X,
			   Live) ->
		    {'used',_cor0}
		%% Line 331
		<{'x',_cor81}> when 'true' ->
		    {'killed',_cor0}
		%% Line 332
		<{'y',_cor82}> when 'true' ->
		    apply 'check_liveness'/3
			(_cor2, Is, _cor0)
		( <_cor16> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 334
	  <R,[I = {'call_ext',Live,_cor83}|Is],St> when 'true' ->
	      %% Line 335
	      case _cor2 of
		%% Line 336
		<{'x',X}>
		    when call 'erlang':'<'
			  (X,
			   Live) ->
		    %% Line 337
		    {'used',_cor0}
		%% Line 338
		<{'x',_cor84}> when 'true' ->
		    %% Line 339
		    {'killed',_cor0}
		%% Line 340
		<{'y',_cor85}> when 'true' ->
		    let <_4538> =
			%% Line 341
			call 'beam_jump':'is_exit_instruction'
			    (I)
		    in  %% Line 341
			case _4538 of
			  %% Line 342
			  <'false'> when 'true' ->
			      %% Line 343
			      apply 'check_liveness'/3
				  (_cor2, Is, _cor0)
			  %% Line 344
			  <'true'> when 'true' ->
			      %% Line 352
			      {'used',_cor0}
			  ( <_cor17> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_4538})
			    -| ['compiler_generated'] )
			end
		( <_cor18> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 355
	  <R,[{'call_fun',Live}|Is],St> when 'true' ->
	      %% Line 356
	      case _cor2 of
		%% Line 357
		<{'x',X}>
		    when call 'erlang':'=<'
			  (X,
			   Live) ->
		    {'used',_cor0}
		%% Line 358
		<{'x',_cor86}> when 'true' ->
		    {'killed',_cor0}
		%% Line 359
		<{'y',_cor87}> when 'true' ->
		    apply 'check_liveness'/3
			(_cor2, Is, _cor0)
		( <_cor19> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 361
	  <R,[{'apply',Args}|Is],St> when 'true' ->
	      %% Line 362
	      case _cor2 of
		%% Line 363
		<{'x',X}>
		    when try
			  let <_cor20> =
			      call 'erlang':'+'
				  (Args, 2)
			  in  call 'erlang':'<'
				  (X, _cor20)
		      of <Try> ->
			  Try
		      catch <T,_154> ->
			  'false' ->
		    {'used',_cor0}
		%% Line 364
		<{'x',_cor88}> when 'true' ->
		    {'killed',_cor0}
		%% Line 365
		<{'y',_cor89}> when 'true' ->
		    apply 'check_liveness'/3
			(_cor2, Is, _cor0)
		( <_cor21> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 367
	  <{'x',R},[{'%live',Live}|Is],St> when 'true' ->
	      %% Line 368
	      case <> of
		%% Line 369
		<>
		    when call 'erlang':'<'
			  (R,
			   Live) ->
		    apply 'check_liveness'/3
			(R, Is, _cor0)
		%% Line 370
		<> when 'true' ->
		    {'killed',_cor0}
	      end
	  %% Line 372
	  <R,[{'bif',Op,{'f',Fail},Ss,D}|Is],St0> when 'true' ->
	      let <_1334> =
		  %% Line 373
		  apply 'check_liveness_fail'/5
		      (_cor2, Op, Ss, Fail, _cor0)
	      in  %% Line 373
		  case _1334 of
		    %% Line 374
		    <Killed = {'killed',St}> when 'true' ->
			let <_3238> =
			    %% Line 375
			    call 'lists':'member'
				(_cor2, Ss)
			in  %% Line 375
			    case _3238 of
			      %% Line 376
			      <'true'> when 'true' ->
				  {'used',St}
			      %% Line 377
			      <'false'>
				  when call 'erlang':'=:='
					(_cor2,
					 D) ->
				  _1334
			      %% Line 378
			      <'false'> when 'true' ->
				  apply 'check_liveness'/3
				      (_cor2, Is, St)
			      ( <_cor22> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_3238})
				-| ['compiler_generated'] )
			    end
		    %% Line 380
		    <Other> when 'true' ->
			_1334
		  end
	  %% Line 383
	  <R,[{'gc_bif',Op,{'f',Fail},Live,Ss,D}|Is],St0> when 'true' ->
	      %% Line 384
	      case _cor2 of
		%% Line 385
		<{'x',X}>
		    when call 'erlang':'>='
			  (X,
			   Live) ->
		    %% Line 386
		    {'killed',_cor0}
		%% Line 387
		<{'x',_cor90}> when 'true' ->
		    %% Line 388
		    {'used',_cor0}
		%% Line 389
		<_cor91> when 'true' ->
		    let <_1756> =
			%% Line 390
			apply 'check_liveness_fail'/5
			    (_cor2, Op, Ss, Fail, _cor0)
		    in  %% Line 390
			case _1756 of
			  %% Line 391
			  <Killed = {'killed',St}> when 'true' ->
			      let <_4449> =
				  %% Line 392
				  call 'lists':'member'
				      (_cor2, Ss)
			      in  %% Line 392
				  case _4449 of
				    %% Line 393
				    <'true'> when 'true' ->
					{'used',St}
				    %% Line 394
				    <'false'>
					when call 'erlang':'=:='
					      (_cor2,
					       D) ->
					_1756
				    %% Line 395
				    <'false'> when 'true' ->
					apply 'check_liveness'/3
					    (_cor2, Is, St)
				    ( <_cor24> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_4449})
				      -| ['compiler_generated'] )
				  end
			  %% Line 397
			  <Other> when 'true' ->
			      _1756
			end
	      end
	  %% Line 401
	  <R,[{'bs_put',{'f',0},_cor92,Ss}|Is],St> when 'true' ->
	      let <_2525> =
		  %% Line 402
		  call 'lists':'member'
		      (_cor2, Ss)
	      in  %% Line 402
		  case _2525 of
		    %% Line 403
		    <'true'> when 'true' ->
			{'used',_cor0}
		    %% Line 404
		    <'false'> when 'true' ->
			apply 'check_liveness'/3
			    (_cor2, Is, _cor0)
		    ( <_cor27> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_2525})
		      -| ['compiler_generated'] )
		  end
	  %% Line 406
	  <R,[{'bs_restore2',S,_cor93}|Is],St> when 'true' ->
	      %% Line 407
	      case _cor2 of
		%% Line 408
		<_cor94>
		    when call 'erlang':'=:='
			  (_cor2,
			   S) ->
		    {'used',_cor0}
		%% Line 409
		<_cor95> when 'true' ->
		    apply 'check_liveness'/3
			(_cor2, Is, _cor0)
	      end
	  %% Line 411
	  <R,[{'bs_save2',S,_cor96}|Is],St> when 'true' ->
	      %% Line 412
	      case _cor2 of
		%% Line 413
		<_cor97>
		    when call 'erlang':'=:='
			  (_cor2,
			   S) ->
		    {'used',_cor0}
		%% Line 414
		<_cor98> when 'true' ->
		    apply 'check_liveness'/3
			(_cor2, Is, _cor0)
	      end
	  %% Line 416
	  <R,[{'move',S,D}|Is],St> when 'true' ->
	      %% Line 417
	      case _cor2 of
		%% Line 418
		<_cor99>
		    when call 'erlang':'=:='
			  (_cor2,
			   S) ->
		    {'used',_cor0}
		%% Line 419
		<_cor100>
		    when call 'erlang':'=:='
			  (_cor2,
			   D) ->
		    {'killed',_cor0}
		%% Line 420
		<_cor101> when 'true' ->
		    apply 'check_liveness'/3
			(_cor2, Is, _cor0)
	      end
	  %% Line 422
	  <R,[{'make_fun2',_cor102,_cor103,_cor104,NumFree}|Is],St> when 'true' ->
	      %% Line 423
	      case _cor2 of
		%% Line 424
		<{'x',X}>
		    when call 'erlang':'<'
			  (X,
			   NumFree) ->
		    {'used',_cor0}
		%% Line 425
		<{'x',_cor105}> when 'true' ->
		    {'killed',_cor0}
		%% Line 426
		<_cor106> when 'true' ->
		    apply 'check_liveness'/3
			(_cor2, Is, _cor0)
	      end
	  %% Line 428
	  <R = {'x',_cor107},[{'catch',_cor108,_cor109}|Is],St> when 'true' ->
	      %% Line 432
	      apply 'check_liveness'/3
		  (_cor2, Is, _cor0)
	  %% Line 433
	  <R = {'x',_cor110},[{'try',_cor111,_cor112}|Is],St> when 'true' ->
	      %% Line 437
	      apply 'check_liveness'/3
		  (_cor2, Is, _cor0)
	  %% Line 438
	  <R,[{'try_end',Y}|Is],St> when 'true' ->
	      %% Line 439
	      case _cor2 of
		%% Line 440
		<_cor113>
		    when call 'erlang':'=:='
			  (_cor2,
			   Y) ->
		    %% Line 441
		    {'killed',_cor0}
		%% Line 442
		<{'y',_cor114}> when 'true' ->
		    %% Line 446
		    {'used',_cor0}
		%% Line 447
		<_cor115> when 'true' ->
		    %% Line 448
		    apply 'check_liveness'/3
			(_cor2, Is, _cor0)
	      end
	  %% Line 450
	  <R,[{'catch_end',Y}|Is],St> when 'true' ->
	      %% Line 451
	      case _cor2 of
		%% Line 452
		<_cor116>
		    when call 'erlang':'=:='
			  (_cor2,
			   Y) ->
		    {'killed',_cor0}
		%% Line 453
		<_cor117> when 'true' ->
		    apply 'check_liveness'/3
			(_cor2, Is, _cor0)
	      end
	  %% Line 455
	  <R,[{'get_tuple_element',S,_cor118,D}|Is],St> when 'true' ->
	      %% Line 456
	      case _cor2 of
		%% Line 457
		<_cor119>
		    when call 'erlang':'=:='
			  (_cor2,
			   S) ->
		    {'used',_cor0}
		%% Line 458
		<_cor120>
		    when call 'erlang':'=:='
			  (_cor2,
			   D) ->
		    {'killed',_cor0}
		%% Line 459
		<_cor121> when 'true' ->
		    apply 'check_liveness'/3
			(_cor2, Is, _cor0)
	      end
	  %% Line 461
	  <R,[{'bs_context_to_binary',S}|Is],St> when 'true' ->
	      %% Line 462
	      case _cor2 of
		%% Line 463
		<_cor122>
		    when call 'erlang':'=:='
			  (_cor2,
			   S) ->
		    {'used',_cor0}
		%% Line 464
		<_cor123> when 'true' ->
		    apply 'check_liveness'/3
			(_cor2, Is, _cor0)
	      end
	  %% Line 466
	  <R,[{'loop_rec',{'f',_cor124},{'x',0}}|_cor125],St> when 'true' ->
	      %% Line 467
	      case _cor2 of
		%% Line 468
		<{'x',_cor126}> when 'true' ->
		    %% Line 469
		    {'killed',_cor0}
		%% Line 470
		<_cor127> when 'true' ->
		    %% Line 472
		    {'unknown',_cor0}
	      end
	  %% Line 474
	  <R,[{'loop_rec_end',{'f',Fail}}|_cor128],St> when 'true' ->
	      %% Line 475
	      apply 'check_liveness_at'/3
		  (_cor2, Fail, _cor0)
	  %% Line 476
	  <R,[{'line',_cor129}|Is],St> when 'true' ->
	      %% Line 477
	      apply 'check_liveness'/3
		  (_cor2, Is, _cor0)
	  %% Line 478
	  <_X_R,Is,St>
	      when call 'erlang':'is_list'
		    (_cor1) ->
	      %% Line 484
	      {'unknown',_cor0}
	  ( <_cor39,_cor38,_cor37> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'check_liveness',3}}] )
	    -| ['compiler_generated'] )
	end
'check_liveness_everywhere'/3 =
    %% Line 486
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <R,[{'f',Lbl}|T],St0> when 'true' ->
	      let <_2309> =
		  %% Line 487
		  apply 'check_liveness_at'/3
		      (_cor2, Lbl, _cor0)
	      in  %% Line 487
		  case _2309 of
		    %% Line 488
		    <{'killed',St}> when 'true' ->
			apply 'check_liveness_everywhere'/3
			    (_cor2, T, St)
		    %% Line 489
		    <Other = {_cor7,_cor8}> when 'true' ->
			_2309
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_2309})
		      -| ['compiler_generated'] )
		  end
	  %% Line 491
	  <R,[_cor9|T],St> when 'true' ->
	      %% Line 492
	      apply 'check_liveness_everywhere'/3
		  (_cor2, T, _cor0)
	  %% Line 493
	  <_cor10,[],St> when 'true' ->
	      %% Line 494
	      {'killed',_cor0}
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'check_liveness_everywhere',3}}] )
	    -| ['compiler_generated'] )
	end
'check_liveness_at'/3 =
    %% Line 496
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <R,Lbl,St0 = {'live',_cor16,Ll,ResMemorized}> when 'true' ->
	      let <_3088> =
		  %% Line 497
		  call 'gb_trees':'lookup'
		      (_cor1, ResMemorized)
	      in  %% Line 497
		  case _3088 of
		    %% Line 498
		    <{'value',Res}> when 'true' ->
			%% Line 499
			{Res,_cor0}
		    %% Line 500
		    <'none'> when 'true' ->
			let <_4054> =
			    %% Line 501
			    call 'gb_trees':'lookup'
				(_cor1, Ll)
			in  let <_cor4> =
				%% Line 501
				case _4054 of
				  %% Line 502
				  <{'value',Is}> when 'true' ->
				      apply 'check_liveness'/3
					  (_cor2, Is, _cor0)
				  %% Line 503
				  <'none'> when 'true' ->
				      {'unknown',_cor0}
				  ( <_cor3> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_4054})
				    -| ['compiler_generated'] )
				end
			    in  %% Line 501
				case _cor4 of
				  <{Res,St}> when 'true' ->
				      %% Line 505
				      ( case St of
					  ( <( {'live',_cor17,_cor18,_rec2}
					       -| ['compiler_generated'] )> when 'true' ->
						let <_rec0> =
						    call 'gb_trees':'insert'
							(_cor1, Res, _rec2)
						in  let <_cor11> =
							call 'erlang':'setelement'
							    (4, St, _rec0)
						    in  {Res,_cor11}
					    -| ['compiler_generated'] )
					  ( <_cor19> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','live'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				  ( <_cor5> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor4})
				    -| ['compiler_generated'] )
				end
		    ( <_cor12> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_3088})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'check_liveness_at',3}}] )
	    -| ['compiler_generated'] )
	end
'check_liveness_live_ret'/3 =
    %% Line 511
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'x',R},Live,St> when 'true' ->
	      %% Line 512
	      case <> of
		%% Line 513
		<>
		    when call 'erlang':'<'
			  (R,
			   _cor1) ->
		    {'used',_cor0}
		%% Line 514
		<> when 'true' ->
		    {'killed',_cor0}
	      end
	  %% Line 516
	  <{'y',_cor6},_cor7,St> when 'true' ->
	      %% Line 517
	      {'killed',_cor0}
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'check_liveness_live_ret',3}}] )
	    -| ['compiler_generated'] )
	end
'check_liveness_fail'/5 =
    %% Line 519
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_cor15,_cor16,_cor17,0,St> when 'true' ->
	      %% Line 520
	      {'killed',_cor0}
	  %% Line 521
	  <R,Op,Args,Fail,St> when 'true' ->
	      let <Arity> =
		  %% Line 522
		  call 'erlang':'length'
		      (_cor2)
	      in  let <_341> =
		      %% Line 523
		      call 'erl_internal':'comp_op'
			  (_cor3, Arity)
		  in  let <_cor8> =
			  %% Line 523
			  ( case _341 of
			      ( <( 'true'
				   -| ['compiler_generated'] )> when 'true' ->
				    'true'
				-| ['compiler_generated'] )
			      ( <( 'false'
				   -| ['compiler_generated'] )> when 'true' ->
				    %% Line 524
				    call 'erl_internal':'new_type_test'
					(_cor3, Arity)
				-| ['compiler_generated'] )
			      ( <_cor6> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {( 'badarg'
						-| ['compiler_generated'] ),_341}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      in  %% Line 523
			  case _cor8 of
			    %% Line 525
			    <'true'> when 'true' ->
				{'killed',_cor0}
			    %% Line 526
			    <'false'> when 'true' ->
				apply 'check_liveness_at'/3
				    (_cor4, _cor1, _cor0)
			    ( <_cor9> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor8})
			      -| ['compiler_generated'] )
			  end
	end
'check_killed_block'/2 =
    %% Line 541
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'x',X},[{'set',_cor7,_cor8,{'alloc',Live,_cor9}}|_cor10]> when 'true' ->
	      %% Line 542
	      case <> of
		%% Line 543
		<>
		    when call 'erlang':'>='
			  (X,
			   Live) ->
		    'killed'
		%% Line 544
		<> when 'true' ->
		    'used'
	      end
	  %% Line 546
	  <R,[{'set',Ds,Ss,_X_Op}|Is]> when 'true' ->
	      let <_1590> =
		  %% Line 547
		  call 'lists':'member'
		      (_cor1, Ss)
	      in  %% Line 547
		  case _1590 of
		    %% Line 548
		    <'true'> when 'true' ->
			'used'
		    %% Line 549
		    <'false'> when 'true' ->
			let <_415> =
			    %% Line 550
			    call 'lists':'member'
				(_cor1, Ds)
			in  %% Line 550
			    case _415 of
			      %% Line 551
			      <'true'> when 'true' ->
				  'killed'
			      %% Line 552
			      <'false'> when 'true' ->
				  apply 'check_killed_block'/2
				      (_cor1, Is)
			      ( <_cor2> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_415})
				-| ['compiler_generated'] )
			    end
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_1590})
		      -| ['compiler_generated'] )
		  end
	  %% Line 555
	  <R,[{'%live',Live}|Is]> when 'true' ->
	      %% Line 556
	      case _cor1 of
		%% Line 557
		<{'x',X}>
		    when call 'erlang':'>='
			  (X,
			   Live) ->
		    'killed'
		%% Line 558
		<_cor11> when 'true' ->
		    apply 'check_killed_block'/2
			(_cor1, Is)
	      end
	  %% Line 560
	  <_cor12,[]> when 'true' ->
	      'transparent'
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'check_killed_block',2}}] )
	    -| ['compiler_generated'] )
	end
'check_used_block'/3 =
    %% Line 571
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <R = {'x',X},[{'set',Ds,Ss,{'alloc',Live,Op}}|Is],St> when 'true' ->
	      %% Line 572
	      case <> of
		%% Line 573
		<>
		    when call 'erlang':'>='
			  (X,
			   Live) ->
		    {'killed',_cor0}
		%% Line 574
		<> when 'true' ->
		    apply 'check_used_block_1'/6
			(_cor2, Ss, Ds, Op, Is, _cor0)
	      end
	  %% Line 576
	  <R,[{'set',Ds,Ss,Op}|Is],St> when 'true' ->
	      %% Line 577
	      apply 'check_used_block_1'/6
		  (_cor2, Ss, Ds, Op, Is, _cor0)
	  %% Line 578
	  <R,[{'%live',Live}|Is],St> when 'true' ->
	      %% Line 579
	      case _cor2 of
		%% Line 580
		<{'x',X}>
		    when call 'erlang':'>='
			  (X,
			   Live) ->
		    {'killed',_cor0}
		%% Line 581
		<_cor7> when 'true' ->
		    apply 'check_used_block'/3
			(_cor2, Is, _cor0)
	      end
	  %% Line 583
	  <_cor8,[],St> when 'true' ->
	      {'transparent',_cor0}
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'check_used_block',3}}] )
	    -| ['compiler_generated'] )
	end
'check_used_block_1'/6 =
    %% Line 585
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_2234> =
	    %% Line 586
	    call 'lists':'member'
		(_cor5, _cor4)
	in  %% Line 586
	    case _2234 of
	      %% Line 587
	      <'true'> when 'true' ->
		  %% Line 588
		  {'used',_cor0}
	      %% Line 589
	      <'false'> when 'true' ->
		  let <_2893> =
		      %% Line 590
		      apply 'is_reg_used_at'/3
			  (_cor5, _cor2, _cor0)
		  in  %% Line 590
		      case _2893 of
			%% Line 591
			<{'true',St}> when 'true' ->
			    %% Line 592
			    {'used',St}
			%% Line 593
			<{'false',St}> when 'true' ->
			    let <_3935> =
				%% Line 594
				call 'lists':'member'
				    (_cor5, _cor3)
			    in  %% Line 594
				case _3935 of
				  %% Line 595
				  <'true'> when 'true' ->
				      {'killed',St}
				  %% Line 596
				  <'false'> when 'true' ->
				      apply 'check_used_block'/3
					  (_cor5, _cor1, St)
				  ( <_cor6> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_3935})
				    -| ['compiler_generated'] )
				end
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_2893})
			  -| ['compiler_generated'] )
		      end
	      ( <_cor8> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_2234})
		-| ['compiler_generated'] )
	    end
'is_reg_used_at'/3 =
    %% Line 601
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <R,{'gc_bif',_cor6,{'f',Lbl}},St> when 'true' ->
	      %% Line 602
	      apply 'is_reg_used_at_1'/3
		  (_cor2, Lbl, _cor0)
	  %% Line 603
	  <R,{'bif',_cor7,{'f',Lbl}},St> when 'true' ->
	      %% Line 604
	      apply 'is_reg_used_at_1'/3
		  (_cor2, Lbl, _cor0)
	  %% Line 605
	  <_cor8,_cor9,St> when 'true' ->
	      %% Line 606
	      {'false',_cor0}
	end
'is_reg_used_at_1'/3 =
    %% Line 608
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_cor7,0,St> when 'true' ->
	      %% Line 609
	      {'false',_cor0}
	  %% Line 610
	  <R,Lbl,St0> when 'true' ->
	      let <_4393> =
		  %% Line 611
		  apply 'check_liveness_at'/3
		      (_cor2, _cor1, _cor0)
	      in  %% Line 611
		  case _4393 of
		    %% Line 612
		    <{'killed',St}> when 'true' ->
			{'false',St}
		    %% Line 613
		    <{'used',St}> when 'true' ->
			{'true',St}
		    %% Line 614
		    <{'unknown',St}> when 'true' ->
			{'true',St}
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_4393})
		      -| ['compiler_generated'] )
		  end
	end
'index_labels_1'/2 =
    %% Line 617
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'label',Lbl}|Is0],Acc> when 'true' ->
	      let <_cor4> =
		  %% Line 618
		  fun (_cor2) ->
		      case _cor2 of
			<{'label',_cor9}> when 'true' ->
			    'true'
			%% Line 619
			<_cor10> when 'true' ->
			    'false'
		      end
	      in  let <Is> =
		      %% Line 618
		      call 'lists':'dropwhile'
			  (_cor4, Is0)
		  in  %% Line 620
		      apply 'index_labels_1'/2
			  (Is0, [{Lbl,Is}|_cor0])
	  %% Line 621
	  <[_cor11|Is],Acc> when 'true' ->
	      %% Line 622
	      apply 'index_labels_1'/2
		  (Is, _cor0)
	  %% Line 623
	  <[],Acc> when 'true' ->
	      let <_cor6> =
		  call 'lists':'sort'
		      (_cor0)
	      in  call 'gb_trees':'from_orddict'
		      (_cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'index_labels_1',2}}] )
	    -| ['compiler_generated'] )
	end
'combine_alloc_lists_1'/1 =
    %% Line 630
    fun (_cor0) ->
	case _cor0 of
	  <[{'words',W1}|[{'words',W2}|T]]>
	      when let <_cor1> =
		    %% Line 631
		    call 'erlang':'is_integer'
			(W1)
		in  let <_cor2> =
			%% Line 631
			call 'erlang':'is_integer'
			    (W2)
		    in  %% Line 631
			call 'erlang':'and'
			    (_cor1, _cor2) ->
	      let <_cor3> =
		  %% Line 632
		  call 'erlang':'+'
		      (W1, W2)
	      in  let <_cor4> =
		      %% Line 632
		      apply 'combine_alloc_lists_1'/1
			  (T)
		  in  %% Line 632
		      [{'words',_cor3}|_cor4]
	  %% Line 633
	  <[{'floats',F1}|[{'floats',F2}|T]]>
	      when let <_cor5> =
		    %% Line 634
		    call 'erlang':'is_integer'
			(F1)
		in  let <_cor6> =
			%% Line 634
			call 'erlang':'is_integer'
			    (F2)
		    in  %% Line 634
			call 'erlang':'and'
			    (_cor5, _cor6) ->
	      let <_cor7> =
		  %% Line 635
		  call 'erlang':'+'
		      (F1, F2)
	      in  let <_cor8> =
		      %% Line 635
		      apply 'combine_alloc_lists_1'/1
			  (T)
		  in  %% Line 635
		      [{'floats',_cor7}|_cor8]
	  %% Line 636
	  <[W = {'words',_cor12}|T]> when 'true' ->
	      let <_cor9> =
		  %% Line 637
		  apply 'combine_alloc_lists_1'/1
		      (T)
	      in  %% Line 637
		  [W|_cor9]
	  %% Line 638
	  <[F = {'floats',_cor13}|T]> when 'true' ->
	      let <_cor10> =
		  %% Line 639
		  apply 'combine_alloc_lists_1'/1
		      (T)
	      in  %% Line 639
		  [F|_cor10]
	  %% Line 640
	  <[]> when 'true' ->
	      []
	  ( <_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor0})
		  -| [{'function_name',{'combine_alloc_lists_1',1}}] )
	    -| ['compiler_generated'] )
	end
'live_opt'/4 =
    %% Line 645
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[I = {'bs_context_to_binary',Src}|Is],Regs0,D,Acc> when 'true' ->
	      let <Regs> =
		  %% Line 646
		  apply 'x_live'/2
		      ([Src|[]], _cor2)
	      in  %% Line 647
		  apply 'live_opt'/4
		      (Is, Regs, _cor1, [I|_cor0])
	  %% Line 648
	  <[I = {'bs_init',Fail,_cor56,'none',Ss,Dst}|Is],Regs0,D,Acc> when 'true' ->
	      let <_cor5> =
		  %% Line 649
		  apply 'x_dead'/2
		      ([Dst|[]], _cor2)
	      in  let <Regs1> =
		      %% Line 649
		      apply 'x_live'/2
			  (Ss, _cor5)
		  in  let <Regs> =
			  %% Line 650
			  apply 'live_join_label'/3
			      (Fail, _cor1, Regs1)
		      in  %% Line 651
			  apply 'live_opt'/4
			      (Is, Regs, _cor1, [I|_cor0])
	  %% Line 652
	  <[{'bs_init',Fail,Info,Live0,Ss,Dst}|Is],Regs0,D,Acc> when 'true' ->
	      let <Regs1> =
		  %% Line 653
		  apply 'x_dead'/2
		      ([Dst|[]], _cor2)
	      in  let <Live> =
		      %% Line 823
		      case Regs1 of
			<0> when 'true' ->
			    0
			%% Line 824
			<Regs> when 'true' ->
			    let <_495> =
				call 'erlang':'bsr'
				    (Regs1, 1)
			    in  case _495 of
				  <0> when 'true' ->
				      1
				  <_1820> when 'true' ->
				      let <_2308> =
					  call 'erlang':'bsr'
					      (_495, 1)
				      in  apply 'live_regs_1'/2
					      (2, _2308)
				end
		      end
		  in  let <_2475> =
			  %% Line 655
			  call 'erlang':'=<'
			      (Live, Live0)
		      in  %% Line 655
			  case _2475 of
			    <'true'> when 'true' ->
				let <_4445> =
				    %% Line 818
				    call 'erlang':'bsl'
					(1, Live)
				in  let <Regs2> =
					%% Line 818
					call 'erlang':'-'
					    (_4445, 1)
				    in  let <Regs3> =
					    %% Line 657
					    apply 'x_live'/2
						(Ss, Regs2)
					in  let <Regs> =
						%% Line 658
						apply 'live_join_label'/3
						    (Fail, _cor1, Regs3)
					    in  let <I> =
						    %% Line 659
						    {'bs_init',Fail,Info,Live,Ss,Dst}
						in  %% Line 660
						    apply 'live_opt'/4
							(Is, Regs, _cor1, [I|_cor0])
			    ( <_cor10> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_2475})
			      -| ['compiler_generated'] )
			  end
	  %% Line 661
	  <[I = {'bs_put',Fail,_cor57,Ss}|Is],Regs0,D,Acc> when 'true' ->
	      let <Regs1> =
		  %% Line 662
		  apply 'x_live'/2
		      (Ss, _cor2)
	      in  let <Regs> =
		      %% Line 663
		      apply 'live_join_label'/3
			  (Fail, _cor1, Regs1)
		  in  %% Line 664
		      apply 'live_opt'/4
			  (Is, Regs, _cor1, [I|_cor0])
	  %% Line 665
	  <[I = {'bs_restore2',Src,_cor58}|Is],Regs0,D,Acc> when 'true' ->
	      let <Regs> =
		  %% Line 666
		  apply 'x_live'/2
		      ([Src|[]], _cor2)
	      in  %% Line 667
		  apply 'live_opt'/4
		      (Is, Regs, _cor1, [I|_cor0])
	  %% Line 668
	  <[I = {'bs_save2',Src,_cor59}|Is],Regs0,D,Acc> when 'true' ->
	      let <Regs> =
		  %% Line 669
		  apply 'x_live'/2
		      ([Src|[]], _cor2)
	      in  %% Line 670
		  apply 'live_opt'/4
		      (Is, Regs, _cor1, [I|_cor0])
	  %% Line 671
	  <[I = {'test','bs_start_match2',Fail,Live,[Src|[_cor60|[]]],_cor61}|Is],_cor62,D,Acc> when 'true' ->
	      let <_2432> =
		  %% Line 818
		  call 'erlang':'bsl'
		      (1, Live)
	      in  let <Regs0> =
		      %% Line 818
		      call 'erlang':'-'
			  (_2432, 1)
		  in  let <Regs1> =
			  %% Line 673
			  apply 'x_live'/2
			      ([Src|[]], Regs0)
		      in  let <Regs> =
			      %% Line 674
			      apply 'live_join_label'/3
				  (Fail, _cor1, Regs1)
			  in  %% Line 675
			      apply 'live_opt'/4
				  (Is, Regs, _cor1, [I|_cor0])
	  %% Line 678
	  <[{'block',Bl0}|Is],Regs0,D,Acc> when 'true' ->
	      let <_cor22> =
		  %% Line 823
		  case _cor2 of
		    <0> when 'true' ->
			0
		    %% Line 824
		    <Regs> when 'true' ->
			let <_4459> =
			    call 'erlang':'bsr'
				(_cor2, 1)
			in  case _4459 of
			      <0> when 'true' ->
				  1
			      <_1083> when 'true' ->
				  let <_2898> =
				      call 'erlang':'bsr'
					  (_4459, 1)
				  in  apply 'live_regs_1'/2
					  (2, _2898)
			    end
		  end
	      in  let <Live0> = {%% Line 679
		       '%live',_cor22}
		  in  let <_cor24> =
			  %% Line 680
			  call 'lists':'reverse'
			      (Bl0)
		      in  let <_3418> =
			      %% Line 680
			      apply 'live_opt_block'/4
				  (_cor24, _cor2, _cor1, [Live0|[]])
			  in  %% Line 680
			      case _3418 of
				<{Bl,Regs}> when 'true' ->
				    let <_cor26> =
					%% Line 823
					case Regs of
					  <0> when 'true' ->
					      0
					  %% Line 824
					  <_473> when 'true' ->
					      let <_4858> =
						  call 'erlang':'bsr'
						      (Regs, 1)
					      in  case _4858 of
						    <0> when 'true' ->
							1
						    <_4013> when 'true' ->
							let <_2225> =
							    call 'erlang':'bsr'
								(_4858, 1)
							in  apply 'live_regs_1'/2
								(2, _2225)
						  end
					end
				    in  let <Live> = {%% Line 681
					     '%live',_cor26}
					in  %% Line 682
					    apply 'live_opt'/4
						(Is, Regs, _cor1, [{'block',[Live|Bl]}|_cor0])
				( <_cor25> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_3418})
				  -| ['compiler_generated'] )
			      end
	  %% Line 683
	  <[I = {'label',L}|Is],Regs,D0,Acc> when 'true' ->
	      let <D> =
		  %% Line 684
		  call 'gb_trees':'insert'
		      (L, _cor2, _cor1)
	      in  %% Line 685
		  apply 'live_opt'/4
		      (Is, _cor2, D, [I|_cor0])
	  %% Line 686
	  <[I = {'jump',{'f',L}}|Is],_cor63,D,Acc> when 'true' ->
	      let <Regs> =
		  %% Line 687
		  call 'gb_trees':'get'
		      (L, _cor1)
	      in  %% Line 688
		  apply 'live_opt'/4
		      (Is, Regs, _cor1, [I|_cor0])
	  %% Line 689
	  <[I = 'return'|Is],_cor64,D,Acc> when 'true' ->
	      %% Line 690
	      apply 'live_opt'/4
		  (Is, 1, _cor1, [I|_cor0])
	  %% Line 691
	  <[I = {'catch_end',_cor65}|Is],_cor66,D,Acc> when 'true' ->
	      %% Line 692
	      apply 'live_opt'/4
		  (Is, 1, _cor1, [I|_cor0])
	  %% Line 693
	  <[I = {'badmatch',Src}|Is],_cor67,D,Acc> when 'true' ->
	      let <Regs> =
		  %% Line 694
		  apply 'x_live'/2
		      ([Src|[]], 0)
	      in  %% Line 695
		  apply 'live_opt'/4
		      (Is, Regs, _cor1, [I|_cor0])
	  %% Line 696
	  <[I = {'case_end',Src}|Is],_cor68,D,Acc> when 'true' ->
	      let <Regs> =
		  %% Line 697
		  apply 'x_live'/2
		      ([Src|[]], 0)
	      in  %% Line 698
		  apply 'live_opt'/4
		      (Is, Regs, _cor1, [I|_cor0])
	  %% Line 699
	  <[I = {'try_case_end',Src}|Is],_cor69,D,Acc> when 'true' ->
	      let <Regs> =
		  %% Line 700
		  apply 'x_live'/2
		      ([Src|[]], 0)
	      in  %% Line 701
		  apply 'live_opt'/4
		      (Is, Regs, _cor1, [I|_cor0])
	  %% Line 702
	  <[I = 'if_end'|Is],_cor70,D,Acc> when 'true' ->
	      %% Line 704
	      apply 'live_opt'/4
		  (Is, 0, _cor1, [I|_cor0])
	  %% Line 705
	  <[I = {'call',Arity,_cor71}|Is],_cor72,D,Acc> when 'true' ->
	      let <_4012> =
		  %% Line 818
		  call 'erlang':'bsl'
		      (1, Arity)
	      in  let <_cor35> =
		      %% Line 818
		      call 'erlang':'-'
			  (_4012, 1)
		  in  %% Line 706
		      apply 'live_opt'/4
			  (Is, _cor35, _cor1, [I|_cor0])
	  %% Line 707
	  <[I = {'call_ext',Arity,_cor73}|Is],_cor74,D,Acc> when 'true' ->
	      let <_4212> =
		  %% Line 818
		  call 'erlang':'bsl'
		      (1, Arity)
	      in  let <_cor36> =
		      %% Line 818
		      call 'erlang':'-'
			  (_4212, 1)
		  in  %% Line 708
		      apply 'live_opt'/4
			  (Is, _cor36, _cor1, [I|_cor0])
	  %% Line 709
	  <[I = {'call_fun',Arity}|Is],_cor75,D,Acc> when 'true' ->
	      let <_cor37> =
		  %% Line 710
		  call 'erlang':'+'
		      (Arity, 1)
	      in  let <_3737> =
		      %% Line 818
		      call 'erlang':'bsl'
			  (1, _cor37)
		  in  let <_cor38> =
			  %% Line 818
			  call 'erlang':'-'
			      (_3737, 1)
		      in  %% Line 710
			  apply 'live_opt'/4
			      (Is, _cor38, _cor1, [I|_cor0])
	  %% Line 711
	  <[I = {'apply',Arity}|Is],_cor76,D,Acc> when 'true' ->
	      let <_cor39> =
		  %% Line 712
		  call 'erlang':'+'
		      (Arity, 2)
	      in  let <_2675> =
		      %% Line 818
		      call 'erlang':'bsl'
			  (1, _cor39)
		  in  let <_cor40> =
			  %% Line 818
			  call 'erlang':'-'
			      (_2675, 1)
		      in  %% Line 712
			  apply 'live_opt'/4
			      (Is, _cor40, _cor1, [I|_cor0])
	  %% Line 713
	  <[I = {'make_fun2',_cor77,_cor78,_cor79,Arity}|Is],_cor80,D,Acc> when 'true' ->
	      let <_1333> =
		  %% Line 818
		  call 'erlang':'bsl'
		      (1, Arity)
	      in  let <_cor41> =
		      %% Line 818
		      call 'erlang':'-'
			  (_1333, 1)
		  in  %% Line 714
		      apply 'live_opt'/4
			  (Is, _cor41, _cor1, [I|_cor0])
	  %% Line 715
	  <[I = {'test',_cor81,Fail,Ss}|Is],Regs0,D,Acc> when 'true' ->
	      let <Regs1> =
		  %% Line 716
		  apply 'x_live'/2
		      (Ss, _cor2)
	      in  let <Regs> =
		      %% Line 717
		      apply 'live_join_label'/3
			  (Fail, _cor1, Regs1)
		  in  %% Line 718
		      apply 'live_opt'/4
			  (Is, Regs, _cor1, [I|_cor0])
	  %% Line 719
	  <[I = {'test',_cor82,Fail,Live,Ss,_cor83}|Is],_cor84,D,Acc> when 'true' ->
	      let <_1359> =
		  %% Line 818
		  call 'erlang':'bsl'
		      (1, Live)
	      in  let <Regs0> =
		      %% Line 818
		      call 'erlang':'-'
			  (_1359, 1)
		  in  let <Regs1> =
			  %% Line 721
			  apply 'x_live'/2
			      (Ss, Regs0)
		      in  let <Regs> =
			      %% Line 722
			      apply 'live_join_label'/3
				  (Fail, _cor1, Regs1)
			  in  %% Line 723
			      apply 'live_opt'/4
				  (Is, Regs, _cor1, [I|_cor0])
	  %% Line 724
	  <[I = {'select',_cor85,Src,Fail,List}|Is],Regs0,D,Acc> when 'true' ->
	      let <Regs1> =
		  %% Line 725
		  apply 'x_live'/2
		      ([Src|[]], _cor2)
	      in  let <Regs> =
		      %% Line 726
		      apply 'live_join_labels'/3
			  ([Fail|List], _cor1, Regs1)
		  in  %% Line 727
		      apply 'live_opt'/4
			  (Is, Regs, _cor1, [I|_cor0])
	  %% Line 728
	  <[I = {'try',_cor86,_cor87}|Is],Regs,D,Acc> when 'true' ->
	      %% Line 732
	      apply 'live_opt'/4
		  (Is, _cor2, _cor1, [I|_cor0])
	  %% Line 733
	  <[I = {'try_case',_cor88}|Is],_cor89,D,Acc> when 'true' ->
	      %% Line 734
	      apply 'live_opt'/4
		  (Is, 1, _cor1, [I|_cor0])
	  %% Line 735
	  <[I = {'loop_rec',_X_Fail,_X_Dst}|Is],_cor90,D,Acc> when 'true' ->
	      %% Line 736
	      apply 'live_opt'/4
		  (Is, 0, _cor1, [I|_cor0])
	  %% Line 737
	  <[I = 'timeout'|Is],_cor91,D,Acc> when 'true' ->
	      %% Line 738
	      apply 'live_opt'/4
		  (Is, 0, _cor1, [I|_cor0])
	  %% Line 739
	  <[I = {'wait',_cor92}|Is],_cor93,D,Acc> when 'true' ->
	      %% Line 740
	      apply 'live_opt'/4
		  (Is, 0, _cor1, [I|_cor0])
	  %% Line 743
	  <[I = {'deallocate',_cor94}|Is],Regs,D,Acc> when 'true' ->
	      %% Line 744
	      apply 'live_opt'/4
		  (Is, _cor2, _cor1, [I|_cor0])
	  %% Line 745
	  <[I = {'kill',_cor95}|Is],Regs,D,Acc> when 'true' ->
	      %% Line 746
	      apply 'live_opt'/4
		  (Is, _cor2, _cor1, [I|_cor0])
	  %% Line 747
	  <[I = {'try_end',_cor96}|Is],Regs,D,Acc> when 'true' ->
	      %% Line 748
	      apply 'live_opt'/4
		  (Is, _cor2, _cor1, [I|_cor0])
	  %% Line 749
	  <[I = {'loop_rec_end',_cor97}|Is],Regs,D,Acc> when 'true' ->
	      %% Line 750
	      apply 'live_opt'/4
		  (Is, _cor2, _cor1, [I|_cor0])
	  %% Line 751
	  <[I = {'wait_timeout',_cor98,'nil'}|Is],Regs,D,Acc> when 'true' ->
	      %% Line 752
	      apply 'live_opt'/4
		  (Is, _cor2, _cor1, [I|_cor0])
	  %% Line 753
	  <[I = {'wait_timeout',_cor99,{Tag,_cor100}}|Is],Regs,D,Acc>
	      when call 'erlang':'=/='
		    (Tag,
		     'x') ->
	      %% Line 754
	      apply 'live_opt'/4
		  (Is, _cor2, _cor1, [I|_cor0])
	  %% Line 755
	  <[I = {'line',_cor101}|Is],Regs,D,Acc> when 'true' ->
	      %% Line 756
	      apply 'live_opt'/4
		  (Is, _cor2, _cor1, [I|_cor0])
	  %% Line 760
	  <[I = {'trim',_cor102,_cor103}|Is],Regs,D,Acc> when 'true' ->
	      %% Line 761
	      apply 'live_opt'/4
		  (Is, _cor2, _cor1, [I|_cor0])
	  %% Line 762
	  <[I = {'allocate',_cor104,Live}|Is],_cor105,D,Acc> when 'true' ->
	      let <_4927> =
		  %% Line 818
		  call 'erlang':'bsl'
		      (1, Live)
	      in  let <_cor50> =
		      %% Line 818
		      call 'erlang':'-'
			  (_4927, 1)
		  in  %% Line 763
		      apply 'live_opt'/4
			  (Is, _cor50, _cor1, [I|_cor0])
	  %% Line 764
	  <[I = {'allocate_heap',_cor106,_cor107,Live}|Is],_cor108,D,Acc> when 'true' ->
	      let <_2532> =
		  %% Line 818
		  call 'erlang':'bsl'
		      (1, Live)
	      in  let <_cor51> =
		      %% Line 818
		      call 'erlang':'-'
			  (_2532, 1)
		  in  %% Line 765
		      apply 'live_opt'/4
			  (Is, _cor51, _cor1, [I|_cor0])
	  %% Line 766
	  <[I = {'%',_cor109}|Is],Regs,D,Acc> when 'true' ->
	      %% Line 767
	      apply 'live_opt'/4
		  (Is, _cor2, _cor1, [I|_cor0])
	  %% Line 768
	  <[I = {'recv_set',_cor110}|Is],Regs,D,Acc> when 'true' ->
	      %% Line 769
	      apply 'live_opt'/4
		  (Is, _cor2, _cor1, [I|_cor0])
	  %% Line 770
	  <[I = {'recv_mark',_cor111}|Is],Regs,D,Acc> when 'true' ->
	      %% Line 771
	      apply 'live_opt'/4
		  (Is, _cor2, _cor1, [I|_cor0])
	  %% Line 773
	  <[],_cor112,_cor113,Acc> when 'true' ->
	      _cor0
	  ( <_cor55,_cor54,_cor53,_cor52> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'live_opt',4}}] )
	    -| ['compiler_generated'] )
	end
'live_opt_block'/4 =
    %% Line 775
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[I0 = {'set',Ds,Ss,Op}|Is],Regs0,D,Acc> when 'true' ->
	      let <_cor4> =
		  %% Line 776
		  apply 'x_dead'/2
		      (Ds, _cor2)
	      in  let <Regs1> =
		      %% Line 776
		      apply 'x_live'/2
			  (Ss, _cor4)
		  in  let <I,Regs> =
			  %% Line 777
			  case Op of
			    %% Line 778
			    <{'alloc',Live0,Alloc}> when 'true' ->
				let <Live> =
				    %% Line 823
				    case Regs1 of
				      <0> when 'true' ->
					  0
				      %% Line 824
				      <Regs> when 'true' ->
					  let <_4838> =
					      call 'erlang':'bsr'
						  (Regs1, 1)
					  in  case _4838 of
						<0> when 'true' ->
						    1
						<_3223> when 'true' ->
						    let <_375> =
							call 'erlang':'bsr'
							    (_4838, 1)
						    in  apply 'live_regs_1'/2
							    (2, _375)
					      end
				    end
				in  let <_3119> =
					%% Line 787
					call 'erlang':'=<'
					    (Live, Live0)
				    in  %% Line 787
					case _3119 of
					  <'true'> when 'true' ->
					      let <I1> =
						  %% Line 788
						  {'set',Ds,Ss,{'alloc',Live,Alloc}}
					      in  let <_216> =
						      %% Line 818
						      call 'erlang':'bsl'
							  (1, Live)
						  in  let <_cor9> =
							  %% Line 818
							  call 'erlang':'-'
							      (_216, 1)
						      in  %% Line 789
							  <I1,_cor9>
					  ( <_cor7> when 'true' ->
						primop 'match_fail'
						    ({'badmatch',_3119})
					    -| ['compiler_generated'] )
					end
			    %% Line 790
			    <_cor23> when 'true' ->
				%% Line 791
				<I0,Regs1>
			  end
		      in  %% Line 793
			  case Ds of
			    %% Line 794
			    <[{'x',X}|[]]> when 'true' ->
				let <_313> =
				    %% Line 834
				    call 'erlang':'bsr'
					(_cor2, X)
				in  let <_3842> =
					%% Line 834
					call 'erlang':'band'
					    (_313, 1)
				    in  let <_cor14> =
					    %% Line 834
					    call 'erlang':'=:='
						(_3842, 1)
					in  let <_cor16> =
						%% Line 795
						( case _cor14 of
						    ( <'false'> when 'true' ->
							  call 'erlang':'=:='
							      (Op, 'move')
						      -| ['compiler_generated'] )
						    ( <'true'> when 'true' ->
							  'false'
						      -| ['compiler_generated'] )
						    ( <_cor_variable> when 'true' ->
							  call 'erlang':'error'
							      ('badarg')
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    in  %% Line 795
						case _cor16 of
						  %% Line 796
						  <'true'> when 'true' ->
						      %% Line 797
						      apply 'live_opt_block'/4
							  (Is, _cor2, _cor1, _cor0)
						  %% Line 798
						  <'false'> when 'true' ->
						      %% Line 799
						      apply 'live_opt_block'/4
							  (Is, Regs, _cor1, [I|_cor0])
						  ( <_cor17> when 'true' ->
							primop 'match_fail'
							    ({'case_clause',_cor16})
						    -| ['compiler_generated'] )
						end
			    %% Line 801
			    <_cor24> when 'true' ->
				%% Line 802
				apply 'live_opt_block'/4
				    (Is, Regs, _cor1, [I|_cor0])
			  end
	  %% Line 804
	  <[],Regs,_cor25,Acc> when 'true' ->
	      {_cor0,_cor2}
	  ( <_cor22,_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'live_opt_block',4}}] )
	    -| ['compiler_generated'] )
	end
'live_join_labels'/3 =
    %% Line 806
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{'f',L}|T],D,Regs0>
	      when call 'erlang':'=/='
		    (L,
		     0) ->
	      let <_cor3> =
		  %% Line 807
		  call 'gb_trees':'get'
		      (L, _cor1)
	      in  let <Regs> =
		      %% Line 807
		      call 'erlang':'bor'
			  (_cor3, _cor0)
		  in  %% Line 808
		      apply 'live_join_labels'/3
			  (T, _cor1, Regs)
	  %% Line 809
	  <[_cor8|T],D,Regs> when 'true' ->
	      %% Line 810
	      apply 'live_join_labels'/3
		  (T, _cor1, _cor0)
	  %% Line 811
	  <[],_cor9,Regs> when 'true' ->
	      _cor0
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'live_join_labels',3}}] )
	    -| ['compiler_generated'] )
	end
'live_join_label'/3 =
    %% Line 813
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'f',0},_cor7,Regs> when 'true' ->
	      _cor0
	  %% Line 815
	  <{'f',L},D,Regs> when 'true' ->
	      let <_cor3> =
		  %% Line 816
		  call 'gb_trees':'get'
		      (L, _cor1)
	      in  %% Line 816
		  call 'erlang':'bor'
		      (_cor3, _cor0)
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2,_cor1,_cor0})
		  -| [{'function_name',{'live_join_label',3}}] )
	    -| ['compiler_generated'] )
	end
'live_regs_1'/2 =
    %% Line 823
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <N,0> when 'true' ->
	      _cor1
	  %% Line 824
	  <N,Regs> when 'true' ->
	      let <_cor3> =
		  call 'erlang':'+'
		      (_cor1, 1)
	      in  let <_cor2> =
		      call 'erlang':'bsr'
			  (_cor0, 1)
		  in  apply 'live_regs_1'/2
			  (_cor3, _cor2)
	end
'x_dead'/2 =
    %% Line 826
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'x',N}|Rs],Regs> when 'true' ->
	      let <_cor2> =
		  call 'erlang':'bsl'
		      (1, N)
	      in  let <_cor3> =
		      call 'erlang':'bnot'
			  (_cor2)
		  in  let <_cor4> =
			  call 'erlang':'band'
			      (_cor0, _cor3)
		      in  apply 'x_dead'/2
			      (Rs, _cor4)
	  %% Line 827
	  <[_cor7|Rs],Regs> when 'true' ->
	      apply 'x_dead'/2
		  (Rs, _cor0)
	  %% Line 828
	  <[],Regs> when 'true' ->
	      _cor0
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'x_dead',2}}] )
	    -| ['compiler_generated'] )
	end
'x_live'/2 =
    %% Line 830
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'x',N}|Rs],Regs> when 'true' ->
	      let <_cor2> =
		  call 'erlang':'bsl'
		      (1, N)
	      in  let <_cor3> =
		      call 'erlang':'bor'
			  (_cor0, _cor2)
		  in  apply 'x_live'/2
			  (Rs, _cor3)
	  %% Line 831
	  <[_cor6|Rs],Regs> when 'true' ->
	      apply 'x_live'/2
		  (Rs, _cor0)
	  %% Line 832
	  <[],Regs> when 'true' ->
	      _cor0
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'x_live',2}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('beam_utils')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('beam_utils', _cor0)
end