module 'tool_utils' ['confirm'/2,
		     'confirm_yesno'/2,
		     'file_dialog'/1,
		     'module_info'/0,
		     'module_info'/1,
		     'notify'/2,
		     'open_help'/2,
		     'request'/2]
    attributes [%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','file_info'},[{'typed_record_field',{'record_field',25,{'atom',25,'size'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'type'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'device'}|[{'atom',26,'directory'}|[{'atom',26,'other'}|[{'atom',26,'regular'}|[{'atom',26,'symlink'}]]]]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'access'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'atom',27,'read'}|[{'atom',27,'write'}|[{'atom',27,'read_write'}|[{'atom',27,'none'}]]]]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'atime'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'remote_type',28,[{'atom',28,'file'}|[{'atom',28,'date_time'}|[[]]]]}|[{'type',28,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'mtime'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'remote_type',32,[{'atom',32,'file'}|[{'atom',32,'date_time'}|[[]]]]}|[{'type',32,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',34,{'atom',34,'ctime'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'remote_type',34,[{'atom',34,'file'}|[{'atom',34,'date_time'}|[[]]]]}|[{'type',34,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',40,{'atom',40,'mode'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'links'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',46,{'atom',46,'major_device'}},{'type',46,'union',[{'atom',46,'undefined'}|[{'type',46,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'minor_device'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'inode'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',54,{'atom',54,'uid'}},{'type',54,'union',[{'atom',54,'undefined'}|[{'type',54,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',55,{'atom',55,'gid'}},{'type',55,'union',[{'atom',55,'undefined'}|[{'type',55,'non_neg_integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','file_descriptor'},[{'typed_record_field',{'record_field',59,{'atom',59,'module'}},{'type',59,'union',[{'atom',59,'undefined'}|[{'type',59,'module',[]}]]}}|[{'typed_record_field',{'record_field',60,{'atom',60,'data'}},{'type',60,'union',[{'atom',60,'undefined'}|[{'type',60,'term',[]}]]}}]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','state'},[{'record_field',38,{'atom',38,'type'}}|[{'record_field',39,{'atom',39,'win'}}|[{'record_field',40,{'atom',40,'entry'}}|[{'record_field',41,{'atom',41,'in_focus'}}|[{'record_field',42,{'atom',42,'is_cursor'}}|[{'record_field',43,{'atom',43,'buttons'}}|[{'record_field',44,{'atom',44,'highlighted'}}]]]]]]],[]}]]
'open_help'/2 =
    %% Line 63
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Parent,'nofile'> when 'true' ->
	      %% Line 64
	      apply 'notify'/2
		  (Parent, [83|[111|[114|[114|[121|[44|[32|[110|[111|[32|[104|[101|[108|[112|[32|[105|[110|[102|[111|[114|[109|[97|[116|[105|[111|[110|[32|[101|[120|[105|[115|[116|[115]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	  %% Line 65
	  <Parent,File> when 'true' ->
	      %% Line 66
	      case call 'application':'get_env'
		       ('kernel', 'browser_cmd') of
		%% Line 67
		<'undefined'> when 'true' ->
		    %% Line 68
		    apply 'open_help_default'/2
			(Parent, File)
		%% Line 69
		<{'ok',Cmd}>
		    when call 'erlang':'is_list'
			  (Cmd) ->
		    let <_cor2> =
			%% Line 70
			[32|File]
		    in  let <_cor3> =
			    %% Line 70
			    call 'erlang':'++'
				(Cmd, _cor2)
			in  %% Line 70
			    call 'erlang':'spawn'
				('os', 'cmd', [_cor3|[]])
		%% Line 71
		<{'ok',{M,F,A}}> when 'true' ->
		    %% Line 72
		    call 'erlang':'apply'
			(M, F, [File|A])
		%% Line 73
		<_X_Other> when 'true' ->
		    %% Line 76
		    apply 'notify'/2
			(Parent, [[66|[97|[100|[32|[75|[101|[114|[110|[101|[108|[32|[99|[111|[110|[102|[105|[103|[117|[114|[97|[116|[105|[111|[110|[32|[112|[97|[114|[97|[109|[101|[116|[101|[114|[32|[98|[114|[111|[119|[115|[101|[114|[95|[99|[109|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[[68|[111|[32|[110|[111|[116|[32|[107|[110|[111|[119|[32|[104|[111|[119|[32|[116|[111|[32|[100|[105|[115|[112|[108|[97|[121|[32|[104|[101|[108|[112|[32|[102|[105|[108|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	      end
	end
'open_help_default'/2 =
    %% Line 79
    fun (_cor1,_cor0) ->
	let <_cor11> =
	    %% Line 80
	    case apply 'file_type'/1
		     (_cor0) of
	      %% Line 83
	      <'local'> when 'true' ->
		  %% Line 84
		  case call 'os':'type'
			   () of
		    %% Line 85
		    <{'unix',Type}> when 'true' ->
			%% Line 86
			case Type of
			  %% Line 87
			  <'darwin'> when 'true' ->
			      call 'erlang':'++'
				  ([111|[112|[101|[110|[32]]]]], _cor0)
			  %% Line 88
			  <_X_Else> when 'true' ->
			      let <_cor2> =
				  call 'erlang':'++'
				      (_cor0, [41|[34]])
			      in  call 'erlang':'++'
				      ([110|[101|[116|[115|[99|[97|[112|[101|[32|[45|[114|[101|[109|[111|[116|[101|[32|[34|[111|[112|[101|[110|[85|[82|[76|[40|[102|[105|[108|[101|[58]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor2)
			end
		    %% Line 90
		    <{'win32',_X_AnyType}> when 'true' ->
			let <_cor4> =
			    %% Line 91
			    call 'filename':'nativename'
				(_cor0)
			in  %% Line 91
			    call 'erlang':'++'
				([115|[116|[97|[114|[116|[32]]]]]], _cor4)
		    %% Line 93
		    <_X_Other> when 'true' ->
			%% Line 94
			'unknown'
		  end
	      %% Line 98
	      <'remote'> when 'true' ->
		  %% Line 99
		  case call 'os':'type'
			   () of
		    %% Line 100
		    <{'unix',Type}> when 'true' ->
			%% Line 101
			case Type of
			  %% Line 102
			  <'darwin'> when 'true' ->
			      call 'erlang':'++'
				  ([111|[112|[101|[110|[32]]]]], _cor0)
			  %% Line 103
			  <_X_Else> when 'true' ->
			      let <_cor6> =
				  call 'erlang':'++'
				      (_cor0, [41|[34]])
			      in  call 'erlang':'++'
				      ([110|[101|[116|[115|[99|[97|[112|[101|[32|[45|[114|[101|[109|[111|[116|[101|[32|[34|[111|[112|[101|[110|[85|[82|[76|[40|[102|[105|[108|[101|[58]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor6)
			end
		    %% Line 105
		    <{'win32',_X_AnyType}> when 'true' ->
			let <_cor8> =
			    %% Line 107
			    call 're':'replace'
				(_cor0, [92|[92]], [47], ['global'|[{'return','list'}]])
			in  %% Line 106
			    call 'erlang':'++'
				([110|[101|[116|[115|[99|[97|[112|[101|[46|[101|[120|[101|[32|[45|[104|[32]]]]]]]]]]]]]]]], _cor8)
		    %% Line 108
		    <_X_Other> when 'true' ->
			%% Line 109
			'unknown'
		  end
	      %% Line 112
	      <Error> when 'true' ->
		  %% Line 113
		  Error
	    end
	in  %% Line 116
	    case <> of
	      %% Line 117
	      <>
		  when call 'erlang':'is_list'
			(_cor11) ->
		  %% Line 118
		  call 'erlang':'spawn'
		      ('os', 'cmd', [_cor11|[]])
	      %% Line 119
	      <>
		  when call 'erlang':'=:='
			(_cor11,
			 'unknown') ->
		  %% Line 122
		  apply 'notify'/2
		      (_cor1, [[83|[111|[114|[114|[121|[44|[32|[100|[111|[32|[110|[111|[116|[32|[107|[110|[111|[119|[32|[104|[111|[119|[32|[116|[111]]]]]]]]]]]]]]]]]]]]]]]]]|[[100|[105|[115|[112|[108|[97|[121|[32|[72|[84|[77|[76|[32|[102|[105|[108|[101|[115|[32|[97|[116|[32|[116|[104|[105|[115|[32|[112|[108|[97|[116|[102|[111|[114|[109]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	      %% Line 123
	      <> when 'true' ->
		  %% Line 124
		  case _cor11 of
		    <{'error',Reason}> when 'true' ->
			let <Str> =
			    %% Line 125
			    call 'file':'format_error'
				(Reason)
			in  %% Line 126
			    apply 'notify'/2
				(_cor1, [_cor0|[Str|[]]])
		    ( <_cor14> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor14})
		      -| ['compiler_generated'] )
		  end
	    end
'file_type'/1 =
    %% Line 134
    fun (_cor0) ->
	%% Line 135
	case _cor0 of
	  %% Line 136
	  <[104|[116|[116|[112|[58|[47|[47|_X_URL]]]]]]]> when 'true' ->
	      %% Line 137
	      'remote'
	  %% Line 138
	  <_cor29> when 'true' ->
	      let <_cor3> =
		  %% Line 141
		  case call 'filename':'extension'
			   (_cor0) of
		    %% Line 142
		    <[46|[104|[116|[109|[108|[35|_X_Index]]]]]]> when 'true' ->
			let <_cor1> =
			    %% Line 143
			    call 'filename':'rootname'
				(_cor0)
			in  %% Line 143
			    call 'erlang':'++'
				(_cor1, [46|[104|[116|[109|[108]]]]])
		    %% Line 144
		    <_cor30> when 'true' ->
			_cor0
		  end
	      in  %% Line 148
		  case call 'file':'read_file_info'
			   (_cor3) of
		    %% Line 149
		    <{'ok',FileInfo = {'file_info',_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43}}>
			when let <_cor10> =
			      call 'erlang':'=:='
				  (_cor32, 'regular')
			  in  let <_cor13> =
				  %% Line 150
				  call 'erlang':'=/='
				      (_cor33, 'none')
			      in  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'and'
									 -| ['compiler_generated'] )
					(_cor10, _cor13)
				    -| ['compiler_generated'] ) ->
			%% Line 151
			'local'
		    %% Line 152
		    <{'ok',FileInfo = {'file_info',_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56}}>
			when call 'erlang':'=/='
			      (_cor45,
			       'regular') ->
			%% Line 153
			{'error','einval'}
		    %% Line 154
		    <{'ok',FileInfo = {'file_info',_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69}}>
			when call 'erlang':'=:='
			      (_cor59,
			       'none') ->
			%% Line 155
			{'error','eacces'}
		    %% Line 156
		    <Error> when 'true' ->
			%% Line 157
			Error
		  end
	end
'file_dialog'/1 =
    %% Line 165
    fun (_cor0) ->
	%% Line 166
	call 'tool_file_dialog':'start'
	    (_cor0)
'notify'/2 =
    %% Line 193
    fun (_cor1,_cor0) ->
	%% Line 194
	apply 'help_win'/3
	    ('notify', _cor1, _cor0)
'confirm'/2 =
    %% Line 195
    fun (_cor1,_cor0) ->
	%% Line 196
	apply 'help_win'/3
	    ('confirm', _cor1, _cor0)
'confirm_yesno'/2 =
    %% Line 197
    fun (_cor1,_cor0) ->
	%% Line 198
	apply 'help_win'/3
	    ('confirm_yesno', _cor1, _cor0)
'request'/2 =
    %% Line 199
    fun (_cor1,_cor0) ->
	%% Line 200
	apply 'help_win'/3
	    ('request', _cor1, _cor0)
'help_win'/3 =
    %% Line 202
    fun (_cor2,_cor1,_cor0) ->
	let <Buttons> =
	    %% Line 205
	    apply 'buttons'/1
		(_cor2)
	in  let <Nbtn> =
		%% Line 206
		call 'erlang':'length'
		    (Buttons)
	    in  let <_cor7> =
		    %% Line 209
		    apply 'title'/1
			(_cor2)
		in  let <Win> =
			%% Line 209
			call 'gs':'create'
			    ('window', _cor1, [{'title',_cor7}|[{'keypress','true'}]])
		    in  let <Top> =
			    %% Line 210
			    call 'gs':'create'
				('frame', Win, [{'keypress','true'}])
			in  let <Lbl> =
				%% Line 211
				call 'gs':'create'
				    ('label', Top, [{'align','c'}|[{'justify','center'}|[{'font',{'screen',12}}|[{'keypress','true'}]]]])
			    in  let <_cor11> =
				    %% Line 212
				    case <> of
				      %% Line 213
				      <>
					  when call 'erlang':'=:='
						(_cor2,
						 'request') ->
					  call 'gs':'create'
					      ('frame', Win, [{'keypress','true'}])
				      %% Line 214
				      <> when 'true' ->
					  'ignore'
				    end
				in  let <_cor15> =
					%% Line 216
					case <> of
					  %% Line 217
					  <>
					      when call 'erlang':'=:='
						    (_cor2,
						     'request') ->
					      %% Line 220
					      call 'gs':'create'
						  ('entry', _cor11, [{'font',{'screen',12}}|[{'keypress','true'}|[{'setfocus','true'}|[{'focus','true'}|[{'enter','true'}|[{'leave','true'}]]]]]])
					  %% Line 221
					  <> when 'true' ->
					      'ignore'
					end
				    in  let <Bot> =
					    %% Line 223
					    call 'gs':'create'
						('frame', Win, [{'keypress','true'}])
					in  let <Font> =
						%% Line 226
						call 'gs':'read'
						    (_cor1, {'choose_font',{'screen',12}})
					    in  let <Text> =
						    %% Line 227
						    apply 'insert_newlines'/1
							(_cor0)
						in  %% Line 228
						    case call 'gs':'read'
							     (Lbl, {'font_wh',{Font,Text}}) of
						      <{Wlbl0,Hlbl0}> when 'true' ->
							  %% Line 229
							  case call 'gs':'read'
								   (Lbl, {'font_wh',{Font,[69|[110|[116|[114|[121]]]]]}}) of
							    <{_X_Went0,Hent0}> when 'true' ->
								%% Line 230
								case call 'gs':'read'
									 (Lbl, {'font_wh',{Font,[67|[97|[110|[99|[101|[108]]]]]]}}) of
								  <{Wbtn0,Hbtn0}> when 'true' ->
								      let <_cor23> =
									  %% Line 233
									  call 'erlang':'+'
									      (Wbtn0, 10)
								      in  let <Wbtn> =
									      %% Line 233
									      call 'erlang':'max'
										  (_cor23, 50)
									  in  let <_cor25> =
										  %% Line 234
										  call 'erlang':'+'
										      (Hbtn0, 10)
									      in  let <Hbtn> =
										      %% Line 234
										      call 'erlang':'max'
											  (_cor25, 30)
										  in  let <_cor27> =
											  %% Line 235
											  call 'erlang':'+'
											      (Hent0, 10)
										      in  let <Hent> =
											      %% Line 235
											      call 'erlang':'max'
												  (_cor27, 30)
											  in  let <_cor31> =
												  %% Line 236
												  call 'erlang':'*'
												      (Nbtn, Wbtn)
											      in  let <_cor29> =
												      %% Line 236
												      call 'erlang':'-'
													  (Nbtn, 1)
												  in  let <_cor30> =
													  %% Line 236
													  call 'erlang':'*'
													      (_cor29, 10)
												      in  let <_cor32> =
													      %% Line 236
													      call 'erlang':'+'
														  (_cor31, _cor30)
													  in  let <_cor33> =
														  %% Line 236
														  call 'erlang':'max'
														      (_cor32, 130)
													      in  let <Wlbl> =
														      %% Line 236
														      call 'erlang':'max'
															  (Wlbl0, _cor33)
														  in  let <Hlbl> =
															  %% Line 237
															  call 'erlang':'max'
															      (Hlbl0, 30)
														      in  let <_cor36> =
															      %% Line 239
															      call 'erlang':'+'
																  (10, Wlbl)
															  in  let <Wwin> =
																  %% Line 239
																  call 'erlang':'+'
																      (_cor36, 10)
															      in  let <Htop> =
																      %% Line 241
																      call 'erlang':'+'
																	  (10, Hlbl)
																  in  let <_cor39> =
																	  %% Line 242
																	  case <> of
																	    <>
																		when call 'erlang':'=:='
																		      (_cor2,
																		       'request') ->
																		call 'erlang':'+'
																		    (10, Hent)
																	    <> when 'true' ->
																		0
																	  end
																      in  let <_cor41> =
																	      %% Line 243
																	      call 'erlang':'+'
																		  (10, Hbtn)
																	  in  let <Hbot> =
																		  %% Line 243
																		  call 'erlang':'+'
																		      (_cor41, 10)
																	      in  let <_cor43> =
																		      %% Line 244
																		      call 'erlang':'+'
																			  (Htop, _cor39)
																		  in  let <Hwin> =
																			  %% Line 244
																			  call 'erlang':'+'
																			      (_cor43, Hbot)
																		      in  let <_cor45> =
																			      catch
																				  %% Line 246
																				  apply 'get_coords'/3
																				      (_cor1, Wwin, Hwin)
																			  in  do  %% Line 246
																				  case _cor45 of
																				    %% Line 247
																				    <{Xw,Yw}>
																					when let <_cor46> =
																					      call 'erlang':'is_integer'
																						  (Xw)
																					  in  let <_cor47> =
																						  call 'erlang':'is_integer'
																						      (Yw)
																					      in  call 'erlang':'and'
																						      (_cor46, _cor47) ->
																					%% Line 248
																					call 'gs':'config'
																					    (Win, [{'x',Xw}|[{'y',Yw}|[]]])
																				    %% Line 249
																				    <_cor69> when 'true' ->
																					'ok'
																				  end
																				  do  %% Line 253
																				      call 'gs':'config'
																					  (Win, [{'width',Wwin}|[{'height',Hwin}|[]]])
																				      do  %% Line 255
																					  call 'gs':'config'
																					      (Top, [{'x',0}|[{'y',0}|[{'width',Wwin}|[{'height',Htop}|[]]]]])
																					  do  %% Line 256
																					      call 'gs':'config'
																						  (Lbl, [{'x',10}|[{'y',10}|[{'width',Wlbl}|[{'height',Hlbl}|[]]]]])
																					      do  %% Line 258
																						  call 'gs':'config'
																						      (_cor11, [{'x',0}|[{'y',Htop}|[{'width',Wwin}|[{'height',_cor39}|[]]]]])
																						  do  %% Line 259
																						      call 'gs':'config'
																							  (_cor15, [{'x',10}|[{'y',10}|[{'width',Wlbl}|[{'height',Hent}|[]]]]])
																						      let <_cor49> =
																							  %% Line 261
																							  call 'erlang':'+'
																							      (Htop, _cor39)
																						      in  do  %% Line 261
																							      call 'gs':'config'
																								  (Bot, [{'x',0}|[{'y',_cor49}|[{'width',Wwin}|[{'height',Hbot}|[]]]]])
																							      do  %% Line 264
																								  call 'gs':'config'
																								      (Lbl, {'label',{'text',Text}})
																								  let <Xbtns> =
																								      %% Line 267
																								      apply 'xbuttons'/4
																									  (Buttons, Wbtn, Wwin, Wlbl)
																								  in  let <_cor58> =
																									  %% Line 269
																									  ( fun (_cor56) ->
																										case _cor56 of
																										  <{Btext,BX}> when 'true' ->
																										      let <_cor51> =
																											  %% Line 270
																											  call 'erlang':'-'
																											      (BX, 1)
																										      in  let <_cor53> =
																											      %% Line 271
																											      call 'erlang':'+'
																												  (Wbtn, 2)
																											  in  let <_cor54> =
																												  %% Line 272
																												  call 'erlang':'+'
																												      (Hbtn, 2)
																											      in  let <_cor55> =
																												      %% Line 274
																												      apply 'data'/1
																													  (Btext)
																												  in  %% Line 270
																												      call 'gs':'create'
																													  ('button', Bot, [{'x',_cor51}|[{'y',9}|%% Line 271
																																		 [{'width',_cor53}|%% Line 272
																																				   [{'height',_cor54}|%% Line 273
																																						      [{'label',{'text',Btext}}|%% Line 274
																																										[{'data',_cor55}|[{'font',{'screen',12}}|[{'keypress','true'}]]]]]]]])
																										  ( <_cor57> when 'true' ->
																											( primop 'match_fail'
																											      ({'function_clause',_cor57})
																											  -| [{'function_name',{'-help_win/3-fun-0-',1}}] )
																										    -| ['compiler_generated'] )
																										end
																									    -| [{'id',{0,0,'-help_win/3-fun-0-'}}] )
																								      in  let <BtnObjs> =
																									      %% Line 269
																									      call 'lists':'map'
																										  (_cor58, %% Line 277
																											   Xbtns)
																									  in  let <Highlighted> =
																										  %% Line 278
																										  apply 'highlight'/3
																										      ('undef', 1, BtnObjs)
																									      in  do  %% Line 280
																										      call 'gs':'config'
																											  (Win, [{'map','true'}])
																										      let <_cor61> =
																											  %% Line 282
																											  case <> of
																											    %% Line 283
																											    <>
																												when call 'erlang':'=:='
																												      (_cor2,
																												       'request') ->
																												%% Line 284
																												{'state','undefined','undefined','undefined',1,'false','undefined','undefined'}
																											    %% Line 285
																											    <> when 'true' ->
																												%% Line 286
																												{'state','undefined','undefined','undefined','undefined','undefined','undefined','undefined'}
																											  end
																										      in  %% Line 289
																											  case _cor61 of
																											    <{'state',_rec1,_rec2,_rec3,_rec4,_rec5,_rec6,_rec7}> when 'true' ->
																												let <_cor65> =
																												    {'state',_cor2,Win,_cor15,_rec4,_rec5,BtnObjs,Highlighted}
																												in  apply 'event_loop'/1
																													(_cor65)
																											    ( <_cor70> when 'true' ->
																												  ( call ( 'erlang'
																													   -| ['compiler_generated'] ):( 'error'
																																	 -| ['compiler_generated'] )
																													(( {'badrecord','state'}
																													   -| ['compiler_generated'] ))
																												    -| ['compiler_generated'] )
																											      -| ['compiler_generated'] )
																											  end
								  ( <_cor22> when 'true' ->
									primop 'match_fail'
									    ({'badmatch',_cor22})
								    -| ['compiler_generated'] )
								end
							    ( <_cor21> when 'true' ->
								  primop 'match_fail'
								      ({'badmatch',_cor21})
							      -| ['compiler_generated'] )
							  end
						      ( <_cor20> when 'true' ->
							    primop 'match_fail'
								({'badmatch',_cor20})
							-| ['compiler_generated'] )
						    end
'title'/1 =
    %% Line 291
    fun (_cor0) ->
	case _cor0 of
	  <'notify'> when 'true' ->
	      [78|[111|[116|[105|[102|[105|[99|[97|[116|[105|[111|[110]]]]]]]]]]]]
	  %% Line 292
	  <'confirm'> when 'true' ->
	      [67|[111|[110|[102|[105|[114|[109|[97|[116|[105|[111|[110]]]]]]]]]]]]
	  %% Line 293
	  <'confirm_yesno'> when 'true' ->
	      [67|[111|[110|[102|[105|[114|[109|[97|[116|[105|[111|[110]]]]]]]]]]]]
	  %% Line 294
	  <'request'> when 'true' ->
	      [82|[101|[113|[117|[101|[115|[116]]]]]]]
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'title',1}}] )
	    -| ['compiler_generated'] )
	end
'buttons'/1 =
    %% Line 296
    fun (_cor0) ->
	case _cor0 of
	  <'notify'> when 'true' ->
	      [[79|[107]]]
	  %% Line 297
	  <'confirm'> when 'true' ->
	      [[79|[107]]|[[67|[97|[110|[99|[101|[108]]]]]]]]
	  %% Line 298
	  <'confirm_yesno'> when 'true' ->
	      [[89|[101|[115]]]|[[78|[111]]|[[67|[97|[110|[99|[101|[108]]]]]]]]]
	  %% Line 299
	  <'request'> when 'true' ->
	      [[79|[107]]|[[67|[97|[110|[99|[101|[108]]]]]]]]
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'buttons',1}}] )
	    -| ['compiler_generated'] )
	end
'data'/1 =
    %% Line 301
    fun (_cor0) ->
	case _cor0 of
	  <[79|[107]]> when 'true' ->
	      {'helpwin','ok'}
	  %% Line 302
	  <[89|[101|[115]]]> when 'true' ->
	      {'helpwin','yes'}
	  %% Line 303
	  <[78|[111]]> when 'true' ->
	      {'helpwin','no'}
	  %% Line 304
	  <[67|[97|[110|[99|[101|[108]]]]]]> when 'true' ->
	      {'helpwin','cancel'}
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'data',1}}] )
	    -| ['compiler_generated'] )
	end
'get_coords'/3 =
    %% Line 306
    fun (_cor2,_cor1,_cor0) ->
	%% Line 307
	case call 'gs':'read'
		 (_cor2, 'x') of
	  %% Line 308
	  <X>
	      when call 'erlang':'is_integer'
		    (X) ->
	      %% Line 309
	      case call 'gs':'read'
		       (_cor2, 'y') of
		%% Line 310
		<Y>
		    when call 'erlang':'is_integer'
			  (Y) ->
		    %% Line 311
		    case call 'gs':'read'
			     (_cor2, 'width') of
		      %% Line 312
		      <W0>
			  when call 'erlang':'is_integer'
				(W0) ->
			  %% Line 313
			  case call 'gs':'read'
				   (_cor2, 'height') of
			    %% Line 314
			    <H0>
				when call 'erlang':'is_integer'
				      (H0) ->
				let <_cor9> =
				    %% Line 315
				    call 'erlang':'/'
					(W0, 2)
				in  let <_cor10> =
					%% Line 315
					call 'erlang':'+'
					    (X, _cor9)
				    in  let <_cor8> =
					    %% Line 315
					    call 'erlang':'/'
						(_cor1, 2)
					in  let <_cor11> =
						%% Line 315
						call 'erlang':'-'
						    (_cor10, _cor8)
					    in  let <_cor12> =
						    %% Line 315
						    call 'erlang':'round'
							(_cor11)
						in  let <_cor4> =
							%% Line 316
							call 'erlang':'/'
							    (H0, 2)
						    in  let <_cor5> =
							    %% Line 316
							    call 'erlang':'+'
								(Y, _cor4)
							in  let <_cor3> =
								%% Line 316
								call 'erlang':'/'
								    (_cor0, 2)
							    in  let <_cor6> =
								    %% Line 316
								    call 'erlang':'-'
									(_cor5, _cor3)
								in  let <_cor7> =
									%% Line 316
									call 'erlang':'round'
									    (_cor6)
								    in  %% Line 315
									{_cor12,_cor7}
			    %% Line 317
			    <_cor20> when 'true' ->
				'error'
			  end
		      %% Line 319
		      <_cor21> when 'true' ->
			  'error'
		    end
		%% Line 321
		<_cor22> when 'true' ->
		    'error'
	      end
	  %% Line 323
	  <_cor23> when 'true' ->
	      'error'
	end
'xbuttons'/4 =
    %% Line 326
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[B|[]],Wbtn,Wwin,_X_Wlbl> when 'true' ->
	      let <_cor5> =
		  %% Line 327
		  call 'erlang':'/'
		      (Wwin, 2)
	      in  let <_cor4> =
		      %% Line 327
		      call 'erlang':'/'
			  (Wbtn, 2)
		  in  let <_cor6> =
			  %% Line 327
			  call 'erlang':'-'
			      (_cor5, _cor4)
		      in  let <_cor7> =
			      %% Line 327
			      call 'erlang':'round'
				  (_cor6)
			  in  %% Line 327
			      [{B,_cor7}|[]]
	  %% Line 328
	  <[B1|[B2|[]]],Wbtn,Wwin,Wlbl> when 'true' ->
	      let <_cor8> =
		  %% Line 329
		  call 'erlang':'-'
		      (Wwin, Wlbl)
	      in  let <Margin> =
		      %% Line 329
		      call 'erlang':'/'
			  (_cor8, 2)
		  in  let <_cor10> =
			  %% Line 330
			  call 'erlang':'round'
			      (Margin)
		      in  let <_cor11> =
			      %% Line 330
			      call 'erlang':'-'
				  (Wwin, Margin)
			  in  let <_cor12> =
				  %% Line 330
				  call 'erlang':'-'
				      (_cor11, Wbtn)
			      in  let <_cor13> =
				      %% Line 330
				      call 'erlang':'round'
					  (_cor12)
				  in  %% Line 330
				      [{B1,_cor10}|[{B2,_cor13}|[]]]
	  %% Line 331
	  <[B1|[B2|[B3|[]]]],Wbtn,Wwin,Wlbl> when 'true' ->
	      let <_cor14> =
		  %% Line 332
		  call 'erlang':'-'
		      (Wwin, Wlbl)
	      in  let <Margin> =
		      %% Line 332
		      call 'erlang':'/'
			  (_cor14, 2)
		  in  let <_cor16> =
			  %% Line 333
			  call 'erlang':'round'
			      (Margin)
		      in  let <_cor18> =
			      %% Line 334
			      call 'erlang':'/'
				  (Wwin, 2)
			  in  let <_cor17> =
				  %% Line 334
				  call 'erlang':'/'
				      (Wbtn, 2)
			      in  let <_cor19> =
				      %% Line 334
				      call 'erlang':'-'
					  (_cor18, _cor17)
				  in  let <_cor20> =
					  %% Line 334
					  call 'erlang':'round'
					      (_cor19)
				      in  let <_cor21> =
					      %% Line 335
					      call 'erlang':'-'
						  (Wwin, Margin)
					  in  let <_cor22> =
						  %% Line 335
						  call 'erlang':'-'
						      (_cor21, Wbtn)
					      in  let <_cor23> =
						      %% Line 335
						      call 'erlang':'round'
							  (_cor22)
						  in  %% Line 333
						      [{B1,_cor16}|%% Line 334
								   [{B2,_cor20}|%% Line 335
										[{B3,_cor23}|[]]]]
	  ( <_cor27,_cor26,_cor25,_cor24> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor27,_cor26,_cor25,_cor24})
		  -| [{'function_name',{'xbuttons',4}}] )
	    -| ['compiler_generated'] )
	end
'highlight'/3 =
    %% Line 337
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Prev,New,BtnObjs>
	      when try
		    let <_cor3> =
			call 'erlang':'>'
			    (New, 0)
		    in  let <_cor4> =
			    call 'erlang':'length'
				(BtnObjs)
			in  let <_cor5> =
				call 'erlang':'=<'
				    (New, _cor4)
			    in  call 'erlang':'and'
				    (_cor3, _cor5)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 338
		  case <> of
		    %% Line 339
		    <>
			when call 'erlang':'=:='
			      (Prev,
			       'undef') ->
			'ok'
		    %% Line 340
		    <> when 'true' ->
			let <_cor6> =
			    %% Line 341
			    call 'lists':'nth'
				(Prev, BtnObjs)
			in  %% Line 341
			    call 'gs':'config'
				(_cor6, [{'highlightbw',0}])
		  end
		  let <_cor7> =
		      %% Line 343
		      call 'lists':'nth'
			  (New, BtnObjs)
		  in  do  %% Line 343
			  call 'gs':'config'
			      (_cor7, [{'highlightbw',1}|[{'highlightbg','black'}]])
			  %% Line 345
			  New
	  %% Line 346
	  <Prev,_X_New,_X_BtnObjs> when 'true' ->
	      %% Line 347
	      Prev
	end
'event_loop'/1 =
    %% Line 349
    fun (_cor0) ->
	%% Line 350
	receive
	  %% Line 351
	  <GsEvent>
	      when try
		    let <_cor1> =
			call 'erlang':'element'
			    (1, GsEvent)
		    in  call 'erlang':'=:='
			    (_cor1, 'gs')
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 352
	      case apply 'handle_event'/2
		       (GsEvent, _cor0) of
		%% Line 353
		<{'continue',NewState}> when 'true' ->
		    %% Line 354
		    apply 'event_loop'/1
			(NewState)
		%% Line 356
		<{'return',Result}> when 'true' ->
		    %% Line 357
		    ( case _cor0 of
			( <( {'state',_cor6,_rec8,_cor7,_cor8,_cor9,_cor10,_cor11}
			     -| ['compiler_generated'] )> when 'true' ->
			      do  call 'gs':'destroy'
				      (_rec8)
				  %% Line 358
				  Result
			  -| ['compiler_generated'] )
			( <_cor12> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor4})
		  -| ['compiler_generated'] )
	      end
	after 'infinity' ->
	  'true'
'handle_event'/2 =
    %% Line 362
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'gs',_cor94,'click',{'helpwin',Result},_cor95},State> when 'true' ->
	      %% Line 363
	      case <> of
		%% Line 364
		<>
		    when let <_cor8> =
			  ( try
				( case <> of
				    ( <>
					  when ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'is_record'
										   -| ['compiler_generated'] )
						  (State,
						   ( 'state'
						     -| ['compiler_generated'] ),
						   ( 8
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] ) ->
					  let <_cor6> =
					      ( call 'erlang':'element'
						    (2, State)
						-| ['compiler_generated'] )
					  in  ( call 'erlang':'=/='
						    (_cor6, 'request')
						-| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				    ( <> when 'true' ->
					  'false'
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    of <Try> ->
				Try
			    catch <T,R> ->
				'false'
			    -| ['compiler_generated'] )
		      in  let <_cor9> =
			      call 'erlang':'=:='
				  (Result, 'cancel')
			  in  ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'or'
								     -| ['compiler_generated'] )
				    (_cor8, _cor9)
				-| ['compiler_generated'] ) ->
		    %% Line 365
		    {'return',Result}
		%% Line 367
		<>
		    when ( try
			    ( case <> of
				( <>
				      when ( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'is_record'
									       -| ['compiler_generated'] )
					      (State,
					       ( 'state'
						 -| ['compiler_generated'] ),
					       ( 8
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] ) ->
				      let <_cor14> =
					  ( call 'erlang':'element'
						(2, State)
					    -| ['compiler_generated'] )
				      in  let <_cor15> =
					      ( call 'erlang':'=:='
						    (_cor14, 'request')
						-| ['compiler_generated'] )
					  in  let <_cor17> =
						  ( call 'erlang':'=:='
							(Result, 'ok')
						    -| ['compiler_generated'] )
					      in  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'and'
											 -| ['compiler_generated'] )
							(_cor15, _cor17)
						    -| ['compiler_generated'] )
				  -| ['compiler_generated'] )
				( <> when 'true' ->
				      'false'
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    %% Line 368
		    ( case State of
			( <( {'state',_cor96,_cor97,_rec9,_cor98,_cor99,_cor100,_cor101}
			     -| ['compiler_generated'] )> when 'true' ->
			      case call 'gs':'read'
				       (_rec9, 'text') of
				%% Line 369
				<[]> when 'true' ->
				    %% Line 370
				    {'continue',State}
				%% Line 371
				<Info> when 'true' ->
				    %% Line 372
				    {'return',{'ok',Info}}
			      end
			  -| ['compiler_generated'] )
			( <_cor102> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <> when 'true' ->
		      primop 'match_fail'
			  ('if_clause')
		  -| ['compiler_generated'] )
	      end
	  %% Line 379
	  <{'gs',Ent,'enter',_cor103,_cor104},State = {'state',_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111}>
	      when call 'erlang':'=:='
		    (_cor107,
		     Ent) ->
	      let <_cor23> =
		  %% Line 380
		  call 'erlang':'setelement'
		      (6, State, 'true')
	      in  %% Line 380
		  {'continue',_cor23}
	  %% Line 381
	  <{'gs',Ent,'leave',_cor120,_cor121},State = {'state',_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128}>
	      when call 'erlang':'=:='
		    (_cor124,
		     Ent) ->
	      let <_cor26> =
		  %% Line 382
		  call 'erlang':'setelement'
		      (6, State, 'false')
	      in  %% Line 382
		  {'continue',_cor26}
	  %% Line 383
	  <{'gs',Ent,'focus',_cor137,[Int|_cor138]},State = {'state',_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145}>
	      when call 'erlang':'=:='
		    (_cor141,
		     Ent) ->
	      let <_cor29> =
		  %% Line 384
		  call 'erlang':'setelement'
		      (5, State, Int)
	      in  %% Line 384
		  {'continue',_cor29}
	  %% Line 386
	  <{'gs',Win,'keypress',_cor154,['Right'|_cor155]},State = {'state',_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162}>
	      when call 'erlang':'=:='
		    (_cor157,
		     Win) ->
	      %% Line 387
	      case <> of
		%% Line 388
		<>
		    when ( try
			    let <_cor35> =
				call 'erlang':'=:='
				    (_cor156, 'request')
			    in  let <_cor38> =
				    %% Line 389
				    call 'erlang':'=='
					(_cor159, 1)
				in  let <_cor40> =
					%% Line 389
					call 'erlang':'=:='
					    (_cor160, 'true')
				    in  let <_cor41> =
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'and'
										   -| ['compiler_generated'] )
						  (_cor38, _cor40)
					      -| ['compiler_generated'] )
					in  ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'and'
										   -| ['compiler_generated'] )
						  (_cor35, _cor41)
					      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    %% Line 390
		    {'continue',State}
		%% Line 391
		<> when 'true' ->
		    let <_cor47> =
			%% Line 393
			call 'erlang':'+'
			    (_cor162, 1)
		    in  let <New> =
			    %% Line 393
			    apply 'highlight'/3
				(_cor162, _cor47, _cor161)
			in  let <_cor51> =
				%% Line 394
				call 'erlang':'setelement'
				    (8, State, New)
			    in  %% Line 394
				{'continue',_cor51}
	      end
	  %% Line 396
	  <{'gs',Win,'keypress',_cor185,['Left'|_cor186]},State = {'state',_cor187,_cor188,_cor189,_cor190,_cor191,_cor192,_cor193}>
	      when call 'erlang':'=:='
		    (_cor188,
		     Win) ->
	      %% Line 397
	      case <> of
		%% Line 398
		<>
		    when ( try
			    let <_cor57> =
				call 'erlang':'=:='
				    (_cor187, 'request')
			    in  let <_cor60> =
				    %% Line 399
				    call 'erlang':'=='
					(_cor190, 1)
				in  let <_cor62> =
					%% Line 399
					call 'erlang':'=:='
					    (_cor191, 'true')
				    in  let <_cor63> =
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'and'
										   -| ['compiler_generated'] )
						  (_cor60, _cor62)
					      -| ['compiler_generated'] )
					in  ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'and'
										   -| ['compiler_generated'] )
						  (_cor57, _cor63)
					      -| ['compiler_generated'] )
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
			-| ['compiler_generated'] ) ->
		    %% Line 400
		    {'continue',State}
		%% Line 401
		<> when 'true' ->
		    let <_cor69> =
			%% Line 403
			call 'erlang':'-'
			    (_cor193, 1)
		    in  let <New> =
			    %% Line 403
			    apply 'highlight'/3
				(_cor193, _cor69, _cor192)
			in  let <_cor73> =
				%% Line 404
				call 'erlang':'setelement'
				    (8, State, New)
			    in  %% Line 404
				{'continue',_cor73}
	      end
	  %% Line 407
	  <{'gs',Ent,'keypress',_cor216,['Tab'|_cor217]},State = {'state',_cor218,_cor219,_cor220,_cor221,_cor222,_cor223,_cor224}>
	      when call 'erlang':'=:='
		    (_cor220,
		     Ent) ->
	      let <_cor76> =
		  %% Line 408
		  call 'erlang':'hd'
		      (_cor223)
	      in  do  %% Line 408
		      call 'gs':'config'
			  (_cor76, {'setfocus','true'})
		      do  %% Line 409
			  call 'gs':'config'
			      (Ent, {'select','clear'})
			  let <_cor79> =
			      %% Line 410
			      call 'erlang':'setelement'
				  (5, State, 0)
			  in  %% Line 410
			      {'continue',_cor79}
	  %% Line 412
	  <{'gs',Win,'keypress',_cor240,['Return'|_cor241]},State = {'state',_cor242,_cor243,_cor244,_cor245,_cor246,_cor247,_cor248}>
	      when call 'erlang':'=:='
		    (_cor243,
		     Win) ->
	      let <Selected> =
		  %% Line 413
		  call 'lists':'nth'
		      (_cor248, _cor247)
	      in  let <Data> =
		      %% Line 414
		      call 'gs':'read'
			  (Selected, 'data')
		  in  %% Line 415
		      apply 'handle_event'/2
			  ({'gs',Win,'click',Data,'undef'}, State)
	  %% Line 417
	  <{'gs',Win,'destroy',_cor263,_cor264},State = {'state',_cor265,_cor266,_cor267,_cor268,_cor269,_cor270,_cor271}>
	      when call 'erlang':'=:='
		    (_cor266,
		     Win) ->
	      %% Line 418
	      case <> of
		%% Line 419
		<>
		    when call 'erlang':'=:='
			  (_cor265,
			   'notify') ->
		    {'return','ok'}
		%% Line 420
		<> when 'true' ->
		    {'return','cancel'}
	      end
	  %% Line 424
	  <{'gs',_X_Obj,_X_Event,_X_Data,_X_Arg},State> when 'true' ->
	      %% Line 425
	      {'continue',State}
	  ( <_cor93,_cor92> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor93,_cor92})
		  -| [{'function_name',{'handle_event',2}}] )
	    -| ['compiler_generated'] )
	end
'insert_newlines'/1 =
    %% Line 432
    fun (_cor0) ->
	case _cor0 of
	  <[String|Rest]>
	      when let <_cor1> =
		    call 'erlang':'is_list'
			(String)
		in  let <_cor2> =
			call 'erlang':'=/='
			    (Rest, [])
		    in  call 'erlang':'and'
			    (_cor1, _cor2) ->
	      let <_cor3> =
		  %% Line 433
		  apply 'insert_newlines'/1
		      (Rest)
	      in  let <_cor4> =
		      %% Line 433
		      [10|_cor3]
		  in  %% Line 433
		      call 'erlang':'++'
			  (String, _cor4)
	  %% Line 434
	  <[Last|[]]> when 'true' ->
	      %% Line 435
	      [Last|[]]
	  %% Line 436
	  <Other> when 'true' ->
	      %% Line 437
	      Other
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('tool_utils')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('tool_utils', _cor0)
end