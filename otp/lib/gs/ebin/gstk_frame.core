module 'gstk_frame' ['config'/3,
		     'create'/3,
		     'delete'/2,
		     'event'/5,
		     'mk_create_opts_for_child'/4,
		     'module_info'/0,
		     'module_info'/1,
		     'option'/5,
		     'read'/3,
		     'read_option'/5]
    attributes []
'create'/3 =
    %% Line 79
    fun (_cor2,_cor1,_cor0) ->
	let <TkW> =
	    %% Line 80
	    call 'gstk_generic':'mk_tkw_child'
		(_cor2, _cor1)
	in  %% Line 81
	    case _cor1 of
	      <{'gstkid',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18}> when 'true' ->
		  let <_cor6> =
		      call 'erlang':'setelement'
			  (3, _cor1, TkW)
		  in  let <PlacePreCmd> =
			  %% Line 82
			  [[59|[112|[108|[97|[99|[101|[32]]]]]]]|[TkW|[]]]
		      in  %% Line 83
			  case call 'gstk_generic':'make_command'
				   (_cor0, _cor6, TkW, [], PlacePreCmd, _cor2) of
			    %% Line 84
			    <{'error',Reason}> when 'true' ->
				{'error',Reason}
			    %% Line 85
			    <Cmd>
				when call 'erlang':'is_list'
				      (Cmd) ->
				do  %% Line 86
				    call 'gstk':'exec'
					([[102|[114|[97|[109|[101|[32]]]]]]|[TkW|%% Line 87
										 [[32|[45|[114|[101|[108|[105|[101|[102|[32|[114|[97|[105|[115|[101|[100|[32|[45|[98|[111|[32|[48]]]]]]]]]]]]]]]]]]]]]|[Cmd|[]]]]])
				    _cor6
			    ( <_cor9> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor9})
			      -| ['compiler_generated'] )
			  end
	      ( <_cor19> when 'true' ->
		    ( call ( 'erlang'
			     -| ['compiler_generated'] ):( 'error'
							   -| ['compiler_generated'] )
			  (( {'badrecord','gstkid'}
			     -| ['compiler_generated'] ))
		      -| ['compiler_generated'] )
		-| ['compiler_generated'] )
	    end
'mk_create_opts_for_child'/4 =
    %% Line 91
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 92
	call 'gstk_generic':'mk_create_opts_for_child'
	    (_cor3, _cor2, _cor1, _cor0)
'config'/3 =
    %% Line 103
    fun (_cor2,_cor1,_cor0) ->
	%% Line 104
	( case _cor1 of
	    ( <( {'gstkid',_cor12,_rec1,_cor13,_cor14,_cor15,_cor16}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <SimplePreCmd> =
		      %% Line 105
		      [_rec1|[[32|[99|[111|[110|[102]]]]]]]
		  in  let <PlacePreCmd> =
			  %% Line 106
			  [[59|[112|[108|[97|[99|[101|[32]]]]]]]|[_rec1|[]]]
		      in  let <Opts2> =
			      %% Line 107
			      apply 'atomic_width_height'/3
				  ('false', 'false', _cor0)
			  in  %% Line 108
			      call 'gstk_generic':'mk_cmd_and_exec'
				  (Opts2, _cor1, _rec1, SimplePreCmd, PlacePreCmd, _cor2)
	      -| ['compiler_generated'] )
	    ( <_cor17> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','gstkid'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'atomic_width_height'/3 =
    %% Line 110
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'false','false',[]> when 'true' ->
	      %% Line 111
	      []
	  %% Line 112
	  <'false',Width,[]> when 'true' ->
	      %% Line 113
	      [{'width',Width}|[]]
	  %% Line 114
	  <Height,'false',[]> when 'true' ->
	      %% Line 115
	      [{'height',Height}|[]]
	  %% Line 116
	  <H,W,[]> when 'true' ->
	      %% Line 117
	      [{'width_height',{W,H}}|[]]
	  %% Line 118
	  <_cor7,W,[{'height',H}|Opts]> when 'true' ->
	      %% Line 119
	      apply 'atomic_width_height'/3
		  (H, W, Opts)
	  %% Line 120
	  <H,_cor8,[{'width',W}|Opts]> when 'true' ->
	      %% Line 121
	      apply 'atomic_width_height'/3
		  (H, W, Opts)
	  %% Line 122
	  <H,W,[Opt|Opts]> when 'true' ->
	      let <_cor3> =
		  %% Line 123
		  apply 'atomic_width_height'/3
		      (H, W, Opts)
	      in  %% Line 123
		  [Opt|_cor3]
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'atomic_width_height',3}}] )
	    -| ['compiler_generated'] )
	end
'read'/3 =
    %% Line 134
    fun (_cor2,_cor1,_cor0) ->
	%% Line 135
	call 'gstk_generic':'read_option'
	    (_cor2, _cor1, _cor0)
'delete'/2 =
    %% Line 146
    fun (_cor1,_cor0) ->
	do  %% Line 147
	    call 'gstk_db':'delete_widget'
		(_cor1, _cor0)
	    %% Line 148
	    ( case _cor0 of
		( <( {'gstkid',_cor5,_rec2,_cor6,_cor7,_cor8,_cor9}
		     -| ['compiler_generated'] )> when 'true' ->
		      _rec2
		  -| ['compiler_generated'] )
		( <_cor10> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','gstkid'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'event'/5 =
    %% Line 150
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 151
	call 'gstk_generic':'event'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'option'/5 =
    %% Line 167
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 168
	case _cor4 of
	  %% Line 169
	  <{'bg',Color}> when 'true' ->
	      let <_cor5> =
		  call 'gstk':'to_color'
		      (Color)
	      in  {'s',[[32|[45|[98|[103|[32]]]]]|[_cor5|[]]]}
	  %% Line 170
	  <{'packer_x',_X_Pack}> when 'true' ->
	      do  %% Line 171
		  call 'gstk_db':'insert_opt'
		      (_cor1, _cor3, _cor4)
		  %% Line 172
		  'none'
	  %% Line 173
	  <{'packer_y',_X_Pack}> when 'true' ->
	      do  %% Line 174
		  call 'gstk_db':'insert_opt'
		      (_cor1, _cor3, _cor4)
		  %% Line 175
		  'none'
	  %% Line 176
	  <{'width',W}> when 'true' ->
	      let <_cor6> =
		  %% Line 177
		  apply 'xpack'/3
		      (W, _cor1, _cor3)
	      in  do  %% Line 177
		      apply 'execute_pack_cmds'/2
			  (_cor1, _cor6)
		      let <_cor7> =
			  %% Line 178
			  call 'gstk':'to_ascii'
			      (W)
		      in  %% Line 178
			  {'s',[[32|[45|[119|[105|[32]]]]]|[_cor7|[]]]}
	  %% Line 179
	  <{'height',H}> when 'true' ->
	      let <_cor8> =
		  %% Line 180
		  apply 'ypack'/3
		      (H, _cor1, _cor3)
	      in  do  %% Line 180
		      apply 'execute_pack_cmds'/2
			  (_cor1, _cor8)
		      let <_cor9> =
			  %% Line 181
			  call 'gstk':'to_ascii'
			      (H)
		      in  %% Line 181
			  {'s',[[32|[45|[104|[101|[32]]]]]|[_cor9|[]]]}
	  %% Line 182
	  <{'width_height',{W,H}}> when 'true' ->
	      let <_cor11> =
		  %% Line 183
		  apply 'xpack'/3
		      (W, _cor1, _cor3)
	      in  let <_cor10> =
		      %% Line 184
		      apply 'ypack'/3
			  (H, _cor1, _cor3)
		  in  let <_cor12> =
			  %% Line 183
			  apply 'merge_pack_cmds'/2
			      (_cor11, _cor10)
		      in  do  %% Line 183
			      apply 'execute_pack_cmds'/2
				  (_cor1, _cor12)
			      let <_cor13> =
				  %% Line 185
				  call 'gstk':'to_ascii'
				      (H)
			      in  let <_cor14> =
				      %% Line 185
				      call 'gstk':'to_ascii'
					  (W)
				  in  %% Line 185
				      {'s',[[32|[45|[104|[101|[32]]]]]|[_cor13|[[32|[45|[119|[105|[32]]]]]|[_cor14|[]]]]]}
	  %% Line 186
	  <_cor22> when 'true' ->
	      'invalid_option'
	end
'xpack'/3 =
    %% Line 189
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 190
	    call 'gstk_db':'insert_opt'
		(_cor1, _cor0, {'width',_cor2})
	    %% Line 191
	    case call 'gstk_db':'opt_or_not'
		     (_cor1, _cor0, 'packer_x') of
	      %% Line 192
	      <{'value',Pack}>
		  when call 'erlang':'is_list'
			(Pack) ->
		  let <ColSiz> =
		      %% Line 193
		      call 'gs_packer':'pack'
			  (_cor2, Pack)
		  in  %% Line 195
		      ( case _cor0 of
			  ( <( {'gstkid',_rec3,_cor11,_cor12,_cor13,_cor14,_cor15}
			       -| ['compiler_generated'] )> when 'true' ->
				let <_cor6> =
				    call 'gstk_db':'lookup_kids'
					(_cor1, _rec3)
				in  apply 'pack_children'/6
					('pack_x', 'x', 'width', _cor1, _cor6, %% Line 196
									       ColSiz)
			    -| ['compiler_generated'] )
			  ( <_cor16> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','gstkid'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	      %% Line 197
	      <_X_Else> when 'true' ->
		  []
	    end
'ypack'/3 =
    %% Line 200
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 201
	    call 'gstk_db':'insert_opt'
		(_cor1, _cor0, {'height',_cor2})
	    %% Line 202
	    case call 'gstk_db':'opt_or_not'
		     (_cor1, _cor0, 'packer_y') of
	      %% Line 203
	      <{'value',Pack}>
		  when call 'erlang':'is_list'
			(Pack) ->
		  let <ColSiz> =
		      %% Line 204
		      call 'gs_packer':'pack'
			  (_cor2, Pack)
		  in  %% Line 206
		      ( case _cor0 of
			  ( <( {'gstkid',_rec4,_cor11,_cor12,_cor13,_cor14,_cor15}
			       -| ['compiler_generated'] )> when 'true' ->
				let <_cor6> =
				    call 'gstk_db':'lookup_kids'
					(_cor1, _rec4)
				in  apply 'pack_children'/6
					('pack_y', 'y', 'height', _cor1, _cor6, %% Line 207
										ColSiz)
			    -| ['compiler_generated'] )
			  ( <_cor16> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','gstkid'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	      %% Line 208
	      <_X_Else> when 'true' ->
		  []
	    end
'merge_pack_cmds'/2 =
    %% Line 211
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{Id,Opts1}|Cmds1],[{_cor6,Opts2}|Cmds2]>
	      when call 'erlang':'=:='
		    (_cor6,
		     Id) ->
	      let <_cor2> =
		  %% Line 212
		  call 'erlang':'++'
		      (Opts1, Opts2)
	      in  let <_cor3> =
		      %% Line 212
		      apply 'merge_pack_cmds'/2
			  (Cmds1, Cmds2)
		  in  %% Line 212
		      [{Id,_cor2}|_cor3]
	  %% Line 213
	  <L1,L2> when 'true' ->
	      %% Line 214
	      call 'erlang':'++'
		  (L1, L2)
	end
'execute_pack_cmds'/2 =
    %% Line 216
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <DB,[{Id,Opts}|Cmds]> when 'true' ->
	      do  %% Line 217
		  call 'gstk':'config_impl'
		      (DB, Id, Opts)
		  %% Line 218
		  apply 'execute_pack_cmds'/2
		      (DB, Cmds)
	  %% Line 219
	  <_cor4,[]> when 'true' ->
	      %% Line 220
	      'ok'
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'execute_pack_cmds',2}}] )
	    -| ['compiler_generated'] )
	end
'pack_children'/6 =
    %% Line 225
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Schildren> =
	    %% Line 226
	    apply 'keep_packed'/3
		(_cor1, _cor5, _cor2)
	in  %% Line 227
	    apply 'pack_children2'/5
		(_cor5, _cor4, _cor3, Schildren, _cor0)
'pack_children2'/5 =
    %% Line 229
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <PackOpt,PosOpt,SizOpt,[{StartStop,Id}|Childs],Sizes> when 'true' ->
	      let <_cor5> =
		  %% Line 230
		  apply 'pack_child'/5
		      (Id, StartStop, SizOpt, PosOpt, Sizes)
	      in  let <_cor6> =
		      %% Line 231
		      apply 'pack_children2'/5
			  (PackOpt, PosOpt, SizOpt, Childs, Sizes)
		  in  %% Line 230
		      [_cor5|_cor6]
	  %% Line 232
	  <_cor12,_cor13,_cor14,[],_cor15> when 'true' ->
	      %% Line 233
	      []
	  ( <_cor11,_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'pack_children2',5}}] )
	    -| ['compiler_generated'] )
	end
'pack_child'/5 =
    %% Line 235
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Id,{StartPos,StopPos},SizOpt,PosOpt,Sizes> when 'true' ->
	      %% Line 236
	      case apply 'find_pos'/6
		       (StartPos, StopPos, 1, 0, 0, Sizes) of
		<{Pos,Size}> when 'true' ->
		    %% Line 237
		    {Id,[{PosOpt,Pos}|[{SizOpt,Size}|[]]]}
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor10,_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'pack_child',5}}] )
	    -| ['compiler_generated'] )
	end
'find_pos'/6 =
    %% Line 242
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_StartPos,Pos,_cor17,AccPixelPos,AccPixelSize,[Size|_cor18]>
	      when call 'erlang':'=:='
		    (_cor17,
		     Pos) ->
	      let <_cor6> =
		  %% Line 243
		  call 'erlang':'+'
		      (Size, AccPixelSize)
	      in  %% Line 243
		  {AccPixelPos,_cor6}
	  %% Line 244
	  <StartPos,StopPos,Pos,AccPixelPos,0,[Size|Sizes]>
	      when %% Line 245
		call 'erlang':'<'
		    (Pos,
		     StartPos) ->
	      let <_cor8> =
		  %% Line 246
		  call 'erlang':'+'
		      (Pos, 1)
	      in  let <_cor7> =
		      %% Line 246
		      call 'erlang':'+'
			  (Size, AccPixelPos)
		  in  %% Line 246
		      apply 'find_pos'/6
			  (StartPos, StopPos, _cor8, _cor7, 0, Sizes)
	  %% Line 247
	  <_X_StartPos,StopPos,Pos,AccPixelPos,AccPixelSize,[Size|Sizes]>
	      when %% Line 248
		call 'erlang':'<'
		    (Pos,
		     StopPos) ->
	      let <_cor10> =
		  %% Line 249
		  call 'erlang':'+'
		      (Pos, 1)
	      in  let <_cor9> =
		      %% Line 249
		      call 'erlang':'+'
			  (Size, AccPixelSize)
		  in  %% Line 249
		      apply 'find_pos'/6
			  (Pos, StopPos, _cor10, AccPixelPos, _cor9, Sizes)
	  ( <_cor16,_cor15,_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'find_pos',6}}] )
	    -| ['compiler_generated'] )
	end
'keep_packed'/3 =
    %% Line 253
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[Id|Ids],PackOpt,DB> when 'true' ->
	      %% Line 254
	      case call 'gstk':'read_impl'
		       (DB, Id, PackOpt) of
		%% Line 255
		<'undefined'> when 'true' ->
		    %% Line 256
		    apply 'keep_packed'/3
			(Ids, PackOpt, DB)
		%% Line 257
		<StartStop> when 'true' ->
		    let <_cor3> =
			%% Line 258
			apply 'keep_packed'/3
			    (Ids, PackOpt, DB)
		    in  %% Line 258
			[{StartStop,Id}|_cor3]
	      end
	  %% Line 260
	  <[],_cor8,_cor9> when 'true' ->
	      %% Line 261
	      []
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'keep_packed',3}}] )
	    -| ['compiler_generated'] )
	end
'read_option'/5 =
    %% Line 275
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 276
	case _cor4 of
	  %% Line 277
	  <'bg'> when 'true' ->
	      call 'tcl2erl':'ret_color'
		  ([_cor2|[[32|[99|[103|[32|[45|[98|[103]]]]]]]]])
	  %% Line 278
	  <_cor14> when 'true' ->
	      ( case _cor3 of
		  ( <( {'gstkid',_cor15,_cor16,_cor17,_cor18,_cor19,_rec5}
		       -| ['compiler_generated'] )> when 'true' ->
			{'bad_result',{_rec5,'invalid_option',_cor4}}
		    -| ['compiler_generated'] )
		  ( <_cor20> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','gstkid'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('gstk_frame')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('gstk_frame', _cor0)
end