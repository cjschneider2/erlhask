module 'gstk_canvas' ['config'/3,
		      'coords'/1,
		      'create'/3,
		      'delete'/2,
		      'event'/5,
		      'item_config'/3,
		      'item_delete_impl'/2,
		      'make_command'/5,
		      'make_command'/6,
		      'mk_cmd_and_call'/5,
		      'mk_cmd_and_exec'/6,
		      'mk_create_opts_for_child'/4,
		      'module_info'/0,
		      'module_info'/1,
		      'option'/5,
		      'pickout_coords'/4,
		      'read'/3,
		      'read_option'/5,
		      'upd_gstkid'/3]
    attributes []
'create'/3 =
    %% Line 97
    fun (_cor2,_cor1,_cor0) ->
	let <MainW> =
	    %% Line 98
	    call 'gstk_generic':'mk_tkw_child'
		(_cor2, _cor1)
	in  let <Canvas> =
		%% Line 99
		call 'lists':'append'
		    (MainW, [46|[122]])
	    in  %% Line 100
		case call 'gstk_generic':'parse_scrolls'
			 (_cor0) of
		  <{Vscroll,Hscroll,NewOpts}> when 'true' ->
		      let <WidgetD> =
			  %% Line 101
			  {'so',MainW,Canvas,%% Line 102
					     Hscroll,%% Line 102
						     Vscroll,'undefined'}
		      in  %% Line 103
			  case _cor1 of
			    <{'gstkid',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26}> when 'true' ->
				let <_cor8> =
				    call 'erlang':'setelement'
					(4, _cor1, WidgetD)
				in  let <_cor10> =
					call 'erlang':'setelement'
					    (3, _cor8, MainW)
				    in  let <MandatoryCmd> =
					    %% Line 104
					    [[115|[111|[95|[99|[114|[101|[97|[116|[101|[32|[99|[97|[110|[118|[97|[115|[32]]]]]]]]]]]]]]]]]|[MainW|[]]]
					in  %% Line 105
					    case call 'gstk':'call'
						     (MandatoryCmd) of
					      %% Line 106
					      <{'result',_cor28}> when 'true' ->
						  let <SimplePreCmd> =
						      %% Line 107
						      [MainW|[[32|[99|[111|[110|[102]]]]]]]
						  in  let <PlacePreCmd> =
							  %% Line 108
							  [[59|[112|[108|[97|[99|[101|[32]]]]]]]|[MainW|[]]]
						      in  let <_cor15> =
							      %% Line 109
							      call 'gs':'pair'
								  ('scrollregion', _cor0)
							  in  do  %% Line 109
								  call 'gstk_db':'insert_opt'
								      (_cor2, _cor1, _cor15)
								  %% Line 110
								  case call 'gstk_generic':'make_command'
									   (NewOpts, _cor10, MainW, %% Line 111
												    SimplePreCmd, %% Line 111
														  PlacePreCmd, _cor2, %% Line 111
																      Canvas) of
								    %% Line 112
								    <{'error',Reason}> when 'true' ->
									{'error',Reason}
								    %% Line 113
								    <Cmd>
									when call 'erlang':'is_list'
									      (Cmd) ->
									do  %% Line 114
									    call 'gstk':'exec'
										(Cmd)
									    do  %% Line 115
										call 'gstk':'exec'
										    ([MainW|[[46|[115|[121|[32|[99|[111|[110|[102|[32|[45|[114|[101|[108|[32|[115|[117|[110|[107|[101|[110|[32|[45|[98|[111|[32|[50|[59]]]]]]]]]]]]]]]]]]]]]]]]]]]|%% Line 116
																														   [MainW|[[46|[112|[97|[100|[46|[115|[120|[32|[99|[111|[110|[102|[32|[45|[114|[101|[108|[32|[115|[117|[110|[107|[101|[110|[32|[45|[98|[111|[32|[50|[59]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
										_cor10
								    ( <_cor16> when 'true' ->
									  primop 'match_fail'
									      ({'case_clause',_cor16})
								      -| ['compiler_generated'] )
								  end
					      %% Line 119
					      <Bad_Result> when 'true' ->
						  %% Line 120
						  {'bad_result',Bad_Result}
					    end
			    ( <_cor27> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','gstkid'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
		  ( <_cor5> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor5})
		    -| ['compiler_generated'] )
		end
'mk_create_opts_for_child'/4 =
    %% Line 123
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 124
	call 'gstk_generic':'mk_create_opts_for_child'
	    (_cor3, _cor2, _cor1, _cor0)
'config'/3 =
    %% Line 135
    fun (_cor2,_cor1,_cor0) ->
	%% Line 136
	( case _cor1 of
	    ( <( {'gstkid',_cor18,_cor19,_rec1,_cor20,_cor21,_cor22}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 138
		  ( case _rec1 of
		      ( <( {'so',_cor30,_rec3,_cor31,_cor32,_cor33}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <NewOpts> =
				%% Line 139
				call 'gstk_generic':'parse_scrolls'
				    (_cor1, _cor0)
			    in  let <SimplePreCmd> =
				    %% Line 140
				    [_cor19|[[32|[99|[111|[110|[102]]]]]]]
				in  let <PlacePreCmd> =
					%% Line 141
					[[59|[112|[108|[97|[99|[101|[32]]]]]]]|[_cor19|[]]]
				    in  %% Line 142
					call 'gstk_generic':'mk_cmd_and_exec'
					    (NewOpts, _cor1, _cor19, %% Line 143
								     SimplePreCmd, %% Line 143
										   PlacePreCmd, _cor2, _rec3)
			-| ['compiler_generated'] )
		      ( <_cor34> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','so'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor23> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','gstkid'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'read'/3 =
    %% Line 154
    fun (_cor2,_cor1,_cor0) ->
	%% Line 155
	( case _cor1 of
	    ( <( {'gstkid',_cor11,_cor12,_rec4,_cor13,_cor14,_cor15}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 156
		  ( case _rec4 of
		      ( <( {'so',_cor17,_rec5,_cor18,_cor19,_cor20}
			   -| ['compiler_generated'] )> when 'true' ->
			    call 'gstk_generic':'read_option'
				(_cor2, _cor1, _cor0, _rec5)
			-| ['compiler_generated'] )
		      ( <_cor21> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','so'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor16> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','gstkid'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'delete'/2 =
    %% Line 167
    fun (_cor1,_cor0) ->
	do  %% Line 168
	    call 'gstk_db':'delete_widget'
		(_cor1, _cor0)
	    %% Line 169
	    ( case _cor0 of
		( <( {'gstkid',_cor5,_rec6,_cor6,_cor7,_cor8,_cor9}
		     -| ['compiler_generated'] )> when 'true' ->
		      _rec6
		  -| ['compiler_generated'] )
		( <_cor10> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','gstkid'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'event'/5 =
    %% Line 171
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 172
	call 'gstk_generic':'event'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'option'/5 =
    %% Line 189
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 190
	case _cor4 of
	  %% Line 191
	  <{'scrollregion',{X1,Y1,X2,Y2}}> when 'true' ->
	      do  %% Line 192
		  call 'gstk_db':'insert_opt'
		      (_cor1, _cor3, _cor4)
		  let <_cor5> =
		      %% Line 194
		      call 'gstk':'to_ascii'
			  (X1)
		  in  let <_cor6> =
			  %% Line 194
			  call 'gstk':'to_ascii'
			      (Y1)
		      in  let <_cor7> =
			      %% Line 195
			      call 'gstk':'to_ascii'
				  (X2)
			  in  let <_cor8> =
				  %% Line 195
				  call 'gstk':'to_ascii'
				      (Y2)
			      in  %% Line 193
				  {'c',[_cor0|[[32|[99|[111|[110|[102|[32|[45|[115|[99|[114|[111|[108|[108|[114|[32|[123]]]]]]]]]]]]]]]]|%% Line 194
																	 [_cor5|[[32]|[_cor6|[[32]|%% Line 195
																				   [_cor7|[[32]|[_cor8|[[125]]]]]]]]]]]}
	  %% Line 196
	  <{'yscrollpos',Y}> when 'true' ->
	      %% Line 197
	      case call 'gstk_db':'opt'
		       (_cor1, _cor3, 'scrollregion') of
		<{_cor35,Ymin,_cor36,Ymax}> when 'true' ->
		    let <_cor10> =
			%% Line 198
			call 'erlang':'-'
			    (Ymax, Ymin)
		    in  let <K> =
			    %% Line 198
			    call 'erlang':'/'
				(1, _cor10)
			in  let <_cor12> =
				%% Line 199
				call 'erlang':'-'
				    (K)
			    in  let <M> =
				    %% Line 199
				    call 'erlang':'*'
					(_cor12, Ymin)
				in  let <_cor14> =
					%% Line 200
					call 'erlang':'*'
					    (K, Y)
				    in  let <PercentOffViewTop> =
					    %% Line 200
					    call 'erlang':'+'
						(_cor14, M)
					in  let <_cor16> =
						%% Line 201
						call 'gstk':'to_ascii'
						    (PercentOffViewTop)
					    in  %% Line 201
						{'c',[_cor0|[[32|[121|[118|[105|[32|[109|[111|[32]]]]]]]]|[_cor16|[]]]]}
		( <_cor9> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor9})
		  -| ['compiler_generated'] )
	      end
	  %% Line 202
	  <{'xscrollpos',X}> when 'true' ->
	      %% Line 203
	      case call 'gstk_db':'opt'
		       (_cor1, _cor3, 'scrollregion') of
		<{Xmin,_cor37,Xmax,_cor38}> when 'true' ->
		    let <_cor18> =
			%% Line 204
			call 'erlang':'-'
			    (Xmax, Xmin)
		    in  let <K> =
			    %% Line 204
			    call 'erlang':'/'
				(1, _cor18)
			in  let <_cor20> =
				%% Line 205
				call 'erlang':'-'
				    (K)
			    in  let <M> =
				    %% Line 205
				    call 'erlang':'*'
					(_cor20, Xmin)
				in  let <_cor22> =
					%% Line 206
					call 'erlang':'*'
					    (K, X)
				    in  let <PercentOffViewLeft> =
					    %% Line 206
					    call 'erlang':'+'
						(_cor22, M)
					in  let <_cor24> =
						%% Line 207
						call 'gstk':'to_ascii'
						    (PercentOffViewLeft)
					    in  %% Line 207
						{'c',[_cor0|[[32|[120|[118|[105|[32|[109|[111|[32]]]]]]]]|[_cor24|[]]]]}
		( <_cor17> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor17})
		  -| ['compiler_generated'] )
	      end
	  %% Line 208
	  <{'buttonpress',On}> when 'true' ->
	      apply 'bind'/5
		  (_cor1, _cor3, _cor0, 'buttonpress', On)
	  %% Line 209
	  <{'buttonrelease',On}> when 'true' ->
	      apply 'bind'/5
		  (_cor1, _cor3, _cor0, 'buttonrelease', On)
	  %% Line 210
	  <{'configure',On}> when 'true' ->
	      apply 'bind'/5
		  (_cor1, _cor3, _cor0, 'configure', On)
	  %% Line 211
	  <{'destroy',On}> when 'true' ->
	      apply 'bind'/5
		  (_cor1, _cor3, _cor0, 'destroy', On)
	  %% Line 212
	  <{'enter',On}> when 'true' ->
	      apply 'bind'/5
		  (_cor1, _cor3, _cor0, 'enter', On)
	  %% Line 213
	  <{'focus',On}> when 'true' ->
	      apply 'bind'/5
		  (_cor1, _cor3, _cor0, 'focus', On)
	  %% Line 214
	  <{'keypress',On}> when 'true' ->
	      apply 'bind'/5
		  (_cor1, _cor3, _cor0, 'keypress', On)
	  %% Line 215
	  <{'keyrelease',On}> when 'true' ->
	      apply 'bind'/5
		  (_cor1, _cor3, _cor0, 'keyrelease', On)
	  %% Line 216
	  <{'leave',On}> when 'true' ->
	      apply 'bind'/5
		  (_cor1, _cor3, _cor0, 'leave', On)
	  %% Line 217
	  <{'motion',On}> when 'true' ->
	      apply 'bind'/5
		  (_cor1, _cor3, _cor0, 'motion', On)
	  %% Line 219
	  <{'secret_hack_gridit',GridGstkid}> when 'true' ->
	      let <CRef> =
		  %% Line 220
		  call 'gstk_db':'insert_event'
		      (_cor1, GridGstkid, 'click', [])
	      in  let <ClickCmd> =
		      %% Line 221
		      [_cor0|[[32|[98|[105|[110|[100|[32|[97|[108|[108|[32|[60|[66|[117|[116|[116|[111|[110|[82|[101|[108|[101|[97|[115|[101|[45|[49|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[CRef|%% Line 222
																														    [[32|[91]]|[_cor0|[[32|[102|[105|[110|[100|[32|[119|[105|[116|[104|[116|[97|[103|[32|[99|[117|[114|[114|[101|[110|[116|[93|[125|[59]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
		  in  let <DRef> =
			  %% Line 223
			  call 'gstk_db':'insert_event'
			      (_cor1, GridGstkid, 'doubleclick', [])
		      in  let <DclickCmd> =
			      %% Line 224
			      [_cor0|[[32|[98|[105|[110|[100|[32|[97|[108|[108|[32|[60|[68|[111|[117|[98|[108|[101|[45|[66|[117|[116|[116|[111|[110|[82|[101|[108|[101|[97|[115|[101|[45|[49|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|%% Line 225
																																			     [DRef|[[32|[91]]|[_cor0|[[32|[102|[105|[110|[100|[32|[119|[105|[116|[104|[116|[97|[103|[32|[99|[117|[114|[114|[101|[110|[116|[93|[125]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
			  in  %% Line 227
			      {'c',[ClickCmd|[DclickCmd|[]]]}
	  %% Line 228
	  <{'secret_forwarded_grid_event',{Event,On},GridGstkid}> when 'true' ->
	      %% Line 229
	      apply 'bind'/5
		  (_cor1, GridGstkid, _cor0, Event, On)
	  %% Line 230
	  <_cor39> when 'true' ->
	      'invalid_option'
	end
'read_option'/5 =
    %% Line 240
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 241
	case _cor4 of
	  %% Line 242
	  <'scrollregion'> when 'true' ->
	      call 'gstk_db':'opt'
		  (_cor1, _cor3, 'scrollregion')
	  %% Line 243
	  <{'hit',{X,Y}}> when 'true' ->
	      %% Line 244
	      apply 'hit'/6
		  (_cor1, _cor0, X, Y, X, Y)
	  %% Line 245
	  <{'hit',[{X1,Y1}|[{X2,Y2}|[]]]}> when 'true' ->
	      %% Line 246
	      apply 'hit'/6
		  (_cor1, _cor0, X1, Y1, X2, Y2)
	  %% Line 248
	  <'yscrollpos'> when 'true' ->
	      %% Line 249
	      case call 'tcl2erl':'ret_tuple'
		       ([_cor0|[[32|[121|[118|[105]]]]]]) of
		<{PercentOffViewTop,_cor31}> when 'true' ->
		    %% Line 250
		    case call 'gstk_db':'opt'
			     (_cor1, _cor3, 'scrollregion') of
		      <{_cor32,Ymin,_cor33,Ymax}> when 'true' ->
			  let <_cor7> =
			      %% Line 251
			      call 'erlang':'-'
				  (Ymax, Ymin)
			  in  let <K> =
				  %% Line 251
				  call 'erlang':'/'
				      (1, _cor7)
			      in  let <_cor9> =
				      %% Line 252
				      call 'erlang':'-'
					  (K)
				  in  let <M> =
					  %% Line 252
					  call 'erlang':'*'
					      (_cor9, Ymin)
				      in  let <_cor11> =
					      %% Line 253
					      call 'erlang':'-'
						  (PercentOffViewTop, M)
					  in  let <_cor12> =
						  %% Line 253
						  call 'erlang':'/'
						      (_cor11, K)
					      in  %% Line 253
						  call 'erlang':'round'
						      (_cor12)
		      ( <_cor6> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor6})
			-| ['compiler_generated'] )
		    end
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 254
	  <'xscrollpos'> when 'true' ->
	      %% Line 255
	      case call 'tcl2erl':'ret_tuple'
		       ([_cor0|[[32|[120|[118|[105]]]]]]) of
		<{PercentOffViewLeft,_cor34}> when 'true' ->
		    %% Line 256
		    case call 'gstk_db':'opt'
			     (_cor1, _cor3, 'scrollregion') of
		      <{Xmin,_cor35,Xmax,_cor36}> when 'true' ->
			  let <_cor16> =
			      %% Line 257
			      call 'erlang':'-'
				  (Xmax, Xmin)
			  in  let <K> =
				  %% Line 257
				  call 'erlang':'/'
				      (1, _cor16)
			      in  let <_cor18> =
				      %% Line 258
				      call 'erlang':'-'
					  (K)
				  in  let <M> =
					  %% Line 258
					  call 'erlang':'*'
					      (_cor18, Xmin)
				      in  let <_cor20> =
					      %% Line 259
					      call 'erlang':'-'
						  (PercentOffViewLeft, M)
					  in  let <_cor21> =
						  %% Line 259
						  call 'erlang':'/'
						      (_cor20, K)
					      in  %% Line 259
						  call 'erlang':'round'
						      (_cor21)
		      ( <_cor15> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor15})
			-| ['compiler_generated'] )
		    end
		( <_cor14> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor14})
		  -| ['compiler_generated'] )
	      end
	  %% Line 260
	  <'buttonpress'> when 'true' ->
	      call 'gstk_db':'is_inserted'
		  (_cor1, _cor3, 'buttonpress')
	  %% Line 261
	  <'buttonrelease'> when 'true' ->
	      call 'gstk_db':'is_inserted'
		  (_cor1, _cor3, 'buttonrelease')
	  %% Line 262
	  <'configure'> when 'true' ->
	      call 'gstk_db':'is_inserted'
		  (_cor1, _cor3, 'configure')
	  %% Line 263
	  <'destroy'> when 'true' ->
	      call 'gstk_db':'is_inserted'
		  (_cor1, _cor3, 'destroy')
	  %% Line 264
	  <'enter'> when 'true' ->
	      call 'gstk_db':'is_inserted'
		  (_cor1, _cor3, 'enter')
	  %% Line 265
	  <'focus'> when 'true' ->
	      call 'gstk_db':'is_inserted'
		  (_cor1, _cor3, 'focus')
	  %% Line 266
	  <'keypress'> when 'true' ->
	      call 'gstk_db':'is_inserted'
		  (_cor1, _cor3, 'keypress')
	  %% Line 267
	  <'keyrelease'> when 'true' ->
	      call 'gstk_db':'is_inserted'
		  (_cor1, _cor3, 'keyrelease')
	  %% Line 268
	  <'leave'> when 'true' ->
	      call 'gstk_db':'is_inserted'
		  (_cor1, _cor3, 'leave')
	  %% Line 269
	  <'motion'> when 'true' ->
	      call 'gstk_db':'is_inserted'
		  (_cor1, _cor3, 'motion')
	  %% Line 271
	  <_cor37> when 'true' ->
	      ( case _cor3 of
		  ( <( {'gstkid',_cor38,_cor39,_cor40,_cor41,_cor42,_rec7}
		       -| ['compiler_generated'] )> when 'true' ->
			{'bad_result',{_rec7,'invalid_option',_cor4}}
		    -| ['compiler_generated'] )
		  ( <_cor43> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','gstkid'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'hit'/6 =
    %% Line 274
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Ax1> =
	    %% Line 275
	    call 'gstk':'to_ascii'
		(_cor3)
	in  let <Ay1> =
		%% Line 276
		call 'gstk':'to_ascii'
		    (_cor2)
	    in  let <Ax2> =
		    %% Line 277
		    call 'gstk':'to_ascii'
			(_cor1)
		in  let <Ay2> =
			%% Line 278
			call 'gstk':'to_ascii'
			    (_cor0)
		    in  %% Line 279
			case call 'tcl2erl':'ret_list'
				 ([_cor4|[[32|[102|[105|[110|[100|[32|[111|[118|[101|[114|[108|[97|[112|[112|[105|[110|[103|[32]]]]]]]]]]]]]]]]]]|%% Line 280
																		  [Ax1|[32|[Ay1|[32|[Ax2|[32|[Ay2|[]]]]]]]]]]) of
			  %% Line 281
			  <Items>
			      when call 'erlang':'is_list'
				    (Items) ->
			      %% Line 282
			      case call 'ets':'lookup'
				       (_cor5, 'frontend_node') of
				<[{_cor18,Node}|[]]> when 'true' ->
				    %% Line 283
				    apply 'fix_ids'/4
					(Items, _cor5, _cor4, Node)
				( <_cor10> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor10})
				  -| ['compiler_generated'] )
			      end
			  %% Line 284
			  <Other> when 'true' ->
			      %% Line 285
			      {'bad_result',Other}
			end
'fix_ids'/4 =
    %% Line 288
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Item|Items],DB,Canvas,Node> when 'true' ->
	      let <_cor4> =
		  %% Line 289
		  call 'gstk_db':'lookup_item'
		      (DB, Canvas, Item)
	      in  let <_cor5> =
		      %% Line 289
		      apply 'fix_ids'/4
			  (Items, DB, Canvas, Node)
		  in  %% Line 289
		      [{_cor4,Node}|_cor5]
	  %% Line 290
	  <[],_cor10,_cor11,_cor12> when 'true' ->
	      []
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'fix_ids',4}}] )
	    -| ['compiler_generated'] )
	end
'bind'/5 =
    %% Line 303
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 304
	case apply 'bind'/6
		 (_cor4, _cor3, _cor2, _cor1, _cor0, []) of
	  %% Line 305
	  <'invalid_option'> when 'true' ->
	      'invalid_option'
	  %% Line 306
	  <Cmd> when 'true' ->
	      {'c',Cmd}
	end
'bind'/6 =
    %% Line 309
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 310
	case _cor1 of
	  %% Line 311
	  <'true'> when 'true' ->
	      apply 'ebind'/6
		  (_cor5, _cor4, _cor3, _cor2, _cor0, [])
	  %% Line 312
	  <'false'> when 'true' ->
	      apply 'eunbind'/6
		  (_cor5, _cor4, _cor3, _cor2, _cor0, [])
	  %% Line 313
	  <{'true',Edata}> when 'true' ->
	      apply 'ebind'/6
		  (_cor5, _cor4, _cor3, _cor2, _cor0, Edata)
	  %% Line 314
	  <{'false',Edata}> when 'true' ->
	      apply 'eunbind'/6
		  (_cor5, _cor4, _cor3, _cor2, _cor0, Edata)
	  %% Line 315
	  <_cor13> when 'true' ->
	      'invalid_option'
	end
'ebind'/6 =
    %% Line 326
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <Eref> =
	    %% Line 327
	    call 'gstk_db':'insert_event'
		(_cor5, _cor4, _cor2, _cor0)
	in  let <P> =
		%% Line 328
		[[98|[105|[110|[100|[32]]]]]|[_cor3|[_cor1|[]]]]
	    in  %% Line 329
		case _cor2 of
		  %% Line 330
		  <'motion'> when 'true' ->
		      [P|[[32|[60|[77|[111|[116|[105|[111|[110|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]|[Eref|[[32|[91]]|%% Line 331
																		       [_cor3|[[32|[99|[97|[110|[118|[97|[115|[120|[32|[37|[120|[93|[32|[91]]]]]]]]]]]]]]|[_cor3|[[32|[99|[97|[110|[118|[97|[115|[121|[32|[37|[121|[93|[32|[37|[120|[32|[37|[121|[125]]]]]]]]]]]]]]]]]]]]]]]]]]]
		  %% Line 332
		  <'keypress'> when 'true' ->
		      %% Line 333
		      [P|[[32|[60|[75|[101|[121|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]|[Eref|[[32|[37|[75|[32|[37|[78|[32|[48|[32|[48|[32|[91]]]]]]]]]]]]|%% Line 334
																						       [_cor3|[[32|[99|[97|[110|[118|[97|[115|[120|[32|[37|[120|[93|[32|[91]]]]]]]]]]]]]]|[_cor3|[[32|[99|[97|[110|[118|[97|[115|[121|[32|[37|[121|[93|[125|[59]]]]]]]]]]]]]]|%% Line 335
																																											      [P|[[32|[60|[83|[104|[105|[102|[116|[45|[75|[101|[121|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]]]]|[Eref|[[32|[37|[75|[32|[37|[78|[32|[49|[32|[48|[32|[91]]]]]]]]]]]]|%% Line 336
																																																																				 [_cor3|[[32|[99|[97|[110|[118|[97|[115|[120|[32|[37|[120|[93|[32|[91]]]]]]]]]]]]]]|[_cor3|[[32|[99|[97|[110|[118|[97|[115|[121|[32|[37|[121|[93|[125|[59]]]]]]]]]]]]]]|%% Line 337
																																																																																									[P|[[32|[60|[67|[111|[110|[116|[114|[111|[108|[45|[75|[101|[121|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]]]]]]|[Eref|[[32|[37|[75|[32|[37|[78|[32|[48|[32|[49|[32|[91]]]]]]]]]]]]|%% Line 338
																																																																																																																		       [_cor3|[[32|[99|[97|[110|[118|[97|[115|[120|[32|[37|[120|[93|[32|[91]]]]]]]]]]]]]]|[_cor3|[[32|[99|[97|[110|[118|[97|[115|[121|[32|[37|[121|[93|[125|[59]]]]]]]]]]]]]]|%% Line 339
																																																																																																																																							      [P|[[32|[60|[67|[111|[110|[116|[114|[111|[108|[45|[83|[104|[105|[102|[116|[45|[75|[101|[121|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[Eref|[[32|[37|[75|[32|[37|[78|[32|[49|[32|[49|[32|[91]]]]]]]]]]]]|%% Line 340
																																																																																																																																																																					       [_cor3|[[32|[99|[97|[110|[118|[97|[115|[120|[32|[37|[120|[93|[32|[91]]]]]]]]]]]]]]|[_cor3|[[32|[99|[97|[110|[118|[97|[115|[121|[32|[37|[121|[93|[125]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
		  %% Line 341
		  <'keyrelease'> when 'true' ->
		      %% Line 342
		      [P|[[32|[60|[75|[101|[121|[82|[101|[108|[101|[97|[115|[101|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]]]]]|[Eref|[[32|[37|[75|[32|[37|[78|[32|[48|[32|[48|[32|[91]]]]]]]]]]]]|%% Line 343
																											       [_cor3|[[32|[99|[97|[110|[118|[97|[115|[120|[32|[37|[120|[93|[32|[91]]]]]]]]]]]]]]|[_cor3|[[32|[99|[97|[110|[118|[97|[115|[121|[32|[37|[121|[93|[125|[59]]]]]]]]]]]]]]|%% Line 344
																																																      [P|[[32|[60|[83|[104|[105|[102|[116|[45|[75|[101|[121|[82|[101|[108|[101|[97|[115|[101|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[Eref|[[32|[37|[75|[32|[37|[78|[32|[49|[32|[48|[32|[91]]]]]]]]]]]]|%% Line 345
																																																																														 [_cor3|[[32|[99|[97|[110|[118|[97|[115|[120|[32|[37|[120|[93|[32|[91]]]]]]]]]]]]]]|[_cor3|[[32|[99|[97|[110|[118|[97|[115|[121|[32|[37|[121|[93|[125|[59]]]]]]]]]]]]]]|%% Line 346
																																																																																																			[P|[[32|[60|[67|[111|[110|[116|[114|[111|[108|[45|[75|[101|[121|[82|[101|[108|[101|[97|[115|[101|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[Eref|[[32|[37|[75|[32|[37|[78|[32|[48|[32|[49|[32|[91]]]]]]]]]]]]|%% Line 347
																																																																																																																																	       [_cor3|[[32|[99|[97|[110|[118|[97|[115|[120|[32|[37|[120|[93|[32|[91]]]]]]]]]]]]]]|[_cor3|[[32|[99|[97|[110|[118|[97|[115|[121|[32|[37|[121|[93|[125|[59]]]]]]]]]]]]]]|%% Line 348
																																																																																																																																																						      [P|[[32|[60|[67|[111|[110|[116|[114|[111|[108|[45|[83|[104|[105|[102|[116|[45|[75|[101|[121|[82|[101|[108|[101|[97|[115|[101|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[Eref|[[32|[37|[75|[32|[37|[78|[32|[49|[32|[49|[91]]]]]]]]]]]|%% Line 349
																																																																																																																																																																																									  [_cor3|[[32|[99|[97|[110|[118|[97|[115|[120|[32|[37|[120|[93|[32|[91]]]]]]]]]]]]]]|[_cor3|[[32|[99|[97|[110|[118|[97|[115|[121|[32|[37|[121|[93|[125]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
		  %% Line 350
		  <'buttonpress'> when 'true' ->
		      %% Line 351
		      [P|[[32|[60|[66|[117|[116|[116|[111|[110|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]|[Eref|[[32|[37|[98|[32|[91]]]]]|%% Line 352
																				      [_cor3|[[32|[99|[97|[110|[118|[97|[115|[120|[32|[37|[120|[93|[32|[91]]]]]]]]]]]]]]|[_cor3|[[32|[99|[97|[110|[118|[97|[115|[121|[32|[37|[121|[93|[32|[37|[120|[32|[37|[121|[125]]]]]]]]]]]]]]]]]]]]]]]]]]]
		  %% Line 353
		  <'buttonrelease'> when 'true' ->
		      %% Line 354
		      [P|[[32|[60|[66|[117|[116|[116|[111|[110|[82|[101|[108|[101|[97|[115|[101|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]]]]]]]]|[Eref|[[32|[37|[98|[32|[91]]]]]|%% Line 355
																									      [_cor3|[[32|[99|[97|[110|[118|[97|[115|[120|[32|[37|[120|[93|[32|[91]]]]]]]]]]]]]]|[_cor3|[[32|[99|[97|[110|[118|[97|[115|[121|[32|[37|[121|[93|[32|[37|[120|[32|[37|[121|[125]]]]]]]]]]]]]]]]]]]]]]]]]]]
		  %% Line 356
		  <'leave'> when 'true' ->
		      [P|[[32|[60|[76|[101|[97|[118|[101|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]|[Eref|[[125]]]]]
		  %% Line 357
		  <'enter'> when 'true' ->
		      [P|[[32|[60|[69|[110|[116|[101|[114|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]|[Eref|[[125]]]]]
		  %% Line 358
		  <'destroy'> when 'true' ->
		      %% Line 359
		      [P|[[32|[60|[68|[101|[115|[116|[114|[111|[121|[62|[32|[123|[105|[102|[32|[123|[34|[37|[87|[34|[61|[61|[34]]]]]]]]]]]]]]]]]]]]]]]|[[_cor3|[_cor1|[]]]|%% Line 360
																					   [[34|[125|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]|[Eref|[[125|[125]]]]]]]]
		  %% Line 361
		  <'focus'> when 'true' ->
		      %% Line 362
		      [P|[[32|[60|[70|[111|[99|[117|[115|[73|[110|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]]|[Eref|[[32|[116|[114|[117|[101|[125|[59]]]]]]]|%% Line 363
																							 [P|[[32|[60|[70|[111|[99|[117|[115|[79|[117|[116|[62|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]]]|[Eref|[[32|[102|[97|[108|[115|[101|[125]]]]]]]]]]]]]]]
		  %% Line 364
		  <'configure'> when 'true' ->
		      %% Line 365
		      [P|[[32|[60|[67|[111|[110|[102|[105|[103|[117|[114|[101|[62|[32|[123|[105|[102|[32|[123|[34|[37|[87|[34|[61|[61|[34]]]]]]]]]]]]]]]]]]]]]]]]]|[[_cor3|[_cor1|[]]]|%% Line 366
																						       [[34|[125|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]|[Eref|[[32|[37|[119|[32|[37|[104|[32|[37|[120|[32|[37|[121|[125|[125]]]]]]]]]]]]]]]]]]]]
		  ( <_cor8> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor8})
		    -| ['compiler_generated'] )
		end
'eunbind'/6 =
    %% Line 379
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 380
	    call 'gstk_db':'delete_event'
		(_cor5, _cor4, _cor2)
	    let <P> =
		%% Line 381
		[[98|[105|[110|[100|[32]]]]]|[_cor3|[_cor1|[]]]]
	    in  %% Line 382
		case _cor2 of
		  %% Line 383
		  <'motion'> when 'true' ->
		      %% Line 384
		      [P|[[32|[60|[77|[111|[116|[105|[111|[110|[62|[32|[123|[125]]]]]]]]]]]]]]
		  %% Line 385
		  <'keypress'> when 'true' ->
		      %% Line 386
		      [P|[[32|[60|[75|[101|[121|[82|[101|[108|[101|[97|[115|[101|[62|[32|[123|[125|[59]]]]]]]]]]]]]]]]]|%% Line 387
															[P|[[32|[60|[83|[104|[105|[102|[116|[45|[75|[101|[121|[82|[101|[108|[101|[97|[115|[101|[62|[32|[123|[125|[59]]]]]]]]]]]]]]]]]]]]]]]|%% Line 388
																															    [P|[[32|[60|[67|[111|[110|[116|[114|[111|[108|[45|[75|[101|[121|[82|[101|[108|[101|[97|[115|[101|[62|[32|[123|[125|[59]]]]]]]]]]]]]]]]]]]]]]]]]|%% Line 389
																																																	    [P|[[32|[60|[67|[111|[110|[116|[114|[111|[108|[45|[83|[104|[105|[102|[116|[45|[75|[101|[121|[82|[101|[108|[101|[97|[115|[101|[62|[32|[123|[125]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
		  %% Line 390
		  <'keyrelease'> when 'true' ->
		      %% Line 391
		      [P|[[32|[60|[75|[101|[121|[82|[101|[108|[101|[97|[115|[101|[62|[32|[123|[125|[59]]]]]]]]]]]]]]]]]|%% Line 392
															[P|[[32|[60|[83|[104|[105|[102|[116|[45|[75|[101|[121|[82|[101|[108|[101|[97|[115|[101|[62|[32|[123|[125|[59]]]]]]]]]]]]]]]]]]]]]]]|%% Line 393
																															    [P|[[32|[60|[67|[111|[110|[116|[114|[111|[108|[45|[75|[101|[121|[82|[101|[108|[101|[97|[115|[101|[62|[32|[123|[125|[59]]]]]]]]]]]]]]]]]]]]]]]]]|%% Line 394
																																																	    [P|[[32|[60|[67|[111|[110|[116|[114|[111|[108|[45|[83|[104|[105|[102|[116|[45|[75|[101|[121|[82|[101|[108|[101|[97|[115|[101|[62|[32|[123|[125]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
		  %% Line 395
		  <'buttonpress'> when 'true' ->
		      %% Line 396
		      [P|[[32|[60|[66|[117|[116|[116|[111|[110|[80|[114|[101|[115|[115|[62|[32|[123|[125]]]]]]]]]]]]]]]]]]]
		  %% Line 397
		  <'buttonrelease'> when 'true' ->
		      %% Line 398
		      [P|[[32|[60|[66|[117|[116|[116|[111|[110|[82|[101|[108|[101|[97|[115|[101|[62|[32|[123|[125]]]]]]]]]]]]]]]]]]]]]
		  %% Line 399
		  <'leave'> when 'true' ->
		      %% Line 400
		      [P|[[32|[60|[76|[101|[97|[118|[101|[62|[32|[123|[125]]]]]]]]]]]]]
		  %% Line 401
		  <'enter'> when 'true' ->
		      %% Line 402
		      [P|[[32|[60|[69|[110|[116|[101|[114|[62|[32|[123|[125]]]]]]]]]]]]]
		  %% Line 403
		  <'destroy'> when 'true' ->
		      %% Line 404
		      [P|[[32|[60|[68|[101|[115|[116|[114|[111|[121|[62|[32|[123|[125]]]]]]]]]]]]]]]
		  %% Line 405
		  <'focus'> when 'true' ->
		      %% Line 406
		      [P|[[32|[60|[70|[111|[99|[117|[115|[73|[110|[62|[32|[123|[125|[59]]]]]]]]]]]]]]|%% Line 407
												      [P|[[32|[60|[70|[111|[99|[117|[115|[79|[117|[116|[62|[32|[123|[125]]]]]]]]]]]]]]]]]]
		  %% Line 408
		  <'configure'> when 'true' ->
		      %% Line 409
		      [P|[[32|[60|[67|[111|[110|[102|[105|[103|[117|[114|[101|[62|[32|[123|[125]]]]]]]]]]]]]]]]]
		  ( <_cor7> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor7})
		    -| ['compiler_generated'] )
		end
'mk_cmd_and_exec'/6 =
    %% Line 417
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 418
	case apply 'make_command'/6
		 (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0) of
	  %% Line 419
	  <{'error',Reason}> when 'true' ->
	      {'error',Reason}
	  %% Line 420
	  <Cmd>
	      when call 'erlang':'is_list'
		    (Cmd) ->
	      %% Line 421
	      call 'gstk':'exec'
		  (Cmd)
	  ( <_cor6> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor6})
	    -| ['compiler_generated'] )
	end
'mk_cmd_and_call'/5 =
    %% Line 424
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 425
	case apply 'make_command'/5
		 (_cor4, _cor3, _cor2, _cor1, _cor0) of
	  %% Line 426
	  <{'error',Reason}> when 'true' ->
	      {'error',Reason}
	  %% Line 427
	  <Cmd>
	      when call 'erlang':'is_list'
		    (Cmd) ->
	      %% Line 428
	      case call 'tcl2erl':'ret_int'
		       (Cmd) of
		%% Line 429
		<Item>
		    when call 'erlang':'is_integer'
			  (Item) ->
		    %% Line 430
		    ( case _cor3 of
			( <( {'gstkid',_rec8,_cor19,_cor20,_cor21,_cor22,_cor23}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <G2> =
				  call 'gstk_db':'lookup_gstkid'
				      (_cor0, _rec8)
			      in  %% Line 431
				  case G2 of
				    <{'gstkid',_cor25,_cor26,_cor27,_cor28,_cor29,_cor30}> when 'true' ->
					call 'erlang':'setelement'
					    (4, G2, Item)
				    ( <_cor31> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','gstkid'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
			  -| ['compiler_generated'] )
			( <_cor24> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','gstkid'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 433
		<Bad_result> when 'true' ->
		    %% Line 434
		    {'error',Bad_result}
	      end
	  ( <_cor13> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor13})
	    -| ['compiler_generated'] )
	end
'make_command'/6 =
    %% Line 448
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 449
	case call 'gstk_generic':'out_opts'
		 (_cor5, _cor4, _cor3, _cor0, _cor2, [], [], []) of
	  %% Line 450
	  <{[],[],[]}> when 'true' ->
	      []
	  %% Line 451
	  <{Si,[],[]}> when 'true' ->
	      [_cor1|[Si|[]]]
	  %% Line 452
	  <{[],[],Co}> when 'true' ->
	      Co
	  %% Line 453
	  <{Si,[],Co}> when 'true' ->
	      [_cor1|[Si|[59|[Co|[]]]]]
	  %% Line 454
	  <{'error',Reason}> when 'true' ->
	      {'error',Reason}
	  ( <_cor6> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor6})
	    -| ['compiler_generated'] )
	end
'make_command'/5 =
    %% Line 457
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 458
	case call 'gstk_generic':'out_opts'
		 (_cor4, _cor3, _cor2, _cor0, [36|[119]], [], [], []) of
	  %% Line 459
	  <{[],[],[]}> when 'true' ->
	      _cor1
	  %% Line 460
	  <{Si,[],[]}> when 'true' ->
	      [_cor1|[Si|[]]]
	  %% Line 461
	  <{[],[],Co}> when 'true' ->
	      [[115|[101|[116|[32|[119|[32|[91]]]]]]]|[_cor1|[[93|[59]]|[Co|[[115|[101|[116|[32|[100|[32|[36|[119]]]]]]]]]]]]]
	  %% Line 462
	  <{Si,[],Co}> when 'true' ->
	      [[115|[101|[116|[32|[119|[32|[91]]]]]]]|[_cor1|[Si|[[93|[59]]|[Co|[[115|[101|[116|[32|[100|[32|[36|[119]]]]]]]]]]]]]]
	  %% Line 463
	  <{'error',Reason}> when 'true' ->
	      {'error',Reason}
	  ( <_cor5> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor5})
	    -| ['compiler_generated'] )
	end
'item_config'/3 =
    %% Line 466
    fun (_cor2,_cor1,_cor0) ->
	%% Line 467
	case _cor1 of
	  <{'gstkid',_cor10,Canvas,Item,_cor11,_cor12,_cor13}> when 'true' ->
	      let <AItem> =
		  %% Line 468
		  call 'gstk':'to_ascii'
		      (Item)
	      in  let <SCmd> =
		      %% Line 469
		      [Canvas|[[32|[105|[116|[101|[109|[99|[111|[110|[102|[32]]]]]]]]]]|[AItem|[]]]]
		  in  %% Line 470
		      case apply 'make_command'/6
			       (_cor0, _cor1, Canvas, AItem, SCmd, _cor2) of
			%% Line 471
			<{'error',Reason}> when 'true' ->
			    {'error',Reason}
			%% Line 472
			<Cmd>
			    when call 'erlang':'is_list'
				  (Cmd) ->
			    %% Line 473
			    call 'gstk':'exec'
				(Cmd)
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor6})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'pickout_coords'/4 =
    %% Line 476
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{'coords',Coords}|Rest],Opts,ObjType,NbrOfCoords>
	      when %% Line 477
		try
		    let <_cor4> =
			call 'erlang':'length'
			    (Coords)
		    in  call 'erlang':'=='
			    (_cor4, NbrOfCoords)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 478
	      case apply 'coords'/1
		       (Coords) of
		%% Line 479
		<'invalid'> when 'true' ->
		    let <_cor5> =
			%% Line 480
			call 'io_lib':'format'
			    ([65|[32|[126|[119|[32|[109|[117|[115|[116|[32|[104|[97|[118|[101|[32|[126|[119|[32|[99|[111|[111|[114|[100|[105|[110|[97|[116|[101|[115]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 481
																								   [ObjType|[NbrOfCoords|[]]])
		    in  %% Line 480
			{'error',_cor5}
		%% Line 482
		<RealCoords> when 'true' ->
		    let <_cor6> =
			%% Line 483
			call 'lists':'append'
			    (Rest, Opts)
		    in  %% Line 483
			{RealCoords,_cor6}
	      end
	  %% Line 485
	  <[Opt|Rest],Opts,ObjType,NbrOfCoords> when 'true' ->
	      %% Line 486
	      apply 'pickout_coords'/4
		  (Rest, [Opt|Opts], ObjType, NbrOfCoords)
	  %% Line 487
	  <[],_X_Opts,ObjType,NbrOfCoords> when 'true' ->
	      let <_cor8> =
		  %% Line 488
		  call 'io_lib':'format'
		      ([65|[32|[126|[119|[32|[109|[117|[115|[116|[32|[104|[97|[118|[101|[32|[126|[119|[32|[99|[111|[111|[114|[100|[105|[110|[97|[116|[101|[115]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 489
																							     [ObjType|[NbrOfCoords|[]]])
	      in  %% Line 488
		  {'error',_cor8}
	  ( <_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'pickout_coords',4}}] )
	    -| ['compiler_generated'] )
	end
'coords'/1 =
    %% Line 491
    fun (_cor0) ->
	case _cor0 of
	  <[{X,Y}|R]>
	      when let <_cor1> =
		    call 'erlang':'is_number'
			(X)
		in  let <_cor2> =
			call 'erlang':'is_number'
			    (Y)
		    in  call 'erlang':'and'
			    (_cor1, _cor2) ->
	      let <_cor3> =
		  %% Line 492
		  call 'gstk':'to_ascii'
		      (X)
	      in  let <_cor4> =
		      %% Line 492
		      call 'gstk':'to_ascii'
			  (Y)
		  in  let <_cor5> =
			  %% Line 492
			  apply 'coords'/1
			      (R)
		      in  %% Line 492
			  [_cor3|[[32]|[_cor4|[[32]|[_cor5|[]]]]]]
	  %% Line 493
	  <[_cor7|[]]> when 'true' ->
	      %% Line 494
	      'invalid'
	  %% Line 495
	  <[]> when 'true' ->
	      %% Line 496
	      []
	  ( <_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6})
		  -| [{'function_name',{'coords',1}}] )
	    -| ['compiler_generated'] )
	end
'item_delete_impl'/2 =
    %% Line 498
    fun (_cor1,_cor0) ->
	do  %% Line 499
	    call 'gstk_db':'delete_widget'
		(_cor1, _cor0)
	    %% Line 500
	    case _cor0 of
	      <{'gstkid',ID,Canvas,Item,_cor6,P,Type}> when 'true' ->
		  let <_cor3> =
		      %% Line 501
		      call 'gstk_widgets':'type2mod'
			  (Type)
		  in  %% Line 501
		      {P,ID,_cor3,[Canvas|[Item|[]]]}
	      ( <_cor2> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor2})
		-| ['compiler_generated'] )
	    end
'upd_gstkid'/3 =
    %% Line 504
    fun (_cor2,_cor1,_cor0) ->
	%% Line 505
	case _cor1 of
	  <{'gstkid',_cor19,_cor20,_cor21,Owner,Parent,_cor22}> when 'true' ->
	      %% Line 507
	      ( case call 'gstk_db':'lookup_gstkid'
			 (_cor2, Parent, Owner) of
		  ( <( {'gstkid',_cor23,_cor24,_rec10,_cor25,_cor26,_cor27}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 508
			( case _rec10 of
			    ( <( {'so',_cor29,_rec11,_cor30,_cor31,_cor32}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_cor11> =
				      %% Line 509
				      call 'gs':'val'
					  ('coords', _cor0)
				  in  do  %% Line 509
					  call 'gstk_db':'insert_opt'
					      (_cor2, _cor1, {'coords',_cor11})
					  let <_cor13> =
					      %% Line 510
					      call 'erlang':'setelement'
						  (4, _cor1, 'no_item')
					  in  let <_cor15> =
						  %% Line 510
						  call 'erlang':'setelement'
						      (3, _cor13, _rec11)
					      in  %% Line 510
						  call 'gstk_db':'update_widget'
						      (_cor2, _cor15)
			      -| ['compiler_generated'] )
			    ( <_cor33> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','so'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor28> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','gstkid'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('gstk_canvas')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('gstk_canvas', _cor0)
end