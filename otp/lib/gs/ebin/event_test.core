module 'event_test' ['init'/0,
		     'module_info'/0,
		     'module_info'/1,
		     'start'/0]
    attributes []
'start'/0 =
    %% Line 32
    fun () ->
	%% Line 33
	call 'erlang':'spawn'
	    ('event_test', 'init', [])
'init'/0 =
    %% Line 35
    fun () ->
	let <S> =
	    %% Line 36
	    call 'gs':'start'
		()
	in  let <W> =
		%% Line 37
		call 'gs':'window'
		    (S, [{'map','true'}|[{'keypress','true'}|[{'buttonpress','true'}]]])
	    in  do  %% Line 38
		    call 'gs':'button'
			(W, [{'label',{'text',[80|[114|[101|[115|[115|[32|[77|[101]]]]]]]]}}|[{'enter','true'}|[{'leave','true'}]]])
		    %% Line 39
		    apply 'event_loop'/0
			()
'event_loop'/0 =
    %% Line 42
    fun () ->
	%% Line 43
	receive
	  %% Line 44
	  <X> when 'true' ->
	      do  %% Line 45
		  call 'io':'format'
		      ([71|[111|[116|[32|[101|[118|[101|[110|[116|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]], [X|[]])
		  %% Line 46
		  apply 'event_loop'/0
		      ()
	after 'infinity' ->
	  'true'
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('event_test')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('event_test', _cor0)
end