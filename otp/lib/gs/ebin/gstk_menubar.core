module 'gstk_menubar' ['config'/3,
		       'create'/3,
		       'delete'/2,
		       'event'/5,
		       'mk_create_opts_for_child'/4,
		       'module_info'/0,
		       'module_info'/1,
		       'option'/5,
		       'read'/3,
		       'read_option'/5]
    attributes []
'create'/3 =
    %% Line 77
    fun (_cor2,_cor1,_cor0) ->
	let <TkW> =
	    %% Line 78
	    call 'gstk_generic':'mk_tkw_child'
		(_cor2, _cor1)
	in  let <MPreCmd> =
		%% Line 79
		[[102|[114|[97|[109|[101|[32]]]]]]|[TkW|[]]]
	    in  let <PlaceCmd> =
		    %% Line 80
		    [[59|[112|[108|[97|[99|[101|[32]]]]]]]|[TkW|[]]]
		in  %% Line 81
		    case _cor1 of
		      <{'gstkid',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19}> when 'true' ->
			  let <_cor8> =
			      call 'erlang':'setelement'
				  (3, _cor1, TkW)
			  in  %% Line 82
			      case call 'gstk_generic':'make_command'
				       (_cor0, _cor8, TkW, MPreCmd, PlaceCmd, _cor2) of
				%% Line 83
				<{'error',Reason}> when 'true' ->
				    {'error',Reason}
				%% Line 84
				<Cmd>
				    when call 'erlang':'is_list'
					  (Cmd) ->
				    do  %% Line 85
					call 'gstk':'exec'
					    ([Cmd|[[59|[112|[97|[99|[107|[32]]]]]]|[TkW|[[32|[45|[115|[105|[100|[101|[32|[116|[111|[112|[32|[45|[102|[105|[108|[108|[32|[120|[59]]]]]]]]]]]]]]]]]]]]]]])
					_cor8
				( <_cor10> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor10})
				  -| ['compiler_generated'] )
			      end
		      ( <_cor20> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','gstkid'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
'config'/3 =
    %% Line 98
    fun (_cor2,_cor1,_cor0) ->
	%% Line 99
	( case _cor1 of
	    ( <( {'gstkid',_cor11,_rec1,_cor12,_cor13,_cor14,_cor15}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <SimplePreCmd> =
		      %% Line 100
		      [_rec1|[[32|[99|[111|[110|[102]]]]]]]
		  in  let <PlacePreCmd> =
			  %% Line 101
			  [[112|[108|[97|[99|[101|[32]]]]]]|[_rec1|[]]]
		      in  %% Line 102
			  call 'gstk_generic':'mk_cmd_and_exec'
			      (_cor0, _cor1, _rec1, SimplePreCmd, PlacePreCmd, _cor2)
	      -| ['compiler_generated'] )
	    ( <_cor16> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','gstkid'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'read'/3 =
    %% Line 110
    fun (_cor2,_cor1,_cor0) ->
	%% Line 111
	call 'gstk_generic':'read_option'
	    (_cor2, _cor1, _cor0)
'delete'/2 =
    %% Line 122
    fun (_cor1,_cor0) ->
	do  %% Line 123
	    call 'gstk_db':'delete_widget'
		(_cor1, _cor0)
	    %% Line 124
	    ( case _cor0 of
		( <( {'gstkid',_cor5,_rec2,_cor6,_cor7,_cor8,_cor9}
		     -| ['compiler_generated'] )> when 'true' ->
		      _rec2
		  -| ['compiler_generated'] )
		( <_cor10> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','gstkid'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'event'/5 =
    %% Line 126
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 127
	call 'gstk_generic':'event'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'mk_create_opts_for_child'/4 =
    %% Line 129
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <DB,Cgstkid = {'gstkid',_cor19,_cor20,_cor21,_cor22,_cor23,_cor24},Pgstkid,Opts>
	      when %% Line 130
		call 'erlang':'=:='
		    (_cor24,
		     'menubutton') ->
	      do  %% Line 131
		  case call 'gstk_db':'lookup_def'
			   (Pgstkid, 'menubutton', 'bg') of
		    %% Line 132
		    <'false'> when 'true' ->
			%% Line 133
			( case Pgstkid of
			    ( <( {'gstkid',_cor25,_rec3,_cor26,_cor27,_cor28,_cor29}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <Color> =
				      %% Line 134
				      call 'tcl2erl':'ret_color'
					  ([_rec3|[[32|[99|[103|[32|[45|[98|[103]]]]]]]]])
				  in  %% Line 135
				      call 'gstk_db':'insert_def'
					  (Pgstkid, 'menubutton', {'bg',Color})
			      -| ['compiler_generated'] )
			    ( <_cor30> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','gstkid'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    %% Line 136
		    <_cor31> when 'true' ->
			'ok'
		  end
		  %% Line 138
		  call 'gstk_generic':'mk_create_opts_for_child'
		      (DB, Cgstkid, Pgstkid, Opts)
	  ( <_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17,_cor16,_cor15})
		  -| [{'function_name',{'mk_create_opts_for_child',4}}] )
	    -| ['compiler_generated'] )
	end
'option'/5 =
    %% Line 151
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 152
	case _cor4 of
	  %% Line 153
	  <{'bg',Color}> when 'true' ->
	      let <_cor5> =
		  call 'gstk':'to_color'
		      (Color)
	      in  {'s',[[32|[45|[98|[103|[32]]]]]|[_cor5|[]]]}
	  %% Line 154
	  <{'height',Height}> when 'true' ->
	      let <_cor6> =
		  call 'gstk':'to_ascii'
		      (Height)
	      in  {'s',[[32|[45|[104|[101|[105|[103|[104|[116|[32]]]]]]]]]|[_cor6|[]]]}
	  %% Line 155
	  <_cor14> when 'true' ->
	      'invalid_option'
	end
'read_option'/5 =
    %% Line 165
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 166
	case _cor4 of
	  %% Line 167
	  <'bg'> when 'true' ->
	      call 'tcl2erl':'ret_color'
		  ([_cor2|[[32|[99|[103|[32|[45|[98|[103]]]]]]]]])
	  %% Line 168
	  <'height'> when 'true' ->
	      call 'tcl2erl':'ret_int'
		  ([[117|[112|[100|[97|[116|[101|[32|[105|[100|[108|[101|[116|[97|[115|[107|[115|[59|[119|[105|[110|[102|[111|[32|[104|[101|[32]]]]]]]]]]]]]]]]]]]]]]]]]]|[_cor2|[]]])
	  %% Line 169
	  <_cor14> when 'true' ->
	      ( case _cor3 of
		  ( <( {'gstkid',_cor15,_cor16,_cor17,_cor18,_cor19,_rec4}
		       -| ['compiler_generated'] )> when 'true' ->
			{'bad_result',{_rec4,'invalid_option',_cor4}}
		    -| ['compiler_generated'] )
		  ( <_cor20> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','gstkid'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('gstk_menubar')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('gstk_menubar', _cor0)
end