module 'gstk_listbox' ['config'/3,
		       'create'/3,
		       'delete'/2,
		       'event'/5,
		       'module_info'/0,
		       'module_info'/1,
		       'option'/5,
		       'read'/3,
		       'read_option'/5,
		       'wid_event'/5]
    attributes []
'create'/3 =
    %% Line 102
    fun (_cor2,_cor1,_cor0) ->
	let <MainW> =
	    %% Line 103
	    call 'gstk_generic':'mk_tkw_child'
		(_cor2, _cor1)
	in  let <Listbox> =
		%% Line 104
		call 'lists':'append'
		    (MainW, [46|[122]])
	    in  %% Line 105
		case call 'gstk_generic':'parse_scrolls'
			 (_cor0) of
		  <{Vscroll,Hscroll,NewOpts}> when 'true' ->
		      let <WidgetD> =
			  %% Line 106
			  {'so',MainW,Listbox,%% Line 107
					      Hscroll,%% Line 107
						      Vscroll,'undefined'}
		      in  %% Line 108
			  case _cor1 of
			    <{'gstkid',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}> when 'true' ->
				let <_cor8> =
				    call 'erlang':'setelement'
					(4, _cor1, WidgetD)
				in  let <_cor10> =
					call 'erlang':'setelement'
					    (3, _cor8, MainW)
				    in  let <MandatoryCmd> =
					    %% Line 109
					    [[115|[111|[95|[99|[114|[101|[97|[116|[101|[32|[108|[105|[115|[116|[98|[111|[120|[32]]]]]]]]]]]]]]]]]]|[MainW|[]]]
					in  %% Line 110
					    case call 'gstk':'call'
						     (MandatoryCmd) of
					      %% Line 111
					      <{'result',_cor27}> when 'true' ->
						  let <SimplePreCmd> =
						      %% Line 112
						      [MainW|[[32|[99|[111|[110|[102]]]]]]]
						  in  let <PlacePreCmd> =
							  %% Line 113
							  [[59|[112|[108|[97|[99|[101|[32]]]]]]]|[MainW|[]]]
						      in  %% Line 114
							  case call 'gstk_generic':'make_command'
								   (NewOpts, _cor10, MainW, SimplePreCmd, %% Line 115
													  PlacePreCmd, _cor2, %% Line 115
															      Listbox) of
							    %% Line 116
							    <{'error',Reason}> when 'true' ->
								{'error',Reason}
							    %% Line 117
							    <Cmd>
								when call 'erlang':'is_list'
								      (Cmd) ->
								do  %% Line 118
								    call 'gstk':'exec'
									(Cmd)
								    do  %% Line 119
									call 'gstk':'exec'
									    ([MainW|[[46|[115|[121|[32|[99|[111|[110|[102|[32|[45|[114|[101|[108|[32|[115|[117|[110|[107|[101|[110|[32|[45|[98|[111|[32|[50|[59]]]]]]]]]]]]]]]]]]]]]]]]]]]|%% Line 120
																													   [MainW|[[46|[112|[97|[100|[46|[115|[120|[32|[99|[111|[110|[102|[32|[45|[114|[101|[108|[32|[115|[117|[110|[107|[101|[110|[32|[45|[98|[111|[32|[50|[59]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[Listbox|%% Line 121
																																																					[[32|[99|[111|[110|[102|[32|[45|[98|[111|[32|[50|[32|[45|[114|[101|[108|[105|[101|[102|[32|[115|[117|[110|[107|[101|[110|[32|[45|[104|[105|[103|[104|[108|[105|[103|[104|[116|[116|[104|[32|[50|[32|[45|[101|[120|[112|[111|[32|[48|[59]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
									_cor10
							    ( <_cor15> when 'true' ->
								  primop 'match_fail'
								      ({'case_clause',_cor15})
							      -| ['compiler_generated'] )
							  end
					      %% Line 124
					      <Bad_Result> when 'true' ->
						  %% Line 125
						  {'error',Bad_Result}
					    end
			    ( <_cor26> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','gstkid'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
		  ( <_cor5> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor5})
		    -| ['compiler_generated'] )
		end
'config'/3 =
    %% Line 138
    fun (_cor2,_cor1,_cor0) ->
	%% Line 139
	( case _cor1 of
	    ( <( {'gstkid',_cor18,_cor19,_rec1,_cor20,_cor21,_cor22}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 141
		  ( case _rec1 of
		      ( <( {'so',_cor30,_rec3,_cor31,_cor32,_cor33}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <NewOpts> =
				%% Line 142
				call 'gstk_generic':'parse_scrolls'
				    (_cor1, _cor0)
			    in  let <SimplePreCmd> =
				    %% Line 143
				    [_cor19|[[32|[99|[111|[110|[102]]]]]]]
				in  let <PlacePreCmd> =
					%% Line 144
					[[59|[112|[108|[97|[99|[101|[32]]]]]]]|[_cor19|[]]]
				    in  %% Line 145
					call 'gstk_generic':'mk_cmd_and_exec'
					    (NewOpts, _cor1, _cor19, %% Line 146
								     SimplePreCmd, %% Line 146
										   PlacePreCmd, _cor2, _rec3)
			-| ['compiler_generated'] )
		      ( <_cor34> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','so'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor23> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','gstkid'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'read'/3 =
    %% Line 157
    fun (_cor2,_cor1,_cor0) ->
	%% Line 158
	( case _cor1 of
	    ( <( {'gstkid',_cor11,_cor12,_rec4,_cor13,_cor14,_cor15}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 159
		  ( case _rec4 of
		      ( <( {'so',_cor17,_rec5,_cor18,_cor19,_cor20}
			   -| ['compiler_generated'] )> when 'true' ->
			    call 'gstk_generic':'read_option'
				(_cor2, _cor1, _cor0, _rec5)
			-| ['compiler_generated'] )
		      ( <_cor21> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','so'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor16> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','gstkid'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'delete'/2 =
    %% Line 170
    fun (_cor1,_cor0) ->
	do  %% Line 171
	    call 'gstk_db':'delete_widget'
		(_cor1, _cor0)
	    %% Line 172
	    ( case _cor0 of
		( <( {'gstkid',_cor5,_rec6,_cor6,_cor7,_cor8,_cor9}
		     -| ['compiler_generated'] )> when 'true' ->
		      _rec6
		  -| ['compiler_generated'] )
		( <_cor10> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','gstkid'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'event'/5 =
    %% Line 185
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <DB,Gstkid,'click',Edata,Args> when 'true' ->
	      %% Line 186
	      apply 'wid_event'/5
		  (DB, Gstkid, 'click', Edata, Args)
	  %% Line 187
	  <DB,Gstkid,'doubleclick',Edata,Args> when 'true' ->
	      %% Line 188
	      apply 'wid_event'/5
		  (DB, Gstkid, 'doubleclick', Edata, Args)
	  %% Line 189
	  <DB,Gstkid,Etype,Edata,Args> when 'true' ->
	      %% Line 190
	      call 'gstk_generic':'event'
		  (DB, Gstkid, Etype, Edata, Args)
	end
'wid_event'/5 =
    %% Line 194
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 195
	( case _cor3 of
	    ( <( {'gstkid',_cor21,_cor22,_rec7,_cor23,_cor24,_cor25}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 196
		  ( case _rec7 of
		      ( <( {'so',_cor27,_rec8,_cor28,_cor29,_cor30}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <CurIdx> =
				%% Line 197
				call 'tcl2erl':'ret_int'
				    ([_rec8|[[32|[105|[110|[100|[101|[120|[32|[97|[99|[116|[105|[118|[101|[59]]]]]]]]]]]]]]]])
			    in  let <CurTxt> =
				    %% Line 198
				    call 'tcl2erl':'ret_str'
					([_rec8|[[32|[103|[101|[116|[32|[97|[99|[116|[105|[118|[101|[59]]]]]]]]]]]]]])
				in  let <CurSel> =
					%% Line 199
					call 'tcl2erl':'ret_list'
					    ([_rec8|[[32|[99|[117|[114|[115|[101|[108|[101|[99|[116|[105|[111|[110|[59]]]]]]]]]]]]]]]])
				    in  let <_cor14> =
					    %% Line 200
					    call 'lists':'member'
						(CurIdx, CurSel)
					in  let <Arg2> =
						%% Line 200
						[CurIdx|[CurTxt|[_cor14|[]]]]
					    in  %% Line 201
						call 'gstk_generic':'event'
						    (_cor4, _cor3, _cor2, _cor1, Arg2)
			-| ['compiler_generated'] )
		      ( <_cor31> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','so'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor26> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','gstkid'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'option'/5 =
    %% Line 218
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 219
	case _cor4 of
	  %% Line 220
	  <{'items',Items}>
	      when call 'erlang':'is_list'
		    (Items) ->
	      let <_cor5> =
		  %% Line 221
		  apply 'item_list'/1
		      (Items)
	      in  %% Line 221
		  {'c',[_cor0|[[32|[100|[101|[108|[32|[48|[32|[101|[110|[100|[32|[59]]]]]]]]]]]]|[_cor0|[[32|[105|[110|[115|[32|[48|[32]]]]]]]|[_cor5|[]]]]]]}
	  %% Line 222
	  <{'selection',{From,To}}>
	      when let <_cor6> =
		    call 'erlang':'is_integer'
			(From)
		in  let <_cor7> =
			call 'erlang':'is_integer'
			    (To)
		    in  call 'erlang':'and'
			    (_cor6, _cor7) ->
	      let <_cor8> =
		  %% Line 223
		  call 'gstk':'to_ascii'
		      (From)
	      in  let <_cor9> =
		      %% Line 223
		      call 'gstk':'to_ascii'
			  (To)
		  in  %% Line 223
		      {'c',[_cor0|[[32|[115|[101|[108|[32|[115|[101|[116|[32]]]]]]]]]|[_cor8|[[32]|[_cor9|[]]]]]]}
	  %% Line 224
	  <{'font',Font}>
	      when call 'erlang':'is_tuple'
		    (Font) ->
	      do  %% Line 225
		  call 'gstk_db':'insert_opt'
		      (_cor1, _cor3, _cor4)
		  let <_cor10> =
		      %% Line 226
		      call 'gstk_font':'choose_ascii'
			  (_cor1, Font)
		  in  %% Line 226
		      {'c',[_cor0|[[32|[99|[111|[110|[102|[32|[45|[102|[111|[110|[116|[32]]]]]]]]]]]]|[_cor10|[]]]]}
	  %% Line 227
	  <{'selection','clear'}> when 'true' ->
	      %% Line 228
	      {'c',[_cor0|[[32|[115|[101|[108|[32|[99|[108|[101|[97|[114|[32|[48|[32|[101|[110|[100]]]]]]]]]]]]]]]]]]}
	  %% Line 229
	  <{'selection',Idx}>
	      when call 'erlang':'is_integer'
		    (Idx) ->
	      let <_cor11> =
		  %% Line 230
		  call 'gstk':'to_ascii'
		      (Idx)
	      in  %% Line 230
		  {'c',[_cor0|[[32|[115|[101|[108|[101|[99|[116|[32|[115|[101|[116|[32]]]]]]]]]]]]|[_cor11|[]]]]}
	  %% Line 231
	  <{'selectmode',Mode}> when 'true' ->
	      let <_cor12> =
		  %% Line 232
		  call 'gstk':'to_ascii'
		      (Mode)
	      in  %% Line 232
		  {'c',[_cor0|[[32|[99|[111|[110|[102|[32|[45|[115|[101|[108|[101|[99|[116|[109|[32]]]]]]]]]]]]]]]|[_cor12|[]]]]}
	  %% Line 233
	  <{'xselection',Bool}> when 'true' ->
	      let <_cor13> =
		  %% Line 234
		  call 'gstk':'to_ascii'
		      (Bool)
	      in  %% Line 234
		  {'c',[_cor0|[[32|[99|[111|[110|[102|[32|[45|[101|[120|[112|[111|[114|[116|[115|[101|[32]]]]]]]]]]]]]]]]|[_cor13|[]]]]}
	  %% Line 235
	  <{'fg',Color}> when 'true' ->
	      let <_cor14> =
		  %% Line 236
		  call 'gstk':'to_color'
		      (Color)
	      in  %% Line 236
		  {'c',[_cor0|[[32|[99|[111|[110|[102|[32|[45|[102|[103|[32]]]]]]]]]]|[_cor14|[]]]]}
	  %% Line 238
	  <{'del',{From,To}}> when 'true' ->
	      let <_cor15> =
		  %% Line 239
		  call 'erlang':'integer_to_list'
		      (From)
	      in  let <_cor16> =
		      %% Line 240
		      call 'erlang':'integer_to_list'
			  (To)
		  in  %% Line 239
		      {'c',[_cor0|[[32|[100|[101|[108|[32]]]]]|[_cor15|[[32]|%% Line 240
									     [_cor16|[]]]]]]}
	  %% Line 241
	  <{'del',Idx}> when 'true' ->
	      let <_cor17> =
		  %% Line 242
		  call 'erlang':'integer_to_list'
		      (Idx)
	      in  %% Line 242
		  {'c',[_cor0|[[32|[100|[101|[108|[32]]]]]|[_cor17|[]]]]}
	  %% Line 243
	  <'clear'> when 'true' ->
	      {'c',[_cor0|[[32|[100|[101|[108|[32|[48|[32|[101|[110|[100]]]]]]]]]]]]}
	  %% Line 244
	  <{'add',{Idx,Str}}> when 'true' ->
	      let <_cor18> =
		  %% Line 245
		  call 'erlang':'integer_to_list'
		      (Idx)
	      in  let <_cor19> =
		      %% Line 246
		      call 'gstk':'to_ascii'
			  (Str)
		  in  %% Line 245
		      {'c',[_cor0|[[32|[105|[110|[115|[32]]]]]|[_cor18|[[32]|%% Line 246
									     [_cor19|[]]]]]]}
	  %% Line 247
	  <{'add',Str}> when 'true' ->
	      let <_cor20> =
		  %% Line 248
		  call 'gstk':'to_ascii'
		      (Str)
	      in  %% Line 248
		  {'c',[_cor0|[[32|[105|[110|[115|[32|[101|[110|[100|[32]]]]]]]]]|[_cor20|[]]]]}
	  %% Line 249
	  <{'change',{Idx,Str}}> when 'true' ->
	      let <_cor21> =
		  %% Line 250
		  call 'erlang':'integer_to_list'
		      (Idx)
	      in  let <_cor22> =
		      %% Line 251
		      call 'erlang':'integer_to_list'
			  (Idx)
		  in  let <_cor23> =
			  %% Line 252
			  call 'gstk':'to_ascii'
			      (Str)
		      in  %% Line 250
			  {'c',[_cor0|[[32|[100|[101|[108|[32]]]]]|[_cor21|[59|%% Line 251
									       [_cor0|[[32|[105|[110|[115|[32]]]]]|[_cor22|[[32]|%% Line 252
																 [_cor23|[]]]]]]]]]]}
	  %% Line 253
	  <{'see',Idx}> when 'true' ->
	      let <_cor24> =
		  %% Line 254
		  call 'gstk':'to_ascii'
		      (Idx)
	      in  %% Line 254
		  {'c',[_cor0|[[32|[115|[101|[101|[32]]]]]|[_cor24|[]]]]}
	  %% Line 256
	  <{'setfocus','true'}> when 'true' ->
	      {'c',[[102|[111|[99|[117|[115|[32]]]]]]|[_cor2|[]]]}
	  %% Line 257
	  <{'setfocus','false'}> when 'true' ->
	      {'c',[[102|[111|[99|[117|[115|[32|[46]]]]]]]]}
	  %% Line 259
	  <{'click',On}> when 'true' ->
	      apply 'cbind'/5
		  (_cor1, _cor3, _cor0, 'click', On)
	  %% Line 260
	  <{'doubleclick',On}> when 'true' ->
	      apply 'cbind'/5
		  (_cor1, _cor3, _cor0, 'doubleclick', On)
	  %% Line 261
	  <_cor31> when 'true' ->
	      'invalid_option'
	end
'read_option'/5 =
    %% Line 275
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 276
	case _cor4 of
	  %% Line 277
	  <'fg'> when 'true' ->
	      call 'tcl2erl':'ret_color'
		  ([_cor0|[[32|[99|[103|[32|[45|[102|[103]]]]]]]]])
	  %% Line 278
	  <'font'> when 'true' ->
	      call 'gstk_db':'opt'
		  (_cor1, _cor3, 'font', 'undefined')
	  %% Line 279
	  <'selection'> when 'true' ->
	      call 'tcl2erl':'ret_list'
		  ([_cor0|[[32|[99|[117|[114|[115|[101|[108|[101|[99|[116|[105|[111|[110]]]]]]]]]]]]]]])
	  %% Line 280
	  <'setfocus'> when 'true' ->
	      call 'tcl2erl':'ret_focus'
		  (_cor0, [102|[111|[99|[117|[115]]]]])
	  %% Line 282
	  <'items'> when 'true' ->
	      call 'tcl2erl':'ret_str_list'
		  ([_cor0|[[32|[103|[101|[116|[32|[48|[32|[101|[110|[100]]]]]]]]]]]])
	  %% Line 283
	  <'selectmode'> when 'true' ->
	      call 'tcl2erl':'ret_atom'
		  ([_cor0|[[32|[99|[103|[32|[45|[115|[101|[108|[101|[99|[116|[109|[111|[100|[101]]]]]]]]]]]]]]]]])
	  %% Line 284
	  <'size'> when 'true' ->
	      call 'tcl2erl':'ret_int'
		  ([_cor0|[[32|[115|[105|[122|[101]]]]]]])
	  %% Line 285
	  <'xselection'> when 'true' ->
	      call 'tcl2erl':'ret_bool'
		  ([_cor0|[[32|[99|[103|[32|[45|[101|[120|[112|[111|[114|[116|[115|[101|[108]]]]]]]]]]]]]]]])
	  %% Line 286
	  <{'get',Idx}> when 'true' ->
	      let <_cor5> =
		  call 'gstk':'to_ascii'
		      (Idx)
	      in  call 'tcl2erl':'ret_str'
		      ([_cor0|[[32|[103|[101|[116|[32]]]]]|[_cor5|[]]]])
	  %% Line 287
	  <'click'> when 'true' ->
	      call 'gstk_db':'is_inserted'
		  (_cor1, _cor3, 'click')
	  %% Line 288
	  <'doubleclick'> when 'true' ->
	      call 'gstk_db':'is_inserted'
		  (_cor1, _cor3, 'doubleclick')
	  %% Line 290
	  <_cor14> when 'true' ->
	      ( case _cor3 of
		  ( <( {'gstkid',_cor15,_cor16,_cor17,_cor18,_cor19,_rec9}
		       -| ['compiler_generated'] )> when 'true' ->
			{'bad_result',{_rec9,'invalid_option',_cor4}}
		    -| ['compiler_generated'] )
		  ( <_cor20> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','gstkid'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'item_list'/1 =
    %% Line 298
    fun (_cor0) ->
	case _cor0 of
	  <[H|T]> when 'true' ->
	      let <_cor1> =
		  %% Line 299
		  call 'gstk':'to_ascii'
		      (H)
	      in  let <_cor2> =
		      %% Line 299
		      apply 'item_list'/1
			  (T)
		  in  %% Line 299
		      [_cor1|[32|_cor2]]
	  %% Line 300
	  <[]> when 'true' ->
	      %% Line 301
	      []
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'item_list',1}}] )
	    -| ['compiler_generated'] )
	end
'cbind'/5 =
    %% Line 303
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <DB,Gstkid,Listbox,Etype,{'true',Edata}> when 'true' ->
	      let <_cor6> =
		  %% Line 304
		  case Etype of
		    %% Line 305
		    <'click'> when 'true' ->
			[32|[60|[66|[117|[116|[116|[111|[110|[82|[101|[108|[101|[97|[115|[101|[45|[49|[62|[32]]]]]]]]]]]]]]]]]]]
		    %% Line 306
		    <'doubleclick'> when 'true' ->
			[32|[60|[68|[111|[117|[98|[108|[101|[45|[66|[117|[116|[116|[111|[110|[82|[101|[108|[101|[97|[115|[101|[45|[49|[62|[32]]]]]]]]]]]]]]]]]]]]]]]]]]
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor5})
		      -| ['compiler_generated'] )
		  end
	      in  let <Eref> =
		      %% Line 308
		      call 'gstk_db':'insert_event'
			  (DB, Gstkid, Etype, Edata)
		  in  %% Line 309
		      {'c',[[98|[105|[110|[100|[32]]]]]|[Listbox|[_cor6|[[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]|[Eref|[[32|[125]]]]]]]]}
	  %% Line 311
	  <DB,Gstkid,Listbox,Etype,'true'> when 'true' ->
	      %% Line 312
	      apply 'cbind'/5
		  (DB, Gstkid, Listbox, Etype, {'true',[]})
	  %% Line 314
	  <DB,Gstkid,Listbox,Etype,_X_On> when 'true' ->
	      let <_cor10> =
		  %% Line 315
		  case Etype of
		    %% Line 316
		    <'click'> when 'true' ->
			[32|[60|[66|[117|[116|[116|[111|[110|[45|[49|[62|[32|[123|[125]]]]]]]]]]]]]]
		    %% Line 317
		    <'doubleclick'> when 'true' ->
			[32|[60|[68|[111|[117|[98|[108|[101|[45|[66|[117|[116|[116|[111|[110|[45|[49|[62|[32|[123|[125]]]]]]]]]]]]]]]]]]]]]
		    ( <_cor9> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor9})
		      -| ['compiler_generated'] )
		  end
	      in  do  %% Line 319
		      call 'gstk_db':'delete_event'
			  (DB, Gstkid, Etype)
		      %% Line 320
		      {'c',[[98|[105|[110|[100|[32]]]]]|[Listbox|[_cor10|[]]]]}
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('gstk_listbox')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('gstk_listbox', _cor0)
end