module 'gstk_scale' ['config'/3,
		     'create'/3,
		     'delete'/2,
		     'event'/5,
		     'module_info'/0,
		     'module_info'/1,
		     'option'/5,
		     'read'/3,
		     'read_option'/5]
    attributes []
'create'/3 =
    %% Line 86
    fun (_cor2,_cor1,_cor0) ->
	let <TkW> =
	    %% Line 87
	    call 'gstk_generic':'mk_tkw_child'
		(_cor2, _cor1)
	in  let <PlacePreCmd> =
		%% Line 88
		[[59|[112|[108|[97|[99|[101|[32]]]]]]]|[TkW|[]]]
	    in  %% Line 89
		case _cor1 of
		  <{'gstkid',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18}> when 'true' ->
		      let <_cor7> =
			  call 'erlang':'setelement'
			      (3, _cor1, TkW)
		      in  %% Line 90
			  case call 'gstk_generic':'make_command'
				   (_cor0, _cor7, TkW, [], PlacePreCmd, _cor2) of
			    %% Line 91
			    <{'error',Reason}> when 'true' ->
				{'error',Reason}
			    %% Line 92
			    <Cmd>
				when call 'erlang':'is_list'
				      (Cmd) ->
				do  %% Line 93
				    call 'gstk':'exec'
					([[115|[99|[97|[108|[101|[32]]]]]]|[TkW|[Cmd|[59|[TkW|%% Line 94
											      [[32|[99|[111|[110|[102|[32|[45|[98|[111|[32|[50|[32|[45|[115|[108|[105|[100|[101|[114|[114|[101|[108|[105|[101|[102|[32|[114|[97|[105|[115|[101|[100|[32|[45|[104|[105|[103|[104|[108|[105|[103|[104|[116|[116|[104|[32|[50]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				    _cor7
			    ( <_cor9> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor9})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor19> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','gstkid'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
'config'/3 =
    %% Line 107
    fun (_cor2,_cor1,_cor0) ->
	%% Line 108
	( case _cor1 of
	    ( <( {'gstkid',_cor11,_rec1,_cor12,_cor13,_cor14,_cor15}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <SimplePreCmd> =
		      %% Line 109
		      [_rec1|[[32|[99|[111|[110|[102]]]]]]]
		  in  let <PlacePreCmd> =
			  %% Line 110
			  [[59|[112|[108|[97|[99|[101|[32]]]]]]]|[_rec1|[]]]
		      in  %% Line 111
			  call 'gstk_generic':'mk_cmd_and_exec'
			      (_cor0, _cor1, _rec1, SimplePreCmd, PlacePreCmd, _cor2)
	      -| ['compiler_generated'] )
	    ( <_cor16> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','gstkid'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'read'/3 =
    %% Line 122
    fun (_cor2,_cor1,_cor0) ->
	%% Line 123
	call 'gstk_generic':'read_option'
	    (_cor2, _cor1, _cor0)
'delete'/2 =
    %% Line 134
    fun (_cor1,_cor0) ->
	do  %% Line 135
	    call 'gstk_db':'delete_widget'
		(_cor1, _cor0)
	    %% Line 136
	    ( case _cor0 of
		( <( {'gstkid',_cor5,_rec2,_cor6,_cor7,_cor8,_cor9}
		     -| ['compiler_generated'] )> when 'true' ->
		      _rec2
		  -| ['compiler_generated'] )
		( <_cor10> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','gstkid'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'event'/5 =
    %% Line 138
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 139
	call 'gstk_generic':'event'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'option'/5 =
    %% Line 152
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 153
	case _cor4 of
	  %% Line 154
	  <{'activebg',Color}> when 'true' ->
	      let <_cor5> =
		  call 'gstk':'to_color'
		      (Color)
	      in  {'s',[[32|[45|[97|[99|[116|[105|[118|[101|[98|[32]]]]]]]]]]|[_cor5|[]]]}
	  %% Line 155
	  <{'orient',How}> when 'true' ->
	      let <_cor6> =
		  call 'gstk':'to_ascii'
		      (How)
	      in  {'s',[[32|[45|[111|[114|[32]]]]]|[_cor6|[]]]}
	  %% Line 156
	  <{'range',{From,To}}> when 'true' ->
	      let <_cor7> =
		  call 'gstk':'to_ascii'
		      (From)
	      in  let <_cor8> =
		      %% Line 157
		      call 'gstk':'to_ascii'
			  (To)
		  in  {'s',[[32|[45|[102|[114|[32]]]]]|[_cor7|%% Line 157
							      [[32|[45|[116|[111|[32]]]]]|[_cor8|[]]]]]}
	  %% Line 158
	  <{'relief',Relief}> when 'true' ->
	      let <_cor9> =
		  call 'gstk':'to_ascii'
		      (Relief)
	      in  {'s',[[32|[45|[114|[101|[108|[32]]]]]]|[_cor9|[]]]}
	  %% Line 159
	  <{'bw',Wth}> when 'true' ->
	      let <_cor10> =
		  call 'gstk':'to_ascii'
		      (Wth)
	      in  {'s',[[32|[45|[98|[100|[32]]]]]|[_cor10|[]]]}
	  %% Line 160
	  <{'text',String}> when 'true' ->
	      let <_cor11> =
		  call 'gstk':'to_ascii'
		      (String)
	      in  {'s',[[32|[45|[108|[97|[32]]]]]|[_cor11|[]]]}
	  %% Line 161
	  <{'showvalue',Bool}> when 'true' ->
	      let <_cor12> =
		  call 'gstk':'to_ascii'
		      (Bool)
	      in  {'s',[[32|[45|[115|[104|[111|[119|[118|[97|[108|[117|[101|[32]]]]]]]]]]]]|[_cor12|[]]]}
	  %% Line 162
	  <{'pos',Pos}> when 'true' ->
	      let <_cor13> =
		  call 'gstk':'to_ascii'
		      (Pos)
	      in  {'c',[_cor2|[[32|[115|[101|[116|[32]]]]]|[_cor13|[]]]]}
	  %% Line 163
	  <{'click',On}> when 'true' ->
	      apply 'cbind'/4
		  (_cor1, _cor3, 'click', On)
	  %% Line 164
	  <_cor21> when 'true' ->
	      'invalid_option'
	end
'read_option'/5 =
    %% Line 177
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 178
	case _cor4 of
	  %% Line 179
	  <'activebg'> when 'true' ->
	      call 'tcl2erl':'ret_color'
		  ([_cor2|[[32|[99|[103|[32|[45|[97|[99|[116|[105|[118|[101|[98]]]]]]]]]]]]]])
	  %% Line 180
	  <'orient'> when 'true' ->
	      call 'tcl2erl':'ret_atom'
		  ([_cor2|[[32|[99|[103|[32|[45|[111|[114|[105]]]]]]]]]])
	  %% Line 181
	  <'range'> when 'true' ->
	      %% Line 182
	      call 'tcl2erl':'ret_tuple'
		  ([[108|[105|[115|[116|[32|[91]]]]]]|[_cor2|[[32|[99|[103|[32|[45|[102|[114|[93|[32|[91]]]]]]]]]]|[_cor2|[[32|[99|[103|[32|[45|[116|[111|[93]]]]]]]]]]]]])
	  %% Line 183
	  <'bw'> when 'true' ->
	      call 'tcl2erl':'ret_int'
		  ([_cor2|[[32|[99|[103|[32|[45|[98|[100]]]]]]]]])
	  %% Line 184
	  <'relief'> when 'true' ->
	      call 'tcl2erl':'ret_atom'
		  ([_cor2|[[32|[99|[103|[32|[45|[114|[101|[108|[105]]]]]]]]]]])
	  %% Line 185
	  <'text'> when 'true' ->
	      call 'tcl2erl':'ret_str'
		  ([_cor2|[[32|[99|[103|[32|[45|[108|[97|[98]]]]]]]]]])
	  %% Line 186
	  <'showvalue'> when 'true' ->
	      call 'tcl2erl':'ret_bool'
		  ([_cor2|[[32|[99|[103|[32|[45|[115|[104|[111|[119|[118|[97|[108|[117|[101]]]]]]]]]]]]]]]])
	  %% Line 187
	  <'pos'> when 'true' ->
	      call 'tcl2erl':'ret_int'
		  ([_cor2|[[32|[103|[101|[116]]]]]])
	  %% Line 188
	  <'click'> when 'true' ->
	      call 'gstk_db':'is_inserted'
		  (_cor1, _cor3, 'click')
	  %% Line 189
	  <_cor14> when 'true' ->
	      ( case _cor3 of
		  ( <( {'gstkid',_cor15,_cor16,_cor17,_cor18,_cor19,_rec3}
		       -| ['compiler_generated'] )> when 'true' ->
			{'bad_result',{_rec3,'invalid_option',_cor4}}
		    -| ['compiler_generated'] )
		  ( <_cor20> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','gstkid'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'cbind'/4 =
    %% Line 200
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 201
	    case _cor0 of
	      %% Line 202
	      <{'true',Edata}> when 'true' ->
		  let <Eref> =
		      %% Line 203
		      call 'gstk_db':'insert_event'
			  (_cor3, _cor2, _cor1, Edata)
		  in  %% Line 204
		      [[32|[45|[99|[111|[109|[109|[97|[110|[100|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]|[Eref|[[125]]]]
	      %% Line 205
	      <'true'> when 'true' ->
		  let <Eref> =
		      %% Line 206
		      call 'gstk_db':'insert_event'
			  (_cor3, _cor2, _cor1, [])
		  in  %% Line 207
		      [[32|[45|[99|[111|[109|[109|[97|[110|[100|[32|[123|[101|[114|[108|[115|[101|[110|[100|[32]]]]]]]]]]]]]]]]]]]|[Eref|[[125]]]]
	      %% Line 208
	      <_X_Other> when 'true' ->
		  do  %% Line 209
		      call 'gstk_db':'delete_event'
			  (_cor3, _cor2, _cor1)
		      %% Line 210
		      [32|[45|[99|[111|[109|[109|[97|[110|[100|[32|[123|[125]]]]]]]]]]]]
	    end
	in  %% Line 212
	    {'s',_cor7}
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('gstk_scale')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('gstk_scale', _cor0)
end