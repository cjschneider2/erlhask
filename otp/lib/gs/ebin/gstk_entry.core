module 'gstk_entry' ['config'/3,
		     'create'/3,
		     'delete'/2,
		     'event'/5,
		     'module_info'/0,
		     'module_info'/1,
		     'option'/5,
		     'read'/3,
		     'read_option'/5]
    attributes []
'create'/3 =
    %% Line 102
    fun (_cor2,_cor1,_cor0) ->
	let <TkW> =
	    %% Line 103
	    call 'gstk_generic':'mk_tkw_child'
		(_cor2, _cor1)
	in  let <PlacePreCmd> =
		%% Line 104
		[[59|[112|[108|[97|[99|[101|[32]]]]]]]|[TkW|[]]]
	    in  %% Line 105
		case _cor1 of
		  <{'gstkid',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19}> when 'true' ->
		      let <_cor7> =
			  call 'erlang':'setelement'
			      (3, _cor1, TkW)
		      in  %% Line 106
			  case call 'gstk_generic':'make_command'
				   (_cor0, _cor7, TkW, [], PlacePreCmd, _cor2) of
			    %% Line 107
			    <{'error',Reason}> when 'true' ->
				{'error',Reason}
			    %% Line 108
			    <Cmd>
				when call 'erlang':'is_list'
				      (Cmd) ->
				%% Line 109
				case call 'gstk':'call'
					 ([[101|[110|[116|[114|[121|[32]]]]]]|[TkW|[Cmd|[]]]]) of
				  %% Line 110
				  <{'result',_cor21}> when 'true' ->
				      do  %% Line 111
					  call 'gstk':'exec'
					      (%% Line 112
					       [TkW|[[32|[99|[111|[110|[102|[32|[45|[98|[111|[32|[50|[32|[45|[114|[101|[108|[105|[101|[102|[32|[115|[117|[110|[107|[101|[110|[32|[45|[104|[105|[103|[104|[108|[105|[103|[104|[116|[116|[104|[32|[50|[59]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
					  _cor7
				  %% Line 114
				  <Bad_Result> when 'true' ->
				      %% Line 115
				      {'error',Bad_Result}
				end
			    ( <_cor10> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor10})
			      -| ['compiler_generated'] )
			  end
		  ( <_cor20> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','gstkid'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
'config'/3 =
    %% Line 129
    fun (_cor2,_cor1,_cor0) ->
	%% Line 130
	( case _cor1 of
	    ( <( {'gstkid',_cor11,_rec1,_cor12,_cor13,_cor14,_cor15}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <SimplePreCmd> =
		      %% Line 131
		      [_rec1|[[32|[99|[111|[110|[102]]]]]]]
		  in  let <PlacePreCmd> =
			  %% Line 132
			  [[59|[112|[108|[97|[99|[101|[32]]]]]]]|[_rec1|[]]]
		      in  %% Line 133
			  call 'gstk_generic':'mk_cmd_and_exec'
			      (_cor0, _cor1, _rec1, SimplePreCmd, PlacePreCmd, _cor2)
	      -| ['compiler_generated'] )
	    ( <_cor16> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','gstkid'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'read'/3 =
    %% Line 144
    fun (_cor2,_cor1,_cor0) ->
	%% Line 145
	call 'gstk_generic':'read_option'
	    (_cor2, _cor1, _cor0)
'delete'/2 =
    %% Line 156
    fun (_cor1,_cor0) ->
	do  %% Line 157
	    call 'gstk_db':'delete_widget'
		(_cor1, _cor0)
	    %% Line 158
	    ( case _cor0 of
		( <( {'gstkid',_cor5,_rec2,_cor6,_cor7,_cor8,_cor9}
		     -| ['compiler_generated'] )> when 'true' ->
		      _rec2
		  -| ['compiler_generated'] )
		( <_cor10> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','gstkid'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'event'/5 =
    %% Line 161
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 162
	call 'gstk_generic':'event'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'option'/5 =
    %% Line 178
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 179
	case _cor4 of
	  %% Line 180
	  <{'font',Font}> when 'true' ->
	      do  %% Line 181
		  call 'gstk_db':'insert_opt'
		      (_cor1, _cor3, _cor4)
		  let <_cor5> =
		      %% Line 182
		      call 'gstk_font':'choose_ascii'
			  (_cor1, Font)
		  in  %% Line 182
		      {'s',[[32|[45|[102|[111|[110|[116|[32]]]]]]]|[_cor5|[]]]}
	  %% Line 183
	  <{'insertbg',Color}> when 'true' ->
	      let <_cor6> =
		  call 'gstk':'to_color'
		      (Color)
	      in  {'s',[[32|[45|[105|[110|[115|[101|[114|[116|[98|[97|[32]]]]]]]]]]]|[_cor6|[]]]}
	  %% Line 184
	  <{'insertbw',Width}> when 'true' ->
	      let <_cor7> =
		  call 'gstk':'to_ascii'
		      (Width)
	      in  {'s',[[32|[45|[105|[110|[115|[101|[114|[116|[98|[111|[32]]]]]]]]]]]|[_cor7|[]]]}
	  %% Line 185
	  <{'justify',How}> when 'true' ->
	      let <_cor8> =
		  call 'gstk':'to_ascii'
		      (How)
	      in  {'s',[[32|[45|[106|[117|[32]]]]]|[_cor8|[]]]}
	  %% Line 186
	  <{'text',Str}> when 'true' ->
	      let <_cor9> =
		  %% Line 187
		  call 'gstk':'to_ascii'
		      (Str)
	      in  %% Line 187
		  {'c',[_cor2|[[32|[100|[101|[108|[32|[48|[32|[101|[110|[100|[59|[32]]]]]]]]]]]]|[_cor2|[[32|[105|[110|[115|[32|[48|[32]]]]]]]|[_cor9|[]]]]]]}
	  %% Line 188
	  <{'xselection',Bool}> when 'true' ->
	      let <_cor10> =
		  call 'gstk':'to_ascii'
		      (Bool)
	      in  {'s',[[32|[45|[101|[120|[112|[111|[114|[116|[115|[101|[32]]]]]]]]]]]|[_cor10|[]]]}
	  %% Line 190
	  <{'delete',{From,To}}> when 'true' ->
	      let <_cor11> =
		  %% Line 191
		  apply 'p_index'/1
		      (From)
	      in  let <_cor12> =
		      %% Line 191
		      apply 'p_index'/1
			  (To)
		  in  %% Line 191
		      {'c',[_cor2|[[32|[100|[101|[108|[32]]]]]|[_cor11|[32|[_cor12|[]]]]]]}
	  %% Line 192
	  <{'delete',Index}> when 'true' ->
	      let <_cor13> =
		  apply 'p_index'/1
		      (Index)
	      in  {'c',[_cor2|[[32|[100|[101|[32]]]]|[_cor13|[]]]]}
	  %% Line 193
	  <{'insert',{Idx,Str}}> when 'true' ->
	      let <_cor14> =
		  %% Line 194
		  call 'gstk':'to_ascii'
		      (Idx)
	      in  let <_cor15> =
		      %% Line 194
		      call 'gstk':'to_ascii'
			  (Str)
		  in  %% Line 194
		      {'c',[_cor2|[[32|[105|[110|[115|[32]]]]]|[_cor14|[32|[_cor15|[]]]]]]}
	  %% Line 195
	  <{'select','clear'}> when 'true' ->
	      {'c',[_cor2|[[32|[115|[101|[108|[32|[99|[108|[101|[97|[114]]]]]]]]]]]]}
	  %% Line 196
	  <{'select',{From,To}}> when 'true' ->
	      let <_cor16> =
		  %% Line 197
		  apply 'p_index'/1
		      (From)
	      in  let <_cor17> =
		      %% Line 197
		      apply 'p_index'/1
			  (To)
		  in  %% Line 197
		      {'c',[_cor2|[[32|[115|[101|[108|[32|[114|[97|[110|[103|[101|[32]]]]]]]]]]]|[_cor16|[32|[_cor17|[]]]]]]}
	  %% Line 198
	  <_cor25> when 'true' ->
	      'invalid_option'
	end
'read_option'/5 =
    %% Line 212
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 213
	case _cor4 of
	  %% Line 214
	  <'insertbg'> when 'true' ->
	      call 'tcl2erl':'ret_color'
		  ([_cor2|[[32|[99|[103|[32|[45|[105|[110|[115|[101|[114|[116|[98|[97]]]]]]]]]]]]]]])
	  %% Line 215
	  <'insertbw'> when 'true' ->
	      call 'tcl2erl':'ret_int'
		  ([_cor2|[[32|[99|[103|[32|[45|[105|[110|[115|[101|[114|[116|[98|[111]]]]]]]]]]]]]]])
	  %% Line 216
	  <'font'> when 'true' ->
	      call 'gstk_db':'opt'
		  (_cor1, _cor3, 'font', 'undefined')
	  %% Line 217
	  <'justify'> when 'true' ->
	      call 'tcl2erl':'ret_atom'
		  ([_cor2|[[32|[99|[103|[32|[45|[106|[117|[115]]]]]]]]]])
	  %% Line 218
	  <'text'> when 'true' ->
	      call 'tcl2erl':'ret_str'
		  ([_cor2|[[32|[103|[101|[116]]]]]])
	  %% Line 219
	  <'xselection'> when 'true' ->
	      call 'tcl2erl':'ret_bool'
		  ([_cor2|[[32|[99|[103|[32|[45|[101|[120|[112|[111|[114|[116|[115]]]]]]]]]]]]]])
	  %% Line 220
	  <{'index',Idx}> when 'true' ->
	      let <_cor5> =
		  apply 'p_index'/1
		      (Idx)
	      in  call 'tcl2erl':'ret_int'
		      ([_cor2|[[99|[103|[32|[105|[110|[100|[32]]]]]]]|[_cor5|[]]]])
	  %% Line 221
	  <_cor15> when 'true' ->
	      ( case _cor3 of
		  ( <( {'gstkid',_cor16,_cor17,_cor18,_cor19,_cor20,_rec3}
		       -| ['compiler_generated'] )> when 'true' ->
			{'bad_result',{_rec3,'invalid_option',_cor4}}
		    -| ['compiler_generated'] )
		  ( <_cor21> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','gstkid'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'p_index'/1 =
    %% Line 227
    fun (_cor0) ->
	case _cor0 of
	  <Index>
	      when call 'erlang':'is_integer'
		    (_cor0) ->
	      call 'gstk':'to_ascii'
		  (Index)
	  %% Line 228
	  <'insert'> when 'true' ->
	      [105|[110|[115|[101|[114|[116]]]]]]
	  %% Line 229
	  <'last'> when 'true' ->
	      [101|[110|[100]]]
	  %% Line 230
	  <Idx> when 'true' ->
	      do  call 'gs':'error'
		      ([66|[97|[100|[32|[105|[110|[100|[101|[120|[32|[105|[110|[32|[101|[110|[116|[114|[121|[58|[32|[126|[119|[126|[110]]]]]]]]]]]]]]]]]]]]]]]], [Idx|[]])
		  0
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('gstk_entry')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('gstk_entry', _cor0)
end