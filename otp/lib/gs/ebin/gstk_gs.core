module 'gstk_gs' ['config'/3,
		  'mk_create_opts_for_child'/4,
		  'module_info'/0,
		  'module_info'/1,
		  'option'/5,
		  'read'/3,
		  'read_option'/5]
    attributes []
'mk_create_opts_for_child'/4 =
    %% Line 37
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 38
	call 'gstk_generic':'mk_create_opts_for_child'
	    (_cor3, _cor2, _cor1, _cor0)
'config'/3 =
    %% Line 40
    fun (_cor2,_cor1,_cor0) ->
	let <Cmd> =
	    %% Line 41
	    call 'gstk_generic':'make_command'
		(_cor0, _cor1, [], _cor2)
	in  do  %% Line 42
		call 'gstk':'exec'
		    (Cmd)
		%% Line 43
		'ok'
'read'/3 =
    %% Line 45
    fun (_cor2,_cor1,_cor0) ->
	%% Line 46
	call 'gstk_generic':'read_option'
	    (_cor2, _cor1, _cor0)
'read_option'/5 =
    %% Line 49
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 50
	( case _cor3 of
	    ( <( {'gstkid',_cor13,_cor14,_cor15,_cor16,_cor17,_rec0}
		 -| ['compiler_generated'] )> when 'true' ->
		  {'bad_result',{_rec0,'invalid_option',_cor4}}
	      -| ['compiler_generated'] )
	    ( <_cor18> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','gstkid'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'option'/5 =
    %% Line 52
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 53
	'invalid_option'
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('gstk_gs')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('gstk_gs', _cor0)
end