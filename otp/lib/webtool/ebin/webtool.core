module 'webtool' ['code_change'/3,
		  'debug'/1,
		  'debug_app'/1,
		  'get_tools1'/1,
		  'handle_call'/3,
		  'handle_cast'/2,
		  'handle_info'/2,
		  'init'/1,
		  'is_localhost'/0,
		  'module_info'/0,
		  'module_info'/1,
		  'script_start'/0,
		  'script_start'/1,
		  'start'/0,
		  'start'/2,
		  'start_tools'/2,
		  'started_tools'/2,
		  'stop'/0,
		  'stop_debug'/0,
		  'stop_tools'/2,
		  'terminate'/2,
		  'toolbar'/2]
    attributes [%% Line 20
		'behaviour' =
		    %% Line 20
		    ['gen_server'],
		%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','file_info'},[{'typed_record_field',{'record_field',25,{'atom',25,'size'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'type'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'device'}|[{'atom',26,'directory'}|[{'atom',26,'other'}|[{'atom',26,'regular'}|[{'atom',26,'symlink'}]]]]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'access'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'atom',27,'read'}|[{'atom',27,'write'}|[{'atom',27,'read_write'}|[{'atom',27,'none'}]]]]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'atime'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'remote_type',28,[{'atom',28,'file'}|[{'atom',28,'date_time'}|[[]]]]}|[{'type',28,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'mtime'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'remote_type',32,[{'atom',32,'file'}|[{'atom',32,'date_time'}|[[]]]]}|[{'type',32,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',34,{'atom',34,'ctime'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'remote_type',34,[{'atom',34,'file'}|[{'atom',34,'date_time'}|[[]]]]}|[{'type',34,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',40,{'atom',40,'mode'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'links'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',46,{'atom',46,'major_device'}},{'type',46,'union',[{'atom',46,'undefined'}|[{'type',46,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'minor_device'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'inode'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',54,{'atom',54,'uid'}},{'type',54,'union',[{'atom',54,'undefined'}|[{'type',54,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',55,{'atom',55,'gid'}},{'type',55,'union',[{'atom',55,'undefined'}|[{'type',55,'non_neg_integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','file_descriptor'},[{'typed_record_field',{'record_field',59,{'atom',59,'module'}},{'type',59,'union',[{'atom',59,'undefined'}|[{'type',59,'module',[]}]]}}|[{'typed_record_field',{'record_field',60,{'atom',60,'data'}},{'type',60,'union',[{'atom',60,'undefined'}|[{'type',60,'term',[]}]]}}]],[]}],
		%% Line 57
		'type' =
		    %% Line 57
		    [{{'record','state'},[{'record_field',57,{'atom',57,'priv_dir'}}|[{'record_field',57,{'atom',57,'app_data'}}|[{'record_field',57,{'atom',57,'supvis'}}|[{'record_field',57,{'atom',57,'web_data'}}|[{'record_field',57,{'atom',57,'started'},{'nil',57}}]]]]],[]}]]
'debug'/1 =
    %% Line 85
    fun (_cor0) ->
	do  %% Line 86
	    call 'ttb':'tracer'
		('all', [{'file',[119|[101|[98|[116|[111|[111|[108|[46|[116|[114|[99]]]]]]]]]]]}])
	    do  %% Line 87
		call 'ttb':'p'
		    ('all', ['call'|['timestamp']])
		do  %% Line 89
		    apply 'tp'/2
			(_cor0, [{'_',[],[{'return_trace'}|[{'message',{'caller'}}]]}])
		    do  %% Line 90
			call 'ttb':'ctp'
			    ('webtool', 'stop_debug')
			%% Line 91
			'ok'
'tp'/2 =
    %% Line 92
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'local',MS> when 'true' ->
	      %% Line 93
	      call 'ttb':'tpl'
		  ('webtool', MS)
	  %% Line 94
	  <'global',MS> when 'true' ->
	      %% Line 95
	      call 'ttb':'tp'
		  ('webtool', MS)
	  %% Line 96
	  <[{M,F,A}|T],MS> when 'true' ->
	      do  %% Line 97
		  call 'ttb':'tpl'
		      (M, F, A, MS)
		  %% Line 98
		  apply 'tp'/2
		      (T, MS)
	  %% Line 99
	  <[{M,F}|T],MS>
	      when call 'erlang':'is_atom'
		    (F) ->
	      do  %% Line 100
		  call 'ttb':'tpl'
		      (M, F, MS)
		  %% Line 101
		  apply 'tp'/2
		      (T, MS)
	  %% Line 102
	  <[{F,A}|T],MS> when 'true' ->
	      do  %% Line 103
		  call 'ttb':'tpl'
		      ('webtool', F, A, MS)
		  %% Line 104
		  apply 'tp'/2
		      (T, MS)
	  %% Line 105
	  <[F|T],MS> when 'true' ->
	      do  %% Line 106
		  call 'ttb':'tpl'
		      ('webtool', F, MS)
		  %% Line 107
		  apply 'tp'/2
		      (T, MS)
	  %% Line 108
	  <[],_X_MS> when 'true' ->
	      %% Line 109
	      'ok'
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'tp',2}}] )
	    -| ['compiler_generated'] )
	end
'stop_debug'/0 =
    %% Line 110
    fun () ->
	%% Line 111
	call 'ttb':'stop'
	    (['format'])
'debug_app'/1 =
    %% Line 113
    fun (_cor0) ->
	do  %% Line 114
	    call 'ttb':'tracer'
		('all', [{'file',[119|[101|[98|[116|[111|[111|[108|[95|[97|[112|[112|[46|[116|[114|[99]]]]]]]]]]]]]]]}|[{'handler',{( 'out'/4
																      -| [{'id',{0,0,'-debug_app/1-fun-0-'}}] ),'true'}}|[]]])
	    do  %% Line 115
		call 'ttb':'p'
		    ('all', ['call'|['timestamp']])
		do  %% Line 117
		    call 'ttb':'tp'
			(_cor0, [{'_',[],[{'return_trace'}|[{'message',{'caller'}}]]}])
		    %% Line 118
		    'ok'
'out'/4 =
    %% Line 120
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_cor13,{'trace_ts',Pid,'call',MFA = {M,F,A},{W,_cor14,_cor15},TS},_cor16,S>
	      when let <_cor4> =
		    %% Line 121
		    call 'erlang':'=:='
			(W, 'webtool')
		in  let <_cor5> =
			%% Line 121
			call 'erlang':'=:='
			    (W, 'mod_esi')
		    in  %% Line 121
			call 'erlang':'or'
			    (_cor4, _cor5) ->
	      let <_cor6> =
		  %% Line 122
		  apply 'ffunc'/1
		      (MFA)
	      in  do  %% Line 122
		      call 'io':'format'
			  ([126|[119|[58|[32|[40|[126|[112|[41|[126|[110|[99|[97|[108|[108|[32|[126|[115|[126|[110]]]]]]]]]]]]]]]]]]], [TS|[Pid|[_cor6|[]]]])
		      let <_cor7> =
			  %% Line 123
			  call 'erlang':'length'
			      (A)
		      in  %% Line 123
			  [{M,F,_cor7}|S]
	  %% Line 124
	  <_cor17,{'trace_ts',Pid,'return_from',MFA,R,TS},_cor18,[_cor19|S]>
	      when call 'erlang':'=:='
		    (_cor19,
		     MFA) ->
	      let <_cor8> =
		  %% Line 125
		  apply 'ffunc'/1
		      (MFA)
	      in  do  %% Line 125
		      call 'io':'format'
			  ([126|[119|[58|[32|[40|[126|[112|[41|[126|[110|[114|[101|[116|[117|[114|[110|[101|[100|[32|[102|[114|[111|[109|[32|[126|[115|[32|[45|[62|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [TS|[Pid|[_cor8|[R|[]]]]])
		      %% Line 126
		      S
	  %% Line 127
	  <_cor20,_cor21,_cor22,_cor23> when 'true' ->
	      %% Line 128
	      'ok'
	end
'script_start'/0 =
    %% Line 135
    fun () ->
	do  %% Line 136
	    apply 'usage'/0
		()
	    %% Line 137
	    call 'erlang':'halt'
		()
'script_start'/1 =
    %% Line 138
    fun (_cor0) ->
	case _cor0 of
	  <[App|[]]> when 'true' ->
	      let <_cor2> =
		  %% Line 140
		  case call 'os':'type'
			   () of
		    %% Line 141
		    <{'win32',_cor46}> when 'true' ->
			'iexplore'
		    %% Line 142
		    <_cor47> when 'true' ->
			'firefox'
		  end
	      in  %% Line 144
		  apply 'script_start'/1
		      ([App|[_cor2|[]]])
	  %% Line 145
	  <[App|[Browser|[]]]> when 'true' ->
	      do  %% Line 146
		  call 'io':'format'
		      ([83|[116|[97|[114|[116|[105|[110|[103|[32|[119|[101|[98|[116|[111|[111|[108|[46|[46|[46|[10]]]]]]]]]]]]]]]]]]]])
		  do  %% Line 147
		      apply 'start'/0
			  ()
		      let <AvailableApps> =
			  %% Line 148
			  apply 'get_applications'/0
			      ()
		      in  %% Line 149
			  case call 'os':'type'
				   () of
			    <{OSType,_cor48}> when 'true' ->
				%% Line 150
				case call 'lists':'keysearch'
					 (App, 1, AvailableApps) of
				  %% Line 151
				  <{'value',{_cor49,StartPage}}>
				      when call 'erlang':'=:='
					    (_cor49,
					     App) ->
				      do  %% Line 152
					  call 'io':'format'
					      ([83|[116|[97|[114|[116|[105|[110|[103|[32|[126|[119|[46|[46|[46|[10]]]]]]]]]]]]]]], [App|[]])
					  let <_cor6> =
					      %% Line 153
					      call 'erlang':'atom_to_list'
						  (App)
					  in  let <_cor7> =
						  %% Line 153
						  [97|[112|[112|[61|_cor6]]]]
					      in  do  %% Line 153
						      apply 'start_tools'/2
							  ([], _cor7)
						      let <_cor8> =
							  %% Line 154
							  apply 'get_port'/0
							      ()
						      in  let <PortStr> =
							      %% Line 154
							      call 'erlang':'integer_to_list'
								  (_cor8)
							  in  let <_cor15> =
								  %% Line 155
								  case StartPage of
								    %% Line 156
								    <[47|Page]> when 'true' ->
									let <_cor10> =
									    %% Line 157
									    [47|Page]
									in  let <_cor11> =
										%% Line 157
										call 'erlang':'++'
										    (PortStr, _cor10)
									    in  %% Line 157
										call 'erlang':'++'
										    ([104|[116|[116|[112|[58|[47|[47|[108|[111|[99|[97|[108|[104|[111|[115|[116|[58]]]]]]]]]]]]]]]]], _cor11)
								    %% Line 158
								    <_cor50> when 'true' ->
									let <_cor12> =
									    %% Line 159
									    [47|StartPage]
									in  let <_cor13> =
										%% Line 159
										call 'erlang':'++'
										    (PortStr, _cor12)
									    in  %% Line 159
										call 'erlang':'++'
										    ([104|[116|[116|[112|[58|[47|[47|[108|[111|[99|[97|[108|[104|[111|[115|[116|[58]]]]]]]]]]]]]]]]], _cor13)
								  end
							      in  do  %% Line 161
								      case Browser of
									%% Line 162
									<'none'> when 'true' ->
									    'ok'
									%% Line 164
									<'iexplore'>
									    when call 'erlang':'=:='
										  (OSType,
										   'win32') ->
									    do  %% Line 165
										call 'io':'format'
										    ([83|[116|[97|[114|[116|[105|[110|[103|[32|[105|[110|[116|[101|[114|[110|[101|[116|[32|[101|[120|[112|[108|[111|[114|[101|[114|[46|[46|[46|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
										%% Line 166
										case call 'win32reg':'open'
											 ([]) of
										  <{'ok',R}> when 'true' ->
										      do  %% Line 168
											  call 'win32reg':'change_key'
											      (R, [92|[108|[111|[99|[97|[108|[95|[109|[97|[99|[104|[105|[110|[101|[92|[83|[79|[70|[84|[87|[65|[82|[69|[92|[77|[105|[99|[114|[111|[115|[111|[102|[116|[92|[73|[69|[32|[83|[101|[116|[117|[112|[92|[83|[101|[116|[117|[112]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
											  %% Line 169
											  case call 'win32reg':'value'
												   (R, [80|[97|[116|[104]]]]) of
											    <{'ok',Val}> when 'true' ->
												let <_cor20> =
												    %% Line 170
												    call 'win32reg':'expand'
													(Val)
												in  let <IExplore> =
													%% Line 170
													call 'filename':'join'
													    (_cor20, [105|[101|[120|[112|[108|[111|[114|[101|[46|[101|[120|[101]]]]]]]]]]]])
												    in  let <_cor22> =
													    %% Line 171
													    [34|[32|_cor15]]
													in  let <_cor23> =
														%% Line 171
														call 'erlang':'++'
														    (IExplore, _cor22)
													    in  let <_cor24> =
														    %% Line 171
														    [34|_cor23]
														in  %% Line 171
														    call 'os':'cmd'
															(_cor24)
											    ( <_cor19> when 'true' ->
												  primop 'match_fail'
												      ({'badmatch',_cor19})
											      -| ['compiler_generated'] )
											  end
										  ( <_cor17> when 'true' ->
											primop 'match_fail'
											    ({'badmatch',_cor17})
										    -| ['compiler_generated'] )
										end
									%% Line 172
									<_cor51>
									    when call 'erlang':'=:='
										  (OSType,
										   'win32') ->
									    do  %% Line 173
										call 'io':'format'
										    ([83|[116|[97|[114|[116|[105|[110|[103|[32|[126|[119|[46|[46|[46|[10]]]]]]]]]]]]]]], [Browser|[]])
										let <_cor26> =
										    %% Line 174
										    call 'erlang':'atom_to_list'
											(Browser)
										in  let <_cor25> =
											%% Line 174
											[34|[32|_cor15]]
										    in  let <_cor27> =
											    %% Line 174
											    call 'erlang':'++'
												(_cor26, _cor25)
											in  let <_cor28> =
												%% Line 174
												[34|_cor27]
											    in  %% Line 174
												call 'os':'cmd'
												    (_cor28)
									%% Line 175
									<B>
									    when let <_cor29> =
										  call 'erlang':'=:='
										      (Browser, 'firefox')
									      in  let <_cor30> =
										      call 'erlang':'=:='
											  (Browser, 'mozilla')
										  in  call 'erlang':'or'
											  (_cor29, _cor30) ->
									    do  %% Line 176
										call 'io':'format'
										    ([83|[101|[110|[100|[105|[110|[103|[32|[85|[82|[76|[32|[116|[111|[32|[126|[119|[46|[46|[46]]]]]]]]]]]]]]]]]]]], [Browser|[]])
										let <BStr> =
										    %% Line 177
										    call 'erlang':'atom_to_list'
											(Browser)
										in  let <_cor32> =
											%% Line 179
											call 'erlang':'++'
											    (_cor15, [41|[39]])
										    in  let <_cor33> =
											    %% Line 178
											    call 'erlang':'++'
												([32|[45|[114|[97|[105|[115|[101|[32|[45|[114|[101|[109|[111|[116|[101|[32|[39|[111|[112|[101|[110|[85|[114|[108|[40]]]]]]]]]]]]]]]]]]]]]]]]], _cor32)
											in  let <SendCmd> =
												%% Line 178
												call 'erlang':'++'
												    (BStr, _cor33)
											    in  let <Port> =
												    %% Line 180
												    call 'erlang':'open_port'
													({'spawn',SendCmd}, ['exit_status'])
												in  %% Line 181
												    receive
												      %% Line 182
												      <{_cor52,{'exit_status',0}}>
													  when call 'erlang':'=:='
														(_cor52,
														 Port) ->
													  do  %% Line 183
													      call 'io':'format'
														  ([100|[111|[110|[101|[10]]]]])
													      'ok'
												      %% Line 185
												      <{_cor53,{'exit_status',_X_Error}}>
													  when call 'erlang':'=:='
														(_cor53,
														 Port) ->
													  do  %% Line 186
													      call 'io':'format'
														  ([32|[110|[111|[116|[32|[114|[117|[110|[110|[105|[110|[103|[44|[32|[115|[116|[97|[114|[116|[105|[110|[103|[32|[126|[119|[46|[46|[46|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 187
																																			[Browser|[]])
													      let <_cor38> =
														  %% Line 188
														  [32|_cor15]
													      in  let <_cor39> =
														      %% Line 188
														      call 'erlang':'++'
															  (BStr, _cor38)
														  in  do  %% Line 188
															  call 'os':'cmd'
															      (_cor39)
															  'ok'
												    after %% Line 190
													  5000 ->
												      do  %% Line 191
													  call 'io':'format'
													      ([32|[102|[97|[105|[108|[101|[100|[44|[32|[115|[116|[97|[114|[116|[105|[110|[103|[32|[126|[119|[46|[46|[46|[10]]]]]]]]]]]]]]]]]]]]]]]], [Browser|[]])
													  do  %% Line 192
													      call 'erlang':'port_close'
														  (Port)
													      let <_cor36> =
														  %% Line 193
														  [32|_cor15]
													      in  let <_cor37> =
														      %% Line 193
														      call 'erlang':'++'
															  (BStr, _cor36)
														  in  %% Line 193
														      call 'os':'cmd'
															  (_cor37)
									%% Line 195
									<_cor54> when 'true' ->
									    do  %% Line 196
										call 'io':'format'
										    ([83|[116|[97|[114|[116|[105|[110|[103|[32|[126|[119|[46|[46|[46|[10]]]]]]]]]]]]]]], [Browser|[]])
										let <_cor41> =
										    %% Line 197
										    call 'erlang':'atom_to_list'
											(Browser)
										in  let <_cor40> =
											%% Line 197
											[32|_cor15]
										    in  let <_cor42> =
											    %% Line 197
											    call 'erlang':'++'
												(_cor41, _cor40)
											in  %% Line 197
											    call 'os':'cmd'
												(_cor42)
								      end
								      %% Line 199
								      'ok'
				  %% Line 200
				  <'false'> when 'true' ->
				      do  %% Line 201
					  apply 'stop'/0
					      ()
					  do  %% Line 202
					      call 'io':'format'
						  ([10|[123|[101|[114|[114|[111|[114|[44|[123|[117|[110|[107|[110|[111|[119|[110|[95|[97|[112|[112|[44|[126|[112|[125|[125|[10]]]]]]]]]]]]]]]]]]]]]]]]]], [App|[]])
					      %% Line 203
					      call 'erlang':'halt'
						  ()
				  ( <_cor44> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor44})
				    -| ['compiler_generated'] )
				end
			    ( <_cor5> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor5})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor45> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor45})
		  -| [{'function_name',{'script_start',1}}] )
	    -| ['compiler_generated'] )
	end
'usage'/0 =
    %% Line 206
    fun () ->
	do  %% Line 207
	    call 'io':'format'
		([83|[116|[97|[114|[116|[105|[110|[103|[32|[119|[101|[98|[116|[111|[111|[108|[46|[46|[46|[10]]]]]]]]]]]]]]]]]]]])
	    do  %% Line 208
		apply 'start'/0
		    ()
		let <_cor3> =
		    %% Line 209
		    ( fun (_cor1) ->
			  case _cor1 of
			    <{A,_cor5}> when 'true' ->
				A
			    ( <_cor2> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor2})
				    -| [{'function_name',{'-usage/0-fun-0-',1}}] )
			      -| ['compiler_generated'] )
			  end
		      -| [{'id',{0,0,'-usage/0-fun-0-'}}] )
		in  let <_cor0> =
			%% Line 209
			apply 'get_applications'/0
			    ()
		    in  let <Apps> =
			    %% Line 209
			    call 'lists':'map'
				(_cor3, _cor0)
			in  do  %% Line 210
				call 'io':'format'
				    (%% Line 211
				     [10|[85|[115|[97|[103|[101|[58|[32|[115|[116|[97|[114|[116|[95|[119|[101|[98|[116|[111|[111|[108|[32|[97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[32|[91|[32|[98|[114|[111|[119|[115|[101|[114|[32|[93|[10|[10|[65|[118|[97|[105|[108|[97|[98|[108|[101|[32|[97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[115|[32|[97|[114|[101|[58|[32|[126|[112|[10|[68|[101|[102|[97|[117|[108|[116|[32|[98|[114|[111|[119|[115|[101|[114|[32|[105|[115|[32|[39|[105|[101|[120|[112|[108|[111|[114|[101|[39|[32|[40|[73|[110|[116|[101|[114|[110|[101|[116|[32|[69|[120|[112|[108|[111|[114|[101|[114|[41|[32|[111|[110|[32|[87|[105|[110|[100|[111|[119|[115|[32|[111|[114|[32|[101|[108|[115|[101|[32|[39|[102|[105|[114|[101|[102|[111|[120|[39|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 215
																																																																																																																			    [Apps|[]])
				%% Line 216
				apply 'stop'/0
				    ()
'get_applications'/0 =
    %% Line 219
    fun () ->
	%% Line 220
	call 'gen_server':'call'
	    ('web_tool', 'get_applications')
'get_port'/0 =
    %% Line 222
    fun () ->
	%% Line 223
	call 'gen_server':'call'
	    ('web_tool', 'get_port')
'start'/0 =
    %% Line 235
    fun () ->
	%% Line 236
	apply 'start'/2
	    ('standard_path', 'standard_data')
'start'/2 =
    %% Line 238
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Path,'standard_data'> when 'true' ->
	      %% Line 239
	      case apply 'get_standard_data'/0
		       () of
		%% Line 240
		<{'error',Reason}> when 'true' ->
		    %% Line 241
		    {'error',Reason}
		%% Line 242
		<Data> when 'true' ->
		    %% Line 243
		    apply 'start'/2
			(Path, Data)
	      end
	  %% Line 246
	  <'standard_path',Data> when 'true' ->
	      let <Path> =
		  %% Line 247
		  apply 'get_path'/0
		      ()
	      in  %% Line 248
		  apply 'start'/2
		      (Path, Data)
	  %% Line 250
	  <Path,Port>
	      when call 'erlang':'is_integer'
		    (Port) ->
	      let <Data> =
		  %% Line 251
		  apply 'get_standard_data'/1
		      (Port)
	      in  %% Line 252
		  apply 'start'/2
		      (Path, Data)
	  %% Line 254
	  <Path,Data0> when 'true' ->
	      let <_cor5> =
		  %% Line 255
		  apply 'rest_of_standard_data'/0
		      ()
	      in  let <Data> =
		      %% Line 255
		      call 'erlang':'++'
			  (Data0, _cor5)
		  in  %% Line 256
		      call 'gen_server':'start'
			  ({'local','web_tool'}, 'webtool', {Path,Data}, [])
	end
'stop'/0 =
    %% Line 258
    fun () ->
	%% Line 259
	call 'gen_server':'call'
	    ('web_tool', 'stoppit')
'started_tools'/2 =
    %% Line 264
    fun (_cor1,_cor0) ->
	%% Line 265
	call 'gen_server':'call'
	    ('web_tool', {'started_tools',_cor1,_cor0})
'toolbar'/2 =
    %% Line 267
    fun (_cor1,_cor0) ->
	%% Line 268
	call 'gen_server':'call'
	    ('web_tool', {'toolbar',_cor1,_cor0})
'start_tools'/2 =
    %% Line 270
    fun (_cor1,_cor0) ->
	%% Line 271
	call 'gen_server':'call'
	    ('web_tool', {'start_tools',_cor1,_cor0})
'stop_tools'/2 =
    %% Line 273
    fun (_cor1,_cor0) ->
	%% Line 274
	call 'gen_server':'call'
	    ('web_tool', {'stop_tools',_cor1,_cor0})
'is_localhost'/0 =
    %% Line 279
    fun () ->
	%% Line 280
	call 'gen_server':'call'
	    ('web_tool', 'is_localhost')
'handle_call'/3 =
    %% Line 287
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'get_applications',_cor22,State> when 'true' ->
	      %% Line 289
	      ( case State of
		  ( <( {'state',_cor23,_rec0,_cor24,_cor25,_cor26}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Tools> =
			    call 'ets':'select'
				(_rec0, [{{'$1',{'web_data',{'_','$2'}}},[],[{{'$1','$2'}}]}])
			in  %% Line 290
			    {'reply',Tools,State}
		    -| ['compiler_generated'] )
		  ( <_cor27> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 292
	  <'get_port',_cor28,State> when 'true' ->
	      %% Line 293
	      ( case State of
		  ( <( {'state',_cor29,_cor30,_cor31,_rec1,_cor32}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'lists':'keysearch'
				 ('port', 1, _rec1) of
			  <{'value',{'port',Port}}> when 'true' ->
			      %% Line 294
			      {'reply',Port,State}
			  ( <_cor9> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor9})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor33> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 296
	  <{'started_tools',_X_Env,_X_Input},_cor34,State> when 'true' ->
	      let <_cor10> =
		  %% Line 297
		  apply 'started_tools_page'/1
		      (State)
	      in  %% Line 297
		  {'reply',_cor10,State}
	  %% Line 299
	  <{'toolbar',_X_Env,_X_Input},_cor35,State> when 'true' ->
	      let <_cor11> =
		  %% Line 300
		  apply 'toolbar'/0
		      ()
	      in  %% Line 300
		  {'reply',_cor11,State}
	  %% Line 302
	  <{'start_tools',Env,Input},_cor36,State> when 'true' ->
	      %% Line 303
	      case apply 'start_tools_page'/3
		       (Env, Input, State) of
		<{NewState,Page}> when 'true' ->
		    %% Line 304
		    {'reply',Page,NewState}
		( <_cor12> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor12})
		  -| ['compiler_generated'] )
	      end
	  %% Line 306
	  <{'stop_tools',Env,Input},_cor37,State> when 'true' ->
	      %% Line 307
	      case apply 'stop_tools_page'/3
		       (Env, Input, State) of
		<{NewState,Page}> when 'true' ->
		    %% Line 308
		    {'reply',Page,NewState}
		( <_cor13> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor13})
		  -| ['compiler_generated'] )
	      end
	  %% Line 310
	  <'stoppit',_X_From,Data> when 'true' ->
	      %% Line 311
	      {'stop','normal','ok',Data}
	  %% Line 313
	  <'is_localhost',_X_From,Data> when 'true' ->
	      %% Line 314
	      ( case Data of
		  ( <( {'state',_cor38,_cor39,_cor40,_rec2,_cor41}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor17> =
			    case call 'proplists':'get_value'
				     ('bind_address', _rec2) of
			      %% Line 315
			      <{127,0,0,1}> when 'true' ->
				  %% Line 316
				  'true'
			      %% Line 317
			      <_X_IpNumber> when 'true' ->
				  %% Line 318
				  'false'
			    end
			in  %% Line 320
			    {'reply',_cor17,Data}
		    -| ['compiler_generated'] )
		  ( <_cor42> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor21,_cor20,_cor19})
		  -| [{'function_name',{'handle_call',3}}] )
	    -| ['compiler_generated'] )
	end
'handle_info'/2 =
    %% Line 323
    fun (_cor1,_cor0) ->
	%% Line 324
	{'noreply',_cor0}
'handle_cast'/2 =
    %% Line 326
    fun (_cor1,_cor0) ->
	%% Line 327
	{'noreply',_cor0}
'code_change'/3 =
    %% Line 329
    fun (_cor2,_cor1,_cor0) ->
	%% Line 330
	{'ok',_cor1}
'init'/1 =
    %% Line 339
    fun (_cor0) ->
	case _cor0 of
	  <{Path,Config}> when 'true' ->
	      %% Line 340
	      case call 'filelib':'is_dir'
		       (Path) of
		%% Line 341
		<'true'> when 'true' ->
		    %% Line 342
		    case apply 'get_tool_files_data'/0
			     () of
		      <{'ok',Table}> when 'true' ->
			  do  %% Line 343
			      apply 'insert_app'/2
				  ({'webtool',[{'alias',{'erl_alias',[47|[119|[101|[98|[116|[111|[111|[108]]]]]]]],['webtool']}}]}, Table)
			      %% Line 344
			      case call 'webtool_sup':'start_link'
				       () of
				%% Line 345
				<{'ok',Pid}> when 'true' ->
				    %% Line 346
				    case apply 'start_webserver'/3
					     (Table, Path, Config) of
				      %% Line 347
				      <{'ok',_cor6}> when 'true' ->
					  do  %% Line 348
					      apply 'print_url'/1
						  (Config)
					      %% Line 349
					      {'ok',{'state',Path,%% Line 350
								  Table,%% Line 351
									Pid,%% Line 352
									    Config,[]}}
				      %% Line 353
				      <{'error',Error}> when 'true' ->
					  %% Line 354
					  {'stop',{'error',Error}}
				      ( <_cor2> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor2})
					-| ['compiler_generated'] )
				    end
				%% Line 356
				<Error> when 'true' ->
				    %% Line 357
				    {'stop',Error}
			      end
		      ( <_cor1> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor1})
			-| ['compiler_generated'] )
		    end
		%% Line 359
		<'false'> when 'true' ->
		    %% Line 360
		    {'stop',{'error','error_dir'}}
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5})
		  -| [{'function_name',{'init',1}}] )
	    -| ['compiler_generated'] )
	end
'terminate'/2 =
    %% Line 363
    fun (_cor1,_cor0) ->
	do  %% Line 365
	    apply 'shutdown_server'/1
		(_cor0)
	    do  %% Line 367
		apply 'shutdown_apps'/1
		    (_cor0)
		do  %% Line 369
		    apply 'shutdown_supervisor'/1
			(_cor0)
		    %% Line 370
		    'ok'
'print_url'/1 =
    %% Line 372
    fun (_cor0) ->
	let <Server> =
	    %% Line 373
	    call 'proplists':'get_value'
		('server_name', _cor0, [117|[110|[100|[101|[102|[105|[110|[101|[100]]]]]]]]])
	in  let <Port> =
		%% Line 374
		call 'proplists':'get_value'
		    ('port', _cor0, [117|[110|[100|[101|[102|[105|[110|[101|[100]]]]]]]]])
	    in  %% Line 375
		case call 'proplists':'get_value'
			 ('bind_address', _cor0, [117|[110|[100|[101|[102|[105|[110|[101|[100]]]]]]]]]) of
		  <{A,B,C,D}> when 'true' ->
		      do  %% Line 376
			  call 'io':'format'
			      ([87|[101|[98|[84|[111|[111|[108|[32|[105|[115|[32|[97|[118|[97|[105|[108|[97|[98|[108|[101|[32|[97|[116|[32|[104|[116|[116|[112|[58|[47|[47|[126|[115|[58|[126|[119|[47|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Server|[Port|[]]])
			  %% Line 377
			  call 'io':'format'
			      ([79|[114|[32|[32|[104|[116|[116|[112|[58|[47|[47|[126|[119|[46|[126|[119|[46|[126|[119|[46|[126|[119|[58|[126|[119|[47|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]], [A|[B|[C|[D|[Port|[]]]]]])
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor3})
		    -| ['compiler_generated'] )
		end
'started_tools_page'/1 =
    %% Line 389
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 390
	    apply 'started_tools'/1
		(_cor0)
	in  %% Line 390
	    [[80|[114|[97|[103|[109|[97|[58|[110|[111|[45|[99|[97|[99|[104|[101|[13|[10|[32|[67|[111|[110|[116|[101|[110|[116|[45|[116|[121|[112|[101|[58|[32|[116|[101|[120|[116|[47|[104|[116|[109|[108|[13|[10|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[[60|[72|[84|[77|[76|[62|[13|[10|[60|[72|[69|[65|[68|[62|[13|[10|[60|[84|[73|[84|[76|[69|[62|[87|[101|[98|[84|[111|[111|[108|[60|[47|[84|[73|[84|[76|[69|[62|[13|[10|[60|[47|[72|[69|[65|[68|[62|[13|[10|[60|[66|[79|[68|[89|[32|[66|[71|[67|[79|[76|[79|[82|[61|[34|[35|[70|[70|[70|[70|[70|[70|[34|[62|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[_cor1|[[60|[47|[66|[79|[68|[89|[62|[60|[47|[72|[84|[77|[76|[62]]]]]]]]]]]]]]]]]]
'toolbar'/0 =
    %% Line 392
    fun () ->
	let <_cor0> =
	    %% Line 393
	    apply 'toolbar_page'/0
		()
	in  %% Line 393
	    [[80|[114|[97|[103|[109|[97|[58|[110|[111|[45|[99|[97|[99|[104|[101|[13|[10|[32|[67|[111|[110|[116|[101|[110|[116|[45|[116|[121|[112|[101|[58|[32|[116|[101|[120|[116|[47|[104|[116|[109|[108|[13|[10|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[[60|[72|[84|[77|[76|[62|[13|[10|[60|[72|[69|[65|[68|[62|[13|[10|[60|[84|[73|[84|[76|[69|[62|[87|[101|[98|[84|[111|[111|[108|[60|[47|[84|[73|[84|[76|[69|[62|[13|[10|[60|[47|[72|[69|[65|[68|[62|[13|[10|[60|[66|[79|[68|[89|[32|[66|[71|[67|[79|[76|[79|[82|[61|[34|[35|[70|[70|[70|[70|[70|[70|[34|[62|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[_cor0|[[60|[47|[66|[79|[68|[89|[62|[60|[47|[72|[84|[77|[76|[62]]]]]]]]]]]]]]]]]]
'start_tools_page'/3 =
    %% Line 396
    fun (_cor2,_cor1,_cor0) ->
	%% Line 398
	case apply 'get_tools'/1
		 (_cor1) of
	  %% Line 399
	  <{'tools',Tools}> when 'true' ->
	      %% Line 401
	      case apply 'handle_apps'/3
		       (Tools, _cor0, 'start') of
		<{'ok',NewState}> when 'true' ->
		    let <_cor4> =
			%% Line 402
			apply 'reload_started_apps'/0
			    ()
		    in  let <_cor5> =
			    %% Line 403
			    apply 'show_unstarted_apps'/1
				(NewState)
			in  %% Line 402
			    {NewState,[[80|[114|[97|[103|[109|[97|[58|[110|[111|[45|[99|[97|[99|[104|[101|[13|[10|[32|[67|[111|[110|[116|[101|[110|[116|[45|[116|[121|[112|[101|[58|[32|[116|[101|[120|[116|[47|[104|[116|[109|[108|[13|[10|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[[60|[72|[84|[77|[76|[62|[13|[10|[60|[72|[69|[65|[68|[62|[13|[10|[60|[84|[73|[84|[76|[69|[62|[87|[101|[98|[84|[111|[111|[108|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[73|[84|[76|[69|[62|[13|[10|[60|[47|[72|[69|[65|[68|[62|[13|[10|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[66|[79|[68|[89|[32|[66|[71|[67|[79|[76|[79|[82|[61|[34|[35|[70|[70|[70|[70|[70|[70|[34|[32|[111|[110|[76|[111|[97|[100|[61|[114|[101|[108|[111|[97|[100|[67|[111|[109|[112|[105|[108|[101|[100|[76|[105|[115|[116|[40|[41|[62|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[_cor4|%% Line 403
																																																																																																																																													       [_cor5|[[60|[47|[66|[79|[68|[89|[62|[60|[47|[72|[84|[77|[76|[62]]]]]]]]]]]]]]]]]]]}
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 404
	  <_cor11> when 'true' ->
	      let <_cor6> =
		  %% Line 405
		  apply 'show_unstarted_apps'/1
		      (_cor0)
	      in  %% Line 405
		  {_cor0,[[80|[114|[97|[103|[109|[97|[58|[110|[111|[45|[99|[97|[99|[104|[101|[13|[10|[32|[67|[111|[110|[116|[101|[110|[116|[45|[116|[121|[112|[101|[58|[32|[116|[101|[120|[116|[47|[104|[116|[109|[108|[13|[10|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[[60|[72|[84|[77|[76|[62|[13|[10|[60|[72|[69|[65|[68|[62|[13|[10|[60|[84|[73|[84|[76|[69|[62|[87|[101|[98|[84|[111|[111|[108|[60|[47|[84|[73|[84|[76|[69|[62|[13|[10|[60|[47|[72|[69|[65|[68|[62|[13|[10|[60|[66|[79|[68|[89|[32|[66|[71|[67|[79|[76|[79|[82|[61|[34|[35|[70|[70|[70|[70|[70|[70|[34|[62|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[_cor6|[[60|[47|[66|[79|[68|[89|[62|[60|[47|[72|[84|[77|[76|[62]]]]]]]]]]]]]]]]]]}
	end
'stop_tools_page'/3 =
    %% Line 408
    fun (_cor2,_cor1,_cor0) ->
	%% Line 409
	case apply 'get_tools'/1
		 (_cor1) of
	  %% Line 410
	  <{'tools',Tools}> when 'true' ->
	      %% Line 411
	      case apply 'handle_apps'/3
		       (Tools, _cor0, 'stop') of
		<{'ok',NewState}> when 'true' ->
		    let <_cor4> =
			%% Line 412
			apply 'reload_started_apps'/0
			    ()
		    in  let <_cor5> =
			    %% Line 413
			    apply 'show_started_apps'/1
				(NewState)
			in  %% Line 412
			    {NewState,[[80|[114|[97|[103|[109|[97|[58|[110|[111|[45|[99|[97|[99|[104|[101|[13|[10|[32|[67|[111|[110|[116|[101|[110|[116|[45|[116|[121|[112|[101|[58|[32|[116|[101|[120|[116|[47|[104|[116|[109|[108|[13|[10|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[[60|[72|[84|[77|[76|[62|[13|[10|[60|[72|[69|[65|[68|[62|[13|[10|[60|[84|[73|[84|[76|[69|[62|[87|[101|[98|[84|[111|[111|[108|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[73|[84|[76|[69|[62|[13|[10|[60|[47|[72|[69|[65|[68|[62|[13|[10|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[66|[79|[68|[89|[32|[66|[71|[67|[79|[76|[79|[82|[61|[34|[35|[70|[70|[70|[70|[70|[70|[34|[32|[111|[110|[76|[111|[97|[100|[61|[114|[101|[108|[111|[97|[100|[67|[111|[109|[112|[105|[108|[101|[100|[76|[105|[115|[116|[40|[41|[62|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[_cor4|%% Line 413
																																																																																																																																													       [_cor5|[[60|[47|[66|[79|[68|[89|[62|[60|[47|[72|[84|[77|[76|[62]]]]]]]]]]]]]]]]]]]}
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 414
	  <_cor11> when 'true' ->
	      let <_cor6> =
		  %% Line 415
		  apply 'show_started_apps'/1
		      (_cor0)
	      in  %% Line 415
		  {_cor0,[[80|[114|[97|[103|[109|[97|[58|[110|[111|[45|[99|[97|[99|[104|[101|[13|[10|[32|[67|[111|[110|[116|[101|[110|[116|[45|[116|[121|[112|[101|[58|[32|[116|[101|[120|[116|[47|[104|[116|[109|[108|[13|[10|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[[60|[72|[84|[77|[76|[62|[13|[10|[60|[72|[69|[65|[68|[62|[13|[10|[60|[84|[73|[84|[76|[69|[62|[87|[101|[98|[84|[111|[111|[108|[60|[47|[84|[73|[84|[76|[69|[62|[13|[10|[60|[47|[72|[69|[65|[68|[62|[13|[10|[60|[66|[79|[68|[89|[32|[66|[71|[67|[79|[76|[79|[82|[61|[34|[35|[70|[70|[70|[70|[70|[70|[34|[62|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[_cor6|[[60|[47|[66|[79|[68|[89|[62|[60|[47|[72|[84|[77|[76|[62]]]]]]]]]]]]]]]]]]}
	end
'start_webserver'/3 =
    %% Line 430
    fun (_cor2,_cor1,_cor0) ->
	%% Line 431
	case apply 'get_conf_data'/3
		 (_cor2, _cor1, _cor0) of
	  %% Line 432
	  <{'ok',Conf_data}> when 'true' ->
	      %% Line 434
	      apply 'start_server'/1
		  (Conf_data)
	  %% Line 435
	  <{'error',Error}> when 'true' ->
	      %% Line 436
	      {'error',{'error_server_conf_file',Error}}
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor3})
	    -| ['compiler_generated'] )
	end
'start_server'/1 =
    %% Line 439
    fun (_cor0) ->
	%% Line 440
	case call 'inets':'start'
		 ('httpd', _cor0, 'stand_alone') of
	  %% Line 441
	  <{'ok',Pid}> when 'true' ->
	      %% Line 442
	      {'ok',Pid}
	  %% Line 443
	  <Error> when 'true' ->
	      %% Line 444
	      {'error',{'server_error',Error}}
	end
'get_conf_data'/3 =
    %% Line 450
    fun (_cor2,_cor1,_cor0) ->
	let <Aliases> =
	    %% Line 451
	    apply 'get_aliases'/1
		(_cor2)
	in  let <ServerRoot> =
		%% Line 452
		call 'filename':'join'
		    ([_cor1|[[114|[111|[111|[116]]]]]])
	    in  let <MimeTypesFile> =
		    %% Line 453
		    call 'filename':'join'
			([ServerRoot|[[99|[111|[110|[102]]]]|[[109|[105|[109|[101|[46|[116|[121|[112|[101|[115]]]]]]]]]]]]])
		in  %% Line 454
		    case call 'httpd_conf':'load_mime_types'
			     (MimeTypesFile) of
		      %% Line 455
		      <{'ok',MimeTypes}> when 'true' ->
			  let <Config1> =
			      %% Line 456
			      call 'erlang':'++'
				  (_cor0, Aliases)
			  in  let <_cor7> =
				  %% Line 458
				  call 'filename':'join'
				      ([_cor1|[[114|[111|[111|[116|[47|[100|[111|[99]]]]]]]]]])
			      in  let <Config2> =
				      %% Line 457
				      [{'server_root',ServerRoot}|%% Line 458
								  [{'document_root',_cor7}|%% Line 459
											   [{'mime_types',MimeTypes}|%% Line 460
														     Config1]]]
				  in  %% Line 461
				      {'ok',Config2}
		      %% Line 462
		      <Error> when 'true' ->
			  %% Line 463
			  Error
		    end
'get_tool_files_data'/0 =
    %% Line 469
    fun () ->
	let <_cor0> =
	    %% Line 470
	    call 'code':'get_path'
		()
	in  let <Tools> =
		%% Line 470
		apply 'get_tools1'/1
		    (_cor0)
	    in  %% Line 472
		apply 'get_file_content'/1
		    (Tools)
'get_file_content'/1 =
    %% Line 477
    fun (_cor0) ->
	let <Get_data> =
	    %% Line 478
	    ( fun (_cor4) ->
		  case _cor4 of
		    <{'tool',ToolData}> when 'true' ->
			%% Line 480
			case call 'proplists':'get_value'
				 ('config_func', ToolData) of
			  %% Line 481
			  <{M,F,A}> when 'true' ->
			      let <_cor1> =
				  catch
				      %% Line 482
				      call 'erlang':'apply'
					  (M, F, A)
			      in  %% Line 482
				  case _cor1 of
				    %% Line 483
				    <{'EXIT',_cor14}> when 'true' ->
					%% Line 484
					'bad_data'
				    %% Line 485
				    <Data>
					when call 'erlang':'is_tuple'
					      (_cor1) ->
					%% Line 486
					Data
				    %% Line 487
				    <_cor15> when 'true' ->
					%% Line 488
					'bad_data'
				  end
			  %% Line 490
			  <_cor16> when 'true' ->
			      %% Line 491
			      'bad_data'
			end
		    ( <_cor5> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor5})
			    -| [{'function_name',{'-get_file_content/1-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-get_file_content/1-fun-0-'}}] )
	in  let <_cor12> =
		%% Line 494
		( letrec
		      'lc$^0'/1 =
			  fun (_cor10) ->
			      case _cor10 of
				<[X|_cor8]>
				    when call 'erlang':'=/='
					  (X,
					   'bad_data') ->
				    let <_cor11> =
					apply 'lc$^0'/1
					    (_cor8)
				    in  ( [X|_cor11]
					  -| ['compiler_generated'] )
				( <[X|_cor8]> when 'true' ->
				      apply 'lc$^0'/1
					  (_cor8)
				  -| ['compiler_generated'] )
				<[]> when 'true' ->
				    []
				( <_cor10> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor10})
					-| [{'function_name',{'lc$^0',1}}] )
				  -| ['compiler_generated'] )
			      end
		  in  let <_cor9> =
			  call 'lists':'map'
			      (Get_data, _cor0)
		      in  apply 'lc$^0'/1
			      (_cor9)
		  -| ['list_comprehension'] )
	    in  %% Line 494
		apply 'insert_file_content'/1
		    (_cor12)
'insert_file_content'/1 =
    %% Line 499
    fun (_cor0) ->
	let <Table> =
	    %% Line 500
	    call 'ets':'new'
		('app_data', ['bag'])
	in  let <_cor4> =
		%% Line 501
		( fun (_cor2) ->
		      %% Line 502
		      apply 'insert_app'/2
			  (_cor2, Table)
		  -| [{'id',{0,0,'-insert_file_content/1-fun-0-'}}] )
	    in  do  %% Line 501
		    call 'lists':'foreach'
			(_cor4, _cor0)
		    %% Line 504
		    {'ok',Table}
'insert_app'/2 =
    %% Line 510
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{Name,Key_val_list},Table>
	      when let <_cor2> =
		    call 'erlang':'is_list'
			(Key_val_list)
		in  let <_cor3> =
			call 'erlang':'is_atom'
			    (Name)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      let <_cor7> =
		  %% Line 513
		  ( fun (_cor5) ->
			case _cor5 of
			  <{'alias',{'erl_alias',Alias,Mods}}> when 'true' ->
			      let <Key_val> = {%% Line 514
				   'erl_script_alias',%% Line 514
						      {Alias,Mods}}
			      in  %% Line 516
				  call 'ets':'insert'
				      (Table, {Name,Key_val})
			  %% Line 517
			  <Key_val_pair> when 'true' ->
			      %% Line 519
			      call 'ets':'insert'
				  (Table, {Name,Key_val_pair})
			end
		    -| [{'id',{0,0,'-insert_app/2-fun-0-'}}] )
	      in  %% Line 512
		  call 'lists':'foreach'
		      (_cor7, %% Line 521
			      Key_val_list)
	  %% Line 523
	  <_cor10,_cor11> when 'true' ->
	      %% Line 524
	      'ok'
	end
'get_aliases'/1 =
    %% Line 529
    fun (_cor0) ->
	%% Line 535
	call 'ets':'select'
	    (_cor0, [{{'_',{'erl_script_alias','$1'}},[],[{{'erl_script_alias','$1'}}]}|[{{'_',{'alias','$1'}},[],[{{'alias','$1'}}]}]])
'get_standard_data'/1 =
    %% Line 543
    fun (_cor0) ->
	%% Line 544
	[%% Line 545
	 {'port',_cor0}|%% Line 546
			[{'bind_address',{127,0,0,1}}|[{'server_name',[108|[111|[99|[97|[108|[104|[111|[115|[116]]]]]]]]]}]]]
'get_standard_data'/0 =
    %% Line 550
    fun () ->
	%% Line 551
	case apply 'get_free_port'/2
		 (8888, 256) of
	  %% Line 552
	  <{'error',Reason}> when 'true' ->
	      {'error',Reason}
	  %% Line 553
	  <Port> when 'true' ->
	      %% Line 554
	      [%% Line 555
	       {'port',Port}|%% Line 556
			     [{'bind_address',{127,0,0,1}}|[{'server_name',[108|[111|[99|[97|[108|[104|[111|[115|[116]]]]]]]]]}]]]
	end
'get_free_port'/2 =
    %% Line 561
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Port,0> when 'true' ->
	      %% Line 562
	      {'error','no_free_port_found'}
	  %% Line 563
	  <Port,N> when 'true' ->
	      %% Line 564
	      case call 'gen_tcp':'connect'
		       ([108|[111|[99|[97|[108|[104|[111|[115|[116]]]]]]]]], Port, []) of
		%% Line 565
		<{'error',_X_Reason}> when 'true' ->
		    %% Line 566
		    Port
		%% Line 567
		<{'ok',Sock}> when 'true' ->
		    do  %% Line 568
			call 'gen_tcp':'close'
			    (Sock)
			let <_cor3> =
			    %% Line 569
			    call 'erlang':'+'
				(Port, 1)
			in  let <_cor2> =
				%% Line 569
				call 'erlang':'-'
				    (N, 1)
			    in  %% Line 569
				apply 'get_free_port'/2
				    (_cor3, _cor2)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor4})
		  -| ['compiler_generated'] )
	      end
	end
'rest_of_standard_data'/0 =
    %% Line 572
    fun () ->
	%% Line 573
	[{'max_header_siz',1024}|[{'max_header_action','reply414'}|[{'com_type','ip_comm'}|[{'modules',['mod_alias'|['mod_auth'|['mod_esi'|['mod_actions'|['mod_cgi'|['mod_include'|['mod_dir'|['mod_get'|['mod_head'|['mod_log'|['mod_disk_log']]]]]]]]]]]}|[{'directory_index',[[105|[110|[100|[101|[120|[46|[104|[116|[109|[108]]]]]]]]]]]}|[{'default_type',[116|[101|[120|[116|[47|[112|[108|[97|[105|[110]]]]]]]]]]}]]]]]]
'get_path'/0 =
    %% Line 596
    fun () ->
	%% Line 597
	call 'code':'priv_dir'
	    ('webtool')
'shutdown_server'/1 =
    %% Line 607
    fun (_cor0) ->
	%% Line 608
	( case _cor0 of
	    ( <( {'state',_cor5,_cor6,_cor7,_rec3,_cor8}
		 -| ['compiler_generated'] )> when 'true' ->
		  case apply 'get_addr_and_port'/1
			   (_rec3) of
		    <{Addr,Port}> when 'true' ->
			%% Line 609
			call 'inets':'stop'
			    ('httpd', {Addr,Port})
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor3})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor9> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'get_addr_and_port'/1 =
    %% Line 611
    fun (_cor0) ->
	let <Addr> =
	    %% Line 612
	    call 'proplists':'get_value'
		('bind_address', _cor0, {127,0,0,1})
	in  let <Port> =
		%% Line 613
		call 'proplists':'get_value'
		    ('port', _cor0, 8888)
	    in  %% Line 614
		{Addr,Port}
'shutdown_apps'/1 =
    %% Line 619
    fun (_cor0) ->
	%% Line 620
	( case _cor0 of
	    ( <( {'state',_cor10,_rec4,_cor11,_cor12,_cor13}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor8> =
		      %% Line 622
		      ( fun (_cor6) ->
			    %% Line 623
			    apply 'stop_app'/1
				(_cor6)
			-| [{'id',{0,0,'-shutdown_apps/1-fun-0-'}}] )
		  in  let <_cor5> =
			  %% Line 625
			  call 'ets':'select'
			      (_rec4, [{{'_',{'start','$1'}},[],['$1']}])
		      in  %% Line 622
			  call 'lists':'foreach'
			      (_cor8, _cor5)
	      -| ['compiler_generated'] )
	    ( <_cor14> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'shutdown_supervisor'/1 =
    %% Line 631
    fun (_cor0) ->
	%% Line 633
	( case _cor0 of
	    ( <( {'state',_cor4,_cor5,_rec5,_cor6,_cor7}
		 -| ['compiler_generated'] )> when 'true' ->
		  call 'webtool_sup':'stop'
		      (_rec5)
	      -| ['compiler_generated'] )
	    ( <_cor8> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'stop_app'/1 =
    %% Line 639
    fun (_cor0) ->
	case _cor0 of
	  <{'child',_X_Real_name}> when 'true' ->
	      %% Line 640
	      'ok'
	  %% Line 642
	  <{'app',Real_name}> when 'true' ->
	      %% Line 643
	      call 'application':'stop'
		  (Real_name)
	  %% Line 645
	  <{'func',_X_Start,Stop}> when 'true' ->
	      %% Line 646
	      case Stop of
		%% Line 647
		<{M,F,A}> when 'true' ->
		    catch
			%% Line 648
			call 'erlang':'apply'
			    (M, F, A)
		%% Line 649
		<_X_NoStop> when 'true' ->
		    %% Line 650
		    'ok'
	      end
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'stop_app',1}}] )
	    -| ['compiler_generated'] )
	end
'toolbar_page'/0 =
    %% Line 665
    fun () ->
	%% Line 666
	[60|[84|[65|[66|[76|[69|[62|[10|[32|[32|[32|[32|[32|[32|[32|[60|[84|[82|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[84|[68|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[66|[62|[83|[101|[108|[101|[99|[116|[32|[65|[99|[116|[105|[111|[110|[60|[47|[66|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[68|[62|[10|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[82|[62|[10|[32|[32|[32|[32|[32|[32|[32|[60|[84|[82|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[84|[68|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[65|[32|[72|[82|[69|[70|[61|[34|[46|[47|[115|[116|[97|[114|[116|[95|[116|[111|[111|[108|[115|[34|[32|[84|[65|[82|[71|[69|[84|[61|[114|[105|[103|[104|[116|[62|[32|[83|[116|[97|[114|[116|[32|[84|[111|[111|[108|[115|[60|[47|[65|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[68|[62|[10|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[82|[62|[10|[32|[32|[32|[32|[32|[32|[32|[60|[84|[82|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[84|[68|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[65|[32|[72|[82|[69|[70|[61|[34|[46|[47|[115|[116|[111|[112|[95|[116|[111|[111|[108|[115|[34|[32|[84|[65|[82|[71|[69|[84|[61|[114|[105|[103|[104|[116|[62|[32|[83|[116|[111|[112|[32|[84|[111|[111|[108|[115|[60|[47|[65|[62|[10|[9|[32|[60|[47|[84|[68|[62|[32|[10|[32|[32|[32|[32|[32|[32|[60|[47|[84|[82|[62|[32|[10|[32|[32|[32|[32|[60|[47|[84|[65|[66|[76|[69|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
'started_tools'/1 =
    %% Line 693
    fun (_cor0) ->
	%% Line 694
	( case _cor0 of
	    ( <( {'state',_cor9,_rec6,_cor10,_cor11,_cor12}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Names> =
		      apply 'get_started_apps'/2
			  (_rec6, _cor12)
		  in  let <_cor6> =
			  %% Line 696
			  apply 'make_rows'/3
			      (Names, [], 0)
		      in  let <_cor7> =
			      %% Line 696
			      call 'erlang':'++'
				  (_cor6, [10|[32|[32|[32|[32|[32|[60|[47|[84|[65|[66|[76|[69|[62]]]]]]]]]]]]]])
			  in  %% Line 696
			      call 'erlang':'++'
				  ([60|[84|[65|[66|[76|[69|[32|[66|[79|[82|[68|[69|[82|[61|[49|[32|[87|[73|[68|[84|[72|[61|[49|[48|[48|[37|[62|[10|[9]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor7)
	      -| ['compiler_generated'] )
	    ( <_cor13> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'get_started_apps'/2 =
    %% Line 703
    fun (_cor1,_cor0) ->
	let <SelectData> =
	    %% Line 704
	    ( fun (_cor2) ->
		  case _cor2 of
		    <{Name,Link}> when 'true' ->
			%% Line 705
			{Name,Link}
		    ( <_cor3> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor3})
			    -| [{'function_name',{'-get_started_apps/2-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-get_started_apps/2-fun-0-'}}] )
	in  let <_cor7> =
		%% Line 707
		( fun (_cor5) ->
		      {{_cor5,{'web_data','$1'}},[],['$1']}
		  -| [{'id',{0,0,'-get_started_apps/2-fun-1-'}}] )
	    in  let <MS> =
		    %% Line 707
		    call 'lists':'map'
			(_cor7, _cor0)
		in  let <_cor15> =
			%% Line 710
			( letrec
			      'lc$^0'/1 =
				  fun (_cor12) ->
				      case _cor12 of
					<[X|_cor10]> when 'true' ->
					    let <_cor13> =
						apply SelectData
						    (X)
					    in  let <_cor14> =
						    apply 'lc$^0'/1
							(_cor10)
						in  ( [_cor13|_cor14]
						      -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor12> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor12})
						-| [{'function_name',{'lc$^0',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  let <_cor11> =
				  call 'ets':'select'
				      (_cor1, MS)
			      in  apply 'lc$^0'/1
				      (_cor11)
			  -| ['list_comprehension'] )
		    in  %% Line 709
			[{[87|[101|[98|[84|[111|[111|[108]]]]]]],[47|[116|[111|[111|[108|[95|[109|[97|[110|[97|[103|[101|[109|[101|[110|[116|[46|[104|[116|[109|[108]]]]]]]]]]]]]]]]]]]]]}|_cor15]
'make_rows'/3 =
    %% Line 718
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],Result,Fields> when 'true' ->
	      let <_cor3> =
		  %% Line 719
		  apply 'fill_out'/1
		      (Fields)
	      in  %% Line 719
		  call 'erlang':'++'
		      (Result, _cor3)
	  %% Line 720
	  <[Data|Paths],Result,Field>
	      when call 'erlang':'=='
		    (Field,
		     0) ->
	      let <_cor5> =
		  %% Line 721
		  apply 'make_field'/1
		      (Data)
	      in  let <_cor6> =
		      %% Line 721
		      [60|[84|[82|[62|_cor5]]]]
		  in  let <_cor7> =
			  %% Line 721
			  call 'erlang':'++'
			      (Result, _cor6)
		      in  let <_cor4> =
			      %% Line 721
			      call 'erlang':'+'
				  (Field, 1)
			  in  %% Line 721
			      apply 'make_rows'/3
				  (Paths, _cor7, _cor4)
	  %% Line 723
	  <[Path|Paths],Result,Field>
	      when call 'erlang':'=='
		    (Field,
		     4) ->
	      let <_cor8> =
		  %% Line 724
		  apply 'make_field'/1
		      (Path)
	      in  let <_cor9> =
		      %% Line 724
		      call 'erlang':'++'
			  (_cor8, [60|[47|[84|[82|[62]]]]])
		  in  let <_cor10> =
			  %% Line 724
			  call 'erlang':'++'
			      (Result, _cor9)
		      in  %% Line 724
			  apply 'make_rows'/3
			      (Paths, _cor10, 0)
	  %% Line 726
	  <[Path|Paths],Result,Field> when 'true' ->
	      let <_cor12> =
		  %% Line 727
		  apply 'make_field'/1
		      (Path)
	      in  let <_cor13> =
		      %% Line 727
		      call 'erlang':'++'
			  (Result, _cor12)
		  in  let <_cor11> =
			  %% Line 727
			  call 'erlang':'+'
			      (Field, 1)
		      in  %% Line 727
			  apply 'make_rows'/3
			      (Paths, _cor13, _cor11)
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14})
		  -| [{'function_name',{'make_rows',3}}] )
	    -| ['compiler_generated'] )
	end
'make_field'/1 =
    %% Line 733
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 734
	    apply 'get_name'/1
		(_cor0)
	in  let <_cor2> =
		%% Line 734
		call 'erlang':'++'
		    (_cor1, [60|[47|[84|[68|[62]]]]])
	    in  %% Line 734
		call 'erlang':'++'
		    ([60|[84|[68|[32|[87|[73|[68|[84|[72|[61|[50|[48|[37|[62]]]]]]]]]]]]]], _cor2)
'get_name'/1 =
    %% Line 740
    fun (_cor0) ->
	case _cor0 of
	  <{Name,Url}> when 'true' ->
	      let <_cor1> =
		  %% Line 741
		  call 'erlang':'++'
		      (Name, [60|[47|[65|[62]]]])
	      in  let <_cor2> =
		      %% Line 741
		      call 'erlang':'++'
			  ([34|[32|[84|[65|[82|[71|[69|[84|[61|[97|[112|[112|[95|[102|[114|[97|[109|[101|[62]]]]]]]]]]]]]]]]]]], _cor1)
		  in  let <_cor3> =
			  %% Line 741
			  call 'erlang':'++'
			      (Url, _cor2)
		      in  %% Line 741
			  call 'erlang':'++'
			      ([60|[65|[32|[72|[82|[69|[70|[61|[34]]]]]]]]], _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'get_name',1}}] )
	    -| ['compiler_generated'] )
	end
'fill_out'/1 =
    %% Line 747
    fun (_cor0) ->
	case _cor0 of
	  <Nr>
	      when call 'erlang':'=='
		    (_cor0,
		     0) ->
	      %% Line 748
	      []
	  %% Line 749
	  <Nr>
	      when call 'erlang':'=='
		    (_cor0,
		     4) ->
	      %% Line 750
	      [60|[84|[68|[32|[87|[73|[68|[84|[72|[61|[34|[50|[48|[37|[34|[32|[62|[38|[110|[98|[115|[112|[60|[47|[84|[68|[62|[60|[47|[84|[82|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
	  %% Line 752
	  <Nr> when 'true' ->
	      let <_cor1> =
		  %% Line 753
		  call 'erlang':'+'
		      (Nr, 1)
	      in  let <_cor2> =
		      %% Line 753
		      apply 'fill_out'/1
			  (_cor1)
		  in  %% Line 753
		      call 'erlang':'++'
			  ([60|[84|[68|[32|[87|[73|[68|[84|[72|[61|[34|[50|[48|[37|[34|[62|[38|[110|[98|[115|[112|[60|[47|[84|[68|[62]]]]]]]]]]]]]]]]]]]]]]]]]], _cor2)
	end
'get_tools'/1 =
    %% Line 766
    fun (_cor0) ->
	%% Line 767
	case call 'httpd':'parse_query'
		 (_cor0) of
	  %% Line 768
	  <[]> when 'true' ->
	      %% Line 769
	      'no_tools'
	  %% Line 770
	  <Tools> when 'true' ->
	      let <FormatData> =
		  %% Line 771
		  ( fun (_cor1) ->
			case _cor1 of
			  <{_X_Name,Data}> when 'true' ->
			      call 'erlang':'list_to_atom'
				  (Data)
			  ( <_cor2> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor2})
				  -| [{'function_name',{'-get_tools/1-fun-0-',1}}] )
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-get_tools/1-fun-0-'}}] )
	      in  let <SelectData> =
		      %% Line 773
		      ( fun (_cor4) ->
			    case _cor4 of
			      <{Name,_X_Data}> when 'true' ->
				  call 'string':'equal'
				      (Name, [97|[112|[112]]])
			      ( <_cor5> when 'true' ->
				    ( primop 'match_fail'
					  ({'function_clause',_cor5})
				      -| [{'function_name',{'-get_tools/1-fun-1-',1}}] )
				-| ['compiler_generated'] )
			    end
			-| [{'id',{0,0,'-get_tools/1-fun-1-'}}] )
		  in  let <_cor13> =
			  %% Line 774
			  ( letrec
				'lc$^0'/1 =
				    fun (_cor9) ->
					case _cor9 of
					  <[X|_cor8]> when 'true' ->
					      ( case apply SelectData
							 (X) of
						  <'true'> when 'true' ->
						      let <_cor10> =
							  apply FormatData
							      (X)
						      in  let <_cor11> =
							      apply 'lc$^0'/1
								  (_cor8)
							  in  ( [_cor10|_cor11]
								-| ['compiler_generated'] )
						  ( <'false'> when 'true' ->
							apply 'lc$^0'/1
							    (_cor8)
						    -| ['compiler_generated'] )
						  ( <_cor12> when 'true' ->
							primop 'match_fail'
							    ({'case_clause',_cor12})
						    -| ['compiler_generated'] )
						end
						-| ['list_comprehension'] )
					  <[]> when 'true' ->
					      []
					  ( <_cor9> when 'true' ->
						( primop 'match_fail'
						      ({'function_clause',_cor9})
						  -| [{'function_name',{'lc$^0',1}}] )
					    -| ['compiler_generated'] )
					end
			    in  apply 'lc$^0'/1
				    (Tools)
			    -| ['list_comprehension'] )
		      in  %% Line 774
			  {'tools',_cor13}
	end
'handle_apps'/3 =
    %% Line 781
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],State,_X_Cmd> when 'true' ->
	      %% Line 782
	      {'ok',State}
	  %% Line 784
	  <[Tool|Tools],State,Cmd> when 'true' ->
	      %% Line 785
	      ( case State of
		  ( <( {'state',_cor25,_rec8,_cor26,_cor27,_cor28}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'ets':'match_object'
				 (_rec8, {Tool,{'start','_'}}) of
			  %% Line 786
			  <[]> when 'true' ->
			      let <_cor10> =
				  %% Line 787
				  case Cmd of
				    %% Line 788
				    <'start'> when 'true' ->
					%% Line 789
					[Tool|_cor28]
				    %% Line 790
				    <'stop'> when 'true' ->
					%% Line 791
					call 'lists':'delete'
					    (Tool, _cor28)
				    ( <_cor9> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor9})
				      -| ['compiler_generated'] )
				  end
			      in  %% Line 793
				  {'ok',{'state',_cor25,_rec8,_cor26,_cor27,_cor10}}
			  %% Line 798
			  <ToStart> when 'true' ->
			      %% Line 799
			      case apply 'handle_apps2'/3
				       (ToStart, State, Cmd) of
				%% Line 800
				<{'ok',NewState}> when 'true' ->
				    %% Line 801
				    apply 'handle_apps'/3
					(Tools, NewState, Cmd)
				%% Line 802
				<_cor60> when 'true' ->
				    %% Line 803
				    apply 'handle_apps'/3
					(Tools, State, Cmd)
			      end
			end
		    -| ['compiler_generated'] )
		  ( <_cor29> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor24,_cor23,_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22})
		  -| [{'function_name',{'handle_apps',3}}] )
	    -| ['compiler_generated'] )
	end
'handle_apps2'/3 =
    %% Line 810
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{Name,Start_data}|[]],State,Cmd> when 'true' ->
	      %% Line 811
	      ( case State of
		  ( <( {'state',_cor31,_rec15,_cor32,_cor33,_cor34}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'handle_app'/4
				 ({Name,Start_data}, _rec15, _cor32, Cmd) of
			  %% Line 812
			  <'ok'> when 'true' ->
			      let <_cor12> =
				  %% Line 813
				  case Cmd of
				    %% Line 814
				    <'start'> when 'true' ->
					%% Line 815
					[Name|_cor34]
				    %% Line 816
				    <'stop'> when 'true' ->
					%% Line 818
					call 'lists':'delete'
					    (Name, _cor34)
				    ( <_cor11> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor11})
				      -| ['compiler_generated'] )
				  end
			      in  %% Line 820
				  {'ok',{'state',_cor31,_rec15,_cor32,_cor33,_cor12}}
			  %% Line 825
			  <_cor71> when 'true' ->
			      %% Line 826
			      'error'
			end
		    -| ['compiler_generated'] )
		  ( <_cor35> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 829
	  <[{Name,Start_data}|Rest],State,Cmd> when 'true' ->
	      %% Line 830
	      ( case State of
		  ( <( {'state',_cor72,_rec23,_cor73,_cor74,_cor75}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'handle_app'/4
				 ({Name,Start_data}, _rec23, _cor73, Cmd) of
			  %% Line 831
			  <'ok'> when 'true' ->
			      %% Line 832
			      apply 'handle_apps2'/3
				  (Rest, State, Cmd)
			  %% Line 833
			  <_cor82> when 'true' ->
			      %% Line 834
			      'error'
			end
		    -| ['compiler_generated'] )
		  ( <_cor76> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor30,_cor29,_cor28> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor30,_cor29,_cor28})
		  -| [{'function_name',{'handle_apps2',3}}] )
	    -| ['compiler_generated'] )
	end
'handle_app'/4 =
    %% Line 842
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{Name,{'start',{'func',Start,Stop}}},Data,_X_Pid,Cmd> when 'true' ->
	      let <_cor5> =
		  %% Line 843
		  case Cmd of
		    %% Line 844
		    <'start'> when 'true' ->
			%% Line 845
			Start
		    %% Line 846
		    <_cor24> when 'true' ->
			%% Line 847
			Stop
		  end
	      in  %% Line 849
		  case _cor5 of
		    %% Line 850
		    <{M,F,A}> when 'true' ->
			let <_cor7> =
			    catch
				%% Line 851
				call 'erlang':'apply'
				    (M, F, A)
			in  %% Line 851
			    case _cor7 of
			      %% Line 852
			      <Exit = {'EXIT',_cor25}> when 'true' ->
				  let <_cor8> =
				      %% Line 858
				      apply 'format_args'/1
					  (A)
				  in  do  %% Line 854
					  call 'io':'format'
					      ([10|[61|[61|[61|[61|[61|[61|[61|[69|[82|[82|[79|[82|[32|[40|[119|[101|[98|[116|[111|[111|[108|[44|[32|[108|[105|[110|[101|[32|[126|[119|[41|[32|[61|[61|[61|[61|[61|[61|[61|[10|[67|[111|[117|[108|[100|[32|[110|[111|[116|[32|[115|[116|[97|[114|[116|[32|[97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[32|[39|[126|[112|[39|[10|[10|[126|[119|[58|[126|[119|[40|[126|[115|[41|[32|[45|[62|[10|[126|[112|[10|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 858
																																																																				     [858|[Name|[M|[F|[_cor8|[Exit|[]]]]]]])
					  %% Line 859
					  call 'ets':'delete'
					      (Data, Name)
			      %% Line 860
			      <_X_OK> when 'true' ->
				  %% Line 861
				  'ok'
			    end
		    %% Line 863
		    <_X_NoStart> when 'true' ->
			%% Line 864
			'ok'
		  end
	  %% Line 868
	  <{Name,{'start',{'child',ChildSpec}}},Data,Pid,Cmd> when 'true' ->
	      %% Line 869
	      case Cmd of
		%% Line 870
		<'start'> when 'true' ->
		    let <_cor11> =
			catch
			    %% Line 871
			    call 'supervisor':'start_child'
				(Pid, ChildSpec)
		    in  %% Line 871
			case _cor11 of
			  %% Line 872
			  <{'ok',_cor26}> when 'true' ->
			      %% Line 873
			      'ok'
			  %% Line 874
			  <{'ok',_cor27,_cor28}> when 'true' ->
			      %% Line 875
			      'ok'
			  %% Line 876
			  <{'error',Reason}> when 'true' ->
			      do  %% Line 878
				  call 'io':'format'
				      ([10|[61|[61|[61|[61|[61|[61|[61|[69|[82|[82|[79|[82|[32|[40|[119|[101|[98|[116|[111|[111|[108|[44|[32|[108|[105|[110|[101|[32|[126|[119|[41|[32|[61|[61|[61|[61|[61|[61|[61|[10|[67|[111|[117|[108|[100|[32|[110|[111|[116|[32|[115|[116|[97|[114|[116|[32|[97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[32|[39|[126|[112|[39|[10|[10|[115|[117|[112|[101|[114|[118|[105|[115|[111|[114|[58|[115|[116|[97|[114|[116|[95|[99|[104|[105|[108|[100|[40|[126|[112|[44|[126|[112|[41|[32|[45|[62|[10|[126|[112|[10|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 882
																																																																																		 [882|[Name|[Pid|[ChildSpec|[{'error',Reason}|[]]]]]])
				  %% Line 883
				  call 'ets':'delete'
				      (Data, Name)
			  %% Line 884
			  <Error> when 'true' ->
			      do  %% Line 886
				  call 'io':'format'
				      ([10|[61|[61|[61|[61|[61|[61|[61|[69|[82|[82|[79|[82|[32|[40|[119|[101|[98|[116|[111|[111|[108|[44|[32|[108|[105|[110|[101|[32|[126|[119|[41|[32|[61|[61|[61|[61|[61|[61|[61|[10|[67|[111|[117|[108|[100|[32|[110|[111|[116|[32|[115|[116|[97|[114|[116|[32|[97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[32|[39|[126|[112|[39|[10|[10|[115|[117|[112|[101|[114|[118|[105|[115|[111|[114|[58|[115|[116|[97|[114|[116|[95|[99|[104|[105|[108|[100|[40|[126|[112|[44|[126|[112|[41|[32|[45|[62|[10|[126|[112|[10|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 890
																																																																																		 [890|[Name|[Pid|[ChildSpec|[Error|[]]]]]])
				  %% Line 891
				  call 'ets':'delete'
				      (Data, Name)
			end
		%% Line 893
		<'stop'> when 'true' ->
		    let <_cor14> =
			catch
			    let <_cor13> =
				%% Line 894
				call 'erlang':'element'
				    (1, ChildSpec)
			    in  %% Line 894
				call 'supervisor':'terminate_child'
				    ('websup', _cor13)
		    in  %% Line 894
			case _cor14 of
			  %% Line 895
			  <'ok'> when 'true' ->
			      let <_cor15> =
				  %% Line 896
				  call 'erlang':'element'
				      (1, ChildSpec)
			      in  %% Line 896
				  call 'supervisor':'delete_child'
				      ('websup', _cor15)
			  %% Line 897
			  <_cor29> when 'true' ->
			      %% Line 898
			      'error'
			end
		( <_cor17> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor17})
		  -| ['compiler_generated'] )
	      end
	  %% Line 904
	  <{Name,{'start',{'app',Real_name}}},Data,_X_Pid,Cmd> when 'true' ->
	      %% Line 905
	      case Cmd of
		%% Line 906
		<'start'> when 'true' ->
		    %% Line 907
		    case call 'application':'start'
			     (Real_name, 'temporary') of
		      %% Line 908
		      <'ok'> when 'true' ->
			  do  %% Line 909
			      call 'io':'write'
				  (Name)
			      %% Line 910
			      'ok'
		      %% Line 911
		      <{'error',{'already_started',_cor30}}> when 'true' ->
			  do  %% Line 914
			      call 'ets':'match_delete'
				  (Data, {Name,{'start',{'app',Real_name}}})
			      %% Line 915
			      'ok'
		      %% Line 916
		      <Error = {'error',_X_Reason}> when 'true' ->
			  do  %% Line 918
			      call 'io':'format'
				  ([10|[61|[61|[61|[61|[61|[61|[61|[69|[82|[82|[79|[82|[32|[40|[119|[101|[98|[116|[111|[111|[108|[44|[32|[108|[105|[110|[101|[32|[126|[119|[41|[32|[61|[61|[61|[61|[61|[61|[61|[10|[67|[111|[117|[108|[100|[32|[110|[111|[116|[32|[115|[116|[97|[114|[116|[32|[97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[32|[39|[126|[112|[39|[10|[10|[97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[58|[115|[116|[97|[114|[116|[40|[126|[112|[44|[126|[112|[41|[32|[45|[62|[10|[126|[112|[10|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 922
																																																																													      [922|[Name|[Real_name|['temporary'|[Error|[]]]]]])
			      %% Line 923
			      call 'ets':'delete'
				  (Data, Name)
		      ( <_cor18> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor18})
			-| ['compiler_generated'] )
		    end
		%% Line 926
		<'stop'> when 'true' ->
		    %% Line 927
		    call 'application':'stop'
			(Real_name)
		( <_cor19> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor19})
		  -| ['compiler_generated'] )
	      end
	  %% Line 933
	  <{Name,Incorrect},Data,_X_Pid,Cmd> when 'true' ->
	      do  %% Line 935
		  call 'io':'format'
		      ([10|[61|[61|[61|[61|[61|[61|[61|[69|[82|[82|[79|[82|[32|[40|[119|[101|[98|[116|[111|[111|[108|[44|[32|[108|[105|[110|[101|[32|[126|[119|[41|[32|[61|[61|[61|[61|[61|[61|[61|[10|[67|[111|[117|[108|[100|[32|[110|[111|[116|[32|[126|[119|[32|[97|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[32|[39|[126|[112|[39|[10|[10|[73|[110|[99|[111|[114|[114|[101|[99|[116|[32|[100|[97|[116|[97|[58|[32|[126|[112|[10|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 938
																																																																	     [938|[Cmd|[Name|[Incorrect|[]]]]])
		  %% Line 939
		  call 'ets':'delete'
		      (Data, Name)
	  ( <_cor23,_cor22,_cor21,_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor23,_cor22,_cor21,_cor20})
		  -| [{'function_name',{'handle_app',4}}] )
	    -| ['compiler_generated'] )
	end
'reload_started_apps'/0 =
    %% Line 948
    fun () ->
	%% Line 949
	[60|[115|[99|[114|[105|[112|[116|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[102|[117|[110|[99|[116|[105|[111|[110|[32|[114|[101|[108|[111|[97|[100|[67|[111|[109|[112|[105|[108|[101|[100|[76|[105|[115|[116|[40|[41|[10|[32|[32|[32|[32|[32|[32|[32|[32|[123|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[112|[97|[114|[101|[110|[116|[46|[112|[97|[114|[101|[110|[116|[46|[116|[111|[112|[49|[46|[100|[111|[99|[117|[109|[101|[110|[116|[46|[108|[111|[99|[97|[116|[105|[111|[110|[46|[104|[114|[101|[102|[61|[34|[47|[119|[101|[98|[116|[111|[111|[108|[47|[119|[101|[98|[116|[111|[111|[108|[47|[115|[116|[97|[114|[116|[101|[100|[95|[116|[111|[111|[108|[115|[34|[59|[10|[32|[32|[32|[32|[32|[32|[32|[32|[125|[10|[32|[32|[32|[32|[32|[60|[47|[115|[99|[114|[105|[112|[116|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
'show_unstarted_apps'/1 =
    %% Line 956
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 967
	    apply 'list_available_apps'/1
		(_cor0)
	in  let <_cor2> =
		%% Line 967
		call 'erlang':'++'
		    (_cor1, [10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[84|[82|[62|[60|[84|[68|[32|[67|[79|[76|[83|[80|[65|[78|[61|[50|[62|[38|[110|[98|[115|[112|[59|[60|[47|[84|[68|[62|[60|[47|[84|[82|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[84|[82|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[84|[68|[32|[67|[79|[76|[83|[80|[65|[78|[61|[50|[32|[65|[76|[73|[71|[78|[61|[34|[99|[101|[110|[116|[101|[114|[34|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[73|[78|[80|[85|[84|[32|[84|[89|[80|[69|[61|[115|[117|[98|[109|[105|[116|[32|[86|[65|[76|[85|[69|[61|[34|[83|[116|[97|[114|[116|[34|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[68|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[82|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[65|[66|[76|[69|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[68|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[84|[68|[62|[32|[32|[32|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[84|[111|[32|[83|[116|[97|[114|[116|[32|[97|[32|[84|[111|[111|[108|[58|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[85|[76|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[76|[73|[62|[83|[101|[108|[101|[99|[116|[32|[116|[104|[101|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[99|[104|[101|[99|[107|[98|[111|[120|[32|[102|[111|[114|[32|[101|[97|[99|[104|[32|[116|[111|[111|[108|[32|[116|[111|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[115|[116|[97|[114|[116|[46|[60|[47|[76|[73|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[76|[73|[62|[67|[108|[105|[99|[107|[32|[111|[110|[32|[116|[104|[101|[32|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[98|[117|[116|[116|[111|[110|[32|[109|[97|[114|[107|[101|[100|[32|[60|[69|[77|[62|[83|[116|[97|[114|[116|[60|[47|[69|[77|[62|[46|[60|[47|[76|[73|[62|[60|[47|[85|[76|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[68|[62|[32|[32|[32|[32|[32|[32|[32|[32|[32|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[82|[62|[10|[32|[32|[32|[32|[32|[32|[60|[47|[84|[65|[66|[76|[69|[62|[32|[10|[32|[32|[32|[32|[60|[47|[70|[79|[82|[77|[62|[10|[32|[32|[32|[60|[47|[84|[68|[62|[60|[47|[84|[82|[62|[10|[32|[32|[32|[60|[84|[82|[62|[60|[84|[68|[62|[38|[110|[98|[115|[112|[59|[60|[47|[84|[68|[62|[60|[47|[84|[82|[62|[10|[32|[32|[32|[60|[47|[84|[65|[66|[76|[69|
	    in  %% Line 967
		call 'erlang':'++'
		    ([60|[84|[65|[66|[76|[69|[32|[72|[69|[73|[71|[72|[84|[61|[49|[48|[48|[37|[32|[32|[87|[73|[68|[84|[72|[61|[49|[48|[48|[37|[32|[66|[79|[82|[68|[69|[82|[61|[48|[62|[32|[10|[32|[32|[32|[32|[60|[84|[82|[32|[72|[69|[73|[71|[72|[84|[61|[56|[48|[37|[62|[60|[84|[68|[32|[65|[76|[73|[71|[78|[61|[34|[99|[101|[110|[116|[101|[114|[34|[32|[86|[65|[76|[73|[71|[78|[61|[34|[109|[105|[100|[100|[108|[101|[34|[62|[32|[10|[32|[32|[32|[32|[32|[32|[60|[70|[79|[82|[77|[32|[78|[65|[77|[69|[61|[34|[115|[116|[111|[112|[95|[97|[112|[112|[115|[34|[32|[65|[67|[84|[73|[79|[78|[61|[34|[47|[119|[101|[98|[116|[111|[111|[108|[47|[119|[101|[98|[116|[111|[111|[108|[47|[115|[116|[97|[114|[116|[95|[116|[111|[111|[108|[115|[34|[32|[62|[10|[32|[32|[32|[32|[32|[32|[32|[60|[84|[65|[66|[76|[69|[32|[66|[79|[82|[68|[69|[82|[61|[49|[32|[87|[73|[68|[84|[72|[61|[54|[48|[37|[62|[10|[9|[32|[60|[84|[82|[32|[66|[71|[67|[79|[76|[79|[82|[61|[34|[35|[56|[56|[57|[57|[65|[65|[34|[62|[10|[9|[32|[32|[32|[60|[84|[68|[32|[65|[76|[73|[71|[78|[61|[67|[69|[78|[84|[69|[82|[32|[67|[79|[76|[83|[80|[65|[78|[61|[50|[62|[60|[70|[79|[78|[84|[32|[83|[73|[90|[69|[61|[52|[62|[65|[118|[97|[105|[108|[97|[98|[108|[101|[32|[84|[111|[111|[108|[115|[60|[70|[79|[78|[84|[62|[60|[47|[84|[68|[62|[10|[9|[32|[60|[47|[84|[82|[62|[10|[32|[9|[60|[84|[82|[62|[10|[9|[32|[32|[32|[60|[84|[68|[32|[87|[73|[68|[84|[72|[61|[53|[48|[37|[62|[10|[9|[32|[32|[32|[32|[32|[32|[32|[60|[84|[65|[66|[76|[69|[32|[66|[79|[82|[68|[69|[82|[61|[48|[62|[10|[9|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor2)
'list_available_apps'/1 =
    %% Line 994
    fun (_cor0) ->
	let <_cor10> =
	    %% Line 998
	    ( fun (_cor8) ->
		  case _cor8 of
		    <{Tool,_cor14}> when 'true' ->
			%% Line 999
			( case _cor0 of
			    ( <( {'state',_cor15,_cor16,_cor17,_cor18,_rec25}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_cor7> =
				      call 'lists':'member'
					  (Tool, _rec25)
				  in  call 'erlang':'=:='
					  ('false', _cor7)
			      -| ['compiler_generated'] )
			    ( <_cor19> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','state'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    ( <_cor9> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor9})
			    -| [{'function_name',{'-list_available_apps/1-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-list_available_apps/1-fun-0-'}}] )
	in  %% Line 1001
	    ( case _cor0 of
		( <( {'state',_cor20,_rec26,_cor21,_cor22,_cor23}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <_cor4> =
			  call 'ets':'select'
			      (_rec26, [{{'$1',{'web_data',{'$2','_'}}},[],[{{'$1','$2'}}]}])
		      in  let <Unstarted_apps> =
			      call 'lists':'filter'
				  (_cor10, _cor4)
			  in  %% Line 1002
			      case Unstarted_apps of
				%% Line 1003
				<[]> when 'true' ->
				    %% Line 1004
				    [60|[84|[82|[62|[60|[84|[68|[62|[65|[108|[108|[32|[116|[111|[111|[108|[115|[32|[97|[114|[101|[32|[115|[116|[97|[114|[116|[101|[100|[60|[47|[84|[68|[62|[60|[47|[84|[82|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
				%% Line 1005
				<_cor25> when 'true' ->
				    %% Line 1006
				    apply 'list_apps'/1
					(Unstarted_apps)
			      end
		  -| ['compiler_generated'] )
		( <_cor24> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'show_started_apps'/1 =
    %% Line 1016
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 1027
	    apply 'list_started_apps'/1
		(_cor0)
	in  let <_cor2> =
		%% Line 1027
		call 'erlang':'++'
		    (_cor1, [10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[84|[82|[62|[60|[84|[68|[32|[67|[79|[76|[83|[80|[65|[78|[61|[50|[62|[38|[110|[98|[115|[112|[59|[60|[47|[84|[68|[62|[60|[47|[84|[82|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[84|[82|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[84|[68|[32|[67|[79|[76|[83|[80|[65|[78|[61|[50|[32|[65|[76|[73|[71|[78|[61|[34|[99|[101|[110|[116|[101|[114|[34|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[73|[78|[80|[85|[84|[32|[84|[89|[80|[69|[61|[115|[117|[98|[109|[105|[116|[32|[86|[65|[76|[85|[69|[61|[34|[83|[116|[111|[112|[34|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[68|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[82|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[65|[66|[76|[69|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[68|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[84|[68|[62|[32|[32|[32|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[83|[116|[111|[112|[32|[97|[32|[84|[111|[111|[108|[58|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[85|[76|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[76|[73|[62|[83|[101|[108|[101|[99|[116|[32|[116|[104|[101|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[99|[104|[101|[99|[107|[98|[111|[120|[32|[102|[111|[114|[32|[101|[97|[99|[104|[32|[116|[111|[111|[108|[32|[116|[111|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[115|[116|[111|[112|[46|[60|[47|[76|[73|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[76|[73|[62|[67|[108|[105|[99|[107|[32|[111|[110|[32|[116|[104|[101|[32|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[98|[117|[116|[116|[111|[110|[32|[109|[97|[114|[107|[101|[100|[32|[60|[69|[77|[62|[83|[116|[111|[112|[60|[47|[69|[77|[62|[46|[60|[47|[76|[73|[62|[60|[47|[85|[76|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[68|[62|[32|[32|[32|[32|[32|[32|[32|[32|[32|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[82|[62|[10|[32|[32|[32|[32|[32|[32|[60|[47|[84|[65|[66|[76|[69|[62|[32|[10|[32|[32|[32|[32|[60|[47|[70|[79|[82|[77|[62|[10|[32|[32|[32|[60|[47|[84|[68|[62|[60|[47|[84|[82|[62|[10|[32|[32|[32|[60|[84|[82|[62|[60|[84|[68|[62|[38|[110|[98|[115|[112|[59|[60|[47|[84|[68|[62|[60|[47|[84|[82|[62|[10|[32|[32|[32|[60|[47|[84|[65|[66|[76|[69|
	    in  %% Line 1027
		call 'erlang':'++'
		    ([60|[84|[65|[66|[76|[69|[32|[72|[69|[73|[71|[72|[84|[61|[49|[48|[48|[37|[32|[32|[87|[73|[68|[84|[72|[61|[49|[48|[48|[37|[32|[66|[79|[82|[68|[69|[82|[61|[48|[62|[32|[10|[32|[32|[32|[32|[60|[84|[82|[32|[72|[69|[73|[71|[72|[84|[61|[56|[48|[37|[62|[60|[84|[68|[32|[65|[76|[73|[71|[78|[61|[34|[99|[101|[110|[116|[101|[114|[34|[32|[86|[65|[76|[73|[71|[78|[61|[34|[109|[105|[100|[100|[108|[101|[34|[62|[32|[10|[32|[32|[32|[32|[32|[32|[60|[70|[79|[82|[77|[32|[78|[65|[77|[69|[61|[34|[115|[116|[111|[112|[95|[97|[112|[112|[115|[34|[32|[65|[67|[84|[73|[79|[78|[61|[34|[47|[119|[101|[98|[116|[111|[111|[108|[47|[119|[101|[98|[116|[111|[111|[108|[47|[115|[116|[111|[112|[95|[116|[111|[111|[108|[115|[34|[32|[62|[10|[32|[32|[32|[32|[32|[32|[32|[60|[84|[65|[66|[76|[69|[32|[66|[79|[82|[68|[69|[82|[61|[49|[32|[87|[73|[68|[84|[72|[61|[54|[48|[37|[62|[10|[9|[32|[60|[84|[82|[32|[66|[71|[67|[79|[76|[79|[82|[61|[34|[35|[56|[56|[57|[57|[65|[65|[34|[62|[10|[9|[32|[32|[32|[60|[84|[68|[32|[65|[76|[73|[71|[78|[61|[67|[69|[78|[84|[69|[82|[32|[67|[79|[76|[83|[80|[65|[78|[61|[50|[62|[60|[70|[79|[78|[84|[32|[83|[73|[90|[69|[61|[52|[62|[83|[116|[97|[114|[116|[101|[100|[32|[84|[111|[111|[108|[115|[60|[70|[79|[78|[84|[62|[60|[47|[84|[68|[62|[10|[9|[32|[60|[47|[84|[82|[62|[10|[32|[9|[60|[84|[82|[62|[10|[9|[32|[32|[32|[60|[84|[68|[32|[87|[73|[68|[84|[72|[61|[53|[48|[37|[62|[10|[9|[32|[32|[32|[32|[32|[32|[32|[60|[84|[65|[66|[76|[69|[32|[66|[79|[82|[68|[69|[82|[61|[48|[62|[10|[9|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor2)
'list_started_apps'/1 =
    %% Line 1052
    fun (_cor0) ->
	let <_cor5> =
	    %% Line 1053
	    ( fun (_cor3) ->
		  {{_cor3,{'web_data',{'$1','_'}}},[],[{{_cor3,'$1'}}|[]]}
	      -| [{'id',{0,0,'-list_started_apps/1-fun-0-'}}] )
	in  %% Line 1054
	    ( case _cor0 of
		( <( {'state',_cor12,_cor13,_cor14,_cor15,_rec27}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <MS> =
			  call 'lists':'map'
			      (_cor5, _rec27)
		      in  let <Started_apps> =
			      %% Line 1055
			      call 'ets':'select'
				  (_cor13, MS)
			  in  %% Line 1056
			      case Started_apps of
				%% Line 1057
				<[]> when 'true' ->
				    %% Line 1058
				    [60|[84|[82|[62|[60|[84|[68|[62|[78|[111|[32|[116|[111|[111|[108|[32|[105|[115|[32|[115|[116|[97|[114|[116|[101|[100|[32|[121|[101|[116|[46|[60|[47|[84|[68|[62|[60|[47|[84|[82|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
				%% Line 1059
				<_cor22> when 'true' ->
				    %% Line 1060
				    apply 'list_apps'/1
					(Started_apps)
			      end
		  -| ['compiler_generated'] )
		( <_cor16> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'list_apps'/1 =
    %% Line 1064
    fun (_cor0) ->
	let <_cor7> =
	    %% Line 1065
	    ( fun (_cor5) ->
		  case _cor5 of
		    <{Tool,Name}> when 'true' ->
			let <_cor3> =
			    %% Line 1068
			    call 'erlang':'atom_to_list'
				(Tool)
			in  let <_cor1> =
				%% Line 1069
				call 'erlang':'++'
				    (Name, [32|[32|[32|[32|[32|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[47|[84|[68|[62|[60|[47|[84|[82|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
			    in  let <_cor2> =
				    %% Line 1069
				    call 'erlang':'++'
					([34|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor1)
				in  let <_cor4> =
					%% Line 1068
					call 'erlang':'++'
					    (_cor3, _cor2)
				    in  %% Line 1068
					call 'erlang':'++'
					    ([60|[84|[82|[62|[60|[84|[68|[62|[10|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[60|[73|[78|[80|[85|[84|[32|[84|[89|[80|[69|[61|[34|[99|[104|[101|[99|[107|[98|[111|[120|[34|[32|[78|[65|[77|[69|[61|[34|[97|[112|[112|[34|[32|[86|[65|[76|[85|[69|[61|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor4)
		    ( <_cor6> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor6})
			    -| [{'function_name',{'-list_apps/1-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-list_apps/1-fun-0-'}}] )
	in  %% Line 1065
	    call 'lists':'map'
		(_cor7, _cor0)
'get_tools1'/1 =
    %% Line 1086
    fun (_cor0) ->
	%% Line 1087
	apply 'get_tools1'/2
	    (_cor0, [])
'get_tools1'/2 =
    %% Line 1089
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[Dir|Rest],Data>
	      when call 'erlang':'is_list'
		    (Dir) ->
	      let <_cor7> =
		  %% Line 1090
		  case call 'filename':'basename'
			   (Dir) of
		    %% Line 1092
		    <[101|[98|[105|[110]]]]> when 'true' ->
			let <_cor2> =
			    %% Line 1093
			    call 'filename':'dirname'
				(Dir)
			in  let <_cor3> =
				%% Line 1093
				call 'filename':'join'
				    (_cor2, [112|[114|[105|[118]]]])
			    in  let <_cor4> =
				    %% Line 1093
				    apply 'get_tools2'/1
					(_cor3)
				in  let <_cor5> =
					%% Line 1094
					apply 'get_tools2'/1
					    (Dir)
				    in  %% Line 1093
					[_cor4|_cor5]
		    %% Line 1095
		    <_cor11> when 'true' ->
			%% Line 1096
			apply 'get_tools2'/1
			    (Dir)
		  end
	      in  %% Line 1098
		  apply 'get_tools1'/2
		      (Rest, [_cor7|Data])
	  %% Line 1100
	  <[],Data> when 'true' ->
	      %% Line 1101
	      call 'lists':'flatten'
		  (Data)
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9})
		  -| [{'function_name',{'get_tools1',2}}] )
	    -| ['compiler_generated'] )
	end
'get_tools2'/1 =
    %% Line 1109
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 1110
	    apply 'tool_files'/1
		(_cor0)
	in  %% Line 1110
	    apply 'get_tools2'/2
		(_cor1, [])
'get_tools2'/2 =
    %% Line 1112
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[ToolFile|Rest],Data> when 'true' ->
	      %% Line 1113
	      case apply 'get_tools3'/1
		       (ToolFile) of
		%% Line 1114
		<{'tool',WebData}> when 'true' ->
		    %% Line 1115
		    apply 'get_tools2'/2
			(Rest, [{'tool',WebData}|Data])
		%% Line 1116
		<{'error',_X_Reason}> when 'true' ->
		    %% Line 1117
		    apply 'get_tools2'/2
			(Rest, Data)
		%% Line 1118
		<'nodata'> when 'true' ->
		    %% Line 1119
		    apply 'get_tools2'/2
			(Rest, Data)
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1122
	  <[],Data> when 'true' ->
	      %% Line 1123
	      Data
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'get_tools2',2}}] )
	    -| ['compiler_generated'] )
	end
'get_tools3'/1 =
    %% Line 1131
    fun (_cor0) ->
	%% Line 1132
	case call 'file':'consult'
		 (_cor0) of
	  %% Line 1133
	  <{'error','open'}> when 'true' ->
	      %% Line 1134
	      {'error','nofile'}
	  %% Line 1135
	  <{'error','read'}> when 'true' ->
	      %% Line 1136
	      {'error','format'}
	  %% Line 1137
	  <{'ok',[{'version',[49|[46|[50]]]}|[ToolInfo|[]]]}>
	      when call 'erlang':'is_list'
		    (ToolInfo) ->
	      %% Line 1138
	      apply 'webdata'/1
		  (ToolInfo)
	  %% Line 1139
	  <{'ok',[{'version',_X_Vsn}|[_X_Info|[]]]}> when 'true' ->
	      %% Line 1140
	      {'error','old_version'}
	  %% Line 1141
	  <{'ok',_X_Other}> when 'true' ->
	      %% Line 1142
	      {'error','format'}
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor1})
	    -| ['compiler_generated'] )
	end
'webdata'/1 =
    %% Line 1152
    fun (_cor0) ->
	%% Line 1153
	case call 'proplists':'get_value'
		 ('config_func', _cor0, 'nodata') of
	  %% Line 1154
	  <{M,F,A}> when 'true' ->
	      %% Line 1155
	      {'tool',[{'config_func',{M,F,A}}|[]]}
	  %% Line 1156
	  <_cor3> when 'true' ->
	      %% Line 1157
	      'nodata'
	end
'tool_files'/1 =
    %% Line 1171
    fun (_cor0) ->
	%% Line 1172
	case call 'file':'list_dir'
		 (_cor0) of
	  %% Line 1173
	  <{'ok',Files}> when 'true' ->
	      %% Line 1174
	      apply 'filter_tool_files'/2
		  (_cor0, Files)
	  %% Line 1175
	  <{'error',_X_Reason}> when 'true' ->
	      %% Line 1176
	      []
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor1})
	    -| ['compiler_generated'] )
	end
'filter_tool_files'/2 =
    %% Line 1185
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Dir,[]> when 'true' ->
	      %% Line 1186
	      []
	  %% Line 1187
	  <Dir,[File|Rest]> when 'true' ->
	      %% Line 1188
	      case call 'filename':'extension'
		       (File) of
		%% Line 1189
		<[46|[116|[111|[111|[108]]]]]> when 'true' ->
		    let <_cor2> =
			%% Line 1190
			call 'filename':'join'
			    (Dir, File)
		    in  let <_cor3> =
			    %% Line 1190
			    apply 'filter_tool_files'/2
				(Dir, Rest)
			in  %% Line 1190
			    [_cor2|_cor3]
		%% Line 1191
		<_cor7> when 'true' ->
		    %% Line 1192
		    apply 'filter_tool_files'/2
			(Dir, Rest)
	      end
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'filter_tool_files',2}}] )
	    -| ['compiler_generated'] )
	end
'ffunc'/1 =
    %% Line 1198
    fun (_cor0) ->
	case _cor0 of
	  <{M,F,A}>
	      when call 'erlang':'is_list'
		    (A) ->
	      let <_cor1> =
		  %% Line 1199
		  apply 'format_args'/1
		      (A)
	      in  %% Line 1199
		  call 'io_lib':'format'
		      ([126|[119|[58|[126|[119|[40|[126|[115|[41|[10]]]]]]]]]], [M|[F|[_cor1|[]]]])
	  %% Line 1200
	  <{M,F,A}>
	      when call 'erlang':'is_integer'
		    (A) ->
	      %% Line 1201
	      call 'io_lib':'format'
		  ([126|[119|[58|[126|[119|[47|[126|[119|[10]]]]]]]]], [M|[F|[A|[]]]])
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'ffunc',1}}] )
	    -| ['compiler_generated'] )
	end
'format_args'/1 =
    %% Line 1203
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 1204
	      []
	  %% Line 1205
	  <Args> when 'true' ->
	      let <_cor1> =
		  %% Line 1206
		  call 'erlang':'length'
		      (Args)
	      in  let <_cor2> =
		      %% Line 1206
		      call 'erlang':'-'
			  (_cor1, 1)
		  in  let <_cor3> =
			  %% Line 1206
			  call 'lists':'duplicate'
			      (_cor2, [44|[126|[112]]])
		      in  let <Str> =
			      %% Line 1206
			      call 'lists':'append'
				  ([[126|[112]]|_cor3])
			  in  %% Line 1207
			      call 'io_lib':'format'
				  (Str, Args)
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('webtool')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('webtool', _cor0)
end