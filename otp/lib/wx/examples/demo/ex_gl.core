module 'ex_gl' ['code_change'/3,
		'handle_call'/3,
		'handle_cast'/2,
		'handle_event'/2,
		'handle_info'/2,
		'handle_sync_event'/3,
		'init'/1,
		'module_info'/0,
		'module_info'/1,
		'start'/1,
		'terminate'/2]
    attributes [%% Line 21
		'behaviour' =
		    %% Line 21
		    ['wx_object'],
		%% Line 25
		'type' =
		    %% Line 25
		    [{{'record','wx'},[{'typed_record_field',{'record_field',25,{'atom',25,'id'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'obj'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'remote_type',26,[{'atom',26,'wx'}|[{'atom',26,'wx_object'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'userData'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'type',27,'term',[]}]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'event'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'type',28,'event',[]}]]}}]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{'wx',{'type',31,'record',[{'atom',31,'wx'}]},[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','wxNavigationKey'},[{'typed_record_field',{'record_field',35,{'atom',35,'type'}},{'type',35,'union',[{'atom',35,'undefined'}|[{'type',35,'wxNavigationKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'flags'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'integer',[]}]]}}|[{'typed_record_field',{'record_field',37,{'atom',37,'focus'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'remote_type',37,[{'atom',37,'wxWindow'}|[{'atom',37,'wxWindow'}|[[]]]]}]]}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{'wxNavigationKeyEventType',{'atom',38,'navigation_key'},[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{'wxNavigationKey',{'type',39,'record',[{'atom',39,'wxNavigationKey'}]},[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','wxSash'},[{'typed_record_field',{'record_field',41,{'atom',41,'type'}},{'type',41,'union',[{'atom',41,'undefined'}|[{'type',41,'wxSashEventType',[]}]]}}|[{'typed_record_field',{'record_field',42,{'atom',42,'edge'}},{'type',42,'union',[{'atom',42,'undefined'}|[{'remote_type',42,[{'atom',42,'wx'}|[{'atom',42,'wx_enum'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'dragRect'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'tuple',[{'ann_type',43,[{'var',43,'X'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'Y'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'W'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'H'}|[{'type',43,'integer',[]}]]}]]]]}]]}}|[{'typed_record_field',{'record_field',44,{'atom',44,'dragStatus'}},{'type',44,'union',[{'atom',44,'undefined'}|[{'remote_type',44,[{'atom',44,'wx'}|[{'atom',44,'wx_enum'}|[[]]]]}]]}}]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'wxSashEventType',{'atom',45,'sash_dragged'},[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{'wxSash',{'type',46,'record',[{'atom',46,'wxSash'}]},[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','wxList'},[{'typed_record_field',{'record_field',48,{'atom',48,'type'}},{'type',48,'union',[{'atom',48,'undefined'}|[{'type',48,'wxListEventType',[]}]]}}|[{'typed_record_field',{'record_field',49,{'atom',49,'code'}},{'type',49,'union',[{'atom',49,'undefined'}|[{'type',49,'integer',[]}]]}}|[{'typed_record_field',{'record_field',50,{'atom',50,'oldItemIndex'}},{'type',50,'union',[{'atom',50,'undefined'}|[{'type',50,'integer',[]}]]}}|[{'typed_record_field',{'record_field',51,{'atom',51,'itemIndex'}},{'type',51,'union',[{'atom',51,'undefined'}|[{'type',51,'integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'col'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'pointDrag'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'tuple',[{'ann_type',53,[{'var',53,'X'}|[{'type',53,'integer',[]}]]}|[{'ann_type',53,[{'var',53,'Y'}|[{'type',53,'integer',[]}]]}]]}]]}}]]]]]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{'wxListEventType',{'type',54,'union',[{'atom',54,'command_list_begin_drag'}|[{'atom',54,'command_list_begin_rdrag'}|[{'atom',54,'command_list_begin_label_edit'}|[{'atom',54,'command_list_end_label_edit'}|[{'atom',54,'command_list_delete_item'}|[{'atom',54,'command_list_delete_all_items'}|[{'atom',54,'command_list_key_down'}|[{'atom',54,'command_list_insert_item'}|[{'atom',54,'command_list_col_click'}|[{'atom',54,'command_list_col_right_click'}|[{'atom',54,'command_list_col_begin_drag'}|[{'atom',54,'command_list_col_dragging'}|[{'atom',54,'command_list_col_end_drag'}|[{'atom',54,'command_list_item_selected'}|[{'atom',54,'command_list_item_deselected'}|[{'atom',54,'command_list_item_right_click'}|[{'atom',54,'command_list_item_middle_click'}|[{'atom',54,'command_list_item_activated'}|[{'atom',54,'command_list_item_focused'}|[{'atom',54,'command_list_cache_hint'}]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{'wxList',{'type',55,'record',[{'atom',55,'wxList'}]},[]}],
		%% Line 57
		'type' =
		    %% Line 57
		    [{{'record','wxNotebook'},[{'typed_record_field',{'record_field',57,{'atom',57,'type'}},{'type',57,'union',[{'atom',57,'undefined'}|[{'type',57,'wxNotebookEventType',[]}]]}}],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{'wxNotebookEventType',{'type',58,'union',[{'atom',58,'command_notebook_page_changed'}|[{'atom',58,'command_notebook_page_changing'}]]},[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{'wxNotebook',{'type',59,'record',[{'atom',59,'wxNotebook'}]},[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','wxDisplayChanged'},[{'typed_record_field',{'record_field',61,{'atom',61,'type'}},{'type',61,'union',[{'atom',61,'undefined'}|[{'type',61,'wxDisplayChangedEventType',[]}]]}}],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{'wxDisplayChangedEventType',{'atom',62,'display_changed'},[]}],
		%% Line 63
		'type' =
		    %% Line 63
		    [{'wxDisplayChanged',{'type',63,'record',[{'atom',63,'wxDisplayChanged'}]},[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','wxErase'},[{'typed_record_field',{'record_field',65,{'atom',65,'type'}},{'type',65,'union',[{'atom',65,'undefined'}|[{'type',65,'wxEraseEventType',[]}]]}}|[{'typed_record_field',{'record_field',66,{'atom',66,'dc'}},{'type',66,'union',[{'atom',66,'undefined'}|[{'remote_type',66,[{'atom',66,'wxDC'}|[{'atom',66,'wxDC'}|[[]]]]}]]}}]],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{'wxEraseEventType',{'atom',67,'erase_background'},[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{'wxErase',{'type',68,'record',[{'atom',68,'wxErase'}]},[]}],
		%% Line 70
		'type' =
		    %% Line 70
		    [{{'record','wxKey'},[{'typed_record_field',{'record_field',70,{'atom',70,'type'}},{'type',70,'union',[{'atom',70,'undefined'}|[{'type',70,'wxKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',71,{'atom',71,'x'}},{'type',71,'union',[{'atom',71,'undefined'}|[{'type',71,'integer',[]}]]}}|[{'typed_record_field',{'record_field',72,{'atom',72,'y'}},{'type',72,'union',[{'atom',72,'undefined'}|[{'type',72,'integer',[]}]]}}|[{'typed_record_field',{'record_field',73,{'atom',73,'keyCode'}},{'type',73,'union',[{'atom',73,'undefined'}|[{'type',73,'integer',[]}]]}}|[{'typed_record_field',{'record_field',74,{'atom',74,'controlDown'}},{'type',74,'union',[{'atom',74,'undefined'}|[{'type',74,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'shiftDown'}},{'type',75,'union',[{'atom',75,'undefined'}|[{'type',75,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',76,{'atom',76,'altDown'}},{'type',76,'union',[{'atom',76,'undefined'}|[{'type',76,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',77,{'atom',77,'metaDown'}},{'type',77,'union',[{'atom',77,'undefined'}|[{'type',77,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',78,{'atom',78,'scanCode'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',79,{'atom',79,'uniChar'}},{'type',79,'union',[{'atom',79,'undefined'}|[{'type',79,'integer',[]}]]}}|[{'typed_record_field',{'record_field',80,{'atom',80,'rawCode'}},{'type',80,'union',[{'atom',80,'undefined'}|[{'type',80,'integer',[]}]]}}|[{'typed_record_field',{'record_field',81,{'atom',81,'rawFlags'}},{'type',81,'union',[{'atom',81,'undefined'}|[{'type',81,'integer',[]}]]}}]]]]]]]]]]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{'wxKeyEventType',{'type',82,'union',[{'atom',82,'char'}|[{'atom',82,'char_hook'}|[{'atom',82,'key_down'}|[{'atom',82,'key_up'}]]]]},[]}],
		%% Line 83
		'type' =
		    %% Line 83
		    [{'wxKey',{'type',83,'record',[{'atom',83,'wxKey'}]},[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{{'record','wxWindowDestroy'},[{'typed_record_field',{'record_field',85,{'atom',85,'type'}},{'type',85,'union',[{'atom',85,'undefined'}|[{'type',85,'wxWindowDestroyEventType',[]}]]}}],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{'wxWindowDestroyEventType',{'atom',86,'destroy'},[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{'wxWindowDestroy',{'type',87,'record',[{'atom',87,'wxWindowDestroy'}]},[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','wxCalendar'},[{'typed_record_field',{'record_field',89,{'atom',89,'type'}},{'type',89,'union',[{'atom',89,'undefined'}|[{'type',89,'wxCalendarEventType',[]}]]}}],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{'wxCalendarEventType',{'type',90,'union',[{'atom',90,'calendar_sel_changed'}|[{'atom',90,'calendar_day_changed'}|[{'atom',90,'calendar_month_changed'}|[{'atom',90,'calendar_year_changed'}|[{'atom',90,'calendar_doubleclicked'}|[{'atom',90,'calendar_weekday_clicked'}]]]]]]},[]}],
		%% Line 91
		'type' =
		    %% Line 91
		    [{'wxCalendar',{'type',91,'record',[{'atom',91,'wxCalendar'}]},[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','wxSplitter'},[{'typed_record_field',{'record_field',93,{'atom',93,'type'}},{'type',93,'union',[{'atom',93,'undefined'}|[{'type',93,'wxSplitterEventType',[]}]]}}],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{'wxSplitterEventType',{'type',94,'union',[{'atom',94,'command_splitter_sash_pos_changed'}|[{'atom',94,'command_splitter_sash_pos_changing'}|[{'atom',94,'command_splitter_doubleclicked'}|[{'atom',94,'command_splitter_unsplit'}]]]]},[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{'wxSplitter',{'type',95,'record',[{'atom',95,'wxSplitter'}]},[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','wxScroll'},[{'typed_record_field',{'record_field',97,{'atom',97,'type'}},{'type',97,'union',[{'atom',97,'undefined'}|[{'type',97,'wxScrollEventType',[]}]]}}|[{'typed_record_field',{'record_field',98,{'atom',98,'commandInt'}},{'type',98,'union',[{'atom',98,'undefined'}|[{'type',98,'integer',[]}]]}}|[{'typed_record_field',{'record_field',99,{'atom',99,'extraLong'}},{'type',99,'union',[{'atom',99,'undefined'}|[{'type',99,'integer',[]}]]}}]]],[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{'wxScrollEventType',{'type',100,'union',[{'atom',100,'scroll_top'}|[{'atom',100,'scroll_bottom'}|[{'atom',100,'scroll_lineup'}|[{'atom',100,'scroll_linedown'}|[{'atom',100,'scroll_pageup'}|[{'atom',100,'scroll_pagedown'}|[{'atom',100,'scroll_thumbtrack'}|[{'atom',100,'scroll_thumbrelease'}|[{'atom',100,'scroll_changed'}]]]]]]]]]},[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{'wxScroll',{'type',101,'record',[{'atom',101,'wxScroll'}]},[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','wxMenu'},[{'typed_record_field',{'record_field',103,{'atom',103,'type'}},{'type',103,'union',[{'atom',103,'undefined'}|[{'type',103,'wxMenuEventType',[]}]]}}],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{'wxMenuEventType',{'type',104,'union',[{'atom',104,'menu_open'}|[{'atom',104,'menu_close'}|[{'atom',104,'menu_highlight'}]]]},[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{'wxMenu',{'type',105,'record',[{'atom',105,'wxMenu'}]},[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','wxContextMenu'},[{'typed_record_field',{'record_field',107,{'atom',107,'type'}},{'type',107,'union',[{'atom',107,'undefined'}|[{'type',107,'wxContextMenuEventType',[]}]]}}],[]}],
		%% Line 108
		'type' =
		    %% Line 108
		    [{'wxContextMenuEventType',{'atom',108,'context_menu'},[]}],
		%% Line 109
		'type' =
		    %% Line 109
		    [{'wxContextMenu',{'type',109,'record',[{'atom',109,'wxContextMenu'}]},[]}],
		%% Line 111
		'type' =
		    %% Line 111
		    [{{'record','wxShow'},[{'typed_record_field',{'record_field',111,{'atom',111,'type'}},{'type',111,'union',[{'atom',111,'undefined'}|[{'type',111,'wxShowEventType',[]}]]}}],[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{'wxShowEventType',{'atom',112,'show'},[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{'wxShow',{'type',113,'record',[{'atom',113,'wxShow'}]},[]}],
		%% Line 115
		'type' =
		    %% Line 115
		    [{{'record','wxSpin'},[{'typed_record_field',{'record_field',115,{'atom',115,'type'}},{'type',115,'union',[{'atom',115,'undefined'}|[{'type',115,'wxSpinEventType',[]}]]}}|[{'typed_record_field',{'record_field',116,{'atom',116,'commandInt'}},{'type',116,'union',[{'atom',116,'undefined'}|[{'type',116,'integer',[]}]]}}]],[]}],
		%% Line 117
		'type' =
		    %% Line 117
		    [{'wxSpinEventType',{'type',117,'union',[{'atom',117,'command_spinctrl_updated'}|[{'atom',117,'spin_up'}|[{'atom',117,'spin_down'}|[{'atom',117,'spin'}]]]]},[]}],
		%% Line 118
		'type' =
		    %% Line 118
		    [{'wxSpin',{'type',118,'record',[{'atom',118,'wxSpin'}]},[]}],
		%% Line 120
		'type' =
		    %% Line 120
		    [{{'record','wxSetCursor'},[{'typed_record_field',{'record_field',120,{'atom',120,'type'}},{'type',120,'union',[{'atom',120,'undefined'}|[{'type',120,'wxSetCursorEventType',[]}]]}}],[]}],
		%% Line 121
		'type' =
		    %% Line 121
		    [{'wxSetCursorEventType',{'atom',121,'set_cursor'},[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{'wxSetCursor',{'type',122,'record',[{'atom',122,'wxSetCursor'}]},[]}],
		%% Line 124
		'type' =
		    %% Line 124
		    [{{'record','wxFontPicker'},[{'typed_record_field',{'record_field',124,{'atom',124,'type'}},{'type',124,'union',[{'atom',124,'undefined'}|[{'type',124,'wxFontPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',125,{'atom',125,'font'}},{'type',125,'union',[{'atom',125,'undefined'}|[{'remote_type',125,[{'atom',125,'wxFont'}|[{'atom',125,'wxFont'}|[[]]]]}]]}}]],[]}],
		%% Line 126
		'type' =
		    %% Line 126
		    [{'wxFontPickerEventType',{'atom',126,'command_fontpicker_changed'},[]}],
		%% Line 127
		'type' =
		    %% Line 127
		    [{'wxFontPicker',{'type',127,'record',[{'atom',127,'wxFontPicker'}]},[]}],
		%% Line 129
		'type' =
		    %% Line 129
		    [{{'record','wxScrollWin'},[{'typed_record_field',{'record_field',129,{'atom',129,'type'}},{'type',129,'union',[{'atom',129,'undefined'}|[{'type',129,'wxScrollWinEventType',[]}]]}}],[]}],
		%% Line 130
		'type' =
		    %% Line 130
		    [{'wxScrollWinEventType',{'type',130,'union',[{'atom',130,'scrollwin_top'}|[{'atom',130,'scrollwin_bottom'}|[{'atom',130,'scrollwin_lineup'}|[{'atom',130,'scrollwin_linedown'}|[{'atom',130,'scrollwin_pageup'}|[{'atom',130,'scrollwin_pagedown'}|[{'atom',130,'scrollwin_thumbtrack'}|[{'atom',130,'scrollwin_thumbrelease'}]]]]]]]]},[]}],
		%% Line 131
		'type' =
		    %% Line 131
		    [{'wxScrollWin',{'type',131,'record',[{'atom',131,'wxScrollWin'}]},[]}],
		%% Line 133
		'type' =
		    %% Line 133
		    [{{'record','wxPaint'},[{'typed_record_field',{'record_field',133,{'atom',133,'type'}},{'type',133,'union',[{'atom',133,'undefined'}|[{'type',133,'wxPaintEventType',[]}]]}}],[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{'wxPaintEventType',{'atom',134,'paint'},[]}],
		%% Line 135
		'type' =
		    %% Line 135
		    [{'wxPaint',{'type',135,'record',[{'atom',135,'wxPaint'}]},[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','wxChildFocus'},[{'typed_record_field',{'record_field',137,{'atom',137,'type'}},{'type',137,'union',[{'atom',137,'undefined'}|[{'type',137,'wxChildFocusEventType',[]}]]}}],[]}],
		%% Line 138
		'type' =
		    %% Line 138
		    [{'wxChildFocusEventType',{'atom',138,'child_focus'},[]}],
		%% Line 139
		'type' =
		    %% Line 139
		    [{'wxChildFocus',{'type',139,'record',[{'atom',139,'wxChildFocus'}]},[]}],
		%% Line 141
		'type' =
		    %% Line 141
		    [{{'record','wxMaximize'},[{'typed_record_field',{'record_field',141,{'atom',141,'type'}},{'type',141,'union',[{'atom',141,'undefined'}|[{'type',141,'wxMaximizeEventType',[]}]]}}],[]}],
		%% Line 142
		'type' =
		    %% Line 142
		    [{'wxMaximizeEventType',{'atom',142,'maximize'},[]}],
		%% Line 143
		'type' =
		    %% Line 143
		    [{'wxMaximize',{'type',143,'record',[{'atom',143,'wxMaximize'}]},[]}],
		%% Line 145
		'type' =
		    %% Line 145
		    [{{'record','wxFileDirPicker'},[{'typed_record_field',{'record_field',145,{'atom',145,'type'}},{'type',145,'union',[{'atom',145,'undefined'}|[{'type',145,'wxFileDirPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',146,{'atom',146,'path'}},{'type',146,'union',[{'atom',146,'undefined'}|[{'remote_type',146,[{'atom',146,'unicode'}|[{'atom',146,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 147
		'type' =
		    %% Line 147
		    [{'wxFileDirPickerEventType',{'type',147,'union',[{'atom',147,'command_filepicker_changed'}|[{'atom',147,'command_dirpicker_changed'}]]},[]}],
		%% Line 148
		'type' =
		    %% Line 148
		    [{'wxFileDirPicker',{'type',148,'record',[{'atom',148,'wxFileDirPicker'}]},[]}],
		%% Line 150
		'type' =
		    %% Line 150
		    [{{'record','wxFocus'},[{'typed_record_field',{'record_field',150,{'atom',150,'type'}},{'type',150,'union',[{'atom',150,'undefined'}|[{'type',150,'wxFocusEventType',[]}]]}}],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{'wxFocusEventType',{'type',151,'union',[{'atom',151,'set_focus'}|[{'atom',151,'kill_focus'}]]},[]}],
		%% Line 152
		'type' =
		    %% Line 152
		    [{'wxFocus',{'type',152,'record',[{'atom',152,'wxFocus'}]},[]}],
		%% Line 154
		'type' =
		    %% Line 154
		    [{{'record','wxDate'},[{'typed_record_field',{'record_field',154,{'atom',154,'type'}},{'type',154,'union',[{'atom',154,'undefined'}|[{'type',154,'wxDateEventType',[]}]]}}|[{'typed_record_field',{'record_field',155,{'atom',155,'date'}},{'type',155,'union',[{'atom',155,'undefined'}|[{'remote_type',155,[{'atom',155,'wx'}|[{'atom',155,'wx_datetime'}|[[]]]]}]]}}]],[]}],
		%% Line 156
		'type' =
		    %% Line 156
		    [{'wxDateEventType',{'atom',156,'date_changed'},[]}],
		%% Line 157
		'type' =
		    %% Line 157
		    [{'wxDate',{'type',157,'record',[{'atom',157,'wxDate'}]},[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','wxHtmlLink'},[{'typed_record_field',{'record_field',159,{'atom',159,'type'}},{'type',159,'union',[{'atom',159,'undefined'}|[{'type',159,'wxHtmlLinkEventType',[]}]]}}|[{'typed_record_field',{'record_field',160,{'atom',160,'linkInfo'}},{'type',160,'union',[{'atom',160,'undefined'}|[{'remote_type',160,[{'atom',160,'wx'}|[{'atom',160,'wx_wxHtmlLinkInfo'}|[[]]]]}]]}}]],[]}],
		%% Line 161
		'type' =
		    %% Line 161
		    [{'wxHtmlLinkEventType',{'atom',161,'command_html_link_clicked'},[]}],
		%% Line 162
		'type' =
		    %% Line 162
		    [{'wxHtmlLink',{'type',162,'record',[{'atom',162,'wxHtmlLink'}]},[]}],
		%% Line 164
		'type' =
		    %% Line 164
		    [{{'record','wxHelp'},[{'typed_record_field',{'record_field',164,{'atom',164,'type'}},{'type',164,'union',[{'atom',164,'undefined'}|[{'type',164,'wxHelpEventType',[]}]]}}],[]}],
		%% Line 165
		'type' =
		    %% Line 165
		    [{'wxHelpEventType',{'type',165,'union',[{'atom',165,'help'}|[{'atom',165,'detailed_help'}]]},[]}],
		%% Line 166
		'type' =
		    %% Line 166
		    [{'wxHelp',{'type',166,'record',[{'atom',166,'wxHelp'}]},[]}],
		%% Line 168
		'type' =
		    %% Line 168
		    [{{'record','wxActivate'},[{'typed_record_field',{'record_field',168,{'atom',168,'type'}},{'type',168,'union',[{'atom',168,'undefined'}|[{'type',168,'wxActivateEventType',[]}]]}}|[{'typed_record_field',{'record_field',169,{'atom',169,'active'}},{'type',169,'union',[{'atom',169,'undefined'}|[{'type',169,'boolean',[]}]]}}]],[]}],
		%% Line 170
		'type' =
		    %% Line 170
		    [{'wxActivateEventType',{'type',170,'union',[{'atom',170,'activate'}|[{'atom',170,'activate_app'}|[{'atom',170,'hibernate'}]]]},[]}],
		%% Line 171
		'type' =
		    %% Line 171
		    [{'wxActivate',{'type',171,'record',[{'atom',171,'wxActivate'}]},[]}],
		%% Line 173
		'type' =
		    %% Line 173
		    [{{'record','wxStyledText'},[{'typed_record_field',{'record_field',173,{'atom',173,'type'}},{'type',173,'union',[{'atom',173,'undefined'}|[{'type',173,'wxStyledTextEventType',[]}]]}}|[{'typed_record_field',{'record_field',174,{'atom',174,'position'}},{'type',174,'union',[{'atom',174,'undefined'}|[{'type',174,'integer',[]}]]}}|[{'typed_record_field',{'record_field',175,{'atom',175,'key'}},{'type',175,'union',[{'atom',175,'undefined'}|[{'type',175,'integer',[]}]]}}|[{'typed_record_field',{'record_field',176,{'atom',176,'modifiers'}},{'type',176,'union',[{'atom',176,'undefined'}|[{'type',176,'integer',[]}]]}}|[{'typed_record_field',{'record_field',177,{'atom',177,'modificationType'}},{'type',177,'union',[{'atom',177,'undefined'}|[{'type',177,'integer',[]}]]}}|[{'typed_record_field',{'record_field',178,{'atom',178,'text'}},{'type',178,'union',[{'atom',178,'undefined'}|[{'remote_type',178,[{'atom',178,'unicode'}|[{'atom',178,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',179,{'atom',179,'length'}},{'type',179,'union',[{'atom',179,'undefined'}|[{'type',179,'integer',[]}]]}}|[{'typed_record_field',{'record_field',180,{'atom',180,'linesAdded'}},{'type',180,'union',[{'atom',180,'undefined'}|[{'type',180,'integer',[]}]]}}|[{'typed_record_field',{'record_field',181,{'atom',181,'line'}},{'type',181,'union',[{'atom',181,'undefined'}|[{'type',181,'integer',[]}]]}}|[{'typed_record_field',{'record_field',182,{'atom',182,'foldLevelNow'}},{'type',182,'union',[{'atom',182,'undefined'}|[{'type',182,'integer',[]}]]}}|[{'typed_record_field',{'record_field',183,{'atom',183,'foldLevelPrev'}},{'type',183,'union',[{'atom',183,'undefined'}|[{'type',183,'integer',[]}]]}}|[{'typed_record_field',{'record_field',184,{'atom',184,'margin'}},{'type',184,'union',[{'atom',184,'undefined'}|[{'type',184,'integer',[]}]]}}|[{'typed_record_field',{'record_field',185,{'atom',185,'message'}},{'type',185,'union',[{'atom',185,'undefined'}|[{'type',185,'integer',[]}]]}}|[{'typed_record_field',{'record_field',186,{'atom',186,'wParam'}},{'type',186,'union',[{'atom',186,'undefined'}|[{'type',186,'integer',[]}]]}}|[{'typed_record_field',{'record_field',187,{'atom',187,'lParam'}},{'type',187,'union',[{'atom',187,'undefined'}|[{'type',187,'integer',[]}]]}}|[{'typed_record_field',{'record_field',188,{'atom',188,'listType'}},{'type',188,'union',[{'atom',188,'undefined'}|[{'type',188,'integer',[]}]]}}|[{'typed_record_field',{'record_field',189,{'atom',189,'x'}},{'type',189,'union',[{'atom',189,'undefined'}|[{'type',189,'integer',[]}]]}}|[{'typed_record_field',{'record_field',190,{'atom',190,'y'}},{'type',190,'union',[{'atom',190,'undefined'}|[{'type',190,'integer',[]}]]}}|[{'typed_record_field',{'record_field',191,{'atom',191,'dragText'}},{'type',191,'union',[{'atom',191,'undefined'}|[{'remote_type',191,[{'atom',191,'unicode'}|[{'atom',191,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',192,{'atom',192,'dragAllowMove'}},{'type',192,'union',[{'atom',192,'undefined'}|[{'type',192,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',193,{'atom',193,'dragResult'}},{'type',193,'union',[{'atom',193,'undefined'}|[{'remote_type',193,[{'atom',193,'wx'}|[{'atom',193,'wx_enum'}|[[]]]]}]]}}]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 194
		'type' =
		    %% Line 194
		    [{'wxStyledTextEventType',{'type',194,'union',[{'atom',194,'stc_change'}|[{'atom',194,'stc_styleneeded'}|[{'atom',194,'stc_charadded'}|[{'atom',194,'stc_savepointreached'}|[{'atom',194,'stc_savepointleft'}|[{'atom',194,'stc_romodifyattempt'}|[{'atom',194,'stc_key'}|[{'atom',194,'stc_doubleclick'}|[{'atom',194,'stc_updateui'}|[{'atom',194,'stc_modified'}|[{'atom',194,'stc_macrorecord'}|[{'atom',194,'stc_marginclick'}|[{'atom',194,'stc_needshown'}|[{'atom',194,'stc_painted'}|[{'atom',194,'stc_userlistselection'}|[{'atom',194,'stc_uridropped'}|[{'atom',194,'stc_dwellstart'}|[{'atom',194,'stc_dwellend'}|[{'atom',194,'stc_start_drag'}|[{'atom',194,'stc_drag_over'}|[{'atom',194,'stc_do_drop'}|[{'atom',194,'stc_zoom'}|[{'atom',194,'stc_hotspot_click'}|[{'atom',194,'stc_hotspot_dclick'}|[{'atom',194,'stc_calltip_click'}|[{'atom',194,'stc_autocomp_selection'}]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 195
		'type' =
		    %% Line 195
		    [{'wxStyledText',{'type',195,'record',[{'atom',195,'wxStyledText'}]},[]}],
		%% Line 197
		'type' =
		    %% Line 197
		    [{{'record','wxSysColourChanged'},[{'typed_record_field',{'record_field',197,{'atom',197,'type'}},{'type',197,'union',[{'atom',197,'undefined'}|[{'type',197,'wxSysColourChangedEventType',[]}]]}}],[]}],
		%% Line 198
		'type' =
		    %% Line 198
		    [{'wxSysColourChangedEventType',{'atom',198,'sys_colour_changed'},[]}],
		%% Line 199
		'type' =
		    %% Line 199
		    [{'wxSysColourChanged',{'type',199,'record',[{'atom',199,'wxSysColourChanged'}]},[]}],
		%% Line 201
		'type' =
		    %% Line 201
		    [{{'record','wxGrid'},[{'typed_record_field',{'record_field',201,{'atom',201,'type'}},{'type',201,'union',[{'atom',201,'undefined'}|[{'type',201,'wxGridEventType',[]}]]}}|[{'typed_record_field',{'record_field',202,{'atom',202,'row'}},{'type',202,'union',[{'atom',202,'undefined'}|[{'type',202,'integer',[]}]]}}|[{'typed_record_field',{'record_field',203,{'atom',203,'col'}},{'type',203,'union',[{'atom',203,'undefined'}|[{'type',203,'integer',[]}]]}}|[{'typed_record_field',{'record_field',204,{'atom',204,'x'}},{'type',204,'union',[{'atom',204,'undefined'}|[{'type',204,'integer',[]}]]}}|[{'typed_record_field',{'record_field',205,{'atom',205,'y'}},{'type',205,'union',[{'atom',205,'undefined'}|[{'type',205,'integer',[]}]]}}|[{'typed_record_field',{'record_field',206,{'atom',206,'selecting'}},{'type',206,'union',[{'atom',206,'undefined'}|[{'type',206,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',207,{'atom',207,'control'}},{'type',207,'union',[{'atom',207,'undefined'}|[{'type',207,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',208,{'atom',208,'meta'}},{'type',208,'union',[{'atom',208,'undefined'}|[{'type',208,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',209,{'atom',209,'shift'}},{'type',209,'union',[{'atom',209,'undefined'}|[{'type',209,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',210,{'atom',210,'alt'}},{'type',210,'union',[{'atom',210,'undefined'}|[{'type',210,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 211
		'type' =
		    %% Line 211
		    [{'wxGridEventType',{'type',211,'union',[{'atom',211,'grid_cell_left_click'}|[{'atom',211,'grid_cell_right_click'}|[{'atom',211,'grid_cell_left_dclick'}|[{'atom',211,'grid_cell_right_dclick'}|[{'atom',211,'grid_label_left_click'}|[{'atom',211,'grid_label_right_click'}|[{'atom',211,'grid_label_left_dclick'}|[{'atom',211,'grid_label_right_dclick'}|[{'atom',211,'grid_row_size'}|[{'atom',211,'grid_col_size'}|[{'atom',211,'grid_range_select'}|[{'atom',211,'grid_cell_change'}|[{'atom',211,'grid_select_cell'}|[{'atom',211,'grid_editor_shown'}|[{'atom',211,'grid_editor_hidden'}|[{'atom',211,'grid_editor_created'}|[{'atom',211,'grid_cell_begin_drag'}]]]]]]]]]]]]]]]]]},[]}],
		%% Line 212
		'type' =
		    %% Line 212
		    [{'wxGrid',{'type',212,'record',[{'atom',212,'wxGrid'}]},[]}],
		%% Line 214
		'type' =
		    %% Line 214
		    [{{'record','wxPaletteChanged'},[{'typed_record_field',{'record_field',214,{'atom',214,'type'}},{'type',214,'union',[{'atom',214,'undefined'}|[{'type',214,'wxPaletteChangedEventType',[]}]]}}],[]}],
		%% Line 215
		'type' =
		    %% Line 215
		    [{'wxPaletteChangedEventType',{'atom',215,'palette_changed'},[]}],
		%% Line 216
		'type' =
		    %% Line 216
		    [{'wxPaletteChanged',{'type',216,'record',[{'atom',216,'wxPaletteChanged'}]},[]}],
		%% Line 218
		'type' =
		    %% Line 218
		    [{{'record','wxUpdateUI'},[{'typed_record_field',{'record_field',218,{'atom',218,'type'}},{'type',218,'union',[{'atom',218,'undefined'}|[{'type',218,'wxUpdateUIEventType',[]}]]}}],[]}],
		%% Line 219
		'type' =
		    %% Line 219
		    [{'wxUpdateUIEventType',{'atom',219,'update_ui'},[]}],
		%% Line 220
		'type' =
		    %% Line 220
		    [{'wxUpdateUI',{'type',220,'record',[{'atom',220,'wxUpdateUI'}]},[]}],
		%% Line 222
		'type' =
		    %% Line 222
		    [{{'record','wxSize'},[{'typed_record_field',{'record_field',222,{'atom',222,'type'}},{'type',222,'union',[{'atom',222,'undefined'}|[{'type',222,'wxSizeEventType',[]}]]}}|[{'typed_record_field',{'record_field',223,{'atom',223,'size'}},{'type',223,'union',[{'atom',223,'undefined'}|[{'type',223,'tuple',[{'ann_type',223,[{'var',223,'W'}|[{'type',223,'integer',[]}]]}|[{'ann_type',223,[{'var',223,'H'}|[{'type',223,'integer',[]}]]}]]}]]}}|[{'typed_record_field',{'record_field',224,{'atom',224,'rect'}},{'type',224,'union',[{'atom',224,'undefined'}|[{'type',224,'tuple',[{'ann_type',224,[{'var',224,'X'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'Y'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'W'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'H'}|[{'type',224,'integer',[]}]]}]]]]}]]}}]]],[]}],
		%% Line 225
		'type' =
		    %% Line 225
		    [{'wxSizeEventType',{'atom',225,'size'},[]}],
		%% Line 226
		'type' =
		    %% Line 226
		    [{'wxSize',{'type',226,'record',[{'atom',226,'wxSize'}]},[]}],
		%% Line 228
		'type' =
		    %% Line 228
		    [{{'record','wxIconize'},[{'typed_record_field',{'record_field',228,{'atom',228,'type'}},{'type',228,'union',[{'atom',228,'undefined'}|[{'type',228,'wxIconizeEventType',[]}]]}}],[]}],
		%% Line 229
		'type' =
		    %% Line 229
		    [{'wxIconizeEventType',{'atom',229,'iconize'},[]}],
		%% Line 230
		'type' =
		    %% Line 230
		    [{'wxIconize',{'type',230,'record',[{'atom',230,'wxIconize'}]},[]}],
		%% Line 232
		'type' =
		    %% Line 232
		    [{{'record','wxAuiNotebook'},[{'typed_record_field',{'record_field',232,{'atom',232,'type'}},{'type',232,'union',[{'atom',232,'undefined'}|[{'type',232,'wxAuiNotebookEventType',[]}]]}}|[{'typed_record_field',{'record_field',233,{'atom',233,'old_selection'}},{'type',233,'union',[{'atom',233,'undefined'}|[{'type',233,'integer',[]}]]}}|[{'typed_record_field',{'record_field',234,{'atom',234,'selection'}},{'type',234,'union',[{'atom',234,'undefined'}|[{'type',234,'integer',[]}]]}}|[{'typed_record_field',{'record_field',235,{'atom',235,'drag_source'}},{'type',235,'union',[{'atom',235,'undefined'}|[{'remote_type',235,[{'atom',235,'wxAuiNotebook'}|[{'atom',235,'wxAuiNotebook'}|[[]]]]}]]}}]]]],[]}],
		%% Line 236
		'type' =
		    %% Line 236
		    [{'wxAuiNotebookEventType',{'type',236,'union',[{'atom',236,'command_auinotebook_page_close'}|[{'atom',236,'command_auinotebook_page_changed'}|[{'atom',236,'command_auinotebook_page_changing'}|[{'atom',236,'command_auinotebook_button'}|[{'atom',236,'command_auinotebook_begin_drag'}|[{'atom',236,'command_auinotebook_end_drag'}|[{'atom',236,'command_auinotebook_drag_motion'}|[{'atom',236,'command_auinotebook_allow_dnd'}|[{'atom',236,'command_auinotebook_tab_middle_down'}|[{'atom',236,'command_auinotebook_tab_middle_up'}|[{'atom',236,'command_auinotebook_tab_right_down'}|[{'atom',236,'command_auinotebook_tab_right_up'}|[{'atom',236,'command_auinotebook_page_closed'}|[{'atom',236,'command_auinotebook_drag_done'}|[{'atom',236,'command_auinotebook_bg_dclick'}]]]]]]]]]]]]]]]},[]}],
		%% Line 237
		'type' =
		    %% Line 237
		    [{'wxAuiNotebook',{'type',237,'record',[{'atom',237,'wxAuiNotebook'}]},[]}],
		%% Line 239
		'type' =
		    %% Line 239
		    [{{'record','wxClose'},[{'typed_record_field',{'record_field',239,{'atom',239,'type'}},{'type',239,'union',[{'atom',239,'undefined'}|[{'type',239,'wxCloseEventType',[]}]]}}],[]}],
		%% Line 240
		'type' =
		    %% Line 240
		    [{'wxCloseEventType',{'type',240,'union',[{'atom',240,'close_window'}|[{'atom',240,'end_session'}|[{'atom',240,'query_end_session'}]]]},[]}],
		%% Line 241
		'type' =
		    %% Line 241
		    [{'wxClose',{'type',241,'record',[{'atom',241,'wxClose'}]},[]}],
		%% Line 243
		'type' =
		    %% Line 243
		    [{{'record','wxMouseCaptureChanged'},[{'typed_record_field',{'record_field',243,{'atom',243,'type'}},{'type',243,'union',[{'atom',243,'undefined'}|[{'type',243,'wxMouseCaptureChangedEventType',[]}]]}}],[]}],
		%% Line 244
		'type' =
		    %% Line 244
		    [{'wxMouseCaptureChangedEventType',{'atom',244,'mouse_capture_changed'},[]}],
		%% Line 245
		'type' =
		    %% Line 245
		    [{'wxMouseCaptureChanged',{'type',245,'record',[{'atom',245,'wxMouseCaptureChanged'}]},[]}],
		%% Line 247
		'type' =
		    %% Line 247
		    [{{'record','wxMouse'},[{'typed_record_field',{'record_field',247,{'atom',247,'type'}},{'type',247,'union',[{'atom',247,'undefined'}|[{'type',247,'wxMouseEventType',[]}]]}}|[{'typed_record_field',{'record_field',248,{'atom',248,'x'}},{'type',248,'union',[{'atom',248,'undefined'}|[{'type',248,'integer',[]}]]}}|[{'typed_record_field',{'record_field',249,{'atom',249,'y'}},{'type',249,'union',[{'atom',249,'undefined'}|[{'type',249,'integer',[]}]]}}|[{'typed_record_field',{'record_field',250,{'atom',250,'leftDown'}},{'type',250,'union',[{'atom',250,'undefined'}|[{'type',250,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',251,{'atom',251,'middleDown'}},{'type',251,'union',[{'atom',251,'undefined'}|[{'type',251,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',252,{'atom',252,'rightDown'}},{'type',252,'union',[{'atom',252,'undefined'}|[{'type',252,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',253,{'atom',253,'controlDown'}},{'type',253,'union',[{'atom',253,'undefined'}|[{'type',253,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',254,{'atom',254,'shiftDown'}},{'type',254,'union',[{'atom',254,'undefined'}|[{'type',254,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',255,{'atom',255,'altDown'}},{'type',255,'union',[{'atom',255,'undefined'}|[{'type',255,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',256,{'atom',256,'metaDown'}},{'type',256,'union',[{'atom',256,'undefined'}|[{'type',256,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',257,{'atom',257,'wheelRotation'}},{'type',257,'union',[{'atom',257,'undefined'}|[{'type',257,'integer',[]}]]}}|[{'typed_record_field',{'record_field',258,{'atom',258,'wheelDelta'}},{'type',258,'union',[{'atom',258,'undefined'}|[{'type',258,'integer',[]}]]}}|[{'typed_record_field',{'record_field',259,{'atom',259,'linesPerAction'}},{'type',259,'union',[{'atom',259,'undefined'}|[{'type',259,'integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 260
		'type' =
		    %% Line 260
		    [{'wxMouseEventType',{'type',260,'union',[{'atom',260,'left_down'}|[{'atom',260,'left_up'}|[{'atom',260,'middle_down'}|[{'atom',260,'middle_up'}|[{'atom',260,'right_down'}|[{'atom',260,'right_up'}|[{'atom',260,'motion'}|[{'atom',260,'enter_window'}|[{'atom',260,'leave_window'}|[{'atom',260,'left_dclick'}|[{'atom',260,'middle_dclick'}|[{'atom',260,'right_dclick'}|[{'atom',260,'mousewheel'}]]]]]]]]]]]]]},[]}],
		%% Line 261
		'type' =
		    %% Line 261
		    [{'wxMouse',{'type',261,'record',[{'atom',261,'wxMouse'}]},[]}],
		%% Line 263
		'type' =
		    %% Line 263
		    [{{'record','wxClipboardText'},[{'typed_record_field',{'record_field',263,{'atom',263,'type'}},{'type',263,'union',[{'atom',263,'undefined'}|[{'type',263,'wxClipboardTextEventType',[]}]]}}],[]}],
		%% Line 264
		'type' =
		    %% Line 264
		    [{'wxClipboardTextEventType',{'type',264,'union',[{'atom',264,'command_text_copy'}|[{'atom',264,'command_text_cut'}|[{'atom',264,'command_text_paste'}]]]},[]}],
		%% Line 265
		'type' =
		    %% Line 265
		    [{'wxClipboardText',{'type',265,'record',[{'atom',265,'wxClipboardText'}]},[]}],
		%% Line 267
		'type' =
		    %% Line 267
		    [{{'record','wxWindowCreate'},[{'typed_record_field',{'record_field',267,{'atom',267,'type'}},{'type',267,'union',[{'atom',267,'undefined'}|[{'type',267,'wxWindowCreateEventType',[]}]]}}],[]}],
		%% Line 268
		'type' =
		    %% Line 268
		    [{'wxWindowCreateEventType',{'atom',268,'create'},[]}],
		%% Line 269
		'type' =
		    %% Line 269
		    [{'wxWindowCreate',{'type',269,'record',[{'atom',269,'wxWindowCreate'}]},[]}],
		%% Line 271
		'type' =
		    %% Line 271
		    [{{'record','wxAuiManager'},[{'typed_record_field',{'record_field',271,{'atom',271,'type'}},{'type',271,'union',[{'atom',271,'undefined'}|[{'type',271,'wxAuiManagerEventType',[]}]]}}|[{'typed_record_field',{'record_field',272,{'atom',272,'manager'}},{'type',272,'union',[{'atom',272,'undefined'}|[{'remote_type',272,[{'atom',272,'wxAuiManager'}|[{'atom',272,'wxAuiManager'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',273,{'atom',273,'pane'}},{'type',273,'union',[{'atom',273,'undefined'}|[{'remote_type',273,[{'atom',273,'wxAuiPaneInfo'}|[{'atom',273,'wxAuiPaneInfo'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',274,{'atom',274,'button'}},{'type',274,'union',[{'atom',274,'undefined'}|[{'type',274,'integer',[]}]]}}|[{'typed_record_field',{'record_field',275,{'atom',275,'veto_flag'}},{'type',275,'union',[{'atom',275,'undefined'}|[{'type',275,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',276,{'atom',276,'canveto_flag'}},{'type',276,'union',[{'atom',276,'undefined'}|[{'type',276,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',277,{'atom',277,'dc'}},{'type',277,'union',[{'atom',277,'undefined'}|[{'remote_type',277,[{'atom',277,'wxDC'}|[{'atom',277,'wxDC'}|[[]]]]}]]}}]]]]]]],[]}],
		%% Line 278
		'type' =
		    %% Line 278
		    [{'wxAuiManagerEventType',{'type',278,'union',[{'atom',278,'aui_pane_button'}|[{'atom',278,'aui_pane_close'}|[{'atom',278,'aui_pane_maximize'}|[{'atom',278,'aui_pane_restore'}|[{'atom',278,'aui_render'}|[{'atom',278,'aui_find_manager'}]]]]]]},[]}],
		%% Line 279
		'type' =
		    %% Line 279
		    [{'wxAuiManager',{'type',279,'record',[{'atom',279,'wxAuiManager'}]},[]}],
		%% Line 281
		'type' =
		    %% Line 281
		    [{{'record','wxInitDialog'},[{'typed_record_field',{'record_field',281,{'atom',281,'type'}},{'type',281,'union',[{'atom',281,'undefined'}|[{'type',281,'wxInitDialogEventType',[]}]]}}],[]}],
		%% Line 282
		'type' =
		    %% Line 282
		    [{'wxInitDialogEventType',{'atom',282,'init_dialog'},[]}],
		%% Line 283
		'type' =
		    %% Line 283
		    [{'wxInitDialog',{'type',283,'record',[{'atom',283,'wxInitDialog'}]},[]}],
		%% Line 285
		'type' =
		    %% Line 285
		    [{{'record','wxCommand'},[{'typed_record_field',{'record_field',285,{'atom',285,'type'}},{'type',285,'union',[{'atom',285,'undefined'}|[{'type',285,'wxCommandEventType',[]}]]}}|[{'typed_record_field',{'record_field',286,{'atom',286,'cmdString'}},{'type',286,'union',[{'atom',286,'undefined'}|[{'remote_type',286,[{'atom',286,'unicode'}|[{'atom',286,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',287,{'atom',287,'commandInt'}},{'type',287,'union',[{'atom',287,'undefined'}|[{'type',287,'integer',[]}]]}}|[{'typed_record_field',{'record_field',288,{'atom',288,'extraLong'}},{'type',288,'union',[{'atom',288,'undefined'}|[{'type',288,'integer',[]}]]}}]]]],[]}],
		%% Line 289
		'type' =
		    %% Line 289
		    [{'wxCommandEventType',{'type',289,'union',[{'atom',289,'command_button_clicked'}|[{'atom',289,'command_checkbox_clicked'}|[{'atom',289,'command_choice_selected'}|[{'atom',289,'command_listbox_selected'}|[{'atom',289,'command_listbox_doubleclicked'}|[{'atom',289,'command_text_updated'}|[{'atom',289,'command_text_enter'}|[{'atom',289,'command_menu_selected'}|[{'atom',289,'command_slider_updated'}|[{'atom',289,'command_radiobox_selected'}|[{'atom',289,'command_radiobutton_selected'}|[{'atom',289,'command_scrollbar_updated'}|[{'atom',289,'command_vlbox_selected'}|[{'atom',289,'command_combobox_selected'}|[{'atom',289,'command_tool_rclicked'}|[{'atom',289,'command_tool_enter'}|[{'atom',289,'command_checklistbox_toggled'}|[{'atom',289,'command_togglebutton_clicked'}|[{'atom',289,'command_left_click'}|[{'atom',289,'command_left_dclick'}|[{'atom',289,'command_right_click'}|[{'atom',289,'command_set_focus'}|[{'atom',289,'command_kill_focus'}|[{'atom',289,'command_enter'}]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 290
		'type' =
		    %% Line 290
		    [{'wxCommand',{'type',290,'record',[{'atom',290,'wxCommand'}]},[]}],
		%% Line 292
		'type' =
		    %% Line 292
		    [{{'record','wxJoystick'},[{'typed_record_field',{'record_field',292,{'atom',292,'type'}},{'type',292,'union',[{'atom',292,'undefined'}|[{'type',292,'wxJoystickEventType',[]}]]}}],[]}],
		%% Line 293
		'type' =
		    %% Line 293
		    [{'wxJoystickEventType',{'type',293,'union',[{'atom',293,'joy_button_down'}|[{'atom',293,'joy_button_up'}|[{'atom',293,'joy_move'}|[{'atom',293,'joy_zmove'}]]]]},[]}],
		%% Line 294
		'type' =
		    %% Line 294
		    [{'wxJoystick',{'type',294,'record',[{'atom',294,'wxJoystick'}]},[]}],
		%% Line 296
		'type' =
		    %% Line 296
		    [{{'record','wxQueryNewPalette'},[{'typed_record_field',{'record_field',296,{'atom',296,'type'}},{'type',296,'union',[{'atom',296,'undefined'}|[{'type',296,'wxQueryNewPaletteEventType',[]}]]}}],[]}],
		%% Line 297
		'type' =
		    %% Line 297
		    [{'wxQueryNewPaletteEventType',{'atom',297,'query_new_palette'},[]}],
		%% Line 298
		'type' =
		    %% Line 298
		    [{'wxQueryNewPalette',{'type',298,'record',[{'atom',298,'wxQueryNewPalette'}]},[]}],
		%% Line 300
		'type' =
		    %% Line 300
		    [{{'record','wxMove'},[{'typed_record_field',{'record_field',300,{'atom',300,'type'}},{'type',300,'union',[{'atom',300,'undefined'}|[{'type',300,'wxMoveEventType',[]}]]}}],[]}],
		%% Line 301
		'type' =
		    %% Line 301
		    [{'wxMoveEventType',{'atom',301,'move'},[]}],
		%% Line 302
		'type' =
		    %% Line 302
		    [{'wxMove',{'type',302,'record',[{'atom',302,'wxMove'}]},[]}],
		%% Line 304
		'type' =
		    %% Line 304
		    [{{'record','wxIdle'},[{'typed_record_field',{'record_field',304,{'atom',304,'type'}},{'type',304,'union',[{'atom',304,'undefined'}|[{'type',304,'wxIdleEventType',[]}]]}}],[]}],
		%% Line 305
		'type' =
		    %% Line 305
		    [{'wxIdleEventType',{'atom',305,'idle'},[]}],
		%% Line 306
		'type' =
		    %% Line 306
		    [{'wxIdle',{'type',306,'record',[{'atom',306,'wxIdle'}]},[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{{'record','wxColourPicker'},[{'typed_record_field',{'record_field',308,{'atom',308,'type'}},{'type',308,'union',[{'atom',308,'undefined'}|[{'type',308,'wxColourPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',309,{'atom',309,'colour'}},{'type',309,'union',[{'atom',309,'undefined'}|[{'remote_type',309,[{'atom',309,'wx'}|[{'atom',309,'wx_colour'}|[[]]]]}]]}}]],[]}],
		%% Line 310
		'type' =
		    %% Line 310
		    [{'wxColourPickerEventType',{'atom',310,'command_colourpicker_changed'},[]}],
		%% Line 311
		'type' =
		    %% Line 311
		    [{'wxColourPicker',{'type',311,'record',[{'atom',311,'wxColourPicker'}]},[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{{'record','wxTaskBarIcon'},[{'typed_record_field',{'record_field',313,{'atom',313,'type'}},{'type',313,'union',[{'atom',313,'undefined'}|[{'type',313,'wxTaskBarIconEventType',[]}]]}}],[]}],
		%% Line 314
		'type' =
		    %% Line 314
		    [{'wxTaskBarIconEventType',{'type',314,'union',[{'atom',314,'taskbar_move'}|[{'atom',314,'taskbar_left_down'}|[{'atom',314,'taskbar_left_up'}|[{'atom',314,'taskbar_right_down'}|[{'atom',314,'taskbar_right_up'}|[{'atom',314,'taskbar_left_dclick'}|[{'atom',314,'taskbar_right_dclick'}]]]]]]]},[]}],
		%% Line 315
		'type' =
		    %% Line 315
		    [{'wxTaskBarIcon',{'type',315,'record',[{'atom',315,'wxTaskBarIcon'}]},[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{{'record','wxTree'},[{'typed_record_field',{'record_field',317,{'atom',317,'type'}},{'type',317,'union',[{'atom',317,'undefined'}|[{'type',317,'wxTreeEventType',[]}]]}}|[{'typed_record_field',{'record_field',318,{'atom',318,'item'}},{'type',318,'union',[{'atom',318,'undefined'}|[{'type',318,'integer',[]}]]}}|[{'typed_record_field',{'record_field',319,{'atom',319,'itemOld'}},{'type',319,'union',[{'atom',319,'undefined'}|[{'type',319,'integer',[]}]]}}|[{'typed_record_field',{'record_field',320,{'atom',320,'pointDrag'}},{'type',320,'union',[{'atom',320,'undefined'}|[{'type',320,'tuple',[{'ann_type',320,[{'var',320,'X'}|[{'type',320,'integer',[]}]]}|[{'ann_type',320,[{'var',320,'Y'}|[{'type',320,'integer',[]}]]}]]}]]}}]]]],[]}],
		%% Line 321
		'type' =
		    %% Line 321
		    [{'wxTreeEventType',{'type',321,'union',[{'atom',321,'command_tree_begin_drag'}|[{'atom',321,'command_tree_begin_rdrag'}|[{'atom',321,'command_tree_begin_label_edit'}|[{'atom',321,'command_tree_end_label_edit'}|[{'atom',321,'command_tree_delete_item'}|[{'atom',321,'command_tree_get_info'}|[{'atom',321,'command_tree_set_info'}|[{'atom',321,'command_tree_item_expanded'}|[{'atom',321,'command_tree_item_expanding'}|[{'atom',321,'command_tree_item_collapsed'}|[{'atom',321,'command_tree_item_collapsing'}|[{'atom',321,'command_tree_sel_changed'}|[{'atom',321,'command_tree_sel_changing'}|[{'atom',321,'command_tree_key_down'}|[{'atom',321,'command_tree_item_activated'}|[{'atom',321,'command_tree_item_right_click'}|[{'atom',321,'command_tree_item_middle_click'}|[{'atom',321,'command_tree_end_drag'}|[{'atom',321,'command_tree_state_image_click'}|[{'atom',321,'command_tree_item_gettooltip'}|[{'atom',321,'command_tree_item_menu'}]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 322
		'type' =
		    %% Line 322
		    [{'wxTree',{'type',322,'record',[{'atom',322,'wxTree'}]},[]}],
		%% Line 324
		'type' =
		    %% Line 324
		    [{'event',{'type',324,'union',[{'type',324,'wxActivate',[]}|[{'type',324,'wxAuiManager',[]}|[{'type',324,'wxAuiNotebook',[]}|[{'type',324,'wxCalendar',[]}|[{'type',324,'wxChildFocus',[]}|[{'type',324,'wxClipboardText',[]}|[{'type',324,'wxClose',[]}|[{'type',324,'wxColourPicker',[]}|[{'type',324,'wxCommand',[]}|[{'type',324,'wxContextMenu',[]}|[{'type',324,'wxDate',[]}|[{'type',324,'wxDisplayChanged',[]}|[{'type',324,'wxErase',[]}|[{'type',324,'wxFileDirPicker',[]}|[{'type',324,'wxFocus',[]}|[{'type',324,'wxFontPicker',[]}|[{'type',324,'wxGrid',[]}|[{'type',324,'wxHelp',[]}|[{'type',324,'wxHtmlLink',[]}|[{'type',324,'wxIconize',[]}|[{'type',324,'wxIdle',[]}|[{'type',324,'wxInitDialog',[]}|[{'type',324,'wxJoystick',[]}|[{'type',324,'wxKey',[]}|[{'type',324,'wxList',[]}|[{'type',324,'wxMaximize',[]}|[{'type',324,'wxMenu',[]}|[{'type',324,'wxMouse',[]}|[{'type',324,'wxMouseCaptureChanged',[]}|[{'type',324,'wxMove',[]}|[{'type',324,'wxNavigationKey',[]}|[{'type',324,'wxNotebook',[]}|[{'type',324,'wxPaint',[]}|[{'type',324,'wxPaletteChanged',[]}|[{'type',324,'wxQueryNewPalette',[]}|[{'type',324,'wxSash',[]}|[{'type',324,'wxScroll',[]}|[{'type',324,'wxScrollWin',[]}|[{'type',324,'wxSetCursor',[]}|[{'type',324,'wxShow',[]}|[{'type',324,'wxSize',[]}|[{'type',324,'wxSpin',[]}|[{'type',324,'wxSplitter',[]}|[{'type',324,'wxStyledText',[]}|[{'type',324,'wxSysColourChanged',[]}|[{'type',324,'wxTaskBarIcon',[]}|[{'type',324,'wxTree',[]}|[{'type',324,'wxUpdateUI',[]}|[{'type',324,'wxWindowCreate',[]}|[{'type',324,'wxWindowDestroy',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 325
		'type' =
		    %% Line 325
		    [{'wxEventType',{'type',325,'union',[{'type',325,'wxActivateEventType',[]}|[{'type',325,'wxAuiManagerEventType',[]}|[{'type',325,'wxAuiNotebookEventType',[]}|[{'type',325,'wxCalendarEventType',[]}|[{'type',325,'wxChildFocusEventType',[]}|[{'type',325,'wxClipboardTextEventType',[]}|[{'type',325,'wxCloseEventType',[]}|[{'type',325,'wxColourPickerEventType',[]}|[{'type',325,'wxCommandEventType',[]}|[{'type',325,'wxContextMenuEventType',[]}|[{'type',325,'wxDateEventType',[]}|[{'type',325,'wxDisplayChangedEventType',[]}|[{'type',325,'wxEraseEventType',[]}|[{'type',325,'wxFileDirPickerEventType',[]}|[{'type',325,'wxFocusEventType',[]}|[{'type',325,'wxFontPickerEventType',[]}|[{'type',325,'wxGridEventType',[]}|[{'type',325,'wxHelpEventType',[]}|[{'type',325,'wxHtmlLinkEventType',[]}|[{'type',325,'wxIconizeEventType',[]}|[{'type',325,'wxIdleEventType',[]}|[{'type',325,'wxInitDialogEventType',[]}|[{'type',325,'wxJoystickEventType',[]}|[{'type',325,'wxKeyEventType',[]}|[{'type',325,'wxListEventType',[]}|[{'type',325,'wxMaximizeEventType',[]}|[{'type',325,'wxMenuEventType',[]}|[{'type',325,'wxMouseCaptureChangedEventType',[]}|[{'type',325,'wxMouseEventType',[]}|[{'type',325,'wxMoveEventType',[]}|[{'type',325,'wxNavigationKeyEventType',[]}|[{'type',325,'wxNotebookEventType',[]}|[{'type',325,'wxPaintEventType',[]}|[{'type',325,'wxPaletteChangedEventType',[]}|[{'type',325,'wxQueryNewPaletteEventType',[]}|[{'type',325,'wxSashEventType',[]}|[{'type',325,'wxScrollEventType',[]}|[{'type',325,'wxScrollWinEventType',[]}|[{'type',325,'wxSetCursorEventType',[]}|[{'type',325,'wxShowEventType',[]}|[{'type',325,'wxSizeEventType',[]}|[{'type',325,'wxSpinEventType',[]}|[{'type',325,'wxSplitterEventType',[]}|[{'type',325,'wxStyledTextEventType',[]}|[{'type',325,'wxSysColourChangedEventType',[]}|[{'type',325,'wxTaskBarIconEventType',[]}|[{'type',325,'wxTreeEventType',[]}|[{'type',325,'wxUpdateUIEventType',[]}|[{'type',325,'wxWindowCreateEventType',[]}|[{'type',325,'wxWindowDestroyEventType',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 328
		'type' =
		    %% Line 328
		    [{{'record','wxMouseState'},[{'typed_record_field',{'record_field',328,{'atom',328,'x'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',328,{'atom',328,'y'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'leftDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'type',329,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'middleDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'rightDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'controlDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'shiftDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'altDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'metaDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'cmdDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 333
		'type' =
		    %% Line 333
		    [{{'record','wxHtmlLinkInfo'},[{'typed_record_field',{'record_field',334,{'atom',334,'href'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',334,{'atom',334,'target'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','state'},[{'record_field',34,{'atom',34,'parent'}}|[{'record_field',35,{'atom',35,'config'}}|[{'record_field',36,{'atom',36,'gl'}}|[{'record_field',37,{'atom',37,'canvas'}}|[{'record_field',38,{'atom',38,'image'}}|[{'record_field',39,{'atom',39,'timer'}}|[{'record_field',40,{'atom',40,'time'}}]]]]]]],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','gl'},[{'record_field',43,{'atom',43,'win'}}|[{'record_field',43,{'atom',43,'data'}}|[{'record_field',43,{'atom',43,'deg'}}|[{'record_field',43,{'atom',43,'mat'}}|[{'record_field',43,{'atom',43,'alpha'}}|[{'record_field',43,{'atom',43,'text'}}|[{'record_field',43,{'atom',43,'font'}}|[{'record_field',43,{'atom',43,'brush'}}|[{'record_field',43,{'atom',43,'clock'}}|[{'record_field',43,{'atom',43,'sphere'}}]]]]]]]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{{'record','texture'},[{'record_field',45,{'atom',45,'tid'}}|[{'record_field',45,{'atom',45,'w'}}|[{'record_field',45,{'atom',45,'h'}}|[{'record_field',45,{'atom',45,'minx'}}|[{'record_field',45,{'atom',45,'miny'}}|[{'record_field',45,{'atom',45,'maxx'}}|[{'record_field',45,{'atom',45,'maxy'}}]]]]]]],[]}]]
'start'/1 =
    %% Line 47
    fun (_cor0) ->
	%% Line 48
	call 'wx_object':'start_link'
	    ('ex_gl', _cor0, [])
'init'/1 =
    %% Line 53
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 54
	    ( fun () ->
		  apply 'do_init'/1
		      (_cor0)
	      -| [{'id',{0,0,'-init/1-fun-0-'}}] )
	in  %% Line 54
	    call 'wx':'batch'
		(_cor1)
'do_init'/1 =
    %% Line 56
    fun (_cor0) ->
	let <Parent> =
	    %% Line 57
	    call 'proplists':'get_value'
		('parent', _cor0)
	in  let <Panel> =
		%% Line 58
		call 'wxPanel':'new'
		    (Parent, [])
	    in  let <Sizer> =
		    %% Line 61
		    call 'wxStaticBoxSizer':'new'
			(4, Panel, [{'label',[119|[120|[71|[76|[67|[97|[110|[118|[97|[115]]]]]]]]]]}])
		in  let <Canvas> =
			%% Line 70
			call 'wxGLCanvas':'new'
			    (Panel, [{'style',65536}|[{'attribList',[1|[4|[7|[8|[8|[8|[9|[8|[11|[24|[0]]]]]]]]]]]}]])
		    in  do  %% Line 71
			    call 'wxGLCanvas':'connect'
				(Canvas, 'size')
			    do  %% Line 72
				call 'wxGLCanvas':'connect'
				    (Canvas, 'paint', ['callback'])
				let <_cor8> =
				    %% Line 74
				    call 'wxImage':'new'
					([105|[109|[97|[103|[101|[46|[106|[112|[103]]]]]]]]])
				in  let <Image> =
					%% Line 74
					call 'wxImage':'scale'
					    (_cor8, 128, 128)
				    in  do  %% Line 77
					    call 'wxSizer':'add'
						(Sizer, Canvas, [{'flag',8192}|[{'proportion',1}]])
					    do  %% Line 78
						call 'wxWindow':'setSizer'
						    (Panel, Sizer)
						do  %% Line 79
						    call 'wxSizer':'layout'
							(Sizer)
						    let <_cor10> =
							%% Line 80
							call 'erlang':'self'
							    ()
						    in  let <Timer> =
							    %% Line 80
							    call 'timer':'send_interval'
								(20, _cor10, 'update')
							in  %% Line 81
							    {Panel,{'state',Panel,_cor0,'undefined',%% Line 82
												    Canvas,%% Line 82
													   Image,%% Line 83
														 Timer,'undefined'}}
'handle_sync_event'/3 =
    %% Line 86
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_PaintEvent,_cor7,{'state',_cor8,_cor9,_cor10,Canvas,_cor11,_cor12,_cor13}> when 'true' ->
	      do  %% Line 90
		  call 'wxGLCanvas':'setCurrent'
		      (Canvas)
		  let <DC> =
		      %% Line 91
		      call 'wxPaintDC':'new'
			  (Canvas)
		  in  do  %% Line 92
			  call 'wxPaintDC':'destroy'
			      (DC)
			  %% Line 93
			  'ok'
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'handle_sync_event',3}}] )
	    -| ['compiler_generated'] )
	end
'handle_event'/2 =
    %% Line 95
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx',_cor18,_cor19,_cor20,{'wxSize',_cor21,{W,H},_cor22}},State = {'state',_cor23,_cor24,GL,_cor25,_cor26,_cor27,_cor28}> when 'true' ->
	      %% Line 96
	      case <> of
		%% Line 97
		<>
		    when call 'erlang':'=:='
			  (GL,
			   'undefined') ->
		    do  %% Line 99
			call 'wxGLCanvas':'setCurrent'
			    (_cor25)
			let <_rec0> =
			    %% Line 100
			    apply 'setup_gl'/2
				(_cor25, _cor26)
			in  let <_cor6> =
				%% Line 100
				call 'erlang':'setelement'
				    (4, State, _rec0)
			    in  %% Line 100
				{'noreply',_cor6}
		%% Line 101
		<>
		    when let <_cor7> =
			  call 'erlang':'=:='
			      (W, 0)
		      in  let <_cor8> =
			      call 'erlang':'=:='
				  (H, 0)
			  in  call 'erlang':'and'
				  (_cor7, _cor8) ->
		    {'noreply',State}
		%% Line 102
		<> when 'true' ->
		    do  %% Line 103
			call 'gl':'viewport'
			    (0, 0, W, H)
			do  %% Line 104
			    call 'gl':'matrixMode'
				(5889)
			    do  %% Line 105
				call 'gl':'loadIdentity'
				    ()
				let <_cor13> =
				    %% Line 106
				    call 'erlang':'*'
					(-2.00000000000000000000e+00, H)
				in  let <_cor14> =
					%% Line 106
					call 'erlang':'/'
					    (_cor13, W)
				    in  let <_cor10> =
					    %% Line 106
					    call 'erlang':'*'
						(2.00000000000000000000e+00, H)
					in  let <_cor11> =
						%% Line 106
						call 'erlang':'/'
						    (_cor10, W)
					    in  do  %% Line 106
						    call 'gl':'ortho'
							(-2.00000000000000000000e+00, 2.00000000000000000000e+00, _cor14, _cor11, -2.00000000000000000000e+01, 2.00000000000000000000e+01)
						    do  %% Line 107
							call 'gl':'matrixMode'
							    (5888)
							do  %% Line 108
							    call 'gl':'loadIdentity'
								()
							    %% Line 109
							    {'noreply',State}
	      end
	  ( <_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16})
		  -| [{'function_name',{'handle_event',2}}] )
	    -| ['compiler_generated'] )
	end
'handle_info'/2 =
    %% Line 112
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'update',State = {'state',_cor63,_cor64,'undefined',_cor65,_cor66,_cor67,_cor68}> when 'true' ->
	      %% Line 113
	      {'noreply',State}
	  %% Line 114
	  <'update',State> when 'true' ->
	      let <S1> =
		  %% Line 115
		  apply 'update_rotation'/1
		      (State)
	      in  %% Line 116
		  ( case S1 of
		      ( <( {'state',_cor69,_cor70,_rec2,_cor71,_cor72,_cor73,_cor74}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_cor52> =
				%% Line 117
				case <> of
				  <>
				      when ( try
					      ( case <> of
						  ( <>
							when ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'is_record'
												 -| ['compiler_generated'] )
								(State,
								 ( 'state'
								   -| ['compiler_generated'] ),
								 ( 8
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] ) ->
							let <_cor16> =
							    ( call 'erlang':'element'
								  (8, State)
							      -| ['compiler_generated'] )
							in  ( call 'erlang':'>'
								  (_cor74, _cor16)
							      -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						  ( <> when 'true' ->
							'false'
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
					  of <Try> ->
					      Try
					  catch <T,R> ->
					      'false'
					  -| ['compiler_generated'] ) ->
				      %% Line 118
				      ( case _rec2 of
					  ( <( {'gl',_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_rec4,_cor84}
					       -| ['compiler_generated'] )> when 'true' ->
						( case _rec4 of
						    ( <( {'texture',_rec3,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91}
							 -| ['compiler_generated'] )> when 'true' ->
							  do  call 'gl':'deleteTextures'
								  ([_rec3|[]])
							      %% Line 119
							      case _cor74 of
								<{Hour,Min,Sec}> when 'true' ->
								    let <_cor29> =
									%% Line 121
									( fun (_cor27) ->
									      let <_cor26> =
										  call 'erlang':'integer_to_list'
										      (_cor27)
									      in  call 'string':'right'
										      (_cor26, 2, 48)
									  -| [{'id',{0,0,'-handle_info/2-fun-0-'}}] )
								    in  let <_cor30> =
									    %% Line 121
									    apply _cor29
										(Hour)
									in  let <_cor34> =
										%% Line 121
										( fun (_cor32) ->
										      let <_cor31> =
											  call 'erlang':'integer_to_list'
											      (_cor32)
										      in  call 'string':'right'
											      (_cor31, 2, 48)
										  -| [{'id',{0,0,'-handle_info/2-fun-1-'}}] )
									    in  let <_cor35> =
										    %% Line 121
										    apply _cor34
											(Min)
										in  let <_cor39> =
											%% Line 121
											( fun (_cor37) ->
											      let <_cor36> =
												  call 'erlang':'integer_to_list'
												      (_cor37)
											      in  call 'string':'right'
												      (_cor36, 2, 48)
											  -| [{'id',{0,0,'-handle_info/2-fun-2-'}}] )
										    in  let <_cor40> =
											    %% Line 121
											    apply _cor39
												(Sec)
											in  let <Clock> =
												%% Line 120
												apply 'load_texture_by_string'/5
												    (_cor82, _cor83, {40,40,40}, %% Line 121
																 [_cor30|[58|[_cor35|[58|[_cor40|[]]]]]], %% Line 121
																					  'false')
											    in  let <_cor48> =
												    %% Line 122
												    call 'erlang':'setelement'
													(10, _rec2, Clock)
												in  %% Line 122
												    call 'erlang':'setelement'
													(4, S1, _cor48)
								( <_cor25> when 'true' ->
								      primop 'match_fail'
									  ({'badmatch',_cor25})
								  -| ['compiler_generated'] )
							      end
						      -| ['compiler_generated'] )
						    ( <_cor92> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','texture'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					  ( <_cor85> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','gl'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				  %% Line 123
				  <> when 'true' ->
				      %% Line 124
				      S1
				end
			    in  let <_cor56> =
				    %% Line 126
				    ( fun () ->
					  ( case _cor52 of
					      ( <( {'state',_cor139,_cor140,_rec11,_cor141,_cor142,_cor143,_cor144}
						   -| ['compiler_generated'] )> when 'true' ->
						    apply 'drawBox'/1
							(_rec11)
						-| ['compiler_generated'] )
					      ( <_cor145> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','state'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				      -| [{'id',{0,0,'-handle_info/2-fun-3-'}}] )
				in  do  %% Line 126
					call 'wx':'batch'
					    (_cor56)
					%% Line 127
					{'noreply',_cor52}
			-| ['compiler_generated'] )
		      ( <_cor75> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 128
	  <'stop',State> when 'true' ->
	      %% Line 129
	      ( case State of
		  ( <( {'state',_cor146,_cor147,_cor148,_cor149,_cor150,_rec12,_cor151}
		       -| ['compiler_generated'] )> when 'true' ->
			do  call 'timer':'cancel'
				(_rec12)
			    do  catch
				    %% Line 130
				    call 'wxGLCanvas':'destroy'
					(_cor149)
				%% Line 131
				{'stop','normal',State}
		    -| ['compiler_generated'] )
		  ( <_cor152> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor62,_cor61> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor62,_cor61})
		  -| [{'function_name',{'handle_info',2}}] )
	    -| ['compiler_generated'] )
	end
'handle_call'/3 =
    %% Line 133
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'shutdown',_X_From,State = {'state',Panel,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15}> when 'true' ->
	      do  catch
		      %% Line 134
		      call 'wxGLCanvas':'destroy'
			  (_cor12)
		  do  %% Line 135
		      call 'timer':'cancel'
			  (_cor14)
		      do  %% Line 136
			  call 'wxPanel':'destroy'
			      (Panel)
			  %% Line 137
			  {'stop','normal','ok',State}
	  %% Line 139
	  <Msg,_X_From,State> when 'true' ->
	      do  %% Line 140
		  call 'io':'format'
		      ([71|[111|[116|[32|[67|[97|[108|[108|[32|[126|[112|[126|[110]]]]]]]]]]]]], [Msg|[]])
		  %% Line 141
		  {'reply','ok',State}
	end
'handle_cast'/2 =
    %% Line 143
    fun (_cor1,_cor0) ->
	do  %% Line 144
	    call 'io':'format'
		([71|[111|[116|[32|[99|[97|[115|[116|[32|[126|[112|[126|[110]]]]]]]]]]]]], [_cor1|[]])
	    %% Line 145
	    {'noreply',_cor0}
'code_change'/3 =
    %% Line 147
    fun (_cor2,_cor1,_cor0) ->
	%% Line 148
	{'stop','not_yet_implemented',_cor0}
'terminate'/2 =
    %% Line 150
    fun (_cor1,_cor0) ->
	%% Line 151
	'ok'
'update_rotation'/1 =
    %% Line 182
    fun (_cor0) ->
	case _cor0 of
	  <S = {'state',_cor11,_cor12,GL = {'gl',_cor13,_cor14,Rot,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21},_cor22,_cor23,_cor24,_cor25}> when 'true' ->
	      %% Line 183
	      case call 'calendar':'local_time'
		       () of
		<{_cor26,Time}> when 'true' ->
		    let <_rec18> =
			%% Line 184
			call 'erlang':'+'
			    (Rot, 1.00000000000000000000e+00)
		    in  let <_cor5> =
			    %% Line 184
			    call 'erlang':'setelement'
				(4, GL, _rec18)
			in  let <_cor8> =
				%% Line 184
				call 'erlang':'setelement'
				    (8, S, Time)
			    in  %% Line 184
				call 'erlang':'setelement'
				    (4, _cor8, _cor5)
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor1})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10})
		  -| [{'function_name',{'update_rotation',1}}] )
	    -| ['compiler_generated'] )
	end
'setup_gl'/2 =
    %% Line 188
    fun (_cor1,_cor0) ->
	%% Line 189
	case call 'wxWindow':'getClientSize'
		 (_cor1) of
	  <{W,H}> when 'true' ->
	      do  %% Line 190
		  call 'gl':'viewport'
		      (0, 0, W, H)
		  do  %% Line 191
		      call 'gl':'matrixMode'
			  (5889)
		      do  %% Line 192
			  call 'gl':'loadIdentity'
			      ()
			  let <_cor7> =
			      %% Line 193
			      call 'erlang':'*'
				  (-2.00000000000000000000e+00, H)
			  in  let <_cor8> =
				  %% Line 193
				  call 'erlang':'/'
				      (_cor7, W)
			      in  let <_cor4> =
				      %% Line 193
				      call 'erlang':'*'
					  (2.00000000000000000000e+00, H)
				  in  let <_cor5> =
					  %% Line 193
					  call 'erlang':'/'
					      (_cor4, W)
				      in  do  %% Line 193
					      call 'gl':'ortho'
						  (-2.00000000000000000000e+00, 2.00000000000000000000e+00, _cor8, _cor5, -2.00000000000000000000e+01, 2.00000000000000000000e+01)
					      do  %% Line 194
						  call 'gl':'matrixMode'
						      (5888)
						  do  %% Line 195
						      call 'gl':'loadIdentity'
							  ()
						      do  %% Line 196
							  call 'gl':'enable'
							      (2929)
							  do  %% Line 197
							      call 'gl':'depthFunc'
								  (513)
							      do  %% Line 198
								  call 'gl':'clearColor'
								      (1.00000000000000000000e+00, 1.00000000000000000000e+00, 1.00000000000000000000e+00, 1.00000000000000000000e+00)
								  let <MatTexture> =
								      %% Line 199
								      apply 'load_texture_by_image'/1
									  (_cor0)
								  in  let <_cor11> =
									  %% Line 201
									  call 'wxImage':'new'
									      ([101|[114|[108|[97|[110|[103|[46|[112|[110|[103]]]]]]]]]])
								      in  let <ImgTexture> =
									      %% Line 200
									      apply 'load_texture_by_image'/1
										  (_cor11)
									  in  let <Font> =
										  %% Line 202
										  call 'wxFont':'new'
										      (32, 70, 90, 92)
									      in  let <Brush> =
										      %% Line 203
										      call 'wxBrush':'new'
											  ({0,0,0})
										  in  let <StrTexture> =
											  %% Line 204
											  apply 'load_texture_by_string'/5
											      (Font, Brush, {40,40,40}, [84|[101|[120|[116|[32|[102|[114|[111|[109|[32|[119|[120|[70|[111|[110|[116]]]]]]]]]]]]]]]], 'true')
										      in  %% Line 205
											  case call 'calendar':'local_time'
												   () of
											    <{_cor54,{Hour,Min,Sec}}> when 'true' ->
												let <_cor20> =
												    %% Line 207
												    ( fun (_cor18) ->
													  let <_cor17> =
													      call 'erlang':'integer_to_list'
														  (_cor18)
													  in  call 'string':'right'
														  (_cor17, 2, 48)
												      -| [{'id',{0,0,'-setup_gl/2-fun-0-'}}] )
												in  let <_cor21> =
													%% Line 207
													apply _cor20
													    (Hour)
												    in  let <_cor25> =
													    %% Line 207
													    ( fun (_cor23) ->
														  let <_cor22> =
														      call 'erlang':'integer_to_list'
															  (_cor23)
														  in  call 'string':'right'
															  (_cor22, 2, 48)
													      -| [{'id',{0,0,'-setup_gl/2-fun-1-'}}] )
													in  let <_cor26> =
														%% Line 207
														apply _cor25
														    (Min)
													    in  let <_cor30> =
														    %% Line 207
														    ( fun (_cor28) ->
															  let <_cor27> =
															      call 'erlang':'integer_to_list'
																  (_cor28)
															  in  call 'string':'right'
																  (_cor27, 2, 48)
														      -| [{'id',{0,0,'-setup_gl/2-fun-2-'}}] )
														in  let <_cor31> =
															%% Line 207
															apply _cor30
															    (Sec)
														    in  let <Clock> =
															    %% Line 206
															    apply 'load_texture_by_string'/5
																(Font, Brush, {40,40,40}, %% Line 207
																			  [_cor21|[58|[_cor26|[58|[_cor31|[]]]]]], %% Line 207
																								   'false')
															in  let <Sphere> =
																%% Line 208
																call 'glu':'newQuadric'
																    ()
															    in  do  %% Line 209
																    call 'gl':'enable'
																	(3553)
																    %% Line 210
																    {'gl',_cor1,{[{{1,2,3,4},{0,0,-1},{-1,0,0},{0,1,0}}|[{{8,1,4,5},{-1,0,0},{0,0,1},{0,1,0}}|[{{2,7,6,3},{1,0,0},{0,0,-1},{0,1,0}}|[{{7,8,5,6},{0,0,1},{1,0,0},{0,1,0}}|[{{4,3,6,5},{0,1,0},{-1,0,0},{0,0,1}}|[{{1,2,7,8},{0,-1,0},{1,0,0},{0,0,1}}]]]]]],{{-5.00000000000000000000e-01,-5.00000000000000000000e-01,-5.00000000000000000000e-01},{5.00000000000000000000e-01,-5.00000000000000000000e-01,-5.00000000000000000000e-01},{5.00000000000000000000e-01,5.00000000000000000000e-01,-5.00000000000000000000e-01},{-5.00000000000000000000e-01,5.00000000000000000000e-01,-5.00000000000000000000e-01},{-5.00000000000000000000e-01,5.00000000000000000000e-01,5.00000000000000000000e-01},{5.00000000000000000000e-01,5.00000000000000000000e-01,5.00000000000000000000e-01},{5.00000000000000000000e-01,-5.00000000000000000000e-01,5.00000000000000000000e-01},{-5.00000000000000000000e-01,-5.00000000000000000000e-01,5.00000000000000000000e-01}},{{0.00000000000000000000e+00,0.00000000000000000000e+00,0.00000000000000000000e+00},{1.00000000000000000000e+00,0.00000000000000000000e+00,0.00000000000000000000e+00},{1.00000000000000000000e+00,1.00000000000000000000e+00,0.00000000000000000000e+00},{0.00000000000000000000e+00,1.00000000000000000000e+00,0.00000000000000000000e+00},{0.00000000000000000000e+00,1.00000000000000000000e+00,1.00000000000000000000e+00},{1.00000000000000000000e+00,1.00000000000000000000e+00,1.00000000000000000000e+00},{1.00000000000000000000e+00,0.00000000000000000000e+00,1.00000000000000000000e+00},{0.00000000000000000000e+00,0.00000000000000000000e+00,1.00000000000000000000e+00}}},0.00000000000000000000e+00,%% Line 211
																																																																																																																																																																																																																										       MatTexture,%% Line 211
																																																																																																																																																																																																																												  ImgTexture,%% Line 211
																																																																																																																																																																																																																													     StrTexture,%% Line 211
																																																																																																																																																																																																																															Font,%% Line 212
																																																																																																																																																																																																																															     Brush,%% Line 212
																																																																																																																																																																																																																																   Clock,%% Line 212
																																																																																																																																																																																																																																	 Sphere}
											    ( <_cor16> when 'true' ->
												  primop 'match_fail'
												      ({'badmatch',_cor16})
											      -| ['compiler_generated'] )
											  end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'drawBox'/1 =
    %% Line 214
    fun (_cor0) ->
	case _cor0 of
	  <{'gl',Win,{Fs,Vs,Colors},Deg,MatT,ImgA,%% Line 215
						  Text,_cor27,_cor28,%% Line 215
								     Clock,%% Line 215
									   Sphere}> when 'true' ->
	      do  %% Line 216
		  call 'gl':'matrixMode'
		      (5888)
		  do  %% Line 217
		      call 'gl':'loadIdentity'
			  ()
		      do  %% Line 218
			  call 'gl':'pushMatrix'
			      ()
			  do  %% Line 219
			      call 'gl':'translatef'
				  (0, 5.00000000000000000000e-01, 0)
			      do  %% Line 220
				  call 'gl':'rotatef'
				      (Deg, 1.00000000000000000000e+00, 1.00000000000000000000e+00, 1.00000000000000000000e+00)
				  do  %% Line 221
				      call 'gl':'clear'
					  (16640)
				      %% Line 222
				      ( case MatT of
					  ( <( {'texture',_rec20,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34}
					       -| ['compiler_generated'] )> when 'true' ->
						do  call 'gl':'bindTexture'
							(3553, _rec20)
						    do  %% Line 223
							call 'gl':'disable'
							    (3042)
							do  %% Line 224
							    call 'gl':'texEnvf'
								(8960, 8704, 8448)
							    do  %% Line 225
								call 'gl':'disable'
								    (2884)
								do  %% Line 226
								    call 'gl':'begin'
									(7)
								    let <_cor6> =
									%% Line 227
									( fun (_cor4) ->
									      apply 'drawFace'/3
										  (_cor4, Vs, Colors)
									  -| [{'id',{0,0,'-drawBox/1-fun-0-'}}] )
								    in  do  %% Line 227
									    call 'wx':'foreach'
										(_cor6, Fs)
									    do  %% Line 228
										call 'gl':'end'
										    ()
										do  %% Line 229
										    call 'gl':'popMatrix'
											()
										    do  %% Line 231
											call 'gl':'texEnvf'
											    (8960, 8704, 7681)
											do  %% Line 233
											    apply 'enter_2d_mode'/1
												(Win)
											    %% Line 234
											    case call 'wxWindow':'getClientSize'
												     (Win) of
											      <{W,H}> when 'true' ->
												  let <_cor8> =
												      %% Line 235
												      call 'erlang':'trunc'
													  (Deg)
												  in  let <_cor9> =
													  %% Line 235
													  call 'erlang':'rem'
													      (_cor8, 180)
												      in  let <_cor10> =
													      %% Line 235
													      call 'erlang':'-'
														  (90, _cor9)
													  in  let <Move> =
														  %% Line 235
														  call 'erlang':'abs'
														      (_cor10)
													      in  let <_cor15> =
														      %% Line 236
														      call 'erlang':'div'
															  (W, 2)
														  in  let <_cor16> =
															  %% Line 236
															  call 'erlang':'-'
															      (_cor15, 50)
														      in  let <_cor12> =
															      %% Line 236
															      call 'erlang':'div'
																  (H, 2)
															  in  let <_cor13> =
																  %% Line 236
																  call 'erlang':'-'
																      (_cor12, 130)
															      in  let <_cor14> =
																      %% Line 236
																      call 'erlang':'+'
																	  (_cor13, Move)
																  in  do  %% Line 236
																	  apply 'draw_texture'/3
																	      (_cor16, _cor14, Clock)
																	  let <_cor19> =
																	      %% Line 237
																	      call 'erlang':'div'
																		  (W, 2)
																	  in  let <_cor20> =
																		  %% Line 237
																		  call 'erlang':'-'
																		      (_cor19, 80)
																	      in  let <_cor17> =
																		      %% Line 237
																		      call 'erlang':'div'
																			  (H, 2)
																		  in  let <_cor18> =
																			  %% Line 237
																			  call 'erlang':'-'
																			      (_cor17, Move)
																		      in  do  %% Line 237
																			      apply 'draw_texture'/3
																				  (_cor20, _cor18, ImgA)
																			      do  %% Line 238
																				  apply 'leave_2d_mode'/0
																				      ()
																				  do  %% Line 240
																				      call 'gl':'pushMatrix'
																					  ()
																				      do  %% Line 241
																					  call 'gl':'enable'
																					      (2884)
																					  do  %% Line 242
																					      call 'gl':'enable'
																						  (3042)
																					      do  %% Line 243
																						  call 'gl':'blendFunc'
																						      (770, 771)
																						  do  %% Line 244
																						      call 'gl':'translatef'
																							  (0, -8.00000000000000044409e-01, 0)
																						      %% Line 245
																						      ( case Text of
																							  ( <( {'texture',_rec21,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41}
																							       -| ['compiler_generated'] )> when 'true' ->
																								do  call 'gl':'bindTexture'
																									(3553, _rec21)
																								    do  %% Line 246
																									call 'glu':'quadricTexture'
																									    (Sphere, 1)
																									do  %% Line 247
																									    call 'glu':'quadricNormals'
																										(Sphere, 100000)
																									    do  %% Line 248
																										call 'glu':'quadricDrawStyle'
																										    (Sphere, 100012)
																										do  %% Line 249
																										    call 'glu':'quadricOrientation'
																											(Sphere, 100020)
																										    do  %% Line 251
																											call 'gl':'rotatef'
																											    (-90, 1.00000000000000000000e+00, 0.00000000000000000000e+00, 0.00000000000000000000e+00)
																											let <_cor25> =
																											    %% Line 252
																											    call 'erlang':'-'
																												(Deg)
																											in  do  %% Line 252
																												call 'gl':'rotatef'
																												    (_cor25, 0.00000000000000000000e+00, 0.00000000000000000000e+00, 1.00000000000000000000e+00)
																												do  %% Line 253
																												    call 'glu':'sphere'
																													(Sphere, 8.00000000000000044409e-01, 50, 40)
																												    do  %% Line 254
																													call 'gl':'popMatrix'
																													    ()
																													%% Line 256
																													call 'wxGLCanvas':'swapBuffers'
																													    (Win)
																							    -| ['compiler_generated'] )
																							  ( <_cor42> when 'true' ->
																								( call ( 'erlang'
																									 -| ['compiler_generated'] ):( 'error'
																												       -| ['compiler_generated'] )
																								      (( {'badrecord','texture'}
																									 -| ['compiler_generated'] ))
																								  -| ['compiler_generated'] )
																							    -| ['compiler_generated'] )
																							end
																							-| ['compiler_generated'] )
											      ( <_cor7> when 'true' ->
												    primop 'match_fail'
													({'badmatch',_cor7})
												-| ['compiler_generated'] )
											    end
					    -| ['compiler_generated'] )
					  ( <_cor35> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','texture'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
	  ( <_cor26> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor26})
		  -| [{'function_name',{'drawBox',1}}] )
	    -| ['compiler_generated'] )
	end
'drawFace'/3 =
    %% Line 258
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{{V1,V2,V3,V4},N,_X_Ut,_X_Vt},Cube,Colors> when 'true' ->
	      do  %% Line 259
		  call 'gl':'normal3fv'
		      (N)
		  let <_cor3> =
		      %% Line 260
		      call 'erlang':'element'
			  (V1, Colors)
		  in  do  %% Line 260
			  call 'gl':'color3fv'
			      (_cor3)
			  do  %% Line 261
			      call 'gl':'texCoord2f'
				  (0.00000000000000000000e+00, 0.00000000000000000000e+00)
			      let <_cor4> =
				  %% Line 261
				  call 'erlang':'element'
				      (V1, Cube)
			      in  do  %% Line 261
				      call 'gl':'vertex3fv'
					  (_cor4)
				      let <_cor5> =
					  %% Line 262
					  call 'erlang':'element'
					      (V2, Colors)
				      in  do  %% Line 262
					      call 'gl':'color3fv'
						  (_cor5)
					      do  %% Line 263
						  call 'gl':'texCoord2f'
						      (1.00000000000000000000e+00, 0.00000000000000000000e+00)
						  let <_cor6> =
						      %% Line 263
						      call 'erlang':'element'
							  (V2, Cube)
						  in  do  %% Line 263
							  call 'gl':'vertex3fv'
							      (_cor6)
							  let <_cor7> =
							      %% Line 264
							      call 'erlang':'element'
								  (V3, Colors)
							  in  do  %% Line 264
								  call 'gl':'color3fv'
								      (_cor7)
								  do  %% Line 265
								      call 'gl':'texCoord2f'
									  (1.00000000000000000000e+00, 1.00000000000000000000e+00)
								      let <_cor8> =
									  %% Line 265
									  call 'erlang':'element'
									      (V3, Cube)
								      in  do  %% Line 265
									      call 'gl':'vertex3fv'
										  (_cor8)
									      let <_cor9> =
										  %% Line 266
										  call 'erlang':'element'
										      (V4, Colors)
									      in  do  %% Line 266
										      call 'gl':'color3fv'
											  (_cor9)
										      do  %% Line 267
											  call 'gl':'texCoord2f'
											      (0.00000000000000000000e+00, 1.00000000000000000000e+00)
											  let <_cor10> =
											      %% Line 267
											      call 'erlang':'element'
												  (V4, Cube)
											  in  %% Line 267
											      call 'gl':'vertex3fv'
												  (_cor10)
	  ( <_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11})
		  -| [{'function_name',{'drawFace',3}}] )
	    -| ['compiler_generated'] )
	end
'draw_texture'/3 =
    %% Line 270
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <X,Y,{'texture',TId,W,H,%% Line 271
				  MinX,%% Line 271
				       MinY,%% Line 272
					    MaxX,%% Line 272
						 MaxY}> when 'true' ->
	      do  %% Line 273
		  call 'gl':'bindTexture'
		      (3553, TId)
		  do  %% Line 274
		      call 'gl':'begin'
			  (5)
		      do  %% Line 275
			  call 'gl':'texCoord2f'
			      (MinX, MinY)
			  do  %% Line 275
			      call 'gl':'vertex2i'
				  (X, Y)
			      do  %% Line 276
				  call 'gl':'texCoord2f'
				      (MaxX, MinY)
				  let <_cor3> =
				      %% Line 276
				      call 'erlang':'div'
					  (W, 2)
				  in  let <_cor4> =
					  %% Line 276
					  call 'erlang':'+'
					      (X, _cor3)
				      in  do  %% Line 276
					      call 'gl':'vertex2i'
						  (_cor4, Y)
					      do  %% Line 277
						  call 'gl':'texCoord2f'
						      (MinX, MaxY)
						  let <_cor5> =
						      %% Line 277
						      call 'erlang':'div'
							  (H, 2)
						  in  let <_cor6> =
							  %% Line 277
							  call 'erlang':'+'
							      (Y, _cor5)
						      in  do  %% Line 277
							      call 'gl':'vertex2i'
								  (X, _cor6)
							      do  %% Line 278
								  call 'gl':'texCoord2f'
								      (MaxX, MaxY)
								  let <_cor9> =
								      %% Line 278
								      call 'erlang':'div'
									  (W, 2)
								  in  let <_cor10> =
									  %% Line 278
									  call 'erlang':'+'
									      (X, _cor9)
								      in  let <_cor7> =
									      %% Line 278
									      call 'erlang':'div'
										  (H, 2)
									  in  let <_cor8> =
										  %% Line 278
										  call 'erlang':'+'
										      (Y, _cor7)
									      in  do  %% Line 278
										      call 'gl':'vertex2i'
											  (_cor10, _cor8)
										      %% Line 279
										      call 'gl':'end'
											  ()
	  ( <_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11})
		  -| [{'function_name',{'draw_texture',3}}] )
	    -| ['compiler_generated'] )
	end
'load_texture_by_image'/1 =
    %% Line 281
    fun (_cor0) ->
	let <ImgW> =
	    %% Line 282
	    call 'wxImage':'getWidth'
		(_cor0)
	in  let <ImgH> =
		%% Line 283
		call 'wxImage':'getHeight'
		    (_cor0)
	    in  let <W> =
		    %% Line 284
		    apply 'get_power_of_two_roof'/1
			(ImgW)
		in  let <H> =
			%% Line 285
			apply 'get_power_of_two_roof'/1
			    (ImgH)
		    in  let <Data> =
			    %% Line 286
			    apply 'get_data_for_use_with_teximage2d'/1
				(_cor0)
			in  %% Line 288
			    case call 'gl':'genTextures'
				     (1) of
			      <[TId|[]]> when 'true' ->
				  do  %% Line 289
				      call 'gl':'bindTexture'
					  (3553, TId)
				      do  %% Line 290
					  call 'gl':'texParameteri'
					      (3553, 10240, 9728)
					  do  %% Line 291
					      call 'gl':'texParameteri'
						  (3553, 10241, 9728)
					      let <_cor8> =
						  %% Line 292
						  case call 'wxImage':'hasAlpha'
							   (_cor0) of
						    %% Line 293
						    <'true'> when 'true' ->
							6408
						    %% Line 294
						    <'false'> when 'true' ->
							6407
						    ( <_cor7> when 'true' ->
							  primop 'match_fail'
							      ({'case_clause',_cor7})
						      -| ['compiler_generated'] )
						  end
					      in  do  %% Line 296
						      call 'gl':'texImage2D'
							  (3553, 0, _cor8, %% Line 297
									   W, %% Line 297
									      H, %% Line 297
										 0, _cor8, %% Line 298
											   5121, %% Line 298
												 Data)
						      let <_cor11> =
							  %% Line 300
							  call 'erlang':'/'
							      (ImgW, W)
						      in  let <_cor10> =
							      %% Line 300
							      call 'erlang':'/'
								  (ImgH, H)
							  in  %% Line 299
							      {'texture',TId,ImgW,ImgH,%% Line 300
										       0,%% Line 300
											 0,_cor11,_cor10}
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor6})
				-| ['compiler_generated'] )
			    end
'load_texture_by_string'/5 =
    %% Line 322
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <TmpBmp> =
	    %% Line 323
	    call 'wxBitmap':'new'
		(200, 200)
	in  let <Tmp> =
		%% Line 324
		call 'wxMemoryDC':'new'
		    (TmpBmp)
	    in  do  %% Line 325
		    call 'wxMemoryDC':'setFont'
			(Tmp, _cor4)
		    %% Line 326
		    case call 'wxDC':'getTextExtent'
			     (Tmp, _cor1) of
		      <{StrW,StrH}> when 'true' ->
			  do  %% Line 327
			      call 'wxMemoryDC':'destroy'
				  (Tmp)
			      do  %% Line 328
				  call 'wxBitmap':'destroy'
				      (TmpBmp)
				  let <W> =
				      %% Line 330
				      apply 'get_power_of_two_roof'/1
					  (StrW)
				  in  let <H> =
					  %% Line 331
					  apply 'get_power_of_two_roof'/1
					      (StrH)
				      in  let <Bmp> =
					      %% Line 333
					      call 'wxBitmap':'new'
						  (W, H)
					  in  let <DC> =
						  %% Line 334
						  call 'wxMemoryDC':'new'
						      (Bmp)
					      in  do  %% Line 335
						      call 'wxMemoryDC':'setFont'
							  (DC, _cor4)
						      do  %% Line 336
							  call 'wxMemoryDC':'setBackground'
							      (DC, _cor3)
							  do  %% Line 337
							      call 'wxMemoryDC':'clear'
								  (DC)
							      do  %% Line 338
								  call 'wxMemoryDC':'setTextForeground'
								      (DC, {255,255,255})
								  do  %% Line 339
								      call 'wxMemoryDC':'drawText'
									  (DC, _cor1, {0,0})
								      let <Img0> =
									  %% Line 341
									  call 'wxBitmap':'convertToImage'
									      (Bmp)
								      in  let <_cor26,Img> =
									      %% Line 342
									      case _cor0 of
										%% Line 343
										<'true'> when 'true' ->
										    let <Img> =
											%% Line 344
											call 'wxImage':'mirror'
											    (Img0, [{'horizontally','false'}])
										    in  do  %% Line 345
											    call 'wxImage':'destroy'
												(Img0)
											    %% Line 346
											    <Img,Img>
										%% Line 347
										<'false'> when 'true' ->
										    <%% Line 348
										     Img0,%% Line 348
											  Img0>
										( <_cor15> when 'true' ->
										      primop 'match_fail'
											  ({'case_clause',_cor15})
										  -| ['compiler_generated'] )
									      end
									  in  let <Alpha> =
										  %% Line 351
										  call 'wxImage':'getData'
										      (Img)
									      in  let <Data> =
										      %% Line 352
										      apply 'colourize_image'/2
											  (Alpha, _cor2)
										  in  do  %% Line 353
											  call 'wxImage':'destroy'
											      (Img)
											  do  %% Line 354
											      call 'wxBitmap':'destroy'
												  (Bmp)
											      do  %% Line 355
												  call 'wxMemoryDC':'destroy'
												      (DC)
												  %% Line 357
												  case call 'gl':'genTextures'
													   (1) of
												    <[TId|[]]> when 'true' ->
													do  %% Line 358
													    call 'gl':'bindTexture'
														(3553, TId)
													    do  %% Line 359
														call 'gl':'texParameteri'
														    (3553, 10240, 9729)
														do  %% Line 360
														    call 'gl':'texParameteri'
															(3553, 10241, 9729)
														    do  %% Line 361
															call 'gl':'texEnvf'
															    (8960, 8704, 7681)
															do  %% Line 364
															    call 'gl':'texImage2D'
																(3553, 0, 6408, %% Line 365
																		W, %% Line 365
																		   H, %% Line 365
																		      0, %% Line 365
																			 6408, %% Line 365
																			       5121, %% Line 365
																				     Data)
															    let <_cor20> =
																%% Line 367
																call 'erlang':'/'
																    (StrW, W)
															    in  let <_cor19> =
																    %% Line 367
																    call 'erlang':'/'
																	(StrH, H)
																in  %% Line 366
																    {'texture',TId,StrW,StrH,%% Line 367
																			     0,%% Line 367
																			       0,_cor20,_cor19}
												    ( <_cor18> when 'true' ->
													  primop 'match_fail'
													      ({'badmatch',_cor18})
												      -| ['compiler_generated'] )
												  end
		      ( <_cor7> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor7})
			-| ['compiler_generated'] )
		    end
'colourize_image'/2 =
    %% Line 369
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Alpha,{R,G,B}> when 'true' ->
	      let <_cor5> =
		  %% Line 370
		  call 'erlang':'bit_size'
		      (Alpha)
	      in  let <_cor4> =
		      call 'erlang':'div'
			  (_cor5, 24)
		  in  let <_cor3> =
			  call 'erlang':'*'
			      (_cor4, 4)
		      in  let <_cor2> =
			      primop 'bs_init_writable'
				  (_cor3)
			  in  %% Line 370
			      ( letrec
				    'lbc$^0'/2 =
					fun (_cor8,_cor7) ->
					    case <( _cor8
						    -| ['reuse_for_context'] ),_cor7> of
					      <#{#<A>(8,1,'integer',['unsigned'|['big']]),
						 #<_cor11>(8,1,'integer',['unsigned'|['big']]),
						 #<_cor12>(8,1,'integer',['unsigned'|['big']]),
						 #<_cor6>('all',1,'binary',['unsigned'|['big']])}#,_cor7> when 'true' ->
						  let <_cor7> =
						      ( #{#<_cor7>('all',1,'binary',[]),
							  #<R>(8,1,'integer',['unsigned'|['big']]),
							  #<G>(8,1,'integer',['unsigned'|['big']]),
							  #<B>(8,1,'integer',['unsigned'|['big']]),
							  #<A>(8,1,'integer',['unsigned'|['big']])}#
							-| ['compiler_generated','single_use'] )
						  in  apply 'lbc$^0'/2
							  (_cor6, _cor7)
					      <#{#<_cor6>('all',1,'binary',['unsigned'|['big']])}#,_cor7> when 'true' ->
						  _cor7
					      ( <_cor8,_cor7> when 'true' ->
						    do  primop 'bs_context_to_binary'
							    (_cor8)
							( primop 'match_fail'
							      ({'function_clause',_cor8,_cor7})
							  -| [{'function_name',{'lbc$^0',2}}] )
						-| ['compiler_generated'] )
					    end
				in  apply 'lbc$^0'/2
					(Alpha, _cor2)
				-| ['list_comprehension'] )
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9})
		  -| [{'function_name',{'colourize_image',2}}] )
	    -| ['compiler_generated'] )
	end
'get_data_for_use_with_teximage2d'/1 =
    %% Line 372
    fun (_cor0) ->
	let <RGB> =
	    %% Line 373
	    call 'wxImage':'getData'
		(_cor0)
	in  %% Line 374
	    case call 'wxImage':'hasAlpha'
		     (_cor0) of
	      %% Line 375
	      <'true'> when 'true' ->
		  let <Alpha> =
		      %% Line 376
		      call 'wxImage':'getAlpha'
			  (_cor0)
		  in  %% Line 377
		      apply 'interleave_rgb_and_alpha'/2
			  (RGB, Alpha)
	      %% Line 378
	      <'false'> when 'true' ->
		  %% Line 379
		  RGB
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor3})
		-| ['compiler_generated'] )
	    end
'interleave_rgb_and_alpha'/2 =
    %% Line 382
    fun (_cor1,_cor0) ->
	let <_cor14> =
	    %% Line 384
	    ( fun (_cor11,_cor10) ->
		  case <_cor11,_cor10> of
		    <{R,G,B},A> when 'true' ->
			%% Line 385
			#{#<R>(8,1,'integer',['unsigned'|['big']]),
			  #<G>(8,1,'integer',['unsigned'|['big']]),
			  #<B>(8,1,'integer',['unsigned'|['big']]),
			  #<A>(8,1,'integer',['unsigned'|['big']])}#
		    ( <_cor13,_cor12> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor13,_cor12})
			    -| [{'function_name',{'-interleave_rgb_and_alpha/2-fun-0-',2}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-interleave_rgb_and_alpha/2-fun-0-'}}] )
	in  let <_cor9> =
		%% Line 387
		( letrec
		      'lc$^1'/1 =
			  fun (_cor7) ->
			      case ( _cor7
				     -| ['reuse_for_context'] ) of
				<#{#<R>(8,1,'integer',['unsigned'|['big']]),
				   #<G>(8,1,'integer',['unsigned'|['big']]),
				   #<B>(8,1,'integer',['unsigned'|['big']]),
				   #<_cor6>('all',1,'binary',['unsigned'|['big']])}#> when 'true' ->
				    let <_cor8> =
					apply 'lc$^1'/1
					    (_cor6)
				    in  ( [{R,G,B}|_cor8]
					  -| ['compiler_generated'] )
				<#{#<_cor6>('all',1,'binary',['unsigned'|['big']])}#> when 'true' ->
				    []
				( <_cor7> when 'true' ->
				      do  primop 'bs_context_to_binary'
					      (_cor7)
					  ( primop 'match_fail'
						({'function_clause',_cor7})
					    -| [{'function_name',{'lc$^1',1}}] )
				  -| ['compiler_generated'] )
			      end
		  in  apply 'lc$^1'/1
			  (_cor1)
		  -| ['list_comprehension'] )
	    in  let <_cor5> =
		    %% Line 388
		    ( letrec
			  'lc$^0'/1 =
			      fun (_cor3) ->
				  case ( _cor3
					 -| ['reuse_for_context'] ) of
				    <#{#<A>(8,1,'integer',['unsigned'|['big']]),
				       #<_cor2>('all',1,'binary',['unsigned'|['big']])}#> when 'true' ->
					let <_cor4> =
					    apply 'lc$^0'/1
						(_cor2)
					in  ( [A|_cor4]
					      -| ['compiler_generated'] )
				    <#{#<_cor2>('all',1,'binary',['unsigned'|['big']])}#> when 'true' ->
					[]
				    ( <_cor3> when 'true' ->
					  do  primop 'bs_context_to_binary'
						  (_cor3)
					      ( primop 'match_fail'
						    ({'function_clause',_cor3})
						-| [{'function_name',{'lc$^0',1}}] )
				      -| ['compiler_generated'] )
				  end
		      in  apply 'lc$^0'/1
			      (_cor0)
		      -| ['list_comprehension'] )
		in  let <_cor15> =
			%% Line 384
			call 'lists':'zipwith'
			    (_cor14, _cor9, _cor5)
		    in  %% Line 383
			call 'erlang':'list_to_binary'
			    (_cor15)
'enter_2d_mode'/1 =
    %% Line 391
    fun (_cor0) ->
	%% Line 392
	case call 'wxWindow':'getClientSize'
		 (_cor0) of
	  <{W,H}> when 'true' ->
	      do  %% Line 396
		  call 'gl':'pushAttrib'
		      (8192)
		  do  %% Line 397
		      call 'gl':'disable'
			  (2929)
		      do  %% Line 398
			  call 'gl':'disable'
			      (2884)
			  do  %% Line 399
			      call 'gl':'enable'
				  (3553)
			      do  %% Line 402
				  call 'gl':'enable'
				      (3042)
				  do  %% Line 403
				      call 'gl':'blendFunc'
					  (770, 771)
				      do  %% Line 405
					  call 'gl':'matrixMode'
					      (5889)
					  do  %% Line 406
					      call 'gl':'pushMatrix'
						  ()
					      do  %% Line 407
						  call 'gl':'loadIdentity'
						      ()
						  do  %% Line 414
						      call 'gl':'ortho'
							  (0.00000000000000000000e+00, W, H, 0.00000000000000000000e+00, 0.00000000000000000000e+00, 1.00000000000000000000e+00)
						      do  %% Line 416
							  call 'gl':'matrixMode'
							      (5888)
							  do  %% Line 417
							      call 'gl':'pushMatrix'
								  ()
							      %% Line 418
							      call 'gl':'loadIdentity'
								  ()
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'leave_2d_mode'/0 =
    %% Line 420
    fun () ->
	do  %% Line 421
	    call 'gl':'matrixMode'
		(5888)
	    do  %% Line 422
		call 'gl':'popMatrix'
		    ()
		do  %% Line 423
		    call 'gl':'matrixMode'
			(5889)
		    do  %% Line 424
			call 'gl':'popMatrix'
			    ()
			%% Line 425
			call 'gl':'popAttrib'
			    ()
'get_power_of_two_roof'/1 =
    %% Line 427
    fun (_cor0) ->
	%% Line 428
	apply 'get_power_of_two_roof_2'/2
	    (1, _cor0)
'get_power_of_two_roof_2'/2 =
    %% Line 430
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <N,X>
	      when call 'erlang':'>='
		    (N,
		     X) ->
	      N
	  %% Line 431
	  <N,X> when 'true' ->
	      let <_cor2> =
		  call 'erlang':'*'
		      (N, 2)
	      in  apply 'get_power_of_two_roof_2'/2
		      (_cor2, X)
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ex_gl')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ex_gl', _cor0)
end