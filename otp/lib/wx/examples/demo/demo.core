module 'demo' ['code_change'/3,
	       'format'/3,
	       'handle_call'/3,
	       'handle_cast'/2,
	       'handle_event'/2,
	       'handle_info'/2,
	       'init'/1,
	       'module_info'/0,
	       'module_info'/1,
	       'start'/0,
	       'start'/1,
	       'start_link'/0,
	       'start_link'/1,
	       'terminate'/2]
    attributes [%% Line 25
		'type' =
		    %% Line 25
		    [{{'record','wx'},[{'typed_record_field',{'record_field',25,{'atom',25,'id'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'obj'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'remote_type',26,[{'atom',26,'wx'}|[{'atom',26,'wx_object'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'userData'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'type',27,'term',[]}]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'event'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'type',28,'event',[]}]]}}]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{'wx',{'type',31,'record',[{'atom',31,'wx'}]},[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','wxNavigationKey'},[{'typed_record_field',{'record_field',35,{'atom',35,'type'}},{'type',35,'union',[{'atom',35,'undefined'}|[{'type',35,'wxNavigationKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'flags'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'integer',[]}]]}}|[{'typed_record_field',{'record_field',37,{'atom',37,'focus'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'remote_type',37,[{'atom',37,'wxWindow'}|[{'atom',37,'wxWindow'}|[[]]]]}]]}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{'wxNavigationKeyEventType',{'atom',38,'navigation_key'},[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{'wxNavigationKey',{'type',39,'record',[{'atom',39,'wxNavigationKey'}]},[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','wxSash'},[{'typed_record_field',{'record_field',41,{'atom',41,'type'}},{'type',41,'union',[{'atom',41,'undefined'}|[{'type',41,'wxSashEventType',[]}]]}}|[{'typed_record_field',{'record_field',42,{'atom',42,'edge'}},{'type',42,'union',[{'atom',42,'undefined'}|[{'remote_type',42,[{'atom',42,'wx'}|[{'atom',42,'wx_enum'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'dragRect'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'tuple',[{'ann_type',43,[{'var',43,'X'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'Y'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'W'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'H'}|[{'type',43,'integer',[]}]]}]]]]}]]}}|[{'typed_record_field',{'record_field',44,{'atom',44,'dragStatus'}},{'type',44,'union',[{'atom',44,'undefined'}|[{'remote_type',44,[{'atom',44,'wx'}|[{'atom',44,'wx_enum'}|[[]]]]}]]}}]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'wxSashEventType',{'atom',45,'sash_dragged'},[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{'wxSash',{'type',46,'record',[{'atom',46,'wxSash'}]},[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','wxList'},[{'typed_record_field',{'record_field',48,{'atom',48,'type'}},{'type',48,'union',[{'atom',48,'undefined'}|[{'type',48,'wxListEventType',[]}]]}}|[{'typed_record_field',{'record_field',49,{'atom',49,'code'}},{'type',49,'union',[{'atom',49,'undefined'}|[{'type',49,'integer',[]}]]}}|[{'typed_record_field',{'record_field',50,{'atom',50,'oldItemIndex'}},{'type',50,'union',[{'atom',50,'undefined'}|[{'type',50,'integer',[]}]]}}|[{'typed_record_field',{'record_field',51,{'atom',51,'itemIndex'}},{'type',51,'union',[{'atom',51,'undefined'}|[{'type',51,'integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'col'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'pointDrag'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'tuple',[{'ann_type',53,[{'var',53,'X'}|[{'type',53,'integer',[]}]]}|[{'ann_type',53,[{'var',53,'Y'}|[{'type',53,'integer',[]}]]}]]}]]}}]]]]]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{'wxListEventType',{'type',54,'union',[{'atom',54,'command_list_begin_drag'}|[{'atom',54,'command_list_begin_rdrag'}|[{'atom',54,'command_list_begin_label_edit'}|[{'atom',54,'command_list_end_label_edit'}|[{'atom',54,'command_list_delete_item'}|[{'atom',54,'command_list_delete_all_items'}|[{'atom',54,'command_list_key_down'}|[{'atom',54,'command_list_insert_item'}|[{'atom',54,'command_list_col_click'}|[{'atom',54,'command_list_col_right_click'}|[{'atom',54,'command_list_col_begin_drag'}|[{'atom',54,'command_list_col_dragging'}|[{'atom',54,'command_list_col_end_drag'}|[{'atom',54,'command_list_item_selected'}|[{'atom',54,'command_list_item_deselected'}|[{'atom',54,'command_list_item_right_click'}|[{'atom',54,'command_list_item_middle_click'}|[{'atom',54,'command_list_item_activated'}|[{'atom',54,'command_list_item_focused'}|[{'atom',54,'command_list_cache_hint'}]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{'wxList',{'type',55,'record',[{'atom',55,'wxList'}]},[]}],
		%% Line 57
		'type' =
		    %% Line 57
		    [{{'record','wxNotebook'},[{'typed_record_field',{'record_field',57,{'atom',57,'type'}},{'type',57,'union',[{'atom',57,'undefined'}|[{'type',57,'wxNotebookEventType',[]}]]}}],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{'wxNotebookEventType',{'type',58,'union',[{'atom',58,'command_notebook_page_changed'}|[{'atom',58,'command_notebook_page_changing'}]]},[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{'wxNotebook',{'type',59,'record',[{'atom',59,'wxNotebook'}]},[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','wxDisplayChanged'},[{'typed_record_field',{'record_field',61,{'atom',61,'type'}},{'type',61,'union',[{'atom',61,'undefined'}|[{'type',61,'wxDisplayChangedEventType',[]}]]}}],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{'wxDisplayChangedEventType',{'atom',62,'display_changed'},[]}],
		%% Line 63
		'type' =
		    %% Line 63
		    [{'wxDisplayChanged',{'type',63,'record',[{'atom',63,'wxDisplayChanged'}]},[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','wxErase'},[{'typed_record_field',{'record_field',65,{'atom',65,'type'}},{'type',65,'union',[{'atom',65,'undefined'}|[{'type',65,'wxEraseEventType',[]}]]}}|[{'typed_record_field',{'record_field',66,{'atom',66,'dc'}},{'type',66,'union',[{'atom',66,'undefined'}|[{'remote_type',66,[{'atom',66,'wxDC'}|[{'atom',66,'wxDC'}|[[]]]]}]]}}]],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{'wxEraseEventType',{'atom',67,'erase_background'},[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{'wxErase',{'type',68,'record',[{'atom',68,'wxErase'}]},[]}],
		%% Line 70
		'type' =
		    %% Line 70
		    [{{'record','wxKey'},[{'typed_record_field',{'record_field',70,{'atom',70,'type'}},{'type',70,'union',[{'atom',70,'undefined'}|[{'type',70,'wxKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',71,{'atom',71,'x'}},{'type',71,'union',[{'atom',71,'undefined'}|[{'type',71,'integer',[]}]]}}|[{'typed_record_field',{'record_field',72,{'atom',72,'y'}},{'type',72,'union',[{'atom',72,'undefined'}|[{'type',72,'integer',[]}]]}}|[{'typed_record_field',{'record_field',73,{'atom',73,'keyCode'}},{'type',73,'union',[{'atom',73,'undefined'}|[{'type',73,'integer',[]}]]}}|[{'typed_record_field',{'record_field',74,{'atom',74,'controlDown'}},{'type',74,'union',[{'atom',74,'undefined'}|[{'type',74,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'shiftDown'}},{'type',75,'union',[{'atom',75,'undefined'}|[{'type',75,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',76,{'atom',76,'altDown'}},{'type',76,'union',[{'atom',76,'undefined'}|[{'type',76,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',77,{'atom',77,'metaDown'}},{'type',77,'union',[{'atom',77,'undefined'}|[{'type',77,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',78,{'atom',78,'scanCode'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',79,{'atom',79,'uniChar'}},{'type',79,'union',[{'atom',79,'undefined'}|[{'type',79,'integer',[]}]]}}|[{'typed_record_field',{'record_field',80,{'atom',80,'rawCode'}},{'type',80,'union',[{'atom',80,'undefined'}|[{'type',80,'integer',[]}]]}}|[{'typed_record_field',{'record_field',81,{'atom',81,'rawFlags'}},{'type',81,'union',[{'atom',81,'undefined'}|[{'type',81,'integer',[]}]]}}]]]]]]]]]]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{'wxKeyEventType',{'type',82,'union',[{'atom',82,'char'}|[{'atom',82,'char_hook'}|[{'atom',82,'key_down'}|[{'atom',82,'key_up'}]]]]},[]}],
		%% Line 83
		'type' =
		    %% Line 83
		    [{'wxKey',{'type',83,'record',[{'atom',83,'wxKey'}]},[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{{'record','wxWindowDestroy'},[{'typed_record_field',{'record_field',85,{'atom',85,'type'}},{'type',85,'union',[{'atom',85,'undefined'}|[{'type',85,'wxWindowDestroyEventType',[]}]]}}],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{'wxWindowDestroyEventType',{'atom',86,'destroy'},[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{'wxWindowDestroy',{'type',87,'record',[{'atom',87,'wxWindowDestroy'}]},[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','wxCalendar'},[{'typed_record_field',{'record_field',89,{'atom',89,'type'}},{'type',89,'union',[{'atom',89,'undefined'}|[{'type',89,'wxCalendarEventType',[]}]]}}],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{'wxCalendarEventType',{'type',90,'union',[{'atom',90,'calendar_sel_changed'}|[{'atom',90,'calendar_day_changed'}|[{'atom',90,'calendar_month_changed'}|[{'atom',90,'calendar_year_changed'}|[{'atom',90,'calendar_doubleclicked'}|[{'atom',90,'calendar_weekday_clicked'}]]]]]]},[]}],
		%% Line 91
		'type' =
		    %% Line 91
		    [{'wxCalendar',{'type',91,'record',[{'atom',91,'wxCalendar'}]},[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','wxSplitter'},[{'typed_record_field',{'record_field',93,{'atom',93,'type'}},{'type',93,'union',[{'atom',93,'undefined'}|[{'type',93,'wxSplitterEventType',[]}]]}}],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{'wxSplitterEventType',{'type',94,'union',[{'atom',94,'command_splitter_sash_pos_changed'}|[{'atom',94,'command_splitter_sash_pos_changing'}|[{'atom',94,'command_splitter_doubleclicked'}|[{'atom',94,'command_splitter_unsplit'}]]]]},[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{'wxSplitter',{'type',95,'record',[{'atom',95,'wxSplitter'}]},[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','wxScroll'},[{'typed_record_field',{'record_field',97,{'atom',97,'type'}},{'type',97,'union',[{'atom',97,'undefined'}|[{'type',97,'wxScrollEventType',[]}]]}}|[{'typed_record_field',{'record_field',98,{'atom',98,'commandInt'}},{'type',98,'union',[{'atom',98,'undefined'}|[{'type',98,'integer',[]}]]}}|[{'typed_record_field',{'record_field',99,{'atom',99,'extraLong'}},{'type',99,'union',[{'atom',99,'undefined'}|[{'type',99,'integer',[]}]]}}]]],[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{'wxScrollEventType',{'type',100,'union',[{'atom',100,'scroll_top'}|[{'atom',100,'scroll_bottom'}|[{'atom',100,'scroll_lineup'}|[{'atom',100,'scroll_linedown'}|[{'atom',100,'scroll_pageup'}|[{'atom',100,'scroll_pagedown'}|[{'atom',100,'scroll_thumbtrack'}|[{'atom',100,'scroll_thumbrelease'}|[{'atom',100,'scroll_changed'}]]]]]]]]]},[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{'wxScroll',{'type',101,'record',[{'atom',101,'wxScroll'}]},[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','wxMenu'},[{'typed_record_field',{'record_field',103,{'atom',103,'type'}},{'type',103,'union',[{'atom',103,'undefined'}|[{'type',103,'wxMenuEventType',[]}]]}}],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{'wxMenuEventType',{'type',104,'union',[{'atom',104,'menu_open'}|[{'atom',104,'menu_close'}|[{'atom',104,'menu_highlight'}]]]},[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{'wxMenu',{'type',105,'record',[{'atom',105,'wxMenu'}]},[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','wxContextMenu'},[{'typed_record_field',{'record_field',107,{'atom',107,'type'}},{'type',107,'union',[{'atom',107,'undefined'}|[{'type',107,'wxContextMenuEventType',[]}]]}}],[]}],
		%% Line 108
		'type' =
		    %% Line 108
		    [{'wxContextMenuEventType',{'atom',108,'context_menu'},[]}],
		%% Line 109
		'type' =
		    %% Line 109
		    [{'wxContextMenu',{'type',109,'record',[{'atom',109,'wxContextMenu'}]},[]}],
		%% Line 111
		'type' =
		    %% Line 111
		    [{{'record','wxShow'},[{'typed_record_field',{'record_field',111,{'atom',111,'type'}},{'type',111,'union',[{'atom',111,'undefined'}|[{'type',111,'wxShowEventType',[]}]]}}],[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{'wxShowEventType',{'atom',112,'show'},[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{'wxShow',{'type',113,'record',[{'atom',113,'wxShow'}]},[]}],
		%% Line 115
		'type' =
		    %% Line 115
		    [{{'record','wxSpin'},[{'typed_record_field',{'record_field',115,{'atom',115,'type'}},{'type',115,'union',[{'atom',115,'undefined'}|[{'type',115,'wxSpinEventType',[]}]]}}|[{'typed_record_field',{'record_field',116,{'atom',116,'commandInt'}},{'type',116,'union',[{'atom',116,'undefined'}|[{'type',116,'integer',[]}]]}}]],[]}],
		%% Line 117
		'type' =
		    %% Line 117
		    [{'wxSpinEventType',{'type',117,'union',[{'atom',117,'command_spinctrl_updated'}|[{'atom',117,'spin_up'}|[{'atom',117,'spin_down'}|[{'atom',117,'spin'}]]]]},[]}],
		%% Line 118
		'type' =
		    %% Line 118
		    [{'wxSpin',{'type',118,'record',[{'atom',118,'wxSpin'}]},[]}],
		%% Line 120
		'type' =
		    %% Line 120
		    [{{'record','wxSetCursor'},[{'typed_record_field',{'record_field',120,{'atom',120,'type'}},{'type',120,'union',[{'atom',120,'undefined'}|[{'type',120,'wxSetCursorEventType',[]}]]}}],[]}],
		%% Line 121
		'type' =
		    %% Line 121
		    [{'wxSetCursorEventType',{'atom',121,'set_cursor'},[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{'wxSetCursor',{'type',122,'record',[{'atom',122,'wxSetCursor'}]},[]}],
		%% Line 124
		'type' =
		    %% Line 124
		    [{{'record','wxFontPicker'},[{'typed_record_field',{'record_field',124,{'atom',124,'type'}},{'type',124,'union',[{'atom',124,'undefined'}|[{'type',124,'wxFontPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',125,{'atom',125,'font'}},{'type',125,'union',[{'atom',125,'undefined'}|[{'remote_type',125,[{'atom',125,'wxFont'}|[{'atom',125,'wxFont'}|[[]]]]}]]}}]],[]}],
		%% Line 126
		'type' =
		    %% Line 126
		    [{'wxFontPickerEventType',{'atom',126,'command_fontpicker_changed'},[]}],
		%% Line 127
		'type' =
		    %% Line 127
		    [{'wxFontPicker',{'type',127,'record',[{'atom',127,'wxFontPicker'}]},[]}],
		%% Line 129
		'type' =
		    %% Line 129
		    [{{'record','wxScrollWin'},[{'typed_record_field',{'record_field',129,{'atom',129,'type'}},{'type',129,'union',[{'atom',129,'undefined'}|[{'type',129,'wxScrollWinEventType',[]}]]}}],[]}],
		%% Line 130
		'type' =
		    %% Line 130
		    [{'wxScrollWinEventType',{'type',130,'union',[{'atom',130,'scrollwin_top'}|[{'atom',130,'scrollwin_bottom'}|[{'atom',130,'scrollwin_lineup'}|[{'atom',130,'scrollwin_linedown'}|[{'atom',130,'scrollwin_pageup'}|[{'atom',130,'scrollwin_pagedown'}|[{'atom',130,'scrollwin_thumbtrack'}|[{'atom',130,'scrollwin_thumbrelease'}]]]]]]]]},[]}],
		%% Line 131
		'type' =
		    %% Line 131
		    [{'wxScrollWin',{'type',131,'record',[{'atom',131,'wxScrollWin'}]},[]}],
		%% Line 133
		'type' =
		    %% Line 133
		    [{{'record','wxPaint'},[{'typed_record_field',{'record_field',133,{'atom',133,'type'}},{'type',133,'union',[{'atom',133,'undefined'}|[{'type',133,'wxPaintEventType',[]}]]}}],[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{'wxPaintEventType',{'atom',134,'paint'},[]}],
		%% Line 135
		'type' =
		    %% Line 135
		    [{'wxPaint',{'type',135,'record',[{'atom',135,'wxPaint'}]},[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','wxChildFocus'},[{'typed_record_field',{'record_field',137,{'atom',137,'type'}},{'type',137,'union',[{'atom',137,'undefined'}|[{'type',137,'wxChildFocusEventType',[]}]]}}],[]}],
		%% Line 138
		'type' =
		    %% Line 138
		    [{'wxChildFocusEventType',{'atom',138,'child_focus'},[]}],
		%% Line 139
		'type' =
		    %% Line 139
		    [{'wxChildFocus',{'type',139,'record',[{'atom',139,'wxChildFocus'}]},[]}],
		%% Line 141
		'type' =
		    %% Line 141
		    [{{'record','wxMaximize'},[{'typed_record_field',{'record_field',141,{'atom',141,'type'}},{'type',141,'union',[{'atom',141,'undefined'}|[{'type',141,'wxMaximizeEventType',[]}]]}}],[]}],
		%% Line 142
		'type' =
		    %% Line 142
		    [{'wxMaximizeEventType',{'atom',142,'maximize'},[]}],
		%% Line 143
		'type' =
		    %% Line 143
		    [{'wxMaximize',{'type',143,'record',[{'atom',143,'wxMaximize'}]},[]}],
		%% Line 145
		'type' =
		    %% Line 145
		    [{{'record','wxFileDirPicker'},[{'typed_record_field',{'record_field',145,{'atom',145,'type'}},{'type',145,'union',[{'atom',145,'undefined'}|[{'type',145,'wxFileDirPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',146,{'atom',146,'path'}},{'type',146,'union',[{'atom',146,'undefined'}|[{'remote_type',146,[{'atom',146,'unicode'}|[{'atom',146,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 147
		'type' =
		    %% Line 147
		    [{'wxFileDirPickerEventType',{'type',147,'union',[{'atom',147,'command_filepicker_changed'}|[{'atom',147,'command_dirpicker_changed'}]]},[]}],
		%% Line 148
		'type' =
		    %% Line 148
		    [{'wxFileDirPicker',{'type',148,'record',[{'atom',148,'wxFileDirPicker'}]},[]}],
		%% Line 150
		'type' =
		    %% Line 150
		    [{{'record','wxFocus'},[{'typed_record_field',{'record_field',150,{'atom',150,'type'}},{'type',150,'union',[{'atom',150,'undefined'}|[{'type',150,'wxFocusEventType',[]}]]}}],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{'wxFocusEventType',{'type',151,'union',[{'atom',151,'set_focus'}|[{'atom',151,'kill_focus'}]]},[]}],
		%% Line 152
		'type' =
		    %% Line 152
		    [{'wxFocus',{'type',152,'record',[{'atom',152,'wxFocus'}]},[]}],
		%% Line 154
		'type' =
		    %% Line 154
		    [{{'record','wxDate'},[{'typed_record_field',{'record_field',154,{'atom',154,'type'}},{'type',154,'union',[{'atom',154,'undefined'}|[{'type',154,'wxDateEventType',[]}]]}}|[{'typed_record_field',{'record_field',155,{'atom',155,'date'}},{'type',155,'union',[{'atom',155,'undefined'}|[{'remote_type',155,[{'atom',155,'wx'}|[{'atom',155,'wx_datetime'}|[[]]]]}]]}}]],[]}],
		%% Line 156
		'type' =
		    %% Line 156
		    [{'wxDateEventType',{'atom',156,'date_changed'},[]}],
		%% Line 157
		'type' =
		    %% Line 157
		    [{'wxDate',{'type',157,'record',[{'atom',157,'wxDate'}]},[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','wxHtmlLink'},[{'typed_record_field',{'record_field',159,{'atom',159,'type'}},{'type',159,'union',[{'atom',159,'undefined'}|[{'type',159,'wxHtmlLinkEventType',[]}]]}}|[{'typed_record_field',{'record_field',160,{'atom',160,'linkInfo'}},{'type',160,'union',[{'atom',160,'undefined'}|[{'remote_type',160,[{'atom',160,'wx'}|[{'atom',160,'wx_wxHtmlLinkInfo'}|[[]]]]}]]}}]],[]}],
		%% Line 161
		'type' =
		    %% Line 161
		    [{'wxHtmlLinkEventType',{'atom',161,'command_html_link_clicked'},[]}],
		%% Line 162
		'type' =
		    %% Line 162
		    [{'wxHtmlLink',{'type',162,'record',[{'atom',162,'wxHtmlLink'}]},[]}],
		%% Line 164
		'type' =
		    %% Line 164
		    [{{'record','wxHelp'},[{'typed_record_field',{'record_field',164,{'atom',164,'type'}},{'type',164,'union',[{'atom',164,'undefined'}|[{'type',164,'wxHelpEventType',[]}]]}}],[]}],
		%% Line 165
		'type' =
		    %% Line 165
		    [{'wxHelpEventType',{'type',165,'union',[{'atom',165,'help'}|[{'atom',165,'detailed_help'}]]},[]}],
		%% Line 166
		'type' =
		    %% Line 166
		    [{'wxHelp',{'type',166,'record',[{'atom',166,'wxHelp'}]},[]}],
		%% Line 168
		'type' =
		    %% Line 168
		    [{{'record','wxActivate'},[{'typed_record_field',{'record_field',168,{'atom',168,'type'}},{'type',168,'union',[{'atom',168,'undefined'}|[{'type',168,'wxActivateEventType',[]}]]}}|[{'typed_record_field',{'record_field',169,{'atom',169,'active'}},{'type',169,'union',[{'atom',169,'undefined'}|[{'type',169,'boolean',[]}]]}}]],[]}],
		%% Line 170
		'type' =
		    %% Line 170
		    [{'wxActivateEventType',{'type',170,'union',[{'atom',170,'activate'}|[{'atom',170,'activate_app'}|[{'atom',170,'hibernate'}]]]},[]}],
		%% Line 171
		'type' =
		    %% Line 171
		    [{'wxActivate',{'type',171,'record',[{'atom',171,'wxActivate'}]},[]}],
		%% Line 173
		'type' =
		    %% Line 173
		    [{{'record','wxStyledText'},[{'typed_record_field',{'record_field',173,{'atom',173,'type'}},{'type',173,'union',[{'atom',173,'undefined'}|[{'type',173,'wxStyledTextEventType',[]}]]}}|[{'typed_record_field',{'record_field',174,{'atom',174,'position'}},{'type',174,'union',[{'atom',174,'undefined'}|[{'type',174,'integer',[]}]]}}|[{'typed_record_field',{'record_field',175,{'atom',175,'key'}},{'type',175,'union',[{'atom',175,'undefined'}|[{'type',175,'integer',[]}]]}}|[{'typed_record_field',{'record_field',176,{'atom',176,'modifiers'}},{'type',176,'union',[{'atom',176,'undefined'}|[{'type',176,'integer',[]}]]}}|[{'typed_record_field',{'record_field',177,{'atom',177,'modificationType'}},{'type',177,'union',[{'atom',177,'undefined'}|[{'type',177,'integer',[]}]]}}|[{'typed_record_field',{'record_field',178,{'atom',178,'text'}},{'type',178,'union',[{'atom',178,'undefined'}|[{'remote_type',178,[{'atom',178,'unicode'}|[{'atom',178,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',179,{'atom',179,'length'}},{'type',179,'union',[{'atom',179,'undefined'}|[{'type',179,'integer',[]}]]}}|[{'typed_record_field',{'record_field',180,{'atom',180,'linesAdded'}},{'type',180,'union',[{'atom',180,'undefined'}|[{'type',180,'integer',[]}]]}}|[{'typed_record_field',{'record_field',181,{'atom',181,'line'}},{'type',181,'union',[{'atom',181,'undefined'}|[{'type',181,'integer',[]}]]}}|[{'typed_record_field',{'record_field',182,{'atom',182,'foldLevelNow'}},{'type',182,'union',[{'atom',182,'undefined'}|[{'type',182,'integer',[]}]]}}|[{'typed_record_field',{'record_field',183,{'atom',183,'foldLevelPrev'}},{'type',183,'union',[{'atom',183,'undefined'}|[{'type',183,'integer',[]}]]}}|[{'typed_record_field',{'record_field',184,{'atom',184,'margin'}},{'type',184,'union',[{'atom',184,'undefined'}|[{'type',184,'integer',[]}]]}}|[{'typed_record_field',{'record_field',185,{'atom',185,'message'}},{'type',185,'union',[{'atom',185,'undefined'}|[{'type',185,'integer',[]}]]}}|[{'typed_record_field',{'record_field',186,{'atom',186,'wParam'}},{'type',186,'union',[{'atom',186,'undefined'}|[{'type',186,'integer',[]}]]}}|[{'typed_record_field',{'record_field',187,{'atom',187,'lParam'}},{'type',187,'union',[{'atom',187,'undefined'}|[{'type',187,'integer',[]}]]}}|[{'typed_record_field',{'record_field',188,{'atom',188,'listType'}},{'type',188,'union',[{'atom',188,'undefined'}|[{'type',188,'integer',[]}]]}}|[{'typed_record_field',{'record_field',189,{'atom',189,'x'}},{'type',189,'union',[{'atom',189,'undefined'}|[{'type',189,'integer',[]}]]}}|[{'typed_record_field',{'record_field',190,{'atom',190,'y'}},{'type',190,'union',[{'atom',190,'undefined'}|[{'type',190,'integer',[]}]]}}|[{'typed_record_field',{'record_field',191,{'atom',191,'dragText'}},{'type',191,'union',[{'atom',191,'undefined'}|[{'remote_type',191,[{'atom',191,'unicode'}|[{'atom',191,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',192,{'atom',192,'dragAllowMove'}},{'type',192,'union',[{'atom',192,'undefined'}|[{'type',192,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',193,{'atom',193,'dragResult'}},{'type',193,'union',[{'atom',193,'undefined'}|[{'remote_type',193,[{'atom',193,'wx'}|[{'atom',193,'wx_enum'}|[[]]]]}]]}}]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 194
		'type' =
		    %% Line 194
		    [{'wxStyledTextEventType',{'type',194,'union',[{'atom',194,'stc_change'}|[{'atom',194,'stc_styleneeded'}|[{'atom',194,'stc_charadded'}|[{'atom',194,'stc_savepointreached'}|[{'atom',194,'stc_savepointleft'}|[{'atom',194,'stc_romodifyattempt'}|[{'atom',194,'stc_key'}|[{'atom',194,'stc_doubleclick'}|[{'atom',194,'stc_updateui'}|[{'atom',194,'stc_modified'}|[{'atom',194,'stc_macrorecord'}|[{'atom',194,'stc_marginclick'}|[{'atom',194,'stc_needshown'}|[{'atom',194,'stc_painted'}|[{'atom',194,'stc_userlistselection'}|[{'atom',194,'stc_uridropped'}|[{'atom',194,'stc_dwellstart'}|[{'atom',194,'stc_dwellend'}|[{'atom',194,'stc_start_drag'}|[{'atom',194,'stc_drag_over'}|[{'atom',194,'stc_do_drop'}|[{'atom',194,'stc_zoom'}|[{'atom',194,'stc_hotspot_click'}|[{'atom',194,'stc_hotspot_dclick'}|[{'atom',194,'stc_calltip_click'}|[{'atom',194,'stc_autocomp_selection'}]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 195
		'type' =
		    %% Line 195
		    [{'wxStyledText',{'type',195,'record',[{'atom',195,'wxStyledText'}]},[]}],
		%% Line 197
		'type' =
		    %% Line 197
		    [{{'record','wxSysColourChanged'},[{'typed_record_field',{'record_field',197,{'atom',197,'type'}},{'type',197,'union',[{'atom',197,'undefined'}|[{'type',197,'wxSysColourChangedEventType',[]}]]}}],[]}],
		%% Line 198
		'type' =
		    %% Line 198
		    [{'wxSysColourChangedEventType',{'atom',198,'sys_colour_changed'},[]}],
		%% Line 199
		'type' =
		    %% Line 199
		    [{'wxSysColourChanged',{'type',199,'record',[{'atom',199,'wxSysColourChanged'}]},[]}],
		%% Line 201
		'type' =
		    %% Line 201
		    [{{'record','wxGrid'},[{'typed_record_field',{'record_field',201,{'atom',201,'type'}},{'type',201,'union',[{'atom',201,'undefined'}|[{'type',201,'wxGridEventType',[]}]]}}|[{'typed_record_field',{'record_field',202,{'atom',202,'row'}},{'type',202,'union',[{'atom',202,'undefined'}|[{'type',202,'integer',[]}]]}}|[{'typed_record_field',{'record_field',203,{'atom',203,'col'}},{'type',203,'union',[{'atom',203,'undefined'}|[{'type',203,'integer',[]}]]}}|[{'typed_record_field',{'record_field',204,{'atom',204,'x'}},{'type',204,'union',[{'atom',204,'undefined'}|[{'type',204,'integer',[]}]]}}|[{'typed_record_field',{'record_field',205,{'atom',205,'y'}},{'type',205,'union',[{'atom',205,'undefined'}|[{'type',205,'integer',[]}]]}}|[{'typed_record_field',{'record_field',206,{'atom',206,'selecting'}},{'type',206,'union',[{'atom',206,'undefined'}|[{'type',206,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',207,{'atom',207,'control'}},{'type',207,'union',[{'atom',207,'undefined'}|[{'type',207,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',208,{'atom',208,'meta'}},{'type',208,'union',[{'atom',208,'undefined'}|[{'type',208,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',209,{'atom',209,'shift'}},{'type',209,'union',[{'atom',209,'undefined'}|[{'type',209,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',210,{'atom',210,'alt'}},{'type',210,'union',[{'atom',210,'undefined'}|[{'type',210,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 211
		'type' =
		    %% Line 211
		    [{'wxGridEventType',{'type',211,'union',[{'atom',211,'grid_cell_left_click'}|[{'atom',211,'grid_cell_right_click'}|[{'atom',211,'grid_cell_left_dclick'}|[{'atom',211,'grid_cell_right_dclick'}|[{'atom',211,'grid_label_left_click'}|[{'atom',211,'grid_label_right_click'}|[{'atom',211,'grid_label_left_dclick'}|[{'atom',211,'grid_label_right_dclick'}|[{'atom',211,'grid_row_size'}|[{'atom',211,'grid_col_size'}|[{'atom',211,'grid_range_select'}|[{'atom',211,'grid_cell_change'}|[{'atom',211,'grid_select_cell'}|[{'atom',211,'grid_editor_shown'}|[{'atom',211,'grid_editor_hidden'}|[{'atom',211,'grid_editor_created'}|[{'atom',211,'grid_cell_begin_drag'}]]]]]]]]]]]]]]]]]},[]}],
		%% Line 212
		'type' =
		    %% Line 212
		    [{'wxGrid',{'type',212,'record',[{'atom',212,'wxGrid'}]},[]}],
		%% Line 214
		'type' =
		    %% Line 214
		    [{{'record','wxPaletteChanged'},[{'typed_record_field',{'record_field',214,{'atom',214,'type'}},{'type',214,'union',[{'atom',214,'undefined'}|[{'type',214,'wxPaletteChangedEventType',[]}]]}}],[]}],
		%% Line 215
		'type' =
		    %% Line 215
		    [{'wxPaletteChangedEventType',{'atom',215,'palette_changed'},[]}],
		%% Line 216
		'type' =
		    %% Line 216
		    [{'wxPaletteChanged',{'type',216,'record',[{'atom',216,'wxPaletteChanged'}]},[]}],
		%% Line 218
		'type' =
		    %% Line 218
		    [{{'record','wxUpdateUI'},[{'typed_record_field',{'record_field',218,{'atom',218,'type'}},{'type',218,'union',[{'atom',218,'undefined'}|[{'type',218,'wxUpdateUIEventType',[]}]]}}],[]}],
		%% Line 219
		'type' =
		    %% Line 219
		    [{'wxUpdateUIEventType',{'atom',219,'update_ui'},[]}],
		%% Line 220
		'type' =
		    %% Line 220
		    [{'wxUpdateUI',{'type',220,'record',[{'atom',220,'wxUpdateUI'}]},[]}],
		%% Line 222
		'type' =
		    %% Line 222
		    [{{'record','wxSize'},[{'typed_record_field',{'record_field',222,{'atom',222,'type'}},{'type',222,'union',[{'atom',222,'undefined'}|[{'type',222,'wxSizeEventType',[]}]]}}|[{'typed_record_field',{'record_field',223,{'atom',223,'size'}},{'type',223,'union',[{'atom',223,'undefined'}|[{'type',223,'tuple',[{'ann_type',223,[{'var',223,'W'}|[{'type',223,'integer',[]}]]}|[{'ann_type',223,[{'var',223,'H'}|[{'type',223,'integer',[]}]]}]]}]]}}|[{'typed_record_field',{'record_field',224,{'atom',224,'rect'}},{'type',224,'union',[{'atom',224,'undefined'}|[{'type',224,'tuple',[{'ann_type',224,[{'var',224,'X'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'Y'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'W'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'H'}|[{'type',224,'integer',[]}]]}]]]]}]]}}]]],[]}],
		%% Line 225
		'type' =
		    %% Line 225
		    [{'wxSizeEventType',{'atom',225,'size'},[]}],
		%% Line 226
		'type' =
		    %% Line 226
		    [{'wxSize',{'type',226,'record',[{'atom',226,'wxSize'}]},[]}],
		%% Line 228
		'type' =
		    %% Line 228
		    [{{'record','wxIconize'},[{'typed_record_field',{'record_field',228,{'atom',228,'type'}},{'type',228,'union',[{'atom',228,'undefined'}|[{'type',228,'wxIconizeEventType',[]}]]}}],[]}],
		%% Line 229
		'type' =
		    %% Line 229
		    [{'wxIconizeEventType',{'atom',229,'iconize'},[]}],
		%% Line 230
		'type' =
		    %% Line 230
		    [{'wxIconize',{'type',230,'record',[{'atom',230,'wxIconize'}]},[]}],
		%% Line 232
		'type' =
		    %% Line 232
		    [{{'record','wxAuiNotebook'},[{'typed_record_field',{'record_field',232,{'atom',232,'type'}},{'type',232,'union',[{'atom',232,'undefined'}|[{'type',232,'wxAuiNotebookEventType',[]}]]}}|[{'typed_record_field',{'record_field',233,{'atom',233,'old_selection'}},{'type',233,'union',[{'atom',233,'undefined'}|[{'type',233,'integer',[]}]]}}|[{'typed_record_field',{'record_field',234,{'atom',234,'selection'}},{'type',234,'union',[{'atom',234,'undefined'}|[{'type',234,'integer',[]}]]}}|[{'typed_record_field',{'record_field',235,{'atom',235,'drag_source'}},{'type',235,'union',[{'atom',235,'undefined'}|[{'remote_type',235,[{'atom',235,'wxAuiNotebook'}|[{'atom',235,'wxAuiNotebook'}|[[]]]]}]]}}]]]],[]}],
		%% Line 236
		'type' =
		    %% Line 236
		    [{'wxAuiNotebookEventType',{'type',236,'union',[{'atom',236,'command_auinotebook_page_close'}|[{'atom',236,'command_auinotebook_page_changed'}|[{'atom',236,'command_auinotebook_page_changing'}|[{'atom',236,'command_auinotebook_button'}|[{'atom',236,'command_auinotebook_begin_drag'}|[{'atom',236,'command_auinotebook_end_drag'}|[{'atom',236,'command_auinotebook_drag_motion'}|[{'atom',236,'command_auinotebook_allow_dnd'}|[{'atom',236,'command_auinotebook_tab_middle_down'}|[{'atom',236,'command_auinotebook_tab_middle_up'}|[{'atom',236,'command_auinotebook_tab_right_down'}|[{'atom',236,'command_auinotebook_tab_right_up'}|[{'atom',236,'command_auinotebook_page_closed'}|[{'atom',236,'command_auinotebook_drag_done'}|[{'atom',236,'command_auinotebook_bg_dclick'}]]]]]]]]]]]]]]]},[]}],
		%% Line 237
		'type' =
		    %% Line 237
		    [{'wxAuiNotebook',{'type',237,'record',[{'atom',237,'wxAuiNotebook'}]},[]}],
		%% Line 239
		'type' =
		    %% Line 239
		    [{{'record','wxClose'},[{'typed_record_field',{'record_field',239,{'atom',239,'type'}},{'type',239,'union',[{'atom',239,'undefined'}|[{'type',239,'wxCloseEventType',[]}]]}}],[]}],
		%% Line 240
		'type' =
		    %% Line 240
		    [{'wxCloseEventType',{'type',240,'union',[{'atom',240,'close_window'}|[{'atom',240,'end_session'}|[{'atom',240,'query_end_session'}]]]},[]}],
		%% Line 241
		'type' =
		    %% Line 241
		    [{'wxClose',{'type',241,'record',[{'atom',241,'wxClose'}]},[]}],
		%% Line 243
		'type' =
		    %% Line 243
		    [{{'record','wxMouseCaptureChanged'},[{'typed_record_field',{'record_field',243,{'atom',243,'type'}},{'type',243,'union',[{'atom',243,'undefined'}|[{'type',243,'wxMouseCaptureChangedEventType',[]}]]}}],[]}],
		%% Line 244
		'type' =
		    %% Line 244
		    [{'wxMouseCaptureChangedEventType',{'atom',244,'mouse_capture_changed'},[]}],
		%% Line 245
		'type' =
		    %% Line 245
		    [{'wxMouseCaptureChanged',{'type',245,'record',[{'atom',245,'wxMouseCaptureChanged'}]},[]}],
		%% Line 247
		'type' =
		    %% Line 247
		    [{{'record','wxMouse'},[{'typed_record_field',{'record_field',247,{'atom',247,'type'}},{'type',247,'union',[{'atom',247,'undefined'}|[{'type',247,'wxMouseEventType',[]}]]}}|[{'typed_record_field',{'record_field',248,{'atom',248,'x'}},{'type',248,'union',[{'atom',248,'undefined'}|[{'type',248,'integer',[]}]]}}|[{'typed_record_field',{'record_field',249,{'atom',249,'y'}},{'type',249,'union',[{'atom',249,'undefined'}|[{'type',249,'integer',[]}]]}}|[{'typed_record_field',{'record_field',250,{'atom',250,'leftDown'}},{'type',250,'union',[{'atom',250,'undefined'}|[{'type',250,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',251,{'atom',251,'middleDown'}},{'type',251,'union',[{'atom',251,'undefined'}|[{'type',251,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',252,{'atom',252,'rightDown'}},{'type',252,'union',[{'atom',252,'undefined'}|[{'type',252,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',253,{'atom',253,'controlDown'}},{'type',253,'union',[{'atom',253,'undefined'}|[{'type',253,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',254,{'atom',254,'shiftDown'}},{'type',254,'union',[{'atom',254,'undefined'}|[{'type',254,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',255,{'atom',255,'altDown'}},{'type',255,'union',[{'atom',255,'undefined'}|[{'type',255,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',256,{'atom',256,'metaDown'}},{'type',256,'union',[{'atom',256,'undefined'}|[{'type',256,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',257,{'atom',257,'wheelRotation'}},{'type',257,'union',[{'atom',257,'undefined'}|[{'type',257,'integer',[]}]]}}|[{'typed_record_field',{'record_field',258,{'atom',258,'wheelDelta'}},{'type',258,'union',[{'atom',258,'undefined'}|[{'type',258,'integer',[]}]]}}|[{'typed_record_field',{'record_field',259,{'atom',259,'linesPerAction'}},{'type',259,'union',[{'atom',259,'undefined'}|[{'type',259,'integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 260
		'type' =
		    %% Line 260
		    [{'wxMouseEventType',{'type',260,'union',[{'atom',260,'left_down'}|[{'atom',260,'left_up'}|[{'atom',260,'middle_down'}|[{'atom',260,'middle_up'}|[{'atom',260,'right_down'}|[{'atom',260,'right_up'}|[{'atom',260,'motion'}|[{'atom',260,'enter_window'}|[{'atom',260,'leave_window'}|[{'atom',260,'left_dclick'}|[{'atom',260,'middle_dclick'}|[{'atom',260,'right_dclick'}|[{'atom',260,'mousewheel'}]]]]]]]]]]]]]},[]}],
		%% Line 261
		'type' =
		    %% Line 261
		    [{'wxMouse',{'type',261,'record',[{'atom',261,'wxMouse'}]},[]}],
		%% Line 263
		'type' =
		    %% Line 263
		    [{{'record','wxClipboardText'},[{'typed_record_field',{'record_field',263,{'atom',263,'type'}},{'type',263,'union',[{'atom',263,'undefined'}|[{'type',263,'wxClipboardTextEventType',[]}]]}}],[]}],
		%% Line 264
		'type' =
		    %% Line 264
		    [{'wxClipboardTextEventType',{'type',264,'union',[{'atom',264,'command_text_copy'}|[{'atom',264,'command_text_cut'}|[{'atom',264,'command_text_paste'}]]]},[]}],
		%% Line 265
		'type' =
		    %% Line 265
		    [{'wxClipboardText',{'type',265,'record',[{'atom',265,'wxClipboardText'}]},[]}],
		%% Line 267
		'type' =
		    %% Line 267
		    [{{'record','wxWindowCreate'},[{'typed_record_field',{'record_field',267,{'atom',267,'type'}},{'type',267,'union',[{'atom',267,'undefined'}|[{'type',267,'wxWindowCreateEventType',[]}]]}}],[]}],
		%% Line 268
		'type' =
		    %% Line 268
		    [{'wxWindowCreateEventType',{'atom',268,'create'},[]}],
		%% Line 269
		'type' =
		    %% Line 269
		    [{'wxWindowCreate',{'type',269,'record',[{'atom',269,'wxWindowCreate'}]},[]}],
		%% Line 271
		'type' =
		    %% Line 271
		    [{{'record','wxAuiManager'},[{'typed_record_field',{'record_field',271,{'atom',271,'type'}},{'type',271,'union',[{'atom',271,'undefined'}|[{'type',271,'wxAuiManagerEventType',[]}]]}}|[{'typed_record_field',{'record_field',272,{'atom',272,'manager'}},{'type',272,'union',[{'atom',272,'undefined'}|[{'remote_type',272,[{'atom',272,'wxAuiManager'}|[{'atom',272,'wxAuiManager'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',273,{'atom',273,'pane'}},{'type',273,'union',[{'atom',273,'undefined'}|[{'remote_type',273,[{'atom',273,'wxAuiPaneInfo'}|[{'atom',273,'wxAuiPaneInfo'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',274,{'atom',274,'button'}},{'type',274,'union',[{'atom',274,'undefined'}|[{'type',274,'integer',[]}]]}}|[{'typed_record_field',{'record_field',275,{'atom',275,'veto_flag'}},{'type',275,'union',[{'atom',275,'undefined'}|[{'type',275,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',276,{'atom',276,'canveto_flag'}},{'type',276,'union',[{'atom',276,'undefined'}|[{'type',276,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',277,{'atom',277,'dc'}},{'type',277,'union',[{'atom',277,'undefined'}|[{'remote_type',277,[{'atom',277,'wxDC'}|[{'atom',277,'wxDC'}|[[]]]]}]]}}]]]]]]],[]}],
		%% Line 278
		'type' =
		    %% Line 278
		    [{'wxAuiManagerEventType',{'type',278,'union',[{'atom',278,'aui_pane_button'}|[{'atom',278,'aui_pane_close'}|[{'atom',278,'aui_pane_maximize'}|[{'atom',278,'aui_pane_restore'}|[{'atom',278,'aui_render'}|[{'atom',278,'aui_find_manager'}]]]]]]},[]}],
		%% Line 279
		'type' =
		    %% Line 279
		    [{'wxAuiManager',{'type',279,'record',[{'atom',279,'wxAuiManager'}]},[]}],
		%% Line 281
		'type' =
		    %% Line 281
		    [{{'record','wxInitDialog'},[{'typed_record_field',{'record_field',281,{'atom',281,'type'}},{'type',281,'union',[{'atom',281,'undefined'}|[{'type',281,'wxInitDialogEventType',[]}]]}}],[]}],
		%% Line 282
		'type' =
		    %% Line 282
		    [{'wxInitDialogEventType',{'atom',282,'init_dialog'},[]}],
		%% Line 283
		'type' =
		    %% Line 283
		    [{'wxInitDialog',{'type',283,'record',[{'atom',283,'wxInitDialog'}]},[]}],
		%% Line 285
		'type' =
		    %% Line 285
		    [{{'record','wxCommand'},[{'typed_record_field',{'record_field',285,{'atom',285,'type'}},{'type',285,'union',[{'atom',285,'undefined'}|[{'type',285,'wxCommandEventType',[]}]]}}|[{'typed_record_field',{'record_field',286,{'atom',286,'cmdString'}},{'type',286,'union',[{'atom',286,'undefined'}|[{'remote_type',286,[{'atom',286,'unicode'}|[{'atom',286,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',287,{'atom',287,'commandInt'}},{'type',287,'union',[{'atom',287,'undefined'}|[{'type',287,'integer',[]}]]}}|[{'typed_record_field',{'record_field',288,{'atom',288,'extraLong'}},{'type',288,'union',[{'atom',288,'undefined'}|[{'type',288,'integer',[]}]]}}]]]],[]}],
		%% Line 289
		'type' =
		    %% Line 289
		    [{'wxCommandEventType',{'type',289,'union',[{'atom',289,'command_button_clicked'}|[{'atom',289,'command_checkbox_clicked'}|[{'atom',289,'command_choice_selected'}|[{'atom',289,'command_listbox_selected'}|[{'atom',289,'command_listbox_doubleclicked'}|[{'atom',289,'command_text_updated'}|[{'atom',289,'command_text_enter'}|[{'atom',289,'command_menu_selected'}|[{'atom',289,'command_slider_updated'}|[{'atom',289,'command_radiobox_selected'}|[{'atom',289,'command_radiobutton_selected'}|[{'atom',289,'command_scrollbar_updated'}|[{'atom',289,'command_vlbox_selected'}|[{'atom',289,'command_combobox_selected'}|[{'atom',289,'command_tool_rclicked'}|[{'atom',289,'command_tool_enter'}|[{'atom',289,'command_checklistbox_toggled'}|[{'atom',289,'command_togglebutton_clicked'}|[{'atom',289,'command_left_click'}|[{'atom',289,'command_left_dclick'}|[{'atom',289,'command_right_click'}|[{'atom',289,'command_set_focus'}|[{'atom',289,'command_kill_focus'}|[{'atom',289,'command_enter'}]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 290
		'type' =
		    %% Line 290
		    [{'wxCommand',{'type',290,'record',[{'atom',290,'wxCommand'}]},[]}],
		%% Line 292
		'type' =
		    %% Line 292
		    [{{'record','wxJoystick'},[{'typed_record_field',{'record_field',292,{'atom',292,'type'}},{'type',292,'union',[{'atom',292,'undefined'}|[{'type',292,'wxJoystickEventType',[]}]]}}],[]}],
		%% Line 293
		'type' =
		    %% Line 293
		    [{'wxJoystickEventType',{'type',293,'union',[{'atom',293,'joy_button_down'}|[{'atom',293,'joy_button_up'}|[{'atom',293,'joy_move'}|[{'atom',293,'joy_zmove'}]]]]},[]}],
		%% Line 294
		'type' =
		    %% Line 294
		    [{'wxJoystick',{'type',294,'record',[{'atom',294,'wxJoystick'}]},[]}],
		%% Line 296
		'type' =
		    %% Line 296
		    [{{'record','wxQueryNewPalette'},[{'typed_record_field',{'record_field',296,{'atom',296,'type'}},{'type',296,'union',[{'atom',296,'undefined'}|[{'type',296,'wxQueryNewPaletteEventType',[]}]]}}],[]}],
		%% Line 297
		'type' =
		    %% Line 297
		    [{'wxQueryNewPaletteEventType',{'atom',297,'query_new_palette'},[]}],
		%% Line 298
		'type' =
		    %% Line 298
		    [{'wxQueryNewPalette',{'type',298,'record',[{'atom',298,'wxQueryNewPalette'}]},[]}],
		%% Line 300
		'type' =
		    %% Line 300
		    [{{'record','wxMove'},[{'typed_record_field',{'record_field',300,{'atom',300,'type'}},{'type',300,'union',[{'atom',300,'undefined'}|[{'type',300,'wxMoveEventType',[]}]]}}],[]}],
		%% Line 301
		'type' =
		    %% Line 301
		    [{'wxMoveEventType',{'atom',301,'move'},[]}],
		%% Line 302
		'type' =
		    %% Line 302
		    [{'wxMove',{'type',302,'record',[{'atom',302,'wxMove'}]},[]}],
		%% Line 304
		'type' =
		    %% Line 304
		    [{{'record','wxIdle'},[{'typed_record_field',{'record_field',304,{'atom',304,'type'}},{'type',304,'union',[{'atom',304,'undefined'}|[{'type',304,'wxIdleEventType',[]}]]}}],[]}],
		%% Line 305
		'type' =
		    %% Line 305
		    [{'wxIdleEventType',{'atom',305,'idle'},[]}],
		%% Line 306
		'type' =
		    %% Line 306
		    [{'wxIdle',{'type',306,'record',[{'atom',306,'wxIdle'}]},[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{{'record','wxColourPicker'},[{'typed_record_field',{'record_field',308,{'atom',308,'type'}},{'type',308,'union',[{'atom',308,'undefined'}|[{'type',308,'wxColourPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',309,{'atom',309,'colour'}},{'type',309,'union',[{'atom',309,'undefined'}|[{'remote_type',309,[{'atom',309,'wx'}|[{'atom',309,'wx_colour'}|[[]]]]}]]}}]],[]}],
		%% Line 310
		'type' =
		    %% Line 310
		    [{'wxColourPickerEventType',{'atom',310,'command_colourpicker_changed'},[]}],
		%% Line 311
		'type' =
		    %% Line 311
		    [{'wxColourPicker',{'type',311,'record',[{'atom',311,'wxColourPicker'}]},[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{{'record','wxTaskBarIcon'},[{'typed_record_field',{'record_field',313,{'atom',313,'type'}},{'type',313,'union',[{'atom',313,'undefined'}|[{'type',313,'wxTaskBarIconEventType',[]}]]}}],[]}],
		%% Line 314
		'type' =
		    %% Line 314
		    [{'wxTaskBarIconEventType',{'type',314,'union',[{'atom',314,'taskbar_move'}|[{'atom',314,'taskbar_left_down'}|[{'atom',314,'taskbar_left_up'}|[{'atom',314,'taskbar_right_down'}|[{'atom',314,'taskbar_right_up'}|[{'atom',314,'taskbar_left_dclick'}|[{'atom',314,'taskbar_right_dclick'}]]]]]]]},[]}],
		%% Line 315
		'type' =
		    %% Line 315
		    [{'wxTaskBarIcon',{'type',315,'record',[{'atom',315,'wxTaskBarIcon'}]},[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{{'record','wxTree'},[{'typed_record_field',{'record_field',317,{'atom',317,'type'}},{'type',317,'union',[{'atom',317,'undefined'}|[{'type',317,'wxTreeEventType',[]}]]}}|[{'typed_record_field',{'record_field',318,{'atom',318,'item'}},{'type',318,'union',[{'atom',318,'undefined'}|[{'type',318,'integer',[]}]]}}|[{'typed_record_field',{'record_field',319,{'atom',319,'itemOld'}},{'type',319,'union',[{'atom',319,'undefined'}|[{'type',319,'integer',[]}]]}}|[{'typed_record_field',{'record_field',320,{'atom',320,'pointDrag'}},{'type',320,'union',[{'atom',320,'undefined'}|[{'type',320,'tuple',[{'ann_type',320,[{'var',320,'X'}|[{'type',320,'integer',[]}]]}|[{'ann_type',320,[{'var',320,'Y'}|[{'type',320,'integer',[]}]]}]]}]]}}]]]],[]}],
		%% Line 321
		'type' =
		    %% Line 321
		    [{'wxTreeEventType',{'type',321,'union',[{'atom',321,'command_tree_begin_drag'}|[{'atom',321,'command_tree_begin_rdrag'}|[{'atom',321,'command_tree_begin_label_edit'}|[{'atom',321,'command_tree_end_label_edit'}|[{'atom',321,'command_tree_delete_item'}|[{'atom',321,'command_tree_get_info'}|[{'atom',321,'command_tree_set_info'}|[{'atom',321,'command_tree_item_expanded'}|[{'atom',321,'command_tree_item_expanding'}|[{'atom',321,'command_tree_item_collapsed'}|[{'atom',321,'command_tree_item_collapsing'}|[{'atom',321,'command_tree_sel_changed'}|[{'atom',321,'command_tree_sel_changing'}|[{'atom',321,'command_tree_key_down'}|[{'atom',321,'command_tree_item_activated'}|[{'atom',321,'command_tree_item_right_click'}|[{'atom',321,'command_tree_item_middle_click'}|[{'atom',321,'command_tree_end_drag'}|[{'atom',321,'command_tree_state_image_click'}|[{'atom',321,'command_tree_item_gettooltip'}|[{'atom',321,'command_tree_item_menu'}]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 322
		'type' =
		    %% Line 322
		    [{'wxTree',{'type',322,'record',[{'atom',322,'wxTree'}]},[]}],
		%% Line 324
		'type' =
		    %% Line 324
		    [{'event',{'type',324,'union',[{'type',324,'wxActivate',[]}|[{'type',324,'wxAuiManager',[]}|[{'type',324,'wxAuiNotebook',[]}|[{'type',324,'wxCalendar',[]}|[{'type',324,'wxChildFocus',[]}|[{'type',324,'wxClipboardText',[]}|[{'type',324,'wxClose',[]}|[{'type',324,'wxColourPicker',[]}|[{'type',324,'wxCommand',[]}|[{'type',324,'wxContextMenu',[]}|[{'type',324,'wxDate',[]}|[{'type',324,'wxDisplayChanged',[]}|[{'type',324,'wxErase',[]}|[{'type',324,'wxFileDirPicker',[]}|[{'type',324,'wxFocus',[]}|[{'type',324,'wxFontPicker',[]}|[{'type',324,'wxGrid',[]}|[{'type',324,'wxHelp',[]}|[{'type',324,'wxHtmlLink',[]}|[{'type',324,'wxIconize',[]}|[{'type',324,'wxIdle',[]}|[{'type',324,'wxInitDialog',[]}|[{'type',324,'wxJoystick',[]}|[{'type',324,'wxKey',[]}|[{'type',324,'wxList',[]}|[{'type',324,'wxMaximize',[]}|[{'type',324,'wxMenu',[]}|[{'type',324,'wxMouse',[]}|[{'type',324,'wxMouseCaptureChanged',[]}|[{'type',324,'wxMove',[]}|[{'type',324,'wxNavigationKey',[]}|[{'type',324,'wxNotebook',[]}|[{'type',324,'wxPaint',[]}|[{'type',324,'wxPaletteChanged',[]}|[{'type',324,'wxQueryNewPalette',[]}|[{'type',324,'wxSash',[]}|[{'type',324,'wxScroll',[]}|[{'type',324,'wxScrollWin',[]}|[{'type',324,'wxSetCursor',[]}|[{'type',324,'wxShow',[]}|[{'type',324,'wxSize',[]}|[{'type',324,'wxSpin',[]}|[{'type',324,'wxSplitter',[]}|[{'type',324,'wxStyledText',[]}|[{'type',324,'wxSysColourChanged',[]}|[{'type',324,'wxTaskBarIcon',[]}|[{'type',324,'wxTree',[]}|[{'type',324,'wxUpdateUI',[]}|[{'type',324,'wxWindowCreate',[]}|[{'type',324,'wxWindowDestroy',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 325
		'type' =
		    %% Line 325
		    [{'wxEventType',{'type',325,'union',[{'type',325,'wxActivateEventType',[]}|[{'type',325,'wxAuiManagerEventType',[]}|[{'type',325,'wxAuiNotebookEventType',[]}|[{'type',325,'wxCalendarEventType',[]}|[{'type',325,'wxChildFocusEventType',[]}|[{'type',325,'wxClipboardTextEventType',[]}|[{'type',325,'wxCloseEventType',[]}|[{'type',325,'wxColourPickerEventType',[]}|[{'type',325,'wxCommandEventType',[]}|[{'type',325,'wxContextMenuEventType',[]}|[{'type',325,'wxDateEventType',[]}|[{'type',325,'wxDisplayChangedEventType',[]}|[{'type',325,'wxEraseEventType',[]}|[{'type',325,'wxFileDirPickerEventType',[]}|[{'type',325,'wxFocusEventType',[]}|[{'type',325,'wxFontPickerEventType',[]}|[{'type',325,'wxGridEventType',[]}|[{'type',325,'wxHelpEventType',[]}|[{'type',325,'wxHtmlLinkEventType',[]}|[{'type',325,'wxIconizeEventType',[]}|[{'type',325,'wxIdleEventType',[]}|[{'type',325,'wxInitDialogEventType',[]}|[{'type',325,'wxJoystickEventType',[]}|[{'type',325,'wxKeyEventType',[]}|[{'type',325,'wxListEventType',[]}|[{'type',325,'wxMaximizeEventType',[]}|[{'type',325,'wxMenuEventType',[]}|[{'type',325,'wxMouseCaptureChangedEventType',[]}|[{'type',325,'wxMouseEventType',[]}|[{'type',325,'wxMoveEventType',[]}|[{'type',325,'wxNavigationKeyEventType',[]}|[{'type',325,'wxNotebookEventType',[]}|[{'type',325,'wxPaintEventType',[]}|[{'type',325,'wxPaletteChangedEventType',[]}|[{'type',325,'wxQueryNewPaletteEventType',[]}|[{'type',325,'wxSashEventType',[]}|[{'type',325,'wxScrollEventType',[]}|[{'type',325,'wxScrollWinEventType',[]}|[{'type',325,'wxSetCursorEventType',[]}|[{'type',325,'wxShowEventType',[]}|[{'type',325,'wxSizeEventType',[]}|[{'type',325,'wxSpinEventType',[]}|[{'type',325,'wxSplitterEventType',[]}|[{'type',325,'wxStyledTextEventType',[]}|[{'type',325,'wxSysColourChangedEventType',[]}|[{'type',325,'wxTaskBarIconEventType',[]}|[{'type',325,'wxTreeEventType',[]}|[{'type',325,'wxUpdateUIEventType',[]}|[{'type',325,'wxWindowCreateEventType',[]}|[{'type',325,'wxWindowDestroyEventType',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 328
		'type' =
		    %% Line 328
		    [{{'record','wxMouseState'},[{'typed_record_field',{'record_field',328,{'atom',328,'x'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',328,{'atom',328,'y'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'leftDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'type',329,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'middleDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'rightDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'controlDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'shiftDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'altDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'metaDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'cmdDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 333
		'type' =
		    %% Line 333
		    [{{'record','wxHtmlLinkInfo'},[{'typed_record_field',{'record_field',334,{'atom',334,'href'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',334,{'atom',334,'target'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 27
		'behaviour' =
		    %% Line 27
		    ['wx_object'],
		%% Line 33
		'type' =
		    %% Line 33
		    [{{'record','state'},[{'record_field',33,{'atom',33,'win'}}|[{'record_field',33,{'atom',33,'demo'}}|[{'record_field',33,{'atom',33,'example'}}|[{'record_field',33,{'atom',33,'selector'}}|[{'record_field',33,{'atom',33,'log'}}|[{'record_field',33,{'atom',33,'code'}}]]]]]],[]}]]
'start'/0 =
    %% Line 50
    fun () ->
	%% Line 51
	apply 'start'/1
	    ([])
'start'/1 =
    %% Line 53
    fun (_cor0) ->
	%% Line 54
	call 'wx_object':'start'
	    ('demo', _cor0, [])
'start_link'/0 =
    %% Line 56
    fun () ->
	%% Line 57
	apply 'start_link'/1
	    ([])
'start_link'/1 =
    %% Line 59
    fun (_cor0) ->
	%% Line 60
	call 'wx_object':'start_link'
	    ('demo', _cor0, [])
'format'/3 =
    %% Line 62
    fun (_cor2,_cor1,_cor0) ->
	let <Log> =
	    %% Line 63
	    call 'proplists':'get_value'
		('log', _cor2)
	in  let <_cor4> =
		%% Line 64
		call 'io_lib':'format'
		    (_cor1, _cor0)
	    in  do  %% Line 64
		    call 'wxTextCtrl':'appendText'
			(Log, _cor4)
		    %% Line 65
		    'ok'
'init'/1 =
    %% Line 72
    fun (_cor0) ->
	do  %% Line 73
	    call 'wx':'new'
		(_cor0)
	    do  %% Line 74
		call 'erlang':'process_flag'
		    ('trap_exit', 'true')
		let <_cor2> =
		    %% Line 76
		    call 'wx':'null'
			()
		in  let <Frame> =
			%% Line 76
			call 'wxFrame':'new'
			    (_cor2, -1, [119|[120|[69|[114|[108|[97|[110|[103|[32|[119|[105|[100|[103|[101|[116|[115]]]]]]]]]]]]]]]], [{'size',{1000,500}}])
		    in  let <MB> =
			    %% Line 77
			    call 'wxMenuBar':'new'
				()
			in  let <File> =
				%% Line 78
				call 'wxMenu':'new'
				    ([])
			    in  do  %% Line 79
				    call 'wxMenu':'append'
					(File, 5010, [38|[80|[114|[105|[110|[116|[32|[99|[111|[100|[101]]]]]]]]]]])
				    do  %% Line 80
					call 'wxMenu':'appendSeparator'
					    (File)
					do  %% Line 81
					    call 'wxMenu':'append'
						(File, 5006, [38|[81|[117|[105|[116]]]]])
					    let <Debug> =
						%% Line 82
						call 'wxMenu':'new'
						    ([])
					    in  do  %% Line 83
						    call 'wxMenu':'appendRadioItem'
							(Debug, 101, [78|[111|[110|[101]]]])
						    do  %% Line 84
							call 'wxMenu':'appendRadioItem'
							    (Debug, 102, [86|[101|[114|[98|[111|[115|[101]]]]]]])
							do  %% Line 85
							    call 'wxMenu':'appendRadioItem'
								(Debug, 103, [84|[114|[97|[99|[101]]]]])
							    do  %% Line 86
								call 'wxMenu':'appendRadioItem'
								    (Debug, 104, [68|[114|[105|[118|[101|[114]]]]]])
								let <Help> =
								    %% Line 87
								    call 'wxMenu':'new'
									([])
								in  do  %% Line 88
									call 'wxMenu':'append'
									    (Help, 5009, [72|[101|[108|[112]]]])
									do  %% Line 89
									    call 'wxMenu':'append'
										(Help, 5014, [65|[98|[111|[117|[116]]]]])
									    do  %% Line 90
										call 'wxMenuBar':'append'
										    (MB, File, [38|[70|[105|[108|[101]]]]])
										do  %% Line 91
										    call 'wxMenuBar':'append'
											(MB, Debug, [38|[68|[101|[98|[117|[103]]]]]])
										    do  %% Line 92
											call 'wxMenuBar':'append'
											    (MB, Help, [38|[72|[101|[108|[112]]]]])
											do  %% Line 93
											    call 'wxFrame':'setMenuBar'
												(Frame, MB)
											    do  %% Line 95
												call 'wxFrame':'connect'
												    (Frame, 'command_menu_selected')
												do  %% Line 96
												    call 'wxFrame':'connect'
													(Frame, 'close_window')
												    let <_X_SB> =
													%% Line 98
													call 'wxFrame':'createStatusBar'
													    (Frame, [])
												    in  let <TopSplitter> =
													    %% Line 105
													    call 'wxSplitterWindow':'new'
														(Frame, [{'style',0}])
													in  let <UpperSplitter> =
														%% Line 106
														call 'wxSplitterWindow':'new'
														    (TopSplitter, [{'style',0}])
													    in  let <LeftSplitter> =
														    %% Line 107
														    call 'wxSplitterWindow':'new'
															(UpperSplitter, [{'style',0}])
														in  do  %% Line 109
															call 'wxSplitterWindow':'setSashGravity'
															    (TopSplitter, 5.00000000000000000000e-01)
															do  %% Line 110
															    call 'wxSplitterWindow':'setSashGravity'
																(UpperSplitter, 5.99999999999999977796e-01)
															    do  %% Line 111
																call 'wxSplitterWindow':'setSashGravity'
																    (LeftSplitter, 2.00000000000000011102e-01)
																let <Example> =
																    %% Line 114
																    ( fun (_cor13) ->
																	  %% Line 115
																	  case call 'filename':'rootname'
																		   (_cor13) of
																	    <[101|[120|[95|F]]]> when 'true' ->
																		%% Line 116
																		F
																	    ( <_cor12> when 'true' ->
																		  primop 'match_fail'
																		      ({'badmatch',_cor12})
																	      -| ['compiler_generated'] )
																	  end
																      -| [{'id',{0,0,'-init/1-fun-0-'}}] )
																in  let <_cor22> =
																	%% Line 118
																	( letrec
																	      'lc$^0'/1 =
																		  fun (_cor19) ->
																		      case _cor19 of
																			<[F|_cor17]> when 'true' ->
																			    let <_cor20> =
																				apply Example
																				    (F)
																			    in  let <_cor21> =
																				    apply 'lc$^0'/1
																					(_cor17)
																				in  ( [_cor20|_cor21]
																				      -| ['compiler_generated'] )
																			<[]> when 'true' ->
																			    []
																			( <_cor19> when 'true' ->
																			      ( primop 'match_fail'
																				    ({'function_clause',_cor19})
																				-| [{'function_name',{'lc$^0',1}}] )
																			  -| ['compiler_generated'] )
																		      end
																	  in  let <_cor18> =
																		  call 'filelib':'wildcard'
																		      ([101|[120|[95|[42|[46|[98|[101|[97|[109]]]]]]]]])
																	      in  apply 'lc$^0'/1
																		      (_cor18)
																	  -| ['list_comprehension'] )
																    in  let <CreateLB> =
																	    %% Line 120
																	    ( fun (_cor25) ->
																		  %% Line 121
																		  call 'wxListBox':'new'
																		      (_cor25, -1, %% Line 122
																				   [{'style',32}|%% Line 123
																						 [{'choices',_cor22}|[]]])
																	      -| [{'id',{0,0,'-init/1-fun-1-'}}] )
																	in  %% Line 125
																	    case apply 'create_subwindow'/3
																		     (LeftSplitter, [69|[120|[97|[109|[112|[108|[101]]]]]]], [CreateLB|[]]) of
																	      <{LBPanel,[LB|[]],_cor50}> when 'true' ->
																		  do  %% Line 126
																		      call 'wxListBox':'setSelection'
																			  (LB, 0)
																		      do  %% Line 127
																			  call 'wxListBox':'connect'
																			      (LB, 'command_listbox_selected')
																			  let <CreateCode> =
																			      %% Line 129
																			      ( fun (_cor29) ->
																				    %% Line 130
																				    apply 'code_area'/1
																					(_cor29)
																				-| [{'id',{0,0,'-init/1-fun-2-'}}] )
																			  in  %% Line 132
																			      case apply 'create_subwindow'/3
																				       (LeftSplitter, [67|[111|[100|[101]]]], [CreateCode|[]]) of
																				<{CodePanel,[Code|[]],_cor51}> when 'true' ->
																				    do  %% Line 134
																					call 'wxSplitterWindow':'splitVertically'
																					    (LeftSplitter, LBPanel, CodePanel, %% Line 135
																									       [{'sashPosition',150}])
																					%% Line 138
																					case apply 'create_subwindow'/3
																						 (UpperSplitter, [68|[101|[109|[111]]]], []) of
																					  <{DemoPanel,[],DemoSz}> when 'true' ->
																					      do  %% Line 141
																						  call 'wxSplitterWindow':'splitVertically'
																						      (UpperSplitter, LeftSplitter, DemoPanel, %% Line 142
																											       [{'sashPosition',600}])
																						  let <AddEvent> =
																						      %% Line 145
																						      ( fun (_cor38) ->
																							    let <EventText> =
																								%% Line 146
																								call 'wxTextCtrl':'new'
																								    (_cor38, -1, %% Line 148
																										 [{'style',1073741872}])
																							    in  do  %% Line 151
																								    call 'wxTextCtrl':'appendText'
																									(EventText, [87|[101|[108|[99|[111|[109|[101|[10]]]]]]]])
																								    %% Line 152
																								    EventText
																							-| [{'id',{0,0,'-init/1-fun-3-'}}] )
																						  in  %% Line 155
																						      case apply 'create_subwindow'/3
																							       (TopSplitter, [69|[118|[101|[110|[116|[115]]]]]], [AddEvent|[]]) of
																							<{EvPanel,[EvCtrl|[]],_cor52}> when 'true' ->
																							    do  %% Line 157
																								call 'wxSplitterWindow':'splitHorizontally'
																								    (TopSplitter, UpperSplitter, EvPanel, %% Line 158
																													  [{'sashPosition',-100}])
																								do  %% Line 160
																								    call 'wxFrame':'show'
																									(Frame)
																								    let <State> =
																									%% Line 162
																									{'state',Frame,{DemoPanel,DemoSz},'undefined',LB,EvCtrl,Code}
																								    in  let <Ex> =
																									    %% Line 164
																									    call 'wxListBox':'getStringSelection'
																										(LB)
																									in  do  %% Line 165
																										call 'erlang':'process_flag'
																										    ('trap_exit', 'true')
																										let <ExampleObj> =
																										    %% Line 166
																										    apply 'load_example'/2
																											(Ex, State)
																										in  do  %% Line 167
																											call 'wxSizer':'add'
																											    (DemoSz, ExampleObj, [{'proportion',1}|[{'flag',8192}]])
																											do  %% Line 168
																											    call 'wxSizer':'layout'
																												(DemoSz)
																											    do  %% Line 171
																												call 'wxSplitterWindow':'setSashGravity'
																												    (TopSplitter, 1.00000000000000000000e+00)
																												do  %% Line 172
																												    call 'wxSplitterWindow':'setSashGravity'
																													(UpperSplitter, 0.00000000000000000000e+00)
																												    do  %% Line 173
																													call 'wxSplitterWindow':'setSashGravity'
																													    (LeftSplitter, 0.00000000000000000000e+00)
																													do  %% Line 174
																													    call 'wxSplitterWindow':'setMinimumPaneSize'
																														(TopSplitter, 1)
																													    do  %% Line 175
																														call 'wxSplitterWindow':'setMinimumPaneSize'
																														    (UpperSplitter, 1)
																														do  %% Line 176
																														    call 'wxSplitterWindow':'setMinimumPaneSize'
																															(LeftSplitter, 1)
																														    do  %% Line 178
																															call 'wxToolTip':'enable'
																															    ('true')
																															do  %% Line 179
																															    call 'wxToolTip':'setDelay'
																																(500)
																															    %% Line 181
																															    case State of
																															      <{'state',_cor53,_cor54,_cor55,_cor56,_cor57,_cor58}> when 'true' ->
																																  let <_cor48> =
																																      call 'erlang':'setelement'
																																	  (4, State, ExampleObj)
																																  in  {Frame,_cor48}
																															      ( <_cor59> when 'true' ->
																																    ( call ( 'erlang'
																																	     -| ['compiler_generated'] ):( 'error'
																																					   -| ['compiler_generated'] )
																																	  (( {'badrecord','state'}
																																	     -| ['compiler_generated'] ))
																																      -| ['compiler_generated'] )
																																-| ['compiler_generated'] )
																															    end
																							( <_cor41> when 'true' ->
																							      primop 'match_fail'
																								  ({'badmatch',_cor41})
																							  -| ['compiler_generated'] )
																						      end
																					  ( <_cor33> when 'true' ->
																						primop 'match_fail'
																						    ({'badmatch',_cor33})
																					    -| ['compiler_generated'] )
																					end
																				( <_cor32> when 'true' ->
																				      primop 'match_fail'
																					  ({'badmatch',_cor32})
																				  -| ['compiler_generated'] )
																			      end
																	      ( <_cor28> when 'true' ->
																		    primop 'match_fail'
																			({'badmatch',_cor28})
																		-| ['compiler_generated'] )
																	    end
'create_subwindow'/3 =
    %% Line 183
    fun (_cor2,_cor1,_cor0) ->
	let <Panel> =
	    %% Line 184
	    call 'wxPanel':'new'
		(_cor2)
	in  let <Sz> =
		%% Line 185
		call 'wxStaticBoxSizer':'new'
		    (8, Panel, [{'label',_cor1}|[]])
	    in  do  %% Line 186
		    call 'wxPanel':'setSizer'
			(Panel, Sz)
		    let <_cor10> =
			%% Line 187
			( letrec
			      'lc$^0'/1 =
				  fun (_cor7) ->
				      case _cor7 of
					<[Fun|_cor6]> when 'true' ->
					    let <_cor8> =
						apply Fun
						    (Panel)
					    in  let <_cor9> =
						    apply 'lc$^0'/1
							(_cor6)
						in  ( [_cor8|_cor9]
						      -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor7> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor7})
						-| [{'function_name',{'lc$^0',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lc$^0'/1
				  (_cor0)
			  -| ['list_comprehension'] )
		    in  do  %% Line 188
			    ( letrec
				  'lc$^1'/1 =
				      fun (_cor14) ->
					  case _cor14 of
					    <[%% Line 189
					      Ctrl|_cor13]> when 'true' ->
						do  call 'wxSizer':'add'
							(Sz, Ctrl, [{'proportion',1}|[{'flag',8192}]])
						    %% Line 189
						    apply 'lc$^1'/1
							(_cor13)
					    <[]> when 'true' ->
						[]
					    ( <_cor14> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor14})
						    -| [{'function_name',{'lc$^1',1}}] )
					      -| ['compiler_generated'] )
					  end
			      in  apply 'lc$^1'/1
				      (_cor10)
			      -| ['list_comprehension'] )
			    %% Line 190
			    {Panel,_cor10,Sz}
'handle_info'/2 =
    %% Line 196
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'EXIT',_cor4,'wx_deleted'},State> when 'true' ->
	      %% Line 197
	      {'noreply',State}
	  %% Line 198
	  <{'EXIT',_cor5,'shutdown'},State> when 'true' ->
	      %% Line 199
	      {'noreply',State}
	  %% Line 200
	  <{'EXIT',_cor6,'normal'},State> when 'true' ->
	      %% Line 201
	      {'noreply',State}
	  %% Line 202
	  <Msg,State> when 'true' ->
	      do  %% Line 203
		  call 'io':'format'
		      ([71|[111|[116|[32|[73|[110|[102|[111|[32|[126|[112|[126|[110]]]]]]]]]]]]], [Msg|[]])
		  %% Line 204
		  {'noreply',State}
	end
'handle_call'/3 =
    %% Line 206
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 207
	    call 'io':'format'
		([71|[111|[116|[32|[67|[97|[108|[108|[32|[126|[112|[126|[110]]]]]]]]]]]]], [_cor2|[]])
	    %% Line 208
	    {'reply','ok',_cor0}
'handle_cast'/2 =
    %% Line 210
    fun (_cor1,_cor0) ->
	do  %% Line 211
	    call 'io':'format'
		([71|[111|[116|[32|[99|[97|[115|[116|[32|[126|[112|[126|[110]]]]]]]]]]]]], [_cor1|[]])
	    %% Line 212
	    {'noreply',_cor0}
'handle_event'/2 =
    %% Line 215
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx',_cor29,_cor30,_cor31,{'wxCommand','command_listbox_selected',Ex,_cor32,_cor33}},State = %% Line 216
													 {'state',_cor34,{_cor35,DemoSz},Example,_cor36,_cor37,Code}> when 'true' ->
	      %% Line 217
	      case Ex of
		%% Line 218
		<[]> when 'true' ->
		    %% Line 219
		    {'noreply',State}
		%% Line 220
		<_cor38> when 'true' ->
		    do  %% Line 221
			call 'wxSizer':'detach'
			    (DemoSz, Example)
			do  %% Line 222
			    call 'wx_object':'call'
				(Example, 'shutdown')
			    do  %% Line 223
				apply 'unload_code'/1
				    (Code)
				let <NewExample> =
				    %% Line 224
				    apply 'load_example'/2
					(Ex, State)
				in  do  %% Line 225
					call 'wxSizer':'add'
					    (DemoSz, NewExample, [{'proportion',1}|[{'flag',8192}]])
					do  %% Line 226
					    call 'wxSizer':'layout'
						(DemoSz)
					    let <_cor5> =
						%% Line 227
						call 'erlang':'setelement'
						    (4, State, NewExample)
					    in  %% Line 227
						{'noreply',_cor5}
	      end
	  %% Line 229
	  <{'wx',Id,_cor46,_cor47,%% Line 230
				  {'wxCommand','command_menu_selected',_cor48,_cor49,_cor50}},State = %% Line 231
												      {'state',_cor51,_cor52,_cor53,_cor54,_cor55,_cor56}> when 'true' ->
	      %% Line 232
	      case Id of
		%% Line 233
		<5010> when 'true' ->
		    let <_cor9> =
			%% Line 237
			call 'wxListBox':'getStringSelection'
			    (_cor54)
		    in  let <_cor10> =
			    %% Line 237
			    call 'erlang':'++'
				(_cor9, [46|[101|[114|[108]]]])
			in  let <Module> =
				%% Line 237
				[101|[120|[95|_cor10]]]
			    in  let <HEP> =
				    %% Line 238
				    call 'wxHtmlEasyPrinting':'new'
					([{'name',[80|[114|[105|[110|[116]]]]]}|%% Line 239
										[{'parentWindow',_cor51}|[]]])
				in  let <Html> =
					%% Line 240
					call 'demo_html_tagger':'erl2htmltext'
					    (Module)
				    in  do  %% Line 241
					    call 'wxHtmlEasyPrinting':'previewText'
						(HEP, Html)
					    %% Line 242
					    {'noreply',State}
		%% Line 243
		<103> when 'true' ->
		    do  %% Line 244
			call 'wx':'debug'
			    ('trace')
			%% Line 245
			{'noreply',State}
		%% Line 246
		<104> when 'true' ->
		    do  %% Line 247
			call 'wx':'debug'
			    ('driver')
			%% Line 248
			{'noreply',State}
		%% Line 249
		<102> when 'true' ->
		    do  %% Line 250
			call 'wx':'debug'
			    ('verbose')
			%% Line 251
			{'noreply',State}
		%% Line 252
		<101> when 'true' ->
		    do  %% Line 253
			call 'wx':'debug'
			    ('none')
			%% Line 254
			{'noreply',State}
		%% Line 255
		<5009> when 'true' ->
		    do  %% Line 256
			call 'wx_misc':'launchDefaultBrowser'
			    ([104|[116|[116|[112|[58|[47|[47|[119|[119|[119|[46|[101|[114|[108|[97|[110|[103|[46|[111|[114|[103|[47|[100|[111|[99|[47|[97|[112|[112|[115|[47|[119|[120|[47|[112|[97|[114|[116|[95|[102|[114|[97|[109|[101|[46|[104|[116|[109|[108]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
			%% Line 257
			{'noreply',State}
		%% Line 258
		<5014> when 'true' ->
		    let <_cor21> =
			%% Line 262
			call 'wxMessageDialog':'new'
			    (_cor51, [68|[101|[109|[111|[32|[111|[102|[32|[118|[97|[114|[105|[111|[117|[115|[32|[119|[105|[100|[103|[101|[116|[115|[10|[65|[117|[116|[104|[111|[114|[115|[58|[32|[79|[108|[108|[101|[32|[38|[32|[68|[97|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 263
																																			 [{'style',34820}|[{'caption',[65|[98|[111|[117|[116]]]]]}]])
		    in  do  %% Line 262
			    call 'wxMessageDialog':'showModal'
				(_cor21)
			    %% Line 268
			    {'noreply',State}
		%% Line 269
		<5006> when 'true' ->
		    do  %% Line 270
			call 'wx_object':'call'
			    (_cor53, 'shutdown')
			%% Line 271
			{'stop','normal',State}
		%% Line 272
		<_cor81> when 'true' ->
		    %% Line 273
		    {'noreply',State}
	      end
	  %% Line 275
	  <{'wx',_cor82,_cor83,_cor84,{'wxClose',_cor85}},State = {'state',Frame,_cor86,_cor87,_cor88,_cor89,_cor90}> when 'true' ->
	      let <_cor25> =
		  %% Line 276
		  call 'erlang':'self'
		      ()
	      in  do  %% Line 276
		      call 'io':'format'
			  ([126|[112|[32|[67|[108|[111|[115|[105|[110|[103|[32|[119|[105|[110|[100|[111|[119|[32|[126|[110]]]]]]]]]]]]]]]]]]]], [_cor25|[]])
		      %% Line 277
		      case call 'wxFrame':'setStatusText'
			       (Frame, [67|[108|[111|[115|[105|[110|[103|[46|[46|[46]]]]]]]]]], []) of
			<'ok'> when 'true' ->
			    %% Line 278
			    {'stop','normal',State}
			( <_cor26> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor26})
			  -| ['compiler_generated'] )
		      end
	  %% Line 279
	  <Ev,State> when 'true' ->
	      do  %% Line 280
		  call 'io':'format'
		      ([126|[112|[32|[71|[111|[116|[32|[101|[118|[101|[110|[116|[32|[126|[112|[32|[126|[110]]]]]]]]]]]]]]]]]], ['demo'|[Ev|[]]])
		  %% Line 281
		  {'noreply',State}
	end
'code_change'/3 =
    %% Line 283
    fun (_cor2,_cor1,_cor0) ->
	%% Line 284
	{'stop','not_yet_implemented',_cor0}
'terminate'/2 =
    %% Line 286
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Reason,State = {'state',Frame,_cor6,_cor7,_cor8,_cor9,_cor10}> when 'true' ->
	      do  catch
		      %% Line 287
		      call 'wx_object':'call'
			  (_cor7, 'shutdown')
		  do  %% Line 288
		      call 'wxFrame':'destroy'
			  (Frame)
		      %% Line 289
		      call 'wx':'destroy'
			  ()
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'terminate',2}}] )
	    -| ['compiler_generated'] )
	end
'load_example'/2 =
    %% Line 293
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Ex,{'state',_cor8,{DemoPanel,DemoSz},_cor9,_cor10,EvCtrl,Code}> when 'true' ->
	      let <ModStr> =
		  %% Line 294
		  [101|[120|[95|Ex]]]
	      in  let <Mod> =
		      %% Line 295
		      call 'erlang':'list_to_atom'
			  (ModStr)
		  in  let <ModFile> =
			  %% Line 296
			  call 'erlang':'++'
			      (ModStr, [46|[101|[114|[108]]]])
		      in  let <_cor5> =
			      %% Line 297
			      call 'file':'read_file'
				  (ModFile)
			  in  do  %% Line 297
				  apply 'load_code'/2
				      (Code, _cor5)
				  do  %% Line 298
				      apply 'find'/1
					  (Code)
				      %% Line 299
				      call Mod:'start'
					  ([{'parent',DemoPanel}|[{'demo_sz',DemoSz}|[{'log',EvCtrl}|[]]]])
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'load_example',2}}] )
	    -| ['compiler_generated'] )
	end
'code_area'/1 =
    %% Line 303
    fun (_cor0) ->
	let <FixedFont> =
	    %% Line 304
	    call 'wxFont':'new'
		(10, 76, 90, 90, [])
	in  let <Ed> =
		%% Line 305
		call 'wxStyledTextCtrl':'new'
		    (_cor0)
	    in  do  %% Line 307
		    call 'wxStyledTextCtrl':'styleClearAll'
			(Ed)
		    do  %% Line 308
			call 'wxStyledTextCtrl':'styleSetFont'
			    (Ed, 32, FixedFont)
			do  %% Line 309
			    call 'wxStyledTextCtrl':'setLexer'
				(Ed, 53)
			    do  %% Line 310
				call 'wxStyledTextCtrl':'setMarginType'
				    (Ed, 0, 1)
				let <LW> =
				    %% Line 311
				    call 'wxStyledTextCtrl':'textWidth'
					(Ed, 33, [57])
				in  do  %% Line 312
					call 'wxStyledTextCtrl':'setMarginWidth'
					    (Ed, 0, LW)
					do  %% Line 313
					    call 'wxStyledTextCtrl':'setMarginWidth'
						(Ed, 1, 0)
					    do  %% Line 315
						call 'wxStyledTextCtrl':'setSelectionMode'
						    (Ed, 2)
						let <SetStyle> =
						    %% Line 345
						    ( fun (_cor5) ->
							  case _cor5 of
							    <{Style,Color}> when 'true' ->
								do  %% Line 346
								    call 'wxStyledTextCtrl':'styleSetFont'
									(Ed, Style, FixedFont)
								    %% Line 347
								    call 'wxStyledTextCtrl':'styleSetForeground'
									(Ed, Style, Color)
							    ( <_cor6> when 'true' ->
								  ( primop 'match_fail'
									({'function_clause',_cor6})
								    -| [{'function_name',{'-code_area/1-fun-0-',1}}] )
							      -| ['compiler_generated'] )
							  end
						      -| [{'id',{0,0,'-code_area/1-fun-0-'}}] )
						in  do  %% Line 349
							( letrec
							      'lc$^0'/1 =
								  fun (_cor10) ->
								      case _cor10 of
									<[Style|_cor9]> when 'true' ->
									    do  apply SetStyle
										    (Style)
										apply 'lc$^0'/1
										    (_cor9)
									<[]> when 'true' ->
									    []
									( <_cor10> when 'true' ->
									      ( primop 'match_fail'
										    ({'function_clause',_cor10})
										-| [{'function_name',{'lc$^0',1}}] )
									  -| ['compiler_generated'] )
								      end
							  in  apply 'lc$^0'/1
								  ([{0,{0,0,0}}|[{1,{160,53,35}}|[{2,{150,100,40}}|[{3,{5,5,100}}|[{4,{130,40,172}}|[{5,{170,45,132}}|[{6,{30,0,0}}|[{7,{0,0,0}}|[{8,{64,102,244}}|[{9,{236,155,172}}|[{10,{40,144,170}}|[{11,{40,100,20}}|[{12,{0,0,0}}|[{13,{0,0,0}}|[{14,{160,53,35}}|[{15,{160,53,35}}|[{16,{160,53,35}}|[{17,{160,53,35}}|[{18,{0,0,0}}|[{19,{40,144,170}}|[{20,{40,100,20}}|[{21,{0,0,0}}|[{22,{130,40,172}}|[{23,{64,102,244}}|[{24,{64,102,244}}]]]]]]]]]]]]]]]]]]]]]]]]])
							  -| ['list_comprehension'] )
							let <_cor13> =
							    %% Line 350
							    apply 'keyWords'/0
								()
							in  do  %% Line 350
								call 'wxStyledTextCtrl':'setKeyWords'
								    (Ed, 0, _cor13)
								do  %% Line 354
								    call 'wxStyledTextCtrl':'setYCaretPolicy'
									(Ed, 25, 3)
								    do  %% Line 355
									call 'wxStyledTextCtrl':'setVisiblePolicy'
									    (Ed, 25, 3)
									do  %% Line 358
									    call 'wxStyledTextCtrl':'setReadOnly'
										(Ed, 'true')
									    %% Line 359
									    Ed
'load_code'/2 =
    %% Line 361
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Ed,{'ok',Code}> when 'true' ->
	      do  %% Line 362
		  call 'wxStyledTextCtrl':'setReadOnly'
		      (Ed, 'false')
		  let <_cor2> =
		      %% Line 363
		      #{#<Code>('all',8,'binary',['unsigned'|['big']]),
			#<0>(8,1,'integer',['unsigned'|['big']])}#
		  in  do  %% Line 363
			  call 'wxStyledTextCtrl':'setTextRaw'
			      (Ed, _cor2)
			  let <Lines> =
			      %% Line 364
			      call 'wxStyledTextCtrl':'getLineCount'
				  (Ed)
			  in  let <_cor4> =
				  %% Line 365
				  call 'math':'log10'
				      (Lines)
			      in  let <_cor5> =
				      %% Line 365
				      call 'erlang':'trunc'
					  (_cor4)
				  in  let <Sz> =
					  %% Line 365
					  call 'erlang':'+'
					      (_cor5, 1)
				      in  let <_cor7> =
					      %% Line 366
					      call 'lists':'duplicate'
						  (Sz, 57)
					  in  let <LW> =
						  %% Line 366
						  call 'wxStyledTextCtrl':'textWidth'
						      (Ed, 33, _cor7)
					      in  let <_cor9> =
						      %% Line 368
						      call 'erlang':'+'
							  (LW, 5)
						  in  do  %% Line 368
							  call 'wxStyledTextCtrl':'setMarginWidth'
							      (Ed, 0, _cor9)
							  do  %% Line 369
							      call 'wxStyledTextCtrl':'setReadOnly'
								  (Ed, 'true')
							      %% Line 370
							      Ed
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'load_code',2}}] )
	    -| ['compiler_generated'] )
	end
'unload_code'/1 =
    %% Line 372
    fun (_cor0) ->
	do  %% Line 373
	    call 'wxStyledTextCtrl':'setReadOnly'
		(_cor0, 'false')
	    do  %% Line 374
		call 'wxStyledTextCtrl':'setTextRaw'
		    (_cor0, #{#<0>(8,1,'integer',['unsigned'|['big']])}#)
		do  %% Line 375
		    call 'wxStyledTextCtrl':'setReadOnly'
			(_cor0, 'true')
		    _cor0
'find'/1 =
    %% Line 378
    fun (_cor0) ->
	do  %% Line 379
	    call 'wxStyledTextCtrl':'searchAnchor'
		(_cor0)
	    let <Res> =
		%% Line 380
		call 'wxStyledTextCtrl':'searchNext'
		    (_cor0, 2097152, [94|[105|[110|[105|[116]]]]])
	    in  %% Line 381
		case <> of
		  %% Line 382
		  <>
		      when call 'erlang':'>='
			    (Res,
			     0) ->
		      let <_cor2> =
			  %% Line 384
			  call 'wxStyledTextCtrl':'lineFromPosition'
			      (_cor0, Res)
		      in  let <_cor3> =
			      %% Line 384
			      call 'erlang':'-'
				  (_cor2, 1)
			  in  do  %% Line 384
				  call 'wxStyledTextCtrl':'scrollToLine'
				      (_cor0, _cor3)
				  %% Line 385
				  'true'
		  %% Line 386
		  <> when 'true' ->
		      do  %% Line 387
			  call 'io':'format'
			      ([78|[111|[116|[32|[70|[111|[117|[110|[100|[32|[126|[115|[32|[126|[110]]]]]]]]]]]]]]], [[94|[105|[110|[105|[116]]]]]])
			  %% Line 388
			  'false'
		end
'keyWords'/0 =
    %% Line 391
    fun () ->
	let <_cor6> =
	    %% Line 395
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor3) ->
			  case _cor3 of
			    <[K|_cor2]> when 'true' ->
				let <_cor4> =
				    call 'erlang':'++'
					(K, [32])
				in  let <_cor5> =
					apply 'lc$^0'/1
					    (_cor2)
				    in  ( [_cor4|_cor5]
					  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[0]
			    ( <_cor3> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor3})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      ([[97|[102|[116|[101|[114]]]]]|[[98|[101|[103|[105|[110]]]]]|[[99|[97|[115|[101]]]]|[[116|[114|[121]]]|[[99|[111|[110|[100]]]]|[[99|[97|[116|[99|[104]]]]]|[[97|[110|[100|[97|[108|[115|[111]]]]]]]|[[111|[114|[101|[108|[115|[101]]]]]]|[[101|[110|[100]]]|[[102|[117|[110]]]|[[105|[102]]|[[108|[101|[116]]]|[[111|[102]]|[[113|[117|[101|[114|[121]]]]]|[[114|[101|[99|[101|[105|[118|[101]]]]]]]|[[119|[104|[101|[110]]]]|[[98|[110|[111|[116]]]]|[[110|[111|[116]]]|[[100|[105|[118]]]|[[114|[101|[109]]]|[[98|[97|[110|[100]]]]|[[97|[110|[100]]]|[[98|[111|[114]]]|[[98|[120|[111|[114]]]]|[[98|[115|[108]]]|[[98|[115|[114]]]|[[111|[114]]|[[120|[111|[114]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	      -| ['list_comprehension'] )
	in  %% Line 395
	    call 'lists':'flatten'
		(_cor6)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('demo')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('demo', _cor0)
end