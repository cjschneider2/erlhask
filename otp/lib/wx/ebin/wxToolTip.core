module 'wxToolTip' ['destroy'/1,
		    'enable'/1,
		    'getTip'/1,
		    'getWindow'/1,
		    'module_info'/0,
		    'module_info'/1,
		    'new'/1,
		    'parent_class'/1,
		    'setDelay'/1,
		    'setTip'/2]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 32
		'export_type' =
		    %% Line 32
		    [{'wxToolTip',0}],
		%% Line 36
		'type' =
		    %% Line 36
		    [{'wxToolTip',{'remote_type',36,[{'atom',36,'wx'}|[{'atom',36,'wx_object'}|[[]]]]},[]}],
		%% Line 38
		'spec' =
		    %% Line 38
		    [{{'enable',1},[{'type',38,'bounded_fun',[{'type',38,'fun',[{'type',38,'product',[{'var',38,'Flag'}]}|[{'atom',38,'ok'}]]}|[[{'type',39,'constraint',[{'atom',39,'is_subtype'}|[[{'var',39,'Flag'}|[{'type',39,'boolean',[]}]]]]}]]]}]}],
		%% Line 46
		'spec' =
		    %% Line 46
		    [{{'setDelay',1},[{'type',46,'bounded_fun',[{'type',46,'fun',[{'type',46,'product',[{'var',46,'Msecs'}]}|[{'atom',46,'ok'}]]}|[[{'type',47,'constraint',[{'atom',47,'is_subtype'}|[[{'var',47,'Msecs'}|[{'type',47,'integer',[]}]]]]}]]]}]}],
		%% Line 54
		'spec' =
		    %% Line 54
		    [{{'new',1},[{'type',54,'bounded_fun',[{'type',54,'fun',[{'type',54,'product',[{'var',54,'Tip'}]}|[{'type',54,'wxToolTip',[]}]]}|[[{'type',55,'constraint',[{'atom',55,'is_subtype'}|[[{'var',55,'Tip'}|[{'remote_type',55,[{'atom',55,'unicode'}|[{'atom',55,'chardata'}|[[]]]]}]]]]}]]]}]}],
		%% Line 63
		'spec' =
		    %% Line 63
		    [{{'setTip',2},[{'type',63,'bounded_fun',[{'type',63,'fun',[{'type',63,'product',[{'var',63,'This'}|[{'var',63,'Tip'}]]}|[{'atom',63,'ok'}]]}|[[{'type',64,'constraint',[{'atom',64,'is_subtype'}|[[{'var',64,'This'}|[{'type',64,'wxToolTip',[]}]]]]}|[{'type',64,'constraint',[{'atom',64,'is_subtype'}|[[{'var',64,'Tip'}|[{'remote_type',64,[{'atom',64,'unicode'}|[{'atom',64,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 73
		'spec' =
		    %% Line 73
		    [{{'getTip',1},[{'type',73,'bounded_fun',[{'type',73,'fun',[{'type',73,'product',[{'var',73,'This'}]}|[{'remote_type',73,[{'atom',73,'unicode'}|[{'atom',73,'charlist'}|[[]]]]}]]}|[[{'type',74,'constraint',[{'atom',74,'is_subtype'}|[[{'var',74,'This'}|[{'type',74,'wxToolTip',[]}]]]]}]]]}]}],
		%% Line 81
		'spec' =
		    %% Line 81
		    [{{'getWindow',1},[{'type',81,'bounded_fun',[{'type',81,'fun',[{'type',81,'product',[{'var',81,'This'}]}|[{'remote_type',81,[{'atom',81,'wxWindow'}|[{'atom',81,'wxWindow'}|[[]]]]}]]}|[[{'type',82,'constraint',[{'atom',82,'is_subtype'}|[[{'var',82,'This'}|[{'type',82,'wxToolTip',[]}]]]]}]]]}]}],
		%% Line 89
		'spec' =
		    %% Line 89
		    [{{'destroy',1},[{'type',89,'fun',[{'type',89,'product',[{'ann_type',89,[{'var',89,'This'}|[{'type',89,'wxToolTip',[]}]]}]}|[{'atom',89,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 34
    fun (_cor0) ->
	call 'erlang':'error'
	    ({'badtype','wxToolTip'})
'enable'/1 =
    %% Line 40
    fun (_cor0) ->
	case _cor0 of
	  <Flag>
	      when %% Line 41
		call 'erlang':'is_boolean'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 43
		  call 'wxe_util':'from_bool'
		      (Flag)
	      in  let <_cor2> =
		      %% Line 43
		      #{#<_cor1>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 42
		      call 'wxe_util':'cast'
			  (1459, _cor2)
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'enable',1}}] )
	    -| ['compiler_generated'] )
	end
'setDelay'/1 =
    %% Line 48
    fun (_cor0) ->
	case _cor0 of
	  <Msecs>
	      when %% Line 49
		call 'erlang':'is_integer'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 51
		  #{#<Msecs>(32,1,'integer',['unsigned'|['native']])}#
	      in  %% Line 50
		  call 'wxe_util':'cast'
		      (1460, _cor1)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'setDelay',1}}] )
	    -| ['compiler_generated'] )
	end
'new'/1 =
    %% Line 56
    fun (_cor0) ->
	case _cor0 of
	  <Tip>
	      when %% Line 57
		call 'erlang':'is_list'
		    (_cor0) ->
	      let <Tip_UC> =
		  %% Line 58
		  call 'unicode':'characters_to_binary'
		      ([Tip|[0]])
	      in  let <_cor7> =
		      %% Line 60
		      call 'erlang':'byte_size'
			  (Tip_UC)
		  in  let <_cor2> =
			  %% Line 60
			  call 'erlang':'byte_size'
			      (Tip_UC)
		      in  let <_cor3> =
			      %% Line 60
			      call 'erlang':'+'
				  (4, _cor2)
			  in  let <_cor4> =
				  %% Line 60
				  call 'erlang':'band'
				      (_cor3, 7)
			      in  let <_cor5> =
				      %% Line 60
				      call 'erlang':'-'
					  (8, _cor4)
				  in  let <_cor6> =
					  %% Line 60
					  call 'erlang':'band'
					      (_cor5, 7)
				      in  let <_cor8> =
					      %% Line 60
					      #{#<_cor7>(32,1,'integer',['unsigned'|['native']]),
						#<Tip_UC>('all',8,'binary',['unsigned'|['big']]),
						#<0>(_cor6,8,'integer',['unsigned'|['big']])}#
					  in  %% Line 59
					      call 'wxe_util':'construct'
						  (1461, _cor8)
	  ( <_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'setTip'/2 =
    %% Line 65
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Tip>
	      when %% Line 66
		call 'erlang':'is_list'
		    (Tip) ->
	      do  %% Line 67
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxToolTip') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxToolTip')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Tip_UC> =
		      %% Line 68
		      call 'unicode':'characters_to_binary'
			  ([Tip|[0]])
		  in  let <_cor10> =
			  %% Line 70
			  call 'erlang':'byte_size'
			      (Tip_UC)
		      in  let <_cor5> =
			      %% Line 70
			      call 'erlang':'byte_size'
				  (Tip_UC)
			  in  let <_cor6> =
				  %% Line 70
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 70
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 70
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 70
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 70
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Tip_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 69
						  call 'wxe_util':'cast'
						      (1462, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setTip',2}}] )
	    -| ['compiler_generated'] )
	end
'getTip'/1 =
    %% Line 75
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 76
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxToolTip') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxToolTip')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 78
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 77
		      call 'wxe_util':'call'
			  (1463, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getTip',1}}] )
	    -| ['compiler_generated'] )
	end
'getWindow'/1 =
    %% Line 83
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 84
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxToolTip') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxToolTip')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 86
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 85
		      call 'wxe_util':'call'
			  (1464, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getWindow',1}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 90
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 91
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxToolTip') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxToolTip')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 92
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 93
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxToolTip')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxToolTip', _cor0)
end