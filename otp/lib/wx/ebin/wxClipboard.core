module 'wxClipboard' ['addData'/2,
		      'clear'/1,
		      'close'/1,
		      'destroy'/1,
		      'flush'/1,
		      'get'/0,
		      'getData'/2,
		      'isOpened'/1,
		      'isSupported'/2,
		      'module_info'/0,
		      'module_info'/1,
		      'new'/0,
		      'open'/1,
		      'parent_class'/1,
		      'setData'/2,
		      'usePrimarySelection'/1,
		      'usePrimarySelection'/2]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 33
		'export_type' =
		    %% Line 33
		    [{'wxClipboard',0}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{'wxClipboard',{'remote_type',37,[{'atom',37,'wx'}|[{'atom',37,'wx_object'}|[[]]]]},[]}],
		%% Line 39
		'spec' =
		    %% Line 39
		    [{{'new',0},[{'type',39,'fun',[{'type',39,'product',[]}|[{'type',39,'wxClipboard',[]}]]}]}],
		%% Line 45
		'spec' =
		    %% Line 45
		    [{{'addData',2},[{'type',45,'bounded_fun',[{'type',45,'fun',[{'type',45,'product',[{'var',45,'This'}|[{'var',45,'Data'}]]}|[{'type',45,'boolean',[]}]]}|[[{'type',46,'constraint',[{'atom',46,'is_subtype'}|[[{'var',46,'This'}|[{'type',46,'wxClipboard',[]}]]]]}|[{'type',46,'constraint',[{'atom',46,'is_subtype'}|[[{'var',46,'Data'}|[{'remote_type',46,[{'atom',46,'wxDataObject'}|[{'atom',46,'wxDataObject'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 54
		'spec' =
		    %% Line 54
		    [{{'clear',1},[{'type',54,'bounded_fun',[{'type',54,'fun',[{'type',54,'product',[{'var',54,'This'}]}|[{'atom',54,'ok'}]]}|[[{'type',55,'constraint',[{'atom',55,'is_subtype'}|[[{'var',55,'This'}|[{'type',55,'wxClipboard',[]}]]]]}]]]}]}],
		%% Line 62
		'spec' =
		    %% Line 62
		    [{{'close',1},[{'type',62,'bounded_fun',[{'type',62,'fun',[{'type',62,'product',[{'var',62,'This'}]}|[{'atom',62,'ok'}]]}|[[{'type',63,'constraint',[{'atom',63,'is_subtype'}|[[{'var',63,'This'}|[{'type',63,'wxClipboard',[]}]]]]}]]]}]}],
		%% Line 70
		'spec' =
		    %% Line 70
		    [{{'flush',1},[{'type',70,'bounded_fun',[{'type',70,'fun',[{'type',70,'product',[{'var',70,'This'}]}|[{'type',70,'boolean',[]}]]}|[[{'type',71,'constraint',[{'atom',71,'is_subtype'}|[[{'var',71,'This'}|[{'type',71,'wxClipboard',[]}]]]]}]]]}]}],
		%% Line 78
		'spec' =
		    %% Line 78
		    [{{'getData',2},[{'type',78,'bounded_fun',[{'type',78,'fun',[{'type',78,'product',[{'var',78,'This'}|[{'var',78,'Data'}]]}|[{'type',78,'boolean',[]}]]}|[[{'type',79,'constraint',[{'atom',79,'is_subtype'}|[[{'var',79,'This'}|[{'type',79,'wxClipboard',[]}]]]]}|[{'type',79,'constraint',[{'atom',79,'is_subtype'}|[[{'var',79,'Data'}|[{'remote_type',79,[{'atom',79,'wxDataObject'}|[{'atom',79,'wxDataObject'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 87
		'spec' =
		    %% Line 87
		    [{{'isOpened',1},[{'type',87,'bounded_fun',[{'type',87,'fun',[{'type',87,'product',[{'var',87,'This'}]}|[{'type',87,'boolean',[]}]]}|[[{'type',88,'constraint',[{'atom',88,'is_subtype'}|[[{'var',88,'This'}|[{'type',88,'wxClipboard',[]}]]]]}]]]}]}],
		%% Line 95
		'spec' =
		    %% Line 95
		    [{{'open',1},[{'type',95,'bounded_fun',[{'type',95,'fun',[{'type',95,'product',[{'var',95,'This'}]}|[{'type',95,'boolean',[]}]]}|[[{'type',96,'constraint',[{'atom',96,'is_subtype'}|[[{'var',96,'This'}|[{'type',96,'wxClipboard',[]}]]]]}]]]}]}],
		%% Line 103
		'spec' =
		    %% Line 103
		    [{{'setData',2},[{'type',103,'bounded_fun',[{'type',103,'fun',[{'type',103,'product',[{'var',103,'This'}|[{'var',103,'Data'}]]}|[{'type',103,'boolean',[]}]]}|[[{'type',104,'constraint',[{'atom',104,'is_subtype'}|[[{'var',104,'This'}|[{'type',104,'wxClipboard',[]}]]]]}|[{'type',104,'constraint',[{'atom',104,'is_subtype'}|[[{'var',104,'Data'}|[{'remote_type',104,[{'atom',104,'wxDataObject'}|[{'atom',104,'wxDataObject'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 112
		'spec' =
		    %% Line 112
		    [{{'usePrimarySelection',1},[{'type',112,'bounded_fun',[{'type',112,'fun',[{'type',112,'product',[{'var',112,'This'}]}|[{'atom',112,'ok'}]]}|[[{'type',113,'constraint',[{'atom',113,'is_subtype'}|[[{'var',113,'This'}|[{'type',113,'wxClipboard',[]}]]]]}]]]}]}],
		%% Line 120
		'spec' =
		    %% Line 120
		    [{{'usePrimarySelection',2},[{'type',120,'bounded_fun',[{'type',120,'fun',[{'type',120,'product',[{'var',120,'This'}|[{'type',120,'list',[{'var',120,'Option'}]}]]}|[{'atom',120,'ok'}]]}|[[{'type',121,'constraint',[{'atom',121,'is_subtype'}|[[{'var',121,'This'}|[{'type',121,'wxClipboard',[]}]]]]}|[{'type',122,'constraint',[{'atom',122,'is_subtype'}|[[{'var',122,'Option'}|[{'type',122,'tuple',[{'atom',122,'primary'}|[{'type',122,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 134
		'spec' =
		    %% Line 134
		    [{{'isSupported',2},[{'type',134,'bounded_fun',[{'type',134,'fun',[{'type',134,'product',[{'var',134,'This'}|[{'var',134,'Format'}]]}|[{'type',134,'boolean',[]}]]}|[[{'type',135,'constraint',[{'atom',135,'is_subtype'}|[[{'var',135,'This'}|[{'type',135,'wxClipboard',[]}]]]]}|[{'type',135,'constraint',[{'atom',135,'is_subtype'}|[[{'var',135,'Format'}|[{'remote_type',135,[{'atom',135,'wx'}|[{'atom',135,'wx_enum'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 143
		'spec' =
		    %% Line 143
		    [{{'get',0},[{'type',143,'fun',[{'type',143,'product',[]}|[{'type',143,'wxClipboard',[]}]]}]}],
		%% Line 149
		'spec' =
		    %% Line 149
		    [{{'destroy',1},[{'type',149,'fun',[{'type',149,'product',[{'ann_type',149,[{'var',149,'This'}|[{'type',149,'wxClipboard',[]}]]}]}|[{'atom',149,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 35
    fun (_cor0) ->
	call 'erlang':'error'
	    ({'badtype','wxClipboard'})
'new'/0 =
    %% Line 40
    fun () ->
	%% Line 41
	call 'wxe_util':'construct'
	    (3424, %% Line 42
		   #{}#)
'addData'/2 =
    %% Line 47
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',DataRef,DataT,_cor10}> when 'true' ->
	      do  %% Line 48
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxClipboard') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxClipboard')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 49
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (DataT,
				       'wxDataObject') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call DataT:'parent_class'
				    ('wxDataObject')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 51
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<DataRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 50
			  call 'wxe_util':'call'
			      (3426, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'addData',2}}] )
	    -| ['compiler_generated'] )
	end
'clear'/1 =
    %% Line 56
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 57
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxClipboard') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxClipboard')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 59
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 58
		      call 'wxe_util':'cast'
			  (3427, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'clear',1}}] )
	    -| ['compiler_generated'] )
	end
'close'/1 =
    %% Line 64
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 65
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxClipboard') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxClipboard')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 67
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 66
		      call 'wxe_util':'cast'
			  (3428, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'close',1}}] )
	    -| ['compiler_generated'] )
	end
'flush'/1 =
    %% Line 72
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 73
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxClipboard') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxClipboard')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 75
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 74
		      call 'wxe_util':'call'
			  (3429, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'flush',1}}] )
	    -| ['compiler_generated'] )
	end
'getData'/2 =
    %% Line 80
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',DataRef,DataT,_cor10}> when 'true' ->
	      do  %% Line 81
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxClipboard') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxClipboard')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 82
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (DataT,
				       'wxDataObject') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call DataT:'parent_class'
				    ('wxDataObject')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 84
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<DataRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 83
			  call 'wxe_util':'call'
			      (3430, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'getData',2}}] )
	    -| ['compiler_generated'] )
	end
'isOpened'/1 =
    %% Line 89
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 90
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxClipboard') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxClipboard')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 92
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 91
		      call 'wxe_util':'call'
			  (3431, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isOpened',1}}] )
	    -| ['compiler_generated'] )
	end
'open'/1 =
    %% Line 97
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 98
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxClipboard') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxClipboard')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 100
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 99
		      call 'wxe_util':'call'
			  (3432, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'open',1}}] )
	    -| ['compiler_generated'] )
	end
'setData'/2 =
    %% Line 105
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',DataRef,DataT,_cor10}> when 'true' ->
	      do  %% Line 106
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxClipboard') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxClipboard')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 107
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (DataT,
				       'wxDataObject') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call DataT:'parent_class'
				    ('wxDataObject')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 109
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<DataRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 108
			  call 'wxe_util':'call'
			      (3433, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setData',2}}] )
	    -| ['compiler_generated'] )
	end
'usePrimarySelection'/1 =
    %% Line 115
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 116
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 117
	      apply 'usePrimarySelection'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'usePrimarySelection',1}}] )
	    -| ['compiler_generated'] )
	end
'usePrimarySelection'/2 =
    %% Line 123
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 124
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 125
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxClipboard') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxClipboard')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 126
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'primary',Primary},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Primary)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 127
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-usePrimarySelection/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 128
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 128
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 130
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 129
				  call 'wxe_util':'cast'
				      (3435, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'usePrimarySelection',2}}] )
	    -| ['compiler_generated'] )
	end
'isSupported'/2 =
    %% Line 136
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Format>
	      when %% Line 137
		call 'erlang':'is_integer'
		    (Format) ->
	      do  %% Line 138
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxClipboard') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxClipboard')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 140
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Format>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 139
		      call 'wxe_util':'call'
			  (3436, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'isSupported',2}}] )
	    -| ['compiler_generated'] )
	end
'get'/0 =
    %% Line 144
    fun () ->
	%% Line 145
	call 'wxe_util':'call'
	    (3437, %% Line 146
		   #{}#)
'destroy'/1 =
    %% Line 150
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 151
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxClipboard') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxClipboard')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 152
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 153
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxClipboard')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxClipboard', _cor0)
end