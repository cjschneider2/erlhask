module 'wxControlWithItems' ['append'/2,
			     'append'/3,
			     'appendStrings'/2,
			     'cacheBestSize'/2,
			     'captureMouse'/1,
			     'center'/1,
			     'center'/2,
			     'centerOnParent'/1,
			     'centerOnParent'/2,
			     'centre'/1,
			     'centre'/2,
			     'centreOnParent'/1,
			     'centreOnParent'/2,
			     'clear'/1,
			     'clearBackground'/1,
			     'clientToScreen'/2,
			     'clientToScreen'/3,
			     'close'/1,
			     'close'/2,
			     'connect'/2,
			     'connect'/3,
			     'convertDialogToPixels'/2,
			     'convertPixelsToDialog'/2,
			     'delete'/2,
			     'destroyChildren'/1,
			     'disable'/1,
			     'disconnect'/1,
			     'disconnect'/2,
			     'disconnect'/3,
			     'enable'/1,
			     'enable'/2,
			     'findString'/2,
			     'findString'/3,
			     'findWindow'/2,
			     'fit'/1,
			     'fitInside'/1,
			     'freeze'/1,
			     'getAcceleratorTable'/1,
			     'getBackgroundColour'/1,
			     'getBackgroundStyle'/1,
			     'getBestSize'/1,
			     'getCaret'/1,
			     'getCharHeight'/1,
			     'getCharWidth'/1,
			     'getChildren'/1,
			     'getClientData'/2,
			     'getClientSize'/1,
			     'getContainingSizer'/1,
			     'getCount'/1,
			     'getCursor'/1,
			     'getDropTarget'/1,
			     'getEventHandler'/1,
			     'getExtraStyle'/1,
			     'getFont'/1,
			     'getForegroundColour'/1,
			     'getGrandParent'/1,
			     'getHandle'/1,
			     'getHelpText'/1,
			     'getId'/1,
			     'getLabel'/1,
			     'getMaxSize'/1,
			     'getMinSize'/1,
			     'getName'/1,
			     'getParent'/1,
			     'getPosition'/1,
			     'getRect'/1,
			     'getScreenPosition'/1,
			     'getScreenRect'/1,
			     'getScrollPos'/2,
			     'getScrollRange'/2,
			     'getScrollThumb'/2,
			     'getSelection'/1,
			     'getSize'/1,
			     'getSizer'/1,
			     'getString'/2,
			     'getStringSelection'/1,
			     'getTextExtent'/2,
			     'getTextExtent'/3,
			     'getToolTip'/1,
			     'getUpdateRegion'/1,
			     'getVirtualSize'/1,
			     'getWindowStyleFlag'/1,
			     'getWindowVariant'/1,
			     'hasCapture'/1,
			     'hasScrollbar'/2,
			     'hasTransparentBackground'/1,
			     'hide'/1,
			     'inheritAttributes'/1,
			     'initDialog'/1,
			     'insert'/3,
			     'insert'/4,
			     'invalidateBestSize'/1,
			     'isEmpty'/1,
			     'isEnabled'/1,
			     'isExposed'/2,
			     'isExposed'/3,
			     'isExposed'/5,
			     'isRetained'/1,
			     'isShown'/1,
			     'isTopLevel'/1,
			     'layout'/1,
			     'lineDown'/1,
			     'lineUp'/1,
			     'lower'/1,
			     'makeModal'/1,
			     'makeModal'/2,
			     'module_info'/0,
			     'module_info'/1,
			     'move'/2,
			     'move'/3,
			     'move'/4,
			     'moveAfterInTabOrder'/2,
			     'moveBeforeInTabOrder'/2,
			     'navigate'/1,
			     'navigate'/2,
			     'pageDown'/1,
			     'pageUp'/1,
			     'parent_class'/1,
			     'popEventHandler'/1,
			     'popEventHandler'/2,
			     'popupMenu'/2,
			     'popupMenu'/3,
			     'popupMenu'/4,
			     'raise'/1,
			     'refresh'/1,
			     'refresh'/2,
			     'refreshRect'/2,
			     'refreshRect'/3,
			     'releaseMouse'/1,
			     'removeChild'/2,
			     'reparent'/2,
			     'screenToClient'/1,
			     'screenToClient'/2,
			     'scrollLines'/2,
			     'scrollPages'/2,
			     'scrollWindow'/3,
			     'scrollWindow'/4,
			     'select'/2,
			     'setAcceleratorTable'/2,
			     'setAutoLayout'/2,
			     'setBackgroundColour'/2,
			     'setBackgroundStyle'/2,
			     'setCaret'/2,
			     'setClientData'/3,
			     'setClientSize'/2,
			     'setClientSize'/3,
			     'setContainingSizer'/2,
			     'setCursor'/2,
			     'setDropTarget'/2,
			     'setExtraStyle'/2,
			     'setFocus'/1,
			     'setFocusFromKbd'/1,
			     'setFont'/2,
			     'setForegroundColour'/2,
			     'setHelpText'/2,
			     'setId'/2,
			     'setLabel'/2,
			     'setMaxSize'/2,
			     'setMinSize'/2,
			     'setName'/2,
			     'setOwnBackgroundColour'/2,
			     'setOwnFont'/2,
			     'setOwnForegroundColour'/2,
			     'setPalette'/2,
			     'setScrollPos'/3,
			     'setScrollPos'/4,
			     'setScrollbar'/5,
			     'setScrollbar'/6,
			     'setSelection'/2,
			     'setSize'/2,
			     'setSize'/3,
			     'setSize'/5,
			     'setSize'/6,
			     'setSizeHints'/2,
			     'setSizeHints'/3,
			     'setSizeHints'/4,
			     'setSizer'/2,
			     'setSizer'/3,
			     'setSizerAndFit'/2,
			     'setSizerAndFit'/3,
			     'setString'/3,
			     'setStringSelection'/2,
			     'setThemeEnabled'/2,
			     'setToolTip'/2,
			     'setVirtualSize'/2,
			     'setVirtualSize'/3,
			     'setVirtualSizeHints'/2,
			     'setVirtualSizeHints'/3,
			     'setVirtualSizeHints'/4,
			     'setWindowStyle'/2,
			     'setWindowStyleFlag'/2,
			     'setWindowVariant'/2,
			     'shouldInheritColours'/1,
			     'show'/1,
			     'show'/2,
			     'thaw'/1,
			     'transferDataFromWindow'/1,
			     'transferDataToWindow'/1,
			     'update'/1,
			     'updateWindowUI'/1,
			     'updateWindowUI'/2,
			     'validate'/1,
			     'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 75
		'export_type' =
		    %% Line 75
		    [{'wxControlWithItems',0}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{'wxControlWithItems',{'remote_type',82,[{'atom',82,'wx'}|[{'atom',82,'wx_object'}|[[]]]]},[]}],
		%% Line 84
		'spec' =
		    %% Line 84
		    [{{'append',2},[{'type',84,'bounded_fun',[{'type',84,'fun',[{'type',84,'product',[{'var',84,'This'}|[{'var',84,'Item'}]]}|[{'type',84,'integer',[]}]]}|[[{'type',85,'constraint',[{'atom',85,'is_subtype'}|[[{'var',85,'This'}|[{'type',85,'wxControlWithItems',[]}]]]]}|[{'type',85,'constraint',[{'atom',85,'is_subtype'}|[[{'var',85,'Item'}|[{'remote_type',85,[{'atom',85,'unicode'}|[{'atom',85,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 94
		'spec' =
		    %% Line 94
		    [{{'append',3},[{'type',94,'bounded_fun',[{'type',94,'fun',[{'type',94,'product',[{'var',94,'This'}|[{'var',94,'Item'}|[{'var',94,'ClientData'}]]]}|[{'type',94,'integer',[]}]]}|[[{'type',95,'constraint',[{'atom',95,'is_subtype'}|[[{'var',95,'This'}|[{'type',95,'wxControlWithItems',[]}]]]]}|[{'type',95,'constraint',[{'atom',95,'is_subtype'}|[[{'var',95,'Item'}|[{'remote_type',95,[{'atom',95,'unicode'}|[{'atom',95,'chardata'}|[[]]]]}]]]]}|[{'type',95,'constraint',[{'atom',95,'is_subtype'}|[[{'var',95,'ClientData'}|[{'type',95,'term',[]}]]]]}]]]]]}]}],
		%% Line 105
		'spec' =
		    %% Line 105
		    [{{'appendStrings',2},[{'type',105,'bounded_fun',[{'type',105,'fun',[{'type',105,'product',[{'var',105,'This'}|[{'var',105,'Strings'}]]}|[{'atom',105,'ok'}]]}|[[{'type',106,'constraint',[{'atom',106,'is_subtype'}|[[{'var',106,'This'}|[{'type',106,'wxControlWithItems',[]}]]]]}|[{'type',106,'constraint',[{'atom',106,'is_subtype'}|[[{'var',106,'Strings'}|[{'type',106,'list',[{'remote_type',106,[{'atom',106,'unicode'}|[{'atom',106,'chardata'}|[[]]]]}]}]]]]}]]]]}]}],
		%% Line 116
		'spec' =
		    %% Line 116
		    [{{'clear',1},[{'type',116,'bounded_fun',[{'type',116,'fun',[{'type',116,'product',[{'var',116,'This'}]}|[{'atom',116,'ok'}]]}|[[{'type',117,'constraint',[{'atom',117,'is_subtype'}|[[{'var',117,'This'}|[{'type',117,'wxControlWithItems',[]}]]]]}]]]}]}],
		%% Line 124
		'spec' =
		    %% Line 124
		    [{{'delete',2},[{'type',124,'bounded_fun',[{'type',124,'fun',[{'type',124,'product',[{'var',124,'This'}|[{'var',124,'N'}]]}|[{'atom',124,'ok'}]]}|[[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'This'}|[{'type',125,'wxControlWithItems',[]}]]]]}|[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'N'}|[{'type',125,'integer',[]}]]]]}]]]]}]}],
		%% Line 133
		'spec' =
		    %% Line 133
		    [{{'findString',2},[{'type',133,'bounded_fun',[{'type',133,'fun',[{'type',133,'product',[{'var',133,'This'}|[{'var',133,'S'}]]}|[{'type',133,'integer',[]}]]}|[[{'type',134,'constraint',[{'atom',134,'is_subtype'}|[[{'var',134,'This'}|[{'type',134,'wxControlWithItems',[]}]]]]}|[{'type',134,'constraint',[{'atom',134,'is_subtype'}|[[{'var',134,'S'}|[{'remote_type',134,[{'atom',134,'unicode'}|[{'atom',134,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 141
		'spec' =
		    %% Line 141
		    [{{'findString',3},[{'type',141,'bounded_fun',[{'type',141,'fun',[{'type',141,'product',[{'var',141,'This'}|[{'var',141,'S'}|[{'type',141,'list',[{'var',141,'Option'}]}]]]}|[{'type',141,'integer',[]}]]}|[[{'type',142,'constraint',[{'atom',142,'is_subtype'}|[[{'var',142,'This'}|[{'type',142,'wxControlWithItems',[]}]]]]}|[{'type',142,'constraint',[{'atom',142,'is_subtype'}|[[{'var',142,'S'}|[{'remote_type',142,[{'atom',142,'unicode'}|[{'atom',142,'chardata'}|[[]]]]}]]]]}|[{'type',143,'constraint',[{'atom',143,'is_subtype'}|[[{'var',143,'Option'}|[{'type',143,'tuple',[{'atom',143,'bCase'}|[{'type',143,'boolean',[]}]]}]]]]}]]]]]}]}],
		%% Line 155
		'spec' =
		    %% Line 155
		    [{{'getClientData',2},[{'type',155,'bounded_fun',[{'type',155,'fun',[{'type',155,'product',[{'var',155,'This'}|[{'var',155,'N'}]]}|[{'type',155,'term',[]}]]}|[[{'type',156,'constraint',[{'atom',156,'is_subtype'}|[[{'var',156,'This'}|[{'type',156,'wxControlWithItems',[]}]]]]}|[{'type',156,'constraint',[{'atom',156,'is_subtype'}|[[{'var',156,'N'}|[{'type',156,'integer',[]}]]]]}]]]]}]}],
		%% Line 164
		'spec' =
		    %% Line 164
		    [{{'setClientData',3},[{'type',164,'bounded_fun',[{'type',164,'fun',[{'type',164,'product',[{'var',164,'This'}|[{'var',164,'N'}|[{'var',164,'ClientData'}]]]}|[{'atom',164,'ok'}]]}|[[{'type',165,'constraint',[{'atom',165,'is_subtype'}|[[{'var',165,'This'}|[{'type',165,'wxControlWithItems',[]}]]]]}|[{'type',165,'constraint',[{'atom',165,'is_subtype'}|[[{'var',165,'N'}|[{'type',165,'integer',[]}]]]]}|[{'type',165,'constraint',[{'atom',165,'is_subtype'}|[[{'var',165,'ClientData'}|[{'type',165,'term',[]}]]]]}]]]]]}]}],
		%% Line 174
		'spec' =
		    %% Line 174
		    [{{'getCount',1},[{'type',174,'bounded_fun',[{'type',174,'fun',[{'type',174,'product',[{'var',174,'This'}]}|[{'type',174,'integer',[]}]]}|[[{'type',175,'constraint',[{'atom',175,'is_subtype'}|[[{'var',175,'This'}|[{'type',175,'wxControlWithItems',[]}]]]]}]]]}]}],
		%% Line 182
		'spec' =
		    %% Line 182
		    [{{'getSelection',1},[{'type',182,'bounded_fun',[{'type',182,'fun',[{'type',182,'product',[{'var',182,'This'}]}|[{'type',182,'integer',[]}]]}|[[{'type',183,'constraint',[{'atom',183,'is_subtype'}|[[{'var',183,'This'}|[{'type',183,'wxControlWithItems',[]}]]]]}]]]}]}],
		%% Line 190
		'spec' =
		    %% Line 190
		    [{{'getString',2},[{'type',190,'bounded_fun',[{'type',190,'fun',[{'type',190,'product',[{'var',190,'This'}|[{'var',190,'N'}]]}|[{'remote_type',190,[{'atom',190,'unicode'}|[{'atom',190,'charlist'}|[[]]]]}]]}|[[{'type',191,'constraint',[{'atom',191,'is_subtype'}|[[{'var',191,'This'}|[{'type',191,'wxControlWithItems',[]}]]]]}|[{'type',191,'constraint',[{'atom',191,'is_subtype'}|[[{'var',191,'N'}|[{'type',191,'integer',[]}]]]]}]]]]}]}],
		%% Line 199
		'spec' =
		    %% Line 199
		    [{{'getStringSelection',1},[{'type',199,'bounded_fun',[{'type',199,'fun',[{'type',199,'product',[{'var',199,'This'}]}|[{'remote_type',199,[{'atom',199,'unicode'}|[{'atom',199,'charlist'}|[[]]]]}]]}|[[{'type',200,'constraint',[{'atom',200,'is_subtype'}|[[{'var',200,'This'}|[{'type',200,'wxControlWithItems',[]}]]]]}]]]}]}],
		%% Line 207
		'spec' =
		    %% Line 207
		    [{{'insert',3},[{'type',207,'bounded_fun',[{'type',207,'fun',[{'type',207,'product',[{'var',207,'This'}|[{'var',207,'Item'}|[{'var',207,'Pos'}]]]}|[{'type',207,'integer',[]}]]}|[[{'type',208,'constraint',[{'atom',208,'is_subtype'}|[[{'var',208,'This'}|[{'type',208,'wxControlWithItems',[]}]]]]}|[{'type',208,'constraint',[{'atom',208,'is_subtype'}|[[{'var',208,'Item'}|[{'remote_type',208,[{'atom',208,'unicode'}|[{'atom',208,'chardata'}|[[]]]]}]]]]}|[{'type',208,'constraint',[{'atom',208,'is_subtype'}|[[{'var',208,'Pos'}|[{'type',208,'integer',[]}]]]]}]]]]]}]}],
		%% Line 217
		'spec' =
		    %% Line 217
		    [{{'insert',4},[{'type',217,'bounded_fun',[{'type',217,'fun',[{'type',217,'product',[{'var',217,'This'}|[{'var',217,'Item'}|[{'var',217,'Pos'}|[{'var',217,'ClientData'}]]]]}|[{'type',217,'integer',[]}]]}|[[{'type',218,'constraint',[{'atom',218,'is_subtype'}|[[{'var',218,'This'}|[{'type',218,'wxControlWithItems',[]}]]]]}|[{'type',218,'constraint',[{'atom',218,'is_subtype'}|[[{'var',218,'Item'}|[{'remote_type',218,[{'atom',218,'unicode'}|[{'atom',218,'chardata'}|[[]]]]}]]]]}|[{'type',218,'constraint',[{'atom',218,'is_subtype'}|[[{'var',218,'Pos'}|[{'type',218,'integer',[]}]]]]}|[{'type',218,'constraint',[{'atom',218,'is_subtype'}|[[{'var',218,'ClientData'}|[{'type',218,'term',[]}]]]]}]]]]]]}]}],
		%% Line 228
		'spec' =
		    %% Line 228
		    [{{'isEmpty',1},[{'type',228,'bounded_fun',[{'type',228,'fun',[{'type',228,'product',[{'var',228,'This'}]}|[{'type',228,'boolean',[]}]]}|[[{'type',229,'constraint',[{'atom',229,'is_subtype'}|[[{'var',229,'This'}|[{'type',229,'wxControlWithItems',[]}]]]]}]]]}]}],
		%% Line 236
		'spec' =
		    %% Line 236
		    [{{'select',2},[{'type',236,'bounded_fun',[{'type',236,'fun',[{'type',236,'product',[{'var',236,'This'}|[{'var',236,'N'}]]}|[{'atom',236,'ok'}]]}|[[{'type',237,'constraint',[{'atom',237,'is_subtype'}|[[{'var',237,'This'}|[{'type',237,'wxControlWithItems',[]}]]]]}|[{'type',237,'constraint',[{'atom',237,'is_subtype'}|[[{'var',237,'N'}|[{'type',237,'integer',[]}]]]]}]]]]}]}],
		%% Line 245
		'spec' =
		    %% Line 245
		    [{{'setSelection',2},[{'type',245,'bounded_fun',[{'type',245,'fun',[{'type',245,'product',[{'var',245,'This'}|[{'var',245,'N'}]]}|[{'atom',245,'ok'}]]}|[[{'type',246,'constraint',[{'atom',246,'is_subtype'}|[[{'var',246,'This'}|[{'type',246,'wxControlWithItems',[]}]]]]}|[{'type',246,'constraint',[{'atom',246,'is_subtype'}|[[{'var',246,'N'}|[{'type',246,'integer',[]}]]]]}]]]]}]}],
		%% Line 254
		'spec' =
		    %% Line 254
		    [{{'setString',3},[{'type',254,'bounded_fun',[{'type',254,'fun',[{'type',254,'product',[{'var',254,'This'}|[{'var',254,'N'}|[{'var',254,'S'}]]]}|[{'atom',254,'ok'}]]}|[[{'type',255,'constraint',[{'atom',255,'is_subtype'}|[[{'var',255,'This'}|[{'type',255,'wxControlWithItems',[]}]]]]}|[{'type',255,'constraint',[{'atom',255,'is_subtype'}|[[{'var',255,'N'}|[{'type',255,'integer',[]}]]]]}|[{'type',255,'constraint',[{'atom',255,'is_subtype'}|[[{'var',255,'S'}|[{'remote_type',255,[{'atom',255,'unicode'}|[{'atom',255,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 264
		'spec' =
		    %% Line 264
		    [{{'setStringSelection',2},[{'type',264,'bounded_fun',[{'type',264,'fun',[{'type',264,'product',[{'var',264,'This'}|[{'var',264,'S'}]]}|[{'type',264,'boolean',[]}]]}|[[{'type',265,'constraint',[{'atom',265,'is_subtype'}|[[{'var',265,'This'}|[{'type',265,'wxControlWithItems',[]}]]]]}|[{'type',265,'constraint',[{'atom',265,'is_subtype'}|[[{'var',265,'S'}|[{'remote_type',265,[{'atom',265,'unicode'}|[{'atom',265,'chardata'}|[[]]]]}]]]]}]]]]}]}]]
'parent_class'/1 =
    %% Line 77
    fun (_cor0) ->
	case _cor0 of
	  <'wxControl'> when 'true' ->
	      'true'
	  %% Line 78
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 79
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 80
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxControlWithItems'})
	end
'append'/2 =
    %% Line 86
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Item>
	      when %% Line 87
		call 'erlang':'is_list'
		    (Item) ->
	      do  %% Line 88
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Item_UC> =
		      %% Line 89
		      call 'unicode':'characters_to_binary'
			  ([Item|[0]])
		  in  let <_cor10> =
			  %% Line 91
			  call 'erlang':'byte_size'
			      (Item_UC)
		      in  let <_cor5> =
			      %% Line 91
			      call 'erlang':'byte_size'
				  (Item_UC)
			  in  let <_cor6> =
				  %% Line 91
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 91
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 91
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 91
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 91
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Item_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 90
						  call 'wxe_util':'call'
						      (881, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'append',2}}] )
	    -| ['compiler_generated'] )
	end
'append'/3 =
    %% Line 96
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor17},Item,ClientData>
	      when %% Line 97
		call 'erlang':'is_list'
		    (Item) ->
	      do  %% Line 98
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Item_UC> =
		      %% Line 99
		      call 'unicode':'characters_to_binary'
			  ([Item|[0]])
		  in  let <_cor6> =
			  %% Line 100
			  call 'erlang':'term_to_binary'
			      (ClientData)
		      in  do  %% Line 100
			      call 'wxe_util':'send_bin'
				  (_cor6)
			      let <_cor12> =
				  %% Line 102
				  call 'erlang':'byte_size'
				      (Item_UC)
			      in  let <_cor7> =
				      %% Line 102
				      call 'erlang':'byte_size'
					  (Item_UC)
				  in  let <_cor8> =
					  %% Line 102
					  call 'erlang':'+'
					      (0, _cor7)
				      in  let <_cor9> =
					      %% Line 102
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor10> =
						  %% Line 102
						  call 'erlang':'-'
						      (8, _cor9)
					      in  let <_cor11> =
						      %% Line 102
						      call 'erlang':'band'
							  (_cor10, 7)
						  in  let <_cor13> =
							  %% Line 102
							  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
							    #<_cor12>(32,1,'integer',['unsigned'|['native']]),
							    #<Item_UC>('all',8,'binary',['unsigned'|['big']]),
							    #<0>(_cor11,8,'integer',['unsigned'|['big']])}#
						      in  %% Line 101
							  call 'wxe_util':'call'
							      (882, _cor13)
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14})
		  -| [{'function_name',{'append',3}}] )
	    -| ['compiler_generated'] )
	end
'appendStrings'/2 =
    %% Line 107
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor34},Strings>
	      when %% Line 108
		call 'erlang':'is_list'
		    (Strings) ->
	      do  %% Line 109
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor9> =
		      %% Line 110
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor6) ->
				    case _cor6 of
				      <[%% Line 111
					StringsTemp|_cor5]> when 'true' ->
					  let <_cor7> =
					      call 'unicode':'characters_to_binary'
						  ([StringsTemp|[0]])
					  in  let <_cor8> =
						  %% Line 111
						  apply 'lc$^0'/1
						      (_cor5)
					      in  ( [_cor7|_cor8]
						    -| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor6> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor6})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(%% Line 111
				 Strings)
			-| ['list_comprehension'] )
		  in  let <_cor30> =
			  %% Line 113
			  call 'erlang':'length'
			      (_cor9)
		      in  let <_cor23> =
			      primop 'bs_init_writable'
				  (256)
			  in  let <_cor29> =
				  %% Line 113
				  ( letrec
					'lbc$^2'/2 =
					    fun (_cor27,_cor26) ->
						case <_cor27,_cor26> of
						  <[UC_Str|_cor25],_cor26> when 'true' ->
						      let <_cor28> =
							  call 'erlang':'byte_size'
							      (UC_Str)
						      in  let <_cor26> =
							      ( #{#<_cor26>('all',1,'binary',[]),
								  #<_cor28>(32,1,'integer',['unsigned'|['native']]),
								  #<UC_Str>('all',8,'binary',['unsigned'|['big']])}#
								-| ['compiler_generated','single_use'] )
							  in  apply 'lbc$^2'/2
								  (_cor25, _cor26)
						  <[],_cor26> when 'true' ->
						      _cor26
						  ( <_cor27,_cor26> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor27,_cor26})
							  -| [{'function_name',{'lbc$^2',2}}] )
						    -| ['compiler_generated'] )
						end
				    in  apply 'lbc$^2'/2
					    (_cor9, _cor23)
				    -| ['list_comprehension'] )
			      in  let <_cor17> =
				      %% Line 113
				      ( letrec
					    'lc$^1'/1 =
						fun (_cor13) ->
						    case _cor13 of
						      <[S|_cor12]> when 'true' ->
							  let <_cor14> =
							      call 'erlang':'byte_size'
								  (S)
							  in  let <_cor15> =
								  call 'erlang':'+'
								      (_cor14, 4)
							      in  let <_cor16> =
								      apply 'lc$^1'/1
									  (_cor12)
								  in  ( [_cor15|_cor16]
									-| ['compiler_generated'] )
						      <[]> when 'true' ->
							  []
						      ( <_cor13> when 'true' ->
							    ( primop 'match_fail'
								  ({'function_clause',_cor13})
							      -| [{'function_name',{'lc$^1',1}}] )
							-| ['compiler_generated'] )
						    end
					in  apply 'lc$^1'/1
						(_cor9)
					-| ['list_comprehension'] )
				  in  let <_cor18> =
					  %% Line 113
					  call 'lists':'sum'
					      (_cor17)
				      in  let <_cor19> =
					      %% Line 113
					      call 'erlang':'+'
						  (0, _cor18)
					  in  let <_cor20> =
						  %% Line 113
						  call 'erlang':'band'
						      (_cor19, 7)
					      in  let <_cor21> =
						      %% Line 113
						      call 'erlang':'-'
							  (8, _cor20)
						  in  let <_cor22> =
							  %% Line 113
							  call 'erlang':'band'
							      (_cor21, 7)
						      in  let <_cor31> =
							      %% Line 113
							      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								#<_cor30>(32,1,'integer',['unsigned'|['native']]),
								#<_cor29>('all',8,'binary',['unsigned'|['big']]),
								#<0>(_cor22,8,'integer',['unsigned'|['big']])}#
							  in  %% Line 112
							      call 'wxe_util':'cast'
								  (883, _cor31)
	  ( <_cor33,_cor32> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor33,_cor32})
		  -| [{'function_name',{'appendStrings',2}}] )
	    -| ['compiler_generated'] )
	end
'clear'/1 =
    %% Line 118
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 119
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 121
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 120
		      call 'wxe_util':'cast'
			  (884, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'clear',1}}] )
	    -| ['compiler_generated'] )
	end
'delete'/2 =
    %% Line 126
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 127
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 128
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 130
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 129
		      call 'wxe_util':'cast'
			  (885, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'delete',2}}] )
	    -| ['compiler_generated'] )
	end
'findString'/2 =
    %% Line 136
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <This = {'wx_ref',_cor5,_cor6,_cor7},S>
	      when %% Line 137
		call 'erlang':'is_list'
		    (S) ->
	      %% Line 138
	      apply 'findString'/3
		  (This, S, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'findString',2}}] )
	    -| ['compiler_generated'] )
	end
'findString'/3 =
    %% Line 144
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor27},S,Options>
	      when let <_cor3> =
		    %% Line 145
		    call 'erlang':'is_list'
			(S)
		in  let <_cor4> =
			%% Line 145
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 145
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 146
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <S_UC> =
		      %% Line 147
		      call 'unicode':'characters_to_binary'
			  ([S|[0]])
		  in  let <MOpts> =
			  %% Line 148
			  ( fun (_cor11,_cor10) ->
				case <_cor11,_cor10> of
				  <{'bCase',BCase},Acc> when 'true' ->
				      let <_cor8> =
					  call 'wxe_util':'from_bool'
					      (BCase)
				      in  let <_cor9> =
					      #{#<1>(32,1,'integer',['unsigned'|['native']]),
						#<_cor8>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor9|Acc]
				  %% Line 149
				  <BadOpt,_cor28> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-findString/3-fun-0-'}}] )
		      in  let <_cor15> =
			      %% Line 150
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 150
				  call 'erlang':'list_to_binary'
				      (_cor15)
			      in  let <_cor22> =
				      %% Line 152
				      call 'erlang':'byte_size'
					  (S_UC)
				  in  let <_cor17> =
					  %% Line 152
					  call 'erlang':'byte_size'
					      (S_UC)
				      in  let <_cor18> =
					      %% Line 152
					      call 'erlang':'+'
						  (0, _cor17)
					  in  let <_cor19> =
						  %% Line 152
						  call 'erlang':'band'
						      (_cor18, 7)
					      in  let <_cor20> =
						      %% Line 152
						      call 'erlang':'-'
							  (8, _cor19)
						  in  let <_cor21> =
							  %% Line 152
							  call 'erlang':'band'
							      (_cor20, 7)
						      in  let <_cor23> =
							      %% Line 152
							      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								#<_cor22>(32,1,'integer',['unsigned'|['native']]),
								#<S_UC>('all',8,'binary',['unsigned'|['big']]),
								#<0>(_cor21,8,'integer',['unsigned'|['big']]),
								#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							  in  %% Line 151
							      call 'wxe_util':'call'
								  (886, _cor23)
	  ( <_cor26,_cor25,_cor24> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor26,_cor25,_cor24})
		  -| [{'function_name',{'findString',3}}] )
	    -| ['compiler_generated'] )
	end
'getClientData'/2 =
    %% Line 157
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 158
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 159
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 161
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 160
		      call 'wxe_util':'call'
			  (887, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getClientData',2}}] )
	    -| ['compiler_generated'] )
	end
'setClientData'/3 =
    %% Line 166
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor10},N,ClientData>
	      when %% Line 167
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 168
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor5> =
		      %% Line 169
		      call 'erlang':'term_to_binary'
			  (ClientData)
		  in  do  %% Line 169
			  call 'wxe_util':'send_bin'
			      (_cor5)
			  let <_cor6> =
			      %% Line 171
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<N>(32,1,'integer',['unsigned'|['native']])}#
			  in  %% Line 170
			      call 'wxe_util':'cast'
				  (888, _cor6)
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7})
		  -| [{'function_name',{'setClientData',3}}] )
	    -| ['compiler_generated'] )
	end
'getCount'/1 =
    %% Line 176
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 177
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 179
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 178
		      call 'wxe_util':'call'
			  (889, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCount',1}}] )
	    -| ['compiler_generated'] )
	end
'getSelection'/1 =
    %% Line 184
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 185
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 187
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 186
		      call 'wxe_util':'call'
			  (890, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSelection',1}}] )
	    -| ['compiler_generated'] )
	end
'getString'/2 =
    %% Line 192
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 193
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 194
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 196
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 195
		      call 'wxe_util':'call'
			  (891, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getString',2}}] )
	    -| ['compiler_generated'] )
	end
'getStringSelection'/1 =
    %% Line 201
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 202
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 204
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 203
		      call 'wxe_util':'call'
			  (892, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getStringSelection',1}}] )
	    -| ['compiler_generated'] )
	end
'insert'/3 =
    %% Line 209
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},Item,Pos>
	      when let <_cor3> =
		    %% Line 210
		    call 'erlang':'is_list'
			(Item)
		in  let <_cor4> =
			%% Line 210
			call 'erlang':'is_integer'
			    (Pos)
		    in  %% Line 210
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 211
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Item_UC> =
		      %% Line 212
		      call 'unicode':'characters_to_binary'
			  ([Item|[0]])
		  in  let <_cor13> =
			  %% Line 214
			  call 'erlang':'byte_size'
			      (Item_UC)
		      in  let <_cor8> =
			      %% Line 214
			      call 'erlang':'byte_size'
				  (Item_UC)
			  in  let <_cor9> =
				  %% Line 214
				  call 'erlang':'+'
				      (0, _cor8)
			      in  let <_cor10> =
				      %% Line 214
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 214
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 214
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 214
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<Item_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']]),
						    #<Pos>(32,1,'integer',['unsigned'|['native']])}#
					      in  %% Line 213
						  call 'wxe_util':'call'
						      (893, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'insert',3}}] )
	    -| ['compiler_generated'] )
	end
'insert'/4 =
    %% Line 219
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor21},Item,Pos,ClientData>
	      when let <_cor4> =
		    %% Line 220
		    call 'erlang':'is_list'
			(Item)
		in  let <_cor5> =
			%% Line 220
			call 'erlang':'is_integer'
			    (Pos)
		    in  %% Line 220
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 221
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Item_UC> =
		      %% Line 222
		      call 'unicode':'characters_to_binary'
			  ([Item|[0]])
		  in  let <_cor9> =
			  %% Line 223
			  call 'erlang':'term_to_binary'
			      (ClientData)
		      in  do  %% Line 223
			      call 'wxe_util':'send_bin'
				  (_cor9)
			      let <_cor15> =
				  %% Line 225
				  call 'erlang':'byte_size'
				      (Item_UC)
			      in  let <_cor10> =
				      %% Line 225
				      call 'erlang':'byte_size'
					  (Item_UC)
				  in  let <_cor11> =
					  %% Line 225
					  call 'erlang':'+'
					      (0, _cor10)
				      in  let <_cor12> =
					      %% Line 225
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor13> =
						  %% Line 225
						  call 'erlang':'-'
						      (8, _cor12)
					      in  let <_cor14> =
						      %% Line 225
						      call 'erlang':'band'
							  (_cor13, 7)
						  in  let <_cor16> =
							  %% Line 225
							  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
							    #<_cor15>(32,1,'integer',['unsigned'|['native']]),
							    #<Item_UC>('all',8,'binary',['unsigned'|['big']]),
							    #<0>(_cor14,8,'integer',['unsigned'|['big']]),
							    #<Pos>(32,1,'integer',['unsigned'|['native']])}#
						      in  %% Line 224
							  call 'wxe_util':'call'
							      (894, _cor16)
	  ( <_cor20,_cor19,_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19,_cor18,_cor17})
		  -| [{'function_name',{'insert',4}}] )
	    -| ['compiler_generated'] )
	end
'isEmpty'/1 =
    %% Line 230
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 231
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 233
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 232
		      call 'wxe_util':'call'
			  (895, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isEmpty',1}}] )
	    -| ['compiler_generated'] )
	end
'select'/2 =
    %% Line 238
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 239
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 240
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 242
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 241
		      call 'wxe_util':'cast'
			  (896, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'select',2}}] )
	    -| ['compiler_generated'] )
	end
'setSelection'/2 =
    %% Line 247
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 248
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 249
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 251
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 250
		      call 'wxe_util':'cast'
			  (897, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'setString'/3 =
    %% Line 256
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},N,S>
	      when let <_cor3> =
		    %% Line 257
		    call 'erlang':'is_integer'
			(N)
		in  let <_cor4> =
			%% Line 257
			call 'erlang':'is_list'
			    (S)
		    in  %% Line 257
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 258
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <S_UC> =
		      %% Line 259
		      call 'unicode':'characters_to_binary'
			  ([S|[0]])
		  in  let <_cor13> =
			  %% Line 261
			  call 'erlang':'byte_size'
			      (S_UC)
		      in  let <_cor8> =
			      %% Line 261
			      call 'erlang':'byte_size'
				  (S_UC)
			  in  let <_cor9> =
				  %% Line 261
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 261
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 261
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 261
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 261
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<N>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<S_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 260
						  call 'wxe_util':'cast'
						      (898, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'setString',3}}] )
	    -| ['compiler_generated'] )
	end
'setStringSelection'/2 =
    %% Line 266
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},S>
	      when %% Line 267
		call 'erlang':'is_list'
		    (S) ->
	      do  %% Line 268
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxControlWithItems') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxControlWithItems')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <S_UC> =
		      %% Line 269
		      call 'unicode':'characters_to_binary'
			  ([S|[0]])
		  in  let <_cor10> =
			  %% Line 271
			  call 'erlang':'byte_size'
			      (S_UC)
		      in  let <_cor5> =
			      %% Line 271
			      call 'erlang':'byte_size'
				  (S_UC)
			  in  let <_cor6> =
				  %% Line 271
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 271
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 271
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 271
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 271
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<S_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 270
						  call 'wxe_util':'call'
						      (899, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setStringSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'setLabel'/2 =
    %% Line 275
    fun (_cor1,_cor0) ->
	call 'wxControl':'setLabel'
	    (_cor1, _cor0)
'getLabel'/1 =
    %% Line 277
    fun (_cor0) ->
	call 'wxControl':'getLabel'
	    (_cor0)
'warpPointer'/3 =
    %% Line 280
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 282
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 284
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 286
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 288
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 290
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 292
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 294
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 296
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 298
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 300
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 302
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 304
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 306
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 308
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 310
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 312
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 314
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 316
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 318
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 320
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 322
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 324
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 326
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 328
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 330
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 332
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 334
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 336
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 338
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 340
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 342
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 344
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 346
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 348
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 350
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 352
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 354
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 356
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 358
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 360
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 362
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 364
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 366
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 368
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 370
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 372
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 374
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 376
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 378
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 380
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 382
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 384
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 386
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 388
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 390
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 392
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 394
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 396
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 398
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 400
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 402
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 404
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 406
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 408
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 410
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 412
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 414
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 416
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 418
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 420
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 422
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 424
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 426
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 428
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 430
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 432
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 434
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 436
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 438
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 440
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 442
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 444
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 446
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 448
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 450
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 452
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 454
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 456
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 458
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 460
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 462
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 464
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 466
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 468
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 470
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 472
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 474
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 476
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 478
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 480
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 482
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 484
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 486
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 488
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 490
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 492
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 494
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 496
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 498
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 500
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 502
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 504
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 506
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 508
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 510
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 512
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 514
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 516
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 518
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 520
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 522
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 524
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 526
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 528
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 530
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 532
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 534
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 536
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 538
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 540
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 542
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 544
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 546
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 548
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 550
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 552
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 554
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 556
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 558
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 560
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 562
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 564
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 566
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 568
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 570
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 572
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 574
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 576
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 578
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 580
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 582
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 584
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 586
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 588
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 590
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 592
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 594
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 596
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 598
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 600
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 602
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 604
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 606
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 608
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 610
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 612
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 614
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 616
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 618
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 620
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 622
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 624
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 627
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 629
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 631
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 633
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 635
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxControlWithItems')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxControlWithItems', _cor0)
end