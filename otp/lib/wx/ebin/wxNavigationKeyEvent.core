module 'wxNavigationKeyEvent' ['getCurrentFocus'/1,
			       'getDirection'/1,
			       'getId'/1,
			       'getSkipped'/1,
			       'getTimestamp'/1,
			       'isCommandEvent'/1,
			       'isFromTab'/1,
			       'isWindowChange'/1,
			       'module_info'/0,
			       'module_info'/1,
			       'parent_class'/1,
			       'resumePropagation'/2,
			       'setCurrentFocus'/2,
			       'setDirection'/2,
			       'setFromTab'/2,
			       'setWindowChange'/2,
			       'shouldPropagate'/1,
			       'skip'/1,
			       'skip'/2,
			       'stopPropagation'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 41
		'export_type' =
		    %% Line 41
		    [{'wxNavigationKeyEvent',0}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{'wxNavigationKeyEvent',{'remote_type',46,[{'atom',46,'wx'}|[{'atom',46,'wx_object'}|[[]]]]},[]}],
		%% Line 48
		'spec' =
		    %% Line 48
		    [{{'getDirection',1},[{'type',48,'bounded_fun',[{'type',48,'fun',[{'type',48,'product',[{'var',48,'This'}]}|[{'type',48,'boolean',[]}]]}|[[{'type',49,'constraint',[{'atom',49,'is_subtype'}|[[{'var',49,'This'}|[{'type',49,'wxNavigationKeyEvent',[]}]]]]}]]]}]}],
		%% Line 56
		'spec' =
		    %% Line 56
		    [{{'setDirection',2},[{'type',56,'bounded_fun',[{'type',56,'fun',[{'type',56,'product',[{'var',56,'This'}|[{'var',56,'BForward'}]]}|[{'atom',56,'ok'}]]}|[[{'type',57,'constraint',[{'atom',57,'is_subtype'}|[[{'var',57,'This'}|[{'type',57,'wxNavigationKeyEvent',[]}]]]]}|[{'type',57,'constraint',[{'atom',57,'is_subtype'}|[[{'var',57,'BForward'}|[{'type',57,'boolean',[]}]]]]}]]]]}]}],
		%% Line 65
		'spec' =
		    %% Line 65
		    [{{'isWindowChange',1},[{'type',65,'bounded_fun',[{'type',65,'fun',[{'type',65,'product',[{'var',65,'This'}]}|[{'type',65,'boolean',[]}]]}|[[{'type',66,'constraint',[{'atom',66,'is_subtype'}|[[{'var',66,'This'}|[{'type',66,'wxNavigationKeyEvent',[]}]]]]}]]]}]}],
		%% Line 73
		'spec' =
		    %% Line 73
		    [{{'setWindowChange',2},[{'type',73,'bounded_fun',[{'type',73,'fun',[{'type',73,'product',[{'var',73,'This'}|[{'var',73,'BIs'}]]}|[{'atom',73,'ok'}]]}|[[{'type',74,'constraint',[{'atom',74,'is_subtype'}|[[{'var',74,'This'}|[{'type',74,'wxNavigationKeyEvent',[]}]]]]}|[{'type',74,'constraint',[{'atom',74,'is_subtype'}|[[{'var',74,'BIs'}|[{'type',74,'boolean',[]}]]]]}]]]]}]}],
		%% Line 82
		'spec' =
		    %% Line 82
		    [{{'isFromTab',1},[{'type',82,'bounded_fun',[{'type',82,'fun',[{'type',82,'product',[{'var',82,'This'}]}|[{'type',82,'boolean',[]}]]}|[[{'type',83,'constraint',[{'atom',83,'is_subtype'}|[[{'var',83,'This'}|[{'type',83,'wxNavigationKeyEvent',[]}]]]]}]]]}]}],
		%% Line 90
		'spec' =
		    %% Line 90
		    [{{'setFromTab',2},[{'type',90,'bounded_fun',[{'type',90,'fun',[{'type',90,'product',[{'var',90,'This'}|[{'var',90,'BIs'}]]}|[{'atom',90,'ok'}]]}|[[{'type',91,'constraint',[{'atom',91,'is_subtype'}|[[{'var',91,'This'}|[{'type',91,'wxNavigationKeyEvent',[]}]]]]}|[{'type',91,'constraint',[{'atom',91,'is_subtype'}|[[{'var',91,'BIs'}|[{'type',91,'boolean',[]}]]]]}]]]]}]}],
		%% Line 99
		'spec' =
		    %% Line 99
		    [{{'getCurrentFocus',1},[{'type',99,'bounded_fun',[{'type',99,'fun',[{'type',99,'product',[{'var',99,'This'}]}|[{'remote_type',99,[{'atom',99,'wxWindow'}|[{'atom',99,'wxWindow'}|[[]]]]}]]}|[[{'type',100,'constraint',[{'atom',100,'is_subtype'}|[[{'var',100,'This'}|[{'type',100,'wxNavigationKeyEvent',[]}]]]]}]]]}]}],
		%% Line 107
		'spec' =
		    %% Line 107
		    [{{'setCurrentFocus',2},[{'type',107,'bounded_fun',[{'type',107,'fun',[{'type',107,'product',[{'var',107,'This'}|[{'var',107,'Win'}]]}|[{'atom',107,'ok'}]]}|[[{'type',108,'constraint',[{'atom',108,'is_subtype'}|[[{'var',108,'This'}|[{'type',108,'wxNavigationKeyEvent',[]}]]]]}|[{'type',108,'constraint',[{'atom',108,'is_subtype'}|[[{'var',108,'Win'}|[{'remote_type',108,[{'atom',108,'wxWindow'}|[{'atom',108,'wxWindow'}|[[]]]]}]]]]}]]]]}]}]]
'parent_class'/1 =
    %% Line 43
    fun (_cor0) ->
	case _cor0 of
	  <'wxEvent'> when 'true' ->
	      'true'
	  %% Line 44
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxNavigationKeyEvent'})
	end
'getDirection'/1 =
    %% Line 50
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 51
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNavigationKeyEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNavigationKeyEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 53
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 52
		      call 'wxe_util':'call'
			  (2831, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getDirection',1}}] )
	    -| ['compiler_generated'] )
	end
'setDirection'/2 =
    %% Line 58
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},BForward>
	      when %% Line 59
		call 'erlang':'is_boolean'
		    (BForward) ->
	      do  %% Line 60
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNavigationKeyEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNavigationKeyEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 62
		      call 'wxe_util':'from_bool'
			  (BForward)
		  in  let <_cor5> =
			  %% Line 62
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 61
			  call 'wxe_util':'cast'
			      (2832, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setDirection',2}}] )
	    -| ['compiler_generated'] )
	end
'isWindowChange'/1 =
    %% Line 67
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 68
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNavigationKeyEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNavigationKeyEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 70
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 69
		      call 'wxe_util':'call'
			  (2833, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isWindowChange',1}}] )
	    -| ['compiler_generated'] )
	end
'setWindowChange'/2 =
    %% Line 75
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},BIs>
	      when %% Line 76
		call 'erlang':'is_boolean'
		    (BIs) ->
	      do  %% Line 77
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNavigationKeyEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNavigationKeyEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 79
		      call 'wxe_util':'from_bool'
			  (BIs)
		  in  let <_cor5> =
			  %% Line 79
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 78
			  call 'wxe_util':'cast'
			      (2834, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setWindowChange',2}}] )
	    -| ['compiler_generated'] )
	end
'isFromTab'/1 =
    %% Line 84
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 85
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNavigationKeyEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNavigationKeyEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 87
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 86
		      call 'wxe_util':'call'
			  (2835, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isFromTab',1}}] )
	    -| ['compiler_generated'] )
	end
'setFromTab'/2 =
    %% Line 92
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},BIs>
	      when %% Line 93
		call 'erlang':'is_boolean'
		    (BIs) ->
	      do  %% Line 94
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNavigationKeyEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNavigationKeyEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 96
		      call 'wxe_util':'from_bool'
			  (BIs)
		  in  let <_cor5> =
			  %% Line 96
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 95
			  call 'wxe_util':'cast'
			      (2836, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setFromTab',2}}] )
	    -| ['compiler_generated'] )
	end
'getCurrentFocus'/1 =
    %% Line 101
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 102
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNavigationKeyEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNavigationKeyEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 104
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 103
		      call 'wxe_util':'call'
			  (2837, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCurrentFocus',1}}] )
	    -| ['compiler_generated'] )
	end
'setCurrentFocus'/2 =
    %% Line 109
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',WinRef,WinT,_cor10}> when 'true' ->
	      do  %% Line 110
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNavigationKeyEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNavigationKeyEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 111
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (WinT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call WinT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 113
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<WinRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 112
			  call 'wxe_util':'cast'
			      (2838, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setCurrentFocus',2}}] )
	    -| ['compiler_generated'] )
	end
'stopPropagation'/1 =
    %% Line 117
    fun (_cor0) ->
	call 'wxEvent':'stopPropagation'
	    (_cor0)
'skip'/2 =
    %% Line 119
    fun (_cor1,_cor0) ->
	call 'wxEvent':'skip'
	    (_cor1, _cor0)
'skip'/1 =
    %% Line 121
    fun (_cor0) ->
	call 'wxEvent':'skip'
	    (_cor0)
'shouldPropagate'/1 =
    %% Line 123
    fun (_cor0) ->
	call 'wxEvent':'shouldPropagate'
	    (_cor0)
'resumePropagation'/2 =
    %% Line 125
    fun (_cor1,_cor0) ->
	call 'wxEvent':'resumePropagation'
	    (_cor1, _cor0)
'isCommandEvent'/1 =
    %% Line 127
    fun (_cor0) ->
	call 'wxEvent':'isCommandEvent'
	    (_cor0)
'getTimestamp'/1 =
    %% Line 129
    fun (_cor0) ->
	call 'wxEvent':'getTimestamp'
	    (_cor0)
'getSkipped'/1 =
    %% Line 131
    fun (_cor0) ->
	call 'wxEvent':'getSkipped'
	    (_cor0)
'getId'/1 =
    %% Line 133
    fun (_cor0) ->
	call 'wxEvent':'getId'
	    (_cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxNavigationKeyEvent')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxNavigationKeyEvent', _cor0)
end