module 'wxBitmapDataObject' ['destroy'/1,
			     'getBitmap'/1,
			     'module_info'/0,
			     'module_info'/1,
			     'new'/0,
			     'new'/1,
			     'parent_class'/1,
			     'setBitmap'/2]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 35
		'export_type' =
		    %% Line 35
		    [{'wxBitmapDataObject',0}],
		%% Line 40
		'type' =
		    %% Line 40
		    [{'wxBitmapDataObject',{'remote_type',40,[{'atom',40,'wx'}|[{'atom',40,'wx_object'}|[[]]]]},[]}],
		%% Line 42
		'spec' =
		    %% Line 42
		    [{{'new',0},[{'type',42,'fun',[{'type',42,'product',[]}|[{'type',42,'wxBitmapDataObject',[]}]]}]}],
		%% Line 52
		'spec' =
		    %% Line 52
		    [{{'new',1},[{'type',52,'bounded_fun',[{'type',52,'fun',[{'type',52,'product',[{'type',52,'list',[{'var',52,'Option'}]}]}|[{'type',52,'wxBitmapDataObject',[]}]]}|[[{'type',53,'constraint',[{'atom',53,'is_subtype'}|[[{'var',53,'Option'}|[{'type',53,'tuple',[{'atom',53,'bitmap'}|[{'remote_type',53,[{'atom',53,'wxBitmap'}|[{'atom',53,'wxBitmap'}|[[]]]]}]]}]]]]}]]]}|[{'type',54,'bounded_fun',[{'type',54,'fun',[{'type',54,'product',[{'var',54,'Bitmap'}]}|[{'type',54,'wxBitmapDataObject',[]}]]}|[[{'type',55,'constraint',[{'atom',55,'is_subtype'}|[[{'var',55,'Bitmap'}|[{'remote_type',55,[{'atom',55,'wxBitmap'}|[{'atom',55,'wxBitmap'}|[[]]]]}]]]]}]]]}]]}],
		%% Line 69
		'spec' =
		    %% Line 69
		    [{{'getBitmap',1},[{'type',69,'bounded_fun',[{'type',69,'fun',[{'type',69,'product',[{'var',69,'This'}]}|[{'remote_type',69,[{'atom',69,'wxBitmap'}|[{'atom',69,'wxBitmap'}|[[]]]]}]]}|[[{'type',70,'constraint',[{'atom',70,'is_subtype'}|[[{'var',70,'This'}|[{'type',70,'wxBitmapDataObject',[]}]]]]}]]]}]}],
		%% Line 77
		'spec' =
		    %% Line 77
		    [{{'setBitmap',2},[{'type',77,'bounded_fun',[{'type',77,'fun',[{'type',77,'product',[{'var',77,'This'}|[{'var',77,'Bitmap'}]]}|[{'atom',77,'ok'}]]}|[[{'type',78,'constraint',[{'atom',78,'is_subtype'}|[[{'var',78,'This'}|[{'type',78,'wxBitmapDataObject',[]}]]]]}|[{'type',78,'constraint',[{'atom',78,'is_subtype'}|[[{'var',78,'Bitmap'}|[{'remote_type',78,[{'atom',78,'wxBitmap'}|[{'atom',78,'wxBitmap'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 86
		'spec' =
		    %% Line 86
		    [{{'destroy',1},[{'type',86,'fun',[{'type',86,'product',[{'ann_type',86,[{'var',86,'This'}|[{'type',86,'wxBitmapDataObject',[]}]]}]}|[{'atom',86,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 37
    fun (_cor0) ->
	case _cor0 of
	  <'wxDataObject'> when 'true' ->
	      'true'
	  %% Line 38
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxBitmapDataObject'})
	end
'new'/0 =
    %% Line 44
    fun () ->
	%% Line 45
	apply 'new'/1
	    ([])
'new'/1 =
    %% Line 56
    fun (_cor0) ->
	case _cor0 of
	  <Options>
	      when %% Line 57
		call 'erlang':'is_list'
		    (_cor0) ->
	      let <MOpts> =
		  %% Line 58
		  ( fun (_cor5,_cor4) ->
			case <_cor5,_cor4> of
			  <{'bitmap',{'wx_ref',BitmapRef,BitmapT,_cor16}},Acc> when 'true' ->
			      do  ( case <> of
				      ( <>
					    when call 'erlang':'=:='
						  (BitmapT,
						   'wxBitmap') ->
					    'ok'
					-| ['compiler_generated'] )
				      ( <> when 'true' ->
					    call BitmapT:'parent_class'
						('wxBitmap')
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
				  let <_cor3> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<BitmapRef>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor3|Acc]
			  %% Line 59
			  <BadOpt,_cor17> when 'true' ->
			      call 'erlang':'error'
				  ({'badoption',BadOpt})
			end
		    -| [{'id',{0,0,'-new/1-fun-0-'}}] )
	      in  let <_cor9> =
		      %% Line 60
		      call 'lists':'foldl'
			  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		  in  let <BinOpt> =
			  %% Line 60
			  call 'erlang':'list_to_binary'
			      (_cor9)
		      in  let <_cor11> =
			      %% Line 62
			      #{#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			  in  %% Line 61
			      call 'wxe_util':'construct'
				  (3419, _cor11)
	  %% Line 63
	  <{'wx_ref',BitmapRef,BitmapT,_cor18}> when 'true' ->
	      do  %% Line 64
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (BitmapT,
				   'wxBitmap') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call BitmapT:'parent_class'
				('wxBitmap')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor14> =
		      %% Line 66
		      #{#<BitmapRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 65
		      call 'wxe_util':'construct'
			  (3418, _cor14)
	  ( <_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'getBitmap'/1 =
    %% Line 71
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 72
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxBitmapDataObject') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxBitmapDataObject')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 74
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 73
		      call 'wxe_util':'call'
			  (3420, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getBitmap',1}}] )
	    -| ['compiler_generated'] )
	end
'setBitmap'/2 =
    %% Line 79
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',BitmapRef,BitmapT,_cor10}> when 'true' ->
	      do  %% Line 80
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxBitmapDataObject') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxBitmapDataObject')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 81
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (BitmapT,
				       'wxBitmap') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call BitmapT:'parent_class'
				    ('wxBitmap')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 83
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<BitmapRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 82
			  call 'wxe_util':'cast'
			      (3421, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setBitmap',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 87
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 88
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxBitmapDataObject') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxBitmapDataObject')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 89
		      call 'wxe_util':'destroy'
			  (3422, Obj)
		      %% Line 90
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxBitmapDataObject')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxBitmapDataObject', _cor0)
end