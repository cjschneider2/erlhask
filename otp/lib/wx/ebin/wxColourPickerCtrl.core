module 'wxColourPickerCtrl' ['cacheBestSize'/2,
			     'captureMouse'/1,
			     'center'/1,
			     'center'/2,
			     'centerOnParent'/1,
			     'centerOnParent'/2,
			     'centre'/1,
			     'centre'/2,
			     'centreOnParent'/1,
			     'centreOnParent'/2,
			     'clearBackground'/1,
			     'clientToScreen'/2,
			     'clientToScreen'/3,
			     'close'/1,
			     'close'/2,
			     'connect'/2,
			     'connect'/3,
			     'convertDialogToPixels'/2,
			     'convertPixelsToDialog'/2,
			     'create'/3,
			     'create'/4,
			     'destroy'/1,
			     'destroyChildren'/1,
			     'disable'/1,
			     'disconnect'/1,
			     'disconnect'/2,
			     'disconnect'/3,
			     'enable'/1,
			     'enable'/2,
			     'findWindow'/2,
			     'fit'/1,
			     'fitInside'/1,
			     'freeze'/1,
			     'getAcceleratorTable'/1,
			     'getBackgroundColour'/1,
			     'getBackgroundStyle'/1,
			     'getBestSize'/1,
			     'getCaret'/1,
			     'getCharHeight'/1,
			     'getCharWidth'/1,
			     'getChildren'/1,
			     'getClientSize'/1,
			     'getColour'/1,
			     'getContainingSizer'/1,
			     'getCursor'/1,
			     'getDropTarget'/1,
			     'getEventHandler'/1,
			     'getExtraStyle'/1,
			     'getFont'/1,
			     'getForegroundColour'/1,
			     'getGrandParent'/1,
			     'getHandle'/1,
			     'getHelpText'/1,
			     'getId'/1,
			     'getInternalMargin'/1,
			     'getLabel'/1,
			     'getMaxSize'/1,
			     'getMinSize'/1,
			     'getName'/1,
			     'getParent'/1,
			     'getPickerCtrlProportion'/1,
			     'getPosition'/1,
			     'getRect'/1,
			     'getScreenPosition'/1,
			     'getScreenRect'/1,
			     'getScrollPos'/2,
			     'getScrollRange'/2,
			     'getScrollThumb'/2,
			     'getSize'/1,
			     'getSizer'/1,
			     'getTextCtrl'/1,
			     'getTextCtrlProportion'/1,
			     'getTextExtent'/2,
			     'getTextExtent'/3,
			     'getToolTip'/1,
			     'getUpdateRegion'/1,
			     'getVirtualSize'/1,
			     'getWindowStyleFlag'/1,
			     'getWindowVariant'/1,
			     'hasCapture'/1,
			     'hasScrollbar'/2,
			     'hasTextCtrl'/1,
			     'hasTransparentBackground'/1,
			     'hide'/1,
			     'inheritAttributes'/1,
			     'initDialog'/1,
			     'invalidateBestSize'/1,
			     'isEnabled'/1,
			     'isExposed'/2,
			     'isExposed'/3,
			     'isExposed'/5,
			     'isPickerCtrlGrowable'/1,
			     'isRetained'/1,
			     'isShown'/1,
			     'isTextCtrlGrowable'/1,
			     'isTopLevel'/1,
			     'layout'/1,
			     'lineDown'/1,
			     'lineUp'/1,
			     'lower'/1,
			     'makeModal'/1,
			     'makeModal'/2,
			     'module_info'/0,
			     'module_info'/1,
			     'move'/2,
			     'move'/3,
			     'move'/4,
			     'moveAfterInTabOrder'/2,
			     'moveBeforeInTabOrder'/2,
			     'navigate'/1,
			     'navigate'/2,
			     'new'/0,
			     'new'/2,
			     'new'/3,
			     'pageDown'/1,
			     'pageUp'/1,
			     'parent_class'/1,
			     'popEventHandler'/1,
			     'popEventHandler'/2,
			     'popupMenu'/2,
			     'popupMenu'/3,
			     'popupMenu'/4,
			     'raise'/1,
			     'refresh'/1,
			     'refresh'/2,
			     'refreshRect'/2,
			     'refreshRect'/3,
			     'releaseMouse'/1,
			     'removeChild'/2,
			     'reparent'/2,
			     'screenToClient'/1,
			     'screenToClient'/2,
			     'scrollLines'/2,
			     'scrollPages'/2,
			     'scrollWindow'/3,
			     'scrollWindow'/4,
			     'setAcceleratorTable'/2,
			     'setAutoLayout'/2,
			     'setBackgroundColour'/2,
			     'setBackgroundStyle'/2,
			     'setCaret'/2,
			     'setClientSize'/2,
			     'setClientSize'/3,
			     'setColour'/2,
			     'setContainingSizer'/2,
			     'setCursor'/2,
			     'setDropTarget'/2,
			     'setExtraStyle'/2,
			     'setFocus'/1,
			     'setFocusFromKbd'/1,
			     'setFont'/2,
			     'setForegroundColour'/2,
			     'setHelpText'/2,
			     'setId'/2,
			     'setInternalMargin'/2,
			     'setLabel'/2,
			     'setMaxSize'/2,
			     'setMinSize'/2,
			     'setName'/2,
			     'setOwnBackgroundColour'/2,
			     'setOwnFont'/2,
			     'setOwnForegroundColour'/2,
			     'setPalette'/2,
			     'setPickerCtrlGrowable'/1,
			     'setPickerCtrlGrowable'/2,
			     'setPickerCtrlProportion'/2,
			     'setScrollPos'/3,
			     'setScrollPos'/4,
			     'setScrollbar'/5,
			     'setScrollbar'/6,
			     'setSize'/2,
			     'setSize'/3,
			     'setSize'/5,
			     'setSize'/6,
			     'setSizeHints'/2,
			     'setSizeHints'/3,
			     'setSizeHints'/4,
			     'setSizer'/2,
			     'setSizer'/3,
			     'setSizerAndFit'/2,
			     'setSizerAndFit'/3,
			     'setTextCtrlGrowable'/1,
			     'setTextCtrlGrowable'/2,
			     'setTextCtrlProportion'/2,
			     'setThemeEnabled'/2,
			     'setToolTip'/2,
			     'setVirtualSize'/2,
			     'setVirtualSize'/3,
			     'setVirtualSizeHints'/2,
			     'setVirtualSizeHints'/3,
			     'setVirtualSizeHints'/4,
			     'setWindowStyle'/2,
			     'setWindowStyleFlag'/2,
			     'setWindowVariant'/2,
			     'shouldInheritColours'/1,
			     'show'/1,
			     'show'/2,
			     'thaw'/1,
			     'transferDataFromWindow'/1,
			     'transferDataToWindow'/1,
			     'update'/1,
			     'updateWindowUI'/1,
			     'updateWindowUI'/2,
			     'validate'/1,
			     'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 77
		'export_type' =
		    %% Line 77
		    [{'wxColourPickerCtrl',0}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{'wxColourPickerCtrl',{'remote_type',85,[{'atom',85,'wx'}|[{'atom',85,'wx_object'}|[[]]]]},[]}],
		%% Line 87
		'spec' =
		    %% Line 87
		    [{{'new',0},[{'type',87,'fun',[{'type',87,'product',[]}|[{'type',87,'wxColourPickerCtrl',[]}]]}]}],
		%% Line 93
		'spec' =
		    %% Line 93
		    [{{'new',2},[{'type',93,'bounded_fun',[{'type',93,'fun',[{'type',93,'product',[{'var',93,'Parent'}|[{'var',93,'Id'}]]}|[{'type',93,'wxColourPickerCtrl',[]}]]}|[[{'type',94,'constraint',[{'atom',94,'is_subtype'}|[[{'var',94,'Parent'}|[{'remote_type',94,[{'atom',94,'wxWindow'}|[{'atom',94,'wxWindow'}|[[]]]]}]]]]}|[{'type',94,'constraint',[{'atom',94,'is_subtype'}|[[{'var',94,'Id'}|[{'type',94,'integer',[]}]]]]}]]]]}]}],
		%% Line 101
		'spec' =
		    %% Line 101
		    [{{'new',3},[{'type',101,'bounded_fun',[{'type',101,'fun',[{'type',101,'product',[{'var',101,'Parent'}|[{'var',101,'Id'}|[{'type',101,'list',[{'var',101,'Option'}]}]]]}|[{'type',101,'wxColourPickerCtrl',[]}]]}|[[{'type',102,'constraint',[{'atom',102,'is_subtype'}|[[{'var',102,'Parent'}|[{'remote_type',102,[{'atom',102,'wxWindow'}|[{'atom',102,'wxWindow'}|[[]]]]}]]]]}|[{'type',102,'constraint',[{'atom',102,'is_subtype'}|[[{'var',102,'Id'}|[{'type',102,'integer',[]}]]]]}|[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'Option'}|[{'type',103,'union',[{'type',103,'tuple',[{'atom',103,'col'}|[{'remote_type',103,[{'atom',103,'wx'}|[{'atom',103,'wx_colour'}|[[]]]]}]]}|[{'type',104,'tuple',[{'atom',104,'pos'}|[{'type',104,'tuple',[{'ann_type',104,[{'var',104,'X'}|[{'type',104,'integer',[]}]]}|[{'ann_type',104,[{'var',104,'Y'}|[{'type',104,'integer',[]}]]}]]}]]}|[{'type',105,'tuple',[{'atom',105,'size'}|[{'type',105,'tuple',[{'ann_type',105,[{'var',105,'W'}|[{'type',105,'integer',[]}]]}|[{'ann_type',105,[{'var',105,'H'}|[{'type',105,'integer',[]}]]}]]}]]}|[{'type',106,'tuple',[{'atom',106,'style'}|[{'type',106,'integer',[]}]]}|[{'type',107,'tuple',[{'atom',107,'validator'}|[{'remote_type',107,[{'atom',107,'wx'}|[{'atom',107,'wx_object'}|[[]]]]}]]}]]]]]}]]]]}]]]]]}]}],
		%% Line 122
		'spec' =
		    %% Line 122
		    [{{'create',3},[{'type',122,'bounded_fun',[{'type',122,'fun',[{'type',122,'product',[{'var',122,'This'}|[{'var',122,'Parent'}|[{'var',122,'Id'}]]]}|[{'type',122,'boolean',[]}]]}|[[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'This'}|[{'type',123,'wxColourPickerCtrl',[]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Parent'}|[{'remote_type',123,[{'atom',123,'wxWindow'}|[{'atom',123,'wxWindow'}|[[]]]]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Id'}|[{'type',123,'integer',[]}]]]]}]]]]]}]}],
		%% Line 130
		'spec' =
		    %% Line 130
		    [{{'create',4},[{'type',130,'bounded_fun',[{'type',130,'fun',[{'type',130,'product',[{'var',130,'This'}|[{'var',130,'Parent'}|[{'var',130,'Id'}|[{'type',130,'list',[{'var',130,'Option'}]}]]]]}|[{'type',130,'boolean',[]}]]}|[[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'This'}|[{'type',131,'wxColourPickerCtrl',[]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Parent'}|[{'remote_type',131,[{'atom',131,'wxWindow'}|[{'atom',131,'wxWindow'}|[[]]]]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Id'}|[{'type',131,'integer',[]}]]]]}|[{'type',132,'constraint',[{'atom',132,'is_subtype'}|[[{'var',132,'Option'}|[{'type',132,'union',[{'type',132,'tuple',[{'atom',132,'col'}|[{'remote_type',132,[{'atom',132,'wx'}|[{'atom',132,'wx_colour'}|[[]]]]}]]}|[{'type',133,'tuple',[{'atom',133,'pos'}|[{'type',133,'tuple',[{'ann_type',133,[{'var',133,'X'}|[{'type',133,'integer',[]}]]}|[{'ann_type',133,[{'var',133,'Y'}|[{'type',133,'integer',[]}]]}]]}]]}|[{'type',134,'tuple',[{'atom',134,'size'}|[{'type',134,'tuple',[{'ann_type',134,[{'var',134,'W'}|[{'type',134,'integer',[]}]]}|[{'ann_type',134,[{'var',134,'H'}|[{'type',134,'integer',[]}]]}]]}]]}|[{'type',135,'tuple',[{'atom',135,'style'}|[{'type',135,'integer',[]}]]}|[{'type',136,'tuple',[{'atom',136,'validator'}|[{'remote_type',136,[{'atom',136,'wx'}|[{'atom',136,'wx_object'}|[[]]]]}]]}]]]]]}]]]]}]]]]]]}]}],
		%% Line 152
		'spec' =
		    %% Line 152
		    [{{'getColour',1},[{'type',152,'bounded_fun',[{'type',152,'fun',[{'type',152,'product',[{'var',152,'This'}]}|[{'remote_type',152,[{'atom',152,'wx'}|[{'atom',152,'wx_colour4'}|[[]]]]}]]}|[[{'type',153,'constraint',[{'atom',153,'is_subtype'}|[[{'var',153,'This'}|[{'type',153,'wxColourPickerCtrl',[]}]]]]}]]]}]}],
		%% Line 164
		'spec' =
		    %% Line 164
		    [{{'setColour',2},[{'type',164,'bounded_fun',[{'type',164,'fun',[{'type',164,'product',[{'var',164,'This'}|[{'var',164,'Text'}]]}|[{'type',164,'boolean',[]}]]}|[[{'type',165,'constraint',[{'atom',165,'is_subtype'}|[[{'var',165,'This'}|[{'type',165,'wxColourPickerCtrl',[]}]]]]}|[{'type',165,'constraint',[{'atom',165,'is_subtype'}|[[{'var',165,'Text'}|[{'remote_type',165,[{'atom',165,'unicode'}|[{'atom',165,'chardata'}|[[]]]]}]]]]}]]]]}|[{'type',166,'bounded_fun',[{'type',166,'fun',[{'type',166,'product',[{'var',166,'This'}|[{'var',166,'Col'}]]}|[{'atom',166,'ok'}]]}|[[{'type',167,'constraint',[{'atom',167,'is_subtype'}|[[{'var',167,'This'}|[{'type',167,'wxColourPickerCtrl',[]}]]]]}|[{'type',167,'constraint',[{'atom',167,'is_subtype'}|[[{'var',167,'Col'}|[{'remote_type',167,[{'atom',167,'wx'}|[{'atom',167,'wx_colour'}|[[]]]]}]]]]}]]]]}]]}],
		%% Line 181
		'spec' =
		    %% Line 181
		    [{{'destroy',1},[{'type',181,'fun',[{'type',181,'product',[{'ann_type',181,[{'var',181,'This'}|[{'type',181,'wxColourPickerCtrl',[]}]]}]}|[{'atom',181,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 79
    fun (_cor0) ->
	case _cor0 of
	  <'wxPickerBase'> when 'true' ->
	      'true'
	  %% Line 80
	  <'wxControl'> when 'true' ->
	      'true'
	  %% Line 81
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 82
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 83
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxColourPickerCtrl'})
	end
'new'/0 =
    %% Line 88
    fun () ->
	%% Line 89
	call 'wxe_util':'construct'
	    (2273, %% Line 90
		   #{}#)
'new'/2 =
    %% Line 96
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor5,_cor6,_cor7},Id>
	      when %% Line 97
		call 'erlang':'is_integer'
		    (Id) ->
	      %% Line 98
	      apply 'new'/3
		  (Parent, Id, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'new'/3 =
    %% Line 108
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor26},Id,Options>
	      when let <_cor3> =
		    %% Line 109
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor4> =
			%% Line 109
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 109
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 110
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 111
		      ( fun (_cor16,_cor15) ->
			    case <_cor16,_cor15> of
			      <{'col',Col},Acc> when 'true' ->
				  let <_cor7> =
				      call 'wxe_util':'colour_bin'
					  (Col)
				  in  let <_cor8> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor7>(16,8,'binary',['unsigned'|['big']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor8|Acc]
			      %% Line 112
			      <{'pos',{PosX,PosY}},Acc> when 'true' ->
				  let <_cor9> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<PosX>(32,1,'integer',['unsigned'|['native']]),
					#<PosY>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor9|Acc]
			      %% Line 113
			      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				  let <_cor10> =
				      #{#<3>(32,1,'integer',['unsigned'|['native']]),
					#<SizeW>(32,1,'integer',['unsigned'|['native']]),
					#<SizeH>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor10|Acc]
			      %% Line 114
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor11> =
				      #{#<4>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor11|Acc]
			      %% Line 115
			      <{'validator',{'wx_ref',ValidatorRef,ValidatorT,_cor27}},Acc> when 'true' ->
				  do  ( case <> of
					  ( <>
						when call 'erlang':'=:='
						      (ValidatorT,
						       'wx') ->
						'ok'
					    -| ['compiler_generated'] )
					  ( <> when 'true' ->
						call ValidatorT:'parent_class'
						    ('wx')
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				      let <_cor14> =
					  #{#<5>(32,1,'integer',['unsigned'|['native']]),
					    #<ValidatorRef>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor14|Acc]
			      %% Line 116
			      <BadOpt,_cor28> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/3-fun-0-'}}] )
		  in  let <_cor20> =
			  %% Line 117
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 117
			      call 'erlang':'list_to_binary'
				  (_cor20)
			  in  let <_cor22> =
				  %% Line 119
				  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				    #<Id>(32,1,'integer',['unsigned'|['native']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 118
				  call 'wxe_util':'construct'
				      (2274, _cor22)
	  ( <_cor25,_cor24,_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor25,_cor24,_cor23})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'create'/3 =
    %% Line 125
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor8,_cor9,_cor10},Parent = {'wx_ref',_cor11,_cor12,_cor13},Id>
	      when %% Line 126
		call 'erlang':'is_integer'
		    (Id) ->
	      %% Line 127
	      apply 'create'/4
		  (This, Parent, Id, [])
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'create',3}}] )
	    -| ['compiler_generated'] )
	end
'create'/4 =
    %% Line 137
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor30},{'wx_ref',ParentRef,ParentT,_cor31},Id,Options>
	      when let <_cor4> =
		    %% Line 138
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor5> =
			%% Line 138
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 138
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 139
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxColourPickerCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxColourPickerCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 140
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <MOpts> =
			  %% Line 141
			  ( fun (_cor19,_cor18) ->
				case <_cor19,_cor18> of
				  <{'col',Col},Acc> when 'true' ->
				      let <_cor10> =
					  call 'wxe_util':'colour_bin'
					      (Col)
				      in  let <_cor11> =
					      #{#<1>(32,1,'integer',['unsigned'|['native']]),
						#<_cor10>(16,8,'binary',['unsigned'|['big']]),
						#<0>(32,1,'integer',['unsigned'|['big']])}#
					  in  [_cor11|Acc]
				  %% Line 142
				  <{'pos',{PosX,PosY}},Acc> when 'true' ->
				      let <_cor12> =
					  #{#<2>(32,1,'integer',['unsigned'|['native']]),
					    #<PosX>(32,1,'integer',['unsigned'|['native']]),
					    #<PosY>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor12|Acc]
				  %% Line 143
				  <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				      let <_cor13> =
					  #{#<3>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeW>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeH>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor13|Acc]
				  %% Line 144
				  <{'style',Style},Acc> when 'true' ->
				      let <_cor14> =
					  #{#<4>(32,1,'integer',['unsigned'|['native']]),
					    #<Style>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor14|Acc]
				  %% Line 145
				  <{'validator',{'wx_ref',ValidatorRef,ValidatorT,_cor32}},Acc> when 'true' ->
				      do  ( case <> of
					      ( <>
						    when call 'erlang':'=:='
							  (ValidatorT,
							   'wx') ->
						    'ok'
						-| ['compiler_generated'] )
					      ( <> when 'true' ->
						    call ValidatorT:'parent_class'
							('wx')
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
					  let <_cor17> =
					      #{#<5>(32,1,'integer',['unsigned'|['native']]),
						#<ValidatorRef>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor17|Acc]
				  %% Line 146
				  <BadOpt,_cor33> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-create/4-fun-0-'}}] )
		      in  let <_cor23> =
			      %% Line 147
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 147
				  call 'erlang':'list_to_binary'
				      (_cor23)
			      in  let <_cor25> =
				      %% Line 149
				      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
					#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
					#<Id>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']]),
					#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				  in  %% Line 148
				      call 'wxe_util':'call'
					  (2275, _cor25)
	  ( <_cor29,_cor28,_cor27,_cor26> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor29,_cor28,_cor27,_cor26})
		  -| [{'function_name',{'create',4}}] )
	    -| ['compiler_generated'] )
	end
'getColour'/1 =
    %% Line 154
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 155
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxColourPickerCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxColourPickerCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 157
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 156
		      call 'wxe_util':'call'
			  (2276, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getColour',1}}] )
	    -| ['compiler_generated'] )
	end
'setColour'/2 =
    %% Line 168
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor22},Text>
	      when %% Line 169
		call 'erlang':'is_list'
		    (Text) ->
	      do  %% Line 170
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxColourPickerCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxColourPickerCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 171
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <_cor10> =
			  %% Line 173
			  call 'erlang':'byte_size'
			      (Text_UC)
		      in  let <_cor5> =
			      %% Line 173
			      call 'erlang':'byte_size'
				  (Text_UC)
			  in  let <_cor6> =
				  %% Line 173
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 173
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 173
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 173
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 173
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 172
						  call 'wxe_util':'call'
						      (2278, _cor11)
	  %% Line 174
	  <{'wx_ref',ThisRef,ThisT,_cor23},Col>
	      when let <_cor13> =
		    %% Line 175
		    try
			let <_cor12> =
			    call 'erlang':'tuple_size'
				(Col)
			in  call 'erlang':'=:='
				(_cor12, 3)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor15> =
			%% Line 175
			try
			    let <_cor14> =
				call 'erlang':'tuple_size'
				    (Col)
			    in  call 'erlang':'=:='
				    (_cor14, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 175
			call 'erlang':'or'
			    (_cor13, _cor15) ->
	      do  %% Line 176
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxColourPickerCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxColourPickerCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor18> =
		      %% Line 178
		      call 'wxe_util':'colour_bin'
			  (Col)
		  in  let <_cor19> =
			  %% Line 178
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor18>(16,8,'binary',['unsigned'|['big']])}#
		      in  %% Line 177
			  call 'wxe_util':'cast'
			      (2277, _cor19)
	  ( <_cor21,_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor21,_cor20})
		  -| [{'function_name',{'setColour',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 182
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 183
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxColourPickerCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxColourPickerCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 184
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 185
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'isPickerCtrlGrowable'/1 =
    %% Line 188
    fun (_cor0) ->
	call 'wxPickerBase':'isPickerCtrlGrowable'
	    (_cor0)
'setTextCtrlGrowable'/2 =
    %% Line 190
    fun (_cor1,_cor0) ->
	call 'wxPickerBase':'setTextCtrlGrowable'
	    (_cor1, _cor0)
'setTextCtrlGrowable'/1 =
    %% Line 192
    fun (_cor0) ->
	call 'wxPickerBase':'setTextCtrlGrowable'
	    (_cor0)
'setPickerCtrlGrowable'/2 =
    %% Line 194
    fun (_cor1,_cor0) ->
	call 'wxPickerBase':'setPickerCtrlGrowable'
	    (_cor1, _cor0)
'setPickerCtrlGrowable'/1 =
    %% Line 196
    fun (_cor0) ->
	call 'wxPickerBase':'setPickerCtrlGrowable'
	    (_cor0)
'isTextCtrlGrowable'/1 =
    %% Line 198
    fun (_cor0) ->
	call 'wxPickerBase':'isTextCtrlGrowable'
	    (_cor0)
'getTextCtrl'/1 =
    %% Line 200
    fun (_cor0) ->
	call 'wxPickerBase':'getTextCtrl'
	    (_cor0)
'hasTextCtrl'/1 =
    %% Line 202
    fun (_cor0) ->
	call 'wxPickerBase':'hasTextCtrl'
	    (_cor0)
'getPickerCtrlProportion'/1 =
    %% Line 204
    fun (_cor0) ->
	call 'wxPickerBase':'getPickerCtrlProportion'
	    (_cor0)
'getTextCtrlProportion'/1 =
    %% Line 206
    fun (_cor0) ->
	call 'wxPickerBase':'getTextCtrlProportion'
	    (_cor0)
'setPickerCtrlProportion'/2 =
    %% Line 208
    fun (_cor1,_cor0) ->
	call 'wxPickerBase':'setPickerCtrlProportion'
	    (_cor1, _cor0)
'setTextCtrlProportion'/2 =
    %% Line 210
    fun (_cor1,_cor0) ->
	call 'wxPickerBase':'setTextCtrlProportion'
	    (_cor1, _cor0)
'getInternalMargin'/1 =
    %% Line 212
    fun (_cor0) ->
	call 'wxPickerBase':'getInternalMargin'
	    (_cor0)
'setInternalMargin'/2 =
    %% Line 214
    fun (_cor1,_cor0) ->
	call 'wxPickerBase':'setInternalMargin'
	    (_cor1, _cor0)
'setLabel'/2 =
    %% Line 217
    fun (_cor1,_cor0) ->
	call 'wxControl':'setLabel'
	    (_cor1, _cor0)
'getLabel'/1 =
    %% Line 219
    fun (_cor0) ->
	call 'wxControl':'getLabel'
	    (_cor0)
'warpPointer'/3 =
    %% Line 222
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 224
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 226
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 228
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 230
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 232
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 234
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 236
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 238
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 240
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 242
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 244
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 246
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 248
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 250
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 252
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 254
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 256
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 258
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 260
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 262
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 264
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 266
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 268
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 270
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 272
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 274
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 276
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 278
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 280
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 282
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 284
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 286
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 288
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 290
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 292
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 294
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 296
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 298
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 300
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 302
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 304
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 306
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 308
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 310
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 312
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 314
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 316
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 318
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 320
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 322
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 324
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 326
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 328
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 330
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 332
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 334
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 336
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 338
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 340
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 342
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 344
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 346
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 348
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 350
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 352
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 354
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 356
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 358
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 360
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 362
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 364
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 366
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 368
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 370
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 372
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 374
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 376
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 378
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 380
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 382
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 384
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 386
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 388
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 390
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 392
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 394
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 396
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 398
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 400
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 402
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 404
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 406
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 408
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 410
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 412
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 414
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 416
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 418
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 420
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 422
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 424
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 426
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 428
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 430
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 432
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 434
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 436
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 438
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 440
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 442
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 444
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 446
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 448
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 450
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 452
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 454
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 456
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 458
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 460
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 462
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 464
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 466
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 468
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 470
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 472
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 474
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 476
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 478
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 480
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 482
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 484
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 486
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 488
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 490
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 492
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 494
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 496
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 498
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 500
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 502
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 504
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 506
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 508
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 510
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 512
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 514
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 516
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 518
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 520
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 522
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 524
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 526
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 528
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 530
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 532
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 534
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 536
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 538
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 540
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 542
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 544
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 546
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 548
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 550
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 552
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 554
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 556
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 558
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 560
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 562
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 564
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 566
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 569
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 571
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 573
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 575
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 577
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxColourPickerCtrl')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxColourPickerCtrl', _cor0)
end