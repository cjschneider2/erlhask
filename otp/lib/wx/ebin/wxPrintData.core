module 'wxPrintData' ['destroy'/1,
		      'getBin'/1,
		      'getCollate'/1,
		      'getColour'/1,
		      'getDuplex'/1,
		      'getNoCopies'/1,
		      'getOrientation'/1,
		      'getPaperId'/1,
		      'getPrinterName'/1,
		      'getQuality'/1,
		      'isOk'/1,
		      'module_info'/0,
		      'module_info'/1,
		      'new'/0,
		      'new'/1,
		      'parent_class'/1,
		      'setBin'/2,
		      'setCollate'/2,
		      'setColour'/2,
		      'setDuplex'/2,
		      'setNoCopies'/2,
		      'setOrientation'/2,
		      'setPaperId'/2,
		      'setPrinterName'/2,
		      'setQuality'/2]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 35
		'export_type' =
		    %% Line 35
		    [{'wxPrintData',0}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{'wxPrintData',{'remote_type',39,[{'atom',39,'wx'}|[{'atom',39,'wx_object'}|[[]]]]},[]}],
		%% Line 41
		'spec' =
		    %% Line 41
		    [{{'new',0},[{'type',41,'fun',[{'type',41,'product',[]}|[{'type',41,'wxPrintData',[]}]]}]}],
		%% Line 47
		'spec' =
		    %% Line 47
		    [{{'new',1},[{'type',47,'bounded_fun',[{'type',47,'fun',[{'type',47,'product',[{'var',47,'PrintData'}]}|[{'type',47,'wxPrintData',[]}]]}|[[{'type',48,'constraint',[{'atom',48,'is_subtype'}|[[{'var',48,'PrintData'}|[{'type',48,'wxPrintData',[]}]]]]}]]]}]}],
		%% Line 55
		'spec' =
		    %% Line 55
		    [{{'getCollate',1},[{'type',55,'bounded_fun',[{'type',55,'fun',[{'type',55,'product',[{'var',55,'This'}]}|[{'type',55,'boolean',[]}]]}|[[{'type',56,'constraint',[{'atom',56,'is_subtype'}|[[{'var',56,'This'}|[{'type',56,'wxPrintData',[]}]]]]}]]]}]}],
		%% Line 64
		'spec' =
		    %% Line 64
		    [{{'getBin',1},[{'type',64,'bounded_fun',[{'type',64,'fun',[{'type',64,'product',[{'var',64,'This'}]}|[{'remote_type',64,[{'atom',64,'wx'}|[{'atom',64,'wx_enum'}|[[]]]]}]]}|[[{'type',65,'constraint',[{'atom',65,'is_subtype'}|[[{'var',65,'This'}|[{'type',65,'wxPrintData',[]}]]]]}]]]}]}],
		%% Line 72
		'spec' =
		    %% Line 72
		    [{{'getColour',1},[{'type',72,'bounded_fun',[{'type',72,'fun',[{'type',72,'product',[{'var',72,'This'}]}|[{'type',72,'boolean',[]}]]}|[[{'type',73,'constraint',[{'atom',73,'is_subtype'}|[[{'var',73,'This'}|[{'type',73,'wxPrintData',[]}]]]]}]]]}]}],
		%% Line 81
		'spec' =
		    %% Line 81
		    [{{'getDuplex',1},[{'type',81,'bounded_fun',[{'type',81,'fun',[{'type',81,'product',[{'var',81,'This'}]}|[{'remote_type',81,[{'atom',81,'wx'}|[{'atom',81,'wx_enum'}|[[]]]]}]]}|[[{'type',82,'constraint',[{'atom',82,'is_subtype'}|[[{'var',82,'This'}|[{'type',82,'wxPrintData',[]}]]]]}]]]}]}],
		%% Line 89
		'spec' =
		    %% Line 89
		    [{{'getNoCopies',1},[{'type',89,'bounded_fun',[{'type',89,'fun',[{'type',89,'product',[{'var',89,'This'}]}|[{'type',89,'integer',[]}]]}|[[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'This'}|[{'type',90,'wxPrintData',[]}]]]]}]]]}]}],
		%% Line 97
		'spec' =
		    %% Line 97
		    [{{'getOrientation',1},[{'type',97,'bounded_fun',[{'type',97,'fun',[{'type',97,'product',[{'var',97,'This'}]}|[{'type',97,'integer',[]}]]}|[[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'This'}|[{'type',98,'wxPrintData',[]}]]]]}]]]}]}],
		%% Line 106
		'spec' =
		    %% Line 106
		    [{{'getPaperId',1},[{'type',106,'bounded_fun',[{'type',106,'fun',[{'type',106,'product',[{'var',106,'This'}]}|[{'remote_type',106,[{'atom',106,'wx'}|[{'atom',106,'wx_enum'}|[[]]]]}]]}|[[{'type',107,'constraint',[{'atom',107,'is_subtype'}|[[{'var',107,'This'}|[{'type',107,'wxPrintData',[]}]]]]}]]]}]}],
		%% Line 114
		'spec' =
		    %% Line 114
		    [{{'getPrinterName',1},[{'type',114,'bounded_fun',[{'type',114,'fun',[{'type',114,'product',[{'var',114,'This'}]}|[{'remote_type',114,[{'atom',114,'unicode'}|[{'atom',114,'charlist'}|[[]]]]}]]}|[[{'type',115,'constraint',[{'atom',115,'is_subtype'}|[[{'var',115,'This'}|[{'type',115,'wxPrintData',[]}]]]]}]]]}]}],
		%% Line 122
		'spec' =
		    %% Line 122
		    [{{'getQuality',1},[{'type',122,'bounded_fun',[{'type',122,'fun',[{'type',122,'product',[{'var',122,'This'}]}|[{'type',122,'integer',[]}]]}|[[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'This'}|[{'type',123,'wxPrintData',[]}]]]]}]]]}]}],
		%% Line 130
		'spec' =
		    %% Line 130
		    [{{'isOk',1},[{'type',130,'bounded_fun',[{'type',130,'fun',[{'type',130,'product',[{'var',130,'This'}]}|[{'type',130,'boolean',[]}]]}|[[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'This'}|[{'type',131,'wxPrintData',[]}]]]]}]]]}]}],
		%% Line 139
		'spec' =
		    %% Line 139
		    [{{'setBin',2},[{'type',139,'bounded_fun',[{'type',139,'fun',[{'type',139,'product',[{'var',139,'This'}|[{'var',139,'Bin'}]]}|[{'atom',139,'ok'}]]}|[[{'type',140,'constraint',[{'atom',140,'is_subtype'}|[[{'var',140,'This'}|[{'type',140,'wxPrintData',[]}]]]]}|[{'type',140,'constraint',[{'atom',140,'is_subtype'}|[[{'var',140,'Bin'}|[{'remote_type',140,[{'atom',140,'wx'}|[{'atom',140,'wx_enum'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 148
		'spec' =
		    %% Line 148
		    [{{'setCollate',2},[{'type',148,'bounded_fun',[{'type',148,'fun',[{'type',148,'product',[{'var',148,'This'}|[{'var',148,'Flag'}]]}|[{'atom',148,'ok'}]]}|[[{'type',149,'constraint',[{'atom',149,'is_subtype'}|[[{'var',149,'This'}|[{'type',149,'wxPrintData',[]}]]]]}|[{'type',149,'constraint',[{'atom',149,'is_subtype'}|[[{'var',149,'Flag'}|[{'type',149,'boolean',[]}]]]]}]]]]}]}],
		%% Line 157
		'spec' =
		    %% Line 157
		    [{{'setColour',2},[{'type',157,'bounded_fun',[{'type',157,'fun',[{'type',157,'product',[{'var',157,'This'}|[{'var',157,'Colour'}]]}|[{'atom',157,'ok'}]]}|[[{'type',158,'constraint',[{'atom',158,'is_subtype'}|[[{'var',158,'This'}|[{'type',158,'wxPrintData',[]}]]]]}|[{'type',158,'constraint',[{'atom',158,'is_subtype'}|[[{'var',158,'Colour'}|[{'type',158,'boolean',[]}]]]]}]]]]}]}],
		%% Line 167
		'spec' =
		    %% Line 167
		    [{{'setDuplex',2},[{'type',167,'bounded_fun',[{'type',167,'fun',[{'type',167,'product',[{'var',167,'This'}|[{'var',167,'Duplex'}]]}|[{'atom',167,'ok'}]]}|[[{'type',168,'constraint',[{'atom',168,'is_subtype'}|[[{'var',168,'This'}|[{'type',168,'wxPrintData',[]}]]]]}|[{'type',168,'constraint',[{'atom',168,'is_subtype'}|[[{'var',168,'Duplex'}|[{'remote_type',168,[{'atom',168,'wx'}|[{'atom',168,'wx_enum'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 176
		'spec' =
		    %% Line 176
		    [{{'setNoCopies',2},[{'type',176,'bounded_fun',[{'type',176,'fun',[{'type',176,'product',[{'var',176,'This'}|[{'var',176,'V'}]]}|[{'atom',176,'ok'}]]}|[[{'type',177,'constraint',[{'atom',177,'is_subtype'}|[[{'var',177,'This'}|[{'type',177,'wxPrintData',[]}]]]]}|[{'type',177,'constraint',[{'atom',177,'is_subtype'}|[[{'var',177,'V'}|[{'type',177,'integer',[]}]]]]}]]]]}]}],
		%% Line 185
		'spec' =
		    %% Line 185
		    [{{'setOrientation',2},[{'type',185,'bounded_fun',[{'type',185,'fun',[{'type',185,'product',[{'var',185,'This'}|[{'var',185,'Orient'}]]}|[{'atom',185,'ok'}]]}|[[{'type',186,'constraint',[{'atom',186,'is_subtype'}|[[{'var',186,'This'}|[{'type',186,'wxPrintData',[]}]]]]}|[{'type',186,'constraint',[{'atom',186,'is_subtype'}|[[{'var',186,'Orient'}|[{'type',186,'integer',[]}]]]]}]]]]}]}],
		%% Line 195
		'spec' =
		    %% Line 195
		    [{{'setPaperId',2},[{'type',195,'bounded_fun',[{'type',195,'fun',[{'type',195,'product',[{'var',195,'This'}|[{'var',195,'SizeId'}]]}|[{'atom',195,'ok'}]]}|[[{'type',196,'constraint',[{'atom',196,'is_subtype'}|[[{'var',196,'This'}|[{'type',196,'wxPrintData',[]}]]]]}|[{'type',196,'constraint',[{'atom',196,'is_subtype'}|[[{'var',196,'SizeId'}|[{'remote_type',196,[{'atom',196,'wx'}|[{'atom',196,'wx_enum'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 204
		'spec' =
		    %% Line 204
		    [{{'setPrinterName',2},[{'type',204,'bounded_fun',[{'type',204,'fun',[{'type',204,'product',[{'var',204,'This'}|[{'var',204,'Name'}]]}|[{'atom',204,'ok'}]]}|[[{'type',205,'constraint',[{'atom',205,'is_subtype'}|[[{'var',205,'This'}|[{'type',205,'wxPrintData',[]}]]]]}|[{'type',205,'constraint',[{'atom',205,'is_subtype'}|[[{'var',205,'Name'}|[{'remote_type',205,[{'atom',205,'unicode'}|[{'atom',205,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 214
		'spec' =
		    %% Line 214
		    [{{'setQuality',2},[{'type',214,'bounded_fun',[{'type',214,'fun',[{'type',214,'product',[{'var',214,'This'}|[{'var',214,'Quality'}]]}|[{'atom',214,'ok'}]]}|[[{'type',215,'constraint',[{'atom',215,'is_subtype'}|[[{'var',215,'This'}|[{'type',215,'wxPrintData',[]}]]]]}|[{'type',215,'constraint',[{'atom',215,'is_subtype'}|[[{'var',215,'Quality'}|[{'type',215,'integer',[]}]]]]}]]]]}]}],
		%% Line 223
		'spec' =
		    %% Line 223
		    [{{'destroy',1},[{'type',223,'fun',[{'type',223,'product',[{'ann_type',223,[{'var',223,'This'}|[{'type',223,'wxPrintData',[]}]]}]}|[{'atom',223,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 37
    fun (_cor0) ->
	call 'erlang':'error'
	    ({'badtype','wxPrintData'})
'new'/0 =
    %% Line 42
    fun () ->
	%% Line 43
	call 'wxe_util':'construct'
	    (2436, %% Line 44
		   #{}#)
'new'/1 =
    %% Line 49
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',PrintDataRef,PrintDataT,_cor5}> when 'true' ->
	      do  %% Line 50
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (PrintDataT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call PrintDataT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 52
		      #{#<PrintDataRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 51
		      call 'wxe_util':'construct'
			  (2437, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'getCollate'/1 =
    %% Line 57
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 58
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 60
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 59
		      call 'wxe_util':'call'
			  (2439, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCollate',1}}] )
	    -| ['compiler_generated'] )
	end
'getBin'/1 =
    %% Line 66
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 67
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 69
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 68
		      call 'wxe_util':'call'
			  (2440, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getBin',1}}] )
	    -| ['compiler_generated'] )
	end
'getColour'/1 =
    %% Line 74
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 75
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 77
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 76
		      call 'wxe_util':'call'
			  (2441, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getColour',1}}] )
	    -| ['compiler_generated'] )
	end
'getDuplex'/1 =
    %% Line 83
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 84
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 86
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 85
		      call 'wxe_util':'call'
			  (2442, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getDuplex',1}}] )
	    -| ['compiler_generated'] )
	end
'getNoCopies'/1 =
    %% Line 91
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 92
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 94
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 93
		      call 'wxe_util':'call'
			  (2443, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getNoCopies',1}}] )
	    -| ['compiler_generated'] )
	end
'getOrientation'/1 =
    %% Line 99
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 100
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 102
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 101
		      call 'wxe_util':'call'
			  (2444, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getOrientation',1}}] )
	    -| ['compiler_generated'] )
	end
'getPaperId'/1 =
    %% Line 108
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 109
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 111
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 110
		      call 'wxe_util':'call'
			  (2445, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPaperId',1}}] )
	    -| ['compiler_generated'] )
	end
'getPrinterName'/1 =
    %% Line 116
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 117
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 119
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 118
		      call 'wxe_util':'call'
			  (2446, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPrinterName',1}}] )
	    -| ['compiler_generated'] )
	end
'getQuality'/1 =
    %% Line 124
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 125
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 127
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 126
		      call 'wxe_util':'call'
			  (2447, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getQuality',1}}] )
	    -| ['compiler_generated'] )
	end
'isOk'/1 =
    %% Line 132
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 133
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 135
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 134
		      call 'wxe_util':'call'
			  (2448, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isOk',1}}] )
	    -| ['compiler_generated'] )
	end
'setBin'/2 =
    %% Line 141
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Bin>
	      when %% Line 142
		call 'erlang':'is_integer'
		    (Bin) ->
	      do  %% Line 143
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 145
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Bin>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 144
		      call 'wxe_util':'cast'
			  (2449, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setBin',2}}] )
	    -| ['compiler_generated'] )
	end
'setCollate'/2 =
    %% Line 150
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Flag>
	      when %% Line 151
		call 'erlang':'is_boolean'
		    (Flag) ->
	      do  %% Line 152
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 154
		      call 'wxe_util':'from_bool'
			  (Flag)
		  in  let <_cor5> =
			  %% Line 154
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 153
			  call 'wxe_util':'cast'
			      (2450, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setCollate',2}}] )
	    -| ['compiler_generated'] )
	end
'setColour'/2 =
    %% Line 159
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Colour>
	      when %% Line 160
		call 'erlang':'is_boolean'
		    (Colour) ->
	      do  %% Line 161
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 163
		      call 'wxe_util':'from_bool'
			  (Colour)
		  in  let <_cor5> =
			  %% Line 163
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 162
			  call 'wxe_util':'cast'
			      (2451, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setColour',2}}] )
	    -| ['compiler_generated'] )
	end
'setDuplex'/2 =
    %% Line 169
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Duplex>
	      when %% Line 170
		call 'erlang':'is_integer'
		    (Duplex) ->
	      do  %% Line 171
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 173
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Duplex>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 172
		      call 'wxe_util':'cast'
			  (2452, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setDuplex',2}}] )
	    -| ['compiler_generated'] )
	end
'setNoCopies'/2 =
    %% Line 178
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},V>
	      when %% Line 179
		call 'erlang':'is_integer'
		    (V) ->
	      do  %% Line 180
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 182
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<V>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 181
		      call 'wxe_util':'cast'
			  (2453, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setNoCopies',2}}] )
	    -| ['compiler_generated'] )
	end
'setOrientation'/2 =
    %% Line 187
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Orient>
	      when %% Line 188
		call 'erlang':'is_integer'
		    (Orient) ->
	      do  %% Line 189
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 191
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Orient>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 190
		      call 'wxe_util':'cast'
			  (2454, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setOrientation',2}}] )
	    -| ['compiler_generated'] )
	end
'setPaperId'/2 =
    %% Line 197
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},SizeId>
	      when %% Line 198
		call 'erlang':'is_integer'
		    (SizeId) ->
	      do  %% Line 199
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 201
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<SizeId>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 200
		      call 'wxe_util':'cast'
			  (2455, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setPaperId',2}}] )
	    -| ['compiler_generated'] )
	end
'setPrinterName'/2 =
    %% Line 206
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Name>
	      when %% Line 207
		call 'erlang':'is_list'
		    (Name) ->
	      do  %% Line 208
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Name_UC> =
		      %% Line 209
		      call 'unicode':'characters_to_binary'
			  ([Name|[0]])
		  in  let <_cor10> =
			  %% Line 211
			  call 'erlang':'byte_size'
			      (Name_UC)
		      in  let <_cor5> =
			      %% Line 211
			      call 'erlang':'byte_size'
				  (Name_UC)
			  in  let <_cor6> =
				  %% Line 211
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 211
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 211
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 211
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 211
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Name_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 210
						  call 'wxe_util':'cast'
						      (2456, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setPrinterName',2}}] )
	    -| ['compiler_generated'] )
	end
'setQuality'/2 =
    %% Line 216
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Quality>
	      when %% Line 217
		call 'erlang':'is_integer'
		    (Quality) ->
	      do  %% Line 218
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 220
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Quality>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 219
		      call 'wxe_util':'cast'
			  (2457, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setQuality',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 224
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 225
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxPrintData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxPrintData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 226
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 227
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxPrintData')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxPrintData', _cor0)
end