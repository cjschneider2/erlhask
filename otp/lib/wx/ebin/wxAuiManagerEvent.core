module 'wxAuiManagerEvent' ['canVeto'/1,
			    'getButton'/1,
			    'getDC'/1,
			    'getId'/1,
			    'getManager'/1,
			    'getPane'/1,
			    'getSkipped'/1,
			    'getTimestamp'/1,
			    'getVeto'/1,
			    'isCommandEvent'/1,
			    'module_info'/0,
			    'module_info'/1,
			    'parent_class'/1,
			    'resumePropagation'/2,
			    'setButton'/2,
			    'setCanVeto'/2,
			    'setDC'/2,
			    'setManager'/2,
			    'setPane'/2,
			    'shouldPropagate'/1,
			    'skip'/1,
			    'skip'/2,
			    'stopPropagation'/1,
			    'veto'/1,
			    'veto'/2]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 41
		'export_type' =
		    %% Line 41
		    [{'wxAuiManagerEvent',0}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{'wxAuiManagerEvent',{'remote_type',46,[{'atom',46,'wx'}|[{'atom',46,'wx_object'}|[[]]]]},[]}],
		%% Line 48
		'spec' =
		    %% Line 48
		    [{{'setManager',2},[{'type',48,'bounded_fun',[{'type',48,'fun',[{'type',48,'product',[{'var',48,'This'}|[{'var',48,'Mgr'}]]}|[{'atom',48,'ok'}]]}|[[{'type',49,'constraint',[{'atom',49,'is_subtype'}|[[{'var',49,'This'}|[{'type',49,'wxAuiManagerEvent',[]}]]]]}|[{'type',49,'constraint',[{'atom',49,'is_subtype'}|[[{'var',49,'Mgr'}|[{'remote_type',49,[{'atom',49,'wxAuiManager'}|[{'atom',49,'wxAuiManager'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 57
		'spec' =
		    %% Line 57
		    [{{'getManager',1},[{'type',57,'bounded_fun',[{'type',57,'fun',[{'type',57,'product',[{'var',57,'This'}]}|[{'remote_type',57,[{'atom',57,'wxAuiManager'}|[{'atom',57,'wxAuiManager'}|[[]]]]}]]}|[[{'type',58,'constraint',[{'atom',58,'is_subtype'}|[[{'var',58,'This'}|[{'type',58,'wxAuiManagerEvent',[]}]]]]}]]]}]}],
		%% Line 65
		'spec' =
		    %% Line 65
		    [{{'setPane',2},[{'type',65,'bounded_fun',[{'type',65,'fun',[{'type',65,'product',[{'var',65,'This'}|[{'var',65,'P'}]]}|[{'atom',65,'ok'}]]}|[[{'type',66,'constraint',[{'atom',66,'is_subtype'}|[[{'var',66,'This'}|[{'type',66,'wxAuiManagerEvent',[]}]]]]}|[{'type',66,'constraint',[{'atom',66,'is_subtype'}|[[{'var',66,'P'}|[{'remote_type',66,[{'atom',66,'wxAuiPaneInfo'}|[{'atom',66,'wxAuiPaneInfo'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 74
		'spec' =
		    %% Line 74
		    [{{'getPane',1},[{'type',74,'bounded_fun',[{'type',74,'fun',[{'type',74,'product',[{'var',74,'This'}]}|[{'remote_type',74,[{'atom',74,'wxAuiPaneInfo'}|[{'atom',74,'wxAuiPaneInfo'}|[[]]]]}]]}|[[{'type',75,'constraint',[{'atom',75,'is_subtype'}|[[{'var',75,'This'}|[{'type',75,'wxAuiManagerEvent',[]}]]]]}]]]}]}],
		%% Line 82
		'spec' =
		    %% Line 82
		    [{{'setButton',2},[{'type',82,'bounded_fun',[{'type',82,'fun',[{'type',82,'product',[{'var',82,'This'}|[{'var',82,'B'}]]}|[{'atom',82,'ok'}]]}|[[{'type',83,'constraint',[{'atom',83,'is_subtype'}|[[{'var',83,'This'}|[{'type',83,'wxAuiManagerEvent',[]}]]]]}|[{'type',83,'constraint',[{'atom',83,'is_subtype'}|[[{'var',83,'B'}|[{'type',83,'integer',[]}]]]]}]]]]}]}],
		%% Line 91
		'spec' =
		    %% Line 91
		    [{{'getButton',1},[{'type',91,'bounded_fun',[{'type',91,'fun',[{'type',91,'product',[{'var',91,'This'}]}|[{'type',91,'integer',[]}]]}|[[{'type',92,'constraint',[{'atom',92,'is_subtype'}|[[{'var',92,'This'}|[{'type',92,'wxAuiManagerEvent',[]}]]]]}]]]}]}],
		%% Line 99
		'spec' =
		    %% Line 99
		    [{{'setDC',2},[{'type',99,'bounded_fun',[{'type',99,'fun',[{'type',99,'product',[{'var',99,'This'}|[{'var',99,'Pdc'}]]}|[{'atom',99,'ok'}]]}|[[{'type',100,'constraint',[{'atom',100,'is_subtype'}|[[{'var',100,'This'}|[{'type',100,'wxAuiManagerEvent',[]}]]]]}|[{'type',100,'constraint',[{'atom',100,'is_subtype'}|[[{'var',100,'Pdc'}|[{'remote_type',100,[{'atom',100,'wxDC'}|[{'atom',100,'wxDC'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 108
		'spec' =
		    %% Line 108
		    [{{'getDC',1},[{'type',108,'bounded_fun',[{'type',108,'fun',[{'type',108,'product',[{'var',108,'This'}]}|[{'remote_type',108,[{'atom',108,'wxDC'}|[{'atom',108,'wxDC'}|[[]]]]}]]}|[[{'type',109,'constraint',[{'atom',109,'is_subtype'}|[[{'var',109,'This'}|[{'type',109,'wxAuiManagerEvent',[]}]]]]}]]]}]}],
		%% Line 116
		'spec' =
		    %% Line 116
		    [{{'veto',1},[{'type',116,'bounded_fun',[{'type',116,'fun',[{'type',116,'product',[{'var',116,'This'}]}|[{'atom',116,'ok'}]]}|[[{'type',117,'constraint',[{'atom',117,'is_subtype'}|[[{'var',117,'This'}|[{'type',117,'wxAuiManagerEvent',[]}]]]]}]]]}]}],
		%% Line 124
		'spec' =
		    %% Line 124
		    [{{'veto',2},[{'type',124,'bounded_fun',[{'type',124,'fun',[{'type',124,'product',[{'var',124,'This'}|[{'type',124,'list',[{'var',124,'Option'}]}]]}|[{'atom',124,'ok'}]]}|[[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'This'}|[{'type',125,'wxAuiManagerEvent',[]}]]]]}|[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'Option'}|[{'type',126,'tuple',[{'atom',126,'veto'}|[{'type',126,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 137
		'spec' =
		    %% Line 137
		    [{{'getVeto',1},[{'type',137,'bounded_fun',[{'type',137,'fun',[{'type',137,'product',[{'var',137,'This'}]}|[{'type',137,'boolean',[]}]]}|[[{'type',138,'constraint',[{'atom',138,'is_subtype'}|[[{'var',138,'This'}|[{'type',138,'wxAuiManagerEvent',[]}]]]]}]]]}]}],
		%% Line 145
		'spec' =
		    %% Line 145
		    [{{'setCanVeto',2},[{'type',145,'bounded_fun',[{'type',145,'fun',[{'type',145,'product',[{'var',145,'This'}|[{'var',145,'Can_veto'}]]}|[{'atom',145,'ok'}]]}|[[{'type',146,'constraint',[{'atom',146,'is_subtype'}|[[{'var',146,'This'}|[{'type',146,'wxAuiManagerEvent',[]}]]]]}|[{'type',146,'constraint',[{'atom',146,'is_subtype'}|[[{'var',146,'Can_veto'}|[{'type',146,'boolean',[]}]]]]}]]]]}]}],
		%% Line 154
		'spec' =
		    %% Line 154
		    [{{'canVeto',1},[{'type',154,'bounded_fun',[{'type',154,'fun',[{'type',154,'product',[{'var',154,'This'}]}|[{'type',154,'boolean',[]}]]}|[[{'type',155,'constraint',[{'atom',155,'is_subtype'}|[[{'var',155,'This'}|[{'type',155,'wxAuiManagerEvent',[]}]]]]}]]]}]}]]
'parent_class'/1 =
    %% Line 43
    fun (_cor0) ->
	case _cor0 of
	  <'wxEvent'> when 'true' ->
	      'true'
	  %% Line 44
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxAuiManagerEvent'})
	end
'setManager'/2 =
    %% Line 50
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',MgrRef,MgrT,_cor10}> when 'true' ->
	      do  %% Line 51
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManagerEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManagerEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 52
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (MgrT,
				       'wxAuiManager') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call MgrT:'parent_class'
				    ('wxAuiManager')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 54
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<MgrRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 53
			  call 'wxe_util':'cast'
			      (3509, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setManager',2}}] )
	    -| ['compiler_generated'] )
	end
'getManager'/1 =
    %% Line 59
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 60
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManagerEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManagerEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 62
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 61
		      call 'wxe_util':'call'
			  (3510, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getManager',1}}] )
	    -| ['compiler_generated'] )
	end
'setPane'/2 =
    %% Line 67
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',PRef,PT,_cor10}> when 'true' ->
	      do  %% Line 68
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManagerEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManagerEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 69
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (PT,
				       'wxAuiPaneInfo') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call PT:'parent_class'
				    ('wxAuiPaneInfo')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 71
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<PRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 70
			  call 'wxe_util':'cast'
			      (3511, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setPane',2}}] )
	    -| ['compiler_generated'] )
	end
'getPane'/1 =
    %% Line 76
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 77
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManagerEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManagerEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 79
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 78
		      call 'wxe_util':'call'
			  (3512, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPane',1}}] )
	    -| ['compiler_generated'] )
	end
'setButton'/2 =
    %% Line 84
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},B>
	      when %% Line 85
		call 'erlang':'is_integer'
		    (B) ->
	      do  %% Line 86
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManagerEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManagerEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 88
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<B>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 87
		      call 'wxe_util':'cast'
			  (3513, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setButton',2}}] )
	    -| ['compiler_generated'] )
	end
'getButton'/1 =
    %% Line 93
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 94
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManagerEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManagerEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 96
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 95
		      call 'wxe_util':'call'
			  (3514, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getButton',1}}] )
	    -| ['compiler_generated'] )
	end
'setDC'/2 =
    %% Line 101
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',PdcRef,PdcT,_cor10}> when 'true' ->
	      do  %% Line 102
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManagerEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManagerEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 103
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (PdcT,
				       'wxDC') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call PdcT:'parent_class'
				    ('wxDC')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 105
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<PdcRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 104
			  call 'wxe_util':'cast'
			      (3515, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setDC',2}}] )
	    -| ['compiler_generated'] )
	end
'getDC'/1 =
    %% Line 110
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 111
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManagerEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManagerEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 113
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 112
		      call 'wxe_util':'call'
			  (3516, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getDC',1}}] )
	    -| ['compiler_generated'] )
	end
'veto'/1 =
    %% Line 119
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 120
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 121
	      apply 'veto'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'veto',1}}] )
	    -| ['compiler_generated'] )
	end
'veto'/2 =
    %% Line 127
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 128
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 129
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManagerEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManagerEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 130
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'veto',Veto},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Veto)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 131
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-veto/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 132
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 132
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 134
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 133
				  call 'wxe_util':'cast'
				      (3517, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'veto',2}}] )
	    -| ['compiler_generated'] )
	end
'getVeto'/1 =
    %% Line 139
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 140
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManagerEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManagerEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 142
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 141
		      call 'wxe_util':'call'
			  (3518, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getVeto',1}}] )
	    -| ['compiler_generated'] )
	end
'setCanVeto'/2 =
    %% Line 147
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Can_veto>
	      when %% Line 148
		call 'erlang':'is_boolean'
		    (Can_veto) ->
	      do  %% Line 149
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManagerEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManagerEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 151
		      call 'wxe_util':'from_bool'
			  (Can_veto)
		  in  let <_cor5> =
			  %% Line 151
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 150
			  call 'wxe_util':'cast'
			      (3519, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setCanVeto',2}}] )
	    -| ['compiler_generated'] )
	end
'canVeto'/1 =
    %% Line 156
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 157
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManagerEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManagerEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 159
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 158
		      call 'wxe_util':'call'
			  (3520, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'canVeto',1}}] )
	    -| ['compiler_generated'] )
	end
'stopPropagation'/1 =
    %% Line 163
    fun (_cor0) ->
	call 'wxEvent':'stopPropagation'
	    (_cor0)
'skip'/2 =
    %% Line 165
    fun (_cor1,_cor0) ->
	call 'wxEvent':'skip'
	    (_cor1, _cor0)
'skip'/1 =
    %% Line 167
    fun (_cor0) ->
	call 'wxEvent':'skip'
	    (_cor0)
'shouldPropagate'/1 =
    %% Line 169
    fun (_cor0) ->
	call 'wxEvent':'shouldPropagate'
	    (_cor0)
'resumePropagation'/2 =
    %% Line 171
    fun (_cor1,_cor0) ->
	call 'wxEvent':'resumePropagation'
	    (_cor1, _cor0)
'isCommandEvent'/1 =
    %% Line 173
    fun (_cor0) ->
	call 'wxEvent':'isCommandEvent'
	    (_cor0)
'getTimestamp'/1 =
    %% Line 175
    fun (_cor0) ->
	call 'wxEvent':'getTimestamp'
	    (_cor0)
'getSkipped'/1 =
    %% Line 177
    fun (_cor0) ->
	call 'wxEvent':'getSkipped'
	    (_cor0)
'getId'/1 =
    %% Line 179
    fun (_cor0) ->
	call 'wxEvent':'getId'
	    (_cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxAuiManagerEvent')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxAuiManagerEvent', _cor0)
end