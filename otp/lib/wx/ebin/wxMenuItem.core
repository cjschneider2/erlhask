module 'wxMenuItem' ['check'/1,
		     'check'/2,
		     'destroy'/1,
		     'enable'/1,
		     'enable'/2,
		     'getBitmap'/1,
		     'getHelp'/1,
		     'getId'/1,
		     'getKind'/1,
		     'getLabel'/1,
		     'getLabelFromText'/1,
		     'getMenu'/1,
		     'getSubMenu'/1,
		     'getText'/1,
		     'isCheckable'/1,
		     'isChecked'/1,
		     'isEnabled'/1,
		     'isSeparator'/1,
		     'isSubMenu'/1,
		     'module_info'/0,
		     'module_info'/1,
		     'new'/0,
		     'new'/1,
		     'parent_class'/1,
		     'setBitmap'/2,
		     'setHelp'/2,
		     'setMenu'/2,
		     'setSubMenu'/2,
		     'setText'/2]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 35
		'export_type' =
		    %% Line 35
		    [{'wxMenuItem',0}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{'wxMenuItem',{'remote_type',39,[{'atom',39,'wx'}|[{'atom',39,'wx_object'}|[[]]]]},[]}],
		%% Line 41
		'spec' =
		    %% Line 41
		    [{{'new',0},[{'type',41,'fun',[{'type',41,'product',[]}|[{'type',41,'wxMenuItem',[]}]]}]}],
		%% Line 48
		'spec' =
		    %% Line 48
		    [{{'new',1},[{'type',48,'bounded_fun',[{'type',48,'fun',[{'type',48,'product',[{'type',48,'list',[{'var',48,'Option'}]}]}|[{'type',48,'wxMenuItem',[]}]]}|[[{'type',49,'constraint',[{'atom',49,'is_subtype'}|[[{'var',49,'Option'}|[{'type',49,'union',[{'type',49,'tuple',[{'atom',49,'parentMenu'}|[{'remote_type',49,[{'atom',49,'wxMenu'}|[{'atom',49,'wxMenu'}|[[]]]]}]]}|[{'type',50,'tuple',[{'atom',50,'id'}|[{'type',50,'integer',[]}]]}|[{'type',51,'tuple',[{'atom',51,'text'}|[{'remote_type',51,[{'atom',51,'unicode'}|[{'atom',51,'chardata'}|[[]]]]}]]}|[{'type',52,'tuple',[{'atom',52,'help'}|[{'remote_type',52,[{'atom',52,'unicode'}|[{'atom',52,'chardata'}|[[]]]]}]]}|[{'type',53,'tuple',[{'atom',53,'kind'}|[{'remote_type',53,[{'atom',53,'wx'}|[{'atom',53,'wx_enum'}|[[]]]]}]]}|[{'type',54,'tuple',[{'atom',54,'subMenu'}|[{'remote_type',54,[{'atom',54,'wxMenu'}|[{'atom',54,'wxMenu'}|[[]]]]}]]}]]]]]]}]]]]}]]]}]}],
		%% Line 69
		'spec' =
		    %% Line 69
		    [{{'check',1},[{'type',69,'bounded_fun',[{'type',69,'fun',[{'type',69,'product',[{'var',69,'This'}]}|[{'atom',69,'ok'}]]}|[[{'type',70,'constraint',[{'atom',70,'is_subtype'}|[[{'var',70,'This'}|[{'type',70,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 77
		'spec' =
		    %% Line 77
		    [{{'check',2},[{'type',77,'bounded_fun',[{'type',77,'fun',[{'type',77,'product',[{'var',77,'This'}|[{'type',77,'list',[{'var',77,'Option'}]}]]}|[{'atom',77,'ok'}]]}|[[{'type',78,'constraint',[{'atom',78,'is_subtype'}|[[{'var',78,'This'}|[{'type',78,'wxMenuItem',[]}]]]]}|[{'type',79,'constraint',[{'atom',79,'is_subtype'}|[[{'var',79,'Option'}|[{'type',79,'tuple',[{'atom',79,'check'}|[{'type',79,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 90
		'spec' =
		    %% Line 90
		    [{{'enable',1},[{'type',90,'bounded_fun',[{'type',90,'fun',[{'type',90,'product',[{'var',90,'This'}]}|[{'atom',90,'ok'}]]}|[[{'type',91,'constraint',[{'atom',91,'is_subtype'}|[[{'var',91,'This'}|[{'type',91,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 98
		'spec' =
		    %% Line 98
		    [{{'enable',2},[{'type',98,'bounded_fun',[{'type',98,'fun',[{'type',98,'product',[{'var',98,'This'}|[{'type',98,'list',[{'var',98,'Option'}]}]]}|[{'atom',98,'ok'}]]}|[[{'type',99,'constraint',[{'atom',99,'is_subtype'}|[[{'var',99,'This'}|[{'type',99,'wxMenuItem',[]}]]]]}|[{'type',100,'constraint',[{'atom',100,'is_subtype'}|[[{'var',100,'Option'}|[{'type',100,'tuple',[{'atom',100,'enable'}|[{'type',100,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 111
		'spec' =
		    %% Line 111
		    [{{'getBitmap',1},[{'type',111,'bounded_fun',[{'type',111,'fun',[{'type',111,'product',[{'var',111,'This'}]}|[{'remote_type',111,[{'atom',111,'wxBitmap'}|[{'atom',111,'wxBitmap'}|[[]]]]}]]}|[[{'type',112,'constraint',[{'atom',112,'is_subtype'}|[[{'var',112,'This'}|[{'type',112,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 119
		'spec' =
		    %% Line 119
		    [{{'getHelp',1},[{'type',119,'bounded_fun',[{'type',119,'fun',[{'type',119,'product',[{'var',119,'This'}]}|[{'remote_type',119,[{'atom',119,'unicode'}|[{'atom',119,'charlist'}|[[]]]]}]]}|[[{'type',120,'constraint',[{'atom',120,'is_subtype'}|[[{'var',120,'This'}|[{'type',120,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 127
		'spec' =
		    %% Line 127
		    [{{'getId',1},[{'type',127,'bounded_fun',[{'type',127,'fun',[{'type',127,'product',[{'var',127,'This'}]}|[{'type',127,'integer',[]}]]}|[[{'type',128,'constraint',[{'atom',128,'is_subtype'}|[[{'var',128,'This'}|[{'type',128,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 136
		'spec' =
		    %% Line 136
		    [{{'getKind',1},[{'type',136,'bounded_fun',[{'type',136,'fun',[{'type',136,'product',[{'var',136,'This'}]}|[{'remote_type',136,[{'atom',136,'wx'}|[{'atom',136,'wx_enum'}|[[]]]]}]]}|[[{'type',137,'constraint',[{'atom',137,'is_subtype'}|[[{'var',137,'This'}|[{'type',137,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 144
		'spec' =
		    %% Line 144
		    [{{'getLabel',1},[{'type',144,'bounded_fun',[{'type',144,'fun',[{'type',144,'product',[{'var',144,'This'}]}|[{'remote_type',144,[{'atom',144,'unicode'}|[{'atom',144,'charlist'}|[[]]]]}]]}|[[{'type',145,'constraint',[{'atom',145,'is_subtype'}|[[{'var',145,'This'}|[{'type',145,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 152
		'spec' =
		    %% Line 152
		    [{{'getLabelFromText',1},[{'type',152,'bounded_fun',[{'type',152,'fun',[{'type',152,'product',[{'var',152,'Text'}]}|[{'remote_type',152,[{'atom',152,'unicode'}|[{'atom',152,'charlist'}|[[]]]]}]]}|[[{'type',153,'constraint',[{'atom',153,'is_subtype'}|[[{'var',153,'Text'}|[{'remote_type',153,[{'atom',153,'unicode'}|[{'atom',153,'chardata'}|[[]]]]}]]]]}]]]}]}],
		%% Line 161
		'spec' =
		    %% Line 161
		    [{{'getMenu',1},[{'type',161,'bounded_fun',[{'type',161,'fun',[{'type',161,'product',[{'var',161,'This'}]}|[{'remote_type',161,[{'atom',161,'wxMenu'}|[{'atom',161,'wxMenu'}|[[]]]]}]]}|[[{'type',162,'constraint',[{'atom',162,'is_subtype'}|[[{'var',162,'This'}|[{'type',162,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 169
		'spec' =
		    %% Line 169
		    [{{'getText',1},[{'type',169,'bounded_fun',[{'type',169,'fun',[{'type',169,'product',[{'var',169,'This'}]}|[{'remote_type',169,[{'atom',169,'unicode'}|[{'atom',169,'charlist'}|[[]]]]}]]}|[[{'type',170,'constraint',[{'atom',170,'is_subtype'}|[[{'var',170,'This'}|[{'type',170,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 177
		'spec' =
		    %% Line 177
		    [{{'getSubMenu',1},[{'type',177,'bounded_fun',[{'type',177,'fun',[{'type',177,'product',[{'var',177,'This'}]}|[{'remote_type',177,[{'atom',177,'wxMenu'}|[{'atom',177,'wxMenu'}|[[]]]]}]]}|[[{'type',178,'constraint',[{'atom',178,'is_subtype'}|[[{'var',178,'This'}|[{'type',178,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 185
		'spec' =
		    %% Line 185
		    [{{'isCheckable',1},[{'type',185,'bounded_fun',[{'type',185,'fun',[{'type',185,'product',[{'var',185,'This'}]}|[{'type',185,'boolean',[]}]]}|[[{'type',186,'constraint',[{'atom',186,'is_subtype'}|[[{'var',186,'This'}|[{'type',186,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 193
		'spec' =
		    %% Line 193
		    [{{'isChecked',1},[{'type',193,'bounded_fun',[{'type',193,'fun',[{'type',193,'product',[{'var',193,'This'}]}|[{'type',193,'boolean',[]}]]}|[[{'type',194,'constraint',[{'atom',194,'is_subtype'}|[[{'var',194,'This'}|[{'type',194,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 201
		'spec' =
		    %% Line 201
		    [{{'isEnabled',1},[{'type',201,'bounded_fun',[{'type',201,'fun',[{'type',201,'product',[{'var',201,'This'}]}|[{'type',201,'boolean',[]}]]}|[[{'type',202,'constraint',[{'atom',202,'is_subtype'}|[[{'var',202,'This'}|[{'type',202,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 209
		'spec' =
		    %% Line 209
		    [{{'isSeparator',1},[{'type',209,'bounded_fun',[{'type',209,'fun',[{'type',209,'product',[{'var',209,'This'}]}|[{'type',209,'boolean',[]}]]}|[[{'type',210,'constraint',[{'atom',210,'is_subtype'}|[[{'var',210,'This'}|[{'type',210,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 217
		'spec' =
		    %% Line 217
		    [{{'isSubMenu',1},[{'type',217,'bounded_fun',[{'type',217,'fun',[{'type',217,'product',[{'var',217,'This'}]}|[{'type',217,'boolean',[]}]]}|[[{'type',218,'constraint',[{'atom',218,'is_subtype'}|[[{'var',218,'This'}|[{'type',218,'wxMenuItem',[]}]]]]}]]]}]}],
		%% Line 225
		'spec' =
		    %% Line 225
		    [{{'setBitmap',2},[{'type',225,'bounded_fun',[{'type',225,'fun',[{'type',225,'product',[{'var',225,'This'}|[{'var',225,'Bitmap'}]]}|[{'atom',225,'ok'}]]}|[[{'type',226,'constraint',[{'atom',226,'is_subtype'}|[[{'var',226,'This'}|[{'type',226,'wxMenuItem',[]}]]]]}|[{'type',226,'constraint',[{'atom',226,'is_subtype'}|[[{'var',226,'Bitmap'}|[{'remote_type',226,[{'atom',226,'wxBitmap'}|[{'atom',226,'wxBitmap'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 234
		'spec' =
		    %% Line 234
		    [{{'setHelp',2},[{'type',234,'bounded_fun',[{'type',234,'fun',[{'type',234,'product',[{'var',234,'This'}|[{'var',234,'Str'}]]}|[{'atom',234,'ok'}]]}|[[{'type',235,'constraint',[{'atom',235,'is_subtype'}|[[{'var',235,'This'}|[{'type',235,'wxMenuItem',[]}]]]]}|[{'type',235,'constraint',[{'atom',235,'is_subtype'}|[[{'var',235,'Str'}|[{'remote_type',235,[{'atom',235,'unicode'}|[{'atom',235,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 244
		'spec' =
		    %% Line 244
		    [{{'setMenu',2},[{'type',244,'bounded_fun',[{'type',244,'fun',[{'type',244,'product',[{'var',244,'This'}|[{'var',244,'Menu'}]]}|[{'atom',244,'ok'}]]}|[[{'type',245,'constraint',[{'atom',245,'is_subtype'}|[[{'var',245,'This'}|[{'type',245,'wxMenuItem',[]}]]]]}|[{'type',245,'constraint',[{'atom',245,'is_subtype'}|[[{'var',245,'Menu'}|[{'remote_type',245,[{'atom',245,'wxMenu'}|[{'atom',245,'wxMenu'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 253
		'spec' =
		    %% Line 253
		    [{{'setSubMenu',2},[{'type',253,'bounded_fun',[{'type',253,'fun',[{'type',253,'product',[{'var',253,'This'}|[{'var',253,'Menu'}]]}|[{'atom',253,'ok'}]]}|[[{'type',254,'constraint',[{'atom',254,'is_subtype'}|[[{'var',254,'This'}|[{'type',254,'wxMenuItem',[]}]]]]}|[{'type',254,'constraint',[{'atom',254,'is_subtype'}|[[{'var',254,'Menu'}|[{'remote_type',254,[{'atom',254,'wxMenu'}|[{'atom',254,'wxMenu'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 262
		'spec' =
		    %% Line 262
		    [{{'setText',2},[{'type',262,'bounded_fun',[{'type',262,'fun',[{'type',262,'product',[{'var',262,'This'}|[{'var',262,'Str'}]]}|[{'atom',262,'ok'}]]}|[[{'type',263,'constraint',[{'atom',263,'is_subtype'}|[[{'var',263,'This'}|[{'type',263,'wxMenuItem',[]}]]]]}|[{'type',263,'constraint',[{'atom',263,'is_subtype'}|[[{'var',263,'Str'}|[{'remote_type',263,[{'atom',263,'unicode'}|[{'atom',263,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 272
		'spec' =
		    %% Line 272
		    [{{'destroy',1},[{'type',272,'fun',[{'type',272,'product',[{'ann_type',272,[{'var',272,'This'}|[{'type',272,'wxMenuItem',[]}]]}]}|[{'atom',272,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 37
    fun (_cor0) ->
	call 'erlang':'error'
	    ({'badtype','wxMenuItem'})
'new'/0 =
    %% Line 43
    fun () ->
	%% Line 44
	apply 'new'/1
	    ([])
'new'/1 =
    %% Line 55
    fun (_cor0) ->
	case _cor0 of
	  <Options>
	      when %% Line 56
		call 'erlang':'is_list'
		    (_cor0) ->
	      let <MOpts> =
		  %% Line 57
		  ( fun (_cor26,_cor25) ->
			case <_cor26,_cor25> of
			  <{'parentMenu',{'wx_ref',ParentMenuRef,ParentMenuT,_cor34}},Acc> when 'true' ->
			      do  ( case <> of
				      ( <>
					    when call 'erlang':'=:='
						  (ParentMenuT,
						   'wxMenu') ->
					    'ok'
					-| ['compiler_generated'] )
				      ( <> when 'true' ->
					    call ParentMenuT:'parent_class'
						('wxMenu')
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
				  let <_cor3> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<ParentMenuRef>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor3|Acc]
			  %% Line 58
			  <{'id',Id},Acc> when 'true' ->
			      let <_cor4> =
				  #{#<2>(32,1,'integer',['unsigned'|['native']]),
				    #<Id>(32,1,'integer',['unsigned'|['native']])}#
			      in  [_cor4|Acc]
			  %% Line 59
			  <{'text',Text},Acc> when 'true' ->
			      let <Text_UC> =
				  call 'unicode':'characters_to_binary'
				      ([Text|[0]])
			      in  let <_cor11> =
				      call 'erlang':'byte_size'
					  (Text_UC)
				  in  let <_cor6> =
					  call 'erlang':'byte_size'
					      (Text_UC)
				      in  let <_cor7> =
					      call 'erlang':'+'
						  (0, _cor6)
					  in  let <_cor8> =
						  call 'erlang':'band'
						      (_cor7, 7)
					      in  let <_cor9> =
						      call 'erlang':'-'
							  (8, _cor8)
						  in  let <_cor10> =
							  call 'erlang':'band'
							      (_cor9, 7)
						      in  let <_cor12> =
							      #{#<3>(32,1,'integer',['unsigned'|['native']]),
								#<_cor11>(32,1,'integer',['unsigned'|['native']]),
								#<Text_UC>('all',8,'binary',['unsigned'|['big']]),
								#<0>(_cor10,8,'integer',['unsigned'|['big']])}#
							  in  [_cor12|Acc]
			  %% Line 60
			  <{'help',Help},Acc> when 'true' ->
			      let <Help_UC> =
				  call 'unicode':'characters_to_binary'
				      ([Help|[0]])
			      in  let <_cor19> =
				      call 'erlang':'byte_size'
					  (Help_UC)
				  in  let <_cor14> =
					  call 'erlang':'byte_size'
					      (Help_UC)
				      in  let <_cor15> =
					      call 'erlang':'+'
						  (0, _cor14)
					  in  let <_cor16> =
						  call 'erlang':'band'
						      (_cor15, 7)
					      in  let <_cor17> =
						      call 'erlang':'-'
							  (8, _cor16)
						  in  let <_cor18> =
							  call 'erlang':'band'
							      (_cor17, 7)
						      in  let <_cor20> =
							      #{#<4>(32,1,'integer',['unsigned'|['native']]),
								#<_cor19>(32,1,'integer',['unsigned'|['native']]),
								#<Help_UC>('all',8,'binary',['unsigned'|['big']]),
								#<0>(_cor18,8,'integer',['unsigned'|['big']])}#
							  in  [_cor20|Acc]
			  %% Line 61
			  <{'kind',Kind},Acc> when 'true' ->
			      let <_cor21> =
				  #{#<5>(32,1,'integer',['unsigned'|['native']]),
				    #<Kind>(32,1,'integer',['unsigned'|['native']])}#
			      in  [_cor21|Acc]
			  %% Line 62
			  <{'subMenu',{'wx_ref',SubMenuRef,SubMenuT,_cor35}},Acc> when 'true' ->
			      do  ( case <> of
				      ( <>
					    when call 'erlang':'=:='
						  (SubMenuT,
						   'wxMenu') ->
					    'ok'
					-| ['compiler_generated'] )
				      ( <> when 'true' ->
					    call SubMenuT:'parent_class'
						('wxMenu')
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
				  let <_cor24> =
				      #{#<6>(32,1,'integer',['unsigned'|['native']]),
					#<SubMenuRef>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor24|Acc]
			  %% Line 63
			  <BadOpt,_cor36> when 'true' ->
			      call 'erlang':'error'
				  ({'badoption',BadOpt})
			end
		    -| [{'id',{0,0,'-new/1-fun-0-'}}] )
	      in  let <_cor30> =
		      %% Line 64
		      call 'lists':'foldl'
			  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		  in  let <BinOpt> =
			  %% Line 64
			  call 'erlang':'list_to_binary'
			      (_cor30)
		      in  let <_cor32> =
			      %% Line 66
			      #{#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			  in  %% Line 65
			      call 'wxe_util':'construct'
				  (950, _cor32)
	  ( <_cor33> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor33})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'check'/1 =
    %% Line 72
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 73
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 74
	      apply 'check'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'check',1}}] )
	    -| ['compiler_generated'] )
	end
'check'/2 =
    %% Line 80
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 81
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 82
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 83
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'check',Check},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Check)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 84
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-check/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 85
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 85
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 87
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 86
				  call 'wxe_util':'cast'
				      (953, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'check',2}}] )
	    -| ['compiler_generated'] )
	end
'enable'/1 =
    %% Line 93
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 94
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 95
	      apply 'enable'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'enable',1}}] )
	    -| ['compiler_generated'] )
	end
'enable'/2 =
    %% Line 101
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 102
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 103
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 104
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'enable',Enable},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Enable)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 105
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-enable/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 106
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 106
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 108
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 107
				  call 'wxe_util':'cast'
				      (954, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'enable',2}}] )
	    -| ['compiler_generated'] )
	end
'getBitmap'/1 =
    %% Line 113
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 114
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 116
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 115
		      call 'wxe_util':'call'
			  (955, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getBitmap',1}}] )
	    -| ['compiler_generated'] )
	end
'getHelp'/1 =
    %% Line 121
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 122
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 124
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 123
		      call 'wxe_util':'call'
			  (956, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getHelp',1}}] )
	    -| ['compiler_generated'] )
	end
'getId'/1 =
    %% Line 129
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 130
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 132
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 131
		      call 'wxe_util':'call'
			  (957, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getId',1}}] )
	    -| ['compiler_generated'] )
	end
'getKind'/1 =
    %% Line 138
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 139
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 141
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 140
		      call 'wxe_util':'call'
			  (958, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getKind',1}}] )
	    -| ['compiler_generated'] )
	end
'getLabel'/1 =
    %% Line 146
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 147
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 149
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 148
		      call 'wxe_util':'call'
			  (959, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLabel',1}}] )
	    -| ['compiler_generated'] )
	end
'getLabelFromText'/1 =
    %% Line 154
    fun (_cor0) ->
	case _cor0 of
	  <Text>
	      when %% Line 155
		call 'erlang':'is_list'
		    (_cor0) ->
	      let <Text_UC> =
		  %% Line 156
		  call 'unicode':'characters_to_binary'
		      ([Text|[0]])
	      in  let <_cor7> =
		      %% Line 158
		      call 'erlang':'byte_size'
			  (Text_UC)
		  in  let <_cor2> =
			  %% Line 158
			  call 'erlang':'byte_size'
			      (Text_UC)
		      in  let <_cor3> =
			      %% Line 158
			      call 'erlang':'+'
				  (4, _cor2)
			  in  let <_cor4> =
				  %% Line 158
				  call 'erlang':'band'
				      (_cor3, 7)
			      in  let <_cor5> =
				      %% Line 158
				      call 'erlang':'-'
					  (8, _cor4)
				  in  let <_cor6> =
					  %% Line 158
					  call 'erlang':'band'
					      (_cor5, 7)
				      in  let <_cor8> =
					      %% Line 158
					      #{#<_cor7>(32,1,'integer',['unsigned'|['native']]),
						#<Text_UC>('all',8,'binary',['unsigned'|['big']]),
						#<0>(_cor6,8,'integer',['unsigned'|['big']])}#
					  in  %% Line 157
					      call 'wxe_util':'call'
						  (960, _cor8)
	  ( <_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9})
		  -| [{'function_name',{'getLabelFromText',1}}] )
	    -| ['compiler_generated'] )
	end
'getMenu'/1 =
    %% Line 163
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 164
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 166
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 165
		      call 'wxe_util':'call'
			  (961, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getMenu',1}}] )
	    -| ['compiler_generated'] )
	end
'getText'/1 =
    %% Line 171
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 172
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 174
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 173
		      call 'wxe_util':'call'
			  (962, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getText',1}}] )
	    -| ['compiler_generated'] )
	end
'getSubMenu'/1 =
    %% Line 179
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 180
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 182
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 181
		      call 'wxe_util':'call'
			  (963, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSubMenu',1}}] )
	    -| ['compiler_generated'] )
	end
'isCheckable'/1 =
    %% Line 187
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 188
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 190
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 189
		      call 'wxe_util':'call'
			  (964, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isCheckable',1}}] )
	    -| ['compiler_generated'] )
	end
'isChecked'/1 =
    %% Line 195
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 196
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 198
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 197
		      call 'wxe_util':'call'
			  (965, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isChecked',1}}] )
	    -| ['compiler_generated'] )
	end
'isEnabled'/1 =
    %% Line 203
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 204
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 206
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 205
		      call 'wxe_util':'call'
			  (966, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isEnabled',1}}] )
	    -| ['compiler_generated'] )
	end
'isSeparator'/1 =
    %% Line 211
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 212
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 214
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 213
		      call 'wxe_util':'call'
			  (967, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isSeparator',1}}] )
	    -| ['compiler_generated'] )
	end
'isSubMenu'/1 =
    %% Line 219
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 220
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 222
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 221
		      call 'wxe_util':'call'
			  (968, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isSubMenu',1}}] )
	    -| ['compiler_generated'] )
	end
'setBitmap'/2 =
    %% Line 227
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',BitmapRef,BitmapT,_cor10}> when 'true' ->
	      do  %% Line 228
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 229
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (BitmapT,
				       'wxBitmap') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call BitmapT:'parent_class'
				    ('wxBitmap')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 231
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<BitmapRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 230
			  call 'wxe_util':'cast'
			      (969, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setBitmap',2}}] )
	    -| ['compiler_generated'] )
	end
'setHelp'/2 =
    %% Line 236
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Str>
	      when %% Line 237
		call 'erlang':'is_list'
		    (Str) ->
	      do  %% Line 238
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Str_UC> =
		      %% Line 239
		      call 'unicode':'characters_to_binary'
			  ([Str|[0]])
		  in  let <_cor10> =
			  %% Line 241
			  call 'erlang':'byte_size'
			      (Str_UC)
		      in  let <_cor5> =
			      %% Line 241
			      call 'erlang':'byte_size'
				  (Str_UC)
			  in  let <_cor6> =
				  %% Line 241
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 241
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 241
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 241
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 241
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Str_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 240
						  call 'wxe_util':'cast'
						      (970, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setHelp',2}}] )
	    -| ['compiler_generated'] )
	end
'setMenu'/2 =
    %% Line 246
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',MenuRef,MenuT,_cor10}> when 'true' ->
	      do  %% Line 247
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 248
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (MenuT,
				       'wxMenu') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call MenuT:'parent_class'
				    ('wxMenu')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 250
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<MenuRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 249
			  call 'wxe_util':'cast'
			      (971, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setMenu',2}}] )
	    -| ['compiler_generated'] )
	end
'setSubMenu'/2 =
    %% Line 255
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',MenuRef,MenuT,_cor10}> when 'true' ->
	      do  %% Line 256
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 257
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (MenuT,
				       'wxMenu') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call MenuT:'parent_class'
				    ('wxMenu')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 259
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<MenuRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 258
			  call 'wxe_util':'cast'
			      (972, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setSubMenu',2}}] )
	    -| ['compiler_generated'] )
	end
'setText'/2 =
    %% Line 264
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Str>
	      when %% Line 265
		call 'erlang':'is_list'
		    (Str) ->
	      do  %% Line 266
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Str_UC> =
		      %% Line 267
		      call 'unicode':'characters_to_binary'
			  ([Str|[0]])
		  in  let <_cor10> =
			  %% Line 269
			  call 'erlang':'byte_size'
			      (Str_UC)
		      in  let <_cor5> =
			      %% Line 269
			      call 'erlang':'byte_size'
				  (Str_UC)
			  in  let <_cor6> =
				  %% Line 269
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 269
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 269
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 269
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 269
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Str_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 268
						  call 'wxe_util':'cast'
						      (973, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setText',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 273
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 274
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxMenuItem') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxMenuItem')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 275
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 276
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxMenuItem')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxMenuItem', _cor0)
end