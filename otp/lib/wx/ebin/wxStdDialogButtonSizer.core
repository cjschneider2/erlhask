module 'wxStdDialogButtonSizer' ['add'/2,
				 'add'/3,
				 'add'/4,
				 'addButton'/2,
				 'addSpacer'/2,
				 'addStretchSpacer'/1,
				 'addStretchSpacer'/2,
				 'calcMin'/1,
				 'clear'/1,
				 'clear'/2,
				 'destroy'/1,
				 'detach'/2,
				 'fit'/2,
				 'fitInside'/2,
				 'getChildren'/1,
				 'getItem'/2,
				 'getItem'/3,
				 'getMinSize'/1,
				 'getOrientation'/1,
				 'getPosition'/1,
				 'getSize'/1,
				 'hide'/2,
				 'hide'/3,
				 'insert'/3,
				 'insert'/4,
				 'insert'/5,
				 'insertSpacer'/3,
				 'insertStretchSpacer'/2,
				 'insertStretchSpacer'/3,
				 'isShown'/2,
				 'layout'/1,
				 'module_info'/0,
				 'module_info'/1,
				 'new'/0,
				 'parent_class'/1,
				 'prepend'/2,
				 'prepend'/3,
				 'prepend'/4,
				 'prependSpacer'/2,
				 'prependStretchSpacer'/1,
				 'prependStretchSpacer'/2,
				 'realize'/1,
				 'recalcSizes'/1,
				 'remove'/2,
				 'replace'/3,
				 'replace'/4,
				 'setAffirmativeButton'/2,
				 'setCancelButton'/2,
				 'setDimension'/5,
				 'setItemMinSize'/3,
				 'setItemMinSize'/4,
				 'setMinSize'/2,
				 'setMinSize'/3,
				 'setNegativeButton'/2,
				 'setSizeHints'/2,
				 'setVirtualSizeHints'/2,
				 'show'/2,
				 'show'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 45
		'export_type' =
		    %% Line 45
		    [{'wxStdDialogButtonSizer',0}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{'wxStdDialogButtonSizer',{'remote_type',51,[{'atom',51,'wx'}|[{'atom',51,'wx_object'}|[[]]]]},[]}],
		%% Line 53
		'spec' =
		    %% Line 53
		    [{{'new',0},[{'type',53,'fun',[{'type',53,'product',[]}|[{'type',53,'wxStdDialogButtonSizer',[]}]]}]}],
		%% Line 59
		'spec' =
		    %% Line 59
		    [{{'addButton',2},[{'type',59,'bounded_fun',[{'type',59,'fun',[{'type',59,'product',[{'var',59,'This'}|[{'var',59,'Button'}]]}|[{'atom',59,'ok'}]]}|[[{'type',60,'constraint',[{'atom',60,'is_subtype'}|[[{'var',60,'This'}|[{'type',60,'wxStdDialogButtonSizer',[]}]]]]}|[{'type',60,'constraint',[{'atom',60,'is_subtype'}|[[{'var',60,'Button'}|[{'remote_type',60,[{'atom',60,'wxButton'}|[{'atom',60,'wxButton'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 68
		'spec' =
		    %% Line 68
		    [{{'realize',1},[{'type',68,'bounded_fun',[{'type',68,'fun',[{'type',68,'product',[{'var',68,'This'}]}|[{'atom',68,'ok'}]]}|[[{'type',69,'constraint',[{'atom',69,'is_subtype'}|[[{'var',69,'This'}|[{'type',69,'wxStdDialogButtonSizer',[]}]]]]}]]]}]}],
		%% Line 76
		'spec' =
		    %% Line 76
		    [{{'setAffirmativeButton',2},[{'type',76,'bounded_fun',[{'type',76,'fun',[{'type',76,'product',[{'var',76,'This'}|[{'var',76,'Button'}]]}|[{'atom',76,'ok'}]]}|[[{'type',77,'constraint',[{'atom',77,'is_subtype'}|[[{'var',77,'This'}|[{'type',77,'wxStdDialogButtonSizer',[]}]]]]}|[{'type',77,'constraint',[{'atom',77,'is_subtype'}|[[{'var',77,'Button'}|[{'remote_type',77,[{'atom',77,'wxButton'}|[{'atom',77,'wxButton'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 85
		'spec' =
		    %% Line 85
		    [{{'setCancelButton',2},[{'type',85,'bounded_fun',[{'type',85,'fun',[{'type',85,'product',[{'var',85,'This'}|[{'var',85,'Button'}]]}|[{'atom',85,'ok'}]]}|[[{'type',86,'constraint',[{'atom',86,'is_subtype'}|[[{'var',86,'This'}|[{'type',86,'wxStdDialogButtonSizer',[]}]]]]}|[{'type',86,'constraint',[{'atom',86,'is_subtype'}|[[{'var',86,'Button'}|[{'remote_type',86,[{'atom',86,'wxButton'}|[{'atom',86,'wxButton'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 94
		'spec' =
		    %% Line 94
		    [{{'setNegativeButton',2},[{'type',94,'bounded_fun',[{'type',94,'fun',[{'type',94,'product',[{'var',94,'This'}|[{'var',94,'Button'}]]}|[{'atom',94,'ok'}]]}|[[{'type',95,'constraint',[{'atom',95,'is_subtype'}|[[{'var',95,'This'}|[{'type',95,'wxStdDialogButtonSizer',[]}]]]]}|[{'type',95,'constraint',[{'atom',95,'is_subtype'}|[[{'var',95,'Button'}|[{'remote_type',95,[{'atom',95,'wxButton'}|[{'atom',95,'wxButton'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 103
		'spec' =
		    %% Line 103
		    [{{'destroy',1},[{'type',103,'fun',[{'type',103,'product',[{'ann_type',103,[{'var',103,'This'}|[{'type',103,'wxStdDialogButtonSizer',[]}]]}]}|[{'atom',103,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 47
    fun (_cor0) ->
	case _cor0 of
	  <'wxBoxSizer'> when 'true' ->
	      'true'
	  %% Line 48
	  <'wxSizer'> when 'true' ->
	      'true'
	  %% Line 49
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxStdDialogButtonSizer'})
	end
'new'/0 =
    %% Line 54
    fun () ->
	%% Line 55
	call 'wxe_util':'construct'
	    (1429, %% Line 56
		   #{}#)
'addButton'/2 =
    %% Line 61
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',ButtonRef,ButtonT,_cor10}> when 'true' ->
	      do  %% Line 62
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStdDialogButtonSizer') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStdDialogButtonSizer')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 63
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ButtonT,
				       'wxButton') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ButtonT:'parent_class'
				    ('wxButton')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 65
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<ButtonRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 64
			  call 'wxe_util':'cast'
			      (1430, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'addButton',2}}] )
	    -| ['compiler_generated'] )
	end
'realize'/1 =
    %% Line 70
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 71
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStdDialogButtonSizer') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStdDialogButtonSizer')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 73
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 72
		      call 'wxe_util':'cast'
			  (1431, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'realize',1}}] )
	    -| ['compiler_generated'] )
	end
'setAffirmativeButton'/2 =
    %% Line 78
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',ButtonRef,ButtonT,_cor10}> when 'true' ->
	      do  %% Line 79
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStdDialogButtonSizer') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStdDialogButtonSizer')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 80
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ButtonT,
				       'wxButton') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ButtonT:'parent_class'
				    ('wxButton')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 82
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<ButtonRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 81
			  call 'wxe_util':'cast'
			      (1432, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setAffirmativeButton',2}}] )
	    -| ['compiler_generated'] )
	end
'setCancelButton'/2 =
    %% Line 87
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',ButtonRef,ButtonT,_cor10}> when 'true' ->
	      do  %% Line 88
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStdDialogButtonSizer') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStdDialogButtonSizer')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 89
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ButtonT,
				       'wxButton') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ButtonT:'parent_class'
				    ('wxButton')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 91
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<ButtonRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 90
			  call 'wxe_util':'cast'
			      (1433, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setCancelButton',2}}] )
	    -| ['compiler_generated'] )
	end
'setNegativeButton'/2 =
    %% Line 96
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',ButtonRef,ButtonT,_cor10}> when 'true' ->
	      do  %% Line 97
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStdDialogButtonSizer') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStdDialogButtonSizer')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 98
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ButtonT,
				       'wxButton') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ButtonT:'parent_class'
				    ('wxButton')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 100
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<ButtonRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 99
			  call 'wxe_util':'cast'
			      (1434, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setNegativeButton',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 104
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 105
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxStdDialogButtonSizer') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxStdDialogButtonSizer')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 106
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 107
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'getOrientation'/1 =
    %% Line 110
    fun (_cor0) ->
	call 'wxBoxSizer':'getOrientation'
	    (_cor0)
'show'/3 =
    %% Line 113
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'show'
	    (_cor2, _cor1, _cor0)
'show'/2 =
    %% Line 115
    fun (_cor1,_cor0) ->
	call 'wxSizer':'show'
	    (_cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 117
    fun (_cor1,_cor0) ->
	call 'wxSizer':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setSizeHints'/2 =
    %% Line 119
    fun (_cor1,_cor0) ->
	call 'wxSizer':'setSizeHints'
	    (_cor1, _cor0)
'setItemMinSize'/4 =
    %% Line 121
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'setItemMinSize'
	    (_cor3, _cor2, _cor1, _cor0)
'setItemMinSize'/3 =
    %% Line 123
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'setItemMinSize'
	    (_cor2, _cor1, _cor0)
'setMinSize'/3 =
    %% Line 125
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'setMinSize'
	    (_cor2, _cor1, _cor0)
'setMinSize'/2 =
    %% Line 127
    fun (_cor1,_cor0) ->
	call 'wxSizer':'setMinSize'
	    (_cor1, _cor0)
'setDimension'/5 =
    %% Line 129
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'setDimension'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'replace'/4 =
    %% Line 131
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'replace'
	    (_cor3, _cor2, _cor1, _cor0)
'replace'/3 =
    %% Line 133
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'replace'
	    (_cor2, _cor1, _cor0)
'remove'/2 =
    %% Line 135
    fun (_cor1,_cor0) ->
	call 'wxSizer':'remove'
	    (_cor1, _cor0)
'recalcSizes'/1 =
    %% Line 137
    fun (_cor0) ->
	call 'wxSizer':'recalcSizes'
	    (_cor0)
'prependStretchSpacer'/2 =
    %% Line 139
    fun (_cor1,_cor0) ->
	call 'wxSizer':'prependStretchSpacer'
	    (_cor1, _cor0)
'prependStretchSpacer'/1 =
    %% Line 141
    fun (_cor0) ->
	call 'wxSizer':'prependStretchSpacer'
	    (_cor0)
'prependSpacer'/2 =
    %% Line 143
    fun (_cor1,_cor0) ->
	call 'wxSizer':'prependSpacer'
	    (_cor1, _cor0)
'prepend'/4 =
    %% Line 145
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'prepend'
	    (_cor3, _cor2, _cor1, _cor0)
'prepend'/3 =
    %% Line 147
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'prepend'
	    (_cor2, _cor1, _cor0)
'prepend'/2 =
    %% Line 149
    fun (_cor1,_cor0) ->
	call 'wxSizer':'prepend'
	    (_cor1, _cor0)
'layout'/1 =
    %% Line 151
    fun (_cor0) ->
	call 'wxSizer':'layout'
	    (_cor0)
'isShown'/2 =
    %% Line 153
    fun (_cor1,_cor0) ->
	call 'wxSizer':'isShown'
	    (_cor1, _cor0)
'insertStretchSpacer'/3 =
    %% Line 155
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insertStretchSpacer'
	    (_cor2, _cor1, _cor0)
'insertStretchSpacer'/2 =
    %% Line 157
    fun (_cor1,_cor0) ->
	call 'wxSizer':'insertStretchSpacer'
	    (_cor1, _cor0)
'insertSpacer'/3 =
    %% Line 159
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insertSpacer'
	    (_cor2, _cor1, _cor0)
'insert'/5 =
    %% Line 161
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insert'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'insert'/4 =
    %% Line 163
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insert'
	    (_cor3, _cor2, _cor1, _cor0)
'insert'/3 =
    %% Line 165
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insert'
	    (_cor2, _cor1, _cor0)
'hide'/3 =
    %% Line 167
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'hide'
	    (_cor2, _cor1, _cor0)
'hide'/2 =
    %% Line 169
    fun (_cor1,_cor0) ->
	call 'wxSizer':'hide'
	    (_cor1, _cor0)
'getMinSize'/1 =
    %% Line 171
    fun (_cor0) ->
	call 'wxSizer':'getMinSize'
	    (_cor0)
'getPosition'/1 =
    %% Line 173
    fun (_cor0) ->
	call 'wxSizer':'getPosition'
	    (_cor0)
'getSize'/1 =
    %% Line 175
    fun (_cor0) ->
	call 'wxSizer':'getSize'
	    (_cor0)
'getItem'/3 =
    %% Line 177
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'getItem'
	    (_cor2, _cor1, _cor0)
'getItem'/2 =
    %% Line 179
    fun (_cor1,_cor0) ->
	call 'wxSizer':'getItem'
	    (_cor1, _cor0)
'getChildren'/1 =
    %% Line 181
    fun (_cor0) ->
	call 'wxSizer':'getChildren'
	    (_cor0)
'fitInside'/2 =
    %% Line 183
    fun (_cor1,_cor0) ->
	call 'wxSizer':'fitInside'
	    (_cor1, _cor0)
'fit'/2 =
    %% Line 185
    fun (_cor1,_cor0) ->
	call 'wxSizer':'fit'
	    (_cor1, _cor0)
'detach'/2 =
    %% Line 187
    fun (_cor1,_cor0) ->
	call 'wxSizer':'detach'
	    (_cor1, _cor0)
'clear'/2 =
    %% Line 189
    fun (_cor1,_cor0) ->
	call 'wxSizer':'clear'
	    (_cor1, _cor0)
'clear'/1 =
    %% Line 191
    fun (_cor0) ->
	call 'wxSizer':'clear'
	    (_cor0)
'calcMin'/1 =
    %% Line 193
    fun (_cor0) ->
	call 'wxSizer':'calcMin'
	    (_cor0)
'addStretchSpacer'/2 =
    %% Line 195
    fun (_cor1,_cor0) ->
	call 'wxSizer':'addStretchSpacer'
	    (_cor1, _cor0)
'addStretchSpacer'/1 =
    %% Line 197
    fun (_cor0) ->
	call 'wxSizer':'addStretchSpacer'
	    (_cor0)
'addSpacer'/2 =
    %% Line 199
    fun (_cor1,_cor0) ->
	call 'wxSizer':'addSpacer'
	    (_cor1, _cor0)
'add'/4 =
    %% Line 201
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'add'
	    (_cor3, _cor2, _cor1, _cor0)
'add'/3 =
    %% Line 203
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'add'
	    (_cor2, _cor1, _cor0)
'add'/2 =
    %% Line 205
    fun (_cor1,_cor0) ->
	call 'wxSizer':'add'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxStdDialogButtonSizer')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxStdDialogButtonSizer', _cor0)
end