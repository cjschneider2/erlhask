module 'wxPrintout' ['destroy'/1,
		     'fitThisSizeToPage'/2,
		     'fitThisSizeToPageMargins'/3,
		     'fitThisSizeToPaper'/2,
		     'getDC'/1,
		     'getLogicalPageMarginsRect'/2,
		     'getLogicalPageRect'/1,
		     'getLogicalPaperRect'/1,
		     'getPPIPrinter'/1,
		     'getPPIScreen'/1,
		     'getPageSizeMM'/1,
		     'getPageSizePixels'/1,
		     'getPaperRectPixels'/1,
		     'getTitle'/1,
		     'isPreview'/1,
		     'mapScreenSizeToDevice'/1,
		     'mapScreenSizeToPage'/1,
		     'mapScreenSizeToPageMargins'/2,
		     'mapScreenSizeToPaper'/1,
		     'module_info'/0,
		     'module_info'/1,
		     'new'/2,
		     'new'/3,
		     'offsetLogicalOrigin'/3,
		     'parent_class'/1,
		     'setLogicalOrigin'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 37
		'export_type' =
		    %% Line 37
		    [{'wxPrintout',0}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{'wxPrintout',{'remote_type',41,[{'atom',41,'wx'}|[{'atom',41,'wx_object'}|[[]]]]},[]}],
		%% Line 125
		'spec' =
		    %% Line 125
		    [{{'getDC',1},[{'type',125,'bounded_fun',[{'type',125,'fun',[{'type',125,'product',[{'var',125,'This'}]}|[{'remote_type',125,[{'atom',125,'wxDC'}|[{'atom',125,'wxDC'}|[[]]]]}]]}|[[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'This'}|[{'type',126,'wxPrintout',[]}]]]]}]]]}]}],
		%% Line 133
		'spec' =
		    %% Line 133
		    [{{'getPageSizeMM',1},[{'type',133,'bounded_fun',[{'type',133,'fun',[{'type',133,'product',[{'var',133,'This'}]}|[{'type',133,'tuple',[{'ann_type',133,[{'var',133,'W'}|[{'type',133,'integer',[]}]]}|[{'ann_type',133,[{'var',133,'H'}|[{'type',133,'integer',[]}]]}]]}]]}|[[{'type',134,'constraint',[{'atom',134,'is_subtype'}|[[{'var',134,'This'}|[{'type',134,'wxPrintout',[]}]]]]}]]]}]}],
		%% Line 141
		'spec' =
		    %% Line 141
		    [{{'getPageSizePixels',1},[{'type',141,'bounded_fun',[{'type',141,'fun',[{'type',141,'product',[{'var',141,'This'}]}|[{'type',141,'tuple',[{'ann_type',141,[{'var',141,'W'}|[{'type',141,'integer',[]}]]}|[{'ann_type',141,[{'var',141,'H'}|[{'type',141,'integer',[]}]]}]]}]]}|[[{'type',142,'constraint',[{'atom',142,'is_subtype'}|[[{'var',142,'This'}|[{'type',142,'wxPrintout',[]}]]]]}]]]}]}],
		%% Line 149
		'spec' =
		    %% Line 149
		    [{{'getPaperRectPixels',1},[{'type',149,'bounded_fun',[{'type',149,'fun',[{'type',149,'product',[{'var',149,'This'}]}|[{'type',149,'tuple',[{'ann_type',149,[{'var',149,'X'}|[{'type',149,'integer',[]}]]}|[{'ann_type',149,[{'var',149,'Y'}|[{'type',149,'integer',[]}]]}|[{'ann_type',149,[{'var',149,'W'}|[{'type',149,'integer',[]}]]}|[{'ann_type',149,[{'var',149,'H'}|[{'type',149,'integer',[]}]]}]]]]}]]}|[[{'type',150,'constraint',[{'atom',150,'is_subtype'}|[[{'var',150,'This'}|[{'type',150,'wxPrintout',[]}]]]]}]]]}]}],
		%% Line 157
		'spec' =
		    %% Line 157
		    [{{'getPPIPrinter',1},[{'type',157,'bounded_fun',[{'type',157,'fun',[{'type',157,'product',[{'var',157,'This'}]}|[{'type',157,'tuple',[{'ann_type',157,[{'var',157,'X'}|[{'type',157,'integer',[]}]]}|[{'ann_type',157,[{'var',157,'Y'}|[{'type',157,'integer',[]}]]}]]}]]}|[[{'type',158,'constraint',[{'atom',158,'is_subtype'}|[[{'var',158,'This'}|[{'type',158,'wxPrintout',[]}]]]]}]]]}]}],
		%% Line 165
		'spec' =
		    %% Line 165
		    [{{'getPPIScreen',1},[{'type',165,'bounded_fun',[{'type',165,'fun',[{'type',165,'product',[{'var',165,'This'}]}|[{'type',165,'tuple',[{'ann_type',165,[{'var',165,'X'}|[{'type',165,'integer',[]}]]}|[{'ann_type',165,[{'var',165,'Y'}|[{'type',165,'integer',[]}]]}]]}]]}|[[{'type',166,'constraint',[{'atom',166,'is_subtype'}|[[{'var',166,'This'}|[{'type',166,'wxPrintout',[]}]]]]}]]]}]}],
		%% Line 173
		'spec' =
		    %% Line 173
		    [{{'getTitle',1},[{'type',173,'bounded_fun',[{'type',173,'fun',[{'type',173,'product',[{'var',173,'This'}]}|[{'remote_type',173,[{'atom',173,'unicode'}|[{'atom',173,'charlist'}|[[]]]]}]]}|[[{'type',174,'constraint',[{'atom',174,'is_subtype'}|[[{'var',174,'This'}|[{'type',174,'wxPrintout',[]}]]]]}]]]}]}],
		%% Line 181
		'spec' =
		    %% Line 181
		    [{{'isPreview',1},[{'type',181,'bounded_fun',[{'type',181,'fun',[{'type',181,'product',[{'var',181,'This'}]}|[{'type',181,'boolean',[]}]]}|[[{'type',182,'constraint',[{'atom',182,'is_subtype'}|[[{'var',182,'This'}|[{'type',182,'wxPrintout',[]}]]]]}]]]}]}],
		%% Line 189
		'spec' =
		    %% Line 189
		    [{{'fitThisSizeToPaper',2},[{'type',189,'bounded_fun',[{'type',189,'fun',[{'type',189,'product',[{'var',189,'This'}|[{'var',189,'ImageSize'}]]}|[{'atom',189,'ok'}]]}|[[{'type',190,'constraint',[{'atom',190,'is_subtype'}|[[{'var',190,'This'}|[{'type',190,'wxPrintout',[]}]]]]}|[{'type',190,'constraint',[{'atom',190,'is_subtype'}|[[{'var',190,'ImageSize'}|[{'type',190,'tuple',[{'ann_type',190,[{'var',190,'W'}|[{'type',190,'integer',[]}]]}|[{'ann_type',190,[{'var',190,'H'}|[{'type',190,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 198
		'spec' =
		    %% Line 198
		    [{{'fitThisSizeToPage',2},[{'type',198,'bounded_fun',[{'type',198,'fun',[{'type',198,'product',[{'var',198,'This'}|[{'var',198,'ImageSize'}]]}|[{'atom',198,'ok'}]]}|[[{'type',199,'constraint',[{'atom',199,'is_subtype'}|[[{'var',199,'This'}|[{'type',199,'wxPrintout',[]}]]]]}|[{'type',199,'constraint',[{'atom',199,'is_subtype'}|[[{'var',199,'ImageSize'}|[{'type',199,'tuple',[{'ann_type',199,[{'var',199,'W'}|[{'type',199,'integer',[]}]]}|[{'ann_type',199,[{'var',199,'H'}|[{'type',199,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 207
		'spec' =
		    %% Line 207
		    [{{'fitThisSizeToPageMargins',3},[{'type',207,'bounded_fun',[{'type',207,'fun',[{'type',207,'product',[{'var',207,'This'}|[{'var',207,'ImageSize'}|[{'var',207,'PageSetupData'}]]]}|[{'atom',207,'ok'}]]}|[[{'type',208,'constraint',[{'atom',208,'is_subtype'}|[[{'var',208,'This'}|[{'type',208,'wxPrintout',[]}]]]]}|[{'type',208,'constraint',[{'atom',208,'is_subtype'}|[[{'var',208,'ImageSize'}|[{'type',208,'tuple',[{'ann_type',208,[{'var',208,'W'}|[{'type',208,'integer',[]}]]}|[{'ann_type',208,[{'var',208,'H'}|[{'type',208,'integer',[]}]]}]]}]]]]}|[{'type',208,'constraint',[{'atom',208,'is_subtype'}|[[{'var',208,'PageSetupData'}|[{'remote_type',208,[{'atom',208,'wxPageSetupDialogData'}|[{'atom',208,'wxPageSetupDialogData'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 217
		'spec' =
		    %% Line 217
		    [{{'mapScreenSizeToPaper',1},[{'type',217,'bounded_fun',[{'type',217,'fun',[{'type',217,'product',[{'var',217,'This'}]}|[{'atom',217,'ok'}]]}|[[{'type',218,'constraint',[{'atom',218,'is_subtype'}|[[{'var',218,'This'}|[{'type',218,'wxPrintout',[]}]]]]}]]]}]}],
		%% Line 225
		'spec' =
		    %% Line 225
		    [{{'mapScreenSizeToPage',1},[{'type',225,'bounded_fun',[{'type',225,'fun',[{'type',225,'product',[{'var',225,'This'}]}|[{'atom',225,'ok'}]]}|[[{'type',226,'constraint',[{'atom',226,'is_subtype'}|[[{'var',226,'This'}|[{'type',226,'wxPrintout',[]}]]]]}]]]}]}],
		%% Line 233
		'spec' =
		    %% Line 233
		    [{{'mapScreenSizeToPageMargins',2},[{'type',233,'bounded_fun',[{'type',233,'fun',[{'type',233,'product',[{'var',233,'This'}|[{'var',233,'PageSetupData'}]]}|[{'atom',233,'ok'}]]}|[[{'type',234,'constraint',[{'atom',234,'is_subtype'}|[[{'var',234,'This'}|[{'type',234,'wxPrintout',[]}]]]]}|[{'type',234,'constraint',[{'atom',234,'is_subtype'}|[[{'var',234,'PageSetupData'}|[{'remote_type',234,[{'atom',234,'wxPageSetupDialogData'}|[{'atom',234,'wxPageSetupDialogData'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 242
		'spec' =
		    %% Line 242
		    [{{'mapScreenSizeToDevice',1},[{'type',242,'bounded_fun',[{'type',242,'fun',[{'type',242,'product',[{'var',242,'This'}]}|[{'atom',242,'ok'}]]}|[[{'type',243,'constraint',[{'atom',243,'is_subtype'}|[[{'var',243,'This'}|[{'type',243,'wxPrintout',[]}]]]]}]]]}]}],
		%% Line 250
		'spec' =
		    %% Line 250
		    [{{'getLogicalPaperRect',1},[{'type',250,'bounded_fun',[{'type',250,'fun',[{'type',250,'product',[{'var',250,'This'}]}|[{'type',250,'tuple',[{'ann_type',250,[{'var',250,'X'}|[{'type',250,'integer',[]}]]}|[{'ann_type',250,[{'var',250,'Y'}|[{'type',250,'integer',[]}]]}|[{'ann_type',250,[{'var',250,'W'}|[{'type',250,'integer',[]}]]}|[{'ann_type',250,[{'var',250,'H'}|[{'type',250,'integer',[]}]]}]]]]}]]}|[[{'type',251,'constraint',[{'atom',251,'is_subtype'}|[[{'var',251,'This'}|[{'type',251,'wxPrintout',[]}]]]]}]]]}]}],
		%% Line 258
		'spec' =
		    %% Line 258
		    [{{'getLogicalPageRect',1},[{'type',258,'bounded_fun',[{'type',258,'fun',[{'type',258,'product',[{'var',258,'This'}]}|[{'type',258,'tuple',[{'ann_type',258,[{'var',258,'X'}|[{'type',258,'integer',[]}]]}|[{'ann_type',258,[{'var',258,'Y'}|[{'type',258,'integer',[]}]]}|[{'ann_type',258,[{'var',258,'W'}|[{'type',258,'integer',[]}]]}|[{'ann_type',258,[{'var',258,'H'}|[{'type',258,'integer',[]}]]}]]]]}]]}|[[{'type',259,'constraint',[{'atom',259,'is_subtype'}|[[{'var',259,'This'}|[{'type',259,'wxPrintout',[]}]]]]}]]]}]}],
		%% Line 266
		'spec' =
		    %% Line 266
		    [{{'getLogicalPageMarginsRect',2},[{'type',266,'bounded_fun',[{'type',266,'fun',[{'type',266,'product',[{'var',266,'This'}|[{'var',266,'PageSetupData'}]]}|[{'type',266,'tuple',[{'ann_type',266,[{'var',266,'X'}|[{'type',266,'integer',[]}]]}|[{'ann_type',266,[{'var',266,'Y'}|[{'type',266,'integer',[]}]]}|[{'ann_type',266,[{'var',266,'W'}|[{'type',266,'integer',[]}]]}|[{'ann_type',266,[{'var',266,'H'}|[{'type',266,'integer',[]}]]}]]]]}]]}|[[{'type',267,'constraint',[{'atom',267,'is_subtype'}|[[{'var',267,'This'}|[{'type',267,'wxPrintout',[]}]]]]}|[{'type',267,'constraint',[{'atom',267,'is_subtype'}|[[{'var',267,'PageSetupData'}|[{'remote_type',267,[{'atom',267,'wxPageSetupDialogData'}|[{'atom',267,'wxPageSetupDialogData'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 275
		'spec' =
		    %% Line 275
		    [{{'setLogicalOrigin',3},[{'type',275,'bounded_fun',[{'type',275,'fun',[{'type',275,'product',[{'var',275,'This'}|[{'var',275,'X'}|[{'var',275,'Y'}]]]}|[{'atom',275,'ok'}]]}|[[{'type',276,'constraint',[{'atom',276,'is_subtype'}|[[{'var',276,'This'}|[{'type',276,'wxPrintout',[]}]]]]}|[{'type',276,'constraint',[{'atom',276,'is_subtype'}|[[{'var',276,'X'}|[{'type',276,'integer',[]}]]]]}|[{'type',276,'constraint',[{'atom',276,'is_subtype'}|[[{'var',276,'Y'}|[{'type',276,'integer',[]}]]]]}]]]]]}]}],
		%% Line 284
		'spec' =
		    %% Line 284
		    [{{'offsetLogicalOrigin',3},[{'type',284,'bounded_fun',[{'type',284,'fun',[{'type',284,'product',[{'var',284,'This'}|[{'var',284,'Xoff'}|[{'var',284,'Yoff'}]]]}|[{'atom',284,'ok'}]]}|[[{'type',285,'constraint',[{'atom',285,'is_subtype'}|[[{'var',285,'This'}|[{'type',285,'wxPrintout',[]}]]]]}|[{'type',285,'constraint',[{'atom',285,'is_subtype'}|[[{'var',285,'Xoff'}|[{'type',285,'integer',[]}]]]]}|[{'type',285,'constraint',[{'atom',285,'is_subtype'}|[[{'var',285,'Yoff'}|[{'type',285,'integer',[]}]]]]}]]]]]}]}],
		%% Line 293
		'spec' =
		    %% Line 293
		    [{{'destroy',1},[{'type',293,'fun',[{'type',293,'product',[{'ann_type',293,[{'var',293,'This'}|[{'type',293,'wxPrintout',[]}]]}]}|[{'atom',293,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 39
    fun (_cor0) ->
	call 'erlang':'error'
	    ({'badtype','wxPrintout'})
'new'/2 =
    %% Line 45
    fun (_cor1,_cor0) ->
	%% Line 46
	apply 'new'/3
	    (_cor1, _cor0, [])
'new'/3 =
    %% Line 68
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Title,OnPrintPage,Opts>
	      when try
		    let <_cor3> =
			call 'erlang':'is_list'
			    (Title)
		    in  let <_cor4> =
			    call 'erlang':'is_function'
				(OnPrintPage)
			in  let <_cor5> =
				call 'erlang':'is_list'
				    (Opts)
			    in  let <_cor6> =
				    call 'erlang':'and'
					(_cor4, _cor5)
				in  call 'erlang':'and'
					(_cor3, _cor6)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <OnPrint> =
		  %% Line 69
		  ( fun (_cor9) ->
			case _cor9 of
			  <[This|[Page|[]]]> when 'true' ->
			      let <Bool> =
				  %% Line 70
				  apply OnPrintPage
				      (This, Page)
			      in  let <_cor8> =
				      %% Line 71
				      call 'wxe_util':'from_bool'
					  (Bool)
				  in  %% Line 71
				      #{#<_cor8>(32,1,'integer',['unsigned'|['native']])}#
			  ( <_cor10> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor10})
				  -| [{'function_name',{'-new/3-fun-0-',1}}] )
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-new/3-fun-0-'}}] )
	      in  let <OnPrintPageId> =
		      %% Line 73
		      call 'wxe_util':'get_cbId'
			  (OnPrint)
		  in  let <MOpts> =
			  %% Line 74
			  ( fun (_cor54,_cor53) ->
				case <_cor54,_cor53> of
				  <{'onPreparePrinting',F},Acc>
				      when call 'erlang':'is_function'
					    (F) ->
				      let <Fun> =
					  %% Line 75
					  ( fun (_cor13) ->
						case _cor13 of
						  <[This|[]]> when 'true' ->
						      do  %% Line 76
							  apply F
							      (This)
							  %% Line 77
							  #{}#
						  ( <_cor14> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor14})
							  -| [{'function_name',{'-new/3-fun-1-',1}}] )
						    -| ['compiler_generated'] )
						end
					    -| [{'id',{0,0,'-new/3-fun-1-'}}] )
				      in  let <_cor16> =
					      %% Line 79
					      call 'wxe_util':'get_cbId'
						  (Fun)
					  in  let <_cor17> =
						  %% Line 79
						  #{#<1>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor16>(32,1,'integer',['unsigned'|['native']])}#
					      in  %% Line 79
						  [_cor17|Acc]
				  %% Line 80
				  <{'onBeginPrinting',F},Acc>
				      when call 'erlang':'is_function'
					    (F) ->
				      let <Fun> =
					  %% Line 81
					  ( fun (_cor18) ->
						case _cor18 of
						  <[This|[]]> when 'true' ->
						      do  %% Line 82
							  apply F
							      (This)
							  %% Line 83
							  #{}#
						  ( <_cor19> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor19})
							  -| [{'function_name',{'-new/3-fun-2-',1}}] )
						    -| ['compiler_generated'] )
						end
					    -| [{'id',{0,0,'-new/3-fun-2-'}}] )
				      in  let <_cor21> =
					      %% Line 85
					      call 'wxe_util':'get_cbId'
						  (Fun)
					  in  let <_cor22> =
						  %% Line 85
						  #{#<2>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor21>(32,1,'integer',['unsigned'|['native']])}#
					      in  %% Line 85
						  [_cor22|Acc]
				  %% Line 86
				  <{'onEndPrinting',F},Acc>
				      when call 'erlang':'is_function'
					    (F) ->
				      let <Fun> =
					  %% Line 87
					  ( fun (_cor23) ->
						case _cor23 of
						  <[This|[]]> when 'true' ->
						      do  %% Line 88
							  apply F
							      (This)
							  %% Line 89
							  #{}#
						  ( <_cor24> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor24})
							  -| [{'function_name',{'-new/3-fun-3-',1}}] )
						    -| ['compiler_generated'] )
						end
					    -| [{'id',{0,0,'-new/3-fun-3-'}}] )
				      in  let <_cor26> =
					      %% Line 91
					      call 'wxe_util':'get_cbId'
						  (Fun)
					  in  let <_cor27> =
						  %% Line 91
						  #{#<3>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor26>(32,1,'integer',['unsigned'|['native']])}#
					      in  %% Line 91
						  [_cor27|Acc]
				  %% Line 92
				  <{'onBeginDocument',F},Acc>
				      when call 'erlang':'is_function'
					    (F) ->
				      let <Fun> =
					  %% Line 93
					  ( fun (_cor30) ->
						case _cor30 of
						  <[This|[S|[E|[]]]]> when 'true' ->
						      let <BegD> =
							  %% Line 94
							  apply F
							      (This, S, E)
						      in  let <_cor29> =
							      %% Line 95
							      call 'wxe_util':'from_bool'
								  (BegD)
							  in  %% Line 95
							      #{#<_cor29>(32,1,'integer',['unsigned'|['native']])}#
						  ( <_cor31> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor31})
							  -| [{'function_name',{'-new/3-fun-4-',1}}] )
						    -| ['compiler_generated'] )
						end
					    -| [{'id',{0,0,'-new/3-fun-4-'}}] )
				      in  let <_cor33> =
					      %% Line 97
					      call 'wxe_util':'get_cbId'
						  (Fun)
					  in  let <_cor34> =
						  %% Line 97
						  #{#<4>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor33>(32,1,'integer',['unsigned'|['native']])}#
					      in  %% Line 97
						  [_cor34|Acc]
				  %% Line 98
				  <{'onEndDocument',F},Acc>
				      when call 'erlang':'is_function'
					    (F) ->
				      let <Fun> =
					  %% Line 99
					  ( fun (_cor35) ->
						case _cor35 of
						  <[This|[]]> when 'true' ->
						      do  %% Line 100
							  apply F
							      (This)
							  %% Line 101
							  #{}#
						  ( <_cor36> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor36})
							  -| [{'function_name',{'-new/3-fun-5-',1}}] )
						    -| ['compiler_generated'] )
						end
					    -| [{'id',{0,0,'-new/3-fun-5-'}}] )
				      in  let <_cor38> =
					      %% Line 103
					      call 'wxe_util':'get_cbId'
						  (Fun)
					  in  let <_cor39> =
						  %% Line 103
						  #{#<5>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor38>(32,1,'integer',['unsigned'|['native']])}#
					      in  %% Line 103
						  [_cor39|Acc]
				  %% Line 104
				  <{'hasPage',F},Acc>
				      when call 'erlang':'is_function'
					    (F) ->
				      let <Fun> =
					  %% Line 105
					  ( fun (_cor42) ->
						case _cor42 of
						  <[This|[Page|[]]]> when 'true' ->
						      let <HasP> =
							  %% Line 106
							  apply F
							      (This, Page)
						      in  let <_cor41> =
							      %% Line 107
							      call 'wxe_util':'from_bool'
								  (HasP)
							  in  %% Line 107
							      #{#<_cor41>(32,1,'integer',['unsigned'|['native']])}#
						  ( <_cor43> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor43})
							  -| [{'function_name',{'-new/3-fun-6-',1}}] )
						    -| ['compiler_generated'] )
						end
					    -| [{'id',{0,0,'-new/3-fun-6-'}}] )
				      in  let <_cor45> =
					      %% Line 109
					      call 'wxe_util':'get_cbId'
						  (Fun)
					  in  let <_cor46> =
						  %% Line 109
						  #{#<6>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor45>(32,1,'integer',['unsigned'|['native']])}#
					      in  %% Line 109
						  [_cor46|Acc]
				  %% Line 110
				  <{'getPageInfo',F},Acc>
				      when call 'erlang':'is_function'
					    (F) ->
				      let <Fun> =
					  %% Line 111
					  ( fun (_cor48) ->
						case _cor48 of
						  <[This|[]]> when 'true' ->
						      %% Line 112
						      case apply F
							       (This) of
							<{Min,Max,PF,PT}> when 'true' ->
							    %% Line 113
							    #{#<Min>(32,1,'integer',['unsigned'|['native']]),
							      #<Max>(32,1,'integer',['unsigned'|['native']]),
							      #<PF>(32,1,'integer',['unsigned'|['native']]),
							      #<PT>(32,1,'integer',['unsigned'|['native']])}#
							( <_cor47> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_cor47})
							  -| ['compiler_generated'] )
						      end
						  ( <_cor49> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor49})
							  -| [{'function_name',{'-new/3-fun-7-',1}}] )
						    -| ['compiler_generated'] )
						end
					    -| [{'id',{0,0,'-new/3-fun-7-'}}] )
				      in  let <_cor51> =
					      %% Line 115
					      call 'wxe_util':'get_cbId'
						  (Fun)
					  in  let <_cor52> =
						  %% Line 115
						  #{#<7>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor51>(32,1,'integer',['unsigned'|['native']])}#
					      in  %% Line 115
						  [_cor52|Acc]
				  ( <_cor56,_cor55> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor56,_cor55})
					  -| [{'function_name',{'-new/3-fun-8-',2}}] )
				    -| ['compiler_generated'] )
				end
			    -| [{'id',{0,0,'-new/3-fun-8-'}}] )
		      in  let <_cor58> =
			      %% Line 117
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Opts)
			  in  let <BinOpt> =
				  %% Line 117
				  call 'erlang':'list_to_binary'
				      (_cor58)
			      in  let <Title_UC> =
				      %% Line 118
				      call 'unicode':'characters_to_binary'
					  ([Title|[0]])
				  in  let <_cor66> =
					  %% Line 119
					  call 'erlang':'byte_size'
					      (Title_UC)
				      in  let <_cor61> =
					      %% Line 120
					      call 'erlang':'byte_size'
						  (Title_UC)
					  in  let <_cor62> =
						  %% Line 120
						  call 'erlang':'+'
						      (4, _cor61)
					      in  let <_cor63> =
						      %% Line 120
						      call 'erlang':'band'
							  (_cor62, 7)
						  in  let <_cor64> =
							  %% Line 120
							  call 'erlang':'-'
							      (8, _cor63)
						      in  let <_cor65> =
							      %% Line 120
							      call 'erlang':'band'
								  (_cor64, 7)
							  in  let <_cor67> =
								  %% Line 119
								  #{#<_cor66>(32,1,'integer',['unsigned'|['native']]),
								    #<Title_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<%% Line 120
								      0>(_cor65,8,'integer',['unsigned'|['big']]),
								    #<%% Line 121
								      OnPrintPageId>(%% Line 121
										     32,1,'integer',['unsigned'|['native']]),
								    #<%% Line 122
								      BinOpt>(%% Line 122
									      'all',8,'binary',['unsigned'|['big']])}#
							      in  %% Line 119
								  call 'wxe_util':'call'
								      (2930, _cor67)
	  ( <_cor70,_cor69,_cor68> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor70,_cor69,_cor68})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'getDC'/1 =
    %% Line 127
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 128
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 130
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 129
		      call 'wxe_util':'call'
			  (2932, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getDC',1}}] )
	    -| ['compiler_generated'] )
	end
'getPageSizeMM'/1 =
    %% Line 135
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 136
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 138
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 137
		      call 'wxe_util':'call'
			  (2933, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPageSizeMM',1}}] )
	    -| ['compiler_generated'] )
	end
'getPageSizePixels'/1 =
    %% Line 143
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 144
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 146
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 145
		      call 'wxe_util':'call'
			  (2934, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPageSizePixels',1}}] )
	    -| ['compiler_generated'] )
	end
'getPaperRectPixels'/1 =
    %% Line 151
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 152
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 154
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 153
		      call 'wxe_util':'call'
			  (2935, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPaperRectPixels',1}}] )
	    -| ['compiler_generated'] )
	end
'getPPIPrinter'/1 =
    %% Line 159
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 160
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 162
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 161
		      call 'wxe_util':'call'
			  (2936, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPPIPrinter',1}}] )
	    -| ['compiler_generated'] )
	end
'getPPIScreen'/1 =
    %% Line 167
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 168
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 170
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 169
		      call 'wxe_util':'call'
			  (2937, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPPIScreen',1}}] )
	    -| ['compiler_generated'] )
	end
'getTitle'/1 =
    %% Line 175
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 176
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 178
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 177
		      call 'wxe_util':'call'
			  (2938, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getTitle',1}}] )
	    -| ['compiler_generated'] )
	end
'isPreview'/1 =
    %% Line 183
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 184
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 186
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 185
		      call 'wxe_util':'call'
			  (2939, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isPreview',1}}] )
	    -| ['compiler_generated'] )
	end
'fitThisSizeToPaper'/2 =
    %% Line 191
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{ImageSizeW,ImageSizeH}>
	      when let <_cor2> =
		    %% Line 192
		    call 'erlang':'is_integer'
			(ImageSizeW)
		in  let <_cor3> =
			%% Line 192
			call 'erlang':'is_integer'
			    (ImageSizeH)
		    in  %% Line 192
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 193
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 195
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<ImageSizeW>(32,1,'integer',['unsigned'|['native']]),
			#<ImageSizeH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 194
		      call 'wxe_util':'cast'
			  (2940, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'fitThisSizeToPaper',2}}] )
	    -| ['compiler_generated'] )
	end
'fitThisSizeToPage'/2 =
    %% Line 200
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{ImageSizeW,ImageSizeH}>
	      when let <_cor2> =
		    %% Line 201
		    call 'erlang':'is_integer'
			(ImageSizeW)
		in  let <_cor3> =
			%% Line 201
			call 'erlang':'is_integer'
			    (ImageSizeH)
		    in  %% Line 201
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 202
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 204
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<ImageSizeW>(32,1,'integer',['unsigned'|['native']]),
			#<ImageSizeH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 203
		      call 'wxe_util':'cast'
			  (2941, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'fitThisSizeToPage',2}}] )
	    -| ['compiler_generated'] )
	end
'fitThisSizeToPageMargins'/3 =
    %% Line 209
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor13},{ImageSizeW,ImageSizeH},{'wx_ref',PageSetupDataRef,PageSetupDataT,_cor14}>
	      when let <_cor3> =
		    %% Line 210
		    call 'erlang':'is_integer'
			(ImageSizeW)
		in  let <_cor4> =
			%% Line 210
			call 'erlang':'is_integer'
			    (ImageSizeH)
		    in  %% Line 210
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 211
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 212
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (PageSetupDataT,
				       'wxPageSetupDialogData') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call PageSetupDataT:'parent_class'
				    ('wxPageSetupDialogData')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor9> =
			  %% Line 214
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<ImageSizeW>(32,1,'integer',['unsigned'|['native']]),
			    #<ImageSizeH>(32,1,'integer',['unsigned'|['native']]),
			    #<PageSetupDataRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 213
			  call 'wxe_util':'cast'
			      (2942, _cor9)
	  ( <_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10})
		  -| [{'function_name',{'fitThisSizeToPageMargins',3}}] )
	    -| ['compiler_generated'] )
	end
'mapScreenSizeToPaper'/1 =
    %% Line 219
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 220
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 222
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 221
		      call 'wxe_util':'cast'
			  (2943, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'mapScreenSizeToPaper',1}}] )
	    -| ['compiler_generated'] )
	end
'mapScreenSizeToPage'/1 =
    %% Line 227
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 228
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 230
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 229
		      call 'wxe_util':'cast'
			  (2944, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'mapScreenSizeToPage',1}}] )
	    -| ['compiler_generated'] )
	end
'mapScreenSizeToPageMargins'/2 =
    %% Line 235
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',PageSetupDataRef,PageSetupDataT,_cor10}> when 'true' ->
	      do  %% Line 236
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 237
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (PageSetupDataT,
				       'wxPageSetupDialogData') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call PageSetupDataT:'parent_class'
				    ('wxPageSetupDialogData')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 239
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<PageSetupDataRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 238
			  call 'wxe_util':'cast'
			      (2945, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'mapScreenSizeToPageMargins',2}}] )
	    -| ['compiler_generated'] )
	end
'mapScreenSizeToDevice'/1 =
    %% Line 244
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 245
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 247
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 246
		      call 'wxe_util':'cast'
			  (2946, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'mapScreenSizeToDevice',1}}] )
	    -| ['compiler_generated'] )
	end
'getLogicalPaperRect'/1 =
    %% Line 252
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 253
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 255
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 254
		      call 'wxe_util':'call'
			  (2947, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLogicalPaperRect',1}}] )
	    -| ['compiler_generated'] )
	end
'getLogicalPageRect'/1 =
    %% Line 260
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 261
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 263
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 262
		      call 'wxe_util':'call'
			  (2948, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLogicalPageRect',1}}] )
	    -| ['compiler_generated'] )
	end
'getLogicalPageMarginsRect'/2 =
    %% Line 268
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',PageSetupDataRef,PageSetupDataT,_cor10}> when 'true' ->
	      do  %% Line 269
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 270
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (PageSetupDataT,
				       'wxPageSetupDialogData') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call PageSetupDataT:'parent_class'
				    ('wxPageSetupDialogData')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 272
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<PageSetupDataRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 271
			  call 'wxe_util':'call'
			      (2949, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'getLogicalPageMarginsRect',2}}] )
	    -| ['compiler_generated'] )
	end
'setLogicalOrigin'/3 =
    %% Line 277
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},X,Y>
	      when let <_cor3> =
		    %% Line 278
		    call 'erlang':'is_integer'
			(X)
		in  let <_cor4> =
			%% Line 278
			call 'erlang':'is_integer'
			    (Y)
		    in  %% Line 278
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 279
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 281
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<X>(32,1,'integer',['unsigned'|['native']]),
			#<Y>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 280
		      call 'wxe_util':'cast'
			  (2950, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setLogicalOrigin',3}}] )
	    -| ['compiler_generated'] )
	end
'offsetLogicalOrigin'/3 =
    %% Line 286
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Xoff,Yoff>
	      when let <_cor3> =
		    %% Line 287
		    call 'erlang':'is_integer'
			(Xoff)
		in  let <_cor4> =
			%% Line 287
			call 'erlang':'is_integer'
			    (Yoff)
		    in  %% Line 287
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 288
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 290
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Xoff>(32,1,'integer',['unsigned'|['native']]),
			#<Yoff>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 289
		      call 'wxe_util':'cast'
			  (2951, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'offsetLogicalOrigin',3}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 294
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 295
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxPrintout') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxPrintout')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 296
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 297
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxPrintout')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxPrintout', _cor0)
end