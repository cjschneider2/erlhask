module 'wxScreenDC' ['blit'/5,
		     'blit'/6,
		     'calcBoundingBox'/3,
		     'clear'/1,
		     'computeScaleAndOrigin'/1,
		     'crossHair'/2,
		     'destroy'/1,
		     'destroyClippingRegion'/1,
		     'deviceToLogicalX'/2,
		     'deviceToLogicalXRel'/2,
		     'deviceToLogicalY'/2,
		     'deviceToLogicalYRel'/2,
		     'drawArc'/4,
		     'drawBitmap'/3,
		     'drawBitmap'/4,
		     'drawCheckMark'/2,
		     'drawCircle'/3,
		     'drawEllipse'/2,
		     'drawEllipse'/3,
		     'drawEllipticArc'/5,
		     'drawIcon'/3,
		     'drawLabel'/3,
		     'drawLabel'/4,
		     'drawLine'/3,
		     'drawLines'/2,
		     'drawLines'/3,
		     'drawPoint'/2,
		     'drawPolygon'/2,
		     'drawPolygon'/3,
		     'drawRectangle'/2,
		     'drawRectangle'/3,
		     'drawRotatedText'/4,
		     'drawRoundedRectangle'/3,
		     'drawRoundedRectangle'/4,
		     'drawText'/3,
		     'endDoc'/1,
		     'endPage'/1,
		     'floodFill'/3,
		     'floodFill'/4,
		     'getBackground'/1,
		     'getBackgroundMode'/1,
		     'getBrush'/1,
		     'getCharHeight'/1,
		     'getCharWidth'/1,
		     'getClippingBox'/1,
		     'getFont'/1,
		     'getLayoutDirection'/1,
		     'getLogicalFunction'/1,
		     'getMapMode'/1,
		     'getMultiLineTextExtent'/2,
		     'getMultiLineTextExtent'/3,
		     'getPPI'/1,
		     'getPartialTextExtents'/2,
		     'getPen'/1,
		     'getPixel'/2,
		     'getSize'/1,
		     'getSizeMM'/1,
		     'getTextBackground'/1,
		     'getTextExtent'/2,
		     'getTextExtent'/3,
		     'getTextForeground'/1,
		     'getUserScale'/1,
		     'gradientFillConcentric'/4,
		     'gradientFillConcentric'/5,
		     'gradientFillLinear'/4,
		     'gradientFillLinear'/5,
		     'isOk'/1,
		     'logicalToDeviceX'/2,
		     'logicalToDeviceXRel'/2,
		     'logicalToDeviceY'/2,
		     'logicalToDeviceYRel'/2,
		     'maxX'/1,
		     'maxY'/1,
		     'minX'/1,
		     'minY'/1,
		     'module_info'/0,
		     'module_info'/1,
		     'new'/0,
		     'parent_class'/1,
		     'resetBoundingBox'/1,
		     'setAxisOrientation'/3,
		     'setBackground'/2,
		     'setBackgroundMode'/2,
		     'setBrush'/2,
		     'setClippingRegion'/2,
		     'setClippingRegion'/3,
		     'setDeviceOrigin'/3,
		     'setFont'/2,
		     'setLayoutDirection'/2,
		     'setLogicalFunction'/2,
		     'setMapMode'/2,
		     'setPalette'/2,
		     'setPen'/2,
		     'setTextBackground'/2,
		     'setTextForeground'/2,
		     'setUserScale'/3,
		     'startDoc'/2,
		     'startPage'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 55
		'export_type' =
		    %% Line 55
		    [{'wxScreenDC',0}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{'wxScreenDC',{'remote_type',62,[{'atom',62,'wx'}|[{'atom',62,'wx_object'}|[[]]]]},[]}],
		%% Line 64
		'spec' =
		    %% Line 64
		    [{{'new',0},[{'type',64,'fun',[{'type',64,'product',[]}|[{'type',64,'wxScreenDC',[]}]]}]}],
		%% Line 70
		'spec' =
		    %% Line 70
		    [{{'destroy',1},[{'type',70,'fun',[{'type',70,'product',[{'ann_type',70,[{'var',70,'This'}|[{'type',70,'wxScreenDC',[]}]]}]}|[{'atom',70,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 59
    fun (_cor0) ->
	case _cor0 of
	  <'wxDC'> when 'true' ->
	      'true'
	  %% Line 60
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxScreenDC'})
	end
'new'/0 =
    %% Line 65
    fun () ->
	%% Line 66
	call 'wxe_util':'construct'
	    (723, %% Line 67
		  #{}#)
'destroy'/1 =
    %% Line 71
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 72
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxScreenDC') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxScreenDC')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 73
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 74
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'startPage'/1 =
    %% Line 77
    fun (_cor0) ->
	call 'wxDC':'startPage'
	    (_cor0)
'startDoc'/2 =
    %% Line 79
    fun (_cor1,_cor0) ->
	call 'wxDC':'startDoc'
	    (_cor1, _cor0)
'setUserScale'/3 =
    %% Line 81
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'setUserScale'
	    (_cor2, _cor1, _cor0)
'setTextForeground'/2 =
    %% Line 83
    fun (_cor1,_cor0) ->
	call 'wxDC':'setTextForeground'
	    (_cor1, _cor0)
'setTextBackground'/2 =
    %% Line 85
    fun (_cor1,_cor0) ->
	call 'wxDC':'setTextBackground'
	    (_cor1, _cor0)
'setPen'/2 =
    %% Line 87
    fun (_cor1,_cor0) ->
	call 'wxDC':'setPen'
	    (_cor1, _cor0)
'setPalette'/2 =
    %% Line 89
    fun (_cor1,_cor0) ->
	call 'wxDC':'setPalette'
	    (_cor1, _cor0)
'setMapMode'/2 =
    %% Line 91
    fun (_cor1,_cor0) ->
	call 'wxDC':'setMapMode'
	    (_cor1, _cor0)
'setLogicalFunction'/2 =
    %% Line 93
    fun (_cor1,_cor0) ->
	call 'wxDC':'setLogicalFunction'
	    (_cor1, _cor0)
'setLayoutDirection'/2 =
    %% Line 95
    fun (_cor1,_cor0) ->
	call 'wxDC':'setLayoutDirection'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 97
    fun (_cor1,_cor0) ->
	call 'wxDC':'setFont'
	    (_cor1, _cor0)
'setDeviceOrigin'/3 =
    %% Line 99
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'setDeviceOrigin'
	    (_cor2, _cor1, _cor0)
'setClippingRegion'/3 =
    %% Line 101
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'setClippingRegion'
	    (_cor2, _cor1, _cor0)
'setClippingRegion'/2 =
    %% Line 103
    fun (_cor1,_cor0) ->
	call 'wxDC':'setClippingRegion'
	    (_cor1, _cor0)
'setBrush'/2 =
    %% Line 105
    fun (_cor1,_cor0) ->
	call 'wxDC':'setBrush'
	    (_cor1, _cor0)
'setBackgroundMode'/2 =
    %% Line 107
    fun (_cor1,_cor0) ->
	call 'wxDC':'setBackgroundMode'
	    (_cor1, _cor0)
'setBackground'/2 =
    %% Line 109
    fun (_cor1,_cor0) ->
	call 'wxDC':'setBackground'
	    (_cor1, _cor0)
'setAxisOrientation'/3 =
    %% Line 111
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'setAxisOrientation'
	    (_cor2, _cor1, _cor0)
'resetBoundingBox'/1 =
    %% Line 113
    fun (_cor0) ->
	call 'wxDC':'resetBoundingBox'
	    (_cor0)
'isOk'/1 =
    %% Line 115
    fun (_cor0) ->
	call 'wxDC':'isOk'
	    (_cor0)
'minY'/1 =
    %% Line 117
    fun (_cor0) ->
	call 'wxDC':'minY'
	    (_cor0)
'minX'/1 =
    %% Line 119
    fun (_cor0) ->
	call 'wxDC':'minX'
	    (_cor0)
'maxY'/1 =
    %% Line 121
    fun (_cor0) ->
	call 'wxDC':'maxY'
	    (_cor0)
'maxX'/1 =
    %% Line 123
    fun (_cor0) ->
	call 'wxDC':'maxX'
	    (_cor0)
'logicalToDeviceYRel'/2 =
    %% Line 125
    fun (_cor1,_cor0) ->
	call 'wxDC':'logicalToDeviceYRel'
	    (_cor1, _cor0)
'logicalToDeviceY'/2 =
    %% Line 127
    fun (_cor1,_cor0) ->
	call 'wxDC':'logicalToDeviceY'
	    (_cor1, _cor0)
'logicalToDeviceXRel'/2 =
    %% Line 129
    fun (_cor1,_cor0) ->
	call 'wxDC':'logicalToDeviceXRel'
	    (_cor1, _cor0)
'logicalToDeviceX'/2 =
    %% Line 131
    fun (_cor1,_cor0) ->
	call 'wxDC':'logicalToDeviceX'
	    (_cor1, _cor0)
'gradientFillLinear'/5 =
    %% Line 133
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxDC':'gradientFillLinear'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'gradientFillLinear'/4 =
    %% Line 135
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxDC':'gradientFillLinear'
	    (_cor3, _cor2, _cor1, _cor0)
'gradientFillConcentric'/5 =
    %% Line 137
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxDC':'gradientFillConcentric'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'gradientFillConcentric'/4 =
    %% Line 139
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxDC':'gradientFillConcentric'
	    (_cor3, _cor2, _cor1, _cor0)
'getUserScale'/1 =
    %% Line 141
    fun (_cor0) ->
	call 'wxDC':'getUserScale'
	    (_cor0)
'getTextForeground'/1 =
    %% Line 143
    fun (_cor0) ->
	call 'wxDC':'getTextForeground'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 145
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 147
    fun (_cor1,_cor0) ->
	call 'wxDC':'getTextExtent'
	    (_cor1, _cor0)
'getTextBackground'/1 =
    %% Line 149
    fun (_cor0) ->
	call 'wxDC':'getTextBackground'
	    (_cor0)
'getSizeMM'/1 =
    %% Line 151
    fun (_cor0) ->
	call 'wxDC':'getSizeMM'
	    (_cor0)
'getSize'/1 =
    %% Line 153
    fun (_cor0) ->
	call 'wxDC':'getSize'
	    (_cor0)
'getPPI'/1 =
    %% Line 155
    fun (_cor0) ->
	call 'wxDC':'getPPI'
	    (_cor0)
'getPixel'/2 =
    %% Line 157
    fun (_cor1,_cor0) ->
	call 'wxDC':'getPixel'
	    (_cor1, _cor0)
'getPen'/1 =
    %% Line 159
    fun (_cor0) ->
	call 'wxDC':'getPen'
	    (_cor0)
'getPartialTextExtents'/2 =
    %% Line 161
    fun (_cor1,_cor0) ->
	call 'wxDC':'getPartialTextExtents'
	    (_cor1, _cor0)
'getMultiLineTextExtent'/3 =
    %% Line 163
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'getMultiLineTextExtent'
	    (_cor2, _cor1, _cor0)
'getMultiLineTextExtent'/2 =
    %% Line 165
    fun (_cor1,_cor0) ->
	call 'wxDC':'getMultiLineTextExtent'
	    (_cor1, _cor0)
'getMapMode'/1 =
    %% Line 167
    fun (_cor0) ->
	call 'wxDC':'getMapMode'
	    (_cor0)
'getLogicalFunction'/1 =
    %% Line 169
    fun (_cor0) ->
	call 'wxDC':'getLogicalFunction'
	    (_cor0)
'getLayoutDirection'/1 =
    %% Line 171
    fun (_cor0) ->
	call 'wxDC':'getLayoutDirection'
	    (_cor0)
'getFont'/1 =
    %% Line 173
    fun (_cor0) ->
	call 'wxDC':'getFont'
	    (_cor0)
'getClippingBox'/1 =
    %% Line 175
    fun (_cor0) ->
	call 'wxDC':'getClippingBox'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 177
    fun (_cor0) ->
	call 'wxDC':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 179
    fun (_cor0) ->
	call 'wxDC':'getCharHeight'
	    (_cor0)
'getBrush'/1 =
    %% Line 181
    fun (_cor0) ->
	call 'wxDC':'getBrush'
	    (_cor0)
'getBackgroundMode'/1 =
    %% Line 183
    fun (_cor0) ->
	call 'wxDC':'getBackgroundMode'
	    (_cor0)
'getBackground'/1 =
    %% Line 185
    fun (_cor0) ->
	call 'wxDC':'getBackground'
	    (_cor0)
'floodFill'/4 =
    %% Line 187
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxDC':'floodFill'
	    (_cor3, _cor2, _cor1, _cor0)
'floodFill'/3 =
    %% Line 189
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'floodFill'
	    (_cor2, _cor1, _cor0)
'endPage'/1 =
    %% Line 191
    fun (_cor0) ->
	call 'wxDC':'endPage'
	    (_cor0)
'endDoc'/1 =
    %% Line 193
    fun (_cor0) ->
	call 'wxDC':'endDoc'
	    (_cor0)
'drawText'/3 =
    %% Line 195
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawText'
	    (_cor2, _cor1, _cor0)
'drawRoundedRectangle'/4 =
    %% Line 197
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawRoundedRectangle'
	    (_cor3, _cor2, _cor1, _cor0)
'drawRoundedRectangle'/3 =
    %% Line 199
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawRoundedRectangle'
	    (_cor2, _cor1, _cor0)
'drawRotatedText'/4 =
    %% Line 201
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawRotatedText'
	    (_cor3, _cor2, _cor1, _cor0)
'drawRectangle'/3 =
    %% Line 203
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawRectangle'
	    (_cor2, _cor1, _cor0)
'drawRectangle'/2 =
    %% Line 205
    fun (_cor1,_cor0) ->
	call 'wxDC':'drawRectangle'
	    (_cor1, _cor0)
'drawPoint'/2 =
    %% Line 207
    fun (_cor1,_cor0) ->
	call 'wxDC':'drawPoint'
	    (_cor1, _cor0)
'drawPolygon'/3 =
    %% Line 209
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawPolygon'
	    (_cor2, _cor1, _cor0)
'drawPolygon'/2 =
    %% Line 211
    fun (_cor1,_cor0) ->
	call 'wxDC':'drawPolygon'
	    (_cor1, _cor0)
'drawLines'/3 =
    %% Line 213
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawLines'
	    (_cor2, _cor1, _cor0)
'drawLines'/2 =
    %% Line 215
    fun (_cor1,_cor0) ->
	call 'wxDC':'drawLines'
	    (_cor1, _cor0)
'drawLine'/3 =
    %% Line 217
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawLine'
	    (_cor2, _cor1, _cor0)
'drawLabel'/4 =
    %% Line 219
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawLabel'
	    (_cor3, _cor2, _cor1, _cor0)
'drawLabel'/3 =
    %% Line 221
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawLabel'
	    (_cor2, _cor1, _cor0)
'drawIcon'/3 =
    %% Line 223
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawIcon'
	    (_cor2, _cor1, _cor0)
'drawEllipticArc'/5 =
    %% Line 225
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawEllipticArc'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'drawEllipse'/3 =
    %% Line 227
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawEllipse'
	    (_cor2, _cor1, _cor0)
'drawEllipse'/2 =
    %% Line 229
    fun (_cor1,_cor0) ->
	call 'wxDC':'drawEllipse'
	    (_cor1, _cor0)
'drawCircle'/3 =
    %% Line 231
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawCircle'
	    (_cor2, _cor1, _cor0)
'drawCheckMark'/2 =
    %% Line 233
    fun (_cor1,_cor0) ->
	call 'wxDC':'drawCheckMark'
	    (_cor1, _cor0)
'drawBitmap'/4 =
    %% Line 235
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawBitmap'
	    (_cor3, _cor2, _cor1, _cor0)
'drawBitmap'/3 =
    %% Line 237
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawBitmap'
	    (_cor2, _cor1, _cor0)
'drawArc'/4 =
    %% Line 239
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxDC':'drawArc'
	    (_cor3, _cor2, _cor1, _cor0)
'deviceToLogicalYRel'/2 =
    %% Line 241
    fun (_cor1,_cor0) ->
	call 'wxDC':'deviceToLogicalYRel'
	    (_cor1, _cor0)
'deviceToLogicalY'/2 =
    %% Line 243
    fun (_cor1,_cor0) ->
	call 'wxDC':'deviceToLogicalY'
	    (_cor1, _cor0)
'deviceToLogicalXRel'/2 =
    %% Line 245
    fun (_cor1,_cor0) ->
	call 'wxDC':'deviceToLogicalXRel'
	    (_cor1, _cor0)
'deviceToLogicalX'/2 =
    %% Line 247
    fun (_cor1,_cor0) ->
	call 'wxDC':'deviceToLogicalX'
	    (_cor1, _cor0)
'destroyClippingRegion'/1 =
    %% Line 249
    fun (_cor0) ->
	call 'wxDC':'destroyClippingRegion'
	    (_cor0)
'crossHair'/2 =
    %% Line 251
    fun (_cor1,_cor0) ->
	call 'wxDC':'crossHair'
	    (_cor1, _cor0)
'computeScaleAndOrigin'/1 =
    %% Line 253
    fun (_cor0) ->
	call 'wxDC':'computeScaleAndOrigin'
	    (_cor0)
'clear'/1 =
    %% Line 255
    fun (_cor0) ->
	call 'wxDC':'clear'
	    (_cor0)
'calcBoundingBox'/3 =
    %% Line 257
    fun (_cor2,_cor1,_cor0) ->
	call 'wxDC':'calcBoundingBox'
	    (_cor2, _cor1, _cor0)
'blit'/6 =
    %% Line 259
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxDC':'blit'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'blit'/5 =
    %% Line 261
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxDC':'blit'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxScreenDC')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxScreenDC', _cor0)
end