module 'wxChoicebook' ['addPage'/3,
		       'addPage'/4,
		       'advanceSelection'/1,
		       'advanceSelection'/2,
		       'assignImageList'/2,
		       'cacheBestSize'/2,
		       'captureMouse'/1,
		       'center'/1,
		       'center'/2,
		       'centerOnParent'/1,
		       'centerOnParent'/2,
		       'centre'/1,
		       'centre'/2,
		       'centreOnParent'/1,
		       'centreOnParent'/2,
		       'changeSelection'/2,
		       'clearBackground'/1,
		       'clientToScreen'/2,
		       'clientToScreen'/3,
		       'close'/1,
		       'close'/2,
		       'connect'/2,
		       'connect'/3,
		       'convertDialogToPixels'/2,
		       'convertPixelsToDialog'/2,
		       'create'/3,
		       'create'/4,
		       'deleteAllPages'/1,
		       'deletePage'/2,
		       'destroy'/1,
		       'destroyChildren'/1,
		       'disable'/1,
		       'disconnect'/1,
		       'disconnect'/2,
		       'disconnect'/3,
		       'enable'/1,
		       'enable'/2,
		       'findWindow'/2,
		       'fit'/1,
		       'fitInside'/1,
		       'freeze'/1,
		       'getAcceleratorTable'/1,
		       'getBackgroundColour'/1,
		       'getBackgroundStyle'/1,
		       'getBestSize'/1,
		       'getCaret'/1,
		       'getCharHeight'/1,
		       'getCharWidth'/1,
		       'getChildren'/1,
		       'getClientSize'/1,
		       'getContainingSizer'/1,
		       'getCurrentPage'/1,
		       'getCursor'/1,
		       'getDropTarget'/1,
		       'getEventHandler'/1,
		       'getExtraStyle'/1,
		       'getFont'/1,
		       'getForegroundColour'/1,
		       'getGrandParent'/1,
		       'getHandle'/1,
		       'getHelpText'/1,
		       'getId'/1,
		       'getImageList'/1,
		       'getLabel'/1,
		       'getMaxSize'/1,
		       'getMinSize'/1,
		       'getName'/1,
		       'getPage'/2,
		       'getPageCount'/1,
		       'getPageImage'/2,
		       'getPageText'/2,
		       'getParent'/1,
		       'getPosition'/1,
		       'getRect'/1,
		       'getScreenPosition'/1,
		       'getScreenRect'/1,
		       'getScrollPos'/2,
		       'getScrollRange'/2,
		       'getScrollThumb'/2,
		       'getSelection'/1,
		       'getSize'/1,
		       'getSizer'/1,
		       'getTextExtent'/2,
		       'getTextExtent'/3,
		       'getToolTip'/1,
		       'getUpdateRegion'/1,
		       'getVirtualSize'/1,
		       'getWindowStyleFlag'/1,
		       'getWindowVariant'/1,
		       'hasCapture'/1,
		       'hasScrollbar'/2,
		       'hasTransparentBackground'/1,
		       'hide'/1,
		       'hitTest'/2,
		       'inheritAttributes'/1,
		       'initDialog'/1,
		       'insertPage'/4,
		       'insertPage'/5,
		       'invalidateBestSize'/1,
		       'isEnabled'/1,
		       'isExposed'/2,
		       'isExposed'/3,
		       'isExposed'/5,
		       'isRetained'/1,
		       'isShown'/1,
		       'isTopLevel'/1,
		       'layout'/1,
		       'lineDown'/1,
		       'lineUp'/1,
		       'lower'/1,
		       'makeModal'/1,
		       'makeModal'/2,
		       'module_info'/0,
		       'module_info'/1,
		       'move'/2,
		       'move'/3,
		       'move'/4,
		       'moveAfterInTabOrder'/2,
		       'moveBeforeInTabOrder'/2,
		       'navigate'/1,
		       'navigate'/2,
		       'new'/0,
		       'new'/2,
		       'new'/3,
		       'pageDown'/1,
		       'pageUp'/1,
		       'parent_class'/1,
		       'popEventHandler'/1,
		       'popEventHandler'/2,
		       'popupMenu'/2,
		       'popupMenu'/3,
		       'popupMenu'/4,
		       'raise'/1,
		       'refresh'/1,
		       'refresh'/2,
		       'refreshRect'/2,
		       'refreshRect'/3,
		       'releaseMouse'/1,
		       'removeChild'/2,
		       'removePage'/2,
		       'reparent'/2,
		       'screenToClient'/1,
		       'screenToClient'/2,
		       'scrollLines'/2,
		       'scrollPages'/2,
		       'scrollWindow'/3,
		       'scrollWindow'/4,
		       'setAcceleratorTable'/2,
		       'setAutoLayout'/2,
		       'setBackgroundColour'/2,
		       'setBackgroundStyle'/2,
		       'setCaret'/2,
		       'setClientSize'/2,
		       'setClientSize'/3,
		       'setContainingSizer'/2,
		       'setCursor'/2,
		       'setDropTarget'/2,
		       'setExtraStyle'/2,
		       'setFocus'/1,
		       'setFocusFromKbd'/1,
		       'setFont'/2,
		       'setForegroundColour'/2,
		       'setHelpText'/2,
		       'setId'/2,
		       'setImageList'/2,
		       'setLabel'/2,
		       'setMaxSize'/2,
		       'setMinSize'/2,
		       'setName'/2,
		       'setOwnBackgroundColour'/2,
		       'setOwnFont'/2,
		       'setOwnForegroundColour'/2,
		       'setPageImage'/3,
		       'setPageSize'/2,
		       'setPageText'/3,
		       'setPalette'/2,
		       'setScrollPos'/3,
		       'setScrollPos'/4,
		       'setScrollbar'/5,
		       'setScrollbar'/6,
		       'setSelection'/2,
		       'setSize'/2,
		       'setSize'/3,
		       'setSize'/5,
		       'setSize'/6,
		       'setSizeHints'/2,
		       'setSizeHints'/3,
		       'setSizeHints'/4,
		       'setSizer'/2,
		       'setSizer'/3,
		       'setSizerAndFit'/2,
		       'setSizerAndFit'/3,
		       'setThemeEnabled'/2,
		       'setToolTip'/2,
		       'setVirtualSize'/2,
		       'setVirtualSize'/3,
		       'setVirtualSizeHints'/2,
		       'setVirtualSizeHints'/3,
		       'setVirtualSizeHints'/4,
		       'setWindowStyle'/2,
		       'setWindowStyleFlag'/2,
		       'setWindowVariant'/2,
		       'shouldInheritColours'/1,
		       'show'/1,
		       'show'/2,
		       'thaw'/1,
		       'transferDataFromWindow'/1,
		       'transferDataToWindow'/1,
		       'update'/1,
		       'updateWindowUI'/1,
		       'updateWindowUI'/2,
		       'validate'/1,
		       'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 77
		'export_type' =
		    %% Line 77
		    [{'wxChoicebook',0}],
		%% Line 84
		'type' =
		    %% Line 84
		    [{'wxChoicebook',{'remote_type',84,[{'atom',84,'wx'}|[{'atom',84,'wx_object'}|[[]]]]},[]}],
		%% Line 86
		'spec' =
		    %% Line 86
		    [{{'new',0},[{'type',86,'fun',[{'type',86,'product',[]}|[{'type',86,'wxChoicebook',[]}]]}]}],
		%% Line 92
		'spec' =
		    %% Line 92
		    [{{'new',2},[{'type',92,'bounded_fun',[{'type',92,'fun',[{'type',92,'product',[{'var',92,'Parent'}|[{'var',92,'Id'}]]}|[{'type',92,'wxChoicebook',[]}]]}|[[{'type',93,'constraint',[{'atom',93,'is_subtype'}|[[{'var',93,'Parent'}|[{'remote_type',93,[{'atom',93,'wxWindow'}|[{'atom',93,'wxWindow'}|[[]]]]}]]]]}|[{'type',93,'constraint',[{'atom',93,'is_subtype'}|[[{'var',93,'Id'}|[{'type',93,'integer',[]}]]]]}]]]]}]}],
		%% Line 100
		'spec' =
		    %% Line 100
		    [{{'new',3},[{'type',100,'bounded_fun',[{'type',100,'fun',[{'type',100,'product',[{'var',100,'Parent'}|[{'var',100,'Id'}|[{'type',100,'list',[{'var',100,'Option'}]}]]]}|[{'type',100,'wxChoicebook',[]}]]}|[[{'type',101,'constraint',[{'atom',101,'is_subtype'}|[[{'var',101,'Parent'}|[{'remote_type',101,[{'atom',101,'wxWindow'}|[{'atom',101,'wxWindow'}|[[]]]]}]]]]}|[{'type',101,'constraint',[{'atom',101,'is_subtype'}|[[{'var',101,'Id'}|[{'type',101,'integer',[]}]]]]}|[{'type',102,'constraint',[{'atom',102,'is_subtype'}|[[{'var',102,'Option'}|[{'type',102,'union',[{'type',102,'tuple',[{'atom',102,'pos'}|[{'type',102,'tuple',[{'ann_type',102,[{'var',102,'X'}|[{'type',102,'integer',[]}]]}|[{'ann_type',102,[{'var',102,'Y'}|[{'type',102,'integer',[]}]]}]]}]]}|[{'type',103,'tuple',[{'atom',103,'size'}|[{'type',103,'tuple',[{'ann_type',103,[{'var',103,'W'}|[{'type',103,'integer',[]}]]}|[{'ann_type',103,[{'var',103,'H'}|[{'type',103,'integer',[]}]]}]]}]]}|[{'type',104,'tuple',[{'atom',104,'style'}|[{'type',104,'integer',[]}]]}]]]}]]]]}]]]]]}]}],
		%% Line 117
		'spec' =
		    %% Line 117
		    [{{'addPage',3},[{'type',117,'bounded_fun',[{'type',117,'fun',[{'type',117,'product',[{'var',117,'This'}|[{'var',117,'Page'}|[{'var',117,'Text'}]]]}|[{'type',117,'boolean',[]}]]}|[[{'type',118,'constraint',[{'atom',118,'is_subtype'}|[[{'var',118,'This'}|[{'type',118,'wxChoicebook',[]}]]]]}|[{'type',118,'constraint',[{'atom',118,'is_subtype'}|[[{'var',118,'Page'}|[{'remote_type',118,[{'atom',118,'wxWindow'}|[{'atom',118,'wxWindow'}|[[]]]]}]]]]}|[{'type',118,'constraint',[{'atom',118,'is_subtype'}|[[{'var',118,'Text'}|[{'remote_type',118,[{'atom',118,'unicode'}|[{'atom',118,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 125
		'spec' =
		    %% Line 125
		    [{{'addPage',4},[{'type',125,'bounded_fun',[{'type',125,'fun',[{'type',125,'product',[{'var',125,'This'}|[{'var',125,'Page'}|[{'var',125,'Text'}|[{'type',125,'list',[{'var',125,'Option'}]}]]]]}|[{'type',125,'boolean',[]}]]}|[[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'This'}|[{'type',126,'wxChoicebook',[]}]]]]}|[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'Page'}|[{'remote_type',126,[{'atom',126,'wxWindow'}|[{'atom',126,'wxWindow'}|[[]]]]}]]]]}|[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'Text'}|[{'remote_type',126,[{'atom',126,'unicode'}|[{'atom',126,'chardata'}|[[]]]]}]]]]}|[{'type',127,'constraint',[{'atom',127,'is_subtype'}|[[{'var',127,'Option'}|[{'type',127,'union',[{'type',127,'tuple',[{'atom',127,'bSelect'}|[{'type',127,'boolean',[]}]]}|[{'type',128,'tuple',[{'atom',128,'imageId'}|[{'type',128,'integer',[]}]]}]]}]]]]}]]]]]]}]}],
		%% Line 142
		'spec' =
		    %% Line 142
		    [{{'advanceSelection',1},[{'type',142,'bounded_fun',[{'type',142,'fun',[{'type',142,'product',[{'var',142,'This'}]}|[{'atom',142,'ok'}]]}|[[{'type',143,'constraint',[{'atom',143,'is_subtype'}|[[{'var',143,'This'}|[{'type',143,'wxChoicebook',[]}]]]]}]]]}]}],
		%% Line 150
		'spec' =
		    %% Line 150
		    [{{'advanceSelection',2},[{'type',150,'bounded_fun',[{'type',150,'fun',[{'type',150,'product',[{'var',150,'This'}|[{'type',150,'list',[{'var',150,'Option'}]}]]}|[{'atom',150,'ok'}]]}|[[{'type',151,'constraint',[{'atom',151,'is_subtype'}|[[{'var',151,'This'}|[{'type',151,'wxChoicebook',[]}]]]]}|[{'type',152,'constraint',[{'atom',152,'is_subtype'}|[[{'var',152,'Option'}|[{'type',152,'tuple',[{'atom',152,'forward'}|[{'type',152,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 163
		'spec' =
		    %% Line 163
		    [{{'assignImageList',2},[{'type',163,'bounded_fun',[{'type',163,'fun',[{'type',163,'product',[{'var',163,'This'}|[{'var',163,'ImageList'}]]}|[{'atom',163,'ok'}]]}|[[{'type',164,'constraint',[{'atom',164,'is_subtype'}|[[{'var',164,'This'}|[{'type',164,'wxChoicebook',[]}]]]]}|[{'type',164,'constraint',[{'atom',164,'is_subtype'}|[[{'var',164,'ImageList'}|[{'remote_type',164,[{'atom',164,'wxImageList'}|[{'atom',164,'wxImageList'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 172
		'spec' =
		    %% Line 172
		    [{{'create',3},[{'type',172,'bounded_fun',[{'type',172,'fun',[{'type',172,'product',[{'var',172,'This'}|[{'var',172,'Parent'}|[{'var',172,'Id'}]]]}|[{'type',172,'boolean',[]}]]}|[[{'type',173,'constraint',[{'atom',173,'is_subtype'}|[[{'var',173,'This'}|[{'type',173,'wxChoicebook',[]}]]]]}|[{'type',173,'constraint',[{'atom',173,'is_subtype'}|[[{'var',173,'Parent'}|[{'remote_type',173,[{'atom',173,'wxWindow'}|[{'atom',173,'wxWindow'}|[[]]]]}]]]]}|[{'type',173,'constraint',[{'atom',173,'is_subtype'}|[[{'var',173,'Id'}|[{'type',173,'integer',[]}]]]]}]]]]]}]}],
		%% Line 180
		'spec' =
		    %% Line 180
		    [{{'create',4},[{'type',180,'bounded_fun',[{'type',180,'fun',[{'type',180,'product',[{'var',180,'This'}|[{'var',180,'Parent'}|[{'var',180,'Id'}|[{'type',180,'list',[{'var',180,'Option'}]}]]]]}|[{'type',180,'boolean',[]}]]}|[[{'type',181,'constraint',[{'atom',181,'is_subtype'}|[[{'var',181,'This'}|[{'type',181,'wxChoicebook',[]}]]]]}|[{'type',181,'constraint',[{'atom',181,'is_subtype'}|[[{'var',181,'Parent'}|[{'remote_type',181,[{'atom',181,'wxWindow'}|[{'atom',181,'wxWindow'}|[[]]]]}]]]]}|[{'type',181,'constraint',[{'atom',181,'is_subtype'}|[[{'var',181,'Id'}|[{'type',181,'integer',[]}]]]]}|[{'type',182,'constraint',[{'atom',182,'is_subtype'}|[[{'var',182,'Option'}|[{'type',182,'union',[{'type',182,'tuple',[{'atom',182,'pos'}|[{'type',182,'tuple',[{'ann_type',182,[{'var',182,'X'}|[{'type',182,'integer',[]}]]}|[{'ann_type',182,[{'var',182,'Y'}|[{'type',182,'integer',[]}]]}]]}]]}|[{'type',183,'tuple',[{'atom',183,'size'}|[{'type',183,'tuple',[{'ann_type',183,[{'var',183,'W'}|[{'type',183,'integer',[]}]]}|[{'ann_type',183,[{'var',183,'H'}|[{'type',183,'integer',[]}]]}]]}]]}|[{'type',184,'tuple',[{'atom',184,'style'}|[{'type',184,'integer',[]}]]}]]]}]]]]}]]]]]]}]}],
		%% Line 198
		'spec' =
		    %% Line 198
		    [{{'deleteAllPages',1},[{'type',198,'bounded_fun',[{'type',198,'fun',[{'type',198,'product',[{'var',198,'This'}]}|[{'type',198,'boolean',[]}]]}|[[{'type',199,'constraint',[{'atom',199,'is_subtype'}|[[{'var',199,'This'}|[{'type',199,'wxChoicebook',[]}]]]]}]]]}]}],
		%% Line 206
		'spec' =
		    %% Line 206
		    [{{'deletePage',2},[{'type',206,'bounded_fun',[{'type',206,'fun',[{'type',206,'product',[{'var',206,'This'}|[{'var',206,'N'}]]}|[{'type',206,'boolean',[]}]]}|[[{'type',207,'constraint',[{'atom',207,'is_subtype'}|[[{'var',207,'This'}|[{'type',207,'wxChoicebook',[]}]]]]}|[{'type',207,'constraint',[{'atom',207,'is_subtype'}|[[{'var',207,'N'}|[{'type',207,'integer',[]}]]]]}]]]]}]}],
		%% Line 215
		'spec' =
		    %% Line 215
		    [{{'removePage',2},[{'type',215,'bounded_fun',[{'type',215,'fun',[{'type',215,'product',[{'var',215,'This'}|[{'var',215,'N'}]]}|[{'type',215,'boolean',[]}]]}|[[{'type',216,'constraint',[{'atom',216,'is_subtype'}|[[{'var',216,'This'}|[{'type',216,'wxChoicebook',[]}]]]]}|[{'type',216,'constraint',[{'atom',216,'is_subtype'}|[[{'var',216,'N'}|[{'type',216,'integer',[]}]]]]}]]]]}]}],
		%% Line 224
		'spec' =
		    %% Line 224
		    [{{'getCurrentPage',1},[{'type',224,'bounded_fun',[{'type',224,'fun',[{'type',224,'product',[{'var',224,'This'}]}|[{'remote_type',224,[{'atom',224,'wxWindow'}|[{'atom',224,'wxWindow'}|[[]]]]}]]}|[[{'type',225,'constraint',[{'atom',225,'is_subtype'}|[[{'var',225,'This'}|[{'type',225,'wxChoicebook',[]}]]]]}]]]}]}],
		%% Line 232
		'spec' =
		    %% Line 232
		    [{{'getImageList',1},[{'type',232,'bounded_fun',[{'type',232,'fun',[{'type',232,'product',[{'var',232,'This'}]}|[{'remote_type',232,[{'atom',232,'wxImageList'}|[{'atom',232,'wxImageList'}|[[]]]]}]]}|[[{'type',233,'constraint',[{'atom',233,'is_subtype'}|[[{'var',233,'This'}|[{'type',233,'wxChoicebook',[]}]]]]}]]]}]}],
		%% Line 240
		'spec' =
		    %% Line 240
		    [{{'getPage',2},[{'type',240,'bounded_fun',[{'type',240,'fun',[{'type',240,'product',[{'var',240,'This'}|[{'var',240,'N'}]]}|[{'remote_type',240,[{'atom',240,'wxWindow'}|[{'atom',240,'wxWindow'}|[[]]]]}]]}|[[{'type',241,'constraint',[{'atom',241,'is_subtype'}|[[{'var',241,'This'}|[{'type',241,'wxChoicebook',[]}]]]]}|[{'type',241,'constraint',[{'atom',241,'is_subtype'}|[[{'var',241,'N'}|[{'type',241,'integer',[]}]]]]}]]]]}]}],
		%% Line 249
		'spec' =
		    %% Line 249
		    [{{'getPageCount',1},[{'type',249,'bounded_fun',[{'type',249,'fun',[{'type',249,'product',[{'var',249,'This'}]}|[{'type',249,'integer',[]}]]}|[[{'type',250,'constraint',[{'atom',250,'is_subtype'}|[[{'var',250,'This'}|[{'type',250,'wxChoicebook',[]}]]]]}]]]}]}],
		%% Line 257
		'spec' =
		    %% Line 257
		    [{{'getPageImage',2},[{'type',257,'bounded_fun',[{'type',257,'fun',[{'type',257,'product',[{'var',257,'This'}|[{'var',257,'N'}]]}|[{'type',257,'integer',[]}]]}|[[{'type',258,'constraint',[{'atom',258,'is_subtype'}|[[{'var',258,'This'}|[{'type',258,'wxChoicebook',[]}]]]]}|[{'type',258,'constraint',[{'atom',258,'is_subtype'}|[[{'var',258,'N'}|[{'type',258,'integer',[]}]]]]}]]]]}]}],
		%% Line 266
		'spec' =
		    %% Line 266
		    [{{'getPageText',2},[{'type',266,'bounded_fun',[{'type',266,'fun',[{'type',266,'product',[{'var',266,'This'}|[{'var',266,'N'}]]}|[{'remote_type',266,[{'atom',266,'unicode'}|[{'atom',266,'charlist'}|[[]]]]}]]}|[[{'type',267,'constraint',[{'atom',267,'is_subtype'}|[[{'var',267,'This'}|[{'type',267,'wxChoicebook',[]}]]]]}|[{'type',267,'constraint',[{'atom',267,'is_subtype'}|[[{'var',267,'N'}|[{'type',267,'integer',[]}]]]]}]]]]}]}],
		%% Line 275
		'spec' =
		    %% Line 275
		    [{{'getSelection',1},[{'type',275,'bounded_fun',[{'type',275,'fun',[{'type',275,'product',[{'var',275,'This'}]}|[{'type',275,'integer',[]}]]}|[[{'type',276,'constraint',[{'atom',276,'is_subtype'}|[[{'var',276,'This'}|[{'type',276,'wxChoicebook',[]}]]]]}]]]}]}],
		%% Line 283
		'spec' =
		    %% Line 283
		    [{{'hitTest',2},[{'type',283,'bounded_fun',[{'type',283,'fun',[{'type',283,'product',[{'var',283,'This'}|[{'var',283,'Pt'}]]}|[{'var',283,'Result'}]]}|[[{'type',284,'constraint',[{'atom',284,'is_subtype'}|[[{'var',284,'Result'}|[{'type',284,'tuple',[{'ann_type',284,[{'var',284,'Res'}|[{'type',284,'integer',[]}]]}|[{'ann_type',284,[{'var',284,'Flags'}|[{'type',284,'integer',[]}]]}]]}]]]]}|[{'type',285,'constraint',[{'atom',285,'is_subtype'}|[[{'var',285,'This'}|[{'type',285,'wxChoicebook',[]}]]]]}|[{'type',285,'constraint',[{'atom',285,'is_subtype'}|[[{'var',285,'Pt'}|[{'type',285,'tuple',[{'ann_type',285,[{'var',285,'X'}|[{'type',285,'integer',[]}]]}|[{'ann_type',285,[{'var',285,'Y'}|[{'type',285,'integer',[]}]]}]]}]]]]}]]]]]}]}],
		%% Line 293
		'spec' =
		    %% Line 293
		    [{{'insertPage',4},[{'type',293,'bounded_fun',[{'type',293,'fun',[{'type',293,'product',[{'var',293,'This'}|[{'var',293,'N'}|[{'var',293,'Page'}|[{'var',293,'Text'}]]]]}|[{'type',293,'boolean',[]}]]}|[[{'type',294,'constraint',[{'atom',294,'is_subtype'}|[[{'var',294,'This'}|[{'type',294,'wxChoicebook',[]}]]]]}|[{'type',294,'constraint',[{'atom',294,'is_subtype'}|[[{'var',294,'N'}|[{'type',294,'integer',[]}]]]]}|[{'type',294,'constraint',[{'atom',294,'is_subtype'}|[[{'var',294,'Page'}|[{'remote_type',294,[{'atom',294,'wxWindow'}|[{'atom',294,'wxWindow'}|[[]]]]}]]]]}|[{'type',294,'constraint',[{'atom',294,'is_subtype'}|[[{'var',294,'Text'}|[{'remote_type',294,[{'atom',294,'unicode'}|[{'atom',294,'chardata'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 301
		'spec' =
		    %% Line 301
		    [{{'insertPage',5},[{'type',301,'bounded_fun',[{'type',301,'fun',[{'type',301,'product',[{'var',301,'This'}|[{'var',301,'N'}|[{'var',301,'Page'}|[{'var',301,'Text'}|[{'type',301,'list',[{'var',301,'Option'}]}]]]]]}|[{'type',301,'boolean',[]}]]}|[[{'type',302,'constraint',[{'atom',302,'is_subtype'}|[[{'var',302,'This'}|[{'type',302,'wxChoicebook',[]}]]]]}|[{'type',302,'constraint',[{'atom',302,'is_subtype'}|[[{'var',302,'N'}|[{'type',302,'integer',[]}]]]]}|[{'type',302,'constraint',[{'atom',302,'is_subtype'}|[[{'var',302,'Page'}|[{'remote_type',302,[{'atom',302,'wxWindow'}|[{'atom',302,'wxWindow'}|[[]]]]}]]]]}|[{'type',302,'constraint',[{'atom',302,'is_subtype'}|[[{'var',302,'Text'}|[{'remote_type',302,[{'atom',302,'unicode'}|[{'atom',302,'chardata'}|[[]]]]}]]]]}|[{'type',303,'constraint',[{'atom',303,'is_subtype'}|[[{'var',303,'Option'}|[{'type',303,'union',[{'type',303,'tuple',[{'atom',303,'bSelect'}|[{'type',303,'boolean',[]}]]}|[{'type',304,'tuple',[{'atom',304,'imageId'}|[{'type',304,'integer',[]}]]}]]}]]]]}]]]]]]]}]}],
		%% Line 318
		'spec' =
		    %% Line 318
		    [{{'setImageList',2},[{'type',318,'bounded_fun',[{'type',318,'fun',[{'type',318,'product',[{'var',318,'This'}|[{'var',318,'ImageList'}]]}|[{'atom',318,'ok'}]]}|[[{'type',319,'constraint',[{'atom',319,'is_subtype'}|[[{'var',319,'This'}|[{'type',319,'wxChoicebook',[]}]]]]}|[{'type',319,'constraint',[{'atom',319,'is_subtype'}|[[{'var',319,'ImageList'}|[{'remote_type',319,[{'atom',319,'wxImageList'}|[{'atom',319,'wxImageList'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 327
		'spec' =
		    %% Line 327
		    [{{'setPageSize',2},[{'type',327,'bounded_fun',[{'type',327,'fun',[{'type',327,'product',[{'var',327,'This'}|[{'var',327,'Size'}]]}|[{'atom',327,'ok'}]]}|[[{'type',328,'constraint',[{'atom',328,'is_subtype'}|[[{'var',328,'This'}|[{'type',328,'wxChoicebook',[]}]]]]}|[{'type',328,'constraint',[{'atom',328,'is_subtype'}|[[{'var',328,'Size'}|[{'type',328,'tuple',[{'ann_type',328,[{'var',328,'W'}|[{'type',328,'integer',[]}]]}|[{'ann_type',328,[{'var',328,'H'}|[{'type',328,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 336
		'spec' =
		    %% Line 336
		    [{{'setPageImage',3},[{'type',336,'bounded_fun',[{'type',336,'fun',[{'type',336,'product',[{'var',336,'This'}|[{'var',336,'N'}|[{'var',336,'ImageId'}]]]}|[{'type',336,'boolean',[]}]]}|[[{'type',337,'constraint',[{'atom',337,'is_subtype'}|[[{'var',337,'This'}|[{'type',337,'wxChoicebook',[]}]]]]}|[{'type',337,'constraint',[{'atom',337,'is_subtype'}|[[{'var',337,'N'}|[{'type',337,'integer',[]}]]]]}|[{'type',337,'constraint',[{'atom',337,'is_subtype'}|[[{'var',337,'ImageId'}|[{'type',337,'integer',[]}]]]]}]]]]]}]}],
		%% Line 345
		'spec' =
		    %% Line 345
		    [{{'setPageText',3},[{'type',345,'bounded_fun',[{'type',345,'fun',[{'type',345,'product',[{'var',345,'This'}|[{'var',345,'N'}|[{'var',345,'StrText'}]]]}|[{'type',345,'boolean',[]}]]}|[[{'type',346,'constraint',[{'atom',346,'is_subtype'}|[[{'var',346,'This'}|[{'type',346,'wxChoicebook',[]}]]]]}|[{'type',346,'constraint',[{'atom',346,'is_subtype'}|[[{'var',346,'N'}|[{'type',346,'integer',[]}]]]]}|[{'type',346,'constraint',[{'atom',346,'is_subtype'}|[[{'var',346,'StrText'}|[{'remote_type',346,[{'atom',346,'unicode'}|[{'atom',346,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 355
		'spec' =
		    %% Line 355
		    [{{'setSelection',2},[{'type',355,'bounded_fun',[{'type',355,'fun',[{'type',355,'product',[{'var',355,'This'}|[{'var',355,'N'}]]}|[{'type',355,'integer',[]}]]}|[[{'type',356,'constraint',[{'atom',356,'is_subtype'}|[[{'var',356,'This'}|[{'type',356,'wxChoicebook',[]}]]]]}|[{'type',356,'constraint',[{'atom',356,'is_subtype'}|[[{'var',356,'N'}|[{'type',356,'integer',[]}]]]]}]]]]}]}],
		%% Line 364
		'spec' =
		    %% Line 364
		    [{{'changeSelection',2},[{'type',364,'bounded_fun',[{'type',364,'fun',[{'type',364,'product',[{'var',364,'This'}|[{'var',364,'N'}]]}|[{'type',364,'integer',[]}]]}|[[{'type',365,'constraint',[{'atom',365,'is_subtype'}|[[{'var',365,'This'}|[{'type',365,'wxChoicebook',[]}]]]]}|[{'type',365,'constraint',[{'atom',365,'is_subtype'}|[[{'var',365,'N'}|[{'type',365,'integer',[]}]]]]}]]]]}]}],
		%% Line 373
		'spec' =
		    %% Line 373
		    [{{'destroy',1},[{'type',373,'fun',[{'type',373,'product',[{'ann_type',373,[{'var',373,'This'}|[{'type',373,'wxChoicebook',[]}]]}]}|[{'atom',373,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 79
    fun (_cor0) ->
	case _cor0 of
	  <'wxControl'> when 'true' ->
	      'true'
	  %% Line 80
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 81
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 82
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxChoicebook'})
	end
'new'/0 =
    %% Line 87
    fun () ->
	%% Line 88
	call 'wxe_util':'construct'
	    (1898, %% Line 89
		   #{}#)
'new'/2 =
    %% Line 95
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor5,_cor6,_cor7},Id>
	      when %% Line 96
		call 'erlang':'is_integer'
		    (Id) ->
	      %% Line 97
	      apply 'new'/3
		  (Parent, Id, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'new'/3 =
    %% Line 105
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor21},Id,Options>
	      when let <_cor3> =
		    %% Line 106
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor4> =
			%% Line 106
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 106
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 107
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 108
		      ( fun (_cor11,_cor10) ->
			    case <_cor11,_cor10> of
			      <{'pos',{PosX,PosY}},Acc> when 'true' ->
				  let <_cor7> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<PosX>(32,1,'integer',['unsigned'|['native']]),
					#<PosY>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor7|Acc]
			      %% Line 109
			      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				  let <_cor8> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<SizeW>(32,1,'integer',['unsigned'|['native']]),
					#<SizeH>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor8|Acc]
			      %% Line 110
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor9> =
				      #{#<3>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor9|Acc]
			      %% Line 111
			      <BadOpt,_cor22> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/3-fun-0-'}}] )
		  in  let <_cor15> =
			  %% Line 112
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 112
			      call 'erlang':'list_to_binary'
				  (_cor15)
			  in  let <_cor17> =
				  %% Line 114
				  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				    #<Id>(32,1,'integer',['unsigned'|['native']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 113
				  call 'wxe_util':'construct'
				      (1899, _cor17)
	  ( <_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19,_cor18})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'addPage'/3 =
    %% Line 120
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor8,_cor9,_cor10},Page = {'wx_ref',_cor11,_cor12,_cor13},Text>
	      when %% Line 121
		call 'erlang':'is_list'
		    (Text) ->
	      %% Line 122
	      apply 'addPage'/4
		  (This, Page, Text, [])
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'addPage',3}}] )
	    -| ['compiler_generated'] )
	end
'addPage'/4 =
    %% Line 129
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor32},{'wx_ref',PageRef,PageT,_cor33},Text,Options>
	      when let <_cor4> =
		    %% Line 130
		    call 'erlang':'is_list'
			(Text)
		in  let <_cor5> =
			%% Line 130
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 130
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 131
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 132
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (PageT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call PageT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <Text_UC> =
			  %% Line 133
			  call 'unicode':'characters_to_binary'
			      ([Text|[0]])
		      in  let <MOpts> =
			      %% Line 134
			      ( fun (_cor15,_cor14) ->
				    case <_cor15,_cor14> of
				      <{'bSelect',BSelect},Acc> when 'true' ->
					  let <_cor11> =
					      call 'wxe_util':'from_bool'
						  (BSelect)
					  in  let <_cor12> =
						  #{#<1>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor11>(32,1,'integer',['unsigned'|['native']])}#
					      in  [_cor12|Acc]
				      %% Line 135
				      <{'imageId',ImageId},Acc> when 'true' ->
					  let <_cor13> =
					      #{#<2>(32,1,'integer',['unsigned'|['native']]),
						#<ImageId>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor13|Acc]
				      %% Line 136
				      <BadOpt,_cor34> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-addPage/4-fun-0-'}}] )
			  in  let <_cor19> =
				  %% Line 137
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 137
				      call 'erlang':'list_to_binary'
					  (_cor19)
				  in  let <_cor26> =
					  %% Line 139
					  call 'erlang':'byte_size'
					      (Text_UC)
				      in  let <_cor21> =
					      %% Line 139
					      call 'erlang':'byte_size'
						  (Text_UC)
					  in  let <_cor22> =
						  %% Line 139
						  call 'erlang':'+'
						      (4, _cor21)
					      in  let <_cor23> =
						      %% Line 139
						      call 'erlang':'band'
							  (_cor22, 7)
						  in  let <_cor24> =
							  %% Line 139
							  call 'erlang':'-'
							      (8, _cor23)
						      in  let <_cor25> =
							      %% Line 139
							      call 'erlang':'band'
								  (_cor24, 7)
							  in  let <_cor27> =
								  %% Line 139
								  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								    #<PageRef>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor26>(32,1,'integer',['unsigned'|['native']]),
								    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor25,8,'integer',['unsigned'|['big']]),
								    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							      in  %% Line 138
								  call 'wxe_util':'call'
								      (1900, _cor27)
	  ( <_cor31,_cor30,_cor29,_cor28> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor31,_cor30,_cor29,_cor28})
		  -| [{'function_name',{'addPage',4}}] )
	    -| ['compiler_generated'] )
	end
'advanceSelection'/1 =
    %% Line 145
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 146
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 147
	      apply 'advanceSelection'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'advanceSelection',1}}] )
	    -| ['compiler_generated'] )
	end
'advanceSelection'/2 =
    %% Line 153
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 154
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 155
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 156
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'forward',Forward},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Forward)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 157
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-advanceSelection/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 158
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 158
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 160
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 159
				  call 'wxe_util':'cast'
				      (1901, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'advanceSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'assignImageList'/2 =
    %% Line 165
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',ImageListRef,ImageListT,_cor10}> when 'true' ->
	      do  %% Line 166
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 167
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ImageListT,
				       'wxImageList') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ImageListT:'parent_class'
				    ('wxImageList')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 169
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<ImageListRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 168
			  call 'wxe_util':'cast'
			      (1902, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'assignImageList',2}}] )
	    -| ['compiler_generated'] )
	end
'create'/3 =
    %% Line 175
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor8,_cor9,_cor10},Parent = {'wx_ref',_cor11,_cor12,_cor13},Id>
	      when %% Line 176
		call 'erlang':'is_integer'
		    (Id) ->
	      %% Line 177
	      apply 'create'/4
		  (This, Parent, Id, [])
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'create',3}}] )
	    -| ['compiler_generated'] )
	end
'create'/4 =
    %% Line 185
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor25},{'wx_ref',ParentRef,ParentT,_cor26},Id,Options>
	      when let <_cor4> =
		    %% Line 186
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor5> =
			%% Line 186
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 186
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 187
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 188
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <MOpts> =
			  %% Line 189
			  ( fun (_cor14,_cor13) ->
				case <_cor14,_cor13> of
				  <{'pos',{PosX,PosY}},Acc> when 'true' ->
				      let <_cor10> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<PosX>(32,1,'integer',['unsigned'|['native']]),
					    #<PosY>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor10|Acc]
				  %% Line 190
				  <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				      let <_cor11> =
					  #{#<2>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeW>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeH>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor11|Acc]
				  %% Line 191
				  <{'style',Style},Acc> when 'true' ->
				      let <_cor12> =
					  #{#<3>(32,1,'integer',['unsigned'|['native']]),
					    #<Style>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor12|Acc]
				  %% Line 192
				  <BadOpt,_cor27> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-create/4-fun-0-'}}] )
		      in  let <_cor18> =
			      %% Line 193
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 193
				  call 'erlang':'list_to_binary'
				      (_cor18)
			      in  let <_cor20> =
				      %% Line 195
				      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
					#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
					#<Id>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']]),
					#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				  in  %% Line 194
				      call 'wxe_util':'call'
					  (1903, _cor20)
	  ( <_cor24,_cor23,_cor22,_cor21> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22,_cor21})
		  -| [{'function_name',{'create',4}}] )
	    -| ['compiler_generated'] )
	end
'deleteAllPages'/1 =
    %% Line 200
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 201
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 203
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 202
		      call 'wxe_util':'call'
			  (1904, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'deleteAllPages',1}}] )
	    -| ['compiler_generated'] )
	end
'deletePage'/2 =
    %% Line 208
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 209
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 210
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 212
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 211
		      call 'wxe_util':'call'
			  (1905, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'deletePage',2}}] )
	    -| ['compiler_generated'] )
	end
'removePage'/2 =
    %% Line 217
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 218
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 219
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 221
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 220
		      call 'wxe_util':'call'
			  (1906, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'removePage',2}}] )
	    -| ['compiler_generated'] )
	end
'getCurrentPage'/1 =
    %% Line 226
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 227
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 229
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 228
		      call 'wxe_util':'call'
			  (1907, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCurrentPage',1}}] )
	    -| ['compiler_generated'] )
	end
'getImageList'/1 =
    %% Line 234
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 235
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 237
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 236
		      call 'wxe_util':'call'
			  (1908, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getImageList',1}}] )
	    -| ['compiler_generated'] )
	end
'getPage'/2 =
    %% Line 242
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 243
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 244
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 246
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 245
		      call 'wxe_util':'call'
			  (1910, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getPage',2}}] )
	    -| ['compiler_generated'] )
	end
'getPageCount'/1 =
    %% Line 251
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 252
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 254
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 253
		      call 'wxe_util':'call'
			  (1911, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPageCount',1}}] )
	    -| ['compiler_generated'] )
	end
'getPageImage'/2 =
    %% Line 259
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 260
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 261
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 263
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 262
		      call 'wxe_util':'call'
			  (1912, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getPageImage',2}}] )
	    -| ['compiler_generated'] )
	end
'getPageText'/2 =
    %% Line 268
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 269
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 270
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 272
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 271
		      call 'wxe_util':'call'
			  (1913, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getPageText',2}}] )
	    -| ['compiler_generated'] )
	end
'getSelection'/1 =
    %% Line 277
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 278
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 280
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 279
		      call 'wxe_util':'call'
			  (1914, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSelection',1}}] )
	    -| ['compiler_generated'] )
	end
'hitTest'/2 =
    %% Line 286
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{PtX,PtY}>
	      when let <_cor2> =
		    %% Line 287
		    call 'erlang':'is_integer'
			(PtX)
		in  let <_cor3> =
			%% Line 287
			call 'erlang':'is_integer'
			    (PtY)
		    in  %% Line 287
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 288
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 290
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PtX>(32,1,'integer',['unsigned'|['native']]),
			#<PtY>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 289
		      call 'wxe_util':'call'
			  (1915, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'hitTest',2}}] )
	    -| ['compiler_generated'] )
	end
'insertPage'/4 =
    %% Line 296
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor12,_cor13,_cor14},N,Page = {'wx_ref',_cor15,_cor16,_cor17},Text>
	      when let <_cor4> =
		    %% Line 297
		    call 'erlang':'is_integer'
			(N)
		in  let <_cor5> =
			%% Line 297
			call 'erlang':'is_list'
			    (Text)
		    in  %% Line 297
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor4, _cor5)
			  -| ['compiler_generated'] ) ->
	      %% Line 298
	      apply 'insertPage'/5
		  (This, N, Page, Text, [])
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'insertPage',4}}] )
	    -| ['compiler_generated'] )
	end
'insertPage'/5 =
    %% Line 305
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor36},N,{'wx_ref',PageRef,PageT,_cor37},Text,Options>
	      when %% Line 306
		try
		    let <_cor5> =
			call 'erlang':'is_integer'
			    (N)
		    in  let <_cor6> =
			    call 'erlang':'is_list'
				(Text)
			in  let <_cor7> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor8> =
				    call 'erlang':'and'
					(_cor6, _cor7)
				in  call 'erlang':'and'
					(_cor5, _cor8)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 307
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 308
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (PageT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call PageT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <Text_UC> =
			  %% Line 309
			  call 'unicode':'characters_to_binary'
			      ([Text|[0]])
		      in  let <MOpts> =
			      %% Line 310
			      ( fun (_cor18,_cor17) ->
				    case <_cor18,_cor17> of
				      <{'bSelect',BSelect},Acc> when 'true' ->
					  let <_cor14> =
					      call 'wxe_util':'from_bool'
						  (BSelect)
					  in  let <_cor15> =
						  #{#<1>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor14>(32,1,'integer',['unsigned'|['native']])}#
					      in  [_cor15|Acc]
				      %% Line 311
				      <{'imageId',ImageId},Acc> when 'true' ->
					  let <_cor16> =
					      #{#<2>(32,1,'integer',['unsigned'|['native']]),
						#<ImageId>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor16|Acc]
				      %% Line 312
				      <BadOpt,_cor38> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-insertPage/5-fun-0-'}}] )
			  in  let <_cor22> =
				  %% Line 313
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 313
				      call 'erlang':'list_to_binary'
					  (_cor22)
				  in  let <_cor29> =
					  %% Line 315
					  call 'erlang':'byte_size'
					      (Text_UC)
				      in  let <_cor24> =
					      %% Line 315
					      call 'erlang':'byte_size'
						  (Text_UC)
					  in  let <_cor25> =
						  %% Line 315
						  call 'erlang':'+'
						      (0, _cor24)
					      in  let <_cor26> =
						      %% Line 315
						      call 'erlang':'band'
							  (_cor25, 7)
						  in  let <_cor27> =
							  %% Line 315
							  call 'erlang':'-'
							      (8, _cor26)
						      in  let <_cor28> =
							      %% Line 315
							      call 'erlang':'band'
								  (_cor27, 7)
							  in  let <_cor30> =
								  %% Line 315
								  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								    #<N>(32,1,'integer',['unsigned'|['native']]),
								    #<PageRef>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor29>(32,1,'integer',['unsigned'|['native']]),
								    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor28,8,'integer',['unsigned'|['big']]),
								    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							      in  %% Line 314
								  call 'wxe_util':'call'
								      (1916, _cor30)
	  ( <_cor35,_cor34,_cor33,_cor32,_cor31> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor35,_cor34,_cor33,_cor32,_cor31})
		  -| [{'function_name',{'insertPage',5}}] )
	    -| ['compiler_generated'] )
	end
'setImageList'/2 =
    %% Line 320
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',ImageListRef,ImageListT,_cor10}> when 'true' ->
	      do  %% Line 321
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 322
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ImageListT,
				       'wxImageList') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ImageListT:'parent_class'
				    ('wxImageList')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 324
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<ImageListRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 323
			  call 'wxe_util':'cast'
			      (1917, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setImageList',2}}] )
	    -| ['compiler_generated'] )
	end
'setPageSize'/2 =
    %% Line 329
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{SizeW,SizeH}>
	      when let <_cor2> =
		    %% Line 330
		    call 'erlang':'is_integer'
			(SizeW)
		in  let <_cor3> =
			%% Line 330
			call 'erlang':'is_integer'
			    (SizeH)
		    in  %% Line 330
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 331
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 333
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<SizeW>(32,1,'integer',['unsigned'|['native']]),
			#<SizeH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 332
		      call 'wxe_util':'cast'
			  (1918, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setPageSize',2}}] )
	    -| ['compiler_generated'] )
	end
'setPageImage'/3 =
    %% Line 338
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},N,ImageId>
	      when let <_cor3> =
		    %% Line 339
		    call 'erlang':'is_integer'
			(N)
		in  let <_cor4> =
			%% Line 339
			call 'erlang':'is_integer'
			    (ImageId)
		    in  %% Line 339
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 340
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 342
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']]),
			#<ImageId>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 341
		      call 'wxe_util':'call'
			  (1919, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setPageImage',3}}] )
	    -| ['compiler_generated'] )
	end
'setPageText'/3 =
    %% Line 347
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},N,StrText>
	      when let <_cor3> =
		    %% Line 348
		    call 'erlang':'is_integer'
			(N)
		in  let <_cor4> =
			%% Line 348
			call 'erlang':'is_list'
			    (StrText)
		    in  %% Line 348
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 349
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <StrText_UC> =
		      %% Line 350
		      call 'unicode':'characters_to_binary'
			  ([StrText|[0]])
		  in  let <_cor13> =
			  %% Line 352
			  call 'erlang':'byte_size'
			      (StrText_UC)
		      in  let <_cor8> =
			      %% Line 352
			      call 'erlang':'byte_size'
				  (StrText_UC)
			  in  let <_cor9> =
				  %% Line 352
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 352
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 352
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 352
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 352
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<N>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<StrText_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 351
						  call 'wxe_util':'call'
						      (1920, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'setPageText',3}}] )
	    -| ['compiler_generated'] )
	end
'setSelection'/2 =
    %% Line 357
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 358
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 359
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 361
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 360
		      call 'wxe_util':'call'
			  (1921, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'changeSelection'/2 =
    %% Line 366
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 367
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 368
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 370
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 369
		      call 'wxe_util':'call'
			  (1922, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'changeSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 374
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 375
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxChoicebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxChoicebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 376
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 377
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'setLabel'/2 =
    %% Line 380
    fun (_cor1,_cor0) ->
	call 'wxControl':'setLabel'
	    (_cor1, _cor0)
'getLabel'/1 =
    %% Line 382
    fun (_cor0) ->
	call 'wxControl':'getLabel'
	    (_cor0)
'warpPointer'/3 =
    %% Line 385
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 387
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 389
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 391
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 393
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 395
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 397
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 399
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 401
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 403
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 405
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 407
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 409
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 411
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 413
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 415
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 417
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 419
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 421
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 423
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 425
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 427
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 429
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 431
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 433
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 435
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 437
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 439
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 441
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 443
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 445
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 447
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 449
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 451
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 453
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 455
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 457
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 459
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 461
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 463
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 465
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 467
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 469
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 471
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 473
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 475
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 477
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 479
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 481
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 483
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 485
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 487
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 489
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 491
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 493
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 495
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 497
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 499
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 501
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 503
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 505
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 507
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 509
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 511
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 513
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 515
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 517
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 519
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 521
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 523
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 525
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 527
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 529
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 531
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 533
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 535
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 537
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 539
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 541
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 543
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 545
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 547
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 549
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 551
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 553
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 555
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 557
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 559
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 561
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 563
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 565
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 567
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 569
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 571
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 573
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 575
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 577
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 579
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 581
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 583
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 585
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 587
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 589
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 591
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 593
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 595
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 597
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 599
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 601
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 603
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 605
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 607
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 609
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 611
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 613
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 615
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 617
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 619
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 621
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 623
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 625
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 627
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 629
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 631
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 633
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 635
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 637
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 639
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 641
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 643
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 645
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 647
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 649
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 651
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 653
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 655
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 657
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 659
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 661
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 663
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 665
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 667
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 669
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 671
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 673
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 675
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 677
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 679
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 681
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 683
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 685
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 687
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 689
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 691
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 693
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 695
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 697
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 699
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 701
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 703
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 705
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 707
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 709
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 711
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 713
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 715
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 717
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 719
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 721
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 723
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 725
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 727
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 729
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 732
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 734
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 736
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 738
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 740
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxChoicebook')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxChoicebook', _cor0)
end