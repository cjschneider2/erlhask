module 'wxCaret' ['create'/3,
		  'create'/4,
		  'destroy'/1,
		  'getBlinkTime'/0,
		  'getPosition'/1,
		  'getSize'/1,
		  'getWindow'/1,
		  'hide'/1,
		  'isOk'/1,
		  'isVisible'/1,
		  'module_info'/0,
		  'module_info'/1,
		  'move'/2,
		  'move'/3,
		  'new'/2,
		  'new'/3,
		  'parent_class'/1,
		  'setBlinkTime'/1,
		  'setSize'/2,
		  'setSize'/3,
		  'show'/1,
		  'show'/2]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 34
		'export_type' =
		    %% Line 34
		    [{'wxCaret',0}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{'wxCaret',{'remote_type',38,[{'atom',38,'wx'}|[{'atom',38,'wx_object'}|[[]]]]},[]}],
		%% Line 40
		'spec' =
		    %% Line 40
		    [{{'new',2},[{'type',40,'bounded_fun',[{'type',40,'fun',[{'type',40,'product',[{'var',40,'Window'}|[{'var',40,'Size'}]]}|[{'type',40,'wxCaret',[]}]]}|[[{'type',41,'constraint',[{'atom',41,'is_subtype'}|[[{'var',41,'Window'}|[{'remote_type',41,[{'atom',41,'wxWindow'}|[{'atom',41,'wxWindow'}|[[]]]]}]]]]}|[{'type',41,'constraint',[{'atom',41,'is_subtype'}|[[{'var',41,'Size'}|[{'type',41,'tuple',[{'ann_type',41,[{'var',41,'W'}|[{'type',41,'integer',[]}]]}|[{'ann_type',41,[{'var',41,'H'}|[{'type',41,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 49
		'spec' =
		    %% Line 49
		    [{{'new',3},[{'type',49,'bounded_fun',[{'type',49,'fun',[{'type',49,'product',[{'var',49,'Window'}|[{'var',49,'Width'}|[{'var',49,'Height'}]]]}|[{'type',49,'wxCaret',[]}]]}|[[{'type',50,'constraint',[{'atom',50,'is_subtype'}|[[{'var',50,'Window'}|[{'remote_type',50,[{'atom',50,'wxWindow'}|[{'atom',50,'wxWindow'}|[[]]]]}]]]]}|[{'type',50,'constraint',[{'atom',50,'is_subtype'}|[[{'var',50,'Width'}|[{'type',50,'integer',[]}]]]]}|[{'type',50,'constraint',[{'atom',50,'is_subtype'}|[[{'var',50,'Height'}|[{'type',50,'integer',[]}]]]]}]]]]]}]}],
		%% Line 58
		'spec' =
		    %% Line 58
		    [{{'create',3},[{'type',58,'bounded_fun',[{'type',58,'fun',[{'type',58,'product',[{'var',58,'This'}|[{'var',58,'Window'}|[{'var',58,'Size'}]]]}|[{'type',58,'boolean',[]}]]}|[[{'type',59,'constraint',[{'atom',59,'is_subtype'}|[[{'var',59,'This'}|[{'type',59,'wxCaret',[]}]]]]}|[{'type',59,'constraint',[{'atom',59,'is_subtype'}|[[{'var',59,'Window'}|[{'remote_type',59,[{'atom',59,'wxWindow'}|[{'atom',59,'wxWindow'}|[[]]]]}]]]]}|[{'type',59,'constraint',[{'atom',59,'is_subtype'}|[[{'var',59,'Size'}|[{'type',59,'tuple',[{'ann_type',59,[{'var',59,'W'}|[{'type',59,'integer',[]}]]}|[{'ann_type',59,[{'var',59,'H'}|[{'type',59,'integer',[]}]]}]]}]]]]}]]]]]}]}],
		%% Line 68
		'spec' =
		    %% Line 68
		    [{{'create',4},[{'type',68,'bounded_fun',[{'type',68,'fun',[{'type',68,'product',[{'var',68,'This'}|[{'var',68,'Window'}|[{'var',68,'Width'}|[{'var',68,'Height'}]]]]}|[{'type',68,'boolean',[]}]]}|[[{'type',69,'constraint',[{'atom',69,'is_subtype'}|[[{'var',69,'This'}|[{'type',69,'wxCaret',[]}]]]]}|[{'type',69,'constraint',[{'atom',69,'is_subtype'}|[[{'var',69,'Window'}|[{'remote_type',69,[{'atom',69,'wxWindow'}|[{'atom',69,'wxWindow'}|[[]]]]}]]]]}|[{'type',69,'constraint',[{'atom',69,'is_subtype'}|[[{'var',69,'Width'}|[{'type',69,'integer',[]}]]]]}|[{'type',69,'constraint',[{'atom',69,'is_subtype'}|[[{'var',69,'Height'}|[{'type',69,'integer',[]}]]]]}]]]]]]}]}],
		%% Line 78
		'spec' =
		    %% Line 78
		    [{{'getBlinkTime',0},[{'type',78,'fun',[{'type',78,'product',[]}|[{'type',78,'integer',[]}]]}]}],
		%% Line 84
		'spec' =
		    %% Line 84
		    [{{'getPosition',1},[{'type',84,'bounded_fun',[{'type',84,'fun',[{'type',84,'product',[{'var',84,'This'}]}|[{'type',84,'tuple',[{'ann_type',84,[{'var',84,'X'}|[{'type',84,'integer',[]}]]}|[{'ann_type',84,[{'var',84,'Y'}|[{'type',84,'integer',[]}]]}]]}]]}|[[{'type',85,'constraint',[{'atom',85,'is_subtype'}|[[{'var',85,'This'}|[{'type',85,'wxCaret',[]}]]]]}]]]}]}],
		%% Line 92
		'spec' =
		    %% Line 92
		    [{{'getSize',1},[{'type',92,'bounded_fun',[{'type',92,'fun',[{'type',92,'product',[{'var',92,'This'}]}|[{'type',92,'tuple',[{'ann_type',92,[{'var',92,'W'}|[{'type',92,'integer',[]}]]}|[{'ann_type',92,[{'var',92,'H'}|[{'type',92,'integer',[]}]]}]]}]]}|[[{'type',93,'constraint',[{'atom',93,'is_subtype'}|[[{'var',93,'This'}|[{'type',93,'wxCaret',[]}]]]]}]]]}]}],
		%% Line 100
		'spec' =
		    %% Line 100
		    [{{'getWindow',1},[{'type',100,'bounded_fun',[{'type',100,'fun',[{'type',100,'product',[{'var',100,'This'}]}|[{'remote_type',100,[{'atom',100,'wxWindow'}|[{'atom',100,'wxWindow'}|[[]]]]}]]}|[[{'type',101,'constraint',[{'atom',101,'is_subtype'}|[[{'var',101,'This'}|[{'type',101,'wxCaret',[]}]]]]}]]]}]}],
		%% Line 108
		'spec' =
		    %% Line 108
		    [{{'hide',1},[{'type',108,'bounded_fun',[{'type',108,'fun',[{'type',108,'product',[{'var',108,'This'}]}|[{'atom',108,'ok'}]]}|[[{'type',109,'constraint',[{'atom',109,'is_subtype'}|[[{'var',109,'This'}|[{'type',109,'wxCaret',[]}]]]]}]]]}]}],
		%% Line 116
		'spec' =
		    %% Line 116
		    [{{'isOk',1},[{'type',116,'bounded_fun',[{'type',116,'fun',[{'type',116,'product',[{'var',116,'This'}]}|[{'type',116,'boolean',[]}]]}|[[{'type',117,'constraint',[{'atom',117,'is_subtype'}|[[{'var',117,'This'}|[{'type',117,'wxCaret',[]}]]]]}]]]}]}],
		%% Line 124
		'spec' =
		    %% Line 124
		    [{{'isVisible',1},[{'type',124,'bounded_fun',[{'type',124,'fun',[{'type',124,'product',[{'var',124,'This'}]}|[{'type',124,'boolean',[]}]]}|[[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'This'}|[{'type',125,'wxCaret',[]}]]]]}]]]}]}],
		%% Line 132
		'spec' =
		    %% Line 132
		    [{{'move',2},[{'type',132,'bounded_fun',[{'type',132,'fun',[{'type',132,'product',[{'var',132,'This'}|[{'var',132,'Pt'}]]}|[{'atom',132,'ok'}]]}|[[{'type',133,'constraint',[{'atom',133,'is_subtype'}|[[{'var',133,'This'}|[{'type',133,'wxCaret',[]}]]]]}|[{'type',133,'constraint',[{'atom',133,'is_subtype'}|[[{'var',133,'Pt'}|[{'type',133,'tuple',[{'ann_type',133,[{'var',133,'X'}|[{'type',133,'integer',[]}]]}|[{'ann_type',133,[{'var',133,'Y'}|[{'type',133,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 141
		'spec' =
		    %% Line 141
		    [{{'move',3},[{'type',141,'bounded_fun',[{'type',141,'fun',[{'type',141,'product',[{'var',141,'This'}|[{'var',141,'X'}|[{'var',141,'Y'}]]]}|[{'atom',141,'ok'}]]}|[[{'type',142,'constraint',[{'atom',142,'is_subtype'}|[[{'var',142,'This'}|[{'type',142,'wxCaret',[]}]]]]}|[{'type',142,'constraint',[{'atom',142,'is_subtype'}|[[{'var',142,'X'}|[{'type',142,'integer',[]}]]]]}|[{'type',142,'constraint',[{'atom',142,'is_subtype'}|[[{'var',142,'Y'}|[{'type',142,'integer',[]}]]]]}]]]]]}]}],
		%% Line 150
		'spec' =
		    %% Line 150
		    [{{'setBlinkTime',1},[{'type',150,'bounded_fun',[{'type',150,'fun',[{'type',150,'product',[{'var',150,'Milliseconds'}]}|[{'atom',150,'ok'}]]}|[[{'type',151,'constraint',[{'atom',151,'is_subtype'}|[[{'var',151,'Milliseconds'}|[{'type',151,'integer',[]}]]]]}]]]}]}],
		%% Line 158
		'spec' =
		    %% Line 158
		    [{{'setSize',2},[{'type',158,'bounded_fun',[{'type',158,'fun',[{'type',158,'product',[{'var',158,'This'}|[{'var',158,'Size'}]]}|[{'atom',158,'ok'}]]}|[[{'type',159,'constraint',[{'atom',159,'is_subtype'}|[[{'var',159,'This'}|[{'type',159,'wxCaret',[]}]]]]}|[{'type',159,'constraint',[{'atom',159,'is_subtype'}|[[{'var',159,'Size'}|[{'type',159,'tuple',[{'ann_type',159,[{'var',159,'W'}|[{'type',159,'integer',[]}]]}|[{'ann_type',159,[{'var',159,'H'}|[{'type',159,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 167
		'spec' =
		    %% Line 167
		    [{{'setSize',3},[{'type',167,'bounded_fun',[{'type',167,'fun',[{'type',167,'product',[{'var',167,'This'}|[{'var',167,'Width'}|[{'var',167,'Height'}]]]}|[{'atom',167,'ok'}]]}|[[{'type',168,'constraint',[{'atom',168,'is_subtype'}|[[{'var',168,'This'}|[{'type',168,'wxCaret',[]}]]]]}|[{'type',168,'constraint',[{'atom',168,'is_subtype'}|[[{'var',168,'Width'}|[{'type',168,'integer',[]}]]]]}|[{'type',168,'constraint',[{'atom',168,'is_subtype'}|[[{'var',168,'Height'}|[{'type',168,'integer',[]}]]]]}]]]]]}]}],
		%% Line 176
		'spec' =
		    %% Line 176
		    [{{'show',1},[{'type',176,'bounded_fun',[{'type',176,'fun',[{'type',176,'product',[{'var',176,'This'}]}|[{'atom',176,'ok'}]]}|[[{'type',177,'constraint',[{'atom',177,'is_subtype'}|[[{'var',177,'This'}|[{'type',177,'wxCaret',[]}]]]]}]]]}]}],
		%% Line 184
		'spec' =
		    %% Line 184
		    [{{'show',2},[{'type',184,'bounded_fun',[{'type',184,'fun',[{'type',184,'product',[{'var',184,'This'}|[{'type',184,'list',[{'var',184,'Option'}]}]]}|[{'atom',184,'ok'}]]}|[[{'type',185,'constraint',[{'atom',185,'is_subtype'}|[[{'var',185,'This'}|[{'type',185,'wxCaret',[]}]]]]}|[{'type',186,'constraint',[{'atom',186,'is_subtype'}|[[{'var',186,'Option'}|[{'type',186,'tuple',[{'atom',186,'show'}|[{'type',186,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 197
		'spec' =
		    %% Line 197
		    [{{'destroy',1},[{'type',197,'fun',[{'type',197,'product',[{'ann_type',197,[{'var',197,'This'}|[{'type',197,'wxCaret',[]}]]}]}|[{'atom',197,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 36
    fun (_cor0) ->
	call 'erlang':'error'
	    ({'badtype','wxCaret'})
'new'/2 =
    %% Line 42
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',WindowRef,WindowT,_cor9},{SizeW,SizeH}>
	      when let <_cor2> =
		    %% Line 43
		    call 'erlang':'is_integer'
			(SizeW)
		in  let <_cor3> =
			%% Line 43
			call 'erlang':'is_integer'
			    (SizeH)
		    in  %% Line 43
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 44
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (WindowT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call WindowT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 46
		      #{#<WindowRef>(32,1,'integer',['unsigned'|['native']]),
			#<SizeW>(32,1,'integer',['unsigned'|['native']]),
			#<SizeH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 45
		      call 'wxe_util':'construct'
			  (1229, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'new'/3 =
    %% Line 51
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',WindowRef,WindowT,_cor11},Width,Height>
	      when let <_cor3> =
		    %% Line 52
		    call 'erlang':'is_integer'
			(Width)
		in  let <_cor4> =
			%% Line 52
			call 'erlang':'is_integer'
			    (Height)
		    in  %% Line 52
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 53
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (WindowT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call WindowT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 55
		      #{#<WindowRef>(32,1,'integer',['unsigned'|['native']]),
			#<Width>(32,1,'integer',['unsigned'|['native']]),
			#<Height>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 54
		      call 'wxe_util':'construct'
			  (1228, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'create'/3 =
    %% Line 60
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor13},{'wx_ref',WindowRef,WindowT,_cor14},{SizeW,SizeH}>
	      when let <_cor3> =
		    %% Line 61
		    call 'erlang':'is_integer'
			(SizeW)
		in  let <_cor4> =
			%% Line 61
			call 'erlang':'is_integer'
			    (SizeH)
		    in  %% Line 61
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 62
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCaret') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCaret')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 63
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (WindowT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call WindowT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor9> =
			  %% Line 65
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<WindowRef>(32,1,'integer',['unsigned'|['native']]),
			    #<SizeW>(32,1,'integer',['unsigned'|['native']]),
			    #<SizeH>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 64
			  call 'wxe_util':'call'
			      (1233, _cor9)
	  ( <_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10})
		  -| [{'function_name',{'create',3}}] )
	    -| ['compiler_generated'] )
	end
'create'/4 =
    %% Line 70
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor15},{'wx_ref',WindowRef,WindowT,_cor16},Width,Height>
	      when let <_cor4> =
		    %% Line 71
		    call 'erlang':'is_integer'
			(Width)
		in  let <_cor5> =
			%% Line 71
			call 'erlang':'is_integer'
			    (Height)
		    in  %% Line 71
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 72
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCaret') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCaret')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 73
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (WindowT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call WindowT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor10> =
			  %% Line 75
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<WindowRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Width>(32,1,'integer',['unsigned'|['native']]),
			    #<Height>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 74
			  call 'wxe_util':'call'
			      (1232, _cor10)
	  ( <_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'create',4}}] )
	    -| ['compiler_generated'] )
	end
'getBlinkTime'/0 =
    %% Line 79
    fun () ->
	%% Line 80
	call 'wxe_util':'call'
	    (1234, %% Line 81
		   #{}#)
'getPosition'/1 =
    %% Line 86
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 87
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCaret') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCaret')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 89
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 88
		      call 'wxe_util':'call'
			  (1236, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPosition',1}}] )
	    -| ['compiler_generated'] )
	end
'getSize'/1 =
    %% Line 94
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 95
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCaret') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCaret')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 97
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 96
		      call 'wxe_util':'call'
			  (1238, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSize',1}}] )
	    -| ['compiler_generated'] )
	end
'getWindow'/1 =
    %% Line 102
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 103
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCaret') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCaret')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 105
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 104
		      call 'wxe_util':'call'
			  (1239, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getWindow',1}}] )
	    -| ['compiler_generated'] )
	end
'hide'/1 =
    %% Line 110
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 111
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCaret') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCaret')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 113
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 112
		      call 'wxe_util':'cast'
			  (1240, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'hide',1}}] )
	    -| ['compiler_generated'] )
	end
'isOk'/1 =
    %% Line 118
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 119
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCaret') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCaret')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 121
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 120
		      call 'wxe_util':'call'
			  (1241, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isOk',1}}] )
	    -| ['compiler_generated'] )
	end
'isVisible'/1 =
    %% Line 126
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 127
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCaret') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCaret')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 129
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 128
		      call 'wxe_util':'call'
			  (1242, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isVisible',1}}] )
	    -| ['compiler_generated'] )
	end
'move'/2 =
    %% Line 134
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{PtX,PtY}>
	      when let <_cor2> =
		    %% Line 135
		    call 'erlang':'is_integer'
			(PtX)
		in  let <_cor3> =
			%% Line 135
			call 'erlang':'is_integer'
			    (PtY)
		    in  %% Line 135
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 136
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCaret') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCaret')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 138
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PtX>(32,1,'integer',['unsigned'|['native']]),
			#<PtY>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 137
		      call 'wxe_util':'cast'
			  (1244, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'move',2}}] )
	    -| ['compiler_generated'] )
	end
'move'/3 =
    %% Line 143
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},X,Y>
	      when let <_cor3> =
		    %% Line 144
		    call 'erlang':'is_integer'
			(X)
		in  let <_cor4> =
			%% Line 144
			call 'erlang':'is_integer'
			    (Y)
		    in  %% Line 144
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 145
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCaret') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCaret')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 147
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<X>(32,1,'integer',['unsigned'|['native']]),
			#<Y>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 146
		      call 'wxe_util':'cast'
			  (1243, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'move',3}}] )
	    -| ['compiler_generated'] )
	end
'setBlinkTime'/1 =
    %% Line 152
    fun (_cor0) ->
	case _cor0 of
	  <Milliseconds>
	      when %% Line 153
		call 'erlang':'is_integer'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 155
		  #{#<Milliseconds>(32,1,'integer',['unsigned'|['native']])}#
	      in  %% Line 154
		  call 'wxe_util':'cast'
		      (1245, _cor1)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'setBlinkTime',1}}] )
	    -| ['compiler_generated'] )
	end
'setSize'/2 =
    %% Line 160
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{SizeW,SizeH}>
	      when let <_cor2> =
		    %% Line 161
		    call 'erlang':'is_integer'
			(SizeW)
		in  let <_cor3> =
			%% Line 161
			call 'erlang':'is_integer'
			    (SizeH)
		    in  %% Line 161
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 162
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCaret') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCaret')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 164
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<SizeW>(32,1,'integer',['unsigned'|['native']]),
			#<SizeH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 163
		      call 'wxe_util':'cast'
			  (1247, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setSize',2}}] )
	    -| ['compiler_generated'] )
	end
'setSize'/3 =
    %% Line 169
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Width,Height>
	      when let <_cor3> =
		    %% Line 170
		    call 'erlang':'is_integer'
			(Width)
		in  let <_cor4> =
			%% Line 170
			call 'erlang':'is_integer'
			    (Height)
		    in  %% Line 170
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 171
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCaret') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCaret')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 173
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Width>(32,1,'integer',['unsigned'|['native']]),
			#<Height>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 172
		      call 'wxe_util':'cast'
			  (1246, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setSize',3}}] )
	    -| ['compiler_generated'] )
	end
'show'/1 =
    %% Line 179
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 180
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 181
	      apply 'show'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'show',1}}] )
	    -| ['compiler_generated'] )
	end
'show'/2 =
    %% Line 187
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 188
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 189
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCaret') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCaret')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 190
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'show',Show},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Show)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 191
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-show/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 192
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 192
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 194
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 193
				  call 'wxe_util':'cast'
				      (1248, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'show',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 198
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 199
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxCaret') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxCaret')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 200
		      call 'wxe_util':'destroy'
			  (1231, Obj)
		      %% Line 201
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxCaret')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxCaret', _cor0)
end