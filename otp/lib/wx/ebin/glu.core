module 'glu' ['build1DMipmapLevels'/9,
	      'build1DMipmaps'/6,
	      'build2DMipmapLevels'/10,
	      'build2DMipmaps'/7,
	      'build3DMipmapLevels'/11,
	      'build3DMipmaps'/8,
	      'checkExtension'/2,
	      'cylinder'/6,
	      'deleteQuadric'/1,
	      'disk'/5,
	      'errorString'/1,
	      'getString'/1,
	      'lookAt'/9,
	      'module_info'/0,
	      'module_info'/1,
	      'newQuadric'/0,
	      'ortho2D'/4,
	      'partialDisk'/7,
	      'perspective'/4,
	      'pickMatrix'/5,
	      'project'/6,
	      'quadricDrawStyle'/2,
	      'quadricNormals'/2,
	      'quadricOrientation'/2,
	      'quadricTexture'/2,
	      'scaleImage'/9,
	      'sphere'/4,
	      'tesselate'/2,
	      'unProject'/6,
	      'unProject4'/9]
    attributes [%% Line 51
		'type' =
		    %% Line 51
		    [{'vertex',{'type',51,'tuple',[{'type',51,'float',[]}|[{'type',51,'float',[]}|[{'type',51,'float',[]}]]]},[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{'enum',{'type',52,'non_neg_integer',[]},[]}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{'matrix',{'type',53,'tuple',[{'type',53,'float',[]}|[{'type',53,'float',[]}|[{'type',53,'float',[]}|[{'type',53,'float',[]}|[{'type',54,'float',[]}|[{'type',54,'float',[]}|[{'type',54,'float',[]}|[{'type',54,'float',[]}|[{'type',55,'float',[]}|[{'type',55,'float',[]}|[{'type',55,'float',[]}|[{'type',55,'float',[]}|[{'type',56,'float',[]}|[{'type',56,'float',[]}|[{'type',56,'float',[]}|[{'type',56,'float',[]}]]]]]]]]]]]]]]]]},[]}],
		%% Line 57
		'type' =
		    %% Line 57
		    [{'mem',{'type',57,'union',[{'type',57,'binary',[]}|[{'type',57,'tuple','any'}]]},[]}],
		%% Line 75
		'spec' =
		    %% Line 75
		    [{{'tesselate',2},[{'type',75,'bounded_fun',[{'type',75,'fun',[{'type',75,'product',[{'var',75,'Normal'}|[{'type',75,'list',[{'var',75,'Vs'}]}]]}|[{'type',75,'tuple',[{'var',75,'Triangles'}|[{'var',75,'VertexPos'}]]}]]}|[[{'type',76,'constraint',[{'atom',76,'is_subtype'}|[[{'var',76,'Normal'}|[{'type',76,'vertex',[]}]]]]}|[{'type',76,'constraint',[{'atom',76,'is_subtype'}|[[{'var',76,'Vs'}|[{'type',76,'vertex',[]}]]]]}|[{'type',77,'constraint',[{'atom',77,'is_subtype'}|[[{'var',77,'Triangles'}|[{'type',77,'list',[{'type',77,'integer',[]}]}]]]]}|[{'type',77,'constraint',[{'atom',77,'is_subtype'}|[[{'var',77,'VertexPos'}|[{'type',77,'binary',[]}]]]]}]]]]]]}]}],
		%% Line 113
		'spec' =
		    %% Line 113
		    [{{'build1DMipmapLevels',9},[{'type',113,'bounded_fun',[{'type',113,'fun',[{'type',113,'product',[{'var',113,'Target'}|[{'var',113,'InternalFormat'}|[{'var',113,'Width'}|[{'var',113,'Format'}|[{'var',113,'Type'}|[{'var',113,'Level'}|[{'var',113,'Base'}|[{'var',113,'Max'}|[{'var',113,'Data'}]]]]]]]]]}|[{'type',113,'integer',[]}]]}|[[{'type',113,'constraint',[{'atom',113,'is_subtype'}|[[{'var',113,'Target'}|[{'type',113,'enum',[]}]]]]}|[{'type',113,'constraint',[{'atom',113,'is_subtype'}|[[{'var',113,'InternalFormat'}|[{'type',113,'integer',[]}]]]]}|[{'type',113,'constraint',[{'atom',113,'is_subtype'}|[[{'var',113,'Width'}|[{'type',113,'integer',[]}]]]]}|[{'type',113,'constraint',[{'atom',113,'is_subtype'}|[[{'var',113,'Format'}|[{'type',113,'enum',[]}]]]]}|[{'type',113,'constraint',[{'atom',113,'is_subtype'}|[[{'var',113,'Type'}|[{'type',113,'enum',[]}]]]]}|[{'type',113,'constraint',[{'atom',113,'is_subtype'}|[[{'var',113,'Level'}|[{'type',113,'integer',[]}]]]]}|[{'type',113,'constraint',[{'atom',113,'is_subtype'}|[[{'var',113,'Base'}|[{'type',113,'integer',[]}]]]]}|[{'type',113,'constraint',[{'atom',113,'is_subtype'}|[[{'var',113,'Max'}|[{'type',113,'integer',[]}]]]]}|[{'type',113,'constraint',[{'atom',113,'is_subtype'}|[[{'var',113,'Data'}|[{'type',113,'binary',[]}]]]]}]]]]]]]]]]]}]}],
		%% Line 151
		'spec' =
		    %% Line 151
		    [{{'build1DMipmaps',6},[{'type',151,'bounded_fun',[{'type',151,'fun',[{'type',151,'product',[{'var',151,'Target'}|[{'var',151,'InternalFormat'}|[{'var',151,'Width'}|[{'var',151,'Format'}|[{'var',151,'Type'}|[{'var',151,'Data'}]]]]]]}|[{'type',151,'integer',[]}]]}|[[{'type',151,'constraint',[{'atom',151,'is_subtype'}|[[{'var',151,'Target'}|[{'type',151,'enum',[]}]]]]}|[{'type',151,'constraint',[{'atom',151,'is_subtype'}|[[{'var',151,'InternalFormat'}|[{'type',151,'integer',[]}]]]]}|[{'type',151,'constraint',[{'atom',151,'is_subtype'}|[[{'var',151,'Width'}|[{'type',151,'integer',[]}]]]]}|[{'type',151,'constraint',[{'atom',151,'is_subtype'}|[[{'var',151,'Format'}|[{'type',151,'enum',[]}]]]]}|[{'type',151,'constraint',[{'atom',151,'is_subtype'}|[[{'var',151,'Type'}|[{'type',151,'enum',[]}]]]]}|[{'type',151,'constraint',[{'atom',151,'is_subtype'}|[[{'var',151,'Data'}|[{'type',151,'binary',[]}]]]]}]]]]]]]]}]}],
		%% Line 188
		'spec' =
		    %% Line 188
		    [{{'build2DMipmapLevels',10},[{'type',188,'bounded_fun',[{'type',188,'fun',[{'type',188,'product',[{'var',188,'Target'}|[{'var',188,'InternalFormat'}|[{'var',188,'Width'}|[{'var',188,'Height'}|[{'var',188,'Format'}|[{'var',188,'Type'}|[{'var',188,'Level'}|[{'var',188,'Base'}|[{'var',188,'Max'}|[{'var',188,'Data'}]]]]]]]]]]}|[{'type',188,'integer',[]}]]}|[[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'Target'}|[{'type',188,'enum',[]}]]]]}|[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'InternalFormat'}|[{'type',188,'integer',[]}]]]]}|[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'Width'}|[{'type',188,'integer',[]}]]]]}|[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'Height'}|[{'type',188,'integer',[]}]]]]}|[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'Format'}|[{'type',188,'enum',[]}]]]]}|[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'Type'}|[{'type',188,'enum',[]}]]]]}|[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'Level'}|[{'type',188,'integer',[]}]]]]}|[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'Base'}|[{'type',188,'integer',[]}]]]]}|[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'Max'}|[{'type',188,'integer',[]}]]]]}|[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'Data'}|[{'type',188,'binary',[]}]]]]}]]]]]]]]]]]]}]}],
		%% Line 233
		'spec' =
		    %% Line 233
		    [{{'build2DMipmaps',7},[{'type',233,'bounded_fun',[{'type',233,'fun',[{'type',233,'product',[{'var',233,'Target'}|[{'var',233,'InternalFormat'}|[{'var',233,'Width'}|[{'var',233,'Height'}|[{'var',233,'Format'}|[{'var',233,'Type'}|[{'var',233,'Data'}]]]]]]]}|[{'type',233,'integer',[]}]]}|[[{'type',233,'constraint',[{'atom',233,'is_subtype'}|[[{'var',233,'Target'}|[{'type',233,'enum',[]}]]]]}|[{'type',233,'constraint',[{'atom',233,'is_subtype'}|[[{'var',233,'InternalFormat'}|[{'type',233,'integer',[]}]]]]}|[{'type',233,'constraint',[{'atom',233,'is_subtype'}|[[{'var',233,'Width'}|[{'type',233,'integer',[]}]]]]}|[{'type',233,'constraint',[{'atom',233,'is_subtype'}|[[{'var',233,'Height'}|[{'type',233,'integer',[]}]]]]}|[{'type',233,'constraint',[{'atom',233,'is_subtype'}|[[{'var',233,'Format'}|[{'type',233,'enum',[]}]]]]}|[{'type',233,'constraint',[{'atom',233,'is_subtype'}|[[{'var',233,'Type'}|[{'type',233,'enum',[]}]]]]}|[{'type',233,'constraint',[{'atom',233,'is_subtype'}|[[{'var',233,'Data'}|[{'type',233,'binary',[]}]]]]}]]]]]]]]]}]}],
		%% Line 270
		'spec' =
		    %% Line 270
		    [{{'build3DMipmapLevels',11},[{'type',270,'bounded_fun',[{'type',270,'fun',[{'type',270,'product',[{'var',270,'Target'}|[{'var',270,'InternalFormat'}|[{'var',270,'Width'}|[{'var',270,'Height'}|[{'var',270,'Depth'}|[{'var',270,'Format'}|[{'var',270,'Type'}|[{'var',270,'Level'}|[{'var',270,'Base'}|[{'var',270,'Max'}|[{'var',270,'Data'}]]]]]]]]]]]}|[{'type',270,'integer',[]}]]}|[[{'type',270,'constraint',[{'atom',270,'is_subtype'}|[[{'var',270,'Target'}|[{'type',270,'enum',[]}]]]]}|[{'type',270,'constraint',[{'atom',270,'is_subtype'}|[[{'var',270,'InternalFormat'}|[{'type',270,'integer',[]}]]]]}|[{'type',270,'constraint',[{'atom',270,'is_subtype'}|[[{'var',270,'Width'}|[{'type',270,'integer',[]}]]]]}|[{'type',270,'constraint',[{'atom',270,'is_subtype'}|[[{'var',270,'Height'}|[{'type',270,'integer',[]}]]]]}|[{'type',270,'constraint',[{'atom',270,'is_subtype'}|[[{'var',270,'Depth'}|[{'type',270,'integer',[]}]]]]}|[{'type',270,'constraint',[{'atom',270,'is_subtype'}|[[{'var',270,'Format'}|[{'type',270,'enum',[]}]]]]}|[{'type',270,'constraint',[{'atom',270,'is_subtype'}|[[{'var',270,'Type'}|[{'type',270,'enum',[]}]]]]}|[{'type',270,'constraint',[{'atom',270,'is_subtype'}|[[{'var',270,'Level'}|[{'type',270,'integer',[]}]]]]}|[{'type',270,'constraint',[{'atom',270,'is_subtype'}|[[{'var',270,'Base'}|[{'type',270,'integer',[]}]]]]}|[{'type',270,'constraint',[{'atom',270,'is_subtype'}|[[{'var',270,'Max'}|[{'type',270,'integer',[]}]]]]}|[{'type',270,'constraint',[{'atom',270,'is_subtype'}|[[{'var',270,'Data'}|[{'type',270,'binary',[]}]]]]}]]]]]]]]]]]]]}]}],
		%% Line 314
		'spec' =
		    %% Line 314
		    [{{'build3DMipmaps',8},[{'type',314,'bounded_fun',[{'type',314,'fun',[{'type',314,'product',[{'var',314,'Target'}|[{'var',314,'InternalFormat'}|[{'var',314,'Width'}|[{'var',314,'Height'}|[{'var',314,'Depth'}|[{'var',314,'Format'}|[{'var',314,'Type'}|[{'var',314,'Data'}]]]]]]]]}|[{'type',314,'integer',[]}]]}|[[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'Target'}|[{'type',314,'enum',[]}]]]]}|[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'InternalFormat'}|[{'type',314,'integer',[]}]]]]}|[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'Width'}|[{'type',314,'integer',[]}]]]]}|[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'Height'}|[{'type',314,'integer',[]}]]]]}|[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'Depth'}|[{'type',314,'integer',[]}]]]]}|[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'Format'}|[{'type',314,'enum',[]}]]]]}|[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'Type'}|[{'type',314,'enum',[]}]]]]}|[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'Data'}|[{'type',314,'binary',[]}]]]]}]]]]]]]]]]}]}],
		%% Line 330
		'spec' =
		    %% Line 330
		    [{{'checkExtension',2},[{'type',330,'bounded_fun',[{'type',330,'fun',[{'type',330,'product',[{'var',330,'ExtName'}|[{'var',330,'ExtString'}]]}|[{'type',330,'union',[{'integer',330,0}|[{'integer',330,1}]]}]]}|[[{'type',330,'constraint',[{'atom',330,'is_subtype'}|[[{'var',330,'ExtName'}|[{'type',330,'string',[]}]]]]}|[{'type',330,'constraint',[{'atom',330,'is_subtype'}|[[{'var',330,'ExtString'}|[{'type',330,'string',[]}]]]]}]]]]}]}],
		%% Line 354
		'spec' =
		    %% Line 354
		    [{{'cylinder',6},[{'type',354,'bounded_fun',[{'type',354,'fun',[{'type',354,'product',[{'var',354,'Quad'}|[{'var',354,'Base'}|[{'var',354,'Top'}|[{'var',354,'Height'}|[{'var',354,'Slices'}|[{'var',354,'Stacks'}]]]]]]}|[{'atom',354,'ok'}]]}|[[{'type',354,'constraint',[{'atom',354,'is_subtype'}|[[{'var',354,'Quad'}|[{'type',354,'integer',[]}]]]]}|[{'type',354,'constraint',[{'atom',354,'is_subtype'}|[[{'var',354,'Base'}|[{'type',354,'float',[]}]]]]}|[{'type',354,'constraint',[{'atom',354,'is_subtype'}|[[{'var',354,'Top'}|[{'type',354,'float',[]}]]]]}|[{'type',354,'constraint',[{'atom',354,'is_subtype'}|[[{'var',354,'Height'}|[{'type',354,'float',[]}]]]]}|[{'type',354,'constraint',[{'atom',354,'is_subtype'}|[[{'var',354,'Slices'}|[{'type',354,'integer',[]}]]]]}|[{'type',354,'constraint',[{'atom',354,'is_subtype'}|[[{'var',354,'Stacks'}|[{'type',354,'integer',[]}]]]]}]]]]]]]]}]}],
		%% Line 365
		'spec' =
		    %% Line 365
		    [{{'deleteQuadric',1},[{'type',365,'bounded_fun',[{'type',365,'fun',[{'type',365,'product',[{'var',365,'Quad'}]}|[{'atom',365,'ok'}]]}|[[{'type',365,'constraint',[{'atom',365,'is_subtype'}|[[{'var',365,'Quad'}|[{'type',365,'integer',[]}]]]]}]]]}]}],
		%% Line 388
		'spec' =
		    %% Line 388
		    [{{'disk',5},[{'type',388,'bounded_fun',[{'type',388,'fun',[{'type',388,'product',[{'var',388,'Quad'}|[{'var',388,'Inner'}|[{'var',388,'Outer'}|[{'var',388,'Slices'}|[{'var',388,'Loops'}]]]]]}|[{'atom',388,'ok'}]]}|[[{'type',388,'constraint',[{'atom',388,'is_subtype'}|[[{'var',388,'Quad'}|[{'type',388,'integer',[]}]]]]}|[{'type',388,'constraint',[{'atom',388,'is_subtype'}|[[{'var',388,'Inner'}|[{'type',388,'float',[]}]]]]}|[{'type',388,'constraint',[{'atom',388,'is_subtype'}|[[{'var',388,'Outer'}|[{'type',388,'float',[]}]]]]}|[{'type',388,'constraint',[{'atom',388,'is_subtype'}|[[{'var',388,'Slices'}|[{'type',388,'integer',[]}]]]]}|[{'type',388,'constraint',[{'atom',388,'is_subtype'}|[[{'var',388,'Loops'}|[{'type',388,'integer',[]}]]]]}]]]]]]]}]}],
		%% Line 404
		'spec' =
		    %% Line 404
		    [{{'errorString',1},[{'type',404,'bounded_fun',[{'type',404,'fun',[{'type',404,'product',[{'var',404,'Error'}]}|[{'type',404,'string',[]}]]}|[[{'type',404,'constraint',[{'atom',404,'is_subtype'}|[[{'var',404,'Error'}|[{'type',404,'enum',[]}]]]]}]]]}]}],
		%% Line 432
		'spec' =
		    %% Line 432
		    [{{'getString',1},[{'type',432,'bounded_fun',[{'type',432,'fun',[{'type',432,'product',[{'var',432,'Name'}]}|[{'type',432,'string',[]}]]}|[[{'type',432,'constraint',[{'atom',432,'is_subtype'}|[[{'var',432,'Name'}|[{'type',432,'enum',[]}]]]]}]]]}]}],
		%% Line 466
		'spec' =
		    %% Line 466
		    [{{'lookAt',9},[{'type',466,'bounded_fun',[{'type',466,'fun',[{'type',466,'product',[{'var',466,'EyeX'}|[{'var',466,'EyeY'}|[{'var',466,'EyeZ'}|[{'var',466,'CenterX'}|[{'var',466,'CenterY'}|[{'var',466,'CenterZ'}|[{'var',466,'UpX'}|[{'var',466,'UpY'}|[{'var',466,'UpZ'}]]]]]]]]]}|[{'atom',466,'ok'}]]}|[[{'type',466,'constraint',[{'atom',466,'is_subtype'}|[[{'var',466,'EyeX'}|[{'type',466,'float',[]}]]]]}|[{'type',466,'constraint',[{'atom',466,'is_subtype'}|[[{'var',466,'EyeY'}|[{'type',466,'float',[]}]]]]}|[{'type',466,'constraint',[{'atom',466,'is_subtype'}|[[{'var',466,'EyeZ'}|[{'type',466,'float',[]}]]]]}|[{'type',466,'constraint',[{'atom',466,'is_subtype'}|[[{'var',466,'CenterX'}|[{'type',466,'float',[]}]]]]}|[{'type',466,'constraint',[{'atom',466,'is_subtype'}|[[{'var',466,'CenterY'}|[{'type',466,'float',[]}]]]]}|[{'type',466,'constraint',[{'atom',466,'is_subtype'}|[[{'var',466,'CenterZ'}|[{'type',466,'float',[]}]]]]}|[{'type',466,'constraint',[{'atom',466,'is_subtype'}|[[{'var',466,'UpX'}|[{'type',466,'float',[]}]]]]}|[{'type',466,'constraint',[{'atom',466,'is_subtype'}|[[{'var',466,'UpY'}|[{'type',466,'float',[]}]]]]}|[{'type',466,'constraint',[{'atom',466,'is_subtype'}|[[{'var',466,'UpZ'}|[{'type',466,'float',[]}]]]]}]]]]]]]]]]]}]}],
		%% Line 477
		'spec' =
		    %% Line 477
		    [{{'newQuadric',0},[{'type',477,'fun',[{'type',477,'product',[]}|[{'type',477,'integer',[]}]]}]}],
		%% Line 487
		'spec' =
		    %% Line 487
		    [{{'ortho2D',4},[{'type',487,'bounded_fun',[{'type',487,'fun',[{'type',487,'product',[{'var',487,'Left'}|[{'var',487,'Right'}|[{'var',487,'Bottom'}|[{'var',487,'Top'}]]]]}|[{'atom',487,'ok'}]]}|[[{'type',487,'constraint',[{'atom',487,'is_subtype'}|[[{'var',487,'Left'}|[{'type',487,'float',[]}]]]]}|[{'type',487,'constraint',[{'atom',487,'is_subtype'}|[[{'var',487,'Right'}|[{'type',487,'float',[]}]]]]}|[{'type',487,'constraint',[{'atom',487,'is_subtype'}|[[{'var',487,'Bottom'}|[{'type',487,'float',[]}]]]]}|[{'type',487,'constraint',[{'atom',487,'is_subtype'}|[[{'var',487,'Top'}|[{'type',487,'float',[]}]]]]}]]]]]]}]}],
		%% Line 516
		'spec' =
		    %% Line 516
		    [{{'partialDisk',7},[{'type',516,'bounded_fun',[{'type',516,'fun',[{'type',516,'product',[{'var',516,'Quad'}|[{'var',516,'Inner'}|[{'var',516,'Outer'}|[{'var',516,'Slices'}|[{'var',516,'Loops'}|[{'var',516,'Start'}|[{'var',516,'Sweep'}]]]]]]]}|[{'atom',516,'ok'}]]}|[[{'type',516,'constraint',[{'atom',516,'is_subtype'}|[[{'var',516,'Quad'}|[{'type',516,'integer',[]}]]]]}|[{'type',516,'constraint',[{'atom',516,'is_subtype'}|[[{'var',516,'Inner'}|[{'type',516,'float',[]}]]]]}|[{'type',516,'constraint',[{'atom',516,'is_subtype'}|[[{'var',516,'Outer'}|[{'type',516,'float',[]}]]]]}|[{'type',516,'constraint',[{'atom',516,'is_subtype'}|[[{'var',516,'Slices'}|[{'type',516,'integer',[]}]]]]}|[{'type',516,'constraint',[{'atom',516,'is_subtype'}|[[{'var',516,'Loops'}|[{'type',516,'integer',[]}]]]]}|[{'type',516,'constraint',[{'atom',516,'is_subtype'}|[[{'var',516,'Start'}|[{'type',516,'float',[]}]]]]}|[{'type',516,'constraint',[{'atom',516,'is_subtype'}|[[{'var',516,'Sweep'}|[{'type',516,'float',[]}]]]]}]]]]]]]]]}]}],
		%% Line 540
		'spec' =
		    %% Line 540
		    [{{'perspective',4},[{'type',540,'bounded_fun',[{'type',540,'fun',[{'type',540,'product',[{'var',540,'Fovy'}|[{'var',540,'Aspect'}|[{'var',540,'ZNear'}|[{'var',540,'ZFar'}]]]]}|[{'atom',540,'ok'}]]}|[[{'type',540,'constraint',[{'atom',540,'is_subtype'}|[[{'var',540,'Fovy'}|[{'type',540,'float',[]}]]]]}|[{'type',540,'constraint',[{'atom',540,'is_subtype'}|[[{'var',540,'Aspect'}|[{'type',540,'float',[]}]]]]}|[{'type',540,'constraint',[{'atom',540,'is_subtype'}|[[{'var',540,'ZNear'}|[{'type',540,'float',[]}]]]]}|[{'type',540,'constraint',[{'atom',540,'is_subtype'}|[[{'var',540,'ZFar'}|[{'type',540,'float',[]}]]]]}]]]]]]}]}],
		%% Line 566
		'spec' =
		    %% Line 566
		    [{{'pickMatrix',5},[{'type',566,'bounded_fun',[{'type',566,'fun',[{'type',566,'product',[{'var',566,'X'}|[{'var',566,'Y'}|[{'var',566,'DelX'}|[{'var',566,'DelY'}|[{'var',566,'Viewport'}]]]]]}|[{'atom',566,'ok'}]]}|[[{'type',566,'constraint',[{'atom',566,'is_subtype'}|[[{'var',566,'X'}|[{'type',566,'float',[]}]]]]}|[{'type',566,'constraint',[{'atom',566,'is_subtype'}|[[{'var',566,'Y'}|[{'type',566,'float',[]}]]]]}|[{'type',566,'constraint',[{'atom',566,'is_subtype'}|[[{'var',566,'DelX'}|[{'type',566,'float',[]}]]]]}|[{'type',566,'constraint',[{'atom',566,'is_subtype'}|[[{'var',566,'DelY'}|[{'type',566,'float',[]}]]]]}|[{'type',566,'constraint',[{'atom',566,'is_subtype'}|[[{'var',566,'Viewport'}|[{'type',566,'tuple',[{'type',566,'integer',[]}|[{'type',566,'integer',[]}|[{'type',566,'integer',[]}|[{'type',566,'integer',[]}]]]]}]]]]}]]]]]]]}]}],
		%% Line 596
		'spec' =
		    %% Line 596
		    [{{'project',6},[{'type',596,'bounded_fun',[{'type',596,'fun',[{'type',596,'product',[{'var',596,'ObjX'}|[{'var',596,'ObjY'}|[{'var',596,'ObjZ'}|[{'var',596,'Model'}|[{'var',596,'Proj'}|[{'var',596,'View'}]]]]]]}|[{'type',596,'tuple',[{'type',596,'integer',[]}|[{'ann_type',596,[{'var',596,'WinX'}|[{'type',596,'float',[]}]]}|[{'ann_type',596,[{'var',596,'WinY'}|[{'type',596,'float',[]}]]}|[{'ann_type',596,[{'var',596,'WinZ'}|[{'type',596,'float',[]}]]}]]]]}]]}|[[{'type',596,'constraint',[{'atom',596,'is_subtype'}|[[{'var',596,'ObjX'}|[{'type',596,'float',[]}]]]]}|[{'type',596,'constraint',[{'atom',596,'is_subtype'}|[[{'var',596,'ObjY'}|[{'type',596,'float',[]}]]]]}|[{'type',596,'constraint',[{'atom',596,'is_subtype'}|[[{'var',596,'ObjZ'}|[{'type',596,'float',[]}]]]]}|[{'type',596,'constraint',[{'atom',596,'is_subtype'}|[[{'var',596,'Model'}|[{'type',596,'matrix',[]}]]]]}|[{'type',596,'constraint',[{'atom',596,'is_subtype'}|[[{'var',596,'Proj'}|[{'type',596,'matrix',[]}]]]]}|[{'type',596,'constraint',[{'atom',596,'is_subtype'}|[[{'var',596,'View'}|[{'type',596,'tuple',[{'type',596,'integer',[]}|[{'type',596,'integer',[]}|[{'type',596,'integer',[]}|[{'type',596,'integer',[]}]]]]}]]]]}]]]]]]]]}]}],
		%% Line 619
		'spec' =
		    %% Line 619
		    [{{'quadricDrawStyle',2},[{'type',619,'bounded_fun',[{'type',619,'fun',[{'type',619,'product',[{'var',619,'Quad'}|[{'var',619,'Draw'}]]}|[{'atom',619,'ok'}]]}|[[{'type',619,'constraint',[{'atom',619,'is_subtype'}|[[{'var',619,'Quad'}|[{'type',619,'integer',[]}]]]]}|[{'type',619,'constraint',[{'atom',619,'is_subtype'}|[[{'var',619,'Draw'}|[{'type',619,'enum',[]}]]]]}]]]]}]}],
		%% Line 636
		'spec' =
		    %% Line 636
		    [{{'quadricNormals',2},[{'type',636,'bounded_fun',[{'type',636,'fun',[{'type',636,'product',[{'var',636,'Quad'}|[{'var',636,'Normal'}]]}|[{'atom',636,'ok'}]]}|[[{'type',636,'constraint',[{'atom',636,'is_subtype'}|[[{'var',636,'Quad'}|[{'type',636,'integer',[]}]]]]}|[{'type',636,'constraint',[{'atom',636,'is_subtype'}|[[{'var',636,'Normal'}|[{'type',636,'enum',[]}]]]]}]]]]}]}],
		%% Line 654
		'spec' =
		    %% Line 654
		    [{{'quadricOrientation',2},[{'type',654,'bounded_fun',[{'type',654,'fun',[{'type',654,'product',[{'var',654,'Quad'}|[{'var',654,'Orientation'}]]}|[{'atom',654,'ok'}]]}|[[{'type',654,'constraint',[{'atom',654,'is_subtype'}|[[{'var',654,'Quad'}|[{'type',654,'integer',[]}]]]]}|[{'type',654,'constraint',[{'atom',654,'is_subtype'}|[[{'var',654,'Orientation'}|[{'type',654,'enum',[]}]]]]}]]]]}]}],
		%% Line 669
		'spec' =
		    %% Line 669
		    [{{'quadricTexture',2},[{'type',669,'bounded_fun',[{'type',669,'fun',[{'type',669,'product',[{'var',669,'Quad'}|[{'var',669,'Texture'}]]}|[{'atom',669,'ok'}]]}|[[{'type',669,'constraint',[{'atom',669,'is_subtype'}|[[{'var',669,'Quad'}|[{'type',669,'integer',[]}]]]]}|[{'type',669,'constraint',[{'atom',669,'is_subtype'}|[[{'var',669,'Texture'}|[{'type',669,'union',[{'integer',669,0}|[{'integer',669,1}]]}]]]]}]]]]}]}],
		%% Line 689
		'spec' =
		    %% Line 689
		    [{{'scaleImage',9},[{'type',689,'bounded_fun',[{'type',689,'fun',[{'type',689,'product',[{'var',689,'Format'}|[{'var',689,'WIn'}|[{'var',689,'HIn'}|[{'var',689,'TypeIn'}|[{'var',689,'DataIn'}|[{'var',689,'WOut'}|[{'var',689,'HOut'}|[{'var',689,'TypeOut'}|[{'var',689,'DataOut'}]]]]]]]]]}|[{'type',689,'integer',[]}]]}|[[{'type',689,'constraint',[{'atom',689,'is_subtype'}|[[{'var',689,'Format'}|[{'type',689,'enum',[]}]]]]}|[{'type',689,'constraint',[{'atom',689,'is_subtype'}|[[{'var',689,'WIn'}|[{'type',689,'integer',[]}]]]]}|[{'type',689,'constraint',[{'atom',689,'is_subtype'}|[[{'var',689,'HIn'}|[{'type',689,'integer',[]}]]]]}|[{'type',689,'constraint',[{'atom',689,'is_subtype'}|[[{'var',689,'TypeIn'}|[{'type',689,'enum',[]}]]]]}|[{'type',689,'constraint',[{'atom',689,'is_subtype'}|[[{'var',689,'DataIn'}|[{'type',689,'binary',[]}]]]]}|[{'type',689,'constraint',[{'atom',689,'is_subtype'}|[[{'var',689,'WOut'}|[{'type',689,'integer',[]}]]]]}|[{'type',689,'constraint',[{'atom',689,'is_subtype'}|[[{'var',689,'HOut'}|[{'type',689,'integer',[]}]]]]}|[{'type',689,'constraint',[{'atom',689,'is_subtype'}|[[{'var',689,'TypeOut'}|[{'type',689,'enum',[]}]]]]}|[{'type',689,'constraint',[{'atom',689,'is_subtype'}|[[{'var',689,'DataOut'}|[{'type',689,'mem',[]}]]]]}]]]]]]]]]]]}]}],
		%% Line 712
		'spec' =
		    %% Line 712
		    [{{'sphere',4},[{'type',712,'bounded_fun',[{'type',712,'fun',[{'type',712,'product',[{'var',712,'Quad'}|[{'var',712,'Radius'}|[{'var',712,'Slices'}|[{'var',712,'Stacks'}]]]]}|[{'atom',712,'ok'}]]}|[[{'type',712,'constraint',[{'atom',712,'is_subtype'}|[[{'var',712,'Quad'}|[{'type',712,'integer',[]}]]]]}|[{'type',712,'constraint',[{'atom',712,'is_subtype'}|[[{'var',712,'Radius'}|[{'type',712,'float',[]}]]]]}|[{'type',712,'constraint',[{'atom',712,'is_subtype'}|[[{'var',712,'Slices'}|[{'type',712,'integer',[]}]]]]}|[{'type',712,'constraint',[{'atom',712,'is_subtype'}|[[{'var',712,'Stacks'}|[{'type',712,'integer',[]}]]]]}]]]]]]}]}],
		%% Line 730
		'spec' =
		    %% Line 730
		    [{{'unProject',6},[{'type',730,'bounded_fun',[{'type',730,'fun',[{'type',730,'product',[{'var',730,'WinX'}|[{'var',730,'WinY'}|[{'var',730,'WinZ'}|[{'var',730,'Model'}|[{'var',730,'Proj'}|[{'var',730,'View'}]]]]]]}|[{'type',730,'tuple',[{'type',730,'integer',[]}|[{'ann_type',730,[{'var',730,'ObjX'}|[{'type',730,'float',[]}]]}|[{'ann_type',730,[{'var',730,'ObjY'}|[{'type',730,'float',[]}]]}|[{'ann_type',730,[{'var',730,'ObjZ'}|[{'type',730,'float',[]}]]}]]]]}]]}|[[{'type',730,'constraint',[{'atom',730,'is_subtype'}|[[{'var',730,'WinX'}|[{'type',730,'float',[]}]]]]}|[{'type',730,'constraint',[{'atom',730,'is_subtype'}|[[{'var',730,'WinY'}|[{'type',730,'float',[]}]]]]}|[{'type',730,'constraint',[{'atom',730,'is_subtype'}|[[{'var',730,'WinZ'}|[{'type',730,'float',[]}]]]]}|[{'type',730,'constraint',[{'atom',730,'is_subtype'}|[[{'var',730,'Model'}|[{'type',730,'matrix',[]}]]]]}|[{'type',730,'constraint',[{'atom',730,'is_subtype'}|[[{'var',730,'Proj'}|[{'type',730,'matrix',[]}]]]]}|[{'type',730,'constraint',[{'atom',730,'is_subtype'}|[[{'var',730,'View'}|[{'type',730,'tuple',[{'type',730,'integer',[]}|[{'type',730,'integer',[]}|[{'type',730,'integer',[]}|[{'type',730,'integer',[]}]]]]}]]]]}]]]]]]]]}]}],
		%% Line 738
		'spec' =
		    %% Line 738
		    [{{'unProject4',9},[{'type',738,'bounded_fun',[{'type',738,'fun',[{'type',738,'product',[{'var',738,'WinX'}|[{'var',738,'WinY'}|[{'var',738,'WinZ'}|[{'var',738,'ClipW'}|[{'var',738,'Model'}|[{'var',738,'Proj'}|[{'var',738,'View'}|[{'var',738,'NearVal'}|[{'var',738,'FarVal'}]]]]]]]]]}|[{'type',738,'tuple',[{'type',738,'integer',[]}|[{'ann_type',738,[{'var',738,'ObjX'}|[{'type',738,'float',[]}]]}|[{'ann_type',738,[{'var',738,'ObjY'}|[{'type',738,'float',[]}]]}|[{'ann_type',738,[{'var',738,'ObjZ'}|[{'type',738,'float',[]}]]}|[{'ann_type',738,[{'var',738,'ObjW'}|[{'type',738,'float',[]}]]}]]]]]}]]}|[[{'type',738,'constraint',[{'atom',738,'is_subtype'}|[[{'var',738,'WinX'}|[{'type',738,'float',[]}]]]]}|[{'type',738,'constraint',[{'atom',738,'is_subtype'}|[[{'var',738,'WinY'}|[{'type',738,'float',[]}]]]]}|[{'type',738,'constraint',[{'atom',738,'is_subtype'}|[[{'var',738,'WinZ'}|[{'type',738,'float',[]}]]]]}|[{'type',738,'constraint',[{'atom',738,'is_subtype'}|[[{'var',738,'ClipW'}|[{'type',738,'float',[]}]]]]}|[{'type',738,'constraint',[{'atom',738,'is_subtype'}|[[{'var',738,'Model'}|[{'type',738,'matrix',[]}]]]]}|[{'type',738,'constraint',[{'atom',738,'is_subtype'}|[[{'var',738,'Proj'}|[{'type',738,'matrix',[]}]]]]}|[{'type',738,'constraint',[{'atom',738,'is_subtype'}|[[{'var',738,'View'}|[{'type',738,'tuple',[{'type',738,'integer',[]}|[{'type',738,'integer',[]}|[{'type',738,'integer',[]}|[{'type',738,'integer',[]}]]]]}]]]]}|[{'type',738,'constraint',[{'atom',738,'is_subtype'}|[[{'var',738,'NearVal'}|[{'type',738,'float',[]}]]]]}|[{'type',738,'constraint',[{'atom',738,'is_subtype'}|[[{'var',738,'FarVal'}|[{'type',738,'float',[]}]]]]}]]]]]]]]]]]}]}]]
'tesselate'/2 =
    %% Line 78
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{Nx,Ny,Nz},Vs> when 'true' ->
	      let <_cor8> =
		  %% Line 79
		  call 'erlang':'length'
		      (_cor0)
	      in  let <_cor2> =
		      primop 'bs_init_writable'
			  (256)
		  in  let <_cor7> =
			  %% Line 81
			  ( letrec
				'lbc$^0'/2 =
				    fun (_cor6,_cor5) ->
					case <_cor6,_cor5> of
					  <[%% Line 82
					    {Vx,Vy,Vz}|_cor4],_100> when 'true' ->
					      let <_1614> =
						  ( #{#<_cor5>('all',1,'binary',[]),
						      #<Vx>(64,1,'float',['unsigned'|['native']]),
						      #<Vy>(64,1,'float',['unsigned'|['native']]),
						      #<Vz>(64,1,'float',['unsigned'|['native']])}#
						    -| ['compiler_generated','single_use'] )
					      in  %% Line 82
						  apply 'lbc$^0'/2
						      (_cor4, _1614)
					  ( <[_cor3|_cor4],_186> when 'true' ->
						%% Line 82
						apply 'lbc$^0'/2
						    (_cor4, _cor5)
					    -| ['compiler_generated'] )
					  <[],_210> when 'true' ->
					      _cor5
					  ( <_2191,_3804> when 'true' ->
						( primop 'match_fail'
						      ({'function_clause',_cor6,_cor5})
						  -| [{'function_name',{'lbc$^0',2}}] )
					    -| ['compiler_generated'] )
					end
			    in  apply 'lbc$^0'/2
				    (_cor0, _cor2)
			    -| ['list_comprehension'] )
		      in  let <_cor9> =
			      %% Line 79
			      #{#<_cor8>(32,1,'integer',['unsigned'|['native']]),
				#<0>(32,1,'integer',['unsigned'|['big']]),
				#<Nx>(%% Line 80
				      64,1,'float',['unsigned'|['native']]),
				#<Ny>(%% Line 80
				      64,1,'float',['unsigned'|['native']]),
				#<Nz>(%% Line 80
				      64,1,'float',['unsigned'|['native']]),
				#<_cor7>(%% Line 81
					 'all',8,'binary',['unsigned'|['big']])}#
			  in  %% Line 79
			      call 'gl':'call'
				  (5000, _cor9)
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1,_cor0})
		  -| [{'function_name',{'tesselate',2}}] )
	    -| ['compiler_generated'] )
	end
'build1DMipmapLevels'/9 =
    %% Line 114
    fun (_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 115
	    call 'gl':'send_bin'
		(_cor0)
	    let <_cor9> =
		%% Line 116
		#{#<_cor8>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor7>(32,1,'integer',['signed'|['native']]),
		  #<_cor6>(32,1,'integer',['signed'|['native']]),
		  #<_cor5>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor4>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor3>(32,1,'integer',['signed'|['native']]),
		  #<_cor2>(32,1,'integer',['signed'|['native']]),
		  #<_cor1>(32,1,'integer',['signed'|['native']])}#
	    in  %% Line 116
		call 'gl':'call'
		    (5010, _cor9)
'build1DMipmaps'/6 =
    %% Line 152
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 153
	    call 'gl':'send_bin'
		(_cor0)
	    let <_cor6> =
		%% Line 154
		#{#<_cor5>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor4>(32,1,'integer',['signed'|['native']]),
		  #<_cor3>(32,1,'integer',['signed'|['native']]),
		  #<_cor2>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor1>(32,1,'integer',['unsigned'|['native']])}#
	    in  %% Line 154
		call 'gl':'call'
		    (5011, _cor6)
'build2DMipmapLevels'/10 =
    %% Line 189
    fun (_cor9,_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 190
	    call 'gl':'send_bin'
		(_cor0)
	    let <_cor10> =
		%% Line 191
		#{#<_cor9>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor8>(32,1,'integer',['signed'|['native']]),
		  #<_cor7>(32,1,'integer',['signed'|['native']]),
		  #<_cor6>(32,1,'integer',['signed'|['native']]),
		  #<_cor5>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor4>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor3>(32,1,'integer',['signed'|['native']]),
		  #<_cor2>(32,1,'integer',['signed'|['native']]),
		  #<_cor1>(32,1,'integer',['signed'|['native']])}#
	    in  %% Line 191
		call 'gl':'call'
		    (5012, _cor10)
'build2DMipmaps'/7 =
    %% Line 234
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 235
	    call 'gl':'send_bin'
		(_cor0)
	    let <_cor7> =
		%% Line 236
		#{#<_cor6>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor5>(32,1,'integer',['signed'|['native']]),
		  #<_cor4>(32,1,'integer',['signed'|['native']]),
		  #<_cor3>(32,1,'integer',['signed'|['native']]),
		  #<_cor2>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor1>(32,1,'integer',['unsigned'|['native']])}#
	    in  %% Line 236
		call 'gl':'call'
		    (5013, _cor7)
'build3DMipmapLevels'/11 =
    %% Line 271
    fun (_cor10,_cor9,_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 272
	    call 'gl':'send_bin'
		(_cor0)
	    let <_cor11> =
		%% Line 273
		#{#<_cor10>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor9>(32,1,'integer',['signed'|['native']]),
		  #<_cor8>(32,1,'integer',['signed'|['native']]),
		  #<_cor7>(32,1,'integer',['signed'|['native']]),
		  #<_cor6>(32,1,'integer',['signed'|['native']]),
		  #<_cor5>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor4>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor3>(32,1,'integer',['signed'|['native']]),
		  #<_cor2>(32,1,'integer',['signed'|['native']]),
		  #<_cor1>(32,1,'integer',['signed'|['native']])}#
	    in  %% Line 273
		call 'gl':'call'
		    (5014, _cor11)
'build3DMipmaps'/8 =
    %% Line 315
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 316
	    call 'gl':'send_bin'
		(_cor0)
	    let <_cor8> =
		%% Line 317
		#{#<_cor7>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor6>(32,1,'integer',['signed'|['native']]),
		  #<_cor5>(32,1,'integer',['signed'|['native']]),
		  #<_cor4>(32,1,'integer',['signed'|['native']]),
		  #<_cor3>(32,1,'integer',['signed'|['native']]),
		  #<_cor2>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor1>(32,1,'integer',['unsigned'|['native']])}#
	    in  %% Line 317
		call 'gl':'call'
		    (5015, _cor8)
'checkExtension'/2 =
    %% Line 331
    fun (_cor1,_cor0) ->
	let <_cor13> =
	    %% Line 332
	    call 'erlang':'list_to_binary'
		([_cor1|[0]])
	in  let <_cor8> =
		%% Line 332
		call 'erlang':'length'
		    (_cor1)
	    in  let <_cor9> =
		    %% Line 332
		    call 'erlang':'+'
			(_cor8, 1)
		in  let <_cor10> =
			%% Line 332
			call 'erlang':'rem'
			    (_cor9, 8)
		    in  let <_cor11> =
			    %% Line 332
			    call 'erlang':'-'
				(8, _cor10)
			in  let <_cor12> =
				%% Line 332
				call 'erlang':'rem'
				    (_cor11, 8)
			    in  let <_cor7> =
				    %% Line 332
				    call 'erlang':'list_to_binary'
					([_cor0|[0]])
				in  let <_cor2> =
					%% Line 332
					call 'erlang':'length'
					    (_cor0)
				    in  let <_cor3> =
					    %% Line 332
					    call 'erlang':'+'
						(_cor2, 1)
					in  let <_cor4> =
						%% Line 332
						call 'erlang':'rem'
						    (_cor3, 8)
					    in  let <_cor5> =
						    %% Line 332
						    call 'erlang':'-'
							(8, _cor4)
						in  let <_cor6> =
							%% Line 332
							call 'erlang':'rem'
							    (_cor5, 8)
						    in  let <_cor14> =
							    %% Line 332
							    #{#<_cor13>('all',8,'binary',['unsigned'|['big']]),
							      #<0>(_cor12,1,'integer',['unsigned'|['big']]),
							      #<_cor7>('all',8,'binary',['unsigned'|['big']]),
							      #<0>(_cor6,1,'integer',['unsigned'|['big']])}#
							in  %% Line 332
							    call 'gl':'call'
								(5016, _cor14)
'cylinder'/6 =
    %% Line 355
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 356
	    #{#<_cor5>(64,1,'integer',['unsigned'|['native']]),
	      #<_cor4>(64,1,'float',['unsigned'|['native']]),
	      #<_cor3>(64,1,'float',['unsigned'|['native']]),
	      #<_cor2>(64,1,'float',['unsigned'|['native']]),
	      #<_cor1>(32,1,'integer',['signed'|['native']]),
	      #<_cor0>(32,1,'integer',['signed'|['native']])}#
	in  %% Line 356
	    call 'gl':'cast'
		(5017, _cor6)
'deleteQuadric'/1 =
    %% Line 366
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 367
	    #{#<_cor0>(64,1,'integer',['unsigned'|['native']])}#
	in  %% Line 367
	    call 'gl':'cast'
		(5018, _cor1)
'disk'/5 =
    %% Line 389
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 390
	    #{#<_cor4>(64,1,'integer',['unsigned'|['native']]),
	      #<_cor3>(64,1,'float',['unsigned'|['native']]),
	      #<_cor2>(64,1,'float',['unsigned'|['native']]),
	      #<_cor1>(32,1,'integer',['signed'|['native']]),
	      #<_cor0>(32,1,'integer',['signed'|['native']])}#
	in  %% Line 390
	    call 'gl':'cast'
		(5019, _cor5)
'errorString'/1 =
    %% Line 405
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 406
	    #{#<_cor0>(32,1,'integer',['unsigned'|['native']])}#
	in  %% Line 406
	    call 'gl':'call'
		(5020, _cor1)
'getString'/1 =
    %% Line 433
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 434
	    #{#<_cor0>(32,1,'integer',['unsigned'|['native']])}#
	in  %% Line 434
	    call 'gl':'call'
		(5021, _cor1)
'lookAt'/9 =
    %% Line 467
    fun (_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor9> =
	    %% Line 468
	    #{#<_cor8>(64,1,'float',['unsigned'|['native']]),
	      #<_cor7>(64,1,'float',['unsigned'|['native']]),
	      #<_cor6>(64,1,'float',['unsigned'|['native']]),
	      #<_cor5>(64,1,'float',['unsigned'|['native']]),
	      #<_cor4>(64,1,'float',['unsigned'|['native']]),
	      #<_cor3>(64,1,'float',['unsigned'|['native']]),
	      #<_cor2>(64,1,'float',['unsigned'|['native']]),
	      #<_cor1>(64,1,'float',['unsigned'|['native']]),
	      #<_cor0>(64,1,'float',['unsigned'|['native']])}#
	in  %% Line 468
	    call 'gl':'cast'
		(5022, _cor9)
'newQuadric'/0 =
    %% Line 478
    fun () ->
	%% Line 479
	call 'gl':'call'
	    (5023, #{}#)
'ortho2D'/4 =
    %% Line 488
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 489
	    #{#<_cor3>(64,1,'float',['unsigned'|['native']]),
	      #<_cor2>(64,1,'float',['unsigned'|['native']]),
	      #<_cor1>(64,1,'float',['unsigned'|['native']]),
	      #<_cor0>(64,1,'float',['unsigned'|['native']])}#
	in  %% Line 489
	    call 'gl':'cast'
		(5024, _cor4)
'partialDisk'/7 =
    %% Line 517
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 518
	    #{#<_cor6>(64,1,'integer',['unsigned'|['native']]),
	      #<_cor5>(64,1,'float',['unsigned'|['native']]),
	      #<_cor4>(64,1,'float',['unsigned'|['native']]),
	      #<_cor3>(32,1,'integer',['signed'|['native']]),
	      #<_cor2>(32,1,'integer',['signed'|['native']]),
	      #<_cor1>(64,1,'float',['unsigned'|['native']]),
	      #<_cor0>(64,1,'float',['unsigned'|['native']])}#
	in  %% Line 518
	    call 'gl':'cast'
		(5025, _cor7)
'perspective'/4 =
    %% Line 541
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 542
	    #{#<_cor3>(64,1,'float',['unsigned'|['native']]),
	      #<_cor2>(64,1,'float',['unsigned'|['native']]),
	      #<_cor1>(64,1,'float',['unsigned'|['native']]),
	      #<_cor0>(64,1,'float',['unsigned'|['native']])}#
	in  %% Line 542
	    call 'gl':'cast'
		(5026, _cor4)
'pickMatrix'/5 =
    %% Line 567
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <X,Y,DelX,DelY,{V1,V2,V3,V4}> when 'true' ->
	      let <_cor5> =
		  %% Line 568
		  #{#<_cor4>(64,1,'float',['unsigned'|['native']]),
		    #<_cor3>(64,1,'float',['unsigned'|['native']]),
		    #<_cor2>(64,1,'float',['unsigned'|['native']]),
		    #<_cor1>(64,1,'float',['unsigned'|['native']]),
		    #<V1>(32,1,'integer',['signed'|['native']]),
		    #<V2>(32,1,'integer',['signed'|['native']]),
		    #<V3>(32,1,'integer',['signed'|['native']]),
		    #<V4>(32,1,'integer',['signed'|['native']])}#
	      in  %% Line 568
		  call 'gl':'cast'
		      (5027, _cor5)
	  ( <_cor10,_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'pickMatrix',5}}] )
	    -| ['compiler_generated'] )
	end
'project'/6 =
    %% Line 597
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <ObjX,ObjY,ObjZ,{M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,M13,M14,M15,M16},{P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16},{V1,V2,V3,V4}> when 'true' ->
	      let <_cor6> =
		  %% Line 598
		  #{#<_cor5>(64,1,'float',['unsigned'|['native']]),
		    #<_cor4>(64,1,'float',['unsigned'|['native']]),
		    #<_cor3>(64,1,'float',['unsigned'|['native']]),
		    #<M1>(64,1,'float',['unsigned'|['native']]),
		    #<M2>(64,1,'float',['unsigned'|['native']]),
		    #<M3>(64,1,'float',['unsigned'|['native']]),
		    #<M4>(64,1,'float',['unsigned'|['native']]),
		    #<M5>(64,1,'float',['unsigned'|['native']]),
		    #<M6>(64,1,'float',['unsigned'|['native']]),
		    #<M7>(64,1,'float',['unsigned'|['native']]),
		    #<M8>(64,1,'float',['unsigned'|['native']]),
		    #<M9>(64,1,'float',['unsigned'|['native']]),
		    #<M10>(64,1,'float',['unsigned'|['native']]),
		    #<M11>(64,1,'float',['unsigned'|['native']]),
		    #<M12>(64,1,'float',['unsigned'|['native']]),
		    #<M13>(64,1,'float',['unsigned'|['native']]),
		    #<M14>(64,1,'float',['unsigned'|['native']]),
		    #<M15>(64,1,'float',['unsigned'|['native']]),
		    #<M16>(64,1,'float',['unsigned'|['native']]),
		    #<P1>(64,1,'float',['unsigned'|['native']]),
		    #<P2>(64,1,'float',['unsigned'|['native']]),
		    #<P3>(64,1,'float',['unsigned'|['native']]),
		    #<P4>(64,1,'float',['unsigned'|['native']]),
		    #<P5>(64,1,'float',['unsigned'|['native']]),
		    #<P6>(64,1,'float',['unsigned'|['native']]),
		    #<P7>(64,1,'float',['unsigned'|['native']]),
		    #<P8>(64,1,'float',['unsigned'|['native']]),
		    #<P9>(64,1,'float',['unsigned'|['native']]),
		    #<P10>(64,1,'float',['unsigned'|['native']]),
		    #<P11>(64,1,'float',['unsigned'|['native']]),
		    #<P12>(64,1,'float',['unsigned'|['native']]),
		    #<P13>(64,1,'float',['unsigned'|['native']]),
		    #<P14>(64,1,'float',['unsigned'|['native']]),
		    #<P15>(64,1,'float',['unsigned'|['native']]),
		    #<P16>(64,1,'float',['unsigned'|['native']]),
		    #<V1>(32,1,'integer',['signed'|['native']]),
		    #<V2>(32,1,'integer',['signed'|['native']]),
		    #<V3>(32,1,'integer',['signed'|['native']]),
		    #<V4>(32,1,'integer',['signed'|['native']])}#
	      in  %% Line 598
		  call 'gl':'call'
		      (5028, _cor6)
	  %% Line 599
	  <ObjX,ObjY,ObjZ,{M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12},{P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12},{V1,V2,V3,V4}> when 'true' ->
	      let <_cor7> =
		  %% Line 600
		  #{#<_cor5>(64,1,'float',['unsigned'|['native']]),
		    #<_cor4>(64,1,'float',['unsigned'|['native']]),
		    #<_cor3>(64,1,'float',['unsigned'|['native']]),
		    #<M1>(64,1,'float',['unsigned'|['native']]),
		    #<M2>(64,1,'float',['unsigned'|['native']]),
		    #<M3>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<M4>(64,1,'float',['unsigned'|['native']]),
		    #<M5>(64,1,'float',['unsigned'|['native']]),
		    #<M6>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<M7>(64,1,'float',['unsigned'|['native']]),
		    #<M8>(64,1,'float',['unsigned'|['native']]),
		    #<M9>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<M10>(64,1,'float',['unsigned'|['native']]),
		    #<M11>(64,1,'float',['unsigned'|['native']]),
		    #<M12>(64,1,'float',['unsigned'|['native']]),
		    #<1>(64,1,'float',['unsigned'|['native']]),
		    #<P1>(64,1,'float',['unsigned'|['native']]),
		    #<P2>(64,1,'float',['unsigned'|['native']]),
		    #<P3>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<P4>(64,1,'float',['unsigned'|['native']]),
		    #<P5>(64,1,'float',['unsigned'|['native']]),
		    #<P6>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<P7>(64,1,'float',['unsigned'|['native']]),
		    #<P8>(64,1,'float',['unsigned'|['native']]),
		    #<P9>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<P10>(64,1,'float',['unsigned'|['native']]),
		    #<P11>(64,1,'float',['unsigned'|['native']]),
		    #<P12>(64,1,'float',['unsigned'|['native']]),
		    #<1>(64,1,'float',['unsigned'|['native']]),
		    #<V1>(32,1,'integer',['signed'|['native']]),
		    #<V2>(32,1,'integer',['signed'|['native']]),
		    #<V3>(32,1,'integer',['signed'|['native']]),
		    #<V4>(32,1,'integer',['signed'|['native']])}#
	      in  %% Line 600
		  call 'gl':'call'
		      (5028, _cor7)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'project',6}}] )
	    -| ['compiler_generated'] )
	end
'quadricDrawStyle'/2 =
    %% Line 620
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 621
	    #{#<_cor1>(64,1,'integer',['unsigned'|['native']]),
	      #<_cor0>(32,1,'integer',['unsigned'|['native']])}#
	in  %% Line 621
	    call 'gl':'cast'
		(5029, _cor2)
'quadricNormals'/2 =
    %% Line 637
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 638
	    #{#<_cor1>(64,1,'integer',['unsigned'|['native']]),
	      #<_cor0>(32,1,'integer',['unsigned'|['native']])}#
	in  %% Line 638
	    call 'gl':'cast'
		(5030, _cor2)
'quadricOrientation'/2 =
    %% Line 655
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 656
	    #{#<_cor1>(64,1,'integer',['unsigned'|['native']]),
	      #<_cor0>(32,1,'integer',['unsigned'|['native']])}#
	in  %% Line 656
	    call 'gl':'cast'
		(5031, _cor2)
'quadricTexture'/2 =
    %% Line 670
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 671
	    #{#<_cor1>(64,1,'integer',['unsigned'|['native']]),
	      #<_cor0>(8,1,'integer',['unsigned'|['native']])}#
	in  %% Line 671
	    call 'gl':'cast'
		(5032, _cor2)
'scaleImage'/9 =
    %% Line 690
    fun (_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  do  %% Line 691
		call 'gl':'send_bin'
		    (_cor4)
		%% Line 692
		call 'gl':'send_bin'
		    (_cor0)
	    let <_cor9> =
		%% Line 693
		#{#<_cor8>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor7>(32,1,'integer',['signed'|['native']]),
		  #<_cor6>(32,1,'integer',['signed'|['native']]),
		  #<_cor5>(32,1,'integer',['unsigned'|['native']]),
		  #<_cor3>(32,1,'integer',['signed'|['native']]),
		  #<_cor2>(32,1,'integer',['signed'|['native']]),
		  #<_cor1>(32,1,'integer',['unsigned'|['native']])}#
	    in  %% Line 693
		call 'gl':'call'
		    (5033, _cor9)
'sphere'/4 =
    %% Line 713
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 714
	    #{#<_cor3>(64,1,'integer',['unsigned'|['native']]),
	      #<_cor2>(64,1,'float',['unsigned'|['native']]),
	      #<_cor1>(32,1,'integer',['signed'|['native']]),
	      #<_cor0>(32,1,'integer',['signed'|['native']])}#
	in  %% Line 714
	    call 'gl':'cast'
		(5034, _cor4)
'unProject'/6 =
    %% Line 731
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <WinX,WinY,WinZ,{M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,M13,M14,M15,M16},{P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16},{V1,V2,V3,V4}> when 'true' ->
	      let <_cor6> =
		  %% Line 732
		  #{#<_cor5>(64,1,'float',['unsigned'|['native']]),
		    #<_cor4>(64,1,'float',['unsigned'|['native']]),
		    #<_cor3>(64,1,'float',['unsigned'|['native']]),
		    #<M1>(64,1,'float',['unsigned'|['native']]),
		    #<M2>(64,1,'float',['unsigned'|['native']]),
		    #<M3>(64,1,'float',['unsigned'|['native']]),
		    #<M4>(64,1,'float',['unsigned'|['native']]),
		    #<M5>(64,1,'float',['unsigned'|['native']]),
		    #<M6>(64,1,'float',['unsigned'|['native']]),
		    #<M7>(64,1,'float',['unsigned'|['native']]),
		    #<M8>(64,1,'float',['unsigned'|['native']]),
		    #<M9>(64,1,'float',['unsigned'|['native']]),
		    #<M10>(64,1,'float',['unsigned'|['native']]),
		    #<M11>(64,1,'float',['unsigned'|['native']]),
		    #<M12>(64,1,'float',['unsigned'|['native']]),
		    #<M13>(64,1,'float',['unsigned'|['native']]),
		    #<M14>(64,1,'float',['unsigned'|['native']]),
		    #<M15>(64,1,'float',['unsigned'|['native']]),
		    #<M16>(64,1,'float',['unsigned'|['native']]),
		    #<P1>(64,1,'float',['unsigned'|['native']]),
		    #<P2>(64,1,'float',['unsigned'|['native']]),
		    #<P3>(64,1,'float',['unsigned'|['native']]),
		    #<P4>(64,1,'float',['unsigned'|['native']]),
		    #<P5>(64,1,'float',['unsigned'|['native']]),
		    #<P6>(64,1,'float',['unsigned'|['native']]),
		    #<P7>(64,1,'float',['unsigned'|['native']]),
		    #<P8>(64,1,'float',['unsigned'|['native']]),
		    #<P9>(64,1,'float',['unsigned'|['native']]),
		    #<P10>(64,1,'float',['unsigned'|['native']]),
		    #<P11>(64,1,'float',['unsigned'|['native']]),
		    #<P12>(64,1,'float',['unsigned'|['native']]),
		    #<P13>(64,1,'float',['unsigned'|['native']]),
		    #<P14>(64,1,'float',['unsigned'|['native']]),
		    #<P15>(64,1,'float',['unsigned'|['native']]),
		    #<P16>(64,1,'float',['unsigned'|['native']]),
		    #<V1>(32,1,'integer',['signed'|['native']]),
		    #<V2>(32,1,'integer',['signed'|['native']]),
		    #<V3>(32,1,'integer',['signed'|['native']]),
		    #<V4>(32,1,'integer',['signed'|['native']])}#
	      in  %% Line 732
		  call 'gl':'call'
		      (5035, _cor6)
	  %% Line 733
	  <WinX,WinY,WinZ,{M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12},{P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12},{V1,V2,V3,V4}> when 'true' ->
	      let <_cor7> =
		  %% Line 734
		  #{#<_cor5>(64,1,'float',['unsigned'|['native']]),
		    #<_cor4>(64,1,'float',['unsigned'|['native']]),
		    #<_cor3>(64,1,'float',['unsigned'|['native']]),
		    #<M1>(64,1,'float',['unsigned'|['native']]),
		    #<M2>(64,1,'float',['unsigned'|['native']]),
		    #<M3>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<M4>(64,1,'float',['unsigned'|['native']]),
		    #<M5>(64,1,'float',['unsigned'|['native']]),
		    #<M6>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<M7>(64,1,'float',['unsigned'|['native']]),
		    #<M8>(64,1,'float',['unsigned'|['native']]),
		    #<M9>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<M10>(64,1,'float',['unsigned'|['native']]),
		    #<M11>(64,1,'float',['unsigned'|['native']]),
		    #<M12>(64,1,'float',['unsigned'|['native']]),
		    #<1>(64,1,'float',['unsigned'|['native']]),
		    #<P1>(64,1,'float',['unsigned'|['native']]),
		    #<P2>(64,1,'float',['unsigned'|['native']]),
		    #<P3>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<P4>(64,1,'float',['unsigned'|['native']]),
		    #<P5>(64,1,'float',['unsigned'|['native']]),
		    #<P6>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<P7>(64,1,'float',['unsigned'|['native']]),
		    #<P8>(64,1,'float',['unsigned'|['native']]),
		    #<P9>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<P10>(64,1,'float',['unsigned'|['native']]),
		    #<P11>(64,1,'float',['unsigned'|['native']]),
		    #<P12>(64,1,'float',['unsigned'|['native']]),
		    #<1>(64,1,'float',['unsigned'|['native']]),
		    #<V1>(32,1,'integer',['signed'|['native']]),
		    #<V2>(32,1,'integer',['signed'|['native']]),
		    #<V3>(32,1,'integer',['signed'|['native']]),
		    #<V4>(32,1,'integer',['signed'|['native']])}#
	      in  %% Line 734
		  call 'gl':'call'
		      (5035, _cor7)
	  ( <_cor13,_cor12,_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'unProject',6}}] )
	    -| ['compiler_generated'] )
	end
'unProject4'/9 =
    %% Line 739
    fun (_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <WinX,WinY,WinZ,ClipW,{M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,M13,M14,M15,M16},{P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P16},{V1,V2,V3,V4},NearVal,FarVal> when 'true' ->
	      let <_cor9> =
		  %% Line 740
		  #{#<_cor8>(64,1,'float',['unsigned'|['native']]),
		    #<_cor7>(64,1,'float',['unsigned'|['native']]),
		    #<_cor6>(64,1,'float',['unsigned'|['native']]),
		    #<_cor5>(64,1,'float',['unsigned'|['native']]),
		    #<M1>(64,1,'float',['unsigned'|['native']]),
		    #<M2>(64,1,'float',['unsigned'|['native']]),
		    #<M3>(64,1,'float',['unsigned'|['native']]),
		    #<M4>(64,1,'float',['unsigned'|['native']]),
		    #<M5>(64,1,'float',['unsigned'|['native']]),
		    #<M6>(64,1,'float',['unsigned'|['native']]),
		    #<M7>(64,1,'float',['unsigned'|['native']]),
		    #<M8>(64,1,'float',['unsigned'|['native']]),
		    #<M9>(64,1,'float',['unsigned'|['native']]),
		    #<M10>(64,1,'float',['unsigned'|['native']]),
		    #<M11>(64,1,'float',['unsigned'|['native']]),
		    #<M12>(64,1,'float',['unsigned'|['native']]),
		    #<M13>(64,1,'float',['unsigned'|['native']]),
		    #<M14>(64,1,'float',['unsigned'|['native']]),
		    #<M15>(64,1,'float',['unsigned'|['native']]),
		    #<M16>(64,1,'float',['unsigned'|['native']]),
		    #<P1>(64,1,'float',['unsigned'|['native']]),
		    #<P2>(64,1,'float',['unsigned'|['native']]),
		    #<P3>(64,1,'float',['unsigned'|['native']]),
		    #<P4>(64,1,'float',['unsigned'|['native']]),
		    #<P5>(64,1,'float',['unsigned'|['native']]),
		    #<P6>(64,1,'float',['unsigned'|['native']]),
		    #<P7>(64,1,'float',['unsigned'|['native']]),
		    #<P8>(64,1,'float',['unsigned'|['native']]),
		    #<P9>(64,1,'float',['unsigned'|['native']]),
		    #<P10>(64,1,'float',['unsigned'|['native']]),
		    #<P11>(64,1,'float',['unsigned'|['native']]),
		    #<P12>(64,1,'float',['unsigned'|['native']]),
		    #<P13>(64,1,'float',['unsigned'|['native']]),
		    #<P14>(64,1,'float',['unsigned'|['native']]),
		    #<P15>(64,1,'float',['unsigned'|['native']]),
		    #<P16>(64,1,'float',['unsigned'|['native']]),
		    #<V1>(32,1,'integer',['signed'|['native']]),
		    #<V2>(32,1,'integer',['signed'|['native']]),
		    #<V3>(32,1,'integer',['signed'|['native']]),
		    #<V4>(32,1,'integer',['signed'|['native']]),
		    #<_cor1>(64,1,'float',['unsigned'|['native']]),
		    #<_cor0>(64,1,'float',['unsigned'|['native']])}#
	      in  %% Line 740
		  call 'gl':'call'
		      (5036, _cor9)
	  %% Line 741
	  <WinX,WinY,WinZ,ClipW,{M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12},{P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12},{V1,V2,V3,V4},NearVal,FarVal> when 'true' ->
	      let <_cor10> =
		  %% Line 742
		  #{#<_cor8>(64,1,'float',['unsigned'|['native']]),
		    #<_cor7>(64,1,'float',['unsigned'|['native']]),
		    #<_cor6>(64,1,'float',['unsigned'|['native']]),
		    #<_cor5>(64,1,'float',['unsigned'|['native']]),
		    #<M1>(64,1,'float',['unsigned'|['native']]),
		    #<M2>(64,1,'float',['unsigned'|['native']]),
		    #<M3>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<M4>(64,1,'float',['unsigned'|['native']]),
		    #<M5>(64,1,'float',['unsigned'|['native']]),
		    #<M6>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<M7>(64,1,'float',['unsigned'|['native']]),
		    #<M8>(64,1,'float',['unsigned'|['native']]),
		    #<M9>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<M10>(64,1,'float',['unsigned'|['native']]),
		    #<M11>(64,1,'float',['unsigned'|['native']]),
		    #<M12>(64,1,'float',['unsigned'|['native']]),
		    #<1>(64,1,'float',['unsigned'|['native']]),
		    #<P1>(64,1,'float',['unsigned'|['native']]),
		    #<P2>(64,1,'float',['unsigned'|['native']]),
		    #<P3>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<P4>(64,1,'float',['unsigned'|['native']]),
		    #<P5>(64,1,'float',['unsigned'|['native']]),
		    #<P6>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<P7>(64,1,'float',['unsigned'|['native']]),
		    #<P8>(64,1,'float',['unsigned'|['native']]),
		    #<P9>(64,1,'float',['unsigned'|['native']]),
		    #<0>(64,1,'float',['unsigned'|['native']]),
		    #<P10>(64,1,'float',['unsigned'|['native']]),
		    #<P11>(64,1,'float',['unsigned'|['native']]),
		    #<P12>(64,1,'float',['unsigned'|['native']]),
		    #<1>(64,1,'float',['unsigned'|['native']]),
		    #<V1>(32,1,'integer',['signed'|['native']]),
		    #<V2>(32,1,'integer',['signed'|['native']]),
		    #<V3>(32,1,'integer',['signed'|['native']]),
		    #<V4>(32,1,'integer',['signed'|['native']]),
		    #<_cor1>(64,1,'float',['unsigned'|['native']]),
		    #<_cor0>(64,1,'float',['unsigned'|['native']])}#
	      in  %% Line 742
		  call 'gl':'call'
		      (5036, _cor10)
	  ( <_cor19,_cor18,_cor17,_cor16,_cor15,_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0})
		  -| [{'function_name',{'unProject4',9}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('glu')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('glu', _cor0)
end