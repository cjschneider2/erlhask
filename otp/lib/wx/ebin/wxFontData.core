module 'wxFontData' ['destroy'/1,
		     'enableEffects'/2,
		     'getAllowSymbols'/1,
		     'getChosenFont'/1,
		     'getColour'/1,
		     'getEnableEffects'/1,
		     'getInitialFont'/1,
		     'getShowHelp'/1,
		     'module_info'/0,
		     'module_info'/1,
		     'new'/0,
		     'new'/1,
		     'parent_class'/1,
		     'setAllowSymbols'/2,
		     'setChosenFont'/2,
		     'setColour'/2,
		     'setInitialFont'/2,
		     'setRange'/3,
		     'setShowHelp'/2]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 34
		'export_type' =
		    %% Line 34
		    [{'wxFontData',0}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{'wxFontData',{'remote_type',38,[{'atom',38,'wx'}|[{'atom',38,'wx_object'}|[[]]]]},[]}],
		%% Line 40
		'spec' =
		    %% Line 40
		    [{{'new',0},[{'type',40,'fun',[{'type',40,'product',[]}|[{'type',40,'wxFontData',[]}]]}]}],
		%% Line 46
		'spec' =
		    %% Line 46
		    [{{'new',1},[{'type',46,'bounded_fun',[{'type',46,'fun',[{'type',46,'product',[{'var',46,'Data'}]}|[{'type',46,'wxFontData',[]}]]}|[[{'type',47,'constraint',[{'atom',47,'is_subtype'}|[[{'var',47,'Data'}|[{'type',47,'wxFontData',[]}]]]]}]]]}]}],
		%% Line 54
		'spec' =
		    %% Line 54
		    [{{'enableEffects',2},[{'type',54,'bounded_fun',[{'type',54,'fun',[{'type',54,'product',[{'var',54,'This'}|[{'var',54,'Flag'}]]}|[{'atom',54,'ok'}]]}|[[{'type',55,'constraint',[{'atom',55,'is_subtype'}|[[{'var',55,'This'}|[{'type',55,'wxFontData',[]}]]]]}|[{'type',55,'constraint',[{'atom',55,'is_subtype'}|[[{'var',55,'Flag'}|[{'type',55,'boolean',[]}]]]]}]]]]}]}],
		%% Line 63
		'spec' =
		    %% Line 63
		    [{{'getAllowSymbols',1},[{'type',63,'bounded_fun',[{'type',63,'fun',[{'type',63,'product',[{'var',63,'This'}]}|[{'type',63,'boolean',[]}]]}|[[{'type',64,'constraint',[{'atom',64,'is_subtype'}|[[{'var',64,'This'}|[{'type',64,'wxFontData',[]}]]]]}]]]}]}],
		%% Line 71
		'spec' =
		    %% Line 71
		    [{{'getColour',1},[{'type',71,'bounded_fun',[{'type',71,'fun',[{'type',71,'product',[{'var',71,'This'}]}|[{'remote_type',71,[{'atom',71,'wx'}|[{'atom',71,'wx_colour4'}|[[]]]]}]]}|[[{'type',72,'constraint',[{'atom',72,'is_subtype'}|[[{'var',72,'This'}|[{'type',72,'wxFontData',[]}]]]]}]]]}]}],
		%% Line 79
		'spec' =
		    %% Line 79
		    [{{'getChosenFont',1},[{'type',79,'bounded_fun',[{'type',79,'fun',[{'type',79,'product',[{'var',79,'This'}]}|[{'remote_type',79,[{'atom',79,'wxFont'}|[{'atom',79,'wxFont'}|[[]]]]}]]}|[[{'type',80,'constraint',[{'atom',80,'is_subtype'}|[[{'var',80,'This'}|[{'type',80,'wxFontData',[]}]]]]}]]]}]}],
		%% Line 87
		'spec' =
		    %% Line 87
		    [{{'getEnableEffects',1},[{'type',87,'bounded_fun',[{'type',87,'fun',[{'type',87,'product',[{'var',87,'This'}]}|[{'type',87,'boolean',[]}]]}|[[{'type',88,'constraint',[{'atom',88,'is_subtype'}|[[{'var',88,'This'}|[{'type',88,'wxFontData',[]}]]]]}]]]}]}],
		%% Line 95
		'spec' =
		    %% Line 95
		    [{{'getInitialFont',1},[{'type',95,'bounded_fun',[{'type',95,'fun',[{'type',95,'product',[{'var',95,'This'}]}|[{'remote_type',95,[{'atom',95,'wxFont'}|[{'atom',95,'wxFont'}|[[]]]]}]]}|[[{'type',96,'constraint',[{'atom',96,'is_subtype'}|[[{'var',96,'This'}|[{'type',96,'wxFontData',[]}]]]]}]]]}]}],
		%% Line 103
		'spec' =
		    %% Line 103
		    [{{'getShowHelp',1},[{'type',103,'bounded_fun',[{'type',103,'fun',[{'type',103,'product',[{'var',103,'This'}]}|[{'type',103,'boolean',[]}]]}|[[{'type',104,'constraint',[{'atom',104,'is_subtype'}|[[{'var',104,'This'}|[{'type',104,'wxFontData',[]}]]]]}]]]}]}],
		%% Line 111
		'spec' =
		    %% Line 111
		    [{{'setAllowSymbols',2},[{'type',111,'bounded_fun',[{'type',111,'fun',[{'type',111,'product',[{'var',111,'This'}|[{'var',111,'Flag'}]]}|[{'atom',111,'ok'}]]}|[[{'type',112,'constraint',[{'atom',112,'is_subtype'}|[[{'var',112,'This'}|[{'type',112,'wxFontData',[]}]]]]}|[{'type',112,'constraint',[{'atom',112,'is_subtype'}|[[{'var',112,'Flag'}|[{'type',112,'boolean',[]}]]]]}]]]]}]}],
		%% Line 120
		'spec' =
		    %% Line 120
		    [{{'setChosenFont',2},[{'type',120,'bounded_fun',[{'type',120,'fun',[{'type',120,'product',[{'var',120,'This'}|[{'var',120,'Font'}]]}|[{'atom',120,'ok'}]]}|[[{'type',121,'constraint',[{'atom',121,'is_subtype'}|[[{'var',121,'This'}|[{'type',121,'wxFontData',[]}]]]]}|[{'type',121,'constraint',[{'atom',121,'is_subtype'}|[[{'var',121,'Font'}|[{'remote_type',121,[{'atom',121,'wxFont'}|[{'atom',121,'wxFont'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 129
		'spec' =
		    %% Line 129
		    [{{'setColour',2},[{'type',129,'bounded_fun',[{'type',129,'fun',[{'type',129,'product',[{'var',129,'This'}|[{'var',129,'Colour'}]]}|[{'atom',129,'ok'}]]}|[[{'type',130,'constraint',[{'atom',130,'is_subtype'}|[[{'var',130,'This'}|[{'type',130,'wxFontData',[]}]]]]}|[{'type',130,'constraint',[{'atom',130,'is_subtype'}|[[{'var',130,'Colour'}|[{'remote_type',130,[{'atom',130,'wx'}|[{'atom',130,'wx_colour'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 138
		'spec' =
		    %% Line 138
		    [{{'setInitialFont',2},[{'type',138,'bounded_fun',[{'type',138,'fun',[{'type',138,'product',[{'var',138,'This'}|[{'var',138,'Font'}]]}|[{'atom',138,'ok'}]]}|[[{'type',139,'constraint',[{'atom',139,'is_subtype'}|[[{'var',139,'This'}|[{'type',139,'wxFontData',[]}]]]]}|[{'type',139,'constraint',[{'atom',139,'is_subtype'}|[[{'var',139,'Font'}|[{'remote_type',139,[{'atom',139,'wxFont'}|[{'atom',139,'wxFont'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 147
		'spec' =
		    %% Line 147
		    [{{'setRange',3},[{'type',147,'bounded_fun',[{'type',147,'fun',[{'type',147,'product',[{'var',147,'This'}|[{'var',147,'MinRange'}|[{'var',147,'MaxRange'}]]]}|[{'atom',147,'ok'}]]}|[[{'type',148,'constraint',[{'atom',148,'is_subtype'}|[[{'var',148,'This'}|[{'type',148,'wxFontData',[]}]]]]}|[{'type',148,'constraint',[{'atom',148,'is_subtype'}|[[{'var',148,'MinRange'}|[{'type',148,'integer',[]}]]]]}|[{'type',148,'constraint',[{'atom',148,'is_subtype'}|[[{'var',148,'MaxRange'}|[{'type',148,'integer',[]}]]]]}]]]]]}]}],
		%% Line 156
		'spec' =
		    %% Line 156
		    [{{'setShowHelp',2},[{'type',156,'bounded_fun',[{'type',156,'fun',[{'type',156,'product',[{'var',156,'This'}|[{'var',156,'Flag'}]]}|[{'atom',156,'ok'}]]}|[[{'type',157,'constraint',[{'atom',157,'is_subtype'}|[[{'var',157,'This'}|[{'type',157,'wxFontData',[]}]]]]}|[{'type',157,'constraint',[{'atom',157,'is_subtype'}|[[{'var',157,'Flag'}|[{'type',157,'boolean',[]}]]]]}]]]]}]}],
		%% Line 165
		'spec' =
		    %% Line 165
		    [{{'destroy',1},[{'type',165,'fun',[{'type',165,'product',[{'ann_type',165,[{'var',165,'This'}|[{'type',165,'wxFontData',[]}]]}]}|[{'atom',165,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 36
    fun (_cor0) ->
	call 'erlang':'error'
	    ({'badtype','wxFontData'})
'new'/0 =
    %% Line 41
    fun () ->
	%% Line 42
	call 'wxe_util':'construct'
	    (2330, %% Line 43
		   #{}#)
'new'/1 =
    %% Line 48
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',DataRef,DataT,_cor5}> when 'true' ->
	      do  %% Line 49
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (DataT,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call DataT:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 51
		      #{#<DataRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 50
		      call 'wxe_util':'construct'
			  (2331, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'enableEffects'/2 =
    %% Line 56
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Flag>
	      when %% Line 57
		call 'erlang':'is_boolean'
		    (Flag) ->
	      do  %% Line 58
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 60
		      call 'wxe_util':'from_bool'
			  (Flag)
		  in  let <_cor5> =
			  %% Line 60
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 59
			  call 'wxe_util':'cast'
			      (2333, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'enableEffects',2}}] )
	    -| ['compiler_generated'] )
	end
'getAllowSymbols'/1 =
    %% Line 65
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 66
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 68
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 67
		      call 'wxe_util':'call'
			  (2334, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getAllowSymbols',1}}] )
	    -| ['compiler_generated'] )
	end
'getColour'/1 =
    %% Line 73
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 74
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 76
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 75
		      call 'wxe_util':'call'
			  (2335, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getColour',1}}] )
	    -| ['compiler_generated'] )
	end
'getChosenFont'/1 =
    %% Line 81
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 82
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 84
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 83
		      call 'wxe_util':'call'
			  (2336, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getChosenFont',1}}] )
	    -| ['compiler_generated'] )
	end
'getEnableEffects'/1 =
    %% Line 89
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 90
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 92
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 91
		      call 'wxe_util':'call'
			  (2337, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getEnableEffects',1}}] )
	    -| ['compiler_generated'] )
	end
'getInitialFont'/1 =
    %% Line 97
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 98
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 100
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 99
		      call 'wxe_util':'call'
			  (2338, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getInitialFont',1}}] )
	    -| ['compiler_generated'] )
	end
'getShowHelp'/1 =
    %% Line 105
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 106
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 108
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 107
		      call 'wxe_util':'call'
			  (2339, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getShowHelp',1}}] )
	    -| ['compiler_generated'] )
	end
'setAllowSymbols'/2 =
    %% Line 113
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Flag>
	      when %% Line 114
		call 'erlang':'is_boolean'
		    (Flag) ->
	      do  %% Line 115
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 117
		      call 'wxe_util':'from_bool'
			  (Flag)
		  in  let <_cor5> =
			  %% Line 117
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 116
			  call 'wxe_util':'cast'
			      (2340, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setAllowSymbols',2}}] )
	    -| ['compiler_generated'] )
	end
'setChosenFont'/2 =
    %% Line 122
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',FontRef,FontT,_cor10}> when 'true' ->
	      do  %% Line 123
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 124
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (FontT,
				       'wxFont') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call FontT:'parent_class'
				    ('wxFont')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 126
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<FontRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 125
			  call 'wxe_util':'cast'
			      (2341, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setChosenFont',2}}] )
	    -| ['compiler_generated'] )
	end
'setColour'/2 =
    %% Line 131
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Colour>
	      when let <_cor3> =
		    %% Line 132
		    try
			let <_cor2> =
			    call 'erlang':'tuple_size'
				(Colour)
			in  call 'erlang':'=:='
				(_cor2, 3)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor5> =
			%% Line 132
			try
			    let <_cor4> =
				call 'erlang':'tuple_size'
				    (Colour)
			    in  call 'erlang':'=:='
				    (_cor4, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 132
			call 'erlang':'or'
			    (_cor3, _cor5) ->
	      do  %% Line 133
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor8> =
		      %% Line 135
		      call 'wxe_util':'colour_bin'
			  (Colour)
		  in  let <_cor9> =
			  %% Line 135
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor8>(16,8,'binary',['unsigned'|['big']])}#
		      in  %% Line 134
			  call 'wxe_util':'cast'
			      (2342, _cor9)
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'setColour',2}}] )
	    -| ['compiler_generated'] )
	end
'setInitialFont'/2 =
    %% Line 140
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',FontRef,FontT,_cor10}> when 'true' ->
	      do  %% Line 141
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 142
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (FontT,
				       'wxFont') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call FontT:'parent_class'
				    ('wxFont')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 144
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<FontRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 143
			  call 'wxe_util':'cast'
			      (2343, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setInitialFont',2}}] )
	    -| ['compiler_generated'] )
	end
'setRange'/3 =
    %% Line 149
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},MinRange,MaxRange>
	      when let <_cor3> =
		    %% Line 150
		    call 'erlang':'is_integer'
			(MinRange)
		in  let <_cor4> =
			%% Line 150
			call 'erlang':'is_integer'
			    (MaxRange)
		    in  %% Line 150
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 151
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 153
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<MinRange>(32,1,'integer',['unsigned'|['native']]),
			#<MaxRange>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 152
		      call 'wxe_util':'cast'
			  (2344, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setRange',3}}] )
	    -| ['compiler_generated'] )
	end
'setShowHelp'/2 =
    %% Line 158
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Flag>
	      when %% Line 159
		call 'erlang':'is_boolean'
		    (Flag) ->
	      do  %% Line 160
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 162
		      call 'wxe_util':'from_bool'
			  (Flag)
		  in  let <_cor5> =
			  %% Line 162
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 161
			  call 'wxe_util':'cast'
			      (2345, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setShowHelp',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 166
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 167
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxFontData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxFontData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 168
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 169
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxFontData')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxFontData', _cor0)
end