module 'wxSetCursorEvent' ['getCursor'/1,
			   'getId'/1,
			   'getSkipped'/1,
			   'getTimestamp'/1,
			   'getX'/1,
			   'getY'/1,
			   'hasCursor'/1,
			   'isCommandEvent'/1,
			   'module_info'/0,
			   'module_info'/1,
			   'parent_class'/1,
			   'resumePropagation'/2,
			   'setCursor'/2,
			   'shouldPropagate'/1,
			   'skip'/1,
			   'skip'/2,
			   'stopPropagation'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 40
		'export_type' =
		    %% Line 40
		    [{'wxSetCursorEvent',0}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'wxSetCursorEvent',{'remote_type',45,[{'atom',45,'wx'}|[{'atom',45,'wx_object'}|[[]]]]},[]}],
		%% Line 47
		'spec' =
		    %% Line 47
		    [{{'getCursor',1},[{'type',47,'bounded_fun',[{'type',47,'fun',[{'type',47,'product',[{'var',47,'This'}]}|[{'remote_type',47,[{'atom',47,'wxCursor'}|[{'atom',47,'wxCursor'}|[[]]]]}]]}|[[{'type',48,'constraint',[{'atom',48,'is_subtype'}|[[{'var',48,'This'}|[{'type',48,'wxSetCursorEvent',[]}]]]]}]]]}]}],
		%% Line 55
		'spec' =
		    %% Line 55
		    [{{'getX',1},[{'type',55,'bounded_fun',[{'type',55,'fun',[{'type',55,'product',[{'var',55,'This'}]}|[{'type',55,'integer',[]}]]}|[[{'type',56,'constraint',[{'atom',56,'is_subtype'}|[[{'var',56,'This'}|[{'type',56,'wxSetCursorEvent',[]}]]]]}]]]}]}],
		%% Line 63
		'spec' =
		    %% Line 63
		    [{{'getY',1},[{'type',63,'bounded_fun',[{'type',63,'fun',[{'type',63,'product',[{'var',63,'This'}]}|[{'type',63,'integer',[]}]]}|[[{'type',64,'constraint',[{'atom',64,'is_subtype'}|[[{'var',64,'This'}|[{'type',64,'wxSetCursorEvent',[]}]]]]}]]]}]}],
		%% Line 71
		'spec' =
		    %% Line 71
		    [{{'hasCursor',1},[{'type',71,'bounded_fun',[{'type',71,'fun',[{'type',71,'product',[{'var',71,'This'}]}|[{'type',71,'boolean',[]}]]}|[[{'type',72,'constraint',[{'atom',72,'is_subtype'}|[[{'var',72,'This'}|[{'type',72,'wxSetCursorEvent',[]}]]]]}]]]}]}],
		%% Line 79
		'spec' =
		    %% Line 79
		    [{{'setCursor',2},[{'type',79,'bounded_fun',[{'type',79,'fun',[{'type',79,'product',[{'var',79,'This'}|[{'var',79,'Cursor'}]]}|[{'atom',79,'ok'}]]}|[[{'type',80,'constraint',[{'atom',80,'is_subtype'}|[[{'var',80,'This'}|[{'type',80,'wxSetCursorEvent',[]}]]]]}|[{'type',80,'constraint',[{'atom',80,'is_subtype'}|[[{'var',80,'Cursor'}|[{'remote_type',80,[{'atom',80,'wxCursor'}|[{'atom',80,'wxCursor'}|[[]]]]}]]]]}]]]]}]}]]
'parent_class'/1 =
    %% Line 42
    fun (_cor0) ->
	case _cor0 of
	  <'wxEvent'> when 'true' ->
	      'true'
	  %% Line 43
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxSetCursorEvent'})
	end
'getCursor'/1 =
    %% Line 49
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 50
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSetCursorEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSetCursorEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 52
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 51
		      call 'wxe_util':'call'
			  (2760, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCursor',1}}] )
	    -| ['compiler_generated'] )
	end
'getX'/1 =
    %% Line 57
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 58
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSetCursorEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSetCursorEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 60
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 59
		      call 'wxe_util':'call'
			  (2761, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getX',1}}] )
	    -| ['compiler_generated'] )
	end
'getY'/1 =
    %% Line 65
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 66
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSetCursorEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSetCursorEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 68
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 67
		      call 'wxe_util':'call'
			  (2762, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getY',1}}] )
	    -| ['compiler_generated'] )
	end
'hasCursor'/1 =
    %% Line 73
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 74
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSetCursorEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSetCursorEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 76
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 75
		      call 'wxe_util':'call'
			  (2763, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'hasCursor',1}}] )
	    -| ['compiler_generated'] )
	end
'setCursor'/2 =
    %% Line 81
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',CursorRef,CursorT,_cor10}> when 'true' ->
	      do  %% Line 82
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSetCursorEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSetCursorEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 83
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (CursorT,
				       'wxCursor') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call CursorT:'parent_class'
				    ('wxCursor')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 85
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<CursorRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 84
			  call 'wxe_util':'cast'
			      (2764, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setCursor',2}}] )
	    -| ['compiler_generated'] )
	end
'stopPropagation'/1 =
    %% Line 89
    fun (_cor0) ->
	call 'wxEvent':'stopPropagation'
	    (_cor0)
'skip'/2 =
    %% Line 91
    fun (_cor1,_cor0) ->
	call 'wxEvent':'skip'
	    (_cor1, _cor0)
'skip'/1 =
    %% Line 93
    fun (_cor0) ->
	call 'wxEvent':'skip'
	    (_cor0)
'shouldPropagate'/1 =
    %% Line 95
    fun (_cor0) ->
	call 'wxEvent':'shouldPropagate'
	    (_cor0)
'resumePropagation'/2 =
    %% Line 97
    fun (_cor1,_cor0) ->
	call 'wxEvent':'resumePropagation'
	    (_cor1, _cor0)
'isCommandEvent'/1 =
    %% Line 99
    fun (_cor0) ->
	call 'wxEvent':'isCommandEvent'
	    (_cor0)
'getTimestamp'/1 =
    %% Line 101
    fun (_cor0) ->
	call 'wxEvent':'getTimestamp'
	    (_cor0)
'getSkipped'/1 =
    %% Line 103
    fun (_cor0) ->
	call 'wxEvent':'getSkipped'
	    (_cor0)
'getId'/1 =
    %% Line 105
    fun (_cor0) ->
	call 'wxEvent':'getId'
	    (_cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxSetCursorEvent')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxSetCursorEvent', _cor0)
end