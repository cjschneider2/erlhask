module 'wxScrollEvent' ['getClientData'/1,
			'getExtraLong'/1,
			'getId'/1,
			'getInt'/1,
			'getOrientation'/1,
			'getPosition'/1,
			'getSelection'/1,
			'getSkipped'/1,
			'getString'/1,
			'getTimestamp'/1,
			'isChecked'/1,
			'isCommandEvent'/1,
			'isSelection'/1,
			'module_info'/0,
			'module_info'/1,
			'parent_class'/1,
			'resumePropagation'/2,
			'setInt'/2,
			'setString'/2,
			'shouldPropagate'/1,
			'skip'/1,
			'skip'/2,
			'stopPropagation'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 43
		'export_type' =
		    %% Line 43
		    [{'wxScrollEvent',0}],
		%% Line 49
		'type' =
		    %% Line 49
		    [{'wxScrollEvent',{'remote_type',49,[{'atom',49,'wx'}|[{'atom',49,'wx_object'}|[[]]]]},[]}],
		%% Line 51
		'spec' =
		    %% Line 51
		    [{{'getOrientation',1},[{'type',51,'bounded_fun',[{'type',51,'fun',[{'type',51,'product',[{'var',51,'This'}]}|[{'type',51,'integer',[]}]]}|[[{'type',52,'constraint',[{'atom',52,'is_subtype'}|[[{'var',52,'This'}|[{'type',52,'wxScrollEvent',[]}]]]]}]]]}]}],
		%% Line 59
		'spec' =
		    %% Line 59
		    [{{'getPosition',1},[{'type',59,'bounded_fun',[{'type',59,'fun',[{'type',59,'product',[{'var',59,'This'}]}|[{'type',59,'integer',[]}]]}|[[{'type',60,'constraint',[{'atom',60,'is_subtype'}|[[{'var',60,'This'}|[{'type',60,'wxScrollEvent',[]}]]]]}]]]}]}]]
'parent_class'/1 =
    %% Line 45
    fun (_cor0) ->
	case _cor0 of
	  <'wxCommandEvent'> when 'true' ->
	      'true'
	  %% Line 46
	  <'wxEvent'> when 'true' ->
	      'true'
	  %% Line 47
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxScrollEvent'})
	end
'getOrientation'/1 =
    %% Line 53
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 54
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrollEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrollEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 56
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 55
		      call 'wxe_util':'call'
			  (2719, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getOrientation',1}}] )
	    -| ['compiler_generated'] )
	end
'getPosition'/1 =
    %% Line 61
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 62
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrollEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrollEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 64
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 63
		      call 'wxe_util':'call'
			  (2720, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPosition',1}}] )
	    -| ['compiler_generated'] )
	end
'setString'/2 =
    %% Line 68
    fun (_cor1,_cor0) ->
	call 'wxCommandEvent':'setString'
	    (_cor1, _cor0)
'setInt'/2 =
    %% Line 70
    fun (_cor1,_cor0) ->
	call 'wxCommandEvent':'setInt'
	    (_cor1, _cor0)
'isSelection'/1 =
    %% Line 72
    fun (_cor0) ->
	call 'wxCommandEvent':'isSelection'
	    (_cor0)
'isChecked'/1 =
    %% Line 74
    fun (_cor0) ->
	call 'wxCommandEvent':'isChecked'
	    (_cor0)
'getString'/1 =
    %% Line 76
    fun (_cor0) ->
	call 'wxCommandEvent':'getString'
	    (_cor0)
'getSelection'/1 =
    %% Line 78
    fun (_cor0) ->
	call 'wxCommandEvent':'getSelection'
	    (_cor0)
'getInt'/1 =
    %% Line 80
    fun (_cor0) ->
	call 'wxCommandEvent':'getInt'
	    (_cor0)
'getExtraLong'/1 =
    %% Line 82
    fun (_cor0) ->
	call 'wxCommandEvent':'getExtraLong'
	    (_cor0)
'getClientData'/1 =
    %% Line 84
    fun (_cor0) ->
	call 'wxCommandEvent':'getClientData'
	    (_cor0)
'stopPropagation'/1 =
    %% Line 87
    fun (_cor0) ->
	call 'wxEvent':'stopPropagation'
	    (_cor0)
'skip'/2 =
    %% Line 89
    fun (_cor1,_cor0) ->
	call 'wxEvent':'skip'
	    (_cor1, _cor0)
'skip'/1 =
    %% Line 91
    fun (_cor0) ->
	call 'wxEvent':'skip'
	    (_cor0)
'shouldPropagate'/1 =
    %% Line 93
    fun (_cor0) ->
	call 'wxEvent':'shouldPropagate'
	    (_cor0)
'resumePropagation'/2 =
    %% Line 95
    fun (_cor1,_cor0) ->
	call 'wxEvent':'resumePropagation'
	    (_cor1, _cor0)
'isCommandEvent'/1 =
    %% Line 97
    fun (_cor0) ->
	call 'wxEvent':'isCommandEvent'
	    (_cor0)
'getTimestamp'/1 =
    %% Line 99
    fun (_cor0) ->
	call 'wxEvent':'getTimestamp'
	    (_cor0)
'getSkipped'/1 =
    %% Line 101
    fun (_cor0) ->
	call 'wxEvent':'getSkipped'
	    (_cor0)
'getId'/1 =
    %% Line 103
    fun (_cor0) ->
	call 'wxEvent':'getId'
	    (_cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxScrollEvent')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxScrollEvent', _cor0)
end