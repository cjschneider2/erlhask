module 'wxGenericDirCtrl' ['cacheBestSize'/2,
			   'captureMouse'/1,
			   'center'/1,
			   'center'/2,
			   'centerOnParent'/1,
			   'centerOnParent'/2,
			   'centre'/1,
			   'centre'/2,
			   'centreOnParent'/1,
			   'centreOnParent'/2,
			   'clearBackground'/1,
			   'clientToScreen'/2,
			   'clientToScreen'/3,
			   'close'/1,
			   'close'/2,
			   'collapseTree'/1,
			   'connect'/2,
			   'connect'/3,
			   'convertDialogToPixels'/2,
			   'convertPixelsToDialog'/2,
			   'create'/2,
			   'create'/3,
			   'destroy'/1,
			   'destroyChildren'/1,
			   'disable'/1,
			   'disconnect'/1,
			   'disconnect'/2,
			   'disconnect'/3,
			   'enable'/1,
			   'enable'/2,
			   'expandPath'/2,
			   'findWindow'/2,
			   'fit'/1,
			   'fitInside'/1,
			   'freeze'/1,
			   'getAcceleratorTable'/1,
			   'getBackgroundColour'/1,
			   'getBackgroundStyle'/1,
			   'getBestSize'/1,
			   'getCaret'/1,
			   'getCharHeight'/1,
			   'getCharWidth'/1,
			   'getChildren'/1,
			   'getClientSize'/1,
			   'getContainingSizer'/1,
			   'getCursor'/1,
			   'getDefaultPath'/1,
			   'getDropTarget'/1,
			   'getEventHandler'/1,
			   'getExtraStyle'/1,
			   'getFilePath'/1,
			   'getFilter'/1,
			   'getFilterIndex'/1,
			   'getFont'/1,
			   'getForegroundColour'/1,
			   'getGrandParent'/1,
			   'getHandle'/1,
			   'getHelpText'/1,
			   'getId'/1,
			   'getLabel'/1,
			   'getMaxSize'/1,
			   'getMinSize'/1,
			   'getName'/1,
			   'getParent'/1,
			   'getPath'/1,
			   'getPosition'/1,
			   'getRect'/1,
			   'getRootId'/1,
			   'getScreenPosition'/1,
			   'getScreenRect'/1,
			   'getScrollPos'/2,
			   'getScrollRange'/2,
			   'getScrollThumb'/2,
			   'getSize'/1,
			   'getSizer'/1,
			   'getTextExtent'/2,
			   'getTextExtent'/3,
			   'getToolTip'/1,
			   'getTreeCtrl'/1,
			   'getUpdateRegion'/1,
			   'getVirtualSize'/1,
			   'getWindowStyleFlag'/1,
			   'getWindowVariant'/1,
			   'hasCapture'/1,
			   'hasScrollbar'/2,
			   'hasTransparentBackground'/1,
			   'hide'/1,
			   'inheritAttributes'/1,
			   'init'/1,
			   'initDialog'/1,
			   'invalidateBestSize'/1,
			   'isEnabled'/1,
			   'isExposed'/2,
			   'isExposed'/3,
			   'isExposed'/5,
			   'isRetained'/1,
			   'isShown'/1,
			   'isTopLevel'/1,
			   'layout'/1,
			   'lineDown'/1,
			   'lineUp'/1,
			   'lower'/1,
			   'makeModal'/1,
			   'makeModal'/2,
			   'module_info'/0,
			   'module_info'/1,
			   'move'/2,
			   'move'/3,
			   'move'/4,
			   'moveAfterInTabOrder'/2,
			   'moveBeforeInTabOrder'/2,
			   'navigate'/1,
			   'navigate'/2,
			   'new'/0,
			   'new'/1,
			   'new'/2,
			   'pageDown'/1,
			   'pageUp'/1,
			   'parent_class'/1,
			   'popEventHandler'/1,
			   'popEventHandler'/2,
			   'popupMenu'/2,
			   'popupMenu'/3,
			   'popupMenu'/4,
			   'raise'/1,
			   'reCreateTree'/1,
			   'refresh'/1,
			   'refresh'/2,
			   'refreshRect'/2,
			   'refreshRect'/3,
			   'releaseMouse'/1,
			   'removeChild'/2,
			   'reparent'/2,
			   'screenToClient'/1,
			   'screenToClient'/2,
			   'scrollLines'/2,
			   'scrollPages'/2,
			   'scrollWindow'/3,
			   'scrollWindow'/4,
			   'setAcceleratorTable'/2,
			   'setAutoLayout'/2,
			   'setBackgroundColour'/2,
			   'setBackgroundStyle'/2,
			   'setCaret'/2,
			   'setClientSize'/2,
			   'setClientSize'/3,
			   'setContainingSizer'/2,
			   'setCursor'/2,
			   'setDefaultPath'/2,
			   'setDropTarget'/2,
			   'setExtraStyle'/2,
			   'setFilter'/2,
			   'setFilterIndex'/2,
			   'setFocus'/1,
			   'setFocusFromKbd'/1,
			   'setFont'/2,
			   'setForegroundColour'/2,
			   'setHelpText'/2,
			   'setId'/2,
			   'setLabel'/2,
			   'setMaxSize'/2,
			   'setMinSize'/2,
			   'setName'/2,
			   'setOwnBackgroundColour'/2,
			   'setOwnFont'/2,
			   'setOwnForegroundColour'/2,
			   'setPalette'/2,
			   'setPath'/2,
			   'setScrollPos'/3,
			   'setScrollPos'/4,
			   'setScrollbar'/5,
			   'setScrollbar'/6,
			   'setSize'/2,
			   'setSize'/3,
			   'setSize'/5,
			   'setSize'/6,
			   'setSizeHints'/2,
			   'setSizeHints'/3,
			   'setSizeHints'/4,
			   'setSizer'/2,
			   'setSizer'/3,
			   'setSizerAndFit'/2,
			   'setSizerAndFit'/3,
			   'setThemeEnabled'/2,
			   'setToolTip'/2,
			   'setVirtualSize'/2,
			   'setVirtualSize'/3,
			   'setVirtualSizeHints'/2,
			   'setVirtualSizeHints'/3,
			   'setVirtualSizeHints'/4,
			   'setWindowStyle'/2,
			   'setWindowStyleFlag'/2,
			   'setWindowVariant'/2,
			   'shouldInheritColours'/1,
			   'show'/1,
			   'show'/2,
			   'thaw'/1,
			   'transferDataFromWindow'/1,
			   'transferDataToWindow'/1,
			   'update'/1,
			   'updateWindowUI'/1,
			   'updateWindowUI'/2,
			   'validate'/1,
			   'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 75
		'export_type' =
		    %% Line 75
		    [{'wxGenericDirCtrl',0}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{'wxGenericDirCtrl',{'remote_type',82,[{'atom',82,'wx'}|[{'atom',82,'wx_object'}|[[]]]]},[]}],
		%% Line 84
		'spec' =
		    %% Line 84
		    [{{'new',0},[{'type',84,'fun',[{'type',84,'product',[]}|[{'type',84,'wxGenericDirCtrl',[]}]]}]}],
		%% Line 90
		'spec' =
		    %% Line 90
		    [{{'new',1},[{'type',90,'bounded_fun',[{'type',90,'fun',[{'type',90,'product',[{'var',90,'Parent'}]}|[{'type',90,'wxGenericDirCtrl',[]}]]}|[[{'type',91,'constraint',[{'atom',91,'is_subtype'}|[[{'var',91,'Parent'}|[{'remote_type',91,[{'atom',91,'wxWindow'}|[{'atom',91,'wxWindow'}|[[]]]]}]]]]}]]]}]}],
		%% Line 98
		'spec' =
		    %% Line 98
		    [{{'new',2},[{'type',98,'bounded_fun',[{'type',98,'fun',[{'type',98,'product',[{'var',98,'Parent'}|[{'type',98,'list',[{'var',98,'Option'}]}]]}|[{'type',98,'wxGenericDirCtrl',[]}]]}|[[{'type',99,'constraint',[{'atom',99,'is_subtype'}|[[{'var',99,'Parent'}|[{'remote_type',99,[{'atom',99,'wxWindow'}|[{'atom',99,'wxWindow'}|[[]]]]}]]]]}|[{'type',100,'constraint',[{'atom',100,'is_subtype'}|[[{'var',100,'Option'}|[{'type',100,'union',[{'type',100,'tuple',[{'atom',100,'id'}|[{'type',100,'integer',[]}]]}|[{'type',101,'tuple',[{'atom',101,'dir'}|[{'remote_type',101,[{'atom',101,'unicode'}|[{'atom',101,'chardata'}|[[]]]]}]]}|[{'type',102,'tuple',[{'atom',102,'pos'}|[{'type',102,'tuple',[{'ann_type',102,[{'var',102,'X'}|[{'type',102,'integer',[]}]]}|[{'ann_type',102,[{'var',102,'Y'}|[{'type',102,'integer',[]}]]}]]}]]}|[{'type',103,'tuple',[{'atom',103,'size'}|[{'type',103,'tuple',[{'ann_type',103,[{'var',103,'W'}|[{'type',103,'integer',[]}]]}|[{'ann_type',103,[{'var',103,'H'}|[{'type',103,'integer',[]}]]}]]}]]}|[{'type',104,'tuple',[{'atom',104,'style'}|[{'type',104,'integer',[]}]]}|[{'type',105,'tuple',[{'atom',105,'filter'}|[{'remote_type',105,[{'atom',105,'unicode'}|[{'atom',105,'chardata'}|[[]]]]}]]}|[{'type',106,'tuple',[{'atom',106,'defaultFilter'}|[{'type',106,'integer',[]}]]}]]]]]]]}]]]]}]]]]}]}],
		%% Line 123
		'spec' =
		    %% Line 123
		    [{{'create',2},[{'type',123,'bounded_fun',[{'type',123,'fun',[{'type',123,'product',[{'var',123,'This'}|[{'var',123,'Parent'}]]}|[{'type',123,'boolean',[]}]]}|[[{'type',124,'constraint',[{'atom',124,'is_subtype'}|[[{'var',124,'This'}|[{'type',124,'wxGenericDirCtrl',[]}]]]]}|[{'type',124,'constraint',[{'atom',124,'is_subtype'}|[[{'var',124,'Parent'}|[{'remote_type',124,[{'atom',124,'wxWindow'}|[{'atom',124,'wxWindow'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 131
		'spec' =
		    %% Line 131
		    [{{'create',3},[{'type',131,'bounded_fun',[{'type',131,'fun',[{'type',131,'product',[{'var',131,'This'}|[{'var',131,'Parent'}|[{'type',131,'list',[{'var',131,'Option'}]}]]]}|[{'type',131,'boolean',[]}]]}|[[{'type',132,'constraint',[{'atom',132,'is_subtype'}|[[{'var',132,'This'}|[{'type',132,'wxGenericDirCtrl',[]}]]]]}|[{'type',132,'constraint',[{'atom',132,'is_subtype'}|[[{'var',132,'Parent'}|[{'remote_type',132,[{'atom',132,'wxWindow'}|[{'atom',132,'wxWindow'}|[[]]]]}]]]]}|[{'type',133,'constraint',[{'atom',133,'is_subtype'}|[[{'var',133,'Option'}|[{'type',133,'union',[{'type',133,'tuple',[{'atom',133,'id'}|[{'type',133,'integer',[]}]]}|[{'type',134,'tuple',[{'atom',134,'dir'}|[{'remote_type',134,[{'atom',134,'unicode'}|[{'atom',134,'chardata'}|[[]]]]}]]}|[{'type',135,'tuple',[{'atom',135,'pos'}|[{'type',135,'tuple',[{'ann_type',135,[{'var',135,'X'}|[{'type',135,'integer',[]}]]}|[{'ann_type',135,[{'var',135,'Y'}|[{'type',135,'integer',[]}]]}]]}]]}|[{'type',136,'tuple',[{'atom',136,'size'}|[{'type',136,'tuple',[{'ann_type',136,[{'var',136,'W'}|[{'type',136,'integer',[]}]]}|[{'ann_type',136,[{'var',136,'H'}|[{'type',136,'integer',[]}]]}]]}]]}|[{'type',137,'tuple',[{'atom',137,'style'}|[{'type',137,'integer',[]}]]}|[{'type',138,'tuple',[{'atom',138,'filter'}|[{'remote_type',138,[{'atom',138,'unicode'}|[{'atom',138,'chardata'}|[[]]]]}]]}|[{'type',139,'tuple',[{'atom',139,'defaultFilter'}|[{'type',139,'integer',[]}]]}]]]]]]]}]]]]}]]]]]}]}],
		%% Line 157
		'spec' =
		    %% Line 157
		    [{{'init',1},[{'type',157,'bounded_fun',[{'type',157,'fun',[{'type',157,'product',[{'var',157,'This'}]}|[{'atom',157,'ok'}]]}|[[{'type',158,'constraint',[{'atom',158,'is_subtype'}|[[{'var',158,'This'}|[{'type',158,'wxGenericDirCtrl',[]}]]]]}]]]}]}],
		%% Line 165
		'spec' =
		    %% Line 165
		    [{{'collapseTree',1},[{'type',165,'bounded_fun',[{'type',165,'fun',[{'type',165,'product',[{'var',165,'This'}]}|[{'atom',165,'ok'}]]}|[[{'type',166,'constraint',[{'atom',166,'is_subtype'}|[[{'var',166,'This'}|[{'type',166,'wxGenericDirCtrl',[]}]]]]}]]]}]}],
		%% Line 173
		'spec' =
		    %% Line 173
		    [{{'expandPath',2},[{'type',173,'bounded_fun',[{'type',173,'fun',[{'type',173,'product',[{'var',173,'This'}|[{'var',173,'Path'}]]}|[{'type',173,'boolean',[]}]]}|[[{'type',174,'constraint',[{'atom',174,'is_subtype'}|[[{'var',174,'This'}|[{'type',174,'wxGenericDirCtrl',[]}]]]]}|[{'type',174,'constraint',[{'atom',174,'is_subtype'}|[[{'var',174,'Path'}|[{'remote_type',174,[{'atom',174,'unicode'}|[{'atom',174,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 183
		'spec' =
		    %% Line 183
		    [{{'getDefaultPath',1},[{'type',183,'bounded_fun',[{'type',183,'fun',[{'type',183,'product',[{'var',183,'This'}]}|[{'remote_type',183,[{'atom',183,'unicode'}|[{'atom',183,'charlist'}|[[]]]]}]]}|[[{'type',184,'constraint',[{'atom',184,'is_subtype'}|[[{'var',184,'This'}|[{'type',184,'wxGenericDirCtrl',[]}]]]]}]]]}]}],
		%% Line 191
		'spec' =
		    %% Line 191
		    [{{'getPath',1},[{'type',191,'bounded_fun',[{'type',191,'fun',[{'type',191,'product',[{'var',191,'This'}]}|[{'remote_type',191,[{'atom',191,'unicode'}|[{'atom',191,'charlist'}|[[]]]]}]]}|[[{'type',192,'constraint',[{'atom',192,'is_subtype'}|[[{'var',192,'This'}|[{'type',192,'wxGenericDirCtrl',[]}]]]]}]]]}]}],
		%% Line 199
		'spec' =
		    %% Line 199
		    [{{'getFilePath',1},[{'type',199,'bounded_fun',[{'type',199,'fun',[{'type',199,'product',[{'var',199,'This'}]}|[{'remote_type',199,[{'atom',199,'unicode'}|[{'atom',199,'charlist'}|[[]]]]}]]}|[[{'type',200,'constraint',[{'atom',200,'is_subtype'}|[[{'var',200,'This'}|[{'type',200,'wxGenericDirCtrl',[]}]]]]}]]]}]}],
		%% Line 207
		'spec' =
		    %% Line 207
		    [{{'getFilter',1},[{'type',207,'bounded_fun',[{'type',207,'fun',[{'type',207,'product',[{'var',207,'This'}]}|[{'remote_type',207,[{'atom',207,'unicode'}|[{'atom',207,'charlist'}|[[]]]]}]]}|[[{'type',208,'constraint',[{'atom',208,'is_subtype'}|[[{'var',208,'This'}|[{'type',208,'wxGenericDirCtrl',[]}]]]]}]]]}]}],
		%% Line 215
		'spec' =
		    %% Line 215
		    [{{'getFilterIndex',1},[{'type',215,'bounded_fun',[{'type',215,'fun',[{'type',215,'product',[{'var',215,'This'}]}|[{'type',215,'integer',[]}]]}|[[{'type',216,'constraint',[{'atom',216,'is_subtype'}|[[{'var',216,'This'}|[{'type',216,'wxGenericDirCtrl',[]}]]]]}]]]}]}],
		%% Line 223
		'spec' =
		    %% Line 223
		    [{{'getRootId',1},[{'type',223,'bounded_fun',[{'type',223,'fun',[{'type',223,'product',[{'var',223,'This'}]}|[{'type',223,'integer',[]}]]}|[[{'type',224,'constraint',[{'atom',224,'is_subtype'}|[[{'var',224,'This'}|[{'type',224,'wxGenericDirCtrl',[]}]]]]}]]]}]}],
		%% Line 231
		'spec' =
		    %% Line 231
		    [{{'getTreeCtrl',1},[{'type',231,'bounded_fun',[{'type',231,'fun',[{'type',231,'product',[{'var',231,'This'}]}|[{'remote_type',231,[{'atom',231,'wxTreeCtrl'}|[{'atom',231,'wxTreeCtrl'}|[[]]]]}]]}|[[{'type',232,'constraint',[{'atom',232,'is_subtype'}|[[{'var',232,'This'}|[{'type',232,'wxGenericDirCtrl',[]}]]]]}]]]}]}],
		%% Line 239
		'spec' =
		    %% Line 239
		    [{{'reCreateTree',1},[{'type',239,'bounded_fun',[{'type',239,'fun',[{'type',239,'product',[{'var',239,'This'}]}|[{'atom',239,'ok'}]]}|[[{'type',240,'constraint',[{'atom',240,'is_subtype'}|[[{'var',240,'This'}|[{'type',240,'wxGenericDirCtrl',[]}]]]]}]]]}]}],
		%% Line 247
		'spec' =
		    %% Line 247
		    [{{'setDefaultPath',2},[{'type',247,'bounded_fun',[{'type',247,'fun',[{'type',247,'product',[{'var',247,'This'}|[{'var',247,'Path'}]]}|[{'atom',247,'ok'}]]}|[[{'type',248,'constraint',[{'atom',248,'is_subtype'}|[[{'var',248,'This'}|[{'type',248,'wxGenericDirCtrl',[]}]]]]}|[{'type',248,'constraint',[{'atom',248,'is_subtype'}|[[{'var',248,'Path'}|[{'remote_type',248,[{'atom',248,'unicode'}|[{'atom',248,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 257
		'spec' =
		    %% Line 257
		    [{{'setFilter',2},[{'type',257,'bounded_fun',[{'type',257,'fun',[{'type',257,'product',[{'var',257,'This'}|[{'var',257,'Filter'}]]}|[{'atom',257,'ok'}]]}|[[{'type',258,'constraint',[{'atom',258,'is_subtype'}|[[{'var',258,'This'}|[{'type',258,'wxGenericDirCtrl',[]}]]]]}|[{'type',258,'constraint',[{'atom',258,'is_subtype'}|[[{'var',258,'Filter'}|[{'remote_type',258,[{'atom',258,'unicode'}|[{'atom',258,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 267
		'spec' =
		    %% Line 267
		    [{{'setFilterIndex',2},[{'type',267,'bounded_fun',[{'type',267,'fun',[{'type',267,'product',[{'var',267,'This'}|[{'var',267,'N'}]]}|[{'atom',267,'ok'}]]}|[[{'type',268,'constraint',[{'atom',268,'is_subtype'}|[[{'var',268,'This'}|[{'type',268,'wxGenericDirCtrl',[]}]]]]}|[{'type',268,'constraint',[{'atom',268,'is_subtype'}|[[{'var',268,'N'}|[{'type',268,'integer',[]}]]]]}]]]]}]}],
		%% Line 276
		'spec' =
		    %% Line 276
		    [{{'setPath',2},[{'type',276,'bounded_fun',[{'type',276,'fun',[{'type',276,'product',[{'var',276,'This'}|[{'var',276,'Path'}]]}|[{'atom',276,'ok'}]]}|[[{'type',277,'constraint',[{'atom',277,'is_subtype'}|[[{'var',277,'This'}|[{'type',277,'wxGenericDirCtrl',[]}]]]]}|[{'type',277,'constraint',[{'atom',277,'is_subtype'}|[[{'var',277,'Path'}|[{'remote_type',277,[{'atom',277,'unicode'}|[{'atom',277,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 286
		'spec' =
		    %% Line 286
		    [{{'destroy',1},[{'type',286,'fun',[{'type',286,'product',[{'ann_type',286,[{'var',286,'This'}|[{'type',286,'wxGenericDirCtrl',[]}]]}]}|[{'atom',286,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 77
    fun (_cor0) ->
	case _cor0 of
	  <'wxControl'> when 'true' ->
	      'true'
	  %% Line 78
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 79
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 80
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxGenericDirCtrl'})
	end
'new'/0 =
    %% Line 85
    fun () ->
	%% Line 86
	call 'wxe_util':'construct'
	    (1610, %% Line 87
		   #{}#)
'new'/1 =
    %% Line 93
    fun (_cor0) ->
	case _cor0 of
	  <Parent = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 94
						       ( 'true'
							 -| ['compiler_generated'] ) ->
	      %% Line 95
	      apply 'new'/2
		  (Parent, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'new'/2 =
    %% Line 107
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor35},Options>
	      when %% Line 108
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 109
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 110
		      ( fun (_cor26,_cor25) ->
			    case <_cor26,_cor25> of
			      <{'id',Id},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<Id>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 111
			      <{'dir',Dir},Acc> when 'true' ->
				  let <Dir_UC> =
				      call 'unicode':'characters_to_binary'
					  ([Dir|[0]])
				  in  let <_cor11> =
					  call 'erlang':'byte_size'
					      (Dir_UC)
				      in  let <_cor6> =
					      call 'erlang':'byte_size'
						  (Dir_UC)
					  in  let <_cor7> =
						  call 'erlang':'+'
						      (0, _cor6)
					      in  let <_cor8> =
						      call 'erlang':'band'
							  (_cor7, 7)
						  in  let <_cor9> =
							  call 'erlang':'-'
							      (8, _cor8)
						      in  let <_cor10> =
							      call 'erlang':'band'
								  (_cor9, 7)
							  in  let <_cor12> =
								  #{#<2>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor11>(32,1,'integer',['unsigned'|['native']]),
								    #<Dir_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor10,8,'integer',['unsigned'|['big']])}#
							      in  [_cor12|Acc]
			      %% Line 112
			      <{'pos',{PosX,PosY}},Acc> when 'true' ->
				  let <_cor13> =
				      #{#<3>(32,1,'integer',['unsigned'|['native']]),
					#<PosX>(32,1,'integer',['unsigned'|['native']]),
					#<PosY>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor13|Acc]
			      %% Line 113
			      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				  let <_cor14> =
				      #{#<4>(32,1,'integer',['unsigned'|['native']]),
					#<SizeW>(32,1,'integer',['unsigned'|['native']]),
					#<SizeH>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor14|Acc]
			      %% Line 114
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor15> =
				      #{#<5>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor15|Acc]
			      %% Line 115
			      <{'filter',Filter},Acc> when 'true' ->
				  let <Filter_UC> =
				      call 'unicode':'characters_to_binary'
					  ([Filter|[0]])
				  in  let <_cor22> =
					  call 'erlang':'byte_size'
					      (Filter_UC)
				      in  let <_cor17> =
					      call 'erlang':'byte_size'
						  (Filter_UC)
					  in  let <_cor18> =
						  call 'erlang':'+'
						      (0, _cor17)
					      in  let <_cor19> =
						      call 'erlang':'band'
							  (_cor18, 7)
						  in  let <_cor20> =
							  call 'erlang':'-'
							      (8, _cor19)
						      in  let <_cor21> =
							      call 'erlang':'band'
								  (_cor20, 7)
							  in  let <_cor23> =
								  #{#<6>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor22>(32,1,'integer',['unsigned'|['native']]),
								    #<Filter_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor21,8,'integer',['unsigned'|['big']])}#
							      in  [_cor23|Acc]
			      %% Line 116
			      <{'defaultFilter',DefaultFilter},Acc> when 'true' ->
				  let <_cor24> =
				      #{#<7>(32,1,'integer',['unsigned'|['native']]),
					#<DefaultFilter>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor24|Acc]
			      %% Line 117
			      <BadOpt,_cor36> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/2-fun-0-'}}] )
		  in  let <_cor30> =
			  %% Line 118
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 118
			      call 'erlang':'list_to_binary'
				  (_cor30)
			  in  let <_cor32> =
				  %% Line 120
				  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 119
				  call 'wxe_util':'construct'
				      (1611, _cor32)
	  ( <_cor34,_cor33> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor34,_cor33})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'create'/2 =
    %% Line 126
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <This = {'wx_ref',_cor4,_cor5,_cor6},Parent = {'wx_ref',_cor7,_cor8,_cor9}> when 'true' ->
	      %% Line 128
	      apply 'create'/3
		  (This, Parent, [])
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'create',2}}] )
	    -| ['compiler_generated'] )
	end
'create'/3 =
    %% Line 140
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor39},{'wx_ref',ParentRef,ParentT,_cor40},Options>
	      when %% Line 141
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 142
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 143
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <MOpts> =
			  %% Line 144
			  ( fun (_cor29,_cor28) ->
				case <_cor29,_cor28> of
				  <{'id',Id},Acc> when 'true' ->
				      let <_cor7> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<Id>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor7|Acc]
				  %% Line 145
				  <{'dir',Dir},Acc> when 'true' ->
				      let <Dir_UC> =
					  call 'unicode':'characters_to_binary'
					      ([Dir|[0]])
				      in  let <_cor14> =
					      call 'erlang':'byte_size'
						  (Dir_UC)
					  in  let <_cor9> =
						  call 'erlang':'byte_size'
						      (Dir_UC)
					      in  let <_cor10> =
						      call 'erlang':'+'
							  (0, _cor9)
						  in  let <_cor11> =
							  call 'erlang':'band'
							      (_cor10, 7)
						      in  let <_cor12> =
							      call 'erlang':'-'
								  (8, _cor11)
							  in  let <_cor13> =
								  call 'erlang':'band'
								      (_cor12, 7)
							      in  let <_cor15> =
								      #{#<2>(32,1,'integer',['unsigned'|['native']]),
									#<_cor14>(32,1,'integer',['unsigned'|['native']]),
									#<Dir_UC>('all',8,'binary',['unsigned'|['big']]),
									#<0>(_cor13,8,'integer',['unsigned'|['big']])}#
								  in  [_cor15|Acc]
				  %% Line 146
				  <{'pos',{PosX,PosY}},Acc> when 'true' ->
				      let <_cor16> =
					  #{#<3>(32,1,'integer',['unsigned'|['native']]),
					    #<PosX>(32,1,'integer',['unsigned'|['native']]),
					    #<PosY>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor16|Acc]
				  %% Line 147
				  <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				      let <_cor17> =
					  #{#<4>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeW>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeH>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor17|Acc]
				  %% Line 148
				  <{'style',Style},Acc> when 'true' ->
				      let <_cor18> =
					  #{#<5>(32,1,'integer',['unsigned'|['native']]),
					    #<Style>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor18|Acc]
				  %% Line 149
				  <{'filter',Filter},Acc> when 'true' ->
				      let <Filter_UC> =
					  call 'unicode':'characters_to_binary'
					      ([Filter|[0]])
				      in  let <_cor25> =
					      call 'erlang':'byte_size'
						  (Filter_UC)
					  in  let <_cor20> =
						  call 'erlang':'byte_size'
						      (Filter_UC)
					      in  let <_cor21> =
						      call 'erlang':'+'
							  (0, _cor20)
						  in  let <_cor22> =
							  call 'erlang':'band'
							      (_cor21, 7)
						      in  let <_cor23> =
							      call 'erlang':'-'
								  (8, _cor22)
							  in  let <_cor24> =
								  call 'erlang':'band'
								      (_cor23, 7)
							      in  let <_cor26> =
								      #{#<6>(32,1,'integer',['unsigned'|['native']]),
									#<_cor25>(32,1,'integer',['unsigned'|['native']]),
									#<Filter_UC>('all',8,'binary',['unsigned'|['big']]),
									#<0>(_cor24,8,'integer',['unsigned'|['big']])}#
								  in  [_cor26|Acc]
				  %% Line 150
				  <{'defaultFilter',DefaultFilter},Acc> when 'true' ->
				      let <_cor27> =
					  #{#<7>(32,1,'integer',['unsigned'|['native']]),
					    #<DefaultFilter>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor27|Acc]
				  %% Line 151
				  <BadOpt,_cor41> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-create/3-fun-0-'}}] )
		      in  let <_cor33> =
			      %% Line 152
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 152
				  call 'erlang':'list_to_binary'
				      (_cor33)
			      in  let <_cor35> =
				      %% Line 154
				      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
					#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
					#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				  in  %% Line 153
				      call 'wxe_util':'call'
					  (1613, _cor35)
	  ( <_cor38,_cor37,_cor36> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor38,_cor37,_cor36})
		  -| [{'function_name',{'create',3}}] )
	    -| ['compiler_generated'] )
	end
'init'/1 =
    %% Line 159
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 160
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 162
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 161
		      call 'wxe_util':'cast'
			  (1614, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'init',1}}] )
	    -| ['compiler_generated'] )
	end
'collapseTree'/1 =
    %% Line 167
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 168
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 170
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 169
		      call 'wxe_util':'cast'
			  (1615, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'collapseTree',1}}] )
	    -| ['compiler_generated'] )
	end
'expandPath'/2 =
    %% Line 175
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Path>
	      when %% Line 176
		call 'erlang':'is_list'
		    (Path) ->
	      do  %% Line 177
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Path_UC> =
		      %% Line 178
		      call 'unicode':'characters_to_binary'
			  ([Path|[0]])
		  in  let <_cor10> =
			  %% Line 180
			  call 'erlang':'byte_size'
			      (Path_UC)
		      in  let <_cor5> =
			      %% Line 180
			      call 'erlang':'byte_size'
				  (Path_UC)
			  in  let <_cor6> =
				  %% Line 180
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 180
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 180
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 180
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 180
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Path_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 179
						  call 'wxe_util':'call'
						      (1616, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'expandPath',2}}] )
	    -| ['compiler_generated'] )
	end
'getDefaultPath'/1 =
    %% Line 185
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 186
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 188
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 187
		      call 'wxe_util':'call'
			  (1617, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getDefaultPath',1}}] )
	    -| ['compiler_generated'] )
	end
'getPath'/1 =
    %% Line 193
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 194
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 196
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 195
		      call 'wxe_util':'call'
			  (1618, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPath',1}}] )
	    -| ['compiler_generated'] )
	end
'getFilePath'/1 =
    %% Line 201
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 202
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 204
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 203
		      call 'wxe_util':'call'
			  (1619, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getFilePath',1}}] )
	    -| ['compiler_generated'] )
	end
'getFilter'/1 =
    %% Line 209
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 210
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 212
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 211
		      call 'wxe_util':'call'
			  (1620, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getFilter',1}}] )
	    -| ['compiler_generated'] )
	end
'getFilterIndex'/1 =
    %% Line 217
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 218
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 220
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 219
		      call 'wxe_util':'call'
			  (1621, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getFilterIndex',1}}] )
	    -| ['compiler_generated'] )
	end
'getRootId'/1 =
    %% Line 225
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 226
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 228
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 227
		      call 'wxe_util':'call'
			  (1622, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getRootId',1}}] )
	    -| ['compiler_generated'] )
	end
'getTreeCtrl'/1 =
    %% Line 233
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 234
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 236
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 235
		      call 'wxe_util':'call'
			  (1623, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getTreeCtrl',1}}] )
	    -| ['compiler_generated'] )
	end
'reCreateTree'/1 =
    %% Line 241
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 242
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 244
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 243
		      call 'wxe_util':'cast'
			  (1624, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'reCreateTree',1}}] )
	    -| ['compiler_generated'] )
	end
'setDefaultPath'/2 =
    %% Line 249
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Path>
	      when %% Line 250
		call 'erlang':'is_list'
		    (Path) ->
	      do  %% Line 251
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Path_UC> =
		      %% Line 252
		      call 'unicode':'characters_to_binary'
			  ([Path|[0]])
		  in  let <_cor10> =
			  %% Line 254
			  call 'erlang':'byte_size'
			      (Path_UC)
		      in  let <_cor5> =
			      %% Line 254
			      call 'erlang':'byte_size'
				  (Path_UC)
			  in  let <_cor6> =
				  %% Line 254
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 254
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 254
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 254
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 254
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Path_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 253
						  call 'wxe_util':'cast'
						      (1625, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setDefaultPath',2}}] )
	    -| ['compiler_generated'] )
	end
'setFilter'/2 =
    %% Line 259
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Filter>
	      when %% Line 260
		call 'erlang':'is_list'
		    (Filter) ->
	      do  %% Line 261
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Filter_UC> =
		      %% Line 262
		      call 'unicode':'characters_to_binary'
			  ([Filter|[0]])
		  in  let <_cor10> =
			  %% Line 264
			  call 'erlang':'byte_size'
			      (Filter_UC)
		      in  let <_cor5> =
			      %% Line 264
			      call 'erlang':'byte_size'
				  (Filter_UC)
			  in  let <_cor6> =
				  %% Line 264
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 264
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 264
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 264
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 264
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Filter_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 263
						  call 'wxe_util':'cast'
						      (1626, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setFilter',2}}] )
	    -| ['compiler_generated'] )
	end
'setFilterIndex'/2 =
    %% Line 269
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 270
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 271
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 273
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 272
		      call 'wxe_util':'cast'
			  (1627, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setFilterIndex',2}}] )
	    -| ['compiler_generated'] )
	end
'setPath'/2 =
    %% Line 278
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Path>
	      when %% Line 279
		call 'erlang':'is_list'
		    (Path) ->
	      do  %% Line 280
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Path_UC> =
		      %% Line 281
		      call 'unicode':'characters_to_binary'
			  ([Path|[0]])
		  in  let <_cor10> =
			  %% Line 283
			  call 'erlang':'byte_size'
			      (Path_UC)
		      in  let <_cor5> =
			      %% Line 283
			      call 'erlang':'byte_size'
				  (Path_UC)
			  in  let <_cor6> =
				  %% Line 283
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 283
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 283
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 283
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 283
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Path_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 282
						  call 'wxe_util':'cast'
						      (1628, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setPath',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 287
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 288
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxGenericDirCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxGenericDirCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 289
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 290
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'setLabel'/2 =
    %% Line 293
    fun (_cor1,_cor0) ->
	call 'wxControl':'setLabel'
	    (_cor1, _cor0)
'getLabel'/1 =
    %% Line 295
    fun (_cor0) ->
	call 'wxControl':'getLabel'
	    (_cor0)
'warpPointer'/3 =
    %% Line 298
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 300
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 302
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 304
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 306
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 308
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 310
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 312
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 314
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 316
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 318
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 320
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 322
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 324
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 326
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 328
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 330
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 332
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 334
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 336
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 338
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 340
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 342
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 344
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 346
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 348
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 350
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 352
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 354
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 356
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 358
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 360
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 362
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 364
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 366
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 368
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 370
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 372
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 374
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 376
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 378
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 380
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 382
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 384
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 386
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 388
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 390
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 392
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 394
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 396
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 398
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 400
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 402
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 404
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 406
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 408
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 410
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 412
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 414
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 416
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 418
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 420
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 422
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 424
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 426
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 428
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 430
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 432
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 434
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 436
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 438
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 440
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 442
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 444
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 446
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 448
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 450
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 452
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 454
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 456
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 458
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 460
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 462
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 464
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 466
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 468
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 470
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 472
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 474
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 476
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 478
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 480
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 482
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 484
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 486
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 488
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 490
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 492
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 494
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 496
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 498
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 500
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 502
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 504
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 506
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 508
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 510
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 512
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 514
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 516
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 518
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 520
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 522
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 524
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 526
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 528
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 530
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 532
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 534
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 536
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 538
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 540
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 542
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 544
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 546
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 548
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 550
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 552
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 554
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 556
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 558
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 560
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 562
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 564
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 566
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 568
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 570
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 572
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 574
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 576
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 578
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 580
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 582
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 584
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 586
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 588
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 590
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 592
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 594
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 596
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 598
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 600
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 602
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 604
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 606
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 608
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 610
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 612
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 614
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 616
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 618
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 620
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 622
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 624
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 626
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 628
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 630
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 632
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 634
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 636
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 638
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 640
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 642
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 645
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 647
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 649
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 651
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 653
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxGenericDirCtrl')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxGenericDirCtrl', _cor0)
end