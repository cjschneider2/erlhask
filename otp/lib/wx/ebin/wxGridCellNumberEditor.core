module 'wxGridCellNumberEditor' ['beginEdit'/4,
				 'destroy'/1,
				 'endEdit'/4,
				 'getValue'/1,
				 'handleReturn'/2,
				 'isCreated'/1,
				 'module_info'/0,
				 'module_info'/1,
				 'new'/0,
				 'new'/1,
				 'paintBackground'/3,
				 'parent_class'/1,
				 'reset'/1,
				 'setParameters'/2,
				 'setSize'/2,
				 'show'/2,
				 'show'/3,
				 'startingClick'/1,
				 'startingKey'/2]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 37
		'export_type' =
		    %% Line 37
		    [{'wxGridCellNumberEditor',0}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'wxGridCellNumberEditor',{'remote_type',45,[{'atom',45,'wx'}|[{'atom',45,'wx_object'}|[[]]]]},[]}],
		%% Line 47
		'spec' =
		    %% Line 47
		    [{{'new',0},[{'type',47,'fun',[{'type',47,'product',[]}|[{'type',47,'wxGridCellNumberEditor',[]}]]}]}],
		%% Line 53
		'spec' =
		    %% Line 53
		    [{{'new',1},[{'type',53,'bounded_fun',[{'type',53,'fun',[{'type',53,'product',[{'type',53,'list',[{'var',53,'Option'}]}]}|[{'type',53,'wxGridCellNumberEditor',[]}]]}|[[{'type',54,'constraint',[{'atom',54,'is_subtype'}|[[{'var',54,'Option'}|[{'type',54,'union',[{'type',54,'tuple',[{'atom',54,'min'}|[{'type',54,'integer',[]}]]}|[{'type',55,'tuple',[{'atom',55,'max'}|[{'type',55,'integer',[]}]]}]]}]]]]}]]]}]}],
		%% Line 66
		'spec' =
		    %% Line 66
		    [{{'getValue',1},[{'type',66,'bounded_fun',[{'type',66,'fun',[{'type',66,'product',[{'var',66,'This'}]}|[{'remote_type',66,[{'atom',66,'unicode'}|[{'atom',66,'charlist'}|[[]]]]}]]}|[[{'type',67,'constraint',[{'atom',67,'is_subtype'}|[[{'var',67,'This'}|[{'type',67,'wxGridCellNumberEditor',[]}]]]]}]]]}]}],
		%% Line 74
		'spec' =
		    %% Line 74
		    [{{'setParameters',2},[{'type',74,'bounded_fun',[{'type',74,'fun',[{'type',74,'product',[{'var',74,'This'}|[{'var',74,'Params'}]]}|[{'atom',74,'ok'}]]}|[[{'type',75,'constraint',[{'atom',75,'is_subtype'}|[[{'var',75,'This'}|[{'type',75,'wxGridCellNumberEditor',[]}]]]]}|[{'type',75,'constraint',[{'atom',75,'is_subtype'}|[[{'var',75,'Params'}|[{'remote_type',75,[{'atom',75,'unicode'}|[{'atom',75,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 84
		'spec' =
		    %% Line 84
		    [{{'destroy',1},[{'type',84,'fun',[{'type',84,'product',[{'ann_type',84,[{'var',84,'This'}|[{'type',84,'wxGridCellNumberEditor',[]}]]}]}|[{'atom',84,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 41
    fun (_cor0) ->
	case _cor0 of
	  <'wxGridCellTextEditor'> when 'true' ->
	      'true'
	  %% Line 42
	  <'wxGridCellEditor'> when 'true' ->
	      'true'
	  %% Line 43
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxGridCellNumberEditor'})
	end
'new'/0 =
    %% Line 49
    fun () ->
	%% Line 50
	apply 'new'/1
	    ([])
'new'/1 =
    %% Line 56
    fun (_cor0) ->
	case _cor0 of
	  <Options>
	      when %% Line 57
		call 'erlang':'is_list'
		    (_cor0) ->
	      let <MOpts> =
		  %% Line 58
		  ( fun (_cor4,_cor3) ->
			case <_cor4,_cor3> of
			  <{'min',Min},Acc> when 'true' ->
			      let <_cor1> =
				  #{#<1>(32,1,'integer',['unsigned'|['native']]),
				    #<Min>(32,1,'integer',['unsigned'|['native']])}#
			      in  [_cor1|Acc]
			  %% Line 59
			  <{'max',Max},Acc> when 'true' ->
			      let <_cor2> =
				  #{#<2>(32,1,'integer',['unsigned'|['native']]),
				    #<Max>(32,1,'integer',['unsigned'|['native']])}#
			      in  [_cor2|Acc]
			  %% Line 60
			  <BadOpt,_cor12> when 'true' ->
			      call 'erlang':'error'
				  ({'badoption',BadOpt})
			end
		    -| [{'id',{0,0,'-new/1-fun-0-'}}] )
	      in  let <_cor8> =
		      %% Line 61
		      call 'lists':'foldl'
			  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		  in  let <BinOpt> =
			  %% Line 61
			  call 'erlang':'list_to_binary'
			      (_cor8)
		      in  let <_cor10> =
			      %% Line 63
			      #{#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			  in  %% Line 62
			      call 'wxe_util':'construct'
				  (599, _cor10)
	  ( <_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'getValue'/1 =
    %% Line 68
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 69
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGridCellNumberEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGridCellNumberEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 71
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 70
		      call 'wxe_util':'call'
			  (600, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getValue',1}}] )
	    -| ['compiler_generated'] )
	end
'setParameters'/2 =
    %% Line 76
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Params>
	      when %% Line 77
		call 'erlang':'is_list'
		    (Params) ->
	      do  %% Line 78
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGridCellNumberEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGridCellNumberEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Params_UC> =
		      %% Line 79
		      call 'unicode':'characters_to_binary'
			  ([Params|[0]])
		  in  let <_cor10> =
			  %% Line 81
			  call 'erlang':'byte_size'
			      (Params_UC)
		      in  let <_cor5> =
			      %% Line 81
			      call 'erlang':'byte_size'
				  (Params_UC)
			  in  let <_cor6> =
				  %% Line 81
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 81
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 81
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 81
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 81
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Params_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 80
						  call 'wxe_util':'cast'
						      (601, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setParameters',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 85
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 86
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxGridCellNumberEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxGridCellNumberEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 87
		      call 'wxe_util':'destroy'
			  (602, Obj)
		      %% Line 88
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'handleReturn'/2 =
    %% Line 92
    fun (_cor1,_cor0) ->
	call 'wxGridCellEditor':'handleReturn'
	    (_cor1, _cor0)
'startingClick'/1 =
    %% Line 94
    fun (_cor0) ->
	call 'wxGridCellEditor':'startingClick'
	    (_cor0)
'startingKey'/2 =
    %% Line 96
    fun (_cor1,_cor0) ->
	call 'wxGridCellEditor':'startingKey'
	    (_cor1, _cor0)
'reset'/1 =
    %% Line 98
    fun (_cor0) ->
	call 'wxGridCellEditor':'reset'
	    (_cor0)
'endEdit'/4 =
    %% Line 100
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxGridCellEditor':'endEdit'
	    (_cor3, _cor2, _cor1, _cor0)
'beginEdit'/4 =
    %% Line 102
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxGridCellEditor':'beginEdit'
	    (_cor3, _cor2, _cor1, _cor0)
'paintBackground'/3 =
    %% Line 104
    fun (_cor2,_cor1,_cor0) ->
	call 'wxGridCellEditor':'paintBackground'
	    (_cor2, _cor1, _cor0)
'show'/3 =
    %% Line 106
    fun (_cor2,_cor1,_cor0) ->
	call 'wxGridCellEditor':'show'
	    (_cor2, _cor1, _cor0)
'show'/2 =
    %% Line 108
    fun (_cor1,_cor0) ->
	call 'wxGridCellEditor':'show'
	    (_cor1, _cor0)
'setSize'/2 =
    %% Line 110
    fun (_cor1,_cor0) ->
	call 'wxGridCellEditor':'setSize'
	    (_cor1, _cor0)
'isCreated'/1 =
    %% Line 112
    fun (_cor0) ->
	call 'wxGridCellEditor':'isCreated'
	    (_cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxGridCellNumberEditor')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxGridCellNumberEditor', _cor0)
end