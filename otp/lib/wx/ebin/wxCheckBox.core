module 'wxCheckBox' ['cacheBestSize'/2,
		     'captureMouse'/1,
		     'center'/1,
		     'center'/2,
		     'centerOnParent'/1,
		     'centerOnParent'/2,
		     'centre'/1,
		     'centre'/2,
		     'centreOnParent'/1,
		     'centreOnParent'/2,
		     'clearBackground'/1,
		     'clientToScreen'/2,
		     'clientToScreen'/3,
		     'close'/1,
		     'close'/2,
		     'connect'/2,
		     'connect'/3,
		     'convertDialogToPixels'/2,
		     'convertPixelsToDialog'/2,
		     'create'/4,
		     'create'/5,
		     'destroy'/1,
		     'destroyChildren'/1,
		     'disable'/1,
		     'disconnect'/1,
		     'disconnect'/2,
		     'disconnect'/3,
		     'enable'/1,
		     'enable'/2,
		     'findWindow'/2,
		     'fit'/1,
		     'fitInside'/1,
		     'freeze'/1,
		     'get3StateValue'/1,
		     'getAcceleratorTable'/1,
		     'getBackgroundColour'/1,
		     'getBackgroundStyle'/1,
		     'getBestSize'/1,
		     'getCaret'/1,
		     'getCharHeight'/1,
		     'getCharWidth'/1,
		     'getChildren'/1,
		     'getClientSize'/1,
		     'getContainingSizer'/1,
		     'getCursor'/1,
		     'getDropTarget'/1,
		     'getEventHandler'/1,
		     'getExtraStyle'/1,
		     'getFont'/1,
		     'getForegroundColour'/1,
		     'getGrandParent'/1,
		     'getHandle'/1,
		     'getHelpText'/1,
		     'getId'/1,
		     'getLabel'/1,
		     'getMaxSize'/1,
		     'getMinSize'/1,
		     'getName'/1,
		     'getParent'/1,
		     'getPosition'/1,
		     'getRect'/1,
		     'getScreenPosition'/1,
		     'getScreenRect'/1,
		     'getScrollPos'/2,
		     'getScrollRange'/2,
		     'getScrollThumb'/2,
		     'getSize'/1,
		     'getSizer'/1,
		     'getTextExtent'/2,
		     'getTextExtent'/3,
		     'getToolTip'/1,
		     'getUpdateRegion'/1,
		     'getValue'/1,
		     'getVirtualSize'/1,
		     'getWindowStyleFlag'/1,
		     'getWindowVariant'/1,
		     'hasCapture'/1,
		     'hasScrollbar'/2,
		     'hasTransparentBackground'/1,
		     'hide'/1,
		     'inheritAttributes'/1,
		     'initDialog'/1,
		     'invalidateBestSize'/1,
		     'is3State'/1,
		     'is3rdStateAllowedForUser'/1,
		     'isChecked'/1,
		     'isEnabled'/1,
		     'isExposed'/2,
		     'isExposed'/3,
		     'isExposed'/5,
		     'isRetained'/1,
		     'isShown'/1,
		     'isTopLevel'/1,
		     'layout'/1,
		     'lineDown'/1,
		     'lineUp'/1,
		     'lower'/1,
		     'makeModal'/1,
		     'makeModal'/2,
		     'module_info'/0,
		     'module_info'/1,
		     'move'/2,
		     'move'/3,
		     'move'/4,
		     'moveAfterInTabOrder'/2,
		     'moveBeforeInTabOrder'/2,
		     'navigate'/1,
		     'navigate'/2,
		     'new'/0,
		     'new'/3,
		     'new'/4,
		     'pageDown'/1,
		     'pageUp'/1,
		     'parent_class'/1,
		     'popEventHandler'/1,
		     'popEventHandler'/2,
		     'popupMenu'/2,
		     'popupMenu'/3,
		     'popupMenu'/4,
		     'raise'/1,
		     'refresh'/1,
		     'refresh'/2,
		     'refreshRect'/2,
		     'refreshRect'/3,
		     'releaseMouse'/1,
		     'removeChild'/2,
		     'reparent'/2,
		     'screenToClient'/1,
		     'screenToClient'/2,
		     'scrollLines'/2,
		     'scrollPages'/2,
		     'scrollWindow'/3,
		     'scrollWindow'/4,
		     'set3StateValue'/2,
		     'setAcceleratorTable'/2,
		     'setAutoLayout'/2,
		     'setBackgroundColour'/2,
		     'setBackgroundStyle'/2,
		     'setCaret'/2,
		     'setClientSize'/2,
		     'setClientSize'/3,
		     'setContainingSizer'/2,
		     'setCursor'/2,
		     'setDropTarget'/2,
		     'setExtraStyle'/2,
		     'setFocus'/1,
		     'setFocusFromKbd'/1,
		     'setFont'/2,
		     'setForegroundColour'/2,
		     'setHelpText'/2,
		     'setId'/2,
		     'setLabel'/2,
		     'setMaxSize'/2,
		     'setMinSize'/2,
		     'setName'/2,
		     'setOwnBackgroundColour'/2,
		     'setOwnFont'/2,
		     'setOwnForegroundColour'/2,
		     'setPalette'/2,
		     'setScrollPos'/3,
		     'setScrollPos'/4,
		     'setScrollbar'/5,
		     'setScrollbar'/6,
		     'setSize'/2,
		     'setSize'/3,
		     'setSize'/5,
		     'setSize'/6,
		     'setSizeHints'/2,
		     'setSizeHints'/3,
		     'setSizeHints'/4,
		     'setSizer'/2,
		     'setSizer'/3,
		     'setSizerAndFit'/2,
		     'setSizerAndFit'/3,
		     'setThemeEnabled'/2,
		     'setToolTip'/2,
		     'setValue'/2,
		     'setVirtualSize'/2,
		     'setVirtualSize'/3,
		     'setVirtualSizeHints'/2,
		     'setVirtualSizeHints'/3,
		     'setVirtualSizeHints'/4,
		     'setWindowStyle'/2,
		     'setWindowStyleFlag'/2,
		     'setWindowVariant'/2,
		     'shouldInheritColours'/1,
		     'show'/1,
		     'show'/2,
		     'thaw'/1,
		     'transferDataFromWindow'/1,
		     'transferDataToWindow'/1,
		     'update'/1,
		     'updateWindowUI'/1,
		     'updateWindowUI'/2,
		     'validate'/1,
		     'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 74
		'export_type' =
		    %% Line 74
		    [{'wxCheckBox',0}],
		%% Line 81
		'type' =
		    %% Line 81
		    [{'wxCheckBox',{'remote_type',81,[{'atom',81,'wx'}|[{'atom',81,'wx_object'}|[[]]]]},[]}],
		%% Line 83
		'spec' =
		    %% Line 83
		    [{{'new',0},[{'type',83,'fun',[{'type',83,'product',[]}|[{'type',83,'wxCheckBox',[]}]]}]}],
		%% Line 89
		'spec' =
		    %% Line 89
		    [{{'new',3},[{'type',89,'bounded_fun',[{'type',89,'fun',[{'type',89,'product',[{'var',89,'Parent'}|[{'var',89,'Id'}|[{'var',89,'Label'}]]]}|[{'type',89,'wxCheckBox',[]}]]}|[[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'Parent'}|[{'remote_type',90,[{'atom',90,'wxWindow'}|[{'atom',90,'wxWindow'}|[[]]]]}]]]]}|[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'Id'}|[{'type',90,'integer',[]}]]]]}|[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'Label'}|[{'remote_type',90,[{'atom',90,'unicode'}|[{'atom',90,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 97
		'spec' =
		    %% Line 97
		    [{{'new',4},[{'type',97,'bounded_fun',[{'type',97,'fun',[{'type',97,'product',[{'var',97,'Parent'}|[{'var',97,'Id'}|[{'var',97,'Label'}|[{'type',97,'list',[{'var',97,'Option'}]}]]]]}|[{'type',97,'wxCheckBox',[]}]]}|[[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'Parent'}|[{'remote_type',98,[{'atom',98,'wxWindow'}|[{'atom',98,'wxWindow'}|[[]]]]}]]]]}|[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'Id'}|[{'type',98,'integer',[]}]]]]}|[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'Label'}|[{'remote_type',98,[{'atom',98,'unicode'}|[{'atom',98,'chardata'}|[[]]]]}]]]]}|[{'type',99,'constraint',[{'atom',99,'is_subtype'}|[[{'var',99,'Option'}|[{'type',99,'union',[{'type',99,'tuple',[{'atom',99,'pos'}|[{'type',99,'tuple',[{'ann_type',99,[{'var',99,'X'}|[{'type',99,'integer',[]}]]}|[{'ann_type',99,[{'var',99,'Y'}|[{'type',99,'integer',[]}]]}]]}]]}|[{'type',100,'tuple',[{'atom',100,'size'}|[{'type',100,'tuple',[{'ann_type',100,[{'var',100,'W'}|[{'type',100,'integer',[]}]]}|[{'ann_type',100,[{'var',100,'H'}|[{'type',100,'integer',[]}]]}]]}]]}|[{'type',101,'tuple',[{'atom',101,'style'}|[{'type',101,'integer',[]}]]}|[{'type',102,'tuple',[{'atom',102,'validator'}|[{'remote_type',102,[{'atom',102,'wx'}|[{'atom',102,'wx_object'}|[[]]]]}]]}]]]]}]]]]}]]]]]]}]}],
		%% Line 117
		'spec' =
		    %% Line 117
		    [{{'create',4},[{'type',117,'bounded_fun',[{'type',117,'fun',[{'type',117,'product',[{'var',117,'This'}|[{'var',117,'Parent'}|[{'var',117,'Id'}|[{'var',117,'Label'}]]]]}|[{'type',117,'boolean',[]}]]}|[[{'type',118,'constraint',[{'atom',118,'is_subtype'}|[[{'var',118,'This'}|[{'type',118,'wxCheckBox',[]}]]]]}|[{'type',118,'constraint',[{'atom',118,'is_subtype'}|[[{'var',118,'Parent'}|[{'remote_type',118,[{'atom',118,'wxWindow'}|[{'atom',118,'wxWindow'}|[[]]]]}]]]]}|[{'type',118,'constraint',[{'atom',118,'is_subtype'}|[[{'var',118,'Id'}|[{'type',118,'integer',[]}]]]]}|[{'type',118,'constraint',[{'atom',118,'is_subtype'}|[[{'var',118,'Label'}|[{'remote_type',118,[{'atom',118,'unicode'}|[{'atom',118,'chardata'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 125
		'spec' =
		    %% Line 125
		    [{{'create',5},[{'type',125,'bounded_fun',[{'type',125,'fun',[{'type',125,'product',[{'var',125,'This'}|[{'var',125,'Parent'}|[{'var',125,'Id'}|[{'var',125,'Label'}|[{'type',125,'list',[{'var',125,'Option'}]}]]]]]}|[{'type',125,'boolean',[]}]]}|[[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'This'}|[{'type',126,'wxCheckBox',[]}]]]]}|[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'Parent'}|[{'remote_type',126,[{'atom',126,'wxWindow'}|[{'atom',126,'wxWindow'}|[[]]]]}]]]]}|[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'Id'}|[{'type',126,'integer',[]}]]]]}|[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'Label'}|[{'remote_type',126,[{'atom',126,'unicode'}|[{'atom',126,'chardata'}|[[]]]]}]]]]}|[{'type',127,'constraint',[{'atom',127,'is_subtype'}|[[{'var',127,'Option'}|[{'type',127,'union',[{'type',127,'tuple',[{'atom',127,'pos'}|[{'type',127,'tuple',[{'ann_type',127,[{'var',127,'X'}|[{'type',127,'integer',[]}]]}|[{'ann_type',127,[{'var',127,'Y'}|[{'type',127,'integer',[]}]]}]]}]]}|[{'type',128,'tuple',[{'atom',128,'size'}|[{'type',128,'tuple',[{'ann_type',128,[{'var',128,'W'}|[{'type',128,'integer',[]}]]}|[{'ann_type',128,[{'var',128,'H'}|[{'type',128,'integer',[]}]]}]]}]]}|[{'type',129,'tuple',[{'atom',129,'style'}|[{'type',129,'integer',[]}]]}|[{'type',130,'tuple',[{'atom',130,'validator'}|[{'remote_type',130,[{'atom',130,'wx'}|[{'atom',130,'wx_object'}|[[]]]]}]]}]]]]}]]]]}]]]]]]]}]}],
		%% Line 146
		'spec' =
		    %% Line 146
		    [{{'getValue',1},[{'type',146,'bounded_fun',[{'type',146,'fun',[{'type',146,'product',[{'var',146,'This'}]}|[{'type',146,'boolean',[]}]]}|[[{'type',147,'constraint',[{'atom',147,'is_subtype'}|[[{'var',147,'This'}|[{'type',147,'wxCheckBox',[]}]]]]}]]]}]}],
		%% Line 155
		'spec' =
		    %% Line 155
		    [{{'get3StateValue',1},[{'type',155,'bounded_fun',[{'type',155,'fun',[{'type',155,'product',[{'var',155,'This'}]}|[{'remote_type',155,[{'atom',155,'wx'}|[{'atom',155,'wx_enum'}|[[]]]]}]]}|[[{'type',156,'constraint',[{'atom',156,'is_subtype'}|[[{'var',156,'This'}|[{'type',156,'wxCheckBox',[]}]]]]}]]]}]}],
		%% Line 163
		'spec' =
		    %% Line 163
		    [{{'is3rdStateAllowedForUser',1},[{'type',163,'bounded_fun',[{'type',163,'fun',[{'type',163,'product',[{'var',163,'This'}]}|[{'type',163,'boolean',[]}]]}|[[{'type',164,'constraint',[{'atom',164,'is_subtype'}|[[{'var',164,'This'}|[{'type',164,'wxCheckBox',[]}]]]]}]]]}]}],
		%% Line 171
		'spec' =
		    %% Line 171
		    [{{'is3State',1},[{'type',171,'bounded_fun',[{'type',171,'fun',[{'type',171,'product',[{'var',171,'This'}]}|[{'type',171,'boolean',[]}]]}|[[{'type',172,'constraint',[{'atom',172,'is_subtype'}|[[{'var',172,'This'}|[{'type',172,'wxCheckBox',[]}]]]]}]]]}]}],
		%% Line 179
		'spec' =
		    %% Line 179
		    [{{'isChecked',1},[{'type',179,'bounded_fun',[{'type',179,'fun',[{'type',179,'product',[{'var',179,'This'}]}|[{'type',179,'boolean',[]}]]}|[[{'type',180,'constraint',[{'atom',180,'is_subtype'}|[[{'var',180,'This'}|[{'type',180,'wxCheckBox',[]}]]]]}]]]}]}],
		%% Line 187
		'spec' =
		    %% Line 187
		    [{{'setValue',2},[{'type',187,'bounded_fun',[{'type',187,'fun',[{'type',187,'product',[{'var',187,'This'}|[{'var',187,'State'}]]}|[{'atom',187,'ok'}]]}|[[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'This'}|[{'type',188,'wxCheckBox',[]}]]]]}|[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'State'}|[{'type',188,'boolean',[]}]]]]}]]]]}]}],
		%% Line 197
		'spec' =
		    %% Line 197
		    [{{'set3StateValue',2},[{'type',197,'bounded_fun',[{'type',197,'fun',[{'type',197,'product',[{'var',197,'This'}|[{'var',197,'State'}]]}|[{'atom',197,'ok'}]]}|[[{'type',198,'constraint',[{'atom',198,'is_subtype'}|[[{'var',198,'This'}|[{'type',198,'wxCheckBox',[]}]]]]}|[{'type',198,'constraint',[{'atom',198,'is_subtype'}|[[{'var',198,'State'}|[{'remote_type',198,[{'atom',198,'wx'}|[{'atom',198,'wx_enum'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 206
		'spec' =
		    %% Line 206
		    [{{'destroy',1},[{'type',206,'fun',[{'type',206,'product',[{'ann_type',206,[{'var',206,'This'}|[{'type',206,'wxCheckBox',[]}]]}]}|[{'atom',206,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 76
    fun (_cor0) ->
	case _cor0 of
	  <'wxControl'> when 'true' ->
	      'true'
	  %% Line 77
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 78
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 79
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxCheckBox'})
	end
'new'/0 =
    %% Line 84
    fun () ->
	%% Line 85
	call 'wxe_util':'construct'
	    (1543, %% Line 86
		   #{}#)
'new'/3 =
    %% Line 92
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor9,_cor10,_cor11},Id,Label>
	      when let <_cor3> =
		    %% Line 93
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor4> =
			%% Line 93
			call 'erlang':'is_list'
			    (Label)
		    in  %% Line 93
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor3, _cor4)
			  -| ['compiler_generated'] ) ->
	      %% Line 94
	      apply 'new'/4
		  (Parent, Id, Label, [])
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'new'/4 =
    %% Line 103
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor35},Id,Label,Options>
	      when %% Line 104
		try
		    let <_cor4> =
			call 'erlang':'is_integer'
			    (Id)
		    in  let <_cor5> =
			    call 'erlang':'is_list'
				(Label)
			in  let <_cor6> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor7> =
				    call 'erlang':'and'
					(_cor5, _cor6)
				in  call 'erlang':'and'
					(_cor4, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 105
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Label_UC> =
		      %% Line 106
		      call 'unicode':'characters_to_binary'
			  ([Label|[0]])
		  in  let <MOpts> =
			  %% Line 107
			  ( fun (_cor18,_cor17) ->
				case <_cor18,_cor17> of
				  <{'pos',{PosX,PosY}},Acc> when 'true' ->
				      let <_cor11> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<PosX>(32,1,'integer',['unsigned'|['native']]),
					    #<PosY>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor11|Acc]
				  %% Line 108
				  <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				      let <_cor12> =
					  #{#<2>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeW>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeH>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor12|Acc]
				  %% Line 109
				  <{'style',Style},Acc> when 'true' ->
				      let <_cor13> =
					  #{#<3>(32,1,'integer',['unsigned'|['native']]),
					    #<Style>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor13|Acc]
				  %% Line 110
				  <{'validator',{'wx_ref',ValidatorRef,ValidatorT,_cor36}},Acc> when 'true' ->
				      do  ( case <> of
					      ( <>
						    when call 'erlang':'=:='
							  (ValidatorT,
							   'wx') ->
						    'ok'
						-| ['compiler_generated'] )
					      ( <> when 'true' ->
						    call ValidatorT:'parent_class'
							('wx')
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
					  let <_cor16> =
					      #{#<4>(32,1,'integer',['unsigned'|['native']]),
						#<ValidatorRef>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor16|Acc]
				  %% Line 111
				  <BadOpt,_cor37> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-new/4-fun-0-'}}] )
		      in  let <_cor22> =
			      %% Line 112
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 112
				  call 'erlang':'list_to_binary'
				      (_cor22)
			      in  let <_cor29> =
				      %% Line 114
				      call 'erlang':'byte_size'
					  (Label_UC)
				  in  let <_cor24> =
					  %% Line 114
					  call 'erlang':'byte_size'
					      (Label_UC)
				      in  let <_cor25> =
					      %% Line 114
					      call 'erlang':'+'
						  (4, _cor24)
					  in  let <_cor26> =
						  %% Line 114
						  call 'erlang':'band'
						      (_cor25, 7)
					      in  let <_cor27> =
						      %% Line 114
						      call 'erlang':'-'
							  (8, _cor26)
						  in  let <_cor28> =
							  %% Line 114
							  call 'erlang':'band'
							      (_cor27, 7)
						      in  let <_cor30> =
							      %% Line 114
							      #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
								#<Id>(32,1,'integer',['unsigned'|['native']]),
								#<_cor29>(32,1,'integer',['unsigned'|['native']]),
								#<Label_UC>('all',8,'binary',['unsigned'|['big']]),
								#<0>(_cor28,8,'integer',['unsigned'|['big']]),
								#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							  in  %% Line 113
							      call 'wxe_util':'construct'
								  (1542, _cor30)
	  ( <_cor34,_cor33,_cor32,_cor31> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor34,_cor33,_cor32,_cor31})
		  -| [{'function_name',{'new',4}}] )
	    -| ['compiler_generated'] )
	end
'create'/4 =
    %% Line 120
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor12,_cor13,_cor14},Parent = {'wx_ref',_cor15,_cor16,_cor17},Id,Label>
	      when let <_cor4> =
		    %% Line 121
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor5> =
			%% Line 121
			call 'erlang':'is_list'
			    (Label)
		    in  %% Line 121
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor4, _cor5)
			  -| ['compiler_generated'] ) ->
	      %% Line 122
	      apply 'create'/5
		  (This, Parent, Id, Label, [])
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'create',4}}] )
	    -| ['compiler_generated'] )
	end
'create'/5 =
    %% Line 131
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor39},{'wx_ref',ParentRef,ParentT,_cor40},Id,Label,Options>
	      when %% Line 132
		try
		    let <_cor5> =
			call 'erlang':'is_integer'
			    (Id)
		    in  let <_cor6> =
			    call 'erlang':'is_list'
				(Label)
			in  let <_cor7> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor8> =
				    call 'erlang':'and'
					(_cor6, _cor7)
				in  call 'erlang':'and'
					(_cor5, _cor8)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 133
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCheckBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCheckBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 134
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <Label_UC> =
			  %% Line 135
			  call 'unicode':'characters_to_binary'
			      ([Label|[0]])
		      in  let <MOpts> =
			      %% Line 136
			      ( fun (_cor21,_cor20) ->
				    case <_cor21,_cor20> of
				      <{'pos',{PosX,PosY}},Acc> when 'true' ->
					  let <_cor14> =
					      #{#<1>(32,1,'integer',['unsigned'|['native']]),
						#<PosX>(32,1,'integer',['unsigned'|['native']]),
						#<PosY>(32,1,'integer',['unsigned'|['native']]),
						#<0>(32,1,'integer',['unsigned'|['big']])}#
					  in  [_cor14|Acc]
				      %% Line 137
				      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
					  let <_cor15> =
					      #{#<2>(32,1,'integer',['unsigned'|['native']]),
						#<SizeW>(32,1,'integer',['unsigned'|['native']]),
						#<SizeH>(32,1,'integer',['unsigned'|['native']]),
						#<0>(32,1,'integer',['unsigned'|['big']])}#
					  in  [_cor15|Acc]
				      %% Line 138
				      <{'style',Style},Acc> when 'true' ->
					  let <_cor16> =
					      #{#<3>(32,1,'integer',['unsigned'|['native']]),
						#<Style>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor16|Acc]
				      %% Line 139
				      <{'validator',{'wx_ref',ValidatorRef,ValidatorT,_cor41}},Acc> when 'true' ->
					  do  ( case <> of
						  ( <>
							when call 'erlang':'=:='
							      (ValidatorT,
							       'wx') ->
							'ok'
						    -| ['compiler_generated'] )
						  ( <> when 'true' ->
							call ValidatorT:'parent_class'
							    ('wx')
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
					      let <_cor19> =
						  #{#<4>(32,1,'integer',['unsigned'|['native']]),
						    #<ValidatorRef>(32,1,'integer',['unsigned'|['native']])}#
					      in  [_cor19|Acc]
				      %% Line 140
				      <BadOpt,_cor42> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-create/5-fun-0-'}}] )
			  in  let <_cor25> =
				  %% Line 141
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 141
				      call 'erlang':'list_to_binary'
					  (_cor25)
				  in  let <_cor32> =
					  %% Line 143
					  call 'erlang':'byte_size'
					      (Label_UC)
				      in  let <_cor27> =
					      %% Line 143
					      call 'erlang':'byte_size'
						  (Label_UC)
					  in  let <_cor28> =
						  %% Line 143
						  call 'erlang':'+'
						      (0, _cor27)
					      in  let <_cor29> =
						      %% Line 143
						      call 'erlang':'band'
							  (_cor28, 7)
						  in  let <_cor30> =
							  %% Line 143
							  call 'erlang':'-'
							      (8, _cor29)
						      in  let <_cor31> =
							      %% Line 143
							      call 'erlang':'band'
								  (_cor30, 7)
							  in  let <_cor33> =
								  %% Line 143
								  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								    #<ParentRef>(32,1,'integer',['unsigned'|['native']]),
								    #<Id>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor32>(32,1,'integer',['unsigned'|['native']]),
								    #<Label_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor31,8,'integer',['unsigned'|['big']]),
								    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							      in  %% Line 142
								  call 'wxe_util':'call'
								      (1544, _cor33)
	  ( <_cor38,_cor37,_cor36,_cor35,_cor34> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor38,_cor37,_cor36,_cor35,_cor34})
		  -| [{'function_name',{'create',5}}] )
	    -| ['compiler_generated'] )
	end
'getValue'/1 =
    %% Line 148
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 149
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCheckBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCheckBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 151
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 150
		      call 'wxe_util':'call'
			  (1545, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getValue',1}}] )
	    -| ['compiler_generated'] )
	end
'get3StateValue'/1 =
    %% Line 157
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 158
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCheckBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCheckBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 160
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 159
		      call 'wxe_util':'call'
			  (1546, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'get3StateValue',1}}] )
	    -| ['compiler_generated'] )
	end
'is3rdStateAllowedForUser'/1 =
    %% Line 165
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 166
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCheckBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCheckBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 168
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 167
		      call 'wxe_util':'call'
			  (1547, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'is3rdStateAllowedForUser',1}}] )
	    -| ['compiler_generated'] )
	end
'is3State'/1 =
    %% Line 173
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 174
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCheckBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCheckBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 176
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 175
		      call 'wxe_util':'call'
			  (1548, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'is3State',1}}] )
	    -| ['compiler_generated'] )
	end
'isChecked'/1 =
    %% Line 181
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 182
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCheckBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCheckBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 184
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 183
		      call 'wxe_util':'call'
			  (1549, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isChecked',1}}] )
	    -| ['compiler_generated'] )
	end
'setValue'/2 =
    %% Line 189
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},State>
	      when %% Line 190
		call 'erlang':'is_boolean'
		    (State) ->
	      do  %% Line 191
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCheckBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCheckBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 193
		      call 'wxe_util':'from_bool'
			  (State)
		  in  let <_cor5> =
			  %% Line 193
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 192
			  call 'wxe_util':'cast'
			      (1550, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setValue',2}}] )
	    -| ['compiler_generated'] )
	end
'set3StateValue'/2 =
    %% Line 199
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},State>
	      when %% Line 200
		call 'erlang':'is_integer'
		    (State) ->
	      do  %% Line 201
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCheckBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCheckBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 203
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<State>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 202
		      call 'wxe_util':'cast'
			  (1551, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'set3StateValue',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 207
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 208
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxCheckBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxCheckBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 209
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 210
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'setLabel'/2 =
    %% Line 213
    fun (_cor1,_cor0) ->
	call 'wxControl':'setLabel'
	    (_cor1, _cor0)
'getLabel'/1 =
    %% Line 215
    fun (_cor0) ->
	call 'wxControl':'getLabel'
	    (_cor0)
'warpPointer'/3 =
    %% Line 218
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 220
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 222
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 224
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 226
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 228
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 230
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 232
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 234
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 236
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 238
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 240
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 242
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 244
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 246
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 248
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 250
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 252
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 254
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 256
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 258
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 260
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 262
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 264
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 266
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 268
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 270
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 272
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 274
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 276
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 278
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 280
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 282
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 284
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 286
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 288
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 290
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 292
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 294
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 296
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 298
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 300
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 302
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 304
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 306
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 308
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 310
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 312
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 314
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 316
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 318
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 320
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 322
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 324
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 326
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 328
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 330
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 332
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 334
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 336
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 338
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 340
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 342
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 344
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 346
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 348
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 350
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 352
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 354
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 356
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 358
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 360
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 362
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 364
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 366
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 368
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 370
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 372
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 374
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 376
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 378
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 380
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 382
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 384
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 386
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 388
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 390
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 392
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 394
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 396
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 398
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 400
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 402
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 404
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 406
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 408
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 410
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 412
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 414
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 416
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 418
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 420
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 422
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 424
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 426
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 428
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 430
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 432
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 434
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 436
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 438
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 440
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 442
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 444
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 446
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 448
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 450
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 452
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 454
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 456
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 458
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 460
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 462
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 464
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 466
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 468
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 470
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 472
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 474
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 476
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 478
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 480
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 482
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 484
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 486
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 488
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 490
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 492
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 494
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 496
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 498
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 500
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 502
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 504
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 506
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 508
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 510
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 512
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 514
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 516
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 518
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 520
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 522
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 524
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 526
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 528
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 530
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 532
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 534
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 536
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 538
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 540
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 542
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 544
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 546
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 548
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 550
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 552
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 554
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 556
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 558
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 560
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 562
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 565
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 567
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 569
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 571
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 573
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxCheckBox')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxCheckBox', _cor0)
end