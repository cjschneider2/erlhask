module 'wxMiniFrame' ['cacheBestSize'/2,
		      'captureMouse'/1,
		      'center'/1,
		      'center'/2,
		      'centerOnParent'/1,
		      'centerOnParent'/2,
		      'centerOnScreen'/1,
		      'centerOnScreen'/2,
		      'centre'/1,
		      'centre'/2,
		      'centreOnParent'/1,
		      'centreOnParent'/2,
		      'centreOnScreen'/1,
		      'centreOnScreen'/2,
		      'clearBackground'/1,
		      'clientToScreen'/2,
		      'clientToScreen'/3,
		      'close'/1,
		      'close'/2,
		      'connect'/2,
		      'connect'/3,
		      'convertDialogToPixels'/2,
		      'convertPixelsToDialog'/2,
		      'create'/4,
		      'create'/5,
		      'createStatusBar'/1,
		      'createStatusBar'/2,
		      'createToolBar'/1,
		      'createToolBar'/2,
		      'destroy'/1,
		      'destroyChildren'/1,
		      'disable'/1,
		      'disconnect'/1,
		      'disconnect'/2,
		      'disconnect'/3,
		      'enable'/1,
		      'enable'/2,
		      'findWindow'/2,
		      'fit'/1,
		      'fitInside'/1,
		      'freeze'/1,
		      'getAcceleratorTable'/1,
		      'getBackgroundColour'/1,
		      'getBackgroundStyle'/1,
		      'getBestSize'/1,
		      'getCaret'/1,
		      'getCharHeight'/1,
		      'getCharWidth'/1,
		      'getChildren'/1,
		      'getClientAreaOrigin'/1,
		      'getClientSize'/1,
		      'getContainingSizer'/1,
		      'getCursor'/1,
		      'getDropTarget'/1,
		      'getEventHandler'/1,
		      'getExtraStyle'/1,
		      'getFont'/1,
		      'getForegroundColour'/1,
		      'getGrandParent'/1,
		      'getHandle'/1,
		      'getHelpText'/1,
		      'getIcon'/1,
		      'getIcons'/1,
		      'getId'/1,
		      'getLabel'/1,
		      'getMaxSize'/1,
		      'getMenuBar'/1,
		      'getMinSize'/1,
		      'getName'/1,
		      'getParent'/1,
		      'getPosition'/1,
		      'getRect'/1,
		      'getScreenPosition'/1,
		      'getScreenRect'/1,
		      'getScrollPos'/2,
		      'getScrollRange'/2,
		      'getScrollThumb'/2,
		      'getSize'/1,
		      'getSizer'/1,
		      'getStatusBar'/1,
		      'getStatusBarPane'/1,
		      'getTextExtent'/2,
		      'getTextExtent'/3,
		      'getTitle'/1,
		      'getToolBar'/1,
		      'getToolTip'/1,
		      'getUpdateRegion'/1,
		      'getVirtualSize'/1,
		      'getWindowStyleFlag'/1,
		      'getWindowVariant'/1,
		      'hasCapture'/1,
		      'hasScrollbar'/2,
		      'hasTransparentBackground'/1,
		      'hide'/1,
		      'iconize'/1,
		      'iconize'/2,
		      'inheritAttributes'/1,
		      'initDialog'/1,
		      'invalidateBestSize'/1,
		      'isActive'/1,
		      'isEnabled'/1,
		      'isExposed'/2,
		      'isExposed'/3,
		      'isExposed'/5,
		      'isFullScreen'/1,
		      'isIconized'/1,
		      'isMaximized'/1,
		      'isRetained'/1,
		      'isShown'/1,
		      'isTopLevel'/1,
		      'layout'/1,
		      'lineDown'/1,
		      'lineUp'/1,
		      'lower'/1,
		      'makeModal'/1,
		      'makeModal'/2,
		      'maximize'/1,
		      'maximize'/2,
		      'module_info'/0,
		      'module_info'/1,
		      'move'/2,
		      'move'/3,
		      'move'/4,
		      'moveAfterInTabOrder'/2,
		      'moveBeforeInTabOrder'/2,
		      'navigate'/1,
		      'navigate'/2,
		      'new'/0,
		      'new'/3,
		      'new'/4,
		      'pageDown'/1,
		      'pageUp'/1,
		      'parent_class'/1,
		      'popEventHandler'/1,
		      'popEventHandler'/2,
		      'popupMenu'/2,
		      'popupMenu'/3,
		      'popupMenu'/4,
		      'processCommand'/2,
		      'raise'/1,
		      'refresh'/1,
		      'refresh'/2,
		      'refreshRect'/2,
		      'refreshRect'/3,
		      'releaseMouse'/1,
		      'removeChild'/2,
		      'reparent'/2,
		      'requestUserAttention'/1,
		      'requestUserAttention'/2,
		      'screenToClient'/1,
		      'screenToClient'/2,
		      'scrollLines'/2,
		      'scrollPages'/2,
		      'scrollWindow'/3,
		      'scrollWindow'/4,
		      'sendSizeEvent'/1,
		      'setAcceleratorTable'/2,
		      'setAutoLayout'/2,
		      'setBackgroundColour'/2,
		      'setBackgroundStyle'/2,
		      'setCaret'/2,
		      'setClientSize'/2,
		      'setClientSize'/3,
		      'setContainingSizer'/2,
		      'setCursor'/2,
		      'setDropTarget'/2,
		      'setExtraStyle'/2,
		      'setFocus'/1,
		      'setFocusFromKbd'/1,
		      'setFont'/2,
		      'setForegroundColour'/2,
		      'setHelpText'/2,
		      'setIcon'/2,
		      'setIcons'/2,
		      'setId'/2,
		      'setLabel'/2,
		      'setMaxSize'/2,
		      'setMenuBar'/2,
		      'setMinSize'/2,
		      'setName'/2,
		      'setOwnBackgroundColour'/2,
		      'setOwnFont'/2,
		      'setOwnForegroundColour'/2,
		      'setPalette'/2,
		      'setScrollPos'/3,
		      'setScrollPos'/4,
		      'setScrollbar'/5,
		      'setScrollbar'/6,
		      'setShape'/2,
		      'setSize'/2,
		      'setSize'/3,
		      'setSize'/5,
		      'setSize'/6,
		      'setSizeHints'/2,
		      'setSizeHints'/3,
		      'setSizeHints'/4,
		      'setSizer'/2,
		      'setSizer'/3,
		      'setSizerAndFit'/2,
		      'setSizerAndFit'/3,
		      'setStatusBar'/2,
		      'setStatusBarPane'/2,
		      'setStatusText'/2,
		      'setStatusText'/3,
		      'setStatusWidths'/2,
		      'setThemeEnabled'/2,
		      'setTitle'/2,
		      'setToolBar'/2,
		      'setToolTip'/2,
		      'setVirtualSize'/2,
		      'setVirtualSize'/3,
		      'setVirtualSizeHints'/2,
		      'setVirtualSizeHints'/3,
		      'setVirtualSizeHints'/4,
		      'setWindowStyle'/2,
		      'setWindowStyleFlag'/2,
		      'setWindowVariant'/2,
		      'shouldInheritColours'/1,
		      'show'/1,
		      'show'/2,
		      'showFullScreen'/2,
		      'showFullScreen'/3,
		      'thaw'/1,
		      'transferDataFromWindow'/1,
		      'transferDataToWindow'/1,
		      'update'/1,
		      'updateWindowUI'/1,
		      'updateWindowUI'/2,
		      'validate'/1,
		      'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 83
		'export_type' =
		    %% Line 83
		    [{'wxMiniFrame',0}],
		%% Line 91
		'type' =
		    %% Line 91
		    [{'wxMiniFrame',{'remote_type',91,[{'atom',91,'wx'}|[{'atom',91,'wx_object'}|[[]]]]},[]}],
		%% Line 93
		'spec' =
		    %% Line 93
		    [{{'new',0},[{'type',93,'fun',[{'type',93,'product',[]}|[{'type',93,'wxMiniFrame',[]}]]}]}],
		%% Line 99
		'spec' =
		    %% Line 99
		    [{{'new',3},[{'type',99,'bounded_fun',[{'type',99,'fun',[{'type',99,'product',[{'var',99,'Parent'}|[{'var',99,'Id'}|[{'var',99,'Title'}]]]}|[{'type',99,'wxMiniFrame',[]}]]}|[[{'type',100,'constraint',[{'atom',100,'is_subtype'}|[[{'var',100,'Parent'}|[{'remote_type',100,[{'atom',100,'wxWindow'}|[{'atom',100,'wxWindow'}|[[]]]]}]]]]}|[{'type',100,'constraint',[{'atom',100,'is_subtype'}|[[{'var',100,'Id'}|[{'type',100,'integer',[]}]]]]}|[{'type',100,'constraint',[{'atom',100,'is_subtype'}|[[{'var',100,'Title'}|[{'remote_type',100,[{'atom',100,'unicode'}|[{'atom',100,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 107
		'spec' =
		    %% Line 107
		    [{{'new',4},[{'type',107,'bounded_fun',[{'type',107,'fun',[{'type',107,'product',[{'var',107,'Parent'}|[{'var',107,'Id'}|[{'var',107,'Title'}|[{'type',107,'list',[{'var',107,'Option'}]}]]]]}|[{'type',107,'wxMiniFrame',[]}]]}|[[{'type',108,'constraint',[{'atom',108,'is_subtype'}|[[{'var',108,'Parent'}|[{'remote_type',108,[{'atom',108,'wxWindow'}|[{'atom',108,'wxWindow'}|[[]]]]}]]]]}|[{'type',108,'constraint',[{'atom',108,'is_subtype'}|[[{'var',108,'Id'}|[{'type',108,'integer',[]}]]]]}|[{'type',108,'constraint',[{'atom',108,'is_subtype'}|[[{'var',108,'Title'}|[{'remote_type',108,[{'atom',108,'unicode'}|[{'atom',108,'chardata'}|[[]]]]}]]]]}|[{'type',109,'constraint',[{'atom',109,'is_subtype'}|[[{'var',109,'Option'}|[{'type',109,'union',[{'type',109,'tuple',[{'atom',109,'pos'}|[{'type',109,'tuple',[{'ann_type',109,[{'var',109,'X'}|[{'type',109,'integer',[]}]]}|[{'ann_type',109,[{'var',109,'Y'}|[{'type',109,'integer',[]}]]}]]}]]}|[{'type',110,'tuple',[{'atom',110,'size'}|[{'type',110,'tuple',[{'ann_type',110,[{'var',110,'W'}|[{'type',110,'integer',[]}]]}|[{'ann_type',110,[{'var',110,'H'}|[{'type',110,'integer',[]}]]}]]}]]}|[{'type',111,'tuple',[{'atom',111,'style'}|[{'type',111,'integer',[]}]]}]]]}]]]]}]]]]]]}]}],
		%% Line 125
		'spec' =
		    %% Line 125
		    [{{'create',4},[{'type',125,'bounded_fun',[{'type',125,'fun',[{'type',125,'product',[{'var',125,'This'}|[{'var',125,'Parent'}|[{'var',125,'Id'}|[{'var',125,'Title'}]]]]}|[{'type',125,'boolean',[]}]]}|[[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'This'}|[{'type',126,'wxMiniFrame',[]}]]]]}|[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'Parent'}|[{'remote_type',126,[{'atom',126,'wxWindow'}|[{'atom',126,'wxWindow'}|[[]]]]}]]]]}|[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'Id'}|[{'type',126,'integer',[]}]]]]}|[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'Title'}|[{'remote_type',126,[{'atom',126,'unicode'}|[{'atom',126,'chardata'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 133
		'spec' =
		    %% Line 133
		    [{{'create',5},[{'type',133,'bounded_fun',[{'type',133,'fun',[{'type',133,'product',[{'var',133,'This'}|[{'var',133,'Parent'}|[{'var',133,'Id'}|[{'var',133,'Title'}|[{'type',133,'list',[{'var',133,'Option'}]}]]]]]}|[{'type',133,'boolean',[]}]]}|[[{'type',134,'constraint',[{'atom',134,'is_subtype'}|[[{'var',134,'This'}|[{'type',134,'wxMiniFrame',[]}]]]]}|[{'type',134,'constraint',[{'atom',134,'is_subtype'}|[[{'var',134,'Parent'}|[{'remote_type',134,[{'atom',134,'wxWindow'}|[{'atom',134,'wxWindow'}|[[]]]]}]]]]}|[{'type',134,'constraint',[{'atom',134,'is_subtype'}|[[{'var',134,'Id'}|[{'type',134,'integer',[]}]]]]}|[{'type',134,'constraint',[{'atom',134,'is_subtype'}|[[{'var',134,'Title'}|[{'remote_type',134,[{'atom',134,'unicode'}|[{'atom',134,'chardata'}|[[]]]]}]]]]}|[{'type',135,'constraint',[{'atom',135,'is_subtype'}|[[{'var',135,'Option'}|[{'type',135,'union',[{'type',135,'tuple',[{'atom',135,'pos'}|[{'type',135,'tuple',[{'ann_type',135,[{'var',135,'X'}|[{'type',135,'integer',[]}]]}|[{'ann_type',135,[{'var',135,'Y'}|[{'type',135,'integer',[]}]]}]]}]]}|[{'type',136,'tuple',[{'atom',136,'size'}|[{'type',136,'tuple',[{'ann_type',136,[{'var',136,'W'}|[{'type',136,'integer',[]}]]}|[{'ann_type',136,[{'var',136,'H'}|[{'type',136,'integer',[]}]]}]]}]]}|[{'type',137,'tuple',[{'atom',137,'style'}|[{'type',137,'integer',[]}]]}]]]}]]]]}]]]]]]]}]}],
		%% Line 152
		'spec' =
		    %% Line 152
		    [{{'destroy',1},[{'type',152,'fun',[{'type',152,'product',[{'ann_type',152,[{'var',152,'This'}|[{'type',152,'wxMiniFrame',[]}]]}]}|[{'atom',152,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 85
    fun (_cor0) ->
	case _cor0 of
	  <'wxFrame'> when 'true' ->
	      'true'
	  %% Line 86
	  <'wxTopLevelWindow'> when 'true' ->
	      'true'
	  %% Line 87
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 88
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 89
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxMiniFrame'})
	end
'new'/0 =
    %% Line 94
    fun () ->
	%% Line 95
	call 'wxe_util':'construct'
	    (323, %% Line 96
		  #{}#)
'new'/3 =
    %% Line 102
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor9,_cor10,_cor11},Id,Title>
	      when let <_cor3> =
		    %% Line 103
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor4> =
			%% Line 103
			call 'erlang':'is_list'
			    (Title)
		    in  %% Line 103
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor3, _cor4)
			  -| ['compiler_generated'] ) ->
	      %% Line 104
	      apply 'new'/4
		  (Parent, Id, Title, [])
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'new'/4 =
    %% Line 112
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor32},Id,Title,Options>
	      when %% Line 113
		try
		    let <_cor4> =
			call 'erlang':'is_integer'
			    (Id)
		    in  let <_cor5> =
			    call 'erlang':'is_list'
				(Title)
			in  let <_cor6> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor7> =
				    call 'erlang':'and'
					(_cor5, _cor6)
				in  call 'erlang':'and'
					(_cor4, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 114
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Title_UC> =
		      %% Line 115
		      call 'unicode':'characters_to_binary'
			  ([Title|[0]])
		  in  let <MOpts> =
			  %% Line 116
			  ( fun (_cor15,_cor14) ->
				case <_cor15,_cor14> of
				  <{'pos',{PosX,PosY}},Acc> when 'true' ->
				      let <_cor11> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<PosX>(32,1,'integer',['unsigned'|['native']]),
					    #<PosY>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor11|Acc]
				  %% Line 117
				  <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				      let <_cor12> =
					  #{#<2>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeW>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeH>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor12|Acc]
				  %% Line 118
				  <{'style',Style},Acc> when 'true' ->
				      let <_cor13> =
					  #{#<3>(32,1,'integer',['unsigned'|['native']]),
					    #<Style>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor13|Acc]
				  %% Line 119
				  <BadOpt,_cor33> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-new/4-fun-0-'}}] )
		      in  let <_cor19> =
			      %% Line 120
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 120
				  call 'erlang':'list_to_binary'
				      (_cor19)
			      in  let <_cor26> =
				      %% Line 122
				      call 'erlang':'byte_size'
					  (Title_UC)
				  in  let <_cor21> =
					  %% Line 122
					  call 'erlang':'byte_size'
					      (Title_UC)
				      in  let <_cor22> =
					      %% Line 122
					      call 'erlang':'+'
						  (4, _cor21)
					  in  let <_cor23> =
						  %% Line 122
						  call 'erlang':'band'
						      (_cor22, 7)
					      in  let <_cor24> =
						      %% Line 122
						      call 'erlang':'-'
							  (8, _cor23)
						  in  let <_cor25> =
							  %% Line 122
							  call 'erlang':'band'
							      (_cor24, 7)
						      in  let <_cor27> =
							      %% Line 122
							      #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
								#<Id>(32,1,'integer',['unsigned'|['native']]),
								#<_cor26>(32,1,'integer',['unsigned'|['native']]),
								#<Title_UC>('all',8,'binary',['unsigned'|['big']]),
								#<0>(_cor25,8,'integer',['unsigned'|['big']]),
								#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							  in  %% Line 121
							      call 'wxe_util':'construct'
								  (324, _cor27)
	  ( <_cor31,_cor30,_cor29,_cor28> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor31,_cor30,_cor29,_cor28})
		  -| [{'function_name',{'new',4}}] )
	    -| ['compiler_generated'] )
	end
'create'/4 =
    %% Line 128
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor12,_cor13,_cor14},Parent = {'wx_ref',_cor15,_cor16,_cor17},Id,Title>
	      when let <_cor4> =
		    %% Line 129
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor5> =
			%% Line 129
			call 'erlang':'is_list'
			    (Title)
		    in  %% Line 129
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor4, _cor5)
			  -| ['compiler_generated'] ) ->
	      %% Line 130
	      apply 'create'/5
		  (This, Parent, Id, Title, [])
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'create',4}}] )
	    -| ['compiler_generated'] )
	end
'create'/5 =
    %% Line 138
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor36},{'wx_ref',ParentRef,ParentT,_cor37},Id,Title,Options>
	      when %% Line 139
		try
		    let <_cor5> =
			call 'erlang':'is_integer'
			    (Id)
		    in  let <_cor6> =
			    call 'erlang':'is_list'
				(Title)
			in  let <_cor7> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor8> =
				    call 'erlang':'and'
					(_cor6, _cor7)
				in  call 'erlang':'and'
					(_cor5, _cor8)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 140
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMiniFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMiniFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 141
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <Title_UC> =
			  %% Line 142
			  call 'unicode':'characters_to_binary'
			      ([Title|[0]])
		      in  let <MOpts> =
			      %% Line 143
			      ( fun (_cor18,_cor17) ->
				    case <_cor18,_cor17> of
				      <{'pos',{PosX,PosY}},Acc> when 'true' ->
					  let <_cor14> =
					      #{#<1>(32,1,'integer',['unsigned'|['native']]),
						#<PosX>(32,1,'integer',['unsigned'|['native']]),
						#<PosY>(32,1,'integer',['unsigned'|['native']]),
						#<0>(32,1,'integer',['unsigned'|['big']])}#
					  in  [_cor14|Acc]
				      %% Line 144
				      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
					  let <_cor15> =
					      #{#<2>(32,1,'integer',['unsigned'|['native']]),
						#<SizeW>(32,1,'integer',['unsigned'|['native']]),
						#<SizeH>(32,1,'integer',['unsigned'|['native']]),
						#<0>(32,1,'integer',['unsigned'|['big']])}#
					  in  [_cor15|Acc]
				      %% Line 145
				      <{'style',Style},Acc> when 'true' ->
					  let <_cor16> =
					      #{#<3>(32,1,'integer',['unsigned'|['native']]),
						#<Style>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor16|Acc]
				      %% Line 146
				      <BadOpt,_cor38> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-create/5-fun-0-'}}] )
			  in  let <_cor22> =
				  %% Line 147
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 147
				      call 'erlang':'list_to_binary'
					  (_cor22)
				  in  let <_cor29> =
					  %% Line 149
					  call 'erlang':'byte_size'
					      (Title_UC)
				      in  let <_cor24> =
					      %% Line 149
					      call 'erlang':'byte_size'
						  (Title_UC)
					  in  let <_cor25> =
						  %% Line 149
						  call 'erlang':'+'
						      (0, _cor24)
					      in  let <_cor26> =
						      %% Line 149
						      call 'erlang':'band'
							  (_cor25, 7)
						  in  let <_cor27> =
							  %% Line 149
							  call 'erlang':'-'
							      (8, _cor26)
						      in  let <_cor28> =
							      %% Line 149
							      call 'erlang':'band'
								  (_cor27, 7)
							  in  let <_cor30> =
								  %% Line 149
								  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								    #<ParentRef>(32,1,'integer',['unsigned'|['native']]),
								    #<Id>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor29>(32,1,'integer',['unsigned'|['native']]),
								    #<Title_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor28,8,'integer',['unsigned'|['big']]),
								    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							      in  %% Line 148
								  call 'wxe_util':'call'
								      (325, _cor30)
	  ( <_cor35,_cor34,_cor33,_cor32,_cor31> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor35,_cor34,_cor33,_cor32,_cor31})
		  -| [{'function_name',{'create',5}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 153
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 154
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxMiniFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxMiniFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 155
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 156
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'setToolBar'/2 =
    %% Line 159
    fun (_cor1,_cor0) ->
	call 'wxFrame':'setToolBar'
	    (_cor1, _cor0)
'setStatusWidths'/2 =
    %% Line 161
    fun (_cor1,_cor0) ->
	call 'wxFrame':'setStatusWidths'
	    (_cor1, _cor0)
'setStatusText'/3 =
    %% Line 163
    fun (_cor2,_cor1,_cor0) ->
	call 'wxFrame':'setStatusText'
	    (_cor2, _cor1, _cor0)
'setStatusText'/2 =
    %% Line 165
    fun (_cor1,_cor0) ->
	call 'wxFrame':'setStatusText'
	    (_cor1, _cor0)
'setStatusBarPane'/2 =
    %% Line 167
    fun (_cor1,_cor0) ->
	call 'wxFrame':'setStatusBarPane'
	    (_cor1, _cor0)
'setStatusBar'/2 =
    %% Line 169
    fun (_cor1,_cor0) ->
	call 'wxFrame':'setStatusBar'
	    (_cor1, _cor0)
'setMenuBar'/2 =
    %% Line 171
    fun (_cor1,_cor0) ->
	call 'wxFrame':'setMenuBar'
	    (_cor1, _cor0)
'sendSizeEvent'/1 =
    %% Line 173
    fun (_cor0) ->
	call 'wxFrame':'sendSizeEvent'
	    (_cor0)
'processCommand'/2 =
    %% Line 175
    fun (_cor1,_cor0) ->
	call 'wxFrame':'processCommand'
	    (_cor1, _cor0)
'getToolBar'/1 =
    %% Line 177
    fun (_cor0) ->
	call 'wxFrame':'getToolBar'
	    (_cor0)
'getStatusBarPane'/1 =
    %% Line 179
    fun (_cor0) ->
	call 'wxFrame':'getStatusBarPane'
	    (_cor0)
'getStatusBar'/1 =
    %% Line 181
    fun (_cor0) ->
	call 'wxFrame':'getStatusBar'
	    (_cor0)
'getMenuBar'/1 =
    %% Line 183
    fun (_cor0) ->
	call 'wxFrame':'getMenuBar'
	    (_cor0)
'getClientAreaOrigin'/1 =
    %% Line 185
    fun (_cor0) ->
	call 'wxFrame':'getClientAreaOrigin'
	    (_cor0)
'createToolBar'/2 =
    %% Line 187
    fun (_cor1,_cor0) ->
	call 'wxFrame':'createToolBar'
	    (_cor1, _cor0)
'createToolBar'/1 =
    %% Line 189
    fun (_cor0) ->
	call 'wxFrame':'createToolBar'
	    (_cor0)
'createStatusBar'/2 =
    %% Line 191
    fun (_cor1,_cor0) ->
	call 'wxFrame':'createStatusBar'
	    (_cor1, _cor0)
'createStatusBar'/1 =
    %% Line 193
    fun (_cor0) ->
	call 'wxFrame':'createStatusBar'
	    (_cor0)
'showFullScreen'/3 =
    %% Line 196
    fun (_cor2,_cor1,_cor0) ->
	call 'wxTopLevelWindow':'showFullScreen'
	    (_cor2, _cor1, _cor0)
'showFullScreen'/2 =
    %% Line 198
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'showFullScreen'
	    (_cor1, _cor0)
'setTitle'/2 =
    %% Line 200
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'setTitle'
	    (_cor1, _cor0)
'setShape'/2 =
    %% Line 202
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'setShape'
	    (_cor1, _cor0)
'centreOnScreen'/2 =
    %% Line 204
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'centreOnScreen'
	    (_cor1, _cor0)
'centreOnScreen'/1 =
    %% Line 206
    fun (_cor0) ->
	call 'wxTopLevelWindow':'centreOnScreen'
	    (_cor0)
'centerOnScreen'/2 =
    %% Line 208
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'centerOnScreen'
	    (_cor1, _cor0)
'centerOnScreen'/1 =
    %% Line 210
    fun (_cor0) ->
	call 'wxTopLevelWindow':'centerOnScreen'
	    (_cor0)
'setIcons'/2 =
    %% Line 212
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'setIcons'
	    (_cor1, _cor0)
'setIcon'/2 =
    %% Line 214
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'setIcon'
	    (_cor1, _cor0)
'requestUserAttention'/2 =
    %% Line 216
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'requestUserAttention'
	    (_cor1, _cor0)
'requestUserAttention'/1 =
    %% Line 218
    fun (_cor0) ->
	call 'wxTopLevelWindow':'requestUserAttention'
	    (_cor0)
'maximize'/2 =
    %% Line 220
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'maximize'
	    (_cor1, _cor0)
'maximize'/1 =
    %% Line 222
    fun (_cor0) ->
	call 'wxTopLevelWindow':'maximize'
	    (_cor0)
'isMaximized'/1 =
    %% Line 224
    fun (_cor0) ->
	call 'wxTopLevelWindow':'isMaximized'
	    (_cor0)
'isIconized'/1 =
    %% Line 226
    fun (_cor0) ->
	call 'wxTopLevelWindow':'isIconized'
	    (_cor0)
'isFullScreen'/1 =
    %% Line 228
    fun (_cor0) ->
	call 'wxTopLevelWindow':'isFullScreen'
	    (_cor0)
'iconize'/2 =
    %% Line 230
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'iconize'
	    (_cor1, _cor0)
'iconize'/1 =
    %% Line 232
    fun (_cor0) ->
	call 'wxTopLevelWindow':'iconize'
	    (_cor0)
'isActive'/1 =
    %% Line 234
    fun (_cor0) ->
	call 'wxTopLevelWindow':'isActive'
	    (_cor0)
'getTitle'/1 =
    %% Line 236
    fun (_cor0) ->
	call 'wxTopLevelWindow':'getTitle'
	    (_cor0)
'getIcons'/1 =
    %% Line 238
    fun (_cor0) ->
	call 'wxTopLevelWindow':'getIcons'
	    (_cor0)
'getIcon'/1 =
    %% Line 240
    fun (_cor0) ->
	call 'wxTopLevelWindow':'getIcon'
	    (_cor0)
'warpPointer'/3 =
    %% Line 243
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 245
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 247
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 249
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 251
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 253
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 255
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 257
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 259
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 261
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 263
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 265
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 267
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 269
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 271
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 273
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 275
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 277
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 279
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 281
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 283
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 285
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 287
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 289
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 291
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 293
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 295
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 297
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 299
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 301
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 303
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 305
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 307
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 309
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 311
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 313
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 315
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 317
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setLabel'/2 =
    %% Line 319
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setLabel'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 321
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 323
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 325
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 327
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 329
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 331
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 333
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 335
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 337
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 339
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 341
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 343
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 345
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 347
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 349
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 351
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 353
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 355
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 357
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 359
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 361
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 363
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 365
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 367
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 369
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 371
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 373
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 375
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 377
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 379
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 381
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 383
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 385
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 387
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 389
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 391
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 393
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 395
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 397
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 399
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 401
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 403
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 405
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 407
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 409
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 411
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 413
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 415
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 417
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 419
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 421
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 423
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 425
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 427
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 429
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 431
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 433
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 435
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 437
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 439
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 441
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 443
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 445
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 447
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 449
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 451
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 453
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 455
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 457
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 459
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 461
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 463
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 465
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 467
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 469
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 471
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 473
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 475
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 477
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 479
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 481
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 483
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 485
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 487
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 489
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 491
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 493
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 495
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 497
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 499
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getLabel'/1 =
    %% Line 501
    fun (_cor0) ->
	call 'wxWindow':'getLabel'
	    (_cor0)
'getId'/1 =
    %% Line 503
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 505
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 507
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 509
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 511
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 513
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 515
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 517
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 519
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 521
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 523
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 525
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 527
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 529
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 531
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 533
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 535
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 537
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 539
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 541
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 543
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 545
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 547
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 549
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 551
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 553
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 555
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 557
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 559
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 561
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 563
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 565
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 567
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 569
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 571
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 573
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 575
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 577
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 579
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 581
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 583
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 585
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 587
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 589
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 591
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 594
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 596
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 598
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 600
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 602
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxMiniFrame')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxMiniFrame', _cor0)
end