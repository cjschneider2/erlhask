module 'wxListBox' ['append'/2,
		    'append'/3,
		    'appendStrings'/2,
		    'cacheBestSize'/2,
		    'captureMouse'/1,
		    'center'/1,
		    'center'/2,
		    'centerOnParent'/1,
		    'centerOnParent'/2,
		    'centre'/1,
		    'centre'/2,
		    'centreOnParent'/1,
		    'centreOnParent'/2,
		    'clear'/1,
		    'clearBackground'/1,
		    'clientToScreen'/2,
		    'clientToScreen'/3,
		    'close'/1,
		    'close'/2,
		    'connect'/2,
		    'connect'/3,
		    'convertDialogToPixels'/2,
		    'convertPixelsToDialog'/2,
		    'create'/6,
		    'create'/7,
		    'delete'/2,
		    'deselect'/2,
		    'destroy'/1,
		    'destroyChildren'/1,
		    'disable'/1,
		    'disconnect'/1,
		    'disconnect'/2,
		    'disconnect'/3,
		    'enable'/1,
		    'enable'/2,
		    'findString'/2,
		    'findString'/3,
		    'findWindow'/2,
		    'fit'/1,
		    'fitInside'/1,
		    'freeze'/1,
		    'getAcceleratorTable'/1,
		    'getBackgroundColour'/1,
		    'getBackgroundStyle'/1,
		    'getBestSize'/1,
		    'getCaret'/1,
		    'getCharHeight'/1,
		    'getCharWidth'/1,
		    'getChildren'/1,
		    'getClientData'/2,
		    'getClientSize'/1,
		    'getContainingSizer'/1,
		    'getCount'/1,
		    'getCursor'/1,
		    'getDropTarget'/1,
		    'getEventHandler'/1,
		    'getExtraStyle'/1,
		    'getFont'/1,
		    'getForegroundColour'/1,
		    'getGrandParent'/1,
		    'getHandle'/1,
		    'getHelpText'/1,
		    'getId'/1,
		    'getLabel'/1,
		    'getMaxSize'/1,
		    'getMinSize'/1,
		    'getName'/1,
		    'getParent'/1,
		    'getPosition'/1,
		    'getRect'/1,
		    'getScreenPosition'/1,
		    'getScreenRect'/1,
		    'getScrollPos'/2,
		    'getScrollRange'/2,
		    'getScrollThumb'/2,
		    'getSelection'/1,
		    'getSelections'/1,
		    'getSize'/1,
		    'getSizer'/1,
		    'getString'/2,
		    'getStringSelection'/1,
		    'getTextExtent'/2,
		    'getTextExtent'/3,
		    'getToolTip'/1,
		    'getUpdateRegion'/1,
		    'getVirtualSize'/1,
		    'getWindowStyleFlag'/1,
		    'getWindowVariant'/1,
		    'hasCapture'/1,
		    'hasScrollbar'/2,
		    'hasTransparentBackground'/1,
		    'hide'/1,
		    'hitTest'/2,
		    'inheritAttributes'/1,
		    'initDialog'/1,
		    'insert'/3,
		    'insert'/4,
		    'insertItems'/3,
		    'invalidateBestSize'/1,
		    'isEmpty'/1,
		    'isEnabled'/1,
		    'isExposed'/2,
		    'isExposed'/3,
		    'isExposed'/5,
		    'isRetained'/1,
		    'isSelected'/2,
		    'isShown'/1,
		    'isTopLevel'/1,
		    'layout'/1,
		    'lineDown'/1,
		    'lineUp'/1,
		    'lower'/1,
		    'makeModal'/1,
		    'makeModal'/2,
		    'module_info'/0,
		    'module_info'/1,
		    'move'/2,
		    'move'/3,
		    'move'/4,
		    'moveAfterInTabOrder'/2,
		    'moveBeforeInTabOrder'/2,
		    'navigate'/1,
		    'navigate'/2,
		    'new'/0,
		    'new'/2,
		    'new'/3,
		    'pageDown'/1,
		    'pageUp'/1,
		    'parent_class'/1,
		    'popEventHandler'/1,
		    'popEventHandler'/2,
		    'popupMenu'/2,
		    'popupMenu'/3,
		    'popupMenu'/4,
		    'raise'/1,
		    'refresh'/1,
		    'refresh'/2,
		    'refreshRect'/2,
		    'refreshRect'/3,
		    'releaseMouse'/1,
		    'removeChild'/2,
		    'reparent'/2,
		    'screenToClient'/1,
		    'screenToClient'/2,
		    'scrollLines'/2,
		    'scrollPages'/2,
		    'scrollWindow'/3,
		    'scrollWindow'/4,
		    'select'/2,
		    'set'/2,
		    'setAcceleratorTable'/2,
		    'setAutoLayout'/2,
		    'setBackgroundColour'/2,
		    'setBackgroundStyle'/2,
		    'setCaret'/2,
		    'setClientData'/3,
		    'setClientSize'/2,
		    'setClientSize'/3,
		    'setContainingSizer'/2,
		    'setCursor'/2,
		    'setDropTarget'/2,
		    'setExtraStyle'/2,
		    'setFirstItem'/2,
		    'setFocus'/1,
		    'setFocusFromKbd'/1,
		    'setFont'/2,
		    'setForegroundColour'/2,
		    'setHelpText'/2,
		    'setId'/2,
		    'setLabel'/2,
		    'setMaxSize'/2,
		    'setMinSize'/2,
		    'setName'/2,
		    'setOwnBackgroundColour'/2,
		    'setOwnFont'/2,
		    'setOwnForegroundColour'/2,
		    'setPalette'/2,
		    'setScrollPos'/3,
		    'setScrollPos'/4,
		    'setScrollbar'/5,
		    'setScrollbar'/6,
		    'setSelection'/2,
		    'setSize'/2,
		    'setSize'/3,
		    'setSize'/5,
		    'setSize'/6,
		    'setSizeHints'/2,
		    'setSizeHints'/3,
		    'setSizeHints'/4,
		    'setSizer'/2,
		    'setSizer'/3,
		    'setSizerAndFit'/2,
		    'setSizerAndFit'/3,
		    'setString'/3,
		    'setStringSelection'/2,
		    'setThemeEnabled'/2,
		    'setToolTip'/2,
		    'setVirtualSize'/2,
		    'setVirtualSize'/3,
		    'setVirtualSizeHints'/2,
		    'setVirtualSizeHints'/3,
		    'setVirtualSizeHints'/4,
		    'setWindowStyle'/2,
		    'setWindowStyleFlag'/2,
		    'setWindowVariant'/2,
		    'shouldInheritColours'/1,
		    'show'/1,
		    'show'/2,
		    'thaw'/1,
		    'transferDataFromWindow'/1,
		    'transferDataToWindow'/1,
		    'update'/1,
		    'updateWindowUI'/1,
		    'updateWindowUI'/2,
		    'validate'/1,
		    'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 77
		'export_type' =
		    %% Line 77
		    [{'wxListBox',0}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{'wxListBox',{'remote_type',85,[{'atom',85,'wx'}|[{'atom',85,'wx_object'}|[[]]]]},[]}],
		%% Line 87
		'spec' =
		    %% Line 87
		    [{{'new',0},[{'type',87,'fun',[{'type',87,'product',[]}|[{'type',87,'wxListBox',[]}]]}]}],
		%% Line 93
		'spec' =
		    %% Line 93
		    [{{'new',2},[{'type',93,'bounded_fun',[{'type',93,'fun',[{'type',93,'product',[{'var',93,'Parent'}|[{'var',93,'Id'}]]}|[{'type',93,'wxListBox',[]}]]}|[[{'type',94,'constraint',[{'atom',94,'is_subtype'}|[[{'var',94,'Parent'}|[{'remote_type',94,[{'atom',94,'wxWindow'}|[{'atom',94,'wxWindow'}|[[]]]]}]]]]}|[{'type',94,'constraint',[{'atom',94,'is_subtype'}|[[{'var',94,'Id'}|[{'type',94,'integer',[]}]]]]}]]]]}]}],
		%% Line 101
		'spec' =
		    %% Line 101
		    [{{'new',3},[{'type',101,'bounded_fun',[{'type',101,'fun',[{'type',101,'product',[{'var',101,'Parent'}|[{'var',101,'Id'}|[{'type',101,'list',[{'var',101,'Option'}]}]]]}|[{'type',101,'wxListBox',[]}]]}|[[{'type',102,'constraint',[{'atom',102,'is_subtype'}|[[{'var',102,'Parent'}|[{'remote_type',102,[{'atom',102,'wxWindow'}|[{'atom',102,'wxWindow'}|[[]]]]}]]]]}|[{'type',102,'constraint',[{'atom',102,'is_subtype'}|[[{'var',102,'Id'}|[{'type',102,'integer',[]}]]]]}|[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'Option'}|[{'type',103,'union',[{'type',103,'tuple',[{'atom',103,'pos'}|[{'type',103,'tuple',[{'ann_type',103,[{'var',103,'X'}|[{'type',103,'integer',[]}]]}|[{'ann_type',103,[{'var',103,'Y'}|[{'type',103,'integer',[]}]]}]]}]]}|[{'type',104,'tuple',[{'atom',104,'size'}|[{'type',104,'tuple',[{'ann_type',104,[{'var',104,'W'}|[{'type',104,'integer',[]}]]}|[{'ann_type',104,[{'var',104,'H'}|[{'type',104,'integer',[]}]]}]]}]]}|[{'type',105,'tuple',[{'atom',105,'choices'}|[{'type',105,'list',[{'remote_type',105,[{'atom',105,'unicode'}|[{'atom',105,'chardata'}|[[]]]]}]}]]}|[{'type',106,'tuple',[{'atom',106,'style'}|[{'type',106,'integer',[]}]]}|[{'type',107,'tuple',[{'atom',107,'validator'}|[{'remote_type',107,[{'atom',107,'wx'}|[{'atom',107,'wx_object'}|[[]]]]}]]}]]]]]}]]]]}]]]]]}]}],
		%% Line 122
		'spec' =
		    %% Line 122
		    [{{'create',6},[{'type',122,'bounded_fun',[{'type',122,'fun',[{'type',122,'product',[{'var',122,'This'}|[{'var',122,'Parent'}|[{'var',122,'Id'}|[{'var',122,'Pos'}|[{'var',122,'Size'}|[{'var',122,'Choices'}]]]]]]}|[{'type',122,'boolean',[]}]]}|[[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'This'}|[{'type',123,'wxListBox',[]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Parent'}|[{'remote_type',123,[{'atom',123,'wxWindow'}|[{'atom',123,'wxWindow'}|[[]]]]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Id'}|[{'type',123,'integer',[]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Pos'}|[{'type',123,'tuple',[{'ann_type',123,[{'var',123,'X'}|[{'type',123,'integer',[]}]]}|[{'ann_type',123,[{'var',123,'Y'}|[{'type',123,'integer',[]}]]}]]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Size'}|[{'type',123,'tuple',[{'ann_type',123,[{'var',123,'W'}|[{'type',123,'integer',[]}]]}|[{'ann_type',123,[{'var',123,'H'}|[{'type',123,'integer',[]}]]}]]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Choices'}|[{'type',123,'list',[{'remote_type',123,[{'atom',123,'unicode'}|[{'atom',123,'chardata'}|[[]]]]}]}]]]]}]]]]]]]]}]}],
		%% Line 130
		'spec' =
		    %% Line 130
		    [{{'create',7},[{'type',130,'bounded_fun',[{'type',130,'fun',[{'type',130,'product',[{'var',130,'This'}|[{'var',130,'Parent'}|[{'var',130,'Id'}|[{'var',130,'Pos'}|[{'var',130,'Size'}|[{'var',130,'Choices'}|[{'type',130,'list',[{'var',130,'Option'}]}]]]]]]]}|[{'type',130,'boolean',[]}]]}|[[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'This'}|[{'type',131,'wxListBox',[]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Parent'}|[{'remote_type',131,[{'atom',131,'wxWindow'}|[{'atom',131,'wxWindow'}|[[]]]]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Id'}|[{'type',131,'integer',[]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Pos'}|[{'type',131,'tuple',[{'ann_type',131,[{'var',131,'X'}|[{'type',131,'integer',[]}]]}|[{'ann_type',131,[{'var',131,'Y'}|[{'type',131,'integer',[]}]]}]]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Size'}|[{'type',131,'tuple',[{'ann_type',131,[{'var',131,'W'}|[{'type',131,'integer',[]}]]}|[{'ann_type',131,[{'var',131,'H'}|[{'type',131,'integer',[]}]]}]]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Choices'}|[{'type',131,'list',[{'remote_type',131,[{'atom',131,'unicode'}|[{'atom',131,'chardata'}|[[]]]]}]}]]]]}|[{'type',132,'constraint',[{'atom',132,'is_subtype'}|[[{'var',132,'Option'}|[{'type',132,'union',[{'type',132,'tuple',[{'atom',132,'style'}|[{'type',132,'integer',[]}]]}|[{'type',133,'tuple',[{'atom',133,'validator'}|[{'remote_type',133,[{'atom',133,'wx'}|[{'atom',133,'wx_object'}|[[]]]]}]]}]]}]]]]}]]]]]]]]]}]}],
		%% Line 148
		'spec' =
		    %% Line 148
		    [{{'deselect',2},[{'type',148,'bounded_fun',[{'type',148,'fun',[{'type',148,'product',[{'var',148,'This'}|[{'var',148,'N'}]]}|[{'atom',148,'ok'}]]}|[[{'type',149,'constraint',[{'atom',149,'is_subtype'}|[[{'var',149,'This'}|[{'type',149,'wxListBox',[]}]]]]}|[{'type',149,'constraint',[{'atom',149,'is_subtype'}|[[{'var',149,'N'}|[{'type',149,'integer',[]}]]]]}]]]]}]}],
		%% Line 157
		'spec' =
		    %% Line 157
		    [{{'getSelections',1},[{'type',157,'bounded_fun',[{'type',157,'fun',[{'type',157,'product',[{'var',157,'This'}]}|[{'var',157,'Result'}]]}|[[{'type',158,'constraint',[{'atom',158,'is_subtype'}|[[{'var',158,'Result'}|[{'type',158,'tuple',[{'ann_type',158,[{'var',158,'Res'}|[{'type',158,'integer',[]}]]}|[{'ann_type',158,[{'var',158,'ASelections'}|[{'type',158,'list',[{'type',158,'integer',[]}]}]]}]]}]]]]}|[{'type',159,'constraint',[{'atom',159,'is_subtype'}|[[{'var',159,'This'}|[{'type',159,'wxListBox',[]}]]]]}]]]]}]}],
		%% Line 166
		'spec' =
		    %% Line 166
		    [{{'insertItems',3},[{'type',166,'bounded_fun',[{'type',166,'fun',[{'type',166,'product',[{'var',166,'This'}|[{'var',166,'Items'}|[{'var',166,'Pos'}]]]}|[{'atom',166,'ok'}]]}|[[{'type',167,'constraint',[{'atom',167,'is_subtype'}|[[{'var',167,'This'}|[{'type',167,'wxListBox',[]}]]]]}|[{'type',167,'constraint',[{'atom',167,'is_subtype'}|[[{'var',167,'Items'}|[{'type',167,'list',[{'remote_type',167,[{'atom',167,'unicode'}|[{'atom',167,'chardata'}|[[]]]]}]}]]]]}|[{'type',167,'constraint',[{'atom',167,'is_subtype'}|[[{'var',167,'Pos'}|[{'type',167,'integer',[]}]]]]}]]]]]}]}],
		%% Line 177
		'spec' =
		    %% Line 177
		    [{{'isSelected',2},[{'type',177,'bounded_fun',[{'type',177,'fun',[{'type',177,'product',[{'var',177,'This'}|[{'var',177,'N'}]]}|[{'type',177,'boolean',[]}]]}|[[{'type',178,'constraint',[{'atom',178,'is_subtype'}|[[{'var',178,'This'}|[{'type',178,'wxListBox',[]}]]]]}|[{'type',178,'constraint',[{'atom',178,'is_subtype'}|[[{'var',178,'N'}|[{'type',178,'integer',[]}]]]]}]]]]}]}],
		%% Line 186
		'spec' =
		    %% Line 186
		    [{{'set',2},[{'type',186,'bounded_fun',[{'type',186,'fun',[{'type',186,'product',[{'var',186,'This'}|[{'var',186,'Items'}]]}|[{'atom',186,'ok'}]]}|[[{'type',187,'constraint',[{'atom',187,'is_subtype'}|[[{'var',187,'This'}|[{'type',187,'wxListBox',[]}]]]]}|[{'type',187,'constraint',[{'atom',187,'is_subtype'}|[[{'var',187,'Items'}|[{'type',187,'list',[{'remote_type',187,[{'atom',187,'unicode'}|[{'atom',187,'chardata'}|[[]]]]}]}]]]]}]]]]}]}],
		%% Line 197
		'spec' =
		    %% Line 197
		    [{{'hitTest',2},[{'type',197,'bounded_fun',[{'type',197,'fun',[{'type',197,'product',[{'var',197,'This'}|[{'var',197,'Point'}]]}|[{'type',197,'integer',[]}]]}|[[{'type',198,'constraint',[{'atom',198,'is_subtype'}|[[{'var',198,'This'}|[{'type',198,'wxListBox',[]}]]]]}|[{'type',198,'constraint',[{'atom',198,'is_subtype'}|[[{'var',198,'Point'}|[{'type',198,'tuple',[{'ann_type',198,[{'var',198,'X'}|[{'type',198,'integer',[]}]]}|[{'ann_type',198,[{'var',198,'Y'}|[{'type',198,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 210
		'spec' =
		    %% Line 210
		    [{{'setFirstItem',2},[{'type',210,'bounded_fun',[{'type',210,'fun',[{'type',210,'product',[{'var',210,'This'}|[{'var',210,'N'}]]}|[{'atom',210,'ok'}]]}|[[{'type',211,'constraint',[{'atom',211,'is_subtype'}|[[{'var',211,'This'}|[{'type',211,'wxListBox',[]}]]]]}|[{'type',211,'constraint',[{'atom',211,'is_subtype'}|[[{'var',211,'N'}|[{'type',211,'integer',[]}]]]]}]]]]}|[{'type',212,'bounded_fun',[{'type',212,'fun',[{'type',212,'product',[{'var',212,'This'}|[{'var',212,'S'}]]}|[{'atom',212,'ok'}]]}|[[{'type',213,'constraint',[{'atom',213,'is_subtype'}|[[{'var',213,'This'}|[{'type',213,'wxListBox',[]}]]]]}|[{'type',213,'constraint',[{'atom',213,'is_subtype'}|[[{'var',213,'S'}|[{'remote_type',213,[{'atom',213,'unicode'}|[{'atom',213,'chardata'}|[[]]]]}]]]]}]]]]}]]}],
		%% Line 227
		'spec' =
		    %% Line 227
		    [{{'destroy',1},[{'type',227,'fun',[{'type',227,'product',[{'ann_type',227,[{'var',227,'This'}|[{'type',227,'wxListBox',[]}]]}]}|[{'atom',227,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 79
    fun (_cor0) ->
	case _cor0 of
	  <'wxControlWithItems'> when 'true' ->
	      'true'
	  %% Line 80
	  <'wxControl'> when 'true' ->
	      'true'
	  %% Line 81
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 82
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 83
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxListBox'})
	end
'new'/0 =
    %% Line 88
    fun () ->
	%% Line 89
	call 'wxe_util':'construct'
	    (1644, %% Line 90
		   #{}#)
'new'/2 =
    %% Line 96
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor5,_cor6,_cor7},Id>
	      when %% Line 97
		call 'erlang':'is_integer'
		    (Id) ->
	      %% Line 98
	      apply 'new'/3
		  (Parent, Id, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'new'/3 =
    %% Line 108
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor52},Id,Options>
	      when let <_cor3> =
		    %% Line 109
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor4> =
			%% Line 109
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 109
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 110
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 111
		      ( fun (_cor42,_cor41) ->
			    case <_cor42,_cor41> of
			      <{'pos',{PosX,PosY}},Acc> when 'true' ->
				  let <_cor7> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<PosX>(32,1,'integer',['unsigned'|['native']]),
					#<PosY>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor7|Acc]
			      %% Line 112
			      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				  let <_cor8> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<SizeW>(32,1,'integer',['unsigned'|['native']]),
					#<SizeH>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor8|Acc]
			      %% Line 113
			      <{'choices',Choices},Acc> when 'true' ->
				  let <_cor14> =
				      ( letrec
					    'lc$^0'/1 =
						fun (_cor11) ->
						    case _cor11 of
						      <[ChoicesTemp|_cor10]> when 'true' ->
							  let <_cor12> =
							      call 'unicode':'characters_to_binary'
								  ([ChoicesTemp|[0]])
							  in  let <_cor13> =
								  apply 'lc$^0'/1
								      (_cor10)
							      in  ( [_cor12|_cor13]
								    -| ['compiler_generated'] )
						      <[]> when 'true' ->
							  []
						      ( <_cor11> when 'true' ->
							    ( primop 'match_fail'
								  ({'function_clause',_cor11})
							      -| [{'function_name',{'lc$^0',1}}] )
							-| ['compiler_generated'] )
						    end
					in  apply 'lc$^0'/1
						(Choices)
					-| ['list_comprehension'] )
				  in  let <_cor35> =
					  call 'erlang':'length'
					      (_cor14)
				      in  let <_cor28> =
					      primop 'bs_init_writable'
						  (256)
					  in  let <_cor34> =
						  ( letrec
							'lbc$^2'/2 =
							    fun (_cor32,_cor31) ->
								case <_cor32,_cor31> of
								  <[UC_Str|_cor30],_cor31> when 'true' ->
								      let <_cor33> =
									  call 'erlang':'byte_size'
									      (UC_Str)
								      in  let <_cor31> =
									      ( #{#<_cor31>('all',1,'binary',[]),
										  #<_cor33>(32,1,'integer',['unsigned'|['native']]),
										  #<UC_Str>('all',8,'binary',['unsigned'|['big']])}#
										-| ['compiler_generated','single_use'] )
									  in  apply 'lbc$^2'/2
										  (_cor30, _cor31)
								  <[],_cor31> when 'true' ->
								      _cor31
								  ( <_cor32,_cor31> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor32,_cor31})
									  -| [{'function_name',{'lbc$^2',2}}] )
								    -| ['compiler_generated'] )
								end
						    in  apply 'lbc$^2'/2
							    (_cor14, _cor28)
						    -| ['list_comprehension'] )
					      in  let <_cor22> =
						      ( letrec
							    'lc$^1'/1 =
								fun (_cor18) ->
								    case _cor18 of
								      <[S|_cor17]> when 'true' ->
									  let <_cor19> =
									      call 'erlang':'byte_size'
										  (S)
									  in  let <_cor20> =
										  call 'erlang':'+'
										      (_cor19, 4)
									      in  let <_cor21> =
										      apply 'lc$^1'/1
											  (_cor17)
										  in  ( [_cor20|_cor21]
											-| ['compiler_generated'] )
								      <[]> when 'true' ->
									  []
								      ( <_cor18> when 'true' ->
									    ( primop 'match_fail'
										  ({'function_clause',_cor18})
									      -| [{'function_name',{'lc$^1',1}}] )
									-| ['compiler_generated'] )
								    end
							in  apply 'lc$^1'/1
								(_cor14)
							-| ['list_comprehension'] )
						  in  let <_cor23> =
							  call 'lists':'sum'
							      (_cor22)
						      in  let <_cor24> =
							      call 'erlang':'+'
								  (0, _cor23)
							  in  let <_cor25> =
								  call 'erlang':'band'
								      (_cor24, 7)
							      in  let <_cor26> =
								      call 'erlang':'-'
									  (8, _cor25)
								  in  let <_cor27> =
									  call 'erlang':'band'
									      (_cor26, 7)
								      in  let <_cor36> =
									      #{#<3>(32,1,'integer',['unsigned'|['native']]),
										#<_cor35>(32,1,'integer',['unsigned'|['native']]),
										#<_cor34>('all',8,'binary',['unsigned'|['big']]),
										#<0>(_cor27,8,'integer',['unsigned'|['big']])}#
									  in  [_cor36|Acc]
			      %% Line 114
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor37> =
				      #{#<4>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor37|Acc]
			      %% Line 115
			      <{'validator',{'wx_ref',ValidatorRef,ValidatorT,_cor53}},Acc> when 'true' ->
				  do  ( case <> of
					  ( <>
						when call 'erlang':'=:='
						      (ValidatorT,
						       'wx') ->
						'ok'
					    -| ['compiler_generated'] )
					  ( <> when 'true' ->
						call ValidatorT:'parent_class'
						    ('wx')
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				      let <_cor40> =
					  #{#<5>(32,1,'integer',['unsigned'|['native']]),
					    #<ValidatorRef>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor40|Acc]
			      %% Line 116
			      <BadOpt,_cor54> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/3-fun-0-'}}] )
		  in  let <_cor46> =
			  %% Line 117
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 117
			      call 'erlang':'list_to_binary'
				  (_cor46)
			  in  let <_cor48> =
				  %% Line 119
				  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				    #<Id>(32,1,'integer',['unsigned'|['native']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 118
				  call 'wxe_util':'construct'
				      (1643, _cor48)
	  ( <_cor51,_cor50,_cor49> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor51,_cor50,_cor49})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'create'/6 =
    %% Line 125
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor24,_cor25,_cor26},Parent = {'wx_ref',_cor27,_cor28,_cor29},Id,Pos = {PosX,PosY},Size = {SizeW,SizeH},Choices>
	      when %% Line 126
		( try
		      let <_cor6> =
			  call 'erlang':'is_integer'
			      (Id)
		      in  let <_cor7> =
			      call 'erlang':'is_integer'
				  (PosX)
			  in  let <_cor8> =
				  call 'erlang':'is_integer'
				      (PosY)
			      in  let <_cor9> =
				      call 'erlang':'is_integer'
					  (SizeW)
				  in  let <_cor10> =
					  call 'erlang':'is_integer'
					      (SizeH)
				      in  let <_cor11> =
					      call 'erlang':'is_list'
						  (Choices)
					  in  let <_cor12> =
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'and'
											 -| ['compiler_generated'] )
							(_cor10, _cor11)
						    -| ['compiler_generated'] )
					      in  let <_cor13> =
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'and'
											     -| ['compiler_generated'] )
							    (_cor9, _cor12)
							-| ['compiler_generated'] )
						  in  let <_cor14> =
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'and'
												 -| ['compiler_generated'] )
								(_cor8, _cor13)
							    -| ['compiler_generated'] )
						      in  let <_cor15> =
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'and'
												     -| ['compiler_generated'] )
								    (_cor7, _cor14)
								-| ['compiler_generated'] )
							  in  ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'and'
												     -| ['compiler_generated'] )
								    (_cor6, _cor15)
								-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 127
	      apply 'create'/7
		  (This, Parent, Id, Pos, Size, Choices, [])
	  ( <_cor23,_cor22,_cor21,_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor23,_cor22,_cor21,_cor20,_cor19,_cor18})
		  -| [{'function_name',{'create',6}}] )
	    -| ['compiler_generated'] )
	end
'create'/7 =
    %% Line 134
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor69},{'wx_ref',ParentRef,ParentT,_cor70},Id,{PosX,PosY},{SizeW,SizeH},Choices,Options>
	      when %% Line 135
		try
		    let <_cor7> =
			call 'erlang':'is_integer'
			    (Id)
		    in  let <_cor8> =
			    call 'erlang':'is_integer'
				(PosX)
			in  let <_cor9> =
				call 'erlang':'is_integer'
				    (PosY)
			    in  let <_cor10> =
				    call 'erlang':'is_integer'
					(SizeW)
				in  let <_cor11> =
					call 'erlang':'is_integer'
					    (SizeH)
				    in  let <_cor12> =
					    call 'erlang':'is_list'
						(Choices)
					in  let <_cor13> =
						call 'erlang':'is_list'
						    (Options)
					    in  let <_cor14> =
						    call 'erlang':'and'
							(_cor12, _cor13)
						in  let <_cor15> =
							call 'erlang':'and'
							    (_cor11, _cor14)
						    in  let <_cor16> =
							    call 'erlang':'and'
								(_cor10, _cor15)
							in  let <_cor17> =
								call 'erlang':'and'
								    (_cor9, _cor16)
							    in  let <_cor18> =
								    call 'erlang':'and'
									(_cor8, _cor17)
								in  call 'erlang':'and'
									(_cor7, _cor18)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 136
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxListBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxListBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 137
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor28> =
			  %% Line 138
			  ( letrec
				'lc$^0'/1 =
				    fun (_cor25) ->
					case _cor25 of
					  <[%% Line 139
					    ChoicesTemp|_cor24]> when 'true' ->
					      let <_cor26> =
						  call 'unicode':'characters_to_binary'
						      ([ChoicesTemp|[0]])
					      in  let <_cor27> =
						      %% Line 139
						      apply 'lc$^0'/1
							  (_cor24)
						  in  ( [_cor26|_cor27]
							-| ['compiler_generated'] )
					  <[]> when 'true' ->
					      []
					  ( <_cor25> when 'true' ->
						( primop 'match_fail'
						      ({'function_clause',_cor25})
						  -| [{'function_name',{'lc$^0',1}}] )
					    -| ['compiler_generated'] )
					end
			    in  apply 'lc$^0'/1
				    (%% Line 139
				     Choices)
			    -| ['list_comprehension'] )
		      in  let <MOpts> =
			      %% Line 140
			      ( fun (_cor35,_cor34) ->
				    case <_cor35,_cor34> of
				      <{'style',Style},Acc> when 'true' ->
					  let <_cor30> =
					      #{#<1>(32,1,'integer',['unsigned'|['native']]),
						#<Style>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor30|Acc]
				      %% Line 141
				      <{'validator',{'wx_ref',ValidatorRef,ValidatorT,_cor71}},Acc> when 'true' ->
					  do  ( case <> of
						  ( <>
							when call 'erlang':'=:='
							      (ValidatorT,
							       'wx') ->
							'ok'
						    -| ['compiler_generated'] )
						  ( <> when 'true' ->
							call ValidatorT:'parent_class'
							    ('wx')
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
					      let <_cor33> =
						  #{#<2>(32,1,'integer',['unsigned'|['native']]),
						    #<ValidatorRef>(32,1,'integer',['unsigned'|['native']])}#
					      in  [_cor33|Acc]
				      %% Line 142
				      <BadOpt,_cor72> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-create/7-fun-0-'}}] )
			  in  let <_cor39> =
				  %% Line 143
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 143
				      call 'erlang':'list_to_binary'
					  (_cor39)
				  in  let <_cor60> =
					  %% Line 145
					  call 'erlang':'length'
					      (_cor28)
				      in  let <_cor53> =
					      primop 'bs_init_writable'
						  (256)
					  in  let <_cor59> =
						  %% Line 145
						  ( letrec
							'lbc$^2'/2 =
							    fun (_cor57,_cor56) ->
								case <_cor57,_cor56> of
								  <[UC_Str|_cor55],_cor56> when 'true' ->
								      let <_cor58> =
									  call 'erlang':'byte_size'
									      (UC_Str)
								      in  let <_cor56> =
									      ( #{#<_cor56>('all',1,'binary',[]),
										  #<_cor58>(32,1,'integer',['unsigned'|['native']]),
										  #<UC_Str>('all',8,'binary',['unsigned'|['big']])}#
										-| ['compiler_generated','single_use'] )
									  in  apply 'lbc$^2'/2
										  (_cor55, _cor56)
								  <[],_cor56> when 'true' ->
								      _cor56
								  ( <_cor57,_cor56> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor57,_cor56})
									  -| [{'function_name',{'lbc$^2',2}}] )
								    -| ['compiler_generated'] )
								end
						    in  apply 'lbc$^2'/2
							    (_cor28, _cor53)
						    -| ['list_comprehension'] )
					      in  let <_cor47> =
						      %% Line 145
						      ( letrec
							    'lc$^1'/1 =
								fun (_cor43) ->
								    case _cor43 of
								      <[S|_cor42]> when 'true' ->
									  let <_cor44> =
									      call 'erlang':'byte_size'
										  (S)
									  in  let <_cor45> =
										  call 'erlang':'+'
										      (_cor44, 4)
									      in  let <_cor46> =
										      apply 'lc$^1'/1
											  (_cor42)
										  in  ( [_cor45|_cor46]
											-| ['compiler_generated'] )
								      <[]> when 'true' ->
									  []
								      ( <_cor43> when 'true' ->
									    ( primop 'match_fail'
										  ({'function_clause',_cor43})
									      -| [{'function_name',{'lc$^1',1}}] )
									-| ['compiler_generated'] )
								    end
							in  apply 'lc$^1'/1
								(_cor28)
							-| ['list_comprehension'] )
						  in  let <_cor48> =
							  %% Line 145
							  call 'lists':'sum'
							      (_cor47)
						      in  let <_cor49> =
							      %% Line 145
							      call 'erlang':'+'
								  (0, _cor48)
							  in  let <_cor50> =
								  %% Line 145
								  call 'erlang':'band'
								      (_cor49, 7)
							      in  let <_cor51> =
								      %% Line 145
								      call 'erlang':'-'
									  (8, _cor50)
								  in  let <_cor52> =
									  %% Line 145
									  call 'erlang':'band'
									      (_cor51, 7)
								      in  let <_cor61> =
									      %% Line 145
									      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
										#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
										#<Id>(32,1,'integer',['unsigned'|['native']]),
										#<PosX>(32,1,'integer',['unsigned'|['native']]),
										#<PosY>(32,1,'integer',['unsigned'|['native']]),
										#<SizeW>(32,1,'integer',['unsigned'|['native']]),
										#<SizeH>(32,1,'integer',['unsigned'|['native']]),
										#<_cor60>(32,1,'integer',['unsigned'|['native']]),
										#<_cor59>('all',8,'binary',['unsigned'|['big']]),
										#<0>(_cor52,8,'integer',['unsigned'|['big']]),
										#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
									  in  %% Line 144
									      call 'wxe_util':'call'
										  (1648, _cor61)
	  ( <_cor68,_cor67,_cor66,_cor65,_cor64,_cor63,_cor62> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor68,_cor67,_cor66,_cor65,_cor64,_cor63,_cor62})
		  -| [{'function_name',{'create',7}}] )
	    -| ['compiler_generated'] )
	end
'deselect'/2 =
    %% Line 150
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 151
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 152
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxListBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxListBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 154
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 153
		      call 'wxe_util':'cast'
			  (1649, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'deselect',2}}] )
	    -| ['compiler_generated'] )
	end
'getSelections'/1 =
    %% Line 160
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 161
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxListBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxListBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 163
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 162
		      call 'wxe_util':'call'
			  (1650, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSelections',1}}] )
	    -| ['compiler_generated'] )
	end
'insertItems'/3 =
    %% Line 168
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor38},Items,Pos>
	      when let <_cor3> =
		    %% Line 169
		    call 'erlang':'is_list'
			(Items)
		in  let <_cor4> =
			%% Line 169
			call 'erlang':'is_integer'
			    (Pos)
		    in  %% Line 169
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 170
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxListBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxListBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor12> =
		      %% Line 171
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor9) ->
				    case _cor9 of
				      <[%% Line 172
					ItemsTemp|_cor8]> when 'true' ->
					  let <_cor10> =
					      call 'unicode':'characters_to_binary'
						  ([ItemsTemp|[0]])
					  in  let <_cor11> =
						  %% Line 172
						  apply 'lc$^0'/1
						      (_cor8)
					      in  ( [_cor10|_cor11]
						    -| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor9> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor9})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(%% Line 172
				 Items)
			-| ['list_comprehension'] )
		  in  let <_cor33> =
			  %% Line 174
			  call 'erlang':'length'
			      (_cor12)
		      in  let <_cor26> =
			      primop 'bs_init_writable'
				  (256)
			  in  let <_cor32> =
				  %% Line 174
				  ( letrec
					'lbc$^2'/2 =
					    fun (_cor30,_cor29) ->
						case <_cor30,_cor29> of
						  <[UC_Str|_cor28],_cor29> when 'true' ->
						      let <_cor31> =
							  call 'erlang':'byte_size'
							      (UC_Str)
						      in  let <_cor29> =
							      ( #{#<_cor29>('all',1,'binary',[]),
								  #<_cor31>(32,1,'integer',['unsigned'|['native']]),
								  #<UC_Str>('all',8,'binary',['unsigned'|['big']])}#
								-| ['compiler_generated','single_use'] )
							  in  apply 'lbc$^2'/2
								  (_cor28, _cor29)
						  <[],_cor29> when 'true' ->
						      _cor29
						  ( <_cor30,_cor29> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor30,_cor29})
							  -| [{'function_name',{'lbc$^2',2}}] )
						    -| ['compiler_generated'] )
						end
				    in  apply 'lbc$^2'/2
					    (_cor12, _cor26)
				    -| ['list_comprehension'] )
			      in  let <_cor20> =
				      %% Line 174
				      ( letrec
					    'lc$^1'/1 =
						fun (_cor16) ->
						    case _cor16 of
						      <[S|_cor15]> when 'true' ->
							  let <_cor17> =
							      call 'erlang':'byte_size'
								  (S)
							  in  let <_cor18> =
								  call 'erlang':'+'
								      (_cor17, 4)
							      in  let <_cor19> =
								      apply 'lc$^1'/1
									  (_cor15)
								  in  ( [_cor18|_cor19]
									-| ['compiler_generated'] )
						      <[]> when 'true' ->
							  []
						      ( <_cor16> when 'true' ->
							    ( primop 'match_fail'
								  ({'function_clause',_cor16})
							      -| [{'function_name',{'lc$^1',1}}] )
							-| ['compiler_generated'] )
						    end
					in  apply 'lc$^1'/1
						(_cor12)
					-| ['list_comprehension'] )
				  in  let <_cor21> =
					  %% Line 174
					  call 'lists':'sum'
					      (_cor20)
				      in  let <_cor22> =
					      %% Line 174
					      call 'erlang':'+'
						  (0, _cor21)
					  in  let <_cor23> =
						  %% Line 174
						  call 'erlang':'band'
						      (_cor22, 7)
					      in  let <_cor24> =
						      %% Line 174
						      call 'erlang':'-'
							  (8, _cor23)
						  in  let <_cor25> =
							  %% Line 174
							  call 'erlang':'band'
							      (_cor24, 7)
						      in  let <_cor34> =
							      %% Line 174
							      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								#<_cor33>(32,1,'integer',['unsigned'|['native']]),
								#<_cor32>('all',8,'binary',['unsigned'|['big']]),
								#<0>(_cor25,8,'integer',['unsigned'|['big']]),
								#<Pos>(32,1,'integer',['unsigned'|['native']])}#
							  in  %% Line 173
							      call 'wxe_util':'cast'
								  (1651, _cor34)
	  ( <_cor37,_cor36,_cor35> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor37,_cor36,_cor35})
		  -| [{'function_name',{'insertItems',3}}] )
	    -| ['compiler_generated'] )
	end
'isSelected'/2 =
    %% Line 179
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 180
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 181
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxListBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxListBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 183
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 182
		      call 'wxe_util':'call'
			  (1652, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'isSelected',2}}] )
	    -| ['compiler_generated'] )
	end
'set'/2 =
    %% Line 188
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor34},Items>
	      when %% Line 189
		call 'erlang':'is_list'
		    (Items) ->
	      do  %% Line 190
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxListBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxListBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor9> =
		      %% Line 191
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor6) ->
				    case _cor6 of
				      <[%% Line 192
					ItemsTemp|_cor5]> when 'true' ->
					  let <_cor7> =
					      call 'unicode':'characters_to_binary'
						  ([ItemsTemp|[0]])
					  in  let <_cor8> =
						  %% Line 192
						  apply 'lc$^0'/1
						      (_cor5)
					      in  ( [_cor7|_cor8]
						    -| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor6> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor6})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(%% Line 192
				 Items)
			-| ['list_comprehension'] )
		  in  let <_cor30> =
			  %% Line 194
			  call 'erlang':'length'
			      (_cor9)
		      in  let <_cor23> =
			      primop 'bs_init_writable'
				  (256)
			  in  let <_cor29> =
				  %% Line 194
				  ( letrec
					'lbc$^2'/2 =
					    fun (_cor27,_cor26) ->
						case <_cor27,_cor26> of
						  <[UC_Str|_cor25],_cor26> when 'true' ->
						      let <_cor28> =
							  call 'erlang':'byte_size'
							      (UC_Str)
						      in  let <_cor26> =
							      ( #{#<_cor26>('all',1,'binary',[]),
								  #<_cor28>(32,1,'integer',['unsigned'|['native']]),
								  #<UC_Str>('all',8,'binary',['unsigned'|['big']])}#
								-| ['compiler_generated','single_use'] )
							  in  apply 'lbc$^2'/2
								  (_cor25, _cor26)
						  <[],_cor26> when 'true' ->
						      _cor26
						  ( <_cor27,_cor26> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor27,_cor26})
							  -| [{'function_name',{'lbc$^2',2}}] )
						    -| ['compiler_generated'] )
						end
				    in  apply 'lbc$^2'/2
					    (_cor9, _cor23)
				    -| ['list_comprehension'] )
			      in  let <_cor17> =
				      %% Line 194
				      ( letrec
					    'lc$^1'/1 =
						fun (_cor13) ->
						    case _cor13 of
						      <[S|_cor12]> when 'true' ->
							  let <_cor14> =
							      call 'erlang':'byte_size'
								  (S)
							  in  let <_cor15> =
								  call 'erlang':'+'
								      (_cor14, 4)
							      in  let <_cor16> =
								      apply 'lc$^1'/1
									  (_cor12)
								  in  ( [_cor15|_cor16]
									-| ['compiler_generated'] )
						      <[]> when 'true' ->
							  []
						      ( <_cor13> when 'true' ->
							    ( primop 'match_fail'
								  ({'function_clause',_cor13})
							      -| [{'function_name',{'lc$^1',1}}] )
							-| ['compiler_generated'] )
						    end
					in  apply 'lc$^1'/1
						(_cor9)
					-| ['list_comprehension'] )
				  in  let <_cor18> =
					  %% Line 194
					  call 'lists':'sum'
					      (_cor17)
				      in  let <_cor19> =
					      %% Line 194
					      call 'erlang':'+'
						  (0, _cor18)
					  in  let <_cor20> =
						  %% Line 194
						  call 'erlang':'band'
						      (_cor19, 7)
					      in  let <_cor21> =
						      %% Line 194
						      call 'erlang':'-'
							  (8, _cor20)
						  in  let <_cor22> =
							  %% Line 194
							  call 'erlang':'band'
							      (_cor21, 7)
						      in  let <_cor31> =
							      %% Line 194
							      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								#<_cor30>(32,1,'integer',['unsigned'|['native']]),
								#<_cor29>('all',8,'binary',['unsigned'|['big']]),
								#<0>(_cor22,8,'integer',['unsigned'|['big']])}#
							  in  %% Line 193
							      call 'wxe_util':'cast'
								  (1653, _cor31)
	  ( <_cor33,_cor32> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor33,_cor32})
		  -| [{'function_name',{'set',2}}] )
	    -| ['compiler_generated'] )
	end
'hitTest'/2 =
    %% Line 199
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{PointX,PointY}>
	      when let <_cor2> =
		    %% Line 200
		    call 'erlang':'is_integer'
			(PointX)
		in  let <_cor3> =
			%% Line 200
			call 'erlang':'is_integer'
			    (PointY)
		    in  %% Line 200
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 201
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxListBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxListBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 203
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PointX>(32,1,'integer',['unsigned'|['native']]),
			#<PointY>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 202
		      call 'wxe_util':'call'
			  (1654, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'hitTest',2}}] )
	    -| ['compiler_generated'] )
	end
'setFirstItem'/2 =
    %% Line 214
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor17},N>
	      when %% Line 215
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 216
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxListBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxListBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 218
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 217
		      call 'wxe_util':'cast'
			  (1655, _cor4)
	  %% Line 219
	  <{'wx_ref',ThisRef,ThisT,_cor18},S>
	      when %% Line 220
		call 'erlang':'is_list'
		    (S) ->
	      do  %% Line 221
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxListBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxListBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <S_UC> =
		      %% Line 222
		      call 'unicode':'characters_to_binary'
			  ([S|[0]])
		  in  let <_cor13> =
			  %% Line 224
			  call 'erlang':'byte_size'
			      (S_UC)
		      in  let <_cor8> =
			      %% Line 224
			      call 'erlang':'byte_size'
				  (S_UC)
			  in  let <_cor9> =
				  %% Line 224
				  call 'erlang':'+'
				      (0, _cor8)
			      in  let <_cor10> =
				      %% Line 224
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 224
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 224
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 224
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<S_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 223
						  call 'wxe_util':'cast'
						      (1656, _cor14)
	  ( <_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15})
		  -| [{'function_name',{'setFirstItem',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 228
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 229
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxListBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxListBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 230
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 231
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'setStringSelection'/2 =
    %% Line 234
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'setStringSelection'
	    (_cor1, _cor0)
'setString'/3 =
    %% Line 236
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'setString'
	    (_cor2, _cor1, _cor0)
'setSelection'/2 =
    %% Line 238
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'setSelection'
	    (_cor1, _cor0)
'select'/2 =
    %% Line 240
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'select'
	    (_cor1, _cor0)
'isEmpty'/1 =
    %% Line 242
    fun (_cor0) ->
	call 'wxControlWithItems':'isEmpty'
	    (_cor0)
'insert'/4 =
    %% Line 244
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'insert'
	    (_cor3, _cor2, _cor1, _cor0)
'insert'/3 =
    %% Line 246
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'insert'
	    (_cor2, _cor1, _cor0)
'getStringSelection'/1 =
    %% Line 248
    fun (_cor0) ->
	call 'wxControlWithItems':'getStringSelection'
	    (_cor0)
'getString'/2 =
    %% Line 250
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'getString'
	    (_cor1, _cor0)
'getSelection'/1 =
    %% Line 252
    fun (_cor0) ->
	call 'wxControlWithItems':'getSelection'
	    (_cor0)
'getCount'/1 =
    %% Line 254
    fun (_cor0) ->
	call 'wxControlWithItems':'getCount'
	    (_cor0)
'setClientData'/3 =
    %% Line 256
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'setClientData'
	    (_cor2, _cor1, _cor0)
'getClientData'/2 =
    %% Line 258
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'getClientData'
	    (_cor1, _cor0)
'findString'/3 =
    %% Line 260
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'findString'
	    (_cor2, _cor1, _cor0)
'findString'/2 =
    %% Line 262
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'findString'
	    (_cor1, _cor0)
'delete'/2 =
    %% Line 264
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'delete'
	    (_cor1, _cor0)
'clear'/1 =
    %% Line 266
    fun (_cor0) ->
	call 'wxControlWithItems':'clear'
	    (_cor0)
'appendStrings'/2 =
    %% Line 268
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'appendStrings'
	    (_cor1, _cor0)
'append'/3 =
    %% Line 270
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'append'
	    (_cor2, _cor1, _cor0)
'append'/2 =
    %% Line 272
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'append'
	    (_cor1, _cor0)
'setLabel'/2 =
    %% Line 275
    fun (_cor1,_cor0) ->
	call 'wxControl':'setLabel'
	    (_cor1, _cor0)
'getLabel'/1 =
    %% Line 277
    fun (_cor0) ->
	call 'wxControl':'getLabel'
	    (_cor0)
'warpPointer'/3 =
    %% Line 280
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 282
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 284
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 286
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 288
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 290
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 292
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 294
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 296
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 298
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 300
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 302
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 304
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 306
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 308
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 310
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 312
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 314
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 316
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 318
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 320
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 322
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 324
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 326
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 328
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 330
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 332
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 334
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 336
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 338
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 340
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 342
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 344
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 346
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 348
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 350
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 352
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 354
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 356
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 358
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 360
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 362
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 364
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 366
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 368
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 370
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 372
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 374
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 376
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 378
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 380
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 382
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 384
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 386
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 388
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 390
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 392
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 394
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 396
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 398
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 400
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 402
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 404
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 406
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 408
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 410
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 412
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 414
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 416
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 418
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 420
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 422
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 424
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 426
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 428
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 430
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 432
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 434
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 436
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 438
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 440
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 442
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 444
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 446
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 448
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 450
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 452
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 454
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 456
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 458
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 460
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 462
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 464
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 466
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 468
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 470
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 472
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 474
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 476
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 478
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 480
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 482
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 484
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 486
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 488
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 490
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 492
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 494
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 496
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 498
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 500
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 502
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 504
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 506
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 508
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 510
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 512
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 514
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 516
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 518
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 520
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 522
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 524
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 526
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 528
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 530
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 532
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 534
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 536
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 538
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 540
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 542
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 544
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 546
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 548
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 550
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 552
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 554
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 556
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 558
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 560
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 562
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 564
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 566
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 568
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 570
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 572
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 574
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 576
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 578
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 580
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 582
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 584
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 586
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 588
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 590
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 592
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 594
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 596
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 598
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 600
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 602
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 604
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 606
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 608
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 610
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 612
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 614
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 616
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 618
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 620
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 622
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 624
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 627
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 629
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 631
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 633
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 635
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxListBox')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxListBox', _cor0)
end