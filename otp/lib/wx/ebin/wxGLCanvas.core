module 'wxGLCanvas' ['cacheBestSize'/2,
		     'captureMouse'/1,
		     'center'/1,
		     'center'/2,
		     'centerOnParent'/1,
		     'centerOnParent'/2,
		     'centre'/1,
		     'centre'/2,
		     'centreOnParent'/1,
		     'centreOnParent'/2,
		     'clearBackground'/1,
		     'clientToScreen'/2,
		     'clientToScreen'/3,
		     'close'/1,
		     'close'/2,
		     'connect'/2,
		     'connect'/3,
		     'convertDialogToPixels'/2,
		     'convertPixelsToDialog'/2,
		     'destroy'/1,
		     'destroyChildren'/1,
		     'disable'/1,
		     'disconnect'/1,
		     'disconnect'/2,
		     'disconnect'/3,
		     'enable'/1,
		     'enable'/2,
		     'findWindow'/2,
		     'fit'/1,
		     'fitInside'/1,
		     'freeze'/1,
		     'getAcceleratorTable'/1,
		     'getBackgroundColour'/1,
		     'getBackgroundStyle'/1,
		     'getBestSize'/1,
		     'getCaret'/1,
		     'getCharHeight'/1,
		     'getCharWidth'/1,
		     'getChildren'/1,
		     'getClientSize'/1,
		     'getContainingSizer'/1,
		     'getContext'/1,
		     'getCursor'/1,
		     'getDropTarget'/1,
		     'getEventHandler'/1,
		     'getExtraStyle'/1,
		     'getFont'/1,
		     'getForegroundColour'/1,
		     'getGrandParent'/1,
		     'getHandle'/1,
		     'getHelpText'/1,
		     'getId'/1,
		     'getLabel'/1,
		     'getMaxSize'/1,
		     'getMinSize'/1,
		     'getName'/1,
		     'getParent'/1,
		     'getPosition'/1,
		     'getRect'/1,
		     'getScreenPosition'/1,
		     'getScreenRect'/1,
		     'getScrollPos'/2,
		     'getScrollRange'/2,
		     'getScrollThumb'/2,
		     'getSize'/1,
		     'getSizer'/1,
		     'getTextExtent'/2,
		     'getTextExtent'/3,
		     'getToolTip'/1,
		     'getUpdateRegion'/1,
		     'getVirtualSize'/1,
		     'getWindowStyleFlag'/1,
		     'getWindowVariant'/1,
		     'hasCapture'/1,
		     'hasScrollbar'/2,
		     'hasTransparentBackground'/1,
		     'hide'/1,
		     'inheritAttributes'/1,
		     'initDialog'/1,
		     'invalidateBestSize'/1,
		     'isEnabled'/1,
		     'isExposed'/2,
		     'isExposed'/3,
		     'isExposed'/5,
		     'isRetained'/1,
		     'isShown'/1,
		     'isTopLevel'/1,
		     'layout'/1,
		     'lineDown'/1,
		     'lineUp'/1,
		     'lower'/1,
		     'makeModal'/1,
		     'makeModal'/2,
		     'module_info'/0,
		     'module_info'/1,
		     'move'/2,
		     'move'/3,
		     'move'/4,
		     'moveAfterInTabOrder'/2,
		     'moveBeforeInTabOrder'/2,
		     'navigate'/1,
		     'navigate'/2,
		     'new'/1,
		     'new'/2,
		     'new'/3,
		     'pageDown'/1,
		     'pageUp'/1,
		     'parent_class'/1,
		     'popEventHandler'/1,
		     'popEventHandler'/2,
		     'popupMenu'/2,
		     'popupMenu'/3,
		     'popupMenu'/4,
		     'raise'/1,
		     'refresh'/1,
		     'refresh'/2,
		     'refreshRect'/2,
		     'refreshRect'/3,
		     'releaseMouse'/1,
		     'removeChild'/2,
		     'reparent'/2,
		     'screenToClient'/1,
		     'screenToClient'/2,
		     'scrollLines'/2,
		     'scrollPages'/2,
		     'scrollWindow'/3,
		     'scrollWindow'/4,
		     'setAcceleratorTable'/2,
		     'setAutoLayout'/2,
		     'setBackgroundColour'/2,
		     'setBackgroundStyle'/2,
		     'setCaret'/2,
		     'setClientSize'/2,
		     'setClientSize'/3,
		     'setContainingSizer'/2,
		     'setCurrent'/1,
		     'setCursor'/2,
		     'setDropTarget'/2,
		     'setExtraStyle'/2,
		     'setFocus'/1,
		     'setFocusFromKbd'/1,
		     'setFont'/2,
		     'setForegroundColour'/2,
		     'setHelpText'/2,
		     'setId'/2,
		     'setLabel'/2,
		     'setMaxSize'/2,
		     'setMinSize'/2,
		     'setName'/2,
		     'setOwnBackgroundColour'/2,
		     'setOwnFont'/2,
		     'setOwnForegroundColour'/2,
		     'setPalette'/2,
		     'setScrollPos'/3,
		     'setScrollPos'/4,
		     'setScrollbar'/5,
		     'setScrollbar'/6,
		     'setSize'/2,
		     'setSize'/3,
		     'setSize'/5,
		     'setSize'/6,
		     'setSizeHints'/2,
		     'setSizeHints'/3,
		     'setSizeHints'/4,
		     'setSizer'/2,
		     'setSizer'/3,
		     'setSizerAndFit'/2,
		     'setSizerAndFit'/3,
		     'setThemeEnabled'/2,
		     'setToolTip'/2,
		     'setVirtualSize'/2,
		     'setVirtualSize'/3,
		     'setVirtualSizeHints'/2,
		     'setVirtualSizeHints'/3,
		     'setVirtualSizeHints'/4,
		     'setWindowStyle'/2,
		     'setWindowStyleFlag'/2,
		     'setWindowVariant'/2,
		     'shouldInheritColours'/1,
		     'show'/1,
		     'show'/2,
		     'swapBuffers'/1,
		     'thaw'/1,
		     'transferDataFromWindow'/1,
		     'transferDataToWindow'/1,
		     'update'/1,
		     'updateWindowUI'/1,
		     'updateWindowUI'/2,
		     'validate'/1,
		     'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 71
		'export_type' =
		    %% Line 71
		    [{'wxGLCanvas',0}],
		%% Line 77
		'type' =
		    %% Line 77
		    [{'wxGLCanvas',{'remote_type',77,[{'atom',77,'wx'}|[{'atom',77,'wx_object'}|[[]]]]},[]}],
		%% Line 79
		'spec' =
		    %% Line 79
		    [{{'new',1},[{'type',79,'bounded_fun',[{'type',79,'fun',[{'type',79,'product',[{'var',79,'Parent'}]}|[{'type',79,'wxGLCanvas',[]}]]}|[[{'type',80,'constraint',[{'atom',80,'is_subtype'}|[[{'var',80,'Parent'}|[{'remote_type',80,[{'atom',80,'wxWindow'}|[{'atom',80,'wxWindow'}|[[]]]]}]]]]}]]]}]}],
		%% Line 98
		'spec' =
		    %% Line 98
		    [{{'new',2},[{'type',98,'bounded_fun',[{'type',98,'fun',[{'type',98,'product',[{'var',98,'Parent'}|[{'var',98,'Shared'}]]}|[{'type',98,'wxGLCanvas',[]}]]}|[[{'type',99,'constraint',[{'atom',99,'is_subtype'}|[[{'var',99,'Parent'}|[{'remote_type',99,[{'atom',99,'wxWindow'}|[{'atom',99,'wxWindow'}|[[]]]]}]]]]}|[{'type',99,'constraint',[{'atom',99,'is_subtype'}|[[{'var',99,'Shared'}|[{'type',99,'union',[{'remote_type',99,[{'atom',99,'wx'}|[{'atom',99,'wx_object'}|[[]]]]}|[{'type',99,'wxGLCanvas',[]}]]}]]]]}]]]]}|[{'type',100,'bounded_fun',[{'type',100,'fun',[{'type',100,'product',[{'var',100,'Parent'}|[{'type',100,'list',[{'var',100,'Option'}]}]]}|[{'type',100,'wxGLCanvas',[]}]]}|[[{'type',101,'constraint',[{'atom',101,'is_subtype'}|[[{'var',101,'Parent'}|[{'remote_type',101,[{'atom',101,'wxWindow'}|[{'atom',101,'wxWindow'}|[[]]]]}]]]]}|[{'type',102,'constraint',[{'atom',102,'is_subtype'}|[[{'var',102,'Option'}|[{'type',102,'union',[{'type',102,'tuple',[{'atom',102,'id'}|[{'type',102,'integer',[]}]]}|[{'type',103,'tuple',[{'atom',103,'pos'}|[{'type',103,'tuple',[{'ann_type',103,[{'var',103,'X'}|[{'type',103,'integer',[]}]]}|[{'ann_type',103,[{'var',103,'Y'}|[{'type',103,'integer',[]}]]}]]}]]}|[{'type',104,'tuple',[{'atom',104,'size'}|[{'type',104,'tuple',[{'ann_type',104,[{'var',104,'W'}|[{'type',104,'integer',[]}]]}|[{'ann_type',104,[{'var',104,'H'}|[{'type',104,'integer',[]}]]}]]}]]}|[{'type',105,'tuple',[{'atom',105,'style'}|[{'type',105,'integer',[]}]]}|[{'type',106,'tuple',[{'atom',106,'name'}|[{'remote_type',106,[{'atom',106,'unicode'}|[{'atom',106,'chardata'}|[[]]]]}]]}|[{'type',107,'tuple',[{'atom',107,'attribList'}|[{'type',107,'list',[{'type',107,'integer',[]}]}]]}|[{'type',108,'tuple',[{'atom',108,'palette'}|[{'remote_type',108,[{'atom',108,'wxPalette'}|[{'atom',108,'wxPalette'}|[[]]]]}]]}]]]]]]]}]]]]}]]]]}]]}],
		%% Line 130
		'spec' =
		    %% Line 130
		    [{{'new',3},[{'type',130,'bounded_fun',[{'type',130,'fun',[{'type',130,'product',[{'var',130,'Parent'}|[{'var',130,'Shared'}|[{'type',130,'list',[{'var',130,'Option'}]}]]]}|[{'type',130,'wxGLCanvas',[]}]]}|[[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Parent'}|[{'remote_type',131,[{'atom',131,'wxWindow'}|[{'atom',131,'wxWindow'}|[[]]]]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Shared'}|[{'type',131,'union',[{'remote_type',131,[{'atom',131,'wx'}|[{'atom',131,'wx_object'}|[[]]]]}|[{'type',131,'wxGLCanvas',[]}]]}]]]]}|[{'type',132,'constraint',[{'atom',132,'is_subtype'}|[[{'var',132,'Option'}|[{'type',132,'union',[{'type',132,'tuple',[{'atom',132,'id'}|[{'type',132,'integer',[]}]]}|[{'type',133,'tuple',[{'atom',133,'pos'}|[{'type',133,'tuple',[{'ann_type',133,[{'var',133,'X'}|[{'type',133,'integer',[]}]]}|[{'ann_type',133,[{'var',133,'Y'}|[{'type',133,'integer',[]}]]}]]}]]}|[{'type',134,'tuple',[{'atom',134,'size'}|[{'type',134,'tuple',[{'ann_type',134,[{'var',134,'W'}|[{'type',134,'integer',[]}]]}|[{'ann_type',134,[{'var',134,'H'}|[{'type',134,'integer',[]}]]}]]}]]}|[{'type',135,'tuple',[{'atom',135,'style'}|[{'type',135,'integer',[]}]]}|[{'type',136,'tuple',[{'atom',136,'name'}|[{'remote_type',136,[{'atom',136,'unicode'}|[{'atom',136,'chardata'}|[[]]]]}]]}|[{'type',137,'tuple',[{'atom',137,'attribList'}|[{'type',137,'list',[{'type',137,'integer',[]}]}]]}|[{'type',138,'tuple',[{'atom',138,'palette'}|[{'remote_type',138,[{'atom',138,'wxPalette'}|[{'atom',138,'wxPalette'}|[[]]]]}]]}]]]]]]]}]]]]}]]]]]}]}],
		%% Line 162
		'spec' =
		    %% Line 162
		    [{{'getContext',1},[{'type',162,'bounded_fun',[{'type',162,'fun',[{'type',162,'product',[{'var',162,'This'}]}|[{'remote_type',162,[{'atom',162,'wx'}|[{'atom',162,'wx_object'}|[[]]]]}]]}|[[{'type',163,'constraint',[{'atom',163,'is_subtype'}|[[{'var',163,'This'}|[{'type',163,'wxGLCanvas',[]}]]]]}]]]}]}],
		%% Line 170
		'spec' =
		    %% Line 170
		    [{{'setCurrent',1},[{'type',170,'bounded_fun',[{'type',170,'fun',[{'type',170,'product',[{'var',170,'This'}]}|[{'atom',170,'ok'}]]}|[[{'type',171,'constraint',[{'atom',171,'is_subtype'}|[[{'var',171,'This'}|[{'type',171,'wxGLCanvas',[]}]]]]}]]]}]}],
		%% Line 180
		'spec' =
		    %% Line 180
		    [{{'swapBuffers',1},[{'type',180,'bounded_fun',[{'type',180,'fun',[{'type',180,'product',[{'var',180,'This'}]}|[{'atom',180,'ok'}]]}|[[{'type',181,'constraint',[{'atom',181,'is_subtype'}|[[{'var',181,'This'}|[{'type',181,'wxGLCanvas',[]}]]]]}]]]}]}],
		%% Line 188
		'spec' =
		    %% Line 188
		    [{{'destroy',1},[{'type',188,'fun',[{'type',188,'product',[{'ann_type',188,[{'var',188,'This'}|[{'type',188,'wxGLCanvas',[]}]]}]}|[{'atom',188,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 73
    fun (_cor0) ->
	case _cor0 of
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 74
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 75
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxGLCanvas'})
	end
'new'/1 =
    %% Line 82
    fun (_cor0) ->
	case _cor0 of
	  <Parent = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 83
						       ( 'true'
							 -| ['compiler_generated'] ) ->
	      %% Line 84
	      apply 'new'/2
		  (Parent, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'new'/2 =
    %% Line 110
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor43,_cor44,_cor45},Shared = {'wx_ref',_cor46,_cor47,_cor48}> when 'true' ->
	      %% Line 112
	      apply 'new'/3
		  (Parent, Shared, [])
	  %% Line 113
	  <{'wx_ref',ParentRef,ParentT,_cor49},Options>
	      when %% Line 114
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 115
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 116
		      ( fun (_cor34,_cor33) ->
			    case <_cor34,_cor33> of
			      <{'id',Id},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<Id>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 117
			      <{'pos',{PosX,PosY}},Acc> when 'true' ->
				  let <_cor5> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<PosX>(32,1,'integer',['unsigned'|['native']]),
					#<PosY>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor5|Acc]
			      %% Line 118
			      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				  let <_cor6> =
				      #{#<3>(32,1,'integer',['unsigned'|['native']]),
					#<SizeW>(32,1,'integer',['unsigned'|['native']]),
					#<SizeH>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor6|Acc]
			      %% Line 119
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor7> =
				      #{#<4>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor7|Acc]
			      %% Line 120
			      <{'name',Name},Acc> when 'true' ->
				  let <Name_UC> =
				      call 'unicode':'characters_to_binary'
					  ([Name|[0]])
				  in  let <_cor14> =
					  call 'erlang':'byte_size'
					      (Name_UC)
				      in  let <_cor9> =
					      call 'erlang':'byte_size'
						  (Name_UC)
					  in  let <_cor10> =
						  call 'erlang':'+'
						      (0, _cor9)
					      in  let <_cor11> =
						      call 'erlang':'band'
							  (_cor10, 7)
						  in  let <_cor12> =
							  call 'erlang':'-'
							      (8, _cor11)
						      in  let <_cor13> =
							      call 'erlang':'band'
								  (_cor12, 7)
							  in  let <_cor15> =
								  #{#<5>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor14>(32,1,'integer',['unsigned'|['native']]),
								    #<Name_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor13,8,'integer',['unsigned'|['big']])}#
							      in  [_cor15|Acc]
			      %% Line 121
			      <{'attribList',AttribList},Acc> when 'true' ->
				  let <_cor28> =
				      call 'erlang':'length'
					  (AttribList)
				  in  let <_cor22> =
					  %% Line 122
					  call 'erlang':'length'
					      (AttribList)
				      in  let <_cor21> =
					      call 'erlang':'*'
						  (_cor22, 4)
					  in  let <_cor20> =
						  primop 'bs_init_writable'
						      (_cor21)
					      in  let <_cor27> =
						      %% Line 122
						      ( letrec
							    'lbc$^0'/2 =
								fun (_cor26,_cor25) ->
								    case <_cor26,_cor25> of
								      <[C|_cor24],_cor25> when 'true' ->
									  let <_cor25> =
									      ( #{#<_cor25>('all',1,'binary',[]),
										  #<C>(32,1,'integer',['signed'|['native']])}#
										-| ['compiler_generated','single_use'] )
									  in  apply 'lbc$^0'/2
										  (_cor24, _cor25)
								      <[],_cor25> when 'true' ->
									  _cor25
								      ( <_cor26,_cor25> when 'true' ->
									    ( primop 'match_fail'
										  ({'function_clause',_cor26,_cor25})
									      -| [{'function_name',{'lbc$^0',2}}] )
									-| ['compiler_generated'] )
								    end
							in  apply 'lbc$^0'/2
								(AttribList, _cor20)
							-| ['list_comprehension'] )
						  in  let <_cor16> =
							  %% Line 122
							  call 'erlang':'length'
							      (AttribList)
						      in  let <_cor17> =
							      %% Line 122
							      call 'erlang':'+'
								  (0, _cor16)
							  in  let <_cor18> =
								  %% Line 122
								  call 'erlang':'rem'
								      (_cor17, 2)
							      in  let <_cor19> =
								      %% Line 122
								      call 'erlang':'*'
									  (_cor18, 32)
								  in  let <_cor29> =
									  #{#<6>(32,1,'integer',['unsigned'|['native']]),
									    #<_cor28>(32,1,'integer',['unsigned'|['native']]),
									    #<_cor27>(%% Line 122
										      'all',8,'binary',['unsigned'|['big']]),
									    #<%% Line 122
									      0>(_cor19,1,'integer',['unsigned'|['big']])}#
								      in  [_cor29|%% Line 122
										  Acc]
			      %% Line 123
			      <{'palette',{'wx_ref',PaletteRef,PaletteT,_cor50}},Acc> when 'true' ->
				  do  ( case <> of
					  ( <>
						when call 'erlang':'=:='
						      (PaletteT,
						       'wxPalette') ->
						'ok'
					    -| ['compiler_generated'] )
					  ( <> when 'true' ->
						call PaletteT:'parent_class'
						    ('wxPalette')
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				      let <_cor32> =
					  #{#<7>(32,1,'integer',['unsigned'|['native']]),
					    #<PaletteRef>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor32|Acc]
			      %% Line 124
			      <BadOpt,_cor51> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/2-fun-0-'}}] )
		  in  let <_cor38> =
			  %% Line 125
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 125
			      call 'erlang':'list_to_binary'
				  (_cor38)
			  in  let <_cor40> =
				  %% Line 127
				  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 126
				  call 'wxe_util':'construct'
				      (2544, _cor40)
	  ( <_cor42,_cor41> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor42,_cor41})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'new'/3 =
    %% Line 139
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor57},{'wx_ref',SharedRef,SharedT,_cor58},Options>
	      when %% Line 140
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 141
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor11> =
		      %% Line 142
		      try
			  ( case <> of
			      ( <>
				    when call 'erlang':'=:='
					  (SharedT,
					   'wxGLContext') ->
				    'true'
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    call SharedT:'parent_class'
					('wxGLContext')
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      of <_cor7> ->
			  _cor7
		      catch <_cor10,_cor9,_cor8> ->
			  'false'
		  in  let <_cor15> =
			  %% Line 142
			  case _cor11 of
			    %% Line 143
			    <'true'> when 'true' ->
				%% Line 144
				2545
			    %% Line 145
			    <_cor62> when 'true' ->
				do  ( case <> of
					( <>
					      when call 'erlang':'=:='
						    (SharedT,
						     'wxGLCanvas') ->
					      'ok'
					  -| ['compiler_generated'] )
					( <> when 'true' ->
					      call SharedT:'parent_class'
						  ('wxGLCanvas')
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				    %% Line 146
				    2546
			  end
		      in  let <MOpts> =
			      %% Line 148
			      ( fun (_cor47,_cor46) ->
				    case <_cor47,_cor46> of
				      <{'id',Id},Acc> when 'true' ->
					  let <_cor17> =
					      #{#<1>(32,1,'integer',['unsigned'|['native']]),
						#<Id>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor17|Acc]
				      %% Line 149
				      <{'pos',{PosX,PosY}},Acc> when 'true' ->
					  let <_cor18> =
					      #{#<2>(32,1,'integer',['unsigned'|['native']]),
						#<PosX>(32,1,'integer',['unsigned'|['native']]),
						#<PosY>(32,1,'integer',['unsigned'|['native']]),
						#<0>(32,1,'integer',['unsigned'|['big']])}#
					  in  [_cor18|Acc]
				      %% Line 150
				      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
					  let <_cor19> =
					      #{#<3>(32,1,'integer',['unsigned'|['native']]),
						#<SizeW>(32,1,'integer',['unsigned'|['native']]),
						#<SizeH>(32,1,'integer',['unsigned'|['native']]),
						#<0>(32,1,'integer',['unsigned'|['big']])}#
					  in  [_cor19|Acc]
				      %% Line 151
				      <{'style',Style},Acc> when 'true' ->
					  let <_cor20> =
					      #{#<4>(32,1,'integer',['unsigned'|['native']]),
						#<Style>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor20|Acc]
				      %% Line 152
				      <{'name',Name},Acc> when 'true' ->
					  let <Name_UC> =
					      call 'unicode':'characters_to_binary'
						  ([Name|[0]])
					  in  let <_cor27> =
						  call 'erlang':'byte_size'
						      (Name_UC)
					      in  let <_cor22> =
						      call 'erlang':'byte_size'
							  (Name_UC)
						  in  let <_cor23> =
							  call 'erlang':'+'
							      (0, _cor22)
						      in  let <_cor24> =
							      call 'erlang':'band'
								  (_cor23, 7)
							  in  let <_cor25> =
								  call 'erlang':'-'
								      (8, _cor24)
							      in  let <_cor26> =
								      call 'erlang':'band'
									  (_cor25, 7)
								  in  let <_cor28> =
									  #{#<5>(32,1,'integer',['unsigned'|['native']]),
									    #<_cor27>(32,1,'integer',['unsigned'|['native']]),
									    #<Name_UC>('all',8,'binary',['unsigned'|['big']]),
									    #<0>(_cor26,8,'integer',['unsigned'|['big']])}#
								      in  [_cor28|Acc]
				      %% Line 153
				      <{'attribList',AttribList},Acc> when 'true' ->
					  let <_cor41> =
					      call 'erlang':'length'
						  (AttribList)
					  in  let <_cor35> =
						  %% Line 154
						  call 'erlang':'length'
						      (AttribList)
					      in  let <_cor34> =
						      call 'erlang':'*'
							  (_cor35, 4)
						  in  let <_cor33> =
							  primop 'bs_init_writable'
							      (_cor34)
						      in  let <_cor40> =
							      %% Line 154
							      ( letrec
								    'lbc$^0'/2 =
									fun (_cor39,_cor38) ->
									    case <_cor39,_cor38> of
									      <[C|_cor37],_cor38> when 'true' ->
										  let <_cor38> =
										      ( #{#<_cor38>('all',1,'binary',[]),
											  #<C>(32,1,'integer',['signed'|['native']])}#
											-| ['compiler_generated','single_use'] )
										  in  apply 'lbc$^0'/2
											  (_cor37, _cor38)
									      <[],_cor38> when 'true' ->
										  _cor38
									      ( <_cor39,_cor38> when 'true' ->
										    ( primop 'match_fail'
											  ({'function_clause',_cor39,_cor38})
										      -| [{'function_name',{'lbc$^0',2}}] )
										-| ['compiler_generated'] )
									    end
								in  apply 'lbc$^0'/2
									(AttribList, _cor33)
								-| ['list_comprehension'] )
							  in  let <_cor29> =
								  %% Line 154
								  call 'erlang':'length'
								      (AttribList)
							      in  let <_cor30> =
								      %% Line 154
								      call 'erlang':'+'
									  (0, _cor29)
								  in  let <_cor31> =
									  %% Line 154
									  call 'erlang':'rem'
									      (_cor30, 2)
								      in  let <_cor32> =
									      %% Line 154
									      call 'erlang':'*'
										  (_cor31, 32)
									  in  let <_cor42> =
										  #{#<6>(32,1,'integer',['unsigned'|['native']]),
										    #<_cor41>(32,1,'integer',['unsigned'|['native']]),
										    #<_cor40>(%% Line 154
											      'all',8,'binary',['unsigned'|['big']]),
										    #<%% Line 154
										      0>(_cor32,1,'integer',['unsigned'|['big']])}#
									      in  [_cor42|%% Line 154
											  Acc]
				      %% Line 155
				      <{'palette',{'wx_ref',PaletteRef,PaletteT,_cor63}},Acc> when 'true' ->
					  do  ( case <> of
						  ( <>
							when call 'erlang':'=:='
							      (PaletteT,
							       'wxPalette') ->
							'ok'
						    -| ['compiler_generated'] )
						  ( <> when 'true' ->
							call PaletteT:'parent_class'
							    ('wxPalette')
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
					      let <_cor45> =
						  #{#<7>(32,1,'integer',['unsigned'|['native']]),
						    #<PaletteRef>(32,1,'integer',['unsigned'|['native']])}#
					      in  [_cor45|Acc]
				      %% Line 156
				      <BadOpt,_cor64> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-new/3-fun-0-'}}] )
			  in  let <_cor51> =
				  %% Line 157
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 157
				      call 'erlang':'list_to_binary'
					  (_cor51)
				  in  let <_cor53> =
					  %% Line 159
					  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
					    #<SharedRef>(32,1,'integer',['unsigned'|['native']]),
					    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				      in  %% Line 158
					  call 'wxe_util':'construct'
					      (_cor15, _cor53)
	  ( <_cor56,_cor55,_cor54> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor56,_cor55,_cor54})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'getContext'/1 =
    %% Line 164
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 165
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGLCanvas') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGLCanvas')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 167
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 166
		      call 'wxe_util':'call'
			  (2547, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getContext',1}}] )
	    -| ['compiler_generated'] )
	end
'setCurrent'/1 =
    %% Line 172
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor7}> when 'true' ->
	      do  %% Line 173
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGLCanvas') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGLCanvas')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 175
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  let <_X_Result> =
			  %% Line 174
			  call 'wxe_util':'cast'
			      (2549, _cor3)
		      in  %% Line 176
			  case call 'wxe_master':'init_opengl'
				   () of
			    <{'ok',_cor8}> when 'true' ->
				%% Line 177
				_X_Result
			    ( <_cor5> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor5})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6})
		  -| [{'function_name',{'setCurrent',1}}] )
	    -| ['compiler_generated'] )
	end
'swapBuffers'/1 =
    %% Line 182
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 183
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGLCanvas') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGLCanvas')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 185
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 184
		      call 'wxe_util':'cast'
			  (2550, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'swapBuffers',1}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 189
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 190
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxGLCanvas') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxGLCanvas')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 191
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 192
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'warpPointer'/3 =
    %% Line 195
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 197
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 199
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 201
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 203
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 205
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 207
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 209
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 211
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 213
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 215
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 217
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 219
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 221
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 223
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 225
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 227
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 229
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 231
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 233
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 235
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 237
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 239
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 241
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 243
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 245
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 247
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 249
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 251
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 253
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 255
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 257
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 259
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 261
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 263
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 265
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 267
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 269
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setLabel'/2 =
    %% Line 271
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setLabel'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 273
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 275
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 277
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 279
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 281
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 283
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 285
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 287
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 289
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 291
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 293
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 295
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 297
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 299
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 301
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 303
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 305
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 307
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 309
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 311
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 313
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 315
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 317
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 319
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 321
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 323
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 325
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 327
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 329
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 331
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 333
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 335
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 337
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 339
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 341
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 343
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 345
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 347
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 349
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 351
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 353
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 355
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 357
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 359
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 361
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 363
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 365
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 367
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 369
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 371
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 373
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 375
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 377
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 379
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 381
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 383
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 385
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 387
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 389
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 391
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 393
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 395
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 397
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 399
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 401
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 403
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 405
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 407
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 409
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 411
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 413
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 415
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 417
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 419
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 421
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 423
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 425
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 427
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 429
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 431
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 433
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 435
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 437
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 439
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 441
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 443
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 445
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 447
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 449
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 451
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getLabel'/1 =
    %% Line 453
    fun (_cor0) ->
	call 'wxWindow':'getLabel'
	    (_cor0)
'getId'/1 =
    %% Line 455
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 457
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 459
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 461
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 463
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 465
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 467
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 469
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 471
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 473
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 475
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 477
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 479
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 481
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 483
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 485
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 487
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 489
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 491
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 493
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 495
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 497
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 499
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 501
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 503
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 505
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 507
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 509
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 511
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 513
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 515
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 517
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 519
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 521
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 523
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 525
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 527
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 529
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 531
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 533
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 535
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 537
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 539
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 541
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 543
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 546
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 548
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 550
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 552
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 554
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxGLCanvas')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxGLCanvas', _cor0)
end