module 'wxTreeEvent' ['allow'/1,
		      'getClientData'/1,
		      'getExtraLong'/1,
		      'getId'/1,
		      'getInt'/1,
		      'getItem'/1,
		      'getKeyCode'/1,
		      'getKeyEvent'/1,
		      'getLabel'/1,
		      'getOldItem'/1,
		      'getPoint'/1,
		      'getSelection'/1,
		      'getSkipped'/1,
		      'getString'/1,
		      'getTimestamp'/1,
		      'isAllowed'/1,
		      'isChecked'/1,
		      'isCommandEvent'/1,
		      'isEditCancelled'/1,
		      'isSelection'/1,
		      'module_info'/0,
		      'module_info'/1,
		      'parent_class'/1,
		      'resumePropagation'/2,
		      'setInt'/2,
		      'setString'/2,
		      'setToolTip'/2,
		      'shouldPropagate'/1,
		      'skip'/1,
		      'skip'/2,
		      'stopPropagation'/1,
		      'veto'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 45
		'export_type' =
		    %% Line 45
		    [{'wxTreeEvent',0}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{'wxTreeEvent',{'remote_type',52,[{'atom',52,'wx'}|[{'atom',52,'wx_object'}|[[]]]]},[]}],
		%% Line 54
		'spec' =
		    %% Line 54
		    [{{'getKeyCode',1},[{'type',54,'bounded_fun',[{'type',54,'fun',[{'type',54,'product',[{'var',54,'This'}]}|[{'type',54,'integer',[]}]]}|[[{'type',55,'constraint',[{'atom',55,'is_subtype'}|[[{'var',55,'This'}|[{'type',55,'wxTreeEvent',[]}]]]]}]]]}]}],
		%% Line 62
		'spec' =
		    %% Line 62
		    [{{'getItem',1},[{'type',62,'bounded_fun',[{'type',62,'fun',[{'type',62,'product',[{'var',62,'This'}]}|[{'type',62,'integer',[]}]]}|[[{'type',63,'constraint',[{'atom',63,'is_subtype'}|[[{'var',63,'This'}|[{'type',63,'wxTreeEvent',[]}]]]]}]]]}]}],
		%% Line 70
		'spec' =
		    %% Line 70
		    [{{'getKeyEvent',1},[{'type',70,'bounded_fun',[{'type',70,'fun',[{'type',70,'product',[{'var',70,'This'}]}|[{'remote_type',70,[{'atom',70,'wxKeyEvent'}|[{'atom',70,'wxKeyEvent'}|[[]]]]}]]}|[[{'type',71,'constraint',[{'atom',71,'is_subtype'}|[[{'var',71,'This'}|[{'type',71,'wxTreeEvent',[]}]]]]}]]]}]}],
		%% Line 78
		'spec' =
		    %% Line 78
		    [{{'getLabel',1},[{'type',78,'bounded_fun',[{'type',78,'fun',[{'type',78,'product',[{'var',78,'This'}]}|[{'remote_type',78,[{'atom',78,'unicode'}|[{'atom',78,'charlist'}|[[]]]]}]]}|[[{'type',79,'constraint',[{'atom',79,'is_subtype'}|[[{'var',79,'This'}|[{'type',79,'wxTreeEvent',[]}]]]]}]]]}]}],
		%% Line 86
		'spec' =
		    %% Line 86
		    [{{'getOldItem',1},[{'type',86,'bounded_fun',[{'type',86,'fun',[{'type',86,'product',[{'var',86,'This'}]}|[{'type',86,'integer',[]}]]}|[[{'type',87,'constraint',[{'atom',87,'is_subtype'}|[[{'var',87,'This'}|[{'type',87,'wxTreeEvent',[]}]]]]}]]]}]}],
		%% Line 94
		'spec' =
		    %% Line 94
		    [{{'getPoint',1},[{'type',94,'bounded_fun',[{'type',94,'fun',[{'type',94,'product',[{'var',94,'This'}]}|[{'type',94,'tuple',[{'ann_type',94,[{'var',94,'X'}|[{'type',94,'integer',[]}]]}|[{'ann_type',94,[{'var',94,'Y'}|[{'type',94,'integer',[]}]]}]]}]]}|[[{'type',95,'constraint',[{'atom',95,'is_subtype'}|[[{'var',95,'This'}|[{'type',95,'wxTreeEvent',[]}]]]]}]]]}]}],
		%% Line 102
		'spec' =
		    %% Line 102
		    [{{'isEditCancelled',1},[{'type',102,'bounded_fun',[{'type',102,'fun',[{'type',102,'product',[{'var',102,'This'}]}|[{'type',102,'boolean',[]}]]}|[[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'This'}|[{'type',103,'wxTreeEvent',[]}]]]]}]]]}]}],
		%% Line 110
		'spec' =
		    %% Line 110
		    [{{'setToolTip',2},[{'type',110,'bounded_fun',[{'type',110,'fun',[{'type',110,'product',[{'var',110,'This'}|[{'var',110,'ToolTip'}]]}|[{'atom',110,'ok'}]]}|[[{'type',111,'constraint',[{'atom',111,'is_subtype'}|[[{'var',111,'This'}|[{'type',111,'wxTreeEvent',[]}]]]]}|[{'type',111,'constraint',[{'atom',111,'is_subtype'}|[[{'var',111,'ToolTip'}|[{'remote_type',111,[{'atom',111,'unicode'}|[{'atom',111,'chardata'}|[[]]]]}]]]]}]]]]}]}]]
'parent_class'/1 =
    %% Line 47
    fun (_cor0) ->
	case _cor0 of
	  <'wxNotifyEvent'> when 'true' ->
	      'true'
	  %% Line 48
	  <'wxCommandEvent'> when 'true' ->
	      'true'
	  %% Line 49
	  <'wxEvent'> when 'true' ->
	      'true'
	  %% Line 50
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxTreeEvent'})
	end
'getKeyCode'/1 =
    %% Line 56
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 57
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreeEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreeEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 59
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 58
		      call 'wxe_util':'call'
			  (3397, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getKeyCode',1}}] )
	    -| ['compiler_generated'] )
	end
'getItem'/1 =
    %% Line 64
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 65
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreeEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreeEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 67
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 66
		      call 'wxe_util':'call'
			  (3398, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getItem',1}}] )
	    -| ['compiler_generated'] )
	end
'getKeyEvent'/1 =
    %% Line 72
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 73
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreeEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreeEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 75
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 74
		      call 'wxe_util':'call'
			  (3399, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getKeyEvent',1}}] )
	    -| ['compiler_generated'] )
	end
'getLabel'/1 =
    %% Line 80
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 81
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreeEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreeEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 83
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 82
		      call 'wxe_util':'call'
			  (3400, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLabel',1}}] )
	    -| ['compiler_generated'] )
	end
'getOldItem'/1 =
    %% Line 88
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 89
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreeEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreeEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 91
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 90
		      call 'wxe_util':'call'
			  (3401, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getOldItem',1}}] )
	    -| ['compiler_generated'] )
	end
'getPoint'/1 =
    %% Line 96
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 97
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreeEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreeEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 99
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 98
		      call 'wxe_util':'call'
			  (3402, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPoint',1}}] )
	    -| ['compiler_generated'] )
	end
'isEditCancelled'/1 =
    %% Line 104
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 105
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreeEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreeEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 107
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 106
		      call 'wxe_util':'call'
			  (3403, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isEditCancelled',1}}] )
	    -| ['compiler_generated'] )
	end
'setToolTip'/2 =
    %% Line 112
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},ToolTip>
	      when %% Line 113
		call 'erlang':'is_list'
		    (ToolTip) ->
	      do  %% Line 114
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreeEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreeEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <ToolTip_UC> =
		      %% Line 115
		      call 'unicode':'characters_to_binary'
			  ([ToolTip|[0]])
		  in  let <_cor10> =
			  %% Line 117
			  call 'erlang':'byte_size'
			      (ToolTip_UC)
		      in  let <_cor5> =
			      %% Line 117
			      call 'erlang':'byte_size'
				  (ToolTip_UC)
			  in  let <_cor6> =
				  %% Line 117
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 117
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 117
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 117
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 117
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<ToolTip_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 116
						  call 'wxe_util':'cast'
						      (3404, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setToolTip',2}}] )
	    -| ['compiler_generated'] )
	end
'veto'/1 =
    %% Line 121
    fun (_cor0) ->
	call 'wxNotifyEvent':'veto'
	    (_cor0)
'isAllowed'/1 =
    %% Line 123
    fun (_cor0) ->
	call 'wxNotifyEvent':'isAllowed'
	    (_cor0)
'allow'/1 =
    %% Line 125
    fun (_cor0) ->
	call 'wxNotifyEvent':'allow'
	    (_cor0)
'setString'/2 =
    %% Line 128
    fun (_cor1,_cor0) ->
	call 'wxCommandEvent':'setString'
	    (_cor1, _cor0)
'setInt'/2 =
    %% Line 130
    fun (_cor1,_cor0) ->
	call 'wxCommandEvent':'setInt'
	    (_cor1, _cor0)
'isSelection'/1 =
    %% Line 132
    fun (_cor0) ->
	call 'wxCommandEvent':'isSelection'
	    (_cor0)
'isChecked'/1 =
    %% Line 134
    fun (_cor0) ->
	call 'wxCommandEvent':'isChecked'
	    (_cor0)
'getString'/1 =
    %% Line 136
    fun (_cor0) ->
	call 'wxCommandEvent':'getString'
	    (_cor0)
'getSelection'/1 =
    %% Line 138
    fun (_cor0) ->
	call 'wxCommandEvent':'getSelection'
	    (_cor0)
'getInt'/1 =
    %% Line 140
    fun (_cor0) ->
	call 'wxCommandEvent':'getInt'
	    (_cor0)
'getExtraLong'/1 =
    %% Line 142
    fun (_cor0) ->
	call 'wxCommandEvent':'getExtraLong'
	    (_cor0)
'getClientData'/1 =
    %% Line 144
    fun (_cor0) ->
	call 'wxCommandEvent':'getClientData'
	    (_cor0)
'stopPropagation'/1 =
    %% Line 147
    fun (_cor0) ->
	call 'wxEvent':'stopPropagation'
	    (_cor0)
'skip'/2 =
    %% Line 149
    fun (_cor1,_cor0) ->
	call 'wxEvent':'skip'
	    (_cor1, _cor0)
'skip'/1 =
    %% Line 151
    fun (_cor0) ->
	call 'wxEvent':'skip'
	    (_cor0)
'shouldPropagate'/1 =
    %% Line 153
    fun (_cor0) ->
	call 'wxEvent':'shouldPropagate'
	    (_cor0)
'resumePropagation'/2 =
    %% Line 155
    fun (_cor1,_cor0) ->
	call 'wxEvent':'resumePropagation'
	    (_cor1, _cor0)
'isCommandEvent'/1 =
    %% Line 157
    fun (_cor0) ->
	call 'wxEvent':'isCommandEvent'
	    (_cor0)
'getTimestamp'/1 =
    %% Line 159
    fun (_cor0) ->
	call 'wxEvent':'getTimestamp'
	    (_cor0)
'getSkipped'/1 =
    %% Line 161
    fun (_cor0) ->
	call 'wxEvent':'getSkipped'
	    (_cor0)
'getId'/1 =
    %% Line 163
    fun (_cor0) ->
	call 'wxEvent':'getId'
	    (_cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxTreeEvent')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxTreeEvent', _cor0)
end