module 'wxDialog' ['cacheBestSize'/2,
		   'captureMouse'/1,
		   'center'/1,
		   'center'/2,
		   'centerOnParent'/1,
		   'centerOnParent'/2,
		   'centerOnScreen'/1,
		   'centerOnScreen'/2,
		   'centre'/1,
		   'centre'/2,
		   'centreOnParent'/1,
		   'centreOnParent'/2,
		   'centreOnScreen'/1,
		   'centreOnScreen'/2,
		   'clearBackground'/1,
		   'clientToScreen'/2,
		   'clientToScreen'/3,
		   'close'/1,
		   'close'/2,
		   'connect'/2,
		   'connect'/3,
		   'convertDialogToPixels'/2,
		   'convertPixelsToDialog'/2,
		   'create'/4,
		   'create'/5,
		   'createButtonSizer'/2,
		   'createStdDialogButtonSizer'/2,
		   'destroy'/1,
		   'destroyChildren'/1,
		   'disable'/1,
		   'disconnect'/1,
		   'disconnect'/2,
		   'disconnect'/3,
		   'enable'/1,
		   'enable'/2,
		   'endModal'/2,
		   'findWindow'/2,
		   'fit'/1,
		   'fitInside'/1,
		   'freeze'/1,
		   'getAcceleratorTable'/1,
		   'getAffirmativeId'/1,
		   'getBackgroundColour'/1,
		   'getBackgroundStyle'/1,
		   'getBestSize'/1,
		   'getCaret'/1,
		   'getCharHeight'/1,
		   'getCharWidth'/1,
		   'getChildren'/1,
		   'getClientSize'/1,
		   'getContainingSizer'/1,
		   'getCursor'/1,
		   'getDropTarget'/1,
		   'getEventHandler'/1,
		   'getExtraStyle'/1,
		   'getFont'/1,
		   'getForegroundColour'/1,
		   'getGrandParent'/1,
		   'getHandle'/1,
		   'getHelpText'/1,
		   'getIcon'/1,
		   'getIcons'/1,
		   'getId'/1,
		   'getLabel'/1,
		   'getMaxSize'/1,
		   'getMinSize'/1,
		   'getName'/1,
		   'getParent'/1,
		   'getPosition'/1,
		   'getRect'/1,
		   'getReturnCode'/1,
		   'getScreenPosition'/1,
		   'getScreenRect'/1,
		   'getScrollPos'/2,
		   'getScrollRange'/2,
		   'getScrollThumb'/2,
		   'getSize'/1,
		   'getSizer'/1,
		   'getTextExtent'/2,
		   'getTextExtent'/3,
		   'getTitle'/1,
		   'getToolTip'/1,
		   'getUpdateRegion'/1,
		   'getVirtualSize'/1,
		   'getWindowStyleFlag'/1,
		   'getWindowVariant'/1,
		   'hasCapture'/1,
		   'hasScrollbar'/2,
		   'hasTransparentBackground'/1,
		   'hide'/1,
		   'iconize'/1,
		   'iconize'/2,
		   'inheritAttributes'/1,
		   'initDialog'/1,
		   'invalidateBestSize'/1,
		   'isActive'/1,
		   'isEnabled'/1,
		   'isExposed'/2,
		   'isExposed'/3,
		   'isExposed'/5,
		   'isFullScreen'/1,
		   'isIconized'/1,
		   'isMaximized'/1,
		   'isModal'/1,
		   'isRetained'/1,
		   'isShown'/1,
		   'isTopLevel'/1,
		   'layout'/1,
		   'lineDown'/1,
		   'lineUp'/1,
		   'lower'/1,
		   'makeModal'/1,
		   'makeModal'/2,
		   'maximize'/1,
		   'maximize'/2,
		   'module_info'/0,
		   'module_info'/1,
		   'move'/2,
		   'move'/3,
		   'move'/4,
		   'moveAfterInTabOrder'/2,
		   'moveBeforeInTabOrder'/2,
		   'navigate'/1,
		   'navigate'/2,
		   'new'/0,
		   'new'/3,
		   'new'/4,
		   'pageDown'/1,
		   'pageUp'/1,
		   'parent_class'/1,
		   'popEventHandler'/1,
		   'popEventHandler'/2,
		   'popupMenu'/2,
		   'popupMenu'/3,
		   'popupMenu'/4,
		   'raise'/1,
		   'refresh'/1,
		   'refresh'/2,
		   'refreshRect'/2,
		   'refreshRect'/3,
		   'releaseMouse'/1,
		   'removeChild'/2,
		   'reparent'/2,
		   'requestUserAttention'/1,
		   'requestUserAttention'/2,
		   'screenToClient'/1,
		   'screenToClient'/2,
		   'scrollLines'/2,
		   'scrollPages'/2,
		   'scrollWindow'/3,
		   'scrollWindow'/4,
		   'setAcceleratorTable'/2,
		   'setAffirmativeId'/2,
		   'setAutoLayout'/2,
		   'setBackgroundColour'/2,
		   'setBackgroundStyle'/2,
		   'setCaret'/2,
		   'setClientSize'/2,
		   'setClientSize'/3,
		   'setContainingSizer'/2,
		   'setCursor'/2,
		   'setDropTarget'/2,
		   'setExtraStyle'/2,
		   'setFocus'/1,
		   'setFocusFromKbd'/1,
		   'setFont'/2,
		   'setForegroundColour'/2,
		   'setHelpText'/2,
		   'setIcon'/2,
		   'setIcons'/2,
		   'setId'/2,
		   'setLabel'/2,
		   'setMaxSize'/2,
		   'setMinSize'/2,
		   'setName'/2,
		   'setOwnBackgroundColour'/2,
		   'setOwnFont'/2,
		   'setOwnForegroundColour'/2,
		   'setPalette'/2,
		   'setReturnCode'/2,
		   'setScrollPos'/3,
		   'setScrollPos'/4,
		   'setScrollbar'/5,
		   'setScrollbar'/6,
		   'setShape'/2,
		   'setSize'/2,
		   'setSize'/3,
		   'setSize'/5,
		   'setSize'/6,
		   'setSizeHints'/2,
		   'setSizeHints'/3,
		   'setSizeHints'/4,
		   'setSizer'/2,
		   'setSizer'/3,
		   'setSizerAndFit'/2,
		   'setSizerAndFit'/3,
		   'setThemeEnabled'/2,
		   'setTitle'/2,
		   'setToolTip'/2,
		   'setVirtualSize'/2,
		   'setVirtualSize'/3,
		   'setVirtualSizeHints'/2,
		   'setVirtualSizeHints'/3,
		   'setVirtualSizeHints'/4,
		   'setWindowStyle'/2,
		   'setWindowStyleFlag'/2,
		   'setWindowVariant'/2,
		   'shouldInheritColours'/1,
		   'show'/1,
		   'show'/2,
		   'showFullScreen'/2,
		   'showFullScreen'/3,
		   'showModal'/1,
		   'thaw'/1,
		   'transferDataFromWindow'/1,
		   'transferDataToWindow'/1,
		   'update'/1,
		   'updateWindowUI'/1,
		   'updateWindowUI'/2,
		   'validate'/1,
		   'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 79
		'export_type' =
		    %% Line 79
		    [{'wxDialog',0}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{'wxDialog',{'remote_type',86,[{'atom',86,'wx'}|[{'atom',86,'wx_object'}|[[]]]]},[]}],
		%% Line 88
		'spec' =
		    %% Line 88
		    [{{'new',0},[{'type',88,'fun',[{'type',88,'product',[]}|[{'type',88,'wxDialog',[]}]]}]}],
		%% Line 94
		'spec' =
		    %% Line 94
		    [{{'new',3},[{'type',94,'bounded_fun',[{'type',94,'fun',[{'type',94,'product',[{'var',94,'Parent'}|[{'var',94,'Id'}|[{'var',94,'Title'}]]]}|[{'type',94,'wxDialog',[]}]]}|[[{'type',95,'constraint',[{'atom',95,'is_subtype'}|[[{'var',95,'Parent'}|[{'remote_type',95,[{'atom',95,'wxWindow'}|[{'atom',95,'wxWindow'}|[[]]]]}]]]]}|[{'type',95,'constraint',[{'atom',95,'is_subtype'}|[[{'var',95,'Id'}|[{'type',95,'integer',[]}]]]]}|[{'type',95,'constraint',[{'atom',95,'is_subtype'}|[[{'var',95,'Title'}|[{'remote_type',95,[{'atom',95,'unicode'}|[{'atom',95,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 102
		'spec' =
		    %% Line 102
		    [{{'new',4},[{'type',102,'bounded_fun',[{'type',102,'fun',[{'type',102,'product',[{'var',102,'Parent'}|[{'var',102,'Id'}|[{'var',102,'Title'}|[{'type',102,'list',[{'var',102,'Option'}]}]]]]}|[{'type',102,'wxDialog',[]}]]}|[[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'Parent'}|[{'remote_type',103,[{'atom',103,'wxWindow'}|[{'atom',103,'wxWindow'}|[[]]]]}]]]]}|[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'Id'}|[{'type',103,'integer',[]}]]]]}|[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'Title'}|[{'remote_type',103,[{'atom',103,'unicode'}|[{'atom',103,'chardata'}|[[]]]]}]]]]}|[{'type',104,'constraint',[{'atom',104,'is_subtype'}|[[{'var',104,'Option'}|[{'type',104,'union',[{'type',104,'tuple',[{'atom',104,'pos'}|[{'type',104,'tuple',[{'ann_type',104,[{'var',104,'X'}|[{'type',104,'integer',[]}]]}|[{'ann_type',104,[{'var',104,'Y'}|[{'type',104,'integer',[]}]]}]]}]]}|[{'type',105,'tuple',[{'atom',105,'size'}|[{'type',105,'tuple',[{'ann_type',105,[{'var',105,'W'}|[{'type',105,'integer',[]}]]}|[{'ann_type',105,[{'var',105,'H'}|[{'type',105,'integer',[]}]]}]]}]]}|[{'type',106,'tuple',[{'atom',106,'style'}|[{'type',106,'integer',[]}]]}]]]}]]]]}]]]]]]}]}],
		%% Line 120
		'spec' =
		    %% Line 120
		    [{{'create',4},[{'type',120,'bounded_fun',[{'type',120,'fun',[{'type',120,'product',[{'var',120,'This'}|[{'var',120,'Parent'}|[{'var',120,'Id'}|[{'var',120,'Title'}]]]]}|[{'type',120,'boolean',[]}]]}|[[{'type',121,'constraint',[{'atom',121,'is_subtype'}|[[{'var',121,'This'}|[{'type',121,'wxDialog',[]}]]]]}|[{'type',121,'constraint',[{'atom',121,'is_subtype'}|[[{'var',121,'Parent'}|[{'remote_type',121,[{'atom',121,'wxWindow'}|[{'atom',121,'wxWindow'}|[[]]]]}]]]]}|[{'type',121,'constraint',[{'atom',121,'is_subtype'}|[[{'var',121,'Id'}|[{'type',121,'integer',[]}]]]]}|[{'type',121,'constraint',[{'atom',121,'is_subtype'}|[[{'var',121,'Title'}|[{'remote_type',121,[{'atom',121,'unicode'}|[{'atom',121,'chardata'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 128
		'spec' =
		    %% Line 128
		    [{{'create',5},[{'type',128,'bounded_fun',[{'type',128,'fun',[{'type',128,'product',[{'var',128,'This'}|[{'var',128,'Parent'}|[{'var',128,'Id'}|[{'var',128,'Title'}|[{'type',128,'list',[{'var',128,'Option'}]}]]]]]}|[{'type',128,'boolean',[]}]]}|[[{'type',129,'constraint',[{'atom',129,'is_subtype'}|[[{'var',129,'This'}|[{'type',129,'wxDialog',[]}]]]]}|[{'type',129,'constraint',[{'atom',129,'is_subtype'}|[[{'var',129,'Parent'}|[{'remote_type',129,[{'atom',129,'wxWindow'}|[{'atom',129,'wxWindow'}|[[]]]]}]]]]}|[{'type',129,'constraint',[{'atom',129,'is_subtype'}|[[{'var',129,'Id'}|[{'type',129,'integer',[]}]]]]}|[{'type',129,'constraint',[{'atom',129,'is_subtype'}|[[{'var',129,'Title'}|[{'remote_type',129,[{'atom',129,'unicode'}|[{'atom',129,'chardata'}|[[]]]]}]]]]}|[{'type',130,'constraint',[{'atom',130,'is_subtype'}|[[{'var',130,'Option'}|[{'type',130,'union',[{'type',130,'tuple',[{'atom',130,'pos'}|[{'type',130,'tuple',[{'ann_type',130,[{'var',130,'X'}|[{'type',130,'integer',[]}]]}|[{'ann_type',130,[{'var',130,'Y'}|[{'type',130,'integer',[]}]]}]]}]]}|[{'type',131,'tuple',[{'atom',131,'size'}|[{'type',131,'tuple',[{'ann_type',131,[{'var',131,'W'}|[{'type',131,'integer',[]}]]}|[{'ann_type',131,[{'var',131,'H'}|[{'type',131,'integer',[]}]]}]]}]]}|[{'type',132,'tuple',[{'atom',132,'style'}|[{'type',132,'integer',[]}]]}]]]}]]]]}]]]]]]]}]}],
		%% Line 147
		'spec' =
		    %% Line 147
		    [{{'createButtonSizer',2},[{'type',147,'bounded_fun',[{'type',147,'fun',[{'type',147,'product',[{'var',147,'This'}|[{'var',147,'Flags'}]]}|[{'remote_type',147,[{'atom',147,'wxSizer'}|[{'atom',147,'wxSizer'}|[[]]]]}]]}|[[{'type',148,'constraint',[{'atom',148,'is_subtype'}|[[{'var',148,'This'}|[{'type',148,'wxDialog',[]}]]]]}|[{'type',148,'constraint',[{'atom',148,'is_subtype'}|[[{'var',148,'Flags'}|[{'type',148,'integer',[]}]]]]}]]]]}]}],
		%% Line 156
		'spec' =
		    %% Line 156
		    [{{'createStdDialogButtonSizer',2},[{'type',156,'bounded_fun',[{'type',156,'fun',[{'type',156,'product',[{'var',156,'This'}|[{'var',156,'Flags'}]]}|[{'remote_type',156,[{'atom',156,'wxStdDialogButtonSizer'}|[{'atom',156,'wxStdDialogButtonSizer'}|[[]]]]}]]}|[[{'type',157,'constraint',[{'atom',157,'is_subtype'}|[[{'var',157,'This'}|[{'type',157,'wxDialog',[]}]]]]}|[{'type',157,'constraint',[{'atom',157,'is_subtype'}|[[{'var',157,'Flags'}|[{'type',157,'integer',[]}]]]]}]]]]}]}],
		%% Line 165
		'spec' =
		    %% Line 165
		    [{{'endModal',2},[{'type',165,'bounded_fun',[{'type',165,'fun',[{'type',165,'product',[{'var',165,'This'}|[{'var',165,'RetCode'}]]}|[{'atom',165,'ok'}]]}|[[{'type',166,'constraint',[{'atom',166,'is_subtype'}|[[{'var',166,'This'}|[{'type',166,'wxDialog',[]}]]]]}|[{'type',166,'constraint',[{'atom',166,'is_subtype'}|[[{'var',166,'RetCode'}|[{'type',166,'integer',[]}]]]]}]]]]}]}],
		%% Line 174
		'spec' =
		    %% Line 174
		    [{{'getAffirmativeId',1},[{'type',174,'bounded_fun',[{'type',174,'fun',[{'type',174,'product',[{'var',174,'This'}]}|[{'type',174,'integer',[]}]]}|[[{'type',175,'constraint',[{'atom',175,'is_subtype'}|[[{'var',175,'This'}|[{'type',175,'wxDialog',[]}]]]]}]]]}]}],
		%% Line 182
		'spec' =
		    %% Line 182
		    [{{'getReturnCode',1},[{'type',182,'bounded_fun',[{'type',182,'fun',[{'type',182,'product',[{'var',182,'This'}]}|[{'type',182,'integer',[]}]]}|[[{'type',183,'constraint',[{'atom',183,'is_subtype'}|[[{'var',183,'This'}|[{'type',183,'wxDialog',[]}]]]]}]]]}]}],
		%% Line 190
		'spec' =
		    %% Line 190
		    [{{'isModal',1},[{'type',190,'bounded_fun',[{'type',190,'fun',[{'type',190,'product',[{'var',190,'This'}]}|[{'type',190,'boolean',[]}]]}|[[{'type',191,'constraint',[{'atom',191,'is_subtype'}|[[{'var',191,'This'}|[{'type',191,'wxDialog',[]}]]]]}]]]}]}],
		%% Line 198
		'spec' =
		    %% Line 198
		    [{{'setAffirmativeId',2},[{'type',198,'bounded_fun',[{'type',198,'fun',[{'type',198,'product',[{'var',198,'This'}|[{'var',198,'AffirmativeId'}]]}|[{'atom',198,'ok'}]]}|[[{'type',199,'constraint',[{'atom',199,'is_subtype'}|[[{'var',199,'This'}|[{'type',199,'wxDialog',[]}]]]]}|[{'type',199,'constraint',[{'atom',199,'is_subtype'}|[[{'var',199,'AffirmativeId'}|[{'type',199,'integer',[]}]]]]}]]]]}]}],
		%% Line 207
		'spec' =
		    %% Line 207
		    [{{'setReturnCode',2},[{'type',207,'bounded_fun',[{'type',207,'fun',[{'type',207,'product',[{'var',207,'This'}|[{'var',207,'ReturnCode'}]]}|[{'atom',207,'ok'}]]}|[[{'type',208,'constraint',[{'atom',208,'is_subtype'}|[[{'var',208,'This'}|[{'type',208,'wxDialog',[]}]]]]}|[{'type',208,'constraint',[{'atom',208,'is_subtype'}|[[{'var',208,'ReturnCode'}|[{'type',208,'integer',[]}]]]]}]]]]}]}],
		%% Line 216
		'spec' =
		    %% Line 216
		    [{{'show',1},[{'type',216,'bounded_fun',[{'type',216,'fun',[{'type',216,'product',[{'var',216,'This'}]}|[{'type',216,'boolean',[]}]]}|[[{'type',217,'constraint',[{'atom',217,'is_subtype'}|[[{'var',217,'This'}|[{'type',217,'wxDialog',[]}]]]]}]]]}]}],
		%% Line 224
		'spec' =
		    %% Line 224
		    [{{'show',2},[{'type',224,'bounded_fun',[{'type',224,'fun',[{'type',224,'product',[{'var',224,'This'}|[{'type',224,'list',[{'var',224,'Option'}]}]]}|[{'type',224,'boolean',[]}]]}|[[{'type',225,'constraint',[{'atom',225,'is_subtype'}|[[{'var',225,'This'}|[{'type',225,'wxDialog',[]}]]]]}|[{'type',226,'constraint',[{'atom',226,'is_subtype'}|[[{'var',226,'Option'}|[{'type',226,'tuple',[{'atom',226,'show'}|[{'type',226,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 237
		'spec' =
		    %% Line 237
		    [{{'showModal',1},[{'type',237,'bounded_fun',[{'type',237,'fun',[{'type',237,'product',[{'var',237,'This'}]}|[{'type',237,'integer',[]}]]}|[[{'type',238,'constraint',[{'atom',238,'is_subtype'}|[[{'var',238,'This'}|[{'type',238,'wxDialog',[]}]]]]}]]]}]}],
		%% Line 245
		'spec' =
		    %% Line 245
		    [{{'destroy',1},[{'type',245,'fun',[{'type',245,'product',[{'ann_type',245,[{'var',245,'This'}|[{'type',245,'wxDialog',[]}]]}]}|[{'atom',245,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 81
    fun (_cor0) ->
	case _cor0 of
	  <'wxTopLevelWindow'> when 'true' ->
	      'true'
	  %% Line 82
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 83
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 84
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxDialog'})
	end
'new'/0 =
    %% Line 89
    fun () ->
	%% Line 90
	call 'wxe_util':'construct'
	    (2183, %% Line 91
		   #{}#)
'new'/3 =
    %% Line 97
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor9,_cor10,_cor11},Id,Title>
	      when let <_cor3> =
		    %% Line 98
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor4> =
			%% Line 98
			call 'erlang':'is_list'
			    (Title)
		    in  %% Line 98
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor3, _cor4)
			  -| ['compiler_generated'] ) ->
	      %% Line 99
	      apply 'new'/4
		  (Parent, Id, Title, [])
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'new'/4 =
    %% Line 107
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor32},Id,Title,Options>
	      when %% Line 108
		try
		    let <_cor4> =
			call 'erlang':'is_integer'
			    (Id)
		    in  let <_cor5> =
			    call 'erlang':'is_list'
				(Title)
			in  let <_cor6> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor7> =
				    call 'erlang':'and'
					(_cor5, _cor6)
				in  call 'erlang':'and'
					(_cor4, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 109
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Title_UC> =
		      %% Line 110
		      call 'unicode':'characters_to_binary'
			  ([Title|[0]])
		  in  let <MOpts> =
			  %% Line 111
			  ( fun (_cor15,_cor14) ->
				case <_cor15,_cor14> of
				  <{'pos',{PosX,PosY}},Acc> when 'true' ->
				      let <_cor11> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<PosX>(32,1,'integer',['unsigned'|['native']]),
					    #<PosY>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor11|Acc]
				  %% Line 112
				  <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				      let <_cor12> =
					  #{#<2>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeW>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeH>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor12|Acc]
				  %% Line 113
				  <{'style',Style},Acc> when 'true' ->
				      let <_cor13> =
					  #{#<3>(32,1,'integer',['unsigned'|['native']]),
					    #<Style>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor13|Acc]
				  %% Line 114
				  <BadOpt,_cor33> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-new/4-fun-0-'}}] )
		      in  let <_cor19> =
			      %% Line 115
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 115
				  call 'erlang':'list_to_binary'
				      (_cor19)
			      in  let <_cor26> =
				      %% Line 117
				      call 'erlang':'byte_size'
					  (Title_UC)
				  in  let <_cor21> =
					  %% Line 117
					  call 'erlang':'byte_size'
					      (Title_UC)
				      in  let <_cor22> =
					      %% Line 117
					      call 'erlang':'+'
						  (4, _cor21)
					  in  let <_cor23> =
						  %% Line 117
						  call 'erlang':'band'
						      (_cor22, 7)
					      in  let <_cor24> =
						      %% Line 117
						      call 'erlang':'-'
							  (8, _cor23)
						  in  let <_cor25> =
							  %% Line 117
							  call 'erlang':'band'
							      (_cor24, 7)
						      in  let <_cor27> =
							      %% Line 117
							      #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
								#<Id>(32,1,'integer',['unsigned'|['native']]),
								#<_cor26>(32,1,'integer',['unsigned'|['native']]),
								#<Title_UC>('all',8,'binary',['unsigned'|['big']]),
								#<0>(_cor25,8,'integer',['unsigned'|['big']]),
								#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							  in  %% Line 116
							      call 'wxe_util':'construct'
								  (2182, _cor27)
	  ( <_cor31,_cor30,_cor29,_cor28> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor31,_cor30,_cor29,_cor28})
		  -| [{'function_name',{'new',4}}] )
	    -| ['compiler_generated'] )
	end
'create'/4 =
    %% Line 123
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor12,_cor13,_cor14},Parent = {'wx_ref',_cor15,_cor16,_cor17},Id,Title>
	      when let <_cor4> =
		    %% Line 124
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor5> =
			%% Line 124
			call 'erlang':'is_list'
			    (Title)
		    in  %% Line 124
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor4, _cor5)
			  -| ['compiler_generated'] ) ->
	      %% Line 125
	      apply 'create'/5
		  (This, Parent, Id, Title, [])
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'create',4}}] )
	    -| ['compiler_generated'] )
	end
'create'/5 =
    %% Line 133
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor36},{'wx_ref',ParentRef,ParentT,_cor37},Id,Title,Options>
	      when %% Line 134
		try
		    let <_cor5> =
			call 'erlang':'is_integer'
			    (Id)
		    in  let <_cor6> =
			    call 'erlang':'is_list'
				(Title)
			in  let <_cor7> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor8> =
				    call 'erlang':'and'
					(_cor6, _cor7)
				in  call 'erlang':'and'
					(_cor5, _cor8)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 135
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxDialog') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxDialog')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 136
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <Title_UC> =
			  %% Line 137
			  call 'unicode':'characters_to_binary'
			      ([Title|[0]])
		      in  let <MOpts> =
			      %% Line 138
			      ( fun (_cor18,_cor17) ->
				    case <_cor18,_cor17> of
				      <{'pos',{PosX,PosY}},Acc> when 'true' ->
					  let <_cor14> =
					      #{#<1>(32,1,'integer',['unsigned'|['native']]),
						#<PosX>(32,1,'integer',['unsigned'|['native']]),
						#<PosY>(32,1,'integer',['unsigned'|['native']]),
						#<0>(32,1,'integer',['unsigned'|['big']])}#
					  in  [_cor14|Acc]
				      %% Line 139
				      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
					  let <_cor15> =
					      #{#<2>(32,1,'integer',['unsigned'|['native']]),
						#<SizeW>(32,1,'integer',['unsigned'|['native']]),
						#<SizeH>(32,1,'integer',['unsigned'|['native']]),
						#<0>(32,1,'integer',['unsigned'|['big']])}#
					  in  [_cor15|Acc]
				      %% Line 140
				      <{'style',Style},Acc> when 'true' ->
					  let <_cor16> =
					      #{#<3>(32,1,'integer',['unsigned'|['native']]),
						#<Style>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor16|Acc]
				      %% Line 141
				      <BadOpt,_cor38> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-create/5-fun-0-'}}] )
			  in  let <_cor22> =
				  %% Line 142
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 142
				      call 'erlang':'list_to_binary'
					  (_cor22)
				  in  let <_cor29> =
					  %% Line 144
					  call 'erlang':'byte_size'
					      (Title_UC)
				      in  let <_cor24> =
					      %% Line 144
					      call 'erlang':'byte_size'
						  (Title_UC)
					  in  let <_cor25> =
						  %% Line 144
						  call 'erlang':'+'
						      (0, _cor24)
					      in  let <_cor26> =
						      %% Line 144
						      call 'erlang':'band'
							  (_cor25, 7)
						  in  let <_cor27> =
							  %% Line 144
							  call 'erlang':'-'
							      (8, _cor26)
						      in  let <_cor28> =
							      %% Line 144
							      call 'erlang':'band'
								  (_cor27, 7)
							  in  let <_cor30> =
								  %% Line 144
								  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								    #<ParentRef>(32,1,'integer',['unsigned'|['native']]),
								    #<Id>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor29>(32,1,'integer',['unsigned'|['native']]),
								    #<Title_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor28,8,'integer',['unsigned'|['big']]),
								    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							      in  %% Line 143
								  call 'wxe_util':'call'
								      (2186, _cor30)
	  ( <_cor35,_cor34,_cor33,_cor32,_cor31> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor35,_cor34,_cor33,_cor32,_cor31})
		  -| [{'function_name',{'create',5}}] )
	    -| ['compiler_generated'] )
	end
'createButtonSizer'/2 =
    %% Line 149
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Flags>
	      when %% Line 150
		call 'erlang':'is_integer'
		    (Flags) ->
	      do  %% Line 151
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxDialog') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxDialog')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 153
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Flags>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 152
		      call 'wxe_util':'call'
			  (2187, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'createButtonSizer',2}}] )
	    -| ['compiler_generated'] )
	end
'createStdDialogButtonSizer'/2 =
    %% Line 158
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Flags>
	      when %% Line 159
		call 'erlang':'is_integer'
		    (Flags) ->
	      do  %% Line 160
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxDialog') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxDialog')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 162
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Flags>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 161
		      call 'wxe_util':'call'
			  (2188, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'createStdDialogButtonSizer',2}}] )
	    -| ['compiler_generated'] )
	end
'endModal'/2 =
    %% Line 167
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},RetCode>
	      when %% Line 168
		call 'erlang':'is_integer'
		    (RetCode) ->
	      do  %% Line 169
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxDialog') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxDialog')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 171
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<RetCode>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 170
		      call 'wxe_util':'cast'
			  (2189, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'endModal',2}}] )
	    -| ['compiler_generated'] )
	end
'getAffirmativeId'/1 =
    %% Line 176
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 177
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxDialog') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxDialog')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 179
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 178
		      call 'wxe_util':'call'
			  (2190, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getAffirmativeId',1}}] )
	    -| ['compiler_generated'] )
	end
'getReturnCode'/1 =
    %% Line 184
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 185
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxDialog') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxDialog')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 187
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 186
		      call 'wxe_util':'call'
			  (2191, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getReturnCode',1}}] )
	    -| ['compiler_generated'] )
	end
'isModal'/1 =
    %% Line 192
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 193
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxDialog') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxDialog')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 195
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 194
		      call 'wxe_util':'call'
			  (2192, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isModal',1}}] )
	    -| ['compiler_generated'] )
	end
'setAffirmativeId'/2 =
    %% Line 200
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},AffirmativeId>
	      when %% Line 201
		call 'erlang':'is_integer'
		    (AffirmativeId) ->
	      do  %% Line 202
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxDialog') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxDialog')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 204
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<AffirmativeId>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 203
		      call 'wxe_util':'cast'
			  (2193, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setAffirmativeId',2}}] )
	    -| ['compiler_generated'] )
	end
'setReturnCode'/2 =
    %% Line 209
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},ReturnCode>
	      when %% Line 210
		call 'erlang':'is_integer'
		    (ReturnCode) ->
	      do  %% Line 211
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxDialog') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxDialog')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 213
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<ReturnCode>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 212
		      call 'wxe_util':'cast'
			  (2194, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setReturnCode',2}}] )
	    -| ['compiler_generated'] )
	end
'show'/1 =
    %% Line 219
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 220
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 221
	      apply 'show'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'show',1}}] )
	    -| ['compiler_generated'] )
	end
'show'/2 =
    %% Line 227
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 228
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 229
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxDialog') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxDialog')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 230
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'show',Show},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Show)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 231
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-show/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 232
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 232
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 234
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 233
				  call 'wxe_util':'call'
				      (2195, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'show',2}}] )
	    -| ['compiler_generated'] )
	end
'showModal'/1 =
    %% Line 239
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 240
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxDialog') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxDialog')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 242
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 241
		      call 'wxe_util':'call'
			  (2196, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'showModal',1}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 246
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 247
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxDialog') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxDialog')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 248
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 249
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'showFullScreen'/3 =
    %% Line 252
    fun (_cor2,_cor1,_cor0) ->
	call 'wxTopLevelWindow':'showFullScreen'
	    (_cor2, _cor1, _cor0)
'showFullScreen'/2 =
    %% Line 254
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'showFullScreen'
	    (_cor1, _cor0)
'setTitle'/2 =
    %% Line 256
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'setTitle'
	    (_cor1, _cor0)
'setShape'/2 =
    %% Line 258
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'setShape'
	    (_cor1, _cor0)
'centreOnScreen'/2 =
    %% Line 260
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'centreOnScreen'
	    (_cor1, _cor0)
'centreOnScreen'/1 =
    %% Line 262
    fun (_cor0) ->
	call 'wxTopLevelWindow':'centreOnScreen'
	    (_cor0)
'centerOnScreen'/2 =
    %% Line 264
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'centerOnScreen'
	    (_cor1, _cor0)
'centerOnScreen'/1 =
    %% Line 266
    fun (_cor0) ->
	call 'wxTopLevelWindow':'centerOnScreen'
	    (_cor0)
'setIcons'/2 =
    %% Line 268
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'setIcons'
	    (_cor1, _cor0)
'setIcon'/2 =
    %% Line 270
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'setIcon'
	    (_cor1, _cor0)
'requestUserAttention'/2 =
    %% Line 272
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'requestUserAttention'
	    (_cor1, _cor0)
'requestUserAttention'/1 =
    %% Line 274
    fun (_cor0) ->
	call 'wxTopLevelWindow':'requestUserAttention'
	    (_cor0)
'maximize'/2 =
    %% Line 276
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'maximize'
	    (_cor1, _cor0)
'maximize'/1 =
    %% Line 278
    fun (_cor0) ->
	call 'wxTopLevelWindow':'maximize'
	    (_cor0)
'isMaximized'/1 =
    %% Line 280
    fun (_cor0) ->
	call 'wxTopLevelWindow':'isMaximized'
	    (_cor0)
'isIconized'/1 =
    %% Line 282
    fun (_cor0) ->
	call 'wxTopLevelWindow':'isIconized'
	    (_cor0)
'isFullScreen'/1 =
    %% Line 284
    fun (_cor0) ->
	call 'wxTopLevelWindow':'isFullScreen'
	    (_cor0)
'iconize'/2 =
    %% Line 286
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'iconize'
	    (_cor1, _cor0)
'iconize'/1 =
    %% Line 288
    fun (_cor0) ->
	call 'wxTopLevelWindow':'iconize'
	    (_cor0)
'isActive'/1 =
    %% Line 290
    fun (_cor0) ->
	call 'wxTopLevelWindow':'isActive'
	    (_cor0)
'getTitle'/1 =
    %% Line 292
    fun (_cor0) ->
	call 'wxTopLevelWindow':'getTitle'
	    (_cor0)
'getIcons'/1 =
    %% Line 294
    fun (_cor0) ->
	call 'wxTopLevelWindow':'getIcons'
	    (_cor0)
'getIcon'/1 =
    %% Line 296
    fun (_cor0) ->
	call 'wxTopLevelWindow':'getIcon'
	    (_cor0)
'warpPointer'/3 =
    %% Line 299
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 301
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 303
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 305
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 307
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 309
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 311
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 313
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 315
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 317
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 319
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 321
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 323
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 325
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 327
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 329
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 331
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 333
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 335
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 337
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 339
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 341
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 343
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 345
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 347
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 349
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 351
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 353
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 355
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 357
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 359
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 361
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 363
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 365
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 367
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 369
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setLabel'/2 =
    %% Line 371
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setLabel'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 373
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 375
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 377
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 379
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 381
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 383
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 385
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 387
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 389
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 391
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 393
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 395
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 397
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 399
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 401
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 403
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 405
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 407
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 409
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 411
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 413
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 415
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 417
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 419
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 421
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 423
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 425
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 427
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 429
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 431
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 433
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 435
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 437
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 439
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 441
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 443
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 445
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 447
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 449
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 451
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 453
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 455
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 457
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 459
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 461
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 463
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 465
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 467
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 469
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 471
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 473
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 475
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 477
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 479
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 481
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 483
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 485
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 487
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 489
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 491
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 493
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 495
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 497
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 499
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 501
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 503
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 505
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 507
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 509
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 511
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 513
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 515
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 517
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 519
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 521
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 523
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 525
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 527
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 529
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 531
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 533
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 535
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 537
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 539
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 541
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 543
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 545
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 547
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 549
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 551
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getLabel'/1 =
    %% Line 553
    fun (_cor0) ->
	call 'wxWindow':'getLabel'
	    (_cor0)
'getId'/1 =
    %% Line 555
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 557
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 559
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 561
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 563
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 565
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 567
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 569
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 571
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 573
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 575
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 577
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 579
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 581
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 583
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 585
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 587
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 589
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 591
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 593
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 595
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 597
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 599
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 601
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 603
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 605
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 607
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 609
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 611
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 613
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 615
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 617
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 619
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 621
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 623
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 625
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 627
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 629
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 631
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 633
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 635
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 637
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 639
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 641
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 643
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 646
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 648
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 650
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 652
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 654
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxDialog')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxDialog', _cor0)
end