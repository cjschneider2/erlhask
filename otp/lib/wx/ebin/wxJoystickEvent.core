module 'wxJoystickEvent' ['buttonDown'/1,
			  'buttonDown'/2,
			  'buttonIsDown'/1,
			  'buttonIsDown'/2,
			  'buttonUp'/1,
			  'buttonUp'/2,
			  'getButtonChange'/1,
			  'getButtonState'/1,
			  'getId'/1,
			  'getJoystick'/1,
			  'getPosition'/1,
			  'getSkipped'/1,
			  'getTimestamp'/1,
			  'getZPosition'/1,
			  'isButton'/1,
			  'isCommandEvent'/1,
			  'isMove'/1,
			  'isZMove'/1,
			  'module_info'/0,
			  'module_info'/1,
			  'parent_class'/1,
			  'resumePropagation'/2,
			  'shouldPropagate'/1,
			  'skip'/1,
			  'skip'/2,
			  'stopPropagation'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 42
		'export_type' =
		    %% Line 42
		    [{'wxJoystickEvent',0}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{'wxJoystickEvent',{'remote_type',47,[{'atom',47,'wx'}|[{'atom',47,'wx_object'}|[[]]]]},[]}],
		%% Line 49
		'spec' =
		    %% Line 49
		    [{{'buttonDown',1},[{'type',49,'bounded_fun',[{'type',49,'fun',[{'type',49,'product',[{'var',49,'This'}]}|[{'type',49,'boolean',[]}]]}|[[{'type',50,'constraint',[{'atom',50,'is_subtype'}|[[{'var',50,'This'}|[{'type',50,'wxJoystickEvent',[]}]]]]}]]]}]}],
		%% Line 57
		'spec' =
		    %% Line 57
		    [{{'buttonDown',2},[{'type',57,'bounded_fun',[{'type',57,'fun',[{'type',57,'product',[{'var',57,'This'}|[{'type',57,'list',[{'var',57,'Option'}]}]]}|[{'type',57,'boolean',[]}]]}|[[{'type',58,'constraint',[{'atom',58,'is_subtype'}|[[{'var',58,'This'}|[{'type',58,'wxJoystickEvent',[]}]]]]}|[{'type',59,'constraint',[{'atom',59,'is_subtype'}|[[{'var',59,'Option'}|[{'type',59,'tuple',[{'atom',59,'but'}|[{'type',59,'integer',[]}]]}]]]]}]]]]}]}],
		%% Line 70
		'spec' =
		    %% Line 70
		    [{{'buttonIsDown',1},[{'type',70,'bounded_fun',[{'type',70,'fun',[{'type',70,'product',[{'var',70,'This'}]}|[{'type',70,'boolean',[]}]]}|[[{'type',71,'constraint',[{'atom',71,'is_subtype'}|[[{'var',71,'This'}|[{'type',71,'wxJoystickEvent',[]}]]]]}]]]}]}],
		%% Line 78
		'spec' =
		    %% Line 78
		    [{{'buttonIsDown',2},[{'type',78,'bounded_fun',[{'type',78,'fun',[{'type',78,'product',[{'var',78,'This'}|[{'type',78,'list',[{'var',78,'Option'}]}]]}|[{'type',78,'boolean',[]}]]}|[[{'type',79,'constraint',[{'atom',79,'is_subtype'}|[[{'var',79,'This'}|[{'type',79,'wxJoystickEvent',[]}]]]]}|[{'type',80,'constraint',[{'atom',80,'is_subtype'}|[[{'var',80,'Option'}|[{'type',80,'tuple',[{'atom',80,'but'}|[{'type',80,'integer',[]}]]}]]]]}]]]]}]}],
		%% Line 91
		'spec' =
		    %% Line 91
		    [{{'buttonUp',1},[{'type',91,'bounded_fun',[{'type',91,'fun',[{'type',91,'product',[{'var',91,'This'}]}|[{'type',91,'boolean',[]}]]}|[[{'type',92,'constraint',[{'atom',92,'is_subtype'}|[[{'var',92,'This'}|[{'type',92,'wxJoystickEvent',[]}]]]]}]]]}]}],
		%% Line 99
		'spec' =
		    %% Line 99
		    [{{'buttonUp',2},[{'type',99,'bounded_fun',[{'type',99,'fun',[{'type',99,'product',[{'var',99,'This'}|[{'type',99,'list',[{'var',99,'Option'}]}]]}|[{'type',99,'boolean',[]}]]}|[[{'type',100,'constraint',[{'atom',100,'is_subtype'}|[[{'var',100,'This'}|[{'type',100,'wxJoystickEvent',[]}]]]]}|[{'type',101,'constraint',[{'atom',101,'is_subtype'}|[[{'var',101,'Option'}|[{'type',101,'tuple',[{'atom',101,'but'}|[{'type',101,'integer',[]}]]}]]]]}]]]]}]}],
		%% Line 112
		'spec' =
		    %% Line 112
		    [{{'getButtonChange',1},[{'type',112,'bounded_fun',[{'type',112,'fun',[{'type',112,'product',[{'var',112,'This'}]}|[{'type',112,'integer',[]}]]}|[[{'type',113,'constraint',[{'atom',113,'is_subtype'}|[[{'var',113,'This'}|[{'type',113,'wxJoystickEvent',[]}]]]]}]]]}]}],
		%% Line 120
		'spec' =
		    %% Line 120
		    [{{'getButtonState',1},[{'type',120,'bounded_fun',[{'type',120,'fun',[{'type',120,'product',[{'var',120,'This'}]}|[{'type',120,'integer',[]}]]}|[[{'type',121,'constraint',[{'atom',121,'is_subtype'}|[[{'var',121,'This'}|[{'type',121,'wxJoystickEvent',[]}]]]]}]]]}]}],
		%% Line 128
		'spec' =
		    %% Line 128
		    [{{'getJoystick',1},[{'type',128,'bounded_fun',[{'type',128,'fun',[{'type',128,'product',[{'var',128,'This'}]}|[{'type',128,'integer',[]}]]}|[[{'type',129,'constraint',[{'atom',129,'is_subtype'}|[[{'var',129,'This'}|[{'type',129,'wxJoystickEvent',[]}]]]]}]]]}]}],
		%% Line 136
		'spec' =
		    %% Line 136
		    [{{'getPosition',1},[{'type',136,'bounded_fun',[{'type',136,'fun',[{'type',136,'product',[{'var',136,'This'}]}|[{'type',136,'tuple',[{'ann_type',136,[{'var',136,'X'}|[{'type',136,'integer',[]}]]}|[{'ann_type',136,[{'var',136,'Y'}|[{'type',136,'integer',[]}]]}]]}]]}|[[{'type',137,'constraint',[{'atom',137,'is_subtype'}|[[{'var',137,'This'}|[{'type',137,'wxJoystickEvent',[]}]]]]}]]]}]}],
		%% Line 144
		'spec' =
		    %% Line 144
		    [{{'getZPosition',1},[{'type',144,'bounded_fun',[{'type',144,'fun',[{'type',144,'product',[{'var',144,'This'}]}|[{'type',144,'integer',[]}]]}|[[{'type',145,'constraint',[{'atom',145,'is_subtype'}|[[{'var',145,'This'}|[{'type',145,'wxJoystickEvent',[]}]]]]}]]]}]}],
		%% Line 152
		'spec' =
		    %% Line 152
		    [{{'isButton',1},[{'type',152,'bounded_fun',[{'type',152,'fun',[{'type',152,'product',[{'var',152,'This'}]}|[{'type',152,'boolean',[]}]]}|[[{'type',153,'constraint',[{'atom',153,'is_subtype'}|[[{'var',153,'This'}|[{'type',153,'wxJoystickEvent',[]}]]]]}]]]}]}],
		%% Line 160
		'spec' =
		    %% Line 160
		    [{{'isMove',1},[{'type',160,'bounded_fun',[{'type',160,'fun',[{'type',160,'product',[{'var',160,'This'}]}|[{'type',160,'boolean',[]}]]}|[[{'type',161,'constraint',[{'atom',161,'is_subtype'}|[[{'var',161,'This'}|[{'type',161,'wxJoystickEvent',[]}]]]]}]]]}]}],
		%% Line 168
		'spec' =
		    %% Line 168
		    [{{'isZMove',1},[{'type',168,'bounded_fun',[{'type',168,'fun',[{'type',168,'product',[{'var',168,'This'}]}|[{'type',168,'boolean',[]}]]}|[[{'type',169,'constraint',[{'atom',169,'is_subtype'}|[[{'var',169,'This'}|[{'type',169,'wxJoystickEvent',[]}]]]]}]]]}]}]]
'parent_class'/1 =
    %% Line 44
    fun (_cor0) ->
	case _cor0 of
	  <'wxEvent'> when 'true' ->
	      'true'
	  %% Line 45
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxJoystickEvent'})
	end
'buttonDown'/1 =
    %% Line 52
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 53
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 54
	      apply 'buttonDown'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'buttonDown',1}}] )
	    -| ['compiler_generated'] )
	end
'buttonDown'/2 =
    %% Line 60
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor15},Options>
	      when %% Line 61
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 62
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxJoystickEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxJoystickEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 63
		      ( fun (_cor6,_cor5) ->
			    case <_cor6,_cor5> of
			      <{'but',But},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<But>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 64
			      <BadOpt,_cor16> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-buttonDown/2-fun-0-'}}] )
		  in  let <_cor10> =
			  %% Line 65
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 65
			      call 'erlang':'list_to_binary'
				  (_cor10)
			  in  let <_cor12> =
				  %% Line 67
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 66
				  call 'wxe_util':'call'
				      (2797, _cor12)
	  ( <_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13})
		  -| [{'function_name',{'buttonDown',2}}] )
	    -| ['compiler_generated'] )
	end
'buttonIsDown'/1 =
    %% Line 73
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 74
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 75
	      apply 'buttonIsDown'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'buttonIsDown',1}}] )
	    -| ['compiler_generated'] )
	end
'buttonIsDown'/2 =
    %% Line 81
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor15},Options>
	      when %% Line 82
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 83
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxJoystickEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxJoystickEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 84
		      ( fun (_cor6,_cor5) ->
			    case <_cor6,_cor5> of
			      <{'but',But},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<But>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 85
			      <BadOpt,_cor16> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-buttonIsDown/2-fun-0-'}}] )
		  in  let <_cor10> =
			  %% Line 86
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 86
			      call 'erlang':'list_to_binary'
				  (_cor10)
			  in  let <_cor12> =
				  %% Line 88
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 87
				  call 'wxe_util':'call'
				      (2798, _cor12)
	  ( <_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13})
		  -| [{'function_name',{'buttonIsDown',2}}] )
	    -| ['compiler_generated'] )
	end
'buttonUp'/1 =
    %% Line 94
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 95
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 96
	      apply 'buttonUp'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'buttonUp',1}}] )
	    -| ['compiler_generated'] )
	end
'buttonUp'/2 =
    %% Line 102
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor15},Options>
	      when %% Line 103
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 104
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxJoystickEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxJoystickEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 105
		      ( fun (_cor6,_cor5) ->
			    case <_cor6,_cor5> of
			      <{'but',But},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<But>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 106
			      <BadOpt,_cor16> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-buttonUp/2-fun-0-'}}] )
		  in  let <_cor10> =
			  %% Line 107
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 107
			      call 'erlang':'list_to_binary'
				  (_cor10)
			  in  let <_cor12> =
				  %% Line 109
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 108
				  call 'wxe_util':'call'
				      (2799, _cor12)
	  ( <_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13})
		  -| [{'function_name',{'buttonUp',2}}] )
	    -| ['compiler_generated'] )
	end
'getButtonChange'/1 =
    %% Line 114
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 115
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxJoystickEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxJoystickEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 117
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 116
		      call 'wxe_util':'call'
			  (2800, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getButtonChange',1}}] )
	    -| ['compiler_generated'] )
	end
'getButtonState'/1 =
    %% Line 122
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 123
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxJoystickEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxJoystickEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 125
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 124
		      call 'wxe_util':'call'
			  (2801, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getButtonState',1}}] )
	    -| ['compiler_generated'] )
	end
'getJoystick'/1 =
    %% Line 130
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 131
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxJoystickEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxJoystickEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 133
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 132
		      call 'wxe_util':'call'
			  (2802, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getJoystick',1}}] )
	    -| ['compiler_generated'] )
	end
'getPosition'/1 =
    %% Line 138
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 139
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxJoystickEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxJoystickEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 141
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 140
		      call 'wxe_util':'call'
			  (2803, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPosition',1}}] )
	    -| ['compiler_generated'] )
	end
'getZPosition'/1 =
    %% Line 146
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 147
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxJoystickEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxJoystickEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 149
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 148
		      call 'wxe_util':'call'
			  (2804, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getZPosition',1}}] )
	    -| ['compiler_generated'] )
	end
'isButton'/1 =
    %% Line 154
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 155
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxJoystickEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxJoystickEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 157
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 156
		      call 'wxe_util':'call'
			  (2805, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isButton',1}}] )
	    -| ['compiler_generated'] )
	end
'isMove'/1 =
    %% Line 162
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 163
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxJoystickEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxJoystickEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 165
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 164
		      call 'wxe_util':'call'
			  (2806, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isMove',1}}] )
	    -| ['compiler_generated'] )
	end
'isZMove'/1 =
    %% Line 170
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 171
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxJoystickEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxJoystickEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 173
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 172
		      call 'wxe_util':'call'
			  (2807, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isZMove',1}}] )
	    -| ['compiler_generated'] )
	end
'stopPropagation'/1 =
    %% Line 177
    fun (_cor0) ->
	call 'wxEvent':'stopPropagation'
	    (_cor0)
'skip'/2 =
    %% Line 179
    fun (_cor1,_cor0) ->
	call 'wxEvent':'skip'
	    (_cor1, _cor0)
'skip'/1 =
    %% Line 181
    fun (_cor0) ->
	call 'wxEvent':'skip'
	    (_cor0)
'shouldPropagate'/1 =
    %% Line 183
    fun (_cor0) ->
	call 'wxEvent':'shouldPropagate'
	    (_cor0)
'resumePropagation'/2 =
    %% Line 185
    fun (_cor1,_cor0) ->
	call 'wxEvent':'resumePropagation'
	    (_cor1, _cor0)
'isCommandEvent'/1 =
    %% Line 187
    fun (_cor0) ->
	call 'wxEvent':'isCommandEvent'
	    (_cor0)
'getTimestamp'/1 =
    %% Line 189
    fun (_cor0) ->
	call 'wxEvent':'getTimestamp'
	    (_cor0)
'getSkipped'/1 =
    %% Line 191
    fun (_cor0) ->
	call 'wxEvent':'getSkipped'
	    (_cor0)
'getId'/1 =
    %% Line 193
    fun (_cor0) ->
	call 'wxEvent':'getId'
	    (_cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxJoystickEvent')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxJoystickEvent', _cor0)
end