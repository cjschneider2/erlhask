module 'wxScrolledWindow' ['cacheBestSize'/2,
			   'calcScrolledPosition'/2,
			   'calcScrolledPosition'/3,
			   'calcUnscrolledPosition'/2,
			   'calcUnscrolledPosition'/3,
			   'captureMouse'/1,
			   'center'/1,
			   'center'/2,
			   'centerOnParent'/1,
			   'centerOnParent'/2,
			   'centre'/1,
			   'centre'/2,
			   'centreOnParent'/1,
			   'centreOnParent'/2,
			   'clearBackground'/1,
			   'clientToScreen'/2,
			   'clientToScreen'/3,
			   'close'/1,
			   'close'/2,
			   'connect'/2,
			   'connect'/3,
			   'convertDialogToPixels'/2,
			   'convertPixelsToDialog'/2,
			   'destroy'/1,
			   'destroyChildren'/1,
			   'disable'/1,
			   'disconnect'/1,
			   'disconnect'/2,
			   'disconnect'/3,
			   'doPrepareDC'/2,
			   'enable'/1,
			   'enable'/2,
			   'enableScrolling'/3,
			   'findWindow'/2,
			   'fit'/1,
			   'fitInside'/1,
			   'freeze'/1,
			   'getAcceleratorTable'/1,
			   'getBackgroundColour'/1,
			   'getBackgroundStyle'/1,
			   'getBestSize'/1,
			   'getCaret'/1,
			   'getCharHeight'/1,
			   'getCharWidth'/1,
			   'getChildren'/1,
			   'getClientSize'/1,
			   'getContainingSizer'/1,
			   'getCursor'/1,
			   'getDropTarget'/1,
			   'getEventHandler'/1,
			   'getExtraStyle'/1,
			   'getFont'/1,
			   'getForegroundColour'/1,
			   'getGrandParent'/1,
			   'getHandle'/1,
			   'getHelpText'/1,
			   'getId'/1,
			   'getLabel'/1,
			   'getMaxSize'/1,
			   'getMinSize'/1,
			   'getName'/1,
			   'getParent'/1,
			   'getPosition'/1,
			   'getRect'/1,
			   'getScreenPosition'/1,
			   'getScreenRect'/1,
			   'getScrollPixelsPerUnit'/1,
			   'getScrollPos'/2,
			   'getScrollRange'/2,
			   'getScrollThumb'/2,
			   'getSize'/1,
			   'getSizer'/1,
			   'getTextExtent'/2,
			   'getTextExtent'/3,
			   'getToolTip'/1,
			   'getUpdateRegion'/1,
			   'getViewStart'/1,
			   'getVirtualSize'/1,
			   'getWindowStyleFlag'/1,
			   'getWindowVariant'/1,
			   'hasCapture'/1,
			   'hasScrollbar'/2,
			   'hasTransparentBackground'/1,
			   'hide'/1,
			   'inheritAttributes'/1,
			   'initDialog'/1,
			   'invalidateBestSize'/1,
			   'isEnabled'/1,
			   'isExposed'/2,
			   'isExposed'/3,
			   'isExposed'/5,
			   'isRetained'/1,
			   'isShown'/1,
			   'isTopLevel'/1,
			   'layout'/1,
			   'lineDown'/1,
			   'lineUp'/1,
			   'lower'/1,
			   'makeModal'/1,
			   'makeModal'/2,
			   'module_info'/0,
			   'module_info'/1,
			   'move'/2,
			   'move'/3,
			   'move'/4,
			   'moveAfterInTabOrder'/2,
			   'moveBeforeInTabOrder'/2,
			   'navigate'/1,
			   'navigate'/2,
			   'new'/0,
			   'new'/1,
			   'new'/2,
			   'pageDown'/1,
			   'pageUp'/1,
			   'parent_class'/1,
			   'popEventHandler'/1,
			   'popEventHandler'/2,
			   'popupMenu'/2,
			   'popupMenu'/3,
			   'popupMenu'/4,
			   'prepareDC'/2,
			   'raise'/1,
			   'refresh'/1,
			   'refresh'/2,
			   'refreshRect'/2,
			   'refreshRect'/3,
			   'releaseMouse'/1,
			   'removeChild'/2,
			   'reparent'/2,
			   'screenToClient'/1,
			   'screenToClient'/2,
			   'scroll'/3,
			   'scrollLines'/2,
			   'scrollPages'/2,
			   'scrollWindow'/3,
			   'scrollWindow'/4,
			   'setAcceleratorTable'/2,
			   'setAutoLayout'/2,
			   'setBackgroundColour'/2,
			   'setBackgroundStyle'/2,
			   'setCaret'/2,
			   'setClientSize'/2,
			   'setClientSize'/3,
			   'setContainingSizer'/2,
			   'setCursor'/2,
			   'setDropTarget'/2,
			   'setExtraStyle'/2,
			   'setFocus'/1,
			   'setFocusFromKbd'/1,
			   'setFocusIgnoringChildren'/1,
			   'setFont'/2,
			   'setForegroundColour'/2,
			   'setHelpText'/2,
			   'setId'/2,
			   'setLabel'/2,
			   'setMaxSize'/2,
			   'setMinSize'/2,
			   'setName'/2,
			   'setOwnBackgroundColour'/2,
			   'setOwnFont'/2,
			   'setOwnForegroundColour'/2,
			   'setPalette'/2,
			   'setScrollPos'/3,
			   'setScrollPos'/4,
			   'setScrollRate'/3,
			   'setScrollbar'/5,
			   'setScrollbar'/6,
			   'setScrollbars'/5,
			   'setScrollbars'/6,
			   'setSize'/2,
			   'setSize'/3,
			   'setSize'/5,
			   'setSize'/6,
			   'setSizeHints'/2,
			   'setSizeHints'/3,
			   'setSizeHints'/4,
			   'setSizer'/2,
			   'setSizer'/3,
			   'setSizerAndFit'/2,
			   'setSizerAndFit'/3,
			   'setTargetWindow'/2,
			   'setThemeEnabled'/2,
			   'setToolTip'/2,
			   'setVirtualSize'/2,
			   'setVirtualSize'/3,
			   'setVirtualSizeHints'/2,
			   'setVirtualSizeHints'/3,
			   'setVirtualSizeHints'/4,
			   'setWindowStyle'/2,
			   'setWindowStyleFlag'/2,
			   'setWindowVariant'/2,
			   'shouldInheritColours'/1,
			   'show'/1,
			   'show'/2,
			   'thaw'/1,
			   'transferDataFromWindow'/1,
			   'transferDataToWindow'/1,
			   'update'/1,
			   'updateWindowUI'/1,
			   'updateWindowUI'/2,
			   'validate'/1,
			   'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 75
		'export_type' =
		    %% Line 75
		    [{'wxScrolledWindow',0}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{'wxScrolledWindow',{'remote_type',82,[{'atom',82,'wx'}|[{'atom',82,'wx_object'}|[[]]]]},[]}],
		%% Line 84
		'spec' =
		    %% Line 84
		    [{{'new',0},[{'type',84,'fun',[{'type',84,'product',[]}|[{'type',84,'wxScrolledWindow',[]}]]}]}],
		%% Line 90
		'spec' =
		    %% Line 90
		    [{{'new',1},[{'type',90,'bounded_fun',[{'type',90,'fun',[{'type',90,'product',[{'var',90,'Parent'}]}|[{'type',90,'wxScrolledWindow',[]}]]}|[[{'type',91,'constraint',[{'atom',91,'is_subtype'}|[[{'var',91,'Parent'}|[{'remote_type',91,[{'atom',91,'wxWindow'}|[{'atom',91,'wxWindow'}|[[]]]]}]]]]}]]]}]}],
		%% Line 98
		'spec' =
		    %% Line 98
		    [{{'new',2},[{'type',98,'bounded_fun',[{'type',98,'fun',[{'type',98,'product',[{'var',98,'Parent'}|[{'type',98,'list',[{'var',98,'Option'}]}]]}|[{'type',98,'wxScrolledWindow',[]}]]}|[[{'type',99,'constraint',[{'atom',99,'is_subtype'}|[[{'var',99,'Parent'}|[{'remote_type',99,[{'atom',99,'wxWindow'}|[{'atom',99,'wxWindow'}|[[]]]]}]]]]}|[{'type',100,'constraint',[{'atom',100,'is_subtype'}|[[{'var',100,'Option'}|[{'type',100,'union',[{'type',100,'tuple',[{'atom',100,'winid'}|[{'type',100,'integer',[]}]]}|[{'type',101,'tuple',[{'atom',101,'pos'}|[{'type',101,'tuple',[{'ann_type',101,[{'var',101,'X'}|[{'type',101,'integer',[]}]]}|[{'ann_type',101,[{'var',101,'Y'}|[{'type',101,'integer',[]}]]}]]}]]}|[{'type',102,'tuple',[{'atom',102,'size'}|[{'type',102,'tuple',[{'ann_type',102,[{'var',102,'W'}|[{'type',102,'integer',[]}]]}|[{'ann_type',102,[{'var',102,'H'}|[{'type',102,'integer',[]}]]}]]}]]}|[{'type',103,'tuple',[{'atom',103,'style'}|[{'type',103,'integer',[]}]]}]]]]}]]]]}]]]]}]}],
		%% Line 117
		'spec' =
		    %% Line 117
		    [{{'calcScrolledPosition',2},[{'type',117,'bounded_fun',[{'type',117,'fun',[{'type',117,'product',[{'var',117,'This'}|[{'var',117,'Pt'}]]}|[{'type',117,'tuple',[{'ann_type',117,[{'var',117,'X'}|[{'type',117,'integer',[]}]]}|[{'ann_type',117,[{'var',117,'Y'}|[{'type',117,'integer',[]}]]}]]}]]}|[[{'type',118,'constraint',[{'atom',118,'is_subtype'}|[[{'var',118,'This'}|[{'type',118,'wxScrolledWindow',[]}]]]]}|[{'type',118,'constraint',[{'atom',118,'is_subtype'}|[[{'var',118,'Pt'}|[{'type',118,'tuple',[{'ann_type',118,[{'var',118,'X'}|[{'type',118,'integer',[]}]]}|[{'ann_type',118,[{'var',118,'Y'}|[{'type',118,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 126
		'spec' =
		    %% Line 126
		    [{{'calcScrolledPosition',3},[{'type',126,'bounded_fun',[{'type',126,'fun',[{'type',126,'product',[{'var',126,'This'}|[{'var',126,'X'}|[{'var',126,'Y'}]]]}|[{'type',126,'tuple',[{'ann_type',126,[{'var',126,'Xx'}|[{'type',126,'integer',[]}]]}|[{'ann_type',126,[{'var',126,'Yy'}|[{'type',126,'integer',[]}]]}]]}]]}|[[{'type',127,'constraint',[{'atom',127,'is_subtype'}|[[{'var',127,'This'}|[{'type',127,'wxScrolledWindow',[]}]]]]}|[{'type',127,'constraint',[{'atom',127,'is_subtype'}|[[{'var',127,'X'}|[{'type',127,'integer',[]}]]]]}|[{'type',127,'constraint',[{'atom',127,'is_subtype'}|[[{'var',127,'Y'}|[{'type',127,'integer',[]}]]]]}]]]]]}]}],
		%% Line 135
		'spec' =
		    %% Line 135
		    [{{'calcUnscrolledPosition',2},[{'type',135,'bounded_fun',[{'type',135,'fun',[{'type',135,'product',[{'var',135,'This'}|[{'var',135,'Pt'}]]}|[{'type',135,'tuple',[{'ann_type',135,[{'var',135,'X'}|[{'type',135,'integer',[]}]]}|[{'ann_type',135,[{'var',135,'Y'}|[{'type',135,'integer',[]}]]}]]}]]}|[[{'type',136,'constraint',[{'atom',136,'is_subtype'}|[[{'var',136,'This'}|[{'type',136,'wxScrolledWindow',[]}]]]]}|[{'type',136,'constraint',[{'atom',136,'is_subtype'}|[[{'var',136,'Pt'}|[{'type',136,'tuple',[{'ann_type',136,[{'var',136,'X'}|[{'type',136,'integer',[]}]]}|[{'ann_type',136,[{'var',136,'Y'}|[{'type',136,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 144
		'spec' =
		    %% Line 144
		    [{{'calcUnscrolledPosition',3},[{'type',144,'bounded_fun',[{'type',144,'fun',[{'type',144,'product',[{'var',144,'This'}|[{'var',144,'X'}|[{'var',144,'Y'}]]]}|[{'type',144,'tuple',[{'ann_type',144,[{'var',144,'Xx'}|[{'type',144,'integer',[]}]]}|[{'ann_type',144,[{'var',144,'Yy'}|[{'type',144,'integer',[]}]]}]]}]]}|[[{'type',145,'constraint',[{'atom',145,'is_subtype'}|[[{'var',145,'This'}|[{'type',145,'wxScrolledWindow',[]}]]]]}|[{'type',145,'constraint',[{'atom',145,'is_subtype'}|[[{'var',145,'X'}|[{'type',145,'integer',[]}]]]]}|[{'type',145,'constraint',[{'atom',145,'is_subtype'}|[[{'var',145,'Y'}|[{'type',145,'integer',[]}]]]]}]]]]]}]}],
		%% Line 153
		'spec' =
		    %% Line 153
		    [{{'enableScrolling',3},[{'type',153,'bounded_fun',[{'type',153,'fun',[{'type',153,'product',[{'var',153,'This'}|[{'var',153,'X_scrolling'}|[{'var',153,'Y_scrolling'}]]]}|[{'atom',153,'ok'}]]}|[[{'type',154,'constraint',[{'atom',154,'is_subtype'}|[[{'var',154,'This'}|[{'type',154,'wxScrolledWindow',[]}]]]]}|[{'type',154,'constraint',[{'atom',154,'is_subtype'}|[[{'var',154,'X_scrolling'}|[{'type',154,'boolean',[]}]]]]}|[{'type',154,'constraint',[{'atom',154,'is_subtype'}|[[{'var',154,'Y_scrolling'}|[{'type',154,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 162
		'spec' =
		    %% Line 162
		    [{{'getScrollPixelsPerUnit',1},[{'type',162,'bounded_fun',[{'type',162,'fun',[{'type',162,'product',[{'var',162,'This'}]}|[{'type',162,'tuple',[{'ann_type',162,[{'var',162,'PixelsPerUnitX'}|[{'type',162,'integer',[]}]]}|[{'ann_type',162,[{'var',162,'PixelsPerUnitY'}|[{'type',162,'integer',[]}]]}]]}]]}|[[{'type',163,'constraint',[{'atom',163,'is_subtype'}|[[{'var',163,'This'}|[{'type',163,'wxScrolledWindow',[]}]]]]}]]]}]}],
		%% Line 170
		'spec' =
		    %% Line 170
		    [{{'getViewStart',1},[{'type',170,'bounded_fun',[{'type',170,'fun',[{'type',170,'product',[{'var',170,'This'}]}|[{'type',170,'tuple',[{'ann_type',170,[{'var',170,'X'}|[{'type',170,'integer',[]}]]}|[{'ann_type',170,[{'var',170,'Y'}|[{'type',170,'integer',[]}]]}]]}]]}|[[{'type',171,'constraint',[{'atom',171,'is_subtype'}|[[{'var',171,'This'}|[{'type',171,'wxScrolledWindow',[]}]]]]}]]]}]}],
		%% Line 178
		'spec' =
		    %% Line 178
		    [{{'doPrepareDC',2},[{'type',178,'bounded_fun',[{'type',178,'fun',[{'type',178,'product',[{'var',178,'This'}|[{'var',178,'Dc'}]]}|[{'atom',178,'ok'}]]}|[[{'type',179,'constraint',[{'atom',179,'is_subtype'}|[[{'var',179,'This'}|[{'type',179,'wxScrolledWindow',[]}]]]]}|[{'type',179,'constraint',[{'atom',179,'is_subtype'}|[[{'var',179,'Dc'}|[{'remote_type',179,[{'atom',179,'wxDC'}|[{'atom',179,'wxDC'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 187
		'spec' =
		    %% Line 187
		    [{{'prepareDC',2},[{'type',187,'bounded_fun',[{'type',187,'fun',[{'type',187,'product',[{'var',187,'This'}|[{'var',187,'Dc'}]]}|[{'atom',187,'ok'}]]}|[[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'This'}|[{'type',188,'wxScrolledWindow',[]}]]]]}|[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'Dc'}|[{'remote_type',188,[{'atom',188,'wxDC'}|[{'atom',188,'wxDC'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 196
		'spec' =
		    %% Line 196
		    [{{'scroll',3},[{'type',196,'bounded_fun',[{'type',196,'fun',[{'type',196,'product',[{'var',196,'This'}|[{'var',196,'X'}|[{'var',196,'Y'}]]]}|[{'atom',196,'ok'}]]}|[[{'type',197,'constraint',[{'atom',197,'is_subtype'}|[[{'var',197,'This'}|[{'type',197,'wxScrolledWindow',[]}]]]]}|[{'type',197,'constraint',[{'atom',197,'is_subtype'}|[[{'var',197,'X'}|[{'type',197,'integer',[]}]]]]}|[{'type',197,'constraint',[{'atom',197,'is_subtype'}|[[{'var',197,'Y'}|[{'type',197,'integer',[]}]]]]}]]]]]}]}],
		%% Line 205
		'spec' =
		    %% Line 205
		    [{{'setScrollbars',5},[{'type',205,'bounded_fun',[{'type',205,'fun',[{'type',205,'product',[{'var',205,'This'}|[{'var',205,'PixelsPerUnitX'}|[{'var',205,'PixelsPerUnitY'}|[{'var',205,'NoUnitsX'}|[{'var',205,'NoUnitsY'}]]]]]}|[{'atom',205,'ok'}]]}|[[{'type',206,'constraint',[{'atom',206,'is_subtype'}|[[{'var',206,'This'}|[{'type',206,'wxScrolledWindow',[]}]]]]}|[{'type',206,'constraint',[{'atom',206,'is_subtype'}|[[{'var',206,'PixelsPerUnitX'}|[{'type',206,'integer',[]}]]]]}|[{'type',206,'constraint',[{'atom',206,'is_subtype'}|[[{'var',206,'PixelsPerUnitY'}|[{'type',206,'integer',[]}]]]]}|[{'type',206,'constraint',[{'atom',206,'is_subtype'}|[[{'var',206,'NoUnitsX'}|[{'type',206,'integer',[]}]]]]}|[{'type',206,'constraint',[{'atom',206,'is_subtype'}|[[{'var',206,'NoUnitsY'}|[{'type',206,'integer',[]}]]]]}]]]]]]]}]}],
		%% Line 213
		'spec' =
		    %% Line 213
		    [{{'setScrollbars',6},[{'type',213,'bounded_fun',[{'type',213,'fun',[{'type',213,'product',[{'var',213,'This'}|[{'var',213,'PixelsPerUnitX'}|[{'var',213,'PixelsPerUnitY'}|[{'var',213,'NoUnitsX'}|[{'var',213,'NoUnitsY'}|[{'type',213,'list',[{'var',213,'Option'}]}]]]]]]}|[{'atom',213,'ok'}]]}|[[{'type',214,'constraint',[{'atom',214,'is_subtype'}|[[{'var',214,'This'}|[{'type',214,'wxScrolledWindow',[]}]]]]}|[{'type',214,'constraint',[{'atom',214,'is_subtype'}|[[{'var',214,'PixelsPerUnitX'}|[{'type',214,'integer',[]}]]]]}|[{'type',214,'constraint',[{'atom',214,'is_subtype'}|[[{'var',214,'PixelsPerUnitY'}|[{'type',214,'integer',[]}]]]]}|[{'type',214,'constraint',[{'atom',214,'is_subtype'}|[[{'var',214,'NoUnitsX'}|[{'type',214,'integer',[]}]]]]}|[{'type',214,'constraint',[{'atom',214,'is_subtype'}|[[{'var',214,'NoUnitsY'}|[{'type',214,'integer',[]}]]]]}|[{'type',215,'constraint',[{'atom',215,'is_subtype'}|[[{'var',215,'Option'}|[{'type',215,'union',[{'type',215,'tuple',[{'atom',215,'xPos'}|[{'type',215,'integer',[]}]]}|[{'type',216,'tuple',[{'atom',216,'yPos'}|[{'type',216,'integer',[]}]]}|[{'type',217,'tuple',[{'atom',217,'noRefresh'}|[{'type',217,'boolean',[]}]]}]]]}]]]]}]]]]]]]]}]}],
		%% Line 230
		'spec' =
		    %% Line 230
		    [{{'setScrollRate',3},[{'type',230,'bounded_fun',[{'type',230,'fun',[{'type',230,'product',[{'var',230,'This'}|[{'var',230,'Xstep'}|[{'var',230,'Ystep'}]]]}|[{'atom',230,'ok'}]]}|[[{'type',231,'constraint',[{'atom',231,'is_subtype'}|[[{'var',231,'This'}|[{'type',231,'wxScrolledWindow',[]}]]]]}|[{'type',231,'constraint',[{'atom',231,'is_subtype'}|[[{'var',231,'Xstep'}|[{'type',231,'integer',[]}]]]]}|[{'type',231,'constraint',[{'atom',231,'is_subtype'}|[[{'var',231,'Ystep'}|[{'type',231,'integer',[]}]]]]}]]]]]}]}],
		%% Line 239
		'spec' =
		    %% Line 239
		    [{{'setTargetWindow',2},[{'type',239,'bounded_fun',[{'type',239,'fun',[{'type',239,'product',[{'var',239,'This'}|[{'var',239,'Target'}]]}|[{'atom',239,'ok'}]]}|[[{'type',240,'constraint',[{'atom',240,'is_subtype'}|[[{'var',240,'This'}|[{'type',240,'wxScrolledWindow',[]}]]]]}|[{'type',240,'constraint',[{'atom',240,'is_subtype'}|[[{'var',240,'Target'}|[{'remote_type',240,[{'atom',240,'wxWindow'}|[{'atom',240,'wxWindow'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 248
		'spec' =
		    %% Line 248
		    [{{'destroy',1},[{'type',248,'fun',[{'type',248,'product',[{'ann_type',248,[{'var',248,'This'}|[{'type',248,'wxScrolledWindow',[]}]]}]}|[{'atom',248,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 77
    fun (_cor0) ->
	case _cor0 of
	  <'wxPanel'> when 'true' ->
	      'true'
	  %% Line 78
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 79
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 80
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxScrolledWindow'})
	end
'new'/0 =
    %% Line 85
    fun () ->
	%% Line 86
	call 'wxe_util':'construct'
	    (338, %% Line 87
		  #{}#)
'new'/1 =
    %% Line 93
    fun (_cor0) ->
	case _cor0 of
	  <Parent = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 94
						       ( 'true'
							 -| ['compiler_generated'] ) ->
	      %% Line 95
	      apply 'new'/2
		  (Parent, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'new'/2 =
    %% Line 104
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor18},Options>
	      when %% Line 105
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 106
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 107
		      ( fun (_cor9,_cor8) ->
			    case <_cor9,_cor8> of
			      <{'winid',Winid},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<Winid>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 108
			      <{'pos',{PosX,PosY}},Acc> when 'true' ->
				  let <_cor5> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<PosX>(32,1,'integer',['unsigned'|['native']]),
					#<PosY>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor5|Acc]
			      %% Line 109
			      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				  let <_cor6> =
				      #{#<3>(32,1,'integer',['unsigned'|['native']]),
					#<SizeW>(32,1,'integer',['unsigned'|['native']]),
					#<SizeH>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor6|Acc]
			      %% Line 110
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor7> =
				      #{#<4>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor7|Acc]
			      %% Line 111
			      <BadOpt,_cor19> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/2-fun-0-'}}] )
		  in  let <_cor13> =
			  %% Line 112
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 112
			      call 'erlang':'list_to_binary'
				  (_cor13)
			  in  let <_cor15> =
				  %% Line 114
				  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 113
				  call 'wxe_util':'construct'
				      (339, _cor15)
	  ( <_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'calcScrolledPosition'/2 =
    %% Line 119
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{PtX,PtY}>
	      when let <_cor2> =
		    %% Line 120
		    call 'erlang':'is_integer'
			(PtX)
		in  let <_cor3> =
			%% Line 120
			call 'erlang':'is_integer'
			    (PtY)
		    in  %% Line 120
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 121
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrolledWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrolledWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 123
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PtX>(32,1,'integer',['unsigned'|['native']]),
			#<PtY>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 122
		      call 'wxe_util':'call'
			  (342, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'calcScrolledPosition',2}}] )
	    -| ['compiler_generated'] )
	end
'calcScrolledPosition'/3 =
    %% Line 128
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},X,Y>
	      when let <_cor3> =
		    %% Line 129
		    call 'erlang':'is_integer'
			(X)
		in  let <_cor4> =
			%% Line 129
			call 'erlang':'is_integer'
			    (Y)
		    in  %% Line 129
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 130
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrolledWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrolledWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 132
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<X>(32,1,'integer',['unsigned'|['native']]),
			#<Y>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 131
		      call 'wxe_util':'call'
			  (341, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'calcScrolledPosition',3}}] )
	    -| ['compiler_generated'] )
	end
'calcUnscrolledPosition'/2 =
    %% Line 137
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{PtX,PtY}>
	      when let <_cor2> =
		    %% Line 138
		    call 'erlang':'is_integer'
			(PtX)
		in  let <_cor3> =
			%% Line 138
			call 'erlang':'is_integer'
			    (PtY)
		    in  %% Line 138
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 139
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrolledWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrolledWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 141
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PtX>(32,1,'integer',['unsigned'|['native']]),
			#<PtY>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 140
		      call 'wxe_util':'call'
			  (344, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'calcUnscrolledPosition',2}}] )
	    -| ['compiler_generated'] )
	end
'calcUnscrolledPosition'/3 =
    %% Line 146
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},X,Y>
	      when let <_cor3> =
		    %% Line 147
		    call 'erlang':'is_integer'
			(X)
		in  let <_cor4> =
			%% Line 147
			call 'erlang':'is_integer'
			    (Y)
		    in  %% Line 147
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 148
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrolledWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrolledWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 150
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<X>(32,1,'integer',['unsigned'|['native']]),
			#<Y>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 149
		      call 'wxe_util':'call'
			  (343, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'calcUnscrolledPosition',3}}] )
	    -| ['compiler_generated'] )
	end
'enableScrolling'/3 =
    %% Line 155
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor13},X_scrolling,Y_scrolling>
	      when let <_cor3> =
		    %% Line 156
		    call 'erlang':'is_boolean'
			(X_scrolling)
		in  let <_cor4> =
			%% Line 156
			call 'erlang':'is_boolean'
			    (Y_scrolling)
		    in  %% Line 156
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 157
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrolledWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrolledWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor8> =
		      %% Line 159
		      call 'wxe_util':'from_bool'
			  (X_scrolling)
		  in  let <_cor7> =
			  %% Line 159
			  call 'wxe_util':'from_bool'
			      (Y_scrolling)
		      in  let <_cor9> =
			      %% Line 159
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<_cor8>(32,1,'integer',['unsigned'|['native']]),
				#<_cor7>(32,1,'integer',['unsigned'|['native']])}#
			  in  %% Line 158
			      call 'wxe_util':'cast'
				  (345, _cor9)
	  ( <_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10})
		  -| [{'function_name',{'enableScrolling',3}}] )
	    -| ['compiler_generated'] )
	end
'getScrollPixelsPerUnit'/1 =
    %% Line 164
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 165
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrolledWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrolledWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 167
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 166
		      call 'wxe_util':'call'
			  (346, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getScrollPixelsPerUnit',1}}] )
	    -| ['compiler_generated'] )
	end
'getViewStart'/1 =
    %% Line 172
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 173
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrolledWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrolledWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 175
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 174
		      call 'wxe_util':'call'
			  (347, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getViewStart',1}}] )
	    -| ['compiler_generated'] )
	end
'doPrepareDC'/2 =
    %% Line 180
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',DcRef,DcT,_cor10}> when 'true' ->
	      do  %% Line 181
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrolledWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrolledWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 182
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (DcT,
				       'wxDC') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call DcT:'parent_class'
				    ('wxDC')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 184
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<DcRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 183
			  call 'wxe_util':'cast'
			      (348, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'doPrepareDC',2}}] )
	    -| ['compiler_generated'] )
	end
'prepareDC'/2 =
    %% Line 189
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',DcRef,DcT,_cor10}> when 'true' ->
	      do  %% Line 190
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrolledWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrolledWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 191
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (DcT,
				       'wxDC') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call DcT:'parent_class'
				    ('wxDC')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 193
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<DcRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 192
			  call 'wxe_util':'cast'
			      (349, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'prepareDC',2}}] )
	    -| ['compiler_generated'] )
	end
'scroll'/3 =
    %% Line 198
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},X,Y>
	      when let <_cor3> =
		    %% Line 199
		    call 'erlang':'is_integer'
			(X)
		in  let <_cor4> =
			%% Line 199
			call 'erlang':'is_integer'
			    (Y)
		    in  %% Line 199
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 200
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrolledWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrolledWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 202
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<X>(32,1,'integer',['unsigned'|['native']]),
			#<Y>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 201
		      call 'wxe_util':'cast'
			  (350, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'scroll',3}}] )
	    -| ['compiler_generated'] )
	end
'setScrollbars'/5 =
    %% Line 208
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor17,_cor18,_cor19},PixelsPerUnitX,PixelsPerUnitY,NoUnitsX,NoUnitsY>
	      when %% Line 209
		( try
		      let <_cor5> =
			  call 'erlang':'is_integer'
			      (PixelsPerUnitX)
		      in  let <_cor6> =
			      call 'erlang':'is_integer'
				  (PixelsPerUnitY)
			  in  let <_cor7> =
				  call 'erlang':'is_integer'
				      (NoUnitsX)
			      in  let <_cor8> =
				      call 'erlang':'is_integer'
					  (NoUnitsY)
				  in  let <_cor9> =
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'and'
										 -| ['compiler_generated'] )
						(_cor7, _cor8)
					    -| ['compiler_generated'] )
				      in  let <_cor10> =
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'and'
										     -| ['compiler_generated'] )
						    (_cor6, _cor9)
						-| ['compiler_generated'] )
					  in  ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'and'
										     -| ['compiler_generated'] )
						    (_cor5, _cor10)
						-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 210
	      apply 'setScrollbars'/6
		  (This, PixelsPerUnitX, PixelsPerUnitY, NoUnitsX, NoUnitsY, [])
	  ( <_cor16,_cor15,_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14,_cor13,_cor12})
		  -| [{'function_name',{'setScrollbars',5}}] )
	    -| ['compiler_generated'] )
	end
'setScrollbars'/6 =
    %% Line 218
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor34},PixelsPerUnitX,PixelsPerUnitY,NoUnitsX,NoUnitsY,Options>
	      when %% Line 219
		try
		    let <_cor6> =
			call 'erlang':'is_integer'
			    (PixelsPerUnitX)
		    in  let <_cor7> =
			    call 'erlang':'is_integer'
				(PixelsPerUnitY)
			in  let <_cor8> =
				call 'erlang':'is_integer'
				    (NoUnitsX)
			    in  let <_cor9> =
				    call 'erlang':'is_integer'
					(NoUnitsY)
				in  let <_cor10> =
					call 'erlang':'is_list'
					    (Options)
				    in  let <_cor11> =
					    call 'erlang':'and'
						(_cor9, _cor10)
					in  let <_cor12> =
						call 'erlang':'and'
						    (_cor8, _cor11)
					    in  let <_cor13> =
						    call 'erlang':'and'
							(_cor7, _cor12)
						in  call 'erlang':'and'
							(_cor6, _cor13)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 220
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrolledWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrolledWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 221
		      ( fun (_cor21,_cor20) ->
			    case <_cor21,_cor20> of
			      <{'xPos',XPos},Acc> when 'true' ->
				  let <_cor16> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<XPos>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor16|Acc]
			      %% Line 222
			      <{'yPos',YPos},Acc> when 'true' ->
				  let <_cor17> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<YPos>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor17|Acc]
			      %% Line 223
			      <{'noRefresh',NoRefresh},Acc> when 'true' ->
				  let <_cor18> =
				      call 'wxe_util':'from_bool'
					  (NoRefresh)
				  in  let <_cor19> =
					  #{#<3>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor18>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor19|Acc]
			      %% Line 224
			      <BadOpt,_cor35> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-setScrollbars/6-fun-0-'}}] )
		  in  let <_cor25> =
			  %% Line 225
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 225
			      call 'erlang':'list_to_binary'
				  (_cor25)
			  in  let <_cor27> =
				  %% Line 227
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<PixelsPerUnitX>(32,1,'integer',['unsigned'|['native']]),
				    #<PixelsPerUnitY>(32,1,'integer',['unsigned'|['native']]),
				    #<NoUnitsX>(32,1,'integer',['unsigned'|['native']]),
				    #<NoUnitsY>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 226
				  call 'wxe_util':'cast'
				      (351, _cor27)
	  ( <_cor33,_cor32,_cor31,_cor30,_cor29,_cor28> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor33,_cor32,_cor31,_cor30,_cor29,_cor28})
		  -| [{'function_name',{'setScrollbars',6}}] )
	    -| ['compiler_generated'] )
	end
'setScrollRate'/3 =
    %% Line 232
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Xstep,Ystep>
	      when let <_cor3> =
		    %% Line 233
		    call 'erlang':'is_integer'
			(Xstep)
		in  let <_cor4> =
			%% Line 233
			call 'erlang':'is_integer'
			    (Ystep)
		    in  %% Line 233
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 234
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrolledWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrolledWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 236
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Xstep>(32,1,'integer',['unsigned'|['native']]),
			#<Ystep>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 235
		      call 'wxe_util':'cast'
			  (352, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setScrollRate',3}}] )
	    -| ['compiler_generated'] )
	end
'setTargetWindow'/2 =
    %% Line 241
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',TargetRef,TargetT,_cor10}> when 'true' ->
	      do  %% Line 242
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxScrolledWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxScrolledWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 243
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (TargetT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call TargetT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 245
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<TargetRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 244
			  call 'wxe_util':'cast'
			      (353, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setTargetWindow',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 249
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 250
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxScrolledWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxScrolledWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 251
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 252
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'setFocusIgnoringChildren'/1 =
    %% Line 255
    fun (_cor0) ->
	call 'wxPanel':'setFocusIgnoringChildren'
	    (_cor0)
'initDialog'/1 =
    %% Line 257
    fun (_cor0) ->
	call 'wxPanel':'initDialog'
	    (_cor0)
'warpPointer'/3 =
    %% Line 260
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 262
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 264
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 266
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 268
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 270
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 272
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 274
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 276
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 278
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 280
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 282
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 284
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 286
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 288
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 290
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 292
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 294
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 296
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 298
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 300
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 302
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 304
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 306
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 308
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 310
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 312
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 314
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 316
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 318
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 320
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 322
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 324
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 326
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 328
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 330
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 332
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 334
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setLabel'/2 =
    %% Line 336
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setLabel'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 338
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 340
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 342
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 344
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 346
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 348
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 350
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 352
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 354
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 356
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 358
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 360
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 362
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 364
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 366
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 368
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 370
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 372
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 374
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 376
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 378
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 380
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 382
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 384
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 386
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 388
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 390
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 392
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 394
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 396
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 398
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 400
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 402
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 404
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 406
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 408
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 410
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 412
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 414
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 416
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 418
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 420
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 422
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 424
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 426
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 428
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 430
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 432
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 434
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 436
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 438
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 440
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 442
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 444
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 446
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 448
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 450
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 452
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 454
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 456
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 458
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 460
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 462
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 464
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 466
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 468
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 470
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 472
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 474
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 476
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 478
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 480
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 482
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 484
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 486
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 488
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 490
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 492
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 494
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 496
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 498
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 500
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 502
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 504
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 506
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 508
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 510
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 512
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 514
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getLabel'/1 =
    %% Line 516
    fun (_cor0) ->
	call 'wxWindow':'getLabel'
	    (_cor0)
'getId'/1 =
    %% Line 518
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 520
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 522
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 524
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 526
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 528
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 530
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 532
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 534
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 536
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 538
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 540
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 542
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 544
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 546
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 548
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 550
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 552
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 554
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 556
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 558
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 560
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 562
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 564
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 566
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 568
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 570
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 572
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 574
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 576
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 578
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 580
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 582
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 584
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 586
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 588
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 590
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 592
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 594
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 596
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 598
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 600
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 602
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 604
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 606
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 609
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 611
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 613
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 615
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 617
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxScrolledWindow')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxScrolledWindow', _cor0)
end