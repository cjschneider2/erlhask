module 'wxFrame' ['cacheBestSize'/2,
		  'captureMouse'/1,
		  'center'/1,
		  'center'/2,
		  'centerOnParent'/1,
		  'centerOnParent'/2,
		  'centerOnScreen'/1,
		  'centerOnScreen'/2,
		  'centre'/1,
		  'centre'/2,
		  'centreOnParent'/1,
		  'centreOnParent'/2,
		  'centreOnScreen'/1,
		  'centreOnScreen'/2,
		  'clearBackground'/1,
		  'clientToScreen'/2,
		  'clientToScreen'/3,
		  'close'/1,
		  'close'/2,
		  'connect'/2,
		  'connect'/3,
		  'convertDialogToPixels'/2,
		  'convertPixelsToDialog'/2,
		  'create'/4,
		  'create'/5,
		  'createStatusBar'/1,
		  'createStatusBar'/2,
		  'createToolBar'/1,
		  'createToolBar'/2,
		  'destroy'/1,
		  'destroyChildren'/1,
		  'disable'/1,
		  'disconnect'/1,
		  'disconnect'/2,
		  'disconnect'/3,
		  'enable'/1,
		  'enable'/2,
		  'findWindow'/2,
		  'fit'/1,
		  'fitInside'/1,
		  'freeze'/1,
		  'getAcceleratorTable'/1,
		  'getBackgroundColour'/1,
		  'getBackgroundStyle'/1,
		  'getBestSize'/1,
		  'getCaret'/1,
		  'getCharHeight'/1,
		  'getCharWidth'/1,
		  'getChildren'/1,
		  'getClientAreaOrigin'/1,
		  'getClientSize'/1,
		  'getContainingSizer'/1,
		  'getCursor'/1,
		  'getDropTarget'/1,
		  'getEventHandler'/1,
		  'getExtraStyle'/1,
		  'getFont'/1,
		  'getForegroundColour'/1,
		  'getGrandParent'/1,
		  'getHandle'/1,
		  'getHelpText'/1,
		  'getIcon'/1,
		  'getIcons'/1,
		  'getId'/1,
		  'getLabel'/1,
		  'getMaxSize'/1,
		  'getMenuBar'/1,
		  'getMinSize'/1,
		  'getName'/1,
		  'getParent'/1,
		  'getPosition'/1,
		  'getRect'/1,
		  'getScreenPosition'/1,
		  'getScreenRect'/1,
		  'getScrollPos'/2,
		  'getScrollRange'/2,
		  'getScrollThumb'/2,
		  'getSize'/1,
		  'getSizer'/1,
		  'getStatusBar'/1,
		  'getStatusBarPane'/1,
		  'getTextExtent'/2,
		  'getTextExtent'/3,
		  'getTitle'/1,
		  'getToolBar'/1,
		  'getToolTip'/1,
		  'getUpdateRegion'/1,
		  'getVirtualSize'/1,
		  'getWindowStyleFlag'/1,
		  'getWindowVariant'/1,
		  'hasCapture'/1,
		  'hasScrollbar'/2,
		  'hasTransparentBackground'/1,
		  'hide'/1,
		  'iconize'/1,
		  'iconize'/2,
		  'inheritAttributes'/1,
		  'initDialog'/1,
		  'invalidateBestSize'/1,
		  'isActive'/1,
		  'isEnabled'/1,
		  'isExposed'/2,
		  'isExposed'/3,
		  'isExposed'/5,
		  'isFullScreen'/1,
		  'isIconized'/1,
		  'isMaximized'/1,
		  'isRetained'/1,
		  'isShown'/1,
		  'isTopLevel'/1,
		  'layout'/1,
		  'lineDown'/1,
		  'lineUp'/1,
		  'lower'/1,
		  'makeModal'/1,
		  'makeModal'/2,
		  'maximize'/1,
		  'maximize'/2,
		  'module_info'/0,
		  'module_info'/1,
		  'move'/2,
		  'move'/3,
		  'move'/4,
		  'moveAfterInTabOrder'/2,
		  'moveBeforeInTabOrder'/2,
		  'navigate'/1,
		  'navigate'/2,
		  'new'/0,
		  'new'/3,
		  'new'/4,
		  'pageDown'/1,
		  'pageUp'/1,
		  'parent_class'/1,
		  'popEventHandler'/1,
		  'popEventHandler'/2,
		  'popupMenu'/2,
		  'popupMenu'/3,
		  'popupMenu'/4,
		  'processCommand'/2,
		  'raise'/1,
		  'refresh'/1,
		  'refresh'/2,
		  'refreshRect'/2,
		  'refreshRect'/3,
		  'releaseMouse'/1,
		  'removeChild'/2,
		  'reparent'/2,
		  'requestUserAttention'/1,
		  'requestUserAttention'/2,
		  'screenToClient'/1,
		  'screenToClient'/2,
		  'scrollLines'/2,
		  'scrollPages'/2,
		  'scrollWindow'/3,
		  'scrollWindow'/4,
		  'sendSizeEvent'/1,
		  'setAcceleratorTable'/2,
		  'setAutoLayout'/2,
		  'setBackgroundColour'/2,
		  'setBackgroundStyle'/2,
		  'setCaret'/2,
		  'setClientSize'/2,
		  'setClientSize'/3,
		  'setContainingSizer'/2,
		  'setCursor'/2,
		  'setDropTarget'/2,
		  'setExtraStyle'/2,
		  'setFocus'/1,
		  'setFocusFromKbd'/1,
		  'setFont'/2,
		  'setForegroundColour'/2,
		  'setHelpText'/2,
		  'setIcon'/2,
		  'setIcons'/2,
		  'setId'/2,
		  'setLabel'/2,
		  'setMaxSize'/2,
		  'setMenuBar'/2,
		  'setMinSize'/2,
		  'setName'/2,
		  'setOwnBackgroundColour'/2,
		  'setOwnFont'/2,
		  'setOwnForegroundColour'/2,
		  'setPalette'/2,
		  'setScrollPos'/3,
		  'setScrollPos'/4,
		  'setScrollbar'/5,
		  'setScrollbar'/6,
		  'setShape'/2,
		  'setSize'/2,
		  'setSize'/3,
		  'setSize'/5,
		  'setSize'/6,
		  'setSizeHints'/2,
		  'setSizeHints'/3,
		  'setSizeHints'/4,
		  'setSizer'/2,
		  'setSizer'/3,
		  'setSizerAndFit'/2,
		  'setSizerAndFit'/3,
		  'setStatusBar'/2,
		  'setStatusBarPane'/2,
		  'setStatusText'/2,
		  'setStatusText'/3,
		  'setStatusWidths'/2,
		  'setThemeEnabled'/2,
		  'setTitle'/2,
		  'setToolBar'/2,
		  'setToolTip'/2,
		  'setVirtualSize'/2,
		  'setVirtualSize'/3,
		  'setVirtualSizeHints'/2,
		  'setVirtualSizeHints'/3,
		  'setVirtualSizeHints'/4,
		  'setWindowStyle'/2,
		  'setWindowStyleFlag'/2,
		  'setWindowVariant'/2,
		  'shouldInheritColours'/1,
		  'show'/1,
		  'show'/2,
		  'showFullScreen'/2,
		  'showFullScreen'/3,
		  'thaw'/1,
		  'transferDataFromWindow'/1,
		  'transferDataToWindow'/1,
		  'update'/1,
		  'updateWindowUI'/1,
		  'updateWindowUI'/2,
		  'validate'/1,
		  'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 81
		'export_type' =
		    %% Line 81
		    [{'wxFrame',0}],
		%% Line 88
		'type' =
		    %% Line 88
		    [{'wxFrame',{'remote_type',88,[{'atom',88,'wx'}|[{'atom',88,'wx_object'}|[[]]]]},[]}],
		%% Line 90
		'spec' =
		    %% Line 90
		    [{{'new',0},[{'type',90,'fun',[{'type',90,'product',[]}|[{'type',90,'wxFrame',[]}]]}]}],
		%% Line 96
		'spec' =
		    %% Line 96
		    [{{'new',3},[{'type',96,'bounded_fun',[{'type',96,'fun',[{'type',96,'product',[{'var',96,'Parent'}|[{'var',96,'Id'}|[{'var',96,'Title'}]]]}|[{'type',96,'wxFrame',[]}]]}|[[{'type',97,'constraint',[{'atom',97,'is_subtype'}|[[{'var',97,'Parent'}|[{'remote_type',97,[{'atom',97,'wxWindow'}|[{'atom',97,'wxWindow'}|[[]]]]}]]]]}|[{'type',97,'constraint',[{'atom',97,'is_subtype'}|[[{'var',97,'Id'}|[{'type',97,'integer',[]}]]]]}|[{'type',97,'constraint',[{'atom',97,'is_subtype'}|[[{'var',97,'Title'}|[{'remote_type',97,[{'atom',97,'unicode'}|[{'atom',97,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 104
		'spec' =
		    %% Line 104
		    [{{'new',4},[{'type',104,'bounded_fun',[{'type',104,'fun',[{'type',104,'product',[{'var',104,'Parent'}|[{'var',104,'Id'}|[{'var',104,'Title'}|[{'type',104,'list',[{'var',104,'Option'}]}]]]]}|[{'type',104,'wxFrame',[]}]]}|[[{'type',105,'constraint',[{'atom',105,'is_subtype'}|[[{'var',105,'Parent'}|[{'remote_type',105,[{'atom',105,'wxWindow'}|[{'atom',105,'wxWindow'}|[[]]]]}]]]]}|[{'type',105,'constraint',[{'atom',105,'is_subtype'}|[[{'var',105,'Id'}|[{'type',105,'integer',[]}]]]]}|[{'type',105,'constraint',[{'atom',105,'is_subtype'}|[[{'var',105,'Title'}|[{'remote_type',105,[{'atom',105,'unicode'}|[{'atom',105,'chardata'}|[[]]]]}]]]]}|[{'type',106,'constraint',[{'atom',106,'is_subtype'}|[[{'var',106,'Option'}|[{'type',106,'union',[{'type',106,'tuple',[{'atom',106,'pos'}|[{'type',106,'tuple',[{'ann_type',106,[{'var',106,'X'}|[{'type',106,'integer',[]}]]}|[{'ann_type',106,[{'var',106,'Y'}|[{'type',106,'integer',[]}]]}]]}]]}|[{'type',107,'tuple',[{'atom',107,'size'}|[{'type',107,'tuple',[{'ann_type',107,[{'var',107,'W'}|[{'type',107,'integer',[]}]]}|[{'ann_type',107,[{'var',107,'H'}|[{'type',107,'integer',[]}]]}]]}]]}|[{'type',108,'tuple',[{'atom',108,'style'}|[{'type',108,'integer',[]}]]}]]]}]]]]}]]]]]]}]}],
		%% Line 122
		'spec' =
		    %% Line 122
		    [{{'create',4},[{'type',122,'bounded_fun',[{'type',122,'fun',[{'type',122,'product',[{'var',122,'This'}|[{'var',122,'Parent'}|[{'var',122,'Id'}|[{'var',122,'Title'}]]]]}|[{'type',122,'boolean',[]}]]}|[[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'This'}|[{'type',123,'wxFrame',[]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Parent'}|[{'remote_type',123,[{'atom',123,'wxWindow'}|[{'atom',123,'wxWindow'}|[[]]]]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Id'}|[{'type',123,'integer',[]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Title'}|[{'remote_type',123,[{'atom',123,'unicode'}|[{'atom',123,'chardata'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 130
		'spec' =
		    %% Line 130
		    [{{'create',5},[{'type',130,'bounded_fun',[{'type',130,'fun',[{'type',130,'product',[{'var',130,'This'}|[{'var',130,'Parent'}|[{'var',130,'Id'}|[{'var',130,'Title'}|[{'type',130,'list',[{'var',130,'Option'}]}]]]]]}|[{'type',130,'boolean',[]}]]}|[[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'This'}|[{'type',131,'wxFrame',[]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Parent'}|[{'remote_type',131,[{'atom',131,'wxWindow'}|[{'atom',131,'wxWindow'}|[[]]]]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Id'}|[{'type',131,'integer',[]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Title'}|[{'remote_type',131,[{'atom',131,'unicode'}|[{'atom',131,'chardata'}|[[]]]]}]]]]}|[{'type',132,'constraint',[{'atom',132,'is_subtype'}|[[{'var',132,'Option'}|[{'type',132,'union',[{'type',132,'tuple',[{'atom',132,'pos'}|[{'type',132,'tuple',[{'ann_type',132,[{'var',132,'X'}|[{'type',132,'integer',[]}]]}|[{'ann_type',132,[{'var',132,'Y'}|[{'type',132,'integer',[]}]]}]]}]]}|[{'type',133,'tuple',[{'atom',133,'size'}|[{'type',133,'tuple',[{'ann_type',133,[{'var',133,'W'}|[{'type',133,'integer',[]}]]}|[{'ann_type',133,[{'var',133,'H'}|[{'type',133,'integer',[]}]]}]]}]]}|[{'type',134,'tuple',[{'atom',134,'style'}|[{'type',134,'integer',[]}]]}]]]}]]]]}]]]]]]]}]}],
		%% Line 149
		'spec' =
		    %% Line 149
		    [{{'createStatusBar',1},[{'type',149,'bounded_fun',[{'type',149,'fun',[{'type',149,'product',[{'var',149,'This'}]}|[{'remote_type',149,[{'atom',149,'wxStatusBar'}|[{'atom',149,'wxStatusBar'}|[[]]]]}]]}|[[{'type',150,'constraint',[{'atom',150,'is_subtype'}|[[{'var',150,'This'}|[{'type',150,'wxFrame',[]}]]]]}]]]}]}],
		%% Line 157
		'spec' =
		    %% Line 157
		    [{{'createStatusBar',2},[{'type',157,'bounded_fun',[{'type',157,'fun',[{'type',157,'product',[{'var',157,'This'}|[{'type',157,'list',[{'var',157,'Option'}]}]]}|[{'remote_type',157,[{'atom',157,'wxStatusBar'}|[{'atom',157,'wxStatusBar'}|[[]]]]}]]}|[[{'type',158,'constraint',[{'atom',158,'is_subtype'}|[[{'var',158,'This'}|[{'type',158,'wxFrame',[]}]]]]}|[{'type',159,'constraint',[{'atom',159,'is_subtype'}|[[{'var',159,'Option'}|[{'type',159,'union',[{'type',159,'tuple',[{'atom',159,'number'}|[{'type',159,'integer',[]}]]}|[{'type',160,'tuple',[{'atom',160,'style'}|[{'type',160,'integer',[]}]]}|[{'type',161,'tuple',[{'atom',161,'id'}|[{'type',161,'integer',[]}]]}]]]}]]]]}]]]]}]}],
		%% Line 174
		'spec' =
		    %% Line 174
		    [{{'createToolBar',1},[{'type',174,'bounded_fun',[{'type',174,'fun',[{'type',174,'product',[{'var',174,'This'}]}|[{'remote_type',174,[{'atom',174,'wxToolBar'}|[{'atom',174,'wxToolBar'}|[[]]]]}]]}|[[{'type',175,'constraint',[{'atom',175,'is_subtype'}|[[{'var',175,'This'}|[{'type',175,'wxFrame',[]}]]]]}]]]}]}],
		%% Line 182
		'spec' =
		    %% Line 182
		    [{{'createToolBar',2},[{'type',182,'bounded_fun',[{'type',182,'fun',[{'type',182,'product',[{'var',182,'This'}|[{'type',182,'list',[{'var',182,'Option'}]}]]}|[{'remote_type',182,[{'atom',182,'wxToolBar'}|[{'atom',182,'wxToolBar'}|[[]]]]}]]}|[[{'type',183,'constraint',[{'atom',183,'is_subtype'}|[[{'var',183,'This'}|[{'type',183,'wxFrame',[]}]]]]}|[{'type',184,'constraint',[{'atom',184,'is_subtype'}|[[{'var',184,'Option'}|[{'type',184,'union',[{'type',184,'tuple',[{'atom',184,'style'}|[{'type',184,'integer',[]}]]}|[{'type',185,'tuple',[{'atom',185,'id'}|[{'type',185,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 197
		'spec' =
		    %% Line 197
		    [{{'getClientAreaOrigin',1},[{'type',197,'bounded_fun',[{'type',197,'fun',[{'type',197,'product',[{'var',197,'This'}]}|[{'type',197,'tuple',[{'ann_type',197,[{'var',197,'X'}|[{'type',197,'integer',[]}]]}|[{'ann_type',197,[{'var',197,'Y'}|[{'type',197,'integer',[]}]]}]]}]]}|[[{'type',198,'constraint',[{'atom',198,'is_subtype'}|[[{'var',198,'This'}|[{'type',198,'wxFrame',[]}]]]]}]]]}]}],
		%% Line 205
		'spec' =
		    %% Line 205
		    [{{'getMenuBar',1},[{'type',205,'bounded_fun',[{'type',205,'fun',[{'type',205,'product',[{'var',205,'This'}]}|[{'remote_type',205,[{'atom',205,'wxMenuBar'}|[{'atom',205,'wxMenuBar'}|[[]]]]}]]}|[[{'type',206,'constraint',[{'atom',206,'is_subtype'}|[[{'var',206,'This'}|[{'type',206,'wxFrame',[]}]]]]}]]]}]}],
		%% Line 213
		'spec' =
		    %% Line 213
		    [{{'getStatusBar',1},[{'type',213,'bounded_fun',[{'type',213,'fun',[{'type',213,'product',[{'var',213,'This'}]}|[{'remote_type',213,[{'atom',213,'wxStatusBar'}|[{'atom',213,'wxStatusBar'}|[[]]]]}]]}|[[{'type',214,'constraint',[{'atom',214,'is_subtype'}|[[{'var',214,'This'}|[{'type',214,'wxFrame',[]}]]]]}]]]}]}],
		%% Line 221
		'spec' =
		    %% Line 221
		    [{{'getStatusBarPane',1},[{'type',221,'bounded_fun',[{'type',221,'fun',[{'type',221,'product',[{'var',221,'This'}]}|[{'type',221,'integer',[]}]]}|[[{'type',222,'constraint',[{'atom',222,'is_subtype'}|[[{'var',222,'This'}|[{'type',222,'wxFrame',[]}]]]]}]]]}]}],
		%% Line 229
		'spec' =
		    %% Line 229
		    [{{'getToolBar',1},[{'type',229,'bounded_fun',[{'type',229,'fun',[{'type',229,'product',[{'var',229,'This'}]}|[{'remote_type',229,[{'atom',229,'wxToolBar'}|[{'atom',229,'wxToolBar'}|[[]]]]}]]}|[[{'type',230,'constraint',[{'atom',230,'is_subtype'}|[[{'var',230,'This'}|[{'type',230,'wxFrame',[]}]]]]}]]]}]}],
		%% Line 237
		'spec' =
		    %% Line 237
		    [{{'processCommand',2},[{'type',237,'bounded_fun',[{'type',237,'fun',[{'type',237,'product',[{'var',237,'This'}|[{'var',237,'Winid'}]]}|[{'type',237,'boolean',[]}]]}|[[{'type',238,'constraint',[{'atom',238,'is_subtype'}|[[{'var',238,'This'}|[{'type',238,'wxFrame',[]}]]]]}|[{'type',238,'constraint',[{'atom',238,'is_subtype'}|[[{'var',238,'Winid'}|[{'type',238,'integer',[]}]]]]}]]]]}]}],
		%% Line 246
		'spec' =
		    %% Line 246
		    [{{'sendSizeEvent',1},[{'type',246,'bounded_fun',[{'type',246,'fun',[{'type',246,'product',[{'var',246,'This'}]}|[{'atom',246,'ok'}]]}|[[{'type',247,'constraint',[{'atom',247,'is_subtype'}|[[{'var',247,'This'}|[{'type',247,'wxFrame',[]}]]]]}]]]}]}],
		%% Line 254
		'spec' =
		    %% Line 254
		    [{{'setMenuBar',2},[{'type',254,'bounded_fun',[{'type',254,'fun',[{'type',254,'product',[{'var',254,'This'}|[{'var',254,'Menubar'}]]}|[{'atom',254,'ok'}]]}|[[{'type',255,'constraint',[{'atom',255,'is_subtype'}|[[{'var',255,'This'}|[{'type',255,'wxFrame',[]}]]]]}|[{'type',255,'constraint',[{'atom',255,'is_subtype'}|[[{'var',255,'Menubar'}|[{'remote_type',255,[{'atom',255,'wxMenuBar'}|[{'atom',255,'wxMenuBar'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 263
		'spec' =
		    %% Line 263
		    [{{'setStatusBar',2},[{'type',263,'bounded_fun',[{'type',263,'fun',[{'type',263,'product',[{'var',263,'This'}|[{'var',263,'Statbar'}]]}|[{'atom',263,'ok'}]]}|[[{'type',264,'constraint',[{'atom',264,'is_subtype'}|[[{'var',264,'This'}|[{'type',264,'wxFrame',[]}]]]]}|[{'type',264,'constraint',[{'atom',264,'is_subtype'}|[[{'var',264,'Statbar'}|[{'remote_type',264,[{'atom',264,'wxStatusBar'}|[{'atom',264,'wxStatusBar'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 272
		'spec' =
		    %% Line 272
		    [{{'setStatusBarPane',2},[{'type',272,'bounded_fun',[{'type',272,'fun',[{'type',272,'product',[{'var',272,'This'}|[{'var',272,'N'}]]}|[{'atom',272,'ok'}]]}|[[{'type',273,'constraint',[{'atom',273,'is_subtype'}|[[{'var',273,'This'}|[{'type',273,'wxFrame',[]}]]]]}|[{'type',273,'constraint',[{'atom',273,'is_subtype'}|[[{'var',273,'N'}|[{'type',273,'integer',[]}]]]]}]]]]}]}],
		%% Line 281
		'spec' =
		    %% Line 281
		    [{{'setStatusText',2},[{'type',281,'bounded_fun',[{'type',281,'fun',[{'type',281,'product',[{'var',281,'This'}|[{'var',281,'Text'}]]}|[{'atom',281,'ok'}]]}|[[{'type',282,'constraint',[{'atom',282,'is_subtype'}|[[{'var',282,'This'}|[{'type',282,'wxFrame',[]}]]]]}|[{'type',282,'constraint',[{'atom',282,'is_subtype'}|[[{'var',282,'Text'}|[{'remote_type',282,[{'atom',282,'unicode'}|[{'atom',282,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 289
		'spec' =
		    %% Line 289
		    [{{'setStatusText',3},[{'type',289,'bounded_fun',[{'type',289,'fun',[{'type',289,'product',[{'var',289,'This'}|[{'var',289,'Text'}|[{'type',289,'list',[{'var',289,'Option'}]}]]]}|[{'atom',289,'ok'}]]}|[[{'type',290,'constraint',[{'atom',290,'is_subtype'}|[[{'var',290,'This'}|[{'type',290,'wxFrame',[]}]]]]}|[{'type',290,'constraint',[{'atom',290,'is_subtype'}|[[{'var',290,'Text'}|[{'remote_type',290,[{'atom',290,'unicode'}|[{'atom',290,'chardata'}|[[]]]]}]]]]}|[{'type',291,'constraint',[{'atom',291,'is_subtype'}|[[{'var',291,'Option'}|[{'type',291,'tuple',[{'atom',291,'number'}|[{'type',291,'integer',[]}]]}]]]]}]]]]]}]}],
		%% Line 303
		'spec' =
		    %% Line 303
		    [{{'setStatusWidths',2},[{'type',303,'bounded_fun',[{'type',303,'fun',[{'type',303,'product',[{'var',303,'This'}|[{'var',303,'Widths_field'}]]}|[{'atom',303,'ok'}]]}|[[{'type',304,'constraint',[{'atom',304,'is_subtype'}|[[{'var',304,'This'}|[{'type',304,'wxFrame',[]}]]]]}|[{'type',304,'constraint',[{'atom',304,'is_subtype'}|[[{'var',304,'Widths_field'}|[{'type',304,'list',[{'type',304,'integer',[]}]}]]]]}]]]]}]}],
		%% Line 313
		'spec' =
		    %% Line 313
		    [{{'setToolBar',2},[{'type',313,'bounded_fun',[{'type',313,'fun',[{'type',313,'product',[{'var',313,'This'}|[{'var',313,'Toolbar'}]]}|[{'atom',313,'ok'}]]}|[[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'This'}|[{'type',314,'wxFrame',[]}]]]]}|[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'Toolbar'}|[{'remote_type',314,[{'atom',314,'wxToolBar'}|[{'atom',314,'wxToolBar'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 322
		'spec' =
		    %% Line 322
		    [{{'destroy',1},[{'type',322,'fun',[{'type',322,'product',[{'ann_type',322,[{'var',322,'This'}|[{'type',322,'wxFrame',[]}]]}]}|[{'atom',322,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 83
    fun (_cor0) ->
	case _cor0 of
	  <'wxTopLevelWindow'> when 'true' ->
	      'true'
	  %% Line 84
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 85
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 86
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxFrame'})
	end
'new'/0 =
    %% Line 91
    fun () ->
	%% Line 92
	call 'wxe_util':'construct'
	    (304, %% Line 93
		  #{}#)
'new'/3 =
    %% Line 99
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor9,_cor10,_cor11},Id,Title>
	      when let <_cor3> =
		    %% Line 100
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor4> =
			%% Line 100
			call 'erlang':'is_list'
			    (Title)
		    in  %% Line 100
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor3, _cor4)
			  -| ['compiler_generated'] ) ->
	      %% Line 101
	      apply 'new'/4
		  (Parent, Id, Title, [])
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'new'/4 =
    %% Line 109
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor32},Id,Title,Options>
	      when %% Line 110
		try
		    let <_cor4> =
			call 'erlang':'is_integer'
			    (Id)
		    in  let <_cor5> =
			    call 'erlang':'is_list'
				(Title)
			in  let <_cor6> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor7> =
				    call 'erlang':'and'
					(_cor5, _cor6)
				in  call 'erlang':'and'
					(_cor4, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 111
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Title_UC> =
		      %% Line 112
		      call 'unicode':'characters_to_binary'
			  ([Title|[0]])
		  in  let <MOpts> =
			  %% Line 113
			  ( fun (_cor15,_cor14) ->
				case <_cor15,_cor14> of
				  <{'pos',{PosX,PosY}},Acc> when 'true' ->
				      let <_cor11> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<PosX>(32,1,'integer',['unsigned'|['native']]),
					    #<PosY>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor11|Acc]
				  %% Line 114
				  <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				      let <_cor12> =
					  #{#<2>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeW>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeH>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor12|Acc]
				  %% Line 115
				  <{'style',Style},Acc> when 'true' ->
				      let <_cor13> =
					  #{#<3>(32,1,'integer',['unsigned'|['native']]),
					    #<Style>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor13|Acc]
				  %% Line 116
				  <BadOpt,_cor33> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-new/4-fun-0-'}}] )
		      in  let <_cor19> =
			      %% Line 117
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 117
				  call 'erlang':'list_to_binary'
				      (_cor19)
			      in  let <_cor26> =
				      %% Line 119
				      call 'erlang':'byte_size'
					  (Title_UC)
				  in  let <_cor21> =
					  %% Line 119
					  call 'erlang':'byte_size'
					      (Title_UC)
				      in  let <_cor22> =
					      %% Line 119
					      call 'erlang':'+'
						  (4, _cor21)
					  in  let <_cor23> =
						  %% Line 119
						  call 'erlang':'band'
						      (_cor22, 7)
					      in  let <_cor24> =
						      %% Line 119
						      call 'erlang':'-'
							  (8, _cor23)
						  in  let <_cor25> =
							  %% Line 119
							  call 'erlang':'band'
							      (_cor24, 7)
						      in  let <_cor27> =
							      %% Line 119
							      #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
								#<Id>(32,1,'integer',['unsigned'|['native']]),
								#<_cor26>(32,1,'integer',['unsigned'|['native']]),
								#<Title_UC>('all',8,'binary',['unsigned'|['big']]),
								#<0>(_cor25,8,'integer',['unsigned'|['big']]),
								#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							  in  %% Line 118
							      call 'wxe_util':'construct'
								  (303, _cor27)
	  ( <_cor31,_cor30,_cor29,_cor28> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor31,_cor30,_cor29,_cor28})
		  -| [{'function_name',{'new',4}}] )
	    -| ['compiler_generated'] )
	end
'create'/4 =
    %% Line 125
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor12,_cor13,_cor14},Parent = {'wx_ref',_cor15,_cor16,_cor17},Id,Title>
	      when let <_cor4> =
		    %% Line 126
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor5> =
			%% Line 126
			call 'erlang':'is_list'
			    (Title)
		    in  %% Line 126
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor4, _cor5)
			  -| ['compiler_generated'] ) ->
	      %% Line 127
	      apply 'create'/5
		  (This, Parent, Id, Title, [])
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'create',4}}] )
	    -| ['compiler_generated'] )
	end
'create'/5 =
    %% Line 135
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor36},{'wx_ref',ParentRef,ParentT,_cor37},Id,Title,Options>
	      when %% Line 136
		try
		    let <_cor5> =
			call 'erlang':'is_integer'
			    (Id)
		    in  let <_cor6> =
			    call 'erlang':'is_list'
				(Title)
			in  let <_cor7> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor8> =
				    call 'erlang':'and'
					(_cor6, _cor7)
				in  call 'erlang':'and'
					(_cor5, _cor8)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 137
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 138
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <Title_UC> =
			  %% Line 139
			  call 'unicode':'characters_to_binary'
			      ([Title|[0]])
		      in  let <MOpts> =
			      %% Line 140
			      ( fun (_cor18,_cor17) ->
				    case <_cor18,_cor17> of
				      <{'pos',{PosX,PosY}},Acc> when 'true' ->
					  let <_cor14> =
					      #{#<1>(32,1,'integer',['unsigned'|['native']]),
						#<PosX>(32,1,'integer',['unsigned'|['native']]),
						#<PosY>(32,1,'integer',['unsigned'|['native']]),
						#<0>(32,1,'integer',['unsigned'|['big']])}#
					  in  [_cor14|Acc]
				      %% Line 141
				      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
					  let <_cor15> =
					      #{#<2>(32,1,'integer',['unsigned'|['native']]),
						#<SizeW>(32,1,'integer',['unsigned'|['native']]),
						#<SizeH>(32,1,'integer',['unsigned'|['native']]),
						#<0>(32,1,'integer',['unsigned'|['big']])}#
					  in  [_cor15|Acc]
				      %% Line 142
				      <{'style',Style},Acc> when 'true' ->
					  let <_cor16> =
					      #{#<3>(32,1,'integer',['unsigned'|['native']]),
						#<Style>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor16|Acc]
				      %% Line 143
				      <BadOpt,_cor38> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-create/5-fun-0-'}}] )
			  in  let <_cor22> =
				  %% Line 144
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 144
				      call 'erlang':'list_to_binary'
					  (_cor22)
				  in  let <_cor29> =
					  %% Line 146
					  call 'erlang':'byte_size'
					      (Title_UC)
				      in  let <_cor24> =
					      %% Line 146
					      call 'erlang':'byte_size'
						  (Title_UC)
					  in  let <_cor25> =
						  %% Line 146
						  call 'erlang':'+'
						      (0, _cor24)
					      in  let <_cor26> =
						      %% Line 146
						      call 'erlang':'band'
							  (_cor25, 7)
						  in  let <_cor27> =
							  %% Line 146
							  call 'erlang':'-'
							      (8, _cor26)
						      in  let <_cor28> =
							      %% Line 146
							      call 'erlang':'band'
								  (_cor27, 7)
							  in  let <_cor30> =
								  %% Line 146
								  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								    #<ParentRef>(32,1,'integer',['unsigned'|['native']]),
								    #<Id>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor29>(32,1,'integer',['unsigned'|['native']]),
								    #<Title_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor28,8,'integer',['unsigned'|['big']]),
								    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							      in  %% Line 145
								  call 'wxe_util':'call'
								      (307, _cor30)
	  ( <_cor35,_cor34,_cor33,_cor32,_cor31> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor35,_cor34,_cor33,_cor32,_cor31})
		  -| [{'function_name',{'create',5}}] )
	    -| ['compiler_generated'] )
	end
'createStatusBar'/1 =
    %% Line 152
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 153
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 154
	      apply 'createStatusBar'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'createStatusBar',1}}] )
	    -| ['compiler_generated'] )
	end
'createStatusBar'/2 =
    %% Line 162
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor17},Options>
	      when %% Line 163
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 164
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 165
		      ( fun (_cor8,_cor7) ->
			    case <_cor8,_cor7> of
			      <{'number',Number},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<Number>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 166
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor5> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor5|Acc]
			      %% Line 167
			      <{'id',Id},Acc> when 'true' ->
				  let <_cor6> =
				      #{#<3>(32,1,'integer',['unsigned'|['native']]),
					#<Id>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor6|Acc]
			      %% Line 168
			      <BadOpt,_cor18> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-createStatusBar/2-fun-0-'}}] )
		  in  let <_cor12> =
			  %% Line 169
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 169
			      call 'erlang':'list_to_binary'
				  (_cor12)
			  in  let <_cor14> =
				  %% Line 171
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 170
				  call 'wxe_util':'call'
				      (308, _cor14)
	  ( <_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15})
		  -| [{'function_name',{'createStatusBar',2}}] )
	    -| ['compiler_generated'] )
	end
'createToolBar'/1 =
    %% Line 177
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 178
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 179
	      apply 'createToolBar'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'createToolBar',1}}] )
	    -| ['compiler_generated'] )
	end
'createToolBar'/2 =
    %% Line 186
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 187
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 188
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 189
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 190
			      <{'id',Id},Acc> when 'true' ->
				  let <_cor5> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<Id>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor5|Acc]
			      %% Line 191
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-createToolBar/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 192
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 192
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 194
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 193
				  call 'wxe_util':'call'
				      (309, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'createToolBar',2}}] )
	    -| ['compiler_generated'] )
	end
'getClientAreaOrigin'/1 =
    %% Line 199
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 200
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 202
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 201
		      call 'wxe_util':'call'
			  (310, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getClientAreaOrigin',1}}] )
	    -| ['compiler_generated'] )
	end
'getMenuBar'/1 =
    %% Line 207
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 208
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 210
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 209
		      call 'wxe_util':'call'
			  (311, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getMenuBar',1}}] )
	    -| ['compiler_generated'] )
	end
'getStatusBar'/1 =
    %% Line 215
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 216
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 218
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 217
		      call 'wxe_util':'call'
			  (312, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getStatusBar',1}}] )
	    -| ['compiler_generated'] )
	end
'getStatusBarPane'/1 =
    %% Line 223
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 224
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 226
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 225
		      call 'wxe_util':'call'
			  (313, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getStatusBarPane',1}}] )
	    -| ['compiler_generated'] )
	end
'getToolBar'/1 =
    %% Line 231
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 232
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 234
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 233
		      call 'wxe_util':'call'
			  (314, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getToolBar',1}}] )
	    -| ['compiler_generated'] )
	end
'processCommand'/2 =
    %% Line 239
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Winid>
	      when %% Line 240
		call 'erlang':'is_integer'
		    (Winid) ->
	      do  %% Line 241
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 243
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Winid>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 242
		      call 'wxe_util':'call'
			  (315, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'processCommand',2}}] )
	    -| ['compiler_generated'] )
	end
'sendSizeEvent'/1 =
    %% Line 248
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 249
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 251
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 250
		      call 'wxe_util':'cast'
			  (316, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'sendSizeEvent',1}}] )
	    -| ['compiler_generated'] )
	end
'setMenuBar'/2 =
    %% Line 256
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',MenubarRef,MenubarT,_cor10}> when 'true' ->
	      do  %% Line 257
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 258
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (MenubarT,
				       'wxMenuBar') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call MenubarT:'parent_class'
				    ('wxMenuBar')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 260
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<MenubarRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 259
			  call 'wxe_util':'cast'
			      (317, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setMenuBar',2}}] )
	    -| ['compiler_generated'] )
	end
'setStatusBar'/2 =
    %% Line 265
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',StatbarRef,StatbarT,_cor10}> when 'true' ->
	      do  %% Line 266
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 267
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (StatbarT,
				       'wxStatusBar') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call StatbarT:'parent_class'
				    ('wxStatusBar')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 269
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<StatbarRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 268
			  call 'wxe_util':'cast'
			      (318, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setStatusBar',2}}] )
	    -| ['compiler_generated'] )
	end
'setStatusBarPane'/2 =
    %% Line 274
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 275
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 276
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 278
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 277
		      call 'wxe_util':'cast'
			  (319, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setStatusBarPane',2}}] )
	    -| ['compiler_generated'] )
	end
'setStatusText'/2 =
    %% Line 284
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <This = {'wx_ref',_cor5,_cor6,_cor7},Text>
	      when %% Line 285
		call 'erlang':'is_list'
		    (Text) ->
	      %% Line 286
	      apply 'setStatusText'/3
		  (This, Text, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'setStatusText',2}}] )
	    -| ['compiler_generated'] )
	end
'setStatusText'/3 =
    %% Line 292
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor26},Text,Options>
	      when let <_cor3> =
		    %% Line 293
		    call 'erlang':'is_list'
			(Text)
		in  let <_cor4> =
			%% Line 293
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 293
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 294
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 295
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <MOpts> =
			  %% Line 296
			  ( fun (_cor10,_cor9) ->
				case <_cor10,_cor9> of
				  <{'number',Number},Acc> when 'true' ->
				      let <_cor8> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<Number>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor8|Acc]
				  %% Line 297
				  <BadOpt,_cor27> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-setStatusText/3-fun-0-'}}] )
		      in  let <_cor14> =
			      %% Line 298
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 298
				  call 'erlang':'list_to_binary'
				      (_cor14)
			      in  let <_cor21> =
				      %% Line 300
				      call 'erlang':'byte_size'
					  (Text_UC)
				  in  let <_cor16> =
					  %% Line 300
					  call 'erlang':'byte_size'
					      (Text_UC)
				      in  let <_cor17> =
					      %% Line 300
					      call 'erlang':'+'
						  (0, _cor16)
					  in  let <_cor18> =
						  %% Line 300
						  call 'erlang':'band'
						      (_cor17, 7)
					      in  let <_cor19> =
						      %% Line 300
						      call 'erlang':'-'
							  (8, _cor18)
						  in  let <_cor20> =
							  %% Line 300
							  call 'erlang':'band'
							      (_cor19, 7)
						      in  let <_cor22> =
							      %% Line 300
							      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								#<_cor21>(32,1,'integer',['unsigned'|['native']]),
								#<Text_UC>('all',8,'binary',['unsigned'|['big']]),
								#<0>(_cor20,8,'integer',['unsigned'|['big']]),
								#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							  in  %% Line 299
							      call 'wxe_util':'cast'
								  (320, _cor22)
	  ( <_cor25,_cor24,_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor25,_cor24,_cor23})
		  -| [{'function_name',{'setStatusText',3}}] )
	    -| ['compiler_generated'] )
	end
'setStatusWidths'/2 =
    %% Line 305
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor20},Widths_field>
	      when %% Line 306
		call 'erlang':'is_list'
		    (Widths_field) ->
	      do  %% Line 307
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor16> =
		      %% Line 309
		      call 'erlang':'length'
			  (Widths_field)
		  in  let <_cor10> =
			  %% Line 310
			  call 'erlang':'length'
			      (Widths_field)
		      in  let <_cor9> =
			      call 'erlang':'*'
				  (_cor10, 4)
			  in  let <_cor8> =
				  primop 'bs_init_writable'
				      (_cor9)
			      in  let <_cor15> =
				      %% Line 310
				      ( letrec
					    'lbc$^0'/2 =
						fun (_cor14,_cor13) ->
						    case <_cor14,_cor13> of
						      <[C|_cor12],_cor13> when 'true' ->
							  let <_cor13> =
							      ( #{#<_cor13>('all',1,'binary',[]),
								  #<C>(32,1,'integer',['signed'|['native']])}#
								-| ['compiler_generated','single_use'] )
							  in  apply 'lbc$^0'/2
								  (_cor12, _cor13)
						      <[],_cor13> when 'true' ->
							  _cor13
						      ( <_cor14,_cor13> when 'true' ->
							    ( primop 'match_fail'
								  ({'function_clause',_cor14,_cor13})
							      -| [{'function_name',{'lbc$^0',2}}] )
							-| ['compiler_generated'] )
						    end
					in  apply 'lbc$^0'/2
						(Widths_field, _cor8)
					-| ['list_comprehension'] )
				  in  let <_cor4> =
					  %% Line 310
					  call 'erlang':'length'
					      (Widths_field)
				      in  let <_cor5> =
					      %% Line 310
					      call 'erlang':'+'
						  (0, _cor4)
					  in  let <_cor6> =
						  %% Line 310
						  call 'erlang':'rem'
						      (_cor5, 2)
					      in  let <_cor7> =
						      %% Line 310
						      call 'erlang':'*'
							  (_cor6, 32)
						  in  let <_cor17> =
							  %% Line 309
							  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
							    #<_cor16>(32,1,'integer',['unsigned'|['native']]),
							    #<_cor15>(%% Line 310
								      'all',8,'binary',['unsigned'|['big']]),
							    #<%% Line 310
							      0>(_cor7,1,'integer',['unsigned'|['big']])}#
						      in  %% Line 308
							  call 'wxe_util':'cast'
							      (321, _cor17)
	  ( <_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18})
		  -| [{'function_name',{'setStatusWidths',2}}] )
	    -| ['compiler_generated'] )
	end
'setToolBar'/2 =
    %% Line 315
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',ToolbarRef,ToolbarT,_cor10}> when 'true' ->
	      do  %% Line 316
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 317
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ToolbarT,
				       'wxToolBar') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ToolbarT:'parent_class'
				    ('wxToolBar')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 319
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<ToolbarRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 318
			  call 'wxe_util':'cast'
			      (322, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setToolBar',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 323
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 324
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 325
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 326
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'showFullScreen'/3 =
    %% Line 329
    fun (_cor2,_cor1,_cor0) ->
	call 'wxTopLevelWindow':'showFullScreen'
	    (_cor2, _cor1, _cor0)
'showFullScreen'/2 =
    %% Line 331
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'showFullScreen'
	    (_cor1, _cor0)
'setTitle'/2 =
    %% Line 333
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'setTitle'
	    (_cor1, _cor0)
'setShape'/2 =
    %% Line 335
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'setShape'
	    (_cor1, _cor0)
'centreOnScreen'/2 =
    %% Line 337
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'centreOnScreen'
	    (_cor1, _cor0)
'centreOnScreen'/1 =
    %% Line 339
    fun (_cor0) ->
	call 'wxTopLevelWindow':'centreOnScreen'
	    (_cor0)
'centerOnScreen'/2 =
    %% Line 341
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'centerOnScreen'
	    (_cor1, _cor0)
'centerOnScreen'/1 =
    %% Line 343
    fun (_cor0) ->
	call 'wxTopLevelWindow':'centerOnScreen'
	    (_cor0)
'setIcons'/2 =
    %% Line 345
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'setIcons'
	    (_cor1, _cor0)
'setIcon'/2 =
    %% Line 347
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'setIcon'
	    (_cor1, _cor0)
'requestUserAttention'/2 =
    %% Line 349
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'requestUserAttention'
	    (_cor1, _cor0)
'requestUserAttention'/1 =
    %% Line 351
    fun (_cor0) ->
	call 'wxTopLevelWindow':'requestUserAttention'
	    (_cor0)
'maximize'/2 =
    %% Line 353
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'maximize'
	    (_cor1, _cor0)
'maximize'/1 =
    %% Line 355
    fun (_cor0) ->
	call 'wxTopLevelWindow':'maximize'
	    (_cor0)
'isMaximized'/1 =
    %% Line 357
    fun (_cor0) ->
	call 'wxTopLevelWindow':'isMaximized'
	    (_cor0)
'isIconized'/1 =
    %% Line 359
    fun (_cor0) ->
	call 'wxTopLevelWindow':'isIconized'
	    (_cor0)
'isFullScreen'/1 =
    %% Line 361
    fun (_cor0) ->
	call 'wxTopLevelWindow':'isFullScreen'
	    (_cor0)
'iconize'/2 =
    %% Line 363
    fun (_cor1,_cor0) ->
	call 'wxTopLevelWindow':'iconize'
	    (_cor1, _cor0)
'iconize'/1 =
    %% Line 365
    fun (_cor0) ->
	call 'wxTopLevelWindow':'iconize'
	    (_cor0)
'isActive'/1 =
    %% Line 367
    fun (_cor0) ->
	call 'wxTopLevelWindow':'isActive'
	    (_cor0)
'getTitle'/1 =
    %% Line 369
    fun (_cor0) ->
	call 'wxTopLevelWindow':'getTitle'
	    (_cor0)
'getIcons'/1 =
    %% Line 371
    fun (_cor0) ->
	call 'wxTopLevelWindow':'getIcons'
	    (_cor0)
'getIcon'/1 =
    %% Line 373
    fun (_cor0) ->
	call 'wxTopLevelWindow':'getIcon'
	    (_cor0)
'warpPointer'/3 =
    %% Line 376
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 378
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 380
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 382
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 384
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 386
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 388
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 390
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 392
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 394
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 396
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 398
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 400
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 402
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 404
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 406
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 408
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 410
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 412
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 414
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 416
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 418
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 420
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 422
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 424
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 426
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 428
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 430
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 432
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 434
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 436
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 438
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 440
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 442
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 444
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 446
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 448
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 450
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setLabel'/2 =
    %% Line 452
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setLabel'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 454
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 456
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 458
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 460
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 462
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 464
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 466
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 468
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 470
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 472
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 474
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 476
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 478
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 480
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 482
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 484
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 486
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 488
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 490
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 492
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 494
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 496
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 498
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 500
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 502
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 504
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 506
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 508
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 510
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 512
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 514
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 516
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 518
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 520
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 522
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 524
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 526
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 528
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 530
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 532
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 534
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 536
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 538
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 540
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 542
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 544
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 546
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 548
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 550
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 552
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 554
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 556
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 558
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 560
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 562
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 564
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 566
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 568
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 570
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 572
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 574
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 576
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 578
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 580
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 582
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 584
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 586
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 588
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 590
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 592
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 594
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 596
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 598
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 600
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 602
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 604
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 606
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 608
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 610
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 612
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 614
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 616
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 618
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 620
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 622
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 624
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 626
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 628
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 630
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 632
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getLabel'/1 =
    %% Line 634
    fun (_cor0) ->
	call 'wxWindow':'getLabel'
	    (_cor0)
'getId'/1 =
    %% Line 636
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 638
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 640
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 642
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 644
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 646
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 648
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 650
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 652
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 654
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 656
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 658
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 660
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 662
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 664
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 666
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 668
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 670
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 672
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 674
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 676
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 678
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 680
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 682
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 684
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 686
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 688
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 690
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 692
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 694
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 696
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 698
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 700
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 702
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 704
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 706
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 708
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 710
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 712
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 714
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 716
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 718
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 720
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 722
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 724
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 727
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 729
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 731
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 733
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 735
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxFrame')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxFrame', _cor0)
end