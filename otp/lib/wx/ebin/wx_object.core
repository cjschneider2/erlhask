module 'wx_object' ['behaviour_info'/1,
		    'call'/2,
		    'call'/3,
		    'cast'/2,
		    'format_status'/2,
		    'get_pid'/1,
		    'init_it'/6,
		    'module_info'/0,
		    'module_info'/1,
		    'reply'/2,
		    'start'/3,
		    'start'/4,
		    'start_link'/3,
		    'start_link'/4,
		    'system_code_change'/4,
		    'system_continue'/3,
		    'system_terminate'/4]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 25
		'type' =
		    %% Line 25
		    [{{'record','wx'},[{'typed_record_field',{'record_field',25,{'atom',25,'id'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'obj'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'remote_type',26,[{'atom',26,'wx'}|[{'atom',26,'wx_object'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'userData'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'type',27,'term',[]}]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'event'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'type',28,'event',[]}]]}}]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{'wx',{'type',31,'record',[{'atom',31,'wx'}]},[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','wxNavigationKey'},[{'typed_record_field',{'record_field',35,{'atom',35,'type'}},{'type',35,'union',[{'atom',35,'undefined'}|[{'type',35,'wxNavigationKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'flags'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'integer',[]}]]}}|[{'typed_record_field',{'record_field',37,{'atom',37,'focus'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'remote_type',37,[{'atom',37,'wxWindow'}|[{'atom',37,'wxWindow'}|[[]]]]}]]}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{'wxNavigationKeyEventType',{'atom',38,'navigation_key'},[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{'wxNavigationKey',{'type',39,'record',[{'atom',39,'wxNavigationKey'}]},[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','wxSash'},[{'typed_record_field',{'record_field',41,{'atom',41,'type'}},{'type',41,'union',[{'atom',41,'undefined'}|[{'type',41,'wxSashEventType',[]}]]}}|[{'typed_record_field',{'record_field',42,{'atom',42,'edge'}},{'type',42,'union',[{'atom',42,'undefined'}|[{'remote_type',42,[{'atom',42,'wx'}|[{'atom',42,'wx_enum'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'dragRect'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'tuple',[{'ann_type',43,[{'var',43,'X'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'Y'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'W'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'H'}|[{'type',43,'integer',[]}]]}]]]]}]]}}|[{'typed_record_field',{'record_field',44,{'atom',44,'dragStatus'}},{'type',44,'union',[{'atom',44,'undefined'}|[{'remote_type',44,[{'atom',44,'wx'}|[{'atom',44,'wx_enum'}|[[]]]]}]]}}]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'wxSashEventType',{'atom',45,'sash_dragged'},[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{'wxSash',{'type',46,'record',[{'atom',46,'wxSash'}]},[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','wxList'},[{'typed_record_field',{'record_field',48,{'atom',48,'type'}},{'type',48,'union',[{'atom',48,'undefined'}|[{'type',48,'wxListEventType',[]}]]}}|[{'typed_record_field',{'record_field',49,{'atom',49,'code'}},{'type',49,'union',[{'atom',49,'undefined'}|[{'type',49,'integer',[]}]]}}|[{'typed_record_field',{'record_field',50,{'atom',50,'oldItemIndex'}},{'type',50,'union',[{'atom',50,'undefined'}|[{'type',50,'integer',[]}]]}}|[{'typed_record_field',{'record_field',51,{'atom',51,'itemIndex'}},{'type',51,'union',[{'atom',51,'undefined'}|[{'type',51,'integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'col'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'pointDrag'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'tuple',[{'ann_type',53,[{'var',53,'X'}|[{'type',53,'integer',[]}]]}|[{'ann_type',53,[{'var',53,'Y'}|[{'type',53,'integer',[]}]]}]]}]]}}]]]]]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{'wxListEventType',{'type',54,'union',[{'atom',54,'command_list_begin_drag'}|[{'atom',54,'command_list_begin_rdrag'}|[{'atom',54,'command_list_begin_label_edit'}|[{'atom',54,'command_list_end_label_edit'}|[{'atom',54,'command_list_delete_item'}|[{'atom',54,'command_list_delete_all_items'}|[{'atom',54,'command_list_key_down'}|[{'atom',54,'command_list_insert_item'}|[{'atom',54,'command_list_col_click'}|[{'atom',54,'command_list_col_right_click'}|[{'atom',54,'command_list_col_begin_drag'}|[{'atom',54,'command_list_col_dragging'}|[{'atom',54,'command_list_col_end_drag'}|[{'atom',54,'command_list_item_selected'}|[{'atom',54,'command_list_item_deselected'}|[{'atom',54,'command_list_item_right_click'}|[{'atom',54,'command_list_item_middle_click'}|[{'atom',54,'command_list_item_activated'}|[{'atom',54,'command_list_item_focused'}|[{'atom',54,'command_list_cache_hint'}]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{'wxList',{'type',55,'record',[{'atom',55,'wxList'}]},[]}],
		%% Line 57
		'type' =
		    %% Line 57
		    [{{'record','wxNotebook'},[{'typed_record_field',{'record_field',57,{'atom',57,'type'}},{'type',57,'union',[{'atom',57,'undefined'}|[{'type',57,'wxNotebookEventType',[]}]]}}],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{'wxNotebookEventType',{'type',58,'union',[{'atom',58,'command_notebook_page_changed'}|[{'atom',58,'command_notebook_page_changing'}]]},[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{'wxNotebook',{'type',59,'record',[{'atom',59,'wxNotebook'}]},[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','wxDisplayChanged'},[{'typed_record_field',{'record_field',61,{'atom',61,'type'}},{'type',61,'union',[{'atom',61,'undefined'}|[{'type',61,'wxDisplayChangedEventType',[]}]]}}],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{'wxDisplayChangedEventType',{'atom',62,'display_changed'},[]}],
		%% Line 63
		'type' =
		    %% Line 63
		    [{'wxDisplayChanged',{'type',63,'record',[{'atom',63,'wxDisplayChanged'}]},[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','wxErase'},[{'typed_record_field',{'record_field',65,{'atom',65,'type'}},{'type',65,'union',[{'atom',65,'undefined'}|[{'type',65,'wxEraseEventType',[]}]]}}|[{'typed_record_field',{'record_field',66,{'atom',66,'dc'}},{'type',66,'union',[{'atom',66,'undefined'}|[{'remote_type',66,[{'atom',66,'wxDC'}|[{'atom',66,'wxDC'}|[[]]]]}]]}}]],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{'wxEraseEventType',{'atom',67,'erase_background'},[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{'wxErase',{'type',68,'record',[{'atom',68,'wxErase'}]},[]}],
		%% Line 70
		'type' =
		    %% Line 70
		    [{{'record','wxKey'},[{'typed_record_field',{'record_field',70,{'atom',70,'type'}},{'type',70,'union',[{'atom',70,'undefined'}|[{'type',70,'wxKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',71,{'atom',71,'x'}},{'type',71,'union',[{'atom',71,'undefined'}|[{'type',71,'integer',[]}]]}}|[{'typed_record_field',{'record_field',72,{'atom',72,'y'}},{'type',72,'union',[{'atom',72,'undefined'}|[{'type',72,'integer',[]}]]}}|[{'typed_record_field',{'record_field',73,{'atom',73,'keyCode'}},{'type',73,'union',[{'atom',73,'undefined'}|[{'type',73,'integer',[]}]]}}|[{'typed_record_field',{'record_field',74,{'atom',74,'controlDown'}},{'type',74,'union',[{'atom',74,'undefined'}|[{'type',74,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'shiftDown'}},{'type',75,'union',[{'atom',75,'undefined'}|[{'type',75,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',76,{'atom',76,'altDown'}},{'type',76,'union',[{'atom',76,'undefined'}|[{'type',76,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',77,{'atom',77,'metaDown'}},{'type',77,'union',[{'atom',77,'undefined'}|[{'type',77,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',78,{'atom',78,'scanCode'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',79,{'atom',79,'uniChar'}},{'type',79,'union',[{'atom',79,'undefined'}|[{'type',79,'integer',[]}]]}}|[{'typed_record_field',{'record_field',80,{'atom',80,'rawCode'}},{'type',80,'union',[{'atom',80,'undefined'}|[{'type',80,'integer',[]}]]}}|[{'typed_record_field',{'record_field',81,{'atom',81,'rawFlags'}},{'type',81,'union',[{'atom',81,'undefined'}|[{'type',81,'integer',[]}]]}}]]]]]]]]]]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{'wxKeyEventType',{'type',82,'union',[{'atom',82,'char'}|[{'atom',82,'char_hook'}|[{'atom',82,'key_down'}|[{'atom',82,'key_up'}]]]]},[]}],
		%% Line 83
		'type' =
		    %% Line 83
		    [{'wxKey',{'type',83,'record',[{'atom',83,'wxKey'}]},[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{{'record','wxWindowDestroy'},[{'typed_record_field',{'record_field',85,{'atom',85,'type'}},{'type',85,'union',[{'atom',85,'undefined'}|[{'type',85,'wxWindowDestroyEventType',[]}]]}}],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{'wxWindowDestroyEventType',{'atom',86,'destroy'},[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{'wxWindowDestroy',{'type',87,'record',[{'atom',87,'wxWindowDestroy'}]},[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','wxCalendar'},[{'typed_record_field',{'record_field',89,{'atom',89,'type'}},{'type',89,'union',[{'atom',89,'undefined'}|[{'type',89,'wxCalendarEventType',[]}]]}}],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{'wxCalendarEventType',{'type',90,'union',[{'atom',90,'calendar_sel_changed'}|[{'atom',90,'calendar_day_changed'}|[{'atom',90,'calendar_month_changed'}|[{'atom',90,'calendar_year_changed'}|[{'atom',90,'calendar_doubleclicked'}|[{'atom',90,'calendar_weekday_clicked'}]]]]]]},[]}],
		%% Line 91
		'type' =
		    %% Line 91
		    [{'wxCalendar',{'type',91,'record',[{'atom',91,'wxCalendar'}]},[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','wxSplitter'},[{'typed_record_field',{'record_field',93,{'atom',93,'type'}},{'type',93,'union',[{'atom',93,'undefined'}|[{'type',93,'wxSplitterEventType',[]}]]}}],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{'wxSplitterEventType',{'type',94,'union',[{'atom',94,'command_splitter_sash_pos_changed'}|[{'atom',94,'command_splitter_sash_pos_changing'}|[{'atom',94,'command_splitter_doubleclicked'}|[{'atom',94,'command_splitter_unsplit'}]]]]},[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{'wxSplitter',{'type',95,'record',[{'atom',95,'wxSplitter'}]},[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','wxScroll'},[{'typed_record_field',{'record_field',97,{'atom',97,'type'}},{'type',97,'union',[{'atom',97,'undefined'}|[{'type',97,'wxScrollEventType',[]}]]}}|[{'typed_record_field',{'record_field',98,{'atom',98,'commandInt'}},{'type',98,'union',[{'atom',98,'undefined'}|[{'type',98,'integer',[]}]]}}|[{'typed_record_field',{'record_field',99,{'atom',99,'extraLong'}},{'type',99,'union',[{'atom',99,'undefined'}|[{'type',99,'integer',[]}]]}}]]],[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{'wxScrollEventType',{'type',100,'union',[{'atom',100,'scroll_top'}|[{'atom',100,'scroll_bottom'}|[{'atom',100,'scroll_lineup'}|[{'atom',100,'scroll_linedown'}|[{'atom',100,'scroll_pageup'}|[{'atom',100,'scroll_pagedown'}|[{'atom',100,'scroll_thumbtrack'}|[{'atom',100,'scroll_thumbrelease'}|[{'atom',100,'scroll_changed'}]]]]]]]]]},[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{'wxScroll',{'type',101,'record',[{'atom',101,'wxScroll'}]},[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','wxMenu'},[{'typed_record_field',{'record_field',103,{'atom',103,'type'}},{'type',103,'union',[{'atom',103,'undefined'}|[{'type',103,'wxMenuEventType',[]}]]}}],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{'wxMenuEventType',{'type',104,'union',[{'atom',104,'menu_open'}|[{'atom',104,'menu_close'}|[{'atom',104,'menu_highlight'}]]]},[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{'wxMenu',{'type',105,'record',[{'atom',105,'wxMenu'}]},[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','wxContextMenu'},[{'typed_record_field',{'record_field',107,{'atom',107,'type'}},{'type',107,'union',[{'atom',107,'undefined'}|[{'type',107,'wxContextMenuEventType',[]}]]}}],[]}],
		%% Line 108
		'type' =
		    %% Line 108
		    [{'wxContextMenuEventType',{'atom',108,'context_menu'},[]}],
		%% Line 109
		'type' =
		    %% Line 109
		    [{'wxContextMenu',{'type',109,'record',[{'atom',109,'wxContextMenu'}]},[]}],
		%% Line 111
		'type' =
		    %% Line 111
		    [{{'record','wxShow'},[{'typed_record_field',{'record_field',111,{'atom',111,'type'}},{'type',111,'union',[{'atom',111,'undefined'}|[{'type',111,'wxShowEventType',[]}]]}}],[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{'wxShowEventType',{'atom',112,'show'},[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{'wxShow',{'type',113,'record',[{'atom',113,'wxShow'}]},[]}],
		%% Line 115
		'type' =
		    %% Line 115
		    [{{'record','wxSpin'},[{'typed_record_field',{'record_field',115,{'atom',115,'type'}},{'type',115,'union',[{'atom',115,'undefined'}|[{'type',115,'wxSpinEventType',[]}]]}}|[{'typed_record_field',{'record_field',116,{'atom',116,'commandInt'}},{'type',116,'union',[{'atom',116,'undefined'}|[{'type',116,'integer',[]}]]}}]],[]}],
		%% Line 117
		'type' =
		    %% Line 117
		    [{'wxSpinEventType',{'type',117,'union',[{'atom',117,'command_spinctrl_updated'}|[{'atom',117,'spin_up'}|[{'atom',117,'spin_down'}|[{'atom',117,'spin'}]]]]},[]}],
		%% Line 118
		'type' =
		    %% Line 118
		    [{'wxSpin',{'type',118,'record',[{'atom',118,'wxSpin'}]},[]}],
		%% Line 120
		'type' =
		    %% Line 120
		    [{{'record','wxSetCursor'},[{'typed_record_field',{'record_field',120,{'atom',120,'type'}},{'type',120,'union',[{'atom',120,'undefined'}|[{'type',120,'wxSetCursorEventType',[]}]]}}],[]}],
		%% Line 121
		'type' =
		    %% Line 121
		    [{'wxSetCursorEventType',{'atom',121,'set_cursor'},[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{'wxSetCursor',{'type',122,'record',[{'atom',122,'wxSetCursor'}]},[]}],
		%% Line 124
		'type' =
		    %% Line 124
		    [{{'record','wxFontPicker'},[{'typed_record_field',{'record_field',124,{'atom',124,'type'}},{'type',124,'union',[{'atom',124,'undefined'}|[{'type',124,'wxFontPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',125,{'atom',125,'font'}},{'type',125,'union',[{'atom',125,'undefined'}|[{'remote_type',125,[{'atom',125,'wxFont'}|[{'atom',125,'wxFont'}|[[]]]]}]]}}]],[]}],
		%% Line 126
		'type' =
		    %% Line 126
		    [{'wxFontPickerEventType',{'atom',126,'command_fontpicker_changed'},[]}],
		%% Line 127
		'type' =
		    %% Line 127
		    [{'wxFontPicker',{'type',127,'record',[{'atom',127,'wxFontPicker'}]},[]}],
		%% Line 129
		'type' =
		    %% Line 129
		    [{{'record','wxScrollWin'},[{'typed_record_field',{'record_field',129,{'atom',129,'type'}},{'type',129,'union',[{'atom',129,'undefined'}|[{'type',129,'wxScrollWinEventType',[]}]]}}],[]}],
		%% Line 130
		'type' =
		    %% Line 130
		    [{'wxScrollWinEventType',{'type',130,'union',[{'atom',130,'scrollwin_top'}|[{'atom',130,'scrollwin_bottom'}|[{'atom',130,'scrollwin_lineup'}|[{'atom',130,'scrollwin_linedown'}|[{'atom',130,'scrollwin_pageup'}|[{'atom',130,'scrollwin_pagedown'}|[{'atom',130,'scrollwin_thumbtrack'}|[{'atom',130,'scrollwin_thumbrelease'}]]]]]]]]},[]}],
		%% Line 131
		'type' =
		    %% Line 131
		    [{'wxScrollWin',{'type',131,'record',[{'atom',131,'wxScrollWin'}]},[]}],
		%% Line 133
		'type' =
		    %% Line 133
		    [{{'record','wxPaint'},[{'typed_record_field',{'record_field',133,{'atom',133,'type'}},{'type',133,'union',[{'atom',133,'undefined'}|[{'type',133,'wxPaintEventType',[]}]]}}],[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{'wxPaintEventType',{'atom',134,'paint'},[]}],
		%% Line 135
		'type' =
		    %% Line 135
		    [{'wxPaint',{'type',135,'record',[{'atom',135,'wxPaint'}]},[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','wxChildFocus'},[{'typed_record_field',{'record_field',137,{'atom',137,'type'}},{'type',137,'union',[{'atom',137,'undefined'}|[{'type',137,'wxChildFocusEventType',[]}]]}}],[]}],
		%% Line 138
		'type' =
		    %% Line 138
		    [{'wxChildFocusEventType',{'atom',138,'child_focus'},[]}],
		%% Line 139
		'type' =
		    %% Line 139
		    [{'wxChildFocus',{'type',139,'record',[{'atom',139,'wxChildFocus'}]},[]}],
		%% Line 141
		'type' =
		    %% Line 141
		    [{{'record','wxMaximize'},[{'typed_record_field',{'record_field',141,{'atom',141,'type'}},{'type',141,'union',[{'atom',141,'undefined'}|[{'type',141,'wxMaximizeEventType',[]}]]}}],[]}],
		%% Line 142
		'type' =
		    %% Line 142
		    [{'wxMaximizeEventType',{'atom',142,'maximize'},[]}],
		%% Line 143
		'type' =
		    %% Line 143
		    [{'wxMaximize',{'type',143,'record',[{'atom',143,'wxMaximize'}]},[]}],
		%% Line 145
		'type' =
		    %% Line 145
		    [{{'record','wxFileDirPicker'},[{'typed_record_field',{'record_field',145,{'atom',145,'type'}},{'type',145,'union',[{'atom',145,'undefined'}|[{'type',145,'wxFileDirPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',146,{'atom',146,'path'}},{'type',146,'union',[{'atom',146,'undefined'}|[{'remote_type',146,[{'atom',146,'unicode'}|[{'atom',146,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 147
		'type' =
		    %% Line 147
		    [{'wxFileDirPickerEventType',{'type',147,'union',[{'atom',147,'command_filepicker_changed'}|[{'atom',147,'command_dirpicker_changed'}]]},[]}],
		%% Line 148
		'type' =
		    %% Line 148
		    [{'wxFileDirPicker',{'type',148,'record',[{'atom',148,'wxFileDirPicker'}]},[]}],
		%% Line 150
		'type' =
		    %% Line 150
		    [{{'record','wxFocus'},[{'typed_record_field',{'record_field',150,{'atom',150,'type'}},{'type',150,'union',[{'atom',150,'undefined'}|[{'type',150,'wxFocusEventType',[]}]]}}],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{'wxFocusEventType',{'type',151,'union',[{'atom',151,'set_focus'}|[{'atom',151,'kill_focus'}]]},[]}],
		%% Line 152
		'type' =
		    %% Line 152
		    [{'wxFocus',{'type',152,'record',[{'atom',152,'wxFocus'}]},[]}],
		%% Line 154
		'type' =
		    %% Line 154
		    [{{'record','wxDate'},[{'typed_record_field',{'record_field',154,{'atom',154,'type'}},{'type',154,'union',[{'atom',154,'undefined'}|[{'type',154,'wxDateEventType',[]}]]}}|[{'typed_record_field',{'record_field',155,{'atom',155,'date'}},{'type',155,'union',[{'atom',155,'undefined'}|[{'remote_type',155,[{'atom',155,'wx'}|[{'atom',155,'wx_datetime'}|[[]]]]}]]}}]],[]}],
		%% Line 156
		'type' =
		    %% Line 156
		    [{'wxDateEventType',{'atom',156,'date_changed'},[]}],
		%% Line 157
		'type' =
		    %% Line 157
		    [{'wxDate',{'type',157,'record',[{'atom',157,'wxDate'}]},[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','wxHtmlLink'},[{'typed_record_field',{'record_field',159,{'atom',159,'type'}},{'type',159,'union',[{'atom',159,'undefined'}|[{'type',159,'wxHtmlLinkEventType',[]}]]}}|[{'typed_record_field',{'record_field',160,{'atom',160,'linkInfo'}},{'type',160,'union',[{'atom',160,'undefined'}|[{'remote_type',160,[{'atom',160,'wx'}|[{'atom',160,'wx_wxHtmlLinkInfo'}|[[]]]]}]]}}]],[]}],
		%% Line 161
		'type' =
		    %% Line 161
		    [{'wxHtmlLinkEventType',{'atom',161,'command_html_link_clicked'},[]}],
		%% Line 162
		'type' =
		    %% Line 162
		    [{'wxHtmlLink',{'type',162,'record',[{'atom',162,'wxHtmlLink'}]},[]}],
		%% Line 164
		'type' =
		    %% Line 164
		    [{{'record','wxHelp'},[{'typed_record_field',{'record_field',164,{'atom',164,'type'}},{'type',164,'union',[{'atom',164,'undefined'}|[{'type',164,'wxHelpEventType',[]}]]}}],[]}],
		%% Line 165
		'type' =
		    %% Line 165
		    [{'wxHelpEventType',{'type',165,'union',[{'atom',165,'help'}|[{'atom',165,'detailed_help'}]]},[]}],
		%% Line 166
		'type' =
		    %% Line 166
		    [{'wxHelp',{'type',166,'record',[{'atom',166,'wxHelp'}]},[]}],
		%% Line 168
		'type' =
		    %% Line 168
		    [{{'record','wxActivate'},[{'typed_record_field',{'record_field',168,{'atom',168,'type'}},{'type',168,'union',[{'atom',168,'undefined'}|[{'type',168,'wxActivateEventType',[]}]]}}|[{'typed_record_field',{'record_field',169,{'atom',169,'active'}},{'type',169,'union',[{'atom',169,'undefined'}|[{'type',169,'boolean',[]}]]}}]],[]}],
		%% Line 170
		'type' =
		    %% Line 170
		    [{'wxActivateEventType',{'type',170,'union',[{'atom',170,'activate'}|[{'atom',170,'activate_app'}|[{'atom',170,'hibernate'}]]]},[]}],
		%% Line 171
		'type' =
		    %% Line 171
		    [{'wxActivate',{'type',171,'record',[{'atom',171,'wxActivate'}]},[]}],
		%% Line 173
		'type' =
		    %% Line 173
		    [{{'record','wxStyledText'},[{'typed_record_field',{'record_field',173,{'atom',173,'type'}},{'type',173,'union',[{'atom',173,'undefined'}|[{'type',173,'wxStyledTextEventType',[]}]]}}|[{'typed_record_field',{'record_field',174,{'atom',174,'position'}},{'type',174,'union',[{'atom',174,'undefined'}|[{'type',174,'integer',[]}]]}}|[{'typed_record_field',{'record_field',175,{'atom',175,'key'}},{'type',175,'union',[{'atom',175,'undefined'}|[{'type',175,'integer',[]}]]}}|[{'typed_record_field',{'record_field',176,{'atom',176,'modifiers'}},{'type',176,'union',[{'atom',176,'undefined'}|[{'type',176,'integer',[]}]]}}|[{'typed_record_field',{'record_field',177,{'atom',177,'modificationType'}},{'type',177,'union',[{'atom',177,'undefined'}|[{'type',177,'integer',[]}]]}}|[{'typed_record_field',{'record_field',178,{'atom',178,'text'}},{'type',178,'union',[{'atom',178,'undefined'}|[{'remote_type',178,[{'atom',178,'unicode'}|[{'atom',178,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',179,{'atom',179,'length'}},{'type',179,'union',[{'atom',179,'undefined'}|[{'type',179,'integer',[]}]]}}|[{'typed_record_field',{'record_field',180,{'atom',180,'linesAdded'}},{'type',180,'union',[{'atom',180,'undefined'}|[{'type',180,'integer',[]}]]}}|[{'typed_record_field',{'record_field',181,{'atom',181,'line'}},{'type',181,'union',[{'atom',181,'undefined'}|[{'type',181,'integer',[]}]]}}|[{'typed_record_field',{'record_field',182,{'atom',182,'foldLevelNow'}},{'type',182,'union',[{'atom',182,'undefined'}|[{'type',182,'integer',[]}]]}}|[{'typed_record_field',{'record_field',183,{'atom',183,'foldLevelPrev'}},{'type',183,'union',[{'atom',183,'undefined'}|[{'type',183,'integer',[]}]]}}|[{'typed_record_field',{'record_field',184,{'atom',184,'margin'}},{'type',184,'union',[{'atom',184,'undefined'}|[{'type',184,'integer',[]}]]}}|[{'typed_record_field',{'record_field',185,{'atom',185,'message'}},{'type',185,'union',[{'atom',185,'undefined'}|[{'type',185,'integer',[]}]]}}|[{'typed_record_field',{'record_field',186,{'atom',186,'wParam'}},{'type',186,'union',[{'atom',186,'undefined'}|[{'type',186,'integer',[]}]]}}|[{'typed_record_field',{'record_field',187,{'atom',187,'lParam'}},{'type',187,'union',[{'atom',187,'undefined'}|[{'type',187,'integer',[]}]]}}|[{'typed_record_field',{'record_field',188,{'atom',188,'listType'}},{'type',188,'union',[{'atom',188,'undefined'}|[{'type',188,'integer',[]}]]}}|[{'typed_record_field',{'record_field',189,{'atom',189,'x'}},{'type',189,'union',[{'atom',189,'undefined'}|[{'type',189,'integer',[]}]]}}|[{'typed_record_field',{'record_field',190,{'atom',190,'y'}},{'type',190,'union',[{'atom',190,'undefined'}|[{'type',190,'integer',[]}]]}}|[{'typed_record_field',{'record_field',191,{'atom',191,'dragText'}},{'type',191,'union',[{'atom',191,'undefined'}|[{'remote_type',191,[{'atom',191,'unicode'}|[{'atom',191,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',192,{'atom',192,'dragAllowMove'}},{'type',192,'union',[{'atom',192,'undefined'}|[{'type',192,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',193,{'atom',193,'dragResult'}},{'type',193,'union',[{'atom',193,'undefined'}|[{'remote_type',193,[{'atom',193,'wx'}|[{'atom',193,'wx_enum'}|[[]]]]}]]}}]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 194
		'type' =
		    %% Line 194
		    [{'wxStyledTextEventType',{'type',194,'union',[{'atom',194,'stc_change'}|[{'atom',194,'stc_styleneeded'}|[{'atom',194,'stc_charadded'}|[{'atom',194,'stc_savepointreached'}|[{'atom',194,'stc_savepointleft'}|[{'atom',194,'stc_romodifyattempt'}|[{'atom',194,'stc_key'}|[{'atom',194,'stc_doubleclick'}|[{'atom',194,'stc_updateui'}|[{'atom',194,'stc_modified'}|[{'atom',194,'stc_macrorecord'}|[{'atom',194,'stc_marginclick'}|[{'atom',194,'stc_needshown'}|[{'atom',194,'stc_painted'}|[{'atom',194,'stc_userlistselection'}|[{'atom',194,'stc_uridropped'}|[{'atom',194,'stc_dwellstart'}|[{'atom',194,'stc_dwellend'}|[{'atom',194,'stc_start_drag'}|[{'atom',194,'stc_drag_over'}|[{'atom',194,'stc_do_drop'}|[{'atom',194,'stc_zoom'}|[{'atom',194,'stc_hotspot_click'}|[{'atom',194,'stc_hotspot_dclick'}|[{'atom',194,'stc_calltip_click'}|[{'atom',194,'stc_autocomp_selection'}]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 195
		'type' =
		    %% Line 195
		    [{'wxStyledText',{'type',195,'record',[{'atom',195,'wxStyledText'}]},[]}],
		%% Line 197
		'type' =
		    %% Line 197
		    [{{'record','wxSysColourChanged'},[{'typed_record_field',{'record_field',197,{'atom',197,'type'}},{'type',197,'union',[{'atom',197,'undefined'}|[{'type',197,'wxSysColourChangedEventType',[]}]]}}],[]}],
		%% Line 198
		'type' =
		    %% Line 198
		    [{'wxSysColourChangedEventType',{'atom',198,'sys_colour_changed'},[]}],
		%% Line 199
		'type' =
		    %% Line 199
		    [{'wxSysColourChanged',{'type',199,'record',[{'atom',199,'wxSysColourChanged'}]},[]}],
		%% Line 201
		'type' =
		    %% Line 201
		    [{{'record','wxGrid'},[{'typed_record_field',{'record_field',201,{'atom',201,'type'}},{'type',201,'union',[{'atom',201,'undefined'}|[{'type',201,'wxGridEventType',[]}]]}}|[{'typed_record_field',{'record_field',202,{'atom',202,'row'}},{'type',202,'union',[{'atom',202,'undefined'}|[{'type',202,'integer',[]}]]}}|[{'typed_record_field',{'record_field',203,{'atom',203,'col'}},{'type',203,'union',[{'atom',203,'undefined'}|[{'type',203,'integer',[]}]]}}|[{'typed_record_field',{'record_field',204,{'atom',204,'x'}},{'type',204,'union',[{'atom',204,'undefined'}|[{'type',204,'integer',[]}]]}}|[{'typed_record_field',{'record_field',205,{'atom',205,'y'}},{'type',205,'union',[{'atom',205,'undefined'}|[{'type',205,'integer',[]}]]}}|[{'typed_record_field',{'record_field',206,{'atom',206,'selecting'}},{'type',206,'union',[{'atom',206,'undefined'}|[{'type',206,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',207,{'atom',207,'control'}},{'type',207,'union',[{'atom',207,'undefined'}|[{'type',207,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',208,{'atom',208,'meta'}},{'type',208,'union',[{'atom',208,'undefined'}|[{'type',208,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',209,{'atom',209,'shift'}},{'type',209,'union',[{'atom',209,'undefined'}|[{'type',209,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',210,{'atom',210,'alt'}},{'type',210,'union',[{'atom',210,'undefined'}|[{'type',210,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 211
		'type' =
		    %% Line 211
		    [{'wxGridEventType',{'type',211,'union',[{'atom',211,'grid_cell_left_click'}|[{'atom',211,'grid_cell_right_click'}|[{'atom',211,'grid_cell_left_dclick'}|[{'atom',211,'grid_cell_right_dclick'}|[{'atom',211,'grid_label_left_click'}|[{'atom',211,'grid_label_right_click'}|[{'atom',211,'grid_label_left_dclick'}|[{'atom',211,'grid_label_right_dclick'}|[{'atom',211,'grid_row_size'}|[{'atom',211,'grid_col_size'}|[{'atom',211,'grid_range_select'}|[{'atom',211,'grid_cell_change'}|[{'atom',211,'grid_select_cell'}|[{'atom',211,'grid_editor_shown'}|[{'atom',211,'grid_editor_hidden'}|[{'atom',211,'grid_editor_created'}|[{'atom',211,'grid_cell_begin_drag'}]]]]]]]]]]]]]]]]]},[]}],
		%% Line 212
		'type' =
		    %% Line 212
		    [{'wxGrid',{'type',212,'record',[{'atom',212,'wxGrid'}]},[]}],
		%% Line 214
		'type' =
		    %% Line 214
		    [{{'record','wxPaletteChanged'},[{'typed_record_field',{'record_field',214,{'atom',214,'type'}},{'type',214,'union',[{'atom',214,'undefined'}|[{'type',214,'wxPaletteChangedEventType',[]}]]}}],[]}],
		%% Line 215
		'type' =
		    %% Line 215
		    [{'wxPaletteChangedEventType',{'atom',215,'palette_changed'},[]}],
		%% Line 216
		'type' =
		    %% Line 216
		    [{'wxPaletteChanged',{'type',216,'record',[{'atom',216,'wxPaletteChanged'}]},[]}],
		%% Line 218
		'type' =
		    %% Line 218
		    [{{'record','wxUpdateUI'},[{'typed_record_field',{'record_field',218,{'atom',218,'type'}},{'type',218,'union',[{'atom',218,'undefined'}|[{'type',218,'wxUpdateUIEventType',[]}]]}}],[]}],
		%% Line 219
		'type' =
		    %% Line 219
		    [{'wxUpdateUIEventType',{'atom',219,'update_ui'},[]}],
		%% Line 220
		'type' =
		    %% Line 220
		    [{'wxUpdateUI',{'type',220,'record',[{'atom',220,'wxUpdateUI'}]},[]}],
		%% Line 222
		'type' =
		    %% Line 222
		    [{{'record','wxSize'},[{'typed_record_field',{'record_field',222,{'atom',222,'type'}},{'type',222,'union',[{'atom',222,'undefined'}|[{'type',222,'wxSizeEventType',[]}]]}}|[{'typed_record_field',{'record_field',223,{'atom',223,'size'}},{'type',223,'union',[{'atom',223,'undefined'}|[{'type',223,'tuple',[{'ann_type',223,[{'var',223,'W'}|[{'type',223,'integer',[]}]]}|[{'ann_type',223,[{'var',223,'H'}|[{'type',223,'integer',[]}]]}]]}]]}}|[{'typed_record_field',{'record_field',224,{'atom',224,'rect'}},{'type',224,'union',[{'atom',224,'undefined'}|[{'type',224,'tuple',[{'ann_type',224,[{'var',224,'X'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'Y'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'W'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'H'}|[{'type',224,'integer',[]}]]}]]]]}]]}}]]],[]}],
		%% Line 225
		'type' =
		    %% Line 225
		    [{'wxSizeEventType',{'atom',225,'size'},[]}],
		%% Line 226
		'type' =
		    %% Line 226
		    [{'wxSize',{'type',226,'record',[{'atom',226,'wxSize'}]},[]}],
		%% Line 228
		'type' =
		    %% Line 228
		    [{{'record','wxIconize'},[{'typed_record_field',{'record_field',228,{'atom',228,'type'}},{'type',228,'union',[{'atom',228,'undefined'}|[{'type',228,'wxIconizeEventType',[]}]]}}],[]}],
		%% Line 229
		'type' =
		    %% Line 229
		    [{'wxIconizeEventType',{'atom',229,'iconize'},[]}],
		%% Line 230
		'type' =
		    %% Line 230
		    [{'wxIconize',{'type',230,'record',[{'atom',230,'wxIconize'}]},[]}],
		%% Line 232
		'type' =
		    %% Line 232
		    [{{'record','wxAuiNotebook'},[{'typed_record_field',{'record_field',232,{'atom',232,'type'}},{'type',232,'union',[{'atom',232,'undefined'}|[{'type',232,'wxAuiNotebookEventType',[]}]]}}|[{'typed_record_field',{'record_field',233,{'atom',233,'old_selection'}},{'type',233,'union',[{'atom',233,'undefined'}|[{'type',233,'integer',[]}]]}}|[{'typed_record_field',{'record_field',234,{'atom',234,'selection'}},{'type',234,'union',[{'atom',234,'undefined'}|[{'type',234,'integer',[]}]]}}|[{'typed_record_field',{'record_field',235,{'atom',235,'drag_source'}},{'type',235,'union',[{'atom',235,'undefined'}|[{'remote_type',235,[{'atom',235,'wxAuiNotebook'}|[{'atom',235,'wxAuiNotebook'}|[[]]]]}]]}}]]]],[]}],
		%% Line 236
		'type' =
		    %% Line 236
		    [{'wxAuiNotebookEventType',{'type',236,'union',[{'atom',236,'command_auinotebook_page_close'}|[{'atom',236,'command_auinotebook_page_changed'}|[{'atom',236,'command_auinotebook_page_changing'}|[{'atom',236,'command_auinotebook_button'}|[{'atom',236,'command_auinotebook_begin_drag'}|[{'atom',236,'command_auinotebook_end_drag'}|[{'atom',236,'command_auinotebook_drag_motion'}|[{'atom',236,'command_auinotebook_allow_dnd'}|[{'atom',236,'command_auinotebook_tab_middle_down'}|[{'atom',236,'command_auinotebook_tab_middle_up'}|[{'atom',236,'command_auinotebook_tab_right_down'}|[{'atom',236,'command_auinotebook_tab_right_up'}|[{'atom',236,'command_auinotebook_page_closed'}|[{'atom',236,'command_auinotebook_drag_done'}|[{'atom',236,'command_auinotebook_bg_dclick'}]]]]]]]]]]]]]]]},[]}],
		%% Line 237
		'type' =
		    %% Line 237
		    [{'wxAuiNotebook',{'type',237,'record',[{'atom',237,'wxAuiNotebook'}]},[]}],
		%% Line 239
		'type' =
		    %% Line 239
		    [{{'record','wxClose'},[{'typed_record_field',{'record_field',239,{'atom',239,'type'}},{'type',239,'union',[{'atom',239,'undefined'}|[{'type',239,'wxCloseEventType',[]}]]}}],[]}],
		%% Line 240
		'type' =
		    %% Line 240
		    [{'wxCloseEventType',{'type',240,'union',[{'atom',240,'close_window'}|[{'atom',240,'end_session'}|[{'atom',240,'query_end_session'}]]]},[]}],
		%% Line 241
		'type' =
		    %% Line 241
		    [{'wxClose',{'type',241,'record',[{'atom',241,'wxClose'}]},[]}],
		%% Line 243
		'type' =
		    %% Line 243
		    [{{'record','wxMouseCaptureChanged'},[{'typed_record_field',{'record_field',243,{'atom',243,'type'}},{'type',243,'union',[{'atom',243,'undefined'}|[{'type',243,'wxMouseCaptureChangedEventType',[]}]]}}],[]}],
		%% Line 244
		'type' =
		    %% Line 244
		    [{'wxMouseCaptureChangedEventType',{'atom',244,'mouse_capture_changed'},[]}],
		%% Line 245
		'type' =
		    %% Line 245
		    [{'wxMouseCaptureChanged',{'type',245,'record',[{'atom',245,'wxMouseCaptureChanged'}]},[]}],
		%% Line 247
		'type' =
		    %% Line 247
		    [{{'record','wxMouse'},[{'typed_record_field',{'record_field',247,{'atom',247,'type'}},{'type',247,'union',[{'atom',247,'undefined'}|[{'type',247,'wxMouseEventType',[]}]]}}|[{'typed_record_field',{'record_field',248,{'atom',248,'x'}},{'type',248,'union',[{'atom',248,'undefined'}|[{'type',248,'integer',[]}]]}}|[{'typed_record_field',{'record_field',249,{'atom',249,'y'}},{'type',249,'union',[{'atom',249,'undefined'}|[{'type',249,'integer',[]}]]}}|[{'typed_record_field',{'record_field',250,{'atom',250,'leftDown'}},{'type',250,'union',[{'atom',250,'undefined'}|[{'type',250,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',251,{'atom',251,'middleDown'}},{'type',251,'union',[{'atom',251,'undefined'}|[{'type',251,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',252,{'atom',252,'rightDown'}},{'type',252,'union',[{'atom',252,'undefined'}|[{'type',252,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',253,{'atom',253,'controlDown'}},{'type',253,'union',[{'atom',253,'undefined'}|[{'type',253,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',254,{'atom',254,'shiftDown'}},{'type',254,'union',[{'atom',254,'undefined'}|[{'type',254,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',255,{'atom',255,'altDown'}},{'type',255,'union',[{'atom',255,'undefined'}|[{'type',255,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',256,{'atom',256,'metaDown'}},{'type',256,'union',[{'atom',256,'undefined'}|[{'type',256,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',257,{'atom',257,'wheelRotation'}},{'type',257,'union',[{'atom',257,'undefined'}|[{'type',257,'integer',[]}]]}}|[{'typed_record_field',{'record_field',258,{'atom',258,'wheelDelta'}},{'type',258,'union',[{'atom',258,'undefined'}|[{'type',258,'integer',[]}]]}}|[{'typed_record_field',{'record_field',259,{'atom',259,'linesPerAction'}},{'type',259,'union',[{'atom',259,'undefined'}|[{'type',259,'integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 260
		'type' =
		    %% Line 260
		    [{'wxMouseEventType',{'type',260,'union',[{'atom',260,'left_down'}|[{'atom',260,'left_up'}|[{'atom',260,'middle_down'}|[{'atom',260,'middle_up'}|[{'atom',260,'right_down'}|[{'atom',260,'right_up'}|[{'atom',260,'motion'}|[{'atom',260,'enter_window'}|[{'atom',260,'leave_window'}|[{'atom',260,'left_dclick'}|[{'atom',260,'middle_dclick'}|[{'atom',260,'right_dclick'}|[{'atom',260,'mousewheel'}]]]]]]]]]]]]]},[]}],
		%% Line 261
		'type' =
		    %% Line 261
		    [{'wxMouse',{'type',261,'record',[{'atom',261,'wxMouse'}]},[]}],
		%% Line 263
		'type' =
		    %% Line 263
		    [{{'record','wxClipboardText'},[{'typed_record_field',{'record_field',263,{'atom',263,'type'}},{'type',263,'union',[{'atom',263,'undefined'}|[{'type',263,'wxClipboardTextEventType',[]}]]}}],[]}],
		%% Line 264
		'type' =
		    %% Line 264
		    [{'wxClipboardTextEventType',{'type',264,'union',[{'atom',264,'command_text_copy'}|[{'atom',264,'command_text_cut'}|[{'atom',264,'command_text_paste'}]]]},[]}],
		%% Line 265
		'type' =
		    %% Line 265
		    [{'wxClipboardText',{'type',265,'record',[{'atom',265,'wxClipboardText'}]},[]}],
		%% Line 267
		'type' =
		    %% Line 267
		    [{{'record','wxWindowCreate'},[{'typed_record_field',{'record_field',267,{'atom',267,'type'}},{'type',267,'union',[{'atom',267,'undefined'}|[{'type',267,'wxWindowCreateEventType',[]}]]}}],[]}],
		%% Line 268
		'type' =
		    %% Line 268
		    [{'wxWindowCreateEventType',{'atom',268,'create'},[]}],
		%% Line 269
		'type' =
		    %% Line 269
		    [{'wxWindowCreate',{'type',269,'record',[{'atom',269,'wxWindowCreate'}]},[]}],
		%% Line 271
		'type' =
		    %% Line 271
		    [{{'record','wxAuiManager'},[{'typed_record_field',{'record_field',271,{'atom',271,'type'}},{'type',271,'union',[{'atom',271,'undefined'}|[{'type',271,'wxAuiManagerEventType',[]}]]}}|[{'typed_record_field',{'record_field',272,{'atom',272,'manager'}},{'type',272,'union',[{'atom',272,'undefined'}|[{'remote_type',272,[{'atom',272,'wxAuiManager'}|[{'atom',272,'wxAuiManager'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',273,{'atom',273,'pane'}},{'type',273,'union',[{'atom',273,'undefined'}|[{'remote_type',273,[{'atom',273,'wxAuiPaneInfo'}|[{'atom',273,'wxAuiPaneInfo'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',274,{'atom',274,'button'}},{'type',274,'union',[{'atom',274,'undefined'}|[{'type',274,'integer',[]}]]}}|[{'typed_record_field',{'record_field',275,{'atom',275,'veto_flag'}},{'type',275,'union',[{'atom',275,'undefined'}|[{'type',275,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',276,{'atom',276,'canveto_flag'}},{'type',276,'union',[{'atom',276,'undefined'}|[{'type',276,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',277,{'atom',277,'dc'}},{'type',277,'union',[{'atom',277,'undefined'}|[{'remote_type',277,[{'atom',277,'wxDC'}|[{'atom',277,'wxDC'}|[[]]]]}]]}}]]]]]]],[]}],
		%% Line 278
		'type' =
		    %% Line 278
		    [{'wxAuiManagerEventType',{'type',278,'union',[{'atom',278,'aui_pane_button'}|[{'atom',278,'aui_pane_close'}|[{'atom',278,'aui_pane_maximize'}|[{'atom',278,'aui_pane_restore'}|[{'atom',278,'aui_render'}|[{'atom',278,'aui_find_manager'}]]]]]]},[]}],
		%% Line 279
		'type' =
		    %% Line 279
		    [{'wxAuiManager',{'type',279,'record',[{'atom',279,'wxAuiManager'}]},[]}],
		%% Line 281
		'type' =
		    %% Line 281
		    [{{'record','wxInitDialog'},[{'typed_record_field',{'record_field',281,{'atom',281,'type'}},{'type',281,'union',[{'atom',281,'undefined'}|[{'type',281,'wxInitDialogEventType',[]}]]}}],[]}],
		%% Line 282
		'type' =
		    %% Line 282
		    [{'wxInitDialogEventType',{'atom',282,'init_dialog'},[]}],
		%% Line 283
		'type' =
		    %% Line 283
		    [{'wxInitDialog',{'type',283,'record',[{'atom',283,'wxInitDialog'}]},[]}],
		%% Line 285
		'type' =
		    %% Line 285
		    [{{'record','wxCommand'},[{'typed_record_field',{'record_field',285,{'atom',285,'type'}},{'type',285,'union',[{'atom',285,'undefined'}|[{'type',285,'wxCommandEventType',[]}]]}}|[{'typed_record_field',{'record_field',286,{'atom',286,'cmdString'}},{'type',286,'union',[{'atom',286,'undefined'}|[{'remote_type',286,[{'atom',286,'unicode'}|[{'atom',286,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',287,{'atom',287,'commandInt'}},{'type',287,'union',[{'atom',287,'undefined'}|[{'type',287,'integer',[]}]]}}|[{'typed_record_field',{'record_field',288,{'atom',288,'extraLong'}},{'type',288,'union',[{'atom',288,'undefined'}|[{'type',288,'integer',[]}]]}}]]]],[]}],
		%% Line 289
		'type' =
		    %% Line 289
		    [{'wxCommandEventType',{'type',289,'union',[{'atom',289,'command_button_clicked'}|[{'atom',289,'command_checkbox_clicked'}|[{'atom',289,'command_choice_selected'}|[{'atom',289,'command_listbox_selected'}|[{'atom',289,'command_listbox_doubleclicked'}|[{'atom',289,'command_text_updated'}|[{'atom',289,'command_text_enter'}|[{'atom',289,'command_menu_selected'}|[{'atom',289,'command_slider_updated'}|[{'atom',289,'command_radiobox_selected'}|[{'atom',289,'command_radiobutton_selected'}|[{'atom',289,'command_scrollbar_updated'}|[{'atom',289,'command_vlbox_selected'}|[{'atom',289,'command_combobox_selected'}|[{'atom',289,'command_tool_rclicked'}|[{'atom',289,'command_tool_enter'}|[{'atom',289,'command_checklistbox_toggled'}|[{'atom',289,'command_togglebutton_clicked'}|[{'atom',289,'command_left_click'}|[{'atom',289,'command_left_dclick'}|[{'atom',289,'command_right_click'}|[{'atom',289,'command_set_focus'}|[{'atom',289,'command_kill_focus'}|[{'atom',289,'command_enter'}]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 290
		'type' =
		    %% Line 290
		    [{'wxCommand',{'type',290,'record',[{'atom',290,'wxCommand'}]},[]}],
		%% Line 292
		'type' =
		    %% Line 292
		    [{{'record','wxJoystick'},[{'typed_record_field',{'record_field',292,{'atom',292,'type'}},{'type',292,'union',[{'atom',292,'undefined'}|[{'type',292,'wxJoystickEventType',[]}]]}}],[]}],
		%% Line 293
		'type' =
		    %% Line 293
		    [{'wxJoystickEventType',{'type',293,'union',[{'atom',293,'joy_button_down'}|[{'atom',293,'joy_button_up'}|[{'atom',293,'joy_move'}|[{'atom',293,'joy_zmove'}]]]]},[]}],
		%% Line 294
		'type' =
		    %% Line 294
		    [{'wxJoystick',{'type',294,'record',[{'atom',294,'wxJoystick'}]},[]}],
		%% Line 296
		'type' =
		    %% Line 296
		    [{{'record','wxQueryNewPalette'},[{'typed_record_field',{'record_field',296,{'atom',296,'type'}},{'type',296,'union',[{'atom',296,'undefined'}|[{'type',296,'wxQueryNewPaletteEventType',[]}]]}}],[]}],
		%% Line 297
		'type' =
		    %% Line 297
		    [{'wxQueryNewPaletteEventType',{'atom',297,'query_new_palette'},[]}],
		%% Line 298
		'type' =
		    %% Line 298
		    [{'wxQueryNewPalette',{'type',298,'record',[{'atom',298,'wxQueryNewPalette'}]},[]}],
		%% Line 300
		'type' =
		    %% Line 300
		    [{{'record','wxMove'},[{'typed_record_field',{'record_field',300,{'atom',300,'type'}},{'type',300,'union',[{'atom',300,'undefined'}|[{'type',300,'wxMoveEventType',[]}]]}}],[]}],
		%% Line 301
		'type' =
		    %% Line 301
		    [{'wxMoveEventType',{'atom',301,'move'},[]}],
		%% Line 302
		'type' =
		    %% Line 302
		    [{'wxMove',{'type',302,'record',[{'atom',302,'wxMove'}]},[]}],
		%% Line 304
		'type' =
		    %% Line 304
		    [{{'record','wxIdle'},[{'typed_record_field',{'record_field',304,{'atom',304,'type'}},{'type',304,'union',[{'atom',304,'undefined'}|[{'type',304,'wxIdleEventType',[]}]]}}],[]}],
		%% Line 305
		'type' =
		    %% Line 305
		    [{'wxIdleEventType',{'atom',305,'idle'},[]}],
		%% Line 306
		'type' =
		    %% Line 306
		    [{'wxIdle',{'type',306,'record',[{'atom',306,'wxIdle'}]},[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{{'record','wxColourPicker'},[{'typed_record_field',{'record_field',308,{'atom',308,'type'}},{'type',308,'union',[{'atom',308,'undefined'}|[{'type',308,'wxColourPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',309,{'atom',309,'colour'}},{'type',309,'union',[{'atom',309,'undefined'}|[{'remote_type',309,[{'atom',309,'wx'}|[{'atom',309,'wx_colour'}|[[]]]]}]]}}]],[]}],
		%% Line 310
		'type' =
		    %% Line 310
		    [{'wxColourPickerEventType',{'atom',310,'command_colourpicker_changed'},[]}],
		%% Line 311
		'type' =
		    %% Line 311
		    [{'wxColourPicker',{'type',311,'record',[{'atom',311,'wxColourPicker'}]},[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{{'record','wxTaskBarIcon'},[{'typed_record_field',{'record_field',313,{'atom',313,'type'}},{'type',313,'union',[{'atom',313,'undefined'}|[{'type',313,'wxTaskBarIconEventType',[]}]]}}],[]}],
		%% Line 314
		'type' =
		    %% Line 314
		    [{'wxTaskBarIconEventType',{'type',314,'union',[{'atom',314,'taskbar_move'}|[{'atom',314,'taskbar_left_down'}|[{'atom',314,'taskbar_left_up'}|[{'atom',314,'taskbar_right_down'}|[{'atom',314,'taskbar_right_up'}|[{'atom',314,'taskbar_left_dclick'}|[{'atom',314,'taskbar_right_dclick'}]]]]]]]},[]}],
		%% Line 315
		'type' =
		    %% Line 315
		    [{'wxTaskBarIcon',{'type',315,'record',[{'atom',315,'wxTaskBarIcon'}]},[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{{'record','wxTree'},[{'typed_record_field',{'record_field',317,{'atom',317,'type'}},{'type',317,'union',[{'atom',317,'undefined'}|[{'type',317,'wxTreeEventType',[]}]]}}|[{'typed_record_field',{'record_field',318,{'atom',318,'item'}},{'type',318,'union',[{'atom',318,'undefined'}|[{'type',318,'integer',[]}]]}}|[{'typed_record_field',{'record_field',319,{'atom',319,'itemOld'}},{'type',319,'union',[{'atom',319,'undefined'}|[{'type',319,'integer',[]}]]}}|[{'typed_record_field',{'record_field',320,{'atom',320,'pointDrag'}},{'type',320,'union',[{'atom',320,'undefined'}|[{'type',320,'tuple',[{'ann_type',320,[{'var',320,'X'}|[{'type',320,'integer',[]}]]}|[{'ann_type',320,[{'var',320,'Y'}|[{'type',320,'integer',[]}]]}]]}]]}}]]]],[]}],
		%% Line 321
		'type' =
		    %% Line 321
		    [{'wxTreeEventType',{'type',321,'union',[{'atom',321,'command_tree_begin_drag'}|[{'atom',321,'command_tree_begin_rdrag'}|[{'atom',321,'command_tree_begin_label_edit'}|[{'atom',321,'command_tree_end_label_edit'}|[{'atom',321,'command_tree_delete_item'}|[{'atom',321,'command_tree_get_info'}|[{'atom',321,'command_tree_set_info'}|[{'atom',321,'command_tree_item_expanded'}|[{'atom',321,'command_tree_item_expanding'}|[{'atom',321,'command_tree_item_collapsed'}|[{'atom',321,'command_tree_item_collapsing'}|[{'atom',321,'command_tree_sel_changed'}|[{'atom',321,'command_tree_sel_changing'}|[{'atom',321,'command_tree_key_down'}|[{'atom',321,'command_tree_item_activated'}|[{'atom',321,'command_tree_item_right_click'}|[{'atom',321,'command_tree_item_middle_click'}|[{'atom',321,'command_tree_end_drag'}|[{'atom',321,'command_tree_state_image_click'}|[{'atom',321,'command_tree_item_gettooltip'}|[{'atom',321,'command_tree_item_menu'}]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 322
		'type' =
		    %% Line 322
		    [{'wxTree',{'type',322,'record',[{'atom',322,'wxTree'}]},[]}],
		%% Line 324
		'type' =
		    %% Line 324
		    [{'event',{'type',324,'union',[{'type',324,'wxActivate',[]}|[{'type',324,'wxAuiManager',[]}|[{'type',324,'wxAuiNotebook',[]}|[{'type',324,'wxCalendar',[]}|[{'type',324,'wxChildFocus',[]}|[{'type',324,'wxClipboardText',[]}|[{'type',324,'wxClose',[]}|[{'type',324,'wxColourPicker',[]}|[{'type',324,'wxCommand',[]}|[{'type',324,'wxContextMenu',[]}|[{'type',324,'wxDate',[]}|[{'type',324,'wxDisplayChanged',[]}|[{'type',324,'wxErase',[]}|[{'type',324,'wxFileDirPicker',[]}|[{'type',324,'wxFocus',[]}|[{'type',324,'wxFontPicker',[]}|[{'type',324,'wxGrid',[]}|[{'type',324,'wxHelp',[]}|[{'type',324,'wxHtmlLink',[]}|[{'type',324,'wxIconize',[]}|[{'type',324,'wxIdle',[]}|[{'type',324,'wxInitDialog',[]}|[{'type',324,'wxJoystick',[]}|[{'type',324,'wxKey',[]}|[{'type',324,'wxList',[]}|[{'type',324,'wxMaximize',[]}|[{'type',324,'wxMenu',[]}|[{'type',324,'wxMouse',[]}|[{'type',324,'wxMouseCaptureChanged',[]}|[{'type',324,'wxMove',[]}|[{'type',324,'wxNavigationKey',[]}|[{'type',324,'wxNotebook',[]}|[{'type',324,'wxPaint',[]}|[{'type',324,'wxPaletteChanged',[]}|[{'type',324,'wxQueryNewPalette',[]}|[{'type',324,'wxSash',[]}|[{'type',324,'wxScroll',[]}|[{'type',324,'wxScrollWin',[]}|[{'type',324,'wxSetCursor',[]}|[{'type',324,'wxShow',[]}|[{'type',324,'wxSize',[]}|[{'type',324,'wxSpin',[]}|[{'type',324,'wxSplitter',[]}|[{'type',324,'wxStyledText',[]}|[{'type',324,'wxSysColourChanged',[]}|[{'type',324,'wxTaskBarIcon',[]}|[{'type',324,'wxTree',[]}|[{'type',324,'wxUpdateUI',[]}|[{'type',324,'wxWindowCreate',[]}|[{'type',324,'wxWindowDestroy',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 325
		'type' =
		    %% Line 325
		    [{'wxEventType',{'type',325,'union',[{'type',325,'wxActivateEventType',[]}|[{'type',325,'wxAuiManagerEventType',[]}|[{'type',325,'wxAuiNotebookEventType',[]}|[{'type',325,'wxCalendarEventType',[]}|[{'type',325,'wxChildFocusEventType',[]}|[{'type',325,'wxClipboardTextEventType',[]}|[{'type',325,'wxCloseEventType',[]}|[{'type',325,'wxColourPickerEventType',[]}|[{'type',325,'wxCommandEventType',[]}|[{'type',325,'wxContextMenuEventType',[]}|[{'type',325,'wxDateEventType',[]}|[{'type',325,'wxDisplayChangedEventType',[]}|[{'type',325,'wxEraseEventType',[]}|[{'type',325,'wxFileDirPickerEventType',[]}|[{'type',325,'wxFocusEventType',[]}|[{'type',325,'wxFontPickerEventType',[]}|[{'type',325,'wxGridEventType',[]}|[{'type',325,'wxHelpEventType',[]}|[{'type',325,'wxHtmlLinkEventType',[]}|[{'type',325,'wxIconizeEventType',[]}|[{'type',325,'wxIdleEventType',[]}|[{'type',325,'wxInitDialogEventType',[]}|[{'type',325,'wxJoystickEventType',[]}|[{'type',325,'wxKeyEventType',[]}|[{'type',325,'wxListEventType',[]}|[{'type',325,'wxMaximizeEventType',[]}|[{'type',325,'wxMenuEventType',[]}|[{'type',325,'wxMouseCaptureChangedEventType',[]}|[{'type',325,'wxMouseEventType',[]}|[{'type',325,'wxMoveEventType',[]}|[{'type',325,'wxNavigationKeyEventType',[]}|[{'type',325,'wxNotebookEventType',[]}|[{'type',325,'wxPaintEventType',[]}|[{'type',325,'wxPaletteChangedEventType',[]}|[{'type',325,'wxQueryNewPaletteEventType',[]}|[{'type',325,'wxSashEventType',[]}|[{'type',325,'wxScrollEventType',[]}|[{'type',325,'wxScrollWinEventType',[]}|[{'type',325,'wxSetCursorEventType',[]}|[{'type',325,'wxShowEventType',[]}|[{'type',325,'wxSizeEventType',[]}|[{'type',325,'wxSpinEventType',[]}|[{'type',325,'wxSplitterEventType',[]}|[{'type',325,'wxStyledTextEventType',[]}|[{'type',325,'wxSysColourChangedEventType',[]}|[{'type',325,'wxTaskBarIconEventType',[]}|[{'type',325,'wxTreeEventType',[]}|[{'type',325,'wxUpdateUIEventType',[]}|[{'type',325,'wxWindowCreateEventType',[]}|[{'type',325,'wxWindowDestroyEventType',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 328
		'type' =
		    %% Line 328
		    [{{'record','wxMouseState'},[{'typed_record_field',{'record_field',328,{'atom',328,'x'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',328,{'atom',328,'y'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'leftDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'type',329,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'middleDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'rightDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'controlDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'shiftDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'altDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'metaDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'cmdDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 333
		'type' =
		    %% Line 333
		    [{{'record','wxHtmlLinkInfo'},[{'typed_record_field',{'record_field',334,{'atom',334,'href'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',334,{'atom',334,'target'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 112
		'callback' =
		    %% Line 112
		    [{{'init',1},[{'type',112,'fun',[{'type',112,'product',[{'ann_type',112,[{'var',112,'Args'}|[{'type',112,'term',[]}]]}]}|[{'type',113,'union',[{'type',113,'tuple',[{'type',113,'record',[{'atom',113,'wx_ref'}]}|[{'ann_type',113,[{'var',113,'State'}|[{'type',113,'term',[]}]]}]]}|[{'type',113,'tuple',[{'type',113,'record',[{'atom',113,'wx_ref'}]}|[{'ann_type',113,[{'var',113,'State'}|[{'type',113,'term',[]}]]}|[{'type',113,'union',[{'type',113,'timeout',[]}|[{'atom',113,'hibernate'}]]}]]]}|[{'type',114,'tuple',[{'atom',114,'stop'}|[{'ann_type',114,[{'var',114,'Reason'}|[{'type',114,'term',[]}]]}]]}|[{'atom',114,'ignore'}]]]]}]]}]}],
		%% Line 115
		'callback' =
		    %% Line 115
		    [{{'handle_event',2},[{'type',115,'fun',[{'type',115,'product',[{'ann_type',115,[{'var',115,'Request'}|[{'type',115,'record',[{'atom',115,'wx'}]}]]}|[{'ann_type',115,[{'var',115,'State'}|[{'type',115,'term',[]}]]}]]}|[{'type',116,'union',[{'type',116,'tuple',[{'atom',116,'noreply'}|[{'ann_type',116,[{'var',116,'NewState'}|[{'type',116,'term',[]}]]}]]}|[{'type',117,'tuple',[{'atom',117,'noreply'}|[{'ann_type',117,[{'var',117,'NewState'}|[{'type',117,'term',[]}]]}|[{'type',117,'union',[{'type',117,'timeout',[]}|[{'atom',117,'hibernate'}]]}]]]}|[{'type',118,'tuple',[{'atom',118,'stop'}|[{'ann_type',118,[{'var',118,'Reason'}|[{'type',118,'term',[]}]]}|[{'ann_type',118,[{'var',118,'NewState'}|[{'type',118,'term',[]}]]}]]]}]]]}]]}]}],
		%% Line 119
		'callback' =
		    %% Line 119
		    [{{'handle_call',3},[{'type',119,'fun',[{'type',119,'product',[{'ann_type',119,[{'var',119,'Request'}|[{'type',119,'term',[]}]]}|[{'ann_type',119,[{'var',119,'From'}|[{'type',119,'tuple',[{'type',119,'pid',[]}|[{'ann_type',119,[{'var',119,'Tag'}|[{'type',119,'term',[]}]]}]]}]]}|[{'ann_type',120,[{'var',120,'State'}|[{'type',120,'term',[]}]]}]]]}|[{'type',121,'union',[{'type',121,'tuple',[{'atom',121,'reply'}|[{'ann_type',121,[{'var',121,'Reply'}|[{'type',121,'term',[]}]]}|[{'ann_type',121,[{'var',121,'NewState'}|[{'type',121,'term',[]}]]}]]]}|[{'type',122,'tuple',[{'atom',122,'reply'}|[{'ann_type',122,[{'var',122,'Reply'}|[{'type',122,'term',[]}]]}|[{'ann_type',122,[{'var',122,'NewState'}|[{'type',122,'term',[]}]]}|[{'type',122,'union',[{'type',122,'timeout',[]}|[{'atom',122,'hibernate'}]]}]]]]}|[{'type',123,'tuple',[{'atom',123,'noreply'}|[{'ann_type',123,[{'var',123,'NewState'}|[{'type',123,'term',[]}]]}]]}|[{'type',124,'tuple',[{'atom',124,'noreply'}|[{'ann_type',124,[{'var',124,'NewState'}|[{'type',124,'term',[]}]]}|[{'type',124,'union',[{'type',124,'timeout',[]}|[{'atom',124,'hibernate'}]]}]]]}|[{'type',125,'tuple',[{'atom',125,'stop'}|[{'ann_type',125,[{'var',125,'Reason'}|[{'type',125,'term',[]}]]}|[{'ann_type',125,[{'var',125,'Reply'}|[{'type',125,'term',[]}]]}|[{'ann_type',125,[{'var',125,'NewState'}|[{'type',125,'term',[]}]]}]]]]}|[{'type',126,'tuple',[{'atom',126,'stop'}|[{'ann_type',126,[{'var',126,'Reason'}|[{'type',126,'term',[]}]]}|[{'ann_type',126,[{'var',126,'NewState'}|[{'type',126,'term',[]}]]}]]]}]]]]]]}]]}]}],
		%% Line 127
		'callback' =
		    %% Line 127
		    [{{'handle_cast',2},[{'type',127,'fun',[{'type',127,'product',[{'ann_type',127,[{'var',127,'Request'}|[{'type',127,'term',[]}]]}|[{'ann_type',127,[{'var',127,'State'}|[{'type',127,'term',[]}]]}]]}|[{'type',128,'union',[{'type',128,'tuple',[{'atom',128,'noreply'}|[{'ann_type',128,[{'var',128,'NewState'}|[{'type',128,'term',[]}]]}]]}|[{'type',129,'tuple',[{'atom',129,'noreply'}|[{'ann_type',129,[{'var',129,'NewState'}|[{'type',129,'term',[]}]]}|[{'type',129,'union',[{'type',129,'timeout',[]}|[{'atom',129,'hibernate'}]]}]]]}|[{'type',130,'tuple',[{'atom',130,'stop'}|[{'ann_type',130,[{'var',130,'Reason'}|[{'type',130,'term',[]}]]}|[{'ann_type',130,[{'var',130,'NewState'}|[{'type',130,'term',[]}]]}]]]}]]]}]]}]}],
		%% Line 131
		'callback' =
		    %% Line 131
		    [{{'handle_info',2},[{'type',131,'fun',[{'type',131,'product',[{'ann_type',131,[{'var',131,'Info'}|[{'type',131,'union',[{'type',131,'timeout',[]}|[{'type',131,'term',[]}]]}]]}|[{'ann_type',131,[{'var',131,'State'}|[{'type',131,'term',[]}]]}]]}|[{'type',132,'union',[{'type',132,'tuple',[{'atom',132,'noreply'}|[{'ann_type',132,[{'var',132,'NewState'}|[{'type',132,'term',[]}]]}]]}|[{'type',133,'tuple',[{'atom',133,'noreply'}|[{'ann_type',133,[{'var',133,'NewState'}|[{'type',133,'term',[]}]]}|[{'type',133,'union',[{'type',133,'timeout',[]}|[{'atom',133,'hibernate'}]]}]]]}|[{'type',134,'tuple',[{'atom',134,'stop'}|[{'ann_type',134,[{'var',134,'Reason'}|[{'type',134,'term',[]}]]}|[{'ann_type',134,[{'var',134,'NewState'}|[{'type',134,'term',[]}]]}]]]}]]]}]]}]}],
		%% Line 135
		'callback' =
		    %% Line 135
		    [{{'terminate',2},[{'type',135,'fun',[{'type',135,'product',[{'ann_type',135,[{'var',135,'Reason'}|[{'paren_type',135,[{'type',135,'union',[{'atom',135,'normal'}|[{'atom',135,'shutdown'}|[{'type',135,'tuple',[{'atom',135,'shutdown'}|[{'type',135,'term',[]}]]}|[{'type',136,'term',[]}]]]]}]}]]}|[{'ann_type',137,[{'var',137,'State'}|[{'type',137,'term',[]}]]}]]}|[{'type',138,'term',[]}]]}]}],
		%% Line 139
		'callback' =
		    %% Line 139
		    [{{'code_change',3},[{'type',139,'fun',[{'type',139,'product',[{'ann_type',139,[{'var',139,'OldVsn'}|[{'paren_type',139,[{'type',139,'union',[{'type',139,'term',[]}|[{'type',139,'tuple',[{'atom',139,'down'}|[{'type',139,'term',[]}]]}]]}]}]]}|[{'ann_type',139,[{'var',139,'State'}|[{'type',139,'term',[]}]]}|[{'ann_type',140,[{'var',140,'Extra'}|[{'type',140,'term',[]}]]}]]]}|[{'type',141,'union',[{'type',141,'tuple',[{'atom',141,'ok'}|[{'ann_type',141,[{'var',141,'NewState'}|[{'type',141,'term',[]}]]}]]}|[{'type',141,'tuple',[{'atom',141,'error'}|[{'ann_type',141,[{'var',141,'Reason'}|[{'type',141,'term',[]}]]}]]}]]}]]}]}],
		%% Line 442
		'spec' =
		    %% Line 442
		    [{{'handle_common_reply',6},[{'type',442,'fun',[{'type',442,'product',[{'var',442,'_'}|[{'var',442,'_'}|[{'var',442,'_'}|[{'var',442,'_'}|[{'var',442,'_'}|[{'var',442,'_'}]]]]]]}|[{'type',442,'no_return',[]}]]}]}],
		%% Line 468
		'spec' =
		    %% Line 468
		    [{{'system_terminate',4},[{'type',468,'fun',[{'type',468,'product',[{'var',468,'_'}|[{'var',468,'_'}|[{'var',468,'_'}|[{'type',468,'list',[{'var',468,'_'}]}]]]]}|[{'type',468,'no_return',[]}]]}]}]]
'start'/3 =
    %% Line 178
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 179
	    call 'erlang':'get'
		('wx_env')
	in  let <_cor4> =
		%% Line 179
		call 'gen':'start'
		    ('wx_object', 'nolink', _cor2, _cor1, [_cor3|_cor0])
	    in  %% Line 179
		apply 'gen_response'/1
		    (_cor4)
'start'/4 =
    %% Line 189
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 190
	    call 'erlang':'get'
		('wx_env')
	in  let <_cor5> =
		%% Line 190
		call 'gen':'start'
		    ('wx_object', 'nolink', _cor3, _cor2, _cor1, [_cor4|_cor0])
	    in  %% Line 190
		apply 'gen_response'/1
		    (_cor5)
'start_link'/3 =
    %% Line 199
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 200
	    call 'erlang':'get'
		('wx_env')
	in  let <_cor4> =
		%% Line 200
		call 'gen':'start'
		    ('wx_object', 'link', _cor2, _cor1, [_cor3|_cor0])
	    in  %% Line 200
		apply 'gen_response'/1
		    (_cor4)
'start_link'/4 =
    %% Line 210
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 211
	    call 'erlang':'get'
		('wx_env')
	in  let <_cor5> =
		%% Line 211
		call 'gen':'start'
		    ('wx_object', 'link', _cor3, _cor2, _cor1, [_cor4|_cor0])
	    in  %% Line 211
		apply 'gen_response'/1
		    (_cor5)
'gen_response'/1 =
    %% Line 213
    fun (_cor0) ->
	case _cor0 of
	  <{'ok',Pid}> when 'true' ->
	      %% Line 214
	      receive
		<{'ack',_cor2,Ref = {'wx_ref',_cor3,_cor4,_cor5}}>
		    when call 'erlang':'=:='
			  (_cor2,
			   Pid) ->
		    Ref
	      after 'infinity' ->
		'true'
	  %% Line 215
	  <Reply> when 'true' ->
	      %% Line 216
	      Reply
	end
'call'/2 =
    %% Line 222
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Ref = {'wx_ref',_cor17,_cor18,Pid},Request>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      %% Line 223
	      try
		  %% Line 224
		  case call 'gen':'call'
			   (Pid, '$gen_call', Request, 'infinity') of
		    <{'ok',Res}> when 'true' ->
			%% Line 225
			Res
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor2})
		      -| ['compiler_generated'] )
		  end
	      of <_cor3> ->
		  _cor3
	      catch <_cor6,_cor5,_cor4> ->
		  %% Line 227
		  call 'erlang':'error'
		      ({_cor5,{'wx_object','call',[Ref|[Request|[]]]}})
	  %% Line 229
	  <Name,Request>
	      when try
		    ( case <> of
			( <>
			      when call 'erlang':'is_atom'
				    (Name) ->
			      'true'
			  -| ['compiler_generated'] )
			( <> when 'true' ->
			      call 'erlang':'is_pid'
				  (Name)
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 230
	      try
		  %% Line 231
		  case call 'gen':'call'
			   (Name, '$gen_call', Request, 'infinity') of
		    <{'ok',Res}> when 'true' ->
			%% Line 232
			Res
		    ( <_cor10> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor10})
		      -| ['compiler_generated'] )
		  end
	      of <_cor11> ->
		  _cor11
	      catch <_cor14,_cor13,_cor12> ->
		  %% Line 234
		  call 'erlang':'error'
		      ({_cor13,{'wx_object','call',[Name|[Request|[]]]}})
	  ( <_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15})
		  -| [{'function_name',{'call',2}}] )
	    -| ['compiler_generated'] )
	end
'call'/3 =
    %% Line 240
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Ref = {'wx_ref',_cor19,_cor20,Pid},Request,Timeout>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      %% Line 241
	      try
		  %% Line 242
		  case call 'gen':'call'
			   (Pid, '$gen_call', Request, Timeout) of
		    <{'ok',Res}> when 'true' ->
			%% Line 243
			Res
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor3})
		      -| ['compiler_generated'] )
		  end
	      of <_cor4> ->
		  _cor4
	      catch <_cor7,_cor6,_cor5> ->
		  %% Line 245
		  call 'erlang':'error'
		      ({_cor6,{'wx_object','call',[Ref|[Request|[Timeout|[]]]]}})
	  %% Line 247
	  <Name,Request,Timeout>
	      when try
		    ( case <> of
			( <>
			      when call 'erlang':'is_atom'
				    (Name) ->
			      'true'
			  -| ['compiler_generated'] )
			( <> when 'true' ->
			      call 'erlang':'is_pid'
				  (Name)
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 248
	      try
		  %% Line 249
		  case call 'gen':'call'
			   (Name, '$gen_call', Request, Timeout) of
		    <{'ok',Res}> when 'true' ->
			%% Line 250
			Res
		    ( <_cor11> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor11})
		      -| ['compiler_generated'] )
		  end
	      of <_cor12> ->
		  _cor12
	      catch <_cor15,_cor14,_cor13> ->
		  %% Line 252
		  call 'erlang':'error'
		      ({_cor14,{'wx_object','call',[Name|[Request|[Timeout|[]]]]}})
	  ( <_cor18,_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17,_cor16})
		  -| [{'function_name',{'call',3}}] )
	    -| ['compiler_generated'] )
	end
'cast'/2 =
    %% Line 259
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',_cor7,_cor8,Pid},Request>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      do  %% Line 260
		  call 'erlang':'!'
		      (Pid, {'$gen_cast',Request})
		  %% Line 261
		  'ok'
	  %% Line 262
	  <Name,Request>
	      when try
		    ( case <> of
			( <>
			      when call 'erlang':'is_atom'
				    (Name) ->
			      'true'
			  -| ['compiler_generated'] )
			( <> when 'true' ->
			      call 'erlang':'is_pid'
				  (Name)
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 263
		  call 'erlang':'!'
		      (Name, {'$gen_cast',Request})
		  %% Line 264
		  'ok'
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'cast',2}}] )
	    -| ['compiler_generated'] )
	end
'get_pid'/1 =
    %% Line 268
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',_cor2,_cor3,Pid}>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      %% Line 269
	      Pid
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'get_pid',1}}] )
	    -| ['compiler_generated'] )
	end
'reply'/2 =
    %% Line 276
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{To,Tag},Reply> when 'true' ->
	      catch
		  %% Line 277
		  call 'erlang':'!'
		      (To, {Tag,Reply})
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'reply',2}}] )
	    -| ['compiler_generated'] )
	end
'init_it'/6 =
    %% Line 290
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Starter,'self',Name,Mod,Args,Options> when 'true' ->
	      let <_cor6> =
		  %% Line 291
		  call 'erlang':'self'
		      ()
	      in  %% Line 291
		  apply 'init_it'/6
		      (Starter, _cor6, Name, Mod, Args, Options)
	  %% Line 292
	  <Starter,Parent,Name,Mod,Args,[WxEnv|Options]> when 'true' ->
	      do  %% Line 293
		  case WxEnv of
		    %% Line 294
		    <'undefined'> when 'true' ->
			'ok'
		    %% Line 295
		    <_cor18> when 'true' ->
			call 'wx':'set_env'
			    (WxEnv)
		  end
		  do  %% Line 297
		      call 'erlang':'put'
			  ('_wx_object_', {Mod,'_wx_init_'})
		      let <Debug> =
			  %% Line 298
			  apply 'debug_options'/2
			      (Name, Options)
		      in  let <_cor9> =
			      catch
				  %% Line 299
				  call Mod:'init'
				      (Args)
			  in  %% Line 299
			      case _cor9 of
				%% Line 300
				<{Ref = {'wx_ref',_cor19,_cor20,_cor21},State}> when 'true' ->
				    %% Line 301
				    apply 'init_it2'/8
					(Ref, Starter, Parent, Name, State, Mod, 'infinity', Debug)
				%% Line 302
				<{Ref = {'wx_ref',_cor22,_cor23,_cor24},State,Timeout}> when 'true' ->
				    %% Line 303
				    apply 'init_it2'/8
					(Ref, Starter, Parent, Name, State, Mod, Timeout, Debug)
				%% Line 304
				<{'stop',Reason}> when 'true' ->
				    do  %% Line 305
					call 'proc_lib':'init_ack'
					    (Starter, {'error',Reason})
					%% Line 306
					call 'erlang':'exit'
					    (Reason)
				%% Line 307
				<'ignore'> when 'true' ->
				    do  %% Line 308
					call 'proc_lib':'init_ack'
					    (Starter, 'ignore')
					%% Line 309
					call 'erlang':'exit'
					    ('normal')
				%% Line 310
				<{'EXIT',Reason}> when 'true' ->
				    do  %% Line 311
					call 'proc_lib':'init_ack'
					    (Starter, {'error',Reason})
					%% Line 312
					call 'erlang':'exit'
					    (Reason)
				%% Line 313
				<Else> when 'true' ->
				    let <Error> = {%% Line 314
					 'bad_return_value',%% Line 314
							    Else}
				    in  do  %% Line 315
					    call 'proc_lib':'init_ack'
						(Starter, {'error',Error})
					    %% Line 316
					    call 'erlang':'exit'
						(Error)
			      end
	  ( <_cor17,_cor16,_cor15,_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15,_cor14,_cor13,_cor12})
		  -| [{'function_name',{'init_it',6}}] )
	    -| ['compiler_generated'] )
	end
'init_it2'/8 =
    %% Line 319
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 320
	case call 'wxe_util':'register_pid'
		 (_cor7) of
	  <'ok'> when 'true' ->
	      let <_cor19> =
		  %% Line 321
		  try
		      ( case _cor7 of
			  ( <( {'wx_ref',_cor35,_rec0,_cor36}
			       -| ['compiler_generated'] )> when 'true' ->
				( case <> of
				    ( <>
					  when call 'erlang':'=:='
						(_rec0,
						 'wxWindow') ->
					  'true'
				      -| ['compiler_generated'] )
				    ( <> when 'true' ->
					  call _rec0:'parent_class'
					      ('wxWindow')
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <_cor37> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','wx_ref'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <_cor15> ->
		      _cor15
		  catch <_cor18,_cor17,_cor16> ->
		      'false'
	      in  %% Line 321
		  case _cor19 of
		    %% Line 322
		    <'false'> when 'true' ->
			let <Reason> =
			    %% Line 323
			    {_cor7,[110|[111|[116|[32|[97|[32|[119|[120|[87|[105|[110|[100|[111|[119|[32|[115|[117|[98|[99|[108|[97|[115|[115]]]]]]]]]]]]]]]]]]]]]]]}
			in  do  %% Line 324
				call 'proc_lib':'init_ack'
				    (_cor6, {'error',Reason})
				%% Line 325
				call 'erlang':'exit'
				    (Reason)
		    %% Line 326
		    <'true'> when 'true' ->
			let <_cor21> =
			    %% Line 327
			    call 'erlang':'self'
				()
			in  do  %% Line 327
				call 'proc_lib':'init_ack'
				    (_cor6, {'ok',_cor21})
				let <_rec2> =
				    %% Line 328
				    call 'erlang':'self'
					()
				in  %% Line 328
				    case _cor7 of
				      <{'wx_ref',_cor44,_cor45,_cor46}> when 'true' ->
					  let <_cor25> =
					      call 'erlang':'setelement'
						  (4, _cor7, _rec2)
					  in  do  call 'proc_lib':'init_ack'
						      (_cor6, _cor25)
						  %% Line 329
						  apply 'loop'/6
						      (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
				      ( <_cor47> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','wx_ref'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
		    ( <_cor26> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor26})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor8> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor8})
	    -| ['compiler_generated'] )
	end
'loop'/6 =
    %% Line 339
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 340
	    call 'erlang':'put'
		('_wx_object_', {_cor2,_cor3})
	    let <_cor6> =
		%% Line 341
		receive
		  %% Line 342
		  <Input> when 'true' ->
		      %% Line 343
		      Input
		after _cor1 ->
		  %% Line 345
		  'timeout'
	    in  %% Line 347
		case _cor6 of
		  %% Line 348
		  <{'system',From,Req}> when 'true' ->
		      %% Line 349
		      call 'sys':'handle_system_msg'
			  (Req, From, _cor5, 'wx_object', _cor0, %% Line 350
								 [_cor4|[_cor3|[_cor2|[_cor1|[]]]]])
		  %% Line 351
		  <{'EXIT',_cor16,Reason}>
		      when call 'erlang':'=:='
			    (_cor16,
			     _cor5) ->
		      %% Line 352
		      apply 'terminate'/6
			  (Reason, _cor4, _cor6, _cor2, _cor3, _cor0)
		  %% Line 353
		  <{'_wxe_destroy_',_X_Me}> when 'true' ->
		      %% Line 354
		      apply 'terminate'/6
			  ('wx_deleted', _cor4, _cor6, _cor2, _cor3, _cor0)
		  %% Line 355
		  <_X_Msg>
		      when call 'erlang':'=:='
			    (_cor0,
			     []) ->
		      %% Line 356
		      apply 'handle_msg'/5
			  (_cor6, _cor5, _cor4, _cor3, _cor2)
		  %% Line 357
		  <_X_Msg> when 'true' ->
		      let <Debug1> =
			  %% Line 358
			  call 'sys':'handle_debug'
			      (_cor0, ( 'print_event'/3
					-| [{'id',{0,0,'-loop/6-fun-0-'}}] ), _cor4, %% Line 359
										     {'in',_cor6})
		      in  %% Line 360
			  apply 'handle_msg'/6
			      (_cor6, _cor5, _cor4, _cor3, _cor2, Debug1)
		end
'dispatch'/3 =
    %% Line 367
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'$gen_cast',Msg},Mod,State> when 'true' ->
	      %% Line 368
	      call Mod:'handle_cast'
		  (Msg, State)
	  %% Line 369
	  <Msg = {'wx',_cor6,_cor7,_cor8,_cor9},Mod,State> when 'true' ->
	      %% Line 370
	      call Mod:'handle_event'
		  (Msg, State)
	  %% Line 371
	  <Info,Mod,State> when 'true' ->
	      %% Line 372
	      call Mod:'handle_info'
		  (Info, State)
	end
'handle_msg'/5 =
    %% Line 374
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'$gen_call',From,Msg},Parent,Name,State,Mod> when 'true' ->
	      let <_cor5> =
		  catch
		      %% Line 375
		      call Mod:'handle_call'
			  (Msg, From, State)
	      in  %% Line 375
		  case _cor5 of
		    %% Line 376
		    <{'reply',Reply,NState}> when 'true' ->
			do  %% Line 377
			    apply 'reply'/2
				(From, Reply)
			    %% Line 378
			    apply 'loop'/6
				(Parent, Name, NState, Mod, 'infinity', [])
		    %% Line 379
		    <{'reply',Reply,NState,Time1}> when 'true' ->
			do  %% Line 380
			    apply 'reply'/2
				(From, Reply)
			    %% Line 381
			    apply 'loop'/6
				(Parent, Name, NState, Mod, Time1, [])
		    %% Line 382
		    <{'noreply',NState}> when 'true' ->
			%% Line 383
			apply 'loop'/6
			    (Parent, Name, NState, Mod, 'infinity', [])
		    %% Line 384
		    <{'noreply',NState,Time1}> when 'true' ->
			%% Line 385
			apply 'loop'/6
			    (Parent, Name, NState, Mod, Time1, [])
		    %% Line 386
		    <{'stop',Reason,Reply,NState}> when 'true' ->
			let <_cor6> =
			    catch
				%% Line 388
				apply 'terminate'/6
				    (Reason, Name, Msg, Mod, NState, [])
			in  %% Line 387
			    case _cor6 of
			      <{'EXIT',R}> when 'true' ->
				  do  %% Line 389
				      apply 'reply'/2
					  (From, Reply)
				      %% Line 390
				      call 'erlang':'exit'
					  (R)
			      ( <_cor7> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor7})
				-| ['compiler_generated'] )
			    end
		    %% Line 391
		    <Other> when 'true' ->
			apply 'handle_common_reply'/6
			    (Other, Name, Msg, Mod, State, [])
		  end
	  %% Line 393
	  <Msg,Parent,Name,State,Mod> when 'true' ->
	      let <_cor9> =
		  catch
		      %% Line 394
		      apply 'dispatch'/3
			  (Msg, Mod, State)
	      in  %% Line 395
		  apply 'handle_no_reply'/7
		      (_cor9, Parent, Name, Msg, Mod, State, [])
	end
'handle_msg'/6 =
    %% Line 398
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'$gen_call',From,Msg},Parent,Name,State,Mod,Debug> when 'true' ->
	      let <_cor6> =
		  catch
		      %% Line 399
		      call Mod:'handle_call'
			  (Msg, From, State)
	      in  %% Line 399
		  case _cor6 of
		    %% Line 400
		    <{'reply',Reply,NState}> when 'true' ->
			let <Debug1> =
			    %% Line 401
			    apply 'reply'/5
				(Name, From, Reply, NState, Debug)
			in  %% Line 402
			    apply 'loop'/6
				(Parent, Name, NState, Mod, 'infinity', Debug1)
		    %% Line 403
		    <{'reply',Reply,NState,Time1}> when 'true' ->
			let <Debug1> =
			    %% Line 404
			    apply 'reply'/5
				(Name, From, Reply, NState, Debug)
			in  %% Line 405
			    apply 'loop'/6
				(Parent, Name, NState, Mod, Time1, Debug1)
		    %% Line 406
		    <{'noreply',NState}> when 'true' ->
			let <Debug1> =
			    %% Line 407
			    call 'sys':'handle_debug'
				(Debug, ( 'print_event'/3
					  -| [{'id',{0,0,'-handle_msg/6-fun-0-'}}] ), %% Line 408
										      Name, %% Line 408
											    {'noreply',NState})
			in  %% Line 409
			    apply 'loop'/6
				(Parent, Name, NState, Mod, 'infinity', Debug1)
		    %% Line 410
		    <{'noreply',NState,Time1}> when 'true' ->
			let <Debug1> =
			    %% Line 411
			    call 'sys':'handle_debug'
				(Debug, ( 'print_event'/3
					  -| [{'id',{0,0,'-handle_msg/6-fun-1-'}}] ), %% Line 412
										      Name, %% Line 412
											    {'noreply',NState})
			in  %% Line 413
			    apply 'loop'/6
				(Parent, Name, NState, Mod, Time1, Debug1)
		    %% Line 414
		    <{'stop',Reason,Reply,NState}> when 'true' ->
			let <_cor11> =
			    catch
				%% Line 416
				apply 'terminate'/6
				    (Reason, Name, Msg, Mod, NState, Debug)
			in  %% Line 415
			    case _cor11 of
			      <{'EXIT',R}> when 'true' ->
				  let <_X_> =
				      %% Line 417
				      apply 'reply'/5
					  (Name, From, Reply, NState, Debug)
				  in  %% Line 418
				      call 'erlang':'exit'
					  (R)
			      ( <_cor12> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor12})
				-| ['compiler_generated'] )
			    end
		    %% Line 419
		    <Other> when 'true' ->
			%% Line 420
			apply 'handle_common_reply'/6
			    (Other, Name, Msg, Mod, State, Debug)
		  end
	  %% Line 422
	  <Msg,Parent,Name,State,Mod,Debug> when 'true' ->
	      let <_cor15> =
		  catch
		      %% Line 423
		      apply 'dispatch'/3
			  (Msg, Mod, State)
	      in  %% Line 424
		  apply 'handle_no_reply'/7
		      (_cor15, Parent, Name, Msg, Mod, State, Debug)
	end
'handle_no_reply'/7 =
    %% Line 426
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'noreply',NState},Parent,Name,_X_Msg,Mod,_X_State,[]> when 'true' ->
	      %% Line 427
	      apply 'loop'/6
		  (Parent, Name, NState, Mod, 'infinity', [])
	  %% Line 428
	  <{'noreply',NState,Time1},Parent,Name,_X_Msg,Mod,_X_State,[]> when 'true' ->
	      %% Line 429
	      apply 'loop'/6
		  (Parent, Name, NState, Mod, Time1, [])
	  %% Line 430
	  <{'noreply',NState},Parent,Name,_X_Msg,Mod,_X_State,Debug> when 'true' ->
	      let <Debug1> =
		  %% Line 431
		  call 'sys':'handle_debug'
		      (Debug, ( 'print_event'/3
				-| [{'id',{0,0,'-handle_no_reply/7-fun-0-'}}] ), %% Line 432
										 Name, %% Line 432
										       {'noreply',NState})
	      in  %% Line 433
		  apply 'loop'/6
		      (Parent, Name, NState, Mod, 'infinity', Debug1)
	  %% Line 434
	  <{'noreply',NState,Time1},Parent,Name,_X_Msg,Mod,_X_State,Debug> when 'true' ->
	      let <Debug1> =
		  %% Line 435
		  call 'sys':'handle_debug'
		      (Debug, ( 'print_event'/3
				-| [{'id',{0,0,'-handle_no_reply/7-fun-1-'}}] ), %% Line 436
										 Name, %% Line 436
										       {'noreply',NState})
	      in  %% Line 437
		  apply 'loop'/6
		      (Parent, Name, NState, Mod, Time1, Debug1)
	  %% Line 438
	  <Reply,_X_Parent,Name,Msg,Mod,State,Debug> when 'true' ->
	      %% Line 439
	      apply 'handle_common_reply'/6
		  (Reply, Name, Msg, Mod, State, Debug)
	end
'handle_common_reply'/6 =
    %% Line 443
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 444
	case _cor5 of
	  %% Line 445
	  <{'stop',Reason,NState}> when 'true' ->
	      %% Line 446
	      apply 'terminate'/6
		  (Reason, _cor4, _cor3, _cor2, NState, _cor0)
	  %% Line 447
	  <{'EXIT',What}> when 'true' ->
	      %% Line 448
	      apply 'terminate'/6
		  (What, _cor4, _cor3, _cor2, _cor1, _cor0)
	  %% Line 449
	  <_cor13> when 'true' ->
	      %% Line 450
	      apply 'terminate'/6
		  ({'bad_return_value',_cor5}, _cor4, _cor3, _cor2, _cor1, _cor0)
	end
'reply'/5 =
    %% Line 454
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Name,{To,Tag},Reply,State,Debug> when 'true' ->
	      do  %% Line 455
		  apply 'reply'/2
		      ({To,Tag}, Reply)
		  %% Line 456
		  call 'sys':'handle_debug'
		      (Debug, ( 'print_event'/3
				-| [{'id',{0,0,'-reply/5-fun-0-'}}] ), %% Line 457
								       Name, %% Line 457
									     {'out',Reply,To,State})
	  ( <_cor9,_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6,_cor5})
		  -| [{'function_name',{'reply',5}}] )
	    -| ['compiler_generated'] )
	end
'system_continue'/3 =
    %% Line 464
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Parent,Debug,[Name|[State|[Mod|[Time|[]]]]]> when 'true' ->
	      %% Line 465
	      apply 'loop'/6
		  (Parent, Name, State, Mod, Time, Debug)
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'system_continue',3}}] )
	    -| ['compiler_generated'] )
	end
'system_terminate'/4 =
    %% Line 469
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Reason,_X_Parent,Debug,[Name|[State|[Mod|[_X_Time|[]]]]]> when 'true' ->
	      %% Line 470
	      apply 'terminate'/6
		  (Reason, Name, [], Mod, State, Debug)
	  ( <_cor7,_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5,_cor4})
		  -| [{'function_name',{'system_terminate',4}}] )
	    -| ['compiler_generated'] )
	end
'system_code_change'/4 =
    %% Line 473
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Name|[State|[Mod|[Time|[]]]]],_X_Module,OldVsn,Extra> when 'true' ->
	      let <_cor4> =
		  catch
		      %% Line 474
		      call Mod:'code_change'
			  (OldVsn, State, Extra)
	      in  %% Line 474
		  case _cor4 of
		    %% Line 475
		    <{'ok',NewState}> when 'true' ->
			{'ok',[Name|[NewState|[Mod|[Time|[]]]]]}
		    %% Line 476
		    <Else> when 'true' ->
			Else
		  end
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'system_code_change',4}}] )
	    -| ['compiler_generated'] )
	end
'print_event'/3 =
    %% Line 483
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Dev,{'in',Msg},Name> when 'true' ->
	      %% Line 484
	      case Msg of
		%% Line 485
		<{'$gen_call',{From,_X_Tag},Call}> when 'true' ->
		    %% Line 486
		    call 'io':'format'
			(Dev, [42|[68|[66|[71|[42|[32|[126|[112|[32|[103|[111|[116|[32|[99|[97|[108|[108|[32|[126|[112|[32|[102|[114|[111|[109|[32|[126|[119|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 487
																								      [Name|[Call|[From|[]]]])
		%% Line 488
		<{'$gen_cast',Cast}> when 'true' ->
		    %% Line 489
		    call 'io':'format'
			(Dev, [42|[68|[66|[71|[42|[32|[126|[112|[32|[103|[111|[116|[32|[99|[97|[115|[116|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]], %% Line 490
																			[Name|[Cast|[]]])
		%% Line 491
		<_cor7> when 'true' ->
		    %% Line 492
		    call 'io':'format'
			(Dev, [42|[68|[66|[71|[42|[32|[126|[112|[32|[103|[111|[116|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]], [Name|[Msg|[]]])
	      end
	  %% Line 494
	  <Dev,{'out',Msg,To,State},Name> when 'true' ->
	      %% Line 495
	      call 'io':'format'
		  (Dev, [42|[68|[66|[71|[42|[32|[126|[112|[32|[115|[101|[110|[116|[32|[126|[112|[32|[116|[111|[32|[126|[119|[44|[32|[110|[101|[119|[32|[115|[116|[97|[116|[101|[32|[126|[119|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 496
																													      [Name|[Msg|[To|[State|[]]]]])
	  %% Line 497
	  <Dev,{'noreply',State},Name> when 'true' ->
	      %% Line 498
	      call 'io':'format'
		  (Dev, [42|[68|[66|[71|[42|[32|[126|[112|[32|[110|[101|[119|[32|[115|[116|[97|[116|[101|[32|[126|[119|[126|[110]]]]]]]]]]]]]]]]]]]]]]], [Name|[State|[]]])
	  %% Line 499
	  <Dev,Event,Name> when 'true' ->
	      %% Line 500
	      call 'io':'format'
		  (Dev, [42|[68|[66|[71|[42|[32|[126|[112|[32|[100|[98|[103|[32|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]], [Name|[Event|[]]])
	end
'terminate'/6 =
    %% Line 506
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    catch
		%% Line 507
		call _cor2:'terminate'
		    (_cor5, _cor1)
	in  %% Line 507
	    case _cor6 of
	      %% Line 508
	      <{'EXIT',R}> when 'true' ->
		  do  %% Line 509
		      apply 'error_info'/5
			  (R, _cor4, _cor3, _cor1, _cor0)
		      %% Line 510
		      call 'erlang':'exit'
			  (R)
	      %% Line 511
	      <_cor15> when 'true' ->
		  %% Line 512
		  case _cor5 of
		    %% Line 513
		    <'normal'> when 'true' ->
			%% Line 514
			call 'erlang':'exit'
			    ('normal')
		    %% Line 515
		    <'shutdown'> when 'true' ->
			%% Line 516
			call 'erlang':'exit'
			    ('shutdown')
		    %% Line 517
		    <'wx_deleted'> when 'true' ->
			%% Line 518
			call 'erlang':'exit'
			    ('normal')
		    %% Line 519
		    <_cor16> when 'true' ->
			do  %% Line 520
			    apply 'error_info'/5
				(_cor5, _cor4, _cor3, _cor1, _cor0)
			    %% Line 521
			    call 'erlang':'exit'
				(_cor5)
		  end
	    end
'error_info'/5 =
    %% Line 525
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_Reason,'application_controller',_X_Msg,_X_State,_X_Debug> when 'true' ->
	      %% Line 526
	      'ok'
	  %% Line 527
	  <Reason,Name,Msg,State,Debug> when 'true' ->
	      let <_cor9> =
		  %% Line 529
		  case Reason of
		    %% Line 530
		    <{'undef',[{M,F,A,L}|MFAs]}> when 'true' ->
			%% Line 531
			case call 'code':'is_loaded'
				 (M) of
			  %% Line 532
			  <'false'> when 'true' ->
			      %% Line 533
			      {'module could not be loaded',[{M,F,A,L}|MFAs]}
			  %% Line 534
			  <_cor16> when 'true' ->
			      let <_cor5> =
				  %% Line 535
				  call 'erlang':'length'
				      (A)
			      in  %% Line 535
				  case call 'erlang':'function_exported'
					   (M, F, _cor5) of
				    %% Line 536
				    <'true'> when 'true' ->
					%% Line 537
					Reason
				    %% Line 538
				    <'false'> when 'true' ->
					%% Line 539
					{'function not exported',[{M,F,A,L}|MFAs]}
				    ( <_cor6> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor6})
				      -| ['compiler_generated'] )
				  end
			end
		    %% Line 542
		    <_cor17> when 'true' ->
			%% Line 543
			Reason
		  end
	      in  do  %% Line 545
		      call 'error_logger':'format'
			  ([42|[42|[32|[119|[120|[32|[111|[98|[106|[101|[99|[116|[32|[115|[101|[114|[118|[101|[114|[32|[126|[112|[32|[116|[101|[114|[109|[105|[110|[97|[116|[105|[110|[103|[32|[10|[42|[42|[32|[76|[97|[115|[116|[32|[109|[101|[115|[115|[97|[103|[101|[32|[105|[110|[32|[119|[97|[115|[32|[126|[112|[126|[110|[42|[42|[32|[87|[104|[101|[110|[32|[83|[101|[114|[118|[101|[114|[32|[115|[116|[97|[116|[101|[32|[61|[61|[32|[126|[112|[126|[110|[42|[42|[32|[82|[101|[97|[115|[111|[110|[32|[102|[111|[114|[32|[116|[101|[114|[109|[105|[110|[97|[116|[105|[111|[110|[32|[61|[61|[32|[126|[110|[42|[42|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 549
																																																																																														[Name|[Msg|[State|[_cor9|[]]]]])
		      do  %% Line 550
			  call 'sys':'print_log'
			      (Debug)
			  %% Line 551
			  'ok'
	end
'opt'/2 =
    %% Line 557
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Op,[{_cor4,Value}|_cor5]>
	      when call 'erlang':'=:='
		    (_cor4,
		     Op) ->
	      %% Line 558
	      {'ok',Value}
	  %% Line 559
	  <Op,[_cor6|Options]> when 'true' ->
	      %% Line 560
	      apply 'opt'/2
		  (Op, Options)
	  %% Line 561
	  <_cor7,[]> when 'true' ->
	      %% Line 562
	      'false'
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'opt',2}}] )
	    -| ['compiler_generated'] )
	end
'debug_options'/2 =
    %% Line 564
    fun (_cor1,_cor0) ->
	%% Line 565
	case apply 'opt'/2
		 ('debug', _cor0) of
	  %% Line 566
	  <{'ok',Options}> when 'true' ->
	      apply 'dbg_options'/2
		  (_cor1, Options)
	  %% Line 567
	  <_cor5> when 'true' ->
	      apply 'dbg_options'/2
		  (_cor1, [])
	end
'dbg_options'/2 =
    %% Line 570
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Name,[]> when 'true' ->
	      let <_cor3> =
		  %% Line 572
		  case call 'init':'get_argument'
			   ('generic_debug') of
		    %% Line 573
		    <'error'> when 'true' ->
			%% Line 574
			[]
		    %% Line 575
		    <_cor7> when 'true' ->
			%% Line 576
			['log'|['statistics']]
		  end
	      in  %% Line 578
		  apply 'dbg_opts'/2
		      (Name, _cor3)
	  %% Line 579
	  <Name,Opts> when 'true' ->
	      %% Line 580
	      apply 'dbg_opts'/2
		  (Name, Opts)
	end
'dbg_opts'/2 =
    %% Line 582
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    catch
		%% Line 583
		call 'sys':'debug_options'
		    (_cor0)
	in  %% Line 583
	    case _cor2 of
	      %% Line 584
	      <{'EXIT',_cor6}> when 'true' ->
		  do  %% Line 585
		      call 'error_logger':'format'
			  ([126|[112|[58|[32|[105|[103|[110|[111|[114|[105|[110|[103|[32|[101|[114|[114|[111|[110|[101|[111|[117|[115|[32|[100|[101|[98|[117|[103|[32|[111|[112|[116|[105|[111|[110|[115|[32|[45|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 586
																																		     [_cor1|[_cor0|[]]])
		      %% Line 587
		      []
	      %% Line 588
	      <Dbg> when 'true' ->
		  %% Line 589
		  Dbg
	    end
'format_status'/2 =
    %% Line 596
    fun (_cor1,_cor0) ->
	%% Line 597
	case _cor0 of
	  <[PDict|[SysState|[Parent|[Debug|[[Name|[State|[Mod|[_X_Time|[]]]]]|[]]]]]]> when 'true' ->
	      let <_cor7> =
		  %% Line 599
		  case <> of
		    %% Line 600
		    <>
			when call 'erlang':'is_pid'
			      (Name) ->
			let <_cor4> =
			    %% Line 601
			    call 'erlang':'pid_to_list'
				(Name)
			in  %% Line 601
			    call 'lists':'concat'
				([[83|[116|[97|[116|[117|[115|[32|[102|[111|[114|[32|[119|[120|[32|[111|[98|[106|[101|[99|[116|[32]]]]]]]]]]]]]]]]]]]]]|[_cor4|[]]])
		    %% Line 602
		    <>
			when let <_cor5> =
			      call 'erlang':'is_atom'
				  (Name)
			  in  let <_cor6> =
				  call 'erlang':'is_list'
				      (Name)
			      in  call 'erlang':'or'
				      (_cor5, _cor6) ->
			%% Line 603
			call 'lists':'concat'
			    ([[83|[116|[97|[116|[117|[115|[32|[102|[111|[114|[32|[119|[120|[32|[111|[98|[106|[101|[99|[116|[32]]]]]]]]]]]]]]]]]]]]]|[Name|[]]])
		    %% Line 604
		    <> when 'true' ->
			%% Line 605
			{[83|[116|[97|[116|[117|[115|[32|[102|[111|[114|[32|[119|[120|[32|[111|[98|[106|[101|[99|[116|[32]]]]]]]]]]]]]]]]]]]]],Name}
		  end
	      in  let <Log> =
		      %% Line 607
		      call 'sys':'get_debug'
			  ('log', Debug, [])
		  in  let <_cor13> =
			  %% Line 609
			  case call 'erlang':'function_exported'
				   (Mod, 'format_status', 2) of
			    %% Line 610
			    <'true'> when 'true' ->
				let <_cor10> =
				    catch
					%% Line 611
					call Mod:'format_status'
					    (_cor1, [PDict|[State|[]]])
				in  %% Line 611
				    case _cor10 of
				      %% Line 612
				      <{'EXIT',_cor17}> when 'true' ->
					  [{'data',[{[83|[116|[97|[116|[101]]]]],State}|[]]}|[]]
				      %% Line 613
				      <Else> when 'true' ->
					  Else
				    end
			    %% Line 615
			    <_cor18> when 'true' ->
				%% Line 616
				[{'data',[{[83|[116|[97|[116|[101]]]]],State}|[]]}|[]]
			  end
		      in  %% Line 618
			  [{'header',_cor7}|%% Line 619
					    [{'data',[{[83|[116|[97|[116|[117|[115]]]]]],SysState}|%% Line 620
												   [{[80|[97|[114|[101|[110|[116]]]]]],Parent}|%% Line 621
																	       [{[76|[111|[103|[103|[101|[100|[32|[101|[118|[101|[110|[116|[115]]]]]]]]]]]]],Log}|[]]]]}|_cor13]]
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'behaviour_info'/1 =
    fun (_cor0) ->
	case _cor0 of
	  <'callbacks'> when 'true' ->
	      [{'init',1}|[{'handle_event',2}|[{'handle_call',3}|[{'handle_cast',2}|[{'handle_info',2}|[{'terminate',2}|[{'code_change',3}]]]]]]]
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'behaviour_info',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wx_object')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wx_object', _cor0)
end