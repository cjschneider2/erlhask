module 'wxCalendarCtrl' ['cacheBestSize'/2,
			 'captureMouse'/1,
			 'center'/1,
			 'center'/2,
			 'centerOnParent'/1,
			 'centerOnParent'/2,
			 'centre'/1,
			 'centre'/2,
			 'centreOnParent'/1,
			 'centreOnParent'/2,
			 'clearBackground'/1,
			 'clientToScreen'/2,
			 'clientToScreen'/3,
			 'close'/1,
			 'close'/2,
			 'connect'/2,
			 'connect'/3,
			 'convertDialogToPixels'/2,
			 'convertPixelsToDialog'/2,
			 'create'/3,
			 'create'/4,
			 'destroy'/1,
			 'destroyChildren'/1,
			 'disable'/1,
			 'disconnect'/1,
			 'disconnect'/2,
			 'disconnect'/3,
			 'enable'/1,
			 'enable'/2,
			 'enableHolidayDisplay'/1,
			 'enableHolidayDisplay'/2,
			 'enableMonthChange'/1,
			 'enableMonthChange'/2,
			 'enableYearChange'/1,
			 'enableYearChange'/2,
			 'findWindow'/2,
			 'fit'/1,
			 'fitInside'/1,
			 'freeze'/1,
			 'getAcceleratorTable'/1,
			 'getAttr'/2,
			 'getBackgroundColour'/1,
			 'getBackgroundStyle'/1,
			 'getBestSize'/1,
			 'getCaret'/1,
			 'getCharHeight'/1,
			 'getCharWidth'/1,
			 'getChildren'/1,
			 'getClientSize'/1,
			 'getContainingSizer'/1,
			 'getCursor'/1,
			 'getDate'/1,
			 'getDropTarget'/1,
			 'getEventHandler'/1,
			 'getExtraStyle'/1,
			 'getFont'/1,
			 'getForegroundColour'/1,
			 'getGrandParent'/1,
			 'getHandle'/1,
			 'getHeaderColourBg'/1,
			 'getHeaderColourFg'/1,
			 'getHelpText'/1,
			 'getHighlightColourBg'/1,
			 'getHighlightColourFg'/1,
			 'getHolidayColourBg'/1,
			 'getHolidayColourFg'/1,
			 'getId'/1,
			 'getLabel'/1,
			 'getMaxSize'/1,
			 'getMinSize'/1,
			 'getName'/1,
			 'getParent'/1,
			 'getPosition'/1,
			 'getRect'/1,
			 'getScreenPosition'/1,
			 'getScreenRect'/1,
			 'getScrollPos'/2,
			 'getScrollRange'/2,
			 'getScrollThumb'/2,
			 'getSize'/1,
			 'getSizer'/1,
			 'getTextExtent'/2,
			 'getTextExtent'/3,
			 'getToolTip'/1,
			 'getUpdateRegion'/1,
			 'getVirtualSize'/1,
			 'getWindowStyleFlag'/1,
			 'getWindowVariant'/1,
			 'hasCapture'/1,
			 'hasScrollbar'/2,
			 'hasTransparentBackground'/1,
			 'hide'/1,
			 'hitTest'/2,
			 'inheritAttributes'/1,
			 'initDialog'/1,
			 'invalidateBestSize'/1,
			 'isEnabled'/1,
			 'isExposed'/2,
			 'isExposed'/3,
			 'isExposed'/5,
			 'isRetained'/1,
			 'isShown'/1,
			 'isTopLevel'/1,
			 'layout'/1,
			 'lineDown'/1,
			 'lineUp'/1,
			 'lower'/1,
			 'makeModal'/1,
			 'makeModal'/2,
			 'module_info'/0,
			 'module_info'/1,
			 'move'/2,
			 'move'/3,
			 'move'/4,
			 'moveAfterInTabOrder'/2,
			 'moveBeforeInTabOrder'/2,
			 'navigate'/1,
			 'navigate'/2,
			 'new'/0,
			 'new'/2,
			 'new'/3,
			 'pageDown'/1,
			 'pageUp'/1,
			 'parent_class'/1,
			 'popEventHandler'/1,
			 'popEventHandler'/2,
			 'popupMenu'/2,
			 'popupMenu'/3,
			 'popupMenu'/4,
			 'raise'/1,
			 'refresh'/1,
			 'refresh'/2,
			 'refreshRect'/2,
			 'refreshRect'/3,
			 'releaseMouse'/1,
			 'removeChild'/2,
			 'reparent'/2,
			 'resetAttr'/2,
			 'screenToClient'/1,
			 'screenToClient'/2,
			 'scrollLines'/2,
			 'scrollPages'/2,
			 'scrollWindow'/3,
			 'scrollWindow'/4,
			 'setAcceleratorTable'/2,
			 'setAttr'/3,
			 'setAutoLayout'/2,
			 'setBackgroundColour'/2,
			 'setBackgroundStyle'/2,
			 'setCaret'/2,
			 'setClientSize'/2,
			 'setClientSize'/3,
			 'setContainingSizer'/2,
			 'setCursor'/2,
			 'setDate'/2,
			 'setDropTarget'/2,
			 'setExtraStyle'/2,
			 'setFocus'/1,
			 'setFocusFromKbd'/1,
			 'setFont'/2,
			 'setForegroundColour'/2,
			 'setHeaderColours'/3,
			 'setHelpText'/2,
			 'setHighlightColours'/3,
			 'setHoliday'/2,
			 'setHolidayColours'/3,
			 'setId'/2,
			 'setLabel'/2,
			 'setMaxSize'/2,
			 'setMinSize'/2,
			 'setName'/2,
			 'setOwnBackgroundColour'/2,
			 'setOwnFont'/2,
			 'setOwnForegroundColour'/2,
			 'setPalette'/2,
			 'setScrollPos'/3,
			 'setScrollPos'/4,
			 'setScrollbar'/5,
			 'setScrollbar'/6,
			 'setSize'/2,
			 'setSize'/3,
			 'setSize'/5,
			 'setSize'/6,
			 'setSizeHints'/2,
			 'setSizeHints'/3,
			 'setSizeHints'/4,
			 'setSizer'/2,
			 'setSizer'/3,
			 'setSizerAndFit'/2,
			 'setSizerAndFit'/3,
			 'setThemeEnabled'/2,
			 'setToolTip'/2,
			 'setVirtualSize'/2,
			 'setVirtualSize'/3,
			 'setVirtualSizeHints'/2,
			 'setVirtualSizeHints'/3,
			 'setVirtualSizeHints'/4,
			 'setWindowStyle'/2,
			 'setWindowStyleFlag'/2,
			 'setWindowVariant'/2,
			 'shouldInheritColours'/1,
			 'show'/1,
			 'show'/2,
			 'thaw'/1,
			 'transferDataFromWindow'/1,
			 'transferDataToWindow'/1,
			 'update'/1,
			 'updateWindowUI'/1,
			 'updateWindowUI'/2,
			 'validate'/1,
			 'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 77
		'export_type' =
		    %% Line 77
		    [{'wxCalendarCtrl',0}],
		%% Line 78
		'deprecated' =
		    %% Line 78
		    [{'enableYearChange',1}|[{'enableYearChange',2}]],
		%% Line 86
		'type' =
		    %% Line 86
		    [{'wxCalendarCtrl',{'remote_type',86,[{'atom',86,'wx'}|[{'atom',86,'wx_object'}|[[]]]]},[]}],
		%% Line 88
		'spec' =
		    %% Line 88
		    [{{'new',0},[{'type',88,'fun',[{'type',88,'product',[]}|[{'type',88,'wxCalendarCtrl',[]}]]}]}],
		%% Line 94
		'spec' =
		    %% Line 94
		    [{{'new',2},[{'type',94,'bounded_fun',[{'type',94,'fun',[{'type',94,'product',[{'var',94,'Parent'}|[{'var',94,'Id'}]]}|[{'type',94,'wxCalendarCtrl',[]}]]}|[[{'type',95,'constraint',[{'atom',95,'is_subtype'}|[[{'var',95,'Parent'}|[{'remote_type',95,[{'atom',95,'wxWindow'}|[{'atom',95,'wxWindow'}|[[]]]]}]]]]}|[{'type',95,'constraint',[{'atom',95,'is_subtype'}|[[{'var',95,'Id'}|[{'type',95,'integer',[]}]]]]}]]]]}]}],
		%% Line 102
		'spec' =
		    %% Line 102
		    [{{'new',3},[{'type',102,'bounded_fun',[{'type',102,'fun',[{'type',102,'product',[{'var',102,'Parent'}|[{'var',102,'Id'}|[{'type',102,'list',[{'var',102,'Option'}]}]]]}|[{'type',102,'wxCalendarCtrl',[]}]]}|[[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'Parent'}|[{'remote_type',103,[{'atom',103,'wxWindow'}|[{'atom',103,'wxWindow'}|[[]]]]}]]]]}|[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'Id'}|[{'type',103,'integer',[]}]]]]}|[{'type',104,'constraint',[{'atom',104,'is_subtype'}|[[{'var',104,'Option'}|[{'type',104,'union',[{'type',104,'tuple',[{'atom',104,'date'}|[{'remote_type',104,[{'atom',104,'wx'}|[{'atom',104,'wx_datetime'}|[[]]]]}]]}|[{'type',105,'tuple',[{'atom',105,'pos'}|[{'type',105,'tuple',[{'ann_type',105,[{'var',105,'X'}|[{'type',105,'integer',[]}]]}|[{'ann_type',105,[{'var',105,'Y'}|[{'type',105,'integer',[]}]]}]]}]]}|[{'type',106,'tuple',[{'atom',106,'size'}|[{'type',106,'tuple',[{'ann_type',106,[{'var',106,'W'}|[{'type',106,'integer',[]}]]}|[{'ann_type',106,[{'var',106,'H'}|[{'type',106,'integer',[]}]]}]]}]]}|[{'type',107,'tuple',[{'atom',107,'style'}|[{'type',107,'integer',[]}]]}]]]]}]]]]}]]]]]}]}],
		%% Line 121
		'spec' =
		    %% Line 121
		    [{{'create',3},[{'type',121,'bounded_fun',[{'type',121,'fun',[{'type',121,'product',[{'var',121,'This'}|[{'var',121,'Parent'}|[{'var',121,'Id'}]]]}|[{'type',121,'boolean',[]}]]}|[[{'type',122,'constraint',[{'atom',122,'is_subtype'}|[[{'var',122,'This'}|[{'type',122,'wxCalendarCtrl',[]}]]]]}|[{'type',122,'constraint',[{'atom',122,'is_subtype'}|[[{'var',122,'Parent'}|[{'remote_type',122,[{'atom',122,'wxWindow'}|[{'atom',122,'wxWindow'}|[[]]]]}]]]]}|[{'type',122,'constraint',[{'atom',122,'is_subtype'}|[[{'var',122,'Id'}|[{'type',122,'integer',[]}]]]]}]]]]]}]}],
		%% Line 129
		'spec' =
		    %% Line 129
		    [{{'create',4},[{'type',129,'bounded_fun',[{'type',129,'fun',[{'type',129,'product',[{'var',129,'This'}|[{'var',129,'Parent'}|[{'var',129,'Id'}|[{'type',129,'list',[{'var',129,'Option'}]}]]]]}|[{'type',129,'boolean',[]}]]}|[[{'type',130,'constraint',[{'atom',130,'is_subtype'}|[[{'var',130,'This'}|[{'type',130,'wxCalendarCtrl',[]}]]]]}|[{'type',130,'constraint',[{'atom',130,'is_subtype'}|[[{'var',130,'Parent'}|[{'remote_type',130,[{'atom',130,'wxWindow'}|[{'atom',130,'wxWindow'}|[[]]]]}]]]]}|[{'type',130,'constraint',[{'atom',130,'is_subtype'}|[[{'var',130,'Id'}|[{'type',130,'integer',[]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Option'}|[{'type',131,'union',[{'type',131,'tuple',[{'atom',131,'date'}|[{'remote_type',131,[{'atom',131,'wx'}|[{'atom',131,'wx_datetime'}|[[]]]]}]]}|[{'type',132,'tuple',[{'atom',132,'pos'}|[{'type',132,'tuple',[{'ann_type',132,[{'var',132,'X'}|[{'type',132,'integer',[]}]]}|[{'ann_type',132,[{'var',132,'Y'}|[{'type',132,'integer',[]}]]}]]}]]}|[{'type',133,'tuple',[{'atom',133,'size'}|[{'type',133,'tuple',[{'ann_type',133,[{'var',133,'W'}|[{'type',133,'integer',[]}]]}|[{'ann_type',133,[{'var',133,'H'}|[{'type',133,'integer',[]}]]}]]}]]}|[{'type',134,'tuple',[{'atom',134,'style'}|[{'type',134,'integer',[]}]]}]]]]}]]]]}]]]]]]}]}],
		%% Line 149
		'spec' =
		    %% Line 149
		    [{{'setDate',2},[{'type',149,'bounded_fun',[{'type',149,'fun',[{'type',149,'product',[{'var',149,'This'}|[{'var',149,'Date'}]]}|[{'type',149,'boolean',[]}]]}|[[{'type',150,'constraint',[{'atom',150,'is_subtype'}|[[{'var',150,'This'}|[{'type',150,'wxCalendarCtrl',[]}]]]]}|[{'type',150,'constraint',[{'atom',150,'is_subtype'}|[[{'var',150,'Date'}|[{'remote_type',150,[{'atom',150,'wx'}|[{'atom',150,'wx_datetime'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 158
		'spec' =
		    %% Line 158
		    [{{'getDate',1},[{'type',158,'bounded_fun',[{'type',158,'fun',[{'type',158,'product',[{'var',158,'This'}]}|[{'remote_type',158,[{'atom',158,'wx'}|[{'atom',158,'wx_datetime'}|[[]]]]}]]}|[[{'type',159,'constraint',[{'atom',159,'is_subtype'}|[[{'var',159,'This'}|[{'type',159,'wxCalendarCtrl',[]}]]]]}]]]}]}],
		%% Line 166
		'spec' =
		    %% Line 166
		    [{{'enableYearChange',1},[{'type',166,'bounded_fun',[{'type',166,'fun',[{'type',166,'product',[{'var',166,'This'}]}|[{'atom',166,'ok'}]]}|[[{'type',167,'constraint',[{'atom',167,'is_subtype'}|[[{'var',167,'This'}|[{'type',167,'wxCalendarCtrl',[]}]]]]}]]]}]}],
		%% Line 174
		'spec' =
		    %% Line 174
		    [{{'enableYearChange',2},[{'type',174,'bounded_fun',[{'type',174,'fun',[{'type',174,'product',[{'var',174,'This'}|[{'type',174,'list',[{'var',174,'Option'}]}]]}|[{'atom',174,'ok'}]]}|[[{'type',175,'constraint',[{'atom',175,'is_subtype'}|[[{'var',175,'This'}|[{'type',175,'wxCalendarCtrl',[]}]]]]}|[{'type',176,'constraint',[{'atom',176,'is_subtype'}|[[{'var',176,'Option'}|[{'type',176,'tuple',[{'atom',176,'enable'}|[{'type',176,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 187
		'spec' =
		    %% Line 187
		    [{{'enableMonthChange',1},[{'type',187,'bounded_fun',[{'type',187,'fun',[{'type',187,'product',[{'var',187,'This'}]}|[{'atom',187,'ok'}]]}|[[{'type',188,'constraint',[{'atom',188,'is_subtype'}|[[{'var',188,'This'}|[{'type',188,'wxCalendarCtrl',[]}]]]]}]]]}]}],
		%% Line 195
		'spec' =
		    %% Line 195
		    [{{'enableMonthChange',2},[{'type',195,'bounded_fun',[{'type',195,'fun',[{'type',195,'product',[{'var',195,'This'}|[{'type',195,'list',[{'var',195,'Option'}]}]]}|[{'atom',195,'ok'}]]}|[[{'type',196,'constraint',[{'atom',196,'is_subtype'}|[[{'var',196,'This'}|[{'type',196,'wxCalendarCtrl',[]}]]]]}|[{'type',197,'constraint',[{'atom',197,'is_subtype'}|[[{'var',197,'Option'}|[{'type',197,'tuple',[{'atom',197,'enable'}|[{'type',197,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 208
		'spec' =
		    %% Line 208
		    [{{'enableHolidayDisplay',1},[{'type',208,'bounded_fun',[{'type',208,'fun',[{'type',208,'product',[{'var',208,'This'}]}|[{'atom',208,'ok'}]]}|[[{'type',209,'constraint',[{'atom',209,'is_subtype'}|[[{'var',209,'This'}|[{'type',209,'wxCalendarCtrl',[]}]]]]}]]]}]}],
		%% Line 216
		'spec' =
		    %% Line 216
		    [{{'enableHolidayDisplay',2},[{'type',216,'bounded_fun',[{'type',216,'fun',[{'type',216,'product',[{'var',216,'This'}|[{'type',216,'list',[{'var',216,'Option'}]}]]}|[{'atom',216,'ok'}]]}|[[{'type',217,'constraint',[{'atom',217,'is_subtype'}|[[{'var',217,'This'}|[{'type',217,'wxCalendarCtrl',[]}]]]]}|[{'type',218,'constraint',[{'atom',218,'is_subtype'}|[[{'var',218,'Option'}|[{'type',218,'tuple',[{'atom',218,'display'}|[{'type',218,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 229
		'spec' =
		    %% Line 229
		    [{{'setHeaderColours',3},[{'type',229,'bounded_fun',[{'type',229,'fun',[{'type',229,'product',[{'var',229,'This'}|[{'var',229,'ColFg'}|[{'var',229,'ColBg'}]]]}|[{'atom',229,'ok'}]]}|[[{'type',230,'constraint',[{'atom',230,'is_subtype'}|[[{'var',230,'This'}|[{'type',230,'wxCalendarCtrl',[]}]]]]}|[{'type',230,'constraint',[{'atom',230,'is_subtype'}|[[{'var',230,'ColFg'}|[{'remote_type',230,[{'atom',230,'wx'}|[{'atom',230,'wx_colour'}|[[]]]]}]]]]}|[{'type',230,'constraint',[{'atom',230,'is_subtype'}|[[{'var',230,'ColBg'}|[{'remote_type',230,[{'atom',230,'wx'}|[{'atom',230,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 238
		'spec' =
		    %% Line 238
		    [{{'getHeaderColourFg',1},[{'type',238,'bounded_fun',[{'type',238,'fun',[{'type',238,'product',[{'var',238,'This'}]}|[{'remote_type',238,[{'atom',238,'wx'}|[{'atom',238,'wx_colour4'}|[[]]]]}]]}|[[{'type',239,'constraint',[{'atom',239,'is_subtype'}|[[{'var',239,'This'}|[{'type',239,'wxCalendarCtrl',[]}]]]]}]]]}]}],
		%% Line 246
		'spec' =
		    %% Line 246
		    [{{'getHeaderColourBg',1},[{'type',246,'bounded_fun',[{'type',246,'fun',[{'type',246,'product',[{'var',246,'This'}]}|[{'remote_type',246,[{'atom',246,'wx'}|[{'atom',246,'wx_colour4'}|[[]]]]}]]}|[[{'type',247,'constraint',[{'atom',247,'is_subtype'}|[[{'var',247,'This'}|[{'type',247,'wxCalendarCtrl',[]}]]]]}]]]}]}],
		%% Line 254
		'spec' =
		    %% Line 254
		    [{{'setHighlightColours',3},[{'type',254,'bounded_fun',[{'type',254,'fun',[{'type',254,'product',[{'var',254,'This'}|[{'var',254,'ColFg'}|[{'var',254,'ColBg'}]]]}|[{'atom',254,'ok'}]]}|[[{'type',255,'constraint',[{'atom',255,'is_subtype'}|[[{'var',255,'This'}|[{'type',255,'wxCalendarCtrl',[]}]]]]}|[{'type',255,'constraint',[{'atom',255,'is_subtype'}|[[{'var',255,'ColFg'}|[{'remote_type',255,[{'atom',255,'wx'}|[{'atom',255,'wx_colour'}|[[]]]]}]]]]}|[{'type',255,'constraint',[{'atom',255,'is_subtype'}|[[{'var',255,'ColBg'}|[{'remote_type',255,[{'atom',255,'wx'}|[{'atom',255,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 263
		'spec' =
		    %% Line 263
		    [{{'getHighlightColourFg',1},[{'type',263,'bounded_fun',[{'type',263,'fun',[{'type',263,'product',[{'var',263,'This'}]}|[{'remote_type',263,[{'atom',263,'wx'}|[{'atom',263,'wx_colour4'}|[[]]]]}]]}|[[{'type',264,'constraint',[{'atom',264,'is_subtype'}|[[{'var',264,'This'}|[{'type',264,'wxCalendarCtrl',[]}]]]]}]]]}]}],
		%% Line 271
		'spec' =
		    %% Line 271
		    [{{'getHighlightColourBg',1},[{'type',271,'bounded_fun',[{'type',271,'fun',[{'type',271,'product',[{'var',271,'This'}]}|[{'remote_type',271,[{'atom',271,'wx'}|[{'atom',271,'wx_colour4'}|[[]]]]}]]}|[[{'type',272,'constraint',[{'atom',272,'is_subtype'}|[[{'var',272,'This'}|[{'type',272,'wxCalendarCtrl',[]}]]]]}]]]}]}],
		%% Line 279
		'spec' =
		    %% Line 279
		    [{{'setHolidayColours',3},[{'type',279,'bounded_fun',[{'type',279,'fun',[{'type',279,'product',[{'var',279,'This'}|[{'var',279,'ColFg'}|[{'var',279,'ColBg'}]]]}|[{'atom',279,'ok'}]]}|[[{'type',280,'constraint',[{'atom',280,'is_subtype'}|[[{'var',280,'This'}|[{'type',280,'wxCalendarCtrl',[]}]]]]}|[{'type',280,'constraint',[{'atom',280,'is_subtype'}|[[{'var',280,'ColFg'}|[{'remote_type',280,[{'atom',280,'wx'}|[{'atom',280,'wx_colour'}|[[]]]]}]]]]}|[{'type',280,'constraint',[{'atom',280,'is_subtype'}|[[{'var',280,'ColBg'}|[{'remote_type',280,[{'atom',280,'wx'}|[{'atom',280,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 288
		'spec' =
		    %% Line 288
		    [{{'getHolidayColourFg',1},[{'type',288,'bounded_fun',[{'type',288,'fun',[{'type',288,'product',[{'var',288,'This'}]}|[{'remote_type',288,[{'atom',288,'wx'}|[{'atom',288,'wx_colour4'}|[[]]]]}]]}|[[{'type',289,'constraint',[{'atom',289,'is_subtype'}|[[{'var',289,'This'}|[{'type',289,'wxCalendarCtrl',[]}]]]]}]]]}]}],
		%% Line 296
		'spec' =
		    %% Line 296
		    [{{'getHolidayColourBg',1},[{'type',296,'bounded_fun',[{'type',296,'fun',[{'type',296,'product',[{'var',296,'This'}]}|[{'remote_type',296,[{'atom',296,'wx'}|[{'atom',296,'wx_colour4'}|[[]]]]}]]}|[[{'type',297,'constraint',[{'atom',297,'is_subtype'}|[[{'var',297,'This'}|[{'type',297,'wxCalendarCtrl',[]}]]]]}]]]}]}],
		%% Line 304
		'spec' =
		    %% Line 304
		    [{{'getAttr',2},[{'type',304,'bounded_fun',[{'type',304,'fun',[{'type',304,'product',[{'var',304,'This'}|[{'var',304,'Day'}]]}|[{'remote_type',304,[{'atom',304,'wxCalendarDateAttr'}|[{'atom',304,'wxCalendarDateAttr'}|[[]]]]}]]}|[[{'type',305,'constraint',[{'atom',305,'is_subtype'}|[[{'var',305,'This'}|[{'type',305,'wxCalendarCtrl',[]}]]]]}|[{'type',305,'constraint',[{'atom',305,'is_subtype'}|[[{'var',305,'Day'}|[{'type',305,'integer',[]}]]]]}]]]]}]}],
		%% Line 313
		'spec' =
		    %% Line 313
		    [{{'setAttr',3},[{'type',313,'bounded_fun',[{'type',313,'fun',[{'type',313,'product',[{'var',313,'This'}|[{'var',313,'Day'}|[{'var',313,'Attr'}]]]}|[{'atom',313,'ok'}]]}|[[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'This'}|[{'type',314,'wxCalendarCtrl',[]}]]]]}|[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'Day'}|[{'type',314,'integer',[]}]]]]}|[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'Attr'}|[{'remote_type',314,[{'atom',314,'wxCalendarDateAttr'}|[{'atom',314,'wxCalendarDateAttr'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 323
		'spec' =
		    %% Line 323
		    [{{'setHoliday',2},[{'type',323,'bounded_fun',[{'type',323,'fun',[{'type',323,'product',[{'var',323,'This'}|[{'var',323,'Day'}]]}|[{'atom',323,'ok'}]]}|[[{'type',324,'constraint',[{'atom',324,'is_subtype'}|[[{'var',324,'This'}|[{'type',324,'wxCalendarCtrl',[]}]]]]}|[{'type',324,'constraint',[{'atom',324,'is_subtype'}|[[{'var',324,'Day'}|[{'type',324,'integer',[]}]]]]}]]]]}]}],
		%% Line 332
		'spec' =
		    %% Line 332
		    [{{'resetAttr',2},[{'type',332,'bounded_fun',[{'type',332,'fun',[{'type',332,'product',[{'var',332,'This'}|[{'var',332,'Day'}]]}|[{'atom',332,'ok'}]]}|[[{'type',333,'constraint',[{'atom',333,'is_subtype'}|[[{'var',333,'This'}|[{'type',333,'wxCalendarCtrl',[]}]]]]}|[{'type',333,'constraint',[{'atom',333,'is_subtype'}|[[{'var',333,'Day'}|[{'type',333,'integer',[]}]]]]}]]]]}]}],
		%% Line 343
		'spec' =
		    %% Line 343
		    [{{'hitTest',2},[{'type',343,'bounded_fun',[{'type',343,'fun',[{'type',343,'product',[{'var',343,'This'}|[{'var',343,'Pos'}]]}|[{'var',343,'Result'}]]}|[[{'type',344,'constraint',[{'atom',344,'is_subtype'}|[[{'var',344,'Result'}|[{'type',344,'tuple',[{'ann_type',344,[{'var',344,'Res'}|[{'remote_type',344,[{'atom',344,'wx'}|[{'atom',344,'wx_enum'}|[[]]]]}]]}|[{'ann_type',344,[{'var',344,'Date'}|[{'remote_type',344,[{'atom',344,'wx'}|[{'atom',344,'wx_datetime'}|[[]]]]}]]}|[{'ann_type',344,[{'var',344,'Wd'}|[{'remote_type',344,[{'atom',344,'wx'}|[{'atom',344,'wx_enum'}|[[]]]]}]]}]]]}]]]]}|[{'type',345,'constraint',[{'atom',345,'is_subtype'}|[[{'var',345,'This'}|[{'type',345,'wxCalendarCtrl',[]}]]]]}|[{'type',345,'constraint',[{'atom',345,'is_subtype'}|[[{'var',345,'Pos'}|[{'type',345,'tuple',[{'ann_type',345,[{'var',345,'X'}|[{'type',345,'integer',[]}]]}|[{'ann_type',345,[{'var',345,'Y'}|[{'type',345,'integer',[]}]]}]]}]]]]}]]]]]}]}],
		%% Line 353
		'spec' =
		    %% Line 353
		    [{{'destroy',1},[{'type',353,'fun',[{'type',353,'product',[{'ann_type',353,[{'var',353,'This'}|[{'type',353,'wxCalendarCtrl',[]}]]}]}|[{'atom',353,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 81
    fun (_cor0) ->
	case _cor0 of
	  <'wxControl'> when 'true' ->
	      'true'
	  %% Line 82
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 83
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 84
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxCalendarCtrl'})
	end
'new'/0 =
    %% Line 89
    fun () ->
	%% Line 90
	call 'wxe_util':'construct'
	    (1497, %% Line 91
		   #{}#)
'new'/2 =
    %% Line 97
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor5,_cor6,_cor7},Id>
	      when %% Line 98
		call 'erlang':'is_integer'
		    (Id) ->
	      %% Line 99
	      apply 'new'/3
		  (Parent, Id, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'new'/3 =
    %% Line 108
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor23},Id,Options>
	      when let <_cor3> =
		    %% Line 109
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor4> =
			%% Line 109
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 109
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 110
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 111
		      ( fun (_cor13,_cor12) ->
			    case <_cor13,_cor12> of
			      <{'date',Date},Acc> when 'true' ->
				  let <_cor7> =
				      call 'wxe_util':'datetime_bin'
					  (Date)
				  in  let <_cor8> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor7>(24,8,'binary',['unsigned'|['big']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor8|Acc]
			      %% Line 112
			      <{'pos',{PosX,PosY}},Acc> when 'true' ->
				  let <_cor9> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<PosX>(32,1,'integer',['unsigned'|['native']]),
					#<PosY>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor9|Acc]
			      %% Line 113
			      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				  let <_cor10> =
				      #{#<3>(32,1,'integer',['unsigned'|['native']]),
					#<SizeW>(32,1,'integer',['unsigned'|['native']]),
					#<SizeH>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor10|Acc]
			      %% Line 114
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor11> =
				      #{#<4>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor11|Acc]
			      %% Line 115
			      <BadOpt,_cor24> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/3-fun-0-'}}] )
		  in  let <_cor17> =
			  %% Line 116
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 116
			      call 'erlang':'list_to_binary'
				  (_cor17)
			  in  let <_cor19> =
				  %% Line 118
				  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				    #<Id>(32,1,'integer',['unsigned'|['native']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 117
				  call 'wxe_util':'construct'
				      (1498, _cor19)
	  ( <_cor22,_cor21,_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21,_cor20})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'create'/3 =
    %% Line 124
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor8,_cor9,_cor10},Parent = {'wx_ref',_cor11,_cor12,_cor13},Id>
	      when %% Line 125
		call 'erlang':'is_integer'
		    (Id) ->
	      %% Line 126
	      apply 'create'/4
		  (This, Parent, Id, [])
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'create',3}}] )
	    -| ['compiler_generated'] )
	end
'create'/4 =
    %% Line 135
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor27},{'wx_ref',ParentRef,ParentT,_cor28},Id,Options>
	      when let <_cor4> =
		    %% Line 136
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor5> =
			%% Line 136
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 136
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 137
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 138
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <MOpts> =
			  %% Line 139
			  ( fun (_cor16,_cor15) ->
				case <_cor16,_cor15> of
				  <{'date',Date},Acc> when 'true' ->
				      let <_cor10> =
					  call 'wxe_util':'datetime_bin'
					      (Date)
				      in  let <_cor11> =
					      #{#<1>(32,1,'integer',['unsigned'|['native']]),
						#<_cor10>(24,8,'binary',['unsigned'|['big']]),
						#<0>(32,1,'integer',['unsigned'|['big']])}#
					  in  [_cor11|Acc]
				  %% Line 140
				  <{'pos',{PosX,PosY}},Acc> when 'true' ->
				      let <_cor12> =
					  #{#<2>(32,1,'integer',['unsigned'|['native']]),
					    #<PosX>(32,1,'integer',['unsigned'|['native']]),
					    #<PosY>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor12|Acc]
				  %% Line 141
				  <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				      let <_cor13> =
					  #{#<3>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeW>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeH>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor13|Acc]
				  %% Line 142
				  <{'style',Style},Acc> when 'true' ->
				      let <_cor14> =
					  #{#<4>(32,1,'integer',['unsigned'|['native']]),
					    #<Style>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor14|Acc]
				  %% Line 143
				  <BadOpt,_cor29> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-create/4-fun-0-'}}] )
		      in  let <_cor20> =
			      %% Line 144
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 144
				  call 'erlang':'list_to_binary'
				      (_cor20)
			      in  let <_cor22> =
				      %% Line 146
				      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
					#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
					#<Id>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']]),
					#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				  in  %% Line 145
				      call 'wxe_util':'call'
					  (1499, _cor22)
	  ( <_cor26,_cor25,_cor24,_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor26,_cor25,_cor24,_cor23})
		  -| [{'function_name',{'create',4}}] )
	    -| ['compiler_generated'] )
	end
'setDate'/2 =
    %% Line 151
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},Date>
	      when %% Line 152
		try
		    let <_cor2> =
			call 'erlang':'tuple_size'
			    (Date)
		    in  call 'erlang':'=:='
			    (_cor2, 2)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 153
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor5> =
		      %% Line 155
		      call 'wxe_util':'datetime_bin'
			  (Date)
		  in  let <_cor6> =
			  %% Line 155
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor5>(24,8,'binary',['unsigned'|['big']])}#
		      in  %% Line 154
			  call 'wxe_util':'call'
			      (1501, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setDate',2}}] )
	    -| ['compiler_generated'] )
	end
'getDate'/1 =
    %% Line 160
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 161
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 163
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 162
		      call 'wxe_util':'call'
			  (1502, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getDate',1}}] )
	    -| ['compiler_generated'] )
	end
'enableYearChange'/1 =
    %% Line 169
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 170
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 171
	      apply 'enableYearChange'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'enableYearChange',1}}] )
	    -| ['compiler_generated'] )
	end
'enableYearChange'/2 =
    %% Line 177
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 178
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 179
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 180
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'enable',Enable},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Enable)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 181
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-enableYearChange/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 182
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 182
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 184
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 183
				  call 'wxe_util':'cast'
				      (1503, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'enableYearChange',2}}] )
	    -| ['compiler_generated'] )
	end
'enableMonthChange'/1 =
    %% Line 190
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 191
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 192
	      apply 'enableMonthChange'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'enableMonthChange',1}}] )
	    -| ['compiler_generated'] )
	end
'enableMonthChange'/2 =
    %% Line 198
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 199
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 200
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 201
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'enable',Enable},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Enable)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 202
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-enableMonthChange/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 203
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 203
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 205
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 204
				  call 'wxe_util':'cast'
				      (1504, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'enableMonthChange',2}}] )
	    -| ['compiler_generated'] )
	end
'enableHolidayDisplay'/1 =
    %% Line 211
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 212
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 213
	      apply 'enableHolidayDisplay'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'enableHolidayDisplay',1}}] )
	    -| ['compiler_generated'] )
	end
'enableHolidayDisplay'/2 =
    %% Line 219
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 220
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 221
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 222
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'display',Display},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Display)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 223
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-enableHolidayDisplay/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 224
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 224
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 226
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 225
				  call 'wxe_util':'cast'
				      (1505, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'enableHolidayDisplay',2}}] )
	    -| ['compiler_generated'] )
	end
'setHeaderColours'/3 =
    %% Line 231
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor21},ColFg,ColBg>
	      when let <_cor4> =
		    %% Line 232
		    try
			let <_cor3> =
			    call 'erlang':'tuple_size'
				(ColFg)
			in  call 'erlang':'=:='
				(_cor3, 3)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor9> =
			%% Line 232
			try
			    let <_cor5> =
				call 'erlang':'tuple_size'
				    (ColFg)
			    in  let <_cor6> =
				    call 'erlang':'=:='
					(_cor5, 4)
				in  let <_cor7> =
					call 'erlang':'tuple_size'
					    (ColBg)
				    in  let <_cor8> =
					    call 'erlang':'=:='
						(_cor7, 3)
					in  call 'erlang':'and'
						(_cor6, _cor8)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  let <_cor11> =
			    %% Line 232
			    try
				let <_cor10> =
				    call 'erlang':'tuple_size'
					(ColBg)
				in  call 'erlang':'=:='
					(_cor10, 4)
			    of <Try> ->
				Try
			    catch <T,R> ->
				'false'
			in  let <_cor12> =
				%% Line 232
				call 'erlang':'or'
				    (_cor9, _cor11)
			    in  %% Line 232
				call 'erlang':'or'
				    (_cor4, _cor12) ->
	      do  %% Line 233
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor16> =
		      %% Line 235
		      call 'wxe_util':'colour_bin'
			  (ColFg)
		  in  let <_cor15> =
			  %% Line 235
			  call 'wxe_util':'colour_bin'
			      (ColBg)
		      in  let <_cor17> =
			      %% Line 235
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<_cor16>(16,8,'binary',['unsigned'|['big']]),
				#<_cor15>(16,8,'binary',['unsigned'|['big']])}#
			  in  %% Line 234
			      call 'wxe_util':'cast'
				  (1506, _cor17)
	  ( <_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19,_cor18})
		  -| [{'function_name',{'setHeaderColours',3}}] )
	    -| ['compiler_generated'] )
	end
'getHeaderColourFg'/1 =
    %% Line 240
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 241
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 243
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 242
		      call 'wxe_util':'call'
			  (1507, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getHeaderColourFg',1}}] )
	    -| ['compiler_generated'] )
	end
'getHeaderColourBg'/1 =
    %% Line 248
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 249
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 251
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 250
		      call 'wxe_util':'call'
			  (1508, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getHeaderColourBg',1}}] )
	    -| ['compiler_generated'] )
	end
'setHighlightColours'/3 =
    %% Line 256
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor21},ColFg,ColBg>
	      when let <_cor4> =
		    %% Line 257
		    try
			let <_cor3> =
			    call 'erlang':'tuple_size'
				(ColFg)
			in  call 'erlang':'=:='
				(_cor3, 3)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor9> =
			%% Line 257
			try
			    let <_cor5> =
				call 'erlang':'tuple_size'
				    (ColFg)
			    in  let <_cor6> =
				    call 'erlang':'=:='
					(_cor5, 4)
				in  let <_cor7> =
					call 'erlang':'tuple_size'
					    (ColBg)
				    in  let <_cor8> =
					    call 'erlang':'=:='
						(_cor7, 3)
					in  call 'erlang':'and'
						(_cor6, _cor8)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  let <_cor11> =
			    %% Line 257
			    try
				let <_cor10> =
				    call 'erlang':'tuple_size'
					(ColBg)
				in  call 'erlang':'=:='
					(_cor10, 4)
			    of <Try> ->
				Try
			    catch <T,R> ->
				'false'
			in  let <_cor12> =
				%% Line 257
				call 'erlang':'or'
				    (_cor9, _cor11)
			    in  %% Line 257
				call 'erlang':'or'
				    (_cor4, _cor12) ->
	      do  %% Line 258
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor16> =
		      %% Line 260
		      call 'wxe_util':'colour_bin'
			  (ColFg)
		  in  let <_cor15> =
			  %% Line 260
			  call 'wxe_util':'colour_bin'
			      (ColBg)
		      in  let <_cor17> =
			      %% Line 260
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<_cor16>(16,8,'binary',['unsigned'|['big']]),
				#<_cor15>(16,8,'binary',['unsigned'|['big']])}#
			  in  %% Line 259
			      call 'wxe_util':'cast'
				  (1509, _cor17)
	  ( <_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19,_cor18})
		  -| [{'function_name',{'setHighlightColours',3}}] )
	    -| ['compiler_generated'] )
	end
'getHighlightColourFg'/1 =
    %% Line 265
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 266
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 268
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 267
		      call 'wxe_util':'call'
			  (1510, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getHighlightColourFg',1}}] )
	    -| ['compiler_generated'] )
	end
'getHighlightColourBg'/1 =
    %% Line 273
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 274
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 276
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 275
		      call 'wxe_util':'call'
			  (1511, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getHighlightColourBg',1}}] )
	    -| ['compiler_generated'] )
	end
'setHolidayColours'/3 =
    %% Line 281
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor21},ColFg,ColBg>
	      when let <_cor4> =
		    %% Line 282
		    try
			let <_cor3> =
			    call 'erlang':'tuple_size'
				(ColFg)
			in  call 'erlang':'=:='
				(_cor3, 3)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor9> =
			%% Line 282
			try
			    let <_cor5> =
				call 'erlang':'tuple_size'
				    (ColFg)
			    in  let <_cor6> =
				    call 'erlang':'=:='
					(_cor5, 4)
				in  let <_cor7> =
					call 'erlang':'tuple_size'
					    (ColBg)
				    in  let <_cor8> =
					    call 'erlang':'=:='
						(_cor7, 3)
					in  call 'erlang':'and'
						(_cor6, _cor8)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  let <_cor11> =
			    %% Line 282
			    try
				let <_cor10> =
				    call 'erlang':'tuple_size'
					(ColBg)
				in  call 'erlang':'=:='
					(_cor10, 4)
			    of <Try> ->
				Try
			    catch <T,R> ->
				'false'
			in  let <_cor12> =
				%% Line 282
				call 'erlang':'or'
				    (_cor9, _cor11)
			    in  %% Line 282
				call 'erlang':'or'
				    (_cor4, _cor12) ->
	      do  %% Line 283
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor16> =
		      %% Line 285
		      call 'wxe_util':'colour_bin'
			  (ColFg)
		  in  let <_cor15> =
			  %% Line 285
			  call 'wxe_util':'colour_bin'
			      (ColBg)
		      in  let <_cor17> =
			      %% Line 285
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<_cor16>(16,8,'binary',['unsigned'|['big']]),
				#<_cor15>(16,8,'binary',['unsigned'|['big']])}#
			  in  %% Line 284
			      call 'wxe_util':'cast'
				  (1512, _cor17)
	  ( <_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19,_cor18})
		  -| [{'function_name',{'setHolidayColours',3}}] )
	    -| ['compiler_generated'] )
	end
'getHolidayColourFg'/1 =
    %% Line 290
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 291
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 293
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 292
		      call 'wxe_util':'call'
			  (1513, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getHolidayColourFg',1}}] )
	    -| ['compiler_generated'] )
	end
'getHolidayColourBg'/1 =
    %% Line 298
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 299
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 301
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 300
		      call 'wxe_util':'call'
			  (1514, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getHolidayColourBg',1}}] )
	    -| ['compiler_generated'] )
	end
'getAttr'/2 =
    %% Line 306
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Day>
	      when %% Line 307
		call 'erlang':'is_integer'
		    (Day) ->
	      do  %% Line 308
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 310
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Day>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 309
		      call 'wxe_util':'call'
			  (1515, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getAttr',2}}] )
	    -| ['compiler_generated'] )
	end
'setAttr'/3 =
    %% Line 315
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Day,{'wx_ref',AttrRef,AttrT,_cor12}>
	      when %% Line 316
		call 'erlang':'is_integer'
		    (Day) ->
	      do  %% Line 317
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 318
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (AttrT,
				       'wxCalendarDateAttr') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call AttrT:'parent_class'
				    ('wxCalendarDateAttr')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor7> =
			  %% Line 320
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Day>(32,1,'integer',['unsigned'|['native']]),
			    #<AttrRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 319
			  call 'wxe_util':'cast'
			      (1516, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setAttr',3}}] )
	    -| ['compiler_generated'] )
	end
'setHoliday'/2 =
    %% Line 325
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Day>
	      when %% Line 326
		call 'erlang':'is_integer'
		    (Day) ->
	      do  %% Line 327
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 329
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Day>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 328
		      call 'wxe_util':'cast'
			  (1517, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setHoliday',2}}] )
	    -| ['compiler_generated'] )
	end
'resetAttr'/2 =
    %% Line 334
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Day>
	      when %% Line 335
		call 'erlang':'is_integer'
		    (Day) ->
	      do  %% Line 336
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 338
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Day>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 337
		      call 'wxe_util':'cast'
			  (1518, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'resetAttr',2}}] )
	    -| ['compiler_generated'] )
	end
'hitTest'/2 =
    %% Line 346
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{PosX,PosY}>
	      when let <_cor2> =
		    %% Line 347
		    call 'erlang':'is_integer'
			(PosX)
		in  let <_cor3> =
			%% Line 347
			call 'erlang':'is_integer'
			    (PosY)
		    in  %% Line 347
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 348
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 350
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PosX>(32,1,'integer',['unsigned'|['native']]),
			#<PosY>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 349
		      call 'wxe_util':'call'
			  (1519, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'hitTest',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 354
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 355
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxCalendarCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxCalendarCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 356
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 357
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'setLabel'/2 =
    %% Line 360
    fun (_cor1,_cor0) ->
	call 'wxControl':'setLabel'
	    (_cor1, _cor0)
'getLabel'/1 =
    %% Line 362
    fun (_cor0) ->
	call 'wxControl':'getLabel'
	    (_cor0)
'warpPointer'/3 =
    %% Line 365
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 367
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 369
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 371
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 373
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 375
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 377
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 379
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 381
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 383
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 385
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 387
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 389
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 391
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 393
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 395
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 397
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 399
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 401
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 403
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 405
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 407
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 409
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 411
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 413
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 415
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 417
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 419
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 421
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 423
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 425
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 427
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 429
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 431
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 433
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 435
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 437
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 439
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 441
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 443
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 445
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 447
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 449
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 451
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 453
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 455
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 457
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 459
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 461
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 463
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 465
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 467
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 469
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 471
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 473
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 475
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 477
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 479
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 481
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 483
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 485
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 487
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 489
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 491
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 493
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 495
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 497
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 499
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 501
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 503
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 505
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 507
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 509
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 511
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 513
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 515
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 517
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 519
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 521
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 523
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 525
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 527
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 529
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 531
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 533
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 535
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 537
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 539
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 541
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 543
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 545
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 547
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 549
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 551
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 553
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 555
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 557
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 559
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 561
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 563
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 565
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 567
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 569
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 571
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 573
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 575
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 577
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 579
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 581
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 583
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 585
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 587
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 589
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 591
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 593
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 595
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 597
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 599
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 601
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 603
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 605
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 607
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 609
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 611
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 613
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 615
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 617
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 619
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 621
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 623
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 625
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 627
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 629
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 631
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 633
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 635
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 637
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 639
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 641
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 643
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 645
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 647
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 649
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 651
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 653
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 655
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 657
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 659
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 661
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 663
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 665
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 667
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 669
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 671
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 673
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 675
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 677
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 679
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 681
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 683
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 685
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 687
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 689
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 691
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 693
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 695
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 697
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 699
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 701
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 703
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 705
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 707
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 709
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 712
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 714
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 716
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 718
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 720
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxCalendarCtrl')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxCalendarCtrl', _cor0)
end