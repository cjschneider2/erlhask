module 'wxAuiNotebookEvent' ['allow'/1,
			     'getClientData'/1,
			     'getDragSource'/1,
			     'getExtraLong'/1,
			     'getId'/1,
			     'getInt'/1,
			     'getOldSelection'/1,
			     'getSelection'/1,
			     'getSkipped'/1,
			     'getString'/1,
			     'getTimestamp'/1,
			     'isAllowed'/1,
			     'isChecked'/1,
			     'isCommandEvent'/1,
			     'isSelection'/1,
			     'module_info'/0,
			     'module_info'/1,
			     'parent_class'/1,
			     'resumePropagation'/2,
			     'setDragSource'/2,
			     'setInt'/2,
			     'setOldSelection'/2,
			     'setSelection'/2,
			     'setString'/2,
			     'shouldPropagate'/1,
			     'skip'/1,
			     'skip'/2,
			     'stopPropagation'/1,
			     'veto'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 45
		'export_type' =
		    %% Line 45
		    [{'wxAuiNotebookEvent',0}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{'wxAuiNotebookEvent',{'remote_type',52,[{'atom',52,'wx'}|[{'atom',52,'wx_object'}|[[]]]]},[]}],
		%% Line 54
		'spec' =
		    %% Line 54
		    [{{'setSelection',2},[{'type',54,'bounded_fun',[{'type',54,'fun',[{'type',54,'product',[{'var',54,'This'}|[{'var',54,'S'}]]}|[{'atom',54,'ok'}]]}|[[{'type',55,'constraint',[{'atom',55,'is_subtype'}|[[{'var',55,'This'}|[{'type',55,'wxAuiNotebookEvent',[]}]]]]}|[{'type',55,'constraint',[{'atom',55,'is_subtype'}|[[{'var',55,'S'}|[{'type',55,'integer',[]}]]]]}]]]]}]}],
		%% Line 63
		'spec' =
		    %% Line 63
		    [{{'getSelection',1},[{'type',63,'bounded_fun',[{'type',63,'fun',[{'type',63,'product',[{'var',63,'This'}]}|[{'type',63,'integer',[]}]]}|[[{'type',64,'constraint',[{'atom',64,'is_subtype'}|[[{'var',64,'This'}|[{'type',64,'wxAuiNotebookEvent',[]}]]]]}]]]}]}],
		%% Line 71
		'spec' =
		    %% Line 71
		    [{{'setOldSelection',2},[{'type',71,'bounded_fun',[{'type',71,'fun',[{'type',71,'product',[{'var',71,'This'}|[{'var',71,'S'}]]}|[{'atom',71,'ok'}]]}|[[{'type',72,'constraint',[{'atom',72,'is_subtype'}|[[{'var',72,'This'}|[{'type',72,'wxAuiNotebookEvent',[]}]]]]}|[{'type',72,'constraint',[{'atom',72,'is_subtype'}|[[{'var',72,'S'}|[{'type',72,'integer',[]}]]]]}]]]]}]}],
		%% Line 80
		'spec' =
		    %% Line 80
		    [{{'getOldSelection',1},[{'type',80,'bounded_fun',[{'type',80,'fun',[{'type',80,'product',[{'var',80,'This'}]}|[{'type',80,'integer',[]}]]}|[[{'type',81,'constraint',[{'atom',81,'is_subtype'}|[[{'var',81,'This'}|[{'type',81,'wxAuiNotebookEvent',[]}]]]]}]]]}]}],
		%% Line 88
		'spec' =
		    %% Line 88
		    [{{'setDragSource',2},[{'type',88,'bounded_fun',[{'type',88,'fun',[{'type',88,'product',[{'var',88,'This'}|[{'var',88,'S'}]]}|[{'atom',88,'ok'}]]}|[[{'type',89,'constraint',[{'atom',89,'is_subtype'}|[[{'var',89,'This'}|[{'type',89,'wxAuiNotebookEvent',[]}]]]]}|[{'type',89,'constraint',[{'atom',89,'is_subtype'}|[[{'var',89,'S'}|[{'remote_type',89,[{'atom',89,'wxAuiNotebook'}|[{'atom',89,'wxAuiNotebook'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 97
		'spec' =
		    %% Line 97
		    [{{'getDragSource',1},[{'type',97,'bounded_fun',[{'type',97,'fun',[{'type',97,'product',[{'var',97,'This'}]}|[{'remote_type',97,[{'atom',97,'wxAuiNotebook'}|[{'atom',97,'wxAuiNotebook'}|[[]]]]}]]}|[[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'This'}|[{'type',98,'wxAuiNotebookEvent',[]}]]]]}]]]}]}]]
'parent_class'/1 =
    %% Line 47
    fun (_cor0) ->
	case _cor0 of
	  <'wxNotifyEvent'> when 'true' ->
	      'true'
	  %% Line 48
	  <'wxCommandEvent'> when 'true' ->
	      'true'
	  %% Line 49
	  <'wxEvent'> when 'true' ->
	      'true'
	  %% Line 50
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxAuiNotebookEvent'})
	end
'setSelection'/2 =
    %% Line 56
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},S>
	      when %% Line 57
		call 'erlang':'is_integer'
		    (S) ->
	      do  %% Line 58
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiNotebookEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiNotebookEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 60
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<S>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 59
		      call 'wxe_util':'cast'
			  (3503, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'getSelection'/1 =
    %% Line 65
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 66
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiNotebookEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiNotebookEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 68
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 67
		      call 'wxe_util':'call'
			  (3504, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSelection',1}}] )
	    -| ['compiler_generated'] )
	end
'setOldSelection'/2 =
    %% Line 73
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},S>
	      when %% Line 74
		call 'erlang':'is_integer'
		    (S) ->
	      do  %% Line 75
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiNotebookEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiNotebookEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 77
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<S>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 76
		      call 'wxe_util':'cast'
			  (3505, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setOldSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'getOldSelection'/1 =
    %% Line 82
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 83
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiNotebookEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiNotebookEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 85
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 84
		      call 'wxe_util':'call'
			  (3506, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getOldSelection',1}}] )
	    -| ['compiler_generated'] )
	end
'setDragSource'/2 =
    %% Line 90
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',SRef,ST,_cor10}> when 'true' ->
	      do  %% Line 91
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiNotebookEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiNotebookEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 92
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ST,
				       'wxAuiNotebook') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ST:'parent_class'
				    ('wxAuiNotebook')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 94
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<SRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 93
			  call 'wxe_util':'cast'
			      (3507, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setDragSource',2}}] )
	    -| ['compiler_generated'] )
	end
'getDragSource'/1 =
    %% Line 99
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 100
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiNotebookEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiNotebookEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 102
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 101
		      call 'wxe_util':'call'
			  (3508, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getDragSource',1}}] )
	    -| ['compiler_generated'] )
	end
'veto'/1 =
    %% Line 106
    fun (_cor0) ->
	call 'wxNotifyEvent':'veto'
	    (_cor0)
'isAllowed'/1 =
    %% Line 108
    fun (_cor0) ->
	call 'wxNotifyEvent':'isAllowed'
	    (_cor0)
'allow'/1 =
    %% Line 110
    fun (_cor0) ->
	call 'wxNotifyEvent':'allow'
	    (_cor0)
'setString'/2 =
    %% Line 113
    fun (_cor1,_cor0) ->
	call 'wxCommandEvent':'setString'
	    (_cor1, _cor0)
'setInt'/2 =
    %% Line 115
    fun (_cor1,_cor0) ->
	call 'wxCommandEvent':'setInt'
	    (_cor1, _cor0)
'isSelection'/1 =
    %% Line 117
    fun (_cor0) ->
	call 'wxCommandEvent':'isSelection'
	    (_cor0)
'isChecked'/1 =
    %% Line 119
    fun (_cor0) ->
	call 'wxCommandEvent':'isChecked'
	    (_cor0)
'getString'/1 =
    %% Line 121
    fun (_cor0) ->
	call 'wxCommandEvent':'getString'
	    (_cor0)
'getInt'/1 =
    %% Line 123
    fun (_cor0) ->
	call 'wxCommandEvent':'getInt'
	    (_cor0)
'getExtraLong'/1 =
    %% Line 125
    fun (_cor0) ->
	call 'wxCommandEvent':'getExtraLong'
	    (_cor0)
'getClientData'/1 =
    %% Line 127
    fun (_cor0) ->
	call 'wxCommandEvent':'getClientData'
	    (_cor0)
'stopPropagation'/1 =
    %% Line 130
    fun (_cor0) ->
	call 'wxEvent':'stopPropagation'
	    (_cor0)
'skip'/2 =
    %% Line 132
    fun (_cor1,_cor0) ->
	call 'wxEvent':'skip'
	    (_cor1, _cor0)
'skip'/1 =
    %% Line 134
    fun (_cor0) ->
	call 'wxEvent':'skip'
	    (_cor0)
'shouldPropagate'/1 =
    %% Line 136
    fun (_cor0) ->
	call 'wxEvent':'shouldPropagate'
	    (_cor0)
'resumePropagation'/2 =
    %% Line 138
    fun (_cor1,_cor0) ->
	call 'wxEvent':'resumePropagation'
	    (_cor1, _cor0)
'isCommandEvent'/1 =
    %% Line 140
    fun (_cor0) ->
	call 'wxEvent':'isCommandEvent'
	    (_cor0)
'getTimestamp'/1 =
    %% Line 142
    fun (_cor0) ->
	call 'wxEvent':'getTimestamp'
	    (_cor0)
'getSkipped'/1 =
    %% Line 144
    fun (_cor0) ->
	call 'wxEvent':'getSkipped'
	    (_cor0)
'getId'/1 =
    %% Line 146
    fun (_cor0) ->
	call 'wxEvent':'getId'
	    (_cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxAuiNotebookEvent')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxAuiNotebookEvent', _cor0)
end