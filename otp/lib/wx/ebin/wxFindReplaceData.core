module 'wxFindReplaceData' ['destroy'/1,
			    'getFindString'/1,
			    'getFlags'/1,
			    'getReplaceString'/1,
			    'module_info'/0,
			    'module_info'/1,
			    'new'/0,
			    'new'/1,
			    'parent_class'/1,
			    'setFindString'/2,
			    'setFlags'/2,
			    'setReplaceString'/2]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 33
		'export_type' =
		    %% Line 33
		    [{'wxFindReplaceData',0}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{'wxFindReplaceData',{'remote_type',37,[{'atom',37,'wx'}|[{'atom',37,'wx_object'}|[[]]]]},[]}],
		%% Line 39
		'spec' =
		    %% Line 39
		    [{{'new',0},[{'type',39,'fun',[{'type',39,'product',[]}|[{'type',39,'wxFindReplaceData',[]}]]}]}],
		%% Line 45
		'spec' =
		    %% Line 45
		    [{{'new',1},[{'type',45,'bounded_fun',[{'type',45,'fun',[{'type',45,'product',[{'var',45,'Flags'}]}|[{'type',45,'wxFindReplaceData',[]}]]}|[[{'type',46,'constraint',[{'atom',46,'is_subtype'}|[[{'var',46,'Flags'}|[{'type',46,'integer',[]}]]]]}]]]}]}],
		%% Line 53
		'spec' =
		    %% Line 53
		    [{{'getFindString',1},[{'type',53,'bounded_fun',[{'type',53,'fun',[{'type',53,'product',[{'var',53,'This'}]}|[{'remote_type',53,[{'atom',53,'unicode'}|[{'atom',53,'charlist'}|[[]]]]}]]}|[[{'type',54,'constraint',[{'atom',54,'is_subtype'}|[[{'var',54,'This'}|[{'type',54,'wxFindReplaceData',[]}]]]]}]]]}]}],
		%% Line 61
		'spec' =
		    %% Line 61
		    [{{'getReplaceString',1},[{'type',61,'bounded_fun',[{'type',61,'fun',[{'type',61,'product',[{'var',61,'This'}]}|[{'remote_type',61,[{'atom',61,'unicode'}|[{'atom',61,'charlist'}|[[]]]]}]]}|[[{'type',62,'constraint',[{'atom',62,'is_subtype'}|[[{'var',62,'This'}|[{'type',62,'wxFindReplaceData',[]}]]]]}]]]}]}],
		%% Line 69
		'spec' =
		    %% Line 69
		    [{{'getFlags',1},[{'type',69,'bounded_fun',[{'type',69,'fun',[{'type',69,'product',[{'var',69,'This'}]}|[{'type',69,'integer',[]}]]}|[[{'type',70,'constraint',[{'atom',70,'is_subtype'}|[[{'var',70,'This'}|[{'type',70,'wxFindReplaceData',[]}]]]]}]]]}]}],
		%% Line 77
		'spec' =
		    %% Line 77
		    [{{'setFlags',2},[{'type',77,'bounded_fun',[{'type',77,'fun',[{'type',77,'product',[{'var',77,'This'}|[{'var',77,'Flags'}]]}|[{'atom',77,'ok'}]]}|[[{'type',78,'constraint',[{'atom',78,'is_subtype'}|[[{'var',78,'This'}|[{'type',78,'wxFindReplaceData',[]}]]]]}|[{'type',78,'constraint',[{'atom',78,'is_subtype'}|[[{'var',78,'Flags'}|[{'type',78,'integer',[]}]]]]}]]]]}]}],
		%% Line 86
		'spec' =
		    %% Line 86
		    [{{'setFindString',2},[{'type',86,'bounded_fun',[{'type',86,'fun',[{'type',86,'product',[{'var',86,'This'}|[{'var',86,'Str'}]]}|[{'atom',86,'ok'}]]}|[[{'type',87,'constraint',[{'atom',87,'is_subtype'}|[[{'var',87,'This'}|[{'type',87,'wxFindReplaceData',[]}]]]]}|[{'type',87,'constraint',[{'atom',87,'is_subtype'}|[[{'var',87,'Str'}|[{'remote_type',87,[{'atom',87,'unicode'}|[{'atom',87,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 96
		'spec' =
		    %% Line 96
		    [{{'setReplaceString',2},[{'type',96,'bounded_fun',[{'type',96,'fun',[{'type',96,'product',[{'var',96,'This'}|[{'var',96,'Str'}]]}|[{'atom',96,'ok'}]]}|[[{'type',97,'constraint',[{'atom',97,'is_subtype'}|[[{'var',97,'This'}|[{'type',97,'wxFindReplaceData',[]}]]]]}|[{'type',97,'constraint',[{'atom',97,'is_subtype'}|[[{'var',97,'Str'}|[{'remote_type',97,[{'atom',97,'unicode'}|[{'atom',97,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 106
		'spec' =
		    %% Line 106
		    [{{'destroy',1},[{'type',106,'fun',[{'type',106,'product',[{'ann_type',106,[{'var',106,'This'}|[{'type',106,'wxFindReplaceData',[]}]]}]}|[{'atom',106,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 35
    fun (_cor0) ->
	call 'erlang':'error'
	    ({'badtype','wxFindReplaceData'})
'new'/0 =
    %% Line 40
    fun () ->
	%% Line 41
	call 'wxe_util':'construct'
	    (2302, %% Line 42
		   #{}#)
'new'/1 =
    %% Line 47
    fun (_cor0) ->
	case _cor0 of
	  <Flags>
	      when %% Line 48
		call 'erlang':'is_integer'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 50
		  #{#<Flags>(32,1,'integer',['unsigned'|['native']])}#
	      in  %% Line 49
		  call 'wxe_util':'construct'
		      (2303, _cor1)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'getFindString'/1 =
    %% Line 55
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 56
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFindReplaceData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFindReplaceData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 58
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 57
		      call 'wxe_util':'call'
			  (2304, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getFindString',1}}] )
	    -| ['compiler_generated'] )
	end
'getReplaceString'/1 =
    %% Line 63
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 64
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFindReplaceData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFindReplaceData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 66
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 65
		      call 'wxe_util':'call'
			  (2305, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getReplaceString',1}}] )
	    -| ['compiler_generated'] )
	end
'getFlags'/1 =
    %% Line 71
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 72
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFindReplaceData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFindReplaceData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 74
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 73
		      call 'wxe_util':'call'
			  (2306, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getFlags',1}}] )
	    -| ['compiler_generated'] )
	end
'setFlags'/2 =
    %% Line 79
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Flags>
	      when %% Line 80
		call 'erlang':'is_integer'
		    (Flags) ->
	      do  %% Line 81
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFindReplaceData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFindReplaceData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 83
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Flags>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 82
		      call 'wxe_util':'cast'
			  (2307, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setFlags',2}}] )
	    -| ['compiler_generated'] )
	end
'setFindString'/2 =
    %% Line 88
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Str>
	      when %% Line 89
		call 'erlang':'is_list'
		    (Str) ->
	      do  %% Line 90
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFindReplaceData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFindReplaceData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Str_UC> =
		      %% Line 91
		      call 'unicode':'characters_to_binary'
			  ([Str|[0]])
		  in  let <_cor10> =
			  %% Line 93
			  call 'erlang':'byte_size'
			      (Str_UC)
		      in  let <_cor5> =
			      %% Line 93
			      call 'erlang':'byte_size'
				  (Str_UC)
			  in  let <_cor6> =
				  %% Line 93
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 93
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 93
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 93
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 93
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Str_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 92
						  call 'wxe_util':'cast'
						      (2308, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setFindString',2}}] )
	    -| ['compiler_generated'] )
	end
'setReplaceString'/2 =
    %% Line 98
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Str>
	      when %% Line 99
		call 'erlang':'is_list'
		    (Str) ->
	      do  %% Line 100
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxFindReplaceData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxFindReplaceData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Str_UC> =
		      %% Line 101
		      call 'unicode':'characters_to_binary'
			  ([Str|[0]])
		  in  let <_cor10> =
			  %% Line 103
			  call 'erlang':'byte_size'
			      (Str_UC)
		      in  let <_cor5> =
			      %% Line 103
			      call 'erlang':'byte_size'
				  (Str_UC)
			  in  let <_cor6> =
				  %% Line 103
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 103
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 103
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 103
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 103
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Str_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 102
						  call 'wxe_util':'cast'
						      (2309, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setReplaceString',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 107
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 108
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxFindReplaceData') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxFindReplaceData')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 109
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 110
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxFindReplaceData')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxFindReplaceData', _cor0)
end