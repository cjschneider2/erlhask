module 'wxAuiPaneInfo' ['bestSize'/2,
			'bestSize'/3,
			'bottom'/1,
			'bottomDockable'/1,
			'bottomDockable'/2,
			'caption'/2,
			'captionVisible'/1,
			'captionVisible'/2,
			'centre'/1,
			'centrePane'/1,
			'closeButton'/1,
			'closeButton'/2,
			'defaultPane'/1,
			'destroy'/1,
			'destroyOnClose'/1,
			'destroyOnClose'/2,
			'direction'/2,
			'dock'/1,
			'dockable'/1,
			'dockable'/2,
			'fixed'/1,
			'float'/1,
			'floatable'/1,
			'floatable'/2,
			'floatingPosition'/2,
			'floatingPosition'/3,
			'floatingSize'/2,
			'floatingSize'/3,
			'gripper'/1,
			'gripper'/2,
			'gripperTop'/1,
			'gripperTop'/2,
			'hasBorder'/1,
			'hasCaption'/1,
			'hasCloseButton'/1,
			'hasFlag'/2,
			'hasGripper'/1,
			'hasGripperTop'/1,
			'hasMaximizeButton'/1,
			'hasMinimizeButton'/1,
			'hasPinButton'/1,
			'hide'/1,
			'isBottomDockable'/1,
			'isDocked'/1,
			'isFixed'/1,
			'isFloatable'/1,
			'isFloating'/1,
			'isLeftDockable'/1,
			'isMovable'/1,
			'isOk'/1,
			'isResizable'/1,
			'isRightDockable'/1,
			'isShown'/1,
			'isToolbar'/1,
			'isTopDockable'/1,
			'layer'/2,
			'left'/1,
			'leftDockable'/1,
			'leftDockable'/2,
			'maxSize'/2,
			'maxSize'/3,
			'maximizeButton'/1,
			'maximizeButton'/2,
			'minSize'/2,
			'minSize'/3,
			'minimizeButton'/1,
			'minimizeButton'/2,
			'module_info'/0,
			'module_info'/1,
			'movable'/1,
			'movable'/2,
			'name'/2,
			'new'/0,
			'new'/1,
			'paneBorder'/1,
			'paneBorder'/2,
			'parent_class'/1,
			'pinButton'/1,
			'pinButton'/2,
			'position'/2,
			'resizable'/1,
			'resizable'/2,
			'right'/1,
			'rightDockable'/1,
			'rightDockable'/2,
			'row'/2,
			'safeSet'/2,
			'setFlag'/3,
			'show'/1,
			'show'/2,
			'toolbarPane'/1,
			'top'/1,
			'topDockable'/1,
			'topDockable'/2,
			'window'/2]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 47
		'export_type' =
		    %% Line 47
		    [{'wxAuiPaneInfo',0}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{'wxAuiPaneInfo',{'remote_type',51,[{'atom',51,'wx'}|[{'atom',51,'wx_object'}|[[]]]]},[]}],
		%% Line 53
		'spec' =
		    %% Line 53
		    [{{'new',0},[{'type',53,'fun',[{'type',53,'product',[]}|[{'type',53,'wxAuiPaneInfo',[]}]]}]}],
		%% Line 59
		'spec' =
		    %% Line 59
		    [{{'new',1},[{'type',59,'bounded_fun',[{'type',59,'fun',[{'type',59,'product',[{'var',59,'C'}]}|[{'type',59,'wxAuiPaneInfo',[]}]]}|[[{'type',60,'constraint',[{'atom',60,'is_subtype'}|[[{'var',60,'C'}|[{'type',60,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 67
		'spec' =
		    %% Line 67
		    [{{'bestSize',2},[{'type',67,'bounded_fun',[{'type',67,'fun',[{'type',67,'product',[{'var',67,'This'}|[{'var',67,'Size'}]]}|[{'type',67,'wxAuiPaneInfo',[]}]]}|[[{'type',68,'constraint',[{'atom',68,'is_subtype'}|[[{'var',68,'This'}|[{'type',68,'wxAuiPaneInfo',[]}]]]]}|[{'type',68,'constraint',[{'atom',68,'is_subtype'}|[[{'var',68,'Size'}|[{'type',68,'tuple',[{'ann_type',68,[{'var',68,'W'}|[{'type',68,'integer',[]}]]}|[{'ann_type',68,[{'var',68,'H'}|[{'type',68,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 76
		'spec' =
		    %% Line 76
		    [{{'bestSize',3},[{'type',76,'bounded_fun',[{'type',76,'fun',[{'type',76,'product',[{'var',76,'This'}|[{'var',76,'X'}|[{'var',76,'Y'}]]]}|[{'type',76,'wxAuiPaneInfo',[]}]]}|[[{'type',77,'constraint',[{'atom',77,'is_subtype'}|[[{'var',77,'This'}|[{'type',77,'wxAuiPaneInfo',[]}]]]]}|[{'type',77,'constraint',[{'atom',77,'is_subtype'}|[[{'var',77,'X'}|[{'type',77,'integer',[]}]]]]}|[{'type',77,'constraint',[{'atom',77,'is_subtype'}|[[{'var',77,'Y'}|[{'type',77,'integer',[]}]]]]}]]]]]}]}],
		%% Line 85
		'spec' =
		    %% Line 85
		    [{{'bottom',1},[{'type',85,'bounded_fun',[{'type',85,'fun',[{'type',85,'product',[{'var',85,'This'}]}|[{'type',85,'wxAuiPaneInfo',[]}]]}|[[{'type',86,'constraint',[{'atom',86,'is_subtype'}|[[{'var',86,'This'}|[{'type',86,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 93
		'spec' =
		    %% Line 93
		    [{{'bottomDockable',1},[{'type',93,'bounded_fun',[{'type',93,'fun',[{'type',93,'product',[{'var',93,'This'}]}|[{'type',93,'wxAuiPaneInfo',[]}]]}|[[{'type',94,'constraint',[{'atom',94,'is_subtype'}|[[{'var',94,'This'}|[{'type',94,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 101
		'spec' =
		    %% Line 101
		    [{{'bottomDockable',2},[{'type',101,'bounded_fun',[{'type',101,'fun',[{'type',101,'product',[{'var',101,'This'}|[{'type',101,'list',[{'var',101,'Option'}]}]]}|[{'type',101,'wxAuiPaneInfo',[]}]]}|[[{'type',102,'constraint',[{'atom',102,'is_subtype'}|[[{'var',102,'This'}|[{'type',102,'wxAuiPaneInfo',[]}]]]]}|[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'Option'}|[{'type',103,'tuple',[{'atom',103,'b'}|[{'type',103,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 114
		'spec' =
		    %% Line 114
		    [{{'caption',2},[{'type',114,'bounded_fun',[{'type',114,'fun',[{'type',114,'product',[{'var',114,'This'}|[{'var',114,'C'}]]}|[{'type',114,'wxAuiPaneInfo',[]}]]}|[[{'type',115,'constraint',[{'atom',115,'is_subtype'}|[[{'var',115,'This'}|[{'type',115,'wxAuiPaneInfo',[]}]]]]}|[{'type',115,'constraint',[{'atom',115,'is_subtype'}|[[{'var',115,'C'}|[{'remote_type',115,[{'atom',115,'unicode'}|[{'atom',115,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 124
		'spec' =
		    %% Line 124
		    [{{'captionVisible',1},[{'type',124,'bounded_fun',[{'type',124,'fun',[{'type',124,'product',[{'var',124,'This'}]}|[{'type',124,'wxAuiPaneInfo',[]}]]}|[[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'This'}|[{'type',125,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 132
		'spec' =
		    %% Line 132
		    [{{'captionVisible',2},[{'type',132,'bounded_fun',[{'type',132,'fun',[{'type',132,'product',[{'var',132,'This'}|[{'type',132,'list',[{'var',132,'Option'}]}]]}|[{'type',132,'wxAuiPaneInfo',[]}]]}|[[{'type',133,'constraint',[{'atom',133,'is_subtype'}|[[{'var',133,'This'}|[{'type',133,'wxAuiPaneInfo',[]}]]]]}|[{'type',134,'constraint',[{'atom',134,'is_subtype'}|[[{'var',134,'Option'}|[{'type',134,'tuple',[{'atom',134,'visible'}|[{'type',134,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 145
		'spec' =
		    %% Line 145
		    [{{'centre',1},[{'type',145,'bounded_fun',[{'type',145,'fun',[{'type',145,'product',[{'var',145,'This'}]}|[{'type',145,'wxAuiPaneInfo',[]}]]}|[[{'type',146,'constraint',[{'atom',146,'is_subtype'}|[[{'var',146,'This'}|[{'type',146,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 153
		'spec' =
		    %% Line 153
		    [{{'centrePane',1},[{'type',153,'bounded_fun',[{'type',153,'fun',[{'type',153,'product',[{'var',153,'This'}]}|[{'type',153,'wxAuiPaneInfo',[]}]]}|[[{'type',154,'constraint',[{'atom',154,'is_subtype'}|[[{'var',154,'This'}|[{'type',154,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 161
		'spec' =
		    %% Line 161
		    [{{'closeButton',1},[{'type',161,'bounded_fun',[{'type',161,'fun',[{'type',161,'product',[{'var',161,'This'}]}|[{'type',161,'wxAuiPaneInfo',[]}]]}|[[{'type',162,'constraint',[{'atom',162,'is_subtype'}|[[{'var',162,'This'}|[{'type',162,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 169
		'spec' =
		    %% Line 169
		    [{{'closeButton',2},[{'type',169,'bounded_fun',[{'type',169,'fun',[{'type',169,'product',[{'var',169,'This'}|[{'type',169,'list',[{'var',169,'Option'}]}]]}|[{'type',169,'wxAuiPaneInfo',[]}]]}|[[{'type',170,'constraint',[{'atom',170,'is_subtype'}|[[{'var',170,'This'}|[{'type',170,'wxAuiPaneInfo',[]}]]]]}|[{'type',171,'constraint',[{'atom',171,'is_subtype'}|[[{'var',171,'Option'}|[{'type',171,'tuple',[{'atom',171,'visible'}|[{'type',171,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 182
		'spec' =
		    %% Line 182
		    [{{'defaultPane',1},[{'type',182,'bounded_fun',[{'type',182,'fun',[{'type',182,'product',[{'var',182,'This'}]}|[{'type',182,'wxAuiPaneInfo',[]}]]}|[[{'type',183,'constraint',[{'atom',183,'is_subtype'}|[[{'var',183,'This'}|[{'type',183,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 190
		'spec' =
		    %% Line 190
		    [{{'destroyOnClose',1},[{'type',190,'bounded_fun',[{'type',190,'fun',[{'type',190,'product',[{'var',190,'This'}]}|[{'type',190,'wxAuiPaneInfo',[]}]]}|[[{'type',191,'constraint',[{'atom',191,'is_subtype'}|[[{'var',191,'This'}|[{'type',191,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 198
		'spec' =
		    %% Line 198
		    [{{'destroyOnClose',2},[{'type',198,'bounded_fun',[{'type',198,'fun',[{'type',198,'product',[{'var',198,'This'}|[{'type',198,'list',[{'var',198,'Option'}]}]]}|[{'type',198,'wxAuiPaneInfo',[]}]]}|[[{'type',199,'constraint',[{'atom',199,'is_subtype'}|[[{'var',199,'This'}|[{'type',199,'wxAuiPaneInfo',[]}]]]]}|[{'type',200,'constraint',[{'atom',200,'is_subtype'}|[[{'var',200,'Option'}|[{'type',200,'tuple',[{'atom',200,'b'}|[{'type',200,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 211
		'spec' =
		    %% Line 211
		    [{{'direction',2},[{'type',211,'bounded_fun',[{'type',211,'fun',[{'type',211,'product',[{'var',211,'This'}|[{'var',211,'Direction'}]]}|[{'type',211,'wxAuiPaneInfo',[]}]]}|[[{'type',212,'constraint',[{'atom',212,'is_subtype'}|[[{'var',212,'This'}|[{'type',212,'wxAuiPaneInfo',[]}]]]]}|[{'type',212,'constraint',[{'atom',212,'is_subtype'}|[[{'var',212,'Direction'}|[{'type',212,'integer',[]}]]]]}]]]]}]}],
		%% Line 220
		'spec' =
		    %% Line 220
		    [{{'dock',1},[{'type',220,'bounded_fun',[{'type',220,'fun',[{'type',220,'product',[{'var',220,'This'}]}|[{'type',220,'wxAuiPaneInfo',[]}]]}|[[{'type',221,'constraint',[{'atom',221,'is_subtype'}|[[{'var',221,'This'}|[{'type',221,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 228
		'spec' =
		    %% Line 228
		    [{{'dockable',1},[{'type',228,'bounded_fun',[{'type',228,'fun',[{'type',228,'product',[{'var',228,'This'}]}|[{'type',228,'wxAuiPaneInfo',[]}]]}|[[{'type',229,'constraint',[{'atom',229,'is_subtype'}|[[{'var',229,'This'}|[{'type',229,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 236
		'spec' =
		    %% Line 236
		    [{{'dockable',2},[{'type',236,'bounded_fun',[{'type',236,'fun',[{'type',236,'product',[{'var',236,'This'}|[{'type',236,'list',[{'var',236,'Option'}]}]]}|[{'type',236,'wxAuiPaneInfo',[]}]]}|[[{'type',237,'constraint',[{'atom',237,'is_subtype'}|[[{'var',237,'This'}|[{'type',237,'wxAuiPaneInfo',[]}]]]]}|[{'type',238,'constraint',[{'atom',238,'is_subtype'}|[[{'var',238,'Option'}|[{'type',238,'tuple',[{'atom',238,'b'}|[{'type',238,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 249
		'spec' =
		    %% Line 249
		    [{{'fixed',1},[{'type',249,'bounded_fun',[{'type',249,'fun',[{'type',249,'product',[{'var',249,'This'}]}|[{'type',249,'wxAuiPaneInfo',[]}]]}|[[{'type',250,'constraint',[{'atom',250,'is_subtype'}|[[{'var',250,'This'}|[{'type',250,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 257
		'spec' =
		    %% Line 257
		    [{{'float',1},[{'type',257,'bounded_fun',[{'type',257,'fun',[{'type',257,'product',[{'var',257,'This'}]}|[{'type',257,'wxAuiPaneInfo',[]}]]}|[[{'type',258,'constraint',[{'atom',258,'is_subtype'}|[[{'var',258,'This'}|[{'type',258,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 265
		'spec' =
		    %% Line 265
		    [{{'floatable',1},[{'type',265,'bounded_fun',[{'type',265,'fun',[{'type',265,'product',[{'var',265,'This'}]}|[{'type',265,'wxAuiPaneInfo',[]}]]}|[[{'type',266,'constraint',[{'atom',266,'is_subtype'}|[[{'var',266,'This'}|[{'type',266,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 273
		'spec' =
		    %% Line 273
		    [{{'floatable',2},[{'type',273,'bounded_fun',[{'type',273,'fun',[{'type',273,'product',[{'var',273,'This'}|[{'type',273,'list',[{'var',273,'Option'}]}]]}|[{'type',273,'wxAuiPaneInfo',[]}]]}|[[{'type',274,'constraint',[{'atom',274,'is_subtype'}|[[{'var',274,'This'}|[{'type',274,'wxAuiPaneInfo',[]}]]]]}|[{'type',275,'constraint',[{'atom',275,'is_subtype'}|[[{'var',275,'Option'}|[{'type',275,'tuple',[{'atom',275,'b'}|[{'type',275,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 286
		'spec' =
		    %% Line 286
		    [{{'floatingPosition',2},[{'type',286,'bounded_fun',[{'type',286,'fun',[{'type',286,'product',[{'var',286,'This'}|[{'var',286,'Pos'}]]}|[{'type',286,'wxAuiPaneInfo',[]}]]}|[[{'type',287,'constraint',[{'atom',287,'is_subtype'}|[[{'var',287,'This'}|[{'type',287,'wxAuiPaneInfo',[]}]]]]}|[{'type',287,'constraint',[{'atom',287,'is_subtype'}|[[{'var',287,'Pos'}|[{'type',287,'tuple',[{'ann_type',287,[{'var',287,'X'}|[{'type',287,'integer',[]}]]}|[{'ann_type',287,[{'var',287,'Y'}|[{'type',287,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 295
		'spec' =
		    %% Line 295
		    [{{'floatingPosition',3},[{'type',295,'bounded_fun',[{'type',295,'fun',[{'type',295,'product',[{'var',295,'This'}|[{'var',295,'X'}|[{'var',295,'Y'}]]]}|[{'type',295,'wxAuiPaneInfo',[]}]]}|[[{'type',296,'constraint',[{'atom',296,'is_subtype'}|[[{'var',296,'This'}|[{'type',296,'wxAuiPaneInfo',[]}]]]]}|[{'type',296,'constraint',[{'atom',296,'is_subtype'}|[[{'var',296,'X'}|[{'type',296,'integer',[]}]]]]}|[{'type',296,'constraint',[{'atom',296,'is_subtype'}|[[{'var',296,'Y'}|[{'type',296,'integer',[]}]]]]}]]]]]}]}],
		%% Line 304
		'spec' =
		    %% Line 304
		    [{{'floatingSize',2},[{'type',304,'bounded_fun',[{'type',304,'fun',[{'type',304,'product',[{'var',304,'This'}|[{'var',304,'Size'}]]}|[{'type',304,'wxAuiPaneInfo',[]}]]}|[[{'type',305,'constraint',[{'atom',305,'is_subtype'}|[[{'var',305,'This'}|[{'type',305,'wxAuiPaneInfo',[]}]]]]}|[{'type',305,'constraint',[{'atom',305,'is_subtype'}|[[{'var',305,'Size'}|[{'type',305,'tuple',[{'ann_type',305,[{'var',305,'W'}|[{'type',305,'integer',[]}]]}|[{'ann_type',305,[{'var',305,'H'}|[{'type',305,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 313
		'spec' =
		    %% Line 313
		    [{{'floatingSize',3},[{'type',313,'bounded_fun',[{'type',313,'fun',[{'type',313,'product',[{'var',313,'This'}|[{'var',313,'X'}|[{'var',313,'Y'}]]]}|[{'type',313,'wxAuiPaneInfo',[]}]]}|[[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'This'}|[{'type',314,'wxAuiPaneInfo',[]}]]]]}|[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'X'}|[{'type',314,'integer',[]}]]]]}|[{'type',314,'constraint',[{'atom',314,'is_subtype'}|[[{'var',314,'Y'}|[{'type',314,'integer',[]}]]]]}]]]]]}]}],
		%% Line 322
		'spec' =
		    %% Line 322
		    [{{'gripper',1},[{'type',322,'bounded_fun',[{'type',322,'fun',[{'type',322,'product',[{'var',322,'This'}]}|[{'type',322,'wxAuiPaneInfo',[]}]]}|[[{'type',323,'constraint',[{'atom',323,'is_subtype'}|[[{'var',323,'This'}|[{'type',323,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 330
		'spec' =
		    %% Line 330
		    [{{'gripper',2},[{'type',330,'bounded_fun',[{'type',330,'fun',[{'type',330,'product',[{'var',330,'This'}|[{'type',330,'list',[{'var',330,'Option'}]}]]}|[{'type',330,'wxAuiPaneInfo',[]}]]}|[[{'type',331,'constraint',[{'atom',331,'is_subtype'}|[[{'var',331,'This'}|[{'type',331,'wxAuiPaneInfo',[]}]]]]}|[{'type',332,'constraint',[{'atom',332,'is_subtype'}|[[{'var',332,'Option'}|[{'type',332,'tuple',[{'atom',332,'visible'}|[{'type',332,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 343
		'spec' =
		    %% Line 343
		    [{{'gripperTop',1},[{'type',343,'bounded_fun',[{'type',343,'fun',[{'type',343,'product',[{'var',343,'This'}]}|[{'type',343,'wxAuiPaneInfo',[]}]]}|[[{'type',344,'constraint',[{'atom',344,'is_subtype'}|[[{'var',344,'This'}|[{'type',344,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 351
		'spec' =
		    %% Line 351
		    [{{'gripperTop',2},[{'type',351,'bounded_fun',[{'type',351,'fun',[{'type',351,'product',[{'var',351,'This'}|[{'type',351,'list',[{'var',351,'Option'}]}]]}|[{'type',351,'wxAuiPaneInfo',[]}]]}|[[{'type',352,'constraint',[{'atom',352,'is_subtype'}|[[{'var',352,'This'}|[{'type',352,'wxAuiPaneInfo',[]}]]]]}|[{'type',353,'constraint',[{'atom',353,'is_subtype'}|[[{'var',353,'Option'}|[{'type',353,'tuple',[{'atom',353,'attop'}|[{'type',353,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 364
		'spec' =
		    %% Line 364
		    [{{'hasBorder',1},[{'type',364,'bounded_fun',[{'type',364,'fun',[{'type',364,'product',[{'var',364,'This'}]}|[{'type',364,'boolean',[]}]]}|[[{'type',365,'constraint',[{'atom',365,'is_subtype'}|[[{'var',365,'This'}|[{'type',365,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 372
		'spec' =
		    %% Line 372
		    [{{'hasCaption',1},[{'type',372,'bounded_fun',[{'type',372,'fun',[{'type',372,'product',[{'var',372,'This'}]}|[{'type',372,'boolean',[]}]]}|[[{'type',373,'constraint',[{'atom',373,'is_subtype'}|[[{'var',373,'This'}|[{'type',373,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 380
		'spec' =
		    %% Line 380
		    [{{'hasCloseButton',1},[{'type',380,'bounded_fun',[{'type',380,'fun',[{'type',380,'product',[{'var',380,'This'}]}|[{'type',380,'boolean',[]}]]}|[[{'type',381,'constraint',[{'atom',381,'is_subtype'}|[[{'var',381,'This'}|[{'type',381,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 388
		'spec' =
		    %% Line 388
		    [{{'hasFlag',2},[{'type',388,'bounded_fun',[{'type',388,'fun',[{'type',388,'product',[{'var',388,'This'}|[{'var',388,'Flag'}]]}|[{'type',388,'boolean',[]}]]}|[[{'type',389,'constraint',[{'atom',389,'is_subtype'}|[[{'var',389,'This'}|[{'type',389,'wxAuiPaneInfo',[]}]]]]}|[{'type',389,'constraint',[{'atom',389,'is_subtype'}|[[{'var',389,'Flag'}|[{'type',389,'integer',[]}]]]]}]]]]}]}],
		%% Line 397
		'spec' =
		    %% Line 397
		    [{{'hasGripper',1},[{'type',397,'bounded_fun',[{'type',397,'fun',[{'type',397,'product',[{'var',397,'This'}]}|[{'type',397,'boolean',[]}]]}|[[{'type',398,'constraint',[{'atom',398,'is_subtype'}|[[{'var',398,'This'}|[{'type',398,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 405
		'spec' =
		    %% Line 405
		    [{{'hasGripperTop',1},[{'type',405,'bounded_fun',[{'type',405,'fun',[{'type',405,'product',[{'var',405,'This'}]}|[{'type',405,'boolean',[]}]]}|[[{'type',406,'constraint',[{'atom',406,'is_subtype'}|[[{'var',406,'This'}|[{'type',406,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 413
		'spec' =
		    %% Line 413
		    [{{'hasMaximizeButton',1},[{'type',413,'bounded_fun',[{'type',413,'fun',[{'type',413,'product',[{'var',413,'This'}]}|[{'type',413,'boolean',[]}]]}|[[{'type',414,'constraint',[{'atom',414,'is_subtype'}|[[{'var',414,'This'}|[{'type',414,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 421
		'spec' =
		    %% Line 421
		    [{{'hasMinimizeButton',1},[{'type',421,'bounded_fun',[{'type',421,'fun',[{'type',421,'product',[{'var',421,'This'}]}|[{'type',421,'boolean',[]}]]}|[[{'type',422,'constraint',[{'atom',422,'is_subtype'}|[[{'var',422,'This'}|[{'type',422,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 429
		'spec' =
		    %% Line 429
		    [{{'hasPinButton',1},[{'type',429,'bounded_fun',[{'type',429,'fun',[{'type',429,'product',[{'var',429,'This'}]}|[{'type',429,'boolean',[]}]]}|[[{'type',430,'constraint',[{'atom',430,'is_subtype'}|[[{'var',430,'This'}|[{'type',430,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 437
		'spec' =
		    %% Line 437
		    [{{'hide',1},[{'type',437,'bounded_fun',[{'type',437,'fun',[{'type',437,'product',[{'var',437,'This'}]}|[{'type',437,'wxAuiPaneInfo',[]}]]}|[[{'type',438,'constraint',[{'atom',438,'is_subtype'}|[[{'var',438,'This'}|[{'type',438,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 445
		'spec' =
		    %% Line 445
		    [{{'isBottomDockable',1},[{'type',445,'bounded_fun',[{'type',445,'fun',[{'type',445,'product',[{'var',445,'This'}]}|[{'type',445,'boolean',[]}]]}|[[{'type',446,'constraint',[{'atom',446,'is_subtype'}|[[{'var',446,'This'}|[{'type',446,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 453
		'spec' =
		    %% Line 453
		    [{{'isDocked',1},[{'type',453,'bounded_fun',[{'type',453,'fun',[{'type',453,'product',[{'var',453,'This'}]}|[{'type',453,'boolean',[]}]]}|[[{'type',454,'constraint',[{'atom',454,'is_subtype'}|[[{'var',454,'This'}|[{'type',454,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 461
		'spec' =
		    %% Line 461
		    [{{'isFixed',1},[{'type',461,'bounded_fun',[{'type',461,'fun',[{'type',461,'product',[{'var',461,'This'}]}|[{'type',461,'boolean',[]}]]}|[[{'type',462,'constraint',[{'atom',462,'is_subtype'}|[[{'var',462,'This'}|[{'type',462,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 469
		'spec' =
		    %% Line 469
		    [{{'isFloatable',1},[{'type',469,'bounded_fun',[{'type',469,'fun',[{'type',469,'product',[{'var',469,'This'}]}|[{'type',469,'boolean',[]}]]}|[[{'type',470,'constraint',[{'atom',470,'is_subtype'}|[[{'var',470,'This'}|[{'type',470,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 477
		'spec' =
		    %% Line 477
		    [{{'isFloating',1},[{'type',477,'bounded_fun',[{'type',477,'fun',[{'type',477,'product',[{'var',477,'This'}]}|[{'type',477,'boolean',[]}]]}|[[{'type',478,'constraint',[{'atom',478,'is_subtype'}|[[{'var',478,'This'}|[{'type',478,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 485
		'spec' =
		    %% Line 485
		    [{{'isLeftDockable',1},[{'type',485,'bounded_fun',[{'type',485,'fun',[{'type',485,'product',[{'var',485,'This'}]}|[{'type',485,'boolean',[]}]]}|[[{'type',486,'constraint',[{'atom',486,'is_subtype'}|[[{'var',486,'This'}|[{'type',486,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 493
		'spec' =
		    %% Line 493
		    [{{'isMovable',1},[{'type',493,'bounded_fun',[{'type',493,'fun',[{'type',493,'product',[{'var',493,'This'}]}|[{'type',493,'boolean',[]}]]}|[[{'type',494,'constraint',[{'atom',494,'is_subtype'}|[[{'var',494,'This'}|[{'type',494,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 501
		'spec' =
		    %% Line 501
		    [{{'isOk',1},[{'type',501,'bounded_fun',[{'type',501,'fun',[{'type',501,'product',[{'var',501,'This'}]}|[{'type',501,'boolean',[]}]]}|[[{'type',502,'constraint',[{'atom',502,'is_subtype'}|[[{'var',502,'This'}|[{'type',502,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 509
		'spec' =
		    %% Line 509
		    [{{'isResizable',1},[{'type',509,'bounded_fun',[{'type',509,'fun',[{'type',509,'product',[{'var',509,'This'}]}|[{'type',509,'boolean',[]}]]}|[[{'type',510,'constraint',[{'atom',510,'is_subtype'}|[[{'var',510,'This'}|[{'type',510,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 517
		'spec' =
		    %% Line 517
		    [{{'isRightDockable',1},[{'type',517,'bounded_fun',[{'type',517,'fun',[{'type',517,'product',[{'var',517,'This'}]}|[{'type',517,'boolean',[]}]]}|[[{'type',518,'constraint',[{'atom',518,'is_subtype'}|[[{'var',518,'This'}|[{'type',518,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 525
		'spec' =
		    %% Line 525
		    [{{'isShown',1},[{'type',525,'bounded_fun',[{'type',525,'fun',[{'type',525,'product',[{'var',525,'This'}]}|[{'type',525,'boolean',[]}]]}|[[{'type',526,'constraint',[{'atom',526,'is_subtype'}|[[{'var',526,'This'}|[{'type',526,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 533
		'spec' =
		    %% Line 533
		    [{{'isToolbar',1},[{'type',533,'bounded_fun',[{'type',533,'fun',[{'type',533,'product',[{'var',533,'This'}]}|[{'type',533,'boolean',[]}]]}|[[{'type',534,'constraint',[{'atom',534,'is_subtype'}|[[{'var',534,'This'}|[{'type',534,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 541
		'spec' =
		    %% Line 541
		    [{{'isTopDockable',1},[{'type',541,'bounded_fun',[{'type',541,'fun',[{'type',541,'product',[{'var',541,'This'}]}|[{'type',541,'boolean',[]}]]}|[[{'type',542,'constraint',[{'atom',542,'is_subtype'}|[[{'var',542,'This'}|[{'type',542,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 549
		'spec' =
		    %% Line 549
		    [{{'layer',2},[{'type',549,'bounded_fun',[{'type',549,'fun',[{'type',549,'product',[{'var',549,'This'}|[{'var',549,'Layer'}]]}|[{'type',549,'wxAuiPaneInfo',[]}]]}|[[{'type',550,'constraint',[{'atom',550,'is_subtype'}|[[{'var',550,'This'}|[{'type',550,'wxAuiPaneInfo',[]}]]]]}|[{'type',550,'constraint',[{'atom',550,'is_subtype'}|[[{'var',550,'Layer'}|[{'type',550,'integer',[]}]]]]}]]]]}]}],
		%% Line 558
		'spec' =
		    %% Line 558
		    [{{'left',1},[{'type',558,'bounded_fun',[{'type',558,'fun',[{'type',558,'product',[{'var',558,'This'}]}|[{'type',558,'wxAuiPaneInfo',[]}]]}|[[{'type',559,'constraint',[{'atom',559,'is_subtype'}|[[{'var',559,'This'}|[{'type',559,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 566
		'spec' =
		    %% Line 566
		    [{{'leftDockable',1},[{'type',566,'bounded_fun',[{'type',566,'fun',[{'type',566,'product',[{'var',566,'This'}]}|[{'type',566,'wxAuiPaneInfo',[]}]]}|[[{'type',567,'constraint',[{'atom',567,'is_subtype'}|[[{'var',567,'This'}|[{'type',567,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 574
		'spec' =
		    %% Line 574
		    [{{'leftDockable',2},[{'type',574,'bounded_fun',[{'type',574,'fun',[{'type',574,'product',[{'var',574,'This'}|[{'type',574,'list',[{'var',574,'Option'}]}]]}|[{'type',574,'wxAuiPaneInfo',[]}]]}|[[{'type',575,'constraint',[{'atom',575,'is_subtype'}|[[{'var',575,'This'}|[{'type',575,'wxAuiPaneInfo',[]}]]]]}|[{'type',576,'constraint',[{'atom',576,'is_subtype'}|[[{'var',576,'Option'}|[{'type',576,'tuple',[{'atom',576,'b'}|[{'type',576,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 587
		'spec' =
		    %% Line 587
		    [{{'maxSize',2},[{'type',587,'bounded_fun',[{'type',587,'fun',[{'type',587,'product',[{'var',587,'This'}|[{'var',587,'Size'}]]}|[{'type',587,'wxAuiPaneInfo',[]}]]}|[[{'type',588,'constraint',[{'atom',588,'is_subtype'}|[[{'var',588,'This'}|[{'type',588,'wxAuiPaneInfo',[]}]]]]}|[{'type',588,'constraint',[{'atom',588,'is_subtype'}|[[{'var',588,'Size'}|[{'type',588,'tuple',[{'ann_type',588,[{'var',588,'W'}|[{'type',588,'integer',[]}]]}|[{'ann_type',588,[{'var',588,'H'}|[{'type',588,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 596
		'spec' =
		    %% Line 596
		    [{{'maxSize',3},[{'type',596,'bounded_fun',[{'type',596,'fun',[{'type',596,'product',[{'var',596,'This'}|[{'var',596,'X'}|[{'var',596,'Y'}]]]}|[{'type',596,'wxAuiPaneInfo',[]}]]}|[[{'type',597,'constraint',[{'atom',597,'is_subtype'}|[[{'var',597,'This'}|[{'type',597,'wxAuiPaneInfo',[]}]]]]}|[{'type',597,'constraint',[{'atom',597,'is_subtype'}|[[{'var',597,'X'}|[{'type',597,'integer',[]}]]]]}|[{'type',597,'constraint',[{'atom',597,'is_subtype'}|[[{'var',597,'Y'}|[{'type',597,'integer',[]}]]]]}]]]]]}]}],
		%% Line 605
		'spec' =
		    %% Line 605
		    [{{'maximizeButton',1},[{'type',605,'bounded_fun',[{'type',605,'fun',[{'type',605,'product',[{'var',605,'This'}]}|[{'type',605,'wxAuiPaneInfo',[]}]]}|[[{'type',606,'constraint',[{'atom',606,'is_subtype'}|[[{'var',606,'This'}|[{'type',606,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 613
		'spec' =
		    %% Line 613
		    [{{'maximizeButton',2},[{'type',613,'bounded_fun',[{'type',613,'fun',[{'type',613,'product',[{'var',613,'This'}|[{'type',613,'list',[{'var',613,'Option'}]}]]}|[{'type',613,'wxAuiPaneInfo',[]}]]}|[[{'type',614,'constraint',[{'atom',614,'is_subtype'}|[[{'var',614,'This'}|[{'type',614,'wxAuiPaneInfo',[]}]]]]}|[{'type',615,'constraint',[{'atom',615,'is_subtype'}|[[{'var',615,'Option'}|[{'type',615,'tuple',[{'atom',615,'visible'}|[{'type',615,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 626
		'spec' =
		    %% Line 626
		    [{{'minSize',2},[{'type',626,'bounded_fun',[{'type',626,'fun',[{'type',626,'product',[{'var',626,'This'}|[{'var',626,'Size'}]]}|[{'type',626,'wxAuiPaneInfo',[]}]]}|[[{'type',627,'constraint',[{'atom',627,'is_subtype'}|[[{'var',627,'This'}|[{'type',627,'wxAuiPaneInfo',[]}]]]]}|[{'type',627,'constraint',[{'atom',627,'is_subtype'}|[[{'var',627,'Size'}|[{'type',627,'tuple',[{'ann_type',627,[{'var',627,'W'}|[{'type',627,'integer',[]}]]}|[{'ann_type',627,[{'var',627,'H'}|[{'type',627,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 635
		'spec' =
		    %% Line 635
		    [{{'minSize',3},[{'type',635,'bounded_fun',[{'type',635,'fun',[{'type',635,'product',[{'var',635,'This'}|[{'var',635,'X'}|[{'var',635,'Y'}]]]}|[{'type',635,'wxAuiPaneInfo',[]}]]}|[[{'type',636,'constraint',[{'atom',636,'is_subtype'}|[[{'var',636,'This'}|[{'type',636,'wxAuiPaneInfo',[]}]]]]}|[{'type',636,'constraint',[{'atom',636,'is_subtype'}|[[{'var',636,'X'}|[{'type',636,'integer',[]}]]]]}|[{'type',636,'constraint',[{'atom',636,'is_subtype'}|[[{'var',636,'Y'}|[{'type',636,'integer',[]}]]]]}]]]]]}]}],
		%% Line 644
		'spec' =
		    %% Line 644
		    [{{'minimizeButton',1},[{'type',644,'bounded_fun',[{'type',644,'fun',[{'type',644,'product',[{'var',644,'This'}]}|[{'type',644,'wxAuiPaneInfo',[]}]]}|[[{'type',645,'constraint',[{'atom',645,'is_subtype'}|[[{'var',645,'This'}|[{'type',645,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 652
		'spec' =
		    %% Line 652
		    [{{'minimizeButton',2},[{'type',652,'bounded_fun',[{'type',652,'fun',[{'type',652,'product',[{'var',652,'This'}|[{'type',652,'list',[{'var',652,'Option'}]}]]}|[{'type',652,'wxAuiPaneInfo',[]}]]}|[[{'type',653,'constraint',[{'atom',653,'is_subtype'}|[[{'var',653,'This'}|[{'type',653,'wxAuiPaneInfo',[]}]]]]}|[{'type',654,'constraint',[{'atom',654,'is_subtype'}|[[{'var',654,'Option'}|[{'type',654,'tuple',[{'atom',654,'visible'}|[{'type',654,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 665
		'spec' =
		    %% Line 665
		    [{{'movable',1},[{'type',665,'bounded_fun',[{'type',665,'fun',[{'type',665,'product',[{'var',665,'This'}]}|[{'type',665,'wxAuiPaneInfo',[]}]]}|[[{'type',666,'constraint',[{'atom',666,'is_subtype'}|[[{'var',666,'This'}|[{'type',666,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 673
		'spec' =
		    %% Line 673
		    [{{'movable',2},[{'type',673,'bounded_fun',[{'type',673,'fun',[{'type',673,'product',[{'var',673,'This'}|[{'type',673,'list',[{'var',673,'Option'}]}]]}|[{'type',673,'wxAuiPaneInfo',[]}]]}|[[{'type',674,'constraint',[{'atom',674,'is_subtype'}|[[{'var',674,'This'}|[{'type',674,'wxAuiPaneInfo',[]}]]]]}|[{'type',675,'constraint',[{'atom',675,'is_subtype'}|[[{'var',675,'Option'}|[{'type',675,'tuple',[{'atom',675,'b'}|[{'type',675,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 686
		'spec' =
		    %% Line 686
		    [{{'name',2},[{'type',686,'bounded_fun',[{'type',686,'fun',[{'type',686,'product',[{'var',686,'This'}|[{'var',686,'N'}]]}|[{'type',686,'wxAuiPaneInfo',[]}]]}|[[{'type',687,'constraint',[{'atom',687,'is_subtype'}|[[{'var',687,'This'}|[{'type',687,'wxAuiPaneInfo',[]}]]]]}|[{'type',687,'constraint',[{'atom',687,'is_subtype'}|[[{'var',687,'N'}|[{'remote_type',687,[{'atom',687,'unicode'}|[{'atom',687,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 696
		'spec' =
		    %% Line 696
		    [{{'paneBorder',1},[{'type',696,'bounded_fun',[{'type',696,'fun',[{'type',696,'product',[{'var',696,'This'}]}|[{'type',696,'wxAuiPaneInfo',[]}]]}|[[{'type',697,'constraint',[{'atom',697,'is_subtype'}|[[{'var',697,'This'}|[{'type',697,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 704
		'spec' =
		    %% Line 704
		    [{{'paneBorder',2},[{'type',704,'bounded_fun',[{'type',704,'fun',[{'type',704,'product',[{'var',704,'This'}|[{'type',704,'list',[{'var',704,'Option'}]}]]}|[{'type',704,'wxAuiPaneInfo',[]}]]}|[[{'type',705,'constraint',[{'atom',705,'is_subtype'}|[[{'var',705,'This'}|[{'type',705,'wxAuiPaneInfo',[]}]]]]}|[{'type',706,'constraint',[{'atom',706,'is_subtype'}|[[{'var',706,'Option'}|[{'type',706,'tuple',[{'atom',706,'visible'}|[{'type',706,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 717
		'spec' =
		    %% Line 717
		    [{{'pinButton',1},[{'type',717,'bounded_fun',[{'type',717,'fun',[{'type',717,'product',[{'var',717,'This'}]}|[{'type',717,'wxAuiPaneInfo',[]}]]}|[[{'type',718,'constraint',[{'atom',718,'is_subtype'}|[[{'var',718,'This'}|[{'type',718,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 725
		'spec' =
		    %% Line 725
		    [{{'pinButton',2},[{'type',725,'bounded_fun',[{'type',725,'fun',[{'type',725,'product',[{'var',725,'This'}|[{'type',725,'list',[{'var',725,'Option'}]}]]}|[{'type',725,'wxAuiPaneInfo',[]}]]}|[[{'type',726,'constraint',[{'atom',726,'is_subtype'}|[[{'var',726,'This'}|[{'type',726,'wxAuiPaneInfo',[]}]]]]}|[{'type',727,'constraint',[{'atom',727,'is_subtype'}|[[{'var',727,'Option'}|[{'type',727,'tuple',[{'atom',727,'visible'}|[{'type',727,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 738
		'spec' =
		    %% Line 738
		    [{{'position',2},[{'type',738,'bounded_fun',[{'type',738,'fun',[{'type',738,'product',[{'var',738,'This'}|[{'var',738,'Pos'}]]}|[{'type',738,'wxAuiPaneInfo',[]}]]}|[[{'type',739,'constraint',[{'atom',739,'is_subtype'}|[[{'var',739,'This'}|[{'type',739,'wxAuiPaneInfo',[]}]]]]}|[{'type',739,'constraint',[{'atom',739,'is_subtype'}|[[{'var',739,'Pos'}|[{'type',739,'integer',[]}]]]]}]]]]}]}],
		%% Line 747
		'spec' =
		    %% Line 747
		    [{{'resizable',1},[{'type',747,'bounded_fun',[{'type',747,'fun',[{'type',747,'product',[{'var',747,'This'}]}|[{'type',747,'wxAuiPaneInfo',[]}]]}|[[{'type',748,'constraint',[{'atom',748,'is_subtype'}|[[{'var',748,'This'}|[{'type',748,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 755
		'spec' =
		    %% Line 755
		    [{{'resizable',2},[{'type',755,'bounded_fun',[{'type',755,'fun',[{'type',755,'product',[{'var',755,'This'}|[{'type',755,'list',[{'var',755,'Option'}]}]]}|[{'type',755,'wxAuiPaneInfo',[]}]]}|[[{'type',756,'constraint',[{'atom',756,'is_subtype'}|[[{'var',756,'This'}|[{'type',756,'wxAuiPaneInfo',[]}]]]]}|[{'type',757,'constraint',[{'atom',757,'is_subtype'}|[[{'var',757,'Option'}|[{'type',757,'tuple',[{'atom',757,'resizable'}|[{'type',757,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 768
		'spec' =
		    %% Line 768
		    [{{'right',1},[{'type',768,'bounded_fun',[{'type',768,'fun',[{'type',768,'product',[{'var',768,'This'}]}|[{'type',768,'wxAuiPaneInfo',[]}]]}|[[{'type',769,'constraint',[{'atom',769,'is_subtype'}|[[{'var',769,'This'}|[{'type',769,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 776
		'spec' =
		    %% Line 776
		    [{{'rightDockable',1},[{'type',776,'bounded_fun',[{'type',776,'fun',[{'type',776,'product',[{'var',776,'This'}]}|[{'type',776,'wxAuiPaneInfo',[]}]]}|[[{'type',777,'constraint',[{'atom',777,'is_subtype'}|[[{'var',777,'This'}|[{'type',777,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 784
		'spec' =
		    %% Line 784
		    [{{'rightDockable',2},[{'type',784,'bounded_fun',[{'type',784,'fun',[{'type',784,'product',[{'var',784,'This'}|[{'type',784,'list',[{'var',784,'Option'}]}]]}|[{'type',784,'wxAuiPaneInfo',[]}]]}|[[{'type',785,'constraint',[{'atom',785,'is_subtype'}|[[{'var',785,'This'}|[{'type',785,'wxAuiPaneInfo',[]}]]]]}|[{'type',786,'constraint',[{'atom',786,'is_subtype'}|[[{'var',786,'Option'}|[{'type',786,'tuple',[{'atom',786,'b'}|[{'type',786,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 797
		'spec' =
		    %% Line 797
		    [{{'row',2},[{'type',797,'bounded_fun',[{'type',797,'fun',[{'type',797,'product',[{'var',797,'This'}|[{'var',797,'Row'}]]}|[{'type',797,'wxAuiPaneInfo',[]}]]}|[[{'type',798,'constraint',[{'atom',798,'is_subtype'}|[[{'var',798,'This'}|[{'type',798,'wxAuiPaneInfo',[]}]]]]}|[{'type',798,'constraint',[{'atom',798,'is_subtype'}|[[{'var',798,'Row'}|[{'type',798,'integer',[]}]]]]}]]]]}]}],
		%% Line 806
		'spec' =
		    %% Line 806
		    [{{'safeSet',2},[{'type',806,'bounded_fun',[{'type',806,'fun',[{'type',806,'product',[{'var',806,'This'}|[{'var',806,'Source'}]]}|[{'atom',806,'ok'}]]}|[[{'type',807,'constraint',[{'atom',807,'is_subtype'}|[[{'var',807,'This'}|[{'type',807,'wxAuiPaneInfo',[]}]]]]}|[{'type',807,'constraint',[{'atom',807,'is_subtype'}|[[{'var',807,'Source'}|[{'type',807,'wxAuiPaneInfo',[]}]]]]}]]]]}]}],
		%% Line 815
		'spec' =
		    %% Line 815
		    [{{'setFlag',3},[{'type',815,'bounded_fun',[{'type',815,'fun',[{'type',815,'product',[{'var',815,'This'}|[{'var',815,'Flag'}|[{'var',815,'Option_state'}]]]}|[{'type',815,'wxAuiPaneInfo',[]}]]}|[[{'type',816,'constraint',[{'atom',816,'is_subtype'}|[[{'var',816,'This'}|[{'type',816,'wxAuiPaneInfo',[]}]]]]}|[{'type',816,'constraint',[{'atom',816,'is_subtype'}|[[{'var',816,'Flag'}|[{'type',816,'integer',[]}]]]]}|[{'type',816,'constraint',[{'atom',816,'is_subtype'}|[[{'var',816,'Option_state'}|[{'type',816,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 824
		'spec' =
		    %% Line 824
		    [{{'show',1},[{'type',824,'bounded_fun',[{'type',824,'fun',[{'type',824,'product',[{'var',824,'This'}]}|[{'type',824,'wxAuiPaneInfo',[]}]]}|[[{'type',825,'constraint',[{'atom',825,'is_subtype'}|[[{'var',825,'This'}|[{'type',825,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 832
		'spec' =
		    %% Line 832
		    [{{'show',2},[{'type',832,'bounded_fun',[{'type',832,'fun',[{'type',832,'product',[{'var',832,'This'}|[{'type',832,'list',[{'var',832,'Option'}]}]]}|[{'type',832,'wxAuiPaneInfo',[]}]]}|[[{'type',833,'constraint',[{'atom',833,'is_subtype'}|[[{'var',833,'This'}|[{'type',833,'wxAuiPaneInfo',[]}]]]]}|[{'type',834,'constraint',[{'atom',834,'is_subtype'}|[[{'var',834,'Option'}|[{'type',834,'tuple',[{'atom',834,'show'}|[{'type',834,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 845
		'spec' =
		    %% Line 845
		    [{{'toolbarPane',1},[{'type',845,'bounded_fun',[{'type',845,'fun',[{'type',845,'product',[{'var',845,'This'}]}|[{'type',845,'wxAuiPaneInfo',[]}]]}|[[{'type',846,'constraint',[{'atom',846,'is_subtype'}|[[{'var',846,'This'}|[{'type',846,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 853
		'spec' =
		    %% Line 853
		    [{{'top',1},[{'type',853,'bounded_fun',[{'type',853,'fun',[{'type',853,'product',[{'var',853,'This'}]}|[{'type',853,'wxAuiPaneInfo',[]}]]}|[[{'type',854,'constraint',[{'atom',854,'is_subtype'}|[[{'var',854,'This'}|[{'type',854,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 861
		'spec' =
		    %% Line 861
		    [{{'topDockable',1},[{'type',861,'bounded_fun',[{'type',861,'fun',[{'type',861,'product',[{'var',861,'This'}]}|[{'type',861,'wxAuiPaneInfo',[]}]]}|[[{'type',862,'constraint',[{'atom',862,'is_subtype'}|[[{'var',862,'This'}|[{'type',862,'wxAuiPaneInfo',[]}]]]]}]]]}]}],
		%% Line 869
		'spec' =
		    %% Line 869
		    [{{'topDockable',2},[{'type',869,'bounded_fun',[{'type',869,'fun',[{'type',869,'product',[{'var',869,'This'}|[{'type',869,'list',[{'var',869,'Option'}]}]]}|[{'type',869,'wxAuiPaneInfo',[]}]]}|[[{'type',870,'constraint',[{'atom',870,'is_subtype'}|[[{'var',870,'This'}|[{'type',870,'wxAuiPaneInfo',[]}]]]]}|[{'type',871,'constraint',[{'atom',871,'is_subtype'}|[[{'var',871,'Option'}|[{'type',871,'tuple',[{'atom',871,'b'}|[{'type',871,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 882
		'spec' =
		    %% Line 882
		    [{{'window',2},[{'type',882,'bounded_fun',[{'type',882,'fun',[{'type',882,'product',[{'var',882,'This'}|[{'var',882,'W'}]]}|[{'type',882,'wxAuiPaneInfo',[]}]]}|[[{'type',883,'constraint',[{'atom',883,'is_subtype'}|[[{'var',883,'This'}|[{'type',883,'wxAuiPaneInfo',[]}]]]]}|[{'type',883,'constraint',[{'atom',883,'is_subtype'}|[[{'var',883,'W'}|[{'remote_type',883,[{'atom',883,'wxWindow'}|[{'atom',883,'wxWindow'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 891
		'spec' =
		    %% Line 891
		    [{{'destroy',1},[{'type',891,'fun',[{'type',891,'product',[{'ann_type',891,[{'var',891,'This'}|[{'type',891,'wxAuiPaneInfo',[]}]]}]}|[{'atom',891,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 49
    fun (_cor0) ->
	call 'erlang':'error'
	    ({'badtype','wxAuiPaneInfo'})
'new'/0 =
    %% Line 54
    fun () ->
	%% Line 55
	call 'wxe_util':'construct'
	    (2579, %% Line 56
		   #{}#)
'new'/1 =
    %% Line 61
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',CRef,CT,_cor5}> when 'true' ->
	      do  %% Line 62
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (CT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call CT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 64
		      #{#<CRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 63
		      call 'wxe_util':'construct'
			  (2580, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'bestSize'/2 =
    %% Line 69
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{SizeW,SizeH}>
	      when let <_cor2> =
		    %% Line 70
		    call 'erlang':'is_integer'
			(SizeW)
		in  let <_cor3> =
			%% Line 70
			call 'erlang':'is_integer'
			    (SizeH)
		    in  %% Line 70
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 71
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 73
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<SizeW>(32,1,'integer',['unsigned'|['native']]),
			#<SizeH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 72
		      call 'wxe_util':'call'
			  (2582, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'bestSize',2}}] )
	    -| ['compiler_generated'] )
	end
'bestSize'/3 =
    %% Line 78
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},X,Y>
	      when let <_cor3> =
		    %% Line 79
		    call 'erlang':'is_integer'
			(X)
		in  let <_cor4> =
			%% Line 79
			call 'erlang':'is_integer'
			    (Y)
		    in  %% Line 79
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 80
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 82
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<X>(32,1,'integer',['unsigned'|['native']]),
			#<Y>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 81
		      call 'wxe_util':'call'
			  (2583, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'bestSize',3}}] )
	    -| ['compiler_generated'] )
	end
'bottom'/1 =
    %% Line 87
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 88
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 90
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 89
		      call 'wxe_util':'call'
			  (2584, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'bottom',1}}] )
	    -| ['compiler_generated'] )
	end
'bottomDockable'/1 =
    %% Line 96
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 97
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 98
	      apply 'bottomDockable'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'bottomDockable',1}}] )
	    -| ['compiler_generated'] )
	end
'bottomDockable'/2 =
    %% Line 104
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 105
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 106
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 107
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'b',B},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (B)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 108
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-bottomDockable/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 109
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 109
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 111
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 110
				  call 'wxe_util':'call'
				      (2585, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'bottomDockable',2}}] )
	    -| ['compiler_generated'] )
	end
'caption'/2 =
    %% Line 116
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},C>
	      when %% Line 117
		call 'erlang':'is_list'
		    (C) ->
	      do  %% Line 118
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <C_UC> =
		      %% Line 119
		      call 'unicode':'characters_to_binary'
			  ([C|[0]])
		  in  let <_cor10> =
			  %% Line 121
			  call 'erlang':'byte_size'
			      (C_UC)
		      in  let <_cor5> =
			      %% Line 121
			      call 'erlang':'byte_size'
				  (C_UC)
			  in  let <_cor6> =
				  %% Line 121
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 121
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 121
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 121
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 121
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<C_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 120
						  call 'wxe_util':'call'
						      (2586, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'caption',2}}] )
	    -| ['compiler_generated'] )
	end
'captionVisible'/1 =
    %% Line 127
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 128
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 129
	      apply 'captionVisible'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'captionVisible',1}}] )
	    -| ['compiler_generated'] )
	end
'captionVisible'/2 =
    %% Line 135
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 136
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 137
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 138
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'visible',Visible},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Visible)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 139
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-captionVisible/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 140
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 140
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 142
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 141
				  call 'wxe_util':'call'
				      (2587, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'captionVisible',2}}] )
	    -| ['compiler_generated'] )
	end
'centre'/1 =
    %% Line 147
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 148
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 150
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 149
		      call 'wxe_util':'call'
			  (2588, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'centre',1}}] )
	    -| ['compiler_generated'] )
	end
'centrePane'/1 =
    %% Line 155
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 156
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 158
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 157
		      call 'wxe_util':'call'
			  (2589, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'centrePane',1}}] )
	    -| ['compiler_generated'] )
	end
'closeButton'/1 =
    %% Line 164
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 165
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 166
	      apply 'closeButton'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'closeButton',1}}] )
	    -| ['compiler_generated'] )
	end
'closeButton'/2 =
    %% Line 172
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 173
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 174
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 175
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'visible',Visible},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Visible)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 176
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-closeButton/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 177
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 177
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 179
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 178
				  call 'wxe_util':'call'
				      (2590, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'closeButton',2}}] )
	    -| ['compiler_generated'] )
	end
'defaultPane'/1 =
    %% Line 184
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 185
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 187
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 186
		      call 'wxe_util':'call'
			  (2591, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'defaultPane',1}}] )
	    -| ['compiler_generated'] )
	end
'destroyOnClose'/1 =
    %% Line 193
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 194
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 195
	      apply 'destroyOnClose'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'destroyOnClose',1}}] )
	    -| ['compiler_generated'] )
	end
'destroyOnClose'/2 =
    %% Line 201
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 202
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 203
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 204
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'b',B},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (B)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 205
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-destroyOnClose/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 206
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 206
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 208
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 207
				  call 'wxe_util':'call'
				      (2592, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'destroyOnClose',2}}] )
	    -| ['compiler_generated'] )
	end
'direction'/2 =
    %% Line 213
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Direction>
	      when %% Line 214
		call 'erlang':'is_integer'
		    (Direction) ->
	      do  %% Line 215
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 217
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Direction>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 216
		      call 'wxe_util':'call'
			  (2593, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'direction',2}}] )
	    -| ['compiler_generated'] )
	end
'dock'/1 =
    %% Line 222
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 223
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 225
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 224
		      call 'wxe_util':'call'
			  (2594, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'dock',1}}] )
	    -| ['compiler_generated'] )
	end
'dockable'/1 =
    %% Line 231
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 232
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 233
	      apply 'dockable'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'dockable',1}}] )
	    -| ['compiler_generated'] )
	end
'dockable'/2 =
    %% Line 239
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 240
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 241
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 242
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'b',B},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (B)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 243
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-dockable/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 244
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 244
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 246
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 245
				  call 'wxe_util':'call'
				      (2595, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'dockable',2}}] )
	    -| ['compiler_generated'] )
	end
'fixed'/1 =
    %% Line 251
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 252
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 254
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 253
		      call 'wxe_util':'call'
			  (2596, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'fixed',1}}] )
	    -| ['compiler_generated'] )
	end
'float'/1 =
    %% Line 259
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 260
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 262
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 261
		      call 'wxe_util':'call'
			  (2597, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'float',1}}] )
	    -| ['compiler_generated'] )
	end
'floatable'/1 =
    %% Line 268
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 269
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 270
	      apply 'floatable'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'floatable',1}}] )
	    -| ['compiler_generated'] )
	end
'floatable'/2 =
    %% Line 276
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 277
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 278
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 279
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'b',B},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (B)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 280
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-floatable/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 281
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 281
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 283
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 282
				  call 'wxe_util':'call'
				      (2598, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'floatable',2}}] )
	    -| ['compiler_generated'] )
	end
'floatingPosition'/2 =
    %% Line 288
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{PosX,PosY}>
	      when let <_cor2> =
		    %% Line 289
		    call 'erlang':'is_integer'
			(PosX)
		in  let <_cor3> =
			%% Line 289
			call 'erlang':'is_integer'
			    (PosY)
		    in  %% Line 289
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 290
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 292
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PosX>(32,1,'integer',['unsigned'|['native']]),
			#<PosY>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 291
		      call 'wxe_util':'call'
			  (2599, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'floatingPosition',2}}] )
	    -| ['compiler_generated'] )
	end
'floatingPosition'/3 =
    %% Line 297
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},X,Y>
	      when let <_cor3> =
		    %% Line 298
		    call 'erlang':'is_integer'
			(X)
		in  let <_cor4> =
			%% Line 298
			call 'erlang':'is_integer'
			    (Y)
		    in  %% Line 298
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 299
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 301
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<X>(32,1,'integer',['unsigned'|['native']]),
			#<Y>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 300
		      call 'wxe_util':'call'
			  (2600, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'floatingPosition',3}}] )
	    -| ['compiler_generated'] )
	end
'floatingSize'/2 =
    %% Line 306
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{SizeW,SizeH}>
	      when let <_cor2> =
		    %% Line 307
		    call 'erlang':'is_integer'
			(SizeW)
		in  let <_cor3> =
			%% Line 307
			call 'erlang':'is_integer'
			    (SizeH)
		    in  %% Line 307
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 308
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 310
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<SizeW>(32,1,'integer',['unsigned'|['native']]),
			#<SizeH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 309
		      call 'wxe_util':'call'
			  (2601, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'floatingSize',2}}] )
	    -| ['compiler_generated'] )
	end
'floatingSize'/3 =
    %% Line 315
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},X,Y>
	      when let <_cor3> =
		    %% Line 316
		    call 'erlang':'is_integer'
			(X)
		in  let <_cor4> =
			%% Line 316
			call 'erlang':'is_integer'
			    (Y)
		    in  %% Line 316
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 317
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 319
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<X>(32,1,'integer',['unsigned'|['native']]),
			#<Y>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 318
		      call 'wxe_util':'call'
			  (2602, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'floatingSize',3}}] )
	    -| ['compiler_generated'] )
	end
'gripper'/1 =
    %% Line 325
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 326
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 327
	      apply 'gripper'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'gripper',1}}] )
	    -| ['compiler_generated'] )
	end
'gripper'/2 =
    %% Line 333
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 334
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 335
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 336
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'visible',Visible},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Visible)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 337
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-gripper/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 338
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 338
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 340
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 339
				  call 'wxe_util':'call'
				      (2603, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'gripper',2}}] )
	    -| ['compiler_generated'] )
	end
'gripperTop'/1 =
    %% Line 346
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 347
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 348
	      apply 'gripperTop'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'gripperTop',1}}] )
	    -| ['compiler_generated'] )
	end
'gripperTop'/2 =
    %% Line 354
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 355
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 356
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 357
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'attop',Attop},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Attop)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 358
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-gripperTop/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 359
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 359
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 361
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 360
				  call 'wxe_util':'call'
				      (2604, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'gripperTop',2}}] )
	    -| ['compiler_generated'] )
	end
'hasBorder'/1 =
    %% Line 366
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 367
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 369
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 368
		      call 'wxe_util':'call'
			  (2605, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'hasBorder',1}}] )
	    -| ['compiler_generated'] )
	end
'hasCaption'/1 =
    %% Line 374
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 375
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 377
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 376
		      call 'wxe_util':'call'
			  (2606, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'hasCaption',1}}] )
	    -| ['compiler_generated'] )
	end
'hasCloseButton'/1 =
    %% Line 382
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 383
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 385
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 384
		      call 'wxe_util':'call'
			  (2607, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'hasCloseButton',1}}] )
	    -| ['compiler_generated'] )
	end
'hasFlag'/2 =
    %% Line 390
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Flag>
	      when %% Line 391
		call 'erlang':'is_integer'
		    (Flag) ->
	      do  %% Line 392
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 394
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Flag>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 393
		      call 'wxe_util':'call'
			  (2608, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'hasFlag',2}}] )
	    -| ['compiler_generated'] )
	end
'hasGripper'/1 =
    %% Line 399
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 400
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 402
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 401
		      call 'wxe_util':'call'
			  (2609, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'hasGripper',1}}] )
	    -| ['compiler_generated'] )
	end
'hasGripperTop'/1 =
    %% Line 407
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 408
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 410
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 409
		      call 'wxe_util':'call'
			  (2610, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'hasGripperTop',1}}] )
	    -| ['compiler_generated'] )
	end
'hasMaximizeButton'/1 =
    %% Line 415
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 416
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 418
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 417
		      call 'wxe_util':'call'
			  (2611, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'hasMaximizeButton',1}}] )
	    -| ['compiler_generated'] )
	end
'hasMinimizeButton'/1 =
    %% Line 423
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 424
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 426
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 425
		      call 'wxe_util':'call'
			  (2612, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'hasMinimizeButton',1}}] )
	    -| ['compiler_generated'] )
	end
'hasPinButton'/1 =
    %% Line 431
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 432
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 434
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 433
		      call 'wxe_util':'call'
			  (2613, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'hasPinButton',1}}] )
	    -| ['compiler_generated'] )
	end
'hide'/1 =
    %% Line 439
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 440
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 442
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 441
		      call 'wxe_util':'call'
			  (2614, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'hide',1}}] )
	    -| ['compiler_generated'] )
	end
'isBottomDockable'/1 =
    %% Line 447
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 448
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 450
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 449
		      call 'wxe_util':'call'
			  (2615, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isBottomDockable',1}}] )
	    -| ['compiler_generated'] )
	end
'isDocked'/1 =
    %% Line 455
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 456
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 458
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 457
		      call 'wxe_util':'call'
			  (2616, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isDocked',1}}] )
	    -| ['compiler_generated'] )
	end
'isFixed'/1 =
    %% Line 463
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 464
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 466
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 465
		      call 'wxe_util':'call'
			  (2617, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isFixed',1}}] )
	    -| ['compiler_generated'] )
	end
'isFloatable'/1 =
    %% Line 471
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 472
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 474
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 473
		      call 'wxe_util':'call'
			  (2618, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isFloatable',1}}] )
	    -| ['compiler_generated'] )
	end
'isFloating'/1 =
    %% Line 479
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 480
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 482
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 481
		      call 'wxe_util':'call'
			  (2619, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isFloating',1}}] )
	    -| ['compiler_generated'] )
	end
'isLeftDockable'/1 =
    %% Line 487
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 488
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 490
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 489
		      call 'wxe_util':'call'
			  (2620, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isLeftDockable',1}}] )
	    -| ['compiler_generated'] )
	end
'isMovable'/1 =
    %% Line 495
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 496
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 498
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 497
		      call 'wxe_util':'call'
			  (2621, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isMovable',1}}] )
	    -| ['compiler_generated'] )
	end
'isOk'/1 =
    %% Line 503
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 504
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 506
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 505
		      call 'wxe_util':'call'
			  (2622, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isOk',1}}] )
	    -| ['compiler_generated'] )
	end
'isResizable'/1 =
    %% Line 511
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 512
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 514
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 513
		      call 'wxe_util':'call'
			  (2623, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isResizable',1}}] )
	    -| ['compiler_generated'] )
	end
'isRightDockable'/1 =
    %% Line 519
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 520
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 522
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 521
		      call 'wxe_util':'call'
			  (2624, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isRightDockable',1}}] )
	    -| ['compiler_generated'] )
	end
'isShown'/1 =
    %% Line 527
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 528
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 530
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 529
		      call 'wxe_util':'call'
			  (2625, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isShown',1}}] )
	    -| ['compiler_generated'] )
	end
'isToolbar'/1 =
    %% Line 535
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 536
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 538
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 537
		      call 'wxe_util':'call'
			  (2626, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isToolbar',1}}] )
	    -| ['compiler_generated'] )
	end
'isTopDockable'/1 =
    %% Line 543
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 544
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 546
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 545
		      call 'wxe_util':'call'
			  (2627, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isTopDockable',1}}] )
	    -| ['compiler_generated'] )
	end
'layer'/2 =
    %% Line 551
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Layer>
	      when %% Line 552
		call 'erlang':'is_integer'
		    (Layer) ->
	      do  %% Line 553
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 555
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Layer>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 554
		      call 'wxe_util':'call'
			  (2628, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'layer',2}}] )
	    -| ['compiler_generated'] )
	end
'left'/1 =
    %% Line 560
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 561
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 563
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 562
		      call 'wxe_util':'call'
			  (2629, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'left',1}}] )
	    -| ['compiler_generated'] )
	end
'leftDockable'/1 =
    %% Line 569
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 570
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 571
	      apply 'leftDockable'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'leftDockable',1}}] )
	    -| ['compiler_generated'] )
	end
'leftDockable'/2 =
    %% Line 577
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 578
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 579
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 580
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'b',B},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (B)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 581
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-leftDockable/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 582
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 582
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 584
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 583
				  call 'wxe_util':'call'
				      (2630, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'leftDockable',2}}] )
	    -| ['compiler_generated'] )
	end
'maxSize'/2 =
    %% Line 589
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{SizeW,SizeH}>
	      when let <_cor2> =
		    %% Line 590
		    call 'erlang':'is_integer'
			(SizeW)
		in  let <_cor3> =
			%% Line 590
			call 'erlang':'is_integer'
			    (SizeH)
		    in  %% Line 590
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 591
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 593
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<SizeW>(32,1,'integer',['unsigned'|['native']]),
			#<SizeH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 592
		      call 'wxe_util':'call'
			  (2631, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'maxSize',2}}] )
	    -| ['compiler_generated'] )
	end
'maxSize'/3 =
    %% Line 598
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},X,Y>
	      when let <_cor3> =
		    %% Line 599
		    call 'erlang':'is_integer'
			(X)
		in  let <_cor4> =
			%% Line 599
			call 'erlang':'is_integer'
			    (Y)
		    in  %% Line 599
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 600
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 602
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<X>(32,1,'integer',['unsigned'|['native']]),
			#<Y>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 601
		      call 'wxe_util':'call'
			  (2632, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'maxSize',3}}] )
	    -| ['compiler_generated'] )
	end
'maximizeButton'/1 =
    %% Line 608
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 609
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 610
	      apply 'maximizeButton'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'maximizeButton',1}}] )
	    -| ['compiler_generated'] )
	end
'maximizeButton'/2 =
    %% Line 616
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 617
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 618
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 619
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'visible',Visible},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Visible)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 620
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-maximizeButton/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 621
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 621
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 623
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 622
				  call 'wxe_util':'call'
				      (2633, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'maximizeButton',2}}] )
	    -| ['compiler_generated'] )
	end
'minSize'/2 =
    %% Line 628
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{SizeW,SizeH}>
	      when let <_cor2> =
		    %% Line 629
		    call 'erlang':'is_integer'
			(SizeW)
		in  let <_cor3> =
			%% Line 629
			call 'erlang':'is_integer'
			    (SizeH)
		    in  %% Line 629
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 630
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 632
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<SizeW>(32,1,'integer',['unsigned'|['native']]),
			#<SizeH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 631
		      call 'wxe_util':'call'
			  (2634, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'minSize',2}}] )
	    -| ['compiler_generated'] )
	end
'minSize'/3 =
    %% Line 637
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},X,Y>
	      when let <_cor3> =
		    %% Line 638
		    call 'erlang':'is_integer'
			(X)
		in  let <_cor4> =
			%% Line 638
			call 'erlang':'is_integer'
			    (Y)
		    in  %% Line 638
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 639
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 641
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<X>(32,1,'integer',['unsigned'|['native']]),
			#<Y>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 640
		      call 'wxe_util':'call'
			  (2635, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'minSize',3}}] )
	    -| ['compiler_generated'] )
	end
'minimizeButton'/1 =
    %% Line 647
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 648
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 649
	      apply 'minimizeButton'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'minimizeButton',1}}] )
	    -| ['compiler_generated'] )
	end
'minimizeButton'/2 =
    %% Line 655
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 656
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 657
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 658
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'visible',Visible},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Visible)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 659
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-minimizeButton/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 660
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 660
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 662
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 661
				  call 'wxe_util':'call'
				      (2636, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'minimizeButton',2}}] )
	    -| ['compiler_generated'] )
	end
'movable'/1 =
    %% Line 668
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 669
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 670
	      apply 'movable'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'movable',1}}] )
	    -| ['compiler_generated'] )
	end
'movable'/2 =
    %% Line 676
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 677
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 678
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 679
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'b',B},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (B)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 680
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-movable/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 681
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 681
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 683
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 682
				  call 'wxe_util':'call'
				      (2637, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'movable',2}}] )
	    -| ['compiler_generated'] )
	end
'name'/2 =
    %% Line 688
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},N>
	      when %% Line 689
		call 'erlang':'is_list'
		    (N) ->
	      do  %% Line 690
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <N_UC> =
		      %% Line 691
		      call 'unicode':'characters_to_binary'
			  ([N|[0]])
		  in  let <_cor10> =
			  %% Line 693
			  call 'erlang':'byte_size'
			      (N_UC)
		      in  let <_cor5> =
			      %% Line 693
			      call 'erlang':'byte_size'
				  (N_UC)
			  in  let <_cor6> =
				  %% Line 693
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 693
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 693
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 693
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 693
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<N_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 692
						  call 'wxe_util':'call'
						      (2638, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'name',2}}] )
	    -| ['compiler_generated'] )
	end
'paneBorder'/1 =
    %% Line 699
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 700
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 701
	      apply 'paneBorder'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'paneBorder',1}}] )
	    -| ['compiler_generated'] )
	end
'paneBorder'/2 =
    %% Line 707
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 708
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 709
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 710
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'visible',Visible},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Visible)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 711
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-paneBorder/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 712
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 712
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 714
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 713
				  call 'wxe_util':'call'
				      (2639, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'paneBorder',2}}] )
	    -| ['compiler_generated'] )
	end
'pinButton'/1 =
    %% Line 720
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 721
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 722
	      apply 'pinButton'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'pinButton',1}}] )
	    -| ['compiler_generated'] )
	end
'pinButton'/2 =
    %% Line 728
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 729
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 730
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 731
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'visible',Visible},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Visible)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 732
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-pinButton/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 733
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 733
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 735
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 734
				  call 'wxe_util':'call'
				      (2640, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'pinButton',2}}] )
	    -| ['compiler_generated'] )
	end
'position'/2 =
    %% Line 740
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 741
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 742
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 744
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 743
		      call 'wxe_util':'call'
			  (2641, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'position',2}}] )
	    -| ['compiler_generated'] )
	end
'resizable'/1 =
    %% Line 750
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 751
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 752
	      apply 'resizable'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'resizable',1}}] )
	    -| ['compiler_generated'] )
	end
'resizable'/2 =
    %% Line 758
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 759
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 760
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 761
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'resizable',Resizable},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Resizable)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 762
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-resizable/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 763
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 763
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 765
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 764
				  call 'wxe_util':'call'
				      (2642, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'resizable',2}}] )
	    -| ['compiler_generated'] )
	end
'right'/1 =
    %% Line 770
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 771
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 773
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 772
		      call 'wxe_util':'call'
			  (2643, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'right',1}}] )
	    -| ['compiler_generated'] )
	end
'rightDockable'/1 =
    %% Line 779
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 780
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 781
	      apply 'rightDockable'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'rightDockable',1}}] )
	    -| ['compiler_generated'] )
	end
'rightDockable'/2 =
    %% Line 787
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 788
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 789
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 790
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'b',B},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (B)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 791
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-rightDockable/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 792
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 792
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 794
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 793
				  call 'wxe_util':'call'
				      (2644, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'rightDockable',2}}] )
	    -| ['compiler_generated'] )
	end
'row'/2 =
    %% Line 799
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Row>
	      when %% Line 800
		call 'erlang':'is_integer'
		    (Row) ->
	      do  %% Line 801
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 803
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Row>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 802
		      call 'wxe_util':'call'
			  (2645, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'row',2}}] )
	    -| ['compiler_generated'] )
	end
'safeSet'/2 =
    %% Line 808
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',SourceRef,SourceT,_cor10}> when 'true' ->
	      do  %% Line 809
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 810
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (SourceT,
				       'wxAuiPaneInfo') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call SourceT:'parent_class'
				    ('wxAuiPaneInfo')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 812
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<SourceRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 811
			  call 'wxe_util':'cast'
			      (2646, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'safeSet',2}}] )
	    -| ['compiler_generated'] )
	end
'setFlag'/3 =
    %% Line 817
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Flag,Option_state>
	      when let <_cor3> =
		    %% Line 818
		    call 'erlang':'is_integer'
			(Flag)
		in  let <_cor4> =
			%% Line 818
			call 'erlang':'is_boolean'
			    (Option_state)
		    in  %% Line 818
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 819
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 821
		      call 'wxe_util':'from_bool'
			  (Option_state)
		  in  let <_cor8> =
			  %% Line 821
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Flag>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 820
			  call 'wxe_util':'call'
			      (2647, _cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'setFlag',3}}] )
	    -| ['compiler_generated'] )
	end
'show'/1 =
    %% Line 827
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 828
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 829
	      apply 'show'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'show',1}}] )
	    -| ['compiler_generated'] )
	end
'show'/2 =
    %% Line 835
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 836
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 837
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 838
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'show',Show},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Show)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 839
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-show/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 840
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 840
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 842
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 841
				  call 'wxe_util':'call'
				      (2648, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'show',2}}] )
	    -| ['compiler_generated'] )
	end
'toolbarPane'/1 =
    %% Line 847
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 848
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 850
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 849
		      call 'wxe_util':'call'
			  (2649, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'toolbarPane',1}}] )
	    -| ['compiler_generated'] )
	end
'top'/1 =
    %% Line 855
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 856
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 858
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 857
		      call 'wxe_util':'call'
			  (2650, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'top',1}}] )
	    -| ['compiler_generated'] )
	end
'topDockable'/1 =
    %% Line 864
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 865
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 866
	      apply 'topDockable'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'topDockable',1}}] )
	    -| ['compiler_generated'] )
	end
'topDockable'/2 =
    %% Line 872
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 873
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 874
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 875
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'b',B},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (B)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 876
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-topDockable/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 877
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 877
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 879
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 878
				  call 'wxe_util':'call'
				      (2651, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'topDockable',2}}] )
	    -| ['compiler_generated'] )
	end
'window'/2 =
    %% Line 884
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',WRef,WT,_cor10}> when 'true' ->
	      do  %% Line 885
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 886
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (WT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call WT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 888
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<WRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 887
			  call 'wxe_util':'call'
			      (2652, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'window',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 892
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 893
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxAuiPaneInfo') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxAuiPaneInfo')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 894
		      call 'wxe_util':'destroy'
			  (2581, Obj)
		      %% Line 895
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxAuiPaneInfo')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxAuiPaneInfo', _cor0)
end