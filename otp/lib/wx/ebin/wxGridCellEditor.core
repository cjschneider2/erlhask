module 'wxGridCellEditor' ['beginEdit'/4,
			   'create'/4,
			   'endEdit'/4,
			   'handleReturn'/2,
			   'isCreated'/1,
			   'module_info'/0,
			   'module_info'/1,
			   'paintBackground'/3,
			   'parent_class'/1,
			   'reset'/1,
			   'setSize'/2,
			   'show'/2,
			   'show'/3,
			   'startingClick'/1,
			   'startingKey'/2]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 33
		'export_type' =
		    %% Line 33
		    [{'wxGridCellEditor',0}],
		%% Line 34
		'deprecated' =
		    %% Line 34
		    [{'endEdit',4}|[{'paintBackground',3}]],
		%% Line 39
		'type' =
		    %% Line 39
		    [{'wxGridCellEditor',{'remote_type',39,[{'atom',39,'wx'}|[{'atom',39,'wx_object'}|[[]]]]},[]}],
		%% Line 41
		'spec' =
		    %% Line 41
		    [{{'create',4},[{'type',41,'bounded_fun',[{'type',41,'fun',[{'type',41,'product',[{'var',41,'This'}|[{'var',41,'Parent'}|[{'var',41,'Id'}|[{'var',41,'EvtHandler'}]]]]}|[{'atom',41,'ok'}]]}|[[{'type',42,'constraint',[{'atom',42,'is_subtype'}|[[{'var',42,'This'}|[{'type',42,'wxGridCellEditor',[]}]]]]}|[{'type',42,'constraint',[{'atom',42,'is_subtype'}|[[{'var',42,'Parent'}|[{'remote_type',42,[{'atom',42,'wxWindow'}|[{'atom',42,'wxWindow'}|[[]]]]}]]]]}|[{'type',42,'constraint',[{'atom',42,'is_subtype'}|[[{'var',42,'Id'}|[{'type',42,'integer',[]}]]]]}|[{'type',42,'constraint',[{'atom',42,'is_subtype'}|[[{'var',42,'EvtHandler'}|[{'remote_type',42,[{'atom',42,'wxEvtHandler'}|[{'atom',42,'wxEvtHandler'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 52
		'spec' =
		    %% Line 52
		    [{{'isCreated',1},[{'type',52,'bounded_fun',[{'type',52,'fun',[{'type',52,'product',[{'var',52,'This'}]}|[{'type',52,'boolean',[]}]]}|[[{'type',53,'constraint',[{'atom',53,'is_subtype'}|[[{'var',53,'This'}|[{'type',53,'wxGridCellEditor',[]}]]]]}]]]}]}],
		%% Line 60
		'spec' =
		    %% Line 60
		    [{{'setSize',2},[{'type',60,'bounded_fun',[{'type',60,'fun',[{'type',60,'product',[{'var',60,'This'}|[{'var',60,'Rect'}]]}|[{'atom',60,'ok'}]]}|[[{'type',61,'constraint',[{'atom',61,'is_subtype'}|[[{'var',61,'This'}|[{'type',61,'wxGridCellEditor',[]}]]]]}|[{'type',61,'constraint',[{'atom',61,'is_subtype'}|[[{'var',61,'Rect'}|[{'type',61,'tuple',[{'ann_type',61,[{'var',61,'X'}|[{'type',61,'integer',[]}]]}|[{'ann_type',61,[{'var',61,'Y'}|[{'type',61,'integer',[]}]]}|[{'ann_type',61,[{'var',61,'W'}|[{'type',61,'integer',[]}]]}|[{'ann_type',61,[{'var',61,'H'}|[{'type',61,'integer',[]}]]}]]]]}]]]]}]]]]}]}],
		%% Line 69
		'spec' =
		    %% Line 69
		    [{{'show',2},[{'type',69,'bounded_fun',[{'type',69,'fun',[{'type',69,'product',[{'var',69,'This'}|[{'var',69,'Show'}]]}|[{'atom',69,'ok'}]]}|[[{'type',70,'constraint',[{'atom',70,'is_subtype'}|[[{'var',70,'This'}|[{'type',70,'wxGridCellEditor',[]}]]]]}|[{'type',70,'constraint',[{'atom',70,'is_subtype'}|[[{'var',70,'Show'}|[{'type',70,'boolean',[]}]]]]}]]]]}]}],
		%% Line 77
		'spec' =
		    %% Line 77
		    [{{'show',3},[{'type',77,'bounded_fun',[{'type',77,'fun',[{'type',77,'product',[{'var',77,'This'}|[{'var',77,'Show'}|[{'type',77,'list',[{'var',77,'Option'}]}]]]}|[{'atom',77,'ok'}]]}|[[{'type',78,'constraint',[{'atom',78,'is_subtype'}|[[{'var',78,'This'}|[{'type',78,'wxGridCellEditor',[]}]]]]}|[{'type',78,'constraint',[{'atom',78,'is_subtype'}|[[{'var',78,'Show'}|[{'type',78,'boolean',[]}]]]]}|[{'type',79,'constraint',[{'atom',79,'is_subtype'}|[[{'var',79,'Option'}|[{'type',79,'tuple',[{'atom',79,'attr'}|[{'remote_type',79,[{'atom',79,'wxGridCellAttr'}|[{'atom',79,'wxGridCellAttr'}|[[]]]]}]]}]]]]}]]]]]}]}],
		%% Line 90
		'spec' =
		    %% Line 90
		    [{{'paintBackground',3},[{'type',90,'bounded_fun',[{'type',90,'fun',[{'type',90,'product',[{'var',90,'This'}|[{'var',90,'RectCell'}|[{'var',90,'Attr'}]]]}|[{'atom',90,'ok'}]]}|[[{'type',91,'constraint',[{'atom',91,'is_subtype'}|[[{'var',91,'This'}|[{'type',91,'wxGridCellEditor',[]}]]]]}|[{'type',91,'constraint',[{'atom',91,'is_subtype'}|[[{'var',91,'RectCell'}|[{'type',91,'tuple',[{'ann_type',91,[{'var',91,'X'}|[{'type',91,'integer',[]}]]}|[{'ann_type',91,[{'var',91,'Y'}|[{'type',91,'integer',[]}]]}|[{'ann_type',91,[{'var',91,'W'}|[{'type',91,'integer',[]}]]}|[{'ann_type',91,[{'var',91,'H'}|[{'type',91,'integer',[]}]]}]]]]}]]]]}|[{'type',91,'constraint',[{'atom',91,'is_subtype'}|[[{'var',91,'Attr'}|[{'remote_type',91,[{'atom',91,'wxGridCellAttr'}|[{'atom',91,'wxGridCellAttr'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 100
		'spec' =
		    %% Line 100
		    [{{'beginEdit',4},[{'type',100,'bounded_fun',[{'type',100,'fun',[{'type',100,'product',[{'var',100,'This'}|[{'var',100,'Row'}|[{'var',100,'Col'}|[{'var',100,'Grid'}]]]]}|[{'atom',100,'ok'}]]}|[[{'type',101,'constraint',[{'atom',101,'is_subtype'}|[[{'var',101,'This'}|[{'type',101,'wxGridCellEditor',[]}]]]]}|[{'type',101,'constraint',[{'atom',101,'is_subtype'}|[[{'var',101,'Row'}|[{'type',101,'integer',[]}]]]]}|[{'type',101,'constraint',[{'atom',101,'is_subtype'}|[[{'var',101,'Col'}|[{'type',101,'integer',[]}]]]]}|[{'type',101,'constraint',[{'atom',101,'is_subtype'}|[[{'var',101,'Grid'}|[{'remote_type',101,[{'atom',101,'wxGrid'}|[{'atom',101,'wxGrid'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 110
		'spec' =
		    %% Line 110
		    [{{'endEdit',4},[{'type',110,'bounded_fun',[{'type',110,'fun',[{'type',110,'product',[{'var',110,'This'}|[{'var',110,'Row'}|[{'var',110,'Col'}|[{'var',110,'Grid'}]]]]}|[{'type',110,'boolean',[]}]]}|[[{'type',111,'constraint',[{'atom',111,'is_subtype'}|[[{'var',111,'This'}|[{'type',111,'wxGridCellEditor',[]}]]]]}|[{'type',111,'constraint',[{'atom',111,'is_subtype'}|[[{'var',111,'Row'}|[{'type',111,'integer',[]}]]]]}|[{'type',111,'constraint',[{'atom',111,'is_subtype'}|[[{'var',111,'Col'}|[{'type',111,'integer',[]}]]]]}|[{'type',111,'constraint',[{'atom',111,'is_subtype'}|[[{'var',111,'Grid'}|[{'remote_type',111,[{'atom',111,'wxGrid'}|[{'atom',111,'wxGrid'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 120
		'spec' =
		    %% Line 120
		    [{{'reset',1},[{'type',120,'bounded_fun',[{'type',120,'fun',[{'type',120,'product',[{'var',120,'This'}]}|[{'atom',120,'ok'}]]}|[[{'type',121,'constraint',[{'atom',121,'is_subtype'}|[[{'var',121,'This'}|[{'type',121,'wxGridCellEditor',[]}]]]]}]]]}]}],
		%% Line 128
		'spec' =
		    %% Line 128
		    [{{'startingKey',2},[{'type',128,'bounded_fun',[{'type',128,'fun',[{'type',128,'product',[{'var',128,'This'}|[{'var',128,'Event'}]]}|[{'atom',128,'ok'}]]}|[[{'type',129,'constraint',[{'atom',129,'is_subtype'}|[[{'var',129,'This'}|[{'type',129,'wxGridCellEditor',[]}]]]]}|[{'type',129,'constraint',[{'atom',129,'is_subtype'}|[[{'var',129,'Event'}|[{'remote_type',129,[{'atom',129,'wxKeyEvent'}|[{'atom',129,'wxKeyEvent'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 137
		'spec' =
		    %% Line 137
		    [{{'startingClick',1},[{'type',137,'bounded_fun',[{'type',137,'fun',[{'type',137,'product',[{'var',137,'This'}]}|[{'atom',137,'ok'}]]}|[[{'type',138,'constraint',[{'atom',138,'is_subtype'}|[[{'var',138,'This'}|[{'type',138,'wxGridCellEditor',[]}]]]]}]]]}]}],
		%% Line 145
		'spec' =
		    %% Line 145
		    [{{'handleReturn',2},[{'type',145,'bounded_fun',[{'type',145,'fun',[{'type',145,'product',[{'var',145,'This'}|[{'var',145,'Event'}]]}|[{'atom',145,'ok'}]]}|[[{'type',146,'constraint',[{'atom',146,'is_subtype'}|[[{'var',146,'This'}|[{'type',146,'wxGridCellEditor',[]}]]]]}|[{'type',146,'constraint',[{'atom',146,'is_subtype'}|[[{'var',146,'Event'}|[{'remote_type',146,[{'atom',146,'wxKeyEvent'}|[{'atom',146,'wxKeyEvent'}|[[]]]]}]]]]}]]]]}]}]]
'parent_class'/1 =
    %% Line 37
    fun (_cor0) ->
	call 'erlang':'error'
	    ({'badtype','wxGridCellEditor'})
'create'/4 =
    %% Line 43
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor15},{'wx_ref',ParentRef,ParentT,_cor16},Id,{'wx_ref',EvtHandlerRef,EvtHandlerT,_cor17}>
	      when %% Line 44
		call 'erlang':'is_integer'
		    (Id) ->
	      do  %% Line 45
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGridCellEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGridCellEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 46
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      do  %% Line 47
			  ( case <> of
			      ( <>
				    when call 'erlang':'=:='
					  (EvtHandlerT,
					   'wxEvtHandler') ->
				    'ok'
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    call EvtHandlerT:'parent_class'
					('wxEvtHandler')
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
			  let <_cor10> =
			      %% Line 49
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				#<Id>(32,1,'integer',['unsigned'|['native']]),
				#<EvtHandlerRef>(32,1,'integer',['unsigned'|['native']])}#
			  in  %% Line 48
			      call 'wxe_util':'cast'
				  (561, _cor10)
	  ( <_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'create',4}}] )
	    -| ['compiler_generated'] )
	end
'isCreated'/1 =
    %% Line 54
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 55
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGridCellEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGridCellEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 57
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 56
		      call 'wxe_util':'call'
			  (562, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isCreated',1}}] )
	    -| ['compiler_generated'] )
	end
'setSize'/2 =
    %% Line 62
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor13},{RectX,RectY,RectW,RectH}>
	      when %% Line 63
		try
		    let <_cor2> =
			call 'erlang':'is_integer'
			    (RectX)
		    in  let <_cor3> =
			    call 'erlang':'is_integer'
				(RectY)
			in  let <_cor4> =
				call 'erlang':'is_integer'
				    (RectW)
			    in  let <_cor5> =
				    call 'erlang':'is_integer'
					(RectH)
				in  let <_cor6> =
					call 'erlang':'and'
					    (_cor4, _cor5)
				    in  let <_cor7> =
					    call 'erlang':'and'
						(_cor3, _cor6)
					in  call 'erlang':'and'
						(_cor2, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 64
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGridCellEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGridCellEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor10> =
		      %% Line 66
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<RectX>(32,1,'integer',['unsigned'|['native']]),
			#<RectY>(32,1,'integer',['unsigned'|['native']]),
			#<RectW>(32,1,'integer',['unsigned'|['native']]),
			#<RectH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 65
		      call 'wxe_util':'cast'
			  (563, _cor10)
	  ( <_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11})
		  -| [{'function_name',{'setSize',2}}] )
	    -| ['compiler_generated'] )
	end
'show'/2 =
    %% Line 72
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <This = {'wx_ref',_cor5,_cor6,_cor7},Show>
	      when %% Line 73
		call 'erlang':'is_boolean'
		    (Show) ->
	      %% Line 74
	      apply 'show'/3
		  (This, Show, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'show',2}}] )
	    -| ['compiler_generated'] )
	end
'show'/3 =
    %% Line 80
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor22},Show,Options>
	      when let <_cor3> =
		    %% Line 81
		    call 'erlang':'is_boolean'
			(Show)
		in  let <_cor4> =
			%% Line 81
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 81
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 82
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGridCellEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGridCellEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 83
		      ( fun (_cor11,_cor10) ->
			    case <_cor11,_cor10> of
			      <{'attr',{'wx_ref',AttrRef,AttrT,_cor23}},Acc> when 'true' ->
				  do  ( case <> of
					  ( <>
						when call 'erlang':'=:='
						      (AttrT,
						       'wxGridCellAttr') ->
						'ok'
					    -| ['compiler_generated'] )
					  ( <> when 'true' ->
						call AttrT:'parent_class'
						    ('wxGridCellAttr')
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				      let <_cor9> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<AttrRef>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor9|Acc]
			      %% Line 84
			      <BadOpt,_cor24> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-show/3-fun-0-'}}] )
		  in  let <_cor15> =
			  %% Line 85
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 85
			      call 'erlang':'list_to_binary'
				  (_cor15)
			  in  let <_cor17> =
				  %% Line 87
				  call 'wxe_util':'from_bool'
				      (Show)
			      in  let <_cor18> =
				      %% Line 87
				      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
					#<_cor17>(32,1,'integer',['unsigned'|['native']]),
					#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				  in  %% Line 86
				      call 'wxe_util':'cast'
					  (564, _cor18)
	  ( <_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor21,_cor20,_cor19})
		  -| [{'function_name',{'show',3}}] )
	    -| ['compiler_generated'] )
	end
'paintBackground'/3 =
    %% Line 92
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor17},{RectCellX,RectCellY,RectCellW,RectCellH},{'wx_ref',AttrRef,AttrT,_cor18}>
	      when %% Line 93
		try
		    let <_cor3> =
			call 'erlang':'is_integer'
			    (RectCellX)
		    in  let <_cor4> =
			    call 'erlang':'is_integer'
				(RectCellY)
			in  let <_cor5> =
				call 'erlang':'is_integer'
				    (RectCellW)
			    in  let <_cor6> =
				    call 'erlang':'is_integer'
					(RectCellH)
				in  let <_cor7> =
					call 'erlang':'and'
					    (_cor5, _cor6)
				    in  let <_cor8> =
					    call 'erlang':'and'
						(_cor4, _cor7)
					in  call 'erlang':'and'
						(_cor3, _cor8)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 94
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGridCellEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGridCellEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 95
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (AttrT,
				       'wxGridCellAttr') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call AttrT:'parent_class'
				    ('wxGridCellAttr')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor13> =
			  %% Line 97
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<RectCellX>(32,1,'integer',['unsigned'|['native']]),
			    #<RectCellY>(32,1,'integer',['unsigned'|['native']]),
			    #<RectCellW>(32,1,'integer',['unsigned'|['native']]),
			    #<RectCellH>(32,1,'integer',['unsigned'|['native']]),
			    #<AttrRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 96
			  call 'wxe_util':'cast'
			      (565, _cor13)
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14})
		  -| [{'function_name',{'paintBackground',3}}] )
	    -| ['compiler_generated'] )
	end
'beginEdit'/4 =
    %% Line 102
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor15},Row,Col,{'wx_ref',GridRef,GridT,_cor16}>
	      when let <_cor4> =
		    %% Line 103
		    call 'erlang':'is_integer'
			(Row)
		in  let <_cor5> =
			%% Line 103
			call 'erlang':'is_integer'
			    (Col)
		    in  %% Line 103
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 104
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGridCellEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGridCellEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 105
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (GridT,
				       'wxGrid') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call GridT:'parent_class'
				    ('wxGrid')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor10> =
			  %% Line 107
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Row>(32,1,'integer',['unsigned'|['native']]),
			    #<Col>(32,1,'integer',['unsigned'|['native']]),
			    #<GridRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 106
			  call 'wxe_util':'cast'
			      (566, _cor10)
	  ( <_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'beginEdit',4}}] )
	    -| ['compiler_generated'] )
	end
'endEdit'/4 =
    %% Line 112
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor15},Row,Col,{'wx_ref',GridRef,GridT,_cor16}>
	      when let <_cor4> =
		    %% Line 113
		    call 'erlang':'is_integer'
			(Row)
		in  let <_cor5> =
			%% Line 113
			call 'erlang':'is_integer'
			    (Col)
		    in  %% Line 113
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 114
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGridCellEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGridCellEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 115
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (GridT,
				       'wxGrid') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call GridT:'parent_class'
				    ('wxGrid')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor10> =
			  %% Line 117
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Row>(32,1,'integer',['unsigned'|['native']]),
			    #<Col>(32,1,'integer',['unsigned'|['native']]),
			    #<GridRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 116
			  call 'wxe_util':'call'
			      (567, _cor10)
	  ( <_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'endEdit',4}}] )
	    -| ['compiler_generated'] )
	end
'reset'/1 =
    %% Line 122
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 123
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGridCellEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGridCellEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 125
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 124
		      call 'wxe_util':'cast'
			  (568, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'reset',1}}] )
	    -| ['compiler_generated'] )
	end
'startingKey'/2 =
    %% Line 130
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',EventRef,EventT,_cor10}> when 'true' ->
	      do  %% Line 131
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGridCellEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGridCellEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 132
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (EventT,
				       'wxKeyEvent') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call EventT:'parent_class'
				    ('wxKeyEvent')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 134
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<EventRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 133
			  call 'wxe_util':'cast'
			      (569, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'startingKey',2}}] )
	    -| ['compiler_generated'] )
	end
'startingClick'/1 =
    %% Line 139
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 140
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGridCellEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGridCellEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 142
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 141
		      call 'wxe_util':'cast'
			  (570, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'startingClick',1}}] )
	    -| ['compiler_generated'] )
	end
'handleReturn'/2 =
    %% Line 147
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',EventRef,EventT,_cor10}> when 'true' ->
	      do  %% Line 148
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGridCellEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGridCellEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 149
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (EventT,
				       'wxKeyEvent') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call EventT:'parent_class'
				    ('wxKeyEvent')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 151
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<EventRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 150
			  call 'wxe_util':'cast'
			      (571, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'handleReturn',2}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxGridCellEditor')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxGridCellEditor', _cor0)
end