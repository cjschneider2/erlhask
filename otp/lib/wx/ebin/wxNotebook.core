module 'wxNotebook' ['addPage'/3,
		     'addPage'/4,
		     'advanceSelection'/1,
		     'advanceSelection'/2,
		     'assignImageList'/2,
		     'cacheBestSize'/2,
		     'captureMouse'/1,
		     'center'/1,
		     'center'/2,
		     'centerOnParent'/1,
		     'centerOnParent'/2,
		     'centre'/1,
		     'centre'/2,
		     'centreOnParent'/1,
		     'centreOnParent'/2,
		     'changeSelection'/2,
		     'clearBackground'/1,
		     'clientToScreen'/2,
		     'clientToScreen'/3,
		     'close'/1,
		     'close'/2,
		     'connect'/2,
		     'connect'/3,
		     'convertDialogToPixels'/2,
		     'convertPixelsToDialog'/2,
		     'create'/3,
		     'create'/4,
		     'deleteAllPages'/1,
		     'deletePage'/2,
		     'destroy'/1,
		     'destroyChildren'/1,
		     'disable'/1,
		     'disconnect'/1,
		     'disconnect'/2,
		     'disconnect'/3,
		     'enable'/1,
		     'enable'/2,
		     'findWindow'/2,
		     'fit'/1,
		     'fitInside'/1,
		     'freeze'/1,
		     'getAcceleratorTable'/1,
		     'getBackgroundColour'/1,
		     'getBackgroundStyle'/1,
		     'getBestSize'/1,
		     'getCaret'/1,
		     'getCharHeight'/1,
		     'getCharWidth'/1,
		     'getChildren'/1,
		     'getClientSize'/1,
		     'getContainingSizer'/1,
		     'getCurrentPage'/1,
		     'getCursor'/1,
		     'getDropTarget'/1,
		     'getEventHandler'/1,
		     'getExtraStyle'/1,
		     'getFont'/1,
		     'getForegroundColour'/1,
		     'getGrandParent'/1,
		     'getHandle'/1,
		     'getHelpText'/1,
		     'getId'/1,
		     'getImageList'/1,
		     'getLabel'/1,
		     'getMaxSize'/1,
		     'getMinSize'/1,
		     'getName'/1,
		     'getPage'/2,
		     'getPageCount'/1,
		     'getPageImage'/2,
		     'getPageText'/2,
		     'getParent'/1,
		     'getPosition'/1,
		     'getRect'/1,
		     'getRowCount'/1,
		     'getScreenPosition'/1,
		     'getScreenRect'/1,
		     'getScrollPos'/2,
		     'getScrollRange'/2,
		     'getScrollThumb'/2,
		     'getSelection'/1,
		     'getSize'/1,
		     'getSizer'/1,
		     'getTextExtent'/2,
		     'getTextExtent'/3,
		     'getThemeBackgroundColour'/1,
		     'getToolTip'/1,
		     'getUpdateRegion'/1,
		     'getVirtualSize'/1,
		     'getWindowStyleFlag'/1,
		     'getWindowVariant'/1,
		     'hasCapture'/1,
		     'hasScrollbar'/2,
		     'hasTransparentBackground'/1,
		     'hide'/1,
		     'hitTest'/2,
		     'inheritAttributes'/1,
		     'initDialog'/1,
		     'insertPage'/4,
		     'insertPage'/5,
		     'invalidateBestSize'/1,
		     'isEnabled'/1,
		     'isExposed'/2,
		     'isExposed'/3,
		     'isExposed'/5,
		     'isRetained'/1,
		     'isShown'/1,
		     'isTopLevel'/1,
		     'layout'/1,
		     'lineDown'/1,
		     'lineUp'/1,
		     'lower'/1,
		     'makeModal'/1,
		     'makeModal'/2,
		     'module_info'/0,
		     'module_info'/1,
		     'move'/2,
		     'move'/3,
		     'move'/4,
		     'moveAfterInTabOrder'/2,
		     'moveBeforeInTabOrder'/2,
		     'navigate'/1,
		     'navigate'/2,
		     'new'/0,
		     'new'/2,
		     'new'/3,
		     'pageDown'/1,
		     'pageUp'/1,
		     'parent_class'/1,
		     'popEventHandler'/1,
		     'popEventHandler'/2,
		     'popupMenu'/2,
		     'popupMenu'/3,
		     'popupMenu'/4,
		     'raise'/1,
		     'refresh'/1,
		     'refresh'/2,
		     'refreshRect'/2,
		     'refreshRect'/3,
		     'releaseMouse'/1,
		     'removeChild'/2,
		     'removePage'/2,
		     'reparent'/2,
		     'screenToClient'/1,
		     'screenToClient'/2,
		     'scrollLines'/2,
		     'scrollPages'/2,
		     'scrollWindow'/3,
		     'scrollWindow'/4,
		     'setAcceleratorTable'/2,
		     'setAutoLayout'/2,
		     'setBackgroundColour'/2,
		     'setBackgroundStyle'/2,
		     'setCaret'/2,
		     'setClientSize'/2,
		     'setClientSize'/3,
		     'setContainingSizer'/2,
		     'setCursor'/2,
		     'setDropTarget'/2,
		     'setExtraStyle'/2,
		     'setFocus'/1,
		     'setFocusFromKbd'/1,
		     'setFont'/2,
		     'setForegroundColour'/2,
		     'setHelpText'/2,
		     'setId'/2,
		     'setImageList'/2,
		     'setLabel'/2,
		     'setMaxSize'/2,
		     'setMinSize'/2,
		     'setName'/2,
		     'setOwnBackgroundColour'/2,
		     'setOwnFont'/2,
		     'setOwnForegroundColour'/2,
		     'setPadding'/2,
		     'setPageImage'/3,
		     'setPageSize'/2,
		     'setPageText'/3,
		     'setPalette'/2,
		     'setScrollPos'/3,
		     'setScrollPos'/4,
		     'setScrollbar'/5,
		     'setScrollbar'/6,
		     'setSelection'/2,
		     'setSize'/2,
		     'setSize'/3,
		     'setSize'/5,
		     'setSize'/6,
		     'setSizeHints'/2,
		     'setSizeHints'/3,
		     'setSizeHints'/4,
		     'setSizer'/2,
		     'setSizer'/3,
		     'setSizerAndFit'/2,
		     'setSizerAndFit'/3,
		     'setThemeEnabled'/2,
		     'setToolTip'/2,
		     'setVirtualSize'/2,
		     'setVirtualSize'/3,
		     'setVirtualSizeHints'/2,
		     'setVirtualSizeHints'/3,
		     'setVirtualSizeHints'/4,
		     'setWindowStyle'/2,
		     'setWindowStyleFlag'/2,
		     'setWindowVariant'/2,
		     'shouldInheritColours'/1,
		     'show'/1,
		     'show'/2,
		     'thaw'/1,
		     'transferDataFromWindow'/1,
		     'transferDataToWindow'/1,
		     'update'/1,
		     'updateWindowUI'/1,
		     'updateWindowUI'/2,
		     'validate'/1,
		     'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 77
		'export_type' =
		    %% Line 77
		    [{'wxNotebook',0}],
		%% Line 84
		'type' =
		    %% Line 84
		    [{'wxNotebook',{'remote_type',84,[{'atom',84,'wx'}|[{'atom',84,'wx_object'}|[[]]]]},[]}],
		%% Line 86
		'spec' =
		    %% Line 86
		    [{{'new',0},[{'type',86,'fun',[{'type',86,'product',[]}|[{'type',86,'wxNotebook',[]}]]}]}],
		%% Line 92
		'spec' =
		    %% Line 92
		    [{{'new',2},[{'type',92,'bounded_fun',[{'type',92,'fun',[{'type',92,'product',[{'var',92,'Parent'}|[{'var',92,'Winid'}]]}|[{'type',92,'wxNotebook',[]}]]}|[[{'type',93,'constraint',[{'atom',93,'is_subtype'}|[[{'var',93,'Parent'}|[{'remote_type',93,[{'atom',93,'wxWindow'}|[{'atom',93,'wxWindow'}|[[]]]]}]]]]}|[{'type',93,'constraint',[{'atom',93,'is_subtype'}|[[{'var',93,'Winid'}|[{'type',93,'integer',[]}]]]]}]]]]}]}],
		%% Line 100
		'spec' =
		    %% Line 100
		    [{{'new',3},[{'type',100,'bounded_fun',[{'type',100,'fun',[{'type',100,'product',[{'var',100,'Parent'}|[{'var',100,'Winid'}|[{'type',100,'list',[{'var',100,'Option'}]}]]]}|[{'type',100,'wxNotebook',[]}]]}|[[{'type',101,'constraint',[{'atom',101,'is_subtype'}|[[{'var',101,'Parent'}|[{'remote_type',101,[{'atom',101,'wxWindow'}|[{'atom',101,'wxWindow'}|[[]]]]}]]]]}|[{'type',101,'constraint',[{'atom',101,'is_subtype'}|[[{'var',101,'Winid'}|[{'type',101,'integer',[]}]]]]}|[{'type',102,'constraint',[{'atom',102,'is_subtype'}|[[{'var',102,'Option'}|[{'type',102,'union',[{'type',102,'tuple',[{'atom',102,'pos'}|[{'type',102,'tuple',[{'ann_type',102,[{'var',102,'X'}|[{'type',102,'integer',[]}]]}|[{'ann_type',102,[{'var',102,'Y'}|[{'type',102,'integer',[]}]]}]]}]]}|[{'type',103,'tuple',[{'atom',103,'size'}|[{'type',103,'tuple',[{'ann_type',103,[{'var',103,'W'}|[{'type',103,'integer',[]}]]}|[{'ann_type',103,[{'var',103,'H'}|[{'type',103,'integer',[]}]]}]]}]]}|[{'type',104,'tuple',[{'atom',104,'style'}|[{'type',104,'integer',[]}]]}]]]}]]]]}]]]]]}]}],
		%% Line 117
		'spec' =
		    %% Line 117
		    [{{'addPage',3},[{'type',117,'bounded_fun',[{'type',117,'fun',[{'type',117,'product',[{'var',117,'This'}|[{'var',117,'Page'}|[{'var',117,'Text'}]]]}|[{'type',117,'boolean',[]}]]}|[[{'type',118,'constraint',[{'atom',118,'is_subtype'}|[[{'var',118,'This'}|[{'type',118,'wxNotebook',[]}]]]]}|[{'type',118,'constraint',[{'atom',118,'is_subtype'}|[[{'var',118,'Page'}|[{'remote_type',118,[{'atom',118,'wxWindow'}|[{'atom',118,'wxWindow'}|[[]]]]}]]]]}|[{'type',118,'constraint',[{'atom',118,'is_subtype'}|[[{'var',118,'Text'}|[{'remote_type',118,[{'atom',118,'unicode'}|[{'atom',118,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 125
		'spec' =
		    %% Line 125
		    [{{'addPage',4},[{'type',125,'bounded_fun',[{'type',125,'fun',[{'type',125,'product',[{'var',125,'This'}|[{'var',125,'Page'}|[{'var',125,'Text'}|[{'type',125,'list',[{'var',125,'Option'}]}]]]]}|[{'type',125,'boolean',[]}]]}|[[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'This'}|[{'type',126,'wxNotebook',[]}]]]]}|[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'Page'}|[{'remote_type',126,[{'atom',126,'wxWindow'}|[{'atom',126,'wxWindow'}|[[]]]]}]]]]}|[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'Text'}|[{'remote_type',126,[{'atom',126,'unicode'}|[{'atom',126,'chardata'}|[[]]]]}]]]]}|[{'type',127,'constraint',[{'atom',127,'is_subtype'}|[[{'var',127,'Option'}|[{'type',127,'union',[{'type',127,'tuple',[{'atom',127,'bSelect'}|[{'type',127,'boolean',[]}]]}|[{'type',128,'tuple',[{'atom',128,'imageId'}|[{'type',128,'integer',[]}]]}]]}]]]]}]]]]]]}]}],
		%% Line 142
		'spec' =
		    %% Line 142
		    [{{'advanceSelection',1},[{'type',142,'bounded_fun',[{'type',142,'fun',[{'type',142,'product',[{'var',142,'This'}]}|[{'atom',142,'ok'}]]}|[[{'type',143,'constraint',[{'atom',143,'is_subtype'}|[[{'var',143,'This'}|[{'type',143,'wxNotebook',[]}]]]]}]]]}]}],
		%% Line 150
		'spec' =
		    %% Line 150
		    [{{'advanceSelection',2},[{'type',150,'bounded_fun',[{'type',150,'fun',[{'type',150,'product',[{'var',150,'This'}|[{'type',150,'list',[{'var',150,'Option'}]}]]}|[{'atom',150,'ok'}]]}|[[{'type',151,'constraint',[{'atom',151,'is_subtype'}|[[{'var',151,'This'}|[{'type',151,'wxNotebook',[]}]]]]}|[{'type',152,'constraint',[{'atom',152,'is_subtype'}|[[{'var',152,'Option'}|[{'type',152,'tuple',[{'atom',152,'forward'}|[{'type',152,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 163
		'spec' =
		    %% Line 163
		    [{{'assignImageList',2},[{'type',163,'bounded_fun',[{'type',163,'fun',[{'type',163,'product',[{'var',163,'This'}|[{'var',163,'ImageList'}]]}|[{'atom',163,'ok'}]]}|[[{'type',164,'constraint',[{'atom',164,'is_subtype'}|[[{'var',164,'This'}|[{'type',164,'wxNotebook',[]}]]]]}|[{'type',164,'constraint',[{'atom',164,'is_subtype'}|[[{'var',164,'ImageList'}|[{'remote_type',164,[{'atom',164,'wxImageList'}|[{'atom',164,'wxImageList'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 172
		'spec' =
		    %% Line 172
		    [{{'create',3},[{'type',172,'bounded_fun',[{'type',172,'fun',[{'type',172,'product',[{'var',172,'This'}|[{'var',172,'Parent'}|[{'var',172,'Id'}]]]}|[{'type',172,'boolean',[]}]]}|[[{'type',173,'constraint',[{'atom',173,'is_subtype'}|[[{'var',173,'This'}|[{'type',173,'wxNotebook',[]}]]]]}|[{'type',173,'constraint',[{'atom',173,'is_subtype'}|[[{'var',173,'Parent'}|[{'remote_type',173,[{'atom',173,'wxWindow'}|[{'atom',173,'wxWindow'}|[[]]]]}]]]]}|[{'type',173,'constraint',[{'atom',173,'is_subtype'}|[[{'var',173,'Id'}|[{'type',173,'integer',[]}]]]]}]]]]]}]}],
		%% Line 180
		'spec' =
		    %% Line 180
		    [{{'create',4},[{'type',180,'bounded_fun',[{'type',180,'fun',[{'type',180,'product',[{'var',180,'This'}|[{'var',180,'Parent'}|[{'var',180,'Id'}|[{'type',180,'list',[{'var',180,'Option'}]}]]]]}|[{'type',180,'boolean',[]}]]}|[[{'type',181,'constraint',[{'atom',181,'is_subtype'}|[[{'var',181,'This'}|[{'type',181,'wxNotebook',[]}]]]]}|[{'type',181,'constraint',[{'atom',181,'is_subtype'}|[[{'var',181,'Parent'}|[{'remote_type',181,[{'atom',181,'wxWindow'}|[{'atom',181,'wxWindow'}|[[]]]]}]]]]}|[{'type',181,'constraint',[{'atom',181,'is_subtype'}|[[{'var',181,'Id'}|[{'type',181,'integer',[]}]]]]}|[{'type',182,'constraint',[{'atom',182,'is_subtype'}|[[{'var',182,'Option'}|[{'type',182,'union',[{'type',182,'tuple',[{'atom',182,'pos'}|[{'type',182,'tuple',[{'ann_type',182,[{'var',182,'X'}|[{'type',182,'integer',[]}]]}|[{'ann_type',182,[{'var',182,'Y'}|[{'type',182,'integer',[]}]]}]]}]]}|[{'type',183,'tuple',[{'atom',183,'size'}|[{'type',183,'tuple',[{'ann_type',183,[{'var',183,'W'}|[{'type',183,'integer',[]}]]}|[{'ann_type',183,[{'var',183,'H'}|[{'type',183,'integer',[]}]]}]]}]]}|[{'type',184,'tuple',[{'atom',184,'style'}|[{'type',184,'integer',[]}]]}]]]}]]]]}]]]]]]}]}],
		%% Line 198
		'spec' =
		    %% Line 198
		    [{{'deleteAllPages',1},[{'type',198,'bounded_fun',[{'type',198,'fun',[{'type',198,'product',[{'var',198,'This'}]}|[{'type',198,'boolean',[]}]]}|[[{'type',199,'constraint',[{'atom',199,'is_subtype'}|[[{'var',199,'This'}|[{'type',199,'wxNotebook',[]}]]]]}]]]}]}],
		%% Line 206
		'spec' =
		    %% Line 206
		    [{{'deletePage',2},[{'type',206,'bounded_fun',[{'type',206,'fun',[{'type',206,'product',[{'var',206,'This'}|[{'var',206,'NPage'}]]}|[{'type',206,'boolean',[]}]]}|[[{'type',207,'constraint',[{'atom',207,'is_subtype'}|[[{'var',207,'This'}|[{'type',207,'wxNotebook',[]}]]]]}|[{'type',207,'constraint',[{'atom',207,'is_subtype'}|[[{'var',207,'NPage'}|[{'type',207,'integer',[]}]]]]}]]]]}]}],
		%% Line 215
		'spec' =
		    %% Line 215
		    [{{'removePage',2},[{'type',215,'bounded_fun',[{'type',215,'fun',[{'type',215,'product',[{'var',215,'This'}|[{'var',215,'NPage'}]]}|[{'type',215,'boolean',[]}]]}|[[{'type',216,'constraint',[{'atom',216,'is_subtype'}|[[{'var',216,'This'}|[{'type',216,'wxNotebook',[]}]]]]}|[{'type',216,'constraint',[{'atom',216,'is_subtype'}|[[{'var',216,'NPage'}|[{'type',216,'integer',[]}]]]]}]]]]}]}],
		%% Line 224
		'spec' =
		    %% Line 224
		    [{{'getCurrentPage',1},[{'type',224,'bounded_fun',[{'type',224,'fun',[{'type',224,'product',[{'var',224,'This'}]}|[{'remote_type',224,[{'atom',224,'wxWindow'}|[{'atom',224,'wxWindow'}|[[]]]]}]]}|[[{'type',225,'constraint',[{'atom',225,'is_subtype'}|[[{'var',225,'This'}|[{'type',225,'wxNotebook',[]}]]]]}]]]}]}],
		%% Line 232
		'spec' =
		    %% Line 232
		    [{{'getImageList',1},[{'type',232,'bounded_fun',[{'type',232,'fun',[{'type',232,'product',[{'var',232,'This'}]}|[{'remote_type',232,[{'atom',232,'wxImageList'}|[{'atom',232,'wxImageList'}|[[]]]]}]]}|[[{'type',233,'constraint',[{'atom',233,'is_subtype'}|[[{'var',233,'This'}|[{'type',233,'wxNotebook',[]}]]]]}]]]}]}],
		%% Line 240
		'spec' =
		    %% Line 240
		    [{{'getPage',2},[{'type',240,'bounded_fun',[{'type',240,'fun',[{'type',240,'product',[{'var',240,'This'}|[{'var',240,'N'}]]}|[{'remote_type',240,[{'atom',240,'wxWindow'}|[{'atom',240,'wxWindow'}|[[]]]]}]]}|[[{'type',241,'constraint',[{'atom',241,'is_subtype'}|[[{'var',241,'This'}|[{'type',241,'wxNotebook',[]}]]]]}|[{'type',241,'constraint',[{'atom',241,'is_subtype'}|[[{'var',241,'N'}|[{'type',241,'integer',[]}]]]]}]]]]}]}],
		%% Line 249
		'spec' =
		    %% Line 249
		    [{{'getPageCount',1},[{'type',249,'bounded_fun',[{'type',249,'fun',[{'type',249,'product',[{'var',249,'This'}]}|[{'type',249,'integer',[]}]]}|[[{'type',250,'constraint',[{'atom',250,'is_subtype'}|[[{'var',250,'This'}|[{'type',250,'wxNotebook',[]}]]]]}]]]}]}],
		%% Line 257
		'spec' =
		    %% Line 257
		    [{{'getPageImage',2},[{'type',257,'bounded_fun',[{'type',257,'fun',[{'type',257,'product',[{'var',257,'This'}|[{'var',257,'NPage'}]]}|[{'type',257,'integer',[]}]]}|[[{'type',258,'constraint',[{'atom',258,'is_subtype'}|[[{'var',258,'This'}|[{'type',258,'wxNotebook',[]}]]]]}|[{'type',258,'constraint',[{'atom',258,'is_subtype'}|[[{'var',258,'NPage'}|[{'type',258,'integer',[]}]]]]}]]]]}]}],
		%% Line 266
		'spec' =
		    %% Line 266
		    [{{'getPageText',2},[{'type',266,'bounded_fun',[{'type',266,'fun',[{'type',266,'product',[{'var',266,'This'}|[{'var',266,'NPage'}]]}|[{'remote_type',266,[{'atom',266,'unicode'}|[{'atom',266,'charlist'}|[[]]]]}]]}|[[{'type',267,'constraint',[{'atom',267,'is_subtype'}|[[{'var',267,'This'}|[{'type',267,'wxNotebook',[]}]]]]}|[{'type',267,'constraint',[{'atom',267,'is_subtype'}|[[{'var',267,'NPage'}|[{'type',267,'integer',[]}]]]]}]]]]}]}],
		%% Line 275
		'spec' =
		    %% Line 275
		    [{{'getRowCount',1},[{'type',275,'bounded_fun',[{'type',275,'fun',[{'type',275,'product',[{'var',275,'This'}]}|[{'type',275,'integer',[]}]]}|[[{'type',276,'constraint',[{'atom',276,'is_subtype'}|[[{'var',276,'This'}|[{'type',276,'wxNotebook',[]}]]]]}]]]}]}],
		%% Line 283
		'spec' =
		    %% Line 283
		    [{{'getSelection',1},[{'type',283,'bounded_fun',[{'type',283,'fun',[{'type',283,'product',[{'var',283,'This'}]}|[{'type',283,'integer',[]}]]}|[[{'type',284,'constraint',[{'atom',284,'is_subtype'}|[[{'var',284,'This'}|[{'type',284,'wxNotebook',[]}]]]]}]]]}]}],
		%% Line 291
		'spec' =
		    %% Line 291
		    [{{'getThemeBackgroundColour',1},[{'type',291,'bounded_fun',[{'type',291,'fun',[{'type',291,'product',[{'var',291,'This'}]}|[{'remote_type',291,[{'atom',291,'wx'}|[{'atom',291,'wx_colour4'}|[[]]]]}]]}|[[{'type',292,'constraint',[{'atom',292,'is_subtype'}|[[{'var',292,'This'}|[{'type',292,'wxNotebook',[]}]]]]}]]]}]}],
		%% Line 299
		'spec' =
		    %% Line 299
		    [{{'hitTest',2},[{'type',299,'bounded_fun',[{'type',299,'fun',[{'type',299,'product',[{'var',299,'This'}|[{'var',299,'Pt'}]]}|[{'var',299,'Result'}]]}|[[{'type',300,'constraint',[{'atom',300,'is_subtype'}|[[{'var',300,'Result'}|[{'type',300,'tuple',[{'ann_type',300,[{'var',300,'Res'}|[{'type',300,'integer',[]}]]}|[{'ann_type',300,[{'var',300,'Flags'}|[{'type',300,'integer',[]}]]}]]}]]]]}|[{'type',301,'constraint',[{'atom',301,'is_subtype'}|[[{'var',301,'This'}|[{'type',301,'wxNotebook',[]}]]]]}|[{'type',301,'constraint',[{'atom',301,'is_subtype'}|[[{'var',301,'Pt'}|[{'type',301,'tuple',[{'ann_type',301,[{'var',301,'X'}|[{'type',301,'integer',[]}]]}|[{'ann_type',301,[{'var',301,'Y'}|[{'type',301,'integer',[]}]]}]]}]]]]}]]]]]}]}],
		%% Line 309
		'spec' =
		    %% Line 309
		    [{{'insertPage',4},[{'type',309,'bounded_fun',[{'type',309,'fun',[{'type',309,'product',[{'var',309,'This'}|[{'var',309,'Position'}|[{'var',309,'Win'}|[{'var',309,'StrText'}]]]]}|[{'type',309,'boolean',[]}]]}|[[{'type',310,'constraint',[{'atom',310,'is_subtype'}|[[{'var',310,'This'}|[{'type',310,'wxNotebook',[]}]]]]}|[{'type',310,'constraint',[{'atom',310,'is_subtype'}|[[{'var',310,'Position'}|[{'type',310,'integer',[]}]]]]}|[{'type',310,'constraint',[{'atom',310,'is_subtype'}|[[{'var',310,'Win'}|[{'remote_type',310,[{'atom',310,'wxWindow'}|[{'atom',310,'wxWindow'}|[[]]]]}]]]]}|[{'type',310,'constraint',[{'atom',310,'is_subtype'}|[[{'var',310,'StrText'}|[{'remote_type',310,[{'atom',310,'unicode'}|[{'atom',310,'chardata'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 317
		'spec' =
		    %% Line 317
		    [{{'insertPage',5},[{'type',317,'bounded_fun',[{'type',317,'fun',[{'type',317,'product',[{'var',317,'This'}|[{'var',317,'Position'}|[{'var',317,'Win'}|[{'var',317,'StrText'}|[{'type',317,'list',[{'var',317,'Option'}]}]]]]]}|[{'type',317,'boolean',[]}]]}|[[{'type',318,'constraint',[{'atom',318,'is_subtype'}|[[{'var',318,'This'}|[{'type',318,'wxNotebook',[]}]]]]}|[{'type',318,'constraint',[{'atom',318,'is_subtype'}|[[{'var',318,'Position'}|[{'type',318,'integer',[]}]]]]}|[{'type',318,'constraint',[{'atom',318,'is_subtype'}|[[{'var',318,'Win'}|[{'remote_type',318,[{'atom',318,'wxWindow'}|[{'atom',318,'wxWindow'}|[[]]]]}]]]]}|[{'type',318,'constraint',[{'atom',318,'is_subtype'}|[[{'var',318,'StrText'}|[{'remote_type',318,[{'atom',318,'unicode'}|[{'atom',318,'chardata'}|[[]]]]}]]]]}|[{'type',319,'constraint',[{'atom',319,'is_subtype'}|[[{'var',319,'Option'}|[{'type',319,'union',[{'type',319,'tuple',[{'atom',319,'bSelect'}|[{'type',319,'boolean',[]}]]}|[{'type',320,'tuple',[{'atom',320,'imageId'}|[{'type',320,'integer',[]}]]}]]}]]]]}]]]]]]]}]}],
		%% Line 334
		'spec' =
		    %% Line 334
		    [{{'setImageList',2},[{'type',334,'bounded_fun',[{'type',334,'fun',[{'type',334,'product',[{'var',334,'This'}|[{'var',334,'ImageList'}]]}|[{'atom',334,'ok'}]]}|[[{'type',335,'constraint',[{'atom',335,'is_subtype'}|[[{'var',335,'This'}|[{'type',335,'wxNotebook',[]}]]]]}|[{'type',335,'constraint',[{'atom',335,'is_subtype'}|[[{'var',335,'ImageList'}|[{'remote_type',335,[{'atom',335,'wxImageList'}|[{'atom',335,'wxImageList'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 343
		'spec' =
		    %% Line 343
		    [{{'setPadding',2},[{'type',343,'bounded_fun',[{'type',343,'fun',[{'type',343,'product',[{'var',343,'This'}|[{'var',343,'Padding'}]]}|[{'atom',343,'ok'}]]}|[[{'type',344,'constraint',[{'atom',344,'is_subtype'}|[[{'var',344,'This'}|[{'type',344,'wxNotebook',[]}]]]]}|[{'type',344,'constraint',[{'atom',344,'is_subtype'}|[[{'var',344,'Padding'}|[{'type',344,'tuple',[{'ann_type',344,[{'var',344,'W'}|[{'type',344,'integer',[]}]]}|[{'ann_type',344,[{'var',344,'H'}|[{'type',344,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 352
		'spec' =
		    %% Line 352
		    [{{'setPageSize',2},[{'type',352,'bounded_fun',[{'type',352,'fun',[{'type',352,'product',[{'var',352,'This'}|[{'var',352,'Size'}]]}|[{'atom',352,'ok'}]]}|[[{'type',353,'constraint',[{'atom',353,'is_subtype'}|[[{'var',353,'This'}|[{'type',353,'wxNotebook',[]}]]]]}|[{'type',353,'constraint',[{'atom',353,'is_subtype'}|[[{'var',353,'Size'}|[{'type',353,'tuple',[{'ann_type',353,[{'var',353,'W'}|[{'type',353,'integer',[]}]]}|[{'ann_type',353,[{'var',353,'H'}|[{'type',353,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 361
		'spec' =
		    %% Line 361
		    [{{'setPageImage',3},[{'type',361,'bounded_fun',[{'type',361,'fun',[{'type',361,'product',[{'var',361,'This'}|[{'var',361,'NPage'}|[{'var',361,'NImage'}]]]}|[{'type',361,'boolean',[]}]]}|[[{'type',362,'constraint',[{'atom',362,'is_subtype'}|[[{'var',362,'This'}|[{'type',362,'wxNotebook',[]}]]]]}|[{'type',362,'constraint',[{'atom',362,'is_subtype'}|[[{'var',362,'NPage'}|[{'type',362,'integer',[]}]]]]}|[{'type',362,'constraint',[{'atom',362,'is_subtype'}|[[{'var',362,'NImage'}|[{'type',362,'integer',[]}]]]]}]]]]]}]}],
		%% Line 370
		'spec' =
		    %% Line 370
		    [{{'setPageText',3},[{'type',370,'bounded_fun',[{'type',370,'fun',[{'type',370,'product',[{'var',370,'This'}|[{'var',370,'NPage'}|[{'var',370,'StrText'}]]]}|[{'type',370,'boolean',[]}]]}|[[{'type',371,'constraint',[{'atom',371,'is_subtype'}|[[{'var',371,'This'}|[{'type',371,'wxNotebook',[]}]]]]}|[{'type',371,'constraint',[{'atom',371,'is_subtype'}|[[{'var',371,'NPage'}|[{'type',371,'integer',[]}]]]]}|[{'type',371,'constraint',[{'atom',371,'is_subtype'}|[[{'var',371,'StrText'}|[{'remote_type',371,[{'atom',371,'unicode'}|[{'atom',371,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 380
		'spec' =
		    %% Line 380
		    [{{'setSelection',2},[{'type',380,'bounded_fun',[{'type',380,'fun',[{'type',380,'product',[{'var',380,'This'}|[{'var',380,'NPage'}]]}|[{'type',380,'integer',[]}]]}|[[{'type',381,'constraint',[{'atom',381,'is_subtype'}|[[{'var',381,'This'}|[{'type',381,'wxNotebook',[]}]]]]}|[{'type',381,'constraint',[{'atom',381,'is_subtype'}|[[{'var',381,'NPage'}|[{'type',381,'integer',[]}]]]]}]]]]}]}],
		%% Line 389
		'spec' =
		    %% Line 389
		    [{{'changeSelection',2},[{'type',389,'bounded_fun',[{'type',389,'fun',[{'type',389,'product',[{'var',389,'This'}|[{'var',389,'NPage'}]]}|[{'type',389,'integer',[]}]]}|[[{'type',390,'constraint',[{'atom',390,'is_subtype'}|[[{'var',390,'This'}|[{'type',390,'wxNotebook',[]}]]]]}|[{'type',390,'constraint',[{'atom',390,'is_subtype'}|[[{'var',390,'NPage'}|[{'type',390,'integer',[]}]]]]}]]]]}]}],
		%% Line 398
		'spec' =
		    %% Line 398
		    [{{'destroy',1},[{'type',398,'fun',[{'type',398,'product',[{'ann_type',398,[{'var',398,'This'}|[{'type',398,'wxNotebook',[]}]]}]}|[{'atom',398,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 79
    fun (_cor0) ->
	case _cor0 of
	  <'wxControl'> when 'true' ->
	      'true'
	  %% Line 80
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 81
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 82
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxNotebook'})
	end
'new'/0 =
    %% Line 87
    fun () ->
	%% Line 88
	call 'wxe_util':'construct'
	    (1867, %% Line 89
		   #{}#)
'new'/2 =
    %% Line 95
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor5,_cor6,_cor7},Winid>
	      when %% Line 96
		call 'erlang':'is_integer'
		    (Winid) ->
	      %% Line 97
	      apply 'new'/3
		  (Parent, Winid, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'new'/3 =
    %% Line 105
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor21},Winid,Options>
	      when let <_cor3> =
		    %% Line 106
		    call 'erlang':'is_integer'
			(Winid)
		in  let <_cor4> =
			%% Line 106
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 106
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 107
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 108
		      ( fun (_cor11,_cor10) ->
			    case <_cor11,_cor10> of
			      <{'pos',{PosX,PosY}},Acc> when 'true' ->
				  let <_cor7> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<PosX>(32,1,'integer',['unsigned'|['native']]),
					#<PosY>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor7|Acc]
			      %% Line 109
			      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				  let <_cor8> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<SizeW>(32,1,'integer',['unsigned'|['native']]),
					#<SizeH>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor8|Acc]
			      %% Line 110
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor9> =
				      #{#<3>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor9|Acc]
			      %% Line 111
			      <BadOpt,_cor22> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/3-fun-0-'}}] )
		  in  let <_cor15> =
			  %% Line 112
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 112
			      call 'erlang':'list_to_binary'
				  (_cor15)
			  in  let <_cor17> =
				  %% Line 114
				  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				    #<Winid>(32,1,'integer',['unsigned'|['native']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 113
				  call 'wxe_util':'construct'
				      (1868, _cor17)
	  ( <_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19,_cor18})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'addPage'/3 =
    %% Line 120
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor8,_cor9,_cor10},Page = {'wx_ref',_cor11,_cor12,_cor13},Text>
	      when %% Line 121
		call 'erlang':'is_list'
		    (Text) ->
	      %% Line 122
	      apply 'addPage'/4
		  (This, Page, Text, [])
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'addPage',3}}] )
	    -| ['compiler_generated'] )
	end
'addPage'/4 =
    %% Line 129
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor32},{'wx_ref',PageRef,PageT,_cor33},Text,Options>
	      when let <_cor4> =
		    %% Line 130
		    call 'erlang':'is_list'
			(Text)
		in  let <_cor5> =
			%% Line 130
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 130
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 131
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 132
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (PageT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call PageT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <Text_UC> =
			  %% Line 133
			  call 'unicode':'characters_to_binary'
			      ([Text|[0]])
		      in  let <MOpts> =
			      %% Line 134
			      ( fun (_cor15,_cor14) ->
				    case <_cor15,_cor14> of
				      <{'bSelect',BSelect},Acc> when 'true' ->
					  let <_cor11> =
					      call 'wxe_util':'from_bool'
						  (BSelect)
					  in  let <_cor12> =
						  #{#<1>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor11>(32,1,'integer',['unsigned'|['native']])}#
					      in  [_cor12|Acc]
				      %% Line 135
				      <{'imageId',ImageId},Acc> when 'true' ->
					  let <_cor13> =
					      #{#<2>(32,1,'integer',['unsigned'|['native']]),
						#<ImageId>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor13|Acc]
				      %% Line 136
				      <BadOpt,_cor34> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-addPage/4-fun-0-'}}] )
			  in  let <_cor19> =
				  %% Line 137
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 137
				      call 'erlang':'list_to_binary'
					  (_cor19)
				  in  let <_cor26> =
					  %% Line 139
					  call 'erlang':'byte_size'
					      (Text_UC)
				      in  let <_cor21> =
					      %% Line 139
					      call 'erlang':'byte_size'
						  (Text_UC)
					  in  let <_cor22> =
						  %% Line 139
						  call 'erlang':'+'
						      (4, _cor21)
					      in  let <_cor23> =
						      %% Line 139
						      call 'erlang':'band'
							  (_cor22, 7)
						  in  let <_cor24> =
							  %% Line 139
							  call 'erlang':'-'
							      (8, _cor23)
						      in  let <_cor25> =
							      %% Line 139
							      call 'erlang':'band'
								  (_cor24, 7)
							  in  let <_cor27> =
								  %% Line 139
								  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								    #<PageRef>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor26>(32,1,'integer',['unsigned'|['native']]),
								    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor25,8,'integer',['unsigned'|['big']]),
								    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							      in  %% Line 138
								  call 'wxe_util':'call'
								      (1870, _cor27)
	  ( <_cor31,_cor30,_cor29,_cor28> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor31,_cor30,_cor29,_cor28})
		  -| [{'function_name',{'addPage',4}}] )
	    -| ['compiler_generated'] )
	end
'advanceSelection'/1 =
    %% Line 145
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 146
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 147
	      apply 'advanceSelection'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'advanceSelection',1}}] )
	    -| ['compiler_generated'] )
	end
'advanceSelection'/2 =
    %% Line 153
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 154
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 155
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 156
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'forward',Forward},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Forward)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 157
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-advanceSelection/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 158
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 158
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 160
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 159
				  call 'wxe_util':'cast'
				      (1871, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'advanceSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'assignImageList'/2 =
    %% Line 165
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',ImageListRef,ImageListT,_cor10}> when 'true' ->
	      do  %% Line 166
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 167
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ImageListT,
				       'wxImageList') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ImageListT:'parent_class'
				    ('wxImageList')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 169
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<ImageListRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 168
			  call 'wxe_util':'cast'
			      (1872, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'assignImageList',2}}] )
	    -| ['compiler_generated'] )
	end
'create'/3 =
    %% Line 175
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor8,_cor9,_cor10},Parent = {'wx_ref',_cor11,_cor12,_cor13},Id>
	      when %% Line 176
		call 'erlang':'is_integer'
		    (Id) ->
	      %% Line 177
	      apply 'create'/4
		  (This, Parent, Id, [])
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'create',3}}] )
	    -| ['compiler_generated'] )
	end
'create'/4 =
    %% Line 185
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor25},{'wx_ref',ParentRef,ParentT,_cor26},Id,Options>
	      when let <_cor4> =
		    %% Line 186
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor5> =
			%% Line 186
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 186
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 187
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 188
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <MOpts> =
			  %% Line 189
			  ( fun (_cor14,_cor13) ->
				case <_cor14,_cor13> of
				  <{'pos',{PosX,PosY}},Acc> when 'true' ->
				      let <_cor10> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<PosX>(32,1,'integer',['unsigned'|['native']]),
					    #<PosY>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor10|Acc]
				  %% Line 190
				  <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				      let <_cor11> =
					  #{#<2>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeW>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeH>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor11|Acc]
				  %% Line 191
				  <{'style',Style},Acc> when 'true' ->
				      let <_cor12> =
					  #{#<3>(32,1,'integer',['unsigned'|['native']]),
					    #<Style>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor12|Acc]
				  %% Line 192
				  <BadOpt,_cor27> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-create/4-fun-0-'}}] )
		      in  let <_cor18> =
			      %% Line 193
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 193
				  call 'erlang':'list_to_binary'
				      (_cor18)
			      in  let <_cor20> =
				      %% Line 195
				      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
					#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
					#<Id>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']]),
					#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				  in  %% Line 194
				      call 'wxe_util':'call'
					  (1873, _cor20)
	  ( <_cor24,_cor23,_cor22,_cor21> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22,_cor21})
		  -| [{'function_name',{'create',4}}] )
	    -| ['compiler_generated'] )
	end
'deleteAllPages'/1 =
    %% Line 200
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 201
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 203
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 202
		      call 'wxe_util':'call'
			  (1874, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'deleteAllPages',1}}] )
	    -| ['compiler_generated'] )
	end
'deletePage'/2 =
    %% Line 208
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},NPage>
	      when %% Line 209
		call 'erlang':'is_integer'
		    (NPage) ->
	      do  %% Line 210
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 212
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<NPage>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 211
		      call 'wxe_util':'call'
			  (1875, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'deletePage',2}}] )
	    -| ['compiler_generated'] )
	end
'removePage'/2 =
    %% Line 217
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},NPage>
	      when %% Line 218
		call 'erlang':'is_integer'
		    (NPage) ->
	      do  %% Line 219
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 221
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<NPage>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 220
		      call 'wxe_util':'call'
			  (1876, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'removePage',2}}] )
	    -| ['compiler_generated'] )
	end
'getCurrentPage'/1 =
    %% Line 226
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 227
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 229
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 228
		      call 'wxe_util':'call'
			  (1877, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCurrentPage',1}}] )
	    -| ['compiler_generated'] )
	end
'getImageList'/1 =
    %% Line 234
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 235
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 237
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 236
		      call 'wxe_util':'call'
			  (1878, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getImageList',1}}] )
	    -| ['compiler_generated'] )
	end
'getPage'/2 =
    %% Line 242
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 243
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 244
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 246
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 245
		      call 'wxe_util':'call'
			  (1880, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getPage',2}}] )
	    -| ['compiler_generated'] )
	end
'getPageCount'/1 =
    %% Line 251
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 252
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 254
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 253
		      call 'wxe_util':'call'
			  (1881, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPageCount',1}}] )
	    -| ['compiler_generated'] )
	end
'getPageImage'/2 =
    %% Line 259
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},NPage>
	      when %% Line 260
		call 'erlang':'is_integer'
		    (NPage) ->
	      do  %% Line 261
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 263
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<NPage>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 262
		      call 'wxe_util':'call'
			  (1882, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getPageImage',2}}] )
	    -| ['compiler_generated'] )
	end
'getPageText'/2 =
    %% Line 268
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},NPage>
	      when %% Line 269
		call 'erlang':'is_integer'
		    (NPage) ->
	      do  %% Line 270
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 272
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<NPage>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 271
		      call 'wxe_util':'call'
			  (1883, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getPageText',2}}] )
	    -| ['compiler_generated'] )
	end
'getRowCount'/1 =
    %% Line 277
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 278
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 280
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 279
		      call 'wxe_util':'call'
			  (1884, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getRowCount',1}}] )
	    -| ['compiler_generated'] )
	end
'getSelection'/1 =
    %% Line 285
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 286
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 288
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 287
		      call 'wxe_util':'call'
			  (1885, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSelection',1}}] )
	    -| ['compiler_generated'] )
	end
'getThemeBackgroundColour'/1 =
    %% Line 293
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 294
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 296
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 295
		      call 'wxe_util':'call'
			  (1886, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getThemeBackgroundColour',1}}] )
	    -| ['compiler_generated'] )
	end
'hitTest'/2 =
    %% Line 302
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{PtX,PtY}>
	      when let <_cor2> =
		    %% Line 303
		    call 'erlang':'is_integer'
			(PtX)
		in  let <_cor3> =
			%% Line 303
			call 'erlang':'is_integer'
			    (PtY)
		    in  %% Line 303
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 304
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 306
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PtX>(32,1,'integer',['unsigned'|['native']]),
			#<PtY>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 305
		      call 'wxe_util':'call'
			  (1888, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'hitTest',2}}] )
	    -| ['compiler_generated'] )
	end
'insertPage'/4 =
    %% Line 312
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor12,_cor13,_cor14},Position,Win = {'wx_ref',_cor15,_cor16,_cor17},StrText>
	      when let <_cor4> =
		    %% Line 313
		    call 'erlang':'is_integer'
			(Position)
		in  let <_cor5> =
			%% Line 313
			call 'erlang':'is_list'
			    (StrText)
		    in  %% Line 313
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor4, _cor5)
			  -| ['compiler_generated'] ) ->
	      %% Line 314
	      apply 'insertPage'/5
		  (This, Position, Win, StrText, [])
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'insertPage',4}}] )
	    -| ['compiler_generated'] )
	end
'insertPage'/5 =
    %% Line 321
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor36},Position,{'wx_ref',WinRef,WinT,_cor37},StrText,Options>
	      when %% Line 322
		try
		    let <_cor5> =
			call 'erlang':'is_integer'
			    (Position)
		    in  let <_cor6> =
			    call 'erlang':'is_list'
				(StrText)
			in  let <_cor7> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor8> =
				    call 'erlang':'and'
					(_cor6, _cor7)
				in  call 'erlang':'and'
					(_cor5, _cor8)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 323
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 324
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (WinT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call WinT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <StrText_UC> =
			  %% Line 325
			  call 'unicode':'characters_to_binary'
			      ([StrText|[0]])
		      in  let <MOpts> =
			      %% Line 326
			      ( fun (_cor18,_cor17) ->
				    case <_cor18,_cor17> of
				      <{'bSelect',BSelect},Acc> when 'true' ->
					  let <_cor14> =
					      call 'wxe_util':'from_bool'
						  (BSelect)
					  in  let <_cor15> =
						  #{#<1>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor14>(32,1,'integer',['unsigned'|['native']])}#
					      in  [_cor15|Acc]
				      %% Line 327
				      <{'imageId',ImageId},Acc> when 'true' ->
					  let <_cor16> =
					      #{#<2>(32,1,'integer',['unsigned'|['native']]),
						#<ImageId>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor16|Acc]
				      %% Line 328
				      <BadOpt,_cor38> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-insertPage/5-fun-0-'}}] )
			  in  let <_cor22> =
				  %% Line 329
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 329
				      call 'erlang':'list_to_binary'
					  (_cor22)
				  in  let <_cor29> =
					  %% Line 331
					  call 'erlang':'byte_size'
					      (StrText_UC)
				      in  let <_cor24> =
					      %% Line 331
					      call 'erlang':'byte_size'
						  (StrText_UC)
					  in  let <_cor25> =
						  %% Line 331
						  call 'erlang':'+'
						      (0, _cor24)
					      in  let <_cor26> =
						      %% Line 331
						      call 'erlang':'band'
							  (_cor25, 7)
						  in  let <_cor27> =
							  %% Line 331
							  call 'erlang':'-'
							      (8, _cor26)
						      in  let <_cor28> =
							      %% Line 331
							      call 'erlang':'band'
								  (_cor27, 7)
							  in  let <_cor30> =
								  %% Line 331
								  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								    #<Position>(32,1,'integer',['unsigned'|['native']]),
								    #<WinRef>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor29>(32,1,'integer',['unsigned'|['native']]),
								    #<StrText_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor28,8,'integer',['unsigned'|['big']]),
								    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							      in  %% Line 330
								  call 'wxe_util':'call'
								      (1890, _cor30)
	  ( <_cor35,_cor34,_cor33,_cor32,_cor31> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor35,_cor34,_cor33,_cor32,_cor31})
		  -| [{'function_name',{'insertPage',5}}] )
	    -| ['compiler_generated'] )
	end
'setImageList'/2 =
    %% Line 336
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',ImageListRef,ImageListT,_cor10}> when 'true' ->
	      do  %% Line 337
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 338
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ImageListT,
				       'wxImageList') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ImageListT:'parent_class'
				    ('wxImageList')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 340
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<ImageListRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 339
			  call 'wxe_util':'cast'
			      (1891, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setImageList',2}}] )
	    -| ['compiler_generated'] )
	end
'setPadding'/2 =
    %% Line 345
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{PaddingW,PaddingH}>
	      when let <_cor2> =
		    %% Line 346
		    call 'erlang':'is_integer'
			(PaddingW)
		in  let <_cor3> =
			%% Line 346
			call 'erlang':'is_integer'
			    (PaddingH)
		    in  %% Line 346
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 347
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 349
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PaddingW>(32,1,'integer',['unsigned'|['native']]),
			#<PaddingH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 348
		      call 'wxe_util':'cast'
			  (1892, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setPadding',2}}] )
	    -| ['compiler_generated'] )
	end
'setPageSize'/2 =
    %% Line 354
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{SizeW,SizeH}>
	      when let <_cor2> =
		    %% Line 355
		    call 'erlang':'is_integer'
			(SizeW)
		in  let <_cor3> =
			%% Line 355
			call 'erlang':'is_integer'
			    (SizeH)
		    in  %% Line 355
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 356
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 358
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<SizeW>(32,1,'integer',['unsigned'|['native']]),
			#<SizeH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 357
		      call 'wxe_util':'cast'
			  (1893, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setPageSize',2}}] )
	    -| ['compiler_generated'] )
	end
'setPageImage'/3 =
    %% Line 363
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},NPage,NImage>
	      when let <_cor3> =
		    %% Line 364
		    call 'erlang':'is_integer'
			(NPage)
		in  let <_cor4> =
			%% Line 364
			call 'erlang':'is_integer'
			    (NImage)
		    in  %% Line 364
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 365
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 367
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<NPage>(32,1,'integer',['unsigned'|['native']]),
			#<NImage>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 366
		      call 'wxe_util':'call'
			  (1894, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setPageImage',3}}] )
	    -| ['compiler_generated'] )
	end
'setPageText'/3 =
    %% Line 372
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},NPage,StrText>
	      when let <_cor3> =
		    %% Line 373
		    call 'erlang':'is_integer'
			(NPage)
		in  let <_cor4> =
			%% Line 373
			call 'erlang':'is_list'
			    (StrText)
		    in  %% Line 373
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 374
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <StrText_UC> =
		      %% Line 375
		      call 'unicode':'characters_to_binary'
			  ([StrText|[0]])
		  in  let <_cor13> =
			  %% Line 377
			  call 'erlang':'byte_size'
			      (StrText_UC)
		      in  let <_cor8> =
			      %% Line 377
			      call 'erlang':'byte_size'
				  (StrText_UC)
			  in  let <_cor9> =
				  %% Line 377
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 377
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 377
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 377
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 377
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<NPage>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<StrText_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 376
						  call 'wxe_util':'call'
						      (1895, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'setPageText',3}}] )
	    -| ['compiler_generated'] )
	end
'setSelection'/2 =
    %% Line 382
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},NPage>
	      when %% Line 383
		call 'erlang':'is_integer'
		    (NPage) ->
	      do  %% Line 384
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 386
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<NPage>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 385
		      call 'wxe_util':'call'
			  (1896, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'changeSelection'/2 =
    %% Line 391
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},NPage>
	      when %% Line 392
		call 'erlang':'is_integer'
		    (NPage) ->
	      do  %% Line 393
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 395
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<NPage>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 394
		      call 'wxe_util':'call'
			  (1897, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'changeSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 399
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 400
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxNotebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxNotebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 401
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 402
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'setLabel'/2 =
    %% Line 405
    fun (_cor1,_cor0) ->
	call 'wxControl':'setLabel'
	    (_cor1, _cor0)
'getLabel'/1 =
    %% Line 407
    fun (_cor0) ->
	call 'wxControl':'getLabel'
	    (_cor0)
'warpPointer'/3 =
    %% Line 410
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 412
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 414
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 416
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 418
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 420
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 422
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 424
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 426
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 428
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 430
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 432
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 434
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 436
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 438
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 440
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 442
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 444
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 446
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 448
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 450
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 452
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 454
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 456
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 458
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 460
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 462
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 464
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 466
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 468
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 470
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 472
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 474
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 476
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 478
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 480
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 482
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 484
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 486
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 488
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 490
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 492
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 494
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 496
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 498
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 500
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 502
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 504
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 506
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 508
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 510
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 512
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 514
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 516
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 518
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 520
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 522
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 524
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 526
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 528
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 530
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 532
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 534
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 536
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 538
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 540
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 542
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 544
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 546
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 548
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 550
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 552
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 554
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 556
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 558
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 560
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 562
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 564
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 566
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 568
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 570
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 572
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 574
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 576
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 578
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 580
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 582
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 584
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 586
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 588
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 590
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 592
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 594
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 596
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 598
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 600
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 602
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 604
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 606
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 608
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 610
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 612
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 614
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 616
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 618
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 620
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 622
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 624
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 626
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 628
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 630
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 632
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 634
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 636
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 638
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 640
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 642
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 644
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 646
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 648
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 650
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 652
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 654
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 656
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 658
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 660
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 662
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 664
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 666
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 668
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 670
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 672
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 674
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 676
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 678
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 680
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 682
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 684
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 686
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 688
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 690
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 692
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 694
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 696
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 698
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 700
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 702
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 704
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 706
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 708
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 710
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 712
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 714
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 716
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 718
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 720
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 722
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 724
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 726
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 728
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 730
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 732
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 734
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 736
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 738
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 740
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 742
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 744
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 746
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 748
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 750
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 752
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 754
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 757
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 759
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 761
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 763
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 765
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxNotebook')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxNotebook', _cor0)
end