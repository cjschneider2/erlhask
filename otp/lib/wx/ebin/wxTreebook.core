module 'wxTreebook' ['addPage'/3,
		     'addPage'/4,
		     'advanceSelection'/1,
		     'advanceSelection'/2,
		     'assignImageList'/2,
		     'cacheBestSize'/2,
		     'captureMouse'/1,
		     'center'/1,
		     'center'/2,
		     'centerOnParent'/1,
		     'centerOnParent'/2,
		     'centre'/1,
		     'centre'/2,
		     'centreOnParent'/1,
		     'centreOnParent'/2,
		     'changeSelection'/2,
		     'clearBackground'/1,
		     'clientToScreen'/2,
		     'clientToScreen'/3,
		     'close'/1,
		     'close'/2,
		     'connect'/2,
		     'connect'/3,
		     'convertDialogToPixels'/2,
		     'convertPixelsToDialog'/2,
		     'create'/3,
		     'create'/4,
		     'deleteAllPages'/1,
		     'deletePage'/2,
		     'destroy'/1,
		     'destroyChildren'/1,
		     'disable'/1,
		     'disconnect'/1,
		     'disconnect'/2,
		     'disconnect'/3,
		     'enable'/1,
		     'enable'/2,
		     'expandNode'/2,
		     'expandNode'/3,
		     'findWindow'/2,
		     'fit'/1,
		     'fitInside'/1,
		     'freeze'/1,
		     'getAcceleratorTable'/1,
		     'getBackgroundColour'/1,
		     'getBackgroundStyle'/1,
		     'getBestSize'/1,
		     'getCaret'/1,
		     'getCharHeight'/1,
		     'getCharWidth'/1,
		     'getChildren'/1,
		     'getClientSize'/1,
		     'getContainingSizer'/1,
		     'getCurrentPage'/1,
		     'getCursor'/1,
		     'getDropTarget'/1,
		     'getEventHandler'/1,
		     'getExtraStyle'/1,
		     'getFont'/1,
		     'getForegroundColour'/1,
		     'getGrandParent'/1,
		     'getHandle'/1,
		     'getHelpText'/1,
		     'getId'/1,
		     'getImageList'/1,
		     'getLabel'/1,
		     'getMaxSize'/1,
		     'getMinSize'/1,
		     'getName'/1,
		     'getPage'/2,
		     'getPageCount'/1,
		     'getPageImage'/2,
		     'getPageText'/2,
		     'getParent'/1,
		     'getPosition'/1,
		     'getRect'/1,
		     'getScreenPosition'/1,
		     'getScreenRect'/1,
		     'getScrollPos'/2,
		     'getScrollRange'/2,
		     'getScrollThumb'/2,
		     'getSelection'/1,
		     'getSize'/1,
		     'getSizer'/1,
		     'getTextExtent'/2,
		     'getTextExtent'/3,
		     'getToolTip'/1,
		     'getUpdateRegion'/1,
		     'getVirtualSize'/1,
		     'getWindowStyleFlag'/1,
		     'getWindowVariant'/1,
		     'hasCapture'/1,
		     'hasScrollbar'/2,
		     'hasTransparentBackground'/1,
		     'hide'/1,
		     'hitTest'/2,
		     'inheritAttributes'/1,
		     'initDialog'/1,
		     'insertPage'/4,
		     'insertPage'/5,
		     'insertSubPage'/4,
		     'insertSubPage'/5,
		     'invalidateBestSize'/1,
		     'isEnabled'/1,
		     'isExposed'/2,
		     'isExposed'/3,
		     'isExposed'/5,
		     'isNodeExpanded'/2,
		     'isRetained'/1,
		     'isShown'/1,
		     'isTopLevel'/1,
		     'layout'/1,
		     'lineDown'/1,
		     'lineUp'/1,
		     'lower'/1,
		     'makeModal'/1,
		     'makeModal'/2,
		     'module_info'/0,
		     'module_info'/1,
		     'move'/2,
		     'move'/3,
		     'move'/4,
		     'moveAfterInTabOrder'/2,
		     'moveBeforeInTabOrder'/2,
		     'navigate'/1,
		     'navigate'/2,
		     'new'/0,
		     'new'/2,
		     'new'/3,
		     'pageDown'/1,
		     'pageUp'/1,
		     'parent_class'/1,
		     'popEventHandler'/1,
		     'popEventHandler'/2,
		     'popupMenu'/2,
		     'popupMenu'/3,
		     'popupMenu'/4,
		     'raise'/1,
		     'refresh'/1,
		     'refresh'/2,
		     'refreshRect'/2,
		     'refreshRect'/3,
		     'releaseMouse'/1,
		     'removeChild'/2,
		     'removePage'/2,
		     'reparent'/2,
		     'screenToClient'/1,
		     'screenToClient'/2,
		     'scrollLines'/2,
		     'scrollPages'/2,
		     'scrollWindow'/3,
		     'scrollWindow'/4,
		     'setAcceleratorTable'/2,
		     'setAutoLayout'/2,
		     'setBackgroundColour'/2,
		     'setBackgroundStyle'/2,
		     'setCaret'/2,
		     'setClientSize'/2,
		     'setClientSize'/3,
		     'setContainingSizer'/2,
		     'setCursor'/2,
		     'setDropTarget'/2,
		     'setExtraStyle'/2,
		     'setFocus'/1,
		     'setFocusFromKbd'/1,
		     'setFont'/2,
		     'setForegroundColour'/2,
		     'setHelpText'/2,
		     'setId'/2,
		     'setImageList'/2,
		     'setLabel'/2,
		     'setMaxSize'/2,
		     'setMinSize'/2,
		     'setName'/2,
		     'setOwnBackgroundColour'/2,
		     'setOwnFont'/2,
		     'setOwnForegroundColour'/2,
		     'setPageImage'/3,
		     'setPageSize'/2,
		     'setPageText'/3,
		     'setPalette'/2,
		     'setScrollPos'/3,
		     'setScrollPos'/4,
		     'setScrollbar'/5,
		     'setScrollbar'/6,
		     'setSelection'/2,
		     'setSize'/2,
		     'setSize'/3,
		     'setSize'/5,
		     'setSize'/6,
		     'setSizeHints'/2,
		     'setSizeHints'/3,
		     'setSizeHints'/4,
		     'setSizer'/2,
		     'setSizer'/3,
		     'setSizerAndFit'/2,
		     'setSizerAndFit'/3,
		     'setThemeEnabled'/2,
		     'setToolTip'/2,
		     'setVirtualSize'/2,
		     'setVirtualSize'/3,
		     'setVirtualSizeHints'/2,
		     'setVirtualSizeHints'/3,
		     'setVirtualSizeHints'/4,
		     'setWindowStyle'/2,
		     'setWindowStyleFlag'/2,
		     'setWindowVariant'/2,
		     'shouldInheritColours'/1,
		     'show'/1,
		     'show'/2,
		     'thaw'/1,
		     'transferDataFromWindow'/1,
		     'transferDataToWindow'/1,
		     'update'/1,
		     'updateWindowUI'/1,
		     'updateWindowUI'/2,
		     'validate'/1,
		     'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 78
		'export_type' =
		    %% Line 78
		    [{'wxTreebook',0}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{'wxTreebook',{'remote_type',85,[{'atom',85,'wx'}|[{'atom',85,'wx_object'}|[[]]]]},[]}],
		%% Line 87
		'spec' =
		    %% Line 87
		    [{{'new',0},[{'type',87,'fun',[{'type',87,'product',[]}|[{'type',87,'wxTreebook',[]}]]}]}],
		%% Line 93
		'spec' =
		    %% Line 93
		    [{{'new',2},[{'type',93,'bounded_fun',[{'type',93,'fun',[{'type',93,'product',[{'var',93,'Parent'}|[{'var',93,'Id'}]]}|[{'type',93,'wxTreebook',[]}]]}|[[{'type',94,'constraint',[{'atom',94,'is_subtype'}|[[{'var',94,'Parent'}|[{'remote_type',94,[{'atom',94,'wxWindow'}|[{'atom',94,'wxWindow'}|[[]]]]}]]]]}|[{'type',94,'constraint',[{'atom',94,'is_subtype'}|[[{'var',94,'Id'}|[{'type',94,'integer',[]}]]]]}]]]]}]}],
		%% Line 101
		'spec' =
		    %% Line 101
		    [{{'new',3},[{'type',101,'bounded_fun',[{'type',101,'fun',[{'type',101,'product',[{'var',101,'Parent'}|[{'var',101,'Id'}|[{'type',101,'list',[{'var',101,'Option'}]}]]]}|[{'type',101,'wxTreebook',[]}]]}|[[{'type',102,'constraint',[{'atom',102,'is_subtype'}|[[{'var',102,'Parent'}|[{'remote_type',102,[{'atom',102,'wxWindow'}|[{'atom',102,'wxWindow'}|[[]]]]}]]]]}|[{'type',102,'constraint',[{'atom',102,'is_subtype'}|[[{'var',102,'Id'}|[{'type',102,'integer',[]}]]]]}|[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'Option'}|[{'type',103,'union',[{'type',103,'tuple',[{'atom',103,'pos'}|[{'type',103,'tuple',[{'ann_type',103,[{'var',103,'X'}|[{'type',103,'integer',[]}]]}|[{'ann_type',103,[{'var',103,'Y'}|[{'type',103,'integer',[]}]]}]]}]]}|[{'type',104,'tuple',[{'atom',104,'size'}|[{'type',104,'tuple',[{'ann_type',104,[{'var',104,'W'}|[{'type',104,'integer',[]}]]}|[{'ann_type',104,[{'var',104,'H'}|[{'type',104,'integer',[]}]]}]]}]]}|[{'type',105,'tuple',[{'atom',105,'style'}|[{'type',105,'integer',[]}]]}]]]}]]]]}]]]]]}]}],
		%% Line 118
		'spec' =
		    %% Line 118
		    [{{'addPage',3},[{'type',118,'bounded_fun',[{'type',118,'fun',[{'type',118,'product',[{'var',118,'This'}|[{'var',118,'Page'}|[{'var',118,'Text'}]]]}|[{'type',118,'boolean',[]}]]}|[[{'type',119,'constraint',[{'atom',119,'is_subtype'}|[[{'var',119,'This'}|[{'type',119,'wxTreebook',[]}]]]]}|[{'type',119,'constraint',[{'atom',119,'is_subtype'}|[[{'var',119,'Page'}|[{'remote_type',119,[{'atom',119,'wxWindow'}|[{'atom',119,'wxWindow'}|[[]]]]}]]]]}|[{'type',119,'constraint',[{'atom',119,'is_subtype'}|[[{'var',119,'Text'}|[{'remote_type',119,[{'atom',119,'unicode'}|[{'atom',119,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 126
		'spec' =
		    %% Line 126
		    [{{'addPage',4},[{'type',126,'bounded_fun',[{'type',126,'fun',[{'type',126,'product',[{'var',126,'This'}|[{'var',126,'Page'}|[{'var',126,'Text'}|[{'type',126,'list',[{'var',126,'Option'}]}]]]]}|[{'type',126,'boolean',[]}]]}|[[{'type',127,'constraint',[{'atom',127,'is_subtype'}|[[{'var',127,'This'}|[{'type',127,'wxTreebook',[]}]]]]}|[{'type',127,'constraint',[{'atom',127,'is_subtype'}|[[{'var',127,'Page'}|[{'remote_type',127,[{'atom',127,'wxWindow'}|[{'atom',127,'wxWindow'}|[[]]]]}]]]]}|[{'type',127,'constraint',[{'atom',127,'is_subtype'}|[[{'var',127,'Text'}|[{'remote_type',127,[{'atom',127,'unicode'}|[{'atom',127,'chardata'}|[[]]]]}]]]]}|[{'type',128,'constraint',[{'atom',128,'is_subtype'}|[[{'var',128,'Option'}|[{'type',128,'union',[{'type',128,'tuple',[{'atom',128,'bSelect'}|[{'type',128,'boolean',[]}]]}|[{'type',129,'tuple',[{'atom',129,'imageId'}|[{'type',129,'integer',[]}]]}]]}]]]]}]]]]]]}]}],
		%% Line 143
		'spec' =
		    %% Line 143
		    [{{'advanceSelection',1},[{'type',143,'bounded_fun',[{'type',143,'fun',[{'type',143,'product',[{'var',143,'This'}]}|[{'atom',143,'ok'}]]}|[[{'type',144,'constraint',[{'atom',144,'is_subtype'}|[[{'var',144,'This'}|[{'type',144,'wxTreebook',[]}]]]]}]]]}]}],
		%% Line 151
		'spec' =
		    %% Line 151
		    [{{'advanceSelection',2},[{'type',151,'bounded_fun',[{'type',151,'fun',[{'type',151,'product',[{'var',151,'This'}|[{'type',151,'list',[{'var',151,'Option'}]}]]}|[{'atom',151,'ok'}]]}|[[{'type',152,'constraint',[{'atom',152,'is_subtype'}|[[{'var',152,'This'}|[{'type',152,'wxTreebook',[]}]]]]}|[{'type',153,'constraint',[{'atom',153,'is_subtype'}|[[{'var',153,'Option'}|[{'type',153,'tuple',[{'atom',153,'forward'}|[{'type',153,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 164
		'spec' =
		    %% Line 164
		    [{{'assignImageList',2},[{'type',164,'bounded_fun',[{'type',164,'fun',[{'type',164,'product',[{'var',164,'This'}|[{'var',164,'ImageList'}]]}|[{'atom',164,'ok'}]]}|[[{'type',165,'constraint',[{'atom',165,'is_subtype'}|[[{'var',165,'This'}|[{'type',165,'wxTreebook',[]}]]]]}|[{'type',165,'constraint',[{'atom',165,'is_subtype'}|[[{'var',165,'ImageList'}|[{'remote_type',165,[{'atom',165,'wxImageList'}|[{'atom',165,'wxImageList'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 173
		'spec' =
		    %% Line 173
		    [{{'create',3},[{'type',173,'bounded_fun',[{'type',173,'fun',[{'type',173,'product',[{'var',173,'This'}|[{'var',173,'Parent'}|[{'var',173,'Id'}]]]}|[{'type',173,'boolean',[]}]]}|[[{'type',174,'constraint',[{'atom',174,'is_subtype'}|[[{'var',174,'This'}|[{'type',174,'wxTreebook',[]}]]]]}|[{'type',174,'constraint',[{'atom',174,'is_subtype'}|[[{'var',174,'Parent'}|[{'remote_type',174,[{'atom',174,'wxWindow'}|[{'atom',174,'wxWindow'}|[[]]]]}]]]]}|[{'type',174,'constraint',[{'atom',174,'is_subtype'}|[[{'var',174,'Id'}|[{'type',174,'integer',[]}]]]]}]]]]]}]}],
		%% Line 181
		'spec' =
		    %% Line 181
		    [{{'create',4},[{'type',181,'bounded_fun',[{'type',181,'fun',[{'type',181,'product',[{'var',181,'This'}|[{'var',181,'Parent'}|[{'var',181,'Id'}|[{'type',181,'list',[{'var',181,'Option'}]}]]]]}|[{'type',181,'boolean',[]}]]}|[[{'type',182,'constraint',[{'atom',182,'is_subtype'}|[[{'var',182,'This'}|[{'type',182,'wxTreebook',[]}]]]]}|[{'type',182,'constraint',[{'atom',182,'is_subtype'}|[[{'var',182,'Parent'}|[{'remote_type',182,[{'atom',182,'wxWindow'}|[{'atom',182,'wxWindow'}|[[]]]]}]]]]}|[{'type',182,'constraint',[{'atom',182,'is_subtype'}|[[{'var',182,'Id'}|[{'type',182,'integer',[]}]]]]}|[{'type',183,'constraint',[{'atom',183,'is_subtype'}|[[{'var',183,'Option'}|[{'type',183,'union',[{'type',183,'tuple',[{'atom',183,'pos'}|[{'type',183,'tuple',[{'ann_type',183,[{'var',183,'X'}|[{'type',183,'integer',[]}]]}|[{'ann_type',183,[{'var',183,'Y'}|[{'type',183,'integer',[]}]]}]]}]]}|[{'type',184,'tuple',[{'atom',184,'size'}|[{'type',184,'tuple',[{'ann_type',184,[{'var',184,'W'}|[{'type',184,'integer',[]}]]}|[{'ann_type',184,[{'var',184,'H'}|[{'type',184,'integer',[]}]]}]]}]]}|[{'type',185,'tuple',[{'atom',185,'style'}|[{'type',185,'integer',[]}]]}]]]}]]]]}]]]]]]}]}],
		%% Line 199
		'spec' =
		    %% Line 199
		    [{{'deleteAllPages',1},[{'type',199,'bounded_fun',[{'type',199,'fun',[{'type',199,'product',[{'var',199,'This'}]}|[{'type',199,'boolean',[]}]]}|[[{'type',200,'constraint',[{'atom',200,'is_subtype'}|[[{'var',200,'This'}|[{'type',200,'wxTreebook',[]}]]]]}]]]}]}],
		%% Line 207
		'spec' =
		    %% Line 207
		    [{{'deletePage',2},[{'type',207,'bounded_fun',[{'type',207,'fun',[{'type',207,'product',[{'var',207,'This'}|[{'var',207,'Pos'}]]}|[{'type',207,'boolean',[]}]]}|[[{'type',208,'constraint',[{'atom',208,'is_subtype'}|[[{'var',208,'This'}|[{'type',208,'wxTreebook',[]}]]]]}|[{'type',208,'constraint',[{'atom',208,'is_subtype'}|[[{'var',208,'Pos'}|[{'type',208,'integer',[]}]]]]}]]]]}]}],
		%% Line 216
		'spec' =
		    %% Line 216
		    [{{'removePage',2},[{'type',216,'bounded_fun',[{'type',216,'fun',[{'type',216,'product',[{'var',216,'This'}|[{'var',216,'N'}]]}|[{'type',216,'boolean',[]}]]}|[[{'type',217,'constraint',[{'atom',217,'is_subtype'}|[[{'var',217,'This'}|[{'type',217,'wxTreebook',[]}]]]]}|[{'type',217,'constraint',[{'atom',217,'is_subtype'}|[[{'var',217,'N'}|[{'type',217,'integer',[]}]]]]}]]]]}]}],
		%% Line 225
		'spec' =
		    %% Line 225
		    [{{'getCurrentPage',1},[{'type',225,'bounded_fun',[{'type',225,'fun',[{'type',225,'product',[{'var',225,'This'}]}|[{'remote_type',225,[{'atom',225,'wxWindow'}|[{'atom',225,'wxWindow'}|[[]]]]}]]}|[[{'type',226,'constraint',[{'atom',226,'is_subtype'}|[[{'var',226,'This'}|[{'type',226,'wxTreebook',[]}]]]]}]]]}]}],
		%% Line 233
		'spec' =
		    %% Line 233
		    [{{'getImageList',1},[{'type',233,'bounded_fun',[{'type',233,'fun',[{'type',233,'product',[{'var',233,'This'}]}|[{'remote_type',233,[{'atom',233,'wxImageList'}|[{'atom',233,'wxImageList'}|[[]]]]}]]}|[[{'type',234,'constraint',[{'atom',234,'is_subtype'}|[[{'var',234,'This'}|[{'type',234,'wxTreebook',[]}]]]]}]]]}]}],
		%% Line 241
		'spec' =
		    %% Line 241
		    [{{'getPage',2},[{'type',241,'bounded_fun',[{'type',241,'fun',[{'type',241,'product',[{'var',241,'This'}|[{'var',241,'N'}]]}|[{'remote_type',241,[{'atom',241,'wxWindow'}|[{'atom',241,'wxWindow'}|[[]]]]}]]}|[[{'type',242,'constraint',[{'atom',242,'is_subtype'}|[[{'var',242,'This'}|[{'type',242,'wxTreebook',[]}]]]]}|[{'type',242,'constraint',[{'atom',242,'is_subtype'}|[[{'var',242,'N'}|[{'type',242,'integer',[]}]]]]}]]]]}]}],
		%% Line 250
		'spec' =
		    %% Line 250
		    [{{'getPageCount',1},[{'type',250,'bounded_fun',[{'type',250,'fun',[{'type',250,'product',[{'var',250,'This'}]}|[{'type',250,'integer',[]}]]}|[[{'type',251,'constraint',[{'atom',251,'is_subtype'}|[[{'var',251,'This'}|[{'type',251,'wxTreebook',[]}]]]]}]]]}]}],
		%% Line 258
		'spec' =
		    %% Line 258
		    [{{'getPageImage',2},[{'type',258,'bounded_fun',[{'type',258,'fun',[{'type',258,'product',[{'var',258,'This'}|[{'var',258,'N'}]]}|[{'type',258,'integer',[]}]]}|[[{'type',259,'constraint',[{'atom',259,'is_subtype'}|[[{'var',259,'This'}|[{'type',259,'wxTreebook',[]}]]]]}|[{'type',259,'constraint',[{'atom',259,'is_subtype'}|[[{'var',259,'N'}|[{'type',259,'integer',[]}]]]]}]]]]}]}],
		%% Line 267
		'spec' =
		    %% Line 267
		    [{{'getPageText',2},[{'type',267,'bounded_fun',[{'type',267,'fun',[{'type',267,'product',[{'var',267,'This'}|[{'var',267,'N'}]]}|[{'remote_type',267,[{'atom',267,'unicode'}|[{'atom',267,'charlist'}|[[]]]]}]]}|[[{'type',268,'constraint',[{'atom',268,'is_subtype'}|[[{'var',268,'This'}|[{'type',268,'wxTreebook',[]}]]]]}|[{'type',268,'constraint',[{'atom',268,'is_subtype'}|[[{'var',268,'N'}|[{'type',268,'integer',[]}]]]]}]]]]}]}],
		%% Line 276
		'spec' =
		    %% Line 276
		    [{{'getSelection',1},[{'type',276,'bounded_fun',[{'type',276,'fun',[{'type',276,'product',[{'var',276,'This'}]}|[{'type',276,'integer',[]}]]}|[[{'type',277,'constraint',[{'atom',277,'is_subtype'}|[[{'var',277,'This'}|[{'type',277,'wxTreebook',[]}]]]]}]]]}]}],
		%% Line 284
		'spec' =
		    %% Line 284
		    [{{'expandNode',2},[{'type',284,'bounded_fun',[{'type',284,'fun',[{'type',284,'product',[{'var',284,'This'}|[{'var',284,'Pos'}]]}|[{'type',284,'boolean',[]}]]}|[[{'type',285,'constraint',[{'atom',285,'is_subtype'}|[[{'var',285,'This'}|[{'type',285,'wxTreebook',[]}]]]]}|[{'type',285,'constraint',[{'atom',285,'is_subtype'}|[[{'var',285,'Pos'}|[{'type',285,'integer',[]}]]]]}]]]]}]}],
		%% Line 292
		'spec' =
		    %% Line 292
		    [{{'expandNode',3},[{'type',292,'bounded_fun',[{'type',292,'fun',[{'type',292,'product',[{'var',292,'This'}|[{'var',292,'Pos'}|[{'type',292,'list',[{'var',292,'Option'}]}]]]}|[{'type',292,'boolean',[]}]]}|[[{'type',293,'constraint',[{'atom',293,'is_subtype'}|[[{'var',293,'This'}|[{'type',293,'wxTreebook',[]}]]]]}|[{'type',293,'constraint',[{'atom',293,'is_subtype'}|[[{'var',293,'Pos'}|[{'type',293,'integer',[]}]]]]}|[{'type',294,'constraint',[{'atom',294,'is_subtype'}|[[{'var',294,'Option'}|[{'type',294,'tuple',[{'atom',294,'expand'}|[{'type',294,'boolean',[]}]]}]]]]}]]]]]}]}],
		%% Line 305
		'spec' =
		    %% Line 305
		    [{{'isNodeExpanded',2},[{'type',305,'bounded_fun',[{'type',305,'fun',[{'type',305,'product',[{'var',305,'This'}|[{'var',305,'Pos'}]]}|[{'type',305,'boolean',[]}]]}|[[{'type',306,'constraint',[{'atom',306,'is_subtype'}|[[{'var',306,'This'}|[{'type',306,'wxTreebook',[]}]]]]}|[{'type',306,'constraint',[{'atom',306,'is_subtype'}|[[{'var',306,'Pos'}|[{'type',306,'integer',[]}]]]]}]]]]}]}],
		%% Line 314
		'spec' =
		    %% Line 314
		    [{{'hitTest',2},[{'type',314,'bounded_fun',[{'type',314,'fun',[{'type',314,'product',[{'var',314,'This'}|[{'var',314,'Pt'}]]}|[{'var',314,'Result'}]]}|[[{'type',315,'constraint',[{'atom',315,'is_subtype'}|[[{'var',315,'Result'}|[{'type',315,'tuple',[{'ann_type',315,[{'var',315,'Res'}|[{'type',315,'integer',[]}]]}|[{'ann_type',315,[{'var',315,'Flags'}|[{'type',315,'integer',[]}]]}]]}]]]]}|[{'type',316,'constraint',[{'atom',316,'is_subtype'}|[[{'var',316,'This'}|[{'type',316,'wxTreebook',[]}]]]]}|[{'type',316,'constraint',[{'atom',316,'is_subtype'}|[[{'var',316,'Pt'}|[{'type',316,'tuple',[{'ann_type',316,[{'var',316,'X'}|[{'type',316,'integer',[]}]]}|[{'ann_type',316,[{'var',316,'Y'}|[{'type',316,'integer',[]}]]}]]}]]]]}]]]]]}]}],
		%% Line 324
		'spec' =
		    %% Line 324
		    [{{'insertPage',4},[{'type',324,'bounded_fun',[{'type',324,'fun',[{'type',324,'product',[{'var',324,'This'}|[{'var',324,'Pos'}|[{'var',324,'Page'}|[{'var',324,'Text'}]]]]}|[{'type',324,'boolean',[]}]]}|[[{'type',325,'constraint',[{'atom',325,'is_subtype'}|[[{'var',325,'This'}|[{'type',325,'wxTreebook',[]}]]]]}|[{'type',325,'constraint',[{'atom',325,'is_subtype'}|[[{'var',325,'Pos'}|[{'type',325,'integer',[]}]]]]}|[{'type',325,'constraint',[{'atom',325,'is_subtype'}|[[{'var',325,'Page'}|[{'remote_type',325,[{'atom',325,'wxWindow'}|[{'atom',325,'wxWindow'}|[[]]]]}]]]]}|[{'type',325,'constraint',[{'atom',325,'is_subtype'}|[[{'var',325,'Text'}|[{'remote_type',325,[{'atom',325,'unicode'}|[{'atom',325,'chardata'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 332
		'spec' =
		    %% Line 332
		    [{{'insertPage',5},[{'type',332,'bounded_fun',[{'type',332,'fun',[{'type',332,'product',[{'var',332,'This'}|[{'var',332,'Pos'}|[{'var',332,'Page'}|[{'var',332,'Text'}|[{'type',332,'list',[{'var',332,'Option'}]}]]]]]}|[{'type',332,'boolean',[]}]]}|[[{'type',333,'constraint',[{'atom',333,'is_subtype'}|[[{'var',333,'This'}|[{'type',333,'wxTreebook',[]}]]]]}|[{'type',333,'constraint',[{'atom',333,'is_subtype'}|[[{'var',333,'Pos'}|[{'type',333,'integer',[]}]]]]}|[{'type',333,'constraint',[{'atom',333,'is_subtype'}|[[{'var',333,'Page'}|[{'remote_type',333,[{'atom',333,'wxWindow'}|[{'atom',333,'wxWindow'}|[[]]]]}]]]]}|[{'type',333,'constraint',[{'atom',333,'is_subtype'}|[[{'var',333,'Text'}|[{'remote_type',333,[{'atom',333,'unicode'}|[{'atom',333,'chardata'}|[[]]]]}]]]]}|[{'type',334,'constraint',[{'atom',334,'is_subtype'}|[[{'var',334,'Option'}|[{'type',334,'union',[{'type',334,'tuple',[{'atom',334,'bSelect'}|[{'type',334,'boolean',[]}]]}|[{'type',335,'tuple',[{'atom',335,'imageId'}|[{'type',335,'integer',[]}]]}]]}]]]]}]]]]]]]}]}],
		%% Line 349
		'spec' =
		    %% Line 349
		    [{{'insertSubPage',4},[{'type',349,'bounded_fun',[{'type',349,'fun',[{'type',349,'product',[{'var',349,'This'}|[{'var',349,'Pos'}|[{'var',349,'Page'}|[{'var',349,'Text'}]]]]}|[{'type',349,'boolean',[]}]]}|[[{'type',350,'constraint',[{'atom',350,'is_subtype'}|[[{'var',350,'This'}|[{'type',350,'wxTreebook',[]}]]]]}|[{'type',350,'constraint',[{'atom',350,'is_subtype'}|[[{'var',350,'Pos'}|[{'type',350,'integer',[]}]]]]}|[{'type',350,'constraint',[{'atom',350,'is_subtype'}|[[{'var',350,'Page'}|[{'remote_type',350,[{'atom',350,'wxWindow'}|[{'atom',350,'wxWindow'}|[[]]]]}]]]]}|[{'type',350,'constraint',[{'atom',350,'is_subtype'}|[[{'var',350,'Text'}|[{'remote_type',350,[{'atom',350,'unicode'}|[{'atom',350,'chardata'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 357
		'spec' =
		    %% Line 357
		    [{{'insertSubPage',5},[{'type',357,'bounded_fun',[{'type',357,'fun',[{'type',357,'product',[{'var',357,'This'}|[{'var',357,'Pos'}|[{'var',357,'Page'}|[{'var',357,'Text'}|[{'type',357,'list',[{'var',357,'Option'}]}]]]]]}|[{'type',357,'boolean',[]}]]}|[[{'type',358,'constraint',[{'atom',358,'is_subtype'}|[[{'var',358,'This'}|[{'type',358,'wxTreebook',[]}]]]]}|[{'type',358,'constraint',[{'atom',358,'is_subtype'}|[[{'var',358,'Pos'}|[{'type',358,'integer',[]}]]]]}|[{'type',358,'constraint',[{'atom',358,'is_subtype'}|[[{'var',358,'Page'}|[{'remote_type',358,[{'atom',358,'wxWindow'}|[{'atom',358,'wxWindow'}|[[]]]]}]]]]}|[{'type',358,'constraint',[{'atom',358,'is_subtype'}|[[{'var',358,'Text'}|[{'remote_type',358,[{'atom',358,'unicode'}|[{'atom',358,'chardata'}|[[]]]]}]]]]}|[{'type',359,'constraint',[{'atom',359,'is_subtype'}|[[{'var',359,'Option'}|[{'type',359,'union',[{'type',359,'tuple',[{'atom',359,'bSelect'}|[{'type',359,'boolean',[]}]]}|[{'type',360,'tuple',[{'atom',360,'imageId'}|[{'type',360,'integer',[]}]]}]]}]]]]}]]]]]]]}]}],
		%% Line 374
		'spec' =
		    %% Line 374
		    [{{'setImageList',2},[{'type',374,'bounded_fun',[{'type',374,'fun',[{'type',374,'product',[{'var',374,'This'}|[{'var',374,'ImageList'}]]}|[{'atom',374,'ok'}]]}|[[{'type',375,'constraint',[{'atom',375,'is_subtype'}|[[{'var',375,'This'}|[{'type',375,'wxTreebook',[]}]]]]}|[{'type',375,'constraint',[{'atom',375,'is_subtype'}|[[{'var',375,'ImageList'}|[{'remote_type',375,[{'atom',375,'wxImageList'}|[{'atom',375,'wxImageList'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 383
		'spec' =
		    %% Line 383
		    [{{'setPageSize',2},[{'type',383,'bounded_fun',[{'type',383,'fun',[{'type',383,'product',[{'var',383,'This'}|[{'var',383,'Size'}]]}|[{'atom',383,'ok'}]]}|[[{'type',384,'constraint',[{'atom',384,'is_subtype'}|[[{'var',384,'This'}|[{'type',384,'wxTreebook',[]}]]]]}|[{'type',384,'constraint',[{'atom',384,'is_subtype'}|[[{'var',384,'Size'}|[{'type',384,'tuple',[{'ann_type',384,[{'var',384,'W'}|[{'type',384,'integer',[]}]]}|[{'ann_type',384,[{'var',384,'H'}|[{'type',384,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 392
		'spec' =
		    %% Line 392
		    [{{'setPageImage',3},[{'type',392,'bounded_fun',[{'type',392,'fun',[{'type',392,'product',[{'var',392,'This'}|[{'var',392,'N'}|[{'var',392,'ImageId'}]]]}|[{'type',392,'boolean',[]}]]}|[[{'type',393,'constraint',[{'atom',393,'is_subtype'}|[[{'var',393,'This'}|[{'type',393,'wxTreebook',[]}]]]]}|[{'type',393,'constraint',[{'atom',393,'is_subtype'}|[[{'var',393,'N'}|[{'type',393,'integer',[]}]]]]}|[{'type',393,'constraint',[{'atom',393,'is_subtype'}|[[{'var',393,'ImageId'}|[{'type',393,'integer',[]}]]]]}]]]]]}]}],
		%% Line 401
		'spec' =
		    %% Line 401
		    [{{'setPageText',3},[{'type',401,'bounded_fun',[{'type',401,'fun',[{'type',401,'product',[{'var',401,'This'}|[{'var',401,'N'}|[{'var',401,'StrText'}]]]}|[{'type',401,'boolean',[]}]]}|[[{'type',402,'constraint',[{'atom',402,'is_subtype'}|[[{'var',402,'This'}|[{'type',402,'wxTreebook',[]}]]]]}|[{'type',402,'constraint',[{'atom',402,'is_subtype'}|[[{'var',402,'N'}|[{'type',402,'integer',[]}]]]]}|[{'type',402,'constraint',[{'atom',402,'is_subtype'}|[[{'var',402,'StrText'}|[{'remote_type',402,[{'atom',402,'unicode'}|[{'atom',402,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 411
		'spec' =
		    %% Line 411
		    [{{'setSelection',2},[{'type',411,'bounded_fun',[{'type',411,'fun',[{'type',411,'product',[{'var',411,'This'}|[{'var',411,'N'}]]}|[{'type',411,'integer',[]}]]}|[[{'type',412,'constraint',[{'atom',412,'is_subtype'}|[[{'var',412,'This'}|[{'type',412,'wxTreebook',[]}]]]]}|[{'type',412,'constraint',[{'atom',412,'is_subtype'}|[[{'var',412,'N'}|[{'type',412,'integer',[]}]]]]}]]]]}]}],
		%% Line 420
		'spec' =
		    %% Line 420
		    [{{'changeSelection',2},[{'type',420,'bounded_fun',[{'type',420,'fun',[{'type',420,'product',[{'var',420,'This'}|[{'var',420,'N'}]]}|[{'type',420,'integer',[]}]]}|[[{'type',421,'constraint',[{'atom',421,'is_subtype'}|[[{'var',421,'This'}|[{'type',421,'wxTreebook',[]}]]]]}|[{'type',421,'constraint',[{'atom',421,'is_subtype'}|[[{'var',421,'N'}|[{'type',421,'integer',[]}]]]]}]]]]}]}],
		%% Line 429
		'spec' =
		    %% Line 429
		    [{{'destroy',1},[{'type',429,'fun',[{'type',429,'product',[{'ann_type',429,[{'var',429,'This'}|[{'type',429,'wxTreebook',[]}]]}]}|[{'atom',429,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 80
    fun (_cor0) ->
	case _cor0 of
	  <'wxControl'> when 'true' ->
	      'true'
	  %% Line 81
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 82
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 83
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxTreebook'})
	end
'new'/0 =
    %% Line 88
    fun () ->
	%% Line 89
	call 'wxe_util':'construct'
	    (1978, %% Line 90
		   #{}#)
'new'/2 =
    %% Line 96
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor5,_cor6,_cor7},Id>
	      when %% Line 97
		call 'erlang':'is_integer'
		    (Id) ->
	      %% Line 98
	      apply 'new'/3
		  (Parent, Id, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'new'/3 =
    %% Line 106
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor21},Id,Options>
	      when let <_cor3> =
		    %% Line 107
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor4> =
			%% Line 107
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 107
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 108
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 109
		      ( fun (_cor11,_cor10) ->
			    case <_cor11,_cor10> of
			      <{'pos',{PosX,PosY}},Acc> when 'true' ->
				  let <_cor7> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<PosX>(32,1,'integer',['unsigned'|['native']]),
					#<PosY>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor7|Acc]
			      %% Line 110
			      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				  let <_cor8> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<SizeW>(32,1,'integer',['unsigned'|['native']]),
					#<SizeH>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor8|Acc]
			      %% Line 111
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor9> =
				      #{#<3>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor9|Acc]
			      %% Line 112
			      <BadOpt,_cor22> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/3-fun-0-'}}] )
		  in  let <_cor15> =
			  %% Line 113
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 113
			      call 'erlang':'list_to_binary'
				  (_cor15)
			  in  let <_cor17> =
				  %% Line 115
				  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				    #<Id>(32,1,'integer',['unsigned'|['native']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 114
				  call 'wxe_util':'construct'
				      (1979, _cor17)
	  ( <_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19,_cor18})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'addPage'/3 =
    %% Line 121
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor8,_cor9,_cor10},Page = {'wx_ref',_cor11,_cor12,_cor13},Text>
	      when %% Line 122
		call 'erlang':'is_list'
		    (Text) ->
	      %% Line 123
	      apply 'addPage'/4
		  (This, Page, Text, [])
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'addPage',3}}] )
	    -| ['compiler_generated'] )
	end
'addPage'/4 =
    %% Line 130
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor32},{'wx_ref',PageRef,PageT,_cor33},Text,Options>
	      when let <_cor4> =
		    %% Line 131
		    call 'erlang':'is_list'
			(Text)
		in  let <_cor5> =
			%% Line 131
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 131
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 132
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 133
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (PageT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call PageT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <Text_UC> =
			  %% Line 134
			  call 'unicode':'characters_to_binary'
			      ([Text|[0]])
		      in  let <MOpts> =
			      %% Line 135
			      ( fun (_cor15,_cor14) ->
				    case <_cor15,_cor14> of
				      <{'bSelect',BSelect},Acc> when 'true' ->
					  let <_cor11> =
					      call 'wxe_util':'from_bool'
						  (BSelect)
					  in  let <_cor12> =
						  #{#<1>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor11>(32,1,'integer',['unsigned'|['native']])}#
					      in  [_cor12|Acc]
				      %% Line 136
				      <{'imageId',ImageId},Acc> when 'true' ->
					  let <_cor13> =
					      #{#<2>(32,1,'integer',['unsigned'|['native']]),
						#<ImageId>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor13|Acc]
				      %% Line 137
				      <BadOpt,_cor34> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-addPage/4-fun-0-'}}] )
			  in  let <_cor19> =
				  %% Line 138
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 138
				      call 'erlang':'list_to_binary'
					  (_cor19)
				  in  let <_cor26> =
					  %% Line 140
					  call 'erlang':'byte_size'
					      (Text_UC)
				      in  let <_cor21> =
					      %% Line 140
					      call 'erlang':'byte_size'
						  (Text_UC)
					  in  let <_cor22> =
						  %% Line 140
						  call 'erlang':'+'
						      (4, _cor21)
					      in  let <_cor23> =
						      %% Line 140
						      call 'erlang':'band'
							  (_cor22, 7)
						  in  let <_cor24> =
							  %% Line 140
							  call 'erlang':'-'
							      (8, _cor23)
						      in  let <_cor25> =
							      %% Line 140
							      call 'erlang':'band'
								  (_cor24, 7)
							  in  let <_cor27> =
								  %% Line 140
								  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								    #<PageRef>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor26>(32,1,'integer',['unsigned'|['native']]),
								    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor25,8,'integer',['unsigned'|['big']]),
								    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							      in  %% Line 139
								  call 'wxe_util':'call'
								      (1980, _cor27)
	  ( <_cor31,_cor30,_cor29,_cor28> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor31,_cor30,_cor29,_cor28})
		  -| [{'function_name',{'addPage',4}}] )
	    -| ['compiler_generated'] )
	end
'advanceSelection'/1 =
    %% Line 146
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 147
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 148
	      apply 'advanceSelection'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'advanceSelection',1}}] )
	    -| ['compiler_generated'] )
	end
'advanceSelection'/2 =
    %% Line 154
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 155
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 156
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 157
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'forward',Forward},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Forward)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 158
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-advanceSelection/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 159
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 159
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 161
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 160
				  call 'wxe_util':'cast'
				      (1981, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'advanceSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'assignImageList'/2 =
    %% Line 166
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',ImageListRef,ImageListT,_cor10}> when 'true' ->
	      do  %% Line 167
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 168
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ImageListT,
				       'wxImageList') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ImageListT:'parent_class'
				    ('wxImageList')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 170
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<ImageListRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 169
			  call 'wxe_util':'cast'
			      (1982, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'assignImageList',2}}] )
	    -| ['compiler_generated'] )
	end
'create'/3 =
    %% Line 176
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor8,_cor9,_cor10},Parent = {'wx_ref',_cor11,_cor12,_cor13},Id>
	      when %% Line 177
		call 'erlang':'is_integer'
		    (Id) ->
	      %% Line 178
	      apply 'create'/4
		  (This, Parent, Id, [])
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'create',3}}] )
	    -| ['compiler_generated'] )
	end
'create'/4 =
    %% Line 186
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor25},{'wx_ref',ParentRef,ParentT,_cor26},Id,Options>
	      when let <_cor4> =
		    %% Line 187
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor5> =
			%% Line 187
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 187
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 188
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 189
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <MOpts> =
			  %% Line 190
			  ( fun (_cor14,_cor13) ->
				case <_cor14,_cor13> of
				  <{'pos',{PosX,PosY}},Acc> when 'true' ->
				      let <_cor10> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<PosX>(32,1,'integer',['unsigned'|['native']]),
					    #<PosY>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor10|Acc]
				  %% Line 191
				  <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				      let <_cor11> =
					  #{#<2>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeW>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeH>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor11|Acc]
				  %% Line 192
				  <{'style',Style},Acc> when 'true' ->
				      let <_cor12> =
					  #{#<3>(32,1,'integer',['unsigned'|['native']]),
					    #<Style>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor12|Acc]
				  %% Line 193
				  <BadOpt,_cor27> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-create/4-fun-0-'}}] )
		      in  let <_cor18> =
			      %% Line 194
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 194
				  call 'erlang':'list_to_binary'
				      (_cor18)
			      in  let <_cor20> =
				      %% Line 196
				      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
					#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
					#<Id>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']]),
					#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				  in  %% Line 195
				      call 'wxe_util':'call'
					  (1983, _cor20)
	  ( <_cor24,_cor23,_cor22,_cor21> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22,_cor21})
		  -| [{'function_name',{'create',4}}] )
	    -| ['compiler_generated'] )
	end
'deleteAllPages'/1 =
    %% Line 201
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 202
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 204
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 203
		      call 'wxe_util':'call'
			  (1984, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'deleteAllPages',1}}] )
	    -| ['compiler_generated'] )
	end
'deletePage'/2 =
    %% Line 209
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 210
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 211
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 213
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 212
		      call 'wxe_util':'call'
			  (1985, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'deletePage',2}}] )
	    -| ['compiler_generated'] )
	end
'removePage'/2 =
    %% Line 218
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 219
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 220
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 222
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 221
		      call 'wxe_util':'call'
			  (1986, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'removePage',2}}] )
	    -| ['compiler_generated'] )
	end
'getCurrentPage'/1 =
    %% Line 227
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 228
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 230
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 229
		      call 'wxe_util':'call'
			  (1987, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCurrentPage',1}}] )
	    -| ['compiler_generated'] )
	end
'getImageList'/1 =
    %% Line 235
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 236
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 238
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 237
		      call 'wxe_util':'call'
			  (1988, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getImageList',1}}] )
	    -| ['compiler_generated'] )
	end
'getPage'/2 =
    %% Line 243
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 244
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 245
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 247
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 246
		      call 'wxe_util':'call'
			  (1990, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getPage',2}}] )
	    -| ['compiler_generated'] )
	end
'getPageCount'/1 =
    %% Line 252
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 253
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 255
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 254
		      call 'wxe_util':'call'
			  (1991, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPageCount',1}}] )
	    -| ['compiler_generated'] )
	end
'getPageImage'/2 =
    %% Line 260
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 261
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 262
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 264
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 263
		      call 'wxe_util':'call'
			  (1992, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getPageImage',2}}] )
	    -| ['compiler_generated'] )
	end
'getPageText'/2 =
    %% Line 269
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 270
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 271
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 273
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 272
		      call 'wxe_util':'call'
			  (1993, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getPageText',2}}] )
	    -| ['compiler_generated'] )
	end
'getSelection'/1 =
    %% Line 278
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 279
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 281
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 280
		      call 'wxe_util':'call'
			  (1994, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSelection',1}}] )
	    -| ['compiler_generated'] )
	end
'expandNode'/2 =
    %% Line 287
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <This = {'wx_ref',_cor5,_cor6,_cor7},Pos>
	      when %% Line 288
		call 'erlang':'is_integer'
		    (Pos) ->
	      %% Line 289
	      apply 'expandNode'/3
		  (This, Pos, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'expandNode',2}}] )
	    -| ['compiler_generated'] )
	end
'expandNode'/3 =
    %% Line 295
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor20},Pos,Options>
	      when let <_cor3> =
		    %% Line 296
		    call 'erlang':'is_integer'
			(Pos)
		in  let <_cor4> =
			%% Line 296
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 296
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 297
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 298
		      ( fun (_cor10,_cor9) ->
			    case <_cor10,_cor9> of
			      <{'expand',Expand},Acc> when 'true' ->
				  let <_cor7> =
				      call 'wxe_util':'from_bool'
					  (Expand)
				  in  let <_cor8> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor8|Acc]
			      %% Line 299
			      <BadOpt,_cor21> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-expandNode/3-fun-0-'}}] )
		  in  let <_cor14> =
			  %% Line 300
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 300
			      call 'erlang':'list_to_binary'
				  (_cor14)
			  in  let <_cor16> =
				  %% Line 302
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<Pos>(32,1,'integer',['unsigned'|['native']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 301
				  call 'wxe_util':'call'
				      (1995, _cor16)
	  ( <_cor19,_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17})
		  -| [{'function_name',{'expandNode',3}}] )
	    -| ['compiler_generated'] )
	end
'isNodeExpanded'/2 =
    %% Line 307
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 308
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 309
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 311
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 310
		      call 'wxe_util':'call'
			  (1996, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'isNodeExpanded',2}}] )
	    -| ['compiler_generated'] )
	end
'hitTest'/2 =
    %% Line 317
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{PtX,PtY}>
	      when let <_cor2> =
		    %% Line 318
		    call 'erlang':'is_integer'
			(PtX)
		in  let <_cor3> =
			%% Line 318
			call 'erlang':'is_integer'
			    (PtY)
		    in  %% Line 318
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 319
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 321
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PtX>(32,1,'integer',['unsigned'|['native']]),
			#<PtY>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 320
		      call 'wxe_util':'call'
			  (1998, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'hitTest',2}}] )
	    -| ['compiler_generated'] )
	end
'insertPage'/4 =
    %% Line 327
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor12,_cor13,_cor14},Pos,Page = {'wx_ref',_cor15,_cor16,_cor17},Text>
	      when let <_cor4> =
		    %% Line 328
		    call 'erlang':'is_integer'
			(Pos)
		in  let <_cor5> =
			%% Line 328
			call 'erlang':'is_list'
			    (Text)
		    in  %% Line 328
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor4, _cor5)
			  -| ['compiler_generated'] ) ->
	      %% Line 329
	      apply 'insertPage'/5
		  (This, Pos, Page, Text, [])
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'insertPage',4}}] )
	    -| ['compiler_generated'] )
	end
'insertPage'/5 =
    %% Line 336
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor36},Pos,{'wx_ref',PageRef,PageT,_cor37},Text,Options>
	      when %% Line 337
		try
		    let <_cor5> =
			call 'erlang':'is_integer'
			    (Pos)
		    in  let <_cor6> =
			    call 'erlang':'is_list'
				(Text)
			in  let <_cor7> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor8> =
				    call 'erlang':'and'
					(_cor6, _cor7)
				in  call 'erlang':'and'
					(_cor5, _cor8)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 338
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 339
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (PageT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call PageT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <Text_UC> =
			  %% Line 340
			  call 'unicode':'characters_to_binary'
			      ([Text|[0]])
		      in  let <MOpts> =
			      %% Line 341
			      ( fun (_cor18,_cor17) ->
				    case <_cor18,_cor17> of
				      <{'bSelect',BSelect},Acc> when 'true' ->
					  let <_cor14> =
					      call 'wxe_util':'from_bool'
						  (BSelect)
					  in  let <_cor15> =
						  #{#<1>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor14>(32,1,'integer',['unsigned'|['native']])}#
					      in  [_cor15|Acc]
				      %% Line 342
				      <{'imageId',ImageId},Acc> when 'true' ->
					  let <_cor16> =
					      #{#<2>(32,1,'integer',['unsigned'|['native']]),
						#<ImageId>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor16|Acc]
				      %% Line 343
				      <BadOpt,_cor38> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-insertPage/5-fun-0-'}}] )
			  in  let <_cor22> =
				  %% Line 344
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 344
				      call 'erlang':'list_to_binary'
					  (_cor22)
				  in  let <_cor29> =
					  %% Line 346
					  call 'erlang':'byte_size'
					      (Text_UC)
				      in  let <_cor24> =
					      %% Line 346
					      call 'erlang':'byte_size'
						  (Text_UC)
					  in  let <_cor25> =
						  %% Line 346
						  call 'erlang':'+'
						      (0, _cor24)
					      in  let <_cor26> =
						      %% Line 346
						      call 'erlang':'band'
							  (_cor25, 7)
						  in  let <_cor27> =
							  %% Line 346
							  call 'erlang':'-'
							      (8, _cor26)
						      in  let <_cor28> =
							      %% Line 346
							      call 'erlang':'band'
								  (_cor27, 7)
							  in  let <_cor30> =
								  %% Line 346
								  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								    #<Pos>(32,1,'integer',['unsigned'|['native']]),
								    #<PageRef>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor29>(32,1,'integer',['unsigned'|['native']]),
								    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor28,8,'integer',['unsigned'|['big']]),
								    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							      in  %% Line 345
								  call 'wxe_util':'call'
								      (1999, _cor30)
	  ( <_cor35,_cor34,_cor33,_cor32,_cor31> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor35,_cor34,_cor33,_cor32,_cor31})
		  -| [{'function_name',{'insertPage',5}}] )
	    -| ['compiler_generated'] )
	end
'insertSubPage'/4 =
    %% Line 352
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor12,_cor13,_cor14},Pos,Page = {'wx_ref',_cor15,_cor16,_cor17},Text>
	      when let <_cor4> =
		    %% Line 353
		    call 'erlang':'is_integer'
			(Pos)
		in  let <_cor5> =
			%% Line 353
			call 'erlang':'is_list'
			    (Text)
		    in  %% Line 353
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor4, _cor5)
			  -| ['compiler_generated'] ) ->
	      %% Line 354
	      apply 'insertSubPage'/5
		  (This, Pos, Page, Text, [])
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'insertSubPage',4}}] )
	    -| ['compiler_generated'] )
	end
'insertSubPage'/5 =
    %% Line 361
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor36},Pos,{'wx_ref',PageRef,PageT,_cor37},Text,Options>
	      when %% Line 362
		try
		    let <_cor5> =
			call 'erlang':'is_integer'
			    (Pos)
		    in  let <_cor6> =
			    call 'erlang':'is_list'
				(Text)
			in  let <_cor7> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor8> =
				    call 'erlang':'and'
					(_cor6, _cor7)
				in  call 'erlang':'and'
					(_cor5, _cor8)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 363
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 364
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (PageT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call PageT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <Text_UC> =
			  %% Line 365
			  call 'unicode':'characters_to_binary'
			      ([Text|[0]])
		      in  let <MOpts> =
			      %% Line 366
			      ( fun (_cor18,_cor17) ->
				    case <_cor18,_cor17> of
				      <{'bSelect',BSelect},Acc> when 'true' ->
					  let <_cor14> =
					      call 'wxe_util':'from_bool'
						  (BSelect)
					  in  let <_cor15> =
						  #{#<1>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor14>(32,1,'integer',['unsigned'|['native']])}#
					      in  [_cor15|Acc]
				      %% Line 367
				      <{'imageId',ImageId},Acc> when 'true' ->
					  let <_cor16> =
					      #{#<2>(32,1,'integer',['unsigned'|['native']]),
						#<ImageId>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor16|Acc]
				      %% Line 368
				      <BadOpt,_cor38> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-insertSubPage/5-fun-0-'}}] )
			  in  let <_cor22> =
				  %% Line 369
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 369
				      call 'erlang':'list_to_binary'
					  (_cor22)
				  in  let <_cor29> =
					  %% Line 371
					  call 'erlang':'byte_size'
					      (Text_UC)
				      in  let <_cor24> =
					      %% Line 371
					      call 'erlang':'byte_size'
						  (Text_UC)
					  in  let <_cor25> =
						  %% Line 371
						  call 'erlang':'+'
						      (0, _cor24)
					      in  let <_cor26> =
						      %% Line 371
						      call 'erlang':'band'
							  (_cor25, 7)
						  in  let <_cor27> =
							  %% Line 371
							  call 'erlang':'-'
							      (8, _cor26)
						      in  let <_cor28> =
							      %% Line 371
							      call 'erlang':'band'
								  (_cor27, 7)
							  in  let <_cor30> =
								  %% Line 371
								  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								    #<Pos>(32,1,'integer',['unsigned'|['native']]),
								    #<PageRef>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor29>(32,1,'integer',['unsigned'|['native']]),
								    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor28,8,'integer',['unsigned'|['big']]),
								    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							      in  %% Line 370
								  call 'wxe_util':'call'
								      (2000, _cor30)
	  ( <_cor35,_cor34,_cor33,_cor32,_cor31> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor35,_cor34,_cor33,_cor32,_cor31})
		  -| [{'function_name',{'insertSubPage',5}}] )
	    -| ['compiler_generated'] )
	end
'setImageList'/2 =
    %% Line 376
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',ImageListRef,ImageListT,_cor10}> when 'true' ->
	      do  %% Line 377
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 378
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ImageListT,
				       'wxImageList') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ImageListT:'parent_class'
				    ('wxImageList')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 380
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<ImageListRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 379
			  call 'wxe_util':'cast'
			      (2001, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setImageList',2}}] )
	    -| ['compiler_generated'] )
	end
'setPageSize'/2 =
    %% Line 385
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{SizeW,SizeH}>
	      when let <_cor2> =
		    %% Line 386
		    call 'erlang':'is_integer'
			(SizeW)
		in  let <_cor3> =
			%% Line 386
			call 'erlang':'is_integer'
			    (SizeH)
		    in  %% Line 386
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 387
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 389
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<SizeW>(32,1,'integer',['unsigned'|['native']]),
			#<SizeH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 388
		      call 'wxe_util':'cast'
			  (2002, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setPageSize',2}}] )
	    -| ['compiler_generated'] )
	end
'setPageImage'/3 =
    %% Line 394
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},N,ImageId>
	      when let <_cor3> =
		    %% Line 395
		    call 'erlang':'is_integer'
			(N)
		in  let <_cor4> =
			%% Line 395
			call 'erlang':'is_integer'
			    (ImageId)
		    in  %% Line 395
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 396
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 398
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']]),
			#<ImageId>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 397
		      call 'wxe_util':'call'
			  (2003, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setPageImage',3}}] )
	    -| ['compiler_generated'] )
	end
'setPageText'/3 =
    %% Line 403
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},N,StrText>
	      when let <_cor3> =
		    %% Line 404
		    call 'erlang':'is_integer'
			(N)
		in  let <_cor4> =
			%% Line 404
			call 'erlang':'is_list'
			    (StrText)
		    in  %% Line 404
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 405
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <StrText_UC> =
		      %% Line 406
		      call 'unicode':'characters_to_binary'
			  ([StrText|[0]])
		  in  let <_cor13> =
			  %% Line 408
			  call 'erlang':'byte_size'
			      (StrText_UC)
		      in  let <_cor8> =
			      %% Line 408
			      call 'erlang':'byte_size'
				  (StrText_UC)
			  in  let <_cor9> =
				  %% Line 408
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 408
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 408
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 408
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 408
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<N>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<StrText_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 407
						  call 'wxe_util':'call'
						      (2004, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'setPageText',3}}] )
	    -| ['compiler_generated'] )
	end
'setSelection'/2 =
    %% Line 413
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 414
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 415
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 417
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 416
		      call 'wxe_util':'call'
			  (2005, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'changeSelection'/2 =
    %% Line 422
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 423
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 424
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 426
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 425
		      call 'wxe_util':'call'
			  (2006, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'changeSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 430
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 431
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxTreebook') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxTreebook')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 432
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 433
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'setLabel'/2 =
    %% Line 436
    fun (_cor1,_cor0) ->
	call 'wxControl':'setLabel'
	    (_cor1, _cor0)
'getLabel'/1 =
    %% Line 438
    fun (_cor0) ->
	call 'wxControl':'getLabel'
	    (_cor0)
'warpPointer'/3 =
    %% Line 441
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 443
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 445
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 447
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 449
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 451
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 453
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 455
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 457
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 459
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 461
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 463
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 465
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 467
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 469
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 471
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 473
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 475
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 477
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 479
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 481
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 483
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 485
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 487
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 489
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 491
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 493
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 495
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 497
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 499
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 501
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 503
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 505
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 507
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 509
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 511
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 513
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 515
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 517
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 519
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 521
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 523
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 525
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 527
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 529
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 531
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 533
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 535
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 537
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 539
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 541
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 543
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 545
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 547
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 549
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 551
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 553
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 555
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 557
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 559
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 561
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 563
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 565
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 567
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 569
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 571
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 573
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 575
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 577
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 579
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 581
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 583
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 585
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 587
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 589
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 591
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 593
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 595
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 597
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 599
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 601
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 603
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 605
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 607
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 609
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 611
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 613
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 615
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 617
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 619
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 621
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 623
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 625
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 627
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 629
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 631
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 633
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 635
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 637
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 639
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 641
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 643
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 645
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 647
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 649
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 651
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 653
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 655
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 657
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 659
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 661
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 663
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 665
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 667
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 669
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 671
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 673
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 675
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 677
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 679
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 681
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 683
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 685
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 687
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 689
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 691
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 693
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 695
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 697
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 699
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 701
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 703
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 705
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 707
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 709
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 711
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 713
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 715
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 717
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 719
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 721
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 723
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 725
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 727
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 729
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 731
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 733
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 735
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 737
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 739
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 741
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 743
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 745
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 747
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 749
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 751
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 753
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 755
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 757
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 759
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 761
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 763
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 765
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 767
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 769
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 771
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 773
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 775
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 777
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 779
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 781
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 783
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 785
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 788
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 790
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 792
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 794
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 796
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxTreebook')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxTreebook', _cor0)
end