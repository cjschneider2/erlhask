module 'wxSashEvent' ['getClientData'/1,
		      'getDragRect'/1,
		      'getDragStatus'/1,
		      'getEdge'/1,
		      'getExtraLong'/1,
		      'getId'/1,
		      'getInt'/1,
		      'getSelection'/1,
		      'getSkipped'/1,
		      'getString'/1,
		      'getTimestamp'/1,
		      'isChecked'/1,
		      'isCommandEvent'/1,
		      'isSelection'/1,
		      'module_info'/0,
		      'module_info'/1,
		      'parent_class'/1,
		      'resumePropagation'/2,
		      'setInt'/2,
		      'setString'/2,
		      'shouldPropagate'/1,
		      'skip'/1,
		      'skip'/2,
		      'stopPropagation'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 43
		'export_type' =
		    %% Line 43
		    [{'wxSashEvent',0}],
		%% Line 49
		'type' =
		    %% Line 49
		    [{'wxSashEvent',{'remote_type',49,[{'atom',49,'wx'}|[{'atom',49,'wx_object'}|[[]]]]},[]}],
		%% Line 52
		'spec' =
		    %% Line 52
		    [{{'getEdge',1},[{'type',52,'bounded_fun',[{'type',52,'fun',[{'type',52,'product',[{'var',52,'This'}]}|[{'remote_type',52,[{'atom',52,'wx'}|[{'atom',52,'wx_enum'}|[[]]]]}]]}|[[{'type',53,'constraint',[{'atom',53,'is_subtype'}|[[{'var',53,'This'}|[{'type',53,'wxSashEvent',[]}]]]]}]]]}]}],
		%% Line 60
		'spec' =
		    %% Line 60
		    [{{'getDragRect',1},[{'type',60,'bounded_fun',[{'type',60,'fun',[{'type',60,'product',[{'var',60,'This'}]}|[{'type',60,'tuple',[{'ann_type',60,[{'var',60,'X'}|[{'type',60,'integer',[]}]]}|[{'ann_type',60,[{'var',60,'Y'}|[{'type',60,'integer',[]}]]}|[{'ann_type',60,[{'var',60,'W'}|[{'type',60,'integer',[]}]]}|[{'ann_type',60,[{'var',60,'H'}|[{'type',60,'integer',[]}]]}]]]]}]]}|[[{'type',61,'constraint',[{'atom',61,'is_subtype'}|[[{'var',61,'This'}|[{'type',61,'wxSashEvent',[]}]]]]}]]]}]}],
		%% Line 69
		'spec' =
		    %% Line 69
		    [{{'getDragStatus',1},[{'type',69,'bounded_fun',[{'type',69,'fun',[{'type',69,'product',[{'var',69,'This'}]}|[{'remote_type',69,[{'atom',69,'wx'}|[{'atom',69,'wx_enum'}|[[]]]]}]]}|[[{'type',70,'constraint',[{'atom',70,'is_subtype'}|[[{'var',70,'This'}|[{'type',70,'wxSashEvent',[]}]]]]}]]]}]}]]
'parent_class'/1 =
    %% Line 45
    fun (_cor0) ->
	case _cor0 of
	  <'wxCommandEvent'> when 'true' ->
	      'true'
	  %% Line 46
	  <'wxEvent'> when 'true' ->
	      'true'
	  %% Line 47
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxSashEvent'})
	end
'getEdge'/1 =
    %% Line 54
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 55
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSashEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSashEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 57
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 56
		      call 'wxe_util':'call'
			  (2861, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getEdge',1}}] )
	    -| ['compiler_generated'] )
	end
'getDragRect'/1 =
    %% Line 62
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 63
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSashEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSashEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 65
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 64
		      call 'wxe_util':'call'
			  (2862, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getDragRect',1}}] )
	    -| ['compiler_generated'] )
	end
'getDragStatus'/1 =
    %% Line 71
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 72
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSashEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSashEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 74
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 73
		      call 'wxe_util':'call'
			  (2863, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getDragStatus',1}}] )
	    -| ['compiler_generated'] )
	end
'setString'/2 =
    %% Line 78
    fun (_cor1,_cor0) ->
	call 'wxCommandEvent':'setString'
	    (_cor1, _cor0)
'setInt'/2 =
    %% Line 80
    fun (_cor1,_cor0) ->
	call 'wxCommandEvent':'setInt'
	    (_cor1, _cor0)
'isSelection'/1 =
    %% Line 82
    fun (_cor0) ->
	call 'wxCommandEvent':'isSelection'
	    (_cor0)
'isChecked'/1 =
    %% Line 84
    fun (_cor0) ->
	call 'wxCommandEvent':'isChecked'
	    (_cor0)
'getString'/1 =
    %% Line 86
    fun (_cor0) ->
	call 'wxCommandEvent':'getString'
	    (_cor0)
'getSelection'/1 =
    %% Line 88
    fun (_cor0) ->
	call 'wxCommandEvent':'getSelection'
	    (_cor0)
'getInt'/1 =
    %% Line 90
    fun (_cor0) ->
	call 'wxCommandEvent':'getInt'
	    (_cor0)
'getExtraLong'/1 =
    %% Line 92
    fun (_cor0) ->
	call 'wxCommandEvent':'getExtraLong'
	    (_cor0)
'getClientData'/1 =
    %% Line 94
    fun (_cor0) ->
	call 'wxCommandEvent':'getClientData'
	    (_cor0)
'stopPropagation'/1 =
    %% Line 97
    fun (_cor0) ->
	call 'wxEvent':'stopPropagation'
	    (_cor0)
'skip'/2 =
    %% Line 99
    fun (_cor1,_cor0) ->
	call 'wxEvent':'skip'
	    (_cor1, _cor0)
'skip'/1 =
    %% Line 101
    fun (_cor0) ->
	call 'wxEvent':'skip'
	    (_cor0)
'shouldPropagate'/1 =
    %% Line 103
    fun (_cor0) ->
	call 'wxEvent':'shouldPropagate'
	    (_cor0)
'resumePropagation'/2 =
    %% Line 105
    fun (_cor1,_cor0) ->
	call 'wxEvent':'resumePropagation'
	    (_cor1, _cor0)
'isCommandEvent'/1 =
    %% Line 107
    fun (_cor0) ->
	call 'wxEvent':'isCommandEvent'
	    (_cor0)
'getTimestamp'/1 =
    %% Line 109
    fun (_cor0) ->
	call 'wxEvent':'getTimestamp'
	    (_cor0)
'getSkipped'/1 =
    %% Line 111
    fun (_cor0) ->
	call 'wxEvent':'getSkipped'
	    (_cor0)
'getId'/1 =
    %% Line 113
    fun (_cor0) ->
	call 'wxEvent':'getId'
	    (_cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxSashEvent')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxSashEvent', _cor0)
end