module 'wxStyledTextCtrl' ['addStyledText'/2,
			   'addText'/2,
			   'addTextRaw'/2,
			   'allocate'/2,
			   'appendText'/2,
			   'appendTextRaw'/2,
			   'autoCompActive'/1,
			   'autoCompCancel'/1,
			   'autoCompComplete'/1,
			   'autoCompGetAutoHide'/1,
			   'autoCompGetCancelAtStart'/1,
			   'autoCompGetChooseSingle'/1,
			   'autoCompGetCurrent'/1,
			   'autoCompGetDropRestOfWord'/1,
			   'autoCompGetIgnoreCase'/1,
			   'autoCompGetMaxHeight'/1,
			   'autoCompGetMaxWidth'/1,
			   'autoCompGetSeparator'/1,
			   'autoCompGetTypeSeparator'/1,
			   'autoCompPosStart'/1,
			   'autoCompSelect'/2,
			   'autoCompSetAutoHide'/2,
			   'autoCompSetCancelAtStart'/2,
			   'autoCompSetChooseSingle'/2,
			   'autoCompSetDropRestOfWord'/2,
			   'autoCompSetFillUps'/2,
			   'autoCompSetIgnoreCase'/2,
			   'autoCompSetMaxHeight'/2,
			   'autoCompSetMaxWidth'/2,
			   'autoCompSetSeparator'/2,
			   'autoCompSetTypeSeparator'/2,
			   'autoCompShow'/3,
			   'autoCompStops'/2,
			   'backTab'/1,
			   'beginUndoAction'/1,
			   'braceBadLight'/2,
			   'braceHighlight'/3,
			   'braceMatch'/2,
			   'cacheBestSize'/2,
			   'callTipActive'/1,
			   'callTipCancel'/1,
			   'callTipPosAtStart'/1,
			   'callTipSetBackground'/2,
			   'callTipSetForeground'/2,
			   'callTipSetForegroundHighlight'/2,
			   'callTipSetHighlight'/3,
			   'callTipShow'/3,
			   'callTipUseStyle'/2,
			   'canPaste'/1,
			   'canRedo'/1,
			   'canUndo'/1,
			   'cancel'/1,
			   'captureMouse'/1,
			   'center'/1,
			   'center'/2,
			   'centerOnParent'/1,
			   'centerOnParent'/2,
			   'centre'/1,
			   'centre'/2,
			   'centreOnParent'/1,
			   'centreOnParent'/2,
			   'charLeft'/1,
			   'charLeftExtend'/1,
			   'charLeftRectExtend'/1,
			   'charRight'/1,
			   'charRightExtend'/1,
			   'charRightRectExtend'/1,
			   'chooseCaretX'/1,
			   'clear'/1,
			   'clearAll'/1,
			   'clearBackground'/1,
			   'clearDocumentStyle'/1,
			   'clearRegisteredImages'/1,
			   'clientToScreen'/2,
			   'clientToScreen'/3,
			   'close'/1,
			   'close'/2,
			   'cmdKeyAssign'/4,
			   'cmdKeyClear'/3,
			   'cmdKeyClearAll'/1,
			   'cmdKeyExecute'/2,
			   'colourise'/3,
			   'connect'/2,
			   'connect'/3,
			   'convertDialogToPixels'/2,
			   'convertEOLs'/2,
			   'convertPixelsToDialog'/2,
			   'copy'/1,
			   'copyRange'/3,
			   'copyText'/3,
			   'create'/2,
			   'create'/3,
			   'cut'/1,
			   'delLineLeft'/1,
			   'delLineRight'/1,
			   'delWordLeft'/1,
			   'delWordRight'/1,
			   'deleteBack'/1,
			   'deleteBackNotLine'/1,
			   'destroy'/1,
			   'destroyChildren'/1,
			   'disable'/1,
			   'disconnect'/1,
			   'disconnect'/2,
			   'disconnect'/3,
			   'doDragOver'/4,
			   'doDropText'/4,
			   'docLineFromVisible'/2,
			   'documentEnd'/1,
			   'documentEndExtend'/1,
			   'documentStart'/1,
			   'documentStartExtend'/1,
			   'editToggleOvertype'/1,
			   'emptyUndoBuffer'/1,
			   'enable'/1,
			   'enable'/2,
			   'endUndoAction'/1,
			   'ensureCaretVisible'/1,
			   'ensureVisible'/2,
			   'ensureVisibleEnforcePolicy'/2,
			   'findColumn'/3,
			   'findText'/4,
			   'findText'/5,
			   'findWindow'/2,
			   'fit'/1,
			   'fitInside'/1,
			   'formFeed'/1,
			   'formatRange'/8,
			   'freeze'/1,
			   'getAcceleratorTable'/1,
			   'getAnchor'/1,
			   'getBackSpaceUnIndents'/1,
			   'getBackgroundColour'/1,
			   'getBackgroundStyle'/1,
			   'getBestSize'/1,
			   'getBufferedDraw'/1,
			   'getCaret'/1,
			   'getCaretForeground'/1,
			   'getCaretLineBackAlpha'/1,
			   'getCaretLineBackground'/1,
			   'getCaretLineVisible'/1,
			   'getCaretPeriod'/1,
			   'getCaretSticky'/1,
			   'getCaretWidth'/1,
			   'getCharAt'/2,
			   'getCharHeight'/1,
			   'getCharWidth'/1,
			   'getChildren'/1,
			   'getClientSize'/1,
			   'getCodePage'/1,
			   'getColumn'/2,
			   'getContainingSizer'/1,
			   'getControlCharSymbol'/1,
			   'getCurLine'/1,
			   'getCurLineRaw'/1,
			   'getCurrentLine'/1,
			   'getCurrentPos'/1,
			   'getCursor'/1,
			   'getDropTarget'/1,
			   'getEOLMode'/1,
			   'getEdgeColour'/1,
			   'getEdgeColumn'/1,
			   'getEdgeMode'/1,
			   'getEndAtLastLine'/1,
			   'getEndStyled'/1,
			   'getEventHandler'/1,
			   'getExtraStyle'/1,
			   'getFirstVisibleLine'/1,
			   'getFoldExpanded'/2,
			   'getFoldLevel'/2,
			   'getFoldParent'/2,
			   'getFont'/1,
			   'getForegroundColour'/1,
			   'getGrandParent'/1,
			   'getHandle'/1,
			   'getHelpText'/1,
			   'getHighlightGuide'/1,
			   'getId'/1,
			   'getIndent'/1,
			   'getIndentationGuides'/1,
			   'getLabel'/1,
			   'getLastChild'/3,
			   'getLastKeydownProcessed'/1,
			   'getLayoutCache'/1,
			   'getLength'/1,
			   'getLexer'/1,
			   'getLine'/2,
			   'getLineCount'/1,
			   'getLineEndPosition'/2,
			   'getLineIndentPosition'/2,
			   'getLineIndentation'/2,
			   'getLineRaw'/2,
			   'getLineState'/2,
			   'getLineVisible'/2,
			   'getMarginLeft'/1,
			   'getMarginMask'/2,
			   'getMarginRight'/1,
			   'getMarginSensitive'/2,
			   'getMarginType'/2,
			   'getMarginWidth'/2,
			   'getMaxLineState'/1,
			   'getMaxSize'/1,
			   'getMinSize'/1,
			   'getModEventMask'/1,
			   'getModify'/1,
			   'getMouseDownCaptures'/1,
			   'getMouseDwellTime'/1,
			   'getName'/1,
			   'getOvertype'/1,
			   'getParent'/1,
			   'getPasteConvertEndings'/1,
			   'getPosition'/1,
			   'getPrintColourMode'/1,
			   'getPrintMagnification'/1,
			   'getPrintWrapMode'/1,
			   'getProperty'/2,
			   'getReadOnly'/1,
			   'getRect'/1,
			   'getSTCCursor'/1,
			   'getSTCFocus'/1,
			   'getScreenPosition'/1,
			   'getScreenRect'/1,
			   'getScrollPos'/2,
			   'getScrollRange'/2,
			   'getScrollThumb'/2,
			   'getScrollWidth'/1,
			   'getSearchFlags'/1,
			   'getSelAlpha'/1,
			   'getSelectedText'/1,
			   'getSelectedTextRaw'/1,
			   'getSelection'/1,
			   'getSelectionEnd'/1,
			   'getSelectionMode'/1,
			   'getSelectionStart'/1,
			   'getSize'/1,
			   'getSizer'/1,
			   'getStatus'/1,
			   'getStyleAt'/2,
			   'getStyleBits'/1,
			   'getStyleBitsNeeded'/1,
			   'getStyledText'/3,
			   'getTabIndents'/1,
			   'getTabWidth'/1,
			   'getTargetEnd'/1,
			   'getTargetStart'/1,
			   'getText'/1,
			   'getTextExtent'/2,
			   'getTextExtent'/3,
			   'getTextLength'/1,
			   'getTextRange'/3,
			   'getTextRangeRaw'/3,
			   'getTextRaw'/1,
			   'getToolTip'/1,
			   'getTwoPhaseDraw'/1,
			   'getUndoCollection'/1,
			   'getUpdateRegion'/1,
			   'getUseAntiAliasing'/1,
			   'getUseHorizontalScrollBar'/1,
			   'getUseTabs'/1,
			   'getUseVerticalScrollBar'/1,
			   'getViewEOL'/1,
			   'getViewWhiteSpace'/1,
			   'getVirtualSize'/1,
			   'getWindowStyleFlag'/1,
			   'getWindowVariant'/1,
			   'getWrapMode'/1,
			   'getWrapStartIndent'/1,
			   'getWrapVisualFlags'/1,
			   'getWrapVisualFlagsLocation'/1,
			   'getXOffset'/1,
			   'getZoom'/1,
			   'gotoLine'/2,
			   'gotoPos'/2,
			   'hasCapture'/1,
			   'hasScrollbar'/2,
			   'hasTransparentBackground'/1,
			   'hide'/1,
			   'hideLines'/3,
			   'hideSelection'/2,
			   'home'/1,
			   'homeDisplay'/1,
			   'homeDisplayExtend'/1,
			   'homeExtend'/1,
			   'homeRectExtend'/1,
			   'homeWrapExtend'/1,
			   'indicatorGetForeground'/2,
			   'indicatorGetStyle'/2,
			   'indicatorSetForeground'/3,
			   'indicatorSetStyle'/3,
			   'inheritAttributes'/1,
			   'initDialog'/1,
			   'insertText'/3,
			   'insertTextRaw'/3,
			   'invalidateBestSize'/1,
			   'isEnabled'/1,
			   'isExposed'/2,
			   'isExposed'/3,
			   'isExposed'/5,
			   'isRetained'/1,
			   'isShown'/1,
			   'isTopLevel'/1,
			   'layout'/1,
			   'lineCopy'/1,
			   'lineCut'/1,
			   'lineDelete'/1,
			   'lineDown'/1,
			   'lineDownExtend'/1,
			   'lineDownRectExtend'/1,
			   'lineDuplicate'/1,
			   'lineEnd'/1,
			   'lineEndDisplay'/1,
			   'lineEndDisplayExtend'/1,
			   'lineEndExtend'/1,
			   'lineEndRectExtend'/1,
			   'lineEndWrap'/1,
			   'lineEndWrapExtend'/1,
			   'lineFromPosition'/2,
			   'lineLength'/2,
			   'lineScroll'/3,
			   'lineScrollDown'/1,
			   'lineScrollUp'/1,
			   'lineTranspose'/1,
			   'lineUp'/1,
			   'lineUpExtend'/1,
			   'lineUpRectExtend'/1,
			   'linesJoin'/1,
			   'linesOnScreen'/1,
			   'linesSplit'/2,
			   'loadFile'/2,
			   'lower'/1,
			   'lowerCase'/1,
			   'makeModal'/1,
			   'makeModal'/2,
			   'markerAdd'/3,
			   'markerAddSet'/3,
			   'markerDefine'/3,
			   'markerDefine'/4,
			   'markerDefineBitmap'/3,
			   'markerDelete'/3,
			   'markerDeleteAll'/2,
			   'markerDeleteHandle'/2,
			   'markerGet'/2,
			   'markerLineFromHandle'/2,
			   'markerNext'/3,
			   'markerPrevious'/3,
			   'markerSetAlpha'/3,
			   'markerSetBackground'/3,
			   'markerSetForeground'/3,
			   'module_info'/0,
			   'module_info'/1,
			   'move'/2,
			   'move'/3,
			   'move'/4,
			   'moveAfterInTabOrder'/2,
			   'moveBeforeInTabOrder'/2,
			   'moveCaretInsideView'/1,
			   'navigate'/1,
			   'navigate'/2,
			   'new'/0,
			   'new'/1,
			   'new'/2,
			   'newLine'/1,
			   'pageDown'/1,
			   'pageDownExtend'/1,
			   'pageDownRectExtend'/1,
			   'pageUp'/1,
			   'pageUpExtend'/1,
			   'pageUpRectExtend'/1,
			   'paraDownExtend'/1,
			   'paraUp'/1,
			   'paraUpExtend'/1,
			   'parent_class'/1,
			   'paste'/1,
			   'pointFromPosition'/2,
			   'popEventHandler'/1,
			   'popEventHandler'/2,
			   'popupMenu'/2,
			   'popupMenu'/3,
			   'popupMenu'/4,
			   'positionAfter'/2,
			   'positionBefore'/2,
			   'positionFromLine'/2,
			   'positionFromPoint'/2,
			   'positionFromPointClose'/3,
			   'raise'/1,
			   'redo'/1,
			   'refresh'/1,
			   'refresh'/2,
			   'refreshRect'/2,
			   'refreshRect'/3,
			   'registerImage'/3,
			   'releaseMouse'/1,
			   'removeChild'/2,
			   'reparent'/2,
			   'replaceSelection'/2,
			   'replaceTarget'/2,
			   'saveFile'/2,
			   'screenToClient'/1,
			   'screenToClient'/2,
			   'scrollLines'/2,
			   'scrollPages'/2,
			   'scrollToColumn'/2,
			   'scrollToLine'/2,
			   'scrollWindow'/3,
			   'scrollWindow'/4,
			   'searchAnchor'/1,
			   'searchInTarget'/2,
			   'searchNext'/3,
			   'searchPrev'/3,
			   'selectAll'/1,
			   'selectionDuplicate'/1,
			   'selectionIsRectangle'/1,
			   'setAcceleratorTable'/2,
			   'setAnchor'/2,
			   'setAutoLayout'/2,
			   'setBackSpaceUnIndents'/2,
			   'setBackgroundColour'/2,
			   'setBackgroundStyle'/2,
			   'setBufferedDraw'/2,
			   'setCaret'/2,
			   'setCaretForeground'/2,
			   'setCaretLineBackAlpha'/2,
			   'setCaretLineBackground'/2,
			   'setCaretLineVisible'/2,
			   'setCaretPeriod'/2,
			   'setCaretSticky'/2,
			   'setCaretWidth'/2,
			   'setCharsDefault'/1,
			   'setClientSize'/2,
			   'setClientSize'/3,
			   'setCodePage'/2,
			   'setContainingSizer'/2,
			   'setControlCharSymbol'/2,
			   'setCurrentPos'/2,
			   'setCursor'/2,
			   'setDropTarget'/2,
			   'setEOLMode'/2,
			   'setEdgeColour'/2,
			   'setEdgeColumn'/2,
			   'setEdgeMode'/2,
			   'setExtraStyle'/2,
			   'setFocus'/1,
			   'setFocusFromKbd'/1,
			   'setFoldExpanded'/3,
			   'setFoldFlags'/2,
			   'setFoldLevel'/3,
			   'setFoldMarginColour'/3,
			   'setFoldMarginHiColour'/3,
			   'setFont'/2,
			   'setForegroundColour'/2,
			   'setHScrollBar'/2,
			   'setHelpText'/2,
			   'setHighlightGuide'/2,
			   'setHotspotActiveBackground'/3,
			   'setHotspotActiveForeground'/3,
			   'setHotspotActiveUnderline'/2,
			   'setHotspotSingleLine'/2,
			   'setId'/2,
			   'setIndent'/2,
			   'setIndentationGuides'/2,
			   'setKeyWords'/3,
			   'setLabel'/2,
			   'setLastKeydownProcessed'/2,
			   'setLayoutCache'/2,
			   'setLexer'/2,
			   'setLexerLanguage'/2,
			   'setLineIndentation'/3,
			   'setLineState'/3,
			   'setMarginLeft'/2,
			   'setMarginMask'/3,
			   'setMarginRight'/2,
			   'setMarginSensitive'/3,
			   'setMarginType'/3,
			   'setMarginWidth'/3,
			   'setMargins'/3,
			   'setMaxSize'/2,
			   'setMinSize'/2,
			   'setModEventMask'/2,
			   'setMouseDownCaptures'/2,
			   'setMouseDwellTime'/2,
			   'setName'/2,
			   'setOwnBackgroundColour'/2,
			   'setOwnFont'/2,
			   'setOwnForegroundColour'/2,
			   'setPalette'/2,
			   'setPasteConvertEndings'/2,
			   'setPrintColourMode'/2,
			   'setPrintMagnification'/2,
			   'setProperty'/3,
			   'setReadOnly'/2,
			   'setSTCCursor'/2,
			   'setSTCFocus'/2,
			   'setSavePoint'/1,
			   'setScrollPos'/3,
			   'setScrollPos'/4,
			   'setScrollWidth'/2,
			   'setScrollbar'/5,
			   'setScrollbar'/6,
			   'setSearchFlags'/2,
			   'setSelAlpha'/2,
			   'setSelBackground'/3,
			   'setSelForeground'/3,
			   'setSelection'/3,
			   'setSelectionEnd'/2,
			   'setSelectionMode'/2,
			   'setSelectionStart'/2,
			   'setSize'/2,
			   'setSize'/3,
			   'setSize'/5,
			   'setSize'/6,
			   'setSizeHints'/2,
			   'setSizeHints'/3,
			   'setSizeHints'/4,
			   'setSizer'/2,
			   'setSizer'/3,
			   'setSizerAndFit'/2,
			   'setSizerAndFit'/3,
			   'setStatus'/2,
			   'setStyleBytes'/2,
			   'setStyling'/3,
			   'setTabIndents'/2,
			   'setTabWidth'/2,
			   'setTargetEnd'/2,
			   'setTargetStart'/2,
			   'setText'/2,
			   'setTextRaw'/2,
			   'setThemeEnabled'/2,
			   'setToolTip'/2,
			   'setTwoPhaseDraw'/2,
			   'setUndoCollection'/2,
			   'setUseHorizontalScrollBar'/2,
			   'setUseTabs'/2,
			   'setUseVerticalScrollBar'/2,
			   'setVScrollBar'/2,
			   'setViewEOL'/2,
			   'setViewWhiteSpace'/2,
			   'setVirtualSize'/2,
			   'setVirtualSize'/3,
			   'setVirtualSizeHints'/2,
			   'setVirtualSizeHints'/3,
			   'setVirtualSizeHints'/4,
			   'setVisiblePolicy'/3,
			   'setWhitespaceBackground'/3,
			   'setWhitespaceChars'/2,
			   'setWhitespaceForeground'/3,
			   'setWindowStyle'/2,
			   'setWindowStyleFlag'/2,
			   'setWindowVariant'/2,
			   'setWordChars'/2,
			   'setWrapMode'/2,
			   'setWrapStartIndent'/2,
			   'setWrapVisualFlags'/2,
			   'setWrapVisualFlagsLocation'/2,
			   'setXCaretPolicy'/3,
			   'setYCaretPolicy'/3,
			   'setZoom'/2,
			   'shouldInheritColours'/1,
			   'show'/1,
			   'show'/2,
			   'showLines'/3,
			   'startRecord'/1,
			   'startStyling'/3,
			   'stopRecord'/1,
			   'stutteredPageDown'/1,
			   'stutteredPageDownExtend'/1,
			   'stutteredPageUp'/1,
			   'stutteredPageUpExtend'/1,
			   'styleClearAll'/1,
			   'styleResetDefault'/1,
			   'styleSetBackground'/3,
			   'styleSetBold'/3,
			   'styleSetCase'/3,
			   'styleSetCharacterSet'/3,
			   'styleSetEOLFilled'/3,
			   'styleSetFaceName'/3,
			   'styleSetFont'/3,
			   'styleSetFontAttr'/7,
			   'styleSetFontAttr'/8,
			   'styleSetFontEncoding'/3,
			   'styleSetForeground'/3,
			   'styleSetHotSpot'/3,
			   'styleSetItalic'/3,
			   'styleSetSize'/3,
			   'styleSetSpec'/3,
			   'styleSetUnderline'/3,
			   'styleSetVisible'/3,
			   'tab'/1,
			   'targetFromSelection'/1,
			   'textHeight'/2,
			   'textWidth'/3,
			   'thaw'/1,
			   'toggleCaretSticky'/1,
			   'toggleFold'/2,
			   'transferDataFromWindow'/1,
			   'transferDataToWindow'/1,
			   'undo'/1,
			   'update'/1,
			   'updateWindowUI'/1,
			   'updateWindowUI'/2,
			   'upperCase'/1,
			   'usePopUp'/2,
			   'userListShow'/3,
			   'vCHome'/1,
			   'vCHomeExtend'/1,
			   'vCHomeRectExtend'/1,
			   'vCHomeWrap'/1,
			   'vCHomeWrapExtend'/1,
			   'validate'/1,
			   'visibleFromDocLine'/2,
			   'warpPointer'/3,
			   'wordEndPosition'/3,
			   'wordLeft'/1,
			   'wordLeftEnd'/1,
			   'wordLeftEndExtend'/1,
			   'wordLeftExtend'/1,
			   'wordPartLeft'/1,
			   'wordPartLeftExtend'/1,
			   'wordPartRight'/1,
			   'wordPartRightExtend'/1,
			   'wordRight'/1,
			   'wordRightEnd'/1,
			   'wordRightEndExtend'/1,
			   'wordRightExtend'/1,
			   'wordStartPosition'/3,
			   'wrapCount'/2,
			   'zoomIn'/1,
			   'zoomOut'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 174
		'export_type' =
		    %% Line 174
		    [{'wxStyledTextCtrl',0}],
		%% Line 181
		'type' =
		    %% Line 181
		    [{'wxStyledTextCtrl',{'remote_type',181,[{'atom',181,'wx'}|[{'atom',181,'wx_object'}|[[]]]]},[]}],
		%% Line 183
		'spec' =
		    %% Line 183
		    [{{'new',0},[{'type',183,'fun',[{'type',183,'product',[]}|[{'type',183,'wxStyledTextCtrl',[]}]]}]}],
		%% Line 189
		'spec' =
		    %% Line 189
		    [{{'new',1},[{'type',189,'bounded_fun',[{'type',189,'fun',[{'type',189,'product',[{'var',189,'Parent'}]}|[{'type',189,'wxStyledTextCtrl',[]}]]}|[[{'type',190,'constraint',[{'atom',190,'is_subtype'}|[[{'var',190,'Parent'}|[{'remote_type',190,[{'atom',190,'wxWindow'}|[{'atom',190,'wxWindow'}|[[]]]]}]]]]}]]]}]}],
		%% Line 197
		'spec' =
		    %% Line 197
		    [{{'new',2},[{'type',197,'bounded_fun',[{'type',197,'fun',[{'type',197,'product',[{'var',197,'Parent'}|[{'type',197,'list',[{'var',197,'Option'}]}]]}|[{'type',197,'wxStyledTextCtrl',[]}]]}|[[{'type',198,'constraint',[{'atom',198,'is_subtype'}|[[{'var',198,'Parent'}|[{'remote_type',198,[{'atom',198,'wxWindow'}|[{'atom',198,'wxWindow'}|[[]]]]}]]]]}|[{'type',199,'constraint',[{'atom',199,'is_subtype'}|[[{'var',199,'Option'}|[{'type',199,'union',[{'type',199,'tuple',[{'atom',199,'id'}|[{'type',199,'integer',[]}]]}|[{'type',200,'tuple',[{'atom',200,'pos'}|[{'type',200,'tuple',[{'ann_type',200,[{'var',200,'X'}|[{'type',200,'integer',[]}]]}|[{'ann_type',200,[{'var',200,'Y'}|[{'type',200,'integer',[]}]]}]]}]]}|[{'type',201,'tuple',[{'atom',201,'size'}|[{'type',201,'tuple',[{'ann_type',201,[{'var',201,'W'}|[{'type',201,'integer',[]}]]}|[{'ann_type',201,[{'var',201,'H'}|[{'type',201,'integer',[]}]]}]]}]]}|[{'type',202,'tuple',[{'atom',202,'style'}|[{'type',202,'integer',[]}]]}]]]]}]]]]}]]]]}]}],
		%% Line 216
		'spec' =
		    %% Line 216
		    [{{'create',2},[{'type',216,'bounded_fun',[{'type',216,'fun',[{'type',216,'product',[{'var',216,'This'}|[{'var',216,'Parent'}]]}|[{'type',216,'boolean',[]}]]}|[[{'type',217,'constraint',[{'atom',217,'is_subtype'}|[[{'var',217,'This'}|[{'type',217,'wxStyledTextCtrl',[]}]]]]}|[{'type',217,'constraint',[{'atom',217,'is_subtype'}|[[{'var',217,'Parent'}|[{'remote_type',217,[{'atom',217,'wxWindow'}|[{'atom',217,'wxWindow'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 224
		'spec' =
		    %% Line 224
		    [{{'create',3},[{'type',224,'bounded_fun',[{'type',224,'fun',[{'type',224,'product',[{'var',224,'This'}|[{'var',224,'Parent'}|[{'type',224,'list',[{'var',224,'Option'}]}]]]}|[{'type',224,'boolean',[]}]]}|[[{'type',225,'constraint',[{'atom',225,'is_subtype'}|[[{'var',225,'This'}|[{'type',225,'wxStyledTextCtrl',[]}]]]]}|[{'type',225,'constraint',[{'atom',225,'is_subtype'}|[[{'var',225,'Parent'}|[{'remote_type',225,[{'atom',225,'wxWindow'}|[{'atom',225,'wxWindow'}|[[]]]]}]]]]}|[{'type',226,'constraint',[{'atom',226,'is_subtype'}|[[{'var',226,'Option'}|[{'type',226,'union',[{'type',226,'tuple',[{'atom',226,'id'}|[{'type',226,'integer',[]}]]}|[{'type',227,'tuple',[{'atom',227,'pos'}|[{'type',227,'tuple',[{'ann_type',227,[{'var',227,'X'}|[{'type',227,'integer',[]}]]}|[{'ann_type',227,[{'var',227,'Y'}|[{'type',227,'integer',[]}]]}]]}]]}|[{'type',228,'tuple',[{'atom',228,'size'}|[{'type',228,'tuple',[{'ann_type',228,[{'var',228,'W'}|[{'type',228,'integer',[]}]]}|[{'ann_type',228,[{'var',228,'H'}|[{'type',228,'integer',[]}]]}]]}]]}|[{'type',229,'tuple',[{'atom',229,'style'}|[{'type',229,'integer',[]}]]}]]]]}]]]]}]]]]]}]}],
		%% Line 244
		'spec' =
		    %% Line 244
		    [{{'addText',2},[{'type',244,'bounded_fun',[{'type',244,'fun',[{'type',244,'product',[{'var',244,'This'}|[{'var',244,'Text'}]]}|[{'atom',244,'ok'}]]}|[[{'type',245,'constraint',[{'atom',245,'is_subtype'}|[[{'var',245,'This'}|[{'type',245,'wxStyledTextCtrl',[]}]]]]}|[{'type',245,'constraint',[{'atom',245,'is_subtype'}|[[{'var',245,'Text'}|[{'remote_type',245,[{'atom',245,'unicode'}|[{'atom',245,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 254
		'spec' =
		    %% Line 254
		    [{{'addStyledText',2},[{'type',254,'bounded_fun',[{'type',254,'fun',[{'type',254,'product',[{'var',254,'This'}|[{'var',254,'Data'}]]}|[{'atom',254,'ok'}]]}|[[{'type',255,'constraint',[{'atom',255,'is_subtype'}|[[{'var',255,'This'}|[{'type',255,'wxStyledTextCtrl',[]}]]]]}|[{'type',255,'constraint',[{'atom',255,'is_subtype'}|[[{'var',255,'Data'}|[{'remote_type',255,[{'atom',255,'wx'}|[{'atom',255,'wx_object'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 263
		'spec' =
		    %% Line 263
		    [{{'insertText',3},[{'type',263,'bounded_fun',[{'type',263,'fun',[{'type',263,'product',[{'var',263,'This'}|[{'var',263,'Pos'}|[{'var',263,'Text'}]]]}|[{'atom',263,'ok'}]]}|[[{'type',264,'constraint',[{'atom',264,'is_subtype'}|[[{'var',264,'This'}|[{'type',264,'wxStyledTextCtrl',[]}]]]]}|[{'type',264,'constraint',[{'atom',264,'is_subtype'}|[[{'var',264,'Pos'}|[{'type',264,'integer',[]}]]]]}|[{'type',264,'constraint',[{'atom',264,'is_subtype'}|[[{'var',264,'Text'}|[{'remote_type',264,[{'atom',264,'unicode'}|[{'atom',264,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 273
		'spec' =
		    %% Line 273
		    [{{'clearAll',1},[{'type',273,'bounded_fun',[{'type',273,'fun',[{'type',273,'product',[{'var',273,'This'}]}|[{'atom',273,'ok'}]]}|[[{'type',274,'constraint',[{'atom',274,'is_subtype'}|[[{'var',274,'This'}|[{'type',274,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 281
		'spec' =
		    %% Line 281
		    [{{'clearDocumentStyle',1},[{'type',281,'bounded_fun',[{'type',281,'fun',[{'type',281,'product',[{'var',281,'This'}]}|[{'atom',281,'ok'}]]}|[[{'type',282,'constraint',[{'atom',282,'is_subtype'}|[[{'var',282,'This'}|[{'type',282,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 289
		'spec' =
		    %% Line 289
		    [{{'getLength',1},[{'type',289,'bounded_fun',[{'type',289,'fun',[{'type',289,'product',[{'var',289,'This'}]}|[{'type',289,'integer',[]}]]}|[[{'type',290,'constraint',[{'atom',290,'is_subtype'}|[[{'var',290,'This'}|[{'type',290,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 297
		'spec' =
		    %% Line 297
		    [{{'getCharAt',2},[{'type',297,'bounded_fun',[{'type',297,'fun',[{'type',297,'product',[{'var',297,'This'}|[{'var',297,'Pos'}]]}|[{'type',297,'integer',[]}]]}|[[{'type',298,'constraint',[{'atom',298,'is_subtype'}|[[{'var',298,'This'}|[{'type',298,'wxStyledTextCtrl',[]}]]]]}|[{'type',298,'constraint',[{'atom',298,'is_subtype'}|[[{'var',298,'Pos'}|[{'type',298,'integer',[]}]]]]}]]]]}]}],
		%% Line 306
		'spec' =
		    %% Line 306
		    [{{'getCurrentPos',1},[{'type',306,'bounded_fun',[{'type',306,'fun',[{'type',306,'product',[{'var',306,'This'}]}|[{'type',306,'integer',[]}]]}|[[{'type',307,'constraint',[{'atom',307,'is_subtype'}|[[{'var',307,'This'}|[{'type',307,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 314
		'spec' =
		    %% Line 314
		    [{{'getAnchor',1},[{'type',314,'bounded_fun',[{'type',314,'fun',[{'type',314,'product',[{'var',314,'This'}]}|[{'type',314,'integer',[]}]]}|[[{'type',315,'constraint',[{'atom',315,'is_subtype'}|[[{'var',315,'This'}|[{'type',315,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 322
		'spec' =
		    %% Line 322
		    [{{'getStyleAt',2},[{'type',322,'bounded_fun',[{'type',322,'fun',[{'type',322,'product',[{'var',322,'This'}|[{'var',322,'Pos'}]]}|[{'type',322,'integer',[]}]]}|[[{'type',323,'constraint',[{'atom',323,'is_subtype'}|[[{'var',323,'This'}|[{'type',323,'wxStyledTextCtrl',[]}]]]]}|[{'type',323,'constraint',[{'atom',323,'is_subtype'}|[[{'var',323,'Pos'}|[{'type',323,'integer',[]}]]]]}]]]]}]}],
		%% Line 331
		'spec' =
		    %% Line 331
		    [{{'redo',1},[{'type',331,'bounded_fun',[{'type',331,'fun',[{'type',331,'product',[{'var',331,'This'}]}|[{'atom',331,'ok'}]]}|[[{'type',332,'constraint',[{'atom',332,'is_subtype'}|[[{'var',332,'This'}|[{'type',332,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 339
		'spec' =
		    %% Line 339
		    [{{'setUndoCollection',2},[{'type',339,'bounded_fun',[{'type',339,'fun',[{'type',339,'product',[{'var',339,'This'}|[{'var',339,'CollectUndo'}]]}|[{'atom',339,'ok'}]]}|[[{'type',340,'constraint',[{'atom',340,'is_subtype'}|[[{'var',340,'This'}|[{'type',340,'wxStyledTextCtrl',[]}]]]]}|[{'type',340,'constraint',[{'atom',340,'is_subtype'}|[[{'var',340,'CollectUndo'}|[{'type',340,'boolean',[]}]]]]}]]]]}]}],
		%% Line 348
		'spec' =
		    %% Line 348
		    [{{'selectAll',1},[{'type',348,'bounded_fun',[{'type',348,'fun',[{'type',348,'product',[{'var',348,'This'}]}|[{'atom',348,'ok'}]]}|[[{'type',349,'constraint',[{'atom',349,'is_subtype'}|[[{'var',349,'This'}|[{'type',349,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 356
		'spec' =
		    %% Line 356
		    [{{'setSavePoint',1},[{'type',356,'bounded_fun',[{'type',356,'fun',[{'type',356,'product',[{'var',356,'This'}]}|[{'atom',356,'ok'}]]}|[[{'type',357,'constraint',[{'atom',357,'is_subtype'}|[[{'var',357,'This'}|[{'type',357,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 364
		'spec' =
		    %% Line 364
		    [{{'getStyledText',3},[{'type',364,'bounded_fun',[{'type',364,'fun',[{'type',364,'product',[{'var',364,'This'}|[{'var',364,'StartPos'}|[{'var',364,'EndPos'}]]]}|[{'remote_type',364,[{'atom',364,'wx'}|[{'atom',364,'wx_object'}|[[]]]]}]]}|[[{'type',365,'constraint',[{'atom',365,'is_subtype'}|[[{'var',365,'This'}|[{'type',365,'wxStyledTextCtrl',[]}]]]]}|[{'type',365,'constraint',[{'atom',365,'is_subtype'}|[[{'var',365,'StartPos'}|[{'type',365,'integer',[]}]]]]}|[{'type',365,'constraint',[{'atom',365,'is_subtype'}|[[{'var',365,'EndPos'}|[{'type',365,'integer',[]}]]]]}]]]]]}]}],
		%% Line 373
		'spec' =
		    %% Line 373
		    [{{'canRedo',1},[{'type',373,'bounded_fun',[{'type',373,'fun',[{'type',373,'product',[{'var',373,'This'}]}|[{'type',373,'boolean',[]}]]}|[[{'type',374,'constraint',[{'atom',374,'is_subtype'}|[[{'var',374,'This'}|[{'type',374,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 381
		'spec' =
		    %% Line 381
		    [{{'markerLineFromHandle',2},[{'type',381,'bounded_fun',[{'type',381,'fun',[{'type',381,'product',[{'var',381,'This'}|[{'var',381,'Handle'}]]}|[{'type',381,'integer',[]}]]}|[[{'type',382,'constraint',[{'atom',382,'is_subtype'}|[[{'var',382,'This'}|[{'type',382,'wxStyledTextCtrl',[]}]]]]}|[{'type',382,'constraint',[{'atom',382,'is_subtype'}|[[{'var',382,'Handle'}|[{'type',382,'integer',[]}]]]]}]]]]}]}],
		%% Line 390
		'spec' =
		    %% Line 390
		    [{{'markerDeleteHandle',2},[{'type',390,'bounded_fun',[{'type',390,'fun',[{'type',390,'product',[{'var',390,'This'}|[{'var',390,'Handle'}]]}|[{'atom',390,'ok'}]]}|[[{'type',391,'constraint',[{'atom',391,'is_subtype'}|[[{'var',391,'This'}|[{'type',391,'wxStyledTextCtrl',[]}]]]]}|[{'type',391,'constraint',[{'atom',391,'is_subtype'}|[[{'var',391,'Handle'}|[{'type',391,'integer',[]}]]]]}]]]]}]}],
		%% Line 399
		'spec' =
		    %% Line 399
		    [{{'getUndoCollection',1},[{'type',399,'bounded_fun',[{'type',399,'fun',[{'type',399,'product',[{'var',399,'This'}]}|[{'type',399,'boolean',[]}]]}|[[{'type',400,'constraint',[{'atom',400,'is_subtype'}|[[{'var',400,'This'}|[{'type',400,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 407
		'spec' =
		    %% Line 407
		    [{{'getViewWhiteSpace',1},[{'type',407,'bounded_fun',[{'type',407,'fun',[{'type',407,'product',[{'var',407,'This'}]}|[{'type',407,'integer',[]}]]}|[[{'type',408,'constraint',[{'atom',408,'is_subtype'}|[[{'var',408,'This'}|[{'type',408,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 415
		'spec' =
		    %% Line 415
		    [{{'setViewWhiteSpace',2},[{'type',415,'bounded_fun',[{'type',415,'fun',[{'type',415,'product',[{'var',415,'This'}|[{'var',415,'ViewWS'}]]}|[{'atom',415,'ok'}]]}|[[{'type',416,'constraint',[{'atom',416,'is_subtype'}|[[{'var',416,'This'}|[{'type',416,'wxStyledTextCtrl',[]}]]]]}|[{'type',416,'constraint',[{'atom',416,'is_subtype'}|[[{'var',416,'ViewWS'}|[{'type',416,'integer',[]}]]]]}]]]]}]}],
		%% Line 424
		'spec' =
		    %% Line 424
		    [{{'positionFromPoint',2},[{'type',424,'bounded_fun',[{'type',424,'fun',[{'type',424,'product',[{'var',424,'This'}|[{'var',424,'Pt'}]]}|[{'type',424,'integer',[]}]]}|[[{'type',425,'constraint',[{'atom',425,'is_subtype'}|[[{'var',425,'This'}|[{'type',425,'wxStyledTextCtrl',[]}]]]]}|[{'type',425,'constraint',[{'atom',425,'is_subtype'}|[[{'var',425,'Pt'}|[{'type',425,'tuple',[{'ann_type',425,[{'var',425,'X'}|[{'type',425,'integer',[]}]]}|[{'ann_type',425,[{'var',425,'Y'}|[{'type',425,'integer',[]}]]}]]}]]]]}]]]]}]}],
		%% Line 433
		'spec' =
		    %% Line 433
		    [{{'positionFromPointClose',3},[{'type',433,'bounded_fun',[{'type',433,'fun',[{'type',433,'product',[{'var',433,'This'}|[{'var',433,'X'}|[{'var',433,'Y'}]]]}|[{'type',433,'integer',[]}]]}|[[{'type',434,'constraint',[{'atom',434,'is_subtype'}|[[{'var',434,'This'}|[{'type',434,'wxStyledTextCtrl',[]}]]]]}|[{'type',434,'constraint',[{'atom',434,'is_subtype'}|[[{'var',434,'X'}|[{'type',434,'integer',[]}]]]]}|[{'type',434,'constraint',[{'atom',434,'is_subtype'}|[[{'var',434,'Y'}|[{'type',434,'integer',[]}]]]]}]]]]]}]}],
		%% Line 442
		'spec' =
		    %% Line 442
		    [{{'gotoLine',2},[{'type',442,'bounded_fun',[{'type',442,'fun',[{'type',442,'product',[{'var',442,'This'}|[{'var',442,'Line'}]]}|[{'atom',442,'ok'}]]}|[[{'type',443,'constraint',[{'atom',443,'is_subtype'}|[[{'var',443,'This'}|[{'type',443,'wxStyledTextCtrl',[]}]]]]}|[{'type',443,'constraint',[{'atom',443,'is_subtype'}|[[{'var',443,'Line'}|[{'type',443,'integer',[]}]]]]}]]]]}]}],
		%% Line 451
		'spec' =
		    %% Line 451
		    [{{'gotoPos',2},[{'type',451,'bounded_fun',[{'type',451,'fun',[{'type',451,'product',[{'var',451,'This'}|[{'var',451,'Pos'}]]}|[{'atom',451,'ok'}]]}|[[{'type',452,'constraint',[{'atom',452,'is_subtype'}|[[{'var',452,'This'}|[{'type',452,'wxStyledTextCtrl',[]}]]]]}|[{'type',452,'constraint',[{'atom',452,'is_subtype'}|[[{'var',452,'Pos'}|[{'type',452,'integer',[]}]]]]}]]]]}]}],
		%% Line 460
		'spec' =
		    %% Line 460
		    [{{'setAnchor',2},[{'type',460,'bounded_fun',[{'type',460,'fun',[{'type',460,'product',[{'var',460,'This'}|[{'var',460,'PosAnchor'}]]}|[{'atom',460,'ok'}]]}|[[{'type',461,'constraint',[{'atom',461,'is_subtype'}|[[{'var',461,'This'}|[{'type',461,'wxStyledTextCtrl',[]}]]]]}|[{'type',461,'constraint',[{'atom',461,'is_subtype'}|[[{'var',461,'PosAnchor'}|[{'type',461,'integer',[]}]]]]}]]]]}]}],
		%% Line 469
		'spec' =
		    %% Line 469
		    [{{'getCurLine',1},[{'type',469,'bounded_fun',[{'type',469,'fun',[{'type',469,'product',[{'var',469,'This'}]}|[{'var',469,'Result'}]]}|[[{'type',470,'constraint',[{'atom',470,'is_subtype'}|[[{'var',470,'Result'}|[{'type',470,'tuple',[{'ann_type',470,[{'var',470,'Res'}|[{'remote_type',470,[{'atom',470,'unicode'}|[{'atom',470,'charlist'}|[[]]]]}]]}|[{'ann_type',470,[{'var',470,'LinePos'}|[{'type',470,'integer',[]}]]}]]}]]]]}|[{'type',471,'constraint',[{'atom',471,'is_subtype'}|[[{'var',471,'This'}|[{'type',471,'wxStyledTextCtrl',[]}]]]]}]]]]}]}],
		%% Line 478
		'spec' =
		    %% Line 478
		    [{{'getEndStyled',1},[{'type',478,'bounded_fun',[{'type',478,'fun',[{'type',478,'product',[{'var',478,'This'}]}|[{'type',478,'integer',[]}]]}|[[{'type',479,'constraint',[{'atom',479,'is_subtype'}|[[{'var',479,'This'}|[{'type',479,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 486
		'spec' =
		    %% Line 486
		    [{{'convertEOLs',2},[{'type',486,'bounded_fun',[{'type',486,'fun',[{'type',486,'product',[{'var',486,'This'}|[{'var',486,'EolMode'}]]}|[{'atom',486,'ok'}]]}|[[{'type',487,'constraint',[{'atom',487,'is_subtype'}|[[{'var',487,'This'}|[{'type',487,'wxStyledTextCtrl',[]}]]]]}|[{'type',487,'constraint',[{'atom',487,'is_subtype'}|[[{'var',487,'EolMode'}|[{'type',487,'integer',[]}]]]]}]]]]}]}],
		%% Line 495
		'spec' =
		    %% Line 495
		    [{{'getEOLMode',1},[{'type',495,'bounded_fun',[{'type',495,'fun',[{'type',495,'product',[{'var',495,'This'}]}|[{'type',495,'integer',[]}]]}|[[{'type',496,'constraint',[{'atom',496,'is_subtype'}|[[{'var',496,'This'}|[{'type',496,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 503
		'spec' =
		    %% Line 503
		    [{{'setEOLMode',2},[{'type',503,'bounded_fun',[{'type',503,'fun',[{'type',503,'product',[{'var',503,'This'}|[{'var',503,'EolMode'}]]}|[{'atom',503,'ok'}]]}|[[{'type',504,'constraint',[{'atom',504,'is_subtype'}|[[{'var',504,'This'}|[{'type',504,'wxStyledTextCtrl',[]}]]]]}|[{'type',504,'constraint',[{'atom',504,'is_subtype'}|[[{'var',504,'EolMode'}|[{'type',504,'integer',[]}]]]]}]]]]}]}],
		%% Line 512
		'spec' =
		    %% Line 512
		    [{{'startStyling',3},[{'type',512,'bounded_fun',[{'type',512,'fun',[{'type',512,'product',[{'var',512,'This'}|[{'var',512,'Pos'}|[{'var',512,'Mask'}]]]}|[{'atom',512,'ok'}]]}|[[{'type',513,'constraint',[{'atom',513,'is_subtype'}|[[{'var',513,'This'}|[{'type',513,'wxStyledTextCtrl',[]}]]]]}|[{'type',513,'constraint',[{'atom',513,'is_subtype'}|[[{'var',513,'Pos'}|[{'type',513,'integer',[]}]]]]}|[{'type',513,'constraint',[{'atom',513,'is_subtype'}|[[{'var',513,'Mask'}|[{'type',513,'integer',[]}]]]]}]]]]]}]}],
		%% Line 521
		'spec' =
		    %% Line 521
		    [{{'setStyling',3},[{'type',521,'bounded_fun',[{'type',521,'fun',[{'type',521,'product',[{'var',521,'This'}|[{'var',521,'Length'}|[{'var',521,'Style'}]]]}|[{'atom',521,'ok'}]]}|[[{'type',522,'constraint',[{'atom',522,'is_subtype'}|[[{'var',522,'This'}|[{'type',522,'wxStyledTextCtrl',[]}]]]]}|[{'type',522,'constraint',[{'atom',522,'is_subtype'}|[[{'var',522,'Length'}|[{'type',522,'integer',[]}]]]]}|[{'type',522,'constraint',[{'atom',522,'is_subtype'}|[[{'var',522,'Style'}|[{'type',522,'integer',[]}]]]]}]]]]]}]}],
		%% Line 530
		'spec' =
		    %% Line 530
		    [{{'getBufferedDraw',1},[{'type',530,'bounded_fun',[{'type',530,'fun',[{'type',530,'product',[{'var',530,'This'}]}|[{'type',530,'boolean',[]}]]}|[[{'type',531,'constraint',[{'atom',531,'is_subtype'}|[[{'var',531,'This'}|[{'type',531,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 538
		'spec' =
		    %% Line 538
		    [{{'setBufferedDraw',2},[{'type',538,'bounded_fun',[{'type',538,'fun',[{'type',538,'product',[{'var',538,'This'}|[{'var',538,'Buffered'}]]}|[{'atom',538,'ok'}]]}|[[{'type',539,'constraint',[{'atom',539,'is_subtype'}|[[{'var',539,'This'}|[{'type',539,'wxStyledTextCtrl',[]}]]]]}|[{'type',539,'constraint',[{'atom',539,'is_subtype'}|[[{'var',539,'Buffered'}|[{'type',539,'boolean',[]}]]]]}]]]]}]}],
		%% Line 547
		'spec' =
		    %% Line 547
		    [{{'setTabWidth',2},[{'type',547,'bounded_fun',[{'type',547,'fun',[{'type',547,'product',[{'var',547,'This'}|[{'var',547,'TabWidth'}]]}|[{'atom',547,'ok'}]]}|[[{'type',548,'constraint',[{'atom',548,'is_subtype'}|[[{'var',548,'This'}|[{'type',548,'wxStyledTextCtrl',[]}]]]]}|[{'type',548,'constraint',[{'atom',548,'is_subtype'}|[[{'var',548,'TabWidth'}|[{'type',548,'integer',[]}]]]]}]]]]}]}],
		%% Line 556
		'spec' =
		    %% Line 556
		    [{{'getTabWidth',1},[{'type',556,'bounded_fun',[{'type',556,'fun',[{'type',556,'product',[{'var',556,'This'}]}|[{'type',556,'integer',[]}]]}|[[{'type',557,'constraint',[{'atom',557,'is_subtype'}|[[{'var',557,'This'}|[{'type',557,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 564
		'spec' =
		    %% Line 564
		    [{{'setCodePage',2},[{'type',564,'bounded_fun',[{'type',564,'fun',[{'type',564,'product',[{'var',564,'This'}|[{'var',564,'CodePage'}]]}|[{'atom',564,'ok'}]]}|[[{'type',565,'constraint',[{'atom',565,'is_subtype'}|[[{'var',565,'This'}|[{'type',565,'wxStyledTextCtrl',[]}]]]]}|[{'type',565,'constraint',[{'atom',565,'is_subtype'}|[[{'var',565,'CodePage'}|[{'type',565,'integer',[]}]]]]}]]]]}]}],
		%% Line 573
		'spec' =
		    %% Line 573
		    [{{'markerDefine',3},[{'type',573,'bounded_fun',[{'type',573,'fun',[{'type',573,'product',[{'var',573,'This'}|[{'var',573,'MarkerNumber'}|[{'var',573,'MarkerSymbol'}]]]}|[{'atom',573,'ok'}]]}|[[{'type',574,'constraint',[{'atom',574,'is_subtype'}|[[{'var',574,'This'}|[{'type',574,'wxStyledTextCtrl',[]}]]]]}|[{'type',574,'constraint',[{'atom',574,'is_subtype'}|[[{'var',574,'MarkerNumber'}|[{'type',574,'integer',[]}]]]]}|[{'type',574,'constraint',[{'atom',574,'is_subtype'}|[[{'var',574,'MarkerSymbol'}|[{'type',574,'integer',[]}]]]]}]]]]]}]}],
		%% Line 581
		'spec' =
		    %% Line 581
		    [{{'markerDefine',4},[{'type',581,'bounded_fun',[{'type',581,'fun',[{'type',581,'product',[{'var',581,'This'}|[{'var',581,'MarkerNumber'}|[{'var',581,'MarkerSymbol'}|[{'type',581,'list',[{'var',581,'Option'}]}]]]]}|[{'atom',581,'ok'}]]}|[[{'type',582,'constraint',[{'atom',582,'is_subtype'}|[[{'var',582,'This'}|[{'type',582,'wxStyledTextCtrl',[]}]]]]}|[{'type',582,'constraint',[{'atom',582,'is_subtype'}|[[{'var',582,'MarkerNumber'}|[{'type',582,'integer',[]}]]]]}|[{'type',582,'constraint',[{'atom',582,'is_subtype'}|[[{'var',582,'MarkerSymbol'}|[{'type',582,'integer',[]}]]]]}|[{'type',583,'constraint',[{'atom',583,'is_subtype'}|[[{'var',583,'Option'}|[{'type',583,'union',[{'type',583,'tuple',[{'atom',583,'foreground'}|[{'remote_type',583,[{'atom',583,'wx'}|[{'atom',583,'wx_colour'}|[[]]]]}]]}|[{'type',584,'tuple',[{'atom',584,'background'}|[{'remote_type',584,[{'atom',584,'wx'}|[{'atom',584,'wx_colour'}|[[]]]]}]]}]]}]]]]}]]]]]]}]}],
		%% Line 596
		'spec' =
		    %% Line 596
		    [{{'markerSetForeground',3},[{'type',596,'bounded_fun',[{'type',596,'fun',[{'type',596,'product',[{'var',596,'This'}|[{'var',596,'MarkerNumber'}|[{'var',596,'Fore'}]]]}|[{'atom',596,'ok'}]]}|[[{'type',597,'constraint',[{'atom',597,'is_subtype'}|[[{'var',597,'This'}|[{'type',597,'wxStyledTextCtrl',[]}]]]]}|[{'type',597,'constraint',[{'atom',597,'is_subtype'}|[[{'var',597,'MarkerNumber'}|[{'type',597,'integer',[]}]]]]}|[{'type',597,'constraint',[{'atom',597,'is_subtype'}|[[{'var',597,'Fore'}|[{'remote_type',597,[{'atom',597,'wx'}|[{'atom',597,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 605
		'spec' =
		    %% Line 605
		    [{{'markerSetBackground',3},[{'type',605,'bounded_fun',[{'type',605,'fun',[{'type',605,'product',[{'var',605,'This'}|[{'var',605,'MarkerNumber'}|[{'var',605,'Back'}]]]}|[{'atom',605,'ok'}]]}|[[{'type',606,'constraint',[{'atom',606,'is_subtype'}|[[{'var',606,'This'}|[{'type',606,'wxStyledTextCtrl',[]}]]]]}|[{'type',606,'constraint',[{'atom',606,'is_subtype'}|[[{'var',606,'MarkerNumber'}|[{'type',606,'integer',[]}]]]]}|[{'type',606,'constraint',[{'atom',606,'is_subtype'}|[[{'var',606,'Back'}|[{'remote_type',606,[{'atom',606,'wx'}|[{'atom',606,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 614
		'spec' =
		    %% Line 614
		    [{{'markerAdd',3},[{'type',614,'bounded_fun',[{'type',614,'fun',[{'type',614,'product',[{'var',614,'This'}|[{'var',614,'Line'}|[{'var',614,'MarkerNumber'}]]]}|[{'type',614,'integer',[]}]]}|[[{'type',615,'constraint',[{'atom',615,'is_subtype'}|[[{'var',615,'This'}|[{'type',615,'wxStyledTextCtrl',[]}]]]]}|[{'type',615,'constraint',[{'atom',615,'is_subtype'}|[[{'var',615,'Line'}|[{'type',615,'integer',[]}]]]]}|[{'type',615,'constraint',[{'atom',615,'is_subtype'}|[[{'var',615,'MarkerNumber'}|[{'type',615,'integer',[]}]]]]}]]]]]}]}],
		%% Line 623
		'spec' =
		    %% Line 623
		    [{{'markerDelete',3},[{'type',623,'bounded_fun',[{'type',623,'fun',[{'type',623,'product',[{'var',623,'This'}|[{'var',623,'Line'}|[{'var',623,'MarkerNumber'}]]]}|[{'atom',623,'ok'}]]}|[[{'type',624,'constraint',[{'atom',624,'is_subtype'}|[[{'var',624,'This'}|[{'type',624,'wxStyledTextCtrl',[]}]]]]}|[{'type',624,'constraint',[{'atom',624,'is_subtype'}|[[{'var',624,'Line'}|[{'type',624,'integer',[]}]]]]}|[{'type',624,'constraint',[{'atom',624,'is_subtype'}|[[{'var',624,'MarkerNumber'}|[{'type',624,'integer',[]}]]]]}]]]]]}]}],
		%% Line 632
		'spec' =
		    %% Line 632
		    [{{'markerDeleteAll',2},[{'type',632,'bounded_fun',[{'type',632,'fun',[{'type',632,'product',[{'var',632,'This'}|[{'var',632,'MarkerNumber'}]]}|[{'atom',632,'ok'}]]}|[[{'type',633,'constraint',[{'atom',633,'is_subtype'}|[[{'var',633,'This'}|[{'type',633,'wxStyledTextCtrl',[]}]]]]}|[{'type',633,'constraint',[{'atom',633,'is_subtype'}|[[{'var',633,'MarkerNumber'}|[{'type',633,'integer',[]}]]]]}]]]]}]}],
		%% Line 641
		'spec' =
		    %% Line 641
		    [{{'markerGet',2},[{'type',641,'bounded_fun',[{'type',641,'fun',[{'type',641,'product',[{'var',641,'This'}|[{'var',641,'Line'}]]}|[{'type',641,'integer',[]}]]}|[[{'type',642,'constraint',[{'atom',642,'is_subtype'}|[[{'var',642,'This'}|[{'type',642,'wxStyledTextCtrl',[]}]]]]}|[{'type',642,'constraint',[{'atom',642,'is_subtype'}|[[{'var',642,'Line'}|[{'type',642,'integer',[]}]]]]}]]]]}]}],
		%% Line 650
		'spec' =
		    %% Line 650
		    [{{'markerNext',3},[{'type',650,'bounded_fun',[{'type',650,'fun',[{'type',650,'product',[{'var',650,'This'}|[{'var',650,'LineStart'}|[{'var',650,'MarkerMask'}]]]}|[{'type',650,'integer',[]}]]}|[[{'type',651,'constraint',[{'atom',651,'is_subtype'}|[[{'var',651,'This'}|[{'type',651,'wxStyledTextCtrl',[]}]]]]}|[{'type',651,'constraint',[{'atom',651,'is_subtype'}|[[{'var',651,'LineStart'}|[{'type',651,'integer',[]}]]]]}|[{'type',651,'constraint',[{'atom',651,'is_subtype'}|[[{'var',651,'MarkerMask'}|[{'type',651,'integer',[]}]]]]}]]]]]}]}],
		%% Line 659
		'spec' =
		    %% Line 659
		    [{{'markerPrevious',3},[{'type',659,'bounded_fun',[{'type',659,'fun',[{'type',659,'product',[{'var',659,'This'}|[{'var',659,'LineStart'}|[{'var',659,'MarkerMask'}]]]}|[{'type',659,'integer',[]}]]}|[[{'type',660,'constraint',[{'atom',660,'is_subtype'}|[[{'var',660,'This'}|[{'type',660,'wxStyledTextCtrl',[]}]]]]}|[{'type',660,'constraint',[{'atom',660,'is_subtype'}|[[{'var',660,'LineStart'}|[{'type',660,'integer',[]}]]]]}|[{'type',660,'constraint',[{'atom',660,'is_subtype'}|[[{'var',660,'MarkerMask'}|[{'type',660,'integer',[]}]]]]}]]]]]}]}],
		%% Line 668
		'spec' =
		    %% Line 668
		    [{{'markerDefineBitmap',3},[{'type',668,'bounded_fun',[{'type',668,'fun',[{'type',668,'product',[{'var',668,'This'}|[{'var',668,'MarkerNumber'}|[{'var',668,'Bmp'}]]]}|[{'atom',668,'ok'}]]}|[[{'type',669,'constraint',[{'atom',669,'is_subtype'}|[[{'var',669,'This'}|[{'type',669,'wxStyledTextCtrl',[]}]]]]}|[{'type',669,'constraint',[{'atom',669,'is_subtype'}|[[{'var',669,'MarkerNumber'}|[{'type',669,'integer',[]}]]]]}|[{'type',669,'constraint',[{'atom',669,'is_subtype'}|[[{'var',669,'Bmp'}|[{'remote_type',669,[{'atom',669,'wxBitmap'}|[{'atom',669,'wxBitmap'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 678
		'spec' =
		    %% Line 678
		    [{{'markerAddSet',3},[{'type',678,'bounded_fun',[{'type',678,'fun',[{'type',678,'product',[{'var',678,'This'}|[{'var',678,'Line'}|[{'var',678,'Set'}]]]}|[{'atom',678,'ok'}]]}|[[{'type',679,'constraint',[{'atom',679,'is_subtype'}|[[{'var',679,'This'}|[{'type',679,'wxStyledTextCtrl',[]}]]]]}|[{'type',679,'constraint',[{'atom',679,'is_subtype'}|[[{'var',679,'Line'}|[{'type',679,'integer',[]}]]]]}|[{'type',679,'constraint',[{'atom',679,'is_subtype'}|[[{'var',679,'Set'}|[{'type',679,'integer',[]}]]]]}]]]]]}]}],
		%% Line 687
		'spec' =
		    %% Line 687
		    [{{'markerSetAlpha',3},[{'type',687,'bounded_fun',[{'type',687,'fun',[{'type',687,'product',[{'var',687,'This'}|[{'var',687,'MarkerNumber'}|[{'var',687,'Alpha'}]]]}|[{'atom',687,'ok'}]]}|[[{'type',688,'constraint',[{'atom',688,'is_subtype'}|[[{'var',688,'This'}|[{'type',688,'wxStyledTextCtrl',[]}]]]]}|[{'type',688,'constraint',[{'atom',688,'is_subtype'}|[[{'var',688,'MarkerNumber'}|[{'type',688,'integer',[]}]]]]}|[{'type',688,'constraint',[{'atom',688,'is_subtype'}|[[{'var',688,'Alpha'}|[{'type',688,'integer',[]}]]]]}]]]]]}]}],
		%% Line 696
		'spec' =
		    %% Line 696
		    [{{'setMarginType',3},[{'type',696,'bounded_fun',[{'type',696,'fun',[{'type',696,'product',[{'var',696,'This'}|[{'var',696,'Margin'}|[{'var',696,'MarginType'}]]]}|[{'atom',696,'ok'}]]}|[[{'type',697,'constraint',[{'atom',697,'is_subtype'}|[[{'var',697,'This'}|[{'type',697,'wxStyledTextCtrl',[]}]]]]}|[{'type',697,'constraint',[{'atom',697,'is_subtype'}|[[{'var',697,'Margin'}|[{'type',697,'integer',[]}]]]]}|[{'type',697,'constraint',[{'atom',697,'is_subtype'}|[[{'var',697,'MarginType'}|[{'type',697,'integer',[]}]]]]}]]]]]}]}],
		%% Line 705
		'spec' =
		    %% Line 705
		    [{{'getMarginType',2},[{'type',705,'bounded_fun',[{'type',705,'fun',[{'type',705,'product',[{'var',705,'This'}|[{'var',705,'Margin'}]]}|[{'type',705,'integer',[]}]]}|[[{'type',706,'constraint',[{'atom',706,'is_subtype'}|[[{'var',706,'This'}|[{'type',706,'wxStyledTextCtrl',[]}]]]]}|[{'type',706,'constraint',[{'atom',706,'is_subtype'}|[[{'var',706,'Margin'}|[{'type',706,'integer',[]}]]]]}]]]]}]}],
		%% Line 714
		'spec' =
		    %% Line 714
		    [{{'setMarginWidth',3},[{'type',714,'bounded_fun',[{'type',714,'fun',[{'type',714,'product',[{'var',714,'This'}|[{'var',714,'Margin'}|[{'var',714,'PixelWidth'}]]]}|[{'atom',714,'ok'}]]}|[[{'type',715,'constraint',[{'atom',715,'is_subtype'}|[[{'var',715,'This'}|[{'type',715,'wxStyledTextCtrl',[]}]]]]}|[{'type',715,'constraint',[{'atom',715,'is_subtype'}|[[{'var',715,'Margin'}|[{'type',715,'integer',[]}]]]]}|[{'type',715,'constraint',[{'atom',715,'is_subtype'}|[[{'var',715,'PixelWidth'}|[{'type',715,'integer',[]}]]]]}]]]]]}]}],
		%% Line 723
		'spec' =
		    %% Line 723
		    [{{'getMarginWidth',2},[{'type',723,'bounded_fun',[{'type',723,'fun',[{'type',723,'product',[{'var',723,'This'}|[{'var',723,'Margin'}]]}|[{'type',723,'integer',[]}]]}|[[{'type',724,'constraint',[{'atom',724,'is_subtype'}|[[{'var',724,'This'}|[{'type',724,'wxStyledTextCtrl',[]}]]]]}|[{'type',724,'constraint',[{'atom',724,'is_subtype'}|[[{'var',724,'Margin'}|[{'type',724,'integer',[]}]]]]}]]]]}]}],
		%% Line 732
		'spec' =
		    %% Line 732
		    [{{'setMarginMask',3},[{'type',732,'bounded_fun',[{'type',732,'fun',[{'type',732,'product',[{'var',732,'This'}|[{'var',732,'Margin'}|[{'var',732,'Mask'}]]]}|[{'atom',732,'ok'}]]}|[[{'type',733,'constraint',[{'atom',733,'is_subtype'}|[[{'var',733,'This'}|[{'type',733,'wxStyledTextCtrl',[]}]]]]}|[{'type',733,'constraint',[{'atom',733,'is_subtype'}|[[{'var',733,'Margin'}|[{'type',733,'integer',[]}]]]]}|[{'type',733,'constraint',[{'atom',733,'is_subtype'}|[[{'var',733,'Mask'}|[{'type',733,'integer',[]}]]]]}]]]]]}]}],
		%% Line 741
		'spec' =
		    %% Line 741
		    [{{'getMarginMask',2},[{'type',741,'bounded_fun',[{'type',741,'fun',[{'type',741,'product',[{'var',741,'This'}|[{'var',741,'Margin'}]]}|[{'type',741,'integer',[]}]]}|[[{'type',742,'constraint',[{'atom',742,'is_subtype'}|[[{'var',742,'This'}|[{'type',742,'wxStyledTextCtrl',[]}]]]]}|[{'type',742,'constraint',[{'atom',742,'is_subtype'}|[[{'var',742,'Margin'}|[{'type',742,'integer',[]}]]]]}]]]]}]}],
		%% Line 750
		'spec' =
		    %% Line 750
		    [{{'setMarginSensitive',3},[{'type',750,'bounded_fun',[{'type',750,'fun',[{'type',750,'product',[{'var',750,'This'}|[{'var',750,'Margin'}|[{'var',750,'Sensitive'}]]]}|[{'atom',750,'ok'}]]}|[[{'type',751,'constraint',[{'atom',751,'is_subtype'}|[[{'var',751,'This'}|[{'type',751,'wxStyledTextCtrl',[]}]]]]}|[{'type',751,'constraint',[{'atom',751,'is_subtype'}|[[{'var',751,'Margin'}|[{'type',751,'integer',[]}]]]]}|[{'type',751,'constraint',[{'atom',751,'is_subtype'}|[[{'var',751,'Sensitive'}|[{'type',751,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 759
		'spec' =
		    %% Line 759
		    [{{'getMarginSensitive',2},[{'type',759,'bounded_fun',[{'type',759,'fun',[{'type',759,'product',[{'var',759,'This'}|[{'var',759,'Margin'}]]}|[{'type',759,'boolean',[]}]]}|[[{'type',760,'constraint',[{'atom',760,'is_subtype'}|[[{'var',760,'This'}|[{'type',760,'wxStyledTextCtrl',[]}]]]]}|[{'type',760,'constraint',[{'atom',760,'is_subtype'}|[[{'var',760,'Margin'}|[{'type',760,'integer',[]}]]]]}]]]]}]}],
		%% Line 768
		'spec' =
		    %% Line 768
		    [{{'styleClearAll',1},[{'type',768,'bounded_fun',[{'type',768,'fun',[{'type',768,'product',[{'var',768,'This'}]}|[{'atom',768,'ok'}]]}|[[{'type',769,'constraint',[{'atom',769,'is_subtype'}|[[{'var',769,'This'}|[{'type',769,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 776
		'spec' =
		    %% Line 776
		    [{{'styleSetForeground',3},[{'type',776,'bounded_fun',[{'type',776,'fun',[{'type',776,'product',[{'var',776,'This'}|[{'var',776,'Style'}|[{'var',776,'Fore'}]]]}|[{'atom',776,'ok'}]]}|[[{'type',777,'constraint',[{'atom',777,'is_subtype'}|[[{'var',777,'This'}|[{'type',777,'wxStyledTextCtrl',[]}]]]]}|[{'type',777,'constraint',[{'atom',777,'is_subtype'}|[[{'var',777,'Style'}|[{'type',777,'integer',[]}]]]]}|[{'type',777,'constraint',[{'atom',777,'is_subtype'}|[[{'var',777,'Fore'}|[{'remote_type',777,[{'atom',777,'wx'}|[{'atom',777,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 785
		'spec' =
		    %% Line 785
		    [{{'styleSetBackground',3},[{'type',785,'bounded_fun',[{'type',785,'fun',[{'type',785,'product',[{'var',785,'This'}|[{'var',785,'Style'}|[{'var',785,'Back'}]]]}|[{'atom',785,'ok'}]]}|[[{'type',786,'constraint',[{'atom',786,'is_subtype'}|[[{'var',786,'This'}|[{'type',786,'wxStyledTextCtrl',[]}]]]]}|[{'type',786,'constraint',[{'atom',786,'is_subtype'}|[[{'var',786,'Style'}|[{'type',786,'integer',[]}]]]]}|[{'type',786,'constraint',[{'atom',786,'is_subtype'}|[[{'var',786,'Back'}|[{'remote_type',786,[{'atom',786,'wx'}|[{'atom',786,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 794
		'spec' =
		    %% Line 794
		    [{{'styleSetBold',3},[{'type',794,'bounded_fun',[{'type',794,'fun',[{'type',794,'product',[{'var',794,'This'}|[{'var',794,'Style'}|[{'var',794,'Bold'}]]]}|[{'atom',794,'ok'}]]}|[[{'type',795,'constraint',[{'atom',795,'is_subtype'}|[[{'var',795,'This'}|[{'type',795,'wxStyledTextCtrl',[]}]]]]}|[{'type',795,'constraint',[{'atom',795,'is_subtype'}|[[{'var',795,'Style'}|[{'type',795,'integer',[]}]]]]}|[{'type',795,'constraint',[{'atom',795,'is_subtype'}|[[{'var',795,'Bold'}|[{'type',795,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 803
		'spec' =
		    %% Line 803
		    [{{'styleSetItalic',3},[{'type',803,'bounded_fun',[{'type',803,'fun',[{'type',803,'product',[{'var',803,'This'}|[{'var',803,'Style'}|[{'var',803,'Italic'}]]]}|[{'atom',803,'ok'}]]}|[[{'type',804,'constraint',[{'atom',804,'is_subtype'}|[[{'var',804,'This'}|[{'type',804,'wxStyledTextCtrl',[]}]]]]}|[{'type',804,'constraint',[{'atom',804,'is_subtype'}|[[{'var',804,'Style'}|[{'type',804,'integer',[]}]]]]}|[{'type',804,'constraint',[{'atom',804,'is_subtype'}|[[{'var',804,'Italic'}|[{'type',804,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 812
		'spec' =
		    %% Line 812
		    [{{'styleSetSize',3},[{'type',812,'bounded_fun',[{'type',812,'fun',[{'type',812,'product',[{'var',812,'This'}|[{'var',812,'Style'}|[{'var',812,'SizePoints'}]]]}|[{'atom',812,'ok'}]]}|[[{'type',813,'constraint',[{'atom',813,'is_subtype'}|[[{'var',813,'This'}|[{'type',813,'wxStyledTextCtrl',[]}]]]]}|[{'type',813,'constraint',[{'atom',813,'is_subtype'}|[[{'var',813,'Style'}|[{'type',813,'integer',[]}]]]]}|[{'type',813,'constraint',[{'atom',813,'is_subtype'}|[[{'var',813,'SizePoints'}|[{'type',813,'integer',[]}]]]]}]]]]]}]}],
		%% Line 821
		'spec' =
		    %% Line 821
		    [{{'styleSetFaceName',3},[{'type',821,'bounded_fun',[{'type',821,'fun',[{'type',821,'product',[{'var',821,'This'}|[{'var',821,'Style'}|[{'var',821,'FontName'}]]]}|[{'atom',821,'ok'}]]}|[[{'type',822,'constraint',[{'atom',822,'is_subtype'}|[[{'var',822,'This'}|[{'type',822,'wxStyledTextCtrl',[]}]]]]}|[{'type',822,'constraint',[{'atom',822,'is_subtype'}|[[{'var',822,'Style'}|[{'type',822,'integer',[]}]]]]}|[{'type',822,'constraint',[{'atom',822,'is_subtype'}|[[{'var',822,'FontName'}|[{'remote_type',822,[{'atom',822,'unicode'}|[{'atom',822,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 831
		'spec' =
		    %% Line 831
		    [{{'styleSetEOLFilled',3},[{'type',831,'bounded_fun',[{'type',831,'fun',[{'type',831,'product',[{'var',831,'This'}|[{'var',831,'Style'}|[{'var',831,'Filled'}]]]}|[{'atom',831,'ok'}]]}|[[{'type',832,'constraint',[{'atom',832,'is_subtype'}|[[{'var',832,'This'}|[{'type',832,'wxStyledTextCtrl',[]}]]]]}|[{'type',832,'constraint',[{'atom',832,'is_subtype'}|[[{'var',832,'Style'}|[{'type',832,'integer',[]}]]]]}|[{'type',832,'constraint',[{'atom',832,'is_subtype'}|[[{'var',832,'Filled'}|[{'type',832,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 840
		'spec' =
		    %% Line 840
		    [{{'styleResetDefault',1},[{'type',840,'bounded_fun',[{'type',840,'fun',[{'type',840,'product',[{'var',840,'This'}]}|[{'atom',840,'ok'}]]}|[[{'type',841,'constraint',[{'atom',841,'is_subtype'}|[[{'var',841,'This'}|[{'type',841,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 848
		'spec' =
		    %% Line 848
		    [{{'styleSetUnderline',3},[{'type',848,'bounded_fun',[{'type',848,'fun',[{'type',848,'product',[{'var',848,'This'}|[{'var',848,'Style'}|[{'var',848,'Underline'}]]]}|[{'atom',848,'ok'}]]}|[[{'type',849,'constraint',[{'atom',849,'is_subtype'}|[[{'var',849,'This'}|[{'type',849,'wxStyledTextCtrl',[]}]]]]}|[{'type',849,'constraint',[{'atom',849,'is_subtype'}|[[{'var',849,'Style'}|[{'type',849,'integer',[]}]]]]}|[{'type',849,'constraint',[{'atom',849,'is_subtype'}|[[{'var',849,'Underline'}|[{'type',849,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 857
		'spec' =
		    %% Line 857
		    [{{'styleSetCase',3},[{'type',857,'bounded_fun',[{'type',857,'fun',[{'type',857,'product',[{'var',857,'This'}|[{'var',857,'Style'}|[{'var',857,'CaseForce'}]]]}|[{'atom',857,'ok'}]]}|[[{'type',858,'constraint',[{'atom',858,'is_subtype'}|[[{'var',858,'This'}|[{'type',858,'wxStyledTextCtrl',[]}]]]]}|[{'type',858,'constraint',[{'atom',858,'is_subtype'}|[[{'var',858,'Style'}|[{'type',858,'integer',[]}]]]]}|[{'type',858,'constraint',[{'atom',858,'is_subtype'}|[[{'var',858,'CaseForce'}|[{'type',858,'integer',[]}]]]]}]]]]]}]}],
		%% Line 866
		'spec' =
		    %% Line 866
		    [{{'styleSetHotSpot',3},[{'type',866,'bounded_fun',[{'type',866,'fun',[{'type',866,'product',[{'var',866,'This'}|[{'var',866,'Style'}|[{'var',866,'Hotspot'}]]]}|[{'atom',866,'ok'}]]}|[[{'type',867,'constraint',[{'atom',867,'is_subtype'}|[[{'var',867,'This'}|[{'type',867,'wxStyledTextCtrl',[]}]]]]}|[{'type',867,'constraint',[{'atom',867,'is_subtype'}|[[{'var',867,'Style'}|[{'type',867,'integer',[]}]]]]}|[{'type',867,'constraint',[{'atom',867,'is_subtype'}|[[{'var',867,'Hotspot'}|[{'type',867,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 875
		'spec' =
		    %% Line 875
		    [{{'setSelForeground',3},[{'type',875,'bounded_fun',[{'type',875,'fun',[{'type',875,'product',[{'var',875,'This'}|[{'var',875,'UseSetting'}|[{'var',875,'Fore'}]]]}|[{'atom',875,'ok'}]]}|[[{'type',876,'constraint',[{'atom',876,'is_subtype'}|[[{'var',876,'This'}|[{'type',876,'wxStyledTextCtrl',[]}]]]]}|[{'type',876,'constraint',[{'atom',876,'is_subtype'}|[[{'var',876,'UseSetting'}|[{'type',876,'boolean',[]}]]]]}|[{'type',876,'constraint',[{'atom',876,'is_subtype'}|[[{'var',876,'Fore'}|[{'remote_type',876,[{'atom',876,'wx'}|[{'atom',876,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 884
		'spec' =
		    %% Line 884
		    [{{'setSelBackground',3},[{'type',884,'bounded_fun',[{'type',884,'fun',[{'type',884,'product',[{'var',884,'This'}|[{'var',884,'UseSetting'}|[{'var',884,'Back'}]]]}|[{'atom',884,'ok'}]]}|[[{'type',885,'constraint',[{'atom',885,'is_subtype'}|[[{'var',885,'This'}|[{'type',885,'wxStyledTextCtrl',[]}]]]]}|[{'type',885,'constraint',[{'atom',885,'is_subtype'}|[[{'var',885,'UseSetting'}|[{'type',885,'boolean',[]}]]]]}|[{'type',885,'constraint',[{'atom',885,'is_subtype'}|[[{'var',885,'Back'}|[{'remote_type',885,[{'atom',885,'wx'}|[{'atom',885,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 893
		'spec' =
		    %% Line 893
		    [{{'getSelAlpha',1},[{'type',893,'bounded_fun',[{'type',893,'fun',[{'type',893,'product',[{'var',893,'This'}]}|[{'type',893,'integer',[]}]]}|[[{'type',894,'constraint',[{'atom',894,'is_subtype'}|[[{'var',894,'This'}|[{'type',894,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 901
		'spec' =
		    %% Line 901
		    [{{'setSelAlpha',2},[{'type',901,'bounded_fun',[{'type',901,'fun',[{'type',901,'product',[{'var',901,'This'}|[{'var',901,'Alpha'}]]}|[{'atom',901,'ok'}]]}|[[{'type',902,'constraint',[{'atom',902,'is_subtype'}|[[{'var',902,'This'}|[{'type',902,'wxStyledTextCtrl',[]}]]]]}|[{'type',902,'constraint',[{'atom',902,'is_subtype'}|[[{'var',902,'Alpha'}|[{'type',902,'integer',[]}]]]]}]]]]}]}],
		%% Line 910
		'spec' =
		    %% Line 910
		    [{{'setCaretForeground',2},[{'type',910,'bounded_fun',[{'type',910,'fun',[{'type',910,'product',[{'var',910,'This'}|[{'var',910,'Fore'}]]}|[{'atom',910,'ok'}]]}|[[{'type',911,'constraint',[{'atom',911,'is_subtype'}|[[{'var',911,'This'}|[{'type',911,'wxStyledTextCtrl',[]}]]]]}|[{'type',911,'constraint',[{'atom',911,'is_subtype'}|[[{'var',911,'Fore'}|[{'remote_type',911,[{'atom',911,'wx'}|[{'atom',911,'wx_colour'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 919
		'spec' =
		    %% Line 919
		    [{{'cmdKeyAssign',4},[{'type',919,'bounded_fun',[{'type',919,'fun',[{'type',919,'product',[{'var',919,'This'}|[{'var',919,'Key'}|[{'var',919,'Modifiers'}|[{'var',919,'Cmd'}]]]]}|[{'atom',919,'ok'}]]}|[[{'type',920,'constraint',[{'atom',920,'is_subtype'}|[[{'var',920,'This'}|[{'type',920,'wxStyledTextCtrl',[]}]]]]}|[{'type',920,'constraint',[{'atom',920,'is_subtype'}|[[{'var',920,'Key'}|[{'type',920,'integer',[]}]]]]}|[{'type',920,'constraint',[{'atom',920,'is_subtype'}|[[{'var',920,'Modifiers'}|[{'type',920,'integer',[]}]]]]}|[{'type',920,'constraint',[{'atom',920,'is_subtype'}|[[{'var',920,'Cmd'}|[{'type',920,'integer',[]}]]]]}]]]]]]}]}],
		%% Line 928
		'spec' =
		    %% Line 928
		    [{{'cmdKeyClear',3},[{'type',928,'bounded_fun',[{'type',928,'fun',[{'type',928,'product',[{'var',928,'This'}|[{'var',928,'Key'}|[{'var',928,'Modifiers'}]]]}|[{'atom',928,'ok'}]]}|[[{'type',929,'constraint',[{'atom',929,'is_subtype'}|[[{'var',929,'This'}|[{'type',929,'wxStyledTextCtrl',[]}]]]]}|[{'type',929,'constraint',[{'atom',929,'is_subtype'}|[[{'var',929,'Key'}|[{'type',929,'integer',[]}]]]]}|[{'type',929,'constraint',[{'atom',929,'is_subtype'}|[[{'var',929,'Modifiers'}|[{'type',929,'integer',[]}]]]]}]]]]]}]}],
		%% Line 937
		'spec' =
		    %% Line 937
		    [{{'cmdKeyClearAll',1},[{'type',937,'bounded_fun',[{'type',937,'fun',[{'type',937,'product',[{'var',937,'This'}]}|[{'atom',937,'ok'}]]}|[[{'type',938,'constraint',[{'atom',938,'is_subtype'}|[[{'var',938,'This'}|[{'type',938,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 945
		'spec' =
		    %% Line 945
		    [{{'setStyleBytes',2},[{'type',945,'bounded_fun',[{'type',945,'fun',[{'type',945,'product',[{'var',945,'This'}|[{'var',945,'Length'}]]}|[{'type',945,'integer',[]}]]}|[[{'type',946,'constraint',[{'atom',946,'is_subtype'}|[[{'var',946,'This'}|[{'type',946,'wxStyledTextCtrl',[]}]]]]}|[{'type',946,'constraint',[{'atom',946,'is_subtype'}|[[{'var',946,'Length'}|[{'type',946,'integer',[]}]]]]}]]]]}]}],
		%% Line 954
		'spec' =
		    %% Line 954
		    [{{'styleSetVisible',3},[{'type',954,'bounded_fun',[{'type',954,'fun',[{'type',954,'product',[{'var',954,'This'}|[{'var',954,'Style'}|[{'var',954,'Visible'}]]]}|[{'atom',954,'ok'}]]}|[[{'type',955,'constraint',[{'atom',955,'is_subtype'}|[[{'var',955,'This'}|[{'type',955,'wxStyledTextCtrl',[]}]]]]}|[{'type',955,'constraint',[{'atom',955,'is_subtype'}|[[{'var',955,'Style'}|[{'type',955,'integer',[]}]]]]}|[{'type',955,'constraint',[{'atom',955,'is_subtype'}|[[{'var',955,'Visible'}|[{'type',955,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 963
		'spec' =
		    %% Line 963
		    [{{'getCaretPeriod',1},[{'type',963,'bounded_fun',[{'type',963,'fun',[{'type',963,'product',[{'var',963,'This'}]}|[{'type',963,'integer',[]}]]}|[[{'type',964,'constraint',[{'atom',964,'is_subtype'}|[[{'var',964,'This'}|[{'type',964,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 971
		'spec' =
		    %% Line 971
		    [{{'setCaretPeriod',2},[{'type',971,'bounded_fun',[{'type',971,'fun',[{'type',971,'product',[{'var',971,'This'}|[{'var',971,'PeriodMilliseconds'}]]}|[{'atom',971,'ok'}]]}|[[{'type',972,'constraint',[{'atom',972,'is_subtype'}|[[{'var',972,'This'}|[{'type',972,'wxStyledTextCtrl',[]}]]]]}|[{'type',972,'constraint',[{'atom',972,'is_subtype'}|[[{'var',972,'PeriodMilliseconds'}|[{'type',972,'integer',[]}]]]]}]]]]}]}],
		%% Line 980
		'spec' =
		    %% Line 980
		    [{{'setWordChars',2},[{'type',980,'bounded_fun',[{'type',980,'fun',[{'type',980,'product',[{'var',980,'This'}|[{'var',980,'Characters'}]]}|[{'atom',980,'ok'}]]}|[[{'type',981,'constraint',[{'atom',981,'is_subtype'}|[[{'var',981,'This'}|[{'type',981,'wxStyledTextCtrl',[]}]]]]}|[{'type',981,'constraint',[{'atom',981,'is_subtype'}|[[{'var',981,'Characters'}|[{'remote_type',981,[{'atom',981,'unicode'}|[{'atom',981,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 990
		'spec' =
		    %% Line 990
		    [{{'beginUndoAction',1},[{'type',990,'bounded_fun',[{'type',990,'fun',[{'type',990,'product',[{'var',990,'This'}]}|[{'atom',990,'ok'}]]}|[[{'type',991,'constraint',[{'atom',991,'is_subtype'}|[[{'var',991,'This'}|[{'type',991,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 998
		'spec' =
		    %% Line 998
		    [{{'endUndoAction',1},[{'type',998,'bounded_fun',[{'type',998,'fun',[{'type',998,'product',[{'var',998,'This'}]}|[{'atom',998,'ok'}]]}|[[{'type',999,'constraint',[{'atom',999,'is_subtype'}|[[{'var',999,'This'}|[{'type',999,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1006
		'spec' =
		    %% Line 1006
		    [{{'indicatorSetStyle',3},[{'type',1006,'bounded_fun',[{'type',1006,'fun',[{'type',1006,'product',[{'var',1006,'This'}|[{'var',1006,'Indic'}|[{'var',1006,'Style'}]]]}|[{'atom',1006,'ok'}]]}|[[{'type',1007,'constraint',[{'atom',1007,'is_subtype'}|[[{'var',1007,'This'}|[{'type',1007,'wxStyledTextCtrl',[]}]]]]}|[{'type',1007,'constraint',[{'atom',1007,'is_subtype'}|[[{'var',1007,'Indic'}|[{'type',1007,'integer',[]}]]]]}|[{'type',1007,'constraint',[{'atom',1007,'is_subtype'}|[[{'var',1007,'Style'}|[{'type',1007,'integer',[]}]]]]}]]]]]}]}],
		%% Line 1015
		'spec' =
		    %% Line 1015
		    [{{'indicatorGetStyle',2},[{'type',1015,'bounded_fun',[{'type',1015,'fun',[{'type',1015,'product',[{'var',1015,'This'}|[{'var',1015,'Indic'}]]}|[{'type',1015,'integer',[]}]]}|[[{'type',1016,'constraint',[{'atom',1016,'is_subtype'}|[[{'var',1016,'This'}|[{'type',1016,'wxStyledTextCtrl',[]}]]]]}|[{'type',1016,'constraint',[{'atom',1016,'is_subtype'}|[[{'var',1016,'Indic'}|[{'type',1016,'integer',[]}]]]]}]]]]}]}],
		%% Line 1024
		'spec' =
		    %% Line 1024
		    [{{'indicatorSetForeground',3},[{'type',1024,'bounded_fun',[{'type',1024,'fun',[{'type',1024,'product',[{'var',1024,'This'}|[{'var',1024,'Indic'}|[{'var',1024,'Fore'}]]]}|[{'atom',1024,'ok'}]]}|[[{'type',1025,'constraint',[{'atom',1025,'is_subtype'}|[[{'var',1025,'This'}|[{'type',1025,'wxStyledTextCtrl',[]}]]]]}|[{'type',1025,'constraint',[{'atom',1025,'is_subtype'}|[[{'var',1025,'Indic'}|[{'type',1025,'integer',[]}]]]]}|[{'type',1025,'constraint',[{'atom',1025,'is_subtype'}|[[{'var',1025,'Fore'}|[{'remote_type',1025,[{'atom',1025,'wx'}|[{'atom',1025,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 1033
		'spec' =
		    %% Line 1033
		    [{{'indicatorGetForeground',2},[{'type',1033,'bounded_fun',[{'type',1033,'fun',[{'type',1033,'product',[{'var',1033,'This'}|[{'var',1033,'Indic'}]]}|[{'remote_type',1033,[{'atom',1033,'wx'}|[{'atom',1033,'wx_colour4'}|[[]]]]}]]}|[[{'type',1034,'constraint',[{'atom',1034,'is_subtype'}|[[{'var',1034,'This'}|[{'type',1034,'wxStyledTextCtrl',[]}]]]]}|[{'type',1034,'constraint',[{'atom',1034,'is_subtype'}|[[{'var',1034,'Indic'}|[{'type',1034,'integer',[]}]]]]}]]]]}]}],
		%% Line 1042
		'spec' =
		    %% Line 1042
		    [{{'setWhitespaceForeground',3},[{'type',1042,'bounded_fun',[{'type',1042,'fun',[{'type',1042,'product',[{'var',1042,'This'}|[{'var',1042,'UseSetting'}|[{'var',1042,'Fore'}]]]}|[{'atom',1042,'ok'}]]}|[[{'type',1043,'constraint',[{'atom',1043,'is_subtype'}|[[{'var',1043,'This'}|[{'type',1043,'wxStyledTextCtrl',[]}]]]]}|[{'type',1043,'constraint',[{'atom',1043,'is_subtype'}|[[{'var',1043,'UseSetting'}|[{'type',1043,'boolean',[]}]]]]}|[{'type',1043,'constraint',[{'atom',1043,'is_subtype'}|[[{'var',1043,'Fore'}|[{'remote_type',1043,[{'atom',1043,'wx'}|[{'atom',1043,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 1051
		'spec' =
		    %% Line 1051
		    [{{'setWhitespaceBackground',3},[{'type',1051,'bounded_fun',[{'type',1051,'fun',[{'type',1051,'product',[{'var',1051,'This'}|[{'var',1051,'UseSetting'}|[{'var',1051,'Back'}]]]}|[{'atom',1051,'ok'}]]}|[[{'type',1052,'constraint',[{'atom',1052,'is_subtype'}|[[{'var',1052,'This'}|[{'type',1052,'wxStyledTextCtrl',[]}]]]]}|[{'type',1052,'constraint',[{'atom',1052,'is_subtype'}|[[{'var',1052,'UseSetting'}|[{'type',1052,'boolean',[]}]]]]}|[{'type',1052,'constraint',[{'atom',1052,'is_subtype'}|[[{'var',1052,'Back'}|[{'remote_type',1052,[{'atom',1052,'wx'}|[{'atom',1052,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 1060
		'spec' =
		    %% Line 1060
		    [{{'getStyleBits',1},[{'type',1060,'bounded_fun',[{'type',1060,'fun',[{'type',1060,'product',[{'var',1060,'This'}]}|[{'type',1060,'integer',[]}]]}|[[{'type',1061,'constraint',[{'atom',1061,'is_subtype'}|[[{'var',1061,'This'}|[{'type',1061,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1068
		'spec' =
		    %% Line 1068
		    [{{'setLineState',3},[{'type',1068,'bounded_fun',[{'type',1068,'fun',[{'type',1068,'product',[{'var',1068,'This'}|[{'var',1068,'Line'}|[{'var',1068,'State'}]]]}|[{'atom',1068,'ok'}]]}|[[{'type',1069,'constraint',[{'atom',1069,'is_subtype'}|[[{'var',1069,'This'}|[{'type',1069,'wxStyledTextCtrl',[]}]]]]}|[{'type',1069,'constraint',[{'atom',1069,'is_subtype'}|[[{'var',1069,'Line'}|[{'type',1069,'integer',[]}]]]]}|[{'type',1069,'constraint',[{'atom',1069,'is_subtype'}|[[{'var',1069,'State'}|[{'type',1069,'integer',[]}]]]]}]]]]]}]}],
		%% Line 1077
		'spec' =
		    %% Line 1077
		    [{{'getLineState',2},[{'type',1077,'bounded_fun',[{'type',1077,'fun',[{'type',1077,'product',[{'var',1077,'This'}|[{'var',1077,'Line'}]]}|[{'type',1077,'integer',[]}]]}|[[{'type',1078,'constraint',[{'atom',1078,'is_subtype'}|[[{'var',1078,'This'}|[{'type',1078,'wxStyledTextCtrl',[]}]]]]}|[{'type',1078,'constraint',[{'atom',1078,'is_subtype'}|[[{'var',1078,'Line'}|[{'type',1078,'integer',[]}]]]]}]]]]}]}],
		%% Line 1086
		'spec' =
		    %% Line 1086
		    [{{'getMaxLineState',1},[{'type',1086,'bounded_fun',[{'type',1086,'fun',[{'type',1086,'product',[{'var',1086,'This'}]}|[{'type',1086,'integer',[]}]]}|[[{'type',1087,'constraint',[{'atom',1087,'is_subtype'}|[[{'var',1087,'This'}|[{'type',1087,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1094
		'spec' =
		    %% Line 1094
		    [{{'getCaretLineVisible',1},[{'type',1094,'bounded_fun',[{'type',1094,'fun',[{'type',1094,'product',[{'var',1094,'This'}]}|[{'type',1094,'boolean',[]}]]}|[[{'type',1095,'constraint',[{'atom',1095,'is_subtype'}|[[{'var',1095,'This'}|[{'type',1095,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1102
		'spec' =
		    %% Line 1102
		    [{{'setCaretLineVisible',2},[{'type',1102,'bounded_fun',[{'type',1102,'fun',[{'type',1102,'product',[{'var',1102,'This'}|[{'var',1102,'Show'}]]}|[{'atom',1102,'ok'}]]}|[[{'type',1103,'constraint',[{'atom',1103,'is_subtype'}|[[{'var',1103,'This'}|[{'type',1103,'wxStyledTextCtrl',[]}]]]]}|[{'type',1103,'constraint',[{'atom',1103,'is_subtype'}|[[{'var',1103,'Show'}|[{'type',1103,'boolean',[]}]]]]}]]]]}]}],
		%% Line 1111
		'spec' =
		    %% Line 1111
		    [{{'getCaretLineBackground',1},[{'type',1111,'bounded_fun',[{'type',1111,'fun',[{'type',1111,'product',[{'var',1111,'This'}]}|[{'remote_type',1111,[{'atom',1111,'wx'}|[{'atom',1111,'wx_colour4'}|[[]]]]}]]}|[[{'type',1112,'constraint',[{'atom',1112,'is_subtype'}|[[{'var',1112,'This'}|[{'type',1112,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1119
		'spec' =
		    %% Line 1119
		    [{{'setCaretLineBackground',2},[{'type',1119,'bounded_fun',[{'type',1119,'fun',[{'type',1119,'product',[{'var',1119,'This'}|[{'var',1119,'Back'}]]}|[{'atom',1119,'ok'}]]}|[[{'type',1120,'constraint',[{'atom',1120,'is_subtype'}|[[{'var',1120,'This'}|[{'type',1120,'wxStyledTextCtrl',[]}]]]]}|[{'type',1120,'constraint',[{'atom',1120,'is_subtype'}|[[{'var',1120,'Back'}|[{'remote_type',1120,[{'atom',1120,'wx'}|[{'atom',1120,'wx_colour'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 1128
		'spec' =
		    %% Line 1128
		    [{{'autoCompShow',3},[{'type',1128,'bounded_fun',[{'type',1128,'fun',[{'type',1128,'product',[{'var',1128,'This'}|[{'var',1128,'LenEntered'}|[{'var',1128,'ItemList'}]]]}|[{'atom',1128,'ok'}]]}|[[{'type',1129,'constraint',[{'atom',1129,'is_subtype'}|[[{'var',1129,'This'}|[{'type',1129,'wxStyledTextCtrl',[]}]]]]}|[{'type',1129,'constraint',[{'atom',1129,'is_subtype'}|[[{'var',1129,'LenEntered'}|[{'type',1129,'integer',[]}]]]]}|[{'type',1129,'constraint',[{'atom',1129,'is_subtype'}|[[{'var',1129,'ItemList'}|[{'remote_type',1129,[{'atom',1129,'unicode'}|[{'atom',1129,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 1138
		'spec' =
		    %% Line 1138
		    [{{'autoCompCancel',1},[{'type',1138,'bounded_fun',[{'type',1138,'fun',[{'type',1138,'product',[{'var',1138,'This'}]}|[{'atom',1138,'ok'}]]}|[[{'type',1139,'constraint',[{'atom',1139,'is_subtype'}|[[{'var',1139,'This'}|[{'type',1139,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1146
		'spec' =
		    %% Line 1146
		    [{{'autoCompActive',1},[{'type',1146,'bounded_fun',[{'type',1146,'fun',[{'type',1146,'product',[{'var',1146,'This'}]}|[{'type',1146,'boolean',[]}]]}|[[{'type',1147,'constraint',[{'atom',1147,'is_subtype'}|[[{'var',1147,'This'}|[{'type',1147,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1154
		'spec' =
		    %% Line 1154
		    [{{'autoCompPosStart',1},[{'type',1154,'bounded_fun',[{'type',1154,'fun',[{'type',1154,'product',[{'var',1154,'This'}]}|[{'type',1154,'integer',[]}]]}|[[{'type',1155,'constraint',[{'atom',1155,'is_subtype'}|[[{'var',1155,'This'}|[{'type',1155,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1162
		'spec' =
		    %% Line 1162
		    [{{'autoCompComplete',1},[{'type',1162,'bounded_fun',[{'type',1162,'fun',[{'type',1162,'product',[{'var',1162,'This'}]}|[{'atom',1162,'ok'}]]}|[[{'type',1163,'constraint',[{'atom',1163,'is_subtype'}|[[{'var',1163,'This'}|[{'type',1163,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1170
		'spec' =
		    %% Line 1170
		    [{{'autoCompStops',2},[{'type',1170,'bounded_fun',[{'type',1170,'fun',[{'type',1170,'product',[{'var',1170,'This'}|[{'var',1170,'CharacterSet'}]]}|[{'atom',1170,'ok'}]]}|[[{'type',1171,'constraint',[{'atom',1171,'is_subtype'}|[[{'var',1171,'This'}|[{'type',1171,'wxStyledTextCtrl',[]}]]]]}|[{'type',1171,'constraint',[{'atom',1171,'is_subtype'}|[[{'var',1171,'CharacterSet'}|[{'remote_type',1171,[{'atom',1171,'unicode'}|[{'atom',1171,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 1180
		'spec' =
		    %% Line 1180
		    [{{'autoCompSetSeparator',2},[{'type',1180,'bounded_fun',[{'type',1180,'fun',[{'type',1180,'product',[{'var',1180,'This'}|[{'var',1180,'SeparatorCharacter'}]]}|[{'atom',1180,'ok'}]]}|[[{'type',1181,'constraint',[{'atom',1181,'is_subtype'}|[[{'var',1181,'This'}|[{'type',1181,'wxStyledTextCtrl',[]}]]]]}|[{'type',1181,'constraint',[{'atom',1181,'is_subtype'}|[[{'var',1181,'SeparatorCharacter'}|[{'type',1181,'integer',[]}]]]]}]]]]}]}],
		%% Line 1189
		'spec' =
		    %% Line 1189
		    [{{'autoCompGetSeparator',1},[{'type',1189,'bounded_fun',[{'type',1189,'fun',[{'type',1189,'product',[{'var',1189,'This'}]}|[{'type',1189,'integer',[]}]]}|[[{'type',1190,'constraint',[{'atom',1190,'is_subtype'}|[[{'var',1190,'This'}|[{'type',1190,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1197
		'spec' =
		    %% Line 1197
		    [{{'autoCompSelect',2},[{'type',1197,'bounded_fun',[{'type',1197,'fun',[{'type',1197,'product',[{'var',1197,'This'}|[{'var',1197,'Text'}]]}|[{'atom',1197,'ok'}]]}|[[{'type',1198,'constraint',[{'atom',1198,'is_subtype'}|[[{'var',1198,'This'}|[{'type',1198,'wxStyledTextCtrl',[]}]]]]}|[{'type',1198,'constraint',[{'atom',1198,'is_subtype'}|[[{'var',1198,'Text'}|[{'remote_type',1198,[{'atom',1198,'unicode'}|[{'atom',1198,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 1207
		'spec' =
		    %% Line 1207
		    [{{'autoCompSetCancelAtStart',2},[{'type',1207,'bounded_fun',[{'type',1207,'fun',[{'type',1207,'product',[{'var',1207,'This'}|[{'var',1207,'Cancel'}]]}|[{'atom',1207,'ok'}]]}|[[{'type',1208,'constraint',[{'atom',1208,'is_subtype'}|[[{'var',1208,'This'}|[{'type',1208,'wxStyledTextCtrl',[]}]]]]}|[{'type',1208,'constraint',[{'atom',1208,'is_subtype'}|[[{'var',1208,'Cancel'}|[{'type',1208,'boolean',[]}]]]]}]]]]}]}],
		%% Line 1216
		'spec' =
		    %% Line 1216
		    [{{'autoCompGetCancelAtStart',1},[{'type',1216,'bounded_fun',[{'type',1216,'fun',[{'type',1216,'product',[{'var',1216,'This'}]}|[{'type',1216,'boolean',[]}]]}|[[{'type',1217,'constraint',[{'atom',1217,'is_subtype'}|[[{'var',1217,'This'}|[{'type',1217,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1224
		'spec' =
		    %% Line 1224
		    [{{'autoCompSetFillUps',2},[{'type',1224,'bounded_fun',[{'type',1224,'fun',[{'type',1224,'product',[{'var',1224,'This'}|[{'var',1224,'CharacterSet'}]]}|[{'atom',1224,'ok'}]]}|[[{'type',1225,'constraint',[{'atom',1225,'is_subtype'}|[[{'var',1225,'This'}|[{'type',1225,'wxStyledTextCtrl',[]}]]]]}|[{'type',1225,'constraint',[{'atom',1225,'is_subtype'}|[[{'var',1225,'CharacterSet'}|[{'remote_type',1225,[{'atom',1225,'unicode'}|[{'atom',1225,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 1234
		'spec' =
		    %% Line 1234
		    [{{'autoCompSetChooseSingle',2},[{'type',1234,'bounded_fun',[{'type',1234,'fun',[{'type',1234,'product',[{'var',1234,'This'}|[{'var',1234,'ChooseSingle'}]]}|[{'atom',1234,'ok'}]]}|[[{'type',1235,'constraint',[{'atom',1235,'is_subtype'}|[[{'var',1235,'This'}|[{'type',1235,'wxStyledTextCtrl',[]}]]]]}|[{'type',1235,'constraint',[{'atom',1235,'is_subtype'}|[[{'var',1235,'ChooseSingle'}|[{'type',1235,'boolean',[]}]]]]}]]]]}]}],
		%% Line 1243
		'spec' =
		    %% Line 1243
		    [{{'autoCompGetChooseSingle',1},[{'type',1243,'bounded_fun',[{'type',1243,'fun',[{'type',1243,'product',[{'var',1243,'This'}]}|[{'type',1243,'boolean',[]}]]}|[[{'type',1244,'constraint',[{'atom',1244,'is_subtype'}|[[{'var',1244,'This'}|[{'type',1244,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1251
		'spec' =
		    %% Line 1251
		    [{{'autoCompSetIgnoreCase',2},[{'type',1251,'bounded_fun',[{'type',1251,'fun',[{'type',1251,'product',[{'var',1251,'This'}|[{'var',1251,'IgnoreCase'}]]}|[{'atom',1251,'ok'}]]}|[[{'type',1252,'constraint',[{'atom',1252,'is_subtype'}|[[{'var',1252,'This'}|[{'type',1252,'wxStyledTextCtrl',[]}]]]]}|[{'type',1252,'constraint',[{'atom',1252,'is_subtype'}|[[{'var',1252,'IgnoreCase'}|[{'type',1252,'boolean',[]}]]]]}]]]]}]}],
		%% Line 1260
		'spec' =
		    %% Line 1260
		    [{{'autoCompGetIgnoreCase',1},[{'type',1260,'bounded_fun',[{'type',1260,'fun',[{'type',1260,'product',[{'var',1260,'This'}]}|[{'type',1260,'boolean',[]}]]}|[[{'type',1261,'constraint',[{'atom',1261,'is_subtype'}|[[{'var',1261,'This'}|[{'type',1261,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1268
		'spec' =
		    %% Line 1268
		    [{{'userListShow',3},[{'type',1268,'bounded_fun',[{'type',1268,'fun',[{'type',1268,'product',[{'var',1268,'This'}|[{'var',1268,'ListType'}|[{'var',1268,'ItemList'}]]]}|[{'atom',1268,'ok'}]]}|[[{'type',1269,'constraint',[{'atom',1269,'is_subtype'}|[[{'var',1269,'This'}|[{'type',1269,'wxStyledTextCtrl',[]}]]]]}|[{'type',1269,'constraint',[{'atom',1269,'is_subtype'}|[[{'var',1269,'ListType'}|[{'type',1269,'integer',[]}]]]]}|[{'type',1269,'constraint',[{'atom',1269,'is_subtype'}|[[{'var',1269,'ItemList'}|[{'remote_type',1269,[{'atom',1269,'unicode'}|[{'atom',1269,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 1278
		'spec' =
		    %% Line 1278
		    [{{'autoCompSetAutoHide',2},[{'type',1278,'bounded_fun',[{'type',1278,'fun',[{'type',1278,'product',[{'var',1278,'This'}|[{'var',1278,'AutoHide'}]]}|[{'atom',1278,'ok'}]]}|[[{'type',1279,'constraint',[{'atom',1279,'is_subtype'}|[[{'var',1279,'This'}|[{'type',1279,'wxStyledTextCtrl',[]}]]]]}|[{'type',1279,'constraint',[{'atom',1279,'is_subtype'}|[[{'var',1279,'AutoHide'}|[{'type',1279,'boolean',[]}]]]]}]]]]}]}],
		%% Line 1287
		'spec' =
		    %% Line 1287
		    [{{'autoCompGetAutoHide',1},[{'type',1287,'bounded_fun',[{'type',1287,'fun',[{'type',1287,'product',[{'var',1287,'This'}]}|[{'type',1287,'boolean',[]}]]}|[[{'type',1288,'constraint',[{'atom',1288,'is_subtype'}|[[{'var',1288,'This'}|[{'type',1288,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1295
		'spec' =
		    %% Line 1295
		    [{{'autoCompSetDropRestOfWord',2},[{'type',1295,'bounded_fun',[{'type',1295,'fun',[{'type',1295,'product',[{'var',1295,'This'}|[{'var',1295,'DropRestOfWord'}]]}|[{'atom',1295,'ok'}]]}|[[{'type',1296,'constraint',[{'atom',1296,'is_subtype'}|[[{'var',1296,'This'}|[{'type',1296,'wxStyledTextCtrl',[]}]]]]}|[{'type',1296,'constraint',[{'atom',1296,'is_subtype'}|[[{'var',1296,'DropRestOfWord'}|[{'type',1296,'boolean',[]}]]]]}]]]]}]}],
		%% Line 1304
		'spec' =
		    %% Line 1304
		    [{{'autoCompGetDropRestOfWord',1},[{'type',1304,'bounded_fun',[{'type',1304,'fun',[{'type',1304,'product',[{'var',1304,'This'}]}|[{'type',1304,'boolean',[]}]]}|[[{'type',1305,'constraint',[{'atom',1305,'is_subtype'}|[[{'var',1305,'This'}|[{'type',1305,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1312
		'spec' =
		    %% Line 1312
		    [{{'registerImage',3},[{'type',1312,'bounded_fun',[{'type',1312,'fun',[{'type',1312,'product',[{'var',1312,'This'}|[{'var',1312,'Type'}|[{'var',1312,'Bmp'}]]]}|[{'atom',1312,'ok'}]]}|[[{'type',1313,'constraint',[{'atom',1313,'is_subtype'}|[[{'var',1313,'This'}|[{'type',1313,'wxStyledTextCtrl',[]}]]]]}|[{'type',1313,'constraint',[{'atom',1313,'is_subtype'}|[[{'var',1313,'Type'}|[{'type',1313,'integer',[]}]]]]}|[{'type',1313,'constraint',[{'atom',1313,'is_subtype'}|[[{'var',1313,'Bmp'}|[{'remote_type',1313,[{'atom',1313,'wxBitmap'}|[{'atom',1313,'wxBitmap'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 1322
		'spec' =
		    %% Line 1322
		    [{{'clearRegisteredImages',1},[{'type',1322,'bounded_fun',[{'type',1322,'fun',[{'type',1322,'product',[{'var',1322,'This'}]}|[{'atom',1322,'ok'}]]}|[[{'type',1323,'constraint',[{'atom',1323,'is_subtype'}|[[{'var',1323,'This'}|[{'type',1323,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1330
		'spec' =
		    %% Line 1330
		    [{{'autoCompGetTypeSeparator',1},[{'type',1330,'bounded_fun',[{'type',1330,'fun',[{'type',1330,'product',[{'var',1330,'This'}]}|[{'type',1330,'integer',[]}]]}|[[{'type',1331,'constraint',[{'atom',1331,'is_subtype'}|[[{'var',1331,'This'}|[{'type',1331,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1338
		'spec' =
		    %% Line 1338
		    [{{'autoCompSetTypeSeparator',2},[{'type',1338,'bounded_fun',[{'type',1338,'fun',[{'type',1338,'product',[{'var',1338,'This'}|[{'var',1338,'SeparatorCharacter'}]]}|[{'atom',1338,'ok'}]]}|[[{'type',1339,'constraint',[{'atom',1339,'is_subtype'}|[[{'var',1339,'This'}|[{'type',1339,'wxStyledTextCtrl',[]}]]]]}|[{'type',1339,'constraint',[{'atom',1339,'is_subtype'}|[[{'var',1339,'SeparatorCharacter'}|[{'type',1339,'integer',[]}]]]]}]]]]}]}],
		%% Line 1347
		'spec' =
		    %% Line 1347
		    [{{'autoCompSetMaxWidth',2},[{'type',1347,'bounded_fun',[{'type',1347,'fun',[{'type',1347,'product',[{'var',1347,'This'}|[{'var',1347,'CharacterCount'}]]}|[{'atom',1347,'ok'}]]}|[[{'type',1348,'constraint',[{'atom',1348,'is_subtype'}|[[{'var',1348,'This'}|[{'type',1348,'wxStyledTextCtrl',[]}]]]]}|[{'type',1348,'constraint',[{'atom',1348,'is_subtype'}|[[{'var',1348,'CharacterCount'}|[{'type',1348,'integer',[]}]]]]}]]]]}]}],
		%% Line 1356
		'spec' =
		    %% Line 1356
		    [{{'autoCompGetMaxWidth',1},[{'type',1356,'bounded_fun',[{'type',1356,'fun',[{'type',1356,'product',[{'var',1356,'This'}]}|[{'type',1356,'integer',[]}]]}|[[{'type',1357,'constraint',[{'atom',1357,'is_subtype'}|[[{'var',1357,'This'}|[{'type',1357,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1364
		'spec' =
		    %% Line 1364
		    [{{'autoCompSetMaxHeight',2},[{'type',1364,'bounded_fun',[{'type',1364,'fun',[{'type',1364,'product',[{'var',1364,'This'}|[{'var',1364,'RowCount'}]]}|[{'atom',1364,'ok'}]]}|[[{'type',1365,'constraint',[{'atom',1365,'is_subtype'}|[[{'var',1365,'This'}|[{'type',1365,'wxStyledTextCtrl',[]}]]]]}|[{'type',1365,'constraint',[{'atom',1365,'is_subtype'}|[[{'var',1365,'RowCount'}|[{'type',1365,'integer',[]}]]]]}]]]]}]}],
		%% Line 1373
		'spec' =
		    %% Line 1373
		    [{{'autoCompGetMaxHeight',1},[{'type',1373,'bounded_fun',[{'type',1373,'fun',[{'type',1373,'product',[{'var',1373,'This'}]}|[{'type',1373,'integer',[]}]]}|[[{'type',1374,'constraint',[{'atom',1374,'is_subtype'}|[[{'var',1374,'This'}|[{'type',1374,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1381
		'spec' =
		    %% Line 1381
		    [{{'setIndent',2},[{'type',1381,'bounded_fun',[{'type',1381,'fun',[{'type',1381,'product',[{'var',1381,'This'}|[{'var',1381,'IndentSize'}]]}|[{'atom',1381,'ok'}]]}|[[{'type',1382,'constraint',[{'atom',1382,'is_subtype'}|[[{'var',1382,'This'}|[{'type',1382,'wxStyledTextCtrl',[]}]]]]}|[{'type',1382,'constraint',[{'atom',1382,'is_subtype'}|[[{'var',1382,'IndentSize'}|[{'type',1382,'integer',[]}]]]]}]]]]}]}],
		%% Line 1390
		'spec' =
		    %% Line 1390
		    [{{'getIndent',1},[{'type',1390,'bounded_fun',[{'type',1390,'fun',[{'type',1390,'product',[{'var',1390,'This'}]}|[{'type',1390,'integer',[]}]]}|[[{'type',1391,'constraint',[{'atom',1391,'is_subtype'}|[[{'var',1391,'This'}|[{'type',1391,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1398
		'spec' =
		    %% Line 1398
		    [{{'setUseTabs',2},[{'type',1398,'bounded_fun',[{'type',1398,'fun',[{'type',1398,'product',[{'var',1398,'This'}|[{'var',1398,'UseTabs'}]]}|[{'atom',1398,'ok'}]]}|[[{'type',1399,'constraint',[{'atom',1399,'is_subtype'}|[[{'var',1399,'This'}|[{'type',1399,'wxStyledTextCtrl',[]}]]]]}|[{'type',1399,'constraint',[{'atom',1399,'is_subtype'}|[[{'var',1399,'UseTabs'}|[{'type',1399,'boolean',[]}]]]]}]]]]}]}],
		%% Line 1407
		'spec' =
		    %% Line 1407
		    [{{'getUseTabs',1},[{'type',1407,'bounded_fun',[{'type',1407,'fun',[{'type',1407,'product',[{'var',1407,'This'}]}|[{'type',1407,'boolean',[]}]]}|[[{'type',1408,'constraint',[{'atom',1408,'is_subtype'}|[[{'var',1408,'This'}|[{'type',1408,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1415
		'spec' =
		    %% Line 1415
		    [{{'setLineIndentation',3},[{'type',1415,'bounded_fun',[{'type',1415,'fun',[{'type',1415,'product',[{'var',1415,'This'}|[{'var',1415,'Line'}|[{'var',1415,'IndentSize'}]]]}|[{'atom',1415,'ok'}]]}|[[{'type',1416,'constraint',[{'atom',1416,'is_subtype'}|[[{'var',1416,'This'}|[{'type',1416,'wxStyledTextCtrl',[]}]]]]}|[{'type',1416,'constraint',[{'atom',1416,'is_subtype'}|[[{'var',1416,'Line'}|[{'type',1416,'integer',[]}]]]]}|[{'type',1416,'constraint',[{'atom',1416,'is_subtype'}|[[{'var',1416,'IndentSize'}|[{'type',1416,'integer',[]}]]]]}]]]]]}]}],
		%% Line 1424
		'spec' =
		    %% Line 1424
		    [{{'getLineIndentation',2},[{'type',1424,'bounded_fun',[{'type',1424,'fun',[{'type',1424,'product',[{'var',1424,'This'}|[{'var',1424,'Line'}]]}|[{'type',1424,'integer',[]}]]}|[[{'type',1425,'constraint',[{'atom',1425,'is_subtype'}|[[{'var',1425,'This'}|[{'type',1425,'wxStyledTextCtrl',[]}]]]]}|[{'type',1425,'constraint',[{'atom',1425,'is_subtype'}|[[{'var',1425,'Line'}|[{'type',1425,'integer',[]}]]]]}]]]]}]}],
		%% Line 1433
		'spec' =
		    %% Line 1433
		    [{{'getLineIndentPosition',2},[{'type',1433,'bounded_fun',[{'type',1433,'fun',[{'type',1433,'product',[{'var',1433,'This'}|[{'var',1433,'Line'}]]}|[{'type',1433,'integer',[]}]]}|[[{'type',1434,'constraint',[{'atom',1434,'is_subtype'}|[[{'var',1434,'This'}|[{'type',1434,'wxStyledTextCtrl',[]}]]]]}|[{'type',1434,'constraint',[{'atom',1434,'is_subtype'}|[[{'var',1434,'Line'}|[{'type',1434,'integer',[]}]]]]}]]]]}]}],
		%% Line 1442
		'spec' =
		    %% Line 1442
		    [{{'getColumn',2},[{'type',1442,'bounded_fun',[{'type',1442,'fun',[{'type',1442,'product',[{'var',1442,'This'}|[{'var',1442,'Pos'}]]}|[{'type',1442,'integer',[]}]]}|[[{'type',1443,'constraint',[{'atom',1443,'is_subtype'}|[[{'var',1443,'This'}|[{'type',1443,'wxStyledTextCtrl',[]}]]]]}|[{'type',1443,'constraint',[{'atom',1443,'is_subtype'}|[[{'var',1443,'Pos'}|[{'type',1443,'integer',[]}]]]]}]]]]}]}],
		%% Line 1451
		'spec' =
		    %% Line 1451
		    [{{'setUseHorizontalScrollBar',2},[{'type',1451,'bounded_fun',[{'type',1451,'fun',[{'type',1451,'product',[{'var',1451,'This'}|[{'var',1451,'Show'}]]}|[{'atom',1451,'ok'}]]}|[[{'type',1452,'constraint',[{'atom',1452,'is_subtype'}|[[{'var',1452,'This'}|[{'type',1452,'wxStyledTextCtrl',[]}]]]]}|[{'type',1452,'constraint',[{'atom',1452,'is_subtype'}|[[{'var',1452,'Show'}|[{'type',1452,'boolean',[]}]]]]}]]]]}]}],
		%% Line 1460
		'spec' =
		    %% Line 1460
		    [{{'getUseHorizontalScrollBar',1},[{'type',1460,'bounded_fun',[{'type',1460,'fun',[{'type',1460,'product',[{'var',1460,'This'}]}|[{'type',1460,'boolean',[]}]]}|[[{'type',1461,'constraint',[{'atom',1461,'is_subtype'}|[[{'var',1461,'This'}|[{'type',1461,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1468
		'spec' =
		    %% Line 1468
		    [{{'setIndentationGuides',2},[{'type',1468,'bounded_fun',[{'type',1468,'fun',[{'type',1468,'product',[{'var',1468,'This'}|[{'var',1468,'Show'}]]}|[{'atom',1468,'ok'}]]}|[[{'type',1469,'constraint',[{'atom',1469,'is_subtype'}|[[{'var',1469,'This'}|[{'type',1469,'wxStyledTextCtrl',[]}]]]]}|[{'type',1469,'constraint',[{'atom',1469,'is_subtype'}|[[{'var',1469,'Show'}|[{'type',1469,'boolean',[]}]]]]}]]]]}]}],
		%% Line 1477
		'spec' =
		    %% Line 1477
		    [{{'getIndentationGuides',1},[{'type',1477,'bounded_fun',[{'type',1477,'fun',[{'type',1477,'product',[{'var',1477,'This'}]}|[{'type',1477,'boolean',[]}]]}|[[{'type',1478,'constraint',[{'atom',1478,'is_subtype'}|[[{'var',1478,'This'}|[{'type',1478,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1485
		'spec' =
		    %% Line 1485
		    [{{'setHighlightGuide',2},[{'type',1485,'bounded_fun',[{'type',1485,'fun',[{'type',1485,'product',[{'var',1485,'This'}|[{'var',1485,'Column'}]]}|[{'atom',1485,'ok'}]]}|[[{'type',1486,'constraint',[{'atom',1486,'is_subtype'}|[[{'var',1486,'This'}|[{'type',1486,'wxStyledTextCtrl',[]}]]]]}|[{'type',1486,'constraint',[{'atom',1486,'is_subtype'}|[[{'var',1486,'Column'}|[{'type',1486,'integer',[]}]]]]}]]]]}]}],
		%% Line 1494
		'spec' =
		    %% Line 1494
		    [{{'getHighlightGuide',1},[{'type',1494,'bounded_fun',[{'type',1494,'fun',[{'type',1494,'product',[{'var',1494,'This'}]}|[{'type',1494,'integer',[]}]]}|[[{'type',1495,'constraint',[{'atom',1495,'is_subtype'}|[[{'var',1495,'This'}|[{'type',1495,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1502
		'spec' =
		    %% Line 1502
		    [{{'getLineEndPosition',2},[{'type',1502,'bounded_fun',[{'type',1502,'fun',[{'type',1502,'product',[{'var',1502,'This'}|[{'var',1502,'Line'}]]}|[{'type',1502,'integer',[]}]]}|[[{'type',1503,'constraint',[{'atom',1503,'is_subtype'}|[[{'var',1503,'This'}|[{'type',1503,'wxStyledTextCtrl',[]}]]]]}|[{'type',1503,'constraint',[{'atom',1503,'is_subtype'}|[[{'var',1503,'Line'}|[{'type',1503,'integer',[]}]]]]}]]]]}]}],
		%% Line 1511
		'spec' =
		    %% Line 1511
		    [{{'getCodePage',1},[{'type',1511,'bounded_fun',[{'type',1511,'fun',[{'type',1511,'product',[{'var',1511,'This'}]}|[{'type',1511,'integer',[]}]]}|[[{'type',1512,'constraint',[{'atom',1512,'is_subtype'}|[[{'var',1512,'This'}|[{'type',1512,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1519
		'spec' =
		    %% Line 1519
		    [{{'getCaretForeground',1},[{'type',1519,'bounded_fun',[{'type',1519,'fun',[{'type',1519,'product',[{'var',1519,'This'}]}|[{'remote_type',1519,[{'atom',1519,'wx'}|[{'atom',1519,'wx_colour4'}|[[]]]]}]]}|[[{'type',1520,'constraint',[{'atom',1520,'is_subtype'}|[[{'var',1520,'This'}|[{'type',1520,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1527
		'spec' =
		    %% Line 1527
		    [{{'getReadOnly',1},[{'type',1527,'bounded_fun',[{'type',1527,'fun',[{'type',1527,'product',[{'var',1527,'This'}]}|[{'type',1527,'boolean',[]}]]}|[[{'type',1528,'constraint',[{'atom',1528,'is_subtype'}|[[{'var',1528,'This'}|[{'type',1528,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1535
		'spec' =
		    %% Line 1535
		    [{{'setCurrentPos',2},[{'type',1535,'bounded_fun',[{'type',1535,'fun',[{'type',1535,'product',[{'var',1535,'This'}|[{'var',1535,'Pos'}]]}|[{'atom',1535,'ok'}]]}|[[{'type',1536,'constraint',[{'atom',1536,'is_subtype'}|[[{'var',1536,'This'}|[{'type',1536,'wxStyledTextCtrl',[]}]]]]}|[{'type',1536,'constraint',[{'atom',1536,'is_subtype'}|[[{'var',1536,'Pos'}|[{'type',1536,'integer',[]}]]]]}]]]]}]}],
		%% Line 1544
		'spec' =
		    %% Line 1544
		    [{{'setSelectionStart',2},[{'type',1544,'bounded_fun',[{'type',1544,'fun',[{'type',1544,'product',[{'var',1544,'This'}|[{'var',1544,'Pos'}]]}|[{'atom',1544,'ok'}]]}|[[{'type',1545,'constraint',[{'atom',1545,'is_subtype'}|[[{'var',1545,'This'}|[{'type',1545,'wxStyledTextCtrl',[]}]]]]}|[{'type',1545,'constraint',[{'atom',1545,'is_subtype'}|[[{'var',1545,'Pos'}|[{'type',1545,'integer',[]}]]]]}]]]]}]}],
		%% Line 1553
		'spec' =
		    %% Line 1553
		    [{{'getSelectionStart',1},[{'type',1553,'bounded_fun',[{'type',1553,'fun',[{'type',1553,'product',[{'var',1553,'This'}]}|[{'type',1553,'integer',[]}]]}|[[{'type',1554,'constraint',[{'atom',1554,'is_subtype'}|[[{'var',1554,'This'}|[{'type',1554,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1561
		'spec' =
		    %% Line 1561
		    [{{'setSelectionEnd',2},[{'type',1561,'bounded_fun',[{'type',1561,'fun',[{'type',1561,'product',[{'var',1561,'This'}|[{'var',1561,'Pos'}]]}|[{'atom',1561,'ok'}]]}|[[{'type',1562,'constraint',[{'atom',1562,'is_subtype'}|[[{'var',1562,'This'}|[{'type',1562,'wxStyledTextCtrl',[]}]]]]}|[{'type',1562,'constraint',[{'atom',1562,'is_subtype'}|[[{'var',1562,'Pos'}|[{'type',1562,'integer',[]}]]]]}]]]]}]}],
		%% Line 1570
		'spec' =
		    %% Line 1570
		    [{{'getSelectionEnd',1},[{'type',1570,'bounded_fun',[{'type',1570,'fun',[{'type',1570,'product',[{'var',1570,'This'}]}|[{'type',1570,'integer',[]}]]}|[[{'type',1571,'constraint',[{'atom',1571,'is_subtype'}|[[{'var',1571,'This'}|[{'type',1571,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1578
		'spec' =
		    %% Line 1578
		    [{{'setPrintMagnification',2},[{'type',1578,'bounded_fun',[{'type',1578,'fun',[{'type',1578,'product',[{'var',1578,'This'}|[{'var',1578,'Magnification'}]]}|[{'atom',1578,'ok'}]]}|[[{'type',1579,'constraint',[{'atom',1579,'is_subtype'}|[[{'var',1579,'This'}|[{'type',1579,'wxStyledTextCtrl',[]}]]]]}|[{'type',1579,'constraint',[{'atom',1579,'is_subtype'}|[[{'var',1579,'Magnification'}|[{'type',1579,'integer',[]}]]]]}]]]]}]}],
		%% Line 1587
		'spec' =
		    %% Line 1587
		    [{{'getPrintMagnification',1},[{'type',1587,'bounded_fun',[{'type',1587,'fun',[{'type',1587,'product',[{'var',1587,'This'}]}|[{'type',1587,'integer',[]}]]}|[[{'type',1588,'constraint',[{'atom',1588,'is_subtype'}|[[{'var',1588,'This'}|[{'type',1588,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1595
		'spec' =
		    %% Line 1595
		    [{{'setPrintColourMode',2},[{'type',1595,'bounded_fun',[{'type',1595,'fun',[{'type',1595,'product',[{'var',1595,'This'}|[{'var',1595,'Mode'}]]}|[{'atom',1595,'ok'}]]}|[[{'type',1596,'constraint',[{'atom',1596,'is_subtype'}|[[{'var',1596,'This'}|[{'type',1596,'wxStyledTextCtrl',[]}]]]]}|[{'type',1596,'constraint',[{'atom',1596,'is_subtype'}|[[{'var',1596,'Mode'}|[{'type',1596,'integer',[]}]]]]}]]]]}]}],
		%% Line 1604
		'spec' =
		    %% Line 1604
		    [{{'getPrintColourMode',1},[{'type',1604,'bounded_fun',[{'type',1604,'fun',[{'type',1604,'product',[{'var',1604,'This'}]}|[{'type',1604,'integer',[]}]]}|[[{'type',1605,'constraint',[{'atom',1605,'is_subtype'}|[[{'var',1605,'This'}|[{'type',1605,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1612
		'spec' =
		    %% Line 1612
		    [{{'findText',4},[{'type',1612,'bounded_fun',[{'type',1612,'fun',[{'type',1612,'product',[{'var',1612,'This'}|[{'var',1612,'MinPos'}|[{'var',1612,'MaxPos'}|[{'var',1612,'Text'}]]]]}|[{'type',1612,'integer',[]}]]}|[[{'type',1613,'constraint',[{'atom',1613,'is_subtype'}|[[{'var',1613,'This'}|[{'type',1613,'wxStyledTextCtrl',[]}]]]]}|[{'type',1613,'constraint',[{'atom',1613,'is_subtype'}|[[{'var',1613,'MinPos'}|[{'type',1613,'integer',[]}]]]]}|[{'type',1613,'constraint',[{'atom',1613,'is_subtype'}|[[{'var',1613,'MaxPos'}|[{'type',1613,'integer',[]}]]]]}|[{'type',1613,'constraint',[{'atom',1613,'is_subtype'}|[[{'var',1613,'Text'}|[{'remote_type',1613,[{'atom',1613,'unicode'}|[{'atom',1613,'chardata'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 1620
		'spec' =
		    %% Line 1620
		    [{{'findText',5},[{'type',1620,'bounded_fun',[{'type',1620,'fun',[{'type',1620,'product',[{'var',1620,'This'}|[{'var',1620,'MinPos'}|[{'var',1620,'MaxPos'}|[{'var',1620,'Text'}|[{'type',1620,'list',[{'var',1620,'Option'}]}]]]]]}|[{'type',1620,'integer',[]}]]}|[[{'type',1621,'constraint',[{'atom',1621,'is_subtype'}|[[{'var',1621,'This'}|[{'type',1621,'wxStyledTextCtrl',[]}]]]]}|[{'type',1621,'constraint',[{'atom',1621,'is_subtype'}|[[{'var',1621,'MinPos'}|[{'type',1621,'integer',[]}]]]]}|[{'type',1621,'constraint',[{'atom',1621,'is_subtype'}|[[{'var',1621,'MaxPos'}|[{'type',1621,'integer',[]}]]]]}|[{'type',1621,'constraint',[{'atom',1621,'is_subtype'}|[[{'var',1621,'Text'}|[{'remote_type',1621,[{'atom',1621,'unicode'}|[{'atom',1621,'chardata'}|[[]]]]}]]]]}|[{'type',1622,'constraint',[{'atom',1622,'is_subtype'}|[[{'var',1622,'Option'}|[{'type',1622,'tuple',[{'atom',1622,'flags'}|[{'type',1622,'integer',[]}]]}]]]]}]]]]]]]}]}],
		%% Line 1634
		'spec' =
		    %% Line 1634
		    [{{'formatRange',8},[{'type',1634,'bounded_fun',[{'type',1634,'fun',[{'type',1634,'product',[{'var',1634,'This'}|[{'var',1634,'DoDraw'}|[{'var',1634,'StartPos'}|[{'var',1634,'EndPos'}|[{'var',1634,'Draw'}|[{'var',1634,'Target'}|[{'var',1634,'RenderRect'}|[{'var',1634,'PageRect'}]]]]]]]]}|[{'type',1634,'integer',[]}]]}|[[{'type',1635,'constraint',[{'atom',1635,'is_subtype'}|[[{'var',1635,'This'}|[{'type',1635,'wxStyledTextCtrl',[]}]]]]}|[{'type',1635,'constraint',[{'atom',1635,'is_subtype'}|[[{'var',1635,'DoDraw'}|[{'type',1635,'boolean',[]}]]]]}|[{'type',1635,'constraint',[{'atom',1635,'is_subtype'}|[[{'var',1635,'StartPos'}|[{'type',1635,'integer',[]}]]]]}|[{'type',1635,'constraint',[{'atom',1635,'is_subtype'}|[[{'var',1635,'EndPos'}|[{'type',1635,'integer',[]}]]]]}|[{'type',1635,'constraint',[{'atom',1635,'is_subtype'}|[[{'var',1635,'Draw'}|[{'remote_type',1635,[{'atom',1635,'wxDC'}|[{'atom',1635,'wxDC'}|[[]]]]}]]]]}|[{'type',1635,'constraint',[{'atom',1635,'is_subtype'}|[[{'var',1635,'Target'}|[{'remote_type',1635,[{'atom',1635,'wxDC'}|[{'atom',1635,'wxDC'}|[[]]]]}]]]]}|[{'type',1635,'constraint',[{'atom',1635,'is_subtype'}|[[{'var',1635,'RenderRect'}|[{'type',1635,'tuple',[{'ann_type',1635,[{'var',1635,'X'}|[{'type',1635,'integer',[]}]]}|[{'ann_type',1635,[{'var',1635,'Y'}|[{'type',1635,'integer',[]}]]}|[{'ann_type',1635,[{'var',1635,'W'}|[{'type',1635,'integer',[]}]]}|[{'ann_type',1635,[{'var',1635,'H'}|[{'type',1635,'integer',[]}]]}]]]]}]]]]}|[{'type',1635,'constraint',[{'atom',1635,'is_subtype'}|[[{'var',1635,'PageRect'}|[{'type',1635,'tuple',[{'ann_type',1635,[{'var',1635,'X'}|[{'type',1635,'integer',[]}]]}|[{'ann_type',1635,[{'var',1635,'Y'}|[{'type',1635,'integer',[]}]]}|[{'ann_type',1635,[{'var',1635,'W'}|[{'type',1635,'integer',[]}]]}|[{'ann_type',1635,[{'var',1635,'H'}|[{'type',1635,'integer',[]}]]}]]]]}]]]]}]]]]]]]]]]}]}],
		%% Line 1645
		'spec' =
		    %% Line 1645
		    [{{'getFirstVisibleLine',1},[{'type',1645,'bounded_fun',[{'type',1645,'fun',[{'type',1645,'product',[{'var',1645,'This'}]}|[{'type',1645,'integer',[]}]]}|[[{'type',1646,'constraint',[{'atom',1646,'is_subtype'}|[[{'var',1646,'This'}|[{'type',1646,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1653
		'spec' =
		    %% Line 1653
		    [{{'getLine',2},[{'type',1653,'bounded_fun',[{'type',1653,'fun',[{'type',1653,'product',[{'var',1653,'This'}|[{'var',1653,'Line'}]]}|[{'remote_type',1653,[{'atom',1653,'unicode'}|[{'atom',1653,'charlist'}|[[]]]]}]]}|[[{'type',1654,'constraint',[{'atom',1654,'is_subtype'}|[[{'var',1654,'This'}|[{'type',1654,'wxStyledTextCtrl',[]}]]]]}|[{'type',1654,'constraint',[{'atom',1654,'is_subtype'}|[[{'var',1654,'Line'}|[{'type',1654,'integer',[]}]]]]}]]]]}]}],
		%% Line 1662
		'spec' =
		    %% Line 1662
		    [{{'getLineCount',1},[{'type',1662,'bounded_fun',[{'type',1662,'fun',[{'type',1662,'product',[{'var',1662,'This'}]}|[{'type',1662,'integer',[]}]]}|[[{'type',1663,'constraint',[{'atom',1663,'is_subtype'}|[[{'var',1663,'This'}|[{'type',1663,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1670
		'spec' =
		    %% Line 1670
		    [{{'setMarginLeft',2},[{'type',1670,'bounded_fun',[{'type',1670,'fun',[{'type',1670,'product',[{'var',1670,'This'}|[{'var',1670,'PixelWidth'}]]}|[{'atom',1670,'ok'}]]}|[[{'type',1671,'constraint',[{'atom',1671,'is_subtype'}|[[{'var',1671,'This'}|[{'type',1671,'wxStyledTextCtrl',[]}]]]]}|[{'type',1671,'constraint',[{'atom',1671,'is_subtype'}|[[{'var',1671,'PixelWidth'}|[{'type',1671,'integer',[]}]]]]}]]]]}]}],
		%% Line 1679
		'spec' =
		    %% Line 1679
		    [{{'getMarginLeft',1},[{'type',1679,'bounded_fun',[{'type',1679,'fun',[{'type',1679,'product',[{'var',1679,'This'}]}|[{'type',1679,'integer',[]}]]}|[[{'type',1680,'constraint',[{'atom',1680,'is_subtype'}|[[{'var',1680,'This'}|[{'type',1680,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1687
		'spec' =
		    %% Line 1687
		    [{{'setMarginRight',2},[{'type',1687,'bounded_fun',[{'type',1687,'fun',[{'type',1687,'product',[{'var',1687,'This'}|[{'var',1687,'PixelWidth'}]]}|[{'atom',1687,'ok'}]]}|[[{'type',1688,'constraint',[{'atom',1688,'is_subtype'}|[[{'var',1688,'This'}|[{'type',1688,'wxStyledTextCtrl',[]}]]]]}|[{'type',1688,'constraint',[{'atom',1688,'is_subtype'}|[[{'var',1688,'PixelWidth'}|[{'type',1688,'integer',[]}]]]]}]]]]}]}],
		%% Line 1696
		'spec' =
		    %% Line 1696
		    [{{'getMarginRight',1},[{'type',1696,'bounded_fun',[{'type',1696,'fun',[{'type',1696,'product',[{'var',1696,'This'}]}|[{'type',1696,'integer',[]}]]}|[[{'type',1697,'constraint',[{'atom',1697,'is_subtype'}|[[{'var',1697,'This'}|[{'type',1697,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1704
		'spec' =
		    %% Line 1704
		    [{{'getModify',1},[{'type',1704,'bounded_fun',[{'type',1704,'fun',[{'type',1704,'product',[{'var',1704,'This'}]}|[{'type',1704,'boolean',[]}]]}|[[{'type',1705,'constraint',[{'atom',1705,'is_subtype'}|[[{'var',1705,'This'}|[{'type',1705,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1712
		'spec' =
		    %% Line 1712
		    [{{'setSelection',3},[{'type',1712,'bounded_fun',[{'type',1712,'fun',[{'type',1712,'product',[{'var',1712,'This'}|[{'var',1712,'Start'}|[{'var',1712,'End'}]]]}|[{'atom',1712,'ok'}]]}|[[{'type',1713,'constraint',[{'atom',1713,'is_subtype'}|[[{'var',1713,'This'}|[{'type',1713,'wxStyledTextCtrl',[]}]]]]}|[{'type',1713,'constraint',[{'atom',1713,'is_subtype'}|[[{'var',1713,'Start'}|[{'type',1713,'integer',[]}]]]]}|[{'type',1713,'constraint',[{'atom',1713,'is_subtype'}|[[{'var',1713,'End'}|[{'type',1713,'integer',[]}]]]]}]]]]]}]}],
		%% Line 1721
		'spec' =
		    %% Line 1721
		    [{{'getSelectedText',1},[{'type',1721,'bounded_fun',[{'type',1721,'fun',[{'type',1721,'product',[{'var',1721,'This'}]}|[{'remote_type',1721,[{'atom',1721,'unicode'}|[{'atom',1721,'charlist'}|[[]]]]}]]}|[[{'type',1722,'constraint',[{'atom',1722,'is_subtype'}|[[{'var',1722,'This'}|[{'type',1722,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1729
		'spec' =
		    %% Line 1729
		    [{{'getTextRange',3},[{'type',1729,'bounded_fun',[{'type',1729,'fun',[{'type',1729,'product',[{'var',1729,'This'}|[{'var',1729,'StartPos'}|[{'var',1729,'EndPos'}]]]}|[{'remote_type',1729,[{'atom',1729,'unicode'}|[{'atom',1729,'charlist'}|[[]]]]}]]}|[[{'type',1730,'constraint',[{'atom',1730,'is_subtype'}|[[{'var',1730,'This'}|[{'type',1730,'wxStyledTextCtrl',[]}]]]]}|[{'type',1730,'constraint',[{'atom',1730,'is_subtype'}|[[{'var',1730,'StartPos'}|[{'type',1730,'integer',[]}]]]]}|[{'type',1730,'constraint',[{'atom',1730,'is_subtype'}|[[{'var',1730,'EndPos'}|[{'type',1730,'integer',[]}]]]]}]]]]]}]}],
		%% Line 1738
		'spec' =
		    %% Line 1738
		    [{{'hideSelection',2},[{'type',1738,'bounded_fun',[{'type',1738,'fun',[{'type',1738,'product',[{'var',1738,'This'}|[{'var',1738,'Normal'}]]}|[{'atom',1738,'ok'}]]}|[[{'type',1739,'constraint',[{'atom',1739,'is_subtype'}|[[{'var',1739,'This'}|[{'type',1739,'wxStyledTextCtrl',[]}]]]]}|[{'type',1739,'constraint',[{'atom',1739,'is_subtype'}|[[{'var',1739,'Normal'}|[{'type',1739,'boolean',[]}]]]]}]]]]}]}],
		%% Line 1747
		'spec' =
		    %% Line 1747
		    [{{'lineFromPosition',2},[{'type',1747,'bounded_fun',[{'type',1747,'fun',[{'type',1747,'product',[{'var',1747,'This'}|[{'var',1747,'Pos'}]]}|[{'type',1747,'integer',[]}]]}|[[{'type',1748,'constraint',[{'atom',1748,'is_subtype'}|[[{'var',1748,'This'}|[{'type',1748,'wxStyledTextCtrl',[]}]]]]}|[{'type',1748,'constraint',[{'atom',1748,'is_subtype'}|[[{'var',1748,'Pos'}|[{'type',1748,'integer',[]}]]]]}]]]]}]}],
		%% Line 1756
		'spec' =
		    %% Line 1756
		    [{{'positionFromLine',2},[{'type',1756,'bounded_fun',[{'type',1756,'fun',[{'type',1756,'product',[{'var',1756,'This'}|[{'var',1756,'Line'}]]}|[{'type',1756,'integer',[]}]]}|[[{'type',1757,'constraint',[{'atom',1757,'is_subtype'}|[[{'var',1757,'This'}|[{'type',1757,'wxStyledTextCtrl',[]}]]]]}|[{'type',1757,'constraint',[{'atom',1757,'is_subtype'}|[[{'var',1757,'Line'}|[{'type',1757,'integer',[]}]]]]}]]]]}]}],
		%% Line 1765
		'spec' =
		    %% Line 1765
		    [{{'lineScroll',3},[{'type',1765,'bounded_fun',[{'type',1765,'fun',[{'type',1765,'product',[{'var',1765,'This'}|[{'var',1765,'Columns'}|[{'var',1765,'Lines'}]]]}|[{'atom',1765,'ok'}]]}|[[{'type',1766,'constraint',[{'atom',1766,'is_subtype'}|[[{'var',1766,'This'}|[{'type',1766,'wxStyledTextCtrl',[]}]]]]}|[{'type',1766,'constraint',[{'atom',1766,'is_subtype'}|[[{'var',1766,'Columns'}|[{'type',1766,'integer',[]}]]]]}|[{'type',1766,'constraint',[{'atom',1766,'is_subtype'}|[[{'var',1766,'Lines'}|[{'type',1766,'integer',[]}]]]]}]]]]]}]}],
		%% Line 1774
		'spec' =
		    %% Line 1774
		    [{{'ensureCaretVisible',1},[{'type',1774,'bounded_fun',[{'type',1774,'fun',[{'type',1774,'product',[{'var',1774,'This'}]}|[{'atom',1774,'ok'}]]}|[[{'type',1775,'constraint',[{'atom',1775,'is_subtype'}|[[{'var',1775,'This'}|[{'type',1775,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1782
		'spec' =
		    %% Line 1782
		    [{{'replaceSelection',2},[{'type',1782,'bounded_fun',[{'type',1782,'fun',[{'type',1782,'product',[{'var',1782,'This'}|[{'var',1782,'Text'}]]}|[{'atom',1782,'ok'}]]}|[[{'type',1783,'constraint',[{'atom',1783,'is_subtype'}|[[{'var',1783,'This'}|[{'type',1783,'wxStyledTextCtrl',[]}]]]]}|[{'type',1783,'constraint',[{'atom',1783,'is_subtype'}|[[{'var',1783,'Text'}|[{'remote_type',1783,[{'atom',1783,'unicode'}|[{'atom',1783,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 1792
		'spec' =
		    %% Line 1792
		    [{{'setReadOnly',2},[{'type',1792,'bounded_fun',[{'type',1792,'fun',[{'type',1792,'product',[{'var',1792,'This'}|[{'var',1792,'ReadOnly'}]]}|[{'atom',1792,'ok'}]]}|[[{'type',1793,'constraint',[{'atom',1793,'is_subtype'}|[[{'var',1793,'This'}|[{'type',1793,'wxStyledTextCtrl',[]}]]]]}|[{'type',1793,'constraint',[{'atom',1793,'is_subtype'}|[[{'var',1793,'ReadOnly'}|[{'type',1793,'boolean',[]}]]]]}]]]]}]}],
		%% Line 1801
		'spec' =
		    %% Line 1801
		    [{{'canPaste',1},[{'type',1801,'bounded_fun',[{'type',1801,'fun',[{'type',1801,'product',[{'var',1801,'This'}]}|[{'type',1801,'boolean',[]}]]}|[[{'type',1802,'constraint',[{'atom',1802,'is_subtype'}|[[{'var',1802,'This'}|[{'type',1802,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1809
		'spec' =
		    %% Line 1809
		    [{{'canUndo',1},[{'type',1809,'bounded_fun',[{'type',1809,'fun',[{'type',1809,'product',[{'var',1809,'This'}]}|[{'type',1809,'boolean',[]}]]}|[[{'type',1810,'constraint',[{'atom',1810,'is_subtype'}|[[{'var',1810,'This'}|[{'type',1810,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1817
		'spec' =
		    %% Line 1817
		    [{{'emptyUndoBuffer',1},[{'type',1817,'bounded_fun',[{'type',1817,'fun',[{'type',1817,'product',[{'var',1817,'This'}]}|[{'atom',1817,'ok'}]]}|[[{'type',1818,'constraint',[{'atom',1818,'is_subtype'}|[[{'var',1818,'This'}|[{'type',1818,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1825
		'spec' =
		    %% Line 1825
		    [{{'undo',1},[{'type',1825,'bounded_fun',[{'type',1825,'fun',[{'type',1825,'product',[{'var',1825,'This'}]}|[{'atom',1825,'ok'}]]}|[[{'type',1826,'constraint',[{'atom',1826,'is_subtype'}|[[{'var',1826,'This'}|[{'type',1826,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1833
		'spec' =
		    %% Line 1833
		    [{{'cut',1},[{'type',1833,'bounded_fun',[{'type',1833,'fun',[{'type',1833,'product',[{'var',1833,'This'}]}|[{'atom',1833,'ok'}]]}|[[{'type',1834,'constraint',[{'atom',1834,'is_subtype'}|[[{'var',1834,'This'}|[{'type',1834,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1841
		'spec' =
		    %% Line 1841
		    [{{'copy',1},[{'type',1841,'bounded_fun',[{'type',1841,'fun',[{'type',1841,'product',[{'var',1841,'This'}]}|[{'atom',1841,'ok'}]]}|[[{'type',1842,'constraint',[{'atom',1842,'is_subtype'}|[[{'var',1842,'This'}|[{'type',1842,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1849
		'spec' =
		    %% Line 1849
		    [{{'paste',1},[{'type',1849,'bounded_fun',[{'type',1849,'fun',[{'type',1849,'product',[{'var',1849,'This'}]}|[{'atom',1849,'ok'}]]}|[[{'type',1850,'constraint',[{'atom',1850,'is_subtype'}|[[{'var',1850,'This'}|[{'type',1850,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1857
		'spec' =
		    %% Line 1857
		    [{{'clear',1},[{'type',1857,'bounded_fun',[{'type',1857,'fun',[{'type',1857,'product',[{'var',1857,'This'}]}|[{'atom',1857,'ok'}]]}|[[{'type',1858,'constraint',[{'atom',1858,'is_subtype'}|[[{'var',1858,'This'}|[{'type',1858,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1865
		'spec' =
		    %% Line 1865
		    [{{'setText',2},[{'type',1865,'bounded_fun',[{'type',1865,'fun',[{'type',1865,'product',[{'var',1865,'This'}|[{'var',1865,'Text'}]]}|[{'atom',1865,'ok'}]]}|[[{'type',1866,'constraint',[{'atom',1866,'is_subtype'}|[[{'var',1866,'This'}|[{'type',1866,'wxStyledTextCtrl',[]}]]]]}|[{'type',1866,'constraint',[{'atom',1866,'is_subtype'}|[[{'var',1866,'Text'}|[{'remote_type',1866,[{'atom',1866,'unicode'}|[{'atom',1866,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 1875
		'spec' =
		    %% Line 1875
		    [{{'getText',1},[{'type',1875,'bounded_fun',[{'type',1875,'fun',[{'type',1875,'product',[{'var',1875,'This'}]}|[{'remote_type',1875,[{'atom',1875,'unicode'}|[{'atom',1875,'charlist'}|[[]]]]}]]}|[[{'type',1876,'constraint',[{'atom',1876,'is_subtype'}|[[{'var',1876,'This'}|[{'type',1876,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1883
		'spec' =
		    %% Line 1883
		    [{{'getTextLength',1},[{'type',1883,'bounded_fun',[{'type',1883,'fun',[{'type',1883,'product',[{'var',1883,'This'}]}|[{'type',1883,'integer',[]}]]}|[[{'type',1884,'constraint',[{'atom',1884,'is_subtype'}|[[{'var',1884,'This'}|[{'type',1884,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1891
		'spec' =
		    %% Line 1891
		    [{{'getOvertype',1},[{'type',1891,'bounded_fun',[{'type',1891,'fun',[{'type',1891,'product',[{'var',1891,'This'}]}|[{'type',1891,'boolean',[]}]]}|[[{'type',1892,'constraint',[{'atom',1892,'is_subtype'}|[[{'var',1892,'This'}|[{'type',1892,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1899
		'spec' =
		    %% Line 1899
		    [{{'setCaretWidth',2},[{'type',1899,'bounded_fun',[{'type',1899,'fun',[{'type',1899,'product',[{'var',1899,'This'}|[{'var',1899,'PixelWidth'}]]}|[{'atom',1899,'ok'}]]}|[[{'type',1900,'constraint',[{'atom',1900,'is_subtype'}|[[{'var',1900,'This'}|[{'type',1900,'wxStyledTextCtrl',[]}]]]]}|[{'type',1900,'constraint',[{'atom',1900,'is_subtype'}|[[{'var',1900,'PixelWidth'}|[{'type',1900,'integer',[]}]]]]}]]]]}]}],
		%% Line 1908
		'spec' =
		    %% Line 1908
		    [{{'getCaretWidth',1},[{'type',1908,'bounded_fun',[{'type',1908,'fun',[{'type',1908,'product',[{'var',1908,'This'}]}|[{'type',1908,'integer',[]}]]}|[[{'type',1909,'constraint',[{'atom',1909,'is_subtype'}|[[{'var',1909,'This'}|[{'type',1909,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1916
		'spec' =
		    %% Line 1916
		    [{{'setTargetStart',2},[{'type',1916,'bounded_fun',[{'type',1916,'fun',[{'type',1916,'product',[{'var',1916,'This'}|[{'var',1916,'Pos'}]]}|[{'atom',1916,'ok'}]]}|[[{'type',1917,'constraint',[{'atom',1917,'is_subtype'}|[[{'var',1917,'This'}|[{'type',1917,'wxStyledTextCtrl',[]}]]]]}|[{'type',1917,'constraint',[{'atom',1917,'is_subtype'}|[[{'var',1917,'Pos'}|[{'type',1917,'integer',[]}]]]]}]]]]}]}],
		%% Line 1925
		'spec' =
		    %% Line 1925
		    [{{'getTargetStart',1},[{'type',1925,'bounded_fun',[{'type',1925,'fun',[{'type',1925,'product',[{'var',1925,'This'}]}|[{'type',1925,'integer',[]}]]}|[[{'type',1926,'constraint',[{'atom',1926,'is_subtype'}|[[{'var',1926,'This'}|[{'type',1926,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1933
		'spec' =
		    %% Line 1933
		    [{{'setTargetEnd',2},[{'type',1933,'bounded_fun',[{'type',1933,'fun',[{'type',1933,'product',[{'var',1933,'This'}|[{'var',1933,'Pos'}]]}|[{'atom',1933,'ok'}]]}|[[{'type',1934,'constraint',[{'atom',1934,'is_subtype'}|[[{'var',1934,'This'}|[{'type',1934,'wxStyledTextCtrl',[]}]]]]}|[{'type',1934,'constraint',[{'atom',1934,'is_subtype'}|[[{'var',1934,'Pos'}|[{'type',1934,'integer',[]}]]]]}]]]]}]}],
		%% Line 1942
		'spec' =
		    %% Line 1942
		    [{{'getTargetEnd',1},[{'type',1942,'bounded_fun',[{'type',1942,'fun',[{'type',1942,'product',[{'var',1942,'This'}]}|[{'type',1942,'integer',[]}]]}|[[{'type',1943,'constraint',[{'atom',1943,'is_subtype'}|[[{'var',1943,'This'}|[{'type',1943,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1950
		'spec' =
		    %% Line 1950
		    [{{'replaceTarget',2},[{'type',1950,'bounded_fun',[{'type',1950,'fun',[{'type',1950,'product',[{'var',1950,'This'}|[{'var',1950,'Text'}]]}|[{'type',1950,'integer',[]}]]}|[[{'type',1951,'constraint',[{'atom',1951,'is_subtype'}|[[{'var',1951,'This'}|[{'type',1951,'wxStyledTextCtrl',[]}]]]]}|[{'type',1951,'constraint',[{'atom',1951,'is_subtype'}|[[{'var',1951,'Text'}|[{'remote_type',1951,[{'atom',1951,'unicode'}|[{'atom',1951,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 1960
		'spec' =
		    %% Line 1960
		    [{{'searchInTarget',2},[{'type',1960,'bounded_fun',[{'type',1960,'fun',[{'type',1960,'product',[{'var',1960,'This'}|[{'var',1960,'Text'}]]}|[{'type',1960,'integer',[]}]]}|[[{'type',1961,'constraint',[{'atom',1961,'is_subtype'}|[[{'var',1961,'This'}|[{'type',1961,'wxStyledTextCtrl',[]}]]]]}|[{'type',1961,'constraint',[{'atom',1961,'is_subtype'}|[[{'var',1961,'Text'}|[{'remote_type',1961,[{'atom',1961,'unicode'}|[{'atom',1961,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 1970
		'spec' =
		    %% Line 1970
		    [{{'setSearchFlags',2},[{'type',1970,'bounded_fun',[{'type',1970,'fun',[{'type',1970,'product',[{'var',1970,'This'}|[{'var',1970,'Flags'}]]}|[{'atom',1970,'ok'}]]}|[[{'type',1971,'constraint',[{'atom',1971,'is_subtype'}|[[{'var',1971,'This'}|[{'type',1971,'wxStyledTextCtrl',[]}]]]]}|[{'type',1971,'constraint',[{'atom',1971,'is_subtype'}|[[{'var',1971,'Flags'}|[{'type',1971,'integer',[]}]]]]}]]]]}]}],
		%% Line 1979
		'spec' =
		    %% Line 1979
		    [{{'getSearchFlags',1},[{'type',1979,'bounded_fun',[{'type',1979,'fun',[{'type',1979,'product',[{'var',1979,'This'}]}|[{'type',1979,'integer',[]}]]}|[[{'type',1980,'constraint',[{'atom',1980,'is_subtype'}|[[{'var',1980,'This'}|[{'type',1980,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 1987
		'spec' =
		    %% Line 1987
		    [{{'callTipShow',3},[{'type',1987,'bounded_fun',[{'type',1987,'fun',[{'type',1987,'product',[{'var',1987,'This'}|[{'var',1987,'Pos'}|[{'var',1987,'Definition'}]]]}|[{'atom',1987,'ok'}]]}|[[{'type',1988,'constraint',[{'atom',1988,'is_subtype'}|[[{'var',1988,'This'}|[{'type',1988,'wxStyledTextCtrl',[]}]]]]}|[{'type',1988,'constraint',[{'atom',1988,'is_subtype'}|[[{'var',1988,'Pos'}|[{'type',1988,'integer',[]}]]]]}|[{'type',1988,'constraint',[{'atom',1988,'is_subtype'}|[[{'var',1988,'Definition'}|[{'remote_type',1988,[{'atom',1988,'unicode'}|[{'atom',1988,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 1997
		'spec' =
		    %% Line 1997
		    [{{'callTipCancel',1},[{'type',1997,'bounded_fun',[{'type',1997,'fun',[{'type',1997,'product',[{'var',1997,'This'}]}|[{'atom',1997,'ok'}]]}|[[{'type',1998,'constraint',[{'atom',1998,'is_subtype'}|[[{'var',1998,'This'}|[{'type',1998,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2005
		'spec' =
		    %% Line 2005
		    [{{'callTipActive',1},[{'type',2005,'bounded_fun',[{'type',2005,'fun',[{'type',2005,'product',[{'var',2005,'This'}]}|[{'type',2005,'boolean',[]}]]}|[[{'type',2006,'constraint',[{'atom',2006,'is_subtype'}|[[{'var',2006,'This'}|[{'type',2006,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2013
		'spec' =
		    %% Line 2013
		    [{{'callTipPosAtStart',1},[{'type',2013,'bounded_fun',[{'type',2013,'fun',[{'type',2013,'product',[{'var',2013,'This'}]}|[{'type',2013,'integer',[]}]]}|[[{'type',2014,'constraint',[{'atom',2014,'is_subtype'}|[[{'var',2014,'This'}|[{'type',2014,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2021
		'spec' =
		    %% Line 2021
		    [{{'callTipSetHighlight',3},[{'type',2021,'bounded_fun',[{'type',2021,'fun',[{'type',2021,'product',[{'var',2021,'This'}|[{'var',2021,'Start'}|[{'var',2021,'End'}]]]}|[{'atom',2021,'ok'}]]}|[[{'type',2022,'constraint',[{'atom',2022,'is_subtype'}|[[{'var',2022,'This'}|[{'type',2022,'wxStyledTextCtrl',[]}]]]]}|[{'type',2022,'constraint',[{'atom',2022,'is_subtype'}|[[{'var',2022,'Start'}|[{'type',2022,'integer',[]}]]]]}|[{'type',2022,'constraint',[{'atom',2022,'is_subtype'}|[[{'var',2022,'End'}|[{'type',2022,'integer',[]}]]]]}]]]]]}]}],
		%% Line 2030
		'spec' =
		    %% Line 2030
		    [{{'callTipSetBackground',2},[{'type',2030,'bounded_fun',[{'type',2030,'fun',[{'type',2030,'product',[{'var',2030,'This'}|[{'var',2030,'Back'}]]}|[{'atom',2030,'ok'}]]}|[[{'type',2031,'constraint',[{'atom',2031,'is_subtype'}|[[{'var',2031,'This'}|[{'type',2031,'wxStyledTextCtrl',[]}]]]]}|[{'type',2031,'constraint',[{'atom',2031,'is_subtype'}|[[{'var',2031,'Back'}|[{'remote_type',2031,[{'atom',2031,'wx'}|[{'atom',2031,'wx_colour'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 2039
		'spec' =
		    %% Line 2039
		    [{{'callTipSetForeground',2},[{'type',2039,'bounded_fun',[{'type',2039,'fun',[{'type',2039,'product',[{'var',2039,'This'}|[{'var',2039,'Fore'}]]}|[{'atom',2039,'ok'}]]}|[[{'type',2040,'constraint',[{'atom',2040,'is_subtype'}|[[{'var',2040,'This'}|[{'type',2040,'wxStyledTextCtrl',[]}]]]]}|[{'type',2040,'constraint',[{'atom',2040,'is_subtype'}|[[{'var',2040,'Fore'}|[{'remote_type',2040,[{'atom',2040,'wx'}|[{'atom',2040,'wx_colour'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 2048
		'spec' =
		    %% Line 2048
		    [{{'callTipSetForegroundHighlight',2},[{'type',2048,'bounded_fun',[{'type',2048,'fun',[{'type',2048,'product',[{'var',2048,'This'}|[{'var',2048,'Fore'}]]}|[{'atom',2048,'ok'}]]}|[[{'type',2049,'constraint',[{'atom',2049,'is_subtype'}|[[{'var',2049,'This'}|[{'type',2049,'wxStyledTextCtrl',[]}]]]]}|[{'type',2049,'constraint',[{'atom',2049,'is_subtype'}|[[{'var',2049,'Fore'}|[{'remote_type',2049,[{'atom',2049,'wx'}|[{'atom',2049,'wx_colour'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 2057
		'spec' =
		    %% Line 2057
		    [{{'callTipUseStyle',2},[{'type',2057,'bounded_fun',[{'type',2057,'fun',[{'type',2057,'product',[{'var',2057,'This'}|[{'var',2057,'TabSize'}]]}|[{'atom',2057,'ok'}]]}|[[{'type',2058,'constraint',[{'atom',2058,'is_subtype'}|[[{'var',2058,'This'}|[{'type',2058,'wxStyledTextCtrl',[]}]]]]}|[{'type',2058,'constraint',[{'atom',2058,'is_subtype'}|[[{'var',2058,'TabSize'}|[{'type',2058,'integer',[]}]]]]}]]]]}]}],
		%% Line 2066
		'spec' =
		    %% Line 2066
		    [{{'visibleFromDocLine',2},[{'type',2066,'bounded_fun',[{'type',2066,'fun',[{'type',2066,'product',[{'var',2066,'This'}|[{'var',2066,'Line'}]]}|[{'type',2066,'integer',[]}]]}|[[{'type',2067,'constraint',[{'atom',2067,'is_subtype'}|[[{'var',2067,'This'}|[{'type',2067,'wxStyledTextCtrl',[]}]]]]}|[{'type',2067,'constraint',[{'atom',2067,'is_subtype'}|[[{'var',2067,'Line'}|[{'type',2067,'integer',[]}]]]]}]]]]}]}],
		%% Line 2075
		'spec' =
		    %% Line 2075
		    [{{'docLineFromVisible',2},[{'type',2075,'bounded_fun',[{'type',2075,'fun',[{'type',2075,'product',[{'var',2075,'This'}|[{'var',2075,'LineDisplay'}]]}|[{'type',2075,'integer',[]}]]}|[[{'type',2076,'constraint',[{'atom',2076,'is_subtype'}|[[{'var',2076,'This'}|[{'type',2076,'wxStyledTextCtrl',[]}]]]]}|[{'type',2076,'constraint',[{'atom',2076,'is_subtype'}|[[{'var',2076,'LineDisplay'}|[{'type',2076,'integer',[]}]]]]}]]]]}]}],
		%% Line 2084
		'spec' =
		    %% Line 2084
		    [{{'wrapCount',2},[{'type',2084,'bounded_fun',[{'type',2084,'fun',[{'type',2084,'product',[{'var',2084,'This'}|[{'var',2084,'Line'}]]}|[{'type',2084,'integer',[]}]]}|[[{'type',2085,'constraint',[{'atom',2085,'is_subtype'}|[[{'var',2085,'This'}|[{'type',2085,'wxStyledTextCtrl',[]}]]]]}|[{'type',2085,'constraint',[{'atom',2085,'is_subtype'}|[[{'var',2085,'Line'}|[{'type',2085,'integer',[]}]]]]}]]]]}]}],
		%% Line 2093
		'spec' =
		    %% Line 2093
		    [{{'setFoldLevel',3},[{'type',2093,'bounded_fun',[{'type',2093,'fun',[{'type',2093,'product',[{'var',2093,'This'}|[{'var',2093,'Line'}|[{'var',2093,'Level'}]]]}|[{'atom',2093,'ok'}]]}|[[{'type',2094,'constraint',[{'atom',2094,'is_subtype'}|[[{'var',2094,'This'}|[{'type',2094,'wxStyledTextCtrl',[]}]]]]}|[{'type',2094,'constraint',[{'atom',2094,'is_subtype'}|[[{'var',2094,'Line'}|[{'type',2094,'integer',[]}]]]]}|[{'type',2094,'constraint',[{'atom',2094,'is_subtype'}|[[{'var',2094,'Level'}|[{'type',2094,'integer',[]}]]]]}]]]]]}]}],
		%% Line 2102
		'spec' =
		    %% Line 2102
		    [{{'getFoldLevel',2},[{'type',2102,'bounded_fun',[{'type',2102,'fun',[{'type',2102,'product',[{'var',2102,'This'}|[{'var',2102,'Line'}]]}|[{'type',2102,'integer',[]}]]}|[[{'type',2103,'constraint',[{'atom',2103,'is_subtype'}|[[{'var',2103,'This'}|[{'type',2103,'wxStyledTextCtrl',[]}]]]]}|[{'type',2103,'constraint',[{'atom',2103,'is_subtype'}|[[{'var',2103,'Line'}|[{'type',2103,'integer',[]}]]]]}]]]]}]}],
		%% Line 2111
		'spec' =
		    %% Line 2111
		    [{{'getLastChild',3},[{'type',2111,'bounded_fun',[{'type',2111,'fun',[{'type',2111,'product',[{'var',2111,'This'}|[{'var',2111,'Line'}|[{'var',2111,'Level'}]]]}|[{'type',2111,'integer',[]}]]}|[[{'type',2112,'constraint',[{'atom',2112,'is_subtype'}|[[{'var',2112,'This'}|[{'type',2112,'wxStyledTextCtrl',[]}]]]]}|[{'type',2112,'constraint',[{'atom',2112,'is_subtype'}|[[{'var',2112,'Line'}|[{'type',2112,'integer',[]}]]]]}|[{'type',2112,'constraint',[{'atom',2112,'is_subtype'}|[[{'var',2112,'Level'}|[{'type',2112,'integer',[]}]]]]}]]]]]}]}],
		%% Line 2120
		'spec' =
		    %% Line 2120
		    [{{'getFoldParent',2},[{'type',2120,'bounded_fun',[{'type',2120,'fun',[{'type',2120,'product',[{'var',2120,'This'}|[{'var',2120,'Line'}]]}|[{'type',2120,'integer',[]}]]}|[[{'type',2121,'constraint',[{'atom',2121,'is_subtype'}|[[{'var',2121,'This'}|[{'type',2121,'wxStyledTextCtrl',[]}]]]]}|[{'type',2121,'constraint',[{'atom',2121,'is_subtype'}|[[{'var',2121,'Line'}|[{'type',2121,'integer',[]}]]]]}]]]]}]}],
		%% Line 2129
		'spec' =
		    %% Line 2129
		    [{{'showLines',3},[{'type',2129,'bounded_fun',[{'type',2129,'fun',[{'type',2129,'product',[{'var',2129,'This'}|[{'var',2129,'LineStart'}|[{'var',2129,'LineEnd'}]]]}|[{'atom',2129,'ok'}]]}|[[{'type',2130,'constraint',[{'atom',2130,'is_subtype'}|[[{'var',2130,'This'}|[{'type',2130,'wxStyledTextCtrl',[]}]]]]}|[{'type',2130,'constraint',[{'atom',2130,'is_subtype'}|[[{'var',2130,'LineStart'}|[{'type',2130,'integer',[]}]]]]}|[{'type',2130,'constraint',[{'atom',2130,'is_subtype'}|[[{'var',2130,'LineEnd'}|[{'type',2130,'integer',[]}]]]]}]]]]]}]}],
		%% Line 2138
		'spec' =
		    %% Line 2138
		    [{{'hideLines',3},[{'type',2138,'bounded_fun',[{'type',2138,'fun',[{'type',2138,'product',[{'var',2138,'This'}|[{'var',2138,'LineStart'}|[{'var',2138,'LineEnd'}]]]}|[{'atom',2138,'ok'}]]}|[[{'type',2139,'constraint',[{'atom',2139,'is_subtype'}|[[{'var',2139,'This'}|[{'type',2139,'wxStyledTextCtrl',[]}]]]]}|[{'type',2139,'constraint',[{'atom',2139,'is_subtype'}|[[{'var',2139,'LineStart'}|[{'type',2139,'integer',[]}]]]]}|[{'type',2139,'constraint',[{'atom',2139,'is_subtype'}|[[{'var',2139,'LineEnd'}|[{'type',2139,'integer',[]}]]]]}]]]]]}]}],
		%% Line 2147
		'spec' =
		    %% Line 2147
		    [{{'getLineVisible',2},[{'type',2147,'bounded_fun',[{'type',2147,'fun',[{'type',2147,'product',[{'var',2147,'This'}|[{'var',2147,'Line'}]]}|[{'type',2147,'boolean',[]}]]}|[[{'type',2148,'constraint',[{'atom',2148,'is_subtype'}|[[{'var',2148,'This'}|[{'type',2148,'wxStyledTextCtrl',[]}]]]]}|[{'type',2148,'constraint',[{'atom',2148,'is_subtype'}|[[{'var',2148,'Line'}|[{'type',2148,'integer',[]}]]]]}]]]]}]}],
		%% Line 2156
		'spec' =
		    %% Line 2156
		    [{{'setFoldExpanded',3},[{'type',2156,'bounded_fun',[{'type',2156,'fun',[{'type',2156,'product',[{'var',2156,'This'}|[{'var',2156,'Line'}|[{'var',2156,'Expanded'}]]]}|[{'atom',2156,'ok'}]]}|[[{'type',2157,'constraint',[{'atom',2157,'is_subtype'}|[[{'var',2157,'This'}|[{'type',2157,'wxStyledTextCtrl',[]}]]]]}|[{'type',2157,'constraint',[{'atom',2157,'is_subtype'}|[[{'var',2157,'Line'}|[{'type',2157,'integer',[]}]]]]}|[{'type',2157,'constraint',[{'atom',2157,'is_subtype'}|[[{'var',2157,'Expanded'}|[{'type',2157,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 2165
		'spec' =
		    %% Line 2165
		    [{{'getFoldExpanded',2},[{'type',2165,'bounded_fun',[{'type',2165,'fun',[{'type',2165,'product',[{'var',2165,'This'}|[{'var',2165,'Line'}]]}|[{'type',2165,'boolean',[]}]]}|[[{'type',2166,'constraint',[{'atom',2166,'is_subtype'}|[[{'var',2166,'This'}|[{'type',2166,'wxStyledTextCtrl',[]}]]]]}|[{'type',2166,'constraint',[{'atom',2166,'is_subtype'}|[[{'var',2166,'Line'}|[{'type',2166,'integer',[]}]]]]}]]]]}]}],
		%% Line 2174
		'spec' =
		    %% Line 2174
		    [{{'toggleFold',2},[{'type',2174,'bounded_fun',[{'type',2174,'fun',[{'type',2174,'product',[{'var',2174,'This'}|[{'var',2174,'Line'}]]}|[{'atom',2174,'ok'}]]}|[[{'type',2175,'constraint',[{'atom',2175,'is_subtype'}|[[{'var',2175,'This'}|[{'type',2175,'wxStyledTextCtrl',[]}]]]]}|[{'type',2175,'constraint',[{'atom',2175,'is_subtype'}|[[{'var',2175,'Line'}|[{'type',2175,'integer',[]}]]]]}]]]]}]}],
		%% Line 2183
		'spec' =
		    %% Line 2183
		    [{{'ensureVisible',2},[{'type',2183,'bounded_fun',[{'type',2183,'fun',[{'type',2183,'product',[{'var',2183,'This'}|[{'var',2183,'Line'}]]}|[{'atom',2183,'ok'}]]}|[[{'type',2184,'constraint',[{'atom',2184,'is_subtype'}|[[{'var',2184,'This'}|[{'type',2184,'wxStyledTextCtrl',[]}]]]]}|[{'type',2184,'constraint',[{'atom',2184,'is_subtype'}|[[{'var',2184,'Line'}|[{'type',2184,'integer',[]}]]]]}]]]]}]}],
		%% Line 2192
		'spec' =
		    %% Line 2192
		    [{{'setFoldFlags',2},[{'type',2192,'bounded_fun',[{'type',2192,'fun',[{'type',2192,'product',[{'var',2192,'This'}|[{'var',2192,'Flags'}]]}|[{'atom',2192,'ok'}]]}|[[{'type',2193,'constraint',[{'atom',2193,'is_subtype'}|[[{'var',2193,'This'}|[{'type',2193,'wxStyledTextCtrl',[]}]]]]}|[{'type',2193,'constraint',[{'atom',2193,'is_subtype'}|[[{'var',2193,'Flags'}|[{'type',2193,'integer',[]}]]]]}]]]]}]}],
		%% Line 2201
		'spec' =
		    %% Line 2201
		    [{{'ensureVisibleEnforcePolicy',2},[{'type',2201,'bounded_fun',[{'type',2201,'fun',[{'type',2201,'product',[{'var',2201,'This'}|[{'var',2201,'Line'}]]}|[{'atom',2201,'ok'}]]}|[[{'type',2202,'constraint',[{'atom',2202,'is_subtype'}|[[{'var',2202,'This'}|[{'type',2202,'wxStyledTextCtrl',[]}]]]]}|[{'type',2202,'constraint',[{'atom',2202,'is_subtype'}|[[{'var',2202,'Line'}|[{'type',2202,'integer',[]}]]]]}]]]]}]}],
		%% Line 2210
		'spec' =
		    %% Line 2210
		    [{{'setTabIndents',2},[{'type',2210,'bounded_fun',[{'type',2210,'fun',[{'type',2210,'product',[{'var',2210,'This'}|[{'var',2210,'TabIndents'}]]}|[{'atom',2210,'ok'}]]}|[[{'type',2211,'constraint',[{'atom',2211,'is_subtype'}|[[{'var',2211,'This'}|[{'type',2211,'wxStyledTextCtrl',[]}]]]]}|[{'type',2211,'constraint',[{'atom',2211,'is_subtype'}|[[{'var',2211,'TabIndents'}|[{'type',2211,'boolean',[]}]]]]}]]]]}]}],
		%% Line 2219
		'spec' =
		    %% Line 2219
		    [{{'getTabIndents',1},[{'type',2219,'bounded_fun',[{'type',2219,'fun',[{'type',2219,'product',[{'var',2219,'This'}]}|[{'type',2219,'boolean',[]}]]}|[[{'type',2220,'constraint',[{'atom',2220,'is_subtype'}|[[{'var',2220,'This'}|[{'type',2220,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2227
		'spec' =
		    %% Line 2227
		    [{{'setBackSpaceUnIndents',2},[{'type',2227,'bounded_fun',[{'type',2227,'fun',[{'type',2227,'product',[{'var',2227,'This'}|[{'var',2227,'BsUnIndents'}]]}|[{'atom',2227,'ok'}]]}|[[{'type',2228,'constraint',[{'atom',2228,'is_subtype'}|[[{'var',2228,'This'}|[{'type',2228,'wxStyledTextCtrl',[]}]]]]}|[{'type',2228,'constraint',[{'atom',2228,'is_subtype'}|[[{'var',2228,'BsUnIndents'}|[{'type',2228,'boolean',[]}]]]]}]]]]}]}],
		%% Line 2236
		'spec' =
		    %% Line 2236
		    [{{'getBackSpaceUnIndents',1},[{'type',2236,'bounded_fun',[{'type',2236,'fun',[{'type',2236,'product',[{'var',2236,'This'}]}|[{'type',2236,'boolean',[]}]]}|[[{'type',2237,'constraint',[{'atom',2237,'is_subtype'}|[[{'var',2237,'This'}|[{'type',2237,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2244
		'spec' =
		    %% Line 2244
		    [{{'setMouseDwellTime',2},[{'type',2244,'bounded_fun',[{'type',2244,'fun',[{'type',2244,'product',[{'var',2244,'This'}|[{'var',2244,'PeriodMilliseconds'}]]}|[{'atom',2244,'ok'}]]}|[[{'type',2245,'constraint',[{'atom',2245,'is_subtype'}|[[{'var',2245,'This'}|[{'type',2245,'wxStyledTextCtrl',[]}]]]]}|[{'type',2245,'constraint',[{'atom',2245,'is_subtype'}|[[{'var',2245,'PeriodMilliseconds'}|[{'type',2245,'integer',[]}]]]]}]]]]}]}],
		%% Line 2253
		'spec' =
		    %% Line 2253
		    [{{'getMouseDwellTime',1},[{'type',2253,'bounded_fun',[{'type',2253,'fun',[{'type',2253,'product',[{'var',2253,'This'}]}|[{'type',2253,'integer',[]}]]}|[[{'type',2254,'constraint',[{'atom',2254,'is_subtype'}|[[{'var',2254,'This'}|[{'type',2254,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2261
		'spec' =
		    %% Line 2261
		    [{{'wordStartPosition',3},[{'type',2261,'bounded_fun',[{'type',2261,'fun',[{'type',2261,'product',[{'var',2261,'This'}|[{'var',2261,'Pos'}|[{'var',2261,'OnlyWordCharacters'}]]]}|[{'type',2261,'integer',[]}]]}|[[{'type',2262,'constraint',[{'atom',2262,'is_subtype'}|[[{'var',2262,'This'}|[{'type',2262,'wxStyledTextCtrl',[]}]]]]}|[{'type',2262,'constraint',[{'atom',2262,'is_subtype'}|[[{'var',2262,'Pos'}|[{'type',2262,'integer',[]}]]]]}|[{'type',2262,'constraint',[{'atom',2262,'is_subtype'}|[[{'var',2262,'OnlyWordCharacters'}|[{'type',2262,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 2270
		'spec' =
		    %% Line 2270
		    [{{'wordEndPosition',3},[{'type',2270,'bounded_fun',[{'type',2270,'fun',[{'type',2270,'product',[{'var',2270,'This'}|[{'var',2270,'Pos'}|[{'var',2270,'OnlyWordCharacters'}]]]}|[{'type',2270,'integer',[]}]]}|[[{'type',2271,'constraint',[{'atom',2271,'is_subtype'}|[[{'var',2271,'This'}|[{'type',2271,'wxStyledTextCtrl',[]}]]]]}|[{'type',2271,'constraint',[{'atom',2271,'is_subtype'}|[[{'var',2271,'Pos'}|[{'type',2271,'integer',[]}]]]]}|[{'type',2271,'constraint',[{'atom',2271,'is_subtype'}|[[{'var',2271,'OnlyWordCharacters'}|[{'type',2271,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 2279
		'spec' =
		    %% Line 2279
		    [{{'setWrapMode',2},[{'type',2279,'bounded_fun',[{'type',2279,'fun',[{'type',2279,'product',[{'var',2279,'This'}|[{'var',2279,'Mode'}]]}|[{'atom',2279,'ok'}]]}|[[{'type',2280,'constraint',[{'atom',2280,'is_subtype'}|[[{'var',2280,'This'}|[{'type',2280,'wxStyledTextCtrl',[]}]]]]}|[{'type',2280,'constraint',[{'atom',2280,'is_subtype'}|[[{'var',2280,'Mode'}|[{'type',2280,'integer',[]}]]]]}]]]]}]}],
		%% Line 2288
		'spec' =
		    %% Line 2288
		    [{{'getWrapMode',1},[{'type',2288,'bounded_fun',[{'type',2288,'fun',[{'type',2288,'product',[{'var',2288,'This'}]}|[{'type',2288,'integer',[]}]]}|[[{'type',2289,'constraint',[{'atom',2289,'is_subtype'}|[[{'var',2289,'This'}|[{'type',2289,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2296
		'spec' =
		    %% Line 2296
		    [{{'setWrapVisualFlags',2},[{'type',2296,'bounded_fun',[{'type',2296,'fun',[{'type',2296,'product',[{'var',2296,'This'}|[{'var',2296,'WrapVisualFlags'}]]}|[{'atom',2296,'ok'}]]}|[[{'type',2297,'constraint',[{'atom',2297,'is_subtype'}|[[{'var',2297,'This'}|[{'type',2297,'wxStyledTextCtrl',[]}]]]]}|[{'type',2297,'constraint',[{'atom',2297,'is_subtype'}|[[{'var',2297,'WrapVisualFlags'}|[{'type',2297,'integer',[]}]]]]}]]]]}]}],
		%% Line 2305
		'spec' =
		    %% Line 2305
		    [{{'getWrapVisualFlags',1},[{'type',2305,'bounded_fun',[{'type',2305,'fun',[{'type',2305,'product',[{'var',2305,'This'}]}|[{'type',2305,'integer',[]}]]}|[[{'type',2306,'constraint',[{'atom',2306,'is_subtype'}|[[{'var',2306,'This'}|[{'type',2306,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2313
		'spec' =
		    %% Line 2313
		    [{{'setWrapVisualFlagsLocation',2},[{'type',2313,'bounded_fun',[{'type',2313,'fun',[{'type',2313,'product',[{'var',2313,'This'}|[{'var',2313,'WrapVisualFlagsLocation'}]]}|[{'atom',2313,'ok'}]]}|[[{'type',2314,'constraint',[{'atom',2314,'is_subtype'}|[[{'var',2314,'This'}|[{'type',2314,'wxStyledTextCtrl',[]}]]]]}|[{'type',2314,'constraint',[{'atom',2314,'is_subtype'}|[[{'var',2314,'WrapVisualFlagsLocation'}|[{'type',2314,'integer',[]}]]]]}]]]]}]}],
		%% Line 2322
		'spec' =
		    %% Line 2322
		    [{{'getWrapVisualFlagsLocation',1},[{'type',2322,'bounded_fun',[{'type',2322,'fun',[{'type',2322,'product',[{'var',2322,'This'}]}|[{'type',2322,'integer',[]}]]}|[[{'type',2323,'constraint',[{'atom',2323,'is_subtype'}|[[{'var',2323,'This'}|[{'type',2323,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2330
		'spec' =
		    %% Line 2330
		    [{{'setWrapStartIndent',2},[{'type',2330,'bounded_fun',[{'type',2330,'fun',[{'type',2330,'product',[{'var',2330,'This'}|[{'var',2330,'Indent'}]]}|[{'atom',2330,'ok'}]]}|[[{'type',2331,'constraint',[{'atom',2331,'is_subtype'}|[[{'var',2331,'This'}|[{'type',2331,'wxStyledTextCtrl',[]}]]]]}|[{'type',2331,'constraint',[{'atom',2331,'is_subtype'}|[[{'var',2331,'Indent'}|[{'type',2331,'integer',[]}]]]]}]]]]}]}],
		%% Line 2339
		'spec' =
		    %% Line 2339
		    [{{'getWrapStartIndent',1},[{'type',2339,'bounded_fun',[{'type',2339,'fun',[{'type',2339,'product',[{'var',2339,'This'}]}|[{'type',2339,'integer',[]}]]}|[[{'type',2340,'constraint',[{'atom',2340,'is_subtype'}|[[{'var',2340,'This'}|[{'type',2340,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2347
		'spec' =
		    %% Line 2347
		    [{{'setLayoutCache',2},[{'type',2347,'bounded_fun',[{'type',2347,'fun',[{'type',2347,'product',[{'var',2347,'This'}|[{'var',2347,'Mode'}]]}|[{'atom',2347,'ok'}]]}|[[{'type',2348,'constraint',[{'atom',2348,'is_subtype'}|[[{'var',2348,'This'}|[{'type',2348,'wxStyledTextCtrl',[]}]]]]}|[{'type',2348,'constraint',[{'atom',2348,'is_subtype'}|[[{'var',2348,'Mode'}|[{'type',2348,'integer',[]}]]]]}]]]]}]}],
		%% Line 2356
		'spec' =
		    %% Line 2356
		    [{{'getLayoutCache',1},[{'type',2356,'bounded_fun',[{'type',2356,'fun',[{'type',2356,'product',[{'var',2356,'This'}]}|[{'type',2356,'integer',[]}]]}|[[{'type',2357,'constraint',[{'atom',2357,'is_subtype'}|[[{'var',2357,'This'}|[{'type',2357,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2364
		'spec' =
		    %% Line 2364
		    [{{'setScrollWidth',2},[{'type',2364,'bounded_fun',[{'type',2364,'fun',[{'type',2364,'product',[{'var',2364,'This'}|[{'var',2364,'PixelWidth'}]]}|[{'atom',2364,'ok'}]]}|[[{'type',2365,'constraint',[{'atom',2365,'is_subtype'}|[[{'var',2365,'This'}|[{'type',2365,'wxStyledTextCtrl',[]}]]]]}|[{'type',2365,'constraint',[{'atom',2365,'is_subtype'}|[[{'var',2365,'PixelWidth'}|[{'type',2365,'integer',[]}]]]]}]]]]}]}],
		%% Line 2373
		'spec' =
		    %% Line 2373
		    [{{'getScrollWidth',1},[{'type',2373,'bounded_fun',[{'type',2373,'fun',[{'type',2373,'product',[{'var',2373,'This'}]}|[{'type',2373,'integer',[]}]]}|[[{'type',2374,'constraint',[{'atom',2374,'is_subtype'}|[[{'var',2374,'This'}|[{'type',2374,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2381
		'spec' =
		    %% Line 2381
		    [{{'textWidth',3},[{'type',2381,'bounded_fun',[{'type',2381,'fun',[{'type',2381,'product',[{'var',2381,'This'}|[{'var',2381,'Style'}|[{'var',2381,'Text'}]]]}|[{'type',2381,'integer',[]}]]}|[[{'type',2382,'constraint',[{'atom',2382,'is_subtype'}|[[{'var',2382,'This'}|[{'type',2382,'wxStyledTextCtrl',[]}]]]]}|[{'type',2382,'constraint',[{'atom',2382,'is_subtype'}|[[{'var',2382,'Style'}|[{'type',2382,'integer',[]}]]]]}|[{'type',2382,'constraint',[{'atom',2382,'is_subtype'}|[[{'var',2382,'Text'}|[{'remote_type',2382,[{'atom',2382,'unicode'}|[{'atom',2382,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 2391
		'spec' =
		    %% Line 2391
		    [{{'getEndAtLastLine',1},[{'type',2391,'bounded_fun',[{'type',2391,'fun',[{'type',2391,'product',[{'var',2391,'This'}]}|[{'type',2391,'boolean',[]}]]}|[[{'type',2392,'constraint',[{'atom',2392,'is_subtype'}|[[{'var',2392,'This'}|[{'type',2392,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2399
		'spec' =
		    %% Line 2399
		    [{{'textHeight',2},[{'type',2399,'bounded_fun',[{'type',2399,'fun',[{'type',2399,'product',[{'var',2399,'This'}|[{'var',2399,'Line'}]]}|[{'type',2399,'integer',[]}]]}|[[{'type',2400,'constraint',[{'atom',2400,'is_subtype'}|[[{'var',2400,'This'}|[{'type',2400,'wxStyledTextCtrl',[]}]]]]}|[{'type',2400,'constraint',[{'atom',2400,'is_subtype'}|[[{'var',2400,'Line'}|[{'type',2400,'integer',[]}]]]]}]]]]}]}],
		%% Line 2408
		'spec' =
		    %% Line 2408
		    [{{'setUseVerticalScrollBar',2},[{'type',2408,'bounded_fun',[{'type',2408,'fun',[{'type',2408,'product',[{'var',2408,'This'}|[{'var',2408,'Show'}]]}|[{'atom',2408,'ok'}]]}|[[{'type',2409,'constraint',[{'atom',2409,'is_subtype'}|[[{'var',2409,'This'}|[{'type',2409,'wxStyledTextCtrl',[]}]]]]}|[{'type',2409,'constraint',[{'atom',2409,'is_subtype'}|[[{'var',2409,'Show'}|[{'type',2409,'boolean',[]}]]]]}]]]]}]}],
		%% Line 2417
		'spec' =
		    %% Line 2417
		    [{{'getUseVerticalScrollBar',1},[{'type',2417,'bounded_fun',[{'type',2417,'fun',[{'type',2417,'product',[{'var',2417,'This'}]}|[{'type',2417,'boolean',[]}]]}|[[{'type',2418,'constraint',[{'atom',2418,'is_subtype'}|[[{'var',2418,'This'}|[{'type',2418,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2425
		'spec' =
		    %% Line 2425
		    [{{'appendText',2},[{'type',2425,'bounded_fun',[{'type',2425,'fun',[{'type',2425,'product',[{'var',2425,'This'}|[{'var',2425,'Text'}]]}|[{'atom',2425,'ok'}]]}|[[{'type',2426,'constraint',[{'atom',2426,'is_subtype'}|[[{'var',2426,'This'}|[{'type',2426,'wxStyledTextCtrl',[]}]]]]}|[{'type',2426,'constraint',[{'atom',2426,'is_subtype'}|[[{'var',2426,'Text'}|[{'remote_type',2426,[{'atom',2426,'unicode'}|[{'atom',2426,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 2435
		'spec' =
		    %% Line 2435
		    [{{'getTwoPhaseDraw',1},[{'type',2435,'bounded_fun',[{'type',2435,'fun',[{'type',2435,'product',[{'var',2435,'This'}]}|[{'type',2435,'boolean',[]}]]}|[[{'type',2436,'constraint',[{'atom',2436,'is_subtype'}|[[{'var',2436,'This'}|[{'type',2436,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2443
		'spec' =
		    %% Line 2443
		    [{{'setTwoPhaseDraw',2},[{'type',2443,'bounded_fun',[{'type',2443,'fun',[{'type',2443,'product',[{'var',2443,'This'}|[{'var',2443,'TwoPhase'}]]}|[{'atom',2443,'ok'}]]}|[[{'type',2444,'constraint',[{'atom',2444,'is_subtype'}|[[{'var',2444,'This'}|[{'type',2444,'wxStyledTextCtrl',[]}]]]]}|[{'type',2444,'constraint',[{'atom',2444,'is_subtype'}|[[{'var',2444,'TwoPhase'}|[{'type',2444,'boolean',[]}]]]]}]]]]}]}],
		%% Line 2452
		'spec' =
		    %% Line 2452
		    [{{'targetFromSelection',1},[{'type',2452,'bounded_fun',[{'type',2452,'fun',[{'type',2452,'product',[{'var',2452,'This'}]}|[{'atom',2452,'ok'}]]}|[[{'type',2453,'constraint',[{'atom',2453,'is_subtype'}|[[{'var',2453,'This'}|[{'type',2453,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2460
		'spec' =
		    %% Line 2460
		    [{{'linesJoin',1},[{'type',2460,'bounded_fun',[{'type',2460,'fun',[{'type',2460,'product',[{'var',2460,'This'}]}|[{'atom',2460,'ok'}]]}|[[{'type',2461,'constraint',[{'atom',2461,'is_subtype'}|[[{'var',2461,'This'}|[{'type',2461,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2468
		'spec' =
		    %% Line 2468
		    [{{'linesSplit',2},[{'type',2468,'bounded_fun',[{'type',2468,'fun',[{'type',2468,'product',[{'var',2468,'This'}|[{'var',2468,'PixelWidth'}]]}|[{'atom',2468,'ok'}]]}|[[{'type',2469,'constraint',[{'atom',2469,'is_subtype'}|[[{'var',2469,'This'}|[{'type',2469,'wxStyledTextCtrl',[]}]]]]}|[{'type',2469,'constraint',[{'atom',2469,'is_subtype'}|[[{'var',2469,'PixelWidth'}|[{'type',2469,'integer',[]}]]]]}]]]]}]}],
		%% Line 2477
		'spec' =
		    %% Line 2477
		    [{{'setFoldMarginColour',3},[{'type',2477,'bounded_fun',[{'type',2477,'fun',[{'type',2477,'product',[{'var',2477,'This'}|[{'var',2477,'UseSetting'}|[{'var',2477,'Back'}]]]}|[{'atom',2477,'ok'}]]}|[[{'type',2478,'constraint',[{'atom',2478,'is_subtype'}|[[{'var',2478,'This'}|[{'type',2478,'wxStyledTextCtrl',[]}]]]]}|[{'type',2478,'constraint',[{'atom',2478,'is_subtype'}|[[{'var',2478,'UseSetting'}|[{'type',2478,'boolean',[]}]]]]}|[{'type',2478,'constraint',[{'atom',2478,'is_subtype'}|[[{'var',2478,'Back'}|[{'remote_type',2478,[{'atom',2478,'wx'}|[{'atom',2478,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 2486
		'spec' =
		    %% Line 2486
		    [{{'setFoldMarginHiColour',3},[{'type',2486,'bounded_fun',[{'type',2486,'fun',[{'type',2486,'product',[{'var',2486,'This'}|[{'var',2486,'UseSetting'}|[{'var',2486,'Fore'}]]]}|[{'atom',2486,'ok'}]]}|[[{'type',2487,'constraint',[{'atom',2487,'is_subtype'}|[[{'var',2487,'This'}|[{'type',2487,'wxStyledTextCtrl',[]}]]]]}|[{'type',2487,'constraint',[{'atom',2487,'is_subtype'}|[[{'var',2487,'UseSetting'}|[{'type',2487,'boolean',[]}]]]]}|[{'type',2487,'constraint',[{'atom',2487,'is_subtype'}|[[{'var',2487,'Fore'}|[{'remote_type',2487,[{'atom',2487,'wx'}|[{'atom',2487,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 2495
		'spec' =
		    %% Line 2495
		    [{{'lineDown',1},[{'type',2495,'bounded_fun',[{'type',2495,'fun',[{'type',2495,'product',[{'var',2495,'This'}]}|[{'atom',2495,'ok'}]]}|[[{'type',2496,'constraint',[{'atom',2496,'is_subtype'}|[[{'var',2496,'This'}|[{'type',2496,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2503
		'spec' =
		    %% Line 2503
		    [{{'lineDownExtend',1},[{'type',2503,'bounded_fun',[{'type',2503,'fun',[{'type',2503,'product',[{'var',2503,'This'}]}|[{'atom',2503,'ok'}]]}|[[{'type',2504,'constraint',[{'atom',2504,'is_subtype'}|[[{'var',2504,'This'}|[{'type',2504,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2511
		'spec' =
		    %% Line 2511
		    [{{'lineUp',1},[{'type',2511,'bounded_fun',[{'type',2511,'fun',[{'type',2511,'product',[{'var',2511,'This'}]}|[{'atom',2511,'ok'}]]}|[[{'type',2512,'constraint',[{'atom',2512,'is_subtype'}|[[{'var',2512,'This'}|[{'type',2512,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2519
		'spec' =
		    %% Line 2519
		    [{{'lineUpExtend',1},[{'type',2519,'bounded_fun',[{'type',2519,'fun',[{'type',2519,'product',[{'var',2519,'This'}]}|[{'atom',2519,'ok'}]]}|[[{'type',2520,'constraint',[{'atom',2520,'is_subtype'}|[[{'var',2520,'This'}|[{'type',2520,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2527
		'spec' =
		    %% Line 2527
		    [{{'charLeft',1},[{'type',2527,'bounded_fun',[{'type',2527,'fun',[{'type',2527,'product',[{'var',2527,'This'}]}|[{'atom',2527,'ok'}]]}|[[{'type',2528,'constraint',[{'atom',2528,'is_subtype'}|[[{'var',2528,'This'}|[{'type',2528,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2535
		'spec' =
		    %% Line 2535
		    [{{'charLeftExtend',1},[{'type',2535,'bounded_fun',[{'type',2535,'fun',[{'type',2535,'product',[{'var',2535,'This'}]}|[{'atom',2535,'ok'}]]}|[[{'type',2536,'constraint',[{'atom',2536,'is_subtype'}|[[{'var',2536,'This'}|[{'type',2536,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2543
		'spec' =
		    %% Line 2543
		    [{{'charRight',1},[{'type',2543,'bounded_fun',[{'type',2543,'fun',[{'type',2543,'product',[{'var',2543,'This'}]}|[{'atom',2543,'ok'}]]}|[[{'type',2544,'constraint',[{'atom',2544,'is_subtype'}|[[{'var',2544,'This'}|[{'type',2544,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2551
		'spec' =
		    %% Line 2551
		    [{{'charRightExtend',1},[{'type',2551,'bounded_fun',[{'type',2551,'fun',[{'type',2551,'product',[{'var',2551,'This'}]}|[{'atom',2551,'ok'}]]}|[[{'type',2552,'constraint',[{'atom',2552,'is_subtype'}|[[{'var',2552,'This'}|[{'type',2552,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2559
		'spec' =
		    %% Line 2559
		    [{{'wordLeft',1},[{'type',2559,'bounded_fun',[{'type',2559,'fun',[{'type',2559,'product',[{'var',2559,'This'}]}|[{'atom',2559,'ok'}]]}|[[{'type',2560,'constraint',[{'atom',2560,'is_subtype'}|[[{'var',2560,'This'}|[{'type',2560,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2567
		'spec' =
		    %% Line 2567
		    [{{'wordLeftExtend',1},[{'type',2567,'bounded_fun',[{'type',2567,'fun',[{'type',2567,'product',[{'var',2567,'This'}]}|[{'atom',2567,'ok'}]]}|[[{'type',2568,'constraint',[{'atom',2568,'is_subtype'}|[[{'var',2568,'This'}|[{'type',2568,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2575
		'spec' =
		    %% Line 2575
		    [{{'wordRight',1},[{'type',2575,'bounded_fun',[{'type',2575,'fun',[{'type',2575,'product',[{'var',2575,'This'}]}|[{'atom',2575,'ok'}]]}|[[{'type',2576,'constraint',[{'atom',2576,'is_subtype'}|[[{'var',2576,'This'}|[{'type',2576,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2583
		'spec' =
		    %% Line 2583
		    [{{'wordRightExtend',1},[{'type',2583,'bounded_fun',[{'type',2583,'fun',[{'type',2583,'product',[{'var',2583,'This'}]}|[{'atom',2583,'ok'}]]}|[[{'type',2584,'constraint',[{'atom',2584,'is_subtype'}|[[{'var',2584,'This'}|[{'type',2584,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2591
		'spec' =
		    %% Line 2591
		    [{{'home',1},[{'type',2591,'bounded_fun',[{'type',2591,'fun',[{'type',2591,'product',[{'var',2591,'This'}]}|[{'atom',2591,'ok'}]]}|[[{'type',2592,'constraint',[{'atom',2592,'is_subtype'}|[[{'var',2592,'This'}|[{'type',2592,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2599
		'spec' =
		    %% Line 2599
		    [{{'homeExtend',1},[{'type',2599,'bounded_fun',[{'type',2599,'fun',[{'type',2599,'product',[{'var',2599,'This'}]}|[{'atom',2599,'ok'}]]}|[[{'type',2600,'constraint',[{'atom',2600,'is_subtype'}|[[{'var',2600,'This'}|[{'type',2600,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2607
		'spec' =
		    %% Line 2607
		    [{{'lineEnd',1},[{'type',2607,'bounded_fun',[{'type',2607,'fun',[{'type',2607,'product',[{'var',2607,'This'}]}|[{'atom',2607,'ok'}]]}|[[{'type',2608,'constraint',[{'atom',2608,'is_subtype'}|[[{'var',2608,'This'}|[{'type',2608,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2615
		'spec' =
		    %% Line 2615
		    [{{'lineEndExtend',1},[{'type',2615,'bounded_fun',[{'type',2615,'fun',[{'type',2615,'product',[{'var',2615,'This'}]}|[{'atom',2615,'ok'}]]}|[[{'type',2616,'constraint',[{'atom',2616,'is_subtype'}|[[{'var',2616,'This'}|[{'type',2616,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2623
		'spec' =
		    %% Line 2623
		    [{{'documentStart',1},[{'type',2623,'bounded_fun',[{'type',2623,'fun',[{'type',2623,'product',[{'var',2623,'This'}]}|[{'atom',2623,'ok'}]]}|[[{'type',2624,'constraint',[{'atom',2624,'is_subtype'}|[[{'var',2624,'This'}|[{'type',2624,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2631
		'spec' =
		    %% Line 2631
		    [{{'documentStartExtend',1},[{'type',2631,'bounded_fun',[{'type',2631,'fun',[{'type',2631,'product',[{'var',2631,'This'}]}|[{'atom',2631,'ok'}]]}|[[{'type',2632,'constraint',[{'atom',2632,'is_subtype'}|[[{'var',2632,'This'}|[{'type',2632,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2639
		'spec' =
		    %% Line 2639
		    [{{'documentEnd',1},[{'type',2639,'bounded_fun',[{'type',2639,'fun',[{'type',2639,'product',[{'var',2639,'This'}]}|[{'atom',2639,'ok'}]]}|[[{'type',2640,'constraint',[{'atom',2640,'is_subtype'}|[[{'var',2640,'This'}|[{'type',2640,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2647
		'spec' =
		    %% Line 2647
		    [{{'documentEndExtend',1},[{'type',2647,'bounded_fun',[{'type',2647,'fun',[{'type',2647,'product',[{'var',2647,'This'}]}|[{'atom',2647,'ok'}]]}|[[{'type',2648,'constraint',[{'atom',2648,'is_subtype'}|[[{'var',2648,'This'}|[{'type',2648,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2655
		'spec' =
		    %% Line 2655
		    [{{'pageUp',1},[{'type',2655,'bounded_fun',[{'type',2655,'fun',[{'type',2655,'product',[{'var',2655,'This'}]}|[{'atom',2655,'ok'}]]}|[[{'type',2656,'constraint',[{'atom',2656,'is_subtype'}|[[{'var',2656,'This'}|[{'type',2656,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2663
		'spec' =
		    %% Line 2663
		    [{{'pageUpExtend',1},[{'type',2663,'bounded_fun',[{'type',2663,'fun',[{'type',2663,'product',[{'var',2663,'This'}]}|[{'atom',2663,'ok'}]]}|[[{'type',2664,'constraint',[{'atom',2664,'is_subtype'}|[[{'var',2664,'This'}|[{'type',2664,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2671
		'spec' =
		    %% Line 2671
		    [{{'pageDown',1},[{'type',2671,'bounded_fun',[{'type',2671,'fun',[{'type',2671,'product',[{'var',2671,'This'}]}|[{'atom',2671,'ok'}]]}|[[{'type',2672,'constraint',[{'atom',2672,'is_subtype'}|[[{'var',2672,'This'}|[{'type',2672,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2679
		'spec' =
		    %% Line 2679
		    [{{'pageDownExtend',1},[{'type',2679,'bounded_fun',[{'type',2679,'fun',[{'type',2679,'product',[{'var',2679,'This'}]}|[{'atom',2679,'ok'}]]}|[[{'type',2680,'constraint',[{'atom',2680,'is_subtype'}|[[{'var',2680,'This'}|[{'type',2680,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2687
		'spec' =
		    %% Line 2687
		    [{{'editToggleOvertype',1},[{'type',2687,'bounded_fun',[{'type',2687,'fun',[{'type',2687,'product',[{'var',2687,'This'}]}|[{'atom',2687,'ok'}]]}|[[{'type',2688,'constraint',[{'atom',2688,'is_subtype'}|[[{'var',2688,'This'}|[{'type',2688,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2695
		'spec' =
		    %% Line 2695
		    [{{'cancel',1},[{'type',2695,'bounded_fun',[{'type',2695,'fun',[{'type',2695,'product',[{'var',2695,'This'}]}|[{'atom',2695,'ok'}]]}|[[{'type',2696,'constraint',[{'atom',2696,'is_subtype'}|[[{'var',2696,'This'}|[{'type',2696,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2703
		'spec' =
		    %% Line 2703
		    [{{'deleteBack',1},[{'type',2703,'bounded_fun',[{'type',2703,'fun',[{'type',2703,'product',[{'var',2703,'This'}]}|[{'atom',2703,'ok'}]]}|[[{'type',2704,'constraint',[{'atom',2704,'is_subtype'}|[[{'var',2704,'This'}|[{'type',2704,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2711
		'spec' =
		    %% Line 2711
		    [{{'tab',1},[{'type',2711,'bounded_fun',[{'type',2711,'fun',[{'type',2711,'product',[{'var',2711,'This'}]}|[{'atom',2711,'ok'}]]}|[[{'type',2712,'constraint',[{'atom',2712,'is_subtype'}|[[{'var',2712,'This'}|[{'type',2712,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2719
		'spec' =
		    %% Line 2719
		    [{{'backTab',1},[{'type',2719,'bounded_fun',[{'type',2719,'fun',[{'type',2719,'product',[{'var',2719,'This'}]}|[{'atom',2719,'ok'}]]}|[[{'type',2720,'constraint',[{'atom',2720,'is_subtype'}|[[{'var',2720,'This'}|[{'type',2720,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2727
		'spec' =
		    %% Line 2727
		    [{{'newLine',1},[{'type',2727,'bounded_fun',[{'type',2727,'fun',[{'type',2727,'product',[{'var',2727,'This'}]}|[{'atom',2727,'ok'}]]}|[[{'type',2728,'constraint',[{'atom',2728,'is_subtype'}|[[{'var',2728,'This'}|[{'type',2728,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2735
		'spec' =
		    %% Line 2735
		    [{{'formFeed',1},[{'type',2735,'bounded_fun',[{'type',2735,'fun',[{'type',2735,'product',[{'var',2735,'This'}]}|[{'atom',2735,'ok'}]]}|[[{'type',2736,'constraint',[{'atom',2736,'is_subtype'}|[[{'var',2736,'This'}|[{'type',2736,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2743
		'spec' =
		    %% Line 2743
		    [{{'vCHome',1},[{'type',2743,'bounded_fun',[{'type',2743,'fun',[{'type',2743,'product',[{'var',2743,'This'}]}|[{'atom',2743,'ok'}]]}|[[{'type',2744,'constraint',[{'atom',2744,'is_subtype'}|[[{'var',2744,'This'}|[{'type',2744,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2751
		'spec' =
		    %% Line 2751
		    [{{'vCHomeExtend',1},[{'type',2751,'bounded_fun',[{'type',2751,'fun',[{'type',2751,'product',[{'var',2751,'This'}]}|[{'atom',2751,'ok'}]]}|[[{'type',2752,'constraint',[{'atom',2752,'is_subtype'}|[[{'var',2752,'This'}|[{'type',2752,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2759
		'spec' =
		    %% Line 2759
		    [{{'zoomIn',1},[{'type',2759,'bounded_fun',[{'type',2759,'fun',[{'type',2759,'product',[{'var',2759,'This'}]}|[{'atom',2759,'ok'}]]}|[[{'type',2760,'constraint',[{'atom',2760,'is_subtype'}|[[{'var',2760,'This'}|[{'type',2760,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2767
		'spec' =
		    %% Line 2767
		    [{{'zoomOut',1},[{'type',2767,'bounded_fun',[{'type',2767,'fun',[{'type',2767,'product',[{'var',2767,'This'}]}|[{'atom',2767,'ok'}]]}|[[{'type',2768,'constraint',[{'atom',2768,'is_subtype'}|[[{'var',2768,'This'}|[{'type',2768,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2775
		'spec' =
		    %% Line 2775
		    [{{'delWordLeft',1},[{'type',2775,'bounded_fun',[{'type',2775,'fun',[{'type',2775,'product',[{'var',2775,'This'}]}|[{'atom',2775,'ok'}]]}|[[{'type',2776,'constraint',[{'atom',2776,'is_subtype'}|[[{'var',2776,'This'}|[{'type',2776,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2783
		'spec' =
		    %% Line 2783
		    [{{'delWordRight',1},[{'type',2783,'bounded_fun',[{'type',2783,'fun',[{'type',2783,'product',[{'var',2783,'This'}]}|[{'atom',2783,'ok'}]]}|[[{'type',2784,'constraint',[{'atom',2784,'is_subtype'}|[[{'var',2784,'This'}|[{'type',2784,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2791
		'spec' =
		    %% Line 2791
		    [{{'lineCut',1},[{'type',2791,'bounded_fun',[{'type',2791,'fun',[{'type',2791,'product',[{'var',2791,'This'}]}|[{'atom',2791,'ok'}]]}|[[{'type',2792,'constraint',[{'atom',2792,'is_subtype'}|[[{'var',2792,'This'}|[{'type',2792,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2799
		'spec' =
		    %% Line 2799
		    [{{'lineDelete',1},[{'type',2799,'bounded_fun',[{'type',2799,'fun',[{'type',2799,'product',[{'var',2799,'This'}]}|[{'atom',2799,'ok'}]]}|[[{'type',2800,'constraint',[{'atom',2800,'is_subtype'}|[[{'var',2800,'This'}|[{'type',2800,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2807
		'spec' =
		    %% Line 2807
		    [{{'lineTranspose',1},[{'type',2807,'bounded_fun',[{'type',2807,'fun',[{'type',2807,'product',[{'var',2807,'This'}]}|[{'atom',2807,'ok'}]]}|[[{'type',2808,'constraint',[{'atom',2808,'is_subtype'}|[[{'var',2808,'This'}|[{'type',2808,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2815
		'spec' =
		    %% Line 2815
		    [{{'lineDuplicate',1},[{'type',2815,'bounded_fun',[{'type',2815,'fun',[{'type',2815,'product',[{'var',2815,'This'}]}|[{'atom',2815,'ok'}]]}|[[{'type',2816,'constraint',[{'atom',2816,'is_subtype'}|[[{'var',2816,'This'}|[{'type',2816,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2823
		'spec' =
		    %% Line 2823
		    [{{'lowerCase',1},[{'type',2823,'bounded_fun',[{'type',2823,'fun',[{'type',2823,'product',[{'var',2823,'This'}]}|[{'atom',2823,'ok'}]]}|[[{'type',2824,'constraint',[{'atom',2824,'is_subtype'}|[[{'var',2824,'This'}|[{'type',2824,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2831
		'spec' =
		    %% Line 2831
		    [{{'upperCase',1},[{'type',2831,'bounded_fun',[{'type',2831,'fun',[{'type',2831,'product',[{'var',2831,'This'}]}|[{'atom',2831,'ok'}]]}|[[{'type',2832,'constraint',[{'atom',2832,'is_subtype'}|[[{'var',2832,'This'}|[{'type',2832,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2839
		'spec' =
		    %% Line 2839
		    [{{'lineScrollDown',1},[{'type',2839,'bounded_fun',[{'type',2839,'fun',[{'type',2839,'product',[{'var',2839,'This'}]}|[{'atom',2839,'ok'}]]}|[[{'type',2840,'constraint',[{'atom',2840,'is_subtype'}|[[{'var',2840,'This'}|[{'type',2840,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2847
		'spec' =
		    %% Line 2847
		    [{{'lineScrollUp',1},[{'type',2847,'bounded_fun',[{'type',2847,'fun',[{'type',2847,'product',[{'var',2847,'This'}]}|[{'atom',2847,'ok'}]]}|[[{'type',2848,'constraint',[{'atom',2848,'is_subtype'}|[[{'var',2848,'This'}|[{'type',2848,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2855
		'spec' =
		    %% Line 2855
		    [{{'deleteBackNotLine',1},[{'type',2855,'bounded_fun',[{'type',2855,'fun',[{'type',2855,'product',[{'var',2855,'This'}]}|[{'atom',2855,'ok'}]]}|[[{'type',2856,'constraint',[{'atom',2856,'is_subtype'}|[[{'var',2856,'This'}|[{'type',2856,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2863
		'spec' =
		    %% Line 2863
		    [{{'homeDisplay',1},[{'type',2863,'bounded_fun',[{'type',2863,'fun',[{'type',2863,'product',[{'var',2863,'This'}]}|[{'atom',2863,'ok'}]]}|[[{'type',2864,'constraint',[{'atom',2864,'is_subtype'}|[[{'var',2864,'This'}|[{'type',2864,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2871
		'spec' =
		    %% Line 2871
		    [{{'homeDisplayExtend',1},[{'type',2871,'bounded_fun',[{'type',2871,'fun',[{'type',2871,'product',[{'var',2871,'This'}]}|[{'atom',2871,'ok'}]]}|[[{'type',2872,'constraint',[{'atom',2872,'is_subtype'}|[[{'var',2872,'This'}|[{'type',2872,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2879
		'spec' =
		    %% Line 2879
		    [{{'lineEndDisplay',1},[{'type',2879,'bounded_fun',[{'type',2879,'fun',[{'type',2879,'product',[{'var',2879,'This'}]}|[{'atom',2879,'ok'}]]}|[[{'type',2880,'constraint',[{'atom',2880,'is_subtype'}|[[{'var',2880,'This'}|[{'type',2880,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2887
		'spec' =
		    %% Line 2887
		    [{{'lineEndDisplayExtend',1},[{'type',2887,'bounded_fun',[{'type',2887,'fun',[{'type',2887,'product',[{'var',2887,'This'}]}|[{'atom',2887,'ok'}]]}|[[{'type',2888,'constraint',[{'atom',2888,'is_subtype'}|[[{'var',2888,'This'}|[{'type',2888,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2895
		'spec' =
		    %% Line 2895
		    [{{'homeWrapExtend',1},[{'type',2895,'bounded_fun',[{'type',2895,'fun',[{'type',2895,'product',[{'var',2895,'This'}]}|[{'atom',2895,'ok'}]]}|[[{'type',2896,'constraint',[{'atom',2896,'is_subtype'}|[[{'var',2896,'This'}|[{'type',2896,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2903
		'spec' =
		    %% Line 2903
		    [{{'lineEndWrap',1},[{'type',2903,'bounded_fun',[{'type',2903,'fun',[{'type',2903,'product',[{'var',2903,'This'}]}|[{'atom',2903,'ok'}]]}|[[{'type',2904,'constraint',[{'atom',2904,'is_subtype'}|[[{'var',2904,'This'}|[{'type',2904,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2911
		'spec' =
		    %% Line 2911
		    [{{'lineEndWrapExtend',1},[{'type',2911,'bounded_fun',[{'type',2911,'fun',[{'type',2911,'product',[{'var',2911,'This'}]}|[{'atom',2911,'ok'}]]}|[[{'type',2912,'constraint',[{'atom',2912,'is_subtype'}|[[{'var',2912,'This'}|[{'type',2912,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2919
		'spec' =
		    %% Line 2919
		    [{{'vCHomeWrap',1},[{'type',2919,'bounded_fun',[{'type',2919,'fun',[{'type',2919,'product',[{'var',2919,'This'}]}|[{'atom',2919,'ok'}]]}|[[{'type',2920,'constraint',[{'atom',2920,'is_subtype'}|[[{'var',2920,'This'}|[{'type',2920,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2927
		'spec' =
		    %% Line 2927
		    [{{'vCHomeWrapExtend',1},[{'type',2927,'bounded_fun',[{'type',2927,'fun',[{'type',2927,'product',[{'var',2927,'This'}]}|[{'atom',2927,'ok'}]]}|[[{'type',2928,'constraint',[{'atom',2928,'is_subtype'}|[[{'var',2928,'This'}|[{'type',2928,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2935
		'spec' =
		    %% Line 2935
		    [{{'lineCopy',1},[{'type',2935,'bounded_fun',[{'type',2935,'fun',[{'type',2935,'product',[{'var',2935,'This'}]}|[{'atom',2935,'ok'}]]}|[[{'type',2936,'constraint',[{'atom',2936,'is_subtype'}|[[{'var',2936,'This'}|[{'type',2936,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2943
		'spec' =
		    %% Line 2943
		    [{{'moveCaretInsideView',1},[{'type',2943,'bounded_fun',[{'type',2943,'fun',[{'type',2943,'product',[{'var',2943,'This'}]}|[{'atom',2943,'ok'}]]}|[[{'type',2944,'constraint',[{'atom',2944,'is_subtype'}|[[{'var',2944,'This'}|[{'type',2944,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2951
		'spec' =
		    %% Line 2951
		    [{{'lineLength',2},[{'type',2951,'bounded_fun',[{'type',2951,'fun',[{'type',2951,'product',[{'var',2951,'This'}|[{'var',2951,'Line'}]]}|[{'type',2951,'integer',[]}]]}|[[{'type',2952,'constraint',[{'atom',2952,'is_subtype'}|[[{'var',2952,'This'}|[{'type',2952,'wxStyledTextCtrl',[]}]]]]}|[{'type',2952,'constraint',[{'atom',2952,'is_subtype'}|[[{'var',2952,'Line'}|[{'type',2952,'integer',[]}]]]]}]]]]}]}],
		%% Line 2960
		'spec' =
		    %% Line 2960
		    [{{'braceHighlight',3},[{'type',2960,'bounded_fun',[{'type',2960,'fun',[{'type',2960,'product',[{'var',2960,'This'}|[{'var',2960,'Pos1'}|[{'var',2960,'Pos2'}]]]}|[{'atom',2960,'ok'}]]}|[[{'type',2961,'constraint',[{'atom',2961,'is_subtype'}|[[{'var',2961,'This'}|[{'type',2961,'wxStyledTextCtrl',[]}]]]]}|[{'type',2961,'constraint',[{'atom',2961,'is_subtype'}|[[{'var',2961,'Pos1'}|[{'type',2961,'integer',[]}]]]]}|[{'type',2961,'constraint',[{'atom',2961,'is_subtype'}|[[{'var',2961,'Pos2'}|[{'type',2961,'integer',[]}]]]]}]]]]]}]}],
		%% Line 2969
		'spec' =
		    %% Line 2969
		    [{{'braceBadLight',2},[{'type',2969,'bounded_fun',[{'type',2969,'fun',[{'type',2969,'product',[{'var',2969,'This'}|[{'var',2969,'Pos'}]]}|[{'atom',2969,'ok'}]]}|[[{'type',2970,'constraint',[{'atom',2970,'is_subtype'}|[[{'var',2970,'This'}|[{'type',2970,'wxStyledTextCtrl',[]}]]]]}|[{'type',2970,'constraint',[{'atom',2970,'is_subtype'}|[[{'var',2970,'Pos'}|[{'type',2970,'integer',[]}]]]]}]]]]}]}],
		%% Line 2978
		'spec' =
		    %% Line 2978
		    [{{'braceMatch',2},[{'type',2978,'bounded_fun',[{'type',2978,'fun',[{'type',2978,'product',[{'var',2978,'This'}|[{'var',2978,'Pos'}]]}|[{'type',2978,'integer',[]}]]}|[[{'type',2979,'constraint',[{'atom',2979,'is_subtype'}|[[{'var',2979,'This'}|[{'type',2979,'wxStyledTextCtrl',[]}]]]]}|[{'type',2979,'constraint',[{'atom',2979,'is_subtype'}|[[{'var',2979,'Pos'}|[{'type',2979,'integer',[]}]]]]}]]]]}]}],
		%% Line 2987
		'spec' =
		    %% Line 2987
		    [{{'getViewEOL',1},[{'type',2987,'bounded_fun',[{'type',2987,'fun',[{'type',2987,'product',[{'var',2987,'This'}]}|[{'type',2987,'boolean',[]}]]}|[[{'type',2988,'constraint',[{'atom',2988,'is_subtype'}|[[{'var',2988,'This'}|[{'type',2988,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 2995
		'spec' =
		    %% Line 2995
		    [{{'setViewEOL',2},[{'type',2995,'bounded_fun',[{'type',2995,'fun',[{'type',2995,'product',[{'var',2995,'This'}|[{'var',2995,'Visible'}]]}|[{'atom',2995,'ok'}]]}|[[{'type',2996,'constraint',[{'atom',2996,'is_subtype'}|[[{'var',2996,'This'}|[{'type',2996,'wxStyledTextCtrl',[]}]]]]}|[{'type',2996,'constraint',[{'atom',2996,'is_subtype'}|[[{'var',2996,'Visible'}|[{'type',2996,'boolean',[]}]]]]}]]]]}]}],
		%% Line 3004
		'spec' =
		    %% Line 3004
		    [{{'setModEventMask',2},[{'type',3004,'bounded_fun',[{'type',3004,'fun',[{'type',3004,'product',[{'var',3004,'This'}|[{'var',3004,'Mask'}]]}|[{'atom',3004,'ok'}]]}|[[{'type',3005,'constraint',[{'atom',3005,'is_subtype'}|[[{'var',3005,'This'}|[{'type',3005,'wxStyledTextCtrl',[]}]]]]}|[{'type',3005,'constraint',[{'atom',3005,'is_subtype'}|[[{'var',3005,'Mask'}|[{'type',3005,'integer',[]}]]]]}]]]]}]}],
		%% Line 3013
		'spec' =
		    %% Line 3013
		    [{{'getEdgeColumn',1},[{'type',3013,'bounded_fun',[{'type',3013,'fun',[{'type',3013,'product',[{'var',3013,'This'}]}|[{'type',3013,'integer',[]}]]}|[[{'type',3014,'constraint',[{'atom',3014,'is_subtype'}|[[{'var',3014,'This'}|[{'type',3014,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3021
		'spec' =
		    %% Line 3021
		    [{{'setEdgeColumn',2},[{'type',3021,'bounded_fun',[{'type',3021,'fun',[{'type',3021,'product',[{'var',3021,'This'}|[{'var',3021,'Column'}]]}|[{'atom',3021,'ok'}]]}|[[{'type',3022,'constraint',[{'atom',3022,'is_subtype'}|[[{'var',3022,'This'}|[{'type',3022,'wxStyledTextCtrl',[]}]]]]}|[{'type',3022,'constraint',[{'atom',3022,'is_subtype'}|[[{'var',3022,'Column'}|[{'type',3022,'integer',[]}]]]]}]]]]}]}],
		%% Line 3030
		'spec' =
		    %% Line 3030
		    [{{'setEdgeMode',2},[{'type',3030,'bounded_fun',[{'type',3030,'fun',[{'type',3030,'product',[{'var',3030,'This'}|[{'var',3030,'Mode'}]]}|[{'atom',3030,'ok'}]]}|[[{'type',3031,'constraint',[{'atom',3031,'is_subtype'}|[[{'var',3031,'This'}|[{'type',3031,'wxStyledTextCtrl',[]}]]]]}|[{'type',3031,'constraint',[{'atom',3031,'is_subtype'}|[[{'var',3031,'Mode'}|[{'type',3031,'integer',[]}]]]]}]]]]}]}],
		%% Line 3039
		'spec' =
		    %% Line 3039
		    [{{'getEdgeMode',1},[{'type',3039,'bounded_fun',[{'type',3039,'fun',[{'type',3039,'product',[{'var',3039,'This'}]}|[{'type',3039,'integer',[]}]]}|[[{'type',3040,'constraint',[{'atom',3040,'is_subtype'}|[[{'var',3040,'This'}|[{'type',3040,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3047
		'spec' =
		    %% Line 3047
		    [{{'getEdgeColour',1},[{'type',3047,'bounded_fun',[{'type',3047,'fun',[{'type',3047,'product',[{'var',3047,'This'}]}|[{'remote_type',3047,[{'atom',3047,'wx'}|[{'atom',3047,'wx_colour4'}|[[]]]]}]]}|[[{'type',3048,'constraint',[{'atom',3048,'is_subtype'}|[[{'var',3048,'This'}|[{'type',3048,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3055
		'spec' =
		    %% Line 3055
		    [{{'setEdgeColour',2},[{'type',3055,'bounded_fun',[{'type',3055,'fun',[{'type',3055,'product',[{'var',3055,'This'}|[{'var',3055,'EdgeColour'}]]}|[{'atom',3055,'ok'}]]}|[[{'type',3056,'constraint',[{'atom',3056,'is_subtype'}|[[{'var',3056,'This'}|[{'type',3056,'wxStyledTextCtrl',[]}]]]]}|[{'type',3056,'constraint',[{'atom',3056,'is_subtype'}|[[{'var',3056,'EdgeColour'}|[{'remote_type',3056,[{'atom',3056,'wx'}|[{'atom',3056,'wx_colour'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 3064
		'spec' =
		    %% Line 3064
		    [{{'searchAnchor',1},[{'type',3064,'bounded_fun',[{'type',3064,'fun',[{'type',3064,'product',[{'var',3064,'This'}]}|[{'atom',3064,'ok'}]]}|[[{'type',3065,'constraint',[{'atom',3065,'is_subtype'}|[[{'var',3065,'This'}|[{'type',3065,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3072
		'spec' =
		    %% Line 3072
		    [{{'searchNext',3},[{'type',3072,'bounded_fun',[{'type',3072,'fun',[{'type',3072,'product',[{'var',3072,'This'}|[{'var',3072,'Flags'}|[{'var',3072,'Text'}]]]}|[{'type',3072,'integer',[]}]]}|[[{'type',3073,'constraint',[{'atom',3073,'is_subtype'}|[[{'var',3073,'This'}|[{'type',3073,'wxStyledTextCtrl',[]}]]]]}|[{'type',3073,'constraint',[{'atom',3073,'is_subtype'}|[[{'var',3073,'Flags'}|[{'type',3073,'integer',[]}]]]]}|[{'type',3073,'constraint',[{'atom',3073,'is_subtype'}|[[{'var',3073,'Text'}|[{'remote_type',3073,[{'atom',3073,'unicode'}|[{'atom',3073,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 3082
		'spec' =
		    %% Line 3082
		    [{{'searchPrev',3},[{'type',3082,'bounded_fun',[{'type',3082,'fun',[{'type',3082,'product',[{'var',3082,'This'}|[{'var',3082,'Flags'}|[{'var',3082,'Text'}]]]}|[{'type',3082,'integer',[]}]]}|[[{'type',3083,'constraint',[{'atom',3083,'is_subtype'}|[[{'var',3083,'This'}|[{'type',3083,'wxStyledTextCtrl',[]}]]]]}|[{'type',3083,'constraint',[{'atom',3083,'is_subtype'}|[[{'var',3083,'Flags'}|[{'type',3083,'integer',[]}]]]]}|[{'type',3083,'constraint',[{'atom',3083,'is_subtype'}|[[{'var',3083,'Text'}|[{'remote_type',3083,[{'atom',3083,'unicode'}|[{'atom',3083,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 3092
		'spec' =
		    %% Line 3092
		    [{{'linesOnScreen',1},[{'type',3092,'bounded_fun',[{'type',3092,'fun',[{'type',3092,'product',[{'var',3092,'This'}]}|[{'type',3092,'integer',[]}]]}|[[{'type',3093,'constraint',[{'atom',3093,'is_subtype'}|[[{'var',3093,'This'}|[{'type',3093,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3100
		'spec' =
		    %% Line 3100
		    [{{'usePopUp',2},[{'type',3100,'bounded_fun',[{'type',3100,'fun',[{'type',3100,'product',[{'var',3100,'This'}|[{'var',3100,'AllowPopUp'}]]}|[{'atom',3100,'ok'}]]}|[[{'type',3101,'constraint',[{'atom',3101,'is_subtype'}|[[{'var',3101,'This'}|[{'type',3101,'wxStyledTextCtrl',[]}]]]]}|[{'type',3101,'constraint',[{'atom',3101,'is_subtype'}|[[{'var',3101,'AllowPopUp'}|[{'type',3101,'boolean',[]}]]]]}]]]]}]}],
		%% Line 3109
		'spec' =
		    %% Line 3109
		    [{{'selectionIsRectangle',1},[{'type',3109,'bounded_fun',[{'type',3109,'fun',[{'type',3109,'product',[{'var',3109,'This'}]}|[{'type',3109,'boolean',[]}]]}|[[{'type',3110,'constraint',[{'atom',3110,'is_subtype'}|[[{'var',3110,'This'}|[{'type',3110,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3117
		'spec' =
		    %% Line 3117
		    [{{'setZoom',2},[{'type',3117,'bounded_fun',[{'type',3117,'fun',[{'type',3117,'product',[{'var',3117,'This'}|[{'var',3117,'Zoom'}]]}|[{'atom',3117,'ok'}]]}|[[{'type',3118,'constraint',[{'atom',3118,'is_subtype'}|[[{'var',3118,'This'}|[{'type',3118,'wxStyledTextCtrl',[]}]]]]}|[{'type',3118,'constraint',[{'atom',3118,'is_subtype'}|[[{'var',3118,'Zoom'}|[{'type',3118,'integer',[]}]]]]}]]]]}]}],
		%% Line 3126
		'spec' =
		    %% Line 3126
		    [{{'getZoom',1},[{'type',3126,'bounded_fun',[{'type',3126,'fun',[{'type',3126,'product',[{'var',3126,'This'}]}|[{'type',3126,'integer',[]}]]}|[[{'type',3127,'constraint',[{'atom',3127,'is_subtype'}|[[{'var',3127,'This'}|[{'type',3127,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3134
		'spec' =
		    %% Line 3134
		    [{{'getModEventMask',1},[{'type',3134,'bounded_fun',[{'type',3134,'fun',[{'type',3134,'product',[{'var',3134,'This'}]}|[{'type',3134,'integer',[]}]]}|[[{'type',3135,'constraint',[{'atom',3135,'is_subtype'}|[[{'var',3135,'This'}|[{'type',3135,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3142
		'spec' =
		    %% Line 3142
		    [{{'setSTCFocus',2},[{'type',3142,'bounded_fun',[{'type',3142,'fun',[{'type',3142,'product',[{'var',3142,'This'}|[{'var',3142,'Focus'}]]}|[{'atom',3142,'ok'}]]}|[[{'type',3143,'constraint',[{'atom',3143,'is_subtype'}|[[{'var',3143,'This'}|[{'type',3143,'wxStyledTextCtrl',[]}]]]]}|[{'type',3143,'constraint',[{'atom',3143,'is_subtype'}|[[{'var',3143,'Focus'}|[{'type',3143,'boolean',[]}]]]]}]]]]}]}],
		%% Line 3151
		'spec' =
		    %% Line 3151
		    [{{'getSTCFocus',1},[{'type',3151,'bounded_fun',[{'type',3151,'fun',[{'type',3151,'product',[{'var',3151,'This'}]}|[{'type',3151,'boolean',[]}]]}|[[{'type',3152,'constraint',[{'atom',3152,'is_subtype'}|[[{'var',3152,'This'}|[{'type',3152,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3159
		'spec' =
		    %% Line 3159
		    [{{'setStatus',2},[{'type',3159,'bounded_fun',[{'type',3159,'fun',[{'type',3159,'product',[{'var',3159,'This'}|[{'var',3159,'StatusCode'}]]}|[{'atom',3159,'ok'}]]}|[[{'type',3160,'constraint',[{'atom',3160,'is_subtype'}|[[{'var',3160,'This'}|[{'type',3160,'wxStyledTextCtrl',[]}]]]]}|[{'type',3160,'constraint',[{'atom',3160,'is_subtype'}|[[{'var',3160,'StatusCode'}|[{'type',3160,'integer',[]}]]]]}]]]]}]}],
		%% Line 3168
		'spec' =
		    %% Line 3168
		    [{{'getStatus',1},[{'type',3168,'bounded_fun',[{'type',3168,'fun',[{'type',3168,'product',[{'var',3168,'This'}]}|[{'type',3168,'integer',[]}]]}|[[{'type',3169,'constraint',[{'atom',3169,'is_subtype'}|[[{'var',3169,'This'}|[{'type',3169,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3176
		'spec' =
		    %% Line 3176
		    [{{'setMouseDownCaptures',2},[{'type',3176,'bounded_fun',[{'type',3176,'fun',[{'type',3176,'product',[{'var',3176,'This'}|[{'var',3176,'Captures'}]]}|[{'atom',3176,'ok'}]]}|[[{'type',3177,'constraint',[{'atom',3177,'is_subtype'}|[[{'var',3177,'This'}|[{'type',3177,'wxStyledTextCtrl',[]}]]]]}|[{'type',3177,'constraint',[{'atom',3177,'is_subtype'}|[[{'var',3177,'Captures'}|[{'type',3177,'boolean',[]}]]]]}]]]]}]}],
		%% Line 3185
		'spec' =
		    %% Line 3185
		    [{{'getMouseDownCaptures',1},[{'type',3185,'bounded_fun',[{'type',3185,'fun',[{'type',3185,'product',[{'var',3185,'This'}]}|[{'type',3185,'boolean',[]}]]}|[[{'type',3186,'constraint',[{'atom',3186,'is_subtype'}|[[{'var',3186,'This'}|[{'type',3186,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3193
		'spec' =
		    %% Line 3193
		    [{{'setSTCCursor',2},[{'type',3193,'bounded_fun',[{'type',3193,'fun',[{'type',3193,'product',[{'var',3193,'This'}|[{'var',3193,'CursorType'}]]}|[{'atom',3193,'ok'}]]}|[[{'type',3194,'constraint',[{'atom',3194,'is_subtype'}|[[{'var',3194,'This'}|[{'type',3194,'wxStyledTextCtrl',[]}]]]]}|[{'type',3194,'constraint',[{'atom',3194,'is_subtype'}|[[{'var',3194,'CursorType'}|[{'type',3194,'integer',[]}]]]]}]]]]}]}],
		%% Line 3202
		'spec' =
		    %% Line 3202
		    [{{'getSTCCursor',1},[{'type',3202,'bounded_fun',[{'type',3202,'fun',[{'type',3202,'product',[{'var',3202,'This'}]}|[{'type',3202,'integer',[]}]]}|[[{'type',3203,'constraint',[{'atom',3203,'is_subtype'}|[[{'var',3203,'This'}|[{'type',3203,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3210
		'spec' =
		    %% Line 3210
		    [{{'setControlCharSymbol',2},[{'type',3210,'bounded_fun',[{'type',3210,'fun',[{'type',3210,'product',[{'var',3210,'This'}|[{'var',3210,'Symbol'}]]}|[{'atom',3210,'ok'}]]}|[[{'type',3211,'constraint',[{'atom',3211,'is_subtype'}|[[{'var',3211,'This'}|[{'type',3211,'wxStyledTextCtrl',[]}]]]]}|[{'type',3211,'constraint',[{'atom',3211,'is_subtype'}|[[{'var',3211,'Symbol'}|[{'type',3211,'integer',[]}]]]]}]]]]}]}],
		%% Line 3219
		'spec' =
		    %% Line 3219
		    [{{'getControlCharSymbol',1},[{'type',3219,'bounded_fun',[{'type',3219,'fun',[{'type',3219,'product',[{'var',3219,'This'}]}|[{'type',3219,'integer',[]}]]}|[[{'type',3220,'constraint',[{'atom',3220,'is_subtype'}|[[{'var',3220,'This'}|[{'type',3220,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3227
		'spec' =
		    %% Line 3227
		    [{{'wordPartLeft',1},[{'type',3227,'bounded_fun',[{'type',3227,'fun',[{'type',3227,'product',[{'var',3227,'This'}]}|[{'atom',3227,'ok'}]]}|[[{'type',3228,'constraint',[{'atom',3228,'is_subtype'}|[[{'var',3228,'This'}|[{'type',3228,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3235
		'spec' =
		    %% Line 3235
		    [{{'wordPartLeftExtend',1},[{'type',3235,'bounded_fun',[{'type',3235,'fun',[{'type',3235,'product',[{'var',3235,'This'}]}|[{'atom',3235,'ok'}]]}|[[{'type',3236,'constraint',[{'atom',3236,'is_subtype'}|[[{'var',3236,'This'}|[{'type',3236,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3243
		'spec' =
		    %% Line 3243
		    [{{'wordPartRight',1},[{'type',3243,'bounded_fun',[{'type',3243,'fun',[{'type',3243,'product',[{'var',3243,'This'}]}|[{'atom',3243,'ok'}]]}|[[{'type',3244,'constraint',[{'atom',3244,'is_subtype'}|[[{'var',3244,'This'}|[{'type',3244,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3251
		'spec' =
		    %% Line 3251
		    [{{'wordPartRightExtend',1},[{'type',3251,'bounded_fun',[{'type',3251,'fun',[{'type',3251,'product',[{'var',3251,'This'}]}|[{'atom',3251,'ok'}]]}|[[{'type',3252,'constraint',[{'atom',3252,'is_subtype'}|[[{'var',3252,'This'}|[{'type',3252,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3259
		'spec' =
		    %% Line 3259
		    [{{'setVisiblePolicy',3},[{'type',3259,'bounded_fun',[{'type',3259,'fun',[{'type',3259,'product',[{'var',3259,'This'}|[{'var',3259,'VisiblePolicy'}|[{'var',3259,'VisibleSlop'}]]]}|[{'atom',3259,'ok'}]]}|[[{'type',3260,'constraint',[{'atom',3260,'is_subtype'}|[[{'var',3260,'This'}|[{'type',3260,'wxStyledTextCtrl',[]}]]]]}|[{'type',3260,'constraint',[{'atom',3260,'is_subtype'}|[[{'var',3260,'VisiblePolicy'}|[{'type',3260,'integer',[]}]]]]}|[{'type',3260,'constraint',[{'atom',3260,'is_subtype'}|[[{'var',3260,'VisibleSlop'}|[{'type',3260,'integer',[]}]]]]}]]]]]}]}],
		%% Line 3268
		'spec' =
		    %% Line 3268
		    [{{'delLineLeft',1},[{'type',3268,'bounded_fun',[{'type',3268,'fun',[{'type',3268,'product',[{'var',3268,'This'}]}|[{'atom',3268,'ok'}]]}|[[{'type',3269,'constraint',[{'atom',3269,'is_subtype'}|[[{'var',3269,'This'}|[{'type',3269,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3276
		'spec' =
		    %% Line 3276
		    [{{'delLineRight',1},[{'type',3276,'bounded_fun',[{'type',3276,'fun',[{'type',3276,'product',[{'var',3276,'This'}]}|[{'atom',3276,'ok'}]]}|[[{'type',3277,'constraint',[{'atom',3277,'is_subtype'}|[[{'var',3277,'This'}|[{'type',3277,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3284
		'spec' =
		    %% Line 3284
		    [{{'getXOffset',1},[{'type',3284,'bounded_fun',[{'type',3284,'fun',[{'type',3284,'product',[{'var',3284,'This'}]}|[{'type',3284,'integer',[]}]]}|[[{'type',3285,'constraint',[{'atom',3285,'is_subtype'}|[[{'var',3285,'This'}|[{'type',3285,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3292
		'spec' =
		    %% Line 3292
		    [{{'chooseCaretX',1},[{'type',3292,'bounded_fun',[{'type',3292,'fun',[{'type',3292,'product',[{'var',3292,'This'}]}|[{'atom',3292,'ok'}]]}|[[{'type',3293,'constraint',[{'atom',3293,'is_subtype'}|[[{'var',3293,'This'}|[{'type',3293,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3300
		'spec' =
		    %% Line 3300
		    [{{'setXCaretPolicy',3},[{'type',3300,'bounded_fun',[{'type',3300,'fun',[{'type',3300,'product',[{'var',3300,'This'}|[{'var',3300,'CaretPolicy'}|[{'var',3300,'CaretSlop'}]]]}|[{'atom',3300,'ok'}]]}|[[{'type',3301,'constraint',[{'atom',3301,'is_subtype'}|[[{'var',3301,'This'}|[{'type',3301,'wxStyledTextCtrl',[]}]]]]}|[{'type',3301,'constraint',[{'atom',3301,'is_subtype'}|[[{'var',3301,'CaretPolicy'}|[{'type',3301,'integer',[]}]]]]}|[{'type',3301,'constraint',[{'atom',3301,'is_subtype'}|[[{'var',3301,'CaretSlop'}|[{'type',3301,'integer',[]}]]]]}]]]]]}]}],
		%% Line 3309
		'spec' =
		    %% Line 3309
		    [{{'setYCaretPolicy',3},[{'type',3309,'bounded_fun',[{'type',3309,'fun',[{'type',3309,'product',[{'var',3309,'This'}|[{'var',3309,'CaretPolicy'}|[{'var',3309,'CaretSlop'}]]]}|[{'atom',3309,'ok'}]]}|[[{'type',3310,'constraint',[{'atom',3310,'is_subtype'}|[[{'var',3310,'This'}|[{'type',3310,'wxStyledTextCtrl',[]}]]]]}|[{'type',3310,'constraint',[{'atom',3310,'is_subtype'}|[[{'var',3310,'CaretPolicy'}|[{'type',3310,'integer',[]}]]]]}|[{'type',3310,'constraint',[{'atom',3310,'is_subtype'}|[[{'var',3310,'CaretSlop'}|[{'type',3310,'integer',[]}]]]]}]]]]]}]}],
		%% Line 3318
		'spec' =
		    %% Line 3318
		    [{{'getPrintWrapMode',1},[{'type',3318,'bounded_fun',[{'type',3318,'fun',[{'type',3318,'product',[{'var',3318,'This'}]}|[{'type',3318,'integer',[]}]]}|[[{'type',3319,'constraint',[{'atom',3319,'is_subtype'}|[[{'var',3319,'This'}|[{'type',3319,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3326
		'spec' =
		    %% Line 3326
		    [{{'setHotspotActiveForeground',3},[{'type',3326,'bounded_fun',[{'type',3326,'fun',[{'type',3326,'product',[{'var',3326,'This'}|[{'var',3326,'UseSetting'}|[{'var',3326,'Fore'}]]]}|[{'atom',3326,'ok'}]]}|[[{'type',3327,'constraint',[{'atom',3327,'is_subtype'}|[[{'var',3327,'This'}|[{'type',3327,'wxStyledTextCtrl',[]}]]]]}|[{'type',3327,'constraint',[{'atom',3327,'is_subtype'}|[[{'var',3327,'UseSetting'}|[{'type',3327,'boolean',[]}]]]]}|[{'type',3327,'constraint',[{'atom',3327,'is_subtype'}|[[{'var',3327,'Fore'}|[{'remote_type',3327,[{'atom',3327,'wx'}|[{'atom',3327,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 3335
		'spec' =
		    %% Line 3335
		    [{{'setHotspotActiveBackground',3},[{'type',3335,'bounded_fun',[{'type',3335,'fun',[{'type',3335,'product',[{'var',3335,'This'}|[{'var',3335,'UseSetting'}|[{'var',3335,'Back'}]]]}|[{'atom',3335,'ok'}]]}|[[{'type',3336,'constraint',[{'atom',3336,'is_subtype'}|[[{'var',3336,'This'}|[{'type',3336,'wxStyledTextCtrl',[]}]]]]}|[{'type',3336,'constraint',[{'atom',3336,'is_subtype'}|[[{'var',3336,'UseSetting'}|[{'type',3336,'boolean',[]}]]]]}|[{'type',3336,'constraint',[{'atom',3336,'is_subtype'}|[[{'var',3336,'Back'}|[{'remote_type',3336,[{'atom',3336,'wx'}|[{'atom',3336,'wx_colour'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 3344
		'spec' =
		    %% Line 3344
		    [{{'setHotspotActiveUnderline',2},[{'type',3344,'bounded_fun',[{'type',3344,'fun',[{'type',3344,'product',[{'var',3344,'This'}|[{'var',3344,'Underline'}]]}|[{'atom',3344,'ok'}]]}|[[{'type',3345,'constraint',[{'atom',3345,'is_subtype'}|[[{'var',3345,'This'}|[{'type',3345,'wxStyledTextCtrl',[]}]]]]}|[{'type',3345,'constraint',[{'atom',3345,'is_subtype'}|[[{'var',3345,'Underline'}|[{'type',3345,'boolean',[]}]]]]}]]]]}]}],
		%% Line 3353
		'spec' =
		    %% Line 3353
		    [{{'setHotspotSingleLine',2},[{'type',3353,'bounded_fun',[{'type',3353,'fun',[{'type',3353,'product',[{'var',3353,'This'}|[{'var',3353,'SingleLine'}]]}|[{'atom',3353,'ok'}]]}|[[{'type',3354,'constraint',[{'atom',3354,'is_subtype'}|[[{'var',3354,'This'}|[{'type',3354,'wxStyledTextCtrl',[]}]]]]}|[{'type',3354,'constraint',[{'atom',3354,'is_subtype'}|[[{'var',3354,'SingleLine'}|[{'type',3354,'boolean',[]}]]]]}]]]]}]}],
		%% Line 3362
		'spec' =
		    %% Line 3362
		    [{{'paraDownExtend',1},[{'type',3362,'bounded_fun',[{'type',3362,'fun',[{'type',3362,'product',[{'var',3362,'This'}]}|[{'atom',3362,'ok'}]]}|[[{'type',3363,'constraint',[{'atom',3363,'is_subtype'}|[[{'var',3363,'This'}|[{'type',3363,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3370
		'spec' =
		    %% Line 3370
		    [{{'paraUp',1},[{'type',3370,'bounded_fun',[{'type',3370,'fun',[{'type',3370,'product',[{'var',3370,'This'}]}|[{'atom',3370,'ok'}]]}|[[{'type',3371,'constraint',[{'atom',3371,'is_subtype'}|[[{'var',3371,'This'}|[{'type',3371,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3378
		'spec' =
		    %% Line 3378
		    [{{'paraUpExtend',1},[{'type',3378,'bounded_fun',[{'type',3378,'fun',[{'type',3378,'product',[{'var',3378,'This'}]}|[{'atom',3378,'ok'}]]}|[[{'type',3379,'constraint',[{'atom',3379,'is_subtype'}|[[{'var',3379,'This'}|[{'type',3379,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3386
		'spec' =
		    %% Line 3386
		    [{{'positionBefore',2},[{'type',3386,'bounded_fun',[{'type',3386,'fun',[{'type',3386,'product',[{'var',3386,'This'}|[{'var',3386,'Pos'}]]}|[{'type',3386,'integer',[]}]]}|[[{'type',3387,'constraint',[{'atom',3387,'is_subtype'}|[[{'var',3387,'This'}|[{'type',3387,'wxStyledTextCtrl',[]}]]]]}|[{'type',3387,'constraint',[{'atom',3387,'is_subtype'}|[[{'var',3387,'Pos'}|[{'type',3387,'integer',[]}]]]]}]]]]}]}],
		%% Line 3395
		'spec' =
		    %% Line 3395
		    [{{'positionAfter',2},[{'type',3395,'bounded_fun',[{'type',3395,'fun',[{'type',3395,'product',[{'var',3395,'This'}|[{'var',3395,'Pos'}]]}|[{'type',3395,'integer',[]}]]}|[[{'type',3396,'constraint',[{'atom',3396,'is_subtype'}|[[{'var',3396,'This'}|[{'type',3396,'wxStyledTextCtrl',[]}]]]]}|[{'type',3396,'constraint',[{'atom',3396,'is_subtype'}|[[{'var',3396,'Pos'}|[{'type',3396,'integer',[]}]]]]}]]]]}]}],
		%% Line 3404
		'spec' =
		    %% Line 3404
		    [{{'copyRange',3},[{'type',3404,'bounded_fun',[{'type',3404,'fun',[{'type',3404,'product',[{'var',3404,'This'}|[{'var',3404,'Start'}|[{'var',3404,'End'}]]]}|[{'atom',3404,'ok'}]]}|[[{'type',3405,'constraint',[{'atom',3405,'is_subtype'}|[[{'var',3405,'This'}|[{'type',3405,'wxStyledTextCtrl',[]}]]]]}|[{'type',3405,'constraint',[{'atom',3405,'is_subtype'}|[[{'var',3405,'Start'}|[{'type',3405,'integer',[]}]]]]}|[{'type',3405,'constraint',[{'atom',3405,'is_subtype'}|[[{'var',3405,'End'}|[{'type',3405,'integer',[]}]]]]}]]]]]}]}],
		%% Line 3413
		'spec' =
		    %% Line 3413
		    [{{'copyText',3},[{'type',3413,'bounded_fun',[{'type',3413,'fun',[{'type',3413,'product',[{'var',3413,'This'}|[{'var',3413,'Length'}|[{'var',3413,'Text'}]]]}|[{'atom',3413,'ok'}]]}|[[{'type',3414,'constraint',[{'atom',3414,'is_subtype'}|[[{'var',3414,'This'}|[{'type',3414,'wxStyledTextCtrl',[]}]]]]}|[{'type',3414,'constraint',[{'atom',3414,'is_subtype'}|[[{'var',3414,'Length'}|[{'type',3414,'integer',[]}]]]]}|[{'type',3414,'constraint',[{'atom',3414,'is_subtype'}|[[{'var',3414,'Text'}|[{'remote_type',3414,[{'atom',3414,'unicode'}|[{'atom',3414,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 3423
		'spec' =
		    %% Line 3423
		    [{{'setSelectionMode',2},[{'type',3423,'bounded_fun',[{'type',3423,'fun',[{'type',3423,'product',[{'var',3423,'This'}|[{'var',3423,'Mode'}]]}|[{'atom',3423,'ok'}]]}|[[{'type',3424,'constraint',[{'atom',3424,'is_subtype'}|[[{'var',3424,'This'}|[{'type',3424,'wxStyledTextCtrl',[]}]]]]}|[{'type',3424,'constraint',[{'atom',3424,'is_subtype'}|[[{'var',3424,'Mode'}|[{'type',3424,'integer',[]}]]]]}]]]]}]}],
		%% Line 3432
		'spec' =
		    %% Line 3432
		    [{{'getSelectionMode',1},[{'type',3432,'bounded_fun',[{'type',3432,'fun',[{'type',3432,'product',[{'var',3432,'This'}]}|[{'type',3432,'integer',[]}]]}|[[{'type',3433,'constraint',[{'atom',3433,'is_subtype'}|[[{'var',3433,'This'}|[{'type',3433,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3440
		'spec' =
		    %% Line 3440
		    [{{'lineDownRectExtend',1},[{'type',3440,'bounded_fun',[{'type',3440,'fun',[{'type',3440,'product',[{'var',3440,'This'}]}|[{'atom',3440,'ok'}]]}|[[{'type',3441,'constraint',[{'atom',3441,'is_subtype'}|[[{'var',3441,'This'}|[{'type',3441,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3448
		'spec' =
		    %% Line 3448
		    [{{'lineUpRectExtend',1},[{'type',3448,'bounded_fun',[{'type',3448,'fun',[{'type',3448,'product',[{'var',3448,'This'}]}|[{'atom',3448,'ok'}]]}|[[{'type',3449,'constraint',[{'atom',3449,'is_subtype'}|[[{'var',3449,'This'}|[{'type',3449,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3456
		'spec' =
		    %% Line 3456
		    [{{'charLeftRectExtend',1},[{'type',3456,'bounded_fun',[{'type',3456,'fun',[{'type',3456,'product',[{'var',3456,'This'}]}|[{'atom',3456,'ok'}]]}|[[{'type',3457,'constraint',[{'atom',3457,'is_subtype'}|[[{'var',3457,'This'}|[{'type',3457,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3464
		'spec' =
		    %% Line 3464
		    [{{'charRightRectExtend',1},[{'type',3464,'bounded_fun',[{'type',3464,'fun',[{'type',3464,'product',[{'var',3464,'This'}]}|[{'atom',3464,'ok'}]]}|[[{'type',3465,'constraint',[{'atom',3465,'is_subtype'}|[[{'var',3465,'This'}|[{'type',3465,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3472
		'spec' =
		    %% Line 3472
		    [{{'homeRectExtend',1},[{'type',3472,'bounded_fun',[{'type',3472,'fun',[{'type',3472,'product',[{'var',3472,'This'}]}|[{'atom',3472,'ok'}]]}|[[{'type',3473,'constraint',[{'atom',3473,'is_subtype'}|[[{'var',3473,'This'}|[{'type',3473,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3480
		'spec' =
		    %% Line 3480
		    [{{'vCHomeRectExtend',1},[{'type',3480,'bounded_fun',[{'type',3480,'fun',[{'type',3480,'product',[{'var',3480,'This'}]}|[{'atom',3480,'ok'}]]}|[[{'type',3481,'constraint',[{'atom',3481,'is_subtype'}|[[{'var',3481,'This'}|[{'type',3481,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3488
		'spec' =
		    %% Line 3488
		    [{{'lineEndRectExtend',1},[{'type',3488,'bounded_fun',[{'type',3488,'fun',[{'type',3488,'product',[{'var',3488,'This'}]}|[{'atom',3488,'ok'}]]}|[[{'type',3489,'constraint',[{'atom',3489,'is_subtype'}|[[{'var',3489,'This'}|[{'type',3489,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3496
		'spec' =
		    %% Line 3496
		    [{{'pageUpRectExtend',1},[{'type',3496,'bounded_fun',[{'type',3496,'fun',[{'type',3496,'product',[{'var',3496,'This'}]}|[{'atom',3496,'ok'}]]}|[[{'type',3497,'constraint',[{'atom',3497,'is_subtype'}|[[{'var',3497,'This'}|[{'type',3497,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3504
		'spec' =
		    %% Line 3504
		    [{{'pageDownRectExtend',1},[{'type',3504,'bounded_fun',[{'type',3504,'fun',[{'type',3504,'product',[{'var',3504,'This'}]}|[{'atom',3504,'ok'}]]}|[[{'type',3505,'constraint',[{'atom',3505,'is_subtype'}|[[{'var',3505,'This'}|[{'type',3505,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3512
		'spec' =
		    %% Line 3512
		    [{{'stutteredPageUp',1},[{'type',3512,'bounded_fun',[{'type',3512,'fun',[{'type',3512,'product',[{'var',3512,'This'}]}|[{'atom',3512,'ok'}]]}|[[{'type',3513,'constraint',[{'atom',3513,'is_subtype'}|[[{'var',3513,'This'}|[{'type',3513,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3520
		'spec' =
		    %% Line 3520
		    [{{'stutteredPageUpExtend',1},[{'type',3520,'bounded_fun',[{'type',3520,'fun',[{'type',3520,'product',[{'var',3520,'This'}]}|[{'atom',3520,'ok'}]]}|[[{'type',3521,'constraint',[{'atom',3521,'is_subtype'}|[[{'var',3521,'This'}|[{'type',3521,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3528
		'spec' =
		    %% Line 3528
		    [{{'stutteredPageDown',1},[{'type',3528,'bounded_fun',[{'type',3528,'fun',[{'type',3528,'product',[{'var',3528,'This'}]}|[{'atom',3528,'ok'}]]}|[[{'type',3529,'constraint',[{'atom',3529,'is_subtype'}|[[{'var',3529,'This'}|[{'type',3529,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3536
		'spec' =
		    %% Line 3536
		    [{{'stutteredPageDownExtend',1},[{'type',3536,'bounded_fun',[{'type',3536,'fun',[{'type',3536,'product',[{'var',3536,'This'}]}|[{'atom',3536,'ok'}]]}|[[{'type',3537,'constraint',[{'atom',3537,'is_subtype'}|[[{'var',3537,'This'}|[{'type',3537,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3544
		'spec' =
		    %% Line 3544
		    [{{'wordLeftEnd',1},[{'type',3544,'bounded_fun',[{'type',3544,'fun',[{'type',3544,'product',[{'var',3544,'This'}]}|[{'atom',3544,'ok'}]]}|[[{'type',3545,'constraint',[{'atom',3545,'is_subtype'}|[[{'var',3545,'This'}|[{'type',3545,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3552
		'spec' =
		    %% Line 3552
		    [{{'wordLeftEndExtend',1},[{'type',3552,'bounded_fun',[{'type',3552,'fun',[{'type',3552,'product',[{'var',3552,'This'}]}|[{'atom',3552,'ok'}]]}|[[{'type',3553,'constraint',[{'atom',3553,'is_subtype'}|[[{'var',3553,'This'}|[{'type',3553,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3560
		'spec' =
		    %% Line 3560
		    [{{'wordRightEnd',1},[{'type',3560,'bounded_fun',[{'type',3560,'fun',[{'type',3560,'product',[{'var',3560,'This'}]}|[{'atom',3560,'ok'}]]}|[[{'type',3561,'constraint',[{'atom',3561,'is_subtype'}|[[{'var',3561,'This'}|[{'type',3561,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3568
		'spec' =
		    %% Line 3568
		    [{{'wordRightEndExtend',1},[{'type',3568,'bounded_fun',[{'type',3568,'fun',[{'type',3568,'product',[{'var',3568,'This'}]}|[{'atom',3568,'ok'}]]}|[[{'type',3569,'constraint',[{'atom',3569,'is_subtype'}|[[{'var',3569,'This'}|[{'type',3569,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3576
		'spec' =
		    %% Line 3576
		    [{{'setWhitespaceChars',2},[{'type',3576,'bounded_fun',[{'type',3576,'fun',[{'type',3576,'product',[{'var',3576,'This'}|[{'var',3576,'Characters'}]]}|[{'atom',3576,'ok'}]]}|[[{'type',3577,'constraint',[{'atom',3577,'is_subtype'}|[[{'var',3577,'This'}|[{'type',3577,'wxStyledTextCtrl',[]}]]]]}|[{'type',3577,'constraint',[{'atom',3577,'is_subtype'}|[[{'var',3577,'Characters'}|[{'remote_type',3577,[{'atom',3577,'unicode'}|[{'atom',3577,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 3586
		'spec' =
		    %% Line 3586
		    [{{'setCharsDefault',1},[{'type',3586,'bounded_fun',[{'type',3586,'fun',[{'type',3586,'product',[{'var',3586,'This'}]}|[{'atom',3586,'ok'}]]}|[[{'type',3587,'constraint',[{'atom',3587,'is_subtype'}|[[{'var',3587,'This'}|[{'type',3587,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3594
		'spec' =
		    %% Line 3594
		    [{{'autoCompGetCurrent',1},[{'type',3594,'bounded_fun',[{'type',3594,'fun',[{'type',3594,'product',[{'var',3594,'This'}]}|[{'type',3594,'integer',[]}]]}|[[{'type',3595,'constraint',[{'atom',3595,'is_subtype'}|[[{'var',3595,'This'}|[{'type',3595,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3602
		'spec' =
		    %% Line 3602
		    [{{'allocate',2},[{'type',3602,'bounded_fun',[{'type',3602,'fun',[{'type',3602,'product',[{'var',3602,'This'}|[{'var',3602,'Bytes'}]]}|[{'atom',3602,'ok'}]]}|[[{'type',3603,'constraint',[{'atom',3603,'is_subtype'}|[[{'var',3603,'This'}|[{'type',3603,'wxStyledTextCtrl',[]}]]]]}|[{'type',3603,'constraint',[{'atom',3603,'is_subtype'}|[[{'var',3603,'Bytes'}|[{'type',3603,'integer',[]}]]]]}]]]]}]}],
		%% Line 3611
		'spec' =
		    %% Line 3611
		    [{{'findColumn',3},[{'type',3611,'bounded_fun',[{'type',3611,'fun',[{'type',3611,'product',[{'var',3611,'This'}|[{'var',3611,'Line'}|[{'var',3611,'Column'}]]]}|[{'type',3611,'integer',[]}]]}|[[{'type',3612,'constraint',[{'atom',3612,'is_subtype'}|[[{'var',3612,'This'}|[{'type',3612,'wxStyledTextCtrl',[]}]]]]}|[{'type',3612,'constraint',[{'atom',3612,'is_subtype'}|[[{'var',3612,'Line'}|[{'type',3612,'integer',[]}]]]]}|[{'type',3612,'constraint',[{'atom',3612,'is_subtype'}|[[{'var',3612,'Column'}|[{'type',3612,'integer',[]}]]]]}]]]]]}]}],
		%% Line 3620
		'spec' =
		    %% Line 3620
		    [{{'getCaretSticky',1},[{'type',3620,'bounded_fun',[{'type',3620,'fun',[{'type',3620,'product',[{'var',3620,'This'}]}|[{'type',3620,'boolean',[]}]]}|[[{'type',3621,'constraint',[{'atom',3621,'is_subtype'}|[[{'var',3621,'This'}|[{'type',3621,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3628
		'spec' =
		    %% Line 3628
		    [{{'setCaretSticky',2},[{'type',3628,'bounded_fun',[{'type',3628,'fun',[{'type',3628,'product',[{'var',3628,'This'}|[{'var',3628,'UseCaretStickyBehaviour'}]]}|[{'atom',3628,'ok'}]]}|[[{'type',3629,'constraint',[{'atom',3629,'is_subtype'}|[[{'var',3629,'This'}|[{'type',3629,'wxStyledTextCtrl',[]}]]]]}|[{'type',3629,'constraint',[{'atom',3629,'is_subtype'}|[[{'var',3629,'UseCaretStickyBehaviour'}|[{'type',3629,'boolean',[]}]]]]}]]]]}]}],
		%% Line 3637
		'spec' =
		    %% Line 3637
		    [{{'toggleCaretSticky',1},[{'type',3637,'bounded_fun',[{'type',3637,'fun',[{'type',3637,'product',[{'var',3637,'This'}]}|[{'atom',3637,'ok'}]]}|[[{'type',3638,'constraint',[{'atom',3638,'is_subtype'}|[[{'var',3638,'This'}|[{'type',3638,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3645
		'spec' =
		    %% Line 3645
		    [{{'setPasteConvertEndings',2},[{'type',3645,'bounded_fun',[{'type',3645,'fun',[{'type',3645,'product',[{'var',3645,'This'}|[{'var',3645,'Convert'}]]}|[{'atom',3645,'ok'}]]}|[[{'type',3646,'constraint',[{'atom',3646,'is_subtype'}|[[{'var',3646,'This'}|[{'type',3646,'wxStyledTextCtrl',[]}]]]]}|[{'type',3646,'constraint',[{'atom',3646,'is_subtype'}|[[{'var',3646,'Convert'}|[{'type',3646,'boolean',[]}]]]]}]]]]}]}],
		%% Line 3654
		'spec' =
		    %% Line 3654
		    [{{'getPasteConvertEndings',1},[{'type',3654,'bounded_fun',[{'type',3654,'fun',[{'type',3654,'product',[{'var',3654,'This'}]}|[{'type',3654,'boolean',[]}]]}|[[{'type',3655,'constraint',[{'atom',3655,'is_subtype'}|[[{'var',3655,'This'}|[{'type',3655,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3662
		'spec' =
		    %% Line 3662
		    [{{'selectionDuplicate',1},[{'type',3662,'bounded_fun',[{'type',3662,'fun',[{'type',3662,'product',[{'var',3662,'This'}]}|[{'atom',3662,'ok'}]]}|[[{'type',3663,'constraint',[{'atom',3663,'is_subtype'}|[[{'var',3663,'This'}|[{'type',3663,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3670
		'spec' =
		    %% Line 3670
		    [{{'setCaretLineBackAlpha',2},[{'type',3670,'bounded_fun',[{'type',3670,'fun',[{'type',3670,'product',[{'var',3670,'This'}|[{'var',3670,'Alpha'}]]}|[{'atom',3670,'ok'}]]}|[[{'type',3671,'constraint',[{'atom',3671,'is_subtype'}|[[{'var',3671,'This'}|[{'type',3671,'wxStyledTextCtrl',[]}]]]]}|[{'type',3671,'constraint',[{'atom',3671,'is_subtype'}|[[{'var',3671,'Alpha'}|[{'type',3671,'integer',[]}]]]]}]]]]}]}],
		%% Line 3679
		'spec' =
		    %% Line 3679
		    [{{'getCaretLineBackAlpha',1},[{'type',3679,'bounded_fun',[{'type',3679,'fun',[{'type',3679,'product',[{'var',3679,'This'}]}|[{'type',3679,'integer',[]}]]}|[[{'type',3680,'constraint',[{'atom',3680,'is_subtype'}|[[{'var',3680,'This'}|[{'type',3680,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3687
		'spec' =
		    %% Line 3687
		    [{{'startRecord',1},[{'type',3687,'bounded_fun',[{'type',3687,'fun',[{'type',3687,'product',[{'var',3687,'This'}]}|[{'atom',3687,'ok'}]]}|[[{'type',3688,'constraint',[{'atom',3688,'is_subtype'}|[[{'var',3688,'This'}|[{'type',3688,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3695
		'spec' =
		    %% Line 3695
		    [{{'stopRecord',1},[{'type',3695,'bounded_fun',[{'type',3695,'fun',[{'type',3695,'product',[{'var',3695,'This'}]}|[{'atom',3695,'ok'}]]}|[[{'type',3696,'constraint',[{'atom',3696,'is_subtype'}|[[{'var',3696,'This'}|[{'type',3696,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3703
		'spec' =
		    %% Line 3703
		    [{{'setLexer',2},[{'type',3703,'bounded_fun',[{'type',3703,'fun',[{'type',3703,'product',[{'var',3703,'This'}|[{'var',3703,'Lexer'}]]}|[{'atom',3703,'ok'}]]}|[[{'type',3704,'constraint',[{'atom',3704,'is_subtype'}|[[{'var',3704,'This'}|[{'type',3704,'wxStyledTextCtrl',[]}]]]]}|[{'type',3704,'constraint',[{'atom',3704,'is_subtype'}|[[{'var',3704,'Lexer'}|[{'type',3704,'integer',[]}]]]]}]]]]}]}],
		%% Line 3712
		'spec' =
		    %% Line 3712
		    [{{'getLexer',1},[{'type',3712,'bounded_fun',[{'type',3712,'fun',[{'type',3712,'product',[{'var',3712,'This'}]}|[{'type',3712,'integer',[]}]]}|[[{'type',3713,'constraint',[{'atom',3713,'is_subtype'}|[[{'var',3713,'This'}|[{'type',3713,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3720
		'spec' =
		    %% Line 3720
		    [{{'colourise',3},[{'type',3720,'bounded_fun',[{'type',3720,'fun',[{'type',3720,'product',[{'var',3720,'This'}|[{'var',3720,'Start'}|[{'var',3720,'End'}]]]}|[{'atom',3720,'ok'}]]}|[[{'type',3721,'constraint',[{'atom',3721,'is_subtype'}|[[{'var',3721,'This'}|[{'type',3721,'wxStyledTextCtrl',[]}]]]]}|[{'type',3721,'constraint',[{'atom',3721,'is_subtype'}|[[{'var',3721,'Start'}|[{'type',3721,'integer',[]}]]]]}|[{'type',3721,'constraint',[{'atom',3721,'is_subtype'}|[[{'var',3721,'End'}|[{'type',3721,'integer',[]}]]]]}]]]]]}]}],
		%% Line 3729
		'spec' =
		    %% Line 3729
		    [{{'setProperty',3},[{'type',3729,'bounded_fun',[{'type',3729,'fun',[{'type',3729,'product',[{'var',3729,'This'}|[{'var',3729,'Key'}|[{'var',3729,'Value'}]]]}|[{'atom',3729,'ok'}]]}|[[{'type',3730,'constraint',[{'atom',3730,'is_subtype'}|[[{'var',3730,'This'}|[{'type',3730,'wxStyledTextCtrl',[]}]]]]}|[{'type',3730,'constraint',[{'atom',3730,'is_subtype'}|[[{'var',3730,'Key'}|[{'remote_type',3730,[{'atom',3730,'unicode'}|[{'atom',3730,'chardata'}|[[]]]]}]]]]}|[{'type',3730,'constraint',[{'atom',3730,'is_subtype'}|[[{'var',3730,'Value'}|[{'remote_type',3730,[{'atom',3730,'unicode'}|[{'atom',3730,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 3740
		'spec' =
		    %% Line 3740
		    [{{'setKeyWords',3},[{'type',3740,'bounded_fun',[{'type',3740,'fun',[{'type',3740,'product',[{'var',3740,'This'}|[{'var',3740,'KeywordSet'}|[{'var',3740,'KeyWords'}]]]}|[{'atom',3740,'ok'}]]}|[[{'type',3741,'constraint',[{'atom',3741,'is_subtype'}|[[{'var',3741,'This'}|[{'type',3741,'wxStyledTextCtrl',[]}]]]]}|[{'type',3741,'constraint',[{'atom',3741,'is_subtype'}|[[{'var',3741,'KeywordSet'}|[{'type',3741,'integer',[]}]]]]}|[{'type',3741,'constraint',[{'atom',3741,'is_subtype'}|[[{'var',3741,'KeyWords'}|[{'remote_type',3741,[{'atom',3741,'unicode'}|[{'atom',3741,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 3750
		'spec' =
		    %% Line 3750
		    [{{'setLexerLanguage',2},[{'type',3750,'bounded_fun',[{'type',3750,'fun',[{'type',3750,'product',[{'var',3750,'This'}|[{'var',3750,'Language'}]]}|[{'atom',3750,'ok'}]]}|[[{'type',3751,'constraint',[{'atom',3751,'is_subtype'}|[[{'var',3751,'This'}|[{'type',3751,'wxStyledTextCtrl',[]}]]]]}|[{'type',3751,'constraint',[{'atom',3751,'is_subtype'}|[[{'var',3751,'Language'}|[{'remote_type',3751,[{'atom',3751,'unicode'}|[{'atom',3751,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 3760
		'spec' =
		    %% Line 3760
		    [{{'getProperty',2},[{'type',3760,'bounded_fun',[{'type',3760,'fun',[{'type',3760,'product',[{'var',3760,'This'}|[{'var',3760,'Key'}]]}|[{'remote_type',3760,[{'atom',3760,'unicode'}|[{'atom',3760,'charlist'}|[[]]]]}]]}|[[{'type',3761,'constraint',[{'atom',3761,'is_subtype'}|[[{'var',3761,'This'}|[{'type',3761,'wxStyledTextCtrl',[]}]]]]}|[{'type',3761,'constraint',[{'atom',3761,'is_subtype'}|[[{'var',3761,'Key'}|[{'remote_type',3761,[{'atom',3761,'unicode'}|[{'atom',3761,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 3770
		'spec' =
		    %% Line 3770
		    [{{'getStyleBitsNeeded',1},[{'type',3770,'bounded_fun',[{'type',3770,'fun',[{'type',3770,'product',[{'var',3770,'This'}]}|[{'type',3770,'integer',[]}]]}|[[{'type',3771,'constraint',[{'atom',3771,'is_subtype'}|[[{'var',3771,'This'}|[{'type',3771,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3778
		'spec' =
		    %% Line 3778
		    [{{'getCurrentLine',1},[{'type',3778,'bounded_fun',[{'type',3778,'fun',[{'type',3778,'product',[{'var',3778,'This'}]}|[{'type',3778,'integer',[]}]]}|[[{'type',3779,'constraint',[{'atom',3779,'is_subtype'}|[[{'var',3779,'This'}|[{'type',3779,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3786
		'spec' =
		    %% Line 3786
		    [{{'styleSetSpec',3},[{'type',3786,'bounded_fun',[{'type',3786,'fun',[{'type',3786,'product',[{'var',3786,'This'}|[{'var',3786,'StyleNum'}|[{'var',3786,'Spec'}]]]}|[{'atom',3786,'ok'}]]}|[[{'type',3787,'constraint',[{'atom',3787,'is_subtype'}|[[{'var',3787,'This'}|[{'type',3787,'wxStyledTextCtrl',[]}]]]]}|[{'type',3787,'constraint',[{'atom',3787,'is_subtype'}|[[{'var',3787,'StyleNum'}|[{'type',3787,'integer',[]}]]]]}|[{'type',3787,'constraint',[{'atom',3787,'is_subtype'}|[[{'var',3787,'Spec'}|[{'remote_type',3787,[{'atom',3787,'unicode'}|[{'atom',3787,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 3796
		'spec' =
		    %% Line 3796
		    [{{'styleSetFont',3},[{'type',3796,'bounded_fun',[{'type',3796,'fun',[{'type',3796,'product',[{'var',3796,'This'}|[{'var',3796,'StyleNum'}|[{'var',3796,'Font'}]]]}|[{'atom',3796,'ok'}]]}|[[{'type',3797,'constraint',[{'atom',3797,'is_subtype'}|[[{'var',3797,'This'}|[{'type',3797,'wxStyledTextCtrl',[]}]]]]}|[{'type',3797,'constraint',[{'atom',3797,'is_subtype'}|[[{'var',3797,'StyleNum'}|[{'type',3797,'integer',[]}]]]]}|[{'type',3797,'constraint',[{'atom',3797,'is_subtype'}|[[{'var',3797,'Font'}|[{'remote_type',3797,[{'atom',3797,'wxFont'}|[{'atom',3797,'wxFont'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 3806
		'spec' =
		    %% Line 3806
		    [{{'styleSetFontAttr',7},[{'type',3806,'bounded_fun',[{'type',3806,'fun',[{'type',3806,'product',[{'var',3806,'This'}|[{'var',3806,'StyleNum'}|[{'var',3806,'Size'}|[{'var',3806,'FaceName'}|[{'var',3806,'Bold'}|[{'var',3806,'Italic'}|[{'var',3806,'Underline'}]]]]]]]}|[{'atom',3806,'ok'}]]}|[[{'type',3807,'constraint',[{'atom',3807,'is_subtype'}|[[{'var',3807,'This'}|[{'type',3807,'wxStyledTextCtrl',[]}]]]]}|[{'type',3807,'constraint',[{'atom',3807,'is_subtype'}|[[{'var',3807,'StyleNum'}|[{'type',3807,'integer',[]}]]]]}|[{'type',3807,'constraint',[{'atom',3807,'is_subtype'}|[[{'var',3807,'Size'}|[{'type',3807,'integer',[]}]]]]}|[{'type',3807,'constraint',[{'atom',3807,'is_subtype'}|[[{'var',3807,'FaceName'}|[{'remote_type',3807,[{'atom',3807,'unicode'}|[{'atom',3807,'chardata'}|[[]]]]}]]]]}|[{'type',3807,'constraint',[{'atom',3807,'is_subtype'}|[[{'var',3807,'Bold'}|[{'type',3807,'boolean',[]}]]]]}|[{'type',3807,'constraint',[{'atom',3807,'is_subtype'}|[[{'var',3807,'Italic'}|[{'type',3807,'boolean',[]}]]]]}|[{'type',3807,'constraint',[{'atom',3807,'is_subtype'}|[[{'var',3807,'Underline'}|[{'type',3807,'boolean',[]}]]]]}]]]]]]]]]}]}],
		%% Line 3815
		'spec' =
		    %% Line 3815
		    [{{'styleSetFontAttr',8},[{'type',3815,'bounded_fun',[{'type',3815,'fun',[{'type',3815,'product',[{'var',3815,'This'}|[{'var',3815,'StyleNum'}|[{'var',3815,'Size'}|[{'var',3815,'FaceName'}|[{'var',3815,'Bold'}|[{'var',3815,'Italic'}|[{'var',3815,'Underline'}|[{'type',3815,'list',[{'var',3815,'Option'}]}]]]]]]]]}|[{'atom',3815,'ok'}]]}|[[{'type',3816,'constraint',[{'atom',3816,'is_subtype'}|[[{'var',3816,'This'}|[{'type',3816,'wxStyledTextCtrl',[]}]]]]}|[{'type',3816,'constraint',[{'atom',3816,'is_subtype'}|[[{'var',3816,'StyleNum'}|[{'type',3816,'integer',[]}]]]]}|[{'type',3816,'constraint',[{'atom',3816,'is_subtype'}|[[{'var',3816,'Size'}|[{'type',3816,'integer',[]}]]]]}|[{'type',3816,'constraint',[{'atom',3816,'is_subtype'}|[[{'var',3816,'FaceName'}|[{'remote_type',3816,[{'atom',3816,'unicode'}|[{'atom',3816,'chardata'}|[[]]]]}]]]]}|[{'type',3816,'constraint',[{'atom',3816,'is_subtype'}|[[{'var',3816,'Bold'}|[{'type',3816,'boolean',[]}]]]]}|[{'type',3816,'constraint',[{'atom',3816,'is_subtype'}|[[{'var',3816,'Italic'}|[{'type',3816,'boolean',[]}]]]]}|[{'type',3816,'constraint',[{'atom',3816,'is_subtype'}|[[{'var',3816,'Underline'}|[{'type',3816,'boolean',[]}]]]]}|[{'type',3817,'constraint',[{'atom',3817,'is_subtype'}|[[{'var',3817,'Option'}|[{'type',3817,'tuple',[{'atom',3817,'encoding'}|[{'remote_type',3817,[{'atom',3817,'wx'}|[{'atom',3817,'wx_enum'}|[[]]]]}]]}]]]]}]]]]]]]]]]}]}],
		%% Line 3829
		'spec' =
		    %% Line 3829
		    [{{'styleSetCharacterSet',3},[{'type',3829,'bounded_fun',[{'type',3829,'fun',[{'type',3829,'product',[{'var',3829,'This'}|[{'var',3829,'Style'}|[{'var',3829,'CharacterSet'}]]]}|[{'atom',3829,'ok'}]]}|[[{'type',3830,'constraint',[{'atom',3830,'is_subtype'}|[[{'var',3830,'This'}|[{'type',3830,'wxStyledTextCtrl',[]}]]]]}|[{'type',3830,'constraint',[{'atom',3830,'is_subtype'}|[[{'var',3830,'Style'}|[{'type',3830,'integer',[]}]]]]}|[{'type',3830,'constraint',[{'atom',3830,'is_subtype'}|[[{'var',3830,'CharacterSet'}|[{'type',3830,'integer',[]}]]]]}]]]]]}]}],
		%% Line 3839
		'spec' =
		    %% Line 3839
		    [{{'styleSetFontEncoding',3},[{'type',3839,'bounded_fun',[{'type',3839,'fun',[{'type',3839,'product',[{'var',3839,'This'}|[{'var',3839,'Style'}|[{'var',3839,'Encoding'}]]]}|[{'atom',3839,'ok'}]]}|[[{'type',3840,'constraint',[{'atom',3840,'is_subtype'}|[[{'var',3840,'This'}|[{'type',3840,'wxStyledTextCtrl',[]}]]]]}|[{'type',3840,'constraint',[{'atom',3840,'is_subtype'}|[[{'var',3840,'Style'}|[{'type',3840,'integer',[]}]]]]}|[{'type',3840,'constraint',[{'atom',3840,'is_subtype'}|[[{'var',3840,'Encoding'}|[{'remote_type',3840,[{'atom',3840,'wx'}|[{'atom',3840,'wx_enum'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 3848
		'spec' =
		    %% Line 3848
		    [{{'cmdKeyExecute',2},[{'type',3848,'bounded_fun',[{'type',3848,'fun',[{'type',3848,'product',[{'var',3848,'This'}|[{'var',3848,'Cmd'}]]}|[{'atom',3848,'ok'}]]}|[[{'type',3849,'constraint',[{'atom',3849,'is_subtype'}|[[{'var',3849,'This'}|[{'type',3849,'wxStyledTextCtrl',[]}]]]]}|[{'type',3849,'constraint',[{'atom',3849,'is_subtype'}|[[{'var',3849,'Cmd'}|[{'type',3849,'integer',[]}]]]]}]]]]}]}],
		%% Line 3857
		'spec' =
		    %% Line 3857
		    [{{'setMargins',3},[{'type',3857,'bounded_fun',[{'type',3857,'fun',[{'type',3857,'product',[{'var',3857,'This'}|[{'var',3857,'Left'}|[{'var',3857,'Right'}]]]}|[{'atom',3857,'ok'}]]}|[[{'type',3858,'constraint',[{'atom',3858,'is_subtype'}|[[{'var',3858,'This'}|[{'type',3858,'wxStyledTextCtrl',[]}]]]]}|[{'type',3858,'constraint',[{'atom',3858,'is_subtype'}|[[{'var',3858,'Left'}|[{'type',3858,'integer',[]}]]]]}|[{'type',3858,'constraint',[{'atom',3858,'is_subtype'}|[[{'var',3858,'Right'}|[{'type',3858,'integer',[]}]]]]}]]]]]}]}],
		%% Line 3866
		'spec' =
		    %% Line 3866
		    [{{'getSelection',1},[{'type',3866,'bounded_fun',[{'type',3866,'fun',[{'type',3866,'product',[{'var',3866,'This'}]}|[{'type',3866,'tuple',[{'ann_type',3866,[{'var',3866,'StartPos'}|[{'type',3866,'integer',[]}]]}|[{'ann_type',3866,[{'var',3866,'EndPos'}|[{'type',3866,'integer',[]}]]}]]}]]}|[[{'type',3867,'constraint',[{'atom',3867,'is_subtype'}|[[{'var',3867,'This'}|[{'type',3867,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3874
		'spec' =
		    %% Line 3874
		    [{{'pointFromPosition',2},[{'type',3874,'bounded_fun',[{'type',3874,'fun',[{'type',3874,'product',[{'var',3874,'This'}|[{'var',3874,'Pos'}]]}|[{'type',3874,'tuple',[{'ann_type',3874,[{'var',3874,'X'}|[{'type',3874,'integer',[]}]]}|[{'ann_type',3874,[{'var',3874,'Y'}|[{'type',3874,'integer',[]}]]}]]}]]}|[[{'type',3875,'constraint',[{'atom',3875,'is_subtype'}|[[{'var',3875,'This'}|[{'type',3875,'wxStyledTextCtrl',[]}]]]]}|[{'type',3875,'constraint',[{'atom',3875,'is_subtype'}|[[{'var',3875,'Pos'}|[{'type',3875,'integer',[]}]]]]}]]]]}]}],
		%% Line 3883
		'spec' =
		    %% Line 3883
		    [{{'scrollToLine',2},[{'type',3883,'bounded_fun',[{'type',3883,'fun',[{'type',3883,'product',[{'var',3883,'This'}|[{'var',3883,'Line'}]]}|[{'atom',3883,'ok'}]]}|[[{'type',3884,'constraint',[{'atom',3884,'is_subtype'}|[[{'var',3884,'This'}|[{'type',3884,'wxStyledTextCtrl',[]}]]]]}|[{'type',3884,'constraint',[{'atom',3884,'is_subtype'}|[[{'var',3884,'Line'}|[{'type',3884,'integer',[]}]]]]}]]]]}]}],
		%% Line 3892
		'spec' =
		    %% Line 3892
		    [{{'scrollToColumn',2},[{'type',3892,'bounded_fun',[{'type',3892,'fun',[{'type',3892,'product',[{'var',3892,'This'}|[{'var',3892,'Column'}]]}|[{'atom',3892,'ok'}]]}|[[{'type',3893,'constraint',[{'atom',3893,'is_subtype'}|[[{'var',3893,'This'}|[{'type',3893,'wxStyledTextCtrl',[]}]]]]}|[{'type',3893,'constraint',[{'atom',3893,'is_subtype'}|[[{'var',3893,'Column'}|[{'type',3893,'integer',[]}]]]]}]]]]}]}],
		%% Line 3901
		'spec' =
		    %% Line 3901
		    [{{'setVScrollBar',2},[{'type',3901,'bounded_fun',[{'type',3901,'fun',[{'type',3901,'product',[{'var',3901,'This'}|[{'var',3901,'Bar'}]]}|[{'atom',3901,'ok'}]]}|[[{'type',3902,'constraint',[{'atom',3902,'is_subtype'}|[[{'var',3902,'This'}|[{'type',3902,'wxStyledTextCtrl',[]}]]]]}|[{'type',3902,'constraint',[{'atom',3902,'is_subtype'}|[[{'var',3902,'Bar'}|[{'remote_type',3902,[{'atom',3902,'wxScrollBar'}|[{'atom',3902,'wxScrollBar'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 3910
		'spec' =
		    %% Line 3910
		    [{{'setHScrollBar',2},[{'type',3910,'bounded_fun',[{'type',3910,'fun',[{'type',3910,'product',[{'var',3910,'This'}|[{'var',3910,'Bar'}]]}|[{'atom',3910,'ok'}]]}|[[{'type',3911,'constraint',[{'atom',3911,'is_subtype'}|[[{'var',3911,'This'}|[{'type',3911,'wxStyledTextCtrl',[]}]]]]}|[{'type',3911,'constraint',[{'atom',3911,'is_subtype'}|[[{'var',3911,'Bar'}|[{'remote_type',3911,[{'atom',3911,'wxScrollBar'}|[{'atom',3911,'wxScrollBar'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 3919
		'spec' =
		    %% Line 3919
		    [{{'getLastKeydownProcessed',1},[{'type',3919,'bounded_fun',[{'type',3919,'fun',[{'type',3919,'product',[{'var',3919,'This'}]}|[{'type',3919,'boolean',[]}]]}|[[{'type',3920,'constraint',[{'atom',3920,'is_subtype'}|[[{'var',3920,'This'}|[{'type',3920,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3927
		'spec' =
		    %% Line 3927
		    [{{'setLastKeydownProcessed',2},[{'type',3927,'bounded_fun',[{'type',3927,'fun',[{'type',3927,'product',[{'var',3927,'This'}|[{'var',3927,'Val'}]]}|[{'atom',3927,'ok'}]]}|[[{'type',3928,'constraint',[{'atom',3928,'is_subtype'}|[[{'var',3928,'This'}|[{'type',3928,'wxStyledTextCtrl',[]}]]]]}|[{'type',3928,'constraint',[{'atom',3928,'is_subtype'}|[[{'var',3928,'Val'}|[{'type',3928,'boolean',[]}]]]]}]]]]}]}],
		%% Line 3936
		'spec' =
		    %% Line 3936
		    [{{'saveFile',2},[{'type',3936,'bounded_fun',[{'type',3936,'fun',[{'type',3936,'product',[{'var',3936,'This'}|[{'var',3936,'Filename'}]]}|[{'type',3936,'boolean',[]}]]}|[[{'type',3937,'constraint',[{'atom',3937,'is_subtype'}|[[{'var',3937,'This'}|[{'type',3937,'wxStyledTextCtrl',[]}]]]]}|[{'type',3937,'constraint',[{'atom',3937,'is_subtype'}|[[{'var',3937,'Filename'}|[{'remote_type',3937,[{'atom',3937,'unicode'}|[{'atom',3937,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 3946
		'spec' =
		    %% Line 3946
		    [{{'loadFile',2},[{'type',3946,'bounded_fun',[{'type',3946,'fun',[{'type',3946,'product',[{'var',3946,'This'}|[{'var',3946,'Filename'}]]}|[{'type',3946,'boolean',[]}]]}|[[{'type',3947,'constraint',[{'atom',3947,'is_subtype'}|[[{'var',3947,'This'}|[{'type',3947,'wxStyledTextCtrl',[]}]]]]}|[{'type',3947,'constraint',[{'atom',3947,'is_subtype'}|[[{'var',3947,'Filename'}|[{'remote_type',3947,[{'atom',3947,'unicode'}|[{'atom',3947,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 3958
		'spec' =
		    %% Line 3958
		    [{{'doDragOver',4},[{'type',3958,'bounded_fun',[{'type',3958,'fun',[{'type',3958,'product',[{'var',3958,'This'}|[{'var',3958,'X'}|[{'var',3958,'Y'}|[{'var',3958,'Def'}]]]]}|[{'remote_type',3958,[{'atom',3958,'wx'}|[{'atom',3958,'wx_enum'}|[[]]]]}]]}|[[{'type',3959,'constraint',[{'atom',3959,'is_subtype'}|[[{'var',3959,'This'}|[{'type',3959,'wxStyledTextCtrl',[]}]]]]}|[{'type',3959,'constraint',[{'atom',3959,'is_subtype'}|[[{'var',3959,'X'}|[{'type',3959,'integer',[]}]]]]}|[{'type',3959,'constraint',[{'atom',3959,'is_subtype'}|[[{'var',3959,'Y'}|[{'type',3959,'integer',[]}]]]]}|[{'type',3959,'constraint',[{'atom',3959,'is_subtype'}|[[{'var',3959,'Def'}|[{'remote_type',3959,[{'atom',3959,'wx'}|[{'atom',3959,'wx_enum'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 3967
		'spec' =
		    %% Line 3967
		    [{{'doDropText',4},[{'type',3967,'bounded_fun',[{'type',3967,'fun',[{'type',3967,'product',[{'var',3967,'This'}|[{'var',3967,'X'}|[{'var',3967,'Y'}|[{'var',3967,'Data'}]]]]}|[{'type',3967,'boolean',[]}]]}|[[{'type',3968,'constraint',[{'atom',3968,'is_subtype'}|[[{'var',3968,'This'}|[{'type',3968,'wxStyledTextCtrl',[]}]]]]}|[{'type',3968,'constraint',[{'atom',3968,'is_subtype'}|[[{'var',3968,'X'}|[{'type',3968,'integer',[]}]]]]}|[{'type',3968,'constraint',[{'atom',3968,'is_subtype'}|[[{'var',3968,'Y'}|[{'type',3968,'integer',[]}]]]]}|[{'type',3968,'constraint',[{'atom',3968,'is_subtype'}|[[{'var',3968,'Data'}|[{'remote_type',3968,[{'atom',3968,'unicode'}|[{'atom',3968,'chardata'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 3977
		'spec' =
		    %% Line 3977
		    [{{'getUseAntiAliasing',1},[{'type',3977,'bounded_fun',[{'type',3977,'fun',[{'type',3977,'product',[{'var',3977,'This'}]}|[{'type',3977,'boolean',[]}]]}|[[{'type',3978,'constraint',[{'atom',3978,'is_subtype'}|[[{'var',3978,'This'}|[{'type',3978,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 3985
		'spec' =
		    %% Line 3985
		    [{{'addTextRaw',2},[{'type',3985,'bounded_fun',[{'type',3985,'fun',[{'type',3985,'product',[{'var',3985,'This'}|[{'var',3985,'Text'}]]}|[{'atom',3985,'ok'}]]}|[[{'type',3986,'constraint',[{'atom',3986,'is_subtype'}|[[{'var',3986,'This'}|[{'type',3986,'wxStyledTextCtrl',[]}]]]]}|[{'type',3986,'constraint',[{'atom',3986,'is_subtype'}|[[{'var',3986,'Text'}|[{'type',3986,'binary',[]}]]]]}]]]]}]}],
		%% Line 3995
		'spec' =
		    %% Line 3995
		    [{{'insertTextRaw',3},[{'type',3995,'bounded_fun',[{'type',3995,'fun',[{'type',3995,'product',[{'var',3995,'This'}|[{'var',3995,'Pos'}|[{'var',3995,'Text'}]]]}|[{'atom',3995,'ok'}]]}|[[{'type',3996,'constraint',[{'atom',3996,'is_subtype'}|[[{'var',3996,'This'}|[{'type',3996,'wxStyledTextCtrl',[]}]]]]}|[{'type',3996,'constraint',[{'atom',3996,'is_subtype'}|[[{'var',3996,'Pos'}|[{'type',3996,'integer',[]}]]]]}|[{'type',3996,'constraint',[{'atom',3996,'is_subtype'}|[[{'var',3996,'Text'}|[{'type',3996,'binary',[]}]]]]}]]]]]}]}],
		%% Line 4005
		'spec' =
		    %% Line 4005
		    [{{'getCurLineRaw',1},[{'type',4005,'bounded_fun',[{'type',4005,'fun',[{'type',4005,'product',[{'var',4005,'This'}]}|[{'var',4005,'Result'}]]}|[[{'type',4006,'constraint',[{'atom',4006,'is_subtype'}|[[{'var',4006,'Result'}|[{'type',4006,'tuple',[{'ann_type',4006,[{'var',4006,'Res'}|[{'type',4006,'binary',[]}]]}|[{'ann_type',4006,[{'var',4006,'LinePos'}|[{'type',4006,'integer',[]}]]}]]}]]]]}|[{'type',4007,'constraint',[{'atom',4007,'is_subtype'}|[[{'var',4007,'This'}|[{'type',4007,'wxStyledTextCtrl',[]}]]]]}]]]]}]}],
		%% Line 4014
		'spec' =
		    %% Line 4014
		    [{{'getLineRaw',2},[{'type',4014,'bounded_fun',[{'type',4014,'fun',[{'type',4014,'product',[{'var',4014,'This'}|[{'var',4014,'Line'}]]}|[{'type',4014,'binary',[]}]]}|[[{'type',4015,'constraint',[{'atom',4015,'is_subtype'}|[[{'var',4015,'This'}|[{'type',4015,'wxStyledTextCtrl',[]}]]]]}|[{'type',4015,'constraint',[{'atom',4015,'is_subtype'}|[[{'var',4015,'Line'}|[{'type',4015,'integer',[]}]]]]}]]]]}]}],
		%% Line 4023
		'spec' =
		    %% Line 4023
		    [{{'getSelectedTextRaw',1},[{'type',4023,'bounded_fun',[{'type',4023,'fun',[{'type',4023,'product',[{'var',4023,'This'}]}|[{'type',4023,'binary',[]}]]}|[[{'type',4024,'constraint',[{'atom',4024,'is_subtype'}|[[{'var',4024,'This'}|[{'type',4024,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 4031
		'spec' =
		    %% Line 4031
		    [{{'getTextRangeRaw',3},[{'type',4031,'bounded_fun',[{'type',4031,'fun',[{'type',4031,'product',[{'var',4031,'This'}|[{'var',4031,'StartPos'}|[{'var',4031,'EndPos'}]]]}|[{'type',4031,'binary',[]}]]}|[[{'type',4032,'constraint',[{'atom',4032,'is_subtype'}|[[{'var',4032,'This'}|[{'type',4032,'wxStyledTextCtrl',[]}]]]]}|[{'type',4032,'constraint',[{'atom',4032,'is_subtype'}|[[{'var',4032,'StartPos'}|[{'type',4032,'integer',[]}]]]]}|[{'type',4032,'constraint',[{'atom',4032,'is_subtype'}|[[{'var',4032,'EndPos'}|[{'type',4032,'integer',[]}]]]]}]]]]]}]}],
		%% Line 4040
		'spec' =
		    %% Line 4040
		    [{{'setTextRaw',2},[{'type',4040,'bounded_fun',[{'type',4040,'fun',[{'type',4040,'product',[{'var',4040,'This'}|[{'var',4040,'Text'}]]}|[{'atom',4040,'ok'}]]}|[[{'type',4041,'constraint',[{'atom',4041,'is_subtype'}|[[{'var',4041,'This'}|[{'type',4041,'wxStyledTextCtrl',[]}]]]]}|[{'type',4041,'constraint',[{'atom',4041,'is_subtype'}|[[{'var',4041,'Text'}|[{'type',4041,'binary',[]}]]]]}]]]]}]}],
		%% Line 4050
		'spec' =
		    %% Line 4050
		    [{{'getTextRaw',1},[{'type',4050,'bounded_fun',[{'type',4050,'fun',[{'type',4050,'product',[{'var',4050,'This'}]}|[{'type',4050,'binary',[]}]]}|[[{'type',4051,'constraint',[{'atom',4051,'is_subtype'}|[[{'var',4051,'This'}|[{'type',4051,'wxStyledTextCtrl',[]}]]]]}]]]}]}],
		%% Line 4058
		'spec' =
		    %% Line 4058
		    [{{'appendTextRaw',2},[{'type',4058,'bounded_fun',[{'type',4058,'fun',[{'type',4058,'product',[{'var',4058,'This'}|[{'var',4058,'Text'}]]}|[{'atom',4058,'ok'}]]}|[[{'type',4059,'constraint',[{'atom',4059,'is_subtype'}|[[{'var',4059,'This'}|[{'type',4059,'wxStyledTextCtrl',[]}]]]]}|[{'type',4059,'constraint',[{'atom',4059,'is_subtype'}|[[{'var',4059,'Text'}|[{'type',4059,'binary',[]}]]]]}]]]]}]}],
		%% Line 4068
		'spec' =
		    %% Line 4068
		    [{{'destroy',1},[{'type',4068,'fun',[{'type',4068,'product',[{'ann_type',4068,[{'var',4068,'This'}|[{'type',4068,'wxStyledTextCtrl',[]}]]}]}|[{'atom',4068,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 176
    fun (_cor0) ->
	case _cor0 of
	  <'wxControl'> when 'true' ->
	      'true'
	  %% Line 177
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 178
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 179
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxStyledTextCtrl'})
	end
'new'/0 =
    %% Line 184
    fun () ->
	%% Line 185
	call 'wxe_util':'construct'
	    (2953, %% Line 186
		   #{}#)
'new'/1 =
    %% Line 192
    fun (_cor0) ->
	case _cor0 of
	  <Parent = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 193
						       ( 'true'
							 -| ['compiler_generated'] ) ->
	      %% Line 194
	      apply 'new'/2
		  (Parent, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'new'/2 =
    %% Line 203
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor18},Options>
	      when %% Line 204
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 205
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 206
		      ( fun (_cor9,_cor8) ->
			    case <_cor9,_cor8> of
			      <{'id',Id},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<Id>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 207
			      <{'pos',{PosX,PosY}},Acc> when 'true' ->
				  let <_cor5> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<PosX>(32,1,'integer',['unsigned'|['native']]),
					#<PosY>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor5|Acc]
			      %% Line 208
			      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				  let <_cor6> =
				      #{#<3>(32,1,'integer',['unsigned'|['native']]),
					#<SizeW>(32,1,'integer',['unsigned'|['native']]),
					#<SizeH>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor6|Acc]
			      %% Line 209
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor7> =
				      #{#<4>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor7|Acc]
			      %% Line 210
			      <BadOpt,_cor19> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/2-fun-0-'}}] )
		  in  let <_cor13> =
			  %% Line 211
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 211
			      call 'erlang':'list_to_binary'
				  (_cor13)
			  in  let <_cor15> =
				  %% Line 213
				  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 212
				  call 'wxe_util':'construct'
				      (2952, _cor15)
	  ( <_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'create'/2 =
    %% Line 219
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <This = {'wx_ref',_cor4,_cor5,_cor6},Parent = {'wx_ref',_cor7,_cor8,_cor9}> when 'true' ->
	      %% Line 221
	      apply 'create'/3
		  (This, Parent, [])
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'create',2}}] )
	    -| ['compiler_generated'] )
	end
'create'/3 =
    %% Line 230
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor22},{'wx_ref',ParentRef,ParentT,_cor23},Options>
	      when %% Line 231
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 232
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 233
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <MOpts> =
			  %% Line 234
			  ( fun (_cor12,_cor11) ->
				case <_cor12,_cor11> of
				  <{'id',Id},Acc> when 'true' ->
				      let <_cor7> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<Id>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor7|Acc]
				  %% Line 235
				  <{'pos',{PosX,PosY}},Acc> when 'true' ->
				      let <_cor8> =
					  #{#<2>(32,1,'integer',['unsigned'|['native']]),
					    #<PosX>(32,1,'integer',['unsigned'|['native']]),
					    #<PosY>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor8|Acc]
				  %% Line 236
				  <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				      let <_cor9> =
					  #{#<3>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeW>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeH>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor9|Acc]
				  %% Line 237
				  <{'style',Style},Acc> when 'true' ->
				      let <_cor10> =
					  #{#<4>(32,1,'integer',['unsigned'|['native']]),
					    #<Style>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor10|Acc]
				  %% Line 238
				  <BadOpt,_cor24> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-create/3-fun-0-'}}] )
		      in  let <_cor16> =
			      %% Line 239
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 239
				  call 'erlang':'list_to_binary'
				      (_cor16)
			      in  let <_cor18> =
				      %% Line 241
				      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
					#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
					#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				  in  %% Line 240
				      call 'wxe_util':'call'
					  (2955, _cor18)
	  ( <_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor21,_cor20,_cor19})
		  -| [{'function_name',{'create',3}}] )
	    -| ['compiler_generated'] )
	end
'addText'/2 =
    %% Line 246
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Text>
	      when %% Line 247
		call 'erlang':'is_list'
		    (Text) ->
	      do  %% Line 248
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 249
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <_cor10> =
			  %% Line 251
			  call 'erlang':'byte_size'
			      (Text_UC)
		      in  let <_cor5> =
			      %% Line 251
			      call 'erlang':'byte_size'
				  (Text_UC)
			  in  let <_cor6> =
				  %% Line 251
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 251
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 251
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 251
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 251
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 250
						  call 'wxe_util':'cast'
						      (2956, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'addText',2}}] )
	    -| ['compiler_generated'] )
	end
'addStyledText'/2 =
    %% Line 256
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',DataRef,DataT,_cor10}> when 'true' ->
	      do  %% Line 257
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 258
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (DataT,
				       'wxMemoryBuffer') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call DataT:'parent_class'
				    ('wxMemoryBuffer')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 260
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<DataRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 259
			  call 'wxe_util':'cast'
			      (2957, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'addStyledText',2}}] )
	    -| ['compiler_generated'] )
	end
'insertText'/3 =
    %% Line 265
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},Pos,Text>
	      when let <_cor3> =
		    %% Line 266
		    call 'erlang':'is_integer'
			(Pos)
		in  let <_cor4> =
			%% Line 266
			call 'erlang':'is_list'
			    (Text)
		    in  %% Line 266
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 267
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 268
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <_cor13> =
			  %% Line 270
			  call 'erlang':'byte_size'
			      (Text_UC)
		      in  let <_cor8> =
			      %% Line 270
			      call 'erlang':'byte_size'
				  (Text_UC)
			  in  let <_cor9> =
				  %% Line 270
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 270
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 270
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 270
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 270
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<Pos>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 269
						  call 'wxe_util':'cast'
						      (2958, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'insertText',3}}] )
	    -| ['compiler_generated'] )
	end
'clearAll'/1 =
    %% Line 275
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 276
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 278
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 277
		      call 'wxe_util':'cast'
			  (2959, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'clearAll',1}}] )
	    -| ['compiler_generated'] )
	end
'clearDocumentStyle'/1 =
    %% Line 283
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 284
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 286
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 285
		      call 'wxe_util':'cast'
			  (2960, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'clearDocumentStyle',1}}] )
	    -| ['compiler_generated'] )
	end
'getLength'/1 =
    %% Line 291
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 292
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 294
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 293
		      call 'wxe_util':'call'
			  (2961, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLength',1}}] )
	    -| ['compiler_generated'] )
	end
'getCharAt'/2 =
    %% Line 299
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 300
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 301
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 303
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 302
		      call 'wxe_util':'call'
			  (2962, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getCharAt',2}}] )
	    -| ['compiler_generated'] )
	end
'getCurrentPos'/1 =
    %% Line 308
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 309
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 311
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 310
		      call 'wxe_util':'call'
			  (2963, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCurrentPos',1}}] )
	    -| ['compiler_generated'] )
	end
'getAnchor'/1 =
    %% Line 316
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 317
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 319
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 318
		      call 'wxe_util':'call'
			  (2964, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getAnchor',1}}] )
	    -| ['compiler_generated'] )
	end
'getStyleAt'/2 =
    %% Line 324
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 325
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 326
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 328
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 327
		      call 'wxe_util':'call'
			  (2965, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getStyleAt',2}}] )
	    -| ['compiler_generated'] )
	end
'redo'/1 =
    %% Line 333
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 334
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 336
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 335
		      call 'wxe_util':'cast'
			  (2966, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'redo',1}}] )
	    -| ['compiler_generated'] )
	end
'setUndoCollection'/2 =
    %% Line 341
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},CollectUndo>
	      when %% Line 342
		call 'erlang':'is_boolean'
		    (CollectUndo) ->
	      do  %% Line 343
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 345
		      call 'wxe_util':'from_bool'
			  (CollectUndo)
		  in  let <_cor5> =
			  %% Line 345
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 344
			  call 'wxe_util':'cast'
			      (2967, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setUndoCollection',2}}] )
	    -| ['compiler_generated'] )
	end
'selectAll'/1 =
    %% Line 350
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 351
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 353
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 352
		      call 'wxe_util':'cast'
			  (2968, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'selectAll',1}}] )
	    -| ['compiler_generated'] )
	end
'setSavePoint'/1 =
    %% Line 358
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 359
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 361
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 360
		      call 'wxe_util':'cast'
			  (2969, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'setSavePoint',1}}] )
	    -| ['compiler_generated'] )
	end
'getStyledText'/3 =
    %% Line 366
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},StartPos,EndPos>
	      when let <_cor3> =
		    %% Line 367
		    call 'erlang':'is_integer'
			(StartPos)
		in  let <_cor4> =
			%% Line 367
			call 'erlang':'is_integer'
			    (EndPos)
		    in  %% Line 367
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 368
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 370
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<StartPos>(32,1,'integer',['unsigned'|['native']]),
			#<EndPos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 369
		      call 'wxe_util':'call'
			  (2970, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'getStyledText',3}}] )
	    -| ['compiler_generated'] )
	end
'canRedo'/1 =
    %% Line 375
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 376
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 378
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 377
		      call 'wxe_util':'call'
			  (2971, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'canRedo',1}}] )
	    -| ['compiler_generated'] )
	end
'markerLineFromHandle'/2 =
    %% Line 383
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Handle>
	      when %% Line 384
		call 'erlang':'is_integer'
		    (Handle) ->
	      do  %% Line 385
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 387
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Handle>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 386
		      call 'wxe_util':'call'
			  (2972, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'markerLineFromHandle',2}}] )
	    -| ['compiler_generated'] )
	end
'markerDeleteHandle'/2 =
    %% Line 392
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Handle>
	      when %% Line 393
		call 'erlang':'is_integer'
		    (Handle) ->
	      do  %% Line 394
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 396
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Handle>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 395
		      call 'wxe_util':'cast'
			  (2973, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'markerDeleteHandle',2}}] )
	    -| ['compiler_generated'] )
	end
'getUndoCollection'/1 =
    %% Line 401
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 402
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 404
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 403
		      call 'wxe_util':'call'
			  (2974, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getUndoCollection',1}}] )
	    -| ['compiler_generated'] )
	end
'getViewWhiteSpace'/1 =
    %% Line 409
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 410
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 412
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 411
		      call 'wxe_util':'call'
			  (2975, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getViewWhiteSpace',1}}] )
	    -| ['compiler_generated'] )
	end
'setViewWhiteSpace'/2 =
    %% Line 417
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},ViewWS>
	      when %% Line 418
		call 'erlang':'is_integer'
		    (ViewWS) ->
	      do  %% Line 419
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 421
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<ViewWS>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 420
		      call 'wxe_util':'cast'
			  (2976, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setViewWhiteSpace',2}}] )
	    -| ['compiler_generated'] )
	end
'positionFromPoint'/2 =
    %% Line 426
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{PtX,PtY}>
	      when let <_cor2> =
		    %% Line 427
		    call 'erlang':'is_integer'
			(PtX)
		in  let <_cor3> =
			%% Line 427
			call 'erlang':'is_integer'
			    (PtY)
		    in  %% Line 427
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      do  %% Line 428
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor6> =
		      %% Line 430
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PtX>(32,1,'integer',['unsigned'|['native']]),
			#<PtY>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 429
		      call 'wxe_util':'call'
			  (2977, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'positionFromPoint',2}}] )
	    -| ['compiler_generated'] )
	end
'positionFromPointClose'/3 =
    %% Line 435
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},X,Y>
	      when let <_cor3> =
		    %% Line 436
		    call 'erlang':'is_integer'
			(X)
		in  let <_cor4> =
			%% Line 436
			call 'erlang':'is_integer'
			    (Y)
		    in  %% Line 436
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 437
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 439
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<X>(32,1,'integer',['unsigned'|['native']]),
			#<Y>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 438
		      call 'wxe_util':'call'
			  (2978, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'positionFromPointClose',3}}] )
	    -| ['compiler_generated'] )
	end
'gotoLine'/2 =
    %% Line 444
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 445
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 446
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 448
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 447
		      call 'wxe_util':'cast'
			  (2979, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'gotoLine',2}}] )
	    -| ['compiler_generated'] )
	end
'gotoPos'/2 =
    %% Line 453
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 454
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 455
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 457
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 456
		      call 'wxe_util':'cast'
			  (2980, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'gotoPos',2}}] )
	    -| ['compiler_generated'] )
	end
'setAnchor'/2 =
    %% Line 462
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},PosAnchor>
	      when %% Line 463
		call 'erlang':'is_integer'
		    (PosAnchor) ->
	      do  %% Line 464
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 466
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PosAnchor>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 465
		      call 'wxe_util':'cast'
			  (2981, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setAnchor',2}}] )
	    -| ['compiler_generated'] )
	end
'getCurLine'/1 =
    %% Line 472
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 473
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 475
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 474
		      call 'wxe_util':'call'
			  (2982, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCurLine',1}}] )
	    -| ['compiler_generated'] )
	end
'getEndStyled'/1 =
    %% Line 480
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 481
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 483
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 482
		      call 'wxe_util':'call'
			  (2983, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getEndStyled',1}}] )
	    -| ['compiler_generated'] )
	end
'convertEOLs'/2 =
    %% Line 488
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},EolMode>
	      when %% Line 489
		call 'erlang':'is_integer'
		    (EolMode) ->
	      do  %% Line 490
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 492
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<EolMode>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 491
		      call 'wxe_util':'cast'
			  (2984, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'convertEOLs',2}}] )
	    -| ['compiler_generated'] )
	end
'getEOLMode'/1 =
    %% Line 497
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 498
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 500
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 499
		      call 'wxe_util':'call'
			  (2985, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getEOLMode',1}}] )
	    -| ['compiler_generated'] )
	end
'setEOLMode'/2 =
    %% Line 505
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},EolMode>
	      when %% Line 506
		call 'erlang':'is_integer'
		    (EolMode) ->
	      do  %% Line 507
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 509
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<EolMode>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 508
		      call 'wxe_util':'cast'
			  (2986, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setEOLMode',2}}] )
	    -| ['compiler_generated'] )
	end
'startStyling'/3 =
    %% Line 514
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Pos,Mask>
	      when let <_cor3> =
		    %% Line 515
		    call 'erlang':'is_integer'
			(Pos)
		in  let <_cor4> =
			%% Line 515
			call 'erlang':'is_integer'
			    (Mask)
		    in  %% Line 515
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 516
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 518
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']]),
			#<Mask>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 517
		      call 'wxe_util':'cast'
			  (2987, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'startStyling',3}}] )
	    -| ['compiler_generated'] )
	end
'setStyling'/3 =
    %% Line 523
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Length,Style>
	      when let <_cor3> =
		    %% Line 524
		    call 'erlang':'is_integer'
			(Length)
		in  let <_cor4> =
			%% Line 524
			call 'erlang':'is_integer'
			    (Style)
		    in  %% Line 524
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 525
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 527
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Length>(32,1,'integer',['unsigned'|['native']]),
			#<Style>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 526
		      call 'wxe_util':'cast'
			  (2988, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setStyling',3}}] )
	    -| ['compiler_generated'] )
	end
'getBufferedDraw'/1 =
    %% Line 532
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 533
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 535
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 534
		      call 'wxe_util':'call'
			  (2989, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getBufferedDraw',1}}] )
	    -| ['compiler_generated'] )
	end
'setBufferedDraw'/2 =
    %% Line 540
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Buffered>
	      when %% Line 541
		call 'erlang':'is_boolean'
		    (Buffered) ->
	      do  %% Line 542
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 544
		      call 'wxe_util':'from_bool'
			  (Buffered)
		  in  let <_cor5> =
			  %% Line 544
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 543
			  call 'wxe_util':'cast'
			      (2990, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setBufferedDraw',2}}] )
	    -| ['compiler_generated'] )
	end
'setTabWidth'/2 =
    %% Line 549
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},TabWidth>
	      when %% Line 550
		call 'erlang':'is_integer'
		    (TabWidth) ->
	      do  %% Line 551
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 553
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<TabWidth>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 552
		      call 'wxe_util':'cast'
			  (2991, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setTabWidth',2}}] )
	    -| ['compiler_generated'] )
	end
'getTabWidth'/1 =
    %% Line 558
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 559
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 561
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 560
		      call 'wxe_util':'call'
			  (2992, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getTabWidth',1}}] )
	    -| ['compiler_generated'] )
	end
'setCodePage'/2 =
    %% Line 566
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},CodePage>
	      when %% Line 567
		call 'erlang':'is_integer'
		    (CodePage) ->
	      do  %% Line 568
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 570
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<CodePage>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 569
		      call 'wxe_util':'cast'
			  (2993, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setCodePage',2}}] )
	    -| ['compiler_generated'] )
	end
'markerDefine'/3 =
    %% Line 576
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor9,_cor10,_cor11},MarkerNumber,MarkerSymbol>
	      when let <_cor3> =
		    %% Line 577
		    call 'erlang':'is_integer'
			(MarkerNumber)
		in  let <_cor4> =
			%% Line 577
			call 'erlang':'is_integer'
			    (MarkerSymbol)
		    in  %% Line 577
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor3, _cor4)
			  -| ['compiler_generated'] ) ->
	      %% Line 578
	      apply 'markerDefine'/4
		  (This, MarkerNumber, MarkerSymbol, [])
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'markerDefine',3}}] )
	    -| ['compiler_generated'] )
	end
'markerDefine'/4 =
    %% Line 585
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor26},MarkerNumber,MarkerSymbol,Options>
	      when %% Line 586
		try
		    let <_cor4> =
			call 'erlang':'is_integer'
			    (MarkerNumber)
		    in  let <_cor5> =
			    call 'erlang':'is_integer'
				(MarkerSymbol)
			in  let <_cor6> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor7> =
				    call 'erlang':'and'
					(_cor5, _cor6)
				in  call 'erlang':'and'
					(_cor4, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 587
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 588
		      ( fun (_cor15,_cor14) ->
			    case <_cor15,_cor14> of
			      <{'foreground',Foreground},Acc> when 'true' ->
				  let <_cor10> =
				      call 'wxe_util':'colour_bin'
					  (Foreground)
				  in  let <_cor11> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor10>(16,8,'binary',['unsigned'|['big']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor11|Acc]
			      %% Line 589
			      <{'background',Background},Acc> when 'true' ->
				  let <_cor12> =
				      call 'wxe_util':'colour_bin'
					  (Background)
				  in  let <_cor13> =
					  #{#<2>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor12>(16,8,'binary',['unsigned'|['big']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor13|Acc]
			      %% Line 590
			      <BadOpt,_cor27> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-markerDefine/4-fun-0-'}}] )
		  in  let <_cor19> =
			  %% Line 591
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 591
			      call 'erlang':'list_to_binary'
				  (_cor19)
			  in  let <_cor21> =
				  %% Line 593
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<MarkerNumber>(32,1,'integer',['unsigned'|['native']]),
				    #<MarkerSymbol>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 592
				  call 'wxe_util':'cast'
				      (2994, _cor21)
	  ( <_cor25,_cor24,_cor23,_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor25,_cor24,_cor23,_cor22})
		  -| [{'function_name',{'markerDefine',4}}] )
	    -| ['compiler_generated'] )
	end
'markerSetForeground'/3 =
    %% Line 598
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},MarkerNumber,Fore>
	      when let <_cor6> =
		    %% Line 599
		    try
			let <_cor3> =
			    call 'erlang':'is_integer'
				(MarkerNumber)
			in  let <_cor4> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  let <_cor5> =
				    call 'erlang':'=:='
					(_cor4, 3)
				in  call 'erlang':'and'
					(_cor3, _cor5)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor8> =
			%% Line 599
			try
			    let <_cor7> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  call 'erlang':'=:='
				    (_cor7, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 599
			call 'erlang':'or'
			    (_cor6, _cor8) ->
	      do  %% Line 600
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor11> =
		      %% Line 602
		      call 'wxe_util':'colour_bin'
			  (Fore)
		  in  let <_cor12> =
			  %% Line 602
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<MarkerNumber>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor11>(16,8,'binary',['unsigned'|['big']])}#
		      in  %% Line 601
			  call 'wxe_util':'cast'
			      (2995, _cor12)
	  ( <_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13})
		  -| [{'function_name',{'markerSetForeground',3}}] )
	    -| ['compiler_generated'] )
	end
'markerSetBackground'/3 =
    %% Line 607
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},MarkerNumber,Back>
	      when let <_cor6> =
		    %% Line 608
		    try
			let <_cor3> =
			    call 'erlang':'is_integer'
				(MarkerNumber)
			in  let <_cor4> =
				call 'erlang':'tuple_size'
				    (Back)
			    in  let <_cor5> =
				    call 'erlang':'=:='
					(_cor4, 3)
				in  call 'erlang':'and'
					(_cor3, _cor5)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor8> =
			%% Line 608
			try
			    let <_cor7> =
				call 'erlang':'tuple_size'
				    (Back)
			    in  call 'erlang':'=:='
				    (_cor7, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 608
			call 'erlang':'or'
			    (_cor6, _cor8) ->
	      do  %% Line 609
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor11> =
		      %% Line 611
		      call 'wxe_util':'colour_bin'
			  (Back)
		  in  let <_cor12> =
			  %% Line 611
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<MarkerNumber>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor11>(16,8,'binary',['unsigned'|['big']])}#
		      in  %% Line 610
			  call 'wxe_util':'cast'
			      (2996, _cor12)
	  ( <_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13})
		  -| [{'function_name',{'markerSetBackground',3}}] )
	    -| ['compiler_generated'] )
	end
'markerAdd'/3 =
    %% Line 616
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Line,MarkerNumber>
	      when let <_cor3> =
		    %% Line 617
		    call 'erlang':'is_integer'
			(Line)
		in  let <_cor4> =
			%% Line 617
			call 'erlang':'is_integer'
			    (MarkerNumber)
		    in  %% Line 617
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 618
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 620
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']]),
			#<MarkerNumber>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 619
		      call 'wxe_util':'call'
			  (2997, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'markerAdd',3}}] )
	    -| ['compiler_generated'] )
	end
'markerDelete'/3 =
    %% Line 625
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Line,MarkerNumber>
	      when let <_cor3> =
		    %% Line 626
		    call 'erlang':'is_integer'
			(Line)
		in  let <_cor4> =
			%% Line 626
			call 'erlang':'is_integer'
			    (MarkerNumber)
		    in  %% Line 626
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 627
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 629
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']]),
			#<MarkerNumber>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 628
		      call 'wxe_util':'cast'
			  (2998, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'markerDelete',3}}] )
	    -| ['compiler_generated'] )
	end
'markerDeleteAll'/2 =
    %% Line 634
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},MarkerNumber>
	      when %% Line 635
		call 'erlang':'is_integer'
		    (MarkerNumber) ->
	      do  %% Line 636
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 638
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<MarkerNumber>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 637
		      call 'wxe_util':'cast'
			  (2999, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'markerDeleteAll',2}}] )
	    -| ['compiler_generated'] )
	end
'markerGet'/2 =
    %% Line 643
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 644
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 645
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 647
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 646
		      call 'wxe_util':'call'
			  (3000, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'markerGet',2}}] )
	    -| ['compiler_generated'] )
	end
'markerNext'/3 =
    %% Line 652
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},LineStart,MarkerMask>
	      when let <_cor3> =
		    %% Line 653
		    call 'erlang':'is_integer'
			(LineStart)
		in  let <_cor4> =
			%% Line 653
			call 'erlang':'is_integer'
			    (MarkerMask)
		    in  %% Line 653
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 654
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 656
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<LineStart>(32,1,'integer',['unsigned'|['native']]),
			#<MarkerMask>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 655
		      call 'wxe_util':'call'
			  (3001, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'markerNext',3}}] )
	    -| ['compiler_generated'] )
	end
'markerPrevious'/3 =
    %% Line 661
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},LineStart,MarkerMask>
	      when let <_cor3> =
		    %% Line 662
		    call 'erlang':'is_integer'
			(LineStart)
		in  let <_cor4> =
			%% Line 662
			call 'erlang':'is_integer'
			    (MarkerMask)
		    in  %% Line 662
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 663
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 665
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<LineStart>(32,1,'integer',['unsigned'|['native']]),
			#<MarkerMask>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 664
		      call 'wxe_util':'call'
			  (3002, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'markerPrevious',3}}] )
	    -| ['compiler_generated'] )
	end
'markerDefineBitmap'/3 =
    %% Line 670
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},MarkerNumber,{'wx_ref',BmpRef,BmpT,_cor12}>
	      when %% Line 671
		call 'erlang':'is_integer'
		    (MarkerNumber) ->
	      do  %% Line 672
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 673
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (BmpT,
				       'wxBitmap') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call BmpT:'parent_class'
				    ('wxBitmap')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor7> =
			  %% Line 675
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<MarkerNumber>(32,1,'integer',['unsigned'|['native']]),
			    #<BmpRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 674
			  call 'wxe_util':'cast'
			      (3003, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'markerDefineBitmap',3}}] )
	    -| ['compiler_generated'] )
	end
'markerAddSet'/3 =
    %% Line 680
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Line,Set>
	      when let <_cor3> =
		    %% Line 681
		    call 'erlang':'is_integer'
			(Line)
		in  let <_cor4> =
			%% Line 681
			call 'erlang':'is_integer'
			    (Set)
		    in  %% Line 681
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 682
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 684
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']]),
			#<Set>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 683
		      call 'wxe_util':'cast'
			  (3004, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'markerAddSet',3}}] )
	    -| ['compiler_generated'] )
	end
'markerSetAlpha'/3 =
    %% Line 689
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},MarkerNumber,Alpha>
	      when let <_cor3> =
		    %% Line 690
		    call 'erlang':'is_integer'
			(MarkerNumber)
		in  let <_cor4> =
			%% Line 690
			call 'erlang':'is_integer'
			    (Alpha)
		    in  %% Line 690
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 691
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 693
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<MarkerNumber>(32,1,'integer',['unsigned'|['native']]),
			#<Alpha>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 692
		      call 'wxe_util':'cast'
			  (3005, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'markerSetAlpha',3}}] )
	    -| ['compiler_generated'] )
	end
'setMarginType'/3 =
    %% Line 698
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Margin,MarginType>
	      when let <_cor3> =
		    %% Line 699
		    call 'erlang':'is_integer'
			(Margin)
		in  let <_cor4> =
			%% Line 699
			call 'erlang':'is_integer'
			    (MarginType)
		    in  %% Line 699
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 700
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 702
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Margin>(32,1,'integer',['unsigned'|['native']]),
			#<MarginType>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 701
		      call 'wxe_util':'cast'
			  (3006, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setMarginType',3}}] )
	    -| ['compiler_generated'] )
	end
'getMarginType'/2 =
    %% Line 707
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Margin>
	      when %% Line 708
		call 'erlang':'is_integer'
		    (Margin) ->
	      do  %% Line 709
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 711
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Margin>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 710
		      call 'wxe_util':'call'
			  (3007, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getMarginType',2}}] )
	    -| ['compiler_generated'] )
	end
'setMarginWidth'/3 =
    %% Line 716
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Margin,PixelWidth>
	      when let <_cor3> =
		    %% Line 717
		    call 'erlang':'is_integer'
			(Margin)
		in  let <_cor4> =
			%% Line 717
			call 'erlang':'is_integer'
			    (PixelWidth)
		    in  %% Line 717
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 718
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 720
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Margin>(32,1,'integer',['unsigned'|['native']]),
			#<PixelWidth>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 719
		      call 'wxe_util':'cast'
			  (3008, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setMarginWidth',3}}] )
	    -| ['compiler_generated'] )
	end
'getMarginWidth'/2 =
    %% Line 725
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Margin>
	      when %% Line 726
		call 'erlang':'is_integer'
		    (Margin) ->
	      do  %% Line 727
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 729
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Margin>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 728
		      call 'wxe_util':'call'
			  (3009, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getMarginWidth',2}}] )
	    -| ['compiler_generated'] )
	end
'setMarginMask'/3 =
    %% Line 734
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Margin,Mask>
	      when let <_cor3> =
		    %% Line 735
		    call 'erlang':'is_integer'
			(Margin)
		in  let <_cor4> =
			%% Line 735
			call 'erlang':'is_integer'
			    (Mask)
		    in  %% Line 735
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 736
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 738
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Margin>(32,1,'integer',['unsigned'|['native']]),
			#<Mask>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 737
		      call 'wxe_util':'cast'
			  (3010, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setMarginMask',3}}] )
	    -| ['compiler_generated'] )
	end
'getMarginMask'/2 =
    %% Line 743
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Margin>
	      when %% Line 744
		call 'erlang':'is_integer'
		    (Margin) ->
	      do  %% Line 745
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 747
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Margin>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 746
		      call 'wxe_util':'call'
			  (3011, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getMarginMask',2}}] )
	    -| ['compiler_generated'] )
	end
'setMarginSensitive'/3 =
    %% Line 752
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Margin,Sensitive>
	      when let <_cor3> =
		    %% Line 753
		    call 'erlang':'is_integer'
			(Margin)
		in  let <_cor4> =
			%% Line 753
			call 'erlang':'is_boolean'
			    (Sensitive)
		    in  %% Line 753
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 754
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 756
		      call 'wxe_util':'from_bool'
			  (Sensitive)
		  in  let <_cor8> =
			  %% Line 756
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Margin>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 755
			  call 'wxe_util':'cast'
			      (3012, _cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'setMarginSensitive',3}}] )
	    -| ['compiler_generated'] )
	end
'getMarginSensitive'/2 =
    %% Line 761
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Margin>
	      when %% Line 762
		call 'erlang':'is_integer'
		    (Margin) ->
	      do  %% Line 763
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 765
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Margin>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 764
		      call 'wxe_util':'call'
			  (3013, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getMarginSensitive',2}}] )
	    -| ['compiler_generated'] )
	end
'styleClearAll'/1 =
    %% Line 770
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 771
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 773
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 772
		      call 'wxe_util':'cast'
			  (3014, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'styleClearAll',1}}] )
	    -| ['compiler_generated'] )
	end
'styleSetForeground'/3 =
    %% Line 778
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Style,Fore>
	      when let <_cor6> =
		    %% Line 779
		    try
			let <_cor3> =
			    call 'erlang':'is_integer'
				(Style)
			in  let <_cor4> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  let <_cor5> =
				    call 'erlang':'=:='
					(_cor4, 3)
				in  call 'erlang':'and'
					(_cor3, _cor5)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor8> =
			%% Line 779
			try
			    let <_cor7> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  call 'erlang':'=:='
				    (_cor7, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 779
			call 'erlang':'or'
			    (_cor6, _cor8) ->
	      do  %% Line 780
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor11> =
		      %% Line 782
		      call 'wxe_util':'colour_bin'
			  (Fore)
		  in  let <_cor12> =
			  %% Line 782
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Style>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor11>(16,8,'binary',['unsigned'|['big']])}#
		      in  %% Line 781
			  call 'wxe_util':'cast'
			      (3015, _cor12)
	  ( <_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13})
		  -| [{'function_name',{'styleSetForeground',3}}] )
	    -| ['compiler_generated'] )
	end
'styleSetBackground'/3 =
    %% Line 787
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Style,Back>
	      when let <_cor6> =
		    %% Line 788
		    try
			let <_cor3> =
			    call 'erlang':'is_integer'
				(Style)
			in  let <_cor4> =
				call 'erlang':'tuple_size'
				    (Back)
			    in  let <_cor5> =
				    call 'erlang':'=:='
					(_cor4, 3)
				in  call 'erlang':'and'
					(_cor3, _cor5)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor8> =
			%% Line 788
			try
			    let <_cor7> =
				call 'erlang':'tuple_size'
				    (Back)
			    in  call 'erlang':'=:='
				    (_cor7, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 788
			call 'erlang':'or'
			    (_cor6, _cor8) ->
	      do  %% Line 789
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor11> =
		      %% Line 791
		      call 'wxe_util':'colour_bin'
			  (Back)
		  in  let <_cor12> =
			  %% Line 791
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Style>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor11>(16,8,'binary',['unsigned'|['big']])}#
		      in  %% Line 790
			  call 'wxe_util':'cast'
			      (3016, _cor12)
	  ( <_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13})
		  -| [{'function_name',{'styleSetBackground',3}}] )
	    -| ['compiler_generated'] )
	end
'styleSetBold'/3 =
    %% Line 796
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Style,Bold>
	      when let <_cor3> =
		    %% Line 797
		    call 'erlang':'is_integer'
			(Style)
		in  let <_cor4> =
			%% Line 797
			call 'erlang':'is_boolean'
			    (Bold)
		    in  %% Line 797
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 798
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 800
		      call 'wxe_util':'from_bool'
			  (Bold)
		  in  let <_cor8> =
			  %% Line 800
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Style>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 799
			  call 'wxe_util':'cast'
			      (3017, _cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'styleSetBold',3}}] )
	    -| ['compiler_generated'] )
	end
'styleSetItalic'/3 =
    %% Line 805
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Style,Italic>
	      when let <_cor3> =
		    %% Line 806
		    call 'erlang':'is_integer'
			(Style)
		in  let <_cor4> =
			%% Line 806
			call 'erlang':'is_boolean'
			    (Italic)
		    in  %% Line 806
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 807
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 809
		      call 'wxe_util':'from_bool'
			  (Italic)
		  in  let <_cor8> =
			  %% Line 809
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Style>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 808
			  call 'wxe_util':'cast'
			      (3018, _cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'styleSetItalic',3}}] )
	    -| ['compiler_generated'] )
	end
'styleSetSize'/3 =
    %% Line 814
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Style,SizePoints>
	      when let <_cor3> =
		    %% Line 815
		    call 'erlang':'is_integer'
			(Style)
		in  let <_cor4> =
			%% Line 815
			call 'erlang':'is_integer'
			    (SizePoints)
		    in  %% Line 815
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 816
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 818
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Style>(32,1,'integer',['unsigned'|['native']]),
			#<SizePoints>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 817
		      call 'wxe_util':'cast'
			  (3019, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'styleSetSize',3}}] )
	    -| ['compiler_generated'] )
	end
'styleSetFaceName'/3 =
    %% Line 823
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},Style,FontName>
	      when let <_cor3> =
		    %% Line 824
		    call 'erlang':'is_integer'
			(Style)
		in  let <_cor4> =
			%% Line 824
			call 'erlang':'is_list'
			    (FontName)
		    in  %% Line 824
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 825
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <FontName_UC> =
		      %% Line 826
		      call 'unicode':'characters_to_binary'
			  ([FontName|[0]])
		  in  let <_cor13> =
			  %% Line 828
			  call 'erlang':'byte_size'
			      (FontName_UC)
		      in  let <_cor8> =
			      %% Line 828
			      call 'erlang':'byte_size'
				  (FontName_UC)
			  in  let <_cor9> =
				  %% Line 828
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 828
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 828
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 828
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 828
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<Style>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<FontName_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 827
						  call 'wxe_util':'cast'
						      (3020, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'styleSetFaceName',3}}] )
	    -| ['compiler_generated'] )
	end
'styleSetEOLFilled'/3 =
    %% Line 833
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Style,Filled>
	      when let <_cor3> =
		    %% Line 834
		    call 'erlang':'is_integer'
			(Style)
		in  let <_cor4> =
			%% Line 834
			call 'erlang':'is_boolean'
			    (Filled)
		    in  %% Line 834
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 835
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 837
		      call 'wxe_util':'from_bool'
			  (Filled)
		  in  let <_cor8> =
			  %% Line 837
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Style>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 836
			  call 'wxe_util':'cast'
			      (3021, _cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'styleSetEOLFilled',3}}] )
	    -| ['compiler_generated'] )
	end
'styleResetDefault'/1 =
    %% Line 842
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 843
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 845
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 844
		      call 'wxe_util':'cast'
			  (3022, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'styleResetDefault',1}}] )
	    -| ['compiler_generated'] )
	end
'styleSetUnderline'/3 =
    %% Line 850
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Style,Underline>
	      when let <_cor3> =
		    %% Line 851
		    call 'erlang':'is_integer'
			(Style)
		in  let <_cor4> =
			%% Line 851
			call 'erlang':'is_boolean'
			    (Underline)
		    in  %% Line 851
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 852
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 854
		      call 'wxe_util':'from_bool'
			  (Underline)
		  in  let <_cor8> =
			  %% Line 854
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Style>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 853
			  call 'wxe_util':'cast'
			      (3023, _cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'styleSetUnderline',3}}] )
	    -| ['compiler_generated'] )
	end
'styleSetCase'/3 =
    %% Line 859
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Style,CaseForce>
	      when let <_cor3> =
		    %% Line 860
		    call 'erlang':'is_integer'
			(Style)
		in  let <_cor4> =
			%% Line 860
			call 'erlang':'is_integer'
			    (CaseForce)
		    in  %% Line 860
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 861
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 863
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Style>(32,1,'integer',['unsigned'|['native']]),
			#<CaseForce>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 862
		      call 'wxe_util':'cast'
			  (3024, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'styleSetCase',3}}] )
	    -| ['compiler_generated'] )
	end
'styleSetHotSpot'/3 =
    %% Line 868
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Style,Hotspot>
	      when let <_cor3> =
		    %% Line 869
		    call 'erlang':'is_integer'
			(Style)
		in  let <_cor4> =
			%% Line 869
			call 'erlang':'is_boolean'
			    (Hotspot)
		    in  %% Line 869
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 870
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 872
		      call 'wxe_util':'from_bool'
			  (Hotspot)
		  in  let <_cor8> =
			  %% Line 872
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Style>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 871
			  call 'wxe_util':'cast'
			      (3025, _cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'styleSetHotSpot',3}}] )
	    -| ['compiler_generated'] )
	end
'setSelForeground'/3 =
    %% Line 877
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor17},UseSetting,Fore>
	      when let <_cor6> =
		    %% Line 878
		    try
			let <_cor3> =
			    call 'erlang':'is_boolean'
				(UseSetting)
			in  let <_cor4> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  let <_cor5> =
				    call 'erlang':'=:='
					(_cor4, 3)
				in  call 'erlang':'and'
					(_cor3, _cor5)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor8> =
			%% Line 878
			try
			    let <_cor7> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  call 'erlang':'=:='
				    (_cor7, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 878
			call 'erlang':'or'
			    (_cor6, _cor8) ->
	      do  %% Line 879
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor12> =
		      %% Line 881
		      call 'wxe_util':'from_bool'
			  (UseSetting)
		  in  let <_cor11> =
			  %% Line 881
			  call 'wxe_util':'colour_bin'
			      (Fore)
		      in  let <_cor13> =
			      %% Line 881
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<_cor12>(32,1,'integer',['unsigned'|['native']]),
				#<_cor11>(16,8,'binary',['unsigned'|['big']])}#
			  in  %% Line 880
			      call 'wxe_util':'cast'
				  (3026, _cor13)
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14})
		  -| [{'function_name',{'setSelForeground',3}}] )
	    -| ['compiler_generated'] )
	end
'setSelBackground'/3 =
    %% Line 886
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor17},UseSetting,Back>
	      when let <_cor6> =
		    %% Line 887
		    try
			let <_cor3> =
			    call 'erlang':'is_boolean'
				(UseSetting)
			in  let <_cor4> =
				call 'erlang':'tuple_size'
				    (Back)
			    in  let <_cor5> =
				    call 'erlang':'=:='
					(_cor4, 3)
				in  call 'erlang':'and'
					(_cor3, _cor5)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor8> =
			%% Line 887
			try
			    let <_cor7> =
				call 'erlang':'tuple_size'
				    (Back)
			    in  call 'erlang':'=:='
				    (_cor7, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 887
			call 'erlang':'or'
			    (_cor6, _cor8) ->
	      do  %% Line 888
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor12> =
		      %% Line 890
		      call 'wxe_util':'from_bool'
			  (UseSetting)
		  in  let <_cor11> =
			  %% Line 890
			  call 'wxe_util':'colour_bin'
			      (Back)
		      in  let <_cor13> =
			      %% Line 890
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<_cor12>(32,1,'integer',['unsigned'|['native']]),
				#<_cor11>(16,8,'binary',['unsigned'|['big']])}#
			  in  %% Line 889
			      call 'wxe_util':'cast'
				  (3027, _cor13)
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14})
		  -| [{'function_name',{'setSelBackground',3}}] )
	    -| ['compiler_generated'] )
	end
'getSelAlpha'/1 =
    %% Line 895
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 896
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 898
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 897
		      call 'wxe_util':'call'
			  (3028, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSelAlpha',1}}] )
	    -| ['compiler_generated'] )
	end
'setSelAlpha'/2 =
    %% Line 903
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Alpha>
	      when %% Line 904
		call 'erlang':'is_integer'
		    (Alpha) ->
	      do  %% Line 905
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 907
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Alpha>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 906
		      call 'wxe_util':'cast'
			  (3029, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setSelAlpha',2}}] )
	    -| ['compiler_generated'] )
	end
'setCaretForeground'/2 =
    %% Line 912
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Fore>
	      when let <_cor3> =
		    %% Line 913
		    try
			let <_cor2> =
			    call 'erlang':'tuple_size'
				(Fore)
			in  call 'erlang':'=:='
				(_cor2, 3)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor5> =
			%% Line 913
			try
			    let <_cor4> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  call 'erlang':'=:='
				    (_cor4, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 913
			call 'erlang':'or'
			    (_cor3, _cor5) ->
	      do  %% Line 914
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor8> =
		      %% Line 916
		      call 'wxe_util':'colour_bin'
			  (Fore)
		  in  let <_cor9> =
			  %% Line 916
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor8>(16,8,'binary',['unsigned'|['big']])}#
		      in  %% Line 915
			  call 'wxe_util':'cast'
			      (3030, _cor9)
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'setCaretForeground',2}}] )
	    -| ['compiler_generated'] )
	end
'cmdKeyAssign'/4 =
    %% Line 921
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor15},Key,Modifiers,Cmd>
	      when %% Line 922
		try
		    let <_cor4> =
			call 'erlang':'is_integer'
			    (Key)
		    in  let <_cor5> =
			    call 'erlang':'is_integer'
				(Modifiers)
			in  let <_cor6> =
				call 'erlang':'is_integer'
				    (Cmd)
			    in  let <_cor7> =
				    call 'erlang':'and'
					(_cor5, _cor6)
				in  call 'erlang':'and'
					(_cor4, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 923
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor10> =
		      %% Line 925
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Key>(32,1,'integer',['unsigned'|['native']]),
			#<Modifiers>(32,1,'integer',['unsigned'|['native']]),
			#<Cmd>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 924
		      call 'wxe_util':'cast'
			  (3031, _cor10)
	  ( <_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'cmdKeyAssign',4}}] )
	    -| ['compiler_generated'] )
	end
'cmdKeyClear'/3 =
    %% Line 930
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Key,Modifiers>
	      when let <_cor3> =
		    %% Line 931
		    call 'erlang':'is_integer'
			(Key)
		in  let <_cor4> =
			%% Line 931
			call 'erlang':'is_integer'
			    (Modifiers)
		    in  %% Line 931
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 932
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 934
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Key>(32,1,'integer',['unsigned'|['native']]),
			#<Modifiers>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 933
		      call 'wxe_util':'cast'
			  (3032, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'cmdKeyClear',3}}] )
	    -| ['compiler_generated'] )
	end
'cmdKeyClearAll'/1 =
    %% Line 939
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 940
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 942
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 941
		      call 'wxe_util':'cast'
			  (3033, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'cmdKeyClearAll',1}}] )
	    -| ['compiler_generated'] )
	end
'setStyleBytes'/2 =
    %% Line 947
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Length>
	      when %% Line 948
		call 'erlang':'is_integer'
		    (Length) ->
	      do  %% Line 949
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 951
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Length>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 950
		      call 'wxe_util':'call'
			  (3034, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setStyleBytes',2}}] )
	    -| ['compiler_generated'] )
	end
'styleSetVisible'/3 =
    %% Line 956
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Style,Visible>
	      when let <_cor3> =
		    %% Line 957
		    call 'erlang':'is_integer'
			(Style)
		in  let <_cor4> =
			%% Line 957
			call 'erlang':'is_boolean'
			    (Visible)
		    in  %% Line 957
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 958
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 960
		      call 'wxe_util':'from_bool'
			  (Visible)
		  in  let <_cor8> =
			  %% Line 960
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Style>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 959
			  call 'wxe_util':'cast'
			      (3035, _cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'styleSetVisible',3}}] )
	    -| ['compiler_generated'] )
	end
'getCaretPeriod'/1 =
    %% Line 965
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 966
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 968
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 967
		      call 'wxe_util':'call'
			  (3036, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCaretPeriod',1}}] )
	    -| ['compiler_generated'] )
	end
'setCaretPeriod'/2 =
    %% Line 973
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},PeriodMilliseconds>
	      when %% Line 974
		call 'erlang':'is_integer'
		    (PeriodMilliseconds) ->
	      do  %% Line 975
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 977
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PeriodMilliseconds>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 976
		      call 'wxe_util':'cast'
			  (3037, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setCaretPeriod',2}}] )
	    -| ['compiler_generated'] )
	end
'setWordChars'/2 =
    %% Line 982
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Characters>
	      when %% Line 983
		call 'erlang':'is_list'
		    (Characters) ->
	      do  %% Line 984
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Characters_UC> =
		      %% Line 985
		      call 'unicode':'characters_to_binary'
			  ([Characters|[0]])
		  in  let <_cor10> =
			  %% Line 987
			  call 'erlang':'byte_size'
			      (Characters_UC)
		      in  let <_cor5> =
			      %% Line 987
			      call 'erlang':'byte_size'
				  (Characters_UC)
			  in  let <_cor6> =
				  %% Line 987
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 987
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 987
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 987
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 987
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Characters_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 986
						  call 'wxe_util':'cast'
						      (3038, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setWordChars',2}}] )
	    -| ['compiler_generated'] )
	end
'beginUndoAction'/1 =
    %% Line 992
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 993
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 995
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 994
		      call 'wxe_util':'cast'
			  (3039, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'beginUndoAction',1}}] )
	    -| ['compiler_generated'] )
	end
'endUndoAction'/1 =
    %% Line 1000
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1001
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1003
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1002
		      call 'wxe_util':'cast'
			  (3040, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'endUndoAction',1}}] )
	    -| ['compiler_generated'] )
	end
'indicatorSetStyle'/3 =
    %% Line 1008
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Indic,Style>
	      when let <_cor3> =
		    %% Line 1009
		    call 'erlang':'is_integer'
			(Indic)
		in  let <_cor4> =
			%% Line 1009
			call 'erlang':'is_integer'
			    (Style)
		    in  %% Line 1009
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 1010
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 1012
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Indic>(32,1,'integer',['unsigned'|['native']]),
			#<Style>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1011
		      call 'wxe_util':'cast'
			  (3041, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'indicatorSetStyle',3}}] )
	    -| ['compiler_generated'] )
	end
'indicatorGetStyle'/2 =
    %% Line 1017
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Indic>
	      when %% Line 1018
		call 'erlang':'is_integer'
		    (Indic) ->
	      do  %% Line 1019
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1021
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Indic>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1020
		      call 'wxe_util':'call'
			  (3042, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'indicatorGetStyle',2}}] )
	    -| ['compiler_generated'] )
	end
'indicatorSetForeground'/3 =
    %% Line 1026
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Indic,Fore>
	      when let <_cor6> =
		    %% Line 1027
		    try
			let <_cor3> =
			    call 'erlang':'is_integer'
				(Indic)
			in  let <_cor4> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  let <_cor5> =
				    call 'erlang':'=:='
					(_cor4, 3)
				in  call 'erlang':'and'
					(_cor3, _cor5)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor8> =
			%% Line 1027
			try
			    let <_cor7> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  call 'erlang':'=:='
				    (_cor7, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 1027
			call 'erlang':'or'
			    (_cor6, _cor8) ->
	      do  %% Line 1028
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor11> =
		      %% Line 1030
		      call 'wxe_util':'colour_bin'
			  (Fore)
		  in  let <_cor12> =
			  %% Line 1030
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Indic>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor11>(16,8,'binary',['unsigned'|['big']])}#
		      in  %% Line 1029
			  call 'wxe_util':'cast'
			      (3043, _cor12)
	  ( <_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13})
		  -| [{'function_name',{'indicatorSetForeground',3}}] )
	    -| ['compiler_generated'] )
	end
'indicatorGetForeground'/2 =
    %% Line 1035
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Indic>
	      when %% Line 1036
		call 'erlang':'is_integer'
		    (Indic) ->
	      do  %% Line 1037
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1039
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Indic>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1038
		      call 'wxe_util':'call'
			  (3044, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'indicatorGetForeground',2}}] )
	    -| ['compiler_generated'] )
	end
'setWhitespaceForeground'/3 =
    %% Line 1044
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor17},UseSetting,Fore>
	      when let <_cor6> =
		    %% Line 1045
		    try
			let <_cor3> =
			    call 'erlang':'is_boolean'
				(UseSetting)
			in  let <_cor4> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  let <_cor5> =
				    call 'erlang':'=:='
					(_cor4, 3)
				in  call 'erlang':'and'
					(_cor3, _cor5)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor8> =
			%% Line 1045
			try
			    let <_cor7> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  call 'erlang':'=:='
				    (_cor7, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 1045
			call 'erlang':'or'
			    (_cor6, _cor8) ->
	      do  %% Line 1046
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor12> =
		      %% Line 1048
		      call 'wxe_util':'from_bool'
			  (UseSetting)
		  in  let <_cor11> =
			  %% Line 1048
			  call 'wxe_util':'colour_bin'
			      (Fore)
		      in  let <_cor13> =
			      %% Line 1048
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<_cor12>(32,1,'integer',['unsigned'|['native']]),
				#<_cor11>(16,8,'binary',['unsigned'|['big']])}#
			  in  %% Line 1047
			      call 'wxe_util':'cast'
				  (3045, _cor13)
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14})
		  -| [{'function_name',{'setWhitespaceForeground',3}}] )
	    -| ['compiler_generated'] )
	end
'setWhitespaceBackground'/3 =
    %% Line 1053
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor17},UseSetting,Back>
	      when let <_cor6> =
		    %% Line 1054
		    try
			let <_cor3> =
			    call 'erlang':'is_boolean'
				(UseSetting)
			in  let <_cor4> =
				call 'erlang':'tuple_size'
				    (Back)
			    in  let <_cor5> =
				    call 'erlang':'=:='
					(_cor4, 3)
				in  call 'erlang':'and'
					(_cor3, _cor5)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor8> =
			%% Line 1054
			try
			    let <_cor7> =
				call 'erlang':'tuple_size'
				    (Back)
			    in  call 'erlang':'=:='
				    (_cor7, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 1054
			call 'erlang':'or'
			    (_cor6, _cor8) ->
	      do  %% Line 1055
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor12> =
		      %% Line 1057
		      call 'wxe_util':'from_bool'
			  (UseSetting)
		  in  let <_cor11> =
			  %% Line 1057
			  call 'wxe_util':'colour_bin'
			      (Back)
		      in  let <_cor13> =
			      %% Line 1057
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<_cor12>(32,1,'integer',['unsigned'|['native']]),
				#<_cor11>(16,8,'binary',['unsigned'|['big']])}#
			  in  %% Line 1056
			      call 'wxe_util':'cast'
				  (3046, _cor13)
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14})
		  -| [{'function_name',{'setWhitespaceBackground',3}}] )
	    -| ['compiler_generated'] )
	end
'getStyleBits'/1 =
    %% Line 1062
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1063
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1065
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1064
		      call 'wxe_util':'call'
			  (3047, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getStyleBits',1}}] )
	    -| ['compiler_generated'] )
	end
'setLineState'/3 =
    %% Line 1070
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Line,State>
	      when let <_cor3> =
		    %% Line 1071
		    call 'erlang':'is_integer'
			(Line)
		in  let <_cor4> =
			%% Line 1071
			call 'erlang':'is_integer'
			    (State)
		    in  %% Line 1071
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 1072
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 1074
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']]),
			#<State>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1073
		      call 'wxe_util':'cast'
			  (3048, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setLineState',3}}] )
	    -| ['compiler_generated'] )
	end
'getLineState'/2 =
    %% Line 1079
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 1080
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 1081
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1083
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1082
		      call 'wxe_util':'call'
			  (3049, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getLineState',2}}] )
	    -| ['compiler_generated'] )
	end
'getMaxLineState'/1 =
    %% Line 1088
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1089
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1091
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1090
		      call 'wxe_util':'call'
			  (3050, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getMaxLineState',1}}] )
	    -| ['compiler_generated'] )
	end
'getCaretLineVisible'/1 =
    %% Line 1096
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1097
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1099
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1098
		      call 'wxe_util':'call'
			  (3051, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCaretLineVisible',1}}] )
	    -| ['compiler_generated'] )
	end
'setCaretLineVisible'/2 =
    %% Line 1104
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Show>
	      when %% Line 1105
		call 'erlang':'is_boolean'
		    (Show) ->
	      do  %% Line 1106
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1108
		      call 'wxe_util':'from_bool'
			  (Show)
		  in  let <_cor5> =
			  %% Line 1108
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 1107
			  call 'wxe_util':'cast'
			      (3052, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setCaretLineVisible',2}}] )
	    -| ['compiler_generated'] )
	end
'getCaretLineBackground'/1 =
    %% Line 1113
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1114
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1116
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1115
		      call 'wxe_util':'call'
			  (3053, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCaretLineBackground',1}}] )
	    -| ['compiler_generated'] )
	end
'setCaretLineBackground'/2 =
    %% Line 1121
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Back>
	      when let <_cor3> =
		    %% Line 1122
		    try
			let <_cor2> =
			    call 'erlang':'tuple_size'
				(Back)
			in  call 'erlang':'=:='
				(_cor2, 3)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor5> =
			%% Line 1122
			try
			    let <_cor4> =
				call 'erlang':'tuple_size'
				    (Back)
			    in  call 'erlang':'=:='
				    (_cor4, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 1122
			call 'erlang':'or'
			    (_cor3, _cor5) ->
	      do  %% Line 1123
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor8> =
		      %% Line 1125
		      call 'wxe_util':'colour_bin'
			  (Back)
		  in  let <_cor9> =
			  %% Line 1125
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor8>(16,8,'binary',['unsigned'|['big']])}#
		      in  %% Line 1124
			  call 'wxe_util':'cast'
			      (3054, _cor9)
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'setCaretLineBackground',2}}] )
	    -| ['compiler_generated'] )
	end
'autoCompShow'/3 =
    %% Line 1130
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},LenEntered,ItemList>
	      when let <_cor3> =
		    %% Line 1131
		    call 'erlang':'is_integer'
			(LenEntered)
		in  let <_cor4> =
			%% Line 1131
			call 'erlang':'is_list'
			    (ItemList)
		    in  %% Line 1131
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 1132
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <ItemList_UC> =
		      %% Line 1133
		      call 'unicode':'characters_to_binary'
			  ([ItemList|[0]])
		  in  let <_cor13> =
			  %% Line 1135
			  call 'erlang':'byte_size'
			      (ItemList_UC)
		      in  let <_cor8> =
			      %% Line 1135
			      call 'erlang':'byte_size'
				  (ItemList_UC)
			  in  let <_cor9> =
				  %% Line 1135
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 1135
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 1135
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 1135
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 1135
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<LenEntered>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<ItemList_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 1134
						  call 'wxe_util':'cast'
						      (3055, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'autoCompShow',3}}] )
	    -| ['compiler_generated'] )
	end
'autoCompCancel'/1 =
    %% Line 1140
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1141
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1143
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1142
		      call 'wxe_util':'cast'
			  (3056, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'autoCompCancel',1}}] )
	    -| ['compiler_generated'] )
	end
'autoCompActive'/1 =
    %% Line 1148
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1149
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1151
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1150
		      call 'wxe_util':'call'
			  (3057, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'autoCompActive',1}}] )
	    -| ['compiler_generated'] )
	end
'autoCompPosStart'/1 =
    %% Line 1156
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1157
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1159
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1158
		      call 'wxe_util':'call'
			  (3058, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'autoCompPosStart',1}}] )
	    -| ['compiler_generated'] )
	end
'autoCompComplete'/1 =
    %% Line 1164
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1165
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1167
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1166
		      call 'wxe_util':'cast'
			  (3059, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'autoCompComplete',1}}] )
	    -| ['compiler_generated'] )
	end
'autoCompStops'/2 =
    %% Line 1172
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},CharacterSet>
	      when %% Line 1173
		call 'erlang':'is_list'
		    (CharacterSet) ->
	      do  %% Line 1174
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <CharacterSet_UC> =
		      %% Line 1175
		      call 'unicode':'characters_to_binary'
			  ([CharacterSet|[0]])
		  in  let <_cor10> =
			  %% Line 1177
			  call 'erlang':'byte_size'
			      (CharacterSet_UC)
		      in  let <_cor5> =
			      %% Line 1177
			      call 'erlang':'byte_size'
				  (CharacterSet_UC)
			  in  let <_cor6> =
				  %% Line 1177
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 1177
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 1177
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 1177
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 1177
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<CharacterSet_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 1176
						  call 'wxe_util':'cast'
						      (3060, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'autoCompStops',2}}] )
	    -| ['compiler_generated'] )
	end
'autoCompSetSeparator'/2 =
    %% Line 1182
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},SeparatorCharacter>
	      when %% Line 1183
		call 'erlang':'is_integer'
		    (SeparatorCharacter) ->
	      do  %% Line 1184
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1186
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<SeparatorCharacter>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1185
		      call 'wxe_util':'cast'
			  (3061, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'autoCompSetSeparator',2}}] )
	    -| ['compiler_generated'] )
	end
'autoCompGetSeparator'/1 =
    %% Line 1191
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1192
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1194
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1193
		      call 'wxe_util':'call'
			  (3062, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'autoCompGetSeparator',1}}] )
	    -| ['compiler_generated'] )
	end
'autoCompSelect'/2 =
    %% Line 1199
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Text>
	      when %% Line 1200
		call 'erlang':'is_list'
		    (Text) ->
	      do  %% Line 1201
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 1202
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <_cor10> =
			  %% Line 1204
			  call 'erlang':'byte_size'
			      (Text_UC)
		      in  let <_cor5> =
			      %% Line 1204
			      call 'erlang':'byte_size'
				  (Text_UC)
			  in  let <_cor6> =
				  %% Line 1204
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 1204
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 1204
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 1204
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 1204
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 1203
						  call 'wxe_util':'cast'
						      (3063, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'autoCompSelect',2}}] )
	    -| ['compiler_generated'] )
	end
'autoCompSetCancelAtStart'/2 =
    %% Line 1209
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Cancel>
	      when %% Line 1210
		call 'erlang':'is_boolean'
		    (Cancel) ->
	      do  %% Line 1211
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1213
		      call 'wxe_util':'from_bool'
			  (Cancel)
		  in  let <_cor5> =
			  %% Line 1213
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 1212
			  call 'wxe_util':'cast'
			      (3064, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'autoCompSetCancelAtStart',2}}] )
	    -| ['compiler_generated'] )
	end
'autoCompGetCancelAtStart'/1 =
    %% Line 1218
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1219
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1221
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1220
		      call 'wxe_util':'call'
			  (3065, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'autoCompGetCancelAtStart',1}}] )
	    -| ['compiler_generated'] )
	end
'autoCompSetFillUps'/2 =
    %% Line 1226
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},CharacterSet>
	      when %% Line 1227
		call 'erlang':'is_list'
		    (CharacterSet) ->
	      do  %% Line 1228
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <CharacterSet_UC> =
		      %% Line 1229
		      call 'unicode':'characters_to_binary'
			  ([CharacterSet|[0]])
		  in  let <_cor10> =
			  %% Line 1231
			  call 'erlang':'byte_size'
			      (CharacterSet_UC)
		      in  let <_cor5> =
			      %% Line 1231
			      call 'erlang':'byte_size'
				  (CharacterSet_UC)
			  in  let <_cor6> =
				  %% Line 1231
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 1231
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 1231
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 1231
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 1231
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<CharacterSet_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 1230
						  call 'wxe_util':'cast'
						      (3066, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'autoCompSetFillUps',2}}] )
	    -| ['compiler_generated'] )
	end
'autoCompSetChooseSingle'/2 =
    %% Line 1236
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},ChooseSingle>
	      when %% Line 1237
		call 'erlang':'is_boolean'
		    (ChooseSingle) ->
	      do  %% Line 1238
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1240
		      call 'wxe_util':'from_bool'
			  (ChooseSingle)
		  in  let <_cor5> =
			  %% Line 1240
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 1239
			  call 'wxe_util':'cast'
			      (3067, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'autoCompSetChooseSingle',2}}] )
	    -| ['compiler_generated'] )
	end
'autoCompGetChooseSingle'/1 =
    %% Line 1245
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1246
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1248
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1247
		      call 'wxe_util':'call'
			  (3068, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'autoCompGetChooseSingle',1}}] )
	    -| ['compiler_generated'] )
	end
'autoCompSetIgnoreCase'/2 =
    %% Line 1253
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},IgnoreCase>
	      when %% Line 1254
		call 'erlang':'is_boolean'
		    (IgnoreCase) ->
	      do  %% Line 1255
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1257
		      call 'wxe_util':'from_bool'
			  (IgnoreCase)
		  in  let <_cor5> =
			  %% Line 1257
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 1256
			  call 'wxe_util':'cast'
			      (3069, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'autoCompSetIgnoreCase',2}}] )
	    -| ['compiler_generated'] )
	end
'autoCompGetIgnoreCase'/1 =
    %% Line 1262
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1263
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1265
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1264
		      call 'wxe_util':'call'
			  (3070, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'autoCompGetIgnoreCase',1}}] )
	    -| ['compiler_generated'] )
	end
'userListShow'/3 =
    %% Line 1270
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},ListType,ItemList>
	      when let <_cor3> =
		    %% Line 1271
		    call 'erlang':'is_integer'
			(ListType)
		in  let <_cor4> =
			%% Line 1271
			call 'erlang':'is_list'
			    (ItemList)
		    in  %% Line 1271
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 1272
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <ItemList_UC> =
		      %% Line 1273
		      call 'unicode':'characters_to_binary'
			  ([ItemList|[0]])
		  in  let <_cor13> =
			  %% Line 1275
			  call 'erlang':'byte_size'
			      (ItemList_UC)
		      in  let <_cor8> =
			      %% Line 1275
			      call 'erlang':'byte_size'
				  (ItemList_UC)
			  in  let <_cor9> =
				  %% Line 1275
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 1275
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 1275
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 1275
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 1275
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<ListType>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<ItemList_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 1274
						  call 'wxe_util':'cast'
						      (3071, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'userListShow',3}}] )
	    -| ['compiler_generated'] )
	end
'autoCompSetAutoHide'/2 =
    %% Line 1280
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},AutoHide>
	      when %% Line 1281
		call 'erlang':'is_boolean'
		    (AutoHide) ->
	      do  %% Line 1282
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1284
		      call 'wxe_util':'from_bool'
			  (AutoHide)
		  in  let <_cor5> =
			  %% Line 1284
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 1283
			  call 'wxe_util':'cast'
			      (3072, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'autoCompSetAutoHide',2}}] )
	    -| ['compiler_generated'] )
	end
'autoCompGetAutoHide'/1 =
    %% Line 1289
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1290
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1292
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1291
		      call 'wxe_util':'call'
			  (3073, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'autoCompGetAutoHide',1}}] )
	    -| ['compiler_generated'] )
	end
'autoCompSetDropRestOfWord'/2 =
    %% Line 1297
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},DropRestOfWord>
	      when %% Line 1298
		call 'erlang':'is_boolean'
		    (DropRestOfWord) ->
	      do  %% Line 1299
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1301
		      call 'wxe_util':'from_bool'
			  (DropRestOfWord)
		  in  let <_cor5> =
			  %% Line 1301
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 1300
			  call 'wxe_util':'cast'
			      (3074, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'autoCompSetDropRestOfWord',2}}] )
	    -| ['compiler_generated'] )
	end
'autoCompGetDropRestOfWord'/1 =
    %% Line 1306
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1307
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1309
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1308
		      call 'wxe_util':'call'
			  (3075, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'autoCompGetDropRestOfWord',1}}] )
	    -| ['compiler_generated'] )
	end
'registerImage'/3 =
    %% Line 1314
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Type,{'wx_ref',BmpRef,BmpT,_cor12}>
	      when %% Line 1315
		call 'erlang':'is_integer'
		    (Type) ->
	      do  %% Line 1316
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 1317
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (BmpT,
				       'wxBitmap') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call BmpT:'parent_class'
				    ('wxBitmap')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor7> =
			  %% Line 1319
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Type>(32,1,'integer',['unsigned'|['native']]),
			    #<BmpRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 1318
			  call 'wxe_util':'cast'
			      (3076, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'registerImage',3}}] )
	    -| ['compiler_generated'] )
	end
'clearRegisteredImages'/1 =
    %% Line 1324
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1325
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1327
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1326
		      call 'wxe_util':'cast'
			  (3077, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'clearRegisteredImages',1}}] )
	    -| ['compiler_generated'] )
	end
'autoCompGetTypeSeparator'/1 =
    %% Line 1332
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1333
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1335
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1334
		      call 'wxe_util':'call'
			  (3078, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'autoCompGetTypeSeparator',1}}] )
	    -| ['compiler_generated'] )
	end
'autoCompSetTypeSeparator'/2 =
    %% Line 1340
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},SeparatorCharacter>
	      when %% Line 1341
		call 'erlang':'is_integer'
		    (SeparatorCharacter) ->
	      do  %% Line 1342
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1344
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<SeparatorCharacter>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1343
		      call 'wxe_util':'cast'
			  (3079, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'autoCompSetTypeSeparator',2}}] )
	    -| ['compiler_generated'] )
	end
'autoCompSetMaxWidth'/2 =
    %% Line 1349
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},CharacterCount>
	      when %% Line 1350
		call 'erlang':'is_integer'
		    (CharacterCount) ->
	      do  %% Line 1351
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1353
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<CharacterCount>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1352
		      call 'wxe_util':'cast'
			  (3080, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'autoCompSetMaxWidth',2}}] )
	    -| ['compiler_generated'] )
	end
'autoCompGetMaxWidth'/1 =
    %% Line 1358
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1359
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1361
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1360
		      call 'wxe_util':'call'
			  (3081, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'autoCompGetMaxWidth',1}}] )
	    -| ['compiler_generated'] )
	end
'autoCompSetMaxHeight'/2 =
    %% Line 1366
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},RowCount>
	      when %% Line 1367
		call 'erlang':'is_integer'
		    (RowCount) ->
	      do  %% Line 1368
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1370
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<RowCount>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1369
		      call 'wxe_util':'cast'
			  (3082, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'autoCompSetMaxHeight',2}}] )
	    -| ['compiler_generated'] )
	end
'autoCompGetMaxHeight'/1 =
    %% Line 1375
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1376
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1378
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1377
		      call 'wxe_util':'call'
			  (3083, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'autoCompGetMaxHeight',1}}] )
	    -| ['compiler_generated'] )
	end
'setIndent'/2 =
    %% Line 1383
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},IndentSize>
	      when %% Line 1384
		call 'erlang':'is_integer'
		    (IndentSize) ->
	      do  %% Line 1385
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1387
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<IndentSize>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1386
		      call 'wxe_util':'cast'
			  (3084, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setIndent',2}}] )
	    -| ['compiler_generated'] )
	end
'getIndent'/1 =
    %% Line 1392
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1393
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1395
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1394
		      call 'wxe_util':'call'
			  (3085, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getIndent',1}}] )
	    -| ['compiler_generated'] )
	end
'setUseTabs'/2 =
    %% Line 1400
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},UseTabs>
	      when %% Line 1401
		call 'erlang':'is_boolean'
		    (UseTabs) ->
	      do  %% Line 1402
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1404
		      call 'wxe_util':'from_bool'
			  (UseTabs)
		  in  let <_cor5> =
			  %% Line 1404
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 1403
			  call 'wxe_util':'cast'
			      (3086, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setUseTabs',2}}] )
	    -| ['compiler_generated'] )
	end
'getUseTabs'/1 =
    %% Line 1409
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1410
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1412
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1411
		      call 'wxe_util':'call'
			  (3087, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getUseTabs',1}}] )
	    -| ['compiler_generated'] )
	end
'setLineIndentation'/3 =
    %% Line 1417
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Line,IndentSize>
	      when let <_cor3> =
		    %% Line 1418
		    call 'erlang':'is_integer'
			(Line)
		in  let <_cor4> =
			%% Line 1418
			call 'erlang':'is_integer'
			    (IndentSize)
		    in  %% Line 1418
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 1419
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 1421
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']]),
			#<IndentSize>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1420
		      call 'wxe_util':'cast'
			  (3088, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setLineIndentation',3}}] )
	    -| ['compiler_generated'] )
	end
'getLineIndentation'/2 =
    %% Line 1426
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 1427
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 1428
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1430
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1429
		      call 'wxe_util':'call'
			  (3089, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getLineIndentation',2}}] )
	    -| ['compiler_generated'] )
	end
'getLineIndentPosition'/2 =
    %% Line 1435
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 1436
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 1437
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1439
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1438
		      call 'wxe_util':'call'
			  (3090, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getLineIndentPosition',2}}] )
	    -| ['compiler_generated'] )
	end
'getColumn'/2 =
    %% Line 1444
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 1445
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 1446
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1448
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1447
		      call 'wxe_util':'call'
			  (3091, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getColumn',2}}] )
	    -| ['compiler_generated'] )
	end
'setUseHorizontalScrollBar'/2 =
    %% Line 1453
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Show>
	      when %% Line 1454
		call 'erlang':'is_boolean'
		    (Show) ->
	      do  %% Line 1455
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1457
		      call 'wxe_util':'from_bool'
			  (Show)
		  in  let <_cor5> =
			  %% Line 1457
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 1456
			  call 'wxe_util':'cast'
			      (3092, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setUseHorizontalScrollBar',2}}] )
	    -| ['compiler_generated'] )
	end
'getUseHorizontalScrollBar'/1 =
    %% Line 1462
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1463
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1465
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1464
		      call 'wxe_util':'call'
			  (3093, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getUseHorizontalScrollBar',1}}] )
	    -| ['compiler_generated'] )
	end
'setIndentationGuides'/2 =
    %% Line 1470
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Show>
	      when %% Line 1471
		call 'erlang':'is_boolean'
		    (Show) ->
	      do  %% Line 1472
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1474
		      call 'wxe_util':'from_bool'
			  (Show)
		  in  let <_cor5> =
			  %% Line 1474
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 1473
			  call 'wxe_util':'cast'
			      (3094, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setIndentationGuides',2}}] )
	    -| ['compiler_generated'] )
	end
'getIndentationGuides'/1 =
    %% Line 1479
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1480
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1482
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1481
		      call 'wxe_util':'call'
			  (3095, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getIndentationGuides',1}}] )
	    -| ['compiler_generated'] )
	end
'setHighlightGuide'/2 =
    %% Line 1487
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Column>
	      when %% Line 1488
		call 'erlang':'is_integer'
		    (Column) ->
	      do  %% Line 1489
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1491
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Column>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1490
		      call 'wxe_util':'cast'
			  (3096, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setHighlightGuide',2}}] )
	    -| ['compiler_generated'] )
	end
'getHighlightGuide'/1 =
    %% Line 1496
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1497
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1499
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1498
		      call 'wxe_util':'call'
			  (3097, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getHighlightGuide',1}}] )
	    -| ['compiler_generated'] )
	end
'getLineEndPosition'/2 =
    %% Line 1504
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 1505
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 1506
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1508
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1507
		      call 'wxe_util':'call'
			  (3098, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getLineEndPosition',2}}] )
	    -| ['compiler_generated'] )
	end
'getCodePage'/1 =
    %% Line 1513
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1514
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1516
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1515
		      call 'wxe_util':'call'
			  (3099, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCodePage',1}}] )
	    -| ['compiler_generated'] )
	end
'getCaretForeground'/1 =
    %% Line 1521
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1522
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1524
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1523
		      call 'wxe_util':'call'
			  (3100, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCaretForeground',1}}] )
	    -| ['compiler_generated'] )
	end
'getReadOnly'/1 =
    %% Line 1529
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1530
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1532
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1531
		      call 'wxe_util':'call'
			  (3101, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getReadOnly',1}}] )
	    -| ['compiler_generated'] )
	end
'setCurrentPos'/2 =
    %% Line 1537
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 1538
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 1539
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1541
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1540
		      call 'wxe_util':'cast'
			  (3102, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setCurrentPos',2}}] )
	    -| ['compiler_generated'] )
	end
'setSelectionStart'/2 =
    %% Line 1546
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 1547
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 1548
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1550
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1549
		      call 'wxe_util':'cast'
			  (3103, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setSelectionStart',2}}] )
	    -| ['compiler_generated'] )
	end
'getSelectionStart'/1 =
    %% Line 1555
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1556
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1558
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1557
		      call 'wxe_util':'call'
			  (3104, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSelectionStart',1}}] )
	    -| ['compiler_generated'] )
	end
'setSelectionEnd'/2 =
    %% Line 1563
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 1564
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 1565
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1567
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1566
		      call 'wxe_util':'cast'
			  (3105, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setSelectionEnd',2}}] )
	    -| ['compiler_generated'] )
	end
'getSelectionEnd'/1 =
    %% Line 1572
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1573
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1575
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1574
		      call 'wxe_util':'call'
			  (3106, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSelectionEnd',1}}] )
	    -| ['compiler_generated'] )
	end
'setPrintMagnification'/2 =
    %% Line 1580
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Magnification>
	      when %% Line 1581
		call 'erlang':'is_integer'
		    (Magnification) ->
	      do  %% Line 1582
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1584
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Magnification>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1583
		      call 'wxe_util':'cast'
			  (3107, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setPrintMagnification',2}}] )
	    -| ['compiler_generated'] )
	end
'getPrintMagnification'/1 =
    %% Line 1589
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1590
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1592
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1591
		      call 'wxe_util':'call'
			  (3108, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPrintMagnification',1}}] )
	    -| ['compiler_generated'] )
	end
'setPrintColourMode'/2 =
    %% Line 1597
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Mode>
	      when %% Line 1598
		call 'erlang':'is_integer'
		    (Mode) ->
	      do  %% Line 1599
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1601
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Mode>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1600
		      call 'wxe_util':'cast'
			  (3109, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setPrintColourMode',2}}] )
	    -| ['compiler_generated'] )
	end
'getPrintColourMode'/1 =
    %% Line 1606
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1607
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1609
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1608
		      call 'wxe_util':'call'
			  (3110, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPrintColourMode',1}}] )
	    -| ['compiler_generated'] )
	end
'findText'/4 =
    %% Line 1615
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor13,_cor14,_cor15},MinPos,MaxPos,Text>
	      when %% Line 1616
		( try
		      let <_cor4> =
			  call 'erlang':'is_integer'
			      (MinPos)
		      in  let <_cor5> =
			      call 'erlang':'is_integer'
				  (MaxPos)
			  in  let <_cor6> =
				  call 'erlang':'is_list'
				      (Text)
			      in  let <_cor7> =
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'and'
									     -| ['compiler_generated'] )
					    (_cor5, _cor6)
					-| ['compiler_generated'] )
				  in  ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'and'
									     -| ['compiler_generated'] )
					    (_cor4, _cor7)
					-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 1617
	      apply 'findText'/5
		  (This, MinPos, MaxPos, Text, [])
	  ( <_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'findText',4}}] )
	    -| ['compiler_generated'] )
	end
'findText'/5 =
    %% Line 1623
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor34},MinPos,MaxPos,Text,Options>
	      when %% Line 1624
		try
		    let <_cor5> =
			call 'erlang':'is_integer'
			    (MinPos)
		    in  let <_cor6> =
			    call 'erlang':'is_integer'
				(MaxPos)
			in  let <_cor7> =
				call 'erlang':'is_list'
				    (Text)
			    in  let <_cor8> =
				    call 'erlang':'is_list'
					(Options)
				in  let <_cor9> =
					call 'erlang':'and'
					    (_cor7, _cor8)
				    in  let <_cor10> =
					    call 'erlang':'and'
						(_cor6, _cor9)
					in  call 'erlang':'and'
						(_cor5, _cor10)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 1625
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 1626
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <MOpts> =
			  %% Line 1627
			  ( fun (_cor16,_cor15) ->
				case <_cor16,_cor15> of
				  <{'flags',Flags},Acc> when 'true' ->
				      let <_cor14> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<Flags>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor14|Acc]
				  %% Line 1628
				  <BadOpt,_cor35> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-findText/5-fun-0-'}}] )
		      in  let <_cor20> =
			      %% Line 1629
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 1629
				  call 'erlang':'list_to_binary'
				      (_cor20)
			      in  let <_cor27> =
				      %% Line 1631
				      call 'erlang':'byte_size'
					  (Text_UC)
				  in  let <_cor22> =
					  %% Line 1631
					  call 'erlang':'byte_size'
					      (Text_UC)
				      in  let <_cor23> =
					      %% Line 1631
					      call 'erlang':'+'
						  (0, _cor22)
					  in  let <_cor24> =
						  %% Line 1631
						  call 'erlang':'band'
						      (_cor23, 7)
					      in  let <_cor25> =
						      %% Line 1631
						      call 'erlang':'-'
							  (8, _cor24)
						  in  let <_cor26> =
							  %% Line 1631
							  call 'erlang':'band'
							      (_cor25, 7)
						      in  let <_cor28> =
							      %% Line 1631
							      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								#<MinPos>(32,1,'integer',['unsigned'|['native']]),
								#<MaxPos>(32,1,'integer',['unsigned'|['native']]),
								#<_cor27>(32,1,'integer',['unsigned'|['native']]),
								#<Text_UC>('all',8,'binary',['unsigned'|['big']]),
								#<0>(_cor26,8,'integer',['unsigned'|['big']]),
								#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							  in  %% Line 1630
							      call 'wxe_util':'call'
								  (3111, _cor28)
	  ( <_cor33,_cor32,_cor31,_cor30,_cor29> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor33,_cor32,_cor31,_cor30,_cor29})
		  -| [{'function_name',{'findText',5}}] )
	    -| ['compiler_generated'] )
	end
'formatRange'/8 =
    %% Line 1636
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor44},DoDraw,StartPos,EndPos,{'wx_ref',DrawRef,DrawT,_cor45},{'wx_ref',TargetRef,TargetT,_cor46},{RenderRectX,RenderRectY,RenderRectW,RenderRectH},{PageRectX,PageRectY,PageRectW,PageRectH}>
	      when %% Line 1637
		try
		    let <_cor8> =
			call 'erlang':'is_boolean'
			    (DoDraw)
		    in  let <_cor9> =
			    call 'erlang':'is_integer'
				(StartPos)
			in  let <_cor10> =
				call 'erlang':'is_integer'
				    (EndPos)
			    in  let <_cor11> =
				    call 'erlang':'is_integer'
					(RenderRectX)
				in  let <_cor12> =
					call 'erlang':'is_integer'
					    (RenderRectY)
				    in  let <_cor13> =
					    call 'erlang':'is_integer'
						(RenderRectW)
					in  let <_cor14> =
						call 'erlang':'is_integer'
						    (RenderRectH)
					    in  let <_cor15> =
						    call 'erlang':'is_integer'
							(PageRectX)
						in  let <_cor16> =
							call 'erlang':'is_integer'
							    (PageRectY)
						    in  let <_cor17> =
							    call 'erlang':'is_integer'
								(PageRectW)
							in  let <_cor18> =
								call 'erlang':'is_integer'
								    (PageRectH)
							    in  let <_cor19> =
								    call 'erlang':'and'
									(_cor17, _cor18)
								in  let <_cor20> =
									call 'erlang':'and'
									    (_cor16, _cor19)
								    in  let <_cor21> =
									    call 'erlang':'and'
										(_cor15, _cor20)
									in  let <_cor22> =
										call 'erlang':'and'
										    (_cor14, _cor21)
									    in  let <_cor23> =
										    call 'erlang':'and'
											(_cor13, _cor22)
										in  let <_cor24> =
											call 'erlang':'and'
											    (_cor12, _cor23)
										    in  let <_cor25> =
											    call 'erlang':'and'
												(_cor11, _cor24)
											in  let <_cor26> =
												call 'erlang':'and'
												    (_cor10, _cor25)
											    in  let <_cor27> =
												    call 'erlang':'and'
													(_cor9, _cor26)
												in  call 'erlang':'and'
													(_cor8, _cor27)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 1638
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 1639
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (DrawT,
				       'wxDC') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call DrawT:'parent_class'
				    ('wxDC')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      do  %% Line 1640
			  ( case <> of
			      ( <>
				    when call 'erlang':'=:='
					  (TargetT,
					   'wxDC') ->
				    'ok'
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    call TargetT:'parent_class'
					('wxDC')
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
			  let <_cor34> =
			      %% Line 1642
			      call 'wxe_util':'from_bool'
				  (DoDraw)
			  in  let <_cor35> =
				  %% Line 1642
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<_cor34>(32,1,'integer',['unsigned'|['native']]),
				    #<StartPos>(32,1,'integer',['unsigned'|['native']]),
				    #<EndPos>(32,1,'integer',['unsigned'|['native']]),
				    #<DrawRef>(32,1,'integer',['unsigned'|['native']]),
				    #<TargetRef>(32,1,'integer',['unsigned'|['native']]),
				    #<RenderRectX>(32,1,'integer',['unsigned'|['native']]),
				    #<RenderRectY>(32,1,'integer',['unsigned'|['native']]),
				    #<RenderRectW>(32,1,'integer',['unsigned'|['native']]),
				    #<RenderRectH>(32,1,'integer',['unsigned'|['native']]),
				    #<PageRectX>(32,1,'integer',['unsigned'|['native']]),
				    #<PageRectY>(32,1,'integer',['unsigned'|['native']]),
				    #<PageRectW>(32,1,'integer',['unsigned'|['native']]),
				    #<PageRectH>(32,1,'integer',['unsigned'|['native']])}#
			      in  %% Line 1641
				  call 'wxe_util':'call'
				      (3112, _cor35)
	  ( <_cor43,_cor42,_cor41,_cor40,_cor39,_cor38,_cor37,_cor36> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor43,_cor42,_cor41,_cor40,_cor39,_cor38,_cor37,_cor36})
		  -| [{'function_name',{'formatRange',8}}] )
	    -| ['compiler_generated'] )
	end
'getFirstVisibleLine'/1 =
    %% Line 1647
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1648
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1650
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1649
		      call 'wxe_util':'call'
			  (3113, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getFirstVisibleLine',1}}] )
	    -| ['compiler_generated'] )
	end
'getLine'/2 =
    %% Line 1655
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 1656
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 1657
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1659
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1658
		      call 'wxe_util':'call'
			  (3114, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getLine',2}}] )
	    -| ['compiler_generated'] )
	end
'getLineCount'/1 =
    %% Line 1664
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1665
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1667
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1666
		      call 'wxe_util':'call'
			  (3115, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLineCount',1}}] )
	    -| ['compiler_generated'] )
	end
'setMarginLeft'/2 =
    %% Line 1672
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},PixelWidth>
	      when %% Line 1673
		call 'erlang':'is_integer'
		    (PixelWidth) ->
	      do  %% Line 1674
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1676
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PixelWidth>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1675
		      call 'wxe_util':'cast'
			  (3116, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setMarginLeft',2}}] )
	    -| ['compiler_generated'] )
	end
'getMarginLeft'/1 =
    %% Line 1681
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1682
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1684
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1683
		      call 'wxe_util':'call'
			  (3117, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getMarginLeft',1}}] )
	    -| ['compiler_generated'] )
	end
'setMarginRight'/2 =
    %% Line 1689
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},PixelWidth>
	      when %% Line 1690
		call 'erlang':'is_integer'
		    (PixelWidth) ->
	      do  %% Line 1691
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1693
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PixelWidth>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1692
		      call 'wxe_util':'cast'
			  (3118, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setMarginRight',2}}] )
	    -| ['compiler_generated'] )
	end
'getMarginRight'/1 =
    %% Line 1698
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1699
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1701
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1700
		      call 'wxe_util':'call'
			  (3119, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getMarginRight',1}}] )
	    -| ['compiler_generated'] )
	end
'getModify'/1 =
    %% Line 1706
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1707
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1709
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1708
		      call 'wxe_util':'call'
			  (3120, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getModify',1}}] )
	    -| ['compiler_generated'] )
	end
'setSelection'/3 =
    %% Line 1714
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Start,End>
	      when let <_cor3> =
		    %% Line 1715
		    call 'erlang':'is_integer'
			(Start)
		in  let <_cor4> =
			%% Line 1715
			call 'erlang':'is_integer'
			    (End)
		    in  %% Line 1715
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 1716
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 1718
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Start>(32,1,'integer',['unsigned'|['native']]),
			#<End>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1717
		      call 'wxe_util':'cast'
			  (3121, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setSelection',3}}] )
	    -| ['compiler_generated'] )
	end
'getSelectedText'/1 =
    %% Line 1723
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1724
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1726
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1725
		      call 'wxe_util':'call'
			  (3122, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSelectedText',1}}] )
	    -| ['compiler_generated'] )
	end
'getTextRange'/3 =
    %% Line 1731
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},StartPos,EndPos>
	      when let <_cor3> =
		    %% Line 1732
		    call 'erlang':'is_integer'
			(StartPos)
		in  let <_cor4> =
			%% Line 1732
			call 'erlang':'is_integer'
			    (EndPos)
		    in  %% Line 1732
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 1733
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 1735
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<StartPos>(32,1,'integer',['unsigned'|['native']]),
			#<EndPos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1734
		      call 'wxe_util':'call'
			  (3123, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'getTextRange',3}}] )
	    -| ['compiler_generated'] )
	end
'hideSelection'/2 =
    %% Line 1740
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Normal>
	      when %% Line 1741
		call 'erlang':'is_boolean'
		    (Normal) ->
	      do  %% Line 1742
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1744
		      call 'wxe_util':'from_bool'
			  (Normal)
		  in  let <_cor5> =
			  %% Line 1744
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 1743
			  call 'wxe_util':'cast'
			      (3124, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'hideSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'lineFromPosition'/2 =
    %% Line 1749
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 1750
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 1751
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1753
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1752
		      call 'wxe_util':'call'
			  (3125, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'lineFromPosition',2}}] )
	    -| ['compiler_generated'] )
	end
'positionFromLine'/2 =
    %% Line 1758
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 1759
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 1760
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1762
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1761
		      call 'wxe_util':'call'
			  (3126, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'positionFromLine',2}}] )
	    -| ['compiler_generated'] )
	end
'lineScroll'/3 =
    %% Line 1767
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Columns,Lines>
	      when let <_cor3> =
		    %% Line 1768
		    call 'erlang':'is_integer'
			(Columns)
		in  let <_cor4> =
			%% Line 1768
			call 'erlang':'is_integer'
			    (Lines)
		    in  %% Line 1768
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 1769
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 1771
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Columns>(32,1,'integer',['unsigned'|['native']]),
			#<Lines>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1770
		      call 'wxe_util':'cast'
			  (3127, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'lineScroll',3}}] )
	    -| ['compiler_generated'] )
	end
'ensureCaretVisible'/1 =
    %% Line 1776
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1777
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1779
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1778
		      call 'wxe_util':'cast'
			  (3128, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'ensureCaretVisible',1}}] )
	    -| ['compiler_generated'] )
	end
'replaceSelection'/2 =
    %% Line 1784
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Text>
	      when %% Line 1785
		call 'erlang':'is_list'
		    (Text) ->
	      do  %% Line 1786
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 1787
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <_cor10> =
			  %% Line 1789
			  call 'erlang':'byte_size'
			      (Text_UC)
		      in  let <_cor5> =
			      %% Line 1789
			      call 'erlang':'byte_size'
				  (Text_UC)
			  in  let <_cor6> =
				  %% Line 1789
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 1789
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 1789
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 1789
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 1789
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 1788
						  call 'wxe_util':'cast'
						      (3129, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'replaceSelection',2}}] )
	    -| ['compiler_generated'] )
	end
'setReadOnly'/2 =
    %% Line 1794
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},ReadOnly>
	      when %% Line 1795
		call 'erlang':'is_boolean'
		    (ReadOnly) ->
	      do  %% Line 1796
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1798
		      call 'wxe_util':'from_bool'
			  (ReadOnly)
		  in  let <_cor5> =
			  %% Line 1798
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 1797
			  call 'wxe_util':'cast'
			      (3130, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setReadOnly',2}}] )
	    -| ['compiler_generated'] )
	end
'canPaste'/1 =
    %% Line 1803
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1804
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1806
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1805
		      call 'wxe_util':'call'
			  (3131, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'canPaste',1}}] )
	    -| ['compiler_generated'] )
	end
'canUndo'/1 =
    %% Line 1811
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1812
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1814
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1813
		      call 'wxe_util':'call'
			  (3132, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'canUndo',1}}] )
	    -| ['compiler_generated'] )
	end
'emptyUndoBuffer'/1 =
    %% Line 1819
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1820
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1822
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1821
		      call 'wxe_util':'cast'
			  (3133, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'emptyUndoBuffer',1}}] )
	    -| ['compiler_generated'] )
	end
'undo'/1 =
    %% Line 1827
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1828
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1830
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1829
		      call 'wxe_util':'cast'
			  (3134, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'undo',1}}] )
	    -| ['compiler_generated'] )
	end
'cut'/1 =
    %% Line 1835
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1836
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1838
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1837
		      call 'wxe_util':'cast'
			  (3135, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'cut',1}}] )
	    -| ['compiler_generated'] )
	end
'copy'/1 =
    %% Line 1843
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1844
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1846
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1845
		      call 'wxe_util':'cast'
			  (3136, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'copy',1}}] )
	    -| ['compiler_generated'] )
	end
'paste'/1 =
    %% Line 1851
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1852
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1854
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1853
		      call 'wxe_util':'cast'
			  (3137, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'paste',1}}] )
	    -| ['compiler_generated'] )
	end
'clear'/1 =
    %% Line 1859
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1860
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1862
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1861
		      call 'wxe_util':'cast'
			  (3138, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'clear',1}}] )
	    -| ['compiler_generated'] )
	end
'setText'/2 =
    %% Line 1867
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Text>
	      when %% Line 1868
		call 'erlang':'is_list'
		    (Text) ->
	      do  %% Line 1869
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 1870
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <_cor10> =
			  %% Line 1872
			  call 'erlang':'byte_size'
			      (Text_UC)
		      in  let <_cor5> =
			      %% Line 1872
			      call 'erlang':'byte_size'
				  (Text_UC)
			  in  let <_cor6> =
				  %% Line 1872
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 1872
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 1872
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 1872
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 1872
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 1871
						  call 'wxe_util':'cast'
						      (3139, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setText',2}}] )
	    -| ['compiler_generated'] )
	end
'getText'/1 =
    %% Line 1877
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1878
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1880
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1879
		      call 'wxe_util':'call'
			  (3140, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getText',1}}] )
	    -| ['compiler_generated'] )
	end
'getTextLength'/1 =
    %% Line 1885
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1886
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1888
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1887
		      call 'wxe_util':'call'
			  (3141, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getTextLength',1}}] )
	    -| ['compiler_generated'] )
	end
'getOvertype'/1 =
    %% Line 1893
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1894
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1896
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1895
		      call 'wxe_util':'call'
			  (3142, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getOvertype',1}}] )
	    -| ['compiler_generated'] )
	end
'setCaretWidth'/2 =
    %% Line 1901
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},PixelWidth>
	      when %% Line 1902
		call 'erlang':'is_integer'
		    (PixelWidth) ->
	      do  %% Line 1903
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1905
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PixelWidth>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1904
		      call 'wxe_util':'cast'
			  (3143, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setCaretWidth',2}}] )
	    -| ['compiler_generated'] )
	end
'getCaretWidth'/1 =
    %% Line 1910
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1911
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1913
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1912
		      call 'wxe_util':'call'
			  (3144, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCaretWidth',1}}] )
	    -| ['compiler_generated'] )
	end
'setTargetStart'/2 =
    %% Line 1918
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 1919
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 1920
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1922
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1921
		      call 'wxe_util':'cast'
			  (3145, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setTargetStart',2}}] )
	    -| ['compiler_generated'] )
	end
'getTargetStart'/1 =
    %% Line 1927
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1928
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1930
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1929
		      call 'wxe_util':'call'
			  (3146, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getTargetStart',1}}] )
	    -| ['compiler_generated'] )
	end
'setTargetEnd'/2 =
    %% Line 1935
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 1936
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 1937
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1939
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1938
		      call 'wxe_util':'cast'
			  (3147, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setTargetEnd',2}}] )
	    -| ['compiler_generated'] )
	end
'getTargetEnd'/1 =
    %% Line 1944
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1945
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1947
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1946
		      call 'wxe_util':'call'
			  (3148, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getTargetEnd',1}}] )
	    -| ['compiler_generated'] )
	end
'replaceTarget'/2 =
    %% Line 1952
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Text>
	      when %% Line 1953
		call 'erlang':'is_list'
		    (Text) ->
	      do  %% Line 1954
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 1955
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <_cor10> =
			  %% Line 1957
			  call 'erlang':'byte_size'
			      (Text_UC)
		      in  let <_cor5> =
			      %% Line 1957
			      call 'erlang':'byte_size'
				  (Text_UC)
			  in  let <_cor6> =
				  %% Line 1957
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 1957
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 1957
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 1957
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 1957
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 1956
						  call 'wxe_util':'call'
						      (3149, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'replaceTarget',2}}] )
	    -| ['compiler_generated'] )
	end
'searchInTarget'/2 =
    %% Line 1962
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Text>
	      when %% Line 1963
		call 'erlang':'is_list'
		    (Text) ->
	      do  %% Line 1964
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 1965
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <_cor10> =
			  %% Line 1967
			  call 'erlang':'byte_size'
			      (Text_UC)
		      in  let <_cor5> =
			      %% Line 1967
			      call 'erlang':'byte_size'
				  (Text_UC)
			  in  let <_cor6> =
				  %% Line 1967
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 1967
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 1967
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 1967
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 1967
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 1966
						  call 'wxe_util':'call'
						      (3150, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'searchInTarget',2}}] )
	    -| ['compiler_generated'] )
	end
'setSearchFlags'/2 =
    %% Line 1972
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Flags>
	      when %% Line 1973
		call 'erlang':'is_integer'
		    (Flags) ->
	      do  %% Line 1974
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 1976
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Flags>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1975
		      call 'wxe_util':'cast'
			  (3151, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setSearchFlags',2}}] )
	    -| ['compiler_generated'] )
	end
'getSearchFlags'/1 =
    %% Line 1981
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 1982
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 1984
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 1983
		      call 'wxe_util':'call'
			  (3152, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSearchFlags',1}}] )
	    -| ['compiler_generated'] )
	end
'callTipShow'/3 =
    %% Line 1989
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},Pos,Definition>
	      when let <_cor3> =
		    %% Line 1990
		    call 'erlang':'is_integer'
			(Pos)
		in  let <_cor4> =
			%% Line 1990
			call 'erlang':'is_list'
			    (Definition)
		    in  %% Line 1990
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 1991
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Definition_UC> =
		      %% Line 1992
		      call 'unicode':'characters_to_binary'
			  ([Definition|[0]])
		  in  let <_cor13> =
			  %% Line 1994
			  call 'erlang':'byte_size'
			      (Definition_UC)
		      in  let <_cor8> =
			      %% Line 1994
			      call 'erlang':'byte_size'
				  (Definition_UC)
			  in  let <_cor9> =
				  %% Line 1994
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 1994
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 1994
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 1994
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 1994
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<Pos>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<Definition_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 1993
						  call 'wxe_util':'cast'
						      (3153, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'callTipShow',3}}] )
	    -| ['compiler_generated'] )
	end
'callTipCancel'/1 =
    %% Line 1999
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2000
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2002
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2001
		      call 'wxe_util':'cast'
			  (3154, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'callTipCancel',1}}] )
	    -| ['compiler_generated'] )
	end
'callTipActive'/1 =
    %% Line 2007
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2008
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2010
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2009
		      call 'wxe_util':'call'
			  (3155, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'callTipActive',1}}] )
	    -| ['compiler_generated'] )
	end
'callTipPosAtStart'/1 =
    %% Line 2015
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2016
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2018
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2017
		      call 'wxe_util':'call'
			  (3156, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'callTipPosAtStart',1}}] )
	    -| ['compiler_generated'] )
	end
'callTipSetHighlight'/3 =
    %% Line 2023
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Start,End>
	      when let <_cor3> =
		    %% Line 2024
		    call 'erlang':'is_integer'
			(Start)
		in  let <_cor4> =
			%% Line 2024
			call 'erlang':'is_integer'
			    (End)
		    in  %% Line 2024
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 2025
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 2027
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Start>(32,1,'integer',['unsigned'|['native']]),
			#<End>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2026
		      call 'wxe_util':'cast'
			  (3157, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'callTipSetHighlight',3}}] )
	    -| ['compiler_generated'] )
	end
'callTipSetBackground'/2 =
    %% Line 2032
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Back>
	      when let <_cor3> =
		    %% Line 2033
		    try
			let <_cor2> =
			    call 'erlang':'tuple_size'
				(Back)
			in  call 'erlang':'=:='
				(_cor2, 3)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor5> =
			%% Line 2033
			try
			    let <_cor4> =
				call 'erlang':'tuple_size'
				    (Back)
			    in  call 'erlang':'=:='
				    (_cor4, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 2033
			call 'erlang':'or'
			    (_cor3, _cor5) ->
	      do  %% Line 2034
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor8> =
		      %% Line 2036
		      call 'wxe_util':'colour_bin'
			  (Back)
		  in  let <_cor9> =
			  %% Line 2036
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor8>(16,8,'binary',['unsigned'|['big']])}#
		      in  %% Line 2035
			  call 'wxe_util':'cast'
			      (3158, _cor9)
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'callTipSetBackground',2}}] )
	    -| ['compiler_generated'] )
	end
'callTipSetForeground'/2 =
    %% Line 2041
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Fore>
	      when let <_cor3> =
		    %% Line 2042
		    try
			let <_cor2> =
			    call 'erlang':'tuple_size'
				(Fore)
			in  call 'erlang':'=:='
				(_cor2, 3)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor5> =
			%% Line 2042
			try
			    let <_cor4> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  call 'erlang':'=:='
				    (_cor4, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 2042
			call 'erlang':'or'
			    (_cor3, _cor5) ->
	      do  %% Line 2043
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor8> =
		      %% Line 2045
		      call 'wxe_util':'colour_bin'
			  (Fore)
		  in  let <_cor9> =
			  %% Line 2045
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor8>(16,8,'binary',['unsigned'|['big']])}#
		      in  %% Line 2044
			  call 'wxe_util':'cast'
			      (3159, _cor9)
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'callTipSetForeground',2}}] )
	    -| ['compiler_generated'] )
	end
'callTipSetForegroundHighlight'/2 =
    %% Line 2050
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Fore>
	      when let <_cor3> =
		    %% Line 2051
		    try
			let <_cor2> =
			    call 'erlang':'tuple_size'
				(Fore)
			in  call 'erlang':'=:='
				(_cor2, 3)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor5> =
			%% Line 2051
			try
			    let <_cor4> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  call 'erlang':'=:='
				    (_cor4, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 2051
			call 'erlang':'or'
			    (_cor3, _cor5) ->
	      do  %% Line 2052
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor8> =
		      %% Line 2054
		      call 'wxe_util':'colour_bin'
			  (Fore)
		  in  let <_cor9> =
			  %% Line 2054
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor8>(16,8,'binary',['unsigned'|['big']])}#
		      in  %% Line 2053
			  call 'wxe_util':'cast'
			      (3160, _cor9)
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'callTipSetForegroundHighlight',2}}] )
	    -| ['compiler_generated'] )
	end
'callTipUseStyle'/2 =
    %% Line 2059
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},TabSize>
	      when %% Line 2060
		call 'erlang':'is_integer'
		    (TabSize) ->
	      do  %% Line 2061
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2063
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<TabSize>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2062
		      call 'wxe_util':'cast'
			  (3161, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'callTipUseStyle',2}}] )
	    -| ['compiler_generated'] )
	end
'visibleFromDocLine'/2 =
    %% Line 2068
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 2069
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 2070
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2072
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2071
		      call 'wxe_util':'call'
			  (3162, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'visibleFromDocLine',2}}] )
	    -| ['compiler_generated'] )
	end
'docLineFromVisible'/2 =
    %% Line 2077
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},LineDisplay>
	      when %% Line 2078
		call 'erlang':'is_integer'
		    (LineDisplay) ->
	      do  %% Line 2079
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2081
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<LineDisplay>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2080
		      call 'wxe_util':'call'
			  (3163, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'docLineFromVisible',2}}] )
	    -| ['compiler_generated'] )
	end
'wrapCount'/2 =
    %% Line 2086
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 2087
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 2088
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2090
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2089
		      call 'wxe_util':'call'
			  (3164, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'wrapCount',2}}] )
	    -| ['compiler_generated'] )
	end
'setFoldLevel'/3 =
    %% Line 2095
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Line,Level>
	      when let <_cor3> =
		    %% Line 2096
		    call 'erlang':'is_integer'
			(Line)
		in  let <_cor4> =
			%% Line 2096
			call 'erlang':'is_integer'
			    (Level)
		    in  %% Line 2096
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 2097
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 2099
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']]),
			#<Level>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2098
		      call 'wxe_util':'cast'
			  (3165, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setFoldLevel',3}}] )
	    -| ['compiler_generated'] )
	end
'getFoldLevel'/2 =
    %% Line 2104
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 2105
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 2106
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2108
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2107
		      call 'wxe_util':'call'
			  (3166, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getFoldLevel',2}}] )
	    -| ['compiler_generated'] )
	end
'getLastChild'/3 =
    %% Line 2113
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Line,Level>
	      when let <_cor3> =
		    %% Line 2114
		    call 'erlang':'is_integer'
			(Line)
		in  let <_cor4> =
			%% Line 2114
			call 'erlang':'is_integer'
			    (Level)
		    in  %% Line 2114
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 2115
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 2117
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']]),
			#<Level>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2116
		      call 'wxe_util':'call'
			  (3167, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'getLastChild',3}}] )
	    -| ['compiler_generated'] )
	end
'getFoldParent'/2 =
    %% Line 2122
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 2123
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 2124
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2126
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2125
		      call 'wxe_util':'call'
			  (3168, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getFoldParent',2}}] )
	    -| ['compiler_generated'] )
	end
'showLines'/3 =
    %% Line 2131
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},LineStart,LineEnd>
	      when let <_cor3> =
		    %% Line 2132
		    call 'erlang':'is_integer'
			(LineStart)
		in  let <_cor4> =
			%% Line 2132
			call 'erlang':'is_integer'
			    (LineEnd)
		    in  %% Line 2132
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 2133
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 2135
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<LineStart>(32,1,'integer',['unsigned'|['native']]),
			#<LineEnd>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2134
		      call 'wxe_util':'cast'
			  (3169, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'showLines',3}}] )
	    -| ['compiler_generated'] )
	end
'hideLines'/3 =
    %% Line 2140
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},LineStart,LineEnd>
	      when let <_cor3> =
		    %% Line 2141
		    call 'erlang':'is_integer'
			(LineStart)
		in  let <_cor4> =
			%% Line 2141
			call 'erlang':'is_integer'
			    (LineEnd)
		    in  %% Line 2141
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 2142
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 2144
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<LineStart>(32,1,'integer',['unsigned'|['native']]),
			#<LineEnd>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2143
		      call 'wxe_util':'cast'
			  (3170, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'hideLines',3}}] )
	    -| ['compiler_generated'] )
	end
'getLineVisible'/2 =
    %% Line 2149
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 2150
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 2151
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2153
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2152
		      call 'wxe_util':'call'
			  (3171, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getLineVisible',2}}] )
	    -| ['compiler_generated'] )
	end
'setFoldExpanded'/3 =
    %% Line 2158
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Line,Expanded>
	      when let <_cor3> =
		    %% Line 2159
		    call 'erlang':'is_integer'
			(Line)
		in  let <_cor4> =
			%% Line 2159
			call 'erlang':'is_boolean'
			    (Expanded)
		    in  %% Line 2159
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 2160
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 2162
		      call 'wxe_util':'from_bool'
			  (Expanded)
		  in  let <_cor8> =
			  %% Line 2162
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Line>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 2161
			  call 'wxe_util':'cast'
			      (3172, _cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'setFoldExpanded',3}}] )
	    -| ['compiler_generated'] )
	end
'getFoldExpanded'/2 =
    %% Line 2167
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 2168
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 2169
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2171
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2170
		      call 'wxe_util':'call'
			  (3173, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getFoldExpanded',2}}] )
	    -| ['compiler_generated'] )
	end
'toggleFold'/2 =
    %% Line 2176
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 2177
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 2178
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2180
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2179
		      call 'wxe_util':'cast'
			  (3174, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'toggleFold',2}}] )
	    -| ['compiler_generated'] )
	end
'ensureVisible'/2 =
    %% Line 2185
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 2186
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 2187
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2189
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2188
		      call 'wxe_util':'cast'
			  (3175, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'ensureVisible',2}}] )
	    -| ['compiler_generated'] )
	end
'setFoldFlags'/2 =
    %% Line 2194
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Flags>
	      when %% Line 2195
		call 'erlang':'is_integer'
		    (Flags) ->
	      do  %% Line 2196
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2198
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Flags>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2197
		      call 'wxe_util':'cast'
			  (3176, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setFoldFlags',2}}] )
	    -| ['compiler_generated'] )
	end
'ensureVisibleEnforcePolicy'/2 =
    %% Line 2203
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 2204
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 2205
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2207
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2206
		      call 'wxe_util':'cast'
			  (3177, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'ensureVisibleEnforcePolicy',2}}] )
	    -| ['compiler_generated'] )
	end
'setTabIndents'/2 =
    %% Line 2212
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},TabIndents>
	      when %% Line 2213
		call 'erlang':'is_boolean'
		    (TabIndents) ->
	      do  %% Line 2214
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2216
		      call 'wxe_util':'from_bool'
			  (TabIndents)
		  in  let <_cor5> =
			  %% Line 2216
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 2215
			  call 'wxe_util':'cast'
			      (3178, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setTabIndents',2}}] )
	    -| ['compiler_generated'] )
	end
'getTabIndents'/1 =
    %% Line 2221
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2222
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2224
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2223
		      call 'wxe_util':'call'
			  (3179, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getTabIndents',1}}] )
	    -| ['compiler_generated'] )
	end
'setBackSpaceUnIndents'/2 =
    %% Line 2229
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},BsUnIndents>
	      when %% Line 2230
		call 'erlang':'is_boolean'
		    (BsUnIndents) ->
	      do  %% Line 2231
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2233
		      call 'wxe_util':'from_bool'
			  (BsUnIndents)
		  in  let <_cor5> =
			  %% Line 2233
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 2232
			  call 'wxe_util':'cast'
			      (3180, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setBackSpaceUnIndents',2}}] )
	    -| ['compiler_generated'] )
	end
'getBackSpaceUnIndents'/1 =
    %% Line 2238
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2239
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2241
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2240
		      call 'wxe_util':'call'
			  (3181, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getBackSpaceUnIndents',1}}] )
	    -| ['compiler_generated'] )
	end
'setMouseDwellTime'/2 =
    %% Line 2246
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},PeriodMilliseconds>
	      when %% Line 2247
		call 'erlang':'is_integer'
		    (PeriodMilliseconds) ->
	      do  %% Line 2248
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2250
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PeriodMilliseconds>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2249
		      call 'wxe_util':'cast'
			  (3182, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setMouseDwellTime',2}}] )
	    -| ['compiler_generated'] )
	end
'getMouseDwellTime'/1 =
    %% Line 2255
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2256
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2258
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2257
		      call 'wxe_util':'call'
			  (3183, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getMouseDwellTime',1}}] )
	    -| ['compiler_generated'] )
	end
'wordStartPosition'/3 =
    %% Line 2263
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Pos,OnlyWordCharacters>
	      when let <_cor3> =
		    %% Line 2264
		    call 'erlang':'is_integer'
			(Pos)
		in  let <_cor4> =
			%% Line 2264
			call 'erlang':'is_boolean'
			    (OnlyWordCharacters)
		    in  %% Line 2264
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 2265
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 2267
		      call 'wxe_util':'from_bool'
			  (OnlyWordCharacters)
		  in  let <_cor8> =
			  %% Line 2267
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Pos>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 2266
			  call 'wxe_util':'call'
			      (3184, _cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'wordStartPosition',3}}] )
	    -| ['compiler_generated'] )
	end
'wordEndPosition'/3 =
    %% Line 2272
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Pos,OnlyWordCharacters>
	      when let <_cor3> =
		    %% Line 2273
		    call 'erlang':'is_integer'
			(Pos)
		in  let <_cor4> =
			%% Line 2273
			call 'erlang':'is_boolean'
			    (OnlyWordCharacters)
		    in  %% Line 2273
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 2274
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 2276
		      call 'wxe_util':'from_bool'
			  (OnlyWordCharacters)
		  in  let <_cor8> =
			  %% Line 2276
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Pos>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 2275
			  call 'wxe_util':'call'
			      (3185, _cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'wordEndPosition',3}}] )
	    -| ['compiler_generated'] )
	end
'setWrapMode'/2 =
    %% Line 2281
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Mode>
	      when %% Line 2282
		call 'erlang':'is_integer'
		    (Mode) ->
	      do  %% Line 2283
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2285
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Mode>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2284
		      call 'wxe_util':'cast'
			  (3186, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setWrapMode',2}}] )
	    -| ['compiler_generated'] )
	end
'getWrapMode'/1 =
    %% Line 2290
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2291
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2293
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2292
		      call 'wxe_util':'call'
			  (3187, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getWrapMode',1}}] )
	    -| ['compiler_generated'] )
	end
'setWrapVisualFlags'/2 =
    %% Line 2298
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},WrapVisualFlags>
	      when %% Line 2299
		call 'erlang':'is_integer'
		    (WrapVisualFlags) ->
	      do  %% Line 2300
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2302
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<WrapVisualFlags>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2301
		      call 'wxe_util':'cast'
			  (3188, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setWrapVisualFlags',2}}] )
	    -| ['compiler_generated'] )
	end
'getWrapVisualFlags'/1 =
    %% Line 2307
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2308
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2310
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2309
		      call 'wxe_util':'call'
			  (3189, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getWrapVisualFlags',1}}] )
	    -| ['compiler_generated'] )
	end
'setWrapVisualFlagsLocation'/2 =
    %% Line 2315
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},WrapVisualFlagsLocation>
	      when %% Line 2316
		call 'erlang':'is_integer'
		    (WrapVisualFlagsLocation) ->
	      do  %% Line 2317
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2319
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<WrapVisualFlagsLocation>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2318
		      call 'wxe_util':'cast'
			  (3190, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setWrapVisualFlagsLocation',2}}] )
	    -| ['compiler_generated'] )
	end
'getWrapVisualFlagsLocation'/1 =
    %% Line 2324
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2325
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2327
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2326
		      call 'wxe_util':'call'
			  (3191, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getWrapVisualFlagsLocation',1}}] )
	    -| ['compiler_generated'] )
	end
'setWrapStartIndent'/2 =
    %% Line 2332
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Indent>
	      when %% Line 2333
		call 'erlang':'is_integer'
		    (Indent) ->
	      do  %% Line 2334
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2336
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Indent>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2335
		      call 'wxe_util':'cast'
			  (3192, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setWrapStartIndent',2}}] )
	    -| ['compiler_generated'] )
	end
'getWrapStartIndent'/1 =
    %% Line 2341
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2342
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2344
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2343
		      call 'wxe_util':'call'
			  (3193, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getWrapStartIndent',1}}] )
	    -| ['compiler_generated'] )
	end
'setLayoutCache'/2 =
    %% Line 2349
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Mode>
	      when %% Line 2350
		call 'erlang':'is_integer'
		    (Mode) ->
	      do  %% Line 2351
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2353
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Mode>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2352
		      call 'wxe_util':'cast'
			  (3194, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setLayoutCache',2}}] )
	    -| ['compiler_generated'] )
	end
'getLayoutCache'/1 =
    %% Line 2358
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2359
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2361
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2360
		      call 'wxe_util':'call'
			  (3195, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLayoutCache',1}}] )
	    -| ['compiler_generated'] )
	end
'setScrollWidth'/2 =
    %% Line 2366
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},PixelWidth>
	      when %% Line 2367
		call 'erlang':'is_integer'
		    (PixelWidth) ->
	      do  %% Line 2368
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2370
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PixelWidth>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2369
		      call 'wxe_util':'cast'
			  (3196, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setScrollWidth',2}}] )
	    -| ['compiler_generated'] )
	end
'getScrollWidth'/1 =
    %% Line 2375
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2376
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2378
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2377
		      call 'wxe_util':'call'
			  (3197, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getScrollWidth',1}}] )
	    -| ['compiler_generated'] )
	end
'textWidth'/3 =
    %% Line 2383
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},Style,Text>
	      when let <_cor3> =
		    %% Line 2384
		    call 'erlang':'is_integer'
			(Style)
		in  let <_cor4> =
			%% Line 2384
			call 'erlang':'is_list'
			    (Text)
		    in  %% Line 2384
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 2385
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 2386
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <_cor13> =
			  %% Line 2388
			  call 'erlang':'byte_size'
			      (Text_UC)
		      in  let <_cor8> =
			      %% Line 2388
			      call 'erlang':'byte_size'
				  (Text_UC)
			  in  let <_cor9> =
				  %% Line 2388
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 2388
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 2388
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 2388
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 2388
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<Style>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 2387
						  call 'wxe_util':'call'
						      (3198, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'textWidth',3}}] )
	    -| ['compiler_generated'] )
	end
'getEndAtLastLine'/1 =
    %% Line 2393
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2394
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2396
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2395
		      call 'wxe_util':'call'
			  (3199, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getEndAtLastLine',1}}] )
	    -| ['compiler_generated'] )
	end
'textHeight'/2 =
    %% Line 2401
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 2402
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 2403
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2405
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2404
		      call 'wxe_util':'call'
			  (3200, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'textHeight',2}}] )
	    -| ['compiler_generated'] )
	end
'setUseVerticalScrollBar'/2 =
    %% Line 2410
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Show>
	      when %% Line 2411
		call 'erlang':'is_boolean'
		    (Show) ->
	      do  %% Line 2412
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2414
		      call 'wxe_util':'from_bool'
			  (Show)
		  in  let <_cor5> =
			  %% Line 2414
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 2413
			  call 'wxe_util':'cast'
			      (3201, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setUseVerticalScrollBar',2}}] )
	    -| ['compiler_generated'] )
	end
'getUseVerticalScrollBar'/1 =
    %% Line 2419
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2420
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2422
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2421
		      call 'wxe_util':'call'
			  (3202, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getUseVerticalScrollBar',1}}] )
	    -| ['compiler_generated'] )
	end
'appendText'/2 =
    %% Line 2427
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Text>
	      when %% Line 2428
		call 'erlang':'is_list'
		    (Text) ->
	      do  %% Line 2429
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 2430
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <_cor10> =
			  %% Line 2432
			  call 'erlang':'byte_size'
			      (Text_UC)
		      in  let <_cor5> =
			      %% Line 2432
			      call 'erlang':'byte_size'
				  (Text_UC)
			  in  let <_cor6> =
				  %% Line 2432
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 2432
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 2432
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 2432
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 2432
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 2431
						  call 'wxe_util':'cast'
						      (3203, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'appendText',2}}] )
	    -| ['compiler_generated'] )
	end
'getTwoPhaseDraw'/1 =
    %% Line 2437
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2438
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2440
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2439
		      call 'wxe_util':'call'
			  (3204, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getTwoPhaseDraw',1}}] )
	    -| ['compiler_generated'] )
	end
'setTwoPhaseDraw'/2 =
    %% Line 2445
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},TwoPhase>
	      when %% Line 2446
		call 'erlang':'is_boolean'
		    (TwoPhase) ->
	      do  %% Line 2447
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2449
		      call 'wxe_util':'from_bool'
			  (TwoPhase)
		  in  let <_cor5> =
			  %% Line 2449
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 2448
			  call 'wxe_util':'cast'
			      (3205, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setTwoPhaseDraw',2}}] )
	    -| ['compiler_generated'] )
	end
'targetFromSelection'/1 =
    %% Line 2454
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2455
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2457
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2456
		      call 'wxe_util':'cast'
			  (3206, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'targetFromSelection',1}}] )
	    -| ['compiler_generated'] )
	end
'linesJoin'/1 =
    %% Line 2462
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2463
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2465
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2464
		      call 'wxe_util':'cast'
			  (3207, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'linesJoin',1}}] )
	    -| ['compiler_generated'] )
	end
'linesSplit'/2 =
    %% Line 2470
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},PixelWidth>
	      when %% Line 2471
		call 'erlang':'is_integer'
		    (PixelWidth) ->
	      do  %% Line 2472
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2474
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PixelWidth>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2473
		      call 'wxe_util':'cast'
			  (3208, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'linesSplit',2}}] )
	    -| ['compiler_generated'] )
	end
'setFoldMarginColour'/3 =
    %% Line 2479
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor17},UseSetting,Back>
	      when let <_cor6> =
		    %% Line 2480
		    try
			let <_cor3> =
			    call 'erlang':'is_boolean'
				(UseSetting)
			in  let <_cor4> =
				call 'erlang':'tuple_size'
				    (Back)
			    in  let <_cor5> =
				    call 'erlang':'=:='
					(_cor4, 3)
				in  call 'erlang':'and'
					(_cor3, _cor5)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor8> =
			%% Line 2480
			try
			    let <_cor7> =
				call 'erlang':'tuple_size'
				    (Back)
			    in  call 'erlang':'=:='
				    (_cor7, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 2480
			call 'erlang':'or'
			    (_cor6, _cor8) ->
	      do  %% Line 2481
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor12> =
		      %% Line 2483
		      call 'wxe_util':'from_bool'
			  (UseSetting)
		  in  let <_cor11> =
			  %% Line 2483
			  call 'wxe_util':'colour_bin'
			      (Back)
		      in  let <_cor13> =
			      %% Line 2483
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<_cor12>(32,1,'integer',['unsigned'|['native']]),
				#<_cor11>(16,8,'binary',['unsigned'|['big']])}#
			  in  %% Line 2482
			      call 'wxe_util':'cast'
				  (3209, _cor13)
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14})
		  -| [{'function_name',{'setFoldMarginColour',3}}] )
	    -| ['compiler_generated'] )
	end
'setFoldMarginHiColour'/3 =
    %% Line 2488
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor17},UseSetting,Fore>
	      when let <_cor6> =
		    %% Line 2489
		    try
			let <_cor3> =
			    call 'erlang':'is_boolean'
				(UseSetting)
			in  let <_cor4> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  let <_cor5> =
				    call 'erlang':'=:='
					(_cor4, 3)
				in  call 'erlang':'and'
					(_cor3, _cor5)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor8> =
			%% Line 2489
			try
			    let <_cor7> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  call 'erlang':'=:='
				    (_cor7, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 2489
			call 'erlang':'or'
			    (_cor6, _cor8) ->
	      do  %% Line 2490
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor12> =
		      %% Line 2492
		      call 'wxe_util':'from_bool'
			  (UseSetting)
		  in  let <_cor11> =
			  %% Line 2492
			  call 'wxe_util':'colour_bin'
			      (Fore)
		      in  let <_cor13> =
			      %% Line 2492
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<_cor12>(32,1,'integer',['unsigned'|['native']]),
				#<_cor11>(16,8,'binary',['unsigned'|['big']])}#
			  in  %% Line 2491
			      call 'wxe_util':'cast'
				  (3210, _cor13)
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14})
		  -| [{'function_name',{'setFoldMarginHiColour',3}}] )
	    -| ['compiler_generated'] )
	end
'lineDown'/1 =
    %% Line 2497
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2498
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2500
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2499
		      call 'wxe_util':'cast'
			  (3211, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineDown',1}}] )
	    -| ['compiler_generated'] )
	end
'lineDownExtend'/1 =
    %% Line 2505
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2506
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2508
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2507
		      call 'wxe_util':'cast'
			  (3212, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineDownExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'lineUp'/1 =
    %% Line 2513
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2514
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2516
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2515
		      call 'wxe_util':'cast'
			  (3213, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineUp',1}}] )
	    -| ['compiler_generated'] )
	end
'lineUpExtend'/1 =
    %% Line 2521
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2522
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2524
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2523
		      call 'wxe_util':'cast'
			  (3214, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineUpExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'charLeft'/1 =
    %% Line 2529
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2530
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2532
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2531
		      call 'wxe_util':'cast'
			  (3215, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'charLeft',1}}] )
	    -| ['compiler_generated'] )
	end
'charLeftExtend'/1 =
    %% Line 2537
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2538
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2540
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2539
		      call 'wxe_util':'cast'
			  (3216, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'charLeftExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'charRight'/1 =
    %% Line 2545
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2546
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2548
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2547
		      call 'wxe_util':'cast'
			  (3217, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'charRight',1}}] )
	    -| ['compiler_generated'] )
	end
'charRightExtend'/1 =
    %% Line 2553
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2554
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2556
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2555
		      call 'wxe_util':'cast'
			  (3218, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'charRightExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'wordLeft'/1 =
    %% Line 2561
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2562
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2564
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2563
		      call 'wxe_util':'cast'
			  (3219, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'wordLeft',1}}] )
	    -| ['compiler_generated'] )
	end
'wordLeftExtend'/1 =
    %% Line 2569
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2570
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2572
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2571
		      call 'wxe_util':'cast'
			  (3220, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'wordLeftExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'wordRight'/1 =
    %% Line 2577
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2578
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2580
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2579
		      call 'wxe_util':'cast'
			  (3221, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'wordRight',1}}] )
	    -| ['compiler_generated'] )
	end
'wordRightExtend'/1 =
    %% Line 2585
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2586
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2588
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2587
		      call 'wxe_util':'cast'
			  (3222, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'wordRightExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'home'/1 =
    %% Line 2593
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2594
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2596
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2595
		      call 'wxe_util':'cast'
			  (3223, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'home',1}}] )
	    -| ['compiler_generated'] )
	end
'homeExtend'/1 =
    %% Line 2601
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2602
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2604
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2603
		      call 'wxe_util':'cast'
			  (3224, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'homeExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'lineEnd'/1 =
    %% Line 2609
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2610
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2612
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2611
		      call 'wxe_util':'cast'
			  (3225, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineEnd',1}}] )
	    -| ['compiler_generated'] )
	end
'lineEndExtend'/1 =
    %% Line 2617
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2618
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2620
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2619
		      call 'wxe_util':'cast'
			  (3226, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineEndExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'documentStart'/1 =
    %% Line 2625
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2626
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2628
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2627
		      call 'wxe_util':'cast'
			  (3227, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'documentStart',1}}] )
	    -| ['compiler_generated'] )
	end
'documentStartExtend'/1 =
    %% Line 2633
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2634
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2636
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2635
		      call 'wxe_util':'cast'
			  (3228, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'documentStartExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'documentEnd'/1 =
    %% Line 2641
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2642
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2644
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2643
		      call 'wxe_util':'cast'
			  (3229, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'documentEnd',1}}] )
	    -| ['compiler_generated'] )
	end
'documentEndExtend'/1 =
    %% Line 2649
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2650
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2652
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2651
		      call 'wxe_util':'cast'
			  (3230, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'documentEndExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'pageUp'/1 =
    %% Line 2657
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2658
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2660
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2659
		      call 'wxe_util':'cast'
			  (3231, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'pageUp',1}}] )
	    -| ['compiler_generated'] )
	end
'pageUpExtend'/1 =
    %% Line 2665
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2666
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2668
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2667
		      call 'wxe_util':'cast'
			  (3232, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'pageUpExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'pageDown'/1 =
    %% Line 2673
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2674
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2676
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2675
		      call 'wxe_util':'cast'
			  (3233, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'pageDown',1}}] )
	    -| ['compiler_generated'] )
	end
'pageDownExtend'/1 =
    %% Line 2681
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2682
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2684
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2683
		      call 'wxe_util':'cast'
			  (3234, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'pageDownExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'editToggleOvertype'/1 =
    %% Line 2689
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2690
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2692
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2691
		      call 'wxe_util':'cast'
			  (3235, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'editToggleOvertype',1}}] )
	    -| ['compiler_generated'] )
	end
'cancel'/1 =
    %% Line 2697
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2698
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2700
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2699
		      call 'wxe_util':'cast'
			  (3236, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'cancel',1}}] )
	    -| ['compiler_generated'] )
	end
'deleteBack'/1 =
    %% Line 2705
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2706
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2708
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2707
		      call 'wxe_util':'cast'
			  (3237, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'deleteBack',1}}] )
	    -| ['compiler_generated'] )
	end
'tab'/1 =
    %% Line 2713
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2714
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2716
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2715
		      call 'wxe_util':'cast'
			  (3238, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'tab',1}}] )
	    -| ['compiler_generated'] )
	end
'backTab'/1 =
    %% Line 2721
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2722
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2724
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2723
		      call 'wxe_util':'cast'
			  (3239, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'backTab',1}}] )
	    -| ['compiler_generated'] )
	end
'newLine'/1 =
    %% Line 2729
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2730
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2732
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2731
		      call 'wxe_util':'cast'
			  (3240, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'newLine',1}}] )
	    -| ['compiler_generated'] )
	end
'formFeed'/1 =
    %% Line 2737
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2738
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2740
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2739
		      call 'wxe_util':'cast'
			  (3241, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'formFeed',1}}] )
	    -| ['compiler_generated'] )
	end
'vCHome'/1 =
    %% Line 2745
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2746
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2748
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2747
		      call 'wxe_util':'cast'
			  (3242, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'vCHome',1}}] )
	    -| ['compiler_generated'] )
	end
'vCHomeExtend'/1 =
    %% Line 2753
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2754
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2756
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2755
		      call 'wxe_util':'cast'
			  (3243, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'vCHomeExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'zoomIn'/1 =
    %% Line 2761
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2762
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2764
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2763
		      call 'wxe_util':'cast'
			  (3244, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'zoomIn',1}}] )
	    -| ['compiler_generated'] )
	end
'zoomOut'/1 =
    %% Line 2769
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2770
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2772
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2771
		      call 'wxe_util':'cast'
			  (3245, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'zoomOut',1}}] )
	    -| ['compiler_generated'] )
	end
'delWordLeft'/1 =
    %% Line 2777
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2778
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2780
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2779
		      call 'wxe_util':'cast'
			  (3246, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'delWordLeft',1}}] )
	    -| ['compiler_generated'] )
	end
'delWordRight'/1 =
    %% Line 2785
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2786
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2788
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2787
		      call 'wxe_util':'cast'
			  (3247, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'delWordRight',1}}] )
	    -| ['compiler_generated'] )
	end
'lineCut'/1 =
    %% Line 2793
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2794
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2796
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2795
		      call 'wxe_util':'cast'
			  (3248, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineCut',1}}] )
	    -| ['compiler_generated'] )
	end
'lineDelete'/1 =
    %% Line 2801
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2802
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2804
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2803
		      call 'wxe_util':'cast'
			  (3249, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineDelete',1}}] )
	    -| ['compiler_generated'] )
	end
'lineTranspose'/1 =
    %% Line 2809
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2810
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2812
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2811
		      call 'wxe_util':'cast'
			  (3250, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineTranspose',1}}] )
	    -| ['compiler_generated'] )
	end
'lineDuplicate'/1 =
    %% Line 2817
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2818
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2820
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2819
		      call 'wxe_util':'cast'
			  (3251, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineDuplicate',1}}] )
	    -| ['compiler_generated'] )
	end
'lowerCase'/1 =
    %% Line 2825
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2826
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2828
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2827
		      call 'wxe_util':'cast'
			  (3252, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lowerCase',1}}] )
	    -| ['compiler_generated'] )
	end
'upperCase'/1 =
    %% Line 2833
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2834
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2836
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2835
		      call 'wxe_util':'cast'
			  (3253, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'upperCase',1}}] )
	    -| ['compiler_generated'] )
	end
'lineScrollDown'/1 =
    %% Line 2841
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2842
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2844
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2843
		      call 'wxe_util':'cast'
			  (3254, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineScrollDown',1}}] )
	    -| ['compiler_generated'] )
	end
'lineScrollUp'/1 =
    %% Line 2849
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2850
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2852
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2851
		      call 'wxe_util':'cast'
			  (3255, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineScrollUp',1}}] )
	    -| ['compiler_generated'] )
	end
'deleteBackNotLine'/1 =
    %% Line 2857
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2858
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2860
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2859
		      call 'wxe_util':'cast'
			  (3256, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'deleteBackNotLine',1}}] )
	    -| ['compiler_generated'] )
	end
'homeDisplay'/1 =
    %% Line 2865
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2866
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2868
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2867
		      call 'wxe_util':'cast'
			  (3257, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'homeDisplay',1}}] )
	    -| ['compiler_generated'] )
	end
'homeDisplayExtend'/1 =
    %% Line 2873
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2874
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2876
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2875
		      call 'wxe_util':'cast'
			  (3258, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'homeDisplayExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'lineEndDisplay'/1 =
    %% Line 2881
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2882
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2884
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2883
		      call 'wxe_util':'cast'
			  (3259, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineEndDisplay',1}}] )
	    -| ['compiler_generated'] )
	end
'lineEndDisplayExtend'/1 =
    %% Line 2889
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2890
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2892
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2891
		      call 'wxe_util':'cast'
			  (3260, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineEndDisplayExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'homeWrapExtend'/1 =
    %% Line 2897
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2898
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2900
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2899
		      call 'wxe_util':'cast'
			  (3261, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'homeWrapExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'lineEndWrap'/1 =
    %% Line 2905
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2906
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2908
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2907
		      call 'wxe_util':'cast'
			  (3262, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineEndWrap',1}}] )
	    -| ['compiler_generated'] )
	end
'lineEndWrapExtend'/1 =
    %% Line 2913
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2914
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2916
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2915
		      call 'wxe_util':'cast'
			  (3263, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineEndWrapExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'vCHomeWrap'/1 =
    %% Line 2921
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2922
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2924
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2923
		      call 'wxe_util':'cast'
			  (3264, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'vCHomeWrap',1}}] )
	    -| ['compiler_generated'] )
	end
'vCHomeWrapExtend'/1 =
    %% Line 2929
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2930
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2932
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2931
		      call 'wxe_util':'cast'
			  (3265, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'vCHomeWrapExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'lineCopy'/1 =
    %% Line 2937
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2938
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2940
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2939
		      call 'wxe_util':'cast'
			  (3266, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineCopy',1}}] )
	    -| ['compiler_generated'] )
	end
'moveCaretInsideView'/1 =
    %% Line 2945
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2946
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2948
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2947
		      call 'wxe_util':'cast'
			  (3267, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'moveCaretInsideView',1}}] )
	    -| ['compiler_generated'] )
	end
'lineLength'/2 =
    %% Line 2953
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 2954
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 2955
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2957
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2956
		      call 'wxe_util':'call'
			  (3268, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'lineLength',2}}] )
	    -| ['compiler_generated'] )
	end
'braceHighlight'/3 =
    %% Line 2962
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Pos1,Pos2>
	      when let <_cor3> =
		    %% Line 2963
		    call 'erlang':'is_integer'
			(Pos1)
		in  let <_cor4> =
			%% Line 2963
			call 'erlang':'is_integer'
			    (Pos2)
		    in  %% Line 2963
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 2964
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 2966
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos1>(32,1,'integer',['unsigned'|['native']]),
			#<Pos2>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2965
		      call 'wxe_util':'cast'
			  (3269, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'braceHighlight',3}}] )
	    -| ['compiler_generated'] )
	end
'braceBadLight'/2 =
    %% Line 2971
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 2972
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 2973
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2975
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2974
		      call 'wxe_util':'cast'
			  (3270, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'braceBadLight',2}}] )
	    -| ['compiler_generated'] )
	end
'braceMatch'/2 =
    %% Line 2980
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 2981
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 2982
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 2984
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2983
		      call 'wxe_util':'call'
			  (3271, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'braceMatch',2}}] )
	    -| ['compiler_generated'] )
	end
'getViewEOL'/1 =
    %% Line 2989
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 2990
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 2992
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 2991
		      call 'wxe_util':'call'
			  (3272, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getViewEOL',1}}] )
	    -| ['compiler_generated'] )
	end
'setViewEOL'/2 =
    %% Line 2997
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Visible>
	      when %% Line 2998
		call 'erlang':'is_boolean'
		    (Visible) ->
	      do  %% Line 2999
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3001
		      call 'wxe_util':'from_bool'
			  (Visible)
		  in  let <_cor5> =
			  %% Line 3001
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 3000
			  call 'wxe_util':'cast'
			      (3273, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setViewEOL',2}}] )
	    -| ['compiler_generated'] )
	end
'setModEventMask'/2 =
    %% Line 3006
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Mask>
	      when %% Line 3007
		call 'erlang':'is_integer'
		    (Mask) ->
	      do  %% Line 3008
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3010
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Mask>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3009
		      call 'wxe_util':'cast'
			  (3274, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setModEventMask',2}}] )
	    -| ['compiler_generated'] )
	end
'getEdgeColumn'/1 =
    %% Line 3015
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3016
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3018
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3017
		      call 'wxe_util':'call'
			  (3275, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getEdgeColumn',1}}] )
	    -| ['compiler_generated'] )
	end
'setEdgeColumn'/2 =
    %% Line 3023
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Column>
	      when %% Line 3024
		call 'erlang':'is_integer'
		    (Column) ->
	      do  %% Line 3025
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3027
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Column>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3026
		      call 'wxe_util':'cast'
			  (3276, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setEdgeColumn',2}}] )
	    -| ['compiler_generated'] )
	end
'setEdgeMode'/2 =
    %% Line 3032
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Mode>
	      when %% Line 3033
		call 'erlang':'is_integer'
		    (Mode) ->
	      do  %% Line 3034
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3036
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Mode>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3035
		      call 'wxe_util':'cast'
			  (3277, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setEdgeMode',2}}] )
	    -| ['compiler_generated'] )
	end
'getEdgeMode'/1 =
    %% Line 3041
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3042
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3044
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3043
		      call 'wxe_util':'call'
			  (3278, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getEdgeMode',1}}] )
	    -| ['compiler_generated'] )
	end
'getEdgeColour'/1 =
    %% Line 3049
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3050
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3052
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3051
		      call 'wxe_util':'call'
			  (3279, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getEdgeColour',1}}] )
	    -| ['compiler_generated'] )
	end
'setEdgeColour'/2 =
    %% Line 3057
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},EdgeColour>
	      when let <_cor3> =
		    %% Line 3058
		    try
			let <_cor2> =
			    call 'erlang':'tuple_size'
				(EdgeColour)
			in  call 'erlang':'=:='
				(_cor2, 3)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor5> =
			%% Line 3058
			try
			    let <_cor4> =
				call 'erlang':'tuple_size'
				    (EdgeColour)
			    in  call 'erlang':'=:='
				    (_cor4, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 3058
			call 'erlang':'or'
			    (_cor3, _cor5) ->
	      do  %% Line 3059
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor8> =
		      %% Line 3061
		      call 'wxe_util':'colour_bin'
			  (EdgeColour)
		  in  let <_cor9> =
			  %% Line 3061
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor8>(16,8,'binary',['unsigned'|['big']])}#
		      in  %% Line 3060
			  call 'wxe_util':'cast'
			      (3280, _cor9)
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'setEdgeColour',2}}] )
	    -| ['compiler_generated'] )
	end
'searchAnchor'/1 =
    %% Line 3066
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3067
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3069
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3068
		      call 'wxe_util':'cast'
			  (3281, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'searchAnchor',1}}] )
	    -| ['compiler_generated'] )
	end
'searchNext'/3 =
    %% Line 3074
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},Flags,Text>
	      when let <_cor3> =
		    %% Line 3075
		    call 'erlang':'is_integer'
			(Flags)
		in  let <_cor4> =
			%% Line 3075
			call 'erlang':'is_list'
			    (Text)
		    in  %% Line 3075
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3076
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 3077
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <_cor13> =
			  %% Line 3079
			  call 'erlang':'byte_size'
			      (Text_UC)
		      in  let <_cor8> =
			      %% Line 3079
			      call 'erlang':'byte_size'
				  (Text_UC)
			  in  let <_cor9> =
				  %% Line 3079
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 3079
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 3079
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 3079
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 3079
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<Flags>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 3078
						  call 'wxe_util':'call'
						      (3282, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'searchNext',3}}] )
	    -| ['compiler_generated'] )
	end
'searchPrev'/3 =
    %% Line 3084
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},Flags,Text>
	      when let <_cor3> =
		    %% Line 3085
		    call 'erlang':'is_integer'
			(Flags)
		in  let <_cor4> =
			%% Line 3085
			call 'erlang':'is_list'
			    (Text)
		    in  %% Line 3085
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3086
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 3087
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <_cor13> =
			  %% Line 3089
			  call 'erlang':'byte_size'
			      (Text_UC)
		      in  let <_cor8> =
			      %% Line 3089
			      call 'erlang':'byte_size'
				  (Text_UC)
			  in  let <_cor9> =
				  %% Line 3089
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 3089
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 3089
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 3089
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 3089
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<Flags>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 3088
						  call 'wxe_util':'call'
						      (3283, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'searchPrev',3}}] )
	    -| ['compiler_generated'] )
	end
'linesOnScreen'/1 =
    %% Line 3094
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3095
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3097
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3096
		      call 'wxe_util':'call'
			  (3284, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'linesOnScreen',1}}] )
	    -| ['compiler_generated'] )
	end
'usePopUp'/2 =
    %% Line 3102
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},AllowPopUp>
	      when %% Line 3103
		call 'erlang':'is_boolean'
		    (AllowPopUp) ->
	      do  %% Line 3104
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3106
		      call 'wxe_util':'from_bool'
			  (AllowPopUp)
		  in  let <_cor5> =
			  %% Line 3106
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 3105
			  call 'wxe_util':'cast'
			      (3285, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'usePopUp',2}}] )
	    -| ['compiler_generated'] )
	end
'selectionIsRectangle'/1 =
    %% Line 3111
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3112
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3114
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3113
		      call 'wxe_util':'call'
			  (3286, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'selectionIsRectangle',1}}] )
	    -| ['compiler_generated'] )
	end
'setZoom'/2 =
    %% Line 3119
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Zoom>
	      when %% Line 3120
		call 'erlang':'is_integer'
		    (Zoom) ->
	      do  %% Line 3121
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3123
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Zoom>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3122
		      call 'wxe_util':'cast'
			  (3287, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setZoom',2}}] )
	    -| ['compiler_generated'] )
	end
'getZoom'/1 =
    %% Line 3128
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3129
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3131
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3130
		      call 'wxe_util':'call'
			  (3288, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getZoom',1}}] )
	    -| ['compiler_generated'] )
	end
'getModEventMask'/1 =
    %% Line 3136
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3137
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3139
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3138
		      call 'wxe_util':'call'
			  (3289, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getModEventMask',1}}] )
	    -| ['compiler_generated'] )
	end
'setSTCFocus'/2 =
    %% Line 3144
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Focus>
	      when %% Line 3145
		call 'erlang':'is_boolean'
		    (Focus) ->
	      do  %% Line 3146
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3148
		      call 'wxe_util':'from_bool'
			  (Focus)
		  in  let <_cor5> =
			  %% Line 3148
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 3147
			  call 'wxe_util':'cast'
			      (3290, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setSTCFocus',2}}] )
	    -| ['compiler_generated'] )
	end
'getSTCFocus'/1 =
    %% Line 3153
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3154
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3156
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3155
		      call 'wxe_util':'call'
			  (3291, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSTCFocus',1}}] )
	    -| ['compiler_generated'] )
	end
'setStatus'/2 =
    %% Line 3161
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},StatusCode>
	      when %% Line 3162
		call 'erlang':'is_integer'
		    (StatusCode) ->
	      do  %% Line 3163
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3165
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<StatusCode>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3164
		      call 'wxe_util':'cast'
			  (3292, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setStatus',2}}] )
	    -| ['compiler_generated'] )
	end
'getStatus'/1 =
    %% Line 3170
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3171
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3173
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3172
		      call 'wxe_util':'call'
			  (3293, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getStatus',1}}] )
	    -| ['compiler_generated'] )
	end
'setMouseDownCaptures'/2 =
    %% Line 3178
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Captures>
	      when %% Line 3179
		call 'erlang':'is_boolean'
		    (Captures) ->
	      do  %% Line 3180
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3182
		      call 'wxe_util':'from_bool'
			  (Captures)
		  in  let <_cor5> =
			  %% Line 3182
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 3181
			  call 'wxe_util':'cast'
			      (3294, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setMouseDownCaptures',2}}] )
	    -| ['compiler_generated'] )
	end
'getMouseDownCaptures'/1 =
    %% Line 3187
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3188
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3190
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3189
		      call 'wxe_util':'call'
			  (3295, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getMouseDownCaptures',1}}] )
	    -| ['compiler_generated'] )
	end
'setSTCCursor'/2 =
    %% Line 3195
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},CursorType>
	      when %% Line 3196
		call 'erlang':'is_integer'
		    (CursorType) ->
	      do  %% Line 3197
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3199
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<CursorType>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3198
		      call 'wxe_util':'cast'
			  (3296, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setSTCCursor',2}}] )
	    -| ['compiler_generated'] )
	end
'getSTCCursor'/1 =
    %% Line 3204
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3205
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3207
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3206
		      call 'wxe_util':'call'
			  (3297, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSTCCursor',1}}] )
	    -| ['compiler_generated'] )
	end
'setControlCharSymbol'/2 =
    %% Line 3212
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Symbol>
	      when %% Line 3213
		call 'erlang':'is_integer'
		    (Symbol) ->
	      do  %% Line 3214
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3216
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Symbol>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3215
		      call 'wxe_util':'cast'
			  (3298, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setControlCharSymbol',2}}] )
	    -| ['compiler_generated'] )
	end
'getControlCharSymbol'/1 =
    %% Line 3221
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3222
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3224
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3223
		      call 'wxe_util':'call'
			  (3299, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getControlCharSymbol',1}}] )
	    -| ['compiler_generated'] )
	end
'wordPartLeft'/1 =
    %% Line 3229
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3230
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3232
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3231
		      call 'wxe_util':'cast'
			  (3300, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'wordPartLeft',1}}] )
	    -| ['compiler_generated'] )
	end
'wordPartLeftExtend'/1 =
    %% Line 3237
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3238
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3240
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3239
		      call 'wxe_util':'cast'
			  (3301, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'wordPartLeftExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'wordPartRight'/1 =
    %% Line 3245
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3246
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3248
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3247
		      call 'wxe_util':'cast'
			  (3302, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'wordPartRight',1}}] )
	    -| ['compiler_generated'] )
	end
'wordPartRightExtend'/1 =
    %% Line 3253
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3254
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3256
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3255
		      call 'wxe_util':'cast'
			  (3303, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'wordPartRightExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'setVisiblePolicy'/3 =
    %% Line 3261
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},VisiblePolicy,VisibleSlop>
	      when let <_cor3> =
		    %% Line 3262
		    call 'erlang':'is_integer'
			(VisiblePolicy)
		in  let <_cor4> =
			%% Line 3262
			call 'erlang':'is_integer'
			    (VisibleSlop)
		    in  %% Line 3262
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3263
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 3265
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<VisiblePolicy>(32,1,'integer',['unsigned'|['native']]),
			#<VisibleSlop>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3264
		      call 'wxe_util':'cast'
			  (3304, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setVisiblePolicy',3}}] )
	    -| ['compiler_generated'] )
	end
'delLineLeft'/1 =
    %% Line 3270
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3271
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3273
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3272
		      call 'wxe_util':'cast'
			  (3305, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'delLineLeft',1}}] )
	    -| ['compiler_generated'] )
	end
'delLineRight'/1 =
    %% Line 3278
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3279
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3281
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3280
		      call 'wxe_util':'cast'
			  (3306, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'delLineRight',1}}] )
	    -| ['compiler_generated'] )
	end
'getXOffset'/1 =
    %% Line 3286
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3287
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3289
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3288
		      call 'wxe_util':'call'
			  (3307, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getXOffset',1}}] )
	    -| ['compiler_generated'] )
	end
'chooseCaretX'/1 =
    %% Line 3294
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3295
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3297
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3296
		      call 'wxe_util':'cast'
			  (3308, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'chooseCaretX',1}}] )
	    -| ['compiler_generated'] )
	end
'setXCaretPolicy'/3 =
    %% Line 3302
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},CaretPolicy,CaretSlop>
	      when let <_cor3> =
		    %% Line 3303
		    call 'erlang':'is_integer'
			(CaretPolicy)
		in  let <_cor4> =
			%% Line 3303
			call 'erlang':'is_integer'
			    (CaretSlop)
		    in  %% Line 3303
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3304
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 3306
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<CaretPolicy>(32,1,'integer',['unsigned'|['native']]),
			#<CaretSlop>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3305
		      call 'wxe_util':'cast'
			  (3309, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setXCaretPolicy',3}}] )
	    -| ['compiler_generated'] )
	end
'setYCaretPolicy'/3 =
    %% Line 3311
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},CaretPolicy,CaretSlop>
	      when let <_cor3> =
		    %% Line 3312
		    call 'erlang':'is_integer'
			(CaretPolicy)
		in  let <_cor4> =
			%% Line 3312
			call 'erlang':'is_integer'
			    (CaretSlop)
		    in  %% Line 3312
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3313
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 3315
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<CaretPolicy>(32,1,'integer',['unsigned'|['native']]),
			#<CaretSlop>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3314
		      call 'wxe_util':'cast'
			  (3310, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setYCaretPolicy',3}}] )
	    -| ['compiler_generated'] )
	end
'getPrintWrapMode'/1 =
    %% Line 3320
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3321
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3323
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3322
		      call 'wxe_util':'call'
			  (3311, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPrintWrapMode',1}}] )
	    -| ['compiler_generated'] )
	end
'setHotspotActiveForeground'/3 =
    %% Line 3328
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor17},UseSetting,Fore>
	      when let <_cor6> =
		    %% Line 3329
		    try
			let <_cor3> =
			    call 'erlang':'is_boolean'
				(UseSetting)
			in  let <_cor4> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  let <_cor5> =
				    call 'erlang':'=:='
					(_cor4, 3)
				in  call 'erlang':'and'
					(_cor3, _cor5)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor8> =
			%% Line 3329
			try
			    let <_cor7> =
				call 'erlang':'tuple_size'
				    (Fore)
			    in  call 'erlang':'=:='
				    (_cor7, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 3329
			call 'erlang':'or'
			    (_cor6, _cor8) ->
	      do  %% Line 3330
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor12> =
		      %% Line 3332
		      call 'wxe_util':'from_bool'
			  (UseSetting)
		  in  let <_cor11> =
			  %% Line 3332
			  call 'wxe_util':'colour_bin'
			      (Fore)
		      in  let <_cor13> =
			      %% Line 3332
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<_cor12>(32,1,'integer',['unsigned'|['native']]),
				#<_cor11>(16,8,'binary',['unsigned'|['big']])}#
			  in  %% Line 3331
			      call 'wxe_util':'cast'
				  (3312, _cor13)
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14})
		  -| [{'function_name',{'setHotspotActiveForeground',3}}] )
	    -| ['compiler_generated'] )
	end
'setHotspotActiveBackground'/3 =
    %% Line 3337
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor17},UseSetting,Back>
	      when let <_cor6> =
		    %% Line 3338
		    try
			let <_cor3> =
			    call 'erlang':'is_boolean'
				(UseSetting)
			in  let <_cor4> =
				call 'erlang':'tuple_size'
				    (Back)
			    in  let <_cor5> =
				    call 'erlang':'=:='
					(_cor4, 3)
				in  call 'erlang':'and'
					(_cor3, _cor5)
		    of <Try> ->
			Try
		    catch <T,R> ->
			'false'
		in  let <_cor8> =
			%% Line 3338
			try
			    let <_cor7> =
				call 'erlang':'tuple_size'
				    (Back)
			    in  call 'erlang':'=:='
				    (_cor7, 4)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 3338
			call 'erlang':'or'
			    (_cor6, _cor8) ->
	      do  %% Line 3339
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor12> =
		      %% Line 3341
		      call 'wxe_util':'from_bool'
			  (UseSetting)
		  in  let <_cor11> =
			  %% Line 3341
			  call 'wxe_util':'colour_bin'
			      (Back)
		      in  let <_cor13> =
			      %% Line 3341
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<_cor12>(32,1,'integer',['unsigned'|['native']]),
				#<_cor11>(16,8,'binary',['unsigned'|['big']])}#
			  in  %% Line 3340
			      call 'wxe_util':'cast'
				  (3313, _cor13)
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14})
		  -| [{'function_name',{'setHotspotActiveBackground',3}}] )
	    -| ['compiler_generated'] )
	end
'setHotspotActiveUnderline'/2 =
    %% Line 3346
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Underline>
	      when %% Line 3347
		call 'erlang':'is_boolean'
		    (Underline) ->
	      do  %% Line 3348
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3350
		      call 'wxe_util':'from_bool'
			  (Underline)
		  in  let <_cor5> =
			  %% Line 3350
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 3349
			  call 'wxe_util':'cast'
			      (3314, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setHotspotActiveUnderline',2}}] )
	    -| ['compiler_generated'] )
	end
'setHotspotSingleLine'/2 =
    %% Line 3355
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},SingleLine>
	      when %% Line 3356
		call 'erlang':'is_boolean'
		    (SingleLine) ->
	      do  %% Line 3357
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3359
		      call 'wxe_util':'from_bool'
			  (SingleLine)
		  in  let <_cor5> =
			  %% Line 3359
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 3358
			  call 'wxe_util':'cast'
			      (3315, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setHotspotSingleLine',2}}] )
	    -| ['compiler_generated'] )
	end
'paraDownExtend'/1 =
    %% Line 3364
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3365
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3367
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3366
		      call 'wxe_util':'cast'
			  (3316, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'paraDownExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'paraUp'/1 =
    %% Line 3372
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3373
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3375
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3374
		      call 'wxe_util':'cast'
			  (3317, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'paraUp',1}}] )
	    -| ['compiler_generated'] )
	end
'paraUpExtend'/1 =
    %% Line 3380
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3381
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3383
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3382
		      call 'wxe_util':'cast'
			  (3318, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'paraUpExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'positionBefore'/2 =
    %% Line 3388
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 3389
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 3390
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3392
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3391
		      call 'wxe_util':'call'
			  (3319, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'positionBefore',2}}] )
	    -| ['compiler_generated'] )
	end
'positionAfter'/2 =
    %% Line 3397
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 3398
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 3399
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3401
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3400
		      call 'wxe_util':'call'
			  (3320, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'positionAfter',2}}] )
	    -| ['compiler_generated'] )
	end
'copyRange'/3 =
    %% Line 3406
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Start,End>
	      when let <_cor3> =
		    %% Line 3407
		    call 'erlang':'is_integer'
			(Start)
		in  let <_cor4> =
			%% Line 3407
			call 'erlang':'is_integer'
			    (End)
		    in  %% Line 3407
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3408
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 3410
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Start>(32,1,'integer',['unsigned'|['native']]),
			#<End>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3409
		      call 'wxe_util':'cast'
			  (3321, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'copyRange',3}}] )
	    -| ['compiler_generated'] )
	end
'copyText'/3 =
    %% Line 3415
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},Length,Text>
	      when let <_cor3> =
		    %% Line 3416
		    call 'erlang':'is_integer'
			(Length)
		in  let <_cor4> =
			%% Line 3416
			call 'erlang':'is_list'
			    (Text)
		    in  %% Line 3416
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3417
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Text_UC> =
		      %% Line 3418
		      call 'unicode':'characters_to_binary'
			  ([Text|[0]])
		  in  let <_cor13> =
			  %% Line 3420
			  call 'erlang':'byte_size'
			      (Text_UC)
		      in  let <_cor8> =
			      %% Line 3420
			      call 'erlang':'byte_size'
				  (Text_UC)
			  in  let <_cor9> =
				  %% Line 3420
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 3420
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 3420
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 3420
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 3420
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<Length>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<Text_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 3419
						  call 'wxe_util':'cast'
						      (3322, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'copyText',3}}] )
	    -| ['compiler_generated'] )
	end
'setSelectionMode'/2 =
    %% Line 3425
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Mode>
	      when %% Line 3426
		call 'erlang':'is_integer'
		    (Mode) ->
	      do  %% Line 3427
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3429
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Mode>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3428
		      call 'wxe_util':'cast'
			  (3323, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setSelectionMode',2}}] )
	    -| ['compiler_generated'] )
	end
'getSelectionMode'/1 =
    %% Line 3434
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3435
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3437
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3436
		      call 'wxe_util':'call'
			  (3324, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSelectionMode',1}}] )
	    -| ['compiler_generated'] )
	end
'lineDownRectExtend'/1 =
    %% Line 3442
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3443
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3445
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3444
		      call 'wxe_util':'cast'
			  (3325, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineDownRectExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'lineUpRectExtend'/1 =
    %% Line 3450
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3451
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3453
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3452
		      call 'wxe_util':'cast'
			  (3326, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineUpRectExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'charLeftRectExtend'/1 =
    %% Line 3458
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3459
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3461
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3460
		      call 'wxe_util':'cast'
			  (3327, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'charLeftRectExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'charRightRectExtend'/1 =
    %% Line 3466
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3467
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3469
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3468
		      call 'wxe_util':'cast'
			  (3328, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'charRightRectExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'homeRectExtend'/1 =
    %% Line 3474
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3475
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3477
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3476
		      call 'wxe_util':'cast'
			  (3329, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'homeRectExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'vCHomeRectExtend'/1 =
    %% Line 3482
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3483
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3485
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3484
		      call 'wxe_util':'cast'
			  (3330, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'vCHomeRectExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'lineEndRectExtend'/1 =
    %% Line 3490
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3491
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3493
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3492
		      call 'wxe_util':'cast'
			  (3331, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'lineEndRectExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'pageUpRectExtend'/1 =
    %% Line 3498
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3499
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3501
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3500
		      call 'wxe_util':'cast'
			  (3332, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'pageUpRectExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'pageDownRectExtend'/1 =
    %% Line 3506
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3507
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3509
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3508
		      call 'wxe_util':'cast'
			  (3333, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'pageDownRectExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'stutteredPageUp'/1 =
    %% Line 3514
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3515
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3517
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3516
		      call 'wxe_util':'cast'
			  (3334, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'stutteredPageUp',1}}] )
	    -| ['compiler_generated'] )
	end
'stutteredPageUpExtend'/1 =
    %% Line 3522
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3523
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3525
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3524
		      call 'wxe_util':'cast'
			  (3335, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'stutteredPageUpExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'stutteredPageDown'/1 =
    %% Line 3530
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3531
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3533
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3532
		      call 'wxe_util':'cast'
			  (3336, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'stutteredPageDown',1}}] )
	    -| ['compiler_generated'] )
	end
'stutteredPageDownExtend'/1 =
    %% Line 3538
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3539
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3541
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3540
		      call 'wxe_util':'cast'
			  (3337, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'stutteredPageDownExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'wordLeftEnd'/1 =
    %% Line 3546
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3547
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3549
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3548
		      call 'wxe_util':'cast'
			  (3338, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'wordLeftEnd',1}}] )
	    -| ['compiler_generated'] )
	end
'wordLeftEndExtend'/1 =
    %% Line 3554
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3555
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3557
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3556
		      call 'wxe_util':'cast'
			  (3339, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'wordLeftEndExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'wordRightEnd'/1 =
    %% Line 3562
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3563
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3565
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3564
		      call 'wxe_util':'cast'
			  (3340, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'wordRightEnd',1}}] )
	    -| ['compiler_generated'] )
	end
'wordRightEndExtend'/1 =
    %% Line 3570
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3571
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3573
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3572
		      call 'wxe_util':'cast'
			  (3341, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'wordRightEndExtend',1}}] )
	    -| ['compiler_generated'] )
	end
'setWhitespaceChars'/2 =
    %% Line 3578
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Characters>
	      when %% Line 3579
		call 'erlang':'is_list'
		    (Characters) ->
	      do  %% Line 3580
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Characters_UC> =
		      %% Line 3581
		      call 'unicode':'characters_to_binary'
			  ([Characters|[0]])
		  in  let <_cor10> =
			  %% Line 3583
			  call 'erlang':'byte_size'
			      (Characters_UC)
		      in  let <_cor5> =
			      %% Line 3583
			      call 'erlang':'byte_size'
				  (Characters_UC)
			  in  let <_cor6> =
				  %% Line 3583
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 3583
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 3583
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 3583
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 3583
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Characters_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 3582
						  call 'wxe_util':'cast'
						      (3342, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setWhitespaceChars',2}}] )
	    -| ['compiler_generated'] )
	end
'setCharsDefault'/1 =
    %% Line 3588
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3589
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3591
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3590
		      call 'wxe_util':'cast'
			  (3343, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'setCharsDefault',1}}] )
	    -| ['compiler_generated'] )
	end
'autoCompGetCurrent'/1 =
    %% Line 3596
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3597
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3599
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3598
		      call 'wxe_util':'call'
			  (3344, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'autoCompGetCurrent',1}}] )
	    -| ['compiler_generated'] )
	end
'allocate'/2 =
    %% Line 3604
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Bytes>
	      when %% Line 3605
		call 'erlang':'is_integer'
		    (Bytes) ->
	      do  %% Line 3606
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3608
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Bytes>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3607
		      call 'wxe_util':'cast'
			  (3345, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'allocate',2}}] )
	    -| ['compiler_generated'] )
	end
'findColumn'/3 =
    %% Line 3613
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Line,Column>
	      when let <_cor3> =
		    %% Line 3614
		    call 'erlang':'is_integer'
			(Line)
		in  let <_cor4> =
			%% Line 3614
			call 'erlang':'is_integer'
			    (Column)
		    in  %% Line 3614
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3615
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 3617
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']]),
			#<Column>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3616
		      call 'wxe_util':'call'
			  (3346, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'findColumn',3}}] )
	    -| ['compiler_generated'] )
	end
'getCaretSticky'/1 =
    %% Line 3622
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3623
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3625
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3624
		      call 'wxe_util':'call'
			  (3347, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCaretSticky',1}}] )
	    -| ['compiler_generated'] )
	end
'setCaretSticky'/2 =
    %% Line 3630
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},UseCaretStickyBehaviour>
	      when %% Line 3631
		call 'erlang':'is_boolean'
		    (UseCaretStickyBehaviour) ->
	      do  %% Line 3632
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3634
		      call 'wxe_util':'from_bool'
			  (UseCaretStickyBehaviour)
		  in  let <_cor5> =
			  %% Line 3634
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 3633
			  call 'wxe_util':'cast'
			      (3348, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setCaretSticky',2}}] )
	    -| ['compiler_generated'] )
	end
'toggleCaretSticky'/1 =
    %% Line 3639
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3640
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3642
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3641
		      call 'wxe_util':'cast'
			  (3349, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'toggleCaretSticky',1}}] )
	    -| ['compiler_generated'] )
	end
'setPasteConvertEndings'/2 =
    %% Line 3647
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Convert>
	      when %% Line 3648
		call 'erlang':'is_boolean'
		    (Convert) ->
	      do  %% Line 3649
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3651
		      call 'wxe_util':'from_bool'
			  (Convert)
		  in  let <_cor5> =
			  %% Line 3651
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 3650
			  call 'wxe_util':'cast'
			      (3350, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setPasteConvertEndings',2}}] )
	    -| ['compiler_generated'] )
	end
'getPasteConvertEndings'/1 =
    %% Line 3656
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3657
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3659
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3658
		      call 'wxe_util':'call'
			  (3351, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPasteConvertEndings',1}}] )
	    -| ['compiler_generated'] )
	end
'selectionDuplicate'/1 =
    %% Line 3664
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3665
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3667
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3666
		      call 'wxe_util':'cast'
			  (3352, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'selectionDuplicate',1}}] )
	    -| ['compiler_generated'] )
	end
'setCaretLineBackAlpha'/2 =
    %% Line 3672
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Alpha>
	      when %% Line 3673
		call 'erlang':'is_integer'
		    (Alpha) ->
	      do  %% Line 3674
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3676
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Alpha>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3675
		      call 'wxe_util':'cast'
			  (3353, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setCaretLineBackAlpha',2}}] )
	    -| ['compiler_generated'] )
	end
'getCaretLineBackAlpha'/1 =
    %% Line 3681
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3682
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3684
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3683
		      call 'wxe_util':'call'
			  (3354, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCaretLineBackAlpha',1}}] )
	    -| ['compiler_generated'] )
	end
'startRecord'/1 =
    %% Line 3689
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3690
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3692
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3691
		      call 'wxe_util':'cast'
			  (3355, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'startRecord',1}}] )
	    -| ['compiler_generated'] )
	end
'stopRecord'/1 =
    %% Line 3697
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3698
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3700
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3699
		      call 'wxe_util':'cast'
			  (3356, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'stopRecord',1}}] )
	    -| ['compiler_generated'] )
	end
'setLexer'/2 =
    %% Line 3705
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Lexer>
	      when %% Line 3706
		call 'erlang':'is_integer'
		    (Lexer) ->
	      do  %% Line 3707
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3709
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Lexer>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3708
		      call 'wxe_util':'cast'
			  (3357, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setLexer',2}}] )
	    -| ['compiler_generated'] )
	end
'getLexer'/1 =
    %% Line 3714
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3715
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3717
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3716
		      call 'wxe_util':'call'
			  (3358, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLexer',1}}] )
	    -| ['compiler_generated'] )
	end
'colourise'/3 =
    %% Line 3722
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Start,End>
	      when let <_cor3> =
		    %% Line 3723
		    call 'erlang':'is_integer'
			(Start)
		in  let <_cor4> =
			%% Line 3723
			call 'erlang':'is_integer'
			    (End)
		    in  %% Line 3723
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3724
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 3726
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Start>(32,1,'integer',['unsigned'|['native']]),
			#<End>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3725
		      call 'wxe_util':'cast'
			  (3359, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'colourise',3}}] )
	    -| ['compiler_generated'] )
	end
'setProperty'/3 =
    %% Line 3731
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor25},Key,Value>
	      when let <_cor3> =
		    %% Line 3732
		    call 'erlang':'is_list'
			(Key)
		in  let <_cor4> =
			%% Line 3732
			call 'erlang':'is_list'
			    (Value)
		    in  %% Line 3732
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3733
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Key_UC> =
		      %% Line 3734
		      call 'unicode':'characters_to_binary'
			  ([Key|[0]])
		  in  let <Value_UC> =
			  %% Line 3735
			  call 'unicode':'characters_to_binary'
			      ([Value|[0]])
		      in  let <_cor20> =
			      %% Line 3737
			      call 'erlang':'byte_size'
				  (Key_UC)
			  in  let <_cor15> =
				  %% Line 3737
				  call 'erlang':'byte_size'
				      (Key_UC)
			      in  let <_cor16> =
				      %% Line 3737
				      call 'erlang':'+'
					  (0, _cor15)
				  in  let <_cor17> =
					  %% Line 3737
					  call 'erlang':'band'
					      (_cor16, 7)
				      in  let <_cor18> =
					      %% Line 3737
					      call 'erlang':'-'
						  (8, _cor17)
					  in  let <_cor19> =
						  %% Line 3737
						  call 'erlang':'band'
						      (_cor18, 7)
					      in  let <_cor14> =
						      %% Line 3737
						      call 'erlang':'byte_size'
							  (Value_UC)
						  in  let <_cor9> =
							  %% Line 3737
							  call 'erlang':'byte_size'
							      (Value_UC)
						      in  let <_cor10> =
							      %% Line 3737
							      call 'erlang':'+'
								  (4, _cor9)
							  in  let <_cor11> =
								  %% Line 3737
								  call 'erlang':'band'
								      (_cor10, 7)
							      in  let <_cor12> =
								      %% Line 3737
								      call 'erlang':'-'
									  (8, _cor11)
								  in  let <_cor13> =
									  %% Line 3737
									  call 'erlang':'band'
									      (_cor12, 7)
								      in  let <_cor21> =
									      %% Line 3737
									      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
										#<_cor20>(32,1,'integer',['unsigned'|['native']]),
										#<Key_UC>('all',8,'binary',['unsigned'|['big']]),
										#<0>(_cor19,8,'integer',['unsigned'|['big']]),
										#<_cor14>(32,1,'integer',['unsigned'|['native']]),
										#<Value_UC>('all',8,'binary',['unsigned'|['big']]),
										#<0>(_cor13,8,'integer',['unsigned'|['big']])}#
									  in  %% Line 3736
									      call 'wxe_util':'cast'
										  (3360, _cor21)
	  ( <_cor24,_cor23,_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22})
		  -| [{'function_name',{'setProperty',3}}] )
	    -| ['compiler_generated'] )
	end
'setKeyWords'/3 =
    %% Line 3742
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},KeywordSet,KeyWords>
	      when let <_cor3> =
		    %% Line 3743
		    call 'erlang':'is_integer'
			(KeywordSet)
		in  let <_cor4> =
			%% Line 3743
			call 'erlang':'is_list'
			    (KeyWords)
		    in  %% Line 3743
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3744
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <KeyWords_UC> =
		      %% Line 3745
		      call 'unicode':'characters_to_binary'
			  ([KeyWords|[0]])
		  in  let <_cor13> =
			  %% Line 3747
			  call 'erlang':'byte_size'
			      (KeyWords_UC)
		      in  let <_cor8> =
			      %% Line 3747
			      call 'erlang':'byte_size'
				  (KeyWords_UC)
			  in  let <_cor9> =
				  %% Line 3747
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 3747
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 3747
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 3747
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 3747
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<KeywordSet>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<KeyWords_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 3746
						  call 'wxe_util':'cast'
						      (3361, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'setKeyWords',3}}] )
	    -| ['compiler_generated'] )
	end
'setLexerLanguage'/2 =
    %% Line 3752
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Language>
	      when %% Line 3753
		call 'erlang':'is_list'
		    (Language) ->
	      do  %% Line 3754
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Language_UC> =
		      %% Line 3755
		      call 'unicode':'characters_to_binary'
			  ([Language|[0]])
		  in  let <_cor10> =
			  %% Line 3757
			  call 'erlang':'byte_size'
			      (Language_UC)
		      in  let <_cor5> =
			      %% Line 3757
			      call 'erlang':'byte_size'
				  (Language_UC)
			  in  let <_cor6> =
				  %% Line 3757
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 3757
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 3757
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 3757
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 3757
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Language_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 3756
						  call 'wxe_util':'cast'
						      (3362, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setLexerLanguage',2}}] )
	    -| ['compiler_generated'] )
	end
'getProperty'/2 =
    %% Line 3762
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Key>
	      when %% Line 3763
		call 'erlang':'is_list'
		    (Key) ->
	      do  %% Line 3764
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Key_UC> =
		      %% Line 3765
		      call 'unicode':'characters_to_binary'
			  ([Key|[0]])
		  in  let <_cor10> =
			  %% Line 3767
			  call 'erlang':'byte_size'
			      (Key_UC)
		      in  let <_cor5> =
			      %% Line 3767
			      call 'erlang':'byte_size'
				  (Key_UC)
			  in  let <_cor6> =
				  %% Line 3767
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 3767
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 3767
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 3767
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 3767
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Key_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 3766
						  call 'wxe_util':'call'
						      (3363, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'getProperty',2}}] )
	    -| ['compiler_generated'] )
	end
'getStyleBitsNeeded'/1 =
    %% Line 3772
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3773
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3775
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3774
		      call 'wxe_util':'call'
			  (3364, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getStyleBitsNeeded',1}}] )
	    -| ['compiler_generated'] )
	end
'getCurrentLine'/1 =
    %% Line 3780
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3781
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3783
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3782
		      call 'wxe_util':'call'
			  (3365, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCurrentLine',1}}] )
	    -| ['compiler_generated'] )
	end
'styleSetSpec'/3 =
    %% Line 3788
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},StyleNum,Spec>
	      when let <_cor3> =
		    %% Line 3789
		    call 'erlang':'is_integer'
			(StyleNum)
		in  let <_cor4> =
			%% Line 3789
			call 'erlang':'is_list'
			    (Spec)
		    in  %% Line 3789
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3790
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Spec_UC> =
		      %% Line 3791
		      call 'unicode':'characters_to_binary'
			  ([Spec|[0]])
		  in  let <_cor13> =
			  %% Line 3793
			  call 'erlang':'byte_size'
			      (Spec_UC)
		      in  let <_cor8> =
			      %% Line 3793
			      call 'erlang':'byte_size'
				  (Spec_UC)
			  in  let <_cor9> =
				  %% Line 3793
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 3793
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 3793
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 3793
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 3793
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<StyleNum>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<Spec_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 3792
						  call 'wxe_util':'cast'
						      (3366, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'styleSetSpec',3}}] )
	    -| ['compiler_generated'] )
	end
'styleSetFont'/3 =
    %% Line 3798
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},StyleNum,{'wx_ref',FontRef,FontT,_cor12}>
	      when %% Line 3799
		call 'erlang':'is_integer'
		    (StyleNum) ->
	      do  %% Line 3800
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 3801
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (FontT,
				       'wxFont') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call FontT:'parent_class'
				    ('wxFont')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor7> =
			  %% Line 3803
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<StyleNum>(32,1,'integer',['unsigned'|['native']]),
			    #<FontRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 3802
			  call 'wxe_util':'cast'
			      (3367, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'styleSetFont',3}}] )
	    -| ['compiler_generated'] )
	end
'styleSetFontAttr'/7 =
    %% Line 3809
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor25,_cor26,_cor27},StyleNum,Size,FaceName,Bold,Italic,Underline>
	      when %% Line 3810
		( try
		      let <_cor7> =
			  call 'erlang':'is_integer'
			      (StyleNum)
		      in  let <_cor8> =
			      call 'erlang':'is_integer'
				  (Size)
			  in  let <_cor9> =
				  call 'erlang':'is_list'
				      (FaceName)
			      in  let <_cor10> =
				      call 'erlang':'is_boolean'
					  (Bold)
				  in  let <_cor11> =
					  call 'erlang':'is_boolean'
					      (Italic)
				      in  let <_cor12> =
					      call 'erlang':'is_boolean'
						  (Underline)
					  in  let <_cor13> =
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'and'
											 -| ['compiler_generated'] )
							(_cor11, _cor12)
						    -| ['compiler_generated'] )
					      in  let <_cor14> =
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'and'
											     -| ['compiler_generated'] )
							    (_cor10, _cor13)
							-| ['compiler_generated'] )
						  in  let <_cor15> =
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'and'
												 -| ['compiler_generated'] )
								(_cor9, _cor14)
							    -| ['compiler_generated'] )
						      in  let <_cor16> =
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'and'
												     -| ['compiler_generated'] )
								    (_cor8, _cor15)
								-| ['compiler_generated'] )
							  in  ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'and'
												     -| ['compiler_generated'] )
								    (_cor7, _cor16)
								-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 3811
	      apply 'styleSetFontAttr'/8
		  (This, StyleNum, Size, FaceName, Bold, Italic, Underline, [])
	  ( <_cor24,_cor23,_cor22,_cor21,_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22,_cor21,_cor20,_cor19,_cor18})
		  -| [{'function_name',{'styleSetFontAttr',7}}] )
	    -| ['compiler_generated'] )
	end
'styleSetFontAttr'/8 =
    %% Line 3818
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor49},StyleNum,Size,FaceName,Bold,Italic,Underline,Options>
	      when %% Line 3819
		try
		    let <_cor8> =
			call 'erlang':'is_integer'
			    (StyleNum)
		    in  let <_cor9> =
			    call 'erlang':'is_integer'
				(Size)
			in  let <_cor10> =
				call 'erlang':'is_list'
				    (FaceName)
			    in  let <_cor11> =
				    call 'erlang':'is_boolean'
					(Bold)
				in  let <_cor12> =
					call 'erlang':'is_boolean'
					    (Italic)
				    in  let <_cor13> =
					    call 'erlang':'is_boolean'
						(Underline)
					in  let <_cor14> =
						call 'erlang':'is_list'
						    (Options)
					    in  let <_cor15> =
						    call 'erlang':'and'
							(_cor13, _cor14)
						in  let <_cor16> =
							call 'erlang':'and'
							    (_cor12, _cor15)
						    in  let <_cor17> =
							    call 'erlang':'and'
								(_cor11, _cor16)
							in  let <_cor18> =
								call 'erlang':'and'
								    (_cor10, _cor17)
							    in  let <_cor19> =
								    call 'erlang':'and'
									(_cor9, _cor18)
								in  call 'erlang':'and'
									(_cor8, _cor19)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 3820
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <FaceName_UC> =
		      %% Line 3821
		      call 'unicode':'characters_to_binary'
			  ([FaceName|[0]])
		  in  let <MOpts> =
			  %% Line 3822
			  ( fun (_cor25,_cor24) ->
				case <_cor25,_cor24> of
				  <{'encoding',Encoding},Acc> when 'true' ->
				      let <_cor23> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<Encoding>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor23|Acc]
				  %% Line 3823
				  <BadOpt,_cor50> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-styleSetFontAttr/8-fun-0-'}}] )
		      in  let <_cor29> =
			      %% Line 3824
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 3824
				  call 'erlang':'list_to_binary'
				      (_cor29)
			      in  let <_cor39> =
				      %% Line 3826
				      call 'erlang':'byte_size'
					  (FaceName_UC)
				  in  let <_cor34> =
					  %% Line 3826
					  call 'erlang':'byte_size'
					      (FaceName_UC)
				      in  let <_cor35> =
					      %% Line 3826
					      call 'erlang':'+'
						  (0, _cor34)
					  in  let <_cor36> =
						  %% Line 3826
						  call 'erlang':'band'
						      (_cor35, 7)
					      in  let <_cor37> =
						      %% Line 3826
						      call 'erlang':'-'
							  (8, _cor36)
						  in  let <_cor38> =
							  %% Line 3826
							  call 'erlang':'band'
							      (_cor37, 7)
						      in  let <_cor33> =
							      %% Line 3826
							      call 'wxe_util':'from_bool'
								  (Bold)
							  in  let <_cor32> =
								  %% Line 3826
								  call 'wxe_util':'from_bool'
								      (Italic)
							      in  let <_cor31> =
								      %% Line 3826
								      call 'wxe_util':'from_bool'
									  (Underline)
								  in  let <_cor40> =
									  %% Line 3826
									  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
									    #<StyleNum>(32,1,'integer',['unsigned'|['native']]),
									    #<Size>(32,1,'integer',['unsigned'|['native']]),
									    #<_cor39>(32,1,'integer',['unsigned'|['native']]),
									    #<FaceName_UC>('all',8,'binary',['unsigned'|['big']]),
									    #<0>(_cor38,8,'integer',['unsigned'|['big']]),
									    #<_cor33>(32,1,'integer',['unsigned'|['native']]),
									    #<_cor32>(32,1,'integer',['unsigned'|['native']]),
									    #<_cor31>(32,1,'integer',['unsigned'|['native']]),
									    #<0>(32,1,'integer',['unsigned'|['big']]),
									    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
								      in  %% Line 3825
									  call 'wxe_util':'cast'
									      (3368, _cor40)
	  ( <_cor48,_cor47,_cor46,_cor45,_cor44,_cor43,_cor42,_cor41> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor48,_cor47,_cor46,_cor45,_cor44,_cor43,_cor42,_cor41})
		  -| [{'function_name',{'styleSetFontAttr',8}}] )
	    -| ['compiler_generated'] )
	end
'styleSetCharacterSet'/3 =
    %% Line 3831
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Style,CharacterSet>
	      when let <_cor3> =
		    %% Line 3832
		    call 'erlang':'is_integer'
			(Style)
		in  let <_cor4> =
			%% Line 3832
			call 'erlang':'is_integer'
			    (CharacterSet)
		    in  %% Line 3832
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3833
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 3835
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Style>(32,1,'integer',['unsigned'|['native']]),
			#<CharacterSet>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3834
		      call 'wxe_util':'cast'
			  (3369, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'styleSetCharacterSet',3}}] )
	    -| ['compiler_generated'] )
	end
'styleSetFontEncoding'/3 =
    %% Line 3841
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Style,Encoding>
	      when let <_cor3> =
		    %% Line 3842
		    call 'erlang':'is_integer'
			(Style)
		in  let <_cor4> =
			%% Line 3842
			call 'erlang':'is_integer'
			    (Encoding)
		    in  %% Line 3842
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3843
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 3845
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Style>(32,1,'integer',['unsigned'|['native']]),
			#<Encoding>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3844
		      call 'wxe_util':'cast'
			  (3370, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'styleSetFontEncoding',3}}] )
	    -| ['compiler_generated'] )
	end
'cmdKeyExecute'/2 =
    %% Line 3850
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Cmd>
	      when %% Line 3851
		call 'erlang':'is_integer'
		    (Cmd) ->
	      do  %% Line 3852
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3854
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Cmd>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3853
		      call 'wxe_util':'cast'
			  (3371, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'cmdKeyExecute',2}}] )
	    -| ['compiler_generated'] )
	end
'setMargins'/3 =
    %% Line 3859
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Left,Right>
	      when let <_cor3> =
		    %% Line 3860
		    call 'erlang':'is_integer'
			(Left)
		in  let <_cor4> =
			%% Line 3860
			call 'erlang':'is_integer'
			    (Right)
		    in  %% Line 3860
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3861
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 3863
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Left>(32,1,'integer',['unsigned'|['native']]),
			#<Right>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3862
		      call 'wxe_util':'cast'
			  (3372, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setMargins',3}}] )
	    -| ['compiler_generated'] )
	end
'getSelection'/1 =
    %% Line 3868
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3869
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3871
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3870
		      call 'wxe_util':'call'
			  (3373, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSelection',1}}] )
	    -| ['compiler_generated'] )
	end
'pointFromPosition'/2 =
    %% Line 3876
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 3877
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 3878
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3880
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3879
		      call 'wxe_util':'call'
			  (3374, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'pointFromPosition',2}}] )
	    -| ['compiler_generated'] )
	end
'scrollToLine'/2 =
    %% Line 3885
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 3886
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 3887
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3889
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3888
		      call 'wxe_util':'cast'
			  (3375, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'scrollToLine',2}}] )
	    -| ['compiler_generated'] )
	end
'scrollToColumn'/2 =
    %% Line 3894
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Column>
	      when %% Line 3895
		call 'erlang':'is_integer'
		    (Column) ->
	      do  %% Line 3896
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3898
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Column>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3897
		      call 'wxe_util':'cast'
			  (3376, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'scrollToColumn',2}}] )
	    -| ['compiler_generated'] )
	end
'setVScrollBar'/2 =
    %% Line 3903
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',BarRef,BarT,_cor10}> when 'true' ->
	      do  %% Line 3904
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 3905
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (BarT,
				       'wxScrollBar') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call BarT:'parent_class'
				    ('wxScrollBar')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 3907
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<BarRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 3906
			  call 'wxe_util':'cast'
			      (3377, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setVScrollBar',2}}] )
	    -| ['compiler_generated'] )
	end
'setHScrollBar'/2 =
    %% Line 3912
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',BarRef,BarT,_cor10}> when 'true' ->
	      do  %% Line 3913
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 3914
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (BarT,
				       'wxScrollBar') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call BarT:'parent_class'
				    ('wxScrollBar')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 3916
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<BarRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 3915
			  call 'wxe_util':'cast'
			      (3378, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setHScrollBar',2}}] )
	    -| ['compiler_generated'] )
	end
'getLastKeydownProcessed'/1 =
    %% Line 3921
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3922
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3924
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3923
		      call 'wxe_util':'call'
			  (3379, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLastKeydownProcessed',1}}] )
	    -| ['compiler_generated'] )
	end
'setLastKeydownProcessed'/2 =
    %% Line 3929
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor8},Val>
	      when %% Line 3930
		call 'erlang':'is_boolean'
		    (Val) ->
	      do  %% Line 3931
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 3933
		      call 'wxe_util':'from_bool'
			  (Val)
		  in  let <_cor5> =
			  %% Line 3933
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 3932
			  call 'wxe_util':'cast'
			      (3380, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'setLastKeydownProcessed',2}}] )
	    -| ['compiler_generated'] )
	end
'saveFile'/2 =
    %% Line 3938
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Filename>
	      when %% Line 3939
		call 'erlang':'is_list'
		    (Filename) ->
	      do  %% Line 3940
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Filename_UC> =
		      %% Line 3941
		      call 'unicode':'characters_to_binary'
			  ([Filename|[0]])
		  in  let <_cor10> =
			  %% Line 3943
			  call 'erlang':'byte_size'
			      (Filename_UC)
		      in  let <_cor5> =
			      %% Line 3943
			      call 'erlang':'byte_size'
				  (Filename_UC)
			  in  let <_cor6> =
				  %% Line 3943
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 3943
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 3943
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 3943
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 3943
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Filename_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 3942
						  call 'wxe_util':'call'
						      (3381, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'saveFile',2}}] )
	    -| ['compiler_generated'] )
	end
'loadFile'/2 =
    %% Line 3948
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Filename>
	      when %% Line 3949
		call 'erlang':'is_list'
		    (Filename) ->
	      do  %% Line 3950
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Filename_UC> =
		      %% Line 3951
		      call 'unicode':'characters_to_binary'
			  ([Filename|[0]])
		  in  let <_cor10> =
			  %% Line 3953
			  call 'erlang':'byte_size'
			      (Filename_UC)
		      in  let <_cor5> =
			      %% Line 3953
			      call 'erlang':'byte_size'
				  (Filename_UC)
			  in  let <_cor6> =
				  %% Line 3953
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 3953
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 3953
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 3953
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 3953
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Filename_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 3952
						  call 'wxe_util':'call'
						      (3382, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'loadFile',2}}] )
	    -| ['compiler_generated'] )
	end
'doDragOver'/4 =
    %% Line 3960
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor15},X,Y,Def>
	      when %% Line 3961
		try
		    let <_cor4> =
			call 'erlang':'is_integer'
			    (X)
		    in  let <_cor5> =
			    call 'erlang':'is_integer'
				(Y)
			in  let <_cor6> =
				call 'erlang':'is_integer'
				    (Def)
			    in  let <_cor7> =
				    call 'erlang':'and'
					(_cor5, _cor6)
				in  call 'erlang':'and'
					(_cor4, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 3962
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor10> =
		      %% Line 3964
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<X>(32,1,'integer',['unsigned'|['native']]),
			#<Y>(32,1,'integer',['unsigned'|['native']]),
			#<Def>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3963
		      call 'wxe_util':'call'
			  (3383, _cor10)
	  ( <_cor14,_cor13,_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11})
		  -| [{'function_name',{'doDragOver',4}}] )
	    -| ['compiler_generated'] )
	end
'doDropText'/4 =
    %% Line 3969
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor22},X,Y,Data>
	      when %% Line 3970
		try
		    let <_cor4> =
			call 'erlang':'is_integer'
			    (X)
		    in  let <_cor5> =
			    call 'erlang':'is_integer'
				(Y)
			in  let <_cor6> =
				call 'erlang':'is_list'
				    (Data)
			    in  let <_cor7> =
				    call 'erlang':'and'
					(_cor5, _cor6)
				in  call 'erlang':'and'
					(_cor4, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 3971
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Data_UC> =
		      %% Line 3972
		      call 'unicode':'characters_to_binary'
			  ([Data|[0]])
		  in  let <_cor16> =
			  %% Line 3974
			  call 'erlang':'byte_size'
			      (Data_UC)
		      in  let <_cor11> =
			      %% Line 3974
			      call 'erlang':'byte_size'
				  (Data_UC)
			  in  let <_cor12> =
				  %% Line 3974
				  call 'erlang':'+'
				      (0, _cor11)
			      in  let <_cor13> =
				      %% Line 3974
				      call 'erlang':'band'
					  (_cor12, 7)
				  in  let <_cor14> =
					  %% Line 3974
					  call 'erlang':'-'
					      (8, _cor13)
				      in  let <_cor15> =
					      %% Line 3974
					      call 'erlang':'band'
						  (_cor14, 7)
					  in  let <_cor17> =
						  %% Line 3974
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<X>(32,1,'integer',['unsigned'|['native']]),
						    #<Y>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor16>(32,1,'integer',['unsigned'|['native']]),
						    #<Data_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor15,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 3973
						  call 'wxe_util':'call'
						      (3384, _cor17)
	  ( <_cor21,_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor21,_cor20,_cor19,_cor18})
		  -| [{'function_name',{'doDropText',4}}] )
	    -| ['compiler_generated'] )
	end
'getUseAntiAliasing'/1 =
    %% Line 3979
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 3980
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 3982
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 3981
		      call 'wxe_util':'call'
			  (3385, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getUseAntiAliasing',1}}] )
	    -| ['compiler_generated'] )
	end
'addTextRaw'/2 =
    %% Line 3987
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Text>
	      when %% Line 3988
		call 'erlang':'is_binary'
		    (Text) ->
	      do  %% Line 3989
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 3990
		      call 'wxe_util':'send_bin'
			  (Text)
		      let <_cor4> =
			  %% Line 3992
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 3991
			  call 'wxe_util':'cast'
			      (3386, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'addTextRaw',2}}] )
	    -| ['compiler_generated'] )
	end
'insertTextRaw'/3 =
    %% Line 3997
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Pos,Text>
	      when let <_cor3> =
		    %% Line 3998
		    call 'erlang':'is_integer'
			(Pos)
		in  let <_cor4> =
			%% Line 3998
			call 'erlang':'is_binary'
			    (Text)
		    in  %% Line 3998
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 3999
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 4000
		      call 'wxe_util':'send_bin'
			  (Text)
		      let <_cor7> =
			  %% Line 4002
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Pos>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 4001
			  call 'wxe_util':'cast'
			      (3387, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'insertTextRaw',3}}] )
	    -| ['compiler_generated'] )
	end
'getCurLineRaw'/1 =
    %% Line 4008
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 4009
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 4011
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 4010
		      call 'wxe_util':'call'
			  (3388, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getCurLineRaw',1}}] )
	    -| ['compiler_generated'] )
	end
'getLineRaw'/2 =
    %% Line 4016
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Line>
	      when %% Line 4017
		call 'erlang':'is_integer'
		    (Line) ->
	      do  %% Line 4018
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 4020
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Line>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 4019
		      call 'wxe_util':'call'
			  (3389, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getLineRaw',2}}] )
	    -| ['compiler_generated'] )
	end
'getSelectedTextRaw'/1 =
    %% Line 4025
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 4026
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 4028
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 4027
		      call 'wxe_util':'call'
			  (3390, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSelectedTextRaw',1}}] )
	    -| ['compiler_generated'] )
	end
'getTextRangeRaw'/3 =
    %% Line 4033
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},StartPos,EndPos>
	      when let <_cor3> =
		    %% Line 4034
		    call 'erlang':'is_integer'
			(StartPos)
		in  let <_cor4> =
			%% Line 4034
			call 'erlang':'is_integer'
			    (EndPos)
		    in  %% Line 4034
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 4035
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 4037
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<StartPos>(32,1,'integer',['unsigned'|['native']]),
			#<EndPos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 4036
		      call 'wxe_util':'call'
			  (3391, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'getTextRangeRaw',3}}] )
	    -| ['compiler_generated'] )
	end
'setTextRaw'/2 =
    %% Line 4042
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Text>
	      when %% Line 4043
		call 'erlang':'is_binary'
		    (Text) ->
	      do  %% Line 4044
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 4045
		      call 'wxe_util':'send_bin'
			  (Text)
		      let <_cor4> =
			  %% Line 4047
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 4046
			  call 'wxe_util':'cast'
			      (3392, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setTextRaw',2}}] )
	    -| ['compiler_generated'] )
	end
'getTextRaw'/1 =
    %% Line 4052
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 4053
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 4055
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 4054
		      call 'wxe_util':'call'
			  (3393, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getTextRaw',1}}] )
	    -| ['compiler_generated'] )
	end
'appendTextRaw'/2 =
    %% Line 4060
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Text>
	      when %% Line 4061
		call 'erlang':'is_binary'
		    (Text) ->
	      do  %% Line 4062
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 4063
		      call 'wxe_util':'send_bin'
			  (Text)
		      let <_cor4> =
			  %% Line 4065
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 4064
			  call 'wxe_util':'cast'
			      (3394, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'appendTextRaw',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 4069
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 4070
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxStyledTextCtrl') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxStyledTextCtrl')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 4071
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 4072
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'setLabel'/2 =
    %% Line 4075
    fun (_cor1,_cor0) ->
	call 'wxControl':'setLabel'
	    (_cor1, _cor0)
'getLabel'/1 =
    %% Line 4077
    fun (_cor0) ->
	call 'wxControl':'getLabel'
	    (_cor0)
'warpPointer'/3 =
    %% Line 4080
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 4082
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 4084
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 4086
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 4088
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 4090
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 4092
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 4094
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 4096
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 4098
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 4100
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 4102
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 4104
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 4106
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 4108
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 4110
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 4112
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 4114
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 4116
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 4118
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 4120
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 4122
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 4124
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 4126
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 4128
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 4130
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 4132
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 4134
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 4136
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 4138
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 4140
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 4142
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 4144
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 4146
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 4148
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 4150
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 4152
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 4154
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 4156
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 4158
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 4160
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 4162
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 4164
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 4166
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 4168
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 4170
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 4172
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 4174
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 4176
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 4178
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 4180
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 4182
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 4184
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 4186
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 4188
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 4190
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 4192
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 4194
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 4196
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 4198
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 4200
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 4202
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 4204
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 4206
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 4208
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 4210
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 4212
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 4214
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 4216
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 4218
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 4220
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 4222
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 4224
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 4226
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 4228
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 4230
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 4232
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 4234
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 4236
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'navigate'/2 =
    %% Line 4238
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 4240
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 4242
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 4244
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 4246
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 4248
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 4250
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 4252
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 4254
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 4256
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'layout'/1 =
    %% Line 4258
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 4260
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 4262
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 4264
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 4266
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 4268
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 4270
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 4272
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 4274
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 4276
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 4278
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 4280
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 4282
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 4284
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 4286
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 4288
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 4290
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 4292
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 4294
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 4296
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 4298
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 4300
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 4302
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 4304
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 4306
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 4308
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 4310
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 4312
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 4314
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 4316
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 4318
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 4320
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 4322
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 4324
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 4326
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 4328
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 4330
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 4332
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 4334
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 4336
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 4338
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 4340
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 4342
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 4344
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 4346
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 4348
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 4350
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 4352
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 4354
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 4356
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 4358
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 4360
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 4362
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 4364
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 4366
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 4368
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 4370
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 4372
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 4374
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 4376
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 4378
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 4380
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 4382
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 4384
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 4386
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 4388
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 4390
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 4392
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 4394
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 4396
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 4398
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 4400
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 4402
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 4404
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 4406
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 4408
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 4410
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 4412
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 4414
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 4416
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 4419
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 4421
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 4423
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 4425
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 4427
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxStyledTextCtrl')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxStyledTextCtrl', _cor0)
end