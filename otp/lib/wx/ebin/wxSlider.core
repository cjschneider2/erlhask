module 'wxSlider' ['cacheBestSize'/2,
		   'captureMouse'/1,
		   'center'/1,
		   'center'/2,
		   'centerOnParent'/1,
		   'centerOnParent'/2,
		   'centre'/1,
		   'centre'/2,
		   'centreOnParent'/1,
		   'centreOnParent'/2,
		   'clearBackground'/1,
		   'clientToScreen'/2,
		   'clientToScreen'/3,
		   'close'/1,
		   'close'/2,
		   'connect'/2,
		   'connect'/3,
		   'convertDialogToPixels'/2,
		   'convertPixelsToDialog'/2,
		   'create'/6,
		   'create'/7,
		   'destroy'/1,
		   'destroyChildren'/1,
		   'disable'/1,
		   'disconnect'/1,
		   'disconnect'/2,
		   'disconnect'/3,
		   'enable'/1,
		   'enable'/2,
		   'findWindow'/2,
		   'fit'/1,
		   'fitInside'/1,
		   'freeze'/1,
		   'getAcceleratorTable'/1,
		   'getBackgroundColour'/1,
		   'getBackgroundStyle'/1,
		   'getBestSize'/1,
		   'getCaret'/1,
		   'getCharHeight'/1,
		   'getCharWidth'/1,
		   'getChildren'/1,
		   'getClientSize'/1,
		   'getContainingSizer'/1,
		   'getCursor'/1,
		   'getDropTarget'/1,
		   'getEventHandler'/1,
		   'getExtraStyle'/1,
		   'getFont'/1,
		   'getForegroundColour'/1,
		   'getGrandParent'/1,
		   'getHandle'/1,
		   'getHelpText'/1,
		   'getId'/1,
		   'getLabel'/1,
		   'getLineSize'/1,
		   'getMax'/1,
		   'getMaxSize'/1,
		   'getMin'/1,
		   'getMinSize'/1,
		   'getName'/1,
		   'getPageSize'/1,
		   'getParent'/1,
		   'getPosition'/1,
		   'getRect'/1,
		   'getScreenPosition'/1,
		   'getScreenRect'/1,
		   'getScrollPos'/2,
		   'getScrollRange'/2,
		   'getScrollThumb'/2,
		   'getSize'/1,
		   'getSizer'/1,
		   'getTextExtent'/2,
		   'getTextExtent'/3,
		   'getThumbLength'/1,
		   'getToolTip'/1,
		   'getUpdateRegion'/1,
		   'getValue'/1,
		   'getVirtualSize'/1,
		   'getWindowStyleFlag'/1,
		   'getWindowVariant'/1,
		   'hasCapture'/1,
		   'hasScrollbar'/2,
		   'hasTransparentBackground'/1,
		   'hide'/1,
		   'inheritAttributes'/1,
		   'initDialog'/1,
		   'invalidateBestSize'/1,
		   'isEnabled'/1,
		   'isExposed'/2,
		   'isExposed'/3,
		   'isExposed'/5,
		   'isRetained'/1,
		   'isShown'/1,
		   'isTopLevel'/1,
		   'layout'/1,
		   'lineDown'/1,
		   'lineUp'/1,
		   'lower'/1,
		   'makeModal'/1,
		   'makeModal'/2,
		   'module_info'/0,
		   'module_info'/1,
		   'move'/2,
		   'move'/3,
		   'move'/4,
		   'moveAfterInTabOrder'/2,
		   'moveBeforeInTabOrder'/2,
		   'navigate'/1,
		   'navigate'/2,
		   'new'/0,
		   'new'/5,
		   'new'/6,
		   'pageDown'/1,
		   'pageUp'/1,
		   'parent_class'/1,
		   'popEventHandler'/1,
		   'popEventHandler'/2,
		   'popupMenu'/2,
		   'popupMenu'/3,
		   'popupMenu'/4,
		   'raise'/1,
		   'refresh'/1,
		   'refresh'/2,
		   'refreshRect'/2,
		   'refreshRect'/3,
		   'releaseMouse'/1,
		   'removeChild'/2,
		   'reparent'/2,
		   'screenToClient'/1,
		   'screenToClient'/2,
		   'scrollLines'/2,
		   'scrollPages'/2,
		   'scrollWindow'/3,
		   'scrollWindow'/4,
		   'setAcceleratorTable'/2,
		   'setAutoLayout'/2,
		   'setBackgroundColour'/2,
		   'setBackgroundStyle'/2,
		   'setCaret'/2,
		   'setClientSize'/2,
		   'setClientSize'/3,
		   'setContainingSizer'/2,
		   'setCursor'/2,
		   'setDropTarget'/2,
		   'setExtraStyle'/2,
		   'setFocus'/1,
		   'setFocusFromKbd'/1,
		   'setFont'/2,
		   'setForegroundColour'/2,
		   'setHelpText'/2,
		   'setId'/2,
		   'setLabel'/2,
		   'setLineSize'/2,
		   'setMaxSize'/2,
		   'setMinSize'/2,
		   'setName'/2,
		   'setOwnBackgroundColour'/2,
		   'setOwnFont'/2,
		   'setOwnForegroundColour'/2,
		   'setPageSize'/2,
		   'setPalette'/2,
		   'setRange'/3,
		   'setScrollPos'/3,
		   'setScrollPos'/4,
		   'setScrollbar'/5,
		   'setScrollbar'/6,
		   'setSize'/2,
		   'setSize'/3,
		   'setSize'/5,
		   'setSize'/6,
		   'setSizeHints'/2,
		   'setSizeHints'/3,
		   'setSizeHints'/4,
		   'setSizer'/2,
		   'setSizer'/3,
		   'setSizerAndFit'/2,
		   'setSizerAndFit'/3,
		   'setThemeEnabled'/2,
		   'setThumbLength'/2,
		   'setToolTip'/2,
		   'setValue'/2,
		   'setVirtualSize'/2,
		   'setVirtualSize'/3,
		   'setVirtualSizeHints'/2,
		   'setVirtualSizeHints'/3,
		   'setVirtualSizeHints'/4,
		   'setWindowStyle'/2,
		   'setWindowStyleFlag'/2,
		   'setWindowVariant'/2,
		   'shouldInheritColours'/1,
		   'show'/1,
		   'show'/2,
		   'thaw'/1,
		   'transferDataFromWindow'/1,
		   'transferDataToWindow'/1,
		   'update'/1,
		   'updateWindowUI'/1,
		   'updateWindowUI'/2,
		   'validate'/1,
		   'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 74
		'export_type' =
		    %% Line 74
		    [{'wxSlider',0}],
		%% Line 81
		'type' =
		    %% Line 81
		    [{'wxSlider',{'remote_type',81,[{'atom',81,'wx'}|[{'atom',81,'wx_object'}|[[]]]]},[]}],
		%% Line 83
		'spec' =
		    %% Line 83
		    [{{'new',0},[{'type',83,'fun',[{'type',83,'product',[]}|[{'type',83,'wxSlider',[]}]]}]}],
		%% Line 89
		'spec' =
		    %% Line 89
		    [{{'new',5},[{'type',89,'bounded_fun',[{'type',89,'fun',[{'type',89,'product',[{'var',89,'Parent'}|[{'var',89,'Id'}|[{'var',89,'Value'}|[{'var',89,'MinValue'}|[{'var',89,'MaxValue'}]]]]]}|[{'type',89,'wxSlider',[]}]]}|[[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'Parent'}|[{'remote_type',90,[{'atom',90,'wxWindow'}|[{'atom',90,'wxWindow'}|[[]]]]}]]]]}|[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'Id'}|[{'type',90,'integer',[]}]]]]}|[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'Value'}|[{'type',90,'integer',[]}]]]]}|[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'MinValue'}|[{'type',90,'integer',[]}]]]]}|[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'MaxValue'}|[{'type',90,'integer',[]}]]]]}]]]]]]]}]}],
		%% Line 97
		'spec' =
		    %% Line 97
		    [{{'new',6},[{'type',97,'bounded_fun',[{'type',97,'fun',[{'type',97,'product',[{'var',97,'Parent'}|[{'var',97,'Id'}|[{'var',97,'Value'}|[{'var',97,'MinValue'}|[{'var',97,'MaxValue'}|[{'type',97,'list',[{'var',97,'Option'}]}]]]]]]}|[{'type',97,'wxSlider',[]}]]}|[[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'Parent'}|[{'remote_type',98,[{'atom',98,'wxWindow'}|[{'atom',98,'wxWindow'}|[[]]]]}]]]]}|[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'Id'}|[{'type',98,'integer',[]}]]]]}|[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'Value'}|[{'type',98,'integer',[]}]]]]}|[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'MinValue'}|[{'type',98,'integer',[]}]]]]}|[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'MaxValue'}|[{'type',98,'integer',[]}]]]]}|[{'type',99,'constraint',[{'atom',99,'is_subtype'}|[[{'var',99,'Option'}|[{'type',99,'union',[{'type',99,'tuple',[{'atom',99,'pos'}|[{'type',99,'tuple',[{'ann_type',99,[{'var',99,'X'}|[{'type',99,'integer',[]}]]}|[{'ann_type',99,[{'var',99,'Y'}|[{'type',99,'integer',[]}]]}]]}]]}|[{'type',100,'tuple',[{'atom',100,'size'}|[{'type',100,'tuple',[{'ann_type',100,[{'var',100,'W'}|[{'type',100,'integer',[]}]]}|[{'ann_type',100,[{'var',100,'H'}|[{'type',100,'integer',[]}]]}]]}]]}|[{'type',101,'tuple',[{'atom',101,'style'}|[{'type',101,'integer',[]}]]}|[{'type',102,'tuple',[{'atom',102,'validator'}|[{'remote_type',102,[{'atom',102,'wx'}|[{'atom',102,'wx_object'}|[[]]]]}]]}]]]]}]]]]}]]]]]]]]}]}],
		%% Line 116
		'spec' =
		    %% Line 116
		    [{{'create',6},[{'type',116,'bounded_fun',[{'type',116,'fun',[{'type',116,'product',[{'var',116,'This'}|[{'var',116,'Parent'}|[{'var',116,'Id'}|[{'var',116,'Value'}|[{'var',116,'MinValue'}|[{'var',116,'MaxValue'}]]]]]]}|[{'type',116,'boolean',[]}]]}|[[{'type',117,'constraint',[{'atom',117,'is_subtype'}|[[{'var',117,'This'}|[{'type',117,'wxSlider',[]}]]]]}|[{'type',117,'constraint',[{'atom',117,'is_subtype'}|[[{'var',117,'Parent'}|[{'remote_type',117,[{'atom',117,'wxWindow'}|[{'atom',117,'wxWindow'}|[[]]]]}]]]]}|[{'type',117,'constraint',[{'atom',117,'is_subtype'}|[[{'var',117,'Id'}|[{'type',117,'integer',[]}]]]]}|[{'type',117,'constraint',[{'atom',117,'is_subtype'}|[[{'var',117,'Value'}|[{'type',117,'integer',[]}]]]]}|[{'type',117,'constraint',[{'atom',117,'is_subtype'}|[[{'var',117,'MinValue'}|[{'type',117,'integer',[]}]]]]}|[{'type',117,'constraint',[{'atom',117,'is_subtype'}|[[{'var',117,'MaxValue'}|[{'type',117,'integer',[]}]]]]}]]]]]]]]}]}],
		%% Line 124
		'spec' =
		    %% Line 124
		    [{{'create',7},[{'type',124,'bounded_fun',[{'type',124,'fun',[{'type',124,'product',[{'var',124,'This'}|[{'var',124,'Parent'}|[{'var',124,'Id'}|[{'var',124,'Value'}|[{'var',124,'MinValue'}|[{'var',124,'MaxValue'}|[{'type',124,'list',[{'var',124,'Option'}]}]]]]]]]}|[{'type',124,'boolean',[]}]]}|[[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'This'}|[{'type',125,'wxSlider',[]}]]]]}|[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'Parent'}|[{'remote_type',125,[{'atom',125,'wxWindow'}|[{'atom',125,'wxWindow'}|[[]]]]}]]]]}|[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'Id'}|[{'type',125,'integer',[]}]]]]}|[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'Value'}|[{'type',125,'integer',[]}]]]]}|[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'MinValue'}|[{'type',125,'integer',[]}]]]]}|[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'MaxValue'}|[{'type',125,'integer',[]}]]]]}|[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'Option'}|[{'type',126,'union',[{'type',126,'tuple',[{'atom',126,'pos'}|[{'type',126,'tuple',[{'ann_type',126,[{'var',126,'X'}|[{'type',126,'integer',[]}]]}|[{'ann_type',126,[{'var',126,'Y'}|[{'type',126,'integer',[]}]]}]]}]]}|[{'type',127,'tuple',[{'atom',127,'size'}|[{'type',127,'tuple',[{'ann_type',127,[{'var',127,'W'}|[{'type',127,'integer',[]}]]}|[{'ann_type',127,[{'var',127,'H'}|[{'type',127,'integer',[]}]]}]]}]]}|[{'type',128,'tuple',[{'atom',128,'style'}|[{'type',128,'integer',[]}]]}|[{'type',129,'tuple',[{'atom',129,'validator'}|[{'remote_type',129,[{'atom',129,'wx'}|[{'atom',129,'wx_object'}|[[]]]]}]]}]]]]}]]]]}]]]]]]]]]}]}],
		%% Line 144
		'spec' =
		    %% Line 144
		    [{{'getLineSize',1},[{'type',144,'bounded_fun',[{'type',144,'fun',[{'type',144,'product',[{'var',144,'This'}]}|[{'type',144,'integer',[]}]]}|[[{'type',145,'constraint',[{'atom',145,'is_subtype'}|[[{'var',145,'This'}|[{'type',145,'wxSlider',[]}]]]]}]]]}]}],
		%% Line 152
		'spec' =
		    %% Line 152
		    [{{'getMax',1},[{'type',152,'bounded_fun',[{'type',152,'fun',[{'type',152,'product',[{'var',152,'This'}]}|[{'type',152,'integer',[]}]]}|[[{'type',153,'constraint',[{'atom',153,'is_subtype'}|[[{'var',153,'This'}|[{'type',153,'wxSlider',[]}]]]]}]]]}]}],
		%% Line 160
		'spec' =
		    %% Line 160
		    [{{'getMin',1},[{'type',160,'bounded_fun',[{'type',160,'fun',[{'type',160,'product',[{'var',160,'This'}]}|[{'type',160,'integer',[]}]]}|[[{'type',161,'constraint',[{'atom',161,'is_subtype'}|[[{'var',161,'This'}|[{'type',161,'wxSlider',[]}]]]]}]]]}]}],
		%% Line 168
		'spec' =
		    %% Line 168
		    [{{'getPageSize',1},[{'type',168,'bounded_fun',[{'type',168,'fun',[{'type',168,'product',[{'var',168,'This'}]}|[{'type',168,'integer',[]}]]}|[[{'type',169,'constraint',[{'atom',169,'is_subtype'}|[[{'var',169,'This'}|[{'type',169,'wxSlider',[]}]]]]}]]]}]}],
		%% Line 176
		'spec' =
		    %% Line 176
		    [{{'getThumbLength',1},[{'type',176,'bounded_fun',[{'type',176,'fun',[{'type',176,'product',[{'var',176,'This'}]}|[{'type',176,'integer',[]}]]}|[[{'type',177,'constraint',[{'atom',177,'is_subtype'}|[[{'var',177,'This'}|[{'type',177,'wxSlider',[]}]]]]}]]]}]}],
		%% Line 184
		'spec' =
		    %% Line 184
		    [{{'getValue',1},[{'type',184,'bounded_fun',[{'type',184,'fun',[{'type',184,'product',[{'var',184,'This'}]}|[{'type',184,'integer',[]}]]}|[[{'type',185,'constraint',[{'atom',185,'is_subtype'}|[[{'var',185,'This'}|[{'type',185,'wxSlider',[]}]]]]}]]]}]}],
		%% Line 192
		'spec' =
		    %% Line 192
		    [{{'setLineSize',2},[{'type',192,'bounded_fun',[{'type',192,'fun',[{'type',192,'product',[{'var',192,'This'}|[{'var',192,'LineSize'}]]}|[{'atom',192,'ok'}]]}|[[{'type',193,'constraint',[{'atom',193,'is_subtype'}|[[{'var',193,'This'}|[{'type',193,'wxSlider',[]}]]]]}|[{'type',193,'constraint',[{'atom',193,'is_subtype'}|[[{'var',193,'LineSize'}|[{'type',193,'integer',[]}]]]]}]]]]}]}],
		%% Line 201
		'spec' =
		    %% Line 201
		    [{{'setPageSize',2},[{'type',201,'bounded_fun',[{'type',201,'fun',[{'type',201,'product',[{'var',201,'This'}|[{'var',201,'PageSize'}]]}|[{'atom',201,'ok'}]]}|[[{'type',202,'constraint',[{'atom',202,'is_subtype'}|[[{'var',202,'This'}|[{'type',202,'wxSlider',[]}]]]]}|[{'type',202,'constraint',[{'atom',202,'is_subtype'}|[[{'var',202,'PageSize'}|[{'type',202,'integer',[]}]]]]}]]]]}]}],
		%% Line 210
		'spec' =
		    %% Line 210
		    [{{'setRange',3},[{'type',210,'bounded_fun',[{'type',210,'fun',[{'type',210,'product',[{'var',210,'This'}|[{'var',210,'MinValue'}|[{'var',210,'MaxValue'}]]]}|[{'atom',210,'ok'}]]}|[[{'type',211,'constraint',[{'atom',211,'is_subtype'}|[[{'var',211,'This'}|[{'type',211,'wxSlider',[]}]]]]}|[{'type',211,'constraint',[{'atom',211,'is_subtype'}|[[{'var',211,'MinValue'}|[{'type',211,'integer',[]}]]]]}|[{'type',211,'constraint',[{'atom',211,'is_subtype'}|[[{'var',211,'MaxValue'}|[{'type',211,'integer',[]}]]]]}]]]]]}]}],
		%% Line 219
		'spec' =
		    %% Line 219
		    [{{'setThumbLength',2},[{'type',219,'bounded_fun',[{'type',219,'fun',[{'type',219,'product',[{'var',219,'This'}|[{'var',219,'LenPixels'}]]}|[{'atom',219,'ok'}]]}|[[{'type',220,'constraint',[{'atom',220,'is_subtype'}|[[{'var',220,'This'}|[{'type',220,'wxSlider',[]}]]]]}|[{'type',220,'constraint',[{'atom',220,'is_subtype'}|[[{'var',220,'LenPixels'}|[{'type',220,'integer',[]}]]]]}]]]]}]}],
		%% Line 228
		'spec' =
		    %% Line 228
		    [{{'setValue',2},[{'type',228,'bounded_fun',[{'type',228,'fun',[{'type',228,'product',[{'var',228,'This'}|[{'var',228,'Value'}]]}|[{'atom',228,'ok'}]]}|[[{'type',229,'constraint',[{'atom',229,'is_subtype'}|[[{'var',229,'This'}|[{'type',229,'wxSlider',[]}]]]]}|[{'type',229,'constraint',[{'atom',229,'is_subtype'}|[[{'var',229,'Value'}|[{'type',229,'integer',[]}]]]]}]]]]}]}],
		%% Line 237
		'spec' =
		    %% Line 237
		    [{{'destroy',1},[{'type',237,'fun',[{'type',237,'product',[{'ann_type',237,[{'var',237,'This'}|[{'type',237,'wxSlider',[]}]]}]}|[{'atom',237,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 76
    fun (_cor0) ->
	case _cor0 of
	  <'wxControl'> when 'true' ->
	      'true'
	  %% Line 77
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 78
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 79
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxSlider'})
	end
'new'/0 =
    %% Line 84
    fun () ->
	%% Line 85
	call 'wxe_util':'construct'
	    (2167, %% Line 86
		   #{}#)
'new'/5 =
    %% Line 92
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor17,_cor18,_cor19},Id,Value,MinValue,MaxValue>
	      when %% Line 93
		( try
		      let <_cor5> =
			  call 'erlang':'is_integer'
			      (Id)
		      in  let <_cor6> =
			      call 'erlang':'is_integer'
				  (Value)
			  in  let <_cor7> =
				  call 'erlang':'is_integer'
				      (MinValue)
			      in  let <_cor8> =
				      call 'erlang':'is_integer'
					  (MaxValue)
				  in  let <_cor9> =
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'and'
										 -| ['compiler_generated'] )
						(_cor7, _cor8)
					    -| ['compiler_generated'] )
				      in  let <_cor10> =
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'and'
										     -| ['compiler_generated'] )
						    (_cor6, _cor9)
						-| ['compiler_generated'] )
					  in  ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'and'
										     -| ['compiler_generated'] )
						    (_cor5, _cor10)
						-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 94
	      apply 'new'/6
		  (Parent, Id, Value, MinValue, MaxValue, [])
	  ( <_cor16,_cor15,_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14,_cor13,_cor12})
		  -| [{'function_name',{'new',5}}] )
	    -| ['compiler_generated'] )
	end
'new'/6 =
    %% Line 103
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor36},Id,Value,MinValue,MaxValue,Options>
	      when %% Line 104
		try
		    let <_cor6> =
			call 'erlang':'is_integer'
			    (Id)
		    in  let <_cor7> =
			    call 'erlang':'is_integer'
				(Value)
			in  let <_cor8> =
				call 'erlang':'is_integer'
				    (MinValue)
			    in  let <_cor9> =
				    call 'erlang':'is_integer'
					(MaxValue)
				in  let <_cor10> =
					call 'erlang':'is_list'
					    (Options)
				    in  let <_cor11> =
					    call 'erlang':'and'
						(_cor9, _cor10)
					in  let <_cor12> =
						call 'erlang':'and'
						    (_cor8, _cor11)
					    in  let <_cor13> =
						    call 'erlang':'and'
							(_cor7, _cor12)
						in  call 'erlang':'and'
							(_cor6, _cor13)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 105
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 106
		      ( fun (_cor23,_cor22) ->
			    case <_cor23,_cor22> of
			      <{'pos',{PosX,PosY}},Acc> when 'true' ->
				  let <_cor16> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<PosX>(32,1,'integer',['unsigned'|['native']]),
					#<PosY>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor16|Acc]
			      %% Line 107
			      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				  let <_cor17> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<SizeW>(32,1,'integer',['unsigned'|['native']]),
					#<SizeH>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor17|Acc]
			      %% Line 108
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor18> =
				      #{#<3>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor18|Acc]
			      %% Line 109
			      <{'validator',{'wx_ref',ValidatorRef,ValidatorT,_cor37}},Acc> when 'true' ->
				  do  ( case <> of
					  ( <>
						when call 'erlang':'=:='
						      (ValidatorT,
						       'wx') ->
						'ok'
					    -| ['compiler_generated'] )
					  ( <> when 'true' ->
						call ValidatorT:'parent_class'
						    ('wx')
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				      let <_cor21> =
					  #{#<4>(32,1,'integer',['unsigned'|['native']]),
					    #<ValidatorRef>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor21|Acc]
			      %% Line 110
			      <BadOpt,_cor38> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/6-fun-0-'}}] )
		  in  let <_cor27> =
			  %% Line 111
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 111
			      call 'erlang':'list_to_binary'
				  (_cor27)
			  in  let <_cor29> =
				  %% Line 113
				  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				    #<Id>(32,1,'integer',['unsigned'|['native']]),
				    #<Value>(32,1,'integer',['unsigned'|['native']]),
				    #<MinValue>(32,1,'integer',['unsigned'|['native']]),
				    #<MaxValue>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 112
				  call 'wxe_util':'construct'
				      (2166, _cor29)
	  ( <_cor35,_cor34,_cor33,_cor32,_cor31,_cor30> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor35,_cor34,_cor33,_cor32,_cor31,_cor30})
		  -| [{'function_name',{'new',6}}] )
	    -| ['compiler_generated'] )
	end
'create'/6 =
    %% Line 119
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor20,_cor21,_cor22},Parent = {'wx_ref',_cor23,_cor24,_cor25},Id,Value,MinValue,MaxValue>
	      when %% Line 120
		( try
		      let <_cor6> =
			  call 'erlang':'is_integer'
			      (Id)
		      in  let <_cor7> =
			      call 'erlang':'is_integer'
				  (Value)
			  in  let <_cor8> =
				  call 'erlang':'is_integer'
				      (MinValue)
			      in  let <_cor9> =
				      call 'erlang':'is_integer'
					  (MaxValue)
				  in  let <_cor10> =
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'and'
										 -| ['compiler_generated'] )
						(_cor8, _cor9)
					    -| ['compiler_generated'] )
				      in  let <_cor11> =
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'and'
										     -| ['compiler_generated'] )
						    (_cor7, _cor10)
						-| ['compiler_generated'] )
					  in  ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'and'
										     -| ['compiler_generated'] )
						    (_cor6, _cor11)
						-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 121
	      apply 'create'/7
		  (This, Parent, Id, Value, MinValue, MaxValue, [])
	  ( <_cor19,_cor18,_cor17,_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17,_cor16,_cor15,_cor14})
		  -| [{'function_name',{'create',6}}] )
	    -| ['compiler_generated'] )
	end
'create'/7 =
    %% Line 130
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor40},{'wx_ref',ParentRef,ParentT,_cor41},Id,Value,MinValue,MaxValue,Options>
	      when %% Line 131
		try
		    let <_cor7> =
			call 'erlang':'is_integer'
			    (Id)
		    in  let <_cor8> =
			    call 'erlang':'is_integer'
				(Value)
			in  let <_cor9> =
				call 'erlang':'is_integer'
				    (MinValue)
			    in  let <_cor10> =
				    call 'erlang':'is_integer'
					(MaxValue)
				in  let <_cor11> =
					call 'erlang':'is_list'
					    (Options)
				    in  let <_cor12> =
					    call 'erlang':'and'
						(_cor10, _cor11)
					in  let <_cor13> =
						call 'erlang':'and'
						    (_cor9, _cor12)
					    in  let <_cor14> =
						    call 'erlang':'and'
							(_cor8, _cor13)
						in  call 'erlang':'and'
							(_cor7, _cor14)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 132
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSlider') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSlider')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 133
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <MOpts> =
			  %% Line 134
			  ( fun (_cor26,_cor25) ->
				case <_cor26,_cor25> of
				  <{'pos',{PosX,PosY}},Acc> when 'true' ->
				      let <_cor19> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<PosX>(32,1,'integer',['unsigned'|['native']]),
					    #<PosY>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor19|Acc]
				  %% Line 135
				  <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				      let <_cor20> =
					  #{#<2>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeW>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeH>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor20|Acc]
				  %% Line 136
				  <{'style',Style},Acc> when 'true' ->
				      let <_cor21> =
					  #{#<3>(32,1,'integer',['unsigned'|['native']]),
					    #<Style>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor21|Acc]
				  %% Line 137
				  <{'validator',{'wx_ref',ValidatorRef,ValidatorT,_cor42}},Acc> when 'true' ->
				      do  ( case <> of
					      ( <>
						    when call 'erlang':'=:='
							  (ValidatorT,
							   'wx') ->
						    'ok'
						-| ['compiler_generated'] )
					      ( <> when 'true' ->
						    call ValidatorT:'parent_class'
							('wx')
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
					  let <_cor24> =
					      #{#<4>(32,1,'integer',['unsigned'|['native']]),
						#<ValidatorRef>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor24|Acc]
				  %% Line 138
				  <BadOpt,_cor43> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-create/7-fun-0-'}}] )
		      in  let <_cor30> =
			      %% Line 139
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 139
				  call 'erlang':'list_to_binary'
				      (_cor30)
			      in  let <_cor32> =
				      %% Line 141
				      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
					#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
					#<Id>(32,1,'integer',['unsigned'|['native']]),
					#<Value>(32,1,'integer',['unsigned'|['native']]),
					#<MinValue>(32,1,'integer',['unsigned'|['native']]),
					#<MaxValue>(32,1,'integer',['unsigned'|['native']]),
					#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				  in  %% Line 140
				      call 'wxe_util':'call'
					  (2168, _cor32)
	  ( <_cor39,_cor38,_cor37,_cor36,_cor35,_cor34,_cor33> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor39,_cor38,_cor37,_cor36,_cor35,_cor34,_cor33})
		  -| [{'function_name',{'create',7}}] )
	    -| ['compiler_generated'] )
	end
'getLineSize'/1 =
    %% Line 146
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 147
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSlider') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSlider')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 149
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 148
		      call 'wxe_util':'call'
			  (2169, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLineSize',1}}] )
	    -| ['compiler_generated'] )
	end
'getMax'/1 =
    %% Line 154
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 155
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSlider') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSlider')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 157
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 156
		      call 'wxe_util':'call'
			  (2170, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getMax',1}}] )
	    -| ['compiler_generated'] )
	end
'getMin'/1 =
    %% Line 162
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 163
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSlider') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSlider')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 165
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 164
		      call 'wxe_util':'call'
			  (2171, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getMin',1}}] )
	    -| ['compiler_generated'] )
	end
'getPageSize'/1 =
    %% Line 170
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 171
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSlider') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSlider')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 173
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 172
		      call 'wxe_util':'call'
			  (2172, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPageSize',1}}] )
	    -| ['compiler_generated'] )
	end
'getThumbLength'/1 =
    %% Line 178
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 179
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSlider') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSlider')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 181
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 180
		      call 'wxe_util':'call'
			  (2173, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getThumbLength',1}}] )
	    -| ['compiler_generated'] )
	end
'getValue'/1 =
    %% Line 186
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 187
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSlider') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSlider')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 189
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 188
		      call 'wxe_util':'call'
			  (2174, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getValue',1}}] )
	    -| ['compiler_generated'] )
	end
'setLineSize'/2 =
    %% Line 194
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},LineSize>
	      when %% Line 195
		call 'erlang':'is_integer'
		    (LineSize) ->
	      do  %% Line 196
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSlider') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSlider')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 198
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<LineSize>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 197
		      call 'wxe_util':'cast'
			  (2175, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setLineSize',2}}] )
	    -| ['compiler_generated'] )
	end
'setPageSize'/2 =
    %% Line 203
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},PageSize>
	      when %% Line 204
		call 'erlang':'is_integer'
		    (PageSize) ->
	      do  %% Line 205
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSlider') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSlider')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 207
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PageSize>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 206
		      call 'wxe_util':'cast'
			  (2176, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setPageSize',2}}] )
	    -| ['compiler_generated'] )
	end
'setRange'/3 =
    %% Line 212
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},MinValue,MaxValue>
	      when let <_cor3> =
		    %% Line 213
		    call 'erlang':'is_integer'
			(MinValue)
		in  let <_cor4> =
			%% Line 213
			call 'erlang':'is_integer'
			    (MaxValue)
		    in  %% Line 213
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 214
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSlider') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSlider')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 216
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<MinValue>(32,1,'integer',['unsigned'|['native']]),
			#<MaxValue>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 215
		      call 'wxe_util':'cast'
			  (2177, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setRange',3}}] )
	    -| ['compiler_generated'] )
	end
'setThumbLength'/2 =
    %% Line 221
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},LenPixels>
	      when %% Line 222
		call 'erlang':'is_integer'
		    (LenPixels) ->
	      do  %% Line 223
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSlider') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSlider')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 225
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<LenPixels>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 224
		      call 'wxe_util':'cast'
			  (2178, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setThumbLength',2}}] )
	    -| ['compiler_generated'] )
	end
'setValue'/2 =
    %% Line 230
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Value>
	      when %% Line 231
		call 'erlang':'is_integer'
		    (Value) ->
	      do  %% Line 232
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxSlider') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxSlider')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 234
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Value>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 233
		      call 'wxe_util':'cast'
			  (2179, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setValue',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 238
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 239
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxSlider') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxSlider')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 240
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 241
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'setLabel'/2 =
    %% Line 244
    fun (_cor1,_cor0) ->
	call 'wxControl':'setLabel'
	    (_cor1, _cor0)
'getLabel'/1 =
    %% Line 246
    fun (_cor0) ->
	call 'wxControl':'getLabel'
	    (_cor0)
'warpPointer'/3 =
    %% Line 249
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 251
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 253
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 255
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 257
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 259
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 261
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 263
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 265
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 267
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 269
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 271
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 273
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 275
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 277
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 279
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 281
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 283
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 285
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 287
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 289
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 291
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 293
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 295
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 297
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 299
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 301
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 303
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 305
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 307
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 309
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 311
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 313
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 315
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 317
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 319
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 321
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 323
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 325
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 327
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 329
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 331
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 333
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 335
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 337
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 339
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 341
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 343
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 345
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 347
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 349
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 351
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 353
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 355
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 357
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 359
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 361
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 363
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 365
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 367
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 369
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 371
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 373
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 375
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 377
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 379
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 381
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 383
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 385
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 387
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 389
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 391
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 393
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 395
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 397
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 399
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 401
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 403
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 405
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 407
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 409
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 411
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 413
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 415
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 417
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 419
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 421
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 423
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 425
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 427
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 429
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 431
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 433
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 435
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 437
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 439
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 441
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 443
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 445
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 447
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 449
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 451
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 453
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 455
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 457
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 459
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 461
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 463
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 465
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 467
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 469
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 471
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 473
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 475
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 477
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 479
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 481
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 483
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 485
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 487
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 489
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 491
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 493
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 495
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 497
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 499
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 501
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 503
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 505
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 507
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 509
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 511
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 513
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 515
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 517
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 519
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 521
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 523
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 525
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 527
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 529
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 531
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 533
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 535
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 537
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 539
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 541
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 543
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 545
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 547
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 549
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 551
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 553
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 555
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 557
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 559
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 561
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 563
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 565
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 567
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 569
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 571
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 573
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 575
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 577
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 579
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 581
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 583
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 585
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 587
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 589
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 591
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 593
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 596
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 598
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 600
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 602
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 604
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxSlider')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxSlider', _cor0)
end