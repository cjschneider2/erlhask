module 'wxGridCellFloatEditor' ['beginEdit'/4,
				'destroy'/1,
				'endEdit'/4,
				'handleReturn'/2,
				'isCreated'/1,
				'module_info'/0,
				'module_info'/1,
				'new'/0,
				'new'/1,
				'paintBackground'/3,
				'parent_class'/1,
				'reset'/1,
				'setParameters'/2,
				'setSize'/2,
				'show'/2,
				'show'/3,
				'startingClick'/1,
				'startingKey'/2]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 36
		'export_type' =
		    %% Line 36
		    [{'wxGridCellFloatEditor',0}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{'wxGridCellFloatEditor',{'remote_type',43,[{'atom',43,'wx'}|[{'atom',43,'wx_object'}|[[]]]]},[]}],
		%% Line 45
		'spec' =
		    %% Line 45
		    [{{'new',0},[{'type',45,'fun',[{'type',45,'product',[]}|[{'type',45,'wxGridCellFloatEditor',[]}]]}]}],
		%% Line 51
		'spec' =
		    %% Line 51
		    [{{'new',1},[{'type',51,'bounded_fun',[{'type',51,'fun',[{'type',51,'product',[{'type',51,'list',[{'var',51,'Option'}]}]}|[{'type',51,'wxGridCellFloatEditor',[]}]]}|[[{'type',52,'constraint',[{'atom',52,'is_subtype'}|[[{'var',52,'Option'}|[{'type',52,'union',[{'type',52,'tuple',[{'atom',52,'width'}|[{'type',52,'integer',[]}]]}|[{'type',53,'tuple',[{'atom',53,'precision'}|[{'type',53,'integer',[]}]]}]]}]]]]}]]]}]}],
		%% Line 64
		'spec' =
		    %% Line 64
		    [{{'setParameters',2},[{'type',64,'bounded_fun',[{'type',64,'fun',[{'type',64,'product',[{'var',64,'This'}|[{'var',64,'Params'}]]}|[{'atom',64,'ok'}]]}|[[{'type',65,'constraint',[{'atom',65,'is_subtype'}|[[{'var',65,'This'}|[{'type',65,'wxGridCellFloatEditor',[]}]]]]}|[{'type',65,'constraint',[{'atom',65,'is_subtype'}|[[{'var',65,'Params'}|[{'remote_type',65,[{'atom',65,'unicode'}|[{'atom',65,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 74
		'spec' =
		    %% Line 74
		    [{{'destroy',1},[{'type',74,'fun',[{'type',74,'product',[{'ann_type',74,[{'var',74,'This'}|[{'type',74,'wxGridCellFloatEditor',[]}]]}]}|[{'atom',74,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 40
    fun (_cor0) ->
	case _cor0 of
	  <'wxGridCellEditor'> when 'true' ->
	      'true'
	  %% Line 41
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxGridCellFloatEditor'})
	end
'new'/0 =
    %% Line 47
    fun () ->
	%% Line 48
	apply 'new'/1
	    ([])
'new'/1 =
    %% Line 54
    fun (_cor0) ->
	case _cor0 of
	  <Options>
	      when %% Line 55
		call 'erlang':'is_list'
		    (_cor0) ->
	      let <MOpts> =
		  %% Line 56
		  ( fun (_cor4,_cor3) ->
			case <_cor4,_cor3> of
			  <{'width',Width},Acc> when 'true' ->
			      let <_cor1> =
				  #{#<1>(32,1,'integer',['unsigned'|['native']]),
				    #<Width>(32,1,'integer',['unsigned'|['native']])}#
			      in  [_cor1|Acc]
			  %% Line 57
			  <{'precision',Precision},Acc> when 'true' ->
			      let <_cor2> =
				  #{#<2>(32,1,'integer',['unsigned'|['native']]),
				    #<Precision>(32,1,'integer',['unsigned'|['native']])}#
			      in  [_cor2|Acc]
			  %% Line 58
			  <BadOpt,_cor12> when 'true' ->
			      call 'erlang':'error'
				  ({'badoption',BadOpt})
			end
		    -| [{'id',{0,0,'-new/1-fun-0-'}}] )
	      in  let <_cor8> =
		      %% Line 59
		      call 'lists':'foldl'
			  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		  in  let <BinOpt> =
			  %% Line 59
			  call 'erlang':'list_to_binary'
			      (_cor8)
		      in  let <_cor10> =
			      %% Line 61
			      #{#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			  in  %% Line 60
			      call 'wxe_util':'construct'
				  (585, _cor10)
	  ( <_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'setParameters'/2 =
    %% Line 66
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Params>
	      when %% Line 67
		call 'erlang':'is_list'
		    (Params) ->
	      do  %% Line 68
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGridCellFloatEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGridCellFloatEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Params_UC> =
		      %% Line 69
		      call 'unicode':'characters_to_binary'
			  ([Params|[0]])
		  in  let <_cor10> =
			  %% Line 71
			  call 'erlang':'byte_size'
			      (Params_UC)
		      in  let <_cor5> =
			      %% Line 71
			      call 'erlang':'byte_size'
				  (Params_UC)
			  in  let <_cor6> =
				  %% Line 71
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 71
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 71
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 71
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 71
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Params_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 70
						  call 'wxe_util':'cast'
						      (586, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setParameters',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 75
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 76
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxGridCellFloatEditor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxGridCellFloatEditor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 77
		      call 'wxe_util':'destroy'
			  (587, Obj)
		      %% Line 78
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'handleReturn'/2 =
    %% Line 81
    fun (_cor1,_cor0) ->
	call 'wxGridCellEditor':'handleReturn'
	    (_cor1, _cor0)
'startingClick'/1 =
    %% Line 83
    fun (_cor0) ->
	call 'wxGridCellEditor':'startingClick'
	    (_cor0)
'startingKey'/2 =
    %% Line 85
    fun (_cor1,_cor0) ->
	call 'wxGridCellEditor':'startingKey'
	    (_cor1, _cor0)
'reset'/1 =
    %% Line 87
    fun (_cor0) ->
	call 'wxGridCellEditor':'reset'
	    (_cor0)
'endEdit'/4 =
    %% Line 89
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxGridCellEditor':'endEdit'
	    (_cor3, _cor2, _cor1, _cor0)
'beginEdit'/4 =
    %% Line 91
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxGridCellEditor':'beginEdit'
	    (_cor3, _cor2, _cor1, _cor0)
'paintBackground'/3 =
    %% Line 93
    fun (_cor2,_cor1,_cor0) ->
	call 'wxGridCellEditor':'paintBackground'
	    (_cor2, _cor1, _cor0)
'show'/3 =
    %% Line 95
    fun (_cor2,_cor1,_cor0) ->
	call 'wxGridCellEditor':'show'
	    (_cor2, _cor1, _cor0)
'show'/2 =
    %% Line 97
    fun (_cor1,_cor0) ->
	call 'wxGridCellEditor':'show'
	    (_cor1, _cor0)
'setSize'/2 =
    %% Line 99
    fun (_cor1,_cor0) ->
	call 'wxGridCellEditor':'setSize'
	    (_cor1, _cor0)
'isCreated'/1 =
    %% Line 101
    fun (_cor0) ->
	call 'wxGridCellEditor':'isCreated'
	    (_cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxGridCellFloatEditor')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxGridCellFloatEditor', _cor0)
end