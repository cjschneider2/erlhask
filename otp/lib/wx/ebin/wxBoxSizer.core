module 'wxBoxSizer' ['add'/2,
		     'add'/3,
		     'add'/4,
		     'addSpacer'/2,
		     'addStretchSpacer'/1,
		     'addStretchSpacer'/2,
		     'calcMin'/1,
		     'clear'/1,
		     'clear'/2,
		     'destroy'/1,
		     'detach'/2,
		     'fit'/2,
		     'fitInside'/2,
		     'getChildren'/1,
		     'getItem'/2,
		     'getItem'/3,
		     'getMinSize'/1,
		     'getOrientation'/1,
		     'getPosition'/1,
		     'getSize'/1,
		     'hide'/2,
		     'hide'/3,
		     'insert'/3,
		     'insert'/4,
		     'insert'/5,
		     'insertSpacer'/3,
		     'insertStretchSpacer'/2,
		     'insertStretchSpacer'/3,
		     'isShown'/2,
		     'layout'/1,
		     'module_info'/0,
		     'module_info'/1,
		     'new'/1,
		     'parent_class'/1,
		     'prepend'/2,
		     'prepend'/3,
		     'prepend'/4,
		     'prependSpacer'/2,
		     'prependStretchSpacer'/1,
		     'prependStretchSpacer'/2,
		     'recalcSizes'/1,
		     'remove'/2,
		     'replace'/3,
		     'replace'/4,
		     'setDimension'/5,
		     'setItemMinSize'/3,
		     'setItemMinSize'/4,
		     'setMinSize'/2,
		     'setMinSize'/3,
		     'setSizeHints'/2,
		     'setVirtualSizeHints'/2,
		     'show'/2,
		     'show'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 43
		'export_type' =
		    %% Line 43
		    [{'wxBoxSizer',0}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{'wxBoxSizer',{'remote_type',48,[{'atom',48,'wx'}|[{'atom',48,'wx_object'}|[[]]]]},[]}],
		%% Line 50
		'spec' =
		    %% Line 50
		    [{{'new',1},[{'type',50,'bounded_fun',[{'type',50,'fun',[{'type',50,'product',[{'var',50,'Orient'}]}|[{'type',50,'wxBoxSizer',[]}]]}|[[{'type',51,'constraint',[{'atom',51,'is_subtype'}|[[{'var',51,'Orient'}|[{'type',51,'integer',[]}]]]]}]]]}]}],
		%% Line 58
		'spec' =
		    %% Line 58
		    [{{'getOrientation',1},[{'type',58,'bounded_fun',[{'type',58,'fun',[{'type',58,'product',[{'var',58,'This'}]}|[{'type',58,'integer',[]}]]}|[[{'type',59,'constraint',[{'atom',59,'is_subtype'}|[[{'var',59,'This'}|[{'type',59,'wxBoxSizer',[]}]]]]}]]]}]}],
		%% Line 66
		'spec' =
		    %% Line 66
		    [{{'destroy',1},[{'type',66,'fun',[{'type',66,'product',[{'ann_type',66,[{'var',66,'This'}|[{'type',66,'wxBoxSizer',[]}]]}]}|[{'atom',66,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 45
    fun (_cor0) ->
	case _cor0 of
	  <'wxSizer'> when 'true' ->
	      'true'
	  %% Line 46
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxBoxSizer'})
	end
'new'/1 =
    %% Line 52
    fun (_cor0) ->
	case _cor0 of
	  <Orient>
	      when %% Line 53
		call 'erlang':'is_integer'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 55
		  #{#<Orient>(32,1,'integer',['unsigned'|['native']])}#
	      in  %% Line 54
		  call 'wxe_util':'construct'
		      (1367, _cor1)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'getOrientation'/1 =
    %% Line 60
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 61
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxBoxSizer') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxBoxSizer')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 63
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 62
		      call 'wxe_util':'call'
			  (1368, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getOrientation',1}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 67
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 68
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxBoxSizer') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxBoxSizer')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 69
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 70
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'show'/3 =
    %% Line 73
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'show'
	    (_cor2, _cor1, _cor0)
'show'/2 =
    %% Line 75
    fun (_cor1,_cor0) ->
	call 'wxSizer':'show'
	    (_cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 77
    fun (_cor1,_cor0) ->
	call 'wxSizer':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setSizeHints'/2 =
    %% Line 79
    fun (_cor1,_cor0) ->
	call 'wxSizer':'setSizeHints'
	    (_cor1, _cor0)
'setItemMinSize'/4 =
    %% Line 81
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'setItemMinSize'
	    (_cor3, _cor2, _cor1, _cor0)
'setItemMinSize'/3 =
    %% Line 83
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'setItemMinSize'
	    (_cor2, _cor1, _cor0)
'setMinSize'/3 =
    %% Line 85
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'setMinSize'
	    (_cor2, _cor1, _cor0)
'setMinSize'/2 =
    %% Line 87
    fun (_cor1,_cor0) ->
	call 'wxSizer':'setMinSize'
	    (_cor1, _cor0)
'setDimension'/5 =
    %% Line 89
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'setDimension'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'replace'/4 =
    %% Line 91
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'replace'
	    (_cor3, _cor2, _cor1, _cor0)
'replace'/3 =
    %% Line 93
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'replace'
	    (_cor2, _cor1, _cor0)
'remove'/2 =
    %% Line 95
    fun (_cor1,_cor0) ->
	call 'wxSizer':'remove'
	    (_cor1, _cor0)
'recalcSizes'/1 =
    %% Line 97
    fun (_cor0) ->
	call 'wxSizer':'recalcSizes'
	    (_cor0)
'prependStretchSpacer'/2 =
    %% Line 99
    fun (_cor1,_cor0) ->
	call 'wxSizer':'prependStretchSpacer'
	    (_cor1, _cor0)
'prependStretchSpacer'/1 =
    %% Line 101
    fun (_cor0) ->
	call 'wxSizer':'prependStretchSpacer'
	    (_cor0)
'prependSpacer'/2 =
    %% Line 103
    fun (_cor1,_cor0) ->
	call 'wxSizer':'prependSpacer'
	    (_cor1, _cor0)
'prepend'/4 =
    %% Line 105
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'prepend'
	    (_cor3, _cor2, _cor1, _cor0)
'prepend'/3 =
    %% Line 107
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'prepend'
	    (_cor2, _cor1, _cor0)
'prepend'/2 =
    %% Line 109
    fun (_cor1,_cor0) ->
	call 'wxSizer':'prepend'
	    (_cor1, _cor0)
'layout'/1 =
    %% Line 111
    fun (_cor0) ->
	call 'wxSizer':'layout'
	    (_cor0)
'isShown'/2 =
    %% Line 113
    fun (_cor1,_cor0) ->
	call 'wxSizer':'isShown'
	    (_cor1, _cor0)
'insertStretchSpacer'/3 =
    %% Line 115
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insertStretchSpacer'
	    (_cor2, _cor1, _cor0)
'insertStretchSpacer'/2 =
    %% Line 117
    fun (_cor1,_cor0) ->
	call 'wxSizer':'insertStretchSpacer'
	    (_cor1, _cor0)
'insertSpacer'/3 =
    %% Line 119
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insertSpacer'
	    (_cor2, _cor1, _cor0)
'insert'/5 =
    %% Line 121
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insert'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'insert'/4 =
    %% Line 123
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insert'
	    (_cor3, _cor2, _cor1, _cor0)
'insert'/3 =
    %% Line 125
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insert'
	    (_cor2, _cor1, _cor0)
'hide'/3 =
    %% Line 127
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'hide'
	    (_cor2, _cor1, _cor0)
'hide'/2 =
    %% Line 129
    fun (_cor1,_cor0) ->
	call 'wxSizer':'hide'
	    (_cor1, _cor0)
'getMinSize'/1 =
    %% Line 131
    fun (_cor0) ->
	call 'wxSizer':'getMinSize'
	    (_cor0)
'getPosition'/1 =
    %% Line 133
    fun (_cor0) ->
	call 'wxSizer':'getPosition'
	    (_cor0)
'getSize'/1 =
    %% Line 135
    fun (_cor0) ->
	call 'wxSizer':'getSize'
	    (_cor0)
'getItem'/3 =
    %% Line 137
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'getItem'
	    (_cor2, _cor1, _cor0)
'getItem'/2 =
    %% Line 139
    fun (_cor1,_cor0) ->
	call 'wxSizer':'getItem'
	    (_cor1, _cor0)
'getChildren'/1 =
    %% Line 141
    fun (_cor0) ->
	call 'wxSizer':'getChildren'
	    (_cor0)
'fitInside'/2 =
    %% Line 143
    fun (_cor1,_cor0) ->
	call 'wxSizer':'fitInside'
	    (_cor1, _cor0)
'fit'/2 =
    %% Line 145
    fun (_cor1,_cor0) ->
	call 'wxSizer':'fit'
	    (_cor1, _cor0)
'detach'/2 =
    %% Line 147
    fun (_cor1,_cor0) ->
	call 'wxSizer':'detach'
	    (_cor1, _cor0)
'clear'/2 =
    %% Line 149
    fun (_cor1,_cor0) ->
	call 'wxSizer':'clear'
	    (_cor1, _cor0)
'clear'/1 =
    %% Line 151
    fun (_cor0) ->
	call 'wxSizer':'clear'
	    (_cor0)
'calcMin'/1 =
    %% Line 153
    fun (_cor0) ->
	call 'wxSizer':'calcMin'
	    (_cor0)
'addStretchSpacer'/2 =
    %% Line 155
    fun (_cor1,_cor0) ->
	call 'wxSizer':'addStretchSpacer'
	    (_cor1, _cor0)
'addStretchSpacer'/1 =
    %% Line 157
    fun (_cor0) ->
	call 'wxSizer':'addStretchSpacer'
	    (_cor0)
'addSpacer'/2 =
    %% Line 159
    fun (_cor1,_cor0) ->
	call 'wxSizer':'addSpacer'
	    (_cor1, _cor0)
'add'/4 =
    %% Line 161
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'add'
	    (_cor3, _cor2, _cor1, _cor0)
'add'/3 =
    %% Line 163
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'add'
	    (_cor2, _cor1, _cor0)
'add'/2 =
    %% Line 165
    fun (_cor1,_cor0) ->
	call 'wxSizer':'add'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxBoxSizer')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxBoxSizer', _cor0)
end