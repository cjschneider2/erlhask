module 'wxGraphicsMatrix' ['concat'/2,
			   'get'/1,
			   'getRenderer'/1,
			   'invert'/1,
			   'isEqual'/2,
			   'isIdentity'/1,
			   'isNull'/1,
			   'module_info'/0,
			   'module_info'/1,
			   'parent_class'/1,
			   'rotate'/2,
			   'scale'/3,
			   'set'/1,
			   'set'/2,
			   'transformDistance'/1,
			   'transformPoint'/1,
			   'translate'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 36
		'export_type' =
		    %% Line 36
		    [{'wxGraphicsMatrix',0}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{'wxGraphicsMatrix',{'remote_type',41,[{'atom',41,'wx'}|[{'atom',41,'wx_object'}|[[]]]]},[]}],
		%% Line 43
		'spec' =
		    %% Line 43
		    [{{'concat',2},[{'type',43,'bounded_fun',[{'type',43,'fun',[{'type',43,'product',[{'var',43,'This'}|[{'var',43,'T'}]]}|[{'atom',43,'ok'}]]}|[[{'type',44,'constraint',[{'atom',44,'is_subtype'}|[[{'var',44,'This'}|[{'type',44,'wxGraphicsMatrix',[]}]]]]}|[{'type',44,'constraint',[{'atom',44,'is_subtype'}|[[{'var',44,'T'}|[{'type',44,'wxGraphicsMatrix',[]}]]]]}]]]]}]}],
		%% Line 52
		'spec' =
		    %% Line 52
		    [{{'get',1},[{'type',52,'bounded_fun',[{'type',52,'fun',[{'type',52,'product',[{'var',52,'This'}]}|[{'var',52,'Result'}]]}|[[{'type',53,'constraint',[{'atom',53,'is_subtype'}|[[{'var',53,'Result'}|[{'type',53,'tuple',[{'ann_type',53,[{'var',53,'A'}|[{'type',53,'number',[]}]]}|[{'ann_type',53,[{'var',53,'B'}|[{'type',53,'number',[]}]]}|[{'ann_type',53,[{'var',53,'C'}|[{'type',53,'number',[]}]]}|[{'ann_type',53,[{'var',53,'D'}|[{'type',53,'number',[]}]]}|[{'ann_type',53,[{'var',53,'Tx'}|[{'type',53,'number',[]}]]}|[{'ann_type',53,[{'var',53,'Ty'}|[{'type',53,'number',[]}]]}]]]]]]}]]]]}|[{'type',54,'constraint',[{'atom',54,'is_subtype'}|[[{'var',54,'This'}|[{'type',54,'wxGraphicsMatrix',[]}]]]]}]]]]}]}],
		%% Line 61
		'spec' =
		    %% Line 61
		    [{{'invert',1},[{'type',61,'bounded_fun',[{'type',61,'fun',[{'type',61,'product',[{'var',61,'This'}]}|[{'atom',61,'ok'}]]}|[[{'type',62,'constraint',[{'atom',62,'is_subtype'}|[[{'var',62,'This'}|[{'type',62,'wxGraphicsMatrix',[]}]]]]}]]]}]}],
		%% Line 69
		'spec' =
		    %% Line 69
		    [{{'isEqual',2},[{'type',69,'bounded_fun',[{'type',69,'fun',[{'type',69,'product',[{'var',69,'This'}|[{'var',69,'T'}]]}|[{'type',69,'boolean',[]}]]}|[[{'type',70,'constraint',[{'atom',70,'is_subtype'}|[[{'var',70,'This'}|[{'type',70,'wxGraphicsMatrix',[]}]]]]}|[{'type',70,'constraint',[{'atom',70,'is_subtype'}|[[{'var',70,'T'}|[{'type',70,'wxGraphicsMatrix',[]}]]]]}]]]]}]}],
		%% Line 78
		'spec' =
		    %% Line 78
		    [{{'isIdentity',1},[{'type',78,'bounded_fun',[{'type',78,'fun',[{'type',78,'product',[{'var',78,'This'}]}|[{'type',78,'boolean',[]}]]}|[[{'type',79,'constraint',[{'atom',79,'is_subtype'}|[[{'var',79,'This'}|[{'type',79,'wxGraphicsMatrix',[]}]]]]}]]]}]}],
		%% Line 86
		'spec' =
		    %% Line 86
		    [{{'rotate',2},[{'type',86,'bounded_fun',[{'type',86,'fun',[{'type',86,'product',[{'var',86,'This'}|[{'var',86,'Angle'}]]}|[{'atom',86,'ok'}]]}|[[{'type',87,'constraint',[{'atom',87,'is_subtype'}|[[{'var',87,'This'}|[{'type',87,'wxGraphicsMatrix',[]}]]]]}|[{'type',87,'constraint',[{'atom',87,'is_subtype'}|[[{'var',87,'Angle'}|[{'type',87,'number',[]}]]]]}]]]]}]}],
		%% Line 95
		'spec' =
		    %% Line 95
		    [{{'scale',3},[{'type',95,'bounded_fun',[{'type',95,'fun',[{'type',95,'product',[{'var',95,'This'}|[{'var',95,'XScale'}|[{'var',95,'YScale'}]]]}|[{'atom',95,'ok'}]]}|[[{'type',96,'constraint',[{'atom',96,'is_subtype'}|[[{'var',96,'This'}|[{'type',96,'wxGraphicsMatrix',[]}]]]]}|[{'type',96,'constraint',[{'atom',96,'is_subtype'}|[[{'var',96,'XScale'}|[{'type',96,'number',[]}]]]]}|[{'type',96,'constraint',[{'atom',96,'is_subtype'}|[[{'var',96,'YScale'}|[{'type',96,'number',[]}]]]]}]]]]]}]}],
		%% Line 104
		'spec' =
		    %% Line 104
		    [{{'translate',3},[{'type',104,'bounded_fun',[{'type',104,'fun',[{'type',104,'product',[{'var',104,'This'}|[{'var',104,'Dx'}|[{'var',104,'Dy'}]]]}|[{'atom',104,'ok'}]]}|[[{'type',105,'constraint',[{'atom',105,'is_subtype'}|[[{'var',105,'This'}|[{'type',105,'wxGraphicsMatrix',[]}]]]]}|[{'type',105,'constraint',[{'atom',105,'is_subtype'}|[[{'var',105,'Dx'}|[{'type',105,'number',[]}]]]]}|[{'type',105,'constraint',[{'atom',105,'is_subtype'}|[[{'var',105,'Dy'}|[{'type',105,'number',[]}]]]]}]]]]]}]}],
		%% Line 113
		'spec' =
		    %% Line 113
		    [{{'set',1},[{'type',113,'bounded_fun',[{'type',113,'fun',[{'type',113,'product',[{'var',113,'This'}]}|[{'atom',113,'ok'}]]}|[[{'type',114,'constraint',[{'atom',114,'is_subtype'}|[[{'var',114,'This'}|[{'type',114,'wxGraphicsMatrix',[]}]]]]}]]]}]}],
		%% Line 121
		'spec' =
		    %% Line 121
		    [{{'set',2},[{'type',121,'bounded_fun',[{'type',121,'fun',[{'type',121,'product',[{'var',121,'This'}|[{'type',121,'list',[{'var',121,'Option'}]}]]}|[{'atom',121,'ok'}]]}|[[{'type',122,'constraint',[{'atom',122,'is_subtype'}|[[{'var',122,'This'}|[{'type',122,'wxGraphicsMatrix',[]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Option'}|[{'type',123,'union',[{'type',123,'tuple',[{'atom',123,'a'}|[{'type',123,'number',[]}]]}|[{'type',124,'tuple',[{'atom',124,'b'}|[{'type',124,'number',[]}]]}|[{'type',125,'tuple',[{'atom',125,'c'}|[{'type',125,'number',[]}]]}|[{'type',126,'tuple',[{'atom',126,'d'}|[{'type',126,'number',[]}]]}|[{'type',127,'tuple',[{'atom',127,'tx'}|[{'type',127,'number',[]}]]}|[{'type',128,'tuple',[{'atom',128,'ty'}|[{'type',128,'number',[]}]]}]]]]]]}]]]]}]]]]}]}],
		%% Line 144
		'spec' =
		    %% Line 144
		    [{{'transformPoint',1},[{'type',144,'bounded_fun',[{'type',144,'fun',[{'type',144,'product',[{'var',144,'This'}]}|[{'type',144,'tuple',[{'ann_type',144,[{'var',144,'X'}|[{'type',144,'number',[]}]]}|[{'ann_type',144,[{'var',144,'Y'}|[{'type',144,'number',[]}]]}]]}]]}|[[{'type',145,'constraint',[{'atom',145,'is_subtype'}|[[{'var',145,'This'}|[{'type',145,'wxGraphicsMatrix',[]}]]]]}]]]}]}],
		%% Line 152
		'spec' =
		    %% Line 152
		    [{{'transformDistance',1},[{'type',152,'bounded_fun',[{'type',152,'fun',[{'type',152,'product',[{'var',152,'This'}]}|[{'type',152,'tuple',[{'ann_type',152,[{'var',152,'Dx'}|[{'type',152,'number',[]}]]}|[{'ann_type',152,[{'var',152,'Dy'}|[{'type',152,'number',[]}]]}]]}]]}|[[{'type',153,'constraint',[{'atom',153,'is_subtype'}|[[{'var',153,'This'}|[{'type',153,'wxGraphicsMatrix',[]}]]]]}]]]}]}]]
'parent_class'/1 =
    %% Line 38
    fun (_cor0) ->
	case _cor0 of
	  <'wxGraphicsObject'> when 'true' ->
	      'true'
	  %% Line 39
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxGraphicsMatrix'})
	end
'concat'/2 =
    %% Line 45
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',TRef,TT,_cor10}> when 'true' ->
	      do  %% Line 46
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGraphicsMatrix') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGraphicsMatrix')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 47
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (TT,
				       'wxGraphicsMatrix') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call TT:'parent_class'
				    ('wxGraphicsMatrix')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 49
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<TRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 48
			  call 'wxe_util':'cast'
			      (803, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'concat',2}}] )
	    -| ['compiler_generated'] )
	end
'get'/1 =
    %% Line 55
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 56
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGraphicsMatrix') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGraphicsMatrix')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 58
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 57
		      call 'wxe_util':'call'
			  (805, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'get',1}}] )
	    -| ['compiler_generated'] )
	end
'invert'/1 =
    %% Line 63
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 64
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGraphicsMatrix') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGraphicsMatrix')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 66
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 65
		      call 'wxe_util':'cast'
			  (806, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'invert',1}}] )
	    -| ['compiler_generated'] )
	end
'isEqual'/2 =
    %% Line 71
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',TRef,TT,_cor10}> when 'true' ->
	      do  %% Line 72
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGraphicsMatrix') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGraphicsMatrix')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 73
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (TT,
				       'wxGraphicsMatrix') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call TT:'parent_class'
				    ('wxGraphicsMatrix')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 75
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<TRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 74
			  call 'wxe_util':'call'
			      (807, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'isEqual',2}}] )
	    -| ['compiler_generated'] )
	end
'isIdentity'/1 =
    %% Line 80
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 81
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGraphicsMatrix') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGraphicsMatrix')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 83
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 82
		      call 'wxe_util':'call'
			  (809, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isIdentity',1}}] )
	    -| ['compiler_generated'] )
	end
'rotate'/2 =
    %% Line 88
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Angle>
	      when %% Line 89
		call 'erlang':'is_number'
		    (Angle) ->
	      do  %% Line 90
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGraphicsMatrix') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGraphicsMatrix')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 92
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<0>(32,1,'integer',['unsigned'|['big']]),
			#<Angle>(64,1,'float',['unsigned'|['native']])}#
		  in  %% Line 91
		      call 'wxe_util':'cast'
			  (810, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'rotate',2}}] )
	    -| ['compiler_generated'] )
	end
'scale'/3 =
    %% Line 97
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},XScale,YScale>
	      when let <_cor3> =
		    %% Line 98
		    call 'erlang':'is_number'
			(XScale)
		in  let <_cor4> =
			%% Line 98
			call 'erlang':'is_number'
			    (YScale)
		    in  %% Line 98
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 99
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGraphicsMatrix') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGraphicsMatrix')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 101
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<0>(32,1,'integer',['unsigned'|['big']]),
			#<XScale>(64,1,'float',['unsigned'|['native']]),
			#<YScale>(64,1,'float',['unsigned'|['native']])}#
		  in  %% Line 100
		      call 'wxe_util':'cast'
			  (811, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'scale',3}}] )
	    -| ['compiler_generated'] )
	end
'translate'/3 =
    %% Line 106
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Dx,Dy>
	      when let <_cor3> =
		    %% Line 107
		    call 'erlang':'is_number'
			(Dx)
		in  let <_cor4> =
			%% Line 107
			call 'erlang':'is_number'
			    (Dy)
		    in  %% Line 107
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 108
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGraphicsMatrix') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGraphicsMatrix')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 110
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<0>(32,1,'integer',['unsigned'|['big']]),
			#<Dx>(64,1,'float',['unsigned'|['native']]),
			#<Dy>(64,1,'float',['unsigned'|['native']])}#
		  in  %% Line 109
		      call 'wxe_util':'cast'
			  (812, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'translate',3}}] )
	    -| ['compiler_generated'] )
	end
'set'/1 =
    %% Line 116
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 117
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 118
	      apply 'set'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'set',1}}] )
	    -| ['compiler_generated'] )
	end
'set'/2 =
    %% Line 129
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor20},Options>
	      when %% Line 130
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 131
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGraphicsMatrix') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGraphicsMatrix')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 132
		      ( fun (_cor11,_cor10) ->
			    case <_cor11,_cor10> of
			      <{'a',A},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']]),
					#<A>(64,1,'float',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 133
			      <{'b',B},Acc> when 'true' ->
				  let <_cor5> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']]),
					#<B>(64,1,'float',['unsigned'|['native']])}#
				  in  [_cor5|Acc]
			      %% Line 134
			      <{'c',C},Acc> when 'true' ->
				  let <_cor6> =
				      #{#<3>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']]),
					#<C>(64,1,'float',['unsigned'|['native']])}#
				  in  [_cor6|Acc]
			      %% Line 135
			      <{'d',D},Acc> when 'true' ->
				  let <_cor7> =
				      #{#<4>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']]),
					#<D>(64,1,'float',['unsigned'|['native']])}#
				  in  [_cor7|Acc]
			      %% Line 136
			      <{'tx',Tx},Acc> when 'true' ->
				  let <_cor8> =
				      #{#<5>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']]),
					#<Tx>(64,1,'float',['unsigned'|['native']])}#
				  in  [_cor8|Acc]
			      %% Line 137
			      <{'ty',Ty},Acc> when 'true' ->
				  let <_cor9> =
				      #{#<6>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']]),
					#<Ty>(64,1,'float',['unsigned'|['native']])}#
				  in  [_cor9|Acc]
			      %% Line 138
			      <BadOpt,_cor21> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-set/2-fun-0-'}}] )
		  in  let <_cor15> =
			  %% Line 139
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 139
			      call 'erlang':'list_to_binary'
				  (_cor15)
			  in  let <_cor17> =
				  %% Line 141
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 140
				  call 'wxe_util':'cast'
				      (813, _cor17)
	  ( <_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18})
		  -| [{'function_name',{'set',2}}] )
	    -| ['compiler_generated'] )
	end
'transformPoint'/1 =
    %% Line 146
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 147
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGraphicsMatrix') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGraphicsMatrix')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 149
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 148
		      call 'wxe_util':'call'
			  (814, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'transformPoint',1}}] )
	    -| ['compiler_generated'] )
	end
'transformDistance'/1 =
    %% Line 154
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 155
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGraphicsMatrix') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGraphicsMatrix')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 157
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 156
		      call 'wxe_util':'call'
			  (815, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'transformDistance',1}}] )
	    -| ['compiler_generated'] )
	end
'isNull'/1 =
    %% Line 161
    fun (_cor0) ->
	call 'wxGraphicsObject':'isNull'
	    (_cor0)
'getRenderer'/1 =
    %% Line 163
    fun (_cor0) ->
	call 'wxGraphicsObject':'getRenderer'
	    (_cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxGraphicsMatrix')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxGraphicsMatrix', _cor0)
end