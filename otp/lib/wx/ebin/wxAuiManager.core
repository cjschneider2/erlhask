module 'wxAuiManager' ['addPane'/2,
		       'addPane'/3,
		       'addPane'/4,
		       'connect'/2,
		       'connect'/3,
		       'destroy'/1,
		       'detachPane'/2,
		       'disconnect'/1,
		       'disconnect'/2,
		       'disconnect'/3,
		       'getAllPanes'/1,
		       'getArtProvider'/1,
		       'getDockSizeConstraint'/1,
		       'getFlags'/1,
		       'getManagedWindow'/1,
		       'getManager'/1,
		       'getPane'/2,
		       'hideHint'/1,
		       'insertPane'/3,
		       'insertPane'/4,
		       'loadPaneInfo'/3,
		       'loadPerspective'/2,
		       'loadPerspective'/3,
		       'module_info'/0,
		       'module_info'/1,
		       'new'/0,
		       'new'/1,
		       'parent_class'/1,
		       'savePaneInfo'/2,
		       'savePerspective'/1,
		       'setArtProvider'/2,
		       'setDockSizeConstraint'/3,
		       'setFlags'/2,
		       'setManagedWindow'/2,
		       'showHint'/2,
		       'unInit'/1,
		       'update'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 40
		'export_type' =
		    %% Line 40
		    [{'wxAuiManager',0}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'wxAuiManager',{'remote_type',45,[{'atom',45,'wx'}|[{'atom',45,'wx_object'}|[[]]]]},[]}],
		%% Line 47
		'spec' =
		    %% Line 47
		    [{{'new',0},[{'type',47,'fun',[{'type',47,'product',[]}|[{'type',47,'wxAuiManager',[]}]]}]}],
		%% Line 53
		'spec' =
		    %% Line 53
		    [{{'new',1},[{'type',53,'bounded_fun',[{'type',53,'fun',[{'type',53,'product',[{'type',53,'list',[{'var',53,'Option'}]}]}|[{'type',53,'wxAuiManager',[]}]]}|[[{'type',54,'constraint',[{'atom',54,'is_subtype'}|[[{'var',54,'Option'}|[{'type',54,'union',[{'type',54,'tuple',[{'atom',54,'managed_wnd'}|[{'remote_type',54,[{'atom',54,'wxWindow'}|[{'atom',54,'wxWindow'}|[[]]]]}]]}|[{'type',55,'tuple',[{'atom',55,'flags'}|[{'type',55,'integer',[]}]]}]]}]]]]}]]]}]}],
		%% Line 66
		'spec' =
		    %% Line 66
		    [{{'addPane',2},[{'type',66,'bounded_fun',[{'type',66,'fun',[{'type',66,'product',[{'var',66,'This'}|[{'var',66,'Window'}]]}|[{'type',66,'boolean',[]}]]}|[[{'type',67,'constraint',[{'atom',67,'is_subtype'}|[[{'var',67,'This'}|[{'type',67,'wxAuiManager',[]}]]]]}|[{'type',67,'constraint',[{'atom',67,'is_subtype'}|[[{'var',67,'Window'}|[{'remote_type',67,[{'atom',67,'wxWindow'}|[{'atom',67,'wxWindow'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 78
		'spec' =
		    %% Line 78
		    [{{'addPane',3},[{'type',78,'bounded_fun',[{'type',78,'fun',[{'type',78,'product',[{'var',78,'This'}|[{'var',78,'Window'}|[{'type',78,'list',[{'var',78,'Option'}]}]]]}|[{'type',78,'boolean',[]}]]}|[[{'type',79,'constraint',[{'atom',79,'is_subtype'}|[[{'var',79,'This'}|[{'type',79,'wxAuiManager',[]}]]]]}|[{'type',79,'constraint',[{'atom',79,'is_subtype'}|[[{'var',79,'Window'}|[{'remote_type',79,[{'atom',79,'wxWindow'}|[{'atom',79,'wxWindow'}|[[]]]]}]]]]}|[{'type',80,'constraint',[{'atom',80,'is_subtype'}|[[{'var',80,'Option'}|[{'type',80,'union',[{'type',80,'tuple',[{'atom',80,'direction'}|[{'type',80,'integer',[]}]]}|[{'type',81,'tuple',[{'atom',81,'caption'}|[{'remote_type',81,[{'atom',81,'unicode'}|[{'atom',81,'chardata'}|[[]]]]}]]}]]}]]]]}]]]]]}|[{'type',82,'bounded_fun',[{'type',82,'fun',[{'type',82,'product',[{'var',82,'This'}|[{'var',82,'Window'}|[{'var',82,'Pane_info'}]]]}|[{'type',82,'boolean',[]}]]}|[[{'type',83,'constraint',[{'atom',83,'is_subtype'}|[[{'var',83,'This'}|[{'type',83,'wxAuiManager',[]}]]]]}|[{'type',83,'constraint',[{'atom',83,'is_subtype'}|[[{'var',83,'Window'}|[{'remote_type',83,[{'atom',83,'wxWindow'}|[{'atom',83,'wxWindow'}|[[]]]]}]]]]}|[{'type',83,'constraint',[{'atom',83,'is_subtype'}|[[{'var',83,'Pane_info'}|[{'remote_type',83,[{'atom',83,'wxAuiPaneInfo'}|[{'atom',83,'wxAuiPaneInfo'}|[[]]]]}]]]]}]]]]]}]]}],
		%% Line 102
		'spec' =
		    %% Line 102
		    [{{'addPane',4},[{'type',102,'bounded_fun',[{'type',102,'fun',[{'type',102,'product',[{'var',102,'This'}|[{'var',102,'Window'}|[{'var',102,'Pane_info'}|[{'var',102,'Drop_pos'}]]]]}|[{'type',102,'boolean',[]}]]}|[[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'This'}|[{'type',103,'wxAuiManager',[]}]]]]}|[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'Window'}|[{'remote_type',103,[{'atom',103,'wxWindow'}|[{'atom',103,'wxWindow'}|[[]]]]}]]]]}|[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'Pane_info'}|[{'remote_type',103,[{'atom',103,'wxAuiPaneInfo'}|[{'atom',103,'wxAuiPaneInfo'}|[[]]]]}]]]]}|[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'Drop_pos'}|[{'type',103,'tuple',[{'ann_type',103,[{'var',103,'X'}|[{'type',103,'integer',[]}]]}|[{'ann_type',103,[{'var',103,'Y'}|[{'type',103,'integer',[]}]]}]]}]]]]}]]]]]]}]}],
		%% Line 113
		'spec' =
		    %% Line 113
		    [{{'detachPane',2},[{'type',113,'bounded_fun',[{'type',113,'fun',[{'type',113,'product',[{'var',113,'This'}|[{'var',113,'Window'}]]}|[{'type',113,'boolean',[]}]]}|[[{'type',114,'constraint',[{'atom',114,'is_subtype'}|[[{'var',114,'This'}|[{'type',114,'wxAuiManager',[]}]]]]}|[{'type',114,'constraint',[{'atom',114,'is_subtype'}|[[{'var',114,'Window'}|[{'remote_type',114,[{'atom',114,'wxWindow'}|[{'atom',114,'wxWindow'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 122
		'spec' =
		    %% Line 122
		    [{{'getAllPanes',1},[{'type',122,'bounded_fun',[{'type',122,'fun',[{'type',122,'product',[{'var',122,'This'}]}|[{'remote_type',122,[{'atom',122,'wx'}|[{'atom',122,'wx_object'}|[[]]]]}]]}|[[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'This'}|[{'type',123,'wxAuiManager',[]}]]]]}]]]}]}],
		%% Line 130
		'spec' =
		    %% Line 130
		    [{{'getArtProvider',1},[{'type',130,'bounded_fun',[{'type',130,'fun',[{'type',130,'product',[{'var',130,'This'}]}|[{'remote_type',130,[{'atom',130,'wxAuiDockArt'}|[{'atom',130,'wxAuiDockArt'}|[[]]]]}]]}|[[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'This'}|[{'type',131,'wxAuiManager',[]}]]]]}]]]}]}],
		%% Line 138
		'spec' =
		    %% Line 138
		    [{{'getDockSizeConstraint',1},[{'type',138,'bounded_fun',[{'type',138,'fun',[{'type',138,'product',[{'var',138,'This'}]}|[{'type',138,'tuple',[{'ann_type',138,[{'var',138,'Width_pct'}|[{'type',138,'number',[]}]]}|[{'ann_type',138,[{'var',138,'Height_pct'}|[{'type',138,'number',[]}]]}]]}]]}|[[{'type',139,'constraint',[{'atom',139,'is_subtype'}|[[{'var',139,'This'}|[{'type',139,'wxAuiManager',[]}]]]]}]]]}]}],
		%% Line 146
		'spec' =
		    %% Line 146
		    [{{'getFlags',1},[{'type',146,'bounded_fun',[{'type',146,'fun',[{'type',146,'product',[{'var',146,'This'}]}|[{'type',146,'integer',[]}]]}|[[{'type',147,'constraint',[{'atom',147,'is_subtype'}|[[{'var',147,'This'}|[{'type',147,'wxAuiManager',[]}]]]]}]]]}]}],
		%% Line 154
		'spec' =
		    %% Line 154
		    [{{'getManagedWindow',1},[{'type',154,'bounded_fun',[{'type',154,'fun',[{'type',154,'product',[{'var',154,'This'}]}|[{'remote_type',154,[{'atom',154,'wxWindow'}|[{'atom',154,'wxWindow'}|[[]]]]}]]}|[[{'type',155,'constraint',[{'atom',155,'is_subtype'}|[[{'var',155,'This'}|[{'type',155,'wxAuiManager',[]}]]]]}]]]}]}],
		%% Line 162
		'spec' =
		    %% Line 162
		    [{{'getManager',1},[{'type',162,'bounded_fun',[{'type',162,'fun',[{'type',162,'product',[{'var',162,'Window'}]}|[{'type',162,'wxAuiManager',[]}]]}|[[{'type',163,'constraint',[{'atom',163,'is_subtype'}|[[{'var',163,'Window'}|[{'remote_type',163,[{'atom',163,'wxWindow'}|[{'atom',163,'wxWindow'}|[[]]]]}]]]]}]]]}]}],
		%% Line 174
		'spec' =
		    %% Line 174
		    [{{'getPane',2},[{'type',174,'bounded_fun',[{'type',174,'fun',[{'type',174,'product',[{'var',174,'This'}|[{'var',174,'Name'}]]}|[{'remote_type',174,[{'atom',174,'wxAuiPaneInfo'}|[{'atom',174,'wxAuiPaneInfo'}|[[]]]]}]]}|[[{'type',175,'constraint',[{'atom',175,'is_subtype'}|[[{'var',175,'This'}|[{'type',175,'wxAuiManager',[]}]]]]}|[{'type',175,'constraint',[{'atom',175,'is_subtype'}|[[{'var',175,'Name'}|[{'remote_type',175,[{'atom',175,'unicode'}|[{'atom',175,'chardata'}|[[]]]]}]]]]}]]]]}|[{'type',176,'bounded_fun',[{'type',176,'fun',[{'type',176,'product',[{'var',176,'This'}|[{'var',176,'Window'}]]}|[{'remote_type',176,[{'atom',176,'wxAuiPaneInfo'}|[{'atom',176,'wxAuiPaneInfo'}|[[]]]]}]]}|[[{'type',177,'constraint',[{'atom',177,'is_subtype'}|[[{'var',177,'This'}|[{'type',177,'wxAuiManager',[]}]]]]}|[{'type',177,'constraint',[{'atom',177,'is_subtype'}|[[{'var',177,'Window'}|[{'remote_type',177,[{'atom',177,'wxWindow'}|[{'atom',177,'wxWindow'}|[[]]]]}]]]]}]]]]}]]}],
		%% Line 191
		'spec' =
		    %% Line 191
		    [{{'hideHint',1},[{'type',191,'bounded_fun',[{'type',191,'fun',[{'type',191,'product',[{'var',191,'This'}]}|[{'atom',191,'ok'}]]}|[[{'type',192,'constraint',[{'atom',192,'is_subtype'}|[[{'var',192,'This'}|[{'type',192,'wxAuiManager',[]}]]]]}]]]}]}],
		%% Line 199
		'spec' =
		    %% Line 199
		    [{{'insertPane',3},[{'type',199,'bounded_fun',[{'type',199,'fun',[{'type',199,'product',[{'var',199,'This'}|[{'var',199,'Window'}|[{'var',199,'Insert_location'}]]]}|[{'type',199,'boolean',[]}]]}|[[{'type',200,'constraint',[{'atom',200,'is_subtype'}|[[{'var',200,'This'}|[{'type',200,'wxAuiManager',[]}]]]]}|[{'type',200,'constraint',[{'atom',200,'is_subtype'}|[[{'var',200,'Window'}|[{'remote_type',200,[{'atom',200,'wxWindow'}|[{'atom',200,'wxWindow'}|[[]]]]}]]]]}|[{'type',200,'constraint',[{'atom',200,'is_subtype'}|[[{'var',200,'Insert_location'}|[{'remote_type',200,[{'atom',200,'wxAuiPaneInfo'}|[{'atom',200,'wxAuiPaneInfo'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 207
		'spec' =
		    %% Line 207
		    [{{'insertPane',4},[{'type',207,'bounded_fun',[{'type',207,'fun',[{'type',207,'product',[{'var',207,'This'}|[{'var',207,'Window'}|[{'var',207,'Insert_location'}|[{'type',207,'list',[{'var',207,'Option'}]}]]]]}|[{'type',207,'boolean',[]}]]}|[[{'type',208,'constraint',[{'atom',208,'is_subtype'}|[[{'var',208,'This'}|[{'type',208,'wxAuiManager',[]}]]]]}|[{'type',208,'constraint',[{'atom',208,'is_subtype'}|[[{'var',208,'Window'}|[{'remote_type',208,[{'atom',208,'wxWindow'}|[{'atom',208,'wxWindow'}|[[]]]]}]]]]}|[{'type',208,'constraint',[{'atom',208,'is_subtype'}|[[{'var',208,'Insert_location'}|[{'remote_type',208,[{'atom',208,'wxAuiPaneInfo'}|[{'atom',208,'wxAuiPaneInfo'}|[[]]]]}]]]]}|[{'type',209,'constraint',[{'atom',209,'is_subtype'}|[[{'var',209,'Option'}|[{'type',209,'tuple',[{'atom',209,'insert_level'}|[{'type',209,'integer',[]}]]}]]]]}]]]]]]}]}],
		%% Line 222
		'spec' =
		    %% Line 222
		    [{{'loadPaneInfo',3},[{'type',222,'bounded_fun',[{'type',222,'fun',[{'type',222,'product',[{'var',222,'This'}|[{'var',222,'Pane_part'}|[{'var',222,'Pane'}]]]}|[{'atom',222,'ok'}]]}|[[{'type',223,'constraint',[{'atom',223,'is_subtype'}|[[{'var',223,'This'}|[{'type',223,'wxAuiManager',[]}]]]]}|[{'type',223,'constraint',[{'atom',223,'is_subtype'}|[[{'var',223,'Pane_part'}|[{'remote_type',223,[{'atom',223,'unicode'}|[{'atom',223,'chardata'}|[[]]]]}]]]]}|[{'type',223,'constraint',[{'atom',223,'is_subtype'}|[[{'var',223,'Pane'}|[{'remote_type',223,[{'atom',223,'wxAuiPaneInfo'}|[{'atom',223,'wxAuiPaneInfo'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 233
		'spec' =
		    %% Line 233
		    [{{'loadPerspective',2},[{'type',233,'bounded_fun',[{'type',233,'fun',[{'type',233,'product',[{'var',233,'This'}|[{'var',233,'Perspective'}]]}|[{'type',233,'boolean',[]}]]}|[[{'type',234,'constraint',[{'atom',234,'is_subtype'}|[[{'var',234,'This'}|[{'type',234,'wxAuiManager',[]}]]]]}|[{'type',234,'constraint',[{'atom',234,'is_subtype'}|[[{'var',234,'Perspective'}|[{'remote_type',234,[{'atom',234,'unicode'}|[{'atom',234,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 241
		'spec' =
		    %% Line 241
		    [{{'loadPerspective',3},[{'type',241,'bounded_fun',[{'type',241,'fun',[{'type',241,'product',[{'var',241,'This'}|[{'var',241,'Perspective'}|[{'type',241,'list',[{'var',241,'Option'}]}]]]}|[{'type',241,'boolean',[]}]]}|[[{'type',242,'constraint',[{'atom',242,'is_subtype'}|[[{'var',242,'This'}|[{'type',242,'wxAuiManager',[]}]]]]}|[{'type',242,'constraint',[{'atom',242,'is_subtype'}|[[{'var',242,'Perspective'}|[{'remote_type',242,[{'atom',242,'unicode'}|[{'atom',242,'chardata'}|[[]]]]}]]]]}|[{'type',243,'constraint',[{'atom',243,'is_subtype'}|[[{'var',243,'Option'}|[{'type',243,'tuple',[{'atom',243,'update'}|[{'type',243,'boolean',[]}]]}]]]]}]]]]]}]}],
		%% Line 255
		'spec' =
		    %% Line 255
		    [{{'savePaneInfo',2},[{'type',255,'bounded_fun',[{'type',255,'fun',[{'type',255,'product',[{'var',255,'This'}|[{'var',255,'Pane'}]]}|[{'remote_type',255,[{'atom',255,'unicode'}|[{'atom',255,'charlist'}|[[]]]]}]]}|[[{'type',256,'constraint',[{'atom',256,'is_subtype'}|[[{'var',256,'This'}|[{'type',256,'wxAuiManager',[]}]]]]}|[{'type',256,'constraint',[{'atom',256,'is_subtype'}|[[{'var',256,'Pane'}|[{'remote_type',256,[{'atom',256,'wxAuiPaneInfo'}|[{'atom',256,'wxAuiPaneInfo'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 264
		'spec' =
		    %% Line 264
		    [{{'savePerspective',1},[{'type',264,'bounded_fun',[{'type',264,'fun',[{'type',264,'product',[{'var',264,'This'}]}|[{'remote_type',264,[{'atom',264,'unicode'}|[{'atom',264,'charlist'}|[[]]]]}]]}|[[{'type',265,'constraint',[{'atom',265,'is_subtype'}|[[{'var',265,'This'}|[{'type',265,'wxAuiManager',[]}]]]]}]]]}]}],
		%% Line 272
		'spec' =
		    %% Line 272
		    [{{'setArtProvider',2},[{'type',272,'bounded_fun',[{'type',272,'fun',[{'type',272,'product',[{'var',272,'This'}|[{'var',272,'Art_provider'}]]}|[{'atom',272,'ok'}]]}|[[{'type',273,'constraint',[{'atom',273,'is_subtype'}|[[{'var',273,'This'}|[{'type',273,'wxAuiManager',[]}]]]]}|[{'type',273,'constraint',[{'atom',273,'is_subtype'}|[[{'var',273,'Art_provider'}|[{'remote_type',273,[{'atom',273,'wxAuiDockArt'}|[{'atom',273,'wxAuiDockArt'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 281
		'spec' =
		    %% Line 281
		    [{{'setDockSizeConstraint',3},[{'type',281,'bounded_fun',[{'type',281,'fun',[{'type',281,'product',[{'var',281,'This'}|[{'var',281,'Width_pct'}|[{'var',281,'Height_pct'}]]]}|[{'atom',281,'ok'}]]}|[[{'type',282,'constraint',[{'atom',282,'is_subtype'}|[[{'var',282,'This'}|[{'type',282,'wxAuiManager',[]}]]]]}|[{'type',282,'constraint',[{'atom',282,'is_subtype'}|[[{'var',282,'Width_pct'}|[{'type',282,'number',[]}]]]]}|[{'type',282,'constraint',[{'atom',282,'is_subtype'}|[[{'var',282,'Height_pct'}|[{'type',282,'number',[]}]]]]}]]]]]}]}],
		%% Line 290
		'spec' =
		    %% Line 290
		    [{{'setFlags',2},[{'type',290,'bounded_fun',[{'type',290,'fun',[{'type',290,'product',[{'var',290,'This'}|[{'var',290,'Flags'}]]}|[{'atom',290,'ok'}]]}|[[{'type',291,'constraint',[{'atom',291,'is_subtype'}|[[{'var',291,'This'}|[{'type',291,'wxAuiManager',[]}]]]]}|[{'type',291,'constraint',[{'atom',291,'is_subtype'}|[[{'var',291,'Flags'}|[{'type',291,'integer',[]}]]]]}]]]]}]}],
		%% Line 299
		'spec' =
		    %% Line 299
		    [{{'setManagedWindow',2},[{'type',299,'bounded_fun',[{'type',299,'fun',[{'type',299,'product',[{'var',299,'This'}|[{'var',299,'Managed_wnd'}]]}|[{'atom',299,'ok'}]]}|[[{'type',300,'constraint',[{'atom',300,'is_subtype'}|[[{'var',300,'This'}|[{'type',300,'wxAuiManager',[]}]]]]}|[{'type',300,'constraint',[{'atom',300,'is_subtype'}|[[{'var',300,'Managed_wnd'}|[{'remote_type',300,[{'atom',300,'wxWindow'}|[{'atom',300,'wxWindow'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 308
		'spec' =
		    %% Line 308
		    [{{'showHint',2},[{'type',308,'bounded_fun',[{'type',308,'fun',[{'type',308,'product',[{'var',308,'This'}|[{'var',308,'Rect'}]]}|[{'atom',308,'ok'}]]}|[[{'type',309,'constraint',[{'atom',309,'is_subtype'}|[[{'var',309,'This'}|[{'type',309,'wxAuiManager',[]}]]]]}|[{'type',309,'constraint',[{'atom',309,'is_subtype'}|[[{'var',309,'Rect'}|[{'type',309,'tuple',[{'ann_type',309,[{'var',309,'X'}|[{'type',309,'integer',[]}]]}|[{'ann_type',309,[{'var',309,'Y'}|[{'type',309,'integer',[]}]]}|[{'ann_type',309,[{'var',309,'W'}|[{'type',309,'integer',[]}]]}|[{'ann_type',309,[{'var',309,'H'}|[{'type',309,'integer',[]}]]}]]]]}]]]]}]]]]}]}],
		%% Line 317
		'spec' =
		    %% Line 317
		    [{{'unInit',1},[{'type',317,'bounded_fun',[{'type',317,'fun',[{'type',317,'product',[{'var',317,'This'}]}|[{'atom',317,'ok'}]]}|[[{'type',318,'constraint',[{'atom',318,'is_subtype'}|[[{'var',318,'This'}|[{'type',318,'wxAuiManager',[]}]]]]}]]]}]}],
		%% Line 325
		'spec' =
		    %% Line 325
		    [{{'update',1},[{'type',325,'bounded_fun',[{'type',325,'fun',[{'type',325,'product',[{'var',325,'This'}]}|[{'atom',325,'ok'}]]}|[[{'type',326,'constraint',[{'atom',326,'is_subtype'}|[[{'var',326,'This'}|[{'type',326,'wxAuiManager',[]}]]]]}]]]}]}],
		%% Line 333
		'spec' =
		    %% Line 333
		    [{{'destroy',1},[{'type',333,'fun',[{'type',333,'product',[{'ann_type',333,[{'var',333,'This'}|[{'type',333,'wxAuiManager',[]}]]}]}|[{'atom',333,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 42
    fun (_cor0) ->
	case _cor0 of
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 43
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxAuiManager'})
	end
'new'/0 =
    %% Line 49
    fun () ->
	%% Line 50
	apply 'new'/1
	    ([])
'new'/1 =
    %% Line 56
    fun (_cor0) ->
	case _cor0 of
	  <Options>
	      when %% Line 57
		call 'erlang':'is_list'
		    (_cor0) ->
	      let <MOpts> =
		  %% Line 58
		  ( fun (_cor6,_cor5) ->
			case <_cor6,_cor5> of
			  <{'managed_wnd',{'wx_ref',Managed_wndRef,Managed_wndT,_cor14}},Acc> when 'true' ->
			      do  ( case <> of
				      ( <>
					    when call 'erlang':'=:='
						  (Managed_wndT,
						   'wxWindow') ->
					    'ok'
					-| ['compiler_generated'] )
				      ( <> when 'true' ->
					    call Managed_wndT:'parent_class'
						('wxWindow')
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
				  let <_cor3> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<Managed_wndRef>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor3|Acc]
			  %% Line 59
			  <{'flags',Flags},Acc> when 'true' ->
			      let <_cor4> =
				  #{#<2>(32,1,'integer',['unsigned'|['native']]),
				    #<Flags>(32,1,'integer',['unsigned'|['native']])}#
			      in  [_cor4|Acc]
			  %% Line 60
			  <BadOpt,_cor15> when 'true' ->
			      call 'erlang':'error'
				  ({'badoption',BadOpt})
			end
		    -| [{'id',{0,0,'-new/1-fun-0-'}}] )
	      in  let <_cor10> =
		      %% Line 61
		      call 'lists':'foldl'
			  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		  in  let <BinOpt> =
			  %% Line 61
			  call 'erlang':'list_to_binary'
			      (_cor10)
		      in  let <_cor12> =
			      %% Line 63
			      #{#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			  in  %% Line 62
			      call 'wxe_util':'construct'
				  (2552, _cor12)
	  ( <_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'addPane'/2 =
    %% Line 69
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <This = {'wx_ref',_cor4,_cor5,_cor6},Window = {'wx_ref',_cor7,_cor8,_cor9}> when 'true' ->
	      %% Line 71
	      apply 'addPane'/3
		  (This, Window, [])
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'addPane',2}}] )
	    -| ['compiler_generated'] )
	end
'addPane'/3 =
    %% Line 84
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor34},{'wx_ref',WindowRef,WindowT,_cor35},Options>
	      when %% Line 85
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 86
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 87
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (WindowT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call WindowT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <MOpts> =
			  %% Line 88
			  ( fun (_cor17,_cor16) ->
				case <_cor17,_cor16> of
				  <{'direction',Direction},Acc> when 'true' ->
				      let <_cor7> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<Direction>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor7|Acc]
				  %% Line 89
				  <{'caption',Caption},Acc> when 'true' ->
				      let <Caption_UC> =
					  call 'unicode':'characters_to_binary'
					      ([Caption|[0]])
				      in  let <_cor14> =
					      call 'erlang':'byte_size'
						  (Caption_UC)
					  in  let <_cor9> =
						  call 'erlang':'byte_size'
						      (Caption_UC)
					      in  let <_cor10> =
						      call 'erlang':'+'
							  (0, _cor9)
						  in  let <_cor11> =
							  call 'erlang':'band'
							      (_cor10, 7)
						      in  let <_cor12> =
							      call 'erlang':'-'
								  (8, _cor11)
							  in  let <_cor13> =
								  call 'erlang':'band'
								      (_cor12, 7)
							      in  let <_cor15> =
								      #{#<2>(32,1,'integer',['unsigned'|['native']]),
									#<_cor14>(32,1,'integer',['unsigned'|['native']]),
									#<Caption_UC>('all',8,'binary',['unsigned'|['big']]),
									#<0>(_cor13,8,'integer',['unsigned'|['big']])}#
								  in  [_cor15|Acc]
				  %% Line 90
				  <BadOpt,_cor36> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-addPane/3-fun-0-'}}] )
		      in  let <_cor21> =
			      %% Line 91
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 91
				  call 'erlang':'list_to_binary'
				      (_cor21)
			      in  let <_cor23> =
				      %% Line 93
				      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
					#<WindowRef>(32,1,'integer',['unsigned'|['native']]),
					#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				  in  %% Line 92
				      call 'wxe_util':'call'
					  (2556, _cor23)
	  %% Line 94
	  <{'wx_ref',ThisRef,ThisT,_cor37},{'wx_ref',WindowRef,WindowT,_cor38},{'wx_ref',Pane_infoRef,Pane_infoT,_cor39}> when 'true' ->
	      do  %% Line 95
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 96
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (WindowT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call WindowT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      do  %% Line 97
			  ( case <> of
			      ( <>
				    when call 'erlang':'=:='
					  (Pane_infoT,
					   'wxAuiPaneInfo') ->
				    'ok'
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    call Pane_infoT:'parent_class'
					('wxAuiPaneInfo')
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
			  let <_cor30> =
			      %% Line 99
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<WindowRef>(32,1,'integer',['unsigned'|['native']]),
				#<Pane_infoRef>(32,1,'integer',['unsigned'|['native']])}#
			  in  %% Line 98
			      call 'wxe_util':'call'
				  (2554, _cor30)
	  ( <_cor33,_cor32,_cor31> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor33,_cor32,_cor31})
		  -| [{'function_name',{'addPane',3}}] )
	    -| ['compiler_generated'] )
	end
'addPane'/4 =
    %% Line 104
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor17},{'wx_ref',WindowRef,WindowT,_cor18},{'wx_ref',Pane_infoRef,Pane_infoT,_cor19},{Drop_posX,Drop_posY}>
	      when let <_cor4> =
		    %% Line 105
		    call 'erlang':'is_integer'
			(Drop_posX)
		in  let <_cor5> =
			%% Line 105
			call 'erlang':'is_integer'
			    (Drop_posY)
		    in  %% Line 105
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 106
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 107
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (WindowT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call WindowT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      do  %% Line 108
			  ( case <> of
			      ( <>
				    when call 'erlang':'=:='
					  (Pane_infoT,
					   'wxAuiPaneInfo') ->
				    'ok'
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    call Pane_infoT:'parent_class'
					('wxAuiPaneInfo')
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
			  let <_cor12> =
			      %% Line 110
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<WindowRef>(32,1,'integer',['unsigned'|['native']]),
				#<Pane_infoRef>(32,1,'integer',['unsigned'|['native']]),
				#<Drop_posX>(32,1,'integer',['unsigned'|['native']]),
				#<Drop_posY>(32,1,'integer',['unsigned'|['native']])}#
			  in  %% Line 109
			      call 'wxe_util':'call'
				  (2555, _cor12)
	  ( <_cor16,_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14,_cor13})
		  -| [{'function_name',{'addPane',4}}] )
	    -| ['compiler_generated'] )
	end
'detachPane'/2 =
    %% Line 115
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',WindowRef,WindowT,_cor10}> when 'true' ->
	      do  %% Line 116
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 117
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (WindowT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call WindowT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 119
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<WindowRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 118
			  call 'wxe_util':'call'
			      (2557, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'detachPane',2}}] )
	    -| ['compiler_generated'] )
	end
'getAllPanes'/1 =
    %% Line 124
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 125
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 127
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 126
		      call 'wxe_util':'call'
			  (2558, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getAllPanes',1}}] )
	    -| ['compiler_generated'] )
	end
'getArtProvider'/1 =
    %% Line 132
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 133
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 135
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 134
		      call 'wxe_util':'call'
			  (2559, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getArtProvider',1}}] )
	    -| ['compiler_generated'] )
	end
'getDockSizeConstraint'/1 =
    %% Line 140
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 141
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 143
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 142
		      call 'wxe_util':'call'
			  (2560, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getDockSizeConstraint',1}}] )
	    -| ['compiler_generated'] )
	end
'getFlags'/1 =
    %% Line 148
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 149
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 151
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 150
		      call 'wxe_util':'call'
			  (2561, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getFlags',1}}] )
	    -| ['compiler_generated'] )
	end
'getManagedWindow'/1 =
    %% Line 156
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 157
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 159
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 158
		      call 'wxe_util':'call'
			  (2562, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getManagedWindow',1}}] )
	    -| ['compiler_generated'] )
	end
'getManager'/1 =
    %% Line 164
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',WindowRef,WindowT,_cor5}> when 'true' ->
	      do  %% Line 165
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (WindowT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call WindowT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 167
		      #{#<WindowRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 166
		      call 'wxe_util':'call'
			  (2563, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getManager',1}}] )
	    -| ['compiler_generated'] )
	end
'getPane'/2 =
    %% Line 178
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor19},Name>
	      when %% Line 179
		call 'erlang':'is_list'
		    (Name) ->
	      do  %% Line 180
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Name_UC> =
		      %% Line 181
		      call 'unicode':'characters_to_binary'
			  ([Name|[0]])
		  in  let <_cor10> =
			  %% Line 183
			  call 'erlang':'byte_size'
			      (Name_UC)
		      in  let <_cor5> =
			      %% Line 183
			      call 'erlang':'byte_size'
				  (Name_UC)
			  in  let <_cor6> =
				  %% Line 183
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 183
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 183
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 183
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 183
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Name_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 182
						  call 'wxe_util':'call'
						      (2565, _cor11)
	  %% Line 184
	  <{'wx_ref',ThisRef,ThisT,_cor20},{'wx_ref',WindowRef,WindowT,_cor21}> when 'true' ->
	      do  %% Line 185
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 186
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (WindowT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call WindowT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor16> =
			  %% Line 188
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<WindowRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 187
			  call 'wxe_util':'call'
			      (2564, _cor16)
	  ( <_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17})
		  -| [{'function_name',{'getPane',2}}] )
	    -| ['compiler_generated'] )
	end
'hideHint'/1 =
    %% Line 193
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 194
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 196
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 195
		      call 'wxe_util':'cast'
			  (2566, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'hideHint',1}}] )
	    -| ['compiler_generated'] )
	end
'insertPane'/3 =
    %% Line 202
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor7,_cor8,_cor9},Window = {'wx_ref',_cor10,_cor11,_cor12},Insert_location = {'wx_ref',_cor13,_cor14,_cor15}> when 'true' ->
	      %% Line 204
	      apply 'insertPane'/4
		  (This, Window, Insert_location, [])
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'insertPane',3}}] )
	    -| ['compiler_generated'] )
	end
'insertPane'/4 =
    %% Line 210
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor23},{'wx_ref',WindowRef,WindowT,_cor24},{'wx_ref',Insert_locationRef,Insert_locationT,_cor25},Options>
	      when %% Line 211
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 212
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 213
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (WindowT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call WindowT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      do  %% Line 214
			  ( case <> of
			      ( <>
				    when call 'erlang':'=:='
					  (Insert_locationT,
					   'wxAuiPaneInfo') ->
				    'ok'
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    call Insert_locationT:'parent_class'
					('wxAuiPaneInfo')
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
			  let <MOpts> =
			      %% Line 215
			      ( fun (_cor12,_cor11) ->
				    case <_cor12,_cor11> of
				      <{'insert_level',Insert_level},Acc> when 'true' ->
					  let <_cor10> =
					      #{#<1>(32,1,'integer',['unsigned'|['native']]),
						#<Insert_level>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor10|Acc]
				      %% Line 216
				      <BadOpt,_cor26> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-insertPane/4-fun-0-'}}] )
			  in  let <_cor16> =
				  %% Line 217
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 217
				      call 'erlang':'list_to_binary'
					  (_cor16)
				  in  let <_cor18> =
					  %% Line 219
					  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
					    #<WindowRef>(32,1,'integer',['unsigned'|['native']]),
					    #<Insert_locationRef>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']]),
					    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				      in  %% Line 218
					  call 'wxe_util':'call'
					      (2567, _cor18)
	  ( <_cor22,_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21,_cor20,_cor19})
		  -| [{'function_name',{'insertPane',4}}] )
	    -| ['compiler_generated'] )
	end
'loadPaneInfo'/3 =
    %% Line 224
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},Pane_part,{'wx_ref',PaneRef,PaneT,_cor19}>
	      when %% Line 225
		call 'erlang':'is_list'
		    (Pane_part) ->
	      do  %% Line 226
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Pane_part_UC> =
		      %% Line 227
		      call 'unicode':'characters_to_binary'
			  ([Pane_part|[0]])
		  in  do  %% Line 228
			  ( case <> of
			      ( <>
				    when call 'erlang':'=:='
					  (PaneT,
					   'wxAuiPaneInfo') ->
				    'ok'
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    call PaneT:'parent_class'
					('wxAuiPaneInfo')
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
			  let <_cor13> =
			      %% Line 230
			      call 'erlang':'byte_size'
				  (Pane_part_UC)
			  in  let <_cor8> =
				  %% Line 230
				  call 'erlang':'byte_size'
				      (Pane_part_UC)
			      in  let <_cor9> =
				      %% Line 230
				      call 'erlang':'+'
					  (0, _cor8)
				  in  let <_cor10> =
					  %% Line 230
					  call 'erlang':'band'
					      (_cor9, 7)
				      in  let <_cor11> =
					      %% Line 230
					      call 'erlang':'-'
						  (8, _cor10)
					  in  let <_cor12> =
						  %% Line 230
						  call 'erlang':'band'
						      (_cor11, 7)
					      in  let <_cor14> =
						      %% Line 230
						      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
							#<_cor13>(32,1,'integer',['unsigned'|['native']]),
							#<Pane_part_UC>('all',8,'binary',['unsigned'|['big']]),
							#<0>(_cor12,8,'integer',['unsigned'|['big']]),
							#<PaneRef>(32,1,'integer',['unsigned'|['native']])}#
						  in  %% Line 229
						      call 'wxe_util':'cast'
							  (2568, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'loadPaneInfo',3}}] )
	    -| ['compiler_generated'] )
	end
'loadPerspective'/2 =
    %% Line 236
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <This = {'wx_ref',_cor5,_cor6,_cor7},Perspective>
	      when %% Line 237
		call 'erlang':'is_list'
		    (Perspective) ->
	      %% Line 238
	      apply 'loadPerspective'/3
		  (This, Perspective, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'loadPerspective',2}}] )
	    -| ['compiler_generated'] )
	end
'loadPerspective'/3 =
    %% Line 244
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor27},Perspective,Options>
	      when let <_cor3> =
		    %% Line 245
		    call 'erlang':'is_list'
			(Perspective)
		in  let <_cor4> =
			%% Line 245
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 245
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 246
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Perspective_UC> =
		      %% Line 247
		      call 'unicode':'characters_to_binary'
			  ([Perspective|[0]])
		  in  let <MOpts> =
			  %% Line 248
			  ( fun (_cor11,_cor10) ->
				case <_cor11,_cor10> of
				  <{'update',Update},Acc> when 'true' ->
				      let <_cor8> =
					  call 'wxe_util':'from_bool'
					      (Update)
				      in  let <_cor9> =
					      #{#<1>(32,1,'integer',['unsigned'|['native']]),
						#<_cor8>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor9|Acc]
				  %% Line 249
				  <BadOpt,_cor28> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-loadPerspective/3-fun-0-'}}] )
		      in  let <_cor15> =
			      %% Line 250
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 250
				  call 'erlang':'list_to_binary'
				      (_cor15)
			      in  let <_cor22> =
				      %% Line 252
				      call 'erlang':'byte_size'
					  (Perspective_UC)
				  in  let <_cor17> =
					  %% Line 252
					  call 'erlang':'byte_size'
					      (Perspective_UC)
				      in  let <_cor18> =
					      %% Line 252
					      call 'erlang':'+'
						  (0, _cor17)
					  in  let <_cor19> =
						  %% Line 252
						  call 'erlang':'band'
						      (_cor18, 7)
					      in  let <_cor20> =
						      %% Line 252
						      call 'erlang':'-'
							  (8, _cor19)
						  in  let <_cor21> =
							  %% Line 252
							  call 'erlang':'band'
							      (_cor20, 7)
						      in  let <_cor23> =
							      %% Line 252
							      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
								#<_cor22>(32,1,'integer',['unsigned'|['native']]),
								#<Perspective_UC>('all',8,'binary',['unsigned'|['big']]),
								#<0>(_cor21,8,'integer',['unsigned'|['big']]),
								#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
							  in  %% Line 251
							      call 'wxe_util':'call'
								  (2569, _cor23)
	  ( <_cor26,_cor25,_cor24> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor26,_cor25,_cor24})
		  -| [{'function_name',{'loadPerspective',3}}] )
	    -| ['compiler_generated'] )
	end
'savePaneInfo'/2 =
    %% Line 257
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',PaneRef,PaneT,_cor10}> when 'true' ->
	      do  %% Line 258
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 259
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (PaneT,
				       'wxAuiPaneInfo') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call PaneT:'parent_class'
				    ('wxAuiPaneInfo')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 261
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<PaneRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 260
			  call 'wxe_util':'call'
			      (2570, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'savePaneInfo',2}}] )
	    -| ['compiler_generated'] )
	end
'savePerspective'/1 =
    %% Line 266
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 267
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 269
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 268
		      call 'wxe_util':'call'
			  (2571, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'savePerspective',1}}] )
	    -| ['compiler_generated'] )
	end
'setArtProvider'/2 =
    %% Line 274
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',Art_providerRef,Art_providerT,_cor10}> when 'true' ->
	      do  %% Line 275
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 276
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (Art_providerT,
				       'wxAuiDockArt') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call Art_providerT:'parent_class'
				    ('wxAuiDockArt')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 278
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Art_providerRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 277
			  call 'wxe_util':'cast'
			      (2572, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setArtProvider',2}}] )
	    -| ['compiler_generated'] )
	end
'setDockSizeConstraint'/3 =
    %% Line 283
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor11},Width_pct,Height_pct>
	      when let <_cor3> =
		    %% Line 284
		    call 'erlang':'is_number'
			(Width_pct)
		in  let <_cor4> =
			%% Line 284
			call 'erlang':'is_number'
			    (Height_pct)
		    in  %% Line 284
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 285
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 287
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<0>(32,1,'integer',['unsigned'|['big']]),
			#<Width_pct>(64,1,'float',['unsigned'|['native']]),
			#<Height_pct>(64,1,'float',['unsigned'|['native']])}#
		  in  %% Line 286
		      call 'wxe_util':'cast'
			  (2573, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'setDockSizeConstraint',3}}] )
	    -| ['compiler_generated'] )
	end
'setFlags'/2 =
    %% Line 292
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Flags>
	      when %% Line 293
		call 'erlang':'is_integer'
		    (Flags) ->
	      do  %% Line 294
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 296
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Flags>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 295
		      call 'wxe_util':'cast'
			  (2574, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setFlags',2}}] )
	    -| ['compiler_generated'] )
	end
'setManagedWindow'/2 =
    %% Line 301
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',Managed_wndRef,Managed_wndT,_cor10}> when 'true' ->
	      do  %% Line 302
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 303
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (Managed_wndT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call Managed_wndT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 305
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Managed_wndRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 304
			  call 'wxe_util':'cast'
			      (2575, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setManagedWindow',2}}] )
	    -| ['compiler_generated'] )
	end
'showHint'/2 =
    %% Line 310
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor13},{RectX,RectY,RectW,RectH}>
	      when %% Line 311
		try
		    let <_cor2> =
			call 'erlang':'is_integer'
			    (RectX)
		    in  let <_cor3> =
			    call 'erlang':'is_integer'
				(RectY)
			in  let <_cor4> =
				call 'erlang':'is_integer'
				    (RectW)
			    in  let <_cor5> =
				    call 'erlang':'is_integer'
					(RectH)
				in  let <_cor6> =
					call 'erlang':'and'
					    (_cor4, _cor5)
				    in  let <_cor7> =
					    call 'erlang':'and'
						(_cor3, _cor6)
					in  call 'erlang':'and'
						(_cor2, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 312
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor10> =
		      %% Line 314
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<RectX>(32,1,'integer',['unsigned'|['native']]),
			#<RectY>(32,1,'integer',['unsigned'|['native']]),
			#<RectW>(32,1,'integer',['unsigned'|['native']]),
			#<RectH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 313
		      call 'wxe_util':'cast'
			  (2576, _cor10)
	  ( <_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11})
		  -| [{'function_name',{'showHint',2}}] )
	    -| ['compiler_generated'] )
	end
'unInit'/1 =
    %% Line 319
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 320
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 322
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 321
		      call 'wxe_util':'cast'
			  (2577, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'unInit',1}}] )
	    -| ['compiler_generated'] )
	end
'update'/1 =
    %% Line 327
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 328
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 330
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 329
		      call 'wxe_util':'cast'
			  (2578, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'update',1}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 334
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 335
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxAuiManager') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxAuiManager')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 336
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 337
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'disconnect'/3 =
    %% Line 340
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 342
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 344
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 346
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 348
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxAuiManager')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxAuiManager', _cor0)
end