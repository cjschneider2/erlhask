module 'wxStyledTextEvent' ['getAlt'/1,
			    'getClientData'/1,
			    'getControl'/1,
			    'getDragAllowMove'/1,
			    'getDragResult'/1,
			    'getDragText'/1,
			    'getExtraLong'/1,
			    'getFoldLevelNow'/1,
			    'getFoldLevelPrev'/1,
			    'getId'/1,
			    'getInt'/1,
			    'getKey'/1,
			    'getLParam'/1,
			    'getLength'/1,
			    'getLine'/1,
			    'getLinesAdded'/1,
			    'getListType'/1,
			    'getMargin'/1,
			    'getMessage'/1,
			    'getModificationType'/1,
			    'getModifiers'/1,
			    'getPosition'/1,
			    'getSelection'/1,
			    'getShift'/1,
			    'getSkipped'/1,
			    'getString'/1,
			    'getText'/1,
			    'getTimestamp'/1,
			    'getWParam'/1,
			    'getX'/1,
			    'getY'/1,
			    'isChecked'/1,
			    'isCommandEvent'/1,
			    'isSelection'/1,
			    'module_info'/0,
			    'module_info'/1,
			    'parent_class'/1,
			    'resumePropagation'/2,
			    'setInt'/2,
			    'setString'/2,
			    'shouldPropagate'/1,
			    'skip'/1,
			    'skip'/2,
			    'stopPropagation'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 47
		'export_type' =
		    %% Line 47
		    [{'wxStyledTextEvent',0}],
		%% Line 53
		'type' =
		    %% Line 53
		    [{'wxStyledTextEvent',{'remote_type',53,[{'atom',53,'wx'}|[{'atom',53,'wx_object'}|[[]]]]},[]}],
		%% Line 55
		'spec' =
		    %% Line 55
		    [{{'getPosition',1},[{'type',55,'bounded_fun',[{'type',55,'fun',[{'type',55,'product',[{'var',55,'This'}]}|[{'type',55,'integer',[]}]]}|[[{'type',56,'constraint',[{'atom',56,'is_subtype'}|[[{'var',56,'This'}|[{'type',56,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 63
		'spec' =
		    %% Line 63
		    [{{'getKey',1},[{'type',63,'bounded_fun',[{'type',63,'fun',[{'type',63,'product',[{'var',63,'This'}]}|[{'type',63,'integer',[]}]]}|[[{'type',64,'constraint',[{'atom',64,'is_subtype'}|[[{'var',64,'This'}|[{'type',64,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 71
		'spec' =
		    %% Line 71
		    [{{'getModifiers',1},[{'type',71,'bounded_fun',[{'type',71,'fun',[{'type',71,'product',[{'var',71,'This'}]}|[{'type',71,'integer',[]}]]}|[[{'type',72,'constraint',[{'atom',72,'is_subtype'}|[[{'var',72,'This'}|[{'type',72,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 79
		'spec' =
		    %% Line 79
		    [{{'getModificationType',1},[{'type',79,'bounded_fun',[{'type',79,'fun',[{'type',79,'product',[{'var',79,'This'}]}|[{'type',79,'integer',[]}]]}|[[{'type',80,'constraint',[{'atom',80,'is_subtype'}|[[{'var',80,'This'}|[{'type',80,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 87
		'spec' =
		    %% Line 87
		    [{{'getText',1},[{'type',87,'bounded_fun',[{'type',87,'fun',[{'type',87,'product',[{'var',87,'This'}]}|[{'remote_type',87,[{'atom',87,'unicode'}|[{'atom',87,'charlist'}|[[]]]]}]]}|[[{'type',88,'constraint',[{'atom',88,'is_subtype'}|[[{'var',88,'This'}|[{'type',88,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 95
		'spec' =
		    %% Line 95
		    [{{'getLength',1},[{'type',95,'bounded_fun',[{'type',95,'fun',[{'type',95,'product',[{'var',95,'This'}]}|[{'type',95,'integer',[]}]]}|[[{'type',96,'constraint',[{'atom',96,'is_subtype'}|[[{'var',96,'This'}|[{'type',96,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 103
		'spec' =
		    %% Line 103
		    [{{'getLinesAdded',1},[{'type',103,'bounded_fun',[{'type',103,'fun',[{'type',103,'product',[{'var',103,'This'}]}|[{'type',103,'integer',[]}]]}|[[{'type',104,'constraint',[{'atom',104,'is_subtype'}|[[{'var',104,'This'}|[{'type',104,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 111
		'spec' =
		    %% Line 111
		    [{{'getLine',1},[{'type',111,'bounded_fun',[{'type',111,'fun',[{'type',111,'product',[{'var',111,'This'}]}|[{'type',111,'integer',[]}]]}|[[{'type',112,'constraint',[{'atom',112,'is_subtype'}|[[{'var',112,'This'}|[{'type',112,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 119
		'spec' =
		    %% Line 119
		    [{{'getFoldLevelNow',1},[{'type',119,'bounded_fun',[{'type',119,'fun',[{'type',119,'product',[{'var',119,'This'}]}|[{'type',119,'integer',[]}]]}|[[{'type',120,'constraint',[{'atom',120,'is_subtype'}|[[{'var',120,'This'}|[{'type',120,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 127
		'spec' =
		    %% Line 127
		    [{{'getFoldLevelPrev',1},[{'type',127,'bounded_fun',[{'type',127,'fun',[{'type',127,'product',[{'var',127,'This'}]}|[{'type',127,'integer',[]}]]}|[[{'type',128,'constraint',[{'atom',128,'is_subtype'}|[[{'var',128,'This'}|[{'type',128,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 135
		'spec' =
		    %% Line 135
		    [{{'getMargin',1},[{'type',135,'bounded_fun',[{'type',135,'fun',[{'type',135,'product',[{'var',135,'This'}]}|[{'type',135,'integer',[]}]]}|[[{'type',136,'constraint',[{'atom',136,'is_subtype'}|[[{'var',136,'This'}|[{'type',136,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 143
		'spec' =
		    %% Line 143
		    [{{'getMessage',1},[{'type',143,'bounded_fun',[{'type',143,'fun',[{'type',143,'product',[{'var',143,'This'}]}|[{'type',143,'integer',[]}]]}|[[{'type',144,'constraint',[{'atom',144,'is_subtype'}|[[{'var',144,'This'}|[{'type',144,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 151
		'spec' =
		    %% Line 151
		    [{{'getWParam',1},[{'type',151,'bounded_fun',[{'type',151,'fun',[{'type',151,'product',[{'var',151,'This'}]}|[{'type',151,'integer',[]}]]}|[[{'type',152,'constraint',[{'atom',152,'is_subtype'}|[[{'var',152,'This'}|[{'type',152,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 159
		'spec' =
		    %% Line 159
		    [{{'getLParam',1},[{'type',159,'bounded_fun',[{'type',159,'fun',[{'type',159,'product',[{'var',159,'This'}]}|[{'type',159,'integer',[]}]]}|[[{'type',160,'constraint',[{'atom',160,'is_subtype'}|[[{'var',160,'This'}|[{'type',160,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 167
		'spec' =
		    %% Line 167
		    [{{'getListType',1},[{'type',167,'bounded_fun',[{'type',167,'fun',[{'type',167,'product',[{'var',167,'This'}]}|[{'type',167,'integer',[]}]]}|[[{'type',168,'constraint',[{'atom',168,'is_subtype'}|[[{'var',168,'This'}|[{'type',168,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 175
		'spec' =
		    %% Line 175
		    [{{'getX',1},[{'type',175,'bounded_fun',[{'type',175,'fun',[{'type',175,'product',[{'var',175,'This'}]}|[{'type',175,'integer',[]}]]}|[[{'type',176,'constraint',[{'atom',176,'is_subtype'}|[[{'var',176,'This'}|[{'type',176,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 183
		'spec' =
		    %% Line 183
		    [{{'getY',1},[{'type',183,'bounded_fun',[{'type',183,'fun',[{'type',183,'product',[{'var',183,'This'}]}|[{'type',183,'integer',[]}]]}|[[{'type',184,'constraint',[{'atom',184,'is_subtype'}|[[{'var',184,'This'}|[{'type',184,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 191
		'spec' =
		    %% Line 191
		    [{{'getDragText',1},[{'type',191,'bounded_fun',[{'type',191,'fun',[{'type',191,'product',[{'var',191,'This'}]}|[{'remote_type',191,[{'atom',191,'unicode'}|[{'atom',191,'charlist'}|[[]]]]}]]}|[[{'type',192,'constraint',[{'atom',192,'is_subtype'}|[[{'var',192,'This'}|[{'type',192,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 199
		'spec' =
		    %% Line 199
		    [{{'getDragAllowMove',1},[{'type',199,'bounded_fun',[{'type',199,'fun',[{'type',199,'product',[{'var',199,'This'}]}|[{'type',199,'boolean',[]}]]}|[[{'type',200,'constraint',[{'atom',200,'is_subtype'}|[[{'var',200,'This'}|[{'type',200,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 208
		'spec' =
		    %% Line 208
		    [{{'getDragResult',1},[{'type',208,'bounded_fun',[{'type',208,'fun',[{'type',208,'product',[{'var',208,'This'}]}|[{'remote_type',208,[{'atom',208,'wx'}|[{'atom',208,'wx_enum'}|[[]]]]}]]}|[[{'type',209,'constraint',[{'atom',209,'is_subtype'}|[[{'var',209,'This'}|[{'type',209,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 216
		'spec' =
		    %% Line 216
		    [{{'getShift',1},[{'type',216,'bounded_fun',[{'type',216,'fun',[{'type',216,'product',[{'var',216,'This'}]}|[{'type',216,'boolean',[]}]]}|[[{'type',217,'constraint',[{'atom',217,'is_subtype'}|[[{'var',217,'This'}|[{'type',217,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 224
		'spec' =
		    %% Line 224
		    [{{'getControl',1},[{'type',224,'bounded_fun',[{'type',224,'fun',[{'type',224,'product',[{'var',224,'This'}]}|[{'type',224,'boolean',[]}]]}|[[{'type',225,'constraint',[{'atom',225,'is_subtype'}|[[{'var',225,'This'}|[{'type',225,'wxStyledTextEvent',[]}]]]]}]]]}]}],
		%% Line 232
		'spec' =
		    %% Line 232
		    [{{'getAlt',1},[{'type',232,'bounded_fun',[{'type',232,'fun',[{'type',232,'product',[{'var',232,'This'}]}|[{'type',232,'boolean',[]}]]}|[[{'type',233,'constraint',[{'atom',233,'is_subtype'}|[[{'var',233,'This'}|[{'type',233,'wxStyledTextEvent',[]}]]]]}]]]}]}]]
'parent_class'/1 =
    %% Line 49
    fun (_cor0) ->
	case _cor0 of
	  <'wxCommandEvent'> when 'true' ->
	      'true'
	  %% Line 50
	  <'wxEvent'> when 'true' ->
	      'true'
	  %% Line 51
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxStyledTextEvent'})
	end
'getPosition'/1 =
    %% Line 57
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 58
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 60
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 59
		      call 'wxe_util':'call'
			  (2882, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPosition',1}}] )
	    -| ['compiler_generated'] )
	end
'getKey'/1 =
    %% Line 65
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 66
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 68
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 67
		      call 'wxe_util':'call'
			  (2883, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getKey',1}}] )
	    -| ['compiler_generated'] )
	end
'getModifiers'/1 =
    %% Line 73
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 74
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 76
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 75
		      call 'wxe_util':'call'
			  (2884, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getModifiers',1}}] )
	    -| ['compiler_generated'] )
	end
'getModificationType'/1 =
    %% Line 81
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 82
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 84
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 83
		      call 'wxe_util':'call'
			  (2885, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getModificationType',1}}] )
	    -| ['compiler_generated'] )
	end
'getText'/1 =
    %% Line 89
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 90
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 92
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 91
		      call 'wxe_util':'call'
			  (2886, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getText',1}}] )
	    -| ['compiler_generated'] )
	end
'getLength'/1 =
    %% Line 97
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 98
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 100
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 99
		      call 'wxe_util':'call'
			  (2887, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLength',1}}] )
	    -| ['compiler_generated'] )
	end
'getLinesAdded'/1 =
    %% Line 105
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 106
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 108
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 107
		      call 'wxe_util':'call'
			  (2888, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLinesAdded',1}}] )
	    -| ['compiler_generated'] )
	end
'getLine'/1 =
    %% Line 113
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 114
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 116
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 115
		      call 'wxe_util':'call'
			  (2889, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLine',1}}] )
	    -| ['compiler_generated'] )
	end
'getFoldLevelNow'/1 =
    %% Line 121
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 122
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 124
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 123
		      call 'wxe_util':'call'
			  (2890, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getFoldLevelNow',1}}] )
	    -| ['compiler_generated'] )
	end
'getFoldLevelPrev'/1 =
    %% Line 129
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 130
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 132
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 131
		      call 'wxe_util':'call'
			  (2891, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getFoldLevelPrev',1}}] )
	    -| ['compiler_generated'] )
	end
'getMargin'/1 =
    %% Line 137
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 138
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 140
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 139
		      call 'wxe_util':'call'
			  (2892, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getMargin',1}}] )
	    -| ['compiler_generated'] )
	end
'getMessage'/1 =
    %% Line 145
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 146
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 148
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 147
		      call 'wxe_util':'call'
			  (2893, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getMessage',1}}] )
	    -| ['compiler_generated'] )
	end
'getWParam'/1 =
    %% Line 153
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 154
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 156
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 155
		      call 'wxe_util':'call'
			  (2894, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getWParam',1}}] )
	    -| ['compiler_generated'] )
	end
'getLParam'/1 =
    %% Line 161
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 162
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 164
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 163
		      call 'wxe_util':'call'
			  (2895, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLParam',1}}] )
	    -| ['compiler_generated'] )
	end
'getListType'/1 =
    %% Line 169
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 170
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 172
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 171
		      call 'wxe_util':'call'
			  (2896, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getListType',1}}] )
	    -| ['compiler_generated'] )
	end
'getX'/1 =
    %% Line 177
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 178
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 180
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 179
		      call 'wxe_util':'call'
			  (2897, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getX',1}}] )
	    -| ['compiler_generated'] )
	end
'getY'/1 =
    %% Line 185
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 186
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 188
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 187
		      call 'wxe_util':'call'
			  (2898, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getY',1}}] )
	    -| ['compiler_generated'] )
	end
'getDragText'/1 =
    %% Line 193
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 194
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 196
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 195
		      call 'wxe_util':'call'
			  (2899, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getDragText',1}}] )
	    -| ['compiler_generated'] )
	end
'getDragAllowMove'/1 =
    %% Line 201
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 202
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 204
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 203
		      call 'wxe_util':'call'
			  (2900, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getDragAllowMove',1}}] )
	    -| ['compiler_generated'] )
	end
'getDragResult'/1 =
    %% Line 210
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 211
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 213
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 212
		      call 'wxe_util':'call'
			  (2901, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getDragResult',1}}] )
	    -| ['compiler_generated'] )
	end
'getShift'/1 =
    %% Line 218
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 219
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 221
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 220
		      call 'wxe_util':'call'
			  (2902, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getShift',1}}] )
	    -| ['compiler_generated'] )
	end
'getControl'/1 =
    %% Line 226
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 227
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 229
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 228
		      call 'wxe_util':'call'
			  (2903, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getControl',1}}] )
	    -| ['compiler_generated'] )
	end
'getAlt'/1 =
    %% Line 234
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 235
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStyledTextEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStyledTextEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 237
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 236
		      call 'wxe_util':'call'
			  (2904, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getAlt',1}}] )
	    -| ['compiler_generated'] )
	end
'setString'/2 =
    %% Line 241
    fun (_cor1,_cor0) ->
	call 'wxCommandEvent':'setString'
	    (_cor1, _cor0)
'setInt'/2 =
    %% Line 243
    fun (_cor1,_cor0) ->
	call 'wxCommandEvent':'setInt'
	    (_cor1, _cor0)
'isSelection'/1 =
    %% Line 245
    fun (_cor0) ->
	call 'wxCommandEvent':'isSelection'
	    (_cor0)
'isChecked'/1 =
    %% Line 247
    fun (_cor0) ->
	call 'wxCommandEvent':'isChecked'
	    (_cor0)
'getString'/1 =
    %% Line 249
    fun (_cor0) ->
	call 'wxCommandEvent':'getString'
	    (_cor0)
'getSelection'/1 =
    %% Line 251
    fun (_cor0) ->
	call 'wxCommandEvent':'getSelection'
	    (_cor0)
'getInt'/1 =
    %% Line 253
    fun (_cor0) ->
	call 'wxCommandEvent':'getInt'
	    (_cor0)
'getExtraLong'/1 =
    %% Line 255
    fun (_cor0) ->
	call 'wxCommandEvent':'getExtraLong'
	    (_cor0)
'getClientData'/1 =
    %% Line 257
    fun (_cor0) ->
	call 'wxCommandEvent':'getClientData'
	    (_cor0)
'stopPropagation'/1 =
    %% Line 260
    fun (_cor0) ->
	call 'wxEvent':'stopPropagation'
	    (_cor0)
'skip'/2 =
    %% Line 262
    fun (_cor1,_cor0) ->
	call 'wxEvent':'skip'
	    (_cor1, _cor0)
'skip'/1 =
    %% Line 264
    fun (_cor0) ->
	call 'wxEvent':'skip'
	    (_cor0)
'shouldPropagate'/1 =
    %% Line 266
    fun (_cor0) ->
	call 'wxEvent':'shouldPropagate'
	    (_cor0)
'resumePropagation'/2 =
    %% Line 268
    fun (_cor1,_cor0) ->
	call 'wxEvent':'resumePropagation'
	    (_cor1, _cor0)
'isCommandEvent'/1 =
    %% Line 270
    fun (_cor0) ->
	call 'wxEvent':'isCommandEvent'
	    (_cor0)
'getTimestamp'/1 =
    %% Line 272
    fun (_cor0) ->
	call 'wxEvent':'getTimestamp'
	    (_cor0)
'getSkipped'/1 =
    %% Line 274
    fun (_cor0) ->
	call 'wxEvent':'getSkipped'
	    (_cor0)
'getId'/1 =
    %% Line 276
    fun (_cor0) ->
	call 'wxEvent':'getId'
	    (_cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxStyledTextEvent')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxStyledTextEvent', _cor0)
end