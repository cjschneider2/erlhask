module 'wxEvent' ['getId'/1,
		  'getSkipped'/1,
		  'getTimestamp'/1,
		  'isCommandEvent'/1,
		  'module_info'/0,
		  'module_info'/1,
		  'parent_class'/1,
		  'resumePropagation'/2,
		  'shouldPropagate'/1,
		  'skip'/1,
		  'skip'/2,
		  'stopPropagation'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 33
		'export_type' =
		    %% Line 33
		    [{'wxEvent',0}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{'wxEvent',{'remote_type',37,[{'atom',37,'wx'}|[{'atom',37,'wx_object'}|[[]]]]},[]}],
		%% Line 39
		'spec' =
		    %% Line 39
		    [{{'getId',1},[{'type',39,'bounded_fun',[{'type',39,'fun',[{'type',39,'product',[{'var',39,'This'}]}|[{'type',39,'integer',[]}]]}|[[{'type',40,'constraint',[{'atom',40,'is_subtype'}|[[{'var',40,'This'}|[{'type',40,'wxEvent',[]}]]]]}]]]}]}],
		%% Line 47
		'spec' =
		    %% Line 47
		    [{{'getSkipped',1},[{'type',47,'bounded_fun',[{'type',47,'fun',[{'type',47,'product',[{'var',47,'This'}]}|[{'type',47,'boolean',[]}]]}|[[{'type',48,'constraint',[{'atom',48,'is_subtype'}|[[{'var',48,'This'}|[{'type',48,'wxEvent',[]}]]]]}]]]}]}],
		%% Line 55
		'spec' =
		    %% Line 55
		    [{{'getTimestamp',1},[{'type',55,'bounded_fun',[{'type',55,'fun',[{'type',55,'product',[{'var',55,'This'}]}|[{'type',55,'integer',[]}]]}|[[{'type',56,'constraint',[{'atom',56,'is_subtype'}|[[{'var',56,'This'}|[{'type',56,'wxEvent',[]}]]]]}]]]}]}],
		%% Line 63
		'spec' =
		    %% Line 63
		    [{{'isCommandEvent',1},[{'type',63,'bounded_fun',[{'type',63,'fun',[{'type',63,'product',[{'var',63,'This'}]}|[{'type',63,'boolean',[]}]]}|[[{'type',64,'constraint',[{'atom',64,'is_subtype'}|[[{'var',64,'This'}|[{'type',64,'wxEvent',[]}]]]]}]]]}]}],
		%% Line 71
		'spec' =
		    %% Line 71
		    [{{'resumePropagation',2},[{'type',71,'bounded_fun',[{'type',71,'fun',[{'type',71,'product',[{'var',71,'This'}|[{'var',71,'PropagationLevel'}]]}|[{'atom',71,'ok'}]]}|[[{'type',72,'constraint',[{'atom',72,'is_subtype'}|[[{'var',72,'This'}|[{'type',72,'wxEvent',[]}]]]]}|[{'type',72,'constraint',[{'atom',72,'is_subtype'}|[[{'var',72,'PropagationLevel'}|[{'type',72,'integer',[]}]]]]}]]]]}]}],
		%% Line 80
		'spec' =
		    %% Line 80
		    [{{'shouldPropagate',1},[{'type',80,'bounded_fun',[{'type',80,'fun',[{'type',80,'product',[{'var',80,'This'}]}|[{'type',80,'boolean',[]}]]}|[[{'type',81,'constraint',[{'atom',81,'is_subtype'}|[[{'var',81,'This'}|[{'type',81,'wxEvent',[]}]]]]}]]]}]}],
		%% Line 88
		'spec' =
		    %% Line 88
		    [{{'skip',1},[{'type',88,'bounded_fun',[{'type',88,'fun',[{'type',88,'product',[{'var',88,'This'}]}|[{'atom',88,'ok'}]]}|[[{'type',89,'constraint',[{'atom',89,'is_subtype'}|[[{'var',89,'This'}|[{'type',89,'wxEvent',[]}]]]]}]]]}]}],
		%% Line 96
		'spec' =
		    %% Line 96
		    [{{'skip',2},[{'type',96,'bounded_fun',[{'type',96,'fun',[{'type',96,'product',[{'var',96,'This'}|[{'type',96,'list',[{'var',96,'Option'}]}]]}|[{'atom',96,'ok'}]]}|[[{'type',97,'constraint',[{'atom',97,'is_subtype'}|[[{'var',97,'This'}|[{'type',97,'wxEvent',[]}]]]]}|[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'Option'}|[{'type',98,'tuple',[{'atom',98,'skip'}|[{'type',98,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 109
		'spec' =
		    %% Line 109
		    [{{'stopPropagation',1},[{'type',109,'bounded_fun',[{'type',109,'fun',[{'type',109,'product',[{'var',109,'This'}]}|[{'type',109,'integer',[]}]]}|[[{'type',110,'constraint',[{'atom',110,'is_subtype'}|[[{'var',110,'This'}|[{'type',110,'wxEvent',[]}]]]]}]]]}]}]]
'parent_class'/1 =
    %% Line 35
    fun (_cor0) ->
	call 'erlang':'error'
	    ({'badtype','wxEvent'})
'getId'/1 =
    %% Line 41
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 42
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 44
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 43
		      call 'wxe_util':'call'
			  (2702, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getId',1}}] )
	    -| ['compiler_generated'] )
	end
'getSkipped'/1 =
    %% Line 49
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 50
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 52
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 51
		      call 'wxe_util':'call'
			  (2703, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getSkipped',1}}] )
	    -| ['compiler_generated'] )
	end
'getTimestamp'/1 =
    %% Line 57
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 58
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 60
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 59
		      call 'wxe_util':'call'
			  (2704, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getTimestamp',1}}] )
	    -| ['compiler_generated'] )
	end
'isCommandEvent'/1 =
    %% Line 65
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 66
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 68
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 67
		      call 'wxe_util':'call'
			  (2705, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isCommandEvent',1}}] )
	    -| ['compiler_generated'] )
	end
'resumePropagation'/2 =
    %% Line 73
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},PropagationLevel>
	      when %% Line 74
		call 'erlang':'is_integer'
		    (PropagationLevel) ->
	      do  %% Line 75
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 77
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<PropagationLevel>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 76
		      call 'wxe_util':'cast'
			  (2706, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'resumePropagation',2}}] )
	    -| ['compiler_generated'] )
	end
'shouldPropagate'/1 =
    %% Line 82
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 83
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 85
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 84
		      call 'wxe_util':'call'
			  (2707, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'shouldPropagate',1}}] )
	    -| ['compiler_generated'] )
	end
'skip'/1 =
    %% Line 91
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 92
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 93
	      apply 'skip'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'skip',1}}] )
	    -| ['compiler_generated'] )
	end
'skip'/2 =
    %% Line 99
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 100
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 101
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 102
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'skip',Skip},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Skip)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 103
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-skip/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 104
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 104
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 106
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 105
				  call 'wxe_util':'cast'
				      (2708, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'skip',2}}] )
	    -| ['compiler_generated'] )
	end
'stopPropagation'/1 =
    %% Line 111
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 112
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxEvent') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxEvent')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 114
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 113
		      call 'wxe_util':'call'
			  (2709, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'stopPropagation',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxEvent')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxEvent', _cor0)
end