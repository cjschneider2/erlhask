module 'wxTopLevelWindow' ['cacheBestSize'/2,
			   'captureMouse'/1,
			   'center'/1,
			   'center'/2,
			   'centerOnParent'/1,
			   'centerOnParent'/2,
			   'centerOnScreen'/1,
			   'centerOnScreen'/2,
			   'centre'/1,
			   'centre'/2,
			   'centreOnParent'/1,
			   'centreOnParent'/2,
			   'centreOnScreen'/1,
			   'centreOnScreen'/2,
			   'clearBackground'/1,
			   'clientToScreen'/2,
			   'clientToScreen'/3,
			   'close'/1,
			   'close'/2,
			   'connect'/2,
			   'connect'/3,
			   'convertDialogToPixels'/2,
			   'convertPixelsToDialog'/2,
			   'destroyChildren'/1,
			   'disable'/1,
			   'disconnect'/1,
			   'disconnect'/2,
			   'disconnect'/3,
			   'enable'/1,
			   'enable'/2,
			   'findWindow'/2,
			   'fit'/1,
			   'fitInside'/1,
			   'freeze'/1,
			   'getAcceleratorTable'/1,
			   'getBackgroundColour'/1,
			   'getBackgroundStyle'/1,
			   'getBestSize'/1,
			   'getCaret'/1,
			   'getCharHeight'/1,
			   'getCharWidth'/1,
			   'getChildren'/1,
			   'getClientSize'/1,
			   'getContainingSizer'/1,
			   'getCursor'/1,
			   'getDropTarget'/1,
			   'getEventHandler'/1,
			   'getExtraStyle'/1,
			   'getFont'/1,
			   'getForegroundColour'/1,
			   'getGrandParent'/1,
			   'getHandle'/1,
			   'getHelpText'/1,
			   'getIcon'/1,
			   'getIcons'/1,
			   'getId'/1,
			   'getLabel'/1,
			   'getMaxSize'/1,
			   'getMinSize'/1,
			   'getName'/1,
			   'getParent'/1,
			   'getPosition'/1,
			   'getRect'/1,
			   'getScreenPosition'/1,
			   'getScreenRect'/1,
			   'getScrollPos'/2,
			   'getScrollRange'/2,
			   'getScrollThumb'/2,
			   'getSize'/1,
			   'getSizer'/1,
			   'getTextExtent'/2,
			   'getTextExtent'/3,
			   'getTitle'/1,
			   'getToolTip'/1,
			   'getUpdateRegion'/1,
			   'getVirtualSize'/1,
			   'getWindowStyleFlag'/1,
			   'getWindowVariant'/1,
			   'hasCapture'/1,
			   'hasScrollbar'/2,
			   'hasTransparentBackground'/1,
			   'hide'/1,
			   'iconize'/1,
			   'iconize'/2,
			   'inheritAttributes'/1,
			   'initDialog'/1,
			   'invalidateBestSize'/1,
			   'isActive'/1,
			   'isEnabled'/1,
			   'isExposed'/2,
			   'isExposed'/3,
			   'isExposed'/5,
			   'isFullScreen'/1,
			   'isIconized'/1,
			   'isMaximized'/1,
			   'isRetained'/1,
			   'isShown'/1,
			   'isTopLevel'/1,
			   'layout'/1,
			   'lineDown'/1,
			   'lineUp'/1,
			   'lower'/1,
			   'makeModal'/1,
			   'makeModal'/2,
			   'maximize'/1,
			   'maximize'/2,
			   'module_info'/0,
			   'module_info'/1,
			   'move'/2,
			   'move'/3,
			   'move'/4,
			   'moveAfterInTabOrder'/2,
			   'moveBeforeInTabOrder'/2,
			   'navigate'/1,
			   'navigate'/2,
			   'pageDown'/1,
			   'pageUp'/1,
			   'parent_class'/1,
			   'popEventHandler'/1,
			   'popEventHandler'/2,
			   'popupMenu'/2,
			   'popupMenu'/3,
			   'popupMenu'/4,
			   'raise'/1,
			   'refresh'/1,
			   'refresh'/2,
			   'refreshRect'/2,
			   'refreshRect'/3,
			   'releaseMouse'/1,
			   'removeChild'/2,
			   'reparent'/2,
			   'requestUserAttention'/1,
			   'requestUserAttention'/2,
			   'screenToClient'/1,
			   'screenToClient'/2,
			   'scrollLines'/2,
			   'scrollPages'/2,
			   'scrollWindow'/3,
			   'scrollWindow'/4,
			   'setAcceleratorTable'/2,
			   'setAutoLayout'/2,
			   'setBackgroundColour'/2,
			   'setBackgroundStyle'/2,
			   'setCaret'/2,
			   'setClientSize'/2,
			   'setClientSize'/3,
			   'setContainingSizer'/2,
			   'setCursor'/2,
			   'setDropTarget'/2,
			   'setExtraStyle'/2,
			   'setFocus'/1,
			   'setFocusFromKbd'/1,
			   'setFont'/2,
			   'setForegroundColour'/2,
			   'setHelpText'/2,
			   'setIcon'/2,
			   'setIcons'/2,
			   'setId'/2,
			   'setLabel'/2,
			   'setMaxSize'/2,
			   'setMinSize'/2,
			   'setName'/2,
			   'setOwnBackgroundColour'/2,
			   'setOwnFont'/2,
			   'setOwnForegroundColour'/2,
			   'setPalette'/2,
			   'setScrollPos'/3,
			   'setScrollPos'/4,
			   'setScrollbar'/5,
			   'setScrollbar'/6,
			   'setShape'/2,
			   'setSize'/2,
			   'setSize'/3,
			   'setSize'/5,
			   'setSize'/6,
			   'setSizeHints'/2,
			   'setSizeHints'/3,
			   'setSizeHints'/4,
			   'setSizer'/2,
			   'setSizer'/3,
			   'setSizerAndFit'/2,
			   'setSizerAndFit'/3,
			   'setThemeEnabled'/2,
			   'setTitle'/2,
			   'setToolTip'/2,
			   'setVirtualSize'/2,
			   'setVirtualSize'/3,
			   'setVirtualSizeHints'/2,
			   'setVirtualSizeHints'/3,
			   'setVirtualSizeHints'/4,
			   'setWindowStyle'/2,
			   'setWindowStyleFlag'/2,
			   'setWindowVariant'/2,
			   'shouldInheritColours'/1,
			   'show'/1,
			   'show'/2,
			   'showFullScreen'/2,
			   'showFullScreen'/3,
			   'thaw'/1,
			   'transferDataFromWindow'/1,
			   'transferDataToWindow'/1,
			   'update'/1,
			   'updateWindowUI'/1,
			   'updateWindowUI'/2,
			   'validate'/1,
			   'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 75
		'export_type' =
		    %% Line 75
		    [{'wxTopLevelWindow',0}],
		%% Line 81
		'type' =
		    %% Line 81
		    [{'wxTopLevelWindow',{'remote_type',81,[{'atom',81,'wx'}|[{'atom',81,'wx_object'}|[[]]]]},[]}],
		%% Line 83
		'spec' =
		    %% Line 83
		    [{{'getIcon',1},[{'type',83,'bounded_fun',[{'type',83,'fun',[{'type',83,'product',[{'var',83,'This'}]}|[{'remote_type',83,[{'atom',83,'wxIcon'}|[{'atom',83,'wxIcon'}|[[]]]]}]]}|[[{'type',84,'constraint',[{'atom',84,'is_subtype'}|[[{'var',84,'This'}|[{'type',84,'wxTopLevelWindow',[]}]]]]}]]]}]}],
		%% Line 91
		'spec' =
		    %% Line 91
		    [{{'getIcons',1},[{'type',91,'bounded_fun',[{'type',91,'fun',[{'type',91,'product',[{'var',91,'This'}]}|[{'remote_type',91,[{'atom',91,'wxIconBundle'}|[{'atom',91,'wxIconBundle'}|[[]]]]}]]}|[[{'type',92,'constraint',[{'atom',92,'is_subtype'}|[[{'var',92,'This'}|[{'type',92,'wxTopLevelWindow',[]}]]]]}]]]}]}],
		%% Line 99
		'spec' =
		    %% Line 99
		    [{{'getTitle',1},[{'type',99,'bounded_fun',[{'type',99,'fun',[{'type',99,'product',[{'var',99,'This'}]}|[{'remote_type',99,[{'atom',99,'unicode'}|[{'atom',99,'charlist'}|[[]]]]}]]}|[[{'type',100,'constraint',[{'atom',100,'is_subtype'}|[[{'var',100,'This'}|[{'type',100,'wxTopLevelWindow',[]}]]]]}]]]}]}],
		%% Line 107
		'spec' =
		    %% Line 107
		    [{{'isActive',1},[{'type',107,'bounded_fun',[{'type',107,'fun',[{'type',107,'product',[{'var',107,'This'}]}|[{'type',107,'boolean',[]}]]}|[[{'type',108,'constraint',[{'atom',108,'is_subtype'}|[[{'var',108,'This'}|[{'type',108,'wxTopLevelWindow',[]}]]]]}]]]}]}],
		%% Line 115
		'spec' =
		    %% Line 115
		    [{{'iconize',1},[{'type',115,'bounded_fun',[{'type',115,'fun',[{'type',115,'product',[{'var',115,'This'}]}|[{'atom',115,'ok'}]]}|[[{'type',116,'constraint',[{'atom',116,'is_subtype'}|[[{'var',116,'This'}|[{'type',116,'wxTopLevelWindow',[]}]]]]}]]]}]}],
		%% Line 123
		'spec' =
		    %% Line 123
		    [{{'iconize',2},[{'type',123,'bounded_fun',[{'type',123,'fun',[{'type',123,'product',[{'var',123,'This'}|[{'type',123,'list',[{'var',123,'Option'}]}]]}|[{'atom',123,'ok'}]]}|[[{'type',124,'constraint',[{'atom',124,'is_subtype'}|[[{'var',124,'This'}|[{'type',124,'wxTopLevelWindow',[]}]]]]}|[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'Option'}|[{'type',125,'tuple',[{'atom',125,'iconize'}|[{'type',125,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 136
		'spec' =
		    %% Line 136
		    [{{'isFullScreen',1},[{'type',136,'bounded_fun',[{'type',136,'fun',[{'type',136,'product',[{'var',136,'This'}]}|[{'type',136,'boolean',[]}]]}|[[{'type',137,'constraint',[{'atom',137,'is_subtype'}|[[{'var',137,'This'}|[{'type',137,'wxTopLevelWindow',[]}]]]]}]]]}]}],
		%% Line 144
		'spec' =
		    %% Line 144
		    [{{'isIconized',1},[{'type',144,'bounded_fun',[{'type',144,'fun',[{'type',144,'product',[{'var',144,'This'}]}|[{'type',144,'boolean',[]}]]}|[[{'type',145,'constraint',[{'atom',145,'is_subtype'}|[[{'var',145,'This'}|[{'type',145,'wxTopLevelWindow',[]}]]]]}]]]}]}],
		%% Line 152
		'spec' =
		    %% Line 152
		    [{{'isMaximized',1},[{'type',152,'bounded_fun',[{'type',152,'fun',[{'type',152,'product',[{'var',152,'This'}]}|[{'type',152,'boolean',[]}]]}|[[{'type',153,'constraint',[{'atom',153,'is_subtype'}|[[{'var',153,'This'}|[{'type',153,'wxTopLevelWindow',[]}]]]]}]]]}]}],
		%% Line 160
		'spec' =
		    %% Line 160
		    [{{'maximize',1},[{'type',160,'bounded_fun',[{'type',160,'fun',[{'type',160,'product',[{'var',160,'This'}]}|[{'atom',160,'ok'}]]}|[[{'type',161,'constraint',[{'atom',161,'is_subtype'}|[[{'var',161,'This'}|[{'type',161,'wxTopLevelWindow',[]}]]]]}]]]}]}],
		%% Line 168
		'spec' =
		    %% Line 168
		    [{{'maximize',2},[{'type',168,'bounded_fun',[{'type',168,'fun',[{'type',168,'product',[{'var',168,'This'}|[{'type',168,'list',[{'var',168,'Option'}]}]]}|[{'atom',168,'ok'}]]}|[[{'type',169,'constraint',[{'atom',169,'is_subtype'}|[[{'var',169,'This'}|[{'type',169,'wxTopLevelWindow',[]}]]]]}|[{'type',170,'constraint',[{'atom',170,'is_subtype'}|[[{'var',170,'Option'}|[{'type',170,'tuple',[{'atom',170,'maximize'}|[{'type',170,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 181
		'spec' =
		    %% Line 181
		    [{{'requestUserAttention',1},[{'type',181,'bounded_fun',[{'type',181,'fun',[{'type',181,'product',[{'var',181,'This'}]}|[{'atom',181,'ok'}]]}|[[{'type',182,'constraint',[{'atom',182,'is_subtype'}|[[{'var',182,'This'}|[{'type',182,'wxTopLevelWindow',[]}]]]]}]]]}]}],
		%% Line 189
		'spec' =
		    %% Line 189
		    [{{'requestUserAttention',2},[{'type',189,'bounded_fun',[{'type',189,'fun',[{'type',189,'product',[{'var',189,'This'}|[{'type',189,'list',[{'var',189,'Option'}]}]]}|[{'atom',189,'ok'}]]}|[[{'type',190,'constraint',[{'atom',190,'is_subtype'}|[[{'var',190,'This'}|[{'type',190,'wxTopLevelWindow',[]}]]]]}|[{'type',191,'constraint',[{'atom',191,'is_subtype'}|[[{'var',191,'Option'}|[{'type',191,'tuple',[{'atom',191,'flags'}|[{'type',191,'integer',[]}]]}]]]]}]]]]}]}],
		%% Line 202
		'spec' =
		    %% Line 202
		    [{{'setIcon',2},[{'type',202,'bounded_fun',[{'type',202,'fun',[{'type',202,'product',[{'var',202,'This'}|[{'var',202,'Icon'}]]}|[{'atom',202,'ok'}]]}|[[{'type',203,'constraint',[{'atom',203,'is_subtype'}|[[{'var',203,'This'}|[{'type',203,'wxTopLevelWindow',[]}]]]]}|[{'type',203,'constraint',[{'atom',203,'is_subtype'}|[[{'var',203,'Icon'}|[{'remote_type',203,[{'atom',203,'wxIcon'}|[{'atom',203,'wxIcon'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 211
		'spec' =
		    %% Line 211
		    [{{'setIcons',2},[{'type',211,'bounded_fun',[{'type',211,'fun',[{'type',211,'product',[{'var',211,'This'}|[{'var',211,'Icons'}]]}|[{'atom',211,'ok'}]]}|[[{'type',212,'constraint',[{'atom',212,'is_subtype'}|[[{'var',212,'This'}|[{'type',212,'wxTopLevelWindow',[]}]]]]}|[{'type',212,'constraint',[{'atom',212,'is_subtype'}|[[{'var',212,'Icons'}|[{'remote_type',212,[{'atom',212,'wxIconBundle'}|[{'atom',212,'wxIconBundle'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 220
		'spec' =
		    %% Line 220
		    [{{'centerOnScreen',1},[{'type',220,'bounded_fun',[{'type',220,'fun',[{'type',220,'product',[{'var',220,'This'}]}|[{'atom',220,'ok'}]]}|[[{'type',221,'constraint',[{'atom',221,'is_subtype'}|[[{'var',221,'This'}|[{'type',221,'wxTopLevelWindow',[]}]]]]}]]]}]}],
		%% Line 228
		'spec' =
		    %% Line 228
		    [{{'centerOnScreen',2},[{'type',228,'bounded_fun',[{'type',228,'fun',[{'type',228,'product',[{'var',228,'This'}|[{'type',228,'list',[{'var',228,'Option'}]}]]}|[{'atom',228,'ok'}]]}|[[{'type',229,'constraint',[{'atom',229,'is_subtype'}|[[{'var',229,'This'}|[{'type',229,'wxTopLevelWindow',[]}]]]]}|[{'type',230,'constraint',[{'atom',230,'is_subtype'}|[[{'var',230,'Option'}|[{'type',230,'tuple',[{'atom',230,'dir'}|[{'type',230,'integer',[]}]]}]]]]}]]]]}]}],
		%% Line 241
		'spec' =
		    %% Line 241
		    [{{'centreOnScreen',1},[{'type',241,'bounded_fun',[{'type',241,'fun',[{'type',241,'product',[{'var',241,'This'}]}|[{'atom',241,'ok'}]]}|[[{'type',242,'constraint',[{'atom',242,'is_subtype'}|[[{'var',242,'This'}|[{'type',242,'wxTopLevelWindow',[]}]]]]}]]]}]}],
		%% Line 249
		'spec' =
		    %% Line 249
		    [{{'centreOnScreen',2},[{'type',249,'bounded_fun',[{'type',249,'fun',[{'type',249,'product',[{'var',249,'This'}|[{'type',249,'list',[{'var',249,'Option'}]}]]}|[{'atom',249,'ok'}]]}|[[{'type',250,'constraint',[{'atom',250,'is_subtype'}|[[{'var',250,'This'}|[{'type',250,'wxTopLevelWindow',[]}]]]]}|[{'type',251,'constraint',[{'atom',251,'is_subtype'}|[[{'var',251,'Option'}|[{'type',251,'tuple',[{'atom',251,'dir'}|[{'type',251,'integer',[]}]]}]]]]}]]]]}]}],
		%% Line 262
		'spec' =
		    %% Line 262
		    [{{'setShape',2},[{'type',262,'bounded_fun',[{'type',262,'fun',[{'type',262,'product',[{'var',262,'This'}|[{'var',262,'Region'}]]}|[{'type',262,'boolean',[]}]]}|[[{'type',263,'constraint',[{'atom',263,'is_subtype'}|[[{'var',263,'This'}|[{'type',263,'wxTopLevelWindow',[]}]]]]}|[{'type',263,'constraint',[{'atom',263,'is_subtype'}|[[{'var',263,'Region'}|[{'remote_type',263,[{'atom',263,'wxRegion'}|[{'atom',263,'wxRegion'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 271
		'spec' =
		    %% Line 271
		    [{{'setTitle',2},[{'type',271,'bounded_fun',[{'type',271,'fun',[{'type',271,'product',[{'var',271,'This'}|[{'var',271,'Title'}]]}|[{'atom',271,'ok'}]]}|[[{'type',272,'constraint',[{'atom',272,'is_subtype'}|[[{'var',272,'This'}|[{'type',272,'wxTopLevelWindow',[]}]]]]}|[{'type',272,'constraint',[{'atom',272,'is_subtype'}|[[{'var',272,'Title'}|[{'remote_type',272,[{'atom',272,'unicode'}|[{'atom',272,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 281
		'spec' =
		    %% Line 281
		    [{{'showFullScreen',2},[{'type',281,'bounded_fun',[{'type',281,'fun',[{'type',281,'product',[{'var',281,'This'}|[{'var',281,'Show'}]]}|[{'type',281,'boolean',[]}]]}|[[{'type',282,'constraint',[{'atom',282,'is_subtype'}|[[{'var',282,'This'}|[{'type',282,'wxTopLevelWindow',[]}]]]]}|[{'type',282,'constraint',[{'atom',282,'is_subtype'}|[[{'var',282,'Show'}|[{'type',282,'boolean',[]}]]]]}]]]]}]}],
		%% Line 289
		'spec' =
		    %% Line 289
		    [{{'showFullScreen',3},[{'type',289,'bounded_fun',[{'type',289,'fun',[{'type',289,'product',[{'var',289,'This'}|[{'var',289,'Show'}|[{'type',289,'list',[{'var',289,'Option'}]}]]]}|[{'type',289,'boolean',[]}]]}|[[{'type',290,'constraint',[{'atom',290,'is_subtype'}|[[{'var',290,'This'}|[{'type',290,'wxTopLevelWindow',[]}]]]]}|[{'type',290,'constraint',[{'atom',290,'is_subtype'}|[[{'var',290,'Show'}|[{'type',290,'boolean',[]}]]]]}|[{'type',291,'constraint',[{'atom',291,'is_subtype'}|[[{'var',291,'Option'}|[{'type',291,'tuple',[{'atom',291,'style'}|[{'type',291,'integer',[]}]]}]]]]}]]]]]}]}]]
'parent_class'/1 =
    %% Line 77
    fun (_cor0) ->
	case _cor0 of
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 78
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 79
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxTopLevelWindow'})
	end
'getIcon'/1 =
    %% Line 85
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 86
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 88
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 87
		      call 'wxe_util':'call'
			  (284, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getIcon',1}}] )
	    -| ['compiler_generated'] )
	end
'getIcons'/1 =
    %% Line 93
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 94
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 96
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 95
		      call 'wxe_util':'call'
			  (285, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getIcons',1}}] )
	    -| ['compiler_generated'] )
	end
'getTitle'/1 =
    %% Line 101
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 102
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 104
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 103
		      call 'wxe_util':'call'
			  (286, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getTitle',1}}] )
	    -| ['compiler_generated'] )
	end
'isActive'/1 =
    %% Line 109
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 110
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 112
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 111
		      call 'wxe_util':'call'
			  (287, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isActive',1}}] )
	    -| ['compiler_generated'] )
	end
'iconize'/1 =
    %% Line 118
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 119
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 120
	      apply 'iconize'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'iconize',1}}] )
	    -| ['compiler_generated'] )
	end
'iconize'/2 =
    %% Line 126
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 127
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 128
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 129
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'iconize',Iconize},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Iconize)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 130
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-iconize/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 131
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 131
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 133
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 132
				  call 'wxe_util':'cast'
				      (288, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'iconize',2}}] )
	    -| ['compiler_generated'] )
	end
'isFullScreen'/1 =
    %% Line 138
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 139
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 141
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 140
		      call 'wxe_util':'call'
			  (289, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isFullScreen',1}}] )
	    -| ['compiler_generated'] )
	end
'isIconized'/1 =
    %% Line 146
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 147
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 149
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 148
		      call 'wxe_util':'call'
			  (290, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isIconized',1}}] )
	    -| ['compiler_generated'] )
	end
'isMaximized'/1 =
    %% Line 154
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 155
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 157
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 156
		      call 'wxe_util':'call'
			  (291, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isMaximized',1}}] )
	    -| ['compiler_generated'] )
	end
'maximize'/1 =
    %% Line 163
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 164
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 165
	      apply 'maximize'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'maximize',1}}] )
	    -| ['compiler_generated'] )
	end
'maximize'/2 =
    %% Line 171
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 172
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 173
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 174
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'maximize',Maximize},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Maximize)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 175
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-maximize/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 176
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 176
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 178
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 177
				  call 'wxe_util':'cast'
				      (292, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'maximize',2}}] )
	    -| ['compiler_generated'] )
	end
'requestUserAttention'/1 =
    %% Line 184
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 185
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 186
	      apply 'requestUserAttention'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'requestUserAttention',1}}] )
	    -| ['compiler_generated'] )
	end
'requestUserAttention'/2 =
    %% Line 192
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor15},Options>
	      when %% Line 193
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 194
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 195
		      ( fun (_cor6,_cor5) ->
			    case <_cor6,_cor5> of
			      <{'flags',Flags},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<Flags>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 196
			      <BadOpt,_cor16> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-requestUserAttention/2-fun-0-'}}] )
		  in  let <_cor10> =
			  %% Line 197
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 197
			      call 'erlang':'list_to_binary'
				  (_cor10)
			  in  let <_cor12> =
				  %% Line 199
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 198
				  call 'wxe_util':'cast'
				      (293, _cor12)
	  ( <_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13})
		  -| [{'function_name',{'requestUserAttention',2}}] )
	    -| ['compiler_generated'] )
	end
'setIcon'/2 =
    %% Line 204
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',IconRef,IconT,_cor10}> when 'true' ->
	      do  %% Line 205
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 206
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (IconT,
				       'wxIcon') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call IconT:'parent_class'
				    ('wxIcon')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 208
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<IconRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 207
			  call 'wxe_util':'cast'
			      (294, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setIcon',2}}] )
	    -| ['compiler_generated'] )
	end
'setIcons'/2 =
    %% Line 213
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',IconsRef,IconsT,_cor10}> when 'true' ->
	      do  %% Line 214
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 215
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (IconsT,
				       'wxIconBundle') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call IconsT:'parent_class'
				    ('wxIconBundle')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 217
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<IconsRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 216
			  call 'wxe_util':'cast'
			      (295, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setIcons',2}}] )
	    -| ['compiler_generated'] )
	end
'centerOnScreen'/1 =
    %% Line 223
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 224
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 225
	      apply 'centerOnScreen'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'centerOnScreen',1}}] )
	    -| ['compiler_generated'] )
	end
'centerOnScreen'/2 =
    %% Line 231
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor15},Options>
	      when %% Line 232
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 233
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 234
		      ( fun (_cor6,_cor5) ->
			    case <_cor6,_cor5> of
			      <{'dir',Dir},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<Dir>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 235
			      <BadOpt,_cor16> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-centerOnScreen/2-fun-0-'}}] )
		  in  let <_cor10> =
			  %% Line 236
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 236
			      call 'erlang':'list_to_binary'
				  (_cor10)
			  in  let <_cor12> =
				  %% Line 238
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 237
				  call 'wxe_util':'cast'
				      (296, _cor12)
	  ( <_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13})
		  -| [{'function_name',{'centerOnScreen',2}}] )
	    -| ['compiler_generated'] )
	end
'centreOnScreen'/1 =
    %% Line 244
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 245
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 246
	      apply 'centreOnScreen'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'centreOnScreen',1}}] )
	    -| ['compiler_generated'] )
	end
'centreOnScreen'/2 =
    %% Line 252
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor15},Options>
	      when %% Line 253
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 254
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 255
		      ( fun (_cor6,_cor5) ->
			    case <_cor6,_cor5> of
			      <{'dir',Dir},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<Dir>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 256
			      <BadOpt,_cor16> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-centreOnScreen/2-fun-0-'}}] )
		  in  let <_cor10> =
			  %% Line 257
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 257
			      call 'erlang':'list_to_binary'
				  (_cor10)
			  in  let <_cor12> =
				  %% Line 259
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 258
				  call 'wxe_util':'cast'
				      (297, _cor12)
	  ( <_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13})
		  -| [{'function_name',{'centreOnScreen',2}}] )
	    -| ['compiler_generated'] )
	end
'setShape'/2 =
    %% Line 264
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',RegionRef,RegionT,_cor10}> when 'true' ->
	      do  %% Line 265
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 266
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (RegionT,
				       'wxRegion') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call RegionT:'parent_class'
				    ('wxRegion')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 268
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<RegionRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 267
			  call 'wxe_util':'call'
			      (299, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setShape',2}}] )
	    -| ['compiler_generated'] )
	end
'setTitle'/2 =
    %% Line 273
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Title>
	      when %% Line 274
		call 'erlang':'is_list'
		    (Title) ->
	      do  %% Line 275
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Title_UC> =
		      %% Line 276
		      call 'unicode':'characters_to_binary'
			  ([Title|[0]])
		  in  let <_cor10> =
			  %% Line 278
			  call 'erlang':'byte_size'
			      (Title_UC)
		      in  let <_cor5> =
			      %% Line 278
			      call 'erlang':'byte_size'
				  (Title_UC)
			  in  let <_cor6> =
				  %% Line 278
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 278
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 278
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 278
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 278
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Title_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 277
						  call 'wxe_util':'cast'
						      (300, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setTitle',2}}] )
	    -| ['compiler_generated'] )
	end
'showFullScreen'/2 =
    %% Line 284
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <This = {'wx_ref',_cor5,_cor6,_cor7},Show>
	      when %% Line 285
		call 'erlang':'is_boolean'
		    (Show) ->
	      %% Line 286
	      apply 'showFullScreen'/3
		  (This, Show, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'showFullScreen',2}}] )
	    -| ['compiler_generated'] )
	end
'showFullScreen'/3 =
    %% Line 292
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor20},Show,Options>
	      when let <_cor3> =
		    %% Line 293
		    call 'erlang':'is_boolean'
			(Show)
		in  let <_cor4> =
			%% Line 293
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 293
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 294
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxTopLevelWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxTopLevelWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 295
		      ( fun (_cor9,_cor8) ->
			    case <_cor9,_cor8> of
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor7> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor7|Acc]
			      %% Line 296
			      <BadOpt,_cor21> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-showFullScreen/3-fun-0-'}}] )
		  in  let <_cor13> =
			  %% Line 297
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 297
			      call 'erlang':'list_to_binary'
				  (_cor13)
			  in  let <_cor15> =
				  %% Line 299
				  call 'wxe_util':'from_bool'
				      (Show)
			      in  let <_cor16> =
				      %% Line 299
				      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
					#<_cor15>(32,1,'integer',['unsigned'|['native']]),
					#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				  in  %% Line 298
				      call 'wxe_util':'call'
					  (301, _cor16)
	  ( <_cor19,_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17})
		  -| [{'function_name',{'showFullScreen',3}}] )
	    -| ['compiler_generated'] )
	end
'warpPointer'/3 =
    %% Line 303
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 305
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 307
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 309
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 311
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 313
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 315
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 317
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 319
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 321
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 323
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 325
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 327
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 329
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 331
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 333
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 335
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 337
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 339
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 341
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 343
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 345
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 347
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 349
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 351
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 353
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 355
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 357
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 359
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 361
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 363
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 365
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 367
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 369
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 371
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 373
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 375
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 377
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setLabel'/2 =
    %% Line 379
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setLabel'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 381
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 383
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 385
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 387
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 389
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 391
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 393
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 395
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 397
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 399
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 401
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 403
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 405
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 407
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 409
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 411
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 413
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 415
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 417
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 419
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 421
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 423
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 425
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 427
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 429
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 431
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 433
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 435
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 437
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 439
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 441
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 443
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 445
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 447
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 449
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 451
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 453
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 455
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 457
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 459
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 461
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 463
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 465
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 467
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 469
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 471
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 473
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 475
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 477
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 479
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 481
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 483
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 485
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 487
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 489
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 491
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 493
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 495
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 497
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 499
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 501
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 503
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 505
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 507
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 509
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 511
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 513
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 515
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 517
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 519
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 521
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 523
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 525
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 527
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 529
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 531
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 533
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 535
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 537
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 539
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 541
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 543
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 545
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 547
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 549
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 551
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 553
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 555
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 557
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 559
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getLabel'/1 =
    %% Line 561
    fun (_cor0) ->
	call 'wxWindow':'getLabel'
	    (_cor0)
'getId'/1 =
    %% Line 563
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 565
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 567
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 569
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 571
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 573
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 575
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 577
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 579
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 581
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 583
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 585
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 587
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 589
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 591
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 593
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 595
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 597
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 599
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 601
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 603
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 605
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 607
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 609
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 611
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 613
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 615
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 617
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 619
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 621
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 623
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 625
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 627
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 629
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 631
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 633
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 635
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 637
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 639
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 641
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 643
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 645
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 647
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 649
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 651
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 654
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 656
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 658
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 660
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 662
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxTopLevelWindow')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxTopLevelWindow', _cor0)
end