module 'wxCheckListBox' ['append'/2,
			 'append'/3,
			 'appendStrings'/2,
			 'cacheBestSize'/2,
			 'captureMouse'/1,
			 'center'/1,
			 'center'/2,
			 'centerOnParent'/1,
			 'centerOnParent'/2,
			 'centre'/1,
			 'centre'/2,
			 'centreOnParent'/1,
			 'centreOnParent'/2,
			 'check'/2,
			 'check'/3,
			 'clear'/1,
			 'clearBackground'/1,
			 'clientToScreen'/2,
			 'clientToScreen'/3,
			 'close'/1,
			 'close'/2,
			 'connect'/2,
			 'connect'/3,
			 'convertDialogToPixels'/2,
			 'convertPixelsToDialog'/2,
			 'delete'/2,
			 'deselect'/2,
			 'destroy'/1,
			 'destroyChildren'/1,
			 'disable'/1,
			 'disconnect'/1,
			 'disconnect'/2,
			 'disconnect'/3,
			 'enable'/1,
			 'enable'/2,
			 'findString'/2,
			 'findString'/3,
			 'findWindow'/2,
			 'fit'/1,
			 'fitInside'/1,
			 'freeze'/1,
			 'getAcceleratorTable'/1,
			 'getBackgroundColour'/1,
			 'getBackgroundStyle'/1,
			 'getBestSize'/1,
			 'getCaret'/1,
			 'getCharHeight'/1,
			 'getCharWidth'/1,
			 'getChildren'/1,
			 'getClientData'/2,
			 'getClientSize'/1,
			 'getContainingSizer'/1,
			 'getCount'/1,
			 'getCursor'/1,
			 'getDropTarget'/1,
			 'getEventHandler'/1,
			 'getExtraStyle'/1,
			 'getFont'/1,
			 'getForegroundColour'/1,
			 'getGrandParent'/1,
			 'getHandle'/1,
			 'getHelpText'/1,
			 'getId'/1,
			 'getLabel'/1,
			 'getMaxSize'/1,
			 'getMinSize'/1,
			 'getName'/1,
			 'getParent'/1,
			 'getPosition'/1,
			 'getRect'/1,
			 'getScreenPosition'/1,
			 'getScreenRect'/1,
			 'getScrollPos'/2,
			 'getScrollRange'/2,
			 'getScrollThumb'/2,
			 'getSelection'/1,
			 'getSelections'/1,
			 'getSize'/1,
			 'getSizer'/1,
			 'getString'/2,
			 'getStringSelection'/1,
			 'getTextExtent'/2,
			 'getTextExtent'/3,
			 'getToolTip'/1,
			 'getUpdateRegion'/1,
			 'getVirtualSize'/1,
			 'getWindowStyleFlag'/1,
			 'getWindowVariant'/1,
			 'hasCapture'/1,
			 'hasScrollbar'/2,
			 'hasTransparentBackground'/1,
			 'hide'/1,
			 'hitTest'/2,
			 'inheritAttributes'/1,
			 'initDialog'/1,
			 'insert'/3,
			 'insert'/4,
			 'insertItems'/3,
			 'invalidateBestSize'/1,
			 'isChecked'/2,
			 'isEmpty'/1,
			 'isEnabled'/1,
			 'isExposed'/2,
			 'isExposed'/3,
			 'isExposed'/5,
			 'isRetained'/1,
			 'isSelected'/2,
			 'isShown'/1,
			 'isTopLevel'/1,
			 'layout'/1,
			 'lineDown'/1,
			 'lineUp'/1,
			 'lower'/1,
			 'makeModal'/1,
			 'makeModal'/2,
			 'module_info'/0,
			 'module_info'/1,
			 'move'/2,
			 'move'/3,
			 'move'/4,
			 'moveAfterInTabOrder'/2,
			 'moveBeforeInTabOrder'/2,
			 'navigate'/1,
			 'navigate'/2,
			 'new'/0,
			 'new'/2,
			 'new'/3,
			 'pageDown'/1,
			 'pageUp'/1,
			 'parent_class'/1,
			 'popEventHandler'/1,
			 'popEventHandler'/2,
			 'popupMenu'/2,
			 'popupMenu'/3,
			 'popupMenu'/4,
			 'raise'/1,
			 'refresh'/1,
			 'refresh'/2,
			 'refreshRect'/2,
			 'refreshRect'/3,
			 'releaseMouse'/1,
			 'removeChild'/2,
			 'reparent'/2,
			 'screenToClient'/1,
			 'screenToClient'/2,
			 'scrollLines'/2,
			 'scrollPages'/2,
			 'scrollWindow'/3,
			 'scrollWindow'/4,
			 'select'/2,
			 'set'/2,
			 'setAcceleratorTable'/2,
			 'setAutoLayout'/2,
			 'setBackgroundColour'/2,
			 'setBackgroundStyle'/2,
			 'setCaret'/2,
			 'setClientData'/3,
			 'setClientSize'/2,
			 'setClientSize'/3,
			 'setContainingSizer'/2,
			 'setCursor'/2,
			 'setDropTarget'/2,
			 'setExtraStyle'/2,
			 'setFirstItem'/2,
			 'setFocus'/1,
			 'setFocusFromKbd'/1,
			 'setFont'/2,
			 'setForegroundColour'/2,
			 'setHelpText'/2,
			 'setId'/2,
			 'setLabel'/2,
			 'setMaxSize'/2,
			 'setMinSize'/2,
			 'setName'/2,
			 'setOwnBackgroundColour'/2,
			 'setOwnFont'/2,
			 'setOwnForegroundColour'/2,
			 'setPalette'/2,
			 'setScrollPos'/3,
			 'setScrollPos'/4,
			 'setScrollbar'/5,
			 'setScrollbar'/6,
			 'setSelection'/2,
			 'setSize'/2,
			 'setSize'/3,
			 'setSize'/5,
			 'setSize'/6,
			 'setSizeHints'/2,
			 'setSizeHints'/3,
			 'setSizeHints'/4,
			 'setSizer'/2,
			 'setSizer'/3,
			 'setSizerAndFit'/2,
			 'setSizerAndFit'/3,
			 'setString'/3,
			 'setStringSelection'/2,
			 'setThemeEnabled'/2,
			 'setToolTip'/2,
			 'setVirtualSize'/2,
			 'setVirtualSize'/3,
			 'setVirtualSizeHints'/2,
			 'setVirtualSizeHints'/3,
			 'setVirtualSizeHints'/4,
			 'setWindowStyle'/2,
			 'setWindowStyleFlag'/2,
			 'setWindowVariant'/2,
			 'shouldInheritColours'/1,
			 'show'/1,
			 'show'/2,
			 'thaw'/1,
			 'transferDataFromWindow'/1,
			 'transferDataToWindow'/1,
			 'update'/1,
			 'updateWindowUI'/1,
			 'updateWindowUI'/2,
			 'validate'/1,
			 'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 78
		'export_type' =
		    %% Line 78
		    [{'wxCheckListBox',0}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{'wxCheckListBox',{'remote_type',87,[{'atom',87,'wx'}|[{'atom',87,'wx_object'}|[[]]]]},[]}],
		%% Line 89
		'spec' =
		    %% Line 89
		    [{{'new',0},[{'type',89,'fun',[{'type',89,'product',[]}|[{'type',89,'wxCheckListBox',[]}]]}]}],
		%% Line 95
		'spec' =
		    %% Line 95
		    [{{'new',2},[{'type',95,'bounded_fun',[{'type',95,'fun',[{'type',95,'product',[{'var',95,'Parent'}|[{'var',95,'Id'}]]}|[{'type',95,'wxCheckListBox',[]}]]}|[[{'type',96,'constraint',[{'atom',96,'is_subtype'}|[[{'var',96,'Parent'}|[{'remote_type',96,[{'atom',96,'wxWindow'}|[{'atom',96,'wxWindow'}|[[]]]]}]]]]}|[{'type',96,'constraint',[{'atom',96,'is_subtype'}|[[{'var',96,'Id'}|[{'type',96,'integer',[]}]]]]}]]]]}]}],
		%% Line 103
		'spec' =
		    %% Line 103
		    [{{'new',3},[{'type',103,'bounded_fun',[{'type',103,'fun',[{'type',103,'product',[{'var',103,'Parent'}|[{'var',103,'Id'}|[{'type',103,'list',[{'var',103,'Option'}]}]]]}|[{'type',103,'wxCheckListBox',[]}]]}|[[{'type',104,'constraint',[{'atom',104,'is_subtype'}|[[{'var',104,'Parent'}|[{'remote_type',104,[{'atom',104,'wxWindow'}|[{'atom',104,'wxWindow'}|[[]]]]}]]]]}|[{'type',104,'constraint',[{'atom',104,'is_subtype'}|[[{'var',104,'Id'}|[{'type',104,'integer',[]}]]]]}|[{'type',105,'constraint',[{'atom',105,'is_subtype'}|[[{'var',105,'Option'}|[{'type',105,'union',[{'type',105,'tuple',[{'atom',105,'pos'}|[{'type',105,'tuple',[{'ann_type',105,[{'var',105,'X'}|[{'type',105,'integer',[]}]]}|[{'ann_type',105,[{'var',105,'Y'}|[{'type',105,'integer',[]}]]}]]}]]}|[{'type',106,'tuple',[{'atom',106,'size'}|[{'type',106,'tuple',[{'ann_type',106,[{'var',106,'W'}|[{'type',106,'integer',[]}]]}|[{'ann_type',106,[{'var',106,'H'}|[{'type',106,'integer',[]}]]}]]}]]}|[{'type',107,'tuple',[{'atom',107,'choices'}|[{'type',107,'list',[{'remote_type',107,[{'atom',107,'unicode'}|[{'atom',107,'chardata'}|[[]]]]}]}]]}|[{'type',108,'tuple',[{'atom',108,'style'}|[{'type',108,'integer',[]}]]}|[{'type',109,'tuple',[{'atom',109,'validator'}|[{'remote_type',109,[{'atom',109,'wx'}|[{'atom',109,'wx_object'}|[[]]]]}]]}]]]]]}]]]]}]]]]]}]}],
		%% Line 124
		'spec' =
		    %% Line 124
		    [{{'check',2},[{'type',124,'bounded_fun',[{'type',124,'fun',[{'type',124,'product',[{'var',124,'This'}|[{'var',124,'Index'}]]}|[{'atom',124,'ok'}]]}|[[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'This'}|[{'type',125,'wxCheckListBox',[]}]]]]}|[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'Index'}|[{'type',125,'integer',[]}]]]]}]]]]}]}],
		%% Line 132
		'spec' =
		    %% Line 132
		    [{{'check',3},[{'type',132,'bounded_fun',[{'type',132,'fun',[{'type',132,'product',[{'var',132,'This'}|[{'var',132,'Index'}|[{'type',132,'list',[{'var',132,'Option'}]}]]]}|[{'atom',132,'ok'}]]}|[[{'type',133,'constraint',[{'atom',133,'is_subtype'}|[[{'var',133,'This'}|[{'type',133,'wxCheckListBox',[]}]]]]}|[{'type',133,'constraint',[{'atom',133,'is_subtype'}|[[{'var',133,'Index'}|[{'type',133,'integer',[]}]]]]}|[{'type',134,'constraint',[{'atom',134,'is_subtype'}|[[{'var',134,'Option'}|[{'type',134,'tuple',[{'atom',134,'check'}|[{'type',134,'boolean',[]}]]}]]]]}]]]]]}]}],
		%% Line 145
		'spec' =
		    %% Line 145
		    [{{'isChecked',2},[{'type',145,'bounded_fun',[{'type',145,'fun',[{'type',145,'product',[{'var',145,'This'}|[{'var',145,'Index'}]]}|[{'type',145,'boolean',[]}]]}|[[{'type',146,'constraint',[{'atom',146,'is_subtype'}|[[{'var',146,'This'}|[{'type',146,'wxCheckListBox',[]}]]]]}|[{'type',146,'constraint',[{'atom',146,'is_subtype'}|[[{'var',146,'Index'}|[{'type',146,'integer',[]}]]]]}]]]]}]}],
		%% Line 154
		'spec' =
		    %% Line 154
		    [{{'destroy',1},[{'type',154,'fun',[{'type',154,'product',[{'ann_type',154,[{'var',154,'This'}|[{'type',154,'wxCheckListBox',[]}]]}]}|[{'atom',154,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 80
    fun (_cor0) ->
	case _cor0 of
	  <'wxListBox'> when 'true' ->
	      'true'
	  %% Line 81
	  <'wxControlWithItems'> when 'true' ->
	      'true'
	  %% Line 82
	  <'wxControl'> when 'true' ->
	      'true'
	  %% Line 83
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 84
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 85
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxCheckListBox'})
	end
'new'/0 =
    %% Line 90
    fun () ->
	%% Line 91
	call 'wxe_util':'construct'
	    (1553, %% Line 92
		   #{}#)
'new'/2 =
    %% Line 98
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor5,_cor6,_cor7},Id>
	      when %% Line 99
		call 'erlang':'is_integer'
		    (Id) ->
	      %% Line 100
	      apply 'new'/3
		  (Parent, Id, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'new'/3 =
    %% Line 110
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor52},Id,Options>
	      when let <_cor3> =
		    %% Line 111
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor4> =
			%% Line 111
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 111
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 112
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 113
		      ( fun (_cor42,_cor41) ->
			    case <_cor42,_cor41> of
			      <{'pos',{PosX,PosY}},Acc> when 'true' ->
				  let <_cor7> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<PosX>(32,1,'integer',['unsigned'|['native']]),
					#<PosY>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor7|Acc]
			      %% Line 114
			      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				  let <_cor8> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<SizeW>(32,1,'integer',['unsigned'|['native']]),
					#<SizeH>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor8|Acc]
			      %% Line 115
			      <{'choices',Choices},Acc> when 'true' ->
				  let <_cor14> =
				      ( letrec
					    'lc$^0'/1 =
						fun (_cor11) ->
						    case _cor11 of
						      <[ChoicesTemp|_cor10]> when 'true' ->
							  let <_cor12> =
							      call 'unicode':'characters_to_binary'
								  ([ChoicesTemp|[0]])
							  in  let <_cor13> =
								  apply 'lc$^0'/1
								      (_cor10)
							      in  ( [_cor12|_cor13]
								    -| ['compiler_generated'] )
						      <[]> when 'true' ->
							  []
						      ( <_cor11> when 'true' ->
							    ( primop 'match_fail'
								  ({'function_clause',_cor11})
							      -| [{'function_name',{'lc$^0',1}}] )
							-| ['compiler_generated'] )
						    end
					in  apply 'lc$^0'/1
						(Choices)
					-| ['list_comprehension'] )
				  in  let <_cor35> =
					  call 'erlang':'length'
					      (_cor14)
				      in  let <_cor28> =
					      primop 'bs_init_writable'
						  (256)
					  in  let <_cor34> =
						  ( letrec
							'lbc$^2'/2 =
							    fun (_cor32,_cor31) ->
								case <_cor32,_cor31> of
								  <[UC_Str|_cor30],_cor31> when 'true' ->
								      let <_cor33> =
									  call 'erlang':'byte_size'
									      (UC_Str)
								      in  let <_cor31> =
									      ( #{#<_cor31>('all',1,'binary',[]),
										  #<_cor33>(32,1,'integer',['unsigned'|['native']]),
										  #<UC_Str>('all',8,'binary',['unsigned'|['big']])}#
										-| ['compiler_generated','single_use'] )
									  in  apply 'lbc$^2'/2
										  (_cor30, _cor31)
								  <[],_cor31> when 'true' ->
								      _cor31
								  ( <_cor32,_cor31> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor32,_cor31})
									  -| [{'function_name',{'lbc$^2',2}}] )
								    -| ['compiler_generated'] )
								end
						    in  apply 'lbc$^2'/2
							    (_cor14, _cor28)
						    -| ['list_comprehension'] )
					      in  let <_cor22> =
						      ( letrec
							    'lc$^1'/1 =
								fun (_cor18) ->
								    case _cor18 of
								      <[S|_cor17]> when 'true' ->
									  let <_cor19> =
									      call 'erlang':'byte_size'
										  (S)
									  in  let <_cor20> =
										  call 'erlang':'+'
										      (_cor19, 4)
									      in  let <_cor21> =
										      apply 'lc$^1'/1
											  (_cor17)
										  in  ( [_cor20|_cor21]
											-| ['compiler_generated'] )
								      <[]> when 'true' ->
									  []
								      ( <_cor18> when 'true' ->
									    ( primop 'match_fail'
										  ({'function_clause',_cor18})
									      -| [{'function_name',{'lc$^1',1}}] )
									-| ['compiler_generated'] )
								    end
							in  apply 'lc$^1'/1
								(_cor14)
							-| ['list_comprehension'] )
						  in  let <_cor23> =
							  call 'lists':'sum'
							      (_cor22)
						      in  let <_cor24> =
							      call 'erlang':'+'
								  (0, _cor23)
							  in  let <_cor25> =
								  call 'erlang':'band'
								      (_cor24, 7)
							      in  let <_cor26> =
								      call 'erlang':'-'
									  (8, _cor25)
								  in  let <_cor27> =
									  call 'erlang':'band'
									      (_cor26, 7)
								      in  let <_cor36> =
									      #{#<3>(32,1,'integer',['unsigned'|['native']]),
										#<_cor35>(32,1,'integer',['unsigned'|['native']]),
										#<_cor34>('all',8,'binary',['unsigned'|['big']]),
										#<0>(_cor27,8,'integer',['unsigned'|['big']])}#
									  in  [_cor36|Acc]
			      %% Line 116
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor37> =
				      #{#<4>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor37|Acc]
			      %% Line 117
			      <{'validator',{'wx_ref',ValidatorRef,ValidatorT,_cor53}},Acc> when 'true' ->
				  do  ( case <> of
					  ( <>
						when call 'erlang':'=:='
						      (ValidatorT,
						       'wx') ->
						'ok'
					    -| ['compiler_generated'] )
					  ( <> when 'true' ->
						call ValidatorT:'parent_class'
						    ('wx')
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				      let <_cor40> =
					  #{#<5>(32,1,'integer',['unsigned'|['native']]),
					    #<ValidatorRef>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor40|Acc]
			      %% Line 118
			      <BadOpt,_cor54> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/3-fun-0-'}}] )
		  in  let <_cor46> =
			  %% Line 119
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 119
			      call 'erlang':'list_to_binary'
				  (_cor46)
			  in  let <_cor48> =
				  %% Line 121
				  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				    #<Id>(32,1,'integer',['unsigned'|['native']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 120
				  call 'wxe_util':'construct'
				      (1555, _cor48)
	  ( <_cor51,_cor50,_cor49> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor51,_cor50,_cor49})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'check'/2 =
    %% Line 127
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <This = {'wx_ref',_cor5,_cor6,_cor7},Index>
	      when %% Line 128
		call 'erlang':'is_integer'
		    (Index) ->
	      %% Line 129
	      apply 'check'/3
		  (This, Index, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'check',2}}] )
	    -| ['compiler_generated'] )
	end
'check'/3 =
    %% Line 135
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor20},Index,Options>
	      when let <_cor3> =
		    %% Line 136
		    call 'erlang':'is_integer'
			(Index)
		in  let <_cor4> =
			%% Line 136
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 136
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 137
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCheckListBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCheckListBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 138
		      ( fun (_cor10,_cor9) ->
			    case <_cor10,_cor9> of
			      <{'check',Check},Acc> when 'true' ->
				  let <_cor7> =
				      call 'wxe_util':'from_bool'
					  (Check)
				  in  let <_cor8> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor8|Acc]
			      %% Line 139
			      <BadOpt,_cor21> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-check/3-fun-0-'}}] )
		  in  let <_cor14> =
			  %% Line 140
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 140
			      call 'erlang':'list_to_binary'
				  (_cor14)
			  in  let <_cor16> =
				  %% Line 142
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<Index>(32,1,'integer',['unsigned'|['native']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 141
				  call 'wxe_util':'cast'
				      (1556, _cor16)
	  ( <_cor19,_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17})
		  -| [{'function_name',{'check',3}}] )
	    -| ['compiler_generated'] )
	end
'isChecked'/2 =
    %% Line 147
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Index>
	      when %% Line 148
		call 'erlang':'is_integer'
		    (Index) ->
	      do  %% Line 149
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxCheckListBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxCheckListBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 151
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Index>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 150
		      call 'wxe_util':'call'
			  (1557, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'isChecked',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 155
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 156
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxCheckListBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxCheckListBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 157
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 158
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'setFirstItem'/2 =
    %% Line 161
    fun (_cor1,_cor0) ->
	call 'wxListBox':'setFirstItem'
	    (_cor1, _cor0)
'hitTest'/2 =
    %% Line 163
    fun (_cor1,_cor0) ->
	call 'wxListBox':'hitTest'
	    (_cor1, _cor0)
'set'/2 =
    %% Line 165
    fun (_cor1,_cor0) ->
	call 'wxListBox':'set'
	    (_cor1, _cor0)
'isSelected'/2 =
    %% Line 167
    fun (_cor1,_cor0) ->
	call 'wxListBox':'isSelected'
	    (_cor1, _cor0)
'insertItems'/3 =
    %% Line 169
    fun (_cor2,_cor1,_cor0) ->
	call 'wxListBox':'insertItems'
	    (_cor2, _cor1, _cor0)
'getSelections'/1 =
    %% Line 171
    fun (_cor0) ->
	call 'wxListBox':'getSelections'
	    (_cor0)
'deselect'/2 =
    %% Line 173
    fun (_cor1,_cor0) ->
	call 'wxListBox':'deselect'
	    (_cor1, _cor0)
'setStringSelection'/2 =
    %% Line 176
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'setStringSelection'
	    (_cor1, _cor0)
'setString'/3 =
    %% Line 178
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'setString'
	    (_cor2, _cor1, _cor0)
'setSelection'/2 =
    %% Line 180
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'setSelection'
	    (_cor1, _cor0)
'select'/2 =
    %% Line 182
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'select'
	    (_cor1, _cor0)
'isEmpty'/1 =
    %% Line 184
    fun (_cor0) ->
	call 'wxControlWithItems':'isEmpty'
	    (_cor0)
'insert'/4 =
    %% Line 186
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'insert'
	    (_cor3, _cor2, _cor1, _cor0)
'insert'/3 =
    %% Line 188
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'insert'
	    (_cor2, _cor1, _cor0)
'getStringSelection'/1 =
    %% Line 190
    fun (_cor0) ->
	call 'wxControlWithItems':'getStringSelection'
	    (_cor0)
'getString'/2 =
    %% Line 192
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'getString'
	    (_cor1, _cor0)
'getSelection'/1 =
    %% Line 194
    fun (_cor0) ->
	call 'wxControlWithItems':'getSelection'
	    (_cor0)
'getCount'/1 =
    %% Line 196
    fun (_cor0) ->
	call 'wxControlWithItems':'getCount'
	    (_cor0)
'setClientData'/3 =
    %% Line 198
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'setClientData'
	    (_cor2, _cor1, _cor0)
'getClientData'/2 =
    %% Line 200
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'getClientData'
	    (_cor1, _cor0)
'findString'/3 =
    %% Line 202
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'findString'
	    (_cor2, _cor1, _cor0)
'findString'/2 =
    %% Line 204
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'findString'
	    (_cor1, _cor0)
'delete'/2 =
    %% Line 206
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'delete'
	    (_cor1, _cor0)
'clear'/1 =
    %% Line 208
    fun (_cor0) ->
	call 'wxControlWithItems':'clear'
	    (_cor0)
'appendStrings'/2 =
    %% Line 210
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'appendStrings'
	    (_cor1, _cor0)
'append'/3 =
    %% Line 212
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'append'
	    (_cor2, _cor1, _cor0)
'append'/2 =
    %% Line 214
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'append'
	    (_cor1, _cor0)
'setLabel'/2 =
    %% Line 217
    fun (_cor1,_cor0) ->
	call 'wxControl':'setLabel'
	    (_cor1, _cor0)
'getLabel'/1 =
    %% Line 219
    fun (_cor0) ->
	call 'wxControl':'getLabel'
	    (_cor0)
'warpPointer'/3 =
    %% Line 222
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 224
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 226
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 228
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 230
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 232
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 234
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 236
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 238
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 240
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 242
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 244
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 246
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 248
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 250
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 252
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 254
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 256
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 258
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 260
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 262
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 264
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 266
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 268
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 270
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 272
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 274
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 276
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 278
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 280
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 282
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 284
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 286
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 288
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 290
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 292
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 294
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 296
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 298
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 300
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 302
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 304
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 306
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 308
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 310
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 312
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 314
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 316
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 318
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 320
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 322
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 324
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 326
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 328
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 330
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 332
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 334
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 336
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 338
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 340
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 342
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 344
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 346
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 348
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 350
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 352
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 354
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 356
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 358
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 360
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 362
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 364
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 366
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 368
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 370
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 372
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 374
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 376
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 378
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 380
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 382
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 384
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 386
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 388
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 390
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 392
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 394
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 396
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 398
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 400
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 402
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 404
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 406
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 408
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 410
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 412
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 414
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 416
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 418
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 420
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 422
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 424
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 426
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 428
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 430
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 432
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 434
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 436
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 438
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 440
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 442
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 444
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 446
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 448
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 450
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 452
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 454
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 456
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 458
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 460
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 462
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 464
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 466
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 468
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 470
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 472
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 474
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 476
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 478
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 480
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 482
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 484
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 486
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 488
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 490
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 492
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 494
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 496
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 498
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 500
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 502
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 504
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 506
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 508
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 510
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 512
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 514
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 516
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 518
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 520
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 522
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 524
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 526
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 528
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 530
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 532
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 534
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 536
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 538
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 540
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 542
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 544
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 546
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 548
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 550
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 552
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 554
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 556
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 558
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 560
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 562
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 564
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 566
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 569
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 571
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 573
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 575
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 577
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxCheckListBox')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxCheckListBox', _cor0)
end