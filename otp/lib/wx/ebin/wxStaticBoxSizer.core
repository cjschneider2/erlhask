module 'wxStaticBoxSizer' ['add'/2,
			   'add'/3,
			   'add'/4,
			   'addSpacer'/2,
			   'addStretchSpacer'/1,
			   'addStretchSpacer'/2,
			   'calcMin'/1,
			   'clear'/1,
			   'clear'/2,
			   'destroy'/1,
			   'detach'/2,
			   'fit'/2,
			   'fitInside'/2,
			   'getChildren'/1,
			   'getItem'/2,
			   'getItem'/3,
			   'getMinSize'/1,
			   'getOrientation'/1,
			   'getPosition'/1,
			   'getSize'/1,
			   'getStaticBox'/1,
			   'hide'/2,
			   'hide'/3,
			   'insert'/3,
			   'insert'/4,
			   'insert'/5,
			   'insertSpacer'/3,
			   'insertStretchSpacer'/2,
			   'insertStretchSpacer'/3,
			   'isShown'/2,
			   'layout'/1,
			   'module_info'/0,
			   'module_info'/1,
			   'new'/2,
			   'new'/3,
			   'parent_class'/1,
			   'prepend'/2,
			   'prepend'/3,
			   'prepend'/4,
			   'prependSpacer'/2,
			   'prependStretchSpacer'/1,
			   'prependStretchSpacer'/2,
			   'recalcSizes'/1,
			   'remove'/2,
			   'replace'/3,
			   'replace'/4,
			   'setDimension'/5,
			   'setItemMinSize'/3,
			   'setItemMinSize'/4,
			   'setMinSize'/2,
			   'setMinSize'/3,
			   'setSizeHints'/2,
			   'setVirtualSizeHints'/2,
			   'show'/2,
			   'show'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 44
		'export_type' =
		    %% Line 44
		    [{'wxStaticBoxSizer',0}],
		%% Line 50
		'type' =
		    %% Line 50
		    [{'wxStaticBoxSizer',{'remote_type',50,[{'atom',50,'wx'}|[{'atom',50,'wx_object'}|[[]]]]},[]}],
		%% Line 56
		'spec' =
		    %% Line 56
		    [{{'new',2},[{'type',56,'bounded_fun',[{'type',56,'fun',[{'type',56,'product',[{'var',56,'Orient'}|[{'var',56,'Win'}]]}|[{'type',56,'wxStaticBoxSizer',[]}]]}|[[{'type',57,'constraint',[{'atom',57,'is_subtype'}|[[{'var',57,'Orient'}|[{'type',57,'integer',[]}]]]]}|[{'type',57,'constraint',[{'atom',57,'is_subtype'}|[[{'var',57,'Win'}|[{'remote_type',57,[{'atom',57,'wxWindow'}|[{'atom',57,'wxWindow'}|[[]]]]}]]]]}]]]]}|[{'type',58,'bounded_fun',[{'type',58,'fun',[{'type',58,'product',[{'var',58,'Box'}|[{'var',58,'Orient'}]]}|[{'type',58,'wxStaticBoxSizer',[]}]]}|[[{'type',59,'constraint',[{'atom',59,'is_subtype'}|[[{'var',59,'Box'}|[{'remote_type',59,[{'atom',59,'wxStaticBox'}|[{'atom',59,'wxStaticBox'}|[[]]]]}]]]]}|[{'type',59,'constraint',[{'atom',59,'is_subtype'}|[[{'var',59,'Orient'}|[{'type',59,'integer',[]}]]]]}]]]]}]]}],
		%% Line 71
		'spec' =
		    %% Line 71
		    [{{'new',3},[{'type',71,'bounded_fun',[{'type',71,'fun',[{'type',71,'product',[{'var',71,'Orient'}|[{'var',71,'Win'}|[{'type',71,'list',[{'var',71,'Option'}]}]]]}|[{'type',71,'wxStaticBoxSizer',[]}]]}|[[{'type',72,'constraint',[{'atom',72,'is_subtype'}|[[{'var',72,'Orient'}|[{'type',72,'integer',[]}]]]]}|[{'type',72,'constraint',[{'atom',72,'is_subtype'}|[[{'var',72,'Win'}|[{'remote_type',72,[{'atom',72,'wxWindow'}|[{'atom',72,'wxWindow'}|[[]]]]}]]]]}|[{'type',73,'constraint',[{'atom',73,'is_subtype'}|[[{'var',73,'Option'}|[{'type',73,'tuple',[{'atom',73,'label'}|[{'remote_type',73,[{'atom',73,'unicode'}|[{'atom',73,'chardata'}|[[]]]]}]]}]]]]}]]]]]}]}],
		%% Line 84
		'spec' =
		    %% Line 84
		    [{{'getStaticBox',1},[{'type',84,'bounded_fun',[{'type',84,'fun',[{'type',84,'product',[{'var',84,'This'}]}|[{'remote_type',84,[{'atom',84,'wxStaticBox'}|[{'atom',84,'wxStaticBox'}|[[]]]]}]]}|[[{'type',85,'constraint',[{'atom',85,'is_subtype'}|[[{'var',85,'This'}|[{'type',85,'wxStaticBoxSizer',[]}]]]]}]]]}]}],
		%% Line 92
		'spec' =
		    %% Line 92
		    [{{'destroy',1},[{'type',92,'fun',[{'type',92,'product',[{'ann_type',92,[{'var',92,'This'}|[{'type',92,'wxStaticBoxSizer',[]}]]}]}|[{'atom',92,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 46
    fun (_cor0) ->
	case _cor0 of
	  <'wxBoxSizer'> when 'true' ->
	      'true'
	  %% Line 47
	  <'wxSizer'> when 'true' ->
	      'true'
	  %% Line 48
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxStaticBoxSizer'})
	end
'new'/2 =
    %% Line 61
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Orient,Win = {'wx_ref',_cor8,_cor9,_cor10}>
	      when %% Line 62
		call 'erlang':'is_integer'
		    (Orient) ->
	      %% Line 63
	      apply 'new'/3
		  (Orient, Win, [])
	  %% Line 64
	  <{'wx_ref',BoxRef,BoxT,_cor11},Orient>
	      when %% Line 65
		call 'erlang':'is_integer'
		    (Orient) ->
	      do  %% Line 66
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (BoxT,
				   'wxStaticBox') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call BoxT:'parent_class'
				('wxStaticBox')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor5> =
		      %% Line 68
		      #{#<BoxRef>(32,1,'integer',['unsigned'|['native']]),
			#<Orient>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 67
		      call 'wxe_util':'construct'
			  (1370, _cor5)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'new'/3 =
    %% Line 74
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Orient,{'wx_ref',WinRef,WinT,_cor26},Options>
	      when let <_cor3> =
		    %% Line 75
		    call 'erlang':'is_integer'
			(Orient)
		in  let <_cor4> =
			%% Line 75
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 75
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 76
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (WinT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call WinT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 77
		      ( fun (_cor16,_cor15) ->
			    case <_cor16,_cor15> of
			      <{'label',Label},Acc> when 'true' ->
				  let <Label_UC> =
				      call 'unicode':'characters_to_binary'
					  ([Label|[0]])
				  in  let <_cor13> =
					  call 'erlang':'byte_size'
					      (Label_UC)
				      in  let <_cor8> =
					      call 'erlang':'byte_size'
						  (Label_UC)
					  in  let <_cor9> =
						  call 'erlang':'+'
						      (0, _cor8)
					      in  let <_cor10> =
						      call 'erlang':'band'
							  (_cor9, 7)
						  in  let <_cor11> =
							  call 'erlang':'-'
							      (8, _cor10)
						      in  let <_cor12> =
							      call 'erlang':'band'
								  (_cor11, 7)
							  in  let <_cor14> =
								  #{#<1>(32,1,'integer',['unsigned'|['native']]),
								    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
								    #<Label_UC>('all',8,'binary',['unsigned'|['big']]),
								    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
							      in  [_cor14|Acc]
			      %% Line 78
			      <BadOpt,_cor27> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/3-fun-0-'}}] )
		  in  let <_cor20> =
			  %% Line 79
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 79
			      call 'erlang':'list_to_binary'
				  (_cor20)
			  in  let <_cor22> =
				  %% Line 81
				  #{#<Orient>(32,1,'integer',['unsigned'|['native']]),
				    #<WinRef>(32,1,'integer',['unsigned'|['native']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 80
				  call 'wxe_util':'construct'
				      (1371, _cor22)
	  ( <_cor25,_cor24,_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor25,_cor24,_cor23})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'getStaticBox'/1 =
    %% Line 86
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 87
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxStaticBoxSizer') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxStaticBoxSizer')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 89
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 88
		      call 'wxe_util':'call'
			  (1372, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getStaticBox',1}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 93
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 94
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxStaticBoxSizer') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxStaticBoxSizer')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 95
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 96
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'getOrientation'/1 =
    %% Line 99
    fun (_cor0) ->
	call 'wxBoxSizer':'getOrientation'
	    (_cor0)
'show'/3 =
    %% Line 102
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'show'
	    (_cor2, _cor1, _cor0)
'show'/2 =
    %% Line 104
    fun (_cor1,_cor0) ->
	call 'wxSizer':'show'
	    (_cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 106
    fun (_cor1,_cor0) ->
	call 'wxSizer':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setSizeHints'/2 =
    %% Line 108
    fun (_cor1,_cor0) ->
	call 'wxSizer':'setSizeHints'
	    (_cor1, _cor0)
'setItemMinSize'/4 =
    %% Line 110
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'setItemMinSize'
	    (_cor3, _cor2, _cor1, _cor0)
'setItemMinSize'/3 =
    %% Line 112
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'setItemMinSize'
	    (_cor2, _cor1, _cor0)
'setMinSize'/3 =
    %% Line 114
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'setMinSize'
	    (_cor2, _cor1, _cor0)
'setMinSize'/2 =
    %% Line 116
    fun (_cor1,_cor0) ->
	call 'wxSizer':'setMinSize'
	    (_cor1, _cor0)
'setDimension'/5 =
    %% Line 118
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'setDimension'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'replace'/4 =
    %% Line 120
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'replace'
	    (_cor3, _cor2, _cor1, _cor0)
'replace'/3 =
    %% Line 122
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'replace'
	    (_cor2, _cor1, _cor0)
'remove'/2 =
    %% Line 124
    fun (_cor1,_cor0) ->
	call 'wxSizer':'remove'
	    (_cor1, _cor0)
'recalcSizes'/1 =
    %% Line 126
    fun (_cor0) ->
	call 'wxSizer':'recalcSizes'
	    (_cor0)
'prependStretchSpacer'/2 =
    %% Line 128
    fun (_cor1,_cor0) ->
	call 'wxSizer':'prependStretchSpacer'
	    (_cor1, _cor0)
'prependStretchSpacer'/1 =
    %% Line 130
    fun (_cor0) ->
	call 'wxSizer':'prependStretchSpacer'
	    (_cor0)
'prependSpacer'/2 =
    %% Line 132
    fun (_cor1,_cor0) ->
	call 'wxSizer':'prependSpacer'
	    (_cor1, _cor0)
'prepend'/4 =
    %% Line 134
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'prepend'
	    (_cor3, _cor2, _cor1, _cor0)
'prepend'/3 =
    %% Line 136
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'prepend'
	    (_cor2, _cor1, _cor0)
'prepend'/2 =
    %% Line 138
    fun (_cor1,_cor0) ->
	call 'wxSizer':'prepend'
	    (_cor1, _cor0)
'layout'/1 =
    %% Line 140
    fun (_cor0) ->
	call 'wxSizer':'layout'
	    (_cor0)
'isShown'/2 =
    %% Line 142
    fun (_cor1,_cor0) ->
	call 'wxSizer':'isShown'
	    (_cor1, _cor0)
'insertStretchSpacer'/3 =
    %% Line 144
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insertStretchSpacer'
	    (_cor2, _cor1, _cor0)
'insertStretchSpacer'/2 =
    %% Line 146
    fun (_cor1,_cor0) ->
	call 'wxSizer':'insertStretchSpacer'
	    (_cor1, _cor0)
'insertSpacer'/3 =
    %% Line 148
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insertSpacer'
	    (_cor2, _cor1, _cor0)
'insert'/5 =
    %% Line 150
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insert'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'insert'/4 =
    %% Line 152
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insert'
	    (_cor3, _cor2, _cor1, _cor0)
'insert'/3 =
    %% Line 154
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'insert'
	    (_cor2, _cor1, _cor0)
'hide'/3 =
    %% Line 156
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'hide'
	    (_cor2, _cor1, _cor0)
'hide'/2 =
    %% Line 158
    fun (_cor1,_cor0) ->
	call 'wxSizer':'hide'
	    (_cor1, _cor0)
'getMinSize'/1 =
    %% Line 160
    fun (_cor0) ->
	call 'wxSizer':'getMinSize'
	    (_cor0)
'getPosition'/1 =
    %% Line 162
    fun (_cor0) ->
	call 'wxSizer':'getPosition'
	    (_cor0)
'getSize'/1 =
    %% Line 164
    fun (_cor0) ->
	call 'wxSizer':'getSize'
	    (_cor0)
'getItem'/3 =
    %% Line 166
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'getItem'
	    (_cor2, _cor1, _cor0)
'getItem'/2 =
    %% Line 168
    fun (_cor1,_cor0) ->
	call 'wxSizer':'getItem'
	    (_cor1, _cor0)
'getChildren'/1 =
    %% Line 170
    fun (_cor0) ->
	call 'wxSizer':'getChildren'
	    (_cor0)
'fitInside'/2 =
    %% Line 172
    fun (_cor1,_cor0) ->
	call 'wxSizer':'fitInside'
	    (_cor1, _cor0)
'fit'/2 =
    %% Line 174
    fun (_cor1,_cor0) ->
	call 'wxSizer':'fit'
	    (_cor1, _cor0)
'detach'/2 =
    %% Line 176
    fun (_cor1,_cor0) ->
	call 'wxSizer':'detach'
	    (_cor1, _cor0)
'clear'/2 =
    %% Line 178
    fun (_cor1,_cor0) ->
	call 'wxSizer':'clear'
	    (_cor1, _cor0)
'clear'/1 =
    %% Line 180
    fun (_cor0) ->
	call 'wxSizer':'clear'
	    (_cor0)
'calcMin'/1 =
    %% Line 182
    fun (_cor0) ->
	call 'wxSizer':'calcMin'
	    (_cor0)
'addStretchSpacer'/2 =
    %% Line 184
    fun (_cor1,_cor0) ->
	call 'wxSizer':'addStretchSpacer'
	    (_cor1, _cor0)
'addStretchSpacer'/1 =
    %% Line 186
    fun (_cor0) ->
	call 'wxSizer':'addStretchSpacer'
	    (_cor0)
'addSpacer'/2 =
    %% Line 188
    fun (_cor1,_cor0) ->
	call 'wxSizer':'addSpacer'
	    (_cor1, _cor0)
'add'/4 =
    %% Line 190
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxSizer':'add'
	    (_cor3, _cor2, _cor1, _cor0)
'add'/3 =
    %% Line 192
    fun (_cor2,_cor1,_cor0) ->
	call 'wxSizer':'add'
	    (_cor2, _cor1, _cor0)
'add'/2 =
    %% Line 194
    fun (_cor1,_cor0) ->
	call 'wxSizer':'add'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxStaticBoxSizer')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxStaticBoxSizer', _cor0)
end