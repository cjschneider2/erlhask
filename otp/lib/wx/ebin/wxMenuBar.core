module 'wxMenuBar' ['append'/3,
		    'cacheBestSize'/2,
		    'captureMouse'/1,
		    'center'/1,
		    'center'/2,
		    'centerOnParent'/1,
		    'centerOnParent'/2,
		    'centre'/1,
		    'centre'/2,
		    'centreOnParent'/1,
		    'centreOnParent'/2,
		    'check'/3,
		    'clearBackground'/1,
		    'clientToScreen'/2,
		    'clientToScreen'/3,
		    'close'/1,
		    'close'/2,
		    'connect'/2,
		    'connect'/3,
		    'convertDialogToPixels'/2,
		    'convertPixelsToDialog'/2,
		    'destroy'/1,
		    'destroyChildren'/1,
		    'disable'/1,
		    'disconnect'/1,
		    'disconnect'/2,
		    'disconnect'/3,
		    'enable'/1,
		    'enable'/2,
		    'enable'/3,
		    'enableTop'/3,
		    'findItem'/2,
		    'findMenu'/2,
		    'findMenuItem'/3,
		    'findWindow'/2,
		    'fit'/1,
		    'fitInside'/1,
		    'freeze'/1,
		    'getAcceleratorTable'/1,
		    'getBackgroundColour'/1,
		    'getBackgroundStyle'/1,
		    'getBestSize'/1,
		    'getCaret'/1,
		    'getCharHeight'/1,
		    'getCharWidth'/1,
		    'getChildren'/1,
		    'getClientSize'/1,
		    'getContainingSizer'/1,
		    'getCursor'/1,
		    'getDropTarget'/1,
		    'getEventHandler'/1,
		    'getExtraStyle'/1,
		    'getFont'/1,
		    'getForegroundColour'/1,
		    'getGrandParent'/1,
		    'getHandle'/1,
		    'getHelpString'/2,
		    'getHelpText'/1,
		    'getId'/1,
		    'getLabel'/1,
		    'getLabel'/2,
		    'getLabelTop'/2,
		    'getMaxSize'/1,
		    'getMenu'/2,
		    'getMenuCount'/1,
		    'getMinSize'/1,
		    'getName'/1,
		    'getParent'/1,
		    'getPosition'/1,
		    'getRect'/1,
		    'getScreenPosition'/1,
		    'getScreenRect'/1,
		    'getScrollPos'/2,
		    'getScrollRange'/2,
		    'getScrollThumb'/2,
		    'getSize'/1,
		    'getSizer'/1,
		    'getTextExtent'/2,
		    'getTextExtent'/3,
		    'getToolTip'/1,
		    'getUpdateRegion'/1,
		    'getVirtualSize'/1,
		    'getWindowStyleFlag'/1,
		    'getWindowVariant'/1,
		    'hasCapture'/1,
		    'hasScrollbar'/2,
		    'hasTransparentBackground'/1,
		    'hide'/1,
		    'inheritAttributes'/1,
		    'initDialog'/1,
		    'insert'/4,
		    'invalidateBestSize'/1,
		    'isChecked'/2,
		    'isEnabled'/1,
		    'isEnabled'/2,
		    'isExposed'/2,
		    'isExposed'/3,
		    'isExposed'/5,
		    'isRetained'/1,
		    'isShown'/1,
		    'isTopLevel'/1,
		    'layout'/1,
		    'lineDown'/1,
		    'lineUp'/1,
		    'lower'/1,
		    'makeModal'/1,
		    'makeModal'/2,
		    'module_info'/0,
		    'module_info'/1,
		    'move'/2,
		    'move'/3,
		    'move'/4,
		    'moveAfterInTabOrder'/2,
		    'moveBeforeInTabOrder'/2,
		    'navigate'/1,
		    'navigate'/2,
		    'new'/0,
		    'new'/1,
		    'pageDown'/1,
		    'pageUp'/1,
		    'parent_class'/1,
		    'popEventHandler'/1,
		    'popEventHandler'/2,
		    'popupMenu'/2,
		    'popupMenu'/3,
		    'popupMenu'/4,
		    'raise'/1,
		    'refresh'/1,
		    'refresh'/2,
		    'refreshRect'/2,
		    'refreshRect'/3,
		    'releaseMouse'/1,
		    'remove'/2,
		    'removeChild'/2,
		    'reparent'/2,
		    'replace'/4,
		    'screenToClient'/1,
		    'screenToClient'/2,
		    'scrollLines'/2,
		    'scrollPages'/2,
		    'scrollWindow'/3,
		    'scrollWindow'/4,
		    'setAcceleratorTable'/2,
		    'setAutoLayout'/2,
		    'setBackgroundColour'/2,
		    'setBackgroundStyle'/2,
		    'setCaret'/2,
		    'setClientSize'/2,
		    'setClientSize'/3,
		    'setContainingSizer'/2,
		    'setCursor'/2,
		    'setDropTarget'/2,
		    'setExtraStyle'/2,
		    'setFocus'/1,
		    'setFocusFromKbd'/1,
		    'setFont'/2,
		    'setForegroundColour'/2,
		    'setHelpString'/3,
		    'setHelpText'/2,
		    'setId'/2,
		    'setLabel'/2,
		    'setLabel'/3,
		    'setLabelTop'/3,
		    'setMaxSize'/2,
		    'setMinSize'/2,
		    'setName'/2,
		    'setOwnBackgroundColour'/2,
		    'setOwnFont'/2,
		    'setOwnForegroundColour'/2,
		    'setPalette'/2,
		    'setScrollPos'/3,
		    'setScrollPos'/4,
		    'setScrollbar'/5,
		    'setScrollbar'/6,
		    'setSize'/2,
		    'setSize'/3,
		    'setSize'/5,
		    'setSize'/6,
		    'setSizeHints'/2,
		    'setSizeHints'/3,
		    'setSizeHints'/4,
		    'setSizer'/2,
		    'setSizer'/3,
		    'setSizerAndFit'/2,
		    'setSizerAndFit'/3,
		    'setThemeEnabled'/2,
		    'setToolTip'/2,
		    'setVirtualSize'/2,
		    'setVirtualSize'/3,
		    'setVirtualSizeHints'/2,
		    'setVirtualSizeHints'/3,
		    'setVirtualSizeHints'/4,
		    'setWindowStyle'/2,
		    'setWindowStyleFlag'/2,
		    'setWindowVariant'/2,
		    'shouldInheritColours'/1,
		    'show'/1,
		    'show'/2,
		    'thaw'/1,
		    'transferDataFromWindow'/1,
		    'transferDataToWindow'/1,
		    'update'/1,
		    'updateWindowUI'/1,
		    'updateWindowUI'/2,
		    'validate'/1,
		    'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 75
		'export_type' =
		    %% Line 75
		    [{'wxMenuBar',0}],
		%% Line 81
		'type' =
		    %% Line 81
		    [{'wxMenuBar',{'remote_type',81,[{'atom',81,'wx'}|[{'atom',81,'wx_object'}|[[]]]]},[]}],
		%% Line 83
		'spec' =
		    %% Line 83
		    [{{'new',0},[{'type',83,'fun',[{'type',83,'product',[]}|[{'type',83,'wxMenuBar',[]}]]}]}],
		%% Line 89
		'spec' =
		    %% Line 89
		    [{{'new',1},[{'type',89,'bounded_fun',[{'type',89,'fun',[{'type',89,'product',[{'var',89,'Style'}]}|[{'type',89,'wxMenuBar',[]}]]}|[[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'Style'}|[{'type',90,'integer',[]}]]]]}]]]}]}],
		%% Line 97
		'spec' =
		    %% Line 97
		    [{{'append',3},[{'type',97,'bounded_fun',[{'type',97,'fun',[{'type',97,'product',[{'var',97,'This'}|[{'var',97,'Menu'}|[{'var',97,'Title'}]]]}|[{'type',97,'boolean',[]}]]}|[[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'This'}|[{'type',98,'wxMenuBar',[]}]]]]}|[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'Menu'}|[{'remote_type',98,[{'atom',98,'wxMenu'}|[{'atom',98,'wxMenu'}|[[]]]]}]]]]}|[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'Title'}|[{'remote_type',98,[{'atom',98,'unicode'}|[{'atom',98,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 108
		'spec' =
		    %% Line 108
		    [{{'check',3},[{'type',108,'bounded_fun',[{'type',108,'fun',[{'type',108,'product',[{'var',108,'This'}|[{'var',108,'Itemid'}|[{'var',108,'Check'}]]]}|[{'atom',108,'ok'}]]}|[[{'type',109,'constraint',[{'atom',109,'is_subtype'}|[[{'var',109,'This'}|[{'type',109,'wxMenuBar',[]}]]]]}|[{'type',109,'constraint',[{'atom',109,'is_subtype'}|[[{'var',109,'Itemid'}|[{'type',109,'integer',[]}]]]]}|[{'type',109,'constraint',[{'atom',109,'is_subtype'}|[[{'var',109,'Check'}|[{'type',109,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 117
		'spec' =
		    %% Line 117
		    [{{'enable',1},[{'type',117,'bounded_fun',[{'type',117,'fun',[{'type',117,'product',[{'var',117,'This'}]}|[{'type',117,'boolean',[]}]]}|[[{'type',118,'constraint',[{'atom',118,'is_subtype'}|[[{'var',118,'This'}|[{'type',118,'wxMenuBar',[]}]]]]}]]]}]}],
		%% Line 125
		'spec' =
		    %% Line 125
		    [{{'enable',2},[{'type',125,'bounded_fun',[{'type',125,'fun',[{'type',125,'product',[{'var',125,'This'}|[{'type',125,'list',[{'var',125,'Option'}]}]]}|[{'type',125,'boolean',[]}]]}|[[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'This'}|[{'type',126,'wxMenuBar',[]}]]]]}|[{'type',127,'constraint',[{'atom',127,'is_subtype'}|[[{'var',127,'Option'}|[{'type',127,'tuple',[{'atom',127,'enable'}|[{'type',127,'boolean',[]}]]}]]]]}]]]]}]}],
		%% Line 138
		'spec' =
		    %% Line 138
		    [{{'enable',3},[{'type',138,'bounded_fun',[{'type',138,'fun',[{'type',138,'product',[{'var',138,'This'}|[{'var',138,'Itemid'}|[{'var',138,'Enable'}]]]}|[{'atom',138,'ok'}]]}|[[{'type',139,'constraint',[{'atom',139,'is_subtype'}|[[{'var',139,'This'}|[{'type',139,'wxMenuBar',[]}]]]]}|[{'type',139,'constraint',[{'atom',139,'is_subtype'}|[[{'var',139,'Itemid'}|[{'type',139,'integer',[]}]]]]}|[{'type',139,'constraint',[{'atom',139,'is_subtype'}|[[{'var',139,'Enable'}|[{'type',139,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 147
		'spec' =
		    %% Line 147
		    [{{'enableTop',3},[{'type',147,'bounded_fun',[{'type',147,'fun',[{'type',147,'product',[{'var',147,'This'}|[{'var',147,'Pos'}|[{'var',147,'Flag'}]]]}|[{'atom',147,'ok'}]]}|[[{'type',148,'constraint',[{'atom',148,'is_subtype'}|[[{'var',148,'This'}|[{'type',148,'wxMenuBar',[]}]]]]}|[{'type',148,'constraint',[{'atom',148,'is_subtype'}|[[{'var',148,'Pos'}|[{'type',148,'integer',[]}]]]]}|[{'type',148,'constraint',[{'atom',148,'is_subtype'}|[[{'var',148,'Flag'}|[{'type',148,'boolean',[]}]]]]}]]]]]}]}],
		%% Line 156
		'spec' =
		    %% Line 156
		    [{{'findMenu',2},[{'type',156,'bounded_fun',[{'type',156,'fun',[{'type',156,'product',[{'var',156,'This'}|[{'var',156,'Title'}]]}|[{'type',156,'integer',[]}]]}|[[{'type',157,'constraint',[{'atom',157,'is_subtype'}|[[{'var',157,'This'}|[{'type',157,'wxMenuBar',[]}]]]]}|[{'type',157,'constraint',[{'atom',157,'is_subtype'}|[[{'var',157,'Title'}|[{'remote_type',157,[{'atom',157,'unicode'}|[{'atom',157,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 166
		'spec' =
		    %% Line 166
		    [{{'findMenuItem',3},[{'type',166,'bounded_fun',[{'type',166,'fun',[{'type',166,'product',[{'var',166,'This'}|[{'var',166,'MenuString'}|[{'var',166,'ItemString'}]]]}|[{'type',166,'integer',[]}]]}|[[{'type',167,'constraint',[{'atom',167,'is_subtype'}|[[{'var',167,'This'}|[{'type',167,'wxMenuBar',[]}]]]]}|[{'type',167,'constraint',[{'atom',167,'is_subtype'}|[[{'var',167,'MenuString'}|[{'remote_type',167,[{'atom',167,'unicode'}|[{'atom',167,'chardata'}|[[]]]]}]]]]}|[{'type',167,'constraint',[{'atom',167,'is_subtype'}|[[{'var',167,'ItemString'}|[{'remote_type',167,[{'atom',167,'unicode'}|[{'atom',167,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 177
		'spec' =
		    %% Line 177
		    [{{'findItem',2},[{'type',177,'bounded_fun',[{'type',177,'fun',[{'type',177,'product',[{'var',177,'This'}|[{'var',177,'Id'}]]}|[{'remote_type',177,[{'atom',177,'wxMenuItem'}|[{'atom',177,'wxMenuItem'}|[[]]]]}]]}|[[{'type',178,'constraint',[{'atom',178,'is_subtype'}|[[{'var',178,'This'}|[{'type',178,'wxMenuBar',[]}]]]]}|[{'type',178,'constraint',[{'atom',178,'is_subtype'}|[[{'var',178,'Id'}|[{'type',178,'integer',[]}]]]]}]]]]}]}],
		%% Line 186
		'spec' =
		    %% Line 186
		    [{{'getHelpString',2},[{'type',186,'bounded_fun',[{'type',186,'fun',[{'type',186,'product',[{'var',186,'This'}|[{'var',186,'Itemid'}]]}|[{'remote_type',186,[{'atom',186,'unicode'}|[{'atom',186,'charlist'}|[[]]]]}]]}|[[{'type',187,'constraint',[{'atom',187,'is_subtype'}|[[{'var',187,'This'}|[{'type',187,'wxMenuBar',[]}]]]]}|[{'type',187,'constraint',[{'atom',187,'is_subtype'}|[[{'var',187,'Itemid'}|[{'type',187,'integer',[]}]]]]}]]]]}]}],
		%% Line 195
		'spec' =
		    %% Line 195
		    [{{'getLabel',1},[{'type',195,'bounded_fun',[{'type',195,'fun',[{'type',195,'product',[{'var',195,'This'}]}|[{'remote_type',195,[{'atom',195,'unicode'}|[{'atom',195,'charlist'}|[[]]]]}]]}|[[{'type',196,'constraint',[{'atom',196,'is_subtype'}|[[{'var',196,'This'}|[{'type',196,'wxMenuBar',[]}]]]]}]]]}]}],
		%% Line 203
		'spec' =
		    %% Line 203
		    [{{'getLabel',2},[{'type',203,'bounded_fun',[{'type',203,'fun',[{'type',203,'product',[{'var',203,'This'}|[{'var',203,'Itemid'}]]}|[{'remote_type',203,[{'atom',203,'unicode'}|[{'atom',203,'charlist'}|[[]]]]}]]}|[[{'type',204,'constraint',[{'atom',204,'is_subtype'}|[[{'var',204,'This'}|[{'type',204,'wxMenuBar',[]}]]]]}|[{'type',204,'constraint',[{'atom',204,'is_subtype'}|[[{'var',204,'Itemid'}|[{'type',204,'integer',[]}]]]]}]]]]}]}],
		%% Line 212
		'spec' =
		    %% Line 212
		    [{{'getLabelTop',2},[{'type',212,'bounded_fun',[{'type',212,'fun',[{'type',212,'product',[{'var',212,'This'}|[{'var',212,'Pos'}]]}|[{'remote_type',212,[{'atom',212,'unicode'}|[{'atom',212,'charlist'}|[[]]]]}]]}|[[{'type',213,'constraint',[{'atom',213,'is_subtype'}|[[{'var',213,'This'}|[{'type',213,'wxMenuBar',[]}]]]]}|[{'type',213,'constraint',[{'atom',213,'is_subtype'}|[[{'var',213,'Pos'}|[{'type',213,'integer',[]}]]]]}]]]]}]}],
		%% Line 221
		'spec' =
		    %% Line 221
		    [{{'getMenu',2},[{'type',221,'bounded_fun',[{'type',221,'fun',[{'type',221,'product',[{'var',221,'This'}|[{'var',221,'Pos'}]]}|[{'remote_type',221,[{'atom',221,'wxMenu'}|[{'atom',221,'wxMenu'}|[[]]]]}]]}|[[{'type',222,'constraint',[{'atom',222,'is_subtype'}|[[{'var',222,'This'}|[{'type',222,'wxMenuBar',[]}]]]]}|[{'type',222,'constraint',[{'atom',222,'is_subtype'}|[[{'var',222,'Pos'}|[{'type',222,'integer',[]}]]]]}]]]]}]}],
		%% Line 230
		'spec' =
		    %% Line 230
		    [{{'getMenuCount',1},[{'type',230,'bounded_fun',[{'type',230,'fun',[{'type',230,'product',[{'var',230,'This'}]}|[{'type',230,'integer',[]}]]}|[[{'type',231,'constraint',[{'atom',231,'is_subtype'}|[[{'var',231,'This'}|[{'type',231,'wxMenuBar',[]}]]]]}]]]}]}],
		%% Line 238
		'spec' =
		    %% Line 238
		    [{{'insert',4},[{'type',238,'bounded_fun',[{'type',238,'fun',[{'type',238,'product',[{'var',238,'This'}|[{'var',238,'Pos'}|[{'var',238,'Menu'}|[{'var',238,'Title'}]]]]}|[{'type',238,'boolean',[]}]]}|[[{'type',239,'constraint',[{'atom',239,'is_subtype'}|[[{'var',239,'This'}|[{'type',239,'wxMenuBar',[]}]]]]}|[{'type',239,'constraint',[{'atom',239,'is_subtype'}|[[{'var',239,'Pos'}|[{'type',239,'integer',[]}]]]]}|[{'type',239,'constraint',[{'atom',239,'is_subtype'}|[[{'var',239,'Menu'}|[{'remote_type',239,[{'atom',239,'wxMenu'}|[{'atom',239,'wxMenu'}|[[]]]]}]]]]}|[{'type',239,'constraint',[{'atom',239,'is_subtype'}|[[{'var',239,'Title'}|[{'remote_type',239,[{'atom',239,'unicode'}|[{'atom',239,'chardata'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 249
		'spec' =
		    %% Line 249
		    [{{'isChecked',2},[{'type',249,'bounded_fun',[{'type',249,'fun',[{'type',249,'product',[{'var',249,'This'}|[{'var',249,'Itemid'}]]}|[{'type',249,'boolean',[]}]]}|[[{'type',250,'constraint',[{'atom',250,'is_subtype'}|[[{'var',250,'This'}|[{'type',250,'wxMenuBar',[]}]]]]}|[{'type',250,'constraint',[{'atom',250,'is_subtype'}|[[{'var',250,'Itemid'}|[{'type',250,'integer',[]}]]]]}]]]]}]}],
		%% Line 258
		'spec' =
		    %% Line 258
		    [{{'isEnabled',1},[{'type',258,'bounded_fun',[{'type',258,'fun',[{'type',258,'product',[{'var',258,'This'}]}|[{'type',258,'boolean',[]}]]}|[[{'type',259,'constraint',[{'atom',259,'is_subtype'}|[[{'var',259,'This'}|[{'type',259,'wxMenuBar',[]}]]]]}]]]}]}],
		%% Line 266
		'spec' =
		    %% Line 266
		    [{{'isEnabled',2},[{'type',266,'bounded_fun',[{'type',266,'fun',[{'type',266,'product',[{'var',266,'This'}|[{'var',266,'Itemid'}]]}|[{'type',266,'boolean',[]}]]}|[[{'type',267,'constraint',[{'atom',267,'is_subtype'}|[[{'var',267,'This'}|[{'type',267,'wxMenuBar',[]}]]]]}|[{'type',267,'constraint',[{'atom',267,'is_subtype'}|[[{'var',267,'Itemid'}|[{'type',267,'integer',[]}]]]]}]]]]}]}],
		%% Line 275
		'spec' =
		    %% Line 275
		    [{{'remove',2},[{'type',275,'bounded_fun',[{'type',275,'fun',[{'type',275,'product',[{'var',275,'This'}|[{'var',275,'Pos'}]]}|[{'remote_type',275,[{'atom',275,'wxMenu'}|[{'atom',275,'wxMenu'}|[[]]]]}]]}|[[{'type',276,'constraint',[{'atom',276,'is_subtype'}|[[{'var',276,'This'}|[{'type',276,'wxMenuBar',[]}]]]]}|[{'type',276,'constraint',[{'atom',276,'is_subtype'}|[[{'var',276,'Pos'}|[{'type',276,'integer',[]}]]]]}]]]]}]}],
		%% Line 284
		'spec' =
		    %% Line 284
		    [{{'replace',4},[{'type',284,'bounded_fun',[{'type',284,'fun',[{'type',284,'product',[{'var',284,'This'}|[{'var',284,'Pos'}|[{'var',284,'Menu'}|[{'var',284,'Title'}]]]]}|[{'remote_type',284,[{'atom',284,'wxMenu'}|[{'atom',284,'wxMenu'}|[[]]]]}]]}|[[{'type',285,'constraint',[{'atom',285,'is_subtype'}|[[{'var',285,'This'}|[{'type',285,'wxMenuBar',[]}]]]]}|[{'type',285,'constraint',[{'atom',285,'is_subtype'}|[[{'var',285,'Pos'}|[{'type',285,'integer',[]}]]]]}|[{'type',285,'constraint',[{'atom',285,'is_subtype'}|[[{'var',285,'Menu'}|[{'remote_type',285,[{'atom',285,'wxMenu'}|[{'atom',285,'wxMenu'}|[[]]]]}]]]]}|[{'type',285,'constraint',[{'atom',285,'is_subtype'}|[[{'var',285,'Title'}|[{'remote_type',285,[{'atom',285,'unicode'}|[{'atom',285,'chardata'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 295
		'spec' =
		    %% Line 295
		    [{{'setHelpString',3},[{'type',295,'bounded_fun',[{'type',295,'fun',[{'type',295,'product',[{'var',295,'This'}|[{'var',295,'Itemid'}|[{'var',295,'HelpString'}]]]}|[{'atom',295,'ok'}]]}|[[{'type',296,'constraint',[{'atom',296,'is_subtype'}|[[{'var',296,'This'}|[{'type',296,'wxMenuBar',[]}]]]]}|[{'type',296,'constraint',[{'atom',296,'is_subtype'}|[[{'var',296,'Itemid'}|[{'type',296,'integer',[]}]]]]}|[{'type',296,'constraint',[{'atom',296,'is_subtype'}|[[{'var',296,'HelpString'}|[{'remote_type',296,[{'atom',296,'unicode'}|[{'atom',296,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 305
		'spec' =
		    %% Line 305
		    [{{'setLabel',2},[{'type',305,'bounded_fun',[{'type',305,'fun',[{'type',305,'product',[{'var',305,'This'}|[{'var',305,'S'}]]}|[{'atom',305,'ok'}]]}|[[{'type',306,'constraint',[{'atom',306,'is_subtype'}|[[{'var',306,'This'}|[{'type',306,'wxMenuBar',[]}]]]]}|[{'type',306,'constraint',[{'atom',306,'is_subtype'}|[[{'var',306,'S'}|[{'remote_type',306,[{'atom',306,'unicode'}|[{'atom',306,'chardata'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 315
		'spec' =
		    %% Line 315
		    [{{'setLabel',3},[{'type',315,'bounded_fun',[{'type',315,'fun',[{'type',315,'product',[{'var',315,'This'}|[{'var',315,'Itemid'}|[{'var',315,'Label'}]]]}|[{'atom',315,'ok'}]]}|[[{'type',316,'constraint',[{'atom',316,'is_subtype'}|[[{'var',316,'This'}|[{'type',316,'wxMenuBar',[]}]]]]}|[{'type',316,'constraint',[{'atom',316,'is_subtype'}|[[{'var',316,'Itemid'}|[{'type',316,'integer',[]}]]]]}|[{'type',316,'constraint',[{'atom',316,'is_subtype'}|[[{'var',316,'Label'}|[{'remote_type',316,[{'atom',316,'unicode'}|[{'atom',316,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 325
		'spec' =
		    %% Line 325
		    [{{'setLabelTop',3},[{'type',325,'bounded_fun',[{'type',325,'fun',[{'type',325,'product',[{'var',325,'This'}|[{'var',325,'Pos'}|[{'var',325,'Label'}]]]}|[{'atom',325,'ok'}]]}|[[{'type',326,'constraint',[{'atom',326,'is_subtype'}|[[{'var',326,'This'}|[{'type',326,'wxMenuBar',[]}]]]]}|[{'type',326,'constraint',[{'atom',326,'is_subtype'}|[[{'var',326,'Pos'}|[{'type',326,'integer',[]}]]]]}|[{'type',326,'constraint',[{'atom',326,'is_subtype'}|[[{'var',326,'Label'}|[{'remote_type',326,[{'atom',326,'unicode'}|[{'atom',326,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 335
		'spec' =
		    %% Line 335
		    [{{'destroy',1},[{'type',335,'fun',[{'type',335,'product',[{'ann_type',335,[{'var',335,'This'}|[{'type',335,'wxMenuBar',[]}]]}]}|[{'atom',335,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 77
    fun (_cor0) ->
	case _cor0 of
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 78
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 79
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxMenuBar'})
	end
'new'/0 =
    %% Line 84
    fun () ->
	%% Line 85
	call 'wxe_util':'construct'
	    (852, %% Line 86
		  #{}#)
'new'/1 =
    %% Line 91
    fun (_cor0) ->
	case _cor0 of
	  <Style>
	      when %% Line 92
		call 'erlang':'is_integer'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 94
		  #{#<Style>(32,1,'integer',['unsigned'|['native']])}#
	      in  %% Line 93
		  call 'wxe_util':'construct'
		      (850, _cor1)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'append'/3 =
    %% Line 99
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},{'wx_ref',MenuRef,MenuT,_cor19},Title>
	      when %% Line 100
		call 'erlang':'is_list'
		    (Title) ->
	      do  %% Line 101
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 102
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (MenuT,
				       'wxMenu') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call MenuT:'parent_class'
				    ('wxMenu')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <Title_UC> =
			  %% Line 103
			  call 'unicode':'characters_to_binary'
			      ([Title|[0]])
		      in  let <_cor13> =
			      %% Line 105
			      call 'erlang':'byte_size'
				  (Title_UC)
			  in  let <_cor8> =
				  %% Line 105
				  call 'erlang':'byte_size'
				      (Title_UC)
			      in  let <_cor9> =
				      %% Line 105
				      call 'erlang':'+'
					  (4, _cor8)
				  in  let <_cor10> =
					  %% Line 105
					  call 'erlang':'band'
					      (_cor9, 7)
				      in  let <_cor11> =
					      %% Line 105
					      call 'erlang':'-'
						  (8, _cor10)
					  in  let <_cor12> =
						  %% Line 105
						  call 'erlang':'band'
						      (_cor11, 7)
					      in  let <_cor14> =
						      %% Line 105
						      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
							#<MenuRef>(32,1,'integer',['unsigned'|['native']]),
							#<_cor13>(32,1,'integer',['unsigned'|['native']]),
							#<Title_UC>('all',8,'binary',['unsigned'|['big']]),
							#<0>(_cor12,8,'integer',['unsigned'|['big']])}#
						  in  %% Line 104
						      call 'wxe_util':'call'
							  (855, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'append',3}}] )
	    -| ['compiler_generated'] )
	end
'check'/3 =
    %% Line 110
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Itemid,Check>
	      when let <_cor3> =
		    %% Line 111
		    call 'erlang':'is_integer'
			(Itemid)
		in  let <_cor4> =
			%% Line 111
			call 'erlang':'is_boolean'
			    (Check)
		    in  %% Line 111
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 112
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 114
		      call 'wxe_util':'from_bool'
			  (Check)
		  in  let <_cor8> =
			  %% Line 114
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Itemid>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 113
			  call 'wxe_util':'cast'
			      (856, _cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'check',3}}] )
	    -| ['compiler_generated'] )
	end
'enable'/1 =
    %% Line 120
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 121
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 122
	      apply 'enable'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'enable',1}}] )
	    -| ['compiler_generated'] )
	end
'enable'/2 =
    %% Line 128
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor16},Options>
	      when %% Line 129
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 130
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 131
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'enable',Enable},Acc> when 'true' ->
				  let <_cor4> =
				      call 'wxe_util':'from_bool'
					  (Enable)
				  in  let <_cor5> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<_cor4>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor5|Acc]
			      %% Line 132
			      <BadOpt,_cor17> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-enable/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 133
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 133
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor13> =
				  %% Line 135
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 134
				  call 'wxe_util':'call'
				      (858, _cor13)
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'enable',2}}] )
	    -| ['compiler_generated'] )
	end
'enable'/3 =
    %% Line 140
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Itemid,Enable>
	      when let <_cor3> =
		    %% Line 141
		    call 'erlang':'is_integer'
			(Itemid)
		in  let <_cor4> =
			%% Line 141
			call 'erlang':'is_boolean'
			    (Enable)
		    in  %% Line 141
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 142
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 144
		      call 'wxe_util':'from_bool'
			  (Enable)
		  in  let <_cor8> =
			  %% Line 144
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Itemid>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 143
			  call 'wxe_util':'cast'
			      (857, _cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'enable',3}}] )
	    -| ['compiler_generated'] )
	end
'enableTop'/3 =
    %% Line 149
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor12},Pos,Flag>
	      when let <_cor3> =
		    %% Line 150
		    call 'erlang':'is_integer'
			(Pos)
		in  let <_cor4> =
			%% Line 150
			call 'erlang':'is_boolean'
			    (Flag)
		    in  %% Line 150
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 151
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor7> =
		      %% Line 153
		      call 'wxe_util':'from_bool'
			  (Flag)
		  in  let <_cor8> =
			  %% Line 153
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<Pos>(32,1,'integer',['unsigned'|['native']]),
			    #<_cor7>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 152
			  call 'wxe_util':'cast'
			      (859, _cor8)
	  ( <_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9})
		  -| [{'function_name',{'enableTop',3}}] )
	    -| ['compiler_generated'] )
	end
'findMenu'/2 =
    %% Line 158
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},Title>
	      when %% Line 159
		call 'erlang':'is_list'
		    (Title) ->
	      do  %% Line 160
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Title_UC> =
		      %% Line 161
		      call 'unicode':'characters_to_binary'
			  ([Title|[0]])
		  in  let <_cor10> =
			  %% Line 163
			  call 'erlang':'byte_size'
			      (Title_UC)
		      in  let <_cor5> =
			      %% Line 163
			      call 'erlang':'byte_size'
				  (Title_UC)
			  in  let <_cor6> =
				  %% Line 163
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 163
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 163
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 163
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 163
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<Title_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 162
						  call 'wxe_util':'call'
						      (860, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'findMenu',2}}] )
	    -| ['compiler_generated'] )
	end
'findMenuItem'/3 =
    %% Line 168
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor25},MenuString,ItemString>
	      when let <_cor3> =
		    %% Line 169
		    call 'erlang':'is_list'
			(MenuString)
		in  let <_cor4> =
			%% Line 169
			call 'erlang':'is_list'
			    (ItemString)
		    in  %% Line 169
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 170
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MenuString_UC> =
		      %% Line 171
		      call 'unicode':'characters_to_binary'
			  ([MenuString|[0]])
		  in  let <ItemString_UC> =
			  %% Line 172
			  call 'unicode':'characters_to_binary'
			      ([ItemString|[0]])
		      in  let <_cor20> =
			      %% Line 174
			      call 'erlang':'byte_size'
				  (MenuString_UC)
			  in  let <_cor15> =
				  %% Line 174
				  call 'erlang':'byte_size'
				      (MenuString_UC)
			      in  let <_cor16> =
				      %% Line 174
				      call 'erlang':'+'
					  (0, _cor15)
				  in  let <_cor17> =
					  %% Line 174
					  call 'erlang':'band'
					      (_cor16, 7)
				      in  let <_cor18> =
					      %% Line 174
					      call 'erlang':'-'
						  (8, _cor17)
					  in  let <_cor19> =
						  %% Line 174
						  call 'erlang':'band'
						      (_cor18, 7)
					      in  let <_cor14> =
						      %% Line 174
						      call 'erlang':'byte_size'
							  (ItemString_UC)
						  in  let <_cor9> =
							  %% Line 174
							  call 'erlang':'byte_size'
							      (ItemString_UC)
						      in  let <_cor10> =
							      %% Line 174
							      call 'erlang':'+'
								  (4, _cor9)
							  in  let <_cor11> =
								  %% Line 174
								  call 'erlang':'band'
								      (_cor10, 7)
							      in  let <_cor12> =
								      %% Line 174
								      call 'erlang':'-'
									  (8, _cor11)
								  in  let <_cor13> =
									  %% Line 174
									  call 'erlang':'band'
									      (_cor12, 7)
								      in  let <_cor21> =
									      %% Line 174
									      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
										#<_cor20>(32,1,'integer',['unsigned'|['native']]),
										#<MenuString_UC>('all',8,'binary',['unsigned'|['big']]),
										#<0>(_cor19,8,'integer',['unsigned'|['big']]),
										#<_cor14>(32,1,'integer',['unsigned'|['native']]),
										#<ItemString_UC>('all',8,'binary',['unsigned'|['big']]),
										#<0>(_cor13,8,'integer',['unsigned'|['big']])}#
									  in  %% Line 173
									      call 'wxe_util':'call'
										  (861, _cor21)
	  ( <_cor24,_cor23,_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22})
		  -| [{'function_name',{'findMenuItem',3}}] )
	    -| ['compiler_generated'] )
	end
'findItem'/2 =
    %% Line 179
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Id>
	      when %% Line 180
		call 'erlang':'is_integer'
		    (Id) ->
	      do  %% Line 181
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 183
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Id>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 182
		      call 'wxe_util':'call'
			  (862, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'findItem',2}}] )
	    -| ['compiler_generated'] )
	end
'getHelpString'/2 =
    %% Line 188
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Itemid>
	      when %% Line 189
		call 'erlang':'is_integer'
		    (Itemid) ->
	      do  %% Line 190
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 192
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Itemid>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 191
		      call 'wxe_util':'call'
			  (863, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getHelpString',2}}] )
	    -| ['compiler_generated'] )
	end
'getLabel'/1 =
    %% Line 197
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 198
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 200
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 199
		      call 'wxe_util':'call'
			  (865, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getLabel',1}}] )
	    -| ['compiler_generated'] )
	end
'getLabel'/2 =
    %% Line 205
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Itemid>
	      when %% Line 206
		call 'erlang':'is_integer'
		    (Itemid) ->
	      do  %% Line 207
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 209
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Itemid>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 208
		      call 'wxe_util':'call'
			  (864, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getLabel',2}}] )
	    -| ['compiler_generated'] )
	end
'getLabelTop'/2 =
    %% Line 214
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 215
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 216
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 218
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 217
		      call 'wxe_util':'call'
			  (866, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getLabelTop',2}}] )
	    -| ['compiler_generated'] )
	end
'getMenu'/2 =
    %% Line 223
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 224
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 225
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 227
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 226
		      call 'wxe_util':'call'
			  (867, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'getMenu',2}}] )
	    -| ['compiler_generated'] )
	end
'getMenuCount'/1 =
    %% Line 232
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 233
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 235
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 234
		      call 'wxe_util':'call'
			  (868, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getMenuCount',1}}] )
	    -| ['compiler_generated'] )
	end
'insert'/4 =
    %% Line 240
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor22},Pos,{'wx_ref',MenuRef,MenuT,_cor23},Title>
	      when let <_cor4> =
		    %% Line 241
		    call 'erlang':'is_integer'
			(Pos)
		in  let <_cor5> =
			%% Line 241
			call 'erlang':'is_list'
			    (Title)
		    in  %% Line 241
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 242
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 243
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (MenuT,
				       'wxMenu') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call MenuT:'parent_class'
				    ('wxMenu')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <Title_UC> =
			  %% Line 244
			  call 'unicode':'characters_to_binary'
			      ([Title|[0]])
		      in  let <_cor16> =
			      %% Line 246
			      call 'erlang':'byte_size'
				  (Title_UC)
			  in  let <_cor11> =
				  %% Line 246
				  call 'erlang':'byte_size'
				      (Title_UC)
			      in  let <_cor12> =
				      %% Line 246
				      call 'erlang':'+'
					  (0, _cor11)
				  in  let <_cor13> =
					  %% Line 246
					  call 'erlang':'band'
					      (_cor12, 7)
				      in  let <_cor14> =
					      %% Line 246
					      call 'erlang':'-'
						  (8, _cor13)
					  in  let <_cor15> =
						  %% Line 246
						  call 'erlang':'band'
						      (_cor14, 7)
					      in  let <_cor17> =
						      %% Line 246
						      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
							#<Pos>(32,1,'integer',['unsigned'|['native']]),
							#<MenuRef>(32,1,'integer',['unsigned'|['native']]),
							#<_cor16>(32,1,'integer',['unsigned'|['native']]),
							#<Title_UC>('all',8,'binary',['unsigned'|['big']]),
							#<0>(_cor15,8,'integer',['unsigned'|['big']])}#
						  in  %% Line 245
						      call 'wxe_util':'call'
							  (869, _cor17)
	  ( <_cor21,_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor21,_cor20,_cor19,_cor18})
		  -| [{'function_name',{'insert',4}}] )
	    -| ['compiler_generated'] )
	end
'isChecked'/2 =
    %% Line 251
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Itemid>
	      when %% Line 252
		call 'erlang':'is_integer'
		    (Itemid) ->
	      do  %% Line 253
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 255
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Itemid>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 254
		      call 'wxe_util':'call'
			  (870, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'isChecked',2}}] )
	    -| ['compiler_generated'] )
	end
'isEnabled'/1 =
    %% Line 260
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 261
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 263
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 262
		      call 'wxe_util':'call'
			  (872, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isEnabled',1}}] )
	    -| ['compiler_generated'] )
	end
'isEnabled'/2 =
    %% Line 268
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Itemid>
	      when %% Line 269
		call 'erlang':'is_integer'
		    (Itemid) ->
	      do  %% Line 270
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 272
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Itemid>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 271
		      call 'wxe_util':'call'
			  (871, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'isEnabled',2}}] )
	    -| ['compiler_generated'] )
	end
'remove'/2 =
    %% Line 277
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 278
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 279
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 281
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 280
		      call 'wxe_util':'call'
			  (873, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'remove',2}}] )
	    -| ['compiler_generated'] )
	end
'replace'/4 =
    %% Line 286
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor22},Pos,{'wx_ref',MenuRef,MenuT,_cor23},Title>
	      when let <_cor4> =
		    %% Line 287
		    call 'erlang':'is_integer'
			(Pos)
		in  let <_cor5> =
			%% Line 287
			call 'erlang':'is_list'
			    (Title)
		    in  %% Line 287
			call 'erlang':'and'
			    (_cor4, _cor5) ->
	      do  %% Line 288
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 289
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (MenuT,
				       'wxMenu') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call MenuT:'parent_class'
				    ('wxMenu')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <Title_UC> =
			  %% Line 290
			  call 'unicode':'characters_to_binary'
			      ([Title|[0]])
		      in  let <_cor16> =
			      %% Line 292
			      call 'erlang':'byte_size'
				  (Title_UC)
			  in  let <_cor11> =
				  %% Line 292
				  call 'erlang':'byte_size'
				      (Title_UC)
			      in  let <_cor12> =
				      %% Line 292
				      call 'erlang':'+'
					  (0, _cor11)
				  in  let <_cor13> =
					  %% Line 292
					  call 'erlang':'band'
					      (_cor12, 7)
				      in  let <_cor14> =
					      %% Line 292
					      call 'erlang':'-'
						  (8, _cor13)
					  in  let <_cor15> =
						  %% Line 292
						  call 'erlang':'band'
						      (_cor14, 7)
					      in  let <_cor17> =
						      %% Line 292
						      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
							#<Pos>(32,1,'integer',['unsigned'|['native']]),
							#<MenuRef>(32,1,'integer',['unsigned'|['native']]),
							#<_cor16>(32,1,'integer',['unsigned'|['native']]),
							#<Title_UC>('all',8,'binary',['unsigned'|['big']]),
							#<0>(_cor15,8,'integer',['unsigned'|['big']])}#
						  in  %% Line 291
						      call 'wxe_util':'call'
							  (874, _cor17)
	  ( <_cor21,_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor21,_cor20,_cor19,_cor18})
		  -| [{'function_name',{'replace',4}}] )
	    -| ['compiler_generated'] )
	end
'setHelpString'/3 =
    %% Line 297
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},Itemid,HelpString>
	      when let <_cor3> =
		    %% Line 298
		    call 'erlang':'is_integer'
			(Itemid)
		in  let <_cor4> =
			%% Line 298
			call 'erlang':'is_list'
			    (HelpString)
		    in  %% Line 298
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 299
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <HelpString_UC> =
		      %% Line 300
		      call 'unicode':'characters_to_binary'
			  ([HelpString|[0]])
		  in  let <_cor13> =
			  %% Line 302
			  call 'erlang':'byte_size'
			      (HelpString_UC)
		      in  let <_cor8> =
			      %% Line 302
			      call 'erlang':'byte_size'
				  (HelpString_UC)
			  in  let <_cor9> =
				  %% Line 302
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 302
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 302
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 302
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 302
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<Itemid>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<HelpString_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 301
						  call 'wxe_util':'cast'
						      (875, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'setHelpString',3}}] )
	    -| ['compiler_generated'] )
	end
'setLabel'/2 =
    %% Line 307
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor14},S>
	      when %% Line 308
		call 'erlang':'is_list'
		    (S) ->
	      do  %% Line 309
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <S_UC> =
		      %% Line 310
		      call 'unicode':'characters_to_binary'
			  ([S|[0]])
		  in  let <_cor10> =
			  %% Line 312
			  call 'erlang':'byte_size'
			      (S_UC)
		      in  let <_cor5> =
			      %% Line 312
			      call 'erlang':'byte_size'
				  (S_UC)
			  in  let <_cor6> =
				  %% Line 312
				  call 'erlang':'+'
				      (0, _cor5)
			      in  let <_cor7> =
				      %% Line 312
				      call 'erlang':'band'
					  (_cor6, 7)
				  in  let <_cor8> =
					  %% Line 312
					  call 'erlang':'-'
					      (8, _cor7)
				      in  let <_cor9> =
					      %% Line 312
					      call 'erlang':'band'
						  (_cor8, 7)
					  in  let <_cor11> =
						  %% Line 312
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']]),
						    #<S_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor9,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 311
						  call 'wxe_util':'cast'
						      (877, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'setLabel',2}}] )
	    -| ['compiler_generated'] )
	end
'setLabel'/3 =
    %% Line 317
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},Itemid,Label>
	      when let <_cor3> =
		    %% Line 318
		    call 'erlang':'is_integer'
			(Itemid)
		in  let <_cor4> =
			%% Line 318
			call 'erlang':'is_list'
			    (Label)
		    in  %% Line 318
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 319
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Label_UC> =
		      %% Line 320
		      call 'unicode':'characters_to_binary'
			  ([Label|[0]])
		  in  let <_cor13> =
			  %% Line 322
			  call 'erlang':'byte_size'
			      (Label_UC)
		      in  let <_cor8> =
			      %% Line 322
			      call 'erlang':'byte_size'
				  (Label_UC)
			  in  let <_cor9> =
				  %% Line 322
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 322
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 322
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 322
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 322
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<Itemid>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<Label_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 321
						  call 'wxe_util':'cast'
						      (876, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'setLabel',3}}] )
	    -| ['compiler_generated'] )
	end
'setLabelTop'/3 =
    %% Line 327
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},Pos,Label>
	      when let <_cor3> =
		    %% Line 328
		    call 'erlang':'is_integer'
			(Pos)
		in  let <_cor4> =
			%% Line 328
			call 'erlang':'is_list'
			    (Label)
		    in  %% Line 328
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 329
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <Label_UC> =
		      %% Line 330
		      call 'unicode':'characters_to_binary'
			  ([Label|[0]])
		  in  let <_cor13> =
			  %% Line 332
			  call 'erlang':'byte_size'
			      (Label_UC)
		      in  let <_cor8> =
			      %% Line 332
			      call 'erlang':'byte_size'
				  (Label_UC)
			  in  let <_cor9> =
				  %% Line 332
				  call 'erlang':'+'
				      (4, _cor8)
			      in  let <_cor10> =
				      %% Line 332
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 332
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 332
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 332
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<Pos>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<Label_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']])}#
					      in  %% Line 331
						  call 'wxe_util':'cast'
						      (878, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'setLabelTop',3}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 336
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 337
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxMenuBar') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxMenuBar')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 338
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 339
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'warpPointer'/3 =
    %% Line 342
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 344
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 346
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 348
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 350
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 352
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 354
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 356
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 358
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 360
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 362
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 364
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 366
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 368
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 370
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 372
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 374
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 376
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 378
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 380
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 382
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 384
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 386
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 388
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 390
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 392
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 394
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 396
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 398
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 400
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 402
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 404
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 406
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 408
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 410
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 412
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 414
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 416
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 418
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 420
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 422
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 424
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 426
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 428
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 430
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 432
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 434
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 436
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 438
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 440
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 442
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 444
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 446
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 448
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 450
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 452
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 454
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 456
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 458
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 460
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 462
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 464
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 466
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 468
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 470
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 472
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 474
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 476
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 478
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 480
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 482
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 484
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 486
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 488
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 490
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 492
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 494
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 496
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 498
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 500
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 502
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 504
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 506
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 508
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 510
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 512
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 514
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 516
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 518
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 520
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 522
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 524
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 526
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 528
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 530
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 532
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 534
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 536
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 538
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 540
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'invalidateBestSize'/1 =
    %% Line 542
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 544
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 546
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 548
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 550
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 552
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 554
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 556
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 558
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 560
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 562
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 564
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 566
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 568
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 570
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 572
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 574
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 576
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 578
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 580
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 582
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 584
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 586
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 588
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 590
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 592
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 594
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 596
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 598
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 600
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 602
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 604
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 606
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 608
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 610
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 612
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 614
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 616
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 618
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 620
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 622
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 624
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 626
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 628
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 630
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 632
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 634
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 636
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 638
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 640
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 642
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'disable'/1 =
    %% Line 644
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 646
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 648
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 650
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 652
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 654
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 656
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 658
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 660
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 662
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 664
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 666
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 668
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 670
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 672
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 674
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 676
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 678
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 680
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 683
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 685
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 687
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 689
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 691
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxMenuBar')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxMenuBar', _cor0)
end