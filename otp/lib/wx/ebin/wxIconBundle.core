module 'wxIconBundle' ['addIcon'/2,
		       'addIcon'/3,
		       'destroy'/1,
		       'getIcon'/1,
		       'getIcon'/2,
		       'module_info'/0,
		       'module_info'/1,
		       'new'/0,
		       'new'/1,
		       'new'/2,
		       'parent_class'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 32
		'export_type' =
		    %% Line 32
		    [{'wxIconBundle',0}],
		%% Line 36
		'type' =
		    %% Line 36
		    [{'wxIconBundle',{'remote_type',36,[{'atom',36,'wx'}|[{'atom',36,'wx_object'}|[[]]]]},[]}],
		%% Line 38
		'spec' =
		    %% Line 38
		    [{{'new',0},[{'type',38,'fun',[{'type',38,'product',[]}|[{'type',38,'wxIconBundle',[]}]]}]}],
		%% Line 44
		'spec' =
		    %% Line 44
		    [{{'new',1},[{'type',44,'bounded_fun',[{'type',44,'fun',[{'type',44,'product',[{'var',44,'Ic'}]}|[{'type',44,'wxIconBundle',[]}]]}|[[{'type',45,'constraint',[{'atom',45,'is_subtype'}|[[{'var',45,'Ic'}|[{'type',45,'union',[{'type',45,'wxIconBundle',[]}|[{'remote_type',45,[{'atom',45,'wxIcon'}|[{'atom',45,'wxIcon'}|[[]]]]}]]}]]]]}]]]}]}],
		%% Line 57
		'spec' =
		    %% Line 57
		    [{{'new',2},[{'type',57,'bounded_fun',[{'type',57,'fun',[{'type',57,'product',[{'var',57,'File'}|[{'var',57,'Type'}]]}|[{'type',57,'wxIconBundle',[]}]]}|[[{'type',58,'constraint',[{'atom',58,'is_subtype'}|[[{'var',58,'File'}|[{'remote_type',58,[{'atom',58,'unicode'}|[{'atom',58,'chardata'}|[[]]]]}]]]]}|[{'type',58,'constraint',[{'atom',58,'is_subtype'}|[[{'var',58,'Type'}|[{'type',58,'integer',[]}]]]]}]]]]}]}],
		%% Line 66
		'spec' =
		    %% Line 66
		    [{{'addIcon',2},[{'type',66,'bounded_fun',[{'type',66,'fun',[{'type',66,'product',[{'var',66,'This'}|[{'var',66,'Icon'}]]}|[{'atom',66,'ok'}]]}|[[{'type',67,'constraint',[{'atom',67,'is_subtype'}|[[{'var',67,'This'}|[{'type',67,'wxIconBundle',[]}]]]]}|[{'type',67,'constraint',[{'atom',67,'is_subtype'}|[[{'var',67,'Icon'}|[{'remote_type',67,[{'atom',67,'wxIcon'}|[{'atom',67,'wxIcon'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 75
		'spec' =
		    %% Line 75
		    [{{'addIcon',3},[{'type',75,'bounded_fun',[{'type',75,'fun',[{'type',75,'product',[{'var',75,'This'}|[{'var',75,'File'}|[{'var',75,'Type'}]]]}|[{'atom',75,'ok'}]]}|[[{'type',76,'constraint',[{'atom',76,'is_subtype'}|[[{'var',76,'This'}|[{'type',76,'wxIconBundle',[]}]]]]}|[{'type',76,'constraint',[{'atom',76,'is_subtype'}|[[{'var',76,'File'}|[{'remote_type',76,[{'atom',76,'unicode'}|[{'atom',76,'chardata'}|[[]]]]}]]]]}|[{'type',76,'constraint',[{'atom',76,'is_subtype'}|[[{'var',76,'Type'}|[{'type',76,'integer',[]}]]]]}]]]]]}]}],
		%% Line 85
		'spec' =
		    %% Line 85
		    [{{'getIcon',1},[{'type',85,'bounded_fun',[{'type',85,'fun',[{'type',85,'product',[{'var',85,'This'}]}|[{'remote_type',85,[{'atom',85,'wxIcon'}|[{'atom',85,'wxIcon'}|[[]]]]}]]}|[[{'type',86,'constraint',[{'atom',86,'is_subtype'}|[[{'var',86,'This'}|[{'type',86,'wxIconBundle',[]}]]]]}]]]}]}],
		%% Line 97
		'spec' =
		    %% Line 97
		    [{{'getIcon',2},[{'type',97,'bounded_fun',[{'type',97,'fun',[{'type',97,'product',[{'var',97,'This'}|[{'type',97,'list',[{'var',97,'Option'}]}]]}|[{'remote_type',97,[{'atom',97,'wxIcon'}|[{'atom',97,'wxIcon'}|[[]]]]}]]}|[[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'This'}|[{'type',98,'wxIconBundle',[]}]]]]}|[{'type',99,'constraint',[{'atom',99,'is_subtype'}|[[{'var',99,'Option'}|[{'type',99,'tuple',[{'atom',99,'size'}|[{'type',99,'integer',[]}]]}]]]]}]]]]}|[{'type',100,'bounded_fun',[{'type',100,'fun',[{'type',100,'product',[{'var',100,'This'}|[{'var',100,'Size'}]]}|[{'remote_type',100,[{'atom',100,'wxIcon'}|[{'atom',100,'wxIcon'}|[[]]]]}]]}|[[{'type',101,'constraint',[{'atom',101,'is_subtype'}|[[{'var',101,'This'}|[{'type',101,'wxIconBundle',[]}]]]]}|[{'type',101,'constraint',[{'atom',101,'is_subtype'}|[[{'var',101,'Size'}|[{'type',101,'tuple',[{'ann_type',101,[{'var',101,'W'}|[{'type',101,'integer',[]}]]}|[{'ann_type',101,[{'var',101,'H'}|[{'type',101,'integer',[]}]]}]]}]]]]}]]]]}]]}],
		%% Line 117
		'spec' =
		    %% Line 117
		    [{{'destroy',1},[{'type',117,'fun',[{'type',117,'product',[{'ann_type',117,[{'var',117,'This'}|[{'type',117,'wxIconBundle',[]}]]}]}|[{'atom',117,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 34
    fun (_cor0) ->
	call 'erlang':'error'
	    ({'badtype','wxIconBundle'})
'new'/0 =
    %% Line 39
    fun () ->
	%% Line 40
	call 'wxe_util':'construct'
	    (1058, %% Line 41
		   #{}#)
'new'/1 =
    %% Line 46
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',IcRef,IcT,_cor15}> when 'true' ->
	      let <_cor7> =
		  %% Line 47
		  try
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (IcT,
				       'wxIconBundle') ->
				'true'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call IcT:'parent_class'
				    ('wxIconBundle')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <_cor3> ->
		      _cor3
		  catch <_cor6,_cor5,_cor4> ->
		      'false'
	      in  let <_cor11> =
		      %% Line 47
		      case _cor7 of
			%% Line 48
			<'true'> when 'true' ->
			    %% Line 49
			    1061
			%% Line 50
			<_cor19> when 'true' ->
			    do  ( case <> of
				    ( <>
					  when call 'erlang':'=:='
						(IcT,
						 'wxIcon') ->
					  'ok'
				      -| ['compiler_generated'] )
				    ( <> when 'true' ->
					  call IcT:'parent_class'
					      ('wxIcon')
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
				%% Line 51
				1060
		      end
		  in  let <_cor13> =
			  %% Line 54
			  #{#<IcRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 53
			  call 'wxe_util':'construct'
			      (_cor11, _cor13)
	  ( <_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'new'/2 =
    %% Line 59
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <File,Type>
	      when let <_cor2> =
		    %% Line 60
		    call 'erlang':'is_list'
			(File)
		in  let <_cor3> =
			%% Line 60
			call 'erlang':'is_integer'
			    (Type)
		    in  %% Line 60
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      let <File_UC> =
		  %% Line 61
		  call 'unicode':'characters_to_binary'
		      ([File|[0]])
	      in  let <_cor10> =
		      %% Line 63
		      call 'erlang':'byte_size'
			  (File_UC)
		  in  let <_cor5> =
			  %% Line 63
			  call 'erlang':'byte_size'
			      (File_UC)
		      in  let <_cor6> =
			      %% Line 63
			      call 'erlang':'+'
				  (4, _cor5)
			  in  let <_cor7> =
				  %% Line 63
				  call 'erlang':'band'
				      (_cor6, 7)
			      in  let <_cor8> =
				      %% Line 63
				      call 'erlang':'-'
					  (8, _cor7)
				  in  let <_cor9> =
					  %% Line 63
					  call 'erlang':'band'
					      (_cor8, 7)
				      in  let <_cor11> =
					      %% Line 63
					      #{#<_cor10>(32,1,'integer',['unsigned'|['native']]),
						#<File_UC>('all',8,'binary',['unsigned'|['big']]),
						#<0>(_cor9,8,'integer',['unsigned'|['big']]),
						#<Type>(32,1,'integer',['unsigned'|['native']])}#
					  in  %% Line 62
					      call 'wxe_util':'construct'
						  (1059, _cor11)
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'addIcon'/2 =
    %% Line 68
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',IconRef,IconT,_cor10}> when 'true' ->
	      do  %% Line 69
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxIconBundle') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxIconBundle')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 70
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (IconT,
				       'wxIcon') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call IconT:'parent_class'
				    ('wxIcon')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 72
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<IconRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 71
			  call 'wxe_util':'cast'
			      (1064, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'addIcon',2}}] )
	    -| ['compiler_generated'] )
	end
'addIcon'/3 =
    %% Line 77
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor18},File,Type>
	      when let <_cor3> =
		    %% Line 78
		    call 'erlang':'is_list'
			(File)
		in  let <_cor4> =
			%% Line 78
			call 'erlang':'is_integer'
			    (Type)
		    in  %% Line 78
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 79
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxIconBundle') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxIconBundle')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <File_UC> =
		      %% Line 80
		      call 'unicode':'characters_to_binary'
			  ([File|[0]])
		  in  let <_cor13> =
			  %% Line 82
			  call 'erlang':'byte_size'
			      (File_UC)
		      in  let <_cor8> =
			      %% Line 82
			      call 'erlang':'byte_size'
				  (File_UC)
			  in  let <_cor9> =
				  %% Line 82
				  call 'erlang':'+'
				      (0, _cor8)
			      in  let <_cor10> =
				      %% Line 82
				      call 'erlang':'band'
					  (_cor9, 7)
				  in  let <_cor11> =
					  %% Line 82
					  call 'erlang':'-'
					      (8, _cor10)
				      in  let <_cor12> =
					      %% Line 82
					      call 'erlang':'band'
						  (_cor11, 7)
					  in  let <_cor14> =
						  %% Line 82
						  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor13>(32,1,'integer',['unsigned'|['native']]),
						    #<File_UC>('all',8,'binary',['unsigned'|['big']]),
						    #<0>(_cor12,8,'integer',['unsigned'|['big']]),
						    #<Type>(32,1,'integer',['unsigned'|['native']])}#
					      in  %% Line 81
						  call 'wxe_util':'cast'
						      (1063, _cor14)
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'addIcon',3}}] )
	    -| ['compiler_generated'] )
	end
'getIcon'/1 =
    %% Line 88
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 89
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 90
	      apply 'getIcon'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'getIcon',1}}] )
	    -| ['compiler_generated'] )
	end
'getIcon'/2 =
    %% Line 102
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor20},Options>
	      when %% Line 103
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 104
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxIconBundle') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxIconBundle')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 105
		      ( fun (_cor6,_cor5) ->
			    case <_cor6,_cor5> of
			      <{'size',Size},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<Size>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 106
			      <BadOpt,_cor21> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-getIcon/2-fun-0-'}}] )
		  in  let <_cor10> =
			  %% Line 107
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 107
			      call 'erlang':'list_to_binary'
				  (_cor10)
			  in  let <_cor12> =
				  %% Line 109
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 108
				  call 'wxe_util':'call'
				      (1066, _cor12)
	  %% Line 110
	  <{'wx_ref',ThisRef,ThisT,_cor22},{SizeW,SizeH}>
	      when let <_cor13> =
		    %% Line 111
		    call 'erlang':'is_integer'
			(SizeW)
		in  let <_cor14> =
			%% Line 111
			call 'erlang':'is_integer'
			    (SizeH)
		    in  %% Line 111
			call 'erlang':'and'
			    (_cor13, _cor14) ->
	      do  %% Line 112
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxIconBundle') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxIconBundle')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor17> =
		      %% Line 114
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<SizeW>(32,1,'integer',['unsigned'|['native']]),
			#<SizeH>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 113
		      call 'wxe_util':'call'
			  (1065, _cor17)
	  ( <_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18})
		  -| [{'function_name',{'getIcon',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 118
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 119
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxIconBundle') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxIconBundle')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 120
		      call 'wxe_util':'destroy'
			  (1062, Obj)
		      %% Line 121
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxIconBundle')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxIconBundle', _cor0)
end