module 'wxGauge' ['cacheBestSize'/2,
		  'captureMouse'/1,
		  'center'/1,
		  'center'/2,
		  'centerOnParent'/1,
		  'centerOnParent'/2,
		  'centre'/1,
		  'centre'/2,
		  'centreOnParent'/1,
		  'centreOnParent'/2,
		  'clearBackground'/1,
		  'clientToScreen'/2,
		  'clientToScreen'/3,
		  'close'/1,
		  'close'/2,
		  'connect'/2,
		  'connect'/3,
		  'convertDialogToPixels'/2,
		  'convertPixelsToDialog'/2,
		  'create'/4,
		  'create'/5,
		  'destroy'/1,
		  'destroyChildren'/1,
		  'disable'/1,
		  'disconnect'/1,
		  'disconnect'/2,
		  'disconnect'/3,
		  'enable'/1,
		  'enable'/2,
		  'findWindow'/2,
		  'fit'/1,
		  'fitInside'/1,
		  'freeze'/1,
		  'getAcceleratorTable'/1,
		  'getBackgroundColour'/1,
		  'getBackgroundStyle'/1,
		  'getBestSize'/1,
		  'getBezelFace'/1,
		  'getCaret'/1,
		  'getCharHeight'/1,
		  'getCharWidth'/1,
		  'getChildren'/1,
		  'getClientSize'/1,
		  'getContainingSizer'/1,
		  'getCursor'/1,
		  'getDropTarget'/1,
		  'getEventHandler'/1,
		  'getExtraStyle'/1,
		  'getFont'/1,
		  'getForegroundColour'/1,
		  'getGrandParent'/1,
		  'getHandle'/1,
		  'getHelpText'/1,
		  'getId'/1,
		  'getLabel'/1,
		  'getMaxSize'/1,
		  'getMinSize'/1,
		  'getName'/1,
		  'getParent'/1,
		  'getPosition'/1,
		  'getRange'/1,
		  'getRect'/1,
		  'getScreenPosition'/1,
		  'getScreenRect'/1,
		  'getScrollPos'/2,
		  'getScrollRange'/2,
		  'getScrollThumb'/2,
		  'getShadowWidth'/1,
		  'getSize'/1,
		  'getSizer'/1,
		  'getTextExtent'/2,
		  'getTextExtent'/3,
		  'getToolTip'/1,
		  'getUpdateRegion'/1,
		  'getValue'/1,
		  'getVirtualSize'/1,
		  'getWindowStyleFlag'/1,
		  'getWindowVariant'/1,
		  'hasCapture'/1,
		  'hasScrollbar'/2,
		  'hasTransparentBackground'/1,
		  'hide'/1,
		  'inheritAttributes'/1,
		  'initDialog'/1,
		  'invalidateBestSize'/1,
		  'isEnabled'/1,
		  'isExposed'/2,
		  'isExposed'/3,
		  'isExposed'/5,
		  'isRetained'/1,
		  'isShown'/1,
		  'isTopLevel'/1,
		  'isVertical'/1,
		  'layout'/1,
		  'lineDown'/1,
		  'lineUp'/1,
		  'lower'/1,
		  'makeModal'/1,
		  'makeModal'/2,
		  'module_info'/0,
		  'module_info'/1,
		  'move'/2,
		  'move'/3,
		  'move'/4,
		  'moveAfterInTabOrder'/2,
		  'moveBeforeInTabOrder'/2,
		  'navigate'/1,
		  'navigate'/2,
		  'new'/0,
		  'new'/3,
		  'new'/4,
		  'pageDown'/1,
		  'pageUp'/1,
		  'parent_class'/1,
		  'popEventHandler'/1,
		  'popEventHandler'/2,
		  'popupMenu'/2,
		  'popupMenu'/3,
		  'popupMenu'/4,
		  'pulse'/1,
		  'raise'/1,
		  'refresh'/1,
		  'refresh'/2,
		  'refreshRect'/2,
		  'refreshRect'/3,
		  'releaseMouse'/1,
		  'removeChild'/2,
		  'reparent'/2,
		  'screenToClient'/1,
		  'screenToClient'/2,
		  'scrollLines'/2,
		  'scrollPages'/2,
		  'scrollWindow'/3,
		  'scrollWindow'/4,
		  'setAcceleratorTable'/2,
		  'setAutoLayout'/2,
		  'setBackgroundColour'/2,
		  'setBackgroundStyle'/2,
		  'setBezelFace'/2,
		  'setCaret'/2,
		  'setClientSize'/2,
		  'setClientSize'/3,
		  'setContainingSizer'/2,
		  'setCursor'/2,
		  'setDropTarget'/2,
		  'setExtraStyle'/2,
		  'setFocus'/1,
		  'setFocusFromKbd'/1,
		  'setFont'/2,
		  'setForegroundColour'/2,
		  'setHelpText'/2,
		  'setId'/2,
		  'setLabel'/2,
		  'setMaxSize'/2,
		  'setMinSize'/2,
		  'setName'/2,
		  'setOwnBackgroundColour'/2,
		  'setOwnFont'/2,
		  'setOwnForegroundColour'/2,
		  'setPalette'/2,
		  'setRange'/2,
		  'setScrollPos'/3,
		  'setScrollPos'/4,
		  'setScrollbar'/5,
		  'setScrollbar'/6,
		  'setShadowWidth'/2,
		  'setSize'/2,
		  'setSize'/3,
		  'setSize'/5,
		  'setSize'/6,
		  'setSizeHints'/2,
		  'setSizeHints'/3,
		  'setSizeHints'/4,
		  'setSizer'/2,
		  'setSizer'/3,
		  'setSizerAndFit'/2,
		  'setSizerAndFit'/3,
		  'setThemeEnabled'/2,
		  'setToolTip'/2,
		  'setValue'/2,
		  'setVirtualSize'/2,
		  'setVirtualSize'/3,
		  'setVirtualSizeHints'/2,
		  'setVirtualSizeHints'/3,
		  'setVirtualSizeHints'/4,
		  'setWindowStyle'/2,
		  'setWindowStyleFlag'/2,
		  'setWindowVariant'/2,
		  'shouldInheritColours'/1,
		  'show'/1,
		  'show'/2,
		  'thaw'/1,
		  'transferDataFromWindow'/1,
		  'transferDataToWindow'/1,
		  'update'/1,
		  'updateWindowUI'/1,
		  'updateWindowUI'/2,
		  'validate'/1,
		  'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 74
		'export_type' =
		    %% Line 74
		    [{'wxGauge',0}],
		%% Line 81
		'type' =
		    %% Line 81
		    [{'wxGauge',{'remote_type',81,[{'atom',81,'wx'}|[{'atom',81,'wx_object'}|[[]]]]},[]}],
		%% Line 83
		'spec' =
		    %% Line 83
		    [{{'new',0},[{'type',83,'fun',[{'type',83,'product',[]}|[{'type',83,'wxGauge',[]}]]}]}],
		%% Line 89
		'spec' =
		    %% Line 89
		    [{{'new',3},[{'type',89,'bounded_fun',[{'type',89,'fun',[{'type',89,'product',[{'var',89,'Parent'}|[{'var',89,'Id'}|[{'var',89,'Range'}]]]}|[{'type',89,'wxGauge',[]}]]}|[[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'Parent'}|[{'remote_type',90,[{'atom',90,'wxWindow'}|[{'atom',90,'wxWindow'}|[[]]]]}]]]]}|[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'Id'}|[{'type',90,'integer',[]}]]]]}|[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'Range'}|[{'type',90,'integer',[]}]]]]}]]]]]}]}],
		%% Line 97
		'spec' =
		    %% Line 97
		    [{{'new',4},[{'type',97,'bounded_fun',[{'type',97,'fun',[{'type',97,'product',[{'var',97,'Parent'}|[{'var',97,'Id'}|[{'var',97,'Range'}|[{'type',97,'list',[{'var',97,'Option'}]}]]]]}|[{'type',97,'wxGauge',[]}]]}|[[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'Parent'}|[{'remote_type',98,[{'atom',98,'wxWindow'}|[{'atom',98,'wxWindow'}|[[]]]]}]]]]}|[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'Id'}|[{'type',98,'integer',[]}]]]]}|[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'Range'}|[{'type',98,'integer',[]}]]]]}|[{'type',99,'constraint',[{'atom',99,'is_subtype'}|[[{'var',99,'Option'}|[{'type',99,'union',[{'type',99,'tuple',[{'atom',99,'pos'}|[{'type',99,'tuple',[{'ann_type',99,[{'var',99,'X'}|[{'type',99,'integer',[]}]]}|[{'ann_type',99,[{'var',99,'Y'}|[{'type',99,'integer',[]}]]}]]}]]}|[{'type',100,'tuple',[{'atom',100,'size'}|[{'type',100,'tuple',[{'ann_type',100,[{'var',100,'W'}|[{'type',100,'integer',[]}]]}|[{'ann_type',100,[{'var',100,'H'}|[{'type',100,'integer',[]}]]}]]}]]}|[{'type',101,'tuple',[{'atom',101,'style'}|[{'type',101,'integer',[]}]]}|[{'type',102,'tuple',[{'atom',102,'validator'}|[{'remote_type',102,[{'atom',102,'wx'}|[{'atom',102,'wx_object'}|[[]]]]}]]}]]]]}]]]]}]]]]]]}]}],
		%% Line 116
		'spec' =
		    %% Line 116
		    [{{'create',4},[{'type',116,'bounded_fun',[{'type',116,'fun',[{'type',116,'product',[{'var',116,'This'}|[{'var',116,'Parent'}|[{'var',116,'Id'}|[{'var',116,'Range'}]]]]}|[{'type',116,'boolean',[]}]]}|[[{'type',117,'constraint',[{'atom',117,'is_subtype'}|[[{'var',117,'This'}|[{'type',117,'wxGauge',[]}]]]]}|[{'type',117,'constraint',[{'atom',117,'is_subtype'}|[[{'var',117,'Parent'}|[{'remote_type',117,[{'atom',117,'wxWindow'}|[{'atom',117,'wxWindow'}|[[]]]]}]]]]}|[{'type',117,'constraint',[{'atom',117,'is_subtype'}|[[{'var',117,'Id'}|[{'type',117,'integer',[]}]]]]}|[{'type',117,'constraint',[{'atom',117,'is_subtype'}|[[{'var',117,'Range'}|[{'type',117,'integer',[]}]]]]}]]]]]]}]}],
		%% Line 124
		'spec' =
		    %% Line 124
		    [{{'create',5},[{'type',124,'bounded_fun',[{'type',124,'fun',[{'type',124,'product',[{'var',124,'This'}|[{'var',124,'Parent'}|[{'var',124,'Id'}|[{'var',124,'Range'}|[{'type',124,'list',[{'var',124,'Option'}]}]]]]]}|[{'type',124,'boolean',[]}]]}|[[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'This'}|[{'type',125,'wxGauge',[]}]]]]}|[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'Parent'}|[{'remote_type',125,[{'atom',125,'wxWindow'}|[{'atom',125,'wxWindow'}|[[]]]]}]]]]}|[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'Id'}|[{'type',125,'integer',[]}]]]]}|[{'type',125,'constraint',[{'atom',125,'is_subtype'}|[[{'var',125,'Range'}|[{'type',125,'integer',[]}]]]]}|[{'type',126,'constraint',[{'atom',126,'is_subtype'}|[[{'var',126,'Option'}|[{'type',126,'union',[{'type',126,'tuple',[{'atom',126,'pos'}|[{'type',126,'tuple',[{'ann_type',126,[{'var',126,'X'}|[{'type',126,'integer',[]}]]}|[{'ann_type',126,[{'var',126,'Y'}|[{'type',126,'integer',[]}]]}]]}]]}|[{'type',127,'tuple',[{'atom',127,'size'}|[{'type',127,'tuple',[{'ann_type',127,[{'var',127,'W'}|[{'type',127,'integer',[]}]]}|[{'ann_type',127,[{'var',127,'H'}|[{'type',127,'integer',[]}]]}]]}]]}|[{'type',128,'tuple',[{'atom',128,'style'}|[{'type',128,'integer',[]}]]}|[{'type',129,'tuple',[{'atom',129,'validator'}|[{'remote_type',129,[{'atom',129,'wx'}|[{'atom',129,'wx_object'}|[[]]]]}]]}]]]]}]]]]}]]]]]]]}]}],
		%% Line 144
		'spec' =
		    %% Line 144
		    [{{'getBezelFace',1},[{'type',144,'bounded_fun',[{'type',144,'fun',[{'type',144,'product',[{'var',144,'This'}]}|[{'type',144,'integer',[]}]]}|[[{'type',145,'constraint',[{'atom',145,'is_subtype'}|[[{'var',145,'This'}|[{'type',145,'wxGauge',[]}]]]]}]]]}]}],
		%% Line 152
		'spec' =
		    %% Line 152
		    [{{'getRange',1},[{'type',152,'bounded_fun',[{'type',152,'fun',[{'type',152,'product',[{'var',152,'This'}]}|[{'type',152,'integer',[]}]]}|[[{'type',153,'constraint',[{'atom',153,'is_subtype'}|[[{'var',153,'This'}|[{'type',153,'wxGauge',[]}]]]]}]]]}]}],
		%% Line 160
		'spec' =
		    %% Line 160
		    [{{'getShadowWidth',1},[{'type',160,'bounded_fun',[{'type',160,'fun',[{'type',160,'product',[{'var',160,'This'}]}|[{'type',160,'integer',[]}]]}|[[{'type',161,'constraint',[{'atom',161,'is_subtype'}|[[{'var',161,'This'}|[{'type',161,'wxGauge',[]}]]]]}]]]}]}],
		%% Line 168
		'spec' =
		    %% Line 168
		    [{{'getValue',1},[{'type',168,'bounded_fun',[{'type',168,'fun',[{'type',168,'product',[{'var',168,'This'}]}|[{'type',168,'integer',[]}]]}|[[{'type',169,'constraint',[{'atom',169,'is_subtype'}|[[{'var',169,'This'}|[{'type',169,'wxGauge',[]}]]]]}]]]}]}],
		%% Line 176
		'spec' =
		    %% Line 176
		    [{{'isVertical',1},[{'type',176,'bounded_fun',[{'type',176,'fun',[{'type',176,'product',[{'var',176,'This'}]}|[{'type',176,'boolean',[]}]]}|[[{'type',177,'constraint',[{'atom',177,'is_subtype'}|[[{'var',177,'This'}|[{'type',177,'wxGauge',[]}]]]]}]]]}]}],
		%% Line 184
		'spec' =
		    %% Line 184
		    [{{'setBezelFace',2},[{'type',184,'bounded_fun',[{'type',184,'fun',[{'type',184,'product',[{'var',184,'This'}|[{'var',184,'W'}]]}|[{'atom',184,'ok'}]]}|[[{'type',185,'constraint',[{'atom',185,'is_subtype'}|[[{'var',185,'This'}|[{'type',185,'wxGauge',[]}]]]]}|[{'type',185,'constraint',[{'atom',185,'is_subtype'}|[[{'var',185,'W'}|[{'type',185,'integer',[]}]]]]}]]]]}]}],
		%% Line 193
		'spec' =
		    %% Line 193
		    [{{'setRange',2},[{'type',193,'bounded_fun',[{'type',193,'fun',[{'type',193,'product',[{'var',193,'This'}|[{'var',193,'R'}]]}|[{'atom',193,'ok'}]]}|[[{'type',194,'constraint',[{'atom',194,'is_subtype'}|[[{'var',194,'This'}|[{'type',194,'wxGauge',[]}]]]]}|[{'type',194,'constraint',[{'atom',194,'is_subtype'}|[[{'var',194,'R'}|[{'type',194,'integer',[]}]]]]}]]]]}]}],
		%% Line 202
		'spec' =
		    %% Line 202
		    [{{'setShadowWidth',2},[{'type',202,'bounded_fun',[{'type',202,'fun',[{'type',202,'product',[{'var',202,'This'}|[{'var',202,'W'}]]}|[{'atom',202,'ok'}]]}|[[{'type',203,'constraint',[{'atom',203,'is_subtype'}|[[{'var',203,'This'}|[{'type',203,'wxGauge',[]}]]]]}|[{'type',203,'constraint',[{'atom',203,'is_subtype'}|[[{'var',203,'W'}|[{'type',203,'integer',[]}]]]]}]]]]}]}],
		%% Line 211
		'spec' =
		    %% Line 211
		    [{{'setValue',2},[{'type',211,'bounded_fun',[{'type',211,'fun',[{'type',211,'product',[{'var',211,'This'}|[{'var',211,'Pos'}]]}|[{'atom',211,'ok'}]]}|[[{'type',212,'constraint',[{'atom',212,'is_subtype'}|[[{'var',212,'This'}|[{'type',212,'wxGauge',[]}]]]]}|[{'type',212,'constraint',[{'atom',212,'is_subtype'}|[[{'var',212,'Pos'}|[{'type',212,'integer',[]}]]]]}]]]]}]}],
		%% Line 220
		'spec' =
		    %% Line 220
		    [{{'pulse',1},[{'type',220,'bounded_fun',[{'type',220,'fun',[{'type',220,'product',[{'var',220,'This'}]}|[{'atom',220,'ok'}]]}|[[{'type',221,'constraint',[{'atom',221,'is_subtype'}|[[{'var',221,'This'}|[{'type',221,'wxGauge',[]}]]]]}]]]}]}],
		%% Line 228
		'spec' =
		    %% Line 228
		    [{{'destroy',1},[{'type',228,'fun',[{'type',228,'product',[{'ann_type',228,[{'var',228,'This'}|[{'type',228,'wxGauge',[]}]]}]}|[{'atom',228,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 76
    fun (_cor0) ->
	case _cor0 of
	  <'wxControl'> when 'true' ->
	      'true'
	  %% Line 77
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 78
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 79
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxGauge'})
	end
'new'/0 =
    %% Line 84
    fun () ->
	%% Line 85
	call 'wxe_util':'construct'
	    (1596, %% Line 86
		   #{}#)
'new'/3 =
    %% Line 92
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor9,_cor10,_cor11},Id,Range>
	      when let <_cor3> =
		    %% Line 93
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor4> =
			%% Line 93
			call 'erlang':'is_integer'
			    (Range)
		    in  %% Line 93
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor3, _cor4)
			  -| ['compiler_generated'] ) ->
	      %% Line 94
	      apply 'new'/4
		  (Parent, Id, Range, [])
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'new'/4 =
    %% Line 103
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor28},Id,Range,Options>
	      when %% Line 104
		try
		    let <_cor4> =
			call 'erlang':'is_integer'
			    (Id)
		    in  let <_cor5> =
			    call 'erlang':'is_integer'
				(Range)
			in  let <_cor6> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor7> =
				    call 'erlang':'and'
					(_cor5, _cor6)
				in  call 'erlang':'and'
					(_cor4, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 105
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 106
		      ( fun (_cor17,_cor16) ->
			    case <_cor17,_cor16> of
			      <{'pos',{PosX,PosY}},Acc> when 'true' ->
				  let <_cor10> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<PosX>(32,1,'integer',['unsigned'|['native']]),
					#<PosY>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor10|Acc]
			      %% Line 107
			      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				  let <_cor11> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<SizeW>(32,1,'integer',['unsigned'|['native']]),
					#<SizeH>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor11|Acc]
			      %% Line 108
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor12> =
				      #{#<3>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor12|Acc]
			      %% Line 109
			      <{'validator',{'wx_ref',ValidatorRef,ValidatorT,_cor29}},Acc> when 'true' ->
				  do  ( case <> of
					  ( <>
						when call 'erlang':'=:='
						      (ValidatorT,
						       'wx') ->
						'ok'
					    -| ['compiler_generated'] )
					  ( <> when 'true' ->
						call ValidatorT:'parent_class'
						    ('wx')
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				      let <_cor15> =
					  #{#<4>(32,1,'integer',['unsigned'|['native']]),
					    #<ValidatorRef>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor15|Acc]
			      %% Line 110
			      <BadOpt,_cor30> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/4-fun-0-'}}] )
		  in  let <_cor21> =
			  %% Line 111
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 111
			      call 'erlang':'list_to_binary'
				  (_cor21)
			  in  let <_cor23> =
				  %% Line 113
				  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				    #<Id>(32,1,'integer',['unsigned'|['native']]),
				    #<Range>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 112
				  call 'wxe_util':'construct'
				      (1597, _cor23)
	  ( <_cor27,_cor26,_cor25,_cor24> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor27,_cor26,_cor25,_cor24})
		  -| [{'function_name',{'new',4}}] )
	    -| ['compiler_generated'] )
	end
'create'/4 =
    %% Line 119
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor12,_cor13,_cor14},Parent = {'wx_ref',_cor15,_cor16,_cor17},Id,Range>
	      when let <_cor4> =
		    %% Line 120
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor5> =
			%% Line 120
			call 'erlang':'is_integer'
			    (Range)
		    in  %% Line 120
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'and'
							       -| ['compiler_generated'] )
			      (_cor4, _cor5)
			  -| ['compiler_generated'] ) ->
	      %% Line 121
	      apply 'create'/5
		  (This, Parent, Id, Range, [])
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'create',4}}] )
	    -| ['compiler_generated'] )
	end
'create'/5 =
    %% Line 130
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor32},{'wx_ref',ParentRef,ParentT,_cor33},Id,Range,Options>
	      when %% Line 131
		try
		    let <_cor5> =
			call 'erlang':'is_integer'
			    (Id)
		    in  let <_cor6> =
			    call 'erlang':'is_integer'
				(Range)
			in  let <_cor7> =
				call 'erlang':'is_list'
				    (Options)
			    in  let <_cor8> =
				    call 'erlang':'and'
					(_cor6, _cor7)
				in  call 'erlang':'and'
					(_cor5, _cor8)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 132
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGauge') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGauge')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 133
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <MOpts> =
			  %% Line 134
			  ( fun (_cor20,_cor19) ->
				case <_cor20,_cor19> of
				  <{'pos',{PosX,PosY}},Acc> when 'true' ->
				      let <_cor13> =
					  #{#<1>(32,1,'integer',['unsigned'|['native']]),
					    #<PosX>(32,1,'integer',['unsigned'|['native']]),
					    #<PosY>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor13|Acc]
				  %% Line 135
				  <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				      let <_cor14> =
					  #{#<2>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeW>(32,1,'integer',['unsigned'|['native']]),
					    #<SizeH>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']])}#
				      in  [_cor14|Acc]
				  %% Line 136
				  <{'style',Style},Acc> when 'true' ->
				      let <_cor15> =
					  #{#<3>(32,1,'integer',['unsigned'|['native']]),
					    #<Style>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor15|Acc]
				  %% Line 137
				  <{'validator',{'wx_ref',ValidatorRef,ValidatorT,_cor34}},Acc> when 'true' ->
				      do  ( case <> of
					      ( <>
						    when call 'erlang':'=:='
							  (ValidatorT,
							   'wx') ->
						    'ok'
						-| ['compiler_generated'] )
					      ( <> when 'true' ->
						    call ValidatorT:'parent_class'
							('wx')
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
					  let <_cor18> =
					      #{#<4>(32,1,'integer',['unsigned'|['native']]),
						#<ValidatorRef>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor18|Acc]
				  %% Line 138
				  <BadOpt,_cor35> when 'true' ->
				      call 'erlang':'error'
					  ({'badoption',BadOpt})
				end
			    -| [{'id',{0,0,'-create/5-fun-0-'}}] )
		      in  let <_cor24> =
			      %% Line 139
			      call 'lists':'foldl'
				  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']]),
					     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			  in  let <BinOpt> =
				  %% Line 139
				  call 'erlang':'list_to_binary'
				      (_cor24)
			      in  let <_cor26> =
				      %% Line 141
				      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
					#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
					#<Id>(32,1,'integer',['unsigned'|['native']]),
					#<Range>(32,1,'integer',['unsigned'|['native']]),
					#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				  in  %% Line 140
				      call 'wxe_util':'call'
					  (1598, _cor26)
	  ( <_cor31,_cor30,_cor29,_cor28,_cor27> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor31,_cor30,_cor29,_cor28,_cor27})
		  -| [{'function_name',{'create',5}}] )
	    -| ['compiler_generated'] )
	end
'getBezelFace'/1 =
    %% Line 146
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 147
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGauge') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGauge')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 149
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 148
		      call 'wxe_util':'call'
			  (1599, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getBezelFace',1}}] )
	    -| ['compiler_generated'] )
	end
'getRange'/1 =
    %% Line 154
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 155
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGauge') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGauge')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 157
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 156
		      call 'wxe_util':'call'
			  (1600, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getRange',1}}] )
	    -| ['compiler_generated'] )
	end
'getShadowWidth'/1 =
    %% Line 162
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 163
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGauge') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGauge')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 165
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 164
		      call 'wxe_util':'call'
			  (1601, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getShadowWidth',1}}] )
	    -| ['compiler_generated'] )
	end
'getValue'/1 =
    %% Line 170
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 171
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGauge') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGauge')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 173
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 172
		      call 'wxe_util':'call'
			  (1602, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getValue',1}}] )
	    -| ['compiler_generated'] )
	end
'isVertical'/1 =
    %% Line 178
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 179
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGauge') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGauge')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 181
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 180
		      call 'wxe_util':'call'
			  (1603, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'isVertical',1}}] )
	    -| ['compiler_generated'] )
	end
'setBezelFace'/2 =
    %% Line 186
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},W>
	      when %% Line 187
		call 'erlang':'is_integer'
		    (W) ->
	      do  %% Line 188
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGauge') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGauge')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 190
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<W>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 189
		      call 'wxe_util':'cast'
			  (1604, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setBezelFace',2}}] )
	    -| ['compiler_generated'] )
	end
'setRange'/2 =
    %% Line 195
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},R>
	      when %% Line 196
		call 'erlang':'is_integer'
		    (R) ->
	      do  %% Line 197
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGauge') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGauge')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 199
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<R>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 198
		      call 'wxe_util':'cast'
			  (1605, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setRange',2}}] )
	    -| ['compiler_generated'] )
	end
'setShadowWidth'/2 =
    %% Line 204
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},W>
	      when %% Line 205
		call 'erlang':'is_integer'
		    (W) ->
	      do  %% Line 206
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGauge') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGauge')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 208
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<W>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 207
		      call 'wxe_util':'cast'
			  (1606, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setShadowWidth',2}}] )
	    -| ['compiler_generated'] )
	end
'setValue'/2 =
    %% Line 213
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},Pos>
	      when %% Line 214
		call 'erlang':'is_integer'
		    (Pos) ->
	      do  %% Line 215
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGauge') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGauge')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 217
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<Pos>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 216
		      call 'wxe_util':'cast'
			  (1607, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'setValue',2}}] )
	    -| ['compiler_generated'] )
	end
'pulse'/1 =
    %% Line 222
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 223
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxGauge') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxGauge')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 225
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 224
		      call 'wxe_util':'cast'
			  (1608, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'pulse',1}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 229
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 230
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxGauge') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxGauge')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 231
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 232
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'setLabel'/2 =
    %% Line 235
    fun (_cor1,_cor0) ->
	call 'wxControl':'setLabel'
	    (_cor1, _cor0)
'getLabel'/1 =
    %% Line 237
    fun (_cor0) ->
	call 'wxControl':'getLabel'
	    (_cor0)
'warpPointer'/3 =
    %% Line 240
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 242
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 244
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 246
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 248
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 250
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 252
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 254
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 256
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 258
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 260
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 262
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 264
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 266
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 268
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 270
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 272
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 274
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 276
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 278
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 280
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 282
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 284
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 286
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 288
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 290
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 292
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 294
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 296
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 298
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 300
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 302
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 304
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 306
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 308
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 310
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 312
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 314
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 316
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 318
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 320
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 322
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 324
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 326
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 328
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 330
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 332
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 334
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 336
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 338
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 340
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 342
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 344
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 346
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 348
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 350
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 352
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 354
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 356
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 358
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 360
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 362
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 364
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 366
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 368
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 370
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 372
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 374
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 376
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 378
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 380
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 382
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 384
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 386
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 388
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 390
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 392
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 394
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 396
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 398
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 400
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 402
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 404
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 406
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 408
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 410
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 412
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 414
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 416
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 418
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 420
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 422
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 424
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 426
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 428
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 430
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 432
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 434
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 436
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 438
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 440
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 442
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 444
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 446
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 448
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 450
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 452
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 454
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 456
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 458
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 460
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 462
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 464
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 466
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 468
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 470
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 472
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 474
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 476
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 478
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 480
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 482
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 484
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 486
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 488
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 490
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 492
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 494
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 496
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 498
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 500
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 502
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 504
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 506
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 508
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 510
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 512
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 514
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 516
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 518
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 520
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 522
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 524
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 526
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 528
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 530
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 532
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 534
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 536
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 538
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 540
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 542
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 544
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 546
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 548
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 550
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 552
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 554
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 556
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 558
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 560
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 562
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 564
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 566
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 568
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 570
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 572
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 574
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 576
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 578
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 580
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 582
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 584
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 587
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 589
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 591
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 593
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 595
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxGauge')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxGauge', _cor0)
end