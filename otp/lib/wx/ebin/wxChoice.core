module 'wxChoice' ['append'/2,
		   'append'/3,
		   'appendStrings'/2,
		   'cacheBestSize'/2,
		   'captureMouse'/1,
		   'center'/1,
		   'center'/2,
		   'centerOnParent'/1,
		   'centerOnParent'/2,
		   'centre'/1,
		   'centre'/2,
		   'centreOnParent'/1,
		   'centreOnParent'/2,
		   'clear'/1,
		   'clearBackground'/1,
		   'clientToScreen'/2,
		   'clientToScreen'/3,
		   'close'/1,
		   'close'/2,
		   'connect'/2,
		   'connect'/3,
		   'convertDialogToPixels'/2,
		   'convertPixelsToDialog'/2,
		   'create'/6,
		   'create'/7,
		   'delete'/2,
		   'destroy'/1,
		   'destroyChildren'/1,
		   'disable'/1,
		   'disconnect'/1,
		   'disconnect'/2,
		   'disconnect'/3,
		   'enable'/1,
		   'enable'/2,
		   'findString'/2,
		   'findString'/3,
		   'findWindow'/2,
		   'fit'/1,
		   'fitInside'/1,
		   'freeze'/1,
		   'getAcceleratorTable'/1,
		   'getBackgroundColour'/1,
		   'getBackgroundStyle'/1,
		   'getBestSize'/1,
		   'getCaret'/1,
		   'getCharHeight'/1,
		   'getCharWidth'/1,
		   'getChildren'/1,
		   'getClientData'/2,
		   'getClientSize'/1,
		   'getColumns'/1,
		   'getContainingSizer'/1,
		   'getCount'/1,
		   'getCursor'/1,
		   'getDropTarget'/1,
		   'getEventHandler'/1,
		   'getExtraStyle'/1,
		   'getFont'/1,
		   'getForegroundColour'/1,
		   'getGrandParent'/1,
		   'getHandle'/1,
		   'getHelpText'/1,
		   'getId'/1,
		   'getLabel'/1,
		   'getMaxSize'/1,
		   'getMinSize'/1,
		   'getName'/1,
		   'getParent'/1,
		   'getPosition'/1,
		   'getRect'/1,
		   'getScreenPosition'/1,
		   'getScreenRect'/1,
		   'getScrollPos'/2,
		   'getScrollRange'/2,
		   'getScrollThumb'/2,
		   'getSelection'/1,
		   'getSize'/1,
		   'getSizer'/1,
		   'getString'/2,
		   'getStringSelection'/1,
		   'getTextExtent'/2,
		   'getTextExtent'/3,
		   'getToolTip'/1,
		   'getUpdateRegion'/1,
		   'getVirtualSize'/1,
		   'getWindowStyleFlag'/1,
		   'getWindowVariant'/1,
		   'hasCapture'/1,
		   'hasScrollbar'/2,
		   'hasTransparentBackground'/1,
		   'hide'/1,
		   'inheritAttributes'/1,
		   'initDialog'/1,
		   'insert'/3,
		   'insert'/4,
		   'invalidateBestSize'/1,
		   'isEmpty'/1,
		   'isEnabled'/1,
		   'isExposed'/2,
		   'isExposed'/3,
		   'isExposed'/5,
		   'isRetained'/1,
		   'isShown'/1,
		   'isTopLevel'/1,
		   'layout'/1,
		   'lineDown'/1,
		   'lineUp'/1,
		   'lower'/1,
		   'makeModal'/1,
		   'makeModal'/2,
		   'module_info'/0,
		   'module_info'/1,
		   'move'/2,
		   'move'/3,
		   'move'/4,
		   'moveAfterInTabOrder'/2,
		   'moveBeforeInTabOrder'/2,
		   'navigate'/1,
		   'navigate'/2,
		   'new'/0,
		   'new'/2,
		   'new'/3,
		   'pageDown'/1,
		   'pageUp'/1,
		   'parent_class'/1,
		   'popEventHandler'/1,
		   'popEventHandler'/2,
		   'popupMenu'/2,
		   'popupMenu'/3,
		   'popupMenu'/4,
		   'raise'/1,
		   'refresh'/1,
		   'refresh'/2,
		   'refreshRect'/2,
		   'refreshRect'/3,
		   'releaseMouse'/1,
		   'removeChild'/2,
		   'reparent'/2,
		   'screenToClient'/1,
		   'screenToClient'/2,
		   'scrollLines'/2,
		   'scrollPages'/2,
		   'scrollWindow'/3,
		   'scrollWindow'/4,
		   'select'/2,
		   'setAcceleratorTable'/2,
		   'setAutoLayout'/2,
		   'setBackgroundColour'/2,
		   'setBackgroundStyle'/2,
		   'setCaret'/2,
		   'setClientData'/3,
		   'setClientSize'/2,
		   'setClientSize'/3,
		   'setColumns'/1,
		   'setColumns'/2,
		   'setContainingSizer'/2,
		   'setCursor'/2,
		   'setDropTarget'/2,
		   'setExtraStyle'/2,
		   'setFocus'/1,
		   'setFocusFromKbd'/1,
		   'setFont'/2,
		   'setForegroundColour'/2,
		   'setHelpText'/2,
		   'setId'/2,
		   'setLabel'/2,
		   'setMaxSize'/2,
		   'setMinSize'/2,
		   'setName'/2,
		   'setOwnBackgroundColour'/2,
		   'setOwnFont'/2,
		   'setOwnForegroundColour'/2,
		   'setPalette'/2,
		   'setScrollPos'/3,
		   'setScrollPos'/4,
		   'setScrollbar'/5,
		   'setScrollbar'/6,
		   'setSelection'/2,
		   'setSize'/2,
		   'setSize'/3,
		   'setSize'/5,
		   'setSize'/6,
		   'setSizeHints'/2,
		   'setSizeHints'/3,
		   'setSizeHints'/4,
		   'setSizer'/2,
		   'setSizer'/3,
		   'setSizerAndFit'/2,
		   'setSizerAndFit'/3,
		   'setString'/3,
		   'setStringSelection'/2,
		   'setThemeEnabled'/2,
		   'setToolTip'/2,
		   'setVirtualSize'/2,
		   'setVirtualSize'/3,
		   'setVirtualSizeHints'/2,
		   'setVirtualSizeHints'/3,
		   'setVirtualSizeHints'/4,
		   'setWindowStyle'/2,
		   'setWindowStyleFlag'/2,
		   'setWindowVariant'/2,
		   'shouldInheritColours'/1,
		   'show'/1,
		   'show'/2,
		   'thaw'/1,
		   'transferDataFromWindow'/1,
		   'transferDataToWindow'/1,
		   'update'/1,
		   'updateWindowUI'/1,
		   'updateWindowUI'/2,
		   'validate'/1,
		   'warpPointer'/3]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 77
		'export_type' =
		    %% Line 77
		    [{'wxChoice',0}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{'wxChoice',{'remote_type',85,[{'atom',85,'wx'}|[{'atom',85,'wx_object'}|[[]]]]},[]}],
		%% Line 87
		'spec' =
		    %% Line 87
		    [{{'new',0},[{'type',87,'fun',[{'type',87,'product',[]}|[{'type',87,'wxChoice',[]}]]}]}],
		%% Line 93
		'spec' =
		    %% Line 93
		    [{{'new',2},[{'type',93,'bounded_fun',[{'type',93,'fun',[{'type',93,'product',[{'var',93,'Parent'}|[{'var',93,'Id'}]]}|[{'type',93,'wxChoice',[]}]]}|[[{'type',94,'constraint',[{'atom',94,'is_subtype'}|[[{'var',94,'Parent'}|[{'remote_type',94,[{'atom',94,'wxWindow'}|[{'atom',94,'wxWindow'}|[[]]]]}]]]]}|[{'type',94,'constraint',[{'atom',94,'is_subtype'}|[[{'var',94,'Id'}|[{'type',94,'integer',[]}]]]]}]]]]}]}],
		%% Line 101
		'spec' =
		    %% Line 101
		    [{{'new',3},[{'type',101,'bounded_fun',[{'type',101,'fun',[{'type',101,'product',[{'var',101,'Parent'}|[{'var',101,'Id'}|[{'type',101,'list',[{'var',101,'Option'}]}]]]}|[{'type',101,'wxChoice',[]}]]}|[[{'type',102,'constraint',[{'atom',102,'is_subtype'}|[[{'var',102,'Parent'}|[{'remote_type',102,[{'atom',102,'wxWindow'}|[{'atom',102,'wxWindow'}|[[]]]]}]]]]}|[{'type',102,'constraint',[{'atom',102,'is_subtype'}|[[{'var',102,'Id'}|[{'type',102,'integer',[]}]]]]}|[{'type',103,'constraint',[{'atom',103,'is_subtype'}|[[{'var',103,'Option'}|[{'type',103,'union',[{'type',103,'tuple',[{'atom',103,'pos'}|[{'type',103,'tuple',[{'ann_type',103,[{'var',103,'X'}|[{'type',103,'integer',[]}]]}|[{'ann_type',103,[{'var',103,'Y'}|[{'type',103,'integer',[]}]]}]]}]]}|[{'type',104,'tuple',[{'atom',104,'size'}|[{'type',104,'tuple',[{'ann_type',104,[{'var',104,'W'}|[{'type',104,'integer',[]}]]}|[{'ann_type',104,[{'var',104,'H'}|[{'type',104,'integer',[]}]]}]]}]]}|[{'type',105,'tuple',[{'atom',105,'choices'}|[{'type',105,'list',[{'remote_type',105,[{'atom',105,'unicode'}|[{'atom',105,'chardata'}|[[]]]]}]}]]}|[{'type',106,'tuple',[{'atom',106,'style'}|[{'type',106,'integer',[]}]]}|[{'type',107,'tuple',[{'atom',107,'validator'}|[{'remote_type',107,[{'atom',107,'wx'}|[{'atom',107,'wx_object'}|[[]]]]}]]}]]]]]}]]]]}]]]]]}]}],
		%% Line 122
		'spec' =
		    %% Line 122
		    [{{'create',6},[{'type',122,'bounded_fun',[{'type',122,'fun',[{'type',122,'product',[{'var',122,'This'}|[{'var',122,'Parent'}|[{'var',122,'Id'}|[{'var',122,'Pos'}|[{'var',122,'Size'}|[{'var',122,'Choices'}]]]]]]}|[{'type',122,'boolean',[]}]]}|[[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'This'}|[{'type',123,'wxChoice',[]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Parent'}|[{'remote_type',123,[{'atom',123,'wxWindow'}|[{'atom',123,'wxWindow'}|[[]]]]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Id'}|[{'type',123,'integer',[]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Pos'}|[{'type',123,'tuple',[{'ann_type',123,[{'var',123,'X'}|[{'type',123,'integer',[]}]]}|[{'ann_type',123,[{'var',123,'Y'}|[{'type',123,'integer',[]}]]}]]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Size'}|[{'type',123,'tuple',[{'ann_type',123,[{'var',123,'W'}|[{'type',123,'integer',[]}]]}|[{'ann_type',123,[{'var',123,'H'}|[{'type',123,'integer',[]}]]}]]}]]]]}|[{'type',123,'constraint',[{'atom',123,'is_subtype'}|[[{'var',123,'Choices'}|[{'type',123,'list',[{'remote_type',123,[{'atom',123,'unicode'}|[{'atom',123,'chardata'}|[[]]]]}]}]]]]}]]]]]]]]}]}],
		%% Line 130
		'spec' =
		    %% Line 130
		    [{{'create',7},[{'type',130,'bounded_fun',[{'type',130,'fun',[{'type',130,'product',[{'var',130,'This'}|[{'var',130,'Parent'}|[{'var',130,'Id'}|[{'var',130,'Pos'}|[{'var',130,'Size'}|[{'var',130,'Choices'}|[{'type',130,'list',[{'var',130,'Option'}]}]]]]]]]}|[{'type',130,'boolean',[]}]]}|[[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'This'}|[{'type',131,'wxChoice',[]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Parent'}|[{'remote_type',131,[{'atom',131,'wxWindow'}|[{'atom',131,'wxWindow'}|[[]]]]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Id'}|[{'type',131,'integer',[]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Pos'}|[{'type',131,'tuple',[{'ann_type',131,[{'var',131,'X'}|[{'type',131,'integer',[]}]]}|[{'ann_type',131,[{'var',131,'Y'}|[{'type',131,'integer',[]}]]}]]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Size'}|[{'type',131,'tuple',[{'ann_type',131,[{'var',131,'W'}|[{'type',131,'integer',[]}]]}|[{'ann_type',131,[{'var',131,'H'}|[{'type',131,'integer',[]}]]}]]}]]]]}|[{'type',131,'constraint',[{'atom',131,'is_subtype'}|[[{'var',131,'Choices'}|[{'type',131,'list',[{'remote_type',131,[{'atom',131,'unicode'}|[{'atom',131,'chardata'}|[[]]]]}]}]]]]}|[{'type',132,'constraint',[{'atom',132,'is_subtype'}|[[{'var',132,'Option'}|[{'type',132,'union',[{'type',132,'tuple',[{'atom',132,'style'}|[{'type',132,'integer',[]}]]}|[{'type',133,'tuple',[{'atom',133,'validator'}|[{'remote_type',133,[{'atom',133,'wx'}|[{'atom',133,'wx_object'}|[[]]]]}]]}]]}]]]]}]]]]]]]]]}]}],
		%% Line 148
		'spec' =
		    %% Line 148
		    [{{'delete',2},[{'type',148,'bounded_fun',[{'type',148,'fun',[{'type',148,'product',[{'var',148,'This'}|[{'var',148,'N'}]]}|[{'atom',148,'ok'}]]}|[[{'type',149,'constraint',[{'atom',149,'is_subtype'}|[[{'var',149,'This'}|[{'type',149,'wxChoice',[]}]]]]}|[{'type',149,'constraint',[{'atom',149,'is_subtype'}|[[{'var',149,'N'}|[{'type',149,'integer',[]}]]]]}]]]]}]}],
		%% Line 157
		'spec' =
		    %% Line 157
		    [{{'getColumns',1},[{'type',157,'bounded_fun',[{'type',157,'fun',[{'type',157,'product',[{'var',157,'This'}]}|[{'type',157,'integer',[]}]]}|[[{'type',158,'constraint',[{'atom',158,'is_subtype'}|[[{'var',158,'This'}|[{'type',158,'wxChoice',[]}]]]]}]]]}]}],
		%% Line 165
		'spec' =
		    %% Line 165
		    [{{'setColumns',1},[{'type',165,'bounded_fun',[{'type',165,'fun',[{'type',165,'product',[{'var',165,'This'}]}|[{'atom',165,'ok'}]]}|[[{'type',166,'constraint',[{'atom',166,'is_subtype'}|[[{'var',166,'This'}|[{'type',166,'wxChoice',[]}]]]]}]]]}]}],
		%% Line 173
		'spec' =
		    %% Line 173
		    [{{'setColumns',2},[{'type',173,'bounded_fun',[{'type',173,'fun',[{'type',173,'product',[{'var',173,'This'}|[{'type',173,'list',[{'var',173,'Option'}]}]]}|[{'atom',173,'ok'}]]}|[[{'type',174,'constraint',[{'atom',174,'is_subtype'}|[[{'var',174,'This'}|[{'type',174,'wxChoice',[]}]]]]}|[{'type',175,'constraint',[{'atom',175,'is_subtype'}|[[{'var',175,'Option'}|[{'type',175,'tuple',[{'atom',175,'n'}|[{'type',175,'integer',[]}]]}]]]]}]]]]}]}],
		%% Line 186
		'spec' =
		    %% Line 186
		    [{{'destroy',1},[{'type',186,'fun',[{'type',186,'product',[{'ann_type',186,[{'var',186,'This'}|[{'type',186,'wxChoice',[]}]]}]}|[{'atom',186,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 79
    fun (_cor0) ->
	case _cor0 of
	  <'wxControlWithItems'> when 'true' ->
	      'true'
	  %% Line 80
	  <'wxControl'> when 'true' ->
	      'true'
	  %% Line 81
	  <'wxWindow'> when 'true' ->
	      'true'
	  %% Line 82
	  <'wxEvtHandler'> when 'true' ->
	      'true'
	  %% Line 83
	  <_X_Class> when 'true' ->
	      call 'erlang':'error'
		  ({'badtype','wxChoice'})
	end
'new'/0 =
    %% Line 88
    fun () ->
	%% Line 89
	call 'wxe_util':'construct'
	    (1562, %% Line 90
		   #{}#)
'new'/2 =
    %% Line 96
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Parent = {'wx_ref',_cor5,_cor6,_cor7},Id>
	      when %% Line 97
		call 'erlang':'is_integer'
		    (Id) ->
	      %% Line 98
	      apply 'new'/3
		  (Parent, Id, [])
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'new',2}}] )
	    -| ['compiler_generated'] )
	end
'new'/3 =
    %% Line 108
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ParentRef,ParentT,_cor52},Id,Options>
	      when let <_cor3> =
		    %% Line 109
		    call 'erlang':'is_integer'
			(Id)
		in  let <_cor4> =
			%% Line 109
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 109
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 110
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ParentT,
				   'wxWindow') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ParentT:'parent_class'
				('wxWindow')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 111
		      ( fun (_cor42,_cor41) ->
			    case <_cor42,_cor41> of
			      <{'pos',{PosX,PosY}},Acc> when 'true' ->
				  let <_cor7> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<PosX>(32,1,'integer',['unsigned'|['native']]),
					#<PosY>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor7|Acc]
			      %% Line 112
			      <{'size',{SizeW,SizeH}},Acc> when 'true' ->
				  let <_cor8> =
				      #{#<2>(32,1,'integer',['unsigned'|['native']]),
					#<SizeW>(32,1,'integer',['unsigned'|['native']]),
					#<SizeH>(32,1,'integer',['unsigned'|['native']]),
					#<0>(32,1,'integer',['unsigned'|['big']])}#
				  in  [_cor8|Acc]
			      %% Line 113
			      <{'choices',Choices},Acc> when 'true' ->
				  let <_cor14> =
				      ( letrec
					    'lc$^0'/1 =
						fun (_cor11) ->
						    case _cor11 of
						      <[ChoicesTemp|_cor10]> when 'true' ->
							  let <_cor12> =
							      call 'unicode':'characters_to_binary'
								  ([ChoicesTemp|[0]])
							  in  let <_cor13> =
								  apply 'lc$^0'/1
								      (_cor10)
							      in  ( [_cor12|_cor13]
								    -| ['compiler_generated'] )
						      <[]> when 'true' ->
							  []
						      ( <_cor11> when 'true' ->
							    ( primop 'match_fail'
								  ({'function_clause',_cor11})
							      -| [{'function_name',{'lc$^0',1}}] )
							-| ['compiler_generated'] )
						    end
					in  apply 'lc$^0'/1
						(Choices)
					-| ['list_comprehension'] )
				  in  let <_cor35> =
					  call 'erlang':'length'
					      (_cor14)
				      in  let <_cor28> =
					      primop 'bs_init_writable'
						  (256)
					  in  let <_cor34> =
						  ( letrec
							'lbc$^2'/2 =
							    fun (_cor32,_cor31) ->
								case <_cor32,_cor31> of
								  <[UC_Str|_cor30],_cor31> when 'true' ->
								      let <_cor33> =
									  call 'erlang':'byte_size'
									      (UC_Str)
								      in  let <_cor31> =
									      ( #{#<_cor31>('all',1,'binary',[]),
										  #<_cor33>(32,1,'integer',['unsigned'|['native']]),
										  #<UC_Str>('all',8,'binary',['unsigned'|['big']])}#
										-| ['compiler_generated','single_use'] )
									  in  apply 'lbc$^2'/2
										  (_cor30, _cor31)
								  <[],_cor31> when 'true' ->
								      _cor31
								  ( <_cor32,_cor31> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor32,_cor31})
									  -| [{'function_name',{'lbc$^2',2}}] )
								    -| ['compiler_generated'] )
								end
						    in  apply 'lbc$^2'/2
							    (_cor14, _cor28)
						    -| ['list_comprehension'] )
					      in  let <_cor22> =
						      ( letrec
							    'lc$^1'/1 =
								fun (_cor18) ->
								    case _cor18 of
								      <[S|_cor17]> when 'true' ->
									  let <_cor19> =
									      call 'erlang':'byte_size'
										  (S)
									  in  let <_cor20> =
										  call 'erlang':'+'
										      (_cor19, 4)
									      in  let <_cor21> =
										      apply 'lc$^1'/1
											  (_cor17)
										  in  ( [_cor20|_cor21]
											-| ['compiler_generated'] )
								      <[]> when 'true' ->
									  []
								      ( <_cor18> when 'true' ->
									    ( primop 'match_fail'
										  ({'function_clause',_cor18})
									      -| [{'function_name',{'lc$^1',1}}] )
									-| ['compiler_generated'] )
								    end
							in  apply 'lc$^1'/1
								(_cor14)
							-| ['list_comprehension'] )
						  in  let <_cor23> =
							  call 'lists':'sum'
							      (_cor22)
						      in  let <_cor24> =
							      call 'erlang':'+'
								  (0, _cor23)
							  in  let <_cor25> =
								  call 'erlang':'band'
								      (_cor24, 7)
							      in  let <_cor26> =
								      call 'erlang':'-'
									  (8, _cor25)
								  in  let <_cor27> =
									  call 'erlang':'band'
									      (_cor26, 7)
								      in  let <_cor36> =
									      #{#<3>(32,1,'integer',['unsigned'|['native']]),
										#<_cor35>(32,1,'integer',['unsigned'|['native']]),
										#<_cor34>('all',8,'binary',['unsigned'|['big']]),
										#<0>(_cor27,8,'integer',['unsigned'|['big']])}#
									  in  [_cor36|Acc]
			      %% Line 114
			      <{'style',Style},Acc> when 'true' ->
				  let <_cor37> =
				      #{#<4>(32,1,'integer',['unsigned'|['native']]),
					#<Style>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor37|Acc]
			      %% Line 115
			      <{'validator',{'wx_ref',ValidatorRef,ValidatorT,_cor53}},Acc> when 'true' ->
				  do  ( case <> of
					  ( <>
						when call 'erlang':'=:='
						      (ValidatorT,
						       'wx') ->
						'ok'
					    -| ['compiler_generated'] )
					  ( <> when 'true' ->
						call ValidatorT:'parent_class'
						    ('wx')
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				      let <_cor40> =
					  #{#<5>(32,1,'integer',['unsigned'|['native']]),
					    #<ValidatorRef>(32,1,'integer',['unsigned'|['native']])}#
				      in  [_cor40|Acc]
			      %% Line 116
			      <BadOpt,_cor54> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-new/3-fun-0-'}}] )
		  in  let <_cor46> =
			  %% Line 117
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 117
			      call 'erlang':'list_to_binary'
				  (_cor46)
			  in  let <_cor48> =
				  %% Line 119
				  #{#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				    #<Id>(32,1,'integer',['unsigned'|['native']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 118
				  call 'wxe_util':'construct'
				      (1561, _cor48)
	  ( <_cor51,_cor50,_cor49> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor51,_cor50,_cor49})
		  -| [{'function_name',{'new',3}}] )
	    -| ['compiler_generated'] )
	end
'create'/6 =
    %% Line 125
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor24,_cor25,_cor26},Parent = {'wx_ref',_cor27,_cor28,_cor29},Id,Pos = {PosX,PosY},Size = {SizeW,SizeH},Choices>
	      when %% Line 126
		( try
		      let <_cor6> =
			  call 'erlang':'is_integer'
			      (Id)
		      in  let <_cor7> =
			      call 'erlang':'is_integer'
				  (PosX)
			  in  let <_cor8> =
				  call 'erlang':'is_integer'
				      (PosY)
			      in  let <_cor9> =
				      call 'erlang':'is_integer'
					  (SizeW)
				  in  let <_cor10> =
					  call 'erlang':'is_integer'
					      (SizeH)
				      in  let <_cor11> =
					      call 'erlang':'is_list'
						  (Choices)
					  in  let <_cor12> =
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'and'
											 -| ['compiler_generated'] )
							(_cor10, _cor11)
						    -| ['compiler_generated'] )
					      in  let <_cor13> =
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'and'
											     -| ['compiler_generated'] )
							    (_cor9, _cor12)
							-| ['compiler_generated'] )
						  in  let <_cor14> =
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'and'
												 -| ['compiler_generated'] )
								(_cor8, _cor13)
							    -| ['compiler_generated'] )
						      in  let <_cor15> =
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'and'
												     -| ['compiler_generated'] )
								    (_cor7, _cor14)
								-| ['compiler_generated'] )
							  in  ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'and'
												     -| ['compiler_generated'] )
								    (_cor6, _cor15)
								-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      %% Line 127
	      apply 'create'/7
		  (This, Parent, Id, Pos, Size, Choices, [])
	  ( <_cor23,_cor22,_cor21,_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor23,_cor22,_cor21,_cor20,_cor19,_cor18})
		  -| [{'function_name',{'create',6}}] )
	    -| ['compiler_generated'] )
	end
'create'/7 =
    %% Line 134
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor69},{'wx_ref',ParentRef,ParentT,_cor70},Id,{PosX,PosY},{SizeW,SizeH},Choices,Options>
	      when %% Line 135
		try
		    let <_cor7> =
			call 'erlang':'is_integer'
			    (Id)
		    in  let <_cor8> =
			    call 'erlang':'is_integer'
				(PosX)
			in  let <_cor9> =
				call 'erlang':'is_integer'
				    (PosY)
			    in  let <_cor10> =
				    call 'erlang':'is_integer'
					(SizeW)
				in  let <_cor11> =
					call 'erlang':'is_integer'
					    (SizeH)
				    in  let <_cor12> =
					    call 'erlang':'is_list'
						(Choices)
					in  let <_cor13> =
						call 'erlang':'is_list'
						    (Options)
					    in  let <_cor14> =
						    call 'erlang':'and'
							(_cor12, _cor13)
						in  let <_cor15> =
							call 'erlang':'and'
							    (_cor11, _cor14)
						    in  let <_cor16> =
							    call 'erlang':'and'
								(_cor10, _cor15)
							in  let <_cor17> =
								call 'erlang':'and'
								    (_cor9, _cor16)
							    in  let <_cor18> =
								    call 'erlang':'and'
									(_cor8, _cor17)
								in  call 'erlang':'and'
									(_cor7, _cor18)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      do  %% Line 136
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoice') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoice')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 137
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor28> =
			  %% Line 138
			  ( letrec
				'lc$^0'/1 =
				    fun (_cor25) ->
					case _cor25 of
					  <[%% Line 139
					    ChoicesTemp|_cor24]> when 'true' ->
					      let <_cor26> =
						  call 'unicode':'characters_to_binary'
						      ([ChoicesTemp|[0]])
					      in  let <_cor27> =
						      %% Line 139
						      apply 'lc$^0'/1
							  (_cor24)
						  in  ( [_cor26|_cor27]
							-| ['compiler_generated'] )
					  <[]> when 'true' ->
					      []
					  ( <_cor25> when 'true' ->
						( primop 'match_fail'
						      ({'function_clause',_cor25})
						  -| [{'function_name',{'lc$^0',1}}] )
					    -| ['compiler_generated'] )
					end
			    in  apply 'lc$^0'/1
				    (%% Line 139
				     Choices)
			    -| ['list_comprehension'] )
		      in  let <MOpts> =
			      %% Line 140
			      ( fun (_cor35,_cor34) ->
				    case <_cor35,_cor34> of
				      <{'style',Style},Acc> when 'true' ->
					  let <_cor30> =
					      #{#<1>(32,1,'integer',['unsigned'|['native']]),
						#<Style>(32,1,'integer',['unsigned'|['native']])}#
					  in  [_cor30|Acc]
				      %% Line 141
				      <{'validator',{'wx_ref',ValidatorRef,ValidatorT,_cor71}},Acc> when 'true' ->
					  do  ( case <> of
						  ( <>
							when call 'erlang':'=:='
							      (ValidatorT,
							       'wx') ->
							'ok'
						    -| ['compiler_generated'] )
						  ( <> when 'true' ->
							call ValidatorT:'parent_class'
							    ('wx')
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
					      let <_cor33> =
						  #{#<2>(32,1,'integer',['unsigned'|['native']]),
						    #<ValidatorRef>(32,1,'integer',['unsigned'|['native']])}#
					      in  [_cor33|Acc]
				      %% Line 142
				      <BadOpt,_cor72> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-create/7-fun-0-'}}] )
			  in  let <_cor39> =
				  %% Line 143
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 143
				      call 'erlang':'list_to_binary'
					  (_cor39)
				  in  let <_cor60> =
					  %% Line 145
					  call 'erlang':'length'
					      (_cor28)
				      in  let <_cor53> =
					      primop 'bs_init_writable'
						  (256)
					  in  let <_cor59> =
						  %% Line 145
						  ( letrec
							'lbc$^2'/2 =
							    fun (_cor57,_cor56) ->
								case <_cor57,_cor56> of
								  <[UC_Str|_cor55],_cor56> when 'true' ->
								      let <_cor58> =
									  call 'erlang':'byte_size'
									      (UC_Str)
								      in  let <_cor56> =
									      ( #{#<_cor56>('all',1,'binary',[]),
										  #<_cor58>(32,1,'integer',['unsigned'|['native']]),
										  #<UC_Str>('all',8,'binary',['unsigned'|['big']])}#
										-| ['compiler_generated','single_use'] )
									  in  apply 'lbc$^2'/2
										  (_cor55, _cor56)
								  <[],_cor56> when 'true' ->
								      _cor56
								  ( <_cor57,_cor56> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor57,_cor56})
									  -| [{'function_name',{'lbc$^2',2}}] )
								    -| ['compiler_generated'] )
								end
						    in  apply 'lbc$^2'/2
							    (_cor28, _cor53)
						    -| ['list_comprehension'] )
					      in  let <_cor47> =
						      %% Line 145
						      ( letrec
							    'lc$^1'/1 =
								fun (_cor43) ->
								    case _cor43 of
								      <[S|_cor42]> when 'true' ->
									  let <_cor44> =
									      call 'erlang':'byte_size'
										  (S)
									  in  let <_cor45> =
										  call 'erlang':'+'
										      (_cor44, 4)
									      in  let <_cor46> =
										      apply 'lc$^1'/1
											  (_cor42)
										  in  ( [_cor45|_cor46]
											-| ['compiler_generated'] )
								      <[]> when 'true' ->
									  []
								      ( <_cor43> when 'true' ->
									    ( primop 'match_fail'
										  ({'function_clause',_cor43})
									      -| [{'function_name',{'lc$^1',1}}] )
									-| ['compiler_generated'] )
								    end
							in  apply 'lc$^1'/1
								(_cor28)
							-| ['list_comprehension'] )
						  in  let <_cor48> =
							  %% Line 145
							  call 'lists':'sum'
							      (_cor47)
						      in  let <_cor49> =
							      %% Line 145
							      call 'erlang':'+'
								  (0, _cor48)
							  in  let <_cor50> =
								  %% Line 145
								  call 'erlang':'band'
								      (_cor49, 7)
							      in  let <_cor51> =
								      %% Line 145
								      call 'erlang':'-'
									  (8, _cor50)
								  in  let <_cor52> =
									  %% Line 145
									  call 'erlang':'band'
									      (_cor51, 7)
								      in  let <_cor61> =
									      %% Line 145
									      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
										#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
										#<Id>(32,1,'integer',['unsigned'|['native']]),
										#<PosX>(32,1,'integer',['unsigned'|['native']]),
										#<PosY>(32,1,'integer',['unsigned'|['native']]),
										#<SizeW>(32,1,'integer',['unsigned'|['native']]),
										#<SizeH>(32,1,'integer',['unsigned'|['native']]),
										#<_cor60>(32,1,'integer',['unsigned'|['native']]),
										#<_cor59>('all',8,'binary',['unsigned'|['big']]),
										#<0>(_cor52,8,'integer',['unsigned'|['big']]),
										#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
									  in  %% Line 144
									      call 'wxe_util':'call'
										  (1566, _cor61)
	  ( <_cor68,_cor67,_cor66,_cor65,_cor64,_cor63,_cor62> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor68,_cor67,_cor66,_cor65,_cor64,_cor63,_cor62})
		  -| [{'function_name',{'create',7}}] )
	    -| ['compiler_generated'] )
	end
'delete'/2 =
    %% Line 150
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor7},N>
	      when %% Line 151
		call 'erlang':'is_integer'
		    (N) ->
	      do  %% Line 152
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoice') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoice')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor4> =
		      %% Line 154
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			#<N>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 153
		      call 'wxe_util':'cast'
			  (1567, _cor4)
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'delete',2}}] )
	    -| ['compiler_generated'] )
	end
'getColumns'/1 =
    %% Line 159
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 160
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoice') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoice')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 162
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 161
		      call 'wxe_util':'call'
			  (1568, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getColumns',1}}] )
	    -| ['compiler_generated'] )
	end
'setColumns'/1 =
    %% Line 168
    fun (_cor0) ->
	case _cor0 of
	  <This = {'wx_ref',_cor2,_cor3,_cor4}> when %% Line 169
						     ( 'true'
						       -| ['compiler_generated'] ) ->
	      %% Line 170
	      apply 'setColumns'/2
		  (This, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'setColumns',1}}] )
	    -| ['compiler_generated'] )
	end
'setColumns'/2 =
    %% Line 176
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor15},Options>
	      when %% Line 177
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 178
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxChoice') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxChoice')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MOpts> =
		      %% Line 179
		      ( fun (_cor6,_cor5) ->
			    case <_cor6,_cor5> of
			      <{'n',N},Acc> when 'true' ->
				  let <_cor4> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<N>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor4|Acc]
			      %% Line 180
			      <BadOpt,_cor16> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-setColumns/2-fun-0-'}}] )
		  in  let <_cor10> =
			  %% Line 181
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 181
			      call 'erlang':'list_to_binary'
				  (_cor10)
			  in  let <_cor12> =
				  %% Line 183
				  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				    #<0>(32,1,'integer',['unsigned'|['big']]),
				    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			      in  %% Line 182
				  call 'wxe_util':'cast'
				      (1569, _cor12)
	  ( <_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13})
		  -| [{'function_name',{'setColumns',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 187
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 188
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxChoice') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxChoice')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 189
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 190
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'setStringSelection'/2 =
    %% Line 193
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'setStringSelection'
	    (_cor1, _cor0)
'setString'/3 =
    %% Line 195
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'setString'
	    (_cor2, _cor1, _cor0)
'setSelection'/2 =
    %% Line 197
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'setSelection'
	    (_cor1, _cor0)
'select'/2 =
    %% Line 199
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'select'
	    (_cor1, _cor0)
'isEmpty'/1 =
    %% Line 201
    fun (_cor0) ->
	call 'wxControlWithItems':'isEmpty'
	    (_cor0)
'insert'/4 =
    %% Line 203
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'insert'
	    (_cor3, _cor2, _cor1, _cor0)
'insert'/3 =
    %% Line 205
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'insert'
	    (_cor2, _cor1, _cor0)
'getStringSelection'/1 =
    %% Line 207
    fun (_cor0) ->
	call 'wxControlWithItems':'getStringSelection'
	    (_cor0)
'getString'/2 =
    %% Line 209
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'getString'
	    (_cor1, _cor0)
'getSelection'/1 =
    %% Line 211
    fun (_cor0) ->
	call 'wxControlWithItems':'getSelection'
	    (_cor0)
'getCount'/1 =
    %% Line 213
    fun (_cor0) ->
	call 'wxControlWithItems':'getCount'
	    (_cor0)
'setClientData'/3 =
    %% Line 215
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'setClientData'
	    (_cor2, _cor1, _cor0)
'getClientData'/2 =
    %% Line 217
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'getClientData'
	    (_cor1, _cor0)
'findString'/3 =
    %% Line 219
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'findString'
	    (_cor2, _cor1, _cor0)
'findString'/2 =
    %% Line 221
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'findString'
	    (_cor1, _cor0)
'clear'/1 =
    %% Line 223
    fun (_cor0) ->
	call 'wxControlWithItems':'clear'
	    (_cor0)
'appendStrings'/2 =
    %% Line 225
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'appendStrings'
	    (_cor1, _cor0)
'append'/3 =
    %% Line 227
    fun (_cor2,_cor1,_cor0) ->
	call 'wxControlWithItems':'append'
	    (_cor2, _cor1, _cor0)
'append'/2 =
    %% Line 229
    fun (_cor1,_cor0) ->
	call 'wxControlWithItems':'append'
	    (_cor1, _cor0)
'setLabel'/2 =
    %% Line 232
    fun (_cor1,_cor0) ->
	call 'wxControl':'setLabel'
	    (_cor1, _cor0)
'getLabel'/1 =
    %% Line 234
    fun (_cor0) ->
	call 'wxControl':'getLabel'
	    (_cor0)
'warpPointer'/3 =
    %% Line 237
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'warpPointer'
	    (_cor2, _cor1, _cor0)
'validate'/1 =
    %% Line 239
    fun (_cor0) ->
	call 'wxWindow':'validate'
	    (_cor0)
'updateWindowUI'/2 =
    %% Line 241
    fun (_cor1,_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor1, _cor0)
'updateWindowUI'/1 =
    %% Line 243
    fun (_cor0) ->
	call 'wxWindow':'updateWindowUI'
	    (_cor0)
'update'/1 =
    %% Line 245
    fun (_cor0) ->
	call 'wxWindow':'update'
	    (_cor0)
'transferDataToWindow'/1 =
    %% Line 247
    fun (_cor0) ->
	call 'wxWindow':'transferDataToWindow'
	    (_cor0)
'transferDataFromWindow'/1 =
    %% Line 249
    fun (_cor0) ->
	call 'wxWindow':'transferDataFromWindow'
	    (_cor0)
'thaw'/1 =
    %% Line 251
    fun (_cor0) ->
	call 'wxWindow':'thaw'
	    (_cor0)
'show'/2 =
    %% Line 253
    fun (_cor1,_cor0) ->
	call 'wxWindow':'show'
	    (_cor1, _cor0)
'show'/1 =
    %% Line 255
    fun (_cor0) ->
	call 'wxWindow':'show'
	    (_cor0)
'shouldInheritColours'/1 =
    %% Line 257
    fun (_cor0) ->
	call 'wxWindow':'shouldInheritColours'
	    (_cor0)
'setWindowVariant'/2 =
    %% Line 259
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowVariant'
	    (_cor1, _cor0)
'setWindowStyleFlag'/2 =
    %% Line 261
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyleFlag'
	    (_cor1, _cor0)
'setWindowStyle'/2 =
    %% Line 263
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setWindowStyle'
	    (_cor1, _cor0)
'setVirtualSizeHints'/4 =
    %% Line 265
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setVirtualSizeHints'/3 =
    %% Line 267
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor2, _cor1, _cor0)
'setVirtualSizeHints'/2 =
    %% Line 269
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSizeHints'
	    (_cor1, _cor0)
'setVirtualSize'/3 =
    %% Line 271
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor2, _cor1, _cor0)
'setVirtualSize'/2 =
    %% Line 273
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setVirtualSize'
	    (_cor1, _cor0)
'setToolTip'/2 =
    %% Line 275
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setToolTip'
	    (_cor1, _cor0)
'setThemeEnabled'/2 =
    %% Line 277
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setThemeEnabled'
	    (_cor1, _cor0)
'setSizerAndFit'/3 =
    %% Line 279
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor2, _cor1, _cor0)
'setSizerAndFit'/2 =
    %% Line 281
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizerAndFit'
	    (_cor1, _cor0)
'setSizer'/3 =
    %% Line 283
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor2, _cor1, _cor0)
'setSizer'/2 =
    %% Line 285
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizer'
	    (_cor1, _cor0)
'setSizeHints'/4 =
    %% Line 287
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor3, _cor2, _cor1, _cor0)
'setSizeHints'/3 =
    %% Line 289
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor2, _cor1, _cor0)
'setSizeHints'/2 =
    %% Line 291
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSizeHints'
	    (_cor1, _cor0)
'setSize'/6 =
    %% Line 293
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/5 =
    %% Line 295
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setSize'/3 =
    %% Line 297
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor2, _cor1, _cor0)
'setSize'/2 =
    %% Line 299
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setSize'
	    (_cor1, _cor0)
'setScrollPos'/4 =
    %% Line 301
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor3, _cor2, _cor1, _cor0)
'setScrollPos'/3 =
    %% Line 303
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollPos'
	    (_cor2, _cor1, _cor0)
'setScrollbar'/6 =
    %% Line 305
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor5, _cor4, _cor3, _cor2, _cor1, _cor0)
'setScrollbar'/5 =
    %% Line 307
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setScrollbar'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'setPalette'/2 =
    %% Line 309
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setPalette'
	    (_cor1, _cor0)
'setName'/2 =
    %% Line 311
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setName'
	    (_cor1, _cor0)
'setId'/2 =
    %% Line 313
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setId'
	    (_cor1, _cor0)
'setHelpText'/2 =
    %% Line 315
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setHelpText'
	    (_cor1, _cor0)
'setForegroundColour'/2 =
    %% Line 317
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setForegroundColour'
	    (_cor1, _cor0)
'setFont'/2 =
    %% Line 319
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setFont'
	    (_cor1, _cor0)
'setFocusFromKbd'/1 =
    %% Line 321
    fun (_cor0) ->
	call 'wxWindow':'setFocusFromKbd'
	    (_cor0)
'setFocus'/1 =
    %% Line 323
    fun (_cor0) ->
	call 'wxWindow':'setFocus'
	    (_cor0)
'setExtraStyle'/2 =
    %% Line 325
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setExtraStyle'
	    (_cor1, _cor0)
'setDropTarget'/2 =
    %% Line 327
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setDropTarget'
	    (_cor1, _cor0)
'setOwnForegroundColour'/2 =
    %% Line 329
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnForegroundColour'
	    (_cor1, _cor0)
'setOwnFont'/2 =
    %% Line 331
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnFont'
	    (_cor1, _cor0)
'setOwnBackgroundColour'/2 =
    %% Line 333
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setOwnBackgroundColour'
	    (_cor1, _cor0)
'setMinSize'/2 =
    %% Line 335
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMinSize'
	    (_cor1, _cor0)
'setMaxSize'/2 =
    %% Line 337
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setMaxSize'
	    (_cor1, _cor0)
'setCursor'/2 =
    %% Line 339
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCursor'
	    (_cor1, _cor0)
'setContainingSizer'/2 =
    %% Line 341
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setContainingSizer'
	    (_cor1, _cor0)
'setClientSize'/3 =
    %% Line 343
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor2, _cor1, _cor0)
'setClientSize'/2 =
    %% Line 345
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setClientSize'
	    (_cor1, _cor0)
'setCaret'/2 =
    %% Line 347
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setCaret'
	    (_cor1, _cor0)
'setBackgroundStyle'/2 =
    %% Line 349
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundStyle'
	    (_cor1, _cor0)
'setBackgroundColour'/2 =
    %% Line 351
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setBackgroundColour'
	    (_cor1, _cor0)
'setAutoLayout'/2 =
    %% Line 353
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAutoLayout'
	    (_cor1, _cor0)
'setAcceleratorTable'/2 =
    %% Line 355
    fun (_cor1,_cor0) ->
	call 'wxWindow':'setAcceleratorTable'
	    (_cor1, _cor0)
'scrollWindow'/4 =
    %% Line 357
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor3, _cor2, _cor1, _cor0)
'scrollWindow'/3 =
    %% Line 359
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'scrollWindow'
	    (_cor2, _cor1, _cor0)
'scrollPages'/2 =
    %% Line 361
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollPages'
	    (_cor1, _cor0)
'scrollLines'/2 =
    %% Line 363
    fun (_cor1,_cor0) ->
	call 'wxWindow':'scrollLines'
	    (_cor1, _cor0)
'screenToClient'/2 =
    %% Line 365
    fun (_cor1,_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor1, _cor0)
'screenToClient'/1 =
    %% Line 367
    fun (_cor0) ->
	call 'wxWindow':'screenToClient'
	    (_cor0)
'reparent'/2 =
    %% Line 369
    fun (_cor1,_cor0) ->
	call 'wxWindow':'reparent'
	    (_cor1, _cor0)
'removeChild'/2 =
    %% Line 371
    fun (_cor1,_cor0) ->
	call 'wxWindow':'removeChild'
	    (_cor1, _cor0)
'releaseMouse'/1 =
    %% Line 373
    fun (_cor0) ->
	call 'wxWindow':'releaseMouse'
	    (_cor0)
'refreshRect'/3 =
    %% Line 375
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor2, _cor1, _cor0)
'refreshRect'/2 =
    %% Line 377
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refreshRect'
	    (_cor1, _cor0)
'refresh'/2 =
    %% Line 379
    fun (_cor1,_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor1, _cor0)
'refresh'/1 =
    %% Line 381
    fun (_cor0) ->
	call 'wxWindow':'refresh'
	    (_cor0)
'raise'/1 =
    %% Line 383
    fun (_cor0) ->
	call 'wxWindow':'raise'
	    (_cor0)
'popupMenu'/4 =
    %% Line 385
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor3, _cor2, _cor1, _cor0)
'popupMenu'/3 =
    %% Line 387
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor2, _cor1, _cor0)
'popupMenu'/2 =
    %% Line 389
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popupMenu'
	    (_cor1, _cor0)
'popEventHandler'/2 =
    %% Line 391
    fun (_cor1,_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor1, _cor0)
'popEventHandler'/1 =
    %% Line 393
    fun (_cor0) ->
	call 'wxWindow':'popEventHandler'
	    (_cor0)
'pageUp'/1 =
    %% Line 395
    fun (_cor0) ->
	call 'wxWindow':'pageUp'
	    (_cor0)
'pageDown'/1 =
    %% Line 397
    fun (_cor0) ->
	call 'wxWindow':'pageDown'
	    (_cor0)
'navigate'/2 =
    %% Line 399
    fun (_cor1,_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor1, _cor0)
'navigate'/1 =
    %% Line 401
    fun (_cor0) ->
	call 'wxWindow':'navigate'
	    (_cor0)
'moveBeforeInTabOrder'/2 =
    %% Line 403
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveBeforeInTabOrder'
	    (_cor1, _cor0)
'moveAfterInTabOrder'/2 =
    %% Line 405
    fun (_cor1,_cor0) ->
	call 'wxWindow':'moveAfterInTabOrder'
	    (_cor1, _cor0)
'move'/4 =
    %% Line 407
    fun (_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor3, _cor2, _cor1, _cor0)
'move'/3 =
    %% Line 409
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor2, _cor1, _cor0)
'move'/2 =
    %% Line 411
    fun (_cor1,_cor0) ->
	call 'wxWindow':'move'
	    (_cor1, _cor0)
'makeModal'/2 =
    %% Line 413
    fun (_cor1,_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor1, _cor0)
'makeModal'/1 =
    %% Line 415
    fun (_cor0) ->
	call 'wxWindow':'makeModal'
	    (_cor0)
'lower'/1 =
    %% Line 417
    fun (_cor0) ->
	call 'wxWindow':'lower'
	    (_cor0)
'lineUp'/1 =
    %% Line 419
    fun (_cor0) ->
	call 'wxWindow':'lineUp'
	    (_cor0)
'lineDown'/1 =
    %% Line 421
    fun (_cor0) ->
	call 'wxWindow':'lineDown'
	    (_cor0)
'layout'/1 =
    %% Line 423
    fun (_cor0) ->
	call 'wxWindow':'layout'
	    (_cor0)
'isTopLevel'/1 =
    %% Line 425
    fun (_cor0) ->
	call 'wxWindow':'isTopLevel'
	    (_cor0)
'isShown'/1 =
    %% Line 427
    fun (_cor0) ->
	call 'wxWindow':'isShown'
	    (_cor0)
'isRetained'/1 =
    %% Line 429
    fun (_cor0) ->
	call 'wxWindow':'isRetained'
	    (_cor0)
'isExposed'/5 =
    %% Line 431
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'isExposed'/3 =
    %% Line 433
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor2, _cor1, _cor0)
'isExposed'/2 =
    %% Line 435
    fun (_cor1,_cor0) ->
	call 'wxWindow':'isExposed'
	    (_cor1, _cor0)
'isEnabled'/1 =
    %% Line 437
    fun (_cor0) ->
	call 'wxWindow':'isEnabled'
	    (_cor0)
'invalidateBestSize'/1 =
    %% Line 439
    fun (_cor0) ->
	call 'wxWindow':'invalidateBestSize'
	    (_cor0)
'initDialog'/1 =
    %% Line 441
    fun (_cor0) ->
	call 'wxWindow':'initDialog'
	    (_cor0)
'inheritAttributes'/1 =
    %% Line 443
    fun (_cor0) ->
	call 'wxWindow':'inheritAttributes'
	    (_cor0)
'hide'/1 =
    %% Line 445
    fun (_cor0) ->
	call 'wxWindow':'hide'
	    (_cor0)
'hasTransparentBackground'/1 =
    %% Line 447
    fun (_cor0) ->
	call 'wxWindow':'hasTransparentBackground'
	    (_cor0)
'hasScrollbar'/2 =
    %% Line 449
    fun (_cor1,_cor0) ->
	call 'wxWindow':'hasScrollbar'
	    (_cor1, _cor0)
'hasCapture'/1 =
    %% Line 451
    fun (_cor0) ->
	call 'wxWindow':'hasCapture'
	    (_cor0)
'getWindowVariant'/1 =
    %% Line 453
    fun (_cor0) ->
	call 'wxWindow':'getWindowVariant'
	    (_cor0)
'getWindowStyleFlag'/1 =
    %% Line 455
    fun (_cor0) ->
	call 'wxWindow':'getWindowStyleFlag'
	    (_cor0)
'getVirtualSize'/1 =
    %% Line 457
    fun (_cor0) ->
	call 'wxWindow':'getVirtualSize'
	    (_cor0)
'getUpdateRegion'/1 =
    %% Line 459
    fun (_cor0) ->
	call 'wxWindow':'getUpdateRegion'
	    (_cor0)
'getToolTip'/1 =
    %% Line 461
    fun (_cor0) ->
	call 'wxWindow':'getToolTip'
	    (_cor0)
'getTextExtent'/3 =
    %% Line 463
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor2, _cor1, _cor0)
'getTextExtent'/2 =
    %% Line 465
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getTextExtent'
	    (_cor1, _cor0)
'getSizer'/1 =
    %% Line 467
    fun (_cor0) ->
	call 'wxWindow':'getSizer'
	    (_cor0)
'getSize'/1 =
    %% Line 469
    fun (_cor0) ->
	call 'wxWindow':'getSize'
	    (_cor0)
'getScrollThumb'/2 =
    %% Line 471
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollThumb'
	    (_cor1, _cor0)
'getScrollRange'/2 =
    %% Line 473
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollRange'
	    (_cor1, _cor0)
'getScrollPos'/2 =
    %% Line 475
    fun (_cor1,_cor0) ->
	call 'wxWindow':'getScrollPos'
	    (_cor1, _cor0)
'getScreenRect'/1 =
    %% Line 477
    fun (_cor0) ->
	call 'wxWindow':'getScreenRect'
	    (_cor0)
'getScreenPosition'/1 =
    %% Line 479
    fun (_cor0) ->
	call 'wxWindow':'getScreenPosition'
	    (_cor0)
'getRect'/1 =
    %% Line 481
    fun (_cor0) ->
	call 'wxWindow':'getRect'
	    (_cor0)
'getPosition'/1 =
    %% Line 483
    fun (_cor0) ->
	call 'wxWindow':'getPosition'
	    (_cor0)
'getParent'/1 =
    %% Line 485
    fun (_cor0) ->
	call 'wxWindow':'getParent'
	    (_cor0)
'getName'/1 =
    %% Line 487
    fun (_cor0) ->
	call 'wxWindow':'getName'
	    (_cor0)
'getMinSize'/1 =
    %% Line 489
    fun (_cor0) ->
	call 'wxWindow':'getMinSize'
	    (_cor0)
'getMaxSize'/1 =
    %% Line 491
    fun (_cor0) ->
	call 'wxWindow':'getMaxSize'
	    (_cor0)
'getId'/1 =
    %% Line 493
    fun (_cor0) ->
	call 'wxWindow':'getId'
	    (_cor0)
'getHelpText'/1 =
    %% Line 495
    fun (_cor0) ->
	call 'wxWindow':'getHelpText'
	    (_cor0)
'getHandle'/1 =
    %% Line 497
    fun (_cor0) ->
	call 'wxWindow':'getHandle'
	    (_cor0)
'getGrandParent'/1 =
    %% Line 499
    fun (_cor0) ->
	call 'wxWindow':'getGrandParent'
	    (_cor0)
'getForegroundColour'/1 =
    %% Line 501
    fun (_cor0) ->
	call 'wxWindow':'getForegroundColour'
	    (_cor0)
'getFont'/1 =
    %% Line 503
    fun (_cor0) ->
	call 'wxWindow':'getFont'
	    (_cor0)
'getExtraStyle'/1 =
    %% Line 505
    fun (_cor0) ->
	call 'wxWindow':'getExtraStyle'
	    (_cor0)
'getEventHandler'/1 =
    %% Line 507
    fun (_cor0) ->
	call 'wxWindow':'getEventHandler'
	    (_cor0)
'getDropTarget'/1 =
    %% Line 509
    fun (_cor0) ->
	call 'wxWindow':'getDropTarget'
	    (_cor0)
'getCursor'/1 =
    %% Line 511
    fun (_cor0) ->
	call 'wxWindow':'getCursor'
	    (_cor0)
'getContainingSizer'/1 =
    %% Line 513
    fun (_cor0) ->
	call 'wxWindow':'getContainingSizer'
	    (_cor0)
'getClientSize'/1 =
    %% Line 515
    fun (_cor0) ->
	call 'wxWindow':'getClientSize'
	    (_cor0)
'getChildren'/1 =
    %% Line 517
    fun (_cor0) ->
	call 'wxWindow':'getChildren'
	    (_cor0)
'getCharWidth'/1 =
    %% Line 519
    fun (_cor0) ->
	call 'wxWindow':'getCharWidth'
	    (_cor0)
'getCharHeight'/1 =
    %% Line 521
    fun (_cor0) ->
	call 'wxWindow':'getCharHeight'
	    (_cor0)
'getCaret'/1 =
    %% Line 523
    fun (_cor0) ->
	call 'wxWindow':'getCaret'
	    (_cor0)
'getBestSize'/1 =
    %% Line 525
    fun (_cor0) ->
	call 'wxWindow':'getBestSize'
	    (_cor0)
'getBackgroundStyle'/1 =
    %% Line 527
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundStyle'
	    (_cor0)
'getBackgroundColour'/1 =
    %% Line 529
    fun (_cor0) ->
	call 'wxWindow':'getBackgroundColour'
	    (_cor0)
'getAcceleratorTable'/1 =
    %% Line 531
    fun (_cor0) ->
	call 'wxWindow':'getAcceleratorTable'
	    (_cor0)
'freeze'/1 =
    %% Line 533
    fun (_cor0) ->
	call 'wxWindow':'freeze'
	    (_cor0)
'fitInside'/1 =
    %% Line 535
    fun (_cor0) ->
	call 'wxWindow':'fitInside'
	    (_cor0)
'fit'/1 =
    %% Line 537
    fun (_cor0) ->
	call 'wxWindow':'fit'
	    (_cor0)
'findWindow'/2 =
    %% Line 539
    fun (_cor1,_cor0) ->
	call 'wxWindow':'findWindow'
	    (_cor1, _cor0)
'enable'/2 =
    %% Line 541
    fun (_cor1,_cor0) ->
	call 'wxWindow':'enable'
	    (_cor1, _cor0)
'enable'/1 =
    %% Line 543
    fun (_cor0) ->
	call 'wxWindow':'enable'
	    (_cor0)
'disable'/1 =
    %% Line 545
    fun (_cor0) ->
	call 'wxWindow':'disable'
	    (_cor0)
'destroyChildren'/1 =
    %% Line 547
    fun (_cor0) ->
	call 'wxWindow':'destroyChildren'
	    (_cor0)
'convertPixelsToDialog'/2 =
    %% Line 549
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertPixelsToDialog'
	    (_cor1, _cor0)
'convertDialogToPixels'/2 =
    %% Line 551
    fun (_cor1,_cor0) ->
	call 'wxWindow':'convertDialogToPixels'
	    (_cor1, _cor0)
'close'/2 =
    %% Line 553
    fun (_cor1,_cor0) ->
	call 'wxWindow':'close'
	    (_cor1, _cor0)
'close'/1 =
    %% Line 555
    fun (_cor0) ->
	call 'wxWindow':'close'
	    (_cor0)
'clientToScreen'/3 =
    %% Line 557
    fun (_cor2,_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor2, _cor1, _cor0)
'clientToScreen'/2 =
    %% Line 559
    fun (_cor1,_cor0) ->
	call 'wxWindow':'clientToScreen'
	    (_cor1, _cor0)
'clearBackground'/1 =
    %% Line 561
    fun (_cor0) ->
	call 'wxWindow':'clearBackground'
	    (_cor0)
'centreOnParent'/2 =
    %% Line 563
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor1, _cor0)
'centreOnParent'/1 =
    %% Line 565
    fun (_cor0) ->
	call 'wxWindow':'centreOnParent'
	    (_cor0)
'centre'/2 =
    %% Line 567
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centre'
	    (_cor1, _cor0)
'centre'/1 =
    %% Line 569
    fun (_cor0) ->
	call 'wxWindow':'centre'
	    (_cor0)
'centerOnParent'/2 =
    %% Line 571
    fun (_cor1,_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor1, _cor0)
'centerOnParent'/1 =
    %% Line 573
    fun (_cor0) ->
	call 'wxWindow':'centerOnParent'
	    (_cor0)
'center'/2 =
    %% Line 575
    fun (_cor1,_cor0) ->
	call 'wxWindow':'center'
	    (_cor1, _cor0)
'center'/1 =
    %% Line 577
    fun (_cor0) ->
	call 'wxWindow':'center'
	    (_cor0)
'captureMouse'/1 =
    %% Line 579
    fun (_cor0) ->
	call 'wxWindow':'captureMouse'
	    (_cor0)
'cacheBestSize'/2 =
    %% Line 581
    fun (_cor1,_cor0) ->
	call 'wxWindow':'cacheBestSize'
	    (_cor1, _cor0)
'disconnect'/3 =
    %% Line 584
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor2, _cor1, _cor0)
'disconnect'/2 =
    %% Line 586
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor1, _cor0)
'disconnect'/1 =
    %% Line 588
    fun (_cor0) ->
	call 'wxEvtHandler':'disconnect'
	    (_cor0)
'connect'/3 =
    %% Line 590
    fun (_cor2,_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor2, _cor1, _cor0)
'connect'/2 =
    %% Line 592
    fun (_cor1,_cor0) ->
	call 'wxEvtHandler':'connect'
	    (_cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxChoice')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxChoice', _cor0)
end