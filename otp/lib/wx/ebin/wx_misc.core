module 'wx_misc' ['beginBusyCursor'/0,
		  'beginBusyCursor'/1,
		  'bell'/0,
		  'displaySize'/0,
		  'endBusyCursor'/0,
		  'findMenuItemId'/3,
		  'findWindowAtPoint'/1,
		  'genericFindWindowAtPoint'/1,
		  'getCurrentId'/0,
		  'getEmailAddress'/0,
		  'getHomeDir'/0,
		  'getKeyState'/1,
		  'getMousePosition'/0,
		  'getMouseState'/0,
		  'getOsDescription'/0,
		  'getUserId'/0,
		  'isBusy'/0,
		  'isPlatform64Bit'/0,
		  'isPlatformLittleEndian'/0,
		  'launchDefaultBrowser'/1,
		  'launchDefaultBrowser'/2,
		  'module_info'/0,
		  'module_info'/1,
		  'newId'/0,
		  'registerId'/1,
		  'setCursor'/1,
		  'setDetectableAutoRepeat'/1,
		  'shell'/0,
		  'shell'/1,
		  'shutdown'/1]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 37
		'spec' =
		    %% Line 37
		    [{{'getKeyState',1},[{'type',37,'bounded_fun',[{'type',37,'fun',[{'type',37,'product',[{'var',37,'Key'}]}|[{'type',37,'boolean',[]}]]}|[[{'type',38,'constraint',[{'atom',38,'is_subtype'}|[[{'var',38,'Key'}|[{'remote_type',38,[{'atom',38,'wx'}|[{'atom',38,'wx_enum'}|[[]]]]}]]]]}]]]}]}],
		%% Line 45
		'spec' =
		    %% Line 45
		    [{{'getMousePosition',0},[{'type',45,'fun',[{'type',45,'product',[]}|[{'type',45,'tuple',[{'ann_type',45,[{'var',45,'X'}|[{'type',45,'integer',[]}]]}|[{'ann_type',45,[{'var',45,'Y'}|[{'type',45,'integer',[]}]]}]]}]]}]}],
		%% Line 51
		'spec' =
		    %% Line 51
		    [{{'getMouseState',0},[{'type',51,'fun',[{'type',51,'product',[]}|[{'remote_type',51,[{'atom',51,'wx'}|[{'atom',51,'wx_wxMouseState'}|[[]]]]}]]}]}],
		%% Line 57
		'spec' =
		    %% Line 57
		    [{{'setDetectableAutoRepeat',1},[{'type',57,'bounded_fun',[{'type',57,'fun',[{'type',57,'product',[{'var',57,'Flag'}]}|[{'type',57,'boolean',[]}]]}|[[{'type',58,'constraint',[{'atom',58,'is_subtype'}|[[{'var',58,'Flag'}|[{'type',58,'boolean',[]}]]]]}]]]}]}],
		%% Line 65
		'spec' =
		    %% Line 65
		    [{{'bell',0},[{'type',65,'fun',[{'type',65,'product',[]}|[{'atom',65,'ok'}]]}]}],
		%% Line 71
		'spec' =
		    %% Line 71
		    [{{'findMenuItemId',3},[{'type',71,'bounded_fun',[{'type',71,'fun',[{'type',71,'product',[{'var',71,'Frame'}|[{'var',71,'MenuString'}|[{'var',71,'ItemString'}]]]}|[{'type',71,'integer',[]}]]}|[[{'type',72,'constraint',[{'atom',72,'is_subtype'}|[[{'var',72,'Frame'}|[{'remote_type',72,[{'atom',72,'wxFrame'}|[{'atom',72,'wxFrame'}|[[]]]]}]]]]}|[{'type',72,'constraint',[{'atom',72,'is_subtype'}|[[{'var',72,'MenuString'}|[{'remote_type',72,[{'atom',72,'unicode'}|[{'atom',72,'chardata'}|[[]]]]}]]]]}|[{'type',72,'constraint',[{'atom',72,'is_subtype'}|[[{'var',72,'ItemString'}|[{'remote_type',72,[{'atom',72,'unicode'}|[{'atom',72,'chardata'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 82
		'spec' =
		    %% Line 82
		    [{{'genericFindWindowAtPoint',1},[{'type',82,'bounded_fun',[{'type',82,'fun',[{'type',82,'product',[{'var',82,'Pt'}]}|[{'remote_type',82,[{'atom',82,'wxWindow'}|[{'atom',82,'wxWindow'}|[[]]]]}]]}|[[{'type',83,'constraint',[{'atom',83,'is_subtype'}|[[{'var',83,'Pt'}|[{'type',83,'tuple',[{'ann_type',83,[{'var',83,'X'}|[{'type',83,'integer',[]}]]}|[{'ann_type',83,[{'var',83,'Y'}|[{'type',83,'integer',[]}]]}]]}]]]]}]]]}]}],
		%% Line 90
		'spec' =
		    %% Line 90
		    [{{'findWindowAtPoint',1},[{'type',90,'bounded_fun',[{'type',90,'fun',[{'type',90,'product',[{'var',90,'Pt'}]}|[{'remote_type',90,[{'atom',90,'wxWindow'}|[{'atom',90,'wxWindow'}|[[]]]]}]]}|[[{'type',91,'constraint',[{'atom',91,'is_subtype'}|[[{'var',91,'Pt'}|[{'type',91,'tuple',[{'ann_type',91,[{'var',91,'X'}|[{'type',91,'integer',[]}]]}|[{'ann_type',91,[{'var',91,'Y'}|[{'type',91,'integer',[]}]]}]]}]]]]}]]]}]}],
		%% Line 98
		'spec' =
		    %% Line 98
		    [{{'beginBusyCursor',0},[{'type',98,'fun',[{'type',98,'product',[]}|[{'atom',98,'ok'}]]}]}],
		%% Line 104
		'spec' =
		    %% Line 104
		    [{{'beginBusyCursor',1},[{'type',104,'bounded_fun',[{'type',104,'fun',[{'type',104,'product',[{'type',104,'list',[{'var',104,'Option'}]}]}|[{'atom',104,'ok'}]]}|[[{'type',105,'constraint',[{'atom',105,'is_subtype'}|[[{'var',105,'Option'}|[{'type',105,'tuple',[{'atom',105,'cursor'}|[{'remote_type',105,[{'atom',105,'wxCursor'}|[{'atom',105,'wxCursor'}|[[]]]]}]]}]]]]}]]]}]}],
		%% Line 115
		'spec' =
		    %% Line 115
		    [{{'endBusyCursor',0},[{'type',115,'fun',[{'type',115,'product',[]}|[{'atom',115,'ok'}]]}]}],
		%% Line 121
		'spec' =
		    %% Line 121
		    [{{'isBusy',0},[{'type',121,'fun',[{'type',121,'product',[]}|[{'type',121,'boolean',[]}]]}]}],
		%% Line 128
		'spec' =
		    %% Line 128
		    [{{'shutdown',1},[{'type',128,'bounded_fun',[{'type',128,'fun',[{'type',128,'product',[{'var',128,'WFlags'}]}|[{'type',128,'boolean',[]}]]}|[[{'type',129,'constraint',[{'atom',129,'is_subtype'}|[[{'var',129,'WFlags'}|[{'remote_type',129,[{'atom',129,'wx'}|[{'atom',129,'wx_enum'}|[[]]]]}]]]]}]]]}]}],
		%% Line 136
		'spec' =
		    %% Line 136
		    [{{'shell',0},[{'type',136,'fun',[{'type',136,'product',[]}|[{'type',136,'boolean',[]}]]}]}],
		%% Line 142
		'spec' =
		    %% Line 142
		    [{{'shell',1},[{'type',142,'bounded_fun',[{'type',142,'fun',[{'type',142,'product',[{'type',142,'list',[{'var',142,'Option'}]}]}|[{'type',142,'boolean',[]}]]}|[[{'type',143,'constraint',[{'atom',143,'is_subtype'}|[[{'var',143,'Option'}|[{'type',143,'tuple',[{'atom',143,'command'}|[{'remote_type',143,[{'atom',143,'unicode'}|[{'atom',143,'chardata'}|[[]]]]}]]}]]]]}]]]}]}],
		%% Line 153
		'spec' =
		    %% Line 153
		    [{{'launchDefaultBrowser',1},[{'type',153,'bounded_fun',[{'type',153,'fun',[{'type',153,'product',[{'var',153,'Url'}]}|[{'type',153,'boolean',[]}]]}|[[{'type',154,'constraint',[{'atom',154,'is_subtype'}|[[{'var',154,'Url'}|[{'remote_type',154,[{'atom',154,'unicode'}|[{'atom',154,'chardata'}|[[]]]]}]]]]}]]]}]}],
		%% Line 161
		'spec' =
		    %% Line 161
		    [{{'launchDefaultBrowser',2},[{'type',161,'bounded_fun',[{'type',161,'fun',[{'type',161,'product',[{'var',161,'Url'}|[{'type',161,'list',[{'var',161,'Option'}]}]]}|[{'type',161,'boolean',[]}]]}|[[{'type',162,'constraint',[{'atom',162,'is_subtype'}|[[{'var',162,'Url'}|[{'remote_type',162,[{'atom',162,'unicode'}|[{'atom',162,'chardata'}|[[]]]]}]]]]}|[{'type',163,'constraint',[{'atom',163,'is_subtype'}|[[{'var',163,'Option'}|[{'type',163,'tuple',[{'atom',163,'flags'}|[{'type',163,'integer',[]}]]}]]]]}]]]]}]}],
		%% Line 174
		'spec' =
		    %% Line 174
		    [{{'getEmailAddress',0},[{'type',174,'fun',[{'type',174,'product',[]}|[{'remote_type',174,[{'atom',174,'unicode'}|[{'atom',174,'charlist'}|[[]]]]}]]}]}],
		%% Line 180
		'spec' =
		    %% Line 180
		    [{{'getUserId',0},[{'type',180,'fun',[{'type',180,'product',[]}|[{'remote_type',180,[{'atom',180,'unicode'}|[{'atom',180,'charlist'}|[[]]]]}]]}]}],
		%% Line 186
		'spec' =
		    %% Line 186
		    [{{'getHomeDir',0},[{'type',186,'fun',[{'type',186,'product',[]}|[{'remote_type',186,[{'atom',186,'unicode'}|[{'atom',186,'charlist'}|[[]]]]}]]}]}],
		%% Line 192
		'spec' =
		    %% Line 192
		    [{{'newId',0},[{'type',192,'fun',[{'type',192,'product',[]}|[{'type',192,'integer',[]}]]}]}],
		%% Line 198
		'spec' =
		    %% Line 198
		    [{{'registerId',1},[{'type',198,'bounded_fun',[{'type',198,'fun',[{'type',198,'product',[{'var',198,'Id'}]}|[{'atom',198,'ok'}]]}|[[{'type',199,'constraint',[{'atom',199,'is_subtype'}|[[{'var',199,'Id'}|[{'type',199,'integer',[]}]]]]}]]]}]}],
		%% Line 206
		'spec' =
		    %% Line 206
		    [{{'getCurrentId',0},[{'type',206,'fun',[{'type',206,'product',[]}|[{'type',206,'integer',[]}]]}]}],
		%% Line 212
		'spec' =
		    %% Line 212
		    [{{'getOsDescription',0},[{'type',212,'fun',[{'type',212,'product',[]}|[{'remote_type',212,[{'atom',212,'unicode'}|[{'atom',212,'charlist'}|[[]]]]}]]}]}],
		%% Line 218
		'spec' =
		    %% Line 218
		    [{{'isPlatformLittleEndian',0},[{'type',218,'fun',[{'type',218,'product',[]}|[{'type',218,'boolean',[]}]]}]}],
		%% Line 224
		'spec' =
		    %% Line 224
		    [{{'isPlatform64Bit',0},[{'type',224,'fun',[{'type',224,'product',[]}|[{'type',224,'boolean',[]}]]}]}],
		%% Line 230
		'spec' =
		    %% Line 230
		    [{{'displaySize',0},[{'type',230,'fun',[{'type',230,'product',[]}|[{'type',230,'tuple',[{'ann_type',230,[{'var',230,'Width'}|[{'type',230,'integer',[]}]]}|[{'ann_type',230,[{'var',230,'Height'}|[{'type',230,'integer',[]}]]}]]}]]}]}],
		%% Line 236
		'spec' =
		    %% Line 236
		    [{{'setCursor',1},[{'type',236,'bounded_fun',[{'type',236,'fun',[{'type',236,'product',[{'var',236,'Cursor'}]}|[{'atom',236,'ok'}]]}|[[{'type',237,'constraint',[{'atom',237,'is_subtype'}|[[{'var',237,'Cursor'}|[{'remote_type',237,[{'atom',237,'wxCursor'}|[{'atom',237,'wxCursor'}|[[]]]]}]]]]}]]]}]}]]
'getKeyState'/1 =
    %% Line 39
    fun (_cor0) ->
	case _cor0 of
	  <Key>
	      when %% Line 40
		call 'erlang':'is_integer'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 42
		  #{#<Key>(32,1,'integer',['unsigned'|['native']])}#
	      in  %% Line 41
		  call 'wxe_util':'call'
		      (2905, _cor1)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'getKeyState',1}}] )
	    -| ['compiler_generated'] )
	end
'getMousePosition'/0 =
    %% Line 46
    fun () ->
	%% Line 47
	call 'wxe_util':'call'
	    (2906, %% Line 48
		   #{}#)
'getMouseState'/0 =
    %% Line 52
    fun () ->
	%% Line 53
	call 'wxe_util':'call'
	    (2907, %% Line 54
		   #{}#)
'setDetectableAutoRepeat'/1 =
    %% Line 59
    fun (_cor0) ->
	case _cor0 of
	  <Flag>
	      when %% Line 60
		call 'erlang':'is_boolean'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 62
		  call 'wxe_util':'from_bool'
		      (Flag)
	      in  let <_cor2> =
		      %% Line 62
		      #{#<_cor1>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 61
		      call 'wxe_util':'call'
			  (2908, _cor2)
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'setDetectableAutoRepeat',1}}] )
	    -| ['compiler_generated'] )
	end
'bell'/0 =
    %% Line 66
    fun () ->
	%% Line 67
	call 'wxe_util':'cast'
	    (2909, %% Line 68
		   #{}#)
'findMenuItemId'/3 =
    %% Line 73
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',FrameRef,FrameT,_cor25},MenuString,ItemString>
	      when let <_cor3> =
		    %% Line 74
		    call 'erlang':'is_list'
			(MenuString)
		in  let <_cor4> =
			%% Line 74
			call 'erlang':'is_list'
			    (ItemString)
		    in  %% Line 74
			call 'erlang':'and'
			    (_cor3, _cor4) ->
	      do  %% Line 75
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (FrameT,
				   'wxFrame') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call FrameT:'parent_class'
				('wxFrame')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <MenuString_UC> =
		      %% Line 76
		      call 'unicode':'characters_to_binary'
			  ([MenuString|[0]])
		  in  let <ItemString_UC> =
			  %% Line 77
			  call 'unicode':'characters_to_binary'
			      ([ItemString|[0]])
		      in  let <_cor20> =
			      %% Line 79
			      call 'erlang':'byte_size'
				  (MenuString_UC)
			  in  let <_cor15> =
				  %% Line 79
				  call 'erlang':'byte_size'
				      (MenuString_UC)
			      in  let <_cor16> =
				      %% Line 79
				      call 'erlang':'+'
					  (0, _cor15)
				  in  let <_cor17> =
					  %% Line 79
					  call 'erlang':'band'
					      (_cor16, 7)
				      in  let <_cor18> =
					      %% Line 79
					      call 'erlang':'-'
						  (8, _cor17)
					  in  let <_cor19> =
						  %% Line 79
						  call 'erlang':'band'
						      (_cor18, 7)
					      in  let <_cor14> =
						      %% Line 79
						      call 'erlang':'byte_size'
							  (ItemString_UC)
						  in  let <_cor9> =
							  %% Line 79
							  call 'erlang':'byte_size'
							      (ItemString_UC)
						      in  let <_cor10> =
							      %% Line 79
							      call 'erlang':'+'
								  (4, _cor9)
							  in  let <_cor11> =
								  %% Line 79
								  call 'erlang':'band'
								      (_cor10, 7)
							      in  let <_cor12> =
								      %% Line 79
								      call 'erlang':'-'
									  (8, _cor11)
								  in  let <_cor13> =
									  %% Line 79
									  call 'erlang':'band'
									      (_cor12, 7)
								      in  let <_cor21> =
									      %% Line 79
									      #{#<FrameRef>(32,1,'integer',['unsigned'|['native']]),
										#<_cor20>(32,1,'integer',['unsigned'|['native']]),
										#<MenuString_UC>('all',8,'binary',['unsigned'|['big']]),
										#<0>(_cor19,8,'integer',['unsigned'|['big']]),
										#<_cor14>(32,1,'integer',['unsigned'|['native']]),
										#<ItemString_UC>('all',8,'binary',['unsigned'|['big']]),
										#<0>(_cor13,8,'integer',['unsigned'|['big']])}#
									  in  %% Line 78
									      call 'wxe_util':'call'
										  (2910, _cor21)
	  ( <_cor24,_cor23,_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22})
		  -| [{'function_name',{'findMenuItemId',3}}] )
	    -| ['compiler_generated'] )
	end
'genericFindWindowAtPoint'/1 =
    %% Line 84
    fun (_cor0) ->
	case _cor0 of
	  <{PtX,PtY}>
	      when let <_cor1> =
		    %% Line 85
		    call 'erlang':'is_integer'
			(PtX)
		in  let <_cor2> =
			%% Line 85
			call 'erlang':'is_integer'
			    (PtY)
		    in  %% Line 85
			call 'erlang':'and'
			    (_cor1, _cor2) ->
	      let <_cor3> =
		  %% Line 87
		  #{#<PtX>(32,1,'integer',['unsigned'|['native']]),
		    #<PtY>(32,1,'integer',['unsigned'|['native']])}#
	      in  %% Line 86
		  call 'wxe_util':'call'
		      (2911, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'genericFindWindowAtPoint',1}}] )
	    -| ['compiler_generated'] )
	end
'findWindowAtPoint'/1 =
    %% Line 92
    fun (_cor0) ->
	case _cor0 of
	  <{PtX,PtY}>
	      when let <_cor1> =
		    %% Line 93
		    call 'erlang':'is_integer'
			(PtX)
		in  let <_cor2> =
			%% Line 93
			call 'erlang':'is_integer'
			    (PtY)
		    in  %% Line 93
			call 'erlang':'and'
			    (_cor1, _cor2) ->
	      let <_cor3> =
		  %% Line 95
		  #{#<PtX>(32,1,'integer',['unsigned'|['native']]),
		    #<PtY>(32,1,'integer',['unsigned'|['native']])}#
	      in  %% Line 94
		  call 'wxe_util':'call'
		      (2912, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'findWindowAtPoint',1}}] )
	    -| ['compiler_generated'] )
	end
'beginBusyCursor'/0 =
    %% Line 100
    fun () ->
	%% Line 101
	apply 'beginBusyCursor'/1
	    ([])
'beginBusyCursor'/1 =
    %% Line 106
    fun (_cor0) ->
	case _cor0 of
	  <Options>
	      when %% Line 107
		call 'erlang':'is_list'
		    (_cor0) ->
	      let <MOpts> =
		  %% Line 108
		  ( fun (_cor5,_cor4) ->
			case <_cor5,_cor4> of
			  <{'cursor',{'wx_ref',CursorRef,CursorT,_cor13}},Acc> when 'true' ->
			      do  ( case <> of
				      ( <>
					    when call 'erlang':'=:='
						  (CursorT,
						   'wxCursor') ->
					    'ok'
					-| ['compiler_generated'] )
				      ( <> when 'true' ->
					    call CursorT:'parent_class'
						('wxCursor')
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
				  let <_cor3> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<CursorRef>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor3|Acc]
			  %% Line 109
			  <BadOpt,_cor14> when 'true' ->
			      call 'erlang':'error'
				  ({'badoption',BadOpt})
			end
		    -| [{'id',{0,0,'-beginBusyCursor/1-fun-0-'}}] )
	      in  let <_cor9> =
		      %% Line 110
		      call 'lists':'foldl'
			  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		  in  let <BinOpt> =
			  %% Line 110
			  call 'erlang':'list_to_binary'
			      (_cor9)
		      in  let <_cor11> =
			      %% Line 112
			      #{#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			  in  %% Line 111
			      call 'wxe_util':'cast'
				  (2913, _cor11)
	  ( <_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12})
		  -| [{'function_name',{'beginBusyCursor',1}}] )
	    -| ['compiler_generated'] )
	end
'endBusyCursor'/0 =
    %% Line 116
    fun () ->
	%% Line 117
	call 'wxe_util':'cast'
	    (2914, %% Line 118
		   #{}#)
'isBusy'/0 =
    %% Line 122
    fun () ->
	%% Line 123
	call 'wxe_util':'call'
	    (2915, %% Line 124
		   #{}#)
'shutdown'/1 =
    %% Line 130
    fun (_cor0) ->
	case _cor0 of
	  <WFlags>
	      when %% Line 131
		call 'erlang':'is_integer'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 133
		  #{#<WFlags>(32,1,'integer',['unsigned'|['native']])}#
	      in  %% Line 132
		  call 'wxe_util':'call'
		      (2916, _cor1)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'shutdown',1}}] )
	    -| ['compiler_generated'] )
	end
'shell'/0 =
    %% Line 138
    fun () ->
	%% Line 139
	apply 'shell'/1
	    ([])
'shell'/1 =
    %% Line 144
    fun (_cor0) ->
	case _cor0 of
	  <Options>
	      when %% Line 145
		call 'erlang':'is_list'
		    (_cor0) ->
	      let <MOpts> =
		  %% Line 146
		  ( fun (_cor10,_cor9) ->
			case <_cor10,_cor9> of
			  <{'command',Command},Acc> when 'true' ->
			      let <Command_UC> =
				  call 'unicode':'characters_to_binary'
				      ([Command|[0]])
			      in  let <_cor7> =
				      call 'erlang':'byte_size'
					  (Command_UC)
				  in  let <_cor2> =
					  call 'erlang':'byte_size'
					      (Command_UC)
				      in  let <_cor3> =
					      call 'erlang':'+'
						  (0, _cor2)
					  in  let <_cor4> =
						  call 'erlang':'band'
						      (_cor3, 7)
					      in  let <_cor5> =
						      call 'erlang':'-'
							  (8, _cor4)
						  in  let <_cor6> =
							  call 'erlang':'band'
							      (_cor5, 7)
						      in  let <_cor8> =
							      #{#<1>(32,1,'integer',['unsigned'|['native']]),
								#<_cor7>(32,1,'integer',['unsigned'|['native']]),
								#<Command_UC>('all',8,'binary',['unsigned'|['big']]),
								#<0>(_cor6,8,'integer',['unsigned'|['big']])}#
							  in  [_cor8|Acc]
			  %% Line 147
			  <BadOpt,_cor18> when 'true' ->
			      call 'erlang':'error'
				  ({'badoption',BadOpt})
			end
		    -| [{'id',{0,0,'-shell/1-fun-0-'}}] )
	      in  let <_cor14> =
		      %% Line 148
		      call 'lists':'foldl'
			  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		  in  let <BinOpt> =
			  %% Line 148
			  call 'erlang':'list_to_binary'
			      (_cor14)
		      in  let <_cor16> =
			      %% Line 150
			      #{#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			  in  %% Line 149
			      call 'wxe_util':'call'
				  (2917, _cor16)
	  ( <_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17})
		  -| [{'function_name',{'shell',1}}] )
	    -| ['compiler_generated'] )
	end
'launchDefaultBrowser'/1 =
    %% Line 156
    fun (_cor0) ->
	case _cor0 of
	  <Url>
	      when %% Line 157
		call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 158
	      apply 'launchDefaultBrowser'/2
		  (Url, [])
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'launchDefaultBrowser',1}}] )
	    -| ['compiler_generated'] )
	end
'launchDefaultBrowser'/2 =
    %% Line 164
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Url,Options>
	      when let <_cor2> =
		    %% Line 165
		    call 'erlang':'is_list'
			(Url)
		in  let <_cor3> =
			%% Line 165
			call 'erlang':'is_list'
			    (Options)
		    in  %% Line 165
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      let <Url_UC> =
		  %% Line 166
		  call 'unicode':'characters_to_binary'
		      ([Url|[0]])
	      in  let <MOpts> =
		      %% Line 167
		      ( fun (_cor7,_cor6) ->
			    case <_cor7,_cor6> of
			      <{'flags',Flags},Acc> when 'true' ->
				  let <_cor5> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<Flags>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor5|Acc]
			      %% Line 168
			      <BadOpt,_cor22> when 'true' ->
				  call 'erlang':'error'
				      ({'badoption',BadOpt})
			    end
			-| [{'id',{0,0,'-launchDefaultBrowser/2-fun-0-'}}] )
		  in  let <_cor11> =
			  %% Line 169
			  call 'lists':'foldl'
			      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']]),
					 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		      in  let <BinOpt> =
			      %% Line 169
			      call 'erlang':'list_to_binary'
				  (_cor11)
			  in  let <_cor18> =
				  %% Line 171
				  call 'erlang':'byte_size'
				      (Url_UC)
			      in  let <_cor13> =
				      %% Line 171
				      call 'erlang':'byte_size'
					  (Url_UC)
				  in  let <_cor14> =
					  %% Line 171
					  call 'erlang':'+'
					      (4, _cor13)
				      in  let <_cor15> =
					      %% Line 171
					      call 'erlang':'band'
						  (_cor14, 7)
					  in  let <_cor16> =
						  %% Line 171
						  call 'erlang':'-'
						      (8, _cor15)
					      in  let <_cor17> =
						      %% Line 171
						      call 'erlang':'band'
							  (_cor16, 7)
						  in  let <_cor19> =
							  %% Line 171
							  #{#<_cor18>(32,1,'integer',['unsigned'|['native']]),
							    #<Url_UC>('all',8,'binary',['unsigned'|['big']]),
							    #<0>(_cor17,8,'integer',['unsigned'|['big']]),
							    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
						      in  %% Line 170
							  call 'wxe_util':'call'
							      (2918, _cor19)
	  ( <_cor21,_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor21,_cor20})
		  -| [{'function_name',{'launchDefaultBrowser',2}}] )
	    -| ['compiler_generated'] )
	end
'getEmailAddress'/0 =
    %% Line 175
    fun () ->
	%% Line 176
	call 'wxe_util':'call'
	    (2919, %% Line 177
		   #{}#)
'getUserId'/0 =
    %% Line 181
    fun () ->
	%% Line 182
	call 'wxe_util':'call'
	    (2920, %% Line 183
		   #{}#)
'getHomeDir'/0 =
    %% Line 187
    fun () ->
	%% Line 188
	call 'wxe_util':'call'
	    (2921, %% Line 189
		   #{}#)
'newId'/0 =
    %% Line 193
    fun () ->
	%% Line 194
	call 'wxe_util':'call'
	    (2922, %% Line 195
		   #{}#)
'registerId'/1 =
    %% Line 200
    fun (_cor0) ->
	case _cor0 of
	  <Id>
	      when %% Line 201
		call 'erlang':'is_integer'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 203
		  #{#<Id>(32,1,'integer',['unsigned'|['native']])}#
	      in  %% Line 202
		  call 'wxe_util':'cast'
		      (2923, _cor1)
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'registerId',1}}] )
	    -| ['compiler_generated'] )
	end
'getCurrentId'/0 =
    %% Line 207
    fun () ->
	%% Line 208
	call 'wxe_util':'call'
	    (2924, %% Line 209
		   #{}#)
'getOsDescription'/0 =
    %% Line 213
    fun () ->
	%% Line 214
	call 'wxe_util':'call'
	    (2925, %% Line 215
		   #{}#)
'isPlatformLittleEndian'/0 =
    %% Line 219
    fun () ->
	%% Line 220
	call 'wxe_util':'call'
	    (2926, %% Line 221
		   #{}#)
'isPlatform64Bit'/0 =
    %% Line 225
    fun () ->
	%% Line 226
	call 'wxe_util':'call'
	    (2927, %% Line 227
		   #{}#)
'displaySize'/0 =
    %% Line 231
    fun () ->
	%% Line 232
	call 'wxe_util':'call'
	    (2928, %% Line 233
		   #{}#)
'setCursor'/1 =
    %% Line 238
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',CursorRef,CursorT,_cor5}> when 'true' ->
	      do  %% Line 239
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (CursorT,
				   'wxCursor') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call CursorT:'parent_class'
				('wxCursor')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 241
		      #{#<CursorRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 240
		      call 'wxe_util':'cast'
			  (2929, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'setCursor',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wx_misc')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wx_misc', _cor0)
end