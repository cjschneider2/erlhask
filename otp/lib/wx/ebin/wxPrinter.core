module 'wxPrinter' ['createAbortWindow'/3,
		    'destroy'/1,
		    'getAbort'/1,
		    'getLastError'/0,
		    'getPrintDialogData'/1,
		    'module_info'/0,
		    'module_info'/1,
		    'new'/0,
		    'new'/1,
		    'parent_class'/1,
		    'print'/3,
		    'print'/4,
		    'printDialog'/2,
		    'reportError'/4,
		    'setup'/2]
    attributes [%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','wx_ref'},[{'record_field',26,{'atom',26,'ref'}}|[{'record_field',26,{'atom',26,'type'}}|[{'record_field',26,{'atom',26,'state'},{'nil',26}}]]],[]}],
		%% Line 28
		'type' =
		    %% Line 28
		    [{{'record','wx_env'},[{'record_field',28,{'atom',28,'port'}}|[{'record_field',28,{'atom',28,'sv'}}|[{'record_field',28,{'atom',28,'debug'},{'integer',28,0}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','wx_mem'},[{'record_field',30,{'atom',30,'bin'}}|[{'record_field',30,{'atom',30,'size'}}]],[]}],
		%% Line 32
		'type' =
		    %% Line 32
		    [{{'record','evh'},[{'record_field',32,{'atom',32,'et'},{'atom',32,'null'}}|[{'record_field',32,{'atom',32,'id'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'lastId'},{'op',32,'-',{'integer',32,1}}}|[{'record_field',32,{'atom',32,'cb'},{'integer',32,0}}|[{'record_field',33,{'atom',33,'skip'},{'atom',33,'undefined'}}|[{'record_field',33,{'atom',33,'userdata'},{'nil',33}}|[{'record_field',34,{'atom',34,'handler'},{'atom',34,'undefined'}}]]]]]]],[]}],
		%% Line 33
		'export_type' =
		    %% Line 33
		    [{'wxPrinter',0}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{'wxPrinter',{'remote_type',37,[{'atom',37,'wx'}|[{'atom',37,'wx_object'}|[[]]]]},[]}],
		%% Line 39
		'spec' =
		    %% Line 39
		    [{{'new',0},[{'type',39,'fun',[{'type',39,'product',[]}|[{'type',39,'wxPrinter',[]}]]}]}],
		%% Line 45
		'spec' =
		    %% Line 45
		    [{{'new',1},[{'type',45,'bounded_fun',[{'type',45,'fun',[{'type',45,'product',[{'type',45,'list',[{'var',45,'Option'}]}]}|[{'type',45,'wxPrinter',[]}]]}|[[{'type',46,'constraint',[{'atom',46,'is_subtype'}|[[{'var',46,'Option'}|[{'type',46,'tuple',[{'atom',46,'data'}|[{'remote_type',46,[{'atom',46,'wxPrintDialogData'}|[{'atom',46,'wxPrintDialogData'}|[[]]]]}]]}]]]]}]]]}]}],
		%% Line 56
		'spec' =
		    %% Line 56
		    [{{'createAbortWindow',3},[{'type',56,'bounded_fun',[{'type',56,'fun',[{'type',56,'product',[{'var',56,'This'}|[{'var',56,'Parent'}|[{'var',56,'Printout'}]]]}|[{'remote_type',56,[{'atom',56,'wxWindow'}|[{'atom',56,'wxWindow'}|[[]]]]}]]}|[[{'type',57,'constraint',[{'atom',57,'is_subtype'}|[[{'var',57,'This'}|[{'type',57,'wxPrinter',[]}]]]]}|[{'type',57,'constraint',[{'atom',57,'is_subtype'}|[[{'var',57,'Parent'}|[{'remote_type',57,[{'atom',57,'wxWindow'}|[{'atom',57,'wxWindow'}|[[]]]]}]]]]}|[{'type',57,'constraint',[{'atom',57,'is_subtype'}|[[{'var',57,'Printout'}|[{'remote_type',57,[{'atom',57,'wxPrintout'}|[{'atom',57,'wxPrintout'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 66
		'spec' =
		    %% Line 66
		    [{{'getAbort',1},[{'type',66,'bounded_fun',[{'type',66,'fun',[{'type',66,'product',[{'var',66,'This'}]}|[{'type',66,'boolean',[]}]]}|[[{'type',67,'constraint',[{'atom',67,'is_subtype'}|[[{'var',67,'This'}|[{'type',67,'wxPrinter',[]}]]]]}]]]}]}],
		%% Line 75
		'spec' =
		    %% Line 75
		    [{{'getLastError',0},[{'type',75,'fun',[{'type',75,'product',[]}|[{'remote_type',75,[{'atom',75,'wx'}|[{'atom',75,'wx_enum'}|[[]]]]}]]}]}],
		%% Line 81
		'spec' =
		    %% Line 81
		    [{{'getPrintDialogData',1},[{'type',81,'bounded_fun',[{'type',81,'fun',[{'type',81,'product',[{'var',81,'This'}]}|[{'remote_type',81,[{'atom',81,'wxPrintDialogData'}|[{'atom',81,'wxPrintDialogData'}|[[]]]]}]]}|[[{'type',82,'constraint',[{'atom',82,'is_subtype'}|[[{'var',82,'This'}|[{'type',82,'wxPrinter',[]}]]]]}]]]}]}],
		%% Line 89
		'spec' =
		    %% Line 89
		    [{{'print',3},[{'type',89,'bounded_fun',[{'type',89,'fun',[{'type',89,'product',[{'var',89,'This'}|[{'var',89,'Parent'}|[{'var',89,'Printout'}]]]}|[{'type',89,'boolean',[]}]]}|[[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'This'}|[{'type',90,'wxPrinter',[]}]]]]}|[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'Parent'}|[{'remote_type',90,[{'atom',90,'wxWindow'}|[{'atom',90,'wxWindow'}|[[]]]]}]]]]}|[{'type',90,'constraint',[{'atom',90,'is_subtype'}|[[{'var',90,'Printout'}|[{'remote_type',90,[{'atom',90,'wxPrintout'}|[{'atom',90,'wxPrintout'}|[[]]]]}]]]]}]]]]]}]}],
		%% Line 97
		'spec' =
		    %% Line 97
		    [{{'print',4},[{'type',97,'bounded_fun',[{'type',97,'fun',[{'type',97,'product',[{'var',97,'This'}|[{'var',97,'Parent'}|[{'var',97,'Printout'}|[{'type',97,'list',[{'var',97,'Option'}]}]]]]}|[{'type',97,'boolean',[]}]]}|[[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'This'}|[{'type',98,'wxPrinter',[]}]]]]}|[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'Parent'}|[{'remote_type',98,[{'atom',98,'wxWindow'}|[{'atom',98,'wxWindow'}|[[]]]]}]]]]}|[{'type',98,'constraint',[{'atom',98,'is_subtype'}|[[{'var',98,'Printout'}|[{'remote_type',98,[{'atom',98,'wxPrintout'}|[{'atom',98,'wxPrintout'}|[[]]]]}]]]]}|[{'type',99,'constraint',[{'atom',99,'is_subtype'}|[[{'var',99,'Option'}|[{'type',99,'tuple',[{'atom',99,'prompt'}|[{'type',99,'boolean',[]}]]}]]]]}]]]]]]}]}],
		%% Line 112
		'spec' =
		    %% Line 112
		    [{{'printDialog',2},[{'type',112,'bounded_fun',[{'type',112,'fun',[{'type',112,'product',[{'var',112,'This'}|[{'var',112,'Parent'}]]}|[{'remote_type',112,[{'atom',112,'wxDC'}|[{'atom',112,'wxDC'}|[[]]]]}]]}|[[{'type',113,'constraint',[{'atom',113,'is_subtype'}|[[{'var',113,'This'}|[{'type',113,'wxPrinter',[]}]]]]}|[{'type',113,'constraint',[{'atom',113,'is_subtype'}|[[{'var',113,'Parent'}|[{'remote_type',113,[{'atom',113,'wxWindow'}|[{'atom',113,'wxWindow'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 121
		'spec' =
		    %% Line 121
		    [{{'reportError',4},[{'type',121,'bounded_fun',[{'type',121,'fun',[{'type',121,'product',[{'var',121,'This'}|[{'var',121,'Parent'}|[{'var',121,'Printout'}|[{'var',121,'Message'}]]]]}|[{'atom',121,'ok'}]]}|[[{'type',122,'constraint',[{'atom',122,'is_subtype'}|[[{'var',122,'This'}|[{'type',122,'wxPrinter',[]}]]]]}|[{'type',122,'constraint',[{'atom',122,'is_subtype'}|[[{'var',122,'Parent'}|[{'remote_type',122,[{'atom',122,'wxWindow'}|[{'atom',122,'wxWindow'}|[[]]]]}]]]]}|[{'type',122,'constraint',[{'atom',122,'is_subtype'}|[[{'var',122,'Printout'}|[{'remote_type',122,[{'atom',122,'wxPrintout'}|[{'atom',122,'wxPrintout'}|[[]]]]}]]]]}|[{'type',122,'constraint',[{'atom',122,'is_subtype'}|[[{'var',122,'Message'}|[{'remote_type',122,[{'atom',122,'unicode'}|[{'atom',122,'chardata'}|[[]]]]}]]]]}]]]]]]}]}],
		%% Line 133
		'spec' =
		    %% Line 133
		    [{{'setup',2},[{'type',133,'bounded_fun',[{'type',133,'fun',[{'type',133,'product',[{'var',133,'This'}|[{'var',133,'Parent'}]]}|[{'type',133,'boolean',[]}]]}|[[{'type',134,'constraint',[{'atom',134,'is_subtype'}|[[{'var',134,'This'}|[{'type',134,'wxPrinter',[]}]]]]}|[{'type',134,'constraint',[{'atom',134,'is_subtype'}|[[{'var',134,'Parent'}|[{'remote_type',134,[{'atom',134,'wxWindow'}|[{'atom',134,'wxWindow'}|[[]]]]}]]]]}]]]]}]}],
		%% Line 142
		'spec' =
		    %% Line 142
		    [{{'destroy',1},[{'type',142,'fun',[{'type',142,'product',[{'ann_type',142,[{'var',142,'This'}|[{'type',142,'wxPrinter',[]}]]}]}|[{'atom',142,'ok'}]]}]}]]
'parent_class'/1 =
    %% Line 35
    fun (_cor0) ->
	call 'erlang':'error'
	    ({'badtype','wxPrinter'})
'new'/0 =
    %% Line 41
    fun () ->
	%% Line 42
	apply 'new'/1
	    ([])
'new'/1 =
    %% Line 47
    fun (_cor0) ->
	case _cor0 of
	  <Options>
	      when %% Line 48
		call 'erlang':'is_list'
		    (_cor0) ->
	      let <MOpts> =
		  %% Line 49
		  ( fun (_cor5,_cor4) ->
			case <_cor5,_cor4> of
			  <{'data',{'wx_ref',DataRef,DataT,_cor13}},Acc> when 'true' ->
			      do  ( case <> of
				      ( <>
					    when call 'erlang':'=:='
						  (DataT,
						   'wxPrintDialogData') ->
					    'ok'
					-| ['compiler_generated'] )
				      ( <> when 'true' ->
					    call DataT:'parent_class'
						('wxPrintDialogData')
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
				  let <_cor3> =
				      #{#<1>(32,1,'integer',['unsigned'|['native']]),
					#<DataRef>(32,1,'integer',['unsigned'|['native']])}#
				  in  [_cor3|Acc]
			  %% Line 50
			  <BadOpt,_cor14> when 'true' ->
			      call 'erlang':'error'
				  ({'badoption',BadOpt})
			end
		    -| [{'id',{0,0,'-new/1-fun-0-'}}] )
	      in  let <_cor9> =
		      %% Line 51
		      call 'lists':'foldl'
			  (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']]),
				     #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
		  in  let <BinOpt> =
			  %% Line 51
			  call 'erlang':'list_to_binary'
			      (_cor9)
		      in  let <_cor11> =
			      %% Line 53
			      #{#<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
			  in  %% Line 52
			      call 'wxe_util':'construct'
				  (2493, _cor11)
	  ( <_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12})
		  -| [{'function_name',{'new',1}}] )
	    -| ['compiler_generated'] )
	end
'createAbortWindow'/3 =
    %% Line 58
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor13},{'wx_ref',ParentRef,ParentT,_cor14},{'wx_ref',PrintoutRef,PrintoutT,_cor15}> when 'true' ->
	      do  %% Line 59
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrinter') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrinter')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 60
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      do  %% Line 61
			  ( case <> of
			      ( <>
				    when call 'erlang':'=:='
					  (PrintoutT,
					   'wxPrintout') ->
				    'ok'
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    call PrintoutT:'parent_class'
					('wxPrintout')
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
			  let <_cor9> =
			      %% Line 63
			      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
				#<ParentRef>(32,1,'integer',['unsigned'|['native']]),
				#<PrintoutRef>(32,1,'integer',['unsigned'|['native']])}#
			  in  %% Line 62
			      call 'wxe_util':'call'
				  (2494, _cor9)
	  ( <_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10})
		  -| [{'function_name',{'createAbortWindow',3}}] )
	    -| ['compiler_generated'] )
	end
'getAbort'/1 =
    %% Line 68
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 69
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrinter') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrinter')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 71
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 70
		      call 'wxe_util':'call'
			  (2495, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getAbort',1}}] )
	    -| ['compiler_generated'] )
	end
'getLastError'/0 =
    %% Line 76
    fun () ->
	%% Line 77
	call 'wxe_util':'call'
	    (2496, %% Line 78
		   #{}#)
'getPrintDialogData'/1 =
    %% Line 83
    fun (_cor0) ->
	case _cor0 of
	  <{'wx_ref',ThisRef,ThisT,_cor5}> when 'true' ->
	      do  %% Line 84
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrinter') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrinter')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  let <_cor3> =
		      %% Line 86
		      #{#<ThisRef>(32,1,'integer',['unsigned'|['native']])}#
		  in  %% Line 85
		      call 'wxe_util':'call'
			  (2497, _cor3)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'getPrintDialogData',1}}] )
	    -| ['compiler_generated'] )
	end
'print'/3 =
    %% Line 92
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <This = {'wx_ref',_cor7,_cor8,_cor9},Parent = {'wx_ref',_cor10,_cor11,_cor12},Printout = {'wx_ref',_cor13,_cor14,_cor15}> when 'true' ->
	      %% Line 94
	      apply 'print'/4
		  (This, Parent, Printout, [])
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'print',3}}] )
	    -| ['compiler_generated'] )
	end
'print'/4 =
    %% Line 100
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor24},{'wx_ref',ParentRef,ParentT,_cor25},{'wx_ref',PrintoutRef,PrintoutT,_cor26},Options>
	      when %% Line 101
		call 'erlang':'is_list'
		    (Options) ->
	      do  %% Line 102
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrinter') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrinter')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 103
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      do  %% Line 104
			  ( case <> of
			      ( <>
				    when call 'erlang':'=:='
					  (PrintoutT,
					   'wxPrintout') ->
				    'ok'
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    call PrintoutT:'parent_class'
					('wxPrintout')
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
			  let <MOpts> =
			      %% Line 105
			      ( fun (_cor13,_cor12) ->
				    case <_cor13,_cor12> of
				      <{'prompt',Prompt},Acc> when 'true' ->
					  let <_cor10> =
					      call 'wxe_util':'from_bool'
						  (Prompt)
					  in  let <_cor11> =
						  #{#<1>(32,1,'integer',['unsigned'|['native']]),
						    #<_cor10>(32,1,'integer',['unsigned'|['native']])}#
					      in  [_cor11|Acc]
				      %% Line 106
				      <BadOpt,_cor27> when 'true' ->
					  call 'erlang':'error'
					      ({'badoption',BadOpt})
				    end
				-| [{'id',{0,0,'-print/4-fun-0-'}}] )
			  in  let <_cor17> =
				  %% Line 107
				  call 'lists':'foldl'
				      (MOpts, [#{#<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']]),
						 #<0>(8,1,'integer',['unsigned'|['big']])}#], Options)
			      in  let <BinOpt> =
				      %% Line 107
				      call 'erlang':'list_to_binary'
					  (_cor17)
				  in  let <_cor19> =
					  %% Line 109
					  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
					    #<ParentRef>(32,1,'integer',['unsigned'|['native']]),
					    #<PrintoutRef>(32,1,'integer',['unsigned'|['native']]),
					    #<0>(32,1,'integer',['unsigned'|['big']]),
					    #<BinOpt>('all',8,'binary',['unsigned'|['big']])}#
				      in  %% Line 108
					  call 'wxe_util':'call'
					      (2498, _cor19)
	  ( <_cor23,_cor22,_cor21,_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor23,_cor22,_cor21,_cor20})
		  -| [{'function_name',{'print',4}}] )
	    -| ['compiler_generated'] )
	end
'printDialog'/2 =
    %% Line 114
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',ParentRef,ParentT,_cor10}> when 'true' ->
	      do  %% Line 115
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrinter') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrinter')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 116
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 118
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<ParentRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 117
			  call 'wxe_util':'call'
			      (2499, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'printDialog',2}}] )
	    -| ['compiler_generated'] )
	end
'reportError'/4 =
    %% Line 123
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor22},{'wx_ref',ParentRef,ParentT,_cor23},{'wx_ref',PrintoutRef,PrintoutT,_cor24},Message>
	      when %% Line 124
		call 'erlang':'is_list'
		    (Message) ->
	      do  %% Line 125
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrinter') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrinter')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 126
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      do  %% Line 127
			  ( case <> of
			      ( <>
				    when call 'erlang':'=:='
					  (PrintoutT,
					   'wxPrintout') ->
				    'ok'
				-| ['compiler_generated'] )
			      ( <> when 'true' ->
				    call PrintoutT:'parent_class'
					('wxPrintout')
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
			  let <Message_UC> =
			      %% Line 128
			      call 'unicode':'characters_to_binary'
				  ([Message|[0]])
			  in  let <_cor16> =
				  %% Line 130
				  call 'erlang':'byte_size'
				      (Message_UC)
			      in  let <_cor11> =
				      %% Line 130
				      call 'erlang':'byte_size'
					  (Message_UC)
				  in  let <_cor12> =
					  %% Line 130
					  call 'erlang':'+'
					      (0, _cor11)
				      in  let <_cor13> =
					      %% Line 130
					      call 'erlang':'band'
						  (_cor12, 7)
					  in  let <_cor14> =
						  %% Line 130
						  call 'erlang':'-'
						      (8, _cor13)
					      in  let <_cor15> =
						      %% Line 130
						      call 'erlang':'band'
							  (_cor14, 7)
						  in  let <_cor17> =
							  %% Line 130
							  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
							    #<ParentRef>(32,1,'integer',['unsigned'|['native']]),
							    #<PrintoutRef>(32,1,'integer',['unsigned'|['native']]),
							    #<_cor16>(32,1,'integer',['unsigned'|['native']]),
							    #<Message_UC>('all',8,'binary',['unsigned'|['big']]),
							    #<0>(_cor15,8,'integer',['unsigned'|['big']])}#
						      in  %% Line 129
							  call 'wxe_util':'cast'
							      (2500, _cor17)
	  ( <_cor21,_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor21,_cor20,_cor19,_cor18})
		  -| [{'function_name',{'reportError',4}}] )
	    -| ['compiler_generated'] )
	end
'setup'/2 =
    %% Line 135
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx_ref',ThisRef,ThisT,_cor9},{'wx_ref',ParentRef,ParentT,_cor10}> when 'true' ->
	      do  %% Line 136
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (ThisT,
				   'wxPrinter') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call ThisT:'parent_class'
				('wxPrinter')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 137
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (ParentT,
				       'wxWindow') ->
				'ok'
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				call ParentT:'parent_class'
				    ('wxWindow')
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      let <_cor6> =
			  %% Line 139
			  #{#<ThisRef>(32,1,'integer',['unsigned'|['native']]),
			    #<ParentRef>(32,1,'integer',['unsigned'|['native']])}#
		      in  %% Line 138
			  call 'wxe_util':'call'
			      (2501, _cor6)
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'setup',2}}] )
	    -| ['compiler_generated'] )
	end
'destroy'/1 =
    %% Line 143
    fun (_cor0) ->
	case _cor0 of
	  <Obj = {'wx_ref',_cor4,Type,_cor5}> when 'true' ->
	      do  %% Line 144
		  ( case <> of
		      ( <>
			    when call 'erlang':'=:='
				  (Type,
				   'wxPrinter') ->
			    'ok'
			-| ['compiler_generated'] )
		      ( <> when 'true' ->
			    call Type:'parent_class'
				('wxPrinter')
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
		  do  %% Line 145
		      call 'wxe_util':'destroy'
			  (4, Obj)
		      %% Line 146
		      'ok'
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'destroy',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('wxPrinter')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('wxPrinter', _cor0)
end