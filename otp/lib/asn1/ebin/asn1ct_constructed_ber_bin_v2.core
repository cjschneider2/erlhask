module 'asn1ct_constructed_ber_bin_v2' ['gen_decode_choice'/3,
					'gen_decode_sequence'/3,
					'gen_decode_set'/3,
					'gen_decode_sof'/4,
					'gen_encode_choice'/3,
					'gen_encode_sequence'/3,
					'gen_encode_set'/3,
					'gen_encode_sof'/4,
					'module_info'/0,
					'module_info'/1]
    attributes []
'gen_encode_sequence'/3 =
    %% Line 59
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Erules,Typename,D = {'type',_cor64,_cor65,_cor66,_cor67,_cor68}> when ( 'true'
										   -| ['compiler_generated'] ) ->
	      do  %% Line 60
		  call 'asn1ct_name':'start'
		      ()
		  do  %% Line 61
		      call 'asn1ct_name':'new'
			  ('term')
		      do  %% Line 62
			  call 'asn1ct_name':'new'
			      ('bytes')
			  let <_cor5> =
			      %% Line 67
			      case Typename of
				%% Line 68
				<['EXTERNAL']> when 'true' ->
				    let <_cor3> =
					%% Line 69
					apply 'indent'/1
					    (4)
				    in  do  %% Line 69
					    call 'asn1ct_gen':'emit'
						([_cor3|[[78|[101|[119|[86|[97|[108|[32|[61|[32]]]]]]]]]|[{'call','ext','transform_to_EXTERNAL1990',[[86|[97|[108]]]]}|['com'|['nl']]]]])
					    %% Line 72
					    [78|[101|[119|[86|[97|[108]]]]]]
				%% Line 73
				<_cor69> when 'true' ->
				    %% Line 74
				    [86|[97|[108]]]
			      end
			  in  let <SeqOrSet,TableConsInfo,CompList0> =
				  %% Line 78
				  case _cor65 of
				    %% Line 79
				    <{'SEQUENCE',_cor75,TCI,_cor76,CL}> when 'true' ->
					%% Line 80
					<'SEQUENCE',TCI,CL>
				    %% Line 81
				    <{'SET',_cor77,_cor78,TCI,CL}> when 'true' ->
					%% Line 82
					<'SET',TCI,CL>
				    ( <_cor9> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor9})
				      -| ['compiler_generated'] )
				  end
			      in  let <CompList> =
				      %% Line 85
				      apply 'filter_complist'/1
					  (CompList0)
				  in  let <Ext> =
					  %% Line 86
					  apply 'extensible'/1
					      (CompList)
				      in  let <_cor16> =
					      %% Line 87
					      case CompList of
						%% Line 88
						<{Rl1,El,Rl2}> when 'true' ->
						    let <_cor14> =
							call 'erlang':'++'
							    (El, Rl2)
						    in  call 'erlang':'++'
							    (Rl1, _cor14)
						%% Line 89
						<{Rl,El}> when 'true' ->
						    call 'erlang':'++'
							(Rl, El)
						%% Line 90
						<_cor79> when 'true' ->
						    CompList
					      end
					  in  do  %% Line 95
						  call 'asn1ct_gen':'emit'
						      ([[123|[95]]])
						  do  %% Line 96
						      case call 'erlang':'length'
							       (_cor16) of
							%% Line 97
							<0> when 'true' ->
							    'ok'
							%% Line 99
							<CompListLen> when 'true' ->
							    do  %% Line 100
								call 'asn1ct_gen':'emit'
								    ([[44]])
								let <_cor23> =
								    %% Line 101
								    ( letrec
									  'lc$^0'/1 =
									      fun (_cor21) ->
										  case _cor21 of
										    <[Tc|_cor19]> when 'true' ->
											let <_cor22> =
											    apply 'lc$^0'/1
												(_cor19)
											in  ( [Tc|_cor22]
											      -| ['compiler_generated'] )
										    <[]> when 'true' ->
											[]
										    ( <_cor21> when 'true' ->
											  ( primop 'match_fail'
												({'function_clause',_cor21})
											    -| [{'function_name',{'lc$^0',1}}] )
										      -| ['compiler_generated'] )
										  end
								      in  let <_cor20> =
									      call 'lists':'seq'
										  (1, CompListLen)
									  in  apply 'lc$^0'/1
										  (_cor20)
								      -| ['list_comprehension'] )
								in  %% Line 101
								    apply 'mkcindexlist'/1
									(_cor23)
						      end
						      do  %% Line 103
							  call 'asn1ct_gen':'emit'
							      ([[125|[32|[61|[32]]]]|[_cor5|[[44]|['nl']]]])
							  let <_cor41> =
							      %% Line 105
							      case TableConsInfo of
								%% Line 106
								<{'simpletableattributes',_cor80,_cor81,_cor82,Used,%% Line 107
														    Unique,_cor83}>
								    when %% Line 107
								      call 'erlang':'/='
									  (Used,
									   Unique) ->
								    %% Line 108
								    'false'
								%% Line 111
								<{'simpletableattributes',ObjectSetRef,%% Line 112
												       AttrN,%% Line 113
													     N,%% Line 114
													       UniqueFieldName,_cor84,%% Line 116
																      ValueIndex}>
								    when call 'erlang':'=:='
									  (_cor84,
									   %% Line 115
									   UniqueFieldName) ->
								    %% Line 117
								    case ObjectSetRef of
								      <{ObjSetMod,ObjSetName}> when 'true' ->
									  %% Line 119
									  ( case call 'asn1_db':'dbget'
										     (ObjSetMod, ObjSetName) of
									      ( <( {'typedef',_cor85,_cor86,_cor87,_rec2}
										   -| ['compiler_generated'] )> when 'true' ->
										    ( case _rec2 of
											( <( {'ObjectSet',_cor89,_rec1,_cor90,_cor91}
											     -| ['compiler_generated'] )> when 'true' ->
											      case _rec1 of
												%% Line 120
												<'true'> when 'true' ->
												    let <_cor31> =
													%% Line 122
													call 'lists':'concat'
													    (['Obj'|%% Line 123
														    [AttrN|[]]])
												    in  let <ObjectEncode> =
													    %% Line 122
													    call 'asn1ct_gen':'un_hyphen_var'
														(_cor31)
													in  do  %% Line 124
														call 'asn1ct_gen':'emit'
														    ([ObjectEncode|[[32|[61|[32]]]|['nl'|%% Line 125
																			 [[32|[32|[32]]]|[{'asis',ObjSetMod}|[[58|[39|[103|[101|[116|[101|[110|[99|[95]]]]]]]]]|[ObjSetName|%% Line 126
																															    [[39|[40]]]]]]]]]])
														let <_cor33> =
														    %% Line 128
														    call 'lists':'concat'
															([[67|[105|[110|[100|[101|[120]]]]]]|[N|[]]])
														in  let <ValueMatch> =
															%% Line 127
															apply 'value_match'/2
															    (ValueIndex, _cor33)
														    in  let <_cor35> =
															    %% Line 129
															    apply 'indent'/1
																(35)
															in  do  %% Line 129
																call 'asn1ct_gen':'emit'
																    ([_cor35|[ValueMatch|[[41|[44]]|['nl']]]])
																%% Line 130
																{AttrN,ObjectEncode}
												%% Line 131
												<_cor93> when 'true' ->
												    %% Line 132
												    'false'
											      end
											  -| ['compiler_generated'] )
											( <_cor92> when 'true' ->
											      ( call ( 'erlang'
												       -| ['compiler_generated'] ):( 'error'
																     -| ['compiler_generated'] )
												    (( {'badrecord','ObjectSet'}
												       -| ['compiler_generated'] ))
												-| ['compiler_generated'] )
											  -| ['compiler_generated'] )
										      end
										      -| ['compiler_generated'] )
										-| ['compiler_generated'] )
									      ( <_cor88> when 'true' ->
										    ( call ( 'erlang'
											     -| ['compiler_generated'] ):( 'error'
															   -| ['compiler_generated'] )
											  (( {'badrecord','typedef'}
											     -| ['compiler_generated'] ))
										      -| ['compiler_generated'] )
										-| ['compiler_generated'] )
									    end
									    -| ['compiler_generated'] )
								      ( <_cor25> when 'true' ->
									    primop 'match_fail'
										({'badmatch',_cor25})
									-| ['compiler_generated'] )
								    end
								%% Line 134
								<_cor94> when 'true' ->
								    %% Line 135
								    case _cor67 of
								      %% Line 136
								      <[{'objfun',_cor100}|_cor101]> when 'true' ->
									  %% Line 140
									  {[103|[111|[116|[32|[111|[98|[106|[102|[117|[110|[32|[116|[104|[114|[111|[117|[103|[104|[32|[97|[114|[103|[115]]]]]]]]]]]]]]]]]]]]]]],[79|[98|[106|[70|[117|[110]]]]]]}
								      %% Line 141
								      <_cor102> when 'true' ->
									  %% Line 142
									  'false'
								    end
							      end
							  in  do  %% Line 146
								  apply 'gen_enc_sequence_call'/6
								      (Erules, Typename, _cor16, 1, Ext, _cor41)
								  do  %% Line 148
								      call 'asn1ct_gen':'emit'
									  (['nl'|[[32|[32|[32|[66|[121|[116|[101|[115|[83|[111|[70|[97|[114|[32|[61|[32]]]]]]]]]]]]]]]]]])
								      do  %% Line 149
									  case SeqOrSet of
									    %% Line 150
									    <'SET'>
										when ( try
											( case <> of
											    ( <>
												  when ( call ( 'erlang'
													     -| ['compiler_generated'] ):( 'is_record'
																	   -| ['compiler_generated'] )
													  (_cor65,
													   ( 'SET'
													     -| ['compiler_generated'] ),
													   ( 5
													     -| ['compiler_generated'] ))
												      -| ['compiler_generated'] ) ->
												  let <_cor55> =
												      ( call 'erlang':'element'
													    (3, _cor65)
													-| ['compiler_generated'] )
												  in  ( call 'erlang':'=:='
													    (_cor55, 'dynamic')
													-| ['compiler_generated'] )
											      -| ['compiler_generated'] )
											    ( <> when 'true' ->
												  'false'
											      -| ['compiler_generated'] )
											  end
											  -| ['compiler_generated'] )
										    of <Try> ->
											Try
										    catch <T,R> ->
											'false'
										    -| ['compiler_generated'] ) ->
										do  %% Line 151
										    call 'asn1ct_func':'need'
											({'ber','dynamicsort_SET_components',1})
										    do  %% Line 152
											call 'asn1ct_gen':'emit'
											    ([100|[121|[110|[97|[109|[105|[99|[115|[111|[114|[116|[95|[83|[69|[84|[95|[99|[111|[109|[112|[111|[110|[101|[110|[116|[115|[40|[91]]]]]]]]]]]]]]]]]]]]]]]]]]]])
											let <_cor57> =
											    %% Line 153
											    call 'asn1ct_name':'all'
												('encBytes')
											in  do  %% Line 153
												apply 'mkvlist'/1
												    (_cor57)
												%% Line 154
												call 'asn1ct_gen':'emit'
												    ([[93|[41|[44]]]|['nl']])
									    %% Line 155
									    <_cor103> when 'true' ->
										do  %% Line 156
										    call 'asn1ct_gen':'emit'
											([91])
										    let <_cor58> =
											%% Line 157
											call 'asn1ct_name':'all'
											    ('encBytes')
										    in  do  %% Line 157
											    apply 'mkvlist'/1
												(_cor58)
											    %% Line 158
											    call 'asn1ct_gen':'emit'
												([[93|[44]]|['nl']])
									  end
									  do  %% Line 160
									      call 'asn1ct_gen':'emit'
										  ([76|[101|[110|[83|[111|[70|[97|[114|[32|[61|[32]]]]]]]]]]])
									      do  %% Line 161
										  case call 'asn1ct_name':'all'
											   ('encLen') of
										    %% Line 162
										    <[]> when 'true' ->
											call 'asn1ct_gen':'emit'
											    ([48])
										    %% Line 163
										    <AllLengths> when 'true' ->
											%% Line 164
											apply 'mkvplus'/1
											    (AllLengths)
										  end
										  do  %% Line 166
										      call 'asn1ct_gen':'emit'
											  ([[44]|['nl']])
										      do  %% Line 167
											  apply 'call'/2
											      ('encode_tags', [[84|[97|[103|[73|[110]]]]]|[[66|[121|[116|[101|[115|[83|[111|[70|[97|[114]]]]]]]]]]|[[76|[101|[110|[83|[111|[70|[97|[114]]]]]]]]]]])
											  %% Line 168
											  call 'asn1ct_gen':'emit'
											      ([[46]|['nl']])
	  ( <_cor63,_cor62,_cor61> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor63,_cor62,_cor61})
		  -| [{'function_name',{'gen_encode_sequence',3}}] )
	    -| ['compiler_generated'] )
	end
'gen_decode_sequence'/3 =
    %% Line 170
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Erules,Typename,D = {'type',_cor45,_cor46,_cor47,_cor48,_cor49}> when ( 'true'
										   -| ['compiler_generated'] ) ->
	      do  %% Line 171
		  call 'asn1ct_name':'start'
		      ()
		  do  %% Line 172
		      call 'asn1ct_name':'new'
			  ('tag')
		      %% Line 173
		      case _cor46 of
			<{'SEQUENCE',_cor55,TableConsInfo,_cor56,CList0}> when 'true' ->
			    let <CList> =
				%% Line 176
				apply 'filter_complist'/1
				    (CList0)
			    in  let <Ext> =
				    %% Line 177
				    apply 'extensible'/1
					(CList)
				in  let <CompList,CompList2> =
					%% Line 179
					case CList of
					  %% Line 180
					  <{Rl1,El,Rl2}> when 'true' ->
					      let <_cor8> =
						  call 'erlang':'++'
						      (El, Rl2)
					      in  let <_cor9> =
						      call 'erlang':'++'
							  (Rl1, _cor8)
						  in  <_cor9,CList>
					  %% Line 181
					  <{Rl,El}> when 'true' ->
					      let <_cor11> =
						  call 'erlang':'++'
						      (Rl, El)
					      in  let <_cor10> =
						      call 'erlang':'++'
							  (Rl, El)
						  in  <_cor11,_cor10>
					  %% Line 182
					  <_cor57> when 'true' ->
					      <CList,CList>
					end
				    in  do  %% Line 185
					    call 'asn1ct_gen':'emit'
						([[32|[32|[32|[37|[37|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl']])
					    do  %% Line 186
						call 'asn1ct_gen':'emit'
						    ([[32|[32|[32|[37|[37|[32|[100|[101|[99|[111|[100|[101|[32|[116|[97|[103|[32|[97|[110|[100|[32|[108|[101|[110|[103|[116|[104|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl']])
						do  %% Line 187
						    call 'asn1ct_gen':'emit'
							([[32|[32|[32|[37|[37|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl']])
						    do  %% Line 189
							call 'asn1ct_name':'new'
							    ('tlv')
							do  %% Line 190
							    case CompList of
							      %% Line 191
							      <[]> when 'true' ->
								  'ok'
							      %% Line 193
							      <_cor58> when 'true' ->
								  %% Line 194
								  call 'asn1ct_gen':'emit'
								      ([{'curr','tlv'}|[[32|[61|[32]]]]])
							    end
							    do  %% Line 196
								apply 'call'/2
								    ('match_tags', [{'prev','tlv'}|[[84|[97|[103|[73|[110]]]]]]])
								do  %% Line 197
								    call 'asn1ct_gen':'emit'
									(['com'|['nl']])
								    do  %% Line 198
									call 'asn1ct_name':'new'
									    ('tlv')
									do  %% Line 199
									    call 'asn1ct_name':'new'
										('v')
									    let <DecObjInf,ValueIndex> =
										%% Line 202
										case TableConsInfo of
										  %% Line 203
										  <{'simpletableattributes',ObjectSetRef,%% Line 204
															 AttrN,_cor59,%% Line 205
																      UniqueFieldName,_cor60,%% Line 207
																			     ValIndex}>
										      when call 'erlang':'=:='
											    (_cor60,
											     %% Line 206
											     UniqueFieldName) ->
										      let <F> =
											  %% Line 209
											  ( fun (_cor22) ->
												case _cor22 of
												  <{'ComponentType',_cor61,_cor62,CT,_cor63,_cor64,_cor65}> when 'true' ->
												      %% Line 210
												      ( case CT of
													  ( <( {'type',_cor66,_cor67,_rec5,_cor68,_cor69}
													       -| ['compiler_generated'] )> when 'true' ->
														let <_cor20> =
														    call 'asn1ct_gen':'get_constraint'
															(_rec5, 'componentrelation')
														in  case <_cor20,_cor68> of
														      %% Line 211
														      <'no',[{'objfun',_cor76}|_cor77]> when 'true' ->
															  'true'
														      %% Line 212
														      <_fol22,_fol23> when 'true' ->
															  'false'
														    end
													    -| ['compiler_generated'] )
													  ( <_cor70> when 'true' ->
														( call ( 'erlang'
															 -| ['compiler_generated'] ):( 'error'
																		       -| ['compiler_generated'] )
														      (( {'badrecord','type'}
															 -| ['compiler_generated'] ))
														  -| ['compiler_generated'] )
													    -| ['compiler_generated'] )
													end
													-| ['compiler_generated'] )
												  ( <_cor23> when 'true' ->
													( primop 'match_fail'
													      ({'function_clause',_cor23})
													  -| [{'function_name',{'-gen_decode_sequence/3-fun-0-',1}}] )
												    -| ['compiler_generated'] )
												end
											    -| [{'id',{0,0,'-gen_decode_sequence/3-fun-0-'}}] )
										      in  %% Line 215
											  case call 'lists':'any'
												   (F, CompList) of
											    %% Line 216
											    <'true'> when 'true' ->
												%% Line 219
												<{AttrN,{'deep',ObjectSetRef,UniqueFieldName,ValIndex}},%% Line 220
																			ValIndex>
											    %% Line 221
											    <'false'> when 'true' ->
												%% Line 222
												<{AttrN,ObjectSetRef},ValIndex>
											    ( <_cor25> when 'true' ->
												  primop 'match_fail'
												      ({'case_clause',_cor25})
											      -| ['compiler_generated'] )
											  end
										  %% Line 224
										  <_cor79> when 'true' ->
										      %% Line 225
										      <'false','false'>
										end
									    in  let <_cor29> =
										    %% Line 227
										    call 'asn1ct_gen':'get_record_name_prefix'
											()
										in  let <_cor30> =
											%% Line 228
											call 'asn1ct_gen':'list2rname'
											    (Typename)
										    in  let <RecordName> =
											    %% Line 227
											    call 'lists':'concat'
												([_cor29|%% Line 228
													 [_cor30|[]]])
											in  %% Line 229
											    case apply 'gen_dec_sequence_call'/5
												     (Erules, Typename, CompList2, Ext, DecObjInf) of
											      %% Line 230
											      <'no_terms'> when 'true' ->
												  do  %% Line 231
												      call 'asn1ct_gen':'emit'
													  (['nl'|['nl']])
												      do  %% Line 232
													  call 'asn1ct_gen':'demit'
													      ([[82|[101|[115|[117|[108|[116|[32|[61|[32]]]]]]]]]])
													  do  %% Line 234
													      call 'asn1ct_name':'new'
														  ('rb')
													      %% Line 235
													      call 'asn1ct_gen':'emit'
														  ([[32|[32|[32|[123|[39]]]]]|[RecordName|[[39|[125|[46]]]|['nl'|['nl']]]]])
											      %% Line 236
											      <{LeadingAttrTerm,PostponedDecArgs}> when 'true' ->
												  do  %% Line 237
												      call 'asn1ct_gen':'emit'
													  (['com'|['nl'|['nl']]])
												      do  %% Line 238
													  case <LeadingAttrTerm,PostponedDecArgs> of
													    %% Line 239
													    <[],[]> when 'true' ->
														'ok'
													    %% Line 241
													    <_cor80,[]> when 'true' ->
														'ok'
													    %% Line 243
													    <[{ObjSetRef,LeadingAttr,Term}|[]],_cor81>
														when call 'erlang':'=:='
														      (_cor81,
														       PostponedDecArgs) ->
														let <_cor32> =
														    %% Line 244
														    call 'lists':'concat'
															(['DecObj'|[LeadingAttr|[Term|[]]]])
														in  let <DecObj> =
															%% Line 244
															call 'asn1ct_gen':'un_hyphen_var'
															    (_cor32)
														    in  let <ValueMatch> =
															    %% Line 245
															    apply 'value_match'/2
																(ValueIndex, Term)
															in  %% Line 246
															    case ObjSetRef of
															      <{ObjSetMod,ObjSetName}> when 'true' ->
																  do  %% Line 247
																      call 'asn1ct_gen':'emit'
																	  ([DecObj|[[32|[61]]|['nl'|%% Line 248
																				    [[32|[32|[32]]]|[{'asis',ObjSetMod}|[[58|[39|[103|[101|[116|[100|[101|[99|[95]]]]]]]]]|[ObjSetName|[[39|[40]]|%% Line 249
																																		  [ValueMatch|[[41|[44]]|['nl']]]]]]]]]]])
																      %% Line 250
																      apply 'gen_dec_postponed_decs'/2
																	  (DecObj, PostponedDecArgs)
															      ( <_cor35> when 'true' ->
																    primop 'match_fail'
																	({'badmatch',_cor35})
																-| ['compiler_generated'] )
															    end
													    ( <_fol37,_fol38> when 'true' ->
														  let <_cor36> = {_fol37,_fol38}
														  in  primop 'match_fail'
															  ({'case_clause',_cor36})
													      -| ['compiler_generated'] )
													  end
													  do  %% Line 252
													      call 'asn1ct_gen':'demit'
														  ([[82|[101|[115|[117|[108|[116|[32|[61|[32]]]]]]]]]])
													      do  %% Line 254
														  case Ext of
														    %% Line 255
														    <{'ext',_cor82,_cor83}> when 'true' ->
															%% Line 256
															call 'asn1ct_gen':'emit'
															    ([[99|[97|[115|[101|[32]]]]]|[{'prev','tlv'}|[[32|[111|[102|[32|[91|[93|[32|[45|[62|[32|[116|[114|[117|[101|[59|[32|[95|[32|[45|[62|[32|[116|[114|[117|[101|[32|[101|[110|[100|[44|[32|[37|[32|[46|[46|[46|[32|[101|[120|[116|[114|[97|[32|[102|[105|[101|[108|[100|[115|[32|[115|[107|[105|[112|[112|[101|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl']]]])
														    %% Line 257
														    <_cor84> when 'true' ->
															%% Line 258
															call 'asn1ct_gen':'emit'
															    ([[99|[97|[115|[101|[32]]]]]|[{'prev','tlv'}|[[32|[111|[102]]]|['nl'|[[91|[93|[32|[45|[62|[32|[116|[114|[117|[101|[59]]]]]]]]]]]|[[95|[32|[45|[62|[32|[101|[120|[105|[116|[40|[123|[101|[114|[114|[111|[114|[44|[123|[97|[115|[110|[49|[44|[32|[123|[117|[110|[101|[120|[112|[101|[99|[116|[101|[100|[44]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[{'prev','tlv'}|[[125|[125|[125|[41|[32|[37|[32|[101|[120|[116|[114|[97|[32|[102|[105|[101|[108|[100|[115|[32|[110|[111|[116|[32|[97|[108|[108|[111|[119|[101|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl'|[[101|[110|[100|[44]]]]|['nl']]]]]]]]]]])
														  end
														  do  %% Line 264
														      call 'asn1ct_name':'new'
															  ('rb')
														      %% Line 265
														      case Typename of
															%% Line 266
															<['EXTERNAL']> when 'true' ->
															    do  %% Line 267
																call 'asn1ct_gen':'emit'
																    ([[32|[32|[32|[79|[108|[100|[70|[111|[114|[109|[97|[116|[61|[123|[39]]]]]]]]]]]]]]]|[RecordName|%% Line 268
																												    [[39|[44|[32]]]]]])
																let <_cor38> =
																    %% Line 269
																    call 'asn1ct_name':'all'
																	('term')
																in  do  %% Line 269
																	apply 'mkvlist'/1
																	    (_cor38)
																	do  %% Line 270
																	    call 'asn1ct_gen':'emit'
																		([[125|[44]]|['nl']])
																	    %% Line 271
																	    call 'asn1ct_gen':'emit'
																		([[32|[32|[32|[32]]]]|[{'call','ext','transform_to_EXTERNAL1994',[[79|[108|[100|[70|[111|[114|[109|[97|[116]]]]]]]]]]}|[[46]|['nl']]]])
															%% Line 274
															<_cor85> when 'true' ->
															    do  %% Line 275
																call 'asn1ct_gen':'emit'
																    ([[32|[32|[32|[123|[39]]]]]|[RecordName|[[39|[44|[32]]]]]])
																let <_cor39> =
																    %% Line 276
																    call 'asn1ct_name':'all'
																	('term')
																in  do  %% Line 276
																	apply 'mkvlist'/1
																	    (_cor39)
																	%% Line 277
																	call 'asn1ct_gen':'emit'
																	    ([[125|[46]]|['nl'|['nl']]])
														      end
											      ( <_cor41> when 'true' ->
												    primop 'match_fail'
													({'case_clause',_cor41})
												-| ['compiler_generated'] )
											    end
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor5})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor44,_cor43,_cor42> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor44,_cor43,_cor42})
		  -| [{'function_name',{'gen_decode_sequence',3}}] )
	    -| ['compiler_generated'] )
	end
'gen_dec_postponed_decs'/2 =
    %% Line 281
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor23,[]> when 'true' ->
	      %% Line 282
	      call 'asn1ct_gen':'emit'
		  ('nl')
	  %% Line 283
	  <DecObj,[{_X_Cname,{FirstPFN,PFNList},Term,%% Line 284
						     TmpTerm,%% Line 284
							     _X_Tag,%% Line 284
								    OptOrMand}|%% Line 284
									       Rest]> when 'true' ->
	      do  %% Line 286
		  call 'asn1ct_name':'new'
		      ('tmpterm')
		  do  %% Line 287
		      call 'asn1ct_name':'new'
			  ('reason')
		      do  %% Line 288
			  call 'asn1ct_name':'new'
			      ('tmptlv')
			  do  %% Line 290
			      call 'asn1ct_gen':'emit'
				  ([Term|[[32|[61|[32]]]|['nl']]])
			      let <_cor3> =
				  %% Line 291
				  case OptOrMand of
				    %% Line 292
				    <'mandatory'> when 'true' ->
					0
				    %% Line 293
				    <'OPTIONAL'> when 'true' ->
					do  %% Line 294
					    apply 'emit_opt_or_mand_check'/2
						('asn1_NOVALUE', TmpTerm)
					    %% Line 295
					    6
				    %% Line 296
				    <{'DEFAULT',Val}> when 'true' ->
					do  %% Line 297
					    apply 'emit_opt_or_mand_check'/2
						(Val, TmpTerm)
					    %% Line 298
					    6
				    ( <_cor2> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor2})
				      -| ['compiler_generated'] )
				  end
			      in  let <_cor5> =
				      %% Line 300
				      call 'erlang':'+'
					  (_cor3, 3)
				  in  let <_cor6> =
					  %% Line 300
					  apply 'indent'/1
					      (_cor5)
				      in  do  %% Line 300
					      call 'asn1ct_gen':'emit'
						  ([_cor6|[[99|[97|[115|[101|[32|[40|[99|[97|[116|[99|[104|[32]]]]]]]]]]]]|[DecObj|[[40]|[{'asis',FirstPFN}|%% Line 301
																			    [[44|[32]]|[TmpTerm|[[44|[32]]|[{'asis',PFNList}|[[41|[41|[32|[111|[102]]]]]|['nl']]]]]]]]]]])
					      let <_cor7> =
						  %% Line 302
						  call 'erlang':'+'
						      (_cor3, 6)
					      in  let <_cor8> =
						      %% Line 302
						      apply 'indent'/1
							  (_cor7)
						  in  do  %% Line 302
							  call 'asn1ct_gen':'emit'
							      ([_cor8|[[123|[39|[69|[88|[73|[84|[39|[44|[32]]]]]]]]]|[{'curr','reason'}|[[125|[32|[45|[62]]]]|['nl']]]]])
							  let <_cor9> =
							      %% Line 303
							      call 'erlang':'+'
								  (_cor3, 9)
							  in  let <_cor10> =
								  %% Line 303
								  apply 'indent'/1
								      (_cor9)
							      in  do  %% Line 303
								      call 'asn1ct_gen':'emit'
									  ([_cor10|[[101|[120|[105|[116|[40|[123|[39|[84|[121|[112|[101|[32|[110|[111|[116|[32|[99|[111|[109|[112|[97|[116|[105|[98|[108|[101|[32|[119|[105|[116|[104|[32|[116|[97|[98|[108|[101|[32|[99|[111|[110|[115|[116|[114|[97|[105|[110|[116|[39|[44]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[{'curr','reason'}|[[125|[41|[59]]]|['nl']]]]])
								      let <_cor11> =
									  %% Line 305
									  call 'erlang':'+'
									      (_cor3, 6)
								      in  let <_cor12> =
									      %% Line 305
									      apply 'indent'/1
										  (_cor11)
									  in  do  %% Line 305
										  call 'asn1ct_gen':'emit'
										      ([_cor12|[{'curr','tmpterm'}|[[32|[45|[62]]]|['nl']]]])
										  let <_cor13> =
										      %% Line 306
										      call 'erlang':'+'
											  (_cor3, 9)
										  in  let <_cor14> =
											  %% Line 306
											  apply 'indent'/1
											      (_cor13)
										      in  do  %% Line 306
											      call 'asn1ct_gen':'emit'
												  ([_cor14|[{'curr','tmpterm'}|['nl']]])
											      do  %% Line 308
												  case OptOrMand of
												    %% Line 309
												    <'mandatory'> when 'true' ->
													let <_cor15> =
													    call 'erlang':'+'
														(_cor3, 3)
													in  let <_cor16> =
														apply 'indent'/1
														    (_cor15)
													    in  call 'asn1ct_gen':'emit'
														    ([_cor16|[[101|[110|[100|[44]]]]|['nl']]])
												    %% Line 310
												    <_cor24> when 'true' ->
													let <_cor17> =
													    %% Line 311
													    call 'erlang':'+'
														(_cor3, 3)
													in  let <_cor18> =
														%% Line 311
														apply 'indent'/1
														    (_cor17)
													    in  let <_cor19> =
														    %% Line 312
														    apply 'indent'/1
															(3)
														in  %% Line 311
														    call 'asn1ct_gen':'emit'
															([_cor18|[[101|[110|[100]]]|['nl'|%% Line 312
																			  [_cor19|[[101|[110|[100|[44]]]]|['nl']]]]]])
												  end
												  %% Line 314
												  apply 'gen_dec_postponed_decs'/2
												      (DecObj, Rest)
	  ( <_cor22,_cor21> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21})
		  -| [{'function_name',{'gen_dec_postponed_decs',2}}] )
	    -| ['compiler_generated'] )
	end
'emit_opt_or_mand_check'/2 =
    %% Line 316
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 317
	    apply 'indent'/1
		(3)
	in  let <_cor3> =
		%% Line 318
		apply 'indent'/1
		    (6)
	    in  let <_cor4> =
		    %% Line 319
		    apply 'indent'/1
			(6)
		in  %% Line 317
		    call 'asn1ct_gen':'emit'
			([_cor2|[[99|[97|[115|[101|[32]]]]]|[_cor0|[[32|[111|[102]]]|['nl'|%% Line 318
											   [_cor3|[{'asis',_cor1}|[[32|[45|[62]]]|[{'asis',_cor1}|[[59]|['nl'|%% Line 319
																			      [_cor4|[[95|[32|[45|[62]]]]|['nl']]]]]]]]]]]]]])
'gen_encode_set'/3 =
    %% Line 326
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Erules,Typename,D = {'type',_cor6,_cor7,_cor8,_cor9,_cor10}> when ( 'true'
									       -| ['compiler_generated'] ) ->
	      %% Line 327
	      apply 'gen_encode_sequence'/3
		  (Erules, Typename, D)
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'gen_encode_set',3}}] )
	    -| ['compiler_generated'] )
	end
'gen_decode_set'/3 =
    %% Line 329
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Erules,Typename,D = {'type',_cor57,_cor58,_cor59,_cor60,_cor61}> when ( 'true'
										   -| ['compiler_generated'] ) ->
	      do  %% Line 330
		  call 'asn1ct_name':'start'
		      ()
		  do  %% Line 332
		      call 'asn1ct_name':'new'
			  ('tag')
		      %% Line 333
		      case _cor58 of
			<{'SET',_cor67,_cor68,TableConsInfo,TCompList0}> when 'true' ->
			    let <TCompList> =
				%% Line 335
				apply 'filter_complist'/1
				    (TCompList0)
			    in  let <Ext> =
				    %% Line 336
				    apply 'extensible'/1
					(TCompList)
				in  let <ToOptional> =
					%% Line 337
					( fun (_cor8) ->
					      case _cor8 of
						<'mandatory'> when 'true' ->
						    %% Line 338
						    'OPTIONAL'
						%% Line 339
						<X> when 'true' ->
						    X
					      end
					  -| [{'id',{0,0,'-gen_decode_set/3-fun-0-'}}] )
				    in  let <_cor21> =
					    %% Line 341
					    case TCompList of
					      %% Line 342
					      <{Rl1,El,Rl2}> when 'true' ->
						  let <_cor19> =
						      ( letrec
							    'lc$^0'/1 =
								fun (_cor13) ->
								    case _cor13 of
								      <[X = {'ComponentType',_cor69,_cor70,_cor71,Y,_cor72,_cor73}|_cor12]> when 'true' ->
									  let <_rec8> =
									      apply ToOptional
										  (Y)
									  in  let <_cor17> =
										  call 'erlang':'setelement'
										      (5, X, _rec8)
									      in  let <_cor18> =
										      apply 'lc$^0'/1
											  (_cor12)
										  in  ( [_cor17|_cor18]
											-| ['compiler_generated'] )
								      ( <[_cor11|_cor12]> when 'true' ->
									    apply 'lc$^0'/1
										(_cor12)
									-| ['compiler_generated'] )
								      <[]> when 'true' ->
									  Rl2
								      ( <_cor13> when 'true' ->
									    ( primop 'match_fail'
										  ({'function_clause',_cor13})
									      -| [{'function_name',{'lc$^0',1}}] )
									-| ['compiler_generated'] )
								    end
							in  apply 'lc$^0'/1
								(El)
							-| ['list_comprehension'] )
						  in  call 'erlang':'++'
							  (Rl1, _cor19)
					      %% Line 343
					      <{Rl,El}> when 'true' ->
						  call 'erlang':'++'
						      (Rl, El)
					      %% Line 344
					      <_cor81> when 'true' ->
						  TCompList
					    end
					in  do  %% Line 348
						call 'asn1ct_name':'new'
						    ('tlv')
						do  %% Line 349
						    case _cor21 of
						      %% Line 350
						      <[]> when 'true' ->
							  'ok'
						      %% Line 352
						      <_cor82> when 'true' ->
							  %% Line 353
							  call 'asn1ct_gen':'emit'
							      ([{'curr','tlv'}|[[32|[61|[32]]]]])
						    end
						    do  %% Line 355
							apply 'call'/2
							    ('match_tags', [{'prev','tlv'}|[[84|[97|[103|[73|[110]]]]]]])
							do  %% Line 356
							    call 'asn1ct_gen':'emit'
								(['com'|['nl']])
							    do  %% Line 357
								call 'asn1ct_name':'new'
								    ('v')
								let <DecObjInf,ValueIndex> =
								    %% Line 361
								    case TableConsInfo of
								      %% Line 363
								      <{'simpletableattributes',ObjectSetRef,%% Line 364
													     AttrN,_cor83,%% Line 365
															  UniqueFieldName,_cor84,%% Line 367
																		 ValIndex}>
									  when call 'erlang':'=:='
										(_cor84,
										 %% Line 366
										 UniqueFieldName) ->
									  let <F> =
									      %% Line 368
									      ( fun (_cor30) ->
										    case _cor30 of
										      <{'ComponentType',_cor85,_cor86,CT,_cor87,_cor88,_cor89}> when 'true' ->
											  %% Line 369
											  ( case CT of
											      ( <( {'type',_cor90,_cor91,_rec10,_cor92,_cor93}
												   -| ['compiler_generated'] )> when 'true' ->
												    let <_cor28> =
													call 'asn1ct_gen':'get_constraint'
													    (_rec10, %% Line 370
														     'componentrelation')
												    in  case <_cor28,_cor92> of
													  %% Line 372
													  <'no',[{'objfun',_cor100}|_cor101]> when 'true' ->
													      'true'
													  %% Line 373
													  <_fol65,_fol66> when 'true' ->
													      'false'
													end
												-| ['compiler_generated'] )
											      ( <_cor94> when 'true' ->
												    ( call ( 'erlang'
													     -| ['compiler_generated'] ):( 'error'
																	   -| ['compiler_generated'] )
													  (( {'badrecord','type'}
													     -| ['compiler_generated'] ))
												      -| ['compiler_generated'] )
												-| ['compiler_generated'] )
											    end
											    -| ['compiler_generated'] )
										      ( <_cor31> when 'true' ->
											    ( primop 'match_fail'
												  ({'function_clause',_cor31})
											      -| [{'function_name',{'-gen_decode_set/3-fun-1-',1}}] )
											-| ['compiler_generated'] )
										    end
										-| [{'id',{0,0,'-gen_decode_set/3-fun-1-'}}] )
									  in  %% Line 376
									      case call 'lists':'any'
										       (F, _cor21) of
										%% Line 377
										<'true'> when 'true' ->
										    %% Line 380
										    <{AttrN,{'deep',ObjectSetRef,UniqueFieldName,ValIndex}},%% Line 381
																	    ValIndex>
										%% Line 382
										<'false'> when 'true' ->
										    %% Line 383
										    <{AttrN,ObjectSetRef},ValIndex>
										( <_cor33> when 'true' ->
										      primop 'match_fail'
											  ({'case_clause',_cor33})
										  -| ['compiler_generated'] )
									      end
								      %% Line 385
								      <_cor103> when 'true' ->
									  %% Line 386
									  <'false','false'>
								    end
								in  do  %% Line 389
									case _cor21 of
									  %% Line 390
									  <[]> when 'true' ->
									      'ok'
									  %% Line 392
									  <_cor104> when 'true' ->
									      do  %% Line 393
										  call 'asn1ct_gen':'emit'
										      ([[83|[101|[116|[70|[117|[110|[32|[61|[32|[102|[117|[110|[40|[70|[117|[110|[84|[108|[118|[41|[32|[45|[62]]]]]]]]]]]]]]]]]]]]]]]|['nl']])
										  do  %% Line 394
										      call 'asn1ct_gen':'emit'
											  ([[99|[97|[115|[101|[32|[70|[117|[110|[84|[108|[118|[32|[111|[102|[32]]]]]]]]]]]]]]]|['nl']])
										      let <NextNum> =
											  %% Line 395
											  apply 'gen_dec_set_cases'/4
											      (Erules, Typename, _cor21, 1)
										      in  let <_cor38> =
											      %% Line 396
											      apply 'indent'/1
												  (6)
											  in  let <_cor39> =
												  %% Line 397
												  apply 'indent'/1
												      (9)
											      in  do  %% Line 396
												      call 'asn1ct_gen':'emit'
													  ([_cor38|[{'curr','else'}|[[32|[45|[62|[32]]]]|['nl'|%% Line 397
																			       [_cor39|[[123]|[NextNum|[[44|[32]]|[{'curr','else'}|[[125]|['nl']]]]]]]]]]])
												      let <_cor40> =
													  %% Line 398
													  apply 'indent'/1
													      (3)
												      in  do  %% Line 398
													      call 'asn1ct_gen':'emit'
														  ([_cor40|[[101|[110|[100]]]|['nl']]])
													      let <_cor41> =
														  %% Line 399
														  apply 'indent'/1
														      (3)
													      in  do  %% Line 399
														      call 'asn1ct_gen':'emit'
															  ([_cor41|[[101|[110|[100|[44]]]]|['nl']]])
														      do  %% Line 401
															  call 'asn1ct_gen':'emit'
															      ([[80|[111|[115|[105|[116|[105|[111|[110|[76|[105|[115|[116|[32|[61|[32|[91|[83|[101|[116|[70|[117|[110|[40|[84|[101|[109|[112|[84|[108|[118|[41|[124|[124|[32|[84|[101|[109|[112|[84|[108|[118|[32|[60|[45|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[{'curr','tlv'}|[[93|[44]]|['nl']]]])
															  do  %% Line 402
															      call 'asn1ct_name':'new'
																  ('tlv')
															      do  %% Line 403
																  call 'asn1ct_gen':'emit'
																      ([{'curr','tlv'}|[[32|[61|[32|[91|[83|[116|[108|[118|[32|[124|[124|[32|[123|[95|[44|[83|[116|[108|[118|[125|[32|[60|[45|[32|[108|[105|[115|[116|[115|[58|[115|[111|[114|[116|[40|[80|[111|[115|[105|[116|[105|[111|[110|[76|[105|[115|[116|[41|[93|[44]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl']]])
																  %% Line 404
																  call 'asn1ct_name':'new'
																      ('tlv')
									end
									let <_cor43> =
									    %% Line 407
									    call 'asn1ct_gen':'get_record_name_prefix'
										()
									in  let <_cor44> =
										%% Line 408
										call 'asn1ct_gen':'list2rname'
										    (Typename)
									    in  let <RecordName> =
										    %% Line 407
										    call 'lists':'concat'
											([_cor43|%% Line 408
												 [_cor44|[]]])
										in  %% Line 409
										    case apply 'gen_dec_sequence_call'/5
											     (Erules, Typename, _cor21, Ext, DecObjInf) of
										      %% Line 410
										      <'no_terms'> when 'true' ->
											  do  %% Line 411
											      call 'asn1ct_gen':'emit'
												  (['nl'|['nl']])
											      do  %% Line 412
												  call 'asn1ct_gen':'demit'
												      ([[82|[101|[115|[117|[108|[116|[32|[61|[32]]]]]]]]]])
												  %% Line 414
												  call 'asn1ct_gen':'emit'
												      ([[32|[32|[32|[123|[39]]]]]|[RecordName|[[39|[125|[46]]]|['nl']]]])
										      %% Line 415
										      <{LeadingAttrTerm,PostponedDecArgs}> when 'true' ->
											  do  %% Line 416
											      call 'asn1ct_gen':'emit'
												  (['com'|['nl'|['nl']]])
											      do  %% Line 417
												  case <LeadingAttrTerm,PostponedDecArgs> of
												    %% Line 418
												    <[],[]> when 'true' ->
													'ok'
												    %% Line 420
												    <_cor105,[]> when 'true' ->
													'ok'
												    %% Line 422
												    <[{ObjSetRef,LeadingAttr,Term}|[]],_cor106>
													when call 'erlang':'=:='
													      (_cor106,
													       PostponedDecArgs) ->
													let <_cor46> =
													    %% Line 423
													    call 'lists':'concat'
														(['DecObj'|[LeadingAttr|[Term|[]]]])
													in  let <DecObj> =
														%% Line 423
														call 'asn1ct_gen':'un_hyphen_var'
														    (_cor46)
													    in  let <ValueMatch> =
														    %% Line 424
														    apply 'value_match'/2
															(ValueIndex, Term)
														in  %% Line 425
														    case ObjSetRef of
														      <{ObjSetMod,ObjSetName}> when 'true' ->
															  do  %% Line 426
															      call 'asn1ct_gen':'emit'
																  ([DecObj|[[32|[61]]|['nl'|%% Line 427
																			    [[32|[32|[32]]]|[{'asis',ObjSetMod}|[[58|[39|[103|[101|[116|[100|[101|[99|[95]]]]]]]]]|[ObjSetName|[[39|[40]]|%% Line 428
																																	  [ValueMatch|[[41|[44]]|['nl']]]]]]]]]]])
															      %% Line 429
															      apply 'gen_dec_postponed_decs'/2
																  (DecObj, PostponedDecArgs)
														      ( <_cor49> when 'true' ->
															    primop 'match_fail'
																({'badmatch',_cor49})
															-| ['compiler_generated'] )
														    end
												    ( <_fol80,_fol81> when 'true' ->
													  let <_cor50> = {_fol80,_fol81}
													  in  primop 'match_fail'
														  ({'case_clause',_cor50})
												      -| ['compiler_generated'] )
												  end
												  do  %% Line 431
												      call 'asn1ct_gen':'demit'
													  ([[82|[101|[115|[117|[108|[116|[32|[61|[32]]]]]]]]]])
												      do  %% Line 433
													  case Ext of
													    %% Line 434
													    <Extnsn>
														when call 'erlang':'=/='
														      (Ext,
														       'noext') ->
														%% Line 435
														call 'asn1ct_gen':'emit'
														    ([[99|[97|[115|[101|[32]]]]]|[{'prev','tlv'}|[[32|[111|[102|[32|[91|[93|[32|[45|[62|[32|[116|[114|[117|[101|[59|[32|[95|[32|[45|[62|[32|[116|[114|[117|[101|[32|[101|[110|[100|[44|[32|[37|[32|[46|[46|[46|[32|[101|[120|[116|[114|[97|[32|[102|[105|[101|[108|[100|[115|[32|[115|[107|[105|[112|[112|[101|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl']]]])
													    %% Line 436
													    <'noext'> when 'true' ->
														%% Line 437
														call 'asn1ct_gen':'emit'
														    ([[99|[97|[115|[101|[32]]]]]|[{'prev','tlv'}|[[32|[111|[102]]]|['nl'|[[91|[93|[32|[45|[62|[32|[116|[114|[117|[101|[59]]]]]]]]]]]|[[95|[32|[45|[62|[32|[101|[120|[105|[116|[40|[123|[101|[114|[114|[111|[114|[44|[123|[97|[115|[110|[49|[44|[32|[123|[117|[110|[101|[120|[112|[101|[99|[116|[101|[100|[44]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[{'prev','tlv'}|[[125|[125|[125|[41|[32|[37|[32|[101|[120|[116|[114|[97|[32|[102|[105|[101|[108|[100|[115|[32|[110|[111|[116|[32|[97|[108|[108|[111|[119|[101|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl'|[[101|[110|[100|[44]]]]|['nl']]]]]]]]]]])
													    ( <_cor51> when 'true' ->
														  primop 'match_fail'
														      ({'case_clause',_cor51})
													      -| ['compiler_generated'] )
													  end
													  do  %% Line 443
													      call 'asn1ct_gen':'emit'
														  ([[32|[32|[32|[123|[39]]]]]|[RecordName|[[39|[44|[32]]]]]])
													      let <_cor52> =
														  %% Line 444
														  call 'asn1ct_name':'all'
														      ('term')
													      in  do  %% Line 444
														      apply 'mkvlist'/1
															  (_cor52)
														      %% Line 445
														      call 'asn1ct_gen':'emit'
															  ([[125|[46]]|['nl']])
										      ( <_cor53> when 'true' ->
											    primop 'match_fail'
												({'case_clause',_cor53})
											-| ['compiler_generated'] )
										    end
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor5})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor56,_cor55,_cor54> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor56,_cor55,_cor54})
		  -| [{'function_name',{'gen_decode_set',3}}] )
	    -| ['compiler_generated'] )
	end
'gen_encode_sof'/4 =
    %% Line 457
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Erules,Typename,_X_InnerTypename,D = {'type',_cor17,_cor18,_cor19,_cor20,_cor21}> when ( 'true'
												    -| ['compiler_generated'] ) ->
	      do  %% Line 458
		  call 'asn1ct_name':'start'
		      ()
		  %% Line 459
		  case _cor18 of
		    <{SeqOrSetOf,Cont}> when 'true' ->
			let <_cor10> =
			    %% Line 461
			    case _cor20 of
			      %% Line 462
			      <[{'objfun',_cor32}|_X_R]> when 'true' ->
				  %% Line 463
				  [44|[32|[79|[98|[106|[70|[117|[110]]]]]]]]
			      %% Line 464
			      <_cor33> when 'true' ->
				  %% Line 465
				  []
			    end
			in  let <_cor12> =
				%% Line 468
				call 'asn1ct_gen':'list2name'
				    (Typename)
			    in  do  %% Line 468
				    call 'asn1ct_gen':'emit'
					([[32|[32|[32|[123|[69|[110|[99|[66|[121|[116|[101|[115|[44|[69|[110|[99|[76|[101|[110|[125|[32|[61|[32|[39|[101|[110|[99|[95]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[_cor12|%% Line 469
																									  [[95|[99|[111|[109|[112|[111|[110|[101|[110|[116|[115|[39|[40|[86|[97|[108]]]]]]]]]]]]]]]]|[_cor10|[[44|[91|[93|[44|[48|[41|[44]]]]]]]|['nl']]]]]])
				    do  %% Line 471
					call 'asn1ct_gen':'emit'
					    ([[32|[32|[32]]]|[{'call','ber','encode_tags',[[84|[97|[103|[73|[110]]]]]|[[69|[110|[99|[66|[121|[116|[101|[115]]]]]]]]|[[69|[110|[99|[76|[101|[110]]]]]]]]]}|[[46]|['nl'|['nl']]]]])
					%% Line 474
					apply 'gen_encode_sof_components'/4
					    (Erules, Typename, SeqOrSetOf, Cont)
		    ( <_cor6> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor6})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor16,_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14,_cor13})
		  -| [{'function_name',{'gen_encode_sof',4}}] )
	    -| ['compiler_generated'] )
	end
'gen_decode_sof'/4 =
    %% Line 477
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Erules,TypeName,_X_InnerTypeName,D = {'type',_cor23,_cor24,_cor25,_cor26,_cor27}> when ( 'true'
												    -| ['compiler_generated'] ) ->
	      do  %% Line 478
		  call 'asn1ct_name':'start'
		      ()
		  let <SeqOrSetOf,_X_TypeTag,Cont> =
		      %% Line 480
		      case _cor24 of
			%% Line 481
			<{'SET OF',_X_Cont}> when 'true' ->
			    <'SET OF','SET',_X_Cont>
			%% Line 482
			<{'SEQUENCE OF',_X_Cont}> when 'true' ->
			    <'SEQUENCE OF','SEQUENCE',_X_Cont>
			( <_cor6> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor6})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 484
		      ( case Cont of
			  ( <( {'type',_cor33,_rec15,_cor34,_cor35,_cor36}
			       -| ['compiler_generated'] )> when 'true' ->
				let <TypeNameSuffix> =
				    call 'asn1ct_gen':'constructed_suffix'
					(SeqOrSetOf, _rec15)
				in  do  %% Line 486
					call 'asn1ct_gen':'emit'
					    ([[32|[32|[32|[37|[37|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl']])
					do  %% Line 487
					    call 'asn1ct_gen':'emit'
						([[32|[32|[32|[37|[37|[32|[100|[101|[99|[111|[100|[101|[32|[116|[97|[103|[32|[97|[110|[100|[32|[108|[101|[110|[103|[116|[104|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl']])
					    do  %% Line 488
						call 'asn1ct_gen':'emit'
						    ([[32|[32|[32|[37|[37|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl']])
						do  %% Line 490
						    call 'asn1ct_name':'new'
							('tlv')
						    do  %% Line 491
							call 'asn1ct_gen':'emit'
							    ([{'curr','tlv'}|[[32|[61|[32]]]|[{'call','ber','match_tags',[{'prev','tlv'}|[[84|[97|[103|[73|[110]]]]]]]}|['com'|['nl']]]]])
							do  %% Line 493
							    call 'asn1ct_name':'new'
								('v')
							    do  %% Line 495
								call 'asn1ct_gen':'emit'
								    ([[91]])
								let <InnerType> =
								    %% Line 497
								    call 'asn1ct_gen':'get_inner'
									(_rec15)
								in  let <_cor16> =
									%% Line 498
									case call 'asn1ct_gen':'type'
										 (InnerType) of
									  %% Line 499
									  <Atom>
									      when call 'erlang':'is_atom'
										    (Atom) ->
									      Atom
									  %% Line 500
									  <_cor43> when 'true' ->
									      TypeNameSuffix
									end
								    in  do  %% Line 503
									    apply 'gen_dec_line'/7
										(Erules, TypeName, _cor16, [], Cont, 'mandatory', 'false')
									    %% Line 505
									    call 'asn1ct_gen':'emit'
										([[32|[124|[124|[32]]]]|[{'curr','v'}|[[32|[60|[45|[32]]]]|[{'curr','tlv'}|[[93|[46]]|['nl'|['nl'|['nl']]]]]]]])
			    -| ['compiler_generated'] )
			  ( <_cor37> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','type'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  ( <_cor22,_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21,_cor20,_cor19})
		  -| [{'function_name',{'gen_decode_sof',4}}] )
	    -| ['compiler_generated'] )
	end
'gen_encode_sof_components'/4 =
    %% Line 508
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Erules,Typename,SeqOrSetOf,Cont = {'type',_cor25,_cor26,_cor27,_cor28,_cor29}> when %% Line 509
											       ( 'true'
												 -| ['compiler_generated'] ) ->
	      let <Objfun,Objfun_novar,EncObj> =
		  %% Line 512
		  case _cor28 of
		    %% Line 513
		    <[{'objfun',_cor35}|_X_R]> when 'true' ->
			%% Line 514
			<[44|[32|[79|[98|[106|[70|[117|[110]]]]]]]],[44|[32|[95]]],{'no_attr',[79|[98|[106|[70|[117|[110]]]]]]}>
		    %% Line 515
		    <_cor36> when 'true' ->
			%% Line 516
			<[],[],'false'>
		  end
	      in  let <_cor9> =
		      %% Line 518
		      call 'asn1ct_gen':'list2name'
			  (Typename)
		  in  do  %% Line 518
			  call 'asn1ct_gen':'emit'
			      ([[39|[101|[110|[99|[95]]]]]|[_cor9|%% Line 519
								  [[95|[99|[111|[109|[112|[111|[110|[101|[110|[116|[115|[39|[40|[91|[93]]]]]]]]]]]]]]]|[Objfun_novar|[[44|[32|[65|[99|[99|[66|[121|[116|[101|[115|[44|[32|[65|[99|[99|[76|[101|[110|[41|[32|[45|[62|[32]]]]]]]]]]]]]]]]]]]]]]]|['nl']]]]]])
			  let <_cor11> =
			      catch
				  let <_cor10> =
				      %% Line 521
				      call 'erlang':'get'
					  ('encoding_options')
				  in  %% Line 521
				      call 'lists':'member'
					  ('der', _cor10)
			  in  do  %% Line 521
				  case _cor11 of
				    %% Line 522
				    <'true'>
					when call 'erlang':'=:='
					      (SeqOrSetOf,
					       'SET OF') ->
					do  %% Line 523
					    call 'asn1ct_func':'need'
						({'ber','dynamicsort_SETOF',1})
					    let <_cor12> =
						%% Line 524
						apply 'indent'/1
						    (3)
					    in  %% Line 524
						call 'asn1ct_gen':'emit'
						    ([_cor12|%% Line 525
							     [[123|[100|[121|[110|[97|[109|[105|[99|[115|[111|[114|[116|[95|[83|[69|[84|[79|[70|[40|[65|[99|[99|[66|[121|[116|[101|[115|[41|[44|[65|[99|[99|[76|[101|[110|[125|[59]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl'|['nl']]]])
				    %% Line 526
				    <_cor37> when 'true' ->
					let <_cor13> =
					    %% Line 527
					    apply 'indent'/1
						(3)
					in  %% Line 527
					    call 'asn1ct_gen':'emit'
						([_cor13|[[123|[108|[105|[115|[116|[115|[58|[114|[101|[118|[101|[114|[115|[101|[40|[65|[99|[99|[66|[121|[116|[101|[115|[41|[44|[65|[99|[99|[76|[101|[110|[125|[59]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl'|['nl']]]])
				  end
				  let <_cor15> =
				      %% Line 529
				      call 'asn1ct_gen':'list2name'
					  (Typename)
				  in  do  %% Line 529
					  call 'asn1ct_gen':'emit'
					      ([[39|[101|[110|[99|[95]]]]]|[_cor15|%% Line 530
										   [[95|[99|[111|[109|[112|[111|[110|[101|[110|[116|[115|[39|[40|[91|[72|[124|[84|[93]]]]]]]]]]]]]]]]]]|[Objfun|[[44|[65|[99|[99|[66|[121|[116|[101|[115|[44|[32|[65|[99|[99|[76|[101|[110|[41|[32|[45|[62]]]]]]]]]]]]]]]]]]]]]|['nl']]]]]])
					  let <TypeNameSuffix> =
					      %% Line 531
					      call 'asn1ct_gen':'constructed_suffix'
						  (SeqOrSetOf, _cor26)
					  in  do  %% Line 532
						  apply 'gen_enc_line'/8
						      (Erules, Typename, TypeNameSuffix, Cont, [72], 3, %% Line 534
													'mandatory', %% Line 534
														     EncObj)
						  do  %% Line 535
						      call 'asn1ct_gen':'emit'
							  ([[44]|['nl']])
						      let <_cor19> =
							  %% Line 536
							  apply 'indent'/1
							      (3)
						      in  let <_cor20> =
							      %% Line 536
							      call 'asn1ct_gen':'list2name'
								  (Typename)
							  in  do  %% Line 536
								  call 'asn1ct_gen':'emit'
								      ([_cor19|[[39|[101|[110|[99|[95]]]]]|[_cor20|%% Line 537
														   [[95|[99|[111|[109|[112|[111|[110|[101|[110|[116|[115|[39|[40|[84]]]]]]]]]]]]]]|[Objfun|[[44]]]]]]])
								  %% Line 538
								  call 'asn1ct_gen':'emit'
								      ([[91|[69|[110|[99|[66|[121|[116|[101|[115|[124|[65|[99|[99|[66|[121|[116|[101|[115|[93|[44|[32|[65|[99|[99|[76|[101|[110|[32|[43|[32|[69|[110|[99|[76|[101|[110|[41|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl'|['nl']]])
	  ( <_cor24,_cor23,_cor22,_cor21> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22,_cor21})
		  -| [{'function_name',{'gen_encode_sof_components',4}}] )
	    -| ['compiler_generated'] )
	end
'gen_encode_choice'/3 =
    %% Line 545
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Erules,Typename,D = {'type',_cor17,_cor18,_cor19,_cor20,_cor21}> when ( 'true'
										   -| ['compiler_generated'] ) ->
	      %% Line 547
	      case _cor18 of
		<{'CHOICE',CompList}> when 'true' ->
		    let <Ext> =
			%% Line 548
			apply 'extensible'/1
			    (CompList)
		    in  let <_cor12> =
			    %% Line 549
			    case CompList of
			      %% Line 550
			      <{Rl1,El,Rl2}> when 'true' ->
				  let <_cor10> =
				      call 'erlang':'++'
					  (El, Rl2)
				  in  call 'erlang':'++'
					  (Rl1, _cor10)
			      %% Line 551
			      <{Rl,El}> when 'true' ->
				  call 'erlang':'++'
				      (Rl, El)
			      %% Line 552
			      <_cor32> when 'true' ->
				  CompList
			    end
			in  do  %% Line 554
				apply 'gen_enc_choice'/5
				    (Erules, Typename, _cor17, _cor12, Ext)
				%% Line 555
				call 'asn1ct_gen':'emit'
				    (['nl'|['nl']])
		( <_cor8> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor8})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14})
		  -| [{'function_name',{'gen_encode_choice',3}}] )
	    -| ['compiler_generated'] )
	end
'gen_decode_choice'/3 =
    %% Line 557
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Erules,Typename,D = {'type',_cor17,_cor18,_cor19,_cor20,_cor21}> when ( 'true'
										   -| ['compiler_generated'] ) ->
	      do  %% Line 558
		  call 'asn1ct_name':'start'
		      ()
		  do  %% Line 559
		      call 'asn1ct_name':'new'
			  ('bytes')
		      %% Line 561
		      case _cor18 of
			<{'CHOICE',CompList}> when 'true' ->
			    let <Ext> =
				%% Line 562
				apply 'extensible'/1
				    (CompList)
			    in  let <_cor12> =
				    %% Line 563
				    case CompList of
				      %% Line 564
				      <{Rl1,El,Rl2}> when 'true' ->
					  let <_cor10> =
					      call 'erlang':'++'
						  (El, Rl2)
					  in  call 'erlang':'++'
						  (Rl1, _cor10)
				      %% Line 565
				      <{Rl,El}> when 'true' ->
					  call 'erlang':'++'
					      (Rl, El)
				      %% Line 566
				      <_cor32> when 'true' ->
					  CompList
				    end
				in  do  %% Line 568
					apply 'gen_dec_choice'/5
					    (Erules, Typename, _cor17, _cor12, Ext)
					%% Line 569
					call 'asn1ct_gen':'emit'
					    ([[46]|['nl']])
			( <_cor8> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor8})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14})
		  -| [{'function_name',{'gen_decode_choice',3}}] )
	    -| ['compiler_generated'] )
	end
'gen_enc_sequence_call'/6 =
    %% Line 577
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Erules,TopType,[{'ComponentType',_cor22,Cname,Type,Prop,_cor23,Order}|Rest],Pos,Ext,EncObj> when 'true' ->
	      do  %% Line 578
		  call 'asn1ct_name':'new'
		      ('encBytes')
		  do  %% Line 579
		      call 'asn1ct_name':'new'
			  ('encLen')
		      do  %% Line 580
			  call 'asn1ct_name':'new'
			      ('tmpBytes')
			  do  %% Line 581
			      call 'asn1ct_name':'new'
				  ('tmpLen')
			      let <_cor7> =
				  %% Line 583
				  case Order of
				    %% Line 584
				    <'undefined'> when 'true' ->
					%% Line 585
					Pos
				    %% Line 586
				    <_cor24> when 'true' ->
					Order
				  end
			      in  let <_cor10> =
				      %% Line 589
				      case TopType of
					%% Line 590
					<['EXTERNAL']> when 'true' ->
					    %% Line 591
					    call 'io_lib':'format'
						([67|[105|[110|[100|[101|[120|[126|[119]]]]]]]], [_cor7|[]])
					%% Line 592
					<_cor25> when 'true' ->
					    %% Line 593
					    call 'io_lib':'format'
						([67|[105|[110|[100|[101|[120|[126|[119]]]]]]]], [_cor7|[]])
				      end
				  in  %% Line 595
				      ( case Type of
					  ( <( {'type',_cor26,_rec23,_cor27,_cor28,_cor29}
					       -| ['compiler_generated'] )> when 'true' ->
						let <InnerType> =
						    call 'asn1ct_gen':'get_inner'
							(_rec23)
						in  do  %% Line 596
							apply 'print_attribute_comment'/4
							    (InnerType, Pos, Cname, Prop)
							do  %% Line 597
							    apply 'gen_enc_line'/8
								(Erules, TopType, Cname, Type, _cor10, 3, Prop, EncObj)
							    do  %% Line 598
								call 'asn1ct_gen':'emit'
								    (['com'|['nl']])
								let <_cor15> =
								    %% Line 599
								    call 'erlang':'+'
									(Pos, 1)
								in  %% Line 599
								    apply 'gen_enc_sequence_call'/6
									(Erules, TopType, Rest, _cor15, Ext, EncObj)
					    -| ['compiler_generated'] )
					  ( <_cor30> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','type'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
	  %% Line 601
	  <_X_Erules,_X_TopType,[],_X_Num,_cor31,_cor32> when 'true' ->
	      %% Line 602
	      'true'
	  ( <_cor21,_cor20,_cor19,_cor18,_cor17,_cor16> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor21,_cor20,_cor19,_cor18,_cor17,_cor16})
		  -| [{'function_name',{'gen_enc_sequence_call',6}}] )
	    -| ['compiler_generated'] )
	end
'gen_dec_sequence_call'/5 =
    %% Line 609
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Erules,TopType,CompList,Ext,DecObjInf>
	      when %% Line 610
		call 'erlang':'is_list'
		    (CompList) ->
	      %% Line 611
	      apply 'gen_dec_sequence_call1'/8
		  (Erules, TopType, CompList, 1, Ext, DecObjInf, [], [])
	  %% Line 612
	  <Erules,TopType,CompList,Ext,DecObjInf> when 'true' ->
	      %% Line 613
	      apply 'gen_dec_sequence_call2'/5
		  (Erules, TopType, CompList, Ext, DecObjInf)
	end
'gen_dec_sequence_call1'/8 =
    %% Line 616
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Erules,TopType,[{'ComponentType',_cor23,Cname,Type,Prop,Tags,_cor24}|Rest],Num,Ext,DecObjInf,LeadingAttrAcc,ArgsAcc> when 'true' ->
	      %% Line 617
	      case %% Line 618
		   apply 'gen_dec_component'/9
		       (Erules, TopType, Cname, Tags, Type, Num, Prop, %% Line 619
								       Ext, %% Line 619
									    DecObjInf) of
		<{LA,PostponedDec}> when 'true' ->
		    %% Line 620
		    case Rest of
		      %% Line 621
		      <[]> when 'true' ->
			  let <_cor10> =
			      %% Line 622
			      call 'erlang':'++'
				  (LA, LeadingAttrAcc)
			  in  let <_cor9> =
				  %% Line 622
				  call 'erlang':'++'
				      (PostponedDec, ArgsAcc)
			      in  %% Line 622
				  {_cor10,_cor9}
		      %% Line 623
		      <_cor25> when 'true' ->
			  do  %% Line 624
			      call 'asn1ct_gen':'emit'
				  (['com'|['nl']])
			      do  %% Line 625
				  call 'asn1ct_name':'new'
				      ('bytes')
				  let <_cor13> =
				      %% Line 626
				      call 'erlang':'+'
					  (Num, 1)
				  in  let <_cor12> =
					  %% Line 627
					  call 'erlang':'++'
					      (LA, LeadingAttrAcc)
				      in  let <_cor11> =
					      %% Line 627
					      call 'erlang':'++'
						  (PostponedDec, ArgsAcc)
					  in  %% Line 626
					      apply 'gen_dec_sequence_call1'/8
						  (Erules, TopType, Rest, _cor13, Ext, DecObjInf, _cor12, _cor11)
		    end
		( <_cor8> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor8})
		  -| ['compiler_generated'] )
	      end
	  %% Line 630
	  <_X_Erules,_X_TopType,[],1,_cor26,_cor27,_cor28,_cor29> when 'true' ->
	      %% Line 631
	      'no_terms'
	  ( <_cor22,_cor21,_cor20,_cor19,_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21,_cor20,_cor19,_cor18,_cor17,_cor16,_cor15})
		  -| [{'function_name',{'gen_dec_sequence_call1',8}}] )
	    -| ['compiler_generated'] )
	end
'gen_dec_sequence_call2'/5 =
    %% Line 633
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_Erules,_X_TopType,{[],[],[]},_X_Ext,_X_DecObjInf> when 'true' ->
	      %% Line 634
	      'no_terms'
	  %% Line 635
	  <Erules,TopType,{Root1,EList,Root2},_X_Ext,DecObjInf> when 'true' ->
	      let <_cor6> =
		  %% Line 637
		  call 'erlang':'++'
		      (Root1, EList)
	      in  let <_cor5> =
		      %% Line 638
		      apply 'extensible'/1
			  ({Root1,EList})
		  in  let <_cor8> =
			  %% Line 637
			  case apply 'gen_dec_sequence_call1'/8
				   (Erules, TopType, _cor6, 1, _cor5, %% Line 638
								      DecObjInf, %% Line 638
										 [], %% Line 638
										     []) of
			    %% Line 639
			    <'no_terms'> when 'true' ->
				%% Line 640
				{[],[]}
			    %% Line 641
			    <Res> when 'true' ->
				Res
			  end
		      in  %% Line 636
			  case _cor8 of
			    <{LA,ArgsAcc}> when 'true' ->
				let <TagList> =
				    %% Line 645
				    apply 'get_root2_taglist'/2
					(Root2, [])
				in  do  %% Line 646
					call 'asn1ct_gen':'emit'
					    ({'com','nl'})
					do  %% Line 647
					    call 'asn1ct_gen':'emit'
						([{'curr','tlv'}|[[32|[61|[32]]]|%% Line 648
										 [{'call','ber','skip_ExtensionAdditions',%% Line 649
															  [{'prev','tlv'}|[{'asis',TagList}|[]]]}|%% Line 649
																				  ['com'|['nl']]]]])
					    do  %% Line 650
						call 'asn1ct_name':'new'
						    ('tlv')
						let <_cor12> =
						    %% Line 652
						    call 'erlang':'length'
							(Root1)
						in  let <_cor11> =
							%% Line 652
							call 'erlang':'length'
							    (EList)
						    in  let <_cor13> =
							    %% Line 652
							    call 'erlang':'+'
								(_cor12, _cor11)
							in  %% Line 651
							    apply 'gen_dec_sequence_call1'/8
								(Erules, TopType, Root2, _cor13, %% Line 652
												 'noext', %% Line 653
													  DecObjInf, %% Line 653
														     LA, %% Line 653
															 ArgsAcc)
			    ( <_cor9> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor9})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor18,_cor17,_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17,_cor16,_cor15,_cor14})
		  -| [{'function_name',{'gen_dec_sequence_call2',5}}] )
	    -| ['compiler_generated'] )
	end
'get_root2_taglist'/2 =
    %% Line 658
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],Acc> when 'true' ->
	      %% Line 659
	      call 'lists':'reverse'
		  (Acc)
	  %% Line 660
	  <[{'ComponentType',_cor17,_cor18,Type,Prop,_cor19,_cor20}|Rest],Acc> when 'true' ->
	      let <_cor10> =
		  %% Line 661
		  ( fun (_cor8) ->
			case _cor8 of
			  <[]> when 'true' ->
			      []
			  %% Line 662
			  <[H|_X_T]> when 'true' ->
			      ( case H of
				  ( <( {'tag',_rec24,_cor21,_cor22,_cor23}
				       -| ['compiler_generated'] )> when 'true' ->
					let <_cor6> =
					    call 'asn1ct_gen_ber_bin_v2':'decode_class'
						(_rec24)
					in  let <_cor7> =
						call 'erlang':'bsl'
						    (_cor6, 10)
					    in  %% Line 663
						call 'erlang':'+'
						    (_cor7, _cor21)
				    -| ['compiler_generated'] )
				  ( <_cor24> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','tag'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  ( <_cor9> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor9})
				  -| [{'function_name',{'-get_root2_taglist/2-fun-0-',1}}] )
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-get_root2_taglist/2-fun-0-'}}] )
	      in  %% Line 664
		  ( case Type of
		      ( <( {'type',_rec26,_cor29,_cor30,_cor31,_cor32}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <FirstTag> =
				apply _cor10
				    (_rec26)
			    in  %% Line 665
				case Prop of
				  %% Line 666
				  <'mandatory'> when 'true' ->
				      %% Line 669
				      call 'lists':'reverse'
					  ([FirstTag|Acc])
				  %% Line 670
				  <_cor34> when 'true' ->
				      %% Line 671
				      apply 'get_root2_taglist'/2
					  (Rest, [FirstTag|Acc])
				end
			-| ['compiler_generated'] )
		      ( <_cor33> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','type'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15})
		  -| [{'function_name',{'get_root2_taglist',2}}] )
	    -| ['compiler_generated'] )
	end
'gen_dec_component'/9 =
    %% Line 680
    fun (_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 682
	( case _cor4 of
	    ( <( {'type',_cor29,_rec27,_cor30,_cor31,_cor32}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor14> =
		      case _rec27 of
			%% Line 683
			<{'ObjectClassFieldType',_cor34,_cor35,_cor36,OCFTType}> when 'true' ->
			    OCFTType
			%% Line 684
			<_cor37> when 'true' ->
			    call 'asn1ct_gen':'get_inner'
				(_rec27)
		      end
		  in  let <_cor17> =
			  %% Line 687
			  case <_cor2,_cor1> of
			    %% Line 688
			    <'mandatory',{'ext',Epos,_cor43}>
				when call 'erlang':'>='
				      (_cor3,
				       Epos) ->
				%% Line 689
				'OPTIONAL'
			    %% Line 690
			    <_fol212,_fol213> when 'true' ->
				_cor2
			  end
		      in  do  %% Line 693
			      apply 'print_attribute_comment'/4
				  (_cor14, _cor3, _cor6, _cor17)
			      do  %% Line 694
				  call 'asn1ct_name':'new'
				      ('term')
				  do  %% Line 695
				      apply 'emit_term_tlv'/3
					  (_cor17, _cor14, _cor0)
				      do  %% Line 696
					  call 'asn1ct_name':'new'
					      ('rb')
					  let <PostponedDec> =
					      %% Line 698
					      apply 'gen_dec_line'/7
						  (_cor8, _cor7, _cor6, _cor5, _cor4, _cor17, _cor0)
					  in  do  %% Line 699
						  call 'asn1ct_name':'new'
						      ('v')
						  do  %% Line 700
						      call 'asn1ct_name':'new'
							  ('tlv')
						      do  %% Line 701
							  call 'asn1ct_name':'new'
							      ('form')
							  %% Line 702
							  PostponedDec
	      -| ['compiler_generated'] )
	    ( <_cor33> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','type'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'emit_term_tlv'/3 =
    %% Line 705
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'DEFAULT',_cor6},InnerType,DecObjInf> when 'true' ->
	      %% Line 706
	      apply 'emit_term_tlv'/3
		  ('opt_or_def', InnerType, DecObjInf)
	  %% Line 707
	  <'OPTIONAL',InnerType,DecObjInf> when 'true' ->
	      %% Line 708
	      apply 'emit_term_tlv'/3
		  ('opt_or_def', InnerType, DecObjInf)
	  %% Line 709
	  <Prop,{'typefield',_cor7},DecObjInf> when 'true' ->
	      %% Line 710
	      apply 'emit_term_tlv'/3
		  (Prop, 'type_or_object_field', DecObjInf)
	  %% Line 711
	  <'opt_or_def','type_or_object_field',NotFalse>
	      when %% Line 712
		call 'erlang':'=/='
		    (NotFalse,
		     'false') ->
	      do  %% Line 713
		  call 'asn1ct_name':'new'
		      ('tmpterm')
		  %% Line 714
		  call 'asn1ct_gen':'emit'
		      ([[123]|[{'curr','tmpterm'}|[[44]|[{'curr','tlv'}|[[125|[32|[61|[32]]]]]]]]])
	  %% Line 715
	  <'opt_or_def',_cor8,_cor9> when 'true' ->
	      %% Line 716
	      call 'asn1ct_gen':'emit'
		  ([[123]|[{'curr','term'}|[[44]|[{'curr','tlv'}|[[125|[32|[61|[32]]]]]]]]])
	  %% Line 717
	  <_cor10,'type_or_object_field','false'> when 'true' ->
	      %% Line 718
	      call 'asn1ct_gen':'emit'
		  ([[91]|[{'curr','v'}|[[124]|[{'curr','tlv'}|[[93|[32|[61|[32]]]]|[{'prev','tlv'}|[[44|[32]]|['nl'|[{'curr','term'}|[[32|[61|[32]]]]]]]]]]]]])
	  %% Line 720
	  <_cor11,'type_or_object_field',_cor12> when 'true' ->
	      do  %% Line 721
		  call 'asn1ct_name':'new'
		      ('tmpterm')
		  do  %% Line 722
		      call 'asn1ct_gen':'emit'
			  ([[91]|[{'curr','v'}|[[124]|[{'curr','tlv'}|[[93|[32|[61|[32]]]]|[{'prev','tlv'}|[[44|[32]]|['nl']]]]]]]])
		      %% Line 723
		      call 'asn1ct_gen':'emit'
			  (['nl'|[[32|[32]]|[{'curr','tmpterm'}|[[32|[61|[32]]]]]]])
	  %% Line 724
	  <'mandatory',_cor13,_cor14> when 'true' ->
	      %% Line 725
	      call 'asn1ct_gen':'emit'
		  ([[91]|[{'curr','v'}|[[124]|[{'curr','tlv'}|[[93|[32|[61|[32]]]]|[{'prev','tlv'}|[[44|[32]]|['nl'|[{'curr','term'}|[[32|[61|[32]]]]]]]]]]]]])
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'emit_term_tlv',3}}] )
	    -| ['compiler_generated'] )
	end
'gen_dec_set_cases'/4 =
    %% Line 729
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_Erules,_X_TopType,[],Pos> when 'true' ->
	      %% Line 730
	      Pos
	  %% Line 731
	  <Erules,TopType,[Comp|RestComps],Pos> when 'true' ->
	      %% Line 732
	      ( case Comp of
		  ( <( {'ComponentType',_cor50,_rec29,_cor51,_cor52,_cor53,_cor54}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor13> =
			    %% Line 736
			    apply 'indent'/1
				(6)
			in  do  %% Line 736
				call 'asn1ct_gen':'emit'
				    ([_cor13|[[37]|[_rec29|['nl']]]])
				%% Line 737
				( case _cor51 of
				    ( <( {'type',_rec32,_cor68,_cor69,_cor70,_cor71}
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_cor31> =
					      case _rec32 of
						%% Line 738
						<[]> when 'true' ->
						    %% Line 739
						    ( letrec
							  'lc$^0'/1 =
							      fun (_cor18) ->
								  case _cor18 of
								    <[%% Line 740
								      {T1class,T1number}|_cor17]> when 'true' ->
									let <_cor19> =
									    call 'asn1ct_gen_ber_bin_v2':'decode_class'
										(T1class)
									in  let <_cor20> =
										call 'erlang':'bsl'
										    (_cor19, 10)
									    in  let <_cor21> =
										    call 'erlang':'+'
											(_cor20, T1number)
										in  let <_cor22> =
											%% Line 740
											apply 'lc$^0'/1
											    (_cor17)
										    in  ( [_cor21|_cor22]
											  -| ['compiler_generated'] )
								    ( <[_cor16|_cor17]> when 'true' ->
									  %% Line 740
									  apply 'lc$^0'/1
									      (_cor17)
								      -| ['compiler_generated'] )
								    <[]> when 'true' ->
									[]
								    ( <_cor18> when 'true' ->
									  ( primop 'match_fail'
										({'function_clause',_cor18})
									    -| [{'function_name',{'lc$^0',1}}] )
								      -| ['compiler_generated'] )
								  end
						      in  apply 'lc$^0'/1
							      (_cor53)
						      -| ['list_comprehension'] )
						%% Line 741
						<[FirstTag|_cor73]> when 'true' ->
						    %% Line 742
						    ( case FirstTag of
							( <( {'tag',_rec33,_cor74,_cor75,_cor76}
							     -| ['compiler_generated'] )> when 'true' ->
							      let <_cor27> =
								  call 'asn1ct_gen_ber_bin_v2':'decode_class'
								      (_rec33)
							      in  let <_cor28> =
								      call 'erlang':'bsl'
									  (_cor27, 10)
								  in  let <_cor29> =
									  call 'erlang':'+'
									      (_cor28, _cor74)
								      in  [_cor29|[]]
							  -| ['compiler_generated'] )
							( <_cor77> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','tag'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
						( <_cor30> when 'true' ->
						      primop 'match_fail'
							  ({'case_clause',_cor30})
						  -| ['compiler_generated'] )
					      end
					  in  let <CaseFun> =
						  %% Line 746
						  ( fun (_cor40,_cor39,_cor38) ->
							case <_cor40,_cor39,_cor38> of
							  <TagList = [H|T],Fun,N> when 'true' ->
							      let <_cor34> =
								  %% Line 747
								  case TagList of
								    %% Line 748
								    <[_X_Tag1|[_cor82|_cor83]]> when 'true' ->
									[[59]|['nl']]
								    %% Line 749
								    <_cor84> when 'true' ->
									[]
								  end
							      in  do  %% Line 751
								      call 'asn1ct_gen':'emit'
									  ([[84|[84|[108|[118|[32|[61|[32|[123]]]]]]]]|[H|[[44|[95|[125|[32|[45|[62]]]]]]|['nl']]]])
								      let <_cor36> =
									  %% Line 752
									  apply 'indent'/1
									      (4)
								      in  do  %% Line 752
									      call 'asn1ct_gen':'emit'
										  ([_cor36|[[123]|[Pos|[[44|[32|[84|[84|[108|[118|[125]]]]]]]|[_cor34|[]]]]]])
									      let <_cor37> =
										  %% Line 753
										  call 'erlang':'+'
										      (N, 1)
									      in  %% Line 753
										  apply Fun
										      (T, Fun, _cor37)
							  %% Line 754
							  <[],_cor85,0> when 'true' ->
							      %% Line 755
							      'true'
							  %% Line 756
							  <[],_cor86,_cor87> when 'true' ->
							      %% Line 757
							      call 'asn1ct_gen':'emit'
								  ([[59]|['nl']])
							  ( <_cor43,_cor42,_cor41> when 'true' ->
								( primop 'match_fail'
								      ({'function_clause',_cor43,_cor42,_cor41})
								  -| [{'function_name',{'-gen_dec_set_cases/4-fun-0-',3}}] )
							    -| ['compiler_generated'] )
							end
						    -| [{'id',{0,0,'-gen_dec_set_cases/4-fun-0-'}}] )
					      in  do  %% Line 759
						      apply CaseFun
							  (_cor31, CaseFun, 0)
						      let <_cor45> =
							  %% Line 761
							  call 'erlang':'+'
							      (Pos, 1)
						      in  %% Line 761
							  apply 'gen_dec_set_cases'/4
							      (Erules, TopType, RestComps, _cor45)
				      -| ['compiler_generated'] )
				    ( <_cor72> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','type'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor55> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','ComponentType'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor49,_cor48,_cor47,_cor46> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor49,_cor48,_cor47,_cor46})
		  -| [{'function_name',{'gen_dec_set_cases',4}}] )
	    -| ['compiler_generated'] )
	end
'gen_enc_choice'/5 =
    %% Line 771
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 772
	apply 'gen_enc_choice1'/5
	    (_cor4, _cor3, _cor2, _cor1, _cor0)
'gen_enc_choice1'/5 =
    %% Line 774
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 775
	    call 'asn1ct_name':'clear'
		()
	    do  %% Line 776
		call 'asn1ct_gen':'emit'
		    ([[32|[32|[32|[123|[69|[110|[99|[66|[121|[116|[101|[115|[44|[69|[110|[99|[76|[101|[110|[125|[32|[61|[32|[99|[97|[115|[101|[32|[101|[108|[101|[109|[101|[110|[116|[40|[49|[44|[86|[97|[108|[41|[32|[111|[102]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl']])
		do  %% Line 777
		    apply 'gen_enc_choice2'/3
			(_cor4, _cor3, _cor1)
		    do  %% Line 778
			call 'asn1ct_gen':'emit'
			    (['nl'|[[32|[32|[32|[101|[110|[100|[44]]]]]]]|['nl'|['nl']]]])
			do  %% Line 779
			    apply 'call'/2
				('encode_tags', [[84|[97|[103|[73|[110]]]]]|[[69|[110|[99|[66|[121|[116|[101|[115]]]]]]]]|[[69|[110|[99|[76|[101|[110]]]]]]]]])
			    %% Line 780
			    call 'asn1ct_gen':'emit'
				([[46]|['nl']])
'gen_enc_choice2'/3 =
    %% Line 783
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Erules,TopType,[H1 = {'ComponentType',_cor31,_cor32,_cor33,_cor34,_cor35,_cor36}|T]> when ( 'true'
												       -| ['compiler_generated'] ) ->
	      do  %% Line 786
		  call 'asn1ct_gen':'emit'
		      ([[32|[32|[32|[32|[32|[32]]]]]]|[{'asis',_cor32}|[[32|[45|[62]]]|['nl']]]])
		  %% Line 788
		  ( case _cor33 of
		      ( <( {'type',_cor49,_rec37,_cor50,_cor51,_cor52}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_cor11> =
				call 'asn1ct_gen':'get_constraint'
				    (_cor50, %% Line 789
					     'componentrelation')
			    in  let <Encobj,Assign> =
				    case <_rec37,_cor11> of
				      %% Line 790
				      <{'ObjectClassFieldType',_cor59,_cor60,_cor61,_cor62},{'componentrelation',_cor63,_cor64}> when 'true' ->
					  do  %% Line 791
					      call 'asn1ct_name':'new'
						  ('tmpBytes')
					      do  %% Line 792
						  call 'asn1ct_name':'new'
						      ('tmpLen')
						  do  %% Line 793
						      call 'asn1ct_name':'new'
							  ('encBytes')
						      do  %% Line 794
							  call 'asn1ct_name':'new'
							      ('encLen')
							  %% Line 796
							  <{'no_attr',[79|[98|[106|[70|[117|[110]]]]]]},[[123]|[{'curr','tmpBytes'}|[[44|[32|[95|[125|[32|[61|[32]]]]]]]]]]>
				      %% Line 797
				      <_fol281,_fol282> when 'true' ->
					  %% Line 798
					  case _cor51 of
					    %% Line 799
					    <[{'objfun',_cor71}|[]]> when 'true' ->
						<{'no_attr',[79|[98|[106|[70|[117|[110]]]]]]},[]>
					    %% Line 800
					    <_cor72> when 'true' ->
						<'false',[]>
					  end
				    end
				in  do  %% Line 803
					apply 'gen_enc_line'/9
					    (Erules, TopType, _cor32, _cor33, [101|[108|[101|[109|[101|[110|[116|[40|[50|[44|[86|[97|[108|[41]]]]]]]]]]]]]], 9, %% Line 804
																				'mandatory', %% Line 804
																					     Assign, %% Line 804
																						     Encobj)
					do  %% Line 805
					    case <_rec37,Encobj> of
					      %% Line 806
					      <{'ObjectClassFieldType',_cor78,_cor79,_cor80,_cor81},{'no_attr',[79|[98|[106|[70|[117|[110]]]]]]}> when 'true' ->
						  let <_cor23> =
						      %% Line 807
						      apply 'indent'/1
							  (9)
						  in  %% Line 807
						      call 'asn1ct_gen':'emit'
							  ([[44]|['nl'|[_cor23|[[123]|[{'curr','encBytes'}|[[44|[32]]|[{'curr','encLen'}|[[125]]]]]]]]])
					      %% Line 809
					      <_fol285,_fol286> when 'true' ->
						  'ok'
					    end
					    do  %% Line 811
						call 'asn1ct_gen':'emit'
						    ([[59]|['nl']])
						do  %% Line 812
						    case T of
						      %% Line 813
						      <[]> when 'true' ->
							  let <_cor25> =
							      %% Line 814
							      apply 'indent'/1
								  (6)
							  in  let <_cor26> =
								  %% Line 815
								  apply 'indent'/1
								      (9)
							      in  %% Line 814
								  call 'asn1ct_gen':'emit'
								      ([_cor25|[[69|[108|[115|[101|[32|[45|[62|[32]]]]]]]]|['nl'|%% Line 815
																 [_cor26|[[101|[120|[105|[116|[40|[123|[101|[114|[114|[111|[114|[44|[123|[97|[115|[110|[49|[44|[123|[105|[110|[118|[97|[108|[105|[100|[95|[99|[104|[111|[105|[99|[101|[95|[116|[121|[112|[101|[44|[69|[108|[115|[101|[125|[125|[125|[41]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
						      %% Line 816
						      <_cor83> when 'true' ->
							  'ok'
						    end
						    %% Line 819
						    apply 'gen_enc_choice2'/3
							(Erules, TopType, T)
			-| ['compiler_generated'] )
		      ( <_cor53> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','type'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 821
	  <_X_Erules,_X_TopType,[]> when 'true' ->
	      %% Line 822
	      'true'
	  ( <_cor30,_cor29,_cor28> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor30,_cor29,_cor28})
		  -| [{'function_name',{'gen_enc_choice2',3}}] )
	    -| ['compiler_generated'] )
	end
'gen_dec_choice'/5 =
    %% Line 831
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 832
	    call 'asn1ct_name':'clear'
		()
	    do  %% Line 833
		call 'asn1ct_name':'new'
		    ('tlv')
		do  %% Line 834
		    call 'asn1ct_gen':'emit'
			([{'curr','tlv'}|[[32|[61|[32]]]|[{'call','ber','match_tags',[{'prev','tlv'}|[[84|[97|[103|[73|[110]]]]]]]}|['com'|['nl']]]]])
		    do  %% Line 836
			call 'asn1ct_name':'new'
			    ('tlv')
			do  %% Line 837
			    call 'asn1ct_name':'new'
				('v')
			    do  %% Line 838
				call 'asn1ct_gen':'emit'
				    ([[99|[97|[115|[101|[32|[40|[99|[97|[115|[101|[32]]]]]]]]]]]|[{'prev','tlv'}|[[32|[111|[102|[32|[91|[67|[116|[101|[109|[112]]]]]]]]]]|[{'prev','tlv'}|[[93|[32|[45|[62|[32|[67|[116|[101|[109|[112]]]]]]]]]]|[{'prev','tlv'}|[[59|[32|[95|[32|[45|[62|[32]]]]]]]|[{'prev','tlv'}|[[32|[101|[110|[100|[41]]]]]|[[32|[111|[102]]]|['nl']]]]]]]]]]])
				do  %% Line 841
				    call 'asn1ct_name':'new'
					('tagList')
				    do  %% Line 842
					call 'asn1ct_name':'new'
					    ('choTags')
					do  %% Line 843
					    call 'asn1ct_name':'new'
						('res')
					    do  %% Line 844
						apply 'gen_dec_choice_cases'/3
						    (_cor4, _cor3, _cor1)
						let <_cor5> =
						    %% Line 845
						    apply 'indent'/1
							(6)
						in  do  %% Line 845
							call 'asn1ct_gen':'emit'
							    ([_cor5|[{'curr','else'}|[[32|[45|[62|[32]]]]|['nl']]]])
							do  %% Line 846
							    case _cor0 of
							      %% Line 847
							      <'noext'> when 'true' ->
								  let <_cor6> =
								      %% Line 848
								      apply 'indent'/1
									  (9)
								  in  %% Line 848
								      call 'asn1ct_gen':'emit'
									  ([_cor6|[[101|[120|[105|[116|[40|[123|[101|[114|[114|[111|[114|[44|[123|[97|[115|[110|[49|[44|[123|[105|[110|[118|[97|[108|[105|[100|[95|[99|[104|[111|[105|[99|[101|[95|[116|[97|[103|[44]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[{'curr','else'}|[[125|[125|[125|[41]]]]|['nl']]]]])
							      %% Line 850
							      <_cor15> when 'true' ->
								  let <_cor7> =
								      %% Line 851
								      apply 'indent'/1
									  (9)
								  in  %% Line 851
								      call 'asn1ct_gen':'emit'
									  ([_cor7|[[123|[97|[115|[110|[49|[95|[69|[120|[116|[65|[108|[116|[44]]]]]]]]]]]]]|[{'call','ber','ber_encode',[{'curr','else'}]}|[[125]|['nl']]]]])
							    end
							    let <_cor9> =
								%% Line 854
								apply 'indent'/1
								    (3)
							    in  do  %% Line 854
								    call 'asn1ct_gen':'emit'
									([_cor9|[[101|[110|[100]]]|['nl']]])
								    do  %% Line 855
									call 'asn1ct_name':'new'
									    ('tag')
									%% Line 856
									call 'asn1ct_name':'new'
									    ('else')
'gen_dec_choice_cases'/3 =
    %% Line 858
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_Erules,_X_TopType,[]> when 'true' ->
	      %% Line 859
	      'ok'
	  %% Line 860
	  <Erules,TopType,[H|T]> when 'true' ->
	      %% Line 861
	      ( case H of
		  ( <( {'ComponentType',_cor59,_rec41,_cor60,_cor61,_cor62,_cor63}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 864
			( case _cor60 of
			    ( <( {'type',_rec44,_cor77,_cor78,_cor79,_cor80}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <Fcases> =
				      %% Line 865
				      ( fun (_cor21,_cor20) ->
					    case <_cor21,_cor20> of
					      <[{T1class,T1number}|Tail],Fun> when 'true' ->
						  let <_cor15> =
						      %% Line 866
						      apply 'indent'/1
							  (4)
						  in  let <_cor16> =
							  %% Line 867
							  call 'asn1ct_gen_ber_bin_v2':'decode_class'
							      (T1class)
						      in  let <_cor17> =
							      %% Line 867
							      call 'erlang':'bsl'
								  (_cor16, 10)
							  in  let <_cor18> =
								  %% Line 867
								  call 'erlang':'+'
								      (_cor17, %% Line 868
									       T1number)
							      in  do  %% Line 866
								      call 'asn1ct_gen':'emit'
									  ([_cor15|[{'curr','v'}|[[32|[61|[32|[123]]]]|%% Line 867
														       [_cor18|%% Line 868
															       [[44|[95|[125|[32|[45|[62|[32]]]]]]]|['nl']]]]]])
								      let <_cor19> =
									  %% Line 869
									  apply 'indent'/1
									      (8)
								      in  do  %% Line 869
									      call 'asn1ct_gen':'emit'
										  ([_cor19|[[123]|[{'asis',_rec41}|[[44|[32]]]]]])
									      do  %% Line 870
										  apply 'gen_dec_line'/7
										      (Erules, TopType, _rec41, [], _cor60, _cor61, 'false')
										  do  %% Line 871
										      call 'asn1ct_gen':'emit'
											  ([[125|[59]]|['nl'|['nl']]])
										      %% Line 872
										      apply Fun
											  (Tail, Fun)
					      %% Line 873
					      <[],_cor82> when 'true' ->
						  %% Line 874
						  'ok'
					      ( <_cor23,_cor22> when 'true' ->
						    ( primop 'match_fail'
							  ({'function_clause',_cor23,_cor22})
						      -| [{'function_name',{'-gen_dec_choice_cases/3-fun-0-',2}}] )
						-| ['compiler_generated'] )
					    end
					-| [{'id',{0,0,'-gen_dec_choice_cases/3-fun-0-'}}] )
				  in  do  %% Line 876
					  call 'asn1ct_gen':'emit'
					      (['nl'|[[37|[37|[32|[39]]]]|[_rec41|[[39]|['nl']]]]])
					  let <_cor25> =
					      %% Line 877
					      call 'asn1ct':'get_gen_state_field'
						  ('namelist')
					  in  do  %% Line 877
						  case <_rec44,_cor25> of
						    %% Line 878
						    <[],_cor83> when 'true' ->
							%% Line 879
							apply Fcases
							    (_cor62, Fcases)
						    %% Line 880
						    <[FirstT|_X_RestT],[{_cor90,'undecoded'}|Names]>
							when call 'erlang':'=:='
							      (_cor90,
							       _rec41) ->
							%% Line 881
							( case FirstT of
							    ( <( {'tag',_rec46,_cor91,_cor92,_cor93}
								 -| ['compiler_generated'] )> when 'true' ->
								  let <_cor32> =
								      call 'asn1ct_gen_ber_bin_v2':'decode_class'
									  (_rec46)
								  in  let <_cor33> =
									  call 'erlang':'bsl'
									      (_cor32, 10)
								      in  let <DecTag> =
									      call 'erlang':'+'
										  (_cor33, _cor91)
									  in  do  %% Line 883
										  call 'asn1ct':'add_generated_refed_func'
										      ({[_rec41|TopType],'undecoded',%% Line 884
														     [DecTag|[]],_cor60})
										  do  %% Line 885
										      call 'asn1ct':'update_gen_state'
											  ('namelist', Names)
										      let <_cor35> =
											  %% Line 886
											  apply 'indent'/1
											      (4)
										      in  let <_cor40> =
											      %% Line 887
											      apply 'match_tag'/2
												  (_rec46, _cor91)
											  in  do  %% Line 886
												  call 'asn1ct_gen':'emit'
												      ([_cor35|[{'curr','res'}|[[32|[61|[32]]]|%% Line 887
																	       [_cor40|%% Line 888
																		       [[32|[45|[62|[32]]]]|['nl']]]]]])
												  let <_cor41> =
												      %% Line 889
												      apply 'indent'/1
													  (8)
												  in  let <_cor42> =
													  %% Line 890
													  call 'asn1ct_gen':'list2name'
													      ([_rec41|TopType])
												      in  %% Line 889
													  call 'asn1ct_gen':'emit'
													      ([_cor41|[[123]|[{'asis',_rec41}|[[44|[32|[123|[39]]]]|%% Line 890
																				     [_cor42|[[39|[44]]|[{'curr','res'}|[[125|[125|[59]]]|['nl'|['nl']]]]]]]]]])
							      -| ['compiler_generated'] )
							    ( <_cor94> when 'true' ->
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( 'error'
													 -| ['compiler_generated'] )
									(( {'badrecord','tag'}
									   -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
						    %% Line 892
						    <[FirstT|RestT],_cor107> when 'true' ->
							let <_cor43> =
							    %% Line 893
							    apply 'indent'/1
								(4)
							in  %% Line 894
							    ( case FirstT of
								( <( {'tag',_rec50,_cor108,_cor109,_cor110}
								     -| ['compiler_generated'] )> when 'true' ->
								      let <_cor48> =
									  call 'asn1ct_gen_ber_bin_v2':'decode_class'
									      (_rec50)
								      in  let <_cor49> =
									      call 'erlang':'bsl'
										  (_cor48, 10)
									  in  let <_cor50> =
										  call 'erlang':'+'
										      (_cor49, _cor108)
									      in  do  call 'asn1ct_gen':'emit'
											  ([_cor43|[[123]|[_cor50|%% Line 895
														  [[44|[32]]|[{'curr','v'}|[[125|[32|[45|[62|[32]]]]]|['nl']]]]]]])
										      let <_cor51> =
											  %% Line 896
											  apply 'indent'/1
											      (8)
										      in  do  %% Line 896
											      call 'asn1ct_gen':'emit'
												  ([_cor51|[[123]|[{'asis',_rec41}|[[44|[32]]]]]])
											      let <_cor54> =
												  %% Line 897
												  call 'erlang':'setelement'
												      (2, _cor60, RestT)
											      in  do  %% Line 897
												      apply 'gen_dec_line'/7
													  (Erules, TopType, _rec41, [], _cor54, _cor61, 'false')
												      %% Line 898
												      call 'asn1ct_gen':'emit'
													  ([[125|[59]]|['nl'|['nl']]])
								  -| ['compiler_generated'] )
								( <_cor111> when 'true' ->
								      ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'error'
													     -| ['compiler_generated'] )
									    (( {'badrecord','tag'}
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
							      end
							      -| ['compiler_generated'] )
						    ( <_fol353,_fol354> when 'true' ->
							  let <_cor55> = {_fol353,_fol354}
							  in  primop 'match_fail'
								  ({'case_clause',_cor55})
						      -| ['compiler_generated'] )
						  end
						  %% Line 900
						  apply 'gen_dec_choice_cases'/3
						      (Erules, TopType, T)
			      -| ['compiler_generated'] )
			    ( <_cor81> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','type'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor64> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','ComponentType'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor58,_cor57,_cor56> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor58,_cor57,_cor56})
		  -| [{'function_name',{'gen_dec_choice_cases',3}}] )
	    -| ['compiler_generated'] )
	end
'match_tag'/2 =
    %% Line 902
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Class,TagNo>
	      when call 'erlang':'is_integer'
		    (TagNo) ->
	      let <_cor2> =
		  %% Line 903
		  call 'asn1ct_gen_ber_bin_v2':'decode_class'
		      (Class)
	      in  %% Line 903
		  apply 'match_tag1'/2
		      (_cor2, TagNo)
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'match_tag',2}}] )
	    -| ['compiler_generated'] )
	end
'match_tag1'/2 =
    %% Line 905
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Class,TagNo>
	      when call 'erlang':'=<'
		    (TagNo,
		     30) ->
	      let <_cor2> =
		  %% Line 906
		  call 'erlang':'bsr'
		      (Class, 6)
	      in  %% Line 906
		  call 'io_lib':'format'
		      ([60|[60|[126|[112|[58|[50|[44|[95|[58|[49|[44|[126|[112|[58|[53|[44|[95|[47|[98|[105|[110|[97|[114|[121|[62|[62]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor2|[TagNo|[]]])
	  %% Line 907
	  <Class,TagNo> when 'true' ->
	      let <Octets> =
		  %% Line 908
		  apply 'mk_object_val'/1
		      (TagNo)
	      in  let <_cor4> =
		      %% Line 909
		      call 'erlang':'bsr'
			  (Class, 6)
		  in  %% Line 909
		      call 'io_lib':'format'
			  ([60|[60|[126|[112|[58|[50|[44|[95|[58|[49|[44|[51|[49|[58|[53|[44|[126|[115|[44|[95|[47|[98|[105|[110|[97|[114|[121|[62|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor4|[Octets|[]]])
	end
'mk_object_val'/1 =
    %% Line 911
    fun (_cor0) ->
	case _cor0 of
	  <Val>
	      when call 'erlang':'<'
		    (_cor0,
		     128) ->
	      %% Line 912
	      call 'erlang':'integer_to_list'
		  (Val)
	  %% Line 913
	  <Val> when 'true' ->
	      let <_cor3> =
		  %% Line 914
		  call 'erlang':'bsr'
		      (Val, 7)
	      in  let <_cor1> =
		      %% Line 914
		      call 'erlang':'band'
			  (Val, 127)
		  in  let <_cor2> =
			  %% Line 914
			  call 'erlang':'integer_to_list'
			      (_cor1)
		      in  %% Line 914
			  apply 'mk_object_val'/2
			      (_cor3, [_cor2|[]])
	end
'mk_object_val'/2 =
    %% Line 916
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <0,Acc> when 'true' ->
	      %% Line 917
	      Acc
	  %% Line 918
	  <Val,Acc> when 'true' ->
	      let <_cor2> =
		  %% Line 919
		  call 'erlang':'band'
		      (Val, 127)
	      in  let <_cor3> =
		      %% Line 919
		      call 'erlang':'bor'
			  (_cor2, 128)
		  in  let <I> =
			  %% Line 919
			  call 'erlang':'integer_to_list'
			      (_cor3)
		      in  let <_cor5> =
			      %% Line 920
			      call 'erlang':'bsr'
				  (Val, 7)
			  in  %% Line 920
			      apply 'mk_object_val'/2
				  (_cor5, [I|[[44]|Acc]])
	end
'gen_enc_line'/8 =
    %% Line 926
    fun (_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Erules,TopType,Cname,Type = %% Line 927
				       {'type',_cor17,%% Line 928
						      {'ObjectClassFieldType',_cor18,_cor19,_cor20,{'typefield',_cor21}},C,_cor22,_cor23},%% Line 929
																	  Element,%% Line 929
																		  Indent,OptOrMand = %% Line 929
																				     'mandatory',%% Line 929
																						 EncObj>
	      when %% Line 930
		call 'erlang':'is_list'
		    (Element) ->
	      %% Line 931
	      case call 'asn1ct_gen':'get_constraint'
		       (C, 'componentrelation') of
		%% Line 932
		<{'componentrelation',_cor24,_cor25}> when 'true' ->
		    %% Line 933
		    apply 'gen_enc_line'/9
			(Erules, TopType, Cname, Type, Element, Indent, OptOrMand, %% Line 934
										   [[123]|[{'curr','tmpBytes'}|[[44|[95|[125|[32|[61|[32]]]]]]]]], %% Line 934
																		   EncObj)
		%% Line 935
		<_cor26> when 'true' ->
		    %% Line 936
		    apply 'gen_enc_line'/9
			(Erules, TopType, Cname, Type, Element, Indent, OptOrMand, %% Line 937
										   [[123]|[{'curr','encBytes'}|[[44]|[{'curr','encLen'}|[[125|[32|[61|[32]]]]]]]]], %% Line 938
																				    EncObj)
	      end
	  %% Line 948
	  <Erules,TopType,Cname,Type,Element,Indent,OptOrMand,EncObj>
	      when %% Line 949
		call 'erlang':'is_list'
		    (Element) ->
	      %% Line 950
	      apply 'gen_enc_line'/9
		  (Erules, TopType, Cname, Type, Element, Indent, OptOrMand, %% Line 951
									     [[123]|[{'curr','encBytes'}|[[44]|[{'curr','encLen'}|[[125|[32|[61|[32]]]]]]]]], %% Line 951
																			      EncObj)
	  ( <_cor16,_cor15,_cor14,_cor13,_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14,_cor13,_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'gen_enc_line',8}}] )
	    -| ['compiler_generated'] )
	end
'gen_enc_line'/9 =
    %% Line 953
    fun (_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Erules,TopType,Cname,Type,Element,Indent,OptOrMand,Assign,EncObj>
	      when %% Line 954
		call 'erlang':'is_list'
		    (Element) ->
	      let <IndDeep> =
		  %% Line 955
		  apply 'indent'/1
		      (Indent)
	      in  let <_cor24> =
		      %% Line 956
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor14) ->
				    case _cor14 of
				      <[%% Line 960
					X|_cor11]> when 'true' ->
					  %% Line 957
					  ( case X of
					      ( <( {'tag',_rec54,_cor57,_cor58,_cor59}
						   -| ['compiler_generated'] )> when 'true' ->
						    let <_cor21> =
							call 'asn1ct_gen_ber_bin_v2':'decode_class'
							    (_rec54)
						    in  let <_cor22> =
							    call 'asn1ct_gen_ber_bin_v2':'encode_tag_val'
								(_cor21, _cor59, _cor57)
							in  let <_cor23> =
								%% Line 960
								apply 'lc$^0'/1
								    (_cor11)
							    in  ( [_cor22|_cor23]
								  -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_cor60> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','tag'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor14> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor14})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  %% Line 960
			    ( case Type of
				( <( {'type',_rec53,_cor69,_cor70,_cor71,_cor72}
				     -| ['compiler_generated'] )> when 'true' ->
				      apply 'lc$^0'/1
					  (_rec53)
				  -| ['compiler_generated'] )
				( <_cor73> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','type'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			-| ['list_comprehension'] )
		  in  let <Tag> =
			  %% Line 956
			  call 'lists':'reverse'
			      (_cor24)
		      in  %% Line 961
			  ( case Type of
			      ( <( {'type',_cor74,_rec57,_cor75,_cor76,_cor77}
				   -| ['compiler_generated'] )> when 'true' ->
				    let <InnerType> =
					call 'asn1ct_gen':'get_inner'
					    (_rec57)
				    in  let <WhatKind> =
					    %% Line 962
					    call 'asn1ct_gen':'type'
						(InnerType)
					in  do  %% Line 963
						call 'asn1ct_gen':'emit'
						    (IndDeep)
						do  %% Line 964
						    call 'asn1ct_gen':'emit'
							(Assign)
						    do  %% Line 965
							apply 'gen_optormand_case'/6
							    (OptOrMand, Erules, TopType, Cname, Type, Element)
							let <_cor32> =
							    %% Line 966
							    call 'asn1ct_gen':'get_constraint'
								(_cor75, %% Line 967
									 'componentrelation')
							in  do  %% Line 966
								case <_cor74,_rec57,_cor75,_cor76,_cor77,_cor32> of
								  %% Line 970
								  <_cor84,{'ObjectClassFieldType',_cor85,_cor86,%% Line 971
														RefedFieldName,{'typefield',_cor87}},_cor88,_cor89,_cor90,%% Line 972
																					  {'componentrelation',_cor91,_cor92}> when 'true' ->
								      %% Line 973
								      case EncObj of
									<{_X_LeadingAttrName,Fun}> when 'true' ->
									    %% Line 974
									    case RefedFieldName of
									      %% Line 975
									      <{Name,RestFieldNames}>
										  when call 'erlang':'is_atom'
											(Name) ->
										  do  %% Line 976
										      case OptOrMand of
											%% Line 977
											<'mandatory'> when 'true' ->
											    'ok'
											%% Line 978
											<_cor93> when 'true' ->
											    %% Line 980
											    call 'asn1ct_gen':'emit'
												([[123]|[{'curr','tmpBytes'}|[[44|[95|[32|[125|[32|[61|[32]]]]]]]]]])
										      end
										      do  %% Line 983
											  call 'asn1ct_gen':'emit'
											      ([Fun|[[40]|[{'asis',Name}|[[44|[32]]|[Element|[[44|[32]]|%% Line 984
																			[{'asis',RestFieldNames}|[[41|[44]]|['nl']]]]]]]]])
											  do  %% Line 985
											      call 'asn1ct_gen':'emit'
												  (IndDeep)
											      %% Line 986
											      case OptOrMand of
												%% Line 987
												<'mandatory'> when 'true' ->
												    %% Line 988
												    call 'asn1ct_gen':'emit'
													([[123]|[{'curr','encBytes'}|[[44]|[{'curr','encLen'}|%% Line 989
																			      [[125|[32|[61|[32]]]]|%% Line 990
																						    [{'call','ber','encode_open_type',%% Line 991
																										      [{'curr','tmpBytes'}|[{'asis',Tag}|[]]]}|%% Line 991
																															       ['nl']]]]]]])
												%% Line 992
												<_cor94> when 'true' ->
												    %% Line 993
												    call 'asn1ct_gen':'emit'
													([{'call','ber','encode_open_type',%% Line 994
																	   [{'curr','tmpBytes'}|[{'asis',Tag}|[]]]}|%% Line 994
																						    []])
											      end
									      %% Line 996
									      <Err> when 'true' ->
										  %% Line 997
										  call 'erlang':'throw'
										      ({'asn1',{'internal error',Err}})
									    end
									( <_cor33> when 'true' ->
									      primop 'match_fail'
										  ({'badmatch',_cor33})
									  -| ['compiler_generated'] )
								      end
								  %% Line 999
								  <_fol470,_fol471,_fol472,_fol473,_fol474,_fol460> when 'true' ->
								      %% Line 1000
								      case WhatKind of
									%% Line 1001
									<{'primitive','bif'}> when 'true' ->
									    %% Line 1002
									    call 'asn1ct_gen_ber_bin_v2':'gen_encode_prim'
										('ber', Type, {'asis',Tag}, %% Line 1003
													    Element)
									%% Line 1004
									<'ASN1_OPEN_TYPE'> when 'true' ->
									    %% Line 1005
									    case _rec57 of
									      %% Line 1006
									      <{'ObjectClassFieldType',_cor101,_cor102,_cor103,_cor104}> when 'true' ->
										  %% Line 1007
										  call 'asn1ct_gen_ber_bin_v2':'gen_encode_prim'
										      ('ber', {'type',[],'ASN1_OPEN_TYPE',[],[],'no'}, {'asis',Tag}, Element)
									      %% Line 1008
									      <_cor105> when 'true' ->
										  %% Line 1009
										  call 'asn1ct_gen_ber_bin_v2':'gen_encode_prim'
										      ('ber', Type, %% Line 1010
												    {'asis',Tag}, %% Line 1011
														  Element)
									    end
									%% Line 1013
									<_cor106> when 'true' ->
									    %% Line 1014
									    case %% Line 1015
										 apply 'mkfuncname'/5
										     (TopType, Cname, WhatKind, [101|[110|[99|[95]]]], []) of
									      <{EncFunName,_X_EncMod,_X_EncFun}> when 'true' ->
										  %% Line 1016
										  case <WhatKind,_cor76,EncObj> of
										    %% Line 1017
										    <{'constructed','bif'},[{'objfun',_cor112}|_X_R],{_cor113,Fun}> when 'true' ->
											%% Line 1018
											call 'asn1ct_gen':'emit'
											    ([EncFunName|[[40]|[Element|[[44|[32]]|[{'asis',Tag}|%% Line 1019
																		 [[44|[32]]|[Fun|[[41]]]]]]]]])
										    %% Line 1020
										    <_fol463,_fol464,_fol465> when 'true' ->
											%% Line 1021
											call 'asn1ct_gen':'emit'
											    ([EncFunName|[[40]|[Element|[[44|[32]]|[{'asis',Tag}|[[41]]]]]]])
										  end
									      ( <_cor40> when 'true' ->
										    primop 'match_fail'
											({'badmatch',_cor40})
										-| ['compiler_generated'] )
									    end
								      end
								end
								%% Line 1025
								case OptOrMand of
								  %% Line 1026
								  <'mandatory'> when 'true' ->
								      'true'
								  %% Line 1027
								  <_cor115> when 'true' ->
								      let <_cor46> =
									  %% Line 1028
									  apply 'indent'/1
									      (7)
								      in  %% Line 1028
									  call 'asn1ct_gen':'emit'
									      (['nl'|[_cor46|[[101|[110|[100]]]]]])
								end
				-| ['compiler_generated'] )
			      ( <_cor78> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','type'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
	  ( <_cor56,_cor55,_cor54,_cor53,_cor52,_cor51,_cor50,_cor49,_cor48> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor56,_cor55,_cor54,_cor53,_cor52,_cor51,_cor50,_cor49,_cor48})
		  -| [{'function_name',{'gen_enc_line',9}}] )
	    -| ['compiler_generated'] )
	end
'gen_optormand_case'/6 =
    %% Line 1031
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <'mandatory',_X_Erules,_X_TopType,_X_Cname,_X_Type,_X_Element> when 'true' ->
	      %% Line 1032
	      'ok'
	  %% Line 1033
	  <'OPTIONAL',Erules,_X_TopType,_X_Cname,_X_Type,Element> when 'true' ->
	      do  %% Line 1034
		  call 'asn1ct_gen':'emit'
		      ([[32|[99|[97|[115|[101|[32]]]]]]|[Element|[[32|[111|[102]]]|['nl']]]])
		  let <_cor6> =
		      %% Line 1035
		      apply 'indent'/1
			  (9)
		  in  let <_cor7> =
			  %% Line 1036
			  apply 'empty_lb'/1
			      (Erules)
		      in  do  %% Line 1035
			      call 'asn1ct_gen':'emit'
				  ([_cor6|[[97|[115|[110|[49|[95|[78|[79|[86|[65|[76|[85|[69|[32|[45|[62|[32|[123]]]]]]]]]]]]]]]]]|%% Line 1036
																   [_cor7|[[44|[48|[125|[59]]]]|['nl']]]]])
			      let <_cor8> =
				  %% Line 1037
				  apply 'indent'/1
				      (9)
			      in  let <_cor9> =
				      %% Line 1037
				      apply 'indent'/1
					  (12)
				  in  %% Line 1037
				      call 'asn1ct_gen':'emit'
					  ([_cor8|[[95|[32|[45|[62]]]]|['nl'|[_cor9|[]]]]])
	  %% Line 1038
	  <{'DEFAULT',DefaultValue},Erules,_X_TopType,%% Line 1039
						      _X_Cname,%% Line 1039
							       Type,%% Line 1039
								    Element> when 'true' ->
	      let <CurrMod> =
		  %% Line 1040
		  call 'erlang':'get'
		      ('currmod')
	      in  let <_cor12> =
		      catch
			  let <_cor11> =
			      %% Line 1041
			      call 'erlang':'get'
				  ('encoding_options')
			  in  %% Line 1041
			      call 'lists':'member'
				  ('der', _cor11)
		  in  %% Line 1041
		      case _cor12 of
			%% Line 1042
			<'true'> when 'true' ->
			    %% Line 1043
			    call 'asn1ct_gen_check':'emit'
				(Type, DefaultValue, Element)
			%% Line 1044
			<_cor29> when 'true' ->
			    do  %% Line 1045
				call 'asn1ct_gen':'emit'
				    ([[32|[99|[97|[115|[101|[32]]]]]]|[Element|[[32|[111|[102]]]|['nl']]]])
				let <_cor13> =
				    %% Line 1046
				    apply 'indent'/1
					(9)
				in  let <_cor14> =
					%% Line 1047
					apply 'empty_lb'/1
					    (Erules)
				    in  do  %% Line 1046
					    call 'asn1ct_gen':'emit'
						([_cor13|[[97|[115|[110|[49|[95|[68|[69|[70|[65|[85|[76|[84|[32|[45|[62|[32|[123]]]]]]]]]]]]]]]]]|%% Line 1047
																		  [_cor14|%% Line 1048
																			  [[44|[48|[125|[59]]]]|['nl']]]]])
					    do  %% Line 1049
						case DefaultValue of
						  %% Line 1050
						  <{'Externalvaluereference',_cor30,_cor31,%% Line 1051
											   V}>
						      when call 'erlang':'=:='
							    (_cor31,
							     CurrMod) ->
						      let <_cor15> =
							  %% Line 1052
							  apply 'indent'/1
							      (9)
						      in  let <_cor16> =
							      %% Line 1053
							      apply 'empty_lb'/1
								  (Erules)
							  in  %% Line 1052
							      call 'asn1ct_gen':'emit'
								  ([_cor15|[[63]|[{'asis',V}|[[32|[45|[62|[32|[123]]]]]|%% Line 1053
															[_cor16|[[44|[48|[125|[59]]]]|['nl']]]]]]])
						  %% Line 1054
						  <_cor32> when 'true' ->
						      let <_cor17> =
							  %% Line 1055
							  apply 'indent'/1
							      (9)
						      in  let <_cor18> =
							      %% Line 1057
							      apply 'empty_lb'/1
								  (Erules)
							  in  %% Line 1055
							      call 'asn1ct_gen':'emit'
								  ([_cor17|[{'asis',%% Line 1056
										    DefaultValue}|%% Line 1056
												  [[32|[45|[62|[32|[123]]]]]|%% Line 1057
															     [_cor18|[[44|[48|[125|[59]]]]|['nl']]]]]])
						end
						let <_cor20> =
						    %% Line 1059
						    apply 'indent'/1
							(9)
						in  let <_cor21> =
							%% Line 1059
							apply 'indent'/1
							    (12)
						    in  %% Line 1059
							call 'asn1ct_gen':'emit'
							    ([_cor20|[[95|[32|[45|[62]]]]|['nl'|[_cor21|[]]]]])
		      end
	  ( <_cor28,_cor27,_cor26,_cor25,_cor24,_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor28,_cor27,_cor26,_cor25,_cor24,_cor23})
		  -| [{'function_name',{'gen_optormand_case',6}}] )
	    -| ['compiler_generated'] )
	end
'gen_dec_line'/7 =
    %% Line 1063
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 1064
	    call 'asn1ct_name':'curr'
		('v')
	in  let <BytesVar> =
		%% Line 1064
		call 'asn1ct_gen':'mk_var'
		    (_cor7)
	    in  let <_cor22> =
		    %% Line 1066
		    ( letrec
			  'lc$^0'/1 =
			      fun (_cor13) ->
				  case _cor13 of
				    <[%% Line 1067
				      X|_cor10]> when 'true' ->
					( case X of
					    ( <( {'tag',_rec62,_cor83,_cor84,_cor85}
						 -| ['compiler_generated'] )> when 'true' ->
						  let <_cor18> =
						      call 'asn1ct_gen_ber_bin_v2':'decode_class'
							  (_rec62)
						  in  let <_cor19> =
							  call 'erlang':'bsl'
							      (_cor18, 10)
						      in  let <_cor20> =
							      call 'erlang':'+'
								  (_cor19, _cor83)
							  in  let <_cor21> =
								  %% Line 1067
								  apply 'lc$^0'/1
								      (_cor10)
							      in  ( [_cor20|_cor21]
								    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					    ( <_cor86> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','tag'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    <[]> when 'true' ->
					[]
				    ( <_cor13> when 'true' ->
					  ( primop 'match_fail'
						({'function_clause',_cor13})
					    -| [{'function_name',{'lc$^0',1}}] )
				      -| ['compiler_generated'] )
				  end
		      in  %% Line 1067
			  ( case _cor2 of
			      ( <( {'type',_rec61,_cor91,_cor92,_cor93,_cor94}
				   -| ['compiler_generated'] )> when 'true' ->
				    apply 'lc$^0'/1
					(_rec61)
				-| ['compiler_generated'] )
			      ( <_cor95> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','type'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      -| ['list_comprehension'] )
		in  let <_cor31> =
			%% Line 1069
			( letrec
			      'lc$^1'/1 =
				  fun (_cor26) ->
				      case _cor26 of
					<[%% Line 1070
					  {Class,Number}|_cor25]> when 'true' ->
					    let <_cor27> =
						call 'asn1ct_gen_ber_bin_v2':'decode_class'
						    (Class)
					    in  let <_cor28> =
						    call 'erlang':'bsl'
							(_cor27, 10)
						in  let <_cor29> =
							call 'erlang':'+'
							    (_cor28, Number)
						    in  let <_cor30> =
							    %% Line 1070
							    apply 'lc$^1'/1
								(_cor25)
							in  ( [_cor29|_cor30]
							      -| ['compiler_generated'] )
					( <[_cor24|_cor25]> when 'true' ->
					      %% Line 1070
					      apply 'lc$^1'/1
						  (_cor25)
					  -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor26> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor26})
						-| [{'function_name',{'lc$^1',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lc$^1'/1
				  (_cor3)
			  -| ['list_comprehension'] )
		    in  %% Line 1072
			( case _cor2 of
			    ( <( {'type',_cor96,_rec64,_cor97,_cor98,_cor99}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_cor38> =
				      case _rec64 of
					%% Line 1073
					<{'ObjectClassFieldType',_cor101,_cor102,_cor103,OCFTType}> when 'true' ->
					    %% Line 1074
					    OCFTType
					%% Line 1075
					<_cor104> when 'true' ->
					    %% Line 1076
					    call 'asn1ct_gen':'get_inner'
						(_rec64)
				      end
				  in  let <_cor68> =
					  %% Line 1079
					  case _cor1 of
					    %% Line 1080
					    <'mandatory'> when 'true' ->
						%% Line 1081
						apply 'gen_dec_call'/11
						    (_cor38, _cor6, _cor5, _cor4, _cor2, %% Line 1082
											 BytesVar, _cor22, %% Line 1083
													   'mandatory', %% Line 1083
															[44|[32|[109|[97|[110|[100|[97|[116|[111|[114|[121|[44|[32]]]]]]]]]]]]], _cor0, _cor1)
					    %% Line 1084
					    <_cor110> when 'true' ->
						let <FirstTag,RestTag> =
						    %% Line 1086
						    case _cor22 of
						      %% Line 1087
						      <[]> when 'true' ->
							  <_cor31,%% Line 1088
								  []>
						      %% Line 1089
						      <[Ft|Rt]> when 'true' ->
							  %% Line 1090
							  <Ft,Rt>
						      ( <_cor40> when 'true' ->
							    primop 'match_fail'
								({'case_clause',_cor40})
							-| ['compiler_generated'] )
						    end
						in  do  %% Line 1092
							call 'asn1ct_gen':'emit'
							    ([[99|[97|[115|[101|[32]]]]]|[{'prev','tlv'}|[[32|[111|[102]]]|['nl']]]])
							let <_cor60> =
							    %% Line 1094
							    case _cor22 of
							      %% Line 1095
							      <[]>
								  when try
									let <_cor43> =
									    call 'erlang':'length'
										(_cor31)
									in  call 'erlang':'>'
										(_cor43, 0)
								    of <Try> ->
									Try
								    catch <T,R> ->
									'false' ->
								  let <Fcases> =
								      %% Line 1097
								      ( fun (_cor46) ->
									    do  %% Line 1098
										call 'asn1ct_gen':'emit'
										    ([[91]|[{'curr','v'}|[[32|[61|[32|[123]]]]|[{'asis',_cor46}|%% Line 1099
																		[[44|[95|[125|[124|[84|[101|[109|[112]]]]]]]]|[{'curr','tlv'}|[[93|[32|[45|[62]]]]|['nl']]]]]]]])
										let <_cor44> =
										    %% Line 1102
										    apply 'indent'/1
											(4)
										in  do  %% Line 1102
											call 'asn1ct_gen':'emit'
											    ([_cor44|[[123]]])
											let <Pdec> =
											    %% Line 1104
											    apply 'gen_dec_call'/11
												(_cor38, _cor6, _cor5, _cor4, _cor2, %% Line 1106
																     BytesVar, %% Line 1106
																	       RestTag, %% Line 1107
																			'mandatory', %% Line 1108
																				     [44|[32|[109|[97|[110|[100|[97|[116|[111|[114|[121|[44|[32]]]]]]]]]]]]], _cor0, _cor1)
											in  do  %% Line 1111
												call 'asn1ct_gen':'emit'
												    ([[44|[32|[84|[101|[109|[112]]]]]]|[{'curr','tlv'}|[[125]]]])
												do  %% Line 1112
												    call 'asn1ct_gen':'emit'
													([[59]|['nl']])
												    %% Line 1113
												    Pdec
									-| [{'id',{0,0,'-gen_dec_line/7-fun-0-'}}] )
								  in  let <_cor54> =
									  %% Line 1115
									  ( letrec
										'lc$^2'/1 =
										    fun (_cor51) ->
											case _cor51 of
											  <[TmpTag|_cor50]> when 'true' ->
											      let <_cor52> =
												  apply Fcases
												      (TmpTag)
											      in  let <_cor53> =
												      apply 'lc$^2'/1
													  (_cor50)
												  in  ( [_cor52|_cor53]
													-| ['compiler_generated'] )
											  <[]> when 'true' ->
											      []
											  ( <_cor51> when 'true' ->
												( primop 'match_fail'
												      ({'function_clause',_cor51})
												  -| [{'function_name',{'lc$^2',1}}] )
											    -| ['compiler_generated'] )
											end
									    in  apply 'lc$^2'/1
										    (FirstTag)
									    -| ['list_comprehension'] )
								      in  %% Line 1115
									  call 'erlang':'hd'
									      (_cor54)
							      %% Line 1117
							      <[]> when 'true' ->
								  do  %% Line 1118
								      call 'asn1ct_gen':'emit'
									  ([[91]|[{'curr','v'}|[[124|[84|[101|[109|[112]]]]]|[{'curr','tlv'}|[[93|[32|[45|[62]]]]|['nl']]]]]])
								      let <_cor55> =
									  %% Line 1119
									  apply 'indent'/1
									      (4)
								      in  do  %% Line 1119
									      call 'asn1ct_gen':'emit'
										  ([_cor55|[[123]]])
									      let <Pdec> =
										  %% Line 1121
										  apply 'gen_dec_call'/11
										      (_cor38, _cor6, _cor5, _cor4, _cor2, %% Line 1122
															   BytesVar, %% Line 1122
																     RestTag, %% Line 1122
																	      'mandatory', %% Line 1123
																			   [44|[32|[109|[97|[110|[100|[97|[116|[111|[114|[121|[44|[32]]]]]]]]]]]]], _cor0, _cor1)
									      in  do  %% Line 1126
										      call 'asn1ct_gen':'emit'
											  ([[44|[32|[84|[101|[109|[112]]]]]]|[{'curr','tlv'}|[[125]]]])
										      do  %% Line 1127
											  call 'asn1ct_gen':'emit'
											      ([[59]|['nl']])
											  %% Line 1128
											  Pdec
							      %% Line 1130
							      <_cor111> when 'true' ->
								  do  %% Line 1131
								      call 'asn1ct_gen':'emit'
									  ([[91|[123]]|[{'asis',FirstTag}|%% Line 1132
													  [[44]|[{'curr','v'}|[[125|[124|[84|[101|[109|[112]]]]]]|[{'curr','tlv'}|[[93|[32|[45|[62]]]]|['nl']]]]]]]])
								      let <_cor57> =
									  %% Line 1135
									  apply 'indent'/1
									      (4)
								      in  do  %% Line 1135
									      call 'asn1ct_gen':'emit'
										  ([_cor57|[[123]]])
									      let <Pdec> =
										  %% Line 1137
										  apply 'gen_dec_call'/11
										      (_cor38, _cor6, _cor5, _cor4, _cor2, %% Line 1138
															   BytesVar, %% Line 1138
																     RestTag, %% Line 1138
																	      'mandatory', %% Line 1139
																			   [44|[32|[109|[97|[110|[100|[97|[116|[111|[114|[121|[44|[32]]]]]]]]]]]]], _cor0, _cor1)
									      in  do  %% Line 1142
										      call 'asn1ct_gen':'emit'
											  ([[44|[32|[84|[101|[109|[112]]]]]]|[{'curr','tlv'}|[[125]]]])
										      do  %% Line 1143
											  call 'asn1ct_gen':'emit'
											      ([[59]|['nl']])
											  %% Line 1144
											  Pdec
							    end
							in  let <_cor62> =
								%% Line 1147
								apply 'indent'/1
								    (4)
							    in  do  %% Line 1147
								    call 'asn1ct_gen':'emit'
									([_cor62|[[95|[32|[45|[62]]]]|['nl']]])
								    do  %% Line 1148
									case _cor1 of
									  %% Line 1149
									  <{'DEFAULT',Def0}> when 'true' ->
									      let <Def> =
										  %% Line 1150
										  call 'asn1ct_gen':'conform_value'
										      (_cor2, Def0)
									      in  let <_cor64> =
										      %% Line 1151
										      apply 'indent'/1
											  (8)
										  in  %% Line 1151
										      call 'asn1ct_gen':'emit'
											  ([_cor64|[[123]|[{'asis',Def}|[[44]|[{'prev','tlv'}|[[125]|['nl']]]]]]])
									  %% Line 1152
									  <'OPTIONAL'> when 'true' ->
									      let <_cor65> =
										  %% Line 1153
										  apply 'indent'/1
										      (8)
									      in  %% Line 1153
										  call 'asn1ct_gen':'emit'
										      ([_cor65|[[123|[32|[97|[115|[110|[49|[95|[78|[79|[86|[65|[76|[85|[69|[44|[32]]]]]]]]]]]]]]]]|[{'prev','tlv'}|[[125]|['nl']]]]])
									  ( <_cor66> when 'true' ->
										primop 'match_fail'
										    ({'case_clause',_cor66})
									    -| ['compiler_generated'] )
									end
									do  %% Line 1155
									    call 'asn1ct_gen':'emit'
										([[101|[110|[100]]]])
									    _cor60
					  end
				      in  %% Line 1158
					  case _cor0 of
					    %% Line 1159
					    <{_cor112,ObjSet}>
						when call 'erlang':'=:='
						      (_cor112,
						       _cor4) ->
						let <_cor71> =
						    %% Line 1162
						    case ObjSet of
						      %% Line 1163
						      <{'deep',OSName,_cor113,_cor114}> when 'true' ->
							  %% Line 1164
							  OSName
						      %% Line 1165
						      <_cor115> when 'true' ->
							  ObjSet
						    end
						in  let <_cor73> =
							%% Line 1167
							call 'asn1ct_name':'curr'
							    ('term')
						    in  let <_cor74> =
							    %% Line 1167
							    call 'asn1ct_gen':'mk_var'
								(_cor73)
							in  %% Line 1167
							    {[{_cor71,_cor4,_cor74}|[]],_cor68}
					    %% Line 1169
					    <_cor116> when 'true' ->
						{[],_cor68}
					  end
			      -| ['compiler_generated'] )
			    ( <_cor100> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','type'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
'gen_dec_call'/11 =
    %% Line 1172
    fun (_cor10,_cor9,_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor10,_cor9,_cor8,_cor7,_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'typefield',_cor51},_cor52,_cor53,_X_Cname,Type,BytesVar,Tag,_cor54,_cor55,'false',_cor56> when 'true' ->
	      do  %% Line 1174
		  call 'asn1ct_name':'new'
		      ('reason')
		  do  %% Line 1175
		      call 'asn1ct_name':'new'
			  ('opendec')
		      do  %% Line 1176
			  call 'asn1ct_name':'new'
			      ('tmpterm')
			  do  %% Line 1177
			      call 'asn1ct_name':'new'
				  ('tmptlv')
			      %% Line 1180
			      ( case Type of
				  ( <( {'type',_cor57,_rec67,_cor58,_cor59,_cor60}
				       -| ['compiler_generated'] )> when 'true' ->
					( case _rec67 of
					    ( <( {'ObjectClassFieldType',_cor62,_cor63,_rec66,_cor64}
						 -| ['compiler_generated'] )> when 'true' ->
						  case _rec66 of
						    <{FirstPFName,RestPFName}> when 'true' ->
							let <_cor16> =
							    %% Line 1181
							    apply 'indent'/1
								(6)
							in  do  %% Line 1181
								call 'asn1ct_gen':'emit'
								    (['nl'|[_cor16|[[98|[101|[103|[105|[110]]]]]|['nl']]]])
								let <_cor17> =
								    %% Line 1182
								    apply 'indent'/1
									(9)
								in  do  %% Line 1182
									call 'asn1ct_gen':'emit'
									    ([_cor17|[{'curr','tmptlv'}|[[32|[61|[32]]]|%% Line 1183
															[{'call','ber','decode_open_type',%% Line 1184
																			  [BytesVar|[{'asis',Tag}|[]]]}|%% Line 1184
																							['com'|['nl']]]]]])
									let <_cor18> =
									    %% Line 1186
									    apply 'indent'/1
										(9)
									in  do  %% Line 1186
										call 'asn1ct_gen':'emit'
										    ([_cor18|[[99|[97|[115|[101|[32|[40|[99|[97|[116|[99|[104|[32|[79|[98|[106|[70|[117|[110|[40]]]]]]]]]]]]]]]]]]]|[{'asis',FirstPFName}|%% Line 1187
																											  [[44|[32]]|[{'curr','tmptlv'}|[[44|[32]]|[{'asis',RestPFName}|%% Line 1188
																																			[[41|[41|[32|[111|[102]]]]]|['nl']]]]]]]]])
										let <_cor19> =
										    %% Line 1189
										    apply 'indent'/1
											(12)
										in  do  %% Line 1189
											call 'asn1ct_gen':'emit'
											    ([_cor19|[[123|[39|[69|[88|[73|[84|[39|[44]]]]]]]]|[{'curr','reason'}|[[125|[32|[45|[62]]]]|['nl']]]]])
											let <_cor20> =
											    %% Line 1190
											    apply 'indent'/1
												(15)
											in  do  %% Line 1190
												call 'asn1ct_gen':'emit'
												    ([_cor20|[[101|[120|[105|[116|[40|[123|[39|[84|[121|[112|[101|[32|[110|[111|[116|[32]]]]]]]]]]]]]]]]|[[99|[111|[109|[112|[97|[116|[105|[98|[108|[101|[32|[119|[105|[116|[104|[32|[116|[97|[98|[108|[101|[32|[99|[111|[110|[115|[116|[114|[97|[105|[110|[116|[39|[44|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[{'curr','reason'}|[[125|[41|[59]]]|['nl']]]]]])
												let <_cor21> =
												    %% Line 1192
												    apply 'indent'/1
													(12)
												in  do  %% Line 1192
													call 'asn1ct_gen':'emit'
													    ([_cor21|[{'curr','tmpterm'}|[[32|[45|[62]]]|['nl']]]])
													let <_cor22> =
													    %% Line 1193
													    apply 'indent'/1
														(15)
													in  do  %% Line 1193
														call 'asn1ct_gen':'emit'
														    ([_cor22|[{'curr','tmpterm'}|['nl']]])
														let <_cor23> =
														    %% Line 1194
														    apply 'indent'/1
															(9)
														in  let <_cor24> =
															%% Line 1194
															apply 'indent'/1
															    (6)
														    in  do  %% Line 1194
															    call 'asn1ct_gen':'emit'
																([_cor23|[[101|[110|[100]]]|['nl'|[_cor24|[[101|[110|[100]]]|['nl']]]]]])
															    %% Line 1195
															    []
						    ( <_cor15> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor15})
						      -| ['compiler_generated'] )
						  end
					      -| ['compiler_generated'] )
					    ( <_cor65> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','ObjectClassFieldType'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  ( <_cor61> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','type'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
	  %% Line 1196
	  <{'typefield',_cor66},_cor67,_cor68,Cname,Type,BytesVar,Tag,_cor69,_cor70,_X_DecObjInf,OptOrMandComp> when 'true' ->
	      do  %% Line 1197
		  apply 'call'/2
		      ('decode_open_type', [BytesVar|[{'asis',Tag}|[]]])
		  %% Line 1201
		  ( case Type of
		      ( <( {'type',_cor71,_rec69,_cor72,_cor73,_cor74}
			   -| ['compiler_generated'] )> when 'true' ->
			    ( case _rec69 of
				( <( {'ObjectClassFieldType',_cor76,_cor77,_rec68,_cor78}
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_cor32> =
					  %% Line 1202
					  call 'asn1ct_name':'curr'
					      ('term')
				      in  let <_cor33> =
					      %% Line 1202
					      call 'asn1ct_gen':'mk_var'
						  (_cor32)
					  in  let <_cor30> =
						  %% Line 1203
						  call 'asn1ct_name':'curr'
						      ('tmpterm')
					      in  let <_cor31> =
						      %% Line 1203
						      call 'asn1ct_gen':'mk_var'
							  (_cor30)
						  in  %% Line 1202
						      [{Cname,_rec68,_cor33,_cor31,%% Line 1203
										   Tag,%% Line 1203
										       OptOrMandComp}|%% Line 1203
												      []]
				  -| ['compiler_generated'] )
				( <_cor79> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','ObjectClassFieldType'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		      ( <_cor75> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','type'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 1204
	  <InnerType,_X_Erules,TopType,Cname,Type,BytesVar,%% Line 1205
							   Tag,%% Line 1205
							       _X_PrimOptOrMand,%% Line 1205
										_X_OptOrMand,%% Line 1205
											     DecObjInf,_cor80> when 'true' ->
	      let <WhatKind> =
		  %% Line 1206
		  call 'asn1ct_gen':'type'
		      (InnerType)
	      in  do  %% Line 1207
		      apply 'gen_dec_call1'/7
			  (WhatKind, InnerType, TopType, Cname, %% Line 1208
								Type, %% Line 1208
								      BytesVar, %% Line 1208
										Tag)
		      do  %% Line 1209
			  case DecObjInf of
			    %% Line 1210
			    <{_cor81,{_cor82,OSet,_X_UniqueFName,ValIndex}}>
				when call 'erlang':'=:='
				      (_cor81,
				       Cname) ->
				let <_cor35> =
				    %% Line 1211
				    call 'asn1ct_name':'curr'
					('term')
				in  let <Term> =
					%% Line 1211
					call 'asn1ct_gen':'mk_var'
					    (_cor35)
				    in  let <ValueMatch> =
					    %% Line 1212
					    apply 'value_match'/2
						(ValIndex, Term)
					in  %% Line 1213
					    case OSet of
					      <{ObjSetMod,ObjSetName}> when 'true' ->
						  %% Line 1214
						  call 'asn1ct_gen':'emit'
						      ([[44]|['nl'|[[79|[98|[106|[70|[117|[110|[32|[61|[32]]]]]]]]]|[{'asis',ObjSetMod}|[[58|[39|[103|[101|[116|[100|[101|[99|[95]]]]]]]]]|[ObjSetName|%% Line 1215
																								       [[39|[40]]|[ValueMatch|[[41]]]]]]]]]])
					      ( <_cor38> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_cor38})
						-| ['compiler_generated'] )
					    end
			    %% Line 1216
			    <_cor83> when 'true' ->
				'ok'
			  end
			  %% Line 1219
			  []
	end
'gen_dec_call1'/7 =
    %% Line 1221
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'primitive','bif'},InnerType,TopType,Cname,%% Line 1222
						       Type,%% Line 1222
							    BytesVar,%% Line 1222
								     Tag> when 'true' ->
	      let <_cor7> =
		  %% Line 1223
		  call 'asn1ct':'get_gen_state_field'
		      ('namelist')
	      in  %% Line 1223
		  case <_cor7,InnerType> of
		    %% Line 1224
		    <[{_cor47,'undecoded'}|Rest],_cor48>
			when call 'erlang':'=:='
			      (_cor47,
			       Cname) ->
			do  %% Line 1225
			    call 'asn1ct':'add_generated_refed_func'
				({[Cname|TopType],'undecoded',%% Line 1226
							      Tag,%% Line 1226
								  Type})
			    do  %% Line 1227
				call 'asn1ct':'update_gen_state'
				    ('namelist', Rest)
				let <_cor8> =
				    %% Line 1228
				    call 'asn1ct_gen':'list2name'
					([Cname|TopType])
				in  %% Line 1228
				    call 'asn1ct_gen':'emit'
					([[123|[39]]|[_cor8|[[39|[44]]|%% Line 1229
								       [BytesVar|[[125]]]]]])
		    %% Line 1230
		    <_fol536,_fol537> when 'true' ->
			%% Line 1231
			call 'asn1ct_gen_ber_bin_v2':'gen_dec_prim'
			    (Type, BytesVar, Tag)
		  end
	  %% Line 1233
	  <'ASN1_OPEN_TYPE',_X_InnerType,TopType,Cname,%% Line 1234
						       Type,%% Line 1234
							    BytesVar,%% Line 1234
								     Tag> when 'true' ->
	      let <_cor12> =
		  %% Line 1235
		  call 'asn1ct':'get_gen_state_field'
		      ('namelist')
	      in  %% Line 1235
		  ( case Type of
		      ( <( {'type',_cor50,_rec70,_cor51,_cor52,_cor53}
			   -| ['compiler_generated'] )> when 'true' ->
			    case <_cor12,_rec70> of
			      %% Line 1236
			      <[{_cor55,'undecoded'}|Rest],_cor56>
				  when call 'erlang':'=:='
					(_cor55,
					 Cname) ->
				  do  %% Line 1237
				      call 'asn1ct':'add_generated_refed_func'
					  ({[Cname|TopType],'undecoded',%% Line 1238
									Tag,%% Line 1238
									    Type})
				      do  %% Line 1239
					  call 'asn1ct':'update_gen_state'
					      ('namelist', Rest)
					  let <_cor13> =
					      %% Line 1240
					      call 'asn1ct_gen':'list2name'
						  ([Cname|TopType])
					  in  %% Line 1240
					      call 'asn1ct_gen':'emit'
						  ([[123|[39]]|[_cor13|[[39|[44]]|%% Line 1241
										  [BytesVar|[[125]]]]]])
			      %% Line 1242
			      <_cor57,{'ObjectClassFieldType',_cor58,_cor59,_cor60,OpenType}> when 'true' ->
				  %% Line 1243
				  call 'asn1ct_gen_ber_bin_v2':'gen_dec_prim'
				      ({'type',[],OpenType,[],[],'no'}, %% Line 1244
									BytesVar, %% Line 1244
										  Tag)
			      %% Line 1245
			      <_fol540,_fol541> when 'true' ->
				  %% Line 1246
				  call 'asn1ct_gen_ber_bin_v2':'gen_dec_prim'
				      (Type, BytesVar, Tag)
			    end
			-| ['compiler_generated'] )
		      ( <_cor54> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','type'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 1248
	  <WhatKind,_cor62,TopType,Cname,Type,BytesVar,Tag> when 'true' ->
	      %% Line 1249
	      case call 'asn1ct':'get_gen_state_field'
		       ('namelist') of
		%% Line 1250
		<[{_cor63,'undecoded'}|Rest]>
		    when call 'erlang':'=:='
			  (_cor63,
			   Cname) ->
		    do  %% Line 1251
			call 'asn1ct':'add_generated_refed_func'
			    ({[Cname|TopType],'undecoded',%% Line 1252
							  Tag,%% Line 1252
							      Type})
			do  %% Line 1253
			    call 'asn1ct':'update_gen_state'
				('namelist', Rest)
			    let <_cor15> =
				%% Line 1254
				call 'asn1ct_gen':'list2name'
				    ([Cname|TopType])
			    in  %% Line 1254
				call 'asn1ct_gen':'emit'
				    ([[123|[39]]|[_cor15|[[39|[44]]|%% Line 1255
								    [BytesVar|[[125]]]]]])
		%% Line 1256
		<_cor64> when 'true' ->
		    let <EmitDecFunCall> =
			%% Line 1260
			( fun (_cor19) ->
			      %% Line 1261
			      ( case Type of
				  ( <( {'type',_cor65,_cor66,_cor67,_rec71,_cor68}
				       -| ['compiler_generated'] )> when 'true' ->
					case <WhatKind,_rec71> of
					  %% Line 1262
					  <{'constructed','bif'},[{'objfun',_cor70}|_X_Rest]> when 'true' ->
					      %% Line 1263
					      call 'asn1ct_gen':'emit'
						  ([_cor19|[[40]|[BytesVar|[[44|[32]]|[{'asis',Tag}|%% Line 1264
												    [[44|[32|[79|[98|[106|[70|[117|[110|[41]]]]]]]]]]]]]]])
					  %% Line 1265
					  <_fol544,_fol545> when 'true' ->
					      %% Line 1266
					      call 'asn1ct_gen':'emit'
						  ([_cor19|[[40]|[BytesVar|[[44|[32]]|[{'asis',Tag}|[[41]]]]]]])
					end
				    -| ['compiler_generated'] )
				  ( <_cor69> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','type'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  -| [{'id',{0,0,'-gen_dec_call1/7-fun-0-'}}] )
		    in  %% Line 1269
			case call 'asn1ct':'get_gen_state_field'
				 ('namelist') of
			  %% Line 1270
			  <[{_cor72,List}|Rest]>
			      when let <_cor73> =
				    call 'erlang':'=:='
					(_cor72, Cname)
				in  let <_cor74> =
					call 'erlang':'is_list'
					    (List)
				    in  call 'erlang':'and'
					    (_cor73, _cor74) ->
			      let <_cor27> =
				  %% Line 1272
				  case WhatKind of
				    %% Line 1273
				    <{'Externaltypereference',_cor75,_cor76,_cor77}> when 'true' ->
					let <SI> =
					    %% Line 1275
					    call 'asn1ct':'maybe_saved_sindex'
						(WhatKind, List)
					in  let <Saves> = {%% Line 1276
						 WhatKind,%% Line 1276
							  SI,%% Line 1276
							     List}
					    in  do  %% Line 1277
						    call 'asn1ct':'add_tobe_refed_func'
							(Saves)
						    %% Line 1278
						    SI
				    %% Line 1279
				    <_cor78> when 'true' ->
					let <SI> =
					    %% Line 1282
					    call 'asn1ct':'maybe_saved_sindex'
						([Cname|TopType], List)
					in  let <Saves> =
						%% Line 1283
						{[Cname|TopType],SI,List,Type}
					    in  do  %% Line 1284
						    call 'asn1ct':'add_tobe_refed_func'
							(Saves)
						    %% Line 1285
						    SI
				  end
			      in  do  %% Line 1287
				      call 'asn1ct':'update_gen_state'
					  ('namelist', Rest)
				      let <Prefix> =
					  %% Line 1288
					  call 'asn1ct':'get_gen_state_field'
					      ('prefix')
				      in  let <_cor33> =
					      %% Line 1292
					      case _cor27 of
						%% Line 1293
						<I>
						    when let <_cor30> =
							  call 'erlang':'is_integer'
							      (_cor27)
						      in  let <_cor31> =
							      call 'erlang':'>'
								  (_cor27, 0)
							  in  call 'erlang':'and'
								  (_cor30, _cor31) ->
						    call 'lists':'concat'
							([[95]|[I|[]]])
						%% Line 1294
						<_cor79> when 'true' ->
						    []
					      end
					  in  %% Line 1296
					      case %% Line 1297
						   apply 'mkfuncname'/5
						       (TopType, Cname, WhatKind, Prefix, _cor33) of
						<{DecFunName,_cor80,_cor81}> when 'true' ->
						    %% Line 1300
						    apply EmitDecFunCall
							(DecFunName)
						( <_cor35> when 'true' ->
						      primop 'match_fail'
							  ({'badmatch',_cor35})
						  -| ['compiler_generated'] )
					      end
			  %% Line 1301
			  <[{_cor82,'parts'}|Rest]>
			      when call 'erlang':'=:='
				    (_cor82,
				     Cname) ->
			      do  %% Line 1302
				  call 'asn1ct':'update_gen_state'
				      ('namelist', Rest)
				  do  %% Line 1303
				      call 'asn1ct':'get_gen_state_field'
					  ('prefix')
				      do  %% Line 1307
					  call 'asn1ct':'add_generated_refed_func'
					      ({[Cname|TopType],%% Line 1308
								'parts',%% Line 1309
									[],%% Line 1309
									   Type})
					  let <_cor36> =
					      %% Line 1310
					      call 'asn1ct_gen':'list2name'
						  ([Cname|TopType])
					  in  do  %% Line 1310
						  call 'asn1ct_gen':'emit'
						      ([[123|[39]]|[_cor36|[[39|[44]]]]])
						  do  %% Line 1311
						      call 'asn1ct_func':'need'
							  ({'ber','match_tags',2})
						      do  %% Line 1312
							  apply EmitDecFunCall
							      ([109|[97|[116|[99|[104|[95|[116|[97|[103|[115]]]]]]]]]])
							  %% Line 1313
							  call 'asn1ct_gen':'emit'
							      ([125])
			  %% Line 1314
			  <_cor83> when 'true' ->
			      %% Line 1315
			      case %% Line 1316
				   apply 'mkfuncname'/5
				       (TopType, Cname, WhatKind, [100|[101|[99|[95]]]], []) of
				<{DecFunName,_cor84,_cor85}> when 'true' ->
				    %% Line 1317
				    apply EmitDecFunCall
					(DecFunName)
				( <_cor37> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor37})
				  -| ['compiler_generated'] )
			      end
			end
	      end
	end
'indent'/1 =
    %% Line 1334
    fun (_cor0) ->
	%% Line 1335
	call 'lists':'duplicate'
	    (_cor0, 32)
'mkcindexlist'/2 =
    %% Line 1337
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[H|[T1|T]],Sep> when 'true' ->
	      do  %% Line 1338
		  call 'asn1ct_gen':'emit'
		      ([[67|[105|[110|[100|[101|[120]]]]]]|[H|[Sep|[]]]])
		  %% Line 1339
		  apply 'mkcindexlist'/2
		      ([T1|T], Sep)
	  %% Line 1340
	  <[H|T],Sep> when 'true' ->
	      do  %% Line 1341
		  call 'asn1ct_gen':'emit'
		      ([[67|[105|[110|[100|[101|[120]]]]]]|[H|[]]])
		  %% Line 1342
		  apply 'mkcindexlist'/2
		      (T, Sep)
	  %% Line 1343
	  <[],_cor4> when 'true' ->
	      %% Line 1344
	      'true'
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'mkcindexlist',2}}] )
	    -| ['compiler_generated'] )
	end
'mkcindexlist'/1 =
    %% Line 1346
    fun (_cor0) ->
	%% Line 1347
	apply 'mkcindexlist'/2
	    (_cor0, [44|[32]])
'mkvlist'/2 =
    %% Line 1350
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[H|[T1|T]],Sep> when 'true' ->
	      do  %% Line 1351
		  call 'asn1ct_gen':'emit'
		      ([{'var',H}|[Sep|[]]])
		  %% Line 1352
		  apply 'mkvlist'/2
		      ([T1|T], Sep)
	  %% Line 1353
	  <[H|T],Sep> when 'true' ->
	      do  %% Line 1354
		  call 'asn1ct_gen':'emit'
		      ([{'var',H}|[]])
		  %% Line 1355
		  apply 'mkvlist'/2
		      (T, Sep)
	  %% Line 1356
	  <[],_cor4> when 'true' ->
	      %% Line 1357
	      'true'
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'mkvlist',2}}] )
	    -| ['compiler_generated'] )
	end
'mkvlist'/1 =
    %% Line 1359
    fun (_cor0) ->
	%% Line 1360
	apply 'mkvlist'/2
	    (_cor0, [44|[32]])
'mkvplus'/1 =
    %% Line 1362
    fun (_cor0) ->
	%% Line 1363
	apply 'mkvlist'/2
	    (_cor0, [32|[43|[32]]])
'extensible'/1 =
    %% Line 1365
    fun (_cor0) ->
	case _cor0 of
	  <CompList>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 1366
	      'noext'
	  %% Line 1367
	  <{RootList,ExtList}> when 'true' ->
	      let <_cor2> =
		  %% Line 1368
		  call 'erlang':'length'
		      (RootList)
	      in  let <_cor3> =
		      %% Line 1368
		      call 'erlang':'+'
			  (_cor2, 1)
		  in  let <_cor1> =
			  %% Line 1368
			  call 'erlang':'length'
			      (ExtList)
		      in  %% Line 1368
			  {'ext',_cor3,_cor1}
	  %% Line 1369
	  <{_X_Rl1,_X_Ext,_X_Rl2}> when 'true' ->
	      %% Line 1370
	      'extensible'
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'extensible',1}}] )
	    -| ['compiler_generated'] )
	end
'filter_complist'/1 =
    %% Line 1375
    fun (_cor0) ->
	case _cor0 of
	  <CompList>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      let <_cor3> =
		  %% Line 1376
		  ( fun (_cor1) ->
			case _cor1 of
			  <{'ExtensionAdditionGroup',_cor7}> when 'true' ->
			      %% Line 1377
			      'false'
			  %% Line 1378
			  <'ExtensionAdditionGroupEnd'> when 'true' ->
			      %% Line 1379
			      'false'
			  %% Line 1380
			  <_cor8> when 'true' ->
			      %% Line 1381
			      'true'
			end
		    -| [{'id',{0,0,'-filter_complist/1-fun-0-'}}] )
	      in  %% Line 1376
		  call 'lists':'filter'
		      (_cor3, %% Line 1382
			      CompList)
	  %% Line 1383
	  <{Root,Ext}> when 'true' ->
	      let <_cor4> =
		  %% Line 1384
		  apply 'filter_complist'/1
		      (Ext)
	      in  %% Line 1384
		  {Root,_cor4}
	  %% Line 1385
	  <{Root1,Ext,Root2}> when 'true' ->
	      let <_cor5> =
		  %% Line 1386
		  apply 'filter_complist'/1
		      (Ext)
	      in  %% Line 1386
		  {Root1,_cor5,Root2}
	  ( <_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6})
		  -| [{'function_name',{'filter_complist',1}}] )
	    -| ['compiler_generated'] )
	end
'print_attribute_comment'/4 =
    %% Line 1389
    fun (_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 1391
	    call 'asn1ct_gen':'emit'
		(['nl'|[[37|[37|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	    do  %% Line 1392
		case _cor3 of
		  %% Line 1393
		  <{'Externaltypereference',_cor11,XModule,Name}> when 'true' ->
		      %% Line 1394
		      call 'asn1ct_gen':'emit'
			  (['nl'|[[37|[37|[32|[97|[116|[116|[114|[105|[98|[117|[116|[101|[32]]]]]]]]]]]]]|[_cor1|[[40]|[_cor2|[[41|[32|[32|[32|[69|[120|[116|[101|[114|[110|[97|[108|[32]]]]]]]]]]]]]|[XModule|[[58]|[Name|[]]]]]]]]]])
		  %% Line 1395
		  <_cor12> when 'true' ->
		      %% Line 1396
		      call 'asn1ct_gen':'emit'
			  (['nl'|[[37|[37|[32|[97|[116|[116|[114|[105|[98|[117|[116|[101|[32]]]]]]]]]]]]]|[_cor1|[[40]|[_cor2|[[41|[32|[119|[105|[116|[104|[32|[116|[121|[112|[101|[32]]]]]]]]]]]]|[_cor3|[]]]]]]]])
		end
		do  %% Line 1398
		    case _cor0 of
		      %% Line 1399
		      <'mandatory'> when 'true' ->
			  'ok'
		      %% Line 1401
		      <{'DEFAULT',Def}> when 'true' ->
			  %% Line 1402
			  call 'asn1ct_gen':'emit'
			      ([[32|[68|[69|[70|[65|[85|[76|[84|[32|[61|[32]]]]]]]]]]]|[{'asis',Def}|[]]])
		      %% Line 1403
		      <'OPTIONAL'> when 'true' ->
			  %% Line 1404
			  call 'asn1ct_gen':'emit'
			      ([[32|[79|[80|[84|[73|[79|[78|[65|[76]]]]]]]]]])
		      ( <_cor6> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor6})
			-| ['compiler_generated'] )
		    end
		    %% Line 1406
		    call 'asn1ct_gen':'emit'
			(['nl'|[[37|[37|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|['nl']]])
'mkfuncname'/5 =
    %% Line 1410
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <CurrMod> =
	    %% Line 1411
	    call 'erlang':'get'
		('currmod')
	in  %% Line 1412
	    case _cor2 of
	      %% Line 1413
	      <{'Externaltypereference',_cor17,_cor18,EType}>
		  when call 'erlang':'=:='
			(_cor18,
			 CurrMod) ->
		  let <F> =
		      %% Line 1414
		      call 'lists':'concat'
			  ([[39]|[_cor1|[EType|[_cor0|[[39]]]]]])
		  in  %% Line 1415
		      {F,[63|[77|[79|[68|[85|[76|[69]]]]]]],F}
	      %% Line 1416
	      <{'Externaltypereference',_cor19,Mod,EType}> when 'true' ->
		  let <_cor8> =
		      %% Line 1417
		      call 'lists':'concat'
			  ([[39]|[Mod|[[39|[58|[39]]]|[_cor1|[EType|[_cor0|[[39]]]]]]]])
		  in  let <_cor7> =
			  %% Line 1418
			  call 'lists':'concat'
			      ([[39]|[_cor1|[EType|[[39]]]]])
		      in  %% Line 1417
			  {_cor8,Mod,_cor7}
	      %% Line 1419
	      <{'constructed','bif'}> when 'true' ->
		  let <_cor9> =
		      %% Line 1421
		      call 'asn1ct_gen':'list2name'
			  ([_cor3|_cor4])
		  in  let <F> =
			  %% Line 1420
			  call 'lists':'concat'
			      ([[39]|[_cor1|%% Line 1421
					    [_cor9|%% Line 1422
						   [_cor0|[[39]]]]]])
		      in  %% Line 1423
			  {F,[63|[77|[79|[68|[85|[76|[69]]]]]]],F}
	      ( <_cor11> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor11})
		-| ['compiler_generated'] )
	    end
'empty_lb'/1 =
    %% Line 1426
    fun (_cor0) ->
	case _cor0 of
	  <'ber'> when 'true' ->
	      %% Line 1427
	      [60|[60|[62|[62]]]]
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'empty_lb',1}}] )
	    -| ['compiler_generated'] )
	end
'value_match'/2 =
    %% Line 1429
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Index,Value>
	      when call 'erlang':'is_atom'
		    (Value) ->
	      let <_cor2> =
		  %% Line 1430
		  call 'erlang':'atom_to_list'
		      (Value)
	      in  %% Line 1430
		  apply 'value_match'/2
		      (Index, _cor2)
	  %% Line 1431
	  <[],Value> when 'true' ->
	      %% Line 1432
	      Value
	  %% Line 1433
	  <[{VI,_cor6}|VIs],Value> when 'true' ->
	      let <_cor3> =
		  %% Line 1434
		  call 'lists':'concat'
		      ([[101|[108|[101|[109|[101|[110|[116|[40]]]]]]]]|[VI|[[44]]]])
	      in  %% Line 1434
		  apply 'value_match1'/4
		      (Value, VIs, _cor3, 1)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'value_match',2}}] )
	    -| ['compiler_generated'] )
	end
'value_match1'/4 =
    %% Line 1435
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Value,[],Acc,Depth> when 'true' ->
	      let <_cor4> =
		  %% Line 1436
		  call 'lists':'duplicate'
		      (Depth, [41])
	      in  let <_cor5> =
		      %% Line 1436
		      call 'lists':'concat'
			  (_cor4)
		  in  let <_cor6> =
			  %% Line 1436
			  call 'erlang':'++'
			      (Value, _cor5)
		      in  %% Line 1436
			  call 'erlang':'++'
			      (Acc, _cor6)
	  %% Line 1437
	  <Value,[{VI,_cor14}|VIs],Acc,Depth> when 'true' ->
	      let <_cor8> =
		  %% Line 1438
		  call 'lists':'concat'
		      ([[101|[108|[101|[109|[101|[110|[116|[40]]]]]]]]|[VI|[[44]]]])
	      in  let <_cor9> =
		      %% Line 1438
		      call 'erlang':'++'
			  (Acc, _cor8)
		  in  let <_cor7> =
			  %% Line 1438
			  call 'erlang':'+'
			      (Depth, 1)
		      in  %% Line 1438
			  apply 'value_match1'/4
			      (Value, VIs, _cor9, _cor7)
	  ( <_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10})
		  -| [{'function_name',{'value_match1',4}}] )
	    -| ['compiler_generated'] )
	end
'call'/2 =
    %% Line 1440
    fun (_cor1,_cor0) ->
	%% Line 1441
	call 'asn1ct_func':'call'
	    ('ber', _cor1, _cor0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('asn1ct_constructed_ber_bin_v2')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('asn1ct_constructed_ber_bin_v2', _cor0)
end